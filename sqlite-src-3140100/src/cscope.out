cscope 15 $HOME/others/sqlite/sqlite-src-3140100/src               0003599456
	@alter.c

15 
	~"sqlôeI¡.h
"

21 #i‚de‡
SQLITE_OMIT_ALTERTABLE


37 
	$ª«meTabÀFunc
(

38 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

39 
NŸU£d
,

40 
sqlôe3_vÆue
 **
¨gv


42 c⁄° *
zSql
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

43 c⁄° *
zTabÀName
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

45 
tokí
;

46 
Tokí
 
äame
;

47 c⁄° *
zC§
 = 
zSql
;

48 
Àn
 = 0;

49 *
zRë
;

51 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

53 
	`UNUSED_PARAMETER
(
NŸU£d
);

59 if–
zSql
 ){

61 if–!*
zC§
 ){

67 
äame
.
z
 = (*)
zC§
;

68 
äame
.
n
 = 
Àn
;

74 
zC§
 +
Àn
;

75 
Àn
 = 
	`sqlôe3GëTokí
(
zC§
, &
tokí
);

76 }  
tokí
==
TK_SPACE
 );

77 
	`as£π
–
Àn
>0 );

78 }  
tokí
!=
TK_LP
 &&Åokí!=
TK_USING
 );

80 
zRë
 = 
	`sqlôe3MPrötf
(
db
, "%.*s\"%w\"%s", ()(((
u8
*)
äame
.
z
Ë- 
zSql
),

81 
zSql
, 
zTabÀName
, 
äame
.
z
+äame.
n
);

82 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
SQLITE_DYNAMIC
);

84 
	}
}

101 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


102 
	$ª«meP¨ítFunc
(

103 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

104 
NŸU£d
,

105 
sqlôe3_vÆue
 **
¨gv


107 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

108 *
zOuçut
 = 0;

109 *
zResu…
;

110 c⁄° *
zI≈ut
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

111 c⁄° *
zOld
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

112 c⁄° *
zNew
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

114 c⁄° *
z
;

115 
n
;

116 
tokí
;

118 
	`UNUSED_PARAMETER
(
NŸU£d
);

119 if–
zI≈ut
==0 || 
zOld
==0 ) ;

120 
z
=
zI≈ut
; *z; z=z+
n
){

121 
n
 = 
	`sqlôe3GëTokí
(
z
, &
tokí
);

122 if–
tokí
==
TK_REFERENCES
 ){

123 *
zP¨ít
;

125 
z
 +
n
;

126 
n
 = 
	`sqlôe3GëTokí
(
z
, &
tokí
);

127 } 
tokí
==
TK_SPACE
 );

129 if–
tokí
==
TK_ILLEGAL
 ) ;

130 
zP¨ít
 = 
	`sqlôe3DbSåNDup
(
db
, (c⁄° *)
z
, 
n
);

131 if–
zP¨ít
==0 ) ;

132 
	`sqlôe3DequŸe
(
zP¨ít
);

133 if–0==
	`sqlôe3SåICmp
((c⁄° *)
zOld
, 
zP¨ít
) ){

134 *
zOut
 = 
	`sqlôe3MPrötf
(
db
, "%s%.*s\"%w\"",

135 (
zOuçut
?zOuçut:""), ()(
z
-
zI≈ut
), zI≈ut, (c⁄° *)
zNew


137 
	`sqlôe3DbFªe
(
db
, 
zOuçut
);

138 
zOuçut
 = 
zOut
;

139 
zI≈ut
 = &
z
[
n
];

141 
	`sqlôe3DbFªe
(
db
, 
zP¨ít
);

145 
zResu…
 = 
	`sqlôe3MPrötf
(
db
, "%s%s", (
zOuçut
?zOuçut:""), 
zI≈ut
),

146 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zResu…
, -1, 
SQLITE_DYNAMIC
);

147 
	`sqlôe3DbFªe
(
db
, 
zOuçut
);

148 
	}
}

151 #i‚de‡
SQLITE_OMIT_TRIGGER


159 
	$ª«meTriggîFunc
(

160 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

161 
NŸU£d
,

162 
sqlôe3_vÆue
 **
¨gv


164 c⁄° *
zSql
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

165 c⁄° *
zTabÀName
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

167 
tokí
;

168 
Tokí
 
äame
;

169 
di°
 = 3;

170 c⁄° *
zC§
 = 
zSql
;

171 
Àn
 = 0;

172 *
zRë
;

173 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

175 
	`UNUSED_PARAMETER
(
NŸU£d
);

182 if–
zSql
 ){

185 if–!*
zC§
 ){

191 
äame
.
z
 = (*)
zC§
;

192 
äame
.
n
 = 
Àn
;

198 
zC§
 +
Àn
;

199 
Àn
 = 
	`sqlôe3GëTokí
(
zC§
, &
tokí
);

200 } 
tokí
==
TK_SPACE
 );

201 
	`as£π
–
Àn
>0 );

212 
di°
++;

213 if–
tokí
==
TK_DOT
 ||Åokí==
TK_ON
 ){

214 
di°
 = 0;

216 }  
di°
!=2 || (
tokí
!=
TK_WHEN
 &&Åokí!=
TK_FOR
 &&Åokí!=
TK_BEGIN
) );

221 
zRë
 = 
	`sqlôe3MPrötf
(
db
, "%.*s\"%w\"%s", ()(((
u8
*)
äame
.
z
Ë- 
zSql
),

222 
zSql
, 
zTabÀName
, 
äame
.
z
+äame.
n
);

223 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
SQLITE_DYNAMIC
);

225 
	}
}

231 
	$sqlôe3A…îFun˘i⁄s
(){

232 
FuncDef
 
aA…îTabÀFuncs
[] = {

233 
	`FUNCTION
(
sqlôe_ª«me_èbÀ
, 2, 0, 0, 
ª«meTabÀFunc
),

234 #i‚de‡
SQLITE_OMIT_TRIGGER


235 
	`FUNCTION
(
sqlôe_ª«me_åiggî
, 2, 0, 0, 
ª«meTriggîFunc
),

237 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


238 
	`FUNCTION
(
sqlôe_ª«me_∑ª¡
, 3, 0, 0, 
ª«meP¨ítFunc
),

241 
	`sqlôe3In£πBuûtöFuncs
(
aA…îTabÀFuncs
, 
	`AºaySize
(aAlterTableFuncs));

242 
	}
}

260 *
	$whîeOrName
(
sqlôe3
 *
db
, *
zWhîe
, *
zC⁄°™t
){

261 *
zNew
;

262 if–!
zWhîe
 ){

263 
zNew
 = 
	`sqlôe3MPrötf
(
db
, "«me=%Q", 
zC⁄°™t
);

265 
zNew
 = 
	`sqlôe3MPrötf
(
db
, "%†ORÇame=%Q", 
zWhîe
, 
zC⁄°™t
);

266 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

268  
zNew
;

269 
	}
}

271 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

278 *
	$whîeF‹eignKeys
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

279 
FKey
 *
p
;

280 *
zWhîe
 = 0;

281 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

282 
zWhîe
 = 
	`whîeOrName
(
pP¨£
->
db
, zWhîe, 
p
->
pFrom
->
zName
);

284  
zWhîe
;

285 
	}
}

294 *
	$whîeTempTriggîs
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

295 
Triggî
 *
pTrig
;

296 *
zWhîe
 = 0;

297 c⁄° 
Schema
 *
pTempSchema
 = 
pP¨£
->
db
->
aDb
[1].
pSchema
;

304 if–
pTab
->
pSchema
!=
pTempSchema
 ){

305 
sqlôe3
 *
db
 = 
pP¨£
->db;

306 
pTrig
=
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);ÖTrig;ÖTrigıTrig->
pNext
){

307 if–
pTrig
->
pSchema
==
pTempSchema
 ){

308 
zWhîe
 = 
	`whîeOrName
(
db
, zWhîe, 
pTrig
->
zName
);

312 if–
zWhîe
 ){

313 *
zNew
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "ty≥='åiggî' AND (%s)", 
zWhîe
);

314 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
zWhîe
);

315 
zWhîe
 = 
zNew
;

317  
zWhîe
;

318 
	}
}

328 
	$ªlﬂdTabÀSchema
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, c⁄° *
zName
){

329 
Vdbe
 *
v
;

330 *
zWhîe
;

331 
iDb
;

332 #i‚de‡
SQLITE_OMIT_TRIGGER


333 
Triggî
 *
pTrig
;

336 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

337 if–
	`NEVER
(
v
==0) ) ;

338 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

339 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

340 
	`as£π
–
iDb
>=0 );

342 #i‚de‡
SQLITE_OMIT_TRIGGER


344 
pTrig
=
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);ÖTrig;ÖTrigıTrig->
pNext
){

345 
iTrigDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTrig
->
pSchema
);

346 
	`as£π
–
iTrigDb
==
iDb
 || iTrigDb==1 );

347 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Triggî
, 
iTrigDb
, 0, 0, 
pTrig
->
zName
, 0);

352 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›TabÀ
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

355 
zWhîe
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "tbl_«me=%Q", 
zName
);

356 if–!
zWhîe
 ) ;

357 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
, 
zWhîe
);

359 #i‚de‡
SQLITE_OMIT_TRIGGER


363 if–(
zWhîe
=
	`whîeTempTriggîs
(
pP¨£
, 
pTab
))!=0 ){

364 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 1, 
zWhîe
);

367 
	}
}

377 
	$isSy°emTabÀ
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

378 if–
	`sqlôe3SåÀn30
(
zName
)>6 && 0==
	`sqlôe3SåNICmp
(zName, "sqlite_", 7) ){

379 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêÆãªd", 
zName
);

383 
	}
}

389 
	$sqlôe3A…îRíameTabÀ
(

390 
P¨£
 *
pP¨£
,

391 
SrcLi°
 *
pSrc
,

392 
Tokí
 *
pName


394 
iDb
;

395 *
zDb
;

396 
TabÀ
 *
pTab
;

397 *
zName
 = 0;

398 
sqlôe3
 *
db
 = 
pP¨£
->db;

399 
nTabName
;

400 c⁄° *
zTabName
;

401 
Vdbe
 *
v
;

402 #i‚de‡
SQLITE_OMIT_TRIGGER


403 *
zWhîe
 = 0;

405 
VTabÀ
 *
pVTab
 = 0;

406 
ßvedDbFœgs
;

408 
ßvedDbFœgs
 = 
db
->
Êags
;

409 if–
	`NEVER
(
db
->
mÆlocFaûed
ËË
exô_ª«me_èbÀ
;

410 
	`as£π
–
pSrc
->
nSrc
==1 );

411 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

413 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pSrc
->
a
[0]);

414 if–!
pTab
 ) 
exô_ª«me_èbÀ
;

415 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

416 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

417 
db
->
Êags
 |
SQLITE_Pª„rBuûtö
;

420 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

421 if–!
zName
 ) 
exô_ª«me_èbÀ
;

426 if–
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
Ë|| 
	`sqlôe3FödIndex
(db, zName, zDb) ){

427 
	`sqlôe3Eº‹Msg
(
pP¨£
,

428 "thîêi†ÆªadyánŸhîÅabÀ o∏ödex wôhÅhi†«me: %s", 
zName
);

429 
exô_ª«me_èbÀ
;

435 if–
SQLITE_OK
!=
	`isSy°emTabÀ
(
pP¨£
, 
pTab
->
zName
) ){

436 
exô_ª«me_èbÀ
;

438 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){ 

439 
exô_ª«me_èbÀ
;

442 #i‚de‡
SQLITE_OMIT_VIEW


443 if–
pTab
->
pSñe˘
 ){

444 
	`sqlôe3Eº‹Msg
(
pP¨£
, "võw %†mayÇŸ bêÆãªd", 
pTab
->
zName
);

445 
exô_ª«me_èbÀ
;

449 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


451 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ALTER_TABLE
, 
zDb
, 
pTab
->
zName
, 0) ){

452 
exô_ª«me_èbÀ
;

456 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


457 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

458 
exô_ª«me_èbÀ
;

460 if–
	`IsVútuÆ
(
pTab
) ){

461 
pVTab
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

462 if–
pVTab
->
pVèb
->
pModuÀ
->
xRíame
==0 ){

463 
pVTab
 = 0;

473 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

474 if–
v
==0 ){

475 
exô_ª«me_èbÀ
;

477 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 
pVTab
!=0, 
iDb
);

478 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

485 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


486 if–
pVTab
 ){

487 
i
 = ++
pP¨£
->
nMem
;

488 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
i
, 
zName
);

489 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VRíame
, 
i
, 0, 0,(c⁄° *)
pVTab
, 
P4_VTAB
);

490 
	`sqlôe3MayAb‹t
(
pP¨£
);

495 
zTabName
 = 
pTab
->
zName
;

496 
nTabName
 = 
	`sqlôe3Utf8Ch¨Lí
(
zTabName
, -1);

498 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

499 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

503 if–(
zWhîe
=
	`whîeF‹eignKeys
(
pP¨£
, 
pTab
))!=0 ){

504 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

507 "WHERE %s;", 
zDb
, 
	`SCHEMA_TABLE
(
iDb
), 
zTabName
, 
zName
, 
zWhîe
);

508 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

514 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

516 #ifde‡
SQLITE_OMIT_TRIGGER


531 
zDb
, 
	`SCHEMA_TABLE
(
iDb
), 
zName
, zName, zName,

532 #i‚de‡
SQLITE_OMIT_TRIGGER


533 
zName
,

535 
zName
, 
nTabName
, 
zTabName


538 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


542 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_£quí˚", 
zDb
) ){

543 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

545 
zDb
, 
zName
, 
pTab
->zName);

549 #i‚de‡
SQLITE_OMIT_TRIGGER


554 if–(
zWhîe
=
	`whîeTempTriggîs
(
pP¨£
, 
pTab
))!=0 ){

555 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

559 "WHERE %s;", 
zName
, zName, 
zWhîe
);

560 
	`sqlôe3DbFªe
(
db
, 
zWhîe
);

564 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

565 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

566 
FKey
 *
p
;

567 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

568 
TabÀ
 *
pFrom
 = 
p
->pFrom;

569 if–
pFrom
!=
pTab
 ){

570 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
p
->
pFrom
,ÖFrom->
zName
);

577 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
pTab
, 
zName
);

579 
exô_ª«me_èbÀ
:

580 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

581 
	`sqlôe3DbFªe
(
db
, 
zName
);

582 
db
->
Êags
 = 
ßvedDbFœgs
;

583 
	}
}

593 
	$sqlôe3A…îFöishAddCﬁumn
(
P¨£
 *
pP¨£
, 
Tokí
 *
pCﬁDef
){

594 
TabÀ
 *
pNew
;

595 
TabÀ
 *
pTab
;

596 
iDb
;

597 c⁄° *
zDb
;

598 c⁄° *
zTab
;

599 *
zCﬁ
;

600 
Cﬁumn
 *
pCﬁ
;

601 
Ex¥
 *
pDÊt
;

602 
sqlôe3
 *
db
;

603 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

604 
r1
;

606 
db
 = 
pP¨£
->db;

607 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

608 
	`as£π
–
v
!=0 );

609 
pNew
 = 
pP¨£
->
pNewTabÀ
;

610 
	`as£π
–
pNew
 );

612 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

613 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pNew
->
pSchema
);

614 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

615 
zTab
 = &
pNew
->
zName
[16];

616 
pCﬁ
 = &
pNew
->
aCﬁ
[pNew->
nCﬁ
-1];

617 
pDÊt
 = 
pCﬁ
->pDflt;

618 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, 
zDb
);

619 
	`as£π
–
pTab
 );

621 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


623 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ALTER_TABLE
, 
zDb
, 
pTab
->
zName
, 0) ){

632 
	`as£π
–
pDÊt
==0 ||ÖDÊt->
›
==
TK_SPAN
 );

633 if–
pDÊt
 &&ÖDÊt->
pLe·
->
›
==
TK_NULL
 ){

634 
pDÊt
 = 0;

641 if–
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
 ){

642 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá PRIMARY KEY column");

645 if–
pNew
->
pIndex
 ){

646 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá UNIQUE column");

649 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
Ë&& 
pNew
->
pFKey
 && 
pDÊt
 ){

650 
	`sqlôe3Eº‹Msg
(
pP¨£
,

654 if–
pCﬁ
->
nŸNuŒ
 && !
pDÊt
 ){

655 
	`sqlôe3Eº‹Msg
(
pP¨£
,

663 if–
pDÊt
 ){

664 
sqlôe3_vÆue
 *
pVÆ
 = 0;

665 
rc
;

666 
rc
 = 
	`sqlôe3VÆueFromEx¥
(
db
, 
pDÊt
, 
SQLITE_UTF8
, 
SQLITE_AFF_BLOB
, &
pVÆ
);

667 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

668 if–
rc
!=
SQLITE_OK
 ){

669 
	`as£π
–
db
->
mÆlocFaûed
 == 1 );

672 if–!
pVÆ
 ){

673 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá column withÇon-constant default");

676 
	`sqlôe3VÆueFªe
(
pVÆ
);

680 
zCﬁ
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pCﬁDef
->
z
,ÖCﬁDef->
n
);

681 if–
zCﬁ
 ){

682 *
zEnd
 = &
zCﬁ
[
pCﬁDef
->
n
-1];

683 
ßvedDbFœgs
 = 
db
->
Êags
;

684  
zEnd
>
zCﬁ
 && (*zEnd==';' || 
	`sqlôe3Is•a˚
(*zEnd)) ){

685 *
zEnd
-- = '\0';

687 
db
->
Êags
 |
SQLITE_Pª„rBuûtö
;

688 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

692 
zDb
, 
	`SCHEMA_TABLE
(
iDb
), 
pNew
->
addCﬁOff£t
, 
zCﬁ
,ÖNew->addColOffset+1,

693 
zTab


695 
	`sqlôe3DbFªe
(
db
, 
zCﬁ
);

696 
db
->
Êags
 = 
ßvedDbFœgs
;

703 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

704 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RódCookõ
, 
iDb
, 
r1
, 
BTREE_FILE_FORMAT
);

705 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

706 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
r1
, -2);

707 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
r1
, 
	`sqlôe3VdbeCuºítAddr
(v)+2);

708 
	`VdbeCovîage
(
v
);

709 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_FILE_FORMAT
, 3);

710 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

713 
	`ªlﬂdTabÀSchema
(
pP¨£
, 
pTab
,ÖTab->
zName
);

714 
	}
}

731 
	$sqlôe3A…îBegöAddCﬁumn
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pSrc
){

732 
TabÀ
 *
pNew
;

733 
TabÀ
 *
pTab
;

734 
Vdbe
 *
v
;

735 
iDb
;

736 
i
;

737 
nAŒoc
;

738 
sqlôe3
 *
db
 = 
pP¨£
->db;

741 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

742 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

743 if–
db
->
mÆlocFaûed
 ) 
exô_begö_add_cﬁumn
;

744 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pSrc
->
a
[0]);

745 if–!
pTab
 ) 
exô_begö_add_cﬁumn
;

747 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


748 if–
	`IsVútuÆ
(
pTab
) ){

749 
	`sqlôe3Eº‹Msg
(
pP¨£
, "virtualÅables mayÇot beáltered");

750 
exô_begö_add_cﬁumn
;

755 if–
pTab
->
pSñe˘
 ){

756 
	`sqlôe3Eº‹Msg
(
pP¨£
, "Cannotáddá columnÅoá view");

757 
exô_begö_add_cﬁumn
;

759 if–
SQLITE_OK
!=
	`isSy°emTabÀ
(
pP¨£
, 
pTab
->
zName
) ){

760 
exô_begö_add_cﬁumn
;

763 
	`as£π
–
pTab
->
addCﬁOff£t
>0 );

764 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

773 
pNew
 = (
TabÀ
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Table));

774 if–!
pNew
 ) 
exô_begö_add_cﬁumn
;

775 
pP¨£
->
pNewTabÀ
 = 
pNew
;

776 
pNew
->
nRef
 = 1;

777 
pNew
->
nCﬁ
 = 
pTab
->nCol;

778 
	`as£π
–
pNew
->
nCﬁ
>0 );

779 
nAŒoc
 = (((
pNew
->
nCﬁ
-1)/8)*8)+8;

780 
	`as£π
–
nAŒoc
>=
pNew
->
nCﬁ
 &&ÇAlloc%8==0 &&ÇAlloc-pNew->nCol<8 );

781 
pNew
->
aCﬁ
 = (
Cﬁumn
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Cﬁumn)*
nAŒoc
);

782 
pNew
->
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlôe_Æãπab_%s", 
pTab
->zName);

783 if–!
pNew
->
aCﬁ
 || !pNew->
zName
 ){

784 
	`as£π
–
db
->
mÆlocFaûed
 );

785 
exô_begö_add_cﬁumn
;

787 
	`mem˝y
(
pNew
->
aCﬁ
, 
pTab
->aCﬁ, (
Cﬁumn
)*pNew->
nCﬁ
);

788 
i
=0; i<
pNew
->
nCﬁ
; i++){

789 
Cﬁumn
 *
pCﬁ
 = &
pNew
->
aCﬁ
[
i
];

790 
pCﬁ
->
zName
 = 
	`sqlôe3DbSåDup
(
db
,ÖCol->zName);

791 
pCﬁ
->
zCﬁl
 = 0;

792 
pCﬁ
->
pDÊt
 = 0;

794 
pNew
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

795 
pNew
->
addCﬁOff£t
 = 
pTab
->addColOffset;

796 
pNew
->
nRef
 = 1;

799 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

800 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

801 if–!
v
 ) 
exô_begö_add_cﬁumn
;

802 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

804 
exô_begö_add_cﬁumn
:

805 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

807 
	}
}

	@analyze.c

142 #i‚de‡
SQLITE_OMIT_ANALYZE


143 
	~"sqlôeI¡.h
"

145 #i‡
deföed
(
SQLITE_ENABLE_STAT4
)

146 
	#IsSèt4
 1

	)

147 
	#IsSèt3
 0

	)

148 #ñi‡
deföed
(
SQLITE_ENABLE_STAT3
)

149 
	#IsSèt4
 0

	)

150 
	#IsSèt3
 1

	)

152 
	#IsSèt4
 0

	)

153 
	#IsSèt3
 0

	)

154 #unde‡
SQLITE_STAT4_SAMPLES


155 
	#SQLITE_STAT4_SAMPLES
 1

	)

157 
	#IsSèt34
 (
IsSèt3
+
IsSèt4
Ë

	)

172 
	$›íSètTabÀ
(

173 
P¨£
 *
pP¨£
,

174 
iDb
,

175 
iSètCur
,

176 c⁄° *
zWhîe
,

177 c⁄° *
zWhîeTy≥


180 c⁄° *
zName
;

181 c⁄° *
zCﬁs
;

182 } 
aTabÀ
[] = {

184 #i‡
	`deföed
(
SQLITE_ENABLE_STAT4
)

187 #ñi‡
	`deföed
(
SQLITE_ENABLE_STAT3
)

195 
i
;

196 
sqlôe3
 *
db
 = 
pP¨£
->db;

197 
Db
 *
pDb
;

198 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

199 
aRoŸ
[
	`AºaySize
(
aTabÀ
)];

200 
u8
 
aCª©eTbl
[
	`AºaySize
(
aTabÀ
)];

202 if–
v
==0 ) ;

203 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

204 
	`as£π
–
	`sqlôe3VdbeDb
(
v
)==
db
 );

205 
pDb
 = &
db
->
aDb
[
iDb
];

210 
i
=0; i<
	`AºaySize
(
aTabÀ
); i++){

211 c⁄° *
zTab
 = 
aTabÀ
[
i
].
zName
;

212 
TabÀ
 *
pSèt
;

213 if–(
pSèt
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, 
pDb
->
zName
))==0 ){

214 if–
aTabÀ
[
i
].
zCﬁs
 ){

219 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

220 "CREATE TABLE %Q.%s(%s)", 
pDb
->
zName
, 
zTab
, 
aTabÀ
[
i
].
zCﬁs


222 
aRoŸ
[
i
] = 
pP¨£
->
ªgRoŸ
;

223 
aCª©eTbl
[
i
] = 
OPFLAG_P2ISREG
;

229 
aRoŸ
[
i
] = 
pSèt
->
äum
;

230 
aCª©eTbl
[
i
] = 0;

231 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
aRoŸ
[
i
], 1, 
zTab
);

232 if–
zWhîe
 ){

233 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

235 
pDb
->
zName
, 
zTab
, 
zWhîeTy≥
, 
zWhîe


239 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
aRoŸ
[
i
], 
iDb
);

245 
i
=0; 
aTabÀ
[i].
zCﬁs
; i++){

246 
	`as£π
–
i
<
	`AºaySize
(
aTabÀ
) );

247 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nWrôe
, 
iSètCur
+
i
, 
aRoŸ
[i], 
iDb
, 3);

248 
	`sqlôe3VdbeCh™geP5
(
v
, 
aCª©eTbl
[
i
]);

249 
	`VdbeCommít
((
v
, 
aTabÀ
[
i
].
zName
));

251 
	}
}

256 #i‚de‡
SQLITE_STAT4_SAMPLES


257 
	#SQLITE_STAT4_SAMPLES
 24

	)

265 
Sèt4Accum
 
	tSèt4Accum
;

266 
Sèt4Sam∂e
 
	tSèt4Sam∂e
;

267 
	sSèt4Sam∂e
 {

268 
tRow˙t
 *
	m™Eq
;

269 
tRow˙t
 *
	m™DLt
;

270 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


271 
tRow˙t
 *
	m™Lt
;

273 
i64
 
	miRowid
;

274 
u8
 *
	maRowid
;

275 } 
	mu
;

276 
u32
 
	mnRowid
;

277 
u8
 
	misPSam∂e
;

278 
	miCﬁ
;

279 
u32
 
	miHash
;

282 
	sSèt4Accum
 {

283 
tRow˙t
 
	mnRow
;

284 
tRow˙t
 
	mnPSam∂e
;

285 
	mnCﬁ
;

286 
	mnKeyCﬁ
;

287 
	mmxSam∂e
;

288 
Sèt4Sam∂e
 
	mcuºít
;

289 
u32
 
	miP∫
;

290 
Sèt4Sam∂e
 *
	maBe°
;

291 
	miMö
;

292 
	mnSam∂e
;

293 
	miGë
;

294 
Sèt4Sam∂e
 *
	ma
;

295 
sqlôe3
 *
	mdb
;

300 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


301 
	$ßm∂eCÀ¨
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
){

302 
	`as£π
–
db
!=0 );

303 if–
p
->
nRowid
 ){

304 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
aRowid
);

305 
p
->
nRowid
 = 0;

307 
	}
}

312 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


313 
	$ßm∂eSëRowid
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
, 
n
, c⁄° 
u8
 *
pD©a
){

314 
	`as£π
–
db
!=0 );

315 if–
p
->
nRowid
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
u
.
aRowid
);

316 
p
->
u
.
aRowid
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

317 if–
p
->
u
.
aRowid
 ){

318 
p
->
nRowid
 = 
n
;

319 
	`mem˝y
(
p
->
u
.
aRowid
, 
pD©a
, 
n
);

321 
p
->
nRowid
 = 0;

323 
	}
}

328 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


329 
	$ßm∂eSëRowidI¡64
(
sqlôe3
 *
db
, 
Sèt4Sam∂e
 *
p
, 
i64
 
iRowid
){

330 
	`as£π
–
db
!=0 );

331 if–
p
->
nRowid
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
u
.
aRowid
);

332 
p
->
nRowid
 = 0;

333 
p
->
u
.
iRowid
 = iRowid;

334 
	}
}

341 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


342 
	$ßm∂eC›y
(
Sèt4Accum
 *
p
, 
Sèt4Sam∂e
 *
pTo
, Sèt4Sam∂ê*
pFrom
){

343 
pTo
->
isPSam∂e
 = 
pFrom
->isPSample;

344 
pTo
->
iCﬁ
 = 
pFrom
->iCol;

345 
pTo
->
iHash
 = 
pFrom
->iHash;

346 
	`mem˝y
(
pTo
->
™Eq
, 
pFrom
->™Eq, (
tRow˙t
)*
p
->
nCﬁ
);

347 
	`mem˝y
(
pTo
->
™Lt
, 
pFrom
->™Lt, (
tRow˙t
)*
p
->
nCﬁ
);

348 
	`mem˝y
(
pTo
->
™DLt
, 
pFrom
->™DLt, (
tRow˙t
)*
p
->
nCﬁ
);

349 if–
pFrom
->
nRowid
 ){

350 
	`ßm∂eSëRowid
(
p
->
db
, 
pTo
, 
pFrom
->
nRowid
,ÖFrom->
u
.
aRowid
);

352 
	`ßm∂eSëRowidI¡64
(
p
->
db
, 
pTo
, 
pFrom
->
u
.
iRowid
);

354 
	}
}

360 
	$°©4De°ru˘‹
(*
pOld
){

361 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
pOld
;

362 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


363 
i
;

364 
i
=0; i<
p
->
nCﬁ
; i++Ë
	`ßm∂eCÀ¨
’->
db
,Ö->
aBe°
+i);

365 
i
=0; i<
p
->
mxSam∂e
; i++Ë
	`ßm∂eCÀ¨
’->
db
,Ö->
a
+i);

366 
	`ßm∂eCÀ¨
(
p
->
db
, &p->
cuºít
);

368 
	`sqlôe3DbFªe
(
p
->
db
,Ö);

369 
	}
}

394 
	$°©Inô
(

395 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

396 
¨gc
,

397 
sqlôe3_vÆue
 **
¨gv


399 
Sèt4Accum
 *
p
;

400 
nCﬁ
;

401 
nKeyCﬁ
;

402 
nCﬁUp
;

403 
n
;

404 
sqlôe3
 *
db
;

405 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


406 
mxSam∂e
 = 
SQLITE_STAT4_SAMPLES
;

410 
	`UNUSED_PARAMETER
(
¨gc
);

411 
nCﬁ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

412 
	`as£π
–
nCﬁ
>0 );

413 
nCﬁUp
 = (
tRow˙t
)<8 ? (
nCﬁ
+1)&~1 :ÇCol;

414 
nKeyCﬁ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

415 
	`as£π
–
nKeyCﬁ
<=
nCﬁ
 );

416 
	`as£π
–
nKeyCﬁ
>0 );

419 
n
 = (*
p
)

420 + (
tRow˙t
)*
nCﬁUp


421 + (
tRow˙t
)*
nCﬁUp


422 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


423 + (
tRow˙t
)*
nCﬁUp


424 + (
Sèt4Sam∂e
)*(
nCﬁ
+
mxSam∂e
)

425 + (
tRow˙t
)*3*
nCﬁUp
*(
nCﬁ
+
mxSam∂e
)

428 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

429 
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
n
);

430 if–
p
==0 ){

431 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

435 
p
->
db
 = db;

436 
p
->
nRow
 = 0;

437 
p
->
nCﬁ
 =ÇCol;

438 
p
->
nKeyCﬁ
 =ÇKeyCol;

439 
p
->
cuºít
.
™DLt
 = (
tRow˙t
*)&p[1];

440 
p
->
cuºít
.
™Eq
 = &p->cuºít.
™DLt
[
nCﬁUp
];

442 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


444 
u8
 *
pS∑˚
;

445 
i
;

447 
p
->
iGë
 = -1;

448 
p
->
mxSam∂e
 = mxSample;

449 
p
->
nPSam∂e
 = (
tRow˙t
)(
	`sqlôe3_vÆue_öt64
(
¨gv
[2])/(
mxSam∂e
/3+1) + 1);

450 
p
->
cuºít
.
™Lt
 = &p->cuºít.
™Eq
[
nCﬁUp
];

451 
p
->
iP∫
 = 0x689e962d*(
u32
)
nCﬁ
 ^ 0xd0944565*(u32)
	`sqlôe3_vÆue_öt
(
¨gv
[2]);

454 
p
->
a
 = (
Sèt4Sam∂e
*)&p->
cuºít
.
™Lt
[
nCﬁUp
];

455 
p
->
aBe°
 = &p->
a
[
mxSam∂e
];

456 
pS∑˚
 = (
u8
*)(&
p
->
a
[
mxSam∂e
+
nCﬁ
]);

457 
i
=0; i<(
mxSam∂e
+
nCﬁ
); i++){

458 
p
->
a
[
i
].
™Eq
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

459 
p
->
a
[
i
].
™Lt
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

460 
p
->
a
[
i
].
™DLt
 = (
tRow˙t
 *)
pS∑˚
;ÖS∑˚ +(—Row˙tË* 
nCﬁUp
);

462 
	`as£π
–(
pS∑˚
 - (
u8
*)
p
)==
n
 );

464 
i
=0; i<
nCﬁ
; i++){

465 
p
->
aBe°
[
i
].
iCﬁ
 = i;

474 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
p
, (*p), 
°©4De°ru˘‹
);

475 
	}
}

476 c⁄° 
FuncDef
 
	g°©InôFuncdef
 = {

477 2+
IsSèt34
,

478 
SQLITE_UTF8
,

481 
°©Inô
,

487 #ifde‡
SQLITE_ENABLE_STAT4


499 
	$ßm∂eIsBëãrPo°
(

500 
Sèt4Accum
 *
pAccum
,

501 
Sèt4Sam∂e
 *
pNew
,

502 
Sèt4Sam∂e
 *
pOld


504 
nCﬁ
 = 
pAccum
->nCol;

505 
i
;

506 
	`as£π
–
pNew
->
iCﬁ
==
pOld
->iCol );

507 
i
=
pNew
->
iCﬁ
+1; i<
nCﬁ
; i++){

508 if–
pNew
->
™Eq
[
i
]>
pOld
->anEq[i] )  1;

509 if–
pNew
->
™Eq
[
i
]<
pOld
->anEq[i] )  0;

511 if–
pNew
->
iHash
>
pOld
->iHash )  1;

513 
	}
}

516 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


523 
	$ßm∂eIsBëãr
(

524 
Sèt4Accum
 *
pAccum
,

525 
Sèt4Sam∂e
 *
pNew
,

526 
Sèt4Sam∂e
 *
pOld


528 
tRow˙t
 
nEqNew
 = 
pNew
->
™Eq
[pNew->
iCﬁ
];

529 
tRow˙t
 
nEqOld
 = 
pOld
->
™Eq
[pOld->
iCﬁ
];

531 
	`as£π
–
pOld
->
isPSam∂e
==0 && 
pNew
->isPSample==0 );

532 
	`as£π
–
IsSèt4
 || (
pNew
->
iCﬁ
==0 && 
pOld
->iCol==0) );

534 if–(
nEqNew
>
nEqOld
) )  1;

535 #ifde‡
SQLITE_ENABLE_STAT4


536 if–
nEqNew
==
nEqOld
 ){

537 if–
pNew
->
iCﬁ
<
pOld
->iCol )  1;

538  (
pNew
->
iCﬁ
==
pOld
->iCﬁ && 
	`ßm∂eIsBëãrPo°
(
pAccum
,ÖNew,ÖOld));

542  (
nEqNew
==
nEqOld
 && 
pNew
->
iHash
>
pOld
->iHash);

544 
	}
}

550 
	$ßm∂eIn£π
(
Sèt4Accum
 *
p
, 
Sèt4Sam∂e
 *
pNew
, 
nEqZîo
){

551 
Sèt4Sam∂e
 *
pSam∂e
 = 0;

552 
i
;

554 
	`as£π
–
IsSèt4
 || 
nEqZîo
==0 );

556 #ifde‡
SQLITE_ENABLE_STAT4


557 if–
pNew
->
isPSam∂e
==0 ){

558 
Sèt4Sam∂e
 *
pUpgøde
 = 0;

559 
	`as£π
–
pNew
->
™Eq
[pNew->
iCﬁ
]>0 );

566 
i
=
p
->
nSam∂e
-1; i>=0; i--){

567 
Sèt4Sam∂e
 *
pOld
 = &
p
->
a
[
i
];

568 if–
pOld
->
™Eq
[
pNew
->
iCﬁ
]==0 ){

569 if–
pOld
->
isPSam∂e
 ) ;

570 
	`as£π
–
pOld
->
iCﬁ
>
pNew
->iCol );

571 
	`as£π
–
	`ßm∂eIsBëãr
(
p
, 
pNew
, 
pOld
) );

572 if–
pUpgøde
==0 || 
	`ßm∂eIsBëãr
(
p
, 
pOld
,ÖUpgrade) ){

573 
pUpgøde
 = 
pOld
;

577 if–
pUpgøde
 ){

578 
pUpgøde
->
iCﬁ
 = 
pNew
->iCol;

579 
pUpgøde
->
™Eq
[pUpgøde->
iCﬁ
] = 
pNew
->anEq[pUpgrade->iCol];

580 
föd_√w_mö
;

586 if–
p
->
nSam∂e
>ı->
mxSam∂e
 ){

587 
Sèt4Sam∂e
 *
pMö
 = &
p
->
a
[p->
iMö
];

588 
tRow˙t
 *
™Eq
 = 
pMö
->anEq;

589 
tRow˙t
 *
™Lt
 = 
pMö
->anLt;

590 
tRow˙t
 *
™DLt
 = 
pMö
->anDLt;

591 
	`ßm∂eCÀ¨
(
p
->
db
, 
pMö
);

592 
	`memmove
(
pMö
, &pMö[1], (
p
->
a
[0])*’->
nSam∂e
-p->
iMö
-1));

593 
pSam∂e
 = &
p
->
a
[p->
nSam∂e
-1];

594 
pSam∂e
->
nRowid
 = 0;

595 
pSam∂e
->
™Eq
 =ánEq;

596 
pSam∂e
->
™DLt
 =ánDLt;

597 
pSam∂e
->
™Lt
 =ánLt;

598 
p
->
nSam∂e
 =Ö->
mxSam∂e
-1;

604 #ifde‡
SQLITE_ENABLE_STAT4


605 
	`as£π
–
p
->
nSam∂e
==0

606 || 
pNew
->
™Lt
[
p
->
nCﬁ
-1] >Ö->
a
[p->
nSam∂e
-1].anLt[p->nCol-1] );

610 
pSam∂e
 = &
p
->
a
[p->
nSam∂e
];

611 
	`ßm∂eC›y
(
p
, 
pSam∂e
, 
pNew
);

612 
p
->
nSam∂e
++;

615 
	`mem£t
(
pSam∂e
->
™Eq
, 0, (
tRow˙t
)*
nEqZîo
);

617 #ifde‡
SQLITE_ENABLE_STAT4


618 
föd_√w_mö
:

620 if–
p
->
nSam∂e
>ı->
mxSam∂e
 ){

621 
iMö
 = -1;

622 
i
=0; i<
p
->
mxSam∂e
; i++){

623 if–
p
->
a
[
i
].
isPSam∂e
 ) ;

624 if–
iMö
<0 || 
	`ßm∂eIsBëãr
(
p
, &p->
a
[iMö], &p->a[
i
]) ){

625 
iMö
 = 
i
;

628 
	`as£π
–
iMö
>=0 );

629 
p
->
iMö
 = iMin;

631 
	}
}

640 
	$ßm∂ePushPªvious
(
Sèt4Accum
 *
p
, 
iChng
){

641 #ifde‡
SQLITE_ENABLE_STAT4


642 
i
;

646 
i
=(
p
->
nCﬁ
-2); i>=
iChng
; i--){

647 
Sèt4Sam∂e
 *
pBe°
 = &
p
->
aBe°
[
i
];

648 
pBe°
->
™Eq
[
i
] = 
p
->
cuºít
.anEq[i];

649 if–
p
->
nSam∂e
<p->
mxSam∂e
 || 
	`ßm∂eIsBëãr
’, 
pBe°
, &p->
a
[p->
iMö
]) ){

650 
	`ßm∂eIn£π
(
p
, 
pBe°
, 
i
);

655 
i
=
p
->
nSam∂e
-1; i>=0; i--){

656 
j
;

657 
j
=
iChng
; j<
p
->
nCﬁ
; j++){

658 if–
p
->
a
[
i
].
™Eq
[
j
]==0 )Ö->a[i].™Eq[j] =Ö->
cuºít
.anEq[j];

663 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë&& !deföed(
SQLITE_ENABLE_STAT4
)

664 if–
iChng
==0 ){

665 
tRow˙t
 
nLt
 = 
p
->
cuºít
.
™Lt
[0];

666 
tRow˙t
 
nEq
 = 
p
->
cuºít
.
™Eq
[0];

669 if–(
nLt
/
p
->
nPSam∂e
)!=“Lt+
nEq
)/p->nPSample ){

670 
p
->
cuºít
.
isPSam∂e
 = 1;

671 
	`ßm∂eIn£π
(
p
, &p->
cuºít
, 0);

672 
p
->
cuºít
.
isPSam∂e
 = 0;

676 if–
p
->
nSam∂e
<p->
mxSam∂e


677 || 
	`ßm∂eIsBëãr
(
p
, &p->
cuºít
, &p->
a
[p->
iMö
])

679 
	`ßm∂eIn£π
(
p
, &p->
cuºít
, 0);

684 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


685 
	`UNUSED_PARAMETER
–
p
 );

686 
	`UNUSED_PARAMETER
–
iChng
 );

688 
	}
}

706 
	$°©Push
(

707 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

708 
¨gc
,

709 
sqlôe3_vÆue
 **
¨gv


711 
i
;

714 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

715 
iChng
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

717 
	`UNUSED_PARAMETER
–
¨gc
 );

718 
	`UNUSED_PARAMETER
–
c⁄ãxt
 );

719 
	`as£π
–
p
->
nCﬁ
>0 );

720 
	`as£π
–
iChng
<
p
->
nCﬁ
 );

722 if–
p
->
nRow
==0 ){

724 
i
=0; i<
p
->
nCﬁ
; i++Ëp->
cuºít
.
™Eq
[i] = 1;

727 
	`ßm∂ePushPªvious
(
p
, 
iChng
);

731 
i
=0; i<
iChng
; i++){

732 
p
->
cuºít
.
™Eq
[
i
]++;

734 
i
=
iChng
; i<
p
->
nCﬁ
; i++){

735 
p
->
cuºít
.
™DLt
[
i
]++;

736 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


737 
p
->
cuºít
.
™Lt
[
i
] +p->cuºít.
™Eq
[i];

739 
p
->
cuºít
.
™Eq
[
i
] = 1;

742 
p
->
nRow
++;

743 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


744 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[2])==
SQLITE_INTEGER
 ){

745 
	`ßm∂eSëRowidI¡64
(
p
->
db
, &p->
cuºít
, 
	`sqlôe3_vÆue_öt64
(
¨gv
[2]));

747 
	`ßm∂eSëRowid
(
p
->
db
, &p->
cuºít
, 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]),

748 
	`sqlôe3_vÆue_blob
(
¨gv
[2]));

750 
p
->
cuºít
.
iHash
 =Ö->
iP∫
 =Ö->iPrn*1103515245 + 12345;

753 #ifde‡
SQLITE_ENABLE_STAT4


755 
tRow˙t
 
nLt
 = 
p
->
cuºít
.
™Lt
[p->
nCﬁ
-1];

758 if–(
nLt
/
p
->
nPSam∂e
)!=(nLt+1)/p->nPSample ){

759 
p
->
cuºít
.
isPSam∂e
 = 1;

760 
p
->
cuºít
.
iCﬁ
 = 0;

761 
	`ßm∂eIn£π
(
p
, &p->
cuºít
,Ö->
nCﬁ
-1);

762 
p
->
cuºít
.
isPSam∂e
 = 0;

766 
i
=0; i<(
p
->
nCﬁ
-1); i++){

767 
p
->
cuºít
.
iCﬁ
 = 
i
;

768 if–
i
>=
iChng
 || 
	`ßm∂eIsBëãrPo°
(
p
, &p->
cuºít
, &p->
aBe°
[i]) ){

769 
	`ßm∂eC›y
(
p
, &p->
aBe°
[
i
], &p->
cuºít
);

774 
	}
}

775 c⁄° 
FuncDef
 
	g°©PushFuncdef
 = {

776 2+
IsSèt34
,

777 
SQLITE_UTF8
,

780 
°©Push
,

786 
	#STAT_GET_STAT1
 0

	)

787 
	#STAT_GET_ROWID
 1

	)

788 
	#STAT_GET_NEQ
 2

	)

789 
	#STAT_GET_NLT
 3

	)

790 
	#STAT_GET_NDLT
 4

	)

805 
	$°©Gë
(

806 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

807 
¨gc
,

808 
sqlôe3_vÆue
 **
¨gv


810 
Sèt4Accum
 *
p
 = (Sèt4Accum*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

811 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


813 
eCÆl
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

814 
	`as£π
–
¨gc
==2 );

815 
	`as£π
–
eCÆl
==
STAT_GET_STAT1
 ||ÉCÆl==
STAT_GET_NEQ


816 || 
eCÆl
==
STAT_GET_ROWID
 ||ÉCÆl==
STAT_GET_NLT


817 || 
eCÆl
==
STAT_GET_NDLT


819 if–
eCÆl
==
STAT_GET_STAT1
 )

821 
	`as£π
–
¨gc
==1 );

845 *
z
;

846 
i
;

848 *
zRë
 = 
	`sqlôe3MÆlocZîo
–(
p
->
nKeyCﬁ
+1)*25 );

849 if–
zRë
==0 ){

850 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

854 
	`sqlôe3_¢¥ötf
(24, 
zRë
, "%Œu", (
u64
)
p
->
nRow
);

855 
z
 = 
zRë
 + 
	`sqlôe3SåÀn30
(zRet);

856 
i
=0; i<
p
->
nKeyCﬁ
; i++){

857 
u64
 
nDi°ö˘
 = 
p
->
cuºít
.
™DLt
[
i
] + 1;

858 
u64
 
iVÆ
 = (
p
->
nRow
 + 
nDi°ö˘
 - 1) /ÇDistinct;

859 
	`sqlôe3_¢¥ötf
(24, 
z
, " %Œu", 
iVÆ
);

860 
z
 +
	`sqlôe3SåÀn30
(z);

861 
	`as£π
–
p
->
cuºít
.
™Eq
[
i
] );

863 
	`as£π
–
z
[0]=='\0' && z>
zRë
 );

865 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
sqlôe3_‰ì
);

867 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


868 if–
eCÆl
==
STAT_GET_ROWID
 ){

869 if–
p
->
iGë
<0 ){

870 
	`ßm∂ePushPªvious
(
p
, 0);

871 
p
->
iGë
 = 0;

873 if–
p
->
iGë
<p->
nSam∂e
 ){

874 
Sèt4Sam∂e
 *
pS
 = 
p
->
a
 +Ö->
iGë
;

875 if–
pS
->
nRowid
==0 ){

876 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
pS
->
u
.
iRowid
);

878 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
pS
->
u
.
aRowid
,ÖS->
nRowid
,

879 
SQLITE_TRANSIENT
);

883 
tRow˙t
 *
aC¡
 = 0;

885 
	`as£π
–
p
->
iGë
<p->
nSam∂e
 );

886  
eCÆl
 ){

887 
STAT_GET_NEQ
: 
aC¡
 = 
p
->
a
[p->
iGë
].
™Eq
; ;

888 
STAT_GET_NLT
: 
aC¡
 = 
p
->
a
[p->
iGë
].
™Lt
; ;

890 
aC¡
 = 
p
->
a
[p->
iGë
].
™DLt
;

891 
p
->
iGë
++;

896 if–
IsSèt3
 ){

897 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, (
i64
)
aC¡
[0]);

899 *
zRë
 = 
	`sqlôe3MÆlocZîo
(
p
->
nCﬁ
 * 25);

900 if–
zRë
==0 ){

901 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

903 
i
;

904 *
z
 = 
zRë
;

905 
i
=0; i<
p
->
nCﬁ
; i++){

906 
	`sqlôe3_¢¥ötf
(24, 
z
, "%Œu ", (
u64
)
aC¡
[
i
]);

907 
z
 +
	`sqlôe3SåÀn30
(z);

909 
	`as£π
–
z
[0]=='\0' && z>
zRë
 );

910 
z
[-1] = '\0';

911 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zRë
, -1, 
sqlôe3_‰ì
);

916 #i‚de‡
SQLITE_DEBUG


917 
	`UNUSED_PARAMETER
–
¨gc
 );

919 
	}
}

920 c⁄° 
FuncDef
 
	g°©GëFuncdef
 = {

921 1+
IsSèt34
,

922 
SQLITE_UTF8
,

925 
°©Gë
,

931 
	$ˇŒSètGë
(
Vdbe
 *
v
, 
ªgSèt4
, 
iP¨am
, 
ªgOut
){

932 
	`as£π
–
ªgOut
!=
ªgSèt4
 &&ÑegOut!=regStat4+1 );

933 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


934 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
iP¨am
, 
ªgSèt4
+1);

935 #ñi‡
SQLITE_DEBUG


936 
	`as£π
–
iP¨am
==
STAT_GET_STAT1
 );

938 
	`UNUSED_PARAMETER
–
iP¨am
 );

940 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgSèt4
, 
ªgOut
,

941 (*)&
°©GëFuncdef
, 
P4_FUNCDEF
);

942 
	`sqlôe3VdbeCh™geP5
(
v
, 1 + 
IsSèt34
);

943 
	}
}

949 
	$™ÆyzeO√TabÀ
(

950 
P¨£
 *
pP¨£
,

951 
TabÀ
 *
pTab
,

952 
Index
 *
pO∆yIdx
,

953 
iSètCur
,

954 
iMem
,

955 
iTab


957 
sqlôe3
 *
db
 = 
pP¨£
->db;

958 
Index
 *
pIdx
;

959 
iIdxCur
;

960 
iTabCur
;

961 
Vdbe
 *
v
;

962 
i
;

963 
jZîoRows
 = -1;

964 
iDb
;

965 
u8
 
√edTabÀC¡
 = 1;

966 
ªgNewRowid
 = 
iMem
++;

967 
ªgSèt4
 = 
iMem
++;

968 
ªgChng
 = 
iMem
++;

969 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


970 
ªgRowid
 = 
iMem
++;

972 
ªgTemp
 = 
iMem
++;

973 
ªgTab«me
 = 
iMem
++;

974 
ªgIdx«me
 = 
iMem
++;

975 
ªgSèt1
 = 
iMem
++;

976 
ªgPªv
 = 
iMem
;

978 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
iMem
);

979 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

980 if–
v
==0 || 
	`NEVER
(
pTab
==0) ){

983 if–
pTab
->
äum
==0 ){

987 if–
	`sqlôe3_°æike
("sqlôe_%", 
pTab
->
zName
, 0)==0 ){

991 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

992 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

993 
	`as£π
–
iDb
>=0 );

994 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

995 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


996 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_ANALYZE
, 
pTab
->
zName
, 0,

997 
db
->
aDb
[
iDb
].
zName
 ) ){

1006 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

1007 
iTabCur
 = 
iTab
++;

1008 
iIdxCur
 = 
iTab
++;

1009 
pP¨£
->
nTab
 = 
	`MAX
’P¨£->nTab, 
iTab
);

1010 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTabCur
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

1011 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgTab«me
, 
pTab
->
zName
);

1013 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1014 
nCﬁ
;

1015 
addrRewöd
;

1016 
addrNextRow
;

1017 c⁄° *
zIdxName
;

1018 
nCﬁTe°
;

1020 if–
pO∆yIdx
 &&ÖO∆yIdx!=
pIdx
 ) ;

1021 if–
pIdx
->
pP¨tIdxWhîe
==0 ) 
√edTabÀC¡
 = 0;

1022 if–!
	`HasRowid
(
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIdx
) ){

1023 
nCﬁ
 = 
pIdx
->
nKeyCﬁ
;

1024 
zIdxName
 = 
pTab
->
zName
;

1025 
nCﬁTe°
 = 
nCﬁ
 - 1;

1027 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

1028 
zIdxName
 = 
pIdx
->
zName
;

1029 
nCﬁTe°
 = 
pIdx
->
uniqNŸNuŒ
 ?ÖIdx->
nKeyCﬁ
-1 : 
nCﬁ
-1;

1033 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgIdx«me
, 
zIdxName
);

1034 
	`VdbeCommít
((
v
, "A«lysi†f‹ %s.%s", 
pTab
->
zName
, 
zIdxName
));

1072 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
ªgPªv
+
nCﬁTe°
);

1075 
	`as£π
–
iDb
==
	`sqlôe3SchemaToIndex
(
db
, 
pIdx
->
pSchema
) );

1076 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iIdxCur
, 
pIdx
->
äum
, 
iDb
);

1077 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1078 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

1090 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1091 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iIdxCur
, 
ªgSèt4
+3);

1093 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nCﬁ
, 
ªgSèt4
+1);

1094 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
pIdx
->
nKeyCﬁ
, 
ªgSèt4
+2);

1095 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgSèt4
+1,ÑegStat4,

1096 (*)&
°©InôFuncdef
, 
P4_FUNCDEF
);

1097 
	`sqlôe3VdbeCh™geP5
(
v
, 2+
IsSèt34
);

1107 
addrRewöd
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iIdxCur
);

1108 
	`VdbeCovîage
(
v
);

1109 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgChng
);

1110 
addrNextRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1112 if–
nCﬁTe°
>0 ){

1113 
ídDi°ö˘Te°
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1114 *
aGŸoChng
;

1115 
aGŸoChng
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*
nCﬁTe°
);

1116 if–
aGŸoChng
==0 ) ;

1128 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1129 
addrNextRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1130 if–
nCﬁTe°
==1 && 
pIdx
->
nKeyCﬁ
==1 && 
	`IsUniqueIndex
(pIdx) ){

1134 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NŸNuŒ
, 
ªgPªv
, 
ídDi°ö˘Te°
);

1135 
	`VdbeCovîage
(
v
);

1137 
i
=0; i<
nCﬁTe°
; i++){

1138 *
pCﬁl
 = (*)
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
pIdx
->
azCﬁl
[
i
]);

1139 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
i
, 
ªgChng
);

1140 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
i
, 
ªgTemp
);

1141 
aGŸoChng
[
i
] =

1142 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ne
, 
ªgTemp
, 0, 
ªgPªv
+
i
, 
pCﬁl
, 
P4_COLLSEQ
);

1143 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

1144 
	`VdbeCovîage
(
v
);

1146 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nCﬁTe°
, 
ªgChng
);

1147 
	`sqlôe3VdbeGŸo
(
v
, 
ídDi°ö˘Te°
);

1157 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrNextRow
-1);

1158 
i
=0; i<
nCﬁTe°
; i++){

1159 
	`sqlôe3VdbeJumpHîe
(
v
, 
aGŸoChng
[
i
]);

1160 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
i
, 
ªgPªv
+i);

1162 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídDi°ö˘Te°
);

1163 
	`sqlôe3DbFªe
(
db
, 
aGŸoChng
);

1173 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1174 
	`as£π
–
ªgRowid
==(
ªgSèt4
+2) );

1175 if–
	`HasRowid
(
pTab
) ){

1176 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iIdxCur
, 
ªgRowid
);

1178 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pIdx
->
pTabÀ
);

1179 
j
, 
k
, 
ªgKey
;

1180 
ªgKey
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pPk
->
nKeyCﬁ
);

1181 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

1182 
k
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
j
]);

1183 
	`as£π
–
k
>=0 && k<
pTab
->
nCﬁ
 );

1184 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
k
, 
ªgKey
+
j
);

1185 
	`VdbeCommít
((
v
, "%s", 
pTab
->
aCﬁ
[
pPk
->
aiCﬁumn
[
j
]].
zName
));

1187 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgKey
, 
pPk
->
nKeyCﬁ
, 
ªgRowid
);

1188 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgKey
, 
pPk
->
nKeyCﬁ
);

1191 
	`as£π
–
ªgChng
==(
ªgSèt4
+1) );

1192 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 1, 
ªgSèt4
, 
ªgTemp
,

1193 (*)&
°©PushFuncdef
, 
P4_FUNCDEF
);

1194 
	`sqlôe3VdbeCh™geP5
(
v
, 2+
IsSèt34
);

1195 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iIdxCur
, 
addrNextRow
); 
	`VdbeCovîage
(v);

1198 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_STAT1
, 
ªgSèt1
);

1199 
	`as£π
–"BBB"[0]==
SQLITE_AFF_TEXT
 );

1200 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 3, 
ªgTemp
, "BBB", 0);

1201 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
, 
ªgNewRowid
);

1202 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
, 
ªgTemp
, 
ªgNewRowid
);

1203 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1206 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1208 
ªgEq
 = 
ªgSèt1
;

1209 
ªgLt
 = 
ªgSèt1
+1;

1210 
ªgDLt
 = 
ªgSèt1
+2;

1211 
ªgSam∂e
 = 
ªgSèt1
+3;

1212 
ªgCﬁ
 = 
ªgSèt1
+4;

1213 
ªgSam∂eRowid
 = 
ªgCﬁ
 + 
nCﬁ
;

1214 
addrNext
;

1215 
addrIsNuŒ
;

1216 
u8
 
£ekOp
 = 
	`HasRowid
(
pTab
Ë? 
OP_NŸExi°s
 : 
OP_NŸFound
;

1218 
pP¨£
->
nMem
 = 
	`MAX
’P¨£->nMem, 
ªgCﬁ
+
nCﬁ
);

1220 
addrNext
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1221 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_ROWID
, 
ªgSam∂eRowid
);

1222 
addrIsNuŒ
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 
ªgSam∂eRowid
);

1223 
	`VdbeCovîage
(
v
);

1224 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NEQ
, 
ªgEq
);

1225 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NLT
, 
ªgLt
);

1226 
	`ˇŒSètGë
(
v
, 
ªgSèt4
, 
STAT_GET_NDLT
, 
ªgDLt
);

1227 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
£ekOp
, 
iTabCur
, 
addrNext
, 
ªgSam∂eRowid
, 0);

1231 
	`VdbeCovîageNevîTakí
(
v
);

1232 #ifde‡
SQLITE_ENABLE_STAT3


1233 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iTabCur
, 0, 
ªgSam∂e
);

1235 
i
=0; i<
nCﬁ
; i++){

1236 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iTabCur
, 
i
, 
ªgCﬁ
+i);

1238 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgCﬁ
, 
nCﬁ
, 
ªgSam∂e
);

1240 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 6, 
ªgTemp
);

1241 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
+1, 
ªgNewRowid
);

1242 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
+1, 
ªgTemp
, 
ªgNewRowid
);

1243 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_GŸo
, 1, 
addrNext
);

1244 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrIsNuŒ
);

1249 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrRewöd
);

1256 if–
pO∆yIdx
==0 && 
√edTabÀC¡
 ){

1257 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

1258 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iTabCur
, 
ªgSèt1
);

1259 
jZîoRows
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgSèt1
); 
	`VdbeCovîage
(v);

1260 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgIdx«me
);

1261 
	`as£π
–"BBB"[0]==
SQLITE_AFF_TEXT
 );

1262 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTab«me
, 3, 
ªgTemp
, "BBB", 0);

1263 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iSètCur
, 
ªgNewRowid
);

1264 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iSètCur
, 
ªgTemp
, 
ªgNewRowid
);

1265 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1266 
	`sqlôe3VdbeJumpHîe
(
v
, 
jZîoRows
);

1268 
	}
}

1275 
	$lﬂdA«lysis
(
P¨£
 *
pP¨£
, 
iDb
){

1276 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1277 if–
v
 ){

1278 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_LﬂdA«lysis
, 
iDb
);

1280 
	}
}

1285 
	$™ÆyzeD©aba£
(
P¨£
 *
pP¨£
, 
iDb
){

1286 
sqlôe3
 *
db
 = 
pP¨£
->db;

1287 
Schema
 *
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

1288 
HashEÀm
 *
k
;

1289 
iSètCur
;

1290 
iMem
;

1291 
iTab
;

1293 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

1294 
iSètCur
 = 
pP¨£
->
nTab
;

1295 
pP¨£
->
nTab
 += 3;

1296 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 0, 0);

1297 
iMem
 = 
pP¨£
->
nMem
+1;

1298 
iTab
 = 
pP¨£
->
nTab
;

1299 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1300 
k
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
); k; k=
	`sqlôeHashNext
(k)){

1301 
TabÀ
 *
pTab
 = (TabÀ*)
	`sqlôeHashD©a
(
k
);

1302 
	`™ÆyzeO√TabÀ
(
pP¨£
, 
pTab
, 0, 
iSètCur
, 
iMem
, 
iTab
);

1304 
	`lﬂdA«lysis
(
pP¨£
, 
iDb
);

1305 
	}
}

1312 
	$™ÆyzeTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
Index
 *
pO∆yIdx
){

1313 
iDb
;

1314 
iSètCur
;

1316 
	`as£π
–
pTab
!=0 );

1317 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

1318 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

1319 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

1320 
iSètCur
 = 
pP¨£
->
nTab
;

1321 
pP¨£
->
nTab
 += 3;

1322 if–
pO∆yIdx
 ){

1323 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 
pO∆yIdx
->
zName
, "idx");

1325 
	`›íSètTabÀ
(
pP¨£
, 
iDb
, 
iSètCur
, 
pTab
->
zName
, "tbl");

1327 
	`™ÆyzeO√TabÀ
(
pP¨£
, 
pTab
, 
pO∆yIdx
, 
iSètCur
,pP¨£->
nMem
+1,pP¨£->
nTab
);

1328 
	`lﬂdA«lysis
(
pP¨£
, 
iDb
);

1329 
	}
}

1343 
	$sqlôe3A«lyze
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName1
, Tokí *
pName2
){

1344 
sqlôe3
 *
db
 = 
pP¨£
->db;

1345 
iDb
;

1346 
i
;

1347 *
z
, *
zDb
;

1348 
TabÀ
 *
pTab
;

1349 
Index
 *
pIdx
;

1350 
Tokí
 *
pTabÀName
;

1351 
Vdbe
 *
v
;

1355 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
pP¨£
->
db
) );

1356 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

1360 
	`as£π
–
pName2
!=0 || 
pName1
==0 );

1361 if–
pName1
==0 ){

1363 
i
=0; i<
db
->
nDb
; i++){

1364 if–
i
==1 ) ;

1365 
	`™ÆyzeD©aba£
(
pP¨£
, 
i
);

1367 }if–
pName2
->
n
==0 ){

1369 
iDb
 = 
	`sqlôe3FödDb
(
db
, 
pName1
);

1370 if–
iDb
>=0 ){

1371 
	`™ÆyzeD©aba£
(
pP¨£
, 
iDb
);

1373 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName1
);

1374 if–
z
 ){

1375 if–(
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 0))!=0 ){

1376 
	`™ÆyzeTabÀ
(
pP¨£
, 
pIdx
->
pTabÀ
,ÖIdx);

1377 }if–(
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
z
, 0))!=0 ){

1378 
	`™ÆyzeTabÀ
(
pP¨£
, 
pTab
, 0);

1380 
	`sqlôe3DbFªe
(
db
, 
z
);

1385 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pTabÀName
);

1386 if–
iDb
>=0 ){

1387 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

1388 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTabÀName
);

1389 if–
z
 ){

1390 if–(
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 
zDb
))!=0 ){

1391 
	`™ÆyzeTabÀ
(
pP¨£
, 
pIdx
->
pTabÀ
,ÖIdx);

1392 }if–(
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
z
, 
zDb
))!=0 ){

1393 
	`™ÆyzeTabÀ
(
pP¨£
, 
pTab
, 0);

1395 
	`sqlôe3DbFªe
(
db
, 
z
);

1399 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1400 if–
v
 ) 
	`sqlôe3VdbeAddOp0
(v, 
OP_Expúe
);

1401 
	}
}

1407 
™ÆysisInfo
 
	t™ÆysisInfo
;

1408 
	s™ÆysisInfo
 {

1409 
sqlôe3
 *
	mdb
;

1410 c⁄° *
	mzD©aba£
;

1418 
	$decodeI¡Aºay
(

1419 *
zI¡Aºay
,

1420 
nOut
,

1421 
tRow˙t
 *
aOut
,

1422 
LogE°
 *
aLog
,

1423 
Index
 *
pIndex


1425 *
z
 = 
zI¡Aºay
;

1426 
c
;

1427 
i
;

1428 
tRow˙t
 
v
;

1430 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1431 if–
z
==0 ) z = "";

1433 
	`as£π
–
z
!=0 );

1435 
i
=0; *
z
 && i<
nOut
; i++){

1436 
v
 = 0;

1437  (
c
=
z
[0])>='0' && c<='9' ){

1438 
v
 = v*10 + 
c
 - '0';

1439 
z
++;

1441 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1442 if–
aOut
 )áOut[
i
] = 
v
;

1443 if–
aLog
 )áLog[
i
] = 
	`sqlôe3LogE°
(
v
);

1445 
	`as£π
–
aOut
==0 );

1446 
	`UNUSED_PARAMETER
(
aOut
);

1447 
	`as£π
–
aLog
!=0 );

1448 
aLog
[
i
] = 
	`sqlôe3LogE°
(
v
);

1450 if–*
z
==' ' ) z++;

1452 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


1453 
	`as£π
–
pIndex
!=0 ); {

1455 if–
pIndex
 ){

1457 
pIndex
->
bUn‹dîed
 = 0;

1458 
pIndex
->
noSkùSˇn
 = 0;

1459  
z
[0] ){

1460 if–
	`sqlôe3_°rglob
("un‹dîed*", 
z
)==0 ){

1461 
pIndex
->
bUn‹dîed
 = 1;

1462 }if–
	`sqlôe3_°rglob
("sz=[0-9]*", 
z
)==0 ){

1463 
pIndex
->
szIdxRow
 = 
	`sqlôe3LogE°
(
	`sqlôe3Atoi
(
z
+3));

1464 }if–
	`sqlôe3_°rglob
("noskùsˇn*", 
z
)==0 ){

1465 
pIndex
->
noSkùSˇn
 = 1;

1467 #ifde‡
SQLITE_ENABLE_COSTMULT


1468 if–
	`sqlôe3_°rglob
("co°mu…=[0-9]*",
z
)==0 ){

1469 
pIndex
->
pTabÀ
->
co°Mu…
 = 
	`sqlôe3LogE°
(
	`sqlôe3Atoi
(
z
+9));

1472  
z
[0]!=0 && z[0]!=' ' ) z++;

1473  
z
[0]==' ' ) z++;

1476 
	}
}

1489 
	$™ÆysisLﬂdî
(*
pD©a
, 
¨gc
, **
¨gv
, **
NŸU£d
){

1490 
™ÆysisInfo
 *
pInfo
 = (™ÆysisInfo*)
pD©a
;

1491 
Index
 *
pIndex
;

1492 
TabÀ
 *
pTabÀ
;

1493 c⁄° *
z
;

1495 
	`as£π
–
¨gc
==3 );

1496 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
¨gc
);

1498 if–
¨gv
==0 ||árgv[0]==0 ||árgv[2]==0 ){

1501 
pTabÀ
 = 
	`sqlôe3FödTabÀ
(
pInfo
->
db
, 
¨gv
[0],ÖInfo->
zD©aba£
);

1502 if–
pTabÀ
==0 ){

1505 if–
¨gv
[1]==0 ){

1506 
pIndex
 = 0;

1507 }if–
	`sqlôe3_°ricmp
(
¨gv
[0],argv[1])==0 ){

1508 
pIndex
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTabÀ
);

1510 
pIndex
 = 
	`sqlôe3FödIndex
(
pInfo
->
db
, 
¨gv
[1],ÖInfo->
zD©aba£
);

1512 
z
 = 
¨gv
[2];

1514 if–
pIndex
 ){

1515 
tRow˙t
 *
aiRowE°
 = 0;

1516 
nCﬁ
 = 
pIndex
->
nKeyCﬁ
+1;

1517 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1521 if–
pIndex
->
aiRowE°
==0 ){

1522 
pIndex
->
aiRowE°
 = (
tRow˙t
*)
	`sqlôe3MÆlocZîo
(—Row˙tË* 
nCﬁ
);

1523 if–
pIndex
->
aiRowE°
==0 ) 
	`sqlôe3OomFau…
(
pInfo
->
db
);

1525 
aiRowE°
 = 
pIndex
->aiRowEst;

1527 
pIndex
->
bUn‹dîed
 = 0;

1528 
	`decodeI¡Aºay
((*)
z
, 
nCﬁ
, 
aiRowE°
, 
pIndex
->
aiRowLogE°
,ÖIndex);

1529 if–
pIndex
->
pP¨tIdxWhîe
==0 ) 
pTabÀ
->
nRowLogE°
 =ÖIndex->
aiRowLogE°
[0];

1531 
Index
 
ÁkeIdx
;

1532 
ÁkeIdx
.
szIdxRow
 = 
pTabÀ
->
szTabRow
;

1533 #ifde‡
SQLITE_ENABLE_COSTMULT


1534 
ÁkeIdx
.
pTabÀ
 =ÖTable;

1536 
	`decodeI¡Aºay
((*)
z
, 1, 0, &
pTabÀ
->
nRowLogE°
, &
ÁkeIdx
);

1537 
pTabÀ
->
szTabRow
 = 
ÁkeIdx
.
szIdxRow
;

1541 
	}
}

1547 
	$sqlôe3DñëeIndexSam∂es
(
sqlôe3
 *
db
, 
Index
 *
pIdx
){

1548 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1549 if–
pIdx
->
aSam∂e
 ){

1550 
j
;

1551 
j
=0; j<
pIdx
->
nSam∂e
; j++){

1552 
IndexSam∂e
 *
p
 = &
pIdx
->
aSam∂e
[
j
];

1553 
	`sqlôe3DbFªe
(
db
, 
p
->p);

1555 
	`sqlôe3DbFªe
(
db
, 
pIdx
->
aSam∂e
);

1557 if–
db
 && db->
≤ByãsFªed
==0 ){

1558 
pIdx
->
nSam∂e
 = 0;

1559 
pIdx
->
aSam∂e
 = 0;

1562 
	`UNUSED_PARAMETER
(
db
);

1563 
	`UNUSED_PARAMETER
(
pIdx
);

1565 
	}
}

1567 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1572 
	$öôAvgEq
(
Index
 *
pIdx
){

1573 if–
pIdx
 ){

1574 
IndexSam∂e
 *
aSam∂e
 = 
pIdx
->aSample;

1575 
IndexSam∂e
 *
pFöÆ
 = &
aSam∂e
[
pIdx
->
nSam∂e
-1];

1576 
iCﬁ
;

1577 
nCﬁ
 = 1;

1578 if–
pIdx
->
nSam∂eCﬁ
>1 ){

1583 
nCﬁ
 = 
pIdx
->
nSam∂eCﬁ
-1;

1584 
pIdx
->
aAvgEq
[
nCﬁ
] = 1;

1586 
iCﬁ
=0; iCﬁ<
nCﬁ
; iCol++){

1587 
nSam∂e
 = 
pIdx
->nSample;

1588 
i
;

1589 
tRow˙t
 
sumEq
 = 0;

1590 
tRow˙t
 
avgEq
 = 0;

1591 
tRow˙t
 
nRow
;

1592 
i64
 
nSum100
 = 0;

1593 
i64
 
nDi°100
;

1595 if–!
pIdx
->
aiRowE°
 || 
iCﬁ
>ıIdx->
nKeyCﬁ
 ||ÖIdx->aiRowEst[iCol+1]==0 ){

1596 
nRow
 = 
pFöÆ
->
™Lt
[
iCﬁ
];

1597 
nDi°100
 = (
i64
)100 * 
pFöÆ
->
™DLt
[
iCﬁ
];

1598 
nSam∂e
--;

1600 
nRow
 = 
pIdx
->
aiRowE°
[0];

1601 
nDi°100
 = ((
i64
)100 * 
pIdx
->
aiRowE°
[0]Ë/ÖIdx->aiRowE°[
iCﬁ
+1];

1603 
pIdx
->
nRowE°0
 = 
nRow
;

1609 
i
=0; i<
nSam∂e
; i++){

1610 if–
i
==(
pIdx
->
nSam∂e
-1)

1611 || 
aSam∂e
[
i
].
™DLt
[
iCﬁ
]!=aSample[i+1].anDLt[iCol]

1613 
sumEq
 +
aSam∂e
[
i
].
™Eq
[
iCﬁ
];

1614 
nSum100
 += 100;

1618 if–
nDi°100
>
nSum100
 ){

1619 
avgEq
 = ((
i64
)100 * (
nRow
 - 
sumEq
))/(
nDi°100
 - 
nSum100
);

1621 if–
avgEq
==0 )ávgEq = 1;

1622 
pIdx
->
aAvgEq
[
iCﬁ
] = 
avgEq
;

1625 
	}
}

1631 
Index
 *
	$födIndexOrPrim¨yKey
(

1632 
sqlôe3
 *
db
,

1633 c⁄° *
zName
,

1634 c⁄° *
zDb


1636 
Index
 *
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
zName
, 
zDb
);

1637 if–
pIdx
==0 ){

1638 
TabÀ
 *
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
);

1639 if–
pTab
 && !
	`HasRowid
’TabËË
pIdx
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

1641  
pIdx
;

1642 
	}
}

1657 
	$lﬂdSètTbl
(

1658 
sqlôe3
 *
db
,

1659 
bSèt3
,

1660 c⁄° *
zSql1
,

1661 c⁄° *
zSql2
,

1662 c⁄° *
zDb


1664 
rc
;

1665 
sqlôe3_°mt
 *
pStmt
 = 0;

1666 *
zSql
;

1667 
Index
 *
pPªvIdx
 = 0;

1668 
IndexSam∂e
 *
pSam∂e
;

1670 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1671 
zSql
 = 
	`sqlôe3MPrötf
(
db
, 
zSql1
, 
zDb
);

1672 if–!
zSql
 ){

1673  
SQLITE_NOMEM_BKPT
;

1675 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

1676 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1677 if–
rc
 ) Ñc;

1679  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

1680 
nIdxCﬁ
 = 1;

1682 *
zIndex
;

1683 
Index
 *
pIdx
;

1684 
nSam∂e
;

1685 
nByã
;

1686 
i
;

1687 
tRow˙t
 *
pS∑˚
;

1689 
zIndex
 = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

1690 if–
zIndex
==0 ) ;

1691 
nSam∂e
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 1);

1692 
pIdx
 = 
	`födIndexOrPrim¨yKey
(
db
, 
zIndex
, 
zDb
);

1693 
	`as£π
–
pIdx
==0 || 
bSèt3
 ||ÖIdx->
nSam∂e
==0 );

1696 if–
pIdx
==0 ||ÖIdx->
nSam∂e
 ) ;

1697 if–
bSèt3
==0 ){

1698 
	`as£π
–!
	`HasRowid
(
pIdx
->
pTabÀ
Ë||ÖIdx->
nCﬁumn
=ıIdx->
nKeyCﬁ
+1 );

1699 if–!
	`HasRowid
(
pIdx
->
pTabÀ
Ë&& 
	`IsPrim¨yKeyIndex
(pIdx) ){

1700 
nIdxCﬁ
 = 
pIdx
->
nKeyCﬁ
;

1702 
nIdxCﬁ
 = 
pIdx
->
nCﬁumn
;

1705 
pIdx
->
nSam∂eCﬁ
 = 
nIdxCﬁ
;

1706 
nByã
 = (
IndexSam∂e
Ë* 
nSam∂e
;

1707 
nByã
 +(
tRow˙t
Ë* 
nIdxCﬁ
 * 3 * 
nSam∂e
;

1708 
nByã
 +
nIdxCﬁ
 * (
tRow˙t
);

1710 
pIdx
->
aSam∂e
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1711 if–
pIdx
->
aSam∂e
==0 ){

1712 
	`sqlôe3_föÆize
(
pStmt
);

1713  
SQLITE_NOMEM_BKPT
;

1715 
pS∑˚
 = (
tRow˙t
*)&
pIdx
->
aSam∂e
[
nSam∂e
];

1716 
pIdx
->
aAvgEq
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1717 
i
=0; i<
nSam∂e
; i++){

1718 
pIdx
->
aSam∂e
[
i
].
™Eq
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1719 
pIdx
->
aSam∂e
[
i
].
™Lt
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1720 
pIdx
->
aSam∂e
[
i
].
™DLt
 = 
pS∑˚
;ÖS∑˚ +
nIdxCﬁ
;

1722 
	`as£π
–((
u8
*)
pS∑˚
)-
nByã
==(u8*)(
pIdx
->
aSam∂e
) );

1724 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1725 if–
rc
 ) Ñc;

1727 
zSql
 = 
	`sqlôe3MPrötf
(
db
, 
zSql2
, 
zDb
);

1728 if–!
zSql
 ){

1729  
SQLITE_NOMEM_BKPT
;

1731 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

1732 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1733 if–
rc
 ) Ñc;

1735  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

1736 *
zIndex
;

1737 
Index
 *
pIdx
;

1738 
nCﬁ
 = 1;

1740 
zIndex
 = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

1741 if–
zIndex
==0 ) ;

1742 
pIdx
 = 
	`födIndexOrPrim¨yKey
(
db
, 
zIndex
, 
zDb
);

1743 if–
pIdx
==0 ) ;

1746 
nCﬁ
 = 
pIdx
->
nSam∂eCﬁ
;

1747 if–
bSèt3
 && 
nCﬁ
>1 ) ;

1748 if–
pIdx
!=
pPªvIdx
 ){

1749 
	`öôAvgEq
(
pPªvIdx
);

1750 
pPªvIdx
 = 
pIdx
;

1752 
pSam∂e
 = &
pIdx
->
aSam∂e
[pIdx->
nSam∂e
];

1753 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,1),
nCﬁ
,
pSam∂e
->
™Eq
,0,0);

1754 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,2),
nCﬁ
,
pSam∂e
->
™Lt
,0,0);

1755 
	`decodeI¡Aºay
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
,3),
nCﬁ
,
pSam∂e
->
™DLt
,0,0);

1763 
pSam∂e
->
n
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 4);

1764 
pSam∂e
->
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
,ÖSam∂e->
n
 + 2);

1765 if–
pSam∂e
->
p
==0 ){

1766 
	`sqlôe3_föÆize
(
pStmt
);

1767  
SQLITE_NOMEM_BKPT
;

1769 
	`mem˝y
(
pSam∂e
->
p
, 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 4),ÖSam∂e->
n
);

1770 
pIdx
->
nSam∂e
++;

1772 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1773 if–
rc
==
SQLITE_OK
 ) 
	`öôAvgEq
(
pPªvIdx
);

1774  
rc
;

1775 
	}
}

1781 
	$lﬂdSèt4
(
sqlôe3
 *
db
, c⁄° *
zDb
){

1782 
rc
 = 
SQLITE_OK
;

1784 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1785 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©4", 
zDb
) ){

1786 
rc
 = 
	`lﬂdSètTbl
(
db
, 0,

1789 
zDb


1793 if–
rc
==
SQLITE_OK
 && 
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©3", 
zDb
) ){

1794 
rc
 = 
	`lﬂdSètTbl
(
db
, 1,

1797 
zDb


1801  
rc
;

1802 
	}
}

1825 
	$sqlôe3A«lysisLﬂd
(
sqlôe3
 *
db
, 
iDb
){

1826 
™ÆysisInfo
 
sInfo
;

1827 
HashEÀm
 *
i
;

1828 *
zSql
;

1829 
rc
 = 
SQLITE_OK
;

1831 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

1832 
	`as£π
–
db
->
aDb
[
iDb
].
pBt
!=0 );

1835 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1836 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1837 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1838 
pIdx
->
aiRowLogE°
[0] = 0;

1839 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1840 
	`sqlôe3DñëeIndexSam∂es
(
db
, 
pIdx
);

1841 
pIdx
->
aSam∂e
 = 0;

1846 
sInfo
.
db
 = db;

1847 
sInfo
.
zD©aba£
 = 
db
->
aDb
[
iDb
].
zName
;

1848 if–
	`sqlôe3FödTabÀ
(
db
, "sqlôe_°©1", 
sInfo
.
zD©aba£
)!=0 ){

1849 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

1850 "SELECTÅbl,idx,°© FROM %Q.sqlôe_°©1", 
sInfo
.
zD©aba£
);

1851 if–
zSql
==0 ){

1852 
rc
 = 
SQLITE_NOMEM_BKPT
;

1854 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
™ÆysisLﬂdî
, &
sInfo
, 0);

1855 
	`sqlôe3DbFªe
(
db
, 
zSql
);

1860 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1861 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1862 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1863 if–
pIdx
->
aiRowLogE°
[0]==0 ) 
	`sqlôe3DeÁu…RowE°
(pIdx);

1867 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1868 if–
rc
==
SQLITE_OK
 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_Sèt34
) ){

1869 
db
->
lookaside
.
bDißbÀ
++;

1870 
rc
 = 
	`lﬂdSèt4
(
db
, 
sInfo
.
zD©aba£
);

1871 
db
->
lookaside
.
bDißbÀ
--;

1873 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
idxHash
);i;i=
	`sqlôeHashNext
(i)){

1874 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
i
);

1875 
	`sqlôe3_‰ì
(
pIdx
->
aiRowE°
);

1876 
pIdx
->
aiRowE°
 = 0;

1880 if–
rc
==
SQLITE_NOMEM
 ){

1881 
	`sqlôe3OomFau…
(
db
);

1883  
rc
;

1884 
	}
}

	@attach.c

14 
	~"sqlôeI¡.h
"

16 #i‚de‡
SQLITE_OMIT_ATTACH


35 
	$ªsﬁveAâachEx¥
(
NameC⁄ãxt
 *
pName
, 
Ex¥
 *
pEx¥
)

37 
rc
 = 
SQLITE_OK
;

38 if–
pEx¥
 ){

39 if–
pEx¥
->
›
!=
TK_ID
 ){

40 
rc
 = 
	`sqlôe3ResﬁveEx¥Names
(
pName
, 
pEx¥
);

42 
pEx¥
->
›
 = 
TK_STRING
;

45  
rc
;

46 
	}
}

59 
	$©èchFunc
(

60 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

61 
NŸU£d
,

62 
sqlôe3_vÆue
 **
¨gv


64 
i
;

65 
rc
 = 0;

66 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

67 c⁄° *
zName
;

68 c⁄° *
zFûe
;

69 *
zP©h
 = 0;

70 *
zEº
 = 0;

71 
Êags
;

72 
Db
 *
aNew
;

73 *
zEºDyn
 = 0;

74 
sqlôe3_vfs
 *
pVfs
;

76 
	`UNUSED_PARAMETER
(
NŸU£d
);

78 
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

79 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

80 if–
zFûe
==0 ) zFile = "";

81 if–
zName
==0 ) zName = "";

89 if–
db
->
nDb
>=db->
aLimô
[
SQLITE_LIMIT_ATTACHED
]+2 ){

90 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "too manyáttached databases - max %d",

91 
db
->
aLimô
[
SQLITE_LIMIT_ATTACHED
]

93 
©èch_îr‹
;

95 if–!
db
->
autoCommô
 ){

96 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "cannot ATTACH database withinÅransaction");

97 
©èch_îr‹
;

99 
i
=0; i<
db
->
nDb
; i++){

100 *
z
 = 
db
->
aDb
[
i
].
zName
;

101 
	`as£π
–
z
 && 
zName
 );

102 if–
	`sqlôe3SåICmp
(
z
, 
zName
)==0 ){

103 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "d©aba£ %†i†Æªady i¿u£", 
zName
);

104 
©èch_îr‹
;

111 if–
db
->
aDb
==db->
aDbSètic
 ){

112 
aNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (db->
aDb
[0])*3 );

113 if–
aNew
==0 ) ;

114 
	`mem˝y
(
aNew
, 
db
->
aDb
, (db->aDb[0])*2);

116 
aNew
 = 
	`sqlôe3DbRóŒoc
(
db
, db->
aDb
, (db->aDb[0])*(db->
nDb
+1) );

117 if–
aNew
==0 ) ;

119 
db
->
aDb
 = 
aNew
;

120 
aNew
 = &
db
->
aDb
[db->
nDb
];

121 
	`mem£t
(
aNew
, 0, (*aNew));

127 
Êags
 = 
db
->
›íFœgs
;

128 
rc
 = 
	`sqlôe3P¨£Uri
(
db
->
pVfs
->
zName
, 
zFûe
, &
Êags
, &pVfs, &
zP©h
, &
zEº
);

129 if–
rc
!=
SQLITE_OK
 ){

130 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

131 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

132 
	`sqlôe3_‰ì
(
zEº
);

135 
	`as£π
–
pVfs
 );

136 
Êags
 |
SQLITE_OPEN_MAIN_DB
;

137 
rc
 = 
	`sqlôe3BåìO≥n
(
pVfs
, 
zP©h
, 
db
, &
aNew
->
pBt
, 0, 
Êags
);

138 
	`sqlôe3_‰ì
–
zP©h
 );

139 
db
->
nDb
++;

140 if–
rc
==
SQLITE_CONSTRAINT
 ){

141 
rc
 = 
SQLITE_ERROR
;

142 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "database isálreadyáttached");

143 }if–
rc
==
SQLITE_OK
 ){

144 
Pagî
 *
pPagî
;

145 
aNew
->
pSchema
 = 
	`sqlôe3SchemaGë
(
db
,áNew->
pBt
);

146 if–!
aNew
->
pSchema
 ){

147 
rc
 = 
SQLITE_NOMEM_BKPT
;

148 }if–
aNew
->
pSchema
->
fûe_f‹m©
 &&áNew->pSchema->
íc
!=
	`ENC
(
db
) ){

149 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
,

151 
rc
 = 
SQLITE_ERROR
;

153 
	`sqlôe3BåìE¡î
(
aNew
->
pBt
);

154 
pPagî
 = 
	`sqlôe3BåìPagî
(
aNew
->
pBt
);

155 
	`sqlôe3PagîLockögMode
(
pPagî
, 
db
->
dÊtLockMode
);

156 
	`sqlôe3BåìSecuªDñëe
(
aNew
->
pBt
,

157 
	`sqlôe3BåìSecuªDñëe
(
db
->
aDb
[0].
pBt
,-1) );

158 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


159 
	`sqlôe3BåìSëPagîFœgs
(
aNew
->
pBt
,

160 
PAGER_SYNCHRONOUS_FULL
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
));

162 
	`sqlôe3BåìLóve
(
aNew
->
pBt
);

164 
aNew
->
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_SYNCHRONOUS
+1;

165 
aNew
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, zName);

166 if–
rc
==
SQLITE_OK
 && 
aNew
->
zName
==0 ){

167 
rc
 = 
SQLITE_NOMEM_BKPT
;

171 #ifde‡
SQLITE_HAS_CODEC


172 if–
rc
==
SQLITE_OK
 ){

173 
	`sqlôe3CodecAâach
(
sqlôe3
*, , const *, );

174 
	`sqlôe3CodecGëKey
(
sqlôe3
*, , **, *);

175 
nKey
;

176 *
zKey
;

177 
t
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[2]);

178  
t
 ){

179 
SQLITE_INTEGER
:

180 
SQLITE_FLOAT
:

181 
zEºDyn
 = 
	`sqlôe3DbSåDup
(
db
, "Invalid key value");

182 
rc
 = 
SQLITE_ERROR
;

185 
SQLITE_TEXT
:

186 
SQLITE_BLOB
:

187 
nKey
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]);

188 
zKey
 = (*)
	`sqlôe3_vÆue_blob
(
¨gv
[2]);

189 
rc
 = 
	`sqlôe3CodecAâach
(
db
, db->
nDb
-1, 
zKey
, 
nKey
);

192 
SQLITE_NULL
:

194 
	`sqlôe3CodecGëKey
(
db
, 0, (**)&
zKey
, &
nKey
);

195 if–
nKey
>0 || 
	`sqlôe3BåìGëO±imÆRe£rve
(
db
->
aDb
[0].
pBt
)>0 ){

196 
rc
 = 
	`sqlôe3CodecAâach
(
db
, db->
nDb
-1, 
zKey
, 
nKey
);

208 if–
rc
==
SQLITE_OK
 ){

209 
	`sqlôe3BåìE¡îAŒ
(
db
);

210 
rc
 = 
	`sqlôe3Inô
(
db
, &
zEºDyn
);

211 
	`sqlôe3BåìLóveAŒ
(
db
);

213 #ifde‡
SQLITE_USER_AUTHENTICATION


214 if–
rc
==
SQLITE_OK
 ){

215 
u8
 
√wAuth
 = 0;

216 
rc
 = 
	`sqlôe3U£rAuthCheckLogö
(
db
, 
zName
, &
√wAuth
);

217 if–
√wAuth
<
db
->
auth
.
authLevñ
 ){

218 
rc
 = 
SQLITE_AUTH_USER
;

222 if–
rc
 ){

223 
iDb
 = 
db
->
nDb
 - 1;

224 
	`as£π
–
iDb
>=2 );

225 if–
db
->
aDb
[
iDb
].
pBt
 ){

226 
	`sqlôe3BåìClo£
(
db
->
aDb
[
iDb
].
pBt
);

227 
db
->
aDb
[
iDb
].
pBt
 = 0;

228 
db
->
aDb
[
iDb
].
pSchema
 = 0;

230 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

231 
db
->
nDb
 = 
iDb
;

232 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

233 
	`sqlôe3OomFau…
(
db
);

234 
	`sqlôe3DbFªe
(
db
, 
zEºDyn
);

235 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "out of memory");

236 }if–
zEºDyn
==0 ){

237 
zEºDyn
 = 
	`sqlôe3MPrötf
(
db
, "u«bÀÅÿ›í d©aba£: %s", 
zFûe
);

239 
©èch_îr‹
;

244 
©èch_îr‹
:

246 if–
zEºDyn
 ){

247 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEºDyn
, -1);

248 
	`sqlôe3DbFªe
(
db
, 
zEºDyn
);

250 if–
rc
 ) 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
,Ñc);

251 
	}
}

261 
	$dëachFunc
(

262 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

263 
NŸU£d
,

264 
sqlôe3_vÆue
 **
¨gv


266 c⁄° *
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

267 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

268 
i
;

269 
Db
 *
pDb
 = 0;

270 
zEº
[128];

272 
	`UNUSED_PARAMETER
(
NŸU£d
);

274 if–
zName
==0 ) zName = "";

275 
i
=0; i<
db
->
nDb
; i++){

276 
pDb
 = &
db
->
aDb
[
i
];

277 if–
pDb
->
pBt
==0 ) ;

278 if–
	`sqlôe3SåICmp
(
pDb
->
zName
, zName)==0 ) ;

281 if–
i
>=
db
->
nDb
 ){

282 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "nÿsuch d©aba£: %s", 
zName
);

283 
dëach_îr‹
;

285 if–
i
<2 ){

286 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "ˇ¬Ÿ dëach d©aba£ %s", 
zName
);

287 
dëach_îr‹
;

289 if–!
db
->
autoCommô
 ){

290 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

292 
dëach_îr‹
;

294 if–
	`sqlôe3BåìIsInRódTøns
(
pDb
->
pBt
Ë|| 
	`sqlôe3BåìIsInBackup
(pDb->pBt) ){

295 
	`sqlôe3_¢¥ötf
((
zEº
),zEº, "d©aba£ %†i†locked", 
zName
);

296 
dëach_îr‹
;

299 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

300 
pDb
->
pBt
 = 0;

301 
pDb
->
pSchema
 = 0;

302 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

305 
dëach_îr‹
:

306 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

307 
	}
}

313 
	$codeAâach
(

314 
P¨£
 *
pP¨£
,

315 
ty≥
,

316 
FuncDef
 c⁄° *
pFunc
,

317 
Ex¥
 *
pAuthArg
,

318 
Ex¥
 *
pFûíame
,

319 
Ex¥
 *
pDb«me
,

320 
Ex¥
 *
pKey


322 
rc
;

323 
NameC⁄ãxt
 
sName
;

324 
Vdbe
 *
v
;

325 
sqlôe3
* 
db
 = 
pP¨£
->db;

326 
ªgArgs
;

328 
	`mem£t
(&
sName
, 0, (
NameC⁄ãxt
));

329 
sName
.
pP¨£
 =ÖParse;

332 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pFûíame
)) ||

333 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pDb«me
)) ||

334 
SQLITE_OK
!=(
rc
 = 
	`ªsﬁveAâachEx¥
(&
sName
, 
pKey
))

336 
©èch_íd
;

339 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


340 if–
pAuthArg
 ){

341 *
zAuthArg
;

342 if–
pAuthArg
->
›
==
TK_STRING
 ){

343 
zAuthArg
 = 
pAuthArg
->
u
.
zTokí
;

345 
zAuthArg
 = 0;

347 
rc
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
ty≥
, 
zAuthArg
, 0, 0);

348 if(
rc
!=
SQLITE_OK
 ){

349 
©èch_íd
;

355 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

356 
ªgArgs
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 4);

357 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pFûíame
, 
ªgArgs
);

358 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pDb«me
, 
ªgArgs
+1);

359 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pKey
, 
ªgArgs
+2);

361 
	`as£π
–
v
 || 
db
->
mÆlocFaûed
 );

362 if–
v
 ){

363 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 0, 
ªgArgs
+3-
pFunc
->
nArg
,ÑegArgs+3,

364 (*)
pFunc
, 
P4_FUNCDEF
);

365 
	`as£π
–
pFunc
->
nArg
==-1 || (pFunc->nArg&0xff)==pFunc->nArg );

366 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)(
pFunc
->
nArg
));

372 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Expúe
, (
ty≥
==
SQLITE_ATTACH
));

375 
©èch_íd
:

376 
	`sqlôe3Ex¥Dñëe
(
db
, 
pFûíame
);

377 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDb«me
);

378 
	`sqlôe3Ex¥Dñëe
(
db
, 
pKey
);

379 
	}
}

386 
	$sqlôe3Dëach
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pDb«me
){

387 c⁄° 
FuncDef
 
dëach_func
 = {

389 
SQLITE_UTF8
,

392 
dëachFunc
,

397 
	`codeAâach
(
pP¨£
, 
SQLITE_DETACH
, &
dëach_func
, 
pDb«me
, 0, 0,ÖDbname);

398 
	}
}

405 
	$sqlôe3Aâach
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
, Ex¥ *
pDb«me
, Ex¥ *
pKey
){

406 c⁄° 
FuncDef
 
©èch_func
 = {

408 
SQLITE_UTF8
,

411 
©èchFunc
,

416 
	`codeAâach
(
pP¨£
, 
SQLITE_ATTACH
, &
©èch_func
, 
p
,Ö, 
pDb«me
, 
pKey
);

417 
	}
}

424 
	$sqlôe3FixInô
(

425 
DbFixî
 *
pFix
,

426 
P¨£
 *
pP¨£
,

427 
iDb
,

428 c⁄° *
zTy≥
,

429 c⁄° 
Tokí
 *
pName


431 
sqlôe3
 *
db
;

433 
db
 = 
pP¨£
->db;

434 
	`as£π
–
db
->
nDb
>
iDb
 );

435 
pFix
->
pP¨£
 =ÖParse;

436 
pFix
->
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

437 
pFix
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

438 
pFix
->
zTy≥
 = zType;

439 
pFix
->
pName
 =ÖName;

440 
pFix
->
bV¨O∆y
 = (
iDb
==1);

441 
	}
}

457 
	$sqlôe3FixSrcLi°
(

458 
DbFixî
 *
pFix
,

459 
SrcLi°
 *
pLi°


461 
i
;

462 c⁄° *
zDb
;

463 
SrcLi°_ôem
 *
pIãm
;

465 if–
	`NEVER
(
pLi°
==0) )  0;

466 
zDb
 = 
pFix
->zDb;

467 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nSrc
; i++,ÖItem++){

468 if–
pFix
->
bV¨O∆y
==0 ){

469 if–
pIãm
->
zD©aba£
 && 
	`sqlôe3SåICmp
’Iãm->zD©aba£, 
zDb
) ){

470 
	`sqlôe3Eº‹Msg
(
pFix
->
pP¨£
,

472 
pFix
->
zTy≥
,ÖFix->
pName
, 
pIãm
->
zD©aba£
);

475 
	`sqlôe3DbFªe
(
pFix
->
pP¨£
->
db
, 
pIãm
->
zD©aba£
);

476 
pIãm
->
zD©aba£
 = 0;

477 
pIãm
->
pSchema
 = 
pFix
->pSchema;

479 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
)

480 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pIãm
->
pSñe˘
) )  1;

481 if–
	`sqlôe3FixEx¥
(
pFix
, 
pIãm
->
pOn
) )  1;

485 
	}
}

486 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
)

487 
	$sqlôe3FixSñe˘
(

488 
DbFixî
 *
pFix
,

489 
Sñe˘
 *
pSñe˘


491  
pSñe˘
 ){

492 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pELi°
) ){

495 if–
	`sqlôe3FixSrcLi°
(
pFix
, 
pSñe˘
->
pSrc
) ){

498 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pWhîe
) ){

501 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pGroupBy
) ){

504 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pHavög
) ){

507 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSñe˘
->
pOrdîBy
) ){

510 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pLimô
) ){

513 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSñe˘
->
pOff£t
) ){

516 
pSñe˘
 =ÖSñe˘->
pPri‹
;

519 
	}
}

520 
	$sqlôe3FixEx¥
(

521 
DbFixî
 *
pFix
,

522 
Ex¥
 *
pEx¥


524  
pEx¥
 ){

525 if–
pEx¥
->
›
==
TK_VARIABLE
 ){

526 if–
pFix
->
pP¨£
->
db
->
öô
.
busy
 ){

527 
pEx¥
->
›
 = 
TK_NULL
;

529 
	`sqlôe3Eº‹Msg
(
pFix
->
pP¨£
, "%†ˇ¬Ÿ u£ v¨übÀs",ÖFix->
zTy≥
);

533 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) ) ;

534 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

535 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pEx¥
->
x
.
pSñe˘
) )  1;

537 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pEx¥
->
x
.
pLi°
) )  1;

539 if–
	`sqlôe3FixEx¥
(
pFix
, 
pEx¥
->
pRight
) ){

542 
pEx¥
 =ÖEx¥->
pLe·
;

545 
	}
}

546 
	$sqlôe3FixEx¥Li°
(

547 
DbFixî
 *
pFix
,

548 
Ex¥Li°
 *
pLi°


550 
i
;

551 
Ex¥Li°_ôem
 *
pIãm
;

552 if–
pLi°
==0 )  0;

553 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nEx¥
; i++,ÖItem++){

554 if–
	`sqlôe3FixEx¥
(
pFix
, 
pIãm
->
pEx¥
) ){

559 
	}
}

562 #i‚de‡
SQLITE_OMIT_TRIGGER


563 
	$sqlôe3FixTriggîSãp
(

564 
DbFixî
 *
pFix
,

565 
TriggîSãp
 *
pSãp


567  
pSãp
 ){

568 if–
	`sqlôe3FixSñe˘
(
pFix
, 
pSãp
->
pSñe˘
) ){

571 if–
	`sqlôe3FixEx¥
(
pFix
, 
pSãp
->
pWhîe
) ){

574 if–
	`sqlôe3FixEx¥Li°
(
pFix
, 
pSãp
->
pEx¥Li°
) ){

577 
pSãp
 =ÖSãp->
pNext
;

580 
	}
}

	@auth.c

17 
	~"sqlôeI¡.h
"

23 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


70 
sqlôe3_£t_auth‹izî
(

71 
sqlôe3
 *
db
,

72 (*
xAuth
)(*,,const *,const *,const *,const *),

73 *
pArg


75 #ifde‡
SQLITE_ENABLE_API_ARMOR


76 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

78 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

79 
db
->
xAuth
 = (
sqlôe3_xauth
)xAuth;

80 
db
->
pAuthArg
 = 
pArg
;

81 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

82 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

83  
SQLITE_OK
;

84 
	}
}

90 
	$sqlôeAuthBadRëu∫Code
(
P¨£
 *
pP¨£
){

91 
	`sqlôe3Eº‹Msg
(
pP¨£
, "authorizer malfunction");

92 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

93 
	}
}

104 
	$sqlôe3AuthRódCﬁ
(

105 
P¨£
 *
pP¨£
,

106 c⁄° *
zTab
,

107 c⁄° *
zCﬁ
,

108 
iDb


110 
sqlôe3
 *
db
 = 
pP¨£
->db;

111 *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

112 
rc
;

114 if–
db
->
öô
.
busy
 )  
SQLITE_OK
;

115 
rc
 = 
db
->
	`xAuth
(db->
pAuthArg
, 
SQLITE_READ
, 
zTab
,
zCﬁ
,
zDb
,
pP¨£
->
zAuthC⁄ãxt


116 #ifde‡
SQLITE_USER_AUTHENTICATION


117 ,
db
->
auth
.
zAuthU£r


120 if–
rc
==
SQLITE_DENY
 ){

121 if–
db
->
nDb
>2 || 
iDb
!=0 ){

122 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ac˚s†tÿ%s.%s.%†i†¥ohibôed",
zDb
,
zTab
,
zCﬁ
);

124 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ac˚s†tÿ%s.%†i†¥ohibôed", 
zTab
, 
zCﬁ
);

126 
pP¨£
->
rc
 = 
SQLITE_AUTH
;

127 }if–
rc
!=
SQLITE_IGNORE
 &&Ñc!=
SQLITE_OK
 ){

128 
	`sqlôeAuthBadRëu∫Code
(
pP¨£
);

130  
rc
;

131 
	}
}

142 
	$sqlôe3AuthRód
(

143 
P¨£
 *
pP¨£
,

144 
Ex¥
 *
pEx¥
,

145 
Schema
 *
pSchema
,

146 
SrcLi°
 *
pTabLi°


148 
sqlôe3
 *
db
 = 
pP¨£
->db;

149 
TabÀ
 *
pTab
 = 0;

150 c⁄° *
zCﬁ
;

151 
iSrc
;

152 
iDb
;

153 
iCﬁ
;

155 if–
db
->
xAuth
==0 ) ;

156 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pSchema
);

157 if–
iDb
<0 ){

163 
	`as£π
–
pEx¥
->
›
==
TK_COLUMN
 ||ÖEx¥->›==
TK_TRIGGER
 );

164 if–
pEx¥
->
›
==
TK_TRIGGER
 ){

165 
pTab
 = 
pP¨£
->
pTriggîTab
;

167 
	`as£π
–
pTabLi°
 );

168 
iSrc
=0; 
	`ALWAYS
(iSrc<
pTabLi°
->
nSrc
); iSrc++){

169 if–
pEx¥
->
iTabÀ
==
pTabLi°
->
a
[
iSrc
].
iCurs‹
 ){

170 
pTab
 = 
pTabLi°
->
a
[
iSrc
].pTab;

175 
iCﬁ
 = 
pEx¥
->
iCﬁumn
;

176 if–
	`NEVER
(
pTab
==0) ) ;

178 if–
iCﬁ
>=0 ){

179 
	`as£π
–
iCﬁ
<
pTab
->
nCﬁ
 );

180 
zCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

181 }if–
pTab
->
iPKey
>=0 ){

182 
	`as£π
–
pTab
->
iPKey
<pTab->
nCﬁ
 );

183 
zCﬁ
 = 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
;

185 
zCﬁ
 = "ROWID";

187 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

188 if–
SQLITE_IGNORE
==
	`sqlôe3AuthRódCﬁ
(
pP¨£
, 
pTab
->
zName
, 
zCﬁ
, 
iDb
) ){

189 
pEx¥
->
›
 = 
TK_NULL
;

191 
	}
}

199 
	$sqlôe3AuthCheck
(

200 
P¨£
 *
pP¨£
,

201 
code
,

202 c⁄° *
zArg1
,

203 c⁄° *
zArg2
,

204 c⁄° *
zArg3


206 
sqlôe3
 *
db
 = 
pP¨£
->db;

207 
rc
;

212 if–
db
->
öô
.
busy
 || 
IN_DECLARE_VTAB
 ){

213  
SQLITE_OK
;

216 if–
db
->
xAuth
==0 ){

217  
SQLITE_OK
;

219 
rc
 = 
db
->
	`xAuth
(db->
pAuthArg
, 
code
, 
zArg1
, 
zArg2
, 
zArg3
, 
pP¨£
->
zAuthC⁄ãxt


220 #ifde‡
SQLITE_USER_AUTHENTICATION


221 ,
db
->
auth
.
zAuthU£r


224 if–
rc
==
SQLITE_DENY
 ){

225 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notáuthorized");

226 
pP¨£
->
rc
 = 
SQLITE_AUTH
;

227 }if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IGNORE
 ){

228 
rc
 = 
SQLITE_DENY
;

229 
	`sqlôeAuthBadRëu∫Code
(
pP¨£
);

231  
rc
;

232 
	}
}

239 
	$sqlôe3AuthC⁄ãxtPush
(

240 
P¨£
 *
pP¨£
,

241 
AuthC⁄ãxt
 *
pC⁄ãxt
,

242 c⁄° *
zC⁄ãxt


244 
	`as£π
–
pP¨£
 );

245 
pC⁄ãxt
->
pP¨£
 =ÖParse;

246 
pC⁄ãxt
->
zAuthC⁄ãxt
 = 
pP¨£
->zAuthContext;

247 
pP¨£
->
zAuthC⁄ãxt
 = 
zC⁄ãxt
;

248 
	}
}

254 
	$sqlôe3AuthC⁄ãxtP›
(
AuthC⁄ãxt
 *
pC⁄ãxt
){

255 if–
pC⁄ãxt
->
pP¨£
 ){

256 
pC⁄ãxt
->
pP¨£
->
zAuthC⁄ãxt
 =ÖContext->zAuthContext;

257 
pC⁄ãxt
->
pP¨£
 = 0;

259 
	}
}

	@backup.c

15 
	~"sqlôeI¡.h
"

16 
	~"båìI¡.h
"

21 
	ssqlôe3_backup
 {

22 
sqlôe3
* 
	mpDe°Db
;

23 
Båì
 *
	mpDe°
;

24 
u32
 
	miDe°Schema
;

25 
	mbDe°Locked
;

27 
Pgno
 
	miNext
;

28 
sqlôe3
* 
	mpSrcDb
;

29 
Båì
 *
	mpSrc
;

31 
	mrc
;

36 
Pgno
 
	mnRemaöög
;

37 
Pgno
 
	mnPagecou¡
;

39 
	misAâached
;

40 
sqlôe3_backup
 *
	mpNext
;

82 
Båì
 *
	$födBåì
(
sqlôe3
 *
pEº‹Db
, sqlôe3 *
pDb
, c⁄° *
zDb
){

83 
i
 = 
	`sqlôe3FödDbName
(
pDb
, 
zDb
);

85 if–
i
==1 ){

86 
P¨£
 *
pP¨£
;

87 
rc
 = 0;

88 
pP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
pEº‹Db
, (*pParse));

89 if–
pP¨£
==0 ){

90 
	`sqlôe3Eº‹WôhMsg
(
pEº‹Db
, 
SQLITE_NOMEM
, "out of memory");

91 
rc
 = 
SQLITE_NOMEM_BKPT
;

93 
pP¨£
->
db
 = 
pDb
;

94 if–
	`sqlôe3O≥nTempD©aba£
(
pP¨£
) ){

95 
	`sqlôe3Eº‹WôhMsg
(
pEº‹Db
, 
pP¨£
->
rc
, "%s",ÖP¨£->
zEºMsg
);

96 
rc
 = 
SQLITE_ERROR
;

98 
	`sqlôe3DbFªe
(
pEº‹Db
, 
pP¨£
->
zEºMsg
);

99 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

100 
	`sqlôe3SèckFªe
(
pEº‹Db
, 
pP¨£
);

102 if–
rc
 ){

107 if–
i
<0 ){

108 
	`sqlôe3Eº‹WôhMsg
(
pEº‹Db
, 
SQLITE_ERROR
, "unknow¿d©aba£ %s", 
zDb
);

112  
pDb
->
aDb
[
i
].
pBt
;

113 
	}
}

119 
	$£tDe°Pgsz
(
sqlôe3_backup
 *
p
){

120 
rc
;

121 
rc
 = 
	`sqlôe3BåìSëPageSize
(
p
->
pDe°
,
	`sqlôe3BåìGëPageSize
’->
pSrc
),-1,0);

122  
rc
;

123 
	}
}

131 
	$checkRódTønß˘i⁄
(
sqlôe3
 *
db
, 
Båì
 *
p
){

132 if–
	`sqlôe3BåìIsInRódTøns
(
p
) ){

133 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, "destination database is in use");

134  
SQLITE_ERROR
;

136  
SQLITE_OK
;

137 
	}
}

147 
sqlôe3_backup
 *
	$sqlôe3_backup_öô
(

148 
sqlôe3
* 
pDe°Db
,

149 c⁄° *
zDe°Db
,

150 
sqlôe3
* 
pSrcDb
,

151 c⁄° *
zSrcDb


153 
sqlôe3_backup
 *
p
;

155 #ifde‡
SQLITE_ENABLE_API_ARMOR


156 if–!
	`sqlôe3Sa„tyCheckOk
(
pSrcDb
)||!sqlôe3Sa„tyCheckOk(
pDe°Db
) ){

157 ()
SQLITE_MISUSE_BKPT
;

170 
	`sqlôe3_muãx_íãr
(
pSrcDb
->
muãx
);

171 
	`sqlôe3_muãx_íãr
(
pDe°Db
->
muãx
);

173 if–
pSrcDb
==
pDe°Db
 ){

174 
	`sqlôe3Eº‹WôhMsg
(

175 
pDe°Db
, 
SQLITE_ERROR
, "sourceánd destination must be distinct"

177 
p
 = 0;

183 
p
 = (
sqlôe3_backup
 *)
	`sqlôe3MÆlocZîo
((sqlite3_backup));

184 if–!
p
 ){

185 
	`sqlôe3Eº‹
(
pDe°Db
, 
SQLITE_NOMEM_BKPT
);

190 if–
p
 ){

191 
p
->
pSrc
 = 
	`födBåì
(
pDe°Db
, 
pSrcDb
, 
zSrcDb
);

192 
p
->
pDe°
 = 
	`födBåì
(
pDe°Db
,ÖDe°Db, 
zDe°Db
);

193 
p
->
pDe°Db
 =ÖDestDb;

194 
p
->
pSrcDb
 =ÖSrcDb;

195 
p
->
iNext
 = 1;

196 
p
->
isAâached
 = 0;

198 if–0==
p
->
pSrc
 || 0=ı->
pDe°


199 || 
	`£tDe°Pgsz
(
p
)==
SQLITE_NOMEM


200 || 
	`checkRódTønß˘i⁄
(
pDe°Db
, 
p
->
pDe°
)!=
SQLITE_OK


207 
	`sqlôe3_‰ì
(
p
);

208 
p
 = 0;

211 if–
p
 ){

212 
p
->
pSrc
->
nBackup
++;

215 
	`sqlôe3_muãx_Àave
(
pDe°Db
->
muãx
);

216 
	`sqlôe3_muãx_Àave
(
pSrcDb
->
muãx
);

217  
p
;

218 
	}
}

225 
	$isF©ÆEº‹
(
rc
){

226  (
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 && 
	`ALWAYS
‘c!=
SQLITE_LOCKED
));

227 
	}
}

234 
	$backupO√Page
(

235 
sqlôe3_backup
 *
p
,

236 
Pgno
 
iSrcPg
,

237 c⁄° 
u8
 *
zSrcD©a
,

238 
bUpd©e


240 
Pagî
 * c⁄° 
pDe°Pagî
 = 
	`sqlôe3BåìPagî
(
p
->
pDe°
);

241 c⁄° 
nSrcPgsz
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
);

242 
nDe°Pgsz
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
);

243 c⁄° 
nC›y
 = 
	`MIN
(
nSrcPgsz
, 
nDe°Pgsz
);

244 c⁄° 
i64
 
iEnd
 = (i64)
iSrcPg
*(i64)
nSrcPgsz
;

245 #ifde‡
SQLITE_HAS_CODEC


249 
nSrcRe£rve
 = 
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
->
pSrc
);

250 
nDe°Re£rve
 = 
	`sqlôe3BåìGëO±imÆRe£rve
(
p
->
pDe°
);

252 
rc
 = 
SQLITE_OK
;

253 
i64
 
iOff
;

255 
	`as£π
–
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
->
pSrc
)>=0 );

256 
	`as£π
–
p
->
bDe°Locked
 );

257 
	`as£π
–!
	`isF©ÆEº‹
(
p
->
rc
) );

258 
	`as£π
–
iSrcPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pSrc
->
pBt
) );

259 
	`as£π
–
zSrcD©a
 );

264 if–
nSrcPgsz
!=
nDe°Pgsz
 && 
	`sqlôe3PagîIsMemdb
(
pDe°Pagî
) ){

265 
rc
 = 
SQLITE_READONLY
;

268 #ifde‡
SQLITE_HAS_CODEC


272 if–
nSrcPgsz
!=
nDe°Pgsz
 && 
	`sqlôe3PagîGëCodec
(
pDe°Pagî
)!=0 ){

273 
rc
 = 
SQLITE_READONLY
;

281 if–
nSrcRe£rve
!=
nDe°Re£rve
 ){

282 
u32
 
√wPgsz
 = 
nSrcPgsz
;

283 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pDe°Pagî
, &
√wPgsz
, 
nSrcRe£rve
);

284 if–
rc
==
SQLITE_OK
 && 
√wPgsz
!=
nSrcPgsz
 )Ñ¯
SQLITE_READONLY
;

292 
iOff
=
iEnd
-(
i64
)
nSrcPgsz
; 
rc
==
SQLITE_OK
 && iOff<iEnd; iOff+=
nDe°Pgsz
){

293 
DbPage
 *
pDe°Pg
 = 0;

294 
Pgno
 
iDe°
 = (Pgno)(
iOff
/
nDe°Pgsz
)+1;

295 if–
iDe°
==
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ) ;

296 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3PagîGë
(
pDe°Pagî
, 
iDe°
, &
pDe°Pg
, 0))

297 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3PagîWrôe
(
pDe°Pg
))

299 c⁄° 
u8
 *
zIn
 = &
zSrcD©a
[
iOff
%
nSrcPgsz
];

300 
u8
 *
zDe°D©a
 = 
	`sqlôe3PagîGëD©a
(
pDe°Pg
);

301 
u8
 *
zOut
 = &
zDe°D©a
[
iOff
%
nDe°Pgsz
];

310 
	`mem˝y
(
zOut
, 
zIn
, 
nC›y
);

311 ((
u8
 *)
	`sqlôe3PagîGëExåa
(
pDe°Pg
))[0] = 0;

312 if–
iOff
==0 && 
bUpd©e
==0 ){

313 
	`sqlôe3Put4byã
(&
zOut
[28], 
	`sqlôe3BåìLa°Page
(
p
->
pSrc
));

316 
	`sqlôe3PagîUƒef
(
pDe°Pg
);

319  
rc
;

320 
	}
}

330 
	$backupTrunˇãFûe
(
sqlôe3_fûe
 *
pFûe
, 
i64
 
iSize
){

331 
i64
 
iCuºít
;

332 
rc
 = 
	`sqlôe3OsFûeSize
(
pFûe
, &
iCuºít
);

333 if–
rc
==
SQLITE_OK
 && 
iCuºít
>
iSize
 ){

334 
rc
 = 
	`sqlôe3OsTrunˇã
(
pFûe
, 
iSize
);

336  
rc
;

337 
	}
}

343 
	$©èchBackupObje˘
(
sqlôe3_backup
 *
p
){

344 
sqlôe3_backup
 **
µ
;

345 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
->
pSrc
) );

346 
µ
 = 
	`sqlôe3PagîBackupPå
(
	`sqlôe3BåìPagî
(
p
->
pSrc
));

347 
p
->
pNext
 = *
µ
;

348 *
µ
 = 
p
;

349 
p
->
isAâached
 = 1;

350 
	}
}

355 
	$sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
){

356 
rc
;

357 
de°Mode
;

358 
pgszSrc
 = 0;

359 
pgszDe°
 = 0;

361 #ifde‡
SQLITE_ENABLE_API_ARMOR


362 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

364 
	`sqlôe3_muãx_íãr
(
p
->
pSrcDb
->
muãx
);

365 
	`sqlôe3BåìE¡î
(
p
->
pSrc
);

366 if–
p
->
pDe°Db
 ){

367 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

370 
rc
 = 
p
->rc;

371 if–!
	`isF©ÆEº‹
(
rc
) ){

372 
Pagî
 * c⁄° 
pSrcPagî
 = 
	`sqlôe3BåìPagî
(
p
->
pSrc
);

373 
Pagî
 * c⁄° 
pDe°Pagî
 = 
	`sqlôe3BåìPagî
(
p
->
pDe°
);

374 
ii
;

375 
nSrcPage
 = -1;

376 
bClo£Tøns
 = 0;

381 if–
p
->
pDe°Db
 &&Ö->
pSrc
->
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 ){

382 
rc
 = 
SQLITE_BUSY
;

384 
rc
 = 
SQLITE_OK
;

388 if–
SQLITE_OK
==
rc
 && 
p
->
bDe°Locked
==0

389 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3BåìBegöTøns
(
p
->
pDe°
, 2))

391 
p
->
bDe°Locked
 = 1;

392 
	`sqlôe3BåìGëMëa
(
p
->
pDe°
, 
BTREE_SCHEMA_VERSION
, &p->
iDe°Schema
);

399 if–
rc
==
SQLITE_OK
 && 0==
	`sqlôe3BåìIsInRódTøns
(
p
->
pSrc
) ){

400 
rc
 = 
	`sqlôe3BåìBegöTøns
(
p
->
pSrc
, 0);

401 
bClo£Tøns
 = 1;

406 
pgszSrc
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
);

407 
pgszDe°
 = 
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
);

408 
de°Mode
 = 
	`sqlôe3PagîGëJou∫ÆMode
(
	`sqlôe3BåìPagî
(
p
->
pDe°
));

409 if–
SQLITE_OK
==
rc
 && 
de°Mode
==
PAGER_JOURNALMODE_WAL
 && 
pgszSrc
!=
pgszDe°
 ){

410 
rc
 = 
SQLITE_READONLY
;

416 
nSrcPage
 = ()
	`sqlôe3BåìLa°Page
(
p
->
pSrc
);

417 
	`as£π
–
nSrcPage
>=0 );

418 
ii
=0; (
nPage
<0 || ii<nPageË&& 
p
->
iNext
<=(
Pgno
)
nSrcPage
 && !
rc
; ii++){

419 c⁄° 
Pgno
 
iSrcPg
 = 
p
->
iNext
;

420 if–
iSrcPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pSrc
->
pBt
) ){

421 
DbPage
 *
pSrcPg
;

422 
rc
 = 
	`sqlôe3PagîGë
(
pSrcPagî
, 
iSrcPg
, &
pSrcPg
,
PAGER_GET_READONLY
);

423 if–
rc
==
SQLITE_OK
 ){

424 
rc
 = 
	`backupO√Page
(
p
, 
iSrcPg
, 
	`sqlôe3PagîGëD©a
(
pSrcPg
), 0);

425 
	`sqlôe3PagîUƒef
(
pSrcPg
);

428 
p
->
iNext
++;

430 if–
rc
==
SQLITE_OK
 ){

431 
p
->
nPagecou¡
 = 
nSrcPage
;

432 
p
->
nRemaöög
 = 
nSrcPage
+1-p->
iNext
;

433 if–
p
->
iNext
>(
Pgno
)
nSrcPage
 ){

434 
rc
 = 
SQLITE_DONE
;

435 }if–!
p
->
isAâached
 ){

436 
	`©èchBackupObje˘
(
p
);

445 if–
rc
==
SQLITE_DONE
 ){

446 if–
nSrcPage
==0 ){

447 
rc
 = 
	`sqlôe3BåìNewDb
(
p
->
pDe°
);

448 
nSrcPage
 = 1;

450 if–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_DONE
 ){

451 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
->
pDe°
,1,p->
iDe°Schema
+1);

453 if–
rc
==
SQLITE_OK
 ){

454 if–
p
->
pDe°Db
 ){

455 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
p
->
pDe°Db
);

457 if–
de°Mode
==
PAGER_JOURNALMODE_WAL
 ){

458 
rc
 = 
	`sqlôe3BåìSëVîsi⁄
(
p
->
pDe°
, 2);

461 if–
rc
==
SQLITE_OK
 ){

462 
nDe°Trunˇã
;

475 
	`as£π
–
pgszSrc
==
	`sqlôe3BåìGëPageSize
(
p
->
pSrc
) );

476 
	`as£π
–
pgszDe°
==
	`sqlôe3BåìGëPageSize
(
p
->
pDe°
) );

477 if–
pgszSrc
<
pgszDe°
 ){

478 
øtio
 = 
pgszDe°
/
pgszSrc
;

479 
nDe°Trunˇã
 = (
nSrcPage
+
øtio
-1)/ratio;

480 if–
nDe°Trunˇã
==()
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ){

481 
nDe°Trunˇã
--;

484 
nDe°Trunˇã
 = 
nSrcPage
 * (
pgszSrc
/
pgszDe°
);

486 
	`as£π
–
nDe°Trunˇã
>0 );

488 if–
pgszSrc
<
pgszDe°
 ){

498 c⁄° 
i64
 
iSize
 = (i64)
pgszSrc
 * (i64)
nSrcPage
;

499 
sqlôe3_fûe
 * c⁄° 
pFûe
 = 
	`sqlôe3PagîFûe
(
pDe°Pagî
);

500 
Pgno
 
iPg
;

501 
nD°Page
;

502 
i64
 
iOff
;

503 
i64
 
iEnd
;

505 
	`as£π
–
pFûe
 );

506 
	`as£π
–
nDe°Trunˇã
==0

507 || (
i64
)
nDe°Trunˇã
*(i64)
pgszDe°
 >
iSize
 || (

508 
nDe°Trunˇã
==()(
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
)-1)

509 && 
iSize
>=
PENDING_BYTE
 && iSize<=PENDING_BYTE+
pgszDe°


518 
	`sqlôe3PagîPagecou¡
(
pDe°Pagî
, &
nD°Page
);

519 
iPg
=
nDe°Trunˇã
; 
rc
==
SQLITE_OK
 && iPg<=(
Pgno
)
nD°Page
; iPg++){

520 if–
iPg
!=
	`PENDING_BYTE_PAGE
(
p
->
pDe°
->
pBt
) ){

521 
DbPage
 *
pPg
;

522 
rc
 = 
	`sqlôe3PagîGë
(
pDe°Pagî
, 
iPg
, &
pPg
, 0);

523 if–
rc
==
SQLITE_OK
 ){

524 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
);

525 
	`sqlôe3PagîUƒef
(
pPg
);

529 if–
rc
==
SQLITE_OK
 ){

530 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pDe°Pagî
, 0, 1);

534 
iEnd
 = 
	`MIN
(
PENDING_BYTE
 + 
pgszDe°
, 
iSize
);

536 
iOff
=
PENDING_BYTE
+
pgszSrc
;

537 
rc
==
SQLITE_OK
 && 
iOff
<
iEnd
;

538 
iOff
+=
pgszSrc


540 
PgHdr
 *
pSrcPg
 = 0;

541 c⁄° 
Pgno
 
iSrcPg
 = (Pgno)((
iOff
/
pgszSrc
)+1);

542 
rc
 = 
	`sqlôe3PagîGë
(
pSrcPagî
, 
iSrcPg
, &
pSrcPg
, 0);

543 if–
rc
==
SQLITE_OK
 ){

544 
u8
 *
zD©a
 = 
	`sqlôe3PagîGëD©a
(
pSrcPg
);

545 
rc
 = 
	`sqlôe3OsWrôe
(
pFûe
, 
zD©a
, 
pgszSrc
, 
iOff
);

547 
	`sqlôe3PagîUƒef
(
pSrcPg
);

549 if–
rc
==
SQLITE_OK
 ){

550 
rc
 = 
	`backupTrunˇãFûe
(
pFûe
, 
iSize
);

554 if–
rc
==
SQLITE_OK
 ){

555 
rc
 = 
	`sqlôe3PagîSync
(
pDe°Pagî
, 0);

558 
	`sqlôe3PagîTrunˇãImage
(
pDe°Pagî
, 
nDe°Trunˇã
);

559 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pDe°Pagî
, 0, 0);

563 if–
SQLITE_OK
==
rc


564 && 
SQLITE_OK
==(
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
p
->
pDe°
, 0))

566 
rc
 = 
SQLITE_DONE
;

576 if–
bClo£Tøns
 ){

577 
	`TESTONLY
–
rc2
 );

578 
	`TESTONLY
–
rc2
 = ) 
	`sqlôe3BåìCommôPha£O√
(
p
->
pSrc
, 0);

579 
	`TESTONLY
–
rc2
 |Ë
	`sqlôe3BåìCommôPha£Two
(
p
->
pSrc
, 0);

580 
	`as£π
–
rc2
==
SQLITE_OK
 );

583 if–
rc
==
SQLITE_IOERR_NOMEM
 ){

584 
rc
 = 
SQLITE_NOMEM_BKPT
;

586 
p
->
rc
 =Ñc;

588 if–
p
->
pDe°Db
 ){

589 
	`sqlôe3_muãx_Àave
(
p
->
pDe°Db
->
muãx
);

591 
	`sqlôe3BåìLóve
(
p
->
pSrc
);

592 
	`sqlôe3_muãx_Àave
(
p
->
pSrcDb
->
muãx
);

593  
rc
;

594 
	}
}

599 
	$sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
){

600 
sqlôe3_backup
 **
µ
;

601 
sqlôe3
 *
pSrcDb
;

602 
rc
;

605 if–
p
==0 )  
SQLITE_OK
;

606 
pSrcDb
 = 
p
->pSrcDb;

607 
	`sqlôe3_muãx_íãr
(
pSrcDb
->
muãx
);

608 
	`sqlôe3BåìE¡î
(
p
->
pSrc
);

609 if–
p
->
pDe°Db
 ){

610 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

614 if–
p
->
pDe°Db
 ){

615 
p
->
pSrc
->
nBackup
--;

617 if–
p
->
isAâached
 ){

618 
µ
 = 
	`sqlôe3PagîBackupPå
(
	`sqlôe3BåìPagî
(
p
->
pSrc
));

619  *
µ
!=
p
 ){

620 
µ
 = &(*µ)->
pNext
;

622 *
µ
 = 
p
->
pNext
;

626 
	`sqlôe3BåìRﬁlback
(
p
->
pDe°
, 
SQLITE_OK
, 0);

629 
rc
 = (
p
->rc==
SQLITE_DONE
Ë? 
SQLITE_OK
 :Ö->rc;

630 if–
p
->
pDe°Db
 ){

631 
	`sqlôe3Eº‹
(
p
->
pDe°Db
, 
rc
);

634 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
p
->
pDe°Db
);

636 
	`sqlôe3BåìLóve
(
p
->
pSrc
);

637 if–
p
->
pDe°Db
 ){

641 
	`sqlôe3_‰ì
(
p
);

643 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
pSrcDb
);

644  
rc
;

645 
	}
}

651 
	$sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
){

652 #ifde‡
SQLITE_ENABLE_API_ARMOR


653 if–
p
==0 ){

654 ()
SQLITE_MISUSE_BKPT
;

658  
p
->
nRemaöög
;

659 
	}
}

665 
	$sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
){

666 #ifde‡
SQLITE_ENABLE_API_ARMOR


667 if–
p
==0 ){

668 ()
SQLITE_MISUSE_BKPT
;

672  
p
->
nPagecou¡
;

673 
	}
}

687 
SQLITE_NOINLINE
 
	$backupUpd©e
(

688 
sqlôe3_backup
 *
p
,

689 
Pgno
 
iPage
,

690 c⁄° 
u8
 *
aD©a


692 
	`as£π
–
p
!=0 );

694 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pSrc
->
pBt
->
muãx
) );

695 if–!
	`isF©ÆEº‹
(
p
->
rc
Ë&& 
iPage
<p->
iNext
 ){

700 
rc
;

701 
	`as£π
–
p
->
pDe°Db
 );

702 
	`sqlôe3_muãx_íãr
(
p
->
pDe°Db
->
muãx
);

703 
rc
 = 
	`backupO√Page
(
p
, 
iPage
, 
aD©a
, 1);

704 
	`sqlôe3_muãx_Àave
(
p
->
pDe°Db
->
muãx
);

705 
	`as£π
–
rc
!=
SQLITE_BUSY
 &&Ñc!=
SQLITE_LOCKED
 );

706 if–
rc
!=
SQLITE_OK
 ){

707 
p
->
rc
 =Ñc;

710 } (
p
 =Ö->
pNext
)!=0 );

711 
	}
}

712 
	$sqlôe3BackupUpd©e
(
sqlôe3_backup
 *
pBackup
, 
Pgno
 
iPage
, c⁄° 
u8
 *
aD©a
){

713 if–
pBackup
 ) 
	`backupUpd©e
’Backup, 
iPage
, 
aD©a
);

714 
	}
}

727 
	$sqlôe3BackupRe°¨t
(
sqlôe3_backup
 *
pBackup
){

728 
sqlôe3_backup
 *
p
;

729 
p
=
pBackup
;Ö;Öı->
pNext
){

730 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pSrc
->
pBt
->
muãx
) );

731 
p
->
iNext
 = 1;

733 
	}
}

735 #i‚de‡
SQLITE_OMIT_VACUUM


744 
	$sqlôe3BåìC›yFûe
(
Båì
 *
pTo
, Båì *
pFrom
){

745 
rc
;

746 
sqlôe3_fûe
 *
pFd
;

747 
sqlôe3_backup
 
b
;

748 
	`sqlôe3BåìE¡î
(
pTo
);

749 
	`sqlôe3BåìE¡î
(
pFrom
);

751 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pTo
) );

752 
pFd
 = 
	`sqlôe3PagîFûe
(
	`sqlôe3BåìPagî
(
pTo
));

753 if–
pFd
->
pMëhods
 ){

754 
i64
 
nByã
 = 
	`sqlôe3BåìGëPageSize
(
pFrom
)*(i64)
	`sqlôe3BåìLa°Page
(pFrom);

755 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pFd
, 
SQLITE_FCNTL_OVERWRITE
, &
nByã
);

756 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

757 if–
rc
 ) 
c›y_föished
;

765 
	`mem£t
(&
b
, 0, (b));

766 
b
.
pSrcDb
 = 
pFrom
->
db
;

767 
b
.
pSrc
 = 
pFrom
;

768 
b
.
pDe°
 = 
pTo
;

769 
b
.
iNext
 = 1;

771 #ifde‡
SQLITE_HAS_CODEC


772 
	`sqlôe3PagîAlignRe£rve
(
	`sqlôe3BåìPagî
(
pTo
), sqlôe3BåìPagî(
pFrom
));

781 
	`sqlôe3_backup_°ï
(&
b
, 0x7FFFFFFF);

782 
	`as£π
–
b
.
rc
!=
SQLITE_OK
 );

784 
rc
 = 
	`sqlôe3_backup_föish
(&
b
);

785 if–
rc
==
SQLITE_OK
 ){

786 
pTo
->
pBt
->
btsFœgs
 &~
BTS_PAGESIZE_FIXED
;

788 
	`sqlôe3PagîCÀ¨Cache
(
	`sqlôe3BåìPagî
(
b
.
pDe°
));

791 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pTo
)==0 );

792 
c›y_föished
:

793 
	`sqlôe3BåìLóve
(
pFrom
);

794 
	`sqlôe3BåìLóve
(
pTo
);

795  
rc
;

796 
	}
}

	@bitvec.c

37 
	~"sqlôeI¡.h
"

40 
	#BITVEC_SZ
 512

	)

44 
	#BITVEC_USIZE
 \

45 (((
BITVEC_SZ
-(3*(
u32
)))/(
Bôvec
*))*(Bôvec*))

	)

51 
	#BITVEC_TELEM
 
u8


	)

53 
	#BITVEC_SZELEM
 8

	)

55 
	#BITVEC_NELEM
 (
BITVEC_USIZE
/(
BITVEC_TELEM
))

	)

57 
	#BITVEC_NBIT
 (
BITVEC_NELEM
*
BITVEC_SZELEM
)

	)

60 
	#BITVEC_NINT
 (
BITVEC_USIZE
/(
u32
))

	)

63 
	#BITVEC_MXHASH
 (
BITVEC_NINT
/2)

	)

68 
	#BITVEC_HASH
(
X
Ë(((X)*1)%
BITVEC_NINT
)

	)

70 
	#BITVEC_NPTR
 (
BITVEC_USIZE
/(
Bôvec
 *))

	)

94 
	sBôvec
 {

95 
u32
 
	miSize
;

96 
u32
 
	mnSë
;

99 
u32
 
	miDivis‹
;

104 
BITVEC_TELEM
 
	maBôm≠
[
BITVEC_NELEM
];

105 
u32
 
	maHash
[
BITVEC_NINT
];

106 
Bôvec
 *
	m≠Sub
[
BITVEC_NPTR
];

107 } 
	mu
;

115 
Bôvec
 *
	$sqlôe3BôvecCª©e
(
u32
 
iSize
){

116 
Bôvec
 *
p
;

117 
	`as£π
–(*
p
)==
BITVEC_SZ
 );

118 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

119 if–
p
 ){

120 
p
->
iSize
 = iSize;

122  
p
;

123 
	}
}

130 
	$sqlôe3BôvecTe°NŸNuŒ
(
Bôvec
 *
p
, 
u32
 
i
){

131 
	`as£π
–
p
!=0 );

132 
i
--;

133 if–
i
>=
p
->
iSize
 )  0;

134  
p
->
iDivis‹
 ){

135 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

136 
i
 = i%
p
->
iDivis‹
;

137 
p
 =Ö->
u
.
≠Sub
[
bö
];

138 i‡(!
p
) {

142 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

143  (
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] & (1<<(i&(BITVEC_SZELEM-1))))!=0;

145 
u32
 
h
 = 
	`BITVEC_HASH
(
i
++);

146  
p
->
u
.
aHash
[
h
] ){

147 if–
p
->
u
.
aHash
[
h
]==
i
 )  1;

148 
h
 = (h+1Ë% 
BITVEC_NINT
;

152 
	}
}

153 
	$sqlôe3BôvecTe°
(
Bôvec
 *
p
, 
u32
 
i
){

154  
p
!=0 && 
	`sqlôe3BôvecTe°NŸNuŒ
’,
i
);

155 
	}
}

169 
	$sqlôe3BôvecSë
(
Bôvec
 *
p
, 
u32
 
i
){

170 
u32
 
h
;

171 if–
p
==0 )  
SQLITE_OK
;

172 
	`as£π
–
i
>0 );

173 
	`as£π
–
i
<=
p
->
iSize
 );

174 
i
--;

175 (
p
->
iSize
 > 
BITVEC_NBIT
Ë&&Ö->
iDivis‹
) {

176 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

177 
i
 = i%
p
->
iDivis‹
;

178 if–
p
->
u
.
≠Sub
[
bö
]==0 ){

179 
p
->
u
.
≠Sub
[
bö
] = 
	`sqlôe3BôvecCª©e
–p->
iDivis‹
 );

180 if–
p
->
u
.
≠Sub
[
bö
]==0 )  
SQLITE_NOMEM_BKPT
;

182 
p
 =Ö->
u
.
≠Sub
[
bö
];

184 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

185 
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] |= 1 << (i&(BITVEC_SZELEM-1));

186  
SQLITE_OK
;

188 
h
 = 
	`BITVEC_HASH
(
i
++);

192 if–!
p
->
u
.
aHash
[
h
] ){

193 i‡(
p
->
nSë
<(
BITVEC_NINT
-1)) {

194 
bôvec_£t_íd
;

196 
bôvec_£t_ªhash
;

202 if–
p
->
u
.
aHash
[
h
]==
i
 )  
SQLITE_OK
;

203 
h
++;

204 if–
h
>=
BITVEC_NINT
 ) h = 0;

205 }  
p
->
u
.
aHash
[
h
] );

209 
bôvec_£t_ªhash
:

210 if–
p
->
nSë
>=
BITVEC_MXHASH
 ){

211 
j
;

212 
rc
;

213 
u32
 *
aiVÆues
 = 
	`sqlôe3SèckAŒocRaw
(0, (
p
->
u
.
aHash
));

214 if–
aiVÆues
==0 ){

215  
SQLITE_NOMEM_BKPT
;

217 
	`mem˝y
(
aiVÆues
, 
p
->
u
.
aHash
, (p->u.aHash));

218 
	`mem£t
(
p
->
u
.
≠Sub
, 0, (p->u.apSub));

219 
p
->
iDivis‹
 = (p->
iSize
 + 
BITVEC_NPTR
 - 1)/BITVEC_NPTR;

220 
rc
 = 
	`sqlôe3BôvecSë
(
p
, 
i
);

221 
j
=0; j<
BITVEC_NINT
; j++){

222 if–
aiVÆues
[
j
] ) 
rc
 |
	`sqlôe3BôvecSë
(
p
,áiValues[j]);

224 
	`sqlôe3SèckFªe
(0, 
aiVÆues
);

225  
rc
;

228 
bôvec_£t_íd
:

229 
p
->
nSë
++;

230 
p
->
u
.
aHash
[
h
] = 
i
;

231  
SQLITE_OK
;

232 
	}
}

240 
	$sqlôe3BôvecCÀ¨
(
Bôvec
 *
p
, 
u32
 
i
, *
pBuf
){

241 if–
p
==0 ) ;

242 
	`as£π
–
i
>0 );

243 
i
--;

244  
p
->
iDivis‹
 ){

245 
u32
 
bö
 = 
i
/
p
->
iDivis‹
;

246 
i
 = i%
p
->
iDivis‹
;

247 
p
 =Ö->
u
.
≠Sub
[
bö
];

248 i‡(!
p
) {

252 if–
p
->
iSize
<=
BITVEC_NBIT
 ){

253 
p
->
u
.
aBôm≠
[
i
/
BITVEC_SZELEM
] &= ~(1 << (i&(BITVEC_SZELEM-1)));

255 
j
;

256 
u32
 *
aiVÆues
 = 
pBuf
;

257 
	`mem˝y
(
aiVÆues
, 
p
->
u
.
aHash
, (p->u.aHash));

258 
	`mem£t
(
p
->
u
.
aHash
, 0, (p->u.aHash));

259 
p
->
nSë
 = 0;

260 
j
=0; j<
BITVEC_NINT
; j++){

261 if–
aiVÆues
[
j
] &&áiVÆues[j]!=(
i
+1) ){

262 
u32
 
h
 = 
	`BITVEC_HASH
(
aiVÆues
[
j
]-1);

263 
p
->
nSë
++;

264  
p
->
u
.
aHash
[
h
] ){

265 
h
++;

266 if–
h
>=
BITVEC_NINT
 ) h = 0;

268 
p
->
u
.
aHash
[
h
] = 
aiVÆues
[
j
];

272 
	}
}

277 
	$sqlôe3BôvecDe°roy
(
Bôvec
 *
p
){

278 if–
p
==0 ) ;

279 if–
p
->
iDivis‹
 ){

280 
i
;

281 
i
=0; i<
BITVEC_NPTR
; i++){

282 
	`sqlôe3BôvecDe°roy
(
p
->
u
.
≠Sub
[
i
]);

285 
	`sqlôe3_‰ì
(
p
);

286 
	}
}

292 
u32
 
	$sqlôe3BôvecSize
(
Bôvec
 *
p
){

293  
p
->
iSize
;

294 
	}
}

296 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


303 
	#SETBIT
(
V
,
I
ËV[I>>3] |(1<<(I&7))

	)

304 
	#CLEARBIT
(
V
,
I
ËV[I>>3] &~(1<<(I&7))

	)

305 
	#TESTBIT
(
V
,
I
Ë(V[I>>3]&(1<<(I&7)))!=0

	)

337 
	$sqlôe3BôvecBuûtöTe°
(
sz
, *
aOp
){

338 
Bôvec
 *
pBôvec
 = 0;

339 *
pV
 = 0;

340 
rc
 = -1;

341 
i
, 
nx
, 
pc
, 
›
;

342 *
pTmpS∑˚
;

346 
pBôvec
 = 
	`sqlôe3BôvecCª©e
–
sz
 );

347 
pV
 = 
	`sqlôe3MÆlocZîo
–(
sz
+7)/8 + 1 );

348 
pTmpS∑˚
 = 
	`sqlôe3_mÆloc64
(
BITVEC_SZ
);

349 if–
pBôvec
==0 || 
pV
==0 || 
pTmpS∑˚
==0 ) 
bôvec_íd
;

352 
	`sqlôe3BôvecSë
(0, 1);

353 
	`sqlôe3BôvecCÀ¨
(0, 1, 
pTmpS∑˚
);

356 
pc
 = 0;

357  (
›
 = 
aOp
[
pc
])!=0 ){

358  
›
 ){

362 
nx
 = 4;

363 
i
 = 
aOp
[
pc
+2] - 1;

364 
aOp
[
pc
+2] +=áOp[pc+3];

370 
nx
 = 2;

371 
	`sqlôe3_øndom√ss
((
i
), &i);

375 if–(--
aOp
[
pc
+1]Ë> 0 ) 
nx
 = 0;

376 
pc
 +
nx
;

377 
i
 = (ò& 0x7fffffff)%
sz
;

378 if–(
›
 & 1)!=0 ){

379 
	`SETBIT
(
pV
, (
i
+1));

380 if–
›
!=5 ){

381 if–
	`sqlôe3BôvecSë
(
pBôvec
, 
i
+1ËË
bôvec_íd
;

384 
	`CLEARBIT
(
pV
, (
i
+1));

385 
	`sqlôe3BôvecCÀ¨
(
pBôvec
, 
i
+1, 
pTmpS∑˚
);

394 
rc
 = 
	`sqlôe3BôvecTe°
(0,0Ë+ sqlôe3BôvecTe°(
pBôvec
, 
sz
+1)

395 + 
	`sqlôe3BôvecTe°
(
pBôvec
, 0)

396 + (
	`sqlôe3BôvecSize
(
pBôvec
Ë- 
sz
);

397 
i
=1; i<=
sz
; i++){

398 if–(
	`TESTBIT
(
pV
,
i
))!=
	`sqlôe3BôvecTe°
(
pBôvec
,i) ){

399 
rc
 = 
i
;

405 
bôvec_íd
:

406 
	`sqlôe3_‰ì
(
pTmpS∑˚
);

407 
	`sqlôe3_‰ì
(
pV
);

408 
	`sqlôe3BôvecDe°roy
(
pBôvec
);

409  
rc
;

410 
	}
}

	@btmutex.c

18 
	~"båìI¡.h
"

19 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


20 #i‡
SQLITE_THREADSAFE


27 
	$lockBåìMuãx
(
Båì
 *
p
){

28 
	`as£π
–
p
->
locked
==0 );

29 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
p
->
pBt
->
muãx
) );

30 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

32 
	`sqlôe3_muãx_íãr
(
p
->
pBt
->
muãx
);

33 
p
->
pBt
->
db
 =Ö->db;

34 
p
->
locked
 = 1;

35 
	}
}

41 
SQLITE_NOINLINE
 
	$u∆ockBåìMuãx
(
Båì
 *
p
){

42 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

43 
	`as£π
–
p
->
locked
==1 );

44 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

45 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

46 
	`as£π
–
p
->
db
==
pBt
->db );

48 
	`sqlôe3_muãx_Àave
(
pBt
->
muãx
);

49 
p
->
locked
 = 0;

50 
	}
}

53 
SQLITE_NOINLINE
 
båìLockC¨efuŒy
(
Båì
 *
p
);

71 
	$sqlôe3BåìE¡î
(
Båì
 *
p
){

76 
	`as£π
–
p
->
pNext
==0 ||Ö->pNext->
pBt
>p->pBt );

77 
	`as£π
–
p
->
pPªv
==0 ||Ö->pPªv->
pBt
<p->pBt );

78 
	`as£π
–
p
->
pNext
==0 ||Ö->pNext->
db
==p->db );

79 
	`as£π
–
p
->
pPªv
==0 ||Ö->pPªv->
db
==p->db );

80 
	`as£π
–
p
->
sh¨abÀ
 || (p->
pNext
==0 &&Ö->
pPªv
==0) );

83 
	`as£π
–!
p
->
locked
 ||Ö->
w™tToLock
>0 );

84 
	`as£π
–
p
->
sh¨abÀ
 ||Ö->
w™tToLock
==0 );

87 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

91 
	`as£π
–(
p
->
locked
==0 &&Ö->
sh¨abÀ
Ë||Ö->
pBt
->
db
==p->db );

93 if–!
p
->
sh¨abÀ
 ) ;

94 
p
->
w™tToLock
++;

95 if–
p
->
locked
 ) ;

96 
	`båìLockC¨efuŒy
(
p
);

97 
	}
}

105 
SQLITE_NOINLINE
 
	$båìLockC¨efuŒy
(
Båì
 *
p
){

106 
Båì
 *
pL©î
;

112 if–
	`sqlôe3_muãx_åy
(
p
->
pBt
->
muãx
)==
SQLITE_OK
 ){

113 
p
->
pBt
->
db
 =Ö->db;

114 
p
->
locked
 = 1;

123 
pL©î
=
p
->
pNext
;ÖLater;ÖLater=pLater->pNext){

124 
	`as£π
–
pL©î
->
sh¨abÀ
 );

125 
	`as£π
–
pL©î
->
pNext
==0 ||ÖL©î->pNext->
pBt
>pLater->pBt );

126 
	`as£π
–!
pL©î
->
locked
 ||ÖL©î->
w™tToLock
>0 );

127 if–
pL©î
->
locked
 ){

128 
	`u∆ockBåìMuãx
(
pL©î
);

131 
	`lockBåìMuãx
(
p
);

132 
pL©î
=
p
->
pNext
;ÖLater;ÖLater=pLater->pNext){

133 if–
pL©î
->
w™tToLock
 ){

134 
	`lockBåìMuãx
(
pL©î
);

137 
	}
}

143 
	$sqlôe3BåìLóve
(
Båì
 *
p
){

144 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

145 if–
p
->
sh¨abÀ
 ){

146 
	`as£π
–
p
->
w™tToLock
>0 );

147 
p
->
w™tToLock
--;

148 if–
p
->
w™tToLock
==0 ){

149 
	`u∆ockBåìMuãx
(
p
);

152 
	}
}

154 #i‚de‡
NDEBUG


161 
	$sqlôe3BåìHﬁdsMuãx
(
Båì
 *
p
){

162 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 ||Ö->
w™tToLock
>0 );

163 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 ||Ö->
db
=ı->
pBt
->db );

164 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 || 
	`sqlôe3_muãx_hñd
’->
pBt
->
muãx
) );

165 
	`as£π
–
p
->
sh¨abÀ
==0 ||Ö->
locked
==0 || 
	`sqlôe3_muãx_hñd
’->
db
->
muãx
) );

167  (
p
->
sh¨abÀ
==0 ||Ö->
locked
);

168 
	}
}

186 
	$sqlôe3BåìE¡îAŒ
(
sqlôe3
 *
db
){

187 
i
;

188 
Båì
 *
p
;

189 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

190 
i
=0; i<
db
->
nDb
; i++){

191 
p
 = 
db
->
aDb
[
i
].
pBt
;

192 if–
p
 ) 
	`sqlôe3BåìE¡î
(p);

194 
	}
}

195 
	$sqlôe3BåìLóveAŒ
(
sqlôe3
 *
db
){

196 
i
;

197 
Båì
 *
p
;

198 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

199 
i
=0; i<
db
->
nDb
; i++){

200 
p
 = 
db
->
aDb
[
i
].
pBt
;

201 if–
p
 ) 
	`sqlôe3BåìLóve
(p);

203 
	}
}

205 #i‚de‡
NDEBUG


212 
	$sqlôe3BåìHﬁdsAŒMuãxes
(
sqlôe3
 *
db
){

213 
i
;

214 if–!
	`sqlôe3_muãx_hñd
(
db
->
muãx
) ){

217 
i
=0; i<
db
->
nDb
; i++){

218 
Båì
 *
p
;

219 
p
 = 
db
->
aDb
[
i
].
pBt
;

220 if–
p
 &&Ö->
sh¨abÀ
 &&

221 (
p
->
w™tToLock
==0 || !
	`sqlôe3_muãx_hñd
’->
pBt
->
muãx
)) ){

226 
	}
}

229 #i‚de‡
NDEBUG


241 
	$sqlôe3SchemaMuãxHñd
(
sqlôe3
 *
db
, 
iDb
, 
Schema
 *
pSchema
){

242 
Båì
 *
p
;

243 
	`as£π
–
db
!=0 );

244 if–
pSchema
 ) 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
,ÖSchema);

245 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

246 if–!
	`sqlôe3_muãx_hñd
(
db
->
muãx
) )  0;

247 if–
iDb
==1 )  1;

248 
p
 = 
db
->
aDb
[
iDb
].
pBt
;

249 
	`as£π
–
p
!=0 );

250  
p
->
sh¨abÀ
==0 ||Ö->
locked
==1;

251 
	}
}

265 
	$sqlôe3BåìE¡î
(
Båì
 *
p
){

266 
p
->
pBt
->
db
 =Ö->db;

267 
	}
}

268 
	$sqlôe3BåìE¡îAŒ
(
sqlôe3
 *
db
){

269 
i
;

270 
i
=0; i<
db
->
nDb
; i++){

271 
Båì
 *
p
 = 
db
->
aDb
[
i
].
pBt
;

272 if–
p
 ){

273 
p
->
pBt
->
db
 =Ö->db;

276 
	}
}

279 #i‚de‡
SQLITE_OMIT_INCRBLOB


287 
	$sqlôe3BåìE¡îCurs‹
(
BtCurs‹
 *
pCur
){

288 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

289 
	}
}

290 #i‡
SQLITE_THREADSAFE


291 
	$sqlôe3BåìLóveCurs‹
(
BtCurs‹
 *
pCur
){

292 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

293 
	}
}

	@btree.c

16 
	~"båìI¡.h
"

22 c⁄° 
	gzMagicHódî
[] = 
SQLITE_FILE_HEADER
;

29 
	gsqlôe3BåìTø˚
=1;

30 
	#TRACE
(
X
Ëif(
sqlôe3BåìTø˚
){
¥ötf
 X;
	`fÊush
(
°dout
);}

	)

32 
	#TRACE
(
X
)

	)

44 
	#gë2byãNŸZîo
(
X
Ë((((()
	`gë2byã
(X))-1)&0xffff)+1)

	)

49 
	#BTALLOC_ANY
 0

	)

50 
	#BTALLOC_EXACT
 1

	)

51 
	#BTALLOC_LE
 2

	)

59 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


60 
	#IfNŸOmôAV
(
ex¥
Ë”x¥)

	)

62 
	#IfNŸOmôAV
(
ex¥
Ë0

	)

65 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


74 #ifde‡
SQLITE_TEST


75 
BtSh¨ed
 *
SQLITE_WSD
 
	gsqlôe3Sh¨edCacheLi°
 = 0;

77 
BtSh¨ed
 *
SQLITE_WSD
 
	gsqlôe3Sh¨edCacheLi°
 = 0;

81 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


89 
	$sqlôe3_íabÀ_sh¨ed_ˇche
(
íabÀ
){

90 
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
 = 
íabÀ
;

91  
SQLITE_OK
;

92 
	}
}

97 #ifde‡
SQLITE_OMIT_SHARED_CACHE


107 
	#quîySh¨edCacheTabÀLock
(
a
,
b
,
c
Ë
SQLITE_OK


	)

108 
	#£tSh¨edCacheTabÀLock
(
a
,
b
,
c
Ë
SQLITE_OK


	)

109 
	#˛órAŒSh¨edCacheTabÀLocks
(
a
)

	)

110 
	#downgødeAŒSh¨edCacheTabÀLocks
(
a
)

	)

111 
	#hasSh¨edCacheTabÀLock
(
a
,
b
,
c
,
d
Ë1

	)

112 
	#hasRódC⁄Êi˘s
(
a
, 
b
Ë0

	)

115 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


117 #ifde‡
SQLITE_DEBUG


140 
	$hasSh¨edCacheTabÀLock
(

141 
Båì
 *
pBåì
,

142 
Pgno
 
iRoŸ
,

143 
isIndex
,

144 
eLockTy≥


146 
Schema
 *
pSchema
 = (Schem®*)
pBåì
->
pBt
->pSchema;

147 
Pgno
 
iTab
 = 0;

148 
BtLock
 *
pLock
;

154 if–(
pBåì
->
sh¨abÀ
==0)

155 || (
eLockTy≥
==
READ_LOCK
 && (
pBåì
->
db
->
Êags
 & 
SQLITE_RódUncommôãd
))

165 if–
isIndex
 && (!
pSchema
 || (pSchema->
schemaFœgs
&
DB_SchemaLﬂded
)==0) ){

173 if–
isIndex
 ){

174 
HashEÀm
 *
p
;

175 
p
=
	`sqlôeHashFú°
(&
pSchema
->
idxHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

176 
Index
 *
pIdx
 = (Index *)
	`sqlôeHashD©a
(
p
);

177 if–
pIdx
->
äum
==()
iRoŸ
 ){

178 if–
iTab
 ){

184 
iTab
 = 
pIdx
->
pTabÀ
->
äum
;

188 
iTab
 = 
iRoŸ
;

194 
pLock
=
pBåì
->
pBt
->pLock;ÖLock;ÖLockıLock->
pNext
){

195 if–
pLock
->
pBåì
==pBtree

196 && (
pLock
->
iTabÀ
==
iTab
 || (pLock->
eLock
==
WRITE_LOCK
 &&ÖLock->iTable==1))

197 && 
pLock
->
eLock
>=
eLockTy≥


205 
	}
}

208 #ifde‡
SQLITE_DEBUG


227 
	$hasRódC⁄Êi˘s
(
Båì
 *
pBåì
, 
Pgno
 
iRoŸ
){

228 
BtCurs‹
 *
p
;

229 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

230 if–
p
->
pgnoRoŸ
==
iRoŸ


231 && 
p
->
pBåì
!=pBtree

232 && 0==(
p
->
pBåì
->
db
->
Êags
 & 
SQLITE_RódUncommôãd
)

238 
	}
}

247 
	$quîySh¨edCacheTabÀLock
(
Båì
 *
p
, 
Pgno
 
iTab
, 
u8
 
eLock
){

248 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

249 
BtLock
 *
pIãr
;

251 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

252 
	`as£π
–
eLock
==
READ_LOCK
 ||ÉLock==
WRITE_LOCK
 );

253 
	`as£π
–
p
->
db
!=0 );

254 
	`as£π
–!(
p
->
db
->
Êags
&
SQLITE_RódUncommôãd
)||
eLock
==
WRITE_LOCK
||
iTab
==1 );

260 
	`as£π
–
eLock
==
READ_LOCK
 || (
p
==
pBt
->
pWrôî
 &&Ö->
öTøns
==
TRANS_WRITE
) );

261 
	`as£π
–
eLock
==
READ_LOCK
 || 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

264 if–!
p
->
sh¨abÀ
 ){

265  
SQLITE_OK
;

271 if–
pBt
->
pWrôî
!=
p
 && (pBt->
btsFœgs
 & 
BTS_EXCLUSIVE
)!=0 ){

272 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pBt
->
pWrôî
->db);

273  
SQLITE_LOCKED_SHAREDCACHE
;

276 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

286 
	`as£π
–
pIãr
->
eLock
==
READ_LOCK
 ||ÖIãr->eLock==
WRITE_LOCK
 );

287 
	`as£π
–
eLock
==
READ_LOCK
 || 
pIãr
->
pBåì
==
p
 ||ÖIter->eLock==READ_LOCK);

288 if–
pIãr
->
pBåì
!=
p
 &&ÖIãr->
iTabÀ
==
iTab
 &&ÖIãr->
eLock
!=eLock ){

289 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pIãr
->
pBåì
->db);

290 if–
eLock
==
WRITE_LOCK
 ){

291 
	`as£π
–
p
==
pBt
->
pWrôî
 );

292 
pBt
->
btsFœgs
 |
BTS_PENDING
;

294  
SQLITE_LOCKED_SHAREDCACHE
;

297  
SQLITE_OK
;

298 
	}
}

301 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


319 
	$£tSh¨edCacheTabÀLock
(
Båì
 *
p
, 
Pgno
 
iTabÀ
, 
u8
 
eLock
){

320 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

321 
BtLock
 *
pLock
 = 0;

322 
BtLock
 *
pIãr
;

324 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

325 
	`as£π
–
eLock
==
READ_LOCK
 ||ÉLock==
WRITE_LOCK
 );

326 
	`as£π
–
p
->
db
!=0 );

332 
	`as£π
–0==(
p
->
db
->
Êags
&
SQLITE_RódUncommôãd
Ë|| 
eLock
==
WRITE_LOCK
 );

336 
	`as£π
–
p
->
sh¨abÀ
 );

337 
	`as£π
–
SQLITE_OK
==
	`quîySh¨edCacheTabÀLock
(
p
, 
iTabÀ
, 
eLock
) );

340 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

341 if–
pIãr
->
iTabÀ
==iTabÀ &&ÖIãr->
pBåì
==
p
 ){

342 
pLock
 = 
pIãr
;

350 if–!
pLock
 ){

351 
pLock
 = (
BtLock
 *)
	`sqlôe3MÆlocZîo
((BtLock));

352 if–!
pLock
 ){

353  
SQLITE_NOMEM_BKPT
;

355 
pLock
->
iTabÀ
 = iTable;

356 
pLock
->
pBåì
 = 
p
;

357 
pLock
->
pNext
 = 
pBt
->pLock;

358 
pBt
->
pLock
 =ÖLock;

365 
	`as£π
–
WRITE_LOCK
>
READ_LOCK
 );

366 if–
eLock
>
pLock
->eLock ){

367 
pLock
->
eLock
 =ÉLock;

370  
SQLITE_OK
;

371 
	}
}

374 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


383 
	$˛órAŒSh¨edCacheTabÀLocks
(
Båì
 *
p
){

384 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

385 
BtLock
 **
µIãr
 = &
pBt
->
pLock
;

387 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

388 
	`as£π
–
p
->
sh¨abÀ
 || 0==*
µIãr
 );

389 
	`as£π
–
p
->
öTøns
>0 );

391  *
µIãr
 ){

392 
BtLock
 *
pLock
 = *
µIãr
;

393 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_EXCLUSIVE
)==0 ||ÖBt->
pWrôî
==
pLock
->
pBåì
 );

394 
	`as£π
–
pLock
->
pBåì
->
öTøns
>ıLock->
eLock
 );

395 if–
pLock
->
pBåì
==
p
 ){

396 *
µIãr
 = 
pLock
->
pNext
;

397 
	`as£π
–
pLock
->
iTabÀ
!=1 ||ÖLock==&
p
->
lock
 );

398 if–
pLock
->
iTabÀ
!=1 ){

399 
	`sqlôe3_‰ì
(
pLock
);

402 
µIãr
 = &
pLock
->
pNext
;

406 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_PENDING
)==0 ||ÖBt->
pWrôî
 );

407 if–
pBt
->
pWrôî
==
p
 ){

408 
pBt
->
pWrôî
 = 0;

409 
pBt
->
btsFœgs
 &~(
BTS_EXCLUSIVE
|
BTS_PENDING
);

410 }if–
pBt
->
nTønß˘i⁄
==2 ){

420 
pBt
->
btsFœgs
 &~
BTS_PENDING
;

422 
	}
}

427 
	$downgødeAŒSh¨edCacheTabÀLocks
(
Båì
 *
p
){

428 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

429 if–
pBt
->
pWrôî
==
p
 ){

430 
BtLock
 *
pLock
;

431 
pBt
->
pWrôî
 = 0;

432 
pBt
->
btsFœgs
 &~(
BTS_EXCLUSIVE
|
BTS_PENDING
);

433 
pLock
=
pBt
->pLock;ÖLock;ÖLockıLock->
pNext
){

434 
	`as£π
–
pLock
->
eLock
==
READ_LOCK
 ||ÖLock->
pBåì
==
p
 );

435 
pLock
->
eLock
 = 
READ_LOCK
;

438 
	}
}

442 
ªÀa£Page
(
MemPage
 *
pPage
);

449 #ifde‡
SQLITE_DEBUG


450 
	$curs‹HﬁdsMuãx
(
BtCurs‹
 *
p
){

451  
	`sqlôe3_muãx_hñd
(
p
->
pBt
->
muãx
);

452 
	}
}

462 
	$curs‹OwnsBtSh¨ed
(
BtCurs‹
 *
p
){

463 
	`as£π
–
	`curs‹HﬁdsMuãx
(
p
) );

464  (
p
->
pBåì
->
db
=ı->
pBt
->db);

465 
	}
}

472 
	#övÆid©eOvîÊowCache
(
pCur
Ë’Cur->
curFœgs
 &~
BTCF_VÆidOvÊ
)

	)

478 
	$övÆid©eAŒOvîÊowCache
(
BtSh¨ed
 *
pBt
){

479 
BtCurs‹
 *
p
;

480 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

481 
p
=
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

482 
	`övÆid©eOvîÊowCache
(
p
);

484 
	}
}

486 #i‚de‡
SQLITE_OMIT_INCRBLOB


500 
	$övÆid©eIn¸blobCurs‹s
(

501 
Båì
 *
pBåì
,

502 
i64
 
iRow
,

503 
isCÀ¨TabÀ


505 
BtCurs‹
 *
p
;

506 if–
pBåì
->
hasIn¸blobCur
==0 ) ;

507 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
pBåì
) );

508 
pBåì
->
hasIn¸blobCur
 = 0;

509 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

510 if–(
p
->
curFœgs
 & 
BTCF_In¸blob
)!=0 ){

511 
pBåì
->
hasIn¸blobCur
 = 1;

512 if–
isCÀ¨TabÀ
 || 
p
->
öfo
.
nKey
==
iRow
 ){

513 
p
->
eSèã
 = 
CURSOR_INVALID
;

517 
	}
}

521 
	#övÆid©eIn¸blobCurs‹s
(
x
,
y
,
z
)

	)

559 
	$båìSëHasC⁄ã¡
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

560 
rc
 = 
SQLITE_OK
;

561 if–!
pBt
->
pHasC⁄ã¡
 ){

562 
	`as£π
–
pgno
<=
pBt
->
nPage
 );

563 
pBt
->
pHasC⁄ã¡
 = 
	`sqlôe3BôvecCª©e
’Bt->
nPage
);

564 if–!
pBt
->
pHasC⁄ã¡
 ){

565 
rc
 = 
SQLITE_NOMEM_BKPT
;

568 if–
rc
==
SQLITE_OK
 && 
pgno
<=
	`sqlôe3BôvecSize
(
pBt
->
pHasC⁄ã¡
) ){

569 
rc
 = 
	`sqlôe3BôvecSë
(
pBt
->
pHasC⁄ã¡
, 
pgno
);

571  
rc
;

572 
	}
}

581 
	$båìGëHasC⁄ã¡
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

582 
Bôvec
 *
p
 = 
pBt
->
pHasC⁄ã¡
;

583  (
p
 && (
pgno
>
	`sqlôe3BôvecSize
’Ë|| 
	`sqlôe3BôvecTe°
(p,Ögno)));

584 
	}
}

590 
	$båìCÀ¨HasC⁄ã¡
(
BtSh¨ed
 *
pBt
){

591 
	`sqlôe3BôvecDe°roy
(
pBt
->
pHasC⁄ã¡
);

592 
pBt
->
pHasC⁄ã¡
 = 0;

593 
	}
}

598 
	$båìRñó£AŒCurs‹Pages
(
BtCurs‹
 *
pCur
){

599 
i
;

600 
i
=0; i<=
pCur
->
iPage
; i++){

601 
	`ªÀa£Page
(
pCur
->
≠Page
[
i
]);

602 
pCur
->
≠Page
[
i
] = 0;

604 
pCur
->
iPage
 = -1;

605 
	}
}

620 
	$ßveCurs‹Key
(
BtCurs‹
 *
pCur
){

621 
rc
 = 
SQLITE_OK
;

622 
	`as£π
–
CURSOR_VALID
==
pCur
->
eSèã
 );

623 
	`as£π
–0==
pCur
->
pKey
 );

624 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

626 if–
pCur
->
curI¡Key
 ){

628 
pCur
->
nKey
 = 
	`sqlôe3BåìI¡egîKey
(pCur);

631 *
pKey
;

632 
pCur
->
nKey
 = 
	`sqlôe3BåìPaylﬂdSize
(pCur);

633 
pKey
 = 
	`sqlôe3MÆloc
–
pCur
->
nKey
 );

634 if–
pKey
 ){

635 
rc
 = 
	`sqlôe3BåìKey
(
pCur
, 0, (ÌCur->
nKey
, 
pKey
);

636 if–
rc
==
SQLITE_OK
 ){

637 
pCur
->
pKey
 =ÖKey;

639 
	`sqlôe3_‰ì
(
pKey
);

642 
rc
 = 
SQLITE_NOMEM_BKPT
;

645 
	`as£π
–!
pCur
->
curI¡Key
 || !pCur->
pKey
 );

646  
rc
;

647 
	}
}

656 
	$ßveCurs‹Posôi⁄
(
BtCurs‹
 *
pCur
){

657 
rc
;

659 
	`as£π
–
CURSOR_VALID
==
pCur
->
eSèã
 || 
CURSOR_SKIPNEXT
==pCur->eState );

660 
	`as£π
–0==
pCur
->
pKey
 );

661 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

663 if–
pCur
->
eSèã
==
CURSOR_SKIPNEXT
 ){

664 
pCur
->
eSèã
 = 
CURSOR_VALID
;

666 
pCur
->
skùNext
 = 0;

669 
rc
 = 
	`ßveCurs‹Key
(
pCur
);

670 if–
rc
==
SQLITE_OK
 ){

671 
	`båìRñó£AŒCurs‹Pages
(
pCur
);

672 
pCur
->
eSèã
 = 
CURSOR_REQUIRESEEK
;

675 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
|
BTCF_AtLa°
);

676  
rc
;

677 
	}
}

680 
SQLITE_NOINLINE
 
ßveCurs‹sOnLi°
(
BtCurs‹
*,
Pgno
,BtCursor*);

703 
	$ßveAŒCurs‹s
(
BtSh¨ed
 *
pBt
, 
Pgno
 
iRoŸ
, 
BtCurs‹
 *
pEx˚±
){

704 
BtCurs‹
 *
p
;

705 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

706 
	`as£π
–
pEx˚±
==0 ||ÖEx˚±->
pBt
==pBt );

707 
p
=
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

708 if–
p
!=
pEx˚±
 && (0==
iRoŸ
 ||Ö->
pgnoRoŸ
==iRoot) ) ;

710 if–
p
 )  
	`ßveCurs‹sOnLi°
’, 
iRoŸ
, 
pEx˚±
);

711 if–
pEx˚±
 )ÖEx˚±->
curFœgs
 &~
BTCF_Mu…ùÀ
;

712  
SQLITE_OK
;

713 
	}
}

720 
SQLITE_NOINLINE
 
	$ßveCurs‹sOnLi°
(

721 
BtCurs‹
 *
p
,

722 
Pgno
 
iRoŸ
,

723 
BtCurs‹
 *
pEx˚±


726 if–
p
!=
pEx˚±
 && (0==
iRoŸ
 ||Ö->
pgnoRoŸ
==iRoot) ){

727 if–
p
->
eSèã
==
CURSOR_VALID
 ||Ö->eSèã==
CURSOR_SKIPNEXT
 ){

728 
rc
 = 
	`ßveCurs‹Posôi⁄
(
p
);

729 if–
SQLITE_OK
!=
rc
 ){

730  
rc
;

733 
	`ã°ˇ£
–
p
->
iPage
>0 );

734 
	`båìRñó£AŒCurs‹Pages
(
p
);

737 
p
 =Ö->
pNext
;

738 } 
p
 );

739  
SQLITE_OK
;

740 
	}
}

745 
	$sqlôe3BåìCÀ¨Curs‹
(
BtCurs‹
 *
pCur
){

746 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

747 
	`sqlôe3_‰ì
(
pCur
->
pKey
);

748 
pCur
->
pKey
 = 0;

749 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

750 
	}
}

757 
	$båìMovëo
(

758 
BtCurs‹
 *
pCur
,

759 c⁄° *
pKey
,

760 
i64
 
nKey
,

761 
büs
,

762 *
pRes


764 
rc
;

765 
U≈ackedRec‹d
 *
pIdxKey
;

766 
aS∑˚
[200];

767 *
pFªe
 = 0;

769 if–
pKey
 ){

770 
	`as£π
–
nKey
==(
i64
)()nKey );

771 
pIdxKey
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(

772 
pCur
->
pKeyInfo
, 
aS∑˚
, ◊S∑˚), &
pFªe


774 if–
pIdxKey
==0 )  
SQLITE_NOMEM_BKPT
;

775 
	`sqlôe3VdbeRec‹dU≈ack
(
pCur
->
pKeyInfo
, ()
nKey
, 
pKey
, 
pIdxKey
);

776 if–
pIdxKey
->
nFõld
==0 ){

777 
	`sqlôe3DbFªe
(
pCur
->
pKeyInfo
->
db
, 
pFªe
);

778  
SQLITE_CORRUPT_BKPT
;

781 
pIdxKey
 = 0;

783 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCur
, 
pIdxKey
, 
nKey
, 
büs
, 
pRes
);

784 if–
pFªe
 ){

785 
	`sqlôe3DbFªe
(
pCur
->
pKeyInfo
->
db
, 
pFªe
);

787  
rc
;

788 
	}
}

797 
	$båìRe°‹eCurs‹Posôi⁄
(
BtCurs‹
 *
pCur
){

798 
rc
;

799 
skùNext
;

800 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

801 
	`as£π
–
pCur
->
eSèã
>=
CURSOR_REQUIRESEEK
 );

802 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

803  
pCur
->
skùNext
;

805 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

806 
rc
 = 
	`båìMovëo
(
pCur
,ÖCur->
pKey
,ÖCur->
nKey
, 0, &
skùNext
);

807 if–
rc
==
SQLITE_OK
 ){

808 
	`sqlôe3_‰ì
(
pCur
->
pKey
);

809 
pCur
->
pKey
 = 0;

810 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_INVALID
 );

811 
pCur
->
skùNext
 |= skipNext;

812 if–
pCur
->
skùNext
 &&ÖCur->
eSèã
==
CURSOR_VALID
 ){

813 
pCur
->
eSèã
 = 
CURSOR_SKIPNEXT
;

816  
rc
;

817 
	}
}

819 
	#ª°‹eCurs‹Posôi⁄
(
p
) \

820 (
p
->
eSèã
>=
CURSOR_REQUIRESEEK
 ? \

821 
	`båìRe°‹eCurs‹Posôi⁄
(
p
) : \

822 
SQLITE_OK
)

	)

836 
	$sqlôe3BåìCurs‹HasMoved
(
BtCurs‹
 *
pCur
){

837  
pCur
->
eSèã
!=
CURSOR_VALID
;

838 
	}
}

853 
	$sqlôe3BåìCurs‹Re°‹e
(
BtCurs‹
 *
pCur
, *
pDif„ª¡Row
){

854 
rc
;

856 
	`as£π
–
pCur
!=0 );

857 
	`as£π
–
pCur
->
eSèã
!=
CURSOR_VALID
 );

858 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

859 if–
rc
 ){

860 *
pDif„ª¡Row
 = 1;

861  
rc
;

863 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

864 *
pDif„ª¡Row
 = 1;

866 
	`as£π
–
pCur
->
skùNext
==0 );

867 *
pDif„ª¡Row
 = 0;

869  
SQLITE_OK
;

870 
	}
}

872 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


878 
	$sqlôe3BåìCurs‹Höt
(
BtCurs‹
 *
pCur
, 
eHötTy≥
, ...){

880 
	}
}

886 
	$sqlôe3BåìCurs‹HötFœgs
(
BtCurs‹
 *
pCur
, 
x
){

887 
	`as£π
–
x
==
BTREE_SEEK_EQ
 || x==
BTREE_BULKLOAD
 || x==0 );

888 
pCur
->
höts
 = 
x
;

889 
	}
}

892 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


902 
Pgno
 
	$±rm≠Pagío
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

903 
nPagesPîM≠Page
;

904 
Pgno
 
iPåM≠
, 
ªt
;

905 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

906 if–
pgno
<2 )  0;

907 
nPagesPîM≠Page
 = (
pBt
->
ußbÀSize
/5)+1;

908 
iPåM≠
 = (
pgno
-2)/
nPagesPîM≠Page
;

909 
ªt
 = (
iPåM≠
*
nPagesPîM≠Page
) + 2;

910 if–
ªt
==
	`PENDING_BYTE_PAGE
(
pBt
) ){

911 
ªt
++;

913  
ªt
;

914 
	}
}

926 
	$±rm≠Put
(
BtSh¨ed
 *
pBt
, 
Pgno
 
key
, 
u8
 
eTy≥
, Pgnÿ
∑ª¡
, *
pRC
){

927 
DbPage
 *
pDbPage
;

928 
u8
 *
pPåm≠
;

929 
Pgno
 
iPåm≠
;

930 
off£t
;

931 
rc
;

933 if–*
pRC
 ) ;

935 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

937 
	`as£π
–0==
	`PTRMAP_ISPAGE
(
pBt
, 
	`PENDING_BYTE_PAGE
(pBt)) );

939 
	`as£π
–
pBt
->
autoVacuum
 );

940 if–
key
==0 ){

941 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

944 
iPåm≠
 = 
	`PTRMAP_PAGENO
(
pBt
, 
key
);

945 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
iPåm≠
, &
pDbPage
, 0);

946 if–
rc
!=
SQLITE_OK
 ){

947 *
pRC
 = 
rc
;

950 
off£t
 = 
	`PTRMAP_PTROFFSET
(
iPåm≠
, 
key
);

951 if–
off£t
<0 ){

952 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

953 
±rm≠_exô
;

955 
	`as£π
–
off£t
 <()
pBt
->
ußbÀSize
-5 );

956 
pPåm≠
 = (
u8
 *)
	`sqlôe3PagîGëD©a
(
pDbPage
);

958 if–
eTy≥
!=
pPåm≠
[
off£t
] || 
	`gë4byã
(&pPåm≠[off£t+1])!=
∑ª¡
 ){

959 
	`TRACE
(("PTRMAP_UPDATE: %d->(%d,%d)\n", 
key
, 
eTy≥
, 
∑ª¡
));

960 *
pRC

rc
 = 
	`sqlôe3PagîWrôe
(
pDbPage
);

961 if–
rc
==
SQLITE_OK
 ){

962 
pPåm≠
[
off£t
] = 
eTy≥
;

963 
	`put4byã
(&
pPåm≠
[
off£t
+1], 
∑ª¡
);

967 
±rm≠_exô
:

968 
	`sqlôe3PagîUƒef
(
pDbPage
);

969 
	}
}

978 
	$±rm≠Gë
(
BtSh¨ed
 *
pBt
, 
Pgno
 
key
, 
u8
 *
pETy≥
, Pgnÿ*
pPgno
){

979 
DbPage
 *
pDbPage
;

980 
iPåm≠
;

981 
u8
 *
pPåm≠
;

982 
off£t
;

983 
rc
;

985 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

987 
iPåm≠
 = 
	`PTRMAP_PAGENO
(
pBt
, 
key
);

988 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
iPåm≠
, &
pDbPage
, 0);

989 if–
rc
!=0 ){

990  
rc
;

992 
pPåm≠
 = (
u8
 *)
	`sqlôe3PagîGëD©a
(
pDbPage
);

994 
off£t
 = 
	`PTRMAP_PTROFFSET
(
iPåm≠
, 
key
);

995 if–
off£t
<0 ){

996 
	`sqlôe3PagîUƒef
(
pDbPage
);

997  
SQLITE_CORRUPT_BKPT
;

999 
	`as£π
–
off£t
 <()
pBt
->
ußbÀSize
-5 );

1000 
	`as£π
–
pETy≥
!=0 );

1001 *
pETy≥
 = 
pPåm≠
[
off£t
];

1002 if–
pPgno
 ) *pPgnÿ
	`gë4byã
(&
pPåm≠
[
off£t
+1]);

1004 
	`sqlôe3PagîUƒef
(
pDbPage
);

1005 if–*
pETy≥
<1 || *pETy≥>5 )  
SQLITE_CORRUPT_BKPT
;

1006  
SQLITE_OK
;

1007 
	}
}

1010 
	#±rm≠Put
(
w
,
x
,
y
,
z
,
rc
)

	)

1011 
	#±rm≠Gë
(
w
,
x
,
y
,
z
Ë
SQLITE_OK


	)

1012 
	#±rm≠PutOvÊPå
(
x
, 
y
, 
rc
)

	)

1025 
	#födCñl
(
P
,
I
) \

1026 ((
P
)->
aD©a
 + ((P)->
maskPage
 & 
	`gë2byãAlig√d
(&(P)->
aCñlIdx
[2*(
I
)])))

	)

1027 
	#födCñlPa°På
(
P
,
I
) \

1028 ((
P
)->
aD©aOf°
 + ((P)->
maskPage
 & 
	`gë2byãAlig√d
(&(P)->
aCñlIdx
[2*(
I
)])))

	)

1037 
SQLITE_NOINLINE
 
	$båìP¨£CñlAdju°SizeF‹OvîÊow
(

1038 
MemPage
 *
pPage
,

1039 
u8
 *
pCñl
,

1040 
CñlInfo
 *
pInfo


1051 
möLoˇl
;

1052 
maxLoˇl
;

1053 
suΩlus
;

1055 
möLoˇl
 = 
pPage
->minLocal;

1056 
maxLoˇl
 = 
pPage
->maxLocal;

1057 
suΩlus
 = 
möLoˇl
 + (
pInfo
->
nPaylﬂd
 - möLoˇl)%(
pPage
->
pBt
->
ußbÀSize
-4);

1058 
	`ã°ˇ£
–
suΩlus
==
maxLoˇl
 );

1059 
	`ã°ˇ£
–
suΩlus
==
maxLoˇl
+1 );

1060 if–
suΩlus
 <
maxLoˇl
 ){

1061 
pInfo
->
nLoˇl
 = (
u16
)
suΩlus
;

1063 
pInfo
->
nLoˇl
 = (
u16
)
möLoˇl
;

1065 
pInfo
->
nSize
 = (
u16
)(&pInfo->
pPaylﬂd
[pInfo->
nLoˇl
] - 
pCñl
) + 4;

1066 
	}
}

1082 
	$båìP¨£CñlPåNoPaylﬂd
(

1083 
MemPage
 *
pPage
,

1084 
u8
 *
pCñl
,

1085 
CñlInfo
 *
pInfo


1087 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1088 
	`as£π
–
pPage
->
Àaf
==0 );

1089 
	`as£π
–
pPage
->
chûdPåSize
==4 );

1090 #i‚de‡
SQLITE_DEBUG


1091 
	`UNUSED_PARAMETER
(
pPage
);

1093 
pInfo
->
nSize
 = 4 + 
	`gëV¨öt
(&
pCñl
[4], (
u64
*)&pInfo->
nKey
);

1094 
pInfo
->
nPaylﬂd
 = 0;

1095 
pInfo
->
nLoˇl
 = 0;

1096 
pInfo
->
pPaylﬂd
 = 0;

1098 
	}
}

1099 
	$båìP¨£CñlPå
(

1100 
MemPage
 *
pPage
,

1101 
u8
 *
pCñl
,

1102 
CñlInfo
 *
pInfo


1104 
u8
 *
pIãr
;

1105 
u32
 
nPaylﬂd
;

1106 
u64
 
iKey
;

1108 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1109 
	`as£π
–
pPage
->
Àaf
==0 ||ÖPage->leaf==1 );

1110 
	`as£π
–
pPage
->
ötKeyLóf
 );

1111 
	`as£π
–
pPage
->
chûdPåSize
==0 );

1112 
pIãr
 = 
pCñl
;

1120 
nPaylﬂd
 = *
pIãr
;

1121 if–
nPaylﬂd
>=0x80 ){

1122 
u8
 *
pEnd
 = &
pIãr
[8];

1123 
nPaylﬂd
 &= 0x7f;

1125 
nPaylﬂd
 = (nPaylﬂd<<7Ë| (*++
pIãr
 & 0x7f);

1126 } (*
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1128 
pIãr
++;

1136 
iKey
 = *
pIãr
;

1137 if–
iKey
>=0x80 ){

1138 
u8
 *
pEnd
 = &
pIãr
[7];

1139 
iKey
 &= 0x7f;

1141 
iKey
 = (iKey<<7Ë| (*++
pIãr
 & 0x7f);

1142 if–(*
pIãr
)<0x80 ) ;

1143 if–
pIãr
>=
pEnd
 ){

1144 
iKey
 = (iKey<<8Ë| *++
pIãr
;

1149 
pIãr
++;

1151 
pInfo
->
nKey
 = *(
i64
*)&
iKey
;

1152 
pInfo
->
nPaylﬂd
 =ÇPayload;

1153 
pInfo
->
pPaylﬂd
 = 
pIãr
;

1154 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
 );

1155 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
+1 );

1156 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

1160 
pInfo
->
nSize
 = 
nPaylﬂd
 + (
u16
)(
pIãr
 - 
pCñl
);

1161 if–
pInfo
->
nSize
<4 )ÖInfo->nSize = 4;

1162 
pInfo
->
nLoˇl
 = (
u16
)
nPaylﬂd
;

1164 
	`båìP¨£CñlAdju°SizeF‹OvîÊow
(
pPage
, 
pCñl
, 
pInfo
);

1166 
	}
}

1167 
	$båìP¨£CñlPåIndex
(

1168 
MemPage
 *
pPage
,

1169 
u8
 *
pCñl
,

1170 
CñlInfo
 *
pInfo


1172 
u8
 *
pIãr
;

1173 
u32
 
nPaylﬂd
;

1175 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1176 
	`as£π
–
pPage
->
Àaf
==0 ||ÖPage->leaf==1 );

1177 
	`as£π
–
pPage
->
ötKeyLóf
==0 );

1178 
pIãr
 = 
pCñl
 + 
pPage
->
chûdPåSize
;

1179 
nPaylﬂd
 = *
pIãr
;

1180 if–
nPaylﬂd
>=0x80 ){

1181 
u8
 *
pEnd
 = &
pIãr
[8];

1182 
nPaylﬂd
 &= 0x7f;

1184 
nPaylﬂd
 = (nPaylﬂd<<7Ë| (*++
pIãr
 & 0x7f);

1185 } *(
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1187 
pIãr
++;

1188 
pInfo
->
nKey
 = 
nPaylﬂd
;

1189 
pInfo
->
nPaylﬂd
 =ÇPayload;

1190 
pInfo
->
pPaylﬂd
 = 
pIãr
;

1191 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
 );

1192 
	`ã°ˇ£
–
nPaylﬂd
==
pPage
->
maxLoˇl
+1 );

1193 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

1197 
pInfo
->
nSize
 = 
nPaylﬂd
 + (
u16
)(
pIãr
 - 
pCñl
);

1198 if–
pInfo
->
nSize
<4 )ÖInfo->nSize = 4;

1199 
pInfo
->
nLoˇl
 = (
u16
)
nPaylﬂd
;

1201 
	`båìP¨£CñlAdju°SizeF‹OvîÊow
(
pPage
, 
pCñl
, 
pInfo
);

1203 
	}
}

1204 
	$båìP¨£Cñl
(

1205 
MemPage
 *
pPage
,

1206 
iCñl
,

1207 
CñlInfo
 *
pInfo


1209 
pPage
->
	`xP¨£Cñl
’Page, 
	`födCñl
’Page, 
iCñl
), 
pInfo
);

1210 
	}
}

1224 
u16
 
	$˚ŒSizePå
(
MemPage
 *
pPage
, 
u8
 *
pCñl
){

1225 
u8
 *
pIãr
 = 
pCñl
 + 
pPage
->
chûdPåSize
;

1226 
u8
 *
pEnd
;

1227 
u32
 
nSize
;

1229 #ifde‡
SQLITE_DEBUG


1234 
CñlInfo
 
debugöfo
;

1235 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
debugöfo
);

1238 
nSize
 = *
pIãr
;

1239 if–
nSize
>=0x80 ){

1240 
pEnd
 = &
pIãr
[8];

1241 
nSize
 &= 0x7f;

1243 
nSize
 = (nSize<<7Ë| (*++
pIãr
 & 0x7f);

1244 } *(
pIãr
)>=0x80 &&ÖIãr<
pEnd
 );

1246 
pIãr
++;

1247 if–
pPage
->
ötKey
 ){

1251 
pEnd
 = &
pIãr
[9];

1252  (*
pIãr
++)&0x80 &&ÖIãr<
pEnd
 );

1254 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
 );

1255 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
+1 );

1256 if–
nSize
<=
pPage
->
maxLoˇl
 ){

1257 
nSize
 +(
u32
)(
pIãr
 - 
pCñl
);

1258 if–
nSize
<4 )ÇSize = 4;

1260 
möLoˇl
 = 
pPage
->minLocal;

1261 
nSize
 = 
möLoˇl
 + (nSizê- möLoˇlË% (
pPage
->
pBt
->
ußbÀSize
 - 4);

1262 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
 );

1263 
	`ã°ˇ£
–
nSize
==
pPage
->
maxLoˇl
+1 );

1264 if–
nSize
>
pPage
->
maxLoˇl
 ){

1265 
nSize
 = 
möLoˇl
;

1267 
nSize
 +4 + (
u16
)(
pIãr
 - 
pCñl
);

1269 
	`as£π
–
nSize
==
debugöfo
.nSizê|| 
CORRUPT_DB
 );

1270  (
u16
)
nSize
;

1271 
	}
}

1272 
u16
 
	$˚ŒSizePåNoPaylﬂd
(
MemPage
 *
pPage
, 
u8
 *
pCñl
){

1273 
u8
 *
pIãr
 = 
pCñl
 + 4;

1274 
u8
 *
pEnd
;

1276 #ifde‡
SQLITE_DEBUG


1281 
CñlInfo
 
debugöfo
;

1282 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
debugöfo
);

1284 
	`UNUSED_PARAMETER
(
pPage
);

1287 
	`as£π
–
pPage
->
chûdPåSize
==4 );

1288 
pEnd
 = 
pIãr
 + 9;

1289  (*
pIãr
++)&0x80 &&ÖIãr<
pEnd
 );

1290 
	`as£π
–
debugöfo
.
nSize
==(
u16
)(
pIãr
 - 
pCñl
Ë|| 
CORRUPT_DB
 );

1291  (
u16
)(
pIãr
 - 
pCñl
);

1292 
	}
}

1295 #ifde‡
SQLITE_DEBUG


1298 
u16
 
	$˚ŒSize
(
MemPage
 *
pPage
, 
iCñl
){

1299  
pPage
->
	`xCñlSize
’Page, 
	`födCñl
’Page, 
iCñl
));

1300 
	}
}

1303 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


1309 
	$±rm≠PutOvÊPå
(
MemPage
 *
pPage
, 
u8
 *
pCñl
, *
pRC
){

1310 
CñlInfo
 
öfo
;

1311 if–*
pRC
 ) ;

1312 
	`as£π
–
pCñl
!=0 );

1313 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

1314 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd
 ){

1315 
Pgno
 
ovÊ
 = 
	`gë4byã
(&
pCñl
[
öfo
.
nSize
-4]);

1316 
	`±rm≠Put
(
pPage
->
pBt
, 
ovÊ
, 
PTRMAP_OVERFLOW1
,ÖPage->
pgno
, 
pRC
);

1318 
	}
}

1333 
	$de‰agmítPage
(
MemPage
 *
pPage
){

1334 
i
;

1335 
pc
;

1336 
hdr
;

1337 
size
;

1338 
ußbÀSize
;

1339 
˚ŒOff£t
;

1340 
cbrk
;

1341 
nCñl
;

1342 *
d©a
;

1343 *
ãmp
;

1344 *
§c
;

1345 
iCñlFú°
;

1346 
iCñlLa°
;

1349 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1350 
	`as£π
–
pPage
->
pBt
!=0 );

1351 
	`as£π
–
pPage
->
pBt
->
ußbÀSize
 <
SQLITE_MAX_PAGE_SIZE
 );

1352 
	`as£π
–
pPage
->
nOvîÊow
==0 );

1353 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1354 
ãmp
 = 0;

1355 
§c
 = 
d©a
 = 
pPage
->
aD©a
;

1356 
hdr
 = 
pPage
->
hdrOff£t
;

1357 
˚ŒOff£t
 = 
pPage
->cellOffset;

1358 
nCñl
 = 
pPage
->nCell;

1359 
	`as£π
–
nCñl
==
	`gë2byã
(&
d©a
[
hdr
+3]) );

1360 
ußbÀSize
 = 
pPage
->
pBt
->usableSize;

1361 
cbrk
 = 
ußbÀSize
;

1362 
iCñlFú°
 = 
˚ŒOff£t
 + 2*
nCñl
;

1363 
iCñlLa°
 = 
ußbÀSize
 - 4;

1364 
i
=0; i<
nCñl
; i++){

1365 
u8
 *
pAddr
;

1366 
pAddr
 = &
d©a
[
˚ŒOff£t
 + 
i
*2];

1367 
pc
 = 
	`gë2byã
(
pAddr
);

1368 
	`ã°ˇ£
–
pc
==
iCñlFú°
 );

1369 
	`ã°ˇ£
–
pc
==
iCñlLa°
 );

1373 if–
pc
<
iCñlFú°
 ||Öc>
iCñlLa°
 ){

1374  
SQLITE_CORRUPT_BKPT
;

1376 
	`as£π
–
pc
>=
iCñlFú°
 &&Öc<=
iCñlLa°
 );

1377 
size
 = 
pPage
->
	`xCñlSize
’Page, &
§c
[
pc
]);

1378 
cbrk
 -
size
;

1379 if–
cbrk
<
iCñlFú°
 || 
pc
+
size
>
ußbÀSize
 ){

1380  
SQLITE_CORRUPT_BKPT
;

1382 
	`as£π
–
cbrk
+
size
<=
ußbÀSize
 && cbrk>=
iCñlFú°
 );

1383 
	`ã°ˇ£
–
cbrk
+
size
==
ußbÀSize
 );

1384 
	`ã°ˇ£
–
pc
+
size
==
ußbÀSize
 );

1385 
	`put2byã
(
pAddr
, 
cbrk
);

1386 if–
ãmp
==0 ){

1387 
x
;

1388 if–
cbrk
==
pc
 ) ;

1389 
ãmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPage
->
pBt
->
pPagî
);

1390 
x
 = 
	`gë2byã
(&
d©a
[
hdr
+5]);

1391 
	`mem˝y
(&
ãmp
[
x
], &
d©a
[x], (
cbrk
+
size
) - x);

1392 
§c
 = 
ãmp
;

1394 
	`mem˝y
(&
d©a
[
cbrk
], &
§c
[
pc
], 
size
);

1396 
	`as£π
–
cbrk
>=
iCñlFú°
 );

1397 
	`put2byã
(&
d©a
[
hdr
+5], 
cbrk
);

1398 
d©a
[
hdr
+1] = 0;

1399 
d©a
[
hdr
+2] = 0;

1400 
d©a
[
hdr
+7] = 0;

1401 
	`mem£t
(&
d©a
[
iCñlFú°
], 0, 
cbrk
-iCellFirst);

1402 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1403 if–
cbrk
-
iCñlFú°
!=
pPage
->
nFªe
 ){

1404  
SQLITE_CORRUPT_BKPT
;

1406  
SQLITE_OK
;

1407 
	}
}

1423 
u8
 *
	$∑geFödSlŸ
(
MemPage
 *
pPg
, 
nByã
, *
pRc
){

1424 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

1425 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

1426 
iAddr
 = 
hdr
 + 1;

1427 
pc
 = 
	`gë2byã
(&
aD©a
[
iAddr
]);

1428 
x
;

1429 
ußbÀSize
 = 
pPg
->
pBt
->usableSize;

1431 
	`as£π
–
pc
>0 );

1433 
size
;

1436 if–
pc
>
ußbÀSize
-4 ||Öc<
iAddr
+4 ){

1437 *
pRc
 = 
SQLITE_CORRUPT_BKPT
;

1443 
size
 = 
	`gë2byã
(&
aD©a
[
pc
+2]);

1444 if–(
x
 = 
size
 - 
nByã
)>=0 ){

1445 
	`ã°ˇ£
–
x
==4 );

1446 
	`ã°ˇ£
–
x
==3 );

1447 if–
pc
 < 
pPg
->
˚ŒOff£t
+2*pPg->
nCñl
 || 
size
+p¯> 
ußbÀSize
 ){

1448 *
pRc
 = 
SQLITE_CORRUPT_BKPT
;

1450 }if–
x
<4 ){

1453 if–
aD©a
[
hdr
+7]>57 )  0;

1457 
	`mem˝y
(&
aD©a
[
iAddr
], &aD©a[
pc
], 2);

1458 
aD©a
[
hdr
+7] +(
u8
)
x
;

1462 
	`put2byã
(&
aD©a
[
pc
+2], 
x
);

1464  &
aD©a
[
pc
 + 
x
];

1466 
iAddr
 = 
pc
;

1467 
pc
 = 
	`gë2byã
(&
aD©a
[pc]);

1468 } 
pc
 );

1471 
	}
}

1486 
	$ÆloˇãS∑˚
(
MemPage
 *
pPage
, 
nByã
, *
pIdx
){

1487 c⁄° 
hdr
 = 
pPage
->
hdrOff£t
;

1488 
u8
 * c⁄° 
d©a
 = 
pPage
->
aD©a
;

1489 
t›
;

1490 
rc
 = 
SQLITE_OK
;

1491 
g≠
;

1493 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1494 
	`as£π
–
pPage
->
pBt
 );

1495 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1496 
	`as£π
–
nByã
>=0 );

1497 
	`as£π
–
pPage
->
nFªe
>=
nByã
 );

1498 
	`as£π
–
pPage
->
nOvîÊow
==0 );

1499 
	`as£π
–
nByã
 < ()(
pPage
->
pBt
->
ußbÀSize
-8) );

1501 
	`as£π
–
pPage
->
˚ŒOff£t
 =
hdr
 + 12 - 4*pPage->
Àaf
 );

1502 
g≠
 = 
pPage
->
˚ŒOff£t
 + 2*pPage->
nCñl
;

1503 
	`as£π
–
g≠
<=65536 );

1509 
t›
 = 
	`gë2byã
(&
d©a
[
hdr
+5]);

1510 
	`as£π
–
t›
<=()
pPage
->
pBt
->
ußbÀSize
 );

1511 if–
g≠
>
t›
 ){

1512 if–
t›
==0 && 
pPage
->
pBt
->
ußbÀSize
==65536 ){

1513 
t›
 = 65536;

1515  
SQLITE_CORRUPT_BKPT
;

1523 
	`ã°ˇ£
–
g≠
+2==
t›
 );

1524 
	`ã°ˇ£
–
g≠
+1==
t›
 );

1525 
	`ã°ˇ£
–
g≠
==
t›
 );

1526 if–(
d©a
[
hdr
+2] || d©a[hdr+1]Ë&& 
g≠
+2<=
t›
 ){

1527 
u8
 *
pS∑˚
 = 
	`∑geFödSlŸ
(
pPage
, 
nByã
, &
rc
);

1528 if–
pS∑˚
 ){

1529 
	`as£π
–
pS∑˚
>=
d©a
 && (pSpace - data)<65536 );

1530 *
pIdx
 = ()(
pS∑˚
 - 
d©a
);

1531  
SQLITE_OK
;

1532 }if–
rc
 ){

1533  
rc
;

1540 
	`ã°ˇ£
–
g≠
+2+
nByã
==
t›
 );

1541 if–
g≠
+2+
nByã
>
t›
 ){

1542 
	`as£π
–
pPage
->
nCñl
>0 || 
CORRUPT_DB
 );

1543 
rc
 = 
	`de‰agmítPage
(
pPage
);

1544 if–
rc
 ) Ñc;

1545 
t›
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

1546 
	`as£π
–
g≠
+
nByã
<=
t›
 );

1556 
t›
 -
nByã
;

1557 
	`put2byã
(&
d©a
[
hdr
+5], 
t›
);

1558 
	`as£π
–
t›
+
nByã
 <()
pPage
->
pBt
->
ußbÀSize
 );

1559 *
pIdx
 = 
t›
;

1560  
SQLITE_OK
;

1561 
	}
}

1576 
	$‰ìS∑˚
(
MemPage
 *
pPage
, 
u16
 
iSèπ
, u16 
iSize
){

1577 
u16
 
iPå
;

1578 
u16
 
iFªeBlk
;

1579 
u8
 
hdr
;

1580 
u8
 
nFøg
 = 0;

1581 
u16
 
iOrigSize
 = 
iSize
;

1582 
u32
 
iLa°
 = 
pPage
->
pBt
->
ußbÀSize
-4;

1583 
u32
 
iEnd
 = 
iSèπ
 + 
iSize
;

1584 *
d©a
 = 
pPage
->
aD©a
;

1586 
	`as£π
–
pPage
->
pBt
!=0 );

1587 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1588 
	`as£π
–
CORRUPT_DB
 || 
iSèπ
>=
pPage
->
hdrOff£t
+6+pPage->
chûdPåSize
 );

1589 
	`as£π
–
CORRUPT_DB
 || 
iEnd
 <
pPage
->
pBt
->
ußbÀSize
 );

1590 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1591 
	`as£π
–
iSize
>=4 );

1592 
	`as£π
–
iSèπ
<=
iLa°
 );

1596 if–
pPage
->
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

1597 
	`mem£t
(&
d©a
[
iSèπ
], 0, 
iSize
);

1603 
hdr
 = 
pPage
->
hdrOff£t
;

1604 
iPå
 = 
hdr
 + 1;

1605 if–
d©a
[
iPå
+1]==0 && data[iPtr]==0 ){

1606 
iFªeBlk
 = 0;

1608  (
iFªeBlk
 = 
	`gë2byã
(&
d©a
[
iPå
]))>0 && iFªeBlk<
iSèπ
 ){

1609 if–
iFªeBlk
<
iPå
+4 )  
SQLITE_CORRUPT_BKPT
;

1610 
iPå
 = 
iFªeBlk
;

1612 if–
iFªeBlk
>
iLa°
 )  
SQLITE_CORRUPT_BKPT
;

1613 
	`as£π
–
iFªeBlk
>
iPå
 || iFreeBlk==0 );

1621 if–
iFªeBlk
 && 
iEnd
+3>=iFreeBlk ){

1622 
nFøg
 = 
iFªeBlk
 - 
iEnd
;

1623 if–
iEnd
>
iFªeBlk
 )  
SQLITE_CORRUPT_BKPT
;

1624 
iEnd
 = 
iFªeBlk
 + 
	`gë2byã
(&
d©a
[iFreeBlk+2]);

1625 if–
iEnd
 > 
pPage
->
pBt
->
ußbÀSize
 )  
SQLITE_CORRUPT_BKPT
;

1626 
iSize
 = 
iEnd
 - 
iSèπ
;

1627 
iFªeBlk
 = 
	`gë2byã
(&
d©a
[iFreeBlk]);

1634 if–
iPå
>
hdr
+1 ){

1635 
iPåEnd
 = 
iPå
 + 
	`gë2byã
(&
d©a
[iPtr+2]);

1636 if–
iPåEnd
+3>=
iSèπ
 ){

1637 if–
iPåEnd
>
iSèπ
 )  
SQLITE_CORRUPT_BKPT
;

1638 
nFøg
 +
iSèπ
 - 
iPåEnd
;

1639 
iSize
 = 
iEnd
 - 
iPå
;

1640 
iSèπ
 = 
iPå
;

1643 if–
nFøg
>
d©a
[
hdr
+7] )  
SQLITE_CORRUPT_BKPT
;

1644 
d©a
[
hdr
+7] -
nFøg
;

1646 if–
iSèπ
==
	`gë2byã
(&
d©a
[
hdr
+5]) ){

1650 if–
iPå
!=
hdr
+1 )  
SQLITE_CORRUPT_BKPT
;

1651 
	`put2byã
(&
d©a
[
hdr
+1], 
iFªeBlk
);

1652 
	`put2byã
(&
d©a
[
hdr
+5], 
iEnd
);

1655 
	`put2byã
(&
d©a
[
iPå
], 
iSèπ
);

1656 
	`put2byã
(&
d©a
[
iSèπ
], 
iFªeBlk
);

1657 
	`put2byã
(&
d©a
[
iSèπ
+2], 
iSize
);

1659 
pPage
->
nFªe
 +
iOrigSize
;

1660  
SQLITE_OK
;

1661 
	}
}

1675 
	$decodeFœgs
(
MemPage
 *
pPage
, 
ÊagByã
){

1676 
BtSh¨ed
 *
pBt
;

1678 
	`as£π
–
pPage
->
hdrOff£t
==’Page->
pgno
==1 ? 100 : 0) );

1679 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1680 
pPage
->
Àaf
 = (
u8
)(
ÊagByã
>>3); 
	`as£π
–
PTF_LEAF
 == 1<<3 );

1681 
ÊagByã
 &~
PTF_LEAF
;

1682 
pPage
->
chûdPåSize
 = 4-4*pPage->
Àaf
;

1683 
pPage
->
xCñlSize
 = 
˚ŒSizePå
;

1684 
pBt
 = 
pPage
->pBt;

1685 if–
ÊagByã
==(
PTF_LEAFDATA
 | 
PTF_INTKEY
) ){

1688 
	`as£π
–(
PTF_LEAFDATA
|
PTF_INTKEY
)==5 );

1691 
	`as£π
–(
PTF_LEAFDATA
|
PTF_INTKEY
|
PTF_LEAF
)==13 );

1692 
pPage
->
ötKey
 = 1;

1693 if–
pPage
->
Àaf
 ){

1694 
pPage
->
ötKeyLóf
 = 1;

1695 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPå
;

1697 
pPage
->
ötKeyLóf
 = 0;

1698 
pPage
->
xCñlSize
 = 
˚ŒSizePåNoPaylﬂd
;

1699 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPåNoPaylﬂd
;

1701 
pPage
->
maxLoˇl
 = 
pBt
->
maxLóf
;

1702 
pPage
->
möLoˇl
 = 
pBt
->
möLóf
;

1703 }if–
ÊagByã
==
PTF_ZERODATA
 ){

1706 
	`as£π
–(
PTF_ZERODATA
)==2 );

1709 
	`as£π
–(
PTF_ZERODATA
|
PTF_LEAF
)==10 );

1710 
pPage
->
ötKey
 = 0;

1711 
pPage
->
ötKeyLóf
 = 0;

1712 
pPage
->
xP¨£Cñl
 = 
båìP¨£CñlPåIndex
;

1713 
pPage
->
maxLoˇl
 = 
pBt
->maxLocal;

1714 
pPage
->
möLoˇl
 = 
pBt
->minLocal;

1718  
SQLITE_CORRUPT_BKPT
;

1720 
pPage
->
max1byãPaylﬂd
 = 
pBt
->max1bytePayload;

1721  
SQLITE_OK
;

1722 
	}
}

1733 
	$båìInôPage
(
MemPage
 *
pPage
){

1735 
	`as£π
–
pPage
->
pBt
!=0 );

1736 
	`as£π
–
pPage
->
pBt
->
db
!=0 );

1737 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

1738 
	`as£π
–
pPage
->
pgno
==
	`sqlôe3PagîPagíumbî
’Page->
pDbPage
) );

1739 
	`as£π
–
pPage
 =
	`sqlôe3PagîGëExåa
’Page->
pDbPage
) );

1740 
	`as£π
–
pPage
->
aD©a
 =
	`sqlôe3PagîGëD©a
’Page->
pDbPage
) );

1742 if–!
pPage
->
isInô
 ){

1743 
u16
 
pc
;

1744 
u8
 
hdr
;

1745 
u8
 *
d©a
;

1746 
BtSh¨ed
 *
pBt
;

1747 
ußbÀSize
;

1748 
u16
 
˚ŒOff£t
;

1749 
nFªe
;

1750 
t›
;

1751 
iCñlFú°
;

1752 
iCñlLa°
;

1754 
pBt
 = 
pPage
->pBt;

1756 
hdr
 = 
pPage
->
hdrOff£t
;

1757 
d©a
 = 
pPage
->
aD©a
;

1760 if–
	`decodeFœgs
(
pPage
, 
d©a
[
hdr
]ËË 
SQLITE_CORRUPT_BKPT
;

1761 
	`as£π
–
pBt
->
∑geSize
>=512 &&ÖBt->pageSize<=65536 );

1762 
pPage
->
maskPage
 = (
u16
)(
pBt
->
∑geSize
 - 1);

1763 
pPage
->
nOvîÊow
 = 0;

1764 
ußbÀSize
 = 
pBt
->usableSize;

1765 
pPage
->
˚ŒOff£t
 = cñlOff£à
hdr
 + 8 +ÖPage->
chûdPåSize
;

1766 
pPage
->
aD©aEnd
 = &
d©a
[
ußbÀSize
];

1767 
pPage
->
aCñlIdx
 = &
d©a
[
˚ŒOff£t
];

1768 
pPage
->
aD©aOf°
 = &
d©a
[pPage->
chûdPåSize
];

1772 
t›
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

1775 
pPage
->
nCñl
 = 
	`gë2byã
(&
d©a
[
hdr
+3]);

1776 if–
pPage
->
nCñl
>
	`MX_CELL
(
pBt
) ){

1778  
SQLITE_CORRUPT_BKPT
;

1780 
	`ã°ˇ£
–
pPage
->
nCñl
==
	`MX_CELL
(
pBt
) );

1785 
	`as£π
–
pPage
->
nCñl
>0 || 
t›
==
ußbÀSize
 || 
CORRUPT_DB
 );

1794 
iCñlFú°
 = 
˚ŒOff£t
 + 2*
pPage
->
nCñl
;

1795 
iCñlLa°
 = 
ußbÀSize
 - 4;

1796 if–
pBt
->
db
->
Êags
 & 
SQLITE_CñlSizeCk
 ){

1797 
i
;

1798 
sz
;

1800 if–!
pPage
->
Àaf
 ) 
iCñlLa°
--;

1801 
i
=0; i<
pPage
->
nCñl
; i++){

1802 
pc
 = 
	`gë2byãAlig√d
(&
d©a
[
˚ŒOff£t
+
i
*2]);

1803 
	`ã°ˇ£
–
pc
==
iCñlFú°
 );

1804 
	`ã°ˇ£
–
pc
==
iCñlLa°
 );

1805 if–
pc
<
iCñlFú°
 ||Öc>
iCñlLa°
 ){

1806  
SQLITE_CORRUPT_BKPT
;

1808 
sz
 = 
pPage
->
	`xCñlSize
’Page, &
d©a
[
pc
]);

1809 
	`ã°ˇ£
–
pc
+
sz
==
ußbÀSize
 );

1810 if–
pc
+
sz
>
ußbÀSize
 ){

1811  
SQLITE_CORRUPT_BKPT
;

1814 if–!
pPage
->
Àaf
 ) 
iCñlLa°
++;

1821 
pc
 = 
	`gë2byã
(&
d©a
[
hdr
+1]);

1822 
nFªe
 = 
d©a
[
hdr
+7] + 
t›
;

1823  
pc
>0 ){

1824 
u16
 
√xt
, 
size
;

1825 if–
pc
<
iCñlFú°
 ||Öc>
iCñlLa°
 ){

1831  
SQLITE_CORRUPT_BKPT
;

1833 
√xt
 = 
	`gë2byã
(&
d©a
[
pc
]);

1834 
size
 = 
	`gë2byã
(&
d©a
[
pc
+2]);

1835 if–(
√xt
>0 &&Çext<=
pc
+
size
+3Ë||Öc+size>
ußbÀSize
 ){

1838  
SQLITE_CORRUPT_BKPT
;

1840 
nFªe
 =ÇFªê+ 
size
;

1841 
pc
 = 
√xt
;

1851 if–
nFªe
>
ußbÀSize
 ){

1852  
SQLITE_CORRUPT_BKPT
;

1854 
pPage
->
nFªe
 = (
u16
)“Fªê- 
iCñlFú°
);

1855 
pPage
->
isInô
 = 1;

1857  
SQLITE_OK
;

1858 
	}
}

1864 
	$zîoPage
(
MemPage
 *
pPage
, 
Êags
){

1865 *
d©a
 = 
pPage
->
aD©a
;

1866 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

1867 
u8
 
hdr
 = 
pPage
->
hdrOff£t
;

1868 
u16
 
fú°
;

1870 
	`as£π
–
	`sqlôe3PagîPagíumbî
(
pPage
->
pDbPage
)=ıPage->
pgno
 );

1871 
	`as£π
–
	`sqlôe3PagîGëExåa
(
pPage
->
pDbPage
) == (*)pPage );

1872 
	`as£π
–
	`sqlôe3PagîGëD©a
(
pPage
->
pDbPage
Ë=
d©a
 );

1873 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

1874 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1875 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

1876 
	`mem£t
(&
d©a
[
hdr
], 0, 
pBt
->
ußbÀSize
 - hdr);

1878 
d©a
[
hdr
] = ()
Êags
;

1879 
fú°
 = 
hdr
 + ((
Êags
&
PTF_LEAF
)==0 ? 12 : 8);

1880 
	`mem£t
(&
d©a
[
hdr
+1], 0, 4);

1881 
d©a
[
hdr
+7] = 0;

1882 
	`put2byã
(&
d©a
[
hdr
+5], 
pBt
->
ußbÀSize
);

1883 
pPage
->
nFªe
 = (
u16
)(
pBt
->
ußbÀSize
 - 
fú°
);

1884 
	`decodeFœgs
(
pPage
, 
Êags
);

1885 
pPage
->
˚ŒOff£t
 = 
fú°
;

1886 
pPage
->
aD©aEnd
 = &
d©a
[
pBt
->
ußbÀSize
];

1887 
pPage
->
aCñlIdx
 = &
d©a
[
fú°
];

1888 
pPage
->
aD©aOf°
 = &
d©a
[pPage->
chûdPåSize
];

1889 
pPage
->
nOvîÊow
 = 0;

1890 
	`as£π
–
pBt
->
∑geSize
>=512 &&ÖBt->pageSize<=65536 );

1891 
pPage
->
maskPage
 = (
u16
)(
pBt
->
∑geSize
 - 1);

1892 
pPage
->
nCñl
 = 0;

1893 
pPage
->
isInô
 = 1;

1894 
	}
}

1901 
MemPage
 *
	$båìPageFromDbPage
(
DbPage
 *
pDbPage
, 
Pgno
 
pgno
, 
BtSh¨ed
 *
pBt
){

1902 
MemPage
 *
pPage
 = (MemPage*)
	`sqlôe3PagîGëExåa
(
pDbPage
);

1903 if–
pgno
!=
pPage
->pgno ){

1904 
pPage
->
aD©a
 = 
	`sqlôe3PagîGëD©a
(
pDbPage
);

1905 
pPage
->
pDbPage
 =ÖDbPage;

1906 
pPage
->
pBt
 =ÖBt;

1907 
pPage
->
pgno
 =Ögno;

1908 
pPage
->
hdrOff£t
 = 
pgno
==1 ? 100 : 0;

1910 
	`as£π
–
pPage
->
aD©a
==
	`sqlôe3PagîGëD©a
(
pDbPage
) );

1911  
pPage
;

1912 
	}
}

1925 
	$båìGëPage
(

1926 
BtSh¨ed
 *
pBt
,

1927 
Pgno
 
pgno
,

1928 
MemPage
 **
µPage
,

1929 
Êags


1931 
rc
;

1932 
DbPage
 *
pDbPage
;

1934 
	`as£π
–
Êags
==0 || fœgs==
PAGER_GET_NOCONTENT
 || fœgs==
PAGER_GET_READONLY
 );

1935 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1936 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
pgno
, (
DbPage
**)&
pDbPage
, 
Êags
);

1937 if–
rc
 ) Ñc;

1938 *
µPage
 = 
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

1939  
SQLITE_OK
;

1940 
	}
}

1947 
MemPage
 *
	$båìPageLookup
(
BtSh¨ed
 *
pBt
, 
Pgno
 
pgno
){

1948 
DbPage
 *
pDbPage
;

1949 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1950 
pDbPage
 = 
	`sqlôe3PagîLookup
(
pBt
->
pPagî
, 
pgno
);

1951 if–
pDbPage
 ){

1952  
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

1955 
	}
}

1961 
Pgno
 
	$båìPagecou¡
(
BtSh¨ed
 *
pBt
){

1962  
pBt
->
nPage
;

1963 
	}
}

1964 
u32
 
	$sqlôe3BåìLa°Page
(
Båì
 *
p
){

1965 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

1966 
	`as£π
–((
p
->
pBt
->
nPage
)&0x8000000)==0 );

1967  
	`båìPagecou¡
(
p
->
pBt
);

1968 
	}
}

1983 
	$gëAndInôPage
(

1984 
BtSh¨ed
 *
pBt
,

1985 
Pgno
 
pgno
,

1986 
MemPage
 **
µPage
,

1987 
BtCurs‹
 *
pCur
,

1988 
bRódO∆y


1990 
rc
;

1991 
DbPage
 *
pDbPage
;

1992 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

1993 
	`as£π
–
pCur
==0 || 
µPage
==&pCur->
≠Page
[pCur->
iPage
] );

1994 
	`as£π
–
pCur
==0 || 
bRódO∆y
=ıCur->
curPagîFœgs
 );

1995 
	`as£π
–
pCur
==0 ||ÖCur->
iPage
>0 );

1997 if–
pgno
>
	`båìPagecou¡
(
pBt
) ){

1998 
rc
 = 
SQLITE_CORRUPT_BKPT
;

1999 
gëAndInôPage_îr‹
;

2001 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
pgno
, (
DbPage
**)&
pDbPage
, 
bRódO∆y
);

2002 if–
rc
 ){

2003 
gëAndInôPage_îr‹
;

2005 *
µPage
 = (
MemPage
*)
	`sqlôe3PagîGëExåa
(
pDbPage
);

2006 if–(*
µPage
)->
isInô
==0 ){

2007 
	`båìPageFromDbPage
(
pDbPage
, 
pgno
, 
pBt
);

2008 
rc
 = 
	`båìInôPage
(*
µPage
);

2009 if–
rc
!=
SQLITE_OK
 ){

2010 
	`ªÀa£Page
(*
µPage
);

2011 
gëAndInôPage_îr‹
;

2014 
	`as£π
–(*
µPage
)->
pgno
==pgno );

2015 
	`as£π
–(*
µPage
)->
aD©a
==
	`sqlôe3PagîGëD©a
(
pDbPage
) );

2019 if–
pCur
 && ((*
µPage
)->
nCñl
<1 || (*µPage)->
ötKey
!ıCur->
curI¡Key
) ){

2020 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2021 
	`ªÀa£Page
(*
µPage
);

2022 
gëAndInôPage_îr‹
;

2024  
SQLITE_OK
;

2026 
gëAndInôPage_îr‹
:

2027 if–
pCur
 )ÖCur->
iPage
--;

2028 
	`ã°ˇ£
–
pgno
==0 );

2029 
	`as£π
–
pgno
!=0 || 
rc
==
SQLITE_CORRUPT
 );

2030  
rc
;

2031 
	}
}

2037 
	$ªÀa£PageNŸNuŒ
(
MemPage
 *
pPage
){

2038 
	`as£π
–
pPage
->
aD©a
 );

2039 
	`as£π
–
pPage
->
pBt
 );

2040 
	`as£π
–
pPage
->
pDbPage
!=0 );

2041 
	`as£π
–
	`sqlôe3PagîGëExåa
(
pPage
->
pDbPage
) == (*)pPage );

2042 
	`as£π
–
	`sqlôe3PagîGëD©a
(
pPage
->
pDbPage
)=ıPage->
aD©a
 );

2043 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

2044 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
->
pDbPage
);

2045 
	}
}

2046 
	$ªÀa£Page
(
MemPage
 *
pPage
){

2047 if–
pPage
 ) 
	`ªÀa£PageNŸNuŒ
(pPage);

2048 
	}
}

2059 
	$båìGëUnu£dPage
(

2060 
BtSh¨ed
 *
pBt
,

2061 
Pgno
 
pgno
,

2062 
MemPage
 **
µPage
,

2063 
Êags


2065 
rc
 = 
	`båìGëPage
(
pBt
, 
pgno
, 
µPage
, 
Êags
);

2066 if–
rc
==
SQLITE_OK
 ){

2067 if–
	`sqlôe3PagîPageRefcou¡
((*
µPage
)->
pDbPage
)>1 ){

2068 
	`ªÀa£Page
(*
µPage
);

2069 *
µPage
 = 0;

2070  
SQLITE_CORRUPT_BKPT
;

2072 (*
µPage
)->
isInô
 = 0;

2074 *
µPage
 = 0;

2076  
rc
;

2077 
	}
}

2088 
	$∑geReöô
(
DbPage
 *
pD©a
){

2089 
MemPage
 *
pPage
;

2090 
pPage
 = (
MemPage
 *)
	`sqlôe3PagîGëExåa
(
pD©a
);

2091 
	`as£π
–
	`sqlôe3PagîPageRefcou¡
(
pD©a
)>0 );

2092 if–
pPage
->
isInô
 ){

2093 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

2094 
pPage
->
isInô
 = 0;

2095 if–
	`sqlôe3PagîPageRefcou¡
(
pD©a
)>1 ){

2102 
	`båìInôPage
(
pPage
);

2105 
	}
}

2110 
	$båìInvokeBusyH™dÀr
(*
pArg
){

2111 
BtSh¨ed
 *
pBt
 = (BtSh¨ed*)
pArg
;

2112 
	`as£π
–
pBt
->
db
 );

2113 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
db
->
muãx
) );

2114  
	`sqlôe3InvokeBusyH™dÀr
(&
pBt
->
db
->
busyH™dÀr
);

2115 
	}
}

2138 
	$sqlôe3BåìO≥n
(

2139 
sqlôe3_vfs
 *
pVfs
,

2140 c⁄° *
zFûíame
,

2141 
sqlôe3
 *
db
,

2142 
Båì
 **
µBåì
,

2143 
Êags
,

2144 
vfsFœgs


2146 
BtSh¨ed
 *
pBt
 = 0;

2147 
Båì
 *
p
;

2148 
sqlôe3_muãx
 *
muãxO≥n
 = 0;

2149 
rc
 = 
SQLITE_OK
;

2150 
u8
 
nRe£rve
;

2151 
zDbHódî
[100];

2154 c⁄° 
isTempDb
 = 
zFûíame
==0 || zFilename[0]==0;

2159 #ifde‡
SQLITE_OMIT_MEMORYDB


2160 c⁄° 
isMemdb
 = 0;

2162 c⁄° 
isMemdb
 = (
zFûíame
 && 
	`°rcmp
(zFilename, ":memory:")==0)

2163 || (
isTempDb
 && 
	`sqlôe3TempInMem‹y
(
db
))

2164 || (
vfsFœgs
 & 
SQLITE_OPEN_MEMORY
)!=0;

2167 
	`as£π
–
db
!=0 );

2168 
	`as£π
–
pVfs
!=0 );

2169 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2170 
	`as£π
–(
Êags
&0xff)==flags );

2173 
	`as£π
–(
Êags
 & 
BTREE_UNORDERED
)==0 || (Êag†& 
BTREE_SINGLE
)!=0 );

2176 
	`as£π
–(
Êags
 & 
BTREE_SINGLE
)==0 || 
isTempDb
 );

2178 if–
isMemdb
 ){

2179 
Êags
 |
BTREE_MEMORY
;

2181 if–(
vfsFœgs
 & 
SQLITE_OPEN_MAIN_DB
)!=0 && (
isMemdb
 || 
isTempDb
) ){

2182 
vfsFœgs
 = (vfsFœg†& ~
SQLITE_OPEN_MAIN_DB
Ë| 
SQLITE_OPEN_TEMP_DB
;

2184 
p
 = 
	`sqlôe3MÆlocZîo
((
Båì
));

2185 if–!
p
 ){

2186  
SQLITE_NOMEM_BKPT
;

2188 
p
->
öTøns
 = 
TRANS_NONE
;

2189 
p
->
db
 = db;

2190 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2191 
p
->
lock
.
pBåì
 =Ö;

2192 
p
->
lock
.
iTabÀ
 = 1;

2195 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2200 if–
isTempDb
==0 && (
isMemdb
==0 || (
vfsFœgs
&
SQLITE_OPEN_URI
)!=0) ){

2201 if–
vfsFœgs
 & 
SQLITE_OPEN_SHAREDCACHE
 ){

2202 
nFûíame
 = 
	`sqlôe3SåÀn30
(
zFûíame
)+1;

2203 
nFuŒP©h«me
 = 
pVfs
->
mxP©h«me
+1;

2204 *
zFuŒP©h«me
 = 
	`sqlôe3MÆloc
(
	`MAX
(
nFuŒP©h«me
,
nFûíame
));

2205 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
muãxSh¨ed
; )

2207 
p
->
sh¨abÀ
 = 1;

2208 if–!
zFuŒP©h«me
 ){

2209 
	`sqlôe3_‰ì
(
p
);

2210  
SQLITE_NOMEM_BKPT
;

2212 if–
isMemdb
 ){

2213 
	`mem˝y
(
zFuŒP©h«me
, 
zFûíame
, 
nFûíame
);

2215 
rc
 = 
	`sqlôe3OsFuŒP©h«me
(
pVfs
, 
zFûíame
,

2216 
nFuŒP©h«me
, 
zFuŒP©h«me
);

2217 if–
rc
 ){

2218 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2219 
	`sqlôe3_‰ì
(
p
);

2220  
rc
;

2223 #i‡
SQLITE_THREADSAFE


2224 
muãxO≥n
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_OPEN
);

2225 
	`sqlôe3_muãx_íãr
(
muãxO≥n
);

2226 
muãxSh¨ed
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

2227 
	`sqlôe3_muãx_íãr
(
muãxSh¨ed
);

2229 
pBt
=
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);ÖBt;ÖBtıBt->
pNext
){

2230 
	`as£π
–
pBt
->
nRef
>0 );

2231 if–0==
	`°rcmp
(
zFuŒP©h«me
, 
	`sqlôe3PagîFûíame
(
pBt
->
pPagî
, 0))

2232 && 
	`sqlôe3PagîVfs
(
pBt
->
pPagî
)==
pVfs
 ){

2233 
iDb
;

2234 
iDb
=
db
->
nDb
-1; iDb>=0; iDb--){

2235 
Båì
 *
pExi°ög
 = 
db
->
aDb
[
iDb
].
pBt
;

2236 if–
pExi°ög
 &&ÖExi°ög->
pBt
==pBt ){

2237 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2238 
	`sqlôe3_muãx_Àave
(
muãxO≥n
);

2239 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2240 
	`sqlôe3_‰ì
(
p
);

2241  
SQLITE_CONSTRAINT
;

2244 
p
->
pBt
 =ÖBt;

2245 
pBt
->
nRef
++;

2249 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2250 
	`sqlôe3_‰ì
(
zFuŒP©h«me
);

2252 #ifde‡
SQLITE_DEBUG


2259 
p
->
sh¨abÀ
 = 1;

2264 if–
pBt
==0 ){

2270 
	`as£π
–(
i64
)==8 );

2271 
	`as£π
–(
u64
)==8 );

2272 
	`as£π
–(
u32
)==4 );

2273 
	`as£π
–(
u16
)==2 );

2274 
	`as£π
–(
Pgno
)==4 );

2276 
pBt
 = 
	`sqlôe3MÆlocZîo
( (*pBt) );

2277 if–
pBt
==0 ){

2278 
rc
 = 
SQLITE_NOMEM_BKPT
;

2279 
båì_›í_out
;

2281 
rc
 = 
	`sqlôe3PagîO≥n
(
pVfs
, &
pBt
->
pPagî
, 
zFûíame
,

2282 
EXTRA_SIZE
, 
Êags
, 
vfsFœgs
, 
∑geReöô
);

2283 if–
rc
==
SQLITE_OK
 ){

2284 
	`sqlôe3PagîSëMm≠Limô
(
pBt
->
pPagî
, 
db
->
szMm≠
);

2285 
rc
 = 
	`sqlôe3PagîRódFûehódî
(
pBt
->
pPagî
,(
zDbHódî
),zDbHeader);

2287 if–
rc
!=
SQLITE_OK
 ){

2288 
båì_›í_out
;

2290 
pBt
->
›íFœgs
 = (
u8
)
Êags
;

2291 
pBt
->
db
 = db;

2292 
	`sqlôe3PagîSëBusyh™dÀr
(
pBt
->
pPagî
, 
båìInvokeBusyH™dÀr
,ÖBt);

2293 
p
->
pBt
 =ÖBt;

2295 
pBt
->
pCurs‹
 = 0;

2296 
pBt
->
pPage1
 = 0;

2297 if–
	`sqlôe3PagîI§ód⁄ly
(
pBt
->
pPagî
ËËpBt->
btsFœgs
 |
BTS_READ_ONLY
;

2298 #ifde‡
SQLITE_SECURE_DELETE


2299 
pBt
->
btsFœgs
 |
BTS_SECURE_DELETE
;

2304 
pBt
->
∑geSize
 = (
zDbHódî
[16]<<8) | (zDbHeader[17]<<16);

2305 if–
pBt
->
∑geSize
<512 ||ÖBt->∑geSize>
SQLITE_MAX_PAGE_SIZE


2306 || ((
pBt
->
∑geSize
-1)&pBt->pageSize)!=0 ){

2307 
pBt
->
∑geSize
 = 0;

2308 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2315 if–
zFûíame
 && !
isMemdb
 ){

2316 
pBt
->
autoVacuum
 = (
SQLITE_DEFAULT_AUTOVACUUM
 ? 1 : 0);

2317 
pBt
->
ö¸Vacuum
 = (
SQLITE_DEFAULT_AUTOVACUUM
==2 ? 1 : 0);

2320 
nRe£rve
 = 0;

2325 
nRe£rve
 = 
zDbHódî
[20];

2326 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

2327 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2328 
pBt
->
autoVacuum
 = (
	`gë4byã
(&
zDbHódî
[36 + 4*4])?1:0);

2329 
pBt
->
ö¸Vacuum
 = (
	`gë4byã
(&
zDbHódî
[36 + 7*4])?1:0);

2332 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
, 
nRe£rve
);

2333 if–
rc
 ) 
båì_›í_out
;

2334 
pBt
->
ußbÀSize
 =ÖBt->
∑geSize
 - 
nRe£rve
;

2335 
	`as£π
–(
pBt
->
∑geSize
 & 7)==0 );

2337 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2340 
pBt
->
nRef
 = 1;

2341 if–
p
->
sh¨abÀ
 ){

2342 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
muãxSh¨ed
; )

2343 
	`MUTEX_LOGIC
–
muãxSh¨ed
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);)

2344 if–
SQLITE_THREADSAFE
 && 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

2345 
pBt
->
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_FAST
);

2346 if–
pBt
->
muãx
==0 ){

2347 
rc
 = 
SQLITE_NOMEM_BKPT
;

2348 
båì_›í_out
;

2351 
	`sqlôe3_muãx_íãr
(
muãxSh¨ed
);

2352 
pBt
->
pNext
 = 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);

2353 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
Ë
pBt
;

2354 
	`sqlôe3_muãx_Àave
(
muãxSh¨ed
);

2359 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

2364 if–
p
->
sh¨abÀ
 ){

2365 
i
;

2366 
Båì
 *
pSib
;

2367 
i
=0; i<
db
->
nDb
; i++){

2368 if–(
pSib
 = 
db
->
aDb
[
i
].
pBt
)!=0 &&ÖSib->
sh¨abÀ
 ){

2369  
pSib
->
pPªv
 ){ÖSib =ÖSib->pPrev; }

2370 if–(
u±r
)
p
->
pBt
<(u±r)
pSib
->pBt ){

2371 
p
->
pNext
 = 
pSib
;

2372 
p
->
pPªv
 = 0;

2373 
pSib
->
pPªv
 = 
p
;

2375  
pSib
->
pNext
 && (
u±r
ÌSib->pNext->
pBt
<(u±r)
p
->pBt ){

2376 
pSib
 =ÖSib->
pNext
;

2378 
p
->
pNext
 = 
pSib
->pNext;

2379 
p
->
pPªv
 = 
pSib
;

2380 if–
p
->
pNext
 ){

2381 
p
->
pNext
->
pPªv
 =Ö;

2383 
pSib
->
pNext
 = 
p
;

2390 *
µBåì
 = 
p
;

2392 
båì_›í_out
:

2393 if–
rc
!=
SQLITE_OK
 ){

2394 if–
pBt
 &&ÖBt->
pPagî
 ){

2395 
	`sqlôe3PagîClo£
(
pBt
->
pPagî
);

2397 
	`sqlôe3_‰ì
(
pBt
);

2398 
	`sqlôe3_‰ì
(
p
);

2399 *
µBåì
 = 0;

2405 if–
	`sqlôe3BåìSchema
(
p
, 0, 0)==0 ){

2406 
	`sqlôe3PagîSëCachesize
(
p
->
pBt
->
pPagî
, 
SQLITE_DEFAULT_CACHE_SIZE
);

2409 if–
muãxO≥n
 ){

2410 
	`as£π
–
	`sqlôe3_muãx_hñd
(
muãxO≥n
) );

2411 
	`sqlôe3_muãx_Àave
(
muãxO≥n
);

2413 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(*
µBåì
)>0 );

2414  
rc
;

2415 
	}
}

2423 
	$ªmoveFromSh¨ögLi°
(
BtSh¨ed
 *
pBt
){

2424 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2425 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

2426 
BtSh¨ed
 *
pLi°
;

2427 
ªmoved
 = 0;

2429 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pBt
->
muãx
) );

2430 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

2431 
	`sqlôe3_muãx_íãr
(
pMa°î
);

2432 
pBt
->
nRef
--;

2433 if–
pBt
->
nRef
<=0 ){

2434 if–
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
)==
pBt
 ){

2435 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
Ë
pBt
->
pNext
;

2437 
pLi°
 = 
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);

2438  
	`ALWAYS
(
pLi°
Ë&&ÖLi°->
pNext
!=
pBt
 ){

2439 
pLi°
ıLi°->
pNext
;

2441 if–
	`ALWAYS
(
pLi°
) ){

2442 
pLi°
->
pNext
 = 
pBt
->pNext;

2445 if–
SQLITE_THREADSAFE
 ){

2446 
	`sqlôe3_muãx_‰ì
(
pBt
->
muãx
);

2448 
ªmoved
 = 1;

2450 
	`sqlôe3_muãx_Àave
(
pMa°î
);

2451  
ªmoved
;

2455 
	}
}

2462 
	$ÆloˇãTempS∑˚
(
BtSh¨ed
 *
pBt
){

2463 if–!
pBt
->
pTmpS∑˚
 ){

2464 
pBt
->
pTmpS∑˚
 = 
	`sqlôe3PageMÆloc
–pBt->
∑geSize
 );

2481 if–
pBt
->
pTmpS∑˚
 ){

2482 
	`mem£t
(
pBt
->
pTmpS∑˚
, 0, 8);

2483 
pBt
->
pTmpS∑˚
 += 4;

2486 
	}
}

2491 
	$‰ìTempS∑˚
(
BtSh¨ed
 *
pBt
){

2492 if–
pBt
->
pTmpS∑˚
 ){

2493 
pBt
->
pTmpS∑˚
 -= 4;

2494 
	`sqlôe3PageFªe
(
pBt
->
pTmpS∑˚
);

2495 
pBt
->
pTmpS∑˚
 = 0;

2497 
	}
}

2502 
	$sqlôe3BåìClo£
(
Båì
 *
p
){

2503 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2504 
BtCurs‹
 *
pCur
;

2507 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2508 
	`sqlôe3BåìE¡î
(
p
);

2509 
pCur
 = 
pBt
->
pCurs‹
;

2510  
pCur
 ){

2511 
BtCurs‹
 *
pTmp
 = 
pCur
;

2512 
pCur
 =ÖCur->
pNext
;

2513 if–
pTmp
->
pBåì
==
p
 ){

2514 
	`sqlôe3BåìClo£Curs‹
(
pTmp
);

2522 
	`sqlôe3BåìRﬁlback
(
p
, 
SQLITE_OK
, 0);

2523 
	`sqlôe3BåìLóve
(
p
);

2529 
	`as£π
–
p
->
w™tToLock
==0 &&Ö->
locked
==0 );

2530 if–!
p
->
sh¨abÀ
 || 
	`ªmoveFromSh¨ögLi°
(
pBt
) ){

2536 
	`as£π
–!
pBt
->
pCurs‹
 );

2537 
	`sqlôe3PagîClo£
(
pBt
->
pPagî
);

2538 if–
pBt
->
xFªeSchema
 &&ÖBt->
pSchema
 ){

2539 
pBt
->
	`xFªeSchema
’Bt->
pSchema
);

2541 
	`sqlôe3DbFªe
(0, 
pBt
->
pSchema
);

2542 
	`‰ìTempS∑˚
(
pBt
);

2543 
	`sqlôe3_‰ì
(
pBt
);

2546 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2547 
	`as£π
–
p
->
w™tToLock
==0 );

2548 
	`as£π
–
p
->
locked
==0 );

2549 if–
p
->
pPªv
 )Ö->pPªv->
pNext
 =Ö->pNext;

2550 if–
p
->
pNext
 )Ö->pNext->
pPªv
 =Ö->pPrev;

2553 
	`sqlôe3_‰ì
(
p
);

2554  
SQLITE_OK
;

2555 
	}
}

2564 
	$sqlôe3BåìSëCacheSize
(
Båì
 *
p
, 
mxPage
){

2565 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2566 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2567 
	`sqlôe3BåìE¡î
(
p
);

2568 
	`sqlôe3PagîSëCachesize
(
pBt
->
pPagî
, 
mxPage
);

2569 
	`sqlôe3BåìLóve
(
p
);

2570  
SQLITE_OK
;

2571 
	}
}

2583 
	$sqlôe3BåìSëSpûlSize
(
Båì
 *
p
, 
mxPage
){

2584 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2585 
ªs
;

2586 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2587 
	`sqlôe3BåìE¡î
(
p
);

2588 
ªs
 = 
	`sqlôe3PagîSëSpûlsize
(
pBt
->
pPagî
, 
mxPage
);

2589 
	`sqlôe3BåìLóve
(
p
);

2590  
ªs
;

2591 
	}
}

2593 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2598 
	$sqlôe3BåìSëMm≠Limô
(
Båì
 *
p
, 
sqlôe3_öt64
 
szMm≠
){

2599 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2600 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2601 
	`sqlôe3BåìE¡î
(
p
);

2602 
	`sqlôe3PagîSëMm≠Limô
(
pBt
->
pPagî
, 
szMm≠
);

2603 
	`sqlôe3BåìLóve
(
p
);

2604  
SQLITE_OK
;

2605 
	}
}

2616 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


2617 
	$sqlôe3BåìSëPagîFœgs
(

2618 
Båì
 *
p
,

2619 
pgFœgs


2621 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2622 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

2623 
	`sqlôe3BåìE¡î
(
p
);

2624 
	`sqlôe3PagîSëFœgs
(
pBt
->
pPagî
, 
pgFœgs
);

2625 
	`sqlôe3BåìLóve
(
p
);

2626  
SQLITE_OK
;

2627 
	}
}

2650 
	$sqlôe3BåìSëPageSize
(
Båì
 *
p
, 
∑geSize
, 
nRe£rve
, 
iFix
){

2651 
rc
 = 
SQLITE_OK
;

2652 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2653 
	`as£π
–
nRe£rve
>=-1 &&ÇReserve<=255 );

2654 
	`sqlôe3BåìE¡î
(
p
);

2655 #i‡
SQLITE_HAS_CODEC


2656 if–
nRe£rve
>
pBt
->
›timÆRe£rve
 )ÖBt->›timÆRe£rvê(
u8
)nReserve;

2658 if–
pBt
->
btsFœgs
 & 
BTS_PAGESIZE_FIXED
 ){

2659 
	`sqlôe3BåìLóve
(
p
);

2660  
SQLITE_READONLY
;

2662 if–
nRe£rve
<0 ){

2663 
nRe£rve
 = 
pBt
->
∑geSize
 -ÖBt->
ußbÀSize
;

2665 
	`as£π
–
nRe£rve
>=0 &&ÇReserve<=255 );

2666 if–
∑geSize
>=512 &&ÖageSize<=
SQLITE_MAX_PAGE_SIZE
 &&

2667 ((
∑geSize
-1)&pageSize)==0 ){

2668 
	`as£π
–(
∑geSize
 & 7)==0 );

2669 
	`as£π
–!
pBt
->
pCurs‹
 );

2670 
pBt
->
∑geSize
 = (
u32
)pageSize;

2671 
	`‰ìTempS∑˚
(
pBt
);

2673 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
, 
nRe£rve
);

2674 
pBt
->
ußbÀSize
 =ÖBt->
∑geSize
 - (
u16
)
nRe£rve
;

2675 if–
iFix
 ) 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

2676 
	`sqlôe3BåìLóve
(
p
);

2677  
rc
;

2678 
	}
}

2683 
	$sqlôe3BåìGëPageSize
(
Båì
 *
p
){

2684  
p
->
pBt
->
∑geSize
;

2685 
	}
}

2698 
	$sqlôe3BåìGëRe£rveNoMuãx
(
Båì
 *
p
){

2699 
n
;

2700 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pBt
->
muãx
) );

2701 
n
 = 
p
->
pBt
->
∑geSize
 -Ö->pBt->
ußbÀSize
;

2702  
n
;

2703 
	}
}

2714 
	$sqlôe3BåìGëO±imÆRe£rve
(
Båì
 *
p
){

2715 
n
;

2716 
	`sqlôe3BåìE¡î
(
p
);

2717 
n
 = 
	`sqlôe3BåìGëRe£rveNoMuãx
(
p
);

2718 #ifde‡
SQLITE_HAS_CODEC


2719 if–
n
<
p
->
pBt
->
›timÆRe£rve
 )Ç =Ö->pBt->optimalReserve;

2721 
	`sqlôe3BåìLóve
(
p
);

2722  
n
;

2723 
	}
}

2731 
	$sqlôe3BåìMaxPageCou¡
(
Båì
 *
p
, 
mxPage
){

2732 
n
;

2733 
	`sqlôe3BåìE¡î
(
p
);

2734 
n
 = 
	`sqlôe3PagîMaxPageCou¡
(
p
->
pBt
->
pPagî
, 
mxPage
);

2735 
	`sqlôe3BåìLóve
(
p
);

2736  
n
;

2737 
	}
}

2744 
	$sqlôe3BåìSecuªDñëe
(
Båì
 *
p
, 
√wFœg
){

2745 
b
;

2746 if–
p
==0 )  0;

2747 
	`sqlôe3BåìE¡î
(
p
);

2748 if–
√wFœg
>=0 ){

2749 
p
->
pBt
->
btsFœgs
 &~
BTS_SECURE_DELETE
;

2750 if–
√wFœg
 ) 
p
->
pBt
->
btsFœgs
 |
BTS_SECURE_DELETE
;

2752 
b
 = (
p
->
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
)!=0;

2753 
	`sqlôe3BåìLóve
(
p
);

2754  
b
;

2755 
	}
}

2763 
	$sqlôe3BåìSëAutoVacuum
(
Båì
 *
p
, 
autoVacuum
){

2764 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2765  
SQLITE_READONLY
;

2767 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

2768 
rc
 = 
SQLITE_OK
;

2769 
u8
 
av
 = (u8)
autoVacuum
;

2771 
	`sqlôe3BåìE¡î
(
p
);

2772 if–(
pBt
->
btsFœgs
 & 
BTS_PAGESIZE_FIXED
)!=0 && (
av
 ?1:0)!ıBt->
autoVacuum
 ){

2773 
rc
 = 
SQLITE_READONLY
;

2775 
pBt
->
autoVacuum
 = 
av
 ?1:0;

2776 
pBt
->
ö¸Vacuum
 = 
av
==2 ?1:0;

2778 
	`sqlôe3BåìLóve
(
p
);

2779  
rc
;

2781 
	}
}

2787 
	$sqlôe3BåìGëAutoVacuum
(
Båì
 *
p
){

2788 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2789  
BTREE_AUTOVACUUM_NONE
;

2791 
rc
;

2792 
	`sqlôe3BåìE¡î
(
p
);

2793 
rc
 = (

2794 (!
p
->
pBt
->
autoVacuum
)?
BTREE_AUTOVACUUM_NONE
:

2795 (!
p
->
pBt
->
ö¸Vacuum
)?
BTREE_AUTOVACUUM_FULL
:

2796 
BTREE_AUTOVACUUM_INCR


2798 
	`sqlôe3BåìLóve
(
p
);

2799  
rc
;

2801 
	}
}

2813 
	$lockBåì
(
BtSh¨ed
 *
pBt
){

2814 
rc
;

2815 
MemPage
 *
pPage1
;

2816 
nPage
;

2817 
nPageFûe
 = 0;

2818 
nPageHódî
;

2820 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

2821 
	`as£π
–
pBt
->
pPage1
==0 );

2822 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pBt
->
pPagî
);

2823 if–
rc
!=
SQLITE_OK
 ) Ñc;

2824 
rc
 = 
	`båìGëPage
(
pBt
, 1, &
pPage1
, 0);

2825 if–
rc
!=
SQLITE_OK
 ) Ñc;

2830 
nPage
 = 
nPageHódî
 = 
	`gë4byã
(28+(
u8
*)
pPage1
->
aD©a
);

2831 
	`sqlôe3PagîPagecou¡
(
pBt
->
pPagî
, &
nPageFûe
);

2832 if–
nPage
==0 || 
	`memcmp
(24+(
u8
*)
pPage1
->
aD©a
, 92+(u8*)pPage1->aData,4)!=0 ){

2833 
nPage
 = 
nPageFûe
;

2835 if–
nPage
>0 ){

2836 
u32
 
∑geSize
;

2837 
u32
 
ußbÀSize
;

2838 
u8
 *
∑ge1
 = 
pPage1
->
aD©a
;

2839 
rc
 = 
SQLITE_NOTADB
;

2843 if–
	`memcmp
(
∑ge1
, 
zMagicHódî
, 16)!=0 ){

2844 
∑ge1_öô_Áûed
;

2847 #ifde‡
SQLITE_OMIT_WAL


2848 if–
∑ge1
[18]>1 ){

2849 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

2851 if–
∑ge1
[19]>1 ){

2852 
∑ge1_öô_Áûed
;

2855 if–
∑ge1
[18]>2 ){

2856 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

2858 if–
∑ge1
[19]>2 ){

2859 
∑ge1_öô_Áûed
;

2870 if–
∑ge1
[19]==2 && (
pBt
->
btsFœgs
 & 
BTS_NO_WAL
)==0 ){

2871 
isO≥n
 = 0;

2872 
rc
 = 
	`sqlôe3PagîO≥nWÆ
(
pBt
->
pPagî
, &
isO≥n
);

2873 if–
rc
!=
SQLITE_OK
 ){

2874 
∑ge1_öô_Áûed
;

2876 #i‡
SQLITE_DEFAULT_SYNCHRONOUS
!=
SQLITE_DEFAULT_WAL_SYNCHRONOUS


2877 
sqlôe3
 *
db
;

2878 
Db
 *
pDb
;

2879 if–(
db
=
pBt
->db)!=0 && (
pDb
=db->
aDb
)!=0 ){

2880  
pDb
->
pBt
==0 ||ÖDb->pBt->pBt!=pBt ){ÖDb++; }

2881 if–
pDb
->
bSyncSë
==0

2882 && 
pDb
->
ß„ty_Àvñ
==
SQLITE_DEFAULT_SYNCHRONOUS
+1

2884 
pDb
->
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_WAL_SYNCHRONOUS
+1;

2885 
	`sqlôe3PagîSëFœgs
(
pBt
->
pPagî
,

2886 
pDb
->
ß„ty_Àvñ
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
));

2890 if–
isO≥n
==0 ){

2891 
	`ªÀa£Page
(
pPage1
);

2892  
SQLITE_OK
;

2895 
rc
 = 
SQLITE_NOTADB
;

2905 if–
	`memcmp
(&
∑ge1
[21], "\100\040\040",3)!=0 ){

2906 
∑ge1_öô_Áûed
;

2911 
∑geSize
 = (
∑ge1
[16]<<8) | (page1[17]<<16);

2914 if–((
∑geSize
-1)&pageSize)!=0

2915 || 
∑geSize
>
SQLITE_MAX_PAGE_SIZE


2916 || 
∑geSize
<=256

2918 
∑ge1_öô_Áûed
;

2920 
	`as£π
–(
∑geSize
 & 7)==0 );

2928 
ußbÀSize
 = 
∑geSize
 - 
∑ge1
[20];

2929 if–(
u32
)
∑geSize
!=
pBt
->pageSize ){

2936 
	`ªÀa£Page
(
pPage1
);

2937 
pBt
->
ußbÀSize
 = usableSize;

2938 
pBt
->
∑geSize
 =ÖageSize;

2939 
	`‰ìTempS∑˚
(
pBt
);

2940 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pBt
->
pPagî
, &pBt->
∑geSize
,

2941 
∑geSize
-
ußbÀSize
);

2942  
rc
;

2944 if–(
pBt
->
db
->
Êags
 & 
SQLITE_RecovîyMode
)==0 && 
nPage
>
nPageFûe
 ){

2945 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2946 
∑ge1_öô_Áûed
;

2951 if–
ußbÀSize
<480 ){

2952 
∑ge1_öô_Áûed
;

2954 
pBt
->
∑geSize
 =ÖageSize;

2955 
pBt
->
ußbÀSize
 = usableSize;

2956 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2957 
pBt
->
autoVacuum
 = (
	`gë4byã
(&
∑ge1
[36 + 4*4])?1:0);

2958 
pBt
->
ö¸Vacuum
 = (
	`gë4byã
(&
∑ge1
[36 + 7*4])?1:0);

2975 
pBt
->
maxLoˇl
 = (
u16
)(’Bt->
ußbÀSize
-12)*64/255 - 23);

2976 
pBt
->
möLoˇl
 = (
u16
)(’Bt->
ußbÀSize
-12)*32/255 - 23);

2977 
pBt
->
maxLóf
 = (
u16
)’Bt->
ußbÀSize
 - 35);

2978 
pBt
->
möLóf
 = (
u16
)(’Bt->
ußbÀSize
-12)*32/255 - 23);

2979 if–
pBt
->
maxLoˇl
>127 ){

2980 
pBt
->
max1byãPaylﬂd
 = 127;

2982 
pBt
->
max1byãPaylﬂd
 = (
u8
ÌBt->
maxLoˇl
;

2984 
	`as£π
–
pBt
->
maxLóf
 + 23 <
	`MX_CELL_SIZE
(pBt) );

2985 
pBt
->
pPage1
 =ÖPage1;

2986 
pBt
->
nPage
 =ÇPage;

2987  
SQLITE_OK
;

2989 
∑ge1_öô_Áûed
:

2990 
	`ªÀa£Page
(
pPage1
);

2991 
pBt
->
pPage1
 = 0;

2992  
rc
;

2993 
	}
}

2995 #i‚de‡
NDEBUG


3008 
	$cou¡VÆidCurs‹s
(
BtSh¨ed
 *
pBt
, 
wrO∆y
){

3009 
BtCurs‹
 *
pCur
;

3010 
r
 = 0;

3011 
pCur
=
pBt
->
pCurs‹
;ÖCur;ÖCurıCur->
pNext
){

3012 if–(
wrO∆y
==0 || (
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
)!=0)

3013 && 
pCur
->
eSèã
!=
CURSOR_FAULT
 ) 
r
++;

3015  
r
;

3016 
	}
}

3027 
	$u∆ockBåìIfUnu£d
(
BtSh¨ed
 *
pBt
){

3028 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3029 
	`as£π
–
	`cou¡VÆidCurs‹s
(
pBt
,0)==0 ||ÖBt->
öTønß˘i⁄
>
TRANS_NONE
 );

3030 if–
pBt
->
öTønß˘i⁄
==
TRANS_NONE
 &&ÖBt->
pPage1
!=0 ){

3031 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

3032 
	`as£π
–
pPage1
->
aD©a
 );

3033 
	`as£π
–
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
)==1 );

3034 
pBt
->
pPage1
 = 0;

3035 
	`ªÀa£PageNŸNuŒ
(
pPage1
);

3037 
	}
}

3044 
	$√wD©aba£
(
BtSh¨ed
 *
pBt
){

3045 
MemPage
 *
pP1
;

3046 *
d©a
;

3047 
rc
;

3049 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3050 if–
pBt
->
nPage
>0 ){

3051  
SQLITE_OK
;

3053 
pP1
 = 
pBt
->
pPage1
;

3054 
	`as£π
–
pP1
!=0 );

3055 
d©a
 = 
pP1
->
aD©a
;

3056 
rc
 = 
	`sqlôe3PagîWrôe
(
pP1
->
pDbPage
);

3057 if–
rc
 ) Ñc;

3058 
	`mem˝y
(
d©a
, 
zMagicHódî
, (zMagicHeader));

3059 
	`as£π
–(
zMagicHódî
)==16 );

3060 
d©a
[16] = (
u8
)((
pBt
->
∑geSize
>>8)&0xff);

3061 
d©a
[17] = (
u8
)((
pBt
->
∑geSize
>>16)&0xff);

3062 
d©a
[18] = 1;

3063 
d©a
[19] = 1;

3064 
	`as£π
–
pBt
->
ußbÀSize
<ıBt->
∑geSize
 &&ÖBt->usableSize+255>=pBt->pageSize);

3065 
d©a
[20] = (
u8
)(
pBt
->
∑geSize
 -ÖBt->
ußbÀSize
);

3066 
d©a
[21] = 64;

3067 
d©a
[22] = 32;

3068 
d©a
[23] = 32;

3069 
	`mem£t
(&
d©a
[24], 0, 100-24);

3070 
	`zîoPage
(
pP1
, 
PTF_INTKEY
|
PTF_LEAF
|
PTF_LEAFDATA
 );

3071 
pBt
->
btsFœgs
 |
BTS_PAGESIZE_FIXED
;

3072 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3073 
	`as£π
–
pBt
->
autoVacuum
==1 ||ÖBt->autoVacuum==0 );

3074 
	`as£π
–
pBt
->
ö¸Vacuum
==1 ||ÖBt->incrVacuum==0 );

3075 
	`put4byã
(&
d©a
[36 + 4*4], 
pBt
->
autoVacuum
);

3076 
	`put4byã
(&
d©a
[36 + 7*4], 
pBt
->
ö¸Vacuum
);

3078 
pBt
->
nPage
 = 1;

3079 
d©a
[31] = 1;

3080  
SQLITE_OK
;

3081 
	}
}

3088 
	$sqlôe3BåìNewDb
(
Båì
 *
p
){

3089 
rc
;

3090 
	`sqlôe3BåìE¡î
(
p
);

3091 
p
->
pBt
->
nPage
 = 0;

3092 
rc
 = 
	`√wD©aba£
(
p
->
pBt
);

3093 
	`sqlôe3BåìLóve
(
p
);

3094  
rc
;

3095 
	}
}

3132 
	$sqlôe3BåìBegöTøns
(
Båì
 *
p
, 
wrÊag
){

3133 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3134 
rc
 = 
SQLITE_OK
;

3136 
	`sqlôe3BåìE¡î
(
p
);

3137 
	`båìI¡egrôy
(
p
);

3143 if–
p
->
öTøns
==
TRANS_WRITE
 || (p->öTøns==
TRANS_READ
 && !
wrÊag
) ){

3144 
å™s_begun
;

3146 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 || 
	`IfNŸOmôAV
’Bt->
bDoTrunˇã
)==0 );

3149 if–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0 && 
wrÊag
 ){

3150 
rc
 = 
SQLITE_READONLY
;

3151 
å™s_begun
;

3154 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3156 
sqlôe3
 *
pBlock
 = 0;

3161 if–(
wrÊag
 && 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
)

3162 || (
pBt
->
btsFœgs
 & 
BTS_PENDING
)!=0

3164 
pBlock
 = 
pBt
->
pWrôî
->
db
;

3165 }if–
wrÊag
>1 ){

3166 
BtLock
 *
pIãr
;

3167 
pIãr
=
pBt
->
pLock
;ÖIãr;ÖIãrıIãr->
pNext
){

3168 if–
pIãr
->
pBåì
!=
p
 ){

3169 
pBlock
 = 
pIãr
->
pBåì
->
db
;

3174 if–
pBlock
 ){

3175 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pBlock
);

3176 
rc
 = 
SQLITE_LOCKED_SHAREDCACHE
;

3177 
å™s_begun
;

3185 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
);

3186 if–
SQLITE_OK
!=
rc
 ) 
å™s_begun
;

3188 
pBt
->
btsFœgs
 &~
BTS_INITIALLY_EMPTY
;

3189 if–
pBt
->
nPage
==0 )ÖBt->
btsFœgs
 |
BTS_INITIALLY_EMPTY
;

3198  
pBt
->
pPage1
==0 && 
SQLITE_OK
==(
rc
 = 
	`lockBåì
(pBt)) );

3200 if–
rc
==
SQLITE_OK
 && 
wrÊag
 ){

3201 if–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0 ){

3202 
rc
 = 
SQLITE_READONLY
;

3204 
rc
 = 
	`sqlôe3PagîBegö
(
pBt
->
pPagî
,
wrÊag
>1,
	`sqlôe3TempInMem‹y
(
p
->
db
));

3205 if–
rc
==
SQLITE_OK
 ){

3206 
rc
 = 
	`√wD©aba£
(
pBt
);

3211 if–
rc
!=
SQLITE_OK
 ){

3212 
	`u∆ockBåìIfUnu£d
(
pBt
);

3214 } (
rc
&0xFF)==
SQLITE_BUSY
 && 
pBt
->
öTønß˘i⁄
==
TRANS_NONE
 &&

3215 
	`båìInvokeBusyH™dÀr
(
pBt
) );

3217 if–
rc
==
SQLITE_OK
 ){

3218 if–
p
->
öTøns
==
TRANS_NONE
 ){

3219 
pBt
->
nTønß˘i⁄
++;

3220 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3221 if–
p
->
sh¨abÀ
 ){

3222 
	`as£π
–
p
->
lock
.
pBåì
=ı &&Ö->lock.
iTabÀ
==1 );

3223 
p
->
lock
.
eLock
 = 
READ_LOCK
;

3224 
p
->
lock
.
pNext
 = 
pBt
->
pLock
;

3225 
pBt
->
pLock
 = &
p
->
lock
;

3229 
p
->
öTøns
 = (
wrÊag
?
TRANS_WRITE
:
TRANS_READ
);

3230 if–
p
->
öTøns
>
pBt
->
öTønß˘i⁄
 ){

3231 
pBt
->
öTønß˘i⁄
 = 
p
->
öTøns
;

3233 if–
wrÊag
 ){

3234 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

3235 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


3236 
	`as£π
–!
pBt
->
pWrôî
 );

3237 
pBt
->
pWrôî
 = 
p
;

3238 
pBt
->
btsFœgs
 &~
BTS_EXCLUSIVE
;

3239 if–
wrÊag
>1 ) 
pBt
->
btsFœgs
 |
BTS_EXCLUSIVE
;

3248 if–
pBt
->
nPage
!=
	`gë4byã
(&
pPage1
->
aD©a
[28]) ){

3249 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

3250 if–
rc
==
SQLITE_OK
 ){

3251 
	`put4byã
(&
pPage1
->
aD©a
[28], 
pBt
->
nPage
);

3258 
å™s_begun
:

3259 if–
rc
==
SQLITE_OK
 && 
wrÊag
 ){

3264 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pBt
->
pPagî
, 
p
->
db
->
nSavïoöt
);

3267 
	`båìI¡egrôy
(
p
);

3268 
	`sqlôe3BåìLóve
(
p
);

3269  
rc
;

3270 
	}
}

3272 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3279 
	$£tChûdPåm≠s
(
MemPage
 *
pPage
){

3280 
i
;

3281 
nCñl
;

3282 
rc
;

3283 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

3284 
u8
 
isInôOrig
 = 
pPage
->
isInô
;

3285 
Pgno
 
pgno
 = 
pPage
->pgno;

3287 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

3288 
rc
 = 
	`båìInôPage
(
pPage
);

3289 if–
rc
!=
SQLITE_OK
 ){

3290 
£t_chûd_±rm≠s_out
;

3292 
nCñl
 = 
pPage
->nCell;

3294 
i
=0; i<
nCñl
; i++){

3295 
u8
 *
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

3297 
	`±rm≠PutOvÊPå
(
pPage
, 
pCñl
, &
rc
);

3299 if–!
pPage
->
Àaf
 ){

3300 
Pgno
 
chûdPgno
 = 
	`gë4byã
(
pCñl
);

3301 
	`±rm≠Put
(
pBt
, 
chûdPgno
, 
PTRMAP_BTREE
, 
pgno
, &
rc
);

3305 if–!
pPage
->
Àaf
 ){

3306 
Pgno
 
chûdPgno
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

3307 
	`±rm≠Put
(
pBt
, 
chûdPgno
, 
PTRMAP_BTREE
, 
pgno
, &
rc
);

3310 
£t_chûd_±rm≠s_out
:

3311 
pPage
->
isInô
 = 
isInôOrig
;

3312  
rc
;

3313 
	}
}

3329 
	$modifyPagePoöãr
(
MemPage
 *
pPage
, 
Pgno
 
iFrom
, Pgnÿ
iTo
, 
u8
 
eTy≥
){

3330 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

3331 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

3332 if–
eTy≥
==
PTRMAP_OVERFLOW2
 ){

3334 if–
	`gë4byã
(
pPage
->
aD©a
)!=
iFrom
 ){

3335  
SQLITE_CORRUPT_BKPT
;

3337 
	`put4byã
(
pPage
->
aD©a
, 
iTo
);

3339 
u8
 
isInôOrig
 = 
pPage
->
isInô
;

3340 
i
;

3341 
nCñl
;

3342 
rc
;

3344 
rc
 = 
	`båìInôPage
(
pPage
);

3345 if–
rc
 ) Ñc;

3346 
nCñl
 = 
pPage
->nCell;

3348 
i
=0; i<
nCñl
; i++){

3349 
u8
 *
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

3350 if–
eTy≥
==
PTRMAP_OVERFLOW1
 ){

3351 
CñlInfo
 
öfo
;

3352 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

3353 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd


3354 && 
pCñl
+
öfo
.
nSize
-1<=
pPage
->
aD©a
+pPage->
maskPage


3355 && 
iFrom
==
	`gë4byã
(
pCñl
+
öfo
.
nSize
-4)

3357 
	`put4byã
(
pCñl
+
öfo
.
nSize
-4, 
iTo
);

3361 if–
	`gë4byã
(
pCñl
)==
iFrom
 ){

3362 
	`put4byã
(
pCñl
, 
iTo
);

3368 if–
i
==
nCñl
 ){

3369 if–
eTy≥
!=
PTRMAP_BTREE
 ||

3370 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8])!=
iFrom
 ){

3371  
SQLITE_CORRUPT_BKPT
;

3373 
	`put4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8], 
iTo
);

3376 
pPage
->
isInô
 = 
isInôOrig
;

3378  
SQLITE_OK
;

3379 
	}
}

3391 
	$ªloˇãPage
(

3392 
BtSh¨ed
 *
pBt
,

3393 
MemPage
 *
pDbPage
,

3394 
u8
 
eTy≥
,

3395 
Pgno
 
iPåPage
,

3396 
Pgno
 
iFªePage
,

3397 
isCommô


3399 
MemPage
 *
pPåPage
;

3400 
Pgno
 
iDbPage
 = 
pDbPage
->
pgno
;

3401 
Pagî
 *
pPagî
 = 
pBt
->pPager;

3402 
rc
;

3404 
	`as£π
–
eTy≥
==
PTRMAP_OVERFLOW2
 ||ÉTy≥==
PTRMAP_OVERFLOW1
 ||

3405 
eTy≥
==
PTRMAP_BTREE
 ||ÉTy≥==
PTRMAP_ROOTPAGE
 );

3406 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3407 
	`as£π
–
pDbPage
->
pBt
==pBt );

3410 
	`TRACE
(("AUTOVACUUM: Moving %dÅo freeÖage %d (ptrÖage %dÅype %d)\n",

3411 
iDbPage
, 
iFªePage
, 
iPåPage
, 
eTy≥
));

3412 
rc
 = 
	`sqlôe3PagîMovïage
(
pPagî
, 
pDbPage
->pDbPage, 
iFªePage
, 
isCommô
);

3413 if–
rc
!=
SQLITE_OK
 ){

3414  
rc
;

3416 
pDbPage
->
pgno
 = 
iFªePage
;

3426 if–
eTy≥
==
PTRMAP_BTREE
 ||ÉTy≥==
PTRMAP_ROOTPAGE
 ){

3427 
rc
 = 
	`£tChûdPåm≠s
(
pDbPage
);

3428 if–
rc
!=
SQLITE_OK
 ){

3429  
rc
;

3432 
Pgno
 
√xtOvÊ
 = 
	`gë4byã
(
pDbPage
->
aD©a
);

3433 if–
√xtOvÊ
!=0 ){

3434 
	`±rm≠Put
(
pBt
, 
√xtOvÊ
, 
PTRMAP_OVERFLOW2
, 
iFªePage
, &
rc
);

3435 if–
rc
!=
SQLITE_OK
 ){

3436  
rc
;

3445 if–
eTy≥
!=
PTRMAP_ROOTPAGE
 ){

3446 
rc
 = 
	`båìGëPage
(
pBt
, 
iPåPage
, &
pPåPage
, 0);

3447 if–
rc
!=
SQLITE_OK
 ){

3448  
rc
;

3450 
rc
 = 
	`sqlôe3PagîWrôe
(
pPåPage
->
pDbPage
);

3451 if–
rc
!=
SQLITE_OK
 ){

3452 
	`ªÀa£Page
(
pPåPage
);

3453  
rc
;

3455 
rc
 = 
	`modifyPagePoöãr
(
pPåPage
, 
iDbPage
, 
iFªePage
, 
eTy≥
);

3456 
	`ªÀa£Page
(
pPåPage
);

3457 if–
rc
==
SQLITE_OK
 ){

3458 
	`±rm≠Put
(
pBt
, 
iFªePage
, 
eTy≥
, 
iPåPage
, &
rc
);

3461  
rc
;

3462 
	}
}

3465 
ÆloˇãBåìPage
(
BtSh¨ed
 *, 
MemPage
 **, 
Pgno
 *, Pgno, 
u8
);

3484 
	$ö¸VacuumSãp
(
BtSh¨ed
 *
pBt
, 
Pgno
 
nFö
, Pgnÿ
iLa°Pg
, 
bCommô
){

3485 
Pgno
 
nFªeLi°
;

3486 
rc
;

3488 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3489 
	`as£π
–
iLa°Pg
>
nFö
 );

3491 if–!
	`PTRMAP_ISPAGE
(
pBt
, 
iLa°Pg
Ë&& iLa°Pg!=
	`PENDING_BYTE_PAGE
(pBt) ){

3492 
u8
 
eTy≥
;

3493 
Pgno
 
iPåPage
;

3495 
nFªeLi°
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3496 if–
nFªeLi°
==0 ){

3497  
SQLITE_DONE
;

3500 
rc
 = 
	`±rm≠Gë
(
pBt
, 
iLa°Pg
, &
eTy≥
, &
iPåPage
);

3501 if–
rc
!=
SQLITE_OK
 ){

3502  
rc
;

3504 if–
eTy≥
==
PTRMAP_ROOTPAGE
 ){

3505  
SQLITE_CORRUPT_BKPT
;

3508 if–
eTy≥
==
PTRMAP_FREEPAGE
 ){

3509 if–
bCommô
==0 ){

3515 
Pgno
 
iFªePg
;

3516 
MemPage
 *
pFªePg
;

3517 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pFªePg
, &
iFªePg
, 
iLa°Pg
, 
BTALLOC_EXACT
);

3518 if–
rc
!=
SQLITE_OK
 ){

3519  
rc
;

3521 
	`as£π
–
iFªePg
==
iLa°Pg
 );

3522 
	`ªÀa£Page
(
pFªePg
);

3525 
Pgno
 
iFªePg
;

3526 
MemPage
 *
pLa°Pg
;

3527 
u8
 
eMode
 = 
BTALLOC_ANY
;

3528 
Pgno
 
iNór
 = 0;

3530 
rc
 = 
	`båìGëPage
(
pBt
, 
iLa°Pg
, &
pLa°Pg
, 0);

3531 if–
rc
!=
SQLITE_OK
 ){

3532  
rc
;

3542 if–
bCommô
==0 ){

3543 
eMode
 = 
BTALLOC_LE
;

3544 
iNór
 = 
nFö
;

3547 
MemPage
 *
pFªePg
;

3548 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pFªePg
, &
iFªePg
, 
iNór
, 
eMode
);

3549 if–
rc
!=
SQLITE_OK
 ){

3550 
	`ªÀa£Page
(
pLa°Pg
);

3551  
rc
;

3553 
	`ªÀa£Page
(
pFªePg
);

3554 } 
bCommô
 && 
iFªePg
>
nFö
 );

3555 
	`as£π
–
iFªePg
<
iLa°Pg
 );

3557 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pLa°Pg
, 
eTy≥
, 
iPåPage
, 
iFªePg
, 
bCommô
);

3558 
	`ªÀa£Page
(
pLa°Pg
);

3559 if–
rc
!=
SQLITE_OK
 ){

3560  
rc
;

3565 if–
bCommô
==0 ){

3567 
iLa°Pg
--;

3568 } 
iLa°Pg
==
	`PENDING_BYTE_PAGE
(
pBt
Ë|| 
	`PTRMAP_ISPAGE
(pBt, iLastPg) );

3569 
pBt
->
bDoTrunˇã
 = 1;

3570 
pBt
->
nPage
 = 
iLa°Pg
;

3572  
SQLITE_OK
;

3573 
	}
}

3580 
Pgno
 
	$föÆDbSize
(
BtSh¨ed
 *
pBt
, 
Pgno
 
nOrig
, Pgnÿ
nFªe
){

3581 
nE¡ry
;

3582 
Pgno
 
nPåm≠
;

3583 
Pgno
 
nFö
;

3585 
nE¡ry
 = 
pBt
->
ußbÀSize
/5;

3586 
nPåm≠
 = (
nFªe
-
nOrig
+
	`PTRMAP_PAGENO
(
pBt
,ÇOrig)+
nE¡ry
)/nEntry;

3587 
nFö
 = 
nOrig
 - 
nFªe
 - 
nPåm≠
;

3588 if–
nOrig
>
	`PENDING_BYTE_PAGE
(
pBt
Ë&& 
nFö
<PENDING_BYTE_PAGE(pBt) ){

3589 
nFö
--;

3591  
	`PTRMAP_ISPAGE
(
pBt
, 
nFö
Ë||ÇFö==
	`PENDING_BYTE_PAGE
(pBt) ){

3592 
nFö
--;

3595  
nFö
;

3596 
	}
}

3606 
	$sqlôe3BåìIn¸Vacuum
(
Båì
 *
p
){

3607 
rc
;

3608 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3610 
	`sqlôe3BåìE¡î
(
p
);

3611 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 && 
p
->
öTøns
==TRANS_WRITE );

3612 if–!
pBt
->
autoVacuum
 ){

3613 
rc
 = 
SQLITE_DONE
;

3615 
Pgno
 
nOrig
 = 
	`båìPagecou¡
(
pBt
);

3616 
Pgno
 
nFªe
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3617 
Pgno
 
nFö
 = 
	`föÆDbSize
(
pBt
, 
nOrig
, 
nFªe
);

3619 if–
nOrig
<
nFö
 ){

3620 
rc
 = 
SQLITE_CORRUPT_BKPT
;

3621 }if–
nFªe
>0 ){

3622 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3623 if–
rc
==
SQLITE_OK
 ){

3624 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

3625 
rc
 = 
	`ö¸VacuumSãp
(
pBt
, 
nFö
, 
nOrig
, 0);

3627 if–
rc
==
SQLITE_OK
 ){

3628 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

3629 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[28],ÖBt->
nPage
);

3632 
rc
 = 
SQLITE_DONE
;

3635 
	`sqlôe3BåìLóve
(
p
);

3636  
rc
;

3637 
	}
}

3648 
	$autoVacuumCommô
(
BtSh¨ed
 *
pBt
){

3649 
rc
 = 
SQLITE_OK
;

3650 
Pagî
 *
pPagî
 = 
pBt
->pPager;

3651 
	`VVA_ONLY
–
nRef
 = 
	`sqlôe3PagîRefcou¡
(
pPagî
); )

3653 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

3654 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

3655 
	`as£π
(
pBt
->
autoVacuum
);

3656 if–!
pBt
->
ö¸Vacuum
 ){

3657 
Pgno
 
nFö
;

3658 
Pgno
 
nFªe
;

3659 
Pgno
 
iFªe
;

3660 
Pgno
 
nOrig
;

3662 
nOrig
 = 
	`båìPagecou¡
(
pBt
);

3663 if–
	`PTRMAP_ISPAGE
(
pBt
, 
nOrig
Ë||ÇOrig==
	`PENDING_BYTE_PAGE
(pBt) ){

3668  
SQLITE_CORRUPT_BKPT
;

3671 
nFªe
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]);

3672 
nFö
 = 
	`föÆDbSize
(
pBt
, 
nOrig
, 
nFªe
);

3673 if–
nFö
>
nOrig
 )  
SQLITE_CORRUPT_BKPT
;

3674 if–
nFö
<
nOrig
 ){

3675 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3677 
iFªe
=
nOrig
; iFªe>
nFö
 && 
rc
==
SQLITE_OK
; iFree--){

3678 
rc
 = 
	`ö¸VacuumSãp
(
pBt
, 
nFö
, 
iFªe
, 1);

3680 if–(
rc
==
SQLITE_DONE
 ||Ñc==
SQLITE_OK
Ë&& 
nFªe
>0 ){

3681 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

3682 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[32], 0);

3683 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[36], 0);

3684 
	`put4byã
(&
pBt
->
pPage1
->
aD©a
[28], 
nFö
);

3685 
pBt
->
bDoTrunˇã
 = 1;

3686 
pBt
->
nPage
 = 
nFö
;

3688 if–
rc
!=
SQLITE_OK
 ){

3689 
	`sqlôe3PagîRﬁlback
(
pPagî
);

3693 
	`as£π
–
nRef
>=
	`sqlôe3PagîRefcou¡
(
pPagî
) );

3694  
rc
;

3695 
	}
}

3698 
	#£tChûdPåm≠s
(
x
Ë
SQLITE_OK


	)

3727 
	$sqlôe3BåìCommôPha£O√
(
Båì
 *
p
, c⁄° *
zMa°î
){

3728 
rc
 = 
SQLITE_OK
;

3729 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3730 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3731 
	`sqlôe3BåìE¡î
(
p
);

3732 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3733 if–
pBt
->
autoVacuum
 ){

3734 
rc
 = 
	`autoVacuumCommô
(
pBt
);

3735 if–
rc
!=
SQLITE_OK
 ){

3736 
	`sqlôe3BåìLóve
(
p
);

3737  
rc
;

3740 if–
pBt
->
bDoTrunˇã
 ){

3741 
	`sqlôe3PagîTrunˇãImage
(
pBt
->
pPagî
,ÖBt->
nPage
);

3744 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pBt
->
pPagî
, 
zMa°î
, 0);

3745 
	`sqlôe3BåìLóve
(
p
);

3747  
rc
;

3748 
	}
}

3754 
	$båìEndTønß˘i⁄
(
Båì
 *
p
){

3755 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3756 
sqlôe3
 *
db
 = 
p
->db;

3757 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

3759 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


3760 
pBt
->
bDoTrunˇã
 = 0;

3762 if–
p
->
öTøns
>
TRANS_NONE
 && 
db
->
nVdbeRód
>1 ){

3766 
	`downgødeAŒSh¨edCacheTabÀLocks
(
p
);

3767 
p
->
öTøns
 = 
TRANS_READ
;

3773 if–
p
->
öTøns
!=
TRANS_NONE
 ){

3774 
	`˛órAŒSh¨edCacheTabÀLocks
(
p
);

3775 
pBt
->
nTønß˘i⁄
--;

3776 if–0==
pBt
->
nTønß˘i⁄
 ){

3777 
pBt
->
öTønß˘i⁄
 = 
TRANS_NONE
;

3783 
p
->
öTøns
 = 
TRANS_NONE
;

3784 
	`u∆ockBåìIfUnu£d
(
pBt
);

3787 
	`båìI¡egrôy
(
p
);

3788 
	}
}

3816 
	$sqlôe3BåìCommôPha£Two
(
Båì
 *
p
, 
bCÀ™up
){

3818 if–
p
->
öTøns
==
TRANS_NONE
 )  
SQLITE_OK
;

3819 
	`sqlôe3BåìE¡î
(
p
);

3820 
	`båìI¡egrôy
(
p
);

3825 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3826 
rc
;

3827 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3828 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

3829 
	`as£π
–
pBt
->
nTønß˘i⁄
>0 );

3830 
rc
 = 
	`sqlôe3PagîCommôPha£Two
(
pBt
->
pPagî
);

3831 if–
rc
!=
SQLITE_OK
 && 
bCÀ™up
==0 ){

3832 
	`sqlôe3BåìLóve
(
p
);

3833  
rc
;

3835 
p
->
iD©aVîsi⁄
--;

3836 
pBt
->
öTønß˘i⁄
 = 
TRANS_READ
;

3837 
	`båìCÀ¨HasC⁄ã¡
(
pBt
);

3840 
	`båìEndTønß˘i⁄
(
p
);

3841 
	`sqlôe3BåìLóve
(
p
);

3842  
SQLITE_OK
;

3843 
	}
}

3848 
	$sqlôe3BåìCommô
(
Båì
 *
p
){

3849 
rc
;

3850 
	`sqlôe3BåìE¡î
(
p
);

3851 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
p
, 0);

3852 if–
rc
==
SQLITE_OK
 ){

3853 
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
p
, 0);

3855 
	`sqlôe3BåìLóve
(
p
);

3856  
rc
;

3857 
	}
}

3885 
	$sqlôe3BåìTrùAŒCurs‹s
(
Båì
 *
pBåì
, 
îrCode
, 
wrôeO∆y
){

3886 
BtCurs‹
 *
p
;

3887 
rc
 = 
SQLITE_OK
;

3889 
	`as£π
–(
wrôeO∆y
==0 || wrôeO∆y==1Ë&& 
BTCF_WrôeFœg
==1 );

3890 if–
pBåì
 ){

3891 
	`sqlôe3BåìE¡î
(
pBåì
);

3892 
p
=
pBåì
->
pBt
->
pCurs‹
;Ö;Öı->
pNext
){

3893 
i
;

3894 if–
wrôeO∆y
 && (
p
->
curFœgs
 & 
BTCF_WrôeFœg
)==0 ){

3895 if–
p
->
eSèã
==
CURSOR_VALID
 ||Ö->eSèã==
CURSOR_SKIPNEXT
 ){

3896 
rc
 = 
	`ßveCurs‹Posôi⁄
(
p
);

3897 if–
rc
!=
SQLITE_OK
 ){

3898 ()
	`sqlôe3BåìTrùAŒCurs‹s
(
pBåì
, 
rc
, 0);

3903 
	`sqlôe3BåìCÀ¨Curs‹
(
p
);

3904 
p
->
eSèã
 = 
CURSOR_FAULT
;

3905 
p
->
skùNext
 = 
îrCode
;

3907 
i
=0; i<=
p
->
iPage
; i++){

3908 
	`ªÀa£Page
(
p
->
≠Page
[
i
]);

3909 
p
->
≠Page
[
i
] = 0;

3912 
	`sqlôe3BåìLóve
(
pBåì
);

3914  
rc
;

3915 
	}
}

3928 
	$sqlôe3BåìRﬁlback
(
Båì
 *
p
, 
åùCode
, 
wrôeO∆y
){

3929 
rc
;

3930 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

3931 
MemPage
 *
pPage1
;

3933 
	`as£π
–
wrôeO∆y
==1 || writeOnly==0 );

3934 
	`as£π
–
åùCode
==
SQLITE_ABORT_ROLLBACK
 ||ÅrùCode==
SQLITE_OK
 );

3935 
	`sqlôe3BåìE¡î
(
p
);

3936 if–
åùCode
==
SQLITE_OK
 ){

3937 
rc
 = 
åùCode
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

3938 if–
rc
 ) 
wrôeO∆y
 = 0;

3940 
rc
 = 
SQLITE_OK
;

3942 if–
åùCode
 ){

3943 
rc2
 = 
	`sqlôe3BåìTrùAŒCurs‹s
(
p
, 
åùCode
, 
wrôeO∆y
);

3944 
	`as£π
–
rc
==
SQLITE_OK
 || (
wrôeO∆y
==0 && 
rc2
==SQLITE_OK) );

3945 if–
rc2
!=
SQLITE_OK
 ) 
rc
 =Ñc2;

3947 
	`båìI¡egrôy
(
p
);

3949 if–
p
->
öTøns
==
TRANS_WRITE
 ){

3950 
rc2
;

3952 
	`as£π
–
TRANS_WRITE
==
pBt
->
öTønß˘i⁄
 );

3953 
rc2
 = 
	`sqlôe3PagîRﬁlback
(
pBt
->
pPagî
);

3954 if–
rc2
!=
SQLITE_OK
 ){

3955 
rc
 = 
rc2
;

3961 if–
	`båìGëPage
(
pBt
, 1, &
pPage1
, 0)==
SQLITE_OK
 ){

3962 
nPage
 = 
	`gë4byã
(28+(
u8
*)
pPage1
->
aD©a
);

3963 
	`ã°ˇ£
–
nPage
==0 );

3964 if–
nPage
==0 ) 
	`sqlôe3PagîPagecou¡
(
pBt
->
pPagî
, &nPage);

3965 
	`ã°ˇ£
–
pBt
->
nPage
!=nPage );

3966 
pBt
->
nPage
 =ÇPage;

3967 
	`ªÀa£Page
(
pPage1
);

3969 
	`as£π
–
	`cou¡VÆidCurs‹s
(
pBt
, 1)==0 );

3970 
pBt
->
öTønß˘i⁄
 = 
TRANS_READ
;

3971 
	`båìCÀ¨HasC⁄ã¡
(
pBt
);

3974 
	`båìEndTønß˘i⁄
(
p
);

3975 
	`sqlôe3BåìLóve
(
p
);

3976  
rc
;

3977 
	}
}

3997 
	$sqlôe3BåìBegöStmt
(
Båì
 *
p
, 
iSèãmít
){

3998 
rc
;

3999 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4000 
	`sqlôe3BåìE¡î
(
p
);

4001 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

4002 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

4003 
	`as£π
–
iSèãmít
>0 );

4004 
	`as£π
–
iSèãmít
>
p
->
db
->
nSavïoöt
 );

4005 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

4011 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pBt
->
pPagî
, 
iSèãmít
);

4012 
	`sqlôe3BåìLóve
(
p
);

4013  
rc
;

4014 
	}
}

4028 
	$sqlôe3BåìSavïoöt
(
Båì
 *
p
, 
›
, 
iSavïoöt
){

4029 
rc
 = 
SQLITE_OK
;

4030 if–
p
 &&Ö->
öTøns
==
TRANS_WRITE
 ){

4031 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4032 
	`as£π
–
›
==
SAVEPOINT_RELEASE
 || op==
SAVEPOINT_ROLLBACK
 );

4033 
	`as£π
–
iSavïoöt
>=0 || (iSavïoöt==-1 && 
›
==
SAVEPOINT_ROLLBACK
) );

4034 
	`sqlôe3BåìE¡î
(
p
);

4035 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pBt
->
pPagî
, 
›
, 
iSavïoöt
);

4036 if–
rc
==
SQLITE_OK
 ){

4037 if–
iSavïoöt
<0 && (
pBt
->
btsFœgs
 & 
BTS_INITIALLY_EMPTY
)!=0 ){

4038 
pBt
->
nPage
 = 0;

4040 
rc
 = 
	`√wD©aba£
(
pBt
);

4041 
pBt
->
nPage
 = 
	`gë4byã
(28 +ÖBt->
pPage1
->
aD©a
);

4046 
	`as£π
–
pBt
->
nPage
>0 );

4048 
	`sqlôe3BåìLóve
(
p
);

4050  
rc
;

4051 
	}
}

4095 
	$båìCurs‹
(

4096 
Båì
 *
p
,

4097 
iTabÀ
,

4098 
wrFœg
,

4099 
KeyInfo
 *
pKeyInfo
,

4100 
BtCurs‹
 *
pCur


4102 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

4103 
BtCurs‹
 *
pX
;

4105 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

4106 
	`as£π
–
wrFœg
==0

4107 || 
wrFœg
==
BTREE_WRCSR


4108 || 
wrFœg
==(
BTREE_WRCSR
|
BTREE_FORDELETE
)

4115 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
iTabÀ
, 
pKeyInfo
!=0, (
wrFœg
?2:1)) );

4116 
	`as£π
–
wrFœg
==0 || !
	`hasRódC⁄Êi˘s
(
p
, 
iTabÀ
) );

4119 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 );

4120 
	`as£π
–
wrFœg
==0 || 
p
->
öTøns
==
TRANS_WRITE
 );

4121 
	`as£π
–
pBt
->
pPage1
 &&ÖBt->pPage1->
aD©a
 );

4122 
	`as£π
–
wrFœg
==0 || (
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

4124 if–
wrFœg
 ){

4125 
	`ÆloˇãTempS∑˚
(
pBt
);

4126 if–
pBt
->
pTmpS∑˚
==0 )  
SQLITE_NOMEM_BKPT
;

4128 if–
iTabÀ
==1 && 
	`båìPagecou¡
(
pBt
)==0 ){

4129 
	`as£π
–
wrFœg
==0 );

4130 
iTabÀ
 = 0;

4135 
pCur
->
pgnoRoŸ
 = (
Pgno
)
iTabÀ
;

4136 
pCur
->
iPage
 = -1;

4137 
pCur
->
pKeyInfo
 =ÖKeyInfo;

4138 
pCur
->
pBåì
 = 
p
;

4139 
pCur
->
pBt
 =ÖBt;

4140 
pCur
->
curFœgs
 = 
wrFœg
 ? 
BTCF_WrôeFœg
 : 0;

4141 
pCur
->
curPagîFœgs
 = 
wrFœg
 ? 0 : 
PAGER_GET_READONLY
;

4144 
pX
=
pBt
->
pCurs‹
;ÖX;ÖXıX->
pNext
){

4145 if–
pX
->
pgnoRoŸ
==(
Pgno
)
iTabÀ
 ){

4146 
pX
->
curFœgs
 |
BTCF_Mu…ùÀ
;

4147 
pCur
->
curFœgs
 |
BTCF_Mu…ùÀ
;

4150 
pCur
->
pNext
 = 
pBt
->
pCurs‹
;

4151 
pBt
->
pCurs‹
 = 
pCur
;

4152 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4153  
SQLITE_OK
;

4154 
	}
}

4155 
	$sqlôe3BåìCurs‹
(

4156 
Båì
 *
p
,

4157 
iTabÀ
,

4158 
wrFœg
,

4159 
KeyInfo
 *
pKeyInfo
,

4160 
BtCurs‹
 *
pCur


4162 
rc
;

4163 if–
iTabÀ
<1 ){

4164 
rc
 = 
SQLITE_CORRUPT_BKPT
;

4166 
	`sqlôe3BåìE¡î
(
p
);

4167 
rc
 = 
	`båìCurs‹
(
p
, 
iTabÀ
, 
wrFœg
, 
pKeyInfo
, 
pCur
);

4168 
	`sqlôe3BåìLóve
(
p
);

4170  
rc
;

4171 
	}
}

4181 
	$sqlôe3BåìCurs‹Size
(){

4182  
	`ROUND8
((
BtCurs‹
));

4183 
	}
}

4193 
	$sqlôe3BåìCurs‹Zîo
(
BtCurs‹
 *
p
){

4194 
	`mem£t
(
p
, 0, 
	`off£tof
(
BtCurs‹
, 
iPage
));

4195 
	}
}

4201 
	$sqlôe3BåìClo£Curs‹
(
BtCurs‹
 *
pCur
){

4202 
Båì
 *
pBåì
 = 
pCur
->pBtree;

4203 if–
pBåì
 ){

4204 
i
;

4205 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4206 
	`sqlôe3BåìE¡î
(
pBåì
);

4207 
	`sqlôe3BåìCÀ¨Curs‹
(
pCur
);

4208 
	`as£π
–
pBt
->
pCurs‹
!=0 );

4209 if–
pBt
->
pCurs‹
==
pCur
 ){

4210 
pBt
->
pCurs‹
 = 
pCur
->
pNext
;

4212 
BtCurs‹
 *
pPªv
 = 
pBt
->
pCurs‹
;

4214 if–
pPªv
->
pNext
==
pCur
 ){

4215 
pPªv
->
pNext
 = 
pCur
->pNext;

4218 
pPªv
 =ÖPªv->
pNext
;

4219 } 
	`ALWAYS
(
pPªv
) );

4221 
i
=0; i<=
pCur
->
iPage
; i++){

4222 
	`ªÀa£Page
(
pCur
->
≠Page
[
i
]);

4224 
	`u∆ockBåìIfUnu£d
(
pBt
);

4225 
	`sqlôe3_‰ì
(
pCur
->
aOvîÊow
);

4227 
	`sqlôe3BåìLóve
(
pBåì
);

4229  
SQLITE_OK
;

4230 
	}
}

4240 #i‚de‡
NDEBUG


4241 
	$as£πCñlInfo
(
BtCurs‹
 *
pCur
){

4242 
CñlInfo
 
öfo
;

4243 
iPage
 = 
pCur
->iPage;

4244 
	`mem£t
(&
öfo
, 0, (info));

4245 
	`båìP¨£Cñl
(
pCur
->
≠Page
[
iPage
],ÖCur->
aiIdx
[iPage], &
öfo
);

4246 
	`as£π
–
CORRUPT_DB
 || 
	`memcmp
(&
öfo
, &
pCur
->info, (info))==0 );

4247 
	}
}

4249 
	#as£πCñlInfo
(
x
)

	)

4251 
SQLITE_NOINLINE
 
	$gëCñlInfo
(
BtCurs‹
 *
pCur
){

4252 if–
pCur
->
öfo
.
nSize
==0 ){

4253 
iPage
 = 
pCur
->iPage;

4254 
pCur
->
curFœgs
 |
BTCF_VÆidNKey
;

4255 
	`båìP¨£Cñl
(
pCur
->
≠Page
[
iPage
],pCur->
aiIdx
[iPage],&pCur->
öfo
);

4257 
	`as£πCñlInfo
(
pCur
);

4259 
	}
}

4261 #i‚de‡
NDEBUG


4267 
	$sqlôe3BåìCurs‹IsVÆid
(
BtCurs‹
 *
pCur
){

4268  
pCur
 &&ÖCur->
eSèã
==
CURSOR_VALID
;

4269 
	}
}

4278 
i64
 
	$sqlôe3BåìI¡egîKey
(
BtCurs‹
 *
pCur
){

4279 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4280 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4281 
	`as£π
–
pCur
->
curI¡Key
 );

4282 
	`gëCñlInfo
(
pCur
);

4283  
pCur
->
öfo
.
nKey
;

4284 
	}
}

4295 
u32
 
	$sqlôe3BåìPaylﬂdSize
(
BtCurs‹
 *
pCur
){

4296 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4297 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4298 
	`gëCñlInfo
(
pCur
);

4299  
pCur
->
öfo
.
nPaylﬂd
;

4300 
	}
}

4321 
	$gëOvîÊowPage
(

4322 
BtSh¨ed
 *
pBt
,

4323 
Pgno
 
ovÊ
,

4324 
MemPage
 **
µPage
,

4325 
Pgno
 *
pPgnoNext


4327 
Pgno
 
√xt
 = 0;

4328 
MemPage
 *
pPage
 = 0;

4329 
rc
 = 
SQLITE_OK
;

4331 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

4332 
	`as£π
(
pPgnoNext
);

4334 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


4341 if–
pBt
->
autoVacuum
 ){

4342 
Pgno
 
pgno
;

4343 
Pgno
 
iGuess
 = 
ovÊ
+1;

4344 
u8
 
eTy≥
;

4346  
	`PTRMAP_ISPAGE
(
pBt
, 
iGuess
Ë|| iGuess==
	`PENDING_BYTE_PAGE
(pBt) ){

4347 
iGuess
++;

4350 if–
iGuess
<=
	`båìPagecou¡
(
pBt
) ){

4351 
rc
 = 
	`±rm≠Gë
(
pBt
, 
iGuess
, &
eTy≥
, &
pgno
);

4352 if–
rc
==
SQLITE_OK
 && 
eTy≥
==
PTRMAP_OVERFLOW2
 && 
pgno
==
ovÊ
 ){

4353 
√xt
 = 
iGuess
;

4354 
rc
 = 
SQLITE_DONE
;

4360 
	`as£π
–
√xt
==0 || 
rc
==
SQLITE_DONE
 );

4361 if–
rc
==
SQLITE_OK
 ){

4362 
rc
 = 
	`båìGëPage
(
pBt
, 
ovÊ
, &
pPage
, (
µPage
==0Ë? 
PAGER_GET_READONLY
 : 0);

4363 
	`as£π
–
rc
==
SQLITE_OK
 || 
pPage
==0 );

4364 if–
rc
==
SQLITE_OK
 ){

4365 
√xt
 = 
	`gë4byã
(
pPage
->
aD©a
);

4369 *
pPgnoNext
 = 
√xt
;

4370 if–
µPage
 ){

4371 *
µPage
 = 
pPage
;

4373 
	`ªÀa£Page
(
pPage
);

4375  (
rc
==
SQLITE_DONE
 ? 
SQLITE_OK
 :Ñc);

4376 
	}
}

4389 
	$c›yPaylﬂd
(

4390 *
pPaylﬂd
,

4391 *
pBuf
,

4392 
nByã
,

4393 
eOp
,

4394 
DbPage
 *
pDbPage


4396 if–
eOp
 ){

4398 
rc
 = 
	`sqlôe3PagîWrôe
(
pDbPage
);

4399 if–
rc
!=
SQLITE_OK
 ){

4400  
rc
;

4402 
	`mem˝y
(
pPaylﬂd
, 
pBuf
, 
nByã
);

4405 
	`mem˝y
(
pBuf
, 
pPaylﬂd
, 
nByã
);

4407  
SQLITE_OK
;

4408 
	}
}

4440 
	$ac˚ssPaylﬂd
(

4441 
BtCurs‹
 *
pCur
,

4442 
u32
 
off£t
,

4443 
u32
 
amt
,

4444 *
pBuf
,

4445 
eOp


4447 *
aPaylﬂd
;

4448 
rc
 = 
SQLITE_OK
;

4449 
iIdx
 = 0;

4450 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

4451 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4452 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4453 * c⁄° 
pBufSèπ
 = 
pBuf
;

4454 
bEnd
;

4457 
	`as£π
–
pPage
 );

4458 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4459 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<
pPage
->
nCñl
 );

4460 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4461 
	`as£π
–
eOp
!=2 || 
off£t
==0 );

4463 
	`gëCñlInfo
(
pCur
);

4464 
aPaylﬂd
 = 
pCur
->
öfo
.
pPaylﬂd
;

4465 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4466 
bEnd
 = 
off£t
+
amt
==
pCur
->
öfo
.
nPaylﬂd
;

4468 
	`as£π
–
off£t
+
amt
 <
pCur
->
öfo
.
nPaylﬂd
 );

4470 
	`as£π
–
aPaylﬂd
 > 
pPage
->
aD©a
 );

4471 if–(
u±r
)(
aPaylﬂd
 - 
pPage
->
aD©a
Ë> (
pBt
->
ußbÀSize
 - 
pCur
->
öfo
.
nLoˇl
) ){

4477  
SQLITE_CORRUPT_BKPT
;

4481 if–
off£t
<
pCur
->
öfo
.
nLoˇl
 ){

4482 
a
 = 
amt
;

4483 if–
a
+
off£t
>
pCur
->
öfo
.
nLoˇl
 ){

4484 
a
 = 
pCur
->
öfo
.
nLoˇl
 - 
off£t
;

4486 
rc
 = 
	`c›yPaylﬂd
(&
aPaylﬂd
[
off£t
], 
pBuf
, 
a
, (
eOp
 & 0x01), 
pPage
->
pDbPage
);

4487 
off£t
 = 0;

4488 
pBuf
 +
a
;

4489 
amt
 -
a
;

4491 
off£t
 -
pCur
->
öfo
.
nLoˇl
;

4495 if–
rc
==
SQLITE_OK
 && 
amt
>0 ){

4496 c⁄° 
u32
 
ovÊSize
 = 
pBt
->
ußbÀSize
 - 4;

4497 
Pgno
 
√xtPage
;

4499 
√xtPage
 = 
	`gë4byã
(&
aPaylﬂd
[
pCur
->
öfo
.
nLoˇl
]);

4509 if–
eOp
!=2 && (
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)==0 ){

4510 
nOvÊ
 = (
pCur
->
öfo
.
nPaylﬂd
-pCur->öfo.
nLoˇl
+
ovÊSize
-1)/ovflSize;

4511 if–
nOvÊ
>
pCur
->
nOvÊAŒoc
 ){

4512 
Pgno
 *
aNew
 = (Pgno*)
	`sqlôe3RóŒoc
(

4513 
pCur
->
aOvîÊow
, 
nOvÊ
*2*(
Pgno
)

4515 if–
aNew
==0 ){

4516 
rc
 = 
SQLITE_NOMEM_BKPT
;

4518 
pCur
->
nOvÊAŒoc
 = 
nOvÊ
*2;

4519 
pCur
->
aOvîÊow
 = 
aNew
;

4522 if–
rc
==
SQLITE_OK
 ){

4523 
	`mem£t
(
pCur
->
aOvîÊow
, 0, 
nOvÊ
*(
Pgno
));

4524 
pCur
->
curFœgs
 |
BTCF_VÆidOvÊ
;

4532 if–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)!=0

4533 && 
pCur
->
aOvîÊow
[
off£t
/
ovÊSize
]

4535 
iIdx
 = (
off£t
/
ovÊSize
);

4536 
√xtPage
 = 
pCur
->
aOvîÊow
[
iIdx
];

4537 
off£t
 = (off£t%
ovÊSize
);

4540  ; 
rc
==
SQLITE_OK
 && 
amt
>0 && 
√xtPage
; 
iIdx
++){

4543 if–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)!=0 ){

4544 
	`as£π
–
pCur
->
aOvîÊow
[
iIdx
]==0

4545 || 
pCur
->
aOvîÊow
[
iIdx
]==
√xtPage


4546 || 
CORRUPT_DB
 );

4547 
pCur
->
aOvîÊow
[
iIdx
] = 
√xtPage
;

4550 if–
off£t
>=
ovÊSize
 ){

4560 
	`as£π
–
eOp
!=2 );

4561 
	`as£π
–
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
 );

4562 
	`as£π
–
pCur
->
pBåì
->
db
==
pBt
->db );

4563 if–
pCur
->
aOvîÊow
[
iIdx
+1] ){

4564 
√xtPage
 = 
pCur
->
aOvîÊow
[
iIdx
+1];

4566 
rc
 = 
	`gëOvîÊowPage
(
pBt
, 
√xtPage
, 0, &nextPage);

4568 
off£t
 -
ovÊSize
;

4573 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4574 
sqlôe3_fûe
 *
fd
;

4576 
a
 = 
amt
;

4577 if–
a
 + 
off£t
 > 
ovÊSize
 ){

4578 
a
 = 
ovÊSize
 - 
off£t
;

4581 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


4596 if–(
eOp
&0x01)==0

4597 && 
off£t
==0

4598 && (
bEnd
 || 
a
==
ovÊSize
)

4599 && 
pBt
->
öTønß˘i⁄
==
TRANS_READ


4600 && (
fd
 = 
	`sqlôe3PagîFûe
(
pBt
->
pPagî
))->
pMëhods


4601 && 
pBt
->
pPage1
->
aD©a
[19]==0x01

4602 && &
pBuf
[-4]>=
pBufSèπ


4604 
u8
 
aSave
[4];

4605 
u8
 *
aWrôe
 = &
pBuf
[-4];

4606 
	`as£π
–
aWrôe
>=
pBufSèπ
 );

4607 
	`mem˝y
(
aSave
, 
aWrôe
, 4);

4608 
rc
 = 
	`sqlôe3OsRód
(
fd
, 
aWrôe
, 
a
+4, (
i64
)
pBt
->
∑geSize
*(
√xtPage
-1));

4609 
√xtPage
 = 
	`gë4byã
(
aWrôe
);

4610 
	`mem˝y
(
aWrôe
, 
aSave
, 4);

4615 
DbPage
 *
pDbPage
;

4616 
rc
 = 
	`sqlôe3PagîGë
(
pBt
->
pPagî
, 
√xtPage
, &
pDbPage
,

4617 ((
eOp
&0x01)==0 ? 
PAGER_GET_READONLY
 : 0)

4619 if–
rc
==
SQLITE_OK
 ){

4620 
aPaylﬂd
 = 
	`sqlôe3PagîGëD©a
(
pDbPage
);

4621 
√xtPage
 = 
	`gë4byã
(
aPaylﬂd
);

4622 
rc
 = 
	`c›yPaylﬂd
(&
aPaylﬂd
[
off£t
+4], 
pBuf
, 
a
, (
eOp
&0x01), 
pDbPage
);

4623 
	`sqlôe3PagîUƒef
(
pDbPage
);

4624 
off£t
 = 0;

4627 
amt
 -
a
;

4628 
pBuf
 +
a
;

4633 if–
rc
==
SQLITE_OK
 && 
amt
>0 ){

4634  
SQLITE_CORRUPT_BKPT
;

4636  
rc
;

4637 
	}
}

4651 
	$sqlôe3BåìKey
(
BtCurs‹
 *
pCur
, 
u32
 
off£t
, u32 
amt
, *
pBuf
){

4652 
	`as£π
–
	`curs‹HﬁdsMuãx
(
pCur
) );

4653 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4654 
	`as£π
–
pCur
->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage] );

4655 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4656  
	`ac˚ssPaylﬂd
(
pCur
, 
off£t
, 
amt
, (*)
pBuf
, 0);

4657 
	}
}

4668 
	$sqlôe3BåìD©a
(
BtCurs‹
 *
pCur
, 
u32
 
off£t
, u32 
amt
, *
pBuf
){

4669 
rc
;

4671 #i‚de‡
SQLITE_OMIT_INCRBLOB


4672 i‡–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

4673  
SQLITE_ABORT
;

4677 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4678 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

4679 if–
rc
==
SQLITE_OK
 ){

4680 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4681 
	`as£π
–
pCur
->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage] );

4682 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4683 
rc
 = 
	`ac˚ssPaylﬂd
(
pCur
, 
off£t
, 
amt
, 
pBuf
, 0);

4685  
rc
;

4686 
	}
}

4707 c⁄° *
	$„tchPaylﬂd
(

4708 
BtCurs‹
 *
pCur
,

4709 
u32
 *
pAmt


4711 
u32
 
amt
;

4712 
	`as£π
–
pCur
!=0 &&ÖCur->
iPage
>=0 &&ÖCur->
≠Page
[pCur->iPage]);

4713 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4714 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

4715 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4716 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

4717 
	`as£π
–
pCur
->
öfo
.
nSize
>0 );

4718 
	`as£π
–
pCur
->
öfo
.
pPaylﬂd
>pCur->
≠Page
[pCur->
iPage
]->
aD©a
 || 
CORRUPT_DB
 );

4719 
	`as£π
–
pCur
->
öfo
.
pPaylﬂd
<pCur->
≠Page
[pCur->
iPage
]->
aD©aEnd
 ||
CORRUPT_DB
);

4720 
amt
 = ()(
pCur
->
≠Page
[pCur->
iPage
]->
aD©aEnd
 -ÖCur->
öfo
.
pPaylﬂd
);

4721 if–
pCur
->
öfo
.
nLoˇl
<
amt
 )ámt =ÖCur->info.nLocal;

4722 *
pAmt
 = 
amt
;

4723  (*)
pCur
->
öfo
.
pPaylﬂd
;

4724 
	}
}

4741 c⁄° *
	$sqlôe3BåìPaylﬂdFëch
(
BtCurs‹
 *
pCur
, 
u32
 *
pAmt
){

4742  
	`„tchPaylﬂd
(
pCur
, 
pAmt
);

4743 
	}
}

4755 
	$moveToChûd
(
BtCurs‹
 *
pCur
, 
u32
 
√wPgno
){

4756 
BtSh¨ed
 *
pBt
 = 
pCur
->pBt;

4758 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4759 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4760 
	`as£π
–
pCur
->
iPage
<
BTCURSOR_MAX_DEPTH
 );

4761 
	`as£π
–
pCur
->
iPage
>=0 );

4762 if–
pCur
->
iPage
>=(
BTCURSOR_MAX_DEPTH
-1) ){

4763  
SQLITE_CORRUPT_BKPT
;

4765 
pCur
->
öfo
.
nSize
 = 0;

4766 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4767 
pCur
->
iPage
++;

4768 
pCur
->
aiIdx
[pCur->
iPage
] = 0;

4769  
	`gëAndInôPage
(
pBt
, 
√wPgno
, &
pCur
->
≠Page
[pCur->
iPage
],

4770 
pCur
,ÖCur->
curPagîFœgs
);

4771 
	}
}

4773 #i‡
SQLITE_DEBUG


4781 
	$as£πP¨ítIndex
(
MemPage
 *
pP¨ít
, 
iIdx
, 
Pgno
 
iChûd
){

4782 if–
CORRUPT_DB
 ) ;

4784 
	`as£π
–
iIdx
<=
pP¨ít
->
nCñl
 );

4785 if–
iIdx
==
pP¨ít
->
nCñl
 ){

4786 
	`as£π
–
	`gë4byã
(&
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8])==
iChûd
 );

4788 
	`as£π
–
	`gë4byã
(
	`födCñl
(
pP¨ít
, 
iIdx
))==
iChûd
 );

4790 
	}
}

4792 
	#as£πP¨ítIndex
(
x
,
y
,
z
)

	)

4803 
	$moveToP¨ít
(
BtCurs‹
 *
pCur
){

4804 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4805 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4806 
	`as£π
–
pCur
->
iPage
>0 );

4807 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
] );

4808 
	`as£πP¨ítIndex
(

4809 
pCur
->
≠Page
[pCur->
iPage
-1],

4810 
pCur
->
aiIdx
[pCur->
iPage
-1],

4811 
pCur
->
≠Page
[pCur->
iPage
]->
pgno


4813 
	`ã°ˇ£
–
pCur
->
aiIdx
[pCur->
iPage
-1] >ÖCur->
≠Page
[pCur->iPage-1]->
nCñl
 );

4814 
pCur
->
öfo
.
nSize
 = 0;

4815 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4816 
	`ªÀa£PageNŸNuŒ
(
pCur
->
≠Page
[pCur->
iPage
--]);

4817 
	}
}

4840 
	$moveToRoŸ
(
BtCurs‹
 *
pCur
){

4841 
MemPage
 *
pRoŸ
;

4842 
rc
 = 
SQLITE_OK
;

4844 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4845 
	`as£π
–
CURSOR_INVALID
 < 
CURSOR_REQUIRESEEK
 );

4846 
	`as£π
–
CURSOR_VALID
 < 
CURSOR_REQUIRESEEK
 );

4847 
	`as£π
–
CURSOR_FAULT
 > 
CURSOR_REQUIRESEEK
 );

4848 if–
pCur
->
eSèã
>=
CURSOR_REQUIRESEEK
 ){

4849 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

4850 
	`as£π
–
pCur
->
skùNext
!=
SQLITE_OK
 );

4851  
pCur
->
skùNext
;

4853 
	`sqlôe3BåìCÀ¨Curs‹
(
pCur
);

4856 if–
pCur
->
iPage
>=0 ){

4857  
pCur
->
iPage
 ){

4858 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]!=0 );

4859 
	`ªÀa£PageNŸNuŒ
(
pCur
->
≠Page
[pCur->
iPage
--]);

4861 }if–
pCur
->
pgnoRoŸ
==0 ){

4862 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4863  
SQLITE_OK
;

4865 
	`as£π
–
pCur
->
iPage
==(-1) );

4866 
rc
 = 
	`gëAndInôPage
(
pCur
->
pBåì
->
pBt
,ÖCur->
pgnoRoŸ
, &pCur->
≠Page
[0],

4867 0, 
pCur
->
curPagîFœgs
);

4868 if–
rc
!=
SQLITE_OK
 ){

4869 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4870  
rc
;

4872 
pCur
->
iPage
 = 0;

4873 
pCur
->
curI¡Key
 =ÖCur->
≠Page
[0]->
ötKey
;

4875 
pRoŸ
 = 
pCur
->
≠Page
[0];

4876 
	`as£π
–
pRoŸ
->
pgno
==
pCur
->
pgnoRoŸ
 );

4888 
	`as£π
–
pRoŸ
->
ötKey
==1 ||ÖRoot->intKey==0 );

4889 if–
pRoŸ
->
isInô
==0 || (
pCur
->
pKeyInfo
==0)!ıRoŸ->
ötKey
 ){

4890  
SQLITE_CORRUPT_BKPT
;

4893 
pCur
->
aiIdx
[0] = 0;

4894 
pCur
->
öfo
.
nSize
 = 0;

4895 
pCur
->
curFœgs
 &~(
BTCF_AtLa°
|
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

4897 if–
pRoŸ
->
nCñl
>0 ){

4898 
pCur
->
eSèã
 = 
CURSOR_VALID
;

4899 }if–!
pRoŸ
->
Àaf
 ){

4900 
Pgno
 
sub∑ge
;

4901 if–
pRoŸ
->
pgno
!=1 )  
SQLITE_CORRUPT_BKPT
;

4902 
sub∑ge
 = 
	`gë4byã
(&
pRoŸ
->
aD©a
[pRoŸ->
hdrOff£t
+8]);

4903 
pCur
->
eSèã
 = 
CURSOR_VALID
;

4904 
rc
 = 
	`moveToChûd
(
pCur
, 
sub∑ge
);

4906 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

4908  
rc
;

4909 
	}
}

4918 
	$moveToLe·mo°
(
BtCurs‹
 *
pCur
){

4919 
Pgno
 
pgno
;

4920 
rc
 = 
SQLITE_OK
;

4921 
MemPage
 *
pPage
;

4923 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4924 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4925  
rc
==
SQLITE_OK
 && !(
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
])->
Àaf
 ){

4926 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<
pPage
->
nCñl
 );

4927 
pgno
 = 
	`gë4byã
(
	`födCñl
(
pPage
, 
pCur
->
aiIdx
[pCur->
iPage
]));

4928 
rc
 = 
	`moveToChûd
(
pCur
, 
pgno
);

4930  
rc
;

4931 
	}
}

4943 
	$moveToRightmo°
(
BtCurs‹
 *
pCur
){

4944 
Pgno
 
pgno
;

4945 
rc
 = 
SQLITE_OK
;

4946 
MemPage
 *
pPage
 = 0;

4948 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4949 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

4950  !(
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
])->
Àaf
 ){

4951 
pgno
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

4952 
pCur
->
aiIdx
[pCur->
iPage
] = 
pPage
->
nCñl
;

4953 
rc
 = 
	`moveToChûd
(
pCur
, 
pgno
);

4954 if–
rc
 ) Ñc;

4956 
pCur
->
aiIdx
[pCur->
iPage
] = 
pPage
->
nCñl
-1;

4957 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

4958 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_VÆidNKey
)==0 );

4959  
SQLITE_OK
;

4960 
	}
}

4966 
	$sqlôe3BåìFú°
(
BtCurs‹
 *
pCur
, *
pRes
){

4967 
rc
;

4969 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4970 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

4971 
rc
 = 
	`moveToRoŸ
(
pCur
);

4972 if–
rc
==
SQLITE_OK
 ){

4973 if–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

4974 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

4975 *
pRes
 = 1;

4977 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
nCñl
>0 );

4978 *
pRes
 = 0;

4979 
rc
 = 
	`moveToLe·mo°
(
pCur
);

4982  
rc
;

4983 
	}
}

4989 
	$sqlôe3BåìLa°
(
BtCurs‹
 *
pCur
, *
pRes
){

4990 
rc
;

4992 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

4993 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

4996 if–
CURSOR_VALID
==
pCur
->
eSèã
 && (pCur->
curFœgs
 & 
BTCF_AtLa°
)!=0 ){

4997 #ifde‡
SQLITE_DEBUG


5000 
ii
;

5001 
ii
=0; ii<
pCur
->
iPage
; ii++){

5002 
	`as£π
–
pCur
->
aiIdx
[
ii
]=ıCur->
≠Page
[ii]->
nCñl
 );

5004 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]=ıCur->
≠Page
[pCur->iPage]->
nCñl
-1 );

5005 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
Àaf
 );

5007  
SQLITE_OK
;

5010 
rc
 = 
	`moveToRoŸ
(
pCur
);

5011 if–
rc
==
SQLITE_OK
 ){

5012 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5013 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

5014 *
pRes
 = 1;

5016 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

5017 *
pRes
 = 0;

5018 
rc
 = 
	`moveToRightmo°
(
pCur
);

5019 if–
rc
==
SQLITE_OK
 ){

5020 
pCur
->
curFœgs
 |
BTCF_AtLa°
;

5022 
pCur
->
curFœgs
 &~
BTCF_AtLa°
;

5027  
rc
;

5028 
	}
}

5060 
	$sqlôe3BåìMovëoU≈acked
(

5061 
BtCurs‹
 *
pCur
,

5062 
U≈ackedRec‹d
 *
pIdxKey
,

5063 
i64
 
ötKey
,

5064 
büsRight
,

5065 *
pRes


5067 
rc
;

5068 
Rec‹dCom∑ª
 
xRec‹dCom∑ª
;

5070 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5071 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCur
->
pBåì
->
db
->
muãx
) );

5072 
	`as£π
–
pRes
 );

5073 
	`as£π
–(
pIdxKey
==0)==(
pCur
->
pKeyInfo
==0) );

5074 
	`as£π
–
pCur
->
eSèã
!=
CURSOR_VALID
 || (
pIdxKey
==0)==’Cur->
curI¡Key
!=0) );

5078 if–
pIdxKey
==0

5079 && 
pCur
->
eSèã
==
CURSOR_VALID
 && (pCur->
curFœgs
 & 
BTCF_VÆidNKey
)!=0

5081 if–
pCur
->
öfo
.
nKey
==
ötKey
 ){

5082 *
pRes
 = 0;

5083  
SQLITE_OK
;

5085 if–(
pCur
->
curFœgs
 & 
BTCF_AtLa°
)!=0 &&ÖCur->
öfo
.
nKey
<
ötKey
 ){

5086 *
pRes
 = -1;

5087  
SQLITE_OK
;

5091 if–
pIdxKey
 ){

5092 
xRec‹dCom∑ª
 = 
	`sqlôe3VdbeFödCom∑ª
(
pIdxKey
);

5093 
pIdxKey
->
îrCode
 = 0;

5094 
	`as£π
–
pIdxKey
->
deÁu…_rc
==1

5095 || 
pIdxKey
->
deÁu…_rc
==0

5096 || 
pIdxKey
->
deÁu…_rc
==-1

5099 
xRec‹dCom∑ª
 = 0;

5102 
rc
 = 
	`moveToRoŸ
(
pCur
);

5103 if–
rc
 ){

5104  
rc
;

5106 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
] );

5107 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
isInô
 );

5108 
	`as£π
–
pCur
->
eSèã
==
CURSOR_INVALID
 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
>0 );

5109 if–
pCur
->
eSèã
==
CURSOR_INVALID
 ){

5110 *
pRes
 = -1;

5111 
	`as£π
–
pCur
->
pgnoRoŸ
==0 ||ÖCur->
≠Page
[pCur->
iPage
]->
nCñl
==0 );

5112  
SQLITE_OK
;

5114 
	`as£π
–
pCur
->
≠Page
[0]->
ötKey
=ıCur->
curI¡Key
 );

5115 
	`as£π
–
pCur
->
curI¡Key
 || 
pIdxKey
 );

5117 
lwr
, 
u¥
, 
idx
, 
c
;

5118 
Pgno
 
chldPg
;

5119 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5120 
u8
 *
pCñl
;

5128 
	`as£π
–
pPage
->
nCñl
>0 );

5129 
	`as£π
–
pPage
->
ötKey
==(
pIdxKey
==0) );

5130 
lwr
 = 0;

5131 
u¥
 = 
pPage
->
nCñl
-1;

5132 
	`as£π
–
büsRight
==0 || biasRight==1 );

5133 
idx
 = 
u¥
>>(1-
büsRight
);

5134 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5135 if–
xRec‹dCom∑ª
==0 ){

5137 
i64
 
nCñlKey
;

5138 
pCñl
 = 
	`födCñlPa°På
(
pPage
, 
idx
);

5139 if–
pPage
->
ötKeyLóf
 ){

5140  0x80 <*(
pCñl
++) ){

5141 if–
pCñl
>=
pPage
->
aD©aEnd
 )  
SQLITE_CORRUPT_BKPT
;

5144 
	`gëV¨öt
(
pCñl
, (
u64
*)&
nCñlKey
);

5145 if–
nCñlKey
<
ötKey
 ){

5146 
lwr
 = 
idx
+1;

5147 if–
lwr
>
u¥
 ){ 
c
 = -1; ; }

5148 }if–
nCñlKey
>
ötKey
 ){

5149 
u¥
 = 
idx
-1;

5150 if–
lwr
>
u¥
 ){ 
c
 = +1; ; }

5152 
	`as£π
–
nCñlKey
==
ötKey
 );

5153 
pCur
->
curFœgs
 |
BTCF_VÆidNKey
;

5154 
pCur
->
öfo
.
nKey
 = 
nCñlKey
;

5155 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5156 if–!
pPage
->
Àaf
 ){

5157 
lwr
 = 
idx
;

5158 
movëo_√xt_œyî
;

5160 *
pRes
 = 0;

5161 
rc
 = 
SQLITE_OK
;

5162 
movëo_föish
;

5165 
	`as£π
–
lwr
+
u¥
>=0 );

5166 
idx
 = (
lwr
+
u¥
)>>1;

5170 
nCñl
;

5171 
pCñl
 = 
	`födCñlPa°På
(
pPage
, 
idx
);

5181 
nCñl
 = 
pCñl
[0];

5182 if–
nCñl
<=
pPage
->
max1byãPaylﬂd
 ){

5186 
	`ã°ˇ£
–
pCñl
+
nCñl
+1==
pPage
->
aD©aEnd
 );

5187 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, (*)&
pCñl
[1], 
pIdxKey
);

5188 }if–!(
pCñl
[1] & 0x80)

5189 && (
nCñl
 = (“Cñl&0x7f)<<7Ë+ 
pCñl
[1])<=
pPage
->
maxLoˇl


5193 
	`ã°ˇ£
–
pCñl
+
nCñl
+2==
pPage
->
aD©aEnd
 );

5194 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, (*)&
pCñl
[2], 
pIdxKey
);

5205 *
pCñlKey
;

5206 
u8
 * c⁄° 
pCñlBody
 = 
pCñl
 - 
pPage
->
chûdPåSize
;

5207 
pPage
->
	`xP¨£Cñl
’Page, 
pCñlBody
, &
pCur
->
öfo
);

5208 
nCñl
 = ()
pCur
->
öfo
.
nKey
;

5209 
	`ã°ˇ£
–
nCñl
<0 );

5210 
	`ã°ˇ£
–
nCñl
==0 );

5211 
	`ã°ˇ£
–
nCñl
==1 );

5212 
	`ã°ˇ£
–
nCñl
==2 );

5213 if–
nCñl
<2 ){

5214 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5215 
movëo_föish
;

5217 
pCñlKey
 = 
	`sqlôe3MÆloc
–
nCñl
+18 );

5218 if–
pCñlKey
==0 ){

5219 
rc
 = 
SQLITE_NOMEM_BKPT
;

5220 
movëo_föish
;

5222 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5223 
rc
 = 
	`ac˚ssPaylﬂd
(
pCur
, 0, 
nCñl
, (*)
pCñlKey
, 2);

5224 if–
rc
 ){

5225 
	`sqlôe3_‰ì
(
pCñlKey
);

5226 
movëo_föish
;

5228 
c
 = 
	`xRec‹dCom∑ª
(
nCñl
, 
pCñlKey
, 
pIdxKey
);

5229 
	`sqlôe3_‰ì
(
pCñlKey
);

5231 
	`as£π
(

5232 (
pIdxKey
->
îrCode
!=
SQLITE_CORRUPT
 || 
c
==0)

5233 && (
pIdxKey
->
îrCode
!=
SQLITE_NOMEM
 || 
pCur
->
pBåì
->
db
->
mÆlocFaûed
)

5235 if–
c
<0 ){

5236 
lwr
 = 
idx
+1;

5237 }if–
c
>0 ){

5238 
u¥
 = 
idx
-1;

5240 
	`as£π
–
c
==0 );

5241 *
pRes
 = 0;

5242 
rc
 = 
SQLITE_OK
;

5243 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5244 if–
pIdxKey
->
îrCode
 ) 
rc
 = 
SQLITE_CORRUPT
;

5245 
movëo_föish
;

5247 if–
lwr
>
u¥
 ) ;

5248 
	`as£π
–
lwr
+
u¥
>=0 );

5249 
idx
 = (
lwr
+
u¥
)>>1;

5252 
	`as£π
–
lwr
==
u¥
+1 || (
pPage
->
ötKey
 && !pPage->
Àaf
) );

5253 
	`as£π
–
pPage
->
isInô
 );

5254 if–
pPage
->
Àaf
 ){

5255 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

5256 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
idx
;

5257 *
pRes
 = 
c
;

5258 
rc
 = 
SQLITE_OK
;

5259 
movëo_föish
;

5261 
movëo_√xt_œyî
:

5262 if–
lwr
>=
pPage
->
nCñl
 ){

5263 
chldPg
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

5265 
chldPg
 = 
	`gë4byã
(
	`födCñl
(
pPage
, 
lwr
));

5267 
pCur
->
aiIdx
[pCur->
iPage
] = (
u16
)
lwr
;

5268 
rc
 = 
	`moveToChûd
(
pCur
, 
chldPg
);

5269 if–
rc
 ) ;

5271 
movëo_föish
:

5272 
pCur
->
öfo
.
nSize
 = 0;

5273 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

5274  
rc
;

5275 
	}
}

5285 
	$sqlôe3BåìEof
(
BtCurs‹
 *
pCur
){

5290  (
CURSOR_VALID
!=
pCur
->
eSèã
);

5291 
	}
}

5314 
SQLITE_NOINLINE
 
	$båìNext
(
BtCurs‹
 *
pCur
, *
pRes
){

5315 
rc
;

5316 
idx
;

5317 
MemPage
 *
pPage
;

5319 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5320 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5321 
	`as£π
–*
pRes
==0 );

5322 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

5323 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_VÆidOvÊ
)==0 );

5324 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

5325 if–
rc
!=
SQLITE_OK
 ){

5326  
rc
;

5328 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5329 *
pRes
 = 1;

5330  
SQLITE_OK
;

5332 if–
pCur
->
skùNext
 ){

5333 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_SKIPNEXT
 );

5334 
pCur
->
eSèã
 = 
CURSOR_VALID
;

5335 if–
pCur
->
skùNext
>0 ){

5336 
pCur
->
skùNext
 = 0;

5337  
SQLITE_OK
;

5339 
pCur
->
skùNext
 = 0;

5343 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5344 
idx
 = ++
pCur
->
aiIdx
[pCur->
iPage
];

5345 
	`as£π
–
pPage
->
isInô
 );

5352 
	`ã°ˇ£
–
idx
>
pPage
->
nCñl
 );

5354 if–
idx
>=
pPage
->
nCñl
 ){

5355 if–!
pPage
->
Àaf
 ){

5356 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]));

5357 if–
rc
 ) Ñc;

5358  
	`moveToLe·mo°
(
pCur
);

5361 if–
pCur
->
iPage
==0 ){

5362 *
pRes
 = 1;

5363 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

5364  
SQLITE_OK
;

5366 
	`moveToP¨ít
(
pCur
);

5367 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5368 } 
pCur
->
aiIdx
[pCur->
iPage
]>=
pPage
->
nCñl
 );

5369 if–
pPage
->
ötKey
 ){

5370  
	`sqlôe3BåìNext
(
pCur
, 
pRes
);

5372  
SQLITE_OK
;

5375 if–
pPage
->
Àaf
 ){

5376  
SQLITE_OK
;

5378  
	`moveToLe·mo°
(
pCur
);

5380 
	}
}

5381 
	$sqlôe3BåìNext
(
BtCurs‹
 *
pCur
, *
pRes
){

5382 
MemPage
 *
pPage
;

5383 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5384 
	`as£π
–
pRes
!=0 );

5385 
	`as£π
–*
pRes
==0 || *pRes==1 );

5386 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5387 
pCur
->
öfo
.
nSize
 = 0;

5388 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
);

5389 *
pRes
 = 0;

5390 if–
pCur
->
eSèã
!=
CURSOR_VALID
 )  
	`båìNext
’Cur, 
pRes
);

5391 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5392 if–(++
pCur
->
aiIdx
[pCur->
iPage
])>=
pPage
->
nCñl
 ){

5393 
pCur
->
aiIdx
[pCur->
iPage
]--;

5394  
	`båìNext
(
pCur
, 
pRes
);

5396 if–
pPage
->
Àaf
 ){

5397  
SQLITE_OK
;

5399  
	`moveToLe·mo°
(
pCur
);

5401 
	}
}

5424 
SQLITE_NOINLINE
 
	$båìPªvious
(
BtCurs‹
 *
pCur
, *
pRes
){

5425 
rc
;

5426 
MemPage
 *
pPage
;

5428 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5429 
	`as£π
–
pRes
!=0 );

5430 
	`as£π
–*
pRes
==0 );

5431 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5432 
	`as£π
–(
pCur
->
curFœgs
 & (
BTCF_AtLa°
|
BTCF_VÆidOvÊ
|
BTCF_VÆidNKey
))==0 );

5433 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

5434 if–
pCur
->
eSèã
!=
CURSOR_VALID
 ){

5435 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pCur
);

5436 if–
rc
!=
SQLITE_OK
 ){

5437  
rc
;

5439 if–
CURSOR_INVALID
==
pCur
->
eSèã
 ){

5440 *
pRes
 = 1;

5441  
SQLITE_OK
;

5443 if–
pCur
->
skùNext
 ){

5444 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 ||ÖCur->eSèã==
CURSOR_SKIPNEXT
 );

5445 
pCur
->
eSèã
 = 
CURSOR_VALID
;

5446 if–
pCur
->
skùNext
<0 ){

5447 
pCur
->
skùNext
 = 0;

5448  
SQLITE_OK
;

5450 
pCur
->
skùNext
 = 0;

5454 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5455 
	`as£π
–
pPage
->
isInô
 );

5456 if–!
pPage
->
Àaf
 ){

5457 
idx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

5458 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(
	`födCñl
(
pPage
, 
idx
)));

5459 if–
rc
 ) Ñc;

5460 
rc
 = 
	`moveToRightmo°
(
pCur
);

5462  
pCur
->
aiIdx
[pCur->
iPage
]==0 ){

5463 if–
pCur
->
iPage
==0 ){

5464 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

5465 *
pRes
 = 1;

5466  
SQLITE_OK
;

5468 
	`moveToP¨ít
(
pCur
);

5470 
	`as£π
–
pCur
->
öfo
.
nSize
==0 );

5471 
	`as£π
–(
pCur
->
curFœgs
 & (
BTCF_VÆidNKey
|
BTCF_VÆidOvÊ
))==0 );

5473 
pCur
->
aiIdx
[pCur->
iPage
]--;

5474 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

5475 if–
pPage
->
ötKey
 && !pPage->
Àaf
 ){

5476 
rc
 = 
	`sqlôe3BåìPªvious
(
pCur
, 
pRes
);

5478 
rc
 = 
SQLITE_OK
;

5481  
rc
;

5482 
	}
}

5483 
	$sqlôe3BåìPªvious
(
BtCurs‹
 *
pCur
, *
pRes
){

5484 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

5485 
	`as£π
–
pRes
!=0 );

5486 
	`as£π
–*
pRes
==0 || *pRes==1 );

5487 
	`as£π
–
pCur
->
skùNext
==0 ||ÖCur->
eSèã
!=
CURSOR_VALID
 );

5488 *
pRes
 = 0;

5489 
pCur
->
curFœgs
 &~(
BTCF_AtLa°
|
BTCF_VÆidOvÊ
|
BTCF_VÆidNKey
);

5490 
pCur
->
öfo
.
nSize
 = 0;

5491 if–
pCur
->
eSèã
!=
CURSOR_VALID


5492 || 
pCur
->
aiIdx
[pCur->
iPage
]==0

5493 || 
pCur
->
≠Page
[pCur->
iPage
]->
Àaf
==0

5495  
	`båìPªvious
(
pCur
, 
pRes
);

5497 
pCur
->
aiIdx
[pCur->
iPage
]--;

5498  
SQLITE_OK
;

5499 
	}
}

5523 
	$ÆloˇãBåìPage
(

5524 
BtSh¨ed
 *
pBt
,

5525 
MemPage
 **
µPage
,

5526 
Pgno
 *
pPgno
,

5527 
Pgno
 
√¨by
,

5528 
u8
 
eMode


5530 
MemPage
 *
pPage1
;

5531 
rc
;

5532 
u32
 
n
;

5533 
u32
 
k
;

5534 
MemPage
 *
pTrunk
 = 0;

5535 
MemPage
 *
pPªvTrunk
 = 0;

5536 
Pgno
 
mxPage
;

5538 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

5539 
	`as£π
–
eMode
==
BTALLOC_ANY
 || (
√¨by
>0 && 
	`IfNŸOmôAV
(
pBt
->
autoVacuum
)) );

5540 
pPage1
 = 
pBt
->pPage1;

5541 
mxPage
 = 
	`båìPagecou¡
(
pBt
);

5544 
n
 = 
	`gë4byã
(&
pPage1
->
aD©a
[36]);

5545 
	`ã°ˇ£
–
n
==
mxPage
-1 );

5546 if–
n
>=
mxPage
 ){

5547  
SQLITE_CORRUPT_BKPT
;

5549 if–
n
>0 ){

5551 
Pgno
 
iTrunk
;

5552 
u8
 
£¨chLi°
 = 0;

5553 
u32
 
nSórch
 = 0;

5559 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5560 if–
eMode
==
BTALLOC_EXACT
 ){

5561 if–
√¨by
<=
mxPage
 ){

5562 
u8
 
eTy≥
;

5563 
	`as£π
–
√¨by
>0 );

5564 
	`as£π
–
pBt
->
autoVacuum
 );

5565 
rc
 = 
	`±rm≠Gë
(
pBt
, 
√¨by
, &
eTy≥
, 0);

5566 if–
rc
 ) Ñc;

5567 if–
eTy≥
==
PTRMAP_FREEPAGE
 ){

5568 
£¨chLi°
 = 1;

5571 }if–
eMode
==
BTALLOC_LE
 ){

5572 
£¨chLi°
 = 1;

5579 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

5580 if–
rc
 ) Ñc;

5581 
	`put4byã
(&
pPage1
->
aD©a
[36], 
n
-1);

5589 
pPªvTrunk
 = 
pTrunk
;

5590 if–
pPªvTrunk
 ){

5594 
iTrunk
 = 
	`gë4byã
(&
pPªvTrunk
->
aD©a
[0]);

5599 
iTrunk
 = 
	`gë4byã
(&
pPage1
->
aD©a
[32]);

5601 
	`ã°ˇ£
–
iTrunk
==
mxPage
 );

5602 if–
iTrunk
>
mxPage
 || 
nSórch
++ > 
n
 ){

5603 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5605 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, 
iTrunk
, &
pTrunk
, 0);

5607 if–
rc
 ){

5608 
pTrunk
 = 0;

5609 
íd_Æloˇã_∑ge
;

5611 
	`as£π
–
pTrunk
!=0 );

5612 
	`as£π
–
pTrunk
->
aD©a
!=0 );

5615 
k
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[4]);

5616 if–
k
==0 && !
£¨chLi°
 ){

5620 
	`as£π
–
pPªvTrunk
==0 );

5621 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5622 if–
rc
 ){

5623 
íd_Æloˇã_∑ge
;

5625 *
pPgno
 = 
iTrunk
;

5626 
	`mem˝y
(&
pPage1
->
aD©a
[32], &
pTrunk
->aData[0], 4);

5627 *
µPage
 = 
pTrunk
;

5628 
pTrunk
 = 0;

5629 
	`TRACE
(("ALLOCATE: %dÅrunk - %d fªê∑ge†À·\n", *
pPgno
, 
n
-1));

5630 }if–
k
>(
u32
)(
pBt
->
ußbÀSize
/4 - 2) ){

5632 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5633 
íd_Æloˇã_∑ge
;

5634 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5635 }if–
£¨chLi°


5636 && (
√¨by
==
iTrunk
 || (iTrunk<√¨by && 
eMode
==
BTALLOC_LE
))

5641 *
pPgno
 = 
iTrunk
;

5642 *
µPage
 = 
pTrunk
;

5643 
£¨chLi°
 = 0;

5644 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5645 if–
rc
 ){

5646 
íd_Æloˇã_∑ge
;

5648 if–
k
==0 ){

5649 if–!
pPªvTrunk
 ){

5650 
	`mem˝y
(&
pPage1
->
aD©a
[32], &
pTrunk
->aData[0], 4);

5652 
rc
 = 
	`sqlôe3PagîWrôe
(
pPªvTrunk
->
pDbPage
);

5653 if–
rc
!=
SQLITE_OK
 ){

5654 
íd_Æloˇã_∑ge
;

5656 
	`mem˝y
(&
pPªvTrunk
->
aD©a
[0], &
pTrunk
->aData[0], 4);

5663 
MemPage
 *
pNewTrunk
;

5664 
Pgno
 
iNewTrunk
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[8]);

5665 if–
iNewTrunk
>
mxPage
 ){

5666 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5667 
íd_Æloˇã_∑ge
;

5669 
	`ã°ˇ£
–
iNewTrunk
==
mxPage
 );

5670 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, 
iNewTrunk
, &
pNewTrunk
, 0);

5671 if–
rc
!=
SQLITE_OK
 ){

5672 
íd_Æloˇã_∑ge
;

5674 
rc
 = 
	`sqlôe3PagîWrôe
(
pNewTrunk
->
pDbPage
);

5675 if–
rc
!=
SQLITE_OK
 ){

5676 
	`ªÀa£Page
(
pNewTrunk
);

5677 
íd_Æloˇã_∑ge
;

5679 
	`mem˝y
(&
pNewTrunk
->
aD©a
[0], &
pTrunk
->aData[0], 4);

5680 
	`put4byã
(&
pNewTrunk
->
aD©a
[4], 
k
-1);

5681 
	`mem˝y
(&
pNewTrunk
->
aD©a
[8], &
pTrunk
->aD©a[12], (
k
-1)*4);

5682 
	`ªÀa£Page
(
pNewTrunk
);

5683 if–!
pPªvTrunk
 ){

5684 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage1
->
pDbPage
) );

5685 
	`put4byã
(&
pPage1
->
aD©a
[32], 
iNewTrunk
);

5687 
rc
 = 
	`sqlôe3PagîWrôe
(
pPªvTrunk
->
pDbPage
);

5688 if–
rc
 ){

5689 
íd_Æloˇã_∑ge
;

5691 
	`put4byã
(&
pPªvTrunk
->
aD©a
[0], 
iNewTrunk
);

5694 
pTrunk
 = 0;

5695 
	`TRACE
(("ALLOCATE: %dÅrunk - %d fªê∑ge†À·\n", *
pPgno
, 
n
-1));

5697 }if–
k
>0 ){

5699 
u32
 
˛o£°
;

5700 
Pgno
 
iPage
;

5701 *
aD©a
 = 
pTrunk
->aData;

5702 if–
√¨by
>0 ){

5703 
u32
 
i
;

5704 
˛o£°
 = 0;

5705 if–
eMode
==
BTALLOC_LE
 ){

5706 
i
=0; i<
k
; i++){

5707 
iPage
 = 
	`gë4byã
(&
aD©a
[8+
i
*4]);

5708 if–
iPage
<=
√¨by
 ){

5709 
˛o£°
 = 
i
;

5714 
di°
;

5715 
di°
 = 
	`sqlôe3AbsI¡32
(
	`gë4byã
(&
aD©a
[8]Ë- 
√¨by
);

5716 
i
=1; i<
k
; i++){

5717 
d2
 = 
	`sqlôe3AbsI¡32
(
	`gë4byã
(&
aD©a
[8+
i
*4]Ë- 
√¨by
);

5718 if–
d2
<
di°
 ){

5719 
˛o£°
 = 
i
;

5720 
di°
 = 
d2
;

5725 
˛o£°
 = 0;

5728 
iPage
 = 
	`gë4byã
(&
aD©a
[8+
˛o£°
*4]);

5729 
	`ã°ˇ£
–
iPage
==
mxPage
 );

5730 if–
iPage
>
mxPage
 ){

5731 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5732 
íd_Æloˇã_∑ge
;

5734 
	`ã°ˇ£
–
iPage
==
mxPage
 );

5735 if–!
£¨chLi°


5736 || (
iPage
==
√¨by
 || (iPage<√¨by && 
eMode
==
BTALLOC_LE
))

5738 
noC⁄ã¡
;

5739 *
pPgno
 = 
iPage
;

5740 
	`TRACE
(("ALLOCATE: %d wasÜeaf %d of %d onÅrunk %d"

5742 *
pPgno
, 
˛o£°
+1, 
k
, 
pTrunk
->
pgno
, 
n
-1));

5743 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5744 if–
rc
 ) 
íd_Æloˇã_∑ge
;

5745 if–
˛o£°
<
k
-1 ){

5746 
	`mem˝y
(&
aD©a
[8+
˛o£°
*4], &aD©a[4+
k
*4], 4);

5748 
	`put4byã
(&
aD©a
[4], 
k
-1);

5749 
noC⁄ã¡
 = !
	`båìGëHasC⁄ã¡
(
pBt
, *
pPgno
)? 
PAGER_GET_NOCONTENT
 : 0;

5750 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, *
pPgno
, 
µPage
, 
noC⁄ã¡
);

5751 if–
rc
==
SQLITE_OK
 ){

5752 
rc
 = 
	`sqlôe3PagîWrôe
((*
µPage
)->
pDbPage
);

5753 if–
rc
!=
SQLITE_OK
 ){

5754 
	`ªÀa£Page
(*
µPage
);

5755 *
µPage
 = 0;

5758 
£¨chLi°
 = 0;

5761 
	`ªÀa£Page
(
pPªvTrunk
);

5762 
pPªvTrunk
 = 0;

5763 } 
£¨chLi°
 );

5783 
bNoC⁄ã¡
 = (0==
	`IfNŸOmôAV
(
pBt
->
bDoTrunˇã
))? 
PAGER_GET_NOCONTENT
:0;

5785 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

5786 if–
rc
 ) Ñc;

5787 
pBt
->
nPage
++;

5788 if–
pBt
->
nPage
==
	`PENDING_BYTE_PAGE
(pBt) )ÖBt->nPage++;

5790 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5791 if–
pBt
->
autoVacuum
 && 
	`PTRMAP_ISPAGE
’Bt,ÖBt->
nPage
) ){

5796 
MemPage
 *
pPg
 = 0;

5797 
	`TRACE
(("ALLOCATE: %d fromÉnd o‡fûê’oöãr-m≠Öage)\n", 
pBt
->
nPage
));

5798 
	`as£π
–
pBt
->
nPage
!=
	`PENDING_BYTE_PAGE
(pBt) );

5799 
rc
 = 
	`båìGëUnu£dPage
(
pBt
,ÖBt->
nPage
, &
pPg
, 
bNoC⁄ã¡
);

5800 if–
rc
==
SQLITE_OK
 ){

5801 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
->
pDbPage
);

5802 
	`ªÀa£Page
(
pPg
);

5804 if–
rc
 ) Ñc;

5805 
pBt
->
nPage
++;

5806 if–
pBt
->
nPage
==
	`PENDING_BYTE_PAGE
(pBt) ){ÖBt->nPage++; }

5809 
	`put4byã
(28 + (
u8
*)
pBt
->
pPage1
->
aD©a
,ÖBt->
nPage
);

5810 *
pPgno
 = 
pBt
->
nPage
;

5812 
	`as£π
–*
pPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

5813 
rc
 = 
	`båìGëUnu£dPage
(
pBt
, *
pPgno
, 
µPage
, 
bNoC⁄ã¡
);

5814 if–
rc
 ) Ñc;

5815 
rc
 = 
	`sqlôe3PagîWrôe
((*
µPage
)->
pDbPage
);

5816 if–
rc
!=
SQLITE_OK
 ){

5817 
	`ªÀa£Page
(*
µPage
);

5818 *
µPage
 = 0;

5820 
	`TRACE
(("ALLOCATE: %d fromÉnd o‡fûe\n", *
pPgno
));

5823 
	`as£π
–*
pPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

5825 
íd_Æloˇã_∑ge
:

5826 
	`ªÀa£Page
(
pTrunk
);

5827 
	`ªÀa£Page
(
pPªvTrunk
);

5828 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3PagîPageRefcou¡
((*
µPage
)->
pDbPage
)<=1 );

5829 
	`as£π
–
rc
!=
SQLITE_OK
 || (*
µPage
)->
isInô
==0 );

5830  
rc
;

5831 
	}
}

5845 
	$‰ìPage2
(
BtSh¨ed
 *
pBt
, 
MemPage
 *
pMemPage
, 
Pgno
 
iPage
){

5846 
MemPage
 *
pTrunk
 = 0;

5847 
Pgno
 
iTrunk
 = 0;

5848 
MemPage
 *
pPage1
 = 
pBt
->pPage1;

5849 
MemPage
 *
pPage
;

5850 
rc
;

5851 
nFªe
;

5853 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

5854 
	`as£π
–
CORRUPT_DB
 || 
iPage
>1 );

5855 
	`as£π
–!
pMemPage
 ||ÖMemPage->
pgno
==
iPage
 );

5857 if–
iPage
<2 )  
SQLITE_CORRUPT_BKPT
;

5858 if–
pMemPage
 ){

5859 
pPage
 = 
pMemPage
;

5860 
	`sqlôe3PagîRef
(
pPage
->
pDbPage
);

5862 
pPage
 = 
	`båìPageLookup
(
pBt
, 
iPage
);

5866 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage1
->
pDbPage
);

5867 if–
rc
 ) 
‰ì∑ge_out
;

5868 
nFªe
 = 
	`gë4byã
(&
pPage1
->
aD©a
[36]);

5869 
	`put4byã
(&
pPage1
->
aD©a
[36], 
nFªe
+1);

5871 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

5875 if–(!
pPage
 && ((
rc
 = 
	`båìGëPage
(
pBt
, 
iPage
, &pPage, 0))!=0) )

5876 || ((
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
))!=0)

5878 
‰ì∑ge_out
;

5880 
	`mem£t
(
pPage
->
aD©a
, 0,ÖPage->
pBt
->
∑geSize
);

5886 if–
ISAUTOVACUUM
 ){

5887 
	`±rm≠Put
(
pBt
, 
iPage
, 
PTRMAP_FREEPAGE
, 0, &
rc
);

5888 if–
rc
 ) 
‰ì∑ge_out
;

5898 if–
nFªe
!=0 ){

5899 
u32
 
nLóf
;

5901 
iTrunk
 = 
	`gë4byã
(&
pPage1
->
aD©a
[32]);

5902 
rc
 = 
	`båìGëPage
(
pBt
, 
iTrunk
, &
pTrunk
, 0);

5903 if–
rc
!=
SQLITE_OK
 ){

5904 
‰ì∑ge_out
;

5907 
nLóf
 = 
	`gë4byã
(&
pTrunk
->
aD©a
[4]);

5908 
	`as£π
–
pBt
->
ußbÀSize
>32 );

5909 if–
nLóf
 > (
u32
)
pBt
->
ußbÀSize
/4 - 2 ){

5910 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5911 
‰ì∑ge_out
;

5913 if–
nLóf
 < (
u32
)
pBt
->
ußbÀSize
/4 - 8 ){

5933 
rc
 = 
	`sqlôe3PagîWrôe
(
pTrunk
->
pDbPage
);

5934 if–
rc
==
SQLITE_OK
 ){

5935 
	`put4byã
(&
pTrunk
->
aD©a
[4], 
nLóf
+1);

5936 
	`put4byã
(&
pTrunk
->
aD©a
[8+
nLóf
*4], 
iPage
);

5937 if–
pPage
 && (
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
)==0 ){

5938 
	`sqlôe3PagîD⁄tWrôe
(
pPage
->
pDbPage
);

5940 
rc
 = 
	`båìSëHasC⁄ã¡
(
pBt
, 
iPage
);

5942 
	`TRACE
(("FREE-PAGE: %dÜó‡⁄ÅrunkÖagê%d\n",
pPage
->
pgno
,
pTrunk
->pgno));

5943 
‰ì∑ge_out
;

5953 if–
pPage
==0 && 
SQLITE_OK
!=(
rc
 = 
	`båìGëPage
(
pBt
, 
iPage
, &pPage, 0)) ){

5954 
‰ì∑ge_out
;

5956 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

5957 if–
rc
!=
SQLITE_OK
 ){

5958 
‰ì∑ge_out
;

5960 
	`put4byã
(
pPage
->
aD©a
, 
iTrunk
);

5961 
	`put4byã
(&
pPage
->
aD©a
[4], 0);

5962 
	`put4byã
(&
pPage1
->
aD©a
[32], 
iPage
);

5963 
	`TRACE
(("FREE-PAGE: %dÇewÅrunkÖagêª∂acög %d\n", 
pPage
->
pgno
, 
iTrunk
));

5965 
‰ì∑ge_out
:

5966 if–
pPage
 ){

5967 
pPage
->
isInô
 = 0;

5969 
	`ªÀa£Page
(
pPage
);

5970 
	`ªÀa£Page
(
pTrunk
);

5971  
rc
;

5972 
	}
}

5973 
	$‰ìPage
(
MemPage
 *
pPage
, *
pRC
){

5974 if–(*
pRC
)==
SQLITE_OK
 ){

5975 *
pRC
 = 
	`‰ìPage2
(
pPage
->
pBt
,ÖPage,ÖPage->
pgno
);

5977 
	}
}

5984 
	$˛órCñl
(

5985 
MemPage
 *
pPage
,

5986 *
pCñl
,

5987 
u16
 *
≤Size


5989 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

5990 
CñlInfo
 
öfo
;

5991 
Pgno
 
ovÊPgno
;

5992 
rc
;

5993 
nOvÊ
;

5994 
u32
 
ovÊPageSize
;

5996 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

5997 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

5998 *
≤Size
 = 
öfo
.
nSize
;

5999 if–
öfo
.
nLoˇl
==öfo.
nPaylﬂd
 ){

6000  
SQLITE_OK
;

6002 if–
pCñl
+
öfo
.
nSize
-1 > 
pPage
->
aD©a
+pPage->
maskPage
 ){

6003  
SQLITE_CORRUPT_BKPT
;

6005 
ovÊPgno
 = 
	`gë4byã
(
pCñl
 + 
öfo
.
nSize
 - 4);

6006 
	`as£π
–
pBt
->
ußbÀSize
 > 4 );

6007 
ovÊPageSize
 = 
pBt
->
ußbÀSize
 - 4;

6008 
nOvÊ
 = (
öfo
.
nPaylﬂd
 - info.
nLoˇl
 + 
ovÊPageSize
 - 1)/ovflPageSize;

6009 
	`as£π
–
nOvÊ
>0 ||

6010 (
CORRUPT_DB
 && (
öfo
.
nPaylﬂd
 + 
ovÊPageSize
)<ovflPageSize)

6012  
nOvÊ
-- ){

6013 
Pgno
 
iNext
 = 0;

6014 
MemPage
 *
pOvÊ
 = 0;

6015 if–
ovÊPgno
<2 || ovÊPgno>
	`båìPagecou¡
(
pBt
) ){

6019  
SQLITE_CORRUPT_BKPT
;

6021 if–
nOvÊ
 ){

6022 
rc
 = 
	`gëOvîÊowPage
(
pBt
, 
ovÊPgno
, &
pOvÊ
, &
iNext
);

6023 if–
rc
 ) Ñc;

6026 if––
pOvÊ
 || (’OvÊ = 
	`båìPageLookup
(
pBt
, 
ovÊPgno
))!=0) )

6027 && 
	`sqlôe3PagîPageRefcou¡
(
pOvÊ
->
pDbPage
)!=1

6039 
rc
 = 
SQLITE_CORRUPT_BKPT
;

6041 
rc
 = 
	`‰ìPage2
(
pBt
, 
pOvÊ
, 
ovÊPgno
);

6044 if–
pOvÊ
 ){

6045 
	`sqlôe3PagîUƒef
(
pOvÊ
->
pDbPage
);

6047 if–
rc
 ) Ñc;

6048 
ovÊPgno
 = 
iNext
;

6050  
SQLITE_OK
;

6051 
	}
}

6065 
	$fûlInCñl
(

6066 
MemPage
 *
pPage
,

6067 *
pCñl
,

6068 c⁄° 
BåìPaylﬂd
 *
pX
,

6069 *
≤Size


6071 
nPaylﬂd
;

6072 c⁄° 
u8
 *
pSrc
;

6073 
nSrc
, 
n
, 
rc
;

6074 
•a˚Le·
;

6075 
MemPage
 *
pOvÊ
 = 0;

6076 
MemPage
 *
pToRñó£
 = 0;

6077 *
pPri‹
;

6078 *
pPaylﬂd
;

6079 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

6080 
Pgno
 
pgnoOvÊ
 = 0;

6081 
nHódî
;

6083 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6087 
	`as£π
–
pCñl
<
pPage
->
aD©a
 ||ÖCñl>=&pPage->aD©a[
pBt
->
∑geSize
]

6088 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6091 
nHódî
 = 
pPage
->
chûdPåSize
;

6092 if–
pPage
->
ötKey
 ){

6093 
nPaylﬂd
 = 
pX
->
nD©a
 +ÖX->
nZîo
;

6094 
pSrc
 = 
pX
->
pD©a
;

6095 
nSrc
 = 
pX
->
nD©a
;

6096 
	`as£π
–
pPage
->
ötKeyLóf
 );

6097 
nHódî
 +
	`putV¨öt32
(&
pCñl
[nHódî], 
nPaylﬂd
);

6098 
nHódî
 +
	`putV¨öt
(&
pCñl
[nHódî], *(
u64
*)&
pX
->
nKey
);

6100 
	`as£π
–
pX
->
nD©a
==0 );

6101 
	`as£π
–
pX
->
nZîo
==0 );

6102 
	`as£π
–
pX
->
nKey
<=0x7ffffff‡&&ÖX->
pKey
!=0 );

6103 
nSrc
 = 
nPaylﬂd
 = ()
pX
->
nKey
;

6104 
pSrc
 = 
pX
->
pKey
;

6105 
nHódî
 +
	`putV¨öt32
(&
pCñl
[nHódî], 
nPaylﬂd
);

6109 if–
nPaylﬂd
<=
pPage
->
maxLoˇl
 ){

6110 
n
 = 
nHódî
 + 
nPaylﬂd
;

6111 
	`ã°ˇ£
–
n
==3 );

6112 
	`ã°ˇ£
–
n
==4 );

6113 if–
n
<4 )Ç = 4;

6114 *
≤Size
 = 
n
;

6115 
•a˚Le·
 = 
nPaylﬂd
;

6116 
pPri‹
 = 
pCñl
;

6118 
mn
 = 
pPage
->
möLoˇl
;

6119 
n
 = 
mn
 + (
nPaylﬂd
 - mnË% (
pPage
->
pBt
->
ußbÀSize
 - 4);

6120 
	`ã°ˇ£
–
n
==
pPage
->
maxLoˇl
 );

6121 
	`ã°ˇ£
–
n
==
pPage
->
maxLoˇl
+1 );

6122 if–
n
 > 
pPage
->
maxLoˇl
 )Ç = 
mn
;

6123 
•a˚Le·
 = 
n
;

6124 *
≤Size
 = 
n
 + 
nHódî
 + 4;

6125 
pPri‹
 = &
pCñl
[
nHódî
+
n
];

6127 
pPaylﬂd
 = &
pCñl
[
nHódî
];

6141 #i‡
SQLITE_DEBUG


6143 
CñlInfo
 
öfo
;

6144 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

6145 
	`as£π
–
nHódî
==()(
öfo
.
pPaylﬂd
 - 
pCñl
) );

6146 
	`as£π
–
öfo
.
nKey
==
pX
->nKey );

6147 
	`as£π
–*
≤Size
 =
öfo
.
nSize
 );

6148 
	`as£π
–
•a˚Le·
 =
öfo
.
nLoˇl
 );

6153  
nPaylﬂd
>0 ){

6154 if–
•a˚Le·
==0 ){

6155 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6156 
Pgno
 
pgnoPåm≠
 = 
pgnoOvÊ
;

6157 if–
pBt
->
autoVacuum
 ){

6159 
pgnoOvÊ
++;

6161 
	`PTRMAP_ISPAGE
(
pBt
, 
pgnoOvÊ
Ë||ÖgnoOvÊ==
	`PENDING_BYTE_PAGE
(pBt)

6165 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pOvÊ
, &
pgnoOvÊ
,ÖgnoOvfl, 0);

6166 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6177 if–
pBt
->
autoVacuum
 && 
rc
==
SQLITE_OK
 ){

6178 
u8
 
eTy≥
 = (
pgnoPåm≠
?
PTRMAP_OVERFLOW2
:
PTRMAP_OVERFLOW1
);

6179 
	`±rm≠Put
(
pBt
, 
pgnoOvÊ
, 
eTy≥
, 
pgnoPåm≠
, &
rc
);

6180 if–
rc
 ){

6181 
	`ªÀa£Page
(
pOvÊ
);

6185 if–
rc
 ){

6186 
	`ªÀa£Page
(
pToRñó£
);

6187  
rc
;

6192 
	`as£π
–
pToRñó£
==0 || 
	`sqlôe3PagîIswrôóbÀ
’ToRñó£->
pDbPage
) );

6196 
	`as£π
–
pPri‹
<
pPage
->
aD©a
 ||ÖPri‹>=&pPage->aD©a[
pBt
->
∑geSize
]

6197 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6199 
	`put4byã
(
pPri‹
, 
pgnoOvÊ
);

6200 
	`ªÀa£Page
(
pToRñó£
);

6201 
pToRñó£
 = 
pOvÊ
;

6202 
pPri‹
 = 
pOvÊ
->
aD©a
;

6203 
	`put4byã
(
pPri‹
, 0);

6204 
pPaylﬂd
 = &
pOvÊ
->
aD©a
[4];

6205 
•a˚Le·
 = 
pBt
->
ußbÀSize
 - 4;

6207 
n
 = 
nPaylﬂd
;

6208 if–
n
>
•a˚Le·
 )Ç = spaceLeft;

6212 
	`as£π
–
pToRñó£
==0 || 
	`sqlôe3PagîIswrôóbÀ
’ToRñó£->
pDbPage
) );

6216 
	`as£π
–
pPaylﬂd
<
pPage
->
aD©a
 ||ÖPaylﬂd>=&pPage->aD©a[
pBt
->
∑geSize
]

6217 || 
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6219 if–
nSrc
>0 ){

6220 if–
n
>
nSrc
 )Ç =ÇSrc;

6221 
	`as£π
–
pSrc
 );

6222 
	`mem˝y
(
pPaylﬂd
, 
pSrc
, 
n
);

6224 
	`mem£t
(
pPaylﬂd
, 0, 
n
);

6226 
nPaylﬂd
 -
n
;

6227 
pPaylﬂd
 +
n
;

6228 
pSrc
 +
n
;

6229 
nSrc
 -
n
;

6230 
•a˚Le·
 -
n
;

6232 
	`ªÀa£Page
(
pToRñó£
);

6233  
SQLITE_OK
;

6234 
	}
}

6244 
	$dr›Cñl
(
MemPage
 *
pPage
, 
idx
, 
sz
, *
pRC
){

6245 
u32
 
pc
;

6246 
u8
 *
d©a
;

6247 
u8
 *
±r
;

6248 
rc
;

6249 
hdr
;

6251 if–*
pRC
 ) ;

6253 
	`as£π
–
idx
>=0 && idx<
pPage
->
nCñl
 );

6254 
	`as£π
–
CORRUPT_DB
 || 
sz
==
	`˚ŒSize
(
pPage
, 
idx
) );

6255 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6256 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6257 
d©a
 = 
pPage
->
aD©a
;

6258 
±r
 = &
pPage
->
aCñlIdx
[2*
idx
];

6259 
pc
 = 
	`gë2byã
(
±r
);

6260 
hdr
 = 
pPage
->
hdrOff£t
;

6261 
	`ã°ˇ£
–
pc
==
	`gë2byã
(&
d©a
[
hdr
+5]) );

6262 
	`ã°ˇ£
–
pc
+
sz
==
pPage
->
pBt
->
ußbÀSize
 );

6263 if–
pc
 < (
u32
)
	`gë2byã
(&
d©a
[
hdr
+5]Ë||Öc+
sz
 > 
pPage
->
pBt
->
ußbÀSize
 ){

6264 *
pRC
 = 
SQLITE_CORRUPT_BKPT
;

6267 
rc
 = 
	`‰ìS∑˚
(
pPage
, 
pc
, 
sz
);

6268 if–
rc
 ){

6269 *
pRC
 = 
rc
;

6272 
pPage
->
nCñl
--;

6273 if–
pPage
->
nCñl
==0 ){

6274 
	`mem£t
(&
d©a
[
hdr
+1], 0, 4);

6275 
d©a
[
hdr
+7] = 0;

6276 
	`put2byã
(&
d©a
[
hdr
+5], 
pPage
->
pBt
->
ußbÀSize
);

6277 
pPage
->
nFªe
 =ÖPage->
pBt
->
ußbÀSize
 -ÖPage->
hdrOff£t


6278 - 
pPage
->
chûdPåSize
 - 8;

6280 
	`memmove
(
±r
,Öå+2, 2*(
pPage
->
nCñl
 - 
idx
));

6281 
	`put2byã
(&
d©a
[
hdr
+3], 
pPage
->
nCñl
);

6282 
pPage
->
nFªe
 += 2;

6284 
	}
}

6300 
	$ö£πCñl
(

6301 
MemPage
 *
pPage
,

6302 
i
,

6303 
u8
 *
pCñl
,

6304 
sz
,

6305 
u8
 *
pTemp
,

6306 
Pgno
 
iChûd
,

6307 *
pRC


6309 
idx
 = 0;

6310 
j
;

6311 
u8
 *
d©a
;

6312 
u8
 *
pIns
;

6314 
	`as£π
–*
pRC
==
SQLITE_OK
 );

6315 
	`as£π
–
i
>=0 && i<=
pPage
->
nCñl
+pPage->
nOvîÊow
 );

6316 
	`as£π
–
	`MX_CELL
(
pPage
->
pBt
)<=10921 );

6317 
	`as£π
–
pPage
->
nCñl
<=
	`MX_CELL
’Page->
pBt
Ë|| 
CORRUPT_DB
 );

6318 
	`as£π
–
pPage
->
nOvîÊow
<=
	`AºaySize
’Page->
≠OvÊ
) );

6319 
	`as£π
–
	`AºaySize
(
pPage
->
≠OvÊ
)==AºaySize’Page->
aiOvÊ
) );

6320 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6326 
	`as£π
–
sz
==
pPage
->
	`xCñlSize
’Page, 
pCñl
Ë|| (sz==8 && 
iChûd
>0) );

6327 if–
pPage
->
nOvîÊow
 || 
sz
+2>pPage->
nFªe
 ){

6328 if–
pTemp
 ){

6329 
	`mem˝y
(
pTemp
, 
pCñl
, 
sz
);

6330 
pCñl
 = 
pTemp
;

6332 if–
iChûd
 ){

6333 
	`put4byã
(
pCñl
, 
iChûd
);

6335 
j
 = 
pPage
->
nOvîÊow
++;

6336 
	`as£π
–
j
<()((
pPage
->
≠OvÊ
)/(pPage->apOvfl[0])) );

6337 
pPage
->
≠OvÊ
[
j
] = 
pCñl
;

6338 
pPage
->
aiOvÊ
[
j
] = (
u16
)
i
;

6345 
	`as£π
–
j
==0 || 
pPage
->
aiOvÊ
[j-1]<(
u16
)
i
 );

6346 
	`as£π
–
j
==0 || 
i
==
pPage
->
aiOvÊ
[j-1]+1 );

6348 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

6349 if–
rc
!=
SQLITE_OK
 ){

6350 *
pRC
 = 
rc
;

6353 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pPage
->
pDbPage
) );

6354 
d©a
 = 
pPage
->
aD©a
;

6355 
	`as£π
–&
d©a
[
pPage
->
˚ŒOff£t
]=ıPage->
aCñlIdx
 );

6356 
rc
 = 
	`ÆloˇãS∑˚
(
pPage
, 
sz
, &
idx
);

6357 if–
rc
 ){ *
pRC
 =Ñc; ; }

6360 
	`as£π
–
idx
 >= 0 );

6361 
	`as£π
–
idx
 >
pPage
->
˚ŒOff£t
+2*pPage->
nCñl
+2 || 
CORRUPT_DB
 );

6362 
	`as£π
–
idx
+
sz
 <()
pPage
->
pBt
->
ußbÀSize
 );

6363 
pPage
->
nFªe
 -(
u16
)(2 + 
sz
);

6364 
	`mem˝y
(&
d©a
[
idx
], 
pCñl
, 
sz
);

6365 if–
iChûd
 ){

6366 
	`put4byã
(&
d©a
[
idx
], 
iChûd
);

6368 
pIns
 = 
pPage
->
aCñlIdx
 + 
i
*2;

6369 
	`memmove
(
pIns
+2,ÖIns, 2*(
pPage
->
nCñl
 - 
i
));

6370 
	`put2byã
(
pIns
, 
idx
);

6371 
pPage
->
nCñl
++;

6373 if–(++
d©a
[
pPage
->
hdrOff£t
+4])==0 ) data[pPage->hdrOffset+3]++;

6374 
	`as£π
–
	`gë2byã
(&
d©a
[
pPage
->
hdrOff£t
+3])=ıPage->
nCñl
 );

6375 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6376 if–
pPage
->
pBt
->
autoVacuum
 ){

6380 
	`±rm≠PutOvÊPå
(
pPage
, 
pCñl
, 
pRC
);

6384 
	}
}

6390 
CñlAºay
 
	tCñlAºay
;

6391 
	sCñlAºay
 {

6392 
	mnCñl
;

6393 
MemPage
 *
	mpRef
;

6394 
u8
 **
	m≠Cñl
;

6395 
u16
 *
	mszCñl
;

6402 
	$p›uœãCñlCache
(
CñlAºay
 *
p
, 
idx
, 
N
){

6403 
	`as£π
–
idx
>=0 && idx+
N
<=
p
->
nCñl
 );

6404  
N
>0 ){

6405 
	`as£π
–
p
->
≠Cñl
[
idx
]!=0 );

6406 if–
p
->
szCñl
[
idx
]==0 ){

6407 
p
->
szCñl
[
idx
] =Ö->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[idx]);

6409 
	`as£π
–
CORRUPT_DB
 ||

6410 
p
->
szCñl
[
idx
]=ı->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[idx]) );

6412 
idx
++;

6413 
N
--;

6415 
	}
}

6420 
SQLITE_NOINLINE
 
u16
 
	$compuãCñlSize
(
CñlAºay
 *
p
, 
N
){

6421 
	`as£π
–
N
>=0 && N<
p
->
nCñl
 );

6422 
	`as£π
–
p
->
szCñl
[
N
]==0 );

6423 
p
->
szCñl
[
N
] =Ö->
pRef
->
	`xCñlSize
’->pRef,Ö->
≠Cñl
[N]);

6424  
p
->
szCñl
[
N
];

6425 
	}
}

6426 
u16
 
	$ˇchedCñlSize
(
CñlAºay
 *
p
, 
N
){

6427 
	`as£π
–
N
>=0 && N<
p
->
nCñl
 );

6428 if–
p
->
szCñl
[
N
] ) Ö->szCell[N];

6429  
	`compuãCñlSize
(
p
, 
N
);

6430 
	}
}

6445 
	$ªbuûdPage
(

6446 
MemPage
 *
pPg
,

6447 
nCñl
,

6448 
u8
 **
≠Cñl
,

6449 
u16
 *
szCñl


6451 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

6452 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6453 c⁄° 
ußbÀSize
 = 
pPg
->
pBt
->usableSize;

6454 
u8
 * c⁄° 
pEnd
 = &
aD©a
[
ußbÀSize
];

6455 
i
;

6456 
u8
 *
pCñÕå
 = 
pPg
->
aCñlIdx
;

6457 
u8
 *
pTmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPg
->
pBt
->
pPagî
);

6458 
u8
 *
pD©a
;

6460 
i
 = 
	`gë2byã
(&
aD©a
[
hdr
+5]);

6461 
	`mem˝y
(&
pTmp
[
i
], &
aD©a
[i], 
ußbÀSize
 - i);

6463 
pD©a
 = 
pEnd
;

6464 
i
=0; i<
nCñl
; i++){

6465 
u8
 *
pCñl
 = 
≠Cñl
[
i
];

6466 if–
	`SQLITE_WITHIN
(
pCñl
,
aD©a
,
pEnd
) ){

6467 
pCñl
 = &
pTmp
[pCñ»- 
aD©a
];

6469 
pD©a
 -
szCñl
[
i
];

6470 
	`put2byã
(
pCñÕå
, (
pD©a
 - 
aD©a
));

6471 
pCñÕå
 += 2;

6472 if–
pD©a
 < 
pCñÕå
 )  
SQLITE_CORRUPT_BKPT
;

6473 
	`mem˝y
(
pD©a
, 
pCñl
, 
szCñl
[
i
]);

6474 
	`as£π
–
szCñl
[
i
]==
pPg
->
	`xCñlSize
’Pg, 
pCñl
Ë|| 
CORRUPT_DB
 );

6475 
	`ã°ˇ£
–
szCñl
[
i
]!=
pPg
->
	`xCñlSize
’Pg,
pCñl
) );

6479 
pPg
->
nCñl
 =ÇCell;

6480 
pPg
->
nOvîÊow
 = 0;

6482 
	`put2byã
(&
aD©a
[
hdr
+1], 0);

6483 
	`put2byã
(&
aD©a
[
hdr
+3], 
pPg
->
nCñl
);

6484 
	`put2byã
(&
aD©a
[
hdr
+5], 
pD©a
 -áData);

6485 
aD©a
[
hdr
+7] = 0x00;

6486  
SQLITE_OK
;

6487 
	}
}

6514 
	$∑geIn£πAºay
(

6515 
MemPage
 *
pPg
,

6516 
u8
 *
pBegö
,

6517 
u8
 **
µD©a
,

6518 
u8
 *
pCñÕå
,

6519 
iFú°
,

6520 
nCñl
,

6521 
CñlAºay
 *
pCAºay


6523 
i
;

6524 
u8
 *
aD©a
 = 
pPg
->aData;

6525 
u8
 *
pD©a
 = *
µD©a
;

6526 
iEnd
 = 
iFú°
 + 
nCñl
;

6527 
	`as£π
–
CORRUPT_DB
 || 
pPg
->
hdrOff£t
==0 );

6528 
i
=
iFú°
; i<
iEnd
; i++){

6529 
sz
, 
rc
;

6530 
u8
 *
pSlŸ
;

6531 
sz
 = 
	`ˇchedCñlSize
(
pCAºay
, 
i
);

6532 if–(
aD©a
[1]==0 &&áD©a[2]==0Ë|| (
pSlŸ
 = 
	`∑geFödSlŸ
(
pPg
,
sz
,&
rc
))==0 ){

6533 if–(
pD©a
 - 
pBegö
)<
sz
 )  1;

6534 
pD©a
 -
sz
;

6535 
pSlŸ
 = 
pD©a
;

6540 
	`as£π
–(
pSlŸ
+
sz
)<=
pCAºay
->
≠Cñl
[
i
]

6541 || 
pSlŸ
>=(
pCAºay
->
≠Cñl
[
i
]+
sz
)

6542 || 
CORRUPT_DB
 );

6543 
	`memmove
(
pSlŸ
, 
pCAºay
->
≠Cñl
[
i
], 
sz
);

6544 
	`put2byã
(
pCñÕå
, (
pSlŸ
 - 
aD©a
));

6545 
pCñÕå
 += 2;

6547 *
µD©a
 = 
pD©a
;

6549 
	}
}

6560 
	$∑geFªeAºay
(

6561 
MemPage
 *
pPg
,

6562 
iFú°
,

6563 
nCñl
,

6564 
CñlAºay
 *
pCAºay


6566 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6567 
u8
 * c⁄° 
pEnd
 = &
aD©a
[
pPg
->
pBt
->
ußbÀSize
];

6568 
u8
 * c⁄° 
pSèπ
 = &
aD©a
[
pPg
->
hdrOff£t
 + 8 +ÖPg->
chûdPåSize
];

6569 
nRë
 = 0;

6570 
i
;

6571 
iEnd
 = 
iFú°
 + 
nCñl
;

6572 
u8
 *
pFªe
 = 0;

6573 
szFªe
 = 0;

6575 
i
=
iFú°
; i<
iEnd
; i++){

6576 
u8
 *
pCñl
 = 
pCAºay
->
≠Cñl
[
i
];

6577 if–
	`SQLITE_WITHIN
(
pCñl
, 
pSèπ
, 
pEnd
) ){

6578 
sz
;

6582 
sz
 = 
pCAºay
->
szCñl
[
i
]; 
	`as£π
( sz>0 );

6583 if–
pFªe
!=(
pCñl
 + 
sz
) ){

6584 if–
pFªe
 ){

6585 
	`as£π
–
pFªe
>
aD©a
 && (pFree -áData)<65536 );

6586 
	`‰ìS∑˚
(
pPg
, (
u16
)(
pFªe
 - 
aD©a
), 
szFªe
);

6588 
pFªe
 = 
pCñl
;

6589 
szFªe
 = 
sz
;

6590 if–
pFªe
+
sz
>
pEnd
 )  0;

6592 
pFªe
 = 
pCñl
;

6593 
szFªe
 +
sz
;

6595 
nRë
++;

6598 if–
pFªe
 ){

6599 
	`as£π
–
pFªe
>
aD©a
 && (pFree -áData)<65536 );

6600 
	`‰ìS∑˚
(
pPg
, (
u16
)(
pFªe
 - 
aD©a
), 
szFªe
);

6602  
nRë
;

6603 
	}
}

6617 
	$edôPage
(

6618 
MemPage
 *
pPg
,

6619 
iOld
,

6620 
iNew
,

6621 
nNew
,

6622 
CñlAºay
 *
pCAºay


6624 
u8
 * c⁄° 
aD©a
 = 
pPg
->aData;

6625 c⁄° 
hdr
 = 
pPg
->
hdrOff£t
;

6626 
u8
 *
pBegö
 = &
pPg
->
aCñlIdx
[
nNew
 * 2];

6627 
nCñl
 = 
pPg
->nCell;

6628 
u8
 *
pD©a
;

6629 
u8
 *
pCñÕå
;

6630 
i
;

6631 
iOldEnd
 = 
iOld
 + 
pPg
->
nCñl
 +ÖPg->
nOvîÊow
;

6632 
iNewEnd
 = 
iNew
 + 
nNew
;

6634 #ifde‡
SQLITE_DEBUG


6635 
u8
 *
pTmp
 = 
	`sqlôe3PagîTempS∑˚
(
pPg
->
pBt
->
pPagî
);

6636 
	`mem˝y
(
pTmp
, 
aD©a
, 
pPg
->
pBt
->
ußbÀSize
);

6640 if–
iOld
<
iNew
 ){

6641 
nShi·
 = 
	`∑geFªeAºay
(
pPg
, 
iOld
, 
iNew
-iOld, 
pCAºay
);

6642 
	`memmove
(
pPg
->
aCñlIdx
, &pPg->aCñlIdx[
nShi·
*2], 
nCñl
*2);

6643 
nCñl
 -
nShi·
;

6645 if–
iNewEnd
 < 
iOldEnd
 ){

6646 
nCñl
 -
	`∑geFªeAºay
(
pPg
, 
iNewEnd
, 
iOldEnd
 - iNewEnd, 
pCAºay
);

6649 
pD©a
 = &
aD©a
[
	`gë2byãNŸZîo
(&aD©a[
hdr
+5])];

6650 if–
pD©a
<
pBegö
 ) 
edô∑ge_Áû
;

6653 if–
iNew
<
iOld
 ){

6654 
nAdd
 = 
	`MIN
(
nNew
,
iOld
-
iNew
);

6655 
	`as£π
–(
iOld
-
iNew
)<
nNew
 || 
nCñl
==0 || 
CORRUPT_DB
 );

6656 
pCñÕå
 = 
pPg
->
aCñlIdx
;

6657 
	`memmove
(&
pCñÕå
[
nAdd
*2],ÖCñÕå, 
nCñl
*2);

6658 if–
	`∑geIn£πAºay
(

6659 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6660 
iNew
, 
nAdd
, 
pCAºay


6661 ËË
edô∑ge_Áû
;

6662 
nCñl
 +
nAdd
;

6666 
i
=0; i<
pPg
->
nOvîÊow
; i++){

6667 
iCñl
 = (
iOld
 + 
pPg
->
aiOvÊ
[
i
]Ë- 
iNew
;

6668 if–
iCñl
>=0 && iCñl<
nNew
 ){

6669 
pCñÕå
 = &
pPg
->
aCñlIdx
[
iCñl
 * 2];

6670 
	`memmove
(&
pCñÕå
[2],ÖCñÕå, (
nCñl
 - 
iCñl
) * 2);

6671 
nCñl
++;

6672 if–
	`∑geIn£πAºay
(

6673 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6674 
iCñl
+
iNew
, 1, 
pCAºay


6675 ËË
edô∑ge_Áû
;

6680 
pCñÕå
 = &
pPg
->
aCñlIdx
[
nCñl
*2];

6681 if–
	`∑geIn£πAºay
(

6682 
pPg
, 
pBegö
, &
pD©a
, 
pCñÕå
,

6683 
iNew
+
nCñl
, 
nNew
-nCñl, 
pCAºay


6684 ËË
edô∑ge_Áû
;

6686 
pPg
->
nCñl
 = 
nNew
;

6687 
pPg
->
nOvîÊow
 = 0;

6689 
	`put2byã
(&
aD©a
[
hdr
+3], 
pPg
->
nCñl
);

6690 
	`put2byã
(&
aD©a
[
hdr
+5], 
pD©a
 -áData);

6692 #ifde‡
SQLITE_DEBUG


6693 
i
=0; i<
nNew
 && !
CORRUPT_DB
; i++){

6694 
u8
 *
pCñl
 = 
pCAºay
->
≠Cñl
[
i
+
iNew
];

6695 
iOff
 = 
	`gë2byãAlig√d
(&
pPg
->
aCñlIdx
[
i
*2]);

6696 if–
	`SQLITE_WITHIN
(
pCñl
, 
aD©a
, &aD©a[
pPg
->
pBt
->
ußbÀSize
]) ){

6697 
pCñl
 = &
pTmp
[pCñ»- 
aD©a
];

6699 
	`as£π
–0==
	`memcmp
(
pCñl
, &
aD©a
[
iOff
],

6700 
pCAºay
->
pRef
->
	`xCñlSize
’CAºay->pRef,ÖCAºay->
≠Cñl
[
i
+
iNew
])) );

6704  
SQLITE_OK
;

6705 
edô∑ge_Áû
:

6707 
	`p›uœãCñlCache
(
pCAºay
, 
iNew
, 
nNew
);

6708  
	`ªbuûdPage
(
pPg
, 
nNew
, &
pCAºay
->
≠Cñl
[
iNew
], &pCAºay->
szCñl
[iNew]);

6709 
	}
}

6723 
	#NN
 1

	)

6724 
	#NB
 (
NN
*2+1Ë

	)

6727 #i‚de‡
SQLITE_OMIT_QUICKBALANCE


6751 
	$bÆ™˚_quick
(
MemPage
 *
pP¨ít
, MemPagê*
pPage
, 
u8
 *
pS∑˚
){

6752 
BtSh¨ed
 *c⁄° 
pBt
 = 
pPage
->pBt;

6753 
MemPage
 *
pNew
;

6754 
rc
;

6755 
Pgno
 
pgnoNew
;

6757 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pPage
->
pBt
->
muãx
) );

6758 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

6759 
	`as£π
–
pPage
->
nOvîÊow
==1 );

6762 if–
	`NEVER
(
pPage
->
nCñl
==0ËË 
SQLITE_CORRUPT_BKPT
;

6768 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pNew
, &
pgnoNew
, 0, 0);

6770 if–
rc
==
SQLITE_OK
 ){

6772 
u8
 *
pOut
 = &
pS∑˚
[4];

6773 
u8
 *
pCñl
 = 
pPage
->
≠OvÊ
[0];

6774 
u16
 
szCñl
 = 
pPage
->
	`xCñlSize
’Page, 
pCñl
);

6775 
u8
 *
pSt›
;

6777 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pNew
->
pDbPage
) );

6778 
	`as£π
–
pPage
->
aD©a
[0]==(
PTF_INTKEY
|
PTF_LEAFDATA
|
PTF_LEAF
) );

6779 
	`zîoPage
(
pNew
, 
PTF_INTKEY
|
PTF_LEAFDATA
|
PTF_LEAF
);

6780 
rc
 = 
	`ªbuûdPage
(
pNew
, 1, &
pCñl
, &
szCñl
);

6781 if–
	`NEVER
(
rc
) ) Ñc;

6782 
pNew
->
nFªe
 = 
pBt
->
ußbÀSize
 -ÖNew->
˚ŒOff£t
 - 2 - 
szCñl
;

6793 if–
ISAUTOVACUUM
 ){

6794 
	`±rm≠Put
(
pBt
, 
pgnoNew
, 
PTRMAP_BTREE
, 
pP¨ít
->
pgno
, &
rc
);

6795 if–
szCñl
>
pNew
->
möLoˇl
 ){

6796 
	`±rm≠PutOvÊPå
(
pNew
, 
pCñl
, &
rc
);

6813 
pCñl
 = 
	`födCñl
(
pPage
,ÖPage->
nCñl
-1);

6814 
pSt›
 = &
pCñl
[9];

6815  (*(
pCñl
++)&0x80Ë&&ÖCñl<
pSt›
 );

6816 
pSt›
 = &
pCñl
[9];

6817  ((*(
pOut
++Ë*(
pCñl
++))&0x80Ë&&ÖCñl<
pSt›
 );

6820 if–
rc
==
SQLITE_OK
 ){

6821 
	`ö£πCñl
(
pP¨ít
,ÖP¨ít->
nCñl
, 
pS∑˚
, ()(
pOut
-pSpace),

6822 0, 
pPage
->
pgno
, &
rc
);

6826 
	`put4byã
(&
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8], 
pgnoNew
);

6829 
	`ªÀa£Page
(
pNew
);

6832  
rc
;

6833 
	}
}

6842 
	$±rm≠CheckPages
(
MemPage
 **
≠Page
, 
nPage
){

6843 
i
, 
j
;

6844 
i
=0; i<
nPage
; i++){

6845 
Pgno
 
n
;

6846 
u8
 
e
;

6847 
MemPage
 *
pPage
 = 
≠Page
[
i
];

6848 
BtSh¨ed
 *
pBt
 = 
pPage
->pBt;

6849 
	`as£π
–
pPage
->
isInô
 );

6851 
j
=0; j<
pPage
->
nCñl
; j++){

6852 
CñlInfo
 
öfo
;

6853 
u8
 *
z
;

6855 
z
 = 
	`födCñl
(
pPage
, 
j
);

6856 
pPage
->
	`xP¨£Cñl
’Page, 
z
, &
öfo
);

6857 if–
öfo
.
nLoˇl
<öfo.
nPaylﬂd
 ){

6858 
Pgno
 
ovÊ
 = 
	`gë4byã
(&
z
[
öfo
.
nSize
-4]);

6859 
	`±rm≠Gë
(
pBt
, 
ovÊ
, &
e
, &
n
);

6860 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_OVERFLOW1
 );

6862 if–!
pPage
->
Àaf
 ){

6863 
Pgno
 
chûd
 = 
	`gë4byã
(
z
);

6864 
	`±rm≠Gë
(
pBt
, 
chûd
, &
e
, &
n
);

6865 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_BTREE
 );

6868 if–!
pPage
->
Àaf
 ){

6869 
Pgno
 
chûd
 = 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]);

6870 
	`±rm≠Gë
(
pBt
, 
chûd
, &
e
, &
n
);

6871 
	`as£π
–
n
==
pPage
->
pgno
 && 
e
==
PTRMAP_BTREE
 );

6875 
	}
}

6895 
	$c›yNodeC⁄ã¡
(
MemPage
 *
pFrom
, MemPagê*
pTo
, *
pRC
){

6896 if–(*
pRC
)==
SQLITE_OK
 ){

6897 
BtSh¨ed
 * c⁄° 
pBt
 = 
pFrom
->pBt;

6898 
u8
 * c⁄° 
aFrom
 = 
pFrom
->
aD©a
;

6899 
u8
 * c⁄° 
aTo
 = 
pTo
->
aD©a
;

6900 c⁄° 
iFromHdr
 = 
pFrom
->
hdrOff£t
;

6901 c⁄° 
iToHdr
 = ((
pTo
->
pgno
==1) ? 100 : 0);

6902 
rc
;

6903 
iD©a
;

6906 
	`as£π
–
pFrom
->
isInô
 );

6907 
	`as£π
–
pFrom
->
nFªe
>=
iToHdr
 );

6908 
	`as£π
–
	`gë2byã
(&
aFrom
[
iFromHdr
+5]Ë<()
pBt
->
ußbÀSize
 );

6911 
iD©a
 = 
	`gë2byã
(&
aFrom
[
iFromHdr
+5]);

6912 
	`mem˝y
(&
aTo
[
iD©a
], &
aFrom
[iD©a], 
pBt
->
ußbÀSize
-iData);

6913 
	`mem˝y
(&
aTo
[
iToHdr
], &
aFrom
[
iFromHdr
], 
pFrom
->
˚ŒOff£t
 + 2*pFrom->
nCñl
);

6920 
pTo
->
isInô
 = 0;

6921 
rc
 = 
	`båìInôPage
(
pTo
);

6922 if–
rc
!=
SQLITE_OK
 ){

6923 *
pRC
 = 
rc
;

6930 if–
ISAUTOVACUUM
 ){

6931 *
pRC
 = 
	`£tChûdPåm≠s
(
pTo
);

6934 
	}
}

6976 
	$bÆ™˚_n⁄roŸ
(

6977 
MemPage
 *
pP¨ít
,

6978 
iP¨ítIdx
,

6979 
u8
 *
aOvÊS∑˚
,

6980 
isRoŸ
,

6981 
bBulk


6983 
BtSh¨ed
 *
pBt
;

6984 
nMaxCñls
 = 0;

6985 
nNew
 = 0;

6986 
nOld
;

6987 
i
, 
j
, 
k
;

6988 
nxDiv
;

6989 
rc
 = 
SQLITE_OK
;

6990 
u16
 
ÀafC‹ª˘i⁄
;

6991 
ÀafD©a
;

6992 
ußbÀS∑˚
;

6993 
∑geFœgs
;

6994 
iS∑˚1
 = 0;

6995 
iOvÊS∑˚
 = 0;

6996 
szS¸©ch
;

6997 
MemPage
 *
≠Old
[
NB
];

6998 
MemPage
 *
≠New
[
NB
+2];

6999 
u8
 *
pRight
;

7000 
u8
 *
≠Div
[
NB
-1];

7001 
˙tNew
[
NB
+2];

7002 
˙tOld
[
NB
+2];

7003 
szNew
[
NB
+2];

7004 
u8
 *
aS∑˚1
;

7005 
Pgno
 
pgno
;

7006 
u8
 
abD⁄e
[
NB
+2];

7007 
Pgno
 
aPgno
[
NB
+2];

7008 
Pgno
 
aPgOrdî
[
NB
+2];

7009 
u16
 
aPgFœgs
[
NB
+2];

7010 
CñlAºay
 
b
;

7012 
	`mem£t
(
abD⁄e
, 0, (abDone));

7013 
b
.
nCñl
 = 0;

7014 
b
.
≠Cñl
 = 0;

7015 
pBt
 = 
pP¨ít
->pBt;

7016 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

7017 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7020 
	`TRACE
(("BALANCE: begöÖagê%d chûd o‡%d\n", 
pPage
->
pgno
, 
pP¨ít
->pgno));

7028 
	`as£π
–
pP¨ít
->
nOvîÊow
==0 ||ÖParent->nOverflow==1 );

7029 
	`as£π
–
pP¨ít
->
nOvîÊow
==0 ||ÖP¨ít->
aiOvÊ
[0]==
iP¨ítIdx
 );

7031 if–!
aOvÊS∑˚
 ){

7032  
SQLITE_NOMEM_BKPT
;

7046 
i
 = 
pP¨ít
->
nOvîÊow
 +ÖP¨ít->
nCñl
;

7047 if–
i
<2 ){

7048 
nxDiv
 = 0;

7050 
	`as£π
–
bBulk
==0 || bBulk==1 );

7051 if–
iP¨ítIdx
==0 ){

7052 
nxDiv
 = 0;

7053 }if–
iP¨ítIdx
==
i
 ){

7054 
nxDiv
 = 
i
-2+
bBulk
;

7056 
nxDiv
 = 
iP¨ítIdx
-1;

7058 
i
 = 2-
bBulk
;

7060 
nOld
 = 
i
+1;

7061 if–(
i
+
nxDiv
-
pP¨ít
->
nOvîÊow
)=ıP¨ít->
nCñl
 ){

7062 
pRight
 = &
pP¨ít
->
aD©a
[pP¨ít->
hdrOff£t
+8];

7064 
pRight
 = 
	`födCñl
(
pP¨ít
, 
i
+
nxDiv
-pP¨ít->
nOvîÊow
);

7066 
pgno
 = 
	`gë4byã
(
pRight
);

7068 
rc
 = 
	`gëAndInôPage
(
pBt
, 
pgno
, &
≠Old
[
i
], 0, 0);

7069 if–
rc
 ){

7070 
	`mem£t
(
≠Old
, 0, (
i
+1)*(
MemPage
*));

7071 
bÆ™˚_˛ónup
;

7073 
nMaxCñls
 +1+
≠Old
[
i
]->
nCñl
+≠Old[i]->
nOvîÊow
;

7074 if–(
i
--)==0 ) ;

7076 if–
i
+
nxDiv
==
pP¨ít
->
aiOvÊ
[0] &&ÖP¨ít->
nOvîÊow
 ){

7077 
≠Div
[
i
] = 
pP¨ít
->
≠OvÊ
[0];

7078 
pgno
 = 
	`gë4byã
(
≠Div
[
i
]);

7079 
szNew
[
i
] = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
≠Div
[i]);

7080 
pP¨ít
->
nOvîÊow
 = 0;

7082 
≠Div
[
i
] = 
	`födCñl
(
pP¨ít
, i+
nxDiv
-pP¨ít->
nOvîÊow
);

7083 
pgno
 = 
	`gë4byã
(
≠Div
[
i
]);

7084 
szNew
[
i
] = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
≠Div
[i]);

7098 if–
pBt
->
btsFœgs
 & 
BTS_SECURE_DELETE
 ){

7099 
iOff
;

7101 
iOff
 = 
	`SQLITE_PTR_TO_INT
(
≠Div
[
i
]Ë- SQLITE_PTR_TO_INT(
pP¨ít
->
aD©a
);

7102 if–(
iOff
+
szNew
[
i
])>()
pBt
->
ußbÀSize
 ){

7103 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7104 
	`mem£t
(
≠Old
, 0, (
i
+1)*(
MemPage
*));

7105 
bÆ™˚_˛ónup
;

7107 
	`mem˝y
(&
aOvÊS∑˚
[
iOff
], 
≠Div
[
i
], 
szNew
[i]);

7108 
≠Div
[
i
] = &
aOvÊS∑˚
[≠Div[i]-
pP¨ít
->
aD©a
];

7111 
	`dr›Cñl
(
pP¨ít
, 
i
+
nxDiv
-pP¨ít->
nOvîÊow
, 
szNew
[i], &
rc
);

7117 
nMaxCñls
 = (nMaxCells + 3)&~3;

7122 
szS¸©ch
 =

7123 
nMaxCñls
*(
u8
*)

7124 + 
nMaxCñls
*(
u16
)

7125 + 
pBt
->
∑geSize
;

7129 
	`as£π
–
szS¸©ch
<=6*()
pBt
->
∑geSize
 );

7130 
b
.
≠Cñl
 = 
	`sqlôe3S¸©chMÆloc
–
szS¸©ch
 );

7131 if–
b
.
≠Cñl
==0 ){

7132 
rc
 = 
SQLITE_NOMEM_BKPT
;

7133 
bÆ™˚_˛ónup
;

7135 
b
.
szCñl
 = (
u16
*)&b.
≠Cñl
[
nMaxCñls
];

7136 
aS∑˚1
 = (
u8
*)&
b
.
szCñl
[
nMaxCñls
];

7137 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
aS∑˚1
) );

7155 
b
.
pRef
 = 
≠Old
[0];

7156 
ÀafC‹ª˘i⁄
 = 
b
.
pRef
->
Àaf
*4;

7157 
ÀafD©a
 = 
b
.
pRef
->
ötKeyLóf
;

7158 
i
=0; i<
nOld
; i++){

7159 
MemPage
 *
pOld
 = 
≠Old
[
i
];

7160 
limô
 = 
pOld
->
nCñl
;

7161 
u8
 *
aD©a
 = 
pOld
->aData;

7162 
u16
 
maskPage
 = 
pOld
->maskPage;

7163 
u8
 *
piCñl
 = 
aD©a
 + 
pOld
->
˚ŒOff£t
;

7164 
u8
 *
piEnd
;

7169 if–
pOld
->
aD©a
[0]!=
≠Old
[0]->aData[0] ){

7170 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7171 
bÆ™˚_˛ónup
;

7191 
	`mem£t
(&
b
.
szCñl
[b.
nCñl
], 0, (b.szCñl[0])*(
limô
+
pOld
->
nOvîÊow
));

7192 if–
pOld
->
nOvîÊow
>0 ){

7193 
limô
 = 
pOld
->
aiOvÊ
[0];

7194 
j
=0; j<
limô
; j++){

7195 
b
.
≠Cñl
[b.
nCñl
] = 
aD©a
 + (
maskPage
 & 
	`gë2byãAlig√d
(
piCñl
));

7196 
piCñl
 += 2;

7197 
b
.
nCñl
++;

7199 
k
=0; k<
pOld
->
nOvîÊow
; k++){

7200 
	`as£π
–
k
==0 || 
pOld
->
aiOvÊ
[k-1]+1==pOld->aiOvfl[k] );

7201 
b
.
≠Cñl
[b.
nCñl
] = 
pOld
->
≠OvÊ
[
k
];

7202 
b
.
nCñl
++;

7205 
piEnd
 = 
aD©a
 + 
pOld
->
˚ŒOff£t
 + 2*pOld->
nCñl
;

7206  
piCñl
<
piEnd
 ){

7207 
	`as£π
–
b
.
nCñl
<
nMaxCñls
 );

7208 
b
.
≠Cñl
[b.
nCñl
] = 
aD©a
 + (
maskPage
 & 
	`gë2byãAlig√d
(
piCñl
));

7209 
piCñl
 += 2;

7210 
b
.
nCñl
++;

7213 
˙tOld
[
i
] = 
b
.
nCñl
;

7214 if–
i
<
nOld
-1 && !
ÀafD©a
){

7215 
u16
 
sz
 = (u16)
szNew
[
i
];

7216 
u8
 *
pTemp
;

7217 
	`as£π
–
b
.
nCñl
<
nMaxCñls
 );

7218 
b
.
szCñl
[b.
nCñl
] = 
sz
;

7219 
pTemp
 = &
aS∑˚1
[
iS∑˚1
];

7220 
iS∑˚1
 +
sz
;

7221 
	`as£π
–
sz
<=
pBt
->
maxLoˇl
+23 );

7222 
	`as£π
–
iS∑˚1
 <()
pBt
->
∑geSize
 );

7223 
	`mem˝y
(
pTemp
, 
≠Div
[
i
], 
sz
);

7224 
b
.
≠Cñl
[b.
nCñl
] = 
pTemp
+
ÀafC‹ª˘i⁄
;

7225 
	`as£π
–
ÀafC‹ª˘i⁄
==0 ||ÜeafCorrection==4 );

7226 
b
.
szCñl
[b.
nCñl
] = b.szCñl[b.nCñl] - 
ÀafC‹ª˘i⁄
;

7227 if–!
pOld
->
Àaf
 ){

7228 
	`as£π
–
ÀafC‹ª˘i⁄
==0 );

7229 
	`as£π
–
pOld
->
hdrOff£t
==0 );

7232 
	`mem˝y
(
b
.
≠Cñl
[b.
nCñl
], &
pOld
->
aD©a
[8], 4);

7234 
	`as£π
–
ÀafC‹ª˘i⁄
==4 );

7235  
b
.
szCñl
[b.
nCñl
]<4 ){

7238 
	`as£π
–
b
.
szCñl
[b.
nCñl
]==3 || 
CORRUPT_DB
 );

7239 
	`as£π
–
b
.
≠Cñl
[b.
nCñl
]==&
aS∑˚1
[
iS∑˚1
-3] || 
CORRUPT_DB
 );

7240 
aS∑˚1
[
iS∑˚1
++] = 0x00;

7241 
b
.
szCñl
[b.
nCñl
]++;

7244 
b
.
nCñl
++;

7264 
ußbÀS∑˚
 = 
pBt
->
ußbÀSize
 - 12 + 
ÀafC‹ª˘i⁄
;

7265 
i
=0; i<
nOld
; i++){

7266 
MemPage
 *
p
 = 
≠Old
[
i
];

7267 
szNew
[
i
] = 
ußbÀS∑˚
 - 
p
->
nFªe
;

7268 if–
szNew
[
i
]<0 ){ 
rc
 = 
SQLITE_CORRUPT_BKPT
; 
bÆ™˚_˛ónup
; }

7269 
j
=0; j<
p
->
nOvîÊow
; j++){

7270 
szNew
[
i
] +2 + 
p
->
	`xCñlSize
’,Ö->
≠OvÊ
[
j
]);

7272 
˙tNew
[
i
] = 
˙tOld
[i];

7274 
k
 = 
nOld
;

7275 
i
=0; i<
k
; i++){

7276 
sz
;

7277  
szNew
[
i
]>
ußbÀS∑˚
 ){

7278 if–
i
+1>=
k
 ){

7279 
k
 = 
i
+2;

7280 if–
k
>
NB
+2 ){ 
rc
 = 
SQLITE_CORRUPT_BKPT
; 
bÆ™˚_˛ónup
; }

7281 
szNew
[
k
-1] = 0;

7282 
˙tNew
[
k
-1] = 
b
.
nCñl
;

7284 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]-1);

7285 
szNew
[
i
] -
sz
;

7286 if–!
ÀafD©a
 ){

7287 if–
˙tNew
[
i
]<
b
.
nCñl
 ){

7288 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7290 
sz
 = 0;

7293 
szNew
[
i
+1] +
sz
;

7294 
˙tNew
[
i
]--;

7296  
˙tNew
[
i
]<
b
.
nCñl
 ){

7297 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7298 if–
szNew
[
i
]+
sz
>
ußbÀS∑˚
 ) ;

7299 
szNew
[
i
] +
sz
;

7300 
˙tNew
[
i
]++;

7301 if–!
ÀafD©a
 ){

7302 if–
˙tNew
[
i
]<
b
.
nCñl
 ){

7303 
sz
 = 2 + 
	`ˇchedCñlSize
(&
b
, 
˙tNew
[
i
]);

7305 
sz
 = 0;

7308 
szNew
[
i
+1] -
sz
;

7310 if–
˙tNew
[
i
]>=
b
.
nCñl
 ){

7311 
k
 = 
i
+1;

7312 }if–
˙tNew
[
i
] <= (i>0 ? cntNew[i-1] : 0) ){

7313 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7314 
bÆ™˚_˛ónup
;

7329 
i
=
k
-1; i>0; i--){

7330 
szRight
 = 
szNew
[
i
];

7331 
szLe·
 = 
szNew
[
i
-1];

7332 
r
;

7333 
d
;

7335 
r
 = 
˙tNew
[
i
-1] - 1;

7336 
d
 = 
r
 + 1 - 
ÀafD©a
;

7337 ()
	`ˇchedCñlSize
(&
b
, 
d
);

7339 
	`as£π
–
d
<
nMaxCñls
 );

7340 
	`as£π
–
r
<
nMaxCñls
 );

7341 ()
	`ˇchedCñlSize
(&
b
, 
r
);

7342 if–
szRight
!=0

7343 && (
bBulk
 || 
szRight
+
b
.
szCñl
[
d
]+2 > 
szLe·
-(b.szCñl[
r
]+(
i
==
k
-1?0:2)))){

7346 
szRight
 +
b
.
szCñl
[
d
] + 2;

7347 
szLe·
 -
b
.
szCñl
[
r
] + 2;

7348 
˙tNew
[
i
-1] = 
r
;

7349 
r
--;

7350 
d
--;

7351 } 
r
>=0 );

7352 
szNew
[
i
] = 
szRight
;

7353 
szNew
[
i
-1] = 
szLe·
;

7354 if–
˙tNew
[
i
-1] <= (i>1 ? cntNew[i-2] : 0) ){

7355 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7356 
bÆ™˚_˛ónup
;

7367 
	`as£π
–
˙tNew
[0]>0 || (
pP¨ít
->
pgno
==1 &&ÖP¨ít->
nCñl
==0Ë|| 
CORRUPT_DB
);

7368 
	`TRACE
(("BALANCE: old: %d(nc=%d) %d(nc=%d) %d(nc=%d)\n",

7369 
≠Old
[0]->
pgno
,ápOld[0]->
nCñl
,

7370 
nOld
>=2 ? 
≠Old
[1]->
pgno
 : 0,ÇOld>=2 ?ápOld[1]->
nCñl
 : 0,

7371 
nOld
>=3 ? 
≠Old
[2]->
pgno
 : 0,ÇOld>=3 ?ápOld[2]->
nCñl
 : 0

7377 
∑geFœgs
 = 
≠Old
[0]->
aD©a
[0];

7378 
i
=0; i<
k
; i++){

7379 
MemPage
 *
pNew
;

7380 if–
i
<
nOld
 ){

7381 
pNew
 = 
≠New
[
i
] = 
≠Old
[i];

7382 
≠Old
[
i
] = 0;

7383 
rc
 = 
	`sqlôe3PagîWrôe
(
pNew
->
pDbPage
);

7384 
nNew
++;

7385 if–
rc
 ) 
bÆ™˚_˛ónup
;

7387 
	`as£π
–
i
>0 );

7388 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pNew
, &
pgno
, (
bBulk
 ? 1 :Ögno), 0);

7389 if–
rc
 ) 
bÆ™˚_˛ónup
;

7390 
	`zîoPage
(
pNew
, 
∑geFœgs
);

7391 
≠New
[
i
] = 
pNew
;

7392 
nNew
++;

7393 
˙tOld
[
i
] = 
b
.
nCñl
;

7396 if–
ISAUTOVACUUM
 ){

7397 
	`±rm≠Put
(
pBt
, 
pNew
->
pgno
, 
PTRMAP_BTREE
, 
pP¨ít
->pgno, &
rc
);

7398 if–
rc
!=
SQLITE_OK
 ){

7399 
bÆ™˚_˛ónup
;

7417 
i
=0; i<
nNew
; i++){

7418 
aPgOrdî
[
i
] = 
aPgno
[i] = 
≠New
[i]->
pgno
;

7419 
aPgFœgs
[
i
] = 
≠New
[i]->
pDbPage
->
Êags
;

7420 
j
=0; j<
i
; j++){

7421 if–
aPgno
[
j
]=˜Pgno[
i
] ){

7428 
	`as£π
–
CORRUPT_DB
 );

7429 
rc
 = 
SQLITE_CORRUPT_BKPT
;

7430 
bÆ™˚_˛ónup
;

7434 
i
=0; i<
nNew
; i++){

7435 
iBe°
 = 0;

7436 
j
=1; j<
nNew
; j++){

7437 if–
aPgOrdî
[
j
]<aPgOrdî[
iBe°
] ) iBest = j;

7439 
pgno
 = 
aPgOrdî
[
iBe°
];

7440 
aPgOrdî
[
iBe°
] = 0xffffffff;

7441 if–
iBe°
!=
i
 ){

7442 if–
iBe°
>
i
 ){

7443 
	`sqlôe3PagîRekey
(
≠New
[
iBe°
]->
pDbPage
, 
pBt
->
nPage
+iBest+1, 0);

7445 
	`sqlôe3PagîRekey
(
≠New
[
i
]->
pDbPage
, 
pgno
, 
aPgFœgs
[
iBe°
]);

7446 
≠New
[
i
]->
pgno
 =Ögno;

7450 
	`TRACE
(("BALANCE:Çew: %d(%dÇc=%d) %d(%dÇc=%d) %d(%dÇc=%d) "

7452 
≠New
[0]->
pgno
, 
szNew
[0], 
˙tNew
[0],

7453 
nNew
>=2 ? 
≠New
[1]->
pgno
 : 0,ÇNew>=2 ? 
szNew
[1] : 0,

7454 
nNew
>=2 ? 
˙tNew
[1] - c¡New[0] - !
ÀafD©a
 : 0,

7455 
nNew
>=3 ? 
≠New
[2]->
pgno
 : 0,ÇNew>=3 ? 
szNew
[2] : 0,

7456 
nNew
>=3 ? 
˙tNew
[2] - c¡New[1] - !
ÀafD©a
 : 0,

7457 
nNew
>=4 ? 
≠New
[3]->
pgno
 : 0,ÇNew>=4 ? 
szNew
[3] : 0,

7458 
nNew
>=4 ? 
˙tNew
[3] - c¡New[2] - !
ÀafD©a
 : 0,

7459 
nNew
>=5 ? 
≠New
[4]->
pgno
 : 0,ÇNew>=5 ? 
szNew
[4] : 0,

7460 
nNew
>=5 ? 
˙tNew
[4] - c¡New[3] - !
ÀafD©a
 : 0

7463 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7464 
	`put4byã
(
pRight
, 
≠New
[
nNew
-1]->
pgno
);

7469 if–(
∑geFœgs
 & 
PTF_LEAF
)==0 && 
nOld
!=
nNew
 ){

7470 
MemPage
 *
pOld
 = (
nNew
>
nOld
 ? 
≠New
 : 
≠Old
)[nOld-1];

7471 
	`mem˝y
(&
≠New
[
nNew
-1]->
aD©a
[8], &
pOld
->aData[8], 4);

7490 if–
ISAUTOVACUUM
 ){

7491 
MemPage
 *
pNew
 = 
≠New
[0];

7492 
u8
 *
aOld
 = 
pNew
->
aD©a
;

7493 
˙tOldNext
 = 
pNew
->
nCñl
 +ÖNew->
nOvîÊow
;

7494 
ußbÀSize
 = 
pBt
->usableSize;

7495 
iNew
 = 0;

7496 
iOld
 = 0;

7498 
i
=0; i<
b
.
nCñl
; i++){

7499 
u8
 *
pCñl
 = 
b
.
≠Cñl
[
i
];

7500 if–
i
==
˙tOldNext
 ){

7501 
MemPage
 *
pOld
 = (++
iOld
)<
nNew
 ? 
≠New
[iOld] : 
≠Old
[iOld];

7502 
˙tOldNext
 +
pOld
->
nCñl
 +ÖOld->
nOvîÊow
 + !
ÀafD©a
;

7503 
aOld
 = 
pOld
->
aD©a
;

7505 if–
i
==
˙tNew
[
iNew
] ){

7506 
pNew
 = 
≠New
[++
iNew
];

7507 if–!
ÀafD©a
 ) ;

7516 if–
iOld
>=
nNew


7517 || 
pNew
->
pgno
!=
aPgno
[
iOld
]

7518 || !
	`SQLITE_WITHIN
(
pCñl
,
aOld
,&aOld[
ußbÀSize
])

7520 if–!
ÀafC‹ª˘i⁄
 ){

7521 
	`±rm≠Put
(
pBt
, 
	`gë4byã
(
pCñl
), 
PTRMAP_BTREE
, 
pNew
->
pgno
, &
rc
);

7523 if–
	`ˇchedCñlSize
(&
b
,
i
)>
pNew
->
möLoˇl
 ){

7524 
	`±rm≠PutOvÊPå
(
pNew
, 
pCñl
, &
rc
);

7526 if–
rc
 ) 
bÆ™˚_˛ónup
;

7532 
i
=0; i<
nNew
-1; i++){

7533 
u8
 *
pCñl
;

7534 
u8
 *
pTemp
;

7535 
sz
;

7536 
MemPage
 *
pNew
 = 
≠New
[
i
];

7537 
j
 = 
˙tNew
[
i
];

7539 
	`as£π
–
j
<
nMaxCñls
 );

7540 
	`as£π
–
b
.
≠Cñl
[
j
]!=0 );

7541 
pCñl
 = 
b
.
≠Cñl
[
j
];

7542 
sz
 = 
b
.
szCñl
[
j
] + 
ÀafC‹ª˘i⁄
;

7543 
pTemp
 = &
aOvÊS∑˚
[
iOvÊS∑˚
];

7544 if–!
pNew
->
Àaf
 ){

7545 
	`mem˝y
(&
pNew
->
aD©a
[8], 
pCñl
, 4);

7546 }if–
ÀafD©a
 ){

7552 
CñlInfo
 
öfo
;

7553 
j
--;

7554 
pNew
->
	`xP¨£Cñl
’New, 
b
.
≠Cñl
[
j
], &
öfo
);

7555 
pCñl
 = 
pTemp
;

7556 
sz
 = 4 + 
	`putV¨öt
(&
pCñl
[4], 
öfo
.
nKey
);

7557 
pTemp
 = 0;

7559 
pCñl
 -= 4;

7571 if–
b
.
szCñl
[
j
]==4 ){

7572 
	`as£π
(
ÀafC‹ª˘i⁄
==4);

7573 
sz
 = 
pP¨ít
->
	`xCñlSize
’P¨ít, 
pCñl
);

7576 
iOvÊS∑˚
 +
sz
;

7577 
	`as£π
–
sz
<=
pBt
->
maxLoˇl
+23 );

7578 
	`as£π
–
iOvÊS∑˚
 <()
pBt
->
∑geSize
 );

7579 
	`ö£πCñl
(
pP¨ít
, 
nxDiv
+
i
, 
pCñl
, 
sz
, 
pTemp
, 
pNew
->
pgno
, &
rc
);

7580 if–
rc
!=
SQLITE_OK
 ) 
bÆ™˚_˛ónup
;

7581 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pP¨ít
->
pDbPage
) );

7606 
i
=1-
nNew
; i<nNew; i++){

7607 
iPg
 = 
i
<0 ? -i : i;

7608 
	`as£π
–
iPg
>=0 && iPg<
nNew
 );

7609 if–
abD⁄e
[
iPg
] ) ;

7610 if–
i
>=0

7611 || 
˙tOld
[
iPg
-1]>=
˙tNew
[iPg-1]

7613 
iNew
;

7614 
iOld
;

7615 
nNewCñl
;

7619 
	`as£π
–
iPg
==0 || 
˙tOld
[iPg-1]>=
˙tNew
[iPg-1] || 
abD⁄e
[iPg-1] );

7623 
	`as£π
–
˙tNew
[
iPg
]>=
˙tOld
[iPg] || 
abD⁄e
[iPg+1] );

7625 if–
iPg
==0 ){

7626 
iNew
 = 
iOld
 = 0;

7627 
nNewCñl
 = 
˙tNew
[0];

7629 
iOld
 = 
iPg
<
nOld
 ? (
˙tOld
[iPg-1] + !
ÀafD©a
Ë: 
b
.
nCñl
;

7630 
iNew
 = 
˙tNew
[
iPg
-1] + !
ÀafD©a
;

7631 
nNewCñl
 = 
˙tNew
[
iPg
] - 
iNew
;

7634 
rc
 = 
	`edôPage
(
≠New
[
iPg
], 
iOld
, 
iNew
, 
nNewCñl
, &
b
);

7635 if–
rc
 ) 
bÆ™˚_˛ónup
;

7636 
abD⁄e
[
iPg
]++;

7637 
≠New
[
iPg
]->
nFªe
 = 
ußbÀS∑˚
-
szNew
[iPg];

7638 
	`as£π
–
≠New
[
iPg
]->
nOvîÊow
==0 );

7639 
	`as£π
–
≠New
[
iPg
]->
nCñl
==
nNewCñl
 );

7644 
	`as£π
–
	`memcmp
(
abD⁄e
, "\01\01\01\01\01", 
nNew
)==0 );

7646 
	`as£π
–
nOld
>0 );

7647 
	`as£π
–
nNew
>0 );

7649 if–
isRoŸ
 && 
pP¨ít
->
nCñl
==0 &&ÖP¨ít->
hdrOff£t
<=
≠New
[0]->
nFªe
 ){

7665 
	`as£π
–
nNew
==1 || 
CORRUPT_DB
 );

7666 
rc
 = 
	`de‰agmítPage
(
≠New
[0]);

7667 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

7668 
	`as£π
–
≠New
[0]->
nFªe
 ==

7669 (
	`gë2byã
(&
≠New
[0]->
aD©a
[5])-≠New[0]->
˚ŒOff£t
-≠New[0]->
nCñl
*2)

7670 || 
rc
!=
SQLITE_OK


7672 
	`c›yNodeC⁄ã¡
(
≠New
[0], 
pP¨ít
, &
rc
);

7673 
	`‰ìPage
(
≠New
[0], &
rc
);

7674 }if–
ISAUTOVACUUM
 && !
ÀafC‹ª˘i⁄
 ){

7678 
i
=0; i<
nNew
; i++){

7679 
u32
 
key
 = 
	`gë4byã
(&
≠New
[
i
]->
aD©a
[8]);

7680 
	`±rm≠Put
(
pBt
, 
key
, 
PTRMAP_BTREE
, 
≠New
[
i
]->
pgno
, &
rc
);

7684 
	`as£π
–
pP¨ít
->
isInô
 );

7685 
	`TRACE
(("BALANCE: finished: old=%dÇew=%d cells=%d\n",

7686 
nOld
, 
nNew
, 
b
.
nCñl
));

7690 
i
=
nNew
; i<
nOld
; i++){

7691 
	`‰ìPage
(
≠Old
[
i
], &
rc
);

7695 if–
ISAUTOVACUUM
 && 
rc
==
SQLITE_OK
 && 
≠New
[0]->
isInô
 ){

7700 
	`±rm≠CheckPages
(
≠New
, 
nNew
);

7701 
	`±rm≠CheckPages
(&
pP¨ít
, 1);

7708 
bÆ™˚_˛ónup
:

7709 
	`sqlôe3S¸©chFªe
(
b
.
≠Cñl
);

7710 
i
=0; i<
nOld
; i++){

7711 
	`ªÀa£Page
(
≠Old
[
i
]);

7713 
i
=0; i<
nNew
; i++){

7714 
	`ªÀa£Page
(
≠New
[
i
]);

7717  
rc
;

7718 
	}
}

7740 
	$bÆ™˚_dì≥r
(
MemPage
 *
pRoŸ
, MemPagê**
µChûd
){

7741 
rc
;

7742 
MemPage
 *
pChûd
 = 0;

7743 
Pgno
 
pgnoChûd
 = 0;

7744 
BtSh¨ed
 *
pBt
 = 
pRoŸ
->pBt;

7746 
	`as£π
–
pRoŸ
->
nOvîÊow
>0 );

7747 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

7753 
rc
 = 
	`sqlôe3PagîWrôe
(
pRoŸ
->
pDbPage
);

7754 if–
rc
==
SQLITE_OK
 ){

7755 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
,&
pChûd
,&
pgnoChûd
,
pRoŸ
->
pgno
,0);

7756 
	`c›yNodeC⁄ã¡
(
pRoŸ
, 
pChûd
, &
rc
);

7757 if–
ISAUTOVACUUM
 ){

7758 
	`±rm≠Put
(
pBt
, 
pgnoChûd
, 
PTRMAP_BTREE
, 
pRoŸ
->
pgno
, &
rc
);

7761 if–
rc
 ){

7762 *
µChûd
 = 0;

7763 
	`ªÀa£Page
(
pChûd
);

7764  
rc
;

7766 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pChûd
->
pDbPage
) );

7767 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pRoŸ
->
pDbPage
) );

7768 
	`as£π
–
pChûd
->
nCñl
==
pRoŸ
->nCell );

7770 
	`TRACE
(("BALANCE: c›yÑoŸ %d i¡ÿ%d\n", 
pRoŸ
->
pgno
, 
pChûd
->pgno));

7773 
	`mem˝y
(
pChûd
->
aiOvÊ
, 
pRoŸ
->aiOvfl,

7774 
pRoŸ
->
nOvîÊow
*’RoŸ->
aiOvÊ
[0]));

7775 
	`mem˝y
(
pChûd
->
≠OvÊ
, 
pRoŸ
->apOvfl,

7776 
pRoŸ
->
nOvîÊow
*’RoŸ->
≠OvÊ
[0]));

7777 
pChûd
->
nOvîÊow
 = 
pRoŸ
->nOverflow;

7780 
	`zîoPage
(
pRoŸ
, 
pChûd
->
aD©a
[0] & ~
PTF_LEAF
);

7781 
	`put4byã
(&
pRoŸ
->
aD©a
[pRoŸ->
hdrOff£t
+8], 
pgnoChûd
);

7783 *
µChûd
 = 
pChûd
;

7784  
SQLITE_OK
;

7785 
	}
}

7797 
	$bÆ™˚
(
BtCurs‹
 *
pCur
){

7798 
rc
 = 
SQLITE_OK
;

7799 c⁄° 
nMö
 = 
pCur
->
pBt
->
ußbÀSize
 * 2 / 3;

7800 
u8
 
aBÆ™˚QuickS∑˚
[13];

7801 
u8
 *
pFªe
 = 0;

7803 
	`VVA_ONLY
–
bÆ™˚_quick_ˇŒed
 = 0 );

7804 
	`VVA_ONLY
–
bÆ™˚_dì≥r_ˇŒed
 = 0 );

7807 
iPage
 = 
pCur
->iPage;

7808 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[
iPage
];

7810 if–
iPage
==0 ){

7811 if–
pPage
->
nOvîÊow
 ){

7817 
	`as£π
–
bÆ™˚_dì≥r_ˇŒed
==0 );

7818 
	`VVA_ONLY
–
bÆ™˚_dì≥r_ˇŒed
++ );

7819 
rc
 = 
	`bÆ™˚_dì≥r
(
pPage
, &
pCur
->
≠Page
[1]);

7820 if–
rc
==
SQLITE_OK
 ){

7821 
pCur
->
iPage
 = 1;

7822 
pCur
->
aiIdx
[0] = 0;

7823 
pCur
->
aiIdx
[1] = 0;

7824 
	`as£π
–
pCur
->
≠Page
[1]->
nOvîÊow
 );

7829 }if–
pPage
->
nOvîÊow
==0 &&ÖPage->
nFªe
<=
nMö
 ){

7832 
MemPage
 * c⁄° 
pP¨ít
 = 
pCur
->
≠Page
[
iPage
-1];

7833 c⁄° 
iIdx
 = 
pCur
->
aiIdx
[
iPage
-1];

7835 
rc
 = 
	`sqlôe3PagîWrôe
(
pP¨ít
->
pDbPage
);

7836 if–
rc
==
SQLITE_OK
 ){

7837 #i‚de‡
SQLITE_OMIT_QUICKBALANCE


7838 if–
pPage
->
ötKeyLóf


7839 && 
pPage
->
nOvîÊow
==1

7840 && 
pPage
->
aiOvÊ
[0]=ıPage->
nCñl


7841 && 
pP¨ít
->
pgno
!=1

7842 && 
pP¨ít
->
nCñl
==
iIdx


7857 
	`as£π
–
bÆ™˚_quick_ˇŒed
==0 );

7858 
	`VVA_ONLY
–
bÆ™˚_quick_ˇŒed
++ );

7859 
rc
 = 
	`bÆ™˚_quick
(
pP¨ít
, 
pPage
, 
aBÆ™˚QuickS∑˚
);

7880 
u8
 *
pS∑˚
 = 
	`sqlôe3PageMÆloc
(
pCur
->
pBt
->
∑geSize
);

7881 
rc
 = 
	`bÆ™˚_n⁄roŸ
(
pP¨ít
, 
iIdx
, 
pS∑˚
, 
iPage
==1,

7882 
pCur
->
höts
&
BTREE_BULKLOAD
);

7883 if–
pFªe
 ){

7888 
	`sqlôe3PageFªe
(
pFªe
);

7894 
pFªe
 = 
pS∑˚
;

7898 
pPage
->
nOvîÊow
 = 0;

7901 
	`ªÀa£Page
(
pPage
);

7902 
pCur
->
iPage
--;

7903 
	`as£π
–
pCur
->
iPage
>=0 );

7905 } 
rc
==
SQLITE_OK
 );

7907 if–
pFªe
 ){

7908 
	`sqlôe3PageFªe
(
pFªe
);

7910  
rc
;

7911 
	}
}

7942 
	$sqlôe3BåìIn£π
(

7943 
BtCurs‹
 *
pCur
,

7944 c⁄° 
BåìPaylﬂd
 *
pX
,

7945 
≠≥ndBüs
,

7946 
£ekResu…


7948 
rc
;

7949 
loc
 = 
£ekResu…
;

7950 
szNew
 = 0;

7951 
idx
;

7952 
MemPage
 *
pPage
;

7953 
Båì
 *
p
 = 
pCur
->
pBåì
;

7954 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

7955 *
ﬁdCñl
;

7956 *
√wCñl
 = 0;

7958 if–
pCur
->
eSèã
==
CURSOR_FAULT
 ){

7959 
	`as£π
–
pCur
->
skùNext
!=
SQLITE_OK
 );

7960  
pCur
->
skùNext
;

7963 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

7964 
	`as£π
–(
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
)!=0

7965 && 
pBt
->
öTønß˘i⁄
==
TRANS_WRITE


7966 && (
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

7967 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
pCur
->
pgnoRoŸ
,ÖCur->
pKeyInfo
!=0, 2) );

7974 
	`as£π
–(
pX
->
pKey
==0)==(
pCur
->
pKeyInfo
==0) );

7987 if–
pCur
->
curFœgs
 & 
BTCF_Mu…ùÀ
 ){

7988 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 
pCur
->
pgnoRoŸ
,ÖCur);

7989 if–
rc
 ) Ñc;

7992 if–
pCur
->
pKeyInfo
==0 ){

7993 
	`as£π
–
pX
->
pKey
==0 );

7996 
	`övÆid©eIn¸blobCurs‹s
(
p
, 
pX
->
nKey
, 0);

8001 if–(
pCur
->
curFœgs
&
BTCF_VÆidNKey
)!=0 && 
pX
->
nKey
>0

8002 && 
pCur
->
öfo
.
nKey
==
pX
->nKey-1 ){

8003 
loc
 = -1;

8004 }if–
loc
==0 ){

8005 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCur
, 0, 
pX
->
nKey
, 
≠≥ndBüs
, &
loc
);

8006 if–
rc
 ) Ñc;

8008 }if–
loc
==0 ){

8009 
rc
 = 
	`båìMovëo
(
pCur
, 
pX
->
pKey
,ÖX->
nKey
, 
≠≥ndBüs
, &
loc
);

8010 if–
rc
 ) Ñc;

8012 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 || (pCur->eSèã==
CURSOR_INVALID
 && 
loc
) );

8014 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8015 
	`as£π
–
pPage
->
ötKey
 || 
pX
->
nKey
>=0 );

8016 
	`as£π
–
pPage
->
Àaf
 || !pPage->
ötKey
 );

8018 
	`TRACE
(("INSERT:Åable=%dÇkey=%lldÇdata=%dÖage=%d %s\n",

8019 
pCur
->
pgnoRoŸ
, 
pX
->
nKey
,ÖX->
nD©a
, 
pPage
->
pgno
,

8020 
loc
==0 ? "overwrite" : "newÉntry"));

8021 
	`as£π
–
pPage
->
isInô
 );

8022 
√wCñl
 = 
pBt
->
pTmpS∑˚
;

8023 
	`as£π
–
√wCñl
!=0 );

8024 
rc
 = 
	`fûlInCñl
(
pPage
, 
√wCñl
, 
pX
, &
szNew
);

8025 if–
rc
 ) 
íd_ö£π
;

8026 
	`as£π
–
szNew
==
pPage
->
	`xCñlSize
’Page, 
√wCñl
) );

8027 
	`as£π
–
szNew
 <
	`MX_CELL_SIZE
(
pBt
) );

8028 
idx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

8029 if–
loc
==0 ){

8030 
u16
 
szOld
;

8031 
	`as£π
–
idx
<
pPage
->
nCñl
 );

8032 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

8033 if–
rc
 ){

8034 
íd_ö£π
;

8036 
ﬁdCñl
 = 
	`födCñl
(
pPage
, 
idx
);

8037 if–!
pPage
->
Àaf
 ){

8038 
	`mem˝y
(
√wCñl
, 
ﬁdCñl
, 4);

8040 
rc
 = 
	`˛órCñl
(
pPage
, 
ﬁdCñl
, &
szOld
);

8041 
	`dr›Cñl
(
pPage
, 
idx
, 
szOld
, &
rc
);

8042 if–
rc
 ) 
íd_ö£π
;

8043 }if–
loc
<0 && 
pPage
->
nCñl
>0 ){

8044 
	`as£π
–
pPage
->
Àaf
 );

8045 
idx
 = ++
pCur
->
aiIdx
[pCur->
iPage
];

8047 
	`as£π
–
pPage
->
Àaf
 );

8049 
	`ö£πCñl
(
pPage
, 
idx
, 
√wCñl
, 
szNew
, 0, 0, &
rc
);

8050 
	`as£π
–
pPage
->
nOvîÊow
==0 || 
rc
==
SQLITE_OK
 );

8051 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPage
->
nCñl
>0 ||ÖPage->
nOvîÊow
>0 );

8073 
pCur
->
öfo
.
nSize
 = 0;

8074 if–
pPage
->
nOvîÊow
 ){

8075 
	`as£π
–
rc
==
SQLITE_OK
 );

8076 
pCur
->
curFœgs
 &~(
BTCF_VÆidNKey
);

8077 
rc
 = 
	`bÆ™˚
(
pCur
);

8083 
pCur
->
≠Page
[pCur->
iPage
]->
nOvîÊow
 = 0;

8084 
pCur
->
eSèã
 = 
CURSOR_INVALID
;

8086 
	`as£π
–
pCur
->
≠Page
[pCur->
iPage
]->
nOvîÊow
==0 );

8088 
íd_ö£π
:

8089  
rc
;

8090 
	}
}

8109 
	$sqlôe3BåìDñëe
(
BtCurs‹
 *
pCur
, 
u8
 
Êags
){

8110 
Båì
 *
p
 = 
pCur
->
pBåì
;

8111 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8112 
rc
;

8113 
MemPage
 *
pPage
;

8114 *
pCñl
;

8115 
iCñlIdx
;

8116 
iCñlDïth
;

8117 
u16
 
szCñl
;

8118 
bSkù√xt
 = 0;

8119 
u8
 
bPª£rve
 = 
Êags
 & 
BTREE_SAVEPOSITION
;

8121 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pCur
) );

8122 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

8123 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

8124 
	`as£π
–
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
 );

8125 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
p
, 
pCur
->
pgnoRoŸ
,ÖCur->
pKeyInfo
!=0, 2) );

8126 
	`as£π
–!
	`hasRódC⁄Êi˘s
(
p
, 
pCur
->
pgnoRoŸ
) );

8127 
	`as£π
–
pCur
->
aiIdx
[pCur->
iPage
]<pCur->
≠Page
[pCur->iPage]->
nCñl
 );

8128 
	`as£π
–
pCur
->
eSèã
==
CURSOR_VALID
 );

8129 
	`as£π
–(
Êags
 & ~(
BTREE_SAVEPOSITION
 | 
BTREE_AUXDELETE
))==0 );

8131 
iCñlDïth
 = 
pCur
->
iPage
;

8132 
iCñlIdx
 = 
pCur
->
aiIdx
[
iCñlDïth
];

8133 
pPage
 = 
pCur
->
≠Page
[
iCñlDïth
];

8134 
pCñl
 = 
	`födCñl
(
pPage
, 
iCñlIdx
);

8145 if–
bPª£rve
 ){

8146 if–!
pPage
->
Àaf


8147 || (
pPage
->
nFªe
+
	`˚ŒSizePå
’Page,
pCñl
)+2)>()(
pBt
->
ußbÀSize
*2/3)

8151 
rc
 = 
	`ßveCurs‹Key
(
pCur
);

8152 if–
rc
 ) Ñc;

8154 
bSkù√xt
 = 1;

8165 if–!
pPage
->
Àaf
 ){

8166 
nŸU£d
 = 0;

8167 
rc
 = 
	`sqlôe3BåìPªvious
(
pCur
, &
nŸU£d
);

8168 if–
rc
 ) Ñc;

8173 if–
pCur
->
curFœgs
 & 
BTCF_Mu…ùÀ
 ){

8174 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 
pCur
->
pgnoRoŸ
,ÖCur);

8175 if–
rc
 ) Ñc;

8180 if–
pCur
->
pKeyInfo
==0 ){

8181 
	`övÆid©eIn¸blobCurs‹s
(
p
, 
pCur
->
öfo
.
nKey
, 0);

8187 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
);

8188 if–
rc
 ) Ñc;

8189 
rc
 = 
	`˛órCñl
(
pPage
, 
pCñl
, &
szCñl
);

8190 
	`dr›Cñl
(
pPage
, 
iCñlIdx
, 
szCñl
, &
rc
);

8191 if–
rc
 ) Ñc;

8198 if–!
pPage
->
Àaf
 ){

8199 
MemPage
 *
pLóf
 = 
pCur
->
≠Page
[pCur->
iPage
];

8200 
nCñl
;

8201 
Pgno
 
n
 = 
pCur
->
≠Page
[
iCñlDïth
+1]->
pgno
;

8202 *
pTmp
;

8204 
pCñl
 = 
	`födCñl
(
pLóf
,ÖLóf->
nCñl
-1);

8205 if–
pCñl
<&
pLóf
->
aD©a
[4] )  
SQLITE_CORRUPT_BKPT
;

8206 
nCñl
 = 
pLóf
->
	`xCñlSize
’Lóf, 
pCñl
);

8207 
	`as£π
–
	`MX_CELL_SIZE
(
pBt
Ë>
nCñl
 );

8208 
pTmp
 = 
pBt
->
pTmpS∑˚
;

8209 
	`as£π
–
pTmp
!=0 );

8210 
rc
 = 
	`sqlôe3PagîWrôe
(
pLóf
->
pDbPage
);

8211 if–
rc
==
SQLITE_OK
 ){

8212 
	`ö£πCñl
(
pPage
, 
iCñlIdx
, 
pCñl
-4, 
nCñl
+4, 
pTmp
, 
n
, &
rc
);

8214 
	`dr›Cñl
(
pLóf
,ÖLóf->
nCñl
-1,ÇCñl, &
rc
);

8215 if–
rc
 ) Ñc;

8233 
rc
 = 
	`bÆ™˚
(
pCur
);

8234 if–
rc
==
SQLITE_OK
 && 
pCur
->
iPage
>
iCñlDïth
 ){

8235  
pCur
->
iPage
>
iCñlDïth
 ){

8236 
	`ªÀa£Page
(
pCur
->
≠Page
[pCur->
iPage
--]);

8238 
rc
 = 
	`bÆ™˚
(
pCur
);

8241 if–
rc
==
SQLITE_OK
 ){

8242 if–
bSkù√xt
 ){

8243 
	`as£π
–
bPª£rve
 && (
pCur
->
iPage
==
iCñlDïth
 || 
CORRUPT_DB
) );

8244 
	`as£π
–
pPage
==
pCur
->
≠Page
[pCur->
iPage
] || 
CORRUPT_DB
 );

8245 
	`as£π
–(
pPage
->
nCñl
>0 || 
CORRUPT_DB
Ë&& 
iCñlIdx
<=pPage->nCell );

8246 
pCur
->
eSèã
 = 
CURSOR_SKIPNEXT
;

8247 if–
iCñlIdx
>=
pPage
->
nCñl
 ){

8248 
pCur
->
skùNext
 = -1;

8249 
pCur
->
aiIdx
[
iCñlDïth
] = 
pPage
->
nCñl
-1;

8251 
pCur
->
skùNext
 = 1;

8254 
rc
 = 
	`moveToRoŸ
(
pCur
);

8255 if–
bPª£rve
 ){

8256 
pCur
->
eSèã
 = 
CURSOR_REQUIRESEEK
;

8260  
rc
;

8261 
	}
}

8274 
	$båìCª©eTabÀ
(
Båì
 *
p
, *
piTabÀ
, 
¸óãTabFœgs
){

8275 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8276 
MemPage
 *
pRoŸ
;

8277 
Pgno
 
pgnoRoŸ
;

8278 
rc
;

8279 
±fFœgs
;

8281 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

8282 
	`as£π
–
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

8283 
	`as£π
–(
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0 );

8285 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8286 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pRoŸ
, &
pgnoRoŸ
, 1, 0);

8287 if–
rc
 ){

8288  
rc
;

8291 if–
pBt
->
autoVacuum
 ){

8292 
Pgno
 
pgnoMove
;

8293 
MemPage
 *
pPageMove
;

8300 
	`övÆid©eAŒOvîÊowCache
(
pBt
);

8306 
	`sqlôe3BåìGëMëa
(
p
, 
BTREE_LARGEST_ROOT_PAGE
, &
pgnoRoŸ
);

8307 
pgnoRoŸ
++;

8312  
pgnoRoŸ
==
	`PTRMAP_PAGENO
(
pBt
,ÖgnoRoot) ||

8313 
pgnoRoŸ
==
	`PENDING_BYTE_PAGE
(
pBt
) ){

8314 
pgnoRoŸ
++;

8316 
	`as£π
–
pgnoRoŸ
>=3 || 
CORRUPT_DB
 );

8317 
	`ã°ˇ£
–
pgnoRoŸ
<3 );

8323 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pPageMove
, &
pgnoMove
, 
pgnoRoŸ
, 
BTALLOC_EXACT
);

8324 if–
rc
!=
SQLITE_OK
 ){

8325  
rc
;

8328 if–
pgnoMove
!=
pgnoRoŸ
 ){

8335 
u8
 
eTy≥
 = 0;

8336 
Pgno
 
iPåPage
 = 0;

8341 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, 0, 0);

8342 
	`ªÀa£Page
(
pPageMove
);

8343 if–
rc
!=
SQLITE_OK
 ){

8344  
rc
;

8348 
rc
 = 
	`båìGëPage
(
pBt
, 
pgnoRoŸ
, &
pRoŸ
, 0);

8349 if–
rc
!=
SQLITE_OK
 ){

8350  
rc
;

8352 
rc
 = 
	`±rm≠Gë
(
pBt
, 
pgnoRoŸ
, &
eTy≥
, &
iPåPage
);

8353 if–
eTy≥
==
PTRMAP_ROOTPAGE
 ||ÉTy≥==
PTRMAP_FREEPAGE
 ){

8354 
rc
 = 
SQLITE_CORRUPT_BKPT
;

8356 if–
rc
!=
SQLITE_OK
 ){

8357 
	`ªÀa£Page
(
pRoŸ
);

8358  
rc
;

8360 
	`as£π
–
eTy≥
!=
PTRMAP_ROOTPAGE
 );

8361 
	`as£π
–
eTy≥
!=
PTRMAP_FREEPAGE
 );

8362 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pRoŸ
, 
eTy≥
, 
iPåPage
, 
pgnoMove
, 0);

8363 
	`ªÀa£Page
(
pRoŸ
);

8366 if–
rc
!=
SQLITE_OK
 ){

8367  
rc
;

8369 
rc
 = 
	`båìGëPage
(
pBt
, 
pgnoRoŸ
, &
pRoŸ
, 0);

8370 if–
rc
!=
SQLITE_OK
 ){

8371  
rc
;

8373 
rc
 = 
	`sqlôe3PagîWrôe
(
pRoŸ
->
pDbPage
);

8374 if–
rc
!=
SQLITE_OK
 ){

8375 
	`ªÀa£Page
(
pRoŸ
);

8376  
rc
;

8379 
pRoŸ
 = 
pPageMove
;

8383 
	`±rm≠Put
(
pBt
, 
pgnoRoŸ
, 
PTRMAP_ROOTPAGE
, 0, &
rc
);

8384 if–
rc
 ){

8385 
	`ªÀa£Page
(
pRoŸ
);

8386  
rc
;

8393 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pBt
->
pPage1
->
pDbPage
) );

8394 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
, 4, 
pgnoRoŸ
);

8395 if–
	`NEVER
(
rc
) ){

8396 
	`ªÀa£Page
(
pRoŸ
);

8397  
rc
;

8401 
rc
 = 
	`ÆloˇãBåìPage
(
pBt
, &
pRoŸ
, &
pgnoRoŸ
, 1, 0);

8402 if–
rc
 ) Ñc;

8405 
	`as£π
–
	`sqlôe3PagîIswrôóbÀ
(
pRoŸ
->
pDbPage
) );

8406 if–
¸óãTabFœgs
 & 
BTREE_INTKEY
 ){

8407 
±fFœgs
 = 
PTF_INTKEY
 | 
PTF_LEAFDATA
 | 
PTF_LEAF
;

8409 
±fFœgs
 = 
PTF_ZERODATA
 | 
PTF_LEAF
;

8411 
	`zîoPage
(
pRoŸ
, 
±fFœgs
);

8412 
	`sqlôe3PagîUƒef
(
pRoŸ
->
pDbPage
);

8413 
	`as£π
–(
pBt
->
›íFœgs
 & 
BTREE_SINGLE
)==0 || 
pgnoRoŸ
==2 );

8414 *
piTabÀ
 = ()
pgnoRoŸ
;

8415  
SQLITE_OK
;

8416 
	}
}

8417 
	$sqlôe3BåìCª©eTabÀ
(
Båì
 *
p
, *
piTabÀ
, 
Êags
){

8418 
rc
;

8419 
	`sqlôe3BåìE¡î
(
p
);

8420 
rc
 = 
	`båìCª©eTabÀ
(
p
, 
piTabÀ
, 
Êags
);

8421 
	`sqlôe3BåìLóve
(
p
);

8422  
rc
;

8423 
	}
}

8429 
	$˛órD©aba£Page
(

8430 
BtSh¨ed
 *
pBt
,

8431 
Pgno
 
pgno
,

8432 
‰ìPageFœg
,

8433 *
≤Ch™ge


8435 
MemPage
 *
pPage
;

8436 
rc
;

8437 *
pCñl
;

8438 
i
;

8439 
hdr
;

8440 
u16
 
szCñl
;

8442 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pBt
->
muãx
) );

8443 if–
pgno
>
	`båìPagecou¡
(
pBt
) ){

8444  
SQLITE_CORRUPT_BKPT
;

8446 
rc
 = 
	`gëAndInôPage
(
pBt
, 
pgno
, &
pPage
, 0, 0);

8447 if–
rc
 ) Ñc;

8448 if–
pPage
->
bBusy
 ){

8449 
rc
 = 
SQLITE_CORRUPT_BKPT
;

8450 
˛órd©aba£∑ge_out
;

8452 
pPage
->
bBusy
 = 1;

8453 
hdr
 = 
pPage
->
hdrOff£t
;

8454 
i
=0; i<
pPage
->
nCñl
; i++){

8455 
pCñl
 = 
	`födCñl
(
pPage
, 
i
);

8456 if–!
pPage
->
Àaf
 ){

8457 
rc
 = 
	`˛órD©aba£Page
(
pBt
, 
	`gë4byã
(
pCñl
), 1, 
≤Ch™ge
);

8458 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8460 
rc
 = 
	`˛órCñl
(
pPage
, 
pCñl
, &
szCñl
);

8461 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8463 if–!
pPage
->
Àaf
 ){

8464 
rc
 = 
	`˛órD©aba£Page
(
pBt
, 
	`gë4byã
(&
pPage
->
aD©a
[
hdr
+8]), 1, 
≤Ch™ge
);

8465 if–
rc
 ) 
˛órd©aba£∑ge_out
;

8466 }if–
≤Ch™ge
 ){

8467 
	`as£π
–
pPage
->
ötKey
 || 
CORRUPT_DB
 );

8468 
	`ã°ˇ£
–!
pPage
->
ötKey
 );

8469 *
≤Ch™ge
 +
pPage
->
nCñl
;

8471 if–
‰ìPageFœg
 ){

8472 
	`‰ìPage
(
pPage
, &
rc
);

8473 }if–(
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
->
pDbPage
))==0 ){

8474 
	`zîoPage
(
pPage
,ÖPage->
aD©a
[
hdr
] | 
PTF_LEAF
);

8477 
˛órd©aba£∑ge_out
:

8478 
pPage
->
bBusy
 = 0;

8479 
	`ªÀa£Page
(
pPage
);

8480  
rc
;

8481 
	}
}

8496 
	$sqlôe3BåìCÀ¨TabÀ
(
Båì
 *
p
, 
iTabÀ
, *
≤Ch™ge
){

8497 
rc
;

8498 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8499 
	`sqlôe3BåìE¡î
(
p
);

8500 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8502 
rc
 = 
	`ßveAŒCurs‹s
(
pBt
, (
Pgno
)
iTabÀ
, 0);

8504 if–
SQLITE_OK
==
rc
 ){

8508 
	`övÆid©eIn¸blobCurs‹s
(
p
, 0, 1);

8509 
rc
 = 
	`˛órD©aba£Page
(
pBt
, (
Pgno
)
iTabÀ
, 0, 
≤Ch™ge
);

8511 
	`sqlôe3BåìLóve
(
p
);

8512  
rc
;

8513 
	}
}

8520 
	$sqlôe3BåìCÀ¨TabÀOfCurs‹
(
BtCurs‹
 *
pCur
){

8521  
	`sqlôe3BåìCÀ¨TabÀ
(
pCur
->
pBåì
,ÖCur->
pgnoRoŸ
, 0);

8522 
	}
}

8544 
	$båìDr›TabÀ
(
Båì
 *
p
, 
Pgno
 
iTabÀ
, *
piMoved
){

8545 
rc
;

8546 
MemPage
 *
pPage
 = 0;

8547 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8549 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
p
) );

8550 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8560 if–
	`NEVER
(
pBt
->
pCurs‹
) ){

8561 
	`sqlôe3C⁄√˘i⁄Blocked
(
p
->
db
, 
pBt
->
pCurs‹
->
pBåì
->db);

8562  
SQLITE_LOCKED_SHAREDCACHE
;

8569 if–
	`NEVER
(
iTabÀ
<2) ){

8570  
SQLITE_CORRUPT_BKPT
;

8573 
rc
 = 
	`båìGëPage
(
pBt
, (
Pgno
)
iTabÀ
, &
pPage
, 0);

8574 if–
rc
 ) Ñc;

8575 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀ
(
p
, 
iTabÀ
, 0);

8576 if–
rc
 ){

8577 
	`ªÀa£Page
(
pPage
);

8578  
rc
;

8581 *
piMoved
 = 0;

8583 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8584 
	`‰ìPage
(
pPage
, &
rc
);

8585 
	`ªÀa£Page
(
pPage
);

8587 if–
pBt
->
autoVacuum
 ){

8588 
Pgno
 
maxRoŸPgno
;

8589 
	`sqlôe3BåìGëMëa
(
p
, 
BTREE_LARGEST_ROOT_PAGE
, &
maxRoŸPgno
);

8591 if–
iTabÀ
==
maxRoŸPgno
 ){

8595 
	`‰ìPage
(
pPage
, &
rc
);

8596 
	`ªÀa£Page
(
pPage
);

8597 if–
rc
!=
SQLITE_OK
 ){

8598  
rc
;

8605 
MemPage
 *
pMove
;

8606 
	`ªÀa£Page
(
pPage
);

8607 
rc
 = 
	`båìGëPage
(
pBt
, 
maxRoŸPgno
, &
pMove
, 0);

8608 if–
rc
!=
SQLITE_OK
 ){

8609  
rc
;

8611 
rc
 = 
	`ªloˇãPage
(
pBt
, 
pMove
, 
PTRMAP_ROOTPAGE
, 0, 
iTabÀ
, 0);

8612 
	`ªÀa£Page
(
pMove
);

8613 if–
rc
!=
SQLITE_OK
 ){

8614  
rc
;

8616 
pMove
 = 0;

8617 
rc
 = 
	`båìGëPage
(
pBt
, 
maxRoŸPgno
, &
pMove
, 0);

8618 
	`‰ìPage
(
pMove
, &
rc
);

8619 
	`ªÀa£Page
(
pMove
);

8620 if–
rc
!=
SQLITE_OK
 ){

8621  
rc
;

8623 *
piMoved
 = 
maxRoŸPgno
;

8631 
maxRoŸPgno
--;

8632  
maxRoŸPgno
==
	`PENDING_BYTE_PAGE
(
pBt
)

8633 || 
	`PTRMAP_ISPAGE
(
pBt
, 
maxRoŸPgno
) ){

8634 
maxRoŸPgno
--;

8636 
	`as£π
–
maxRoŸPgno
!=
	`PENDING_BYTE_PAGE
(
pBt
) );

8638 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
p
, 4, 
maxRoŸPgno
);

8640 
	`‰ìPage
(
pPage
, &
rc
);

8641 
	`ªÀa£Page
(
pPage
);

8644  
rc
;

8645 
	}
}

8646 
	$sqlôe3BåìDr›TabÀ
(
Båì
 *
p
, 
iTabÀ
, *
piMoved
){

8647 
rc
;

8648 
	`sqlôe3BåìE¡î
(
p
);

8649 
rc
 = 
	`båìDr›TabÀ
(
p
, 
iTabÀ
, 
piMoved
);

8650 
	`sqlôe3BåìLóve
(
p
);

8651  
rc
;

8652 
	}
}

8675 
	$sqlôe3BåìGëMëa
(
Båì
 *
p
, 
idx
, 
u32
 *
pMëa
){

8676 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8678 
	`sqlôe3BåìE¡î
(
p
);

8679 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 );

8680 
	`as£π
–
SQLITE_OK
==
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
) );

8681 
	`as£π
–
pBt
->
pPage1
 );

8682 
	`as£π
–
idx
>=0 && idx<=15 );

8684 if–
idx
==
BTREE_DATA_VERSION
 ){

8685 *
pMëa
 = 
	`sqlôe3PagîD©aVîsi⁄
(
pBt
->
pPagî
Ë+ 
p
->
iD©aVîsi⁄
;

8687 *
pMëa
 = 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36 + 
idx
*4]);

8692 #ifde‡
SQLITE_OMIT_AUTOVACUUM


8693 if–
idx
==
BTREE_LARGEST_ROOT_PAGE
 && *
pMëa
>0 ){

8694 
pBt
->
btsFœgs
 |
BTS_READ_ONLY
;

8698 
	`sqlôe3BåìLóve
(
p
);

8699 
	}
}

8705 
	$sqlôe3BåìUpd©eMëa
(
Båì
 *
p
, 
idx
, 
u32
 
iMëa
){

8706 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

8707 *
pP1
;

8708 
rc
;

8709 
	`as£π
–
idx
>=1 && idx<=15 );

8710 
	`sqlôe3BåìE¡î
(
p
);

8711 
	`as£π
–
p
->
öTøns
==
TRANS_WRITE
 );

8712 
	`as£π
–
pBt
->
pPage1
!=0 );

8713 
pP1
 = 
pBt
->
pPage1
->
aD©a
;

8714 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

8715 if–
rc
==
SQLITE_OK
 ){

8716 
	`put4byã
(&
pP1
[36 + 
idx
*4], 
iMëa
);

8717 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8718 if–
idx
==
BTREE_INCR_VACUUM
 ){

8719 
	`as£π
–
pBt
->
autoVacuum
 || 
iMëa
==0 );

8720 
	`as£π
–
iMëa
==0 || iMeta==1 );

8721 
pBt
->
ö¸Vacuum
 = (
u8
)
iMëa
;

8725 
	`sqlôe3BåìLóve
(
p
);

8726  
rc
;

8727 
	}
}

8729 #i‚de‡
SQLITE_OMIT_BTREECOUNT


8738 
	$sqlôe3BåìCou¡
(
BtCurs‹
 *
pCur
, 
i64
 *
≤E¡ry
){

8739 
i64
 
nE¡ry
 = 0;

8740 
rc
;

8742 if–
pCur
->
pgnoRoŸ
==0 ){

8743 *
≤E¡ry
 = 0;

8744  
SQLITE_OK
;

8746 
rc
 = 
	`moveToRoŸ
(
pCur
);

8751  
rc
==
SQLITE_OK
 ){

8752 
iIdx
;

8753 
MemPage
 *
pPage
;

8759 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8760 if–
pPage
->
Àaf
 || !pPage->
ötKey
 ){

8761 
nE¡ry
 +
pPage
->
nCñl
;

8774 if–
pPage
->
Àaf
 ){

8776 if–
pCur
->
iPage
==0 ){

8778 *
≤E¡ry
 = 
nE¡ry
;

8779  
	`moveToRoŸ
(
pCur
);

8781 
	`moveToP¨ít
(
pCur
);

8782 } 
pCur
->
aiIdx
[pCur->
iPage
]>ıCur->
≠Page
[pCur->iPage]->
nCñl
 );

8784 
pCur
->
aiIdx
[pCur->
iPage
]++;

8785 
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

8791 
iIdx
 = 
pCur
->
aiIdx
[pCur->
iPage
];

8792 if–
iIdx
==
pPage
->
nCñl
 ){

8793 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(&
pPage
->
aD©a
[pPage->
hdrOff£t
+8]));

8795 
rc
 = 
	`moveToChûd
(
pCur
, 
	`gë4byã
(
	`födCñl
(
pPage
, 
iIdx
)));

8800  
rc
;

8801 
	}
}

8808 
Pagî
 *
	$sqlôe3BåìPagî
(
Båì
 *
p
){

8809  
p
->
pBt
->
pPagî
;

8810 
	}
}

8812 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


8816 
	$checkAµídMsg
(

8817 
I¡egrôyCk
 *
pCheck
,

8818 c⁄° *
zF‹m©
,

8821 
va_li°
 
≠
;

8822 if–!
pCheck
->
mxEº
 ) ;

8823 
pCheck
->
mxEº
--;

8824 
pCheck
->
nEº
++;

8825 
	`va_°¨t
(
≠
, 
zF‹m©
);

8826 if–
pCheck
->
îrMsg
.
nCh¨
 ){

8827 
	`sqlôe3SåAccumAµíd
(&
pCheck
->
îrMsg
, "\n", 1);

8829 if–
pCheck
->
zPfx
 ){

8830 
	`sqlôe3XPrötf
(&
pCheck
->
îrMsg
,ÖCheck->
zPfx
,ÖCheck->
v1
,ÖCheck->
v2
);

8832 
	`sqlôe3VXPrötf
(&
pCheck
->
îrMsg
, 
zF‹m©
, 
≠
);

8833 
	`va_íd
(
≠
);

8834 if–
pCheck
->
îrMsg
.
accEº‹
==
STRACCUM_NOMEM
 ){

8835 
pCheck
->
mÆlocFaûed
 = 1;

8837 
	}
}

8840 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


8846 
	$gëPageRe„ªn˚d
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPg
){

8847 
	`as£π
–
iPg
<=
pCheck
->
nPage
 && ’Check->
aPgRef
[0])==1 );

8848  (
pCheck
->
aPgRef
[
iPg
/8] & (1 << (iPg & 0x07)));

8849 
	}
}

8854 
	$£tPageRe„ªn˚d
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPg
){

8855 
	`as£π
–
iPg
<=
pCheck
->
nPage
 && ’Check->
aPgRef
[0])==1 );

8856 
pCheck
->
aPgRef
[
iPg
/8] |= (1 << (iPg & 0x07));

8857 
	}
}

8868 
	$checkRef
(
I¡egrôyCk
 *
pCheck
, 
Pgno
 
iPage
){

8869 if–
iPage
==0 )  1;

8870 if–
iPage
>
pCheck
->
nPage
 ){

8871 
	`checkAµídMsg
(
pCheck
, "övÆidÖagênumbî %d", 
iPage
);

8874 if–
	`gëPageRe„ªn˚d
(
pCheck
, 
iPage
) ){

8875 
	`checkAµídMsg
(
pCheck
, "2ndÑe„ªn˚Åÿ∑gê%d", 
iPage
);

8878 
	`£tPageRe„ªn˚d
(
pCheck
, 
iPage
);

8880 
	}
}

8882 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8888 
	$checkPåm≠
(

8889 
I¡egrôyCk
 *
pCheck
,

8890 
Pgno
 
iChûd
,

8891 
u8
 
eTy≥
,

8892 
Pgno
 
iP¨ít


8894 
rc
;

8895 
u8
 
ePåm≠Ty≥
;

8896 
Pgno
 
iPåm≠P¨ít
;

8898 
rc
 = 
	`±rm≠Gë
(
pCheck
->
pBt
, 
iChûd
, &
ePåm≠Ty≥
, &
iPåm≠P¨ít
);

8899 if–
rc
!=
SQLITE_OK
 ){

8900 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ) 
pCheck
->
mÆlocFaûed
 = 1;

8901 
	`checkAµídMsg
(
pCheck
, "FaûedÅÿªadÖåm≠ key=%d", 
iChûd
);

8905 if–
ePåm≠Ty≥
!=
eTy≥
 || 
iPåm≠P¨ít
!=
iP¨ít
 ){

8906 
	`checkAµídMsg
(
pCheck
,

8908 
iChûd
, 
eTy≥
, 
iP¨ít
, 
ePåm≠Ty≥
, 
iPåm≠P¨ít
);

8910 
	}
}

8917 
	$checkLi°
(

8918 
I¡egrôyCk
 *
pCheck
,

8919 
isFªeLi°
,

8920 
iPage
,

8921 
N


8923 
i
;

8924 
ex≥˘ed
 = 
N
;

8925 
iFú°
 = 
iPage
;

8926  
N
-- > 0 && 
pCheck
->
mxEº
 ){

8927 
DbPage
 *
pOvÊPage
;

8928 *
pOvÊD©a
;

8929 if–
iPage
<1 ){

8930 
	`checkAµídMsg
(
pCheck
,

8932 
N
+1, 
ex≥˘ed
, 
iFú°
);

8935 if–
	`checkRef
(
pCheck
, 
iPage
) ) ;

8936 if–
	`sqlôe3PagîGë
(
pCheck
->
pPagî
, (
Pgno
)
iPage
, &
pOvÊPage
, 0) ){

8937 
	`checkAµídMsg
(
pCheck
, "ÁûedÅÿgëÖagê%d", 
iPage
);

8940 
pOvÊD©a
 = (*)
	`sqlôe3PagîGëD©a
(
pOvÊPage
);

8941 if–
isFªeLi°
 ){

8942 
n
 = 
	`gë4byã
(&
pOvÊD©a
[4]);

8943 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8944 if–
pCheck
->
pBt
->
autoVacuum
 ){

8945 
	`checkPåm≠
(
pCheck
, 
iPage
, 
PTRMAP_FREEPAGE
, 0);

8948 if–
n
>()
pCheck
->
pBt
->
ußbÀSize
/4-2 ){

8949 
	`checkAµídMsg
(
pCheck
,

8950 "‰ìli°Üó‡cou¡Åoÿbig o¿∑gê%d", 
iPage
);

8951 
N
--;

8953 
i
=0; i<
n
; i++){

8954 
Pgno
 
iFªePage
 = 
	`gë4byã
(&
pOvÊD©a
[8+
i
*4]);

8955 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8956 if–
pCheck
->
pBt
->
autoVacuum
 ){

8957 
	`checkPåm≠
(
pCheck
, 
iFªePage
, 
PTRMAP_FREEPAGE
, 0);

8960 
	`checkRef
(
pCheck
, 
iFªePage
);

8962 
N
 -
n
;

8965 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


8971 if–
pCheck
->
pBt
->
autoVacuum
 && 
N
>0 ){

8972 
i
 = 
	`gë4byã
(
pOvÊD©a
);

8973 
	`checkPåm≠
(
pCheck
, 
i
, 
PTRMAP_OVERFLOW2
, 
iPage
);

8977 
iPage
 = 
	`gë4byã
(
pOvÊD©a
);

8978 
	`sqlôe3PagîUƒef
(
pOvÊPage
);

8980 if–
isFªeLi°
 && 
N
<(
iPage
!=0) ){

8981 
	`checkAµídMsg
(
pCheck
, "free-page count in header isÅoo small");

8984 
	}
}

9009 
	$båìHópIn£π
(
u32
 *
aHóp
, u32 
x
){

9010 
u32
 
j
, 
i
 = ++
aHóp
[0];

9011 
aHóp
[
i
] = 
x
;

9012  (
j
 = 
i
/2)>0 && 
aHóp
[j]>aHeap[i] ){

9013 
x
 = 
aHóp
[
j
];

9014 
aHóp
[
j
] =áHóp[
i
];

9015 
aHóp
[
i
] = 
x
;

9016 
i
 = 
j
;

9018 
	}
}

9019 
	$båìHópPuŒ
(
u32
 *
aHóp
, u32 *
pOut
){

9020 
u32
 
j
, 
i
, 
x
;

9021 if–(
x
 = 
aHóp
[0])==0 )  0;

9022 *
pOut
 = 
aHóp
[1];

9023 
aHóp
[1] =áHóp[
x
];

9024 
aHóp
[
x
] = 0xffffffff;

9025 
aHóp
[0]--;

9026 
i
 = 1;

9027  (
j
 = 
i
*2)<=
aHóp
[0] ){

9028 if–
aHóp
[
j
]>aHeap[j+1] ) j++;

9029 if–
aHóp
[
i
]<aHóp[
j
] ) ;

9030 
x
 = 
aHóp
[
i
];

9031 
aHóp
[
i
] =áHóp[
j
];

9032 
aHóp
[
j
] = 
x
;

9033 
i
 = 
j
;

9036 
	}
}

9038 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


9053 
	$checkTªePage
(

9054 
I¡egrôyCk
 *
pCheck
,

9055 
iPage
,

9056 
i64
 *
piMöKey
,

9057 
i64
 
maxKey


9059 
MemPage
 *
pPage
 = 0;

9060 
i
;

9061 
rc
;

9062 
dïth
 = -1, 
d2
;

9063 
pgno
;

9064 
nFøg
;

9065 
hdr
;

9066 
˚ŒSèπ
;

9067 
nCñl
;

9068 
doCovîageCheck
 = 1;

9069 
keyC™BeEquÆ
 = 1;

9071 
u8
 *
d©a
;

9072 
u8
 *
pCñl
;

9073 
u8
 *
pCñlIdx
;

9074 
BtSh¨ed
 *
pBt
;

9075 
u32
 
pc
;

9076 
u32
 
ußbÀSize
;

9077 
u32
 
c⁄ã¡Off£t
;

9078 
u32
 *
hóp
 = 0;

9079 
u32
 
x
, 
¥ev
 = 0;

9080 c⁄° *
ßved_zPfx
 = 
pCheck
->
zPfx
;

9081 
ßved_v1
 = 
pCheck
->
v1
;

9082 
ßved_v2
 = 
pCheck
->
v2
;

9083 
u8
 
ßvedIsInô
 = 0;

9087 
pBt
 = 
pCheck
->pBt;

9088 
ußbÀSize
 = 
pBt
->usableSize;

9089 if–
iPage
==0 )  0;

9090 if–
	`checkRef
(
pCheck
, 
iPage
) )  0;

9091 
pCheck
->
zPfx
 = "Page %d: ";

9092 
pCheck
->
v1
 = 
iPage
;

9093 if–(
rc
 = 
	`båìGëPage
(
pBt
, (
Pgno
)
iPage
, &
pPage
, 0))!=0 ){

9094 
	`checkAµídMsg
(
pCheck
,

9095 "u«bÀÅÿgëÅhê∑ge.Éº‹ code=%d", 
rc
);

9096 
íd_of_check
;

9101 
ßvedIsInô
 = 
pPage
->
isInô
;

9102 
pPage
->
isInô
 = 0;

9103 if–(
rc
 = 
	`båìInôPage
(
pPage
))!=0 ){

9104 
	`as£π
–
rc
==
SQLITE_CORRUPT
 );

9105 
	`checkAµídMsg
(
pCheck
,

9106 "båìInôPage(Ëªtu∫†îr‹ codê%d", 
rc
);

9107 
íd_of_check
;

9109 
d©a
 = 
pPage
->
aD©a
;

9110 
hdr
 = 
pPage
->
hdrOff£t
;

9113 
pCheck
->
zPfx
 = "OnÅreeÖage %d cell %d: ";

9114 
c⁄ã¡Off£t
 = 
	`gë2byãNŸZîo
(&
d©a
[
hdr
+5]);

9115 
	`as£π
–
c⁄ã¡Off£t
<=
ußbÀSize
 );

9119 
nCñl
 = 
	`gë2byã
(&
d©a
[
hdr
+3]);

9120 
	`as£π
–
pPage
->
nCñl
==nCell );

9124 
˚ŒSèπ
 = 
hdr
 + 12 - 4*
pPage
->
Àaf
;

9125 
	`as£π
–
pPage
->
aCñlIdx
==&
d©a
[
˚ŒSèπ
] );

9126 
pCñlIdx
 = &
d©a
[
˚ŒSèπ
 + 2*(
nCñl
-1)];

9128 if–!
pPage
->
Àaf
 ){

9130 
pgno
 = 
	`gë4byã
(&
d©a
[
hdr
+8]);

9131 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9132 if–
pBt
->
autoVacuum
 ){

9133 
pCheck
->
zPfx
 = "OnÖage %dátÑight child: ";

9134 
	`checkPåm≠
(
pCheck
, 
pgno
, 
PTRMAP_BTREE
, 
iPage
);

9137 
dïth
 = 
	`checkTªePage
(
pCheck
, 
pgno
, &
maxKey
, maxKey);

9138 
keyC™BeEquÆ
 = 0;

9142 
hóp
 = 
pCheck
->heap;

9143 
hóp
[0] = 0;

9148 
i
=
nCñl
-1; i>=0 && 
pCheck
->
mxEº
; i--){

9149 
CñlInfo
 
öfo
;

9152 
pCheck
->
v2
 = 
i
;

9153 
	`as£π
–
pCñlIdx
==&
d©a
[
˚ŒSèπ
 + 
i
*2] );

9154 
pc
 = 
	`gë2byãAlig√d
(
pCñlIdx
);

9155 
pCñlIdx
 -= 2;

9156 if–
pc
<
c⁄ã¡Off£t
 ||Öc>
ußbÀSize
-4 ){

9157 
	`checkAµídMsg
(
pCheck
, "Offset %d out ofÑange %d..%d",

9158 
pc
, 
c⁄ã¡Off£t
, 
ußbÀSize
-4);

9159 
doCovîageCheck
 = 0;

9162 
pCñl
 = &
d©a
[
pc
];

9163 
pPage
->
	`xP¨£Cñl
’Page, 
pCñl
, &
öfo
);

9164 if–
pc
+
öfo
.
nSize
>
ußbÀSize
 ){

9165 
	`checkAµídMsg
(
pCheck
, "Extends offÉnd ofÖage");

9166 
doCovîageCheck
 = 0;

9171 if–
pPage
->
ötKey
 ){

9172 if–
keyC™BeEquÆ
 ? (
öfo
.
nKey
 > 
maxKey
) : (info.nKey >= maxKey) ){

9173 
	`checkAµídMsg
(
pCheck
, "Rowid %Œd ouào‡‹dî", 
öfo
.
nKey
);

9175 
maxKey
 = 
öfo
.
nKey
;

9179 if–
öfo
.
nPaylﬂd
>öfo.
nLoˇl
 ){

9180 
nPage
;

9181 
Pgno
 
pgnoOvÊ
;

9182 
	`as£π
–
pc
 + 
öfo
.
nSize
 - 4 <
ußbÀSize
 );

9183 
nPage
 = (
öfo
.
nPaylﬂd
 - info.
nLoˇl
 + 
ußbÀSize
 - 5)/(usableSize - 4);

9184 
pgnoOvÊ
 = 
	`gë4byã
(&
pCñl
[
öfo
.
nSize
 - 4]);

9185 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9186 if–
pBt
->
autoVacuum
 ){

9187 
	`checkPåm≠
(
pCheck
, 
pgnoOvÊ
, 
PTRMAP_OVERFLOW1
, 
iPage
);

9190 
	`checkLi°
(
pCheck
, 0, 
pgnoOvÊ
, 
nPage
);

9193 if–!
pPage
->
Àaf
 ){

9195 
pgno
 = 
	`gë4byã
(
pCñl
);

9196 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9197 if–
pBt
->
autoVacuum
 ){

9198 
	`checkPåm≠
(
pCheck
, 
pgno
, 
PTRMAP_BTREE
, 
iPage
);

9201 
d2
 = 
	`checkTªePage
(
pCheck
, 
pgno
, &
maxKey
, maxKey);

9202 
keyC™BeEquÆ
 = 0;

9203 if–
d2
!=
dïth
 ){

9204 
	`checkAµídMsg
(
pCheck
, "ChildÖage depth differs");

9205 
dïth
 = 
d2
;

9209 
	`båìHópIn£π
(
hóp
, (
pc
<<16)|’c+
öfo
.
nSize
-1));

9212 *
piMöKey
 = 
maxKey
;

9216 
pCheck
->
zPfx
 = 0;

9217 if–
doCovîageCheck
 && 
pCheck
->
mxEº
>0 ){

9221 if–!
pPage
->
Àaf
 ){

9222 
hóp
 = 
pCheck
->heap;

9223 
hóp
[0] = 0;

9224 
i
=
nCñl
-1; i>=0; i--){

9225 
u32
 
size
;

9226 
pc
 = 
	`gë2byãAlig√d
(&
d©a
[
˚ŒSèπ
+
i
*2]);

9227 
size
 = 
pPage
->
	`xCñlSize
’Page, &
d©a
[
pc
]);

9228 
	`båìHópIn£π
(
hóp
, (
pc
<<16)|’c+
size
-1));

9237 
i
 = 
	`gë2byã
(&
d©a
[
hdr
+1]);

9238  
i
>0 ){

9239 
size
, 
j
;

9240 
	`as£π
–(
u32
)
i
<=
ußbÀSize
-4 );

9241 
size
 = 
	`gë2byã
(&
d©a
[
i
+2]);

9242 
	`as£π
–(
u32
)(
i
+
size
)<=
ußbÀSize
 );

9243 
	`båìHópIn£π
(
hóp
, (((
u32
)
i
)<<16)|(i+
size
-1));

9248 
j
 = 
	`gë2byã
(&
d©a
[
i
]);

9251 
	`as£π
–
j
==0 || j>
i
+
size
 );

9252 
	`as£π
–(
u32
)
j
<=
ußbÀSize
-4 );

9253 
i
 = 
j
;

9268 
nFøg
 = 0;

9269 
¥ev
 = 
c⁄ã¡Off£t
 - 1;

9270  
	`båìHópPuŒ
(
hóp
,&
x
) ){

9271 if–(
¥ev
&0xffff)>=(
x
>>16) ){

9272 
	`checkAµídMsg
(
pCheck
,

9273 "Mu…ùÀ u£†f‹ byã %u o‡∑gê%d", 
x
>>16, 
iPage
);

9276 
nFøg
 +(
x
>>16Ë- (
¥ev
&0xffff) - 1;

9277 
¥ev
 = 
x
;

9280 
nFøg
 +
ußbÀSize
 - (
¥ev
&0xffff) - 1;

9286 if–
hóp
[0]==0 && 
nFøg
!=
d©a
[
hdr
+7] ){

9287 
	`checkAµídMsg
(
pCheck
,

9289 
nFøg
, 
d©a
[
hdr
+7], 
iPage
);

9293 
íd_of_check
:

9294 if–!
doCovîageCheck
 ) 
pPage
->
isInô
 = 
ßvedIsInô
;

9295 
	`ªÀa£Page
(
pPage
);

9296 
pCheck
->
zPfx
 = 
ßved_zPfx
;

9297 
pCheck
->
v1
 = 
ßved_v1
;

9298 
pCheck
->
v2
 = 
ßved_v2
;

9299  
dïth
+1;

9300 
	}
}

9303 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


9317 *
	$sqlôe3BåìI¡egrôyCheck
(

9318 
Båì
 *
p
,

9319 *
aRoŸ
,

9320 
nRoŸ
,

9321 
mxEº
,

9322 *
≤Eº


9324 
Pgno
 
i
;

9325 
I¡egrôyCk
 
sCheck
;

9326 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9327 
ßvedDbFœgs
 = 
pBt
->
db
->
Êags
;

9328 
zEº
[100];

9329 
	`VVA_ONLY
–
nRef
 );

9331 
	`sqlôe3BåìE¡î
(
p
);

9332 
	`as£π
–
p
->
öTøns
>
TRANS_NONE
 && 
pBt
->
öTønß˘i⁄
>TRANS_NONE );

9333 
	`VVA_ONLY
–
nRef
 = 
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
) );

9334 
	`as£π
–
nRef
>=0 );

9335 
sCheck
.
pBt
 =ÖBt;

9336 
sCheck
.
pPagî
 = 
pBt
->pPager;

9337 
sCheck
.
nPage
 = 
	`båìPagecou¡
(sCheck.
pBt
);

9338 
sCheck
.
mxEº
 = mxErr;

9339 
sCheck
.
nEº
 = 0;

9340 
sCheck
.
mÆlocFaûed
 = 0;

9341 
sCheck
.
zPfx
 = 0;

9342 
sCheck
.
v1
 = 0;

9343 
sCheck
.
v2
 = 0;

9344 
sCheck
.
aPgRef
 = 0;

9345 
sCheck
.
hóp
 = 0;

9346 
	`sqlôe3SåAccumInô
(&
sCheck
.
îrMsg
, 0, 
zEº
, (zEº), 
SQLITE_MAX_LENGTH
);

9347 
sCheck
.
îrMsg
.
¥ötfFœgs
 = 
SQLITE_PRINTF_INTERNAL
;

9348 if–
sCheck
.
nPage
==0 ){

9349 
öãgrôy_ck_˛ónup
;

9352 
sCheck
.
aPgRef
 = 
	`sqlôe3MÆlocZîo
((sCheck.
nPage
 / 8)+ 1);

9353 if–!
sCheck
.
aPgRef
 ){

9354 
sCheck
.
mÆlocFaûed
 = 1;

9355 
öãgrôy_ck_˛ónup
;

9357 
sCheck
.
hóp
 = (
u32
*)
	`sqlôe3PageMÆloc
–
pBt
->
∑geSize
 );

9358 if–
sCheck
.
hóp
==0 ){

9359 
sCheck
.
mÆlocFaûed
 = 1;

9360 
öãgrôy_ck_˛ónup
;

9363 
i
 = 
	`PENDING_BYTE_PAGE
(
pBt
);

9364 if–
i
<=
sCheck
.
nPage
 ) 
	`£tPageRe„ªn˚d
(&sCheck, i);

9368 
sCheck
.
zPfx
 = "Main freelist: ";

9369 
	`checkLi°
(&
sCheck
, 1, 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[32]),

9370 
	`gë4byã
(&
pBt
->
pPage1
->
aD©a
[36]));

9371 
sCheck
.
zPfx
 = 0;

9375 
	`ã°ˇ£
–
pBt
->
db
->
Êags
 & 
SQLITE_CñlSizeCk
 );

9376 
pBt
->
db
->
Êags
 &~
SQLITE_CñlSizeCk
;

9377 
i
=0; ()i<
nRoŸ
 && 
sCheck
.
mxEº
; i++){

9378 
i64
 
nŸU£d
;

9379 if–
aRoŸ
[
i
]==0 ) ;

9380 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


9381 if–
pBt
->
autoVacuum
 && 
aRoŸ
[
i
]>1 ){

9382 
	`checkPåm≠
(&
sCheck
, 
aRoŸ
[
i
], 
PTRMAP_ROOTPAGE
, 0);

9385 
	`checkTªePage
(&
sCheck
, 
aRoŸ
[
i
], &
nŸU£d
, 
LARGEST_INT64
);

9387 
pBt
->
db
->
Êags
 = 
ßvedDbFœgs
;

9391 
i
=1; i<=
sCheck
.
nPage
 && sCheck.
mxEº
; i++){

9392 #ifde‡
SQLITE_OMIT_AUTOVACUUM


9393 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)==0 ){

9394 
	`checkAµídMsg
(&
sCheck
, "Pagê%d i†√vî u£d", 
i
);

9400 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)==0 &&

9401 (
	`PTRMAP_PAGENO
(
pBt
, 
i
)!=ò|| !pBt->
autoVacuum
) ){

9402 
	`checkAµídMsg
(&
sCheck
, "Pagê%d i†√vî u£d", 
i
);

9404 if–
	`gëPageRe„ªn˚d
(&
sCheck
, 
i
)!=0 &&

9405 (
	`PTRMAP_PAGENO
(
pBt
, 
i
)==ò&&ÖBt->
autoVacuum
) ){

9406 
	`checkAµídMsg
(&
sCheck
, "Poöã∏m≠Öagê%d i†ª„ªn˚d", 
i
);

9413 
öãgrôy_ck_˛ónup
:

9414 
	`sqlôe3PageFªe
(
sCheck
.
hóp
);

9415 
	`sqlôe3_‰ì
(
sCheck
.
aPgRef
);

9416 if–
sCheck
.
mÆlocFaûed
 ){

9417 
	`sqlôe3SåAccumRe£t
(&
sCheck
.
îrMsg
);

9418 
sCheck
.
nEº
++;

9420 *
≤Eº
 = 
sCheck
.
nEº
;

9421 if–
sCheck
.
nEº
==0 ) 
	`sqlôe3SåAccumRe£t
(&sCheck.
îrMsg
);

9423 
	`as£π
–
nRef
==
	`sqlôe3PagîRefcou¡
(
pBt
->
pPagî
) );

9424 
	`sqlôe3BåìLóve
(
p
);

9425  
	`sqlôe3SåAccumFöish
(&
sCheck
.
îrMsg
);

9426 
	}
}

9436 c⁄° *
	$sqlôe3BåìGëFûíame
(
Båì
 *
p
){

9437 
	`as£π
–
p
->
pBt
->
pPagî
!=0 );

9438  
	`sqlôe3PagîFûíame
(
p
->
pBt
->
pPagî
, 1);

9439 
	}
}

9449 c⁄° *
	$sqlôe3BåìGëJou∫Æ«me
(
Båì
 *
p
){

9450 
	`as£π
–
p
->
pBt
->
pPagî
!=0 );

9451  
	`sqlôe3PagîJou∫Æ«me
(
p
->
pBt
->
pPagî
);

9452 
	}
}

9457 
	$sqlôe3BåìIsInTøns
(
Båì
 *
p
){

9458 
	`as£π
–
p
==0 || 
	`sqlôe3_muãx_hñd
’->
db
->
muãx
) );

9459  (
p
 && (p->
öTøns
==
TRANS_WRITE
));

9460 
	}
}

9462 #i‚de‡
SQLITE_OMIT_WAL


9471 
	$sqlôe3BåìCheckpoöt
(
Båì
 *
p
, 
eMode
, *
≤Log
, *
≤Ck±
){

9472 
rc
 = 
SQLITE_OK
;

9473 if–
p
 ){

9474 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9475 
	`sqlôe3BåìE¡î
(
p
);

9476 if–
pBt
->
öTønß˘i⁄
!=
TRANS_NONE
 ){

9477 
rc
 = 
SQLITE_LOCKED
;

9479 
rc
 = 
	`sqlôe3PagîCheckpoöt
(
pBt
->
pPagî
, 
eMode
, 
≤Log
, 
≤Ck±
);

9481 
	`sqlôe3BåìLóve
(
p
);

9483  
rc
;

9484 
	}
}

9490 
	$sqlôe3BåìIsInRódTøns
(
Båì
 *
p
){

9491 
	`as£π
–
p
 );

9492 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9493  
p
->
öTøns
!=
TRANS_NONE
;

9494 
	}
}

9496 
	$sqlôe3BåìIsInBackup
(
Båì
 *
p
){

9497 
	`as£π
–
p
 );

9498 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9499  
p
->
nBackup
!=0;

9500 
	}
}

9522 *
sqlôe3BåìSchema
(
Båì
 *
p
, 
nByãs
, (*
xFªe
)(*)){

9523 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

9524 
	`sqlôe3BåìE¡î
(
p
);

9525 if–!
pBt
->
pSchema
 && 
nByãs
 ){

9526 
pBt
->
pSchema
 = 
	`sqlôe3DbMÆlocZîo
(0, 
nByãs
);

9527 
pBt
->
xFªeSchema
 = 
xFªe
;

9529 
	`sqlôe3BåìLóve
(
p
);

9530  
pBt
->
pSchema
;

9531 
	}
}

9538 
	$sqlôe3BåìSchemaLocked
(
Båì
 *
p
){

9539 
rc
;

9540 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
db
->
muãx
) );

9541 
	`sqlôe3BåìE¡î
(
p
);

9542 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
MASTER_ROOT
, 
READ_LOCK
);

9543 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_LOCKED_SHAREDCACHE
 );

9544 
	`sqlôe3BåìLóve
(
p
);

9545  
rc
;

9546 
	}
}

9549 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


9555 
	$sqlôe3BåìLockTabÀ
(
Båì
 *
p
, 
iTab
, 
u8
 
isWrôeLock
){

9556 
rc
 = 
SQLITE_OK
;

9557 
	`as£π
–
p
->
öTøns
!=
TRANS_NONE
 );

9558 if–
p
->
sh¨abÀ
 ){

9559 
u8
 
lockTy≥
 = 
READ_LOCK
 + 
isWrôeLock
;

9560 
	`as£π
–
READ_LOCK
+1==
WRITE_LOCK
 );

9561 
	`as£π
–
isWrôeLock
==0 || isWriteLock==1 );

9563 
	`sqlôe3BåìE¡î
(
p
);

9564 
rc
 = 
	`quîySh¨edCacheTabÀLock
(
p
, 
iTab
, 
lockTy≥
);

9565 if–
rc
==
SQLITE_OK
 ){

9566 
rc
 = 
	`£tSh¨edCacheTabÀLock
(
p
, 
iTab
, 
lockTy≥
);

9568 
	`sqlôe3BåìLóve
(
p
);

9570  
rc
;

9571 
	}
}

9574 #i‚de‡
SQLITE_OMIT_INCRBLOB


9585 
	$sqlôe3BåìPutD©a
(
BtCurs‹
 *
pC§
, 
u32
 
off£t
, u32 
amt
, *
z
){

9586 
rc
;

9587 
	`as£π
–
	`curs‹OwnsBtSh¨ed
(
pC§
) );

9588 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pC§
->
pBåì
->
db
->
muãx
) );

9589 
	`as£π
–
pC§
->
curFœgs
 & 
BTCF_In¸blob
 );

9591 
rc
 = 
	`ª°‹eCurs‹Posôi⁄
(
pC§
);

9592 if–
rc
!=
SQLITE_OK
 ){

9593  
rc
;

9595 
	`as£π
–
pC§
->
eSèã
!=
CURSOR_REQUIRESEEK
 );

9596 if–
pC§
->
eSèã
!=
CURSOR_VALID
 ){

9597  
SQLITE_ABORT
;

9608 
	`VVA_ONLY
(
rc
 =Ë
	`ßveAŒCurs‹s
(
pC§
->
pBt
,ÖC§->
pgnoRoŸ
,ÖCsr);

9609 
	`as£π
–
rc
==
SQLITE_OK
 );

9618 if–(
pC§
->
curFœgs
 & 
BTCF_WrôeFœg
)==0 ){

9619  
SQLITE_READONLY
;

9621 
	`as£π
–(
pC§
->
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)==0

9622 && 
pC§
->
pBt
->
öTønß˘i⁄
==
TRANS_WRITE
 );

9623 
	`as£π
–
	`hasSh¨edCacheTabÀLock
(
pC§
->
pBåì
,ÖC§->
pgnoRoŸ
, 0, 2) );

9624 
	`as£π
–!
	`hasRódC⁄Êi˘s
(
pC§
->
pBåì
,ÖC§->
pgnoRoŸ
) );

9625 
	`as£π
–
pC§
->
≠Page
[pC§->
iPage
]->
ötKey
 );

9627  
	`ac˚ssPaylﬂd
(
pC§
, 
off£t
, 
amt
, (*)
z
, 1);

9628 
	}
}

9633 
	$sqlôe3BåìIn¸blobCurs‹
(
BtCurs‹
 *
pCur
){

9634 
pCur
->
curFœgs
 |
BTCF_In¸blob
;

9635 
pCur
->
pBåì
->
hasIn¸blobCur
 = 1;

9636 
	}
}

9644 
	$sqlôe3BåìSëVîsi⁄
(
Båì
 *
pBåì
, 
iVîsi⁄
){

9645 
BtSh¨ed
 *
pBt
 = 
pBåì
->pBt;

9646 
rc
;

9648 
	`as£π
–
iVîsi⁄
==1 || iVersion==2 );

9653 
pBt
->
btsFœgs
 &~
BTS_NO_WAL
;

9654 if–
iVîsi⁄
==1 ) 
pBt
->
btsFœgs
 |
BTS_NO_WAL
;

9656 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBåì
, 0);

9657 if–
rc
==
SQLITE_OK
 ){

9658 
u8
 *
aD©a
 = 
pBt
->
pPage1
->aData;

9659 if–
aD©a
[18]!=(
u8
)
iVîsi⁄
 ||áData[19]!=(u8)iVersion ){

9660 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBåì
, 2);

9661 if–
rc
==
SQLITE_OK
 ){

9662 
rc
 = 
	`sqlôe3PagîWrôe
(
pBt
->
pPage1
->
pDbPage
);

9663 if–
rc
==
SQLITE_OK
 ){

9664 
aD©a
[18] = (
u8
)
iVîsi⁄
;

9665 
aD©a
[19] = (
u8
)
iVîsi⁄
;

9671 
pBt
->
btsFœgs
 &~
BTS_NO_WAL
;

9672  
rc
;

9673 
	}
}

9679 
	$sqlôe3BåìCurs‹HasHöt
(
BtCurs‹
 *
pC§
, 
mask
){

9680  (
pC§
->
höts
 & 
mask
)!=0;

9681 
	}
}

9686 
	$sqlôe3BåìIsRód⁄ly
(
Båì
 *
p
){

9687  (
p
->
pBt
->
btsFœgs
 & 
BTS_READ_ONLY
)!=0;

9688 
	}
}

9693 
	$sqlôe3HódîSizeBåì
(){  
	`ROUND8
((
MemPage
)); 
	}
}

9695 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

9699 
	$sqlôe3BåìSh¨abÀ
(
Båì
 *
p
){

9700  
p
->
sh¨abÀ
;

9701 
	}
}

9708 
	$sqlôe3BåìC⁄√˘i⁄Cou¡
(
Båì
 *
p
){

9709 
	`ã°ˇ£
–
p
->
sh¨abÀ
 );

9710  
p
->
pBt
->
nRef
;

9711 
	}
}

	@btree.h

16 #i‚de‡
SQLITE_BTREE_H


17 
	#SQLITE_BTREE_H


	)

22 
	#SQLITE_N_BTREE_META
 16

	)

28 #i‚de‡
SQLITE_DEFAULT_AUTOVACUUM


29 
	#SQLITE_DEFAULT_AUTOVACUUM
 0

	)

32 
	#BTREE_AUTOVACUUM_NONE
 0

	)

33 
	#BTREE_AUTOVACUUM_FULL
 1

	)

34 
	#BTREE_AUTOVACUUM_INCR
 2

	)

39 
Båì
 
	tBåì
;

40 
BtCurs‹
 
	tBtCurs‹
;

41 
BtSh¨ed
 
	tBtSh¨ed
;

42 
BåìPaylﬂd
 
	tBåìPaylﬂd
;

45 
sqlôe3BåìO≥n
(

46 
sqlôe3_vfs
 *
pVfs
,

47 c⁄° *
zFûíame
,

48 
sqlôe3
 *
db
,

49 
Båì
 **
µBåì
,

50 
Êags
,

51 
vfsFœgs


60 
	#BTREE_OMIT_JOURNAL
 1

	)

61 
	#BTREE_MEMORY
 2

	)

62 
	#BTREE_SINGLE
 4

	)

63 
	#BTREE_UNORDERED
 8

	)

65 
sqlôe3BåìClo£
(
Båì
*);

66 
sqlôe3BåìSëCacheSize
(
Båì
*,);

67 
sqlôe3BåìSëSpûlSize
(
Båì
*,);

68 #i‡
SQLITE_MAX_MMAP_SIZE
>0

69 
sqlôe3BåìSëMm≠Limô
(
Båì
*,
sqlôe3_öt64
);

71 
sqlôe3BåìSëPagîFœgs
(
Båì
*,);

72 
sqlôe3BåìSëPageSize
(
Båì
 *
p
, 
nPagesize
, 
nRe£rve
, 
eFix
);

73 
sqlôe3BåìGëPageSize
(
Båì
*);

74 
sqlôe3BåìMaxPageCou¡
(
Båì
*,);

75 
u32
 
sqlôe3BåìLa°Page
(
Båì
*);

76 
sqlôe3BåìSecuªDñëe
(
Båì
*,);

77 
sqlôe3BåìGëO±imÆRe£rve
(
Båì
*);

78 
sqlôe3BåìGëRe£rveNoMuãx
(
Båì
 *
p
);

79 
sqlôe3BåìSëAutoVacuum
(
Båì
 *, );

80 
sqlôe3BåìGëAutoVacuum
(
Båì
 *);

81 
sqlôe3BåìBegöTøns
(
Båì
*,);

82 
sqlôe3BåìCommôPha£O√
(
Båì
*, c⁄° *
zMa°î
);

83 
sqlôe3BåìCommôPha£Two
(
Båì
*, );

84 
sqlôe3BåìCommô
(
Båì
*);

85 
sqlôe3BåìRﬁlback
(
Båì
*,,);

86 
sqlôe3BåìBegöStmt
(
Båì
*,);

87 
sqlôe3BåìCª©eTabÀ
(
Båì
*, *, 
Êags
);

88 
sqlôe3BåìIsInTøns
(
Båì
*);

89 
sqlôe3BåìIsInRódTøns
(
Båì
*);

90 
sqlôe3BåìIsInBackup
(
Båì
*);

91 *
sqlôe3BåìSchema
(
Båì
 *, , (*)(*));

92 
	`sqlôe3BåìSchemaLocked
(
Båì
 *
pBåì
);

93 
	`sqlôe3BåìLockTabÀ
(
Båì
 *
pBåì
, 
iTab
, 
u8
 
isWrôeLock
);

94 
	`sqlôe3BåìSavïoöt
(
Båì
 *, , );

96 c⁄° *
	`sqlôe3BåìGëFûíame
(
Båì
 *);

97 c⁄° *
	`sqlôe3BåìGëJou∫Æ«me
(
Båì
 *);

98 
	`sqlôe3BåìC›yFûe
(
Båì
 *, Btree *);

100 
	`sqlôe3BåìIn¸Vacuum
(
Båì
 *);

112 
	#BTREE_INTKEY
 1

	)

113 
	#BTREE_BLOBKEY
 2

	)

115 
	`sqlôe3BåìDr›TabÀ
(
Båì
*, , *);

116 
	`sqlôe3BåìCÀ¨TabÀ
(
Båì
*, , *);

117 
	`sqlôe3BåìCÀ¨TabÀOfCurs‹
(
BtCurs‹
*);

118 
	`sqlôe3BåìTrùAŒCurs‹s
(
Båì
*, , );

120 
	`sqlôe3BåìGëMëa
(
Båì
 *
pBåì
, 
idx
, 
u32
 *
pVÆue
);

121 
	`sqlôe3BåìUpd©eMëa
(
Båì
*, 
idx
, 
u32
 
vÆue
);

123 
	`sqlôe3BåìNewDb
(
Båì
 *
p
);

142 
	#BTREE_FREE_PAGE_COUNT
 0

	)

143 
	#BTREE_SCHEMA_VERSION
 1

	)

144 
	#BTREE_FILE_FORMAT
 2

	)

145 
	#BTREE_DEFAULT_CACHE_SIZE
 3

	)

146 
	#BTREE_LARGEST_ROOT_PAGE
 4

	)

147 
	#BTREE_TEXT_ENCODING
 5

	)

148 
	#BTREE_USER_VERSION
 6

	)

149 
	#BTREE_INCR_VACUUM
 7

	)

150 
	#BTREE_APPLICATION_ID
 8

	)

151 
	#BTREE_DATA_VERSION
 15

	)

180 
	#BTREE_HINT_RANGE
 0

	)

195 
	#BTREE_BULKLOAD
 0x00000001

	)

196 
	#BTREE_SEEK_EQ
 0x00000002

	)

221 
	#BTREE_WRCSR
 0x00000004

	)

222 
	#BTREE_FORDELETE
 0x00000008

	)

224 
	`sqlôe3BåìCurs‹
(

225 
Båì
*,

226 
iTabÀ
,

227 
wrFœg
,

228 
KeyInfo
*,

229 
BtCurs‹
 *
pCurs‹


231 
	`sqlôe3BåìCurs‹Size
();

232 
	`sqlôe3BåìCurs‹Zîo
(
BtCurs‹
*);

233 
	`sqlôe3BåìCurs‹HötFœgs
(
BtCurs‹
*, );

234 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


235 
	`sqlôe3BåìCurs‹Höt
(
BtCurs‹
*, , ...);

238 
	`sqlôe3BåìClo£Curs‹
(
BtCurs‹
*);

239 
	`sqlôe3BåìMovëoU≈acked
(

240 
BtCurs‹
*,

241 
U≈ackedRec‹d
 *
pUnKey
,

242 
i64
 
ötKey
,

243 
büs
,

244 *
pRes


246 
	`sqlôe3BåìCurs‹HasMoved
(
BtCurs‹
*);

247 
	`sqlôe3BåìCurs‹Re°‹e
(
BtCurs‹
*, *);

248 
	`sqlôe3BåìDñëe
(
BtCurs‹
*, 
u8
 
Êags
);

251 
	#BTREE_SAVEPOSITION
 0x02

	)

252 
	#BTREE_AUXDELETE
 0x04

	)

272 
	sBåìPaylﬂd
 {

273 c⁄° *
pKey
;

274 
sqlôe3_öt64
 
nKey
;

275 c⁄° *
pD©a
;

276 
nD©a
;

277 
nZîo
;

280 
	`sqlôe3BåìIn£π
(
BtCurs‹
*, c⁄° 
BåìPaylﬂd
 *
pPaylﬂd
,

281 
büs
, 
£ekResu…
);

282 
	`sqlôe3BåìFú°
(
BtCurs‹
*, *
pRes
);

283 
	`sqlôe3BåìLa°
(
BtCurs‹
*, *
pRes
);

284 
	`sqlôe3BåìNext
(
BtCurs‹
*, *
pRes
);

285 
	`sqlôe3BåìEof
(
BtCurs‹
*);

286 
	`sqlôe3BåìPªvious
(
BtCurs‹
*, *
pRes
);

287 
i64
 
	`sqlôe3BåìI¡egîKey
(
BtCurs‹
*);

288 
	`sqlôe3BåìKey
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

289 c⁄° *
	`sqlôe3BåìPaylﬂdFëch
(
BtCurs‹
*, 
u32
 *
pAmt
);

290 
u32
 
	`sqlôe3BåìPaylﬂdSize
(
BtCurs‹
*);

291 
	`sqlôe3BåìD©a
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

293 *
	`sqlôe3BåìI¡egrôyCheck
(
Båì
*, *
aRoŸ
, 
nRoŸ
, , *);

294 
Pagî
 *
	`sqlôe3BåìPagî
(
Båì
*);

296 
	`sqlôe3BåìPutD©a
(
BtCurs‹
*, 
u32
 
off£t
, u32 
amt
, *);

297 
	`sqlôe3BåìIn¸blobCurs‹
(
BtCurs‹
 *);

298 
	`sqlôe3BåìCÀ¨Curs‹
(
BtCurs‹
 *);

299 
	`sqlôe3BåìSëVîsi⁄
(
Båì
 *
pBt
, 
iVîsi⁄
);

300 
	`sqlôe3BåìCurs‹HasHöt
(
BtCurs‹
*, 
mask
);

301 
	`sqlôe3BåìIsRód⁄ly
(
Båì
 *
pBt
);

302 
	`sqlôe3HódîSizeBåì
();

304 #i‚de‡
NDEBUG


305 
	`sqlôe3BåìCurs‹IsVÆid
(
BtCurs‹
*);

308 #i‚de‡
SQLITE_OMIT_BTREECOUNT


309 
	`sqlôe3BåìCou¡
(
BtCurs‹
 *, 
i64
 *);

312 #ifde‡
SQLITE_TEST


313 
	`sqlôe3BåìCurs‹Info
(
BtCurs‹
*, *, );

314 
	`sqlôe3BåìCurs‹Li°
(
Båì
*);

317 #i‚de‡
SQLITE_OMIT_WAL


318 
	`sqlôe3BåìCheckpoöt
(
Båì
*, , *, *);

326 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


327 
	`sqlôe3BåìE¡î
(
Båì
*);

328 
	`sqlôe3BåìE¡îAŒ
(
sqlôe3
*);

329 
	`sqlôe3BåìSh¨abÀ
(
Båì
*);

330 
	`sqlôe3BåìE¡îCurs‹
(
BtCurs‹
*);

331 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(
Båì
*);

333 
	#sqlôe3BåìE¡î
(
X
)

	)

334 
	#sqlôe3BåìE¡îAŒ
(
X
)

	)

335 
	#sqlôe3BåìSh¨abÀ
(
X
Ë0

	)

336 
	#sqlôe3BåìE¡îCurs‹
(
X
)

	)

337 
	#sqlôe3BåìC⁄√˘i⁄Cou¡
(
X
Ë1

	)

340 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE


341 
	`sqlôe3BåìLóve
(
Båì
*);

342 
	`sqlôe3BåìLóveCurs‹
(
BtCurs‹
*);

343 
	`sqlôe3BåìLóveAŒ
(
sqlôe3
*);

344 #i‚de‡
NDEBUG


346 
	`sqlôe3BåìHﬁdsMuãx
(
Båì
*);

347 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
sqlôe3
*);

348 
	`sqlôe3SchemaMuãxHñd
(
sqlôe3
*,,
Schema
*);

352 
	#sqlôe3BåìLóve
(
X
)

	)

353 
	#sqlôe3BåìLóveCurs‹
(
X
)

	)

354 
	#sqlôe3BåìLóveAŒ
(
X
)

	)

356 
	#sqlôe3BåìHﬁdsMuãx
(
X
Ë1

	)

357 
	#sqlôe3BåìHﬁdsAŒMuãxes
(
X
Ë1

	)

358 
	#sqlôe3SchemaMuãxHñd
(
X
,
Y
,
Z
Ë1

	)

	@btreeInt.h

216 
	~"sqlôeI¡.h
"

222 
	#MX_CELL_SIZE
(
pBt
Ë(()’Bt->
∑geSize
-8))

	)

229 
	#MX_CELL
(
pBt
Ë(’Bt->
∑geSize
-8)/6)

	)

232 
MemPage
 
	tMemPage
;

233 
BtLock
 
	tBtLock
;

234 
CñlInfo
 
	tCñlInfo
;

248 #i‚de‡
SQLITE_FILE_HEADER


249 
	#SQLITE_FILE_HEADER
 "SQLôêf‹m© 3"

	)

256 
	#PTF_INTKEY
 0x01

	)

257 
	#PTF_ZERODATA
 0x02

	)

258 
	#PTF_LEAFDATA
 0x04

	)

259 
	#PTF_LEAF
 0x08

	)

274 
	sMemPage
 {

275 
u8
 
	misInô
;

276 
u8
 
	mnOvîÊow
;

277 
u8
 
	mötKey
;

278 
u8
 
	mötKeyLóf
;

279 
u8
 
	mÀaf
;

280 
u8
 
	mhdrOff£t
;

281 
u8
 
	mchûdPåSize
;

282 
u8
 
	mmax1byãPaylﬂd
;

283 
u8
 
	mbBusy
;

284 
u16
 
	mmaxLoˇl
;

285 
u16
 
	mmöLoˇl
;

286 
u16
 
	m˚ŒOff£t
;

287 
u16
 
	mnFªe
;

288 
u16
 
	mnCñl
;

289 
u16
 
	mmaskPage
;

290 
u16
 
	maiOvÊ
[5];

292 
u8
 *
	m≠OvÊ
[5];

293 
BtSh¨ed
 *
	mpBt
;

294 
u8
 *
	maD©a
;

295 
u8
 *
	maD©aEnd
;

296 
u8
 *
	maCñlIdx
;

297 
u8
 *
	maD©aOf°
;

298 
DbPage
 *
	mpDbPage
;

299 
u16
 (*
xCñlSize
)(
	mMemPage
*,
	mu8
*);

300 (*
	mxP¨£Cñl
)(
	mMemPage
*,
	mu8
*,
	mCñlInfo
*);

301 
Pgno
 
	mpgno
;

309 
	#EXTRA_SIZE
 (
MemPage
)

	)

318 
	sBtLock
 {

319 
Båì
 *
	mpBåì
;

320 
Pgno
 
	miTabÀ
;

321 
u8
 
	meLock
;

322 
BtLock
 *
	mpNext
;

326 
	#READ_LOCK
 1

	)

327 
	#WRITE_LOCK
 2

	)

350 
	sBåì
 {

351 
sqlôe3
 *
	mdb
;

352 
BtSh¨ed
 *
	mpBt
;

353 
u8
 
	möTøns
;

354 
u8
 
	msh¨abÀ
;

355 
u8
 
	mlocked
;

356 
u8
 
	mhasIn¸blobCur
;

357 
	mw™tToLock
;

358 
	mnBackup
;

359 
u32
 
	miD©aVîsi⁄
;

360 
Båì
 *
	mpNext
;

361 
Båì
 *
	mpPªv
;

362 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


363 
BtLock
 
	mlock
;

374 
	#TRANS_NONE
 0

	)

375 
	#TRANS_READ
 1

	)

376 
	#TRANS_WRITE
 2

	)

413 
	sBtSh¨ed
 {

414 
Pagî
 *
	mpPagî
;

415 
sqlôe3
 *
	mdb
;

416 
BtCurs‹
 *
	mpCurs‹
;

417 
MemPage
 *
	mpPage1
;

418 
u8
 
	m›íFœgs
;

419 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


420 
u8
 
	mautoVacuum
;

421 
u8
 
	mö¸Vacuum
;

422 
u8
 
	mbDoTrunˇã
;

424 
u8
 
	möTønß˘i⁄
;

425 
u8
 
	mmax1byãPaylﬂd
;

426 #ifde‡
SQLITE_HAS_CODEC


427 
u8
 
	m›timÆRe£rve
;

429 
u16
 
	mbtsFœgs
;

430 
u16
 
	mmaxLoˇl
;

431 
u16
 
	mmöLoˇl
;

432 
u16
 
	mmaxLóf
;

433 
u16
 
	mmöLóf
;

434 
u32
 
	m∑geSize
;

435 
u32
 
	mußbÀSize
;

436 
	mnTønß˘i⁄
;

437 
u32
 
	mnPage
;

438 *
	mpSchema
;

439 (*
	mxFªeSchema
)(*);

440 
sqlôe3_muãx
 *
	mmuãx
;

441 
Bôvec
 *
	mpHasC⁄ã¡
;

442 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


443 
	mnRef
;

444 
BtSh¨ed
 *
	mpNext
;

445 
BtLock
 *
	mpLock
;

446 
Båì
 *
	mpWrôî
;

448 
u8
 *
	mpTmpS∑˚
;

454 
	#BTS_READ_ONLY
 0x0001

	)

455 
	#BTS_PAGESIZE_FIXED
 0x0002

	)

456 
	#BTS_SECURE_DELETE
 0x0004

	)

457 
	#BTS_INITIALLY_EMPTY
 0x0008

	)

458 
	#BTS_NO_WAL
 0x0010

	)

459 
	#BTS_EXCLUSIVE
 0x0020

	)

460 
	#BTS_PENDING
 0x0040

	)

467 
	sCñlInfo
 {

468 
i64
 
	mnKey
;

469 
u8
 *
	mpPaylﬂd
;

470 
u32
 
	mnPaylﬂd
;

471 
u16
 
	mnLoˇl
;

472 
u16
 
	mnSize
;

484 
	#BTCURSOR_MAX_DEPTH
 20

	)

505 
	sBtCurs‹
 {

506 
Båì
 *
	mpBåì
;

507 
BtSh¨ed
 *
	mpBt
;

508 
BtCurs‹
 *
	mpNext
;

509 
Pgno
 *
	maOvîÊow
;

510 
CñlInfo
 
	möfo
;

511 
i64
 
	mnKey
;

512 *
	mpKey
;

513 
Pgno
 
	mpgnoRoŸ
;

514 
	mnOvÊAŒoc
;

515 
	mskùNext
;

517 
u8
 
	mcurFœgs
;

518 
u8
 
	mcurPagîFœgs
;

519 
u8
 
	meSèã
;

520 
u8
 
	mhöts
;

524 
i8
 
	miPage
;

525 
u8
 
	mcurI¡Key
;

526 
KeyInfo
 *
	mpKeyInfo
;

527 *
	m∑ddög1
;

528 
u16
 
	maiIdx
[
BTCURSOR_MAX_DEPTH
];

529 
MemPage
 *
	m≠Page
[
BTCURSOR_MAX_DEPTH
];

535 
	#BTCF_WrôeFœg
 0x01

	)

536 
	#BTCF_VÆidNKey
 0x02

	)

537 
	#BTCF_VÆidOvÊ
 0x04

	)

538 
	#BTCF_AtLa°
 0x08

	)

539 
	#BTCF_In¸blob
 0x10

	)

540 
	#BTCF_Mu…ùÀ
 0x20

	)

572 
	#CURSOR_INVALID
 0

	)

573 
	#CURSOR_VALID
 1

	)

574 
	#CURSOR_SKIPNEXT
 2

	)

575 
	#CURSOR_REQUIRESEEK
 3

	)

576 
	#CURSOR_FAULT
 4

	)

581 
	#PENDING_BYTE_PAGE
(
pBt
Ë
	`PAGER_MJ_PGNO
’Bt)

	)

598 
	#PTRMAP_PAGENO
(
pBt
, 
pgno
Ë
	`±rm≠Pagío
’Bt,Ögno)

	)

599 
	#PTRMAP_PTROFFSET
(
pg±rm≠
, 
pgno
Ë(5*’gno-pg±rm≠-1))

	)

600 
	#PTRMAP_ISPAGE
(
pBt
, 
pgno
Ë(
	`PTRMAP_PAGENO
(’Bt),’gno))==’gno))

	)

633 
	#PTRMAP_ROOTPAGE
 1

	)

634 
	#PTRMAP_FREEPAGE
 2

	)

635 
	#PTRMAP_OVERFLOW1
 3

	)

636 
	#PTRMAP_OVERFLOW2
 4

	)

637 
	#PTRMAP_BTREE
 5

	)

642 
	#båìI¡egrôy
(
p
) \

643 
	`as£π
–
p
->
pBt
->
öTønß˘i⁄
!=
TRANS_NONE
 ||Ö->pBt->
nTønß˘i⁄
==0 ); \

644 
	`as£π
–
p
->
pBt
->
öTønß˘i⁄
>ı->
öTøns
 );

	)

654 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


655 
	#ISAUTOVACUUM
 (
pBt
->
autoVacuum
)

	)

657 
	#ISAUTOVACUUM
 0

	)

671 
I¡egrôyCk
 
	tI¡egrôyCk
;

672 
	sI¡egrôyCk
 {

673 
BtSh¨ed
 *
	mpBt
;

674 
Pagî
 *
	mpPagî
;

675 
u8
 *
	maPgRef
;

676 
Pgno
 
	mnPage
;

677 
	mmxEº
;

678 
	mnEº
;

679 
	mmÆlocFaûed
;

680 c⁄° *
	mzPfx
;

681 
	mv1
, 
	mv2
;

682 
SåAccum
 
	mîrMsg
;

683 
u32
 *
	mhóp
;

689 
	#gë2byã
(
x
Ë((x)[0]<<8 | (x)[1])

	)

690 
	#put2byã
(
p
,
v
Ë(’)[0] = (
u8
)((v)>>8), (p)[1] = (u8)(v))

	)

691 
	#gë4byã
 
sqlôe3Gë4byã


	)

692 
	#put4byã
 
sqlôe3Put4byã


	)

699 #i‡
SQLITE_BYTEORDER
==4321

700 
	#gë2byãAlig√d
(
x
Ë(*(
u16
*)(x))

	)

701 #ñi‡
SQLITE_BYTEORDER
==1234 && !
deföed
(
SQLITE_DISABLE_INTRINSIC
) \

702 && 
	gGCC_VERSION
>=4008000

703 
	#gë2byãAlig√d
(
x
Ë
	`__buûtö_bsw≠16
(*(
u16
*)(x))

	)

704 #ñi‡
SQLITE_BYTEORDER
==1234 && !
deföed
(
SQLITE_DISABLE_INTRINSIC
) \

705 && 
deföed
(
_MSC_VER
) && _MSC_VER>=1300

706 
	#gë2byãAlig√d
(
x
Ë
	`_byãsw≠_ush‹t
(*(
u16
*)(x))

	)

708 
	#gë2byãAlig√d
(
x
Ë((x)[0]<<8 | (x)[1])

	)

	@build.c

25 
	~"sqlôeI¡.h
"

27 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


32 
	sTabÀLock
 {

33 
	miDb
;

34 
	miTab
;

35 
u8
 
	misWrôeLock
;

36 c⁄° *
	mzName
;

49 
	$sqlôe3TabÀLock
(

50 
P¨£
 *
pP¨£
,

51 
iDb
,

52 
iTab
,

53 
u8
 
isWrôeLock
,

54 c⁄° *
zName


56 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

57 
i
;

58 
nByãs
;

59 
TabÀLock
 *
p
;

60 
	`as£π
–
iDb
>=0 );

62 
i
=0; i<
pT›Àvñ
->
nTabÀLock
; i++){

63 
p
 = &
pT›Àvñ
->
aTabÀLock
[
i
];

64 if–
p
->
iDb
==iDb &&Ö->
iTab
==iTab ){

65 
p
->
isWrôeLock
 = (p->isWriteLock || isWriteLock);

70 
nByãs
 = (
TabÀLock
Ë* (
pT›Àvñ
->
nTabÀLock
+1);

71 
pT›Àvñ
->
aTabÀLock
 =

72 
	`sqlôe3DbRóŒocOrFªe
(
pT›Àvñ
->
db
,ÖT›Àvñ->
aTabÀLock
, 
nByãs
);

73 if–
pT›Àvñ
->
aTabÀLock
 ){

74 
p
 = &
pT›Àvñ
->
aTabÀLock
[pT›Àvñ->
nTabÀLock
++];

75 
p
->
iDb
 = iDb;

76 
p
->
iTab
 = iTab;

77 
p
->
isWrôeLock
 = isWriteLock;

78 
p
->
zName
 = zName;

80 
pT›Àvñ
->
nTabÀLock
 = 0;

81 
	`sqlôe3OomFau…
(
pT›Àvñ
->
db
);

83 
	}
}

89 
	$codeTabÀLocks
(
P¨£
 *
pP¨£
){

90 
i
;

91 
Vdbe
 *
pVdbe
;

93 
pVdbe
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

94 
	`as£π
–
pVdbe
!=0 );

96 
i
=0; i<
pP¨£
->
nTabÀLock
; i++){

97 
TabÀLock
 *
p
 = &
pP¨£
->
aTabÀLock
[
i
];

98 
p1
 = 
p
->
iDb
;

99 
	`sqlôe3VdbeAddOp4
(
pVdbe
, 
OP_TabÀLock
, 
p1
, 
p
->
iTab
,Ö->
isWrôeLock
,

100 
p
->
zName
, 
P4_STATIC
);

102 
	}
}

104 
	#codeTabÀLocks
(
x
)

	)

112 #i‡
SQLITE_MAX_ATTACHED
>30

113 
	$sqlôe3DbMaskAŒZîo
(
yDbMask
 
m
){

114 
i
;

115 
i
=0; i<(
yDbMask
); i++Ëif–
m
[i] )  0;

117 
	}
}

130 
	$sqlôe3FöishCodög
(
P¨£
 *
pP¨£
){

131 
sqlôe3
 *
db
;

132 
Vdbe
 *
v
;

134 
	`as£π
–
pP¨£
->
pT›Àvñ
==0 );

135 
db
 = 
pP¨£
->db;

136 if–
pP¨£
->
√°ed
 ) ;

137 if–
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ){

138 if–
pP¨£
->
rc
==
SQLITE_OK
 )ÖP¨£->r¯
SQLITE_ERROR
;

145 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

146 
	`as£π
–!
pP¨£
->
isMu…iWrôe


147 || 
	`sqlôe3VdbeAs£πMayAb‹t
(
v
, 
pP¨£
->
mayAb‹t
));

148 if–
v
 ){

149  
	`sqlôe3VdbeDñëePri‹Opcode
(
v
, 
OP_Clo£
) ){}

150 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

152 #i‡
SQLITE_USER_AUTHENTICATION


153 if–
pP¨£
->
nTabÀLock
>0 && 
db
->
öô
.
busy
==0 ){

154 
	`sqlôe3U£rAuthInô
(
db
);

155 if–
db
->
auth
.
authLevñ
<
UAUTH_U£r
 ){

156 
pP¨£
->
rc
 = 
SQLITE_AUTH_USER
;

157 
	`sqlôe3Eº‹Msg
(
pP¨£
, "userÇotáuthenticated");

169 if–
db
->
mÆlocFaûed
==0

170 && (
	`DbMaskN⁄Zîo
(
pP¨£
->
cookõMask
Ë||ÖP¨£->
pC⁄°Ex¥
)

172 
iDb
, 
i
;

173 
	`as£π
–
	`sqlôe3VdbeGëOp
(
v
, 0)->
›code
==
OP_Inô
 );

174 
	`sqlôe3VdbeJumpHîe
(
v
, 0);

175 
iDb
=0; iDb<
db
->
nDb
; iDb++){

176 if–
	`DbMaskTe°
(
pP¨£
->
cookõMask
, 
iDb
)==0 ) ;

177 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

178 
	`sqlôe3VdbeAddOp4I¡
(
v
,

179 
OP_Tønß˘i⁄
,

180 
iDb
,

181 
	`DbMaskTe°
(
pP¨£
->
wrôeMask
,
iDb
),

182 
pP¨£
->
cookõVÆue
[
iDb
],

183 
db
->
aDb
[
iDb
].
pSchema
->
iGíî©i⁄


185 if–
db
->
öô
.
busy
==0 ) 
	`sqlôe3VdbeCh™geP5
(
v
, 1);

186 
	`VdbeCommít
((
v
,

187 "u£sStmtJou∫Æ=%d", 
pP¨£
->
mayAb‹t
 &&ÖP¨£->
isMu…iWrôe
));

189 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


190 
i
=0; i<
pP¨£
->
nVèbLock
; i++){

191 *
vèb
 = (*)
	`sqlôe3GëVTabÀ
(
db
, 
pP¨£
->
≠VèbLock
[
i
]);

192 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VBegö
, 0, 0, 0, 
vèb
, 
P4_VTAB
);

194 
pP¨£
->
nVèbLock
 = 0;

201 
	`codeTabÀLocks
(
pP¨£
);

205 
	`sqlôe3Autoö¸emítBegö
(
pP¨£
);

208 if–
pP¨£
->
pC⁄°Ex¥
 ){

209 
Ex¥Li°
 *
pEL
 = 
pP¨£
->
pC⁄°Ex¥
;

210 
pP¨£
->
okC⁄°Fa˘‹
 = 0;

211 
i
=0; i<
pEL
->
nEx¥
; i++){

212 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEL
->
a
[
i
].
pEx¥
,ÖEL->a[i].
u
.
iC⁄°Ex¥Reg
);

217 
	`sqlôe3VdbeGŸo
(
v
, 1);

224 if–
v
 && 
pP¨£
->
nEº
==0 && !
db
->
mÆlocFaûed
 ){

225 
	`as£π
–
pP¨£
->
iCacheLevñ
==0 );

228 if–
pP¨£
->
pAöc
!=0 &&ÖP¨£->
nTab
==0 )ÖParse->nTab = 1;

229 
	`sqlôe3VdbeMakeRódy
(
v
, 
pP¨£
);

230 
pP¨£
->
rc
 = 
SQLITE_DONE
;

232 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

237 
pP¨£
->
cﬁNamesSë
 = 0;

238 
pP¨£
->
nTab
 = 0;

239 
pP¨£
->
nMem
 = 0;

240 
pP¨£
->
nSë
 = 0;

241 
pP¨£
->
nV¨
 = 0;

242 
	`DbMaskZîo
(
pP¨£
->
cookõMask
);

244 
	}
}

258 
	$sqlôe3Ne°edP¨£
(
P¨£
 *
pP¨£
, c⁄° *
zF‹m©
, ...){

259 
va_li°
 
≠
;

260 *
zSql
;

261 *
zEºMsg
 = 0;

262 
sqlôe3
 *
db
 = 
pP¨£
->db;

263 
	#SAVE_SZ
 ((
P¨£
Ë- 
	`off£tof
(P¨£,
nV¨
))

	)

264 
ßveBuf
[
SAVE_SZ
];

266 if–
pP¨£
->
nEº
 ) ;

267 
	`as£π
–
pP¨£
->
√°ed
<10 );

268 
	`va_°¨t
(
≠
, 
zF‹m©
);

269 
zSql
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

270 
	`va_íd
(
≠
);

271 if–
zSql
==0 ){

274 
pP¨£
->
√°ed
++;

275 
	`mem˝y
(
ßveBuf
, &
pP¨£
->
nV¨
, 
SAVE_SZ
);

276 
	`mem£t
(&
pP¨£
->
nV¨
, 0, 
SAVE_SZ
);

277 
	`sqlôe3RunP¨£r
(
pP¨£
, 
zSql
, &
zEºMsg
);

278 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

279 
	`sqlôe3DbFªe
(
db
, 
zSql
);

280 
	`mem˝y
(&
pP¨£
->
nV¨
, 
ßveBuf
, 
SAVE_SZ
);

281 
pP¨£
->
√°ed
--;

282 
	}
}

284 #i‡
SQLITE_USER_AUTHENTICATION


289 
	$sqlôe3U£rAuthTabÀ
(c⁄° *
zTabÀ
){

290  
	`sqlôe3_°ricmp
(
zTabÀ
, "sqlite_user")==0;

291 
	}
}

306 
TabÀ
 *
	$sqlôe3FödTabÀ
(
sqlôe3
 *
db
, c⁄° *
zName
, c⁄° *
zD©aba£
){

307 
TabÀ
 *
p
 = 0;

308 
i
;

311 
	`as£π
–
zD©aba£
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

312 #i‡
SQLITE_USER_AUTHENTICATION


315 if–
db
->
auth
.
authLevñ
<
UAUTH_Admö
 && 
	`sqlôe3U£rAuthTabÀ
(
zName
)!=0 ){

319 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

320 
j
 = (
i
<2) ? i^1 : i;

321 if–
zD©aba£
!=0 && 
	`sqlôe3SåICmp
(zD©aba£, 
db
->
aDb
[
j
].
zName
) ) ;

322 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

323 
p
 = 
	`sqlôe3HashFöd
(&
db
->
aDb
[
j
].
pSchema
->
tblHash
, 
zName
);

324 if–
p
 ) ;

326  
p
;

327 
	}
}

339 
TabÀ
 *
	$sqlôe3LoˇãTabÀ
(

340 
P¨£
 *
pP¨£
,

341 
u32
 
Êags
,

342 c⁄° *
zName
,

343 c⁄° *
zDba£


345 
TabÀ
 *
p
;

349 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

353 
p
 = 
	`sqlôe3FödTabÀ
(
pP¨£
->
db
, 
zName
, 
zDba£
);

354 if–
p
==0 ){

355 c⁄° *
zMsg
 = 
Êags
 & 
LOCATE_VIEW
 ? "no such view" : "no suchÅable";

356 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


357 if–
	`sqlôe3FödDbName
(
pP¨£
->
db
, 
zDba£
)<1 ){

361 
ModuÀ
 *
pMod
 = (ModuÀ*)
	`sqlôe3HashFöd
(&
pP¨£
->
db
->
aModuÀ
, 
zName
);

362 if–
pMod
 && 
	`sqlôe3VèbEp⁄ymousTabÀInô
(
pP¨£
,ÖMod) ){

363  
pMod
->
pEpoTab
;

367 if–(
Êags
 & 
LOCATE_NOERR
)==0 ){

368 if–
zDba£
 ){

369 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s", 
zMsg
, 
zDba£
, 
zName
);

371 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s", 
zMsg
, 
zName
);

373 
pP¨£
->
checkSchema
 = 1;

377  
p
;

378 
	}
}

389 
TabÀ
 *
	$sqlôe3LoˇãTabÀIãm
(

390 
P¨£
 *
pP¨£
,

391 
u32
 
Êags
,

392 
SrcLi°_ôem
 *
p


394 c⁄° *
zDb
;

395 
	`as£π
–
p
->
pSchema
==0 ||Ö->
zD©aba£
==0 );

396 if–
p
->
pSchema
 ){

397 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
p
->
pSchema
);

398 
zDb
 = 
pP¨£
->
db
->
aDb
[
iDb
].
zName
;

400 
zDb
 = 
p
->
zD©aba£
;

402  
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 
Êags
, 
p
->
zName
, 
zDb
);

403 
	}
}

417 
Index
 *
	$sqlôe3FödIndex
(
sqlôe3
 *
db
, c⁄° *
zName
, c⁄° *
zDb
){

418 
Index
 *
p
 = 0;

419 
i
;

421 
	`as£π
–
zDb
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

422 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

423 
j
 = (
i
<2) ? i^1 : i;

424 
Schema
 *
pSchema
 = 
db
->
aDb
[
j
].pSchema;

425 
	`as£π
–
pSchema
 );

426 if–
zDb
 && 
	`sqlôe3SåICmp
(zDb, 
db
->
aDb
[
j
].
zName
) ) ;

427 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

428 
p
 = 
	`sqlôe3HashFöd
(&
pSchema
->
idxHash
, 
zName
);

429 if–
p
 ) ;

431  
p
;

432 
	}
}

437 
	$‰ìIndex
(
sqlôe3
 *
db
, 
Index
 *
p
){

438 #i‚de‡
SQLITE_OMIT_ANALYZE


439 
	`sqlôe3DñëeIndexSam∂es
(
db
, 
p
);

441 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pP¨tIdxWhîe
);

442 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
aCﬁEx¥
);

443 
	`sqlôe3DbFªe
(
db
, 
p
->
zCﬁAff
);

444 if–
p
->
isResized
 ) 
	`sqlôe3DbFªe
(
db
, (*Ì->
azCﬁl
);

445 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


446 
	`sqlôe3_‰ì
(
p
->
aiRowE°
);

448 
	`sqlôe3DbFªe
(
db
, 
p
);

449 
	}
}

457 
	$sqlôe3U∆ökAndDñëeIndex
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zIdxName
){

458 
Index
 *
pIndex
;

459 
Hash
 *
pHash
;

461 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

462 
pHash
 = &
db
->
aDb
[
iDb
].
pSchema
->
idxHash
;

463 
pIndex
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zIdxName
, 0);

464 if–
	`ALWAYS
(
pIndex
) ){

465 if–
pIndex
->
pTabÀ
->pIndex==pIndex ){

466 
pIndex
->
pTabÀ
->pIndex =ÖIndex->
pNext
;

468 
Index
 *
p
;

471 
p
 = 
pIndex
->
pTabÀ
->pIndex;

472  
	`ALWAYS
(
p
Ë&&Ö->
pNext
!=
pIndex
 ){Ö =Ö->pNext; }

473 if–
	`ALWAYS
(
p
 &&Ö->
pNext
==
pIndex
) ){

474 
p
->
pNext
 = 
pIndex
->pNext;

477 
	`‰ìIndex
(
db
, 
pIndex
);

479 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

480 
	}
}

490 
	$sqlôe3Cﬁœp£D©aba£Aºay
(
sqlôe3
 *
db
){

491 
i
, 
j
;

492 
i
=
j
=2; i<
db
->
nDb
; i++){

493 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

494 if–
pDb
->
pBt
==0 ){

495 
	`sqlôe3DbFªe
(
db
, 
pDb
->
zName
);

496 
pDb
->
zName
 = 0;

499 if–
j
<
i
 ){

500 
db
->
aDb
[
j
] = db->aDb[
i
];

502 
j
++;

504 
db
->
nDb
 = 
j
;

505 if–
db
->
nDb
<=2 && db->
aDb
!=db->
aDbSètic
 ){

506 
	`mem˝y
(
db
->
aDbSètic
, db->
aDb
, 2*(db->aDb[0]));

507 
	`sqlôe3DbFªe
(
db
, db->
aDb
);

508 
db
->
aDb
 = db->
aDbSètic
;

510 
	}
}

516 
	$sqlôe3Re£tO√Schema
(
sqlôe3
 *
db
, 
iDb
){

517 
Db
 *
pDb
;

518 
	`as£π
–
iDb
<
db
->
nDb
 );

521 
pDb
 = &
db
->
aDb
[
iDb
];

522 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

523 
	`as£π
–
pDb
->
pSchema
!=0 );

524 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

530 if–
iDb
!=1 ){

531 
pDb
 = &
db
->
aDb
[1];

532 
	`as£π
–
pDb
->
pSchema
!=0 );

533 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

536 
	}
}

542 
	$sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
sqlôe3
 *
db
){

543 
i
;

544 
	`sqlôe3BåìE¡îAŒ
(
db
);

545 
i
=0; i<
db
->
nDb
; i++){

546 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

547 if–
pDb
->
pSchema
 ){

548 
	`sqlôe3SchemaCÀ¨
(
pDb
->
pSchema
);

551 
db
->
Êags
 &~
SQLITE_I¡înCh™ges
;

552 
	`sqlôe3VèbU∆ockLi°
(
db
);

553 
	`sqlôe3BåìLóveAŒ
(
db
);

554 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

555 
	}
}

560 
	$sqlôe3CommôI¡î«lCh™ges
(
sqlôe3
 *
db
){

561 
db
->
Êags
 &~
SQLITE_I¡înCh™ges
;

562 
	}
}

568 
	$sqlôe3DñëeCﬁumnNames
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

569 
i
;

570 
Cﬁumn
 *
pCﬁ
;

571 
	`as£π
–
pTabÀ
!=0 );

572 if–(
pCﬁ
 = 
pTabÀ
->
aCﬁ
)!=0 ){

573 
i
=0; i<
pTabÀ
->
nCﬁ
; i++, 
pCﬁ
++){

574 
	`sqlôe3DbFªe
(
db
, 
pCﬁ
->
zName
);

575 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCﬁ
->
pDÊt
);

576 
	`sqlôe3DbFªe
(
db
, 
pCﬁ
->
zCﬁl
);

578 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
aCﬁ
);

580 
	}
}

597 
SQLITE_NOINLINE
 
	$dñëeTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

598 
Index
 *
pIndex
, *
pNext
;

599 
	`TESTONLY
–
nLookaside
; )

604 
	`TESTONLY
–
nLookaside
 = (
db
 && (
pTabÀ
->
èbFœgs
 & 
TF_EphemîÆ
)==0) ?

605 
db
->
lookaside
.
nOut
 : 0 );

608 
pIndex
 = 
pTabÀ
->pIndex;ÖIndex;ÖIndex=
pNext
){

609 
pNext
 = 
pIndex
->pNext;

610 
	`as£π
–
pIndex
->
pSchema
==
pTabÀ
->pSchema

611 || (
	`IsVútuÆ
(
pTabÀ
Ë&& 
pIndex
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
) );

612 if–(
db
==0 || db->
≤ByãsFªed
==0Ë&& !
	`IsVútuÆ
(
pTabÀ
) ){

613 *
zName
 = 
pIndex
->zName;

614 
	`TESTONLY
 ( 
Index
 *
pOld
 = ) 
	`sqlôe3HashIn£π
(

615 &
pIndex
->
pSchema
->
idxHash
, 
zName
, 0

617 
	`as£π
–
db
==0 || 
	`sqlôe3SchemaMuãxHñd
(db, 0, 
pIndex
->
pSchema
) );

618 
	`as£π
–
pOld
==
pIndex
 ||ÖOld==0 );

620 
	`‰ìIndex
(
db
, 
pIndex
);

624 
	`sqlôe3FkDñëe
(
db
, 
pTabÀ
);

628 
	`sqlôe3DñëeCﬁumnNames
(
db
, 
pTabÀ
);

629 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
zName
);

630 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
->
zCﬁAff
);

631 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pTabÀ
->
pSñe˘
);

632 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pTabÀ
->
pCheck
);

633 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


634 
	`sqlôe3VèbCÀ¨
(
db
, 
pTabÀ
);

636 
	`sqlôe3DbFªe
(
db
, 
pTabÀ
);

639 
	`as£π
–
nLookaside
==0 ||ÇLookaside==
db
->
lookaside
.
nOut
 );

640 
	}
}

641 
	$sqlôe3DñëeTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
){

643 if–!
pTabÀ
 ) ;

644 if–((!
db
 || db->
≤ByãsFªed
==0Ë&& (--
pTabÀ
->
nRef
)>0) ) ;

645 
	`dñëeTabÀ
(
db
, 
pTabÀ
);

646 
	}
}

653 
	$sqlôe3U∆ökAndDñëeTabÀ
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTabName
){

654 
TabÀ
 *
p
;

655 
Db
 *
pDb
;

657 
	`as£π
–
db
!=0 );

658 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

659 
	`as£π
–
zTabName
 );

660 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

661 
	`ã°ˇ£
–
zTabName
[0]==0 );

662 
pDb
 = &
db
->
aDb
[
iDb
];

663 
p
 = 
	`sqlôe3HashIn£π
(&
pDb
->
pSchema
->
tblHash
, 
zTabName
, 0);

664 
	`sqlôe3DñëeTabÀ
(
db
, 
p
);

665 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

666 
	}
}

681 *
	$sqlôe3NameFromTokí
(
sqlôe3
 *
db
, 
Tokí
 *
pName
){

682 *
zName
;

683 if–
pName
 ){

684 
zName
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pName
->
z
,ÖName->
n
);

685 
	`sqlôe3DequŸe
(
zName
);

687 
zName
 = 0;

689  
zName
;

690 
	}
}

696 
	$sqlôe3O≥nMa°îTabÀ
(
P¨£
 *
p
, 
iDb
){

697 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
p
);

698 
	`sqlôe3TabÀLock
(
p
, 
iDb
, 
MASTER_ROOT
, 1, 
	`SCHEMA_TABLE
(iDb));

699 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nWrôe
, 0, 
MASTER_ROOT
, 
iDb
, 5);

700 if–
p
->
nTab
==0 ){

701 
p
->
nTab
 = 1;

703 
	}
}

711 
	$sqlôe3FödDbName
(
sqlôe3
 *
db
, c⁄° *
zName
){

712 
i
 = -1;

713 if–
zName
 ){

714 
Db
 *
pDb
;

715 
i
=(
db
->
nDb
-1), 
pDb
=&db->
aDb
[i]; i>=0; i--,ÖDb--){

716 if–0==
	`sqlôe3SåICmp
(
pDb
->
zName
, zName) ) ;

719  
i
;

720 
	}
}

728 
	$sqlôe3FödDb
(
sqlôe3
 *
db
, 
Tokí
 *
pName
){

729 
i
;

730 *
zName
;

731 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

732 
i
 = 
	`sqlôe3FödDbName
(
db
, 
zName
);

733 
	`sqlôe3DbFªe
(
db
, 
zName
);

734  
i
;

735 
	}
}

753 
	$sqlôe3TwoP¨tName
(

754 
P¨£
 *
pP¨£
,

755 
Tokí
 *
pName1
,

756 
Tokí
 *
pName2
,

757 
Tokí
 **
pUnquÆ


759 
iDb
;

760 
sqlôe3
 *
db
 = 
pP¨£
->db;

762 
	`as£π
–
pName2
!=0 );

763 if–
pName2
->
n
>0 ){

764 if–
db
->
öô
.
busy
 ) {

765 
	`sqlôe3Eº‹Msg
(
pP¨£
, "corrupt database");

768 *
pUnquÆ
 = 
pName2
;

769 
iDb
 = 
	`sqlôe3FödDb
(
db
, 
pName1
);

770 if–
iDb
<0 ){

771 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknow¿d©aba£ %T", 
pName1
);

775 
	`as£π
–
db
->
öô
.
iDb
==0 || db->öô.
busy
 );

776 
iDb
 = 
db
->
öô
.iDb;

777 *
pUnquÆ
 = 
pName1
;

779  
iDb
;

780 
	}
}

789 
	$sqlôe3CheckObje˘Name
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

790 if–!
pP¨£
->
db
->
öô
.
busy
 &&ÖP¨£->
√°ed
==0

791 && (
pP¨£
->
db
->
Êags
 & 
SQLITE_WrôeSchema
)==0

792 && 0==
	`sqlôe3SåNICmp
(
zName
, "sqlite_", 7) ){

793 
	`sqlôe3Eº‹Msg
(
pP¨£
, "obje˘Çamêª£rved f‹ i¡î«»u£: %s", 
zName
);

794  
SQLITE_ERROR
;

796  
SQLITE_OK
;

797 
	}
}

802 
Index
 *
	$sqlôe3Prim¨yKeyIndex
(
TabÀ
 *
pTab
){

803 
Index
 *
p
;

804 
p
=
pTab
->
pIndex
;Ö && !
	`IsPrim¨yKeyIndex
’);Öı->
pNext
){}

805  
p
;

806 
	}
}

812 
i16
 
	$sqlôe3CﬁumnOfIndex
(
Index
 *
pIdx
, 
i16
 
iCﬁ
){

813 
i
;

814 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

815 if–
iCﬁ
==
pIdx
->
aiCﬁumn
[
i
] )  i;

818 
	}
}

836 
	$sqlôe3SèπTabÀ
(

837 
P¨£
 *
pP¨£
,

838 
Tokí
 *
pName1
,

839 
Tokí
 *
pName2
,

840 
isTemp
,

841 
isVõw
,

842 
isVútuÆ
,

843 
noEº


845 
TabÀ
 *
pTabÀ
;

846 *
zName
 = 0;

847 
sqlôe3
 *
db
 = 
pP¨£
->db;

848 
Vdbe
 *
v
;

849 
iDb
;

850 
Tokí
 *
pName
;

852 if–
db
->
öô
.
busy
 && db->öô.
√wTnum
==1 ){

854 
iDb
 = 
db
->
öô
.iDb;

855 
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
	`SCHEMA_TABLE
(
iDb
));

856 
pName
 = 
pName1
;

859 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

860 if–
iDb
<0 ) ;

861 if–!
OMIT_TEMPDB
 && 
isTemp
 && 
pName2
->
n
>0 && 
iDb
!=1 ){

864 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporaryÅableÇame must be unqualified");

867 if–!
OMIT_TEMPDB
 && 
isTemp
 ) 
iDb
 = 1;

868 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

870 
pP¨£
->
sNameTokí
 = *
pName
;

871 if–
zName
==0 ) ;

872 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){

873 
begö_èbÀ_îr‹
;

875 if–
db
->
öô
.
iDb
==1 ) 
isTemp
 = 1;

876 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


877 
	`as£π
–
isTemp
==0 || isTemp==1 );

878 
	`as£π
–
isVõw
==0 || isView==1 );

880 c⁄° 
u8
 
aCode
[] = {

881 
SQLITE_CREATE_TABLE
,

882 
SQLITE_CREATE_TEMP_TABLE
,

883 
SQLITE_CREATE_VIEW
,

884 
SQLITE_CREATE_TEMP_VIEW


886 *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

887 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
isTemp
), 0, 
zDb
) ){

888 
begö_èbÀ_îr‹
;

890 if–!
isVútuÆ
 && 
	`sqlôe3AuthCheck
(
pP¨£
, ()
aCode
[
isTemp
+2*
isVõw
],

891 
zName
, 0, 
zDb
) ){

892 
begö_èbÀ_îr‹
;

904 if–!
IN_DECLARE_VTAB
 ){

905 *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

906 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

907 
begö_èbÀ_îr‹
;

909 
pTabÀ
 = 
	`sqlôe3FödTabÀ
(
db
, 
zName
, 
zDb
);

910 if–
pTabÀ
 ){

911 if–!
noEº
 ){

912 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %TáÃódyÉxi°s", 
pName
);

914 
	`as£π
–!
db
->
öô
.
busy
 || 
CORRUPT_DB
 );

915 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

917 
begö_èbÀ_îr‹
;

919 if–
	`sqlôe3FödIndex
(
db
, 
zName
, 
zDb
)!=0 ){

920 
	`sqlôe3Eº‹Msg
(
pP¨£
, "thîêi†Æªadyá¿ödexÇamed %s", 
zName
);

921 
begö_èbÀ_îr‹
;

925 
pTabÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

926 if–
pTabÀ
==0 ){

927 
	`as£π
–
db
->
mÆlocFaûed
 );

928 
pP¨£
->
rc
 = 
SQLITE_NOMEM_BKPT
;

929 
pP¨£
->
nEº
++;

930 
begö_èbÀ_îr‹
;

932 
pTabÀ
->
zName
 = zName;

933 
pTabÀ
->
iPKey
 = -1;

934 
pTabÀ
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

935 
pTabÀ
->
nRef
 = 1;

936 
pTabÀ
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

937 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

938 
pP¨£
->
pNewTabÀ
 = 
pTabÀ
;

944 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


945 if–!
pP¨£
->
√°ed
 && 
	`°rcmp
(
zName
, "sqlite_sequence")==0 ){

946 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

947 
pTabÀ
->
pSchema
->
pSeqTab
 =ÖTable;

959 if–!
db
->
öô
.
busy
 && (
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
))!=0 ){

960 
addr1
;

961 
fûeF‹m©
;

962 
ªg1
, 
ªg2
, 
ªg3
;

964 c⁄° 
nuŒRow
[] = { 6, 0, 0, 0, 0, 0 };

965 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

967 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


968 if–
isVútuÆ
 ){

969 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_VBegö
);

976 
ªg1
 = 
pP¨£
->
ªgRowid
 = ++pP¨£->
nMem
;

977 
ªg2
 = 
pP¨£
->
ªgRoŸ
 = ++pP¨£->
nMem
;

978 
ªg3
 = ++
pP¨£
->
nMem
;

979 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RódCookõ
, 
iDb
, 
ªg3
, 
BTREE_FILE_FORMAT
);

980 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

981 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_If
, 
ªg3
); 
	`VdbeCovîage
(v);

982 
fûeF‹m©
 = (
db
->
Êags
 & 
SQLITE_LegacyFûeFmt
)!=0 ?

983 1 : 
SQLITE_MAX_FILE_FORMAT
;

984 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_FILE_FORMAT
, 
fûeF‹m©
);

985 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_TEXT_ENCODING
, 
	`ENC
(
db
));

986 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

997 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

998 if–
isVõw
 || 
isVútuÆ
 ){

999 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªg2
);

1003 
pP¨£
->
addrCrTab
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cª©eTabÀ
, 
iDb
, 
ªg2
);

1005 
	`sqlôe3O≥nMa°îTabÀ
(
pP¨£
, 
iDb
);

1006 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 0, 
ªg1
);

1007 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Blob
, 6, 
ªg3
, 0, 
nuŒRow
, 
P4_STATIC
);

1008 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 0, 
ªg3
, 
ªg1
);

1009 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1010 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Clo£
);

1017 
begö_èbÀ_îr‹
:

1018 
	`sqlôe3DbFªe
(
db
, 
zName
);

1020 
	}
}

1025 #i‡
SQLITE_ENABLE_HIDDEN_COLUMNS


1026 
	$sqlôe3CﬁumnPr›îtõsFromName
(
TabÀ
 *
pTab
, 
Cﬁumn
 *
pCﬁ
){

1027 if–
	`sqlôe3_°∫icmp
(
pCﬁ
->
zName
, "__hidden__", 10)==0 ){

1028 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HIDDEN
;

1029 }if–
pTab
 && 
pCﬁ
!ıTab->
aCﬁ
 && (pCﬁ[-1].
cﬁFœgs
 & 
COLFLAG_HIDDEN
) ){

1030 
pTab
->
èbFœgs
 |
TF_OOOHiddí
;

1032 
	}
}

1044 
	$sqlôe3AddCﬁumn
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName
, Tokí *
pTy≥
){

1045 
TabÀ
 *
p
;

1046 
i
;

1047 *
z
;

1048 *
zTy≥
;

1049 
Cﬁumn
 *
pCﬁ
;

1050 
sqlôe3
 *
db
 = 
pP¨£
->db;

1051 if–(
p
 = 
pP¨£
->
pNewTabÀ
)==0 ) ;

1052 #i‡
SQLITE_MAX_COLUMN


1053 if–
p
->
nCﬁ
+1>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

1054 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™y cﬁumn†⁄ %s", 
p
->
zName
);

1058 
z
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
pName
->
n
 + 
pTy≥
->n + 2);

1059 if–
z
==0 ) ;

1060 
	`mem˝y
(
z
, 
pName
->z,ÖName->
n
);

1061 
z
[
pName
->
n
] = 0;

1062 
	`sqlôe3DequŸe
(
z
);

1063 
i
=0; i<
p
->
nCﬁ
; i++){

1064 if–
	`sqlôe3_°ricmp
(
z
, 
p
->
aCﬁ
[
i
].
zName
)==0 ){

1065 
	`sqlôe3Eº‹Msg
(
pP¨£
, "du∂iˇã cﬁum¿«me: %s", 
z
);

1066 
	`sqlôe3DbFªe
(
db
, 
z
);

1070 if–(
p
->
nCﬁ
 & 0x7)==0 ){

1071 
Cﬁumn
 *
aNew
;

1072 
aNew
 = 
	`sqlôe3DbRóŒoc
(
db
,
p
->
aCﬁ
,’->
nCﬁ
+8)*(p->aCol[0]));

1073 if–
aNew
==0 ){

1074 
	`sqlôe3DbFªe
(
db
, 
z
);

1077 
p
->
aCﬁ
 = 
aNew
;

1079 
pCﬁ
 = &
p
->
aCﬁ
[p->
nCﬁ
];

1080 
	`mem£t
(
pCﬁ
, 0, (
p
->
aCﬁ
[0]));

1081 
pCﬁ
->
zName
 = 
z
;

1082 
	`sqlôe3CﬁumnPr›îtõsFromName
(
p
, 
pCﬁ
);

1084 if–
pTy≥
->
n
==0 ){

1087 
pCﬁ
->
afföôy
 = 
SQLITE_AFF_BLOB
;

1088 
pCﬁ
->
szE°
 = 1;

1090 
zTy≥
 = 
z
 + 
	`sqlôe3SåÀn30
(z) + 1;

1091 
	`mem˝y
(
zTy≥
, 
pTy≥
->
z
,ÖTy≥->
n
);

1092 
zTy≥
[
pTy≥
->
n
] = 0;

1093 
	`sqlôe3DequŸe
(
zTy≥
);

1094 
pCﬁ
->
afföôy
 = 
	`sqlôe3AfföôyTy≥
(
zTy≥
, &pCﬁ->
szE°
);

1095 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HASTYPE
;

1097 
p
->
nCﬁ
++;

1098 
pP¨£
->
c⁄°øötName
.
n
 = 0;

1099 
	}
}

1107 
	$sqlôe3AddNŸNuŒ
(
P¨£
 *
pP¨£
, 
⁄Eº‹
){

1108 
TabÀ
 *
p
;

1109 
p
 = 
pP¨£
->
pNewTabÀ
;

1110 if–
p
==0 || 
	`NEVER
’->
nCﬁ
<1) ) ;

1111 
p
->
aCﬁ
[p->
nCﬁ
-1].
nŸNuŒ
 = (
u8
)
⁄Eº‹
;

1112 
	}
}

1139 
	$sqlôe3AfföôyTy≥
(c⁄° *
zIn
, 
u8
 *
pszE°
){

1140 
u32
 
h
 = 0;

1141 
aff
 = 
SQLITE_AFF_NUMERIC
;

1142 c⁄° *
zCh¨
 = 0;

1144 
	`as£π
–
zIn
!=0 );

1145  
zIn
[0] ){

1146 
h
 = (h<<8Ë+ 
sqlôe3UµîToLowî
[(*
zIn
)&0xff];

1147 
zIn
++;

1148 if–
h
==(('c'<<24)+('h'<<16)+('a'<<8)+'r') ){

1149 
aff
 = 
SQLITE_AFF_TEXT
;

1150 
zCh¨
 = 
zIn
;

1151 }if–
h
==(('c'<<24)+('l'<<16)+('o'<<8)+'b') ){

1152 
aff
 = 
SQLITE_AFF_TEXT
;

1153 }if–
h
==(('t'<<24)+('e'<<16)+('x'<<8)+'t') ){

1154 
aff
 = 
SQLITE_AFF_TEXT
;

1155 }if–
h
==(('b'<<24)+('l'<<16)+('o'<<8)+'b')

1156 && (
aff
==
SQLITE_AFF_NUMERIC
 ||áff==
SQLITE_AFF_REAL
) ){

1157 
aff
 = 
SQLITE_AFF_BLOB
;

1158 if–
zIn
[0]=='(' ) 
zCh¨
 = zIn;

1159 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1160 }if–
h
==(('r'<<24)+('e'<<16)+('a'<<8)+'l')

1161 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1162 
aff
 = 
SQLITE_AFF_REAL
;

1163 }if–
h
==(('f'<<24)+('l'<<16)+('o'<<8)+'a')

1164 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1165 
aff
 = 
SQLITE_AFF_REAL
;

1166 }if–
h
==(('d'<<24)+('o'<<16)+('u'<<8)+'b')

1167 && 
aff
==
SQLITE_AFF_NUMERIC
 ){

1168 
aff
 = 
SQLITE_AFF_REAL
;

1170 }if–(
h
&0x00FFFFFF)==(('i'<<16)+('n'<<8)+'t') ){

1171 
aff
 = 
SQLITE_AFF_INTEGER
;

1178 if–
pszE°
 ){

1179 *
pszE°
 = 1;

1180 if–
aff
<
SQLITE_AFF_NUMERIC
 ){

1181 if–
zCh¨
 ){

1182  
zCh¨
[0] ){

1183 if–
	`sqlôe3Isdigô
(
zCh¨
[0]) ){

1184 
v
 = 0;

1185 
	`sqlôe3GëI¡32
(
zCh¨
, &
v
);

1186 
v
 = v/4 + 1;

1187 if–
v
>255 ) v = 255;

1188 *
pszE°
 = 
v
;

1191 
zCh¨
++;

1194 *
pszE°
 = 5;

1198  
aff
;

1199 
	}
}

1211 
	$sqlôe3AddDeÁu…VÆue
(
P¨£
 *
pP¨£
, 
Ex¥S∑n
 *
pS∑n
){

1212 
TabÀ
 *
p
;

1213 
Cﬁumn
 *
pCﬁ
;

1214 
sqlôe3
 *
db
 = 
pP¨£
->db;

1215 
p
 = 
pP¨£
->
pNewTabÀ
;

1216 if–
p
!=0 ){

1217 
pCﬁ
 = &(
p
->
aCﬁ
[p->
nCﬁ
-1]);

1218 if–!
	`sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
pS∑n
->
pEx¥
, 
db
->
öô
.
busy
) ){

1219 
	`sqlôe3Eº‹Msg
(
pP¨£
, "default value of column [%s] isÇot constant",

1220 
pCﬁ
->
zName
);

1226 
Ex¥
 
x
;

1227 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCﬁ
->
pDÊt
);

1228 
	`mem£t
(&
x
, 0, (x));

1229 
x
.
›
 = 
TK_SPAN
;

1230 
x
.
u
.
zTokí
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pS∑n
->
zSèπ
,

1231 ()(
pS∑n
->
zEnd
 -ÖS∑n->
zSèπ
));

1232 
x
.
pLe·
 = 
pS∑n
->
pEx¥
;

1233 
x
.
Êags
 = 
EP_Skù
;

1234 
pCﬁ
->
pDÊt
 = 
	`sqlôe3Ex¥Dup
(
db
, &
x
, 
EXPRDUP_REDUCE
);

1235 
	`sqlôe3DbFªe
(
db
, 
x
.
u
.
zTokí
);

1238 
	`sqlôe3Ex¥Dñëe
(
db
, 
pS∑n
->
pEx¥
);

1239 
	}
}

1257 
	$sqlôe3SåögToId
(
Ex¥
 *
p
){

1258 if–
p
->
›
==
TK_STRING
 ){

1259 
p
->
›
 = 
TK_ID
;

1260 }if–
p
->
›
==
TK_COLLATE
 &&Ö->
pLe·
->›==
TK_STRING
 ){

1261 
p
->
pLe·
->
›
 = 
TK_ID
;

1263 
	}
}

1283 
	$sqlôe3AddPrim¨yKey
(

1284 
P¨£
 *
pP¨£
,

1285 
Ex¥Li°
 *
pLi°
,

1286 
⁄Eº‹
,

1287 
autoInc
,

1288 
s‹tOrdî


1290 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

1291 
Cﬁumn
 *
pCﬁ
 = 0;

1292 
iCﬁ
 = -1, 
i
;

1293 
nTîm
;

1294 if–
pTab
==0 ) 
¥im¨y_key_exô
;

1295 if–
pTab
->
èbFœgs
 & 
TF_HasPrim¨yKey
 ){

1296 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1297 "èbÀ \"%s\" ha†m‹êth™ o√Örim¨y key", 
pTab
->
zName
);

1298 
¥im¨y_key_exô
;

1300 
pTab
->
èbFœgs
 |
TF_HasPrim¨yKey
;

1301 if–
pLi°
==0 ){

1302 
iCﬁ
 = 
pTab
->
nCﬁ
 - 1;

1303 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

1304 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_PRIMKEY
;

1305 
nTîm
 = 1;

1307 
nTîm
 = 
pLi°
->
nEx¥
;

1308 
i
=0; i<
nTîm
; i++){

1309 
Ex¥
 *
pCEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[
i
].
pEx¥
);

1310 
	`as£π
–
pCEx¥
!=0 );

1311 
	`sqlôe3SåögToId
(
pCEx¥
);

1312 if–
pCEx¥
->
›
==
TK_ID
 ){

1313 c⁄° *
zCName
 = 
pCEx¥
->
u
.
zTokí
;

1314 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

1315 if–
	`sqlôe3SåICmp
(
zCName
, 
pTab
->
aCﬁ
[
iCﬁ
].
zName
)==0 ){

1316 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

1317 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_PRIMKEY
;

1324 if–
nTîm
==1

1325 && 
pCﬁ


1326 && 
	`sqlôe3SåICmp
(
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,""), "INTEGER")==0

1327 && 
s‹tOrdî
!=
SQLITE_SO_DESC


1329 
pTab
->
iPKey
 = 
iCﬁ
;

1330 
pTab
->
keyC⁄f
 = (
u8
)
⁄Eº‹
;

1331 
	`as£π
–
autoInc
==0 ||áutoInc==1 );

1332 
pTab
->
èbFœgs
 |
autoInc
*
TF_Autoö¸emít
;

1333 if–
pLi°
 ) 
pP¨£
->
iPkS‹tOrdî
 =ÖLi°->
a
[0].
s‹tOrdî
;

1334 }if–
autoInc
 ){

1335 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


1336 
	`sqlôe3Eº‹Msg
(
pP¨£
, "AUTOINCREMENT is onlyállowed onán "

1340 
	`sqlôe3Cª©eIndex
(
pP¨£
, 0, 0, 0, 
pLi°
, 
⁄Eº‹
, 0,

1341 0, 
s‹tOrdî
, 0, 
SQLITE_IDXTYPE_PRIMARYKEY
);

1342 
pLi°
 = 0;

1345 
¥im¨y_key_exô
:

1346 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

1348 
	}
}

1353 
	$sqlôe3AddCheckC⁄°øöt
(

1354 
P¨£
 *
pP¨£
,

1355 
Ex¥
 *
pCheckEx¥


1357 #i‚de‡
SQLITE_OMIT_CHECK


1358 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

1359 
sqlôe3
 *
db
 = 
pP¨£
->db;

1360 if–
pTab
 && !
IN_DECLARE_VTAB


1361 && !
	`sqlôe3BåìIsRód⁄ly
(
db
->
aDb
[db->
öô
.
iDb
].
pBt
)

1363 
pTab
->
pCheck
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖTab->pCheck, 
pCheckEx¥
);

1364 if–
pP¨£
->
c⁄°øötName
.
n
 ){

1365 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pTab
->
pCheck
, &pP¨£->
c⁄°øötName
, 1);

1370 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pCheckEx¥
);

1372 
	}
}

1378 
	$sqlôe3AddCﬁœãTy≥
(
P¨£
 *
pP¨£
, 
Tokí
 *
pTokí
){

1379 
TabÀ
 *
p
;

1380 
i
;

1381 *
zCﬁl
;

1382 
sqlôe3
 *
db
;

1384 if–(
p
 = 
pP¨£
->
pNewTabÀ
)==0 ) ;

1385 
i
 = 
p
->
nCﬁ
-1;

1386 
db
 = 
pP¨£
->db;

1387 
zCﬁl
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTokí
);

1388 if–!
zCﬁl
 ) ;

1390 if–
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
) ){

1391 
Index
 *
pIdx
;

1392 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁ
[
i
].
zCﬁl
);

1393 
p
->
aCﬁ
[
i
].
zCﬁl
 = zColl;

1399 
pIdx
=
p
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1400 
	`as£π
–
pIdx
->
nKeyCﬁ
==1 );

1401 if–
pIdx
->
aiCﬁumn
[0]==
i
 ){

1402 
pIdx
->
azCﬁl
[0] = 
p
->
aCﬁ
[
i
].
zCﬁl
;

1406 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

1408 
	}
}

1430 
CﬁlSeq
 *
	$sqlôe3LoˇãCﬁlSeq
(
P¨£
 *
pP¨£
, c⁄° *
zName
){

1431 
sqlôe3
 *
db
 = 
pP¨£
->db;

1432 
u8
 
íc
 = 
	`ENC
(
db
);

1433 
u8
 
öôbusy
 = 
db
->
öô
.
busy
;

1434 
CﬁlSeq
 *
pCﬁl
;

1436 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 
öôbusy
);

1437 if–!
öôbusy
 && (!
pCﬁl
 || !pCﬁl->
xCmp
) ){

1438 
pCﬁl
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
íc
,ÖCﬁl, 
zName
);

1441  
pCﬁl
;

1442 
	}
}

1461 
	$sqlôe3Ch™geCookõ
(
P¨£
 *
pP¨£
, 
iDb
){

1462 
sqlôe3
 *
db
 = 
pP¨£
->db;

1463 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1464 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

1465 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_SCHEMA_VERSION
,

1466 
db
->
aDb
[
iDb
].
pSchema
->
schema_cookõ
+1);

1467 
	}
}

1477 
	$idítLígth
(c⁄° *
z
){

1478 
n
;

1479 
n
=0; *
z
;Ç++, z++){

1480 if–*
z
=='"' ){ 
n
++; }

1482  
n
 + 2;

1483 
	}
}

1498 
	$idítPut
(*
z
, *
pIdx
, *
zSig√dIdít
){

1499 *
zIdít
 = (*)
zSig√dIdít
;

1500 
i
, 
j
, 
√edQuŸe
;

1501 
i
 = *
pIdx
;

1503 
j
=0; 
zIdít
[j]; j++){

1504 if–!
	`sqlôe3Iß um
(
zIdít
[
j
]) && zIdent[j]!='_' ) ;

1506 
√edQuŸe
 = 
	`sqlôe3Isdigô
(
zIdít
[0])

1507 || 
	`sqlôe3Keyw‹dCode
(
zIdít
, 
j
)!=
TK_ID


1508 || 
zIdít
[
j
]!=0

1509 || 
j
==0;

1511 if–
√edQuŸe
 ) 
z
[
i
++] = '"';

1512 
j
=0; 
zIdít
[j]; j++){

1513 
z
[
i
++] = 
zIdít
[
j
];

1514 if–
zIdít
[
j
]=='"' ) 
z
[
i
++] = '"';

1516 if–
√edQuŸe
 ) 
z
[
i
++] = '"';

1517 
z
[
i
] = 0;

1518 *
pIdx
 = 
i
;

1519 
	}
}

1526 *
	$¸óãTabÀStmt
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

1527 
i
, 
k
, 
n
;

1528 *
zStmt
;

1529 *
zSï
, *
zSï2
, *
zEnd
;

1530 
Cﬁumn
 *
pCﬁ
;

1531 
n
 = 0;

1532 
pCﬁ
 = 
p
->
aCﬁ
, 
i
=0; i<p->
nCﬁ
; i++,ÖCol++){

1533 
n
 +
	`idítLígth
(
pCﬁ
->
zName
) + 5;

1535 
n
 +
	`idítLígth
(
p
->
zName
);

1536 if–
n
<50 ){

1537 
zSï
 = "";

1538 
zSï2
 = ",";

1539 
zEnd
 = ")";

1541 
zSï
 = "\n ";

1542 
zSï2
 = ",\n ";

1543 
zEnd
 = "\n)";

1545 
n
 +35 + 6*
p
->
nCﬁ
;

1546 
zStmt
 = 
	`sqlôe3DbMÆlocRaw
(0, 
n
);

1547 if–
zStmt
==0 ){

1548 
	`sqlôe3OomFau…
(
db
);

1551 
	`sqlôe3_¢¥ötf
(
n
, 
zStmt
, "CREATE TABLE ");

1552 
k
 = 
	`sqlôe3SåÀn30
(
zStmt
);

1553 
	`idítPut
(
zStmt
, &
k
, 
p
->
zName
);

1554 
zStmt
[
k
++] = '(';

1555 
pCﬁ
=
p
->
aCﬁ
, 
i
=0; i<p->
nCﬁ
; i++,ÖCol++){

1556 c⁄° * c⁄° 
azTy≥
[] = {

1563 
Àn
;

1564 c⁄° *
zTy≥
;

1566 
	`sqlôe3_¢¥ötf
(
n
-
k
, &
zStmt
[k], 
zSï
);

1567 
k
 +
	`sqlôe3SåÀn30
(&
zStmt
[k]);

1568 
zSï
 = 
zSï2
;

1569 
	`idítPut
(
zStmt
, &
k
, 
pCﬁ
->
zName
);

1570 
	`as£π
–
pCﬁ
->
afföôy
-
SQLITE_AFF_BLOB
 >= 0 );

1571 
	`as£π
–
pCﬁ
->
afföôy
-
SQLITE_AFF_BLOB
 < 
	`AºaySize
(
azTy≥
) );

1572 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_BLOB
 );

1573 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_TEXT
 );

1574 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_NUMERIC
 );

1575 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_INTEGER
 );

1576 
	`ã°ˇ£
–
pCﬁ
->
afföôy
==
SQLITE_AFF_REAL
 );

1578 
zTy≥
 = 
azTy≥
[
pCﬁ
->
afföôy
 - 
SQLITE_AFF_BLOB
];

1579 
Àn
 = 
	`sqlôe3SåÀn30
(
zTy≥
);

1580 
	`as£π
–
pCﬁ
->
afföôy
==
SQLITE_AFF_BLOB


1581 || 
pCﬁ
->
afföôy
==
	`sqlôe3AfföôyTy≥
(
zTy≥
, 0) );

1582 
	`mem˝y
(&
zStmt
[
k
], 
zTy≥
, 
Àn
);

1583 
k
 +
Àn
;

1584 
	`as£π
–
k
<=
n
 );

1586 
	`sqlôe3_¢¥ötf
(
n
-
k
, &
zStmt
[k], "%s", 
zEnd
);

1587  
zStmt
;

1588 
	}
}

1594 
	$ªsizeIndexObje˘
(
sqlôe3
 *
db
, 
Index
 *
pIdx
, 
N
){

1595 *
zExåa
;

1596 
nByã
;

1597 if–
pIdx
->
nCﬁumn
>=
N
 )  
SQLITE_OK
;

1598 
	`as£π
–
pIdx
->
isResized
==0 );

1599 
nByã
 = ((*Ë+ (
i16
Ë+ 1)*
N
;

1600 
zExåa
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1601 if–
zExåa
==0 )  
SQLITE_NOMEM_BKPT
;

1602 
	`mem˝y
(
zExåa
, 
pIdx
->
azCﬁl
, (*)*pIdx->
nCﬁumn
);

1603 
pIdx
->
azCﬁl
 = (c⁄° **)
zExåa
;

1604 
zExåa
 +(*)*
N
;

1605 
	`mem˝y
(
zExåa
, 
pIdx
->
aiCﬁumn
, (
i16
)*pIdx->
nCﬁumn
);

1606 
pIdx
->
aiCﬁumn
 = (
i16
*)
zExåa
;

1607 
zExåa
 +(
i16
)*
N
;

1608 
	`mem˝y
(
zExåa
, 
pIdx
->
aS‹tOrdî
,ÖIdx->
nCﬁumn
);

1609 
pIdx
->
aS‹tOrdî
 = (
u8
*)
zExåa
;

1610 
pIdx
->
nCﬁumn
 = 
N
;

1611 
pIdx
->
isResized
 = 1;

1612  
SQLITE_OK
;

1613 
	}
}

1618 
	$e°im©eTabÀWidth
(
TabÀ
 *
pTab
){

1619 
wTabÀ
 = 0;

1620 c⁄° 
Cﬁumn
 *
pTabCﬁ
;

1621 
i
;

1622 
i
=
pTab
->
nCﬁ
, 
pTabCﬁ
ıTab->
aCﬁ
; i>0; i--,ÖTabCol++){

1623 
wTabÀ
 +
pTabCﬁ
->
szE°
;

1625 if–
pTab
->
iPKey
<0 ) 
wTabÀ
++;

1626 
pTab
->
szTabRow
 = 
	`sqlôe3LogE°
(
wTabÀ
*4);

1627 
	}
}

1632 
	$e°im©eIndexWidth
(
Index
 *
pIdx
){

1633 
wIndex
 = 0;

1634 
i
;

1635 c⁄° 
Cﬁumn
 *
aCﬁ
 = 
pIdx
->
pTabÀ
->aCol;

1636 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

1637 
i16
 
x
 = 
pIdx
->
aiCﬁumn
[
i
];

1638 
	`as£π
–
x
<
pIdx
->
pTabÀ
->
nCﬁ
 );

1639 
wIndex
 +
x
<0 ? 1 : 
aCﬁ
[
pIdx
->
aiCﬁumn
[
i
]].
szE°
;

1641 
pIdx
->
szIdxRow
 = 
	`sqlôe3LogE°
(
wIndex
*4);

1642 
	}
}

1646 
	$hasCﬁumn
(c⁄° 
i16
 *
aiCﬁ
, 
nCﬁ
, 
x
){

1647  
nCﬁ
-- > 0 ) if–
x
==*(
aiCﬁ
++) )  1;

1649 
	}
}

1676 
	$c⁄vîtToWôhoutRowidTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

1677 
Index
 *
pIdx
;

1678 
Index
 *
pPk
;

1679 
nPk
;

1680 
i
, 
j
;

1681 
sqlôe3
 *
db
 = 
pP¨£
->db;

1682 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1686 if–!
db
->
öô
.
impo°îTabÀ
 ){

1687 
i
=0; i<
pTab
->
nCﬁ
; i++){

1688 if–(
pTab
->
aCﬁ
[
i
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0 ){

1689 
pTab
->
aCﬁ
[
i
].
nŸNuŒ
 = 
OE_Ab‹t
;

1696 if–
IN_DECLARE_VTAB
 ) ;

1702 if–
pP¨£
->
addrCrTab
 ){

1703 
	`as£π
–
v
 );

1704 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
pP¨£
->
addrCrTab
, 
OP_Cª©eIndex
);

1710 if–
pTab
->
iPKey
>=0 ){

1711 
Ex¥Li°
 *
pLi°
;

1712 
Tokí
 
ùkTokí
;

1713 
	`sqlôe3TokíInô
(&
ùkTokí
, 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
);

1714 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0,

1715 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
ùkTokí
, 0));

1716 if–
pLi°
==0 ) ;

1717 
pLi°
->
a
[0].
s‹tOrdî
 = 
pP¨£
->
iPkS‹tOrdî
;

1718 
	`as£π
–
pP¨£
->
pNewTabÀ
==
pTab
 );

1719 
	`sqlôe3Cª©eIndex
(
pP¨£
, 0, 0, 0, 
pLi°
, 
pTab
->
keyC⁄f
, 0, 0, 0, 0,

1720 
SQLITE_IDXTYPE_PRIMARYKEY
);

1721 if–
db
->
mÆlocFaûed
 ) ;

1722 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1723 
pTab
->
iPKey
 = -1;

1725 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1731 if–
v
 ){

1732 
	`as£π
–
db
->
öô
.
busy
==0 );

1733 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
pPk
->
äum
, 
OP_GŸo
);

1741 
i
=
j
=1; i<
pPk
->
nKeyCﬁ
; i++){

1742 if–
	`hasCﬁumn
(
pPk
->
aiCﬁumn
, 
j
,ÖPk->aiCﬁumn[
i
]) ){

1743 
pPk
->
nCﬁumn
--;

1745 
pPk
->
aiCﬁumn
[
j
++] =ÖPk->aiCﬁumn[
i
];

1748 
pPk
->
nKeyCﬁ
 = 
j
;

1750 
	`as£π
–
pPk
!=0 );

1751 
pPk
->
isCovîög
 = 1;

1752 if–!
db
->
öô
.
impo°îTabÀ
 ) 
pPk
->
uniqNŸNuŒ
 = 1;

1753 
nPk
 = 
pPk
->
nKeyCﬁ
;

1756 
pPk
->
äum
 = 
pTab
->tnum;

1761 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1762 
n
;

1763 if–
	`IsPrim¨yKeyIndex
(
pIdx
) ) ;

1764 
i
=
n
=0; i<
nPk
; i++){

1765 if–!
	`hasCﬁumn
(
pIdx
->
aiCﬁumn
,ÖIdx->
nKeyCﬁ
, 
pPk
->aiCﬁumn[
i
]ËË
n
++;

1767 if–
n
==0 ){

1769 
pIdx
->
nCﬁumn
 =ÖIdx->
nKeyCﬁ
;

1772 if–
	`ªsizeIndexObje˘
(
db
, 
pIdx
,ÖIdx->
nKeyCﬁ
+
n
) ) ;

1773 
i
=0, 
j
=
pIdx
->
nKeyCﬁ
; i<
nPk
; i++){

1774 if–!
	`hasCﬁumn
(
pIdx
->
aiCﬁumn
,ÖIdx->
nKeyCﬁ
, 
pPk
->aiCﬁumn[
i
]) ){

1775 
pIdx
->
aiCﬁumn
[
j
] = 
pPk
->aiCﬁumn[
i
];

1776 
pIdx
->
azCﬁl
[
j
] = 
pPk
->azCﬁl[
i
];

1777 
j
++;

1780 
	`as£π
–
pIdx
->
nCﬁumn
>ıIdx->
nKeyCﬁ
+
n
 );

1781 
	`as£π
–
pIdx
->
nCﬁumn
>=
j
 );

1786 if–
nPk
<
pTab
->
nCﬁ
 ){

1787 if–
	`ªsizeIndexObje˘
(
db
, 
pPk
, 
pTab
->
nCﬁ
) ) ;

1788 
i
=0, 
j
=
nPk
; i<
pTab
->
nCﬁ
; i++){

1789 if–!
	`hasCﬁumn
(
pPk
->
aiCﬁumn
, 
j
, 
i
) ){

1790 
	`as£π
–
j
<
pPk
->
nCﬁumn
 );

1791 
pPk
->
aiCﬁumn
[
j
] = 
i
;

1792 
pPk
->
azCﬁl
[
j
] = 
sqlôe3SåBINARY
;

1793 
j
++;

1796 
	`as£π
–
pPk
->
nCﬁumn
==
j
 );

1797 
	`as£π
–
pTab
->
nCﬁ
==
j
 );

1799 
pPk
->
nCﬁumn
 = 
pTab
->
nCﬁ
;

1801 
	}
}

1823 
	$sqlôe3EndTabÀ
(

1824 
P¨£
 *
pP¨£
,

1825 
Tokí
 *
pC⁄s
,

1826 
Tokí
 *
pEnd
,

1827 
u8
 
èbO±s
,

1828 
Sñe˘
 *
pSñe˘


1830 
TabÀ
 *
p
;

1831 
sqlôe3
 *
db
 = 
pP¨£
->db;

1832 
iDb
;

1833 
Index
 *
pIdx
;

1835 if–
pEnd
==0 && 
pSñe˘
==0 ){

1838 
	`as£π
–!
db
->
mÆlocFaûed
 );

1839 
p
 = 
pP¨£
->
pNewTabÀ
;

1840 if–
p
==0 ) ;

1842 
	`as£π
–!
db
->
öô
.
busy
 || !
pSñe˘
 );

1853 if–
db
->
öô
.
busy
 ){

1854 
p
->
äum
 = 
db
->
öô
.
√wTnum
;

1855 if–
p
->
äum
==1 )Ö->
èbFœgs
 |
TF_Ród⁄ly
;

1859 if–
èbO±s
 & 
TF_WôhoutRowid
 ){

1860 if–(
p
->
èbFœgs
 & 
TF_Autoö¸emít
) ){

1861 
	`sqlôe3Eº‹Msg
(
pP¨£
,

1865 if–(
p
->
èbFœgs
 & 
TF_HasPrim¨yKey
)==0 ){

1866 
	`sqlôe3Eº‹Msg
(
pP¨£
, "PRIMARY KEY missög o¿èbÀ %s", 
p
->
zName
);

1868 
p
->
èbFœgs
 |
TF_WôhoutRowid
 | 
TF_NoVisibÀRowid
;

1869 
	`c⁄vîtToWôhoutRowidTabÀ
(
pP¨£
, 
p
);

1873 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
p
->
pSchema
);

1875 #i‚de‡
SQLITE_OMIT_CHECK


1878 if–
p
->
pCheck
 ){

1879 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
p
, 
NC_IsCheck
, 0,Ö->
pCheck
);

1884 
	`e°im©eTabÀWidth
(
p
);

1885 
pIdx
=
p
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1886 
	`e°im©eIndexWidth
(
pIdx
);

1895 if–!
db
->
öô
.
busy
 ){

1896 
n
;

1897 
Vdbe
 *
v
;

1898 *
zTy≥
;

1899 *
zTy≥2
;

1900 *
zStmt
;

1902 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1903 if–
	`NEVER
(
v
==0) ) ;

1905 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 0);

1910 if–
p
->
pSñe˘
==0 ){

1912 
zTy≥
 = "table";

1913 
zTy≥2
 = "TABLE";

1914 #i‚de‡
SQLITE_OMIT_VIEW


1917 
zTy≥
 = "view";

1918 
zTy≥2
 = "VIEW";

1935 if–
pSñe˘
 ){

1936 
Sñe˘De°
 
de°
;

1937 
ªgYõld
;

1938 
addrT›
;

1939 
ªgRec
;

1940 
ªgRowid
;

1941 
addrInsLo›
;

1942 
TabÀ
 *
pSñTab
;

1944 
ªgYõld
 = ++
pP¨£
->
nMem
;

1945 
ªgRec
 = ++
pP¨£
->
nMem
;

1946 
ªgRowid
 = ++
pP¨£
->
nMem
;

1947 
	`as£π
(
pP¨£
->
nTab
==1);

1948 
	`sqlôe3MayAb‹t
(
pP¨£
);

1949 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nWrôe
, 1, 
pP¨£
->
ªgRoŸ
, 
iDb
);

1950 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_P2ISREG
);

1951 
pP¨£
->
nTab
 = 2;

1952 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

1953 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
addrT›
);

1954 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
ªgYõld
);

1955 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
);

1956 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgYõld
);

1957 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
 - 1);

1958 if–
pP¨£
->
nEº
 ) ;

1959 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñe˘
);

1960 if–
pSñTab
==0 ) ;

1961 
	`as£π
–
p
->
aCﬁ
==0 );

1962 
p
->
nCﬁ
 = 
pSñTab
->nCol;

1963 
p
->
aCﬁ
 = 
pSñTab
->aCol;

1964 
pSñTab
->
nCﬁ
 = 0;

1965 
pSñTab
->
aCﬁ
 = 0;

1966 
	`sqlôe3DñëeTabÀ
(
db
, 
pSñTab
);

1967 
addrInsLo›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
);

1968 
	`VdbeCovîage
(
v
);

1969 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
de°
.
iSd°
, de°.
nSd°
, 
ªgRec
);

1970 
	`sqlôe3TabÀAfföôy
(
v
, 
p
, 0);

1971 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 1, 
ªgRowid
);

1972 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 1, 
ªgRec
, 
ªgRowid
);

1973 
	`sqlôe3VdbeGŸo
(
v
, 
addrInsLo›
);

1974 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsLo›
);

1975 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 1);

1979 if–
pSñe˘
 ){

1980 
zStmt
 = 
	`¸óãTabÀStmt
(
db
, 
p
);

1982 
Tokí
 *
pEnd2
 = 
èbO±s
 ? &
pP¨£
->
sLa°Tokí
 : 
pEnd
;

1983 
n
 = ()(
pEnd2
->
z
 - 
pP¨£
->
sNameTokí
.z);

1984 if–
pEnd2
->
z
[0]!=';' ) 
n
 +=ÖEnd2->n;

1985 
zStmt
 = 
	`sqlôe3MPrötf
(
db
,

1986 "CREATE %†%.*s", 
zTy≥2
, 
n
, 
pP¨£
->
sNameTokí
.
z


1994 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

1998 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb),

1999 
zTy≥
,

2000 
p
->
zName
,

2001 
p
->
zName
,

2002 
pP¨£
->
ªgRoŸ
,

2003 
zStmt
,

2004 
pP¨£
->
ªgRowid


2006 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

2007 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

2009 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


2013 if–
p
->
èbFœgs
 & 
TF_Autoö¸emít
 ){

2014 
Db
 *
pDb
 = &
db
->
aDb
[
iDb
];

2015 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2016 if–
pDb
->
pSchema
->
pSeqTab
==0 ){

2017 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2019 
pDb
->
zName


2026 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

2027 
	`sqlôe3MPrötf
(
db
, "tbl_«me='%q' ANDÅy≥!='åiggî'", 
p
->
zName
));

2033 if–
db
->
öô
.
busy
 ){

2034 
TabÀ
 *
pOld
;

2035 
Schema
 *
pSchema
 = 
p
->pSchema;

2036 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2037 
pOld
 = 
	`sqlôe3HashIn£π
(&
pSchema
->
tblHash
, 
p
->
zName
,Ö);

2038 if–
pOld
 ){

2039 
	`as£π
–
p
==
pOld
 );

2040 
	`sqlôe3OomFau…
(
db
);

2043 
pP¨£
->
pNewTabÀ
 = 0;

2044 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

2046 #i‚de‡
SQLITE_OMIT_ALTERTABLE


2047 if–!
p
->
pSñe˘
 ){

2048 c⁄° *
zName
 = (c⁄° *)
pP¨£
->
sNameTokí
.
z
;

2049 
nName
;

2050 
	`as£π
–!
pSñe˘
 && 
pC⁄s
 && 
pEnd
 );

2051 if–
pC⁄s
->
z
==0 ){

2052 
pC⁄s
 = 
pEnd
;

2054 
nName
 = ()((c⁄° *)
pC⁄s
->
z
 - 
zName
);

2055 
p
->
addCﬁOff£t
 = 13 + 
	`sqlôe3Utf8Ch¨Lí
(
zName
, 
nName
);

2059 
	}
}

2061 #i‚de‡
SQLITE_OMIT_VIEW


2065 
	$sqlôe3Cª©eVõw
(

2066 
P¨£
 *
pP¨£
,

2067 
Tokí
 *
pBegö
,

2068 
Tokí
 *
pName1
,

2069 
Tokí
 *
pName2
,

2070 
Ex¥Li°
 *
pCNames
,

2071 
Sñe˘
 *
pSñe˘
,

2072 
isTemp
,

2073 
noEº


2075 
TabÀ
 *
p
;

2076 
n
;

2077 c⁄° *
z
;

2078 
Tokí
 
sEnd
;

2079 
DbFixî
 
sFix
;

2080 
Tokí
 *
pName
 = 0;

2081 
iDb
;

2082 
sqlôe3
 *
db
 = 
pP¨£
->db;

2084 if–
pP¨£
->
nV¨
>0 ){

2085 
	`sqlôe3Eº‹Msg
(
pP¨£
, "parametersáreÇotállowed in views");

2086 
¸óã_võw_Áû
;

2088 
	`sqlôe3SèπTabÀ
(
pP¨£
, 
pName1
, 
pName2
, 
isTemp
, 1, 0, 
noEº
);

2089 
p
 = 
pP¨£
->
pNewTabÀ
;

2090 if–
p
==0 || 
pP¨£
->
nEº
 ) 
¸óã_võw_Áû
;

2091 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

2092 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
p
->
pSchema
);

2093 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "võw", 
pName
);

2094 if–
	`sqlôe3FixSñe˘
(&
sFix
, 
pSñe˘
ËË
¸óã_võw_Áû
;

2101 
p
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

2102 
p
->
pCheck
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pCNames
, 
EXPRDUP_REDUCE
);

2103 if–
db
->
mÆlocFaûed
 ) 
¸óã_võw_Áû
;

2108 
sEnd
 = 
pP¨£
->
sLa°Tokí
;

2109 
	`as£π
–
sEnd
.
z
[0]!=0 );

2110 if–
sEnd
.
z
[0]!=';' ){

2111 
sEnd
.
z
 +sEnd.
n
;

2113 
sEnd
.
n
 = 0;

2114 
n
 = ()(
sEnd
.
z
 - 
pBegö
->z);

2115 
	`as£π
–
n
>0 );

2116 
z
 = 
pBegö
->z;

2117  
	`sqlôe3Is•a˚
(
z
[
n
-1]) ){Ç--; }

2118 
sEnd
.
z
 = &z[
n
-1];

2119 
sEnd
.
n
 = 1;

2122 
	`sqlôe3EndTabÀ
(
pP¨£
, 0, &
sEnd
, 0, 0);

2124 
¸óã_võw_Áû
:

2125 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

2126 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCNames
);

2128 
	}
}

2131 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

2137 
	$sqlôe3VõwGëCﬁumnNames
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTabÀ
){

2138 
TabÀ
 *
pSñTab
;

2139 
Sñe˘
 *
pSñ
;

2140 
nEº
 = 0;

2141 
n
;

2142 
sqlôe3
 *
db
 = 
pP¨£
->db;

2143 
sqlôe3_xauth
 
xAuth
;

2145 
	`as£π
–
pTabÀ
 );

2147 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2148 if–
	`sqlôe3VèbCÆlC⁄√˘
(
pP¨£
, 
pTabÀ
) ){

2149  
SQLITE_ERROR
;

2151 if–
	`IsVútuÆ
(
pTabÀ
) )  0;

2154 #i‚de‡
SQLITE_OMIT_VIEW


2158 if–
pTabÀ
->
nCﬁ
>0 )  0;

2175 if–
pTabÀ
->
nCﬁ
<0 ){

2176 
	`sqlôe3Eº‹Msg
(
pP¨£
, "võw %†i†cúcuœæy deföed", 
pTabÀ
->
zName
);

2179 
	`as£π
–
pTabÀ
->
nCﬁ
>=0 );

2188 
	`as£π
–
pTabÀ
->
pSñe˘
 );

2189 
pSñ
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pTabÀ
->
pSñe˘
, 0);

2190 if–
pSñ
 ){

2191 
n
 = 
pP¨£
->
nTab
;

2192 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pSñ
->
pSrc
);

2193 
pTabÀ
->
nCﬁ
 = -1;

2194 
db
->
lookaside
.
bDißbÀ
++;

2195 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2196 
xAuth
 = 
db
->xAuth;

2197 
db
->
xAuth
 = 0;

2198 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñ
);

2199 
db
->
xAuth
 = xAuth;

2201 
pSñTab
 = 
	`sqlôe3Resu…SëOfSñe˘
(
pP¨£
, 
pSñ
);

2203 
pP¨£
->
nTab
 = 
n
;

2204 if–
pTabÀ
->
pCheck
 ){

2211 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pTabÀ
->
pCheck
,

2212 &
pTabÀ
->
nCﬁ
, &pTabÀ->
aCﬁ
);

2213 if–
db
->
mÆlocFaûed
==0

2214 && 
pP¨£
->
nEº
==0

2215 && 
pTabÀ
->
nCﬁ
==
pSñ
->
pELi°
->
nEx¥


2217 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTabÀ
, 
pSñ
);

2219 }if–
pSñTab
 ){

2223 
	`as£π
–
pTabÀ
->
aCﬁ
==0 );

2224 
pTabÀ
->
nCﬁ
 = 
pSñTab
->nCol;

2225 
pTabÀ
->
aCﬁ
 = 
pSñTab
->aCol;

2226 
pSñTab
->
nCﬁ
 = 0;

2227 
pSñTab
->
aCﬁ
 = 0;

2228 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pTabÀ
->
pSchema
) );

2230 
pTabÀ
->
nCﬁ
 = 0;

2231 
nEº
++;

2233 
	`sqlôe3DñëeTabÀ
(
db
, 
pSñTab
);

2234 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñ
);

2235 
db
->
lookaside
.
bDißbÀ
--;

2237 
nEº
++;

2239 
pTabÀ
->
pSchema
->
schemaFœgs
 |
DB_Uƒe£tVõws
;

2241  
nEº
;

2242 
	}
}

2245 #i‚de‡
SQLITE_OMIT_VIEW


2249 
	$sqlôeVõwRe£tAŒ
(
sqlôe3
 *
db
, 
idx
){

2250 
HashEÀm
 *
i
;

2251 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
idx
, 0) );

2252 if–!
	`DbHasPr›îty
(
db
, 
idx
, 
DB_Uƒe£tVõws
) ) ;

2253 
i
=
	`sqlôeHashFú°
(&
db
->
aDb
[
idx
].
pSchema
->
tblHash
); i;i=
	`sqlôeHashNext
(i)){

2254 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
i
);

2255 if–
pTab
->
pSñe˘
 ){

2256 
	`sqlôe3DñëeCﬁumnNames
(
db
, 
pTab
);

2257 
pTab
->
aCﬁ
 = 0;

2258 
pTab
->
nCﬁ
 = 0;

2261 
	`DbCÀ¨Pr›îty
(
db
, 
idx
, 
DB_Uƒe£tVõws
);

2262 
	}
}

2264 
	#sqlôeVõwRe£tAŒ
(
A
,
B
)

	)

2284 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2285 
	$sqlôe3RoŸPageMoved
(
sqlôe3
 *
db
, 
iDb
, 
iFrom
, 
iTo
){

2286 
HashEÀm
 *
pEÀm
;

2287 
Hash
 *
pHash
;

2288 
Db
 *
pDb
;

2290 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

2291 
pDb
 = &
db
->
aDb
[
iDb
];

2292 
pHash
 = &
pDb
->
pSchema
->
tblHash
;

2293 
pEÀm
=
	`sqlôeHashFú°
(
pHash
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

2294 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
pEÀm
);

2295 if–
pTab
->
äum
==
iFrom
 ){

2296 
pTab
->
äum
 = 
iTo
;

2299 
pHash
 = &
pDb
->
pSchema
->
idxHash
;

2300 
pEÀm
=
	`sqlôeHashFú°
(
pHash
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

2301 
Index
 *
pIdx
 = 
	`sqlôeHashD©a
(
pEÀm
);

2302 if–
pIdx
->
äum
==
iFrom
 ){

2303 
pIdx
->
äum
 = 
iTo
;

2306 
	}
}

2315 
	$de°royRoŸPage
(
P¨£
 *
pP¨£
, 
iTabÀ
, 
iDb
){

2316 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2317 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2318 
	`as£π
–
iTabÀ
>1 );

2319 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_De°roy
, 
iTabÀ
, 
r1
, 
iDb
);

2320 
	`sqlôe3MayAb‹t
(
pP¨£
);

2321 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


2331 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2333 
pP¨£
->
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb), 
iTabÀ
, 
r1
,Ñ1);

2335 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2336 
	}
}

2344 
	$de°royTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

2345 #ifde‡
SQLITE_OMIT_AUTOVACUUM


2346 
Index
 *
pIdx
;

2347 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

2348 
	`de°royRoŸPage
(
pP¨£
, 
pTab
->
äum
, 
iDb
);

2349 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

2350 
	`de°royRoŸPage
(
pP¨£
, 
pIdx
->
äum
, 
iDb
);

2369 
iTab
 = 
pTab
->
äum
;

2370 
iDe°royed
 = 0;

2373 
Index
 *
pIdx
;

2374 
iL¨ge°
 = 0;

2376 if–
iDe°royed
==0 || 
iTab
<iDestroyed ){

2377 
iL¨ge°
 = 
iTab
;

2379 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

2380 
iIdx
 = 
pIdx
->
äum
;

2381 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

2382 if–(
iDe°royed
==0 || (
iIdx
<iDe°royed)Ë&& iIdx>
iL¨ge°
 ){

2383 
iL¨ge°
 = 
iIdx
;

2386 if–
iL¨ge°
==0 ){

2389 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

2390 
	`as£π
–
iDb
>=0 && iDb<
pP¨£
->
db
->
nDb
 );

2391 
	`de°royRoŸPage
(
pP¨£
, 
iL¨ge°
, 
iDb
);

2392 
iDe°royed
 = 
iL¨ge°
;

2396 
	}
}

2402 
	$sqlôe3CÀ¨SètTabÀs
(

2403 
P¨£
 *
pP¨£
,

2404 
iDb
,

2405 c⁄° *
zTy≥
,

2406 c⁄° *
zName


2408 
i
;

2409 c⁄° *
zDbName
 = 
pP¨£
->
db
->
aDb
[
iDb
].
zName
;

2410 
i
=1; i<=4; i++){

2411 
zTab
[24];

2412 
	`sqlôe3_¢¥ötf
((
zTab
),zTab,"sqlôe_°©%d",
i
);

2413 if–
	`sqlôe3FödTabÀ
(
pP¨£
->
db
, 
zTab
, 
zDbName
) ){

2414 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2416 
zDbName
, 
zTab
, 
zTy≥
, 
zName


2420 
	}
}

2425 
	$sqlôe3CodeDr›TabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
iDb
, 
isVõw
){

2426 
Vdbe
 *
v
;

2427 
sqlôe3
 *
db
 = 
pP¨£
->db;

2428 
Triggî
 *
pTriggî
;

2429 
Db
 *
pDb
 = &
db
->
aDb
[
iDb
];

2431 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2432 
	`as£π
–
v
!=0 );

2433 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

2435 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2436 if–
	`IsVútuÆ
(
pTab
) ){

2437 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_VBegö
);

2445 
pTriggî
 = 
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);

2446  
pTriggî
 ){

2447 
	`as£π
–
pTriggî
->
pSchema
==
pTab
->pSchema ||

2448 
pTriggî
->
pSchema
==
db
->
aDb
[1].pSchema );

2449 
	`sqlôe3Dr›TriggîPå
(
pP¨£
, 
pTriggî
);

2450 
pTriggî
 =ÖTriggî->
pNext
;

2453 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


2459 if–
pTab
->
èbFœgs
 & 
TF_Autoö¸emít
 ){

2460 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2462 
pDb
->
zName
, 
pTab
->zName

2474 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

2476 
pDb
->
zName
, 
	`SCHEMA_TABLE
(
iDb
), 
pTab
->zName);

2477 if–!
isVõw
 && !
	`IsVútuÆ
(
pTab
) ){

2478 
	`de°royTabÀ
(
pP¨£
, 
pTab
);

2484 if–
	`IsVútuÆ
(
pTab
) ){

2485 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VDe°roy
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

2487 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›TabÀ
, 
iDb
, 0, 0, 
pTab
->
zName
, 0);

2488 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

2489 
	`sqlôeVõwRe£tAŒ
(
db
, 
iDb
);

2490 
	}
}

2496 
	$sqlôe3Dr›TabÀ
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
isVõw
, 
noEº
){

2497 
TabÀ
 *
pTab
;

2498 
Vdbe
 *
v
;

2499 
sqlôe3
 *
db
 = 
pP¨£
->db;

2500 
iDb
;

2502 if–
db
->
mÆlocFaûed
 ){

2503 
exô_dr›_èbÀ
;

2505 
	`as£π
–
pP¨£
->
nEº
==0 );

2506 
	`as£π
–
pName
->
nSrc
==1 );

2507 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
exô_dr›_èbÀ
;

2508 if–
noEº
 ) 
db
->
suµªssEº
++;

2509 
	`as£π
–
isVõw
==0 || isVõw==
LOCATE_VIEW
 );

2510 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 
isVõw
, &
pName
->
a
[0]);

2511 if–
noEº
 ) 
db
->
suµªssEº
--;

2513 if–
pTab
==0 ){

2514 if–
noEº
 ) 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
pName
->
a
[0].
zD©aba£
);

2515 
exô_dr›_èbÀ
;

2517 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

2518 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

2523 if–
	`IsVútuÆ
(
pTab
Ë&& 
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
,ÖTab) ){

2524 
exô_dr›_èbÀ
;

2526 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2528 
code
;

2529 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

2530 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

2531 c⁄° *
zArg2
 = 0;

2532 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
)){

2533 
exô_dr›_èbÀ
;

2535 if–
isVõw
 ){

2536 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

2537 
code
 = 
SQLITE_DROP_TEMP_VIEW
;

2539 
code
 = 
SQLITE_DROP_VIEW
;

2541 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2542 }if–
	`IsVútuÆ
(
pTab
) ){

2543 
code
 = 
SQLITE_DROP_VTABLE
;

2544 
zArg2
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)->
pMod
->
zName
;

2547 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

2548 
code
 = 
SQLITE_DROP_TEMP_TABLE
;

2550 
code
 = 
SQLITE_DROP_TABLE
;

2553 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pTab
->
zName
, 
zArg2
, 
zDb
) ){

2554 
exô_dr›_èbÀ
;

2556 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
pTab
->
zName
, 0, 
zDb
) ){

2557 
exô_dr›_èbÀ
;

2561 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0

2562 && 
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_stat", 11)!=0 ){

2563 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêdr›≥d", 
pTab
->
zName
);

2564 
exô_dr›_èbÀ
;

2567 #i‚de‡
SQLITE_OMIT_VIEW


2571 if–
isVõw
 && 
pTab
->
pSñe˘
==0 ){

2572 
	`sqlôe3Eº‹Msg
(
pP¨£
, "u£ DROP TABLEÅÿdñëêèbÀ %s", 
pTab
->
zName
);

2573 
exô_dr›_èbÀ
;

2575 if–!
isVõw
 && 
pTab
->
pSñe˘
 ){

2576 
	`sqlôe3Eº‹Msg
(
pP¨£
, "u£ DROP VIEWÅÿdñëêvõw %s", 
pTab
->
zName
);

2577 
exô_dr›_èbÀ
;

2584 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2585 if–
v
 ){

2586 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

2587 
	`sqlôe3CÀ¨SètTabÀs
(
pP¨£
, 
iDb
, "tbl", 
pTab
->
zName
);

2588 
	`sqlôe3FkDr›TabÀ
(
pP¨£
, 
pName
, 
pTab
);

2589 
	`sqlôe3CodeDr›TabÀ
(
pP¨£
, 
pTab
, 
iDb
, 
isVõw
);

2592 
exô_dr›_èbÀ
:

2593 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

2594 
	}
}

2612 
	$sqlôe3Cª©eF‹eignKey
(

2613 
P¨£
 *
pP¨£
,

2614 
Ex¥Li°
 *
pFromCﬁ
,

2615 
Tokí
 *
pTo
,

2616 
Ex¥Li°
 *
pToCﬁ
,

2617 
Êags


2619 
sqlôe3
 *
db
 = 
pP¨£
->db;

2620 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2621 
FKey
 *
pFKey
 = 0;

2622 
FKey
 *
pNextTo
;

2623 
TabÀ
 *
p
 = 
pP¨£
->
pNewTabÀ
;

2624 
nByã
;

2625 
i
;

2626 
nCﬁ
;

2627 *
z
;

2629 
	`as£π
–
pTo
!=0 );

2630 if–
p
==0 || 
IN_DECLARE_VTAB
 ) 
fk_íd
;

2631 if–
pFromCﬁ
==0 ){

2632 
iCﬁ
 = 
p
->
nCﬁ
-1;

2633 if–
	`NEVER
(
iCﬁ
<0ËË
fk_íd
;

2634 if–
pToCﬁ
 &&ÖToCﬁ->
nEx¥
!=1 ){

2635 
	`sqlôe3Eº‹Msg
(
pP¨£
, "foreign key on %s"

2637 
p
->
aCﬁ
[
iCﬁ
].
zName
, 
pTo
);

2638 
fk_íd
;

2640 
nCﬁ
 = 1;

2641 }if–
pToCﬁ
 &&ÖToCﬁ->
nEx¥
!=
pFromCﬁ
->nExpr ){

2642 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2645 
fk_íd
;

2647 
nCﬁ
 = 
pFromCﬁ
->
nEx¥
;

2649 
nByã
 = (*
pFKey
Ë+ (
nCﬁ
-1)*’FKey->
aCﬁ
[0]Ë+ 
pTo
->
n
 + 1;

2650 if–
pToCﬁ
 ){

2651 
i
=0; i<
pToCﬁ
->
nEx¥
; i++){

2652 
nByã
 +
	`sqlôe3SåÀn30
(
pToCﬁ
->
a
[
i
].
zName
) + 1;

2655 
pFKey
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
 );

2656 if–
pFKey
==0 ){

2657 
fk_íd
;

2659 
pFKey
->
pFrom
 = 
p
;

2660 
pFKey
->
pNextFrom
 = 
p
->pFKey;

2661 
z
 = (*)&
pFKey
->
aCﬁ
[
nCﬁ
];

2662 
pFKey
->
zTo
 = 
z
;

2663 
	`mem˝y
(
z
, 
pTo
->z,ÖTo->
n
);

2664 
z
[
pTo
->
n
] = 0;

2665 
	`sqlôe3DequŸe
(
z
);

2666 
z
 +
pTo
->
n
+1;

2667 
pFKey
->
nCﬁ
 =ÇCol;

2668 if–
pFromCﬁ
==0 ){

2669 
pFKey
->
aCﬁ
[0].
iFrom
 = 
p
->
nCﬁ
-1;

2671 
i
=0; i<
nCﬁ
; i++){

2672 
j
;

2673 
j
=0; j<
p
->
nCﬁ
; j++){

2674 if–
	`sqlôe3SåICmp
(
p
->
aCﬁ
[
j
].
zName
, 
pFromCﬁ
->
a
[
i
].zName)==0 ){

2675 
pFKey
->
aCﬁ
[
i
].
iFrom
 = 
j
;

2679 if–
j
>=
p
->
nCﬁ
 ){

2680 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2682 
pFromCﬁ
->
a
[
i
].
zName
);

2683 
fk_íd
;

2687 if–
pToCﬁ
 ){

2688 
i
=0; i<
nCﬁ
; i++){

2689 
n
 = 
	`sqlôe3SåÀn30
(
pToCﬁ
->
a
[
i
].
zName
);

2690 
pFKey
->
aCﬁ
[
i
].
zCﬁ
 = 
z
;

2691 
	`mem˝y
(
z
, 
pToCﬁ
->
a
[
i
].
zName
, 
n
);

2692 
z
[
n
] = 0;

2693 
z
 +
n
+1;

2696 
pFKey
->
isDe„ºed
 = 0;

2697 
pFKey
->
aA˘i⁄
[0] = (
u8
)(
Êags
 & 0xff);

2698 
pFKey
->
aA˘i⁄
[1] = (
u8
)((
Êags
 >> 8 ) & 0xff);

2700 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
p
->
pSchema
) );

2701 
pNextTo
 = (
FKey
 *)
	`sqlôe3HashIn£π
(&
p
->
pSchema
->
fkeyHash
,

2702 
pFKey
->
zTo
, (*)pFKey

2704 if–
pNextTo
==
pFKey
 ){

2705 
	`sqlôe3OomFau…
(
db
);

2706 
fk_íd
;

2708 if–
pNextTo
 ){

2709 
	`as£π
–
pNextTo
->
pPªvTo
==0 );

2710 
pFKey
->
pNextTo
 =ÖNextTo;

2711 
pNextTo
->
pPªvTo
 = 
pFKey
;

2716 
p
->
pFKey
 =ÖFKey;

2717 
pFKey
 = 0;

2719 
fk_íd
:

2720 
	`sqlôe3DbFªe
(
db
, 
pFKey
);

2722 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pFromCﬁ
);

2723 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pToCﬁ
);

2724 
	}
}

2733 
	$sqlôe3De„rF‹eignKey
(
P¨£
 *
pP¨£
, 
isDe„ºed
){

2734 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2735 
TabÀ
 *
pTab
;

2736 
FKey
 *
pFKey
;

2737 if–(
pTab
 = 
pP¨£
->
pNewTabÀ
)==0 || (
pFKey
 =ÖTab->pFKey)==0 ) ;

2738 
	`as£π
–
isDe„ºed
==0 || isDeferred==1 );

2739 
pFKey
->
isDe„ºed
 = (
u8
)isDeferred;

2741 
	}
}

2754 
	$sqlôe3RefûlIndex
(
P¨£
 *
pP¨£
, 
Index
 *
pIndex
, 
memRoŸPage
){

2755 
TabÀ
 *
pTab
 = 
pIndex
->
pTabÀ
;

2756 
iTab
 = 
pP¨£
->
nTab
++;

2757 
iIdx
 = 
pP¨£
->
nTab
++;

2758 
iS‹ãr
;

2759 
addr1
;

2760 
addr2
;

2761 
äum
;

2762 
iP¨tIdxLabñ
;

2763 
Vdbe
 *
v
;

2764 
KeyInfo
 *
pKey
;

2765 
ªgRec‹d
;

2766 
sqlôe3
 *
db
 = 
pP¨£
->db;

2767 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pIndex
->
pSchema
);

2769 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


2770 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_REINDEX
, 
pIndex
->
zName
, 0,

2771 
db
->
aDb
[
iDb
].
zName
 ) ){

2777 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 1,ÖTab->
zName
);

2779 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2780 if–
v
==0 ) ;

2781 if–
memRoŸPage
>=0 ){

2782 
äum
 = 
memRoŸPage
;

2784 
äum
 = 
pIndex
->tnum;

2786 
pKey
 = 
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pIndex
);

2787 
	`as£π
–
pKey
!=0 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 );

2790 
iS‹ãr
 = 
pP¨£
->
nTab
++;

2791 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_S‹ãrO≥n
, 
iS‹ãr
, 0, 
pIndex
->
nKeyCﬁ
, (*)

2792 
	`sqlôe3KeyInfoRef
(
pKey
), 
P4_KEYINFO
);

2796 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTab
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

2797 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iTab
, 0); 
	`VdbeCovîage
(v);

2798 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2800 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
,
pIndex
,
iTab
,
ªgRec‹d
,0,&
iP¨tIdxLabñ
,0,0);

2801 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrIn£π
, 
iS‹ãr
, 
ªgRec‹d
);

2802 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
iP¨tIdxLabñ
);

2803 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iTab
, 
addr1
+1); 
	`VdbeCovîage
(v);

2804 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2805 if–
memRoŸPage
<0 ) 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
äum
, 
iDb
);

2806 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nWrôe
, 
iIdx
, 
äum
, 
iDb
,

2807 (*)
pKey
, 
P4_KEYINFO
);

2808 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_BULKCSR
|((
memRoŸPage
>=0)?
OPFLAG_P2ISREG
:0));

2810 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
iS‹ãr
, 0); 
	`VdbeCovîage
(v);

2811 if–
	`IsUniqueIndex
(
pIndex
) ){

2812 
j2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 3;

2813 
	`sqlôe3VdbeGŸo
(
v
, 
j2
);

2814 
addr2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2815 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_S‹ãrCom∑ª
, 
iS‹ãr
, 
j2
, 
ªgRec‹d
,

2816 
pIndex
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

2817 
	`sqlôe3UniqueC⁄°øöt
(
pP¨£
, 
OE_Ab‹t
, 
pIndex
);

2819 
addr2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2821 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
iS‹ãr
, 
ªgRec‹d
, 
iIdx
);

2822 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_La°
, 
iIdx
, 0, -1);

2823 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxIn£π
, 
iIdx
, 
ªgRec‹d
, 0);

2824 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

2825 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

2826 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
iS‹ãr
, 
addr2
); 
	`VdbeCovîage
(v);

2827 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2829 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iTab
);

2830 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iIdx
);

2831 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iS‹ãr
);

2832 
	}
}

2841 
Index
 *
	$sqlôe3AŒoˇãIndexObje˘
(

2842 
sqlôe3
 *
db
,

2843 
i16
 
nCﬁ
,

2844 
nExåa
,

2845 **
µExåa


2847 
Index
 *
p
;

2848 
nByã
;

2850 
nByã
 = 
	`ROUND8
((
Index
)) +

2851 
	`ROUND8
((*)*
nCﬁ
) +

2852 
	`ROUND8
((
LogE°
)*(
nCﬁ
+1) +

2853 (
i16
)*
nCﬁ
 +

2854 (
u8
)*
nCﬁ
);

2855 
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
 + 
nExåa
);

2856 if–
p
 ){

2857 *
pExåa
 = ((*)
p
)+
	`ROUND8
((
Index
));

2858 
p
->
azCﬁl
 = (c⁄° **)
pExåa
;ÖExå®+
	`ROUND8
((*)*
nCﬁ
);

2859 
p
->
aiRowLogE°
 = (
LogE°
*)
pExåa
;ÖExå®+(LogE°)*(
nCﬁ
+1);

2860 
p
->
aiCﬁumn
 = (
i16
*)
pExåa
;ÖExå®+(i16)*
nCﬁ
;

2861 
p
->
aS‹tOrdî
 = (
u8
*)
pExåa
;

2862 
p
->
nCﬁumn
 = 
nCﬁ
;

2863 
p
->
nKeyCﬁ
 = 
nCﬁ
 - 1;

2864 *
µExåa
 = ((*)
p
Ë+ 
nByã
;

2866  
p
;

2867 
	}
}

2881 
	$sqlôe3Cª©eIndex
(

2882 
P¨£
 *
pP¨£
,

2883 
Tokí
 *
pName1
,

2884 
Tokí
 *
pName2
,

2885 
SrcLi°
 *
pTblName
,

2886 
Ex¥Li°
 *
pLi°
,

2887 
⁄Eº‹
,

2888 
Tokí
 *
pSèπ
,

2889 
Ex¥
 *
pPIWhîe
,

2890 
s‹tOrdî
,

2891 
ifNŸExi°
,

2892 
u8
 
idxTy≥


2894 
TabÀ
 *
pTab
 = 0;

2895 
Index
 *
pIndex
 = 0;

2896 *
zName
 = 0;

2897 
nName
;

2898 
i
, 
j
;

2899 
DbFixî
 
sFix
;

2900 
s‹tOrdîMask
;

2901 
sqlôe3
 *
db
 = 
pP¨£
->db;

2902 
Db
 *
pDb
;

2903 
iDb
;

2904 
Tokí
 *
pName
 = 0;

2905 
Ex¥Li°_ôem
 *
pLi°Iãm
;

2906 
nExåa
 = 0;

2907 
nExåaCﬁ
;

2908 *
zExåa
 = 0;

2909 
Index
 *
pPk
 = 0;

2911 if–
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
>0 ){

2912 
exô_¸óã_ödex
;

2914 if–
IN_DECLARE_VTAB
 && 
idxTy≥
!=
SQLITE_IDXTYPE_PRIMARYKEY
 ){

2915 
exô_¸óã_ödex
;

2917 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

2918 
exô_¸óã_ödex
;

2924 if–
pTblName
!=0 ){

2930 
	`as£π
–
pName1
 && 
pName2
 );

2931 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

2932 if–
iDb
<0 ) 
exô_¸óã_ödex
;

2933 
	`as£π
–
pName
 &&ÖName->
z
 );

2935 #i‚de‡
SQLITE_OMIT_TEMPDB


2940 if–!
db
->
öô
.
busy
 ){

2941 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTblName
);

2942 if–
pName2
->
n
==0 && 
pTab
 &&ÖTab->
pSchema
==
db
->
aDb
[1].pSchema ){

2943 
iDb
 = 1;

2948 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "ödex", 
pName
);

2949 if–
	`sqlôe3FixSrcLi°
(&
sFix
, 
pTblName
) ){

2952 
	`as£π
(0);

2954 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, &
pTblName
->
a
[0]);

2955 
	`as£π
–
db
->
mÆlocFaûed
==0 || 
pTab
==0 );

2956 if–
pTab
==0 ) 
exô_¸óã_ödex
;

2957 if–
iDb
==1 && 
db
->
aDb
[iDb].
pSchema
!=
pTab
->pSchema ){

2958 
	`sqlôe3Eº‹Msg
(
pP¨£
,

2960 
pTab
->
zName
);

2961 
exô_¸óã_ödex
;

2963 if–!
	`HasRowid
(
pTab
ËË
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

2965 
	`as£π
–
pName
==0 );

2966 
	`as£π
–
pSèπ
==0 );

2967 
pTab
 = 
pP¨£
->
pNewTabÀ
;

2968 if–!
pTab
 ) 
exô_¸óã_ödex
;

2969 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

2971 
pDb
 = &
db
->
aDb
[
iDb
];

2973 
	`as£π
–
pTab
!=0 );

2974 
	`as£π
–
pP¨£
->
nEº
==0 );

2975 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0

2976 && 
db
->
öô
.
busy
==0

2977 #i‡
SQLITE_USER_AUTHENTICATION


2978 && 
	`sqlôe3U£rAuthTabÀ
(
pTab
->
zName
)==0

2980 && 
	`sqlôe3SåNICmp
(&
pTab
->
zName
[7],"altertab_",9)!=0 ){

2981 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêödexed", 
pTab
->
zName
);

2982 
exô_¸óã_ödex
;

2984 #i‚de‡
SQLITE_OMIT_VIEW


2985 if–
pTab
->
pSñe˘
 ){

2986 
	`sqlôe3Eº‹Msg
(
pP¨£
, "views mayÇot be indexed");

2987 
exô_¸óã_ödex
;

2990 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2991 if–
	`IsVútuÆ
(
pTab
) ){

2992 
	`sqlôe3Eº‹Msg
(
pP¨£
, "virtualÅables mayÇot be indexed");

2993 
exô_¸óã_ödex
;

3010 if–
pName
 ){

3011 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

3012 if–
zName
==0 ) 
exô_¸óã_ödex
;

3013 
	`as£π
–
pName
->
z
!=0 );

3014 if–
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, 
zName
) ){

3015 
exô_¸óã_ödex
;

3017 if–!
db
->
öô
.
busy
 ){

3018 if–
	`sqlôe3FödTabÀ
(
db
, 
zName
, 0)!=0 ){

3019 
	`sqlôe3Eº‹Msg
(
pP¨£
, "thîêi†ÆªadyáÅabÀÇamed %s", 
zName
);

3020 
exô_¸óã_ödex
;

3023 if–
	`sqlôe3FödIndex
(
db
, 
zName
, 
pDb
->zName)!=0 ){

3024 if–!
ifNŸExi°
 ){

3025 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ödex %†ÆªadyÉxi°s", 
zName
);

3027 
	`as£π
–!
db
->
öô
.
busy
 );

3028 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

3030 
exô_¸óã_ödex
;

3033 
n
;

3034 
Index
 *
pLo›
;

3035 
pLo›
=
pTab
->
pIndex
, 
n
=1;ÖLo›;ÖLo›ıLo›->
pNext
,Ç++){}

3036 
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlôe_autoödex_%s_%d", 
pTab
->zName, 
n
);

3037 if–
zName
==0 ){

3038 
exô_¸óã_ödex
;

3046 if–
IN_DECLARE_VTAB
 ) 
zName
[7]++;

3051 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3053 c⁄° *
zDb
 = 
pDb
->
zName
;

3054 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
iDb
), 0, 
zDb
) ){

3055 
exô_¸óã_ödex
;

3057 
i
 = 
SQLITE_CREATE_INDEX
;

3058 if–!
OMIT_TEMPDB
 && 
iDb
==1 ) 
i
 = 
SQLITE_CREATE_TEMP_INDEX
;

3059 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
i
, 
zName
, 
pTab
->zName, 
zDb
) ){

3060 
exô_¸óã_ödex
;

3069 if–
pLi°
==0 ){

3070 
Tokí
 
¥evCﬁ
;

3071 
	`sqlôe3TokíInô
(&
¥evCﬁ
, 
pTab
->
aCﬁ
[pTab->
nCﬁ
-1].
zName
);

3072 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0,

3073 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
¥evCﬁ
, 0));

3074 if–
pLi°
==0 ) 
exô_¸óã_ödex
;

3075 
	`as£π
–
pLi°
->
nEx¥
==1 );

3076 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
pLi°
, 
s‹tOrdî
);

3078 
	`sqlôe3Ex¥Li°CheckLígth
(
pP¨£
, 
pLi°
, "index");

3084 
i
=0; i<
pLi°
->
nEx¥
; i++){

3085 
Ex¥
 *
pEx¥
 = 
pLi°
->
a
[
i
].pExpr;

3086 
	`as£π
–
pEx¥
!=0 );

3087 if–
pEx¥
->
›
==
TK_COLLATE
 ){

3088 
nExåa
 +(1 + 
	`sqlôe3SåÀn30
(
pEx¥
->
u
.
zTokí
));

3095 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

3096 
nExåaCﬁ
 = 
pPk
 ?ÖPk->
nKeyCﬁ
 : 1;

3097 
pIndex
 = 
	`sqlôe3AŒoˇãIndexObje˘
(
db
, 
pLi°
->
nEx¥
 + 
nExåaCﬁ
,

3098 
nName
 + 
nExåa
 + 1, &
zExåa
);

3099 if–
db
->
mÆlocFaûed
 ){

3100 
exô_¸óã_ödex
;

3102 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pIndex
->
aiRowLogE°
) );

3103 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pIndex
->
azCﬁl
) );

3104 
pIndex
->
zName
 = 
zExåa
;

3105 
zExåa
 +
nName
 + 1;

3106 
	`mem˝y
(
pIndex
->
zName
, zName, 
nName
+1);

3107 
pIndex
->
pTabÀ
 = 
pTab
;

3108 
pIndex
->
⁄Eº‹
 = (
u8
)onError;

3109 
pIndex
->
uniqNŸNuŒ
 = 
⁄Eº‹
!=
OE_N⁄e
;

3110 
pIndex
->
idxTy≥
 = idxType;

3111 
pIndex
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

3112 
pIndex
->
nKeyCﬁ
 = 
pLi°
->
nEx¥
;

3113 if–
pPIWhîe
 ){

3114 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
pTab
, 
NC_P¨tIdx
, 
pPIWhîe
, 0);

3115 
pIndex
->
pP¨tIdxWhîe
 = 
pPIWhîe
;

3116 
pPIWhîe
 = 0;

3118 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

3122 if–
pDb
->
pSchema
->
fûe_f‹m©
>=4 ){

3123 
s‹tOrdîMask
 = -1;

3125 
s‹tOrdîMask
 = 0;

3137 
i
=0, 
pLi°Iãm
=
pLi°
->
a
; i<pLi°->
nEx¥
; i++,ÖListItem++){

3138 
Ex¥
 *
pCEx¥
;

3139 
ªque°edS‹tOrdî
;

3140 c⁄° *
zCﬁl
;

3142 
	`sqlôe3SåögToId
(
pLi°Iãm
->
pEx¥
);

3143 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
pP¨£
, 
pTab
, 
NC_IdxEx¥
, 
pLi°Iãm
->
pEx¥
, 0);

3144 if–
pP¨£
->
nEº
 ) 
exô_¸óã_ödex
;

3145 
pCEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°Iãm
->
pEx¥
);

3146 if–
pCEx¥
->
›
!=
TK_COLUMN
 ){

3147 if–
pTab
==
pP¨£
->
pNewTabÀ
 ){

3148 
	`sqlôe3Eº‹Msg
(
pP¨£
, "expressionsÖrohibited in PRIMARY KEYánd "

3150 
exô_¸óã_ödex
;

3152 if–
pIndex
->
aCﬁEx¥
==0 ){

3153 
Ex¥Li°
 *
pC›y
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pLi°
, 0);

3154 
pIndex
->
aCﬁEx¥
 = 
pC›y
;

3155 if–!
db
->
mÆlocFaûed
 ){

3156 
	`as£π
–
pC›y
!=0 );

3157 
pLi°Iãm
 = &
pC›y
->
a
[
i
];

3160 
j
 = 
XN_EXPR
;

3161 
pIndex
->
aiCﬁumn
[
i
] = 
XN_EXPR
;

3162 
pIndex
->
uniqNŸNuŒ
 = 0;

3164 
j
 = 
pCEx¥
->
iCﬁumn
;

3165 
	`as£π
–
j
<=0x7fff );

3166 if–
j
<0 ){

3167 
j
 = 
pTab
->
iPKey
;

3168 }if–
pTab
->
aCﬁ
[
j
].
nŸNuŒ
==0 ){

3169 
pIndex
->
uniqNŸNuŒ
 = 0;

3171 
pIndex
->
aiCﬁumn
[
i
] = (
i16
)
j
;

3173 
zCﬁl
 = 0;

3174 if–
pLi°Iãm
->
pEx¥
->
›
==
TK_COLLATE
 ){

3175 
nCﬁl
;

3176 
zCﬁl
 = 
pLi°Iãm
->
pEx¥
->
u
.
zTokí
;

3177 
nCﬁl
 = 
	`sqlôe3SåÀn30
(
zCﬁl
) + 1;

3178 
	`as£π
–
nExåa
>=
nCﬁl
 );

3179 
	`mem˝y
(
zExåa
, 
zCﬁl
, 
nCﬁl
);

3180 
zCﬁl
 = 
zExåa
;

3181 
zExåa
 +
nCﬁl
;

3182 
nExåa
 -
nCﬁl
;

3183 }if–
j
>=0 ){

3184 
zCﬁl
 = 
pTab
->
aCﬁ
[
j
].zColl;

3186 if–!
zCﬁl
 ) zCﬁ»
sqlôe3SåBINARY
;

3187 if–!
db
->
öô
.
busy
 && !
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
) ){

3188 
exô_¸óã_ödex
;

3190 
pIndex
->
azCﬁl
[
i
] = 
zCﬁl
;

3191 
ªque°edS‹tOrdî
 = 
pLi°Iãm
->
s‹tOrdî
 & 
s‹tOrdîMask
;

3192 
pIndex
->
aS‹tOrdî
[
i
] = (
u8
)
ªque°edS‹tOrdî
;

3199 if–
pPk
 ){

3200 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

3201 
x
 = 
pPk
->
aiCﬁumn
[
j
];

3202 
	`as£π
–
x
>=0 );

3203 if–
	`hasCﬁumn
(
pIndex
->
aiCﬁumn
,ÖIndex->
nKeyCﬁ
, 
x
) ){

3204 
pIndex
->
nCﬁumn
--;

3206 
pIndex
->
aiCﬁumn
[
i
] = 
x
;

3207 
pIndex
->
azCﬁl
[
i
] = 
pPk
->azCﬁl[
j
];

3208 
pIndex
->
aS‹tOrdî
[
i
] = 
pPk
->aS‹tOrdî[
j
];

3209 
i
++;

3212 
	`as£π
–
i
==
pIndex
->
nCﬁumn
 );

3214 
pIndex
->
aiCﬁumn
[
i
] = 
XN_ROWID
;

3215 
pIndex
->
azCﬁl
[
i
] = 
sqlôe3SåBINARY
;

3217 
	`sqlôe3DeÁu…RowE°
(
pIndex
);

3218 if–
pP¨£
->
pNewTabÀ
==0 ) 
	`e°im©eIndexWidth
(
pIndex
);

3222 
	`as£π
–
	`HasRowid
(
pTab
)

3223 || 
pTab
->
iPKey
<0 || 
	`sqlôe3CﬁumnOfIndex
(
pIndex
,ÖTab->iPKey)>=0 );

3224 if–
pTblName
!=0 && 
pIndex
->
nCﬁumn
>=
pTab
->
nCﬁ
 ){

3225 
pIndex
->
isCovîög
 = 1;

3226 
j
=0; j<
pTab
->
nCﬁ
; j++){

3227 if–
j
==
pTab
->
iPKey
 ) ;

3228 if–
	`sqlôe3CﬁumnOfIndex
(
pIndex
,
j
)>=0 ) ;

3229 
pIndex
->
isCovîög
 = 0;

3234 if–
pTab
==
pP¨£
->
pNewTabÀ
 ){

3256 
Index
 *
pIdx
;

3257 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

3258 
k
;

3259 
	`as£π
–
	`IsUniqueIndex
(
pIdx
) );

3260 
	`as£π
–
pIdx
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
 );

3261 
	`as£π
–
	`IsUniqueIndex
(
pIndex
) );

3263 if–
pIdx
->
nKeyCﬁ
!=
pIndex
->nKeyCol ) ;

3264 
k
=0; k<
pIdx
->
nKeyCﬁ
; k++){

3265 c⁄° *
z1
;

3266 c⁄° *
z2
;

3267 
	`as£π
–
pIdx
->
aiCﬁumn
[
k
]>=0 );

3268 if–
pIdx
->
aiCﬁumn
[
k
]!=
pIndex
->aiColumn[k] ) ;

3269 
z1
 = 
pIdx
->
azCﬁl
[
k
];

3270 
z2
 = 
pIndex
->
azCﬁl
[
k
];

3271 if–
	`sqlôe3SåICmp
(
z1
, 
z2
) ) ;

3273 if–
k
==
pIdx
->
nKeyCﬁ
 ){

3274 if–
pIdx
->
⁄Eº‹
!=
pIndex
->onError ){

3282 if–!(
pIdx
->
⁄Eº‹
==
OE_DeÁu…
 || 
pIndex
->onError==OE_Default) ){

3283 
	`sqlôe3Eº‹Msg
(
pP¨£
,

3286 if–
pIdx
->
⁄Eº‹
==
OE_DeÁu…
 ){

3287 
pIdx
->
⁄Eº‹
 = 
pIndex
->onError;

3290 if–
idxTy≥
==
SQLITE_IDXTYPE_PRIMARYKEY
 ) 
pIdx
->idxType = idxType;

3291 
exô_¸óã_ödex
;

3299 
	`as£π
–
pP¨£
->
nEº
==0 );

3300 if–
db
->
öô
.
busy
 ){

3301 
Index
 *
p
;

3302 
	`as£π
–!
IN_DECLARE_VTAB
 );

3303 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pIndex
->
pSchema
) );

3304 
p
 = 
	`sqlôe3HashIn£π
(&
pIndex
->
pSchema
->
idxHash
,

3305 
pIndex
->
zName
,ÖIndex);

3306 if–
p
 ){

3307 
	`as£π
–
p
==
pIndex
 );

3308 
	`sqlôe3OomFau…
(
db
);

3309 
exô_¸óã_ödex
;

3311 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

3312 if–
pTblName
!=0 ){

3313 
pIndex
->
äum
 = 
db
->
öô
.
√wTnum
;

3330 if–
	`HasRowid
(
pTab
Ë|| 
pTblName
!=0 ){

3331 
Vdbe
 *
v
;

3332 *
zStmt
;

3333 
iMem
 = ++
pP¨£
->
nMem
;

3335 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3336 if–
v
==0 ) 
exô_¸óã_ödex
;

3338 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

3346 
pIndex
->
äum
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_No›
);

3347 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cª©eIndex
, 
iDb
, 
iMem
);

3352 if–
pSèπ
 ){

3353 
n
 = ()(
pP¨£
->
sLa°Tokí
.
z
 - 
pName
->z) +ÖParse->sLastToken.n;

3354 if–
pName
->
z
[
n
-1]==';' )Ç--;

3356 
zStmt
 = 
	`sqlôe3MPrötf
(
db
, "CREATE%s INDEX %.*s",

3357 
⁄Eº‹
==
OE_N⁄e
 ? "" : " UNIQUE", 
n
, 
pName
->
z
);

3361 
zStmt
 = 0;

3366 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

3368 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb),

3369 
pIndex
->
zName
,

3370 
pTab
->
zName
,

3371 
iMem
,

3372 
zStmt


3374 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

3379 if–
pTblName
 ){

3380 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, 
iMem
);

3381 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

3382 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

3383 
	`sqlôe3MPrötf
(
db
, "«me='%q' ANDÅy≥='ödex'", 
pIndex
->
zName
));

3384 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

3387 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIndex
->
äum
);

3396 if–
db
->
öô
.
busy
 || 
pTblName
==0 ){

3397 if–
⁄Eº‹
!=
OE_Rïœ˚
 || 
pTab
->
pIndex
==0

3398 || 
pTab
->
pIndex
->
⁄Eº‹
==
OE_Rïœ˚
){

3399 
pIndex
->
pNext
 = 
pTab
->pIndex;

3400 
pTab
->
pIndex
 =ÖIndex;

3402 
Index
 *
pOthî
 = 
pTab
->
pIndex
;

3403  
pOthî
->
pNext
 &&ÖOthî->pNext->
⁄Eº‹
!=
OE_Rïœ˚
 ){

3404 
pOthî
 =ÖOthî->
pNext
;

3406 
pIndex
->
pNext
 = 
pOthî
->pNext;

3407 
pOthî
->
pNext
 = 
pIndex
;

3409 
pIndex
 = 0;

3413 
exô_¸óã_ödex
:

3414 if–
pIndex
 ) 
	`‰ìIndex
(
db
,ÖIndex);

3415 
	`sqlôe3Ex¥Dñëe
(
db
, 
pPIWhîe
);

3416 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

3417 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTblName
);

3418 
	`sqlôe3DbFªe
(
db
, 
zName
);

3419 
	}
}

3439 
	$sqlôe3DeÁu…RowE°
(
Index
 *
pIdx
){

3441 
LogE°
 
aVÆ
[] = { 33, 32, 30, 28, 26 };

3442 
LogE°
 *
a
 = 
pIdx
->
aiRowLogE°
;

3443 
nC›y
 = 
	`MIN
(
	`AºaySize
(
aVÆ
), 
pIdx
->
nKeyCﬁ
);

3444 
i
;

3449 
a
[0] = 
pIdx
->
pTabÀ
->
nRowLogE°
;

3450 if–
pIdx
->
pP¨tIdxWhîe
!=0 ) 
a
[0] -10; 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

3451 if–
a
[0]<33 )á[0] = 33; 
	`as£π
–33==
	`sqlôe3LogE°
(10) );

3455 
	`mem˝y
(&
a
[1], 
aVÆ
, 
nC›y
*(
LogE°
));

3456 
i
=
nC›y
+1; i<=
pIdx
->
nKeyCﬁ
; i++){

3457 
a
[
i
] = 23; 
	`as£π
–23==
	`sqlôe3LogE°
(5) );

3460 
	`as£π
–0==
	`sqlôe3LogE°
(1) );

3461 if–
	`IsUniqueIndex
(
pIdx
ËË
a
[pIdx->
nKeyCﬁ
] = 0;

3462 
	}
}

3468 
	$sqlôe3Dr›Index
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
ifExi°s
){

3469 
Index
 *
pIndex
;

3470 
Vdbe
 *
v
;

3471 
sqlôe3
 *
db
 = 
pP¨£
->db;

3472 
iDb
;

3474 
	`as£π
–
pP¨£
->
nEº
==0 );

3475 if–
db
->
mÆlocFaûed
 ){

3476 
exô_dr›_ödex
;

3478 
	`as£π
–
pName
->
nSrc
==1 );

3479 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

3480 
exô_dr›_ödex
;

3482 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
pName
->
a
[0].
zName
,ÖName->a[0].
zD©aba£
);

3483 if–
pIndex
==0 ){

3484 if–!
ifExi°s
 ){

3485 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch index: %S", 
pName
, 0);

3487 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
pName
->
a
[0].
zD©aba£
);

3489 
pP¨£
->
checkSchema
 = 1;

3490 
exô_dr›_ödex
;

3492 if–
pIndex
->
idxTy≥
!=
SQLITE_IDXTYPE_APPDEF
 ){

3493 
	`sqlôe3Eº‹Msg
(
pP¨£
, "indexássociated with UNIQUE "

3495 
exô_dr›_ödex
;

3497 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pIndex
->
pSchema
);

3498 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3500 
code
 = 
SQLITE_DROP_INDEX
;

3501 
TabÀ
 *
pTab
 = 
pIndex
->
pTabÀ
;

3502 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

3503 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

3504 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
) ){

3505 
exô_dr›_ödex
;

3507 if–!
OMIT_TEMPDB
 && 
iDb
 ) 
code
 = 
SQLITE_DROP_TEMP_INDEX
;

3508 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pIndex
->
zName
, 
pTab
->zName, 
zDb
) ){

3509 
exô_dr›_ödex
;

3515 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3516 if–
v
 ){

3517 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

3518 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

3520 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb), 
pIndex
->zName

3522 
	`sqlôe3CÀ¨SètTabÀs
(
pP¨£
, 
iDb
, "idx", 
pIndex
->
zName
);

3523 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

3524 
	`de°royRoŸPage
(
pP¨£
, 
pIndex
->
äum
, 
iDb
);

3525 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Index
, 
iDb
, 0, 0, 
pIndex
->
zName
, 0);

3528 
exô_dr›_ödex
:

3529 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

3530 
	}
}

3549 *
	$sqlôe3AºayAŒoˇã
(

3550 
sqlôe3
 *
db
,

3551 *
pAºay
,

3552 
szE¡ry
,

3553 *
≤E¡ry
,

3554 *
pIdx


3556 *
z
;

3557 
n
 = *
≤E¡ry
;

3558 if–(
n
 & (n-1))==0 ){

3559 
sz
 = (
n
==0) ? 1 : 2*n;

3560 *
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pAºay
, 
sz
*
szE¡ry
);

3561 if–
pNew
==0 ){

3562 *
pIdx
 = -1;

3563  
pAºay
;

3565 
pAºay
 = 
pNew
;

3567 
z
 = (*)
pAºay
;

3568 
	`mem£t
(&
z
[
n
 * 
szE¡ry
], 0, szEntry);

3569 *
pIdx
 = 
n
;

3570 ++*
≤E¡ry
;

3571  
pAºay
;

3572 
	}
}

3580 
IdLi°
 *
	$sqlôe3IdLi°Aµíd
(
sqlôe3
 *
db
, 
IdLi°
 *
pLi°
, 
Tokí
 *
pTokí
){

3581 
i
;

3582 if–
pLi°
==0 ){

3583 
pLi°
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
IdLi°
) );

3584 if–
pLi°
==0 )  0;

3586 
pLi°
->
a
 = 
	`sqlôe3AºayAŒoˇã
(

3587 
db
,

3588 
pLi°
->
a
,

3589 (
pLi°
->
a
[0]),

3590 &
pLi°
->
nId
,

3591 &
i


3593 if–
i
<0 ){

3594 
	`sqlôe3IdLi°Dñëe
(
db
, 
pLi°
);

3597 
pLi°
->
a
[
i
].
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTokí
);

3598  
pLi°
;

3599 
	}
}

3604 
	$sqlôe3IdLi°Dñëe
(
sqlôe3
 *
db
, 
IdLi°
 *
pLi°
){

3605 
i
;

3606 if–
pLi°
==0 ) ;

3607 
i
=0; i<
pLi°
->
nId
; i++){

3608 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
[
i
].
zName
);

3610 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
);

3611 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

3612 
	}
}

3618 
	$sqlôe3IdLi°Index
(
IdLi°
 *
pLi°
, c⁄° *
zName
){

3619 
i
;

3620 if–
pLi°
==0 )  -1;

3621 
i
=0; i<
pLi°
->
nId
; i++){

3622 if–
	`sqlôe3SåICmp
(
pLi°
->
a
[
i
].
zName
, zName)==0 )  i;

3625 
	}
}

3646 
SrcLi°
 *
	$sqlôe3SrcLi°E∆¨ge
(

3647 
sqlôe3
 *
db
,

3648 
SrcLi°
 *
pSrc
,

3649 
nExåa
,

3650 
iSèπ


3652 
i
;

3655 
	`as£π
–
iSèπ
>=0 );

3656 
	`as£π
–
nExåa
>=1 );

3657 
	`as£π
–
pSrc
!=0 );

3658 
	`as£π
–
iSèπ
<=
pSrc
->
nSrc
 );

3661 if–(
u32
)
pSrc
->
nSrc
+
nExåa
>pSrc->
nAŒoc
 ){

3662 
SrcLi°
 *
pNew
;

3663 
nAŒoc
 = 
pSrc
->
nSrc
+
nExåa
;

3664 
nGŸ
;

3665 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pSrc
,

3666 (*
pSrc
Ë+ (
nAŒoc
-1)*’Src->
a
[0]) );

3667 if–
pNew
==0 ){

3668 
	`as£π
–
db
->
mÆlocFaûed
 );

3669  
pSrc
;

3671 
pSrc
 = 
pNew
;

3672 
nGŸ
 = (
	`sqlôe3DbMÆlocSize
(
db
, 
pNew
Ë- (*
pSrc
))/’Src->
a
[0])+1;

3673 
pSrc
->
nAŒoc
 = 
nGŸ
;

3678 
i
=
pSrc
->
nSrc
-1; i>=
iSèπ
; i--){

3679 
pSrc
->
a
[
i
+
nExåa
] =ÖSrc->a[i];

3681 
pSrc
->
nSrc
 +
nExåa
;

3684 
	`mem£t
(&
pSrc
->
a
[
iSèπ
], 0, ’Src->a[0])*
nExåa
);

3685 
i
=
iSèπ
; i<iSèπ+
nExåa
; i++){

3686 
pSrc
->
a
[
i
].
iCurs‹
 = -1;

3690  
pSrc
;

3691 
	}
}

3728 
SrcLi°
 *
	$sqlôe3SrcLi°Aµíd
(

3729 
sqlôe3
 *
db
,

3730 
SrcLi°
 *
pLi°
,

3731 
Tokí
 *
pTabÀ
,

3732 
Tokí
 *
pD©aba£


3734 
SrcLi°_ôem
 *
pIãm
;

3735 
	`as£π
–
pD©aba£
==0 || 
pTabÀ
!=0 );

3736 
	`as£π
–
db
!=0 );

3737 if–
pLi°
==0 ){

3738 
pLi°
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
SrcLi°
) );

3739 if–
pLi°
==0 )  0;

3740 
pLi°
->
nAŒoc
 = 1;

3741 
pLi°
->
nSrc
 = 0;

3743 
pLi°
 = 
	`sqlôe3SrcLi°E∆¨ge
(
db
,ÖLi°, 1,ÖLi°->
nSrc
);

3744 if–
db
->
mÆlocFaûed
 ){

3745 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pLi°
);

3748 
pIãm
 = &
pLi°
->
a
[pLi°->
nSrc
-1];

3749 if–
pD©aba£
 &&ÖD©aba£->
z
==0 ){

3750 
pD©aba£
 = 0;

3752 if–
pD©aba£
 ){

3753 
Tokí
 *
pTemp
 = 
pD©aba£
;

3754 
pD©aba£
 = 
pTabÀ
;

3755 
pTabÀ
 = 
pTemp
;

3757 
pIãm
->
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pTabÀ
);

3758 
pIãm
->
zD©aba£
 = 
	`sqlôe3NameFromTokí
(
db
, 
pD©aba£
);

3759  
pLi°
;

3760 
	}
}

3765 
	$sqlôe3SrcLi°AssignCurs‹s
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pLi°
){

3766 
i
;

3767 
SrcLi°_ôem
 *
pIãm
;

3768 
	`as£π
(
pLi°
 || 
pP¨£
->
db
->
mÆlocFaûed
 );

3769 if–
pLi°
 ){

3770 
i
=0, 
pIãm
=
pLi°
->
a
; i<pLi°->
nSrc
; i++,ÖItem++){

3771 if–
pIãm
->
iCurs‹
>=0 ) ;

3772 
pIãm
->
iCurs‹
 = 
pP¨£
->
nTab
++;

3773 if–
pIãm
->
pSñe˘
 ){

3774 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pIãm
->
pSñe˘
->
pSrc
);

3778 
	}
}

3783 
	$sqlôe3SrcLi°Dñëe
(
sqlôe3
 *
db
, 
SrcLi°
 *
pLi°
){

3784 
i
;

3785 
SrcLi°_ôem
 *
pIãm
;

3786 if–
pLi°
==0 ) ;

3787 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nSrc
; i++,ÖItem++){

3788 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zD©aba£
);

3789 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zName
);

3790 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zAlüs
);

3791 if–
pIãm
->
fg
.
isIndexedBy
 ) 
	`sqlôe3DbFªe
(
db
,ÖIãm->
u1
.
zIndexedBy
);

3792 if–
pIãm
->
fg
.
isTabFunc
 ) 
	`sqlôe3Ex¥Li°Dñëe
(
db
,ÖIãm->
u1
.
pFuncArg
);

3793 
	`sqlôe3DñëeTabÀ
(
db
, 
pIãm
->
pTab
);

3794 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pIãm
->
pSñe˘
);

3795 
	`sqlôe3Ex¥Dñëe
(
db
, 
pIãm
->
pOn
);

3796 
	`sqlôe3IdLi°Dñëe
(
db
, 
pIãm
->
pUsög
);

3798 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

3799 
	}
}

3817 
SrcLi°
 *
	$sqlôe3SrcLi°AµídFromTîm
(

3818 
P¨£
 *
pP¨£
,

3819 
SrcLi°
 *
p
,

3820 
Tokí
 *
pTabÀ
,

3821 
Tokí
 *
pD©aba£
,

3822 
Tokí
 *
pAlüs
,

3823 
Sñe˘
 *
pSubquîy
,

3824 
Ex¥
 *
pOn
,

3825 
IdLi°
 *
pUsög


3827 
SrcLi°_ôem
 *
pIãm
;

3828 
sqlôe3
 *
db
 = 
pP¨£
->db;

3829 if–!
p
 && (
pOn
 || 
pUsög
) ){

3830 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a JOIN clause isÑequired before %s",

3831 (
pOn
 ? "ON" : "USING")

3833 
≠≥nd_‰om_îr‹
;

3835 
p
 = 
	`sqlôe3SrcLi°Aµíd
(
db
,Ö, 
pTabÀ
, 
pD©aba£
);

3836 if–
p
==0 || 
	`NEVER
’->
nSrc
==0) ){

3837 
≠≥nd_‰om_îr‹
;

3839 
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3840 
	`as£π
–
pAlüs
!=0 );

3841 if–
pAlüs
->
n
 ){

3842 
pIãm
->
zAlüs
 = 
	`sqlôe3NameFromTokí
(
db
, 
pAlüs
);

3844 
pIãm
->
pSñe˘
 = 
pSubquîy
;

3845 
pIãm
->
pOn
 =ÖOn;

3846 
pIãm
->
pUsög
 =ÖUsing;

3847  
p
;

3849 
≠≥nd_‰om_îr‹
:

3850 
	`as£π
–
p
==0 );

3851 
	`sqlôe3Ex¥Dñëe
(
db
, 
pOn
);

3852 
	`sqlôe3IdLi°Dñëe
(
db
, 
pUsög
);

3853 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSubquîy
);

3855 
	}
}

3861 
	$sqlôe3SrcLi°IndexedBy
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
p
, 
Tokí
 *
pIndexedBy
){

3862 
	`as£π
–
pIndexedBy
!=0 );

3863 if–
p
 && 
	`ALWAYS
’->
nSrc
>0) ){

3864 
SrcLi°_ôem
 *
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3865 
	`as£π
–
pIãm
->
fg
.
nŸIndexed
==0 );

3866 
	`as£π
–
pIãm
->
fg
.
isIndexedBy
==0 );

3867 
	`as£π
–
pIãm
->
fg
.
isTabFunc
==0 );

3868 if–
pIndexedBy
->
n
==1 && !pIndexedBy->
z
 ){

3871 
pIãm
->
fg
.
nŸIndexed
 = 1;

3873 
pIãm
->
u1
.
zIndexedBy
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pIndexedBy
);

3874 
pIãm
->
fg
.
isIndexedBy
 = (pIãm->
u1
.
zIndexedBy
!=0);

3877 
	}
}

3883 
	$sqlôe3SrcLi°FuncArgs
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
p
, 
Ex¥Li°
 *
pLi°
){

3884 if–
p
 ){

3885 
SrcLi°_ôem
 *
pIãm
 = &
p
->
a
[p->
nSrc
-1];

3886 
	`as£π
–
pIãm
->
fg
.
nŸIndexed
==0 );

3887 
	`as£π
–
pIãm
->
fg
.
isIndexedBy
==0 );

3888 
	`as£π
–
pIãm
->
fg
.
isTabFunc
==0 );

3889 
pIãm
->
u1
.
pFuncArg
 = 
pLi°
;

3890 
pIãm
->
fg
.
isTabFunc
 = 1;

3892 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pLi°
);

3894 
	}
}

3911 
	$sqlôe3SrcLi°Shi·JoöTy≥
(
SrcLi°
 *
p
){

3912 if–
p
 ){

3913 
i
;

3914 
i
=
p
->
nSrc
-1; i>0; i--){

3915 
p
->
a
[
i
].
fg
.
joöty≥
 =Ö->a[i-1].fg.jointype;

3917 
p
->
a
[0].
fg
.
joöty≥
 = 0;

3919 
	}
}

3924 
	$sqlôe3BegöTønß˘i⁄
(
P¨£
 *
pP¨£
, 
ty≥
){

3925 
sqlôe3
 *
db
;

3926 
Vdbe
 *
v
;

3927 
i
;

3929 
	`as£π
–
pP¨£
!=0 );

3930 
db
 = 
pP¨£
->db;

3931 
	`as£π
–
db
!=0 );

3932 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "BEGIN", 0, 0) ){

3935 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3936 if–!
v
 ) ;

3937 if–
ty≥
!=
TK_DEFERRED
 ){

3938 
i
=0; i<
db
->
nDb
; i++){

3939 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Tønß˘i⁄
, 
i
, (
ty≥
==
TK_EXCLUSIVE
)+1);

3940 
	`sqlôe3VdbeU£sBåì
(
v
, 
i
);

3943 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_AutoCommô
);

3944 
	}
}

3949 
	$sqlôe3CommôTønß˘i⁄
(
P¨£
 *
pP¨£
){

3950 
Vdbe
 *
v
;

3952 
	`as£π
–
pP¨£
!=0 );

3953 
	`as£π
–
pP¨£
->
db
!=0 );

3954 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "COMMIT", 0, 0) ){

3957 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3958 if–
v
 ){

3959 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_AutoCommô
, 1);

3961 
	}
}

3966 
	$sqlôe3RﬁlbackTønß˘i⁄
(
P¨£
 *
pP¨£
){

3967 
Vdbe
 *
v
;

3969 
	`as£π
–
pP¨£
!=0 );

3970 
	`as£π
–
pP¨£
->
db
!=0 );

3971 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_TRANSACTION
, "ROLLBACK", 0, 0) ){

3974 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3975 if–
v
 ){

3976 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AutoCommô
, 1, 1);

3978 
	}
}

3984 
	$sqlôe3Savïoöt
(
P¨£
 *
pP¨£
, 
›
, 
Tokí
 *
pName
){

3985 *
zName
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName
);

3986 if–
zName
 ){

3987 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

3988 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3989 c⁄° * c⁄° 
az
[] = { "BEGIN", "RELEASE", "ROLLBACK" };

3990 
	`as£π
–!
SAVEPOINT_BEGIN
 && 
SAVEPOINT_RELEASE
==1 && 
SAVEPOINT_ROLLBACK
==2 );

3992 if–!
v
 || 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SAVEPOINT
, 
az
[
›
], 
zName
, 0) ){

3993 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
zName
);

3996 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Savïoöt
, 
›
, 0, 0, 
zName
, 
P4_DYNAMIC
);

3998 
	}
}

4004 
	$sqlôe3O≥nTempD©aba£
(
P¨£
 *
pP¨£
){

4005 
sqlôe3
 *
db
 = 
pP¨£
->db;

4006 if–
db
->
aDb
[1].
pBt
==0 && !
pP¨£
->
ex∂aö
 ){

4007 
rc
;

4008 
Båì
 *
pBt
;

4009 c⁄° 
Êags
 =

4010 
SQLITE_OPEN_READWRITE
 |

4011 
SQLITE_OPEN_CREATE
 |

4012 
SQLITE_OPEN_EXCLUSIVE
 |

4013 
SQLITE_OPEN_DELETEONCLOSE
 |

4014 
SQLITE_OPEN_TEMP_DB
;

4016 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 0, db, &
pBt
, 0, 
Êags
);

4017 if–
rc
!=
SQLITE_OK
 ){

4018 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unableÅo openáÅemporary database "

4020 
pP¨£
->
rc
 =Ñc;

4023 
db
->
aDb
[1].
pBt
 =ÖBt;

4024 
	`as£π
–
db
->
aDb
[1].
pSchema
 );

4025 if–
SQLITE_NOMEM
==
	`sqlôe3BåìSëPageSize
(
pBt
, 
db
->
√xtPagesize
, -1, 0) ){

4026 
	`sqlôe3OomFau…
(
db
);

4031 
	}
}

4039 
	$sqlôe3CodeVîifySchema
(
P¨£
 *
pP¨£
, 
iDb
){

4040 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4041 
sqlôe3
 *
db
 = 
pT›Àvñ
->db;

4043 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

4044 
	`as£π
–
db
->
aDb
[
iDb
].
pBt
!=0 || iDb==1 );

4045 
	`as£π
–
iDb
<
SQLITE_MAX_ATTACHED
+2 );

4046 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

4047 if–
	`DbMaskTe°
(
pT›Àvñ
->
cookõMask
, 
iDb
)==0 ){

4048 
	`DbMaskSë
(
pT›Àvñ
->
cookõMask
, 
iDb
);

4049 
pT›Àvñ
->
cookõVÆue
[
iDb
] = 
db
->
aDb
[iDb].
pSchema
->
schema_cookõ
;

4050 if–!
OMIT_TEMPDB
 && 
iDb
==1 ){

4051 
	`sqlôe3O≥nTempD©aba£
(
pT›Àvñ
);

4054 
	}
}

4060 
	$sqlôe3CodeVîifyNamedSchema
(
P¨£
 *
pP¨£
, c⁄° *
zDb
){

4061 
sqlôe3
 *
db
 = 
pP¨£
->db;

4062 
i
;

4063 
i
=0; i<
db
->
nDb
; i++){

4064 
Db
 *
pDb
 = &
db
->
aDb
[
i
];

4065 if–
pDb
->
pBt
 && (!
zDb
 || 0==
	`sqlôe3SåICmp
(zDb,ÖDb->
zName
)) ){

4066 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
i
);

4069 
	}
}

4084 
	$sqlôe3BegöWrôeO≥øti⁄
(
P¨£
 *
pP¨£
, 
£tSèãmít
, 
iDb
){

4085 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4086 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

4087 
	`DbMaskSë
(
pT›Àvñ
->
wrôeMask
, 
iDb
);

4088 
pT›Àvñ
->
isMu…iWrôe
 |
£tSèãmít
;

4089 
	}
}

4098 
	$sqlôe3Mu…iWrôe
(
P¨£
 *
pP¨£
){

4099 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4100 
pT›Àvñ
->
isMu…iWrôe
 = 1;

4101 
	}
}

4119 
	$sqlôe3MayAb‹t
(
P¨£
 *
pP¨£
){

4120 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

4121 
pT›Àvñ
->
mayAb‹t
 = 1;

4122 
	}
}

4129 
	$sqlôe3HÆtC⁄°øöt
(

4130 
P¨£
 *
pP¨£
,

4131 
îrCode
,

4132 
⁄Eº‹
,

4133 *
p4
,

4134 
i8
 
p4ty≥
,

4135 
u8
 
p5Eºmsg


4137 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

4138 
	`as£π
–(
îrCode
&0xff)==
SQLITE_CONSTRAINT
 );

4139 if–
⁄Eº‹
==
OE_Ab‹t
 ){

4140 
	`sqlôe3MayAb‹t
(
pP¨£
);

4142 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_HÆt
, 
îrCode
, 
⁄Eº‹
, 0, 
p4
, 
p4ty≥
);

4143 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5Eºmsg
);

4144 
	}
}

4149 
	$sqlôe3UniqueC⁄°øöt
(

4150 
P¨£
 *
pP¨£
,

4151 
⁄Eº‹
,

4152 
Index
 *
pIdx


4154 *
zEº
;

4155 
j
;

4156 
SåAccum
 
îrMsg
;

4157 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

4159 
	`sqlôe3SåAccumInô
(&
îrMsg
, 
pP¨£
->
db
, 0, 0, 200);

4160 if–
pIdx
->
aCﬁEx¥
 ){

4161 
	`sqlôe3XPrötf
(&
îrMsg
, "ödex '%q'", 
pIdx
->
zName
);

4163 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

4164 *
zCﬁ
;

4165 
	`as£π
–
pIdx
->
aiCﬁumn
[
j
]>=0 );

4166 
zCﬁ
 = 
pTab
->
aCﬁ
[
pIdx
->
aiCﬁumn
[
j
]].
zName
;

4167 if–
j
 ) 
	`sqlôe3SåAccumAµíd
(&
îrMsg
, ", ", 2);

4168 
	`sqlôe3XPrötf
(&
îrMsg
, "%s.%s", 
pTab
->
zName
, 
zCﬁ
);

4171 
zEº
 = 
	`sqlôe3SåAccumFöish
(&
îrMsg
);

4172 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
,

4173 
	`IsPrim¨yKeyIndex
(
pIdx
Ë? 
SQLITE_CONSTRAINT_PRIMARYKEY


4174 : 
SQLITE_CONSTRAINT_UNIQUE
,

4175 
⁄Eº‹
, 
zEº
, 
P4_DYNAMIC
, 
P5_C⁄°øötUnique
);

4176 
	}
}

4182 
	$sqlôe3RowidC⁄°øöt
(

4183 
P¨£
 *
pP¨£
,

4184 
⁄Eº‹
,

4185 
TabÀ
 *
pTab


4187 *
zMsg
;

4188 
rc
;

4189 if–
pTab
->
iPKey
>=0 ){

4190 
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "%s.%s", 
pTab
->
zName
,

4191 
pTab
->
aCﬁ
[pTab->
iPKey
].
zName
);

4192 
rc
 = 
SQLITE_CONSTRAINT_PRIMARYKEY
;

4194 
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "%s.rowid", 
pTab
->
zName
);

4195 
rc
 = 
SQLITE_CONSTRAINT_ROWID
;

4197 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
rc
, 
⁄Eº‹
, 
zMsg
, 
P4_DYNAMIC
,

4198 
P5_C⁄°øötUnique
);

4199 
	}
}

4205 #i‚de‡
SQLITE_OMIT_REINDEX


4206 
	$cﬁœti⁄M©ch
(c⁄° *
zCﬁl
, 
Index
 *
pIndex
){

4207 
i
;

4208 
	`as£π
–
zCﬁl
!=0 );

4209 
i
=0; i<
pIndex
->
nCﬁumn
; i++){

4210 c⁄° *
z
 = 
pIndex
->
azCﬁl
[
i
];

4211 
	`as£π
–
z
!=0 || 
pIndex
->
aiCﬁumn
[
i
]<0 );

4212 if–
pIndex
->
aiCﬁumn
[
i
]>=0 && 0==
	`sqlôe3SåICmp
(
z
, 
zCﬁl
) ){

4217 
	}
}

4224 #i‚de‡
SQLITE_OMIT_REINDEX


4225 
	$ªödexTabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, c⁄° *
zCﬁl
){

4226 
Index
 *
pIndex
;

4228 
pIndex
=
pTab
->pIndex;ÖIndex;ÖIndexıIndex->
pNext
){

4229 if–
zCﬁl
==0 || 
	`cﬁœti⁄M©ch
(zCﬁl, 
pIndex
) ){

4230 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

4231 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

4232 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, -1);

4235 
	}
}

4243 #i‚de‡
SQLITE_OMIT_REINDEX


4244 
	$ªödexD©aba£s
(
P¨£
 *
pP¨£
, c⁄° *
zCﬁl
){

4245 
Db
 *
pDb
;

4246 
iDb
;

4247 
sqlôe3
 *
db
 = 
pP¨£
->db;

4248 
HashEÀm
 *
k
;

4249 
TabÀ
 *
pTab
;

4251 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

4252 
iDb
=0, 
pDb
=
db
->
aDb
; iDb<db->
nDb
; iDb++,ÖDb++){

4253 
	`as£π
–
pDb
!=0 );

4254 
k
=
	`sqlôeHashFú°
(&
pDb
->
pSchema
->
tblHash
); k; k=
	`sqlôeHashNext
(k)){

4255 
pTab
 = (
TabÀ
*)
	`sqlôeHashD©a
(
k
);

4256 
	`ªödexTabÀ
(
pP¨£
, 
pTab
, 
zCﬁl
);

4259 
	}
}

4275 #i‚de‡
SQLITE_OMIT_REINDEX


4276 
	$sqlôe3Reödex
(
P¨£
 *
pP¨£
, 
Tokí
 *
pName1
, Tokí *
pName2
){

4277 
CﬁlSeq
 *
pCﬁl
;

4278 *
z
;

4279 c⁄° *
zDb
;

4280 
TabÀ
 *
pTab
;

4281 
Index
 *
pIndex
;

4282 
iDb
;

4283 
sqlôe3
 *
db
 = 
pP¨£
->db;

4284 
Tokí
 *
pObjName
;

4288 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

4292 if–
pName1
==0 ){

4293 
	`ªödexD©aba£s
(
pP¨£
, 0);

4295 }if–
	`NEVER
(
pName2
==0Ë||ÖName2->
z
==0 ){

4296 *
zCﬁl
;

4297 
	`as£π
–
pName1
->
z
 );

4298 
zCﬁl
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName1
);

4299 if–!
zCﬁl
 ) ;

4300 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
	`ENC
(db), 
zCﬁl
, 0);

4301 if–
pCﬁl
 ){

4302 
	`ªödexD©aba£s
(
pP¨£
, 
zCﬁl
);

4303 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

4306 
	`sqlôe3DbFªe
(
db
, 
zCﬁl
);

4308 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pObjName
);

4309 if–
iDb
<0 ) ;

4310 
z
 = 
	`sqlôe3NameFromTokí
(
db
, 
pObjName
);

4311 if–
z
==0 ) ;

4312 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

4313 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
z
, 
zDb
);

4314 if–
pTab
 ){

4315 
	`ªödexTabÀ
(
pP¨£
, 
pTab
, 0);

4316 
	`sqlôe3DbFªe
(
db
, 
z
);

4319 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
z
, 
zDb
);

4320 
	`sqlôe3DbFªe
(
db
, 
z
);

4321 if–
pIndex
 ){

4322 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

4323 
	`sqlôe3RefûlIndex
(
pP¨£
, 
pIndex
, -1);

4326 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unableÅo identifyÅhe objectÅo beÑeindexed");

4327 
	}
}

4336 
KeyInfo
 *
	$sqlôe3KeyInfoOfIndex
(
P¨£
 *
pP¨£
, 
Index
 *
pIdx
){

4337 
i
;

4338 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

4339 
nKey
 = 
pIdx
->
nKeyCﬁ
;

4340 
KeyInfo
 *
pKey
;

4341 if–
pP¨£
->
nEº
 )  0;

4342 if–
pIdx
->
uniqNŸNuŒ
 ){

4343 
pKey
 = 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 
nKey
, 
nCﬁ
-nKey);

4345 
pKey
 = 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 
nCﬁ
, 0);

4347 if–
pKey
 ){

4348 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKey
) );

4349 
i
=0; i<
nCﬁ
; i++){

4350 c⁄° *
zCﬁl
 = 
pIdx
->
azCﬁl
[
i
];

4351 
pKey
->
aCﬁl
[
i
] = 
zCﬁl
==
sqlôe3SåBINARY
 ? 0 :

4352 
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
zCﬁl
);

4353 
pKey
->
aS‹tOrdî
[
i
] = 
pIdx
->aSortOrder[i];

4355 if–
pP¨£
->
nEº
 ){

4356 
	`sqlôe3KeyInfoUƒef
(
pKey
);

4357 
pKey
 = 0;

4360  
pKey
;

4361 
	}
}

4363 #i‚de‡
SQLITE_OMIT_CTE


4368 
Wôh
 *
	$sqlôe3WôhAdd
(

4369 
P¨£
 *
pP¨£
,

4370 
Wôh
 *
pWôh
,

4371 
Tokí
 *
pName
,

4372 
Ex¥Li°
 *
pArgli°
,

4373 
Sñe˘
 *
pQuîy


4375 
sqlôe3
 *
db
 = 
pP¨£
->db;

4376 
Wôh
 *
pNew
;

4377 *
zName
;

4381 
zName
 = 
	`sqlôe3NameFromTokí
(
pP¨£
->
db
, 
pName
);

4382 if–
zName
 && 
pWôh
 ){

4383 
i
;

4384 
i
=0; i<
pWôh
->
nCã
; i++){

4385 if–
	`sqlôe3SåICmp
(
zName
, 
pWôh
->
a
[
i
].zName)==0 ){

4386 
	`sqlôe3Eº‹Msg
(
pP¨£
, "du∂iˇã WITHÅabÀÇame: %s", 
zName
);

4391 if–
pWôh
 ){

4392 
nByã
 = (*
pWôh
Ë+ (’Wôh->
a
[1]Ë*ÖWôh->
nCã
);

4393 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pWôh
, 
nByã
);

4395 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*
pWôh
));

4397 
	`as£π
–(
pNew
!=0 && 
zName
!=0Ë|| 
db
->
mÆlocFaûed
 );

4399 if–
db
->
mÆlocFaûed
 ){

4400 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pArgli°
);

4401 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pQuîy
);

4402 
	`sqlôe3DbFªe
(
db
, 
zName
);

4403 
pNew
 = 
pWôh
;

4405 
pNew
->
a
[pNew->
nCã
].
pSñe˘
 = 
pQuîy
;

4406 
pNew
->
a
[pNew->
nCã
].
pCﬁs
 = 
pArgli°
;

4407 
pNew
->
a
[pNew->
nCã
].
zName
 = zName;

4408 
pNew
->
a
[pNew->
nCã
].
zCãEº
 = 0;

4409 
pNew
->
nCã
++;

4412  
pNew
;

4413 
	}
}

4418 
	$sqlôe3WôhDñëe
(
sqlôe3
 *
db
, 
Wôh
 *
pWôh
){

4419 if–
pWôh
 ){

4420 
i
;

4421 
i
=0; i<
pWôh
->
nCã
; i++){

4422 
Cã
 *
pCã
 = &
pWôh
->
a
[
i
];

4423 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCã
->
pCﬁs
);

4424 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pCã
->
pSñe˘
);

4425 
	`sqlôe3DbFªe
(
db
, 
pCã
->
zName
);

4427 
	`sqlôe3DbFªe
(
db
, 
pWôh
);

4429 
	}
}

	@callback.c

17 
	~"sqlôeI¡.h
"

23 
	$ˇŒCﬁlNìded
(
sqlôe3
 *
db
, 
íc
, c⁄° *
zName
){

24 
	`as£π
–!
db
->
xCﬁlNìded
 || !db->
xCﬁlNìded16
 );

25 if–
db
->
xCﬁlNìded
 ){

26 *
zExã∫Æ
 = 
	`sqlôe3DbSåDup
(
db
, 
zName
);

27 if–!
zExã∫Æ
 ) ;

28 
db
->
	`xCﬁlNìded
(db->
pCﬁlNìdedArg
, db, 
íc
, 
zExã∫Æ
);

29 
	`sqlôe3DbFªe
(
db
, 
zExã∫Æ
);

31 #i‚de‡
SQLITE_OMIT_UTF16


32 if–
db
->
xCﬁlNìded16
 ){

33 c⁄° *
zExã∫Æ
;

34 
sqlôe3_vÆue
 *
pTmp
 = 
	`sqlôe3VÆueNew
(
db
);

35 
	`sqlôe3VÆueSëSå
(
pTmp
, -1, 
zName
, 
SQLITE_UTF8
, 
SQLITE_STATIC
);

36 
zExã∫Æ
 = 
	`sqlôe3VÆueText
(
pTmp
, 
SQLITE_UTF16NATIVE
);

37 if–
zExã∫Æ
 ){

38 
db
->
	`xCﬁlNìded16
(db->
pCﬁlNìdedArg
, db, ()
	`ENC
(db), 
zExã∫Æ
);

40 
	`sqlôe3VÆueFªe
(
pTmp
);

43 
	}
}

52 
	$sy¡hCﬁlSeq
(
sqlôe3
 *
db
, 
CﬁlSeq
 *
pCﬁl
){

53 
CﬁlSeq
 *
pCﬁl2
;

54 *
z
 = 
pCﬁl
->
zName
;

55 
i
;

56 c⁄° 
u8
 
aEnc
[] = { 
SQLITE_UTF16BE
, 
SQLITE_UTF16LE
, 
SQLITE_UTF8
 };

57 
i
=0; i<3; i++){

58 
pCﬁl2
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
aEnc
[
i
], 
z
, 0);

59 if–
pCﬁl2
->
xCmp
!=0 ){

60 
	`mem˝y
(
pCﬁl
, 
pCﬁl2
, (
CﬁlSeq
));

61 
pCﬁl
->
xDñ
 = 0;

62  
SQLITE_OK
;

65  
SQLITE_ERROR
;

66 
	}
}

82 
CﬁlSeq
 *
	$sqlôe3GëCﬁlSeq
(

83 
P¨£
 *
pP¨£
,

84 
u8
 
íc
,

85 
CﬁlSeq
 *
pCﬁl
,

86 c⁄° *
zName


88 
CﬁlSeq
 *
p
;

89 
sqlôe3
 *
db
 = 
pP¨£
->db;

91 
p
 = 
pCﬁl
;

92 if–!
p
 ){

93 
p
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 0);

95 if–!
p
 || !p->
xCmp
 ){

99 
	`ˇŒCﬁlNìded
(
db
, 
íc
, 
zName
);

100 
p
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
íc
, 
zName
, 0);

102 if–
p
 && !p->
xCmp
 && 
	`sy¡hCﬁlSeq
(
db
,Ö) ){

103 
p
 = 0;

105 
	`as£π
–!
p
 ||Ö->
xCmp
 );

106 if–
p
==0 ){

107 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch cﬁœti⁄ sequí˚: %s", 
zName
);

109  
p
;

110 
	}
}

123 
	$sqlôe3CheckCﬁlSeq
(
P¨£
 *
pP¨£
, 
CﬁlSeq
 *
pCﬁl
){

124 if–
pCﬁl
 ){

125 c⁄° *
zName
 = 
pCﬁl
->zName;

126 
sqlôe3
 *
db
 = 
pP¨£
->db;

127 
CﬁlSeq
 *
p
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
	`ENC
(
db
), 
pCﬁl
, 
zName
);

128 if–!
p
 ){

129  
SQLITE_ERROR
;

131 
	`as£π
–
p
==
pCﬁl
 );

133  
SQLITE_OK
;

134 
	}
}

151 
CﬁlSeq
 *
	$födCﬁlSeqE¡ry
(

152 
sqlôe3
 *
db
,

153 c⁄° *
zName
,

154 
¸óã


156 
CﬁlSeq
 *
pCﬁl
;

157 
pCﬁl
 = 
	`sqlôe3HashFöd
(&
db
->
aCﬁlSeq
, 
zName
);

159 if–0==
pCﬁl
 && 
¸óã
 ){

160 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

161 
pCﬁl
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 3*(*pCﬁlË+ 
nName
 + 1);

162 if–
pCﬁl
 ){

163 
CﬁlSeq
 *
pDñ
 = 0;

164 
pCﬁl
[0].
zName
 = (*)&pColl[3];

165 
pCﬁl
[0].
íc
 = 
SQLITE_UTF8
;

166 
pCﬁl
[1].
zName
 = (*)&pColl[3];

167 
pCﬁl
[1].
íc
 = 
SQLITE_UTF16LE
;

168 
pCﬁl
[2].
zName
 = (*)&pColl[3];

169 
pCﬁl
[2].
íc
 = 
SQLITE_UTF16BE
;

170 
	`mem˝y
(
pCﬁl
[0].
zName
, zName, 
nName
);

171 
pCﬁl
[0].
zName
[
nName
] = 0;

172 
pDñ
 = 
	`sqlôe3HashIn£π
(&
db
->
aCﬁlSeq
, 
pCﬁl
[0].
zName
,ÖColl);

178 
	`as£π
–
pDñ
==0 ||ÖDñ==
pCﬁl
 );

179 if–
pDñ
!=0 ){

180 
	`sqlôe3OomFau…
(
db
);

181 
	`sqlôe3DbFªe
(
db
, 
pDñ
);

182 
pCﬁl
 = 0;

186  
pCﬁl
;

187 
	}
}

204 
CﬁlSeq
 *
	$sqlôe3FödCﬁlSeq
(

205 
sqlôe3
 *
db
,

206 
u8
 
íc
,

207 c⁄° *
zName
,

208 
¸óã


210 
CﬁlSeq
 *
pCﬁl
;

211 if–
zName
 ){

212 
pCﬁl
 = 
	`födCﬁlSeqE¡ry
(
db
, 
zName
, 
¸óã
);

214 
pCﬁl
 = 
db
->
pDÊtCﬁl
;

216 
	`as£π
–
SQLITE_UTF8
==1 && 
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

217 
	`as£π
–
íc
>=
SQLITE_UTF8
 &&Énc<=
SQLITE_UTF16BE
 );

218 if–
pCﬁl
 )ÖCﬁ»+
íc
-1;

219  
pCﬁl
;

220 
	}
}

250 
	#FUNC_PERFECT_MATCH
 6

	)

251 
	$m©chQuÆôy
(

252 
FuncDef
 *
p
,

253 
nArg
,

254 
u8
 
íc


256 
m©ch
;

259 if–
nArg
==(-2ËË (
p
->
xSFunc
==0Ë? 0 : 
FUNC_PERFECT_MATCH
;

262 if–
p
->
nArg
!=nArg &&Ö->nArg>=0 )  0;

266 if–
p
->
nArg
==nArg ){

267 
m©ch
 = 4;

269 
m©ch
 = 1;

273 if–
íc
==(
p
->
funcFœgs
 & 
SQLITE_FUNC_ENCMASK
) ){

274 
m©ch
 += 2;

275 }if–(
íc
 & 
p
->
funcFœgs
 & 2)!=0 ){

276 
m©ch
 += 1;

279  
m©ch
;

280 
	}
}

286 
FuncDef
 *
	$fun˘i⁄Sórch
(

287 
h
,

288 c⁄° *
zFunc


290 
FuncDef
 *
p
;

291 
p
=
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
];Ö;Öı->
u
.
pHash
){

292 if–
	`sqlôe3SåICmp
(
p
->
zName
, 
zFunc
)==0 ){

293  
p
;

297 
	}
}

302 
	$sqlôe3In£πBuûtöFuncs
(

303 
FuncDef
 *
aDef
,

304 
nDef


306 
i
;

307 
i
=0; i<
nDef
; i++){

308 
FuncDef
 *
pOthî
;

309 c⁄° *
zName
 = 
aDef
[
i
].zName;

310 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

311 
h
 = (
sqlôe3UµîToLowî
[(
u8
)
zName
[0]] + 
nName
Ë% 
SQLITE_FUNC_HASH_SZ
;

312 
pOthî
 = 
	`fun˘i⁄Sórch
(
h
, 
zName
);

313 if–
pOthî
 ){

314 
	`as£π
–
pOthî
!=&
aDef
[
i
] &&ÖOthî->
pNext
!=&aDef[i] );

315 
aDef
[
i
].
pNext
 = 
pOthî
->pNext;

316 
pOthî
->
pNext
 = &
aDef
[
i
];

318 
aDef
[
i
].
pNext
 = 0;

319 
aDef
[
i
].
u
.
pHash
 = 
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
];

320 
sqlôe3BuûtöFun˘i⁄s
.
a
[
h
] = &
aDef
[
i
];

323 
	}
}

346 
FuncDef
 *
	$sqlôe3FödFun˘i⁄
(

347 
sqlôe3
 *
db
,

348 c⁄° *
zName
,

349 
nArg
,

350 
u8
 
íc
,

351 
u8
 
¸óãFœg


353 
FuncDef
 *
p
;

354 
FuncDef
 *
pBe°
 = 0;

355 
be°Sc‹e
 = 0;

356 
h
;

357 
nName
;

359 
	`as£π
–
nArg
>=(-2) );

360 
	`as£π
–
nArg
>=(-1Ë|| 
¸óãFœg
==0 );

361 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

365 
p
 = (
FuncDef
*)
	`sqlôe3HashFöd
(&
db
->
aFunc
, 
zName
);

366  
p
 ){

367 
sc‹e
 = 
	`m©chQuÆôy
(
p
, 
nArg
, 
íc
);

368 if–
sc‹e
>
be°Sc‹e
 ){

369 
pBe°
 = 
p
;

370 
be°Sc‹e
 = 
sc‹e
;

372 
p
 =Ö->
pNext
;

387 if–!
¸óãFœg
 && (
pBe°
==0 || (
db
->
Êags
 & 
SQLITE_Pª„rBuûtö
)!=0) ){

388 
be°Sc‹e
 = 0;

389 
h
 = (
sqlôe3UµîToLowî
[(
u8
)
zName
[0]] + 
nName
Ë% 
SQLITE_FUNC_HASH_SZ
;

390 
p
 = 
	`fun˘i⁄Sórch
(
h
, 
zName
);

391  
p
 ){

392 
sc‹e
 = 
	`m©chQuÆôy
(
p
, 
nArg
, 
íc
);

393 if–
sc‹e
>
be°Sc‹e
 ){

394 
pBe°
 = 
p
;

395 
be°Sc‹e
 = 
sc‹e
;

397 
p
 =Ö->
pNext
;

405 if–
¸óãFœg
 && 
be°Sc‹e
<
FUNC_PERFECT_MATCH
 &&

406 (
pBe°
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pBe°)+
nName
+1))!=0 ){

407 
FuncDef
 *
pOthî
;

408 
pBe°
->
zName
 = (const *)&pBest[1];

409 
pBe°
->
nArg
 = (
u16
)nArg;

410 
pBe°
->
funcFœgs
 = 
íc
;

411 
	`mem˝y
((*)&
pBe°
[1], 
zName
, 
nName
+1);

412 
pOthî
 = (
FuncDef
*)
	`sqlôe3HashIn£π
(&
db
->
aFunc
, 
pBe°
->
zName
,ÖBest);

413 if–
pOthî
==
pBe°
 ){

414 
	`sqlôe3DbFªe
(
db
, 
pBe°
);

415 
	`sqlôe3OomFau…
(
db
);

418 
pBe°
->
pNext
 = 
pOthî
;

422 if–
pBe°
 && (pBe°->
xSFunc
 || 
¸óãFœg
) ){

423  
pBe°
;

426 
	}
}

436 
	$sqlôe3SchemaCÀ¨
(*
p
){

437 
Hash
 
ãmp1
;

438 
Hash
 
ãmp2
;

439 
HashEÀm
 *
pEÀm
;

440 
Schema
 *
pSchema
 = (Schem®*)
p
;

442 
ãmp1
 = 
pSchema
->
tblHash
;

443 
ãmp2
 = 
pSchema
->
åigHash
;

444 
	`sqlôe3HashInô
(&
pSchema
->
åigHash
);

445 
	`sqlôe3HashCÀ¨
(&
pSchema
->
idxHash
);

446 
pEÀm
=
	`sqlôeHashFú°
(&
ãmp2
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

447 
	`sqlôe3DñëeTriggî
(0, (
Triggî
*)
	`sqlôeHashD©a
(
pEÀm
));

449 
	`sqlôe3HashCÀ¨
(&
ãmp2
);

450 
	`sqlôe3HashInô
(&
pSchema
->
tblHash
);

451 
pEÀm
=
	`sqlôeHashFú°
(&
ãmp1
);ÖEÀm;ÖEÀm=
	`sqlôeHashNext
(pElem)){

452 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
pEÀm
);

453 
	`sqlôe3DñëeTabÀ
(0, 
pTab
);

455 
	`sqlôe3HashCÀ¨
(&
ãmp1
);

456 
	`sqlôe3HashCÀ¨
(&
pSchema
->
fkeyHash
);

457 
pSchema
->
pSeqTab
 = 0;

458 if–
pSchema
->
schemaFœgs
 & 
DB_SchemaLﬂded
 ){

459 
pSchema
->
iGíî©i⁄
++;

460 
pSchema
->
schemaFœgs
 &~
DB_SchemaLﬂded
;

462 
	}
}

468 
Schema
 *
	$sqlôe3SchemaGë
(
sqlôe3
 *
db
, 
Båì
 *
pBt
){

469 
Schema
 * 
p
;

470 if–
pBt
 ){

471 
p
 = (
Schema
 *)
	`sqlôe3BåìSchema
(
pBt
, (Schema), 
sqlôe3SchemaCÀ¨
);

473 
p
 = (
Schema
 *)
	`sqlôe3DbMÆlocZîo
(0, (Schema));

475 if–!
p
 ){

476 
	`sqlôe3OomFau…
(
db
);

477 }i‡–0==
p
->
fûe_f‹m©
 ){

478 
	`sqlôe3HashInô
(&
p
->
tblHash
);

479 
	`sqlôe3HashInô
(&
p
->
idxHash
);

480 
	`sqlôe3HashInô
(&
p
->
åigHash
);

481 
	`sqlôe3HashInô
(&
p
->
fkeyHash
);

482 
p
->
íc
 = 
SQLITE_UTF8
;

484  
p
;

485 
	}
}

	@complete.c

19 
	~"sqlôeI¡.h
"

20 #i‚de‡
SQLITE_OMIT_COMPLETE


25 #i‚de‡
SQLITE_AMALGAMATION


26 #ifde‡
SQLITE_ASCII


27 
	#IdCh¨
(
C
Ë((
sqlôe3Cty≥M≠
[()C]&0x46)!=0)

	)

29 #ifde‡
SQLITE_EBCDIC


30 c⁄° 
sqlôe3IsEbcdicIdCh¨
[];

31 
	#IdCh¨
(
C
Ë(((
c
=C)>=0x42 && 
sqlôe3IsEbcdicIdCh¨
[c-0x40]))

	)

40 
	#tkSEMI
 0

	)

41 
	#tkWS
 1

	)

42 
	#tkOTHER
 2

	)

43 #i‚de‡
SQLITE_OMIT_TRIGGER


44 
	#tkEXPLAIN
 3

	)

45 
	#tkCREATE
 4

	)

46 
	#tkTEMP
 5

	)

47 
	#tkTRIGGER
 6

	)

48 
	#tkEND
 7

	)

104 
	$sqlôe3_com∂ëe
(c⁄° *
zSql
){

105 
u8
 
°©e
 = 0;

106 
u8
 
tokí
;

108 #i‚de‡
SQLITE_OMIT_TRIGGER


112 c⁄° 
u8
 
å™s
[8][8] = {

128 c⁄° 
u8
 
å™s
[3][3] = {

137 #ifde‡
SQLITE_ENABLE_API_ARMOR


138 if–
zSql
==0 ){

139 ()
SQLITE_MISUSE_BKPT
;

144  *
zSql
 ){

145  *
zSql
 ){

147 
tokí
 = 
tkSEMI
;

155 
tokí
 = 
tkWS
;

159 if–
zSql
[1]!='*' ){

160 
tokí
 = 
tkOTHER
;

163 
zSql
 += 2;

164  
zSql
[0] && (zSql[0]!='*' || zSql[1]!='/') ){ zSql++; }

165 if–
zSql
[0]==0 )  0;

166 
zSql
++;

167 
tokí
 = 
tkWS
;

171 if–
zSql
[1]!='-' ){

172 
tokí
 = 
tkOTHER
;

175  *
zSql
 && *zSql!='\n' ){ zSql++; }

176 if–*
zSql
==0 )  
°©e
==1;

177 
tokí
 = 
tkWS
;

181 
zSql
++;

182  *
zSql
 && *zSql!=']' ){ zSql++; }

183 if–*
zSql
==0 )  0;

184 
tokí
 = 
tkOTHER
;

190 
c
 = *
zSql
;

191 
zSql
++;

192  *
zSql
 && *zSql!=
c
 ){ zSql++; }

193 if–*
zSql
==0 )  0;

194 
tokí
 = 
tkOTHER
;

198 #ifde‡
SQLITE_EBCDIC


199 
c
;

201 if–
	`IdCh¨
((
u8
)*
zSql
) ){

203 
nId
;

204 
nId
=1; 
	`IdCh¨
(
zSql
[nId]);ÇId++){}

205 #ifde‡
SQLITE_OMIT_TRIGGER


206 
tokí
 = 
tkOTHER
;

208  *
zSql
 ){

210 if–
nId
==6 && 
	`sqlôe3SåNICmp
(
zSql
, "create", 6)==0 ){

211 
tokí
 = 
tkCREATE
;

213 
tokí
 = 
tkOTHER
;

218 if–
nId
==7 && 
	`sqlôe3SåNICmp
(
zSql
, "trigger", 7)==0 ){

219 
tokí
 = 
tkTRIGGER
;

220 }if–
nId
==4 && 
	`sqlôe3SåNICmp
(
zSql
, "temp", 4)==0 ){

221 
tokí
 = 
tkTEMP
;

222 }if–
nId
==9 && 
	`sqlôe3SåNICmp
(
zSql
, "temporary", 9)==0 ){

223 
tokí
 = 
tkTEMP
;

225 
tokí
 = 
tkOTHER
;

230 if–
nId
==3 && 
	`sqlôe3SåNICmp
(
zSql
, "end", 3)==0 ){

231 
tokí
 = 
tkEND
;

233 #i‚de‡
SQLITE_OMIT_EXPLAIN


234 if–
nId
==7 && 
	`sqlôe3SåNICmp
(
zSql
, "explain", 7)==0 ){

235 
tokí
 = 
tkEXPLAIN
;

239 
tokí
 = 
tkOTHER
;

244 
tokí
 = 
tkOTHER
;

249 
zSql
 +
nId
-1;

252 
tokí
 = 
tkOTHER
;

257 
°©e
 = 
å™s
[°©e][
tokí
];

258 
zSql
++;

260  
°©e
==1;

261 
	}
}

263 #i‚de‡
SQLITE_OMIT_UTF16


269 
	$sqlôe3_com∂ëe16
(c⁄° *
zSql
){

270 
sqlôe3_vÆue
 *
pVÆ
;

271 c⁄° *
zSql8
;

272 
rc
;

274 #i‚de‡
SQLITE_OMIT_AUTOINIT


275 
rc
 = 
	`sqlôe3_öôülize
();

276 if–
rc
 ) Ñc;

278 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

279 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zSql
, 
SQLITE_UTF16NATIVE
, 
SQLITE_STATIC
);

280 
zSql8
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

281 if–
zSql8
 ){

282 
rc
 = 
	`sqlôe3_com∂ëe
(
zSql8
);

284 
rc
 = 
SQLITE_NOMEM_BKPT
;

286 
	`sqlôe3VÆueFªe
(
pVÆ
);

287  
rc
 & 0xff;

288 
	}
}

	@ctime.c

17 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


19 
	~"sqlôeI¡.h
"

29 c⁄° * c⁄° 
	gazCompûeO±
[] = {

33 
	#CTIMEOPT_VAL_
(
›t
Ë#›t

	)

34 
	#CTIMEOPT_VAL
(
›t
Ë
	`CTIMEOPT_VAL_
(›t)

	)

36 #i‡
SQLITE_32BIT_ROWID


39 #i‡
SQLITE_4_BYTE_ALIGNED_MALLOC


42 #i‡
SQLITE_CASE_SENSITIVE_LIKE


45 #i‡
SQLITE_CHECK_PAGES


48 #i‡
deföed
(
__˛™g__
Ë&& deföed(
__˛™g_maj‹__
)

49 "COMPILER=˛™g-" 
CTIMEOPT_VAL
(
__˛™g_maj‹__
) "."

50 
CTIMEOPT_VAL
(
__˛™g_mö‹__
) "."

51 
CTIMEOPT_VAL
(
__˛™g_∑tchÀvñ__
),

52 #ñi‡
deföed
(
_MSC_VER
)

53 "COMPILER=msvc-" 
CTIMEOPT_VAL
(
_MSC_VER
),

54 #ñi‡
deföed
(
__GNUC__
Ë&& deföed(
__VERSION__
)

55 "COMPILER=gcc-" 
__VERSION__
,

57 #i‡
SQLITE_COVERAGE_TEST


60 #i‡
SQLITE_DEBUG


63 #i‡
SQLITE_DEFAULT_LOCKING_MODE


64 "DEFAULT_LOCKING_MODE=" 
CTIMEOPT_VAL
(
SQLITE_DEFAULT_LOCKING_MODE
),

66 #i‡
deföed
(
SQLITE_DEFAULT_MMAP_SIZE
Ë&& !deföed(
SQLITE_DEFAULT_MMAP_SIZE_xc
)

67 "DEFAULT_MMAP_SIZE=" 
CTIMEOPT_VAL
(
SQLITE_DEFAULT_MMAP_SIZE
),

69 #i‡
SQLITE_DISABLE_DIRSYNC


72 #i‡
SQLITE_DISABLE_LFS


75 #i‡
SQLITE_ENABLE_8_3_NAMES


76 "ENABLE_8_3_NAMES=" 
CTIMEOPT_VAL
(
SQLITE_ENABLE_8_3_NAMES
),

78 #i‡
SQLITE_ENABLE_API_ARMOR


81 #i‡
SQLITE_ENABLE_ATOMIC_WRITE


84 #i‡
SQLITE_ENABLE_CEROD


87 #i‡
SQLITE_ENABLE_COLUMN_METADATA


90 #i‡
SQLITE_ENABLE_DBSTAT_VTAB


93 #i‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


96 #i‡
SQLITE_ENABLE_FTS1


99 #i‡
SQLITE_ENABLE_FTS2


102 #i‡
SQLITE_ENABLE_FTS3


105 #i‡
SQLITE_ENABLE_FTS3_PARENTHESIS


108 #i‡
SQLITE_ENABLE_FTS4


111 #i‡
SQLITE_ENABLE_FTS5


114 #i‡
SQLITE_ENABLE_ICU


117 #i‡
SQLITE_ENABLE_IOTRACE


120 #i‡
SQLITE_ENABLE_JSON1


123 #i‡
SQLITE_ENABLE_LOAD_EXTENSION


126 #i‡
SQLITE_ENABLE_LOCKING_STYLE


127 "ENABLE_LOCKING_STYLE=" 
CTIMEOPT_VAL
(
SQLITE_ENABLE_LOCKING_STYLE
),

129 #i‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


132 #i‡
SQLITE_ENABLE_MEMSYS3


135 #i‡
SQLITE_ENABLE_MEMSYS5


138 #i‡
SQLITE_ENABLE_OVERSIZE_CELL_CHECK


141 #i‡
SQLITE_ENABLE_RTREE


144 #i‡
deföed
(
SQLITE_ENABLE_STAT4
)

146 #ñi‡
deföed
(
SQLITE_ENABLE_STAT3
)

149 #i‡
SQLITE_ENABLE_UNLOCK_NOTIFY


152 #i‡
SQLITE_ENABLE_UPDATE_DELETE_LIMIT


155 #i‡
SQLITE_HAS_CODEC


158 #i‡
HAVE_ISNAN
 || 
SQLITE_HAVE_ISNAN


161 #i‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


164 #i‡
SQLITE_IGNORE_AFP_LOCK_ERRORS


167 #i‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


170 #ifde‡
SQLITE_INT64_TYPE


173 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


176 #i‡
SQLITE_LOCK_TRACE


179 #i‡
deföed
(
SQLITE_MAX_MMAP_SIZE
Ë&& !deföed(
SQLITE_MAX_MMAP_SIZE_xc
)

180 "MAX_MMAP_SIZE=" 
CTIMEOPT_VAL
(
SQLITE_MAX_MMAP_SIZE
),

182 #ifde‡
SQLITE_MAX_SCHEMA_RETRY


183 "MAX_SCHEMA_RETRY=" 
CTIMEOPT_VAL
(
SQLITE_MAX_SCHEMA_RETRY
),

185 #i‡
SQLITE_MEMDEBUG


188 #i‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


191 #i‡
SQLITE_NO_SYNC


194 #i‡
SQLITE_OMIT_ALTERTABLE


197 #i‡
SQLITE_OMIT_ANALYZE


200 #i‡
SQLITE_OMIT_ATTACH


203 #i‡
SQLITE_OMIT_AUTHORIZATION


206 #i‡
SQLITE_OMIT_AUTOINCREMENT


209 #i‡
SQLITE_OMIT_AUTOINIT


212 #i‡
SQLITE_OMIT_AUTOMATIC_INDEX


215 #i‡
SQLITE_OMIT_AUTORESET


218 #i‡
SQLITE_OMIT_AUTOVACUUM


221 #i‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


224 #i‡
SQLITE_OMIT_BLOB_LITERAL


227 #i‡
SQLITE_OMIT_BTREECOUNT


230 #i‡
SQLITE_OMIT_BUILTIN_TEST


233 #i‡
SQLITE_OMIT_CAST


236 #i‡
SQLITE_OMIT_CHECK


239 #i‡
SQLITE_OMIT_COMPLETE


242 #i‡
SQLITE_OMIT_COMPOUND_SELECT


245 #i‡
SQLITE_OMIT_CTE


248 #i‡
SQLITE_OMIT_DATETIME_FUNCS


251 #i‡
SQLITE_OMIT_DECLTYPE


254 #i‡
SQLITE_OMIT_DEPRECATED


257 #i‡
SQLITE_OMIT_DISKIO


260 #i‡
SQLITE_OMIT_EXPLAIN


263 #i‡
SQLITE_OMIT_FLAG_PRAGMAS


266 #i‡
SQLITE_OMIT_FLOATING_POINT


269 #i‡
SQLITE_OMIT_FOREIGN_KEY


272 #i‡
SQLITE_OMIT_GET_TABLE


275 #i‡
SQLITE_OMIT_INCRBLOB


278 #i‡
SQLITE_OMIT_INTEGRITY_CHECK


281 #i‡
SQLITE_OMIT_LIKE_OPTIMIZATION


284 #i‡
SQLITE_OMIT_LOAD_EXTENSION


287 #i‡
SQLITE_OMIT_LOCALTIME


290 #i‡
SQLITE_OMIT_LOOKASIDE


293 #i‡
SQLITE_OMIT_MEMORYDB


296 #i‡
SQLITE_OMIT_OR_OPTIMIZATION


299 #i‡
SQLITE_OMIT_PAGER_PRAGMAS


302 #i‡
SQLITE_OMIT_PRAGMA


305 #i‡
SQLITE_OMIT_PROGRESS_CALLBACK


308 #i‡
SQLITE_OMIT_QUICKBALANCE


311 #i‡
SQLITE_OMIT_REINDEX


314 #i‡
SQLITE_OMIT_SCHEMA_PRAGMAS


317 #i‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


320 #i‡
SQLITE_OMIT_SHARED_CACHE


323 #i‡
SQLITE_OMIT_SUBQUERY


326 #i‡
SQLITE_OMIT_TCL_VARIABLE


329 #i‡
SQLITE_OMIT_TEMPDB


332 #i‡
SQLITE_OMIT_TRACE


335 #i‡
SQLITE_OMIT_TRIGGER


338 #i‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


341 #i‡
SQLITE_OMIT_UTF16


344 #i‡
SQLITE_OMIT_VACUUM


347 #i‡
SQLITE_OMIT_VIEW


350 #i‡
SQLITE_OMIT_VIRTUALTABLE


353 #i‡
SQLITE_OMIT_WAL


356 #i‡
SQLITE_OMIT_WSD


359 #i‡
SQLITE_OMIT_XFER_OPT


362 #i‡
SQLITE_PERFORMANCE_TRACE


365 #i‡
SQLITE_PROXY_DEBUG


368 #i‡
SQLITE_RTREE_INT_ONLY


371 #i‡
SQLITE_SECURE_DELETE


374 #i‡
SQLITE_SMALL_STACK


377 #i‡
SQLITE_SOUNDEX


380 #i‡
SQLITE_SYSTEM_MALLOC


383 #i‡
SQLITE_TCL


386 #i‡
deföed
(
SQLITE_TEMP_STORE
Ë&& !deföed(
SQLITE_TEMP_STORE_xc
)

387 "TEMP_STORE=" 
CTIMEOPT_VAL
(
SQLITE_TEMP_STORE
),

389 #i‡
SQLITE_TEST


392 #i‡
deföed
(
SQLITE_THREADSAFE
)

393 "THREADSAFE=" 
CTIMEOPT_VAL
(
SQLITE_THREADSAFE
),

395 #i‡
SQLITE_USE_ALLOCA


398 #i‡
SQLITE_USER_AUTHENTICATION


401 #i‡
SQLITE_WIN32_MALLOC


404 #i‡
SQLITE_ZERO_MALLOC


416 
	$sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
){

417 
i
, 
n
;

419 #i‡
SQLITE_ENABLE_API_ARMOR


420 if–
zO±Name
==0 ){

421 ()
SQLITE_MISUSE_BKPT
;

425 if–
	`sqlôe3SåNICmp
(
zO±Name
, "SQLITE_", 7)==0 ) zOptName += 7;

426 
n
 = 
	`sqlôe3SåÀn30
(
zO±Name
);

430 
i
=0; i<
	`AºaySize
(
azCompûeO±
); i++){

431 if–
	`sqlôe3SåNICmp
(
zO±Name
, 
azCompûeO±
[
i
], 
n
)==0

432 && 
	`sqlôe3IsIdCh¨
(()
azCompûeO±
[
i
][
n
])==0

438 
	}
}

444 c⁄° *
	$sqlôe3_compûe›ti⁄_gë
(
N
){

445 if–
N
>=0 && N<
	`AºaySize
(
azCompûeO±
) ){

446  
azCompûeO±
[
N
];

449 
	}
}

	@date.c

46 
	~"sqlôeI¡.h
"

47 
	~<°dlib.h
>

48 
	~<as£π.h
>

49 
	~<time.h
>

51 #i‚de‡
SQLITE_OMIT_DATETIME_FUNCS


58 #i‡!
deföed
(
SQLITE_OMIT_LOCALTIME
Ë&& deföed(
_WIN32_WCE
) && \

59 (!
deföed
(
SQLITE_MSVC_LOCALTIME_API
Ë|| !
	gSQLITE_MSVC_LOCALTIME_API
)

60 
tm
 *
__cde˛
 
loˇ…ime
(c⁄° 
time_t
 *);

66 
D©eTime
 
	tD©eTime
;

67 
	sD©eTime
 {

68 
sqlôe3_öt64
 
	miJD
;

69 
	mY
, 
	mM
, 
	mD
;

70 
	mh
, 
	mm
;

71 
	mtz
;

72 
	ms
;

73 
	mvÆidYMD
;

74 
	mvÆidHMS
;

75 
	mvÆidJD
;

76 
	mvÆidTZ
;

77 
	mtzSë
;

108 
	$gëDigôs
(c⁄° *
zD©e
, c⁄° *
zF‹m©
, ...){

111 c⁄° 
u16
 
aMx
[] = { 12, 14, 24, 31, 59, 9999 };

112 
va_li°
 
≠
;

113 
˙t
 = 0;

114 
√xtC
;

115 
	`va_°¨t
(
≠
, 
zF‹m©
);

117 
N
 = 
zF‹m©
[0] - '0';

118 
mö
 = 
zF‹m©
[1] - '0';

119 
vÆ
 = 0;

120 
u16
 
max
;

122 
	`as£π
–
zF‹m©
[2]>='a' && zFormat[2]<='f' );

123 
max
 = 
aMx
[
zF‹m©
[2] - 'a'];

124 
√xtC
 = 
zF‹m©
[3];

125 
vÆ
 = 0;

126  
N
-- ){

127 if–!
	`sqlôe3Isdigô
(*
zD©e
) ){

128 
íd_gëDigôs
;

130 
vÆ
 = vÆ*10 + *
zD©e
 - '0';

131 
zD©e
++;

133 if–
vÆ
<()
mö
 || vÆ>()
max
 || (
√xtC
!=0 &&ÇextC!=*
zD©e
) ){

134 
íd_gëDigôs
;

136 *
	`va_¨g
(
≠
,*Ë
vÆ
;

137 
zD©e
++;

138 
˙t
++;

139 
zF‹m©
 += 4;

140 } 
√xtC
 );

141 
íd_gëDigôs
:

142 
	`va_íd
(
≠
);

143  
˙t
;

144 
	}
}

162 
	$∑r£Timez⁄e
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

163 
sgn
 = 0;

164 
nHr
, 
nMn
;

165 
c
;

166  
	`sqlôe3Is•a˚
(*
zD©e
) ){ zDate++; }

167 
p
->
tz
 = 0;

168 
c
 = *
zD©e
;

169 if–
c
=='-' ){

170 
sgn
 = -1;

171 }if–
c
=='+' ){

172 
sgn
 = +1;

173 }if–
c
=='Z' || c=='z' ){

174 
zD©e
++;

175 
zulu_time
;

177  
c
!=0;

179 
zD©e
++;

180 if–
	`gëDigôs
(
zD©e
, "20b:20e", &
nHr
, &
nMn
)!=2 ){

183 
zD©e
 += 5;

184 
p
->
tz
 = 
sgn
*(
nMn
 + 
nHr
*60);

185 
zulu_time
:

186  
	`sqlôe3Is•a˚
(*
zD©e
) ){ zDate++; }

187 
p
->
tzSë
 = 1;

188  *
zD©e
!=0;

189 
	}
}

198 
	$∑r£HhMmSs
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

199 
h
, 
m
, 
s
;

200 
ms
 = 0.0;

201 if–
	`gëDigôs
(
zD©e
, "20c:20e", &
h
, &
m
)!=2 ){

204 
zD©e
 += 5;

205 if–*
zD©e
==':' ){

206 
zD©e
++;

207 if–
	`gëDigôs
(
zD©e
, "20e", &
s
)!=1 ){

210 
zD©e
 += 2;

211 if–*
zD©e
=='.' && 
	`sqlôe3Isdigô
(zDate[1]) ){

212 
rSˇÀ
 = 1.0;

213 
zD©e
++;

214  
	`sqlôe3Isdigô
(*
zD©e
) ){

215 
ms
 = ms*10.0 + *
zD©e
 - '0';

216 
rSˇÀ
 *= 10.0;

217 
zD©e
++;

219 
ms
 /
rSˇÀ
;

222 
s
 = 0;

224 
p
->
vÆidJD
 = 0;

225 
p
->
vÆidHMS
 = 1;

226 
p
->
h
 = h;

227 
p
->
m
 = m;

228 
p
->
s
 = s + 
ms
;

229 if–
	`∑r£Timez⁄e
(
zD©e
, 
p
) )  1;

230 
p
->
vÆidTZ
 = (p->
tz
!=0)?1:0;

232 
	}
}

240 
	$compuãJD
(
D©eTime
 *
p
){

241 
Y
, 
M
, 
D
, 
A
, 
B
, 
X1
, 
X2
;

243 if–
p
->
vÆidJD
 ) ;

244 if–
p
->
vÆidYMD
 ){

245 
Y
 = 
p
->Y;

246 
M
 = 
p
->M;

247 
D
 = 
p
->D;

249 
Y
 = 2000;

250 
M
 = 1;

251 
D
 = 1;

253 if–
M
<=2 ){

254 
Y
--;

255 
M
 += 12;

257 
A
 = 
Y
/100;

258 
B
 = 2 - 
A
 + (A/4);

259 
X1
 = 36525*(
Y
+4716)/100;

260 
X2
 = 306001*(
M
+1)/10000;

261 
p
->
iJD
 = (
sqlôe3_öt64
)((
X1
 + 
X2
 + 
D
 + 
B
 - 1524.5 ) * 86400000);

262 
p
->
vÆidJD
 = 1;

263 if–
p
->
vÆidHMS
 ){

264 
p
->
iJD
 +p->
h
*3600000 +Ö->
m
*60000 + (
sqlôe3_öt64
)’->
s
*1000);

265 if–
p
->
vÆidTZ
 ){

266 
p
->
iJD
 -p->
tz
*60000;

267 
p
->
vÆidYMD
 = 0;

268 
p
->
vÆidHMS
 = 0;

269 
p
->
vÆidTZ
 = 0;

272 
	}
}

286 
	$∑r£YyyyMmDd
(c⁄° *
zD©e
, 
D©eTime
 *
p
){

287 
Y
, 
M
, 
D
, 
√g
;

289 if–
zD©e
[0]=='-' ){

290 
zD©e
++;

291 
√g
 = 1;

293 
√g
 = 0;

295 if–
	`gëDigôs
(
zD©e
, "40f-21a-21d", &
Y
, &
M
, &
D
)!=3 ){

298 
zD©e
 += 10;

299  
	`sqlôe3Is•a˚
(*
zD©e
Ë|| 'T'==*(
u8
*)zDate ){ zDate++; }

300 if–
	`∑r£HhMmSs
(
zD©e
, 
p
)==0 ){

302 }if–*
zD©e
==0 ){

303 
p
->
vÆidHMS
 = 0;

307 
p
->
vÆidJD
 = 0;

308 
p
->
vÆidYMD
 = 1;

309 
p
->
Y
 = 
√g
 ? -Y : Y;

310 
p
->
M
 = M;

311 
p
->
D
 = D;

312 if–
p
->
vÆidTZ
 ){

313 
	`compuãJD
(
p
);

316 
	}
}

323 
	$£tD©eTimeToCuºít
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
D©eTime
 *
p
){

324 
p
->
iJD
 = 
	`sqlôe3StmtCuºítTime
(
c⁄ãxt
);

325 if–
p
->
iJD
>0 ){

326 
p
->
vÆidJD
 = 1;

331 
	}
}

349 
	$∑r£D©eOrTime
(

350 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

351 c⁄° *
zD©e
,

352 
D©eTime
 *
p


354 
r
;

355 if–
	`∑r£YyyyMmDd
(
zD©e
,
p
)==0 ){

357 }if–
	`∑r£HhMmSs
(
zD©e
, 
p
)==0 ){

359 }if–
	`sqlôe3SåICmp
(
zD©e
,"now")==0){

360  
	`£tD©eTimeToCuºít
(
c⁄ãxt
, 
p
);

361 }if–
	`sqlôe3AtoF
(
zD©e
, &
r
, 
	`sqlôe3SåÀn30
(zD©e), 
SQLITE_UTF8
) ){

362 
p
->
iJD
 = (
sqlôe3_öt64
)(
r
*86400000.0 + 0.5);

363 
p
->
vÆidJD
 = 1;

367 
	}
}

372 
	$compuãYMD
(
D©eTime
 *
p
){

373 
Z
, 
A
, 
B
, 
C
, 
D
, 
E
, 
X1
;

374 if–
p
->
vÆidYMD
 ) ;

375 if–!
p
->
vÆidJD
 ){

376 
p
->
Y
 = 2000;

377 
p
->
M
 = 1;

378 
p
->
D
 = 1;

380 
Z
 = ()((
p
->
iJD
 + 43200000)/86400000);

381 
A
 = ()((
Z
 - 1867216.25)/36524.25);

382 
A
 = 
Z
 + 1 + A - (A/4);

383 
B
 = 
A
 + 1524;

384 
C
 = ()((
B
 - 122.1)/365.25);

385 
D
 = (36525*(
C
&32767))/100;

386 
E
 = ()((
B
-
D
)/30.6001);

387 
X1
 = ()(30.6001*
E
);

388 
p
->
D
 = 
B
 - D - 
X1
;

389 
p
->
M
 = 
E
<14 ? E-1 : E-13;

390 
p
->
Y
 =Ö->
M
>2 ? 
C
 - 4716 : C - 4715;

392 
p
->
vÆidYMD
 = 1;

393 
	}
}

398 
	$compuãHMS
(
D©eTime
 *
p
){

399 
s
;

400 if–
p
->
vÆidHMS
 ) ;

401 
	`compuãJD
(
p
);

402 
s
 = ()((
p
->
iJD
 + 43200000) % 86400000);

403 
p
->
s
 = s/1000.0;

404 
s
 = ()
p
->s;

405 
p
->
s
 -= s;

406 
p
->
h
 = 
s
/3600;

407 
s
 -
p
->
h
*3600;

408 
p
->
m
 = 
s
/60;

409 
p
->
s
 +†-Ö->
m
*60;

410 
p
->
vÆidHMS
 = 1;

411 
	}
}

416 
	$compuãYMD_HMS
(
D©eTime
 *
p
){

417 
	`compuãYMD
(
p
);

418 
	`compuãHMS
(
p
);

419 
	}
}

424 
	$˛órYMD_HMS_TZ
(
D©eTime
 *
p
){

425 
p
->
vÆidYMD
 = 0;

426 
p
->
vÆidHMS
 = 0;

427 
p
->
vÆidTZ
 = 0;

428 
	}
}

430 #i‚de‡
SQLITE_OMIT_LOCALTIME


443 #i‡!
HAVE_LOCALTIME_R
 && !
HAVE_LOCALTIME_S
 \

444 && 
deföed
(
_MSC_VER
Ë&& 
	$deföed
(
_CRT_INSECURE_DEPRECATE
)

445 #unde‡
HAVE_LOCALTIME_S


446 
	#HAVE_LOCALTIME_S
 1

	)

462 
	$osLoˇ…ime
(
time_t
 *
t
, 
tm
 *
pTm
){

463 
rc
;

464 #i‡!
HAVE_LOCALTIME_R
 && !
HAVE_LOCALTIME_S


465 
tm
 *
pX
;

466 #i‡
SQLITE_THREADSAFE
>0

467 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

469 
	`sqlôe3_muãx_íãr
(
muãx
);

470 
pX
 = 
	`loˇ…ime
(
t
);

471 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


472 if–
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 ) 
pX
 = 0;

474 if–
pX
 ) *
pTm
 = *pX;

475 
	`sqlôe3_muãx_Àave
(
muãx
);

476 
rc
 = 
pX
==0;

478 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


479 if–
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 )  1;

481 #i‡
HAVE_LOCALTIME_R


482 
rc
 = 
	`loˇ…ime_r
(
t
, 
pTm
)==0;

484 
rc
 = 
	`loˇ…ime_s
(
pTm
, 
t
);

487  
rc
;

488 
	}
}

492 #i‚de‡
SQLITE_OMIT_LOCALTIME


501 
sqlôe3_öt64
 
	$loˇ…imeOff£t
(

502 
D©eTime
 *
p
,

503 
sqlôe3_c⁄ãxt
 *
pCtx
,

504 *
pRc


506 
D©eTime
 
x
, 
y
;

507 
time_t
 
t
;

508 
tm
 
sLoˇl
;

511 
	`mem£t
(&
sLoˇl
, 0, (sLocal));

513 
x
 = *
p
;

514 
	`compuãYMD_HMS
(&
x
);

515 if–
x
.
Y
<1971 || x.Y>=2038 ){

521 
x
.
Y
 = 2000;

522 
x
.
M
 = 1;

523 
x
.
D
 = 1;

524 
x
.
h
 = 0;

525 
x
.
m
 = 0;

526 
x
.
s
 = 0.0;

528 
s
 = ()(
x
.s + 0.5);

529 
x
.
s
 = s;

531 
x
.
tz
 = 0;

532 
x
.
vÆidJD
 = 0;

533 
	`compuãJD
(&
x
);

534 
t
 = (
time_t
)(
x
.
iJD
/1000 - 21086676*(
i64
)10000);

535 if–
	`osLoˇ…ime
(&
t
, &
sLoˇl
) ){

536 
	`sqlôe3_ªsu…_îr‹
(
pCtx
, "localÅime unavailable", -1);

537 *
pRc
 = 
SQLITE_ERROR
;

540 
y
.
Y
 = 
sLoˇl
.
tm_yór
 + 1900;

541 
y
.
M
 = 
sLoˇl
.
tm_m⁄
 + 1;

542 
y
.
D
 = 
sLoˇl
.
tm_mday
;

543 
y
.
h
 = 
sLoˇl
.
tm_hour
;

544 
y
.
m
 = 
sLoˇl
.
tm_mö
;

545 
y
.
s
 = 
sLoˇl
.
tm_£c
;

546 
y
.
vÆidYMD
 = 1;

547 
y
.
vÆidHMS
 = 1;

548 
y
.
vÆidJD
 = 0;

549 
y
.
vÆidTZ
 = 0;

550 
	`compuãJD
(&
y
);

551 *
pRc
 = 
SQLITE_OK
;

552  
y
.
iJD
 - 
x
.iJD;

553 
	}
}

580 
	$∑r£Modifõr
(
sqlôe3_c⁄ãxt
 *
pCtx
, c⁄° *
zMod
, 
D©eTime
 *
p
){

581 
rc
 = 1;

582 
n
;

583 
r
;

584 *
z
, 
zBuf
[30];

585 
z
 = 
zBuf
;

586 
n
=0;Ç<
	`AºaySize
(
zBuf
)-1 && 
zMod
[n];Ç++){

587 
z
[
n
] = ()
sqlôe3UµîToLowî
[(
u8
)
zMod
[n]];

589 
z
[
n
] = 0;

590  
z
[0] ){

591 #i‚de‡
SQLITE_OMIT_LOCALTIME


598 if–
	`°rcmp
(
z
, "localtime")==0 ){

599 
	`compuãJD
(
p
);

600 
p
->
iJD
 +
	`loˇ…imeOff£t
’, 
pCtx
, &
rc
);

601 
	`˛órYMD_HMS_TZ
(
p
);

613 if–
	`°rcmp
(
z
, "unixïoch")==0 && 
p
->
vÆidJD
 ){

614 
p
->
iJD
 = (p->iJD + 43200)/86400 + 21086676*(
i64
)10000000;

615 
	`˛órYMD_HMS_TZ
(
p
);

616 
rc
 = 0;

618 #i‚de‡
SQLITE_OMIT_LOCALTIME


619 if–
	`°rcmp
(
z
, "utc")==0 ){

620 if–
p
->
tzSë
==0 ){

621 
sqlôe3_öt64
 
c1
;

622 
	`compuãJD
(
p
);

623 
c1
 = 
	`loˇ…imeOff£t
(
p
, 
pCtx
, &
rc
);

624 if–
rc
==
SQLITE_OK
 ){

625 
p
->
iJD
 -
c1
;

626 
	`˛órYMD_HMS_TZ
(
p
);

627 
p
->
iJD
 +
c1
 - 
	`loˇ…imeOff£t
’, 
pCtx
, &
rc
);

629 
p
->
tzSë
 = 1;

631 
rc
 = 
SQLITE_OK
;

645 if–
	`°∫cmp
(
z
, "weekday ", 8)==0

646 && 
	`sqlôe3AtoF
(&
z
[8], &
r
, 
	`sqlôe3SåÀn30
(&z[8]), 
SQLITE_UTF8
)

647 && (
n
=()
r
)==r &&Ç>=0 &&Ñ<7 ){

648 
sqlôe3_öt64
 
Z
;

649 
	`compuãYMD_HMS
(
p
);

650 
p
->
vÆidTZ
 = 0;

651 
p
->
vÆidJD
 = 0;

652 
	`compuãJD
(
p
);

653 
Z
 = ((
p
->
iJD
 + 129600000)/86400000) % 7;

654 if–
Z
>
n
 ) Z -= 7;

655 
p
->
iJD
 +(
n
 - 
Z
)*86400000;

656 
	`˛órYMD_HMS_TZ
(
p
);

657 
rc
 = 0;

668 if–
	`°∫cmp
(
z
, "start of ", 9)!=0 ) ;

669 
z
 += 9;

670 
	`compuãYMD
(
p
);

671 
p
->
vÆidHMS
 = 1;

672 
p
->
h
 =Ö->
m
 = 0;

673 
p
->
s
 = 0.0;

674 
p
->
vÆidTZ
 = 0;

675 
p
->
vÆidJD
 = 0;

676 if–
	`°rcmp
(
z
,"month")==0 ){

677 
p
->
D
 = 1;

678 
rc
 = 0;

679 }if–
	`°rcmp
(
z
,"year")==0 ){

680 
	`compuãYMD
(
p
);

681 
p
->
M
 = 1;

682 
p
->
D
 = 1;

683 
rc
 = 0;

684 }if–
	`°rcmp
(
z
,"day")==0 ){

685 
rc
 = 0;

701 
rRoundî
;

702 
n
=1; 
z
[n] && z[n]!=':' && !
	`sqlôe3Is•a˚
(z[n]);Ç++){}

703 if–!
	`sqlôe3AtoF
(
z
, &
r
, 
n
, 
SQLITE_UTF8
) ){

704 
rc
 = 1;

707 if–
z
[
n
]==':' ){

713 c⁄° *
z2
 = 
z
;

714 
D©eTime
 
tx
;

715 
sqlôe3_öt64
 
day
;

716 if–!
	`sqlôe3Isdigô
(*
z2
) ) z2++;

717 
	`mem£t
(&
tx
, 0, (tx));

718 if–
	`∑r£HhMmSs
(
z2
, &
tx
) ) ;

719 
	`compuãJD
(&
tx
);

720 
tx
.
iJD
 -= 43200000;

721 
day
 = 
tx
.
iJD
/86400000;

722 
tx
.
iJD
 -
day
*86400000;

723 if–
z
[0]=='-' ) 
tx
.
iJD
 = -tx.iJD;

724 
	`compuãJD
(
p
);

725 
	`˛órYMD_HMS_TZ
(
p
);

726 
p
->
iJD
 +
tx
.iJD;

727 
rc
 = 0;

730 
z
 +
n
;

731  
	`sqlôe3Is•a˚
(*
z
) ) z++;

732 
n
 = 
	`sqlôe3SåÀn30
(
z
);

733 if–
n
>10 ||Ç<3 ) ;

734 if–
z
[
n
-1]=='s' ){ z[n-1] = 0;Ç--; }

735 
	`compuãJD
(
p
);

736 
rc
 = 0;

737 
rRoundî
 = 
r
<0 ? -0.5 : +0.5;

738 if–
n
==3 && 
	`°rcmp
(
z
,"day")==0 ){

739 
p
->
iJD
 +(
sqlôe3_öt64
)(
r
*86400000.0 + 
rRoundî
);

740 }if–
n
==4 && 
	`°rcmp
(
z
,"hour")==0 ){

741 
p
->
iJD
 +(
sqlôe3_öt64
)(
r
*(86400000.0/24.0Ë+ 
rRoundî
);

742 }if–
n
==6 && 
	`°rcmp
(
z
,"minute")==0 ){

743 
p
->
iJD
 +(
sqlôe3_öt64
)(
r
*(86400000.0/(24.0*60.0)Ë+ 
rRoundî
);

744 }if–
n
==6 && 
	`°rcmp
(
z
,"second")==0 ){

745 
p
->
iJD
 +(
sqlôe3_öt64
)(
r
*(86400000.0/(24.0*60.0*60.0)Ë+ 
rRoundî
);

746 }if–
n
==5 && 
	`°rcmp
(
z
,"month")==0 ){

747 
x
, 
y
;

748 
	`compuãYMD_HMS
(
p
);

749 
p
->
M
 +()
r
;

750 
x
 = 
p
->
M
>0 ? (p->M-1)/12 : (p->M-12)/12;

751 
p
->
Y
 +
x
;

752 
p
->
M
 -
x
*12;

753 
p
->
vÆidJD
 = 0;

754 
	`compuãJD
(
p
);

755 
y
 = ()
r
;

756 if–
y
!=
r
 ){

757 
p
->
iJD
 +(
sqlôe3_öt64
)((
r
 - 
y
)*30.0*86400000.0 + 
rRoundî
);

759 }if–
n
==4 && 
	`°rcmp
(
z
,"year")==0 ){

760 
y
 = ()
r
;

761 
	`compuãYMD_HMS
(
p
);

762 
p
->
Y
 +
y
;

763 
p
->
vÆidJD
 = 0;

764 
	`compuãJD
(
p
);

765 if–
y
!=
r
 ){

766 
p
->
iJD
 +(
sqlôe3_öt64
)((
r
 - 
y
)*365.0*86400000.0 + 
rRoundî
);

769 
rc
 = 1;

771 
	`˛órYMD_HMS_TZ
(
p
);

778  
rc
;

779 
	}
}

790 
	$isD©e
(

791 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

792 
¨gc
,

793 
sqlôe3_vÆue
 **
¨gv
,

794 
D©eTime
 *
p


796 
i
;

797 c⁄° *
z
;

798 
eTy≥
;

799 
	`mem£t
(
p
, 0, (*p));

800 if–
¨gc
==0 ){

801  
	`£tD©eTimeToCuºít
(
c⁄ãxt
, 
p
);

803 if–(
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]))==
SQLITE_FLOAT


804 || 
eTy≥
==
SQLITE_INTEGER
 ){

805 
p
->
iJD
 = (
sqlôe3_öt64
)(
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0])*86400000.0 + 0.5);

806 
p
->
vÆidJD
 = 1;

808 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

809 if–!
z
 || 
	`∑r£D©eOrTime
(
c⁄ãxt
, (*)z, 
p
) ){

813 
i
=1; i<
¨gc
; i++){

814 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

815 if–
z
==0 || 
	`∑r£Modifõr
(
c⁄ãxt
, (*)z, 
p
) )  1;

818 
	}
}

831 
	$julündayFunc
(

832 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

833 
¨gc
,

834 
sqlôe3_vÆue
 **
¨gv


836 
D©eTime
 
x
;

837 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

838 
	`compuãJD
(&
x
);

839 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
x
.
iJD
/86400000.0);

841 
	}
}

848 
	$d©ëimeFunc
(

849 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

850 
¨gc
,

851 
sqlôe3_vÆue
 **
¨gv


853 
D©eTime
 
x
;

854 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

855 
zBuf
[100];

856 
	`compuãYMD_HMS
(&
x
);

857 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%04d-%02d-%02d %02d:%02d:%02d",

858 
x
.
Y
, x.
M
, x.
D
, x.
h
, x.
m
, ()(x.
s
));

859 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

861 
	}
}

868 
	$timeFunc
(

869 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

870 
¨gc
,

871 
sqlôe3_vÆue
 **
¨gv


873 
D©eTime
 
x
;

874 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

875 
zBuf
[100];

876 
	`compuãHMS
(&
x
);

877 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%02d:%02d:%02d", 
x
.
h
, x.
m
, ()x.
s
);

878 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

880 
	}
}

887 
	$d©eFunc
(

888 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

889 
¨gc
,

890 
sqlôe3_vÆue
 **
¨gv


892 
D©eTime
 
x
;

893 if–
	`isD©e
(
c⁄ãxt
, 
¨gc
, 
¨gv
, &
x
)==0 ){

894 
zBuf
[100];

895 
	`compuãYMD
(&
x
);

896 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%04d-%02d-%02d", 
x
.
Y
, x.
M
, x.
D
);

897 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

899 
	}
}

920 
	$°r·imeFunc
(

921 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

922 
¨gc
,

923 
sqlôe3_vÆue
 **
¨gv


925 
D©eTime
 
x
;

926 
u64
 
n
;

927 
size_t
 
i
,
j
;

928 *
z
;

929 
sqlôe3
 *
db
;

930 c⁄° *
zFmt
;

931 
zBuf
[100];

932 if–
¨gc
==0 ) ;

933 
zFmt
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

934 if–
zFmt
==0 || 
	`isD©e
(
c⁄ãxt
, 
¨gc
-1, 
¨gv
+1, &
x
) ) ;

935 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

936 
i
=0, 
n
=1; 
zFmt
[i]; i++,Ç++){

937 if–
zFmt
[
i
]=='%' ){

938  
zFmt
[
i
+1] ){

945 
n
++;

951 
n
 += 8;

954 
n
 += 3;

957 
n
 += 8;

961 
n
 += 50;

966 
i
++;

969 
	`ã°ˇ£
–
n
==(
zBuf
)-1 );

970 
	`ã°ˇ£
–
n
==(
zBuf
) );

971 
	`ã°ˇ£
–
n
==(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]+1 );

972 
	`ã°ˇ£
–
n
==(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

973 if–
n
<(
zBuf
) ){

974 
z
 = 
zBuf
;

975 }if–
n
>(
u64
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

976 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

979 
z
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()
n
);

980 if–
z
==0 ){

981 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

985 
	`compuãJD
(&
x
);

986 
	`compuãYMD_HMS
(&
x
);

987 
i
=
j
=0; 
zFmt
[i]; i++){

988 if–
zFmt
[
i
]!='%' ){

989 
z
[
j
++] = 
zFmt
[
i
];

991 
i
++;

992  
zFmt
[
i
] ){

993 'd': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
D
); j+=2; ;

995 
s
 = 
x
.s;

996 if–
s
>59.999 ) s = 59.999;

997 
	`sqlôe3_¢¥ötf
(7, &
z
[
j
],"%06.3f", 
s
);

998 
j
 +
	`sqlôe3SåÀn30
(&
z
[j]);

1001 'H': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
h
); j+=2; ;

1004 
nDay
;

1005 
D©eTime
 
y
 = 
x
;

1006 
y
.
vÆidJD
 = 0;

1007 
y
.
M
 = 1;

1008 
y
.
D
 = 1;

1009 
	`compuãJD
(&
y
);

1010 
nDay
 = ()((
x
.
iJD
-
y
.iJD+43200000)/86400000);

1011 if–
zFmt
[
i
]=='W' ){

1012 
wd
;

1013 
wd
 = ()(((
x
.
iJD
+43200000)/86400000)%7);

1014 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",(
nDay
+7-
wd
)/7);

1015 
j
 += 2;

1017 
	`sqlôe3_¢¥ötf
(4, &
z
[
j
],"%03d",
nDay
+1);

1018 
j
 += 3;

1023 
	`sqlôe3_¢¥ötf
(20, &
z
[
j
],"%.16g",
x
.
iJD
/86400000.0);

1024 
j
+=
	`sqlôe3SåÀn30
(&
z
[j]);

1027 'm': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
M
); j+=2; ;

1028 'M': 
	`sqlôe3_¢¥ötf
(3, &
z
[
j
],"%02d",
x
.
m
); j+=2; ;

1030 
	`sqlôe3_¢¥ötf
(30,&
z
[
j
],"%lld",

1031 (
i64
)(
x
.
iJD
/1000 - 21086676*(i64)10000));

1032 
j
 +
	`sqlôe3SåÀn30
(&
z
[j]);

1035 'S': 
	`sqlôe3_¢¥ötf
(3,&
z
[
j
],"%02d",()
x
.
s
); j+=2; ;

1037 
z
[
j
++] = ()(((
x
.
iJD
+129600000)/86400000) % 7) + '0';

1041 
	`sqlôe3_¢¥ötf
(5,&
z
[
j
],"%04d",
x
.
Y
); j+=
	`sqlôe3SåÀn30
(&z[j]);

1044 : 
z
[
j
++] = '%'; ;

1048 
z
[
j
] = 0;

1049 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, -1,

1050 
z
==
zBuf
 ? 
SQLITE_TRANSIENT
 : 
SQLITE_DYNAMIC
);

1051 
	}
}

1058 
	$˘imeFunc
(

1059 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1060 
NŸU£d
,

1061 
sqlôe3_vÆue
 **
NŸU£d2


1063 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1064 
	`timeFunc
(
c⁄ãxt
, 0, 0);

1065 
	}
}

1072 
	$cd©eFunc
(

1073 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1074 
NŸU£d
,

1075 
sqlôe3_vÆue
 **
NŸU£d2


1077 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1078 
	`d©eFunc
(
c⁄ãxt
, 0, 0);

1079 
	}
}

1086 
	$˘ime°ampFunc
(

1087 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1088 
NŸU£d
,

1089 
sqlôe3_vÆue
 **
NŸU£d2


1091 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

1092 
	`d©ëimeFunc
(
c⁄ãxt
, 0, 0);

1093 
	}
}

1096 #ifde‡
SQLITE_OMIT_DATETIME_FUNCS


1108 
	$cuºítTimeFunc
(

1109 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1110 
¨gc
,

1111 
sqlôe3_vÆue
 **
¨gv


1113 
time_t
 
t
;

1114 *
zF‹m©
 = (*)
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

1115 
sqlôe3_öt64
 
iT
;

1116 
tm
 *
pTm
;

1117 
tm
 
sNow
;

1118 
zBuf
[20];

1120 
	`UNUSED_PARAMETER
(
¨gc
);

1121 
	`UNUSED_PARAMETER
(
¨gv
);

1123 
iT
 = 
	`sqlôe3StmtCuºítTime
(
c⁄ãxt
);

1124 if–
iT
<=0 ) ;

1125 
t
 = 
iT
/1000 - 10000*(
sqlôe3_öt64
)21086676;

1126 #i‡
HAVE_GMTIME_R


1127 
pTm
 = 
	`gmtime_r
(&
t
, &
sNow
);

1129 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

1130 
pTm
 = 
	`gmtime
(&
t
);

1131 if–
pTm
 ) 
	`mem˝y
(&
sNow
,ÖTm, (sNow));

1132 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

1134 if–
pTm
 ){

1135 
	`°r·ime
(
zBuf
, 20, 
zF‹m©
, &
sNow
);

1136 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

1138 
	}
}

1146 
	$sqlôe3Regi°îD©eTimeFun˘i⁄s
(){

1147 
FuncDef
 
aD©eTimeFuncs
[] = {

1148 #i‚de‡
SQLITE_OMIT_DATETIME_FUNCS


1149 
	`DFUNCTION
(
julünday
, -1, 0, 0, 
julündayFunc
 ),

1150 
	`DFUNCTION
(
d©e
, -1, 0, 0, 
d©eFunc
 ),

1151 
	`DFUNCTION
(
time
, -1, 0, 0, 
timeFunc
 ),

1152 
	`DFUNCTION
(
d©ëime
, -1, 0, 0, 
d©ëimeFunc
 ),

1153 
	`DFUNCTION
(
°r·ime
, -1, 0, 0, 
°r·imeFunc
 ),

1154 
	`DFUNCTION
(
cuºít_time
, 0, 0, 0, 
˘imeFunc
 ),

1155 
	`DFUNCTION
(
cuºít_time°amp
, 0, 0, 0, 
˘ime°ampFunc
),

1156 
	`DFUNCTION
(
cuºít_d©e
, 0, 0, 0, 
cd©eFunc
 ),

1158 
	`STR_FUNCTION
(
cuºít_time
, 0, "%H:%M:%S", 0, 
cuºítTimeFunc
),

1159 
	`STR_FUNCTION
(
cuºít_d©e
, 0, "%Y-%m-%d", 0, 
cuºítTimeFunc
),

1160 
	`STR_FUNCTION
(
cuºít_time°amp
, 0, "%Y-%m-%d %H:%M:%S", 0, 
cuºítTimeFunc
),

1163 
	`sqlôe3In£πBuûtöFuncs
(
aD©eTimeFuncs
, 
	`AºaySize
(aDateTimeFuncs));

1164 
	}
}

	@dbstat.c

24 
	~"sqlôeI¡.h
"

25 #i‡(
deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
Ë|| deföed(
SQLITE_TEST
)) \

26 && !
	$deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

59 
	#VTAB_SCHEMA
 \

72 ");"

	)

75 
SètTabÀ
 
	tSètTabÀ
;

76 
SètCurs‹
 
	tSètCurs‹
;

77 
SètPage
 
	tSètPage
;

78 
SètCñl
 
	tSètCñl
;

80 
	sSètCñl
 {

81 
nLoˇl
;

82 
u32
 
iChûdPg
;

83 
nOvÊ
;

84 
u32
 *
aOvÊ
;

85 
nLa°OvÊ
;

86 
iOvÊ
;

89 
	sSètPage
 {

90 
u32
 
iPgno
;

91 
DbPage
 *
pPg
;

92 
iCñl
;

94 *
zP©h
;

97 
u8
 
Êags
;

98 
nCñl
;

99 
nUnu£d
;

100 
SètCñl
 *
aCñl
;

101 
u32
 
iRightChûdPg
;

102 
nMxPaylﬂd
;

105 
	sSètCurs‹
 {

106 
sqlôe3_vèb_curs‹
 
ba£
;

107 
sqlôe3_°mt
 *
pStmt
;

108 
isEof
;

109 
iDb
;

111 
SètPage
 
aPage
[32];

112 
iPage
;

115 *
zName
;

116 *
zP©h
;

117 
u32
 
iPagío
;

118 *
zPagëy≥
;

119 
nCñl
;

120 
nPaylﬂd
;

121 
nUnu£d
;

122 
nMxPaylﬂd
;

123 
i64
 
iOff£t
;

124 
szPage
;

127 
	sSètTabÀ
 {

128 
sqlôe3_vèb
 
ba£
;

129 
sqlôe3
 *
db
;

130 
iDb
;

133 #i‚de‡
gë2byã


134 
	#gë2byã
(
x
Ë((x)[0]<<8 | (x)[1])

	)

140 
	$°©C⁄√˘
(

141 
sqlôe3
 *
db
,

142 *
pAux
,

143 
¨gc
, c⁄° *c⁄°*
¨gv
,

144 
sqlôe3_vèb
 **
µVèb
,

145 **
pzEº


147 
SètTabÀ
 *
pTab
 = 0;

148 
rc
 = 
SQLITE_OK
;

149 
iDb
;

151 if–
¨gc
>=4 ){

152 
Tokí
 
nm
;

153 
	`sqlôe3TokíInô
(&
nm
, (*)
¨gv
[3]);

154 
iDb
 = 
	`sqlôe3FödDb
(
db
, &
nm
);

155 if–
iDb
<0 ){

156 *
pzEº
 = 
	`sqlôe3_m¥ötf
("nÿsuch d©aba£: %s", 
¨gv
[3]);

157  
SQLITE_ERROR
;

160 
iDb
 = 0;

162 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
VTAB_SCHEMA
);

163 if–
rc
==
SQLITE_OK
 ){

164 
pTab
 = (
SètTabÀ
 *)
	`sqlôe3_mÆloc64
((StatTable));

165 if–
pTab
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

168 
	`as£π
–
rc
==
SQLITE_OK
 || 
pTab
==0 );

169 if–
rc
==
SQLITE_OK
 ){

170 
	`mem£t
(
pTab
, 0, (
SètTabÀ
));

171 
pTab
->
db
 = db;

172 
pTab
->
iDb
 = iDb;

175 *
µVèb
 = (
sqlôe3_vèb
*)
pTab
;

176  
rc
;

177 
	}
}

182 
	$°©Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

183 
	`sqlôe3_‰ì
(
pVèb
);

184  
SQLITE_OK
;

185 
	}
}

194 
	$°©Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

195 
i
;

197 
pIdxInfo
->
e°im©edCo°
 = 1.0e6;

204 
i
=0; i<
pIdxInfo
->
nC⁄°øöt
; i++){

205 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
ußbÀ
==0 ) ;

206 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
›
!=
SQLITE_INDEX_CONSTRAINT_EQ
 ) ;

207 if–
pIdxInfo
->
aC⁄°øöt
[
i
].
iCﬁumn
!=10 ) ;

208 
pIdxInfo
->
idxNum
 = 1;

209 
pIdxInfo
->
e°im©edCo°
 = 1.0;

210 
pIdxInfo
->
aC⁄°øötUßge
[
i
].
¨gvIndex
 = 1;

211 
pIdxInfo
->
aC⁄°øötUßge
[
i
].
omô
 = 1;

220 if––
pIdxInfo
->
nOrdîBy
==1

221 && 
pIdxInfo
->
aOrdîBy
[0].
iCﬁumn
==0

222 && 
pIdxInfo
->
aOrdîBy
[0].
desc
==0

224 –
pIdxInfo
->
nOrdîBy
==2

225 && 
pIdxInfo
->
aOrdîBy
[0].
iCﬁumn
==0

226 && 
pIdxInfo
->
aOrdîBy
[0].
desc
==0

227 && 
pIdxInfo
->
aOrdîBy
[1].
iCﬁumn
==1

228 && 
pIdxInfo
->
aOrdîBy
[1].
desc
==0

231 
pIdxInfo
->
‹dîByC⁄sumed
 = 1;

234  
SQLITE_OK
;

235 
	}
}

240 
	$°©O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

241 
SètTabÀ
 *
pTab
 = (SètTabÀ *)
pVTab
;

242 
SètCurs‹
 *
pC§
;

244 
pC§
 = (
SètCurs‹
 *)
	`sqlôe3_mÆloc64
((StatCursor));

245 if–
pC§
==0 ){

246  
SQLITE_NOMEM_BKPT
;

248 
	`mem£t
(
pC§
, 0, (
SètCurs‹
));

249 
pC§
->
ba£
.
pVèb
 = 
pVTab
;

250 
pC§
->
iDb
 = 
pTab
->iDb;

253 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pC§
;

254  
SQLITE_OK
;

255 
	}
}

257 
	$°©CÀ¨Page
(
SètPage
 *
p
){

258 
i
;

259 if–
p
->
aCñl
 ){

260 
i
=0; i<
p
->
nCñl
; i++){

261 
	`sqlôe3_‰ì
(
p
->
aCñl
[
i
].
aOvÊ
);

263 
	`sqlôe3_‰ì
(
p
->
aCñl
);

265 
	`sqlôe3PagîUƒef
(
p
->
pPg
);

266 
	`sqlôe3_‰ì
(
p
->
zP©h
);

267 
	`mem£t
(
p
, 0, (
SètPage
));

268 
	}
}

270 
	$°©Re£tC§
(
SètCurs‹
 *
pC§
){

271 
i
;

272 
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

273 
i
=0; i<
	`AºaySize
(
pC§
->
aPage
); i++){

274 
	`°©CÀ¨Page
(&
pC§
->
aPage
[
i
]);

276 
pC§
->
iPage
 = 0;

277 
	`sqlôe3_‰ì
(
pC§
->
zP©h
);

278 
pC§
->
zP©h
 = 0;

279 
pC§
->
isEof
 = 0;

280 
	}
}

285 
	$°©Clo£
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

286 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

287 
	`°©Re£tC§
(
pC§
);

288 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

289 
	`sqlôe3_‰ì
(
pC§
);

290  
SQLITE_OK
;

291 
	}
}

293 
	$gëLoˇlPaylﬂd
(

294 
nUßbÀ
,

295 
u8
 
Êags
,

296 
nTŸÆ
,

297 *
≤Loˇl


299 
nLoˇl
;

300 
nMöLoˇl
;

301 
nMaxLoˇl
;

303 if–
Êags
==0x0D ){

304 
nMöLoˇl
 = (
nUßbÀ
 - 12) * 32 / 255 - 23;

305 
nMaxLoˇl
 = 
nUßbÀ
 - 35;

307 
nMöLoˇl
 = (
nUßbÀ
 - 12) * 32 / 255 - 23;

308 
nMaxLoˇl
 = (
nUßbÀ
 - 12) * 64 / 255 - 23;

311 
nLoˇl
 = 
nMöLoˇl
 + (
nTŸÆ
 -ÇMöLoˇlË% (
nUßbÀ
 - 4);

312 if–
nLoˇl
>
nMaxLoˇl
 )ÇLoˇ»
nMöLoˇl
;

313 *
≤Loˇl
 = 
nLoˇl
;

314 
	}
}

316 
	$°©DecodePage
(
Båì
 *
pBt
, 
SètPage
 *
p
){

317 
nUnu£d
;

318 
iOff
;

319 
nHdr
;

320 
isLóf
;

321 
szPage
;

323 
u8
 *
aD©a
 = 
	`sqlôe3PagîGëD©a
(
p
->
pPg
);

324 
u8
 *
aHdr
 = &
aD©a
[
p
->
iPgno
==1 ? 100 : 0];

326 
p
->
Êags
 = 
aHdr
[0];

327 
p
->
nCñl
 = 
	`gë2byã
(&
aHdr
[3]);

328 
p
->
nMxPaylﬂd
 = 0;

330 
isLóf
 = (
p
->
Êags
==0x0A ||Ö->flags==0x0D);

331 
nHdr
 = 12 - 
isLóf
*4 + (
p
->
iPgno
==1)*100;

333 
nUnu£d
 = 
	`gë2byã
(&
aHdr
[5]Ë- 
nHdr
 - 2*
p
->
nCñl
;

334 
nUnu£d
 +()
aHdr
[7];

335 
iOff
 = 
	`gë2byã
(&
aHdr
[1]);

336  
iOff
 ){

337 
nUnu£d
 +
	`gë2byã
(&
aD©a
[
iOff
+2]);

338 
iOff
 = 
	`gë2byã
(&
aD©a
[iOff]);

340 
p
->
nUnu£d
 =ÇUnused;

341 
p
->
iRightChûdPg
 = 
isLóf
 ? 0 : 
	`sqlôe3Gë4byã
(&
aHdr
[8]);

342 
szPage
 = 
	`sqlôe3BåìGëPageSize
(
pBt
);

344 if–
p
->
nCñl
 ){

345 
i
;

346 
nUßbÀ
;

348 
	`sqlôe3BåìE¡î
(
pBt
);

349 
nUßbÀ
 = 
szPage
 - 
	`sqlôe3BåìGëRe£rveNoMuãx
(
pBt
);

350 
	`sqlôe3BåìLóve
(
pBt
);

351 
p
->
aCñl
 = 
	`sqlôe3_mÆloc64
(’->
nCñl
+1Ë* (
SètCñl
));

352 if–
p
->
aCñl
==0 )  
SQLITE_NOMEM_BKPT
;

353 
	`mem£t
(
p
->
aCñl
, 0, (p->
nCñl
+1Ë* (
SètCñl
));

355 
i
=0; i<
p
->
nCñl
; i++){

356 
SètCñl
 *
pCñl
 = &
p
->
aCñl
[
i
];

358 
iOff
 = 
	`gë2byã
(&
aD©a
[
nHdr
+
i
*2]);

359 if–!
isLóf
 ){

360 
pCñl
->
iChûdPg
 = 
	`sqlôe3Gë4byã
(&
aD©a
[
iOff
]);

361 
iOff
 += 4;

363 if–
p
->
Êags
==0x05 ){

366 
u32
 
nPaylﬂd
;

367 
nLoˇl
;

368 
iOff
 +
	`gëV¨öt32
(&
aD©a
[iOff], 
nPaylﬂd
);

369 if–
p
->
Êags
==0x0D ){

370 
u64
 
dummy
;

371 
iOff
 +
	`sqlôe3GëV¨öt
(&
aD©a
[iOff], &
dummy
);

373 if–
nPaylﬂd
>(
u32
)
p
->
nMxPaylﬂd
 )Ö->nMxPayload =ÇPayload;

374 
	`gëLoˇlPaylﬂd
(
nUßbÀ
, 
p
->
Êags
, 
nPaylﬂd
, &
nLoˇl
);

375 
pCñl
->
nLoˇl
 =ÇLocal;

376 
	`as£π
–
nLoˇl
>=0 );

377 
	`as£π
–
nPaylﬂd
>=(
u32
)
nLoˇl
 );

378 
	`as£π
–
nLoˇl
<=(
nUßbÀ
-35) );

379 if–
nPaylﬂd
>(
u32
)
nLoˇl
 ){

380 
j
;

381 
nOvÊ
 = ((
nPaylﬂd
 - 
nLoˇl
Ë+ 
nUßbÀ
-4 - 1) / (nUsable - 4);

382 
pCñl
->
nLa°OvÊ
 = (
nPaylﬂd
-
nLoˇl
Ë- (
nOvÊ
-1Ë* (
nUßbÀ
-4);

383 
pCñl
->
nOvÊ
 =ÇOvfl;

384 
pCñl
->
aOvÊ
 = 
	`sqlôe3_mÆloc64
((
u32
)*
nOvÊ
);

385 if–
pCñl
->
aOvÊ
==0 )  
SQLITE_NOMEM_BKPT
;

386 
pCñl
->
aOvÊ
[0] = 
	`sqlôe3Gë4byã
(&
aD©a
[
iOff
+
nLoˇl
]);

387 
j
=1; j<
nOvÊ
; j++){

388 
rc
;

389 
u32
 
iPªv
 = 
pCñl
->
aOvÊ
[
j
-1];

390 
DbPage
 *
pPg
 = 0;

391 
rc
 = 
	`sqlôe3PagîGë
(
	`sqlôe3BåìPagî
(
pBt
), 
iPªv
, &
pPg
, 0);

392 if–
rc
!=
SQLITE_OK
 ){

393 
	`as£π
–
pPg
==0 );

394  
rc
;

396 
pCñl
->
aOvÊ
[
j
] = 
	`sqlôe3Gë4byã
(
	`sqlôe3PagîGëD©a
(
pPg
));

397 
	`sqlôe3PagîUƒef
(
pPg
);

404  
SQLITE_OK
;

405 
	}
}

411 
	$°©SizeAndOff£t
(
SètCurs‹
 *
pC§
){

412 
SètTabÀ
 *
pTab
 = (SètTabÀ *)((
sqlôe3_vèb_curs‹
 *)
pC§
)->
pVèb
;

413 
Båì
 *
pBt
 = 
pTab
->
db
->
aDb
[pTab->
iDb
].pBt;

414 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

415 
sqlôe3_fûe
 *
fd
;

416 
sqlôe3_öt64
 
x
[2];

419 
pC§
->
szPage
 = 
	`sqlôe3BåìGëPageSize
(
pBt
);

420 
pC§
->
iOff£t
 = (
i64
ÌC§->
szPage
 * (pC§->
iPagío
 - 1);

425 
fd
 = 
	`sqlôe3PagîFûe
(
pPagî
);

426 
x
[0] = 
pC§
->
iPagío
;

427 if–
fd
->
pMëhods
!=0 && 
	`sqlôe3OsFûeC⁄åﬁ
(fd, 230440, &
x
)==
SQLITE_OK
 ){

428 
pC§
->
iOff£t
 = 
x
[0];

429 
pC§
->
szPage
 = ()
x
[1];

431 
	}
}

436 
	$°©Next
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

437 
rc
;

438 
nPaylﬂd
;

439 *
z
;

440 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

441 
SètTabÀ
 *
pTab
 = (SètTabÀ *)
pCurs‹
->
pVèb
;

442 
Båì
 *
pBt
 = 
pTab
->
db
->
aDb
[
pC§
->
iDb
].pBt;

443 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

445 
	`sqlôe3_‰ì
(
pC§
->
zP©h
);

446 
pC§
->
zP©h
 = 0;

448 
°©NextRe°¨t
:

449 if–
pC§
->
aPage
[0].
pPg
==0 ){

450 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

451 if–
rc
==
SQLITE_ROW
 ){

452 
nPage
;

453 
u32
 
iRoŸ
 = (u32)
	`sqlôe3_cﬁumn_öt64
(
pC§
->
pStmt
, 1);

454 
	`sqlôe3PagîPagecou¡
(
pPagî
, &
nPage
);

455 if–
nPage
==0 ){

456 
pC§
->
isEof
 = 1;

457  
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

459 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
iRoŸ
, &
pC§
->
aPage
[0].
pPg
, 0);

460 
pC§
->
aPage
[0].
iPgno
 = 
iRoŸ
;

461 
pC§
->
aPage
[0].
iCñl
 = 0;

462 
pC§
->
aPage
[0].
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("/");

463 
pC§
->
iPage
 = 0;

464 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

466 
pC§
->
isEof
 = 1;

467  
	`sqlôe3_ª£t
(
pC§
->
pStmt
);

472 
SètPage
 *
p
 = &
pC§
->
aPage
[pC§->
iPage
];

474  
p
->
iCñl
<p->
nCñl
 ){

475 
SètCñl
 *
pCñl
 = &
p
->
aCñl
[p->
iCñl
];

476 if–
pCñl
->
iOvÊ
<pCñl->
nOvÊ
 ){

477 
nUßbÀ
;

478 
	`sqlôe3BåìE¡î
(
pBt
);

479 
nUßbÀ
 = 
	`sqlôe3BåìGëPageSize
(
pBt
) -

480 
	`sqlôe3BåìGëRe£rveNoMuãx
(
pBt
);

481 
	`sqlôe3BåìLóve
(
pBt
);

482 
pC§
->
zName
 = (*)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0);

483 
pC§
->
iPagío
 = 
pCñl
->
aOvÊ
[pCñl->
iOvÊ
];

484 
pC§
->
zPagëy≥
 = "overflow";

485 
pC§
->
nCñl
 = 0;

486 
pC§
->
nMxPaylﬂd
 = 0;

487 
pC§
->
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
(

488 "%s%.3x+%.6x", 
p
->
zP©h
,Ö->
iCñl
, 
pCñl
->
iOvÊ


490 if–
pCñl
->
iOvÊ
<pCñl->
nOvÊ
-1 ){

491 
pC§
->
nUnu£d
 = 0;

492 
pC§
->
nPaylﬂd
 = 
nUßbÀ
 - 4;

494 
pC§
->
nPaylﬂd
 = 
pCñl
->
nLa°OvÊ
;

495 
pC§
->
nUnu£d
 = 
nUßbÀ
 - 4 -ÖC§->
nPaylﬂd
;

497 
pCñl
->
iOvÊ
++;

498 
	`°©SizeAndOff£t
(
pC§
);

499  
z
==0 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_OK
;

501 if–
p
->
iRightChûdPg
 ) ;

502 
p
->
iCñl
++;

505 if–!
p
->
iRightChûdPg
 ||Ö->
iCñl
>p->
nCñl
 ){

506 
	`°©CÀ¨Page
(
p
);

507 if–
pC§
->
iPage
==0 )  
	`°©Next
(
pCurs‹
);

508 
pC§
->
iPage
--;

509 
°©NextRe°¨t
;

511 
pC§
->
iPage
++;

512 
	`as£π
–
p
==&
pC§
->
aPage
[pC§->
iPage
-1] );

514 if–
p
->
iCñl
=ı->
nCñl
 ){

515 
p
[1].
iPgno
 =Ö->
iRightChûdPg
;

517 
p
[1].
iPgno
 =Ö->
aCñl
[p->
iCñl
].
iChûdPg
;

519 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
p
[1].
iPgno
, &p[1].
pPg
, 0);

520 
p
[1].
iCñl
 = 0;

521 
p
[1].
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("%s%.3x/",Ö->zP©h,Ö->
iCñl
);

522 
p
->
iCñl
++;

523 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

530 if–
rc
==
SQLITE_OK
 ){

531 
i
;

532 
SètPage
 *
p
 = &
pC§
->
aPage
[pC§->
iPage
];

533 
pC§
->
zName
 = (*)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0);

534 
pC§
->
iPagío
 = 
p
->
iPgno
;

536 
rc
 = 
	`°©DecodePage
(
pBt
, 
p
);

537 if–
rc
==
SQLITE_OK
 ){

538 
	`°©SizeAndOff£t
(
pC§
);

540  
p
->
Êags
 ){

543 
pC§
->
zPagëy≥
 = "internal";

547 
pC§
->
zPagëy≥
 = "leaf";

550 
pC§
->
zPagëy≥
 = "corrupted";

553 
pC§
->
nCñl
 = 
p
->nCell;

554 
pC§
->
nUnu£d
 = 
p
->nUnused;

555 
pC§
->
nMxPaylﬂd
 = 
p
->nMxPayload;

556 
pC§
->
zP©h
 = 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
p
->zPath);

557 if–
z
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

558 
nPaylﬂd
 = 0;

559 
i
=0; i<
p
->
nCñl
; i++){

560 
nPaylﬂd
 +
p
->
aCñl
[
i
].
nLoˇl
;

562 
pC§
->
nPaylﬂd
 =ÇPayload;

566  
rc
;

567 
	}
}

569 
	$°©Eof
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

570 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

571  
pC§
->
isEof
;

572 
	}
}

574 
	$°©Fûãr
(

575 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

576 
idxNum
, c⁄° *
idxSå
,

577 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


579 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

580 
SètTabÀ
 *
pTab
 = (SètTabÀ*)(
pCurs‹
->
pVèb
);

581 *
zSql
;

582 
rc
 = 
SQLITE_OK
;

583 *
zMa°î
;

585 if–
idxNum
==1 ){

586 c⁄° *
zDba£
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

587 
pC§
->
iDb
 = 
	`sqlôe3FödDbName
(
pTab
->
db
, 
zDba£
);

588 if–
pC§
->
iDb
<0 ){

589 
	`sqlôe3_‰ì
(
pCurs‹
->
pVèb
->
zEºMsg
);

590 
pCurs‹
->
pVèb
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch schema: %s", 
zDba£
);

591  
pCurs‹
->
pVèb
->
zEºMsg
 ? 
SQLITE_ERROR
 : 
SQLITE_NOMEM_BKPT
;

594 
pC§
->
iDb
 = 
pTab
->iDb;

596 
	`°©Re£tC§
(
pC§
);

597 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

598 
pC§
->
pStmt
 = 0;

599 
zMa°î
 = 
pC§
->
iDb
==1 ? "sqlite_temp_master" : "sqlite_master";

600 
zSql
 = 
	`sqlôe3_m¥ötf
(

605 " ORDER BYÇame", 
pTab
->
db
->
aDb
[
pC§
->
iDb
].
zName
, 
zMa°î
);

606 if–
zSql
==0 ){

607  
SQLITE_NOMEM_BKPT
;

609 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

610 
	`sqlôe3_‰ì
(
zSql
);

613 if–
rc
==
SQLITE_OK
 ){

614 
rc
 = 
	`°©Next
(
pCurs‹
);

616  
rc
;

617 
	}
}

619 
	$°©Cﬁumn
(

620 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

621 
sqlôe3_c⁄ãxt
 *
˘x
,

622 
i


624 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

625  
i
 ){

627 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zName
, -1, 
SQLITE_TRANSIENT
);

630 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zP©h
, -1, 
SQLITE_TRANSIENT
);

633 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pC§
->
iPagío
);

636 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zPagëy≥
, -1, 
SQLITE_STATIC
);

639 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nCñl
);

642 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nPaylﬂd
);

645 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nUnu£d
);

648 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
nMxPaylﬂd
);

651 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pC§
->
iOff£t
);

654 
	`sqlôe3_ªsu…_öt
(
˘x
, 
pC§
->
szPage
);

657 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
˘x
);

658 
iDb
 = 
pC§
->iDb;

659 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
db
->
aDb
[
iDb
].
zName
, -1, 
SQLITE_STATIC
);

663  
SQLITE_OK
;

664 
	}
}

666 
	$°©Rowid
(
sqlôe3_vèb_curs‹
 *
pCurs‹
, 
sqlôe_öt64
 *
pRowid
){

667 
SètCurs‹
 *
pC§
 = (SètCurs‹ *)
pCurs‹
;

668 *
pRowid
 = 
pC§
->
iPagío
;

669  
SQLITE_OK
;

670 
	}
}

675 
	$sqlôe3Db°©Regi°î
(
sqlôe3
 *
db
){

676 
sqlôe3_moduÀ
 
db°©_moduÀ
 = {

678 
°©C⁄√˘
,

679 
°©C⁄√˘
,

680 
°©Be°Index
,

681 
°©Disc⁄√˘
,

682 
°©Disc⁄√˘
,

683 
°©O≥n
,

684 
°©Clo£
,

685 
°©Fûãr
,

686 
°©Next
,

687 
°©Eof
,

688 
°©Cﬁumn
,

689 
°©Rowid
,

698  
	`sqlôe3_¸óã_moduÀ
(
db
, "db°©", &
db°©_moduÀ
, 0);

699 
	}
}

700 #ñi‡
deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
)

701 
	$sqlôe3Db°©Regi°î
(
sqlôe3
 *
db
){  
SQLITE_OK
; 
	}
}

	@delete.c

15 
	~"sqlôeI¡.h
"

31 
TabÀ
 *
	$sqlôe3SrcLi°Lookup
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pSrc
){

32 
SrcLi°_ôem
 *
pIãm
 = 
pSrc
->
a
;

33 
TabÀ
 *
pTab
;

34 
	`as£π
–
pIãm
 && 
pSrc
->
nSrc
==1 );

35 
pTab
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, 
pIãm
);

36 
	`sqlôe3DñëeTabÀ
(
pP¨£
->
db
, 
pIãm
->
pTab
);

37 
pIãm
->
pTab
 =ÖTab;

38 if–
pTab
 ){

39 
pTab
->
nRef
++;

41 if–
	`sqlôe3IndexedByLookup
(
pP¨£
, 
pIãm
) ){

42 
pTab
 = 0;

44  
pTab
;

45 
	}
}

52 
	$sqlôe3IsRódO∆y
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
võwOk
){

63 if––
	`IsVútuÆ
(
pTab
)

64 && 
	`sqlôe3GëVTabÀ
(
pP¨£
->
db
, 
pTab
)->
pMod
->
pModuÀ
->
xUpd©e
==0 )

65 || ( (
pTab
->
èbFœgs
 & 
TF_Ród⁄ly
)!=0

66 && (
pP¨£
->
db
->
Êags
 & 
SQLITE_WrôeSchema
)==0

67 && 
pP¨£
->
√°ed
==0 )

69 
	`sqlôe3Eº‹Msg
(
pP¨£
, "èbÀ %†mayÇŸ bêmodifõd", 
pTab
->
zName
);

73 #i‚de‡
SQLITE_OMIT_VIEW


74 if–!
võwOk
 && 
pTab
->
pSñe˘
 ){

75 
	`sqlôe3Eº‹Msg
(
pP¨£
,"ˇ¬Ÿ modify %†beˇu£ iài†®võw",
pTab
->
zName
);

80 
	}
}

83 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

89 
	$sqlôe3M©îülizeVõw
(

90 
P¨£
 *
pP¨£
,

91 
TabÀ
 *
pVõw
,

92 
Ex¥
 *
pWhîe
,

93 
iCur


95 
Sñe˘De°
 
de°
;

96 
Sñe˘
 *
pSñ
;

97 
SrcLi°
 *
pFrom
;

98 
sqlôe3
 *
db
 = 
pP¨£
->db;

99 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pVõw
->
pSchema
);

100 
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhere, 0);

101 
pFrom
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

102 if–
pFrom
 ){

103 
	`as£π
–
pFrom
->
nSrc
==1 );

104 
pFrom
->
a
[0].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pVõw
->zName);

105 
pFrom
->
a
[0].
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, db->
aDb
[
iDb
].
zName
);

106 
	`as£π
–
pFrom
->
a
[0].
pOn
==0 );

107 
	`as£π
–
pFrom
->
a
[0].
pUsög
==0 );

109 
pSñ
 = 
	`sqlôe3Sñe˘New
(
pP¨£
, 0, 
pFrom
, 
pWhîe
, 0, 0, 0,

110 
SF_In˛udeHiddí
, 0, 0);

111 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_EphemTab
, 
iCur
);

112 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñ
, &
de°
);

113 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñ
);

114 
	}
}

117 #i‡
deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

126 
Ex¥
 *
	$sqlôe3LimôWhîe
(

127 
P¨£
 *
pP¨£
,

128 
SrcLi°
 *
pSrc
,

129 
Ex¥
 *
pWhîe
,

130 
Ex¥Li°
 *
pOrdîBy
,

131 
Ex¥
 *
pLimô
,

132 
Ex¥
 *
pOff£t
,

133 *
zStmtTy≥


135 
Ex¥
 *
pWhîeRowid
 = 
NULL
;

136 
Ex¥
 *
pInCœu£
 = 
NULL
;

137 
Ex¥
 *
pSñe˘Rowid
 = 
NULL
;

138 
Ex¥Li°
 *
pELi°
 = 
NULL
;

139 
SrcLi°
 *
pSñe˘Src
 = 
NULL
;

140 
Sñe˘
 *
pSñe˘
 = 
NULL
;

144 if–
pOrdîBy
 && (
pLimô
 == 0) ) {

145 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ORDER BY wôhouàLIMIT o¿%s", 
zStmtTy≥
);

146 
limô_whîe_˛ónup
;

152 if–
pLimô
 == 0 ) {

154 
	`as£π
–
pOff£t
 == 0 );

155  
pWhîe
;

167 
pSñe˘Rowid
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_ROW
, 0, 0, 0);

168 if–
pSñe˘Rowid
 =0 ) 
limô_whîe_˛ónup
;

169 
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
pSñe˘Rowid
);

170 if–
pELi°
 =0 ) 
limô_whîe_˛ónup
;

174 
pSñe˘Src
 = 
	`sqlôe3SrcLi°Dup
(
pP¨£
->
db
, 
pSrc
, 0);

175 if–
pSñe˘Src
 == 0 ) {

176 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pELi°
);

177 
limô_whîe_˛ónup
;

181 
pSñe˘
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,
pELi°
,
pSñe˘Src
,
pWhîe
,0,0,

182 
pOrdîBy
,0,
pLimô
,
pOff£t
);

183 if–
pSñe˘
 == 0 )  0;

186 
pWhîeRowid
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_ROW
, 0, 0, 0);

187 
pInCœu£
 = 
pWhîeRowid
 ? 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
,ÖWhereRowid, 0, 0) : 0;

188 
	`sqlôe3PEx¥AddSñe˘
(
pP¨£
, 
pInCœu£
, 
pSñe˘
);

189  
pInCœu£
;

191 
limô_whîe_˛ónup
:

192 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pWhîe
);

193 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
pOrdîBy
);

194 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pLimô
);

195 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pOff£t
);

197 
	}
}

208 
	$sqlôe3DñëeFrom
(

209 
P¨£
 *
pP¨£
,

210 
SrcLi°
 *
pTabLi°
,

211 
Ex¥
 *
pWhîe


213 
Vdbe
 *
v
;

214 
TabÀ
 *
pTab
;

215 c⁄° *
zDb
;

216 
i
;

217 
WhîeInfo
 *
pWInfo
;

218 
Index
 *
pIdx
;

219 
iTabCur
;

220 
iD©aCur
 = 0;

221 
iIdxCur
 = 0;

222 
nIdx
;

223 
sqlôe3
 *
db
;

224 
AuthC⁄ãxt
 
sC⁄ãxt
;

225 
NameC⁄ãxt
 
sNC
;

226 
iDb
;

227 
memC¡
 = -1;

228 
rˇuth
;

229 
eO√Pass
;

230 
aiCurO√Pass
[2];

231 
u8
 *
aToO≥n
 = 0;

232 
Index
 *
pPk
;

233 
iPk
 = 0;

234 
i16
 
nPk
 = 1;

235 
iKey
;

236 
i16
 
nKey
;

237 
iEphCur
 = 0;

238 
iRowSë
 = 0;

239 
addrBy∑ss
 = 0;

240 
addrLo›
 = 0;

241 
addrEphO≥n
 = 0;

242 
bCom∂ex
;

245 #i‚de‡
SQLITE_OMIT_TRIGGER


246 
isVõw
;

247 
Triggî
 *
pTriggî
;

250 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

251 
db
 = 
pP¨£
->db;

252 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

253 
dñëe_‰om_˛ónup
;

255 
	`as£π
–
pTabLi°
->
nSrc
==1 );

262 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

263 if–
pTab
==0 ) 
dñëe_‰om_˛ónup
;

268 #i‚de‡
SQLITE_OMIT_TRIGGER


269 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

270 
isVõw
 = 
pTab
->
pSñe˘
!=0;

271 
bCom∂ex
 = 
pTriggî
 || 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0);

273 
	#pTriggî
 0

	)

274 
	#isVõw
 0

	)

276 #ifde‡
SQLITE_OMIT_VIEW


277 #unde‡
isVõw


278 
	#isVõw
 0

	)

283 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

284 
dñëe_‰om_˛ónup
;

287 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, (
pTriggî
?1:0)) ){

288 
dñëe_‰om_˛ónup
;

290 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

291 
	`as£π
–
iDb
<
db
->
nDb
 );

292 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

293 
rˇuth
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
pTab
->
zName
, 0, 
zDb
);

294 
	`as£π
–
rˇuth
==
SQLITE_OK
 ||Ñˇuth==
SQLITE_DENY
 ||Ñˇuth==
SQLITE_IGNORE
 );

295 if–
rˇuth
==
SQLITE_DENY
 ){

296 
dñëe_‰om_˛ónup
;

298 
	`as£π
(!
isVõw
 || 
pTriggî
);

302 
	`as£π
–
pTabLi°
->
nSrc
==1 );

303 
iTabCur
 = 
pTabLi°
->
a
[0].
iCurs‹
 = 
pP¨£
->
nTab
++;

304 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){

305 
pP¨£
->
nTab
++;

310 if–
isVõw
 ){

311 
	`sqlôe3AuthC⁄ãxtPush
(
pP¨£
, &
sC⁄ãxt
, 
pTab
->
zName
);

316 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

317 if–
v
==0 ){

318 
dñëe_‰om_˛ónup
;

320 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

321 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

326 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

327 if–
isVõw
 ){

328 
	`sqlôe3M©îülizeVõw
(
pP¨£
, 
pTab
, 
pWhîe
, 
iTabCur
);

329 
iD©aCur
 = 
iIdxCur
 = 
iTabCur
;

335 
	`mem£t
(&
sNC
, 0, (sNC));

336 
sNC
.
pP¨£
 =ÖParse;

337 
sNC
.
pSrcLi°
 = 
pTabLi°
;

338 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhîe
) ){

339 
dñëe_‰om_˛ónup
;

345 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

346 
memC¡
 = ++
pP¨£
->
nMem
;

347 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
memC¡
);

350 #i‚de‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


355 if–
rˇuth
==
SQLITE_OK


356 && 
pWhîe
==0

357 && !
bCom∂ex


358 && !
	`IsVútuÆ
(
pTab
)

359 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


360 && 
db
->
xPªUpd©eCÆlback
==0

363 
	`as£π
–!
isVõw
 );

364 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 1,ÖTab->
zName
);

365 if–
	`HasRowid
(
pTab
) ){

366 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CÀ¨
, 
pTab
->
äum
, 
iDb
, 
memC¡
,

367 
pTab
->
zName
, 
P4_STATIC
);

369 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

370 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

371 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_CÀ¨
, 
pIdx
->
äum
, 
iDb
);

376 
u16
 
wcf
 = 
WHERE_ONEPASS_DESIRED
|
WHERE_DUPLICATES_OK
|
WHERE_SEEK_TABLE
;

377 if–
sNC
.
ncFœgs
 & 
NC_V¨Sñe˘
 ) 
bCom∂ex
 = 1;

378 
wcf
 |(
bCom∂ex
 ? 0 : 
WHERE_ONEPASS_MULTIROW
);

379 if–
	`HasRowid
(
pTab
) ){

381 
pPk
 = 0;

382 
nPk
 = 1;

383 
iRowSë
 = ++
pP¨£
->
nMem
;

384 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iRowSë
);

388 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

389 
	`as£π
–
pPk
!=0 );

390 
nPk
 = 
pPk
->
nKeyCﬁ
;

391 
iPk
 = 
pP¨£
->
nMem
+1;

392 
pP¨£
->
nMem
 +
nPk
;

393 
iEphCur
 = 
pP¨£
->
nTab
++;

394 
addrEphO≥n
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iEphCur
, 
nPk
);

395 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

406 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0, 
wcf
, 
iTabCur
+1);

407 if–
pWInfo
==0 ) 
dñëe_‰om_˛ónup
;

408 
eO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

409 
	`as£π
–
	`IsVútuÆ
(
pTab
)==0 || 
eO√Pass
!=
ONEPASS_MULTI
 );

410 
	`as£π
–
	`IsVútuÆ
(
pTab
Ë|| 
bCom∂ex
 || 
eO√Pass
!=
ONEPASS_OFF
 );

413 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

414 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
memC¡
, 1);

418 if–
pPk
 ){

419 
i
=0; i<
nPk
; i++){

420 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

421 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iTabCur
,

422 
pPk
->
aiCﬁumn
[
i
], 
iPk
+i);

424 
iKey
 = 
iPk
;

426 
iKey
 = 
pP¨£
->
nMem
 + 1;

427 
iKey
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, -1, 
iTabCur
, iKey, 0);

428 if–
iKey
>
pP¨£
->
nMem
 )ÖParse->nMem = iKey;

431 if–
eO√Pass
!=
ONEPASS_OFF
 ){

435 
nKey
 = 
nPk
;

436 
aToO≥n
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nIdx
+2);

437 if–
aToO≥n
==0 ){

438 
	`sqlôe3WhîeEnd
(
pWInfo
);

439 
dñëe_‰om_˛ónup
;

441 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

442 
aToO≥n
[
nIdx
+1] = 0;

443 if–
aiCurO√Pass
[0]>=0 ) 
aToO≥n
[aiCurO√Pass[0]-
iTabCur
] = 0;

444 if–
aiCurO√Pass
[1]>=0 ) 
aToO≥n
[aiCurO√Pass[1]-
iTabCur
] = 0;

445 if–
addrEphO≥n
 ) 
	`sqlôe3VdbeCh™geToNo›
(
v
,áddrEphOpen);

447 if–
pPk
 ){

449 
iKey
 = ++
pP¨£
->
nMem
;

450 
nKey
 = 0;

451 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
iPk
, 
nPk
, 
iKey
,

452 
	`sqlôe3IndexAfföôySå
(
pP¨£
->
db
, 
pPk
), 
nPk
);

453 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iEphCur
, 
iKey
);

456 
nKey
 = 1;

457 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowSëAdd
, 
iRowSë
, 
iKey
);

463 if–
eO√Pass
!=
ONEPASS_OFF
 ){

464 
addrBy∑ss
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

466 
	`sqlôe3WhîeEnd
(
pWInfo
);

474 if–!
isVõw
 ){

475 
iAddrOn˚
 = 0;

476 if–
eO√Pass
==
ONEPASS_MULTI
 ){

477 
iAddrOn˚
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

479 
	`ã°ˇ£
–
	`IsVútuÆ
(
pTab
) );

480 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 
OPFLAG_FORDELETE
,

481 
iTabCur
, 
aToO≥n
, &
iD©aCur
, &
iIdxCur
);

482 
	`as£π
–
pPk
 || 
	`IsVútuÆ
(
pTab
Ë|| 
iD©aCur
==
iTabCur
 );

483 
	`as£π
–
pPk
 || 
	`IsVútuÆ
(
pTab
Ë|| 
iIdxCur
==
iD©aCur
+1 );

484 if–
eO√Pass
==
ONEPASS_MULTI
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddrOn˚
);

490 if–
eO√Pass
!=
ONEPASS_OFF
 ){

491 
	`as£π
–
nKey
==
nPk
 );

492 if–!
	`IsVútuÆ
(
pTab
Ë&& 
aToO≥n
[
iD©aCur
-
iTabCur
] ){

493 
	`as£π
–
pPk
!=0 || 
pTab
->
pSñe˘
!=0 );

494 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
addrBy∑ss
, 
iKey
, 
nKey
);

495 
	`VdbeCovîage
(
v
);

497 }if–
pPk
 ){

498 
addrLo›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iEphCur
); 
	`VdbeCovîage
(v);

499 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowKey
, 
iEphCur
, 
iKey
);

500 
	`as£π
–
nKey
==0 );

502 
addrLo›
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RowSëRód
, 
iRowSë
, 0, 
iKey
);

503 
	`VdbeCovîage
(
v
);

504 
	`as£π
–
nKey
==1 );

508 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


509 if–
	`IsVútuÆ
(
pTab
) ){

510 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

511 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

512 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 0, 1, 
iKey
, 
pVTab
, 
P4_VTAB
);

513 
	`sqlôe3VdbeCh™geP5
(
v
, 
OE_Ab‹t
);

514 
	`as£π
–
eO√Pass
==
ONEPASS_OFF
 ||ÉO√Pass==
ONEPASS_SINGLE
 );

515 
	`sqlôe3MayAb‹t
(
pP¨£
);

516 if–
eO√Pass
==
ONEPASS_SINGLE
 && 
	`sqlôe3IsT›Àvñ
(
pP¨£
) ){

517 
pP¨£
->
isMu…iWrôe
 = 0;

522 
cou¡
 = (
pP¨£
->
√°ed
==0);

523 
iIdxNoSìk
 = -1;

524 if–
bCom∂ex
==0 && 
aiCurO√Pass
[1]!=
iD©aCur
 ){

525 
iIdxNoSìk
 = 
aiCurO√Pass
[1];

527 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

528 
iKey
, 
nKey
, 
cou¡
, 
OE_DeÁu…
, 
eO√Pass
, 
iIdxNoSìk
);

532 if–
eO√Pass
!=
ONEPASS_OFF
 ){

533 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBy∑ss
);

534 
	`sqlôe3WhîeEnd
(
pWInfo
);

535 }if–
pPk
 ){

536 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iEphCur
, 
addrLo›
+1); 
	`VdbeCovîage
(v);

537 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrLo›
);

539 
	`sqlôe3VdbeGŸo
(
v
, 
addrLo›
);

540 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrLo›
);

544 if–!
isVõw
 && !
	`IsVútuÆ
(
pTab
) ){

545 if–!
pPk
 ) 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iD©aCur
);

546 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx; i++,ÖIdxıIdx->
pNext
){

547 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iIdxCur
 + 
i
);

556 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

557 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

564 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
√°ed
 && !pP¨£->
pTriggîTab
 ){

565 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
memC¡
, 1);

566 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

567 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†dñëed", 
SQLITE_STATIC
);

570 
dñëe_‰om_˛ónup
:

571 
	`sqlôe3AuthC⁄ãxtP›
(&
sC⁄ãxt
);

572 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

573 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

574 
	`sqlôe3DbFªe
(
db
, 
aToO≥n
);

576 
	}
}

580 #ifde‡
isVõw


581 #unde‡
isVõw


583 #ifde‡
pTriggî


584 #unde‡
pTriggî


626 
	$sqlôe3Gíî©eRowDñëe
(

627 
P¨£
 *
pP¨£
,

628 
TabÀ
 *
pTab
,

629 
Triggî
 *
pTriggî
,

630 
iD©aCur
,

631 
iIdxCur
,

632 
iPk
,

633 
i16
 
nPk
,

634 
u8
 
cou¡
,

635 
u8
 
⁄c⁄f
,

636 
u8
 
eMode
,

637 
iIdxNoSìk


639 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

640 
iOld
 = 0;

641 
iLabñ
;

642 
u8
 
›Sìk
;

645 
	`as£π
–
v
 );

646 
	`VdbeModuÀCommít
((
v
, "BEGIN: GenRowDel(%d,%d,%d,%d)",

647 
iD©aCur
, 
iIdxCur
, 
iPk
, ()
nPk
));

652 
iLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

653 
›Sìk
 = 
	`HasRowid
(
pTab
Ë? 
OP_NŸExi°s
 : 
OP_NŸFound
;

654 if–
eMode
==
ONEPASS_OFF
 ){

655 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›Sìk
, 
iD©aCur
, 
iLabñ
, 
iPk
, 
nPk
);

656 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸExi°s
);

657 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸFound
);

662 if–
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0Ë|| 
pTriggî
 ){

663 
u32
 
mask
;

664 
iCﬁ
;

665 
addrSèπ
;

669 
mask
 = 
	`sqlôe3TriggîCﬁmask
(

670 
pP¨£
, 
pTriggî
, 0, 0, 
TRIGGER_BEFORE
|
TRIGGER_AFTER
, 
pTab
, 
⁄c⁄f


672 
mask
 |
	`sqlôe3FkOldmask
(
pP¨£
, 
pTab
);

673 
iOld
 = 
pP¨£
->
nMem
+1;

674 
pP¨£
->
nMem
 +(1 + 
pTab
->
nCﬁ
);

678 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
iPk
, 
iOld
);

679 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

680 
	`ã°ˇ£
–
mask
!=0xfffffff‡&& 
iCﬁ
==31 );

681 
	`ã°ˇ£
–
mask
!=0xfffffff‡&& 
iCﬁ
==32 );

682 if–
mask
==0xfffffff‡|| (
iCﬁ
<=31 && (mask & 
	`MASKBIT32
(iCol))!=0) ){

683 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
iCﬁ
, 
iOld
+iCol+1);

688 
addrSèπ
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

689 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
,

690 
TK_DELETE
, 0, 
TRIGGER_BEFORE
, 
pTab
, 
iOld
, 
⁄c⁄f
, 
iLabñ


698 if–
addrSèπ
<
	`sqlôe3VdbeCuºítAddr
(
v
) ){

699 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›Sìk
, 
iD©aCur
, 
iLabñ
, 
iPk
, 
nPk
);

700 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸExi°s
);

701 
	`VdbeCovîageIf
(
v
, 
›Sìk
==
OP_NŸFound
);

707 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 
iOld
, 0, 0, 0);

720 if–
pTab
->
pSñe˘
==0 ){

721 
u8
 
p5
 = 0;

722 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,0,
iIdxNoSìk
);

723 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, (
cou¡
?
OPFLAG_NCHANGE
:0));

724 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pTab
, 
P4_TABLE
);

725 if–
eMode
!=
ONEPASS_OFF
 ){

726 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_AUXDELETE
);

728 if–
iIdxNoSìk
>=0 ){

729 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
iIdxNoSìk
);

731 if–
eMode
==
ONEPASS_MULTI
 ) 
p5
 |
OPFLAG_SAVEPOSITION
;

732 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

738 
	`sqlôe3FkA˘i⁄s
(
pP¨£
, 
pTab
, 0, 
iOld
, 0, 0);

741 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
,

742 
TK_DELETE
, 0, 
TRIGGER_AFTER
, 
pTab
, 
iOld
, 
⁄c⁄f
, 
iLabñ


748 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iLabñ
);

749 
	`VdbeModuÀCommít
((
v
, "END: GenRowDel()"));

750 
	}
}

770 
	$sqlôe3Gíî©eRowIndexDñëe
(

771 
P¨£
 *
pP¨£
,

772 
TabÀ
 *
pTab
,

773 
iD©aCur
,

774 
iIdxCur
,

775 *
aRegIdx
,

776 
iIdxNoSìk


778 
i
;

779 
r1
 = -1;

780 
iP¨tIdxLabñ
;

781 
Index
 *
pIdx
;

782 
Index
 *
pPri‹
 = 0;

783 
Vdbe
 *
v
;

784 
Index
 *
pPk
;

786 
v
 = 
pP¨£
->
pVdbe
;

787 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

788 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx; i++,ÖIdxıIdx->
pNext
){

789 
	`as£π
–
iIdxCur
+
i
!=
iD©aCur
 || 
pPk
==
pIdx
 );

790 if–
aRegIdx
!=0 &&áRegIdx[
i
]==0 ) ;

791 if–
pIdx
==
pPk
 ) ;

792 if–
iIdxCur
+
i
==
iIdxNoSìk
 ) ;

793 
	`VdbeModuÀCommít
((
v
, "GíRowIdxDñ f‹ %s", 
pIdx
->
zName
));

794 
r1
 = 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
, 
pIdx
, 
iD©aCur
, 0, 1,

795 &
iP¨tIdxLabñ
, 
pPri‹
, 
r1
);

796 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxDñëe
, 
iIdxCur
+
i
, 
r1
,

797 
pIdx
->
uniqNŸNuŒ
 ?ÖIdx->
nKeyCﬁ
 :ÖIdx->
nCﬁumn
);

798 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
iP¨tIdxLabñ
);

799 
pPri‹
 = 
pIdx
;

801 
	}
}

834 
	$sqlôe3Gíî©eIndexKey
(

835 
P¨£
 *
pP¨£
,

836 
Index
 *
pIdx
,

837 
iD©aCur
,

838 
ªgOut
,

839 
¥efixO∆y
,

840 *
piP¨tIdxLabñ
,

841 
Index
 *
pPri‹
,

842 
ªgPri‹


844 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

845 
j
;

846 
ªgBa£
;

847 
nCﬁ
;

849 if–
piP¨tIdxLabñ
 ){

850 if–
pIdx
->
pP¨tIdxWhîe
 ){

851 *
piP¨tIdxLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

852 
pP¨£
->
iSñfTab
 = 
iD©aCur
;

853 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

854 
	`sqlôe3Ex¥IfFÆ£Dup
(
pP¨£
, 
pIdx
->
pP¨tIdxWhîe
, *
piP¨tIdxLabñ
,

855 
SQLITE_JUMPIFNULL
);

857 *
piP¨tIdxLabñ
 = 0;

860 
nCﬁ
 = (
¥efixO∆y
 && 
pIdx
->
uniqNŸNuŒ
Ë?ÖIdx->
nKeyCﬁ
 :ÖIdx->
nCﬁumn
;

861 
ªgBa£
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

862 if–
pPri‹
 && (
ªgBa£
!=
ªgPri‹
 ||ÖPri‹->
pP¨tIdxWhîe
) )ÖPrior = 0;

863 
j
=0; j<
nCﬁ
; j++){

864 if–
pPri‹


865 && 
pPri‹
->
aiCﬁumn
[
j
]==
pIdx
->aiColumn[j]

866 && 
pPri‹
->
aiCﬁumn
[
j
]!=
XN_EXPR


871 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
pP¨£
, 
pIdx
, 
iD©aCur
, 
j
, 
ªgBa£
+j);

878 
	`sqlôe3VdbeDñëePri‹Opcode
(
v
, 
OP_RólAfföôy
);

880 if–
ªgOut
 ){

881 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
, 
nCﬁ
, 
ªgOut
);

883 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgBa£
, 
nCﬁ
);

884  
ªgBa£
;

885 
	}
}

892 
	$sqlôe3ResﬁveP¨tIdxLabñ
(
P¨£
 *
pP¨£
, 
iLabñ
){

893 if–
iLabñ
 ){

894 
	`sqlôe3VdbeResﬁveLabñ
(
pP¨£
->
pVdbe
, 
iLabñ
);

895 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

897 
	}
}

	@expr.c

15 
	~"sqlôeI¡.h
"

33 
	$sqlôe3Ex¥Afföôy
(
Ex¥
 *
pEx¥
){

34 
›
;

35 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

36 if–
pEx¥
->
Êags
 & 
EP_Gíîic
 )  0;

37 
›
 = 
pEx¥
->op;

38 if–
›
==
TK_SELECT
 ){

39 
	`as£π
–
pEx¥
->
Êags
&
EP_xIsSñe˘
 );

40  
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
x
.
pSñe˘
->
pELi°
->
a
[0].pExpr);

42 #i‚de‡
SQLITE_OMIT_CAST


43 if–
›
==
TK_CAST
 ){

44 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

45  
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
, 0);

48 if–(
›
==
TK_AGG_COLUMN
 || op==
TK_COLUMN
 || op==
TK_REGISTER
)

49 && 
pEx¥
->
pTab
!=0

53 
j
 = 
pEx¥
->
iCﬁumn
;

54 if–
j
<0 )  
SQLITE_AFF_INTEGER
;

55 
	`as£π
–
pEx¥
->
pTab
 && 
j
<pEx¥->pTab->
nCﬁ
 );

56  
pEx¥
->
pTab
->
aCﬁ
[
j
].
afföôy
;

58  
pEx¥
->
afföôy
;

59 
	}
}

69 
Ex¥
 *
	$sqlôe3Ex¥AddCﬁœãTokí
(

70 
P¨£
 *
pP¨£
,

71 
Ex¥
 *
pEx¥
,

72 c⁄° 
Tokí
 *
pCﬁlName
,

73 
dequŸe


75 if–
pCﬁlName
->
n
>0 ){

76 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
TK_COLLATE
, 
pCﬁlName
, 
dequŸe
);

77 if–
pNew
 ){

78 
pNew
->
pLe·
 = 
pEx¥
;

79 
pNew
->
Êags
 |
EP_Cﬁœã
|
EP_Skù
;

80 
pEx¥
 = 
pNew
;

83  
pEx¥
;

84 
	}
}

85 
Ex¥
 *
	$sqlôe3Ex¥AddCﬁœãSåög
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, c⁄° *
zC
){

86 
Tokí
 
s
;

87 
	`as£π
–
zC
!=0 );

88 
	`sqlôe3TokíInô
(&
s
, (*)
zC
);

89  
	`sqlôe3Ex¥AddCﬁœãTokí
(
pP¨£
, 
pEx¥
, &
s
, 0);

90 
	}
}

96 
Ex¥
 *
	$sqlôe3Ex¥SkùCﬁœã
(
Ex¥
 *
pEx¥
){

97  
pEx¥
 && 
	`Ex¥HasPr›îty
’Ex¥, 
EP_Skù
) ){

98 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_U∆ikñy
) ){

99 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

100 
	`as£π
–
pEx¥
->
x
.
pLi°
->
nEx¥
>0 );

101 
	`as£π
–
pEx¥
->
›
==
TK_FUNCTION
 );

102 
pEx¥
 =ÖEx¥->
x
.
pLi°
->
a
[0].pExpr;

104 
	`as£π
–
pEx¥
->
›
==
TK_COLLATE
 );

105 
pEx¥
 =ÖEx¥->
pLe·
;

108  
pEx¥
;

109 
	}
}

120 
CﬁlSeq
 *
	$sqlôe3Ex¥CﬁlSeq
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

121 
sqlôe3
 *
db
 = 
pP¨£
->db;

122 
CﬁlSeq
 *
pCﬁl
 = 0;

123 
Ex¥
 *
p
 = 
pEx¥
;

124  
p
 ){

125 
›
 = 
p
->op;

126 if–
p
->
Êags
 & 
EP_Gíîic
 ) ;

127 if–
›
==
TK_CAST
 || op==
TK_UPLUS
 ){

128 
p
 =Ö->
pLe·
;

131 if–
›
==
TK_COLLATE
 || (›==
TK_REGISTER
 && 
p
->
›2
==TK_COLLATE) ){

132 
pCﬁl
 = 
	`sqlôe3GëCﬁlSeq
(
pP¨£
, 
	`ENC
(
db
), 0, 
p
->
u
.
zTokí
);

135 if–(
›
==
TK_AGG_COLUMN
 || op==
TK_COLUMN


136 || 
›
==
TK_REGISTER
 || op==
TK_TRIGGER
)

137 && 
p
->
pTab
!=0

141 
j
 = 
p
->
iCﬁumn
;

142 if–
j
>=0 ){

143 c⁄° *
zCﬁl
 = 
p
->
pTab
->
aCﬁ
[
j
].zColl;

144 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, 
	`ENC
(db), 
zCﬁl
, 0);

148 if–
p
->
Êags
 & 
EP_Cﬁœã
 ){

149 if–
p
->
pLe·
 && (p->pLe·->
Êags
 & 
EP_Cﬁœã
)!=0 ){

150 
p
 =Ö->
pLe·
;

152 
Ex¥
 *
pNext
 = 
p
->
pRight
;

154 
	`as£π
–
p
->
x
.
pLi°
==0 ||Ö->
pRight
==0 );

158 if–
p
->
x
.
pLi°
!=0 && 
	`ALWAYS
(!
	`Ex¥HasPr›îty
’, 
EP_xIsSñe˘
)) ){

159 
i
;

160 
i
=0; 
	`ALWAYS
(i<
p
->
x
.
pLi°
->
nEx¥
); i++){

161 if–
	`Ex¥HasPr›îty
(
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
, 
EP_Cﬁœã
) ){

162 
pNext
 = 
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
;

167 
p
 = 
pNext
;

173 if–
	`sqlôe3CheckCﬁlSeq
(
pP¨£
, 
pCﬁl
) ){

174 
pCﬁl
 = 0;

176  
pCﬁl
;

177 
	}
}

184 
	$sqlôe3Com∑ªAfföôy
(
Ex¥
 *
pEx¥
, 
aff2
){

185 
aff1
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
);

186 if–
aff1
 && 
aff2
 ){

190 if–
	`sqlôe3IsNumîicAfföôy
(
aff1
Ë|| sqlôe3IsNumîicAfföôy(
aff2
) ){

191  
SQLITE_AFF_NUMERIC
;

193  
SQLITE_AFF_BLOB
;

195 }if–!
aff1
 && !
aff2
 ){

199  
SQLITE_AFF_BLOB
;

202 
	`as£π
–
aff1
==0 || 
aff2
==0 );

203  (
aff1
 + 
aff2
);

205 
	}
}

211 
	$com∑ris⁄Afföôy
(
Ex¥
 *
pEx¥
){

212 
aff
;

213 
	`as£π
–
pEx¥
->
›
==
TK_EQ
 ||ÖEx¥->›==
TK_IN
 ||ÖEx¥->›==
TK_LT
 ||

214 
pEx¥
->
›
==
TK_GT
 ||ÖEx¥->›==
TK_GE
 ||ÖEx¥->›==
TK_LE
 ||

215 
pEx¥
->
›
==
TK_NE
 ||ÖEx¥->›==
TK_IS
 ||ÖEx¥->›==
TK_ISNOT
 );

216 
	`as£π
–
pEx¥
->
pLe·
 );

217 
aff
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pLe·
);

218 if–
pEx¥
->
pRight
 ){

219 
aff
 = 
	`sqlôe3Com∑ªAfföôy
(
pEx¥
->
pRight
,áff);

220 }if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

221 
aff
 = 
	`sqlôe3Com∑ªAfföôy
(
pEx¥
->
x
.
pSñe˘
->
pELi°
->
a
[0].pExpr,áff);

222 }if–!
aff
 ){

223 
aff
 = 
SQLITE_AFF_BLOB
;

225  
aff
;

226 
	}
}

234 
	$sqlôe3IndexAfföôyOk
(
Ex¥
 *
pEx¥
, 
idx_afföôy
){

235 
aff
 = 
	`com∑ris⁄Afföôy
(
pEx¥
);

236  
aff
 ){

237 
SQLITE_AFF_BLOB
:

239 
SQLITE_AFF_TEXT
:

240  
idx_afföôy
==
SQLITE_AFF_TEXT
;

242  
	`sqlôe3IsNumîicAfföôy
(
idx_afföôy
);

244 
	}
}

250 
u8
 
	$bö¨yCom∑ªP5
(
Ex¥
 *
pEx¥1
, Ex¥ *
pEx¥2
, 
jumpIfNuŒ
){

251 
u8
 
aff
 = ()
	`sqlôe3Ex¥Afföôy
(
pEx¥2
);

252 
aff
 = (
u8
)
	`sqlôe3Com∑ªAfföôy
(
pEx¥1
,áffË| (u8)
jumpIfNuŒ
;

253  
aff
;

254 
	}
}

268 
CﬁlSeq
 *
	$sqlôe3Bö¨yCom∑ªCﬁlSeq
(

269 
P¨£
 *
pP¨£
,

270 
Ex¥
 *
pLe·
,

271 
Ex¥
 *
pRight


273 
CﬁlSeq
 *
pCﬁl
;

274 
	`as£π
–
pLe·
 );

275 if–
pLe·
->
Êags
 & 
EP_Cﬁœã
 ){

276 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLe·
);

277 }if–
pRight
 && (pRight->
Êags
 & 
EP_Cﬁœã
)!=0 ){

278 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pRight
);

280 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLe·
);

281 if–!
pCﬁl
 ){

282 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pRight
);

285  
pCﬁl
;

286 
	}
}

291 
	$codeCom∑ª
(

292 
P¨£
 *
pP¨£
,

293 
Ex¥
 *
pLe·
,

294 
Ex¥
 *
pRight
,

295 
›code
,

296 
ö1
, 
ö2
,

297 
de°
,

298 
jumpIfNuŒ


300 
p5
;

301 
addr
;

302 
CﬁlSeq
 *
p4
;

304 
p4
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pLe·
, 
pRight
);

305 
p5
 = 
	`bö¨yCom∑ªP5
(
pLe·
, 
pRight
, 
jumpIfNuŒ
);

306 
addr
 = 
	`sqlôe3VdbeAddOp4
(
pP¨£
->
pVdbe
, 
›code
, 
ö2
, 
de°
, 
ö1
,

307 (*)
p4
, 
P4_COLLSEQ
);

308 
	`sqlôe3VdbeCh™geP5
(
pP¨£
->
pVdbe
, (
u8
)
p5
);

309  
addr
;

310 
	}
}

312 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

318 
	$sqlôe3Ex¥CheckHeight
(
P¨£
 *
pP¨£
, 
nHeight
){

319 
rc
 = 
SQLITE_OK
;

320 
mxHeight
 = 
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_EXPR_DEPTH
];

321 if–
nHeight
>
mxHeight
 ){

322 
	`sqlôe3Eº‹Msg
(
pP¨£
,

323 "Ex¥essi⁄Åªêi†toÿœrgê(maximum dïth %d)", 
mxHeight


325 
rc
 = 
SQLITE_ERROR
;

327  
rc
;

328 
	}
}

339 
	$heightOfEx¥
(
Ex¥
 *
p
, *
≤Height
){

340 if–
p
 ){

341 if–
p
->
nHeight
>*
≤Height
 ){

342 *
≤Height
 = 
p
->
nHeight
;

345 
	}
}

346 
	$heightOfEx¥Li°
(
Ex¥Li°
 *
p
, *
≤Height
){

347 if–
p
 ){

348 
i
;

349 
i
=0; i<
p
->
nEx¥
; i++){

350 
	`heightOfEx¥
(
p
->
a
[
i
].
pEx¥
, 
≤Height
);

353 
	}
}

354 
	$heightOfSñe˘
(
Sñe˘
 *
p
, *
≤Height
){

355 if–
p
 ){

356 
	`heightOfEx¥
(
p
->
pWhîe
, 
≤Height
);

357 
	`heightOfEx¥
(
p
->
pHavög
, 
≤Height
);

358 
	`heightOfEx¥
(
p
->
pLimô
, 
≤Height
);

359 
	`heightOfEx¥
(
p
->
pOff£t
, 
≤Height
);

360 
	`heightOfEx¥Li°
(
p
->
pELi°
, 
≤Height
);

361 
	`heightOfEx¥Li°
(
p
->
pGroupBy
, 
≤Height
);

362 
	`heightOfEx¥Li°
(
p
->
pOrdîBy
, 
≤Height
);

363 
	`heightOfSñe˘
(
p
->
pPri‹
, 
≤Height
);

365 
	}
}

377 
	$ex¥SëHeight
(
Ex¥
 *
p
){

378 
nHeight
 = 0;

379 
	`heightOfEx¥
(
p
->
pLe·
, &
nHeight
);

380 
	`heightOfEx¥
(
p
->
pRight
, &
nHeight
);

381 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

382 
	`heightOfSñe˘
(
p
->
x
.
pSñe˘
, &
nHeight
);

383 }if–
p
->
x
.
pLi°
 ){

384 
	`heightOfEx¥Li°
(
p
->
x
.
pLi°
, &
nHeight
);

385 
p
->
Êags
 |
EP_Pr›ag©e
 & 
	`sqlôe3Ex¥Li°Fœgs
’->
x
.
pLi°
);

387 
p
->
nHeight
 =ÇHeight + 1;

388 
	}
}

398 
	$sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
){

399 if–
pP¨£
->
nEº
 ) ;

400 
	`ex¥SëHeight
(
p
);

401 
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
p
->
nHeight
);

402 
	}
}

408 
	$sqlôe3Sñe˘Ex¥Height
(
Sñe˘
 *
p
){

409 
nHeight
 = 0;

410 
	`heightOfSñe˘
(
p
, &
nHeight
);

411  
nHeight
;

412 
	}
}

418 
	$sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
){

419 if–
p
 &&Ö->
x
.
pLi°
 && !
	`Ex¥HasPr›îty
’, 
EP_xIsSñe˘
) ){

420 
p
->
Êags
 |
EP_Pr›ag©e
 & 
	`sqlôe3Ex¥Li°Fœgs
’->
x
.
pLi°
);

422 
	}
}

423 
	#ex¥SëHeight
(
y
)

	)

446 
Ex¥
 *
	$sqlôe3Ex¥AŒoc
(

447 
sqlôe3
 *
db
,

448 
›
,

449 c⁄° 
Tokí
 *
pTokí
,

450 
dequŸe


452 
Ex¥
 *
pNew
;

453 
nExåa
 = 0;

454 
iVÆue
 = 0;

456 
	`as£π
–
db
!=0 );

457 if–
pTokí
 ){

458 if–
›
!=
TK_INTEGER
 || 
pTokí
->
z
==0

459 || 
	`sqlôe3GëI¡32
(
pTokí
->
z
, &
iVÆue
)==0 ){

460 
nExåa
 = 
pTokí
->
n
+1;

461 
	`as£π
–
iVÆue
>=0 );

464 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Ex¥
)+
nExåa
);

465 if–
pNew
 ){

466 
	`mem£t
(
pNew
, 0, (
Ex¥
));

467 
pNew
->
›
 = (
u8
)op;

468 
pNew
->
iAgg
 = -1;

469 if–
pTokí
 ){

470 if–
nExåa
==0 ){

471 
pNew
->
Êags
 |
EP_I¡VÆue
;

472 
pNew
->
u
.
iVÆue
 = iValue;

474 
pNew
->
u
.
zTokí
 = (*)&pNew[1];

475 
	`as£π
–
pTokí
->
z
!=0 ||ÖTokí->
n
==0 );

476 if–
pTokí
->
n
 ) 
	`mem˝y
(
pNew
->
u
.
zTokí
,ÖTokí->
z
,ÖToken->n);

477 
pNew
->
u
.
zTokí
[
pTokí
->
n
] = 0;

478 if–
dequŸe
 && 
	`sqlôe3IsquŸe
(
pNew
->
u
.
zTokí
[0]) ){

479 if–
pNew
->
u
.
zTokí
[0]=='"' )ÖNew->
Êags
 |
EP_DblQuŸed
;

480 
	`sqlôe3DequŸe
(
pNew
->
u
.
zTokí
);

484 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

485 
pNew
->
nHeight
 = 1;

488  
pNew
;

489 
	}
}

495 
Ex¥
 *
	$sqlôe3Ex¥
(

496 
sqlôe3
 *
db
,

497 
›
,

498 c⁄° *
zTokí


500 
Tokí
 
x
;

501 
x
.
z
 = 
zTokí
;

502 
x
.
n
 = 
zTokí
 ? 
	`sqlôe3SåÀn30
(zToken) : 0;

503  
	`sqlôe3Ex¥AŒoc
(
db
, 
›
, &
x
, 0);

504 
	}
}

512 
	$sqlôe3Ex¥AâachSubåìs
(

513 
sqlôe3
 *
db
,

514 
Ex¥
 *
pRoŸ
,

515 
Ex¥
 *
pLe·
,

516 
Ex¥
 *
pRight


518 if–
pRoŸ
==0 ){

519 
	`as£π
–
db
->
mÆlocFaûed
 );

520 
	`sqlôe3Ex¥Dñëe
(
db
, 
pLe·
);

521 
	`sqlôe3Ex¥Dñëe
(
db
, 
pRight
);

523 if–
pRight
 ){

524 
pRoŸ
->
pRight
 =ÖRight;

525 
pRoŸ
->
Êags
 |
EP_Pr›ag©e
 & 
pRight
->flags;

527 if–
pLe·
 ){

528 
pRoŸ
->
pLe·
 =ÖLeft;

529 
pRoŸ
->
Êags
 |
EP_Pr›ag©e
 & 
pLe·
->flags;

531 
	`ex¥SëHeight
(
pRoŸ
);

533 
	}
}

542 
Ex¥
 *
	$sqlôe3PEx¥
(

543 
P¨£
 *
pP¨£
,

544 
›
,

545 
Ex¥
 *
pLe·
,

546 
Ex¥
 *
pRight
,

547 c⁄° 
Tokí
 *
pTokí


549 
Ex¥
 *
p
;

550 if–
›
==
TK_AND
 && 
pP¨£
->
nEº
==0 ){

552 
p
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
, 
pLe·
, 
pRight
);

554 
p
 = 
	`sqlôe3Ex¥AŒoc
(
pP¨£
->
db
, 
›
 & 
TKFLG_MASK
, 
pTokí
, 1);

555 
	`sqlôe3Ex¥AâachSubåìs
(
pP¨£
->
db
, 
p
, 
pLe·
, 
pRight
);

557 if–
p
 ) {

558 
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
p
->
nHeight
);

560  
p
;

561 
	}
}

567 
	$sqlôe3PEx¥AddSñe˘
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
Sñe˘
 *
pSñe˘
){

568 if–
pEx¥
 ){

569 
pEx¥
->
x
.
pSñe˘
 =ÖSelect;

570 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_xIsSñe˘
|
EP_Subquîy
);

571 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
pEx¥
);

573 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

574 
	`sqlôe3Sñe˘Dñëe
(
pP¨£
->
db
, 
pSñe˘
);

576 
	}
}

593 
	$ex¥AlwaysTrue
(
Ex¥
 *
p
){

594 
v
 = 0;

595 if–
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) )  0;

596 if–!
	`sqlôe3Ex¥IsI¡egî
(
p
, &
v
) )  0;

597  
v
!=0;

598 
	}
}

599 
	$ex¥AlwaysFÆ£
(
Ex¥
 *
p
){

600 
v
 = 0;

601 if–
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) )  0;

602 if–!
	`sqlôe3Ex¥IsI¡egî
(
p
, &
v
) )  0;

603  
v
==0;

604 
	}
}

614 
Ex¥
 *
	$sqlôe3Ex¥And
(
sqlôe3
 *
db
, 
Ex¥
 *
pLe·
, Ex¥ *
pRight
){

615 if–
pLe·
==0 ){

616  
pRight
;

617 }if–
pRight
==0 ){

618  
pLe·
;

619 }if–
	`ex¥AlwaysFÆ£
(
pLe·
Ë||Éx¥AlwaysFÆ£(
pRight
) ){

620 
	`sqlôe3Ex¥Dñëe
(
db
, 
pLe·
);

621 
	`sqlôe3Ex¥Dñëe
(
db
, 
pRight
);

622  
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_INTEGER
, &
sqlôe3I¡Tokís
[0], 0);

624 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_AND
, 0, 0);

625 
	`sqlôe3Ex¥AâachSubåìs
(
db
, 
pNew
, 
pLe·
, 
pRight
);

626  
pNew
;

628 
	}
}

634 
Ex¥
 *
	$sqlôe3Ex¥Fun˘i⁄
(
P¨£
 *
pP¨£
, 
Ex¥Li°
 *
pLi°
, 
Tokí
 *
pTokí
){

635 
Ex¥
 *
pNew
;

636 
sqlôe3
 *
db
 = 
pP¨£
->db;

637 
	`as£π
–
pTokí
 );

638 
pNew
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_FUNCTION
, 
pTokí
, 1);

639 if–
pNew
==0 ){

640 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

643 
pNew
->
x
.
pLi°
 =ÖList;

644 
	`as£π
–!
	`Ex¥HasPr›îty
(
pNew
, 
EP_xIsSñe˘
) );

645 
	`sqlôe3Ex¥SëHeightAndFœgs
(
pP¨£
, 
pNew
);

646  
pNew
;

647 
	}
}

665 
	$sqlôe3Ex¥AssignV¨Numbî
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

666 
sqlôe3
 *
db
 = 
pP¨£
->db;

667 c⁄° *
z
;

669 if–
pEx¥
==0 ) ;

670 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
|
EP_Redu˚d
|
EP_TokíO∆y
) );

671 
z
 = 
pEx¥
->
u
.
zTokí
;

672 
	`as£π
–
z
!=0 );

673 
	`as£π
–
z
[0]!=0 );

674 if–
z
[1]==0 ){

676 
	`as£π
–
z
[0]=='?' );

677 
pEx¥
->
iCﬁumn
 = (
ynV¨
)(++
pP¨£
->
nV¨
);

679 
ynV¨
 
x
 = 0;

680 
u32
 
n
 = 
	`sqlôe3SåÀn30
(
z
);

681 if–
z
[0]=='?' ){

684 
i64
 
i
;

685 
bOk
 = 0==
	`sqlôe3Atoi64
(&
z
[1], &
i
, 
n
-1, 
SQLITE_UTF8
);

686 
pEx¥
->
iCﬁumn
 = 
x
 = (
ynV¨
)
i
;

687 
	`ã°ˇ£
–
i
==0 );

688 
	`ã°ˇ£
–
i
==1 );

689 
	`ã°ˇ£
–
i
==
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]-1 );

690 
	`ã°ˇ£
–
i
==
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] );

691 if–
bOk
==0 || 
i
<1 || i>
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] ){

692 
	`sqlôe3Eº‹Msg
(
pP¨£
, "variableÇumber must be between ?1ánd ?%d",

693 
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]);

694 
x
 = 0;

696 if–
i
>
pP¨£
->
nV¨
 ){

697 
pP¨£
->
nV¨
 = ()
i
;

704 
ynV¨
 
i
;

705 
i
=0; i<
pP¨£
->
nzV¨
; i++){

706 if–
pP¨£
->
azV¨
[
i
] && 
	`°rcmp
’P¨£->azV¨[i],
z
)==0 ){

707 
pEx¥
->
iCﬁumn
 = 
x
 = (
ynV¨
)
i
+1;

711 if–
x
==0 ) x = 
pEx¥
->
iCﬁumn
 = (
ynV¨
)(++
pP¨£
->
nV¨
);

713 if–
x
>0 ){

714 if–
x
>
pP¨£
->
nzV¨
 ){

715 **
a
;

716 
a
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pP¨£
->
azV¨
, 
x
*(a[0]));

717 if–
a
==0 ){

718 
	`as£π
–
db
->
mÆlocFaûed
 );

721 
pP¨£
->
azV¨
 = 
a
;

722 
	`mem£t
(&
a
[
pP¨£
->
nzV¨
], 0, (
x
-pParse->nzVar)*(a[0]));

723 
pP¨£
->
nzV¨
 = 
x
;

725 if–
z
[0]!='?' || 
pP¨£
->
azV¨
[
x
-1]==0 ){

726 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
azV¨
[
x
-1]);

727 
pP¨£
->
azV¨
[
x
-1] = 
	`sqlôe3DbSåNDup
(
db
, 
z
, 
n
);

731 if–!
pP¨£
->
nEº
 &&ÖP¨£->
nV¨
>
db
->
aLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
] ){

732 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too many SQL variables");

734 
	}
}

739 
SQLITE_NOINLINE
 
	$sqlôe3Ex¥DñëeNN
(
sqlôe3
 *
db
, 
Ex¥
 *
p
){

740 
	`as£π
–
p
!=0 );

742 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë||Ö->
u
.
iVÆue
>=0 );

743 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
) ){

745 
	`as£π
–
p
->
x
.
pLi°
==0 ||Ö->
pRight
==0 );

746 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLe·
);

747 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pRight
);

748 if–
	`Ex¥HasPr›îty
(
p
, 
EP_MemTokí
ËË
	`sqlôe3DbFªe
(
db
,Ö->
u
.
zTokí
);

749 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

750 
	`sqlôe3Sñe˘Dñëe
(
db
, 
p
->
x
.
pSñe˘
);

752 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
x
.
pLi°
);

755 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_Sètic
) ){

756 
	`sqlôe3DbFªe
(
db
, 
p
);

758 
	}
}

759 
	$sqlôe3Ex¥Dñëe
(
sqlôe3
 *
db
, 
Ex¥
 *
p
){

760 if–
p
 ) 
	`sqlôe3Ex¥DñëeNN
(
db
,Ö);

761 
	}
}

768 
	$ex¥Såu˘Size
(
Ex¥
 *
p
){

769 if–
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
ËË 
EXPR_TOKENONLYSIZE
;

770 if–
	`Ex¥HasPr›îty
(
p
, 
EP_Redu˚d
ËË 
EXPR_REDUCEDSIZE
;

771  
EXPR_FULLSIZE
;

772 
	}
}

808 
	$du≥dEx¥Såu˘Size
(
Ex¥
 *
p
, 
Êags
){

809 
nSize
;

810 
	`as£π
–
Êags
==
EXPRDUP_REDUCE
 || flags==0 );

811 
	`as£π
–
EXPR_FULLSIZE
<=0xfff );

812 
	`as£π
–(0xff‡& (
EP_Redu˚d
|
EP_TokíO∆y
))==0 );

813 if–0==
Êags
 ){

814 
nSize
 = 
EXPR_FULLSIZE
;

816 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

817 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_FromJoö
) );

818 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_MemTokí
) );

819 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_NoRedu˚
) );

820 if–
p
->
pLe·
 ||Ö->
x
.
pLi°
 ){

821 
nSize
 = 
EXPR_REDUCEDSIZE
 | 
EP_Redu˚d
;

823 
	`as£π
–
p
->
pRight
==0 );

824 
nSize
 = 
EXPR_TOKENONLYSIZE
 | 
EP_TokíO∆y
;

827  
nSize
;

828 
	}
}

835 
	$du≥dEx¥NodeSize
(
Ex¥
 *
p
, 
Êags
){

836 
nByã
 = 
	`du≥dEx¥Såu˘Size
(
p
, 
Êags
) & 0xfff;

837 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë&&Ö->
u
.
zTokí
 ){

838 
nByã
 +
	`sqlôe3SåÀn30
(
p
->
u
.
zTokí
)+1;

840  
	`ROUND8
(
nByã
);

841 
	}
}

856 
	$du≥dEx¥Size
(
Ex¥
 *
p
, 
Êags
){

857 
nByã
 = 0;

858 if–
p
 ){

859 
nByã
 = 
	`du≥dEx¥NodeSize
(
p
, 
Êags
);

860 if–
Êags
&
EXPRDUP_REDUCE
 ){

861 
nByã
 +
	`du≥dEx¥Size
(
p
->
pLe·
, 
Êags
Ë+ du≥dEx¥Size’->
pRight
, flags);

864  
nByã
;

865 
	}
}

875 
Ex¥
 *
	$ex¥Dup
(
sqlôe3
 *
db
, 
Ex¥
 *
p
, 
dupFœgs
, 
u8
 **
pzBuf„r
){

876 
Ex¥
 *
pNew
;

877 
u8
 *
zAŒoc
;

878 
u32
 
°©icFœg
;

880 
	`as£π
–
db
!=0 );

881 
	`as£π
–
p
 );

882 
	`as£π
–
dupFœgs
==0 || dupFœgs==
EXPRDUP_REDUCE
 );

883 
	`as£π
–
pzBuf„r
==0 || 
dupFœgs
==
EXPRDUP_REDUCE
 );

886 if–
pzBuf„r
 ){

887 
zAŒoc
 = *
pzBuf„r
;

888 
°©icFœg
 = 
EP_Sètic
;

890 
zAŒoc
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
	`du≥dEx¥Size
(
p
, 
dupFœgs
));

891 
°©icFœg
 = 0;

893 
pNew
 = (
Ex¥
 *)
zAŒoc
;

895 if–
pNew
 ){

901 c⁄° 
nSåu˘Size
 = 
	`du≥dEx¥Såu˘Size
(
p
, 
dupFœgs
);

902 c⁄° 
nNewSize
 = 
nSåu˘Size
 & 0xfff;

903 
nTokí
;

904 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_I¡VÆue
Ë&&Ö->
u
.
zTokí
 ){

905 
nTokí
 = 
	`sqlôe3SåÀn30
(
p
->
u
.
zTokí
) + 1;

907 
nTokí
 = 0;

909 if–
dupFœgs
 ){

910 
	`as£π
–
	`Ex¥HasPr›îty
(
p
, 
EP_Redu˚d
)==0 );

911 
	`mem˝y
(
zAŒoc
, 
p
, 
nNewSize
);

913 
u32
 
nSize
 = (u32)
	`ex¥Såu˘Size
(
p
);

914 
	`mem˝y
(
zAŒoc
, 
p
, 
nSize
);

915 if–
nSize
<
EXPR_FULLSIZE
 ){

916 
	`mem£t
(&
zAŒoc
[
nSize
], 0, 
EXPR_FULLSIZE
-nSize);

921 
pNew
->
Êags
 &~(
EP_Redu˚d
|
EP_TokíO∆y
|
EP_Sètic
|
EP_MemTokí
);

922 
pNew
->
Êags
 |
nSåu˘Size
 & (
EP_Redu˚d
|
EP_TokíO∆y
);

923 
pNew
->
Êags
 |
°©icFœg
;

926 if–
nTokí
 ){

927 *
zTokí
 = 
pNew
->
u
.zTokí = (*)&
zAŒoc
[
nNewSize
];

928 
	`mem˝y
(
zTokí
, 
p
->
u
.zTokí, 
nTokí
);

931 if–0==((
p
->
Êags
|
pNew
->ÊagsË& 
EP_TokíO∆y
) ){

933 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

934 
pNew
->
x
.
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->x.pSñe˘, 
dupFœgs
);

936 
pNew
->
x
.
pLi°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->x.pLi°, 
dupFœgs
);

941 if–
	`Ex¥HasPr›îty
(
pNew
, 
EP_Redu˚d
|
EP_TokíO∆y
) ){

942 
zAŒoc
 +
	`du≥dEx¥NodeSize
(
p
, 
dupFœgs
);

943 if–
	`Ex¥HasPr›îty
(
pNew
, 
EP_Redu˚d
) ){

944 
pNew
->
pLe·
 = 
p
->pLeft ?

945 
	`ex¥Dup
(
db
, 
p
->
pLe·
, 
EXPRDUP_REDUCE
, &
zAŒoc
) : 0;

946 
pNew
->
pRight
 = 
p
->pRight ?

947 
	`ex¥Dup
(
db
, 
p
->
pRight
, 
EXPRDUP_REDUCE
, &
zAŒoc
) : 0;

949 if–
pzBuf„r
 ){

950 *
pzBuf„r
 = 
zAŒoc
;

953 if–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
) ){

954 
pNew
->
pLe·
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pLeft, 0);

955 
pNew
->
pRight
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pRight, 0);

959  
pNew
;

960 
	}
}

967 #i‚de‡
SQLITE_OMIT_CTE


968 
Wôh
 *
	$wôhDup
(
sqlôe3
 *
db
, 
Wôh
 *
p
){

969 
Wôh
 *
pRë
 = 0;

970 if–
p
 ){

971 
nByã
 = (*
p
Ë+ ’->
a
[0]Ë* (p->
nCã
-1);

972 
pRë
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

973 if–
pRë
 ){

974 
i
;

975 
pRë
->
nCã
 = 
p
->nCte;

976 
i
=0; i<
p
->
nCã
; i++){

977 
pRë
->
a
[
i
].
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->a[i].pSelect, 0);

978 
pRë
->
a
[
i
].
pCﬁs
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->a[i].pCols, 0);

979 
pRë
->
a
[
i
].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
p
->a[i].zName);

983  
pRë
;

984 
	}
}

986 
	#wôhDup
(
x
,
y
Ë0

	)

1006 
Ex¥
 *
	$sqlôe3Ex¥Dup
(
sqlôe3
 *
db
, 
Ex¥
 *
p
, 
Êags
){

1007 
	`as£π
–
Êags
==0 || fœgs==
EXPRDUP_REDUCE
 );

1008  
p
 ? 
	`ex¥Dup
(
db
,Ö, 
Êags
, 0) : 0;

1009 
	}
}

1010 
Ex¥Li°
 *
	$sqlôe3Ex¥Li°Dup
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
p
, 
Êags
){

1011 
Ex¥Li°
 *
pNew
;

1012 
Ex¥Li°_ôem
 *
pIãm
, *
pOldIãm
;

1013 
i
;

1014 
	`as£π
–
db
!=0 );

1015 if–
p
==0 )  0;

1016 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

1017 if–
pNew
==0 )  0;

1018 
pNew
->
nEx¥
 = 
i
 = 
p
->nExpr;

1019 if–(
Êags
 & 
EXPRDUP_REDUCE
)==0 ) 
i
=1; i<
p
->
nEx¥
; i+=i){}

1020 
pNew
->
a
 = 
pIãm
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
i
*(
p
->a[0]) );

1021 if–
pIãm
==0 ){

1022 
	`sqlôe3DbFªe
(
db
, 
pNew
);

1025 
pOldIãm
 = 
p
->
a
;

1026 
i
=0; i<
p
->
nEx¥
; i++, 
pIãm
++, 
pOldIãm
++){

1027 
Ex¥
 *
pOldEx¥
 = 
pOldIãm
->
pEx¥
;

1028 
pIãm
->
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOldEx¥
, 
Êags
);

1029 
pIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1030 
pIãm
->
zS∑n
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zSpan);

1031 
pIãm
->
s‹tOrdî
 = 
pOldIãm
->sortOrder;

1032 
pIãm
->
d⁄e
 = 0;

1033 
pIãm
->
bS∑nIsTab
 = 
pOldIãm
->bSpanIsTab;

1034 
pIãm
->
u
 = 
pOldIãm
->u;

1036  
pNew
;

1037 
	}
}

1045 #i‡!
deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_TRIGGER
) \

1046 || !
	$deföed
(
SQLITE_OMIT_SUBQUERY
)

1047 
SrcLi°
 *
	$sqlôe3SrcLi°Dup
(
sqlôe3
 *
db
, 
SrcLi°
 *
p
, 
Êags
){

1048 
SrcLi°
 *
pNew
;

1049 
i
;

1050 
nByã
;

1051 
	`as£π
–
db
!=0 );

1052 if–
p
==0 )  0;

1053 
nByã
 = (*
p
Ë+ (p->
nSrc
>0 ? ’->
a
[0]) * (p->nSrc-1) : 0);

1054 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nByã
 );

1055 if–
pNew
==0 )  0;

1056 
pNew
->
nSrc
 =ÖNew->
nAŒoc
 = 
p
->nSrc;

1057 
i
=0; i<
p
->
nSrc
; i++){

1058 
SrcLi°_ôem
 *
pNewIãm
 = &
pNew
->
a
[
i
];

1059 
SrcLi°_ôem
 *
pOldIãm
 = &
p
->
a
[
i
];

1060 
TabÀ
 *
pTab
;

1061 
pNewIãm
->
pSchema
 = 
pOldIãm
->pSchema;

1062 
pNewIãm
->
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zDatabase);

1063 
pNewIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1064 
pNewIãm
->
zAlüs
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zAlias);

1065 
pNewIãm
->
fg
 = 
pOldIãm
->fg;

1066 
pNewIãm
->
iCurs‹
 = 
pOldIãm
->iCursor;

1067 
pNewIãm
->
addrFûlSub
 = 
pOldIãm
->addrFillSub;

1068 
pNewIãm
->
ªgRëu∫
 = 
pOldIãm
->regReturn;

1069 if–
pNewIãm
->
fg
.
isIndexedBy
 ){

1070 
pNewIãm
->
u1
.
zIndexedBy
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->u1.zIndexedBy);

1072 
pNewIãm
->
pIBIndex
 = 
pOldIãm
->pIBIndex;

1073 if–
pNewIãm
->
fg
.
isTabFunc
 ){

1074 
pNewIãm
->
u1
.
pFuncArg
 =

1075 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pOldIãm
->
u1
.
pFuncArg
, 
Êags
);

1077 
pTab
 = 
pNewIãm
->pTab = 
pOldIãm
->pTab;

1078 if–
pTab
 ){

1079 
pTab
->
nRef
++;

1081 
pNewIãm
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pOldIãm
->pSñe˘, 
Êags
);

1082 
pNewIãm
->
pOn
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOldIãm
->pOn, 
Êags
);

1083 
pNewIãm
->
pUsög
 = 
	`sqlôe3IdLi°Dup
(
db
, 
pOldIãm
->pUsing);

1084 
pNewIãm
->
cﬁU£d
 = 
pOldIãm
->colUsed;

1086  
pNew
;

1087 
	}
}

1088 
IdLi°
 *
	$sqlôe3IdLi°Dup
(
sqlôe3
 *
db
, 
IdLi°
 *
p
){

1089 
IdLi°
 *
pNew
;

1090 
i
;

1091 
	`as£π
–
db
!=0 );

1092 if–
p
==0 )  0;

1093 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

1094 if–
pNew
==0 )  0;

1095 
pNew
->
nId
 = 
p
->nId;

1096 
pNew
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
p
->
nId
*(p->a[0]) );

1097 if–
pNew
->
a
==0 ){

1098 
	`sqlôe3DbFªe
(
db
, 
pNew
);

1104 
i
=0; i<
p
->
nId
; i++){

1105 
IdLi°_ôem
 *
pNewIãm
 = &
pNew
->
a
[
i
];

1106 
IdLi°_ôem
 *
pOldIãm
 = &
p
->
a
[
i
];

1107 
pNewIãm
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pOldIãm
->zName);

1108 
pNewIãm
->
idx
 = 
pOldIãm
->idx;

1110  
pNew
;

1111 
	}
}

1112 
Sñe˘
 *
	$sqlôe3Sñe˘Dup
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
Êags
){

1113 
Sñe˘
 *
pNew
, *
pPri‹
;

1114 
	`as£π
–
db
!=0 );

1115 if–
p
==0 )  0;

1116 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*
p
) );

1117 if–
pNew
==0 )  0;

1118 
pNew
->
pELi°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pELi°, 
Êags
);

1119 
pNew
->
pSrc
 = 
	`sqlôe3SrcLi°Dup
(
db
, 
p
->pSrc, 
Êags
);

1120 
pNew
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pWhîe, 
Êags
);

1121 
pNew
->
pGroupBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pGroupBy, 
Êags
);

1122 
pNew
->
pHavög
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pHavög, 
Êags
);

1123 
pNew
->
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
p
->pOrdîBy, 
Êags
);

1124 
pNew
->
›
 = 
p
->op;

1125 
pNew
->
pPri‹
 =ÖPri‹ = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
->pPri‹, 
Êags
);

1126 if–
pPri‹
 )ÖPri‹->
pNext
 = 
pNew
;

1127 
pNew
->
pNext
 = 0;

1128 
pNew
->
pLimô
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pLimô, 
Êags
);

1129 
pNew
->
pOff£t
 = 
	`sqlôe3Ex¥Dup
(
db
, 
p
->pOff£t, 
Êags
);

1130 
pNew
->
iLimô
 = 0;

1131 
pNew
->
iOff£t
 = 0;

1132 
pNew
->
£lFœgs
 = 
p
->£lFœg†& ~
SF_U£sEphemîÆ
;

1133 
pNew
->
addrO≥nEphm
[0] = -1;

1134 
pNew
->
addrO≥nEphm
[1] = -1;

1135 
pNew
->
nSñe˘Row
 = 
p
->nSelectRow;

1136 
pNew
->
pWôh
 = 
	`wôhDup
(
db
, 
p
->pWith);

1137 
	`sqlôe3Sñe˘SëName
(
pNew
, 
p
->
zSñName
);

1138  
pNew
;

1139 
	}
}

1141 
Sñe˘
 *
	$sqlôe3Sñe˘Dup
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
Êags
){

1142 
	`as£π
–
p
==0 );

1144 
	}
}

1156 
Ex¥Li°
 *
	$sqlôe3Ex¥Li°Aµíd
(

1157 
P¨£
 *
pP¨£
,

1158 
Ex¥Li°
 *
pLi°
,

1159 
Ex¥
 *
pEx¥


1161 
sqlôe3
 *
db
 = 
pP¨£
->db;

1162 
	`as£π
–
db
!=0 );

1163 if–
pLi°
==0 ){

1164 
pLi°
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Ex¥Li°
) );

1165 if–
pLi°
==0 ){

1166 
no_mem
;

1168 
pLi°
->
nEx¥
 = 0;

1169 
pLi°
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (pList->a[0]));

1170 if–
pLi°
->
a
==0 ) 
no_mem
;

1171 }if–(
pLi°
->
nEx¥
 & (pList->nExpr-1))==0 ){

1172 
Ex¥Li°_ôem
 *
a
;

1173 
	`as£π
–
pLi°
->
nEx¥
>0 );

1174 
a
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pLi°
->a,ÖLi°->
nEx¥
*2*(pList->a[0]));

1175 if–
a
==0 ){

1176 
no_mem
;

1178 
pLi°
->
a
 =á;

1180 
	`as£π
–
pLi°
->
a
!=0 );

1182 
Ex¥Li°_ôem
 *
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
++];

1183 
	`mem£t
(
pIãm
, 0, (*pItem));

1184 
pIãm
->
pEx¥
 =ÖExpr;

1186  
pLi°
;

1188 
no_mem
:

1190 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

1191 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1193 
	}
}

1198 
	$sqlôe3Ex¥Li°SëS‹tOrdî
(
Ex¥Li°
 *
p
, 
iS‹tOrdî
){

1199 if–
p
==0 ) ;

1200 
	`as£π
–
SQLITE_SO_UNDEFINED
<0 && 
SQLITE_SO_ASC
>=0 && 
SQLITE_SO_DESC
>0 );

1201 
	`as£π
–
p
->
nEx¥
>0 );

1202 if–
iS‹tOrdî
<0 ){

1203 
	`as£π
–
p
->
a
[p->
nEx¥
-1].
s‹tOrdî
==
SQLITE_SO_ASC
 );

1206 
p
->
a
[p->
nEx¥
-1].
s‹tOrdî
 = (
u8
)
iS‹tOrdî
;

1207 
	}
}

1217 
	$sqlôe3Ex¥Li°SëName
(

1218 
P¨£
 *
pP¨£
,

1219 
Ex¥Li°
 *
pLi°
,

1220 
Tokí
 *
pName
,

1221 
dequŸe


1223 
	`as£π
–
pLi°
!=0 || 
pP¨£
->
db
->
mÆlocFaûed
!=0 );

1224 if–
pLi°
 ){

1225 
Ex¥Li°_ôem
 *
pIãm
;

1226 
	`as£π
–
pLi°
->
nEx¥
>0 );

1227 
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
-1];

1228 
	`as£π
–
pIãm
->
zName
==0 );

1229 
pIãm
->
zName
 = 
	`sqlôe3DbSåNDup
(
pP¨£
->
db
, 
pName
->
z
,ÖName->
n
);

1230 if–
dequŸe
 ) 
	`sqlôe3DequŸe
(
pIãm
->
zName
);

1232 
	}
}

1242 
	$sqlôe3Ex¥Li°SëS∑n
(

1243 
P¨£
 *
pP¨£
,

1244 
Ex¥Li°
 *
pLi°
,

1245 
Ex¥S∑n
 *
pS∑n


1247 
sqlôe3
 *
db
 = 
pP¨£
->db;

1248 
	`as£π
–
pLi°
!=0 || 
db
->
mÆlocFaûed
!=0 );

1249 if–
pLi°
 ){

1250 
Ex¥Li°_ôem
 *
pIãm
 = &
pLi°
->
a
[pLi°->
nEx¥
-1];

1251 
	`as£π
–
pLi°
->
nEx¥
>0 );

1252 
	`as£π
–
db
->
mÆlocFaûed
 || 
pIãm
->
pEx¥
==
pS∑n
->pExpr );

1253 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zS∑n
);

1254 
pIãm
->
zS∑n
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pS∑n
->
zSèπ
,

1255 ()(
pS∑n
->
zEnd
 -ÖS∑n->
zSèπ
));

1257 
	}
}

1263 
	$sqlôe3Ex¥Li°CheckLígth
(

1264 
P¨£
 *
pP¨£
,

1265 
Ex¥Li°
 *
pELi°
,

1266 c⁄° *
zObje˘


1268 
mx
 = 
pP¨£
->
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
];

1269 
	`ã°ˇ£
–
pELi°
 &&ÖELi°->
nEx¥
==
mx
 );

1270 
	`ã°ˇ£
–
pELi°
 &&ÖELi°->
nEx¥
==
mx
+1 );

1271 if–
pELi°
 &&ÖELi°->
nEx¥
>
mx
 ){

1272 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™y cﬁumn†ö %s", 
zObje˘
);

1274 
	}
}

1279 
SQLITE_NOINLINE
 
	$ex¥Li°DñëeNN
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
pLi°
){

1280 
i
;

1281 
Ex¥Li°_ôem
 *
pIãm
;

1282 
	`as£π
–
pLi°
->
a
!=0 ||ÖLi°->
nEx¥
==0 );

1283 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nEx¥
; i++,ÖItem++){

1284 
	`sqlôe3Ex¥Dñëe
(
db
, 
pIãm
->
pEx¥
);

1285 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zName
);

1286 
	`sqlôe3DbFªe
(
db
, 
pIãm
->
zS∑n
);

1288 
	`sqlôe3DbFªe
(
db
, 
pLi°
->
a
);

1289 
	`sqlôe3DbFªe
(
db
, 
pLi°
);

1290 
	}
}

1291 
	$sqlôe3Ex¥Li°Dñëe
(
sqlôe3
 *
db
, 
Ex¥Li°
 *
pLi°
){

1292 if–
pLi°
 ) 
	`ex¥Li°DñëeNN
(
db
,ÖList);

1293 
	}
}

1299 
u32
 
	$sqlôe3Ex¥Li°Fœgs
(c⁄° 
Ex¥Li°
 *
pLi°
){

1300 
i
;

1301 
u32
 
m
 = 0;

1302 if–
pLi°
 ){

1303 
i
=0; i<
pLi°
->
nEx¥
; i++){

1304 
Ex¥
 *
pEx¥
 = 
pLi°
->
a
[
i
].pExpr;

1305 
	`as£π
–
pEx¥
!=0 );

1306 
m
 |
pEx¥
->
Êags
;

1309  
m
;

1310 
	}
}

1337 
	$ex¥NodeIsC⁄°™t
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

1342 if–
pWÆkî
->
eCode
==2 && 
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ){

1343 
pWÆkî
->
eCode
 = 0;

1344  
WRC_Ab‹t
;

1347  
pEx¥
->
›
 ){

1351 
TK_FUNCTION
:

1352 if–
pWÆkî
->
eCode
>=4 || 
	`Ex¥HasPr›îty
(
pEx¥
,
EP_C⁄°Func
) ){

1353  
WRC_C⁄töue
;

1355 
pWÆkî
->
eCode
 = 0;

1356  
WRC_Ab‹t
;

1358 
TK_ID
:

1359 
TK_COLUMN
:

1360 
TK_AGG_FUNCTION
:

1361 
TK_AGG_COLUMN
:

1362 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_ID
 );

1363 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

1364 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

1365 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

1366 if–
pWÆkî
->
eCode
==3 && 
pEx¥
->
iTabÀ
=ıWÆkî->
u
.
iCur
 ){

1367  
WRC_C⁄töue
;

1369 
pWÆkî
->
eCode
 = 0;

1370  
WRC_Ab‹t
;

1372 
TK_VARIABLE
:

1373 if–
pWÆkî
->
eCode
==5 ){

1377 
pEx¥
->
›
 = 
TK_NULL
;

1378 }if–
pWÆkî
->
eCode
==4 ){

1381 
pWÆkî
->
eCode
 = 0;

1382  
WRC_Ab‹t
;

1386 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_SELECT
 );

1387 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_EXISTS
 );

1388  
WRC_C⁄töue
;

1390 
	}
}

1391 
	$£À˘NodeIsC⁄°™t
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
NŸU£d
){

1392 
	`UNUSED_PARAMETER
(
NŸU£d
);

1393 
pWÆkî
->
eCode
 = 0;

1394  
WRC_Ab‹t
;

1395 
	}
}

1396 
	$ex¥IsC⁄°
(
Ex¥
 *
p
, 
öôFœg
, 
iCur
){

1397 
WÆkî
 
w
;

1398 
	`mem£t
(&
w
, 0, (w));

1399 
w
.
eCode
 = 
öôFœg
;

1400 
w
.
xEx¥CÆlback
 = 
ex¥NodeIsC⁄°™t
;

1401 
w
.
xSñe˘CÆlback
 = 
£À˘NodeIsC⁄°™t
;

1402 
w
.
u
.
iCur
 = iCur;

1403 
	`sqlôe3WÆkEx¥
(&
w
, 
p
);

1404  
w
.
eCode
;

1405 
	}
}

1415 
	$sqlôe3Ex¥IsC⁄°™t
(
Ex¥
 *
p
){

1416  
	`ex¥IsC⁄°
(
p
, 1, 0);

1417 
	}
}

1425 
	$sqlôe3Ex¥IsC⁄°™tNŸJoö
(
Ex¥
 *
p
){

1426  
	`ex¥IsC⁄°
(
p
, 2, 0);

1427 
	}
}

1435 
	$sqlôe3Ex¥IsTabÀC⁄°™t
(
Ex¥
 *
p
, 
iCur
){

1436  
	`ex¥IsC⁄°
(
p
, 3, 
iCur
);

1437 
	}
}

1448 
	$sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
Ex¥
 *
p
, 
u8
 
isInô
){

1449 
	`as£π
–
isInô
==0 || isInit==1 );

1450  
	`ex¥IsC⁄°
(
p
, 4+
isInô
, 0);

1451 
	}
}

1453 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


1458 
	$sqlôe3Ex¥C⁄èösSubquîy
(
Ex¥
 *
p
){

1459 
WÆkî
 
w
;

1460 
	`mem£t
(&
w
, 0, (w));

1461 
w
.
eCode
 = 1;

1462 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

1463 
w
.
xSñe˘CÆlback
 = 
£À˘NodeIsC⁄°™t
;

1464 
	`sqlôe3WÆkEx¥
(&
w
, 
p
);

1465  
w
.
eCode
==0;

1466 
	}
}

1475 
	$sqlôe3Ex¥IsI¡egî
(
Ex¥
 *
p
, *
pVÆue
){

1476 
rc
 = 0;

1480 
	`as£π
–
p
->
›
!=
TK_INTEGER
 || (p->
Êags
 & 
EP_I¡VÆue
)!=0

1481 || 
	`sqlôe3GëI¡32
(
p
->
u
.
zTokí
, &
rc
)==0 );

1483 if–
p
->
Êags
 & 
EP_I¡VÆue
 ){

1484 *
pVÆue
 = 
p
->
u
.
iVÆue
;

1487  
p
->
›
 ){

1488 
TK_UPLUS
: {

1489 
rc
 = 
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLe·
, 
pVÆue
);

1492 
TK_UMINUS
: {

1493 
v
;

1494 if–
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLe·
, &
v
) ){

1495 
	`as£π
–
v
!=(-2147483647-1) );

1496 *
pVÆue
 = -
v
;

1497 
rc
 = 1;

1503  
rc
;

1504 
	}
}

1520 
	$sqlôe3Ex¥C™BeNuŒ
(c⁄° 
Ex¥
 *
p
){

1521 
u8
 
›
;

1522  
p
->
›
==
TK_UPLUS
 ||Ö->›==
TK_UMINUS
 ){Ö =Ö->
pLe·
; }

1523 
›
 = 
p
->op;

1524 if–
›
==
TK_REGISTER
 ) o∞
p
->
›2
;

1525  
›
 ){

1526 
TK_INTEGER
:

1527 
TK_STRING
:

1528 
TK_FLOAT
:

1529 
TK_BLOB
:

1531 
TK_COLUMN
:

1532 
	`as£π
–
p
->
pTab
!=0 );

1533  
	`Ex¥HasPr›îty
(
p
, 
EP_C™BeNuŒ
) ||

1534 (
p
->
iCﬁumn
>=0 &&Ö->
pTab
->
aCﬁ
[p->iCﬁumn].
nŸNuŒ
==0);

1538 
	}
}

1550 
	$sqlôe3Ex¥NìdsNoAfföôyCh™ge
(c⁄° 
Ex¥
 *
p
, 
aff
){

1551 
u8
 
›
;

1552 if–
aff
==
SQLITE_AFF_BLOB
 )  1;

1553  
p
->
›
==
TK_UPLUS
 ||Ö->›==
TK_UMINUS
 ){Ö =Ö->
pLe·
; }

1554 
›
 = 
p
->op;

1555 if–
›
==
TK_REGISTER
 ) o∞
p
->
›2
;

1556  
›
 ){

1557 
TK_INTEGER
: {

1558  
aff
==
SQLITE_AFF_INTEGER
 ||áff==
SQLITE_AFF_NUMERIC
;

1560 
TK_FLOAT
: {

1561  
aff
==
SQLITE_AFF_REAL
 ||áff==
SQLITE_AFF_NUMERIC
;

1563 
TK_STRING
: {

1564  
aff
==
SQLITE_AFF_TEXT
;

1566 
TK_BLOB
: {

1569 
TK_COLUMN
: {

1570 
	`as£π
–
p
->
iTabÀ
>=0 );

1571  
p
->
iCﬁumn
<0

1572 && (
aff
==
SQLITE_AFF_INTEGER
 ||áff==
SQLITE_AFF_NUMERIC
);

1578 
	}
}

1583 
	$sqlôe3IsRowid
(c⁄° *
z
){

1584 if–
	`sqlôe3SåICmp
(
z
, "_ROWID_")==0 )  1;

1585 if–
	`sqlôe3SåICmp
(
z
, "ROWID")==0 )  1;

1586 if–
	`sqlôe3SåICmp
(
z
, "OID")==0 )  1;

1588 
	}
}

1597 #i‚de‡
SQLITE_OMIT_SUBQUERY


1598 
Sñe˘
 *
	$isC™did©eF‹InO±
(
Ex¥
 *
pX
){

1599 
Sñe˘
 *
p
;

1600 
SrcLi°
 *
pSrc
;

1601 
Ex¥Li°
 *
pELi°
;

1602 
Ex¥
 *
pRes
;

1603 
TabÀ
 *
pTab
;

1604 if–!
	`Ex¥HasPr›îty
(
pX
, 
EP_xIsSñe˘
) )  0;

1605 if–
	`Ex¥HasPr›îty
(
pX
, 
EP_V¨Sñe˘
) )  0;

1606 
p
 = 
pX
->
x
.
pSñe˘
;

1607 if–
p
->
pPri‹
 )  0;

1608 if–
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
) ){

1609 
	`ã°ˇ£
–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct );

1610 
	`ã°ˇ£
–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Aggregate );

1613 
	`as£π
–
p
->
pGroupBy
==0 );

1614 if–
p
->
pLimô
 )  0;

1615 
	`as£π
–
p
->
pOff£t
==0 );

1616 if–
p
->
pWhîe
 )  0;

1617 
pSrc
 = 
p
->pSrc;

1618 
	`as£π
–
pSrc
!=0 );

1619 if–
pSrc
->
nSrc
!=1 )  0;

1620 if–
pSrc
->
a
[0].
pSñe˘
 )  0;

1621 
pTab
 = 
pSrc
->
a
[0].pTab;

1622 
	`as£π
–
pTab
!=0 );

1623 
	`as£π
–
pTab
->
pSñe˘
==0 );

1624 if–
	`IsVútuÆ
(
pTab
) )  0;

1625 
pELi°
 = 
p
->pEList;

1626 if–
pELi°
->
nEx¥
!=1 )  0;

1627 
pRes
 = 
pELi°
->
a
[0].
pEx¥
;

1628 if–
pRes
->
›
!=
TK_COLUMN
 )  0;

1629 
	`as£π
–
pRes
->
iTabÀ
==
pSrc
->
a
[0].
iCurs‹
 );

1630  
p
;

1631 
	}
}

1638 
	$sqlôe3CodeOn˚
(
P¨£
 *
pP¨£
){

1639 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1640  
	`sqlôe3VdbeAddOp1
(
v
, 
OP_On˚
, 
pP¨£
->
nOn˚
++);

1641 
	}
}

1649 
	$sqlôe3SëHasNuŒFœg
(
Vdbe
 *
v
, 
iCur
, 
ªgHasNuŒ
){

1650 
addr1
;

1651 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgHasNuŒ
);

1652 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
iCur
); 
	`VdbeCovîage
(v);

1653 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iCur
, 0, 
ªgHasNuŒ
);

1654 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_TYPEOFARG
);

1655 
	`VdbeCommít
((
v
, "fú°_íåy_ö(%d)", 
iCur
));

1656 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

1657 
	}
}

1660 #i‚de‡
SQLITE_OMIT_SUBQUERY


1665 
	$sqlôe3InRhsIsC⁄°™t
(
Ex¥
 *
pIn
){

1666 
Ex¥
 *
pLHS
;

1667 
ªs
;

1668 
	`as£π
–!
	`Ex¥HasPr›îty
(
pIn
, 
EP_xIsSñe˘
) );

1669 
pLHS
 = 
pIn
->
pLe·
;

1670 
pIn
->
pLe·
 = 0;

1671 
ªs
 = 
	`sqlôe3Ex¥IsC⁄°™t
(
pIn
);

1672 
pIn
->
pLe·
 = 
pLHS
;

1673  
ªs
;

1674 
	}
}

1747 #i‚de‡
SQLITE_OMIT_SUBQUERY


1748 
	$sqlôe3FödInIndex
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pX
, 
u32
 
öFœgs
, *
¥RhsHasNuŒ
){

1749 
Sñe˘
 *
p
;

1750 
eTy≥
 = 0;

1751 
iTab
 = 
pP¨£
->
nTab
++;

1752 
mu°BeUnique
;

1753 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1755 
	`as£π
–
pX
->
›
==
TK_IN
 );

1756 
mu°BeUnique
 = (
öFœgs
 & 
IN_INDEX_LOOP
)!=0;

1762 if–
pP¨£
->
nEº
==0 && (
p
 = 
	`isC™did©eF‹InO±
(
pX
))!=0 ){

1763 
sqlôe3
 *
db
 = 
pP¨£
->db;

1764 
TabÀ
 *
pTab
;

1765 
Ex¥
 *
pEx¥
;

1766 
i16
 
iCﬁ
;

1767 
i16
 
iDb
;

1769 
	`as£π
–
p
->
pELi°
!=0 );

1770 
	`as£π
–
p
->
pELi°
->
a
[0].
pEx¥
!=0 );

1771 
	`as£π
–
p
->
pSrc
!=0 );

1772 
pTab
 = 
p
->
pSrc
->
a
[0].pTab;

1773 
pEx¥
 = 
p
->
pELi°
->
a
[0].pExpr;

1774 
iCﬁ
 = (
i16
)
pEx¥
->
iCﬁumn
;

1777 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

1778 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1779 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

1785 
	`as£π
(
v
);

1786 if–
iCﬁ
<0 ){

1787 
iAddr
 = 
	`sqlôe3CodeOn˚
(
pP¨£
);

1788 
	`VdbeCovîage
(
v
);

1790 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iTab
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

1791 
eTy≥
 = 
IN_INDEX_ROWID
;

1793 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddr
);

1795 
Index
 *
pIdx
;

1800 
CﬁlSeq
 *
pReq
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pX
->
pLe·
, 
pEx¥
);

1806 
afföôy_ok
 = 
	`sqlôe3IndexAfföôyOk
(
pX
, 
pTab
->
aCﬁ
[
iCﬁ
].
afföôy
);

1808 
pIdx
=
pTab
->
pIndex
;ÖIdx && 
eTy≥
==0 && 
afföôy_ok
;ÖIdxıIdx->
pNext
){

1809 if–(
pIdx
->
aiCﬁumn
[0]==
iCﬁ
)

1810 && 
	`sqlôe3FödCﬁlSeq
(
db
, 
	`ENC
(db), 
pIdx
->
azCﬁl
[0], 0)==
pReq


1811 && (!
mu°BeUnique
 || (
pIdx
->
nKeyCﬁ
==1 && 
	`IsUniqueIndex
(pIdx)))

1813 
iAddr
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

1814 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iTab
, 
pIdx
->
äum
, 
iDb
);

1815 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1816 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

1817 
	`as£π
–
IN_INDEX_INDEX_DESC
 =
IN_INDEX_INDEX_ASC
+1 );

1818 
eTy≥
 = 
IN_INDEX_INDEX_ASC
 + 
pIdx
->
aS‹tOrdî
[0];

1820 if–
¥RhsHasNuŒ
 && !
pTab
->
aCﬁ
[
iCﬁ
].
nŸNuŒ
 ){

1821 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


1822 c⁄° 
i64
 
sO√
 = 1;

1823 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
,

1824 
iTab
, 0, 0, (
u8
*)&
sO√
, 
P4_INT64
);

1826 *
¥RhsHasNuŒ
 = ++
pP¨£
->
nMem
;

1827 
	`sqlôe3SëHasNuŒFœg
(
v
, 
iTab
, *
¥RhsHasNuŒ
);

1829 
	`sqlôe3VdbeJumpHîe
(
v
, 
iAddr
);

1842 if–
eTy≥
==0

1843 && (
öFœgs
 & 
IN_INDEX_NOOP_OK
)

1844 && !
	`Ex¥HasPr›îty
(
pX
, 
EP_xIsSñe˘
)

1845 && (!
	`sqlôe3InRhsIsC⁄°™t
(
pX
Ë||ÖX->
x
.
pLi°
->
nEx¥
<=2)

1847 
eTy≥
 = 
IN_INDEX_NOOP
;

1851 if–
eTy≥
==0 ){

1855 
u32
 
ßvedNQuîyLo›
 = 
pP¨£
->
nQuîyLo›
;

1856 
rMayHaveNuŒ
 = 0;

1857 
eTy≥
 = 
IN_INDEX_EPH
;

1858 if–
öFœgs
 & 
IN_INDEX_LOOP
 ){

1859 
pP¨£
->
nQuîyLo›
 = 0;

1860 if–
pX
->
pLe·
->
iCﬁumn
<0 && !
	`Ex¥HasPr›îty
’X, 
EP_xIsSñe˘
) ){

1861 
eTy≥
 = 
IN_INDEX_ROWID
;

1863 }if–
¥RhsHasNuŒ
 ){

1864 *
¥RhsHasNuŒ
 = 
rMayHaveNuŒ
 = ++
pP¨£
->
nMem
;

1866 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
pX
, 
rMayHaveNuŒ
, 
eTy≥
==
IN_INDEX_ROWID
);

1867 
pP¨£
->
nQuîyLo›
 = 
ßvedNQuîyLo›
;

1869 
pX
->
iTabÀ
 = 
iTab
;

1871  
eTy≥
;

1872 
	}
}

1902 #i‚de‡
SQLITE_OMIT_SUBQUERY


1903 
	$sqlôe3CodeSub£À˘
(

1904 
P¨£
 *
pP¨£
,

1905 
Ex¥
 *
pEx¥
,

1906 
rHasNuŒFœg
,

1907 
isRowid


1909 
jmpIfDy«mic
 = -1;

1910 
rReg
 = 0;

1911 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1912 if–
	`NEVER
(
v
==0) )  0;

1913 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

1925 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_V¨Sñe˘
) ){

1926 
jmpIfDy«mic
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

1929 #i‚de‡
SQLITE_OMIT_EXPLAIN


1930 if–
pP¨£
->
ex∂aö
==2 ){

1931 *
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "EXECUTE %s%s SUBQUERY %d",

1932 
jmpIfDy«mic
>=0?"":"CORRELATED ",

1933 
pEx¥
->
›
==
TK_IN
?"LIST":"SCALAR",

1934 
pP¨£
->
iNextSñe˘Id


1936 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

1940  
pEx¥
->
›
 ){

1941 
TK_IN
: {

1942 
afföôy
;

1943 
addr
;

1944 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

1945 
KeyInfo
 *
pKeyInfo
 = 0;

1947 
afföôy
 = 
	`sqlôe3Ex¥Afföôy
(
pLe·
);

1962 
pEx¥
->
iTabÀ
 = 
pP¨£
->
nTab
++;

1963 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
pEx¥
->
iTabÀ
, !
isRowid
);

1964 
pKeyInfo
 = 
isRowid
 ? 0 : 
	`sqlôe3KeyInfoAŒoc
(
pP¨£
->
db
, 1, 1);

1966 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

1972 
Sñe˘
 *
pSñe˘
 = 
pEx¥
->
x
.pSelect;

1973 
Sñe˘De°
 
de°
;

1974 
Ex¥Li°
 *
pELi°
;

1976 
	`as£π
–!
isRowid
 );

1977 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_Së
, 
pEx¥
->
iTabÀ
);

1978 
de°
.
affSd°
 = (
u8
)
afföôy
;

1979 
	`as£π
–(
pEx¥
->
iTabÀ
&0x0000FFFF)==pExpr->iTable );

1980 
pSñe˘
->
iLimô
 = 0;

1981 
	`ã°ˇ£
–
pSñe˘
->
£lFœgs
 & 
SF_Di°ö˘
 );

1982 
	`ã°ˇ£
–
pKeyInfo
==0 );

1983 if–
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
) ){

1984 
	`sqlôe3KeyInfoUƒef
(
pKeyInfo
);

1987 
pELi°
 = 
pSñe˘
->pEList;

1988 
	`as£π
–
pKeyInfo
!=0 );

1989 
	`as£π
–
pELi°
!=0 );

1990 
	`as£π
–
pELi°
->
nEx¥
>0 );

1991 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyInfo
) );

1992 
pKeyInfo
->
aCﬁl
[0] = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
,

1993 
pELi°
->
a
[0].
pEx¥
);

1994 }if–
	`ALWAYS
(
pEx¥
->
x
.
pLi°
!=0) ){

2002 
i
;

2003 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

2004 
Ex¥Li°_ôem
 *
pIãm
;

2005 
r1
, 
r2
, 
r3
;

2007 if–!
afföôy
 ){

2008 
afföôy
 = 
SQLITE_AFF_BLOB
;

2010 if–
pKeyInfo
 ){

2011 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyInfo
) );

2012 
pKeyInfo
->
aCﬁl
[0] = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

2016 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2017 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2018 if–
isRowid
 ) 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
r2
);

2019 
i
=
pLi°
->
nEx¥
, 
pIãm
ıLi°->
a
; i>0; i--,ÖItem++){

2020 
Ex¥
 *
pE2
 = 
pIãm
->
pEx¥
;

2021 
iVÆToIns
;

2028 if–
jmpIfDy«mic
>=0 && !
	`sqlôe3Ex¥IsC⁄°™t
(
pE2
) ){

2029 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
jmpIfDy«mic
);

2030 
jmpIfDy«mic
 = -1;

2034 if–
isRowid
 && 
	`sqlôe3Ex¥IsI¡egî
(
pE2
, &
iVÆToIns
) ){

2035 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£πI¡
, 
pEx¥
->
iTabÀ
, 
r2
, 
iVÆToIns
);

2037 
r3
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pE2
, 
r1
);

2038 if–
isRowid
 ){

2039 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Mu°BeI¡
, 
r3
,

2040 
	`sqlôe3VdbeCuºítAddr
(
v
)+2);

2041 
	`VdbeCovîage
(
v
);

2042 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
pEx¥
->
iTabÀ
, 
r2
, 
r3
);

2044 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
r3
, 1, 
r2
, &
afföôy
, 1);

2045 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
r3
, 1);

2046 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
pEx¥
->
iTabÀ
, 
r2
);

2050 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2051 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

2053 if–
pKeyInfo
 ){

2054 
	`sqlôe3VdbeCh™geP4
(
v
, 
addr
, (*)
pKeyInfo
, 
P4_KEYINFO
);

2059 
TK_EXISTS
:

2060 
TK_SELECT
:

2068 
Sñe˘
 *
pSñ
;

2069 
Sñe˘De°
 
de°
;

2071 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_EXISTS
 );

2072 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_SELECT
 );

2073 
	`as£π
–
pEx¥
->
›
==
TK_EXISTS
 ||ÖEx¥->›==
TK_SELECT
 );

2075 
	`as£π
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

2076 
pSñ
 = 
pEx¥
->
x
.
pSñe˘
;

2077 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 0, ++
pP¨£
->
nMem
);

2078 if–
pEx¥
->
›
==
TK_SELECT
 ){

2079 
de°
.
eDe°
 = 
SRT_Mem
;

2080 
de°
.
iSd°
 = de°.
iSDP¨m
;

2081 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
de°
.
iSDP¨m
);

2082 
	`VdbeCommít
((
v
, "Init subqueryÑesult"));

2084 
de°
.
eDe°
 = 
SRT_Exi°s
;

2085 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
de°
.
iSDP¨m
);

2086 
	`VdbeCommít
((
v
, "Init EXISTSÑesult"));

2088 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pSñ
->
pLimô
);

2089 
pSñ
->
pLimô
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_INTEGER
, 0, 0,

2090 &
sqlôe3I¡Tokís
[1]);

2091 
pSñ
->
iLimô
 = 0;

2092 
pSñ
->
£lFœgs
 &~
SF_Mu…iVÆue
;

2093 if–
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñ
, &
de°
) ){

2096 
rReg
 = 
de°
.
iSDP¨m
;

2097 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

2102 if–
rHasNuŒFœg
 ){

2103 
	`sqlôe3SëHasNuŒFœg
(
v
, 
pEx¥
->
iTabÀ
, 
rHasNuŒFœg
);

2106 if–
jmpIfDy«mic
>=0 ){

2107 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmpIfDy«mic
);

2109 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

2111  
rReg
;

2112 
	}
}

2115 #i‚de‡
SQLITE_OMIT_SUBQUERY


2133 
	$sqlôe3Ex¥CodeIN
(

2134 
P¨£
 *
pP¨£
,

2135 
Ex¥
 *
pEx¥
,

2136 
de°IfFÆ£
,

2137 
de°IfNuŒ


2139 
rRhsHasNuŒ
 = 0;

2140 
afföôy
;

2141 
eTy≥
;

2142 
r1
;

2143 
Vdbe
 *
v
;

2148 
v
 = 
pP¨£
->
pVdbe
;

2149 
	`as£π
–
v
!=0 );

2150 
	`VdbeNo›Commít
((
v
, "begin INÉxpr"));

2151 
eTy≥
 = 
	`sqlôe3FödInIndex
(
pP¨£
, 
pEx¥
,

2152 
IN_INDEX_MEMBERSHIP
 | 
IN_INDEX_NOOP_OK
,

2153 
de°IfFÆ£
==
de°IfNuŒ
 ? 0 : &
rRhsHasNuŒ
);

2159 
afföôy
 = 
	`com∑ris⁄Afföôy
(
pEx¥
);

2163 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

2164 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2165 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
->
pLe·
, 
r1
);

2171 if–
eTy≥
==
IN_INDEX_NOOP
 ){

2172 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

2173 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

2174 
œbñOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2175 
r2
, 
ªgToFªe
;

2176 
ªgCkNuŒ
 = 0;

2177 
ii
;

2178 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

2179 if–
de°IfNuŒ
!=
de°IfFÆ£
 ){

2180 
ªgCkNuŒ
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2181 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_BôAnd
, 
r1
,Ñ1, 
ªgCkNuŒ
);

2183 
ii
=0; ii<
pLi°
->
nEx¥
; ii++){

2184 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pLi°
->
a
[
ii
].
pEx¥
, &
ªgToFªe
);

2185 if–
ªgCkNuŒ
 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pLi°
->
a
[
ii
].
pEx¥
) ){

2186 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_BôAnd
, 
ªgCkNuŒ
, 
r2
,ÑegCkNull);

2188 if–
ii
<
pLi°
->
nEx¥
-1 || 
de°IfNuŒ
!=
de°IfFÆ£
 ){

2189 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Eq
, 
r1
, 
œbñOk
, 
r2
,

2190 (*)
pCﬁl
, 
P4_COLLSEQ
);

2191 
	`VdbeCovîageIf
(
v
, 
ii
<
pLi°
->
nEx¥
-1);

2192 
	`VdbeCovîageIf
(
v
, 
ii
==
pLi°
->
nEx¥
-1);

2193 
	`sqlôe3VdbeCh™geP5
(
v
, 
afföôy
);

2195 
	`as£π
–
de°IfNuŒ
==
de°IfFÆ£
 );

2196 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ne
, 
r1
, 
de°IfFÆ£
, 
r2
,

2197 (*)
pCﬁl
, 
P4_COLLSEQ
); 
	`VdbeCovîage
(
v
);

2198 
	`sqlôe3VdbeCh™geP5
(
v
, 
afföôy
 | 
SQLITE_JUMPIFNULL
);

2200 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgToFªe
);

2202 if–
ªgCkNuŒ
 ){

2203 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgCkNuŒ
, 
de°IfNuŒ
); 
	`VdbeCovîage
(v);

2204 
	`sqlôe3VdbeGŸo
(
v
, 
de°IfFÆ£
);

2206 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñOk
);

2207 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgCkNuŒ
);

2213 if–
	`sqlôe3Ex¥C™BeNuŒ
(
pEx¥
->
pLe·
) ){

2214 if–
de°IfNuŒ
==
de°IfFÆ£
 ){

2217 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
r1
, 
de°IfNuŒ
); 
	`VdbeCovîage
(v);

2219 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
r1
); 
	`VdbeCovîage
(v);

2220 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
);

2221 
	`VdbeCovîage
(
v
);

2222 
	`sqlôe3VdbeGŸo
(
v
, 
de°IfNuŒ
);

2223 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2227 if–
eTy≥
==
IN_INDEX_ROWID
 ){

2230 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
, 
r1
);

2231 
	`VdbeCovîage
(
v
);

2235 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
r1
, 1, 0, &
afföôy
, 1);

2243 
	`as£π
–
de°IfFÆ£
!=
de°IfNuŒ
 || 
rRhsHasNuŒ
==0 );

2244 if–
rRhsHasNuŒ
==0 ){

2252 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
pEx¥
->
iTabÀ
, 
de°IfFÆ£
, 
r1
, 1);

2253 
	`VdbeCovîage
(
v
);

2259 
addr1
;

2267 
addr1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
pEx¥
->
iTabÀ
, 0, 
r1
, 1);

2268 
	`VdbeCovîage
(
v
);

2269 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
rRhsHasNuŒ
, 
de°IfNuŒ
);

2270 
	`VdbeCovîage
(
v
);

2271 
	`sqlôe3VdbeGŸo
(
v
, 
de°IfFÆ£
);

2272 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2276 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2277 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

2278 
	`VdbeCommít
((
v
, "end INÉxpr"));

2279 
	}
}

2282 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


2291 
	$codeRól
(
Vdbe
 *
v
, c⁄° *
z
, 
√g©eFœg
, 
iMem
){

2292 if–
	`ALWAYS
(
z
!=0) ){

2293 
vÆue
;

2294 
	`sqlôe3AtoF
(
z
, &
vÆue
, 
	`sqlôe3SåÀn30
(z), 
SQLITE_UTF8
);

2295 
	`as£π
–!
	`sqlôe3IsNaN
(
vÆue
) );

2296 if–
√g©eFœg
 ) 
vÆue
 = -value;

2297 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_Ról
, 0, 
iMem
, 0, (
u8
*)&
vÆue
, 
P4_REAL
);

2299 
	}
}

2309 
	$codeI¡egî
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
√gFœg
, 
iMem
){

2310 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2311 if–
pEx¥
->
Êags
 & 
EP_I¡VÆue
 ){

2312 
i
 = 
pEx¥
->
u
.
iVÆue
;

2313 
	`as£π
–
i
>=0 );

2314 if–
√gFœg
 ) 
i
 = -i;

2315 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
i
, 
iMem
);

2317 
c
;

2318 
i64
 
vÆue
;

2319 c⁄° *
z
 = 
pEx¥
->
u
.
zTokí
;

2320 
	`as£π
–
z
!=0 );

2321 
c
 = 
	`sqlôe3DecOrHexToI64
(
z
, &
vÆue
);

2322 if–
c
==0 || (c==2 && 
√gFœg
) ){

2323 if–
√gFœg
 ){ 
vÆue
 = 
c
==2 ? 
SMALLEST_INT64
 : -value; }

2324 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_I¡64
, 0, 
iMem
, 0, (
u8
*)&
vÆue
, 
P4_INT64
);

2326 #ifde‡
SQLITE_OMIT_FLOATING_POINT


2327 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ovîsized i¡egî: %s%s", 
√gFœg
 ? "-" : "", 
z
);

2329 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


2330 if–
	`sqlôe3_°∫icmp
(
z
,"0x",2)==0 ){

2331 
	`sqlôe3Eº‹Msg
(
pP¨£
, "hexÜôîÆÅoÿbig: %s", 
z
);

2335 
	`codeRól
(
v
, 
z
, 
√gFœg
, 
iMem
);

2340 
	}
}

2342 #i‡
deföed
(
SQLITE_DEBUG
)

2346 
	$ˇcheIsVÆid
(
P¨£
 *
pP¨£
){

2347 
i
, 
n
;

2348 
i
=
n
=0; i<
SQLITE_N_COLCACHE
; i++){

2349 if–
pP¨£
->
aCﬁCache
[
i
].
iReg
>0 ) 
n
++;

2351  
n
==
pP¨£
->
nCﬁCache
;

2352 
	}
}

2358 
	$ˇcheE¡ryCÀ¨
(
P¨£
 *
pP¨£
, 
yCﬁCache
 *
p
){

2359 if–
p
->
ãmpReg
 ){

2360 if–
pP¨£
->
nTempReg
<
	`AºaySize
’P¨£->
aTempReg
) ){

2361 
pP¨£
->
aTempReg
[pP¨£->
nTempReg
++] = 
p
->
iReg
;

2363 
p
->
ãmpReg
 = 0;

2365 
p
->
iReg
 = 0;

2366 
pP¨£
->
nCﬁCache
--;

2367 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 || 
	`ˇcheIsVÆid
(pParse) );

2368 
	}
}

2375 
	$sqlôe3Ex¥CacheSt‹e
(
P¨£
 *
pP¨£
, 
iTab
, 
iCﬁ
, 
iReg
){

2376 
i
;

2377 
möLru
;

2378 
idxLru
;

2379 
yCﬁCache
 *
p
;

2382 
	`as£π
–
iReg
>0 || 
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
 );

2383 
	`as£π
–
iCﬁ
>=-1 && iCol<32768 );

2389 if–
	`O±imiz©i⁄DißbÀd
(
pP¨£
->
db
, 
SQLITE_CﬁumnCache
) ) ;

2396 #i‚de‡
NDEBUG


2397 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2398 
	`as£π
–
p
->
iReg
==0 ||Ö->
iTabÀ
!=
iTab
 ||Ö->
iCﬁumn
!=
iCﬁ
 );

2403 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2404 if–
p
->
iReg
==0 ){

2405 
p
->
iLevñ
 = 
pP¨£
->
iCacheLevñ
;

2406 
p
->
iTabÀ
 = 
iTab
;

2407 
p
->
iCﬁumn
 = 
iCﬁ
;

2408 
p
->
iReg
 = iReg;

2409 
p
->
ãmpReg
 = 0;

2410 
p
->
Ãu
 = 
pP¨£
->
iCacheC¡
++;

2411 
pP¨£
->
nCﬁCache
++;

2412 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 || 
	`ˇcheIsVÆid
(pParse) );

2418 
möLru
 = 0x7fffffff;

2419 
idxLru
 = -1;

2420 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2421 if–
p
->
Ãu
<
möLru
 ){

2422 
idxLru
 = 
i
;

2423 
möLru
 = 
p
->
Ãu
;

2426 if–
	`ALWAYS
(
idxLru
>=0) ){

2427 
p
 = &
pP¨£
->
aCﬁCache
[
idxLru
];

2428 
p
->
iLevñ
 = 
pP¨£
->
iCacheLevñ
;

2429 
p
->
iTabÀ
 = 
iTab
;

2430 
p
->
iCﬁumn
 = 
iCﬁ
;

2431 
p
->
iReg
 = iReg;

2432 
p
->
ãmpReg
 = 0;

2433 
p
->
Ãu
 = 
pP¨£
->
iCacheC¡
++;

2434 
	`as£π
–
	`ˇcheIsVÆid
(
pP¨£
) );

2437 
	}
}

2443 
	$sqlôe3Ex¥CacheRemove
(
P¨£
 *
pP¨£
, 
iReg
, 
nReg
){

2444 
yCﬁCache
 *
p
;

2445 if–
iReg
<=0 || 
pP¨£
->
nCﬁCache
==0 ) ;

2446 
p
 = &
pP¨£
->
aCﬁCache
[
SQLITE_N_COLCACHE
-1];

2448 if–
p
->
iReg
 >iReg &&Ö->iReg < iReg+
nReg
 ) 
	`ˇcheE¡ryCÀ¨
(
pP¨£
,Ö);

2449 if–
p
==
pP¨£
->
aCﬁCache
 ) ;

2450 
p
--;

2452 
	}
}

2459 
	$sqlôe3Ex¥CachePush
(
P¨£
 *
pP¨£
){

2460 
pP¨£
->
iCacheLevñ
++;

2461 #ifde‡
SQLITE_DEBUG


2462 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

2463 
	`¥ötf
("PUSHÅÿ%d\n", 
pP¨£
->
iCacheLevñ
);

2466 
	}
}

2473 
	$sqlôe3Ex¥CacheP›
(
P¨£
 *
pP¨£
){

2474 
i
;

2475 
yCﬁCache
 *
p
;

2476 
	`as£π
–
pP¨£
->
iCacheLevñ
>=1 );

2477 
pP¨£
->
iCacheLevñ
--;

2478 #ifde‡
SQLITE_DEBUG


2479 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

2480 
	`¥ötf
("POPÅÿ%d\n", 
pP¨£
->
iCacheLevñ
);

2483 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2484 if–
p
->
iReg
 &&Ö->
iLevñ
>
pP¨£
->
iCacheLevñ
 ){

2485 
	`ˇcheE¡ryCÀ¨
(
pP¨£
, 
p
);

2488 
	}
}

2496 
	$sqlôe3Ex¥CachePöRegi°î
(
P¨£
 *
pP¨£
, 
iReg
){

2497 
i
;

2498 
yCﬁCache
 *
p
;

2499 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2500 if–
p
->
iReg
==iReg ){

2501 
p
->
ãmpReg
 = 0;

2504 
	}
}

2509 
	$sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(

2510 
P¨£
 *
pP¨£
,

2511 
Index
 *
pIdx
,

2512 
iTabCur
,

2513 
iIdxCﬁ
,

2514 
ªgOut


2516 
i16
 
iTabCﬁ
 = 
pIdx
->
aiCﬁumn
[
iIdxCﬁ
];

2517 if–
iTabCﬁ
==
XN_EXPR
 ){

2518 
	`as£π
–
pIdx
->
aCﬁEx¥
 );

2519 
	`as£π
–
pIdx
->
aCﬁEx¥
->
nEx¥
>
iIdxCﬁ
 );

2520 
pP¨£
->
iSñfTab
 = 
iTabCur
;

2521 
	`sqlôe3Ex¥CodeC›y
(
pP¨£
, 
pIdx
->
aCﬁEx¥
->
a
[
iIdxCﬁ
].
pEx¥
, 
ªgOut
);

2523 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
pP¨£
->
pVdbe
, 
pIdx
->
pTabÀ
, 
iTabCur
,

2524 
iTabCﬁ
, 
ªgOut
);

2526 
	}
}

2531 
	$sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(

2532 
Vdbe
 *
v
,

2533 
TabÀ
 *
pTab
,

2534 
iTabCur
,

2535 
iCﬁ
,

2536 
ªgOut


2538 if–
iCﬁ
<0 || iCﬁ==
pTab
->
iPKey
 ){

2539 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iTabCur
, 
ªgOut
);

2541 
›
 = 
	`IsVútuÆ
(
pTab
Ë? 
OP_VCﬁumn
 : 
OP_Cﬁumn
;

2542 
x
 = 
iCﬁ
;

2543 if–!
	`HasRowid
(
pTab
Ë&& !
	`IsVútuÆ
(pTab) ){

2544 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
	`sqlôe3Prim¨yKeyIndex
(
pTab
), 
iCﬁ
);

2546 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iTabCur
, 
x
, 
ªgOut
);

2548 if–
iCﬁ
>=0 ){

2549 
	`sqlôe3CﬁumnDeÁu…
(
v
, 
pTab
, 
iCﬁ
, 
ªgOut
);

2551 
	}
}

2565 
	$sqlôe3Ex¥CodeGëCﬁumn
(

2566 
P¨£
 *
pP¨£
,

2567 
TabÀ
 *
pTab
,

2568 
iCﬁumn
,

2569 
iTabÀ
,

2570 
iReg
,

2571 
u8
 
p5


2573 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2574 
i
;

2575 
yCﬁCache
 *
p
;

2577 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2578 if–
p
->
iReg
>0 &&Ö->
iTabÀ
==iTabÀ &&Ö->
iCﬁumn
==iColumn ){

2579 
p
->
Ãu
 = 
pP¨£
->
iCacheC¡
++;

2580 
	`sqlôe3Ex¥CachePöRegi°î
(
pP¨£
, 
p
->
iReg
);

2581  
p
->
iReg
;

2584 
	`as£π
–
v
!=0 );

2585 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iTabÀ
, 
iCﬁumn
, 
iReg
);

2586 if–
p5
 ){

2587 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

2589 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iTabÀ
, 
iCﬁumn
, 
iReg
);

2591  
iReg
;

2592 
	}
}

2593 
	$sqlôe3Ex¥CodeGëCﬁumnToReg
(

2594 
P¨£
 *
pP¨£
,

2595 
TabÀ
 *
pTab
,

2596 
iCﬁumn
,

2597 
iTabÀ
,

2598 
iReg


2600 
r1
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, 
iCﬁumn
, 
iTabÀ
, 
iReg
, 0);

2601 if–
r1
!=
iReg
 ) 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_SC›y
,Ñ1, iReg);

2602 
	}
}

2608 
	$sqlôe3Ex¥CacheCÀ¨
(
P¨£
 *
pP¨£
){

2609 
i
;

2610 
yCﬁCache
 *
p
;

2612 #i‡
SQLITE_DEBUG


2613 if–
pP¨£
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

2614 
	`¥ötf
("CLEAR\n");

2617 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2618 if–
p
->
iReg
 ){

2619 
	`ˇcheE¡ryCÀ¨
(
pP¨£
, 
p
);

2622 
	}
}

2628 
	$sqlôe3Ex¥CacheAfföôyCh™ge
(
P¨£
 *
pP¨£
, 
iSèπ
, 
iCou¡
){

2629 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iSèπ
, 
iCou¡
);

2630 
	}
}

2636 
	$sqlôe3Ex¥CodeMove
(
P¨£
 *
pP¨£
, 
iFrom
, 
iTo
, 
nReg
){

2637 
	`as£π
–
iFrom
>=
iTo
+
nReg
 || iFrom+nReg<=iTo );

2638 
	`sqlôe3VdbeAddOp3
(
pP¨£
->
pVdbe
, 
OP_Move
, 
iFrom
, 
iTo
, 
nReg
);

2639 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iFrom
, 
nReg
);

2640 
	}
}

2642 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_COVERAGE_TEST
)

2650 
	$u£dAsCﬁumnCache
(
P¨£
 *
pP¨£
, 
iFrom
, 
iTo
){

2651 
i
;

2652 
yCﬁCache
 *
p
;

2653 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

2654 
r
 = 
p
->
iReg
;

2655 if–
r
>=
iFrom
 &&Ñ<=
iTo
 )  1;

2658 
	}
}

2665 
	$ex¥ToRegi°î
(
Ex¥
 *
p
, 
iReg
){

2666 
p
->
›2
 =Ö->
›
;

2667 
p
->
›
 = 
TK_REGISTER
;

2668 
p
->
iTabÀ
 = 
iReg
;

2669 
	`Ex¥CÀ¨Pr›îty
(
p
, 
EP_Skù
);

2670 
	}
}

2683 
	$sqlôe3Ex¥CodeT¨gë
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

2684 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2685 
›
;

2686 
öReg
 = 
èrgë
;

2687 
ªgFªe1
 = 0;

2688 
ªgFªe2
 = 0;

2689 
r1
, 
r2
, 
r3
, 
r4
;

2690 
sqlôe3
 *
db
 = 
pP¨£
->db;

2691 
Ex¥
 
ãmpX
;

2693 
	`as£π
–
èrgë
>0 &&Å¨gë<=
pP¨£
->
nMem
 );

2694 if–
v
==0 ){

2695 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

2699 if–
pEx¥
==0 ){

2700 
›
 = 
TK_NULL
;

2702 
›
 = 
pEx¥
->op;

2704  
›
 ){

2705 
TK_AGG_COLUMN
: {

2706 
AggInfo
 *
pAggInfo
 = 
pEx¥
->pAggInfo;

2707 
AggInfo_cﬁ
 *
pCﬁ
 = &
pAggInfo
->
aCﬁ
[
pEx¥
->
iAgg
];

2708 if–!
pAggInfo
->
dúe˘Mode
 ){

2709 
	`as£π
–
pCﬁ
->
iMem
>0 );

2710 
öReg
 = 
pCﬁ
->
iMem
;

2712 }if–
pAggInfo
->
u£S‹tögIdx
 ){

2713 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
pAggInfo
->
s‹tögIdxPTab
,

2714 
pCﬁ
->
iS‹ãrCﬁumn
, 
èrgë
);

2719 
TK_COLUMN
: {

2720 
iTab
 = 
pEx¥
->
iTabÀ
;

2721 if–
iTab
<0 ){

2722 if–
pP¨£
->
ckBa£
>0 ){

2724 
öReg
 = 
pEx¥
->
iCﬁumn
 + 
pP¨£
->
ckBa£
;

2729 
iTab
 = 
pP¨£
->
iSñfTab
;

2732 
öReg
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pEx¥
->
pTab
,

2733 
pEx¥
->
iCﬁumn
, 
iTab
, 
èrgë
,

2734 
pEx¥
->
›2
);

2737 
TK_INTEGER
: {

2738 
	`codeI¡egî
(
pP¨£
, 
pEx¥
, 0, 
èrgë
);

2741 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


2742 
TK_FLOAT
: {

2743 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2744 
	`codeRól
(
v
, 
pEx¥
->
u
.
zTokí
, 0, 
èrgë
);

2748 
TK_STRING
: {

2749 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2750 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
èrgë
, 
pEx¥
->
u
.
zTokí
);

2753 
TK_NULL
: {

2754 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

2757 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


2758 
TK_BLOB
: {

2759 
n
;

2760 c⁄° *
z
;

2761 *
zBlob
;

2762 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2763 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='x' ||ÖExpr->u.zToken[0]=='X' );

2764 
	`as£π
–
pEx¥
->
u
.
zTokí
[1]=='\'' );

2765 
z
 = &
pEx¥
->
u
.
zTokí
[2];

2766 
n
 = 
	`sqlôe3SåÀn30
(
z
) - 1;

2767 
	`as£π
–
z
[
n
]=='\'' );

2768 
zBlob
 = 
	`sqlôe3HexToBlob
(
	`sqlôe3VdbeDb
(
v
), 
z
, 
n
);

2769 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Blob
, 
n
/2, 
èrgë
, 0, 
zBlob
, 
P4_DYNAMIC
);

2773 
TK_VARIABLE
: {

2774 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2775 
	`as£π
–
pEx¥
->
u
.
zTokí
!=0 );

2776 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]!=0 );

2777 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_V¨übÀ
, 
pEx¥
->
iCﬁumn
, 
èrgë
);

2778 if–
pEx¥
->
u
.
zTokí
[1]!=0 ){

2779 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='?'

2780 || 
	`°rcmp
(
pEx¥
->
u
.
zTokí
, 
pP¨£
->
azV¨
[pEx¥->
iCﬁumn
-1])==0 );

2781 
	`sqlôe3VdbeCh™geP4
(
v
, -1, 
pP¨£
->
azV¨
[
pEx¥
->
iCﬁumn
-1], 
P4_STATIC
);

2785 
TK_REGISTER
: {

2786 
öReg
 = 
pEx¥
->
iTabÀ
;

2789 #i‚de‡
SQLITE_OMIT_CAST


2790 
TK_CAST
: {

2792 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
->
pLe·
, 
èrgë
);

2793 if–
öReg
!=
èrgë
 ){

2794 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
öReg
, 
èrgë
);

2795 
öReg
 = 
èrgë
;

2797 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Ca°
, 
èrgë
,

2798 
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
, 0));

2799 
	`ã°ˇ£
–
	`u£dAsCﬁumnCache
(
pP¨£
, 
öReg
, inReg) );

2800 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
öReg
, 1);

2804 
TK_LT
:

2805 
TK_LE
:

2806 
TK_GT
:

2807 
TK_GE
:

2808 
TK_NE
:

2809 
TK_EQ
: {

2810 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

2811 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

2812 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

2813 
r1
, 
r2
, 
öReg
, 
SQLITE_STOREP2
);

2814 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

2815 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

2816 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

2817 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

2818 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq); 
	`VdbeCovîageIf
(
v
,op==OP_Eq);

2819 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne); 
	`VdbeCovîageIf
(
v
,op==OP_Ne);

2820 
	`ã°ˇ£
–
ªgFªe1
==0 );

2821 
	`ã°ˇ£
–
ªgFªe2
==0 );

2824 
TK_IS
:

2825 
TK_ISNOT
: {

2826 
	`ã°ˇ£
–
›
==
TK_IS
 );

2827 
	`ã°ˇ£
–
›
==
TK_ISNOT
 );

2828 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

2829 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

2830 
›
 = (›==
TK_IS
Ë? 
TK_EQ
 : 
TK_NE
;

2831 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

2832 
r1
, 
r2
, 
öReg
, 
SQLITE_STOREP2
 | 
SQLITE_NULLEQ
);

2833 
	`VdbeCovîageIf
(
v
, 
›
==
TK_EQ
);

2834 
	`VdbeCovîageIf
(
v
, 
›
==
TK_NE
);

2835 
	`ã°ˇ£
–
ªgFªe1
==0 );

2836 
	`ã°ˇ£
–
ªgFªe2
==0 );

2839 
TK_AND
:

2840 
TK_OR
:

2841 
TK_PLUS
:

2842 
TK_STAR
:

2843 
TK_MINUS
:

2844 
TK_REM
:

2845 
TK_BITAND
:

2846 
TK_BITOR
:

2847 
TK_SLASH
:

2848 
TK_LSHIFT
:

2849 
TK_RSHIFT
:

2850 
TK_CONCAT
: {

2851 
	`as£π
–
TK_AND
==
OP_And
 ); 
	`ã°ˇ£
–
›
==TK_AND );

2852 
	`as£π
–
TK_OR
==
OP_Or
 ); 
	`ã°ˇ£
–
›
==TK_OR );

2853 
	`as£π
–
TK_PLUS
==
OP_Add
 ); 
	`ã°ˇ£
–
›
==TK_PLUS );

2854 
	`as£π
–
TK_MINUS
==
OP_Subåa˘
 ); 
	`ã°ˇ£
–
›
==TK_MINUS );

2855 
	`as£π
–
TK_REM
==
OP_Remaödî
 ); 
	`ã°ˇ£
–
›
==TK_REM );

2856 
	`as£π
–
TK_BITAND
==
OP_BôAnd
 ); 
	`ã°ˇ£
–
›
==TK_BITAND );

2857 
	`as£π
–
TK_BITOR
==
OP_BôOr
 ); 
	`ã°ˇ£
–
›
==TK_BITOR );

2858 
	`as£π
–
TK_SLASH
==
OP_Divide
 ); 
	`ã°ˇ£
–
›
==TK_SLASH );

2859 
	`as£π
–
TK_LSHIFT
==
OP_Shi·Le·
 ); 
	`ã°ˇ£
–
›
==TK_LSHIFT );

2860 
	`as£π
–
TK_RSHIFT
==
OP_Shi·Right
 ); 
	`ã°ˇ£
–
›
==TK_RSHIFT );

2861 
	`as£π
–
TK_CONCAT
==
OP_C⁄ˇt
 ); 
	`ã°ˇ£
–
›
==TK_CONCAT );

2862 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

2863 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

2864 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
r2
, 
r1
, 
èrgë
);

2865 
	`ã°ˇ£
–
ªgFªe1
==0 );

2866 
	`ã°ˇ£
–
ªgFªe2
==0 );

2869 
TK_UMINUS
: {

2870 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

2871 
	`as£π
–
pLe·
 );

2872 if–
pLe·
->
›
==
TK_INTEGER
 ){

2873 
	`codeI¡egî
(
pP¨£
, 
pLe·
, 1, 
èrgë
);

2874 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


2875 }if–
pLe·
->
›
==
TK_FLOAT
 ){

2876 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2877 
	`codeRól
(
v
, 
pLe·
->
u
.
zTokí
, 1, 
èrgë
);

2880 
ãmpX
.
›
 = 
TK_INTEGER
;

2881 
ãmpX
.
Êags
 = 
EP_I¡VÆue
|
EP_TokíO∆y
;

2882 
ãmpX
.
u
.
iVÆue
 = 0;

2883 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, &
ãmpX
, &
ªgFªe1
);

2884 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe2
);

2885 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Subåa˘
, 
r2
, 
r1
, 
èrgë
);

2886 
	`ã°ˇ£
–
ªgFªe2
==0 );

2888 
öReg
 = 
èrgë
;

2891 
TK_BITNOT
:

2892 
TK_NOT
: {

2893 
	`as£π
–
TK_BITNOT
==
OP_BôNŸ
 ); 
	`ã°ˇ£
–
›
==TK_BITNOT );

2894 
	`as£π
–
TK_NOT
==
OP_NŸ
 ); 
	`ã°ˇ£
–
›
==TK_NOT );

2895 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

2896 
	`ã°ˇ£
–
ªgFªe1
==0 );

2897 
öReg
 = 
èrgë
;

2898 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
öReg
);

2901 
TK_ISNULL
:

2902 
TK_NOTNULL
: {

2903 
addr
;

2904 
	`as£π
–
TK_ISNULL
==
OP_IsNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_ISNULL );

2905 
	`as£π
–
TK_NOTNULL
==
OP_NŸNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_NOTNULL );

2906 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
èrgë
);

2907 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

2908 
	`ã°ˇ£
–
ªgFªe1
==0 );

2909 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
›
, 
r1
);

2910 
	`VdbeCovîageIf
(
v
, 
›
==
TK_ISNULL
);

2911 
	`VdbeCovîageIf
(
v
, 
›
==
TK_NOTNULL
);

2912 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
èrgë
);

2913 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

2916 
TK_AGG_FUNCTION
: {

2917 
AggInfo
 *
pInfo
 = 
pEx¥
->
pAggInfo
;

2918 if–
pInfo
==0 ){

2919 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2920 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡aggªg©e: %s()", 
pEx¥
->
u
.
zTokí
);

2922 
öReg
 = 
pInfo
->
aFunc
[
pEx¥
->
iAgg
].
iMem
;

2926 
TK_FUNCTION
: {

2927 
Ex¥Li°
 *
pF¨g
;

2928 
nF¨g
;

2929 
FuncDef
 *
pDef
;

2930 c⁄° *
zId
;

2931 
u32
 
c⁄°Mask
 = 0;

2932 
i
;

2933 
u8
 
íc
 = 
	`ENC
(
db
);

2934 
CﬁlSeq
 *
pCﬁl
 = 0;

2936 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

2937 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) ){

2938 
pF¨g
 = 0;

2940 
pF¨g
 = 
pEx¥
->
x
.
pLi°
;

2942 
nF¨g
 = 
pF¨g
 ?ÖF¨g->
nEx¥
 : 0;

2943 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

2944 
zId
 = 
pEx¥
->
u
.
zTokí
;

2945 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zId
, 
nF¨g
, 
íc
, 0);

2946 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


2947 if–
pDef
==0 && 
pP¨£
->
ex∂aö
 ){

2948 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, "unknown", 
nF¨g
, 
íc
, 0);

2951 if–
pDef
==0 ||ÖDef->
xFöÆize
!=0 ){

2952 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknow¿fun˘i⁄: %s()", 
zId
);

2960 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_COALESCE
 ){

2961 
ídCﬂÀs˚
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2962 
	`as£π
–
nF¨g
>=2 );

2963 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pF¨g
->
a
[0].
pEx¥
, 
èrgë
);

2964 
i
=1; i<
nF¨g
; i++){

2965 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NŸNuŒ
, 
èrgë
, 
ídCﬂÀs˚
);

2966 
	`VdbeCovîage
(
v
);

2967 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
èrgë
, 1);

2968 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

2969 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pF¨g
->
a
[
i
].
pEx¥
, 
èrgë
);

2970 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

2972 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídCﬂÀs˚
);

2979 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_UNLIKELY
 ){

2980 
	`as£π
–
nF¨g
>=1 );

2981 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pF¨g
->
a
[0].
pEx¥
, 
èrgë
);

2985 
i
=0; i<
nF¨g
; i++){

2986 if–
i
<32 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pF¨g
->
a
[i].
pEx¥
) ){

2987 
	`ã°ˇ£
–
i
==31 );

2988 
c⁄°Mask
 |
	`MASKBIT32
(
i
);

2990 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
)!=0 && !
pCﬁl
 ){

2991 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pF¨g
->
a
[
i
].
pEx¥
);

2994 if–
pF¨g
 ){

2995 if–
c⁄°Mask
 ){

2996 
r1
 = 
pP¨£
->
nMem
+1;

2997 
pP¨£
->
nMem
 +
nF¨g
;

2999 
r1
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nF¨g
);

3007 if–(
pDef
->
funcFœgs
 & (
SQLITE_FUNC_LENGTH
|
SQLITE_FUNC_TYPEOF
))!=0 ){

3008 
u8
 
ex¥Op
;

3009 
	`as£π
–
nF¨g
==1 );

3010 
	`as£π
–
pF¨g
->
a
[0].
pEx¥
!=0 );

3011 
ex¥Op
 = 
pF¨g
->
a
[0].
pEx¥
->
›
;

3012 if–
ex¥Op
==
TK_COLUMN
 ||Éx¥Op==
TK_AGG_COLUMN
 ){

3013 
	`as£π
–
SQLITE_FUNC_LENGTH
==
OPFLAG_LENGTHARG
 );

3014 
	`as£π
–
SQLITE_FUNC_TYPEOF
==
OPFLAG_TYPEOFARG
 );

3015 
	`ã°ˇ£
–
pDef
->
funcFœgs
 & 
OPFLAG_LENGTHARG
 );

3016 
pF¨g
->
a
[0].
pEx¥
->
›2
 =

3017 
pDef
->
funcFœgs
 & (
OPFLAG_LENGTHARG
|
OPFLAG_TYPEOFARG
);

3021 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3022 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pF¨g
, 
r1
, 0,

3023 
SQLITE_ECEL_DUP
|
SQLITE_ECEL_FACTOR
);

3024 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3026 
r1
 = 0;

3028 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3041 if–
nF¨g
>=2 && (
pEx¥
->
Êags
 & 
EP_InfixFunc
) ){

3042 
pDef
 = 
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
db
,ÖDef, 
nF¨g
, 
pF¨g
->
a
[1].
pEx¥
);

3043 }if–
nF¨g
>0 ){

3044 
pDef
 = 
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
db
,ÖDef, 
nF¨g
, 
pF¨g
->
a
[0].
pEx¥
);

3047 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
 ){

3048 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3049 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CﬁlSeq
, 0, 0, 0, (*)
pCﬁl
, 
P4_COLLSEQ
);

3051 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Fun˘i⁄0
, 
c⁄°Mask
, 
r1
, 
èrgë
,

3052 (*)
pDef
, 
P4_FUNCDEF
);

3053 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
nF¨g
);

3054 if–
nF¨g
 && 
c⁄°Mask
==0 ){

3055 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r1
, 
nF¨g
);

3059 #i‚de‡
SQLITE_OMIT_SUBQUERY


3060 
TK_EXISTS
:

3061 
TK_SELECT
: {

3062 
	`ã°ˇ£
–
›
==
TK_EXISTS
 );

3063 
	`ã°ˇ£
–
›
==
TK_SELECT
 );

3064 
öReg
 = 
	`sqlôe3CodeSub£À˘
(
pP¨£
, 
pEx¥
, 0, 0);

3067 
TK_IN
: {

3068 
de°IfFÆ£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3069 
de°IfNuŒ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3070 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

3071 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°IfFÆ£
, 
de°IfNuŒ
);

3072 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
èrgë
);

3073 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfFÆ£
);

3074 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
èrgë
, 0);

3075 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfNuŒ
);

3092 
TK_BETWEEN
: {

3093 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

3094 
Ex¥Li°_ôem
 *
pLIãm
 = 
pEx¥
->
x
.
pLi°
->
a
;

3095 
Ex¥
 *
pRight
 = 
pLIãm
->
pEx¥
;

3097 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pLe·
, &
ªgFªe1
);

3098 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pRight
, &
ªgFªe2
);

3099 
	`ã°ˇ£
–
ªgFªe1
==0 );

3100 
	`ã°ˇ£
–
ªgFªe2
==0 );

3101 
r3
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

3102 
r4
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

3103 
	`codeCom∑ª
(
pP¨£
, 
pLe·
, 
pRight
, 
OP_Ge
,

3104 
r1
, 
r2
, 
r3
, 
SQLITE_STOREP2
); 
	`VdbeCovîage
(
v
);

3105 
pLIãm
++;

3106 
pRight
 = 
pLIãm
->
pEx¥
;

3107 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

3108 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pRight
, &
ªgFªe2
);

3109 
	`ã°ˇ£
–
ªgFªe2
==0 );

3110 
	`codeCom∑ª
(
pP¨£
, 
pLe·
, 
pRight
, 
OP_Le
, 
r1
, 
r2
, 
r4
, 
SQLITE_STOREP2
);

3111 
	`VdbeCovîage
(
v
);

3112 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_And
, 
r3
, 
r4
, 
èrgë
);

3113 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r3
);

3114 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r4
);

3117 
TK_SPAN
:

3118 
TK_COLLATE
:

3119 
TK_UPLUS
: {

3120 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
->
pLe·
, 
èrgë
);

3124 
TK_TRIGGER
: {

3150 
TabÀ
 *
pTab
 = 
pEx¥
->pTab;

3151 
p1
 = 
pEx¥
->
iTabÀ
 * (
pTab
->
nCﬁ
+1Ë+ 1 +ÖEx¥->
iCﬁumn
;

3153 
	`as£π
–
pEx¥
->
iTabÀ
==0 ||ÖExpr->iTable==1 );

3154 
	`as£π
–
pEx¥
->
iCﬁumn
>=-1 &&ÖEx¥->iCﬁumn<
pTab
->
nCﬁ
 );

3155 
	`as£π
–
pTab
->
iPKey
<0 || 
pEx¥
->
iCﬁumn
!=pTab->iPKey );

3156 
	`as£π
–
p1
>=0 &&Ö1<(
pTab
->
nCﬁ
*2+2) );

3158 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_P¨am
, 
p1
, 
èrgë
);

3159 
	`VdbeCommít
((
v
, "%s.%s -> $%d",

3160 (
pEx¥
->
iTabÀ
 ? "new" : "old"),

3161 (
pEx¥
->
iCﬁumn
<0 ? "rowid" :ÖEx¥->
pTab
->
aCﬁ
[pEx¥->iCﬁumn].
zName
),

3162 
èrgë


3165 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3171 if–
pEx¥
->
iCﬁumn
>=0

3172 && 
pTab
->
aCﬁ
[
pEx¥
->
iCﬁumn
].
afföôy
==
SQLITE_AFF_REAL


3174 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_RólAfföôy
, 
èrgë
);

3202 : 
	`as£π
–
›
==
TK_CASE
 ); {

3203 
ídLabñ
;

3204 
√xtCa£
;

3205 
nEx¥
;

3206 
i
;

3207 
Ex¥Li°
 *
pELi°
;

3208 
Ex¥Li°_ôem
 *
aLi°ñem
;

3209 
Ex¥
 
›Com∑ª
;

3210 
Ex¥
 *
pX
;

3211 
Ex¥
 *
pTe°
 = 0;

3212 
	`VVA_ONLY
–
iCacheLevñ
 = 
pP¨£
->iCacheLevel; )

3214 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
Ë&&ÖEx¥->
x
.
pLi°
 );

3215 
	`as£π
(
pEx¥
->
x
.
pLi°
->
nEx¥
 > 0);

3216 
pELi°
 = 
pEx¥
->
x
.
pLi°
;

3217 
aLi°ñem
 = 
pELi°
->
a
;

3218 
nEx¥
 = 
pELi°
->nExpr;

3219 
ídLabñ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3220 if–(
pX
 = 
pEx¥
->
pLe·
)!=0 ){

3221 
ãmpX
 = *
pX
;

3222 
	`ã°ˇ£
–
pX
->
›
==
TK_COLUMN
 );

3223 
	`ex¥ToRegi°î
(&
ãmpX
, 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pX
, &
ªgFªe1
));

3224 
	`ã°ˇ£
–
ªgFªe1
==0 );

3225 
›Com∑ª
.
›
 = 
TK_EQ
;

3226 
›Com∑ª
.
pLe·
 = &
ãmpX
;

3227 
pTe°
 = &
›Com∑ª
;

3232 
ªgFªe1
 = 0;

3234 
i
=0; i<
nEx¥
-1; i=i+2){

3235 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3236 if–
pX
 ){

3237 
	`as£π
–
pTe°
!=0 );

3238 
›Com∑ª
.
pRight
 = 
aLi°ñem
[
i
].
pEx¥
;

3240 
pTe°
 = 
aLi°ñem
[
i
].
pEx¥
;

3242 
√xtCa£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3243 
	`ã°ˇ£
–
pTe°
->
›
==
TK_COLUMN
 );

3244 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pTe°
, 
√xtCa£
, 
SQLITE_JUMPIFNULL
);

3245 
	`ã°ˇ£
–
aLi°ñem
[
i
+1].
pEx¥
->
›
==
TK_COLUMN
 );

3246 
	`sqlôe3Ex¥Code
(
pP¨£
, 
aLi°ñem
[
i
+1].
pEx¥
, 
èrgë
);

3247 
	`sqlôe3VdbeGŸo
(
v
, 
ídLabñ
);

3248 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3249 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
√xtCa£
);

3251 if–(
nEx¥
&1)!=0 ){

3252 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3253 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pELi°
->
a
[
nEx¥
-1].
pEx¥
, 
èrgë
);

3254 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3256 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
èrgë
);

3258 
	`as£π
–
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
>0

3259 || 
pP¨£
->
iCacheLevñ
==iCacheLevel );

3260 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídLabñ
);

3263 #i‚de‡
SQLITE_OMIT_TRIGGER


3264 
TK_RAISE
: {

3265 
	`as£π
–
pEx¥
->
afföôy
==
OE_Rﬁlback


3266 || 
pEx¥
->
afföôy
==
OE_Ab‹t


3267 || 
pEx¥
->
afföôy
==
OE_Faû


3268 || 
pEx¥
->
afföôy
==
OE_Ign‹e


3270 if–!
pP¨£
->
pTriggîTab
 ){

3271 
	`sqlôe3Eº‹Msg
(
pP¨£
,

3275 if–
pEx¥
->
afföôy
==
OE_Ab‹t
 ){

3276 
	`sqlôe3MayAb‹t
(
pP¨£
);

3278 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

3279 if–
pEx¥
->
afföôy
==
OE_Ign‹e
 ){

3280 
	`sqlôe3VdbeAddOp4
(

3281 
v
, 
OP_HÆt
, 
SQLITE_OK
, 
OE_Ign‹e
, 0, 
pEx¥
->
u
.
zTokí
,0);

3282 
	`VdbeCovîage
(
v
);

3284 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_TRIGGER
,

3285 
pEx¥
->
afföôy
,ÖEx¥->
u
.
zTokí
, 0, 0);

3292 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

3293 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

3294  
öReg
;

3295 
	}
}

3300 
	$sqlôe3Ex¥CodeAtInô
(

3301 
P¨£
 *
pP¨£
,

3302 
Ex¥
 *
pEx¥
,

3303 
ªgDe°
,

3304 
u8
 
ªußbÀ


3306 
Ex¥Li°
 *
p
;

3307 
	`as£π
–
	`C⁄°Fa˘‹Ok
(
pP¨£
) );

3308 
p
 = 
pP¨£
->
pC⁄°Ex¥
;

3309 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
,ÖExpr, 0);

3310 
p
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,Ö, 
pEx¥
);

3311 if–
p
 ){

3312 
Ex¥Li°_ôem
 *
pIãm
 = &
p
->
a
[p->
nEx¥
-1];

3313 
pIãm
->
u
.
iC⁄°Ex¥Reg
 = 
ªgDe°
;

3314 
pIãm
->
ªußbÀ
 =Ñeusable;

3316 
pP¨£
->
pC⁄°Ex¥
 = 
p
;

3317 
	}
}

3332 
	$sqlôe3Ex¥CodeTemp
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, *
pReg
){

3333 
r2
;

3334 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

3335 if–
	`C⁄°Fa˘‹Ok
(
pP¨£
)

3336 && 
pEx¥
->
›
!=
TK_REGISTER


3337 && 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
pEx¥
)

3339 
Ex¥Li°
 *
p
 = 
pP¨£
->
pC⁄°Ex¥
;

3340 
i
;

3341 *
pReg
 = 0;

3342 if–
p
 ){

3343 
Ex¥Li°_ôem
 *
pIãm
;

3344 
pIãm
=
p
->
a
, 
i
ı->
nEx¥
; i>0;ÖItem++, i--){

3345 if–
pIãm
->
ªußbÀ
 && 
	`sqlôe3Ex¥Com∑ª
’Iãm->
pEx¥
,pExpr,-1)==0 ){

3346  
pIãm
->
u
.
iC⁄°Ex¥Reg
;

3350 
r2
 = ++
pP¨£
->
nMem
;

3351 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
r2
, 1);

3353 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

3354 
r2
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
r1
);

3355 if–
r2
==
r1
 ){

3356 *
pReg
 = 
r1
;

3358 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

3359 *
pReg
 = 0;

3362  
r2
;

3363 
	}
}

3370 
	$sqlôe3Ex¥Code
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

3371 
öReg
;

3373 
	`as£π
–
èrgë
>0 &&Å¨gë<=
pP¨£
->
nMem
 );

3374 if–
pEx¥
 &&ÖEx¥->
›
==
TK_REGISTER
 ){

3375 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_C›y
, 
pEx¥
->
iTabÀ
, 
èrgë
);

3377 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
èrgë
);

3378 
	`as£π
–
pP¨£
->
pVdbe
!=0 ||ÖP¨£->
db
->
mÆlocFaûed
 );

3379 if–
öReg
!=
èrgë
 && 
pP¨£
->
pVdbe
 ){

3380 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_SC›y
, 
öReg
, 
èrgë
);

3383 
	}
}

3390 
	$sqlôe3Ex¥CodeC›y
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

3391 
sqlôe3
 *
db
 = 
pP¨£
->db;

3392 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖExpr, 0);

3393 if–!
db
->
mÆlocFaûed
 ) 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

3394 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

3395 
	}
}

3403 
	$sqlôe3Ex¥CodeFa˘‹abÀ
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

3404 if–
pP¨£
->
okC⁄°Fa˘‹
 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pEx¥
) ){

3405 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
èrgë
, 0);

3407 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

3409 
	}
}

3423 
	$sqlôe3Ex¥CodeAndCache
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
èrgë
){

3424 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3425 
iMem
;

3427 
	`as£π
–
èrgë
>0 );

3428 
	`as£π
–
pEx¥
->
›
!=
TK_REGISTER
 );

3429 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pEx¥
, 
èrgë
);

3430 
iMem
 = ++
pP¨£
->
nMem
;

3431 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
èrgë
, 
iMem
);

3432 
	`ex¥ToRegi°î
(
pEx¥
, 
iMem
);

3433 
	}
}

3451 
	$sqlôe3Ex¥CodeEx¥Li°
(

3452 
P¨£
 *
pP¨£
,

3453 
Ex¥Li°
 *
pLi°
,

3454 
èrgë
,

3455 
§cReg
,

3456 
u8
 
Êags


3458 
Ex¥Li°_ôem
 *
pIãm
;

3459 
i
, 
j
, 
n
;

3460 
u8
 
c›yOp
 = (
Êags
 & 
SQLITE_ECEL_DUP
Ë? 
OP_C›y
 : 
OP_SC›y
;

3461 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3462 
	`as£π
–
pLi°
!=0 );

3463 
	`as£π
–
èrgë
>0 );

3464 
	`as£π
–
pP¨£
->
pVdbe
!=0 );

3465 
n
 = 
pLi°
->
nEx¥
;

3466 if–!
	`C⁄°Fa˘‹Ok
(
pP¨£
ËË
Êags
 &~
SQLITE_ECEL_FACTOR
;

3467 
pIãm
=
pLi°
->
a
, 
i
=0; i<
n
; i++,ÖItem++){

3468 
Ex¥
 *
pEx¥
 = 
pIãm
->pExpr;

3469 if–(
Êags
 & 
SQLITE_ECEL_REF
)!=0 && (
j
 = 
pLi°
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
)>0 ){

3470 
	`sqlôe3VdbeAddOp2
(
v
, 
c›yOp
, 
j
+
§cReg
-1, 
èrgë
+
i
);

3471 }if–(
Êags
 & 
SQLITE_ECEL_FACTOR
)!=0 && 
	`sqlôe3Ex¥IsC⁄°™t
(
pEx¥
) ){

3472 
	`sqlôe3Ex¥CodeAtInô
(
pP¨£
, 
pEx¥
, 
èrgë
+
i
, 0);

3474 
öReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pEx¥
, 
èrgë
+
i
);

3475 if–
öReg
!=
èrgë
+
i
 ){

3476 
VdbeOp
 *
pOp
;

3477 if–
c›yOp
==
OP_C›y


3478 && (
pOp
=
	`sqlôe3VdbeGëOp
(
v
, -1))->
›code
==
OP_C›y


3479 && 
pOp
->
p1
+pOp->
p3
+1==
öReg


3480 && 
pOp
->
p2
+pOp->
p3
+1==
èrgë
+
i


3482 
pOp
->
p3
++;

3484 
	`sqlôe3VdbeAddOp2
(
v
, 
c›yOp
, 
öReg
, 
èrgë
+
i
);

3489  
n
;

3490 
	}
}

3504 
	$ex¥CodeBëwìn
(

3505 
P¨£
 *
pP¨£
,

3506 
Ex¥
 *
pEx¥
,

3507 
de°
,

3508 
jumpIfTrue
,

3509 
jumpIfNuŒ


3511 
Ex¥
 
ex¥And
;

3512 
Ex¥
 
compLe·
;

3513 
Ex¥
 
compRight
;

3514 
Ex¥
 
ex¥X
;

3515 
ªgFªe1
 = 0;

3517 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

3518 
ex¥X
 = *
pEx¥
->
pLe·
;

3519 
ex¥And
.
›
 = 
TK_AND
;

3520 
ex¥And
.
pLe·
 = &
compLe·
;

3521 
ex¥And
.
pRight
 = &
compRight
;

3522 
compLe·
.
›
 = 
TK_GE
;

3523 
compLe·
.
pLe·
 = &
ex¥X
;

3524 
compLe·
.
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

3525 
compRight
.
›
 = 
TK_LE
;

3526 
compRight
.
pLe·
 = &
ex¥X
;

3527 
compRight
.
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

3528 
	`ex¥ToRegi°î
(&
ex¥X
, 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, &ex¥X, &
ªgFªe1
));

3529 if–
jumpIfTrue
 ){

3530 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, &
ex¥And
, 
de°
, 
jumpIfNuŒ
);

3532 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, &
ex¥And
, 
de°
, 
jumpIfNuŒ
);

3534 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

3537 
	`ã°ˇ£
–
jumpIfTrue
==0 && 
jumpIfNuŒ
==0 && 
ªgFªe1
==0 );

3538 
	`ã°ˇ£
–
jumpIfTrue
==0 && 
jumpIfNuŒ
==0 && 
ªgFªe1
!=0 );

3539 
	`ã°ˇ£
–
jumpIfTrue
==0 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
==0 );

3540 
	`ã°ˇ£
–
jumpIfTrue
==0 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
!=0 );

3541 
	`ã°ˇ£
–
jumpIfTrue
!=0 && 
jumpIfNuŒ
==0 && 
ªgFªe1
==0 );

3542 
	`ã°ˇ£
–
jumpIfTrue
!=0 && 
jumpIfNuŒ
==0 && 
ªgFªe1
!=0 );

3543 
	`ã°ˇ£
–
jumpIfTrue
!=0 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
==0 );

3544 
	`ã°ˇ£
–
jumpIfTrue
!=0 && 
jumpIfNuŒ
!=0 && 
ªgFªe1
!=0 );

3545 
	}
}

3561 
	$sqlôe3Ex¥IfTrue
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
, 
jumpIfNuŒ
){

3562 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3563 
›
 = 0;

3564 
ªgFªe1
 = 0;

3565 
ªgFªe2
 = 0;

3566 
r1
, 
r2
;

3568 
	`as£π
–
jumpIfNuŒ
==
SQLITE_JUMPIFNULL
 || jumpIfNull==0 );

3569 if–
	`NEVER
(
v
==0) ) ;

3570 if–
	`NEVER
(
pEx¥
==0) ) ;

3571 
›
 = 
pEx¥
->op;

3572  
›
 ){

3573 
TK_AND
: {

3574 
d2
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3575 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3576 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
d2
,
jumpIfNuŒ
^
SQLITE_JUMPIFNULL
);

3577 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3578 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

3579 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
d2
);

3580 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3583 
TK_OR
: {

3584 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3585 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

3586 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3587 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

3588 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3591 
TK_NOT
: {

3592 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3593 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

3596 
TK_IS
:

3597 
TK_ISNOT
:

3598 
	`ã°ˇ£
–
›
==
TK_IS
 );

3599 
	`ã°ˇ£
–
›
==
TK_ISNOT
 );

3600 
›
 = (›==
TK_IS
Ë? 
TK_EQ
 : 
TK_NE
;

3601 
jumpIfNuŒ
 = 
SQLITE_NULLEQ
;

3603 
TK_LT
:

3604 
TK_LE
:

3605 
TK_GT
:

3606 
TK_GE
:

3607 
TK_NE
:

3608 
TK_EQ
: {

3609 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3610 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3611 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

3612 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

3613 
r1
, 
r2
, 
de°
, 
jumpIfNuŒ
);

3614 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

3615 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

3616 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

3617 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

3618 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq);

3619 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

3620 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

3621 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne);

3622 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

3623 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

3624 
	`ã°ˇ£
–
ªgFªe1
==0 );

3625 
	`ã°ˇ£
–
ªgFªe2
==0 );

3628 
TK_ISNULL
:

3629 
TK_NOTNULL
: {

3630 
	`as£π
–
TK_ISNULL
==
OP_IsNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_ISNULL );

3631 
	`as£π
–
TK_NOTNULL
==
OP_NŸNuŒ
 ); 
	`ã°ˇ£
–
›
==TK_NOTNULL );

3632 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3633 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
de°
);

3634 
	`VdbeCovîageIf
(
v
, 
›
==
TK_ISNULL
);

3635 
	`VdbeCovîageIf
(
v
, 
›
==
TK_NOTNULL
);

3636 
	`ã°ˇ£
–
ªgFªe1
==0 );

3639 
TK_BETWEEN
: {

3640 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3641 
	`ex¥CodeBëwìn
(
pP¨£
, 
pEx¥
, 
de°
, 1, 
jumpIfNuŒ
);

3644 #i‚de‡
SQLITE_OMIT_SUBQUERY


3645 
TK_IN
: {

3646 
de°IfFÆ£
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3647 
de°IfNuŒ
 = 
jumpIfNuŒ
 ? 
de°
 : 
de°IfFÆ£
;

3648 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°IfFÆ£
, 
de°IfNuŒ
);

3649 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

3650 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfFÆ£
);

3655 if–
	`ex¥AlwaysTrue
(
pEx¥
) ){

3656 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

3657 }if–
	`ex¥AlwaysFÆ£
(
pEx¥
) ){

3660 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
, &
ªgFªe1
);

3661 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_If
, 
r1
, 
de°
, 
jumpIfNuŒ
!=0);

3662 
	`VdbeCovîage
(
v
);

3663 
	`ã°ˇ£
–
ªgFªe1
==0 );

3664 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3669 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

3670 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

3671 
	}
}

3682 
	$sqlôe3Ex¥IfFÆ£
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
, 
jumpIfNuŒ
){

3683 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

3684 
›
 = 0;

3685 
ªgFªe1
 = 0;

3686 
ªgFªe2
 = 0;

3687 
r1
, 
r2
;

3689 
	`as£π
–
jumpIfNuŒ
==
SQLITE_JUMPIFNULL
 || jumpIfNull==0 );

3690 if–
	`NEVER
(
v
==0) ) ;

3691 if–
pEx¥
==0 ) ;

3711 
›
 = ((
pEx¥
->›+(
TK_ISNULL
&1))^1)-(TK_ISNULL&1);

3715 
	`as£π
–
pEx¥
->
›
!=
TK_ISNULL
 || op==
OP_NŸNuŒ
 );

3716 
	`as£π
–
pEx¥
->
›
!=
TK_NOTNULL
 || op==
OP_IsNuŒ
 );

3717 
	`as£π
–
pEx¥
->
›
!=
TK_NE
 || op==
OP_Eq
 );

3718 
	`as£π
–
pEx¥
->
›
!=
TK_EQ
 || op==
OP_Ne
 );

3719 
	`as£π
–
pEx¥
->
›
!=
TK_LT
 || op==
OP_Ge
 );

3720 
	`as£π
–
pEx¥
->
›
!=
TK_LE
 || op==
OP_Gt
 );

3721 
	`as£π
–
pEx¥
->
›
!=
TK_GT
 || op==
OP_Le
 );

3722 
	`as£π
–
pEx¥
->
›
!=
TK_GE
 || op==
OP_Lt
 );

3724  
pEx¥
->
›
 ){

3725 
TK_AND
: {

3726 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3727 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

3728 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3729 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

3730 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3733 
TK_OR
: {

3734 
d2
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3735 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3736 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
d2
, 
jumpIfNuŒ
^
SQLITE_JUMPIFNULL
);

3737 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

3738 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEx¥
->
pRight
, 
de°
, 
jumpIfNuŒ
);

3739 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
d2
);

3740 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

3743 
TK_NOT
: {

3744 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3745 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
->
pLe·
, 
de°
, 
jumpIfNuŒ
);

3748 
TK_IS
:

3749 
TK_ISNOT
:

3750 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_IS
 );

3751 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_ISNOT
 );

3752 
›
 = (
pEx¥
->›==
TK_IS
Ë? 
TK_NE
 : 
TK_EQ
;

3753 
jumpIfNuŒ
 = 
SQLITE_NULLEQ
;

3755 
TK_LT
:

3756 
TK_LE
:

3757 
TK_GT
:

3758 
TK_GE
:

3759 
TK_NE
:

3760 
TK_EQ
: {

3761 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3762 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3763 
r2
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pRight
, &
ªgFªe2
);

3764 
	`codeCom∑ª
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
, 
›
,

3765 
r1
, 
r2
, 
de°
, 
jumpIfNuŒ
);

3766 
	`as£π
(
TK_LT
==
OP_Lt
); 
	`ã°ˇ£
(
›
==OP_Lt); 
	`VdbeCovîageIf
(
v
,op==OP_Lt);

3767 
	`as£π
(
TK_LE
==
OP_Le
); 
	`ã°ˇ£
(
›
==OP_Le); 
	`VdbeCovîageIf
(
v
,op==OP_Le);

3768 
	`as£π
(
TK_GT
==
OP_Gt
); 
	`ã°ˇ£
(
›
==OP_Gt); 
	`VdbeCovîageIf
(
v
,op==OP_Gt);

3769 
	`as£π
(
TK_GE
==
OP_Ge
); 
	`ã°ˇ£
(
›
==OP_Ge); 
	`VdbeCovîageIf
(
v
,op==OP_Ge);

3770 
	`as£π
(
TK_EQ
==
OP_Eq
); 
	`ã°ˇ£
(
›
==OP_Eq);

3771 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

3772 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

3773 
	`as£π
(
TK_NE
==
OP_Ne
); 
	`ã°ˇ£
(
›
==OP_Ne);

3774 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
!=
SQLITE_NULLEQ
);

3775 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
 && 
jumpIfNuŒ
==
SQLITE_NULLEQ
);

3776 
	`ã°ˇ£
–
ªgFªe1
==0 );

3777 
	`ã°ˇ£
–
ªgFªe2
==0 );

3780 
TK_ISNULL
:

3781 
TK_NOTNULL
: {

3782 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
->
pLe·
, &
ªgFªe1
);

3783 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
r1
, 
de°
);

3784 
	`ã°ˇ£
–
›
==
TK_ISNULL
 ); 
	`VdbeCovîageIf
(
v
, op==TK_ISNULL);

3785 
	`ã°ˇ£
–
›
==
TK_NOTNULL
 ); 
	`VdbeCovîageIf
(
v
, op==TK_NOTNULL);

3786 
	`ã°ˇ£
–
ªgFªe1
==0 );

3789 
TK_BETWEEN
: {

3790 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3791 
	`ex¥CodeBëwìn
(
pP¨£
, 
pEx¥
, 
de°
, 0, 
jumpIfNuŒ
);

3794 #i‚de‡
SQLITE_OMIT_SUBQUERY


3795 
TK_IN
: {

3796 if–
jumpIfNuŒ
 ){

3797 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°
, dest);

3799 
de°IfNuŒ
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

3800 
	`sqlôe3Ex¥CodeIN
(
pP¨£
, 
pEx¥
, 
de°
, 
de°IfNuŒ
);

3801 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
de°IfNuŒ
);

3807 if–
	`ex¥AlwaysFÆ£
(
pEx¥
) ){

3808 
	`sqlôe3VdbeGŸo
(
v
, 
de°
);

3809 }if–
	`ex¥AlwaysTrue
(
pEx¥
) ){

3812 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pEx¥
, &
ªgFªe1
);

3813 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IfNŸ
, 
r1
, 
de°
, 
jumpIfNuŒ
!=0);

3814 
	`VdbeCovîage
(
v
);

3815 
	`ã°ˇ£
–
ªgFªe1
==0 );

3816 
	`ã°ˇ£
–
jumpIfNuŒ
==0 );

3821 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe1
);

3822 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgFªe2
);

3823 
	}
}

3830 
	$sqlôe3Ex¥IfFÆ£Dup
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
, 
de°
,
jumpIfNuŒ
){

3831 
sqlôe3
 *
db
 = 
pP¨£
->db;

3832 
Ex¥
 *
pC›y
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
, 0);

3833 if–
db
->
mÆlocFaûed
==0 ){

3834 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pC›y
, 
de°
, 
jumpIfNuŒ
);

3836 
	`sqlôe3Ex¥Dñëe
(
db
, 
pC›y
);

3837 
	}
}

3862 
	$sqlôe3Ex¥Com∑ª
(
Ex¥
 *
pA
, Ex¥ *
pB
, 
iTab
){

3863 
u32
 
comböedFœgs
;

3864 if–
pA
==0 || 
pB
==0 ){

3865  
pB
==
pA
 ? 0 : 2;

3867 
comböedFœgs
 = 
pA
->
Êags
 | 
pB
->flags;

3868 if–
comböedFœgs
 & 
EP_I¡VÆue
 ){

3869 if–(
pA
->
Êags
&
pB
->Êags&
EP_I¡VÆue
)!=0 &&ÖA->
u
.
iVÆue
==pB->u.iValue ){

3874 if–
pA
->
›
!=
pB
->op ){

3875 if–
pA
->
›
==
TK_COLLATE
 && 
	`sqlôe3Ex¥Com∑ª
’A->
pLe·
, 
pB
, 
iTab
)<2 ){

3878 if–
pB
->
›
==
TK_COLLATE
 && 
	`sqlôe3Ex¥Com∑ª
(
pA
,ÖB->
pLe·
, 
iTab
)<2 ){

3883 if–
pA
->
›
!=
TK_COLUMN
 &&ÖA->›!=
TK_AGG_COLUMN
 &&ÖA->
u
.
zTokí
 ){

3884 if–
pA
->
›
==
TK_FUNCTION
 ){

3885 if–
	`sqlôe3SåICmp
(
pA
->
u
.
zTokí
,
pB
->u.zToken)!=0 )  2;

3886 }if–
	`°rcmp
(
pA
->
u
.
zTokí
,
pB
->u.zToken)!=0 ){

3887  
pA
->
›
==
TK_COLLATE
 ? 1 : 2;

3890 if–(
pA
->
Êags
 & 
EP_Di°ö˘
)!=(
pB
->flags & EP_Distinct) )  2;

3891 if–
	`ALWAYS
((
comböedFœgs
 & 
EP_TokíO∆y
)==0) ){

3892 if–
comböedFœgs
 & 
EP_xIsSñe˘
 )  2;

3893 if–
	`sqlôe3Ex¥Com∑ª
(
pA
->
pLe·
, 
pB
->pLe·, 
iTab
) )  2;

3894 if–
	`sqlôe3Ex¥Com∑ª
(
pA
->
pRight
, 
pB
->pRight, 
iTab
) )  2;

3895 if–
	`sqlôe3Ex¥Li°Com∑ª
(
pA
->
x
.
pLi°
, 
pB
->x.pLi°, 
iTab
) )  2;

3896 if–
	`ALWAYS
((
comböedFœgs
 & 
EP_Redu˚d
)==0Ë&& 
pA
->
›
!=
TK_STRING
 ){

3897 if–
pA
->
iCﬁumn
!=
pB
->iColumn )  2;

3898 if–
pA
->
iTabÀ
!=
pB
->iTable

3899 && (
pA
->
iTabÀ
!=
iTab
 || 
	`NEVER
(
pB
->iTable>=0)) )  2;

3903 
	}
}

3920 
	$sqlôe3Ex¥Li°Com∑ª
(
Ex¥Li°
 *
pA
, Ex¥Li° *
pB
, 
iTab
){

3921 
i
;

3922 if–
pA
==0 && 
pB
==0 )  0;

3923 if–
pA
==0 || 
pB
==0 )  1;

3924 if–
pA
->
nEx¥
!=
pB
->nExpr )  1;

3925 
i
=0; i<
pA
->
nEx¥
; i++){

3926 
Ex¥
 *
pEx¥A
 = 
pA
->
a
[
i
].
pEx¥
;

3927 
Ex¥
 *
pEx¥B
 = 
pB
->
a
[
i
].
pEx¥
;

3928 if–
pA
->
a
[
i
].
s‹tOrdî
!=
pB
->a[i].sortOrder )  1;

3929 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥A
, 
pEx¥B
, 
iTab
) )  1;

3932 
	}
}

3954 
	$sqlôe3Ex¥Im∂õsEx¥
(
Ex¥
 *
pE1
, Ex¥ *
pE2
, 
iTab
){

3955 if–
	`sqlôe3Ex¥Com∑ª
(
pE1
, 
pE2
, 
iTab
)==0 ){

3958 if–
pE2
->
›
==
TK_OR


3959 && (
	`sqlôe3Ex¥Im∂õsEx¥
(
pE1
, 
pE2
->
pLe·
, 
iTab
)

3960 || 
	`sqlôe3Ex¥Im∂õsEx¥
(
pE1
, 
pE2
->
pRight
, 
iTab
) )

3964 if–
pE2
->
›
==
TK_NOTNULL


3965 && 
	`sqlôe3Ex¥Com∑ª
(
pE1
->
pLe·
, 
pE2
->pLe·, 
iTab
)==0

3966 && (
pE1
->
›
!=
TK_ISNULL
 &&ÖE1->›!=
TK_IS
)

3971 
	}
}

3980 
	sIdxCovî
 {

3981 
Index
 *
	mpIdx
;

3982 
	miCur
;

3990 
	$ex¥IdxCovî
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

3991 if–
pEx¥
->
›
==
TK_COLUMN


3992 && 
pEx¥
->
iTabÀ
==
pWÆkî
->
u
.
pIdxCovî
->
iCur


3993 && 
	`sqlôe3CﬁumnOfIndex
(
pWÆkî
->
u
.
pIdxCovî
->
pIdx
, 
pEx¥
->
iCﬁumn
)<0

3995 
pWÆkî
->
eCode
 = 1;

3996  
WRC_Ab‹t
;

3998  
WRC_C⁄töue
;

3999 
	}
}

4011 
	$sqlôe3Ex¥CovîedByIndex
(

4012 
Ex¥
 *
pEx¥
,

4013 
iCur
,

4014 
Index
 *
pIdx


4016 
WÆkî
 
w
;

4017 
IdxCovî
 
xcov
;

4018 
	`mem£t
(&
w
, 0, (w));

4019 
xcov
.
iCur
 = iCur;

4020 
xcov
.
pIdx
 =ÖIdx;

4021 
w
.
xEx¥CÆlback
 = 
ex¥IdxCovî
;

4022 
w
.
u
.
pIdxCovî
 = &
xcov
;

4023 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

4024  !
w
.
eCode
;

4025 
	}
}

4034 
	sSrcCou¡
 {

4035 
SrcLi°
 *
	mpSrc
;

4036 
	mnThis
;

4037 
	mnOthî
;

4043 
	$ex¥SrcCou¡
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

4049 if–
pEx¥
->
›
==
TK_COLUMN
 || 
	`NEVER
’Ex¥->›==
TK_AGG_COLUMN
) ){

4050 
i
;

4051 
SrcCou¡
 *
p
 = 
pWÆkî
->
u
.
pSrcCou¡
;

4052 
SrcLi°
 *
pSrc
 = 
p
->pSrc;

4053 
nSrc
 = 
pSrc
 ?ÖSrc->nSrc : 0;

4054 
i
=0; i<
nSrc
; i++){

4055 if–
pEx¥
->
iTabÀ
==
pSrc
->
a
[
i
].
iCurs‹
 ) ;

4057 if–
i
<
nSrc
 ){

4058 
p
->
nThis
++;

4060 
p
->
nOthî
++;

4063  
WRC_C⁄töue
;

4064 
	}
}

4072 
	$sqlôe3Fun˘i⁄U£sThisSrc
(
Ex¥
 *
pEx¥
, 
SrcLi°
 *
pSrcLi°
){

4073 
WÆkî
 
w
;

4074 
SrcCou¡
 
˙t
;

4075 
	`as£π
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

4076 
	`mem£t
(&
w
, 0, (w));

4077 
w
.
xEx¥CÆlback
 = 
ex¥SrcCou¡
;

4078 
w
.
u
.
pSrcCou¡
 = &
˙t
;

4079 
˙t
.
pSrc
 = 
pSrcLi°
;

4080 
˙t
.
nThis
 = 0;

4081 
˙t
.
nOthî
 = 0;

4082 
	`sqlôe3WÆkEx¥Li°
(&
w
, 
pEx¥
->
x
.
pLi°
);

4083  
˙t
.
nThis
>0 || c¡.
nOthî
==0;

4084 
	}
}

4090 
	$addAggInfoCﬁumn
(
sqlôe3
 *
db
, 
AggInfo
 *
pInfo
){

4091 
i
;

4092 
pInfo
->
aCﬁ
 = 
	`sqlôe3AºayAŒoˇã
(

4093 
db
,

4094 
pInfo
->
aCﬁ
,

4095 (
pInfo
->
aCﬁ
[0]),

4096 &
pInfo
->
nCﬁumn
,

4097 &
i


4099  
i
;

4100 
	}
}

4106 
	$addAggInfoFunc
(
sqlôe3
 *
db
, 
AggInfo
 *
pInfo
){

4107 
i
;

4108 
pInfo
->
aFunc
 = 
	`sqlôe3AºayAŒoˇã
(

4109 
db
,

4110 
pInfo
->
aFunc
,

4111 (
pInfo
->
aFunc
[0]),

4112 &
pInfo
->
nFunc
,

4113 &
i


4115  
i
;

4116 
	}
}

4123 
	$™ÆyzeAggªg©e
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

4124 
i
;

4125 
NameC⁄ãxt
 *
pNC
 = 
pWÆkî
->
u
.pNC;

4126 
P¨£
 *
pP¨£
 = 
pNC
->pParse;

4127 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

4128 
AggInfo
 *
pAggInfo
 = 
pNC
->pAggInfo;

4130  
pEx¥
->
›
 ){

4131 
TK_AGG_COLUMN
:

4132 
TK_COLUMN
: {

4133 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

4134 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

4137 if–
	`ALWAYS
(
pSrcLi°
!=0) ){

4138 
SrcLi°_ôem
 *
pIãm
 = 
pSrcLi°
->
a
;

4139 
i
=0; i<
pSrcLi°
->
nSrc
; i++, 
pIãm
++){

4140 
AggInfo_cﬁ
 *
pCﬁ
;

4141 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

4142 if–
pEx¥
->
iTabÀ
==
pIãm
->
iCurs‹
 ){

4149 
k
;

4150 
pCﬁ
 = 
pAggInfo
->
aCﬁ
;

4151 
k
=0; k<
pAggInfo
->
nCﬁumn
; k++, 
pCﬁ
++){

4152 if–
pCﬁ
->
iTabÀ
==
pEx¥
->iTable &&

4153 
pCﬁ
->
iCﬁumn
==
pEx¥
->iColumn ){

4157 if–(
k
>=
pAggInfo
->
nCﬁumn
)

4158 && (
k
 = 
	`addAggInfoCﬁumn
(
pP¨£
->
db
, 
pAggInfo
))>=0

4160 
pCﬁ
 = &
pAggInfo
->
aCﬁ
[
k
];

4161 
pCﬁ
->
pTab
 = 
pEx¥
->pTab;

4162 
pCﬁ
->
iTabÀ
 = 
pEx¥
->iTable;

4163 
pCﬁ
->
iCﬁumn
 = 
pEx¥
->iColumn;

4164 
pCﬁ
->
iMem
 = ++
pP¨£
->
nMem
;

4165 
pCﬁ
->
iS‹ãrCﬁumn
 = -1;

4166 
pCﬁ
->
pEx¥
 =ÖExpr;

4167 if–
pAggInfo
->
pGroupBy
 ){

4168 
j
, 
n
;

4169 
Ex¥Li°
 *
pGB
 = 
pAggInfo
->
pGroupBy
;

4170 
Ex¥Li°_ôem
 *
pTîm
 = 
pGB
->
a
;

4171 
n
 = 
pGB
->
nEx¥
;

4172 
j
=0; j<
n
; j++, 
pTîm
++){

4173 
Ex¥
 *
pE
 = 
pTîm
->
pEx¥
;

4174 if–
pE
->
›
==
TK_COLUMN
 &&ÖE->
iTabÀ
==
pEx¥
->iTable &&

4175 
pE
->
iCﬁumn
==
pEx¥
->iColumn ){

4176 
pCﬁ
->
iS‹ãrCﬁumn
 = 
j
;

4181 if–
pCﬁ
->
iS‹ãrCﬁumn
<0 ){

4182 
pCﬁ
->
iS‹ãrCﬁumn
 = 
pAggInfo
->
nS‹tögCﬁumn
++;

4190 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

4191 
pEx¥
->
pAggInfo
 =ÖAggInfo;

4192 
pEx¥
->
›
 = 
TK_AGG_COLUMN
;

4193 
pEx¥
->
iAgg
 = (
i16
)
k
;

4198  
WRC_Pru√
;

4200 
TK_AGG_FUNCTION
: {

4201 if–(
pNC
->
ncFœgs
 & 
NC_InAggFunc
)==0

4202 && 
pWÆkî
->
wÆkîDïth
==
pEx¥
->
›2


4207 
AggInfo_func
 *
pIãm
 = 
pAggInfo
->
aFunc
;

4208 
i
=0; i<
pAggInfo
->
nFunc
; i++, 
pIãm
++){

4209 if–
	`sqlôe3Ex¥Com∑ª
(
pIãm
->
pEx¥
,ÖExpr, -1)==0 ){

4213 if–
i
>=
pAggInfo
->
nFunc
 ){

4216 
u8
 
íc
 = 
	`ENC
(
pP¨£
->
db
);

4217 
i
 = 
	`addAggInfoFunc
(
pP¨£
->
db
, 
pAggInfo
);

4218 if–
i
>=0 ){

4219 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

4220 
pIãm
 = &
pAggInfo
->
aFunc
[
i
];

4221 
pIãm
->
pEx¥
 =ÖExpr;

4222 
pIãm
->
iMem
 = ++
pP¨£
->
nMem
;

4223 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) );

4224 
pIãm
->
pFunc
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
,

4225 
pEx¥
->
u
.
zTokí
,

4226 
pEx¥
->
x
.
pLi°
 ?ÖEx¥->x.pLi°->
nEx¥
 : 0, 
íc
, 0);

4227 if–
pEx¥
->
Êags
 & 
EP_Di°ö˘
 ){

4228 
pIãm
->
iDi°ö˘
 = 
pP¨£
->
nTab
++;

4230 
pIãm
->
iDi°ö˘
 = -1;

4236 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

4237 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

4238 
pEx¥
->
iAgg
 = (
i16
)
i
;

4239 
pEx¥
->
pAggInfo
 =ÖAggInfo;

4240  
WRC_Pru√
;

4242  
WRC_C⁄töue
;

4246  
WRC_C⁄töue
;

4247 
	}
}

4248 
	$™ÆyzeAggªg©esInSñe˘
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
pSñe˘
){

4249 
	`UNUSED_PARAMETER
(
pWÆkî
);

4250 
	`UNUSED_PARAMETER
(
pSñe˘
);

4251  
WRC_C⁄töue
;

4252 
	}
}

4263 
	$sqlôe3Ex¥A«lyzeAggªg©es
(
NameC⁄ãxt
 *
pNC
, 
Ex¥
 *
pEx¥
){

4264 
WÆkî
 
w
;

4265 
	`mem£t
(&
w
, 0, (w));

4266 
w
.
xEx¥CÆlback
 = 
™ÆyzeAggªg©e
;

4267 
w
.
xSñe˘CÆlback
 = 
™ÆyzeAggªg©esInSñe˘
;

4268 
w
.
u
.
pNC
 =ÖNC;

4269 
	`as£π
–
pNC
->
pSrcLi°
!=0 );

4270 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

4271 
	}
}

4279 
	$sqlôe3Ex¥A«lyzeAggLi°
(
NameC⁄ãxt
 *
pNC
, 
Ex¥Li°
 *
pLi°
){

4280 
Ex¥Li°_ôem
 *
pIãm
;

4281 
i
;

4282 if–
pLi°
 ){

4283 
pIãm
=
pLi°
->
a
, 
i
=0; i<pLi°->
nEx¥
; i++,ÖItem++){

4284 
	`sqlôe3Ex¥A«lyzeAggªg©es
(
pNC
, 
pIãm
->
pEx¥
);

4287 
	}
}

4292 
	$sqlôe3GëTempReg
(
P¨£
 *
pP¨£
){

4293 if–
pP¨£
->
nTempReg
==0 ){

4294  ++
pP¨£
->
nMem
;

4296  
pP¨£
->
aTempReg
[--pP¨£->
nTempReg
];

4297 
	}
}

4307 
	$sqlôe3Rñó£TempReg
(
P¨£
 *
pP¨£
, 
iReg
){

4308 if–
iReg
 && 
pP¨£
->
nTempReg
<
	`AºaySize
’P¨£->
aTempReg
) ){

4309 
i
;

4310 
yCﬁCache
 *
p
;

4311 
i
=0, 
p
=
pP¨£
->
aCﬁCache
; i<
SQLITE_N_COLCACHE
; i++,Ö++){

4312 if–
p
->
iReg
==iReg ){

4313 
p
->
ãmpReg
 = 1;

4317 
pP¨£
->
aTempReg
[pP¨£->
nTempReg
++] = 
iReg
;

4319 
	}
}

4324 
	$sqlôe3GëTempR™ge
(
P¨£
 *
pP¨£
, 
nReg
){

4325 
i
, 
n
;

4326 
i
 = 
pP¨£
->
iR™geReg
;

4327 
n
 = 
pP¨£
->
nR™geReg
;

4328 if–
nReg
<=
n
 ){

4329 
	`as£π
–!
	`u£dAsCﬁumnCache
(
pP¨£
, 
i
, i+
n
-1) );

4330 
pP¨£
->
iR™geReg
 +
nReg
;

4331 
pP¨£
->
nR™geReg
 -
nReg
;

4333 
i
 = 
pP¨£
->
nMem
+1;

4334 
pP¨£
->
nMem
 +
nReg
;

4336  
i
;

4337 
	}
}

4338 
	$sqlôe3Rñó£TempR™ge
(
P¨£
 *
pP¨£
, 
iReg
, 
nReg
){

4339 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
iReg
, 
nReg
);

4340 if–
nReg
>
pP¨£
->
nR™geReg
 ){

4341 
pP¨£
->
nR™geReg
 = 
nReg
;

4342 
pP¨£
->
iR™geReg
 = 
iReg
;

4344 
	}
}

4349 
	$sqlôe3CÀ¨TempRegCache
(
P¨£
 *
pP¨£
){

4350 
pP¨£
->
nTempReg
 = 0;

4351 
pP¨£
->
nR™geReg
 = 0;

4352 
	}
}

4359 #ifde‡
SQLITE_DEBUG


4360 
	$sqlôe3NoTempsInR™ge
(
P¨£
 *
pP¨£
, 
iFú°
, 
iLa°
){

4361 
i
;

4362 if–
pP¨£
->
nR™geReg
>0

4363 && 
pP¨£
->
iR™geReg
+pP¨£->
nR™geReg
<
iLa°


4364 && 
pP¨£
->
iR™geReg
>=
iFú°


4368 
i
=0; i<
pP¨£
->
nTempReg
; i++){

4369 if–
pP¨£
->
aTempReg
[
i
]>=
iFú°
 &&ÖP¨£->aTempReg[i]<=
iLa°
 ){

4374 
	}
}

	@fault.c

27 
	~"sqlôeI¡.h
"

29 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


34 
BíignMÆlocHooks
 
	tBíignMÆlocHooks
;

35 
SQLITE_WSD
 
	sBíignMÆlocHooks
 {

36 (*
	mxBíignBegö
)();

37 (*
	mxBíignEnd
)();

38 } 
	gsqlôe3Hooks
 = { 0, 0 };

46 #ifde‡
SQLITE_OMIT_WSD


47 
	#wsdHooksInô
 \

48 
BíignMÆlocHooks
 *
x
 = &
	`GLOBAL
(BíignMÆlocHooks,
sqlôe3Hooks
)

	)

49 
	#wsdHooks
 
x
[0]

	)

51 
	#wsdHooksInô


	)

52 
	#wsdHooks
 
sqlôe3Hooks


	)

60 
sqlôe3BíignMÆlocHooks
(

61 (*
xBíignBegö
)(),

62 (*
xBíignEnd
)()

64 
wsdHooksInô
;

65 
wsdHooks
.
xBíignBegö
 = xBenignBegin;

66 
wsdHooks
.
xBíignEnd
 = xBenignEnd;

67 
	}
}

74 
	$sqlôe3BegöBíignMÆloc
(){

75 
wsdHooksInô
;

76 if–
wsdHooks
.
xBíignBegö
 ){

77 
wsdHooks
.
	`xBíignBegö
();

79 
	}
}

80 
	$sqlôe3EndBíignMÆloc
(){

81 
wsdHooksInô
;

82 if–
wsdHooks
.
xBíignEnd
 ){

83 
wsdHooks
.
	`xBíignEnd
();

85 
	}
}

	@fkey.c

14 
	~"sqlôeI¡.h
"

16 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


17 #i‚de‡
SQLITE_OMIT_TRIGGER


183 
	$sqlôe3FkLoˇãIndex
(

184 
P¨£
 *
pP¨£
,

185 
TabÀ
 *
pP¨ít
,

186 
FKey
 *
pFKey
,

187 
Index
 **
µIdx
,

188 **
∑iCﬁ


190 
Index
 *
pIdx
 = 0;

191 *
aiCﬁ
 = 0;

192 
nCﬁ
 = 
pFKey
->nCol;

193 *
zKey
 = 
pFKey
->
aCﬁ
[0].
zCﬁ
;

196 
	`as£π
–
µIdx
 && *ppIdx==0 );

197 
	`as£π
–!
∑iCﬁ
 || *paiCol==0 );

198 
	`as£π
–
pP¨£
 );

208 if–
nCﬁ
==1 ){

216 if–
pP¨ít
->
iPKey
>=0 ){

217 if–!
zKey
 )  0;

218 if–!
	`sqlôe3SåICmp
(
pP¨ít
->
aCﬁ
[pP¨ít->
iPKey
].
zName
, 
zKey
) )  0;

220 }if–
∑iCﬁ
 ){

221 
	`as£π
–
nCﬁ
>1 );

222 
aiCﬁ
 = (*)
	`sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, 
nCﬁ
*());

223 if–!
aiCﬁ
 )  1;

224 *
∑iCﬁ
 = 
aiCﬁ
;

227 
pIdx
=
pP¨ít
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

228 if–
pIdx
->
nKeyCﬁ
==
nCﬁ
 && 
	`IsUniqueIndex
(pIdx) ){

233 if–
zKey
==0 ){

237 if–
	`IsPrim¨yKeyIndex
(
pIdx
) ){

238 if–
aiCﬁ
 ){

239 
i
;

240 
i
=0; i<
nCﬁ
; i++Ë
aiCﬁ
[i] = 
pFKey
->
aCﬁ
[i].
iFrom
;

249 
i
, 
j
;

250 
i
=0; i<
nCﬁ
; i++){

251 
i16
 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

252 c⁄° *
zDÊtCﬁl
;

253 *
zIdxCﬁ
;

255 if–
iCﬁ
<0 ) ;

260 
zDÊtCﬁl
 = 
pP¨ít
->
aCﬁ
[
iCﬁ
].
zCﬁl
;

261 if–!
zDÊtCﬁl
 ) zDÊtCﬁ»
sqlôe3SåBINARY
;

262 if–
	`sqlôe3SåICmp
(
pIdx
->
azCﬁl
[
i
], 
zDÊtCﬁl
) ) ;

264 
zIdxCﬁ
 = 
pP¨ít
->
aCﬁ
[
iCﬁ
].
zName
;

265 
j
=0; j<
nCﬁ
; j++){

266 if–
	`sqlôe3SåICmp
(
pFKey
->
aCﬁ
[
j
].
zCﬁ
, 
zIdxCﬁ
)==0 ){

267 if–
aiCﬁ
 )áiCﬁ[
i
] = 
pFKey
->
aCﬁ
[
j
].
iFrom
;

271 if–
j
==
nCﬁ
 ) ;

273 if–
i
==
nCﬁ
 ) ;

278 if–!
pIdx
 ){

279 if–!
pP¨£
->
dißbÀTriggîs
 ){

280 
	`sqlôe3Eº‹Msg
(
pP¨£
,

282 
pFKey
->
pFrom
->
zName
,ÖFKey->
zTo
);

284 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
aiCﬁ
);

288 *
µIdx
 = 
pIdx
;

290 
	}
}

318 
	$fkLookupP¨ít
(

319 
P¨£
 *
pP¨£
,

320 
iDb
,

321 
TabÀ
 *
pTab
,

322 
Index
 *
pIdx
,

323 
FKey
 *
pFKey
,

324 *
aiCﬁ
,

325 
ªgD©a
,

326 
nIn¸
,

327 
isIgn‹e


329 
i
;

330 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

331 
iCur
 = 
pP¨£
->
nTab
 - 1;

332 
iOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

341 if–
nIn¸
<0 ){

342 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 
pFKey
->
isDe„ºed
, 
iOk
);

343 
	`VdbeCovîage
(
v
);

345 
i
=0; i<
pFKey
->
nCﬁ
; i++){

346 
iReg
 = 
aiCﬁ
[
i
] + 
ªgD©a
 + 1;

347 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
iReg
, 
iOk
); 
	`VdbeCovîage
(v);

350 if–
isIgn‹e
==0 ){

351 if–
pIdx
==0 ){

354 
iMu°BeI¡
;

355 
ªgTemp
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

362 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
aiCﬁ
[0]+1+
ªgD©a
, 
ªgTemp
);

363 
iMu°BeI¡
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Mu°BeI¡
, 
ªgTemp
, 0);

364 
	`VdbeCovîage
(
v
);

370 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
==1 ){

371 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgD©a
, 
iOk
, 
ªgTemp
); 
	`VdbeCovîage
(v);

372 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

375 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iCur
, 
iDb
, 
pTab
, 
OP_O≥nRód
);

376 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iCur
, 0, 
ªgTemp
); 
	`VdbeCovîage
(v);

377 
	`sqlôe3VdbeGŸo
(
v
, 
iOk
);

378 
	`sqlôe3VdbeJumpHîe
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-2);

379 
	`sqlôe3VdbeJumpHîe
(
v
, 
iMu°BeI¡
);

380 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgTemp
);

382 
nCﬁ
 = 
pFKey
->nCol;

383 
ªgTemp
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

384 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

386 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iCur
, 
pIdx
->
äum
, 
iDb
);

387 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

388 
i
=0; i<
nCﬁ
; i++){

389 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
aiCﬁ
[
i
]+1+
ªgD©a
, 
ªgTemp
+i);

402 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
==1 ){

403 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
nCﬁ
 + 1;

404 
i
=0; i<
nCﬁ
; i++){

405 
iChûd
 = 
aiCﬁ
[
i
]+1+
ªgD©a
;

406 
iP¨ít
 = 
pIdx
->
aiCﬁumn
[
i
]+1+
ªgD©a
;

407 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]>=0 );

408 
	`as£π
–
aiCﬁ
[
i
]!=
pTab
->
iPKey
 );

409 if–
pIdx
->
aiCﬁumn
[
i
]==
pTab
->
iPKey
 ){

411 
iP¨ít
 = 
ªgD©a
;

413 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Ne
, 
iChûd
, 
iJump
, 
iP¨ít
); 
	`VdbeCovîage
(v);

414 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_JUMPIFNULL
);

416 
	`sqlôe3VdbeGŸo
(
v
, 
iOk
);

419 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgTemp
, 
nCﬁ
, 
ªgRec
,

420 
	`sqlôe3IndexAfföôySå
(
pP¨£
->
db
,
pIdx
), 
nCﬁ
);

421 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iCur
, 
iOk
, 
ªgRec
, 0); 
	`VdbeCovîage
(v);

423 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec
);

424 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgTemp
, 
nCﬁ
);

428 if–!
pFKey
->
isDe„ºed
 && !(
pP¨£
->
db
->
Êags
 & 
SQLITE_De„rFKs
)

429 && !
pP¨£
->
pT›Àvñ


430 && !
pP¨£
->
isMu…iWrôe


436 
	`as£π
–
nIn¸
==1 );

437 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_FOREIGNKEY
,

438 
OE_Ab‹t
, 0, 
P4_STATIC
, 
P5_C⁄°øötFK
);

440 if–
nIn¸
>0 && 
pFKey
->
isDe„ºed
==0 ){

441 
	`sqlôe3MayAb‹t
(
pP¨£
);

443 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, 
nIn¸
);

446 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iOk
);

447 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iCur
);

448 
	}
}

459 
Ex¥
 *
	$ex¥TabÀRegi°î
(

460 
P¨£
 *
pP¨£
,

461 
TabÀ
 *
pTab
,

462 
ªgBa£
,

463 
i16
 
iCﬁ


465 
Ex¥
 *
pEx¥
;

466 
Cﬁumn
 *
pCﬁ
;

467 c⁄° *
zCﬁl
;

468 
sqlôe3
 *
db
 = 
pP¨£
->db;

470 
pEx¥
 = 
	`sqlôe3Ex¥
(
db
, 
TK_REGISTER
, 0);

471 if–
pEx¥
 ){

472 if–
iCﬁ
>=0 && iCﬁ!=
pTab
->
iPKey
 ){

473 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

474 
pEx¥
->
iTabÀ
 = 
ªgBa£
 + 
iCﬁ
 + 1;

475 
pEx¥
->
afföôy
 = 
pCﬁ
->affinity;

476 
zCﬁl
 = 
pCﬁ
->zColl;

477 if–
zCﬁl
==0 ) zCﬁ»
db
->
pDÊtCﬁl
->
zName
;

478 
pEx¥
 = 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,ÖEx¥, 
zCﬁl
);

480 
pEx¥
->
iTabÀ
 = 
ªgBa£
;

481 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

484  
pEx¥
;

485 
	}
}

491 
Ex¥
 *
	$ex¥TabÀCﬁumn
(

492 
sqlôe3
 *
db
,

493 
TabÀ
 *
pTab
,

494 
iCurs‹
,

495 
i16
 
iCﬁ


497 
Ex¥
 *
pEx¥
 = 
	`sqlôe3Ex¥
(
db
, 
TK_COLUMN
, 0);

498 if–
pEx¥
 ){

499 
pEx¥
->
pTab
 =ÖTab;

500 
pEx¥
->
iTabÀ
 = 
iCurs‹
;

501 
pEx¥
->
iCﬁumn
 = 
iCﬁ
;

503  
pEx¥
;

504 
	}
}

538 
	$fkSˇnChûdªn
(

539 
P¨£
 *
pP¨£
,

540 
SrcLi°
 *
pSrc
,

541 
TabÀ
 *
pTab
,

542 
Index
 *
pIdx
,

543 
FKey
 *
pFKey
,

544 *
aiCﬁ
,

545 
ªgD©a
,

546 
nIn¸


548 
sqlôe3
 *
db
 = 
pP¨£
->db;

549 
i
;

550 
Ex¥
 *
pWhîe
 = 0;

551 
NameC⁄ãxt
 
sNameC⁄ãxt
;

552 
WhîeInfo
 *
pWInfo
;

553 
iFkIfZîo
 = 0;

554 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

556 
	`as£π
–
pIdx
==0 ||ÖIdx->
pTabÀ
==
pTab
 );

557 
	`as£π
–
pIdx
==0 ||ÖIdx->
nKeyCﬁ
==
pFKey
->
nCﬁ
 );

558 
	`as£π
–
pIdx
!=0 || 
pFKey
->
nCﬁ
==1 );

559 
	`as£π
–
pIdx
!=0 || 
	`HasRowid
(
pTab
) );

561 if–
nIn¸
<0 ){

562 
iFkIfZîo
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 
pFKey
->
isDe„ºed
, 0);

563 
	`VdbeCovîage
(
v
);

574 
i
=0; i<
pFKey
->
nCﬁ
; i++){

575 
Ex¥
 *
pLe·
;

576 
Ex¥
 *
pRight
;

577 
Ex¥
 *
pEq
;

578 
i16
 
iCﬁ
;

579 c⁄° *
zCﬁ
;

581 
iCﬁ
 = 
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] : -1;

582 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, 
iCﬁ
);

583 
iCﬁ
 = 
aiCﬁ
 ?áiCﬁ[
i
] : 
pFKey
->
aCﬁ
[0].
iFrom
;

584 
	`as£π
–
iCﬁ
>=0 );

585 
zCﬁ
 = 
pFKey
->
pFrom
->
aCﬁ
[
iCﬁ
].
zName
;

586 
pRight
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zCﬁ
);

587 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pLe·
, 
pRight
, 0);

588 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pEq
);

602 if–
pTab
==
pFKey
->
pFrom
 && 
nIn¸
>0 ){

603 
Ex¥
 *
pNe
;

604 
Ex¥
 *
pLe·
;

605 
Ex¥
 *
pRight
;

606 if–
	`HasRowid
(
pTab
) ){

607 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, -1);

608 
pRight
 = 
	`ex¥TabÀCﬁumn
(
db
, 
pTab
, 
pSrc
->
a
[0].
iCurs‹
, -1);

609 
pNe
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NE
, 
pLe·
, 
pRight
, 0);

611 
Ex¥
 *
pEq
, *
pAŒ
 = 0;

612 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

613 
	`as£π
–
pIdx
!=0 );

614 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

615 
i16
 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

616 
	`as£π
–
iCﬁ
>=0 );

617 
pLe·
 = 
	`ex¥TabÀRegi°î
(
pP¨£
, 
pTab
, 
ªgD©a
, 
iCﬁ
);

618 
pRight
 = 
	`ex¥TabÀCﬁumn
(
db
, 
pTab
, 
pSrc
->
a
[0].
iCurs‹
, 
iCﬁ
);

619 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pLe·
, 
pRight
, 0);

620 
pAŒ
 = 
	`sqlôe3Ex¥And
(
db
,ÖAŒ, 
pEq
);

622 
pNe
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NOT
, 
pAŒ
, 0, 0);

624 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pNe
);

628 
	`mem£t
(&
sNameC⁄ãxt
, 0, (
NameC⁄ãxt
));

629 
sNameC⁄ãxt
.
pSrcLi°
 = 
pSrc
;

630 
sNameC⁄ãxt
.
pP¨£
 =ÖParse;

631 
	`sqlôe3ResﬁveEx¥Names
(&
sNameC⁄ãxt
, 
pWhîe
);

636 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pSrc
, 
pWhîe
, 0, 0, 0, 0);

637 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, 
nIn¸
);

638 if–
pWInfo
 ){

639 
	`sqlôe3WhîeEnd
(
pWInfo
);

643 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

644 if–
iFkIfZîo
 ){

645 
	`sqlôe3VdbeJumpHîe
(
v
, 
iFkIfZîo
);

647 
	}
}

663 
FKey
 *
	$sqlôe3FkRe„ªn˚s
(
TabÀ
 *
pTab
){

664  (
FKey
 *)
	`sqlôe3HashFöd
(&
pTab
->
pSchema
->
fkeyHash
,ÖTab->
zName
);

665 
	}
}

675 
	$fkTriggîDñëe
(
sqlôe3
 *
dbMem
, 
Triggî
 *
p
){

676 if–
p
 ){

677 
TriggîSãp
 *
pSãp
 = 
p
->
°ï_li°
;

678 
	`sqlôe3Ex¥Dñëe
(
dbMem
, 
pSãp
->
pWhîe
);

679 
	`sqlôe3Ex¥Li°Dñëe
(
dbMem
, 
pSãp
->
pEx¥Li°
);

680 
	`sqlôe3Sñe˘Dñëe
(
dbMem
, 
pSãp
->
pSñe˘
);

681 
	`sqlôe3Ex¥Dñëe
(
dbMem
, 
p
->
pWhí
);

682 
	`sqlôe3DbFªe
(
dbMem
, 
p
);

684 
	}
}

703 
	$sqlôe3FkDr›TabÀ
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
TabÀ
 *
pTab
){

704 
sqlôe3
 *
db
 = 
pP¨£
->db;

705 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
Ë&& !
	`IsVútuÆ
(
pTab
Ë&& !pTab->
pSñe˘
 ){

706 
iSkù
 = 0;

707 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

709 
	`as£π
–
v
 );

710 if–
	`sqlôe3FkRe„ªn˚s
(
pTab
)==0 ){

716 
FKey
 *
p
;

717 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

718 if–
p
->
isDe„ºed
 || (
db
->
Êags
 & 
SQLITE_De„rFKs
) ) ;

720 if–!
p
 ) ;

721 
iSkù
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

722 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 1, 
iSkù
); 
	`VdbeCovîage
(v);

725 
pP¨£
->
dißbÀTriggîs
 = 1;

726 
	`sqlôe3DñëeFrom
(
pP¨£
, 
	`sqlôe3SrcLi°Dup
(
db
, 
pName
, 0), 0);

727 
pP¨£
->
dißbÀTriggîs
 = 0;

738 if–(
db
->
Êags
 & 
SQLITE_De„rFKs
)==0 ){

739 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkIfZîo
, 0, 
	`sqlôe3VdbeCuºítAddr
(v)+2);

740 
	`VdbeCovîage
(
v
);

741 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_FOREIGNKEY
,

742 
OE_Ab‹t
, 0, 
P4_STATIC
, 
P5_C⁄°øötFK
);

745 if–
iSkù
 ){

746 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iSkù
);

749 
	}
}

764 
	$fkChûdIsModifõd
(

765 
TabÀ
 *
pTab
,

766 
FKey
 *
p
,

767 *
aCh™ge
,

768 
bChngRowid


770 
i
;

771 
i
=0; i<
p
->
nCﬁ
; i++){

772 
iChûdKey
 = 
p
->
aCﬁ
[
i
].
iFrom
;

773 if–
aCh™ge
[
iChûdKey
]>=0 )  1;

774 if–
iChûdKey
==
pTab
->
iPKey
 && 
bChngRowid
 )  1;

777 
	}
}

791 
	$fkP¨ítIsModifõd
(

792 
TabÀ
 *
pTab
,

793 
FKey
 *
p
,

794 *
aCh™ge
,

795 
bChngRowid


797 
i
;

798 
i
=0; i<
p
->
nCﬁ
; i++){

799 *
zKey
 = 
p
->
aCﬁ
[
i
].
zCﬁ
;

800 
iKey
;

801 
iKey
=0; iKey<
pTab
->
nCﬁ
; iKey++){

802 if–
aCh™ge
[
iKey
]>=0 || (iKey==
pTab
->
iPKey
 && 
bChngRowid
) ){

803 
Cﬁumn
 *
pCﬁ
 = &
pTab
->
aCﬁ
[
iKey
];

804 if–
zKey
 ){

805 if–0==
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zKey
) )  1;

806 }if–
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
 ){

813 
	}
}

820 
	$isSëNuŒA˘i⁄
(
P¨£
 *
pP¨£
, 
FKey
 *
pFKey
){

821 
P¨£
 *
pT›
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

822 if–
pT›
->
pTriggîPrg
 ){

823 
Triggî
 *
p
 = 
pT›
->
pTriggîPrg
->
pTriggî
;

824 if–(
p
==
pFKey
->
≠Triggî
[0] &&ÖFKey->
aA˘i⁄
[0]==
OE_SëNuŒ
)

825 || (
p
==
pFKey
->
≠Triggî
[1] &&ÖFKey->
aA˘i⁄
[1]==
OE_SëNuŒ
)

831 
	}
}

853 
	$sqlôe3FkCheck
(

854 
P¨£
 *
pP¨£
,

855 
TabÀ
 *
pTab
,

856 
ªgOld
,

857 
ªgNew
,

858 *
aCh™ge
,

859 
bChngRowid


861 
sqlôe3
 *
db
 = 
pP¨£
->db;

862 
FKey
 *
pFKey
;

863 
iDb
;

864 c⁄° *
zDb
;

865 
isIgn‹eEº‹s
 = 
pP¨£
->
dißbÀTriggîs
;

868 
	`as£π
–(
ªgOld
==0)!=(
ªgNew
==0) );

871 if–(
db
->
Êags
&
SQLITE_F‹eignKeys
)==0 ) ;

873 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

874 
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

878 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKeyıFKey->
pNextFrom
){

879 
TabÀ
 *
pTo
;

880 
Index
 *
pIdx
 = 0;

881 *
aiFªe
 = 0;

882 *
aiCﬁ
;

883 
iCﬁ
;

884 
i
;

885 
bIgn‹e
 = 0;

887 if–
aCh™ge


888 && 
	`sqlôe3_°ricmp
(
pTab
->
zName
, 
pFKey
->
zTo
)!=0

889 && 
	`fkChûdIsModifõd
(
pTab
, 
pFKey
, 
aCh™ge
, 
bChngRowid
)==0

898 if–
pP¨£
->
dißbÀTriggîs
 ){

899 
pTo
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFKey
->
zTo
, 
zDb
);

901 
pTo
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
pFKey
->
zTo
, 
zDb
);

903 if–!
pTo
 || 
	`sqlôe3FkLoˇãIndex
(
pP¨£
,ÖTo, 
pFKey
, &
pIdx
, &
aiFªe
) ){

904 
	`as£π
–
isIgn‹eEº‹s
==0 || (
ªgOld
!=0 && 
ªgNew
==0) );

905 if–!
isIgn‹eEº‹s
 || 
db
->
mÆlocFaûed
 ) ;

906 if–
pTo
==0 ){

914 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

915 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
pFKey
->
nCﬁ
 + 1;

916 
i
=0; i<
pFKey
->
nCﬁ
; i++){

917 
iReg
 = 
pFKey
->
aCﬁ
[
i
].
iFrom
 + 
ªgOld
 + 1;

918 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
iReg
, 
iJump
); 
	`VdbeCovîage
(v);

920 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_FkCou¡î
, 
pFKey
->
isDe„ºed
, -1);

924 
	`as£π
–
pFKey
->
nCﬁ
==1 || (
aiFªe
 && 
pIdx
) );

926 if–
aiFªe
 ){

927 
aiCﬁ
 = 
aiFªe
;

929 
iCﬁ
 = 
pFKey
->
aCﬁ
[0].
iFrom
;

930 
aiCﬁ
 = &
iCﬁ
;

932 
i
=0; i<
pFKey
->
nCﬁ
; i++){

933 if–
aiCﬁ
[
i
]==
pTab
->
iPKey
 ){

934 
aiCﬁ
[
i
] = -1;

936 
	`as£π
–
pIdx
==0 ||ÖIdx->
aiCﬁumn
[
i
]>=0 );

937 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


941 if–
db
->
xAuth
 ){

942 
rˇuth
;

943 *
zCﬁ
 = 
pTo
->
aCﬁ
[
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] :ÖTo->
iPKey
].
zName
;

944 
rˇuth
 = 
	`sqlôe3AuthRódCﬁ
(
pP¨£
, 
pTo
->
zName
, 
zCﬁ
, 
iDb
);

945 
bIgn‹e
 = (
rˇuth
==
SQLITE_IGNORE
);

953 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTo
->
äum
, 0,ÖTo->
zName
);

954 
pP¨£
->
nTab
++;

956 if–
ªgOld
!=0 ){

960 
	`fkLookupP¨ít
(
pP¨£
, 
iDb
, 
pTo
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgOld
, -1, 
bIgn‹e
);

962 if–
ªgNew
!=0 && !
	`isSëNuŒA˘i⁄
(
pP¨£
, 
pFKey
) ){

971 
	`fkLookupP¨ít
(
pP¨£
, 
iDb
, 
pTo
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgNew
, +1, 
bIgn‹e
);

974 
	`sqlôe3DbFªe
(
db
, 
aiFªe
);

979 
pFKey
 = 
	`sqlôe3FkRe„ªn˚s
(
pTab
);ÖFKey;ÖFKeyıFKey->
pNextTo
){

980 
Index
 *
pIdx
 = 0;

981 
SrcLi°
 *
pSrc
;

982 *
aiCﬁ
 = 0;

984 if–
aCh™ge
 && 
	`fkP¨ítIsModifõd
(
pTab
, 
pFKey
,áCh™ge, 
bChngRowid
)==0 ){

988 if–!
pFKey
->
isDe„ºed
 && !(
db
->
Êags
 & 
SQLITE_De„rFKs
)

989 && !
pP¨£
->
pT›Àvñ
 && !pP¨£->
isMu…iWrôe


991 
	`as£π
–
ªgOld
==0 && 
ªgNew
!=0 );

997 if–
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
pFKey
, &
pIdx
, &
aiCﬁ
) ){

998 if–!
isIgn‹eEº‹s
 || 
db
->
mÆlocFaûed
 ) ;

1001 
	`as£π
–
aiCﬁ
 || 
pFKey
->
nCﬁ
==1 );

1005 
pSrc
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

1006 if–
pSrc
 ){

1007 
SrcLi°_ôem
 *
pIãm
 = 
pSrc
->
a
;

1008 
pIãm
->
pTab
 = 
pFKey
->
pFrom
;

1009 
pIãm
->
zName
 = 
pFKey
->
pFrom
->zName;

1010 
pIãm
->
pTab
->
nRef
++;

1011 
pIãm
->
iCurs‹
 = 
pP¨£
->
nTab
++;

1013 if–
ªgNew
!=0 ){

1014 
	`fkSˇnChûdªn
(
pP¨£
, 
pSrc
, 
pTab
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgNew
, -1);

1016 if–
ªgOld
!=0 ){

1017 
eA˘i⁄
 = 
pFKey
->
aA˘i⁄
[
aCh™ge
!=0];

1018 
	`fkSˇnChûdªn
(
pP¨£
, 
pSrc
, 
pTab
, 
pIdx
, 
pFKey
, 
aiCﬁ
, 
ªgOld
, 1);

1036 if–!
pFKey
->
isDe„ºed
 && 
eA˘i⁄
!=
OE_Casˇde
 &&ÉA˘i⁄!=
OE_SëNuŒ
 ){

1037 
	`sqlôe3MayAb‹t
(
pP¨£
);

1040 
pIãm
->
zName
 = 0;

1041 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pSrc
);

1043 
	`sqlôe3DbFªe
(
db
, 
aiCﬁ
);

1045 
	}
}

1047 
	#COLUMN_MASK
(
x
Ë(((x)>31Ë? 0xfffffff‡: ((
u32
)1<<(x)))

	)

1053 
u32
 
	$sqlôe3FkOldmask
(

1054 
P¨£
 *
pP¨£
,

1055 
TabÀ
 *
pTab


1057 
u32
 
mask
 = 0;

1058 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1059 
FKey
 *
p
;

1060 
i
;

1061 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

1062 
i
=0; i<
p
->
nCﬁ
; i++Ë
mask
 |
	`COLUMN_MASK
’->
aCﬁ
[i].
iFrom
);

1064 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

1065 
Index
 *
pIdx
 = 0;

1066 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
p
, &
pIdx
, 0);

1067 if–
pIdx
 ){

1068 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

1069 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]>=0 );

1070 
mask
 |
	`COLUMN_MASK
(
pIdx
->
aiCﬁumn
[
i
]);

1075  
mask
;

1076 
	}
}

1093 
	$sqlôe3FkRequúed
(

1094 
P¨£
 *
pP¨£
,

1095 
TabÀ
 *
pTab
,

1096 *
aCh™ge
,

1097 
chngRowid


1099 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1100 if–!
aCh™ge
 ){

1104  (
	`sqlôe3FkRe„ªn˚s
(
pTab
Ë||ÖTab->
pFKey
);

1108 
FKey
 *
p
;

1111 
p
=
pTab
->
pFKey
;Ö;Öı->
pNextFrom
){

1112 if–
	`fkChûdIsModifõd
(
pTab
, 
p
, 
aCh™ge
, 
chngRowid
) )  1;

1116 
p
=
	`sqlôe3FkRe„ªn˚s
(
pTab
);Ö;Öı->
pNextTo
){

1117 if–
	`fkP¨ítIsModifõd
(
pTab
, 
p
, 
aCh™ge
, 
chngRowid
) )  1;

1122 
	}
}

1153 
Triggî
 *
	$fkA˘i⁄Triggî
(

1154 
P¨£
 *
pP¨£
,

1155 
TabÀ
 *
pTab
,

1156 
FKey
 *
pFKey
,

1157 
Ex¥Li°
 *
pCh™ges


1159 
sqlôe3
 *
db
 = 
pP¨£
->db;

1160 
a˘i⁄
;

1161 
Triggî
 *
pTriggî
;

1162 
iA˘i⁄
 = (
pCh™ges
!=0);

1164 
a˘i⁄
 = 
pFKey
->
aA˘i⁄
[
iA˘i⁄
];

1165 if–
a˘i⁄
==
OE_Re°ri˘
 && (
db
->
Êags
 & 
SQLITE_De„rFKs
) ){

1168 
pTriggî
 = 
pFKey
->
≠Triggî
[
iA˘i⁄
];

1170 if–
a˘i⁄
!=
OE_N⁄e
 && !
pTriggî
 ){

1171 c⁄° *
zFrom
;

1172 
nFrom
;

1173 
Index
 *
pIdx
 = 0;

1174 *
aiCﬁ
 = 0;

1175 
TriggîSãp
 *
pSãp
 = 0;

1176 
Ex¥
 *
pWhîe
 = 0;

1177 
Ex¥Li°
 *
pLi°
 = 0;

1178 
Sñe˘
 *
pSñe˘
 = 0;

1179 
i
;

1180 
Ex¥
 *
pWhí
 = 0;

1182 if–
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pTab
, 
pFKey
, &
pIdx
, &
aiCﬁ
) )  0;

1183 
	`as£π
–
aiCﬁ
 || 
pFKey
->
nCﬁ
==1 );

1185 
i
=0; i<
pFKey
->
nCﬁ
; i++){

1186 
Tokí
 
tOld
 = { "old", 3 };

1187 
Tokí
 
tNew
 = { "new", 3 };

1188 
Tokí
 
tFromCﬁ
;

1189 
Tokí
 
tToCﬁ
;

1190 
iFromCﬁ
;

1191 
Ex¥
 *
pEq
;

1193 
iFromCﬁ
 = 
aiCﬁ
 ?áiCﬁ[
i
] : 
pFKey
->
aCﬁ
[0].
iFrom
;

1194 
	`as£π
–
iFromCﬁ
>=0 );

1195 
	`as£π
–
pIdx
!=0 || (
pTab
->
iPKey
>=0 &&ÖTab->iPKey<pTab->
nCﬁ
) );

1196 
	`as£π
–
pIdx
==0 ||ÖIdx->
aiCﬁumn
[
i
]>=0 );

1197 
	`sqlôe3TokíInô
(&
tToCﬁ
,

1198 
pTab
->
aCﬁ
[
pIdx
 ?ÖIdx->
aiCﬁumn
[
i
] :ÖTab->
iPKey
].
zName
);

1199 
	`sqlôe3TokíInô
(&
tFromCﬁ
, 
pFKey
->
pFrom
->
aCﬁ
[
iFromCﬁ
].
zName
);

1205 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
,

1206 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1207 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tOld
, 0),

1208 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0)

1210 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tFromCﬁ
, 0)

1212 
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhîe, 
pEq
);

1219 if–
pCh™ges
 ){

1220 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IS
,

1221 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1222 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tOld
, 0),

1223 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0),

1225 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1226 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tNew
, 0),

1227 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0),

1230 
pWhí
 = 
	`sqlôe3Ex¥And
(
db
,ÖWhí, 
pEq
);

1233 if–
a˘i⁄
!=
OE_Re°ri˘
 && (a˘i⁄!=
OE_Casˇde
 || 
pCh™ges
) ){

1234 
Ex¥
 *
pNew
;

1235 if–
a˘i⁄
==
OE_Casˇde
 ){

1236 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
,

1237 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tNew
, 0),

1238 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_ID
, &
tToCﬁ
, 0)

1240 }if–
a˘i⁄
==
OE_SëDÊt
 ){

1241 
Ex¥
 *
pDÊt
 = 
pFKey
->
pFrom
->
aCﬁ
[
iFromCﬁ
].pDflt;

1242 if–
pDÊt
 ){

1243 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pDÊt
, 0);

1245 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NULL
, 0, 0, 0);

1248 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NULL
, 0, 0, 0);

1250 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖLi°, 
pNew
);

1251 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pLi°
, &
tFromCﬁ
, 0);

1254 
	`sqlôe3DbFªe
(
db
, 
aiCﬁ
);

1256 
zFrom
 = 
pFKey
->
pFrom
->
zName
;

1257 
nFrom
 = 
	`sqlôe3SåÀn30
(
zFrom
);

1259 if–
a˘i⁄
==
OE_Re°ri˘
 ){

1260 
Tokí
 
tFrom
;

1261 
Ex¥
 *
pRai£
;

1263 
tFrom
.
z
 = 
zFrom
;

1264 
tFrom
.
n
 = 
nFrom
;

1265 
pRai£
 = 
	`sqlôe3Ex¥
(
db
, 
TK_RAISE
, "FOREIGN KEY constraint failed");

1266 if–
pRai£
 ){

1267 
pRai£
->
afföôy
 = 
OE_Ab‹t
;

1269 
pSñe˘
 = 
	`sqlôe3Sñe˘New
(
pP¨£
,

1270 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
pRai£
),

1271 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, &
tFrom
, 0),

1272 
pWhîe
,

1275 
pWhîe
 = 0;

1279 
db
->
lookaside
.
bDißbÀ
++;

1281 
pTriggî
 = (
Triggî
 *)
	`sqlôe3DbMÆlocZîo
(
db
,

1282 (
Triggî
) +

1283 (
TriggîSãp
) +

1284 
nFrom
 + 1

1286 if–
pTriggî
 ){

1287 
pSãp
 = 
pTriggî
->
°ï_li°
 = (
TriggîSãp
 *)&pTrigger[1];

1288 
pSãp
->
zT¨gë
 = (*)&pStep[1];

1289 
	`mem˝y
((*)
pSãp
->
zT¨gë
, 
zFrom
, 
nFrom
);

1291 
pSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

1292 
pSãp
->
pEx¥Li°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pLi°
, 
EXPRDUP_REDUCE
);

1293 
pSãp
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

1294 if–
pWhí
 ){

1295 
pWhí
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NOT
,ÖWhen, 0, 0);

1296 
pTriggî
->
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhí, 
EXPRDUP_REDUCE
);

1301 
db
->
lookaside
.
bDißbÀ
--;

1303 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

1304 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

1305 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1306 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

1307 if–
db
->
mÆlocFaûed
==1 ){

1308 
	`fkTriggîDñëe
(
db
, 
pTriggî
);

1311 
	`as£π
–
pSãp
!=0 );

1313  
a˘i⁄
 ){

1314 
OE_Re°ri˘
:

1315 
pSãp
->
›
 = 
TK_SELECT
;

1317 
OE_Casˇde
:

1318 if–!
pCh™ges
 ){

1319 
pSãp
->
›
 = 
TK_DELETE
;

1323 
pSãp
->
›
 = 
TK_UPDATE
;

1325 
pSãp
->
pTrig
 = 
pTriggî
;

1326 
pTriggî
->
pSchema
 = 
pTab
->pSchema;

1327 
pTriggî
->
pTabSchema
 = 
pTab
->
pSchema
;

1328 
pFKey
->
≠Triggî
[
iA˘i⁄
] = 
pTriggî
;

1329 
pTriggî
->
›
 = (
pCh™ges
 ? 
TK_UPDATE
 : 
TK_DELETE
);

1332  
pTriggî
;

1333 
	}
}

1339 
	$sqlôe3FkA˘i⁄s
(

1340 
P¨£
 *
pP¨£
,

1341 
TabÀ
 *
pTab
,

1342 
Ex¥Li°
 *
pCh™ges
,

1343 
ªgOld
,

1344 *
aCh™ge
,

1345 
bChngRowid


1351 if–
pP¨£
->
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

1352 
FKey
 *
pFKey
;

1353 
pFKey
 = 
	`sqlôe3FkRe„ªn˚s
(
pTab
);ÖFKey;ÖFKeyıFKey->
pNextTo
){

1354 if–
aCh™ge
==0 || 
	`fkP¨ítIsModifõd
(
pTab
, 
pFKey
,áCh™ge, 
bChngRowid
) ){

1355 
Triggî
 *
pA˘
 = 
	`fkA˘i⁄Triggî
(
pP¨£
, 
pTab
, 
pFKey
, 
pCh™ges
);

1356 if–
pA˘
 ){

1357 
	`sqlôe3CodeRowTriggîDúe˘
(
pP¨£
, 
pA˘
, 
pTab
, 
ªgOld
, 
OE_Ab‹t
, 0);

1362 
	}
}

1371 
	$sqlôe3FkDñëe
(
sqlôe3
 *
db
, 
TabÀ
 *
pTab
){

1372 
FKey
 *
pFKey
;

1373 
FKey
 *
pNext
;

1375 
	`as£π
–
db
==0 || 
	`IsVútuÆ
(
pTab
)

1376 || 
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pTab
->
pSchema
) );

1377 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKey=
pNext
){

1380 if–!
db
 || db->
≤ByãsFªed
==0 ){

1381 if–
pFKey
->
pPªvTo
 ){

1382 
pFKey
->
pPªvTo
->
pNextTo
 =ÖFKey->pNextTo;

1384 *
p
 = (*)
pFKey
->
pNextTo
;

1385 c⁄° *
z
 = (
p
 ? 
pFKey
->
pNextTo
->
zTo
 :ÖFKey->zTo);

1386 
	`sqlôe3HashIn£π
(&
pTab
->
pSchema
->
fkeyHash
, 
z
, 
p
);

1388 if–
pFKey
->
pNextTo
 ){

1389 
pFKey
->
pNextTo
->
pPªvTo
 =ÖFKey->pPrevTo;

1396 
	`as£π
–
pFKey
->
isDe„ºed
==0 ||ÖFKey->isDeferred==1 );

1399 #i‚de‡
SQLITE_OMIT_TRIGGER


1400 
	`fkTriggîDñëe
(
db
, 
pFKey
->
≠Triggî
[0]);

1401 
	`fkTriggîDñëe
(
db
, 
pFKey
->
≠Triggî
[1]);

1404 
pNext
 = 
pFKey
->
pNextFrom
;

1405 
	`sqlôe3DbFªe
(
db
, 
pFKey
);

1407 
	}
}

	@func.c

16 
	~"sqlôeI¡.h
"

17 
	~<°dlib.h
>

18 
	~<as£π.h
>

19 
	~"vdbeI¡.h
"

24 
CﬁlSeq
 *
	$sqlôe3GëFuncCﬁlSeq
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

25 
VdbeOp
 *
pOp
;

26 
	`as£π
–
c⁄ãxt
->
pVdbe
!=0 );

27 
pOp
 = &
c⁄ãxt
->
pVdbe
->
aOp
[c⁄ãxt->
iOp
-1];

28 
	`as£π
–
pOp
->
›code
==
OP_CﬁlSeq
 );

29 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 );

30  
pOp
->
p4
.
pCﬁl
;

31 
	}
}

37 
	$sqlôe3SkùAccumuœt‹Lﬂd
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

38 
c⁄ãxt
->
skùFœg
 = 1;

39 
	}
}

44 
	$mömaxFunc
(

45 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

46 
¨gc
,

47 
sqlôe3_vÆue
 **
¨gv


49 
i
;

50 
mask
;

51 
iBe°
;

52 
CﬁlSeq
 *
pCﬁl
;

54 
	`as£π
–
¨gc
>1 );

55 
mask
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
)==0 ? 0 : -1;

56 
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

57 
	`as£π
–
pCﬁl
 );

58 
	`as£π
–
mask
==-1 || mask==0 );

59 
iBe°
 = 0;

60 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

61 
i
=1; i<
¨gc
; i++){

62 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[
i
])==
SQLITE_NULL
 ) ;

63 if–(
	`sqlôe3MemCom∑ª
(
¨gv
[
iBe°
],árgv[
i
], 
pCﬁl
)^
mask
)>=0 ){

64 
	`ã°ˇ£
–
mask
==0 );

65 
iBe°
 = 
i
;

68 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[
iBe°
]);

69 
	}
}

74 
	$ty≥ofFunc
(

75 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

76 
NŸU£d
,

77 
sqlôe3_vÆue
 **
¨gv


79 c⁄° *
z
 = 0;

80 
	`UNUSED_PARAMETER
(
NŸU£d
);

81  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

82 
SQLITE_INTEGER
: 
z
 = "integer"; ;

83 
SQLITE_TEXT
: 
z
 = "text"; ;

84 
SQLITE_FLOAT
: 
z
 = "real"; ;

85 
SQLITE_BLOB
: 
z
 = "blob"; ;

86 : 
z
 = "null"; ;

88 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, -1, 
SQLITE_STATIC
);

89 
	}
}

95 
	$ÀngthFunc
(

96 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

97 
¨gc
,

98 
sqlôe3_vÆue
 **
¨gv


100 
Àn
;

102 
	`as£π
–
¨gc
==1 );

103 
	`UNUSED_PARAMETER
(
¨gc
);

104  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

105 
SQLITE_BLOB
:

106 
SQLITE_INTEGER
:

107 
SQLITE_FLOAT
: {

108 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]));

111 
SQLITE_TEXT
: {

112 c⁄° *
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

113 if–
z
==0 ) ;

114 
Àn
 = 0;

115  *
z
 ){

116 
Àn
++;

117 
	`SQLITE_SKIP_UTF8
(
z
);

119 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
Àn
);

123 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

127 
	}
}

135 
	$absFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

136 
	`as£π
–
¨gc
==1 );

137 
	`UNUSED_PARAMETER
(
¨gc
);

138  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

139 
SQLITE_INTEGER
: {

140 
i64
 
iVÆ
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

141 if–
iVÆ
<0 ){

142 if–
iVÆ
==
SMALLEST_INT64
 ){

146 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "integer overflow", -1);

149 
iVÆ
 = -iVal;

151 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
iVÆ
);

154 
SQLITE_NULL
: {

156 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

165 
rVÆ
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

166 if–
rVÆ
<0 )ÑVal = -rVal;

167 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
rVÆ
);

171 
	}
}

184 
	$ö°rFunc
(

185 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

186 
¨gc
,

187 
sqlôe3_vÆue
 **
¨gv


189 c⁄° *
zHay°ack
;

190 c⁄° *
zNìdÀ
;

191 
nHay°ack
;

192 
nNìdÀ
;

193 
ty≥Hay°ack
, 
ty≥NìdÀ
;

194 
N
 = 1;

195 
isText
;

197 
	`UNUSED_PARAMETER
(
¨gc
);

198 
ty≥Hay°ack
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]);

199 
ty≥NìdÀ
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[1]);

200 if–
ty≥Hay°ack
==
SQLITE_NULL
 || 
ty≥NìdÀ
==SQLITE_NULL ) ;

201 
nHay°ack
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

202 
nNìdÀ
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

203 if–
ty≥Hay°ack
==
SQLITE_BLOB
 && 
ty≥NìdÀ
==SQLITE_BLOB ){

204 
zHay°ack
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

205 
zNìdÀ
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[1]);

206 
isText
 = 0;

208 
zHay°ack
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

209 
zNìdÀ
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

210 
isText
 = 1;

212  
nNìdÀ
<=
nHay°ack
 && 
	`memcmp
(
zHay°ack
, 
zNìdÀ
,ÇNeedle)!=0 ){

213 
N
++;

215 
nHay°ack
--;

216 
zHay°ack
++;

217 } 
isText
 && (
zHay°ack
[0]&0xc0)==0x80 );

219 if–
nNìdÀ
>
nHay°ack
 ) 
N
 = 0;

220 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
N
);

221 
	}
}

226 
	$¥ötfFunc
(

227 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

228 
¨gc
,

229 
sqlôe3_vÆue
 **
¨gv


231 
PrötfArgumíts
 
x
;

232 
SåAccum
 
°r
;

233 c⁄° *
zF‹m©
;

234 
n
;

235 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

237 if–
¨gc
>=1 && (
zF‹m©
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]))!=0 ){

238 
x
.
nArg
 = 
¨gc
-1;

239 
x
.
nU£d
 = 0;

240 
x
.
≠Arg
 = 
¨gv
+1;

241 
	`sqlôe3SåAccumInô
(&
°r
, 
db
, 0, 0, db->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

242 
°r
.
¥ötfFœgs
 = 
SQLITE_PRINTF_SQLFUNC
;

243 
	`sqlôe3XPrötf
(&
°r
, 
zF‹m©
, &
x
);

244 
n
 = 
°r
.
nCh¨
;

245 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3SåAccumFöish
(&
°r
), 
n
,

246 
SQLITE_DYNAMIC
);

248 
	}
}

262 
	$sub°rFunc
(

263 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

264 
¨gc
,

265 
sqlôe3_vÆue
 **
¨gv


267 c⁄° *
z
;

268 c⁄° *
z2
;

269 
Àn
;

270 
p0ty≥
;

271 
i64
 
p1
, 
p2
;

272 
√gP2
 = 0;

274 
	`as£π
–
¨gc
==3 ||árgc==2 );

275 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_NULL


276 || (
¨gc
==3 && 
	`sqlôe3_vÆue_ty≥
(
¨gv
[2])==
SQLITE_NULL
)

280 
p0ty≥
 = 
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]);

281 
p1
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

282 if–
p0ty≥
==
SQLITE_BLOB
 ){

283 
Àn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

284 
z
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

285 if–
z
==0 ) ;

286 
	`as£π
–
Àn
==
	`sqlôe3_vÆue_byãs
(
¨gv
[0]) );

288 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

289 if–
z
==0 ) ;

290 
Àn
 = 0;

291 if–
p1
<0 ){

292 
z2
=
z
; *z2; 
Àn
++){

293 
	`SQLITE_SKIP_UTF8
(
z2
);

297 #ifde‡
SQLITE_SUBSTR_COMPATIBILITY


303 if–
p1
==0 )Ö1 = 1;

305 if–
¨gc
==3 ){

306 
p2
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[2]);

307 if–
p2
<0 ){

308 
p2
 = -p2;

309 
√gP2
 = 1;

312 
p2
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
)->
aLimô
[
SQLITE_LIMIT_LENGTH
];

314 if–
p1
<0 ){

315 
p1
 +
Àn
;

316 if–
p1
<0 ){

317 
p2
 +
p1
;

318 if–
p2
<0 )Ö2 = 0;

319 
p1
 = 0;

321 }if–
p1
>0 ){

322 
p1
--;

323 }if–
p2
>0 ){

324 
p2
--;

326 if–
√gP2
 ){

327 
p1
 -
p2
;

328 if–
p1
<0 ){

329 
p2
 +
p1
;

330 
p1
 = 0;

333 
	`as£π
–
p1
>=0 && 
p2
>=0 );

334 if–
p0ty≥
!=
SQLITE_BLOB
 ){

335  *
z
 && 
p1
 ){

336 
	`SQLITE_SKIP_UTF8
(
z
);

337 
p1
--;

339 
z2
=
z
; *z2 && 
p2
;Ö2--){

340 
	`SQLITE_SKIP_UTF8
(
z2
);

342 
	`sqlôe3_ªsu…_ãxt64
(
c⁄ãxt
, (*)
z
, 
z2
-z, 
SQLITE_TRANSIENT
,

343 
SQLITE_UTF8
);

345 if–
p1
+
p2
>
Àn
 ){

346 
p2
 = 
Àn
-
p1
;

347 if–
p2
<0 )Ö2 = 0;

349 
	`sqlôe3_ªsu…_blob64
(
c⁄ãxt
, (*)&
z
[
p1
], (
u64
)
p2
, 
SQLITE_TRANSIENT
);

351 
	}
}

356 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


357 
	$roundFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

358 
n
 = 0;

359 
r
;

360 *
zBuf
;

361 
	`as£π
–
¨gc
==1 ||árgc==2 );

362 if–
¨gc
==2 ){

363 if–
SQLITE_NULL
==
	`sqlôe3_vÆue_ty≥
(
¨gv
[1]) ) ;

364 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

365 if–
n
>30 )Ç = 30;

366 if–
n
<0 )Ç = 0;

368 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

369 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

374 if–
n
==0 && 
r
>=0 &&Ñ<
LARGEST_INT64
-1 ){

375 
r
 = ()((
sqlôe_öt64
)(r+0.5));

376 }if–
n
==0 && 
r
<0 && (-r)<
LARGEST_INT64
-1 ){

377 
r
 = -()((
sqlôe_öt64
)((-r)+0.5));

379 
zBuf
 = 
	`sqlôe3_m¥ötf
("%.*f",
n
,
r
);

380 if–
zBuf
==0 ){

381 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

384 
	`sqlôe3AtoF
(
zBuf
, &
r
, 
	`sqlôe3SåÀn30
(zBuf), 
SQLITE_UTF8
);

385 
	`sqlôe3_‰ì
(
zBuf
);

387 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
);

388 
	}
}

398 *
	$c⁄ãxtMÆloc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
i64
 
nByã
){

399 *
z
;

400 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

401 
	`as£π
–
nByã
>0 );

402 
	`ã°ˇ£
–
nByã
==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

403 
	`ã°ˇ£
–
nByã
==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]+1 );

404 if–
nByã
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

405 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

406 
z
 = 0;

408 
z
 = 
	`sqlôe3MÆloc
(
nByã
);

409 if–!
z
 ){

410 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

413  
z
;

414 
	}
}

419 
	$uµîFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

420 *
z1
;

421 c⁄° *
z2
;

422 
i
, 
n
;

423 
	`UNUSED_PARAMETER
(
¨gc
);

424 
z2
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

425 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

427 
	`as£π
–
z2
==(*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

428 if–
z2
 ){

429 
z1
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)+1);

430 if–
z1
 ){

431 
i
=0; i<
n
; i++){

432 
z1
[
i
] = ()
	`sqlôe3Touµî
(
z2
[i]);

434 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z1
, 
n
, 
sqlôe3_‰ì
);

437 
	}
}

438 
	$lowîFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

439 *
z1
;

440 c⁄° *
z2
;

441 
i
, 
n
;

442 
	`UNUSED_PARAMETER
(
¨gc
);

443 
z2
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

444 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

446 
	`as£π
–
z2
==(*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

447 if–
z2
 ){

448 
z1
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)+1);

449 if–
z1
 ){

450 
i
=0; i<
n
; i++){

451 
z1
[
i
] = 
	`sqlôe3Tﬁowî
(
z2
[i]);

453 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z1
, 
n
, 
sqlôe3_‰ì
);

456 
	}
}

466 
	#no›Func
 
vîsi⁄Func


	)

471 
	$øndomFunc
(

472 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

473 
NŸU£d
,

474 
sqlôe3_vÆue
 **
NŸU£d2


476 
sqlôe_öt64
 
r
;

477 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

478 
	`sqlôe3_øndom√ss
((
r
), &r);

479 if–
r
<0 ){

488 
r
 = -‘ & 
LARGEST_INT64
);

490 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
r
);

491 
	}
}

497 
	$øndomBlob
(

498 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

499 
¨gc
,

500 
sqlôe3_vÆue
 **
¨gv


502 
n
;

503 *
p
;

504 
	`as£π
–
¨gc
==1 );

505 
	`UNUSED_PARAMETER
(
¨gc
);

506 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

507 if–
n
<1 ){

508 
n
 = 1;

510 
p
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, 
n
);

511 if–
p
 ){

512 
	`sqlôe3_øndom√ss
(
n
, 
p
);

513 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, (*)
p
, 
n
, 
sqlôe3_‰ì
);

515 
	}
}

521 
	$œ°_ö£π_rowid
(

522 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

523 
NŸU£d
,

524 
sqlôe3_vÆue
 **
NŸU£d2


526 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

527 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

531 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
	`sqlôe3_œ°_ö£π_rowid
(
db
));

532 
	}
}

541 
	$ch™ges
(

542 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

543 
NŸU£d
,

544 
sqlôe3_vÆue
 **
NŸU£d2


546 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

547 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

548 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_ch™ges
(
db
));

549 
	}
}

555 
	$tŸÆ_ch™ges
(

556 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

557 
NŸU£d
,

558 
sqlôe3_vÆue
 **
NŸU£d2


560 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

561 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

564 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_tŸÆ_ch™ges
(
db
));

565 
	}
}

570 
	scom∑ªInfo
 {

571 
u8
 
	mm©chAŒ
;

572 
u8
 
	mm©chO√
;

573 
u8
 
	mm©chSë
;

574 
u8
 
	mnoCa£
;

583 #i‡
deföed
(
SQLITE_EBCDIC
)

584 
	#sqlôe3Utf8Ród
(
A
Ë(*((*A)++))

	)

585 
	#Utf8Ród
(
A
Ë(*(A++))

	)

587 
	#Utf8Ród
(
A
Ë(A[0]<0x80?*(A++):
	`sqlôe3Utf8Ród
(&A))

	)

590 c⁄° 
com∑ªInfo
 
	gglobInfo
 = { '*', '?', '[', 0 };

593 c⁄° 
com∑ªInfo
 
	glikeInfoN‹m
 = { '%', '_', 0, 1 };

596 c⁄° 
com∑ªInfo
 
	glikeInfoA…
 = { '%', '_', 0, 0 };

633 
	$∑âînCom∑ª
(

634 c⁄° 
u8
 *
zP©ã∫
,

635 c⁄° 
u8
 *
zSåög
,

636 c⁄° 
com∑ªInfo
 *
pInfo
,

637 
u32
 
m©chOthî


639 
u32
 
c
, 
c2
;

640 
u32
 
m©chO√
 = 
pInfo
->matchOne;

641 
u32
 
m©chAŒ
 = 
pInfo
->matchAll;

642 
u8
 
noCa£
 = 
pInfo
->noCase;

643 c⁄° 
u8
 *
zEsˇ≥d
 = 0;

645  (
c
 = 
	`Utf8Ród
(
zP©ã∫
))!=0 ){

646 if–
c
==
m©chAŒ
 ){

650  (
c
=
	`Utf8Ród
(
zP©ã∫
)Ë=
m©chAŒ
 || c =
m©chO√
 ){

651 if–
c
==
m©chO√
 && 
	`sqlôe3Utf8Ród
(&
zSåög
)==0 ){

655 if–
c
==0 ){

657 }if–
c
==
m©chOthî
 ){

658 if–
pInfo
->
m©chSë
==0 ){

659 
c
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

660 if–
c
==0 )  0;

664 
	`as£π
–
m©chOthî
<0x80 );

665  *
zSåög


666 && 
	`∑âînCom∑ª
(&
zP©ã∫
[-1],
zSåög
,
pInfo
,
m©chOthî
)==0 ){

667 
	`SQLITE_SKIP_UTF8
(
zSåög
);

669  *
zSåög
!=0;

682 if–
c
<=0x80 ){

683 
u32
 
cx
;

684 if–
noCa£
 ){

685 
cx
 = 
	`sqlôe3Touµî
(
c
);

686 
c
 = 
	`sqlôe3Tﬁowî
(c);

688 
cx
 = 
c
;

690  (
c2
 = *(
zSåög
++))!=0 ){

691 if–
c2
!=
c
 && c2!=
cx
 ) ;

692 if–
	`∑âînCom∑ª
(
zP©ã∫
,
zSåög
,
pInfo
,
m©chOthî
) )  1;

695  (
c2
 = 
	`Utf8Ród
(
zSåög
))!=0 ){

696 if–
c2
!=
c
 ) ;

697 if–
	`∑âînCom∑ª
(
zP©ã∫
,
zSåög
,
pInfo
,
m©chOthî
) )  1;

702 if–
c
==
m©chOthî
 ){

703 if–
pInfo
->
m©chSë
==0 ){

704 
c
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

705 if–
c
==0 )  0;

706 
zEsˇ≥d
 = 
zP©ã∫
;

708 
u32
 
¥i‹_c
 = 0;

709 
£í
 = 0;

710 
övît
 = 0;

711 
c
 = 
	`sqlôe3Utf8Ród
(&
zSåög
);

712 if–
c
==0 )  0;

713 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

714 if–
c2
=='^' ){

715 
övît
 = 1;

716 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

718 if–
c2
==']' ){

719 if–
c
==']' ) 
£í
 = 1;

720 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

722  
c2
 && c2!=']' ){

723 if–
c2
=='-' && 
zP©ã∫
[0]!=']' && zP©ã∫[0]!=0 && 
¥i‹_c
>0 ){

724 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

725 if–
c
>=
¥i‹_c
 && c<=
c2
 ) 
£í
 = 1;

726 
¥i‹_c
 = 0;

728 if–
c
==
c2
 ){

729 
£í
 = 1;

731 
¥i‹_c
 = 
c2
;

733 
c2
 = 
	`sqlôe3Utf8Ród
(&
zP©ã∫
);

735 if–
c2
==0 || (
£í
 ^ 
övît
)==0 ){

741 
c2
 = 
	`Utf8Ród
(
zSåög
);

742 if–
c
==
c2
 ) ;

743 if–
noCa£
 && 
	`sqlôe3Tﬁowî
(
c
)==sqlôe3Tﬁowî(
c2
) && c<0x80 && c2<0x80 ){

746 if–
c
==
m©chO√
 && 
zP©ã∫
!=
zEsˇ≥d
 && 
c2
!=0 ) ;

749  *
zSåög
==0;

750 
	}
}

755 
	$sqlôe3_°rglob
(c⁄° *
zGlobP©ã∫
, c⁄° *
zSåög
){

756  
	`∑âînCom∑ª
((
u8
*)
zGlobP©ã∫
, (u8*)
zSåög
, &
globInfo
, '[')==0;

757 
	}
}

762 
	$sqlôe3_°æike
(c⁄° *
zP©ã∫
, c⁄° *
zSå
, 
esc
){

763  
	`∑âînCom∑ª
((
u8
*)
zP©ã∫
, (u8*)
zSå
, &
likeInfoN‹m
, 
esc
)==0;

764 
	}
}

771 #ifde‡
SQLITE_TEST


772 
	gsqlôe3_like_cou¡
 = 0;

788 
	$likeFunc
(

789 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

790 
¨gc
,

791 
sqlôe3_vÆue
 **
¨gv


793 c⁄° *
zA
, *
zB
;

794 
u32
 
esˇ≥
;

795 
nP©
;

796 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

797 
com∑ªInfo
 *
pInfo
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

799 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


800 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_BLOB


801 || 
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_BLOB


803 #ifde‡
SQLITE_TEST


804 
sqlôe3_like_cou¡
++;

806 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 0);

810 
zB
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

811 
zA
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

816 
nP©
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

817 
	`ã°ˇ£
–
nP©
==
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
] );

818 
	`ã°ˇ£
–
nP©
==
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
]+1 );

819 if–
nP©
 > 
db
->
aLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
] ){

820 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "LIKE or GLOBÖatternÅoo complex", -1);

823 
	`as£π
–
zB
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

825 if–
¨gc
==3 ){

829 c⁄° *
zEsc
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

830 if–
zEsc
==0 ) ;

831 if–
	`sqlôe3Utf8Ch¨Lí
((*)
zEsc
, -1)!=1 ){

832 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,

836 
esˇ≥
 = 
	`sqlôe3Utf8Ród
(&
zEsc
);

838 
esˇ≥
 = 
pInfo
->
m©chSë
;

840 if–
zA
 && 
zB
 ){

841 #ifde‡
SQLITE_TEST


842 
sqlôe3_like_cou¡
++;

844 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`∑âînCom∑ª
(
zB
, 
zA
, 
pInfo
, 
esˇ≥
));

846 
	}
}

853 
	$nuŒifFunc
(

854 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

855 
NŸU£d
,

856 
sqlôe3_vÆue
 **
¨gv


858 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

859 
	`UNUSED_PARAMETER
(
NŸU£d
);

860 if–
	`sqlôe3MemCom∑ª
(
¨gv
[0],árgv[1], 
pCﬁl
)!=0 ){

861 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

863 
	}
}

869 
	$vîsi⁄Func
(

870 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

871 
NŸU£d
,

872 
sqlôe3_vÆue
 **
NŸU£d2


874 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

877 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_libvîsi⁄
(), -1, 
SQLITE_STATIC
);

878 
	}
}

885 
	$sour˚idFunc
(

886 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

887 
NŸU£d
,

888 
sqlôe3_vÆue
 **
NŸU£d2


890 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

893 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_sour˚id
(), -1, 
SQLITE_STATIC
);

894 
	}
}

901 
	$îæogFunc
(

902 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

903 
¨gc
,

904 
sqlôe3_vÆue
 **
¨gv


906 
	`UNUSED_PARAMETER
(
¨gc
);

907 
	`UNUSED_PARAMETER
(
c⁄ãxt
);

908 
	`sqlôe3_log
(
	`sqlôe3_vÆue_öt
(
¨gv
[0]), "%s", 
	`sqlôe3_vÆue_ãxt
(argv[1]));

909 
	}
}

916 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


917 
	$compûe›ti⁄u£dFunc
(

918 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

919 
¨gc
,

920 
sqlôe3_vÆue
 **
¨gv


922 c⁄° *
zO±Name
;

923 
	`as£π
–
¨gc
==1 );

924 
	`UNUSED_PARAMETER
(
¨gc
);

929 if–(
zO±Name
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]))!=0 ){

930 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_compûe›ti⁄_u£d
(
zO±Name
));

932 
	}
}

940 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


941 
	$compûe›ti⁄gëFunc
(

942 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

943 
¨gc
,

944 
sqlôe3_vÆue
 **
¨gv


946 
n
;

947 
	`as£π
–
¨gc
==1 );

948 
	`UNUSED_PARAMETER
(
¨gc
);

952 
n
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

953 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3_compûe›ti⁄_gë
(
n
), -1, 
SQLITE_STATIC
);

954 
	}
}

959 c⁄° 
	ghexdigôs
[] = {

971 
	$quŸeFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

972 
	`as£π
–
¨gc
==1 );

973 
	`UNUSED_PARAMETER
(
¨gc
);

974  
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]) ){

975 
SQLITE_FLOAT
: {

976 
r1
, 
r2
;

977 
zBuf
[50];

978 
r1
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

979 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%!.15g", 
r1
);

980 
	`sqlôe3AtoF
(
zBuf
, &
r2
, 20, 
SQLITE_UTF8
);

981 if–
r1
!=
r2
 ){

982 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%!.20e", 
r1
);

984 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

987 
SQLITE_INTEGER
: {

988 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

991 
SQLITE_BLOB
: {

992 *
zText
 = 0;

993 c⁄° *
zBlob
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

994 
nBlob
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

995 
	`as£π
–
zBlob
==
	`sqlôe3_vÆue_blob
(
¨gv
[0]) );

996 
zText
 = (*)
	`c⁄ãxtMÆloc
(
c⁄ãxt
, (2*(
i64
)
nBlob
)+4);

997 if–
zText
 ){

998 
i
;

999 
i
=0; i<
nBlob
; i++){

1000 
zText
[(
i
*2)+2] = 
hexdigôs
[(
zBlob
[i]>>4)&0x0F];

1001 
zText
[(
i
*2)+3] = 
hexdigôs
[(
zBlob
[i])&0x0F];

1003 
zText
[(
nBlob
*2)+2] = '\'';

1004 
zText
[(
nBlob
*2)+3] = '\0';

1005 
zText
[0] = 'X';

1006 
zText
[1] = '\'';

1007 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zText
, -1, 
SQLITE_TRANSIENT
);

1008 
	`sqlôe3_‰ì
(
zText
);

1012 
SQLITE_TEXT
: {

1013 
i
,
j
;

1014 
u64
 
n
;

1015 c⁄° *
zArg
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1016 *
z
;

1018 if–
zArg
==0 ) ;

1019 
i
=0, 
n
=0; 
zArg
[i]; i++){ if( zArg[i]=='\'' )Ç++; }

1020 
z
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
i
)+((i64)
n
)+3);

1021 if–
z
 ){

1022 
z
[0] = '\'';

1023 
i
=0, 
j
=1; 
zArg
[i]; i++){

1024 
z
[
j
++] = 
zArg
[
i
];

1025 if–
zArg
[
i
]=='\'' ){

1026 
z
[
j
++] = '\'';

1029 
z
[
j
++] = '\'';

1030 
z
[
j
] = 0;

1031 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
z
, 
j
, 
sqlôe3_‰ì
);

1036 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 );

1037 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, "NULL", 4, 
SQLITE_STATIC
);

1041 
	}
}

1047 
	$unicodeFunc
(

1048 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1049 
¨gc
,

1050 
sqlôe3_vÆue
 **
¨gv


1052 c⁄° *
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1053 ()
¨gc
;

1054 if–
z
 && z[0] ) 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3Utf8Ród
(&z));

1055 
	}
}

1062 
	$ch¨Func
(

1063 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1064 
¨gc
,

1065 
sqlôe3_vÆue
 **
¨gv


1067 *
z
, *
zOut
;

1068 
i
;

1069 
zOut
 = 
z
 = 
	`sqlôe3_mÆloc64
–
¨gc
*4+1 );

1070 if–
z
==0 ){

1071 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1074 
i
=0; i<
¨gc
; i++){

1075 
sqlôe3_öt64
 
x
;

1076 
c
;

1077 
x
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[
i
]);

1078 if–
x
<0 || x>0x10ffff ) x = 0xfffd;

1079 
c
 = ()(
x
 & 0x1fffff);

1080 if–
c
<0x00080 ){

1081 *
zOut
++ = (
u8
)(
c
&0xFF);

1082 }if–
c
<0x00800 ){

1083 *
zOut
++ = 0xC0 + (
u8
)((
c
>>6)&0x1F);

1084 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1085 }if–
c
<0x10000 ){

1086 *
zOut
++ = 0xE0 + (
u8
)((
c
>>12)&0x0F);

1087 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F);

1088 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1090 *
zOut
++ = 0xF0 + (
u8
)((
c
>>18) & 0x07);

1091 *
zOut
++ = 0x80 + (
u8
)((
c
>>12) & 0x3F);

1092 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F);

1093 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F);

1096 
	`sqlôe3_ªsu…_ãxt64
(
c⁄ãxt
, (*)
z
, 
zOut
-z, 
sqlôe3_‰ì
, 
SQLITE_UTF8
);

1097 
	}
}

1103 
	$hexFunc
(

1104 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1105 
¨gc
,

1106 
sqlôe3_vÆue
 **
¨gv


1108 
i
, 
n
;

1109 c⁄° *
pBlob
;

1110 *
zHex
, *
z
;

1111 
	`as£π
–
¨gc
==1 );

1112 
	`UNUSED_PARAMETER
(
¨gc
);

1113 
pBlob
 = 
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

1114 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1115 
	`as£π
–
pBlob
==
	`sqlôe3_vÆue_blob
(
¨gv
[0]) );

1116 
z
 = 
zHex
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
n
)*2 + 1);

1117 if–
zHex
 ){

1118 
i
=0; i<
n
; i++, 
pBlob
++){

1119 
c
 = *
pBlob
;

1120 *(
z
++Ë
hexdigôs
[(
c
>>4)&0xf];

1121 *(
z
++Ë
hexdigôs
[
c
&0xf];

1123 *
z
 = 0;

1124 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zHex
, 
n
*2, 
sqlôe3_‰ì
);

1126 
	}
}

1131 
	$zîoblobFunc
(

1132 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1133 
¨gc
,

1134 
sqlôe3_vÆue
 **
¨gv


1136 
i64
 
n
;

1137 
rc
;

1138 
	`as£π
–
¨gc
==1 );

1139 
	`UNUSED_PARAMETER
(
¨gc
);

1140 
n
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

1141 if–
n
<0 )Ç = 0;

1142 
rc
 = 
	`sqlôe3_ªsu…_zîoblob64
(
c⁄ãxt
, 
n
);

1143 if–
rc
 ){

1144 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
, 
rc
);

1146 
	}
}

1154 
	$ª∂a˚Func
(

1155 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1156 
¨gc
,

1157 
sqlôe3_vÆue
 **
¨gv


1159 c⁄° *
zSå
;

1160 c⁄° *
zP©ã∫
;

1161 c⁄° *
zRï
;

1162 *
zOut
;

1163 
nSå
;

1164 
nP©ã∫
;

1165 
nRï
;

1166 
i64
 
nOut
;

1167 
lo›Limô
;

1168 
i
, 
j
;

1170 
	`as£π
–
¨gc
==3 );

1171 
	`UNUSED_PARAMETER
(
¨gc
);

1172 
zSå
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1173 if–
zSå
==0 ) ;

1174 
nSå
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1175 
	`as£π
–
zSå
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

1176 
zP©ã∫
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1177 if–
zP©ã∫
==0 ){

1178 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])==
SQLITE_NULL


1179 || 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
)->
mÆlocFaûed
 );

1182 if–
zP©ã∫
[0]==0 ){

1183 
	`as£π
–
	`sqlôe3_vÆue_ty≥
(
¨gv
[1])!=
SQLITE_NULL
 );

1184 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

1187 
nP©ã∫
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

1188 
	`as£π
–
zP©ã∫
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]) );

1189 
zRï
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

1190 if–
zRï
==0 ) ;

1191 
nRï
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[2]);

1192 
	`as£π
–
zRï
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]) );

1193 
nOut
 = 
nSå
 + 1;

1194 
	`as£π
–
nOut
<
SQLITE_MAX_LENGTH
 );

1195 
zOut
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, (
i64
)
nOut
);

1196 if–
zOut
==0 ){

1199 
lo›Limô
 = 
nSå
 - 
nP©ã∫
;

1200 
i
=
j
=0; i<=
lo›Limô
; i++){

1201 if–
zSå
[
i
]!=
zP©ã∫
[0] || 
	`memcmp
(&zSå[i], zP©ã∫, 
nP©ã∫
) ){

1202 
zOut
[
j
++] = 
zSå
[
i
];

1204 
u8
 *
zOld
;

1205 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1206 
nOut
 +
nRï
 - 
nP©ã∫
;

1207 
	`ã°ˇ£
–
nOut
-1==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

1208 
	`ã°ˇ£
–
nOut
-2==
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] );

1209 if–
nOut
-1>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1210 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

1211 
	`sqlôe3_‰ì
(
zOut
);

1214 
zOld
 = 
zOut
;

1215 
zOut
 = 
	`sqlôe3_ªÆloc64
(zOut, ()
nOut
);

1216 if–
zOut
==0 ){

1217 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1218 
	`sqlôe3_‰ì
(
zOld
);

1221 
	`mem˝y
(&
zOut
[
j
], 
zRï
, 
nRï
);

1222 
j
 +
nRï
;

1223 
i
 +
nP©ã∫
-1;

1226 
	`as£π
–
j
+
nSå
-
i
+1==
nOut
 );

1227 
	`mem˝y
(&
zOut
[
j
], &
zSå
[
i
], 
nSå
-i);

1228 
j
 +
nSå
 - 
i
;

1229 
	`as£π
–
j
<=
nOut
 );

1230 
zOut
[
j
] = 0;

1231 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zOut
, 
j
, 
sqlôe3_‰ì
);

1232 
	}
}

1238 
	$åimFunc
(

1239 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1240 
¨gc
,

1241 
sqlôe3_vÆue
 **
¨gv


1243 c⁄° *
zIn
;

1244 c⁄° *
zCh¨Së
;

1245 
nIn
;

1246 
Êags
;

1247 
i
;

1248 *
aLí
 = 0;

1249 **
azCh¨
 = 0;

1250 
nCh¨
;

1252 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ){

1255 
zIn
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1256 if–
zIn
==0 ) ;

1257 
nIn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1258 
	`as£π
–
zIn
==
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]) );

1259 if–
¨gc
==1 ){

1260 c⁄° 
ÀnO√
[] = { 1 };

1261 * c⁄° 
azO√
[] = { (
u8
*)" " };

1262 
nCh¨
 = 1;

1263 
aLí
 = (
u8
*)
ÀnO√
;

1264 
azCh¨
 = (**)
azO√
;

1265 
zCh¨Së
 = 0;

1266 }if–(
zCh¨Së
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]))==0 ){

1269 c⁄° *
z
;

1270 
z
=
zCh¨Së
, 
nCh¨
=0; *z;ÇChar++){

1271 
	`SQLITE_SKIP_UTF8
(
z
);

1273 if–
nCh¨
>0 ){

1274 
azCh¨
 = 
	`c⁄ãxtMÆloc
(
c⁄ãxt
, ((
i64
)
nCh¨
)*((*)+1));

1275 if–
azCh¨
==0 ){

1278 
aLí
 = (*)&
azCh¨
[
nCh¨
];

1279 
z
=
zCh¨Së
, 
nCh¨
=0; *z;ÇChar++){

1280 
azCh¨
[
nCh¨
] = (*)
z
;

1281 
	`SQLITE_SKIP_UTF8
(
z
);

1282 
aLí
[
nCh¨
] = (
u8
)(
z
 - 
azCh¨
[nChar]);

1286 if–
nCh¨
>0 ){

1287 
Êags
 = 
	`SQLITE_PTR_TO_INT
(
	`sqlôe3_u£r_d©a
(
c⁄ãxt
));

1288 if–
Êags
 & 1 ){

1289  
nIn
>0 ){

1290 
Àn
 = 0;

1291 
i
=0; i<
nCh¨
; i++){

1292 
Àn
 = 
aLí
[
i
];

1293 if–
Àn
<=
nIn
 && 
	`memcmp
(
zIn
, 
azCh¨
[
i
],Üen)==0 ) ;

1295 if–
i
>=
nCh¨
 ) ;

1296 
zIn
 +
Àn
;

1297 
nIn
 -
Àn
;

1300 if–
Êags
 & 2 ){

1301  
nIn
>0 ){

1302 
Àn
 = 0;

1303 
i
=0; i<
nCh¨
; i++){

1304 
Àn
 = 
aLí
[
i
];

1305 if–
Àn
<=
nIn
 && 
	`memcmp
(&
zIn
[nIn-Àn],
azCh¨
[
i
],len)==0 ) ;

1307 if–
i
>=
nCh¨
 ) ;

1308 
nIn
 -
Àn
;

1311 if–
zCh¨Së
 ){

1312 
	`sqlôe3_‰ì
(
azCh¨
);

1315 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zIn
, 
nIn
, 
SQLITE_TRANSIENT
);

1316 
	}
}

1319 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


1329 
	$unknownFunc
(

1330 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1331 
¨gc
,

1332 
sqlôe3_vÆue
 **
¨gv


1335 
	}
}

1343 #ifde‡
SQLITE_SOUNDEX


1350 
	$soundexFunc
(

1351 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1352 
¨gc
,

1353 
sqlôe3_vÆue
 **
¨gv


1355 
zResu…
[8];

1356 c⁄° 
u8
 *
zIn
;

1357 
i
, 
j
;

1358 c⁄° 
iCode
[] = {

1368 
	`as£π
–
¨gc
==1 );

1369 
zIn
 = (
u8
*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1370 if–
zIn
==0 ) zI¿(
u8
*)"";

1371 
i
=0; 
zIn
[i] && !
	`sqlôe3IßÕha
(zIn[i]); i++){}

1372 if–
zIn
[
i
] ){

1373 
u8
 
¥evcode
 = 
iCode
[
zIn
[
i
]&0x7f];

1374 
zResu…
[0] = 
	`sqlôe3Touµî
(
zIn
[
i
]);

1375 
j
=1; j<4 && 
zIn
[
i
]; i++){

1376 
code
 = 
iCode
[
zIn
[
i
]&0x7f];

1377 if–
code
>0 ){

1378 if–
code
!=
¥evcode
 ){

1379 
¥evcode
 = 
code
;

1380 
zResu…
[
j
++] = 
code
 + '0';

1383 
¥evcode
 = 0;

1386  
j
<4 ){

1387 
zResu…
[
j
++] = '0';

1389 
zResu…
[
j
] = 0;

1390 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zResu…
, 4, 
SQLITE_TRANSIENT
);

1394 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, "?000", 4, 
SQLITE_STATIC
);

1396 
	}
}

1399 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1403 
	$lﬂdExt
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1404 c⁄° *
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1405 c⁄° *
zProc
;

1406 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1407 *
zEºMsg
 = 0;

1412 if–(
db
->
Êags
 & 
SQLITE_LﬂdExtFunc
)==0 ){

1413 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "notáuthorized", -1);

1417 if–
¨gc
==2 ){

1418 
zProc
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1420 
zProc
 = 0;

1422 if–
zFûe
 && 
	`sqlôe3_lﬂd_exãnsi⁄
(
db
, zFûe, 
zProc
, &
zEºMsg
) ){

1423 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEºMsg
, -1);

1424 
	`sqlôe3_‰ì
(
zEºMsg
);

1426 
	}
}

1434 
SumCtx
 
	tSumCtx
;

1435 
	sSumCtx
 {

1436 
	mrSum
;

1437 
i64
 
	miSum
;

1438 
i64
 
	m˙t
;

1439 
u8
 
	movîÊow
;

1440 
u8
 
	m≠¥ox
;

1453 
	$sumSãp
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1454 
SumCtx
 *
p
;

1455 
ty≥
;

1456 
	`as£π
–
¨gc
==1 );

1457 
	`UNUSED_PARAMETER
(
¨gc
);

1458 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1459 
ty≥
 = 
	`sqlôe3_vÆue_numîic_ty≥
(
¨gv
[0]);

1460 if–
p
 && 
ty≥
!=
SQLITE_NULL
 ){

1461 
p
->
˙t
++;

1462 if–
ty≥
==
SQLITE_INTEGER
 ){

1463 
i64
 
v
 = 
	`sqlôe3_vÆue_öt64
(
¨gv
[0]);

1464 
p
->
rSum
 +
v
;

1465 if–(
p
->
≠¥ox
|p->
ovîÊow
)==0 && 
	`sqlôe3AddI¡64
(&p->
iSum
, 
v
) ){

1466 
p
->
ovîÊow
 = 1;

1469 
p
->
rSum
 +
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

1470 
p
->
≠¥ox
 = 1;

1473 
	}
}

1474 
	$sumFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1475 
SumCtx
 *
p
;

1476 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1477 if–
p
 &&Ö->
˙t
>0 ){

1478 if–
p
->
ovîÊow
 ){

1479 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,"integer overflow",-1);

1480 }if–
p
->
≠¥ox
 ){

1481 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
->
rSum
);

1483 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
p
->
iSum
);

1486 
	}
}

1487 
	$avgFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1488 
SumCtx
 *
p
;

1489 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1490 if–
p
 &&Ö->
˙t
>0 ){

1491 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
->
rSum
/(Ì->
˙t
);

1493 
	}
}

1494 
	$tŸÆFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1495 
SumCtx
 *
p
;

1496 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1498 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
p
 ?Ö->
rSum
 : ()0);

1499 
	}
}

1505 
Cou¡Ctx
 
	tCou¡Ctx
;

1506 
	sCou¡Ctx
 {

1507 
i64
 
	mn
;

1513 
	$cou¡Sãp
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

1514 
Cou¡Ctx
 *
p
;

1515 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1516 if–(
¨gc
==0 || 
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])Ë&& 
p
 ){

1517 
p
->
n
++;

1520 #i‚de‡
SQLITE_OMIT_DEPRECATED


1525 
	`as£π
–
¨gc
==1 || 
p
==0 ||Ö->
n
>0x7fffffff

1526 || 
p
->
n
==
	`sqlôe3_aggªg©e_cou¡
(
c⁄ãxt
) );

1528 
	}
}

1529 
	$cou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1530 
Cou¡Ctx
 *
p
;

1531 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1532 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
p
 ?Ö->
n
 : 0);

1533 
	}
}

1538 
	$mömaxSãp
(

1539 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1540 
NŸU£d
,

1541 
sqlôe3_vÆue
 **
¨gv


1543 
Mem
 *
pArg
 = (Mem *)
¨gv
[0];

1544 
Mem
 *
pBe°
;

1545 
	`UNUSED_PARAMETER
(
NŸU£d
);

1547 
pBe°
 = (
Mem
 *)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*pBest));

1548 if–!
pBe°
 ) ;

1550 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ){

1551 if–
pBe°
->
Êags
 ) 
	`sqlôe3SkùAccumuœt‹Lﬂd
(
c⁄ãxt
);

1552 }if–
pBe°
->
Êags
 ){

1553 
max
;

1554 
cmp
;

1555 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3GëFuncCﬁlSeq
(
c⁄ãxt
);

1564 
max
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
)!=0;

1565 
cmp
 = 
	`sqlôe3MemCom∑ª
(
pBe°
, 
pArg
, 
pCﬁl
);

1566 if–(
max
 && 
cmp
<0) || (!max && cmp>0) ){

1567 
	`sqlôe3VdbeMemC›y
(
pBe°
, 
pArg
);

1569 
	`sqlôe3SkùAccumuœt‹Lﬂd
(
c⁄ãxt
);

1572 
pBe°
->
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1573 
	`sqlôe3VdbeMemC›y
(
pBe°
, 
pArg
);

1575 
	}
}

1576 
	$möMaxFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1577 
sqlôe3_vÆue
 *
pRes
;

1578 
pRes
 = (
sqlôe3_vÆue
 *)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1579 if–
pRes
 ){

1580 if–
pRes
->
Êags
 ){

1581 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
pRes
);

1583 
	`sqlôe3VdbeMemRñó£
(
pRes
);

1585 
	}
}

1590 
	$groupC⁄ˇtSãp
(

1591 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1592 
¨gc
,

1593 
sqlôe3_vÆue
 **
¨gv


1595 c⁄° *
zVÆ
;

1596 
SåAccum
 *
pAccum
;

1597 c⁄° *
zSï
;

1598 
nVÆ
, 
nSï
;

1599 
	`as£π
–
¨gc
==1 ||árgc==2 );

1600 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

1601 
pAccum
 = (
SåAccum
*)
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*pAccum));

1603 if–
pAccum
 ){

1604 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1605 
fú°Tîm
 = 
pAccum
->
mxAŒoc
==0;

1606 
pAccum
->
mxAŒoc
 = 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

1607 if–!
fú°Tîm
 ){

1608 if–
¨gc
==2 ){

1609 
zSï
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

1610 
nSï
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]);

1612 
zSï
 = ",";

1613 
nSï
 = 1;

1615 if–
nSï
 ) 
	`sqlôe3SåAccumAµíd
(
pAccum
, 
zSï
,ÇSep);

1617 
zVÆ
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

1618 
nVÆ
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

1619 if–
zVÆ
 ) 
	`sqlôe3SåAccumAµíd
(
pAccum
, zVÆ, 
nVÆ
);

1621 
	}
}

1622 
	$groupC⁄ˇtFöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1623 
SåAccum
 *
pAccum
;

1624 
pAccum
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, 0);

1625 if–
pAccum
 ){

1626 if–
pAccum
->
accEº‹
==
STRACCUM_TOOBIG
 ){

1627 
	`sqlôe3_ªsu…_îr‹_toobig
(
c⁄ãxt
);

1628 }if–
pAccum
->
accEº‹
==
STRACCUM_NOMEM
 ){

1629 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1631 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`sqlôe3SåAccumFöish
(
pAccum
), -1,

1632 
sqlôe3_‰ì
);

1635 
	}
}

1642 
	$sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
sqlôe3
 *
db
){

1643 
rc
 = 
	`sqlôe3_ovîlﬂd_fun˘i⁄
(
db
, "MATCH", 2);

1644 
	`as£π
–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_OK
 );

1645 if–
rc
==
SQLITE_NOMEM
 ){

1646 
	`sqlôe3OomFau…
(
db
);

1648 
	}
}

1653 
	$£tLikeO±Fœg
(
sqlôe3
 *
db
, c⁄° *
zName
, 
u8
 
ÊagVÆ
){

1654 
FuncDef
 *
pDef
;

1655 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zName
, 2, 
SQLITE_UTF8
, 0);

1656 if–
	`ALWAYS
(
pDef
) ){

1657 
pDef
->
funcFœgs
 |
ÊagVÆ
;

1659 
	}
}

1666 
	$sqlôe3Regi°îLikeFun˘i⁄s
(
sqlôe3
 *
db
, 
ˇ£Sísôive
){

1667 
com∑ªInfo
 *
pInfo
;

1668 if–
ˇ£Sísôive
 ){

1669 
pInfo
 = (
com∑ªInfo
*)&
likeInfoA…
;

1671 
pInfo
 = (
com∑ªInfo
*)&
likeInfoN‹m
;

1673 
	`sqlôe3Cª©eFunc
(
db
, "like", 2, 
SQLITE_UTF8
, 
pInfo
, 
likeFunc
, 0, 0, 0);

1674 
	`sqlôe3Cª©eFunc
(
db
, "like", 3, 
SQLITE_UTF8
, 
pInfo
, 
likeFunc
, 0, 0, 0);

1675 
	`sqlôe3Cª©eFunc
(
db
, "glob", 2, 
SQLITE_UTF8
,

1676 (
com∑ªInfo
*)&
globInfo
, 
likeFunc
, 0, 0, 0);

1677 
	`£tLikeO±Fœg
(
db
, "glob", 
SQLITE_FUNC_LIKE
 | 
SQLITE_FUNC_CASE
);

1678 
	`£tLikeO±Fœg
(
db
, "like",

1679 
ˇ£Sísôive
 ? (
SQLITE_FUNC_LIKE
 | 
SQLITE_FUNC_CASE
) : SQLITE_FUNC_LIKE);

1680 
	}
}

1694 
	$sqlôe3IsLikeFun˘i⁄
(
sqlôe3
 *
db
, 
Ex¥
 *
pEx¥
, *
pIsNoˇ£
, *
aWc
){

1695 
FuncDef
 *
pDef
;

1696 if–
pEx¥
->
›
!=
TK_FUNCTION


1697 || !
pEx¥
->
x
.
pLi°


1698 || 
pEx¥
->
x
.
pLi°
->
nEx¥
!=2

1702 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

1703 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
pEx¥
->
u
.
zTokí
, 2, 
SQLITE_UTF8
, 0);

1704 if–
	`NEVER
(
pDef
==0Ë|| (pDef->
funcFœgs
 & 
SQLITE_FUNC_LIKE
)==0 ){

1712 
	`mem˝y
(
aWc
, 
pDef
->
pU£rD©a
, 3);

1713 
	`as£π
–(*)&
likeInfoA…
 =(*)&likeInfoA….
m©chAŒ
 );

1714 
	`as£π
–&((*)&
likeInfoA…
)[1] =(*)&likeInfoA….
m©chO√
 );

1715 
	`as£π
–&((*)&
likeInfoA…
)[2] =(*)&likeInfoA….
m©chSë
 );

1716 *
pIsNoˇ£
 = (
pDef
->
funcFœgs
 & 
SQLITE_FUNC_CASE
)==0;

1718 
	}
}

1727 
	$sqlôe3Regi°îBuûtöFun˘i⁄s
(){

1738 
FuncDef
 
aBuûtöFunc
[] = {

1739 #ifde‡
SQLITE_SOUNDEX


1740 
	`FUNCTION
(
soundex
, 1, 0, 0, 
soundexFunc
 ),

1742 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1743 
	`VFUNCTION
(
lﬂd_exãnsi⁄
, 1, 0, 0, 
lﬂdExt
 ),

1744 
	`VFUNCTION
(
lﬂd_exãnsi⁄
, 2, 0, 0, 
lﬂdExt
 ),

1746 #i‡
SQLITE_USER_AUTHENTICATION


1747 
	`FUNCTION
(
sqlôe_¸y±
, 2, 0, 0, 
sqlôe3Cry±Func
 ),

1749 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


1750 
	`DFUNCTION
(
sqlôe_compûe›ti⁄_u£d
,1, 0, 0, 
compûe›ti⁄u£dFunc
 ),

1751 
	`DFUNCTION
(
sqlôe_compûe›ti⁄_gë
, 1, 0, 0, 
compûe›ti⁄gëFunc
 ),

1753 
	`FUNCTION2
(
u∆ikñy
, 1, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1754 
	`FUNCTION2
(
likñihood
, 2, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1755 
	`FUNCTION2
(
likñy
, 1, 0, 0, 
no›Func
, 
SQLITE_FUNC_UNLIKELY
),

1756 
	`FUNCTION
(
…rim
, 1, 1, 0, 
åimFunc
 ),

1757 
	`FUNCTION
(
…rim
, 2, 1, 0, 
åimFunc
 ),

1758 
	`FUNCTION
(
πrim
, 1, 2, 0, 
åimFunc
 ),

1759 
	`FUNCTION
(
πrim
, 2, 2, 0, 
åimFunc
 ),

1760 
	`FUNCTION
(
åim
, 1, 3, 0, 
åimFunc
 ),

1761 
	`FUNCTION
(
åim
, 2, 3, 0, 
åimFunc
 ),

1762 
	`FUNCTION
(
mö
, -1, 0, 1, 
mömaxFunc
 ),

1763 
	`FUNCTION
(
mö
, 0, 0, 1, 0 ),

1764 
	`AGGREGATE2
(
mö
, 1, 0, 1, 
mömaxSãp
, 
möMaxFöÆize
,

1765 
SQLITE_FUNC_MINMAX
 ),

1766 
	`FUNCTION
(
max
, -1, 1, 1, 
mömaxFunc
 ),

1767 
	`FUNCTION
(
max
, 0, 1, 1, 0 ),

1768 
	`AGGREGATE2
(
max
, 1, 1, 1, 
mömaxSãp
, 
möMaxFöÆize
,

1769 
SQLITE_FUNC_MINMAX
 ),

1770 
	`FUNCTION2
(
ty≥of
, 1, 0, 0, 
ty≥ofFunc
, 
SQLITE_FUNC_TYPEOF
),

1771 
	`FUNCTION2
(
Àngth
, 1, 0, 0, 
ÀngthFunc
, 
SQLITE_FUNC_LENGTH
),

1772 
	`FUNCTION
(
ö°r
, 2, 0, 0, 
ö°rFunc
 ),

1773 
	`FUNCTION
(
¥ötf
, -1, 0, 0, 
¥ötfFunc
 ),

1774 
	`FUNCTION
(
unicode
, 1, 0, 0, 
unicodeFunc
 ),

1775 
	`FUNCTION
(, -1, 0, 0, 
ch¨Func
 ),

1776 
	`FUNCTION
(
abs
, 1, 0, 0, 
absFunc
 ),

1777 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1778 
	`FUNCTION
(
round
, 1, 0, 0, 
roundFunc
 ),

1779 
	`FUNCTION
(
round
, 2, 0, 0, 
roundFunc
 ),

1781 
	`FUNCTION
(
uµî
, 1, 0, 0, 
uµîFunc
 ),

1782 
	`FUNCTION
(
lowî
, 1, 0, 0, 
lowîFunc
 ),

1783 
	`FUNCTION
(
hex
, 1, 0, 0, 
hexFunc
 ),

1784 
	`FUNCTION2
(
i‚uŒ
, 2, 0, 0, 
no›Func
, 
SQLITE_FUNC_COALESCE
),

1785 
	`VFUNCTION
(
øndom
, 0, 0, 0, 
øndomFunc
 ),

1786 
	`VFUNCTION
(
øndomblob
, 1, 0, 0, 
øndomBlob
 ),

1787 
	`FUNCTION
(
nuŒif
, 2, 0, 1, 
nuŒifFunc
 ),

1788 
	`DFUNCTION
(
sqlôe_vîsi⁄
, 0, 0, 0, 
vîsi⁄Func
 ),

1789 
	`DFUNCTION
(
sqlôe_sour˚_id
, 0, 0, 0, 
sour˚idFunc
 ),

1790 
	`FUNCTION
(
sqlôe_log
, 2, 0, 0, 
îæogFunc
 ),

1791 
	`FUNCTION
(
quŸe
, 1, 0, 0, 
quŸeFunc
 ),

1792 
	`VFUNCTION
(
œ°_ö£π_rowid
, 0, 0, 0,Üast_insert_rowid),

1793 
	`VFUNCTION
(
ch™ges
, 0, 0, 0, changes ),

1794 
	`VFUNCTION
(
tŸÆ_ch™ges
, 0, 0, 0,Åotal_changes ),

1795 
	`FUNCTION
(
ª∂a˚
, 3, 0, 0, 
ª∂a˚Func
 ),

1796 
	`FUNCTION
(
zîoblob
, 1, 0, 0, 
zîoblobFunc
 ),

1797 
	`FUNCTION
(
sub°r
, 2, 0, 0, 
sub°rFunc
 ),

1798 
	`FUNCTION
(
sub°r
, 3, 0, 0, 
sub°rFunc
 ),

1799 
	`AGGREGATE
(
sum
, 1, 0, 0, 
sumSãp
, 
sumFöÆize
 ),

1800 
	`AGGREGATE
(
tŸÆ
, 1, 0, 0, 
sumSãp
, 
tŸÆFöÆize
 ),

1801 
	`AGGREGATE
(
avg
, 1, 0, 0, 
sumSãp
, 
avgFöÆize
 ),

1802 
	`AGGREGATE2
(
cou¡
, 0, 0, 0, 
cou¡Sãp
, 
cou¡FöÆize
,

1803 
SQLITE_FUNC_COUNT
 ),

1804 
	`AGGREGATE
(
cou¡
, 1, 0, 0, 
cou¡Sãp
, 
cou¡FöÆize
 ),

1805 
	`AGGREGATE
(
group_c⁄ˇt
, 1, 0, 0, 
groupC⁄ˇtSãp
, 
groupC⁄ˇtFöÆize
),

1806 
	`AGGREGATE
(
group_c⁄ˇt
, 2, 0, 0, 
groupC⁄ˇtSãp
, 
groupC⁄ˇtFöÆize
),

1808 
	`LIKEFUNC
(
glob
, 2, &
globInfo
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1809 #ifde‡
SQLITE_CASE_SENSITIVE_LIKE


1810 
	`LIKEFUNC
(
like
, 2, &
likeInfoA…
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1811 
	`LIKEFUNC
(
like
, 3, &
likeInfoA…
, 
SQLITE_FUNC_LIKE
|
SQLITE_FUNC_CASE
),

1813 
	`LIKEFUNC
(
like
, 2, &
likeInfoN‹m
, 
SQLITE_FUNC_LIKE
),

1814 
	`LIKEFUNC
(
like
, 3, &
likeInfoN‹m
, 
SQLITE_FUNC_LIKE
),

1816 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


1817 
	`FUNCTION
(
unknown
, -1, 0, 0, 
unknownFunc
 ),

1819 
	`FUNCTION
(
cﬂÀs˚
, 1, 0, 0, 0 ),

1820 
	`FUNCTION
(
cﬂÀs˚
, 0, 0, 0, 0 ),

1821 
	`FUNCTION2
(
cﬂÀs˚
, -1, 0, 0, 
no›Func
, 
SQLITE_FUNC_COALESCE
),

1823 #i‚de‡
SQLITE_OMIT_ALTERTABLE


1824 
	`sqlôe3A…îFun˘i⁄s
();

1826 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë|| deföed(
SQLITE_ENABLE_STAT4
)

1827 
	`sqlôe3A«lyzeFun˘i⁄s
();

1829 
	`sqlôe3Regi°îD©eTimeFun˘i⁄s
();

1830 
	`sqlôe3In£πBuûtöFuncs
(
aBuûtöFunc
, 
	`AºaySize
(aBuiltinFunc));

1834 
i
;

1835 
FuncDef
 *
p
;

1836 
i
=0; i<
SQLITE_FUNC_HASH_SZ
; i++){

1837 
	`¥ötf
("FUNC-HASH %02d:", 
i
);

1838 
p
=
sqlôe3BuûtöFun˘i⁄s
.
a
[
i
];Ö;Öı->
u
.
pHash
){

1839 
n
 = 
	`sqlôe3SåÀn30
(
p
->
zName
);

1840 
h
 = 
p
->
zName
[0] + 
n
;

1841 
	`¥ötf
(" %s(%d)", 
p
->
zName
, 
h
);

1843 
	`¥ötf
("\n");

1847 
	}
}

	@global.c

15 
	~"sqlôeI¡.h
"

24 c⁄° 
	gsqlôe3UµîToLowî
[] = {

25 #ifde‡
SQLITE_ASCII


42 #ifde‡
SQLITE_EBCDIC


93 #ifde‡
SQLITE_ASCII


94 c⁄° 
	gsqlôe3Cty≥M≠
[256] = {

144 #i‚de‡
SQLITE_USE_URI


145 
	#SQLITE_USE_URI
 0

	)

152 #i‚de‡
SQLITE_ALLOW_COVERING_INDEX_SCAN


153 
	#SQLITE_ALLOW_COVERING_INDEX_SCAN
 1

	)

159 #i‚de‡
SQLITE_SORTER_PMASZ


160 
	#SQLITE_SORTER_PMASZ
 250

	)

171 #i‚de‡
SQLITE_STMTJRNL_SPILL


172 
	#SQLITE_STMTJRNL_SPILL
 (64*1024)

	)

179 
SQLITE_WSD
 
Sqlôe3C⁄fig
 
	gsqlôe3C⁄fig
 = {

180 
SQLITE_DEFAULT_MEMSTATUS
,

182 
SQLITE_THREADSAFE
==1,

183 
	gSQLITE_USE_URI
,

184 
	gSQLITE_ALLOW_COVERING_INDEX_SCAN
,

189 
	gSQLITE_STMTJRNL_SPILL
,

196 
	gSQLITE_DEFAULT_MMAP_SIZE
,

197 
	gSQLITE_MAX_MMAP_SIZE
,

203 
	gSQLITE_DEFAULT_PCACHE_INITSZ
,

206 
	gSQLITE_SORTER_PMASZ
,

217 #ifde‡
SQLITE_ENABLE_SQLLOG


221 #ifde‡
SQLITE_VDBE_COVERAGE


225 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


236 
FuncDefHash
 
	gsqlôe3BuûtöFun˘i⁄s
;

241 c⁄° 
Tokí
 
	gsqlôe3I¡Tokís
[] = {

265 #i‚de‡
SQLITE_OMIT_WSD


266 
	gsqlôe3PídögByã
 = 0x40000000;

269 
	~"›codes.h
"

276 c⁄° 
	gsqlôe3OpcodePr›îty
[] = 
OPFLG_INITIALIZER
;

281 c⁄° 
	gsqlôe3SåBINARY
[] = "BINARY";

	@hash.c

15 
	~"sqlôeI¡.h
"

16 
	~<as£π.h
>

23 
	$sqlôe3HashInô
(
Hash
 *
pNew
){

24 
	`as£π
–
pNew
!=0 );

25 
pNew
->
fú°
 = 0;

26 
pNew
->
cou¡
 = 0;

27 
pNew
->
htsize
 = 0;

28 
pNew
->
ht
 = 0;

29 
	}
}

35 
	$sqlôe3HashCÀ¨
(
Hash
 *
pH
){

36 
HashEÀm
 *
ñem
;

38 
	`as£π
–
pH
!=0 );

39 
ñem
 = 
pH
->
fú°
;

40 
pH
->
fú°
 = 0;

41 
	`sqlôe3_‰ì
(
pH
->
ht
);

42 
pH
->
ht
 = 0;

43 
pH
->
htsize
 = 0;

44  
ñem
 ){

45 
HashEÀm
 *
√xt_ñem
 = 
ñem
->
√xt
;

46 
	`sqlôe3_‰ì
(
ñem
);

47 
ñem
 = 
√xt_ñem
;

49 
pH
->
cou¡
 = 0;

50 
	}
}

55 
	$°rHash
(c⁄° *
z
){

56 
h
 = 0;

57 
c
;

58  (
c
 = ()*
z
++)!=0 ){

59 
h
 = (h<<3Ë^ h ^ 
sqlôe3UµîToLowî
[
c
];

61  
h
;

62 
	}
}

68 
	$ö£πEÀmít
(

69 
Hash
 *
pH
,

70 
_ht
 *
pE¡ry
,

71 
HashEÀm
 *
pNew


73 
HashEÀm
 *
pHód
;

74 if–
pE¡ry
 ){

75 
pHód
 = 
pE¡ry
->
cou¡
 ?ÖE¡ry->
chaö
 : 0;

76 
pE¡ry
->
cou¡
++;

77 
pE¡ry
->
chaö
 = 
pNew
;

79 
pHód
 = 0;

81 if–
pHód
 ){

82 
pNew
->
√xt
 = 
pHód
;

83 
pNew
->
¥ev
 = 
pHód
->prev;

84 if–
pHód
->
¥ev
 ){ÖHód->¥ev->
√xt
 = 
pNew
; }

85 { 
pH
->
fú°
 = 
pNew
; }

86 
pHód
->
¥ev
 = 
pNew
;

88 
pNew
->
√xt
 = 
pH
->
fú°
;

89 if–
pH
->
fú°
 ){ÖH->fú°->
¥ev
 = 
pNew
; }

90 
pNew
->
¥ev
 = 0;

91 
pH
->
fú°
 = 
pNew
;

93 
	}
}

102 
	$ªhash
(
Hash
 *
pH
, 
√w_size
){

103 
_ht
 *
√w_ht
;

104 
HashEÀm
 *
ñem
, *
√xt_ñem
;

106 #i‡
SQLITE_MALLOC_SOFT_LIMIT
>0

107 if–
√w_size
*(
_ht
)>
SQLITE_MALLOC_SOFT_LIMIT
 ){

108 
√w_size
 = 
SQLITE_MALLOC_SOFT_LIMIT
/(
_ht
);

110 if–
√w_size
==
pH
->
htsize
 )  0;

121 
	`sqlôe3BegöBíignMÆloc
();

122 
√w_ht
 = (
_ht
 *)
	`sqlôe3MÆloc
–
√w_size
*(_ht) );

123 
	`sqlôe3EndBíignMÆloc
();

125 if–
√w_ht
==0 )  0;

126 
	`sqlôe3_‰ì
(
pH
->
ht
);

127 
pH
->
ht
 = 
√w_ht
;

128 
pH
->
htsize
 = 
√w_size
 = 
	`sqlôe3MÆlocSize
(
√w_ht
)/(
_ht
);

129 
	`mem£t
(
√w_ht
, 0, 
√w_size
*(
_ht
));

130 
ñem
=
pH
->
fú°
,ÖH->fú°=0;ÉÀm;ÉÀm = 
√xt_ñem
){

131 
h
 = 
	`°rHash
(
ñem
->
pKey
Ë% 
√w_size
;

132 
√xt_ñem
 = 
ñem
->
√xt
;

133 
	`ö£πEÀmít
(
pH
, &
√w_ht
[
h
], 
ñem
);

136 
	}
}

142 
HashEÀm
 *
	$födEÀmítWôhHash
(

143 c⁄° 
Hash
 *
pH
,

144 c⁄° *
pKey
,

145 *
pHash


147 
HashEÀm
 *
ñem
;

148 
cou¡
;

149 
h
;

151 if–
pH
->
ht
 ){

152 
_ht
 *
pE¡ry
;

153 
h
 = 
	`°rHash
(
pKey
Ë% 
pH
->
htsize
;

154 
pE¡ry
 = &
pH
->
ht
[
h
];

155 
ñem
 = 
pE¡ry
->
chaö
;

156 
cou¡
 = 
pE¡ry
->count;

158 
h
 = 0;

159 
ñem
 = 
pH
->
fú°
;

160 
cou¡
 = 
pH
->count;

162 *
pHash
 = 
h
;

163  
cou¡
-- ){

164 
	`as£π
–
ñem
!=0 );

165 if–
	`sqlôe3SåICmp
(
ñem
->
pKey
,pKey)==0 ){

166  
ñem
;

168 
ñem
 =ÉÀm->
√xt
;

171 
	}
}

176 
	$ªmoveEÀmítGivíHash
(

177 
Hash
 *
pH
,

178 
HashEÀm
* 
ñem
,

179 
h


181 
_ht
 *
pE¡ry
;

182 if–
ñem
->
¥ev
 ){

183 
ñem
->
¥ev
->
√xt
 =Élem->next;

185 
pH
->
fú°
 = 
ñem
->
√xt
;

187 if–
ñem
->
√xt
 ){

188 
ñem
->
√xt
->
¥ev
 =Élem->prev;

190 if–
pH
->
ht
 ){

191 
pE¡ry
 = &
pH
->
ht
[
h
];

192 if–
pE¡ry
->
chaö
==
ñem
 ){

193 
pE¡ry
->
chaö
 = 
ñem
->
√xt
;

195 
pE¡ry
->
cou¡
--;

196 
	`as£π
–
pE¡ry
->
cou¡
>=0 );

198 
	`sqlôe3_‰ì
–
ñem
 );

199 
pH
->
cou¡
--;

200 if–
pH
->
cou¡
==0 ){

201 
	`as£π
–
pH
->
fú°
==0 );

202 
	`as£π
–
pH
->
cou¡
==0 );

203 
	`sqlôe3HashCÀ¨
(
pH
);

205 
	}
}

211 *
	$sqlôe3HashFöd
(c⁄° 
Hash
 *
pH
, c⁄° *
pKey
){

212 
HashEÀm
 *
ñem
;

213 
h
;

215 
	`as£π
–
pH
!=0 );

216 
	`as£π
–
pKey
!=0 );

217 
ñem
 = 
	`födEÀmítWôhHash
(
pH
, 
pKey
, &
h
);

218  
ñem
 ?ÉÀm->
d©a
 : 0;

219 
	}
}

235 *
	$sqlôe3HashIn£π
(
Hash
 *
pH
, c⁄° *
pKey
, *
d©a
){

236 
h
;

237 
HashEÀm
 *
ñem
;

238 
HashEÀm
 *
√w_ñem
;

240 
	`as£π
–
pH
!=0 );

241 
	`as£π
–
pKey
!=0 );

242 
ñem
 = 
	`födEÀmítWôhHash
(
pH
,
pKey
,&
h
);

243 if–
ñem
 ){

244 *
ﬁd_d©a
 = 
ñem
->
d©a
;

245 if–
d©a
==0 ){

246 
	`ªmoveEÀmítGivíHash
(
pH
,
ñem
,
h
);

248 
ñem
->
d©a
 = data;

249 
ñem
->
pKey
 =ÖKey;

251  
ﬁd_d©a
;

253 if–
d©a
==0 )  0;

254 
√w_ñem
 = (
HashEÀm
*)
	`sqlôe3MÆloc
( (HashElem) );

255 if–
√w_ñem
==0 )  
d©a
;

256 
√w_ñem
->
pKey
 =ÖKey;

257 
√w_ñem
->
d©a
 = data;

258 
pH
->
cou¡
++;

259 if–
pH
->
cou¡
>=10 &&ÖH->cou¡ > 2*pH->
htsize
 ){

260 if–
	`ªhash
(
pH
,ÖH->
cou¡
*2) ){

261 
	`as£π
–
pH
->
htsize
>0 );

262 
h
 = 
	`°rHash
(
pKey
Ë% 
pH
->
htsize
;

265 
	`ö£πEÀmít
(
pH
,ÖH->
ht
 ? &pH->ht[
h
] : 0, 
√w_ñem
);

267 
	}
}

	@hash.h

15 #i‚de‡
SQLITE_HASH_H


16 
	#SQLITE_HASH_H


	)

19 
Hash
 
	tHash
;

20 
HashEÀm
 
	tHashEÀm
;

43 
	sHash
 {

44 
	mhtsize
;

45 
	mcou¡
;

46 
HashEÀm
 *
	mfú°
;

47 
	s_ht
 {

48 
	mcou¡
;

49 
HashEÀm
 *
	mchaö
;

50 } *
	mht
;

59 
	sHashEÀm
 {

60 
HashEÀm
 *
	m√xt
, *
	m¥ev
;

61 *
	md©a
;

62 c⁄° *
	mpKey
;

68 
sqlôe3HashInô
(
Hash
*);

69 *
sqlôe3HashIn£π
(
Hash
*, c⁄° *
pKey
, *
pD©a
);

70 *
sqlôe3HashFöd
(c⁄° 
Hash
*, c⁄° *
pKey
);

71 
sqlôe3HashCÀ¨
(
Hash
*);

85 
	#sqlôeHashFú°
(
H
Ë((H)->
fú°
)

	)

86 
	#sqlôeHashNext
(
E
Ë((E)->
√xt
)

	)

87 
	#sqlôeHashD©a
(
E
Ë((E)->
d©a
)

	)

	@hwtime.h

16 #i‚de‡
SQLITE_HWTIME_H


17 
	#SQLITE_HWTIME_H


	)

25 #i‡(
deföed
(
__GNUC__
Ë|| deföed(
_MSC_VER
)) && \

26 (
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| 
	$deföed
(
_M_IX86
))

28 #i‡
	`deföed
(
__GNUC__
)

30 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

31 
lo
, 
hi
;

32 
__asm__
 
	`__vﬁ©ûe__
 ("rdtsc" : "˜" (
lo
), "=d" (
hi
));

33  (
sqlôe_uöt64
)
hi
 << 32 | 
lo
;

34 
	}
}

36 #ñi‡
deföed
(
_MSC_VER
)

38 
	$__de˛•ec
(
«ked
Ë
__ölöe
 
sqlôe_uöt64
 
__cde˛
 
	$sqlôe3Hwtime
(){

39 
__asm
 {

40 
rdtsc


41 
ªt
 ;  
vÆue
 
©
 
EDX
:
EAX


43 
	}
}

47 #ñi‡(
deföed
(
__GNUC__
Ë&& deföed(
__x86_64__
))

49 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

50 
vÆ
;

51 
__asm__
 
	`__vﬁ©ûe__
 ("rdtsc" : "=A" (
vÆ
));

52  
vÆ
;

53 
	}
}

55 #ñi‡(
deföed
(
__GNUC__
Ë&& deföed(
__µc__
))

57 
__ölöe__
 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){

58 
ªtvÆ
;

59 
junk
;

60 
__asm__
 
	`__vﬁ©ûe__
 ("\n\
1: mftbu %1\n\
 %L0\n\
 %0\n\
 %0,%1\n\
 1b"

66 : "Ù" (
ªtvÆ
), "Ù" (
junk
));

67  
ªtvÆ
;

68 
	}
}

72 #îr‹ 
Nìd
 
im∂emíèti⁄
 
of
 
sqlôe3Hwtime
(Ë
your
 
∂©f‹m
.

81 
sqlôe_uöt64
 
	$sqlôe3Hwtime
(){  ((
sqlôe_uöt64
)0); 
	}
}

	@insert.c

15 
	~"sqlôeI¡.h
"

26 
	$sqlôe3O≥nTabÀ
(

27 
P¨£
 *
pP¨£
,

28 
iCur
,

29 
iDb
,

30 
TabÀ
 *
pTab
,

31 
›code


33 
Vdbe
 *
v
;

34 
	`as£π
–!
	`IsVútuÆ
(
pTab
) );

35 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

36 
	`as£π
–
›code
==
OP_O≥nWrôe
 || opcode==
OP_O≥nRód
 );

37 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
,

38 (
›code
==
OP_O≥nWrôe
)?1:0, 
pTab
->
zName
);

39 if–
	`HasRowid
(
pTab
) ){

40 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›code
, 
iCur
, 
pTab
->
äum
, 
iDb
,ÖTab->
nCﬁ
);

41 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

43 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

44 
	`as£π
–
pPk
!=0 );

45 
	`as£π
–
pPk
->
äum
==
pTab
->tnum );

46 
	`sqlôe3VdbeAddOp3
(
v
, 
›code
, 
iCur
, 
pPk
->
äum
, 
iDb
);

47 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

48 
	`VdbeCommít
((
v
, "%s", 
pTab
->
zName
));

50 
	}
}

72 c⁄° *
	$sqlôe3IndexAfföôySå
(
sqlôe3
 *
db
, 
Index
 *
pIdx
){

73 if–!
pIdx
->
zCﬁAff
 ){

82 
n
;

83 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

84 
pIdx
->
zCﬁAff
 = (*)
	`sqlôe3DbMÆlocRaw
(0,ÖIdx->
nCﬁumn
+1);

85 if–!
pIdx
->
zCﬁAff
 ){

86 
	`sqlôe3OomFau…
(
db
);

89 
n
=0;Ç<
pIdx
->
nCﬁumn
;Ç++){

90 
i16
 
x
 = 
pIdx
->
aiCﬁumn
[
n
];

91 if–
x
>=0 ){

92 
pIdx
->
zCﬁAff
[
n
] = 
pTab
->
aCﬁ
[
x
].
afföôy
;

93 }if–
x
==
XN_ROWID
 ){

94 
pIdx
->
zCﬁAff
[
n
] = 
SQLITE_AFF_INTEGER
;

96 
aff
;

97 
	`as£π
–
x
==
XN_EXPR
 );

98 
	`as£π
–
pIdx
->
aCﬁEx¥
!=0 );

99 
aff
 = 
	`sqlôe3Ex¥Afföôy
(
pIdx
->
aCﬁEx¥
->
a
[
n
].
pEx¥
);

100 if–
aff
==0 )áf‡
SQLITE_AFF_BLOB
;

101 
pIdx
->
zCﬁAff
[
n
] = 
aff
;

104 
pIdx
->
zCﬁAff
[
n
] = 0;

107  
pIdx
->
zCﬁAff
;

108 
	}
}

130 
	$sqlôe3TabÀAfföôy
(
Vdbe
 *
v
, 
TabÀ
 *
pTab
, 
iReg
){

131 
i
;

132 *
zCﬁAff
 = 
pTab
->zColAff;

133 if–
zCﬁAff
==0 ){

134 
sqlôe3
 *
db
 = 
	`sqlôe3VdbeDb
(
v
);

135 
zCﬁAff
 = (*)
	`sqlôe3DbMÆlocRaw
(0, 
pTab
->
nCﬁ
+1);

136 if–!
zCﬁAff
 ){

137 
	`sqlôe3OomFau…
(
db
);

141 
i
=0; i<
pTab
->
nCﬁ
; i++){

142 
zCﬁAff
[
i
] = 
pTab
->
aCﬁ
[i].
afföôy
;

145 
zCﬁAff
[
i
--] = 0;

146 } 
i
>=0 && 
zCﬁAff
[i]==
SQLITE_AFF_BLOB
 );

147 
pTab
->
zCﬁAff
 = zColAff;

149 
i
 = 
	`sqlôe3SåÀn30
(
zCﬁAff
);

150 if–
i
 ){

151 if–
iReg
 ){

152 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
iReg
, 
i
, 0, 
zCﬁAff
, i);

154 
	`sqlôe3VdbeCh™geP4
(
v
, -1, 
zCﬁAff
, 
i
);

157 
	}
}

165 
	$ªadsTabÀ
(
P¨£
 *
p
, 
iDb
, 
TabÀ
 *
pTab
){

166 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
p
);

167 
i
;

168 
iEnd
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

169 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


170 
VTabÀ
 *
pVTab
 = 
	`IsVútuÆ
(
pTab
Ë? 
	`sqlôe3GëVTabÀ
(
p
->
db
,ÖTab) : 0;

173 
i
=1; i<
iEnd
; i++){

174 
VdbeOp
 *
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
i
);

175 
	`as£π
–
pOp
!=0 );

176 if–
pOp
->
›code
==
OP_O≥nRód
 &&ÖOp->
p3
==
iDb
 ){

177 
Index
 *
pIndex
;

178 
äum
 = 
pOp
->
p2
;

179 if–
äum
==
pTab
->tnum ){

182 
pIndex
=
pTab
->pIndex;ÖIndex;ÖIndexıIndex->
pNext
){

183 if–
äum
==
pIndex
->tnum ){

188 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


189 if–
pOp
->
›code
==
OP_VO≥n
 &&ÖOp->
p4
.
pVèb
==
pVTab
 ){

190 
	`as£π
–
pOp
->
p4
.
pVèb
!=0 );

191 
	`as£π
–
pOp
->
p4ty≥
==
P4_VTAB
 );

197 
	}
}

199 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


220 
	$autoIncBegö
(

221 
P¨£
 *
pP¨£
,

222 
iDb
,

223 
TabÀ
 *
pTab


225 
memId
 = 0;

226 if–
pTab
->
èbFœgs
 & 
TF_Autoö¸emít
 ){

227 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

228 
AutoöcInfo
 *
pInfo
;

230 
pInfo
 = 
pT›Àvñ
->
pAöc
;

231  
pInfo
 &&ÖInfo->
pTab
!ıTab ){ÖInfÿpInfo->
pNext
; }

232 if–
pInfo
==0 ){

233 
pInfo
 = 
	`sqlôe3DbMÆlocRawNN
(
pP¨£
->
db
, (*pInfo));

234 if–
pInfo
==0 )  0;

235 
pInfo
->
pNext
 = 
pT›Àvñ
->
pAöc
;

236 
pT›Àvñ
->
pAöc
 = 
pInfo
;

237 
pInfo
->
pTab
 =ÖTab;

238 
pInfo
->
iDb
 = iDb;

239 
pT›Àvñ
->
nMem
++;

240 
pInfo
->
ªgCå
 = ++
pT›Àvñ
->
nMem
;

241 
pT›Àvñ
->
nMem
++;

243 
memId
 = 
pInfo
->
ªgCå
;

245  
memId
;

246 
	}
}

252 
	$sqlôe3Autoö¸emítBegö
(
P¨£
 *
pP¨£
){

253 
AutoöcInfo
 *
p
;

254 
sqlôe3
 *
db
 = 
pP¨£
->db;

255 
Db
 *
pDb
;

256 
memId
;

257 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

261 
	`as£π
–
pP¨£
->
pTriggîTab
==0 );

262 
	`as£π
–
	`sqlôe3IsT›Àvñ
(
pP¨£
) );

264 
	`as£π
–
v
 );

265 
p
 = 
pP¨£
->
pAöc
;Ö;Ö =Ö->
pNext
){

266 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

267 c⁄° 
VdbeOpLi°
 
autoInc
[] = {

268  {
OP_NuŒ
, 0, 0, 0},

269  {
OP_Rewöd
, 0, 9, 0},

270  {
OP_Cﬁumn
, 0, 0, 0},

271  {
OP_Ne
, 0, 7, 0},

272  {
OP_Rowid
, 0, 0, 0},

273  {
OP_Cﬁumn
, 0, 1, 0},

274  {
OP_GŸo
, 0, 9, 0},

275  {
OP_Next
, 0, 2, 0},

276  {
OP_I¡egî
, 0, 0, 0},

277  {
OP_Clo£
, 0, 0, 0}

279 
VdbeOp
 *
aOp
;

280 
pDb
 = &
db
->
aDb
[
p
->
iDb
];

281 
memId
 = 
p
->
ªgCå
;

282 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pDb
->
pSchema
) );

283 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
p
->
iDb
, 
pDb
->
pSchema
->
pSeqTab
, 
OP_O≥nRód
);

284 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
memId
-1, 
p
->
pTab
->
zName
);

285 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
autoInc
),áutoInc, 
iLn
);

286 if–
aOp
==0 ) ;

287 
aOp
[0].
p2
 = 
memId
;

288 
aOp
[0].
p3
 = 
memId
+1;

289 
aOp
[2].
p3
 = 
memId
;

290 
aOp
[3].
p1
 = 
memId
-1;

291 
aOp
[3].
p3
 = 
memId
;

292 
aOp
[3].
p5
 = 
SQLITE_JUMPIFNULL
;

293 
aOp
[4].
p2
 = 
memId
+1;

294 
aOp
[5].
p3
 = 
memId
;

295 
aOp
[8].
p2
 = 
memId
;

297 
	}
}

307 
	$autoIncSãp
(
P¨£
 *
pP¨£
, 
memId
, 
ªgRowid
){

308 if–
memId
>0 ){

309 
	`sqlôe3VdbeAddOp2
(
pP¨£
->
pVdbe
, 
OP_MemMax
, 
memId
, 
ªgRowid
);

311 
	}
}

320 
SQLITE_NOINLINE
 
	$autoIn¸emítEnd
(
P¨£
 *
pP¨£
){

321 
AutoöcInfo
 *
p
;

322 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

323 
sqlôe3
 *
db
 = 
pP¨£
->db;

325 
	`as£π
–
v
 );

326 
p
 = 
pP¨£
->
pAöc
;Ö;Ö =Ö->
pNext
){

327 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

328 c⁄° 
VdbeOpLi°
 
autoIncEnd
[] = {

329  {
OP_NŸNuŒ
, 0, 2, 0},

330  {
OP_NewRowid
, 0, 0, 0},

331  {
OP_MakeRec‹d
, 0, 2, 0},

332  {
OP_In£π
, 0, 0, 0},

333  {
OP_Clo£
, 0, 0, 0}

335 
VdbeOp
 *
aOp
;

336 
Db
 *
pDb
 = &
db
->
aDb
[
p
->
iDb
];

337 
iRec
;

338 
memId
 = 
p
->
ªgCå
;

340 
iRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

341 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pDb
->
pSchema
) );

342 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
p
->
iDb
, 
pDb
->
pSchema
->
pSeqTab
, 
OP_O≥nWrôe
);

343 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
autoIncEnd
),áutoIncEnd, 
iLn
);

344 if–
aOp
==0 ) ;

345 
aOp
[0].
p1
 = 
memId
+1;

346 
aOp
[1].
p2
 = 
memId
+1;

347 
aOp
[2].
p1
 = 
memId
-1;

348 
aOp
[2].
p3
 = 
iRec
;

349 
aOp
[3].
p2
 = 
iRec
;

350 
aOp
[3].
p3
 = 
memId
+1;

351 
aOp
[3].
p5
 = 
OPFLAG_APPEND
;

352 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
iRec
);

354 
	}
}

355 
	$sqlôe3Autoö¸emítEnd
(
P¨£
 *
pP¨£
){

356 if–
pP¨£
->
pAöc
 ) 
	`autoIn¸emítEnd
(pParse);

357 
	}
}

363 
	#autoIncBegö
(
A
,
B
,
C
Ë(0)

	)

364 
	#autoIncSãp
(
A
,
B
,
C
)

	)

369 
x„rO±imiz©i⁄
(

370 
P¨£
 *
pP¨£
,

371 
TabÀ
 *
pDe°
,

372 
Sñe˘
 *
pSñe˘
,

373 
⁄Eº‹
,

374 
iDbDe°


474 
	$sqlôe3In£π
(

475 
P¨£
 *
pP¨£
,

476 
SrcLi°
 *
pTabLi°
,

477 
Sñe˘
 *
pSñe˘
,

478 
IdLi°
 *
pCﬁumn
,

479 
⁄Eº‹


481 
sqlôe3
 *
db
;

482 
TabÀ
 *
pTab
;

483 *
zTab
;

484 c⁄° *
zDb
;

485 
i
, 
j
, 
idx
;

486 
Vdbe
 *
v
;

487 
Index
 *
pIdx
;

488 
nCﬁumn
;

489 
nHiddí
 = 0;

490 
iD©aCur
 = 0;

491 
iIdxCur
 = 0;

492 
ùkCﬁumn
 = -1;

493 
ídOfLo›
;

494 
§cTab
 = 0;

495 
addrInsT›
 = 0;

496 
addrC⁄t
 = 0;

497 
Sñe˘De°
 
de°
;

498 
iDb
;

499 
Db
 *
pDb
;

500 
u8
 
u£TempTabÀ
 = 0;

501 
u8
 
≠≥ndFœg
 = 0;

502 
u8
 
wôhoutRowid
;

503 
u8
 
bIdLi°InOrdî
;

504 
Ex¥Li°
 *
pLi°
 = 0;

507 
ªgFromSñe˘
 = 0;

508 
ªgAutoöc
 = 0;

509 
ªgRowCou¡
 = 0;

510 
ªgIns
;

511 
ªgRowid
;

512 
ªgD©a
;

513 *
aRegIdx
 = 0;

515 #i‚de‡
SQLITE_OMIT_TRIGGER


516 
isVõw
;

517 
Triggî
 *
pTriggî
;

518 
tmask
;

521 
db
 = 
pP¨£
->db;

522 
	`mem£t
(&
de°
, 0, (dest));

523 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

524 
ö£π_˛ónup
;

531 if–
pSñe˘
 && (pSñe˘->
£lFœgs
 & 
SF_VÆues
)!=0 &&ÖSñe˘->
pPri‹
==0 ){

532 
pLi°
 = 
pSñe˘
->
pELi°
;

533 
pSñe˘
->
pELi°
 = 0;

534 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

535 
pSñe˘
 = 0;

540 
	`as£π
–
pTabLi°
->
nSrc
==1 );

541 
zTab
 = 
pTabLi°
->
a
[0].
zName
;

542 if–
	`NEVER
(
zTab
==0ËË
ö£π_˛ónup
;

543 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

544 if–
pTab
==0 ){

545 
ö£π_˛ónup
;

547 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

548 
	`as£π
–
iDb
<
db
->
nDb
 );

549 
pDb
 = &
db
->
aDb
[
iDb
];

550 
zDb
 = 
pDb
->
zName
;

551 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
pTab
->
zName
, 0, 
zDb
) ){

552 
ö£π_˛ónup
;

554 
wôhoutRowid
 = !
	`HasRowid
(
pTab
);

559 #i‚de‡
SQLITE_OMIT_TRIGGER


560 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_INSERT
, 0, &
tmask
);

561 
isVõw
 = 
pTab
->
pSñe˘
!=0;

563 
	#pTriggî
 0

	)

564 
	#tmask
 0

	)

565 
	#isVõw
 0

	)

567 #ifde‡
SQLITE_OMIT_VIEW


568 #unde‡
isVõw


569 
	#isVõw
 0

	)

571 
	`as£π
–(
pTriggî
 && 
tmask
) || (pTrigger==0 &&Åmask==0) );

576 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

577 
ö£π_˛ónup
;

582 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, 
tmask
) ){

583 
ö£π_˛ónup
;

588 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

589 if–
v
==0 ) 
ö£π_˛ónup
;

590 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

591 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 
pSñe˘
 || 
pTriggî
, 
iDb
);

593 #i‚de‡
SQLITE_OMIT_XFER_OPT


603 if–
pCﬁumn
==0 && 
	`x„rO±imiz©i⁄
(
pP¨£
, 
pTab
, 
pSñe˘
, 
⁄Eº‹
, 
iDb
) ){

604 
	`as£π
–!
pTriggî
 );

605 
	`as£π
–
pLi°
==0 );

606 
ö£π_íd
;

613 
ªgAutoöc
 = 
	`autoIncBegö
(
pP¨£
, 
iDb
, 
pTab
);

618 
ªgRowid
 = 
ªgIns
 = 
pP¨£
->
nMem
+1;

619 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
 + 1;

620 if–
	`IsVútuÆ
(
pTab
) ){

621 
ªgRowid
++;

622 
pP¨£
->
nMem
++;

624 
ªgD©a
 = 
ªgRowid
+1;

637 
bIdLi°InOrdî
 = (
pTab
->
èbFœgs
 & 
TF_OOOHiddí
)==0;

638 if–
pCﬁumn
 ){

639 
i
=0; i<
pCﬁumn
->
nId
; i++){

640 
pCﬁumn
->
a
[
i
].
idx
 = -1;

642 
i
=0; i<
pCﬁumn
->
nId
; i++){

643 
j
=0; j<
pTab
->
nCﬁ
; j++){

644 if–
	`sqlôe3SåICmp
(
pCﬁumn
->
a
[
i
].
zName
, 
pTab
->
aCﬁ
[
j
].zName)==0 ){

645 
pCﬁumn
->
a
[
i
].
idx
 = 
j
;

646 if–
i
!=
j
 ) 
bIdLi°InOrdî
 = 0;

647 if–
j
==
pTab
->
iPKey
 ){

648 
ùkCﬁumn
 = 
i
; 
	`as£π
–!
wôhoutRowid
 );

653 if–
j
>=
pTab
->
nCﬁ
 ){

654 if–
	`sqlôe3IsRowid
(
pCﬁumn
->
a
[
i
].
zName
Ë&& !
wôhoutRowid
 ){

655 
ùkCﬁumn
 = 
i
;

656 
bIdLi°InOrdî
 = 0;

658 
	`sqlôe3Eº‹Msg
(
pP¨£
, "table %S hasÇo columnÇamed %s",

659 
pTabLi°
, 0, 
pCﬁumn
->
a
[
i
].
zName
);

660 
pP¨£
->
checkSchema
 = 1;

661 
ö£π_˛ónup
;

672 if–
pSñe˘
 ){

675 
ªgYõld
;

676 
addrT›
;

677 
rc
;

679 
ªgYõld
 = ++
pP¨£
->
nMem
;

680 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

681 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
addrT›
);

682 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
ªgYõld
);

683 
de°
.
iSd°
 = 
bIdLi°InOrdî
 ? 
ªgD©a
 : 0;

684 
de°
.
nSd°
 = 
pTab
->
nCﬁ
;

685 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
de°
);

686 
ªgFromSñe˘
 = 
de°
.
iSd°
;

687 if–
rc
 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ) 
ö£π_˛ónup
;

688 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgYõld
);

689 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
 - 1);

690 
	`as£π
–
pSñe˘
->
pELi°
 );

691 
nCﬁumn
 = 
pSñe˘
->
pELi°
->
nEx¥
;

702 if–
pTriggî
 || 
	`ªadsTabÀ
(
pP¨£
, 
iDb
, 
pTab
) ){

703 
u£TempTabÀ
 = 1;

706 if–
u£TempTabÀ
 ){

717 
ªgRec
;

718 
ªgTempRowid
;

719 
addrL
;

721 
§cTab
 = 
pP¨£
->
nTab
++;

722 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

723 
ªgTempRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

724 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
§cTab
, 
nCﬁumn
);

725 
addrL
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
); 
	`VdbeCovîage
(v);

726 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgFromSñe˘
, 
nCﬁumn
, 
ªgRec
);

727 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
§cTab
, 
ªgTempRowid
);

728 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
§cTab
, 
ªgRec
, 
ªgTempRowid
);

729 
	`sqlôe3VdbeGŸo
(
v
, 
addrL
);

730 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrL
);

731 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec
);

732 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgTempRowid
);

738 
NameC⁄ãxt
 
sNC
;

739 
	`mem£t
(&
sNC
, 0, (sNC));

740 
sNC
.
pP¨£
 =ÖParse;

741 
§cTab
 = -1;

742 
	`as£π
–
u£TempTabÀ
==0 );

743 if–
pLi°
 ){

744 
nCﬁumn
 = 
pLi°
->
nEx¥
;

745 if–
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
pLi°
) ){

746 
ö£π_˛ónup
;

749 
nCﬁumn
 = 0;

757 if–
pCﬁumn
==0 && 
nCﬁumn
>0 ){

758 
ùkCﬁumn
 = 
pTab
->
iPKey
;

764 
i
=0; i<
pTab
->
nCﬁ
; i++){

765 
nHiddí
 +(
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]) ? 1 : 0);

767 if–
pCﬁumn
==0 && 
nCﬁumn
 &&ÇCﬁumn!=(
pTab
->
nCﬁ
-
nHiddí
) ){

768 
	`sqlôe3Eº‹Msg
(
pP¨£
,

770 
pTabLi°
, 0, 
pTab
->
nCﬁ
-
nHiddí
, 
nCﬁumn
);

771 
ö£π_˛ónup
;

773 if–
pCﬁumn
!=0 && 
nCﬁumn
!ıCﬁumn->
nId
 ){

774 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%d vÆue†f‹ %d cﬁumns", 
nCﬁumn
, 
pCﬁumn
->
nId
);

775 
ö£π_˛ónup
;

780 if–
db
->
Êags
 & 
SQLITE_Cou¡Rows
 ){

781 
ªgRowCou¡
 = ++
pP¨£
->
nMem
;

782 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRowCou¡
);

786 if–!
isVõw
 ){

787 
nIdx
;

788 
nIdx
 = 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 0, -1, 0,

789 &
iD©aCur
, &
iIdxCur
);

790 
aRegIdx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
nIdx
+1));

791 if–
aRegIdx
==0 ){

792 
ö£π_˛ónup
;

794 
i
=0; i<
nIdx
; i++){

795 
aRegIdx
[
i
] = ++
pP¨£
->
nMem
;

800 if–
u£TempTabÀ
 ){

810 
addrInsT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
§cTab
); 
	`VdbeCovîage
(v);

811 
addrC⁄t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

812 }if–
pSñe˘
 ){

821 
addrInsT›
 = 
addrC⁄t
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
de°
.
iSDP¨m
);

822 
	`VdbeCovîage
(
v
);

827 
ídOfLo›
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

828 if–
tmask
 & 
TRIGGER_BEFORE
 ){

829 
ªgCﬁs
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pTab
->
nCﬁ
+1);

837 if–
ùkCﬁumn
<0 ){

838 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, -1, 
ªgCﬁs
);

840 
addr1
;

841 
	`as£π
–!
wôhoutRowid
 );

842 if–
u£TempTabÀ
 ){

843 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
ùkCﬁumn
, 
ªgCﬁs
);

845 
	`as£π
–
pSñe˘
==0 );

846 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
ùkCﬁumn
].
pEx¥
, 
ªgCﬁs
);

848 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgCﬁs
); 
	`VdbeCovîage
(v);

849 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, -1, 
ªgCﬁs
);

850 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

851 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgCﬁs
); 
	`VdbeCovîage
(v);

857 
	`as£π
–!
	`IsVútuÆ
(
pTab
) );

861 
i
=
j
=0; i<
pTab
->
nCﬁ
; i++){

862 if–
pCﬁumn
 ){

863 
j
=0; j<
pCﬁumn
->
nId
; j++){

864 if–
pCﬁumn
->
a
[
j
].
idx
==
i
 ) ;

867 if–(!
u£TempTabÀ
 && !
pLi°
Ë|| (
pCﬁumn
 && 
j
>ıCﬁumn->
nId
)

868 || (
pCﬁumn
==0 && 
	`IsOrdö¨yHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
])) ){

869 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
ªgCﬁs
+i+1);

870 }if–
u£TempTabÀ
 ){

871 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
j
, 
ªgCﬁs
+
i
+1);

873 
	`as£π
–
pSñe˘
==0 );

874 
	`sqlôe3Ex¥CodeAndCache
(
pP¨£
, 
pLi°
->
a
[
j
].
pEx¥
, 
ªgCﬁs
+
i
+1);

876 if–
pCﬁumn
==0 && !
	`IsOrdö¨yHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]ËË
j
++;

884 if–!
isVõw
 ){

885 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgCﬁs
+1);

889 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_INSERT
, 0, 
TRIGGER_BEFORE
,

890 
pTab
, 
ªgCﬁs
-pTab->
nCﬁ
-1, 
⁄Eº‹
, 
ídOfLo›
);

892 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgCﬁs
, 
pTab
->
nCﬁ
+1);

898 if–!
isVõw
 ){

899 if–
	`IsVútuÆ
(
pTab
) ){

901 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgIns
);

903 if–
ùkCﬁumn
>=0 ){

904 if–
u£TempTabÀ
 ){

905 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
ùkCﬁumn
, 
ªgRowid
);

906 }if–
pSñe˘
 ){

907 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgFromSñe˘
+
ùkCﬁumn
, 
ªgRowid
);

909 
VdbeOp
 *
pOp
;

910 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
ùkCﬁumn
].
pEx¥
, 
ªgRowid
);

911 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, -1);

912 if–
	`ALWAYS
(
pOp
Ë&&ÖOp->
›code
==
OP_NuŒ
 && !
	`IsVútuÆ
(
pTab
) ){

913 
≠≥ndFœg
 = 1;

914 
pOp
->
›code
 = 
OP_NewRowid
;

915 
pOp
->
p1
 = 
iD©aCur
;

916 
pOp
->
p2
 = 
ªgRowid
;

917 
pOp
->
p3
 = 
ªgAutoöc
;

923 if–!
≠≥ndFœg
 ){

924 
addr1
;

925 if–!
	`IsVútuÆ
(
pTab
) ){

926 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgRowid
); 
	`VdbeCovîage
(v);

927 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NewRowid
, 
iD©aCur
, 
ªgRowid
, 
ªgAutoöc
);

928 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

930 
addr1
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

931 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRowid
, 
addr1
+2); 
	`VdbeCovîage
(v);

933 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgRowid
); 
	`VdbeCovîage
(v);

935 }if–
	`IsVútuÆ
(
pTab
Ë|| 
wôhoutRowid
 ){

936 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgRowid
);

938 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NewRowid
, 
iD©aCur
, 
ªgRowid
, 
ªgAutoöc
);

939 
≠≥ndFœg
 = 1;

941 
	`autoIncSãp
(
pP¨£
, 
ªgAutoöc
, 
ªgRowid
);

946 
nHiddí
 = 0;

947 
i
=0; i<
pTab
->
nCﬁ
; i++){

948 
iRegSt‹e
 = 
ªgRowid
+1+
i
;

949 if–
i
==
pTab
->
iPKey
 ){

955 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_So·NuŒ
, 
iRegSt‹e
);

958 if–
pCﬁumn
==0 ){

959 if–
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
i
]) ){

960 
j
 = -1;

961 
nHiddí
++;

963 
j
 = 
i
 - 
nHiddí
;

966 
j
=0; j<
pCﬁumn
->
nId
; j++){

967 if–
pCﬁumn
->
a
[
j
].
idx
==
i
 ) ;

970 if–
j
<0 || 
nCﬁumn
==0 || (
pCﬁumn
 && j>ıCﬁumn->
nId
) ){

971 
	`sqlôe3Ex¥CodeFa˘‹abÀ
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
iRegSt‹e
);

972 }if–
u£TempTabÀ
 ){

973 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
j
, 
iRegSt‹e
);

974 }if–
pSñe˘
 ){

975 if–
ªgFromSñe˘
!=
ªgD©a
 ){

976 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
ªgFromSñe˘
+
j
, 
iRegSt‹e
);

979 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pLi°
->
a
[
j
].
pEx¥
, 
iRegSt‹e
);

986 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


987 if–
	`IsVútuÆ
(
pTab
) ){

988 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

989 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

990 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 1, 
pTab
->
nCﬁ
+2, 
ªgIns
, 
pVTab
, 
P4_VTAB
);

991 
	`sqlôe3VdbeCh™geP5
(
v
, 
⁄Eº‹
==
OE_DeÁu…
 ? 
OE_Ab‹t
 : onError);

992 
	`sqlôe3MayAb‹t
(
pP¨£
);

996 
isRïœ˚
;

997 
	`sqlôe3Gíî©eC⁄°øötChecks
(
pP¨£
, 
pTab
, 
aRegIdx
, 
iD©aCur
, 
iIdxCur
,

998 
ªgIns
, 0, 
ùkCﬁumn
>=0, 
⁄Eº‹
, 
ídOfLo›
, &
isRïœ˚
, 0

1000 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 0, 
ªgIns
, 0, 0);

1001 
	`sqlôe3Com∂ëeIn£πi⁄
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,

1002 
ªgIns
, 
aRegIdx
, 0, 
≠≥ndFœg
, 
isRïœ˚
==0);

1008 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
)!=0 ){

1009 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
ªgRowCou¡
, 1);

1012 if–
pTriggî
 ){

1014 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_INSERT
, 0, 
TRIGGER_AFTER
,

1015 
pTab
, 
ªgD©a
-2-pTab->
nCﬁ
, 
⁄Eº‹
, 
ídOfLo›
);

1021 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ídOfLo›
);

1022 if–
u£TempTabÀ
 ){

1023 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
§cTab
, 
addrC⁄t
); 
	`VdbeCovîage
(v);

1024 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsT›
);

1025 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
§cTab
);

1026 }if–
pSñe˘
 ){

1027 
	`sqlôe3VdbeGŸo
(
v
, 
addrC⁄t
);

1028 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInsT›
);

1031 if–!
	`IsVútuÆ
(
pTab
Ë&& !
isVõw
 ){

1033 if–
iD©aCur
<
iIdxCur
 ) 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, iDataCur);

1034 
idx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, idx++){

1035 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
idx
+
iIdxCur
);

1039 
ö£π_íd
:

1044 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

1045 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

1053 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
√°ed
 && !pP¨£->
pTriggîTab
 ){

1054 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgRowCou¡
, 1);

1055 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

1056 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†ö£πed", 
SQLITE_STATIC
);

1059 
ö£π_˛ónup
:

1060 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

1061 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

1062 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

1063 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumn
);

1064 
	`sqlôe3DbFªe
(
db
, 
aRegIdx
);

1065 
	}
}

1070 #ifde‡
isVõw


1071 #unde‡
isVõw


1073 #ifde‡
pTriggî


1074 #unde‡
pTriggî


1076 #ifde‡
tmask


1077 #unde‡
tmask


1083 
	#CKCNSTRNT_COLUMN
 0x01

	)

1084 
	#CKCNSTRNT_ROWID
 0x02

	)

1091 
	$checkC⁄°øötEx¥Node
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

1092 if–
pEx¥
->
›
==
TK_COLUMN
 ){

1093 
	`as£π
–
pEx¥
->
iCﬁumn
>=0 ||ÖExpr->iColumn==-1 );

1094 if–
pEx¥
->
iCﬁumn
>=0 ){

1095 if–
pWÆkî
->
u
.
aiCﬁ
[
pEx¥
->
iCﬁumn
]>=0 ){

1096 
pWÆkî
->
eCode
 |
CKCNSTRNT_COLUMN
;

1099 
pWÆkî
->
eCode
 |
CKCNSTRNT_ROWID
;

1102  
WRC_C⁄töue
;

1103 
	}
}

1115 
	$checkC⁄°øötUnch™ged
(
Ex¥
 *
pEx¥
, *
aiChng
, 
chngRowid
){

1116 
WÆkî
 
w
;

1117 
	`mem£t
(&
w
, 0, (w));

1118 
w
.
eCode
 = 0;

1119 
w
.
xEx¥CÆlback
 = 
checkC⁄°øötEx¥Node
;

1120 
w
.
u
.
aiCﬁ
 = 
aiChng
;

1121 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

1122 if–!
chngRowid
 ){

1123 
	`ã°ˇ£
–(
w
.
eCode
 & 
CKCNSTRNT_ROWID
)!=0 );

1124 
w
.
eCode
 &~
CKCNSTRNT_ROWID
;

1126 
	`ã°ˇ£
–
w
.
eCode
==0 );

1127 
	`ã°ˇ£
–
w
.
eCode
==
CKCNSTRNT_COLUMN
 );

1128 
	`ã°ˇ£
–
w
.
eCode
==
CKCNSTRNT_ROWID
 );

1129 
	`ã°ˇ£
–
w
.
eCode
==(
CKCNSTRNT_ROWID
|
CKCNSTRNT_COLUMN
) );

1130  !
w
.
eCode
;

1131 
	}
}

1216 
	$sqlôe3Gíî©eC⁄°øötChecks
(

1217 
P¨£
 *
pP¨£
,

1218 
TabÀ
 *
pTab
,

1219 *
aRegIdx
,

1220 
iD©aCur
,

1221 
iIdxCur
,

1222 
ªgNewD©a
,

1223 
ªgOldD©a
,

1224 
u8
 
pkChng
,

1225 
u8
 
ovîrideEº‹
,

1226 
ign‹eDe°
,

1227 *
pbMayRïœ˚
,

1228 *
aiChng


1230 
Vdbe
 *
v
;

1231 
Index
 *
pIdx
;

1232 
Index
 *
pPk
 = 0;

1233 
sqlôe3
 *
db
;

1234 
i
;

1235 
ix
;

1236 
nCﬁ
;

1237 
⁄Eº‹
;

1238 
addr1
;

1239 
£íRïœ˚
 = 0;

1240 
nPkFõld
;

1241 
ùkT›
 = 0;

1242 
ùkBŸtom
 = 0;

1243 
u8
 
isUpd©e
;

1244 
u8
 
bAfföôyD⁄e
 = 0;

1245 
ªgRowid
 = -1;

1247 
isUpd©e
 = 
ªgOldD©a
!=0;

1248 
db
 = 
pP¨£
->db;

1249 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1250 
	`as£π
–
v
!=0 );

1251 
	`as£π
–
pTab
->
pSñe˘
==0 );

1252 
nCﬁ
 = 
pTab
->nCol;

1258 if–
	`HasRowid
(
pTab
) ){

1259 
pPk
 = 0;

1260 
nPkFõld
 = 1;

1262 
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1263 
nPkFõld
 = 
pPk
->
nKeyCﬁ
;

1267 
	`VdbeModuÀCommít
((
v
, "BEGIN: GenCnstCks(%d,%d,%d,%d,%d)",

1268 
iD©aCur
, 
iIdxCur
, 
ªgNewD©a
, 
ªgOldD©a
, 
pkChng
));

1272 
i
=0; i<
nCﬁ
; i++){

1273 if–
i
==
pTab
->
iPKey
 ){

1276 if–
aiChng
 &&áiChng[
i
]<0 ){

1280 
⁄Eº‹
 = 
pTab
->
aCﬁ
[
i
].
nŸNuŒ
;

1281 if–
⁄Eº‹
==
OE_N⁄e
 ) ;

1282 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1283 
⁄Eº‹
 = 
ovîrideEº‹
;

1284 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1285 
⁄Eº‹
 = 
OE_Ab‹t
;

1287 if–
⁄Eº‹
==
OE_Rïœ˚
 && 
pTab
->
aCﬁ
[
i
].
pDÊt
==0 ){

1288 
⁄Eº‹
 = 
OE_Ab‹t
;

1290 
	`as£π
–
⁄Eº‹
==
OE_Rﬁlback
 || onEº‹==
OE_Ab‹t
 || onEº‹==
OE_Faû


1291 || 
⁄Eº‹
==
OE_Ign‹e
 || onEº‹==
OE_Rïœ˚
 );

1292  
⁄Eº‹
 ){

1293 
OE_Ab‹t
:

1294 
	`sqlôe3MayAb‹t
(
pP¨£
);

1296 
OE_Rﬁlback
:

1297 
OE_Faû
: {

1298 *
zMsg
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
pTab
->
zName
,

1299 
pTab
->
aCﬁ
[
i
].
zName
);

1300 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_HÆtIfNuŒ
, 
SQLITE_CONSTRAINT_NOTNULL
, 
⁄Eº‹
,

1301 
ªgNewD©a
+1+
i
, 
zMsg
, 
P4_DYNAMIC
);

1302 
	`sqlôe3VdbeCh™geP5
(
v
, 
P5_C⁄°øötNŸNuŒ
);

1303 
	`VdbeCovîage
(
v
);

1306 
OE_Ign‹e
: {

1307 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgNewD©a
+1+
i
, 
ign‹eDe°
);

1308 
	`VdbeCovîage
(
v
);

1312 
	`as£π
–
⁄Eº‹
==
OE_Rïœ˚
 );

1313 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 
ªgNewD©a
+1+
i
);

1314 
	`VdbeCovîage
(
v
);

1315 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pTab
->
aCﬁ
[
i
].
pDÊt
, 
ªgNewD©a
+1+i);

1316 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

1324 #i‚de‡
SQLITE_OMIT_CHECK


1325 if–
pTab
->
pCheck
 && (
db
->
Êags
 & 
SQLITE_Ign‹eChecks
)==0 ){

1326 
Ex¥Li°
 *
pCheck
 = 
pTab
->pCheck;

1327 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1328 
⁄Eº‹
 = 
ovîrideEº‹
!=
OE_DeÁu…
 ? ovîrideEº‹ : 
OE_Ab‹t
;

1329 
i
=0; i<
pCheck
->
nEx¥
; i++){

1330 
ÆlOk
;

1331 
Ex¥
 *
pEx¥
 = 
pCheck
->
a
[
i
].pExpr;

1332 if–
aiChng
 && 
	`checkC⁄°øötUnch™ged
(
pEx¥
,áiChng, 
pkChng
) ) ;

1333 
ÆlOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1334 
	`sqlôe3Ex¥IfTrue
(
pP¨£
, 
pEx¥
, 
ÆlOk
, 
SQLITE_JUMPIFNULL
);

1335 if–
⁄Eº‹
==
OE_Ign‹e
 ){

1336 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1338 *
zName
 = 
pCheck
->
a
[
i
].zName;

1339 if–
zName
==0 ) zNamê
pTab
->zName;

1340 if–
⁄Eº‹
==
OE_Rïœ˚
 ) onEº‹ = 
OE_Ab‹t
;

1341 
	`sqlôe3HÆtC⁄°øöt
(
pP¨£
, 
SQLITE_CONSTRAINT_CHECK
,

1342 
⁄Eº‹
, 
zName
, 
P4_TRANSIENT
,

1343 
P5_C⁄°øötCheck
);

1345 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
ÆlOk
);

1353 if–
pkChng
 && 
pPk
==0 ){

1354 
addrRowidOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1357 
⁄Eº‹
 = 
pTab
->
keyC⁄f
;

1358 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1359 
⁄Eº‹
 = 
ovîrideEº‹
;

1360 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1361 
⁄Eº‹
 = 
OE_Ab‹t
;

1364 if–
isUpd©e
 ){

1368 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgNewD©a
, 
addrRowidOk
, 
ªgOldD©a
);

1369 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1370 
	`VdbeCovîage
(
v
);

1378 if–
⁄Eº‹
==
OE_Rïœ˚
 && 
ovîrideEº‹
!=OE_Replace ){

1379 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1380 if–
pIdx
->
⁄Eº‹
==
OE_Ign‹e
 ||ÖIdx->⁄Eº‹==
OE_Faû
 ){

1381 
ùkT›
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1389 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
addrRowidOk
, 
ªgNewD©a
);

1390 
	`VdbeCovîage
(
v
);

1393  
⁄Eº‹
 ){

1395 
⁄Eº‹
 = 
OE_Ab‹t
;

1398 
OE_Rﬁlback
:

1399 
OE_Ab‹t
:

1400 
OE_Faû
: {

1401 
	`sqlôe3RowidC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pTab
);

1404 
OE_Rïœ˚
: {

1427 
Triggî
 *
pTriggî
 = 0;

1428 if–
db
->
Êags
&
SQLITE_RecTriggîs
 ){

1429 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

1431 if–
pTriggî
 || 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 0, 0) ){

1432 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1433 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

1434 
ªgNewD©a
, 1, 0, 
OE_Rïœ˚
, 1, -1);

1436 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1437 if–
	`HasRowid
(
pTab
) ){

1442 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, 
OPFLAG_ISNOOP
);

1443 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pTab
, 
P4_TABLE
);

1446 if–
pTab
->
pIndex
 ){

1447 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1448 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,0,-1);

1451 
£íRïœ˚
 = 1;

1454 
OE_Ign‹e
: {

1456 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1460 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrRowidOk
);

1461 if–
ùkT›
 ){

1462 
ùkBŸtom
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

1463 
	`sqlôe3VdbeJumpHîe
(
v
, 
ùkT›
);

1474 
ix
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, ix++){

1475 
ªgIdx
;

1476 
ªgR
;

1477 
iThisCur
;

1478 
addrUniqueOk
;

1480 if–
aRegIdx
[
ix
]==0 ) ;

1481 if–
bAfföôyD⁄e
==0 ){

1482 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgNewD©a
+1);

1483 
bAfföôyD⁄e
 = 1;

1485 
iThisCur
 = 
iIdxCur
+
ix
;

1486 
addrUniqueOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1489 if–
pIdx
->
pP¨tIdxWhîe
 ){

1490 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
aRegIdx
[
ix
]);

1491 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1492 
	`sqlôe3Ex¥IfFÆ£Dup
(
pP¨£
, 
pIdx
->
pP¨tIdxWhîe
, 
addrUniqueOk
,

1493 
SQLITE_JUMPIFNULL
);

1494 
pP¨£
->
ckBa£
 = 0;

1500 
ªgIdx
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pIdx
->
nCﬁumn
);

1501 
i
=0; i<
pIdx
->
nCﬁumn
; i++){

1502 
iFõld
 = 
pIdx
->
aiCﬁumn
[
i
];

1503 
x
;

1504 if–
iFõld
==
XN_EXPR
 ){

1505 
pP¨£
->
ckBa£
 = 
ªgNewD©a
+1;

1506 
	`sqlôe3Ex¥CodeC›y
(
pP¨£
, 
pIdx
->
aCﬁEx¥
->
a
[
i
].
pEx¥
, 
ªgIdx
+i);

1507 
pP¨£
->
ckBa£
 = 0;

1508 
	`VdbeCommít
((
v
, "%†cﬁum¿%d", 
pIdx
->
zName
, 
i
));

1510 if–
iFõld
==
XN_ROWID
 || iFõld==
pTab
->
iPKey
 ){

1511 if–
ªgRowid
==
ªgIdx
+
i
 ) ;

1512 
x
 = 
ªgNewD©a
;

1513 
ªgRowid
 = 
pIdx
->
pP¨tIdxWhîe
 ? -1 : 
ªgIdx
+
i
;

1515 
x
 = 
iFõld
 + 
ªgNewD©a
 + 1;

1517 
	`sqlôe3VdbeAddOp2
(
v
, 
iFõld
<0 ? 
OP_I¡C›y
 : 
OP_SC›y
, 
x
, 
ªgIdx
+
i
);

1518 
	`VdbeCommít
((
v
, "%s", 
iFõld
<0 ? "rowid" : 
pTab
->
aCﬁ
[iFõld].
zName
));

1521 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgIdx
, 
pIdx
->
nCﬁumn
, 
aRegIdx
[
ix
]);

1522 
	`VdbeCommít
((
v
, "f‹ %s", 
pIdx
->
zName
));

1523 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgIdx
, 
pIdx
->
nCﬁumn
);

1529 if–
isUpd©e
 && 
pPk
==
pIdx
 && 
pkChng
==0 ){

1530 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1535 
⁄Eº‹
 = 
pIdx
->onError;

1536 if–
⁄Eº‹
==
OE_N⁄e
 ){

1537 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgIdx
, 
pIdx
->
nCﬁumn
);

1538 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1541 if–
ovîrideEº‹
!=
OE_DeÁu…
 ){

1542 
⁄Eº‹
 = 
ovîrideEº‹
;

1543 }if–
⁄Eº‹
==
OE_DeÁu…
 ){

1544 
⁄Eº‹
 = 
OE_Ab‹t
;

1548 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NoC⁄Êi˘
, 
iThisCur
, 
addrUniqueOk
,

1549 
ªgIdx
, 
pIdx
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1552 
ªgR
 = (
pIdx
==
pPk
Ë? 
ªgIdx
 : 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPkFõld
);

1553 if–
isUpd©e
 || 
⁄Eº‹
==
OE_Rïœ˚
 ){

1554 if–
	`HasRowid
(
pTab
) ){

1555 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iThisCur
, 
ªgR
);

1558 if–
isUpd©e
 ){

1559 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgR
, 
addrUniqueOk
, 
ªgOldD©a
);

1560 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1561 
	`VdbeCovîage
(
v
);

1564 
x
;

1567 if–
pIdx
!=
pPk
 ){

1568 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

1569 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

1570 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
i
]);

1571 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iThisCur
, 
x
, 
ªgR
+
i
);

1572 
	`VdbeCommít
((
v
, "%s.%s", 
pTab
->
zName
,

1573 
pTab
->
aCﬁ
[
pPk
->
aiCﬁumn
[
i
]].
zName
));

1576 if–
isUpd©e
 ){

1584 
addrJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
)+
pPk
->
nKeyCﬁ
;

1585 
›
 = 
OP_Ne
;

1586 
ªgCmp
 = (
	`IsPrim¨yKeyIndex
(
pIdx
Ë? 
ªgIdx
 : 
ªgR
);

1588 
i
=0; i<
pPk
->
nKeyCﬁ
; i++){

1589 *
p4
 = (*)
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
pPk
->
azCﬁl
[
i
]);

1590 
x
 = 
pPk
->
aiCﬁumn
[
i
];

1591 
	`as£π
–
x
>=0 );

1592 if–
i
==(
pPk
->
nKeyCﬁ
-1) ){

1593 
addrJump
 = 
addrUniqueOk
;

1594 
›
 = 
OP_Eq
;

1596 
	`sqlôe3VdbeAddOp4
(
v
, 
›
,

1597 
ªgOldD©a
+1+
x
, 
addrJump
, 
ªgCmp
+
i
, 
p4
, 
P4_COLLSEQ


1599 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1600 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Eq
);

1601 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Ne
);

1608 
	`as£π
–
⁄Eº‹
==
OE_Rﬁlback
 || onEº‹==
OE_Ab‹t
 || onEº‹==
OE_Faû


1609 || 
⁄Eº‹
==
OE_Ign‹e
 || onEº‹==
OE_Rïœ˚
 );

1610  
⁄Eº‹
 ){

1611 
OE_Rﬁlback
:

1612 
OE_Ab‹t
:

1613 
OE_Faû
: {

1614 
	`sqlôe3UniqueC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pIdx
);

1617 
OE_Ign‹e
: {

1618 
	`sqlôe3VdbeGŸo
(
v
, 
ign‹eDe°
);

1622 
Triggî
 *
pTriggî
 = 0;

1623 
	`as£π
–
⁄Eº‹
==
OE_Rïœ˚
 );

1624 
	`sqlôe3Mu…iWrôe
(
pP¨£
);

1625 if–
db
->
Êags
&
SQLITE_RecTriggîs
 ){

1626 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_DELETE
, 0, 0);

1628 
	`sqlôe3Gíî©eRowDñëe
(
pP¨£
, 
pTab
, 
pTriggî
, 
iD©aCur
, 
iIdxCur
,

1629 
ªgR
, 
nPkFõld
, 0, 
OE_Rïœ˚
,

1630 (
pIdx
==
pPk
 ? 
ONEPASS_SINGLE
 : 
ONEPASS_OFF
), -1);

1631 
£íRïœ˚
 = 1;

1635 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrUniqueOk
);

1636 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgIdx
, 
pIdx
->
nCﬁumn
);

1637 if–
ªgR
!=
ªgIdx
 ) 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
,ÑegR, 
nPkFõld
);

1639 if–
ùkT›
 ){

1640 
	`sqlôe3VdbeGŸo
(
v
, 
ùkT›
+1);

1641 
	`sqlôe3VdbeJumpHîe
(
v
, 
ùkBŸtom
);

1644 *
pbMayRïœ˚
 = 
£íRïœ˚
;

1645 
	`VdbeModuÀCommít
((
v
, "END: GíCn°Cks(%d)", 
£íRïœ˚
));

1646 
	}
}

1657 
	$sqlôe3Com∂ëeIn£πi⁄
(

1658 
P¨£
 *
pP¨£
,

1659 
TabÀ
 *
pTab
,

1660 
iD©aCur
,

1661 
iIdxCur
,

1662 
ªgNewD©a
,

1663 *
aRegIdx
,

1664 
isUpd©e
,

1665 
≠≥ndBüs
,

1666 
u£SìkResu…


1668 
Vdbe
 *
v
;

1669 
Index
 *
pIdx
;

1670 
u8
 
pik_Êags
;

1671 
ªgD©a
;

1672 
ªgRec
;

1673 
i
;

1674 
u8
 
bAfföôyD⁄e
 = 0;

1676 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1677 
	`as£π
–
v
!=0 );

1678 
	`as£π
–
pTab
->
pSñe˘
==0 );

1679 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1680 if–
aRegIdx
[
i
]==0 ) ;

1681 
bAfföôyD⁄e
 = 1;

1682 if–
pIdx
->
pP¨tIdxWhîe
 ){

1683 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
aRegIdx
[
i
], 
	`sqlôe3VdbeCuºítAddr
(v)+2);

1684 
	`VdbeCovîage
(
v
);

1686 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iIdxCur
+
i
, 
aRegIdx
[i]);

1687 
pik_Êags
 = 0;

1688 if–
u£SìkResu…
 ) 
pik_Êags
 = 
OPFLAG_USESEEKRESULT
;

1689 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& !
	`HasRowid
(
pTab
) ){

1690 
	`as£π
–
pP¨£
->
√°ed
==0 );

1691 
pik_Êags
 |
OPFLAG_NCHANGE
;

1693 
	`sqlôe3VdbeCh™geP5
(
v
, 
pik_Êags
);

1695 if–!
	`HasRowid
(
pTab
) ) ;

1696 
ªgD©a
 = 
ªgNewD©a
 + 1;

1697 
ªgRec
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1698 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgD©a
, 
pTab
->
nCﬁ
, 
ªgRec
);

1699 if–!
bAfföôyD⁄e
 ) 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 0);

1700 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgD©a
, 
pTab
->
nCﬁ
);

1701 if–
pP¨£
->
√°ed
 ){

1702 
pik_Êags
 = 0;

1704 
pik_Êags
 = 
OPFLAG_NCHANGE
;

1705 
pik_Êags
 |(
isUpd©e
?
OPFLAG_ISUPDATE
:
OPFLAG_LASTROWID
);

1707 if–
≠≥ndBüs
 ){

1708 
pik_Êags
 |
OPFLAG_APPEND
;

1710 if–
u£SìkResu…
 ){

1711 
pik_Êags
 |
OPFLAG_USESEEKRESULT
;

1713 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iD©aCur
, 
ªgRec
, 
ªgNewD©a
);

1714 if–!
pP¨£
->
√°ed
 ){

1715 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pTab
, 
P4_TABLE
);

1717 
	`sqlôe3VdbeCh™geP5
(
v
, 
pik_Êags
);

1718 
	}
}

1741 
	$sqlôe3O≥nTabÀAndIndi˚s
(

1742 
P¨£
 *
pP¨£
,

1743 
TabÀ
 *
pTab
,

1744 
›
,

1745 
u8
 
p5
,

1746 
iBa£
,

1747 
u8
 *
aToO≥n
,

1748 *
piD©aCur
,

1749 *
piIdxCur


1751 
i
;

1752 
iDb
;

1753 
iD©aCur
;

1754 
Index
 *
pIdx
;

1755 
Vdbe
 *
v
;

1757 
	`as£π
–
›
==
OP_O≥nRód
 || op==
OP_O≥nWrôe
 );

1758 
	`as£π
–
›
==
OP_O≥nWrôe
 || 
p5
==0 );

1759 if–
	`IsVútuÆ
(
pTab
) ){

1765 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

1766 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1767 
	`as£π
–
v
!=0 );

1768 if–
iBa£
<0 ) iBa£ = 
pP¨£
->
nTab
;

1769 
iD©aCur
 = 
iBa£
++;

1770 if–
piD©aCur
 ) *piD©aCu∏
iD©aCur
;

1771 if–
	`HasRowid
(
pTab
Ë&& (
aToO≥n
==0 ||áToOpen[0]) ){

1772 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iD©aCur
, 
iDb
, 
pTab
, 
›
);

1774 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 
›
==
OP_O≥nWrôe
,ÖTab->
zName
);

1776 if–
piIdxCur
 ) *piIdxCu∏
iBa£
;

1777 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1778 
iIdxCur
 = 
iBa£
++;

1779 
	`as£π
–
pIdx
->
pSchema
==
pTab
->pSchema );

1780 if–
aToO≥n
==0 ||áToO≥n[
i
+1] ){

1781 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iIdxCur
, 
pIdx
->
äum
, 
iDb
);

1782 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1783 
	`VdbeCommít
((
v
, "%s", 
pIdx
->
zName
));

1785 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& !
	`HasRowid
(
pTab
) ){

1786 if–
piD©aCur
 ) *piD©aCu∏
iIdxCur
;

1788 
	`sqlôe3VdbeCh™geP5
(
v
, 
p5
);

1791 if–
iBa£
>
pP¨£
->
nTab
 )ÖParse->nTab = iBase;

1792  
i
;

1793 
	}
}

1796 #ifde‡
SQLITE_TEST


1803 
	gsqlôe3_x„r›t_cou¡
;

1807 #i‚de‡
SQLITE_OMIT_XFER_OPT


1819 
	$x„rCom∑tibÀIndex
(
Index
 *
pDe°
, Index *
pSrc
){

1820 
i
;

1821 
	`as£π
–
pDe°
 && 
pSrc
 );

1822 
	`as£π
–
pDe°
->
pTabÀ
!=
pSrc
->pTable );

1823 if–
pDe°
->
nKeyCﬁ
!=
pSrc
->nKeyCol ){

1826 if–
pDe°
->
⁄Eº‹
!=
pSrc
->onError ){

1829 
i
=0; i<
pSrc
->
nKeyCﬁ
; i++){

1830 if–
pSrc
->
aiCﬁumn
[
i
]!=
pDe°
->aiColumn[i] ){

1833 if–
pSrc
->
aiCﬁumn
[
i
]==
XN_EXPR
 ){

1834 
	`as£π
–
pSrc
->
aCﬁEx¥
!=0 && 
pDe°
->aColExpr!=0 );

1835 if–
	`sqlôe3Ex¥Com∑ª
(
pSrc
->
aCﬁEx¥
->
a
[
i
].
pEx¥
,

1836 
pDe°
->
aCﬁEx¥
->
a
[
i
].
pEx¥
, -1)!=0 ){

1840 if–
pSrc
->
aS‹tOrdî
[
i
]!=
pDe°
->aSortOrder[i] ){

1843 if–
	`sqlôe3_°ricmp
(
pSrc
->
azCﬁl
[
i
],
pDe°
->azColl[i])!=0 ){

1847 if–
	`sqlôe3Ex¥Com∑ª
(
pSrc
->
pP¨tIdxWhîe
, 
pDe°
->pPartIdxWhere, -1) ){

1853 
	}
}

1880 
	$x„rO±imiz©i⁄
(

1881 
P¨£
 *
pP¨£
,

1882 
TabÀ
 *
pDe°
,

1883 
Sñe˘
 *
pSñe˘
,

1884 
⁄Eº‹
,

1885 
iDbDe°


1887 
sqlôe3
 *
db
 = 
pP¨£
->db;

1888 
Ex¥Li°
 *
pELi°
;

1889 
TabÀ
 *
pSrc
;

1890 
Index
 *
pSrcIdx
, *
pDe°Idx
;

1891 
SrcLi°_ôem
 *
pIãm
;

1892 
i
;

1893 
iDbSrc
;

1894 
iSrc
, 
iDe°
;

1895 
addr1
, 
addr2
;

1896 
em±yDe°Te°
 = 0;

1897 
em±ySrcTe°
 = 0;

1898 
Vdbe
 *
v
;

1899 
ªgAutoöc
;

1900 
de°HasUniqueIdx
 = 0;

1901 
ªgD©a
, 
ªgRowid
;

1903 if–
pSñe˘
==0 ){

1906 if–
pP¨£
->
pWôh
 || 
pSñe˘
->pWith ){

1912 if–
	`sqlôe3TriggîLi°
(
pP¨£
, 
pDe°
) ){

1915 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1916 if–
pDe°
->
èbFœgs
 & 
TF_VútuÆ
 ){

1920 if–
⁄Eº‹
==
OE_DeÁu…
 ){

1921 if–
pDe°
->
iPKey
>=0 ) 
⁄Eº‹
 =ÖDe°->
keyC⁄f
;

1922 if–
⁄Eº‹
==
OE_DeÁu…
 ) onEº‹ = 
OE_Ab‹t
;

1924 
	`as£π
(
pSñe˘
->
pSrc
);

1925 if–
pSñe˘
->
pSrc
->
nSrc
!=1 ){

1928 if–
pSñe˘
->
pSrc
->
a
[0].pSelect ){

1931 if–
pSñe˘
->
pWhîe
 ){

1934 if–
pSñe˘
->
pOrdîBy
 ){

1939 if–
pSñe˘
->
pGroupBy
 ){

1942 if–
pSñe˘
->
pLimô
 ){

1945 
	`as£π
–
pSñe˘
->
pOff£t
==0 );

1946 if–
pSñe˘
->
pPri‹
 ){

1949 if–
pSñe˘
->
£lFœgs
 & 
SF_Di°ö˘
 ){

1952 
pELi°
 = 
pSñe˘
->pEList;

1953 
	`as£π
–
pELi°
!=0 );

1954 if–
pELi°
->
nEx¥
!=1 ){

1957 
	`as£π
–
pELi°
->
a
[0].
pEx¥
 );

1958 if–
pELi°
->
a
[0].
pEx¥
->
›
!=
TK_ASTERISK
 ){

1966 
pIãm
 = 
pSñe˘
->
pSrc
->
a
;

1967 
pSrc
 = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0, 
pIãm
);

1968 if–
pSrc
==0 ){

1971 if–
pSrc
==
pDe°
 ){

1974 if–
	`HasRowid
(
pDe°
)!=HasRowid(
pSrc
) ){

1977 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1978 if–
pSrc
->
èbFœgs
 & 
TF_VútuÆ
 ){

1982 if–
pSrc
->
pSñe˘
 ){

1985 if–
pDe°
->
nCﬁ
!=
pSrc
->nCol ){

1988 if–
pDe°
->
iPKey
!=
pSrc
->iPKey ){

1991 
i
=0; i<
pDe°
->
nCﬁ
; i++){

1992 
Cﬁumn
 *
pDe°Cﬁ
 = &
pDe°
->
aCﬁ
[
i
];

1993 
Cﬁumn
 *
pSrcCﬁ
 = &
pSrc
->
aCﬁ
[
i
];

1994 #ifde‡
SQLITE_ENABLE_HIDDEN_COLUMNS


1995 if–(
db
->
Êags
 & 
SQLITE_Vacuum
)==0

1996 && (
pDe°Cﬁ
->
cﬁFœgs
 | 
pSrcCﬁ
->cﬁFœgsË& 
COLFLAG_HIDDEN


2001 if–
pDe°Cﬁ
->
afföôy
!=
pSrcCﬁ
->affinity ){

2004 if–
	`sqlôe3_°ricmp
(
pDe°Cﬁ
->
zCﬁl
, 
pSrcCﬁ
->zColl)!=0 ){

2007 if–
pDe°Cﬁ
->
nŸNuŒ
 && !
pSrcCﬁ
->notNull ){

2011 if–
i
>0 ){

2012 
	`as£π
–
pDe°Cﬁ
->
pDÊt
==0 ||ÖDe°Cﬁ->pDÊt->
›
==
TK_SPAN
 );

2013 
	`as£π
–
pSrcCﬁ
->
pDÊt
==0 ||ÖSrcCﬁ->pDÊt->
›
==
TK_SPAN
 );

2014 if–(
pDe°Cﬁ
->
pDÊt
==0)!=(
pSrcCﬁ
->pDflt==0)

2015 || (
pDe°Cﬁ
->
pDÊt
 && 
	`°rcmp
’De°Cﬁ->pDÊt->
u
.
zTokí
,

2016 
pSrcCﬁ
->
pDÊt
->
u
.
zTokí
)!=0)

2022 
pDe°Idx
=
pDe°
->
pIndex
;ÖDe°Idx;ÖDe°IdxıDe°Idx->
pNext
){

2023 if–
	`IsUniqueIndex
(
pDe°Idx
) ){

2024 
de°HasUniqueIdx
 = 1;

2026 
pSrcIdx
=
pSrc
->
pIndex
;ÖSrcIdx;ÖSrcIdxıSrcIdx->
pNext
){

2027 if–
	`x„rCom∑tibÀIndex
(
pDe°Idx
, 
pSrcIdx
) ) ;

2029 if–
pSrcIdx
==0 ){

2033 #i‚de‡
SQLITE_OMIT_CHECK


2034 if–
pDe°
->
pCheck
 && 
	`sqlôe3Ex¥Li°Com∑ª
(
pSrc
->pCheck,pDest->pCheck,-1) ){

2038 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2046 if–(
db
->
Êags
 & 
SQLITE_F‹eignKeys
)!=0 && 
pDe°
->
pFKey
!=0 ){

2050 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
)!=0 ){

2058 #ifde‡
SQLITE_TEST


2059 
sqlôe3_x„r›t_cou¡
++;

2061 
iDbSrc
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pSrc
->
pSchema
);

2062 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2063 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDbSrc
);

2064 
iSrc
 = 
pP¨£
->
nTab
++;

2065 
iDe°
 = 
pP¨£
->
nTab
++;

2066 
ªgAutoöc
 = 
	`autoIncBegö
(
pP¨£
, 
iDbDe°
, 
pDe°
);

2067 
ªgD©a
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2068 
ªgRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2069 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iDe°
, 
iDbDe°
, 
pDe°
, 
OP_O≥nWrôe
);

2070 
	`as£π
–
	`HasRowid
(
pDe°
Ë|| 
de°HasUniqueIdx
 );

2071 if–(
db
->
Êags
 & 
SQLITE_Vacuum
)==0 && (

2072 (
pDe°
->
iPKey
<0 &&ÖDe°->
pIndex
!=0)

2073 || 
de°HasUniqueIdx


2074 || (
⁄Eº‹
!=
OE_Ab‹t
 && onEº‹!=
OE_Rﬁlback
)

2093 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iDe°
, 0); 
	`VdbeCovîage
(v);

2094 
em±yDe°Te°
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

2095 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2097 if–
	`HasRowid
(
pSrc
) ){

2098 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
iSrc
, 
iDbSrc
, 
pSrc
, 
OP_O≥nRód
);

2099 
em±ySrcTe°
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iSrc
, 0); 
	`VdbeCovîage
(v);

2100 if–
pDe°
->
iPKey
>=0 ){

2101 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iSrc
, 
ªgRowid
);

2102 
addr2
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iDe°
, 0, 
ªgRowid
);

2103 
	`VdbeCovîage
(
v
);

2104 
	`sqlôe3RowidC⁄°øöt
(
pP¨£
, 
⁄Eº‹
, 
pDe°
);

2105 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr2
);

2106 
	`autoIncSãp
(
pP¨£
, 
ªgAutoöc
, 
ªgRowid
);

2107 }if–
pDe°
->
pIndex
==0 ){

2108 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iDe°
, 
ªgRowid
);

2110 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iSrc
, 
ªgRowid
);

2111 
	`as£π
–(
pDe°
->
èbFœgs
 & 
TF_Autoö¸emít
)==0 );

2113 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iSrc
, 
ªgD©a
);

2114 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_In£π
, 
iDe°
, 
ªgD©a
, 
ªgRowid
,

2115 (*)
pDe°
, 
P4_TABLE
);

2116 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_NCHANGE
|
OPFLAG_LASTROWID
|
OPFLAG_APPEND
);

2117 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iSrc
, 
addr1
); 
	`VdbeCovîage
(v);

2118 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iSrc
, 0);

2119 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2121 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDbDe°
, 
pDe°
->
äum
, 1,ÖDe°->
zName
);

2122 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDbSrc
, 
pSrc
->
äum
, 0,ÖSrc->
zName
);

2124 
pDe°Idx
=
pDe°
->
pIndex
;ÖDe°Idx;ÖDe°IdxıDe°Idx->
pNext
){

2125 
u8
 
idxInsFœgs
 = 0;

2126 
pSrcIdx
=
pSrc
->
pIndex
; 
	`ALWAYS
’SrcIdx);ÖSrcIdxıSrcIdx->
pNext
){

2127 if–
	`x„rCom∑tibÀIndex
(
pDe°Idx
, 
pSrcIdx
) ) ;

2129 
	`as£π
–
pSrcIdx
 );

2130 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
iSrc
, 
pSrcIdx
->
äum
, 
iDbSrc
);

2131 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pSrcIdx
);

2132 
	`VdbeCommít
((
v
, "%s", 
pSrcIdx
->
zName
));

2133 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nWrôe
, 
iDe°
, 
pDe°Idx
->
äum
, 
iDbDe°
);

2134 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pDe°Idx
);

2135 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_BULKCSR
);

2136 
	`VdbeCommít
((
v
, "%s", 
pDe°Idx
->
zName
));

2137 
addr1
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iSrc
, 0); 
	`VdbeCovîage
(v);

2138 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowKey
, 
iSrc
, 
ªgD©a
);

2139 if–
db
->
Êags
 & 
SQLITE_Vacuum
 ){

2154 
i
=0; i<
pSrcIdx
->
nCﬁumn
; i++){

2155 c⁄° *
zCﬁl
 = 
pSrcIdx
->
azCﬁl
[
i
];

2156 
	`as£π
–
	`sqlôe3_°ricmp
(
sqlôe3SåBINARY
, 
zCﬁl
)!=0

2157 || 
sqlôe3SåBINARY
==
zCﬁl
 );

2158 if–
	`sqlôe3_°ricmp
(
sqlôe3SåBINARY
, 
zCﬁl
) ) ;

2160 if–
i
==
pSrcIdx
->
nCﬁumn
 ){

2161 
idxInsFœgs
 = 
OPFLAG_USESEEKRESULT
;

2162 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_La°
, 
iDe°
, 0, -1);

2165 if–!
	`HasRowid
(
pSrc
Ë&& 
pDe°Idx
->
idxTy≥
==2 ){

2166 
idxInsFœgs
 |
OPFLAG_NCHANGE
;

2168 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxIn£π
, 
iDe°
, 
ªgD©a
, 1);

2169 
	`sqlôe3VdbeCh™geP5
(
v
, 
idxInsFœgs
);

2170 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iSrc
, 
addr1
+1); 
	`VdbeCovîage
(v);

2171 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2172 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iSrc
, 0);

2173 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2175 if–
em±ySrcTe°
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,ÉmptySrcTest);

2176 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRowid
);

2177 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgD©a
);

2178 if–
em±yDe°Te°
 ){

2179 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 
SQLITE_OK
, 0);

2180 
	`sqlôe3VdbeJumpHîe
(
v
, 
em±yDe°Te°
);

2181 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iDe°
, 0);

2186 
	}
}

	@legacy.c

18 
	~"sqlôeI¡.h
"

30 
	$sqlôe3_exec
(

31 
sqlôe3
 *
db
,

32 c⁄° *
zSql
,

33 
sqlôe3_ˇŒback
 
xCÆlback
,

34 *
pArg
,

35 **
pzEºMsg


37 
rc
 = 
SQLITE_OK
;

38 c⁄° *
zLe·ovî
;

39 
sqlôe3_°mt
 *
pStmt
 = 0;

40 **
azCﬁs
 = 0;

41 
ˇŒbackIsInô
;

43 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

44 if–
zSql
==0 ) zSql = "";

46 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

47 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

48  
rc
==
SQLITE_OK
 && 
zSql
[0] ){

49 
nCﬁ
;

50 **
azVÆs
 = 0;

52 
pStmt
 = 0;

53 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, &
zLe·ovî
);

54 
	`as£π
–
rc
==
SQLITE_OK
 || 
pStmt
==0 );

55 if–
rc
!=
SQLITE_OK
 ){

58 if–!
pStmt
 ){

60 
zSql
 = 
zLe·ovî
;

64 
ˇŒbackIsInô
 = 0;

65 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

68 
i
;

69 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

72 if–
xCÆlback
 && (
SQLITE_ROW
==
rc
 ||

73 (
SQLITE_DONE
==
rc
 && !
ˇŒbackIsInô


74 && 
db
->
Êags
&
SQLITE_NuŒCÆlback
)) ){

75 if–!
ˇŒbackIsInô
 ){

76 
azCﬁs
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 2*
nCﬁ
*(const *) + 1);

77 if–
azCﬁs
==0 ){

78 
exec_out
;

80 
i
=0; i<
nCﬁ
; i++){

81 
azCﬁs
[
i
] = (*)
	`sqlôe3_cﬁumn_«me
(
pStmt
, i);

84 
	`as£π
–
azCﬁs
[
i
]!=0 );

86 
ˇŒbackIsInô
 = 1;

88 if–
rc
==
SQLITE_ROW
 ){

89 
azVÆs
 = &
azCﬁs
[
nCﬁ
];

90 
i
=0; i<
nCﬁ
; i++){

91 
azVÆs
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, i);

92 if–!
azVÆs
[
i
] && 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, i)!=
SQLITE_NULL
 ){

93 
	`sqlôe3OomFau…
(
db
);

94 
exec_out
;

98 if–
	`xCÆlback
(
pArg
, 
nCﬁ
, 
azVÆs
, 
azCﬁs
) ){

102 
rc
 = 
SQLITE_ABORT
;

103 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)
pStmt
);

104 
pStmt
 = 0;

105 
	`sqlôe3Eº‹
(
db
, 
SQLITE_ABORT
);

106 
exec_out
;

110 if–
rc
!=
SQLITE_ROW
 ){

111 
rc
 = 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)
pStmt
);

112 
pStmt
 = 0;

113 
zSql
 = 
zLe·ovî
;

114  
	`sqlôe3Is•a˚
(
zSql
[0]) ) zSql++;

119 
	`sqlôe3DbFªe
(
db
, 
azCﬁs
);

120 
azCﬁs
 = 0;

123 
exec_out
:

124 if–
pStmt
 ) 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)pStmt);

125 
	`sqlôe3DbFªe
(
db
, 
azCﬁs
);

127 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

128 if–
rc
!=
SQLITE_OK
 && 
pzEºMsg
 ){

129 
nEºMsg
 = 1 + 
	`sqlôe3SåÀn30
(
	`sqlôe3_îrmsg
(
db
));

130 *
pzEºMsg
 = 
	`sqlôe3MÆloc
(
nEºMsg
);

131 if–*
pzEºMsg
 ){

132 
	`mem˝y
(*
pzEºMsg
, 
	`sqlôe3_îrmsg
(
db
), 
nEºMsg
);

134 
rc
 = 
SQLITE_NOMEM_BKPT
;

135 
	`sqlôe3Eº‹
(
db
, 
SQLITE_NOMEM
);

137 }if–
pzEºMsg
 ){

138 *
pzEºMsg
 = 0;

141 
	`as£π
–(
rc
&
db
->
îrMask
)==rc );

142 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

143  
rc
;

144 
	}
}

	@loadext.c

16 #i‚de‡
SQLITE_CORE


17 
	#SQLITE_CORE
 1

	)

19 
	~"sqlôe3ext.h
"

20 
	~"sqlôeI¡.h
"

21 
	~<°rög.h
>

23 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


29 #i‚de‡
SQLITE_ENABLE_COLUMN_METADATA


30 
	#sqlôe3_cﬁumn_d©aba£_«me
 0

	)

31 
	#sqlôe3_cﬁumn_d©aba£_«me16
 0

	)

32 
	#sqlôe3_cﬁumn_èbÀ_«me
 0

	)

33 
	#sqlôe3_cﬁumn_èbÀ_«me16
 0

	)

34 
	#sqlôe3_cﬁumn_‹igö_«me
 0

	)

35 
	#sqlôe3_cﬁumn_‹igö_«me16
 0

	)

38 #ifde‡
SQLITE_OMIT_AUTHORIZATION


39 
	#sqlôe3_£t_auth‹izî
 0

	)

42 #ifde‡
SQLITE_OMIT_UTF16


43 
	#sqlôe3_böd_ãxt16
 0

	)

44 
	#sqlôe3_cﬁœti⁄_√eded16
 0

	)

45 
	#sqlôe3_cﬁumn_de˛ty≥16
 0

	)

46 
	#sqlôe3_cﬁumn_«me16
 0

	)

47 
	#sqlôe3_cﬁumn_ãxt16
 0

	)

48 
	#sqlôe3_com∂ëe16
 0

	)

49 
	#sqlôe3_¸óã_cﬁœti⁄16
 0

	)

50 
	#sqlôe3_¸óã_fun˘i⁄16
 0

	)

51 
	#sqlôe3_îrmsg16
 0

	)

52 
	#sqlôe3_›í16
 0

	)

53 
	#sqlôe3_¥ï¨e16
 0

	)

54 
	#sqlôe3_¥ï¨e16_v2
 0

	)

55 
	#sqlôe3_ªsu…_îr‹16
 0

	)

56 
	#sqlôe3_ªsu…_ãxt16
 0

	)

57 
	#sqlôe3_ªsu…_ãxt16be
 0

	)

58 
	#sqlôe3_ªsu…_ãxt16À
 0

	)

59 
	#sqlôe3_vÆue_ãxt16
 0

	)

60 
	#sqlôe3_vÆue_ãxt16be
 0

	)

61 
	#sqlôe3_vÆue_ãxt16À
 0

	)

62 
	#sqlôe3_cﬁumn_d©aba£_«me16
 0

	)

63 
	#sqlôe3_cﬁumn_èbÀ_«me16
 0

	)

64 
	#sqlôe3_cﬁumn_‹igö_«me16
 0

	)

67 #ifde‡
SQLITE_OMIT_COMPLETE


68 
	#sqlôe3_com∂ëe
 0

	)

69 
	#sqlôe3_com∂ëe16
 0

	)

72 #ifde‡
SQLITE_OMIT_DECLTYPE


73 
	#sqlôe3_cﬁumn_de˛ty≥16
 0

	)

74 
	#sqlôe3_cﬁumn_de˛ty≥
 0

	)

77 #ifde‡
SQLITE_OMIT_PROGRESS_CALLBACK


78 
	#sqlôe3_¥ogªss_h™dÀr
 0

	)

81 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


82 
	#sqlôe3_¸óã_moduÀ
 0

	)

83 
	#sqlôe3_¸óã_moduÀ_v2
 0

	)

84 
	#sqlôe3_de˛¨e_vèb
 0

	)

85 
	#sqlôe3_vèb_c⁄fig
 0

	)

86 
	#sqlôe3_vèb_⁄_c⁄Êi˘
 0

	)

89 #ifde‡
SQLITE_OMIT_SHARED_CACHE


90 
	#sqlôe3_íabÀ_sh¨ed_ˇche
 0

	)

93 #i‡
deföed
(
SQLITE_OMIT_TRACE
Ë|| deföed(
SQLITE_OMIT_DEPRECATED
)

94 
	#sqlôe3_¥ofûe
 0

	)

95 
	#sqlôe3_åa˚
 0

	)

98 #ifde‡
SQLITE_OMIT_GET_TABLE


99 
	#sqlôe3_‰ì_èbÀ
 0

	)

100 
	#sqlôe3_gë_èbÀ
 0

	)

103 #ifde‡
SQLITE_OMIT_INCRBLOB


104 
	#sqlôe3_böd_zîoblob
 0

	)

105 
	#sqlôe3_blob_byãs
 0

	)

106 
	#sqlôe3_blob_˛o£
 0

	)

107 
	#sqlôe3_blob_›í
 0

	)

108 
	#sqlôe3_blob_ªad
 0

	)

109 
	#sqlôe3_blob_wrôe
 0

	)

110 
	#sqlôe3_blob_ª›í
 0

	)

113 #i‡
deföed
(
SQLITE_OMIT_TRACE
)

114 
	#sqlôe3_åa˚_v2
 0

	)

132 c⁄° 
sqlôe3_≠i_routöes
 
	gsqlôe3Apis
 = {

133 
sqlôe3_aggªg©e_c⁄ãxt
,

134 #i‚de‡
SQLITE_OMIT_DEPRECATED


135 
sqlôe3_aggªg©e_cou¡
,

139 
sqlôe3_böd_blob
,

140 
sqlôe3_böd_doubÀ
,

141 
sqlôe3_böd_öt
,

142 
sqlôe3_böd_öt64
,

143 
sqlôe3_böd_nuŒ
,

144 
sqlôe3_böd_∑ømëî_cou¡
,

145 
sqlôe3_böd_∑ømëî_ödex
,

146 
sqlôe3_böd_∑ømëî_«me
,

147 
sqlôe3_böd_ãxt
,

148 
sqlôe3_böd_ãxt16
,

149 
sqlôe3_böd_vÆue
,

150 
sqlôe3_busy_h™dÀr
,

151 
sqlôe3_busy_timeout
,

152 
sqlôe3_ch™ges
,

153 
sqlôe3_˛o£
,

154 
sqlôe3_cﬁœti⁄_√eded
,

155 
sqlôe3_cﬁœti⁄_√eded16
,

156 
sqlôe3_cﬁumn_blob
,

157 
sqlôe3_cﬁumn_byãs
,

158 
sqlôe3_cﬁumn_byãs16
,

159 
sqlôe3_cﬁumn_cou¡
,

160 
sqlôe3_cﬁumn_d©aba£_«me
,

161 
sqlôe3_cﬁumn_d©aba£_«me16
,

162 
sqlôe3_cﬁumn_de˛ty≥
,

163 
sqlôe3_cﬁumn_de˛ty≥16
,

164 
sqlôe3_cﬁumn_doubÀ
,

165 
sqlôe3_cﬁumn_öt
,

166 
sqlôe3_cﬁumn_öt64
,

167 
sqlôe3_cﬁumn_«me
,

168 
sqlôe3_cﬁumn_«me16
,

169 
sqlôe3_cﬁumn_‹igö_«me
,

170 
sqlôe3_cﬁumn_‹igö_«me16
,

171 
sqlôe3_cﬁumn_èbÀ_«me
,

172 
sqlôe3_cﬁumn_èbÀ_«me16
,

173 
sqlôe3_cﬁumn_ãxt
,

174 
sqlôe3_cﬁumn_ãxt16
,

175 
sqlôe3_cﬁumn_ty≥
,

176 
sqlôe3_cﬁumn_vÆue
,

177 
sqlôe3_commô_hook
,

178 
sqlôe3_com∂ëe
,

179 
sqlôe3_com∂ëe16
,

180 
sqlôe3_¸óã_cﬁœti⁄
,

181 
sqlôe3_¸óã_cﬁœti⁄16
,

182 
sqlôe3_¸óã_fun˘i⁄
,

183 
sqlôe3_¸óã_fun˘i⁄16
,

184 
sqlôe3_¸óã_moduÀ
,

185 
sqlôe3_d©a_cou¡
,

186 
sqlôe3_db_h™dÀ
,

187 
sqlôe3_de˛¨e_vèb
,

188 
sqlôe3_íabÀ_sh¨ed_ˇche
,

189 
sqlôe3_îrcode
,

190 
sqlôe3_îrmsg
,

191 
sqlôe3_îrmsg16
,

192 
sqlôe3_exec
,

193 #i‚de‡
SQLITE_OMIT_DEPRECATED


194 
sqlôe3_expúed
,

198 
sqlôe3_föÆize
,

199 
sqlôe3_‰ì
,

200 
sqlôe3_‰ì_èbÀ
,

201 
sqlôe3_gë_autocommô
,

202 
sqlôe3_gë_auxd©a
,

203 
sqlôe3_gë_èbÀ
,

205 
sqlôe3_öãºu±
,

206 
sqlôe3_œ°_ö£π_rowid
,

207 
sqlôe3_libvîsi⁄
,

208 
sqlôe3_libvîsi⁄_numbî
,

209 
sqlôe3_mÆloc
,

210 
sqlôe3_m¥ötf
,

211 
sqlôe3_›í
,

212 
sqlôe3_›í16
,

213 
sqlôe3_¥ï¨e
,

214 
sqlôe3_¥ï¨e16
,

215 
sqlôe3_¥ofûe
,

216 
sqlôe3_¥ogªss_h™dÀr
,

217 
sqlôe3_ªÆloc
,

218 
sqlôe3_ª£t
,

219 
sqlôe3_ªsu…_blob
,

220 
sqlôe3_ªsu…_doubÀ
,

221 
sqlôe3_ªsu…_îr‹
,

222 
sqlôe3_ªsu…_îr‹16
,

223 
sqlôe3_ªsu…_öt
,

224 
sqlôe3_ªsu…_öt64
,

225 
sqlôe3_ªsu…_nuŒ
,

226 
sqlôe3_ªsu…_ãxt
,

227 
sqlôe3_ªsu…_ãxt16
,

228 
sqlôe3_ªsu…_ãxt16be
,

229 
sqlôe3_ªsu…_ãxt16À
,

230 
sqlôe3_ªsu…_vÆue
,

231 
sqlôe3_rﬁlback_hook
,

232 
sqlôe3_£t_auth‹izî
,

233 
sqlôe3_£t_auxd©a
,

234 
sqlôe3_¢¥ötf
,

235 
sqlôe3_°ï
,

236 
sqlôe3_èbÀ_cﬁumn_mëad©a
,

237 #i‚de‡
SQLITE_OMIT_DEPRECATED


238 
sqlôe3_thªad_˛ónup
,

242 
sqlôe3_tŸÆ_ch™ges
,

243 
sqlôe3_åa˚
,

244 #i‚de‡
SQLITE_OMIT_DEPRECATED


245 
sqlôe3_å™s„r_bödögs
,

249 
sqlôe3_upd©e_hook
,

250 
sqlôe3_u£r_d©a
,

251 
sqlôe3_vÆue_blob
,

252 
sqlôe3_vÆue_byãs
,

253 
sqlôe3_vÆue_byãs16
,

254 
sqlôe3_vÆue_doubÀ
,

255 
sqlôe3_vÆue_öt
,

256 
sqlôe3_vÆue_öt64
,

257 
sqlôe3_vÆue_numîic_ty≥
,

258 
sqlôe3_vÆue_ãxt
,

259 
sqlôe3_vÆue_ãxt16
,

260 
sqlôe3_vÆue_ãxt16be
,

261 
sqlôe3_vÆue_ãxt16À
,

262 
sqlôe3_vÆue_ty≥
,

263 
sqlôe3_vm¥ötf
,

272 
sqlôe3_ovîlﬂd_fun˘i⁄
,

277 
sqlôe3_¥ï¨e_v2
,

278 
sqlôe3_¥ï¨e16_v2
,

279 
sqlôe3_˛ór_bödögs
,

284 
sqlôe3_¸óã_moduÀ_v2
,

289 
sqlôe3_böd_zîoblob
,

290 
sqlôe3_blob_byãs
,

291 
sqlôe3_blob_˛o£
,

292 
sqlôe3_blob_›í
,

293 
sqlôe3_blob_ªad
,

294 
sqlôe3_blob_wrôe
,

295 
sqlôe3_¸óã_cﬁœti⁄_v2
,

296 
sqlôe3_fûe_c⁄åﬁ
,

297 
sqlôe3_mem‹y_highw©î
,

298 
sqlôe3_mem‹y_u£d
,

299 #ifde‡
SQLITE_MUTEX_OMIT


306 
sqlôe3_muãx_Æloc
,

307 
sqlôe3_muãx_íãr
,

308 
sqlôe3_muãx_‰ì
,

309 
sqlôe3_muãx_Àave
,

310 
sqlôe3_muãx_åy
,

312 
sqlôe3_›í_v2
,

313 
sqlôe3_ªÀa£_mem‹y
,

314 
sqlôe3_ªsu…_îr‹_nomem
,

315 
sqlôe3_ªsu…_îr‹_toobig
,

316 
sqlôe3_¶ìp
,

317 
sqlôe3_so·_hóp_limô
,

318 
sqlôe3_vfs_föd
,

319 
sqlôe3_vfs_ªgi°î
,

320 
sqlôe3_vfs_uƒegi°î
,

325 
sqlôe3_thªadß„
,

326 
sqlôe3_ªsu…_zîoblob
,

327 
sqlôe3_ªsu…_îr‹_code
,

328 
sqlôe3_ã°_c⁄åﬁ
,

329 
sqlôe3_øndom√ss
,

330 
sqlôe3_c⁄ãxt_db_h™dÀ
,

335 
sqlôe3_exãnded_ªsu…_codes
,

336 
sqlôe3_limô
,

337 
sqlôe3_√xt_°mt
,

338 
sqlôe3_sql
,

339 
sqlôe3_°©us
,

344 
sqlôe3_backup_föish
,

345 
sqlôe3_backup_öô
,

346 
sqlôe3_backup_∑gecou¡
,

347 
sqlôe3_backup_ªmaöög
,

348 
sqlôe3_backup_°ï
,

349 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


350 
sqlôe3_compûe›ti⁄_gë
,

351 
sqlôe3_compûe›ti⁄_u£d
,

356 
sqlôe3_¸óã_fun˘i⁄_v2
,

357 
sqlôe3_db_c⁄fig
,

358 
sqlôe3_db_muãx
,

359 
sqlôe3_db_°©us
,

360 
sqlôe3_exãnded_îrcode
,

361 
sqlôe3_log
,

362 
sqlôe3_so·_hóp_limô64
,

363 
sqlôe3_sour˚id
,

364 
sqlôe3_°mt_°©us
,

365 
sqlôe3_°∫icmp
,

366 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


367 
sqlôe3_u∆ock_nŸify
,

371 #i‚de‡
SQLITE_OMIT_WAL


372 
sqlôe3_wÆ_autocheckpoöt
,

373 
sqlôe3_wÆ_checkpoöt
,

374 
sqlôe3_wÆ_hook
,

380 
sqlôe3_blob_ª›í
,

381 
sqlôe3_vèb_c⁄fig
,

382 
sqlôe3_vèb_⁄_c⁄Êi˘
,

383 
sqlôe3_˛o£_v2
,

384 
sqlôe3_db_fûíame
,

385 
sqlôe3_db_ªad⁄ly
,

386 
sqlôe3_db_ªÀa£_mem‹y
,

387 
sqlôe3_îr°r
,

388 
sqlôe3_°mt_busy
,

389 
sqlôe3_°mt_ªad⁄ly
,

390 
sqlôe3_°ricmp
,

391 
sqlôe3_uri_boﬁón
,

392 
sqlôe3_uri_öt64
,

393 
sqlôe3_uri_∑ømëî
,

394 
sqlôe3_v¢¥ötf
,

395 
sqlôe3_wÆ_checkpoöt_v2
,

397 
sqlôe3_auto_exãnsi⁄
,

398 
sqlôe3_böd_blob64
,

399 
sqlôe3_böd_ãxt64
,

400 
sqlôe3_ˇn˚l_auto_exãnsi⁄
,

401 
sqlôe3_lﬂd_exãnsi⁄
,

402 
sqlôe3_mÆloc64
,

403 
sqlôe3_msize
,

404 
sqlôe3_ªÆloc64
,

405 
sqlôe3_ª£t_auto_exãnsi⁄
,

406 
sqlôe3_ªsu…_blob64
,

407 
sqlôe3_ªsu…_ãxt64
,

408 
sqlôe3_°rglob
,

410 (
sqlôe3_vÆue
*(*)(c⁄° sqlôe3_vÆue*))
sqlôe3_vÆue_dup
,

411 
sqlôe3_vÆue_‰ì
,

412 
sqlôe3_ªsu…_zîoblob64
,

413 
sqlôe3_böd_zîoblob64
,

415 
sqlôe3_vÆue_subty≥
,

416 
sqlôe3_ªsu…_subty≥
,

418 
sqlôe3_°©us64
,

419 
sqlôe3_°æike
,

420 
sqlôe3_db_ˇcheÊush
,

422 
sqlôe3_sy°em_î∫o
,

424 
sqlôe3_åa˚_v2
,

425 
sqlôe3_ex∑nded_sql


440 
	$sqlôe3LﬂdExãnsi⁄
(

441 
sqlôe3
 *
db
,

442 c⁄° *
zFûe
,

443 c⁄° *
zProc
,

444 **
pzEºMsg


446 
sqlôe3_vfs
 *
pVfs
 = 
db
->pVfs;

447 *
h™dÀ
;

448 
sqlôe3_lﬂdext_íåy
 
xInô
;

449 *
zEºmsg
 = 0;

450 c⁄° *
zE¡ry
;

451 *
zA…E¡ry
 = 0;

452 **
aH™dÀ
;

453 
u64
 
nMsg
 = 300 + 
	`sqlôe3SåÀn30
(
zFûe
);

454 
ii
;

455 
rc
;

458 c⁄° *
azEndögs
[] = {

459 #i‡
SQLITE_OS_WIN


461 #ñi‡
	`deföed
(
__APPLE__
)

469 if–
pzEºMsg
 ) *pzErrMsg = 0;

478 if–(
db
->
Êags
 & 
SQLITE_LﬂdExãnsi⁄
)==0 ){

479 if–
pzEºMsg
 ){

480 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("notáuthorized");

482  
SQLITE_ERROR
;

485 
zE¡ry
 = 
zProc
 ? zProc : "sqlite3_extension_init";

487 
h™dÀ
 = 
	`sqlôe3OsDlO≥n
(
pVfs
, 
zFûe
);

488 #i‡
SQLITE_OS_UNIX
 || 
SQLITE_OS_WIN


489 
ii
=0; ii<
	`AºaySize
(
azEndögs
Ë&& 
h™dÀ
==0; ii++){

490 *
zA…Fûe
 = 
	`sqlôe3_m¥ötf
("%s.%s", 
zFûe
, 
azEndögs
[
ii
]);

491 if–
zA…Fûe
==0 )  
SQLITE_NOMEM_BKPT
;

492 
h™dÀ
 = 
	`sqlôe3OsDlO≥n
(
pVfs
, 
zA…Fûe
);

493 
	`sqlôe3_‰ì
(
zA…Fûe
);

496 if–
h™dÀ
==0 ){

497 if–
pzEºMsg
 ){

498 *
pzEºMsg
 = 
zEºmsg
 = 
	`sqlôe3_mÆloc64
(
nMsg
);

499 if–
zEºmsg
 ){

500 
	`sqlôe3_¢¥ötf
(
nMsg
, 
zEºmsg
,

501 "u«bÀÅÿ›í sh¨edÜibøry [%s]", 
zFûe
);

502 
	`sqlôe3OsDlEº‹
(
pVfs
, 
nMsg
-1, 
zEºmsg
);

505  
SQLITE_ERROR
;

507 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
	`sqlôe3OsDlSym
(
pVfs
, 
h™dÀ
, 
zE¡ry
);

520 if–
xInô
==0 && 
zProc
==0 ){

521 
iFûe
, 
iE¡ry
, 
c
;

522 
ncFûe
 = 
	`sqlôe3SåÀn30
(
zFûe
);

523 
zA…E¡ry
 = 
	`sqlôe3_mÆloc64
(
ncFûe
+30);

524 if–
zA…E¡ry
==0 ){

525 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

526  
SQLITE_NOMEM_BKPT
;

528 
	`mem˝y
(
zA…E¡ry
, "sqlite3_", 8);

529 
iFûe
=
ncFûe
-1; iFûe>=0 && 
zFûe
[iFile]!='/'; iFile--){}

530 
iFûe
++;

531 if–
	`sqlôe3_°∫icmp
(
zFûe
+
iFûe
, "lib", 3)==0 ) iFile += 3;

532 
iE¡ry
=8; (
c
 = 
zFûe
[
iFûe
])!=0 && c!='.'; iFile++){

533 if–
	`sqlôe3IßÕha
(
c
) ){

534 
zA…E¡ry
[
iE¡ry
++] = ()
sqlôe3UµîToLowî
[()
c
];

537 
	`mem˝y
(
zA…E¡ry
+
iE¡ry
, "_init", 6);

538 
zE¡ry
 = 
zA…E¡ry
;

539 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
	`sqlôe3OsDlSym
(
pVfs
, 
h™dÀ
, 
zE¡ry
);

541 if–
xInô
==0 ){

542 if–
pzEºMsg
 ){

543 
nMsg
 +
	`sqlôe3SåÀn30
(
zE¡ry
);

544 *
pzEºMsg
 = 
zEºmsg
 = 
	`sqlôe3_mÆloc64
(
nMsg
);

545 if–
zEºmsg
 ){

546 
	`sqlôe3_¢¥ötf
(
nMsg
, 
zEºmsg
,

547 "nÿíåyÖoöà[%s] i¿sh¨edÜibøry [%s]", 
zE¡ry
, 
zFûe
);

548 
	`sqlôe3OsDlEº‹
(
pVfs
, 
nMsg
-1, 
zEºmsg
);

551 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

552 
	`sqlôe3_‰ì
(
zA…E¡ry
);

553  
SQLITE_ERROR
;

555 
	`sqlôe3_‰ì
(
zA…E¡ry
);

556 
rc
 = 
	`xInô
(
db
, &
zEºmsg
, &
sqlôe3Apis
);

557 if–
rc
 ){

558 if–
rc
==
SQLITE_OK_LOAD_PERMANENTLY
 )  
SQLITE_OK
;

559 if–
pzEºMsg
 ){

560 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("îr‹ durög inôüliz©i⁄: %s", 
zEºmsg
);

562 
	`sqlôe3_‰ì
(
zEºmsg
);

563 
	`sqlôe3OsDlClo£
(
pVfs
, 
h™dÀ
);

564  
SQLITE_ERROR
;

568 
aH™dÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
h™dÀ
)*(db->
nExãnsi⁄
+1));

569 if–
aH™dÀ
==0 ){

570  
SQLITE_NOMEM_BKPT
;

572 if–
db
->
nExãnsi⁄
>0 ){

573 
	`mem˝y
(
aH™dÀ
, 
db
->
aExãnsi⁄
, (
h™dÀ
)*db->
nExãnsi⁄
);

575 
	`sqlôe3DbFªe
(
db
, db->
aExãnsi⁄
);

576 
db
->
aExãnsi⁄
 = 
aH™dÀ
;

578 
db
->
aExãnsi⁄
[db->
nExãnsi⁄
++] = 
h™dÀ
;

579  
SQLITE_OK
;

580 
	}
}

581 
	$sqlôe3_lﬂd_exãnsi⁄
(

582 
sqlôe3
 *
db
,

583 c⁄° *
zFûe
,

584 c⁄° *
zProc
,

585 **
pzEºMsg


587 
rc
;

588 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

589 
rc
 = 
	`sqlôe3LﬂdExãnsi⁄
(
db
, 
zFûe
, 
zProc
, 
pzEºMsg
);

590 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

591 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

592  
rc
;

593 
	}
}

599 
	$sqlôe3Clo£Exãnsi⁄s
(
sqlôe3
 *
db
){

600 
i
;

601 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

602 
i
=0; i<
db
->
nExãnsi⁄
; i++){

603 
	`sqlôe3OsDlClo£
(
db
->
pVfs
, db->
aExãnsi⁄
[
i
]);

605 
	`sqlôe3DbFªe
(
db
, db->
aExãnsi⁄
);

606 
	}
}

612 
	$sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
){

613 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

614 if–
⁄off
 ){

615 
db
->
Êags
 |
SQLITE_LﬂdExãnsi⁄
|
SQLITE_LﬂdExtFunc
;

617 
db
->
Êags
 &~(
SQLITE_LﬂdExãnsi⁄
|
SQLITE_LﬂdExtFunc
);

619 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

620  
SQLITE_OK
;

621 
	}
}

631 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


632 c⁄° 
sqlôe3_≠i_routöes
 
	gsqlôe3Apis
 = { 0 };

643 
sqlôe3AutoExtLi°
 
	tsqlôe3AutoExtLi°
;

644 
SQLITE_WSD
 
	ssqlôe3AutoExtLi°
 {

645 
u32
 
	mnExt
;

646 (**
	maExt
)();

647 } 
	gsqlôe3Aut€xt
 = { 0, 0 };

655 #ifde‡
SQLITE_OMIT_WSD


656 
	#wsdAut€xtInô
 \

657 
sqlôe3AutoExtLi°
 *
x
 = &
	`GLOBAL
(sqlôe3AutoExtLi°,
sqlôe3Aut€xt
)

	)

658 
	#wsdAut€xt
 
x
[0]

	)

660 
	#wsdAut€xtInô


	)

661 
	#wsdAut€xt
 
sqlôe3Aut€xt


	)

669 
sqlôe3_auto_exãnsi⁄
(

670 (*
xInô
)()

672 
rc
 = 
SQLITE_OK
;

673 #i‚de‡
SQLITE_OMIT_AUTOINIT


674 
rc
 = 
	`sqlôe3_öôülize
();

675 if–
rc
 ){

676  
rc
;

680 
u32
 
i
;

681 #i‡
SQLITE_THREADSAFE


682 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

684 
wsdAut€xtInô
;

685 
	`sqlôe3_muãx_íãr
(
muãx
);

686 
i
=0; i<
wsdAut€xt
.
nExt
; i++){

687 if–
wsdAut€xt
.
aExt
[
i
]==
xInô
 ) ;

689 if–
i
==
wsdAut€xt
.
nExt
 ){

690 
u64
 
nByã
 = (
wsdAut€xt
.
nExt
+1)*(wsdAut€xt.
aExt
[0]);

691 (**
aNew
)();

692 
aNew
 = 
	`sqlôe3_ªÆloc64
(
wsdAut€xt
.
aExt
, 
nByã
);

693 if–
aNew
==0 ){

694 
rc
 = 
SQLITE_NOMEM_BKPT
;

696 
wsdAut€xt
.
aExt
 = 
aNew
;

697 
wsdAut€xt
.
aExt
[wsdAut€xt.
nExt
] = 
xInô
;

698 
wsdAut€xt
.
nExt
++;

701 
	`sqlôe3_muãx_Àave
(
muãx
);

702 
	`as£π
–(
rc
&0xff)==rc );

703  
rc
;

705 
	}
}

716 
sqlôe3_ˇn˚l_auto_exãnsi⁄
(

717 (*
xInô
)()

719 #i‡
SQLITE_THREADSAFE


720 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

722 
i
;

723 
n
 = 0;

724 
wsdAut€xtInô
;

725 
	`sqlôe3_muãx_íãr
(
muãx
);

726 
i
=()
wsdAut€xt
.
nExt
-1; i>=0; i--){

727 if–
wsdAut€xt
.
aExt
[
i
]==
xInô
 ){

728 
wsdAut€xt
.
nExt
--;

729 
wsdAut€xt
.
aExt
[
i
] = wsdAut€xt.aExt[wsdAut€xt.
nExt
];

730 
n
++;

734 
	`sqlôe3_muãx_Àave
(
muãx
);

735  
n
;

736 
	}
}

741 
	$sqlôe3_ª£t_auto_exãnsi⁄
(){

742 #i‚de‡
SQLITE_OMIT_AUTOINIT


743 if–
	`sqlôe3_öôülize
()==
SQLITE_OK
 )

746 #i‡
SQLITE_THREADSAFE


747 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

749 
wsdAut€xtInô
;

750 
	`sqlôe3_muãx_íãr
(
muãx
);

751 
	`sqlôe3_‰ì
(
wsdAut€xt
.
aExt
);

752 
wsdAut€xt
.
aExt
 = 0;

753 
wsdAut€xt
.
nExt
 = 0;

754 
	`sqlôe3_muãx_Àave
(
muãx
);

756 
	}
}

763 
	$sqlôe3AutoLﬂdExãnsi⁄s
(
sqlôe3
 *
db
){

764 
u32
 
i
;

765 
go
 = 1;

766 
rc
;

767 
sqlôe3_lﬂdext_íåy
 
xInô
;

769 
wsdAut€xtInô
;

770 if–
wsdAut€xt
.
nExt
==0 ){

774 
i
=0; 
go
; i++){

775 *
zEºmsg
;

776 #i‡
SQLITE_THREADSAFE


777 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

779 
	`sqlôe3_muãx_íãr
(
muãx
);

780 if–
i
>=
wsdAut€xt
.
nExt
 ){

781 
xInô
 = 0;

782 
go
 = 0;

784 
xInô
 = (
sqlôe3_lﬂdext_íåy
)
wsdAut€xt
.
aExt
[
i
];

786 
	`sqlôe3_muãx_Àave
(
muãx
);

787 
zEºmsg
 = 0;

788 if–
xInô
 && (
rc
 = 
	`xInô
(
db
, &
zEºmsg
, &
sqlôe3Apis
))!=0 ){

789 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
,

790 "autom©i¯exãnsi⁄Üﬂdög faûed: %s", 
zEºmsg
);

791 
go
 = 0;

793 
	`sqlôe3_‰ì
(
zEºmsg
);

795 
	}
}

	@main.c

17 
	~"sqlôeI¡.h
"

19 #ifde‡
SQLITE_ENABLE_FTS3


20 
	~"·s3.h
"

22 #ifde‡
SQLITE_ENABLE_RTREE


23 
	~"πªe.h
"

25 #ifde‡
SQLITE_ENABLE_ICU


26 
	~"sqlôeicu.h
"

28 #ifde‡
SQLITE_ENABLE_JSON1


29 
sqlôe3Js⁄1Inô
(
sqlôe3
*);

31 #ifde‡
SQLITE_ENABLE_FTS5


32 
sqlôe3Fts5Inô
(
sqlôe3
*);

35 #i‚de‡
SQLITE_AMALGAMATION


39 c⁄° 
	gsqlôe3_vîsi⁄
[] = 
SQLITE_VERSION
;

45 c⁄° *
	$sqlôe3_libvîsi⁄
(){  
sqlôe3_vîsi⁄
; 
	}
}

51 c⁄° *
	$sqlôe3_sour˚id
(){  
SQLITE_SOURCE_ID
; 
	}
}

56 
	$sqlôe3_libvîsi⁄_numbî
(){  
SQLITE_VERSION_NUMBER
; 
	}
}

62 
	$sqlôe3_thªadß„
(){  
SQLITE_THREADSAFE
; 
	}
}

69 #ifde‡
SQLITE_HAVE_OS_TRACE


70 #i‚de‡
SQLITE_DEBUG_OS_TRACE


71 
	#SQLITE_DEBUG_OS_TRACE
 0

	)

73 
	gsqlôe3OSTø˚
 = 
SQLITE_DEBUG_OS_TRACE
;

76 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

83 
SQLITE_API
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *, ...) = 0;

93 *
sqlôe3_ãmp_dúe˘‹y
 = 0;

102 *
sqlôe3_d©a_dúe˘‹y
 = 0;

135 
	$sqlôe3_öôülize
(){

136 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

137 
rc
;

138 #ifde‡
SQLITE_EXTRA_INIT


139 
bRunExåaInô
 = 0;

142 #ifde‡
SQLITE_OMIT_WSD


143 
rc
 = 
	`sqlôe3_wsd_öô
(4096, 24);

144 if–
rc
!=
SQLITE_OK
 ){

145  
rc
;

152 
	`as£π
–
SQLITE_PTRSIZE
==(*) );

159 if–
sqlôe3GlobÆC⁄fig
.
isInô
 )  
SQLITE_OK
;

169 
rc
 = 
	`sqlôe3MuãxInô
();

170 if–
rc
 ) Ñc;

178 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

179 
	`sqlôe3_muãx_íãr
(
pMa°î
);

180 
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 = 1;

181 if–!
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 ){

182 
rc
 = 
	`sqlôe3MÆlocInô
();

184 if–
rc
==
SQLITE_OK
 ){

185 
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 = 1;

186 if–!
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 ){

187 
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 =

188 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

189 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 && !sqlôe3GlobÆC⁄fig.
pInôMuãx
 ){

190 
rc
 = 
SQLITE_NOMEM_BKPT
;

194 if–
rc
==
SQLITE_OK
 ){

195 
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
++;

197 
	`sqlôe3_muãx_Àave
(
pMa°î
);

202 if–
rc
!=
SQLITE_OK
 ){

203  
rc
;

219 
	`sqlôe3_muãx_íãr
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

220 if–
sqlôe3GlobÆC⁄fig
.
isInô
==0 && sqlôe3GlobÆC⁄fig.
öProgªss
==0 ){

221 
sqlôe3GlobÆC⁄fig
.
öProgªss
 = 1;

222 #ifde‡
SQLITE_ENABLE_SQLLOG


224 
	`sqlôe3_öô_sqŒog
();

225 
	`sqlôe3_öô_sqŒog
();

228 
	`mem£t
(&
sqlôe3BuûtöFun˘i⁄s
, 0, (sqlite3BuiltinFunctions));

229 
	`sqlôe3Regi°îBuûtöFun˘i⁄s
();

230 if–
sqlôe3GlobÆC⁄fig
.
isPCacheInô
==0 ){

231 
rc
 = 
	`sqlôe3PˇcheInôülize
();

233 if–
rc
==
SQLITE_OK
 ){

234 
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 = 1;

235 
rc
 = 
	`sqlôe3OsInô
();

237 if–
rc
==
SQLITE_OK
 ){

238 
	`sqlôe3PCacheBuf„rSëup
–
sqlôe3GlobÆC⁄fig
.
pPage
,

239 
sqlôe3GlobÆC⁄fig
.
szPage
, sqlôe3GlobÆC⁄fig.
nPage
);

240 
sqlôe3GlobÆC⁄fig
.
isInô
 = 1;

241 #ifde‡
SQLITE_EXTRA_INIT


242 
bRunExåaInô
 = 1;

245 
sqlôe3GlobÆC⁄fig
.
öProgªss
 = 0;

247 
	`sqlôe3_muãx_Àave
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

252 
	`sqlôe3_muãx_íãr
(
pMa°î
);

253 
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
--;

254 if–
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
<=0 ){

255 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
nRefInôMuãx
==0 );

256 
	`sqlôe3_muãx_‰ì
(
sqlôe3GlobÆC⁄fig
.
pInôMuãx
);

257 
sqlôe3GlobÆC⁄fig
.
pInôMuãx
 = 0;

259 
	`sqlôe3_muãx_Àave
(
pMa°î
);

266 #i‚de‡
NDEBUG


267 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


269 i‡–
rc
==
SQLITE_OK
 ){

270 
u64
 
x
 = (((u64)1)<<63)-1;

271 
y
;

272 
	`as£π
((
x
)==8);

273 
	`as£π
((
x
)==(
y
));

274 
	`mem˝y
(&
y
, &
x
, 8);

275 
	`as£π
–
	`sqlôe3IsNaN
(
y
) );

283 #ifde‡
SQLITE_EXTRA_INIT


284 if–
bRunExåaInô
 ){

285 
	`SQLITE_EXTRA_INIT
(const *);

286 
rc
 = 
	`SQLITE_EXTRA_INIT
(0);

290  
rc
;

291 
	}
}

301 
	$sqlôe3_shutdown
(){

302 #ifde‡
SQLITE_OMIT_WSD


303 
rc
 = 
	`sqlôe3_wsd_öô
(4096, 24);

304 if–
rc
!=
SQLITE_OK
 ){

305  
rc
;

309 if–
sqlôe3GlobÆC⁄fig
.
isInô
 ){

310 #ifde‡
SQLITE_EXTRA_SHUTDOWN


311 
	`SQLITE_EXTRA_SHUTDOWN
();

312 
	`SQLITE_EXTRA_SHUTDOWN
();

314 
	`sqlôe3_os_íd
();

315 
	`sqlôe3_ª£t_auto_exãnsi⁄
();

316 
sqlôe3GlobÆC⁄fig
.
isInô
 = 0;

318 if–
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 ){

319 
	`sqlôe3PˇcheShutdown
();

320 
sqlôe3GlobÆC⁄fig
.
isPCacheInô
 = 0;

322 if–
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 ){

323 
	`sqlôe3MÆlocEnd
();

324 
sqlôe3GlobÆC⁄fig
.
isMÆlocInô
 = 0;

326 #i‚de‡
SQLITE_OMIT_SHUTDOWN_DIRECTORIES


334 
sqlôe3_d©a_dúe˘‹y
 = 0;

335 
sqlôe3_ãmp_dúe˘‹y
 = 0;

338 if–
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 ){

339 
	`sqlôe3MuãxEnd
();

340 
sqlôe3GlobÆC⁄fig
.
isMuãxInô
 = 0;

343  
SQLITE_OK
;

344 
	}
}

355 
	$sqlôe3_c⁄fig
(
›
, ...){

356 
va_li°
 
≠
;

357 
rc
 = 
SQLITE_OK
;

361 if–
sqlôe3GlobÆC⁄fig
.
isInô
 )  
SQLITE_MISUSE_BKPT
;

363 
	`va_°¨t
(
≠
, 
›
);

364  
›
 ){

369 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

370 
SQLITE_CONFIG_SINGLETHREAD
: {

373 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 0;

374 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 0;

378 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

379 
SQLITE_CONFIG_MULTITHREAD
: {

382 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 1;

383 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 0;

387 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

388 
SQLITE_CONFIG_SERIALIZED
: {

391 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 = 1;

392 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
 = 1;

396 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

397 
SQLITE_CONFIG_MUTEX
: {

399 
sqlôe3GlobÆC⁄fig
.
muãx
 = *
	`va_¨g
(
≠
, 
sqlôe3_muãx_mëhods
*);

403 #i‡
	`deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE>0

404 
SQLITE_CONFIG_GETMUTEX
: {

406 *
	`va_¨g
(
≠
, 
sqlôe3_muãx_mëhods
*Ë
sqlôe3GlobÆC⁄fig
.
muãx
;

411 
SQLITE_CONFIG_MALLOC
: {

417 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`va_¨g
(
≠
, 
sqlôe3_mem_mëhods
*);

420 
SQLITE_CONFIG_GETMALLOC
: {

425 if–
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==0 ) 
	`sqlôe3MemSëDeÁu…
();

426 *
	`va_¨g
(
≠
, 
sqlôe3_mem_mëhods
*Ë
sqlôe3GlobÆC⁄fig
.
m
;

429 
SQLITE_CONFIG_MEMSTATUS
: {

433 
sqlôe3GlobÆC⁄fig
.
bMem°©
 = 
	`va_¨g
(
≠
, );

436 
SQLITE_CONFIG_SCRATCH
: {

441 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 = 
	`va_¨g
(
≠
, *);

442 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 
	`va_¨g
(
≠
, );

443 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 = 
	`va_¨g
(
≠
, );

446 
SQLITE_CONFIG_PAGECACHE
: {

451 
sqlôe3GlobÆC⁄fig
.
pPage
 = 
	`va_¨g
(
≠
, *);

452 
sqlôe3GlobÆC⁄fig
.
szPage
 = 
	`va_¨g
(
≠
, );

453 
sqlôe3GlobÆC⁄fig
.
nPage
 = 
	`va_¨g
(
≠
, );

456 
SQLITE_CONFIG_PCACHE_HDRSZ
: {

461 *
	`va_¨g
(
≠
, *) =

462 
	`sqlôe3HódîSizeBåì
() +

463 
	`sqlôe3HódîSizePˇche
() +

464 
	`sqlôe3HódîSizePˇche1
();

468 
SQLITE_CONFIG_PCACHE
: {

472 
SQLITE_CONFIG_GETPCACHE
: {

474 
rc
 = 
SQLITE_ERROR
;

478 
SQLITE_CONFIG_PCACHE2
: {

483 
sqlôe3GlobÆC⁄fig
.
pˇche2
 = *
	`va_¨g
(
≠
, 
sqlôe3_pˇche_mëhods2
*);

486 
SQLITE_CONFIG_GETPCACHE2
: {

491 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xInô
==0 ){

492 
	`sqlôe3PCacheSëDeÁu…
();

494 *
	`va_¨g
(
≠
, 
sqlôe3_pˇche_mëhods2
*Ë
sqlôe3GlobÆC⁄fig
.
pˇche2
;

501 #i‡
	`deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

502 
SQLITE_CONFIG_HEAP
: {

507 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 
	`va_¨g
(
≠
, *);

508 
sqlôe3GlobÆC⁄fig
.
nHóp
 = 
	`va_¨g
(
≠
, );

509 
sqlôe3GlobÆC⁄fig
.
mnReq
 = 
	`va_¨g
(
≠
, );

511 if–
sqlôe3GlobÆC⁄fig
.
mnReq
<1 ){

512 
sqlôe3GlobÆC⁄fig
.
mnReq
 = 1;

513 }if–
sqlôe3GlobÆC⁄fig
.
mnReq
>(1<<12) ){

515 
sqlôe3GlobÆC⁄fig
.
mnReq
 = (1<<12);

518 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==0 ){

527 
	`mem£t
(&
sqlôe3GlobÆC⁄fig
.
m
, 0, (sqlite3GlobalConfig.m));

532 #ifde‡
SQLITE_ENABLE_MEMSYS3


533 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`sqlôe3MemGëMemsys3
();

535 #ifde‡
SQLITE_ENABLE_MEMSYS5


536 
sqlôe3GlobÆC⁄fig
.
m
 = *
	`sqlôe3MemGëMemsys5
();

543 
SQLITE_CONFIG_LOOKASIDE
: {

544 
sqlôe3GlobÆC⁄fig
.
szLookaside
 = 
	`va_¨g
(
≠
, );

545 
sqlôe3GlobÆC⁄fig
.
nLookaside
 = 
	`va_¨g
(
≠
, );

553 
SQLITE_CONFIG_LOG
: {

558 (*
	tLOGFUNC_t
)(*,,const *);

559 
sqlôe3GlobÆC⁄fig
.
xLog
 = 
	`va_¨g
(
≠
, 
LOGFUNC_t
);

560 
sqlôe3GlobÆC⁄fig
.
pLogArg
 = 
	`va_¨g
(
≠
, *);

569 
SQLITE_CONFIG_URI
: {

574 
sqlôe3GlobÆC⁄fig
.
bO≥nUri
 = 
	`va_¨g
(
≠
, );

578 
SQLITE_CONFIG_COVERING_INDEX_SCAN
: {

583 
sqlôe3GlobÆC⁄fig
.
bU£Cis
 = 
	`va_¨g
(
≠
, );

587 #ifde‡
SQLITE_ENABLE_SQLLOG


588 
SQLITE_CONFIG_SQLLOG
: {

589 (*
	tSQLLOGFUNC_t
)(*, 
	tsqlôe3
*, const *, );

590 
sqlôe3GlobÆC⁄fig
.
xSqŒog
 = 
	`va_¨g
(
≠
, 
SQLLOGFUNC_t
);

591 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
 = 
	`va_¨g
(
≠
, *);

596 
SQLITE_CONFIG_MMAP_SIZE
: {

601 
sqlôe3_öt64
 
szMm≠
 = 
	`va_¨g
(
≠
, sqlite3_int64);

602 
sqlôe3_öt64
 
mxMm≠
 = 
	`va_¨g
(
≠
, sqlite3_int64);

611 if–
mxMm≠
<0 || mxMm≠>
SQLITE_MAX_MMAP_SIZE
 ){

612 
mxMm≠
 = 
SQLITE_MAX_MMAP_SIZE
;

614 if–
szMm≠
<0 ) szMm≠ = 
SQLITE_DEFAULT_MMAP_SIZE
;

615 if–
szMm≠
>
mxMm≠
) szMmap = mxMmap;

616 
sqlôe3GlobÆC⁄fig
.
mxMm≠
 = mxMmap;

617 
sqlôe3GlobÆC⁄fig
.
szMm≠
 = szMmap;

621 #i‡
SQLITE_OS_WIN
 && 
	`deföed
(
SQLITE_WIN32_MALLOC
)

622 
SQLITE_CONFIG_WIN32_HEAPSIZE
: {

626 
sqlôe3GlobÆC⁄fig
.
nHóp
 = 
	`va_¨g
(
≠
, );

631 
SQLITE_CONFIG_PMASZ
: {

632 
sqlôe3GlobÆC⁄fig
.
szPma
 = 
	`va_¨g
(
≠
, );

636 
SQLITE_CONFIG_STMTJRNL_SPILL
: {

637 
sqlôe3GlobÆC⁄fig
.
nStmtSpûl
 = 
	`va_¨g
(
≠
, );

642 
rc
 = 
SQLITE_ERROR
;

646 
	`va_íd
(
≠
);

647  
rc
;

648 
	}
}

661 
	$£tupLookaside
(
sqlôe3
 *
db
, *
pBuf
, 
sz
, 
˙t
){

662 #i‚de‡
SQLITE_OMIT_LOOKASIDE


663 *
pSèπ
;

664 if–
db
->
lookaside
.
nOut
 ){

665  
SQLITE_BUSY
;

671 if–
db
->
lookaside
.
bMÆlo˚d
 ){

672 
	`sqlôe3_‰ì
(
db
->
lookaside
.
pSèπ
);

677 
sz
 = 
	`ROUNDDOWN8
(sz);

678 if–
sz
<=()(
LookasideSlŸ
*) ) sz = 0;

679 if–
˙t
<0 ) cnt = 0;

680 if–
sz
==0 || 
˙t
==0 ){

681 
sz
 = 0;

682 
pSèπ
 = 0;

683 }if–
pBuf
==0 ){

684 
	`sqlôe3BegöBíignMÆloc
();

685 
pSèπ
 = 
	`sqlôe3MÆloc
–
sz
*
˙t
 );

686 
	`sqlôe3EndBíignMÆloc
();

687 if–
pSèπ
 ) 
˙t
 = 
	`sqlôe3MÆlocSize
’Sèπ)/
sz
;

689 
pSèπ
 = 
pBuf
;

691 
db
->
lookaside
.
pSèπ
 =ÖStart;

692 
db
->
lookaside
.
pFªe
 = 0;

693 
db
->
lookaside
.
sz
 = (
u16
)sz;

694 if–
pSèπ
 ){

695 
i
;

696 
LookasideSlŸ
 *
p
;

697 
	`as£π
–
sz
 > ()(
LookasideSlŸ
*) );

698 
p
 = (
LookasideSlŸ
*)
pSèπ
;

699 
i
=
˙t
-1; i>=0; i--){

700 
p
->
pNext
 = 
db
->
lookaside
.
pFªe
;

701 
db
->
lookaside
.
pFªe
 = 
p
;

702 
p
 = (
LookasideSlŸ
*)&((
u8
*Ì)[
sz
];

704 
db
->
lookaside
.
pEnd
 = 
p
;

705 
db
->
lookaside
.
bDißbÀ
 = 0;

706 
db
->
lookaside
.
bMÆlo˚d
 = 
pBuf
==0 ?1:0;

708 
db
->
lookaside
.
pSèπ
 = db;

709 
db
->
lookaside
.
pEnd
 = db;

710 
db
->
lookaside
.
bDißbÀ
 = 1;

711 
db
->
lookaside
.
bMÆlo˚d
 = 0;

714  
SQLITE_OK
;

715 
	}
}

720 
sqlôe3_muãx
 *
	$sqlôe3_db_muãx
(
sqlôe3
 *
db
){

721 #ifde‡
SQLITE_ENABLE_API_ARMOR


722 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

723 ()
SQLITE_MISUSE_BKPT
;

727  
db
->
muãx
;

728 
	}
}

734 
	$sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
 *
db
){

735 
i
;

737 #ifde‡
SQLITE_ENABLE_API_ARMOR


738 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

740 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

741 
	`sqlôe3BåìE¡îAŒ
(
db
);

742 
i
=0; i<
db
->
nDb
; i++){

743 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

744 if–
pBt
 ){

745 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

746 
	`sqlôe3PagîShrök
(
pPagî
);

749 
	`sqlôe3BåìLóveAŒ
(
db
);

750 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

751  
SQLITE_OK
;

752 
	}
}

758 
	$sqlôe3_db_ˇcheÊush
(
sqlôe3
 *
db
){

759 
i
;

760 
rc
 = 
SQLITE_OK
;

761 
bSìnBusy
 = 0;

763 #ifde‡
SQLITE_ENABLE_API_ARMOR


764 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

766 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

767 
	`sqlôe3BåìE¡îAŒ
(
db
);

768 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

769 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

770 if–
pBt
 && 
	`sqlôe3BåìIsInTøns
(pBt) ){

771 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

772 
rc
 = 
	`sqlôe3PagîFlush
(
pPagî
);

773 if–
rc
==
SQLITE_BUSY
 ){

774 
bSìnBusy
 = 1;

775 
rc
 = 
SQLITE_OK
;

779 
	`sqlôe3BåìLóveAŒ
(
db
);

780 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

781  ((
rc
==
SQLITE_OK
 && 
bSìnBusy
Ë? 
SQLITE_BUSY
 :Ñc);

782 
	}
}

787 
	$sqlôe3_db_c⁄fig
(
sqlôe3
 *
db
, 
›
, ...){

788 
va_li°
 
≠
;

789 
rc
;

790 
	`va_°¨t
(
≠
, 
›
);

791  
›
 ){

792 
SQLITE_DBCONFIG_LOOKASIDE
: {

793 *
pBuf
 = 
	`va_¨g
(
≠
, *);

794 
sz
 = 
	`va_¨g
(
≠
, );

795 
˙t
 = 
	`va_¨g
(
≠
, );

796 
rc
 = 
	`£tupLookaside
(
db
, 
pBuf
, 
sz
, 
˙t
);

801 
›
;

802 
u32
 
mask
;

803 } 
aFœgOp
[] = {

804 { 
SQLITE_DBCONFIG_ENABLE_FKEY
, 
SQLITE_F‹eignKeys
 },

805 { 
SQLITE_DBCONFIG_ENABLE_TRIGGER
, 
SQLITE_E«bÀTriggî
 },

806 { 
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER
, 
SQLITE_Fts3Tokíizî
 },

807 { 
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION
, 
SQLITE_LﬂdExãnsi⁄
 },

809 
i
;

810 
rc
 = 
SQLITE_ERROR
;

811 
i
=0; i<
	`AºaySize
(
aFœgOp
); i++){

812 if–
aFœgOp
[
i
].
›
==op ){

813 
⁄off
 = 
	`va_¨g
(
≠
, );

814 *
pRes
 = 
	`va_¨g
(
≠
, *);

815 
ﬁdFœgs
 = 
db
->
Êags
;

816 if–
⁄off
>0 ){

817 
db
->
Êags
 |
aFœgOp
[
i
].
mask
;

818 }if–
⁄off
==0 ){

819 
db
->
Êags
 &~
aFœgOp
[
i
].
mask
;

821 if–
ﬁdFœgs
!=
db
->
Êags
 ){

822 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

824 if–
pRes
 ){

825 *
pRes
 = (
db
->
Êags
 & 
aFœgOp
[
i
].
mask
)!=0;

827 
rc
 = 
SQLITE_OK
;

834 
	`va_íd
(
≠
);

835  
rc
;

836 
	}
}

842 
	$ÆlS∑˚s
(c⁄° *
z
, 
n
){

843  
n
>0 && 
z
[n-1]==' ' ){Ç--; }

844  
n
==0;

845 
	}
}

854 
	$böCﬁlFunc
(

855 *
∑dFœg
,

856 
nKey1
, c⁄° *
pKey1
,

857 
nKey2
, c⁄° *
pKey2


859 
rc
, 
n
;

860 
n
 = 
nKey1
<
nKey2
 ?ÇKey1 :ÇKey2;

864 
rc
 = 
	`memcmp
(
pKey1
, 
pKey2
, 
n
);

865 if–
rc
==0 ){

866 if–
∑dFœg


867 && 
	`ÆlS∑˚s
(((*)
pKey1
)+
n
, 
nKey1
-n)

868 && 
	`ÆlS∑˚s
(((*)
pKey2
)+
n
, 
nKey2
-n)

876 
rc
 = 
nKey1
 - 
nKey2
;

879  
rc
;

880 
	}
}

891 
	$noˇ£CﬁœtögFunc
(

892 *
NŸU£d
,

893 
nKey1
, c⁄° *
pKey1
,

894 
nKey2
, c⁄° *
pKey2


896 
r
 = 
	`sqlôe3SåNICmp
(

897 (c⁄° *)
pKey1
, (c⁄° *)
pKey2
, (
nKey1
<
nKey2
)?nKey1:nKey2);

898 
	`UNUSED_PARAMETER
(
NŸU£d
);

899 if–0==
r
 ){

900 
r
 = 
nKey1
-
nKey2
;

902  
r
;

903 
	}
}

908 
sqlôe_öt64
 
	$sqlôe3_œ°_ö£π_rowid
(
sqlôe3
 *
db
){

909 #ifde‡
SQLITE_ENABLE_API_ARMOR


910 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

911 ()
SQLITE_MISUSE_BKPT
;

915  
db
->
œ°Rowid
;

916 
	}
}

921 
	$sqlôe3_ch™ges
(
sqlôe3
 *
db
){

922 #ifde‡
SQLITE_ENABLE_API_ARMOR


923 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

924 ()
SQLITE_MISUSE_BKPT
;

928  
db
->
nCh™ge
;

929 
	}
}

934 
	$sqlôe3_tŸÆ_ch™ges
(
sqlôe3
 *
db
){

935 #ifde‡
SQLITE_ENABLE_API_ARMOR


936 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

937 ()
SQLITE_MISUSE_BKPT
;

941  
db
->
nTŸÆCh™ge
;

942 
	}
}

949 
	$sqlôe3Clo£Savïoöts
(
sqlôe3
 *
db
){

950  
db
->
pSavïoöt
 ){

951 
Savïoöt
 *
pTmp
 = 
db
->
pSavïoöt
;

952 
db
->
pSavïoöt
 = 
pTmp
->
pNext
;

953 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

955 
db
->
nSavïoöt
 = 0;

956 
db
->
nSèãmít
 = 0;

957 
db
->
isTønß˘i⁄Savïoöt
 = 0;

958 
	}
}

966 
	$fun˘i⁄De°roy
(
sqlôe3
 *
db
, 
FuncDef
 *
p
){

967 
FuncDe°ru˘‹
 *
pDe°ru˘‹
 = 
p
->
u
.pDestructor;

968 if–
pDe°ru˘‹
 ){

969 
pDe°ru˘‹
->
nRef
--;

970 if–
pDe°ru˘‹
->
nRef
==0 ){

971 
pDe°ru˘‹
->
	`xDe°roy
’De°ru˘‹->
pU£rD©a
);

972 
	`sqlôe3DbFªe
(
db
, 
pDe°ru˘‹
);

975 
	}
}

981 
	$disc⁄√˘AŒVèb
(
sqlôe3
 *
db
){

982 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


983 
i
;

984 
HashEÀm
 *
p
;

985 
	`sqlôe3BåìE¡îAŒ
(
db
);

986 
i
=0; i<
db
->
nDb
; i++){

987 
Schema
 *
pSchema
 = 
db
->
aDb
[
i
].pSchema;

988 if–
db
->
aDb
[
i
].
pSchema
 ){

989 
p
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

990 
TabÀ
 *
pTab
 = (TabÀ *)
	`sqlôeHashD©a
(
p
);

991 if–
	`IsVútuÆ
(
pTab
ËË
	`sqlôe3VèbDisc⁄√˘
(
db
,ÖTab);

995 
p
=
	`sqlôeHashFú°
(&
db
->
aModuÀ
);Ö;Ö=
	`sqlôeHashNext
(p)){

996 
ModuÀ
 *
pMod
 = (ModuÀ *)
	`sqlôeHashD©a
(
p
);

997 if–
pMod
->
pEpoTab
 ){

998 
	`sqlôe3VèbDisc⁄√˘
(
db
, 
pMod
->
pEpoTab
);

1001 
	`sqlôe3VèbU∆ockLi°
(
db
);

1002 
	`sqlôe3BåìLóveAŒ
(
db
);

1004 
	`UNUSED_PARAMETER
(
db
);

1006 
	}
}

1012 
	$c⁄√˘i⁄IsBusy
(
sqlôe3
 *
db
){

1013 
j
;

1014 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1015 if–
db
->
pVdbe
 )  1;

1016 
j
=0; j<
db
->
nDb
; j++){

1017 
Båì
 *
pBt
 = 
db
->
aDb
[
j
].pBt;

1018 if–
pBt
 && 
	`sqlôe3BåìIsInBackup
(pBt) )  1;

1021 
	}
}

1026 
	$sqlôe3Clo£
(
sqlôe3
 *
db
, 
f‹˚Zombõ
){

1027 if–!
db
 ){

1030  
SQLITE_OK
;

1032 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

1033  
SQLITE_MISUSE_BKPT
;

1035 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1036 if–
db
->
mTø˚
 & 
SQLITE_TRACE_CLOSE
 ){

1037 
db
->
	`xTø˚
(
SQLITE_TRACE_CLOSE
, db->
pTø˚Arg
, db, 0);

1041 
	`disc⁄√˘AŒVèb
(
db
);

1050 
	`sqlôe3VèbRﬁlback
(
db
);

1055 if–!
f‹˚Zombõ
 && 
	`c⁄√˘i⁄IsBusy
(
db
) ){

1056 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
, "unableÅo close dueÅo unfinalized "

1058 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1059  
SQLITE_BUSY
;

1062 #ifde‡
SQLITE_ENABLE_SQLLOG


1063 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 ){

1065 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(sqlôe3GlobÆC⁄fig.
pSqŒogArg
, 
db
, 0, 2);

1071 
db
->
magic
 = 
SQLITE_MAGIC_ZOMBIE
;

1072 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
db
);

1073  
SQLITE_OK
;

1074 
	}
}

1085 
	$sqlôe3_˛o£
(
sqlôe3
 *
db
){  
	`sqlôe3Clo£
(db,0); 
	}
}

1086 
	$sqlôe3_˛o£_v2
(
sqlôe3
 *
db
){  
	`sqlôe3Clo£
(db,1); 
	}
}

1097 
	$sqlôe3LóveMuãxAndClo£Zombõ
(
sqlôe3
 *
db
){

1098 
HashEÀm
 *
i
;

1099 
j
;

1105 if–
db
->
magic
!=
SQLITE_MAGIC_ZOMBIE
 || 
	`c⁄√˘i⁄IsBusy
(db) ){

1106 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1120 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

1123 
	`sqlôe3Clo£Savïoöts
(
db
);

1126 
j
=0; j<
db
->
nDb
; j++){

1127 
Db
 *
pDb
 = &
db
->
aDb
[
j
];

1128 if–
pDb
->
pBt
 ){

1129 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

1130 
pDb
->
pBt
 = 0;

1131 if–
j
!=1 ){

1132 
pDb
->
pSchema
 = 0;

1137 if–
db
->
aDb
[1].
pSchema
 ){

1138 
	`sqlôe3SchemaCÀ¨
(
db
->
aDb
[1].
pSchema
);

1140 
	`sqlôe3VèbU∆ockLi°
(
db
);

1143 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
db
);

1144 
	`as£π
–
db
->
nDb
<=2 );

1145 
	`as£π
–
db
->
aDb
==db->
aDbSètic
 );

1150 
	`sqlôe3C⁄√˘i⁄Clo£d
(
db
);

1152 
i
=
	`sqlôeHashFú°
(&
db
->
aFunc
); i; i=
	`sqlôeHashNext
(i)){

1153 
FuncDef
 *
pNext
, *
p
;

1154 
p
 = 
	`sqlôeHashD©a
(
i
);

1156 
	`fun˘i⁄De°roy
(
db
, 
p
);

1157 
pNext
 = 
p
->pNext;

1158 
	`sqlôe3DbFªe
(
db
, 
p
);

1159 
p
 = 
pNext
;

1160 } 
p
 );

1162 
	`sqlôe3HashCÀ¨
(&
db
->
aFunc
);

1163 
i
=
	`sqlôeHashFú°
(&
db
->
aCﬁlSeq
); i; i=
	`sqlôeHashNext
(i)){

1164 
CﬁlSeq
 *
pCﬁl
 = (CﬁlSeq *)
	`sqlôeHashD©a
(
i
);

1166 
j
=0; j<3; j++){

1167 if–
pCﬁl
[
j
].
xDñ
 ){

1168 
pCﬁl
[
j
].
	`xDñ
’Cﬁl[j].
pU£r
);

1171 
	`sqlôe3DbFªe
(
db
, 
pCﬁl
);

1173 
	`sqlôe3HashCÀ¨
(&
db
->
aCﬁlSeq
);

1174 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1175 
i
=
	`sqlôeHashFú°
(&
db
->
aModuÀ
); i; i=
	`sqlôeHashNext
(i)){

1176 
ModuÀ
 *
pMod
 = (ModuÀ *)
	`sqlôeHashD©a
(
i
);

1177 if–
pMod
->
xDe°roy
 ){

1178 
pMod
->
	`xDe°roy
’Mod->
pAux
);

1180 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
db
, 
pMod
);

1181 
	`sqlôe3DbFªe
(
db
, 
pMod
);

1183 
	`sqlôe3HashCÀ¨
(&
db
->
aModuÀ
);

1186 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

1187 
	`sqlôe3VÆueFªe
(
db
->
pEº
);

1188 
	`sqlôe3Clo£Exãnsi⁄s
(
db
);

1189 #i‡
SQLITE_USER_AUTHENTICATION


1190 
	`sqlôe3_‰ì
(
db
->
auth
.
zAuthU£r
);

1191 
	`sqlôe3_‰ì
(
db
->
auth
.
zAuthPW
);

1194 
db
->
magic
 = 
SQLITE_MAGIC_ERROR
;

1202 
	`sqlôe3DbFªe
(
db
, db->
aDb
[1].
pSchema
);

1203 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1204 
db
->
magic
 = 
SQLITE_MAGIC_CLOSED
;

1205 
	`sqlôe3_muãx_‰ì
(
db
->
muãx
);

1206 
	`as£π
–
db
->
lookaside
.
nOut
==0 );

1207 if–
db
->
lookaside
.
bMÆlo˚d
 ){

1208 
	`sqlôe3_‰ì
(
db
->
lookaside
.
pSèπ
);

1210 
	`sqlôe3_‰ì
(
db
);

1211 
	}
}

1220 
	$sqlôe3RﬁlbackAŒ
(
sqlôe3
 *
db
, 
åùCode
){

1221 
i
;

1222 
öTøns
 = 0;

1223 
schemaCh™ge
;

1224 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1225 
	`sqlôe3BegöBíignMÆloc
();

1233 
	`sqlôe3BåìE¡îAŒ
(
db
);

1234 
schemaCh™ge
 = (
db
->
Êags
 & 
SQLITE_I¡înCh™ges
)!=0 && db->
öô
.
busy
==0;

1236 
i
=0; i<
db
->
nDb
; i++){

1237 
Båì
 *
p
 = 
db
->
aDb
[
i
].
pBt
;

1238 if–
p
 ){

1239 if–
	`sqlôe3BåìIsInTøns
(
p
) ){

1240 
öTøns
 = 1;

1242 
	`sqlôe3BåìRﬁlback
(
p
, 
åùCode
, !
schemaCh™ge
);

1245 
	`sqlôe3VèbRﬁlback
(
db
);

1246 
	`sqlôe3EndBíignMÆloc
();

1248 if–(
db
->
Êags
&
SQLITE_I¡înCh™ges
)!=0 && db->
öô
.
busy
==0 ){

1249 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

1250 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

1252 
	`sqlôe3BåìLóveAŒ
(
db
);

1255 
db
->
nDe„ºedC⁄s
 = 0;

1256 
db
->
nDe„ºedImmC⁄s
 = 0;

1257 
db
->
Êags
 &~
SQLITE_De„rFKs
;

1260 if–
db
->
xRﬁlbackCÆlback
 && (
öTøns
 || !db->
autoCommô
) ){

1261 
db
->
	`xRﬁlbackCÆlback
(db->
pRﬁlbackArg
);

1263 
	}
}

1269 #i‡
deföed
(
SQLITE_NEED_ERR_NAME
)

1270 c⁄° *
	$sqlôe3EºName
(
rc
){

1271 c⁄° *
zName
 = 0;

1272 
i
, 
‹igRc
 = 
rc
;

1273 
i
=0; i<2 && 
zName
==0; i++, 
rc
 &= 0xff){

1274  
rc
 ){

1275 
SQLITE_OK
: 
zName
 = "SQLITE_OK"; ;

1276 
SQLITE_ERROR
: 
zName
 = "SQLITE_ERROR"; ;

1277 
SQLITE_INTERNAL
: 
zName
 = "SQLITE_INTERNAL"; ;

1278 
SQLITE_PERM
: 
zName
 = "SQLITE_PERM"; ;

1279 
SQLITE_ABORT
: 
zName
 = "SQLITE_ABORT"; ;

1280 
SQLITE_ABORT_ROLLBACK
: 
zName
 = "SQLITE_ABORT_ROLLBACK"; ;

1281 
SQLITE_BUSY
: 
zName
 = "SQLITE_BUSY"; ;

1282 
SQLITE_BUSY_RECOVERY
: 
zName
 = "SQLITE_BUSY_RECOVERY"; ;

1283 
SQLITE_BUSY_SNAPSHOT
: 
zName
 = "SQLITE_BUSY_SNAPSHOT"; ;

1284 
SQLITE_LOCKED
: 
zName
 = "SQLITE_LOCKED"; ;

1285 
SQLITE_LOCKED_SHAREDCACHE
: 
zName
 = "SQLITE_LOCKED_SHAREDCACHE";;

1286 
SQLITE_NOMEM
: 
zName
 = "SQLITE_NOMEM"; ;

1287 
SQLITE_READONLY
: 
zName
 = "SQLITE_READONLY"; ;

1288 
SQLITE_READONLY_RECOVERY
: 
zName
 = "SQLITE_READONLY_RECOVERY"; ;

1289 
SQLITE_READONLY_CANTLOCK
: 
zName
 = "SQLITE_READONLY_CANTLOCK"; ;

1290 
SQLITE_READONLY_ROLLBACK
: 
zName
 = "SQLITE_READONLY_ROLLBACK"; ;

1291 
SQLITE_READONLY_DBMOVED
: 
zName
 = "SQLITE_READONLY_DBMOVED"; ;

1292 
SQLITE_INTERRUPT
: 
zName
 = "SQLITE_INTERRUPT"; ;

1293 
SQLITE_IOERR
: 
zName
 = "SQLITE_IOERR"; ;

1294 
SQLITE_IOERR_READ
: 
zName
 = "SQLITE_IOERR_READ"; ;

1295 
SQLITE_IOERR_SHORT_READ
: 
zName
 = "SQLITE_IOERR_SHORT_READ"; ;

1296 
SQLITE_IOERR_WRITE
: 
zName
 = "SQLITE_IOERR_WRITE"; ;

1297 
SQLITE_IOERR_FSYNC
: 
zName
 = "SQLITE_IOERR_FSYNC"; ;

1298 
SQLITE_IOERR_DIR_FSYNC
: 
zName
 = "SQLITE_IOERR_DIR_FSYNC"; ;

1299 
SQLITE_IOERR_TRUNCATE
: 
zName
 = "SQLITE_IOERR_TRUNCATE"; ;

1300 
SQLITE_IOERR_FSTAT
: 
zName
 = "SQLITE_IOERR_FSTAT"; ;

1301 
SQLITE_IOERR_UNLOCK
: 
zName
 = "SQLITE_IOERR_UNLOCK"; ;

1302 
SQLITE_IOERR_RDLOCK
: 
zName
 = "SQLITE_IOERR_RDLOCK"; ;

1303 
SQLITE_IOERR_DELETE
: 
zName
 = "SQLITE_IOERR_DELETE"; ;

1304 
SQLITE_IOERR_NOMEM
: 
zName
 = "SQLITE_IOERR_NOMEM"; ;

1305 
SQLITE_IOERR_ACCESS
: 
zName
 = "SQLITE_IOERR_ACCESS"; ;

1306 
SQLITE_IOERR_CHECKRESERVEDLOCK
:

1307 
zName
 = "SQLITE_IOERR_CHECKRESERVEDLOCK"; ;

1308 
SQLITE_IOERR_LOCK
: 
zName
 = "SQLITE_IOERR_LOCK"; ;

1309 
SQLITE_IOERR_CLOSE
: 
zName
 = "SQLITE_IOERR_CLOSE"; ;

1310 
SQLITE_IOERR_DIR_CLOSE
: 
zName
 = "SQLITE_IOERR_DIR_CLOSE"; ;

1311 
SQLITE_IOERR_SHMOPEN
: 
zName
 = "SQLITE_IOERR_SHMOPEN"; ;

1312 
SQLITE_IOERR_SHMSIZE
: 
zName
 = "SQLITE_IOERR_SHMSIZE"; ;

1313 
SQLITE_IOERR_SHMLOCK
: 
zName
 = "SQLITE_IOERR_SHMLOCK"; ;

1314 
SQLITE_IOERR_SHMMAP
: 
zName
 = "SQLITE_IOERR_SHMMAP"; ;

1315 
SQLITE_IOERR_SEEK
: 
zName
 = "SQLITE_IOERR_SEEK"; ;

1316 
SQLITE_IOERR_DELETE_NOENT
: 
zName
 = "SQLITE_IOERR_DELETE_NOENT";;

1317 
SQLITE_IOERR_MMAP
: 
zName
 = "SQLITE_IOERR_MMAP"; ;

1318 
SQLITE_IOERR_GETTEMPPATH
: 
zName
 = "SQLITE_IOERR_GETTEMPPATH"; ;

1319 
SQLITE_IOERR_CONVPATH
: 
zName
 = "SQLITE_IOERR_CONVPATH"; ;

1320 
SQLITE_CORRUPT
: 
zName
 = "SQLITE_CORRUPT"; ;

1321 
SQLITE_CORRUPT_VTAB
: 
zName
 = "SQLITE_CORRUPT_VTAB"; ;

1322 
SQLITE_NOTFOUND
: 
zName
 = "SQLITE_NOTFOUND"; ;

1323 
SQLITE_FULL
: 
zName
 = "SQLITE_FULL"; ;

1324 
SQLITE_CANTOPEN
: 
zName
 = "SQLITE_CANTOPEN"; ;

1325 
SQLITE_CANTOPEN_NOTEMPDIR
: 
zName
 = "SQLITE_CANTOPEN_NOTEMPDIR";;

1326 
SQLITE_CANTOPEN_ISDIR
: 
zName
 = "SQLITE_CANTOPEN_ISDIR"; ;

1327 
SQLITE_CANTOPEN_FULLPATH
: 
zName
 = "SQLITE_CANTOPEN_FULLPATH"; ;

1328 
SQLITE_CANTOPEN_CONVPATH
: 
zName
 = "SQLITE_CANTOPEN_CONVPATH"; ;

1329 
SQLITE_PROTOCOL
: 
zName
 = "SQLITE_PROTOCOL"; ;

1330 
SQLITE_EMPTY
: 
zName
 = "SQLITE_EMPTY"; ;

1331 
SQLITE_SCHEMA
: 
zName
 = "SQLITE_SCHEMA"; ;

1332 
SQLITE_TOOBIG
: 
zName
 = "SQLITE_TOOBIG"; ;

1333 
SQLITE_CONSTRAINT
: 
zName
 = "SQLITE_CONSTRAINT"; ;

1334 
SQLITE_CONSTRAINT_UNIQUE
: 
zName
 = "SQLITE_CONSTRAINT_UNIQUE"; ;

1335 
SQLITE_CONSTRAINT_TRIGGER
: 
zName
 = "SQLITE_CONSTRAINT_TRIGGER";;

1336 
SQLITE_CONSTRAINT_FOREIGNKEY
:

1337 
zName
 = "SQLITE_CONSTRAINT_FOREIGNKEY"; ;

1338 
SQLITE_CONSTRAINT_CHECK
: 
zName
 = "SQLITE_CONSTRAINT_CHECK"; ;

1339 
SQLITE_CONSTRAINT_PRIMARYKEY
:

1340 
zName
 = "SQLITE_CONSTRAINT_PRIMARYKEY"; ;

1341 
SQLITE_CONSTRAINT_NOTNULL
: 
zName
 = "SQLITE_CONSTRAINT_NOTNULL";;

1342 
SQLITE_CONSTRAINT_COMMITHOOK
:

1343 
zName
 = "SQLITE_CONSTRAINT_COMMITHOOK"; ;

1344 
SQLITE_CONSTRAINT_VTAB
: 
zName
 = "SQLITE_CONSTRAINT_VTAB"; ;

1345 
SQLITE_CONSTRAINT_FUNCTION
:

1346 
zName
 = "SQLITE_CONSTRAINT_FUNCTION"; ;

1347 
SQLITE_CONSTRAINT_ROWID
: 
zName
 = "SQLITE_CONSTRAINT_ROWID"; ;

1348 
SQLITE_MISMATCH
: 
zName
 = "SQLITE_MISMATCH"; ;

1349 
SQLITE_MISUSE
: 
zName
 = "SQLITE_MISUSE"; ;

1350 
SQLITE_NOLFS
: 
zName
 = "SQLITE_NOLFS"; ;

1351 
SQLITE_AUTH
: 
zName
 = "SQLITE_AUTH"; ;

1352 
SQLITE_FORMAT
: 
zName
 = "SQLITE_FORMAT"; ;

1353 
SQLITE_RANGE
: 
zName
 = "SQLITE_RANGE"; ;

1354 
SQLITE_NOTADB
: 
zName
 = "SQLITE_NOTADB"; ;

1355 
SQLITE_ROW
: 
zName
 = "SQLITE_ROW"; ;

1356 
SQLITE_NOTICE
: 
zName
 = "SQLITE_NOTICE"; ;

1357 
SQLITE_NOTICE_RECOVER_WAL
: 
zName
 = "SQLITE_NOTICE_RECOVER_WAL";;

1358 
SQLITE_NOTICE_RECOVER_ROLLBACK
:

1359 
zName
 = "SQLITE_NOTICE_RECOVER_ROLLBACK"; ;

1360 
SQLITE_WARNING
: 
zName
 = "SQLITE_WARNING"; ;

1361 
SQLITE_WARNING_AUTOINDEX
: 
zName
 = "SQLITE_WARNING_AUTOINDEX"; ;

1362 
SQLITE_DONE
: 
zName
 = "SQLITE_DONE"; ;

1365 if–
zName
==0 ){

1366 
zBuf
[50];

1367 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "SQLITE_UNKNOWN(%d)", 
‹igRc
);

1368 
zName
 = 
zBuf
;

1370  
zName
;

1371 
	}
}

1378 c⁄° *
	$sqlôe3EºSå
(
rc
){

1379 c⁄° * c⁄° 
aMsg
[] = {

1408 c⁄° *
zEº
 = "unknownÉrror";

1409  
rc
 ){

1410 
SQLITE_ABORT_ROLLBACK
: {

1411 
zEº
 = "abort dueÅo ROLLBACK";

1415 
rc
 &= 0xff;

1416 if–
	`ALWAYS
(
rc
>=0Ë&&Ñc<
	`AºaySize
(
aMsg
) &&áMsg[rc]!=0 ){

1417 
zEº
 = 
aMsg
[
rc
];

1422  
zEº
;

1423 
	}
}

1431 
	$sqlôeDeÁu…BusyCÆlback
(

1432 *
±r
,

1433 
cou¡


1435 #i‡
SQLITE_OS_WIN
 || 
HAVE_USLEEP


1436 c⁄° 
u8
 
dñays
[] =

1438 c⁄° 
u8
 
tŸÆs
[] =

1440 
	#NDELAY
 
	`AºaySize
(
dñays
)

	)

1441 
sqlôe3
 *
db
 = (sqlôe3 *)
±r
;

1442 
timeout
 = 
db
->
busyTimeout
;

1443 
dñay
, 
¥i‹
;

1445 
	`as£π
–
cou¡
>=0 );

1446 if–
cou¡
 < 
NDELAY
 ){

1447 
dñay
 = 
dñays
[
cou¡
];

1448 
¥i‹
 = 
tŸÆs
[
cou¡
];

1450 
dñay
 = 
dñays
[
NDELAY
-1];

1451 
¥i‹
 = 
tŸÆs
[
NDELAY
-1] + 
dñay
*(
cou¡
-(NDELAY-1));

1453 if–
¥i‹
 + 
dñay
 > 
timeout
 ){

1454 
dñay
 = 
timeout
 - 
¥i‹
;

1455 if–
dñay
<=0 )  0;

1457 
	`sqlôe3OsSÀï
(
db
->
pVfs
, 
dñay
*1000);

1460 
sqlôe3
 *
db
 = (sqlôe3 *)
±r
;

1461 
timeout
 = ((
sqlôe3
 *)
±r
)->
busyTimeout
;

1462 if–(
cou¡
+1)*1000 > 
timeout
 ){

1465 
	`sqlôe3OsSÀï
(
db
->
pVfs
, 1000000);

1468 
	}
}

1477 
	$sqlôe3InvokeBusyH™dÀr
(
BusyH™dÀr
 *
p
){

1478 
rc
;

1479 if–
	`NEVER
(
p
==0Ë||Ö->
xFunc
==0 ||Ö->
nBusy
<0 )  0;

1480 
rc
 = 
p
->
	`xFunc
’->
pArg
,Ö->
nBusy
);

1481 if–
rc
==0 ){

1482 
p
->
nBusy
 = -1;

1484 
p
->
nBusy
++;

1486  
rc
;

1487 
	}
}

1493 
sqlôe3_busy_h™dÀr
(

1494 
sqlôe3
 *
db
,

1495 (*
xBusy
)(*,),

1496 *
pArg


1498 #ifde‡
SQLITE_ENABLE_API_ARMOR


1499 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1501 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1502 
db
->
busyH™dÀr
.
xFunc
 = 
xBusy
;

1503 
db
->
busyH™dÀr
.
pArg
 =ÖArg;

1504 
db
->
busyH™dÀr
.
nBusy
 = 0;

1505 
db
->
busyTimeout
 = 0;

1506 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1507  
SQLITE_OK
;

1508 
	}
}

1510 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1516 
sqlôe3_¥ogªss_h™dÀr
(

1517 
sqlôe3
 *
db
,

1518 
nOps
,

1519 (*
xProgªss
)(*),

1520 *
pArg


1522 #ifde‡
SQLITE_ENABLE_API_ARMOR


1523 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1524 ()
SQLITE_MISUSE_BKPT
;

1528 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1529 if–
nOps
>0 ){

1530 
db
->
xProgªss
 = xProgress;

1531 
db
->
nProgªssOps
 = ()
nOps
;

1532 
db
->
pProgªssArg
 = 
pArg
;

1534 
db
->
xProgªss
 = 0;

1535 
db
->
nProgªssOps
 = 0;

1536 
db
->
pProgªssArg
 = 0;

1538 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1539 
	}
}

1547 
	$sqlôe3_busy_timeout
(
sqlôe3
 *
db
, 
ms
){

1548 #ifde‡
SQLITE_ENABLE_API_ARMOR


1549 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1551 if–
ms
>0 ){

1552 
	`sqlôe3_busy_h™dÀr
(
db
, 
sqlôeDeÁu…BusyCÆlback
, (*)db);

1553 
db
->
busyTimeout
 = 
ms
;

1555 
	`sqlôe3_busy_h™dÀr
(
db
, 0, 0);

1557  
SQLITE_OK
;

1558 
	}
}

1563 
	$sqlôe3_öãºu±
(
sqlôe3
 *
db
){

1564 #ifde‡
SQLITE_ENABLE_API_ARMOR


1565 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1566 ()
SQLITE_MISUSE_BKPT
;

1570 
db
->
u1
.
isI¡îru±ed
 = 1;

1571 
	}
}

1580 
sqlôe3Cª©eFunc
(

1581 
sqlôe3
 *
db
,

1582 c⁄° *
zFun˘i⁄Name
,

1583 
nArg
,

1584 
íc
,

1585 *
pU£rD©a
,

1586 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1587 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1588 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

1589 
FuncDe°ru˘‹
 *
pDe°ru˘‹


1591 
FuncDef
 *
p
;

1592 
nName
;

1593 
exåaFœgs
;

1595 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

1596 if–
zFun˘i⁄Name
==0 ||

1597 (
xSFunc
 && (
xFöÆ
 || 
xSãp
)) ||

1598 (!
xSFunc
 && (
xFöÆ
 && !
xSãp
)) ||

1599 (!
xSFunc
 && (!
xFöÆ
 && 
xSãp
)) ||

1600 (
nArg
<-1 ||ÇArg>
SQLITE_MAX_FUNCTION_ARG
) ||

1601 (255<(
nName
 = 
	`sqlôe3SåÀn30
–
zFun˘i⁄Name
))) ){

1602  
SQLITE_MISUSE_BKPT
;

1605 
	`as£π
–
SQLITE_FUNC_CONSTANT
==
SQLITE_DETERMINISTIC
 );

1606 
exåaFœgs
 = 
íc
 & 
SQLITE_DETERMINISTIC
;

1607 
íc
 &(
SQLITE_FUNC_ENCMASK
|
SQLITE_ANY
);

1609 #i‚de‡
SQLITE_OMIT_UTF16


1617 if–
íc
==
SQLITE_UTF16
 ){

1618 
íc
 = 
SQLITE_UTF16NATIVE
;

1619 }if–
íc
==
SQLITE_ANY
 ){

1620 
rc
;

1621 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFun˘i⁄Name
, 
nArg
, 
SQLITE_UTF8
|
exåaFœgs
,

1622 
pU£rD©a
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pDe°ru˘‹
);

1623 if–
rc
==
SQLITE_OK
 ){

1624 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFun˘i⁄Name
, 
nArg
, 
SQLITE_UTF16LE
|
exåaFœgs
,

1625 
pU£rD©a
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pDe°ru˘‹
);

1627 if–
rc
!=
SQLITE_OK
 ){

1628  
rc
;

1630 
íc
 = 
SQLITE_UTF16BE
;

1633 
íc
 = 
SQLITE_UTF8
;

1641 
p
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zFun˘i⁄Name
, 
nArg
, (
u8
)
íc
, 0);

1642 if–
p
 && (p->
funcFœgs
 & 
SQLITE_FUNC_ENCMASK
)==
íc
 &&Ö->
nArg
==nArg ){

1643 if–
db
->
nVdbeA˘ive
 ){

1644 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
,

1646 
	`as£π
–!
db
->
mÆlocFaûed
 );

1647  
SQLITE_BUSY
;

1649 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

1653 
p
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
zFun˘i⁄Name
, 
nArg
, (
u8
)
íc
, 1);

1654 
	`as£π
(
p
 || 
db
->
mÆlocFaûed
);

1655 if–!
p
 ){

1656  
SQLITE_NOMEM_BKPT
;

1661 
	`fun˘i⁄De°roy
(
db
, 
p
);

1663 if–
pDe°ru˘‹
 ){

1664 
pDe°ru˘‹
->
nRef
++;

1666 
p
->
u
.
pDe°ru˘‹
 =ÖDestructor;

1667 
p
->
funcFœgs
 = (p->funcFœg†& 
SQLITE_FUNC_ENCMASK
Ë| 
exåaFœgs
;

1668 
	`ã°ˇ£
–
p
->
funcFœgs
 & 
SQLITE_DETERMINISTIC
 );

1669 
p
->
xSFunc
 = xSFun¯? xSFun¯: 
xSãp
;

1670 
p
->
xFöÆize
 = 
xFöÆ
;

1671 
p
->
pU£rD©a
 =ÖUserData;

1672 
p
->
nArg
 = (
u16
)nArg;

1673  
SQLITE_OK
;

1674 
	}
}

1679 
sqlôe3_¸óã_fun˘i⁄
(

1680 
sqlôe3
 *
db
,

1681 c⁄° *
zFunc
,

1682 
nArg
,

1683 
íc
,

1684 *
p
,

1685 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1686 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1687 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

1689  
	`sqlôe3_¸óã_fun˘i⁄_v2
(
db
, 
zFunc
, 
nArg
, 
íc
, 
p
, 
xSFunc
, 
xSãp
,

1690 
xFöÆ
, 0);

1691 
	}
}

1693 
sqlôe3_¸óã_fun˘i⁄_v2
(

1694 
sqlôe3
 *
db
,

1695 c⁄° *
zFunc
,

1696 
nArg
,

1697 
íc
,

1698 *
p
,

1699 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1700 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

1701 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

1702 (*
xDe°roy
)(*)

1704 
rc
 = 
SQLITE_ERROR
;

1705 
FuncDe°ru˘‹
 *
pArg
 = 0;

1707 #ifde‡
SQLITE_ENABLE_API_ARMOR


1708 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1709  
SQLITE_MISUSE_BKPT
;

1712 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1713 if–
xDe°roy
 ){

1714 
pArg
 = (
FuncDe°ru˘‹
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (FuncDestructor));

1715 if–!
pArg
 ){

1716 
	`xDe°roy
(
p
);

1717 
out
;

1719 
pArg
->
xDe°roy
 = xDestroy;

1720 
pArg
->
pU£rD©a
 = 
p
;

1722 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFunc
, 
nArg
, 
íc
, 
p
, 
xSFunc
, 
xSãp
, 
xFöÆ
, 
pArg
);

1723 if–
pArg
 &&ÖArg->
nRef
==0 ){

1724 
	`as£π
–
rc
!=
SQLITE_OK
 );

1725 
	`xDe°roy
(
p
);

1726 
	`sqlôe3DbFªe
(
db
, 
pArg
);

1729 
out
:

1730 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1731 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1732  
rc
;

1733 
	}
}

1735 #i‚de‡
SQLITE_OMIT_UTF16


1736 
sqlôe3_¸óã_fun˘i⁄16
(

1737 
sqlôe3
 *
db
,

1738 c⁄° *
zFun˘i⁄Name
,

1739 
nArg
,

1740 
eTextRï
,

1741 *
p
,

1742 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1743 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1744 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

1746 
rc
;

1747 *
zFunc8
;

1749 #ifde‡
SQLITE_ENABLE_API_ARMOR


1750 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zFun˘i⁄Name
==0 )  
SQLITE_MISUSE_BKPT
;

1752 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1753 
	`as£π
–!
db
->
mÆlocFaûed
 );

1754 
zFunc8
 = 
	`sqlôe3Utf16to8
(
db
, 
zFun˘i⁄Name
, -1, 
SQLITE_UTF16NATIVE
);

1755 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zFunc8
, 
nArg
, 
eTextRï
, 
p
, 
xSFunc
,
xSãp
,
xFöÆ
,0);

1756 
	`sqlôe3DbFªe
(
db
, 
zFunc8
);

1757 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1758 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1759  
rc
;

1760 
	}
}

1776 
	$sqlôe3_ovîlﬂd_fun˘i⁄
(

1777 
sqlôe3
 *
db
,

1778 c⁄° *
zName
,

1779 
nArg


1781 
rc
 = 
SQLITE_OK
;

1783 #ifde‡
SQLITE_ENABLE_API_ARMOR


1784 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 || 
nArg
<-2 ){

1785  
SQLITE_MISUSE_BKPT
;

1788 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1789 if–
	`sqlôe3FödFun˘i⁄
(
db
, 
zName
, 
nArg
, 
SQLITE_UTF8
, 0)==0 ){

1790 
rc
 = 
	`sqlôe3Cª©eFunc
(
db
, 
zName
, 
nArg
, 
SQLITE_UTF8
,

1791 0, 
sqlôe3InvÆidFun˘i⁄
, 0, 0, 0);

1793 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

1794 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1795  
rc
;

1796 
	}
}

1798 #i‚de‡
SQLITE_OMIT_TRACE


1807 #i‚de‡
SQLITE_OMIT_DEPRECATED


1808 *
sqlôe3_åa˚
(
sqlôe3
 *
db
, (*
xTø˚
)(*,c⁄° *), *
pArg
){

1809 *
pOld
;

1811 #ifde‡
SQLITE_ENABLE_API_ARMOR


1812 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1813 ()
SQLITE_MISUSE_BKPT
;

1817 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1818 
pOld
 = 
db
->
pTø˚Arg
;

1819 
db
->
mTø˚
 = 
xTø˚
 ? 
SQLITE_TRACE_LEGACY
 : 0;

1820 
db
->
xTø˚
 = ((*)(
u32
,*,*,*))xTrace;

1821 
db
->
pTø˚Arg
 = 
pArg
;

1822 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1823  
pOld
;

1824 
	}
}

1829 
sqlôe3_åa˚_v2
(

1830 
sqlôe3
 *
db
,

1831 
mTø˚
,

1832 (*
xTø˚
)(,*,*,*),

1833 *
pArg


1835 #ifde‡
SQLITE_ENABLE_API_ARMOR


1836 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1837  
SQLITE_MISUSE_BKPT
;

1840 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1841 
db
->
mTø˚
 = mTrace;

1842 
db
->
xTø˚
 = xTrace;

1843 
db
->
pTø˚Arg
 = 
pArg
;

1844 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1845  
SQLITE_OK
;

1846 
	}
}

1848 #i‚de‡
SQLITE_OMIT_DEPRECATED


1857 *
sqlôe3_¥ofûe
(

1858 
sqlôe3
 *
db
,

1859 (*
xProfûe
)(*,c⁄° *,
sqlôe_uöt64
),

1860 *
pArg


1862 *
pOld
;

1864 #ifde‡
SQLITE_ENABLE_API_ARMOR


1865 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1866 ()
SQLITE_MISUSE_BKPT
;

1870 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1871 
pOld
 = 
db
->
pProfûeArg
;

1872 
db
->
xProfûe
 = xProfile;

1873 
db
->
pProfûeArg
 = 
pArg
;

1874 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1875  
pOld
;

1876 
	}
}

1885 *
sqlôe3_commô_hook
(

1886 
sqlôe3
 *
db
,

1887 (*
xCÆlback
)(*),

1888 *
pArg


1890 *
pOld
;

1892 #ifde‡
SQLITE_ENABLE_API_ARMOR


1893 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1894 ()
SQLITE_MISUSE_BKPT
;

1898 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1899 
pOld
 = 
db
->
pCommôArg
;

1900 
db
->
xCommôCÆlback
 = 
xCÆlback
;

1901 
db
->
pCommôArg
 = 
pArg
;

1902 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1903  
pOld
;

1904 
	}
}

1910 *
sqlôe3_upd©e_hook
(

1911 
sqlôe3
 *
db
,

1912 (*
xCÆlback
)(*,,c⁄° *,c⁄° *,
sqlôe_öt64
),

1913 *
pArg


1915 *
pRë
;

1917 #ifde‡
SQLITE_ENABLE_API_ARMOR


1918 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1919 ()
SQLITE_MISUSE_BKPT
;

1923 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1924 
pRë
 = 
db
->
pUpd©eArg
;

1925 
db
->
xUpd©eCÆlback
 = 
xCÆlback
;

1926 
db
->
pUpd©eArg
 = 
pArg
;

1927 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1928  
pRë
;

1929 
	}
}

1935 *
sqlôe3_rﬁlback_hook
(

1936 
sqlôe3
 *
db
,

1937 (*
xCÆlback
)(*),

1938 *
pArg


1940 *
pRë
;

1942 #ifde‡
SQLITE_ENABLE_API_ARMOR


1943 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

1944 ()
SQLITE_MISUSE_BKPT
;

1948 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1949 
pRë
 = 
db
->
pRﬁlbackArg
;

1950 
db
->
xRﬁlbackCÆlback
 = 
xCÆlback
;

1951 
db
->
pRﬁlbackArg
 = 
pArg
;

1952 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1953  
pRë
;

1954 
	}
}

1956 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1961 *
sqlôe3_¥eupd©e_hook
(

1962 
sqlôe3
 *
db
,

1963 (*
xCÆlback
)(

1964 *,
sqlôe3
*,,c⁄°*,c⁄°*,
sqlôe3_öt64
,sqlite3_int64),

1965 *
pArg


1967 *
pRë
;

1968 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1969 
pRë
 = 
db
->
pPªUpd©eArg
;

1970 
db
->
xPªUpd©eCÆlback
 = 
xCÆlback
;

1971 
db
->
pPªUpd©eArg
 = 
pArg
;

1972 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1973  
pRë
;

1974 
	}
}

1977 #i‚de‡
SQLITE_OMIT_WAL


1984 
	$sqlôe3WÆDeÁu…Hook
(

1985 *
pClõ¡D©a
,

1986 
sqlôe3
 *
db
,

1987 c⁄° *
zDb
,

1988 
nFøme


1990 if–
nFøme
>=
	`SQLITE_PTR_TO_INT
(
pClõ¡D©a
) ){

1991 
	`sqlôe3BegöBíignMÆloc
();

1992 
	`sqlôe3_wÆ_checkpoöt
(
db
, 
zDb
);

1993 
	`sqlôe3EndBíignMÆloc
();

1995  
SQLITE_OK
;

1996 
	}
}

2010 
	$sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
nFøme
){

2011 #ifde‡
SQLITE_OMIT_WAL


2012 
	`UNUSED_PARAMETER
(
db
);

2013 
	`UNUSED_PARAMETER
(
nFøme
);

2015 #ifde‡
SQLITE_ENABLE_API_ARMOR


2016 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

2018 if–
nFøme
>0 ){

2019 
	`sqlôe3_wÆ_hook
(
db
, 
sqlôe3WÆDeÁu…Hook
, 
	`SQLITE_INT_TO_PTR
(
nFøme
));

2021 
	`sqlôe3_wÆ_hook
(
db
, 0, 0);

2024  
SQLITE_OK
;

2025 
	}
}

2031 *
sqlôe3_wÆ_hook
(

2032 
sqlôe3
 *
db
,

2033 (*
xCÆlback
)(*, 
sqlôe3
*, const *, ),

2034 *
pArg


2036 #i‚de‡
SQLITE_OMIT_WAL


2037 *
pRë
;

2038 #ifde‡
SQLITE_ENABLE_API_ARMOR


2039 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

2040 ()
SQLITE_MISUSE_BKPT
;

2044 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2045 
pRë
 = 
db
->
pWÆArg
;

2046 
db
->
xWÆCÆlback
 = 
xCÆlback
;

2047 
db
->
pWÆArg
 = 
pArg
;

2048 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2049  
pRë
;

2053 
	}
}

2058 
	$sqlôe3_wÆ_checkpoöt_v2
(

2059 
sqlôe3
 *
db
,

2060 c⁄° *
zDb
,

2061 
eMode
,

2062 *
≤Log
,

2063 *
≤Ck±


2065 #ifde‡
SQLITE_OMIT_WAL


2066  
SQLITE_OK
;

2068 
rc
;

2069 
iDb
 = 
SQLITE_MAX_ATTACHED
;

2071 #ifde‡
SQLITE_ENABLE_API_ARMOR


2072 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

2076 if–
≤Log
 ) *pnLog = -1;

2077 if–
≤Ck±
 ) *pnCkpt = -1;

2079 
	`as£π
–
SQLITE_CHECKPOINT_PASSIVE
==0 );

2080 
	`as£π
–
SQLITE_CHECKPOINT_FULL
==1 );

2081 
	`as£π
–
SQLITE_CHECKPOINT_RESTART
==2 );

2082 
	`as£π
–
SQLITE_CHECKPOINT_TRUNCATE
==3 );

2083 if–
eMode
<
SQLITE_CHECKPOINT_PASSIVE
 ||ÉMode>
SQLITE_CHECKPOINT_TRUNCATE
 ){

2086  
SQLITE_MISUSE
;

2089 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2090 if–
zDb
 && zDb[0] ){

2091 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

2093 if–
iDb
<0 ){

2094 
rc
 = 
SQLITE_ERROR
;

2095 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, "unknow¿d©aba£: %s", 
zDb
);

2097 
db
->
busyH™dÀr
.
nBusy
 = 0;

2098 
rc
 = 
	`sqlôe3Checkpoöt
(
db
, 
iDb
, 
eMode
, 
≤Log
, 
≤Ck±
);

2099 
	`sqlôe3Eº‹
(
db
, 
rc
);

2101 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

2102 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2103  
rc
;

2105 
	}
}

2113 
	$sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
){

2116  
	`sqlôe3_wÆ_checkpoöt_v2
(
db
,
zDb
,
SQLITE_CHECKPOINT_PASSIVE
,0,0);

2117 
	}
}

2119 #i‚de‡
SQLITE_OMIT_WAL


2139 
	$sqlôe3Checkpoöt
(
sqlôe3
 *
db
, 
iDb
, 
eMode
, *
≤Log
, *
≤Ck±
){

2140 
rc
 = 
SQLITE_OK
;

2141 
i
;

2142 
bBusy
 = 0;

2144 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2145 
	`as£π
–!
≤Log
 || *pnLog==-1 );

2146 
	`as£π
–!
≤Ck±
 || *pnCkpt==-1 );

2148 
i
=0; i<
db
->
nDb
 && 
rc
==
SQLITE_OK
; i++){

2149 if–
i
==
iDb
 || iDb==
SQLITE_MAX_ATTACHED
 ){

2150 
rc
 = 
	`sqlôe3BåìCheckpoöt
(
db
->
aDb
[
i
].
pBt
, 
eMode
, 
≤Log
, 
≤Ck±
);

2151 
≤Log
 = 0;

2152 
≤Ck±
 = 0;

2153 if–
rc
==
SQLITE_BUSY
 ){

2154 
bBusy
 = 1;

2155 
rc
 = 
SQLITE_OK
;

2160  (
rc
==
SQLITE_OK
 && 
bBusy
Ë? 
SQLITE_BUSY
 :Ñc;

2161 
	}
}

2183 
	$sqlôe3TempInMem‹y
(c⁄° 
sqlôe3
 *
db
){

2184 #i‡
SQLITE_TEMP_STORE
==1

2185  ( 
db
->
ãmp_°‹e
==2 );

2187 #i‡
SQLITE_TEMP_STORE
==2

2188  ( 
db
->
ãmp_°‹e
!=1 );

2190 #i‡
SQLITE_TEMP_STORE
==3

2191 
	`UNUSED_PARAMETER
(
db
);

2194 #i‡
SQLITE_TEMP_STORE
<1 || SQLITE_TEMP_STORE>3

2195 
	`UNUSED_PARAMETER
(
db
);

2198 
	}
}

2204 c⁄° *
	$sqlôe3_îrmsg
(
sqlôe3
 *
db
){

2205 c⁄° *
z
;

2206 if–!
db
 ){

2207  
	`sqlôe3EºSå
(
SQLITE_NOMEM_BKPT
);

2209 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

2210  
	`sqlôe3EºSå
(
SQLITE_MISUSE_BKPT
);

2212 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2213 if–
db
->
mÆlocFaûed
 ){

2214 
z
 = 
	`sqlôe3EºSå
(
SQLITE_NOMEM_BKPT
);

2216 
	`ã°ˇ£
–
db
->
pEº
==0 );

2217 
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
db
->
pEº
);

2218 
	`as£π
–!
db
->
mÆlocFaûed
 );

2219 if–
z
==0 ){

2220 
z
 = 
	`sqlôe3EºSå
(
db
->
îrCode
);

2223 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2224  
z
;

2225 
	}
}

2227 #i‚de‡
SQLITE_OMIT_UTF16


2232 c⁄° *
	$sqlôe3_îrmsg16
(
sqlôe3
 *
db
){

2233 c⁄° 
u16
 
outOfMem
[] = {

2236 c⁄° 
u16
 
misu£
[] = {

2245 c⁄° *
z
;

2246 if–!
db
 ){

2247  (*)
outOfMem
;

2249 if–!
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

2250  (*)
misu£
;

2252 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2253 if–
db
->
mÆlocFaûed
 ){

2254 
z
 = (*)
outOfMem
;

2256 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
db
->
pEº
);

2257 if–
z
==0 ){

2258 
	`sqlôe3Eº‹WôhMsg
(
db
, db->
îrCode
, 
	`sqlôe3EºSå
(db->errCode));

2259 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
db
->
pEº
);

2266 
	`sqlôe3OomCÀ¨
(
db
);

2268 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2269  
z
;

2270 
	}
}

2277 
	$sqlôe3_îrcode
(
sqlôe3
 *
db
){

2278 if–
db
 && !
	`sqlôe3Sa„tyCheckSickOrOk
(db) ){

2279  
SQLITE_MISUSE_BKPT
;

2281 if–!
db
 || db->
mÆlocFaûed
 ){

2282  
SQLITE_NOMEM_BKPT
;

2284  
db
->
îrCode
 & db->
îrMask
;

2285 
	}
}

2286 
	$sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
){

2287 if–
db
 && !
	`sqlôe3Sa„tyCheckSickOrOk
(db) ){

2288  
SQLITE_MISUSE_BKPT
;

2290 if–!
db
 || db->
mÆlocFaûed
 ){

2291  
SQLITE_NOMEM_BKPT
;

2293  
db
->
îrCode
;

2294 
	}
}

2295 
	$sqlôe3_sy°em_î∫o
(
sqlôe3
 *
db
){

2296  
db
 ? db->
iSysEºno
 : 0;

2297 
	}
}

2304 c⁄° *
	$sqlôe3_îr°r
(
rc
){

2305  
	`sqlôe3EºSå
(
rc
);

2306 
	}
}

2312 
¸óãCﬁœti⁄
(

2313 
sqlôe3
* 
db
,

2314 c⁄° *
zName
,

2315 
u8
 
íc
,

2316 * 
pCtx
,

2317 (*
xCom∑ª
)(*,,const *,,const *),

2318 (*
xDñ
)(*)

2320 
CﬁlSeq
 *
pCﬁl
;

2321 
íc2
;

2323 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2329 
íc2
 = 
íc
;

2330 
	`ã°ˇ£
–
íc2
==
SQLITE_UTF16
 );

2331 
	`ã°ˇ£
–
íc2
==
SQLITE_UTF16_ALIGNED
 );

2332 if–
íc2
==
SQLITE_UTF16
 ||Énc2==
SQLITE_UTF16_ALIGNED
 ){

2333 
íc2
 = 
SQLITE_UTF16NATIVE
;

2335 if–
íc2
<
SQLITE_UTF8
 ||Énc2>
SQLITE_UTF16BE
 ){

2336  
SQLITE_MISUSE_BKPT
;

2343 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, (
u8
)
íc2
, 
zName
, 0);

2344 if–
pCﬁl
 &&ÖCﬁl->
xCmp
 ){

2345 if–
db
->
nVdbeA˘ive
 ){

2346 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_BUSY
,

2348  
SQLITE_BUSY
;

2350 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

2358 if–(
pCﬁl
->
íc
 & ~
SQLITE_UTF16_ALIGNED
)==
íc2
 ){

2359 
CﬁlSeq
 *
aCﬁl
 = 
	`sqlôe3HashFöd
(&
db
->
aCﬁlSeq
, 
zName
);

2360 
j
;

2361 
j
=0; j<3; j++){

2362 
CﬁlSeq
 *
p
 = &
aCﬁl
[
j
];

2363 if–
p
->
íc
==
pCﬁl
->enc ){

2364 if–
p
->
xDñ
 ){

2365 
p
->
	`xDñ
’->
pU£r
);

2367 
p
->
xCmp
 = 0;

2373 
pCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(
db
, (
u8
)
íc2
, 
zName
, 1);

2374 if–
pCﬁl
==0 )  
SQLITE_NOMEM_BKPT
;

2375 
pCﬁl
->
xCmp
 = 
xCom∑ª
;

2376 
pCﬁl
->
pU£r
 = 
pCtx
;

2377 
pCﬁl
->
xDñ
 = xDel;

2378 
pCﬁl
->
íc
 = (
u8
)(
íc2
 | (í¯& 
SQLITE_UTF16_ALIGNED
));

2379 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

2380  
SQLITE_OK
;

2381 
	}
}

2389 c⁄° 
	gaH¨dLimô
[] = {

2390 
SQLITE_MAX_LENGTH
,

2391 
SQLITE_MAX_SQL_LENGTH
,

2392 
SQLITE_MAX_COLUMN
,

2393 
SQLITE_MAX_EXPR_DEPTH
,

2394 
SQLITE_MAX_COMPOUND_SELECT
,

2395 
SQLITE_MAX_VDBE_OP
,

2396 
SQLITE_MAX_FUNCTION_ARG
,

2397 
SQLITE_MAX_ATTACHED
,

2398 
SQLITE_MAX_LIKE_PATTERN_LENGTH
,

2399 
SQLITE_MAX_VARIABLE_NUMBER
,

2400 
SQLITE_MAX_TRIGGER_DEPTH
,

2401 
SQLITE_MAX_WORKER_THREADS
,

2407 #i‡
SQLITE_MAX_LENGTH
<100

2408 #îr‹ 
SQLITE_MAX_LENGTH
 
mu°
 
be
 
©
 
Àa°
 100

2410 #i‡
SQLITE_MAX_SQL_LENGTH
<100

2411 #îr‹ 
SQLITE_MAX_SQL_LENGTH
 
mu°
 
be
 
©
 
Àa°
 100

2413 #i‡
SQLITE_MAX_SQL_LENGTH
>
SQLITE_MAX_LENGTH


2414 #îr‹ 
SQLITE_MAX_SQL_LENGTH
 
mu°
 
nŸ
 
be
 
gª©î
 
th™
 
SQLITE_MAX_LENGTH


2416 #i‡
SQLITE_MAX_COMPOUND_SELECT
<2

2417 #îr‹ 
SQLITE_MAX_COMPOUND_SELECT
 
mu°
 
be
 
©
 
Àa°
 2

2419 #i‡
SQLITE_MAX_VDBE_OP
<40

2420 #îr‹ 
SQLITE_MAX_VDBE_OP
 
mu°
 
be
 
©
 
Àa°
 40

2422 #i‡
SQLITE_MAX_FUNCTION_ARG
<0 || SQLITE_MAX_FUNCTION_ARG>127

2423 #îr‹ 
SQLITE_MAX_FUNCTION_ARG
 
mu°
 
be
 
bëwìn
 0 
™d
 127

2425 #i‡
SQLITE_MAX_ATTACHED
<0 || SQLITE_MAX_ATTACHED>125

2426 #îr‹ 
SQLITE_MAX_ATTACHED
 
mu°
 
be
 
bëwìn
 0 
™d
 125

2428 #i‡
SQLITE_MAX_LIKE_PATTERN_LENGTH
<1

2429 #îr‹ 
SQLITE_MAX_LIKE_PATTERN_LENGTH
 
mu°
 
be
 
©
 
Àa°
 1

2431 #i‡
SQLITE_MAX_COLUMN
>32767

2432 #îr‹ 
SQLITE_MAX_COLUMN
 
mu°
 
nŸ
 
ex˚ed
 32767

2434 #i‡
SQLITE_MAX_TRIGGER_DEPTH
<1

2435 #îr‹ 
SQLITE_MAX_TRIGGER_DEPTH
 
mu°
 
be
 
©
 
Àa°
 1

2437 #i‡
SQLITE_MAX_WORKER_THREADS
<0 || SQLITE_MAX_WORKER_THREADS>50

2438 #îr‹ 
SQLITE_MAX_WORKER_THREADS
 
mu°
 
be
 
bëwìn
 0 
™d
 50

2452 
	$sqlôe3_limô
(
sqlôe3
 *
db
, 
limôId
, 
√wLimô
){

2453 
ﬁdLimô
;

2455 #ifde‡
SQLITE_ENABLE_API_ARMOR


2456 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

2457 ()
SQLITE_MISUSE_BKPT
;

2467 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_LENGTH
]==
SQLITE_MAX_LENGTH
 );

2468 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_SQL_LENGTH
]==
SQLITE_MAX_SQL_LENGTH
 );

2469 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_COLUMN
]==
SQLITE_MAX_COLUMN
 );

2470 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_EXPR_DEPTH
]==
SQLITE_MAX_EXPR_DEPTH
 );

2471 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_COMPOUND_SELECT
]==
SQLITE_MAX_COMPOUND_SELECT
);

2472 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_VDBE_OP
]==
SQLITE_MAX_VDBE_OP
 );

2473 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_FUNCTION_ARG
]==
SQLITE_MAX_FUNCTION_ARG
 );

2474 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_ATTACHED
]==
SQLITE_MAX_ATTACHED
 );

2475 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
]==

2476 
SQLITE_MAX_LIKE_PATTERN_LENGTH
 );

2477 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_VARIABLE_NUMBER
]==
SQLITE_MAX_VARIABLE_NUMBER
);

2478 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_TRIGGER_DEPTH
]==
SQLITE_MAX_TRIGGER_DEPTH
 );

2479 
	`as£π
–
aH¨dLimô
[
SQLITE_LIMIT_WORKER_THREADS
]==
SQLITE_MAX_WORKER_THREADS
 );

2480 
	`as£π
–
SQLITE_LIMIT_WORKER_THREADS
==(
SQLITE_N_LIMIT
-1) );

2483 if–
limôId
<0 ||ÜimôId>=
SQLITE_N_LIMIT
 ){

2486 
ﬁdLimô
 = 
db
->
aLimô
[
limôId
];

2487 if–
√wLimô
>=0 ){

2488 if–
√wLimô
>
aH¨dLimô
[
limôId
] ){

2489 
√wLimô
 = 
aH¨dLimô
[
limôId
];

2491 
db
->
aLimô
[
limôId
] = 
√wLimô
;

2493  
ﬁdLimô
;

2494 
	}
}

2520 
	$sqlôe3P¨£Uri
(

2521 c⁄° *
zDeÁu…Vfs
,

2522 c⁄° *
zUri
,

2523 *
pFœgs
,

2524 
sqlôe3_vfs
 **
µVfs
,

2525 **
pzFûe
,

2526 **
pzEºMsg


2528 
rc
 = 
SQLITE_OK
;

2529 
Êags
 = *
pFœgs
;

2530 c⁄° *
zVfs
 = 
zDeÁu…Vfs
;

2531 *
zFûe
;

2532 
c
;

2533 
nUri
 = 
	`sqlôe3SåÀn30
(
zUri
);

2535 
	`as£π
–*
pzEºMsg
==0 );

2537 if–((
Êags
 & 
SQLITE_OPEN_URI
)

2538 || 
sqlôe3GlobÆC⁄fig
.
bO≥nUri
)

2539 && 
nUri
>=5 && 
	`memcmp
(
zUri
, "file:", 5)==0

2541 *
zO±
;

2542 
eSèã
;

2543 
iIn
;

2544 
iOut
 = 0;

2545 
u64
 
nByã
 = 
nUri
+2;

2549 
Êags
 |
SQLITE_OPEN_URI
;

2551 
iIn
=0; iIn<
nUri
; iIn++Ë
nByã
 +(
zUri
[iIn]=='&');

2552 
zFûe
 = 
	`sqlôe3_mÆloc64
(
nByã
);

2553 if–!
zFûe
 )  
SQLITE_NOMEM_BKPT
;

2555 
iIn
 = 5;

2556 #ifde‡
SQLITE_ALLOW_URI_AUTHORITY


2557 if–
	`°∫cmp
(
zUri
+5, "///", 3)==0 ){

2558 
iIn
 = 7;

2564 if–
	`°∫cmp
(
zUri
+7, "///", 3)==0 ){ 
iIn
++; }

2565 }if–
	`°∫cmp
(
zUri
+5, "//localhost/", 12)==0 ){

2566 
iIn
 = 16;

2570 if–
zUri
[5]=='/' && zUri[6]=='/' ){

2571 
iIn
 = 7;

2572  
zUri
[
iIn
] && zUri[iIn]!='/' ) iIn++;

2573 if–
iIn
!=7 && (iIn!=16 || 
	`memcmp
("loˇlho°", &
zUri
[7], 9)) ){

2574 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("invalid uriáuthority: %.*s",

2575 
iIn
-7, &
zUri
[7]);

2576 
rc
 = 
SQLITE_ERROR
;

2577 
∑r£_uri_out
;

2592 
eSèã
 = 0;

2593  (
c
 = 
zUri
[
iIn
])!=0 && c!='#' ){

2594 
iIn
++;

2595 if–
c
=='%'

2596 && 
	`sqlôe3Isxdigô
(
zUri
[
iIn
])

2597 && 
	`sqlôe3Isxdigô
(
zUri
[
iIn
+1])

2599 
o˘ë
 = (
	`sqlôe3HexToI¡
(
zUri
[
iIn
++]) << 4);

2600 
o˘ë
 +
	`sqlôe3HexToI¡
(
zUri
[
iIn
++]);

2602 
	`as£π
–
o˘ë
>=0 && octet<256 );

2603 if–
o˘ë
==0 ){

2608  (
c
 = 
zUri
[
iIn
])!=0 && c!='#'

2609 && (
eSèã
!=0 || 
c
!='?')

2610 && (
eSèã
!=1 || (
c
!='=' && c!='&'))

2611 && (
eSèã
!=2 || 
c
!='&')

2613 
iIn
++;

2617 
c
 = 
o˘ë
;

2618 }if–
eSèã
==1 && (
c
=='&' || c=='=') ){

2619 if–
zFûe
[
iOut
-1]==0 ){

2621  
zUri
[
iIn
] && zUri[iIn]!='#' && zUri[iIn-1]!='&' ) iIn++;

2624 if–
c
=='&' ){

2625 
zFûe
[
iOut
++] = '\0';

2627 
eSèã
 = 2;

2629 
c
 = 0;

2630 }if–(
eSèã
==0 && 
c
=='?') || (eState==2 && c=='&') ){

2631 
c
 = 0;

2632 
eSèã
 = 1;

2634 
zFûe
[
iOut
++] = 
c
;

2636 if–
eSèã
==1 ) 
zFûe
[
iOut
++] = '\0';

2637 
zFûe
[
iOut
++] = '\0';

2638 
zFûe
[
iOut
++] = '\0';

2644 
zO±
 = &
zFûe
[
	`sqlôe3SåÀn30
(zFile)+1];

2645  
zO±
[0] ){

2646 
nO±
 = 
	`sqlôe3SåÀn30
(
zO±
);

2647 *
zVÆ
 = &
zO±
[
nO±
+1];

2648 
nVÆ
 = 
	`sqlôe3SåÀn30
(
zVÆ
);

2650 if–
nO±
==3 && 
	`memcmp
("vfs", 
zO±
, 3)==0 ){

2651 
zVfs
 = 
zVÆ
;

2653 
	sO≥nMode
 {

2654 c⁄° *
z
;

2655 
mode
;

2656 } *
aMode
 = 0;

2657 *
zModeTy≥
 = 0;

2658 
mask
 = 0;

2659 
limô
 = 0;

2661 if–
nO±
==5 && 
	`memcmp
("ˇche", 
zO±
, 5)==0 ){

2662 
O≥nMode
 
aCacheMode
[] = {

2663 { "sh¨ed", 
SQLITE_OPEN_SHAREDCACHE
 },

2664 { "¥iv©e", 
SQLITE_OPEN_PRIVATECACHE
 },

2668 
mask
 = 
SQLITE_OPEN_SHAREDCACHE
|
SQLITE_OPEN_PRIVATECACHE
;

2669 
aMode
 = 
aCacheMode
;

2670 
limô
 = 
mask
;

2671 
zModeTy≥
 = "cache";

2673 if–
nO±
==4 && 
	`memcmp
("mode", 
zO±
, 4)==0 ){

2674 
O≥nMode
 
aO≥nMode
[] = {

2675 { "ro", 
SQLITE_OPEN_READONLY
 },

2676 { "rw", 
SQLITE_OPEN_READWRITE
 },

2677 { "rwc", 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 },

2678 { "mem‹y", 
SQLITE_OPEN_MEMORY
 },

2682 
mask
 = 
SQLITE_OPEN_READONLY
 | 
SQLITE_OPEN_READWRITE


2683 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MEMORY
;

2684 
aMode
 = 
aO≥nMode
;

2685 
limô
 = 
mask
 & 
Êags
;

2686 
zModeTy≥
 = "access";

2689 if–
aMode
 ){

2690 
i
;

2691 
mode
 = 0;

2692 
i
=0; 
aMode
[i].
z
; i++){

2693 c⁄° *
z
 = 
aMode
[
i
].z;

2694 if–
nVÆ
==
	`sqlôe3SåÀn30
(
z
Ë&& 0==
	`memcmp
(
zVÆ
, z,ÇVal) ){

2695 
mode
 = 
aMode
[
i
].mode;

2699 if–
mode
==0 ){

2700 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch %†mode: %s", 
zModeTy≥
, 
zVÆ
);

2701 
rc
 = 
SQLITE_ERROR
;

2702 
∑r£_uri_out
;

2704 if–(
mode
 & ~
SQLITE_OPEN_MEMORY
)>
limô
 ){

2705 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("%s modeÇotállowed: %s",

2706 
zModeTy≥
, 
zVÆ
);

2707 
rc
 = 
SQLITE_PERM
;

2708 
∑r£_uri_out
;

2710 
Êags
 = (Êag†& ~
mask
Ë| 
mode
;

2714 
zO±
 = &
zVÆ
[
nVÆ
+1];

2718 
zFûe
 = 
	`sqlôe3_mÆloc64
(
nUri
+2);

2719 if–!
zFûe
 )  
SQLITE_NOMEM_BKPT
;

2720 
	`mem˝y
(
zFûe
, 
zUri
, 
nUri
);

2721 
zFûe
[
nUri
] = '\0';

2722 
zFûe
[
nUri
+1] = '\0';

2723 
Êags
 &~
SQLITE_OPEN_URI
;

2726 *
µVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

2727 if–*
µVfs
==0 ){

2728 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("nÿsuch vfs: %s", 
zVfs
);

2729 
rc
 = 
SQLITE_ERROR
;

2731 
∑r£_uri_out
:

2732 if–
rc
!=
SQLITE_OK
 ){

2733 
	`sqlôe3_‰ì
(
zFûe
);

2734 
zFûe
 = 0;

2736 *
pFœgs
 = 
Êags
;

2737 *
pzFûe
 = 
zFûe
;

2738  
rc
;

2739 
	}
}

2747 
	$›íD©aba£
(

2748 c⁄° *
zFûíame
,

2749 
sqlôe3
 **
µDb
,

2750 
Êags
,

2751 c⁄° *
zVfs


2753 
sqlôe3
 *
db
;

2754 
rc
;

2755 
isThªadß„
;

2756 *
zO≥n
 = 0;

2757 *
zEºMsg
 = 0;

2759 #ifde‡
SQLITE_ENABLE_API_ARMOR


2760 if–
µDb
==0 )  
SQLITE_MISUSE_BKPT
;

2762 *
µDb
 = 0;

2763 #i‚de‡
SQLITE_OMIT_AUTOINIT


2764 
rc
 = 
	`sqlôe3_öôülize
();

2765 if–
rc
 ) Ñc;

2778 
	`as£π
–
SQLITE_OPEN_READONLY
 == 0x01 );

2779 
	`as£π
–
SQLITE_OPEN_READWRITE
 == 0x02 );

2780 
	`as£π
–
SQLITE_OPEN_CREATE
 == 0x04 );

2781 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x02 );

2782 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x04 );

2783 
	`ã°ˇ£
–(1<<(
Êags
&7))==0x40 );

2784 if–((1<<(
Êags
&7)) & 0x46)==0 ){

2785  
SQLITE_MISUSE_BKPT
;

2788 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
==0 ){

2789 
isThªadß„
 = 0;

2790 }if–
Êags
 & 
SQLITE_OPEN_NOMUTEX
 ){

2791 
isThªadß„
 = 0;

2792 }if–
Êags
 & 
SQLITE_OPEN_FULLMUTEX
 ){

2793 
isThªadß„
 = 1;

2795 
isThªadß„
 = 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
;

2797 if–
Êags
 & 
SQLITE_OPEN_PRIVATECACHE
 ){

2798 
Êags
 &~
SQLITE_OPEN_SHAREDCACHE
;

2799 }if–
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
 ){

2800 
Êags
 |
SQLITE_OPEN_SHAREDCACHE
;

2812 
Êags
 &~–
SQLITE_OPEN_DELETEONCLOSE
 |

2813 
SQLITE_OPEN_EXCLUSIVE
 |

2814 
SQLITE_OPEN_MAIN_DB
 |

2815 
SQLITE_OPEN_TEMP_DB
 |

2816 
SQLITE_OPEN_TRANSIENT_DB
 |

2817 
SQLITE_OPEN_MAIN_JOURNAL
 |

2818 
SQLITE_OPEN_TEMP_JOURNAL
 |

2819 
SQLITE_OPEN_SUBJOURNAL
 |

2820 
SQLITE_OPEN_MASTER_JOURNAL
 |

2821 
SQLITE_OPEN_NOMUTEX
 |

2822 
SQLITE_OPEN_FULLMUTEX
 |

2823 
SQLITE_OPEN_WAL


2827 
db
 = 
	`sqlôe3MÆlocZîo
–(
sqlôe3
) );

2828 if–
db
==0 ) 
›ídb_out
;

2829 if–
isThªadß„
 ){

2830 
db
->
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

2831 if–
db
->
muãx
==0 ){

2832 
	`sqlôe3_‰ì
(
db
);

2833 
db
 = 0;

2834 
›ídb_out
;

2837 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2838 
db
->
îrMask
 = 0xff;

2839 
db
->
nDb
 = 2;

2840 
db
->
magic
 = 
SQLITE_MAGIC_BUSY
;

2841 
db
->
aDb
 = db->
aDbSètic
;

2843 
	`as£π
–(
db
->
aLimô
)==(
aH¨dLimô
) );

2844 
	`mem˝y
(
db
->
aLimô
, 
aH¨dLimô
, (db->aLimit));

2845 
db
->
aLimô
[
SQLITE_LIMIT_WORKER_THREADS
] = 
SQLITE_DEFAULT_WORKER_THREADS
;

2846 
db
->
autoCommô
 = 1;

2847 
db
->
√xtAutovac
 = -1;

2848 
db
->
szMm≠
 = 
sqlôe3GlobÆC⁄fig
.szMmap;

2849 
db
->
√xtPagesize
 = 0;

2850 
db
->
nMaxS‹ãrMm≠
 = 0x7FFFFFFF;

2851 
db
->
Êags
 |
SQLITE_Sh‹tCﬁNames
 | 
SQLITE_E«bÀTriggî
 | 
SQLITE_CacheSpûl


2852 #i‡!
	`deföed
(
SQLITE_DEFAULT_AUTOMATIC_INDEX
) || SQLITE_DEFAULT_AUTOMATIC_INDEX

2853 | 
SQLITE_AutoIndex


2855 #i‡
SQLITE_DEFAULT_CKPTFULLFSYNC


2856 | 
SQLITE_Ck±FuŒFSync


2858 #i‡
SQLITE_DEFAULT_FILE_FORMAT
<4

2859 | 
SQLITE_LegacyFûeFmt


2861 #ifde‡
SQLITE_ENABLE_LOAD_EXTENSION


2862 | 
SQLITE_LﬂdExãnsi⁄


2864 #i‡
SQLITE_DEFAULT_RECURSIVE_TRIGGERS


2865 | 
SQLITE_RecTriggîs


2867 #i‡
	`deföed
(
SQLITE_DEFAULT_FOREIGN_KEYS
) && SQLITE_DEFAULT_FOREIGN_KEYS

2868 | 
SQLITE_F‹eignKeys


2870 #i‡
	`deföed
(
SQLITE_REVERSE_UNORDERED_SELECTS
)

2871 | 
SQLITE_Revî£Ordî


2873 #i‡
	`deföed
(
SQLITE_ENABLE_OVERSIZE_CELL_CHECK
)

2874 | 
SQLITE_CñlSizeCk


2876 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3_TOKENIZER
)

2877 | 
SQLITE_Fts3Tokíizî


2880 
	`sqlôe3HashInô
(&
db
->
aCﬁlSeq
);

2881 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2882 
	`sqlôe3HashInô
(&
db
->
aModuÀ
);

2892 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF8
, 0, 
böCﬁlFunc
, 0);

2893 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF16BE
, 0, 
böCﬁlFunc
, 0);

2894 
	`¸óãCﬁœti⁄
(
db
, 
sqlôe3SåBINARY
, 
SQLITE_UTF16LE
, 0, 
böCﬁlFunc
, 0);

2895 
	`¸óãCﬁœti⁄
(
db
, "NOCASE", 
SQLITE_UTF8
, 0, 
noˇ£CﬁœtögFunc
, 0);

2896 
	`¸óãCﬁœti⁄
(
db
, "RTRIM", 
SQLITE_UTF8
, (*)1, 
böCﬁlFunc
, 0);

2897 if–
db
->
mÆlocFaûed
 ){

2898 
›ídb_out
;

2903 
db
->
pDÊtCﬁl
 = 
	`sqlôe3FödCﬁlSeq
(db, 
SQLITE_UTF8
, 
sqlôe3SåBINARY
, 0);

2904 
	`as£π
–
db
->
pDÊtCﬁl
!=0 );

2907 
db
->
›íFœgs
 = 
Êags
;

2908 
rc
 = 
	`sqlôe3P¨£Uri
(
zVfs
, 
zFûíame
, &
Êags
, &
db
->
pVfs
, &
zO≥n
, &
zEºMsg
);

2909 if–
rc
!=
SQLITE_OK
 ){

2910 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

2911 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, 
zEºMsg
 ? "%s" : 0, zErrMsg);

2912 
	`sqlôe3_‰ì
(
zEºMsg
);

2913 
›ídb_out
;

2917 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 
zO≥n
, db, &db->
aDb
[0].
pBt
, 0,

2918 
Êags
 | 
SQLITE_OPEN_MAIN_DB
);

2919 if–
rc
!=
SQLITE_OK
 ){

2920 if–
rc
==
SQLITE_IOERR_NOMEM
 ){

2921 
rc
 = 
SQLITE_NOMEM_BKPT
;

2923 
	`sqlôe3Eº‹
(
db
, 
rc
);

2924 
›ídb_out
;

2926 
	`sqlôe3BåìE¡î
(
db
->
aDb
[0].
pBt
);

2927 
db
->
aDb
[0].
pSchema
 = 
	`sqlôe3SchemaGë
(db, db->aDb[0].
pBt
);

2928 if–!
db
->
mÆlocFaûed
 ) 
	`ENC
(dbË
	`SCHEMA_ENC
(db);

2929 
	`sqlôe3BåìLóve
(
db
->
aDb
[0].
pBt
);

2930 
db
->
aDb
[1].
pSchema
 = 
	`sqlôe3SchemaGë
(db, 0);

2935 
db
->
aDb
[0].
zName
 = "main";

2936 
db
->
aDb
[0].
ß„ty_Àvñ
 = 
SQLITE_DEFAULT_SYNCHRONOUS
+1;

2937 
db
->
aDb
[1].
zName
 = "temp";

2938 
db
->
aDb
[1].
ß„ty_Àvñ
 = 
PAGER_SYNCHRONOUS_OFF
;

2940 
db
->
magic
 = 
SQLITE_MAGIC_OPEN
;

2941 if–
db
->
mÆlocFaûed
 ){

2942 
›ídb_out
;

2949 
	`sqlôe3Eº‹
(
db
, 
SQLITE_OK
);

2950 
	`sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
db
);

2955 
rc
 = 
	`sqlôe3_îrcode
(
db
);

2956 if–
rc
==
SQLITE_OK
 ){

2957 
	`sqlôe3AutoLﬂdExãnsi⁄s
(
db
);

2958 
rc
 = 
	`sqlôe3_îrcode
(
db
);

2959 if–
rc
!=
SQLITE_OK
 ){

2960 
›ídb_out
;

2964 #ifde‡
SQLITE_ENABLE_FTS1


2965 if–!
db
->
mÆlocFaûed
 ){

2966 
	`sqlôe3Fts1Inô
(
sqlôe3
*);

2967 
rc
 = 
	`sqlôe3Fts1Inô
(
db
);

2971 #ifde‡
SQLITE_ENABLE_FTS2


2972 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

2973 
	`sqlôe3Fts2Inô
(
sqlôe3
*);

2974 
rc
 = 
	`sqlôe3Fts2Inô
(
db
);

2978 #ifde‡
SQLITE_ENABLE_FTS3


2979 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

2980 
rc
 = 
	`sqlôe3Fts3Inô
(
db
);

2984 #ifde‡
SQLITE_ENABLE_FTS5


2985 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

2986 
rc
 = 
	`sqlôe3Fts5Inô
(
db
);

2990 #ifde‡
SQLITE_ENABLE_ICU


2991 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
 ){

2992 
rc
 = 
	`sqlôe3IcuInô
(
db
);

2996 #ifde‡
SQLITE_ENABLE_RTREE


2997 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

2998 
rc
 = 
	`sqlôe3RåìInô
(
db
);

3002 #ifde‡
SQLITE_ENABLE_DBSTAT_VTAB


3003 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

3004 
rc
 = 
	`sqlôe3Db°©Regi°î
(
db
);

3008 #ifde‡
SQLITE_ENABLE_JSON1


3009 if–!
db
->
mÆlocFaûed
 && 
rc
==
SQLITE_OK
){

3010 
rc
 = 
	`sqlôe3Js⁄1Inô
(
db
);

3018 #ifde‡
SQLITE_DEFAULT_LOCKING_MODE


3019 
db
->
dÊtLockMode
 = 
SQLITE_DEFAULT_LOCKING_MODE
;

3020 
	`sqlôe3PagîLockögMode
(
	`sqlôe3BåìPagî
(
db
->
aDb
[0].
pBt
),

3021 
SQLITE_DEFAULT_LOCKING_MODE
);

3024 if–
rc
 ) 
	`sqlôe3Eº‹
(
db
,Ñc);

3027 
	`£tupLookaside
(
db
, 0, 
sqlôe3GlobÆC⁄fig
.
szLookaside
,

3028 
sqlôe3GlobÆC⁄fig
.
nLookaside
);

3030 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT
);

3032 
›ídb_out
:

3033 if–
db
 ){

3034 
	`as£π
–
db
->
muãx
!=0 || 
isThªadß„
==0

3035 || 
sqlôe3GlobÆC⁄fig
.
bFuŒMuãx
==0 );

3036 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3038 
rc
 = 
	`sqlôe3_îrcode
(
db
);

3039 
	`as£π
–
db
!=0 || 
rc
==
SQLITE_NOMEM
 );

3040 if–
rc
==
SQLITE_NOMEM
 ){

3041 
	`sqlôe3_˛o£
(
db
);

3042 
db
 = 0;

3043 }if–
rc
!=
SQLITE_OK
 ){

3044 
db
->
magic
 = 
SQLITE_MAGIC_SICK
;

3046 *
µDb
 = 
db
;

3047 #ifde‡
SQLITE_ENABLE_SQLLOG


3048 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 ){

3050 *
pArg
 = 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
;

3051 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(
pArg
, 
db
, 
zFûíame
, 0);

3054 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

3055 if–
rc
==
SQLITE_OK
 ){

3056 c⁄° *
zHexKey
 = 
	`sqlôe3_uri_∑ømëî
(
zO≥n
, "hexkey");

3057 if–
zHexKey
 && zHexKey[0] ){

3058 
u8
 
iByã
;

3059 
i
;

3060 
zKey
[40];

3061 
i
=0, 
iByã
=0; i<(
zKey
)*2 && 
	`sqlôe3Isxdigô
(
zHexKey
[i]); i++){

3062 
iByã
 = (iByã<<4Ë+ 
	`sqlôe3HexToI¡
(
zHexKey
[
i
]);

3063 if–(
i
&1)!=0 ) 
zKey
[i/2] = 
iByã
;

3065 
	`sqlôe3_key_v2
(
db
, 0, 
zKey
, 
i
/2);

3069 
	`sqlôe3_‰ì
(
zO≥n
);

3070  
rc
 & 0xff;

3071 
	}
}

3076 
	$sqlôe3_›í
(

3077 c⁄° *
zFûíame
,

3078 
sqlôe3
 **
µDb


3080  
	`›íD©aba£
(
zFûíame
, 
µDb
,

3081 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
, 0);

3082 
	}
}

3083 
	$sqlôe3_›í_v2
(

3084 c⁄° *
fûíame
,

3085 
sqlôe3
 **
µDb
,

3086 
Êags
,

3087 c⁄° *
zVfs


3089  
	`›íD©aba£
(
fûíame
, 
µDb
, ()
Êags
, 
zVfs
);

3090 
	}
}

3092 #i‚de‡
SQLITE_OMIT_UTF16


3096 
	$sqlôe3_›í16
(

3097 c⁄° *
zFûíame
,

3098 
sqlôe3
 **
µDb


3100 c⁄° *
zFûíame8
;

3101 
sqlôe3_vÆue
 *
pVÆ
;

3102 
rc
;

3104 #ifde‡
SQLITE_ENABLE_API_ARMOR


3105 if–
µDb
==0 )  
SQLITE_MISUSE_BKPT
;

3107 *
µDb
 = 0;

3108 #i‚de‡
SQLITE_OMIT_AUTOINIT


3109 
rc
 = 
	`sqlôe3_öôülize
();

3110 if–
rc
 ) Ñc;

3112 if–
zFûíame
==0 ) zFilename = "\000\000";

3113 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3114 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zFûíame
, 
SQLITE_UTF16NATIVE
, 
SQLITE_STATIC
);

3115 
zFûíame8
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

3116 if–
zFûíame8
 ){

3117 
rc
 = 
	`›íD©aba£
(
zFûíame8
, 
µDb
,

3118 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
, 0);

3119 
	`as£π
–*
µDb
 || 
rc
==
SQLITE_NOMEM
 );

3120 if–
rc
==
SQLITE_OK
 && !
	`DbHasPr›îty
(*
µDb
, 0, 
DB_SchemaLﬂded
) ){

3121 
	`SCHEMA_ENC
(*
µDb
Ë
	`ENC
(*µDbË
SQLITE_UTF16NATIVE
;

3124 
rc
 = 
SQLITE_NOMEM_BKPT
;

3126 
	`sqlôe3VÆueFªe
(
pVÆ
);

3128  
rc
 & 0xff;

3129 
	}
}

3135 
sqlôe3_¸óã_cﬁœti⁄
(

3136 
sqlôe3
* 
db
,

3137 c⁄° *
zName
,

3138 
íc
,

3139 * 
pCtx
,

3140 (*
xCom∑ª
)(*,,const *,,const *)

3142  
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
zName
, 
íc
, 
pCtx
, 
xCom∑ª
, 0);

3143 
	}
}

3148 
sqlôe3_¸óã_cﬁœti⁄_v2
(

3149 
sqlôe3
* 
db
,

3150 c⁄° *
zName
,

3151 
íc
,

3152 * 
pCtx
,

3153 (*
xCom∑ª
)(*,,const *,,const *),

3154 (*
xDñ
)(*)

3156 
rc
;

3158 #ifde‡
SQLITE_ENABLE_API_ARMOR


3159 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

3161 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3162 
	`as£π
–!
db
->
mÆlocFaûed
 );

3163 
rc
 = 
	`¸óãCﬁœti⁄
(
db
, 
zName
, (
u8
)
íc
, 
pCtx
, 
xCom∑ª
, 
xDñ
);

3164 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3165 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3166  
rc
;

3167 
	}
}

3169 #i‚de‡
SQLITE_OMIT_UTF16


3173 
sqlôe3_¸óã_cﬁœti⁄16
(

3174 
sqlôe3
* 
db
,

3175 c⁄° *
zName
,

3176 
íc
,

3177 * 
pCtx
,

3178 (*
xCom∑ª
)(*,,const *,,const *)

3180 
rc
 = 
SQLITE_OK
;

3181 *
zName8
;

3183 #ifde‡
SQLITE_ENABLE_API_ARMOR


3184 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

3186 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3187 
	`as£π
–!
db
->
mÆlocFaûed
 );

3188 
zName8
 = 
	`sqlôe3Utf16to8
(
db
, 
zName
, -1, 
SQLITE_UTF16NATIVE
);

3189 if–
zName8
 ){

3190 
rc
 = 
	`¸óãCﬁœti⁄
(
db
, 
zName8
, (
u8
)
íc
, 
pCtx
, 
xCom∑ª
, 0);

3191 
	`sqlôe3DbFªe
(
db
, 
zName8
);

3193 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3194 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3195  
rc
;

3196 
	}
}

3203 
sqlôe3_cﬁœti⁄_√eded
(

3204 
sqlôe3
 *
db
,

3205 *
pCﬁlNìdedArg
,

3206 (*
xCﬁlNìded
)(*,
sqlôe3
*,
eTextRï
,const *)

3208 #ifde‡
SQLITE_ENABLE_API_ARMOR


3209 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3211 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3212 
db
->
xCﬁlNìded
 = xCollNeeded;

3213 
db
->
xCﬁlNìded16
 = 0;

3214 
db
->
pCﬁlNìdedArg
 =ÖCollNeededArg;

3215 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3216  
SQLITE_OK
;

3217 
	}
}

3219 #i‚de‡
SQLITE_OMIT_UTF16


3224 
sqlôe3_cﬁœti⁄_√eded16
(

3225 
sqlôe3
 *
db
,

3226 *
pCﬁlNìdedArg
,

3227 (*
xCﬁlNìded16
)(*,
sqlôe3
*,
eTextRï
,const *)

3229 #ifde‡
SQLITE_ENABLE_API_ARMOR


3230 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3232 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3233 
db
->
xCﬁlNìded
 = 0;

3234 
db
->
xCﬁlNìded16
 = xCollNeeded16;

3235 
db
->
pCﬁlNìdedArg
 =ÖCollNeededArg;

3236 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3237  
SQLITE_OK
;

3238 
	}
}

3241 #i‚de‡
SQLITE_OMIT_DEPRECATED


3246 
	$sqlôe3_globÆ_ªcovî
(){

3247  
SQLITE_OK
;

3248 
	}
}

3257 
	$sqlôe3_gë_autocommô
(
sqlôe3
 *
db
){

3258 #ifde‡
SQLITE_ENABLE_API_ARMOR


3259 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3260 ()
SQLITE_MISUSE_BKPT
;

3264  
db
->
autoCommô
;

3265 
	}
}

3278 
	$ªp‹tEº‹
(
iEº
, 
löío
, c⁄° *
zTy≥
){

3279 
	`sqlôe3_log
(
iEº
, "%sátÜine %d of [%.10s]",

3280 
zTy≥
, 
löío
, 20+
	`sqlôe3_sour˚id
());

3281  
iEº
;

3282 
	}
}

3283 
	$sqlôe3C‹ru±Eº‹
(
löío
){

3284 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3285  
	`ªp‹tEº‹
(
SQLITE_CORRUPT
, 
löío
, "database corruption");

3286 
	}
}

3287 
	$sqlôe3Misu£Eº‹
(
löío
){

3288 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3289  
	`ªp‹tEº‹
(
SQLITE_MISUSE
, 
löío
, "misuse");

3290 
	}
}

3291 
	$sqlôe3C™t›íEº‹
(
löío
){

3292 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3293  
	`ªp‹tEº‹
(
SQLITE_CANTOPEN
, 
löío
, "cannot open file");

3294 
	}
}

3295 #ifde‡
SQLITE_DEBUG


3296 
	$sqlôe3NomemEº‹
(
löío
){

3297 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3298  
	`ªp‹tEº‹
(
SQLITE_NOMEM
, 
löío
, "OOM");

3299 
	}
}

3300 
	$sqlôe3I€ºnomemEº‹
(
löío
){

3301 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

3302  
	`ªp‹tEº‹
(
SQLITE_IOERR_NOMEM
, 
löío
, "I/O OOMÉrror");

3303 
	}
}

3306 #i‚de‡
SQLITE_OMIT_DEPRECATED


3314 
	$sqlôe3_thªad_˛ónup
(){

3315 
	}
}

3322 
	$sqlôe3_èbÀ_cﬁumn_mëad©a
(

3323 
sqlôe3
 *
db
,

3324 c⁄° *
zDbName
,

3325 c⁄° *
zTabÀName
,

3326 c⁄° *
zCﬁumnName
,

3327 c⁄° **
pzD©aTy≥
,

3328 c⁄° **
pzCﬁlSeq
,

3329 *
pNŸNuŒ
,

3330 *
pPrim¨yKey
,

3331 *
pAutoöc


3333 
rc
;

3334 *
zEºMsg
 = 0;

3335 
TabÀ
 *
pTab
 = 0;

3336 
Cﬁumn
 *
pCﬁ
 = 0;

3337 
iCﬁ
 = 0;

3338 c⁄° *
zD©aTy≥
 = 0;

3339 c⁄° *
zCﬁlSeq
 = 0;

3340 
nŸnuŒ
 = 0;

3341 
¥im¨ykey
 = 0;

3342 
autoöc
 = 0;

3345 #ifde‡
SQLITE_ENABLE_API_ARMOR


3346 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zTabÀName
==0 ){

3347  
SQLITE_MISUSE_BKPT
;

3352 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3353 
	`sqlôe3BåìE¡îAŒ
(
db
);

3354 
rc
 = 
	`sqlôe3Inô
(
db
, &
zEºMsg
);

3355 if–
SQLITE_OK
!=
rc
 ){

3356 
îr‹_out
;

3360 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTabÀName
, 
zDbName
);

3361 if–!
pTab
 ||ÖTab->
pSñe˘
 ){

3362 
pTab
 = 0;

3363 
îr‹_out
;

3367 if–
zCﬁumnName
==0 ){

3370 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

3371 
pCﬁ
 = &
pTab
->
aCﬁ
[
iCﬁ
];

3372 if–0==
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁumnName
) ){

3376 if–
iCﬁ
==
pTab
->
nCﬁ
 ){

3377 if–
	`HasRowid
(
pTab
Ë&& 
	`sqlôe3IsRowid
(
zCﬁumnName
) ){

3378 
iCﬁ
 = 
pTab
->
iPKey
;

3379 
pCﬁ
 = 
iCﬁ
>=0 ? &
pTab
->
aCﬁ
[iCol] : 0;

3381 
pTab
 = 0;

3382 
îr‹_out
;

3397 if–
pCﬁ
 ){

3398 
zD©aTy≥
 = 
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,0);

3399 
zCﬁlSeq
 = 
pCﬁ
->
zCﬁl
;

3400 
nŸnuŒ
 = 
pCﬁ
->
nŸNuŒ
!=0;

3401 
¥im¨ykey
 = (
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0;

3402 
autoöc
 = 
pTab
->
iPKey
==
iCﬁ
 && (pTab->
èbFœgs
 & 
TF_Autoö¸emít
)!=0;

3404 
zD©aTy≥
 = "INTEGER";

3405 
¥im¨ykey
 = 1;

3407 if–!
zCﬁlSeq
 ){

3408 
zCﬁlSeq
 = 
sqlôe3SåBINARY
;

3411 
îr‹_out
:

3412 
	`sqlôe3BåìLóveAŒ
(
db
);

3418 if–
pzD©aTy≥
 ) *pzD©aTy≥ = 
zD©aTy≥
;

3419 if–
pzCﬁlSeq
 ) *pzCﬁlSeq = 
zCﬁlSeq
;

3420 if–
pNŸNuŒ
 ) *pNŸNuŒ = 
nŸnuŒ
;

3421 if–
pPrim¨yKey
 ) *pPrim¨yKey = 
¥im¨ykey
;

3422 if–
pAutoöc
 ) *pAutoö¯
autoöc
;

3424 if–
SQLITE_OK
==
rc
 && !
pTab
 ){

3425 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

3426 
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuchÅabÀ cﬁumn: %s.%s", 
zTabÀName
,

3427 
zCﬁumnName
);

3428 
rc
 = 
SQLITE_ERROR
;

3430 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEºMsg
?"%s":0), zErrMsg);

3431 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

3432 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

3433 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3434  
rc
;

3435 
	}
}

3440 
	$sqlôe3_¶ìp
(
ms
){

3441 
sqlôe3_vfs
 *
pVfs
;

3442 
rc
;

3443 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

3444 if–
pVfs
==0 )  0;

3449 
rc
 = (
	`sqlôe3OsSÀï
(
pVfs
, 1000*
ms
)/1000);

3450  
rc
;

3451 
	}
}

3456 
	$sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
 *
db
, 
⁄off
){

3457 #ifde‡
SQLITE_ENABLE_API_ARMOR


3458 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3460 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3461 
db
->
îrMask
 = 
⁄off
 ? 0xffffffff : 0xff;

3462 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3463  
SQLITE_OK
;

3464 
	}
}

3469 
	$sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
 *
db
, c⁄° *
zDbName
, 
›
, *
pArg
){

3470 
rc
 = 
SQLITE_ERROR
;

3471 
Båì
 *
pBåì
;

3473 #ifde‡
SQLITE_ENABLE_API_ARMOR


3474 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

3476 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3477 
pBåì
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3478 if–
pBåì
 ){

3479 
Pagî
 *
pPagî
;

3480 
sqlôe3_fûe
 *
fd
;

3481 
	`sqlôe3BåìE¡î
(
pBåì
);

3482 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBåì
);

3483 
	`as£π
–
pPagî
!=0 );

3484 
fd
 = 
	`sqlôe3PagîFûe
(
pPagî
);

3485 
	`as£π
–
fd
!=0 );

3486 if–
›
==
SQLITE_FCNTL_FILE_POINTER
 ){

3487 *(
sqlôe3_fûe
**)
pArg
 = 
fd
;

3488 
rc
 = 
SQLITE_OK
;

3489 }if–
›
==
SQLITE_FCNTL_VFS_POINTER
 ){

3490 *(
sqlôe3_vfs
**)
pArg
 = 
	`sqlôe3PagîVfs
(
pPagî
);

3491 
rc
 = 
SQLITE_OK
;

3492 }if–
›
==
SQLITE_FCNTL_JOURNAL_POINTER
 ){

3493 *(
sqlôe3_fûe
**)
pArg
 = 
	`sqlôe3PagîJ∫lFûe
(
pPagî
);

3494 
rc
 = 
SQLITE_OK
;

3495 }if–
fd
->
pMëhods
 ){

3496 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
fd
, 
›
, 
pArg
);

3498 
rc
 = 
SQLITE_NOTFOUND
;

3500 
	`sqlôe3BåìLóve
(
pBåì
);

3502 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3503  
rc
;

3504 
	}
}

3509 
	$sqlôe3_ã°_c⁄åﬁ
(
›
, ...){

3510 
rc
 = 0;

3511 #ifde‡
SQLITE_OMIT_BUILTIN_TEST


3512 
	`UNUSED_PARAMETER
(
›
);

3514 
va_li°
 
≠
;

3515 
	`va_°¨t
(
≠
, 
›
);

3516  
›
 ){

3521 
SQLITE_TESTCTRL_PRNG_SAVE
: {

3522 
	`sqlôe3P∫gSaveSèã
();

3531 
SQLITE_TESTCTRL_PRNG_RESTORE
: {

3532 
	`sqlôe3P∫gRe°‹eSèã
();

3541 
SQLITE_TESTCTRL_PRNG_RESET
: {

3542 
	`sqlôe3_øndom√ss
(0,0);

3554 
SQLITE_TESTCTRL_BITVEC_TEST
: {

3555 
sz
 = 
	`va_¨g
(
≠
, );

3556 *
aProg
 = 
	`va_¨g
(
≠
, *);

3557 
rc
 = 
	`sqlôe3BôvecBuûtöTe°
(
sz
, 
aProg
);

3572 
SQLITE_TESTCTRL_FAULT_INSTALL
: {

3577 (*
	tTESTCALLBACKFUNC_t
)();

3578 
sqlôe3GlobÆC⁄fig
.
xTe°CÆlback
 = 
	`va_¨g
(
≠
, 
TESTCALLBACKFUNC_t
);

3579 
rc
 = 
	`sqlôe3Fau…Sim
(0);

3589 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
: {

3590 (*
	tvoid_fun˘i⁄
)();

3591 
void_fun˘i⁄
 
xBíignBegö
;

3592 
void_fun˘i⁄
 
xBíignEnd
;

3593 
xBíignBegö
 = 
	`va_¨g
(
≠
, 
void_fun˘i⁄
);

3594 
xBíignEnd
 = 
	`va_¨g
(
≠
, 
void_fun˘i⁄
);

3595 
	`sqlôe3BíignMÆlocHooks
(
xBíignBegö
, 
xBíignEnd
);

3611 
SQLITE_TESTCTRL_PENDING_BYTE
: {

3612 
rc
 = 
PENDING_BYTE
;

3613 #i‚de‡
SQLITE_OMIT_WSD


3615 
√wVÆ
 = 
	`va_¨g
(
≠
, );

3616 if–
√wVÆ
 ) 
sqlôe3PídögByã
 =ÇewVal;

3633 
SQLITE_TESTCTRL_ASSERT
: {

3634 vﬁ©ûê
x
 = 0;

3635 
	`as£π
– (
x
 = 
	`va_¨g
(
≠
,))!=0 );

3636 
rc
 = 
x
;

3668 
SQLITE_TESTCTRL_ALWAYS
: {

3669 
x
 = 
	`va_¨g
(
≠
,);

3670 
rc
 = 
	`ALWAYS
(
x
);

3685 
SQLITE_TESTCTRL_BYTEORDER
: {

3686 
rc
 = 
SQLITE_BYTEORDER
*100 + 
SQLITE_LITTLEENDIAN
*10 + 
SQLITE_BIGENDIAN
;

3695 
SQLITE_TESTCTRL_RESERVE
: {

3696 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3697 
x
 = 
	`va_¨g
(
≠
,);

3698 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3699 
	`sqlôe3BåìSëPageSize
(
db
->
aDb
[0].
pBt
, 0, 
x
, 0);

3700 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3713 
SQLITE_TESTCTRL_OPTIMIZATIONS
: {

3714 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3715 
db
->
dbO±Fœgs
 = (
u16
)(
	`va_¨g
(
≠
, ) & 0xffff);

3719 #ifde‡
SQLITE_N_KEYWORD


3729 
SQLITE_TESTCTRL_ISKEYWORD
: {

3730 c⁄° *
zW‹d
 = 
	`va_¨g
(
≠
, const *);

3731 
n
 = 
	`sqlôe3SåÀn30
(
zW‹d
);

3732 
rc
 = (
	`sqlôe3Keyw‹dCode
((
u8
*)
zW‹d
, 
n
)!=
TK_ID
Ë? 
SQLITE_N_KEYWORD
 : 0;

3742 
SQLITE_TESTCTRL_SCRATCHMALLOC
: {

3743 *
pFªe
, **
µNew
;

3744 
sz
;

3745 
sz
 = 
	`va_¨g
(
≠
, );

3746 
µNew
 = 
	`va_¨g
(
≠
, **);

3747 
pFªe
 = 
	`va_¨g
(
≠
, *);

3748 if–
sz
 ) *
µNew
 = 
	`sqlôe3S¸©chMÆloc
(sz);

3749 
	`sqlôe3S¸©chFªe
(
pFªe
);

3759 
SQLITE_TESTCTRL_LOCALTIME_FAULT
: {

3760 
sqlôe3GlobÆC⁄fig
.
bLoˇ…imeFau…
 = 
	`va_¨g
(
≠
, );

3772 
SQLITE_TESTCTRL_NEVER_CORRUPT
: {

3773 
sqlôe3GlobÆC⁄fig
.
√vîC‹ru±
 = 
	`va_¨g
(
≠
, );

3783 
SQLITE_TESTCTRL_VDBE_COVERAGE
: {

3784 #ifde‡
SQLITE_VDBE_COVERAGE


3785 (*
	tbønch_ˇŒback
)(*,,
	tu8
,u8);

3786 
sqlôe3GlobÆC⁄fig
.
xVdbeBønch
 = 
	`va_¨g
(
≠
,
bønch_ˇŒback
);

3787 
sqlôe3GlobÆC⁄fig
.
pVdbeBønchArg
 = 
	`va_¨g
(
≠
,*);

3793 
SQLITE_TESTCTRL_SORTER_MMAP
: {

3794 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3795 
db
->
nMaxS‹ãrMm≠
 = 
	`va_¨g
(
≠
, );

3804 
SQLITE_TESTCTRL_ISINIT
: {

3805 if–
sqlôe3GlobÆC⁄fig
.
isInô
==0 ) 
rc
 = 
SQLITE_ERROR
;

3825 
SQLITE_TESTCTRL_IMPOSTER
: {

3826 
sqlôe3
 *
db
 = 
	`va_¨g
(
≠
, sqlite3*);

3827 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3828 
db
->
öô
.
iDb
 = 
	`sqlôe3FödDbName
(db, 
	`va_¨g
(
≠
,const *));

3829 
db
->
öô
.
busy
 = db->öô.
impo°îTabÀ
 = 
	`va_¨g
(
≠
,);

3830 
db
->
öô
.
√wTnum
 = 
	`va_¨g
(
≠
,);

3831 if–
db
->
öô
.
busy
==0 && db->öô.
√wTnum
>0 ){

3832 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

3834 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3838 
	`va_íd
(
≠
);

3840  
rc
;

3841 
	}
}

3854 c⁄° *
	$sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
){

3855 if–
zFûíame
==0 || 
zP¨am
==0 )  0;

3856 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3857  
zFûíame
[0] ){

3858 
x
 = 
	`°rcmp
(
zFûíame
, 
zP¨am
);

3859 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3860 if–
x
==0 )  
zFûíame
;

3861 
zFûíame
 +
	`sqlôe3SåÀn30
(zFilename) + 1;

3864 
	}
}

3869 
	$sqlôe3_uri_boﬁón
(c⁄° *
zFûíame
, c⁄° *
zP¨am
, 
bDÊt
){

3870 c⁄° *
z
 = 
	`sqlôe3_uri_∑ømëî
(
zFûíame
, 
zP¨am
);

3871 
bDÊt
 = bDflt!=0;

3872  
z
 ? 
	`sqlôe3GëBoﬁón
(z, 
bDÊt
) : bDflt;

3873 
	}
}

3878 
sqlôe3_öt64
 
	$sqlôe3_uri_öt64
(

3879 c⁄° *
zFûíame
,

3880 c⁄° *
zP¨am
,

3881 
sqlôe3_öt64
 
bDÊt


3883 c⁄° *
z
 = 
	`sqlôe3_uri_∑ømëî
(
zFûíame
, 
zP¨am
);

3884 
sqlôe3_öt64
 
v
;

3885 if–
z
 && 
	`sqlôe3DecOrHexToI64
(z, &
v
)==
SQLITE_OK
 ){

3886 
bDÊt
 = 
v
;

3888  
bDÊt
;

3889 
	}
}

3894 
Båì
 *
	$sqlôe3DbNameToBåì
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3895 
i
;

3896 
i
=0; i<
db
->
nDb
; i++){

3897 if–
db
->
aDb
[
i
].
pBt


3898 && (
zDbName
==0 || 
	`sqlôe3SåICmp
(zDbName, 
db
->
aDb
[
i
].
zName
)==0)

3900  
db
->
aDb
[
i
].
pBt
;

3904 
	}
}

3910 c⁄° *
	$sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3911 
Båì
 *
pBt
;

3912 #ifde‡
SQLITE_ENABLE_API_ARMOR


3913 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3914 ()
SQLITE_MISUSE_BKPT
;

3918 
pBt
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3919  
pBt
 ? 
	`sqlôe3BåìGëFûíame
(pBt) : 0;

3920 
	}
}

3926 
	$sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
){

3927 
Båì
 *
pBt
;

3928 #ifde‡
SQLITE_ENABLE_API_ARMOR


3929 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3930 ()
SQLITE_MISUSE_BKPT
;

3934 
pBt
 = 
	`sqlôe3DbNameToBåì
(
db
, 
zDbName
);

3935  
pBt
 ? 
	`sqlôe3BåìIsRód⁄ly
(pBt) : -1;

3936 
	}
}

3938 #ifde‡
SQLITE_ENABLE_SNAPSHOT


3943 
	$sqlôe3_¢≠shŸ_gë
(

3944 
sqlôe3
 *
db
,

3945 c⁄° *
zDb
,

3946 
sqlôe3_¢≠shŸ
 **
µS«pshŸ


3948 
rc
 = 
SQLITE_ERROR
;

3949 #i‚de‡
SQLITE_OMIT_WAL


3950 
iDb
;

3952 #ifde‡
SQLITE_ENABLE_API_ARMOR


3953 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3954  
SQLITE_MISUSE_BKPT
;

3957 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3959 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

3960 if–
iDb
==0 || iDb>1 ){

3961 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

3962 if–0==
	`sqlôe3BåìIsInTøns
(
pBt
) ){

3963 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

3964 if–
rc
==
SQLITE_OK
 ){

3965 
rc
 = 
	`sqlôe3PagîS«pshŸGë
(
	`sqlôe3BåìPagî
(
pBt
), 
µS«pshŸ
);

3970 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

3972  
rc
;

3973 
	}
}

3978 
	$sqlôe3_¢≠shŸ_›í
(

3979 
sqlôe3
 *
db
,

3980 c⁄° *
zDb
,

3981 
sqlôe3_¢≠shŸ
 *
pS«pshŸ


3983 
rc
 = 
SQLITE_ERROR
;

3984 #i‚de‡
SQLITE_OMIT_WAL


3986 #ifde‡
SQLITE_ENABLE_API_ARMOR


3987 if–!
	`sqlôe3Sa„tyCheckOk
(
db
) ){

3988  
SQLITE_MISUSE_BKPT
;

3991 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

3992 if–
db
->
autoCommô
==0 ){

3993 
iDb
;

3994 
iDb
 = 
	`sqlôe3FödDbName
(
db
, 
zDb
);

3995 if–
iDb
==0 || iDb>1 ){

3996 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

3997 if–0==
	`sqlôe3BåìIsInRódTøns
(
pBt
) ){

3998 
rc
 = 
	`sqlôe3PagîS«pshŸO≥n
(
	`sqlôe3BåìPagî
(
pBt
), 
pS«pshŸ
);

3999 if–
rc
==
SQLITE_OK
 ){

4000 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

4001 
	`sqlôe3PagîS«pshŸO≥n
(
	`sqlôe3BåìPagî
(
pBt
), 0);

4007 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

4009  
rc
;

4010 
	}
}

4015 
	$sqlôe3_¢≠shŸ_‰ì
(
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

4016 
	`sqlôe3_‰ì
(
pS«pshŸ
);

4017 
	}
}

	@malloc.c

15 
	~"sqlôeI¡.h
"

16 
	~<°d¨g.h
>

23 
	$sqlôe3_ªÀa£_mem‹y
(
n
){

24 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


25  
	`sqlôe3PˇcheRñó£Mem‹y
(
n
);

30 
	`UNUSED_PARAMETER
(
n
);

33 
	}
}

39 
	sS¸©chFªe¶Ÿ
 {

40 
S¸©chFªe¶Ÿ
 *
	mpNext
;

41 } 
	tS¸©chFªe¶Ÿ
;

46 
SQLITE_WSD
 
	sMem0GlobÆ
 {

47 
sqlôe3_muãx
 *
	mmuãx
;

48 
sqlôe3_öt64
 
	mÆ¨mThªshﬁd
;

56 *
	mpS¸©chEnd
;

57 
S¸©chFªe¶Ÿ
 *
	mpS¸©chFªe
;

58 
u32
 
	mnS¸©chFªe
;

64 
	m√¨lyFuŒ
;

65 } 
	gmem0
 = { 0, 0, 0, 0, 0, 0 };

67 
	#mem0
 
	`GLOBAL
(
Mem0GlobÆ
, 
mem0
)

	)

72 
sqlôe3_muãx
 *
	$sqlôe3MÆlocMuãx
(){

73  
mem0
.
muãx
;

74 
	}
}

76 #i‚de‡
SQLITE_OMIT_DEPRECATED


82 
sqlôe3_mem‹y_Æ¨m
(

83 (*
xCÆlback
)(*
pArg
, 
sqlôe3_öt64
 
u£d
,
N
),

84 *
pArg
,

85 
sqlôe3_öt64
 
iThªshﬁd


87 ()
xCÆlback
;

88 ()
pArg
;

89 ()
iThªshﬁd
;

90  
SQLITE_OK
;

91 
	}
}

98 
sqlôe3_öt64
 
	$sqlôe3_so·_hóp_limô64
(
sqlôe3_öt64
 
n
){

99 
sqlôe3_öt64
 
¥i‹Limô
;

100 
sqlôe3_öt64
 
ex˚ss
;

101 
sqlôe3_öt64
 
nU£d
;

102 #i‚de‡
SQLITE_OMIT_AUTOINIT


103 
rc
 = 
	`sqlôe3_öôülize
();

104 if–
rc
 )  -1;

106 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

107 
¥i‹Limô
 = 
mem0
.
Æ¨mThªshﬁd
;

108 if–
n
<0 ){

109 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

110  
¥i‹Limô
;

112 
mem0
.
Æ¨mThªshﬁd
 = 
n
;

113 
nU£d
 = 
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
);

114 
mem0
.
√¨lyFuŒ
 = (
n
>0 &&Ç<=
nU£d
);

115 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

116 
ex˚ss
 = 
	`sqlôe3_mem‹y_u£d
(Ë- 
n
;

117 if–
ex˚ss
>0 ) 
	`sqlôe3_ªÀa£_mem‹y
(()(excess & 0x7fffffff));

118  
¥i‹Limô
;

119 
	}
}

120 
	$sqlôe3_so·_hóp_limô
(
n
){

121 if–
n
<0 )Ç = 0;

122 
	`sqlôe3_so·_hóp_limô64
(
n
);

123 
	}
}

128 
	$sqlôe3MÆlocInô
(){

129 
rc
;

130 if–
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==0 ){

131 
	`sqlôe3MemSëDeÁu…
();

133 
	`mem£t
(&
mem0
, 0, (mem0));

134 
mem0
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

135 if–
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 && sqlôe3GlobÆC⁄fig.
szS¸©ch
>=100

136 && 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
>0 ){

137 
i
, 
n
, 
sz
;

138 
S¸©chFªe¶Ÿ
 *
pSlŸ
;

139 
sz
 = 
	`ROUNDDOWN8
(
sqlôe3GlobÆC⁄fig
.
szS¸©ch
);

140 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 
sz
;

141 
pSlŸ
 = (
S¸©chFªe¶Ÿ
*)
sqlôe3GlobÆC⁄fig
.
pS¸©ch
;

142 
n
 = 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
;

143 
mem0
.
pS¸©chFªe
 = 
pSlŸ
;

144 
mem0
.
nS¸©chFªe
 = 
n
;

145 
i
=0; i<
n
-1; i++){

146 
pSlŸ
->
pNext
 = (
S¸©chFªe¶Ÿ
*)(
sz
+(*)pSlot);

147 
pSlŸ
 =ÖSlŸ->
pNext
;

149 
pSlŸ
->
pNext
 = 0;

150 
mem0
.
pS¸©chEnd
 = (*)&
pSlŸ
[1];

152 
mem0
.
pS¸©chEnd
 = 0;

153 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
 = 0;

154 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
 = 0;

155 
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 = 0;

157 if–
sqlôe3GlobÆC⁄fig
.
pPage
==0 || sqlôe3GlobÆC⁄fig.
szPage
<512

158 || 
sqlôe3GlobÆC⁄fig
.
nPage
<=0 ){

159 
sqlôe3GlobÆC⁄fig
.
pPage
 = 0;

160 
sqlôe3GlobÆC⁄fig
.
szPage
 = 0;

162 
rc
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xInô
(sqlôe3GlobÆC⁄fig.m.
pAµD©a
);

163 if–
rc
!=
SQLITE_OK
 ) 
	`mem£t
(&
mem0
, 0, (mem0));

164  
rc
;

165 
	}
}

172 
	$sqlôe3HópNóæyFuŒ
(){

173  
mem0
.
√¨lyFuŒ
;

174 
	}
}

179 
	$sqlôe3MÆlocEnd
(){

180 if–
sqlôe3GlobÆC⁄fig
.
m
.
xShutdown
 ){

181 
sqlôe3GlobÆC⁄fig
.
m
.
	`xShutdown
(sqlôe3GlobÆC⁄fig.m.
pAµD©a
);

183 
	`mem£t
(&
mem0
, 0, (mem0));

184 
	}
}

189 
sqlôe3_öt64
 
	$sqlôe3_mem‹y_u£d
(){

190 
sqlôe3_öt64
 
ªs
, 
mx
;

191 
	`sqlôe3_°©us64
(
SQLITE_STATUS_MEMORY_USED
, &
ªs
, &
mx
, 0);

192  
ªs
;

193 
	}
}

200 
sqlôe3_öt64
 
	$sqlôe3_mem‹y_highw©î
(
ª£tFœg
){

201 
sqlôe3_öt64
 
ªs
, 
mx
;

202 
	`sqlôe3_°©us64
(
SQLITE_STATUS_MEMORY_USED
, &
ªs
, &
mx
, 
ª£tFœg
);

203  
mx
;

204 
	}
}

209 
	$sqlôe3MÆlocAœrm
(
nByã
){

210 if–
mem0
.
Æ¨mThªshﬁd
<=0 ) ;

211 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

212 
	`sqlôe3_ªÀa£_mem‹y
(
nByã
);

213 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

214 
	}
}

220 
	$mÆlocWôhAœrm
(
n
, **
µ
){

221 
nFuŒ
;

222 *
p
;

223 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem0
.
muãx
) );

224 
nFuŒ
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
(
n
);

225 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_MALLOC_SIZE
, 
n
);

226 if–
mem0
.
Æ¨mThªshﬁd
>0 ){

227 
sqlôe3_öt64
 
nU£d
 = 
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
);

228 if–
nU£d
 >
mem0
.
Æ¨mThªshﬁd
 - 
nFuŒ
 ){

229 
mem0
.
√¨lyFuŒ
 = 1;

230 
	`sqlôe3MÆlocAœrm
(
nFuŒ
);

232 
mem0
.
√¨lyFuŒ
 = 0;

235 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(
nFuŒ
);

236 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


237 if–
p
==0 && 
mem0
.
Æ¨mThªshﬁd
>0 ){

238 
	`sqlôe3MÆlocAœrm
(
nFuŒ
);

239 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(
nFuŒ
);

242 if–
p
 ){

243 
nFuŒ
 = 
	`sqlôe3MÆlocSize
(
p
);

244 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MEMORY_USED
, 
nFuŒ
);

245 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

247 *
µ
 = 
p
;

248  
nFuŒ
;

249 
	}
}

255 *
	$sqlôe3MÆloc
(
u64
 
n
){

256 *
p
;

257 if–
n
==0 ||Ç>=0x7fffff00 ){

263 
p
 = 0;

264 }if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

265 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

266 
	`mÆlocWôhAœrm
(()
n
, &
p
);

267 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

269 
p
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xMÆloc
(()
n
);

271 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
p
) );

272  
p
;

273 
	}
}

280 *
	$sqlôe3_mÆloc
(
n
){

281 #i‚de‡
SQLITE_OMIT_AUTOINIT


282 if–
	`sqlôe3_öôülize
() )  0;

284  
n
<=0 ? 0 : 
	`sqlôe3MÆloc
(n);

285 
	}
}

286 *
	$sqlôe3_mÆloc64
(
sqlôe3_uöt64
 
n
){

287 #i‚de‡
SQLITE_OMIT_AUTOINIT


288 if–
	`sqlôe3_öôülize
() )  0;

290  
	`sqlôe3MÆloc
(
n
);

291 
	}
}

299 #i‡
SQLITE_THREADSAFE
==0 && !
deföed
(
NDEBUG
)

300 
	gs¸©chAŒocOut
 = 0;

312 *
	$sqlôe3S¸©chMÆloc
(
n
){

313 *
p
;

314 
	`as£π
–
n
>0 );

316 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

317 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_SCRATCH_SIZE
, 
n
);

318 if–
mem0
.
nS¸©chFªe
 && 
sqlôe3GlobÆC⁄fig
.
szS¸©ch
>=
n
 ){

319 
p
 = 
mem0
.
pS¸©chFªe
;

320 
mem0
.
pS¸©chFªe
 = mem0.pS¸©chFªe->
pNext
;

321 
mem0
.
nS¸©chFªe
--;

322 
	`sqlôe3SètusUp
(
SQLITE_STATUS_SCRATCH_USED
, 1);

323 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

325 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

326 
p
 = 
	`sqlôe3MÆloc
(
n
);

327 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 && 
p
 ){

328 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

329 
	`sqlôe3SètusUp
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, 
	`sqlôe3MÆlocSize
(
p
));

330 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

332 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_SCRATCH
);

334 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
mem0
.
muãx
) );

337 #i‡
SQLITE_THREADSAFE
==0 && !
	`deföed
(
NDEBUG
)

343 
	`as£π
–
s¸©chAŒocOut
==0 );

344 if–
p
 ) 
s¸©chAŒocOut
++;

347  
p
;

348 
	}
}

349 
	$sqlôe3S¸©chFªe
(*
p
){

350 if–
p
 ){

352 #i‡
SQLITE_THREADSAFE
==0 && !
	`deföed
(
NDEBUG
)

357 
	`as£π
–
s¸©chAŒocOut
>=1 && scratchAllocOut<=2 );

358 
s¸©chAŒocOut
--;

361 if–
	`SQLITE_WITHIN
(
p
, 
sqlôe3GlobÆC⁄fig
.
pS¸©ch
, 
mem0
.
pS¸©chEnd
) ){

363 
S¸©chFªe¶Ÿ
 *
pSlŸ
;

364 
pSlŸ
 = (
S¸©chFªe¶Ÿ
*)
p
;

365 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

366 
pSlŸ
->
pNext
 = 
mem0
.
pS¸©chFªe
;

367 
mem0
.
pS¸©chFªe
 = 
pSlŸ
;

368 
mem0
.
nS¸©chFªe
++;

369 
	`as£π
–
mem0
.
nS¸©chFªe
 <(
u32
)
sqlôe3GlobÆC⁄fig
.
nS¸©ch
 );

370 
	`sqlôe3SètusDown
(
SQLITE_STATUS_SCRATCH_USED
, 1);

371 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

374 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_SCRATCH
) );

375 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_SCRATCH
) );

376 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

377 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

378 
iSize
 = 
	`sqlôe3MÆlocSize
(
p
);

379 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

380 
	`sqlôe3SètusDown
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, 
iSize
);

381 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MEMORY_USED
, 
iSize
);

382 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

383 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

384 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

386 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

390 
	}
}

395 #i‚de‡
SQLITE_OMIT_LOOKASIDE


396 
	$isLookaside
(
sqlôe3
 *
db
, *
p
){

397  
	`SQLITE_WITHIN
(
p
, 
db
->
lookaside
.
pSèπ
, db->lookaside.
pEnd
);

398 
	}
}

400 
	#isLookaside
(
A
,
B
Ë0

	)

407 
	$sqlôe3MÆlocSize
(*
p
){

408 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

409  
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(
p
);

410 
	}
}

411 
	$sqlôe3DbMÆlocSize
(
sqlôe3
 *
db
, *
p
){

412 
	`as£π
–
p
!=0 );

413 if–
db
==0 || !
	`isLookaside
(db,
p
) ){

414 #i‡
SQLITE_DEBUG


415 if–
db
==0 ){

416 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

417 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

419 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

420 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

423  
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(
p
);

425 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

426  
db
->
lookaside
.
sz
;

428 
	}
}

429 
sqlôe3_uöt64
 
	$sqlôe3_msize
(*
p
){

430 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

431 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

432  
p
 ? 
sqlôe3GlobÆC⁄fig
.
m
.
	`xSize
(p) : 0;

433 
	}
}

438 
	$sqlôe3_‰ì
(*
p
){

439 if–
p
==0 ) ;

440 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_HEAP
) );

441 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~
MEMTYPE_HEAP
) );

442 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

443 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

444 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MEMORY_USED
, 
	`sqlôe3MÆlocSize
(
p
));

445 
	`sqlôe3SètusDown
(
SQLITE_STATUS_MALLOC_COUNT
, 1);

446 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

447 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

449 
sqlôe3GlobÆC⁄fig
.
m
.
	`xFªe
(
p
);

451 
	}
}

457 
SQLITE_NOINLINE
 
	$mósuªAŒoˇti⁄Size
(
sqlôe3
 *
db
, *
p
){

458 *
db
->
≤ByãsFªed
 +
	`sqlôe3DbMÆlocSize
(db,
p
);

459 
	}
}

465 
	$sqlôe3DbFªe
(
sqlôe3
 *
db
, *
p
){

466 
	`as£π
–
db
==0 || 
	`sqlôe3_muãx_hñd
(db->
muãx
) );

467 if–
p
==0 ) ;

468 if–
db
 ){

469 if–
db
->
≤ByãsFªed
 ){

470 
	`mósuªAŒoˇti⁄Size
(
db
, 
p
);

473 if–
	`isLookaside
(
db
, 
p
) ){

474 
LookasideSlŸ
 *
pBuf
 = (LookasideSlŸ*)
p
;

475 #i‡
SQLITE_DEBUG


477 
	`mem£t
(
p
, 0xØ, 
db
->
lookaside
.
sz
);

479 
pBuf
->
pNext
 = 
db
->
lookaside
.
pFªe
;

480 
db
->
lookaside
.
pFªe
 = 
pBuf
;

481 
db
->
lookaside
.
nOut
--;

485 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

486 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

487 
	`as£π
–
db
!=0 || 
	`sqlôe3MemdebugNoTy≥
(
p
, 
MEMTYPE_LOOKASIDE
) );

488 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

489 
	`sqlôe3_‰ì
(
p
);

490 
	}
}

495 *
	$sqlôe3RóŒoc
(*
pOld
, 
u64
 
nByãs
){

496 
nOld
, 
nNew
, 
nDiff
;

497 *
pNew
;

498 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
pOld
, 
MEMTYPE_HEAP
) );

499 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
pOld
, (
u8
)~
MEMTYPE_HEAP
) );

500 if–
pOld
==0 ){

501  
	`sqlôe3MÆloc
(
nByãs
);

503 if–
nByãs
==0 ){

504 
	`sqlôe3_‰ì
(
pOld
);

507 if–
nByãs
>=0x7fffff00 ){

511 
nOld
 = 
	`sqlôe3MÆlocSize
(
pOld
);

515 
nNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
(()
nByãs
);

516 if–
nOld
==
nNew
 ){

517 
pNew
 = 
pOld
;

518 }if–
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

519 
	`sqlôe3_muãx_íãr
(
mem0
.
muãx
);

520 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_MALLOC_SIZE
, ()
nByãs
);

521 
nDiff
 = 
nNew
 - 
nOld
;

522 if–
	`sqlôe3SètusVÆue
(
SQLITE_STATUS_MEMORY_USED
) >=

523 
mem0
.
Æ¨mThªshﬁd
-
nDiff
 ){

524 
	`sqlôe3MÆlocAœrm
(
nDiff
);

526 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

527 if–
pNew
==0 && 
mem0
.
Æ¨mThªshﬁd
>0 ){

528 
	`sqlôe3MÆlocAœrm
(()
nByãs
);

529 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

531 if–
pNew
 ){

532 
nNew
 = 
	`sqlôe3MÆlocSize
(
pNew
);

533 
	`sqlôe3SètusUp
(
SQLITE_STATUS_MEMORY_USED
, 
nNew
-
nOld
);

535 
	`sqlôe3_muãx_Àave
(
mem0
.
muãx
);

537 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
m
.
	`xRóŒoc
(
pOld
, 
nNew
);

539 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pNew
) );

540  
pNew
;

541 
	}
}

547 *
	$sqlôe3_ªÆloc
(*
pOld
, 
n
){

548 #i‚de‡
SQLITE_OMIT_AUTOINIT


549 if–
	`sqlôe3_öôülize
() )  0;

551 if–
n
<0 )Ç = 0;

552  
	`sqlôe3RóŒoc
(
pOld
, 
n
);

553 
	}
}

554 *
	$sqlôe3_ªÆloc64
(*
pOld
, 
sqlôe3_uöt64
 
n
){

555 #i‚de‡
SQLITE_OMIT_AUTOINIT


556 if–
	`sqlôe3_öôülize
() )  0;

558  
	`sqlôe3RóŒoc
(
pOld
, 
n
);

559 
	}
}

565 *
	$sqlôe3MÆlocZîo
(
u64
 
n
){

566 *
p
 = 
	`sqlôe3MÆloc
(
n
);

567 if–
p
 ){

568 
	`mem£t
(
p
, 0, (
size_t
)
n
);

570  
p
;

571 
	}
}

577 *
	$sqlôe3DbMÆlocZîo
(
sqlôe3
 *
db
, 
u64
 
n
){

578 *
p
;

579 
	`ã°ˇ£
–
db
==0 );

580 
p
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
n
);

581 if–
p
 ) 
	`mem£t
’, 0, (
size_t
)
n
);

582  
p
;

583 
	}
}

589 
SQLITE_NOINLINE
 *
	$dbMÆlocRawFöish
(
sqlôe3
 *
db
, 
u64
 
n
){

590 *
p
;

591 
	`as£π
–
db
!=0 );

592 
p
 = 
	`sqlôe3MÆloc
(
n
);

593 if–!
p
 ) 
	`sqlôe3OomFau…
(
db
);

594 
	`sqlôe3MemdebugSëTy≥
(
p
,

595 (
db
->
lookaside
.
bDißbÀ
==0Ë? 
MEMTYPE_LOOKASIDE
 : 
MEMTYPE_HEAP
);

596  
p
;

597 
	}
}

621 *
	$sqlôe3DbMÆlocRaw
(
sqlôe3
 *
db
, 
u64
 
n
){

622 *
p
;

623 if–
db
 )  
	`sqlôe3DbMÆlocRawNN
(db, 
n
);

624 
p
 = 
	`sqlôe3MÆloc
(
n
);

625 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

626  
p
;

627 
	}
}

628 *
	$sqlôe3DbMÆlocRawNN
(
sqlôe3
 *
db
, 
u64
 
n
){

629 #i‚de‡
SQLITE_OMIT_LOOKASIDE


630 
LookasideSlŸ
 *
pBuf
;

631 
	`as£π
–
db
!=0 );

632 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

633 
	`as£π
–
db
->
≤ByãsFªed
==0 );

634 if–
db
->
lookaside
.
bDißbÀ
==0 ){

635 
	`as£π
–
db
->
mÆlocFaûed
==0 );

636 if–
n
>
db
->
lookaside
.
sz
 ){

637 
db
->
lookaside
.
™Sèt
[1]++;

638 }if–(
pBuf
 = 
db
->
lookaside
.
pFªe
)==0 ){

639 
db
->
lookaside
.
™Sèt
[2]++;

641 
db
->
lookaside
.
pFªe
 = 
pBuf
->
pNext
;

642 
db
->
lookaside
.
nOut
++;

643 
db
->
lookaside
.
™Sèt
[0]++;

644 if–
db
->
lookaside
.
nOut
>db->lookaside.
mxOut
 ){

645 
db
->
lookaside
.
mxOut
 = db->lookaside.
nOut
;

647  (*)
pBuf
;

649 }if–
db
->
mÆlocFaûed
 ){

653 
	`as£π
–
db
!=0 );

654 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

655 
	`as£π
–
db
->
≤ByãsFªed
==0 );

656 if–
db
->
mÆlocFaûed
 ){

660  
	`dbMÆlocRawFöish
(
db
, 
n
);

661 
	}
}

664 
SQLITE_NOINLINE
 *
dbRóŒocFöish
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
);

670 *
	$sqlôe3DbRóŒoc
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

671 
	`as£π
–
db
!=0 );

672 if–
p
==0 )  
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

673 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

674 if–
	`isLookaside
(
db
,
p
Ë&& 
n
<=db->
lookaside
.
sz
 ) Ö;

675  
	`dbRóŒocFöish
(
db
, 
p
, 
n
);

676 
	}
}

677 
SQLITE_NOINLINE
 *
	$dbRóŒocFöish
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

678 *
pNew
 = 0;

679 
	`as£π
–
db
!=0 );

680 
	`as£π
–
p
!=0 );

681 if–
db
->
mÆlocFaûed
==0 ){

682 if–
	`isLookaside
(
db
, 
p
) ){

683 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
);

684 if–
pNew
 ){

685 
	`mem˝y
(
pNew
, 
p
, 
db
->
lookaside
.
sz
);

686 
	`sqlôe3DbFªe
(
db
, 
p
);

689 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, (
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

690 
	`as£π
–
	`sqlôe3MemdebugNoTy≥
(
p
, (
u8
)~(
MEMTYPE_LOOKASIDE
|
MEMTYPE_HEAP
)) );

691 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

692 
pNew
 = 
	`sqlôe3_ªÆloc64
(
p
, 
n
);

693 if–!
pNew
 ){

694 
	`sqlôe3OomFau…
(
db
);

696 
	`sqlôe3MemdebugSëTy≥
(
pNew
,

697 (
db
->
lookaside
.
bDißbÀ
==0 ? 
MEMTYPE_LOOKASIDE
 : 
MEMTYPE_HEAP
));

700  
pNew
;

701 
	}
}

707 *
	$sqlôe3DbRóŒocOrFªe
(
sqlôe3
 *
db
, *
p
, 
u64
 
n
){

708 *
pNew
;

709 
pNew
 = 
	`sqlôe3DbRóŒoc
(
db
, 
p
, 
n
);

710 if–!
pNew
 ){

711 
	`sqlôe3DbFªe
(
db
, 
p
);

713  
pNew
;

714 
	}
}

723 *
	$sqlôe3DbSåDup
(
sqlôe3
 *
db
, c⁄° *
z
){

724 *
zNew
;

725 
size_t
 
n
;

726 if–
z
==0 ){

729 
n
 = 
	`sqlôe3SåÀn30
(
z
) + 1;

730 
	`as£π
–(
n
&0x7fffffff)==n );

731 
zNew
 = 
	`sqlôe3DbMÆlocRaw
(
db
, ()
n
);

732 if–
zNew
 ){

733 
	`mem˝y
(
zNew
, 
z
, 
n
);

735  
zNew
;

736 
	}
}

737 *
	$sqlôe3DbSåNDup
(
sqlôe3
 *
db
, c⁄° *
z
, 
u64
 
n
){

738 *
zNew
;

739 
	`as£π
–
db
!=0 );

740 if–
z
==0 ){

743 
	`as£π
–(
n
&0x7fffffff)==n );

744 
zNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
+1);

745 if–
zNew
 ){

746 
	`mem˝y
(
zNew
, 
z
, (
size_t
)
n
);

747 
zNew
[
n
] = 0;

749  
zNew
;

750 
	}
}

755 
	$sqlôe3SëSåög
(**
pz
, 
sqlôe3
 *
db
, c⁄° *
zNew
){

756 
	`sqlôe3DbFªe
(
db
, *
pz
);

757 *
pz
 = 
	`sqlôe3DbSåDup
(
db
, 
zNew
);

758 
	}
}

766 
	$sqlôe3OomFau…
(
sqlôe3
 *
db
){

767 if–
db
->
mÆlocFaûed
==0 && db->
bBíignMÆloc
==0 ){

768 
db
->
mÆlocFaûed
 = 1;

769 if–
db
->
nVdbeExec
>0 ){

770 
db
->
u1
.
isI¡îru±ed
 = 1;

772 
db
->
lookaside
.
bDißbÀ
++;

774 
	}
}

783 
	$sqlôe3OomCÀ¨
(
sqlôe3
 *
db
){

784 if–
db
->
mÆlocFaûed
 && db->
nVdbeExec
==0 ){

785 
db
->
mÆlocFaûed
 = 0;

786 
db
->
u1
.
isI¡îru±ed
 = 0;

787 
	`as£π
–
db
->
lookaside
.
bDißbÀ
>0 );

788 
db
->
lookaside
.
bDißbÀ
--;

790 
	}
}

795 
SQLITE_NOINLINE
 
	$≠iOomEº‹
(
sqlôe3
 *
db
){

796 
	`sqlôe3OomCÀ¨
(
db
);

797 
	`sqlôe3Eº‹
(
db
, 
SQLITE_NOMEM
);

798  
SQLITE_NOMEM_BKPT
;

799 
	}
}

813 
	$sqlôe3ApiExô
(
sqlôe3
* 
db
, 
rc
){

818 
	`as£π
–
db
!=0 );

819 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

820 if–
db
->
mÆlocFaûed
 || 
rc
==
SQLITE_IOERR_NOMEM
 ){

821  
	`≠iOomEº‹
(
db
);

823  
rc
 & 
db
->
îrMask
;

824 
	}
}

	@mem0.c

19 
	~"sqlôeI¡.h
"

26 #ifde‡
SQLITE_ZERO_MALLOC


31 *
	$sqlôe3MemMÆloc
(
nByã
){  0; 
	}
}

32 
	$sqlôe3MemFªe
(*
pPri‹
){ ; 
	}
}

33 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){  0; 
	}
}

34 
	$sqlôe3MemSize
(*
pPri‹
){  0; 
	}
}

35 
	$sqlôe3MemRoundup
(
n
){ Ç; 
	}
}

36 
	$sqlôe3MemInô
(*
NŸU£d
){  
SQLITE_OK
; 
	}
}

37 
	$sqlôe3MemShutdown
(*
NŸU£d
){ ; 
	}
}

45 
	$sqlôe3MemSëDeÁu…
(){

46 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

47 
sqlôe3MemMÆloc
,

48 
sqlôe3MemFªe
,

49 
sqlôe3MemRóŒoc
,

50 
sqlôe3MemSize
,

51 
sqlôe3MemRoundup
,

52 
sqlôe3MemInô
,

53 
sqlôe3MemShutdown
,

56 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

57 
	}
}

	@mem1.c

44 
	~"sqlôeI¡.h
"

51 #ifde‡
SQLITE_SYSTEM_MALLOC


52 #i‡
deföed
(
__APPLE__
Ë&& !deföed(
SQLITE_WITHOUT_ZONEMALLOC
)

58 
	~<sys/sys˘l.h
>

59 
	~<mÆloc/mÆloc.h
>

60 
	~<libkîn/OSAtomic.h
>

61 
mÆloc_z⁄e_t
* 
	g_sqlôeZ⁄e_
;

62 
	#SQLITE_MALLOC
(
x
Ë
	`mÆloc_z⁄e_mÆloc
(
_sqlôeZ⁄e_
, (x))

	)

63 
	#SQLITE_FREE
(
x
Ë
	`mÆloc_z⁄e_‰ì
(
_sqlôeZ⁄e_
, (x));

	)

64 
	#SQLITE_REALLOC
(
x
,
y
Ë
	`mÆloc_z⁄e_ªÆloc
(
_sqlôeZ⁄e_
, (x), (y))

	)

65 
	#SQLITE_MALLOCSIZE
(
x
) \

66 (
_sqlôeZ⁄e_
 ? _sqlôeZ⁄e_->
	`size
(_sqlôeZ⁄e_,
x
Ë: 
	`mÆloc_size
(x))

	)

74 
	#SQLITE_MALLOC
(
x
Ë
	`mÆloc
(x)

	)

75 
	#SQLITE_FREE
(
x
Ë
	`‰ì
(x)

	)

76 
	#SQLITE_REALLOC
(
x
,
y
Ë
	`ªÆloc
((x),(y))

	)

82 #i‡
HAVE_MALLOC_H
 && 
HAVE_MALLOC_USABLE_SIZE


83 
	#SQLITE_USE_MALLOC_H
 1

	)

84 
	#SQLITE_USE_MALLOC_USABLE_SIZE
 1

	)

91 #ñi‡
deföed
(
_MSC_VER
Ë&& !deföed(
SQLITE_WITHOUT_MSIZE
)

92 
	#SQLITE_USE_MALLOC_H


	)

93 
	#SQLITE_USE_MSIZE


	)

103 #i‡
deföed
(
SQLITE_USE_MALLOC_H
)

104 
	~<mÆloc.h
>

105 #i‡
deföed
(
SQLITE_USE_MALLOC_USABLE_SIZE
)

106 #i‡!
deföed
(
SQLITE_MALLOCSIZE
)

107 
	#SQLITE_MALLOCSIZE
(
x
Ë
	`mÆloc_ußbÀ_size
(x)

	)

109 #ñi‡
deföed
(
SQLITE_USE_MSIZE
)

110 #i‡!
deföed
(
SQLITE_MALLOCSIZE
)

111 
	#SQLITE_MALLOCSIZE
 
_msize


	)

126 *
	$sqlôe3MemMÆloc
(
nByã
){

127 #ifde‡
SQLITE_MALLOCSIZE


128 *
p
 = 
	`SQLITE_MALLOC
–
nByã
 );

129 if–
p
==0 ){

130 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

131 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byã†o‡mem‹y", 
nByã
);

133  
p
;

135 
sqlôe3_öt64
 *
p
;

136 
	`as£π
–
nByã
>0 );

137 
nByã
 = 
	`ROUND8
(nByte);

138 
p
 = 
	`SQLITE_MALLOC
–
nByã
+8 );

139 if–
p
 ){

140 
p
[0] = 
nByã
;

141 
p
++;

143 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

144 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byã†o‡mem‹y", 
nByã
);

146  (*)
p
;

148 
	}
}

158 
	$sqlôe3MemFªe
(*
pPri‹
){

159 #ifde‡
SQLITE_MALLOCSIZE


160 
	`SQLITE_FREE
(
pPri‹
);

162 
sqlôe3_öt64
 *
p
 = (sqlôe3_öt64*)
pPri‹
;

163 
	`as£π
–
pPri‹
!=0 );

164 
p
--;

165 
	`SQLITE_FREE
(
p
);

167 
	}
}

173 
	$sqlôe3MemSize
(*
pPri‹
){

174 #ifde‡
SQLITE_MALLOCSIZE


175 
	`as£π
–
pPri‹
!=0 );

176  ()
	`SQLITE_MALLOCSIZE
(
pPri‹
);

178 
sqlôe3_öt64
 *
p
;

179 
	`as£π
–
pPri‹
!=0 );

180 
p
 = (
sqlôe3_öt64
*)
pPri‹
;

181 
p
--;

182  ()
p
[0];

184 
	}
}

196 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){

197 #ifde‡
SQLITE_MALLOCSIZE


198 *
p
 = 
	`SQLITE_REALLOC
(
pPri‹
, 
nByã
);

199 if–
p
==0 ){

200 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

201 
	`sqlôe3_log
(
SQLITE_NOMEM
,

203 
	`SQLITE_MALLOCSIZE
(
pPri‹
), 
nByã
);

205  
p
;

207 
sqlôe3_öt64
 *
p
 = (sqlôe3_öt64*)
pPri‹
;

208 
	`as£π
–
pPri‹
!=0 && 
nByã
>0 );

209 
	`as£π
–
nByã
==
	`ROUND8
(nByte) );

210 
p
--;

211 
p
 = 
	`SQLITE_REALLOC
’, 
nByã
+8 );

212 if–
p
 ){

213 
p
[0] = 
nByã
;

214 
p
++;

216 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

217 
	`sqlôe3_log
(
SQLITE_NOMEM
,

219 
	`sqlôe3MemSize
(
pPri‹
), 
nByã
);

221  (*)
p
;

223 
	}
}

228 
	$sqlôe3MemRoundup
(
n
){

229  
	`ROUND8
(
n
);

230 
	}
}

235 
	$sqlôe3MemInô
(*
NŸU£d
){

236 #i‡
	`deföed
(
__APPLE__
Ë&& !deföed(
SQLITE_WITHOUT_ZONEMALLOC
)

237 
˝uCou¡
;

238 
size_t
 
Àn
;

239 if–
_sqlôeZ⁄e_
 ){

240  
SQLITE_OK
;

242 
Àn
 = (
˝uCou¡
);

244 
	`sys˘lby«me
("hw.n˝u", &
˝uCou¡
, &
Àn
, 
NULL
, 0);

245 if–
˝uCou¡
>1 ){

247 
_sqlôeZ⁄e_
 = 
	`mÆloc_deÁu…_z⁄e
();

251 
boﬁ
 
suc˚ss
;

252 
mÆloc_z⁄e_t
* 
√wz⁄e
 = 
	`mÆloc_¸óã_z⁄e
(4096, 0);

253 
	`mÆloc_£t_z⁄e_«me
(
√wz⁄e
, "Sqlite_Heap");

255 
suc˚ss
 = 
	`OSAtomicCom∑ªAndSw≠PåB¨rõr
(
NULL
, 
√wz⁄e
,

256 (* vﬁ©ûê*)&
_sqlôeZ⁄e_
);

257 }!
_sqlôeZ⁄e_
);

258 if–!
suc˚ss
 ){

260 
	`mÆloc_de°roy_z⁄e
(
√wz⁄e
);

264 
	`UNUSED_PARAMETER
(
NŸU£d
);

265  
SQLITE_OK
;

266 
	}
}

271 
	$sqlôe3MemShutdown
(*
NŸU£d
){

272 
	`UNUSED_PARAMETER
(
NŸU£d
);

274 
	}
}

282 
	$sqlôe3MemSëDeÁu…
(){

283 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

284 
sqlôe3MemMÆloc
,

285 
sqlôe3MemFªe
,

286 
sqlôe3MemRóŒoc
,

287 
sqlôe3MemSize
,

288 
sqlôe3MemRoundup
,

289 
sqlôe3MemInô
,

290 
sqlôe3MemShutdown
,

293 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

294 
	}
}

	@mem2.c

22 
	~"sqlôeI¡.h
"

28 #ifde‡
SQLITE_MEMDEBUG


33 #ifde‡
__GLIBC__


34 
backåa˚
(**,);

35 
backåa˚_symbﬁs_fd
(*const*,,);

37 
	#backåa˚
(
A
,
B
Ë1

	)

38 
	#backåa˚_symbﬁs_fd
(
A
,
B
,
C
)

	)

40 
	~<°dio.h
>

55 
	sMemBlockHdr
 {

56 
i64
 
	miSize
;

57 
MemBlockHdr
 *
	mpNext
, *
	mpPªv
;

58 
	mnBackåa˚
;

59 
	mnBackåa˚SlŸs
;

60 
u8
 
	mnTôÀ
;

61 
u8
 
	meTy≥
;

62 
	miF‹eGu¨d
;

68 
	#FOREGUARD
 0x80F5E153

	)

69 
	#REARGUARD
 0xE4676B53

	)

74 
	#NCSIZE
 1000

	)

87 
sqlôe3_muãx
 *
	mmuãx
;

92 
MemBlockHdr
 *
	mpFú°
;

93 
MemBlockHdr
 *
	mpLa°
;

98 
	mnBackåa˚
;

99 (*
	mxBackåa˚
)(, , **);

104 
	mnTôÀ
;

105 
	mzTôÀ
[100];

111 
	mdißŒow
;

119 
	mnAŒoc
[
NCSIZE
];

120 
	mnCuºít
[
NCSIZE
];

121 
	mmxCuºít
[
NCSIZE
];

123 } 
	gmem
;

129 
	$adju°Sèts
(
iSize
, 
ö¸emít
){

130 
i
 = 
	`ROUND8
(
iSize
)/8;

131 if–
i
>
NCSIZE
-1 ){

132 
i
 = 
NCSIZE
 - 1;

134 if–
ö¸emít
>0 ){

135 
mem
.
nAŒoc
[
i
]++;

136 
mem
.
nCuºít
[
i
]++;

137 if–
mem
.
nCuºít
[
i
]>mem.
mxCuºít
[i] ){

138 
mem
.
mxCuºít
[
i
] = mem.
nCuºít
[i];

141 
mem
.
nCuºít
[
i
]--;

142 
	`as£π
–
mem
.
nCuºít
[
i
]>=0 );

144 
	}
}

152 
MemBlockHdr
 *
	$sqlôe3MemsysGëHódî
(*
pAŒoˇti⁄
){

153 
MemBlockHdr
 *
p
;

154 *
pI¡
;

155 
u8
 *
pU8
;

156 
nRe£rve
;

158 
p
 = (
MemBlockHdr
*)
pAŒoˇti⁄
;

159 
p
--;

160 
	`as£π
–
p
->
iF‹eGu¨d
==()
FOREGUARD
 );

161 
nRe£rve
 = 
	`ROUND8
(
p
->
iSize
);

162 
pI¡
 = (*)
pAŒoˇti⁄
;

163 
pU8
 = (
u8
*)
pAŒoˇti⁄
;

164 
	`as£π
–
pI¡
[
nRe£rve
/()]==()
REARGUARD
 );

169  
nRe£rve
-- > 
p
->
iSize
 ) 
	`as£π
–
pU8
[nReserve]==0x65 );

170  
p
;

171 
	}
}

176 
	$sqlôe3MemSize
(*
p
){

177 
MemBlockHdr
 *
pHdr
;

178 if–!
p
 ){

181 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

182  ()
pHdr
->
iSize
;

183 
	}
}

188 
	$sqlôe3MemInô
(*
NŸU£d
){

189 
	`UNUSED_PARAMETER
(
NŸU£d
);

190 
	`as£π
–((
MemBlockHdr
)&7) == 0 );

191 if–!
sqlôe3GlobÆC⁄fig
.
bMem°©
 ){

194 
mem
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

196  
SQLITE_OK
;

197 
	}
}

202 
	$sqlôe3MemShutdown
(*
NŸU£d
){

203 
	`UNUSED_PARAMETER
(
NŸU£d
);

204 
mem
.
muãx
 = 0;

205 
	}
}

210 
	$sqlôe3MemRoundup
(
n
){

211  
	`ROUND8
(
n
);

212 
	}
}

219 
	$øndomFûl
(*
pBuf
, 
nByã
){

220 
x
, 
y
, 
r
;

221 
x
 = 
	`SQLITE_PTR_TO_INT
(
pBuf
);

222 
y
 = 
nByã
 | 1;

223  
nByã
 >= 4 ){

224 
x
 = (x>>1) ^ (-()(x&1) & 0xd0000001);

225 
y
 = y*1103515245 + 12345;

226 
r
 = 
x
 ^ 
y
;

227 *(*)
pBuf
 = 
r
;

228 
pBuf
 += 4;

229 
nByã
 -= 4;

231  
nByã
-- > 0 ){

232 
x
 = (x>>1) ^ (-()(x&1) & 0xd0000001);

233 
y
 = y*1103515245 + 12345;

234 
r
 = 
x
 ^ 
y
;

235 *(
pBuf
++Ë
r
 & 0xff;

237 
	}
}

242 *
	$sqlôe3MemMÆloc
(
nByã
){

243 
MemBlockHdr
 *
pHdr
;

244 **
pBt
;

245 *
z
;

246 *
pI¡
;

247 *
p
 = 0;

248 
tŸÆSize
;

249 
nRe£rve
;

250 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

251 
	`as£π
–
mem
.
dißŒow
==0 );

252 
nRe£rve
 = 
	`ROUND8
(
nByã
);

253 
tŸÆSize
 = 
nRe£rve
 + (*
pHdr
) + () +

254 
mem
.
nBackåa˚
*(*Ë+ mem.
nTôÀ
;

255 
p
 = 
	`mÆloc
(
tŸÆSize
);

256 if–
p
 ){

257 
z
 = 
p
;

258 
pBt
 = (**)&
z
[
mem
.
nTôÀ
];

259 
pHdr
 = (
MemBlockHdr
*)&
pBt
[
mem
.
nBackåa˚
];

260 
pHdr
->
pNext
 = 0;

261 
pHdr
->
pPªv
 = 
mem
.
pLa°
;

262 if–
mem
.
pLa°
 ){

263 
mem
.
pLa°
->
pNext
 = 
pHdr
;

265 
mem
.
pFú°
 = 
pHdr
;

267 
mem
.
pLa°
 = 
pHdr
;

268 
pHdr
->
iF‹eGu¨d
 = 
FOREGUARD
;

269 
pHdr
->
eTy≥
 = 
MEMTYPE_HEAP
;

270 
pHdr
->
nBackåa˚SlŸs
 = 
mem
.
nBackåa˚
;

271 
pHdr
->
nTôÀ
 = 
mem
.nTitle;

272 if–
mem
.
nBackåa˚
 ){

273 *
aAddr
[40];

274 
pHdr
->
nBackåa˚
 = 
	`backåa˚
(
aAddr
, 
mem
.nBacktrace+1)-1;

275 
	`mem˝y
(
pBt
, &
aAddr
[1], 
pHdr
->
nBackåa˚
*(*));

276 
	`as£π
(
pBt
[0]);

277 if–
mem
.
xBackåa˚
 ){

278 
mem
.
	`xBackåa˚
(
nByã
, 
pHdr
->
nBackåa˚
-1, &
aAddr
[1]);

281 
pHdr
->
nBackåa˚
 = 0;

283 if–
mem
.
nTôÀ
 ){

284 
	`mem˝y
(
z
, 
mem
.
zTôÀ
, mem.
nTôÀ
);

286 
pHdr
->
iSize
 = 
nByã
;

287 
	`adju°Sèts
(
nByã
, +1);

288 
pI¡
 = (*)&
pHdr
[1];

289 
pI¡
[
nRe£rve
/()] = 
REARGUARD
;

290 
	`øndomFûl
((*)
pI¡
, 
nByã
);

291 
	`mem£t
(((*)
pI¡
)+
nByã
, 0x65, 
nRe£rve
-nByte);

292 
p
 = (*)
pI¡
;

294 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

295  
p
;

296 
	}
}

301 
	$sqlôe3MemFªe
(*
pPri‹
){

302 
MemBlockHdr
 *
pHdr
;

303 **
pBt
;

304 *
z
;

305 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
bMem°©
 || sqlôe3GlobÆC⁄fig.
bC‹eMuãx
==0

306 || 
mem
.
muãx
!=0 );

307 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
pPri‹
);

308 
pBt
 = (**)
pHdr
;

309 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

310 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

311 if–
pHdr
->
pPªv
 ){

312 
	`as£π
–
pHdr
->
pPªv
->
pNext
==pHdr );

313 
pHdr
->
pPªv
->
pNext
 =ÖHdr->pNext;

315 
	`as£π
–
mem
.
pFú°
==
pHdr
 );

316 
mem
.
pFú°
 = 
pHdr
->
pNext
;

318 if–
pHdr
->
pNext
 ){

319 
	`as£π
–
pHdr
->
pNext
->
pPªv
==pHdr );

320 
pHdr
->
pNext
->
pPªv
 =ÖHdr->pPrev;

322 
	`as£π
–
mem
.
pLa°
==
pHdr
 );

323 
mem
.
pLa°
 = 
pHdr
->
pPªv
;

325 
z
 = (*)
pBt
;

326 
z
 -
pHdr
->
nTôÀ
;

327 
	`adju°Sèts
(()
pHdr
->
iSize
, -1);

328 
	`øndomFûl
(
z
, (*)*
pHdr
->
nBackåa˚SlŸs
 + (*pHdr) +

329 ()
pHdr
->
iSize
 + (Ë+ÖHdr->
nTôÀ
);

330 
	`‰ì
(
z
);

331 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

332 
	}
}

343 *
	$sqlôe3MemRóŒoc
(*
pPri‹
, 
nByã
){

344 
MemBlockHdr
 *
pOldHdr
;

345 *
pNew
;

346 
	`as£π
–
mem
.
dißŒow
==0 );

347 
	`as£π
–(
nByã
 & 7)==0 );

348 
pOldHdr
 = 
	`sqlôe3MemsysGëHódî
(
pPri‹
);

349 
pNew
 = 
	`sqlôe3MemMÆloc
(
nByã
);

350 if–
pNew
 ){

351 
	`mem˝y
(
pNew
, 
pPri‹
, ()(
nByã
<
pOldHdr
->
iSize
 ?ÇByte :ÖOldHdr->iSize));

352 if–
nByã
>
pOldHdr
->
iSize
 ){

353 
	`øndomFûl
(&((*)
pNew
)[
pOldHdr
->
iSize
], 
nByã
 - ()pOldHdr->iSize);

355 
	`sqlôe3MemFªe
(
pPri‹
);

357  
pNew
;

358 
	}
}

364 
	$sqlôe3MemSëDeÁu…
(){

365 c⁄° 
sqlôe3_mem_mëhods
 
deÁu…Mëhods
 = {

366 
sqlôe3MemMÆloc
,

367 
sqlôe3MemFªe
,

368 
sqlôe3MemRóŒoc
,

369 
sqlôe3MemSize
,

370 
sqlôe3MemRoundup
,

371 
sqlôe3MemInô
,

372 
sqlôe3MemShutdown
,

375 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
deÁu…Mëhods
);

376 
	}
}

381 
	$sqlôe3MemdebugSëTy≥
(*
p
, 
u8
 
eTy≥
){

382 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

383 
MemBlockHdr
 *
pHdr
;

384 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

385 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

386 
pHdr
->
eTy≥
 =ÉType;

388 
	}
}

399 
	$sqlôe3MemdebugHasTy≥
(*
p
, 
u8
 
eTy≥
){

400 
rc
 = 1;

401 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

402 
MemBlockHdr
 *
pHdr
;

403 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

404 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

405 if–(
pHdr
->
eTy≥
&eType)==0 ){

406 
rc
 = 0;

409  
rc
;

410 
	}
}

421 
	$sqlôe3MemdebugNoTy≥
(*
p
, 
u8
 
eTy≥
){

422 
rc
 = 1;

423 if–
p
 && 
sqlôe3GlobÆC⁄fig
.
m
.
xMÆloc
==
sqlôe3MemMÆloc
 ){

424 
MemBlockHdr
 *
pHdr
;

425 
pHdr
 = 
	`sqlôe3MemsysGëHódî
(
p
);

426 
	`as£π
–
pHdr
->
iF‹eGu¨d
==
FOREGUARD
 );

427 if–(
pHdr
->
eTy≥
&eType)!=0 ){

428 
rc
 = 0;

431  
rc
;

432 
	}
}

439 
	$sqlôe3MemdebugBackåa˚
(
dïth
){

440 if–
dïth
<0 ){ depth = 0; }

441 if–
dïth
>20 ){ depth = 20; }

442 
dïth
 = (depth+1)&0xfe;

443 
mem
.
nBackåa˚
 = 
dïth
;

444 
	}
}

446 
sqlôe3MemdebugBackåa˚CÆlback
((*
xBackåa˚
)(, , **)){

447 
mem
.
xBackåa˚
 = xBacktrace;

448 
	}
}

453 
	$sqlôe3MemdebugSëtôÀ
(c⁄° *
zTôÀ
){

454 
n
 = 
	`sqlôe3SåÀn30
(
zTôÀ
) + 1;

455 
	`sqlôe3_muãx_íãr
(
mem
.
muãx
);

456 if–
n
>=(
mem
.
zTôÀ
) )Ç = (mem.zTitle)-1;

457 
	`mem˝y
(
mem
.
zTôÀ
, zTôÀ, 
n
);

458 
mem
.
zTôÀ
[
n
] = 0;

459 
mem
.
nTôÀ
 = 
	`ROUND8
(
n
);

460 
	`sqlôe3_muãx_Àave
(
mem
.
muãx
);

461 
	}
}

463 
	$sqlôe3MemdebugSync
(){

464 
MemBlockHdr
 *
pHdr
;

465 
pHdr
=
mem
.
pFú°
;ÖHdr;ÖHdrıHdr->
pNext
){

466 **
pBt
 = (**)
pHdr
;

467 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

468 
mem
.
	`xBackåa˚
(()
pHdr
->
iSize
,ÖHdr->
nBackåa˚
-1, &
pBt
[1]);

470 
	}
}

476 
	$sqlôe3MemdebugDump
(c⁄° *
zFûíame
){

477 
FILE
 *
out
;

478 
MemBlockHdr
 *
pHdr
;

479 **
pBt
;

480 
i
;

481 
out
 = 
	`f›í
(
zFûíame
, "w");

482 if–
out
==0 ){

483 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

484 
zFûíame
);

487 
pHdr
=
mem
.
pFú°
;ÖHdr;ÖHdrıHdr->
pNext
){

488 *
z
 = (*)
pHdr
;

489 
z
 -
pHdr
->
nBackåa˚SlŸs
*(*Ë+ÖHdr->
nTôÀ
;

490 
	`Ârötf
(
out
, "**** %lld bytesát %p from %s ****\n",

491 
pHdr
->
iSize
, &pHdr[1],ÖHdr->
nTôÀ
 ? 
z
 : "???");

492 if–
pHdr
->
nBackåa˚
 ){

493 
	`fÊush
(
out
);

494 
pBt
 = (**)
pHdr
;

495 
pBt
 -
pHdr
->
nBackåa˚SlŸs
;

496 
	`backåa˚_symbﬁs_fd
(
pBt
, 
pHdr
->
nBackåa˚
, 
	`fûío
(
out
));

497 
	`Ârötf
(
out
, "\n");

500 
	`Ârötf
(
out
, "COUNTS:\n");

501 
i
=0; i<
NCSIZE
-1; i++){

502 if–
mem
.
nAŒoc
[
i
] ){

503 
	`Ârötf
(
out
, " %5d: %10d %10d %10d\n",

504 
i
*8, 
mem
.
nAŒoc
[i], mem.
nCuºít
[i], mem.
mxCuºít
[i]);

507 if–
mem
.
nAŒoc
[
NCSIZE
-1] ){

508 
	`Ârötf
(
out
, " %5d: %10d %10d %10d\n",

509 
NCSIZE
*8-8, 
mem
.
nAŒoc
[NCSIZE-1],

510 
mem
.
nCuºít
[
NCSIZE
-1], mem.
mxCuºít
[NCSIZE-1]);

512 
	`f˛o£
(
out
);

513 
	}
}

518 
	$sqlôe3MemdebugMÆlocCou¡
(){

519 
i
;

520 
nTŸÆ
 = 0;

521 
i
=0; i<
NCSIZE
; i++){

522 
nTŸÆ
 +
mem
.
nAŒoc
[
i
];

524  
nTŸÆ
;

525 
	}
}

	@mem3.c

26 
	~"sqlôeI¡.h
"

35 #ifde‡
SQLITE_ENABLE_MEMSYS3


40 
	#MX_SMALL
 10

	)

46 
	#N_HASH
 61

	)

80 
Mem3Block
 
	tMem3Block
;

81 
	sMem3Block
 {

84 
u32
 
	m¥evSize
;

85 
u32
 
	msize4x
;

86 } 
	mhdr
;

88 
u32
 
	m√xt
;

89 
u32
 
	m¥ev
;

90 } 
	mli°
;

91 } 
	mu
;

100 
SQLITE_WSD
 
	sMem3GlobÆ
 {

105 
u32
 
	mnPoﬁ
;

106 
Mem3Block
 *
	maPoﬁ
;

111 
	mÆ¨mBusy
;

116 
sqlôe3_muãx
 *
	mmuãx
;

121 
u32
 
	mmnMa°î
;

129 
u32
 
	miMa°î
;

130 
u32
 
	mszMa°î
;

137 
u32
 
	maiSmÆl
[
MX_SMALL
-1];

138 
u32
 
	maiHash
[
N_HASH
];

139 } 
	gmem3
 = { 97535575 };

141 
	#mem3
 
	`GLOBAL
(
Mem3GlobÆ
, 
mem3
)

	)

147 
	$memsys3U∆ökFromLi°
(
u32
 
i
, u32 *
pRoŸ
){

148 
u32
 
√xt
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.next;

149 
u32
 
¥ev
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.prev;

150 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

151 if–
¥ev
==0 ){

152 *
pRoŸ
 = 
√xt
;

154 
mem3
.
aPoﬁ
[
¥ev
].
u
.
li°
.
√xt
 =Çext;

156 if–
√xt
 ){

157 
mem3
.
aPoﬁ
[
√xt
].
u
.
li°
.
¥ev
 =Örev;

159 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
 = 0;

160 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
¥ev
 = 0;

161 
	}
}

167 
	$memsys3U∆ök
(
u32
 
i
){

168 
u32
 
size
, 
hash
;

169 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

170 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 & 1)==0 );

171 
	`as£π
–
i
>=1 );

172 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

173 
	`as£π
–
size
==
mem3
.
aPoﬁ
[
i
+size-1].
u
.
hdr
.
¥evSize
 );

174 
	`as£π
–
size
>=2 );

175 if–
size
 <
MX_SMALL
 ){

176 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiSmÆl
[
size
-2]);

178 
hash
 = 
size
 % 
N_HASH
;

179 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

181 
	}
}

187 
	$memsys3LökI¡oLi°
(
u32
 
i
, u32 *
pRoŸ
){

188 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

189 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
 = *
pRoŸ
;

190 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
¥ev
 = 0;

191 if–*
pRoŸ
 ){

192 
mem3
.
aPoﬁ
[*
pRoŸ
].
u
.
li°
.
¥ev
 = 
i
;

194 *
pRoŸ
 = 
i
;

195 
	}
}

201 
	$memsys3Lök
(
u32
 
i
){

202 
u32
 
size
, 
hash
;

203 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

204 
	`as£π
–
i
>=1 );

205 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 & 1)==0 );

206 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

207 
	`as£π
–
size
==
mem3
.
aPoﬁ
[
i
+size-1].
u
.
hdr
.
¥evSize
 );

208 
	`as£π
–
size
>=2 );

209 if–
size
 <
MX_SMALL
 ){

210 
	`memsys3LökI¡oLi°
(
i
, &
mem3
.
aiSmÆl
[
size
-2]);

212 
hash
 = 
size
 % 
N_HASH
;

213 
	`memsys3LökI¡oLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

215 
	}
}

222 
	$memsys3E¡î
(){

223 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
==0 && 
mem3
.
muãx
==0 ){

224 
mem3
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

226 
	`sqlôe3_muãx_íãr
(
mem3
.
muãx
);

227 
	}
}

228 
	$memsys3Lóve
(){

229 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

230 
	}
}

235 
	$memsys3OutOfMem‹y
(
nByã
){

236 if–!
mem3
.
Æ¨mBusy
 ){

237 
mem3
.
Æ¨mBusy
 = 1;

238 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

239 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

240 
	`sqlôe3_ªÀa£_mem‹y
(
nByã
);

241 
	`sqlôe3_muãx_íãr
(
mem3
.
muãx
);

242 
mem3
.
Æ¨mBusy
 = 0;

244 
	}
}

252 *
	$memsys3Checkout
(
u32
 
i
, u32 
nBlock
){

253 
u32
 
x
;

254 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

255 
	`as£π
–
i
>=1 );

256 
	`as£π
–
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4==
nBlock
 );

257 
	`as£π
–
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
¥evSize
==nBlock );

258 
x
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

259 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 = 
nBlock
*4 | 1 | (
x
&2);

260 
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
¥evSize
 =ÇBlock;

261 
mem3
.
aPoﬁ
[
i
+
nBlock
-1].
u
.
hdr
.
size4x
 |= 2;

262  &
mem3
.
aPoﬁ
[
i
];

263 
	}
}

270 *
	$memsys3FromMa°î
(
u32
 
nBlock
){

271 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

272 
	`as£π
–
mem3
.
szMa°î
>=
nBlock
 );

273 if–
nBlock
>=
mem3
.
szMa°î
-1 ){

275 *
p
 = 
	`memsys3Checkout
(
mem3
.
iMa°î
, mem3.
szMa°î
);

276 
mem3
.
iMa°î
 = 0;

277 
mem3
.
szMa°î
 = 0;

278 
mem3
.
mnMa°î
 = 0;

279  
p
;

282 
u32
 
√wi
, 
x
;

283 
√wi
 = 
mem3
.
iMa°î
 + mem3.
szMa°î
 - 
nBlock
;

284 
	`as£π
–
√wi
 > 
mem3
.
iMa°î
+1 );

285 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = 
nBlock
;

286 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
size4x
 |= 2;

287 
mem3
.
aPoﬁ
[
√wi
-1].
u
.
hdr
.
size4x
 = 
nBlock
*4 + 1;

288 
mem3
.
szMa°î
 -
nBlock
;

289 
mem3
.
aPoﬁ
[
√wi
-1].
u
.
hdr
.
¥evSize
 = mem3.
szMa°î
;

290 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

291 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

292 if–
mem3
.
szMa°î
 < mem3.
mnMa°î
 ){

293 
mem3
.
mnMa°î
 = mem3.
szMa°î
;

295  (*)&
mem3
.
aPoﬁ
[
√wi
];

297 
	}
}

315 
	$memsys3Mîge
(
u32
 *
pRoŸ
){

316 
u32
 
iNext
, 
¥ev
, 
size
, 
i
, 
x
;

318 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

319 
i
=*
pRoŸ
; i>0; i=
iNext
){

320 
iNext
 = 
mem3
.
aPoﬁ
[
i
].
u
.
li°
.
√xt
;

321 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

322 
	`as£π
–(
size
&1)==0 );

323 if–(
size
&2)==0 ){

324 
	`memsys3U∆ökFromLi°
(
i
, 
pRoŸ
);

325 
	`as£π
–
i
 > 
mem3
.
aPoﬁ
[i-1].
u
.
hdr
.
¥evSize
 );

326 
¥ev
 = 
i
 - 
mem3
.
aPoﬁ
[i-1].
u
.
hdr
.
¥evSize
;

327 if–
¥ev
==
iNext
 ){

328 
iNext
 = 
mem3
.
aPoﬁ
[
¥ev
].
u
.
li°
.
√xt
;

330 
	`memsys3U∆ök
(
¥ev
);

331 
size
 = 
i
 + size/4 - 
¥ev
;

332 
x
 = 
mem3
.
aPoﬁ
[
¥ev
-1].
u
.
hdr
.
size4x
 & 2;

333 
mem3
.
aPoﬁ
[
¥ev
-1].
u
.
hdr
.
size4x
 = 
size
*4 | 
x
;

334 
mem3
.
aPoﬁ
[
¥ev
+
size
-1].
u
.
hdr
.
¥evSize
 = size;

335 
	`memsys3Lök
(
¥ev
);

336 
i
 = 
¥ev
;

338 
size
 /= 4;

340 if–
size
>
mem3
.
szMa°î
 ){

341 
mem3
.
iMa°î
 = 
i
;

342 
mem3
.
szMa°î
 = 
size
;

345 
	}
}

354 *
	$memsys3MÆlocUnß„
(
nByã
){

355 
u32
 
i
;

356 
u32
 
nBlock
;

357 
u32
 
toFªe
;

359 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

360 
	`as£π
–(
Mem3Block
)==8 );

361 if–
nByã
<=12 ){

362 
nBlock
 = 2;

364 
nBlock
 = (
nByã
 + 11)/8;

366 
	`as£π
–
nBlock
>=2 );

373 if–
nBlock
 <
MX_SMALL
 ){

374 
i
 = 
mem3
.
aiSmÆl
[
nBlock
-2];

375 if–
i
>0 ){

376 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiSmÆl
[
nBlock
-2]);

377  
	`memsys3Checkout
(
i
, 
nBlock
);

380 
hash
 = 
nBlock
 % 
N_HASH
;

381 
i
=
mem3
.
aiHash
[
hash
]; i>0; i=mem3.
aPoﬁ
[i].
u
.
li°
.
√xt
){

382 if–
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4==
nBlock
 ){

383 
	`memsys3U∆ökFromLi°
(
i
, &
mem3
.
aiHash
[
hash
]);

384  
	`memsys3Checkout
(
i
, 
nBlock
);

393 if–
mem3
.
szMa°î
>=
nBlock
 ){

394  
	`memsys3FromMa°î
(
nBlock
);

405 
toFªe
=
nBlock
*16;ÅoFªe<(
mem3
.
nPoﬁ
*16);ÅoFree *= 2){

406 
	`memsys3OutOfMem‹y
(
toFªe
);

407 if–
mem3
.
iMa°î
 ){

408 
	`memsys3Lök
(
mem3
.
iMa°î
);

409 
mem3
.
iMa°î
 = 0;

410 
mem3
.
szMa°î
 = 0;

412 
i
=0; i<
N_HASH
; i++){

413 
	`memsys3Mîge
(&
mem3
.
aiHash
[
i
]);

415 
i
=0; i<
MX_SMALL
-1; i++){

416 
	`memsys3Mîge
(&
mem3
.
aiSmÆl
[
i
]);

418 if–
mem3
.
szMa°î
 ){

419 
	`memsys3U∆ök
(
mem3
.
iMa°î
);

420 if–
mem3
.
szMa°î
>=
nBlock
 ){

421  
	`memsys3FromMa°î
(
nBlock
);

428 
	}
}

436 
	$memsys3FªeUnß„
(*
pOld
){

437 
Mem3Block
 *
p
 = (Mem3Block*)
pOld
;

438 
i
;

439 
u32
 
size
, 
x
;

440 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem3
.
muãx
) );

441 
	`as£π
–
p
>
mem3
.
aPoﬁ
 &&Ö<&mem3.aPoﬁ[mem3.
nPoﬁ
] );

442 
i
 = 
p
 - 
mem3
.
aPoﬁ
;

443 
	`as£π
–(
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
&1)==1 );

444 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
/4;

445 
	`as£π
–
i
+
size
<=
mem3
.
nPoﬁ
+1 );

446 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
 &= ~1;

447 
mem3
.
aPoﬁ
[
i
+
size
-1].
u
.
hdr
.
¥evSize
 = size;

448 
mem3
.
aPoﬁ
[
i
+
size
-1].
u
.
hdr
.
size4x
 &= ~2;

449 
	`memsys3Lök
(
i
);

452 if–
mem3
.
iMa°î
 ){

453  (
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
&2)==0 ){

454 
size
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
¥evSize
;

455 
mem3
.
iMa°î
 -
size
;

456 
mem3
.
szMa°î
 +
size
;

457 
	`memsys3U∆ök
(
mem3
.
iMa°î
);

458 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

459 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

460 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = mem3.szMaster;

462 
x
 = 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 & 2;

463  (
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
size4x
&1)==0 ){

464 
	`memsys3U∆ök
(
mem3
.
iMa°î
+mem3.
szMa°î
);

465 
mem3
.
szMa°î
 +mem3.
aPoﬁ
[mem3.
iMa°î
+mem3.szMa°î-1].
u
.
hdr
.
size4x
/4;

466 
mem3
.
aPoﬁ
[mem3.
iMa°î
-1].
u
.
hdr
.
size4x
 = mem3.
szMa°î
*4 | 
x
;

467 
mem3
.
aPoﬁ
[mem3.
iMa°î
+mem3.
szMa°î
-1].
u
.
hdr
.
¥evSize
 = mem3.szMaster;

470 
	}
}

477 
	$memsys3Size
(*
p
){

478 
Mem3Block
 *
pBlock
;

479 
	`as£π
–
p
!=0 );

480 
pBlock
 = (
Mem3Block
*)
p
;

481 
	`as£π
–(
pBlock
[-1].
u
.
hdr
.
size4x
&1)!=0 );

482  (
pBlock
[-1].
u
.
hdr
.
size4x
&~3)*2 - 4;

483 
	}
}

488 
	$memsys3Roundup
(
n
){

489 if–
n
<=12 ){

492  ((
n
+11)&~7) - 4;

494 
	}
}

499 *
	$memsys3MÆloc
(
nByãs
){

500 
sqlôe3_öt64
 *
p
;

501 
	`as£π
–
nByãs
>0 );

502 
	`memsys3E¡î
();

503 
p
 = 
	`memsys3MÆlocUnß„
(
nByãs
);

504 
	`memsys3Lóve
();

505  (*)
p
;

506 
	}
}

511 
	$memsys3Fªe
(*
pPri‹
){

512 
	`as£π
–
pPri‹
 );

513 
	`memsys3E¡î
();

514 
	`memsys3FªeUnß„
(
pPri‹
);

515 
	`memsys3Lóve
();

516 
	}
}

521 *
	$memsys3RóŒoc
(*
pPri‹
, 
nByãs
){

522 
nOld
;

523 *
p
;

524 if–
pPri‹
==0 ){

525  
	`sqlôe3_mÆloc
(
nByãs
);

527 if–
nByãs
<=0 ){

528 
	`sqlôe3_‰ì
(
pPri‹
);

531 
nOld
 = 
	`memsys3Size
(
pPri‹
);

532 if–
nByãs
<=
nOld
 &&ÇBytes>=nOld-128 ){

533  
pPri‹
;

535 
	`memsys3E¡î
();

536 
p
 = 
	`memsys3MÆlocUnß„
(
nByãs
);

537 if–
p
 ){

538 if–
nOld
<
nByãs
 ){

539 
	`mem˝y
(
p
, 
pPri‹
, 
nOld
);

541 
	`mem˝y
(
p
, 
pPri‹
, 
nByãs
);

543 
	`memsys3FªeUnß„
(
pPri‹
);

545 
	`memsys3Lóve
();

546  
p
;

547 
	}
}

552 
	$memsys3Inô
(*
NŸU£d
){

553 
	`UNUSED_PARAMETER
(
NŸU£d
);

554 if–!
sqlôe3GlobÆC⁄fig
.
pHóp
 ){

555  
SQLITE_ERROR
;

559 
	`as£π
–(
Mem3Block
)==8 );

560 
mem3
.
aPoﬁ
 = (
Mem3Block
 *)
sqlôe3GlobÆC⁄fig
.
pHóp
;

561 
mem3
.
nPoﬁ
 = (
sqlôe3GlobÆC⁄fig
.
nHóp
 / (
Mem3Block
)) - 2;

564 
mem3
.
szMa°î
 = mem3.
nPoﬁ
;

565 
mem3
.
mnMa°î
 = mem3.
szMa°î
;

566 
mem3
.
iMa°î
 = 1;

567 
mem3
.
aPoﬁ
[0].
u
.
hdr
.
size4x
 = (mem3.
szMa°î
<<2) + 2;

568 
mem3
.
aPoﬁ
[mem3.
nPoﬁ
].
u
.
hdr
.
¥evSize
 = mem3.nPool;

569 
mem3
.
aPoﬁ
[mem3.
nPoﬁ
].
u
.
hdr
.
size4x
 = 1;

571  
SQLITE_OK
;

572 
	}
}

577 
	$memsys3Shutdown
(*
NŸU£d
){

578 
	`UNUSED_PARAMETER
(
NŸU£d
);

579 
mem3
.
muãx
 = 0;

581 
	}
}

589 
	$sqlôe3Memsys3Dump
(c⁄° *
zFûíame
){

590 #ifde‡
SQLITE_DEBUG


591 
FILE
 *
out
;

592 
u32
 
i
, 
j
;

593 
u32
 
size
;

594 if–
zFûíame
==0 || zFilename[0]==0 ){

595 
out
 = 
°dout
;

597 
out
 = 
	`f›í
(
zFûíame
, "w");

598 if–
out
==0 ){

599 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

600 
zFûíame
);

604 
	`memsys3E¡î
();

605 
	`Ârötf
(
out
, "CHUNKS:\n");

606 
i
=1; i<=
mem3
.
nPoﬁ
; i+=
size
/4){

607 
size
 = 
mem3
.
aPoﬁ
[
i
-1].
u
.
hdr
.
size4x
;

608 if–
size
/4<=1 ){

609 
	`Ârötf
(
out
, "%∞sizêîr‹\n", &
mem3
.
aPoﬁ
[
i
]);

610 
	`as£π
( 0 );

613 if–(
size
&1)==0 && 
mem3
.
aPoﬁ
[
i
+size/4-1].
u
.
hdr
.
¥evSize
!=size/4 ){

614 
	`Ârötf
(
out
, "%∞èû sizêd€†nŸ m©ch\n", &
mem3
.
aPoﬁ
[
i
]);

615 
	`as£π
( 0 );

618 if–((
mem3
.
aPoﬁ
[
i
+
size
/4-1].
u
.
hdr
.
size4x
&2)>>1)!=(size&1) ){

619 
	`Ârötf
(
out
, "%∞èû checkouàbô i†öc‹ª˘\n", &
mem3
.
aPoﬁ
[
i
]);

620 
	`as£π
( 0 );

623 if–
size
&1 ){

624 
	`Ârötf
(
out
, "%∞%6d byã†checked out\n", &
mem3
.
aPoﬁ
[
i
], (
size
/4)*8-8);

626 
	`Ârötf
(
out
, "%∞%6d byã†‰ì%s\n", &
mem3
.
aPoﬁ
[
i
], (
size
/4)*8-8,

627 
i
==
mem3
.
iMa°î
 ? " **master**" : "");

630 
i
=0; i<
MX_SMALL
-1; i++){

631 if–
mem3
.
aiSmÆl
[
i
]==0 ) ;

632 
	`Ârötf
(
out
, "smÆl(%2d):", 
i
);

633 
j
 = 
mem3
.
aiSmÆl
[
i
]; j>0; j=mem3.
aPoﬁ
[j].
u
.
li°
.
√xt
){

634 
	`Ârötf
(
out
, " %p(%d)", &
mem3
.
aPoﬁ
[
j
],

635 (
mem3
.
aPoﬁ
[
j
-1].
u
.
hdr
.
size4x
/4)*8-8);

637 
	`Ârötf
(
out
, "\n");

639 
i
=0; i<
N_HASH
; i++){

640 if–
mem3
.
aiHash
[
i
]==0 ) ;

641 
	`Ârötf
(
out
, "hash(%2d):", 
i
);

642 
j
 = 
mem3
.
aiHash
[
i
]; j>0; j=mem3.
aPoﬁ
[j].
u
.
li°
.
√xt
){

643 
	`Ârötf
(
out
, " %p(%d)", &
mem3
.
aPoﬁ
[
j
],

644 (
mem3
.
aPoﬁ
[
j
-1].
u
.
hdr
.
size4x
/4)*8-8);

646 
	`Ârötf
(
out
, "\n");

648 
	`Ârötf
(
out
, "ma°î=%d\n", 
mem3
.
iMa°î
);

649 
	`Ârötf
(
out
, "nowU£d=%d\n", 
mem3
.
nPoﬁ
*8 - mem3.
szMa°î
*8);

650 
	`Ârötf
(
out
, "mxU£d=%d\n", 
mem3
.
nPoﬁ
*8 - mem3.
mnMa°î
*8);

651 
	`sqlôe3_muãx_Àave
(
mem3
.
muãx
);

652 if–
out
==
°dout
 ){

653 
	`fÊush
(
°dout
);

655 
	`f˛o£
(
out
);

658 
	`UNUSED_PARAMETER
(
zFûíame
);

660 
	}
}

673 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëMemsys3
(){

674 c⁄° 
sqlôe3_mem_mëhods
 
mempoﬁMëhods
 = {

675 
memsys3MÆloc
,

676 
memsys3Fªe
,

677 
memsys3RóŒoc
,

678 
memsys3Size
,

679 
memsys3Roundup
,

680 
memsys3Inô
,

681 
memsys3Shutdown
,

684  &
mempoﬁMëhods
;

685 
	}
}

	@mem5.c

51 
	~"sqlôeI¡.h
"

57 #ifde‡
SQLITE_ENABLE_MEMSYS5


67 
Mem5Lök
 
	tMem5Lök
;

68 
	sMem5Lök
 {

69 
	m√xt
;

70 
	m¥ev
;

78 
	#LOGMAX
 30

	)

83 
	#CTRL_LOGSIZE
 0x1‡

	)

84 
	#CTRL_FREE
 0x20

	)

92 
SQLITE_WSD
 
	sMem5GlobÆ
 {

96 
	mszAtom
;

97 
	mnBlock
;

98 
u8
 *
	mzPoﬁ
;

103 
sqlôe3_muãx
 *
	mmuãx
;

105 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

109 
u64
 
	mnAŒoc
;

110 
u64
 
	mtŸÆAŒoc
;

111 
u64
 
	mtŸÆEx˚ss
;

112 
u32
 
	mcuºítOut
;

113 
u32
 
	mcuºítCou¡
;

114 
u32
 
	mmaxOut
;

115 
u32
 
	mmaxCou¡
;

116 
u32
 
	mmaxReque°
;

124 
	maiFªñi°
[
LOGMAX
+1];

130 
u8
 *
	maCål
;

132 } 
	gmem5
;

137 
	#mem5
 
	`GLOBAL
(
Mem5GlobÆ
, 
mem5
)

	)

143 
	#MEM5LINK
(
idx
Ë((
Mem5Lök
 *)(&
mem5
.
zPoﬁ
[(idx)*mem5.
szAtom
]))

	)

149 
	$memsys5U∆ök
(
i
, 
iLogsize
){

150 
√xt
, 
¥ev
;

151 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

152 
	`as£π
–
iLogsize
>=0 && iLogsize<=
LOGMAX
 );

153 
	`as£π
–(
mem5
.
aCål
[
i
] & 
CTRL_LOGSIZE
)==
iLogsize
 );

155 
√xt
 = 
	`MEM5LINK
(
i
)->next;

156 
¥ev
 = 
	`MEM5LINK
(
i
)->prev;

157 if–
¥ev
<0 ){

158 
mem5
.
aiFªñi°
[
iLogsize
] = 
√xt
;

160 
	`MEM5LINK
(
¥ev
)->
√xt
 =Çext;

162 if–
√xt
>=0 ){

163 
	`MEM5LINK
(
√xt
)->
¥ev
 =Örev;

165 
	}
}

171 
	$memsys5Lök
(
i
, 
iLogsize
){

172 
x
;

173 
	`as£π
–
	`sqlôe3_muãx_hñd
(
mem5
.
muãx
) );

174 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

175 
	`as£π
–
iLogsize
>=0 && iLogsize<=
LOGMAX
 );

176 
	`as£π
–(
mem5
.
aCål
[
i
] & 
CTRL_LOGSIZE
)==
iLogsize
 );

178 
x
 = 
	`MEM5LINK
(
i
)->
√xt
 = 
mem5
.
aiFªñi°
[
iLogsize
];

179 
	`MEM5LINK
(
i
)->
¥ev
 = -1;

180 if–
x
>=0 ){

181 
	`as£π
–
x
<
mem5
.
nBlock
 );

182 
	`MEM5LINK
(
x
)->
¥ev
 = 
i
;

184 
mem5
.
aiFªñi°
[
iLogsize
] = 
i
;

185 
	}
}

190 
	$memsys5E¡î
(){

191 
	`sqlôe3_muãx_íãr
(
mem5
.
muãx
);

192 
	}
}

193 
	$memsys5Lóve
(){

194 
	`sqlôe3_muãx_Àave
(
mem5
.
muãx
);

195 
	}
}

201 
	$memsys5Size
(*
p
){

202 
iSize
, 
i
;

203 
	`as£π
–
p
!=0 );

204 
i
 = ()(((
u8
 *)
p
-
mem5
.
zPoﬁ
)/mem5.
szAtom
);

205 
	`as£π
–
i
>=0 && i<
mem5
.
nBlock
 );

206 
iSize
 = 
mem5
.
szAtom
 * (1 << (mem5.
aCål
[
i
]&
CTRL_LOGSIZE
));

207  
iSize
;

208 
	}
}

220 *
	$memsys5MÆlocUnß„
(
nByã
){

221 
i
;

222 
iBö
;

223 
iFuŒSz
;

224 
iLogsize
;

227 
	`as£π
–
nByã
>0 );

230 if–
nByã
 > 0x40000000 )  0;

232 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

235 if–(
u32
)
nByã
>
mem5
.
maxReque°
 ){

236 
mem5
.
maxReque°
 = 
nByã
;

242 
iFuŒSz
=
mem5
.
szAtom
,
iLogsize
=0; iFuŒSz<
nByã
; iFullSz*=2,iLogsize++){}

248 
iBö
=
iLogsize
; iBö<=
LOGMAX
 && 
mem5
.
aiFªñi°
[iBin]<0; iBin++){}

249 if–
iBö
>
LOGMAX
 ){

250 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

251 
	`sqlôe3_log
(
SQLITE_NOMEM
, "ÁûedÅÿÆloˇã %u byãs", 
nByã
);

254 
i
 = 
mem5
.
aiFªñi°
[
iBö
];

255 
	`memsys5U∆ök
(
i
, 
iBö
);

256  
iBö
>
iLogsize
 ){

257 
√wSize
;

259 
iBö
--;

260 
√wSize
 = 1 << 
iBö
;

261 
mem5
.
aCål
[
i
+
√wSize
] = 
CTRL_FREE
 | 
iBö
;

262 
	`memsys5Lök
(
i
+
√wSize
, 
iBö
);

264 
mem5
.
aCål
[
i
] = 
iLogsize
;

266 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

268 
mem5
.
nAŒoc
++;

269 
mem5
.
tŸÆAŒoc
 +
iFuŒSz
;

270 
mem5
.
tŸÆEx˚ss
 +
iFuŒSz
 - 
nByã
;

271 
mem5
.
cuºítCou¡
++;

272 
mem5
.
cuºítOut
 +
iFuŒSz
;

273 if–
mem5
.
maxCou¡
<mem5.
cuºítCou¡
 ) mem5.maxCount = mem5.currentCount;

274 if–
mem5
.
maxOut
<mem5.
cuºítOut
 ) mem5.maxOut = mem5.currentOut;

277 #ifde‡
SQLITE_DEBUG


280 
	`mem£t
(&
mem5
.
zPoﬁ
[
i
*mem5.
szAtom
], 0xAA, 
iFuŒSz
);

284  (*)&
mem5
.
zPoﬁ
[
i
*mem5.
szAtom
];

285 
	}
}

290 
	$memsys5FªeUnß„
(*
pOld
){

291 
u32
 
size
, 
iLogsize
;

292 
iBlock
;

297 
iBlock
 = ()(((
u8
 *)
pOld
-
mem5
.
zPoﬁ
)/mem5.
szAtom
);

300 
	`as£π
–
iBlock
>=0 && iBlock<
mem5
.
nBlock
 );

301 
	`as£π
–((
u8
 *)
pOld
-
mem5
.
zPoﬁ
)%mem5.
szAtom
==0 );

302 
	`as£π
–(
mem5
.
aCål
[
iBlock
] & 
CTRL_FREE
)==0 );

304 
iLogsize
 = 
mem5
.
aCål
[
iBlock
] & 
CTRL_LOGSIZE
;

305 
size
 = 1<<
iLogsize
;

306 
	`as£π
–
iBlock
+
size
-1<(
u32
)
mem5
.
nBlock
 );

308 
mem5
.
aCål
[
iBlock
] |
CTRL_FREE
;

309 
mem5
.
aCål
[
iBlock
+
size
-1] |
CTRL_FREE
;

311 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

312 
	`as£π
–
mem5
.
cuºítCou¡
>0 );

313 
	`as£π
–
mem5
.
cuºítOut
>=(
size
*mem5.
szAtom
) );

314 
mem5
.
cuºítCou¡
--;

315 
mem5
.
cuºítOut
 -
size
*mem5.
szAtom
;

316 
	`as£π
–
mem5
.
cuºítOut
>0 || mem5.
cuºítCou¡
==0 );

317 
	`as£π
–
mem5
.
cuºítCou¡
>0 || mem5.
cuºítOut
==0 );

320 
mem5
.
aCål
[
iBlock
] = 
CTRL_FREE
 | 
iLogsize
;

321  
	`ALWAYS
(
iLogsize
<
LOGMAX
) ){

322 
iBuddy
;

323 if–(
iBlock
>>
iLogsize
) & 1 ){

324 
iBuddy
 = 
iBlock
 - 
size
;

325 
	`as£π
–
iBuddy
>=0 );

327 
iBuddy
 = 
iBlock
 + 
size
;

328 if–
iBuddy
>=
mem5
.
nBlock
 ) ;

330 if–
mem5
.
aCål
[
iBuddy
]!=(
CTRL_FREE
 | 
iLogsize
) ) ;

331 
	`memsys5U∆ök
(
iBuddy
, 
iLogsize
);

332 
iLogsize
++;

333 if–
iBuddy
<
iBlock
 ){

334 
mem5
.
aCål
[
iBuddy
] = 
CTRL_FREE
 | 
iLogsize
;

335 
mem5
.
aCål
[
iBlock
] = 0;

336 
iBlock
 = 
iBuddy
;

338 
mem5
.
aCål
[
iBlock
] = 
CTRL_FREE
 | 
iLogsize
;

339 
mem5
.
aCål
[
iBuddy
] = 0;

341 
size
 *= 2;

344 #ifde‡
SQLITE_DEBUG


347 
	`mem£t
(&
mem5
.
zPoﬁ
[
iBlock
*mem5.
szAtom
], 0x55, 
size
);

350 
	`memsys5Lök
(
iBlock
, 
iLogsize
);

351 
	}
}

356 *
	$memsys5MÆloc
(
nByãs
){

357 
sqlôe3_öt64
 *
p
 = 0;

358 if–
nByãs
>0 ){

359 
	`memsys5E¡î
();

360 
p
 = 
	`memsys5MÆlocUnß„
(
nByãs
);

361 
	`memsys5Lóve
();

363  (*)
p
;

364 
	}
}

372 
	$memsys5Fªe
(*
pPri‹
){

373 
	`as£π
–
pPri‹
!=0 );

374 
	`memsys5E¡î
();

375 
	`memsys5FªeUnß„
(
pPri‹
);

376 
	`memsys5Lóve
();

377 
	}
}

391 *
	$memsys5RóŒoc
(*
pPri‹
, 
nByãs
){

392 
nOld
;

393 *
p
;

394 
	`as£π
–
pPri‹
!=0 );

395 
	`as£π
–(
nByãs
&(nBytes-1))==0 );

396 
	`as£π
–
nByãs
>=0 );

397 if–
nByãs
==0 ){

400 
nOld
 = 
	`memsys5Size
(
pPri‹
);

401 if–
nByãs
<=
nOld
 ){

402  
pPri‹
;

404 
p
 = 
	`memsys5MÆloc
(
nByãs
);

405 if–
p
 ){

406 
	`mem˝y
(
p
, 
pPri‹
, 
nOld
);

407 
	`memsys5Fªe
(
pPri‹
);

409  
p
;

410 
	}
}

421 
	$memsys5Roundup
(
n
){

422 
iFuŒSz
;

423 if–
n
 > 0x40000000 )  0;

424 
iFuŒSz
=
mem5
.
szAtom
; iFuŒSz<
n
; iFullSz *= 2);

425  
iFuŒSz
;

426 
	}
}

438 
	$memsys5Log
(
iVÆue
){

439 
iLog
;

440 
iLog
=0; (iLog<()((()*8)-1)Ë&& (1<<iLog)<
iVÆue
; iLog++);

441  
iLog
;

442 
	}
}

450 
	$memsys5Inô
(*
NŸU£d
){

451 
ii
;

452 
nByã
;

453 
u8
 *
zByã
;

454 
nMöLog
;

455 
iOff£t
;

457 
	`UNUSED_PARAMETER
(
NŸU£d
);

460 
mem5
.
muãx
 = 0;

465 
	`as£π
–((
Mem5Lök
)&((Mem5Link)-1))==0 );

467 
nByã
 = 
sqlôe3GlobÆC⁄fig
.
nHóp
;

468 
zByã
 = (
u8
*)
sqlôe3GlobÆC⁄fig
.
pHóp
;

469 
	`as£π
–
zByã
!=0 );

472 
nMöLog
 = 
	`memsys5Log
(
sqlôe3GlobÆC⁄fig
.
mnReq
);

473 
mem5
.
szAtom
 = (1<<
nMöLog
);

474  ()(
Mem5Lök
)>
mem5
.
szAtom
 ){

475 
mem5
.
szAtom
 = mem5.szAtom << 1;

478 
mem5
.
nBlock
 = (
nByã
 / (mem5.
szAtom
+(
u8
)));

479 
mem5
.
zPoﬁ
 = 
zByã
;

480 
mem5
.
aCål
 = (
u8
 *)&mem5.
zPoﬁ
[mem5.
nBlock
*mem5.
szAtom
];

482 
ii
=0; ii<=
LOGMAX
; ii++){

483 
mem5
.
aiFªñi°
[
ii
] = -1;

486 
iOff£t
 = 0;

487 
ii
=
LOGMAX
; ii>=0; ii--){

488 
nAŒoc
 = (1<<
ii
);

489 if–(
iOff£t
+
nAŒoc
)<=
mem5
.
nBlock
 ){

490 
mem5
.
aCål
[
iOff£t
] = 
ii
 | 
CTRL_FREE
;

491 
	`memsys5Lök
(
iOff£t
, 
ii
);

492 
iOff£t
 +
nAŒoc
;

494 
	`as£π
((
iOff£t
+
nAŒoc
)>
mem5
.
nBlock
);

498 if–
sqlôe3GlobÆC⁄fig
.
bMem°©
==0 ){

499 
mem5
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
);

502  
SQLITE_OK
;

503 
	}
}

508 
	$memsys5Shutdown
(*
NŸU£d
){

509 
	`UNUSED_PARAMETER
(
NŸU£d
);

510 
mem5
.
muãx
 = 0;

512 
	}
}

514 #ifde‡
SQLITE_TEST


519 
	$sqlôe3Memsys5Dump
(c⁄° *
zFûíame
){

520 
FILE
 *
out
;

521 
i
, 
j
, 
n
;

522 
nMöLog
;

524 if–
zFûíame
==0 || zFilename[0]==0 ){

525 
out
 = 
°dout
;

527 
out
 = 
	`f›í
(
zFûíame
, "w");

528 if–
out
==0 ){

529 
	`Ârötf
(
°dîr
, "** UnableÅo output memory debug outputÜog: %s **\n",

530 
zFûíame
);

534 
	`memsys5E¡î
();

535 
nMöLog
 = 
	`memsys5Log
(
mem5
.
szAtom
);

536 
i
=0; i<=
LOGMAX
 && i+
nMöLog
<32; i++){

537 
n
=0, 
j
=
mem5
.
aiFªñi°
[
i
]; j>=0; j = 
	`MEM5LINK
(j)->
√xt
,Ç++){}

538 
	`Ârötf
(
out
, "‰ìli° iãm†o‡sizê%d: %d\n", 
mem5
.
szAtom
 << 
i
, 
n
);

540 
	`Ârötf
(
out
, "mem5.nAŒo¯ = %Œu\n", 
mem5
.
nAŒoc
);

541 
	`Ârötf
(
out
, "mem5.tŸÆAŒo¯ = %Œu\n", 
mem5
.
tŸÆAŒoc
);

542 
	`Ârötf
(
out
, "mem5.tŸÆEx˚s† = %Œu\n", 
mem5
.
tŸÆEx˚ss
);

543 
	`Ârötf
(
out
, "mem5.cuºítOuà = %u\n", 
mem5
.
cuºítOut
);

544 
	`Ârötf
(
out
, "mem5.cuºítCou¡ = %u\n", 
mem5
.
cuºítCou¡
);

545 
	`Ârötf
(
out
, "mem5.maxOuà = %u\n", 
mem5
.
maxOut
);

546 
	`Ârötf
(
out
, "mem5.maxCou¡ = %u\n", 
mem5
.
maxCou¡
);

547 
	`Ârötf
(
out
, "mem5.maxReque° = %u\n", 
mem5
.
maxReque°
);

548 
	`memsys5Lóve
();

549 if–
out
==
°dout
 ){

550 
	`fÊush
(
°dout
);

552 
	`f˛o£
(
out
);

554 
	}
}

562 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëMemsys5
(){

563 c⁄° 
sqlôe3_mem_mëhods
 
memsys5Mëhods
 = {

564 
memsys5MÆloc
,

565 
memsys5Fªe
,

566 
memsys5RóŒoc
,

567 
memsys5Size
,

568 
memsys5Roundup
,

569 
memsys5Inô
,

570 
memsys5Shutdown
,

573  &
memsys5Mëhods
;

574 
	}
}

	@memjournal.c

26 
	~"sqlôeI¡.h
"

29 
MemJou∫Æ
 
	tMemJou∫Æ
;

30 
FûePoöt
 
	tFûePoöt
;

31 
FûeChunk
 
	tFûeChunk
;

39 
	sFûeChunk
 {

40 
FûeChunk
 *
	mpNext
;

41 
u8
 
	mzChunk
[8];

47 
	#MEMJOURNAL_DFLT_FILECHUNKSIZE
 1024

	)

53 
	#fûeChunkSize
(
nChunkSize
Ë((
FûeChunk
Ë+ (“ChunkSize)-8))

	)

59 
	sFûePoöt
 {

60 
sqlôe3_öt64
 
	miOff£t
;

61 
FûeChunk
 *
	mpChunk
;

68 
	sMemJou∫Æ
 {

69 c⁄° 
sqlôe3_io_mëhods
 *
	mpMëhod
;

70 
	mnChunkSize
;

72 
	mnSpûl
;

73 
	mnSize
;

74 
FûeChunk
 *
	mpFú°
;

75 
FûePoöt
 
	mídpoöt
;

76 
FûePoöt
 
	mªadpoöt
;

78 
	mÊags
;

79 
sqlôe3_vfs
 *
	mpVfs
;

80 c⁄° *
	mzJou∫Æ
;

87 
	$memj∫lRód
(

88 
sqlôe3_fûe
 *
pJfd
,

89 *
zBuf
,

90 
iAmt
,

91 
sqlôe_öt64
 
iOf°


93 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

94 
u8
 *
zOut
 = 
zBuf
;

95 
nRód
 = 
iAmt
;

96 
iChunkOff£t
;

97 
FûeChunk
 *
pChunk
;

99 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


100 if–(
iAmt
+
iOf°
)>
p
->
ídpoöt
.
iOff£t
 ){

101  
SQLITE_IOERR_SHORT_READ
;

105 
	`as£π
–(
iAmt
+
iOf°
)<=
p
->
ídpoöt
.
iOff£t
 );

106 
	`as£π
–
p
->
ªadpoöt
.
iOff£t
==0 ||Ö->ªadpoöt.
pChunk
!=0 );

107 if–
p
->
ªadpoöt
.
iOff£t
!=
iOf°
 || iOfst==0 ){

108 
sqlôe3_öt64
 
iOff
 = 0;

109 
pChunk
=
p
->
pFú°
;

110 
	`ALWAYS
(
pChunk
Ë&& (
iOff
+
p
->
nChunkSize
)<=
iOf°
;

111 
pChunk
ıChunk->
pNext


113 
iOff
 +
p
->
nChunkSize
;

116 
pChunk
 = 
p
->
ªadpoöt
.pChunk;

117 
	`as£π
–
pChunk
!=0 );

120 
iChunkOff£t
 = ()(
iOf°
%
p
->
nChunkSize
);

122 
iS∑˚
 = 
p
->
nChunkSize
 - 
iChunkOff£t
;

123 
nC›y
 = 
	`MIN
(
nRód
, (
p
->
nChunkSize
 - 
iChunkOff£t
));

124 
	`mem˝y
(
zOut
, (
u8
*)
pChunk
->
zChunk
 + 
iChunkOff£t
, 
nC›y
);

125 
zOut
 +
nC›y
;

126 
nRód
 -
iS∑˚
;

127 
iChunkOff£t
 = 0;

128 }  
nRód
>=0 && (
pChunk
ıChunk->
pNext
)!=0 &&ÇRead>0 );

129 
p
->
ªadpoöt
.
iOff£t
 = 
pChunk
 ? 
iOf°
+
iAmt
 : 0;

130 
p
->
ªadpoöt
.
pChunk
 =ÖChunk;

132  
SQLITE_OK
;

133 
	}
}

138 
	$memj∫lFªeChunks
(
MemJou∫Æ
 *
p
){

139 
FûeChunk
 *
pIãr
;

140 
FûeChunk
 *
pNext
;

141 
pIãr
=
p
->
pFú°
;ÖIãr;ÖIãr=
pNext
){

142 
pNext
 = 
pIãr
->pNext;

143 
	`sqlôe3_‰ì
(
pIãr
);

145 
p
->
pFú°
 = 0;

146 
	}
}

151 
	$memj∫lCª©eFûe
(
MemJou∫Æ
 *
p
){

152 
rc
;

153 
sqlôe3_fûe
 *
pRól
 = (sqlôe3_fûe*)
p
;

154 
MemJou∫Æ
 
c›y
 = *
p
;

156 
	`mem£t
(
p
, 0, (
MemJou∫Æ
));

157 
rc
 = 
	`sqlôe3OsO≥n
(
c›y
.
pVfs
, c›y.
zJou∫Æ
, 
pRól
, c›y.
Êags
, 0);

158 if–
rc
==
SQLITE_OK
 ){

159 
nChunk
 = 
c›y
.
nChunkSize
;

160 
i64
 
iOff
 = 0;

161 
FûeChunk
 *
pIãr
;

162 
pIãr
=
c›y
.
pFú°
;ÖIãr;ÖIãrıIãr->
pNext
){

163 if–
iOff
 + 
nChunk
 > 
c›y
.
ídpoöt
.
iOff£t
 ){

164 
nChunk
 = 
c›y
.
ídpoöt
.
iOff£t
 - 
iOff
;

166 
rc
 = 
	`sqlôe3OsWrôe
(
pRól
, (
u8
*)
pIãr
->
zChunk
, 
nChunk
, 
iOff
);

167 if–
rc
 ) ;

168 
iOff
 +
nChunk
;

170 if–
rc
==
SQLITE_OK
 ){

172 
	`memj∫lFªeChunks
(&
c›y
);

175 if–
rc
!=
SQLITE_OK
 ){

180 
	`sqlôe3OsClo£
(
pRól
);

181 *
p
 = 
c›y
;

183  
rc
;

184 
	}
}

190 
	$memj∫lWrôe
(

191 
sqlôe3_fûe
 *
pJfd
,

192 c⁄° *
zBuf
,

193 
iAmt
,

194 
sqlôe_öt64
 
iOf°


196 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

197 
nWrôe
 = 
iAmt
;

198 
u8
 *
zWrôe
 = (u8 *)
zBuf
;

202 if–
p
->
nSpûl
>0 && (
iAmt
+
iOf°
)>p->nSpill ){

203 
rc
 = 
	`memj∫lCª©eFûe
(
p
);

204 if–
rc
==
SQLITE_OK
 ){

205 
rc
 = 
	`sqlôe3OsWrôe
(
pJfd
, 
zBuf
, 
iAmt
, 
iOf°
);

207  
rc
;

217 
	`as£π
–
iOf°
==
p
->
ídpoöt
.
iOff£t
 || iOfst==0 );

218 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


219 if–
iOf°
==0 && 
p
->
pFú°
 ){

220 
	`as£π
–
p
->
nChunkSize
>
iAmt
 );

221 
	`mem˝y
((
u8
*)
p
->
pFú°
->
zChunk
, 
zBuf
, 
iAmt
);

224 
	`as£π
–
iOf°
>0 || 
p
->
pFú°
==0 );

227  
nWrôe
>0 ){

228 
FûeChunk
 *
pChunk
 = 
p
->
ídpoöt
.pChunk;

229 
iChunkOff£t
 = ()(
p
->
ídpoöt
.
iOff£t
%p->
nChunkSize
);

230 
iS∑˚
 = 
	`MIN
(
nWrôe
, 
p
->
nChunkSize
 - 
iChunkOff£t
);

232 if–
iChunkOff£t
==0 ){

234 
FûeChunk
 *
pNew
 = 
	`sqlôe3_mÆloc
(
	`fûeChunkSize
(
p
->
nChunkSize
));

235 if–!
pNew
 ){

236  
SQLITE_IOERR_NOMEM_BKPT
;

238 
pNew
->
pNext
 = 0;

239 if–
pChunk
 ){

240 
	`as£π
–
p
->
pFú°
 );

241 
pChunk
->
pNext
 = 
pNew
;

243 
	`as£π
–!
p
->
pFú°
 );

244 
p
->
pFú°
 = 
pNew
;

246 
p
->
ídpoöt
.
pChunk
 = 
pNew
;

249 
	`mem˝y
((
u8
*)
p
->
ídpoöt
.
pChunk
->
zChunk
 + 
iChunkOff£t
, 
zWrôe
, 
iS∑˚
);

250 
zWrôe
 +
iS∑˚
;

251 
nWrôe
 -
iS∑˚
;

252 
p
->
ídpoöt
.
iOff£t
 +
iS∑˚
;

254 
p
->
nSize
 = 
iAmt
 + 
iOf°
;

258  
SQLITE_OK
;

259 
	}
}

268 
	$memj∫lTrunˇã
(
sqlôe3_fûe
 *
pJfd
, 
sqlôe_öt64
 
size
){

269 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

270 if–
	`ALWAYS
(
size
==0) ){

271 
	`memj∫lFªeChunks
(
p
);

272 
p
->
nSize
 = 0;

273 
p
->
ídpoöt
.
pChunk
 = 0;

274 
p
->
ídpoöt
.
iOff£t
 = 0;

275 
p
->
ªadpoöt
.
pChunk
 = 0;

276 
p
->
ªadpoöt
.
iOff£t
 = 0;

278  
SQLITE_OK
;

279 
	}
}

284 
	$memj∫lClo£
(
sqlôe3_fûe
 *
pJfd
){

285 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

286 
	`memj∫lFªeChunks
(
p
);

287  
SQLITE_OK
;

288 
	}
}

296 
	$memj∫lSync
(
sqlôe3_fûe
 *
pJfd
, 
Êags
){

297 
	`UNUSED_PARAMETER2
(
pJfd
, 
Êags
);

298  
SQLITE_OK
;

299 
	}
}

304 
	$memj∫lFûeSize
(
sqlôe3_fûe
 *
pJfd
, 
sqlôe_öt64
 *
pSize
){

305 
MemJou∫Æ
 *
p
 = (MemJou∫Æ *)
pJfd
;

306 *
pSize
 = (
sqlôe_öt64
Ë
p
->
ídpoöt
.
iOff£t
;

307  
SQLITE_OK
;

308 
	}
}

313 c⁄° 
sqlôe3_io_mëhods
 
	gMemJou∫ÆMëhods
 = {

315 
memj∫lClo£
,

316 
memj∫lRód
,

317 
memj∫lWrôe
,

318 
memj∫lTrunˇã
,

319 
memj∫lSync
,

320 
memj∫lFûeSize
,

347 
	$sqlôe3Jou∫ÆO≥n
(

348 
sqlôe3_vfs
 *
pVfs
,

349 c⁄° *
zName
,

350 
sqlôe3_fûe
 *
pJfd
,

351 
Êags
,

352 
nSpûl


354 
MemJou∫Æ
 *
p
 = (MemJou∫Æ*)
pJfd
;

360 
	`mem£t
(
p
, 0, (
MemJou∫Æ
));

361 if–
nSpûl
==0 ){

362  
	`sqlôe3OsO≥n
(
pVfs
, 
zName
, 
pJfd
, 
Êags
, 0);

365 if–
nSpûl
>0 ){

366 
p
->
nChunkSize
 = 
nSpûl
;

368 
p
->
nChunkSize
 = 8 + 
MEMJOURNAL_DFLT_FILECHUNKSIZE
 - (
FûeChunk
);

369 
	`as£π
–
MEMJOURNAL_DFLT_FILECHUNKSIZE
==
	`fûeChunkSize
(
p
->
nChunkSize
) );

372 
p
->
pMëhod
 = (c⁄° 
sqlôe3_io_mëhods
*)&
MemJou∫ÆMëhods
;

373 
p
->
nSpûl
 =ÇSpill;

374 
p
->
Êags
 = flags;

375 
p
->
zJou∫Æ
 = 
zName
;

376 
p
->
pVfs
 =ÖVfs;

377  
SQLITE_OK
;

378 
	}
}

383 
	$sqlôe3MemJou∫ÆO≥n
(
sqlôe3_fûe
 *
pJfd
){

384 
	`sqlôe3Jou∫ÆO≥n
(0, 0, 
pJfd
, 0, -1);

385 
	}
}

387 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


394 
	$sqlôe3Jou∫ÆCª©e
(
sqlôe3_fûe
 *
p
){

395 
rc
 = 
SQLITE_OK
;

396 if–
p
->
pMëhods
==&
MemJou∫ÆMëhods
 && ((
MemJou∫Æ
*Ì)->
nSpûl
>0 ){

397 
rc
 = 
	`memj∫lCª©eFûe
((
MemJou∫Æ
*)
p
);

399  
rc
;

400 
	}
}

408 
	$sqlôe3Jou∫ÆIsInMem‹y
(
sqlôe3_fûe
 *
p
){

409  
p
->
pMëhods
==&
MemJou∫ÆMëhods
;

410 
	}
}

416 
	$sqlôe3Jou∫ÆSize
(
sqlôe3_vfs
 *
pVfs
){

417  
	`MAX
(
pVfs
->
szOsFûe
, ()(
MemJou∫Æ
));

418 
	}
}

	@msvc.h

15 #i‚de‡
SQLITE_MSVC_H


16 
	#SQLITE_MSVC_H


	)

18 #i‡
deföed
(
_MSC_VER
)

19 #¥agm®
w¨nög
(
dißbÀ
 : 4054)

20 #¥agm®
w¨nög
(
dißbÀ
 : 4055)

21 #¥agm®
w¨nög
(
dißbÀ
 : 4100)

22 #¥agm®
w¨nög
(
dißbÀ
 : 4127)

23 #¥agm®
w¨nög
(
dißbÀ
 : 4130)

24 #¥agm®
w¨nög
(
dißbÀ
 : 4152)

25 #¥agm®
w¨nög
(
dißbÀ
 : 4189)

26 #¥agm®
w¨nög
(
dißbÀ
 : 4206)

27 #¥agm®
w¨nög
(
dißbÀ
 : 4210)

28 #¥agm®
w¨nög
(
dißbÀ
 : 4232)

29 #¥agm®
w¨nög
(
dißbÀ
 : 4244)

30 #¥agm®
w¨nög
(
dißbÀ
 : 4305)

31 #¥agm®
w¨nög
(
dißbÀ
 : 4306)

32 #¥agm®
w¨nög
(
dißbÀ
 : 4702)

33 #¥agm®
w¨nög
(
dißbÀ
 : 4706)

	@mutex.c

16 
	~"sqlôeI¡.h
"

18 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_MUTEX_OMIT
)

24 
SQLITE_WSD
 
	gmuãxIsInô
 = 0;

28 #i‚de‡
SQLITE_MUTEX_OMIT


32 
	$sqlôe3MuãxInô
(){

33 
rc
 = 
SQLITE_OK
;

34 if–!
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 ){

40 
sqlôe3_muãx_mëhods
 c⁄° *
pFrom
;

41 
sqlôe3_muãx_mëhods
 *
pTo
 = &
sqlôe3GlobÆC⁄fig
.
muãx
;

43 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

44 
pFrom
 = 
	`sqlôe3DeÁu…Muãx
();

46 
pFrom
 = 
	`sqlôe3No›Muãx
();

48 
pTo
->
xMuãxInô
 = 
pFrom
->xMutexInit;

49 
pTo
->
xMuãxEnd
 = 
pFrom
->xMutexEnd;

50 
pTo
->
xMuãxFªe
 = 
pFrom
->xMutexFree;

51 
pTo
->
xMuãxE¡î
 = 
pFrom
->xMutexEnter;

52 
pTo
->
xMuãxTry
 = 
pFrom
->xMutexTry;

53 
pTo
->
xMuãxLóve
 = 
pFrom
->xMutexLeave;

54 
pTo
->
xMuãxHñd
 = 
pFrom
->xMutexHeld;

55 
pTo
->
xMuãxNŸhñd
 = 
pFrom
->xMutexNotheld;

56 
	`sqlôe3Mem‹yB¨rõr
();

57 
pTo
->
xMuãxAŒoc
 = 
pFrom
->xMutexAlloc;

59 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxInô
 );

60 
rc
 = 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxInô
();

62 #ifde‡
SQLITE_DEBUG


63 
	`GLOBAL
(, 
muãxIsInô
) = 1;

66  
rc
;

67 
	}
}

73 
	$sqlôe3MuãxEnd
(){

74 
rc
 = 
SQLITE_OK
;

75 if–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxEnd
 ){

76 
rc
 = 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxEnd
();

79 #ifde‡
SQLITE_DEBUG


80 
	`GLOBAL
(, 
muãxIsInô
) = 0;

83  
rc
;

84 
	}
}

89 
sqlôe3_muãx
 *
	$sqlôe3_muãx_Æloc
(
id
){

90 #i‚de‡
SQLITE_OMIT_AUTOINIT


91 if–
id
<=
SQLITE_MUTEX_RECURSIVE
 && 
	`sqlôe3_öôülize
() )  0;

92 if–
id
>
SQLITE_MUTEX_RECURSIVE
 && 
	`sqlôe3MuãxInô
() )  0;

94 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 );

95  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxAŒoc
(
id
);

96 
	}
}

98 
sqlôe3_muãx
 *
	$sqlôe3MuãxAŒoc
(
id
){

99 if–!
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

102 
	`as£π
–
	`GLOBAL
(, 
muãxIsInô
) );

103 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxAŒoc
 );

104  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxAŒoc
(
id
);

105 
	}
}

110 
	$sqlôe3_muãx_‰ì
(
sqlôe3_muãx
 *
p
){

111 if–
p
 ){

112 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxFªe
 );

113 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxFªe
(
p
);

115 
	}
}

121 
	$sqlôe3_muãx_íãr
(
sqlôe3_muãx
 *
p
){

122 if–
p
 ){

123 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxE¡î
 );

124 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxE¡î
(
p
);

126 
	}
}

132 
	$sqlôe3_muãx_åy
(
sqlôe3_muãx
 *
p
){

133 
rc
 = 
SQLITE_OK
;

134 if–
p
 ){

135 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxTry
 );

136  
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxTry
(
p
);

138  
rc
;

139 
	}
}

147 
	$sqlôe3_muãx_Àave
(
sqlôe3_muãx
 *
p
){

148 if–
p
 ){

149 
	`as£π
–
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxLóve
 );

150 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxLóve
(
p
);

152 
	}
}

154 #i‚de‡
NDEBUG


159 
	$sqlôe3_muãx_hñd
(
sqlôe3_muãx
 *
p
){

160 
	`as£π
–
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxHñd
 );

161  
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxHñd
(p);

162 
	}
}

163 
	$sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
 *
p
){

164 
	`as£π
–
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
xMuãxNŸhñd
 );

165  
p
==0 || 
sqlôe3GlobÆC⁄fig
.
muãx
.
	`xMuãxNŸhñd
(p);

166 
	}
}

	@mutex.h

40 #i‡!
SQLITE_THREADSAFE


41 
	#SQLITE_MUTEX_OMIT


	)

43 #i‡
SQLITE_THREADSAFE
 && !
deföed
(
SQLITE_MUTEX_NOOP
)

44 #i‡
SQLITE_OS_UNIX


45 
	#SQLITE_MUTEX_PTHREADS


	)

46 #ñi‡
SQLITE_OS_WIN


47 
	#SQLITE_MUTEX_W32


	)

49 
	#SQLITE_MUTEX_NOOP


	)

53 #ifde‡
SQLITE_MUTEX_OMIT


57 
	#sqlôe3_muãx_Æloc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

58 
	#sqlôe3_muãx_‰ì
(
X
)

	)

59 
	#sqlôe3_muãx_íãr
(
X
)

	)

60 
	#sqlôe3_muãx_åy
(
X
Ë
SQLITE_OK


	)

61 
	#sqlôe3_muãx_Àave
(
X
)

	)

62 
	#sqlôe3_muãx_hñd
(
X
Ë(()(X),1)

	)

63 
	#sqlôe3_muãx_nŸhñd
(
X
Ë(()(X),1)

	)

64 
	#sqlôe3MuãxAŒoc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

65 
	#sqlôe3MuãxInô
(Ë
SQLITE_OK


	)

66 
	#sqlôe3MuãxEnd
()

	)

67 
	#MUTEX_LOGIC
(
X
)

	)

69 
	#MUTEX_LOGIC
(
X
Ë
	)
X

	@mutex_noop.c

28 
	~"sqlôeI¡.h
"

30 #i‚de‡
SQLITE_MUTEX_OMIT


32 #i‚de‡
SQLITE_DEBUG


38 
	$no›MuãxInô
(){  
SQLITE_OK
; 
	}
}

39 
	$no›MuãxEnd
(){  
SQLITE_OK
; 
	}
}

40 
sqlôe3_muãx
 *
	$no›MuãxAŒoc
(
id
){

41 
	`UNUSED_PARAMETER
(
id
);

42  (
sqlôe3_muãx
*)8;

43 
	}
}

44 
	$no›MuãxFªe
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

45 
	$no›MuãxE¡î
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

46 
	$no›MuãxTry
(
sqlôe3_muãx
 *
p
){

47 
	`UNUSED_PARAMETER
(
p
);

48  
SQLITE_OK
;

49 
	}
}

50 
	$no›MuãxLóve
(
sqlôe3_muãx
 *
p
){ 
	`UNUSED_PARAMETER
’); ; 
	}
}

52 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3No›Muãx
(){

53 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

54 
no›MuãxInô
,

55 
no›MuãxEnd
,

56 
no›MuãxAŒoc
,

57 
no›MuãxFªe
,

58 
no›MuãxE¡î
,

59 
no›MuãxTry
,

60 
no›MuãxLóve
,

66  &
sMuãx
;

67 
	}
}

70 #ifde‡
SQLITE_DEBUG


80 
	ssqlôe3_debug_muãx
 {

81 
	mid
;

82 
	m˙t
;

83 } 
	tsqlôe3_debug_muãx
;

89 
	$debugMuãxHñd
(
sqlôe3_muãx
 *
pX
){

90 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

91  
p
==0 ||Ö->
˙t
>0;

92 
	}
}

93 
	$debugMuãxNŸhñd
(
sqlôe3_muãx
 *
pX
){

94 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

95  
p
==0 ||Ö->
˙t
==0;

96 
	}
}

101 
	$debugMuãxInô
(){  
SQLITE_OK
; 
	}
}

102 
	$debugMuãxEnd
(){  
SQLITE_OK
; 
	}
}

109 
sqlôe3_muãx
 *
	$debugMuãxAŒoc
(
id
){

110 
sqlôe3_debug_muãx
 
aSètic
[
SQLITE_MUTEX_STATIC_VFS3
 - 1];

111 
sqlôe3_debug_muãx
 *
pNew
 = 0;

112  
id
 ){

113 
SQLITE_MUTEX_FAST
:

114 
SQLITE_MUTEX_RECURSIVE
: {

115 
pNew
 = 
	`sqlôe3MÆloc
((*pNew));

116 if–
pNew
 ){

117 
pNew
->
id
 = id;

118 
pNew
->
˙t
 = 0;

123 #ifde‡
SQLITE_ENABLE_API_ARMOR


124 if–
id
-2<0 || id-2>=
	`AºaySize
(
aSètic
) ){

125 ()
SQLITE_MISUSE_BKPT
;

129 
pNew
 = &
aSètic
[
id
-2];

130 
pNew
->
id
 = id;

134  (
sqlôe3_muãx
*)
pNew
;

135 
	}
}

140 
	$debugMuãxFªe
(
sqlôe3_muãx
 *
pX
){

141 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

142 
	`as£π
–
p
->
˙t
==0 );

143 if–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 ||Ö->id==
SQLITE_MUTEX_FAST
 ){

144 
	`sqlôe3_‰ì
(
p
);

146 #ifde‡
SQLITE_ENABLE_API_ARMOR


147 ()
SQLITE_MISUSE_BKPT
;

150 
	}
}

163 
	$debugMuãxE¡î
(
sqlôe3_muãx
 *
pX
){

164 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

165 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

166 
p
->
˙t
++;

167 
	}
}

168 
	$debugMuãxTry
(
sqlôe3_muãx
 *
pX
){

169 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

170 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

171 
p
->
˙t
++;

172  
SQLITE_OK
;

173 
	}
}

181 
	$debugMuãxLóve
(
sqlôe3_muãx
 *
pX
){

182 
sqlôe3_debug_muãx
 *
p
 = (sqlôe3_debug_muãx*)
pX
;

183 
	`as£π
–
	`debugMuãxHñd
(
pX
) );

184 
p
->
˙t
--;

185 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`debugMuãxNŸhñd
(
pX
) );

186 
	}
}

188 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3No›Muãx
(){

189 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

190 
debugMuãxInô
,

191 
debugMuãxEnd
,

192 
debugMuãxAŒoc
,

193 
debugMuãxFªe
,

194 
debugMuãxE¡î
,

195 
debugMuãxTry
,

196 
debugMuãxLóve
,

198 
debugMuãxHñd
,

199 
debugMuãxNŸhñd


202  &
sMuãx
;

203 
	}
}

210 #ifde‡
SQLITE_MUTEX_NOOP


211 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

212  
	`sqlôe3No›Muãx
();

213 
	}
}

	@mutex_unix.c

14 
	~"sqlôeI¡.h
"

23 #ifde‡
SQLITE_MUTEX_PTHREADS


25 
	~<±hªad.h
>

32 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HOMEGROWN_RECURSIVE_MUTEX
)

33 
	#SQLITE_MUTEX_NREF
 1

	)

35 
	#SQLITE_MUTEX_NREF
 0

	)

41 
	ssqlôe3_muãx
 {

42 
±hªad_muãx_t
 
	mmuãx
;

43 #i‡
SQLITE_MUTEX_NREF
 || 
deföed
(
SQLITE_ENABLE_API_ARMOR
)

44 
	mid
;

46 #i‡
SQLITE_MUTEX_NREF


47 vﬁ©ûê
	mnRef
;

48 vﬁ©ûê
±hªad_t
 
	mow√r
;

49 
	måa˚
;

52 #i‡
SQLITE_MUTEX_NREF


53 
	#SQLITE3_MUTEX_INITIALIZER
 {
PTHREAD_MUTEX_INITIALIZER
,0,0,(
±hªad_t
)0,0}

	)

54 #ñi‡
deföed
(
SQLITE_ENABLE_API_ARMOR
)

55 
	#SQLITE3_MUTEX_INITIALIZER
 { 
PTHREAD_MUTEX_INITIALIZER
, 0 }

	)

57 
	#SQLITE3_MUTEX_INITIALIZER
 { 
PTHREAD_MUTEX_INITIALIZER
 }

	)

76 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_DEBUG
)

77 
	$±hªadMuãxHñd
(
sqlôe3_muãx
 *
p
){

78  (
p
->
nRef
!=0 && 
	`±hªad_equÆ
’->
ow√r
, 
	`±hªad_£lf
()));

79 
	}
}

80 
	$±hªadMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

81  
p
->
nRef
==0 || 
	`±hªad_equÆ
’->
ow√r
, 
	`±hªad_£lf
())==0;

82 
	}
}

90 
	$sqlôe3Mem‹yB¨rõr
(){

91 #i‡
	`deföed
(
SQLITE_MEMORY_BARRIER
)

92 
SQLITE_MEMORY_BARRIER
;

93 #ñi‡
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4001000

94 
	`__sync_synchr⁄ize
();

96 
	}
}

101 
	$±hªadMuãxInô
(){  
SQLITE_OK
; 
	}
}

102 
	$±hªadMuãxEnd
(){  
SQLITE_OK
; 
	}
}

152 
sqlôe3_muãx
 *
	$±hªadMuãxAŒoc
(
iTy≥
){

153 
sqlôe3_muãx
 
°©icMuãxes
[] = {

154 
SQLITE3_MUTEX_INITIALIZER
,

155 
SQLITE3_MUTEX_INITIALIZER
,

156 
SQLITE3_MUTEX_INITIALIZER
,

157 
SQLITE3_MUTEX_INITIALIZER
,

158 
SQLITE3_MUTEX_INITIALIZER
,

159 
SQLITE3_MUTEX_INITIALIZER
,

160 
SQLITE3_MUTEX_INITIALIZER
,

161 
SQLITE3_MUTEX_INITIALIZER
,

162 
SQLITE3_MUTEX_INITIALIZER
,

163 
SQLITE3_MUTEX_INITIALIZER
,

164 
SQLITE3_MUTEX_INITIALIZER
,

165 
SQLITE3_MUTEX_INITIALIZER


167 
sqlôe3_muãx
 *
p
;

168  
iTy≥
 ){

169 
SQLITE_MUTEX_RECURSIVE
: {

170 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

171 if–
p
 ){

172 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


175 
	`±hªad_muãx_öô
(&
p
->
muãx
, 0);

178 
±hªad_muãx©å_t
 
ªcursiveAâr
;

179 
	`±hªad_muãx©å_öô
(&
ªcursiveAâr
);

180 
	`±hªad_muãx©å_£ây≥
(&
ªcursiveAâr
, 
PTHREAD_MUTEX_RECURSIVE
);

181 
	`±hªad_muãx_öô
(&
p
->
muãx
, &
ªcursiveAâr
);

182 
	`±hªad_muãx©å_de°roy
(&
ªcursiveAâr
);

187 
SQLITE_MUTEX_FAST
: {

188 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

189 if–
p
 ){

190 
	`±hªad_muãx_öô
(&
p
->
muãx
, 0);

195 #ifde‡
SQLITE_ENABLE_API_ARMOR


196 if–
iTy≥
-2<0 || iTy≥-2>=
	`AºaySize
(
°©icMuãxes
) ){

197 ()
SQLITE_MISUSE_BKPT
;

201 
p
 = &
°©icMuãxes
[
iTy≥
-2];

205 #i‡
SQLITE_MUTEX_NREF
 || 
	`deföed
(
SQLITE_ENABLE_API_ARMOR
)

206 if–
p
 )Ö->
id
 = 
iTy≥
;

208  
p
;

209 
	}
}

217 
	$±hªadMuãxFªe
(
sqlôe3_muãx
 *
p
){

218 
	`as£π
–
p
->
nRef
==0 );

219 #i‡
SQLITE_ENABLE_API_ARMOR


220 if–
p
->
id
==
SQLITE_MUTEX_FAST
 ||Ö->id==
SQLITE_MUTEX_RECURSIVE
 )

223 
	`±hªad_muãx_de°roy
(&
p
->
muãx
);

224 
	`sqlôe3_‰ì
(
p
);

226 #ifde‡
SQLITE_ENABLE_API_ARMOR


228 ()
SQLITE_MISUSE_BKPT
;

231 
	}
}

244 
	$±hªadMuãxE¡î
(
sqlôe3_muãx
 *
p
){

245 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`±hªadMuãxNŸhñd
(p) );

247 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


259 
±hªad_t
 
£lf
 = 
	`±hªad_£lf
();

260 if–
p
->
nRef
>0 && 
	`±hªad_equÆ
’->
ow√r
, 
£lf
) ){

261 
p
->
nRef
++;

263 
	`±hªad_muãx_lock
(&
p
->
muãx
);

264 
	`as£π
–
p
->
nRef
==0 );

265 
p
->
ow√r
 = 
£lf
;

266 
p
->
nRef
 = 1;

272 
	`±hªad_muãx_lock
(&
p
->
muãx
);

273 #i‡
SQLITE_MUTEX_NREF


274 
	`as£π
–
p
->
nRef
>0 ||Ö->
ow√r
==0 );

275 
p
->
ow√r
 = 
	`±hªad_£lf
();

276 
p
->
nRef
++;

280 #ifde‡
SQLITE_DEBUG


281 if–
p
->
åa˚
 ){

282 
	`¥ötf
("íã∏muãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

285 
	}
}

286 
	$±hªadMuãxTry
(
sqlôe3_muãx
 *
p
){

287 
rc
;

288 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`±hªadMuãxNŸhñd
(p) );

290 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


302 
±hªad_t
 
£lf
 = 
	`±hªad_£lf
();

303 if–
p
->
nRef
>0 && 
	`±hªad_equÆ
’->
ow√r
, 
£lf
) ){

304 
p
->
nRef
++;

305 
rc
 = 
SQLITE_OK
;

306 }if–
	`±hªad_muãx_åylock
(&
p
->
muãx
)==0 ){

307 
	`as£π
–
p
->
nRef
==0 );

308 
p
->
ow√r
 = 
£lf
;

309 
p
->
nRef
 = 1;

310 
rc
 = 
SQLITE_OK
;

312 
rc
 = 
SQLITE_BUSY
;

318 if–
	`±hªad_muãx_åylock
(&
p
->
muãx
)==0 ){

319 #i‡
SQLITE_MUTEX_NREF


320 
p
->
ow√r
 = 
	`±hªad_£lf
();

321 
p
->
nRef
++;

323 
rc
 = 
SQLITE_OK
;

325 
rc
 = 
SQLITE_BUSY
;

329 #ifde‡
SQLITE_DEBUG


330 if–
rc
==
SQLITE_OK
 && 
p
->
åa˚
 ){

331 
	`¥ötf
("íã∏muãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

334  
rc
;

335 
	}
}

343 
	$±hªadMuãxLóve
(
sqlôe3_muãx
 *
p
){

344 
	`as£π
–
	`±hªadMuãxHñd
(
p
) );

345 #i‡
SQLITE_MUTEX_NREF


346 
p
->
nRef
--;

347 if–
p
->
nRef
==0 )Ö->
ow√r
 = 0;

349 
	`as£π
–
p
->
nRef
==0 ||Ö->
id
==
SQLITE_MUTEX_RECURSIVE
 );

351 #ifde‡
SQLITE_HOMEGROWN_RECURSIVE_MUTEX


352 if–
p
->
nRef
==0 ){

353 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

356 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

359 #ifde‡
SQLITE_DEBUG


360 if–
p
->
åa˚
 ){

361 
	`¥ötf
("Àavêmuãx %∞(%dËwôhÇRef=%d\n", 
p
,Ö->
åa˚
,Ö->
nRef
);

364 
	}
}

366 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

367 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

368 
±hªadMuãxInô
,

369 
±hªadMuãxEnd
,

370 
±hªadMuãxAŒoc
,

371 
±hªadMuãxFªe
,

372 
±hªadMuãxE¡î
,

373 
±hªadMuãxTry
,

374 
±hªadMuãxLóve
,

375 #ifde‡
SQLITE_DEBUG


376 
±hªadMuãxHñd
,

377 
±hªadMuãxNŸhñd


384  &
sMuãx
;

385 
	}
}

	@mutex_w32.c

14 
	~"sqlôeI¡.h
"

16 #i‡
SQLITE_OS_WIN


20 
	~"os_comm⁄.h
"

25 
	~"os_wö.h
"

32 #ifde‡
SQLITE_MUTEX_W32


37 
	ssqlôe3_muãx
 {

38 
CRITICAL_SECTION
 
	mmuãx
;

39 
	mid
;

40 #ifde‡
SQLITE_DEBUG


41 vﬁ©ûê
	mnRef
;

42 vﬁ©ûê
DWORD
 
	mow√r
;

43 vﬁ©ûê
	måa˚
;

52 
	#SQLITE_W32_MUTEX_INITIALIZER
 { 0 }

	)

54 #ifde‡
SQLITE_DEBUG


55 
	#SQLITE3_MUTEX_INITIALIZER
 { 
SQLITE_W32_MUTEX_INITIALIZER
, 0, \

56 0L, (
DWORD
)0, 0 }

	)

58 
	#SQLITE3_MUTEX_INITIALIZER
 { 
SQLITE_W32_MUTEX_INITIALIZER
, 0 }

	)

61 #ifde‡
SQLITE_DEBUG


66 
	$wöMuãxHñd
(
sqlôe3_muãx
 *
p
){

67  
p
->
nRef
!=0 &&Ö->
ow√r
==
	`GëCuºítThªadId
();

68 
	}
}

70 
	$wöMuãxNŸhñd2
(
sqlôe3_muãx
 *
p
, 
DWORD
 
tid
){

71  
p
->
nRef
==0 ||Ö->
ow√r
!=
tid
;

72 
	}
}

74 
	$wöMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

75 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

76  
	`wöMuãxNŸhñd2
(
p
, 
tid
);

77 
	}
}

85 
	$sqlôe3Mem‹yB¨rõr
(){

86 #i‡
	`deföed
(
SQLITE_MEMORY_BARRIER
)

87 
SQLITE_MEMORY_BARRIER
;

88 #ñi‡
	`deföed
(
__GNUC__
)

89 
	`__sync_synchr⁄ize
();

90 #ñi‡!
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) && \

91 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

92 
	`_RódWrôeB¨rõr
();

93 #ñi‡
	`deföed
(
Mem‹yB¨rõr
)

94 
	`Mem‹yB¨rõr
();

96 
	}
}

101 
sqlôe3_muãx
 
	gwöMuãx_°©icMuãxes
[] = {

102 
SQLITE3_MUTEX_INITIALIZER
,

103 
SQLITE3_MUTEX_INITIALIZER
,

104 
SQLITE3_MUTEX_INITIALIZER
,

105 
SQLITE3_MUTEX_INITIALIZER
,

106 
SQLITE3_MUTEX_INITIALIZER
,

107 
SQLITE3_MUTEX_INITIALIZER
,

108 
SQLITE3_MUTEX_INITIALIZER
,

109 
SQLITE3_MUTEX_INITIALIZER
,

110 
SQLITE3_MUTEX_INITIALIZER
,

111 
SQLITE3_MUTEX_INITIALIZER
,

112 
SQLITE3_MUTEX_INITIALIZER
,

113 
SQLITE3_MUTEX_INITIALIZER


116 
	gwöMuãx_isInô
 = 0;

117 
	gwöMuãx_isNt
 = -1;

123 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gwöMuãx_lock
 = 0;

125 
sqlôe3_wö32_is_¡
();

126 
sqlôe3_wö32_¶ìp
(
DWORD
 
mûli£c⁄ds
);

128 
	$wöMuãxInô
(){

130 if–
	`I¡îlockedCom∑ªExch™ge
(&
wöMuãx_lock
, 1, 0)==0 ){

131 
i
;

132 
i
=0; i<
	`AºaySize
(
wöMuãx_°©icMuãxes
); i++){

133 #i‡
SQLITE_OS_WINRT


134 
	`InôülizeCrôiˇlSe˘i⁄Ex
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
, 0, 0);

136 
	`InôülizeCrôiˇlSe˘i⁄
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
);

139 
wöMuãx_isInô
 = 1;

143  !
wöMuãx_isInô
 ){

144 
	`sqlôe3_wö32_¶ìp
(1);

147  
SQLITE_OK
;

148 
	}
}

150 
	$wöMuãxEnd
(){

153 if–
	`I¡îlockedCom∑ªExch™ge
(&
wöMuãx_lock
, 0, 1)==1 ){

154 if–
wöMuãx_isInô
==1 ){

155 
i
;

156 
i
=0; i<
	`AºaySize
(
wöMuãx_°©icMuãxes
); i++){

157 
	`DñëeCrôiˇlSe˘i⁄
(&
wöMuãx_°©icMuãxes
[
i
].
muãx
);

159 
wöMuãx_isInô
 = 0;

162  
SQLITE_OK
;

163 
	}
}

213 
sqlôe3_muãx
 *
	$wöMuãxAŒoc
(
iTy≥
){

214 
sqlôe3_muãx
 *
p
;

216  
iTy≥
 ){

217 
SQLITE_MUTEX_FAST
:

218 
SQLITE_MUTEX_RECURSIVE
: {

219 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

220 if–
p
 ){

221 
p
->
id
 = 
iTy≥
;

222 #ifde‡
SQLITE_DEBUG


223 #ifde‡
SQLITE_WIN32_MUTEX_TRACE_DYNAMIC


224 
p
->
åa˚
 = 1;

227 #i‡
SQLITE_OS_WINRT


228 
	`InôülizeCrôiˇlSe˘i⁄Ex
(&
p
->
muãx
, 0, 0);

230 
	`InôülizeCrôiˇlSe˘i⁄
(&
p
->
muãx
);

236 #ifde‡
SQLITE_ENABLE_API_ARMOR


237 if–
iTy≥
-2<0 || iTy≥-2>=
	`AºaySize
(
wöMuãx_°©icMuãxes
) ){

238 ()
SQLITE_MISUSE_BKPT
;

242 
p
 = &
wöMuãx_°©icMuãxes
[
iTy≥
-2];

243 
p
->
id
 = 
iTy≥
;

244 #ifde‡
SQLITE_DEBUG


245 #ifde‡
SQLITE_WIN32_MUTEX_TRACE_STATIC


246 
p
->
åa˚
 = 1;

252  
p
;

253 
	}
}

261 
	$wöMuãxFªe
(
sqlôe3_muãx
 *
p
){

262 
	`as£π
–
p
 );

263 
	`as£π
–
p
->
nRef
==0 &&Ö->
ow√r
==0 );

264 if–
p
->
id
==
SQLITE_MUTEX_FAST
 ||Ö->id==
SQLITE_MUTEX_RECURSIVE
 ){

265 
	`DñëeCrôiˇlSe˘i⁄
(&
p
->
muãx
);

266 
	`sqlôe3_‰ì
(
p
);

268 #ifde‡
SQLITE_ENABLE_API_ARMOR


269 ()
SQLITE_MISUSE_BKPT
;

272 
	}
}

285 
	$wöMuãxE¡î
(
sqlôe3_muãx
 *
p
){

286 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

287 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

289 #ifde‡
SQLITE_DEBUG


290 
	`as£π
–
p
 );

291 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`wöMuãxNŸhñd2
’, 
tid
) );

293 
	`as£π
–
p
 );

295 
	`as£π
–
wöMuãx_isInô
==1 );

296 
	`E¡îCrôiˇlSe˘i⁄
(&
p
->
muãx
);

297 #ifde‡
SQLITE_DEBUG


298 
	`as£π
–
p
->
nRef
>0 ||Ö->
ow√r
==0 );

299 
p
->
ow√r
 = 
tid
;

300 
p
->
nRef
++;

301 if–
p
->
åa˚
 ){

302 
	`OSTRACE
(("ENTER-MUTEXÅid=%lu, mutex=%p (%d),ÇRef=%d\n",

303 
tid
, 
p
,Ö->
åa˚
,Ö->
nRef
));

306 
	}
}

308 
	$wöMuãxTry
(
sqlôe3_muãx
 *
p
){

309 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

310 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

312 
rc
 = 
SQLITE_BUSY
;

313 
	`as£π
–
p
 );

314 
	`as£π
–
p
->
id
==
SQLITE_MUTEX_RECURSIVE
 || 
	`wöMuãxNŸhñd2
’, 
tid
) );

326 #i‡
	`deföed
(
_WIN32_WINNT
) && _WIN32_WINNT >= 0x0400

327 
	`as£π
–
wöMuãx_isInô
==1 );

328 
	`as£π
–
wöMuãx_isNt
>=-1 && winMutex_isNt<=1 );

329 if–
wöMuãx_isNt
<0 ){

330 
wöMuãx_isNt
 = 
	`sqlôe3_wö32_is_¡
();

332 
	`as£π
–
wöMuãx_isNt
==0 || winMutex_isNt==1 );

333 if–
wöMuãx_isNt
 && 
	`TryE¡îCrôiˇlSe˘i⁄
(&
p
->
muãx
) ){

334 #ifde‡
SQLITE_DEBUG


335 
p
->
ow√r
 = 
tid
;

336 
p
->
nRef
++;

338 
rc
 = 
SQLITE_OK
;

341 
	`UNUSED_PARAMETER
(
p
);

343 #ifde‡
SQLITE_DEBUG


344 if–
p
->
åa˚
 ){

345 
	`OSTRACE
(("TRY-MUTEXÅid=%lu, mutex=%p (%d), owner=%lu,ÇRef=%d,Ñc=%s\n",

346 
tid
, 
p
,Ö->
åa˚
,Ö->
ow√r
,Ö->
nRef
, 
	`sqlôe3EºName
(
rc
)));

349  
rc
;

350 
	}
}

358 
	$wöMuãxLóve
(
sqlôe3_muãx
 *
p
){

359 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

360 
DWORD
 
tid
 = 
	`GëCuºítThªadId
();

362 
	`as£π
–
p
 );

363 #ifde‡
SQLITE_DEBUG


364 
	`as£π
–
p
->
nRef
>0 );

365 
	`as£π
–
p
->
ow√r
==
tid
 );

366 
p
->
nRef
--;

367 if–
p
->
nRef
==0 )Ö->
ow√r
 = 0;

368 
	`as£π
–
p
->
nRef
==0 ||Ö->
id
==
SQLITE_MUTEX_RECURSIVE
 );

370 
	`as£π
–
wöMuãx_isInô
==1 );

371 
	`LóveCrôiˇlSe˘i⁄
(&
p
->
muãx
);

372 #ifde‡
SQLITE_DEBUG


373 if–
p
->
åa˚
 ){

374 
	`OSTRACE
(("LEAVE-MUTEXÅid=%lu, mutex=%p (%d),ÇRef=%d\n",

375 
tid
, 
p
,Ö->
åa˚
,Ö->
nRef
));

378 
	}
}

380 
sqlôe3_muãx_mëhods
 c⁄° *
	$sqlôe3DeÁu…Muãx
(){

381 c⁄° 
sqlôe3_muãx_mëhods
 
sMuãx
 = {

382 
wöMuãxInô
,

383 
wöMuãxEnd
,

384 
wöMuãxAŒoc
,

385 
wöMuãxFªe
,

386 
wöMuãxE¡î
,

387 
wöMuãxTry
,

388 
wöMuãxLóve
,

389 #ifde‡
SQLITE_DEBUG


390 
wöMuãxHñd
,

391 
wöMuãxNŸhñd


397  &
sMuãx
;

398 
	}
}

	@notify.c

16 
	~"sqlôeI¡.h
"

17 
	~"båìI¡.h
"

20 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


31 
	#as£πMuãxHñd
() \

32 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
)Ë)

	)

40 
sqlôe3
 *
SQLITE_WSD
 
	gsqlôe3BlockedLi°
 = 0;

42 #i‚de‡
NDEBUG


57 
	$checkLi°Pr›îtõs
(
sqlôe3
 *
db
){

58 
sqlôe3
 *
p
;

59 
p
=
sqlôe3BlockedLi°
;Ö;Öı->
pNextBlocked
){

60 
£í
 = 0;

61 
sqlôe3
 *
p2
;

64 
	`as£π
–
p
->
pU∆ockC⁄√˘i⁄
 ||Ö->
pBlockögC⁄√˘i⁄
 );

67 
p2
=
sqlôe3BlockedLi°
;Ö2!=
p
;Ö2ı2->
pNextBlocked
){

68 if–
p2
->
xU∆ockNŸify
==
p
->xU∆ockNŸify ) 
£í
 = 1;

69 
	`as£π
–
p2
->
xU∆ockNŸify
==
p
->xU∆ockNŸify || !
£í
 );

70 
	`as£π
–
db
==0 || 
p
->
pU∆ockC⁄√˘i⁄
!=db );

71 
	`as£π
–
db
==0 || 
p
->
pBlockögC⁄√˘i⁄
!=db );

74 
	}
}

76 
	#checkLi°Pr›îtõs
(
x
)

	)

83 
	$ªmoveFromBlockedLi°
(
sqlôe3
 *
db
){

84 
sqlôe3
 **
µ
;

85 
	`as£πMuãxHñd
();

86 
µ
=&
sqlôe3BlockedLi°
; *µ;Ö∞&(*µ)->
pNextBlocked
){

87 if–*
µ
==
db
 ){

88 *
µ
 = (*µ)->
pNextBlocked
;

92 
	}
}

98 
	$addToBlockedLi°
(
sqlôe3
 *
db
){

99 
sqlôe3
 **
µ
;

100 
	`as£πMuãxHñd
();

102 
µ
=&
sqlôe3BlockedLi°
;

103 *
µ
 && (*µ)->
xU∆ockNŸify
!=
db
->xUnlockNotify;

104 
µ
=&(*µ)->
pNextBlocked


106 
db
->
pNextBlocked
 = *
µ
;

107 *
µ
 = 
db
;

108 
	}
}

113 
	$íãrMuãx
(){

114 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

115 
	`checkLi°Pr›îtõs
(0);

116 
	}
}

121 
	$ÀaveMuãx
(){

122 
	`as£πMuãxHñd
();

123 
	`checkLi°Pr›îtõs
(0);

124 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
));

125 
	}
}

148 
sqlôe3_u∆ock_nŸify
(

149 
sqlôe3
 *
db
,

150 (*
xNŸify
)(**, ),

151 *
pArg


153 
rc
 = 
SQLITE_OK
;

155 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

156 
	`íãrMuãx
();

158 if–
xNŸify
==0 ){

159 
	`ªmoveFromBlockedLi°
(
db
);

160 
db
->
pBlockögC⁄√˘i⁄
 = 0;

161 
db
->
pU∆ockC⁄√˘i⁄
 = 0;

162 
db
->
xU∆ockNŸify
 = 0;

163 
db
->
pU∆ockArg
 = 0;

164 }if–0==
db
->
pBlockögC⁄√˘i⁄
 ){

169 
	`xNŸify
(&
pArg
, 1);

171 
sqlôe3
 *
p
;

173 
p
=
db
->
pBlockögC⁄√˘i⁄
;Ö &&Ö!=db;Öı->
pU∆ockC⁄√˘i⁄
){}

174 if–
p
 ){

175 
rc
 = 
SQLITE_LOCKED
;

177 
db
->
pU∆ockC⁄√˘i⁄
 = db->
pBlockögC⁄√˘i⁄
;

178 
db
->
xU∆ockNŸify
 = 
xNŸify
;

179 
db
->
pU∆ockArg
 = 
pArg
;

180 
	`ªmoveFromBlockedLi°
(
db
);

181 
	`addToBlockedLi°
(
db
);

185 
	`ÀaveMuãx
();

186 
	`as£π
–!
db
->
mÆlocFaûed
 );

187 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (rc?"database is deadlocked":0));

188 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

189  
rc
;

190 
	}
}

198 
	$sqlôe3C⁄√˘i⁄Blocked
(
sqlôe3
 *
db
, sqlôe3 *
pBlockî
){

199 
	`íãrMuãx
();

200 if–
db
->
pBlockögC⁄√˘i⁄
==0 && db->
pU∆ockC⁄√˘i⁄
==0 ){

201 
	`addToBlockedLi°
(
db
);

203 
db
->
pBlockögC⁄√˘i⁄
 = 
pBlockî
;

204 
	`ÀaveMuãx
();

205 
	}
}

226 
	$sqlôe3C⁄√˘i⁄U∆ocked
(
sqlôe3
 *
db
){

227 (*
xU∆ockNŸify
)(**, ) = 0;

228 
nArg
 = 0;

229 
sqlôe3
 **
µ
;

230 **
aArg
;

231 **
aDyn
 = 0;

232 *
aSètic
[16];

234 
aArg
 = 
aSètic
;

235 
	`íãrMuãx
();

238 
µ
=&
sqlôe3BlockedLi°
; *pp; ){

239 
sqlôe3
 *
p
 = *
µ
;

242 if–
p
->
pBlockögC⁄√˘i⁄
==
db
 ){

243 
p
->
pBlockögC⁄√˘i⁄
 = 0;

247 if–
p
->
pU∆ockC⁄√˘i⁄
==
db
 ){

248 
	`as£π
–
p
->
xU∆ockNŸify
 );

249 if–
p
->
xU∆ockNŸify
!=xU∆ockNŸify && 
nArg
!=0 ){

250 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

251 
nArg
 = 0;

254 
	`sqlôe3BegöBíignMÆloc
();

255 
	`as£π
–
aArg
==
aDyn
 || (aDyn==0 &&áArg==
aSètic
) );

256 
	`as£π
–
nArg
<=()
	`AºaySize
(
aSètic
Ë|| 
aArg
==
aDyn
 );

257 if–(!
aDyn
 && 
nArg
==()
	`AºaySize
(
aSètic
))

258 || (
aDyn
 && 
nArg
==()(
	`sqlôe3MÆlocSize
(aDyn)/(*)))

261 **
pNew
 = (**)
	`sqlôe3MÆloc
(
nArg
*(*)*2);

262 if–
pNew
 ){

263 
	`mem˝y
(
pNew
, 
aArg
, 
nArg
*(*));

264 
	`sqlôe3_‰ì
(
aDyn
);

265 
aDyn
 = 
aArg
 = 
pNew
;

291 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

292 
nArg
 = 0;

295 
	`sqlôe3EndBíignMÆloc
();

297 
aArg
[
nArg
++] = 
p
->
pU∆ockArg
;

298 
xU∆ockNŸify
 = 
p
->xUnlockNotify;

299 
p
->
pU∆ockC⁄√˘i⁄
 = 0;

300 
p
->
xU∆ockNŸify
 = 0;

301 
p
->
pU∆ockArg
 = 0;

305 if–
p
->
pBlockögC⁄√˘i⁄
==0 &&Ö->
pU∆ockC⁄√˘i⁄
==0 ){

307 *
µ
 = 
p
->
pNextBlocked
;

308 
p
->
pNextBlocked
 = 0;

310 
µ
 = &
p
->
pNextBlocked
;

314 if–
nArg
!=0 ){

315 
	`xU∆ockNŸify
(
aArg
, 
nArg
);

317 
	`sqlôe3_‰ì
(
aDyn
);

318 
	`ÀaveMuãx
();

319 
	}
}

325 
	$sqlôe3C⁄√˘i⁄Clo£d
(
sqlôe3
 *
db
){

326 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
db
);

327 
	`íãrMuãx
();

328 
	`ªmoveFromBlockedLi°
(
db
);

329 
	`checkLi°Pr›îtõs
(
db
);

330 
	`ÀaveMuãx
();

331 
	}
}

	@os.c

16 
	~"sqlôeI¡.h
"

23 #i‡
deföed
(
SQLITE_TEST
)

24 
	gsqlôe3_io_îr‹_hô
 = 0;

25 
	gsqlôe3_io_îr‹_h¨dhô
 = 0;

26 
	gsqlôe3_io_îr‹_≥ndög
 = 0;

27 
	gsqlôe3_io_îr‹_≥rsi°
 = 0;

28 
	gsqlôe3_io_îr‹_bíign
 = 0;

29 
	gsqlôe3_diskfuŒ_≥ndög
 = 0;

30 
	gsqlôe3_diskfuŒ
 = 0;

36 #i‡
deföed
(
SQLITE_TEST
)

37 
	gsqlôe3_›í_fûe_cou¡
 = 0;

64 #i‡
deföed
(
SQLITE_TEST
)

65 
	gsqlôe3_memdebug_vfs_oom_ã°
 = 1;

66 
	#DO_OS_MALLOC_TEST
(
x
) \

67 i‡(
sqlôe3_memdebug_vfs_oom_ã°
 && (!
x
 || !
	`sqlôe3Jou∫ÆIsInMem‹y
(x))) { \

68 *
pT°AŒoc
 = 
	`sqlôe3MÆloc
(10); \

69 i‡(!
pT°AŒoc
Ë 
SQLITE_IOERR_NOMEM_BKPT
; \

70 
	`sqlôe3_‰ì
(
pT°AŒoc
); \

71 }

	)

73 
	#DO_OS_MALLOC_TEST
(
x
)

	)

82 
	$sqlôe3OsClo£
(
sqlôe3_fûe
 *
pId
){

83 if–
pId
->
pMëhods
 ){

84 
pId
->
pMëhods
->
	`xClo£
(pId);

85 
pId
->
pMëhods
 = 0;

87 
	}
}

88 
	$sqlôe3OsRód
(
sqlôe3_fûe
 *
id
, *
pBuf
, 
amt
, 
i64
 
off£t
){

89 
	`DO_OS_MALLOC_TEST
(
id
);

90  
id
->
pMëhods
->
	`xRód
(id, 
pBuf
, 
amt
, 
off£t
);

91 
	}
}

92 
	$sqlôe3OsWrôe
(
sqlôe3_fûe
 *
id
, c⁄° *
pBuf
, 
amt
, 
i64
 
off£t
){

93 
	`DO_OS_MALLOC_TEST
(
id
);

94  
id
->
pMëhods
->
	`xWrôe
(id, 
pBuf
, 
amt
, 
off£t
);

95 
	}
}

96 
	$sqlôe3OsTrunˇã
(
sqlôe3_fûe
 *
id
, 
i64
 
size
){

97  
id
->
pMëhods
->
	`xTrunˇã
(id, 
size
);

98 
	}
}

99 
	$sqlôe3OsSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

100 
	`DO_OS_MALLOC_TEST
(
id
);

101  
id
->
pMëhods
->
	`xSync
(id, 
Êags
);

102 
	}
}

103 
	$sqlôe3OsFûeSize
(
sqlôe3_fûe
 *
id
, 
i64
 *
pSize
){

104 
	`DO_OS_MALLOC_TEST
(
id
);

105  
id
->
pMëhods
->
	`xFûeSize
(id, 
pSize
);

106 
	}
}

107 
	$sqlôe3OsLock
(
sqlôe3_fûe
 *
id
, 
lockTy≥
){

108 
	`DO_OS_MALLOC_TEST
(
id
);

109  
id
->
pMëhods
->
	`xLock
(id, 
lockTy≥
);

110 
	}
}

111 
	$sqlôe3OsU∆ock
(
sqlôe3_fûe
 *
id
, 
lockTy≥
){

112  
id
->
pMëhods
->
	`xU∆ock
(id, 
lockTy≥
);

113 
	}
}

114 
	$sqlôe3OsCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

115 
	`DO_OS_MALLOC_TEST
(
id
);

116  
id
->
pMëhods
->
	`xCheckRe£rvedLock
(id, 
pResOut
);

117 
	}
}

127 
	$sqlôe3OsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

128 #ifde‡
SQLITE_TEST


129 if–
›
!=
SQLITE_FCNTL_COMMIT_PHASETWO
 ){

140 
	`DO_OS_MALLOC_TEST
(
id
);

143  
id
->
pMëhods
->
	`xFûeC⁄åﬁ
(id, 
›
, 
pArg
);

144 
	}
}

145 
	$sqlôe3OsFûeC⁄åﬁHöt
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

146 ()
id
->
pMëhods
->
	`xFûeC⁄åﬁ
(id, 
›
, 
pArg
);

147 
	}
}

149 
	$sqlôe3OsSe˘‹Size
(
sqlôe3_fûe
 *
id
){

150 (*
xSe˘‹Size
)(
sqlôe3_fûe
*Ë
id
->
pMëhods
->xSectorSize;

151  (
xSe˘‹Size
 ? 
	`xSe˘‹Size
(
id
Ë: 
SQLITE_DEFAULT_SECTOR_SIZE
);

152 
	}
}

153 
	$sqlôe3OsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

154  
id
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(id);

155 
	}
}

156 
	$sqlôe3OsShmLock
(
sqlôe3_fûe
 *
id
, 
off£t
, 
n
, 
Êags
){

157  
id
->
pMëhods
->
	`xShmLock
(id, 
off£t
, 
n
, 
Êags
);

158 
	}
}

159 
	$sqlôe3OsShmB¨rõr
(
sqlôe3_fûe
 *
id
){

160 
id
->
pMëhods
->
	`xShmB¨rõr
(id);

161 
	}
}

162 
	$sqlôe3OsShmUnm≠
(
sqlôe3_fûe
 *
id
, 
dñëeFœg
){

163  
id
->
pMëhods
->
	`xShmUnm≠
(id, 
dñëeFœg
);

164 
	}
}

165 
	$sqlôe3OsShmM≠
(

166 
sqlôe3_fûe
 *
id
,

167 
iPage
,

168 
pgsz
,

169 
bExãnd
,

170 vﬁ©ûê**
µ


172 
	`DO_OS_MALLOC_TEST
(
id
);

173  
id
->
pMëhods
->
	`xShmM≠
(id, 
iPage
, 
pgsz
, 
bExãnd
, 
µ
);

174 
	}
}

176 #i‡
SQLITE_MAX_MMAP_SIZE
>0

178 
	$sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, 
iAmt
, **
µ
){

179 
	`DO_OS_MALLOC_TEST
(
id
);

180  
id
->
pMëhods
->
	`xFëch
(id, 
iOff
, 
iAmt
, 
µ
);

181 
	}
}

182 
	$sqlôe3OsUn„tch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, *
p
){

183  
id
->
pMëhods
->
	`xUn„tch
(id, 
iOff
, 
p
);

184 
	}
}

187 
	$sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, 
iAmt
, **
µ
){

188 *
µ
 = 0;

189  
SQLITE_OK
;

190 
	}
}

191 
	$sqlôe3OsUn„tch
(
sqlôe3_fûe
 *
id
, 
i64
 
iOff
, *
p
){

192  
SQLITE_OK
;

193 
	}
}

200 
	$sqlôe3OsO≥n
(

201 
sqlôe3_vfs
 *
pVfs
,

202 c⁄° *
zP©h
,

203 
sqlôe3_fûe
 *
pFûe
,

204 
Êags
,

205 *
pFœgsOut


207 
rc
;

208 
	`DO_OS_MALLOC_TEST
(0);

213 
rc
 = 
pVfs
->
	`xO≥n
’Vfs, 
zP©h
, 
pFûe
, 
Êags
 & 0x87f7f, 
pFœgsOut
);

214 
	`as£π
–
rc
==
SQLITE_OK
 || 
pFûe
->
pMëhods
==0 );

215  
rc
;

216 
	}
}

217 
	$sqlôe3OsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

218 
	`DO_OS_MALLOC_TEST
(0);

219 
	`as£π
–
dúSync
==0 || dirSync==1 );

220  
pVfs
->
	`xDñëe
’Vfs, 
zP©h
, 
dúSync
);

221 
	}
}

222 
	$sqlôe3OsAc˚ss
(

223 
sqlôe3_vfs
 *
pVfs
,

224 c⁄° *
zP©h
,

225 
Êags
,

226 *
pResOut


228 
	`DO_OS_MALLOC_TEST
(0);

229  
pVfs
->
	`xAc˚ss
’Vfs, 
zP©h
, 
Êags
, 
pResOut
);

230 
	}
}

231 
	$sqlôe3OsFuŒP©h«me
(

232 
sqlôe3_vfs
 *
pVfs
,

233 c⁄° *
zP©h
,

234 
nP©hOut
,

235 *
zP©hOut


237 
	`DO_OS_MALLOC_TEST
(0);

238 
zP©hOut
[0] = 0;

239  
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zP©h
, 
nP©hOut
, 
zP©hOut
);

240 
	}
}

241 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


242 *
	$sqlôe3OsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

243  
pVfs
->
	`xDlO≥n
’Vfs, 
zP©h
);

244 
	}
}

245 
	$sqlôe3OsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

246 
pVfs
->
	`xDlEº‹
’Vfs, 
nByã
, 
zBufOut
);

247 
	}
}

248 (*
	$sqlôe3OsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pHdÀ
, c⁄° *
zSym
))(){

249  
pVfs
->
	`xDlSym
’Vfs, 
pHdÀ
, 
zSym
);

250 
	}
}

251 
	$sqlôe3OsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

252 
pVfs
->
	`xDlClo£
’Vfs, 
pH™dÀ
);

253 
	}
}

255 
	$sqlôe3OsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

256  
pVfs
->
	`xR™dom√ss
’Vfs, 
nByã
, 
zBufOut
);

257 
	}
}

258 
	$sqlôe3OsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

259  
pVfs
->
	`xSÀï
’Vfs, 
nMi¸o
);

260 
	}
}

261 
	$sqlôe3OsGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
){

262  
pVfs
->
xGëLa°Eº‹
 ?ÖVfs->
	`xGëLa°Eº‹
(pVfs, 0, 0) : 0;

263 
	}
}

264 
	$sqlôe3OsCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

265 
rc
;

272 if–
pVfs
->
iVîsi⁄
>=2 &&ÖVfs->
xCuºítTimeI¡64
 ){

273 
rc
 = 
pVfs
->
	`xCuºítTimeI¡64
’Vfs, 
pTimeOut
);

275 
r
;

276 
rc
 = 
pVfs
->
	`xCuºítTime
’Vfs, &
r
);

277 *
pTimeOut
 = (
sqlôe3_öt64
)(
r
*86400000.0);

279  
rc
;

280 
	}
}

282 
	$sqlôe3OsO≥nMÆloc
(

283 
sqlôe3_vfs
 *
pVfs
,

284 c⁄° *
zFûe
,

285 
sqlôe3_fûe
 **
µFûe
,

286 
Êags
,

287 *
pOutFœgs


289 
rc
;

290 
sqlôe3_fûe
 *
pFûe
;

291 
pFûe
 = (
sqlôe3_fûe
 *)
	`sqlôe3MÆlocZîo
(
pVfs
->
szOsFûe
);

292 if–
pFûe
 ){

293 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zFûe
, 
pFûe
, 
Êags
, 
pOutFœgs
);

294 if–
rc
!=
SQLITE_OK
 ){

295 
	`sqlôe3_‰ì
(
pFûe
);

297 *
µFûe
 = 
pFûe
;

300 
rc
 = 
SQLITE_NOMEM_BKPT
;

302  
rc
;

303 
	}
}

304 
	$sqlôe3OsClo£Fªe
(
sqlôe3_fûe
 *
pFûe
){

305 
	`as£π
–
pFûe
 );

306 
	`sqlôe3OsClo£
(
pFûe
);

307 
	`sqlôe3_‰ì
(
pFûe
);

308 
	}
}

316 
	$sqlôe3OsInô
(){

317 *
p
 = 
	`sqlôe3_mÆloc
(10);

318 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

319 
	`sqlôe3_‰ì
(
p
);

320  
	`sqlôe3_os_öô
();

321 
	}
}

326 
sqlôe3_vfs
 * 
SQLITE_WSD
 
	gvfsLi°
 = 0;

327 
	#vfsLi°
 
	`GLOBAL
(
sqlôe3_vfs
 *, 
vfsLi°
)

	)

333 
sqlôe3_vfs
 *
	$sqlôe3_vfs_föd
(c⁄° *
zVfs
){

334 
sqlôe3_vfs
 *
pVfs
 = 0;

335 #i‡
SQLITE_THREADSAFE


336 
sqlôe3_muãx
 *
muãx
;

338 #i‚de‡
SQLITE_OMIT_AUTOINIT


339 
rc
 = 
	`sqlôe3_öôülize
();

340 if–
rc
 )  0;

342 #i‡
SQLITE_THREADSAFE


343 
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

345 
	`sqlôe3_muãx_íãr
(
muãx
);

346 
pVfs
 = 
vfsLi°
;ÖVfs;ÖVfsıVfs->
pNext
){

347 if–
zVfs
==0 ) ;

348 if–
	`°rcmp
(
zVfs
, 
pVfs
->
zName
)==0 ) ;

350 
	`sqlôe3_muãx_Àave
(
muãx
);

351  
pVfs
;

352 
	}
}

357 
	$vfsU∆ök
(
sqlôe3_vfs
 *
pVfs
){

358 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
)) );

359 if–
pVfs
==0 ){

361 }if–
vfsLi°
==
pVfs
 ){

362 
vfsLi°
 = 
pVfs
->
pNext
;

363 }if–
vfsLi°
 ){

364 
sqlôe3_vfs
 *
p
 = 
vfsLi°
;

365  
p
->
pNext
 &&Ö->pNext!=
pVfs
 ){

366 
p
 =Ö->
pNext
;

368 if–
p
->
pNext
==
pVfs
 ){

369 
p
->
pNext
 = 
pVfs
->pNext;

372 
	}
}

379 
	$sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
 *
pVfs
, 
makeDÊt
){

380 
	`MUTEX_LOGIC
(
sqlôe3_muãx
 *
muãx
;)

381 #i‚de‡
SQLITE_OMIT_AUTOINIT


382 
rc
 = 
	`sqlôe3_öôülize
();

383 if–
rc
 ) Ñc;

385 #ifde‡
SQLITE_ENABLE_API_ARMOR


386 if–
pVfs
==0 )  
SQLITE_MISUSE_BKPT
;

389 
	`MUTEX_LOGIC
–
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

390 
	`sqlôe3_muãx_íãr
(
muãx
);

391 
	`vfsU∆ök
(
pVfs
);

392 if–
makeDÊt
 || 
vfsLi°
==0 ){

393 
pVfs
->
pNext
 = 
vfsLi°
;

394 
vfsLi°
 = 
pVfs
;

396 
pVfs
->
pNext
 = 
vfsLi°
->pNext;

397 
vfsLi°
->
pNext
 = 
pVfs
;

399 
	`as£π
(
vfsLi°
);

400 
	`sqlôe3_muãx_Àave
(
muãx
);

401  
SQLITE_OK
;

402 
	}
}

407 
	$sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
 *
pVfs
){

408 #i‡
SQLITE_THREADSAFE


409 
sqlôe3_muãx
 *
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
);

411 
	`sqlôe3_muãx_íãr
(
muãx
);

412 
	`vfsU∆ök
(
pVfs
);

413 
	`sqlôe3_muãx_Àave
(
muãx
);

414  
SQLITE_OK
;

415 
	}
}

	@os.h

20 #i‚de‡
_SQLITE_OS_H_


21 
	#_SQLITE_OS_H_


	)

27 
	~"os_£tup.h
"

32 #i‚de‡
SET_FULLSYNC


33 
	#SET_FULLSYNC
(
x
,
y
)

	)

39 #i‚de‡
SQLITE_DEFAULT_SECTOR_SIZE


40 
	#SQLITE_DEFAULT_SECTOR_SIZE
 4096

	)

64 #i‚de‡
SQLITE_TEMP_FILE_PREFIX


65 
	#SQLITE_TEMP_FILE_PREFIX
 "ëûqs_"

	)

85 
	#NO_LOCK
 0

	)

86 
	#SHARED_LOCK
 1

	)

87 
	#RESERVED_LOCK
 2

	)

88 
	#PENDING_LOCK
 3

	)

89 
	#EXCLUSIVE_LOCK
 4

	)

146 #ifde‡
SQLITE_OMIT_WSD


147 
	#PENDING_BYTE
 (0x40000000)

	)

149 
	#PENDING_BYTE
 
sqlôe3PídögByã


	)

151 
	#RESERVED_BYTE
 (
PENDING_BYTE
+1)

	)

152 
	#SHARED_FIRST
 (
PENDING_BYTE
+2)

	)

153 
	#SHARED_SIZE
 510

	)

158 
sqlôe3OsInô
();

163 
sqlôe3OsClo£
(
sqlôe3_fûe
*);

164 
sqlôe3OsRód
(
sqlôe3_fûe
*, *, 
amt
, 
i64
 
off£t
);

165 
sqlôe3OsWrôe
(
sqlôe3_fûe
*, c⁄° *, 
amt
, 
i64
 
off£t
);

166 
sqlôe3OsTrunˇã
(
sqlôe3_fûe
*, 
i64
 
size
);

167 
sqlôe3OsSync
(
sqlôe3_fûe
*, );

168 
sqlôe3OsFûeSize
(
sqlôe3_fûe
*, 
i64
 *
pSize
);

169 
sqlôe3OsLock
(
sqlôe3_fûe
*, );

170 
sqlôe3OsU∆ock
(
sqlôe3_fûe
*, );

171 
sqlôe3OsCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
);

172 
sqlôe3OsFûeC⁄åﬁ
(
sqlôe3_fûe
*,,*);

173 
sqlôe3OsFûeC⁄åﬁHöt
(
sqlôe3_fûe
*,,*);

174 
	#SQLITE_FCNTL_DB_UNCHANGED
 0xˇ093Á0

	)

175 
sqlôe3OsSe˘‹Size
(
sqlôe3_fûe
 *
id
);

176 
sqlôe3OsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
);

177 
sqlôe3OsShmM≠
(
sqlôe3_fûe
 *,,,,volatile **);

178 
sqlôe3OsShmLock
(
sqlôe3_fûe
 *
id
, , , );

179 
sqlôe3OsShmB¨rõr
(
sqlôe3_fûe
 *
id
);

180 
sqlôe3OsShmUnm≠
(
sqlôe3_fûe
 *
id
, );

181 
sqlôe3OsFëch
(
sqlôe3_fûe
 *
id
, 
i64
, , **);

182 
sqlôe3OsUn„tch
(
sqlôe3_fûe
 *, 
i64
, *);

188 
sqlôe3OsO≥n
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
*, , *);

189 
sqlôe3OsDñëe
(
sqlôe3_vfs
 *, const *, );

190 
sqlôe3OsAc˚ss
(
sqlôe3_vfs
 *, c⁄° *, , *
pResOut
);

191 
sqlôe3OsFuŒP©h«me
(
sqlôe3_vfs
 *, const *, , *);

192 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


193 *
sqlôe3OsDlO≥n
(
sqlôe3_vfs
 *, const *);

194 
sqlôe3OsDlEº‹
(
sqlôe3_vfs
 *, , *);

195 (*
	$sqlôe3OsDlSym
(
sqlôe3_vfs
 *, *, const *))();

196 
	`sqlôe3OsDlClo£
(
sqlôe3_vfs
 *, *);

198 
	`sqlôe3OsR™dom√ss
(
sqlôe3_vfs
 *, , *);

199 
	`sqlôe3OsSÀï
(
sqlôe3_vfs
 *, );

200 
	`sqlôe3OsGëLa°Eº‹
(
sqlôe3_vfs
*);

201 
	`sqlôe3OsCuºítTimeI¡64
(
sqlôe3_vfs
 *, 
sqlôe3_öt64
*);

207 
	`sqlôe3OsO≥nMÆloc
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
 **, ,*);

208 
	`sqlôe3OsClo£Fªe
(
sqlôe3_fûe
 *);

	@os_common.h

20 #i‚de‡
_OS_COMMON_H_


21 
	#_OS_COMMON_H_


	)

28 #ifde‡
MEMORY_DEBUG


36 #ifde‡
SQLITE_PERFORMANCE_TRACE


42 
	~"hwtime.h
"

44 
sqlôe_uöt64
 
	gg_°¨t
;

45 
sqlôe_uöt64
 
	gg_ñ≠£d
;

46 
	#TIMER_START
 
g_°¨t
=
	`sqlôe3Hwtime
()

	)

47 
	#TIMER_END
 
g_ñ≠£d
=
	`sqlôe3Hwtime
()-
g_°¨t


	)

48 
	#TIMER_ELAPSED
 
g_ñ≠£d


	)

50 
	#TIMER_START


	)

51 
	#TIMER_END


	)

52 
	#TIMER_ELAPSED
 ((
sqlôe_uöt64
)0)

	)

60 #i‡
deföed
(
SQLITE_TEST
)

61 
sqlôe3_io_îr‹_hô
;

62 
sqlôe3_io_îr‹_h¨dhô
;

63 
sqlôe3_io_îr‹_≥ndög
;

64 
sqlôe3_io_îr‹_≥rsi°
;

65 
sqlôe3_io_îr‹_bíign
;

66 
sqlôe3_diskfuŒ_≥ndög
;

67 
sqlôe3_diskfuŒ
;

68 
	#SimuœãIOEº‹Bíign
(
X
Ë
sqlôe3_io_îr‹_bíign
=(X)

	)

69 
	#SimuœãIOEº‹
(
CODE
) \

70 if–(
sqlôe3_io_îr‹_≥rsi°
 && 
sqlôe3_io_îr‹_hô
) \

71 || 
sqlôe3_io_îr‹_≥ndög
-- == 1 ) \

72 { 
	`loˇl_i€º
(); 
CODE
; }

	)

73 
	$loˇl_i€º
(){

74 
	`IOTRACE
(("IOERR\n"));

75 
sqlôe3_io_îr‹_hô
++;

76 if–!
sqlôe3_io_îr‹_bíign
 ) 
sqlôe3_io_îr‹_h¨dhô
++;

77 
	}
}

78 
	#SimuœãDiskfuŒEº‹
(
CODE
) \

79 if–
sqlôe3_diskfuŒ_≥ndög
 ){ \

80 if–
sqlôe3_diskfuŒ_≥ndög
 == 1 ){ \

81 
	`loˇl_i€º
(); \

82 
sqlôe3_diskfuŒ
 = 1; \

83 
sqlôe3_io_îr‹_hô
 = 1; \

84 
CODE
; \

86 
sqlôe3_diskfuŒ_≥ndög
--; \

88 }

	)

90 
	#SimuœãIOEº‹Bíign
(
X
)

	)

91 
	#SimuœãIOEº‹
(
A
)

	)

92 
	#SimuœãDiskfuŒEº‹
(
A
)

	)

98 #i‡
deföed
(
SQLITE_TEST
)

99 
sqlôe3_›í_fûe_cou¡
;

100 
	#O≥nCou¡î
(
X
Ë
sqlôe3_›í_fûe_cou¡
+=(X)

	)

102 
	#O≥nCou¡î
(
X
)

	)

	@os_setup.h

16 #i‚de‡
SQLITE_OS_SETUP_H


17 
	#SQLITE_OS_SETUP_H


	)

27 #i‡
deföed
(
SQLITE_OS_OTHER
)

28 #i‡
SQLITE_OS_OTHER
==1

29 #unde‡
SQLITE_OS_UNIX


30 
	#SQLITE_OS_UNIX
 0

	)

31 #unde‡
SQLITE_OS_WIN


32 
	#SQLITE_OS_WIN
 0

	)

34 #unde‡
SQLITE_OS_OTHER


37 #i‡!
deföed
(
SQLITE_OS_UNIX
Ë&& !deföed(
SQLITE_OS_OTHER
)

38 
	#SQLITE_OS_OTHER
 0

	)

39 #i‚de‡
SQLITE_OS_WIN


40 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
Ë|| deföed(
__CYGWIN__
) || \

41 
deföed
(
__MINGW32__
Ë|| 
	$deföed
(
__BORLANDC__
)

42 
	#SQLITE_OS_WIN
 1

	)

43 
	#SQLITE_OS_UNIX
 0

	)

45 
	#SQLITE_OS_WIN
 0

	)

46 
	#SQLITE_OS_UNIX
 1

	)

49 
	#SQLITE_OS_UNIX
 0

	)

52 #i‚de‡
SQLITE_OS_WIN


53 
	#SQLITE_OS_WIN
 0

	)

	@os_unix.c

46 
	~"sqlôeI¡.h
"

47 #i‡
SQLITE_OS_UNIX


66 #i‡!
deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

67 #i‡
deföed
(
__APPLE__
)

68 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

70 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

75 #i‡
deföed
(
__APPLE__
)

76 
	#HAVE_PREAD
 1

	)

77 
	#HAVE_PWRITE
 1

	)

79 #i‡
deföed
(
HAVE_PREAD64
Ë&& deföed(
HAVE_PWRITE64
)

80 #unde‡
USE_PREAD


81 
	#USE_PREAD64
 1

	)

82 #ñi‡
deföed
(
HAVE_PREAD
Ë&& deföed(
HAVE_PWRITE
)

83 #unde‡
USE_PREAD64


84 
	#USE_PREAD
 1

	)

90 
	~<sys/ty≥s.h
>

91 
	~<sys/°©.h
>

92 
	~<f˙é.h
>

93 
	~<uni°d.h
>

94 
	~<time.h
>

95 
	~<sys/time.h
>

96 
	~<î∫o.h
>

97 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

98 
	~<sys/mm™.h
>

101 #i‡
SQLITE_ENABLE_LOCKING_STYLE


102 
	~<sys/io˘l.h
>

103 
	~<sys/fûe.h
>

104 
	~<sys/∑øm.h
>

107 #i‡
deföed
(
__APPLE__
Ë&& ((
__MAC_OS_X_VERSION_MIN_REQUIRED
 > 1050) || \

108 (
	g__IPHONE_OS_VERSION_MIN_REQUIRED
 > 2000))

109 #i‡(!
deföed
(
TARGET_OS_EMBEDDED
) || (TARGET_OS_EMBEDDED==0)) \

110 && (!
deföed
(
TARGET_IPHONE_SIMULATOR
Ë|| (
	gTARGET_IPHONE_SIMULATOR
==0))

111 
	#HAVE_GETHOSTUUID
 1

	)

118 #i‡
OS_VXWORKS


119 
	~<sys/io˘l.h
>

120 
	~<£m≠h‹e.h
>

121 
	~<limôs.h
>

124 #i‡
deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


125 
	~<sys/mou¡.h
>

128 #ifde‡
HAVE_UTIME


129 
	~<utime.h
>

135 
	#SQLITE_FSFLAGS_IS_MSDOS
 0x1

	)

141 #i‡
SQLITE_THREADSAFE


142 
	~<±hªad.h
>

143 
	#SQLITE_UNIX_THREADS
 1

	)

149 #i‚de‡
SQLITE_DEFAULT_FILE_PERMISSIONS


150 
	#SQLITE_DEFAULT_FILE_PERMISSIONS
 0644

	)

156 #i‚de‡
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS


157 
	#SQLITE_DEFAULT_PROXYDIR_PERMISSIONS
 0755

	)

163 
	#MAX_PATHNAME
 512

	)

168 
	#SQLITE_MAX_SYMLINKS
 100

	)

172 
	#osGëpid
(
X
Ë(
pid_t
)
	`gëpid
()

	)

178 
	#IS_LOCK_ERROR
(
x
Ë((x !
SQLITE_OK
Ë&& (x !
SQLITE_BUSY
))

	)

181 
unixShm
 
	tunixShm
;

182 
unixShmNode
 
	tunixShmNode
;

183 
unixInodeInfo
 
	tunixInodeInfo
;

184 
UnixUnu£dFd
 
	tUnixUnu£dFd
;

192 
	sUnixUnu£dFd
 {

193 
	mfd
;

194 
	mÊags
;

195 
UnixUnu£dFd
 *
	mpNext
;

202 
unixFûe
 
	tunixFûe
;

203 
	sunixFûe
 {

204 
sqlôe3_io_mëhods
 c⁄° *
	mpMëhod
;

205 
sqlôe3_vfs
 *
	mpVfs
;

206 
unixInodeInfo
 *
	mpInode
;

207 
	mh
;

208 
	meFûeLock
;

209 
	m˘æFœgs
;

210 
	mœ°Eºno
;

211 *
	mlockögC⁄ãxt
;

212 
UnixUnu£dFd
 *
	mpUnu£d
;

213 c⁄° *
	mzP©h
;

214 
unixShm
 *
	mpShm
;

215 
	mszChunk
;

216 #i‡
SQLITE_MAX_MMAP_SIZE
>0

217 
	mnFëchOut
;

218 
sqlôe3_öt64
 
	mmm≠Size
;

219 
sqlôe3_öt64
 
	mmm≠SizeA˘uÆ
;

220 
sqlôe3_öt64
 
	mmm≠SizeMax
;

221 *
	mpM≠Regi⁄
;

223 #ifde‡
__QNXNTO__


224 
	m£˘‹Size
;

225 
	mdevi˚Ch¨a˘îi°ics
;

227 #i‡
SQLITE_ENABLE_LOCKING_STYLE


228 
	m›íFœgs
;

230 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 || 
deföed
(
__APPLE__
)

231 
	mfsFœgs
;

233 #i‡
OS_VXWORKS


234 
vxw‹ksFûeId
 *
	mpId
;

236 #ifde‡
SQLITE_DEBUG


244 
	må™sC¡rChng
;

245 
	mdbUpd©e
;

246 
	möN‹mÆWrôe
;

250 #ifde‡
SQLITE_TEST


254 
	maPaddög
[32];

262 
pid_t
 
	gøndom√ssPid
 = 0;

267 
	#UNIXFILE_EXCL
 0x01

	)

268 
	#UNIXFILE_RDONLY
 0x02

	)

269 
	#UNIXFILE_PERSIST_WAL
 0x04

	)

270 #i‚de‡
SQLITE_DISABLE_DIRSYNC


271 
	#UNIXFILE_DIRSYNC
 0x08

	)

273 
	#UNIXFILE_DIRSYNC
 0x00

	)

275 
	#UNIXFILE_PSOW
 0x10

	)

276 
	#UNIXFILE_DELETE
 0x20

	)

277 
	#UNIXFILE_URI
 0x40

	)

278 
	#UNIXFILE_NOLOCK
 0x80

	)

283 
	~"os_comm⁄.h
"

288 #i‚de‡
O_LARGEFILE


289 
	#O_LARGEFILE
 0

	)

291 #ifde‡
SQLITE_DISABLE_LFS


292 #unde‡
O_LARGEFILE


293 
	#O_LARGEFILE
 0

	)

295 #i‚de‡
O_NOFOLLOW


296 
	#O_NOFOLLOW
 0

	)

298 #i‚de‡
O_BINARY


299 
	#O_BINARY
 0

	)

306 #i‡
SQLITE_THREADSAFE


307 
	#thªadid
 
	`±hªad_£lf
()

	)

309 
	#thªadid
 0

	)

315 #i‡!
deföed
(
HAVE_MREMAP
)

316 #i‡
deföed
(
__löux__
Ë&& deföed(
_GNU_SOURCE
)

317 
	#HAVE_MREMAP
 1

	)

319 
	#HAVE_MREMAP
 0

	)

327 #ifde‡
__ANDROID__


328 
	#l£ek
 
l£ek64


	)

339 
	$posixO≥n
(c⁄° *
zFûe
, 
Êags
, 
mode
){

340  
	`›í
(
zFûe
, 
Êags
, 
mode
);

341 
	}
}

344 
›íDúe˘‹y
(const *, *);

345 
unixGë∑gesize
();

353 
	sunix_sysˇŒ
 {

354 c⁄° *
	mzName
;

355 
sqlôe3_sysˇŒ_±r
 
	mpCuºít
;

356 
sqlôe3_sysˇŒ_±r
 
	mpDeÁu…
;

357 } 
	gaSysˇŒ
[] = {

358 { "›í", (
sqlôe3_sysˇŒ_±r
)
posixO≥n
, 0 },

359 
	#osO≥n
 (((*)(c⁄° *,,))
aSysˇŒ
[0].
pCuºít
)

	)

361 { "˛o£", (
sqlôe3_sysˇŒ_±r
)
˛o£
, 0 },

362 
	#osClo£
 (((*)())
aSysˇŒ
[1].
pCuºít
)

	)

364 { "ac˚ss", (
sqlôe3_sysˇŒ_±r
)
ac˚ss
, 0 },

365 
	#osAc˚ss
 (((*)(c⁄° *,))
aSysˇŒ
[2].
pCuºít
)

	)

367 { "gëcwd", (
sqlôe3_sysˇŒ_±r
)
gëcwd
, 0 },

368 
	#osGëcwd
 ((*(*)(*,
size_t
))
aSysˇŒ
[3].
pCuºít
)

	)

370 { "°©", (
sqlôe3_sysˇŒ_±r
)
°©
, 0 },

371 
	#osSèt
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[4].
pCuºít
)

	)

379 #ifde‡
__DJGPP__


381 
	#osF°©
(
a
,
b
,
c
Ë0

	)

383 { "f°©", (
sqlôe3_sysˇŒ_±r
)
f°©
, 0 },

384 
	#osF°©
 (((*)(,
°©
*))
aSysˇŒ
[5].
pCuºít
)

	)

387 { "·runˇã", (
sqlôe3_sysˇŒ_±r
)
·runˇã
, 0 },

388 
	#osFåunˇã
 (((*)(,
off_t
))
aSysˇŒ
[6].
pCuºít
)

	)

390 { "f˙é", (
sqlôe3_sysˇŒ_±r
)
f˙é
, 0 },

391 
	#osF˙é
 (((*)(,,...))
aSysˇŒ
[7].
pCuºít
)

	)

393 { "ªad", (
sqlôe3_sysˇŒ_±r
)
ªad
, 0 },

394 
	#osRód
 ((
	`ssize_t
(*)(,*,
size_t
))
aSysˇŒ
[8].
pCuºít
)

	)

396 #i‡
deföed
(
USE_PREAD
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


397 { "¥ód", (
sqlôe3_sysˇŒ_±r
)
¥ód
, 0 },

399 { "¥ód", (
sqlôe3_sysˇŒ_±r
)0, 0 },

401 
	#osPªad
 ((
	`ssize_t
(*)(,*,
size_t
,
off_t
))
aSysˇŒ
[9].
pCuºít
)

	)

403 #i‡
deföed
(
USE_PREAD64
)

404 { "¥ód64", (
sqlôe3_sysˇŒ_±r
)
¥ód64
, 0 },

406 { "¥ód64", (
sqlôe3_sysˇŒ_±r
)0, 0 },

408 
	#osPªad64
 ((
	`ssize_t
(*)(,*,
size_t
,
off64_t
))
aSysˇŒ
[10].
pCuºít
)

	)

410 { "wrôe", (
sqlôe3_sysˇŒ_±r
)
wrôe
, 0 },

411 
	#osWrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
))
aSysˇŒ
[11].
pCuºít
)

	)

413 #i‡
deföed
(
USE_PREAD
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


414 { "pwrôe", (
sqlôe3_sysˇŒ_±r
)
pwrôe
, 0 },

416 { "pwrôe", (
sqlôe3_sysˇŒ_±r
)0, 0 },

418 
	#osPwrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off_t
))\

419 
aSysˇŒ
[12].
pCuºít
)

	)

421 #i‡
deföed
(
USE_PREAD64
)

422 { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)
pwrôe64
, 0 },

424 { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)0, 0 },

426 
	#osPwrôe64
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off64_t
))\

427 
aSysˇŒ
[13].
pCuºít
)

	)

429 { "fchmod", (
sqlôe3_sysˇŒ_±r
)
fchmod
, 0 },

430 
	#osFchmod
 (((*)(,
mode_t
))
aSysˇŒ
[14].
pCuºít
)

	)

432 #i‡
deföed
(
HAVE_POSIX_FALLOCATE
) && HAVE_POSIX_FALLOCATE

433 { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)
posix_ÁŒoˇã
, 0 },

435 { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)0, 0 },

437 
	#osFÆloˇã
 (((*)(,
off_t
,off_t))
aSysˇŒ
[15].
pCuºít
)

	)

439 { "u∆ök", (
sqlôe3_sysˇŒ_±r
)
u∆ök
, 0 },

440 
	#osU∆ök
 (((*)(c⁄° *))
aSysˇŒ
[16].
pCuºít
)

	)

442 { "›íDúe˘‹y", (
sqlôe3_sysˇŒ_±r
)
›íDúe˘‹y
, 0 },

443 
	#osO≥nDúe˘‹y
 (((*)(c⁄° *,*))
aSysˇŒ
[17].
pCuºít
)

	)

445 { "mkdú", (
sqlôe3_sysˇŒ_±r
)
mkdú
, 0 },

446 
	#osMkdú
 (((*)(c⁄° *,
mode_t
))
aSysˇŒ
[18].
pCuºít
)

	)

448 { "rmdú", (
sqlôe3_sysˇŒ_±r
)
rmdú
, 0 },

449 
	#osRmdú
 (((*)(c⁄° *))
aSysˇŒ
[19].
pCuºít
)

	)

451 #i‡
deföed
(
HAVE_FCHOWN
)

452 { "fchown", (
sqlôe3_sysˇŒ_±r
)
fchown
, 0 },

454 { "fchown", (
sqlôe3_sysˇŒ_±r
)0, 0 },

456 
	#osFchown
 (((*)(,
uid_t
,
gid_t
))
aSysˇŒ
[20].
pCuºít
)

	)

458 { "gëeuid", (
sqlôe3_sysˇŒ_±r
)
gëeuid
, 0 },

459 
	#osGëeuid
 ((
	`uid_t
(*)())
aSysˇŒ
[21].
pCuºít
)

	)

461 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

462 { "mm≠", (
sqlôe3_sysˇŒ_±r
)
mm≠
, 0 },

464 { "mm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

466 
	#osMm≠
 ((*(*)(*,
size_t
,,,,
off_t
))
aSysˇŒ
[22].
pCuºít
)

	)

468 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

469 { "munm≠", (
sqlôe3_sysˇŒ_±r
)
munm≠
, 0 },

471 { "munm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

473 
	#osMunm≠
 ((*(*)(*,
size_t
))
aSysˇŒ
[23].
pCuºít
)

	)

475 #i‡
HAVE_MREMAP
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

476 { "mªm≠", (
sqlôe3_sysˇŒ_±r
)
mªm≠
, 0 },

478 { "mªm≠", (
sqlôe3_sysˇŒ_±r
)0, 0 },

480 
	#osMªm≠
 ((*(*)(*,
size_t
,size_t,,...))
aSysˇŒ
[24].
pCuºít
)

	)

482 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

483 { "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)
unixGë∑gesize
, 0 },

485 { "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)0, 0 },

487 
	#osGë∑gesize
 (((*)())
aSysˇŒ
[25].
pCuºít
)

	)

489 #i‡
deföed
(
HAVE_READLINK
)

490 { "ªadlök", (
sqlôe3_sysˇŒ_±r
)
ªadlök
, 0 },

492 { "ªadlök", (
sqlôe3_sysˇŒ_±r
)0, 0 },

494 
	#osRódlök
 ((
	`ssize_t
(*)(c⁄° *,*,
size_t
))
aSysˇŒ
[26].
pCuºít
)

	)

496 #i‡
deföed
(
HAVE_LSTAT
)

497 { "l°©", (
sqlôe3_sysˇŒ_±r
)
l°©
, 0 },

499 { "l°©", (
sqlôe3_sysˇŒ_±r
)0, 0 },

501 
	#osL°©
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[27].
pCuºít
)

	)

511 
	$robu°Fchown
(
fd
, 
uid_t
 
uid
, 
gid_t
 
gid
){

512 #i‡
	`deföed
(
HAVE_FCHOWN
)

513  
	`osGëeuid
(Ë? 0 : 
	`osFchown
(
fd
,
uid
,
gid
);

517 
	}
}

525 
	$unixSëSy°emCÆl
(

526 
sqlôe3_vfs
 *
pNŸU£d
,

527 c⁄° *
zName
,

528 
sqlôe3_sysˇŒ_±r
 
pNewFunc


530 
i
;

531 
rc
 = 
SQLITE_NOTFOUND
;

533 
	`UNUSED_PARAMETER
(
pNŸU£d
);

534 if–
zName
==0 ){

538 
rc
 = 
SQLITE_OK
;

539 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

540 if–
aSysˇŒ
[
i
].
pDeÁu…
 ){

541 
aSysˇŒ
[
i
].
pCuºít
 =áSysˇŒ[i].
pDeÁu…
;

548 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

549 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ){

550 if–
aSysˇŒ
[
i
].
pDeÁu…
==0 ){

551 
aSysˇŒ
[
i
].
pDeÁu…
 =áSysˇŒ[i].
pCuºít
;

553 
rc
 = 
SQLITE_OK
;

554 if–
pNewFunc
==0 )ÖNewFun¯
aSysˇŒ
[
i
].
pDeÁu…
;

555 
aSysˇŒ
[
i
].
pCuºít
 = 
pNewFunc
;

560  
rc
;

561 
	}
}

568 
sqlôe3_sysˇŒ_±r
 
	$unixGëSy°emCÆl
(

569 
sqlôe3_vfs
 *
pNŸU£d
,

570 c⁄° *
zName


572 
i
;

574 
	`UNUSED_PARAMETER
(
pNŸU£d
);

575 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

576 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) áSysˇŒ[i].
pCuºít
;

579 
	}
}

587 c⁄° *
	$unixNextSy°emCÆl
(
sqlôe3_vfs
 *
p
, c⁄° *
zName
){

588 
i
 = -1;

590 
	`UNUSED_PARAMETER
(
p
);

591 if–
zName
 ){

592 
i
=0; i<
	`AºaySize
(
aSysˇŒ
)-1; i++){

593 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) ;

596 
i
++; i<
	`AºaySize
(
aSysˇŒ
); i++){

597 if–
aSysˇŒ
[
i
].
pCuºít
!=0 ) áSysˇŒ[i].
zName
;

600 
	}
}

607 #i‚de‡
SQLITE_MINIMUM_FILE_DESCRIPTOR


608 
	#SQLITE_MINIMUM_FILE_DESCRIPTOR
 3

	)

628 
	$robu°_›í
(c⁄° *
z
, 
f
, 
mode_t
 
m
){

629 
fd
;

630 
mode_t
 
m2
 = 
m
 ? m : 
SQLITE_DEFAULT_FILE_PERMISSIONS
;

632 #i‡
	`deföed
(
O_CLOEXEC
)

633 
fd
 = 
	`osO≥n
(
z
,
f
|
O_CLOEXEC
,
m2
);

635 
fd
 = 
	`osO≥n
(
z
,
f
,
m2
);

637 if–
fd
<0 ){

638 if–
î∫o
==
EINTR
 ) ;

641 if–
fd
>=
SQLITE_MINIMUM_FILE_DESCRIPTOR
 ) ;

642 
	`osClo£
(
fd
);

643 
	`sqlôe3_log
(
SQLITE_WARNING
,

644 "©ãm±Åÿ›í \"%s\"á†fûêdes¸ùt‹ %d", 
z
, 
fd
);

645 
fd
 = -1;

646 if–
	`osO≥n
("/dev/nuŒ", 
f
, 
m
)<0 ) ;

648 if–
fd
>=0 ){

649 if–
m
!=0 ){

650 
°©
 
°©buf
;

651 if–
	`osF°©
(
fd
, &
°©buf
)==0

652 && 
°©buf
.
°_size
==0

653 && (
°©buf
.
°_mode
&0777)!=
m


655 
	`osFchmod
(
fd
, 
m
);

658 #i‡
	`deföed
(
FD_CLOEXEC
Ë&& (!deföed(
O_CLOEXEC
) || O_CLOEXEC==0)

659 
	`osF˙é
(
fd
, 
F_SETFD
, osF˙é(fd, 
F_GETFD
, 0Ë| 
FD_CLOEXEC
);

662  
fd
;

663 
	}
}

679 
	$unixE¡îMuãx
(){

680 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

681 
	}
}

682 
	$unixLóveMuãx
(){

683 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

684 
	}
}

685 #ifde‡
SQLITE_DEBUG


686 
	$unixMuãxHñd
() {

687  
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

688 
	}
}

692 #ifde‡
SQLITE_HAVE_OS_TRACE


698 c⁄° *
	$azFûeLock
(
eFûeLock
){

699  
eFûeLock
 ){

700 
NO_LOCK
:  "NONE";

701 
SHARED_LOCK
:  "SHARED";

702 
RESERVED_LOCK
:  "RESERVED";

703 
PENDING_LOCK
:  "PENDING";

704 
EXCLUSIVE_LOCK
:  "EXCLUSIVE";

707 
	}
}

710 #ifde‡
SQLITE_LOCK_TRACE


719 
	$lockTø˚
(
fd
, 
›
, 
Êock
 *
p
){

720 *
zOpName
, *
zTy≥
;

721 
s
;

722 
ßvedEºno
;

723 if–
›
==
F_GETLK
 ){

724 
zOpName
 = "GETLK";

725 }if–
›
==
F_SETLK
 ){

726 
zOpName
 = "SETLK";

728 
s
 = 
	`osF˙é
(
fd
, 
›
, 
p
);

729 
	`sqlôe3DebugPrötf
("f˙é unknow¿%d %d %d\n", 
fd
, 
›
, 
s
);

730  
s
;

732 if–
p
->
l_ty≥
==
F_RDLCK
 ){

733 
zTy≥
 = "RDLCK";

734 }if–
p
->
l_ty≥
==
F_WRLCK
 ){

735 
zTy≥
 = "WRLCK";

736 }if–
p
->
l_ty≥
==
F_UNLCK
 ){

737 
zTy≥
 = "UNLCK";

739 
	`as£π
( 0 );

741 
	`as£π
–
p
->
l_whí˚
==
SEEK_SET
 );

742 
s
 = 
	`osF˙é
(
fd
, 
›
, 
p
);

743 
ßvedEºno
 = 
î∫o
;

744 
	`sqlôe3DebugPrötf
("fcntl %d %d %s %s %d %d %d %d\n",

745 
thªadid
, 
fd
, 
zOpName
, 
zTy≥
, ()
p
->
l_°¨t
, (Ì->
l_Àn
,

746 ()
p
->
l_pid
, 
s
);

747 if–
s
==(-1Ë&& 
›
==
F_SETLK
 && (
p
->
l_ty≥
==
F_RDLCK
 ||Ö->l_ty≥==
F_WRLCK
) ){

748 
Êock
 
l2
;

749 
l2
 = *
p
;

750 
	`osF˙é
(
fd
, 
F_GETLK
, &
l2
);

751 if–
l2
.
l_ty≥
==
F_RDLCK
 ){

752 
zTy≥
 = "RDLCK";

753 }if–
l2
.
l_ty≥
==
F_WRLCK
 ){

754 
zTy≥
 = "WRLCK";

755 }if–
l2
.
l_ty≥
==
F_UNLCK
 ){

756 
zTy≥
 = "UNLCK";

758 
	`as£π
( 0 );

760 
	`sqlôe3DebugPrötf
("fcntl-failure-reason: %s %d %d %d\n",

761 
zTy≥
, ()
l2
.
l_°¨t
, (Ó2.
l_Àn
, (Ó2.
l_pid
);

763 
î∫o
 = 
ßvedEºno
;

764  
s
;

765 
	}
}

766 #unde‡
osF˙é


767 
	#osF˙é
 
lockTø˚


	)

777 
	$robu°_·runˇã
(
h
, 
sqlôe3_öt64
 
sz
){

778 
rc
;

779 #ifde‡
__ANDROID__


784 if–
sz
>(
sqlôe3_öt64
)0x7FFFFFFF ){

785 
rc
 = 
SQLITE_OK
;

788 do{ 
rc
 = 
	`osFåunˇã
(
h
,
sz
); }Ñc<0 && 
î∫o
==
EINTR
 );

789  
rc
;

790 
	}
}

802 
	$sqlôeEº‹FromPosixEº‹
(
posixEº‹
, 
sqlôeIOEº
) {

803 
	`as£π
–(
sqlôeIOEº
 =
SQLITE_IOERR_LOCK
) ||

804 (
sqlôeIOEº
 =
SQLITE_IOERR_UNLOCK
) ||

805 (
sqlôeIOEº
 =
SQLITE_IOERR_RDLOCK
) ||

806 (
sqlôeIOEº
 =
SQLITE_IOERR_CHECKRESERVEDLOCK
) );

807 
posixEº‹
) {

808 
EACCES
:

809 
EAGAIN
:

810 
ETIMEDOUT
:

811 
EBUSY
:

812 
EINTR
:

813 
ENOLCK
:

816  
SQLITE_BUSY
;

818 
EPERM
:

819  
SQLITE_PERM
;

822  
sqlôeIOEº
;

824 
	}
}

844 
	svxw‹ksFûeId
 {

845 
vxw‹ksFûeId
 *
	mpNext
;

846 
	mnRef
;

847 
	mnName
;

848 *
	mzC™⁄iˇlName
;

851 #i‡
OS_VXWORKS


856 
vxw‹ksFûeId
 *
	gvxw‹ksFûeLi°
 = 0;

871 
	$vxw‹ksSim∂ifyName
(*
z
, 
n
){

872 
i
, 
j
;

873  
n
>1 && 
z
[n-1]=='/' ){Ç--; }

874 
i
=
j
=0; i<
n
; i++){

875 if–
z
[
i
]=='/' ){

876 if–
z
[
i
+1]=='/' ) ;

877 if–
z
[
i
+1]=='.' && i+2<
n
 && z[i+2]=='/' ){

878 
i
 += 1;

881 if–
z
[
i
+1]=='.' && i+3<
n
 && z[i+2]=='.' && z[i+3]=='/' ){

882  
j
>0 && 
z
[j-1]!='/' ){ j--; }

883 if–
j
>0 ){ j--; }

884 
i
 += 2;

888 
z
[
j
++] = z[
i
];

890 
z
[
j
] = 0;

891  
j
;

892 
	}
}

905 
vxw‹ksFûeId
 *
	$vxw‹ksFödFûeId
(c⁄° *
zAbsﬁuãName
){

906 
vxw‹ksFûeId
 *
pNew
;

907 
vxw‹ksFûeId
 *
pC™did©e
;

908 
n
;

910 
	`as£π
–
zAbsﬁuãName
[0]=='/' );

911 
n
 = ()
	`°æí
(
zAbsﬁuãName
);

912 
pNew
 = 
	`sqlôe3_mÆloc64
–(*pNewË+ (
n
+1) );

913 if–
pNew
==0 )  0;

914 
pNew
->
zC™⁄iˇlName
 = (*)&pNew[1];

915 
	`mem˝y
(
pNew
->
zC™⁄iˇlName
, 
zAbsﬁuãName
, 
n
+1);

916 
n
 = 
	`vxw‹ksSim∂ifyName
(
pNew
->
zC™⁄iˇlName
,Ç);

922 
	`unixE¡îMuãx
();

923 
pC™did©e
=
vxw‹ksFûeLi°
;ÖC™did©e;ÖC™did©eıC™did©e->
pNext
){

924 if–
pC™did©e
->
nName
==
n


925 && 
	`memcmp
(
pC™did©e
->
zC™⁄iˇlName
, 
pNew
->zC™⁄iˇlName, 
n
)==0

927 
	`sqlôe3_‰ì
(
pNew
);

928 
pC™did©e
->
nRef
++;

929 
	`unixLóveMuãx
();

930  
pC™did©e
;

935 
pNew
->
nRef
 = 1;

936 
pNew
->
nName
 = 
n
;

937 
pNew
->
pNext
 = 
vxw‹ksFûeLi°
;

938 
vxw‹ksFûeLi°
 = 
pNew
;

939 
	`unixLóveMuãx
();

940  
pNew
;

941 
	}
}

947 
	$vxw‹ksRñó£FûeId
(
vxw‹ksFûeId
 *
pId
){

948 
	`unixE¡îMuãx
();

949 
	`as£π
–
pId
->
nRef
>0 );

950 
pId
->
nRef
--;

951 if–
pId
->
nRef
==0 ){

952 
vxw‹ksFûeId
 **
µ
;

953 
µ
=&
vxw‹ksFûeLi°
; *µ && *µ!=
pId
;Ö∞&((*µ)->
pNext
)){}

954 
	`as£π
–*
µ
==
pId
 );

955 *
µ
 = 
pId
->
pNext
;

956 
	`sqlôe3_‰ì
(
pId
);

958 
	`unixLóveMuãx
();

959 
	}
}

1059 
	sunixFûeId
 {

1060 
dev_t
 
	mdev
;

1061 #i‡
OS_VXWORKS


1062 
vxw‹ksFûeId
 *
	mpId
;

1064 
öo_t
 
	möo
;

1077 
	sunixInodeInfo
 {

1078 
unixFûeId
 
	mfûeId
;

1079 
	mnSh¨ed
;

1080 
	meFûeLock
;

1081 
	mbPro˚ssLock
;

1082 
	mnRef
;

1083 
unixShmNode
 *
	mpShmNode
;

1084 
	mnLock
;

1085 
UnixUnu£dFd
 *
	mpUnu£d
;

1086 
unixInodeInfo
 *
	mpNext
;

1087 
unixInodeInfo
 *
	mpPªv
;

1088 #i‡
SQLITE_ENABLE_LOCKING_STYLE


1089 
	msh¨edByã
;

1091 #i‡
OS_VXWORKS


1092 
£m_t
 *
	mpSem
;

1093 
	maSemName
[
MAX_PATHNAME
+2];

1100 
unixInodeInfo
 *
	göodeLi°
 = 0;

1118 
	#unixLogEº‹
(
a
,
b
,
c
Ë
	`unixLogEº‹AtLöe
◊,b,c,
__LINE__
)

	)

1119 
	$unixLogEº‹AtLöe
(

1120 
îrcode
,

1121 c⁄° *
zFunc
,

1122 c⁄° *
zP©h
,

1123 
iLöe


1125 *
zEº
;

1126 
iEºno
 = 
î∫o
;

1132 #i‡
SQLITE_THREADSAFE
 && 
	`deföed
(
HAVE_STRERROR_R
)

1133 
aEº
[80];

1134 
	`mem£t
(
aEº
, 0, (aErr));

1135 
zEº
 = 
aEº
;

1149 #i‡
	`deföed
(
STRERROR_R_CHAR_P
Ë|| deföed(
__USE_GNU
)

1150 
zEº
 =

1152 
	`°ªº‹_r
(
iEºno
, 
aEº
, (aErr)-1);

1154 #ñi‡
SQLITE_THREADSAFE


1156 
zEº
 = "";

1159 
zEº
 = 
	`°ªº‹
(
iEºno
);

1162 if–
zP©h
==0 ) zPath = "";

1163 
	`sqlôe3_log
(
îrcode
,

1165 
iLöe
, 
iEºno
, 
zFunc
, 
zP©h
, 
zEº


1168  
îrcode
;

1169 
	}
}

1184 
	$robu°_˛o£
(
unixFûe
 *
pFûe
, 
h
, 
löío
){

1185 if–
	`osClo£
(
h
) ){

1186 
	`unixLogEº‹AtLöe
(
SQLITE_IOERR_CLOSE
, "close",

1187 
pFûe
 ?ÖFûe->
zP©h
 : 0, 
löío
);

1189 
	}
}

1195 
	$°‹eLa°Eºno
(
unixFûe
 *
pFûe
, 
îr‹
){

1196 
pFûe
->
œ°Eºno
 = 
îr‹
;

1197 
	}
}

1202 
	$˛o£PídögFds
(
unixFûe
 *
pFûe
){

1203 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1204 
UnixUnu£dFd
 *
p
;

1205 
UnixUnu£dFd
 *
pNext
;

1206 
p
=
pInode
->
pUnu£d
;Ö;Ö=
pNext
){

1207 
pNext
 = 
p
->pNext;

1208 
	`robu°_˛o£
(
pFûe
, 
p
->
fd
, 
__LINE__
);

1209 
	`sqlôe3_‰ì
(
p
);

1211 
pInode
->
pUnu£d
 = 0;

1212 
	}
}

1220 
	$ªÀa£InodeInfo
(
unixFûe
 *
pFûe
){

1221 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1222 
	`as£π
–
	`unixMuãxHñd
() );

1223 if–
	`ALWAYS
(
pInode
) ){

1224 
pInode
->
nRef
--;

1225 if–
pInode
->
nRef
==0 ){

1226 
	`as£π
–
pInode
->
pShmNode
==0 );

1227 
	`˛o£PídögFds
(
pFûe
);

1228 if–
pInode
->
pPªv
 ){

1229 
	`as£π
–
pInode
->
pPªv
->
pNext
==pInode );

1230 
pInode
->
pPªv
->
pNext
 =ÖInode->pNext;

1232 
	`as£π
–
öodeLi°
==
pInode
 );

1233 
öodeLi°
 = 
pInode
->
pNext
;

1235 if–
pInode
->
pNext
 ){

1236 
	`as£π
–
pInode
->
pNext
->
pPªv
==pInode );

1237 
pInode
->
pNext
->
pPªv
 =ÖInode->pPrev;

1239 
	`sqlôe3_‰ì
(
pInode
);

1242 
	}
}

1254 
	$födInodeInfo
(

1255 
unixFûe
 *
pFûe
,

1256 
unixInodeInfo
 **
µInode


1258 
rc
;

1259 
fd
;

1260 
unixFûeId
 
fûeId
;

1261 
°©
 
°©buf
;

1262 
unixInodeInfo
 *
pInode
 = 0;

1264 
	`as£π
–
	`unixMuãxHñd
() );

1269 
fd
 = 
pFûe
->
h
;

1270 
rc
 = 
	`osF°©
(
fd
, &
°©buf
);

1271 if–
rc
!=0 ){

1272 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1273 #i‡
	`deföed
(
EOVERFLOW
Ë&& deföed(
SQLITE_DISABLE_LFS
)

1274 if–
pFûe
->
œ°Eºno
==
EOVERFLOW
 )  
SQLITE_NOLFS
;

1276  
SQLITE_IOERR
;

1279 #ifde‡
__APPLE__


1290 if–
°©buf
.
°_size
==0 && (
pFûe
->
fsFœgs
 & 
SQLITE_FSFLAGS_IS_MSDOS
)!=0 ){

1291 do{ 
rc
 = 
	`osWrôe
(
fd
, "S", 1); }Ñc<0 && 
î∫o
==
EINTR
 );

1292 if–
rc
!=1 ){

1293 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1294  
SQLITE_IOERR
;

1296 
rc
 = 
	`osF°©
(
fd
, &
°©buf
);

1297 if–
rc
!=0 ){

1298 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1299  
SQLITE_IOERR
;

1304 
	`mem£t
(&
fûeId
, 0, (fileId));

1305 
fûeId
.
dev
 = 
°©buf
.
°_dev
;

1306 #i‡
OS_VXWORKS


1307 
fûeId
.
pId
 = 
pFûe
->pId;

1309 
fûeId
.
öo
 = 
°©buf
.
°_öo
;

1311 
pInode
 = 
öodeLi°
;

1312  
pInode
 && 
	`memcmp
(&
fûeId
, &pInode->fileId, (fileId)) ){

1313 
pInode
 =ÖInode->
pNext
;

1315 if–
pInode
==0 ){

1316 
pInode
 = 
	`sqlôe3_mÆloc64
( (*pInode) );

1317 if–
pInode
==0 ){

1318  
SQLITE_NOMEM_BKPT
;

1320 
	`mem£t
(
pInode
, 0, (*pInode));

1321 
	`mem˝y
(&
pInode
->
fûeId
, &fileId, (fileId));

1322 
pInode
->
nRef
 = 1;

1323 
pInode
->
pNext
 = 
öodeLi°
;

1324 
pInode
->
pPªv
 = 0;

1325 if–
öodeLi°
 ) inodeLi°->
pPªv
 = 
pInode
;

1326 
öodeLi°
 = 
pInode
;

1328 
pInode
->
nRef
++;

1330 *
µInode
 = 
pInode
;

1331  
SQLITE_OK
;

1332 
	}
}

1337 
	$fûeHasMoved
(
unixFûe
 *
pFûe
){

1338 #i‡
OS_VXWORKS


1339  
pFûe
->
pInode
!=0 &&ÖFûe->
pId
!ıFûe->pInode->
fûeId
.pId;

1341 
°©
 
buf
;

1342  
pFûe
->
pInode
!=0 &&

1343 (
	`osSèt
(
pFûe
->
zP©h
, &
buf
)!=0 || buf.
°_öo
!ıFûe->
pInode
->
fûeId
.
öo
);

1345 
	}
}

1357 
	$vîifyDbFûe
(
unixFûe
 *
pFûe
){

1358 
°©
 
buf
;

1359 
rc
;

1362 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_NOLOCK
 ) ;

1364 
rc
 = 
	`osF°©
(
pFûe
->
h
, &
buf
);

1365 if–
rc
!=0 ){

1366 
	`sqlôe3_log
(
SQLITE_WARNING
, "ˇ¬Ÿ f°© db fûê%s", 
pFûe
->
zP©h
);

1369 if–
buf
.
°_∆ök
==0 ){

1370 
	`sqlôe3_log
(
SQLITE_WARNING
, "fûêu∆öked whûê›í: %s", 
pFûe
->
zP©h
);

1373 if–
buf
.
°_∆ök
>1 ){

1374 
	`sqlôe3_log
(
SQLITE_WARNING
, "mu…ùÀÜök†tÿfûe: %s", 
pFûe
->
zP©h
);

1377 if–
	`fûeHasMoved
(
pFûe
) ){

1378 
	`sqlôe3_log
(
SQLITE_WARNING
, "fûêª«med whûê›í: %s", 
pFûe
->
zP©h
);

1381 
	}
}

1390 
	$unixCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

1391 
rc
 = 
SQLITE_OK
;

1392 
ª£rved
 = 0;

1393 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1395 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

1397 
	`as£π
–
pFûe
 );

1398 
	`as£π
–
pFûe
->
eFûeLock
<=
SHARED_LOCK
 );

1399 
	`unixE¡îMuãx
();

1402 if–
pFûe
->
pInode
->
eFûeLock
>
SHARED_LOCK
 ){

1403 
ª£rved
 = 1;

1408 #i‚de‡
__DJGPP__


1409 if–!
ª£rved
 && !
pFûe
->
pInode
->
bPro˚ssLock
 ){

1410 
Êock
 
lock
;

1411 
lock
.
l_whí˚
 = 
SEEK_SET
;

1412 
lock
.
l_°¨t
 = 
RESERVED_BYTE
;

1413 
lock
.
l_Àn
 = 1;

1414 
lock
.
l_ty≥
 = 
F_WRLCK
;

1415 if–
	`osF˙é
(
pFûe
->
h
, 
F_GETLK
, &
lock
) ){

1416 
rc
 = 
SQLITE_IOERR_CHECKRESERVEDLOCK
;

1417 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1418 } if–
lock
.
l_ty≥
!=
F_UNLCK
 ){

1419 
ª£rved
 = 1;

1424 
	`unixLóveMuãx
();

1425 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (unix)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

1427 *
pResOut
 = 
ª£rved
;

1428  
rc
;

1429 
	}
}

1450 
	$unixFûeLock
(
unixFûe
 *
pFûe
, 
Êock
 *
pLock
){

1451 
rc
;

1452 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1453 
	`as£π
–
	`unixMuãxHñd
() );

1454 
	`as£π
–
pInode
!=0 );

1455 if–(
pFûe
->
˘æFœgs
 & (
UNIXFILE_EXCL
|
UNIXFILE_RDONLY
))==UNIXFILE_EXCL ){

1456 if–
pInode
->
bPro˚ssLock
==0 ){

1457 
Êock
 
lock
;

1458 
	`as£π
–
pInode
->
nLock
==0 );

1459 
lock
.
l_whí˚
 = 
SEEK_SET
;

1460 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1461 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1462 
lock
.
l_ty≥
 = 
F_WRLCK
;

1463 
rc
 = 
	`osF˙é
(
pFûe
->
h
, 
F_SETLK
, &
lock
);

1464 if–
rc
<0 ) Ñc;

1465 
pInode
->
bPro˚ssLock
 = 1;

1466 
pInode
->
nLock
++;

1468 
rc
 = 0;

1471 
rc
 = 
	`osF˙é
(
pFûe
->
h
, 
F_SETLK
, 
pLock
);

1473  
rc
;

1474 
	}
}

1500 
	$unixLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

1540 
rc
 = 
SQLITE_OK
;

1541 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1542 
unixInodeInfo
 *
pInode
;

1543 
Êock
 
lock
;

1544 
tEºno
 = 0;

1546 
	`as£π
–
pFûe
 );

1547 
	`OSTRACE
(("LOCK %d %†wa†%s(%s,%dËpid=%d (unix)\n", 
pFûe
->
h
,

1548 
	`azFûeLock
(
eFûeLock
),ázFûeLock(
pFûe
->eFileLock),

1549 
	`azFûeLock
(
pFûe
->
pInode
->
eFûeLock
),ÖFûe->pInode->
nSh¨ed
,

1550 
	`osGëpid
(0)));

1556 if–
pFûe
->
eFûeLock
>=eFileLock ){

1557 
	`OSTRACE
(("LOCK %d %†ok (Æªady hñdË(unix)\n", 
pFûe
->
h
,

1558 
	`azFûeLock
(
eFûeLock
)));

1559  
SQLITE_OK
;

1567 
	`as£π
–
pFûe
->
eFûeLock
!=
NO_LOCK
 ||ÉFûeLock==
SHARED_LOCK
 );

1568 
	`as£π
–
eFûeLock
!=
PENDING_LOCK
 );

1569 
	`as£π
–
eFûeLock
!=
RESERVED_LOCK
 || 
pFûe
->eFûeLock==
SHARED_LOCK
 );

1573 
	`unixE¡îMuãx
();

1574 
pInode
 = 
pFûe
->pInode;

1579 if–(
pFûe
->
eFûeLock
!=
pInode
->eFileLock &&

1580 (
pInode
->
eFûeLock
>=
PENDING_LOCK
 ||ÉFûeLock>
SHARED_LOCK
))

1582 
rc
 = 
SQLITE_BUSY
;

1583 
íd_lock
;

1590 if–
eFûeLock
==
SHARED_LOCK
 &&

1591 (
pInode
->
eFûeLock
==
SHARED_LOCK
 ||ÖInode->eFûeLock==
RESERVED_LOCK
) ){

1592 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 );

1593 
	`as£π
–
pFûe
->
eFûeLock
==0 );

1594 
	`as£π
–
pInode
->
nSh¨ed
>0 );

1595 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

1596 
pInode
->
nSh¨ed
++;

1597 
pInode
->
nLock
++;

1598 
íd_lock
;

1606 
lock
.
l_Àn
 = 1L;

1607 
lock
.
l_whí˚
 = 
SEEK_SET
;

1608 if–
eFûeLock
==
SHARED_LOCK


1609 || (
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pFûe
->eFûeLock<
PENDING_LOCK
)

1611 
lock
.
l_ty≥
 = (
eFûeLock
==
SHARED_LOCK
?
F_RDLCK
:
F_WRLCK
);

1612 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1613 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1614 
tEºno
 = 
î∫o
;

1615 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1616 if–
rc
!=
SQLITE_BUSY
 ){

1617 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1619 
íd_lock
;

1627 if–
eFûeLock
==
SHARED_LOCK
 ){

1628 
	`as£π
–
pInode
->
nSh¨ed
==0 );

1629 
	`as£π
–
pInode
->
eFûeLock
==0 );

1630 
	`as£π
–
rc
==
SQLITE_OK
 );

1633 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1634 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1635 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1636 
tEºno
 = 
î∫o
;

1637 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1641 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1642 
lock
.
l_Àn
 = 1L;

1643 
lock
.
l_ty≥
 = 
F_UNLCK
;

1644 if–
	`unixFûeLock
(
pFûe
, &
lock
Ë&& 
rc
==
SQLITE_OK
 ){

1646 
tEºno
 = 
î∫o
;

1647 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1650 if–
rc
 ){

1651 if–
rc
!=
SQLITE_BUSY
 ){

1652 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1654 
íd_lock
;

1656 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

1657 
pInode
->
nLock
++;

1658 
pInode
->
nSh¨ed
 = 1;

1660 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pInode
->
nSh¨ed
>1 ){

1663 
rc
 = 
SQLITE_BUSY
;

1669 
	`as£π
–0!=
pFûe
->
eFûeLock
 );

1670 
lock
.
l_ty≥
 = 
F_WRLCK
;

1672 
	`as£π
–
eFûeLock
==
RESERVED_LOCK
 ||ÉFûeLock==
EXCLUSIVE_LOCK
 );

1673 if–
eFûeLock
==
RESERVED_LOCK
 ){

1674 
lock
.
l_°¨t
 = 
RESERVED_BYTE
;

1675 
lock
.
l_Àn
 = 1L;

1677 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1678 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1681 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1682 
tEºno
 = 
î∫o
;

1683 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

1684 if–
rc
!=
SQLITE_BUSY
 ){

1685 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1691 #ifde‡
SQLITE_DEBUG


1697 if–
rc
==
SQLITE_OK


1698 && 
pFûe
->
eFûeLock
<=
SHARED_LOCK


1699 && 
eFûeLock
==
RESERVED_LOCK


1701 
pFûe
->
å™sC¡rChng
 = 0;

1702 
pFûe
->
dbUpd©e
 = 0;

1703 
pFûe
->
öN‹mÆWrôe
 = 1;

1708 if–
rc
==
SQLITE_OK
 ){

1709 
pFûe
->
eFûeLock
 =ÉFileLock;

1710 
pInode
->
eFûeLock
 =ÉFileLock;

1711 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 ){

1712 
pFûe
->
eFûeLock
 = 
PENDING_LOCK
;

1713 
pInode
->
eFûeLock
 = 
PENDING_LOCK
;

1716 
íd_lock
:

1717 
	`unixLóveMuãx
();

1718 
	`OSTRACE
(("LOCK %d %†%†(unix)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

1719 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

1720  
rc
;

1721 
	}
}

1727 
	$£tPídögFd
(
unixFûe
 *
pFûe
){

1728 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

1729 
UnixUnu£dFd
 *
p
 = 
pFûe
->
pUnu£d
;

1730 
p
->
pNext
 = 
pInode
->
pUnu£d
;

1731 
pInode
->
pUnu£d
 = 
p
;

1732 
pFûe
->
h
 = -1;

1733 
pFûe
->
pUnu£d
 = 0;

1734 
	}
}

1749 
	$posixU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
, 
h™dÀNFSU∆ock
){

1750 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1751 
unixInodeInfo
 *
pInode
;

1752 
Êock
 
lock
;

1753 
rc
 = 
SQLITE_OK
;

1755 
	`as£π
–
pFûe
 );

1756 
	`OSTRACE
(("UNLOCK %d %d wa†%d(%d,%dËpid=%d (unix)\n", 
pFûe
->
h
, 
eFûeLock
,

1757 
pFûe
->
eFûeLock
,ÖFûe->
pInode
->eFûeLock,ÖFûe->pInode->
nSh¨ed
,

1758 
	`osGëpid
(0)));

1760 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

1761 if–
pFûe
->
eFûeLock
<=eFileLock ){

1762  
SQLITE_OK
;

1764 
	`unixE¡îMuãx
();

1765 
pInode
 = 
pFûe
->pInode;

1766 
	`as£π
–
pInode
->
nSh¨ed
!=0 );

1767 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

1768 
	`as£π
–
pInode
->
eFûeLock
==
pFûe
->eFileLock );

1770 #ifde‡
SQLITE_DEBUG


1779 
pFûe
->
öN‹mÆWrôe
 = 0;

1791 if–
eFûeLock
==
SHARED_LOCK
 ){

1792 #i‡!
	`deföed
(
__APPLE__
Ë|| !
SQLITE_ENABLE_LOCKING_STYLE


1793 ()
h™dÀNFSU∆ock
;

1794 
	`as£π
–
h™dÀNFSU∆ock
==0 );

1796 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


1797 if–
h™dÀNFSU∆ock
 ){

1798 
tEºno
;

1799 
off_t
 
divSize
 = 
SHARED_SIZE
 - 1;

1801 
lock
.
l_ty≥
 = 
F_UNLCK
;

1802 
lock
.
l_whí˚
 = 
SEEK_SET
;

1803 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1804 
lock
.
l_Àn
 = 
divSize
;

1805 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1806 
tEºno
 = 
î∫o
;

1807 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1808 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1809 
íd_u∆ock
;

1811 
lock
.
l_ty≥
 = 
F_RDLCK
;

1812 
lock
.
l_whí˚
 = 
SEEK_SET
;

1813 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1814 
lock
.
l_Àn
 = 
divSize
;

1815 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1816 
tEºno
 = 
î∫o
;

1817 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_RDLOCK
);

1818 if–
	`IS_LOCK_ERROR
(
rc
) ){

1819 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1821 
íd_u∆ock
;

1823 
lock
.
l_ty≥
 = 
F_UNLCK
;

1824 
lock
.
l_whí˚
 = 
SEEK_SET
;

1825 
lock
.
l_°¨t
 = 
SHARED_FIRST
+
divSize
;

1826 
lock
.
l_Àn
 = 
SHARED_SIZE
-
divSize
;

1827 if–
	`unixFûeLock
(
pFûe
, &
lock
)==(-1) ){

1828 
tEºno
 = 
î∫o
;

1829 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1830 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

1831 
íd_u∆ock
;

1836 
lock
.
l_ty≥
 = 
F_RDLCK
;

1837 
lock
.
l_whí˚
 = 
SEEK_SET
;

1838 
lock
.
l_°¨t
 = 
SHARED_FIRST
;

1839 
lock
.
l_Àn
 = 
SHARED_SIZE
;

1840 if–
	`unixFûeLock
(
pFûe
, &
lock
) ){

1847 
rc
 = 
SQLITE_IOERR_RDLOCK
;

1848 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1849 
íd_u∆ock
;

1853 
lock
.
l_ty≥
 = 
F_UNLCK
;

1854 
lock
.
l_whí˚
 = 
SEEK_SET
;

1855 
lock
.
l_°¨t
 = 
PENDING_BYTE
;

1856 
lock
.
l_Àn
 = 2L; 
	`as£π
–
PENDING_BYTE
+1==
RESERVED_BYTE
 );

1857 if–
	`unixFûeLock
(
pFûe
, &
lock
)==0 ){

1858 
pInode
->
eFûeLock
 = 
SHARED_LOCK
;

1860 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1861 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1862 
íd_u∆ock
;

1865 if–
eFûeLock
==
NO_LOCK
 ){

1870 
pInode
->
nSh¨ed
--;

1871 if–
pInode
->
nSh¨ed
==0 ){

1872 
lock
.
l_ty≥
 = 
F_UNLCK
;

1873 
lock
.
l_whí˚
 = 
SEEK_SET
;

1874 
lock
.
l_°¨t
 =Üock.
l_Àn
 = 0L;

1875 if–
	`unixFûeLock
(
pFûe
, &
lock
)==0 ){

1876 
pInode
->
eFûeLock
 = 
NO_LOCK
;

1878 
rc
 = 
SQLITE_IOERR_UNLOCK
;

1879 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

1880 
pInode
->
eFûeLock
 = 
NO_LOCK
;

1881 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

1889 
pInode
->
nLock
--;

1890 
	`as£π
–
pInode
->
nLock
>=0 );

1891 if–
pInode
->
nLock
==0 ){

1892 
	`˛o£PídögFds
(
pFûe
);

1896 
íd_u∆ock
:

1897 
	`unixLóveMuãx
();

1898 if–
rc
==
SQLITE_OK
 ) 
pFûe
->
eFûeLock
 =ÉFileLock;

1899  
rc
;

1900 
	}
}

1909 
	$unixU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

1910 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1911 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 || ((
unixFûe
 *)
id
)->
nFëchOut
==0 );

1913  
	`posixU∆ock
(
id
, 
eFûeLock
, 0);

1914 
	}
}

1916 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1917 
unixM≠fûe
(
unixFûe
 *
pFd
, 
i64
 
nByã
);

1918 
unixUnm≠fûe
(
unixFûe
 *
pFd
);

1931 
	$˛o£UnixFûe
(
sqlôe3_fûe
 *
id
){

1932 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

1933 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1934 
	`unixUnm≠fûe
(
pFûe
);

1936 if–
pFûe
->
h
>=0 ){

1937 
	`robu°_˛o£
(
pFûe
,ÖFûe->
h
, 
__LINE__
);

1938 
pFûe
->
h
 = -1;

1940 #i‡
OS_VXWORKS


1941 if–
pFûe
->
pId
 ){

1942 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DELETE
 ){

1943 
	`osU∆ök
(
pFûe
->
pId
->
zC™⁄iˇlName
);

1945 
	`vxw‹ksRñó£FûeId
(
pFûe
->
pId
);

1946 
pFûe
->
pId
 = 0;

1949 #ifde‡
SQLITE_UNLINK_AFTER_CLOSE


1950 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DELETE
 ){

1951 
	`osU∆ök
(
pFûe
->
zP©h
);

1952 
	`sqlôe3_‰ì
(*(**)&
pFûe
->
zP©h
);

1953 
pFûe
->
zP©h
 = 0;

1956 
	`OSTRACE
(("CLOSE %-3d\n", 
pFûe
->
h
));

1957 
	`O≥nCou¡î
(-1);

1958 
	`sqlôe3_‰ì
(
pFûe
->
pUnu£d
);

1959 
	`mem£t
(
pFûe
, 0, (
unixFûe
));

1960  
SQLITE_OK
;

1961 
	}
}

1966 
	$unixClo£
(
sqlôe3_fûe
 *
id
){

1967 
rc
 = 
SQLITE_OK
;

1968 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

1969 
	`vîifyDbFûe
(
pFûe
);

1970 
	`unixU∆ock
(
id
, 
NO_LOCK
);

1971 
	`unixE¡îMuãx
();

1976 
	`as£π
–
pFûe
->
pInode
->
nLock
>0 ||ÖFûe->pInode->
bPro˚ssLock
==0 );

1977 if–
	`ALWAYS
(
pFûe
->
pInode
Ë&&ÖFûe->pInode->
nLock
 ){

1983 
	`£tPídögFd
(
pFûe
);

1985 
	`ªÀa£InodeInfo
(
pFûe
);

1986 
rc
 = 
	`˛o£UnixFûe
(
id
);

1987 
	`unixLóveMuãx
();

1988  
rc
;

1989 
	}
}

2011 
	$nﬁockCheckRe£rvedLock
(
sqlôe3_fûe
 *
NŸU£d
, *
pResOut
){

2012 
	`UNUSED_PARAMETER
(
NŸU£d
);

2013 *
pResOut
 = 0;

2014  
SQLITE_OK
;

2015 
	}
}

2016 
	$nﬁockLock
(
sqlôe3_fûe
 *
NŸU£d
, 
NŸU£d2
){

2017 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

2018  
SQLITE_OK
;

2019 
	}
}

2020 
	$nﬁockU∆ock
(
sqlôe3_fûe
 *
NŸU£d
, 
NŸU£d2
){

2021 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

2022  
SQLITE_OK
;

2023 
	}
}

2028 
	$nﬁockClo£
(
sqlôe3_fûe
 *
id
) {

2029  
	`˛o£UnixFûe
(
id
);

2030 
	}
}

2061 
	#DOTLOCK_SUFFIX
 ".lock"

	)

2073 
	$dŸlockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

2074 
rc
 = 
SQLITE_OK
;

2075 
ª£rved
 = 0;

2076 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2078 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2080 
	`as£π
–
pFûe
 );

2081 
ª£rved
 = 
	`osAc˚ss
((c⁄° *)
pFûe
->
lockögC⁄ãxt
, 0)==0;

2082 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (dŸlock)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2083 *
pResOut
 = 
ª£rved
;

2084  
rc
;

2085 
	}
}

2114 
	$dŸlockLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2115 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2116 *
zLockFûe
 = (*)
pFûe
->
lockögC⁄ãxt
;

2117 
rc
 = 
SQLITE_OK
;

2123 if–
pFûe
->
eFûeLock
 > 
NO_LOCK
 ){

2124 
pFûe
->
eFûeLock
 =ÉFileLock;

2126 #ifde‡
HAVE_UTIME


2127 
	`utime
(
zLockFûe
, 
NULL
);

2129 
	`utimes
(
zLockFûe
, 
NULL
);

2131  
SQLITE_OK
;

2135 
rc
 = 
	`osMkdú
(
zLockFûe
, 0777);

2136 if–
rc
<0 ){

2138 
tEºno
 = 
î∫o
;

2139 if–
EEXIST
 =
tEºno
 ){

2140 
rc
 = 
SQLITE_BUSY
;

2142 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2143 if–
rc
!=
SQLITE_BUSY
 ){

2144 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2147  
rc
;

2151 
pFûe
->
eFûeLock
 =ÉFileLock;

2152  
rc
;

2153 
	}
}

2164 
	$dŸlockU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2165 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2166 *
zLockFûe
 = (*)
pFûe
->
lockögC⁄ãxt
;

2167 
rc
;

2169 
	`as£π
–
pFûe
 );

2170 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (dŸlock)\n", 
pFûe
->
h
, 
eFûeLock
,

2171 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2172 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2175 if–
pFûe
->
eFûeLock
==eFileLock ){

2176  
SQLITE_OK
;

2182 if–
eFûeLock
==
SHARED_LOCK
 ){

2183 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2184  
SQLITE_OK
;

2188 
	`as£π
–
eFûeLock
==
NO_LOCK
 );

2189 
rc
 = 
	`osRmdú
(
zLockFûe
);

2190 if–
rc
<0 ){

2191 
tEºno
 = 
î∫o
;

2192 if–
tEºno
==
ENOENT
 ){

2193 
rc
 = 
SQLITE_OK
;

2195 
rc
 = 
SQLITE_IOERR_UNLOCK
;

2196 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2198  
rc
;

2200 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2201  
SQLITE_OK
;

2202 
	}
}

2207 
	$dŸlockClo£
(
sqlôe3_fûe
 *
id
) {

2208 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2209 
	`as£π
–
id
!=0 );

2210 
	`dŸlockU∆ock
(
id
, 
NO_LOCK
);

2211 
	`sqlôe3_‰ì
(
pFûe
->
lockögC⁄ãxt
);

2212  
	`˛o£UnixFûe
(
id
);

2213 
	}
}

2231 #i‡
SQLITE_ENABLE_LOCKING_STYLE


2236 #ifde‡
EINTR


2237 
	$robu°_Êock
(
fd
, 
›
){

2238 
rc
;

2239 do{ 
rc
 = 
	`Êock
(
fd
,
›
); }Ñc<0 && 
î∫o
==
EINTR
 );

2240  
rc
;

2241 
	}
}

2243 
	#robu°_Êock
(
a
,
b
Ë
	`Êock
◊,b)

	)

2253 
	$ÊockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

2254 
rc
 = 
SQLITE_OK
;

2255 
ª£rved
 = 0;

2256 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2258 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2260 
	`as£π
–
pFûe
 );

2263 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2264 
ª£rved
 = 1;

2268 if–!
ª£rved
 ){

2270 
Ãc
 = 
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_EX
 | 
LOCK_NB
);

2271 if–!
Ãc
 ){

2273 
Ãc
 = 
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_UN
);

2274 i‡–
Ãc
 ) {

2275 
tEºno
 = 
î∫o
;

2277 
Ãc
 = 
SQLITE_IOERR_UNLOCK
;

2278 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2279 
rc
 = 
Ãc
;

2282 
tEºno
 = 
î∫o
;

2283 
ª£rved
 = 1;

2285 
Ãc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2286 if–
	`IS_LOCK_ERROR
(
Ãc
) ){

2287 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2288 
rc
 = 
Ãc
;

2292 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (Êock)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2294 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2295 if–(
rc
 & 
SQLITE_IOERR
) == SQLITE_IOERR ){

2296 
rc
 = 
SQLITE_OK
;

2297 
ª£rved
=1;

2300 *
pResOut
 = 
ª£rved
;

2301  
rc
;

2302 
	}
}

2333 
	$ÊockLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2334 
rc
 = 
SQLITE_OK
;

2335 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2337 
	`as£π
–
pFûe
 );

2341 i‡(
pFûe
->
eFûeLock
 > 
NO_LOCK
) {

2342 
pFûe
->
eFûeLock
 =ÉFileLock;

2343  
SQLITE_OK
;

2348 i‡(
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_EX
 | 
LOCK_NB
)) {

2349 
tEºno
 = 
î∫o
;

2351 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_LOCK
);

2352 if–
	`IS_LOCK_ERROR
(
rc
) ){

2353 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2357 
pFûe
->
eFûeLock
 =ÉFileLock;

2359 
	`OSTRACE
(("LOCK %d %†%†(Êock)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

2360 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

2361 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2362 if–(
rc
 & 
SQLITE_IOERR
) == SQLITE_IOERR ){

2363 
rc
 = 
SQLITE_BUSY
;

2366  
rc
;

2367 
	}
}

2377 
	$ÊockU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2378 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2380 
	`as£π
–
pFûe
 );

2381 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (Êock)\n", 
pFûe
->
h
, 
eFûeLock
,

2382 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2383 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2386 if–
pFûe
->
eFûeLock
==eFileLock ){

2387  
SQLITE_OK
;

2391 i‡(
eFûeLock
==
SHARED_LOCK
) {

2392 
pFûe
->
eFûeLock
 =ÉFileLock;

2393  
SQLITE_OK
;

2397 if–
	`robu°_Êock
(
pFûe
->
h
, 
LOCK_UN
) ){

2398 #ifde‡
SQLITE_IGNORE_FLOCK_LOCK_ERRORS


2399  
SQLITE_OK
;

2401  
SQLITE_IOERR_UNLOCK
;

2403 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2404  
SQLITE_OK
;

2406 
	}
}

2411 
	$ÊockClo£
(
sqlôe3_fûe
 *
id
) {

2412 
	`as£π
–
id
!=0 );

2413 
	`ÊockU∆ock
(
id
, 
NO_LOCK
);

2414  
	`˛o£UnixFûe
(
id
);

2415 
	}
}

2432 #i‡
OS_VXWORKS


2440 
	$£mXCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

2441 
rc
 = 
SQLITE_OK
;

2442 
ª£rved
 = 0;

2443 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2445 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2447 
	`as£π
–
pFûe
 );

2450 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2451 
ª£rved
 = 1;

2455 if–!
ª£rved
 ){

2456 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2458 if–
	`£m_åywaô
(
pSem
)==-1 ){

2459 
tEºno
 = 
î∫o
;

2460 if–
EAGAIN
 !
tEºno
 ){

2461 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_CHECKRESERVEDLOCK
);

2462 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2465 
ª£rved
 = (
pFûe
->
eFûeLock
 < 
SHARED_LOCK
);

2469 
	`£m_po°
(
pSem
);

2472 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (£m)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2474 *
pResOut
 = 
ª£rved
;

2475  
rc
;

2476 
	}
}

2507 
	$£mXLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2508 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2509 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2510 
rc
 = 
SQLITE_OK
;

2514 i‡(
pFûe
->
eFûeLock
 > 
NO_LOCK
) {

2515 
pFûe
->
eFûeLock
 =ÉFileLock;

2516 
rc
 = 
SQLITE_OK
;

2517 
£m_íd_lock
;

2521 if–
	`£m_åywaô
(
pSem
)==-1 ){

2522 
rc
 = 
SQLITE_BUSY
;

2523 
£m_íd_lock
;

2527 
pFûe
->
eFûeLock
 =ÉFileLock;

2529 
£m_íd_lock
:

2530  
rc
;

2531 
	}
}

2540 
	$£mXU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2541 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2542 
£m_t
 *
pSem
 = 
pFûe
->
pInode
->pSem;

2544 
	`as£π
–
pFûe
 );

2545 
	`as£π
–
pSem
 );

2546 
	`OSTRACE
(("UNLOCK %d %d wa†%dÖid=%d (£m)\n", 
pFûe
->
h
, 
eFûeLock
,

2547 
pFûe
->
eFûeLock
, 
	`osGëpid
(0)));

2548 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2551 if–
pFûe
->
eFûeLock
==eFileLock ){

2552  
SQLITE_OK
;

2556 i‡(
eFûeLock
==
SHARED_LOCK
) {

2557 
pFûe
->
eFûeLock
 =ÉFileLock;

2558  
SQLITE_OK
;

2562 i‡–
	`£m_po°
(
pSem
)==-1 ) {

2563 
rc
, 
tEºno
 = 
î∫o
;

2564 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
, 
SQLITE_IOERR_UNLOCK
);

2565 if–
	`IS_LOCK_ERROR
(
rc
) ){

2566 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2568  
rc
;

2570 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

2571  
SQLITE_OK
;

2572 
	}
}

2577 
	$£mXClo£
(
sqlôe3_fûe
 *
id
) {

2578 if–
id
 ){

2579 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2580 
	`£mXU∆ock
(
id
, 
NO_LOCK
);

2581 
	`as£π
–
pFûe
 );

2582 
	`unixE¡îMuãx
();

2583 
	`ªÀa£InodeInfo
(
pFûe
);

2584 
	`unixLóveMuãx
();

2585 
	`˛o£UnixFûe
(
id
);

2587  
SQLITE_OK
;

2588 
	}
}

2608 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


2612 
aÂLockögC⁄ãxt
 
	taÂLockögC⁄ãxt
;

2613 
	saÂLockögC⁄ãxt
 {

2614 
	mª£rved
;

2615 c⁄° *
	mdbP©h
;

2618 
	sByãR™geLockPB2


2620 
	moff£t
;

2621 
	mÀngth
;

2622 
	mªtR™geSèπ
;

2623 
	munLockFœg
;

2624 
	m°¨tEndFœg
;

2625 
	mfd
;

2628 
	#aÂfsByãR™geLock2FSCTL
 
	`_IOWR
('z', 23, 
ByãR™geLockPB2
)

	)

2636 
	$aÂSëLock
(

2637 c⁄° *
∑th
,

2638 
unixFûe
 *
pFûe
,

2639 
off£t
,

2640 
Àngth
,

2641 
£tLockFœg


2643 
ByãR™geLockPB2
 
pb
;

2644 
îr
;

2646 
pb
.
unLockFœg
 = 
£tLockFœg
 ? 0 : 1;

2647 
pb
.
°¨tEndFœg
 = 0;

2648 
pb
.
off£t
 = offset;

2649 
pb
.
Àngth
 =Üength;

2650 
pb
.
fd
 = 
pFûe
->
h
;

2652 
	`OSTRACE
(("AFPSETLOCK [%s] for %d%s inÑange %llx:%llx\n",

2653 (
£tLockFœg
?"ON":"OFF"), 
pFûe
->
h
, (
pb
.
fd
==-1?"[testval-1]":""),

2654 
off£t
, 
Àngth
));

2655 
îr
 = 
	`fs˘l
(
∑th
, 
aÂfsByãR™geLock2FSCTL
, &
pb
, 0);

2656 i‡–
îr
==-1 ) {

2657 
rc
;

2658 
tEºno
 = 
î∫o
;

2659 
	`OSTRACE
(("AFPSETLOCK failedÅo fsctl() '%s' %d %s\n",

2660 
∑th
, 
tEºno
, 
	`°ªº‹
(tErrno)));

2661 #ifde‡
SQLITE_IGNORE_AFP_LOCK_ERRORS


2662 
rc
 = 
SQLITE_BUSY
;

2664 
rc
 = 
	`sqlôeEº‹FromPosixEº‹
(
tEºno
,

2665 
£tLockFœg
 ? 
SQLITE_IOERR_LOCK
 : 
SQLITE_IOERR_UNLOCK
);

2667 if–
	`IS_LOCK_ERROR
(
rc
) ){

2668 
	`°‹eLa°Eºno
(
pFûe
, 
tEºno
);

2670  
rc
;

2672  
SQLITE_OK
;

2674 
	}
}

2682 
	$aÂCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

2683 
rc
 = 
SQLITE_OK
;

2684 
ª£rved
 = 0;

2685 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2686 
aÂLockögC⁄ãxt
 *
c⁄ãxt
;

2688 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

2690 
	`as£π
–
pFûe
 );

2691 
c⁄ãxt
 = (
aÂLockögC⁄ãxt
 *Ë
pFûe
->
lockögC⁄ãxt
;

2692 if–
c⁄ãxt
->
ª£rved
 ){

2693 *
pResOut
 = 1;

2694  
SQLITE_OK
;

2696 
	`unixE¡îMuãx
();

2699 if–
pFûe
->
pInode
->
eFûeLock
>
SHARED_LOCK
 ){

2700 
ª£rved
 = 1;

2705 if–!
ª£rved
 ){

2707 
Ãc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1,1);

2708 if–
SQLITE_OK
==
Ãc
 ){

2711 
Ãc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1, 0);

2714 
ª£rved
 = 1;

2716 if–
	`IS_LOCK_ERROR
(
Ãc
) ){

2717 
rc
=
Ãc
;

2721 
	`unixLóveMuãx
();

2722 
	`OSTRACE
(("TEST WR-LOCK %d %d %d (aÂ)\n", 
pFûe
->
h
, 
rc
, 
ª£rved
));

2724 *
pResOut
 = 
ª£rved
;

2725  
rc
;

2726 
	}
}

2752 
	$aÂLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

2753 
rc
 = 
SQLITE_OK
;

2754 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2755 
unixInodeInfo
 *
pInode
 = 
pFûe
->pInode;

2756 
aÂLockögC⁄ãxt
 *
c⁄ãxt
 = (aÂLockögC⁄ãxà*Ë
pFûe
->
lockögC⁄ãxt
;

2758 
	`as£π
–
pFûe
 );

2759 
	`OSTRACE
(("LOCK %d %†wa†%s(%s,%dËpid=%d (aÂ)\n", 
pFûe
->
h
,

2760 
	`azFûeLock
(
eFûeLock
),ázFûeLock(
pFûe
->eFileLock),

2761 
	`azFûeLock
(
pInode
->
eFûeLock
),ÖInode->
nSh¨ed
 , 
	`osGëpid
(0)));

2767 if–
pFûe
->
eFûeLock
>=eFileLock ){

2768 
	`OSTRACE
(("LOCK %d %†ok (Æªady hñdË◊Â)\n", 
pFûe
->
h
,

2769 
	`azFûeLock
(
eFûeLock
)));

2770  
SQLITE_OK
;

2778 
	`as£π
–
pFûe
->
eFûeLock
!=
NO_LOCK
 ||ÉFûeLock==
SHARED_LOCK
 );

2779 
	`as£π
–
eFûeLock
!=
PENDING_LOCK
 );

2780 
	`as£π
–
eFûeLock
!=
RESERVED_LOCK
 || 
pFûe
->eFûeLock==
SHARED_LOCK
 );

2784 
	`unixE¡îMuãx
();

2785 
pInode
 = 
pFûe
->pInode;

2790 if–(
pFûe
->
eFûeLock
!=
pInode
->eFileLock &&

2791 (
pInode
->
eFûeLock
>=
PENDING_LOCK
 ||ÉFûeLock>
SHARED_LOCK
))

2793 
rc
 = 
SQLITE_BUSY
;

2794 
aÂ_íd_lock
;

2801 if–
eFûeLock
==
SHARED_LOCK
 &&

2802 (
pInode
->
eFûeLock
==
SHARED_LOCK
 ||ÖInode->eFûeLock==
RESERVED_LOCK
) ){

2803 
	`as£π
–
eFûeLock
==
SHARED_LOCK
 );

2804 
	`as£π
–
pFûe
->
eFûeLock
==0 );

2805 
	`as£π
–
pInode
->
nSh¨ed
>0 );

2806 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2807 
pInode
->
nSh¨ed
++;

2808 
pInode
->
nLock
++;

2809 
aÂ_íd_lock
;

2816 if–
eFûeLock
==
SHARED_LOCK


2817 || (
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pFûe
->eFûeLock<
PENDING_LOCK
)

2819 
Áûed
;

2820 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 1);

2821 i‡(
Áûed
) {

2822 
rc
 = 
Áûed
;

2823 
aÂ_íd_lock
;

2830 if–
eFûeLock
==
SHARED_LOCK
 ){

2831 
Ãc1
, 
Ãc2
, 
Ãc1Eºno
 = 0;

2832 
lk
, 
mask
;

2834 
	`as£π
–
pInode
->
nSh¨ed
==0 );

2835 
	`as£π
–
pInode
->
eFûeLock
==0 );

2837 
mask
 = (()==8Ë? 
LARGEST_INT64
 : 0x7fffffff;

2840 
lk
 = 
	`øndom
();

2841 
pInode
->
sh¨edByã
 = (
lk
 & 
mask
)%(
SHARED_SIZE
 - 1);

2842 
Ãc1
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
,

2843 
SHARED_FIRST
+
pInode
->
sh¨edByã
, 1, 1);

2844 if–
	`IS_LOCK_ERROR
(
Ãc1
) ){

2845 
Ãc1Eºno
 = 
pFûe
->
œ°Eºno
;

2848 
Ãc2
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 0);

2850 if–
	`IS_LOCK_ERROR
(
Ãc1
) ) {

2851 
	`°‹eLa°Eºno
(
pFûe
, 
Ãc1Eºno
);

2852 
rc
 = 
Ãc1
;

2853 
aÂ_íd_lock
;

2854 } if–
	`IS_LOCK_ERROR
(
Ãc2
) ){

2855 
rc
 = 
Ãc2
;

2856 
aÂ_íd_lock
;

2857 } if–
Ãc1
 !
SQLITE_OK
 ) {

2858 
rc
 = 
Ãc1
;

2860 
pFûe
->
eFûeLock
 = 
SHARED_LOCK
;

2861 
pInode
->
nLock
++;

2862 
pInode
->
nSh¨ed
 = 1;

2864 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 && 
pInode
->
nSh¨ed
>1 ){

2867 
rc
 = 
SQLITE_BUSY
;

2873 
Áûed
 = 0;

2874 
	`as£π
–0!=
pFûe
->
eFûeLock
 );

2875 i‡(
eFûeLock
 >
RESERVED_LOCK
 && 
pFûe
->eFileLock < RESERVED_LOCK) {

2877 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1,1);

2878 if–!
Áûed
 ){

2879 
c⁄ãxt
->
ª£rved
 = 1;

2882 i‡(!
Áûed
 && 
eFûeLock
 =
EXCLUSIVE_LOCK
) {

2888 if–!(
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
 +

2889 
pInode
->
sh¨edByã
, 1, 0)) ){

2890 
Áûed2
 = 
SQLITE_OK
;

2892 
Áûed
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
,

2893 
SHARED_SIZE
, 1);

2894 if–
Áûed
 && (
Áûed2
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
,

2895 
SHARED_FIRST
 + 
pInode
->
sh¨edByã
, 1, 1)) ){

2899 
rc
 = ((
Áûed
 & 
SQLITE_IOERR
Ë=SQLITE_IOERRË? 
Áûed2
 :

2900 
SQLITE_IOERR_LOCK
;

2901 
aÂ_íd_lock
;

2904 
rc
 = 
Áûed
;

2907 if–
Áûed
 ){

2908 
rc
 = 
Áûed
;

2912 if–
rc
==
SQLITE_OK
 ){

2913 
pFûe
->
eFûeLock
 =ÉFileLock;

2914 
pInode
->
eFûeLock
 =ÉFileLock;

2915 }if–
eFûeLock
==
EXCLUSIVE_LOCK
 ){

2916 
pFûe
->
eFûeLock
 = 
PENDING_LOCK
;

2917 
pInode
->
eFûeLock
 = 
PENDING_LOCK
;

2920 
aÂ_íd_lock
:

2921 
	`unixLóveMuãx
();

2922 
	`OSTRACE
(("LOCK %d %†%†◊Â)\n", 
pFûe
->
h
, 
	`azFûeLock
(
eFûeLock
),

2923 
rc
==
SQLITE_OK
 ? "ok" : "failed"));

2924  
rc
;

2925 
	}
}

2934 
	$aÂU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

2935 
rc
 = 
SQLITE_OK
;

2936 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

2937 
unixInodeInfo
 *
pInode
;

2938 
aÂLockögC⁄ãxt
 *
c⁄ãxt
 = (aÂLockögC⁄ãxà*Ë
pFûe
->
lockögC⁄ãxt
;

2939 
skùSh¨ed
 = 0;

2940 #ifde‡
SQLITE_TEST


2941 
h
 = 
pFûe
->h;

2944 
	`as£π
–
pFûe
 );

2945 
	`OSTRACE
(("UNLOCK %d %d wa†%d(%d,%dËpid=%d (aÂ)\n", 
pFûe
->
h
, 
eFûeLock
,

2946 
pFûe
->
eFûeLock
,ÖFûe->
pInode
->eFûeLock,ÖFûe->pInode->
nSh¨ed
,

2947 
	`osGëpid
(0)));

2949 
	`as£π
–
eFûeLock
<=
SHARED_LOCK
 );

2950 if–
pFûe
->
eFûeLock
<=eFileLock ){

2951  
SQLITE_OK
;

2953 
	`unixE¡îMuãx
();

2954 
pInode
 = 
pFûe
->pInode;

2955 
	`as£π
–
pInode
->
nSh¨ed
!=0 );

2956 if–
pFûe
->
eFûeLock
>
SHARED_LOCK
 ){

2957 
	`as£π
–
pInode
->
eFûeLock
==
pFûe
->eFileLock );

2958 
	`SimuœãIOEº‹Bíign
(1);

2959 
	`SimuœãIOEº‹
–
h
=(-1) )

2960 
	`SimuœãIOEº‹Bíign
(0);

2962 #ifde‡
SQLITE_DEBUG


2971 
	`as£π
–
pFûe
->
öN‹mÆWrôe
==0

2972 || 
pFûe
->
dbUpd©e
==0

2973 || 
pFûe
->
å™sC¡rChng
==1 );

2974 
pFûe
->
öN‹mÆWrôe
 = 0;

2977 if–
pFûe
->
eFûeLock
==
EXCLUSIVE_LOCK
 ){

2978 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
SHARED_FIRST
, 
SHARED_SIZE
, 0);

2979 if–
rc
==
SQLITE_OK
 && (
eFûeLock
==
SHARED_LOCK
 || 
pInode
->
nSh¨ed
>1) ){

2981 
sh¨edLockByã
 = 
SHARED_FIRST
+
pInode
->
sh¨edByã
;

2982 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
sh¨edLockByã
, 1, 1);

2984 
skùSh¨ed
 = 1;

2987 if–
rc
==
SQLITE_OK
 && 
pFûe
->
eFûeLock
>=
PENDING_LOCK
 ){

2988 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
PENDING_BYTE
, 1, 0);

2990 if–
rc
==
SQLITE_OK
 && 
pFûe
->
eFûeLock
>=
RESERVED_LOCK
 && 
c⁄ãxt
->
ª£rved
 ){

2991 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
RESERVED_BYTE
, 1, 0);

2992 if–!
rc
 ){

2993 
c⁄ãxt
->
ª£rved
 = 0;

2996 if–
rc
==
SQLITE_OK
 && (
eFûeLock
==
SHARED_LOCK
 || 
pInode
->
nSh¨ed
>1)){

2997 
pInode
->
eFûeLock
 = 
SHARED_LOCK
;

3000 if–
rc
==
SQLITE_OK
 && 
eFûeLock
==
NO_LOCK
 ){

3006 
sh¨edLockByã
 = 
SHARED_FIRST
+
pInode
->
sh¨edByã
;

3007 
pInode
->
nSh¨ed
--;

3008 if–
pInode
->
nSh¨ed
==0 ){

3009 
	`SimuœãIOEº‹Bíign
(1);

3010 
	`SimuœãIOEº‹
–
h
=(-1) )

3011 
	`SimuœãIOEº‹Bíign
(0);

3012 if–!
skùSh¨ed
 ){

3013 
rc
 = 
	`aÂSëLock
(
c⁄ãxt
->
dbP©h
, 
pFûe
, 
sh¨edLockByã
, 1, 0);

3015 if–!
rc
 ){

3016 
pInode
->
eFûeLock
 = 
NO_LOCK
;

3017 
pFûe
->
eFûeLock
 = 
NO_LOCK
;

3020 if–
rc
==
SQLITE_OK
 ){

3021 
pInode
->
nLock
--;

3022 
	`as£π
–
pInode
->
nLock
>=0 );

3023 if–
pInode
->
nLock
==0 ){

3024 
	`˛o£PídögFds
(
pFûe
);

3029 
	`unixLóveMuãx
();

3030 if–
rc
==
SQLITE_OK
 ) 
pFûe
->
eFûeLock
 =ÉFileLock;

3031  
rc
;

3032 
	}
}

3037 
	$aÂClo£
(
sqlôe3_fûe
 *
id
) {

3038 
rc
 = 
SQLITE_OK
;

3039 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3040 
	`as£π
–
id
!=0 );

3041 
	`aÂU∆ock
(
id
, 
NO_LOCK
);

3042 
	`unixE¡îMuãx
();

3043 if–
pFûe
->
pInode
 &&ÖFûe->pInode->
nLock
 ){

3049 
	`£tPídögFd
(
pFûe
);

3051 
	`ªÀa£InodeInfo
(
pFûe
);

3052 
	`sqlôe3_‰ì
(
pFûe
->
lockögC⁄ãxt
);

3053 
rc
 = 
	`˛o£UnixFûe
(
id
);

3054 
	`unixLóveMuãx
();

3055  
rc
;

3056 
	}
}

3071 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


3079 
	$nfsU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
){

3080  
	`posixU∆ock
(
id
, 
eFûeLock
, 1);

3081 
	}
}

3115 
	$£ekAndRód
(
unixFûe
 *
id
, 
sqlôe3_öt64
 
off£t
, *
pBuf
, 
˙t
){

3116 
gŸ
;

3117 
¥i‹
 = 0;

3118 #i‡(!
	`deföed
(
USE_PREAD
Ë&& !deföed(
USE_PREAD64
))

3119 
i64
 
√wOff£t
;

3121 
TIMER_START
;

3122 
	`as£π
–
˙t
==(cnt&0x1ffff) );

3123 
	`as£π
–
id
->
h
>2 );

3125 #i‡
	`deföed
(
USE_PREAD
)

3126 
gŸ
 = 
	`osPªad
(
id
->
h
, 
pBuf
, 
˙t
, 
off£t
);

3127 
	`SimuœãIOEº‹
–
gŸ
 = -1 );

3128 #ñi‡
	`deföed
(
USE_PREAD64
)

3129 
gŸ
 = 
	`osPªad64
(
id
->
h
, 
pBuf
, 
˙t
, 
off£t
);

3130 
	`SimuœãIOEº‹
–
gŸ
 = -1 );

3132 
√wOff£t
 = 
	`l£ek
(
id
->
h
, 
off£t
, 
SEEK_SET
);

3133 
	`SimuœãIOEº‹
–
√wOff£t
 = -1 );

3134 if–
√wOff£t
<0 ){

3135 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3138 
gŸ
 = 
	`osRód
(
id
->
h
, 
pBuf
, 
˙t
);

3140 if–
gŸ
==
˙t
 ) ;

3141 if–
gŸ
<0 ){

3142 if–
î∫o
==
EINTR
 ){ 
gŸ
 = 1; ; }

3143 
¥i‹
 = 0;

3144 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3146 }if–
gŸ
>0 ){

3147 
˙t
 -
gŸ
;

3148 
off£t
 +
gŸ
;

3149 
¥i‹
 +
gŸ
;

3150 
pBuf
 = (*)(
gŸ
 + (*)pBuf);

3152 } 
gŸ
>0 );

3153 
TIMER_END
;

3154 
	`OSTRACE
(("READ %-3d %5d %7lld %llu\n",

3155 
id
->
h
, 
gŸ
+
¥i‹
, 
off£t
-¥i‹, 
TIMER_ELAPSED
));

3156  
gŸ
+
¥i‹
;

3157 
	}
}

3164 
	$unixRód
(

3165 
sqlôe3_fûe
 *
id
,

3166 *
pBuf
,

3167 
amt
,

3168 
sqlôe3_öt64
 
off£t


3170 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

3171 
gŸ
;

3172 
	`as£π
–
id
 );

3173 
	`as£π
–
off£t
>=0 );

3174 
	`as£π
–
amt
>0 );

3179 
	`as£π
–
pFûe
->
pUnu£d
==0

3180 || 
off£t
>=
PENDING_BYTE
+512

3181 || 
off£t
+
amt
<=
PENDING_BYTE


3185 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3188 if–
off£t
<
pFûe
->
mm≠Size
 ){

3189 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

3190 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
amt
);

3191  
SQLITE_OK
;

3193 
nC›y
 = 
pFûe
->
mm≠Size
 - 
off£t
;

3194 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
nC›y
);

3195 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

3196 
amt
 -
nC›y
;

3197 
off£t
 +
nC›y
;

3202 
gŸ
 = 
	`£ekAndRód
(
pFûe
, 
off£t
, 
pBuf
, 
amt
);

3203 if–
gŸ
==
amt
 ){

3204  
SQLITE_OK
;

3205 }if–
gŸ
<0 ){

3207  
SQLITE_IOERR_READ
;

3209 
	`°‹eLa°Eºno
(
pFûe
, 0);

3211 
	`mem£t
(&((*)
pBuf
)[
gŸ
], 0, 
amt
-got);

3212  
SQLITE_IOERR_SHORT_READ
;

3214 
	}
}

3223 
	$£ekAndWrôeFd
(

3224 
fd
,

3225 
i64
 
iOff
,

3226 c⁄° *
pBuf
,

3227 
nBuf
,

3228 *
piEºno


3230 
rc
 = 0;

3232 
	`as£π
–
nBuf
==(nBuf&0x1ffff) );

3233 
	`as£π
–
fd
>2 );

3234 
	`as£π
–
piEºno
!=0 );

3235 
nBuf
 &= 0x1ffff;

3236 
TIMER_START
;

3238 #i‡
	`deföed
(
USE_PREAD
)

3239 do{ 
rc
 = ()
	`osPwrôe
(
fd
, 
pBuf
, 
nBuf
, 
iOff
); }Ñc<0 && 
î∫o
==
EINTR
 );

3240 #ñi‡
	`deföed
(
USE_PREAD64
)

3241 do{ 
rc
 = ()
	`osPwrôe64
(
fd
, 
pBuf
, 
nBuf
, 
iOff
);}Ñc<0 && 
î∫o
==
EINTR
);

3244 
i64
 
iSìk
 = 
	`l£ek
(
fd
, 
iOff
, 
SEEK_SET
);

3245 
	`SimuœãIOEº‹
–
iSìk
 = -1 );

3246 if–
iSìk
<0 ){

3247 
rc
 = -1;

3250 
rc
 = 
	`osWrôe
(
fd
, 
pBuf
, 
nBuf
);

3251 } 
rc
<0 && 
î∫o
==
EINTR
 );

3254 
TIMER_END
;

3255 
	`OSTRACE
(("WRITE %-3d %5d %7Œd %Œu\n", 
fd
, 
rc
, 
iOff
, 
TIMER_ELAPSED
));

3257 if–
rc
<0 ) *
piEºno
 = 
î∫o
;

3258  
rc
;

3259 
	}
}

3269 
	$£ekAndWrôe
(
unixFûe
 *
id
, 
i64
 
off£t
, c⁄° *
pBuf
, 
˙t
){

3270  
	`£ekAndWrôeFd
(
id
->
h
, 
off£t
, 
pBuf
, 
˙t
, &id->
œ°Eºno
);

3271 
	}
}

3278 
	$unixWrôe
(

3279 
sqlôe3_fûe
 *
id
,

3280 c⁄° *
pBuf
,

3281 
amt
,

3282 
sqlôe3_öt64
 
off£t


3284 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3285 
wrŸe
 = 0;

3286 
	`as£π
–
id
 );

3287 
	`as£π
–
amt
>0 );

3292 
	`as£π
–
pFûe
->
pUnu£d
==0

3293 || 
off£t
>=
PENDING_BYTE
+512

3294 || 
off£t
+
amt
<=
PENDING_BYTE


3298 #ifde‡
SQLITE_DEBUG


3305 if–
pFûe
->
öN‹mÆWrôe
 ){

3306 
pFûe
->
dbUpd©e
 = 1;

3307 if–
off£t
<=24 && off£t+
amt
>=27 ){

3308 
rc
;

3309 
ﬁdC¡r
[4];

3310 
	`SimuœãIOEº‹Bíign
(1);

3311 
rc
 = 
	`£ekAndRód
(
pFûe
, 24, 
ﬁdC¡r
, 4);

3312 
	`SimuœãIOEº‹Bíign
(0);

3313 if–
rc
!=4 || 
	`memcmp
(
ﬁdC¡r
, &((*)
pBuf
)[24-
off£t
], 4)!=0 ){

3314 
pFûe
->
å™sC¡rChng
 = 1;

3320 #i‡
	`deföed
(
SQLITE_MMAP_READWRITE
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

3323 if–
off£t
<
pFûe
->
mm≠Size
 ){

3324 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

3325 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
amt
);

3326  
SQLITE_OK
;

3328 
nC›y
 = 
pFûe
->
mm≠Size
 - 
off£t
;

3329 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
nC›y
);

3330 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

3331 
amt
 -
nC›y
;

3332 
off£t
 +
nC›y
;

3337  (
wrŸe
 = 
	`£ekAndWrôe
(
pFûe
, 
off£t
, 
pBuf
, 
amt
))<amt && wrote>0 ){

3338 
amt
 -
wrŸe
;

3339 
off£t
 +
wrŸe
;

3340 
pBuf
 = &((*ÌBuf)[
wrŸe
];

3342 
	`SimuœãIOEº‹
(–
wrŸe
=(-1), 
amt
=1 ));

3343 
	`SimuœãDiskfuŒEº‹
(–
wrŸe
=0, 
amt
=1 ));

3345 if–
amt
>
wrŸe
 ){

3346 if–
wrŸe
<0 && 
pFûe
->
œ°Eºno
!=
ENOSPC
 ){

3348  
SQLITE_IOERR_WRITE
;

3350 
	`°‹eLa°Eºno
(
pFûe
, 0);

3351  
SQLITE_FULL
;

3355  
SQLITE_OK
;

3356 
	}
}

3358 #ifde‡
SQLITE_TEST


3363 
	gsqlôe3_sync_cou¡
 = 0;

3364 
	gsqlôe3_fuŒsync_cou¡
 = 0;

3373 #i‡!
deföed
(
fd©async
Ë&& !
HAVE_FDATASYNC


3374 
	#fd©async
 
fsync


	)

3382 #ifde‡
F_FULLFSYNC


3383 
	#HAVE_FULLFSYNC
 1

	)

3385 
	#HAVE_FULLFSYNC
 0

	)

3413 
	$fuŒ_fsync
(
fd
, 
fuŒSync
, 
d©aO∆y
){

3414 
rc
;

3420 #ifde‡
SQLITE_NO_SYNC


3421 
	`UNUSED_PARAMETER
(
fd
);

3422 
	`UNUSED_PARAMETER
(
fuŒSync
);

3423 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3424 #ñi‡
HAVE_FULLFSYNC


3425 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3427 
	`UNUSED_PARAMETER
(
fuŒSync
);

3428 
	`UNUSED_PARAMETER
(
d©aO∆y
);

3435 #ifde‡
SQLITE_TEST


3436 if–
fuŒSync
 ) 
sqlôe3_fuŒsync_cou¡
++;

3437 
sqlôe3_sync_cou¡
++;

3445 #ifde‡
SQLITE_NO_SYNC


3447 
°©
 
buf
;

3448 
rc
 = 
	`osF°©
(
fd
, &
buf
);

3450 #ñi‡
HAVE_FULLFSYNC


3451 if–
fuŒSync
 ){

3452 
rc
 = 
	`osF˙é
(
fd
, 
F_FULLFSYNC
, 0);

3454 
rc
 = 1;

3464 if–
rc
 )Ñ¯
	`fsync
(
fd
);

3466 #ñi‡
	`deföed
(
__APPLE__
)

3470 
rc
 = 
	`fsync
(
fd
);

3472 
rc
 = 
	`fd©async
(
fd
);

3473 #i‡
OS_VXWORKS


3474 if–
rc
==-1 && 
î∫o
==
ENOTSUP
 ){

3475 
rc
 = 
	`fsync
(
fd
);

3480 if–
OS_VXWORKS
 && 
rc
!= -1 ){

3481 
rc
 = 0;

3483  
rc
;

3484 
	}
}

3509 
	$›íDúe˘‹y
(c⁄° *
zFûíame
, *
pFd
){

3510 
ii
;

3511 
fd
 = -1;

3512 
zDú«me
[
MAX_PATHNAME
+1];

3514 
	`sqlôe3_¢¥ötf
(
MAX_PATHNAME
, 
zDú«me
, "%s", 
zFûíame
);

3515 
ii
=()
	`°æí
(
zDú«me
); ii>0 && zDirname[ii]!='/'; ii--);

3516 if–
ii
>0 ){

3517 
zDú«me
[
ii
] = '\0';

3519 if–
zDú«me
[0]!='/' ) zDirname[0] = '.';

3520 
zDú«me
[1] = 0;

3522 
fd
 = 
	`robu°_›í
(
zDú«me
, 
O_RDONLY
|
O_BINARY
, 0);

3523 if–
fd
>=0 ){

3524 
	`OSTRACE
(("OPENDIR %-3d %s\n", 
fd
, 
zDú«me
));

3526 *
pFd
 = 
fd
;

3527 if–
fd
>=0 )  
SQLITE_OK
;

3528  
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›íDúe˘‹y", 
zDú«me
);

3529 
	}
}

3546 
	$unixSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

3547 
rc
;

3548 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3550 
isD©aO∆y
 = (
Êags
&
SQLITE_SYNC_DATAONLY
);

3551 
isFuŒsync
 = (
Êags
&0x0F)==
SQLITE_SYNC_FULL
;

3554 
	`as£π
((
Êags
&0x0F)==
SQLITE_SYNC_NORMAL


3555 || (
Êags
&0x0F)==
SQLITE_SYNC_FULL


3561 
	`SimuœãDiskfuŒEº‹
– 
SQLITE_FULL
 );

3563 
	`as£π
–
pFûe
 );

3564 
	`OSTRACE
(("SYNC %-3d\n", 
pFûe
->
h
));

3565 
rc
 = 
	`fuŒ_fsync
(
pFûe
->
h
, 
isFuŒsync
, 
isD©aO∆y
);

3566 
	`SimuœãIOEº‹
–
rc
=1 );

3567 if–
rc
 ){

3568 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3569  
	`unixLogEº‹
(
SQLITE_IOERR_FSYNC
, "fuŒ_fsync", 
pFûe
->
zP©h
);

3576 if–
pFûe
->
˘æFœgs
 & 
UNIXFILE_DIRSYNC
 ){

3577 
dúfd
;

3578 
	`OSTRACE
(("DIRSYNC %†(have_fuŒfsync=%d fuŒsync=%d)\n", 
pFûe
->
zP©h
,

3579 
HAVE_FULLFSYNC
, 
isFuŒsync
));

3580 
rc
 = 
	`osO≥nDúe˘‹y
(
pFûe
->
zP©h
, &
dúfd
);

3581 if–
rc
==
SQLITE_OK
 ){

3582 
	`fuŒ_fsync
(
dúfd
, 0, 0);

3583 
	`robu°_˛o£
(
pFûe
, 
dúfd
, 
__LINE__
);

3585 
	`as£π
–
rc
==
SQLITE_CANTOPEN
 );

3586 
rc
 = 
SQLITE_OK
;

3588 
pFûe
->
˘æFœgs
 &~
UNIXFILE_DIRSYNC
;

3590  
rc
;

3591 
	}
}

3596 
	$unixTrunˇã
(
sqlôe3_fûe
 *
id
, 
i64
 
nByã
){

3597 
unixFûe
 *
pFûe
 = (unixFûê*)
id
;

3598 
rc
;

3599 
	`as£π
–
pFûe
 );

3600 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_TRUNCATE
 );

3607 if–
pFûe
->
szChunk
>0 ){

3608 
nByã
 = (“Byã + 
pFûe
->
szChunk
 - 1)/pFile->szChunk) *ÖFile->szChunk;

3611 
rc
 = 
	`robu°_·runˇã
(
pFûe
->
h
, 
nByã
);

3612 if–
rc
 ){

3613 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3614  
	`unixLogEº‹
(
SQLITE_IOERR_TRUNCATE
, "·runˇã", 
pFûe
->
zP©h
);

3616 #ifde‡
SQLITE_DEBUG


3624 if–
pFûe
->
öN‹mÆWrôe
 && 
nByã
==0 ){

3625 
pFûe
->
å™sC¡rChng
 = 1;

3629 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3634 if–
nByã
<
pFûe
->
mm≠Size
 ){

3635 
pFûe
->
mm≠Size
 = 
nByã
;

3639  
SQLITE_OK
;

3641 
	}
}

3646 
	$unixFûeSize
(
sqlôe3_fûe
 *
id
, 
i64
 *
pSize
){

3647 
rc
;

3648 
°©
 
buf
;

3649 
	`as£π
–
id
 );

3650 
rc
 = 
	`osF°©
(((
unixFûe
*)
id
)->
h
, &
buf
);

3651 
	`SimuœãIOEº‹
–
rc
=1 );

3652 if–
rc
!=0 ){

3653 
	`°‹eLa°Eºno
((
unixFûe
*)
id
, 
î∫o
);

3654  
SQLITE_IOERR_FSTAT
;

3656 *
pSize
 = 
buf
.
°_size
;

3664 if–*
pSize
==1 ) *pSize = 0;

3667  
SQLITE_OK
;

3668 
	}
}

3670 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
deföed
(
__APPLE__
)

3675 
¥oxyFûeC⁄åﬁ
(
sqlôe3_fûe
*,,*);

3684 
	$f˙éSizeHöt
(
unixFûe
 *
pFûe
, 
i64
 
nByã
){

3685 if–
pFûe
->
szChunk
>0 ){

3686 
i64
 
nSize
;

3687 
°©
 
buf
;

3689 if–
	`osF°©
(
pFûe
->
h
, &
buf
) ){

3690  
SQLITE_IOERR_FSTAT
;

3693 
nSize
 = ((
nByã
+
pFûe
->
szChunk
-1) /ÖFile->szChunk) *ÖFile->szChunk;

3694 if–
nSize
>(
i64
)
buf
.
°_size
 ){

3696 #i‡
	`deföed
(
HAVE_POSIX_FALLOCATE
) && HAVE_POSIX_FALLOCATE

3700 
îr
;

3702 
îr
 = 
	`osFÆloˇã
(
pFûe
->
h
, 
buf
.
°_size
, 
nSize
-buf.st_size);

3703 } 
îr
==
EINTR
 );

3704 if–
îr
 )  
SQLITE_IOERR_WRITE
;

3713 
nBlk
 = 
buf
.
°_blksize
;

3714 
nWrôe
 = 0;

3715 
i64
 
iWrôe
;

3717 
iWrôe
 = (
buf
.
°_size
/
nBlk
)*nBlk +ÇBlk - 1;

3718 
	`as£π
–
iWrôe
>=
buf
.
°_size
 );

3719 
	`as£π
–((
iWrôe
+1)%
nBlk
)==0 );

3720  ; 
iWrôe
<
nSize
+
nBlk
-1; iWrite+=nBlk ){

3721 if–
iWrôe
>=
nSize
 ) iWrite =ÇSize - 1;

3722 
nWrôe
 = 
	`£ekAndWrôe
(
pFûe
, 
iWrôe
, "", 1);

3723 if–
nWrôe
!=1 )  
SQLITE_IOERR_WRITE
;

3729 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3730 if–
pFûe
->
mm≠SizeMax
>0 && 
nByã
>pFûe->
mm≠Size
 ){

3731 
rc
;

3732 if–
pFûe
->
szChunk
<=0 ){

3733 if–
	`robu°_·runˇã
(
pFûe
->
h
, 
nByã
) ){

3734 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

3735  
	`unixLogEº‹
(
SQLITE_IOERR_TRUNCATE
, "·runˇã", 
pFûe
->
zP©h
);

3739 
rc
 = 
	`unixM≠fûe
(
pFûe
, 
nByã
);

3740  
rc
;

3744  
SQLITE_OK
;

3745 
	}
}

3753 
	$unixModeBô
(
unixFûe
 *
pFûe
, 
mask
, *
pArg
){

3754 if–*
pArg
<0 ){

3755 *
pArg
 = (
pFûe
->
˘æFœgs
 & 
mask
)!=0;

3756 }if–(*
pArg
)==0 ){

3757 
pFûe
->
˘æFœgs
 &~
mask
;

3759 
pFûe
->
˘æFœgs
 |
mask
;

3761 
	}
}

3764 
unixGëTem≤ame
(
nBuf
, *
zBuf
);

3769 
	$unixFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

3770 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3771  
›
 ){

3772 
SQLITE_FCNTL_LOCKSTATE
: {

3773 *(*)
pArg
 = 
pFûe
->
eFûeLock
;

3774  
SQLITE_OK
;

3776 
SQLITE_FCNTL_LAST_ERRNO
: {

3777 *(*)
pArg
 = 
pFûe
->
œ°Eºno
;

3778  
SQLITE_OK
;

3780 
SQLITE_FCNTL_CHUNK_SIZE
: {

3781 
pFûe
->
szChunk
 = *(*)
pArg
;

3782  
SQLITE_OK
;

3784 
SQLITE_FCNTL_SIZE_HINT
: {

3785 
rc
;

3786 
	`SimuœãIOEº‹Bíign
(1);

3787 
rc
 = 
	`f˙éSizeHöt
(
pFûe
, *(
i64
 *)
pArg
);

3788 
	`SimuœãIOEº‹Bíign
(0);

3789  
rc
;

3791 
SQLITE_FCNTL_PERSIST_WAL
: {

3792 
	`unixModeBô
(
pFûe
, 
UNIXFILE_PERSIST_WAL
, (*)
pArg
);

3793  
SQLITE_OK
;

3795 
SQLITE_FCNTL_POWERSAFE_OVERWRITE
: {

3796 
	`unixModeBô
(
pFûe
, 
UNIXFILE_PSOW
, (*)
pArg
);

3797  
SQLITE_OK
;

3799 
SQLITE_FCNTL_VFSNAME
: {

3800 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("%s", 
pFûe
->
pVfs
->
zName
);

3801  
SQLITE_OK
;

3803 
SQLITE_FCNTL_TEMPFILENAME
: {

3804 *
zTFûe
 = 
	`sqlôe3_mÆloc64
–
pFûe
->
pVfs
->
mxP©h«me
 );

3805 if–
zTFûe
 ){

3806 
	`unixGëTem≤ame
(
pFûe
->
pVfs
->
mxP©h«me
, 
zTFûe
);

3807 *(**)
pArg
 = 
zTFûe
;

3809  
SQLITE_OK
;

3811 
SQLITE_FCNTL_HAS_MOVED
: {

3812 *(*)
pArg
 = 
	`fûeHasMoved
(
pFûe
);

3813  
SQLITE_OK
;

3815 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3816 
SQLITE_FCNTL_MMAP_SIZE
: {

3817 
i64
 
√wLimô
 = *(i64*)
pArg
;

3818 
rc
 = 
SQLITE_OK
;

3819 if–
√wLimô
>
sqlôe3GlobÆC⁄fig
.
mxMm≠
 ){

3820 
√wLimô
 = 
sqlôe3GlobÆC⁄fig
.
mxMm≠
;

3822 *(
i64
*)
pArg
 = 
pFûe
->
mm≠SizeMax
;

3823 if–
√wLimô
>=0 &&ÇewLimô!=
pFûe
->
mm≠SizeMax
 &&ÖFûe->
nFëchOut
==0 ){

3824 
pFûe
->
mm≠SizeMax
 = 
√wLimô
;

3825 if–
pFûe
->
mm≠Size
>0 ){

3826 
	`unixUnm≠fûe
(
pFûe
);

3827 
rc
 = 
	`unixM≠fûe
(
pFûe
, -1);

3830  
rc
;

3833 #ifde‡
SQLITE_DEBUG


3839 
SQLITE_FCNTL_DB_UNCHANGED
: {

3840 ((
unixFûe
*)
id
)->
dbUpd©e
 = 0;

3841  
SQLITE_OK
;

3844 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

3845 
SQLITE_FCNTL_SET_LOCKPROXYFILE
:

3846 
SQLITE_FCNTL_GET_LOCKPROXYFILE
: {

3847  
	`¥oxyFûeC⁄åﬁ
(
id
,
›
,
pArg
);

3851  
SQLITE_NOTFOUND
;

3852 
	}
}

3864 #i‚de‡
__QNXNTO__


3865 
	$unixSe˘‹Size
(
sqlôe3_fûe
 *
NŸU£d
){

3866 
	`UNUSED_PARAMETER
(
NŸU£d
);

3867  
SQLITE_DEFAULT_SECTOR_SIZE
;

3868 
	}
}

3874 #ifde‡
__QNXNTO__


3875 
	~<sys/dcmd_blk.h
>

3876 
	~<sys/°©vfs.h
>

3877 
	$unixSe˘‹Size
(
sqlôe3_fûe
 *
id
){

3878 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

3879 if–
pFûe
->
£˘‹Size
 == 0 ){

3880 
°©vfs
 
fsInfo
;

3883 
pFûe
->
£˘‹Size
 = 
SQLITE_DEFAULT_SECTOR_SIZE
;

3884 
pFûe
->
devi˚Ch¨a˘îi°ics
 = 0;

3885 if–
	`f°©vfs
(
pFûe
->
h
, &
fsInfo
) == -1 ) {

3886  
pFûe
->
£˘‹Size
;

3889 if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "tmp") ) {

3890 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3891 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3892 
SQLITE_IOCAP_ATOMIC4K
 |

3893 
SQLITE_IOCAP_SAFE_APPEND
 |

3895 
SQLITE_IOCAP_SEQUENTIAL
 |

3898 }if–
	`°r°r
(
fsInfo
.
f_ba£ty≥
, "etfs") ){

3899 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3900 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3902 (
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) |

3903 
SQLITE_IOCAP_SAFE_APPEND
 |

3905 
SQLITE_IOCAP_SEQUENTIAL
 |

3908 }if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "qnx6") ){

3909 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3910 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3911 
SQLITE_IOCAP_ATOMIC
 |

3912 
SQLITE_IOCAP_SAFE_APPEND
 |

3914 
SQLITE_IOCAP_SEQUENTIAL
 |

3917 }if–!
	`°rcmp
(
fsInfo
.
f_ba£ty≥
, "qnx4") ){

3918 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3919 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3921 ((
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) << 1) - 2 |

3922 
SQLITE_IOCAP_SEQUENTIAL
 |

3925 }if–
	`°r°r
(
fsInfo
.
f_ba£ty≥
, "dos") ){

3926 
pFûe
->
£˘‹Size
 = 
fsInfo
.
f_bsize
;

3927 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3929 ((
pFûe
->
£˘‹Size
 / 512 * 
SQLITE_IOCAP_ATOMIC512
) << 1) - 2 |

3930 
SQLITE_IOCAP_SEQUENTIAL
 |

3934 
pFûe
->
devi˚Ch¨a˘îi°ics
 =

3935 
SQLITE_IOCAP_ATOMIC512
 |

3936 
SQLITE_IOCAP_SAFE_APPEND
 |

3943 if–
pFûe
->
£˘‹Size
 % 512 != 0 ){

3944 
pFûe
->
devi˚Ch¨a˘îi°ics
 = 0;

3945 
pFûe
->
£˘‹Size
 = 
SQLITE_DEFAULT_SECTOR_SIZE
;

3947  
pFûe
->
£˘‹Size
;

3948 
	}
}

3964 
	$unixDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

3965 
unixFûe
 *
p
 = (unixFûe*)
id
;

3966 
rc
 = 0;

3967 #ifde‡
__QNXNTO__


3968 if–
p
->
£˘‹Size
==0 ) 
	`unixSe˘‹Size
(
id
);

3969 
rc
 = 
p
->
devi˚Ch¨a˘îi°ics
;

3971 if–
p
->
˘æFœgs
 & 
UNIXFILE_PSOW
 ){

3972 
rc
 |
SQLITE_IOCAP_POWERSAFE_OVERWRITE
;

3974  
rc
;

3975 
	}
}

3977 #i‡!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

3985 
	$unixGë∑gesize
(){

3986 #i‡
OS_VXWORKS


3988 #ñi‡
	`deföed
(
_BSD_SOURCE
)

3989  
	`gë∑gesize
();

3991  ()
	`sysc⁄f
(
_SC_PAGESIZE
);

3993 
	}
}

3997 #i‚de‡
SQLITE_OMIT_WAL


4028 
	sunixShmNode
 {

4029 
unixInodeInfo
 *
	mpInode
;

4030 
sqlôe3_muãx
 *
	mmuãx
;

4031 *
	mzFûíame
;

4032 
	mh
;

4033 
	mszRegi⁄
;

4034 
u16
 
	mnRegi⁄
;

4035 
u8
 
	misRód⁄ly
;

4036 **
	m≠Regi⁄
;

4037 
	mnRef
;

4038 
unixShm
 *
	mpFú°
;

4039 #ifde‡
SQLITE_DEBUG


4040 
u8
 
	mex˛Mask
;

4041 
u8
 
	msh¨edMask
;

4042 
u8
 
	m√xtShmId
;

4059 
	sunixShm
 {

4060 
unixShmNode
 *
	mpShmNode
;

4061 
unixShm
 *
	mpNext
;

4062 
u8
 
	mhasMuãx
;

4063 
u8
 
	mid
;

4064 
u16
 
	msh¨edMask
;

4065 
u16
 
	mex˛Mask
;

4071 
	#UNIX_SHM_BASE
 ((22+
SQLITE_SHM_NLOCK
)*4Ë

	)

4072 
	#UNIX_SHM_DMS
 (
UNIX_SHM_BASE
+
SQLITE_SHM_NLOCK
Ë

	)

4080 
	$unixShmSy°emLock
(

4081 
unixFûe
 *
pFûe
,

4082 
lockTy≥
,

4083 
of°
,

4084 
n


4086 
unixShmNode
 *
pShmNode
;

4087 
Êock
 
f
;

4088 
rc
 = 
SQLITE_OK
;

4091 
pShmNode
 = 
pFûe
->
pInode
->pShmNode;

4092 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pShmNode
->
muãx
Ë||ÖShmNode->
nRef
==0 );

4095 
	`as£π
–
n
==1 || 
lockTy≥
!=
F_RDLCK
 );

4098 
	`as£π
–
n
>=1 &&Ç<=
SQLITE_SHM_NLOCK
 );

4100 if–
pShmNode
->
h
>=0 ){

4102 
	`mem£t
(&
f
, 0, (f));

4103 
f
.
l_ty≥
 = 
lockTy≥
;

4104 
f
.
l_whí˚
 = 
SEEK_SET
;

4105 
f
.
l_°¨t
 = 
of°
;

4106 
f
.
l_Àn
 = 
n
;

4108 
rc
 = 
	`osF˙é
(
pShmNode
->
h
, 
F_SETLK
, &
f
);

4109 
rc
 = (rc!=(-1)Ë? 
SQLITE_OK
 : 
SQLITE_BUSY
;

4113 #ifde‡
SQLITE_DEBUG


4114 { 
u16
 
mask
;

4115 
	`OSTRACE
(("SHM-LOCK "));

4116 
mask
 = 
of°
>31 ? 0xfff‡: (1<<(of°+
n
)) - (1<<ofst);

4117 if–
rc
==
SQLITE_OK
 ){

4118 if–
lockTy≥
==
F_UNLCK
 ){

4119 
	`OSTRACE
(("u∆ock %d ok", 
of°
));

4120 
pShmNode
->
ex˛Mask
 &~
mask
;

4121 
pShmNode
->
sh¨edMask
 &~
mask
;

4122 }if–
lockTy≥
==
F_RDLCK
 ){

4123 
	`OSTRACE
(("ªad-lock %d ok", 
of°
));

4124 
pShmNode
->
ex˛Mask
 &~
mask
;

4125 
pShmNode
->
sh¨edMask
 |
mask
;

4127 
	`as£π
–
lockTy≥
==
F_WRLCK
 );

4128 
	`OSTRACE
(("wrôe-lock %d ok", 
of°
));

4129 
pShmNode
->
ex˛Mask
 |
mask
;

4130 
pShmNode
->
sh¨edMask
 &~
mask
;

4133 if–
lockTy≥
==
F_UNLCK
 ){

4134 
	`OSTRACE
(("u∆ock %d faûed", 
of°
));

4135 }if–
lockTy≥
==
F_RDLCK
 ){

4136 
	`OSTRACE
(("read-lock failed"));

4138 
	`as£π
–
lockTy≥
==
F_WRLCK
 );

4139 
	`OSTRACE
(("wrôe-lock %d faûed", 
of°
));

4142 
	`OSTRACE
((" -áfterwards %03x,%03x\n",

4143 
pShmNode
->
sh¨edMask
,ÖShmNode->
ex˛Mask
));

4147  
rc
;

4148 
	}
}

4159 
	$unixShmRegi⁄PîM≠
(){

4160 
shmsz
 = 32*1024;

4161 
pgsz
 = 
	`osGë∑gesize
();

4162 
	`as£π
–((
pgsz
-1)&pgsz)==0 );

4163 if–
pgsz
<
shmsz
 )  1;

4164  
pgsz
/
shmsz
;

4165 
	}
}

4173 
	$unixShmPurge
(
unixFûe
 *
pFd
){

4174 
unixShmNode
 *
p
 = 
pFd
->
pInode
->
pShmNode
;

4175 
	`as£π
–
	`unixMuãxHñd
() );

4176 if–
p
 && 
	`ALWAYS
’->
nRef
==0) ){

4177 
nShmPîM≠
 = 
	`unixShmRegi⁄PîM≠
();

4178 
i
;

4179 
	`as£π
–
p
->
pInode
==
pFd
->pInode );

4180 
	`sqlôe3_muãx_‰ì
(
p
->
muãx
);

4181 
i
=0; i<
p
->
nRegi⁄
; i+=
nShmPîM≠
){

4182 if–
p
->
h
>=0 ){

4183 
	`osMunm≠
(
p
->
≠Regi⁄
[
i
],Ö->
szRegi⁄
);

4185 
	`sqlôe3_‰ì
(
p
->
≠Regi⁄
[
i
]);

4188 
	`sqlôe3_‰ì
(
p
->
≠Regi⁄
);

4189 if–
p
->
h
>=0 ){

4190 
	`robu°_˛o£
(
pFd
, 
p
->
h
, 
__LINE__
);

4191 
p
->
h
 = -1;

4193 
p
->
pInode
->
pShmNode
 = 0;

4194 
	`sqlôe3_‰ì
(
p
);

4196 
	}
}

4233 
	$unixO≥nSh¨edMem‹y
(
unixFûe
 *
pDbFd
){

4234 
unixShm
 *
p
 = 0;

4235 
unixShmNode
 *
pShmNode
;

4236 
rc
;

4237 
unixInodeInfo
 *
pInode
;

4238 *
zShmFûíame
;

4239 
nShmFûíame
;

4242 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

4243 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

4244 
	`mem£t
(
p
, 0, (*p));

4245 
	`as£π
–
pDbFd
->
pShm
==0 );

4250 
	`unixE¡îMuãx
();

4251 
pInode
 = 
pDbFd
->pInode;

4252 
pShmNode
 = 
pInode
->pShmNode;

4253 if–
pShmNode
==0 ){

4254 
°©
 
sSèt
;

4255 #i‚de‡
SQLITE_SHM_DIRECTORY


4256 c⁄° *
zBa£P©h
 = 
pDbFd
->
zP©h
;

4263 if–
	`osF°©
(
pDbFd
->
h
, &
sSèt
) ){

4264 
rc
 = 
SQLITE_IOERR_FSTAT
;

4265 
shm_›í_îr
;

4268 #ifde‡
SQLITE_SHM_DIRECTORY


4269 
nShmFûíame
 = (
SQLITE_SHM_DIRECTORY
) + 31;

4271 
nShmFûíame
 = 6 + ()
	`°æí
(
zBa£P©h
);

4273 
pShmNode
 = 
	`sqlôe3_mÆloc64
–(*pShmNodeË+ 
nShmFûíame
 );

4274 if–
pShmNode
==0 ){

4275 
rc
 = 
SQLITE_NOMEM_BKPT
;

4276 
shm_›í_îr
;

4278 
	`mem£t
(
pShmNode
, 0, (*pShmNode)+
nShmFûíame
);

4279 
zShmFûíame
 = 
pShmNode
->
zFûíame
 = (*)&pShmNode[1];

4280 #ifde‡
SQLITE_SHM_DIRECTORY


4281 
	`sqlôe3_¢¥ötf
(
nShmFûíame
, 
zShmFûíame
,

4282 
SQLITE_SHM_DIRECTORY
 "/sqlite-shm-%x-%x",

4283 (
u32
)
sSèt
.
°_öo
, (u32)sSèt.
°_dev
);

4285 
	`sqlôe3_¢¥ötf
(
nShmFûíame
, 
zShmFûíame
, "%s-shm", 
zBa£P©h
);

4286 
	`sqlôe3FûeSuffix3
(
pDbFd
->
zP©h
, 
zShmFûíame
);

4288 
pShmNode
->
h
 = -1;

4289 
pDbFd
->
pInode
->
pShmNode
 =ÖShmNode;

4290 
pShmNode
->
pInode
 = 
pDbFd
->pInode;

4291 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

4292 
pShmNode
->
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

4293 if–
pShmNode
->
muãx
==0 ){

4294 
rc
 = 
SQLITE_NOMEM_BKPT
;

4295 
shm_›í_îr
;

4299 if–
pInode
->
bPro˚ssLock
==0 ){

4300 
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

4301 if–
	`sqlôe3_uri_boﬁón
(
pDbFd
->
zP©h
, "readonly_shm", 0) ){

4302 
›íFœgs
 = 
O_RDONLY
;

4303 
pShmNode
->
isRód⁄ly
 = 1;

4305 
pShmNode
->
h
 = 
	`robu°_›í
(
zShmFûíame
, 
›íFœgs
, (
sSèt
.
°_mode
&0777));

4306 if–
pShmNode
->
h
<0 ){

4307 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›í", 
zShmFûíame
);

4308 
shm_›í_îr
;

4315 
	`robu°Fchown
(
pShmNode
->
h
, 
sSèt
.
°_uid
, sSèt.
°_gid
);

4320 
rc
 = 
SQLITE_OK
;

4321 if–
	`unixShmSy°emLock
(
pDbFd
, 
F_WRLCK
, 
UNIX_SHM_DMS
, 1)==
SQLITE_OK
 ){

4322 if–
	`robu°_·runˇã
(
pShmNode
->
h
, 0) ){

4323 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMOPEN
, "·runˇã", 
zShmFûíame
);

4326 if–
rc
==
SQLITE_OK
 ){

4327 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_RDLCK
, 
UNIX_SHM_DMS
, 1);

4329 if–
rc
 ) 
shm_›í_îr
;

4334 
p
->
pShmNode
 =ÖShmNode;

4335 #ifde‡
SQLITE_DEBUG


4336 
p
->
id
 = 
pShmNode
->
√xtShmId
++;

4338 
pShmNode
->
nRef
++;

4339 
pDbFd
->
pShm
 = 
p
;

4340 
	`unixLóveMuãx
();

4349 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4350 
p
->
pNext
 = 
pShmNode
->
pFú°
;

4351 
pShmNode
->
pFú°
 = 
p
;

4352 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4353  
SQLITE_OK
;

4356 
shm_›í_îr
:

4357 
	`unixShmPurge
(
pDbFd
);

4358 
	`sqlôe3_‰ì
(
p
);

4359 
	`unixLóveMuãx
();

4360  
rc
;

4361 
	}
}

4382 
	$unixShmM≠
(

4383 
sqlôe3_fûe
 *
fd
,

4384 
iRegi⁄
,

4385 
szRegi⁄
,

4386 
bExãnd
,

4387 vﬁ©ûê**
µ


4389 
unixFûe
 *
pDbFd
 = (unixFûe*)
fd
;

4390 
unixShm
 *
p
;

4391 
unixShmNode
 *
pShmNode
;

4392 
rc
 = 
SQLITE_OK
;

4393 
nShmPîM≠
 = 
	`unixShmRegi⁄PîM≠
();

4394 
nReqRegi⁄
;

4397 if–
pDbFd
->
pShm
==0 ){

4398 
rc
 = 
	`unixO≥nSh¨edMem‹y
(
pDbFd
);

4399 if–
rc
!=
SQLITE_OK
 ) Ñc;

4402 
p
 = 
pDbFd
->
pShm
;

4403 
pShmNode
 = 
p
->pShmNode;

4404 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4405 
	`as£π
–
szRegi⁄
==
pShmNode
->szRegi⁄ ||ÖShmNode->
nRegi⁄
==0 );

4406 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4407 
	`as£π
–
pShmNode
->
h
>=0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==1 );

4408 
	`as£π
–
pShmNode
->
h
<0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==0 );

4411 
nReqRegi⁄
 = ((
iRegi⁄
+
nShmPîM≠
) /ÇShmPerMap) *ÇShmPerMap;

4413 if–
pShmNode
->
nRegi⁄
<
nReqRegi⁄
 ){

4414 **
≠New
;

4415 
nByã
 = 
nReqRegi⁄
*
szRegi⁄
;

4416 
°©
 
sSèt
;

4418 
pShmNode
->
szRegi⁄
 = szRegion;

4420 if–
pShmNode
->
h
>=0 ){

4425 if–
	`osF°©
(
pShmNode
->
h
, &
sSèt
) ){

4426 
rc
 = 
SQLITE_IOERR_SHMSIZE
;

4427 
shm∑ge_out
;

4430 if–
sSèt
.
°_size
<
nByã
 ){

4434 if–!
bExãnd
 ){

4435 
shm∑ge_out
;

4446 c⁄° 
pgsz
 = 4096;

4447 
iPg
;

4450 
	`as£π
–(
nByã
 % 
pgsz
)==0 );

4451 
iPg
=(
sSèt
.
°_size
/
pgsz
); iPg<(
nByã
/pgsz); iPg++){

4452 
x
 = 0;

4453 if–
	`£ekAndWrôeFd
(
pShmNode
->
h
, 
iPg
*
pgsz
 +Ögsz-1, "", 1, &
x
)!=1 ){

4454 c⁄° *
zFûe
 = 
pShmNode
->
zFûíame
;

4455 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMSIZE
, "wrôe", 
zFûe
);

4456 
shm∑ge_out
;

4464 
≠New
 = (**)
	`sqlôe3_ªÆloc
(

4465 
pShmNode
->
≠Regi⁄
, 
nReqRegi⁄
*(*)

4467 if–!
≠New
 ){

4468 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

4469 
shm∑ge_out
;

4471 
pShmNode
->
≠Regi⁄
 = 
≠New
;

4472  
pShmNode
->
nRegi⁄
<
nReqRegi⁄
 ){

4473 
nM≠
 = 
szRegi⁄
*
nShmPîM≠
;

4474 
i
;

4475 *
pMem
;

4476 if–
pShmNode
->
h
>=0 ){

4477 
pMem
 = 
	`osMm≠
(0, 
nM≠
,

4478 
pShmNode
->
isRód⁄ly
 ? 
PROT_READ
 : PROT_READ|
PROT_WRITE
,

4479 
MAP_SHARED
, 
pShmNode
->
h
, 
szRegi⁄
*(
i64
ÌShmNode->
nRegi⁄


4481 if–
pMem
==
MAP_FAILED
 ){

4482 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_SHMMAP
, "mm≠", 
pShmNode
->
zFûíame
);

4483 
shm∑ge_out
;

4486 
pMem
 = 
	`sqlôe3_mÆloc64
(
szRegi⁄
);

4487 if–
pMem
==0 ){

4488 
rc
 = 
SQLITE_NOMEM_BKPT
;

4489 
shm∑ge_out
;

4491 
	`mem£t
(
pMem
, 0, 
szRegi⁄
);

4494 
i
=0; i<
nShmPîM≠
; i++){

4495 
pShmNode
->
≠Regi⁄
[pShmNode->
nRegi⁄
+
i
] = &((*)
pMem
)[
szRegi⁄
*i];

4497 
pShmNode
->
nRegi⁄
 +
nShmPîM≠
;

4501 
shm∑ge_out
:

4502 if–
pShmNode
->
nRegi⁄
>
iRegi⁄
 ){

4503 *
µ
 = 
pShmNode
->
≠Regi⁄
[
iRegi⁄
];

4505 *
µ
 = 0;

4507 if–
pShmNode
->
isRód⁄ly
 && 
rc
==
SQLITE_OK
 )Ñ¯
SQLITE_READONLY
;

4508 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4509  
rc
;

4510 
	}
}

4520 
	$unixShmLock
(

4521 
sqlôe3_fûe
 *
fd
,

4522 
of°
,

4523 
n
,

4524 
Êags


4526 
unixFûe
 *
pDbFd
 = (unixFûe*)
fd
;

4527 
unixShm
 *
p
 = 
pDbFd
->
pShm
;

4528 
unixShm
 *
pX
;

4529 
unixShmNode
 *
pShmNode
 = 
p
->pShmNode;

4530 
rc
 = 
SQLITE_OK
;

4531 
u16
 
mask
;

4533 
	`as£π
–
pShmNode
==
pDbFd
->
pInode
->pShmNode );

4534 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4535 
	`as£π
–
of°
>=0 && of°+
n
<=
SQLITE_SHM_NLOCK
 );

4536 
	`as£π
–
n
>=1 );

4537 
	`as£π
–
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
)

4538 || 
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
)

4539 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
)

4540 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
) );

4541 
	`as£π
–
n
==1 || (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
)!=0 );

4542 
	`as£π
–
pShmNode
->
h
>=0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==1 );

4543 
	`as£π
–
pShmNode
->
h
<0 || 
pDbFd
->
pInode
->
bPro˚ssLock
==0 );

4545 
mask
 = (1<<(
of°
+
n
)) - (1<<ofst);

4546 
	`as£π
–
n
>1 || 
mask
==(1<<
of°
) );

4547 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4548 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ){

4549 
u16
 
ÆlMask
 = 0;

4552 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4553 if–
pX
==
p
 ) ;

4554 
	`as£π
–(
pX
->
ex˛Mask
 & (
p
->ex˛Mask|p->
sh¨edMask
))==0 );

4555 
ÆlMask
 |
pX
->
sh¨edMask
;

4559 if–(
mask
 & 
ÆlMask
)==0 ){

4560 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_UNLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4562 
rc
 = 
SQLITE_OK
;

4566 if–
rc
==
SQLITE_OK
 ){

4567 
p
->
ex˛Mask
 &~
mask
;

4568 
p
->
sh¨edMask
 &~
mask
;

4570 }if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

4571 
u16
 
ÆlSh¨ed
 = 0;

4577 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4578 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 ){

4579 
rc
 = 
SQLITE_BUSY
;

4582 
ÆlSh¨ed
 |
pX
->
sh¨edMask
;

4586 if–
rc
==
SQLITE_OK
 ){

4587 if–(
ÆlSh¨ed
 & 
mask
)==0 ){

4588 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_RDLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4590 
rc
 = 
SQLITE_OK
;

4595 if–
rc
==
SQLITE_OK
 ){

4596 
p
->
sh¨edMask
 |
mask
;

4602 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4603 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 || (pX->
sh¨edMask
 & mask)!=0 ){

4604 
rc
 = 
SQLITE_BUSY
;

4612 if–
rc
==
SQLITE_OK
 ){

4613 
rc
 = 
	`unixShmSy°emLock
(
pDbFd
, 
F_WRLCK
, 
of°
+
UNIX_SHM_BASE
, 
n
);

4614 if–
rc
==
SQLITE_OK
 ){

4615 
	`as£π
–(
p
->
sh¨edMask
 & 
mask
)==0 );

4616 
p
->
ex˛Mask
 |
mask
;

4620 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4621 
	`OSTRACE
(("SHM-LOCK shmid-%d,Öid-%d got %03x,%03x\n",

4622 
p
->
id
, 
	`osGëpid
(0),Ö->
sh¨edMask
,Ö->
ex˛Mask
));

4623  
rc
;

4624 
	}
}

4632 
	$unixShmB¨rõr
(

4633 
sqlôe3_fûe
 *
fd


4635 
	`UNUSED_PARAMETER
(
fd
);

4636 
	`sqlôe3Mem‹yB¨rõr
();

4637 
	`unixE¡îMuãx
();

4638 
	`unixLóveMuãx
();

4639 
	}
}

4648 
	$unixShmUnm≠
(

4649 
sqlôe3_fûe
 *
fd
,

4650 
dñëeFœg


4652 
unixShm
 *
p
;

4653 
unixShmNode
 *
pShmNode
;

4654 
unixShm
 **
µ
;

4655 
unixFûe
 *
pDbFd
;

4657 
pDbFd
 = (
unixFûe
*)
fd
;

4658 
p
 = 
pDbFd
->
pShm
;

4659 if–
p
==0 )  
SQLITE_OK
;

4660 
pShmNode
 = 
p
->pShmNode;

4662 
	`as£π
–
pShmNode
==
pDbFd
->
pInode
->pShmNode );

4663 
	`as£π
–
pShmNode
->
pInode
==
pDbFd
->pInode );

4667 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4668 
µ
=&
pShmNode
->
pFú°
; (*µ)!=
p
;Ö∞&(*µ)->
pNext
){}

4669 *
µ
 = 
p
->
pNext
;

4672 
	`sqlôe3_‰ì
(
p
);

4673 
pDbFd
->
pShm
 = 0;

4674 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4678 
	`unixE¡îMuãx
();

4679 
	`as£π
–
pShmNode
->
nRef
>0 );

4680 
pShmNode
->
nRef
--;

4681 if–
pShmNode
->
nRef
==0 ){

4682 if–
dñëeFœg
 && 
pShmNode
->
h
>=0 ){

4683 
	`osU∆ök
(
pShmNode
->
zFûíame
);

4685 
	`unixShmPurge
(
pDbFd
);

4687 
	`unixLóveMuãx
();

4689  
SQLITE_OK
;

4690 
	}
}

4694 
	#unixShmM≠
 0

	)

4695 
	#unixShmLock
 0

	)

4696 
	#unixShmB¨rõr
 0

	)

4697 
	#unixShmUnm≠
 0

	)

4700 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4704 
	$unixUnm≠fûe
(
unixFûe
 *
pFd
){

4705 
	`as£π
–
pFd
->
nFëchOut
==0 );

4706 if–
pFd
->
pM≠Regi⁄
 ){

4707 
	`osMunm≠
(
pFd
->
pM≠Regi⁄
,ÖFd->
mm≠SizeA˘uÆ
);

4708 
pFd
->
pM≠Regi⁄
 = 0;

4709 
pFd
->
mm≠Size
 = 0;

4710 
pFd
->
mm≠SizeA˘uÆ
 = 0;

4712 
	}
}

4729 
	$unixRem≠fûe
(

4730 
unixFûe
 *
pFd
,

4731 
i64
 
nNew


4733 c⁄° *
zEº
 = "mmap";

4734 
h
 = 
pFd
->h;

4735 
u8
 *
pOrig
 = (u8 *)
pFd
->
pM≠Regi⁄
;

4736 
i64
 
nOrig
 = 
pFd
->
mm≠SizeA˘uÆ
;

4737 
u8
 *
pNew
 = 0;

4738 
Êags
 = 
PROT_READ
;

4740 
	`as£π
–
pFd
->
nFëchOut
==0 );

4741 
	`as£π
–
nNew
>
pFd
->
mm≠Size
 );

4742 
	`as£π
–
nNew
<=
pFd
->
mm≠SizeMax
 );

4743 
	`as£π
–
nNew
>0 );

4744 
	`as£π
–
pFd
->
mm≠SizeA˘uÆ
>ıFd->
mm≠Size
 );

4745 
	`as£π
–
MAP_FAILED
!=0 );

4747 #ifde‡
SQLITE_MMAP_READWRITE


4748 if–(
pFd
->
˘æFœgs
 & 
UNIXFILE_RDONLY
)==0 ) 
Êags
 |
PROT_WRITE
;

4751 if–
pOrig
 ){

4752 #i‡
HAVE_MREMAP


4753 
i64
 
nReu£
 = 
pFd
->
mm≠Size
;

4755 c⁄° 
szSy•age
 = 
	`osGë∑gesize
();

4756 
i64
 
nReu£
 = (
pFd
->
mm≠Size
 & ~(
szSy•age
-1));

4758 
u8
 *
pReq
 = &
pOrig
[
nReu£
];

4761 if–
nReu£
!=
nOrig
 ){

4762 
	`osMunm≠
(
pReq
, 
nOrig
-
nReu£
);

4765 #i‡
HAVE_MREMAP


4766 
pNew
 = 
	`osMªm≠
(
pOrig
, 
nReu£
, 
nNew
, 
MREMAP_MAYMOVE
);

4767 
zEº
 = "mremap";

4769 
pNew
 = 
	`osMm≠
(
pReq
, 
nNew
-
nReu£
, 
Êags
, 
MAP_SHARED
, 
h
,ÇReuse);

4770 if–
pNew
!=
MAP_FAILED
 ){

4771 if–
pNew
!=
pReq
 ){

4772 
	`osMunm≠
(
pNew
, 
nNew
 - 
nReu£
);

4773 
pNew
 = 0;

4775 
pNew
 = 
pOrig
;

4781 if–
pNew
==
MAP_FAILED
 ||ÖNew==0 ){

4782 
	`osMunm≠
(
pOrig
, 
nReu£
);

4787 if–
pNew
==0 ){

4788 
pNew
 = 
	`osMm≠
(0, 
nNew
, 
Êags
, 
MAP_SHARED
, 
h
, 0);

4791 if–
pNew
==
MAP_FAILED
 ){

4792 
pNew
 = 0;

4793 
nNew
 = 0;

4794 
	`unixLogEº‹
(
SQLITE_OK
, 
zEº
, 
pFd
->
zP©h
);

4799 
pFd
->
mm≠SizeMax
 = 0;

4801 
pFd
->
pM≠Regi⁄
 = (*)
pNew
;

4802 
pFd
->
mm≠Size
 =ÖFd->
mm≠SizeA˘uÆ
 = 
nNew
;

4803 
	}
}

4821 
	$unixM≠fûe
(
unixFûe
 *
pFd
, 
i64
 
nM≠
){

4822 
	`as£π
–
nM≠
>=0 || 
pFd
->
nFëchOut
==0 );

4823 
	`as£π
–
nM≠
>0 || (
pFd
->
mm≠Size
==0 &&ÖFd->
pM≠Regi⁄
==0) );

4824 if–
pFd
->
nFëchOut
>0 )  
SQLITE_OK
;

4826 if–
nM≠
<0 ){

4827 
°©
 
°©buf
;

4828 if–
	`osF°©
(
pFd
->
h
, &
°©buf
) ){

4829  
SQLITE_IOERR_FSTAT
;

4831 
nM≠
 = 
°©buf
.
°_size
;

4833 if–
nM≠
>
pFd
->
mm≠SizeMax
 ){

4834 
nM≠
 = 
pFd
->
mm≠SizeMax
;

4837 
	`as£π
–
nM≠
>0 || (
pFd
->
mm≠Size
==0 &&ÖFd->
pM≠Regi⁄
==0) );

4838 if–
nM≠
!=
pFd
->
mm≠Size
 ){

4839 
	`unixRem≠fûe
(
pFd
, 
nM≠
);

4842  
SQLITE_OK
;

4843 
	}
}

4858 
	$unixFëch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, 
nAmt
, **
µ
){

4859 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4860 
unixFûe
 *
pFd
 = (unixFûê*)
fd
;

4862 *
µ
 = 0;

4864 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4865 if–
pFd
->
mm≠SizeMax
>0 ){

4866 if–
pFd
->
pM≠Regi⁄
==0 ){

4867 
rc
 = 
	`unixM≠fûe
(
pFd
, -1);

4868 if–
rc
!=
SQLITE_OK
 ) Ñc;

4870 if–
pFd
->
mm≠Size
 >
iOff
+
nAmt
 ){

4871 *
µ
 = &((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
];

4872 
pFd
->
nFëchOut
++;

4876  
SQLITE_OK
;

4877 
	}
}

4889 
	$unixUn„tch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, *
p
){

4890 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4891 
unixFûe
 *
pFd
 = (unixFûê*)
fd
;

4892 
	`UNUSED_PARAMETER
(
iOff
);

4897 
	`as£π
–(
p
==0)==(
pFd
->
nFëchOut
==0) );

4900 
	`as£π
–
p
==0 ||Ö==&((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
] );

4902 if–
p
 ){

4903 
pFd
->
nFëchOut
--;

4905 
	`unixUnm≠fûe
(
pFd
);

4908 
	`as£π
–
pFd
->
nFëchOut
>=0 );

4910 
	`UNUSED_PARAMETER
(
fd
);

4911 
	`UNUSED_PARAMETER
(
p
);

4912 
	`UNUSED_PARAMETER
(
iOff
);

4914  
SQLITE_OK
;

4915 
	}
}

4957 
	#IOMETHODS
(
FINDER
,
METHOD
,
VERSION
,
CLOSE
,
LOCK
,
UNLOCK
,
CKLOCK
,
SHMMAP
) \

4958 c⁄° 
sqlôe3_io_mëhods
 
METHOD
 = { \

4959 
VERSION
, \

4960 
CLOSE
, \

4961 
unixRód
, \

4962 
unixWrôe
, \

4963 
unixTrunˇã
, \

4964 
unixSync
, \

4965 
unixFûeSize
, \

4966 
LOCK
, \

4967 
UNLOCK
, \

4968 
CKLOCK
, \

4969 
unixFûeC⁄åﬁ
, \

4970 
unixSe˘‹Size
, \

4971 
unixDevi˚Ch¨a˘îi°ics
, \

4972 
SHMMAP
, \

4973 
unixShmLock
, \

4974 
unixShmB¨rõr
, \

4975 
unixShmUnm≠
, \

4976 
unixFëch
, \

4977 
unixUn„tch
, \

4979 c⁄° 
sqlôe3_io_mëhods
 *
FINDER
##
	`Im∂
(c⁄° *
z
, 
unixFûe
 *
p
){ \

4980 
	`UNUSED_PARAMETER
(
z
); UNUSED_PARAMETER(
p
); \

4981  &
METHOD
; \

4983 c⁄° 
sqlôe3_io_mëhods
 *(*c⁄° 
FINDER
)(c⁄° *,
unixFûe
 *
p
) \

4984 
FINDER
##
Im∂
;

	)

4991 
	$IOMETHODS
(

4992 
posixIoFödî
,

4993 
posixIoMëhods
,

4995 
unixClo£
,

4996 
unixLock
,

4997 
unixU∆ock
,

4998 
unixCheckRe£rvedLock
,

4999 
unixShmM≠


5001 
	$IOMETHODS
(

5002 
nﬁockIoFödî
,

5003 
nﬁockIoMëhods
,

5005 
nﬁockClo£
,

5006 
nﬁockLock
,

5007 
nﬁockU∆ock
,

5008 
nﬁockCheckRe£rvedLock
,

5011 
	$IOMETHODS
(

5012 
dŸlockIoFödî
,

5013 
dŸlockIoMëhods
,

5015 
dŸlockClo£
,

5016 
dŸlockLock
,

5017 
dŸlockU∆ock
,

5018 
dŸlockCheckRe£rvedLock
,

5022 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5023 
	$IOMETHODS
(

5024 
ÊockIoFödî
,

5025 
ÊockIoMëhods
,

5027 
ÊockClo£
,

5028 
ÊockLock
,

5029 
ÊockU∆ock
,

5030 
ÊockCheckRe£rvedLock
,

5035 #i‡
OS_VXWORKS


5036 
	$IOMETHODS
(

5037 
£mIoFödî
,

5038 
£mIoMëhods
,

5040 
£mXClo£
,

5041 
£mXLock
,

5042 
£mXU∆ock
,

5043 
£mXCheckRe£rvedLock
,

5048 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5049 
	$IOMETHODS
(

5050 
aÂIoFödî
,

5051 
aÂIoMëhods
,

5053 
aÂClo£
,

5054 
aÂLock
,

5055 
aÂU∆ock
,

5056 
aÂCheckRe£rvedLock
,

5070 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5071 
	`¥oxyClo£
(
sqlôe3_fûe
*);

5072 
	`¥oxyLock
(
sqlôe3_fûe
*, );

5073 
	`¥oxyU∆ock
(
sqlôe3_fûe
*, );

5074 
	`¥oxyCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

5075 
	$IOMETHODS
(

5076 
¥oxyIoFödî
,

5077 
¥oxyIoMëhods
,

5079 
¥oxyClo£
,

5080 
¥oxyLock
,

5081 
¥oxyU∆ock
,

5082 
¥oxyCheckRe£rvedLock
,

5088 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5089 
	$IOMETHODS
(

5090 
nfsIoFödî
,

5091 
nfsIoMëhods
,

5093 
unixClo£
,

5094 
unixLock
,

5095 
nfsU∆ock
,

5096 
unixCheckRe£rvedLock
,

5101 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5109 c⁄° 
sqlôe3_io_mëhods
 *
	$autﬁockIoFödîIm∂
(

5110 c⁄° *
fûeP©h
,

5111 
unixFûe
 *
pNew


5113 c⁄° 
	sM≠pög
 {

5114 c⁄° *
zFûesy°em
;

5115 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

5116 } 
aM≠
[] = {

5117 { "hfs", &
posixIoMëhods
 },

5118 { "ufs", &
posixIoMëhods
 },

5119 { "aÂfs", &
aÂIoMëhods
 },

5120 { "smbfs", &
aÂIoMëhods
 },

5121 { "webdav", &
nﬁockIoMëhods
 },

5124 
i
;

5125 
°©fs
 
fsInfo
;

5126 
Êock
 
lockInfo
;

5128 if–!
fûeP©h
 ){

5131  &
nﬁockIoMëhods
;

5133 if–
	`°©fs
(
fûeP©h
, &
fsInfo
) != -1 ){

5134 if–
fsInfo
.
f_Êags
 & 
MNT_RDONLY
 ){

5135  &
nﬁockIoMëhods
;

5137 
i
=0; 
aM≠
[i].
zFûesy°em
; i++){

5138 if–
	`°rcmp
(
fsInfo
.
f_f°y≥«me
, 
aM≠
[
i
].
zFûesy°em
)==0 ){

5139  
aM≠
[
i
].
pMëhods
;

5148 
lockInfo
.
l_Àn
 = 1;

5149 
lockInfo
.
l_°¨t
 = 0;

5150 
lockInfo
.
l_whí˚
 = 
SEEK_SET
;

5151 
lockInfo
.
l_ty≥
 = 
F_RDLCK
;

5152 if–
	`osF˙é
(
pNew
->
h
, 
F_GETLK
, &
lockInfo
)!=-1 ) {

5153 if–
	`°rcmp
(
fsInfo
.
f_f°y≥«me
, "nfs")==0 ){

5154  &
nfsIoMëhods
;

5156  &
posixIoMëhods
;

5159  &
dŸlockIoMëhods
;

5161 
	}
}

5162 c⁄° 
	gsqlôe3_io_mëhods


5163 *(*c⁄° 
	gautﬁockIoFödî
)(c⁄° *,
	gunixFûe
*Ë
autﬁockIoFödîIm∂
;

5167 #i‡
OS_VXWORKS


5173 c⁄° 
sqlôe3_io_mëhods
 *
	$vxw‹ksIoFödîIm∂
(

5174 c⁄° *
fûeP©h
,

5175 
unixFûe
 *
pNew


5177 
Êock
 
lockInfo
;

5179 if–!
fûeP©h
 ){

5182  &
nﬁockIoMëhods
;

5188 
lockInfo
.
l_Àn
 = 1;

5189 
lockInfo
.
l_°¨t
 = 0;

5190 
lockInfo
.
l_whí˚
 = 
SEEK_SET
;

5191 
lockInfo
.
l_ty≥
 = 
F_RDLCK
;

5192 if–
	`osF˙é
(
pNew
->
h
, 
F_GETLK
, &
lockInfo
)!=-1 ) {

5193  &
posixIoMëhods
;

5195  &
£mIoMëhods
;

5197 
	}
}

5198 c⁄° 
	gsqlôe3_io_mëhods


5199 *(*c⁄° 
	gvxw‹ksIoFödî
)(c⁄° *,
	gunixFûe
*Ë
vxw‹ksIoFödîIm∂
;

5206 c⁄° 
	tsqlôe3_io_mëhods
 *(*
	tfödî_ty≥
)(c⁄° *,
	tunixFûe
*);

5219 
	$fûlInUnixFûe
(

5220 
sqlôe3_vfs
 *
pVfs
,

5221 
h
,

5222 
sqlôe3_fûe
 *
pId
,

5223 c⁄° *
zFûíame
,

5224 
˘æFœgs


5226 c⁄° 
sqlôe3_io_mëhods
 *
pLockögStyÀ
;

5227 
unixFûe
 *
pNew
 = (unixFûê*)
pId
;

5228 
rc
 = 
SQLITE_OK
;

5230 
	`as£π
–
pNew
->
pInode
==
NULL
 );

5236 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5237 
	`as£π
–
zFûíame
==0 || zFilename[0]=='/'

5238 || 
pVfs
->
pAµD©a
==(*)&
autﬁockIoFödî
 );

5240 
	`as£π
–
zFûíame
==0 || zFilename[0]=='/' );

5244 
	`as£π
–
zFûíame
!=0 || (
˘æFœgs
 & 
UNIXFILE_NOLOCK
)!=0 );

5246 
	`OSTRACE
(("OPEN %-3d %s\n", 
h
, 
zFûíame
));

5247 
pNew
->
h
 = h;

5248 
pNew
->
pVfs
 =ÖVfs;

5249 
pNew
->
zP©h
 = 
zFûíame
;

5250 
pNew
->
˘æFœgs
 = (
u8
)ctrlFlags;

5251 #i‡
SQLITE_MAX_MMAP_SIZE
>0

5252 
pNew
->
mm≠SizeMax
 = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

5254 if–
	`sqlôe3_uri_boﬁón
(((
˘æFœgs
 & 
UNIXFILE_URI
Ë? 
zFûíame
 : 0),

5255 "psow", 
SQLITE_POWERSAFE_OVERWRITE
) ){

5256 
pNew
->
˘æFœgs
 |
UNIXFILE_PSOW
;

5258 if–
	`°rcmp
(
pVfs
->
zName
,"unix-excl")==0 ){

5259 
pNew
->
˘æFœgs
 |
UNIXFILE_EXCL
;

5262 #i‡
OS_VXWORKS


5263 
pNew
->
pId
 = 
	`vxw‹ksFödFûeId
(
zFûíame
);

5264 if–
pNew
->
pId
==0 ){

5265 
˘æFœgs
 |
UNIXFILE_NOLOCK
;

5266 
rc
 = 
SQLITE_NOMEM_BKPT
;

5270 if–
˘æFœgs
 & 
UNIXFILE_NOLOCK
 ){

5271 
pLockögStyÀ
 = &
nﬁockIoMëhods
;

5273 
pLockögStyÀ
 = (**(
födî_ty≥
*)
pVfs
->
pAµD©a
)(
zFûíame
, 
pNew
);

5274 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5278 
pNew
->
lockögC⁄ãxt
 = (*)
zFûíame
;

5282 if–
pLockögStyÀ
 =&
posixIoMëhods


5283 #i‡
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


5284 || 
pLockögStyÀ
 =&
nfsIoMëhods


5287 
	`unixE¡îMuãx
();

5288 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5289 if–
rc
!=
SQLITE_OK
 ){

5308 
	`robu°_˛o£
(
pNew
, 
h
, 
__LINE__
);

5309 
h
 = -1;

5311 
	`unixLóveMuãx
();

5314 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

5315 if–
pLockögStyÀ
 =&
aÂIoMëhods
 ){

5319 
aÂLockögC⁄ãxt
 *
pCtx
;

5320 
pNew
->
lockögC⁄ãxt
 = 
pCtx
 = 
	`sqlôe3_mÆloc64
( (*pCtx) );

5321 if–
pCtx
==0 ){

5322 
rc
 = 
SQLITE_NOMEM_BKPT
;

5327 
pCtx
->
dbP©h
 = 
zFûíame
;

5328 
pCtx
->
ª£rved
 = 0;

5329 
	`§™domdev
();

5330 
	`unixE¡îMuãx
();

5331 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5332 if–
rc
!=
SQLITE_OK
 ){

5333 
	`sqlôe3_‰ì
(
pNew
->
lockögC⁄ãxt
);

5334 
	`robu°_˛o£
(
pNew
, 
h
, 
__LINE__
);

5335 
h
 = -1;

5337 
	`unixLóveMuãx
();

5342 if–
pLockögStyÀ
 =&
dŸlockIoMëhods
 ){

5346 *
zLockFûe
;

5347 
nFûíame
;

5348 
	`as£π
–
zFûíame
!=0 );

5349 
nFûíame
 = ()
	`°æí
(
zFûíame
) + 6;

5350 
zLockFûe
 = (*)
	`sqlôe3_mÆloc64
(
nFûíame
);

5351 if–
zLockFûe
==0 ){

5352 
rc
 = 
SQLITE_NOMEM_BKPT
;

5354 
	`sqlôe3_¢¥ötf
(
nFûíame
, 
zLockFûe
, "%s" 
DOTLOCK_SUFFIX
, 
zFûíame
);

5356 
pNew
->
lockögC⁄ãxt
 = 
zLockFûe
;

5359 #i‡
OS_VXWORKS


5360 if–
pLockögStyÀ
 =&
£mIoMëhods
 ){

5364 
	`unixE¡îMuãx
();

5365 
rc
 = 
	`födInodeInfo
(
pNew
, &pNew->
pInode
);

5366 if–(
rc
==
SQLITE_OK
Ë&& (
pNew
->
pInode
->
pSem
==
NULL
) ){

5367 *
zSemName
 = 
pNew
->
pInode
->
aSemName
;

5368 
n
;

5369 
	`sqlôe3_¢¥ötf
(
MAX_PATHNAME
, 
zSemName
, "/%s.sem",

5370 
pNew
->
pId
->
zC™⁄iˇlName
);

5371  
n
=1; 
zSemName
[n];Ç++ )

5372 if–
zSemName
[
n
]=='/' ) zSemName[n] = '_';

5373 
pNew
->
pInode
->
pSem
 = 
	`£m_›í
(
zSemName
, 
O_CREAT
, 0666, 1);

5374 if–
pNew
->
pInode
->
pSem
 =
SEM_FAILED
 ){

5375 
rc
 = 
SQLITE_NOMEM_BKPT
;

5376 
pNew
->
pInode
->
aSemName
[0] = '\0';

5379 
	`unixLóveMuãx
();

5383 
	`°‹eLa°Eºno
(
pNew
, 0);

5384 #i‡
OS_VXWORKS


5385 if–
rc
!=
SQLITE_OK
 ){

5386 if–
h
>=0 ) 
	`robu°_˛o£
(
pNew
, h, 
__LINE__
);

5387 
h
 = -1;

5388 
	`osU∆ök
(
zFûíame
);

5389 
pNew
->
˘æFœgs
 |
UNIXFILE_DELETE
;

5392 if–
rc
!=
SQLITE_OK
 ){

5393 if–
h
>=0 ) 
	`robu°_˛o£
(
pNew
, h, 
__LINE__
);

5395 
pNew
->
pMëhod
 = 
pLockögStyÀ
;

5396 
	`O≥nCou¡î
(+1);

5397 
	`vîifyDbFûe
(
pNew
);

5399  
rc
;

5400 
	}
}

5406 c⁄° *
	$unixTempFûeDú
(){

5407 c⁄° *
azDús
[] = {

5415 
i
 = 0;

5416 
°©
 
buf
;

5417 c⁄° *
zDú
 = 
sqlôe3_ãmp_dúe˘‹y
;

5419 if–!
azDús
[0] )ázDús[0] = 
	`gëív
("SQLITE_TMPDIR");

5420 if–!
azDús
[1] )ázDús[1] = 
	`gëív
("TMPDIR");

5422 if–
zDú
!=0

5423 && 
	`osSèt
(
zDú
, &
buf
)==0

5424 && 
	`S_ISDIR
(
buf
.
°_mode
)

5425 && 
	`osAc˚ss
(
zDú
, 03)==0

5427  
zDú
;

5429 if–
i
>=(
azDús
)/(azDirs[0]) ) ;

5430 
zDú
 = 
azDús
[
i
++];

5433 
	}
}

5440 
	$unixGëTem≤ame
(
nBuf
, *
zBuf
){

5441 c⁄° *
zDú
;

5442 
iLimô
 = 0;

5448 
zBuf
[0] = 0;

5449 
	`SimuœãIOEº‹
– 
SQLITE_IOERR
 );

5451 
zDú
 = 
	`unixTempFûeDú
();

5452 if–
zDú
==0 )  
SQLITE_IOERR_GETTEMPPATH
;

5454 
u64
 
r
;

5455 
	`sqlôe3_øndom√ss
((
r
), &r);

5456 
	`as£π
–
nBuf
>2 );

5457 
zBuf
[
nBuf
-2] = 0;

5458 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "%s/"
SQLITE_TEMP_FILE_PREFIX
"%llx%c",

5459 
zDú
, 
r
, 0);

5460 if–
zBuf
[
nBuf
-2]!=0 || (
iLimô
++)>10 )  
SQLITE_ERROR
;

5461 } 
	`osAc˚ss
(
zBuf
,0)==0 );

5462  
SQLITE_OK
;

5463 
	}
}

5465 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
deföed
(
__APPLE__
)

5471 
¥oxyTønsf‹mUnixFûe
(
unixFûe
*, const *);

5490 
UnixUnu£dFd
 *
	$födReußbÀFd
(c⁄° *
zP©h
, 
Êags
){

5491 
UnixUnu£dFd
 *
pUnu£d
 = 0;

5498 #i‡!
OS_VXWORKS


5499 
°©
 
sSèt
;

5509 if–0==
	`osSèt
(
zP©h
, &
sSèt
) ){

5510 
unixInodeInfo
 *
pInode
;

5512 
	`unixE¡îMuãx
();

5513 
pInode
 = 
öodeLi°
;

5514  
pInode
 && (pInode->
fûeId
.
dev
!=
sSèt
.
°_dev


5515 || 
pInode
->
fûeId
.
öo
!=
sSèt
.
°_öo
) ){

5516 
pInode
 =ÖInode->
pNext
;

5518 if–
pInode
 ){

5519 
UnixUnu£dFd
 **
µ
;

5520 
µ
=&
pInode
->
pUnu£d
; *µ && (*µ)->
Êags
!=Êags;Öp=&((*µ)->
pNext
));

5521 
pUnu£d
 = *
µ
;

5522 if–
pUnu£d
 ){

5523 *
µ
 = 
pUnu£d
->
pNext
;

5526 
	`unixLóveMuãx
();

5529  
pUnu£d
;

5530 
	}
}

5553 
	$födCª©eFûeMode
(

5554 c⁄° *
zP©h
,

5555 
Êags
,

5556 
mode_t
 *
pMode
,

5557 
uid_t
 *
pUid
,

5558 
gid_t
 *
pGid


5560 
rc
 = 
SQLITE_OK
;

5561 *
pMode
 = 0;

5562 *
pUid
 = 0;

5563 *
pGid
 = 0;

5564 if–
Êags
 & (
SQLITE_OPEN_WAL
|
SQLITE_OPEN_MAIN_JOURNAL
) ){

5565 
zDb
[
MAX_PATHNAME
+1];

5566 
nDb
;

5567 
°©
 
sSèt
;

5581 
nDb
 = 
	`sqlôe3SåÀn30
(
zP©h
) - 1;

5582  
zP©h
[
nDb
]!='-' ){

5583 #i‚de‡
SQLITE_ENABLE_8_3_NAMES


5586 
	`as£π
–
nDb
>0 );

5587 
	`as£π
–
	`sqlôe3Iß um
(
zP©h
[
nDb
]) );

5591 if–
nDb
==0 || 
zP©h
[nDb]=='.' )  
SQLITE_OK
;

5593 
nDb
--;

5595 
	`mem˝y
(
zDb
, 
zP©h
, 
nDb
);

5596 
zDb
[
nDb
] = '\0';

5598 if–0==
	`osSèt
(
zDb
, &
sSèt
) ){

5599 *
pMode
 = 
sSèt
.
°_mode
 & 0777;

5600 *
pUid
 = 
sSèt
.
°_uid
;

5601 *
pGid
 = 
sSèt
.
°_gid
;

5603 
rc
 = 
SQLITE_IOERR_FSTAT
;

5605 }if–
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
 ){

5606 *
pMode
 = 0600;

5608  
rc
;

5609 
	}
}

5633 
	$unixO≥n
(

5634 
sqlôe3_vfs
 *
pVfs
,

5635 c⁄° *
zP©h
,

5636 
sqlôe3_fûe
 *
pFûe
,

5637 
Êags
,

5638 *
pOutFœgs


5640 
unixFûe
 *
p
 = (unixFûê*)
pFûe
;

5641 
fd
 = -1;

5642 
›íFœgs
 = 0;

5643 
eTy≥
 = 
Êags
&0xFFFFFF00;

5644 
noLock
;

5645 
rc
 = 
SQLITE_OK
;

5646 
˘æFœgs
 = 0;

5648 
isEx˛usive
 = (
Êags
 & 
SQLITE_OPEN_EXCLUSIVE
);

5649 
isDñëe
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
);

5650 
isCª©e
 = (
Êags
 & 
SQLITE_OPEN_CREATE
);

5651 
isRód⁄ly
 = (
Êags
 & 
SQLITE_OPEN_READONLY
);

5652 
isRódWrôe
 = (
Êags
 & 
SQLITE_OPEN_READWRITE
);

5653 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5654 
isAutoProxy
 = (
Êags
 & 
SQLITE_OPEN_AUTOPROXY
);

5656 #i‡
	`deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


5657 
°©fs
 
fsInfo
;

5664 
syncDú
 = (
isCª©e
 && (

5665 
eTy≥
==
SQLITE_OPEN_MASTER_JOURNAL


5666 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL


5667 || 
eTy≥
==
SQLITE_OPEN_WAL


5673 
zTm≤ame
[
MAX_PATHNAME
+2];

5674 c⁄° *
zName
 = 
zP©h
;

5683 
	`as£π
((
isRód⁄ly
==0 || 
isRódWrôe
==0) && (isReadWrite || isReadonly));

5684 
	`as£π
(
isCª©e
==0 || 
isRódWrôe
);

5685 
	`as£π
(
isEx˛usive
==0 || 
isCª©e
);

5686 
	`as£π
(
isDñëe
==0 || 
isCª©e
);

5690 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
 );

5691 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_JOURNAL
 );

5692 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MASTER_JOURNAL
 );

5693 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_WAL
 );

5696 
	`as£π
–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ||ÉTy≥==
SQLITE_OPEN_TEMP_DB


5697 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL
 ||ÉTy≥==
SQLITE_OPEN_TEMP_JOURNAL


5698 || 
eTy≥
==
SQLITE_OPEN_SUBJOURNAL
 ||ÉTy≥==
SQLITE_OPEN_MASTER_JOURNAL


5699 || 
eTy≥
==
SQLITE_OPEN_TRANSIENT_DB
 ||ÉTy≥==
SQLITE_OPEN_WAL


5707 if–
øndom√ssPid
!=
	`osGëpid
(0) ){

5708 
øndom√ssPid
 = 
	`osGëpid
(0);

5709 
	`sqlôe3_øndom√ss
(0,0);

5712 
	`mem£t
(
p
, 0, (
unixFûe
));

5714 if–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ){

5715 
UnixUnu£dFd
 *
pUnu£d
;

5716 
pUnu£d
 = 
	`födReußbÀFd
(
zName
, 
Êags
);

5717 if–
pUnu£d
 ){

5718 
fd
 = 
pUnu£d
->fd;

5720 
pUnu£d
 = 
	`sqlôe3_mÆloc64
((*pUnused));

5721 if–!
pUnu£d
 ){

5722  
SQLITE_NOMEM_BKPT
;

5725 
p
->
pUnu£d
 =ÖUnused;

5730 
	`as£π
–(
Êags
 & 
SQLITE_OPEN_URI
Ë|| 
zName
[
	`°æí
(zName)+1]==0 );

5732 }if–!
zName
 ){

5734 
	`as£π
(
isDñëe
 && !
syncDú
);

5735 
rc
 = 
	`unixGëTem≤ame
(
pVfs
->
mxP©h«me
, 
zTm≤ame
);

5736 if–
rc
!=
SQLITE_OK
 ){

5737  
rc
;

5739 
zName
 = 
zTm≤ame
;

5743 
	`as£π
–
zName
[
	`°æí
(zName)+1]==0 );

5750 if–
isRód⁄ly
 ) 
›íFœgs
 |
O_RDONLY
;

5751 if–
isRódWrôe
 ) 
›íFœgs
 |
O_RDWR
;

5752 if–
isCª©e
 ) 
›íFœgs
 |
O_CREAT
;

5753 if–
isEx˛usive
 ) 
›íFœgs
 |(
O_EXCL
|
O_NOFOLLOW
);

5754 
›íFœgs
 |(
O_LARGEFILE
|
O_BINARY
);

5756 if–
fd
<0 ){

5757 
mode_t
 
›íMode
;

5758 
uid_t
 
uid
;

5759 
gid_t
 
gid
;

5760 
rc
 = 
	`födCª©eFûeMode
(
zName
, 
Êags
, &
›íMode
, &
uid
, &
gid
);

5761 if–
rc
!=
SQLITE_OK
 ){

5762 
	`as£π
–!
p
->
pUnu£d
 );

5763 
	`as£π
–
eTy≥
==
SQLITE_OPEN_WAL
 ||ÉTy≥==
SQLITE_OPEN_MAIN_JOURNAL
 );

5764  
rc
;

5766 
fd
 = 
	`robu°_›í
(
zName
, 
›íFœgs
, 
›íMode
);

5767 
	`OSTRACE
(("OPENX %-3d %†0%o\n", 
fd
, 
zName
, 
›íFœgs
));

5768 
	`as£π
–!
isEx˛usive
 || (
›íFœgs
 & 
O_CREAT
)!=0 );

5769 if–
fd
<0 && 
î∫o
!=
EISDIR
 && 
isRódWrôe
 ){

5771 
Êags
 &~(
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
);

5772 
›íFœgs
 &~(
O_RDWR
|
O_CREAT
);

5773 
Êags
 |
SQLITE_OPEN_READONLY
;

5774 
›íFœgs
 |
O_RDONLY
;

5775 
isRód⁄ly
 = 1;

5776 
fd
 = 
	`robu°_›í
(
zName
, 
›íFœgs
, 
›íMode
);

5778 if–
fd
<0 ){

5779 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "›í", 
zName
);

5780 
›í_föished
;

5787 if–
Êags
 & (
SQLITE_OPEN_WAL
|
SQLITE_OPEN_MAIN_JOURNAL
) ){

5788 
	`robu°Fchown
(
fd
, 
uid
, 
gid
);

5791 
	`as£π
–
fd
>=0 );

5792 if–
pOutFœgs
 ){

5793 *
pOutFœgs
 = 
Êags
;

5796 if–
p
->
pUnu£d
 ){

5797 
p
->
pUnu£d
->
fd
 = fd;

5798 
p
->
pUnu£d
->
Êags
 = flags;

5801 if–
isDñëe
 ){

5802 #i‡
OS_VXWORKS


5803 
zP©h
 = 
zName
;

5804 #ñi‡
	`deföed
(
SQLITE_UNLINK_AFTER_CLOSE
)

5805 
zP©h
 = 
	`sqlôe3_m¥ötf
("%s", 
zName
);

5806 if–
zP©h
==0 ){

5807 
	`robu°_˛o£
(
p
, 
fd
, 
__LINE__
);

5808  
SQLITE_NOMEM_BKPT
;

5811 
	`osU∆ök
(
zName
);

5814 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5816 
p
->
›íFœgs
 = openFlags;

5820 #i‡
	`deföed
(
__APPLE__
Ë|| 
SQLITE_ENABLE_LOCKING_STYLE


5821 if–
	`f°©fs
(
fd
, &
fsInfo
) == -1 ){

5822 
	`°‹eLa°Eºno
(
p
, 
î∫o
);

5823 
	`robu°_˛o£
(
p
, 
fd
, 
__LINE__
);

5824  
SQLITE_IOERR_ACCESS
;

5826 i‡(0 =
	`°∫cmp
("msdos", 
fsInfo
.
f_f°y≥«me
, 5)) {

5827 ((
unixFûe
*)
pFûe
)->
fsFœgs
 |
SQLITE_FSFLAGS_IS_MSDOS
;

5829 i‡(0 =
	`°∫cmp
("exÁt", 
fsInfo
.
f_f°y≥«me
, 5)) {

5830 ((
unixFûe
*)
pFûe
)->
fsFœgs
 |
SQLITE_FSFLAGS_IS_MSDOS
;

5835 if–
isDñëe
 ) 
˘æFœgs
 |
UNIXFILE_DELETE
;

5836 if–
isRód⁄ly
 ) 
˘æFœgs
 |
UNIXFILE_RDONLY
;

5837 
noLock
 = 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
;

5838 if–
noLock
 ) 
˘æFœgs
 |
UNIXFILE_NOLOCK
;

5839 if–
syncDú
 ) 
˘æFœgs
 |
UNIXFILE_DIRSYNC
;

5840 if–
Êags
 & 
SQLITE_OPEN_URI
 ) 
˘æFœgs
 |
UNIXFILE_URI
;

5842 #i‡
SQLITE_ENABLE_LOCKING_STYLE


5843 #i‡
SQLITE_PREFER_PROXY_LOCKING


5844 
isAutoProxy
 = 1;

5846 if–
isAutoProxy
 && (
zP©h
!=
NULL
Ë&& (!
noLock
Ë&& 
pVfs
->
xO≥n
 ){

5847 *
ívf‹˚
 = 
	`gëív
("SQLITE_FORCE_PROXY_LOCKING");

5848 
u£Proxy
 = 0;

5852 if–
ívf‹˚
!=
NULL
 ){

5853 
u£Proxy
 = 
	`©oi
(
ívf‹˚
)>0;

5855 
u£Proxy
 = !(
fsInfo
.
f_Êags
&
MNT_LOCAL
);

5857 if–
u£Proxy
 ){

5858 
rc
 = 
	`fûlInUnixFûe
(
pVfs
, 
fd
, 
pFûe
, 
zP©h
, 
˘æFœgs
);

5859 if–
rc
==
SQLITE_OK
 ){

5860 
rc
 = 
	`¥oxyTønsf‹mUnixFûe
((
unixFûe
*)
pFûe
, ":auto:");

5861 if–
rc
!=
SQLITE_OK
 ){

5866 
	`unixClo£
(
pFûe
);

5867  
rc
;

5870 
›í_föished
;

5875 
rc
 = 
	`fûlInUnixFûe
(
pVfs
, 
fd
, 
pFûe
, 
zP©h
, 
˘æFœgs
);

5877 
›í_föished
:

5878 if–
rc
!=
SQLITE_OK
 ){

5879 
	`sqlôe3_‰ì
(
p
->
pUnu£d
);

5881  
rc
;

5882 
	}
}

5889 
	$unixDñëe
(

5890 
sqlôe3_vfs
 *
NŸU£d
,

5891 c⁄° *
zP©h
,

5892 
dúSync


5894 
rc
 = 
SQLITE_OK
;

5895 
	`UNUSED_PARAMETER
(
NŸU£d
);

5896 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_DELETE
);

5897 if–
	`osU∆ök
(
zP©h
)==(-1) ){

5898 if–
î∫o
==
ENOENT


5899 #i‡
OS_VXWORKS


5900 || 
	`osAc˚ss
(
zP©h
,0)!=0

5903 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5905 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_DELETE
, "u∆ök", 
zP©h
);

5907  
rc
;

5909 #i‚de‡
SQLITE_DISABLE_DIRSYNC


5910 if–(
dúSync
 & 1)!=0 ){

5911 
fd
;

5912 
rc
 = 
	`osO≥nDúe˘‹y
(
zP©h
, &
fd
);

5913 if–
rc
==
SQLITE_OK
 ){

5914 if–
	`fuŒ_fsync
(
fd
,0,0) ){

5915 
rc
 = 
	`unixLogEº‹
(
SQLITE_IOERR_DIR_FSYNC
, "fsync", 
zP©h
);

5917 
	`robu°_˛o£
(0, 
fd
, 
__LINE__
);

5919 
	`as£π
–
rc
==
SQLITE_CANTOPEN
 );

5920 
rc
 = 
SQLITE_OK
;

5924  
rc
;

5925 
	}
}

5937 
	$unixAc˚ss
(

5938 
sqlôe3_vfs
 *
NŸU£d
,

5939 c⁄° *
zP©h
,

5940 
Êags
,

5941 *
pResOut


5943 
	`UNUSED_PARAMETER
(
NŸU£d
);

5944 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_ACCESS
; );

5945 
	`as£π
–
pResOut
!=0 );

5949 
	`as£π
–
Êags
==
SQLITE_ACCESS_EXISTS
 || fœgs==
SQLITE_ACCESS_READWRITE
 );

5951 if–
Êags
==
SQLITE_ACCESS_EXISTS
 ){

5952 
°©
 
buf
;

5953 *
pResOut
 = (0==
	`osSèt
(
zP©h
, &
buf
Ë&& buf.
°_size
>0);

5955 *
pResOut
 = 
	`osAc˚ss
(
zP©h
, 
W_OK
|
R_OK
)==0;

5957  
SQLITE_OK
;

5958 
	}
}

5963 
	$mkFuŒP©h«me
(

5964 c⁄° *
zP©h
,

5965 *
zOut
,

5966 
nOut


5968 
nP©h
 = 
	`sqlôe3SåÀn30
(
zP©h
);

5969 
iOff
 = 0;

5970 if–
zP©h
[0]!='/' ){

5971 if–
	`osGëcwd
(
zOut
, 
nOut
-2)==0 ){

5972  
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "gëcwd", 
zP©h
);

5974 
iOff
 = 
	`sqlôe3SåÀn30
(
zOut
);

5975 
zOut
[
iOff
++] = '/';

5977 if–(
iOff
+
nP©h
+1)>
nOut
 ){

5980 
zOut
[
iOff
] = '\0';

5981  
SQLITE_CANTOPEN_BKPT
;

5983 
	`sqlôe3_¢¥ötf
(
nOut
-
iOff
, &
zOut
[iOff], "%s", 
zP©h
);

5984  
SQLITE_OK
;

5985 
	}
}

5996 
	$unixFuŒP©h«me
(

5997 
sqlôe3_vfs
 *
pVfs
,

5998 c⁄° *
zP©h
,

5999 
nOut
,

6000 *
zOut


6002 #i‡!
	`deföed
(
HAVE_READLINK
Ë|| !deföed(
HAVE_LSTAT
)

6003  
	`mkFuŒP©h«me
(
zP©h
, 
zOut
, 
nOut
);

6005 
rc
 = 
SQLITE_OK
;

6006 
nByã
;

6007 
nLök
 = 1;

6008 c⁄° *
zIn
 = 
zP©h
;

6009 *
zDñ
 = 0;

6011 
	`as£π
–
pVfs
->
mxP©h«me
==
MAX_PATHNAME
 );

6012 
	`UNUSED_PARAMETER
(
pVfs
);

6019 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

6025 
bLök
 = 0;

6026 
°©
 
buf
;

6027 if–
	`osL°©
(
zIn
, &
buf
)!=0 ){

6028 if–
î∫o
!=
ENOENT
 ){

6029 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "l°©", 
zIn
);

6032 
bLök
 = 
	`S_ISLNK
(
buf
.
°_mode
);

6035 if–
bLök
 ){

6036 if–
zDñ
==0 ){

6037 
zDñ
 = 
	`sqlôe3_mÆloc
(
nOut
);

6038 if–
zDñ
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

6039 }if–++
nLök
>
SQLITE_MAX_SYMLINKS
 ){

6040 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

6043 if–
rc
==
SQLITE_OK
 ){

6044 
nByã
 = 
	`osRódlök
(
zIn
, 
zDñ
, 
nOut
-1);

6045 if–
nByã
<0 ){

6046 
rc
 = 
	`unixLogEº‹
(
SQLITE_CANTOPEN_BKPT
, "ªadlök", 
zIn
);

6048 if–
zDñ
[0]!='/' ){

6049 
n
;

6050 
n
 = 
	`sqlôe3SåÀn30
(
zIn
);Ç>0 && zIn[n-1]!='/';Ç--);

6051 if–
nByã
+
n
+1>
nOut
 ){

6052 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

6054 
	`memmove
(&
zDñ
[
n
], zDñ, 
nByã
+1);

6055 
	`mem˝y
(
zDñ
, 
zIn
, 
n
);

6056 
nByã
 +
n
;

6059 
zDñ
[
nByã
] = '\0';

6063 
zIn
 = 
zDñ
;

6066 
	`as£π
–
rc
!=
SQLITE_OK
 || 
zIn
!=
zOut
 || zIn[0]=='/' );

6067 if–
rc
==
SQLITE_OK
 && 
zIn
!=
zOut
 ){

6068 
rc
 = 
	`mkFuŒP©h«me
(
zIn
, 
zOut
, 
nOut
);

6070 if–
bLök
==0 ) ;

6071 
zIn
 = 
zOut
;

6072 } 
rc
==
SQLITE_OK
 );

6074 
	`sqlôe3_‰ì
(
zDñ
);

6075  
rc
;

6077 
	}
}

6080 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


6085 
	~<dlf˙.h
>

6086 *
	$unixDlO≥n
(
sqlôe3_vfs
 *
NŸU£d
, c⁄° *
zFûíame
){

6087 
	`UNUSED_PARAMETER
(
NŸU£d
);

6088  
	`dl›í
(
zFûíame
, 
RTLD_NOW
 | 
RTLD_GLOBAL
);

6089 
	}
}

6098 
	$unixDlEº‹
(
sqlôe3_vfs
 *
NŸU£d
, 
nBuf
, *
zBufOut
){

6099 c⁄° *
zEº
;

6100 
	`UNUSED_PARAMETER
(
NŸU£d
);

6101 
	`unixE¡îMuãx
();

6102 
zEº
 = 
	`dÀº‹
();

6103 if–
zEº
 ){

6104 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBufOut
, "%s", 
zEº
);

6106 
	`unixLóveMuãx
();

6107 
	}
}

6108 (*
	$unixDlSym
(
sqlôe3_vfs
 *
NŸU£d
, *
p
, c⁄° *
zSym
))(){

6126 (*(*
x
)(*,const *))();

6127 
	`UNUSED_PARAMETER
(
NŸU£d
);

6128 
x
 = ((*(*)(*,c⁄° *))())
dlsym
;

6129  (*
x
)(
p
, 
zSym
);

6130 
	}
}

6131 
	$unixDlClo£
(
sqlôe3_vfs
 *
NŸU£d
, *
pH™dÀ
){

6132 
	`UNUSED_PARAMETER
(
NŸU£d
);

6133 
	`dl˛o£
(
pH™dÀ
);

6134 
	}
}

6136 
	#unixDlO≥n
 0

	)

6137 
	#unixDlEº‹
 0

	)

6138 
	#unixDlSym
 0

	)

6139 
	#unixDlClo£
 0

	)

6145 
	$unixR™dom√ss
(
sqlôe3_vfs
 *
NŸU£d
, 
nBuf
, *
zBuf
){

6146 
	`UNUSED_PARAMETER
(
NŸU£d
);

6147 
	`as£π
((
size_t
)
nBuf
>=((
time_t
)+()));

6161 
	`mem£t
(
zBuf
, 0, 
nBuf
);

6162 
øndom√ssPid
 = 
	`osGëpid
(0);

6163 #i‡!
	`deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_OMIT_RANDOMNESS
)

6165 
fd
, 
gŸ
;

6166 
fd
 = 
	`robu°_›í
("/dev/uøndom", 
O_RDONLY
, 0);

6167 if–
fd
<0 ){

6168 
time_t
 
t
;

6169 
	`time
(&
t
);

6170 
	`mem˝y
(
zBuf
, &
t
, (t));

6171 
	`mem˝y
(&
zBuf
[(
t
)], &
øndom√ssPid
, (randomnessPid));

6172 
	`as£π
–(
t
)+(
øndom√ssPid
)<=(
size_t
)
nBuf
 );

6173 
nBuf
 = (
t
Ë+ (
øndom√ssPid
);

6175 do{ 
gŸ
 = 
	`osRód
(
fd
, 
zBuf
, 
nBuf
); } gŸ<0 && 
î∫o
==
EINTR
 );

6176 
	`robu°_˛o£
(0, 
fd
, 
__LINE__
);

6180  
nBuf
;

6181 
	}
}

6192 
	$unixSÀï
(
sqlôe3_vfs
 *
NŸU£d
, 
mi¸o£c⁄ds
){

6193 #i‡
OS_VXWORKS


6194 
time•ec
 
•
;

6196 
•
.
tv_£c
 = 
mi¸o£c⁄ds
 / 1000000;

6197 
•
.
tv_n£c
 = (
mi¸o£c⁄ds
 % 1000000) * 1000;

6198 
	`«no¶ìp
(&
•
, 
NULL
);

6199 
	`UNUSED_PARAMETER
(
NŸU£d
);

6200  
mi¸o£c⁄ds
;

6201 #ñi‡
	`deföed
(
HAVE_USLEEP
) && HAVE_USLEEP

6202 
	`u¶ìp
(
mi¸o£c⁄ds
);

6203 
	`UNUSED_PARAMETER
(
NŸU£d
);

6204  
mi¸o£c⁄ds
;

6206 
£c⁄ds
 = (
mi¸o£c⁄ds
+999999)/1000000;

6207 
	`¶ìp
(
£c⁄ds
);

6208 
	`UNUSED_PARAMETER
(
NŸU£d
);

6209  
£c⁄ds
*1000000;

6211 
	}
}

6218 #ifde‡
SQLITE_TEST


6219 
	gsqlôe3_cuºít_time
 = 0;

6232 
	$unixCuºítTimeI¡64
(
sqlôe3_vfs
 *
NŸU£d
, 
sqlôe3_öt64
 *
piNow
){

6233 c⁄° 
sqlôe3_öt64
 
unixEpoch
 = 24405875*(sqlite3_int64)8640000;

6234 
rc
 = 
SQLITE_OK
;

6235 #i‡
	`deföed
(
NO_GETTOD
)

6236 
time_t
 
t
;

6237 
	`time
(&
t
);

6238 *
piNow
 = ((
sqlôe3_öt64
)
t
)*1000 + 
unixEpoch
;

6239 #ñi‡
OS_VXWORKS


6240 
time•ec
 
sNow
;

6241 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
sNow
);

6242 *
piNow
 = 
unixEpoch
 + 1000*(
sqlôe3_öt64
)
sNow
.
tv_£c
 + sNow.
tv_n£c
/1000000;

6244 
timevÆ
 
sNow
;

6245 ()
	`gëtimeofday
(&
sNow
, 0);

6246 *
piNow
 = 
unixEpoch
 + 1000*(
sqlôe3_öt64
)
sNow
.
tv_£c
 + sNow.
tv_u£c
/1000;

6249 #ifde‡
SQLITE_TEST


6250 if–
sqlôe3_cuºít_time
 ){

6251 *
piNow
 = 1000*(
sqlôe3_öt64
)
sqlôe3_cuºít_time
 + 
unixEpoch
;

6254 
	`UNUSED_PARAMETER
(
NŸU£d
);

6255  
rc
;

6256 
	}
}

6258 #i‚de‡
SQLITE_OMIT_DEPRECATED


6264 
	$unixCuºítTime
(
sqlôe3_vfs
 *
NŸU£d
, *
¥Now
){

6265 
sqlôe3_öt64
 
i
 = 0;

6266 
rc
;

6267 
	`UNUSED_PARAMETER
(
NŸU£d
);

6268 
rc
 = 
	`unixCuºítTimeI¡64
(0, &
i
);

6269 *
¥Now
 = 
i
/86400000.0;

6270  
rc
;

6271 
	}
}

6273 
	#unixCuºítTime
 0

	)

6282 
	$unixGëLa°Eº‹
(
sqlôe3_vfs
 *
NŸU£d
, 
NŸU£d2
, *
NŸU£d3
){

6283 
	`UNUSED_PARAMETER
(
NŸU£d
);

6284 
	`UNUSED_PARAMETER
(
NŸU£d2
);

6285 
	`UNUSED_PARAMETER
(
NŸU£d3
);

6286  
î∫o
;

6287 
	}
}

6447 #i‡
deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


6453 
¥oxyLockögC⁄ãxt
 
	t¥oxyLockögC⁄ãxt
;

6454 
	s¥oxyLockögC⁄ãxt
 {

6455 
unixFûe
 *
	mc⁄chFûe
;

6456 *
	mc⁄chFûeP©h
;

6457 
unixFûe
 *
	mlockProxy
;

6458 *
	mlockProxyP©h
;

6459 *
	mdbP©h
;

6460 
	mc⁄chHñd
;

6461 
	mnFaûs
;

6462 *
	mﬁdLockögC⁄ãxt
;

6463 
sqlôe3_io_mëhods
 c⁄° *
	mpOldMëhod
;

6471 
	$¥oxyGëLockP©h
(c⁄° *
dbP©h
, *
lP©h
, 
size_t
 
maxLí
){

6472 
Àn
;

6473 
dbLí
;

6474 
i
;

6476 #ifde‡
LOCKPROXYDIR


6477 
Àn
 = 
	`°æ˝y
(
lP©h
, 
LOCKPROXYDIR
, 
maxLí
);

6479 #ifde‡
_CS_DARWIN_USER_TEMP_DIR


6481 if–!
	`c⁄f°r
(
_CS_DARWIN_USER_TEMP_DIR
, 
lP©h
, 
maxLí
) ){

6482 
	`OSTRACE
(("GETLOCKPATH failed %sÉrrno=%dÖid=%d\n",

6483 
lP©h
, 
î∫o
, 
	`osGëpid
(0)));

6484  
SQLITE_IOERR_LOCK
;

6486 
Àn
 = 
	`°æˇt
(
lP©h
, "sqlôïlocks", 
maxLí
);

6489 
Àn
 = 
	`°æ˝y
(
lP©h
, "/tmp/", 
maxLí
);

6493 if–
lP©h
[
Àn
-1]!='/' ){

6494 
Àn
 = 
	`°æˇt
(
lP©h
, "/", 
maxLí
);

6498 
dbLí
 = ()
	`°æí
(
dbP©h
);

6499  
i
=0; i<
dbLí
 && (i+
Àn
+7)<()
maxLí
; i++){

6500 
c
 = 
dbP©h
[
i
];

6501 
lP©h
[
i
+
Àn
] = (
c
=='/')?'_':c;

6503 
lP©h
[
i
+
Àn
]='\0';

6504 
	`°æˇt
(
lP©h
, ":auto:", 
maxLí
);

6505 
	`OSTRACE
(("GETLOCKPATHÖroxyÜockÖ©h=%†pid=%d\n", 
lP©h
, 
	`osGëpid
(0)));

6506  
SQLITE_OK
;

6507 
	}
}

6512 
	$¥oxyCª©eLockP©h
(c⁄° *
lockP©h
){

6513 
i
, 
Àn
;

6514 
buf
[
MAXPATHLEN
];

6515 
°¨t
 = 0;

6517 
	`as£π
(
lockP©h
!=
NULL
);

6519 
Àn
 = ()
	`°æí
(
lockP©h
);

6520 
buf
[0] = 
lockP©h
[0];

6521  
i
=1; i<
Àn
; i++ ){

6522 if–
lockP©h
[
i
] ='/' && (ò- 
°¨t
 > 0) ){

6524 if–
i
-
°¨t
>2 || (i-°¨t==1 && 
buf
[start] != '.' && buf[start] != '/')

6525 || (
i
-
°¨t
==2 && 
buf
[start] != '.' && buf[start+1] != '.') ){

6526 
buf
[
i
]='\0';

6527 if–
	`osMkdú
(
buf
, 
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS
) ){

6528 
îr
=
î∫o
;

6529 if–
îr
!=
EEXIST
 ) {

6530 
	`OSTRACE
(("CREATELOCKPATH FAILED creating %s, "

6532 
buf
, 
	`°ªº‹
(
îr
), 
lockP©h
, 
	`osGëpid
(0)));

6533  
îr
;

6537 
°¨t
=
i
+1;

6539 
buf
[
i
] = 
lockP©h
[i];

6541 
	`OSTRACE
(("CREATELOCKPATHÖroxyÜockÖ©h=%†pid=%d\n",
lockP©h
,
	`osGëpid
(0)));

6543 
	}
}

6552 
	$¥oxyCª©eUnixFûe
(

6553 c⁄° *
∑th
,

6554 
unixFûe
 **
µFûe
,

6555 
i¶ockfûe


6557 
fd
 = -1;

6558 
unixFûe
 *
pNew
;

6559 
rc
 = 
SQLITE_OK
;

6560 
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

6561 
sqlôe3_vfs
 
dummyVfs
;

6562 
ãºno
 = 0;

6563 
UnixUnu£dFd
 *
pUnu£d
 = 
NULL
;

6571 
pUnu£d
 = 
	`födReußbÀFd
(
∑th
, 
›íFœgs
);

6572 if–
pUnu£d
 ){

6573 
fd
 = 
pUnu£d
->fd;

6575 
pUnu£d
 = 
	`sqlôe3_mÆloc64
((*pUnused));

6576 if–!
pUnu£d
 ){

6577  
SQLITE_NOMEM_BKPT
;

6580 if–
fd
<0 ){

6581 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6582 
ãºno
 = 
î∫o
;

6583 if–
fd
<0 && 
î∫o
==
ENOENT
 && 
i¶ockfûe
 ){

6584 if–
	`¥oxyCª©eLockP©h
(
∑th
Ë=
SQLITE_OK
 ){

6585 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6589 if–
fd
<0 ){

6590 
›íFœgs
 = 
O_RDONLY
;

6591 
fd
 = 
	`robu°_›í
(
∑th
, 
›íFœgs
, 0);

6592 
ãºno
 = 
î∫o
;

6594 if–
fd
<0 ){

6595 if–
i¶ockfûe
 ){

6596  
SQLITE_BUSY
;

6598 
ãºno
) {

6599 
EACCES
:

6600  
SQLITE_PERM
;

6601 
EIO
:

6602  
SQLITE_IOERR_LOCK
;

6604  
SQLITE_CANTOPEN_BKPT
;

6608 
pNew
 = (
unixFûe
 *)
	`sqlôe3_mÆloc64
((*pNew));

6609 if–
pNew
==
NULL
 ){

6610 
rc
 = 
SQLITE_NOMEM_BKPT
;

6611 
íd_¸óã_¥oxy
;

6613 
	`mem£t
(
pNew
, 0, (
unixFûe
));

6614 
pNew
->
›íFœgs
 = openFlags;

6615 
	`mem£t
(&
dummyVfs
, 0, (dummyVfs));

6616 
dummyVfs
.
pAµD©a
 = (*)&
autﬁockIoFödî
;

6617 
dummyVfs
.
zName
 = "dummy";

6618 
pUnu£d
->
fd
 = fd;

6619 
pUnu£d
->
Êags
 = 
›íFœgs
;

6620 
pNew
->
pUnu£d
 =ÖUnused;

6622 
rc
 = 
	`fûlInUnixFûe
(&
dummyVfs
, 
fd
, (
sqlôe3_fûe
*)
pNew
, 
∑th
, 0);

6623 if–
rc
==
SQLITE_OK
 ){

6624 *
µFûe
 = 
pNew
;

6625  
SQLITE_OK
;

6627 
íd_¸óã_¥oxy
:

6628 
	`robu°_˛o£
(
pNew
, 
fd
, 
__LINE__
);

6629 
	`sqlôe3_‰ì
(
pNew
);

6630 
	`sqlôe3_‰ì
(
pUnu£d
);

6631  
rc
;

6632 
	}
}

6634 #ifde‡
SQLITE_TEST


6636 
	gsqlôe3_ho°id_num
 = 0;

6639 
	#PROXY_HOSTIDLEN
 16

	)

6641 #ifde‡
HAVE_GETHOSTUUID


6643 
gëho°uuid
(
uuid_t
 
id
, c⁄° 
time•ec
 *
waô
);

6649 
	$¥oxyGëHo°ID
(*
pHo°ID
, *
pEº‹
){

6650 
	`as£π
(
PROXY_HOSTIDLEN
 =(
uuid_t
));

6651 
	`mem£t
(
pHo°ID
, 0, 
PROXY_HOSTIDLEN
);

6652 #ifde‡
HAVE_GETHOSTUUID


6654 
time•ec
 
timeout
 = {1, 0};

6655 if–
	`gëho°uuid
(
pHo°ID
, &
timeout
) ){

6656 
îr
 = 
î∫o
;

6657 if–
pEº‹
 ){

6658 *
pEº‹
 = 
îr
;

6660  
SQLITE_IOERR
;

6664 
	`UNUSED_PARAMETER
(
pEº‹
);

6666 #ifde‡
SQLITE_TEST


6668 if–
sqlôe3_ho°id_num
 != 0){

6669 
pHo°ID
[0] = ()’Ho°ID[0] + ()(
sqlôe3_ho°id_num
 & 0xFF));

6673  
SQLITE_OK
;

6674 
	}
}

6678 
	#PROXY_CONCHVERSION
 2

	)

6679 
	#PROXY_HEADERLEN
 1

	)

6680 
	#PROXY_PATHINDEX
 (
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
)

	)

6681 
	#PROXY_MAXCONCHLEN
 (
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
+
MAXPATHLEN
)

	)

6689 
	$¥oxyBªakC⁄chLock
(
unixFûe
 *
pFûe
, 
uuid_t
 
myHo°ID
){

6690 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6691 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6692 
tP©h
[
MAXPATHLEN
];

6693 
buf
[
PROXY_MAXCONCHLEN
];

6694 *
cP©h
 = 
pCtx
->
c⁄chFûeP©h
;

6695 
size_t
 
ªadLí
 = 0;

6696 
size_t
 
∑thLí
 = 0;

6697 
îrmsg
[64] = "";

6698 
fd
 = -1;

6699 
rc
 = -1;

6700 
	`UNUSED_PARAMETER
(
myHo°ID
);

6703 
∑thLí
 = 
	`°æ˝y
(
tP©h
, 
cP©h
, 
MAXPATHLEN
);

6704 if–
∑thLí
>
MAXPATHLEN
 ||ÖathLen<6 ||

6705 (
	`°æ˝y
(&
tP©h
[
∑thLí
-5], "break", 6) != 5) ){

6706 
	`sqlôe3_¢¥ötf
((
îrmsg
),îrmsg,"∑thÉº‹ (À¿%d)",()
∑thLí
);

6707 
íd_bªaklock
;

6710 
ªadLí
 = 
	`osPªad
(
c⁄chFûe
->
h
, 
buf
, 
PROXY_MAXCONCHLEN
, 0);

6711 if–
ªadLí
<
PROXY_PATHINDEX
 ){

6712 
	`sqlôe3_¢¥ötf
((
îrmsg
),îrmsg,"ªadÉº‹ (À¿%d)",()
ªadLí
);

6713 
íd_bªaklock
;

6716 
fd
 = 
	`robu°_›í
(
tP©h
, (
O_RDWR
|
O_CREAT
|
O_EXCL
), 0);

6717 if–
fd
<0 ){

6718 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "¸óã faûed (%d)", 
î∫o
);

6719 
íd_bªaklock
;

6721 if–
	`osPwrôe
(
fd
, 
buf
, 
ªadLí
, 0Ë!(
ssize_t
)readLen ){

6722 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "wrôêÁûed (%d)", 
î∫o
);

6723 
íd_bªaklock
;

6725 if–
	`ª«me
(
tP©h
, 
cP©h
) ){

6726 
	`sqlôe3_¢¥ötf
((
îrmsg
),Éºmsg, "ª«mêÁûed (%d)", 
î∫o
);

6727 
íd_bªaklock
;

6729 
rc
 = 0;

6730 
	`Ârötf
(
°dîr
, "brokê°Æêlock o¿%s\n", 
cP©h
);

6731 
	`robu°_˛o£
(
pFûe
, 
c⁄chFûe
->
h
, 
__LINE__
);

6732 
c⁄chFûe
->
h
 = 
fd
;

6733 
c⁄chFûe
->
›íFœgs
 = 
O_RDWR
 | 
O_CREAT
;

6735 
íd_bªaklock
:

6736 if–
rc
 ){

6737 if–
fd
>=0 ){

6738 
	`osU∆ök
(
tP©h
);

6739 
	`robu°_˛o£
(
pFûe
, 
fd
, 
__LINE__
);

6741 
	`Ârötf
(
°dîr
, "ÁûedÅÿbªak sèÀÜock o¿%s, %s\n", 
cP©h
, 
îrmsg
);

6743  
rc
;

6744 
	}
}

6749 
	$¥oxyC⁄chLock
(
unixFûe
 *
pFûe
, 
uuid_t
 
myHo°ID
, 
lockTy≥
){

6750 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6751 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6752 
rc
 = 
SQLITE_OK
;

6753 
nTrõs
 = 0;

6754 
time•ec
 
c⁄chModTime
;

6756 
	`mem£t
(&
c⁄chModTime
, 0, (conchModTime));

6758 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
lockTy≥
);

6759 
nTrõs
 ++;

6760 if–
rc
==
SQLITE_BUSY
 ){

6767 
°©
 
buf
;

6768 if–
	`osF°©
(
c⁄chFûe
->
h
, &
buf
) ){

6769 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

6770  
SQLITE_IOERR_LOCK
;

6773 if–
nTrõs
==1 ){

6774 
c⁄chModTime
 = 
buf
.
°_mtime•ec
;

6775 
	`u¶ìp
(500000);

6779 
	`as£π
–
nTrõs
>1 );

6780 if–
c⁄chModTime
.
tv_£c
 !
buf
.
°_mtime•ec
.tv_sec ||

6781 
c⁄chModTime
.
tv_n£c
 !
buf
.
°_mtime•ec
.tv_nsec ){

6782  
SQLITE_BUSY
;

6785 if–
nTrõs
==2 ){

6786 
tBuf
[
PROXY_MAXCONCHLEN
];

6787 
Àn
 = 
	`osPªad
(
c⁄chFûe
->
h
, 
tBuf
, 
PROXY_MAXCONCHLEN
, 0);

6788 if–
Àn
<0 ){

6789 
	`°‹eLa°Eºno
(
pFûe
, 
î∫o
);

6790  
SQLITE_IOERR_LOCK
;

6792 if–
Àn
>
PROXY_PATHINDEX
 && 
tBuf
[0]==()
PROXY_CONCHVERSION
){

6794 if–0!=
	`memcmp
(&
tBuf
[
PROXY_HEADERLEN
], 
myHo°ID
, 
PROXY_HOSTIDLEN
) ){

6795  
SQLITE_BUSY
;

6799  
SQLITE_BUSY
;

6801 
	`u¶ìp
(10000000);

6805 
	`as£π
–
nTrõs
==3 );

6806 if–0==
	`¥oxyBªakC⁄chLock
(
pFûe
, 
myHo°ID
) ){

6807 
rc
 = 
SQLITE_OK
;

6808 if–
lockTy≥
==
EXCLUSIVE_LOCK
 ){

6809 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
SHARED_LOCK
);

6811 if–!
rc
 ){

6812 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*)c⁄chFûe, 
lockTy≥
);

6816 }  
rc
==
SQLITE_BUSY
 && 
nTrõs
<3 );

6818  
rc
;

6819 
	}
}

6827 
	$¥oxyTakeC⁄ch
(
unixFûe
 *
pFûe
){

6828 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

6830 if–
pCtx
->
c⁄chHñd
!=0 ){

6831  
SQLITE_OK
;

6833 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

6834 
uuid_t
 
myHo°ID
;

6835 
pEº‹
 = 0;

6836 
ªadBuf
[
PROXY_MAXCONCHLEN
];

6837 
lockP©h
[
MAXPATHLEN
];

6838 *
ãmpLockP©h
 = 
NULL
;

6839 
rc
 = 
SQLITE_OK
;

6840 
¸óãC⁄ch
 = 0;

6841 
ho°IdM©ch
 = 0;

6842 
ªadLí
 = 0;

6843 
åyOldLockP©h
 = 0;

6844 
f‹˚NewLockP©h
 = 0;

6846 
	`OSTRACE
(("TAKECONCH %d f‹ %†pid=%d\n", 
c⁄chFûe
->
h
,

6847 (
pCtx
->
lockProxyP©h
 ?ÖCtx->lockProxyPath : ":auto:"),

6848 
	`osGëpid
(0)));

6850 
rc
 = 
	`¥oxyGëHo°ID
(
myHo°ID
, &
pEº‹
);

6851 if–(
rc
&0xff)==
SQLITE_IOERR
 ){

6852 
	`°‹eLa°Eºno
(
pFûe
, 
pEº‹
);

6853 
íd_èkec⁄ch
;

6855 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
SHARED_LOCK
);

6856 if–
rc
!=
SQLITE_OK
 ){

6857 
íd_èkec⁄ch
;

6860 
ªadLí
 = 
	`£ekAndRód
((
unixFûe
*)
c⁄chFûe
, 0, 
ªadBuf
, 
PROXY_MAXCONCHLEN
);

6861 if–
ªadLí
<0 ){

6863 
	`°‹eLa°Eºno
(
pFûe
, 
c⁄chFûe
->
œ°Eºno
);

6864 
rc
 = 
SQLITE_IOERR_READ
;

6865 
íd_èkec⁄ch
;

6866 }if–
ªadLí
<=(
PROXY_HEADERLEN
+
PROXY_HOSTIDLEN
) ||

6867 
ªadBuf
[0]!=()
PROXY_CONCHVERSION
 ){

6871 
¸óãC⁄ch
 = 1;

6879 if–!
¸óãC⁄ch
 && !
f‹˚NewLockP©h
 ){

6880 
ho°IdM©ch
 = !
	`memcmp
(&
ªadBuf
[
PROXY_HEADERLEN
], 
myHo°ID
,

6881 
PROXY_HOSTIDLEN
);

6883 if–!
pCtx
->
lockProxyP©h
 ){

6887 if–
ho°IdM©ch
 ){

6888 
size_t
 
∑thLí
 = (
ªadLí
 - 
PROXY_PATHINDEX
);

6890 if–
∑thLí
>=
MAXPATHLEN
 ){

6891 
∑thLí
=
MAXPATHLEN
-1;

6893 
	`mem˝y
(
lockP©h
, &
ªadBuf
[
PROXY_PATHINDEX
], 
∑thLí
);

6894 
lockP©h
[
∑thLí
] = 0;

6895 
ãmpLockP©h
 = 
lockP©h
;

6896 
åyOldLockP©h
 = 1;

6898 
íd_èkec⁄ch
;

6900 }if–
ho°IdM©ch


6901 && !
	`°∫cmp
(
pCtx
->
lockProxyP©h
, &
ªadBuf
[
PROXY_PATHINDEX
],

6902 
ªadLí
-
PROXY_PATHINDEX
)

6905 
íd_èkec⁄ch
;

6910 if–(
c⁄chFûe
->
›íFœgs
&
O_RDWR
) == 0 ){

6911 
rc
 = 
SQLITE_BUSY
;

6912 
íd_èkec⁄ch
;

6916 if–!
pCtx
->
lockProxyP©h
 ){

6917 
	`¥oxyGëLockP©h
(
pCtx
->
dbP©h
, 
lockP©h
, 
MAXPATHLEN
);

6918 
ãmpLockP©h
 = 
lockP©h
;

6926 
	`futimes
(
c⁄chFûe
->
h
, 
NULL
);

6927 if–
ho°IdM©ch
 && !
¸óãC⁄ch
 ){

6928 if–
c⁄chFûe
->
pInode
 && c⁄chFûe->pInode->
nSh¨ed
>1 ){

6931 
rc
 = 
SQLITE_BUSY
;

6933 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
EXCLUSIVE_LOCK
);

6936 
rc
 = 
	`¥oxyC⁄chLock
(
pFûe
, 
myHo°ID
, 
EXCLUSIVE_LOCK
);

6938 if–
rc
==
SQLITE_OK
 ){

6939 
wrôeBuf„r
[
PROXY_MAXCONCHLEN
];

6940 
wrôeSize
 = 0;

6942 
wrôeBuf„r
[0] = ()
PROXY_CONCHVERSION
;

6943 
	`mem˝y
(&
wrôeBuf„r
[
PROXY_HEADERLEN
], 
myHo°ID
, 
PROXY_HOSTIDLEN
);

6944 if–
pCtx
->
lockProxyP©h
!=
NULL
 ){

6945 
	`°æ˝y
(&
wrôeBuf„r
[
PROXY_PATHINDEX
], 
pCtx
->
lockProxyP©h
,

6946 
MAXPATHLEN
);

6948 
	`°æ˝y
(&
wrôeBuf„r
[
PROXY_PATHINDEX
], 
ãmpLockP©h
, 
MAXPATHLEN
);

6950 
wrôeSize
 = 
PROXY_PATHINDEX
 + 
	`°æí
(&
wrôeBuf„r
[PROXY_PATHINDEX]);

6951 
	`robu°_·runˇã
(
c⁄chFûe
->
h
, 
wrôeSize
);

6952 
rc
 = 
	`unixWrôe
((
sqlôe3_fûe
 *)
c⁄chFûe
, 
wrôeBuf„r
, 
wrôeSize
, 0);

6953 
	`fuŒ_fsync
(
c⁄chFûe
->
h
,0,0);

6957 if–
rc
==
SQLITE_OK
 && 
¸óãC⁄ch
 ){

6958 
°©
 
buf
;

6959 
îr
 = 
	`osF°©
(
pFûe
->
h
, &
buf
);

6960 if–
îr
==0 ){

6961 
mode_t
 
cmode
 = 
buf
.
°_mode
&(
S_IRUSR
|
S_IWUSR
 | 
S_IRGRP
|
S_IWGRP
 |

6962 
S_IROTH
|
S_IWOTH
);

6964 #i‚de‡
SQLITE_PROXY_DEBUG


6965 
	`osFchmod
(
c⁄chFûe
->
h
, 
cmode
);

6968 
rc
 = 
	`osFchmod
(
c⁄chFûe
->
h
, 
cmode
);

6969 } 
rc
==(-1Ë&& 
î∫o
==
EINTR
 );

6970 if–
rc
!=0 ){

6971 
code
 = 
î∫o
;

6972 
	`Ârötf
(
°dîr
, "fchmod %o FAILED with %d %s\n",

6973 
cmode
, 
code
, 
	`°ªº‹
(code));

6975 
	`Ârötf
(
°dîr
, "fchmod %ÿSUCCEDED\n",
cmode
);

6978 
code
 = 
î∫o
;

6979 
	`Ârötf
(
°dîr
, "STAT FAILED[%d] with %d %s\n",

6980 
îr
, 
code
, 
	`°ªº‹
(code));

6985 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
SHARED_LOCK
);

6987 
íd_èkec⁄ch
:

6988 
	`OSTRACE
(("TRANSPROXY: CLOSE %d\n", 
pFûe
->
h
));

6989 if–
rc
==
SQLITE_OK
 && 
pFûe
->
›íFœgs
 ){

6990 
fd
;

6991 if–
pFûe
->
h
>=0 ){

6992 
	`robu°_˛o£
(
pFûe
,ÖFûe->
h
, 
__LINE__
);

6994 
pFûe
->
h
 = -1;

6995 
fd
 = 
	`robu°_›í
(
pCtx
->
dbP©h
, 
pFûe
->
›íFœgs
, 0);

6996 
	`OSTRACE
(("TRANSPROXY: OPEN %d\n", 
fd
));

6997 if–
fd
>=0 ){

6998 
pFûe
->
h
 = 
fd
;

7000 
rc
=
SQLITE_CANTOPEN_BKPT
;

7004 if–
rc
==
SQLITE_OK
 && !
pCtx
->
lockProxy
 ){

7005 *
∑th
 = 
ãmpLockP©h
 ?ÅempLockP©h : 
pCtx
->
lockProxyP©h
;

7006 
rc
 = 
	`¥oxyCª©eUnixFûe
(
∑th
, &
pCtx
->
lockProxy
, 1);

7007 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_NOMEM
 && 
åyOldLockP©h
 ){

7011 
f‹˚NewLockP©h
 = 1;

7012 
åyOldLockP©h
 = 0;

7016 if–
rc
==
SQLITE_OK
 ){

7020 if–
ãmpLockP©h
 ){

7021 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
ãmpLockP©h
);

7022 if–!
pCtx
->
lockProxyP©h
 ){

7023 
rc
 = 
SQLITE_NOMEM_BKPT
;

7027 if–
rc
==
SQLITE_OK
 ){

7028 
pCtx
->
c⁄chHñd
 = 1;

7030 if–
pCtx
->
lockProxy
->
pMëhod
 =&
aÂIoMëhods
 ){

7031 
aÂLockögC⁄ãxt
 *
aÂCtx
;

7032 
aÂCtx
 = (
aÂLockögC⁄ãxt
 *)
pCtx
->
lockProxy
->
lockögC⁄ãxt
;

7033 
aÂCtx
->
dbP©h
 = 
pCtx
->
lockProxyP©h
;

7036 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
NO_LOCK
);

7038 
	`OSTRACE
(("TAKECONCH %d %s\n", 
c⁄chFûe
->
h
,

7039 
rc
==
SQLITE_OK
?"ok":"failed"));

7040  
rc
;

7044 
	}
}

7049 
	$¥oxyRñó£C⁄ch
(
unixFûe
 *
pFûe
){

7050 
rc
 = 
SQLITE_OK
;

7051 
¥oxyLockögC⁄ãxt
 *
pCtx
;

7052 
unixFûe
 *
c⁄chFûe
;

7054 
pCtx
 = (
¥oxyLockögC⁄ãxt
 *)
pFûe
->
lockögC⁄ãxt
;

7055 
c⁄chFûe
 = 
pCtx
->conchFile;

7056 
	`OSTRACE
(("RELEASECONCH %d f‹ %†pid=%d\n", 
c⁄chFûe
->
h
,

7057 (
pCtx
->
lockProxyP©h
 ?ÖCtx->lockProxyPath : ":auto:"),

7058 
	`osGëpid
(0)));

7059 if–
pCtx
->
c⁄chHñd
>0 ){

7060 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*)c⁄chFûe, 
NO_LOCK
);

7062 
pCtx
->
c⁄chHñd
 = 0;

7063 
	`OSTRACE
(("RELEASECONCH %d %s\n", 
c⁄chFûe
->
h
,

7064 (
rc
==
SQLITE_OK
 ? "ok" : "failed")));

7065  
rc
;

7066 
	}
}

7079 
	$¥oxyCª©eC⁄chP©h«me
(*
dbP©h
, **
pC⁄chP©h
){

7080 
i
;

7081 
Àn
 = ()
	`°æí
(
dbP©h
);

7082 *
c⁄chP©h
;

7086 *
pC⁄chP©h
 = 
c⁄chP©h
 = (*)
	`sqlôe3_mÆloc64
(
Àn
 + 8);

7087 if–
c⁄chP©h
==0 ){

7088  
SQLITE_NOMEM_BKPT
;

7090 
	`mem˝y
(
c⁄chP©h
, 
dbP©h
, 
Àn
+1);

7093  
i
=(
Àn
-1); i>=0; i-- ){

7094 if–
c⁄chP©h
[
i
]=='/' ){

7095 
i
++;

7099 
c⁄chP©h
[
i
]='.';

7100  
i
<
Àn
 ){

7101 
c⁄chP©h
[
i
+1]=
dbP©h
[i];

7102 
i
++;

7106 
	`mem˝y
(&
c⁄chP©h
[
i
+1], "-conch", 7);

7107 
	`as£π
–()
	`°æí
(
c⁄chP©h
Ë=
Àn
+7 );

7109  
SQLITE_OK
;

7110 
	}
}

7116 
	$swôchLockProxyP©h
(
unixFûe
 *
pFûe
, c⁄° *
∑th
) {

7117 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxt*)
pFûe
->
lockögC⁄ãxt
;

7118 *
ﬁdP©h
 = 
pCtx
->
lockProxyP©h
;

7119 
rc
 = 
SQLITE_OK
;

7121 if–
pFûe
->
eFûeLock
!=
NO_LOCK
 ){

7122  
SQLITE_BUSY
;

7126 if–!
∑th
 ||Ö©h[0]=='\0' || !
	`°rcmp
(path, ":auto:") ||

7127 (
ﬁdP©h
 && !
	`°∫cmp
(ﬁdP©h, 
∑th
, 
MAXPATHLEN
)) ){

7128  
SQLITE_OK
;

7130 
unixFûe
 *
lockProxy
 = 
pCtx
->lockProxy;

7131 
pCtx
->
lockProxy
=
NULL
;

7132 
pCtx
->
c⁄chHñd
 = 0;

7133 if–
lockProxy
!=
NULL
 ){

7134 
rc
=
lockProxy
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
 *)lockProxy);

7135 if–
rc
 ) Ñc;

7136 
	`sqlôe3_‰ì
(
lockProxy
);

7138 
	`sqlôe3_‰ì
(
ﬁdP©h
);

7139 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
∑th
);

7142  
rc
;

7143 
	}
}

7152 
	$¥oxyGëDbP©hF‹UnixFûe
(
unixFûe
 *
pFûe
, *
dbP©h
){

7153 #i‡
	`deföed
(
__APPLE__
)

7154 if–
pFûe
->
pMëhod
 =&
aÂIoMëhods
 ){

7157 
	`as£π
–()
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
)<=
MAXPATHLEN
 );

7158 
	`°æ˝y
(
dbP©h
, ((
aÂLockögC⁄ãxt
 *)
pFûe
->
lockögC⁄ãxt
)->dbPath,

7159 
MAXPATHLEN
);

7162 if–
pFûe
->
pMëhod
 =&
dŸlockIoMëhods
 ){

7165 
Àn
 = 
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
Ë- såÀn(
DOTLOCK_SUFFIX
);

7166 
	`mem˝y
(
dbP©h
, (*)
pFûe
->
lockögC⁄ãxt
, 
Àn
 + 1);

7169 
	`as£π
–
	`°æí
((*)
pFûe
->
lockögC⁄ãxt
)<=
MAXPATHLEN
 );

7170 
	`°æ˝y
(
dbP©h
, (*)
pFûe
->
lockögC⁄ãxt
, 
MAXPATHLEN
);

7172  
SQLITE_OK
;

7173 
	}
}

7183 
	$¥oxyTønsf‹mUnixFûe
(
unixFûe
 *
pFûe
, c⁄° *
∑th
) {

7184 
¥oxyLockögC⁄ãxt
 *
pCtx
;

7185 
dbP©h
[
MAXPATHLEN
+1];

7186 *
lockP©h
=
NULL
;

7187 
rc
 = 
SQLITE_OK
;

7189 if–
pFûe
->
eFûeLock
!=
NO_LOCK
 ){

7190  
SQLITE_BUSY
;

7192 
	`¥oxyGëDbP©hF‹UnixFûe
(
pFûe
, 
dbP©h
);

7193 if–!
∑th
 ||Ö©h[0]=='\0' || !
	`°rcmp
(path, ":auto:") ){

7194 
lockP©h
=
NULL
;

7196 
lockP©h
=(*)
∑th
;

7199 
	`OSTRACE
(("TRANSPROXY %d f‹ %†pid=%d\n", 
pFûe
->
h
,

7200 (
lockP©h
 ?ÜockP©h : ":auto:"), 
	`osGëpid
(0)));

7202 
pCtx
 = 
	`sqlôe3_mÆloc64
( (*pCtx) );

7203 if–
pCtx
==0 ){

7204  
SQLITE_NOMEM_BKPT
;

7206 
	`mem£t
(
pCtx
, 0, (*pCtx));

7208 
rc
 = 
	`¥oxyCª©eC⁄chP©h«me
(
dbP©h
, &
pCtx
->
c⁄chFûeP©h
);

7209 if–
rc
==
SQLITE_OK
 ){

7210 
rc
 = 
	`¥oxyCª©eUnixFûe
(
pCtx
->
c⁄chFûeP©h
, &pCtx->
c⁄chFûe
, 0);

7211 if–
rc
==
SQLITE_CANTOPEN
 && ((
pFûe
->
›íFœgs
&
O_RDWR
) == 0) ){

7217 
°©fs
 
fsInfo
;

7218 
°©
 
c⁄chInfo
;

7219 
goLockÀss
 = 0;

7221 if–
	`osSèt
(
pCtx
->
c⁄chFûeP©h
, &
c⁄chInfo
) == -1 ) {

7222 
îr
 = 
î∫o
;

7223 if–(
îr
==
ENOENT
Ë&& (
	`°©fs
(
dbP©h
, &
fsInfo
) != -1) ){

7224 
goLockÀss
 = (
fsInfo
.
f_Êags
&
MNT_RDONLY
) == MNT_RDONLY;

7227 if–
goLockÀss
 ){

7228 
pCtx
->
c⁄chHñd
 = -1;

7229 
rc
 = 
SQLITE_OK
;

7233 if–
rc
==
SQLITE_OK
 && 
lockP©h
 ){

7234 
pCtx
->
lockProxyP©h
 = 
	`sqlôe3DbSåDup
(0, 
lockP©h
);

7237 if–
rc
==
SQLITE_OK
 ){

7238 
pCtx
->
dbP©h
 = 
	`sqlôe3DbSåDup
(0, dbPath);

7239 if–
pCtx
->
dbP©h
==
NULL
 ){

7240 
rc
 = 
SQLITE_NOMEM_BKPT
;

7243 if–
rc
==
SQLITE_OK
 ){

7247 
pCtx
->
ﬁdLockögC⁄ãxt
 = 
pFûe
->
lockögC⁄ãxt
;

7248 
pFûe
->
lockögC⁄ãxt
 = 
pCtx
;

7249 
pCtx
->
pOldMëhod
 = 
pFûe
->
pMëhod
;

7250 
pFûe
->
pMëhod
 = &
¥oxyIoMëhods
;

7252 if–
pCtx
->
c⁄chFûe
 ){

7253 
pCtx
->
c⁄chFûe
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
 *)pCtx->conchFile);

7254 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûe
);

7256 
	`sqlôe3DbFªe
(0, 
pCtx
->
lockProxyP©h
);

7257 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûeP©h
);

7258 
	`sqlôe3_‰ì
(
pCtx
);

7260 
	`OSTRACE
(("TRANSPROXY %d %s\n", 
pFûe
->
h
,

7261 (
rc
==
SQLITE_OK
 ? "ok" : "failed")));

7262  
rc
;

7263 
	}
}

7270 
	$¥oxyFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

7271  
›
 ){

7272 
SQLITE_FCNTL_GET_LOCKPROXYFILE
: {

7273 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7274 if–
pFûe
->
pMëhod
 =&
¥oxyIoMëhods
 ){

7275 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxt*)
pFûe
->
lockögC⁄ãxt
;

7276 
	`¥oxyTakeC⁄ch
(
pFûe
);

7277 if–
pCtx
->
lockProxyP©h
 ){

7278 *(c⁄° **)
pArg
 = 
pCtx
->
lockProxyP©h
;

7280 *(c⁄° **)
pArg
 = ":auto: (not held)";

7283 *(c⁄° **)
pArg
 = 
NULL
;

7285  
SQLITE_OK
;

7287 
SQLITE_FCNTL_SET_LOCKPROXYFILE
: {

7288 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7289 
rc
 = 
SQLITE_OK
;

7290 
isProxyStyÀ
 = (
pFûe
->
pMëhod
 =&
¥oxyIoMëhods
);

7291 if–
pArg
==
NULL
 || (const *)pArg==0 ){

7292 if–
isProxyStyÀ
 ){

7297 
rc
 = 
SQLITE_ERROR
 ;

7300 
rc
 = 
SQLITE_OK
;

7303 c⁄° *
¥oxyP©h
 = (c⁄° *)
pArg
;

7304 if–
isProxyStyÀ
 ){

7305 
¥oxyLockögC⁄ãxt
 *
pCtx
 =

7306 (
¥oxyLockögC⁄ãxt
*)
pFûe
->
lockögC⁄ãxt
;

7307 if–!
	`°rcmp
(
pArg
, ":auto:")

7308 || (
pCtx
->
lockProxyP©h
 &&

7309 !
	`°∫cmp
(
pCtx
->
lockProxyP©h
, 
¥oxyP©h
, 
MAXPATHLEN
))

7311 
rc
 = 
SQLITE_OK
;

7313 
rc
 = 
	`swôchLockProxyP©h
(
pFûe
, 
¥oxyP©h
);

7317 
rc
 = 
	`¥oxyTønsf‹mUnixFûe
(
pFûe
, 
¥oxyP©h
);

7320  
rc
;

7323 
	`as£π
( 0 );

7327  
SQLITE_ERROR
;

7328 
	}
}

7343 
	$¥oxyCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
) {

7344 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7345 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7346 if–
rc
==
SQLITE_OK
 ){

7347 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7348 if–
pCtx
->
c⁄chHñd
>0 ){

7349 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7350  
¥oxy
->
pMëhod
->
	`xCheckRe£rvedLock
((
sqlôe3_fûe
*Ìroxy, 
pResOut
);

7352 
pResOut
=0;

7355  
rc
;

7356 
	}
}

7382 
	$¥oxyLock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

7383 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7384 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7385 if–
rc
==
SQLITE_OK
 ){

7386 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7387 if–
pCtx
->
c⁄chHñd
>0 ){

7388 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7389 
rc
 = 
¥oxy
->
pMëhod
->
	`xLock
((
sqlôe3_fûe
*Ìroxy, 
eFûeLock
);

7390 
pFûe
->
eFûeLock
 = 
¥oxy
->eFileLock;

7395  
rc
;

7396 
	}
}

7406 
	$¥oxyU∆ock
(
sqlôe3_fûe
 *
id
, 
eFûeLock
) {

7407 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7408 
rc
 = 
	`¥oxyTakeC⁄ch
(
pFûe
);

7409 if–
rc
==
SQLITE_OK
 ){

7410 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7411 if–
pCtx
->
c⁄chHñd
>0 ){

7412 
unixFûe
 *
¥oxy
 = 
pCtx
->
lockProxy
;

7413 
rc
 = 
¥oxy
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*Ìroxy, 
eFûeLock
);

7414 
pFûe
->
eFûeLock
 = 
¥oxy
->eFileLock;

7419  
rc
;

7420 
	}
}

7425 
	$¥oxyClo£
(
sqlôe3_fûe
 *
id
) {

7426 if–
	`ALWAYS
(
id
) ){

7427 
unixFûe
 *
pFûe
 = (unixFûe*)
id
;

7428 
¥oxyLockögC⁄ãxt
 *
pCtx
 = (¥oxyLockögC⁄ãxà*)
pFûe
->
lockögC⁄ãxt
;

7429 
unixFûe
 *
lockProxy
 = 
pCtx
->lockProxy;

7430 
unixFûe
 *
c⁄chFûe
 = 
pCtx
->conchFile;

7431 
rc
 = 
SQLITE_OK
;

7433 if–
lockProxy
 ){

7434 
rc
 = 
lockProxy
->
pMëhod
->
	`xU∆ock
((
sqlôe3_fûe
*ÓockProxy, 
NO_LOCK
);

7435 if–
rc
 ) Ñc;

7436 
rc
 = 
lockProxy
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
*)lockProxy);

7437 if–
rc
 ) Ñc;

7438 
	`sqlôe3_‰ì
(
lockProxy
);

7439 
pCtx
->
lockProxy
 = 0;

7441 if–
c⁄chFûe
 ){

7442 if–
pCtx
->
c⁄chHñd
 ){

7443 
rc
 = 
	`¥oxyRñó£C⁄ch
(
pFûe
);

7444 if–
rc
 ) Ñc;

7446 
rc
 = 
c⁄chFûe
->
pMëhod
->
	`xClo£
((
sqlôe3_fûe
*)conchFile);

7447 if–
rc
 ) Ñc;

7448 
	`sqlôe3_‰ì
(
c⁄chFûe
);

7450 
	`sqlôe3DbFªe
(0, 
pCtx
->
lockProxyP©h
);

7451 
	`sqlôe3_‰ì
(
pCtx
->
c⁄chFûeP©h
);

7452 
	`sqlôe3DbFªe
(0, 
pCtx
->
dbP©h
);

7454 
pFûe
->
lockögC⁄ãxt
 = 
pCtx
->
ﬁdLockögC⁄ãxt
;

7455 
pFûe
->
pMëhod
 = 
pCtx
->
pOldMëhod
;

7456 
	`sqlôe3_‰ì
(
pCtx
);

7457  
pFûe
->
pMëhod
->
	`xClo£
(
id
);

7459  
SQLITE_OK
;

7460 
	}
}

7487 
	$sqlôe3_os_öô
(){

7508 
	#UNIXVFS
(
VFSNAME
, 
FINDER
) { \

7510 (
unixFûe
), \

7511 
MAX_PATHNAME
, \

7513 
VFSNAME
, \

7514 (*)&
FINDER
, \

7515 
unixO≥n
, \

7516 
unixDñëe
, \

7517 
unixAc˚ss
, \

7518 
unixFuŒP©h«me
, \

7519 
unixDlO≥n
, \

7520 
unixDlEº‹
, \

7521 
unixDlSym
, \

7522 
unixDlClo£
, \

7523 
unixR™dom√ss
, \

7524 
unixSÀï
, \

7525 
unixCuºítTime
, \

7526 
unixGëLa°Eº‹
, \

7527 
unixCuºítTimeI¡64
, \

7528 
unixSëSy°emCÆl
, \

7529 
unixGëSy°emCÆl
, \

7530 
unixNextSy°emCÆl
, \

7531 }

	)

7540 
sqlôe3_vfs
 
aVfs
[] = {

7541 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

7542 
	`UNIXVFS
("unix", 
autﬁockIoFödî
 ),

7543 #ñi‡
OS_VXWORKS


7544 
	`UNIXVFS
("unix", 
vxw‹ksIoFödî
 ),

7546 
	`UNIXVFS
("unix", 
posixIoFödî
 ),

7548 
	`UNIXVFS
("unix-n⁄e", 
nﬁockIoFödî
 ),

7549 
	`UNIXVFS
("unix-dŸfûe", 
dŸlockIoFödî
 ),

7550 
	`UNIXVFS
("unix-ex˛", 
posixIoFödî
 ),

7551 #i‡
OS_VXWORKS


7552 
	`UNIXVFS
("unix-«med£m", 
£mIoFödî
 ),

7554 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 || 
OS_VXWORKS


7555 
	`UNIXVFS
("unix-posix", 
posixIoFödî
 ),

7557 #i‡
SQLITE_ENABLE_LOCKING_STYLE


7558 
	`UNIXVFS
("unix-Êock", 
ÊockIoFödî
 ),

7560 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

7561 
	`UNIXVFS
("unix-aÂ", 
aÂIoFödî
 ),

7562 
	`UNIXVFS
("unix-nfs", 
nfsIoFödî
 ),

7563 
	`UNIXVFS
("unix-¥oxy", 
¥oxyIoFödî
 ),

7566 
i
;

7570 
	`as£π
–
	`AºaySize
(
aSysˇŒ
)==28 );

7573 
i
=0; i<((
aVfs
)/(
sqlôe3_vfs
)); i++){

7574 
	`sqlôe3_vfs_ªgi°î
(&
aVfs
[
i
], i==0);

7576  
SQLITE_OK
;

7577 
	}
}

7586 
	$sqlôe3_os_íd
(){

7587  
SQLITE_OK
;

7588 
	}
}

	@os_win.c

15 
	~"sqlôeI¡.h
"

16 #i‡
SQLITE_OS_WIN


21 
	~"os_comm⁄.h
"

26 
	~"os_wö.h
"

32 #i‡!
SQLITE_OS_WINNT
 && !
deföed
(
SQLITE_OMIT_WAL
)

37 #i‡!
SQLITE_OS_WINNT
 && 
SQLITE_MAX_MMAP_SIZE
>0

46 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
deföed
(
SQLITE_WIN32_NO_ANSI
)

47 
	#SQLITE_WIN32_HAS_ANSI


	)

54 #i‡(
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINNT
 || 
SQLITE_OS_WINRT
) && \

55 !
	$deföed
(
SQLITE_WIN32_NO_WIDE
)

56 
	#SQLITE_WIN32_HAS_WIDE


	)

62 #i‡!
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& !deföed(
SQLITE_WIN32_HAS_WIDE
)

71 #i‚de‡
NTDDI_WIN8


72 
	#NTDDI_WIN8
 0x06020000

	)

75 #i‚de‡
NTDDI_WINBLUE


76 
	#NTDDI_WINBLUE
 0x06030000

	)

79 #i‚de‡
NTDDI_WINTHRESHOLD


80 
	#NTDDI_WINTHRESHOLD
 0x06040000

	)

87 #i‚de‡
SQLITE_WIN32_GETVERSIONEX


88 #i‡
	`deföed
(
NTDDI_VERSION
Ë&& NTDDI_VERSION >
NTDDI_WINBLUE


89 
	#SQLITE_WIN32_GETVERSIONEX
 0

	)

91 
	#SQLITE_WIN32_GETVERSIONEX
 1

	)

100 #i‚de‡
SQLITE_WIN32_CREATEFILEMAPPINGA


101 #i‡
	`deföed
(
NTDDI_VERSION
Ë&& NTDDI_VERSION >
NTDDI_WINTHRESHOLD


102 
	#SQLITE_WIN32_CREATEFILEMAPPINGA
 0

	)

104 
	#SQLITE_WIN32_CREATEFILEMAPPINGA
 1

	)

111 #i‚de‡
MAX_PATH


112 
	#MAX_PATH
 (260)

	)

119 #i‚de‡
SQLITE_WIN32_MAX_PATH_CHARS


120 
	#SQLITE_WIN32_MAX_PATH_CHARS
 (
MAX_PATH
)

	)

126 #i‚de‡
UNICODE_STRING_MAX_CHARS


127 
	#UNICODE_STRING_MAX_CHARS
 (32767)

	)

134 #i‚de‡
SQLITE_WINNT_MAX_PATH_CHARS


135 
	#SQLITE_WINNT_MAX_PATH_CHARS
 (
UNICODE_STRING_MAX_CHARS
)

	)

143 #i‚de‡
SQLITE_WIN32_MAX_PATH_BYTES


144 
	#SQLITE_WIN32_MAX_PATH_BYTES
 (
SQLITE_WIN32_MAX_PATH_CHARS
*4)

	)

151 #i‚de‡
SQLITE_WINNT_MAX_PATH_BYTES


152 
	#SQLITE_WINNT_MAX_PATH_BYTES
 \

153 ((
WCHAR
Ë* 
SQLITE_WINNT_MAX_PATH_CHARS
)

	)

159 #i‚de‡
SQLITE_WIN32_MAX_ERRMSG_CHARS


160 
	#SQLITE_WIN32_MAX_ERRMSG_CHARS
 (1024)

	)

167 #i‚de‡
wöIsDúSï


168 
	#wöIsDúSï
(
a
Ë((◊Ë='/'Ë|| (◊Ë='\\'))

	)

175 #i‚de‡
UNUSED_VARIABLE_VALUE


176 
	#UNUSED_VARIABLE_VALUE
(
x
Ë()(x)

	)

182 #i‚de‡
wöGëDúSï


183 
	#wöGëDúSï
(Ë'\\'

	)

191 #i‡
SQLITE_WIN32_FILEMAPPING_API
 && \

192 (!
	`deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

197 #i‡
SQLITE_OS_WINRT


198 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögFromAµ
(HANDLE, \

199 
LPSECURITY_ATTRIBUTES
, 
ULONG
, 
ULONG64
, 
LPCWSTR
);

201 
WINBASEAPI
 
LPVOID
 
WINAPI
 
	`M≠VõwOfFûeFromAµ
(
HANDLE
, 
ULONG
, 
ULONG64
, 
SIZE_T
);

203 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

204 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögA
(HANDLE, 
LPSECURITY_ATTRIBUTES
, \

205 
DWORD
, DWORD, DWORD, 
LPCSTR
);

208 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

209 
WINBASEAPI
 
HANDLE
 
WINAPI
 
	`Cª©eFûeM≠pögW
(HANDLE, 
LPSECURITY_ATTRIBUTES
, \

210 
DWORD
, DWORD, DWORD, 
LPCWSTR
);

213 
WINBASEAPI
 
LPVOID
 
WINAPI
 
	`M≠VõwOfFûe
(
HANDLE
, 
DWORD
, DWORD, DWORD, 
SIZE_T
);

220 
WINBASEAPI
 
BOOL
 
WINAPI
 
	`FlushVõwOfFûe
(
LPCVOID
, 
SIZE_T
);

221 
WINBASEAPI
 
BOOL
 
WINAPI
 
	`Unm≠VõwOfFûe
(
LPCVOID
);

227 #i‚de‡
INVALID_FILE_ATTRIBUTES


228 
	#INVALID_FILE_ATTRIBUTES
 ((
DWORD
)-1)

	)

231 #i‚de‡
FILE_FLAG_MASK


232 
	#FILE_FLAG_MASK
 (0xFF3C0000)

	)

235 #i‚de‡
FILE_ATTRIBUTE_MASK


236 
	#FILE_ATTRIBUTE_MASK
 (0x0003FFF7)

	)

239 #i‚de‡
SQLITE_OMIT_WAL


241 
wöShm
 
	twöShm
;

242 
wöShmNode
 
	twöShmNode
;

249 #i‡
SQLITE_OS_WINCE


250 
	swö˚Lock
 {

251 
nRódîs
;

252 
BOOL
 
bPídög
;

253 
BOOL
 
bRe£rved
;

254 
BOOL
 
bEx˛usive
;

255 } 
	twö˚Lock
;

262 
wöFûe
 
	twöFûe
;

263 
	swöFûe
 {

264 c⁄° 
sqlôe3_io_mëhods
 *
pMëhod
;

265 
sqlôe3_vfs
 *
pVfs
;

266 
HANDLE
 
h
;

267 
u8
 
lockty≥
;

268 
sh¨edLockByã
;

269 
u8
 
˘æFœgs
;

270 
DWORD
 
œ°Eºno
;

271 #i‚de‡
SQLITE_OMIT_WAL


272 
wöShm
 *
pShm
;

274 c⁄° *
zP©h
;

275 
szChunk
;

276 #i‡
SQLITE_OS_WINCE


277 
LPWSTR
 
zDñëeOnClo£
;

278 
HANDLE
 
hMuãx
;

279 
HANDLE
 
hSh¨ed
;

280 
wö˚Lock
 
loˇl
;

281 
wö˚Lock
 *
sh¨ed
;

283 #i‡
SQLITE_MAX_MMAP_SIZE
>0

284 
nFëchOut
;

285 
HANDLE
 
hM≠
;

286 *
pM≠Regi⁄
;

287 
sqlôe3_öt64
 
mm≠Size
;

288 
sqlôe3_öt64
 
mm≠SizeA˘uÆ
;

289 
sqlôe3_öt64
 
mm≠SizeMax
;

297 
wöVfsAµD©a
 
	twöVfsAµD©a
;

298 
	swöVfsAµD©a
 {

299 c⁄° 
sqlôe3_io_mëhods
 *
pMëhod
;

300 *
pAµD©a
;

301 
BOOL
 
bNoLock
;

307 
	#WINFILE_RDONLY
 0x02

	)

308 
	#WINFILE_PERSIST_WAL
 0x04

	)

309 
	#WINFILE_PSOW
 0x10

	)

314 #i‚de‡
SQLITE_WIN32_DBG_BUF_SIZE


315 
	#SQLITE_WIN32_DBG_BUF_SIZE
 (()(4096-(
DWORD
)))

	)

322 #i‚de‡
SQLITE_WIN32_DATA_DIRECTORY_TYPE


323 
	#SQLITE_WIN32_DATA_DIRECTORY_TYPE
 (1)

	)

330 #i‚de‡
SQLITE_WIN32_TEMP_DIRECTORY_TYPE


331 
	#SQLITE_WIN32_TEMP_DIRECTORY_TYPE
 (2)

	)

338 #ifde‡
SQLITE_WIN32_MALLOC


354 #i‚de‡
SQLITE_WIN32_HEAP_CREATE


355 
	#SQLITE_WIN32_HEAP_CREATE
 (
TRUE
)

	)

362 #i‚de‡
SQLITE_WIN32_CACHE_SIZE


363 #i‡
SQLITE_DEFAULT_CACHE_SIZE
>=0

364 
	#SQLITE_WIN32_CACHE_SIZE
 (
SQLITE_DEFAULT_CACHE_SIZE
)

	)

366 
	#SQLITE_WIN32_CACHE_SIZE
 (-(
SQLITE_DEFAULT_CACHE_SIZE
))

	)

373 #i‚de‡
SQLITE_WIN32_HEAP_INIT_SIZE


374 
	#SQLITE_WIN32_HEAP_INIT_SIZE
 ((
SQLITE_WIN32_CACHE_SIZE
) * \

375 (
SQLITE_DEFAULT_PAGE_SIZE
Ë+ 4194304)

	)

381 #i‚de‡
SQLITE_WIN32_HEAP_MAX_SIZE


382 
	#SQLITE_WIN32_HEAP_MAX_SIZE
 (0)

	)

389 #i‚de‡
SQLITE_WIN32_HEAP_FLAGS


390 
	#SQLITE_WIN32_HEAP_FLAGS
 (0)

	)

398 
wöMemD©a
 
	twöMemD©a
;

399 
	swöMemD©a
 {

400 #i‚de‡
NDEBUG


401 
u32
 
magic1
;

403 
HANDLE
 
hHóp
;

404 
BOOL
 
bOw√d
;

405 #i‚de‡
NDEBUG


406 
u32
 
magic2
;

410 #i‚de‡
NDEBUG


411 
	#WINMEM_MAGIC1
 0x42b2830b

	)

412 
	#WINMEM_MAGIC2
 0xbd4d7cf4

	)

415 
wöMemD©a
 
wö_mem_d©a
 = {

416 #i‚de‡
NDEBUG


417 
WINMEM_MAGIC1
,

419 
NULL
, 
FALSE


420 #i‚de‡
NDEBUG


421 ,
WINMEM_MAGIC2


423 
	}
};

425 #i‚de‡
NDEBUG


426 
	#wöMemAs£πMagic1
(Ë
	`as£π
–
wö_mem_d©a
.
magic1
==
WINMEM_MAGIC1
 )

	)

427 
	#wöMemAs£πMagic2
(Ë
	`as£π
–
wö_mem_d©a
.
magic2
==
WINMEM_MAGIC2
 )

	)

428 
	#wöMemAs£πMagic
(Ë
	`wöMemAs£πMagic1
(); 
	`wöMemAs£πMagic2
();

	)

430 
	#wöMemAs£πMagic
()

	)

433 
	#wöMemGëD©aPå
(Ë&
wö_mem_d©a


	)

434 
	#wöMemGëHóp
(Ë
wö_mem_d©a
.
hHóp


	)

435 
	#wöMemGëOw√d
(Ë
wö_mem_d©a
.
bOw√d


	)

437 *
wöMemMÆloc
(
nByãs
);

438 
wöMemFªe
(*
pPri‹
);

439 *
wöMemRóŒoc
(*
pPri‹
, 
nByãs
);

440 
wöMemSize
(*
p
);

441 
wöMemRoundup
(
n
);

442 
wöMemInô
(*
pAµD©a
);

443 
wöMemShutdown
(*
pAµD©a
);

445 c⁄° 
sqlôe3_mem_mëhods
 *
sqlôe3MemGëWö32
();

460 #ifde‡
SQLITE_TEST


461 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gsqlôe3_os_ty≥
 = 0;

463 
LONG
 
SQLITE_WIN32_VOLATILE
 
	gsqlôe3_os_ty≥
 = 0;

466 #i‚de‡
SYSCALL


467 
	#SYSCALL
 
sqlôe3_sysˇŒ_±r


	)

474 #i‡
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT


475 
	#osAªFûeApisANSI
(Ë1

	)

484 
	swö_sysˇŒ
 {

485 c⁄° *
	mzName
;

486 
sqlôe3_sysˇŒ_±r
 
	mpCuºít
;

487 
sqlôe3_sysˇŒ_±r
 
	mpDeÁu…
;

488 } 
	gaSysˇŒ
[] = {

489 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


490 { "AªFûeApisANSI", (
SYSCALL
)
AªFûeApisANSI
, 0 },

492 { "AªFûeApisANSI", (
SYSCALL
)0, 0 },

495 #i‚de‡
osAªFûeApisANSI


496 
	#osAªFûeApisANSI
 ((
	`BOOL
(
WINAPI
*)(
VOID
))
aSysˇŒ
[0].
pCuºít
)

	)

499 #i‡
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

500 { "Ch¨LowîW", (
SYSCALL
)
Ch¨LowîW
, 0 },

502 { "Ch¨LowîW", (
SYSCALL
)0, 0 },

505 
	#osCh¨LowîW
 ((
	`LPWSTR
(
WINAPI
*)(
LPWSTR
))
aSysˇŒ
[1].
pCuºít
)

	)

507 #i‡
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

508 { "Ch¨UµîW", (
SYSCALL
)
Ch¨UµîW
, 0 },

510 { "Ch¨UµîW", (
SYSCALL
)0, 0 },

513 
	#osCh¨UµîW
 ((
	`LPWSTR
(
WINAPI
*)(
LPWSTR
))
aSysˇŒ
[2].
pCuºít
)

	)

515 { "Clo£H™dÀ", (
SYSCALL
)
Clo£H™dÀ
, 0 },

517 
	#osClo£H™dÀ
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[3].
pCuºít
)

	)

519 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

520 { "Cª©eFûeA", (
SYSCALL
)
Cª©eFûeA
, 0 },

522 { "Cª©eFûeA", (
SYSCALL
)0, 0 },

525 
	#osCª©eFûeA
 ((
	`HANDLE
(
WINAPI
*)(
LPCSTR
,
DWORD
,DWORD, \

526 
LPSECURITY_ATTRIBUTES
,
DWORD
,DWORD,
HANDLE
))
aSysˇŒ
[4].
pCuºít
)

	)

528 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

529 { "Cª©eFûeW", (
SYSCALL
)
Cª©eFûeW
, 0 },

531 { "Cª©eFûeW", (
SYSCALL
)0, 0 },

534 
	#osCª©eFûeW
 ((
	`HANDLE
(
WINAPI
*)(
LPCWSTR
,
DWORD
,DWORD, \

535 
LPSECURITY_ATTRIBUTES
,
DWORD
,DWORD,
HANDLE
))
aSysˇŒ
[5].
pCuºít
)

	)

537 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
) && \

538 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0) && \

539 
SQLITE_WIN32_CREATEFILEMAPPINGA


540 { "Cª©eFûeM≠pögA", (
SYSCALL
)
Cª©eFûeM≠pögA
, 0 },

542 { "Cª©eFûeM≠pögA", (
SYSCALL
)0, 0 },

545 
	#osCª©eFûeM≠pögA
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
,
LPSECURITY_ATTRIBUTES
, \

546 
DWORD
,DWORD,DWORD,
LPCSTR
))
aSysˇŒ
[6].
pCuºít
)

	)

548 #i‡
SQLITE_OS_WINCE
 || (!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

549 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0))

550 { "Cª©eFûeM≠pögW", (
SYSCALL
)
Cª©eFûeM≠pögW
, 0 },

552 { "Cª©eFûeM≠pögW", (
SYSCALL
)0, 0 },

555 
	#osCª©eFûeM≠pögW
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
,
LPSECURITY_ATTRIBUTES
, \

556 
DWORD
,DWORD,DWORD,
LPCWSTR
))
aSysˇŒ
[7].
pCuºít
)

	)

558 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

559 { "Cª©eMuãxW", (
SYSCALL
)
Cª©eMuãxW
, 0 },

561 { "Cª©eMuãxW", (
SYSCALL
)0, 0 },

564 
	#osCª©eMuãxW
 ((
	`HANDLE
(
WINAPI
*)(
LPSECURITY_ATTRIBUTES
,
BOOL
, \

565 
LPCWSTR
))
aSysˇŒ
[8].
pCuºít
)

	)

567 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

568 { "DñëeFûeA", (
SYSCALL
)
DñëeFûeA
, 0 },

570 { "DñëeFûeA", (
SYSCALL
)0, 0 },

573 
	#osDñëeFûeA
 ((
	`BOOL
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[9].
pCuºít
)

	)

575 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

576 { "DñëeFûeW", (
SYSCALL
)
DñëeFûeW
, 0 },

578 { "DñëeFûeW", (
SYSCALL
)0, 0 },

581 
	#osDñëeFûeW
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[10].
pCuºít
)

	)

583 #i‡
SQLITE_OS_WINCE


584 { "FûeTimeToLoˇlFûeTime", (
SYSCALL
)
FûeTimeToLoˇlFûeTime
, 0 },

586 { "FûeTimeToLoˇlFûeTime", (
SYSCALL
)0, 0 },

589 
	#osFûeTimeToLoˇlFûeTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
FILETIME
*, \

590 
LPFILETIME
))
aSysˇŒ
[11].
pCuºít
)

	)

592 #i‡
SQLITE_OS_WINCE


593 { "FûeTimeToSy°emTime", (
SYSCALL
)
FûeTimeToSy°emTime
, 0 },

595 { "FûeTimeToSy°emTime", (
SYSCALL
)0, 0 },

598 
	#osFûeTimeToSy°emTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
FILETIME
*, \

599 
LPSYSTEMTIME
))
aSysˇŒ
[12].
pCuºít
)

	)

601 { "FlushFûeBuf„rs", (
SYSCALL
)
FlushFûeBuf„rs
, 0 },

603 
	#osFlushFûeBuf„rs
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[13].
pCuºít
)

	)

605 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

606 { "F‹m©MesßgeA", (
SYSCALL
)
F‹m©MesßgeA
, 0 },

608 { "F‹m©MesßgeA", (
SYSCALL
)0, 0 },

611 
	#osF‹m©MesßgeA
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPCVOID
,DWORD,DWORD,
LPSTR
, \

612 
DWORD
,
va_li°
*))
aSysˇŒ
[14].
pCuºít
)

	)

614 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

615 { "F‹m©MesßgeW", (
SYSCALL
)
F‹m©MesßgeW
, 0 },

617 { "F‹m©MesßgeW", (
SYSCALL
)0, 0 },

620 
	#osF‹m©MesßgeW
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPCVOID
,DWORD,DWORD,
LPWSTR
, \

621 
DWORD
,
va_li°
*))
aSysˇŒ
[15].
pCuºít
)

	)

623 #i‡!
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

624 { "FªeLibøry", (
SYSCALL
)
FªeLibøry
, 0 },

626 { "FªeLibøry", (
SYSCALL
)0, 0 },

629 
	#osFªeLibøry
 ((
	`BOOL
(
WINAPI
*)(
HMODULE
))
aSysˇŒ
[16].
pCuºít
)

	)

631 { "GëCuºítPro˚ssId", (
SYSCALL
)
GëCuºítPro˚ssId
, 0 },

633 
	#osGëCuºítPro˚ssId
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[17].
pCuºít
)

	)

635 #i‡!
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
)

636 { "GëDiskFªeS∑˚A", (
SYSCALL
)
GëDiskFªeS∑˚A
, 0 },

638 { "GëDiskFªeS∑˚A", (
SYSCALL
)0, 0 },

641 
	#osGëDiskFªeS∑˚A
 ((
	`BOOL
(
WINAPI
*)(
LPCSTR
,
LPDWORD
,LPDWORD,LPDWORD, \

642 
LPDWORD
))
aSysˇŒ
[18].
pCuºít
)

	)

644 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

645 { "GëDiskFªeS∑˚W", (
SYSCALL
)
GëDiskFªeS∑˚W
, 0 },

647 { "GëDiskFªeS∑˚W", (
SYSCALL
)0, 0 },

650 
	#osGëDiskFªeS∑˚W
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
,
LPDWORD
,LPDWORD,LPDWORD, \

651 
LPDWORD
))
aSysˇŒ
[19].
pCuºít
)

	)

653 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

654 { "GëFûeAâribuãsA", (
SYSCALL
)
GëFûeAâribuãsA
, 0 },

656 { "GëFûeAâribuãsA", (
SYSCALL
)0, 0 },

659 
	#osGëFûeAâribuãsA
 ((
	`DWORD
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[20].
pCuºít
)

	)

661 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

662 { "GëFûeAâribuãsW", (
SYSCALL
)
GëFûeAâribuãsW
, 0 },

664 { "GëFûeAâribuãsW", (
SYSCALL
)0, 0 },

667 
	#osGëFûeAâribuãsW
 ((
	`DWORD
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[21].
pCuºít
)

	)

669 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

670 { "GëFûeAâribuãsExW", (
SYSCALL
)
GëFûeAâribuãsExW
, 0 },

672 { "GëFûeAâribuãsExW", (
SYSCALL
)0, 0 },

675 
	#osGëFûeAâribuãsExW
 ((
	`BOOL
(
WINAPI
*)(
LPCWSTR
,
GET_FILEEX_INFO_LEVELS
, \

676 
LPVOID
))
aSysˇŒ
[22].
pCuºít
)

	)

678 #i‡!
SQLITE_OS_WINRT


679 { "GëFûeSize", (
SYSCALL
)
GëFûeSize
, 0 },

681 { "GëFûeSize", (
SYSCALL
)0, 0 },

684 
	#osGëFûeSize
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
LPDWORD
))
aSysˇŒ
[23].
pCuºít
)

	)

686 #i‡!
SQLITE_OS_WINCE
 && 
deföed
(
SQLITE_WIN32_HAS_ANSI
)

687 { "GëFuŒP©hNameA", (
SYSCALL
)
GëFuŒP©hNameA
, 0 },

689 { "GëFuŒP©hNameA", (
SYSCALL
)0, 0 },

692 
	#osGëFuŒP©hNameA
 ((
	`DWORD
(
WINAPI
*)(
LPCSTR
,
DWORD
,
LPSTR
, \

693 
LPSTR
*))
aSysˇŒ
[24].
pCuºít
)

	)

695 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

696 { "GëFuŒP©hNameW", (
SYSCALL
)
GëFuŒP©hNameW
, 0 },

698 { "GëFuŒP©hNameW", (
SYSCALL
)0, 0 },

701 
	#osGëFuŒP©hNameW
 ((
	`DWORD
(
WINAPI
*)(
LPCWSTR
,
DWORD
,
LPWSTR
, \

702 
LPWSTR
*))
aSysˇŒ
[25].
pCuºít
)

	)

704 { "GëLa°Eº‹", (
SYSCALL
)
GëLa°Eº‹
, 0 },

706 
	#osGëLa°Eº‹
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[26].
pCuºít
)

	)

708 #i‡!
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

709 #i‡
SQLITE_OS_WINCE


711 { "GëProcAddªssA", (
SYSCALL
)
GëProcAddªssA
, 0 },

715 { "GëProcAddªssA", (
SYSCALL
)
GëProcAddªss
, 0 },

718 { "GëProcAddªssA", (
SYSCALL
)0, 0 },

721 
	#osGëProcAddªssA
 ((
	`FARPROC
(
WINAPI
*)(
HMODULE
, \

722 
LPCSTR
))
aSysˇŒ
[27].
pCuºít
)

	)

724 #i‡!
SQLITE_OS_WINRT


725 { "GëSy°emInfo", (
SYSCALL
)
GëSy°emInfo
, 0 },

727 { "GëSy°emInfo", (
SYSCALL
)0, 0 },

730 
	#osGëSy°emInfo
 ((
	`VOID
(
WINAPI
*)(
LPSYSTEM_INFO
))
aSysˇŒ
[28].
pCuºít
)

	)

732 { "GëSy°emTime", (
SYSCALL
)
GëSy°emTime
, 0 },

734 
	#osGëSy°emTime
 ((
	`VOID
(
WINAPI
*)(
LPSYSTEMTIME
))
aSysˇŒ
[29].
pCuºít
)

	)

736 #i‡!
SQLITE_OS_WINCE


737 { "GëSy°emTimeAsFûeTime", (
SYSCALL
)
GëSy°emTimeAsFûeTime
, 0 },

739 { "GëSy°emTimeAsFûeTime", (
SYSCALL
)0, 0 },

742 
	#osGëSy°emTimeAsFûeTime
 ((
	`VOID
(
WINAPI
*)( \

743 
LPFILETIME
))
aSysˇŒ
[30].
pCuºít
)

	)

745 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

746 { "GëTempP©hA", (
SYSCALL
)
GëTempP©hA
, 0 },

748 { "GëTempP©hA", (
SYSCALL
)0, 0 },

751 
	#osGëTempP©hA
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPSTR
))
aSysˇŒ
[31].
pCuºít
)

	)

753 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
)

754 { "GëTempP©hW", (
SYSCALL
)
GëTempP©hW
, 0 },

756 { "GëTempP©hW", (
SYSCALL
)0, 0 },

759 
	#osGëTempP©hW
 ((
	`DWORD
(
WINAPI
*)(
DWORD
,
LPWSTR
))
aSysˇŒ
[32].
pCuºít
)

	)

761 #i‡!
SQLITE_OS_WINRT


762 { "GëTickCou¡", (
SYSCALL
)
GëTickCou¡
, 0 },

764 { "GëTickCou¡", (
SYSCALL
)0, 0 },

767 
	#osGëTickCou¡
 ((
	`DWORD
(
WINAPI
*)(
VOID
))
aSysˇŒ
[33].
pCuºít
)

	)

769 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_GETVERSIONEX


770 { "GëVîsi⁄ExA", (
SYSCALL
)
GëVîsi⁄ExA
, 0 },

772 { "GëVîsi⁄ExA", (
SYSCALL
)0, 0 },

775 
	#osGëVîsi⁄ExA
 ((
	`BOOL
(
WINAPI
*)( \

776 
LPOSVERSIONINFOA
))
aSysˇŒ
[34].
pCuºít
)

	)

778 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

779 
SQLITE_WIN32_GETVERSIONEX


780 { "GëVîsi⁄ExW", (
SYSCALL
)
GëVîsi⁄ExW
, 0 },

782 { "GëVîsi⁄ExW", (
SYSCALL
)0, 0 },

785 
	#osGëVîsi⁄ExW
 ((
	`BOOL
(
WINAPI
*)( \

786 
LPOSVERSIONINFOW
))
aSysˇŒ
[35].
pCuºít
)

	)

788 { "HópAŒoc", (
SYSCALL
)
HópAŒoc
, 0 },

790 
	#osHópAŒoc
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
, \

791 
SIZE_T
))
aSysˇŒ
[36].
pCuºít
)

	)

793 #i‡!
SQLITE_OS_WINRT


794 { "HópCª©e", (
SYSCALL
)
HópCª©e
, 0 },

796 { "HópCª©e", (
SYSCALL
)0, 0 },

799 
	#osHópCª©e
 ((
	`HANDLE
(
WINAPI
*)(
DWORD
,
SIZE_T
, \

800 
SIZE_T
))
aSysˇŒ
[37].
pCuºít
)

	)

802 #i‡!
SQLITE_OS_WINRT


803 { "HópDe°roy", (
SYSCALL
)
HópDe°roy
, 0 },

805 { "HópDe°roy", (
SYSCALL
)0, 0 },

808 
	#osHópDe°roy
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[38].
pCuºít
)

	)

810 { "HópFªe", (
SYSCALL
)
HópFªe
, 0 },

812 
	#osHópFªe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,
LPVOID
))
aSysˇŒ
[39].
pCuºít
)

	)

814 { "HópReAŒoc", (
SYSCALL
)
HópReAŒoc
, 0 },

816 
	#osHópReAŒoc
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
,
LPVOID
, \

817 
SIZE_T
))
aSysˇŒ
[40].
pCuºít
)

	)

819 { "HópSize", (
SYSCALL
)
HópSize
, 0 },

821 
	#osHópSize
 ((
	`SIZE_T
(
WINAPI
*)(
HANDLE
,
DWORD
, \

822 
LPCVOID
))
aSysˇŒ
[41].
pCuºít
)

	)

824 #i‡!
SQLITE_OS_WINRT


825 { "HópVÆid©e", (
SYSCALL
)
HópVÆid©e
, 0 },

827 { "HópVÆid©e", (
SYSCALL
)0, 0 },

830 
	#osHópVÆid©e
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
, \

831 
LPCVOID
))
aSysˇŒ
[42].
pCuºít
)

	)

833 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


834 { "HópCom∑˘", (
SYSCALL
)
HópCom∑˘
, 0 },

836 { "HópCom∑˘", (
SYSCALL
)0, 0 },

839 
	#osHópCom∑˘
 ((
	`UINT
(
WINAPI
*)(
HANDLE
,
DWORD
))
aSysˇŒ
[43].
pCuºít
)

	)

841 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

842 { "LﬂdLibøryA", (
SYSCALL
)
LﬂdLibøryA
, 0 },

844 { "LﬂdLibøryA", (
SYSCALL
)0, 0 },

847 
	#osLﬂdLibøryA
 ((
	`HMODULE
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[44].
pCuºít
)

	)

849 #i‡!
SQLITE_OS_WINRT
 && 
deföed
(
SQLITE_WIN32_HAS_WIDE
) && \

850 !
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

851 { "LﬂdLibøryW", (
SYSCALL
)
LﬂdLibøryW
, 0 },

853 { "LﬂdLibøryW", (
SYSCALL
)0, 0 },

856 
	#osLﬂdLibøryW
 ((
	`HMODULE
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[45].
pCuºít
)

	)

858 #i‡!
SQLITE_OS_WINRT


859 { "LoˇlFªe", (
SYSCALL
)
LoˇlFªe
, 0 },

861 { "LoˇlFªe", (
SYSCALL
)0, 0 },

864 
	#osLoˇlFªe
 ((
	`HLOCAL
(
WINAPI
*)(
HLOCAL
))
aSysˇŒ
[46].
pCuºít
)

	)

866 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


867 { "LockFûe", (
SYSCALL
)
LockFûe
, 0 },

869 { "LockFûe", (
SYSCALL
)0, 0 },

872 #i‚de‡
osLockFûe


873 
	#osLockFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

874 
DWORD
))
aSysˇŒ
[47].
pCuºít
)

	)

877 #i‡!
SQLITE_OS_WINCE


878 { "LockFûeEx", (
SYSCALL
)
LockFûeEx
, 0 },

880 { "LockFûeEx", (
SYSCALL
)0, 0 },

883 #i‚de‡
osLockFûeEx


884 
	#osLockFûeEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD,DWORD, \

885 
LPOVERLAPPED
))
aSysˇŒ
[48].
pCuºít
)

	)

888 #i‡
SQLITE_OS_WINCE
 || (!
SQLITE_OS_WINRT
 && \

889 (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0))

890 { "M≠VõwOfFûe", (
SYSCALL
)
M≠VõwOfFûe
, 0 },

892 { "M≠VõwOfFûe", (
SYSCALL
)0, 0 },

895 
	#osM≠VõwOfFûe
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

896 
SIZE_T
))
aSysˇŒ
[49].
pCuºít
)

	)

898 { "Mu…iByãToWideCh¨", (
SYSCALL
)
Mu…iByãToWideCh¨
, 0 },

900 
	#osMu…iByãToWideCh¨
 (((
WINAPI
*)(
UINT
,
DWORD
,
LPCSTR
,,
LPWSTR
, \

901 ))
aSysˇŒ
[50].
pCuºít
)

	)

903 { "QuîyPîf‹m™˚Cou¡î", (
SYSCALL
)
QuîyPîf‹m™˚Cou¡î
, 0 },

905 
	#osQuîyPîf‹m™˚Cou¡î
 ((
	`BOOL
(
WINAPI
*)( \

906 
LARGE_INTEGER
*))
aSysˇŒ
[51].
pCuºít
)

	)

908 { "RódFûe", (
SYSCALL
)
RódFûe
, 0 },

910 
	#osRódFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LPVOID
,
DWORD
,
LPDWORD
, \

911 
LPOVERLAPPED
))
aSysˇŒ
[52].
pCuºít
)

	)

913 { "SëEndOfFûe", (
SYSCALL
)
SëEndOfFûe
, 0 },

915 
	#osSëEndOfFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
))
aSysˇŒ
[53].
pCuºít
)

	)

917 #i‡!
SQLITE_OS_WINRT


918 { "SëFûePoöãr", (
SYSCALL
)
SëFûePoöãr
, 0 },

920 { "SëFûePoöãr", (
SYSCALL
)0, 0 },

923 
	#osSëFûePoöãr
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
LONG
,
PLONG
, \

924 
DWORD
))
aSysˇŒ
[54].
pCuºít
)

	)

926 #i‡!
SQLITE_OS_WINRT


927 { "SÀï", (
SYSCALL
)
SÀï
, 0 },

929 { "SÀï", (
SYSCALL
)0, 0 },

932 
	#osSÀï
 ((
	`VOID
(
WINAPI
*)(
DWORD
))
aSysˇŒ
[55].
pCuºít
)

	)

934 { "Sy°emTimeToFûeTime", (
SYSCALL
)
Sy°emTimeToFûeTime
, 0 },

936 
	#osSy°emTimeToFûeTime
 ((
	`BOOL
(
WINAPI
*)(
CONST
 
SYSTEMTIME
*, \

937 
LPFILETIME
))
aSysˇŒ
[56].
pCuºít
)

	)

939 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


940 { "U∆ockFûe", (
SYSCALL
)
U∆ockFûe
, 0 },

942 { "U∆ockFûe", (
SYSCALL
)0, 0 },

945 #i‚de‡
osU∆ockFûe


946 
	#osU∆ockFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

947 
DWORD
))
aSysˇŒ
[57].
pCuºít
)

	)

950 #i‡!
SQLITE_OS_WINCE


951 { "U∆ockFûeEx", (
SYSCALL
)
U∆ockFûeEx
, 0 },

953 { "U∆ockFûeEx", (
SYSCALL
)0, 0 },

956 
	#osU∆ockFûeEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
DWORD
,DWORD,DWORD, \

957 
LPOVERLAPPED
))
aSysˇŒ
[58].
pCuºít
)

	)

959 #i‡
SQLITE_OS_WINCE
 || !
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0

960 { "Unm≠VõwOfFûe", (
SYSCALL
)
Unm≠VõwOfFûe
, 0 },

962 { "Unm≠VõwOfFûe", (
SYSCALL
)0, 0 },

965 
	#osUnm≠VõwOfFûe
 ((
	`BOOL
(
WINAPI
*)(
LPCVOID
))
aSysˇŒ
[59].
pCuºít
)

	)

967 { "WideCh¨ToMu…iByã", (
SYSCALL
)
WideCh¨ToMu…iByã
, 0 },

969 
	#osWideCh¨ToMu…iByã
 (((
WINAPI
*)(
UINT
,
DWORD
,
LPCWSTR
,,
LPSTR
,, \

970 
LPCSTR
,
LPBOOL
))
aSysˇŒ
[60].
pCuºít
)

	)

972 { "WrôeFûe", (
SYSCALL
)
WrôeFûe
, 0 },

974 
	#osWrôeFûe
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LPCVOID
,
DWORD
,
LPDWORD
, \

975 
LPOVERLAPPED
))
aSysˇŒ
[61].
pCuºít
)

	)

977 #i‡
SQLITE_OS_WINRT


978 { "Cª©eEvítExW", (
SYSCALL
)
Cª©eEvítExW
, 0 },

980 { "Cª©eEvítExW", (
SYSCALL
)0, 0 },

983 
	#osCª©eEvítExW
 ((
	`HANDLE
(
WINAPI
*)(
LPSECURITY_ATTRIBUTES
,
LPCWSTR
, \

984 
DWORD
,DWORD))
aSysˇŒ
[62].
pCuºít
)

	)

986 #i‡!
SQLITE_OS_WINRT


987 { "WaôF‹SögÀObje˘", (
SYSCALL
)
WaôF‹SögÀObje˘
, 0 },

989 { "WaôF‹SögÀObje˘", (
SYSCALL
)0, 0 },

992 
	#osWaôF‹SögÀObje˘
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
, \

993 
DWORD
))
aSysˇŒ
[63].
pCuºít
)

	)

995 #i‡!
SQLITE_OS_WINCE


996 { "WaôF‹SögÀObje˘Ex", (
SYSCALL
)
WaôF‹SögÀObje˘Ex
, 0 },

998 { "WaôF‹SögÀObje˘Ex", (
SYSCALL
)0, 0 },

1001 
	#osWaôF‹SögÀObje˘Ex
 ((
	`DWORD
(
WINAPI
*)(
HANDLE
,
DWORD
, \

1002 
BOOL
))
aSysˇŒ
[64].
pCuºít
)

	)

1004 #i‡
SQLITE_OS_WINRT


1005 { "SëFûePoöãrEx", (
SYSCALL
)
SëFûePoöãrEx
, 0 },

1007 { "SëFûePoöãrEx", (
SYSCALL
)0, 0 },

1010 
	#osSëFûePoöãrEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
,
LARGE_INTEGER
, \

1011 
PLARGE_INTEGER
,
DWORD
))
aSysˇŒ
[65].
pCuºít
)

	)

1013 #i‡
SQLITE_OS_WINRT


1014 { "GëFûeInf‹m©i⁄ByH™dÀEx", (
SYSCALL
)
GëFûeInf‹m©i⁄ByH™dÀEx
, 0 },

1016 { "GëFûeInf‹m©i⁄ByH™dÀEx", (
SYSCALL
)0, 0 },

1019 
	#osGëFûeInf‹m©i⁄ByH™dÀEx
 ((
	`BOOL
(
WINAPI
*)(
HANDLE
, \

1020 
FILE_INFO_BY_HANDLE_CLASS
,
LPVOID
,
DWORD
))
aSysˇŒ
[66].
pCuºít
)

	)

1022 #i‡
SQLITE_OS_WINRT
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

1023 { "M≠VõwOfFûeFromAµ", (
SYSCALL
)
M≠VõwOfFûeFromAµ
, 0 },

1025 { "M≠VõwOfFûeFromAµ", (
SYSCALL
)0, 0 },

1028 
	#osM≠VõwOfFûeFromAµ
 ((
	`LPVOID
(
WINAPI
*)(
HANDLE
,
ULONG
,
ULONG64
, \

1029 
SIZE_T
))
aSysˇŒ
[67].
pCuºít
)

	)

1031 #i‡
SQLITE_OS_WINRT


1032 { "Cª©eFûe2", (
SYSCALL
)
Cª©eFûe2
, 0 },

1034 { "Cª©eFûe2", (
SYSCALL
)0, 0 },

1037 
	#osCª©eFûe2
 ((
	`HANDLE
(
WINAPI
*)(
LPCWSTR
,
DWORD
,DWORD,DWORD, \

1038 
LPCREATEFILE2_EXTENDED_PARAMETERS
))
aSysˇŒ
[68].
pCuºít
)

	)

1040 #i‡
SQLITE_OS_WINRT
 && !
deföed
(
SQLITE_OMIT_LOAD_EXTENSION
)

1041 { "LﬂdPackagedLibøry", (
SYSCALL
)
LﬂdPackagedLibøry
, 0 },

1043 { "LﬂdPackagedLibøry", (
SYSCALL
)0, 0 },

1046 
	#osLﬂdPackagedLibøry
 ((
	`HMODULE
(
WINAPI
*)(
LPCWSTR
, \

1047 
DWORD
))
aSysˇŒ
[69].
pCuºít
)

	)

1049 #i‡
SQLITE_OS_WINRT


1050 { "GëTickCou¡64", (
SYSCALL
)
GëTickCou¡64
, 0 },

1052 { "GëTickCou¡64", (
SYSCALL
)0, 0 },

1055 
	#osGëTickCou¡64
 ((
	`ULONGLONG
(
WINAPI
*)(
VOID
))
aSysˇŒ
[70].
pCuºít
)

	)

1057 #i‡
SQLITE_OS_WINRT


1058 { "GëN©iveSy°emInfo", (
SYSCALL
)
GëN©iveSy°emInfo
, 0 },

1060 { "GëN©iveSy°emInfo", (
SYSCALL
)0, 0 },

1063 
	#osGëN©iveSy°emInfo
 ((
	`VOID
(
WINAPI
*)( \

1064 
LPSYSTEM_INFO
))
aSysˇŒ
[71].
pCuºít
)

	)

1066 #i‡
deföed
(
SQLITE_WIN32_HAS_ANSI
)

1067 { "OuçutDebugSåögA", (
SYSCALL
)
OuçutDebugSåögA
, 0 },

1069 { "OuçutDebugSåögA", (
SYSCALL
)0, 0 },

1072 
	#osOuçutDebugSåögA
 ((
	`VOID
(
WINAPI
*)(
LPCSTR
))
aSysˇŒ
[72].
pCuºít
)

	)

1074 #i‡
deföed
(
SQLITE_WIN32_HAS_WIDE
)

1075 { "OuçutDebugSåögW", (
SYSCALL
)
OuçutDebugSåögW
, 0 },

1077 { "OuçutDebugSåögW", (
SYSCALL
)0, 0 },

1080 
	#osOuçutDebugSåögW
 ((
	`VOID
(
WINAPI
*)(
LPCWSTR
))
aSysˇŒ
[73].
pCuºít
)

	)

1082 { "GëPro˚ssHóp", (
SYSCALL
)
GëPro˚ssHóp
, 0 },

1084 
	#osGëPro˚ssHóp
 ((
	`HANDLE
(
WINAPI
*)(
VOID
))
aSysˇŒ
[74].
pCuºít
)

	)

1086 #i‡
SQLITE_OS_WINRT
 && (!
deföed
(
SQLITE_OMIT_WAL
Ë|| 
SQLITE_MAX_MMAP_SIZE
>0)

1087 { "Cª©eFûeM≠pögFromAµ", (
SYSCALL
)
Cª©eFûeM≠pögFromAµ
, 0 },

1089 { "Cª©eFûeM≠pögFromAµ", (
SYSCALL
)0, 0 },

1092 
	#osCª©eFûeM≠pögFromAµ
 ((
	`HANDLE
(
WINAPI
*)(
HANDLE
, \

1093 
LPSECURITY_ATTRIBUTES
,
ULONG
,
ULONG64
,
LPCWSTR
))
aSysˇŒ
[75].
pCuºít
)

	)

1100 #i‡
deföed
(
I¡îlockedCom∑ªExch™ge
)

1101 { "I¡îlockedCom∑ªExch™ge", (
SYSCALL
)0, 0 },

1103 
	#osI¡îlockedCom∑ªExch™ge
 
I¡îlockedCom∑ªExch™ge


	)

1105 { "I¡îlockedCom∑ªExch™ge", (
SYSCALL
)
I¡îlockedCom∑ªExch™ge
, 0 },

1107 
	#osI¡îlockedCom∑ªExch™ge
 ((
	`LONG
(
WINAPI
*)(
LONG
 \

1108 
SQLITE_WIN32_VOLATILE
*, 
LONG
,LONG))
aSysˇŒ
[76].
pCuºít
)

	)

1111 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


1112 { "UuidCª©e", (
SYSCALL
)
UuidCª©e
, 0 },

1114 { "UuidCª©e", (
SYSCALL
)0, 0 },

1117 
	#osUuidCª©e
 ((
	`RPC_STATUS
(
RPC_ENTRY
*)(
UUID
*))
aSysˇŒ
[77].
pCuºít
)

	)

1119 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


1120 { "UuidCª©eSequítül", (
SYSCALL
)
UuidCª©eSequítül
, 0 },

1122 { "UuidCª©eSequítül", (
SYSCALL
)0, 0 },

1125 
	#osUuidCª©eSequítül
 \

1126 ((
	`RPC_STATUS
(
RPC_ENTRY
*)(
UUID
*))
aSysˇŒ
[78].
pCuºít
)

	)

1128 #i‡!
deföed
(
SQLITE_NO_SYNC
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

1129 { "FlushVõwOfFûe", (
SYSCALL
)
FlushVõwOfFûe
, 0 },

1131 { "FlushVõwOfFûe", (
SYSCALL
)0, 0 },

1134 
	#osFlushVõwOfFûe
 \

1135 ((
	`BOOL
(
WINAPI
*)(
LPCVOID
,
SIZE_T
))
aSysˇŒ
[79].
pCuºít
)

	)

1145 
	$wöSëSy°emCÆl
(

1146 
sqlôe3_vfs
 *
pNŸU£d
,

1147 c⁄° *
zName
,

1148 
sqlôe3_sysˇŒ_±r
 
pNewFunc


1150 
i
;

1151 
rc
 = 
SQLITE_NOTFOUND
;

1153 
	`UNUSED_PARAMETER
(
pNŸU£d
);

1154 if–
zName
==0 ){

1158 
rc
 = 
SQLITE_OK
;

1159 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1160 if–
aSysˇŒ
[
i
].
pDeÁu…
 ){

1161 
aSysˇŒ
[
i
].
pCuºít
 =áSysˇŒ[i].
pDeÁu…
;

1168 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1169 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ){

1170 if–
aSysˇŒ
[
i
].
pDeÁu…
==0 ){

1171 
aSysˇŒ
[
i
].
pDeÁu…
 =áSysˇŒ[i].
pCuºít
;

1173 
rc
 = 
SQLITE_OK
;

1174 if–
pNewFunc
==0 )ÖNewFun¯
aSysˇŒ
[
i
].
pDeÁu…
;

1175 
aSysˇŒ
[
i
].
pCuºít
 = 
pNewFunc
;

1180  
rc
;

1181 
	}
}

1188 
sqlôe3_sysˇŒ_±r
 
	$wöGëSy°emCÆl
(

1189 
sqlôe3_vfs
 *
pNŸU£d
,

1190 c⁄° *
zName


1192 
i
;

1194 
	`UNUSED_PARAMETER
(
pNŸU£d
);

1195 
i
=0; i<(
aSysˇŒ
)/(aSyscall[0]); i++){

1196 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) áSysˇŒ[i].
pCuºít
;

1199 
	}
}

1207 c⁄° *
	$wöNextSy°emCÆl
(
sqlôe3_vfs
 *
p
, c⁄° *
zName
){

1208 
i
 = -1;

1210 
	`UNUSED_PARAMETER
(
p
);

1211 if–
zName
 ){

1212 
i
=0; i<
	`AºaySize
(
aSysˇŒ
)-1; i++){

1213 if–
	`°rcmp
(
zName
, 
aSysˇŒ
[
i
].zName)==0 ) ;

1216 
i
++; i<
	`AºaySize
(
aSysˇŒ
); i++){

1217 if–
aSysˇŒ
[
i
].
pCuºít
!=0 ) áSysˇŒ[i].
zName
;

1220 
	}
}

1222 #ifde‡
SQLITE_WIN32_MALLOC


1230 
	$sqlôe3_wö32_com∑˘_hóp
(
LPUINT
 
≤L¨ge°
){

1231 
rc
 = 
SQLITE_OK
;

1232 
UINT
 
nL¨ge°
 = 0;

1233 
HANDLE
 
hHóp
;

1235 
	`wöMemAs£πMagic
();

1236 
hHóp
 = 
	`wöMemGëHóp
();

1237 
	`as£π
–
hHóp
!=0 );

1238 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1239 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1240 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1242 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


1243 if–(
nL¨ge°
=
	`osHópCom∑˘
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
))==0 ){

1244 
DWORD
 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

1245 if–
œ°Eºno
==
NO_ERROR
 ){

1246 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapCompact (no space), heap=%p",

1247 (*)
hHóp
);

1248 
rc
 = 
SQLITE_NOMEM_BKPT
;

1250 
	`sqlôe3_log
(
SQLITE_ERROR
, "failedÅo HeapCompact (%lu), heap=%p",

1251 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1252 
rc
 = 
SQLITE_ERROR
;

1256 
	`sqlôe3_log
(
SQLITE_NOTFOUND
, "failedÅo HeapCompact, heap=%p",

1257 (*)
hHóp
);

1258 
rc
 = 
SQLITE_NOTFOUND
;

1260 if–
≤L¨ge°
 ) *≤L¨ge° = 
nL¨ge°
;

1261  
rc
;

1262 
	}
}

1270 
	$sqlôe3_wö32_ª£t_hóp
(){

1271 
rc
;

1272 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMa°î
; )

1273 
	`MUTEX_LOGIC
–
sqlôe3_muãx
 *
pMem
; )

1274 
	`MUTEX_LOGIC
–
pMa°î
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MASTER
); )

1275 
	`MUTEX_LOGIC
–
pMem
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_MEM
); )

1276 
	`sqlôe3_muãx_íãr
(
pMa°î
);

1277 
	`sqlôe3_muãx_íãr
(
pMem
);

1278 
	`wöMemAs£πMagic
();

1279 if–
	`wöMemGëHóp
()!=
NULL
 && 
	`wöMemGëOw√d
(Ë&& 
	`sqlôe3_mem‹y_u£d
()==0 ){

1287 
	`as£π
–
	`wöMemGëHóp
()!=
NULL
 );

1288 
	`as£π
–
	`wöMemGëOw√d
() );

1289 
	`as£π
–
	`sqlôe3_mem‹y_u£d
()==0 );

1290 
	`wöMemShutdown
(
	`wöMemGëD©aPå
());

1291 
	`as£π
–
	`wöMemGëHóp
()==
NULL
 );

1292 
	`as£π
–!
	`wöMemGëOw√d
() );

1293 
	`as£π
–
	`sqlôe3_mem‹y_u£d
()==0 );

1294 
rc
 = 
	`wöMemInô
(
	`wöMemGëD©aPå
());

1295 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`wöMemGëHóp
()!=
NULL
 );

1296 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`wöMemGëOw√d
() );

1297 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`sqlôe3_mem‹y_u£d
()==0 );

1302 
rc
 = 
SQLITE_BUSY
;

1304 
	`sqlôe3_muãx_Àave
(
pMem
);

1305 
	`sqlôe3_muãx_Àave
(
pMa°î
);

1306  
rc
;

1307 
	}
}

1315 
	$sqlôe3_wö32_wrôe_debug
(c⁄° *
zBuf
, 
nBuf
){

1316 
zDbgBuf
[
SQLITE_WIN32_DBG_BUF_SIZE
];

1317 
nMö
 = 
	`MIN
(
nBuf
, (
SQLITE_WIN32_DBG_BUF_SIZE
 - 1));

1318 if–
nMö
<-1 )ÇMin = -1;

1319 
	`as£π
–
nMö
==-1 ||ÇMö==0 ||ÇMö<
SQLITE_WIN32_DBG_BUF_SIZE
 );

1320 #ifde‡
SQLITE_ENABLE_API_ARMOR


1321 if–!
zBuf
 ){

1322 ()
SQLITE_MISUSE_BKPT
;

1326 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

1327 if–
nMö
>0 ){

1328 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1329 
	`mem˝y
(
zDbgBuf
, 
zBuf
, 
nMö
);

1330 
	`osOuçutDebugSåögA
(
zDbgBuf
);

1332 
	`osOuçutDebugSåögA
(
zBuf
);

1334 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

1335 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1336 i‡–
	`osMu…iByãToWideCh¨
(

1337 
	`osAªFûeApisANSI
(Ë? 
CP_ACP
 : 
CP_OEMCP
, 0, 
zBuf
,

1338 
nMö
, (
LPWSTR
)
zDbgBuf
, 
SQLITE_WIN32_DBG_BUF_SIZE
/(
WCHAR
))<=0 ){

1341 
	`osOuçutDebugSåögW
((
LPCWSTR
)
zDbgBuf
);

1343 if–
nMö
>0 ){

1344 
	`mem£t
(
zDbgBuf
, 0, 
SQLITE_WIN32_DBG_BUF_SIZE
);

1345 
	`mem˝y
(
zDbgBuf
, 
zBuf
, 
nMö
);

1346 
	`Ârötf
(
°dîr
, "%s", 
zDbgBuf
);

1348 
	`Ârötf
(
°dîr
, "%s", 
zBuf
);

1351 
	}
}

1357 #i‡
SQLITE_OS_WINRT


1358 
HANDLE
 
	g¶ìpObj
 = 
NULL
;

1361 
	$sqlôe3_wö32_¶ìp
(
DWORD
 
mûli£c⁄ds
){

1362 #i‡
SQLITE_OS_WINRT


1363 i‡–
¶ìpObj
==
NULL
 ){

1364 
¶ìpObj
 = 
	`osCª©eEvítExW
(
NULL
, NULL, 
CREATE_EVENT_MANUAL_RESET
,

1365 
SYNCHRONIZE
);

1367 
	`as£π
–
¶ìpObj
!=
NULL
 );

1368 
	`osWaôF‹SögÀObje˘Ex
(
¶ìpObj
, 
mûli£c⁄ds
, 
FALSE
);

1370 
	`osSÀï
(
mûli£c⁄ds
);

1372 
	}
}

1374 #i‡
SQLITE_MAX_WORKER_THREADS
>0 && !
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && \

1375 
	gSQLITE_THREADSAFE
>0

1376 
DWORD
 
	$sqlôe3Wö32Waô
(
HANDLE
 
hObje˘
){

1377 
DWORD
 
rc
;

1378  (
rc
 = 
	`osWaôF‹SögÀObje˘Ex
(
hObje˘
, 
INFINITE
,

1379 
TRUE
))==
WAIT_IO_COMPLETION
 ){}

1380  
rc
;

1381 
	}
}

1396 #i‡!
SQLITE_WIN32_GETVERSIONEX


1397 
	#osIsNT
(Ë(1)

	)

1398 #ñi‡
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT
 || !
deföed
(
SQLITE_WIN32_HAS_ANSI
)

1399 
	#osIsNT
(Ë(1)

	)

1400 #ñi‡!
deföed
(
SQLITE_WIN32_HAS_WIDE
)

1401 
	#osIsNT
(Ë(0)

	)

1403 
	#osIsNT
(Ë((
sqlôe3_os_ty≥
==2Ë|| 
	`sqlôe3_wö32_is_¡
())

	)

1410 
	$sqlôe3_wö32_is_¡
(){

1411 #i‡
SQLITE_OS_WINRT


1417 #ñi‡
SQLITE_WIN32_GETVERSIONEX


1418 if–
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 0, 0)==0 ){

1419 #i‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
)

1420 
OSVERSIONINFOA
 
sInfo
;

1421 
sInfo
.
dwOSVîsi⁄InfoSize
 = (sInfo);

1422 
	`osGëVîsi⁄ExA
(&
sInfo
);

1423 
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
,

1424 (
sInfo
.
dwPœtf‹mId
 =
VER_PLATFORM_WIN32_NT
) ? 2 : 1, 0);

1425 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

1426 
OSVERSIONINFOW
 
sInfo
;

1427 
sInfo
.
dwOSVîsi⁄InfoSize
 = (sInfo);

1428 
	`osGëVîsi⁄ExW
(&
sInfo
);

1429 
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
,

1430 (
sInfo
.
dwPœtf‹mId
 =
VER_PLATFORM_WIN32_NT
) ? 2 : 1, 0);

1433  
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 2, 2)==2;

1434 #ñi‡
SQLITE_TEST


1435  
	`osI¡îlockedCom∑ªExch™ge
(&
sqlôe3_os_ty≥
, 2, 2)==2;

1443 
	}
}

1445 #ifde‡
SQLITE_WIN32_MALLOC


1449 *
	$wöMemMÆloc
(
nByãs
){

1450 
HANDLE
 
hHóp
;

1451 *
p
;

1453 
	`wöMemAs£πMagic
();

1454 
hHóp
 = 
	`wöMemGëHóp
();

1455 
	`as£π
–
hHóp
!=0 );

1456 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1457 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1458 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1460 
	`as£π
–
nByãs
>=0 );

1461 
p
 = 
	`osHópAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, (
SIZE_T
)
nByãs
);

1462 if–!
p
 ){

1463 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapAlloc %u bytes (%lu), heap=%p",

1464 
nByãs
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1466  
p
;

1467 
	}
}

1472 
	$wöMemFªe
(*
pPri‹
){

1473 
HANDLE
 
hHóp
;

1475 
	`wöMemAs£πMagic
();

1476 
hHóp
 = 
	`wöMemGëHóp
();

1477 
	`as£π
–
hHóp
!=0 );

1478 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1479 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1480 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) );

1482 if–!
pPri‹
 ) ;

1483 if–!
	`osHópFªe
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) ){

1484 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapFree block %p (%lu), heap=%p",

1485 
pPri‹
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1487 
	}
}

1492 *
	$wöMemRóŒoc
(*
pPri‹
, 
nByãs
){

1493 
HANDLE
 
hHóp
;

1494 *
p
;

1496 
	`wöMemAs£πMagic
();

1497 
hHóp
 = 
	`wöMemGëHóp
();

1498 
	`as£π
–
hHóp
!=0 );

1499 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1500 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1501 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
) );

1503 
	`as£π
–
nByãs
>=0 );

1504 if–!
pPri‹
 ){

1505 
p
 = 
	`osHópAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, (
SIZE_T
)
nByãs
);

1507 
p
 = 
	`osHópReAŒoc
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
pPri‹
, (
SIZE_T
)
nByãs
);

1509 if–!
p
 ){

1510 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo %s %u bytes (%lu), heap=%p",

1511 
pPri‹
 ? "HópReAŒoc" : "HópAŒoc", 
nByãs
, 
	`osGëLa°Eº‹
(),

1512 (*)
hHóp
);

1514  
p
;

1515 
	}
}

1520 
	$wöMemSize
(*
p
){

1521 
HANDLE
 
hHóp
;

1522 
SIZE_T
 
n
;

1524 
	`wöMemAs£πMagic
();

1525 
hHóp
 = 
	`wöMemGëHóp
();

1526 
	`as£π
–
hHóp
!=0 );

1527 
	`as£π
–
hHóp
!=
INVALID_HANDLE_VALUE
 );

1528 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1529 
	`as£π
–
	`osHópVÆid©e
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
p
) );

1531 if–!
p
 )  0;

1532 
n
 = 
	`osHópSize
(
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
p
);

1533 if–
n
==(
SIZE_T
)-1 ){

1534 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapSize block %p (%lu), heap=%p",

1535 
p
, 
	`osGëLa°Eº‹
(), (*)
hHóp
);

1538  ()
n
;

1539 
	}
}

1544 
	$wöMemRoundup
(
n
){

1545  
n
;

1546 
	}
}

1551 
	$wöMemInô
(*
pAµD©a
){

1552 
wöMemD©a
 *
pWöMemD©a
 = (wöMemD©®*)
pAµD©a
;

1554 if–!
pWöMemD©a
 )  
SQLITE_ERROR
;

1555 
	`as£π
–
pWöMemD©a
->
magic1
==
WINMEM_MAGIC1
 );

1556 
	`as£π
–
pWöMemD©a
->
magic2
==
WINMEM_MAGIC2
 );

1558 #i‡!
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_HEAP_CREATE


1559 if–!
pWöMemD©a
->
hHóp
 ){

1560 
DWORD
 
dwInôülSize
 = 
SQLITE_WIN32_HEAP_INIT_SIZE
;

1561 
DWORD
 
dwMaximumSize
 = (DWORD)
sqlôe3GlobÆC⁄fig
.
nHóp
;

1562 if–
dwMaximumSize
==0 ){

1563 
dwMaximumSize
 = 
SQLITE_WIN32_HEAP_MAX_SIZE
;

1564 }if–
dwInôülSize
>
dwMaximumSize
 ){

1565 
dwInôülSize
 = 
dwMaximumSize
;

1567 
pWöMemD©a
->
hHóp
 = 
	`osHópCª©e
(
SQLITE_WIN32_HEAP_FLAGS
,

1568 
dwInôülSize
, 
dwMaximumSize
);

1569 if–!
pWöMemD©a
->
hHóp
 ){

1570 
	`sqlôe3_log
(
SQLITE_NOMEM
,

1572 
	`osGëLa°Eº‹
(), 
SQLITE_WIN32_HEAP_FLAGS
, 
dwInôülSize
,

1573 
dwMaximumSize
);

1574  
SQLITE_NOMEM_BKPT
;

1576 
pWöMemD©a
->
bOw√d
 = 
TRUE
;

1577 
	`as£π
–
pWöMemD©a
->
bOw√d
 );

1580 
pWöMemD©a
->
hHóp
 = 
	`osGëPro˚ssHóp
();

1581 if–!
pWöMemD©a
->
hHóp
 ){

1582 
	`sqlôe3_log
(
SQLITE_NOMEM
,

1583 "ÁûedÅÿGëPro˚ssHó∞(%lu)", 
	`osGëLa°Eº‹
());

1584  
SQLITE_NOMEM_BKPT
;

1586 
pWöMemD©a
->
bOw√d
 = 
FALSE
;

1587 
	`as£π
–!
pWöMemD©a
->
bOw√d
 );

1589 
	`as£π
–
pWöMemD©a
->
hHóp
!=0 );

1590 
	`as£π
–
pWöMemD©a
->
hHóp
!=
INVALID_HANDLE_VALUE
 );

1591 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1592 
	`as£π
–
	`osHópVÆid©e
(
pWöMemD©a
->
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1594  
SQLITE_OK
;

1595 
	}
}

1600 
	$wöMemShutdown
(*
pAµD©a
){

1601 
wöMemD©a
 *
pWöMemD©a
 = (wöMemD©®*)
pAµD©a
;

1603 if–!
pWöMemD©a
 ) ;

1604 
	`as£π
–
pWöMemD©a
->
magic1
==
WINMEM_MAGIC1
 );

1605 
	`as£π
–
pWöMemD©a
->
magic2
==
WINMEM_MAGIC2
 );

1607 if–
pWöMemD©a
->
hHóp
 ){

1608 
	`as£π
–
pWöMemD©a
->
hHóp
!=
INVALID_HANDLE_VALUE
 );

1609 #i‡!
SQLITE_OS_WINRT
 && 
	`deföed
(
SQLITE_WIN32_MALLOC_VALIDATE
)

1610 
	`as£π
–
	`osHópVÆid©e
(
pWöMemD©a
->
hHóp
, 
SQLITE_WIN32_HEAP_FLAGS
, 
NULL
) );

1612 if–
pWöMemD©a
->
bOw√d
 ){

1613 if–!
	`osHópDe°roy
(
pWöMemD©a
->
hHóp
) ){

1614 
	`sqlôe3_log
(
SQLITE_NOMEM
, "failedÅo HeapDestroy (%lu), heap=%p",

1615 
	`osGëLa°Eº‹
(), (*)
pWöMemD©a
->
hHóp
);

1617 
pWöMemD©a
->
bOw√d
 = 
FALSE
;

1619 
pWöMemD©a
->
hHóp
 = 
NULL
;

1621 
	}
}

1631 c⁄° 
sqlôe3_mem_mëhods
 *
	$sqlôe3MemGëWö32
(){

1632 c⁄° 
sqlôe3_mem_mëhods
 
wöMemMëhods
 = {

1633 
wöMemMÆloc
,

1634 
wöMemFªe
,

1635 
wöMemRóŒoc
,

1636 
wöMemSize
,

1637 
wöMemRoundup
,

1638 
wöMemInô
,

1639 
wöMemShutdown
,

1640 &
wö_mem_d©a


1642  &
wöMemMëhods
;

1643 
	}
}

1645 
	$sqlôe3MemSëDeÁu…
(){

1646 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, 
	`sqlôe3MemGëWö32
());

1647 
	}
}

1655 
LPWSTR
 
	$wöUtf8ToUnicode
(c⁄° *
zText
){

1656 
nCh¨
;

1657 
LPWSTR
 
zWideText
;

1659 
nCh¨
 = 
	`osMu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zText
, -1, 
NULL
, 0);

1660 if–
nCh¨
==0 ){

1663 
zWideText
 = 
	`sqlôe3MÆlocZîo
–
nCh¨
*(
WCHAR
) );

1664 if–
zWideText
==0 ){

1667 
nCh¨
 = 
	`osMu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zText
, -1, 
zWideText
,

1668 
nCh¨
);

1669 if–
nCh¨
==0 ){

1670 
	`sqlôe3_‰ì
(
zWideText
);

1671 
zWideText
 = 0;

1673  
zWideText
;

1674 
	}
}

1681 *
	$wöUnicodeToUtf8
(
LPCWSTR
 
zWideText
){

1682 
nByã
;

1683 *
zText
;

1685 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
CP_UTF8
, 0, 
zWideText
, -1, 0, 0, 0, 0);

1686 if–
nByã
 == 0 ){

1689 
zText
 = 
	`sqlôe3MÆlocZîo
–
nByã
 );

1690 if–
zText
==0 ){

1693 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
CP_UTF8
, 0, 
zWideText
, -1, 
zText
,ÇByte,

1695 if–
nByã
 == 0 ){

1696 
	`sqlôe3_‰ì
(
zText
);

1697 
zText
 = 0;

1699  
zText
;

1700 
	}
}

1708 
LPWSTR
 
	$wöMbcsToUnicode
(c⁄° *
zText
, 
u£Ansi
){

1709 
nByã
;

1710 
LPWSTR
 
zMbcsText
;

1711 
codïage
 = 
u£Ansi
 ? 
CP_ACP
 : 
CP_OEMCP
;

1713 
nByã
 = 
	`osMu…iByãToWideCh¨
(
codïage
, 0, 
zText
, -1, 
NULL
,

1714 0)*(
WCHAR
);

1715 if–
nByã
==0 ){

1718 
zMbcsText
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(
WCHAR
) );

1719 if–
zMbcsText
==0 ){

1722 
nByã
 = 
	`osMu…iByãToWideCh¨
(
codïage
, 0, 
zText
, -1, 
zMbcsText
,

1723 
nByã
);

1724 if–
nByã
==0 ){

1725 
	`sqlôe3_‰ì
(
zMbcsText
);

1726 
zMbcsText
 = 0;

1728  
zMbcsText
;

1729 
	}
}

1737 *
	$wöUnicodeToMbcs
(
LPCWSTR
 
zWideText
, 
u£Ansi
){

1738 
nByã
;

1739 *
zText
;

1740 
codïage
 = 
u£Ansi
 ? 
CP_ACP
 : 
CP_OEMCP
;

1742 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
codïage
, 0, 
zWideText
, -1, 0, 0, 0, 0);

1743 if–
nByã
 == 0 ){

1746 
zText
 = 
	`sqlôe3MÆlocZîo
–
nByã
 );

1747 if–
zText
==0 ){

1750 
nByã
 = 
	`osWideCh¨ToMu…iByã
(
codïage
, 0, 
zWideText
, -1, 
zText
,

1751 
nByã
, 0, 0);

1752 if–
nByã
 == 0 ){

1753 
	`sqlôe3_‰ì
(
zText
);

1754 
zText
 = 0;

1756  
zText
;

1757 
	}
}

1764 *
	$wöMbcsToUtf8
(c⁄° *
zText
, 
u£Ansi
){

1765 *
zTextUtf8
;

1766 
LPWSTR
 
zTmpWide
;

1768 
zTmpWide
 = 
	`wöMbcsToUnicode
(
zText
, 
u£Ansi
);

1769 if–
zTmpWide
==0 ){

1772 
zTextUtf8
 = 
	`wöUnicodeToUtf8
(
zTmpWide
);

1773 
	`sqlôe3_‰ì
(
zTmpWide
);

1774  
zTextUtf8
;

1775 
	}
}

1782 *
	$wöUtf8ToMbcs
(c⁄° *
zText
, 
u£Ansi
){

1783 *
zTextMbcs
;

1784 
LPWSTR
 
zTmpWide
;

1786 
zTmpWide
 = 
	`wöUtf8ToUnicode
(
zText
);

1787 if–
zTmpWide
==0 ){

1790 
zTextMbcs
 = 
	`wöUnicodeToMbcs
(
zTmpWide
, 
u£Ansi
);

1791 
	`sqlôe3_‰ì
(
zTmpWide
);

1792  
zTextMbcs
;

1793 
	}
}

1798 
LPWSTR
 
	$sqlôe3_wö32_utf8_to_unicode
(c⁄° *
zText
){

1799 #ifde‡
SQLITE_ENABLE_API_ARMOR


1800 if–!
zText
 ){

1801 ()
SQLITE_MISUSE_BKPT
;

1805 #i‚de‡
SQLITE_OMIT_AUTOINIT


1806 if–
	`sqlôe3_öôülize
() )  0;

1808  
	`wöUtf8ToUnicode
(
zText
);

1809 
	}
}

1814 *
	$sqlôe3_wö32_unicode_to_utf8
(
LPCWSTR
 
zWideText
){

1815 #ifde‡
SQLITE_ENABLE_API_ARMOR


1816 if–!
zWideText
 ){

1817 ()
SQLITE_MISUSE_BKPT
;

1821 #i‚de‡
SQLITE_OMIT_AUTOINIT


1822 if–
	`sqlôe3_öôülize
() )  0;

1824  
	`wöUnicodeToUtf8
(
zWideText
);

1825 
	}
}

1830 *
	$sqlôe3_wö32_mbcs_to_utf8
(c⁄° *
zText
){

1831 #ifde‡
SQLITE_ENABLE_API_ARMOR


1832 if–!
zText
 ){

1833 ()
SQLITE_MISUSE_BKPT
;

1837 #i‚de‡
SQLITE_OMIT_AUTOINIT


1838 if–
	`sqlôe3_öôülize
() )  0;

1840  
	`wöMbcsToUtf8
(
zText
, 
	`osAªFûeApisANSI
());

1841 
	}
}

1846 *
	$sqlôe3_wö32_mbcs_to_utf8_v2
(c⁄° *
zText
, 
u£Ansi
){

1847 #ifde‡
SQLITE_ENABLE_API_ARMOR


1848 if–!
zText
 ){

1849 ()
SQLITE_MISUSE_BKPT
;

1853 #i‚de‡
SQLITE_OMIT_AUTOINIT


1854 if–
	`sqlôe3_öôülize
() )  0;

1856  
	`wöMbcsToUtf8
(
zText
, 
u£Ansi
);

1857 
	}
}

1862 *
	$sqlôe3_wö32_utf8_to_mbcs
(c⁄° *
zText
){

1863 #ifde‡
SQLITE_ENABLE_API_ARMOR


1864 if–!
zText
 ){

1865 ()
SQLITE_MISUSE_BKPT
;

1869 #i‚de‡
SQLITE_OMIT_AUTOINIT


1870 if–
	`sqlôe3_öôülize
() )  0;

1872  
	`wöUtf8ToMbcs
(
zText
, 
	`osAªFûeApisANSI
());

1873 
	}
}

1878 *
	$sqlôe3_wö32_utf8_to_mbcs_v2
(c⁄° *
zText
, 
u£Ansi
){

1879 #ifde‡
SQLITE_ENABLE_API_ARMOR


1880 if–!
zText
 ){

1881 ()
SQLITE_MISUSE_BKPT
;

1885 #i‚de‡
SQLITE_OMIT_AUTOINIT


1886 if–
	`sqlôe3_öôülize
() )  0;

1888  
	`wöUtf8ToMbcs
(
zText
, 
u£Ansi
);

1889 
	}
}

1898 
	$sqlôe3_wö32_£t_dúe˘‹y
(
DWORD
 
ty≥
, 
LPCWSTR
 
zVÆue
){

1899 **
µDúe˘‹y
 = 0;

1900 #i‚de‡
SQLITE_OMIT_AUTOINIT


1901 
rc
 = 
	`sqlôe3_öôülize
();

1902 if–
rc
 ) Ñc;

1904 if–
ty≥
==
SQLITE_WIN32_DATA_DIRECTORY_TYPE
 ){

1905 
µDúe˘‹y
 = &
sqlôe3_d©a_dúe˘‹y
;

1906 }if–
ty≥
==
SQLITE_WIN32_TEMP_DIRECTORY_TYPE
 ){

1907 
µDúe˘‹y
 = &
sqlôe3_ãmp_dúe˘‹y
;

1909 
	`as£π
–!
µDúe˘‹y
 || 
ty≥
==
SQLITE_WIN32_DATA_DIRECTORY_TYPE


1910 || 
ty≥
==
SQLITE_WIN32_TEMP_DIRECTORY_TYPE


1912 
	`as£π
–!
µDúe˘‹y
 || 
	`sqlôe3MemdebugHasTy≥
(*µDúe˘‹y, 
MEMTYPE_HEAP
) );

1913 if–
µDúe˘‹y
 ){

1914 *
zVÆueUtf8
 = 0;

1915 if–
zVÆue
 && zValue[0] ){

1916 
zVÆueUtf8
 = 
	`wöUnicodeToUtf8
(
zVÆue
);

1917 i‡–
zVÆueUtf8
==0 ){

1918  
SQLITE_NOMEM_BKPT
;

1921 
	`sqlôe3_‰ì
(*
µDúe˘‹y
);

1922 *
µDúe˘‹y
 = 
zVÆueUtf8
;

1923  
SQLITE_OK
;

1925  
SQLITE_ERROR
;

1926 
	}
}

1933 
	$wöGëLa°Eº‹Msg
(
DWORD
 
œ°Eºno
, 
nBuf
, *
zBuf
){

1938 
DWORD
 
dwLí
 = 0;

1939 *
zOut
 = 0;

1941 if–
	`osIsNT
() ){

1942 #i‡
SQLITE_OS_WINRT


1943 
WCHAR
 
zTempWide
[
SQLITE_WIN32_MAX_ERRMSG_CHARS
+1];

1944 
dwLí
 = 
	`osF‹m©MesßgeW
(
FORMAT_MESSAGE_FROM_SYSTEM
 |

1945 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1946 
NULL
,

1947 
œ°Eºno
,

1949 
zTempWide
,

1950 
SQLITE_WIN32_MAX_ERRMSG_CHARS
,

1953 
LPWSTR
 
zTempWide
 = 
NULL
;

1954 
dwLí
 = 
	`osF‹m©MesßgeW
(
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

1955 
FORMAT_MESSAGE_FROM_SYSTEM
 |

1956 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1957 
NULL
,

1958 
œ°Eºno
,

1960 (
LPWSTR
Ë&
zTempWide
,

1964 if–
dwLí
 > 0 ){

1966 
	`sqlôe3BegöBíignMÆloc
();

1967 
zOut
 = 
	`wöUnicodeToUtf8
(
zTempWide
);

1968 
	`sqlôe3EndBíignMÆloc
();

1969 #i‡!
SQLITE_OS_WINRT


1971 
	`osLoˇlFªe
(
zTempWide
);

1975 #ifde‡
SQLITE_WIN32_HAS_ANSI


1977 *
zTemp
 = 
NULL
;

1978 
dwLí
 = 
	`osF‹m©MesßgeA
(
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

1979 
FORMAT_MESSAGE_FROM_SYSTEM
 |

1980 
FORMAT_MESSAGE_IGNORE_INSERTS
,

1981 
NULL
,

1982 
œ°Eºno
,

1984 (
LPSTR
Ë&
zTemp
,

1987 if–
dwLí
 > 0 ){

1989 
	`sqlôe3BegöBíignMÆloc
();

1990 
zOut
 = 
	`wöMbcsToUtf8
(
zTemp
, 
	`osAªFûeApisANSI
());

1991 
	`sqlôe3EndBíignMÆloc
();

1993 
	`osLoˇlFªe
(
zTemp
);

1997 if–0 =
dwLí
 ){

1998 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "OsEº‹ 0x%lx (%lu)", 
œ°Eºno
,ÜastErrno);

2001 
	`sqlôe3_¢¥ötf
(
nBuf
, 
zBuf
, "%s", 
zOut
);

2003 
	`sqlôe3_‰ì
(
zOut
);

2006 
	}
}

2023 
	#wöLogEº‹
(
a
,
b
,
c
,
d
Ë
	`wöLogEº‹AtLöe
◊,b,c,d,
__LINE__
)

	)

2024 
	$wöLogEº‹AtLöe
(

2025 
îrcode
,

2026 
DWORD
 
œ°Eºno
,

2027 c⁄° *
zFunc
,

2028 c⁄° *
zP©h
,

2029 
iLöe


2031 
zMsg
[500];

2032 
i
;

2034 
zMsg
[0] = 0;

2035 
	`wöGëLa°Eº‹Msg
(
œ°Eºno
, (
zMsg
), zMsg);

2036 
	`as£π
–
îrcode
!=
SQLITE_OK
 );

2037 if–
zP©h
==0 ) zPath = "";

2038 
i
=0; 
zMsg
[i] && zMsg[i]!='\r' && zMsg[i]!='\n'; i++){}

2039 
zMsg
[
i
] = 0;

2040 
	`sqlôe3_log
(
îrcode
,

2042 
iLöe
, 
œ°Eºno
, 
zFunc
, 
zP©h
, 
zMsg


2045  
îrcode
;

2046 
	}
}

2054 #i‚de‡
SQLITE_WIN32_IOERR_RETRY


2055 
	#SQLITE_WIN32_IOERR_RETRY
 10

	)

2057 #i‚de‡
SQLITE_WIN32_IOERR_RETRY_DELAY


2058 
	#SQLITE_WIN32_IOERR_RETRY_DELAY
 25

	)

2060 
	gwöI€ºRëry
 = 
SQLITE_WIN32_IOERR_RETRY
;

2061 
	gwöI€ºRëryDñay
 = 
SQLITE_WIN32_IOERR_RETRY_DELAY
;

2079 #i‡!
deföed
(
wöI€ºC™Rëry1
)

2080 
	#wöI€ºC™Rëry1
(
a
Ë((◊)==
ERROR_ACCESS_DENIED
) || \

2081 ((
a
)==
ERROR_SHARING_VIOLATION
) || \

2082 ((
a
)==
ERROR_LOCK_VIOLATION
) || \

2083 ((
a
)==
ERROR_DEV_NOT_EXIST
) || \

2084 ((
a
)==
ERROR_NETNAME_DELETED
) || \

2085 ((
a
)==
ERROR_SEM_TIMEOUT
) || \

2086 ((
a
)==
ERROR_NETWORK_UNREACHABLE
))

	)

2094 
	$wöRëryI€º
(*
≤Rëry
, 
DWORD
 *
pEº‹
){

2095 
DWORD
 
e
 = 
	`osGëLa°Eº‹
();

2096 if–*
≤Rëry
>=
wöI€ºRëry
 ){

2097 if–
pEº‹
 ){

2098 *
pEº‹
 = 
e
;

2102 if–
	`wöI€ºC™Rëry1
(
e
) ){

2103 
	`sqlôe3_wö32_¶ìp
(
wöI€ºRëryDñay
*(1+*
≤Rëry
));

2104 ++*
≤Rëry
;

2107 #i‡
	`deföed
(
wöI€ºC™Rëry2
)

2108 if–
	`wöI€ºC™Rëry2
(
e
) ){

2109 
	`sqlôe3_wö32_¶ìp
(
wöI€ºRëryDñay
*(1+*
≤Rëry
));

2110 ++*
≤Rëry
;

2114 if–
pEº‹
 ){

2115 *
pEº‹
 = 
e
;

2118 
	}
}

2123 
	$wöLogI€º
(
nRëry
, 
löío
){

2124 if–
nRëry
 ){

2125 
	`sqlôe3_log
(
SQLITE_NOTICE
,

2127 
wöI€ºRëryDñay
*
nRëry
*“Rëry+1)/2, 
löío


2130 
	}
}

2136 #i‡!
deföed
(
SQLITE_OMIT_LOCALTIME
Ë&& deföed(
_WIN32_WCE
) && \

2137 (!
deföed
(
SQLITE_MSVC_LOCALTIME_API
Ë|| !
	gSQLITE_MSVC_LOCALTIME_API
)

2142 
	~<time.h
>

2143 
tm
 *
__cde˛
 
	$loˇ…ime
(c⁄° 
time_t
 *
t
)

2145 
tm
 
y
;

2146 
FILETIME
 
uTm
, 
lTm
;

2147 
SYSTEMTIME
 
pTm
;

2148 
sqlôe3_öt64
 
t64
;

2149 
t64
 = *
t
;

2150 
t64
 = (t64 + 11644473600)*10000000;

2151 
uTm
.
dwLowD©eTime
 = (
DWORD
)(
t64
 & 0xFFFFFFFF);

2152 
uTm
.
dwHighD©eTime
(
DWORD
)(
t64
 >> 32);

2153 
	`osFûeTimeToLoˇlFûeTime
(&
uTm
,&
lTm
);

2154 
	`osFûeTimeToSy°emTime
(&
lTm
,&
pTm
);

2155 
y
.
tm_yór
 = 
pTm
.
wYór
 - 1900;

2156 
y
.
tm_m⁄
 = 
pTm
.
wM⁄th
 - 1;

2157 
y
.
tm_wday
 = 
pTm
.
wDayOfWìk
;

2158 
y
.
tm_mday
 = 
pTm
.
wDay
;

2159 
y
.
tm_hour
 = 
pTm
.
wHour
;

2160 
y
.
tm_mö
 = 
pTm
.
wMöuã
;

2161 
y
.
tm_£c
 = 
pTm
.
wSec⁄d
;

2162  &
y
;

2163 
	}
}

2166 #i‡
SQLITE_OS_WINCE


2170 
	#HANDLE_TO_WINFILE
(
a
Ë(
wöFûe
*)&((*Ô)[-()
	`off£tof
(wöFûe,
h
)]

	)

2175 
	$wö˚MuãxAcquúe
(
HANDLE
 
h
){

2176 
DWORD
 
dwEº
;

2178 
dwEº
 = 
	`osWaôF‹SögÀObje˘
(
h
, 
INFINITE
);

2179 } 
dwEº
 !
WAIT_OBJECT_0
 && dwEº !
WAIT_ABANDONED
);

2180 
	}
}

2184 
	#wö˚MuãxRñó£
(
h
Ë
	`Rñó£Muãx
(h)

	)

2190 
	$wö˚Cª©eLock
(c⁄° *
zFûíame
, 
wöFûe
 *
pFûe
){

2191 
LPWSTR
 
zTok
;

2192 
LPWSTR
 
zName
;

2193 
DWORD
 
œ°Eºno
;

2194 
BOOL
 
bLogged
 = 
FALSE
;

2195 
BOOL
 
bInô
 = 
TRUE
;

2197 
zName
 = 
	`wöUtf8ToUnicode
(
zFûíame
);

2198 if–
zName
==0 ){

2200  
SQLITE_IOERR_NOMEM_BKPT
;

2204 
	`mem£t
(&
pFûe
->
loˇl
, 0, (pFile->local));

2208 
zTok
 = 
	`osCh¨LowîW
(
zName
);

2209 ;*
zTok
;zTok++){

2210 i‡(*
zTok
 == '\\') *zTok = '_';

2214 
pFûe
->
hMuãx
 = 
	`osCª©eMuãxW
(
NULL
, 
FALSE
, 
zName
);

2215 i‡(!
pFûe
->
hMuãx
){

2216 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2217 
	`sqlôe3_‰ì
(
zName
);

2218  
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2219 "wö˚Cª©eLock1", 
zFûíame
);

2223 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2229 
	`osCh¨UµîW
(
zName
);

2230 
pFûe
->
hSh¨ed
 = 
	`osCª©eFûeM≠pögW
(
INVALID_HANDLE_VALUE
, 
NULL
,

2231 
PAGE_READWRITE
, 0, (
wö˚Lock
),

2232 
zName
);

2236 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2237 i‡(
œ°Eºno
 =
ERROR_ALREADY_EXISTS
){

2238 
bInô
 = 
FALSE
;

2241 
	`sqlôe3_‰ì
(
zName
);

2244 if–
pFûe
->
hSh¨ed
 ){

2245 
pFûe
->
sh¨ed
 = (
wö˚Lock
*)
	`osM≠VõwOfFûe
’Fûe->
hSh¨ed
,

2246 
FILE_MAP_READ
|
FILE_MAP_WRITE
, 0, 0, (
wö˚Lock
));

2248 if–!
pFûe
->
sh¨ed
 ){

2249 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2250 
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2251 "wö˚Cª©eLock2", 
zFûíame
);

2252 
bLogged
 = 
TRUE
;

2253 
	`osClo£H™dÀ
(
pFûe
->
hSh¨ed
);

2254 
pFûe
->
hSh¨ed
 = 
NULL
;

2259 if–
pFûe
->
hSh¨ed
==
NULL
 ){

2260 if–!
bLogged
 ){

2261 
pFûe
->
œ°Eºno
 =ÜastErrno;

2262 
	`wöLogEº‹
(
SQLITE_IOERR
, 
pFûe
->
œ°Eºno
,

2263 "wö˚Cª©eLock3", 
zFûíame
);

2264 
bLogged
 = 
TRUE
;

2266 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2267 
	`osClo£H™dÀ
(
pFûe
->
hMuãx
);

2268 
pFûe
->
hMuãx
 = 
NULL
;

2269  
SQLITE_IOERR
;

2273 if–
bInô
 ){

2274 
	`mem£t
(
pFûe
->
sh¨ed
, 0, (
wö˚Lock
));

2277 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2278  
SQLITE_OK
;

2279 
	}
}

2284 
	$wö˚De°royLock
(
wöFûe
 *
pFûe
){

2285 i‡(
pFûe
->
hMuãx
){

2287 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2291 i‡(
pFûe
->
loˇl
.
nRódîs
){

2292 
pFûe
->
sh¨ed
->
nRódîs
 --;

2294 i‡(
pFûe
->
loˇl
.
bRe£rved
){

2295 
pFûe
->
sh¨ed
->
bRe£rved
 = 
FALSE
;

2297 i‡(
pFûe
->
loˇl
.
bPídög
){

2298 
pFûe
->
sh¨ed
->
bPídög
 = 
FALSE
;

2300 i‡(
pFûe
->
loˇl
.
bEx˛usive
){

2301 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
FALSE
;

2305 
	`osUnm≠VõwOfFûe
(
pFûe
->
sh¨ed
);

2306 
	`osClo£H™dÀ
(
pFûe
->
hSh¨ed
);

2309 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2310 
	`osClo£H™dÀ
(
pFûe
->
hMuãx
);

2311 
pFûe
->
hMuãx
 = 
NULL
;

2313 
	}
}

2318 
BOOL
 
	$wö˚LockFûe
(

2319 
LPHANDLE
 
phFûe
,

2320 
DWORD
 
dwFûeOff£tLow
,

2321 
DWORD
 
dwFûeOff£tHigh
,

2322 
DWORD
 
nNumbîOfByãsToLockLow
,

2323 
DWORD
 
nNumbîOfByãsToLockHigh


2325 
wöFûe
 *
pFûe
 = 
	`HANDLE_TO_WINFILE
(
phFûe
);

2326 
BOOL
 
bRëu∫
 = 
FALSE
;

2328 
	`UNUSED_PARAMETER
(
dwFûeOff£tHigh
);

2329 
	`UNUSED_PARAMETER
(
nNumbîOfByãsToLockHigh
);

2331 i‡(!
pFûe
->
hMuãx
Ë 
TRUE
;

2332 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2335 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST


2336 && 
nNumbîOfByãsToLockLow
 =(
DWORD
)
SHARED_SIZE
){

2337 i‡(
pFûe
->
sh¨ed
->
nRódîs
 =0 &&ÖFûe->sh¨ed->
bEx˛usive
 == 0){

2338 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
TRUE
;

2339 
pFûe
->
loˇl
.
bEx˛usive
 = 
TRUE
;

2340 
bRëu∫
 = 
TRUE
;

2345 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST
 &&

2346 
nNumbîOfByãsToLockLow
 == 1){

2347 i‡(
pFûe
->
sh¨ed
->
bEx˛usive
 == 0){

2348 
pFûe
->
loˇl
.
nRódîs
 ++;

2349 i‡(
pFûe
->
loˇl
.
nRódîs
 == 1){

2350 
pFûe
->
sh¨ed
->
nRódîs
 ++;

2352 
bRëu∫
 = 
TRUE
;

2357 i‡(
dwFûeOff£tLow
 =(
DWORD
)
PENDING_BYTE


2358 && 
nNumbîOfByãsToLockLow
 == 1){

2360 i‡(
pFûe
->
sh¨ed
->
bPídög
 == 0) {

2361 
pFûe
->
sh¨ed
->
bPídög
 = 
TRUE
;

2362 
pFûe
->
loˇl
.
bPídög
 = 
TRUE
;

2363 
bRëu∫
 = 
TRUE
;

2368 i‡(
dwFûeOff£tLow
 =(
DWORD
)
RESERVED_BYTE


2369 && 
nNumbîOfByãsToLockLow
 == 1){

2370 i‡(
pFûe
->
sh¨ed
->
bRe£rved
 == 0) {

2371 
pFûe
->
sh¨ed
->
bRe£rved
 = 
TRUE
;

2372 
pFûe
->
loˇl
.
bRe£rved
 = 
TRUE
;

2373 
bRëu∫
 = 
TRUE
;

2377 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2378  
bRëu∫
;

2379 
	}
}

2384 
BOOL
 
	$wö˚U∆ockFûe
(

2385 
LPHANDLE
 
phFûe
,

2386 
DWORD
 
dwFûeOff£tLow
,

2387 
DWORD
 
dwFûeOff£tHigh
,

2388 
DWORD
 
nNumbîOfByãsToU∆ockLow
,

2389 
DWORD
 
nNumbîOfByãsToU∆ockHigh


2391 
wöFûe
 *
pFûe
 = 
	`HANDLE_TO_WINFILE
(
phFûe
);

2392 
BOOL
 
bRëu∫
 = 
FALSE
;

2394 
	`UNUSED_PARAMETER
(
dwFûeOff£tHigh
);

2395 
	`UNUSED_PARAMETER
(
nNumbîOfByãsToU∆ockHigh
);

2397 i‡(!
pFûe
->
hMuãx
Ë 
TRUE
;

2398 
	`wö˚MuãxAcquúe
(
pFûe
->
hMuãx
);

2401 i‡(
dwFûeOff£tLow
 =(
DWORD
)
SHARED_FIRST
){

2403 i‡(
pFûe
->
loˇl
.
bEx˛usive
){

2404 
	`as£π
(
nNumbîOfByãsToU∆ockLow
 =(
DWORD
)
SHARED_SIZE
);

2405 
pFûe
->
loˇl
.
bEx˛usive
 = 
FALSE
;

2406 
pFûe
->
sh¨ed
->
bEx˛usive
 = 
FALSE
;

2407 
bRëu∫
 = 
TRUE
;

2411 i‡(
pFûe
->
loˇl
.
nRódîs
){

2412 
	`as£π
(
nNumbîOfByãsToU∆ockLow
 =(
DWORD
)
SHARED_SIZE


2413 || 
nNumbîOfByãsToU∆ockLow
 == 1);

2414 
pFûe
->
loˇl
.
nRódîs
 --;

2415 i‡(
pFûe
->
loˇl
.
nRódîs
 == 0)

2417 
pFûe
->
sh¨ed
->
nRódîs
 --;

2419 
bRëu∫
 = 
TRUE
;

2424 i‡(
dwFûeOff£tLow
 =(
DWORD
)
PENDING_BYTE


2425 && 
nNumbîOfByãsToU∆ockLow
 == 1){

2426 i‡(
pFûe
->
loˇl
.
bPídög
){

2427 
pFûe
->
loˇl
.
bPídög
 = 
FALSE
;

2428 
pFûe
->
sh¨ed
->
bPídög
 = 
FALSE
;

2429 
bRëu∫
 = 
TRUE
;

2433 i‡(
dwFûeOff£tLow
 =(
DWORD
)
RESERVED_BYTE


2434 && 
nNumbîOfByãsToU∆ockLow
 == 1){

2435 i‡(
pFûe
->
loˇl
.
bRe£rved
) {

2436 
pFûe
->
loˇl
.
bRe£rved
 = 
FALSE
;

2437 
pFûe
->
sh¨ed
->
bRe£rved
 = 
FALSE
;

2438 
bRëu∫
 = 
TRUE
;

2442 
	`wö˚MuãxRñó£
(
pFûe
->
hMuãx
);

2443  
bRëu∫
;

2444 
	}
}

2453 
BOOL
 
	$wöLockFûe
(

2454 
LPHANDLE
 
phFûe
,

2455 
DWORD
 
Êags
,

2456 
DWORD
 
off£tLow
,

2457 
DWORD
 
off£tHigh
,

2458 
DWORD
 
numByãsLow
,

2459 
DWORD
 
numByãsHigh


2461 #i‡
SQLITE_OS_WINCE


2466  
	`wö˚LockFûe
(
phFûe
, 
off£tLow
, 
off£tHigh
,

2467 
numByãsLow
, 
numByãsHigh
);

2469 if–
	`osIsNT
() ){

2470 
OVERLAPPED
 
ovÕ
;

2471 
	`mem£t
(&
ovÕ
, 0, (
OVERLAPPED
));

2472 
ovÕ
.
Off£t
 = 
off£tLow
;

2473 
ovÕ
.
Off£tHigh
 = 
off£tHigh
;

2474  
	`osLockFûeEx
(*
phFûe
, 
Êags
, 0, 
numByãsLow
, 
numByãsHigh
, &
ovÕ
);

2476  
	`osLockFûe
(*
phFûe
, 
off£tLow
, 
off£tHigh
, 
numByãsLow
,

2477 
numByãsHigh
);

2480 
	}
}

2485 
BOOL
 
	$wöU∆ockFûe
(

2486 
LPHANDLE
 
phFûe
,

2487 
DWORD
 
off£tLow
,

2488 
DWORD
 
off£tHigh
,

2489 
DWORD
 
numByãsLow
,

2490 
DWORD
 
numByãsHigh


2492 #i‡
SQLITE_OS_WINCE


2497  
	`wö˚U∆ockFûe
(
phFûe
, 
off£tLow
, 
off£tHigh
,

2498 
numByãsLow
, 
numByãsHigh
);

2500 if–
	`osIsNT
() ){

2501 
OVERLAPPED
 
ovÕ
;

2502 
	`mem£t
(&
ovÕ
, 0, (
OVERLAPPED
));

2503 
ovÕ
.
Off£t
 = 
off£tLow
;

2504 
ovÕ
.
Off£tHigh
 = 
off£tHigh
;

2505  
	`osU∆ockFûeEx
(*
phFûe
, 0, 
numByãsLow
, 
numByãsHigh
, &
ovÕ
);

2507  
	`osU∆ockFûe
(*
phFûe
, 
off£tLow
, 
off£tHigh
, 
numByãsLow
,

2508 
numByãsHigh
);

2511 
	}
}

2521 #i‚de‡
INVALID_SET_FILE_POINTER


2522 
	#INVALID_SET_FILE_POINTER
 ((
DWORD
)-1)

	)

2530 
	$wöSìkFûe
(
wöFûe
 *
pFûe
, 
sqlôe3_öt64
 
iOff£t
){

2531 #i‡!
SQLITE_OS_WINRT


2532 
LONG
 
uµîBôs
;

2533 
LONG
 
lowîBôs
;

2534 
DWORD
 
dwRë
;

2535 
DWORD
 
œ°Eºno
;

2537 
	`OSTRACE
(("SEEK fûe=%p, off£t=%Œd\n", 
pFûe
->
h
, 
iOff£t
));

2539 
uµîBôs
 = (
LONG
)((
iOff£t
>>32) & 0x7fffffff);

2540 
lowîBôs
 = (
LONG
)(
iOff£t
 & 0xffffffff);

2549 
dwRë
 = 
	`osSëFûePoöãr
(
pFûe
->
h
, 
lowîBôs
, &
uµîBôs
, 
FILE_BEGIN
);

2551 if–(
dwRë
==
INVALID_SET_FILE_POINTER


2552 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
NO_ERROR
)) ){

2553 
pFûe
->
œ°Eºno
 =ÜastErrno;

2554 
	`wöLogEº‹
(
SQLITE_IOERR_SEEK
, 
pFûe
->
œ°Eºno
,

2555 "wöSìkFûe", 
pFûe
->
zP©h
);

2556 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_IOERR_SEEK\n", 
pFûe
->
h
));

2560 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

2567 
LARGE_INTEGER
 
x
;

2568 
BOOL
 
bRë
;

2570 
x
.
QuadP¨t
 = 
iOff£t
;

2571 
bRë
 = 
	`osSëFûePoöãrEx
(
pFûe
->
h
, 
x
, 0, 
FILE_BEGIN
);

2573 if(!
bRë
){

2574 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2575 
	`wöLogEº‹
(
SQLITE_IOERR_SEEK
, 
pFûe
->
œ°Eºno
,

2576 "wöSìkFûe", 
pFûe
->
zP©h
);

2577 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_IOERR_SEEK\n", 
pFûe
->
h
));

2581 
	`OSTRACE
(("SEEK fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

2584 
	}
}

2586 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2588 
wöM≠fûe
(
wöFûe
*, 
sqlôe3_öt64
);

2589 
wöUnm≠fûe
(
wöFûe
*);

2602 
	#MX_CLOSE_ATTEMPT
 3

	)

2603 
	$wöClo£
(
sqlôe3_fûe
 *
id
){

2604 
rc
, 
˙t
 = 0;

2605 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2607 
	`as£π
–
id
!=0 );

2608 #i‚de‡
SQLITE_OMIT_WAL


2609 
	`as£π
–
pFûe
->
pShm
==0 );

2611 
	`as£π
–
pFûe
->
h
!=
NULL
 &&ÖFûe->h!=
INVALID_HANDLE_VALUE
 );

2612 
	`OSTRACE
(("CLOSEÖid=%lu,ÖFile=%p, file=%p\n",

2613 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2615 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2616 
	`wöUnm≠fûe
(
pFûe
);

2620 
rc
 = 
	`osClo£H™dÀ
(
pFûe
->
h
);

2622 } 
rc
==0 && ++
˙t
 < 
MX_CLOSE_ATTEMPT
 && (
	`sqlôe3_wö32_¶ìp
(100), 1) );

2623 #i‡
SQLITE_OS_WINCE


2624 
	#WINCE_DELETION_ATTEMPTS
 3

	)

2626 
wöVfsAµD©a
 *
pAµD©a
 = (wöVfsAµD©a*)
pFûe
->
pVfs
->pAppData;

2627 if–
pAµD©a
==
NULL
 || !pAµD©a->
bNoLock
 ){

2628 
	`wö˚De°royLock
(
pFûe
);

2631 if–
pFûe
->
zDñëeOnClo£
 ){

2632 
˙t
 = 0;

2634 
	`osDñëeFûeW
(
pFûe
->
zDñëeOnClo£
)==0

2635 && 
	`osGëFûeAâribuãsW
(
pFûe
->
zDñëeOnClo£
)!=0xffffffff

2636 && 
˙t
++ < 
WINCE_DELETION_ATTEMPTS


2638 
	`sqlôe3_wö32_¶ìp
(100);

2640 
	`sqlôe3_‰ì
(
pFûe
->
zDñëeOnClo£
);

2643 if–
rc
 ){

2644 
pFûe
->
h
 = 
NULL
;

2646 
	`O≥nCou¡î
(-1);

2647 
	`OSTRACE
(("CLOSEÖid=%lu,ÖFile=%p, file=%p,Ñc=%s\n",

2648 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
rc
 ? "ok" : "failed"));

2649  
rc
 ? 
SQLITE_OK


2650 : 
	`wöLogEº‹
(
SQLITE_IOERR_CLOSE
, 
	`osGëLa°Eº‹
(),

2651 "wöClo£", 
pFûe
->
zP©h
);

2652 
	}
}

2659 
	$wöRód
(

2660 
sqlôe3_fûe
 *
id
,

2661 *
pBuf
,

2662 
amt
,

2663 
sqlôe3_öt64
 
off£t


2665 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2666 
OVERLAPPED
 
ovîœµed
;

2668 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2669 
DWORD
 
nRód
;

2670 
nRëry
 = 0;

2672 
	`as£π
–
id
!=0 );

2673 
	`as£π
–
amt
>0 );

2674 
	`as£π
–
off£t
>=0 );

2675 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_READ
);

2676 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p, buffer=%p,ámount=%d, "

2677 "off£t=%Œd,Üock=%d\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

2678 
pFûe
->
h
, 
pBuf
, 
amt
, 
off£t
,ÖFûe->
lockty≥
));

2680 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2683 if–
off£t
<
pFûe
->
mm≠Size
 ){

2684 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

2685 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
amt
);

2686 
	`OSTRACE
(("READ-MMAPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2687 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2688  
SQLITE_OK
;

2690 
nC›y
 = ()(
pFûe
->
mm≠Size
 - 
off£t
);

2691 
	`mem˝y
(
pBuf
, &((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
nC›y
);

2692 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

2693 
amt
 -
nC›y
;

2694 
off£t
 +
nC›y
;

2699 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2700 if–
	`wöSìkFûe
(
pFûe
, 
off£t
) ){

2701 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_FULL\n",

2702 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2703  
SQLITE_FULL
;

2705  !
	`osRódFûe
(
pFûe
->
h
, 
pBuf
, 
amt
, &
nRód
, 0) ){

2707 
	`mem£t
(&
ovîœµed
, 0, (
OVERLAPPED
));

2708 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2709 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2710  !
	`osRódFûe
(
pFûe
->
h
, 
pBuf
, 
amt
, &
nRód
, &
ovîœµed
) &&

2711 
	`osGëLa°Eº‹
()!=
ERROR_HANDLE_EOF
 ){

2713 
DWORD
 
œ°Eºno
;

2714 if–
	`wöRëryI€º
(&
nRëry
, &
œ°Eºno
) ) ;

2715 
pFûe
->
œ°Eºno
 =ÜastErrno;

2716 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_READ\n",

2717 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2718  
	`wöLogEº‹
(
SQLITE_IOERR_READ
, 
pFûe
->
œ°Eºno
,

2719 "wöRód", 
pFûe
->
zP©h
);

2721 
	`wöLogI€º
(
nRëry
, 
__LINE__
);

2722 if–
nRód
<(
DWORD
)
amt
 ){

2724 
	`mem£t
(&((*)
pBuf
)[
nRód
], 0, 
amt
-nRead);

2725 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_SHORT_READ\n",

2726 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2727  
SQLITE_IOERR_SHORT_READ
;

2730 
	`OSTRACE
(("READÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2731 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2732  
SQLITE_OK
;

2733 
	}
}

2739 
	$wöWrôe
(

2740 
sqlôe3_fûe
 *
id
,

2741 c⁄° *
pBuf
,

2742 
amt
,

2743 
sqlôe3_öt64
 
off£t


2745 
rc
 = 0;

2746 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2747 
nRëry
 = 0;

2749 
	`as£π
–
amt
>0 );

2750 
	`as£π
–
pFûe
 );

2751 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_WRITE
);

2752 
	`SimuœãDiskfuŒEº‹
( 
SQLITE_FULL
);

2754 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p, buffer=%p,ámount=%d, "

2755 "off£t=%Œd,Üock=%d\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

2756 
pFûe
->
h
, 
pBuf
, 
amt
, 
off£t
,ÖFûe->
lockty≥
));

2758 #i‡
	`deföed
(
SQLITE_MMAP_READWRITE
Ë&& 
SQLITE_MAX_MMAP_SIZE
>0

2761 if–
off£t
<
pFûe
->
mm≠Size
 ){

2762 if–
off£t
+
amt
 <
pFûe
->
mm≠Size
 ){

2763 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
amt
);

2764 
	`OSTRACE
(("WRITE-MMAPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2765 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2766  
SQLITE_OK
;

2768 
nC›y
 = ()(
pFûe
->
mm≠Size
 - 
off£t
);

2769 
	`mem˝y
(&((
u8
 *)(
pFûe
->
pM≠Regi⁄
))[
off£t
], 
pBuf
, 
nC›y
);

2770 
pBuf
 = &((
u8
 *ÌBuf)[
nC›y
];

2771 
amt
 -
nC›y
;

2772 
off£t
 +
nC›y
;

2777 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2778 
rc
 = 
	`wöSìkFûe
(
pFûe
, 
off£t
);

2779 if–
rc
==0 ){

2783 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2784 
OVERLAPPED
 
ovîœµed
;

2786 
u8
 *
aRem
 = (u8 *)
pBuf
;

2787 
nRem
 = 
amt
;

2788 
DWORD
 
nWrôe
;

2789 
DWORD
 
œ°Eºno
 = 
NO_ERROR
;

2791 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2792 
	`mem£t
(&
ovîœµed
, 0, (
OVERLAPPED
));

2793 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2794 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2797  
nRem
>0 ){

2798 #i‡
SQLITE_OS_WINCE
 || 
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2799 if–!
	`osWrôeFûe
(
pFûe
->
h
, 
aRem
, 
nRem
, &
nWrôe
, 0) ){

2801 if–!
	`osWrôeFûe
(
pFûe
->
h
, 
aRem
, 
nRem
, &
nWrôe
, &
ovîœµed
) ){

2803 if–
	`wöRëryI€º
(&
nRëry
, &
œ°Eºno
) ) ;

2806 
	`as£π
–
nWrôe
==0 ||ÇWrôe<=(
DWORD
)
nRem
 );

2807 if–
nWrôe
==0 ||ÇWrôe>(
DWORD
)
nRem
 ){

2808 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2811 #i‡!
SQLITE_OS_WINCE
 && !
	`deföed
(
SQLITE_WIN32_NO_OVERLAPPED
)

2812 
off£t
 +
nWrôe
;

2813 
ovîœµed
.
Off£t
 = (
LONG
)(
off£t
 & 0xffffffff);

2814 
ovîœµed
.
Off£tHigh
 = (
LONG
)((
off£t
>>32) & 0x7fffffff);

2816 
aRem
 +
nWrôe
;

2817 
nRem
 -
nWrôe
;

2819 if–
nRem
>0 ){

2820 
pFûe
->
œ°Eºno
 =ÜastErrno;

2821 
rc
 = 1;

2825 if–
rc
 ){

2826 if––
pFûe
->
œ°Eºno
==
ERROR_HANDLE_DISK_FULL
 )

2827 || ( 
pFûe
->
œ°Eºno
==
ERROR_DISK_FULL
 )){

2828 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_FULL\n",

2829 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2830  
	`wöLogEº‹
(
SQLITE_FULL
, 
pFûe
->
œ°Eºno
,

2831 "wöWrôe1", 
pFûe
->
zP©h
);

2833 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_WRITE\n",

2834 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2835  
	`wöLogEº‹
(
SQLITE_IOERR_WRITE
, 
pFûe
->
œ°Eºno
,

2836 "wöWrôe2", 
pFûe
->
zP©h
);

2838 
	`wöLogI€º
(
nRëry
, 
__LINE__
);

2840 
	`OSTRACE
(("WRITEÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2841 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2842  
SQLITE_OK
;

2843 
	}
}

2848 
	$wöTrunˇã
(
sqlôe3_fûe
 *
id
, 
sqlôe3_öt64
 
nByã
){

2849 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2850 
rc
 = 
SQLITE_OK
;

2851 
DWORD
 
œ°Eºno
;

2853 
	`as£π
–
pFûe
 );

2854 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_TRUNCATE
);

2855 
	`OSTRACE
(("TRUNCATEÖid=%lu,ÖFile=%p, file=%p, size=%lld,Üock=%d\n",

2856 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
nByã
,ÖFûe->
lockty≥
));

2863 if–
pFûe
->
szChunk
>0 ){

2864 
nByã
 = (“Byã + 
pFûe
->
szChunk
 - 1)/pFile->szChunk) *ÖFile->szChunk;

2868 if–
	`wöSìkFûe
(
pFûe
, 
nByã
) ){

2869 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_TRUNCATE
, 
pFûe
->
œ°Eºno
,

2870 "wöTrunˇã1", 
pFûe
->
zP©h
);

2871 }if–0==
	`osSëEndOfFûe
(
pFûe
->
h
) &&

2872 ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
ERROR_USER_MAPPED_FILE
) ){

2873 
pFûe
->
œ°Eºno
 =ÜastErrno;

2874 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_TRUNCATE
, 
pFûe
->
œ°Eºno
,

2875 "wöTrunˇã2", 
pFûe
->
zP©h
);

2878 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2883 if–
pFûe
->
pM≠Regi⁄
 && 
nByã
<pFûe->
mm≠Size
 ){

2884 
pFûe
->
mm≠Size
 = 
nByã
;

2888 
	`OSTRACE
(("TRUNCATEÖid=%lu,ÖFile=%p, file=%p,Ñc=%s\n",

2889 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
	`sqlôe3EºName
(
rc
)));

2890  
rc
;

2891 
	}
}

2893 #ifde‡
SQLITE_TEST


2898 
	gsqlôe3_sync_cou¡
 = 0;

2899 
	gsqlôe3_fuŒsync_cou¡
 = 0;

2905 
	$wöSync
(
sqlôe3_fûe
 *
id
, 
Êags
){

2906 #i‚de‡
SQLITE_NO_SYNC


2910 
BOOL
 
rc
;

2912 #i‡!
	`deföed
(
NDEBUG
Ë|| !deföed(
SQLITE_NO_SYNC
) || \

2913 
	`deföed
(
SQLITE_HAVE_OS_TRACE
)

2918 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2920 
	`UNUSED_PARAMETER
(
id
);

2923 
	`as£π
–
pFûe
 );

2925 
	`as£π
((
Êags
&0x0F)==
SQLITE_SYNC_NORMAL


2926 || (
Êags
&0x0F)==
SQLITE_SYNC_FULL


2932 
	`SimuœãDiskfuŒEº‹
– 
SQLITE_FULL
 );

2934 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p, flags=%x,Üock=%d\n",

2935 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
, 
Êags
,

2936 
pFûe
->
lockty≥
));

2938 #i‚de‡
SQLITE_TEST


2939 
	`UNUSED_PARAMETER
(
Êags
);

2941 if–(
Êags
&0x0F)==
SQLITE_SYNC_FULL
 ){

2942 
sqlôe3_fuŒsync_cou¡
++;

2944 
sqlôe3_sync_cou¡
++;

2950 #ifde‡
SQLITE_NO_SYNC


2951 
	`OSTRACE
(("SYNC-NOPÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2952 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2953  
SQLITE_OK
;

2955 #i‡
SQLITE_MAX_MMAP_SIZE
>0

2956 if–
pFûe
->
pM≠Regi⁄
 ){

2957 if–
	`osFlushVõwOfFûe
(
pFûe
->
pM≠Regi⁄
, 0) ){

2958 
	`OSTRACE
(("SYNC-MMAPÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

2959 "rc=SQLITE_OK\n", 
	`osGëCuºítPro˚ssId
(),

2960 
pFûe
,ÖFûe->
pM≠Regi⁄
));

2962 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2963 
	`OSTRACE
(("SYNC-MMAPÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

2964 "rc=SQLITE_IOERR_MMAP\n", 
	`osGëCuºítPro˚ssId
(),

2965 
pFûe
,ÖFûe->
pM≠Regi⁄
));

2966  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

2967 "wöSync1", 
pFûe
->
zP©h
);

2971 
rc
 = 
	`osFlushFûeBuf„rs
(
pFûe
->
h
);

2972 
	`SimuœãIOEº‹
–
rc
=
FALSE
 );

2973 if–
rc
 ){

2974 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_OK\n",

2975 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2976  
SQLITE_OK
;

2978 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

2979 
	`OSTRACE
(("SYNCÖid=%lu,ÖFile=%p, file=%p,Ñc=SQLITE_IOERR_FSYNC\n",

2980 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
h
));

2981  
	`wöLogEº‹
(
SQLITE_IOERR_FSYNC
, 
pFûe
->
œ°Eºno
,

2982 "wöSync2", 
pFûe
->
zP©h
);

2985 
	}
}

2990 
	$wöFûeSize
(
sqlôe3_fûe
 *
id
, 
sqlôe3_öt64
 *
pSize
){

2991 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

2992 
rc
 = 
SQLITE_OK
;

2994 
	`as£π
–
id
!=0 );

2995 
	`as£π
–
pSize
!=0 );

2996 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_FSTAT
);

2997 
	`OSTRACE
(("SIZE fûe=%p,ÖSize=%p\n", 
pFûe
->
h
, 
pSize
));

2999 #i‡
SQLITE_OS_WINRT


3001 
FILE_STANDARD_INFO
 
öfo
;

3002 if–
	`osGëFûeInf‹m©i⁄ByH™dÀEx
(
pFûe
->
h
, 
FûeSènd¨dInfo
,

3003 &
öfo
, (info)) ){

3004 *
pSize
 = 
öfo
.
EndOfFûe
.
QuadP¨t
;

3006 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3007 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_FSTAT
, 
pFûe
->
œ°Eºno
,

3008 "wöFûeSize", 
pFûe
->
zP©h
);

3013 
DWORD
 
uµîBôs
;

3014 
DWORD
 
lowîBôs
;

3015 
DWORD
 
œ°Eºno
;

3017 
lowîBôs
 = 
	`osGëFûeSize
(
pFûe
->
h
, &
uµîBôs
);

3018 *
pSize
 = (((
sqlôe3_öt64
)
uµîBôs
)<<32Ë+ 
lowîBôs
;

3019 if–(
lowîBôs
 =
INVALID_FILE_SIZE
)

3020 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
NO_ERROR
) ){

3021 
pFûe
->
œ°Eºno
 =ÜastErrno;

3022 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_FSTAT
, 
pFûe
->
œ°Eºno
,

3023 "wöFûeSize", 
pFûe
->
zP©h
);

3027 
	`OSTRACE
(("SIZE file=%p,ÖSize=%p, *pSize=%lld,Ñc=%s\n",

3028 
pFûe
->
h
, 
pSize
, *pSize, 
	`sqlôe3EºName
(
rc
)));

3029  
rc
;

3030 
	}
}

3035 #i‚de‡
LOCKFILE_FAIL_IMMEDIATELY


3036 
	#LOCKFILE_FAIL_IMMEDIATELY
 1

	)

3039 #i‚de‡
LOCKFILE_EXCLUSIVE_LOCK


3040 
	#LOCKFILE_EXCLUSIVE_LOCK
 2

	)

3050 #i‚de‡
SQLITE_LOCKFILE_FLAGS


3051 
	#SQLITE_LOCKFILE_FLAGS
 (
LOCKFILE_FAIL_IMMEDIATELY
 | \

3052 
LOCKFILE_EXCLUSIVE_LOCK
)

	)

3059 #i‚de‡
SQLITE_LOCKFILEEX_FLAGS


3060 
	#SQLITE_LOCKFILEEX_FLAGS
 (
LOCKFILE_FAIL_IMMEDIATELY
)

	)

3068 
	$wöGëRódLock
(
wöFûe
 *
pFûe
){

3069 
ªs
;

3070 
	`OSTRACE
(("READ-LOCK fûe=%p,Üock=%d\n", 
pFûe
->
h
,ÖFûe->
lockty≥
));

3071 if–
	`osIsNT
() ){

3072 #i‡
SQLITE_OS_WINCE


3077 
ªs
 = 
	`wö˚LockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 1, 0);

3079 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILEEX_FLAGS
, 
SHARED_FIRST
, 0,

3080 
SHARED_SIZE
, 0);

3083 #ifde‡
SQLITE_WIN32_HAS_ANSI


3085 
lk
;

3086 
	`sqlôe3_øndom√ss
((
lk
), &lk);

3087 
pFûe
->
sh¨edLockByã
 = ()((
lk
 & 0x7fffffff)%(
SHARED_SIZE
 - 1));

3088 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
,

3089 
SHARED_FIRST
+
pFûe
->
sh¨edLockByã
, 0, 1, 0);

3092 if–
ªs
 == 0 ){

3093 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3096 
	`OSTRACE
(("READ-LOCK fûe=%p,Ñesu…=%d\n", 
pFûe
->
h
, 
ªs
));

3097  
ªs
;

3098 
	}
}

3103 
	$wöU∆ockRódLock
(
wöFûe
 *
pFûe
){

3104 
ªs
;

3105 
DWORD
 
œ°Eºno
;

3106 
	`OSTRACE
(("READ-UNLOCK fûe=%p,Üock=%d\n", 
pFûe
->
h
,ÖFûe->
lockty≥
));

3107 if–
	`osIsNT
() ){

3108 
ªs
 = 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 
SHARED_SIZE
, 0);

3110 #ifde‡
SQLITE_WIN32_HAS_ANSI


3112 
ªs
 = 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
+pFûe->
sh¨edLockByã
, 0, 1, 0);

3115 if–
ªs
==0 && ((
œ°Eºno
 = 
	`osGëLa°Eº‹
())!=
ERROR_NOT_LOCKED
) ){

3116 
pFûe
->
œ°Eºno
 =ÜastErrno;

3117 
	`wöLogEº‹
(
SQLITE_IOERR_UNLOCK
, 
pFûe
->
œ°Eºno
,

3118 "wöU∆ockRódLock", 
pFûe
->
zP©h
);

3120 
	`OSTRACE
(("READ-UNLOCK fûe=%p,Ñesu…=%d\n", 
pFûe
->
h
, 
ªs
));

3121  
ªs
;

3122 
	}
}

3150 
	$wöLock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3151 
rc
 = 
SQLITE_OK
;

3152 
ªs
 = 1;

3153 
√wLockty≥
;

3154 
gŸPídögLock
 = 0;

3155 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3156 
DWORD
 
œ°Eºno
 = 
NO_ERROR
;

3158 
	`as£π
–
id
!=0 );

3159 
	`OSTRACE
(("LOCK file=%p, oldLock=%d(%d),ÇewLock=%d\n",

3160 
pFûe
->
h
,ÖFûe->
lockty≥
,ÖFûe->
sh¨edLockByã
,Üocktype));

3166 if–
pFûe
->
lockty≥
>=locktype ){

3167 
	`OSTRACE
(("LOCK-HELD fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3168  
SQLITE_OK
;

3173 if–(
pFûe
->
˘æFœgs
 & 
WINFILE_RDONLY
)!=0 && 
lockty≥
>=
RESERVED_LOCK
 ){

3174  
SQLITE_IOERR_LOCK
;

3179 
	`as£π
–
pFûe
->
lockty≥
!=
NO_LOCK
 ||Üockty≥==
SHARED_LOCK
 );

3180 
	`as£π
–
lockty≥
!=
PENDING_LOCK
 );

3181 
	`as£π
–
lockty≥
!=
RESERVED_LOCK
 || 
pFûe
->lockty≥==
SHARED_LOCK
 );

3187 
√wLockty≥
 = 
pFûe
->
lockty≥
;

3188 if–
pFûe
->
lockty≥
==
NO_LOCK


3189 || (
lockty≥
==
EXCLUSIVE_LOCK
 && 
pFûe
->lockty≥<=
RESERVED_LOCK
)

3191 
˙t
 = 3;

3192  
˙t
-->0 && (
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
,

3193 
PENDING_BYTE
, 0, 1, 0))==0 ){

3200 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3201 
	`OSTRACE
(("LOCK-PENDING-FAIL file=%p, count=%d,Ñesult=%d\n",

3202 
pFûe
->
h
, 
˙t
, 
ªs
));

3203 if–
œ°Eºno
==
ERROR_INVALID_HANDLE
 ){

3204 
pFûe
->
œ°Eºno
 =ÜastErrno;

3205 
rc
 = 
SQLITE_IOERR_LOCK
;

3206 
	`OSTRACE
(("LOCK-FAIL file=%p, count=%d,Ñc=%s\n",

3207 
pFûe
->
h
, 
˙t
, 
	`sqlôe3EºName
(
rc
)));

3208  
rc
;

3210 if–
˙t
 ) 
	`sqlôe3_wö32_¶ìp
(1);

3212 
gŸPídögLock
 = 
ªs
;

3213 if–!
ªs
 ){

3214 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3220 if–
lockty≥
==
SHARED_LOCK
 && 
ªs
 ){

3221 
	`as£π
–
pFûe
->
lockty≥
==
NO_LOCK
 );

3222 
ªs
 = 
	`wöGëRódLock
(
pFûe
);

3223 if–
ªs
 ){

3224 
√wLockty≥
 = 
SHARED_LOCK
;

3226 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3232 if–
lockty≥
==
RESERVED_LOCK
 && 
ªs
 ){

3233 
	`as£π
–
pFûe
->
lockty≥
==
SHARED_LOCK
 );

3234 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
, 
RESERVED_BYTE
, 0, 1, 0);

3235 if–
ªs
 ){

3236 
√wLockty≥
 = 
RESERVED_LOCK
;

3238 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3244 if–
lockty≥
==
EXCLUSIVE_LOCK
 && 
ªs
 ){

3245 
√wLockty≥
 = 
PENDING_LOCK
;

3246 
gŸPídögLock
 = 0;

3251 if–
lockty≥
==
EXCLUSIVE_LOCK
 && 
ªs
 ){

3252 
	`as£π
–
pFûe
->
lockty≥
>=
SHARED_LOCK
 );

3253 
ªs
 = 
	`wöU∆ockRódLock
(
pFûe
);

3254 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILE_FLAGS
, 
SHARED_FIRST
, 0,

3255 
SHARED_SIZE
, 0);

3256 if–
ªs
 ){

3257 
√wLockty≥
 = 
EXCLUSIVE_LOCK
;

3259 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3260 
	`wöGëRódLock
(
pFûe
);

3267 if–
gŸPídögLock
 && 
lockty≥
==
SHARED_LOCK
 ){

3268 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
PENDING_BYTE
, 0, 1, 0);

3274 if–
ªs
 ){

3275 
rc
 = 
SQLITE_OK
;

3277 
pFûe
->
œ°Eºno
 =ÜastErrno;

3278 
rc
 = 
SQLITE_BUSY
;

3279 
	`OSTRACE
(("LOCK-FAIL file=%p, wanted=%d, got=%d\n",

3280 
pFûe
->
h
, 
lockty≥
, 
√wLockty≥
));

3282 
pFûe
->
lockty≥
 = (
u8
)
√wLockty≥
;

3283 
	`OSTRACE
(("LOCK file=%p,Üock=%d,Ñc=%s\n",

3284 
pFûe
->
h
,ÖFûe->
lockty≥
, 
	`sqlôe3EºName
(
rc
)));

3285  
rc
;

3286 
	}
}

3293 
	$wöCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

3294 
ªs
;

3295 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3297 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_CHECKRESERVEDLOCK
; );

3298 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,ÖResOut=%p\n", 
pFûe
->
h
, 
pResOut
));

3300 
	`as£π
–
id
!=0 );

3301 if–
pFûe
->
lockty≥
>=
RESERVED_LOCK
 ){

3302 
ªs
 = 1;

3303 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,Ñesu…=%d (loˇl)\n", 
pFûe
->
h
, 
ªs
));

3305 
ªs
 = 
	`wöLockFûe
(&
pFûe
->
h
, 
SQLITE_LOCKFILEEX_FLAGS
,
RESERVED_BYTE
,0,1,0);

3306 if–
ªs
 ){

3307 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
RESERVED_BYTE
, 0, 1, 0);

3309 
ªs
 = !res;

3310 
	`OSTRACE
(("TEST-WR-LOCK fûe=%p,Ñesu…=%d (ªmŸe)\n", 
pFûe
->
h
, 
ªs
));

3312 *
pResOut
 = 
ªs
;

3313 
	`OSTRACE
(("TEST-WR-LOCK file=%p,ÖResOut=%p, *pResOut=%d,Ñc=SQLITE_OK\n",

3314 
pFûe
->
h
, 
pResOut
, *pResOut));

3315  
SQLITE_OK
;

3316 
	}
}

3329 
	$wöU∆ock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3330 
ty≥
;

3331 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3332 
rc
 = 
SQLITE_OK
;

3333 
	`as£π
–
pFûe
!=0 );

3334 
	`as£π
–
lockty≥
<=
SHARED_LOCK
 );

3335 
	`OSTRACE
(("UNLOCK file=%p, oldLock=%d(%d),ÇewLock=%d\n",

3336 
pFûe
->
h
,ÖFûe->
lockty≥
,ÖFûe->
sh¨edLockByã
,Üocktype));

3337 
ty≥
 = 
pFûe
->
lockty≥
;

3338 if–
ty≥
>=
EXCLUSIVE_LOCK
 ){

3339 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
SHARED_FIRST
, 0, 
SHARED_SIZE
, 0);

3340 if–
lockty≥
==
SHARED_LOCK
 && !
	`wöGëRódLock
(
pFûe
) ){

3343 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_UNLOCK
, 
	`osGëLa°Eº‹
(),

3344 "wöU∆ock", 
pFûe
->
zP©h
);

3347 if–
ty≥
>=
RESERVED_LOCK
 ){

3348 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
RESERVED_BYTE
, 0, 1, 0);

3350 if–
lockty≥
==
NO_LOCK
 && 
ty≥
>=
SHARED_LOCK
 ){

3351 
	`wöU∆ockRódLock
(
pFûe
);

3353 if–
ty≥
>=
PENDING_LOCK
 ){

3354 
	`wöU∆ockFûe
(&
pFûe
->
h
, 
PENDING_BYTE
, 0, 1, 0);

3356 
pFûe
->
lockty≥
 = (
u8
)locktype;

3357 
	`OSTRACE
(("UNLOCK file=%p,Üock=%d,Ñc=%s\n",

3358 
pFûe
->
h
,ÖFûe->
lockty≥
, 
	`sqlôe3EºName
(
rc
)));

3359  
rc
;

3360 
	}
}

3379 
	$wöNﬁockLock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3380 
	`UNUSED_PARAMETER
(
id
);

3381 
	`UNUSED_PARAMETER
(
lockty≥
);

3382  
SQLITE_OK
;

3383 
	}
}

3385 
	$wöNﬁockCheckRe£rvedLock
(
sqlôe3_fûe
 *
id
, *
pResOut
){

3386 
	`UNUSED_PARAMETER
(
id
);

3387 
	`UNUSED_PARAMETER
(
pResOut
);

3388  
SQLITE_OK
;

3389 
	}
}

3391 
	$wöNﬁockU∆ock
(
sqlôe3_fûe
 *
id
, 
lockty≥
){

3392 
	`UNUSED_PARAMETER
(
id
);

3393 
	`UNUSED_PARAMETER
(
lockty≥
);

3394  
SQLITE_OK
;

3395 
	}
}

3406 
	$wöModeBô
(
wöFûe
 *
pFûe
, 
mask
, *
pArg
){

3407 if–*
pArg
<0 ){

3408 *
pArg
 = (
pFûe
->
˘æFœgs
 & 
mask
)!=0;

3409 }if–(*
pArg
)==0 ){

3410 
pFûe
->
˘æFœgs
 &~
mask
;

3412 
pFûe
->
˘æFœgs
 |
mask
;

3414 
	}
}

3417 
wöGëTem≤ame
(
sqlôe3_vfs
 *, **);

3418 
wöIsDú
(const *);

3419 
BOOL
 
wöIsDriveLëãrAndCﬁ⁄
(const *);

3424 
	$wöFûeC⁄åﬁ
(
sqlôe3_fûe
 *
id
, 
›
, *
pArg
){

3425 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

3426 
	`OSTRACE
(("FCNTL fûe=%p, op=%d,ÖArg=%p\n", 
pFûe
->
h
, 
›
, 
pArg
));

3427  
›
 ){

3428 
SQLITE_FCNTL_LOCKSTATE
: {

3429 *(*)
pArg
 = 
pFûe
->
lockty≥
;

3430 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3431  
SQLITE_OK
;

3433 
SQLITE_FCNTL_LAST_ERRNO
: {

3434 *(*)
pArg
 = ()
pFûe
->
œ°Eºno
;

3435 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3436  
SQLITE_OK
;

3438 
SQLITE_FCNTL_CHUNK_SIZE
: {

3439 
pFûe
->
szChunk
 = *(*)
pArg
;

3440 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3441  
SQLITE_OK
;

3443 
SQLITE_FCNTL_SIZE_HINT
: {

3444 if–
pFûe
->
szChunk
>0 ){

3445 
sqlôe3_öt64
 
ﬁdSz
;

3446 
rc
 = 
	`wöFûeSize
(
id
, &
ﬁdSz
);

3447 if–
rc
==
SQLITE_OK
 ){

3448 
sqlôe3_öt64
 
√wSz
 = *(sqlôe3_öt64*)
pArg
;

3449 if–
√wSz
>
ﬁdSz
 ){

3450 
	`SimuœãIOEº‹Bíign
(1);

3451 
rc
 = 
	`wöTrunˇã
(
id
, 
√wSz
);

3452 
	`SimuœãIOEº‹Bíign
(0);

3455 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3456  
rc
;

3458 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3459  
SQLITE_OK
;

3461 
SQLITE_FCNTL_PERSIST_WAL
: {

3462 
	`wöModeBô
(
pFûe
, 
WINFILE_PERSIST_WAL
, (*)
pArg
);

3463 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3464  
SQLITE_OK
;

3466 
SQLITE_FCNTL_POWERSAFE_OVERWRITE
: {

3467 
	`wöModeBô
(
pFûe
, 
WINFILE_PSOW
, (*)
pArg
);

3468 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3469  
SQLITE_OK
;

3471 
SQLITE_FCNTL_VFSNAME
: {

3472 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("%s", 
pFûe
->
pVfs
->
zName
);

3473 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3474  
SQLITE_OK
;

3476 
SQLITE_FCNTL_WIN32_AV_RETRY
: {

3477 *
a
 = (*)
pArg
;

3478 if–
a
[0]>0 ){

3479 
wöI€ºRëry
 = 
a
[0];

3481 
a
[0] = 
wöI€ºRëry
;

3483 if–
a
[1]>0 ){

3484 
wöI€ºRëryDñay
 = 
a
[1];

3486 
a
[1] = 
wöI€ºRëryDñay
;

3488 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_OK\n", 
pFûe
->
h
));

3489  
SQLITE_OK
;

3491 #ifde‡
SQLITE_TEST


3492 
SQLITE_FCNTL_WIN32_SET_HANDLE
: {

3493 
LPHANDLE
 
phFûe
 = (LPHANDLE)
pArg
;

3494 
HANDLE
 
hOldFûe
 = 
pFûe
->
h
;

3495 
pFûe
->
h
 = *
phFûe
;

3496 *
phFûe
 = 
hOldFûe
;

3497 
	`OSTRACE
(("FCNTL oldFile=%p,ÇewFile=%p,Ñc=SQLITE_OK\n",

3498 
hOldFûe
, 
pFûe
->
h
));

3499  
SQLITE_OK
;

3502 
SQLITE_FCNTL_TEMPFILENAME
: {

3503 *
zTFûe
 = 0;

3504 
rc
 = 
	`wöGëTem≤ame
(
pFûe
->
pVfs
, &
zTFûe
);

3505 if–
rc
==
SQLITE_OK
 ){

3506 *(**)
pArg
 = 
zTFûe
;

3508 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3509  
rc
;

3511 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3512 
SQLITE_FCNTL_MMAP_SIZE
: {

3513 
i64
 
√wLimô
 = *(i64*)
pArg
;

3514 
rc
 = 
SQLITE_OK
;

3515 if–
√wLimô
>
sqlôe3GlobÆC⁄fig
.
mxMm≠
 ){

3516 
√wLimô
 = 
sqlôe3GlobÆC⁄fig
.
mxMm≠
;

3518 *(
i64
*)
pArg
 = 
pFûe
->
mm≠SizeMax
;

3519 if–
√wLimô
>=0 &&ÇewLimô!=
pFûe
->
mm≠SizeMax
 &&ÖFûe->
nFëchOut
==0 ){

3520 
pFûe
->
mm≠SizeMax
 = 
√wLimô
;

3521 if–
pFûe
->
mm≠Size
>0 ){

3522 
	`wöUnm≠fûe
(
pFûe
);

3523 
rc
 = 
	`wöM≠fûe
(
pFûe
, -1);

3526 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=%s\n", 
pFûe
->
h
, 
	`sqlôe3EºName
(
rc
)));

3527  
rc
;

3531 
	`OSTRACE
(("FCNTL fûe=%p,Ñc=SQLITE_NOTFOUND\n", 
pFûe
->
h
));

3532  
SQLITE_NOTFOUND
;

3533 
	}
}

3545 
	$wöSe˘‹Size
(
sqlôe3_fûe
 *
id
){

3546 ()
id
;

3547  
SQLITE_DEFAULT_SECTOR_SIZE
;

3548 
	}
}

3553 
	$wöDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
id
){

3554 
wöFûe
 *
p
 = (wöFûe*)
id
;

3555  
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 |

3556 ((
p
->
˘æFœgs
 & 
WINFILE_PSOW
)?
SQLITE_IOCAP_POWERSAFE_OVERWRITE
:0);

3557 
	}
}

3565 
SYSTEM_INFO
 
	gwöSysInfo
;

3567 #i‚de‡
SQLITE_OMIT_WAL


3582 
	$wöShmE¡îMuãx
(){

3583 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3584 
	}
}

3585 
	$wöShmLóveMuãx
(){

3586 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3587 
	}
}

3588 #i‚de‡
NDEBUG


3589 
	$wöShmMuãxHñd
() {

3590  
	`sqlôe3_muãx_hñd
(
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_VFS1
));

3591 
	}
}

3617 
	swöShmNode
 {

3618 
sqlôe3_muãx
 *
	mmuãx
;

3619 *
	mzFûíame
;

3620 
wöFûe
 
	mhFûe
;

3622 
	mszRegi⁄
;

3623 
	mnRegi⁄
;

3624 
	sShmRegi⁄
 {

3625 
HANDLE
 
	mhM≠
;

3626 *
	mpM≠
;

3627 } *
	maRegi⁄
;

3628 
DWORD
 
	mœ°Eºno
;

3630 
	mnRef
;

3631 
wöShm
 *
	mpFú°
;

3632 
wöShmNode
 *
	mpNext
;

3633 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3634 
u8
 
	m√xtShmId
;

3643 
wöShmNode
 *
	gwöShmNodeLi°
 = 0;

3658 
	swöShm
 {

3659 
wöShmNode
 *
	mpShmNode
;

3660 
wöShm
 *
	mpNext
;

3661 
u8
 
	mhasMuãx
;

3662 
u16
 
	msh¨edMask
;

3663 
u16
 
	mex˛Mask
;

3664 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3665 
u8
 
	mid
;

3672 
	#WIN_SHM_BASE
 ((22+
SQLITE_SHM_NLOCK
)*4Ë

	)

3673 
	#WIN_SHM_DMS
 (
WIN_SHM_BASE
+
SQLITE_SHM_NLOCK
Ë

	)

3678 
	#WINSHM_UNLCK
 1

	)

3679 
	#WINSHM_RDLCK
 2

	)

3680 
	#WINSHM_WRLCK
 3

	)

3681 
	$wöShmSy°emLock
(

3682 
wöShmNode
 *
pFûe
,

3683 
lockTy≥
,

3684 
of°
,

3685 
nByã


3687 
rc
 = 0;

3690 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pFûe
->
muãx
Ë||ÖFûe->
nRef
==0 );

3692 
	`OSTRACE
(("SHM-LOCK file=%p,Üock=%d, offset=%d, size=%d\n",

3693 
pFûe
->
hFûe
.
h
, 
lockTy≥
, 
of°
, 
nByã
));

3696 if–
lockTy≥
==
WINSHM_UNLCK
 ){

3697 
rc
 = 
	`wöU∆ockFûe
(&
pFûe
->
hFûe
.
h
, 
of°
, 0, 
nByã
, 0);

3700 
DWORD
 
dwFœgs
 = 
LOCKFILE_FAIL_IMMEDIATELY
;

3701 if–
lockTy≥
 =
WINSHM_WRLCK
 ) 
dwFœgs
 |
LOCKFILE_EXCLUSIVE_LOCK
;

3702 
rc
 = 
	`wöLockFûe
(&
pFûe
->
hFûe
.
h
, 
dwFœgs
, 
of°
, 0, 
nByã
, 0);

3705 if–
rc
!= 0 ){

3706 
rc
 = 
SQLITE_OK
;

3708 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

3709 
rc
 = 
SQLITE_BUSY
;

3712 
	`OSTRACE
(("SHM-LOCK file=%p, func=%s,Érrno=%lu,Ñc=%s\n",

3713 
pFûe
->
hFûe
.
h
, (
lockTy≥
 =
WINSHM_UNLCK
) ? "winUnlockFile" :

3714 "wöLockFûe", 
pFûe
->
œ°Eºno
, 
	`sqlôe3EºName
(
rc
)));

3716  
rc
;

3717 
	}
}

3720 
wöO≥n
(
sqlôe3_vfs
*,c⁄° *,
sqlôe3_fûe
*,,*);

3721 
wöDñëe
(
sqlôe3_vfs
 *,const *,);

3729 
	$wöShmPurge
(
sqlôe3_vfs
 *
pVfs
, 
dñëeFœg
){

3730 
wöShmNode
 **
µ
;

3731 
wöShmNode
 *
p
;

3732 
	`as£π
–
	`wöShmMuãxHñd
() );

3733 
	`OSTRACE
(("SHM-PURGEÖid=%lu, deleteFlag=%d\n",

3734 
	`osGëCuºítPro˚ssId
(), 
dñëeFœg
));

3735 
µ
 = &
wöShmNodeLi°
;

3736  (
p
 = *
µ
)!=0 ){

3737 if–
p
->
nRef
==0 ){

3738 
i
;

3739 if–
p
->
muãx
 ){ 
	`sqlôe3_muãx_‰ì
(p->mutex); }

3740 
i
=0; i<
p
->
nRegi⁄
; i++){

3741 
BOOL
 
bRc
 = 
	`osUnm≠VõwOfFûe
(
p
->
aRegi⁄
[
i
].
pM≠
);

3742 
	`OSTRACE
(("SHM-PURGE-UNMAPÖid=%lu,Ñegion=%d,Ñc=%s\n",

3743 
	`osGëCuºítPro˚ssId
(), 
i
, 
bRc
 ? "ok" : "failed"));

3744 
	`UNUSED_VARIABLE_VALUE
(
bRc
);

3745 
bRc
 = 
	`osClo£H™dÀ
(
p
->
aRegi⁄
[
i
].
hM≠
);

3746 
	`OSTRACE
(("SHM-PURGE-CLOSEÖid=%lu,Ñegion=%d,Ñc=%s\n",

3747 
	`osGëCuºítPro˚ssId
(), 
i
, 
bRc
 ? "ok" : "failed"));

3748 
	`UNUSED_VARIABLE_VALUE
(
bRc
);

3750 if–
p
->
hFûe
.
h
!=
NULL
 &&Ö->hFûe.h!=
INVALID_HANDLE_VALUE
 ){

3751 
	`SimuœãIOEº‹Bíign
(1);

3752 
	`wöClo£
((
sqlôe3_fûe
 *)&
p
->
hFûe
);

3753 
	`SimuœãIOEº‹Bíign
(0);

3755 if–
dñëeFœg
 ){

3756 
	`SimuœãIOEº‹Bíign
(1);

3757 
	`sqlôe3BegöBíignMÆloc
();

3758 
	`wöDñëe
(
pVfs
, 
p
->
zFûíame
, 0);

3759 
	`sqlôe3EndBíignMÆloc
();

3760 
	`SimuœãIOEº‹Bíign
(0);

3762 *
µ
 = 
p
->
pNext
;

3763 
	`sqlôe3_‰ì
(
p
->
aRegi⁄
);

3764 
	`sqlôe3_‰ì
(
p
);

3766 
µ
 = &
p
->
pNext
;

3769 
	}
}

3778 
	$wöO≥nSh¨edMem‹y
(
wöFûe
 *
pDbFd
){

3779 
wöShm
 *
p
;

3780 
wöShmNode
 *
pShmNode
 = 0;

3781 
rc
;

3782 
wöShmNode
 *
pNew
;

3783 
nName
;

3785 
	`as£π
–
pDbFd
->
pShm
==0 );

3790 
p
 = 
	`sqlôe3MÆlocZîo
( (*p) );

3791 if–
p
==0 )  
SQLITE_IOERR_NOMEM_BKPT
;

3792 
nName
 = 
	`sqlôe3SåÀn30
(
pDbFd
->
zP©h
);

3793 
pNew
 = 
	`sqlôe3MÆlocZîo
–(*
pShmNode
Ë+ 
nName
 + 17 );

3794 if–
pNew
==0 ){

3795 
	`sqlôe3_‰ì
(
p
);

3796  
SQLITE_IOERR_NOMEM_BKPT
;

3798 
pNew
->
zFûíame
 = (*)&pNew[1];

3799 
	`sqlôe3_¢¥ötf
(
nName
+15, 
pNew
->
zFûíame
, "%s-shm", 
pDbFd
->
zP©h
);

3800 
	`sqlôe3FûeSuffix3
(
pDbFd
->
zP©h
, 
pNew
->
zFûíame
);

3805 
	`wöShmE¡îMuãx
();

3806 
pShmNode
 = 
wöShmNodeLi°
;ÖShmNode;ÖShmNodeıShmNode->
pNext
){

3810 if–
	`sqlôe3SåICmp
(
pShmNode
->
zFûíame
, 
pNew
->zFilename)==0 ) ;

3812 if–
pShmNode
 ){

3813 
	`sqlôe3_‰ì
(
pNew
);

3815 
pShmNode
 = 
pNew
;

3816 
pNew
 = 0;

3817 ((
wöFûe
*)(&
pShmNode
->
hFûe
))->
h
 = 
INVALID_HANDLE_VALUE
;

3818 
pShmNode
->
pNext
 = 
wöShmNodeLi°
;

3819 
wöShmNodeLi°
 = 
pShmNode
;

3821 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

3822 
pShmNode
->
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

3823 if–
pShmNode
->
muãx
==0 ){

3824 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

3825 
shm_›í_îr
;

3829 
rc
 = 
	`wöO≥n
(
pDbFd
->
pVfs
,

3830 
pShmNode
->
zFûíame
,

3831 (
sqlôe3_fûe
*)&
pShmNode
->
hFûe
,

3832 
SQLITE_OPEN_WAL
 | 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
,

3834 if–
SQLITE_OK
!=
rc
 ){

3835 
shm_›í_îr
;

3841 if–
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_WRLCK
, 
WIN_SHM_DMS
, 1)==
SQLITE_OK
 ){

3842 
rc
 = 
	`wöTrunˇã
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, 0);

3843 if–
rc
!=
SQLITE_OK
 ){

3844 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMOPEN
, 
	`osGëLa°Eº‹
(),

3845 "wöO≥nShm", 
pDbFd
->
zP©h
);

3848 if–
rc
==
SQLITE_OK
 ){

3849 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
WIN_SHM_DMS
, 1);

3850 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_RDLCK
, 
WIN_SHM_DMS
, 1);

3852 if–
rc
 ) 
shm_›í_îr
;

3856 
p
->
pShmNode
 =ÖShmNode;

3857 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3858 
p
->
id
 = 
pShmNode
->
√xtShmId
++;

3860 
pShmNode
->
nRef
++;

3861 
pDbFd
->
pShm
 = 
p
;

3862 
	`wöShmLóveMuãx
();

3871 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3872 
p
->
pNext
 = 
pShmNode
->
pFú°
;

3873 
pShmNode
->
pFú°
 = 
p
;

3874 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

3875  
SQLITE_OK
;

3878 
shm_›í_îr
:

3879 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
WIN_SHM_DMS
, 1);

3880 
	`wöShmPurge
(
pDbFd
->
pVfs
, 0);

3881 
	`sqlôe3_‰ì
(
p
);

3882 
	`sqlôe3_‰ì
(
pNew
);

3883 
	`wöShmLóveMuãx
();

3884  
rc
;

3885 
	}
}

3891 
	$wöShmUnm≠
(

3892 
sqlôe3_fûe
 *
fd
,

3893 
dñëeFœg


3895 
wöFûe
 *
pDbFd
;

3896 
wöShm
 *
p
;

3897 
wöShmNode
 *
pShmNode
;

3898 
wöShm
 **
µ
;

3900 
pDbFd
 = (
wöFûe
*)
fd
;

3901 
p
 = 
pDbFd
->
pShm
;

3902 if–
p
==0 )  
SQLITE_OK
;

3903 
pShmNode
 = 
p
->pShmNode;

3907 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3908 
µ
=&
pShmNode
->
pFú°
; (*µ)!=
p
;Ö∞&(*µ)->
pNext
){}

3909 *
µ
 = 
p
->
pNext
;

3912 
	`sqlôe3_‰ì
(
p
);

3913 
pDbFd
->
pShm
 = 0;

3914 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

3918 
	`wöShmE¡îMuãx
();

3919 
	`as£π
–
pShmNode
->
nRef
>0 );

3920 
pShmNode
->
nRef
--;

3921 if–
pShmNode
->
nRef
==0 ){

3922 
	`wöShmPurge
(
pDbFd
->
pVfs
, 
dñëeFœg
);

3924 
	`wöShmLóveMuãx
();

3926  
SQLITE_OK
;

3927 
	}
}

3932 
	$wöShmLock
(

3933 
sqlôe3_fûe
 *
fd
,

3934 
of°
,

3935 
n
,

3936 
Êags


3938 
wöFûe
 *
pDbFd
 = (wöFûe*)
fd
;

3939 
wöShm
 *
p
 = 
pDbFd
->
pShm
;

3940 
wöShm
 *
pX
;

3941 
wöShmNode
 *
pShmNode
 = 
p
->pShmNode;

3942 
rc
 = 
SQLITE_OK
;

3943 
u16
 
mask
;

3945 
	`as£π
–
of°
>=0 && of°+
n
<=
SQLITE_SHM_NLOCK
 );

3946 
	`as£π
–
n
>=1 );

3947 
	`as£π
–
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
)

3948 || 
Êags
==(
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
)

3949 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
)

3950 || 
Êags
==(
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
) );

3951 
	`as£π
–
n
==1 || (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
)!=0 );

3953 
mask
 = (
u16
)((1U<<(
of°
+
n
)) - (1U<<ofst));

3954 
	`as£π
–
n
>1 || 
mask
==(1<<
of°
) );

3955 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

3956 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ){

3957 
u16
 
ÆlMask
 = 0;

3960 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

3961 if–
pX
==
p
 ) ;

3962 
	`as£π
–(
pX
->
ex˛Mask
 & (
p
->ex˛Mask|p->
sh¨edMask
))==0 );

3963 
ÆlMask
 |
pX
->
sh¨edMask
;

3967 if–(
mask
 & 
ÆlMask
)==0 ){

3968 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_UNLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

3970 
rc
 = 
SQLITE_OK
;

3974 if–
rc
==
SQLITE_OK
 ){

3975 
p
->
ex˛Mask
 &~
mask
;

3976 
p
->
sh¨edMask
 &~
mask
;

3978 }if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

3979 
u16
 
ÆlSh¨ed
 = 0;

3985 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

3986 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 ){

3987 
rc
 = 
SQLITE_BUSY
;

3990 
ÆlSh¨ed
 |
pX
->
sh¨edMask
;

3994 if–
rc
==
SQLITE_OK
 ){

3995 if–(
ÆlSh¨ed
 & 
mask
)==0 ){

3996 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_RDLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

3998 
rc
 = 
SQLITE_OK
;

4003 if–
rc
==
SQLITE_OK
 ){

4004 
p
->
sh¨edMask
 |
mask
;

4010 
pX
=
pShmNode
->
pFú°
;ÖX;ÖXıX->
pNext
){

4011 if–(
pX
->
ex˛Mask
 & 
mask
)!=0 || (pX->
sh¨edMask
 & mask)!=0 ){

4012 
rc
 = 
SQLITE_BUSY
;

4020 if–
rc
==
SQLITE_OK
 ){

4021 
rc
 = 
	`wöShmSy°emLock
(
pShmNode
, 
WINSHM_WRLCK
, 
of°
+
WIN_SHM_BASE
, 
n
);

4022 if–
rc
==
SQLITE_OK
 ){

4023 
	`as£π
–(
p
->
sh¨edMask
 & 
mask
)==0 );

4024 
p
->
ex˛Mask
 |
mask
;

4028 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4029 
	`OSTRACE
(("SHM-LOCKÖid=%lu, id=%d, sharedMask=%03x,ÉxclMask=%03x,Ñc=%s\n",

4030 
	`osGëCuºítPro˚ssId
(), 
p
->
id
,Ö->
sh¨edMask
,Ö->
ex˛Mask
,

4031 
	`sqlôe3EºName
(
rc
)));

4032  
rc
;

4033 
	}
}

4041 
	$wöShmB¨rõr
(

4042 
sqlôe3_fûe
 *
fd


4044 
	`UNUSED_PARAMETER
(
fd
);

4045 
	`sqlôe3Mem‹yB¨rõr
();

4046 
	`wöShmE¡îMuãx
();

4047 
	`wöShmLóveMuãx
();

4048 
	}
}

4069 
	$wöShmM≠
(

4070 
sqlôe3_fûe
 *
fd
,

4071 
iRegi⁄
,

4072 
szRegi⁄
,

4073 
isWrôe
,

4074 vﬁ©ûê**
µ


4076 
wöFûe
 *
pDbFd
 = (wöFûe*)
fd
;

4077 
wöShm
 *
pShm
 = 
pDbFd
->pShm;

4078 
wöShmNode
 *
pShmNode
;

4079 
rc
 = 
SQLITE_OK
;

4081 if–!
pShm
 ){

4082 
rc
 = 
	`wöO≥nSh¨edMem‹y
(
pDbFd
);

4083 if–
rc
!=
SQLITE_OK
 ) Ñc;

4084 
pShm
 = 
pDbFd
->pShm;

4086 
pShmNode
 = 
pShm
->pShmNode;

4088 
	`sqlôe3_muãx_íãr
(
pShmNode
->
muãx
);

4089 
	`as£π
–
szRegi⁄
==
pShmNode
->szRegi⁄ ||ÖShmNode->
nRegi⁄
==0 );

4091 if–
pShmNode
->
nRegi⁄
<=
iRegi⁄
 ){

4092 
ShmRegi⁄
 *
≠New
;

4093 
nByã
 = (
iRegi⁄
+1)*
szRegi⁄
;

4094 
sqlôe3_öt64
 
sz
;

4096 
pShmNode
->
szRegi⁄
 = szRegion;

4102 
rc
 = 
	`wöFûeSize
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, &
sz
);

4103 if–
rc
!=
SQLITE_OK
 ){

4104 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMSIZE
, 
	`osGëLa°Eº‹
(),

4105 "wöShmM≠1", 
pDbFd
->
zP©h
);

4106 
shm∑ge_out
;

4109 if–
sz
<
nByã
 ){

4116 if–!
isWrôe
 ) 
shm∑ge_out
;

4117 
rc
 = 
	`wöTrunˇã
((
sqlôe3_fûe
 *)&
pShmNode
->
hFûe
, 
nByã
);

4118 if–
rc
!=
SQLITE_OK
 ){

4119 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMSIZE
, 
	`osGëLa°Eº‹
(),

4120 "wöShmM≠2", 
pDbFd
->
zP©h
);

4121 
shm∑ge_out
;

4126 
≠New
 = (
ShmRegi⁄
 *)
	`sqlôe3_ªÆloc64
(

4127 
pShmNode
->
aRegi⁄
, (
iRegi⁄
+1)*(
≠New
[0])

4129 if–!
≠New
 ){

4130 
rc
 = 
SQLITE_IOERR_NOMEM_BKPT
;

4131 
shm∑ge_out
;

4133 
pShmNode
->
aRegi⁄
 = 
≠New
;

4135  
pShmNode
->
nRegi⁄
<=
iRegi⁄
 ){

4136 
HANDLE
 
hM≠
 = 
NULL
;

4137 *
pM≠
 = 0;

4139 #i‡
SQLITE_OS_WINRT


4140 
hM≠
 = 
	`osCª©eFûeM≠pögFromAµ
(
pShmNode
->
hFûe
.
h
,

4141 
NULL
, 
PAGE_READWRITE
, 
nByã
, NULL

4143 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

4144 
hM≠
 = 
	`osCª©eFûeM≠pögW
(
pShmNode
->
hFûe
.
h
,

4145 
NULL
, 
PAGE_READWRITE
, 0, 
nByã
, NULL

4147 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_CREATEFILEMAPPINGA


4148 
hM≠
 = 
	`osCª©eFûeM≠pögA
(
pShmNode
->
hFûe
.
h
,

4149 
NULL
, 
PAGE_READWRITE
, 0, 
nByã
, NULL

4152 
	`OSTRACE
(("SHM-MAP-CREATEÖid=%lu,Ñegion=%d, size=%d,Ñc=%s\n",

4153 
	`osGëCuºítPro˚ssId
(), 
pShmNode
->
nRegi⁄
, 
nByã
,

4154 
hM≠
 ? "ok" : "failed"));

4155 if–
hM≠
 ){

4156 
iOff£t
 = 
pShmNode
->
nRegi⁄
*
szRegi⁄
;

4157 
iOff£tShi·
 = 
iOff£t
 % 
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
;

4158 #i‡
SQLITE_OS_WINRT


4159 
pM≠
 = 
	`osM≠VõwOfFûeFromAµ
(
hM≠
, 
FILE_MAP_WRITE
 | 
FILE_MAP_READ
,

4160 
iOff£t
 - 
iOff£tShi·
, 
szRegi⁄
 + iOffsetShift

4163 
pM≠
 = 
	`osM≠VõwOfFûe
(
hM≠
, 
FILE_MAP_WRITE
 | 
FILE_MAP_READ
,

4164 0, 
iOff£t
 - 
iOff£tShi·
, 
szRegi⁄
 + iOffsetShift

4167 
	`OSTRACE
(("SHM-MAP-MAPÖid=%lu,Ñegion=%d, offset=%d, size=%d,Ñc=%s\n",

4168 
	`osGëCuºítPro˚ssId
(), 
pShmNode
->
nRegi⁄
, 
iOff£t
,

4169 
szRegi⁄
, 
pM≠
 ? "ok" : "failed"));

4171 if–!
pM≠
 ){

4172 
pShmNode
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4173 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_SHMMAP
, 
pShmNode
->
œ°Eºno
,

4174 "wöShmM≠3", 
pDbFd
->
zP©h
);

4175 if–
hM≠
 ) 
	`osClo£H™dÀ
(hMap);

4176 
shm∑ge_out
;

4179 
pShmNode
->
aRegi⁄
[pShmNode->
nRegi⁄
].
pM≠
 =ÖMap;

4180 
pShmNode
->
aRegi⁄
[pShmNode->
nRegi⁄
].
hM≠
 = hMap;

4181 
pShmNode
->
nRegi⁄
++;

4185 
shm∑ge_out
:

4186 if–
pShmNode
->
nRegi⁄
>
iRegi⁄
 ){

4187 
iOff£t
 = 
iRegi⁄
*
szRegi⁄
;

4188 
iOff£tShi·
 = 
iOff£t
 % 
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
;

4189 *
p
 = (*)
pShmNode
->
aRegi⁄
[
iRegi⁄
].
pM≠
;

4190 *
µ
 = (*)&
p
[
iOff£tShi·
];

4192 *
µ
 = 0;

4194 
	`sqlôe3_muãx_Àave
(
pShmNode
->
muãx
);

4195  
rc
;

4196 
	}
}

4199 
	#wöShmM≠
 0

	)

4200 
	#wöShmLock
 0

	)

4201 
	#wöShmB¨rõr
 0

	)

4202 
	#wöShmUnm≠
 0

	)

4208 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4209 
	$wöUnm≠fûe
(
wöFûe
 *
pFûe
){

4210 
	`as£π
–
pFûe
!=0 );

4211 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p, hMap=%p,ÖMapRegion=%p, "

4213 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
hM≠
,ÖFûe->
pM≠Regi⁄
,

4214 
pFûe
->
mm≠Size
,ÖFûe->
mm≠SizeA˘uÆ
,ÖFûe->
mm≠SizeMax
));

4215 if–
pFûe
->
pM≠Regi⁄
 ){

4216 if–!
	`osUnm≠VõwOfFûe
(
pFûe
->
pM≠Regi⁄
) ){

4217 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4218 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p,ÖMapRegion=%p, "

4219 "rc=SQLITE_IOERR_MMAP\n", 
	`osGëCuºítPro˚ssId
(), 
pFûe
,

4220 
pFûe
->
pM≠Regi⁄
));

4221  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

4222 "wöUnm≠fûe1", 
pFûe
->
zP©h
);

4224 
pFûe
->
pM≠Regi⁄
 = 0;

4225 
pFûe
->
mm≠Size
 = 0;

4226 
pFûe
->
mm≠SizeA˘uÆ
 = 0;

4228 if–
pFûe
->
hM≠
!=
NULL
 ){

4229 if–!
	`osClo£H™dÀ
(
pFûe
->
hM≠
) ){

4230 
pFûe
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4231 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p, hMap=%p,Ñc=SQLITE_IOERR_MMAP\n",

4232 
	`osGëCuºítPro˚ssId
(), 
pFûe
,ÖFûe->
hM≠
));

4233  
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFûe
->
œ°Eºno
,

4234 "wöUnm≠fûe2", 
pFûe
->
zP©h
);

4236 
pFûe
->
hM≠
 = 
NULL
;

4238 
	`OSTRACE
(("UNMAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4239 
	`osGëCuºítPro˚ssId
(), 
pFûe
));

4240  
SQLITE_OK
;

4241 
	}
}

4259 
	$wöM≠fûe
(
wöFûe
 *
pFd
, 
sqlôe3_öt64
 
nByã
){

4260 
sqlôe3_öt64
 
nM≠
 = 
nByã
;

4261 
rc
;

4263 
	`as£π
–
nM≠
>=0 || 
pFd
->
nFëchOut
==0 );

4264 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p, size=%lld\n",

4265 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
nByã
));

4267 if–
pFd
->
nFëchOut
>0 )  
SQLITE_OK
;

4269 if–
nM≠
<0 ){

4270 
rc
 = 
	`wöFûeSize
((
sqlôe3_fûe
*)
pFd
, &
nM≠
);

4271 if–
rc
 ){

4272 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_IOERR_FSTAT\n",

4273 
	`osGëCuºítPro˚ssId
(), 
pFd
));

4274  
SQLITE_IOERR_FSTAT
;

4277 if–
nM≠
>
pFd
->
mm≠SizeMax
 ){

4278 
nM≠
 = 
pFd
->
mm≠SizeMax
;

4280 
nM≠
 &~(
sqlôe3_öt64
)(
wöSysInfo
.
dwPageSize
 - 1);

4282 if–
nM≠
==0 && 
pFd
->
mm≠Size
>0 ){

4283 
	`wöUnm≠fûe
(
pFd
);

4285 if–
nM≠
!=
pFd
->
mm≠Size
 ){

4286 *
pNew
 = 0;

4287 
DWORD
 
¥Ÿe˘
 = 
PAGE_READONLY
;

4288 
DWORD
 
Êags
 = 
FILE_MAP_READ
;

4290 
	`wöUnm≠fûe
(
pFd
);

4291 #ifde‡
SQLITE_MMAP_READWRITE


4292 if–(
pFd
->
˘æFœgs
 & 
WINFILE_RDONLY
)==0 ){

4293 
¥Ÿe˘
 = 
PAGE_READWRITE
;

4294 
Êags
 |
FILE_MAP_WRITE
;

4297 #i‡
SQLITE_OS_WINRT


4298 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögFromAµ
’Fd->
h
, 
NULL
, 
¥Ÿe˘
, 
nM≠
, NULL);

4299 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

4300 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögW
’Fd->
h
, 
NULL
, 
¥Ÿe˘
,

4301 (
DWORD
)((
nM≠
>>32) & 0xffffffff),

4302 (
DWORD
)(
nM≠
 & 0xffffffff), 
NULL
);

4303 #ñi‡
	`deföed
(
SQLITE_WIN32_HAS_ANSI
Ë&& 
SQLITE_WIN32_CREATEFILEMAPPINGA


4304 
pFd
->
hM≠
 = 
	`osCª©eFûeM≠pögA
’Fd->
h
, 
NULL
, 
¥Ÿe˘
,

4305 (
DWORD
)((
nM≠
>>32) & 0xffffffff),

4306 (
DWORD
)(
nM≠
 & 0xffffffff), 
NULL
);

4308 if–
pFd
->
hM≠
==
NULL
 ){

4309 
pFd
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4310 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFd
->
œ°Eºno
,

4311 "wöM≠fûe1", 
pFd
->
zP©h
);

4313 
	`OSTRACE
(("MAP-FILE-CREATEÖid=%lu,ÖFile=%p,Ñc=%s\n",

4314 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4315  
SQLITE_OK
;

4317 
	`as£π
–(
nM≠
 % 
wöSysInfo
.
dwPageSize
)==0 );

4318 
	`as£π
–(
SIZE_T
)==(
sqlôe3_öt64
Ë|| 
nM≠
<=0xffffffff );

4319 #i‡
SQLITE_OS_WINRT


4320 
pNew
 = 
	`osM≠VõwOfFûeFromAµ
(
pFd
->
hM≠
, 
Êags
, 0, (
SIZE_T
)
nM≠
);

4322 
pNew
 = 
	`osM≠VõwOfFûe
(
pFd
->
hM≠
, 
Êags
, 0, 0, (
SIZE_T
)
nM≠
);

4324 if–
pNew
==
NULL
 ){

4325 
	`osClo£H™dÀ
(
pFd
->
hM≠
);

4326 
pFd
->
hM≠
 = 
NULL
;

4327 
pFd
->
œ°Eºno
 = 
	`osGëLa°Eº‹
();

4328 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_MMAP
, 
pFd
->
œ°Eºno
,

4329 "wöM≠fûe2", 
pFd
->
zP©h
);

4331 
	`OSTRACE
(("MAP-FILE-MAPÖid=%lu,ÖFile=%p,Ñc=%s\n",

4332 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4333  
SQLITE_OK
;

4335 
pFd
->
pM≠Regi⁄
 = 
pNew
;

4336 
pFd
->
mm≠Size
 = 
nM≠
;

4337 
pFd
->
mm≠SizeA˘uÆ
 = 
nM≠
;

4340 
	`OSTRACE
(("MAP-FILEÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4341 
	`osGëCuºítPro˚ssId
(), 
pFd
));

4342  
SQLITE_OK
;

4343 
	}
}

4358 
	$wöFëch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, 
nAmt
, **
µ
){

4359 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4360 
wöFûe
 *
pFd
 = (wöFûe*)
fd
;

4362 *
µ
 = 0;

4364 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p, offset=%lld,ámount=%d,Öp=%p\n",

4365 
	`osGëCuºítPro˚ssId
(), 
fd
, 
iOff
, 
nAmt
, 
µ
));

4367 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4368 if–
pFd
->
mm≠SizeMax
>0 ){

4369 if–
pFd
->
pM≠Regi⁄
==0 ){

4370 
rc
 = 
	`wöM≠fûe
(
pFd
, -1);

4371 if–
rc
!=
SQLITE_OK
 ){

4372 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p,Ñc=%s\n",

4373 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
	`sqlôe3EºName
(
rc
)));

4374  
rc
;

4377 if–
pFd
->
mm≠Size
 >
iOff
+
nAmt
 ){

4378 *
µ
 = &((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
];

4379 
pFd
->
nFëchOut
++;

4384 
	`OSTRACE
(("FETCHÖid=%lu,ÖFile=%p,Öp=%p, *pp=%p,Ñc=SQLITE_OK\n",

4385 
	`osGëCuºítPro˚ssId
(), 
fd
, 
µ
, *pp));

4386  
SQLITE_OK
;

4387 
	}
}

4399 
	$wöUn„tch
(
sqlôe3_fûe
 *
fd
, 
i64
 
iOff
, *
p
){

4400 #i‡
SQLITE_MAX_MMAP_SIZE
>0

4401 
wöFûe
 *
pFd
 = (wöFûe*)
fd
;

4406 
	`as£π
–(
p
==0)==(
pFd
->
nFëchOut
==0) );

4409 
	`as£π
–
p
==0 ||Ö==&((
u8
 *)
pFd
->
pM≠Regi⁄
)[
iOff
] );

4411 
	`OSTRACE
(("UNFETCHÖid=%lu,ÖFile=%p, offset=%lld,Ö=%p\n",

4412 
	`osGëCuºítPro˚ssId
(), 
pFd
, 
iOff
, 
p
));

4414 if–
p
 ){

4415 
pFd
->
nFëchOut
--;

4421 
	`wöUnm≠fûe
(
pFd
);

4424 
	`as£π
–
pFd
->
nFëchOut
>=0 );

4427 
	`OSTRACE
(("UNFETCHÖid=%lu,ÖFile=%p,Ñc=SQLITE_OK\n",

4428 
	`osGëCuºítPro˚ssId
(), 
fd
));

4429  
SQLITE_OK
;

4430 
	}
}

4442 c⁄° 
sqlôe3_io_mëhods
 
	gwöIoMëhod
 = {

4444 
wöClo£
,

4445 
wöRód
,

4446 
wöWrôe
,

4447 
wöTrunˇã
,

4448 
wöSync
,

4449 
wöFûeSize
,

4450 
wöLock
,

4451 
wöU∆ock
,

4452 
wöCheckRe£rvedLock
,

4453 
wöFûeC⁄åﬁ
,

4454 
wöSe˘‹Size
,

4455 
wöDevi˚Ch¨a˘îi°ics
,

4456 
wöShmM≠
,

4457 
wöShmLock
,

4458 
wöShmB¨rõr
,

4459 
wöShmUnm≠
,

4460 
wöFëch
,

4461 
wöUn„tch


4468 c⁄° 
sqlôe3_io_mëhods
 
	gwöIoNﬁockMëhod
 = {

4470 
wöClo£
,

4471 
wöRód
,

4472 
wöWrôe
,

4473 
wöTrunˇã
,

4474 
wöSync
,

4475 
wöFûeSize
,

4476 
wöNﬁockLock
,

4477 
wöNﬁockU∆ock
,

4478 
wöNﬁockCheckRe£rvedLock
,

4479 
wöFûeC⁄åﬁ
,

4480 
wöSe˘‹Size
,

4481 
wöDevi˚Ch¨a˘îi°ics
,

4482 
wöShmM≠
,

4483 
wöShmLock
,

4484 
wöShmB¨rõr
,

4485 
wöShmUnm≠
,

4486 
wöFëch
,

4487 
wöUn„tch


4490 
wöVfsAµD©a
 
	gwöAµD©a
 = {

4491 &
wöIoMëhod
,

4496 
wöVfsAµD©a
 
	gwöNﬁockAµD©a
 = {

4497 &
wöIoNﬁockMëhod
,

4509 #i‡
deföed
(
__CYGWIN__
)

4515 *
	$wöC⁄vîtToUtf8Fûíame
(c⁄° *
zFûíame
){

4516 *
zC⁄vîãd
 = 0;

4517 if–
	`osIsNT
() ){

4518 
zC⁄vîãd
 = 
	`wöUnicodeToUtf8
(
zFûíame
);

4520 #ifde‡
SQLITE_WIN32_HAS_ANSI


4522 
zC⁄vîãd
 = 
	`wöMbcsToUtf8
(
zFûíame
, 
	`osAªFûeApisANSI
());

4526  
zC⁄vîãd
;

4527 
	}
}

4536 *
	$wöC⁄vîtFromUtf8Fûíame
(c⁄° *
zFûíame
){

4537 *
zC⁄vîãd
 = 0;

4538 if–
	`osIsNT
() ){

4539 
zC⁄vîãd
 = 
	`wöUtf8ToUnicode
(
zFûíame
);

4541 #ifde‡
SQLITE_WIN32_HAS_ANSI


4543 
zC⁄vîãd
 = 
	`wöUtf8ToMbcs
(
zFûíame
, 
	`osAªFûeApisANSI
());

4547  
zC⁄vîãd
;

4548 
	}
}

4555 
	$wöMakeEndInDúSï
(
nBuf
, *
zBuf
){

4556 if–
zBuf
 ){

4557 
nLí
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4558 if–
nLí
>0 ){

4559 if–
	`wöIsDúSï
(
zBuf
[
nLí
-1]) ){

4561 }if–
nLí
+1<
nBuf
 ){

4562 
zBuf
[
nLí
] = 
	`wöGëDúSï
();

4563 
zBuf
[
nLí
+1] = '\0';

4569 
	}
}

4575 
	$wöGëTem≤ame
(
sqlôe3_vfs
 *
pVfs
, **
pzBuf
){

4576 
zCh¨s
[] =

4580 
size_t
 
i
, 
j
;

4581 
nPª
 = 
	`sqlôe3SåÀn30
(
SQLITE_TEMP_FILE_PREFIX
);

4582 
nMax
, 
nBuf
, 
nDú
, 
nLí
;

4583 *
zBuf
;

4589 
	`SimuœãIOEº‹
– 
SQLITE_IOERR
 );

4594 
nMax
 = 
pVfs
->
mxP©h«me
; 
nBuf
 =ÇMax + 2;

4595 
zBuf
 = 
	`sqlôe3MÆlocZîo
–
nBuf
 );

4596 if–!
zBuf
 ){

4597 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4598  
SQLITE_IOERR_NOMEM_BKPT
;

4605 
nDú
 = 
nMax
 - (
nPª
 + 15);

4606 
	`as£π
–
nDú
>0 );

4607 if–
sqlôe3_ãmp_dúe˘‹y
 ){

4608 
nDúLí
 = 
	`sqlôe3SåÀn30
(
sqlôe3_ãmp_dúe˘‹y
);

4609 if–
nDúLí
>0 ){

4610 if–!
	`wöIsDúSï
(
sqlôe3_ãmp_dúe˘‹y
[
nDúLí
-1]) ){

4611 
nDúLí
++;

4613 if–
nDúLí
>
nDú
 ){

4614 
	`sqlôe3_‰ì
(
zBuf
);

4615 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4616  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname1", 0);

4618 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
sqlôe3_ãmp_dúe˘‹y
);

4621 #i‡
	`deföed
(
__CYGWIN__
)

4623 c⁄° *
azDús
[] = {

4635 
i
;

4636 c⁄° *
zDú
 = 0;

4638 if–!
azDús
[0] )ázDús[0] = 
	`gëív
("SQLITE_TMPDIR");

4639 if–!
azDús
[1] )ázDús[1] = 
	`gëív
("TMPDIR");

4640 if–!
azDús
[2] )ázDús[2] = 
	`gëív
("TMP");

4641 if–!
azDús
[3] )ázDús[3] = 
	`gëív
("TEMP");

4642 if–!
azDús
[4] )ázDús[4] = 
	`gëív
("USERPROFILE");

4643 
i
=0; i<(
azDús
)/◊zDús[0]); 
zDú
=azDirs[i++]){

4644 *
zC⁄vîãd
;

4645 if–
zDú
==0 ) ;

4651 if–
	`wöIsDriveLëãrAndCﬁ⁄
(
zDú
) ){

4652 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zDú
);

4653 if–!
zC⁄vîãd
 ){

4654 
	`sqlôe3_‰ì
(
zBuf
);

4655 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4656  
SQLITE_IOERR_NOMEM_BKPT
;

4658 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4659 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zDú
);

4660 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4663 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4665 
zC⁄vîãd
 = 
	`sqlôe3MÆlocZîo
–
nMax
+1 );

4666 if–!
zC⁄vîãd
 ){

4667 
	`sqlôe3_‰ì
(
zBuf
);

4668 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4669  
SQLITE_IOERR_NOMEM_BKPT
;

4671 if–
	`cygwö_c⁄v_∑th
(

4672 
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
, 
zDú
,

4673 
zC⁄vîãd
, 
nMax
+1)<0 ){

4674 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4675 
	`sqlôe3_‰ì
(
zBuf
);

4676 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_CONVPATH\n"));

4677  
	`wöLogEº‹
(
SQLITE_IOERR_CONVPATH
, (
DWORD
)
î∫o
,

4678 "wöGëTem≤ame2", 
zDú
);

4680 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4685 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zC⁄vîãd
);

4686 if–!
zUtf8
 ){

4687 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4688 
	`sqlôe3_‰ì
(
zBuf
);

4689 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4690  
SQLITE_IOERR_NOMEM_BKPT
;

4692 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zUtf8
);

4693 
	`sqlôe3_‰ì
(
zUtf8
);

4694 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4697 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4701 #ñi‡!
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

4702 if–
	`osIsNT
() ){

4703 *
zMu…i
;

4704 
LPWSTR
 
zWideP©h
 = 
	`sqlôe3MÆlocZîo
–
nMax
*(
WCHAR
) );

4705 if–!
zWideP©h
 ){

4706 
	`sqlôe3_‰ì
(
zBuf
);

4707 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4708  
SQLITE_IOERR_NOMEM_BKPT
;

4710 if–
	`osGëTempP©hW
(
nMax
, 
zWideP©h
)==0 ){

4711 
	`sqlôe3_‰ì
(
zWideP©h
);

4712 
	`sqlôe3_‰ì
(
zBuf
);

4713 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_GETTEMPPATH\n"));

4714  
	`wöLogEº‹
(
SQLITE_IOERR_GETTEMPPATH
, 
	`osGëLa°Eº‹
(),

4717 
zMu…i
 = 
	`wöUnicodeToUtf8
(
zWideP©h
);

4718 if–
zMu…i
 ){

4719 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zMu…i
);

4720 
	`sqlôe3_‰ì
(
zMu…i
);

4721 
	`sqlôe3_‰ì
(
zWideP©h
);

4723 
	`sqlôe3_‰ì
(
zWideP©h
);

4724 
	`sqlôe3_‰ì
(
zBuf
);

4725 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4726  
SQLITE_IOERR_NOMEM_BKPT
;

4729 #ifde‡
SQLITE_WIN32_HAS_ANSI


4731 *
zUtf8
;

4732 *
zMbcsP©h
 = 
	`sqlôe3MÆlocZîo
–
nMax
 );

4733 if–!
zMbcsP©h
 ){

4734 
	`sqlôe3_‰ì
(
zBuf
);

4735 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4736  
SQLITE_IOERR_NOMEM_BKPT
;

4738 if–
	`osGëTempP©hA
(
nMax
, 
zMbcsP©h
)==0 ){

4739 
	`sqlôe3_‰ì
(
zBuf
);

4740 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_GETTEMPPATH\n"));

4741  
	`wöLogEº‹
(
SQLITE_IOERR_GETTEMPPATH
, 
	`osGëLa°Eº‹
(),

4744 
zUtf8
 = 
	`wöMbcsToUtf8
(
zMbcsP©h
, 
	`osAªFûeApisANSI
());

4745 if–
zUtf8
 ){

4746 
	`sqlôe3_¢¥ötf
(
nMax
, 
zBuf
, "%s", 
zUtf8
);

4747 
	`sqlôe3_‰ì
(
zUtf8
);

4749 
	`sqlôe3_‰ì
(
zBuf
);

4750 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_IOERR_NOMEM\n"));

4751  
SQLITE_IOERR_NOMEM_BKPT
;

4762 if–!
	`wöMakeEndInDúSï
(
nDú
+1, 
zBuf
) ){

4763 
	`sqlôe3_‰ì
(
zBuf
);

4764 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4765  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname4", 0);

4779 
nLí
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4780 if–(
nLí
 + 
nPª
 + 17Ë> 
nBuf
 ){

4781 
	`sqlôe3_‰ì
(
zBuf
);

4782 
	`OSTRACE
(("TEMP-FILENAMEÑc=SQLITE_ERROR\n"));

4783  
	`wöLogEº‹
(
SQLITE_ERROR
, 0, "winGetTempname5", 0);

4786 
	`sqlôe3_¢¥ötf
(
nBuf
-16-
nLí
, 
zBuf
+nLí, 
SQLITE_TEMP_FILE_PREFIX
);

4788 
j
 = 
	`sqlôe3SåÀn30
(
zBuf
);

4789 
	`sqlôe3_øndom√ss
(15, &
zBuf
[
j
]);

4790 
i
=0; i<15; i++, 
j
++){

4791 
zBuf
[
j
] = ()
zCh¨s
[ (()zBuf[j])%((zChars)-1) ];

4793 
zBuf
[
j
] = 0;

4794 
zBuf
[
j
+1] = 0;

4795 *
pzBuf
 = 
zBuf
;

4797 
	`OSTRACE
(("TEMP-FILENAMEÇame=%s,Ñc=SQLITE_OK\n", 
zBuf
));

4798  
SQLITE_OK
;

4799 
	}
}

4806 
	$wöIsDú
(c⁄° *
zC⁄vîãd
){

4807 
DWORD
 
©å
;

4808 
rc
 = 0;

4809 
DWORD
 
œ°Eºno
;

4811 if–
	`osIsNT
() ){

4812 
˙t
 = 0;

4813 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

4814 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

4815  !(
rc
 = 
	`osGëFûeAâribuãsExW
((
LPCWSTR
)
zC⁄vîãd
,

4816 
GëFûeExInfoSènd¨d
,

4817 &
sAârD©a
)Ë&& 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){}

4818 if–!
rc
 ){

4821 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

4822 #i‡
SQLITE_OS_WINCE
==0

4824 
©å
 = 
	`osGëFûeAâribuãsA
((*)
zC⁄vîãd
);

4827  (
©å
!=
INVALID_FILE_ATTRIBUTES
Ë&& (©å&
FILE_ATTRIBUTE_DIRECTORY
);

4828 
	}
}

4833 
	$wöO≥n
(

4834 
sqlôe3_vfs
 *
pVfs
,

4835 c⁄° *
zName
,

4836 
sqlôe3_fûe
 *
id
,

4837 
Êags
,

4838 *
pOutFœgs


4840 
HANDLE
 
h
;

4841 
DWORD
 
œ°Eºno
 = 0;

4842 
DWORD
 
dwDesúedAc˚ss
;

4843 
DWORD
 
dwSh¨eMode
;

4844 
DWORD
 
dwCª©i⁄Di•osôi⁄
;

4845 
DWORD
 
dwFœgsAndAâribuãs
 = 0;

4846 #i‡
SQLITE_OS_WINCE


4847 
isTemp
 = 0;

4849 
wöVfsAµD©a
 *
pAµD©a
;

4850 
wöFûe
 *
pFûe
 = (wöFûe*)
id
;

4851 *
zC⁄vîãd
;

4852 c⁄° *
zUtf8Name
 = 
zName
;

4853 
˙t
 = 0;

4858 *
zTm≤ame
 = 0;

4860 
rc
 = 
SQLITE_OK
;

4861 #i‡!
	`deföed
(
NDEBUG
Ë|| 
SQLITE_OS_WINCE


4862 
eTy≥
 = 
Êags
&0xFFFFFF00;

4865 
isEx˛usive
 = (
Êags
 & 
SQLITE_OPEN_EXCLUSIVE
);

4866 
isDñëe
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
);

4867 
isCª©e
 = (
Êags
 & 
SQLITE_OPEN_CREATE
);

4868 
isRód⁄ly
 = (
Êags
 & 
SQLITE_OPEN_READONLY
);

4869 
isRódWrôe
 = (
Êags
 & 
SQLITE_OPEN_READWRITE
);

4871 #i‚de‡
NDEBUG


4872 
isO≥nJou∫Æ
 = (
isCª©e
 && (

4873 
eTy≥
==
SQLITE_OPEN_MASTER_JOURNAL


4874 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL


4875 || 
eTy≥
==
SQLITE_OPEN_WAL


4879 
	`OSTRACE
(("OPENÇame=%s,ÖFile=%p, flags=%x,ÖOutFlags=%p\n",

4880 
zUtf8Name
, 
id
, 
Êags
, 
pOutFœgs
));

4889 
	`as£π
((
isRód⁄ly
==0 || 
isRódWrôe
==0) && (isReadWrite || isReadonly));

4890 
	`as£π
(
isCª©e
==0 || 
isRódWrôe
);

4891 
	`as£π
(
isEx˛usive
==0 || 
isCª©e
);

4892 
	`as£π
(
isDñëe
==0 || 
isCª©e
);

4896 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_DB
 );

4897 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MAIN_JOURNAL
 );

4898 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_MASTER_JOURNAL
 );

4899 
	`as£π
–(!
isDñëe
 && 
zName
Ë|| 
eTy≥
!=
SQLITE_OPEN_WAL
 );

4902 
	`as£π
–
eTy≥
==
SQLITE_OPEN_MAIN_DB
 ||ÉTy≥==
SQLITE_OPEN_TEMP_DB


4903 || 
eTy≥
==
SQLITE_OPEN_MAIN_JOURNAL
 ||ÉTy≥==
SQLITE_OPEN_TEMP_JOURNAL


4904 || 
eTy≥
==
SQLITE_OPEN_SUBJOURNAL
 ||ÉTy≥==
SQLITE_OPEN_MASTER_JOURNAL


4905 || 
eTy≥
==
SQLITE_OPEN_TRANSIENT_DB
 ||ÉTy≥==
SQLITE_OPEN_WAL


4908 
	`as£π
–
pFûe
!=0 );

4909 
	`mem£t
(
pFûe
, 0, (
wöFûe
));

4910 
pFûe
->
h
 = 
INVALID_HANDLE_VALUE
;

4912 #i‡
SQLITE_OS_WINRT


4913 if–!
zUtf8Name
 && !
sqlôe3_ãmp_dúe˘‹y
 ){

4914 
	`sqlôe3_log
(
SQLITE_ERROR
,

4922 if–!
zUtf8Name
 ){

4923 
	`as£π
–
isDñëe
 && !
isO≥nJou∫Æ
 );

4924 
rc
 = 
	`wöGëTem≤ame
(
pVfs
, &
zTm≤ame
);

4925 if–
rc
!=
SQLITE_OK
 ){

4926 
	`OSTRACE
(("OPENÇame=%s,Ñc=%s", 
zUtf8Name
, 
	`sqlôe3EºName
(
rc
)));

4927  
rc
;

4929 
zUtf8Name
 = 
zTm≤ame
;

4936 
	`as£π
–(
eTy≥
!=
SQLITE_OPEN_MAIN_DB
Ë|| (
Êags
 & 
SQLITE_OPEN_URI
) ||

4937 
zUtf8Name
[
	`sqlôe3SåÀn30
(zUtf8Name)+1]==0 );

4940 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zUtf8Name
);

4941 if–
zC⁄vîãd
==0 ){

4942 
	`sqlôe3_‰ì
(
zTm≤ame
);

4943 
	`OSTRACE
(("OPENÇame=%s,Ñc=SQLITE_IOERR_NOMEM", 
zUtf8Name
));

4944  
SQLITE_IOERR_NOMEM_BKPT
;

4947 if–
	`wöIsDú
(
zC⁄vîãd
) ){

4948 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

4949 
	`sqlôe3_‰ì
(
zTm≤ame
);

4950 
	`OSTRACE
(("OPENÇame=%s,Ñc=SQLITE_CANTOPEN_ISDIR", 
zUtf8Name
));

4951  
SQLITE_CANTOPEN_ISDIR
;

4954 if–
isRódWrôe
 ){

4955 
dwDesúedAc˚ss
 = 
GENERIC_READ
 | 
GENERIC_WRITE
;

4957 
dwDesúedAc˚ss
 = 
GENERIC_READ
;

4964 if–
isEx˛usive
 ){

4967 
dwCª©i⁄Di•osôi⁄
 = 
CREATE_NEW
;

4968 }if–
isCª©e
 ){

4970 
dwCª©i⁄Di•osôi⁄
 = 
OPEN_ALWAYS
;

4973 
dwCª©i⁄Di•osôi⁄
 = 
OPEN_EXISTING
;

4976 
dwSh¨eMode
 = 
FILE_SHARE_READ
 | 
FILE_SHARE_WRITE
;

4978 if–
isDñëe
 ){

4979 #i‡
SQLITE_OS_WINCE


4980 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_HIDDEN
;

4981 
isTemp
 = 1;

4983 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_TEMPORARY


4984 | 
FILE_ATTRIBUTE_HIDDEN


4985 | 
FILE_FLAG_DELETE_ON_CLOSE
;

4988 
dwFœgsAndAâribuãs
 = 
FILE_ATTRIBUTE_NORMAL
;

4992 #i‡
SQLITE_OS_WINCE


4993 
dwFœgsAndAâribuãs
 |
FILE_FLAG_RANDOM_ACCESS
;

4996 if–
	`osIsNT
() ){

4997 #i‡
SQLITE_OS_WINRT


4998 
CREATEFILE2_EXTENDED_PARAMETERS
 
exãndedP¨amëîs
;

4999 
exãndedP¨amëîs
.
dwSize
 = (
CREATEFILE2_EXTENDED_PARAMETERS
);

5000 
exãndedP¨amëîs
.
dwFûeAâribuãs
 =

5001 
dwFœgsAndAâribuãs
 & 
FILE_ATTRIBUTE_MASK
;

5002 
exãndedP¨amëîs
.
dwFûeFœgs
 = 
dwFœgsAndAâribuãs
 & 
FILE_FLAG_MASK
;

5003 
exãndedP¨amëîs
.
dwSecurôyQosFœgs
 = 
SECURITY_ANONYMOUS
;

5004 
exãndedP¨amëîs
.
ÕSecurôyAâribuãs
 = 
NULL
;

5005 
exãndedP¨amëîs
.
hTem∂©eFûe
 = 
NULL
;

5006  (
h
 = 
	`osCª©eFûe2
((
LPCWSTR
)
zC⁄vîãd
,

5007 
dwDesúedAc˚ss
,

5008 
dwSh¨eMode
,

5009 
dwCª©i⁄Di•osôi⁄
,

5010 &
exãndedP¨amëîs
))==
INVALID_HANDLE_VALUE
 &&

5011 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5015  (
h
 = 
	`osCª©eFûeW
((
LPCWSTR
)
zC⁄vîãd
,

5016 
dwDesúedAc˚ss
,

5017 
dwSh¨eMode
, 
NULL
,

5018 
dwCª©i⁄Di•osôi⁄
,

5019 
dwFœgsAndAâribuãs
,

5020 
NULL
))==
INVALID_HANDLE_VALUE
 &&

5021 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5026 #ifde‡
SQLITE_WIN32_HAS_ANSI


5028  (
h
 = 
	`osCª©eFûeA
((
LPCSTR
)
zC⁄vîãd
,

5029 
dwDesúedAc˚ss
,

5030 
dwSh¨eMode
, 
NULL
,

5031 
dwCª©i⁄Di•osôi⁄
,

5032 
dwFœgsAndAâribuãs
,

5033 
NULL
))==
INVALID_HANDLE_VALUE
 &&

5034 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5039 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5041 
	`OSTRACE
(("OPEN fûe=%p,Çame=%s,ác˚ss=%lx,Ñc=%s\n", 
h
, 
zUtf8Name
,

5042 
dwDesúedAc˚ss
, (
h
==
INVALID_HANDLE_VALUE
) ? "failed" : "ok"));

5044 if–
h
==
INVALID_HANDLE_VALUE
 ){

5045 
pFûe
->
œ°Eºno
 =ÜastErrno;

5046 
	`wöLogEº‹
(
SQLITE_CANTOPEN
, 
pFûe
->
œ°Eºno
, "wöO≥n", 
zUtf8Name
);

5047 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5048 
	`sqlôe3_‰ì
(
zTm≤ame
);

5049 if–
isRódWrôe
 && !
isEx˛usive
 ){

5050  
	`wöO≥n
(
pVfs
, 
zName
, 
id
,

5051 ((
Êags
|
SQLITE_OPEN_READONLY
) &

5052 ~(
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_READWRITE
)),

5053 
pOutFœgs
);

5055  
SQLITE_CANTOPEN_BKPT
;

5059 if–
pOutFœgs
 ){

5060 if–
isRódWrôe
 ){

5061 *
pOutFœgs
 = 
SQLITE_OPEN_READWRITE
;

5063 *
pOutFœgs
 = 
SQLITE_OPEN_READONLY
;

5067 
	`OSTRACE
(("OPEN file=%p,Çame=%s,áccess=%lx,ÖOutFlags=%p, *pOutFlags=%d, "

5068 "rc=%s\n", 
h
, 
zUtf8Name
, 
dwDesúedAc˚ss
, 
pOutFœgs
,ÖOutFlags ?

5069 *
pOutFœgs
 : 0, (
h
==
INVALID_HANDLE_VALUE
) ? "failed" : "ok"));

5071 
pAµD©a
 = (
wöVfsAµD©a
*)
pVfs
->pAppData;

5073 #i‡
SQLITE_OS_WINCE


5075 if–
isRódWrôe
 && 
eTy≥
==
SQLITE_OPEN_MAIN_DB


5076 && ((
pAµD©a
==
NULL
Ë|| !pAµD©a->
bNoLock
)

5077 && (
rc
 = 
	`wö˚Cª©eLock
(
zName
, 
pFûe
))!=
SQLITE_OK


5079 
	`osClo£H™dÀ
(
h
);

5080 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5081 
	`sqlôe3_‰ì
(
zTm≤ame
);

5082 
	`OSTRACE
(("OPEN-CE-LOCKÇame=%s,Ñc=%s\n", 
zName
, 
	`sqlôe3EºName
(
rc
)));

5083  
rc
;

5086 if–
isTemp
 ){

5087 
pFûe
->
zDñëeOnClo£
 = 
zC⁄vîãd
;

5091 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5094 
	`sqlôe3_‰ì
(
zTm≤ame
);

5095 
pFûe
->
pMëhod
 = 
pAµD©a
 ?ÖAµD©a->pMëhod : &
wöIoMëhod
;

5096 
pFûe
->
pVfs
 =ÖVfs;

5097 
pFûe
->
h
 = h;

5098 if–
isRód⁄ly
 ){

5099 
pFûe
->
˘æFœgs
 |
WINFILE_RDONLY
;

5101 if–
	`sqlôe3_uri_boﬁón
(
zName
, "psow", 
SQLITE_POWERSAFE_OVERWRITE
) ){

5102 
pFûe
->
˘æFœgs
 |
WINFILE_PSOW
;

5104 
pFûe
->
œ°Eºno
 = 
NO_ERROR
;

5105 
pFûe
->
zP©h
 = 
zName
;

5106 #i‡
SQLITE_MAX_MMAP_SIZE
>0

5107 
pFûe
->
hM≠
 = 
NULL
;

5108 
pFûe
->
pM≠Regi⁄
 = 0;

5109 
pFûe
->
mm≠Size
 = 0;

5110 
pFûe
->
mm≠SizeA˘uÆ
 = 0;

5111 
pFûe
->
mm≠SizeMax
 = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

5114 
	`O≥nCou¡î
(+1);

5115  
rc
;

5116 
	}
}

5130 
	$wöDñëe
(

5131 
sqlôe3_vfs
 *
pVfs
,

5132 c⁄° *
zFûíame
,

5133 
syncDú


5135 
˙t
 = 0;

5136 
rc
;

5137 
DWORD
 
©å
;

5138 
DWORD
 
œ°Eºno
 = 0;

5139 *
zC⁄vîãd
;

5140 
	`UNUSED_PARAMETER
(
pVfs
);

5141 
	`UNUSED_PARAMETER
(
syncDú
);

5143 
	`SimuœãIOEº‹
( 
SQLITE_IOERR_DELETE
);

5144 
	`OSTRACE
(("DELETEÇame=%s, syncDú=%d\n", 
zFûíame
, 
syncDú
));

5146 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5147 if–
zC⁄vîãd
==0 ){

5148 
	`OSTRACE
(("DELETEÇame=%s,Ñc=SQLITE_IOERR_NOMEM\n", 
zFûíame
));

5149  
SQLITE_IOERR_NOMEM_BKPT
;

5151 if–
	`osIsNT
() ){

5153 #i‡
SQLITE_OS_WINRT


5154 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

5155 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

5156 i‡–
	`osGëFûeAâribuãsExW
(
zC⁄vîãd
, 
GëFûeExInfoSènd¨d
,

5157 &
sAârD©a
) ){

5158 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

5160 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5161 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5162 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5163 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5165 
rc
 = 
SQLITE_ERROR
;

5170 
©å
 = 
	`osGëFûeAâribuãsW
(
zC⁄vîãd
);

5172 i‡–
©å
==
INVALID_FILE_ATTRIBUTES
 ){

5173 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5174 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5175 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5176 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5178 
rc
 = 
SQLITE_ERROR
;

5182 i‡–
©å
&
FILE_ATTRIBUTE_DIRECTORY
 ){

5183 
rc
 = 
SQLITE_ERROR
;

5186 i‡–
	`osDñëeFûeW
(
zC⁄vîãd
) ){

5187 
rc
 = 
SQLITE_OK
;

5190 i‡–!
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5191 
rc
 = 
SQLITE_ERROR
;

5196 #ifde‡
SQLITE_WIN32_HAS_ANSI


5199 
©å
 = 
	`osGëFûeAâribuãsA
(
zC⁄vîãd
);

5200 i‡–
©å
==
INVALID_FILE_ATTRIBUTES
 ){

5201 
œ°Eºno
 = 
	`osGëLa°Eº‹
();

5202 if–
œ°Eºno
==
ERROR_FILE_NOT_FOUND


5203 || 
œ°Eºno
==
ERROR_PATH_NOT_FOUND
 ){

5204 
rc
 = 
SQLITE_IOERR_DELETE_NOENT
;

5206 
rc
 = 
SQLITE_ERROR
;

5210 i‡–
©å
&
FILE_ATTRIBUTE_DIRECTORY
 ){

5211 
rc
 = 
SQLITE_ERROR
;

5214 i‡–
	`osDñëeFûeA
(
zC⁄vîãd
) ){

5215 
rc
 = 
SQLITE_OK
;

5218 i‡–!
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){

5219 
rc
 = 
SQLITE_ERROR
;

5225 if–
rc
 &&Ñc!=
SQLITE_IOERR_DELETE_NOENT
 ){

5226 
rc
 = 
	`wöLogEº‹
(
SQLITE_IOERR_DELETE
, 
œ°Eºno
, "wöDñëe", 
zFûíame
);

5228 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5230 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5231 
	`OSTRACE
(("DELETEÇame=%s,Ñc=%s\n", 
zFûíame
, 
	`sqlôe3EºName
(
rc
)));

5232  
rc
;

5233 
	}
}

5238 
	$wöAc˚ss
(

5239 
sqlôe3_vfs
 *
pVfs
,

5240 c⁄° *
zFûíame
,

5241 
Êags
,

5242 *
pResOut


5244 
DWORD
 
©å
;

5245 
rc
 = 0;

5246 
DWORD
 
œ°Eºno
 = 0;

5247 *
zC⁄vîãd
;

5248 
	`UNUSED_PARAMETER
(
pVfs
);

5250 
	`SimuœãIOEº‹
– 
SQLITE_IOERR_ACCESS
; );

5251 
	`OSTRACE
(("ACCESSÇame=%s, flags=%x,ÖResOut=%p\n",

5252 
zFûíame
, 
Êags
, 
pResOut
));

5254 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5255 if–
zC⁄vîãd
==0 ){

5256 
	`OSTRACE
(("ACCESSÇame=%s,Ñc=SQLITE_IOERR_NOMEM\n", 
zFûíame
));

5257  
SQLITE_IOERR_NOMEM_BKPT
;

5259 if–
	`osIsNT
() ){

5260 
˙t
 = 0;

5261 
WIN32_FILE_ATTRIBUTE_DATA
 
sAârD©a
;

5262 
	`mem£t
(&
sAârD©a
, 0, (sAttrData));

5263  !(
rc
 = 
	`osGëFûeAâribuãsExW
((
LPCWSTR
)
zC⁄vîãd
,

5264 
GëFûeExInfoSènd¨d
,

5265 &
sAârD©a
)Ë&& 
	`wöRëryI€º
(&
˙t
, &
œ°Eºno
) ){}

5266 if–
rc
 ){

5270 if–
Êags
==
SQLITE_ACCESS_EXISTS


5271 && 
sAârD©a
.
nFûeSizeHigh
==0

5272 && 
sAârD©a
.
nFûeSizeLow
==0 ){

5273 
©å
 = 
INVALID_FILE_ATTRIBUTES
;

5275 
©å
 = 
sAârD©a
.
dwFûeAâribuãs
;

5278 
	`wöLogI€º
(
˙t
, 
__LINE__
);

5279 if–
œ°Eºno
!=
ERROR_FILE_NOT_FOUND
 &&Üa°Eºno!=
ERROR_PATH_NOT_FOUND
 ){

5280 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5281  
	`wöLogEº‹
(
SQLITE_IOERR_ACCESS
, 
œ°Eºno
, "winAccess",

5282 
zFûíame
);

5284 
©å
 = 
INVALID_FILE_ATTRIBUTES
;

5288 #ifde‡
SQLITE_WIN32_HAS_ANSI


5290 
©å
 = 
	`osGëFûeAâribuãsA
((*)
zC⁄vîãd
);

5293 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5294  
Êags
 ){

5295 
SQLITE_ACCESS_READ
:

5296 
SQLITE_ACCESS_EXISTS
:

5297 
rc
 = 
©å
!=
INVALID_FILE_ATTRIBUTES
;

5299 
SQLITE_ACCESS_READWRITE
:

5300 
rc
 = 
©å
!=
INVALID_FILE_ATTRIBUTES
 &&

5301 (
©å
 & 
FILE_ATTRIBUTE_READONLY
)==0;

5304 
	`as£π
(!"Invalid flagsárgument");

5306 *
pResOut
 = 
rc
;

5307 
	`OSTRACE
(("ACCESSÇame=%s,ÖResOut=%p, *pResOut=%d,Ñc=SQLITE_OK\n",

5308 
zFûíame
, 
pResOut
, *pResOut));

5309  
SQLITE_OK
;

5310 
	}
}

5316 
BOOL
 
	$wöIsDriveLëãrAndCﬁ⁄
(

5317 c⁄° *
zP©h«me


5319  ( 
	`sqlôe3IßÕha
(
zP©h«me
[0]) && zPathname[1]==':' );

5320 
	}
}

5328 
BOOL
 
	$wöIsVîb©imP©h«me
(

5329 c⁄° *
zP©h«me


5338 i‡–
	`wöIsDúSï
(
zP©h«me
[0]) ){

5339  
TRUE
;

5348 i‡–
	`wöIsDriveLëãrAndCﬁ⁄
(
zP©h«me
) ){

5349  
TRUE
;

5356  
FALSE
;

5357 
	}
}

5364 
	$wöFuŒP©h«me
(

5365 
sqlôe3_vfs
 *
pVfs
,

5366 c⁄° *
zRñ©ive
,

5367 
nFuŒ
,

5368 *
zFuŒ


5370 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

5371 
DWORD
 
nByã
;

5372 *
zC⁄vîãd
;

5373 *
zOut
;

5379 if–
zRñ©ive
[0]=='/' && 
	`wöIsDriveLëãrAndCﬁ⁄
(zRelative+1) ){

5380 
zRñ©ive
++;

5383 #i‡
	`deföed
(
__CYGWIN__
)

5384 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5385 
	`UNUSED_PARAMETER
(
nFuŒ
);

5386 
	`as£π
–
nFuŒ
>=
pVfs
->
mxP©h«me
 );

5387 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5394 *
zOut
 = 
	`sqlôe3MÆlocZîo
–
pVfs
->
mxP©h«me
+1 );

5395 if–!
zOut
 ){

5396  
SQLITE_IOERR_NOMEM_BKPT
;

5398 if–
	`cygwö_c⁄v_∑th
(

5399 (
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
) |

5400 
CCP_RELATIVE
, 
zRñ©ive
, 
zOut
, 
pVfs
->
mxP©h«me
+1)<0 ){

5401 
	`sqlôe3_‰ì
(
zOut
);

5402  
	`wöLogEº‹
(
SQLITE_CANTOPEN_CONVPATH
, (
DWORD
)
î∫o
,

5403 "wöFuŒP©h«me1", 
zRñ©ive
);

5405 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zOut
);

5406 if–!
zUtf8
 ){

5407 
	`sqlôe3_‰ì
(
zOut
);

5408  
SQLITE_IOERR_NOMEM_BKPT
;

5410 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5411 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zUtf8
);

5412 
	`sqlôe3_‰ì
(
zUtf8
);

5413 
	`sqlôe3_‰ì
(
zOut
);

5416 *
zOut
 = 
	`sqlôe3MÆlocZîo
–
pVfs
->
mxP©h«me
+1 );

5417 if–!
zOut
 ){

5418  
SQLITE_IOERR_NOMEM_BKPT
;

5420 if–
	`cygwö_c⁄v_∑th
(

5421 (
	`osIsNT
(Ë? 
CCP_POSIX_TO_WIN_W
 : 
CCP_POSIX_TO_WIN_A
),

5422 
zRñ©ive
, 
zOut
, 
pVfs
->
mxP©h«me
+1)<0 ){

5423 
	`sqlôe3_‰ì
(
zOut
);

5424  
	`wöLogEº‹
(
SQLITE_CANTOPEN_CONVPATH
, (
DWORD
)
î∫o
,

5425 "wöFuŒP©h«me2", 
zRñ©ive
);

5427 *
zUtf8
 = 
	`wöC⁄vîtToUtf8Fûíame
(
zOut
);

5428 if–!
zUtf8
 ){

5429 
	`sqlôe3_‰ì
(
zOut
);

5430  
SQLITE_IOERR_NOMEM_BKPT
;

5432 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zUtf8
);

5433 
	`sqlôe3_‰ì
(
zUtf8
);

5434 
	`sqlôe3_‰ì
(
zOut
);

5437  
SQLITE_OK
;

5440 #i‡(
SQLITE_OS_WINCE
 || 
SQLITE_OS_WINRT
Ë&& !
	`deföed
(
__CYGWIN__
)

5441 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5444 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5451 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5452 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zRñ©ive
);

5454 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zRñ©ive
);

5456  
SQLITE_OK
;

5459 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && !
	`deföed
(
__CYGWIN__
)

5465 
	`SimuœãIOEº‹
– 
SQLITE_ERROR
 );

5466 i‡–
sqlôe3_d©a_dúe˘‹y
 && !
	`wöIsVîb©imP©h«me
(
zRñ©ive
) ){

5473 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s%c%s",

5474 
sqlôe3_d©a_dúe˘‹y
, 
	`wöGëDúSï
(), 
zRñ©ive
);

5475  
SQLITE_OK
;

5477 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zRñ©ive
);

5478 if–
zC⁄vîãd
==0 ){

5479  
SQLITE_IOERR_NOMEM_BKPT
;

5481 if–
	`osIsNT
() ){

5482 
LPWSTR
 
zTemp
;

5483 
nByã
 = 
	`osGëFuŒP©hNameW
((
LPCWSTR
)
zC⁄vîãd
, 0, 0, 0);

5484 if–
nByã
==0 ){

5485 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5486  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5487 "wöFuŒP©h«me1", 
zRñ©ive
);

5489 
nByã
 += 3;

5490 
zTemp
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(zTemp[0]) );

5491 if–
zTemp
==0 ){

5492 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5493  
SQLITE_IOERR_NOMEM_BKPT
;

5495 
nByã
 = 
	`osGëFuŒP©hNameW
((
LPCWSTR
)
zC⁄vîãd
,ÇByã, 
zTemp
, 0);

5496 if–
nByã
==0 ){

5497 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5498 
	`sqlôe3_‰ì
(
zTemp
);

5499  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5500 "wöFuŒP©h«me2", 
zRñ©ive
);

5502 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5503 
zOut
 = 
	`wöUnicodeToUtf8
(
zTemp
);

5504 
	`sqlôe3_‰ì
(
zTemp
);

5506 #ifde‡
SQLITE_WIN32_HAS_ANSI


5508 *
zTemp
;

5509 
nByã
 = 
	`osGëFuŒP©hNameA
((*)
zC⁄vîãd
, 0, 0, 0);

5510 if–
nByã
==0 ){

5511 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5512  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5513 "wöFuŒP©h«me3", 
zRñ©ive
);

5515 
nByã
 += 3;

5516 
zTemp
 = 
	`sqlôe3MÆlocZîo
–
nByã
*(zTemp[0]) );

5517 if–
zTemp
==0 ){

5518 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5519  
SQLITE_IOERR_NOMEM_BKPT
;

5521 
nByã
 = 
	`osGëFuŒP©hNameA
((*)
zC⁄vîãd
,ÇByã, 
zTemp
, 0);

5522 if–
nByã
==0 ){

5523 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5524 
	`sqlôe3_‰ì
(
zTemp
);

5525  
	`wöLogEº‹
(
SQLITE_CANTOPEN_FULLPATH
, 
	`osGëLa°Eº‹
(),

5526 "wöFuŒP©h«me4", 
zRñ©ive
);

5528 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5529 
zOut
 = 
	`wöMbcsToUtf8
(
zTemp
, 
	`osAªFûeApisANSI
());

5530 
	`sqlôe3_‰ì
(
zTemp
);

5533 if–
zOut
 ){

5534 
	`sqlôe3_¢¥ötf
(
	`MIN
(
nFuŒ
, 
pVfs
->
mxP©h«me
), 
zFuŒ
, "%s", 
zOut
);

5535 
	`sqlôe3_‰ì
(
zOut
);

5536  
SQLITE_OK
;

5538  
SQLITE_IOERR_NOMEM_BKPT
;

5541 
	}
}

5543 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


5548 *
	$wöDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zFûíame
){

5549 
HANDLE
 
h
;

5550 #i‡
	`deföed
(
__CYGWIN__
)

5551 
nFuŒ
 = 
pVfs
->
mxP©h«me
+1;

5552 *
zFuŒ
 = 
	`sqlôe3MÆlocZîo
–
nFuŒ
 );

5553 *
zC⁄vîãd
 = 0;

5554 if–
zFuŒ
==0 ){

5555 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5558 if–
	`wöFuŒP©h«me
(
pVfs
, 
zFûíame
, 
nFuŒ
, 
zFuŒ
)!=
SQLITE_OK
 ){

5559 
	`sqlôe3_‰ì
(
zFuŒ
);

5560 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5563 
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFuŒ
);

5564 
	`sqlôe3_‰ì
(
zFuŒ
);

5566 *
zC⁄vîãd
 = 
	`wöC⁄vîtFromUtf8Fûíame
(
zFûíame
);

5567 
	`UNUSED_PARAMETER
(
pVfs
);

5569 if–
zC⁄vîãd
==0 ){

5570 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)0));

5573 if–
	`osIsNT
() ){

5574 #i‡
SQLITE_OS_WINRT


5575 
h
 = 
	`osLﬂdPackagedLibøry
((
LPCWSTR
)
zC⁄vîãd
, 0);

5577 
h
 = 
	`osLﬂdLibøryW
((
LPCWSTR
)
zC⁄vîãd
);

5580 #ifde‡
SQLITE_WIN32_HAS_ANSI


5582 
h
 = 
	`osLﬂdLibøryA
((*)
zC⁄vîãd
);

5585 
	`OSTRACE
(("DLOPENÇame=%s, h™dÀ=%p\n", 
zFûíame
, (*)
h
));

5586 
	`sqlôe3_‰ì
(
zC⁄vîãd
);

5587  (*)
h
;

5588 
	}
}

5589 
	$wöDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBufOut
){

5590 
	`UNUSED_PARAMETER
(
pVfs
);

5591 
	`wöGëLa°Eº‹Msg
(
	`osGëLa°Eº‹
(), 
nBuf
, 
zBufOut
);

5592 
	}
}

5593 (*
	$wöDlSym
(
sqlôe3_vfs
 *
pVfs
,*
pH
,c⁄° *
zSym
))(){

5594 
FARPROC
 
¥oc
;

5595 
	`UNUSED_PARAMETER
(
pVfs
);

5596 
¥oc
 = 
	`osGëProcAddªssA
((
HANDLE
)
pH
, 
zSym
);

5597 
	`OSTRACE
(("DLSYM handle=%p, symbol=%s,áddress=%p\n",

5598 (*)
pH
, 
zSym
, (*)
¥oc
));

5599  ((*)())
¥oc
;

5600 
	}
}

5601 
	$wöDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

5602 
	`UNUSED_PARAMETER
(
pVfs
);

5603 
	`osFªeLibøry
((
HANDLE
)
pH™dÀ
);

5604 
	`OSTRACE
(("DLCLOSE h™dÀ=%p\n", (*)
pH™dÀ
));

5605 
	}
}

5607 
	#wöDlO≥n
 0

	)

5608 
	#wöDlEº‹
 0

	)

5609 
	#wöDlSym
 0

	)

5610 
	#wöDlClo£
 0

	)

5614 
E¡r›yG©hîî
 
	tE¡r›yG©hîî
;

5615 
	sE¡r›yG©hîî
 {

5616 *
	ma
;

5617 
	m«
;

5618 
	mi
;

5619 
	mnX‹
;

5622 #i‡!
deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_OMIT_RANDOMNESS
)

5624 
	$x‹Mem‹y
(
E¡r›yG©hîî
 *
p
, *
x
, 
sz
){

5625 
j
, 
k
;

5626 
j
=0, 
k
=
p
->
i
; j<
sz
; j++){

5627 
p
->
a
[
k
++] ^
x
[
j
];

5628 if–
k
>=
p
->
«
 ) k = 0;

5630 
p
->
i
 = 
k
;

5631 
p
->
nX‹
 +
sz
;

5632 
	}
}

5638 
	$wöR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBuf
){

5639 #i‡
	`deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_OMIT_RANDOMNESS
)

5640 
	`UNUSED_PARAMETER
(
pVfs
);

5641 
	`mem£t
(
zBuf
, 0, 
nBuf
);

5642  
nBuf
;

5644 
E¡r›yG©hîî
 
e
;

5645 
	`UNUSED_PARAMETER
(
pVfs
);

5646 
	`mem£t
(
zBuf
, 0, 
nBuf
);

5647 #i‡
	`deföed
(
_MSC_VER
Ë&& _MSC_VER>=1400 && !
SQLITE_OS_WINCE


5648 
	`ønd_s
((*)
zBuf
);

5650 
e
.
a
 = (*)
zBuf
;

5651 
e
.
«
 = 
nBuf
;

5652 
e
.
nX‹
 = 0;

5653 
e
.
i
 = 0;

5655 
SYSTEMTIME
 
x
;

5656 
	`osGëSy°emTime
(&
x
);

5657 
	`x‹Mem‹y
(&
e
, (*)&
x
, (
SYSTEMTIME
));

5660 
DWORD
 
pid
 = 
	`osGëCuºítPro˚ssId
();

5661 
	`x‹Mem‹y
(&
e
, (*)&
pid
, (
DWORD
));

5663 #i‡
SQLITE_OS_WINRT


5665 
ULONGLONG
 
˙t
 = 
	`osGëTickCou¡64
();

5666 
	`x‹Mem‹y
(&
e
, (*)&
˙t
, (
ULONGLONG
));

5670 
DWORD
 
˙t
 = 
	`osGëTickCou¡
();

5671 
	`x‹Mem‹y
(&
e
, (*)&
˙t
, (
DWORD
));

5675 
LARGE_INTEGER
 
i
;

5676 
	`osQuîyPîf‹m™˚Cou¡î
(&
i
);

5677 
	`x‹Mem‹y
(&
e
, (*)&
i
, (
LARGE_INTEGER
));

5679 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && 
SQLITE_WIN32_USE_UUID


5681 
UUID
 
id
;

5682 
	`mem£t
(&
id
, 0, (
UUID
));

5683 
	`osUuidCª©e
(&
id
);

5684 
	`x‹Mem‹y
(&
e
, (*)&
id
, (
UUID
));

5685 
	`mem£t
(&
id
, 0, (
UUID
));

5686 
	`osUuidCª©eSequítül
(&
id
);

5687 
	`x‹Mem‹y
(&
e
, (*)&
id
, (
UUID
));

5690  
e
.
nX‹
>
nBuf
 ?ÇBuf :É.nXor;

5692 
	}
}

5698 
	$wöSÀï
(
sqlôe3_vfs
 *
pVfs
, 
mi¸o£c
){

5699 
	`sqlôe3_wö32_¶ìp
((
mi¸o£c
+999)/1000);

5700 
	`UNUSED_PARAMETER
(
pVfs
);

5701  ((
mi¸o£c
+999)/1000)*1000;

5702 
	}
}

5709 #ifde‡
SQLITE_TEST


5710 
	gsqlôe3_cuºít_time
 = 0;

5723 
	$wöCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
piNow
){

5727 
FILETIME
 
·
;

5728 c⁄° 
sqlôe3_öt64
 
wöFûëimeEpoch
 = 23058135*(sqlite3_int64)8640000;

5729 #ifde‡
SQLITE_TEST


5730 c⁄° 
sqlôe3_öt64
 
unixEpoch
 = 24405875*(sqlite3_int64)8640000;

5733 c⁄° 
sqlôe3_öt64
 
max32BôVÆue
 =

5734 (
sqlôe3_öt64
)2000000000 + (sqlite3_int64)2000000000 +

5735 (
sqlôe3_öt64
)294967296;

5737 #i‡
SQLITE_OS_WINCE


5738 
SYSTEMTIME
 
time
;

5739 
	`osGëSy°emTime
(&
time
);

5741 i‡(!
	`osSy°emTimeToFûeTime
(&
time
,&
·
)){

5742  
SQLITE_ERROR
;

5745 
	`osGëSy°emTimeAsFûeTime
–&
·
 );

5748 *
piNow
 = 
wöFûëimeEpoch
 +

5749 ((((
sqlôe3_öt64
)
·
.
dwHighD©eTime
)*
max32BôVÆue
) +

5750 (
sqlôe3_öt64
)
·
.
dwLowD©eTime
)/(sqlite3_int64)10000;

5752 #ifde‡
SQLITE_TEST


5753 if–
sqlôe3_cuºít_time
 ){

5754 *
piNow
 = 1000*(
sqlôe3_öt64
)
sqlôe3_cuºít_time
 + 
unixEpoch
;

5757 
	`UNUSED_PARAMETER
(
pVfs
);

5758  
SQLITE_OK
;

5759 
	}
}

5766 
	$wöCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
¥Now
){

5767 
rc
;

5768 
sqlôe3_öt64
 
i
;

5769 
rc
 = 
	`wöCuºítTimeI¡64
(
pVfs
, &
i
);

5770 if–!
rc
 ){

5771 *
¥Now
 = 
i
/86400000.0;

5773  
rc
;

5774 
	}
}

5806 
	$wöGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
nBuf
, *
zBuf
){

5807 
DWORD
 
e
 = 
	`osGëLa°Eº‹
();

5808 
	`UNUSED_PARAMETER
(
pVfs
);

5809 if–
nBuf
>0 ) 
	`wöGëLa°Eº‹Msg
(
e
,ÇBuf, 
zBuf
);

5810  
e
;

5811 
	}
}

5816 
	$sqlôe3_os_öô
(){

5817 
sqlôe3_vfs
 
wöVfs
 = {

5819 (
wöFûe
),

5820 
SQLITE_WIN32_MAX_PATH_BYTES
,

5823 &
wöAµD©a
,

5824 
wöO≥n
,

5825 
wöDñëe
,

5826 
wöAc˚ss
,

5827 
wöFuŒP©h«me
,

5828 
wöDlO≥n
,

5829 
wöDlEº‹
,

5830 
wöDlSym
,

5831 
wöDlClo£
,

5832 
wöR™dom√ss
,

5833 
wöSÀï
,

5834 
wöCuºítTime
,

5835 
wöGëLa°Eº‹
,

5836 
wöCuºítTimeI¡64
,

5837 
wöSëSy°emCÆl
,

5838 
wöGëSy°emCÆl
,

5839 
wöNextSy°emCÆl
,

5841 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5842 
sqlôe3_vfs
 
wöL⁄gP©hVfs
 = {

5844 (
wöFûe
),

5845 
SQLITE_WINNT_MAX_PATH_BYTES
,

5848 &
wöAµD©a
,

5849 
wöO≥n
,

5850 
wöDñëe
,

5851 
wöAc˚ss
,

5852 
wöFuŒP©h«me
,

5853 
wöDlO≥n
,

5854 
wöDlEº‹
,

5855 
wöDlSym
,

5856 
wöDlClo£
,

5857 
wöR™dom√ss
,

5858 
wöSÀï
,

5859 
wöCuºítTime
,

5860 
wöGëLa°Eº‹
,

5861 
wöCuºítTimeI¡64
,

5862 
wöSëSy°emCÆl
,

5863 
wöGëSy°emCÆl
,

5864 
wöNextSy°emCÆl
,

5867 
sqlôe3_vfs
 
wöNﬁockVfs
 = {

5869 (
wöFûe
),

5870 
SQLITE_WIN32_MAX_PATH_BYTES
,

5873 &
wöNﬁockAµD©a
,

5874 
wöO≥n
,

5875 
wöDñëe
,

5876 
wöAc˚ss
,

5877 
wöFuŒP©h«me
,

5878 
wöDlO≥n
,

5879 
wöDlEº‹
,

5880 
wöDlSym
,

5881 
wöDlClo£
,

5882 
wöR™dom√ss
,

5883 
wöSÀï
,

5884 
wöCuºítTime
,

5885 
wöGëLa°Eº‹
,

5886 
wöCuºítTimeI¡64
,

5887 
wöSëSy°emCÆl
,

5888 
wöGëSy°emCÆl
,

5889 
wöNextSy°emCÆl
,

5891 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5892 
sqlôe3_vfs
 
wöL⁄gP©hNﬁockVfs
 = {

5894 (
wöFûe
),

5895 
SQLITE_WINNT_MAX_PATH_BYTES
,

5898 &
wöNﬁockAµD©a
,

5899 
wöO≥n
,

5900 
wöDñëe
,

5901 
wöAc˚ss
,

5902 
wöFuŒP©h«me
,

5903 
wöDlO≥n
,

5904 
wöDlEº‹
,

5905 
wöDlSym
,

5906 
wöDlClo£
,

5907 
wöR™dom√ss
,

5908 
wöSÀï
,

5909 
wöCuºítTime
,

5910 
wöGëLa°Eº‹
,

5911 
wöCuºítTimeI¡64
,

5912 
wöSëSy°emCÆl
,

5913 
wöGëSy°emCÆl
,

5914 
wöNextSy°emCÆl
,

5920 
	`as£π
–
	`AºaySize
(
aSysˇŒ
)==80 );

5923 
	`mem£t
(&
wöSysInfo
, 0, (
SYSTEM_INFO
));

5924 #i‡
SQLITE_OS_WINRT


5925 
	`osGëN©iveSy°emInfo
(&
wöSysInfo
);

5927 
	`osGëSy°emInfo
(&
wöSysInfo
);

5929 
	`as£π
–
wöSysInfo
.
dwAŒoˇti⁄Gønuœrôy
>0 );

5930 
	`as£π
–
wöSysInfo
.
dwPageSize
>0 );

5932 
	`sqlôe3_vfs_ªgi°î
(&
wöVfs
, 1);

5934 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5935 
	`sqlôe3_vfs_ªgi°î
(&
wöL⁄gP©hVfs
, 0);

5938 
	`sqlôe3_vfs_ªgi°î
(&
wöNﬁockVfs
, 0);

5940 #i‡
	`deföed
(
SQLITE_WIN32_HAS_WIDE
)

5941 
	`sqlôe3_vfs_ªgi°î
(&
wöL⁄gP©hNﬁockVfs
, 0);

5944  
SQLITE_OK
;

5945 
	}
}

5947 
	$sqlôe3_os_íd
(){

5948 #i‡
SQLITE_OS_WINRT


5949 if–
¶ìpObj
!=
NULL
 ){

5950 
	`osClo£H™dÀ
(
¶ìpObj
);

5951 
¶ìpObj
 = 
NULL
;

5954  
SQLITE_OK
;

5955 
	}
}

	@os_win.h

15 #i‚de‡
SQLITE_OS_WIN_H


16 
	#SQLITE_OS_WIN_H


	)

21 
	~"wödows.h
"

23 #ifde‡
__CYGWIN__


24 
	~<sys/cygwö.h
>

25 
	~<î∫o.h
>

45 #i‡
SQLITE_OS_WIN
 && !
deföed
(
SQLITE_OS_WINNT
)

46 
	#SQLITE_OS_WINNT
 1

	)

53 #i‡
deföed
(
_WIN32_WCE
)

54 
	#SQLITE_OS_WINCE
 1

	)

56 
	#SQLITE_OS_WINCE
 0

	)

63 #i‡!
deföed
(
SQLITE_OS_WINRT
)

64 
	#SQLITE_OS_WINRT
 0

	)

71 #i‡
SQLITE_OS_WINCE


72 
	#SQLITE_WIN32_VOLATILE


	)

74 
	#SQLITE_WIN32_VOLATILE
 vﬁ©ûe

	)

81 #i‡
SQLITE_OS_WIN
 && !
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT
 && \

82 
	gSQLITE_THREADSAFE
>0 && !
	$deföed
(
__CYGWIN__
)

83 
	#SQLITE_OS_WIN_THREADS
 1

	)

85 
	#SQLITE_OS_WIN_THREADS
 0

	)

	@pager.c

21 #i‚de‡
SQLITE_OMIT_DISKIO


22 
	~"sqlôeI¡.h
"

23 
	~"wÆ.h
"

116 
	gsqlôe3PagîTø˚
=1;

117 
	#sqlôe3DebugPrötf
 
¥ötf


	)

118 
	#PAGERTRACE
(
X
Ëif–
sqlôe3PagîTø˚
 ){ 
sqlôe3DebugPrötf
 X; }

	)

120 
	#PAGERTRACE
(
X
)

	)

131 
	#PAGERID
(
p
Ë(()’->
fd
))

	)

132 
	#FILEHANDLEID
(
fd
Ë(()fd)

	)

351 
	#PAGER_OPEN
 0

	)

352 
	#PAGER_READER
 1

	)

353 
	#PAGER_WRITER_LOCKED
 2

	)

354 
	#PAGER_WRITER_CACHEMOD
 3

	)

355 
	#PAGER_WRITER_DBMOD
 4

	)

356 
	#PAGER_WRITER_FINISHED
 5

	)

357 
	#PAGER_ERROR
 6

	)

407 
	#UNKNOWN_LOCK
 (
EXCLUSIVE_LOCK
+1)

	)

412 #ifde‡
SQLITE_HAS_CODEC


413 
	#CODEC1
(
P
,
D
,
N
,
X
,
E
) \

414 if–
P
->
xCodec
 && P->
	`xCodec
(P->
pCodec
,
D
,
N
,
X
)==0 ){ 
E
; }

	)

415 
	#CODEC2
(
P
,
D
,
N
,
X
,
E
,
O
) \

416 if–
P
->
xCodec
==0 ){ 
O
=(*)
D
; }\

417 if–(
O
=(*)(
P
->
	`xCodec
(P->
pCodec
,
D
,
N
,
X
)))==0 ){ 
E
; }

	)

419 
	#CODEC1
(
P
,
D
,
N
,
X
,
E
Ë

	)

420 
	#CODEC2
(
P
,
D
,
N
,
X
,
E
,
O
ËO=(*)
	)
D

429 
	#MAX_SECTOR_SIZE
 0x10000

	)

445 
PagîSavïoöt
 
	tPagîSavïoöt
;

446 
	sPagîSavïoöt
 {

447 
i64
 
	miOff£t
;

448 
i64
 
	miHdrOff£t
;

449 
Bôvec
 *
	mpInSavïoöt
;

450 
Pgno
 
	mnOrig
;

451 
Pgno
 
	miSubRec
;

452 #i‚de‡
SQLITE_OMIT_WAL


453 
u32
 
	maWÆD©a
[
WAL_SAVEPOINT_NDATA
];

460 
	#SPILLFLAG_OFF
 0x01

	)

461 
	#SPILLFLAG_ROLLBACK
 0x02

	)

462 
	#SPILLFLAG_NOSYNC
 0x04

	)

620 
	sPagî
 {

621 
sqlôe3_vfs
 *
	mpVfs
;

622 
u8
 
	mex˛usiveMode
;

623 
u8
 
	mjou∫ÆMode
;

624 
u8
 
	mu£Jou∫Æ
;

625 
u8
 
	mnoSync
;

626 
u8
 
	mfuŒSync
;

627 
u8
 
	mexåaSync
;

628 
u8
 
	mck±SyncFœgs
;

629 
u8
 
	mwÆSyncFœgs
;

630 
u8
 
	msyncFœgs
;

631 
u8
 
	mãmpFûe
;

632 
u8
 
	mnoLock
;

633 
u8
 
	mªadO∆y
;

634 
u8
 
	mmemDb
;

645 
u8
 
	meSèã
;

646 
u8
 
	meLock
;

647 
u8
 
	mch™geCou¡D⁄e
;

648 
u8
 
	m£tMa°î
;

649 
u8
 
	mdoNŸSpûl
;

650 
u8
 
	msubjInMem‹y
;

651 
u8
 
	mbU£Fëch
;

652 
u8
 
	mhasHñdSh¨edLock
;

653 
Pgno
 
	mdbSize
;

654 
Pgno
 
	mdbOrigSize
;

655 
Pgno
 
	mdbFûeSize
;

656 
Pgno
 
	mdbHötSize
;

657 
	mîrCode
;

658 
	mnRec
;

659 
u32
 
	mcksumInô
;

660 
u32
 
	mnSubRec
;

661 
Bôvec
 *
	mpInJou∫Æ
;

662 
sqlôe3_fûe
 *
	mfd
;

663 
sqlôe3_fûe
 *
	mjfd
;

664 
sqlôe3_fûe
 *
	msjfd
;

665 
i64
 
	mjou∫ÆOff
;

666 
i64
 
	mjou∫ÆHdr
;

667 
sqlôe3_backup
 *
	mpBackup
;

668 
PagîSavïoöt
 *
	maSavïoöt
;

669 
	mnSavïoöt
;

670 
u32
 
	miD©aVîsi⁄
;

671 
	mdbFûeVîs
[16];

673 
	mnMm≠Out
;

674 
sqlôe3_öt64
 
	mszMm≠
;

675 
PgHdr
 *
	mpMm≠Fªñi°
;

680 
u16
 
	mnExåa
;

681 
i16
 
	mnRe£rve
;

682 
u32
 
	mvfsFœgs
;

683 
u32
 
	m£˘‹Size
;

684 
	m∑geSize
;

685 
Pgno
 
	mmxPgno
;

686 
i64
 
	mjou∫ÆSizeLimô
;

687 *
	mzFûíame
;

688 *
	mzJou∫Æ
;

689 (*
	mxBusyH™dÀr
)(*);

690 *
	mpBusyH™dÀrArg
;

691 
	maSèt
[3];

692 #ifde‡
SQLITE_TEST


693 
	mnRód
;

695 (*
	mxReöôî
)(
	mDbPage
*);

696 #ifde‡
SQLITE_HAS_CODEC


697 *(*
	mxCodec
)(*,*,
	mPgno
,);

698 (*
	mxCodecSizeChng
)(*,,);

699 (*
	mxCodecFªe
)(*);

700 *
	mpCodec
;

702 *
	mpTmpS∑˚
;

703 
PCache
 *
	mpPCache
;

704 #i‚de‡
SQLITE_OMIT_WAL


705 
WÆ
 *
	mpWÆ
;

706 *
	mzWÆ
;

715 
	#PAGER_STAT_HIT
 0

	)

716 
	#PAGER_STAT_MISS
 1

	)

717 
	#PAGER_STAT_WRITE
 2

	)

724 #ifde‡
SQLITE_TEST


725 
	gsqlôe3_∑gî_ªaddb_cou¡
 = 0;

726 
	gsqlôe3_∑gî_wrôedb_cou¡
 = 0;

727 
	gsqlôe3_∑gî_wrôej_cou¡
 = 0;

728 
	#PAGER_INCR
(
v
Ëv++

	)

730 
	#PAGER_INCR
(
v
)

	)

758 c⁄° 
	gaJou∫ÆMagic
[] = {

766 
	#JOURNAL_PG_SZ
(
pPagî
Ë(’Pagî->
∑geSize
Ë+ 8)

	)

772 
	#JOURNAL_HDR_SZ
(
pPagî
Ë’Pagî->
£˘‹Size
)

	)

780 #ifde‡
SQLITE_OMIT_MEMORYDB


781 
	#MEMDB
 0

	)

783 
	#MEMDB
 
pPagî
->
memDb


	)

790 #i‡
SQLITE_MAX_MMAP_SIZE
>0

791 
	#USEFETCH
(
x
Ë((x)->
bU£Fëch
)

	)

793 
	#USEFETCH
(
x
Ë0

	)

799 
	#PAGER_MAX_PGNO
 2147483647

	)

813 
	#isO≥n
(
pFd
Ë(’Fd)->
pMëhods
!=0)

	)

819 #i‚de‡
SQLITE_OMIT_WAL


820 
	$∑gîU£WÆ
(
Pagî
 *
pPagî
){

821  (
pPagî
->
pWÆ
!=0);

822 
	}
}

824 
	#∑gîU£WÆ
(
x
Ë0

	)

825 
	#∑gîRﬁlbackWÆ
(
x
Ë0

	)

826 
	#∑gîWÆFømes
(
v
,
w
,
x
,
y
Ë0

	)

827 
	#∑gîO≥nWÆIfPª£¡
(
z
Ë
SQLITE_OK


	)

828 
	#∑gîBegöRódTønß˘i⁄
(
z
Ë
SQLITE_OK


	)

831 #i‚de‡
NDEBUG


840 
	$as£π_∑gî_°©e
(
Pagî
 *
p
){

841 
Pagî
 *
pPagî
 = 
p
;

844 
	`as£π
–
p
->
eSèã
==
PAGER_OPEN


845 || 
p
->
eSèã
==
PAGER_READER


846 || 
p
->
eSèã
==
PAGER_WRITER_LOCKED


847 || 
p
->
eSèã
==
PAGER_WRITER_CACHEMOD


848 || 
p
->
eSèã
==
PAGER_WRITER_DBMOD


849 || 
p
->
eSèã
==
PAGER_WRITER_FINISHED


850 || 
p
->
eSèã
==
PAGER_ERROR


857 
	`as£π
–
p
->
ãmpFûe
==0 ||Ö->
eLock
==
EXCLUSIVE_LOCK
 );

858 
	`as£π
–
p
->
ãmpFûe
==0 || 
pPagî
->
ch™geCou¡D⁄e
 );

863 
	`as£π
–
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ||Ö->
u£Jou∫Æ
 );

864 
	`as£π
–
p
->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 || !
	`isO≥n
’->
jfd
) );

874 if–
MEMDB
 ){

875 
	`as£π
–!
	`isO≥n
(
p
->
fd
) );

876 
	`as£π
–
p
->
noSync
 );

877 
	`as£π
–
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


878 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


880 
	`as£π
–
p
->
eSèã
!=
PAGER_ERROR
 &&Ö->eSèã!=
PAGER_OPEN
 );

881 
	`as£π
–
	`∑gîU£WÆ
(
p
)==0 );

887 
	`as£π
–
pPagî
->
ch™geCou¡D⁄e
==0 ||ÖPagî->
eLock
>=
RESERVED_LOCK
 );

888 
	`as£π
–
p
->
eLock
!=
PENDING_LOCK
 );

890  
p
->
eSèã
 ){

891 
PAGER_OPEN
:

892 
	`as£π
–!
MEMDB
 );

893 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

894 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0 ||ÖPagî->
ãmpFûe
 );

897 
PAGER_READER
:

898 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

899 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

900 
	`as£π
–
p
->
eLock
>=
SHARED_LOCK
 );

903 
PAGER_WRITER_LOCKED
:

904 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

905 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

906 if–!
	`∑gîU£WÆ
(
pPagî
) ){

907 
	`as£π
–
p
->
eLock
>=
RESERVED_LOCK
 );

909 
	`as£π
–
pPagî
->
dbSize
=ıPagî->
dbOrigSize
 );

910 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbFûeSize
 );

911 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbHötSize
 );

912 
	`as£π
–
pPagî
->
£tMa°î
==0 );

915 
PAGER_WRITER_CACHEMOD
:

916 
	`as£π
–
p
->
eLock
!=
UNKNOWN_LOCK
 );

917 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

918 if–!
	`∑gîU£WÆ
(
pPagî
) ){

924 
	`as£π
–
p
->
eLock
>=
RESERVED_LOCK
 );

925 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

926 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


927 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


930 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbFûeSize
 );

931 
	`as£π
–
pPagî
->
dbOrigSize
=ıPagî->
dbHötSize
 );

934 
PAGER_WRITER_DBMOD
:

935 
	`as£π
–
p
->
eLock
==
EXCLUSIVE_LOCK
 );

936 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

937 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

938 
	`as£π
–
p
->
eLock
>=
EXCLUSIVE_LOCK
 );

939 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

940 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


941 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


943 
	`as£π
–
pPagî
->
dbOrigSize
<ıPagî->
dbHötSize
 );

946 
PAGER_WRITER_FINISHED
:

947 
	`as£π
–
p
->
eLock
==
EXCLUSIVE_LOCK
 );

948 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

949 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

950 
	`as£π
–
	`isO≥n
(
p
->
jfd
)

951 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


952 || 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


956 
PAGER_ERROR
:

961 
	`as£π
–
pPagî
->
îrCode
!=
SQLITE_OK
 );

962 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)>0 ||ÖPagî->
ãmpFûe
 );

967 
	}
}

970 #ifde‡
SQLITE_DEBUG


979 *
	$¥öt_∑gî_°©e
(
Pagî
 *
p
){

980 
zRë
[1024];

982 
	`sqlôe3_¢¥ötf
(1024, 
zRë
,

991 , 
p
->
zFûíame


992 , 
p
->
eSèã
==
PAGER_OPEN
 ? "OPEN" :

993 
p
->
eSèã
==
PAGER_READER
 ? "READER" :

994 
p
->
eSèã
==
PAGER_WRITER_LOCKED
 ? "WRITER_LOCKED" :

995 
p
->
eSèã
==
PAGER_WRITER_CACHEMOD
 ? "WRITER_CACHEMOD" :

996 
p
->
eSèã
==
PAGER_WRITER_DBMOD
 ? "WRITER_DBMOD" :

997 
p
->
eSèã
==
PAGER_WRITER_FINISHED
 ? "WRITER_FINISHED" :

998 
p
->
eSèã
==
PAGER_ERROR
 ? "ERROR" : "?error?"

999 , ()
p
->
îrCode


1000 , 
p
->
eLock
==
NO_LOCK
 ? "NO_LOCK" :

1001 
p
->
eLock
==
RESERVED_LOCK
 ? "RESERVED" :

1002 
p
->
eLock
==
EXCLUSIVE_LOCK
 ? "EXCLUSIVE" :

1003 
p
->
eLock
==
SHARED_LOCK
 ? "SHARED" :

1004 
p
->
eLock
==
UNKNOWN_LOCK
 ? "UNKNOWN" : "?error?"

1005 , 
p
->
ex˛usiveMode
 ? "exclusive" : "normal"

1006 , 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ? "memory" :

1007 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ? "off" :

1008 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_DELETE
 ? "delete" :

1009 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST
 ? "persist" :

1010 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_TRUNCATE
 ? "truncate" :

1011 
p
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 ? "wal" : "?error?"

1012 , ()
p
->
ãmpFûe
, (Ì->
memDb
, (Ì->
u£Jou∫Æ


1013 , 
p
->
jou∫ÆOff
,Ö->
jou∫ÆHdr


1014 , ()
p
->
dbSize
, (Ì->
dbOrigSize
, (Ì->
dbFûeSize


1017  
zRë
;

1018 
	}
}

1030 
	$subjRequúesPage
(
PgHdr
 *
pPg
){

1031 
Pagî
 *
pPagî
 = 
pPg
->pPager;

1032 
PagîSavïoöt
 *
p
;

1033 
Pgno
 
pgno
 = 
pPg
->pgno;

1034 
i
;

1035 
i
=0; i<
pPagî
->
nSavïoöt
; i++){

1036 
p
 = &
pPagî
->
aSavïoöt
[
i
];

1037 if–
p
->
nOrig
>=
pgno
 && 0==
	`sqlôe3BôvecTe°NŸNuŒ
’->
pInSavïoöt
,Ögno) ){

1042 
	}
}

1044 #ifde‡
SQLITE_DEBUG


1048 
	$∑geInJou∫Æ
(
Pagî
 *
pPagî
, 
PgHdr
 *
pPg
){

1049  
	`sqlôe3BôvecTe°
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
);

1050 
	}
}

1060 
	$ªad32bôs
(
sqlôe3_fûe
 *
fd
, 
i64
 
off£t
, 
u32
 *
pRes
){

1061 
ac
[4];

1062 
rc
 = 
	`sqlôe3OsRód
(
fd
, 
ac
, ◊c), 
off£t
);

1063 if–
rc
==
SQLITE_OK
 ){

1064 *
pRes
 = 
	`sqlôe3Gë4byã
(
ac
);

1066  
rc
;

1067 
	}
}

1072 
	#put32bôs
(
A
,
B
Ë
	`sqlôe3Put4byã
((
u8
*)A,B)

	)

1079 
	$wrôe32bôs
(
sqlôe3_fûe
 *
fd
, 
i64
 
off£t
, 
u32
 
vÆ
){

1080 
ac
[4];

1081 
	`put32bôs
(
ac
, 
vÆ
);

1082  
	`sqlôe3OsWrôe
(
fd
, 
ac
, 4, 
off£t
);

1083 
	}
}

1094 
	$∑gîU∆ockDb
(
Pagî
 *
pPagî
, 
eLock
){

1095 
rc
 = 
SQLITE_OK
;

1097 
	`as£π
–!
pPagî
->
ex˛usiveMode
 ||ÖPagî->
eLock
==eLock );

1098 
	`as£π
–
eLock
==
NO_LOCK
 ||ÉLock==
SHARED_LOCK
 );

1099 
	`as£π
–
eLock
!=
NO_LOCK
 || 
	`∑gîU£WÆ
(
pPagî
)==0 );

1100 if–
	`isO≥n
(
pPagî
->
fd
) ){

1101 
	`as£π
–
pPagî
->
eLock
>=eLock );

1102 
rc
 = 
pPagî
->
noLock
 ? 
SQLITE_OK
 : 
	`sqlôe3OsU∆ock
’Pagî->
fd
, 
eLock
);

1103 if–
pPagî
->
eLock
!=
UNKNOWN_LOCK
 ){

1104 
pPagî
->
eLock
 = (
u8
)eLock;

1106 
	`IOTRACE
(("UNLOCK %∞%d\n", 
pPagî
, 
eLock
))

1108  
rc
;

1109 
	}
}

1121 
	$∑gîLockDb
(
Pagî
 *
pPagî
, 
eLock
){

1122 
rc
 = 
SQLITE_OK
;

1124 
	`as£π
–
eLock
==
SHARED_LOCK
 ||ÉLock==
RESERVED_LOCK
 ||ÉLock==
EXCLUSIVE_LOCK
 );

1125 if–
pPagî
->
eLock
<eLock ||ÖPagî->eLock==
UNKNOWN_LOCK
 ){

1126 
rc
 = 
pPagî
->
noLock
 ? 
SQLITE_OK
 : 
	`sqlôe3OsLock
’Pagî->
fd
, 
eLock
);

1127 if–
rc
==
SQLITE_OK
 && (
pPagî
->
eLock
!=
UNKNOWN_LOCK
||eLock==
EXCLUSIVE_LOCK
) ){

1128 
pPagî
->
eLock
 = (
u8
)eLock;

1129 
	`IOTRACE
(("LOCK %∞%d\n", 
pPagî
, 
eLock
))

1132  
rc
;

1133 
	}
}

1152 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


1153 
	$j∫lBuf„rSize
(
Pagî
 *
pPagî
){

1154 
	`as£π
–!
MEMDB
 );

1155 if–!
pPagî
->
ãmpFûe
 ){

1156 
dc
;

1157 
nSe˘‹
;

1158 
szPage
;

1160 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

1161 
dc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

1162 
nSe˘‹
 = 
pPagî
->
£˘‹Size
;

1163 
szPage
 = 
pPagî
->
∑geSize
;

1165 
	`as£π
(
SQLITE_IOCAP_ATOMIC512
==(512>>8));

1166 
	`as£π
(
SQLITE_IOCAP_ATOMIC64K
==(65536>>8));

1167 if–0==(
dc
&(
SQLITE_IOCAP_ATOMIC
|(
szPage
>>8)Ë|| 
nSe˘‹
>szPage) ){

1172  
	`JOURNAL_HDR_SZ
(
pPagî
Ë+ 
	`JOURNAL_PG_SZ
(pPager);

1173 
	}
}

1175 
	#j∫lBuf„rSize
(
x
Ë0

	)

1183 #ifde‡
SQLITE_CHECK_PAGES


1187 
u32
 
	$∑gî_d©ahash
(
nByã
, *
pD©a
){

1188 
u32
 
hash
 = 0;

1189 
i
;

1190 
i
=0; i<
nByã
; i++){

1191 
hash
 = (hash*1039Ë+ 
pD©a
[
i
];

1193  
hash
;

1194 
	}
}

1195 
u32
 
	$∑gî_∑gehash
(
PgHdr
 *
pPage
){

1196  
	`∑gî_d©ahash
(
pPage
->
pPagî
->
∑geSize
, (*ÌPage->
pD©a
);

1197 
	}
}

1198 
	$∑gî_£t_∑gehash
(
PgHdr
 *
pPage
){

1199 
pPage
->
∑geHash
 = 
	`∑gî_∑gehash
(pPage);

1200 
	}
}

1207 
	#CHECK_PAGE
(
x
Ë
	`checkPage
(x)

	)

1208 
	$checkPage
(
PgHdr
 *
pPg
){

1209 
Pagî
 *
pPagî
 = 
pPg
->pPager;

1210 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

1211 
	`as£π
–(
pPg
->
Êags
&
PGHDR_DIRTY
Ë||ÖPg->
∑geHash
==
	`∑gî_∑gehash
(pPg) );

1212 
	}
}

1215 
	#∑gî_d©ahash
(
X
,
Y
Ë0

	)

1216 
	#∑gî_∑gehash
(
X
Ë0

	)

1217 
	#∑gî_£t_∑gehash
(
X
)

	)

1218 
	#CHECK_PAGE
(
x
)

	)

1246 
	$ªadMa°îJou∫Æ
(
sqlôe3_fûe
 *
pJ∫l
, *
zMa°î
, 
u32
 
nMa°î
){

1247 
rc
;

1248 
u32
 
Àn
;

1249 
i64
 
szJ
;

1250 
u32
 
cksum
;

1251 
u32
 
u
;

1252 
aMagic
[8];

1253 
zMa°î
[0] = '\0';

1255 if–
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsFûeSize
(
pJ∫l
, &
szJ
))

1256 || 
szJ
<16

1257 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pJ∫l
, 
szJ
-16, &
Àn
))

1258 || 
Àn
>=
nMa°î


1259 || 
Àn
==0

1260 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pJ∫l
, 
szJ
-12, &
cksum
))

1261 || 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsRód
(
pJ∫l
, 
aMagic
, 8, 
szJ
-8))

1262 || 
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, 8)

1263 || 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsRód
(
pJ∫l
, 
zMa°î
, 
Àn
, 
szJ
-16-len))

1265  
rc
;

1269 
u
=0; u<
Àn
; u++){

1270 
cksum
 -
zMa°î
[
u
];

1272 if–
cksum
 ){

1278 
Àn
 = 0;

1280 
zMa°î
[
Àn
] = '\0';

1282  
SQLITE_OK
;

1283 
	}
}

1300 
i64
 
	$jou∫ÆHdrOff£t
(
Pagî
 *
pPagî
){

1301 
i64
 
off£t
 = 0;

1302 
i64
 
c
 = 
pPagî
->
jou∫ÆOff
;

1303 if–
c
 ){

1304 
off£t
 = ((
c
-1)/
	`JOURNAL_HDR_SZ
(
pPagî
) + 1) * JOURNAL_HDR_SZ(pPager);

1306 
	`as£π
–
off£t
%
	`JOURNAL_HDR_SZ
(
pPagî
)==0 );

1307 
	`as£π
–
off£t
>=
c
 );

1308 
	`as£π
–(
off£t
-
c
)<
	`JOURNAL_HDR_SZ
(
pPagî
) );

1309  
off£t
;

1310 
	}
}

1333 
	$zîoJou∫ÆHdr
(
Pagî
 *
pPagî
, 
doTrunˇã
){

1334 
rc
 = 
SQLITE_OK
;

1335 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1336 
	`as£π
–!
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
) );

1337 if–
pPagî
->
jou∫ÆOff
 ){

1338 c⁄° 
i64
 
iLimô
 = 
pPagî
->
jou∫ÆSizeLimô
;

1340 
	`IOTRACE
(("JZEROHDR %p\n", 
pPagî
))

1341 if–
doTrunˇã
 || 
iLimô
==0 ){

1342 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 0);

1344 c⁄° 
zîoHdr
[28] = {0};

1345 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zîoHdr
, (zeroHdr), 0);

1347 if–
rc
==
SQLITE_OK
 && !
pPagî
->
noSync
 ){

1348 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
, 
SQLITE_SYNC_DATAONLY
|pPagî->
syncFœgs
);

1357 if–
rc
==
SQLITE_OK
 && 
iLimô
>0 ){

1358 
i64
 
sz
;

1359 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
sz
);

1360 if–
rc
==
SQLITE_OK
 && 
sz
>
iLimô
 ){

1361 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 
iLimô
);

1365  
rc
;

1366 
	}
}

1383 
	$wrôeJou∫ÆHdr
(
Pagî
 *
pPagî
){

1384 
rc
 = 
SQLITE_OK
;

1385 *
zHódî
 = 
pPagî
->
pTmpS∑˚
;

1386 
u32
 
nHódî
 = (u32)
pPagî
->
∑geSize
;

1387 
u32
 
nWrôe
;

1388 
ii
;

1390 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1392 if–
nHódî
>
	`JOURNAL_HDR_SZ
(
pPagî
) ){

1393 
nHódî
 = 
	`JOURNAL_HDR_SZ
(
pPagî
);

1400 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1401 if–
pPagî
->
aSavïoöt
[
ii
].
iHdrOff£t
==0 ){

1402 
pPagî
->
aSavïoöt
[
ii
].
iHdrOff£t
 =ÖPagî->
jou∫ÆOff
;

1406 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1428 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
noSync
 );

1429 if–
pPagî
->
noSync
 || (pPagî->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
)

1430 || (
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
)&
SQLITE_IOCAP_SAFE_APPEND
)

1432 
	`mem˝y
(
zHódî
, 
aJou∫ÆMagic
, (aJournalMagic));

1433 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)], 0xffffffff);

1435 
	`mem£t
(
zHódî
, 0, (
aJou∫ÆMagic
)+4);

1439 
	`sqlôe3_øndom√ss
((
pPagî
->
cksumInô
), &pPager->cksumInit);

1440 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+4], 
pPagî
->
cksumInô
);

1442 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+8], 
pPagî
->
dbOrigSize
);

1444 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+12], 
pPagî
->
£˘‹Size
);

1447 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)+16], 
pPagî
->
∑geSize
);

1454 
	`mem£t
(&
zHódî
[(
aJou∫ÆMagic
)+20], 0,

1455 
nHódî
-((
aJou∫ÆMagic
)+20));

1474 
nWrôe
=0; 
rc
==
SQLITE_OK
&&nWrôe<
	`JOURNAL_HDR_SZ
(
pPagî
);ÇWrôe+=
nHódî
){

1475 
	`IOTRACE
(("JHDR %∞%Œd %d\n", 
pPagî
,ÖPagî->
jou∫ÆHdr
, 
nHódî
))

1476 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zHódî
, 
nHódî
,ÖPagî->
jou∫ÆOff
);

1477 
	`as£π
–
pPagî
->
jou∫ÆHdr
 <pPagî->
jou∫ÆOff
 );

1478 
pPagî
->
jou∫ÆOff
 +
nHódî
;

1481  
rc
;

1482 
	}
}

1501 
	$ªadJou∫ÆHdr
(

1502 
Pagî
 *
pPagî
,

1503 
isHŸ
,

1504 
i64
 
jou∫ÆSize
,

1505 
u32
 *
pNRec
,

1506 
u32
 *
pDbSize


1508 
rc
;

1509 
aMagic
[8];

1510 
i64
 
iHdrOff
;

1512 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

1518 
pPagî
->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1519 if–
pPagî
->
jou∫ÆOff
+
	`JOURNAL_HDR_SZ
’PagîË> 
jou∫ÆSize
 ){

1520  
SQLITE_DONE
;

1522 
iHdrOff
 = 
pPagî
->
jou∫ÆOff
;

1529 if–
isHŸ
 || 
iHdrOff
!=
pPagî
->
jou∫ÆHdr
 ){

1530 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, 
aMagic
, ◊Magic), 
iHdrOff
);

1531 if–
rc
 ){

1532  
rc
;

1534 if–
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, (aMagic))!=0 ){

1535  
SQLITE_DONE
;

1543 if–
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+8, 
pNRec
))

1544 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+12, &pPagî->
cksumInô
))

1545 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+16, 
pDbSize
))

1547  
rc
;

1550 if–
pPagî
->
jou∫ÆOff
==0 ){

1551 
u32
 
iPageSize
;

1552 
u32
 
iSe˘‹Size
;

1555 if–
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+20, &
iSe˘‹Size
))

1556 || 
SQLITE_OK
!=(
rc
 = 
	`ªad32bôs
(
pPagî
->
jfd
, 
iHdrOff
+24, &
iPageSize
))

1558  
rc
;

1565 if–
iPageSize
==0 ){

1566 
iPageSize
 = 
pPagî
->
∑geSize
;

1574 if–
iPageSize
<512 || 
iSe˘‹Size
<32

1575 || 
iPageSize
>
SQLITE_MAX_PAGE_SIZE
 || 
iSe˘‹Size
>
MAX_SECTOR_SIZE


1576 || ((
iPageSize
-1)&iPageSize)!=0 || ((
iSe˘‹Size
-1)&iSectorSize)!=0

1583  
SQLITE_DONE
;

1590 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
iPageSize
, -1);

1591 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

1599 
pPagî
->
£˘‹Size
 = 
iSe˘‹Size
;

1602 
pPagî
->
jou∫ÆOff
 +
	`JOURNAL_HDR_SZ
(pPager);

1603  
rc
;

1604 
	}
}

1626 
	$wrôeMa°îJou∫Æ
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

1627 
rc
;

1628 
nMa°î
;

1629 
i64
 
iHdrOff
;

1630 
i64
 
j∫lSize
;

1631 
u32
 
cksum
 = 0;

1633 
	`as£π
–
pPagî
->
£tMa°î
==0 );

1634 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

1636 if–!
zMa°î


1637 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


1638 || !
	`isO≥n
(
pPagî
->
jfd
)

1640  
SQLITE_OK
;

1642 
pPagî
->
£tMa°î
 = 1;

1643 
	`as£π
–
pPagî
->
jou∫ÆHdr
 <pPagî->
jou∫ÆOff
 );

1646 
nMa°î
=0; 
zMa°î
[nMaster];ÇMaster++){

1647 
cksum
 +
zMa°î
[
nMa°î
];

1654 if–
pPagî
->
fuŒSync
 ){

1655 
pPagî
->
jou∫ÆOff
 = 
	`jou∫ÆHdrOff£t
(pPager);

1657 
iHdrOff
 = 
pPagî
->
jou∫ÆOff
;

1662 if–(0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
, 
	`PAGER_MJ_PGNO
(pPager))))

1663 || (0 !(
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
zMa°î
, 
nMa°î
, 
iHdrOff
+4)))

1664 || (0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
+4+
nMa°î
,ÇMaster)))

1665 || (0 !(
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iHdrOff
+4+
nMa°î
+4, 
cksum
)))

1666 || (0 !(
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
aJou∫ÆMagic
, 8,

1667 
iHdrOff
+4+
nMa°î
+8)))

1669  
rc
;

1671 
pPagî
->
jou∫ÆOff
 +(
nMa°î
+20);

1683 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
j∫lSize
))

1684 && 
j∫lSize
>
pPagî
->
jou∫ÆOff


1686 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
,ÖPagî->
jou∫ÆOff
);

1688  
rc
;

1689 
	}
}

1694 
	$∑gî_ª£t
(
Pagî
 *
pPagî
){

1695 
pPagî
->
iD©aVîsi⁄
++;

1696 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

1697 
	`sqlôe3PˇcheCÀ¨
(
pPagî
->
pPCache
);

1698 
	}
}

1703 
u32
 
	$sqlôe3PagîD©aVîsi⁄
(
Pagî
 *
pPagî
){

1704 
	`as£π
–
pPagî
->
eSèã
>
PAGER_OPEN
 );

1705  
pPagî
->
iD©aVîsi⁄
;

1706 
	}
}

1713 
	$ªÀa£AŒSavïoöts
(
Pagî
 *
pPagî
){

1714 
ii
;

1715 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1716 
	`sqlôe3BôvecDe°roy
(
pPagî
->
aSavïoöt
[
ii
].
pInSavïoöt
);

1718 if–!
pPagî
->
ex˛usiveMode
 || 
	`sqlôe3Jou∫ÆIsInMem‹y
’Pagî->
sjfd
) ){

1719 
	`sqlôe3OsClo£
(
pPagî
->
sjfd
);

1721 
	`sqlôe3_‰ì
(
pPagî
->
aSavïoöt
);

1722 
pPagî
->
aSavïoöt
 = 0;

1723 
pPagî
->
nSavïoöt
 = 0;

1724 
pPagî
->
nSubRec
 = 0;

1725 
	}
}

1732 
	$addToSavïoötBôvecs
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
){

1733 
ii
;

1734 
rc
 = 
SQLITE_OK
;

1736 
ii
=0; ii<
pPagî
->
nSavïoöt
; ii++){

1737 
PagîSavïoöt
 *
p
 = &
pPagî
->
aSavïoöt
[
ii
];

1738 if–
pgno
<=
p
->
nOrig
 ){

1739 
rc
 |
	`sqlôe3BôvecSë
(
p
->
pInSavïoöt
, 
pgno
);

1740 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

1741 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

1744  
rc
;

1745 
	}
}

1764 
	$∑gî_u∆ock
(
Pagî
 *
pPagî
){

1766 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER


1767 || 
pPagî
->
eSèã
==
PAGER_OPEN


1768 || 
pPagî
->
eSèã
==
PAGER_ERROR


1771 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

1772 
pPagî
->
pInJou∫Æ
 = 0;

1773 
	`ªÀa£AŒSavïoöts
(
pPagî
);

1775 if–
	`∑gîU£WÆ
(
pPagî
) ){

1776 
	`as£π
–!
	`isO≥n
(
pPagî
->
jfd
) );

1777 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pPagî
->
pWÆ
);

1778 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1779 }if–!
pPagî
->
ex˛usiveMode
 ){

1780 
rc
;

1781 
iDc
 = 
	`isO≥n
(
pPagî
->
fd
)?
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(pPager->fd):0;

1788 
	`as£π
–(
PAGER_JOURNALMODE_MEMORY
 & 5)!=1 );

1789 
	`as£π
–(
PAGER_JOURNALMODE_OFF
 & 5)!=1 );

1790 
	`as£π
–(
PAGER_JOURNALMODE_WAL
 & 5)!=1 );

1791 
	`as£π
–(
PAGER_JOURNALMODE_DELETE
 & 5)!=1 );

1792 
	`as£π
–(
PAGER_JOURNALMODE_TRUNCATE
 & 5)==1 );

1793 
	`as£π
–(
PAGER_JOURNALMODE_PERSIST
 & 5)==1 );

1794 if–0==(
iDc
 & 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
)

1795 || 1!=(
pPagî
->
jou∫ÆMode
 & 5)

1797 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

1805 
rc
 = 
	`∑gîU∆ockDb
(
pPagî
, 
NO_LOCK
);

1806 if–
rc
!=
SQLITE_OK
 && 
pPagî
->
eSèã
==
PAGER_ERROR
 ){

1807 
pPagî
->
eLock
 = 
UNKNOWN_LOCK
;

1814 
	`as£π
–
pPagî
->
îrCode
 ||ÖPagî->
eSèã
!=
PAGER_ERROR
 );

1815 
pPagî
->
ch™geCou¡D⁄e
 = 0;

1816 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1824 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 || !
MEMDB
 );

1825 if–
pPagî
->
îrCode
 ){

1826 if–
pPagî
->
ãmpFûe
==0 ){

1827 
	`∑gî_ª£t
(
pPagî
);

1828 
pPagî
->
ch™geCou¡D⁄e
 = 0;

1829 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

1831 
pPagî
->
eSèã
 = (
	`isO≥n
’Pagî->
jfd
Ë? 
PAGER_OPEN
 : 
PAGER_READER
);

1833 if–
	`USEFETCH
(
pPagî
ËË
	`sqlôe3OsUn„tch
’Pagî->
fd
, 0, 0);

1834 
pPagî
->
îrCode
 = 
SQLITE_OK
;

1837 
pPagî
->
jou∫ÆOff
 = 0;

1838 
pPagî
->
jou∫ÆHdr
 = 0;

1839 
pPagî
->
£tMa°î
 = 0;

1840 
	}
}

1861 
	$∑gî_îr‹
(
Pagî
 *
pPagî
, 
rc
){

1862 
rc2
 = 
rc
 & 0xff;

1863 
	`as£π
–
rc
==
SQLITE_OK
 || !
MEMDB
 );

1864 
	`as£π
(

1865 
pPagî
->
îrCode
==
SQLITE_FULL
 ||

1866 
pPagî
->
îrCode
==
SQLITE_OK
 ||

1867 (
pPagî
->
îrCode
 & 0xff)==
SQLITE_IOERR


1869 if–
rc2
==
SQLITE_FULL
 ||Ñc2==
SQLITE_IOERR
 ){

1870 
pPagî
->
îrCode
 = 
rc
;

1871 
pPagî
->
eSèã
 = 
PAGER_ERROR
;

1873  
rc
;

1874 
	}
}

1876 
∑gî_åunˇã
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
);

1894 
	$∑gîFlushOnCommô
(
Pagî
 *
pPagî
, 
bCommô
){

1895 if–
pPagî
->
ãmpFûe
==0 )  1;

1896 if–!
bCommô
 )  0;

1897 if–!
	`isO≥n
(
pPagî
->
fd
) )  0;

1898  (
	`sqlôe3PCachePî˚¡Dúty
(
pPagî
->
pPCache
)>=25);

1899 
	}
}

1954 
	$∑gî_íd_å™ß˘i⁄
(
Pagî
 *
pPagî
, 
hasMa°î
, 
bCommô
){

1955 
rc
 = 
SQLITE_OK
;

1956 
rc2
 = 
SQLITE_OK
;

1971 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

1972 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

1973 if–
pPagî
->
eSèã
<
PAGER_WRITER_LOCKED
 &&ÖPagî->
eLock
<
RESERVED_LOCK
 ){

1974  
SQLITE_OK
;

1977 
	`ªÀa£AŒSavïoöts
(
pPagî
);

1978 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
Ë||ÖPagî->
pInJou∫Æ
==0 );

1979 if–
	`isO≥n
(
pPagî
->
jfd
) ){

1980 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

1983 if–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
) ){

1985 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

1986 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_TRUNCATE
 ){

1987 if–
pPagî
->
jou∫ÆOff
==0 ){

1988 
rc
 = 
SQLITE_OK
;

1990 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
jfd
, 0);

1991 if–
rc
==
SQLITE_OK
 && 
pPagî
->
fuŒSync
 ){

1997 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
);

2000 
pPagî
->
jou∫ÆOff
 = 0;

2001 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST


2002 || (
pPagî
->
ex˛usiveMode
 &&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_WAL
)

2004 
rc
 = 
	`zîoJou∫ÆHdr
(
pPagî
, 
hasMa°î
||pPagî->
ãmpFûe
);

2005 
pPagî
->
jou∫ÆOff
 = 0;

2012 
bDñëe
 = !
pPagî
->
ãmpFûe
;

2013 
	`as£π
–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
jfd
)==0 );

2014 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_DELETE


2015 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY


2016 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


2018 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

2019 if–
bDñëe
 ){

2020 
rc
 = 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
,ÖPagî->
exåaSync
);

2025 #ifde‡
SQLITE_CHECK_PAGES


2026 
	`sqlôe3PˇcheIãøãDúty
(
pPagî
->
pPCache
, 
∑gî_£t_∑gehash
);

2027 if–
pPagî
->
dbSize
==0 && 
	`sqlôe3PˇcheRefCou¡
’Pagî->
pPCache
)>0 ){

2028 
PgHdr
 *
p
 = 
	`sqlôe3PagîLookup
(
pPagî
, 1);

2029 if–
p
 ){

2030 
p
->
∑geHash
 = 0;

2031 
	`sqlôe3PagîUƒefNŸNuŒ
(
p
);

2036 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

2037 
pPagî
->
pInJou∫Æ
 = 0;

2038 
pPagî
->
nRec
 = 0;

2039 if–
rc
==
SQLITE_OK
 ){

2040 if–
	`∑gîFlushOnCommô
(
pPagî
, 
bCommô
) ){

2041 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

2043 
	`sqlôe3PˇcheCÀ¨WrôabÀ
(
pPagî
->
pPCache
);

2045 
	`sqlôe3PˇcheTrunˇã
(
pPagî
->
pPCache
,ÖPagî->
dbSize
);

2048 if–
	`∑gîU£WÆ
(
pPagî
) ){

2053 
rc2
 = 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pPagî
->
pWÆ
);

2054 
	`as£π
–
rc2
==
SQLITE_OK
 );

2055 }if–
rc
==
SQLITE_OK
 && 
bCommô
 && 
pPagî
->
dbFûeSize
>pPagî->
dbSize
 ){

2062 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

2063 
rc
 = 
	`∑gî_åunˇã
(
pPagî
,ÖPagî->
dbSize
);

2066 if–
rc
==
SQLITE_OK
 && 
bCommô
 && 
	`isO≥n
(
pPagî
->
fd
) ){

2067 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_COMMIT_PHASETWO
, 0);

2068 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

2071 if–!
pPagî
->
ex˛usiveMode


2072 && (!
	`∑gîU£WÆ
(
pPagî
Ë|| 
	`sqlôe3WÆEx˛usiveMode
’Pagî->
pWÆ
, 0))

2074 
rc2
 = 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

2075 
pPagî
->
ch™geCou¡D⁄e
 = 0;

2077 
pPagî
->
eSèã
 = 
PAGER_READER
;

2078 
pPagî
->
£tMa°î
 = 0;

2080  (
rc
==
SQLITE_OK
?
rc2
:rc);

2081 
	}
}

2100 
	$∑gîU∆ockAndRﬁlback
(
Pagî
 *
pPagî
){

2101 if–
pPagî
->
eSèã
!=
PAGER_ERROR
 &&ÖPagî->eSèã!=
PAGER_OPEN
 ){

2102 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

2103 if–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 ){

2104 
	`sqlôe3BegöBíignMÆloc
();

2105 
	`sqlôe3PagîRﬁlback
(
pPagî
);

2106 
	`sqlôe3EndBíignMÆloc
();

2107 }if–!
pPagî
->
ex˛usiveMode
 ){

2108 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 );

2109 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 0, 0);

2112 
	`∑gî_u∆ock
(
pPagî
);

2113 
	}
}

2134 
u32
 
	$∑gî_cksum
(
Pagî
 *
pPagî
, c⁄° 
u8
 *
aD©a
){

2135 
u32
 
cksum
 = 
pPagî
->
cksumInô
;

2136 
i
 = 
pPagî
->
∑geSize
-200;

2137  
i
>0 ){

2138 
cksum
 +
aD©a
[
i
];

2139 
i
 -= 200;

2141  
cksum
;

2142 
	}
}

2148 #ifde‡
SQLITE_HAS_CODEC


2149 
	$∑gîRï‹tSize
(
Pagî
 *
pPagî
){

2150 if–
pPagî
->
xCodecSizeChng
 ){

2151 
pPagî
->
	`xCodecSizeChng
’Pagî->
pCodec
,ÖPagî->
∑geSize
,

2152 ()
pPagî
->
nRe£rve
);

2154 
	}
}

2156 
	#∑gîRï‹tSize
(
X
Ë

	)

2159 #ifde‡
SQLITE_HAS_CODEC


2165 
	$sqlôe3PagîAlignRe£rve
(
Pagî
 *
pDe°
, Pagî *
pSrc
){

2166 if–
pDe°
->
nRe£rve
!=
pSrc
->nReserve ){

2167 
pDe°
->
nRe£rve
 = 
pSrc
->nReserve;

2168 
	`∑gîRï‹tSize
(
pDe°
);

2170 
	}
}

2210 
	$∑gî_∂ayback_⁄e_∑ge
(

2211 
Pagî
 *
pPagî
,

2212 
i64
 *
pOff£t
,

2213 
Bôvec
 *
pD⁄e
,

2214 
isMaöJ∫l
,

2215 
isSavï¡


2217 
rc
;

2218 
PgHdr
 *
pPg
;

2219 
Pgno
 
pgno
;

2220 
u32
 
cksum
;

2221 *
aD©a
;

2222 
sqlôe3_fûe
 *
jfd
;

2223 
isSyn˚d
;

2225 
	`as£π
–(
isMaöJ∫l
&~1)==0 );

2226 
	`as£π
–(
isSavï¡
&~1)==0 );

2227 
	`as£π
–
isMaöJ∫l
 || 
pD⁄e
 );

2228 
	`as£π
–
isSavï¡
 || 
pD⁄e
==0 );

2230 
aD©a
 = 
pPagî
->
pTmpS∑˚
;

2231 
	`as£π
–
aD©a
 );

2232 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 || (!
isMaöJ∫l
 && 
isSavï¡
) );

2240 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD


2241 || (
pPagî
->
eSèã
==
PAGER_OPEN
 &&ÖPagî->
eLock
==
EXCLUSIVE_LOCK
)

2243 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 || 
isMaöJ∫l
 );

2248 
jfd
 = 
isMaöJ∫l
 ? 
pPagî
->jfd :ÖPagî->
sjfd
;

2249 
rc
 = 
	`ªad32bôs
(
jfd
, *
pOff£t
, &
pgno
);

2250 if–
rc
!=
SQLITE_OK
 ) Ñc;

2251 
rc
 = 
	`sqlôe3OsRód
(
jfd
, (
u8
*)
aD©a
, 
pPagî
->
∑geSize
, (*
pOff£t
)+4);

2252 if–
rc
!=
SQLITE_OK
 ) Ñc;

2253 *
pOff£t
 +
pPagî
->
∑geSize
 + 4 + 
isMaöJ∫l
*4;

2260 if–
pgno
==0 ||Ögno==
	`PAGER_MJ_PGNO
(
pPagî
) ){

2261 
	`as£π
–!
isSavï¡
 );

2262  
SQLITE_DONE
;

2264 if–
pgno
>(
Pgno
)
pPagî
->
dbSize
 || 
	`sqlôe3BôvecTe°
(
pD⁄e
,Ögno) ){

2265  
SQLITE_OK
;

2267 if–
isMaöJ∫l
 ){

2268 
rc
 = 
	`ªad32bôs
(
jfd
, (*
pOff£t
)-4, &
cksum
);

2269 if–
rc
 ) Ñc;

2270 if–!
isSavï¡
 && 
	`∑gî_cksum
(
pPagî
, (
u8
*)
aD©a
)!=
cksum
 ){

2271  
SQLITE_DONE
;

2278 if–
pD⁄e
 && (
rc
 = 
	`sqlôe3BôvecSë
’D⁄e, 
pgno
))!=
SQLITE_OK
 ){

2279  
rc
;

2284 if–
pgno
==1 && 
pPagî
->
nRe£rve
!=((
u8
*)
aD©a
)[20] ){

2285 
pPagî
->
nRe£rve
 = ((
u8
*)
aD©a
)[20];

2286 
	`∑gîRï‹tSize
(
pPagî
);

2324 if–
	`∑gîU£WÆ
(
pPagî
) ){

2325 
pPg
 = 0;

2327 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

2329 
	`as£π
–
pPg
 || !
MEMDB
 );

2330 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_OPEN
 || 
pPg
==0 ||ÖPagî->
ãmpFûe
 );

2331 
	`PAGERTRACE
(("PLAYBACK %dÖage %d hash(%08x) %s\n",

2332 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_d©ahash
’Pagî->
∑geSize
, (
u8
*)
aD©a
),

2333 (
isMaöJ∫l
?"main-journal":"sub-journal")

2335 if–
isMaöJ∫l
 ){

2336 
isSyn˚d
 = 
pPagî
->
noSync
 || (*
pOff£t
 <pPagî->
jou∫ÆHdr
);

2338 
isSyn˚d
 = (
pPg
==0 || 0==’Pg->
Êags
 & 
PGHDR_NEED_SYNC
));

2340 if–
	`isO≥n
(
pPagî
->
fd
)

2341 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2342 && 
isSyn˚d


2344 
i64
 
of°
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

2345 
	`ã°ˇ£
–!
isSavï¡
 && 
pPg
!=0 && (pPg->
Êags
&
PGHDR_NEED_SYNC
)!=0 );

2346 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

2347 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, (
u8
 *)
aD©a
,ÖPagî->
∑geSize
, 
of°
);

2348 if–
pgno
>
pPagî
->
dbFûeSize
 ){

2349 
pPagî
->
dbFûeSize
 = 
pgno
;

2351 if–
pPagî
->
pBackup
 ){

2352 
	`CODEC1
(
pPagî
, 
aD©a
, 
pgno
, 3, 
rc
=
SQLITE_NOMEM_BKPT
);

2353 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
pgno
, (
u8
*)
aD©a
);

2354 
	`CODEC2
(
pPagî
, 
aD©a
, 
pgno
, 7, 
rc
=
SQLITE_NOMEM_BKPT
,áData);

2356 }if–!
isMaöJ∫l
 && 
pPg
==0 ){

2373 
	`as£π
–
isSavï¡
 );

2374 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
)==0 );

2375 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_ROLLBACK
;

2376 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pgno
, &
pPg
, 1);

2377 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
)!=0 );

2378 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_ROLLBACK
;

2379 if–
rc
!=
SQLITE_OK
 ) Ñc;

2380 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

2382 if–
pPg
 ){

2389 *
pD©a
;

2390 
pD©a
 = 
pPg
->pData;

2391 
	`mem˝y
(
pD©a
, (
u8
*)
aD©a
, 
pPagî
->
∑geSize
);

2392 
pPagî
->
	`xReöôî
(
pPg
);

2397 
	`∑gî_£t_∑gehash
(
pPg
);

2401 if–
pgno
==1 ){

2402 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, &((
u8
*)
pD©a
)[24],(pPager->dbFileVers));

2406 
	`CODEC1
(
pPagî
, 
pD©a
, 
pPg
->
pgno
, 3, 
rc
=
SQLITE_NOMEM_BKPT
);

2407 
	`sqlôe3PˇcheRñó£
(
pPg
);

2409  
rc
;

2410 
	}
}

2455 
	$∑gî_dñma°î
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

2456 
sqlôe3_vfs
 *
pVfs
 = 
pPagî
->pVfs;

2457 
rc
;

2458 
sqlôe3_fûe
 *
pMa°î
;

2459 
sqlôe3_fûe
 *
pJou∫Æ
;

2460 *
zMa°îJou∫Æ
 = 0;

2461 
i64
 
nMa°îJou∫Æ
;

2462 *
zJou∫Æ
;

2463 *
zMa°îPå
;

2464 
nMa°îPå
;

2469 
pMa°î
 = (
sqlôe3_fûe
 *)
	`sqlôe3MÆlocZîo
(
pVfs
->
szOsFûe
 * 2);

2470 
pJou∫Æ
 = (
sqlôe3_fûe
 *)(((
u8
 *)
pMa°î
Ë+ 
pVfs
->
szOsFûe
);

2471 if–!
pMa°î
 ){

2472 
rc
 = 
SQLITE_NOMEM_BKPT
;

2474 c⁄° 
Êags
 = (
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MASTER_JOURNAL
);

2475 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zMa°î
, 
pMa°î
, 
Êags
, 0);

2477 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2484 
rc
 = 
	`sqlôe3OsFûeSize
(
pMa°î
, &
nMa°îJou∫Æ
);

2485 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2486 
nMa°îPå
 = 
pVfs
->
mxP©h«me
+1;

2487 
zMa°îJou∫Æ
 = 
	`sqlôe3MÆloc
(
nMa°îJou∫Æ
 + 
nMa°îPå
 + 1);

2488 if–!
zMa°îJou∫Æ
 ){

2489 
rc
 = 
SQLITE_NOMEM_BKPT
;

2490 
dñma°î_out
;

2492 
zMa°îPå
 = &
zMa°îJou∫Æ
[
nMa°îJou∫Æ
+1];

2493 
rc
 = 
	`sqlôe3OsRód
(
pMa°î
, 
zMa°îJou∫Æ
, ()
nMa°îJou∫Æ
, 0);

2494 if–
rc
!=
SQLITE_OK
 ) 
dñma°î_out
;

2495 
zMa°îJou∫Æ
[
nMa°îJou∫Æ
] = 0;

2497 
zJou∫Æ
 = 
zMa°îJou∫Æ
;

2498  (
zJou∫Æ
-
zMa°îJou∫Æ
)<
nMa°îJou∫Æ
 ){

2499 
exi°s
;

2500 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
exi°s
);

2501 if–
rc
!=
SQLITE_OK
 ){

2502 
dñma°î_out
;

2504 if–
exi°s
 ){

2509 
c
;

2510 
Êags
 = (
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MAIN_JOURNAL
);

2511 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zJou∫Æ
, 
pJou∫Æ
, 
Êags
, 0);

2512 if–
rc
!=
SQLITE_OK
 ){

2513 
dñma°î_out
;

2516 
rc
 = 
	`ªadMa°îJou∫Æ
(
pJou∫Æ
, 
zMa°îPå
, 
nMa°îPå
);

2517 
	`sqlôe3OsClo£
(
pJou∫Æ
);

2518 if–
rc
!=
SQLITE_OK
 ){

2519 
dñma°î_out
;

2522 
c
 = 
zMa°îPå
[0]!=0 && 
	`°rcmp
(zMa°îPå, 
zMa°î
)==0;

2523 if–
c
 ){

2525 
dñma°î_out
;

2528 
zJou∫Æ
 +(
	`sqlôe3SåÀn30
(zJournal)+1);

2531 
	`sqlôe3OsClo£
(
pMa°î
);

2532 
rc
 = 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2534 
dñma°î_out
:

2535 
	`sqlôe3_‰ì
(
zMa°îJou∫Æ
);

2536 if–
pMa°î
 ){

2537 
	`sqlôe3OsClo£
(
pMa°î
);

2538 
	`as£π
–!
	`isO≥n
(
pJou∫Æ
) );

2539 
	`sqlôe3_‰ì
(
pMa°î
);

2541  
rc
;

2542 
	}
}

2565 
	$∑gî_åunˇã
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
){

2566 
rc
 = 
SQLITE_OK
;

2567 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

2568 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_READER
 );

2570 if–
	`isO≥n
(
pPagî
->
fd
)

2571 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2573 
i64
 
cuºítSize
, 
√wSize
;

2574 
szPage
 = 
pPagî
->
∑geSize
;

2575 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

2577 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
cuºítSize
);

2578 
√wSize
 = 
szPage
*(
i64
)
nPage
;

2579 if–
rc
==
SQLITE_OK
 && 
cuºítSize
!=
√wSize
 ){

2580 if–
cuºítSize
>
√wSize
 ){

2581 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
fd
, 
√wSize
);

2582 }if–(
cuºítSize
+
szPage
)<=
√wSize
 ){

2583 *
pTmp
 = 
pPagî
->
pTmpS∑˚
;

2584 
	`mem£t
(
pTmp
, 0, 
szPage
);

2585 
	`ã°ˇ£
–(
√wSize
-
szPage
Ë=
cuºítSize
 );

2586 
	`ã°ˇ£
–(
√wSize
-
szPage
Ë> 
cuºítSize
 );

2587 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
pTmp
, 
szPage
, 
√wSize
-szPage);

2589 if–
rc
==
SQLITE_OK
 ){

2590 
pPagî
->
dbFûeSize
 = 
nPage
;

2594  
rc
;

2595 
	}
}

2601 
	$sqlôe3Se˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

2602 
iRë
 = 
	`sqlôe3OsSe˘‹Size
(
pFûe
);

2603 if–
iRë
<32 ){

2604 
iRë
 = 512;

2605 }if–
iRë
>
MAX_SECTOR_SIZE
 ){

2606 
	`as£π
–
MAX_SECTOR_SIZE
>=512 );

2607 
iRë
 = 
MAX_SECTOR_SIZE
;

2609  
iRë
;

2610 
	}
}

2635 
	$£tSe˘‹Size
(
Pagî
 *
pPagî
){

2636 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

2638 if–
pPagî
->
ãmpFûe


2639 || (
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
) &

2640 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
)!=0

2645 
pPagî
->
£˘‹Size
 = 512;

2647 
pPagî
->
£˘‹Size
 = 
	`sqlôe3Se˘‹Size
’Pagî->
fd
);

2649 
	}
}

2708 
	$∑gî_∂ayback
(
Pagî
 *
pPagî
, 
isHŸ
){

2709 
sqlôe3_vfs
 *
pVfs
 = 
pPagî
->pVfs;

2710 
i64
 
szJ
;

2711 
u32
 
nRec
;

2712 
u32
 
u
;

2713 
Pgno
 
mxPg
 = 0;

2714 
rc
;

2715 
ªs
 = 1;

2716 *
zMa°î
 = 0;

2717 
√edPagîRe£t
;

2718 
nPœyback
 = 0;

2723 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

2724 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &
szJ
);

2725 if–
rc
!=
SQLITE_OK
 ){

2726 
íd_∂ayback
;

2740 
zMa°î
 = 
pPagî
->
pTmpS∑˚
;

2741 
rc
 = 
	`ªadMa°îJou∫Æ
(
pPagî
->
jfd
, 
zMa°î
,ÖPagî->
pVfs
->
mxP©h«me
+1);

2742 if–
rc
==
SQLITE_OK
 && 
zMa°î
[0] ){

2743 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zMa°î
, 
SQLITE_ACCESS_EXISTS
, &
ªs
);

2745 
zMa°î
 = 0;

2746 if–
rc
!=
SQLITE_OK
 || !
ªs
 ){

2747 
íd_∂ayback
;

2749 
pPagî
->
jou∫ÆOff
 = 0;

2750 
√edPagîRe£t
 = 
isHŸ
;

2762 
rc
 = 
	`ªadJou∫ÆHdr
(
pPagî
, 
isHŸ
, 
szJ
, &
nRec
, &
mxPg
);

2763 if–
rc
!=
SQLITE_OK
 ){

2764 if–
rc
==
SQLITE_DONE
 ){

2765 
rc
 = 
SQLITE_OK
;

2767 
íd_∂ayback
;

2775 if–
nRec
==0xffffffff ){

2776 
	`as£π
–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) );

2777 
nRec
 = ()((
szJ
 - 
	`JOURNAL_HDR_SZ
(
pPagî
))/
	`JOURNAL_PG_SZ
(pPager));

2794 if–
nRec
==0 && !
isHŸ
 &&

2795 
pPagî
->
jou∫ÆHdr
+
	`JOURNAL_HDR_SZ
’Pagî)=ıPagî->
jou∫ÆOff
 ){

2796 
nRec
 = ()((
szJ
 - 
pPagî
->
jou∫ÆOff
Ë/ 
	`JOURNAL_PG_SZ
(pPager));

2802 if–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) ){

2803 
rc
 = 
	`∑gî_åunˇã
(
pPagî
, 
mxPg
);

2804 if–
rc
!=
SQLITE_OK
 ){

2805 
íd_∂ayback
;

2807 
pPagî
->
dbSize
 = 
mxPg
;

2813 
u
=0; u<
nRec
; u++){

2814 if–
√edPagîRe£t
 ){

2815 
	`∑gî_ª£t
(
pPagî
);

2816 
√edPagîRe£t
 = 0;

2818 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
,&pPagî->
jou∫ÆOff
,0,1,0);

2819 if–
rc
==
SQLITE_OK
 ){

2820 
nPœyback
++;

2822 if–
rc
==
SQLITE_DONE
 ){

2823 
pPagî
->
jou∫ÆOff
 = 
szJ
;

2825 }if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

2831 
rc
 = 
SQLITE_OK
;

2832 
íd_∂ayback
;

2839 
íd_∂ayback
;

2845 
	`as£π
( 0 );

2847 
íd_∂ayback
:

2853 #ifde‡
SQLITE_DEBUG


2854 if–
pPagî
->
fd
->
pMëhods
 ){

2855 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
,
SQLITE_FCNTL_DB_UNCHANGED
,0);

2868 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

2870 if–
rc
==
SQLITE_OK
 ){

2871 
zMa°î
 = 
pPagî
->
pTmpS∑˚
;

2872 
rc
 = 
	`ªadMa°îJou∫Æ
(
pPagî
->
jfd
, 
zMa°î
,ÖPagî->
pVfs
->
mxP©h«me
+1);

2873 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2875 if–
rc
==
SQLITE_OK


2876 && (
pPagî
->
eSèã
>=
PAGER_WRITER_DBMOD
 ||ÖPagî->eSèã==
PAGER_OPEN
)

2878 
rc
 = 
	`sqlôe3PagîSync
(
pPagî
, 0);

2880 if–
rc
==
SQLITE_OK
 ){

2881 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 
zMa°î
[0]!='\0', 0);

2882 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2884 if–
rc
==
SQLITE_OK
 && 
zMa°î
[0] && 
ªs
 ){

2888 
rc
 = 
	`∑gî_dñma°î
(
pPagî
, 
zMa°î
);

2889 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2891 if–
isHŸ
 && 
nPœyback
 ){

2892 
	`sqlôe3_log
(
SQLITE_NOTICE_RECOVER_ROLLBACK
, "recovered %dÖages from %s",

2893 
nPœyback
, 
pPagî
->
zJou∫Æ
);

2900 
	`£tSe˘‹Size
(
pPagî
);

2901  
rc
;

2902 
	}
}

2916 
	$ªadDbPage
(
PgHdr
 *
pPg
, 
u32
 
iFøme
){

2917 
Pagî
 *
pPagî
 = 
pPg
->pPager;

2918 
Pgno
 
pgno
 = 
pPg
->pgno;

2919 
rc
 = 
SQLITE_OK
;

2920 
pgsz
 = 
pPagî
->
∑geSize
;

2922 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 && !
MEMDB
 );

2923 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

2925 #i‚de‡
SQLITE_OMIT_WAL


2926 if–
iFøme
 ){

2928 
rc
 = 
	`sqlôe3WÆRódFøme
(
pPagî
->
pWÆ
, 
iFøme
, 
pgsz
, 
pPg
->
pD©a
);

2932 
i64
 
iOff£t
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

2933 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, 
pPg
->
pD©a
, 
pgsz
, 
iOff£t
);

2934 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

2935 
rc
 = 
SQLITE_OK
;

2939 if–
pgno
==1 ){

2940 if–
rc
 ){

2953 
	`mem£t
(
pPagî
->
dbFûeVîs
, 0xff, (pPager->dbFileVers));

2955 
u8
 *
dbFûeVîs
 = &((u8*)
pPg
->
pD©a
)[24];

2956 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, dbFileVers, (pPager->dbFileVers));

2959 
	`CODEC1
(
pPagî
, 
pPg
->
pD©a
, 
pgno
, 3, 
rc
 = 
SQLITE_NOMEM_BKPT
);

2961 
	`PAGER_INCR
(
sqlôe3_∑gî_ªaddb_cou¡
);

2962 
	`PAGER_INCR
(
pPagî
->
nRód
);

2963 
	`IOTRACE
(("PGIN %∞%d\n", 
pPagî
, 
pgno
));

2964 
	`PAGERTRACE
(("FETCH %dÖage %d hash(%08x)\n",

2965 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_∑gehash
(
pPg
)));

2967  
rc
;

2968 
	}
}

2978 
	$∑gî_wrôe_ch™gecou¡î
(
PgHdr
 *
pPg
){

2979 
u32
 
ch™ge_cou¡î
;

2982 
ch™ge_cou¡î
 = 
	`sqlôe3Gë4byã
((
u8
*)
pPg
->
pPagî
->
dbFûeVîs
)+1;

2983 
	`put32bôs
(((*)
pPg
->
pD©a
)+24, 
ch™ge_cou¡î
);

2988 
	`put32bôs
(((*)
pPg
->
pD©a
)+92, 
ch™ge_cou¡î
);

2989 
	`put32bôs
(((*)
pPg
->
pD©a
)+96, 
SQLITE_VERSION_NUMBER
);

2990 
	}
}

2992 #i‚de‡
SQLITE_OMIT_WAL


3005 
	$∑gîUndoCÆlback
(*
pCtx
, 
Pgno
 
iPg
){

3006 
rc
 = 
SQLITE_OK
;

3007 
Pagî
 *
pPagî
 = (Pagî *)
pCtx
;

3008 
PgHdr
 *
pPg
;

3010 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
) );

3011 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
iPg
);

3012 if–
pPg
 ){

3013 if–
	`sqlôe3PˇchePageRefcou¡
(
pPg
)==1 ){

3014 
	`sqlôe3PˇcheDr›
(
pPg
);

3016 
u32
 
iFøme
 = 0;

3017 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pPg
->
pgno
, &
iFøme
);

3018 if–
rc
==
SQLITE_OK
 ){

3019 
rc
 = 
	`ªadDbPage
(
pPg
, 
iFøme
);

3021 if–
rc
==
SQLITE_OK
 ){

3022 
pPagî
->
	`xReöôî
(
pPg
);

3024 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPg
);

3036 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

3038  
rc
;

3039 
	}
}

3044 
	$∑gîRﬁlbackWÆ
(
Pagî
 *
pPagî
){

3045 
rc
;

3046 
PgHdr
 *
pLi°
;

3055 
pPagî
->
dbSize
 =ÖPagî->
dbOrigSize
;

3056 
rc
 = 
	`sqlôe3WÆUndo
(
pPagî
->
pWÆ
, 
∑gîUndoCÆlback
, (*)pPager);

3057 
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

3058  
pLi°
 && 
rc
==
SQLITE_OK
 ){

3059 
PgHdr
 *
pNext
 = 
pLi°
->
pDúty
;

3060 
rc
 = 
	`∑gîUndoCÆlback
((*)
pPagî
, 
pLi°
->
pgno
);

3061 
pLi°
 = 
pNext
;

3064  
rc
;

3065 
	}
}

3076 
	$∑gîWÆFømes
(

3077 
Pagî
 *
pPagî
,

3078 
PgHdr
 *
pLi°
,

3079 
Pgno
 
nTrunˇã
,

3080 
isCommô


3082 
rc
;

3083 
nLi°
;

3084 
PgHdr
 *
p
;

3086 
	`as£π
–
pPagî
->
pWÆ
 );

3087 
	`as£π
–
pLi°
 );

3088 #ifde‡
SQLITE_DEBUG


3090 
p
=
pLi°
;Ö &&Ö->
pDúty
;Ö=p->pDirty){

3091 
	`as£π
–
p
->
pgno
 <Ö->
pDúty
->pgno );

3095 
	`as£π
–
pLi°
->
pDúty
==0 || 
isCommô
 );

3096 if–
isCommô
 ){

3101 
PgHdr
 **
µNext
 = &
pLi°
;

3102 
nLi°
 = 0;

3103 
p
=
pLi°
; (*
µNext
 =Ö)!=0;Öı->
pDúty
){

3104 if–
p
->
pgno
<=
nTrunˇã
 ){

3105 
µNext
 = &
p
->
pDúty
;

3106 
nLi°
++;

3109 
	`as£π
–
pLi°
 );

3111 
nLi°
 = 1;

3113 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
] +
nLi°
;

3115 if–
pLi°
->
pgno
==1 ) 
	`∑gî_wrôe_ch™gecou¡î
(pList);

3116 
rc
 = 
	`sqlôe3WÆFømes
(
pPagî
->
pWÆ
,

3117 
pPagî
->
∑geSize
, 
pLi°
, 
nTrunˇã
, 
isCommô
,ÖPagî->
wÆSyncFœgs


3119 if–
rc
==
SQLITE_OK
 && 
pPagî
->
pBackup
 ){

3120 
p
=
pLi°
;Ö;Öı->
pDúty
){

3121 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
p
->
pgno
, (
u8
 *Ì->
pD©a
);

3125 #ifde‡
SQLITE_CHECK_PAGES


3126 
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

3127 
p
=
pLi°
;Ö;Öı->
pDúty
){

3128 
	`∑gî_£t_∑gehash
(
p
);

3132  
rc
;

3133 
	}
}

3143 
	$∑gîBegöRódTønß˘i⁄
(
Pagî
 *
pPagî
){

3144 
rc
;

3145 
ch™ged
 = 0;

3147 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
) );

3148 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 ||ÖPagî->eSèã==
PAGER_READER
 );

3155 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pPagî
->
pWÆ
);

3157 
rc
 = 
	`sqlôe3WÆBegöRódTønß˘i⁄
(
pPagî
->
pWÆ
, &
ch™ged
);

3158 if–
rc
!=
SQLITE_OK
 || 
ch™ged
 ){

3159 
	`∑gî_ª£t
(
pPagî
);

3160 if–
	`USEFETCH
(
pPagî
ËË
	`sqlôe3OsUn„tch
’Pagî->
fd
, 0, 0);

3163  
rc
;

3164 
	}
}

3176 
	$∑gîPagecou¡
(
Pagî
 *
pPagî
, 
Pgno
 *
≤Page
){

3177 
Pgno
 
nPage
;

3185 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

3186 
	`as£π
–
pPagî
->
eLock
>=
SHARED_LOCK
 );

3187 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

3188 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

3189 
nPage
 = 
	`sqlôe3WÆDbsize
(
pPagî
->
pWÆ
);

3196 if–
nPage
==0 && 
	`ALWAYS
(
	`isO≥n
(
pPagî
->
fd
)) ){

3197 
i64
 
n
 = 0;

3198 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
n
);

3199 if–
rc
!=
SQLITE_OK
 ){

3200  
rc
;

3202 
nPage
 = (
Pgno
)((
n
+
pPagî
->
∑geSize
-1) /ÖPager->pageSize);

3209 if–
nPage
>
pPagî
->
mxPgno
 ){

3210 
pPagî
->
mxPgno
 = (
Pgno
)
nPage
;

3213 *
≤Page
 = 
nPage
;

3214  
SQLITE_OK
;

3215 
	}
}

3217 #i‚de‡
SQLITE_OMIT_WAL


3236 
	$∑gîO≥nWÆIfPª£¡
(
Pagî
 *
pPagî
){

3237 
rc
 = 
SQLITE_OK
;

3238 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

3239 
	`as£π
–
pPagî
->
eLock
>=
SHARED_LOCK
 );

3241 if–!
pPagî
->
ãmpFûe
 ){

3242 
isWÆ
;

3243 
Pgno
 
nPage
;

3245 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

3246 if–
rc
 ) Ñc;

3247 if–
nPage
==0 ){

3248 
rc
 = 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 0);

3249 if–
rc
==
SQLITE_IOERR_DELETE_NOENT
 )Ñ¯
SQLITE_OK
;

3250 
isWÆ
 = 0;

3252 
rc
 = 
	`sqlôe3OsAc˚ss
(

3253 
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 
SQLITE_ACCESS_EXISTS
, &
isWÆ


3256 if–
rc
==
SQLITE_OK
 ){

3257 if–
isWÆ
 ){

3258 
	`ã°ˇ£
–
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
)==0 );

3259 
rc
 = 
	`sqlôe3PagîO≥nWÆ
(
pPagî
, 0);

3260 }if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 ){

3261 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_DELETE
;

3265  
rc
;

3266 
	}
}

3305 
	$∑gîPœybackSavïoöt
(
Pagî
 *
pPagî
, 
PagîSavïoöt
 *
pSavïoöt
){

3306 
i64
 
szJ
;

3307 
i64
 
iHdrOff
;

3308 
rc
 = 
SQLITE_OK
;

3309 
Bôvec
 *
pD⁄e
 = 0;

3311 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

3312 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

3315 if–
pSavïoöt
 ){

3316 
pD⁄e
 = 
	`sqlôe3BôvecCª©e
(
pSavïoöt
->
nOrig
);

3317 if–!
pD⁄e
 ){

3318  
SQLITE_NOMEM_BKPT
;

3325 
pPagî
->
dbSize
 = 
pSavïoöt
 ?ÖSavïoöt->
nOrig
 :ÖPagî->
dbOrigSize
;

3326 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

3328 if–!
pSavïoöt
 && 
	`∑gîU£WÆ
(
pPagî
) ){

3329  
	`∑gîRﬁlbackWÆ
(
pPagî
);

3337 
szJ
 = 
pPagî
->
jou∫ÆOff
;

3338 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 || 
szJ
==0 );

3347 if–
pSavïoöt
 && !
	`∑gîU£WÆ
(
pPagî
) ){

3348 
iHdrOff
 = 
pSavïoöt
->
iHdrOff£t
 ?ÖSavïoöt->iHdrOff£à: 
szJ
;

3349 
pPagî
->
jou∫ÆOff
 = 
pSavïoöt
->
iOff£t
;

3350  
rc
==
SQLITE_OK
 && 
pPagî
->
jou∫ÆOff
<
iHdrOff
 ){

3351 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &pPagî->
jou∫ÆOff
, 
pD⁄e
, 1, 1);

3353 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3355 
pPagî
->
jou∫ÆOff
 = 0;

3363  
rc
==
SQLITE_OK
 && 
pPagî
->
jou∫ÆOff
<
szJ
 ){

3364 
u32
 
ii
;

3365 
u32
 
nJRec
 = 0;

3366 
u32
 
dummy
;

3367 
rc
 = 
	`ªadJou∫ÆHdr
(
pPagî
, 0, 
szJ
, &
nJRec
, &
dummy
);

3368 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3375 if–
nJRec
==0

3376 && 
pPagî
->
jou∫ÆHdr
+
	`JOURNAL_HDR_SZ
’Pagî)=ıPagî->
jou∫ÆOff


3378 
nJRec
 = (
u32
)((
szJ
 - 
pPagî
->
jou∫ÆOff
)/
	`JOURNAL_PG_SZ
(pPager));

3380 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nJRec
 && 
pPagî
->
jou∫ÆOff
<
szJ
; ii++){

3381 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &pPagî->
jou∫ÆOff
, 
pD⁄e
, 1, 1);

3383 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3385 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPagî
->
jou∫ÆOff
>=
szJ
 );

3391 if–
pSavïoöt
 ){

3392 
u32
 
ii
;

3393 
i64
 
off£t
 = (i64)
pSavïoöt
->
iSubRec
*(4+
pPagî
->
∑geSize
);

3395 if–
	`∑gîU£WÆ
(
pPagî
) ){

3396 
rc
 = 
	`sqlôe3WÆSavïoötUndo
(
pPagî
->
pWÆ
, 
pSavïoöt
->
aWÆD©a
);

3398 
ii
=
pSavïoöt
->
iSubRec
; 
rc
==
SQLITE_OK
 && ii<
pPagî
->
nSubRec
; ii++){

3399 
	`as£π
–
off£t
==(
i64
)
ii
*(4+
pPagî
->
∑geSize
) );

3400 
rc
 = 
	`∑gî_∂ayback_⁄e_∑ge
(
pPagî
, &
off£t
, 
pD⁄e
, 0, 1);

3402 
	`as£π
–
rc
!=
SQLITE_DONE
 );

3405 
	`sqlôe3BôvecDe°roy
(
pD⁄e
);

3406 if–
rc
==
SQLITE_OK
 ){

3407 
pPagî
->
jou∫ÆOff
 = 
szJ
;

3410  
rc
;

3411 
	}
}

3417 
	$sqlôe3PagîSëCachesize
(
Pagî
 *
pPagî
, 
mxPage
){

3418 
	`sqlôe3PˇcheSëCachesize
(
pPagî
->
pPCache
, 
mxPage
);

3419 
	}
}

3425 
	$sqlôe3PagîSëSpûlsize
(
Pagî
 *
pPagî
, 
mxPage
){

3426  
	`sqlôe3PˇcheSëSpûlsize
(
pPagî
->
pPCache
, 
mxPage
);

3427 
	}
}

3432 
	$∑gîFixM≠limô
(
Pagî
 *
pPagî
){

3433 #i‡
SQLITE_MAX_MMAP_SIZE
>0

3434 
sqlôe3_fûe
 *
fd
 = 
pPagî
->fd;

3435 if–
	`isO≥n
(
fd
Ë&& fd->
pMëhods
->
iVîsi⁄
>=3 ){

3436 
sqlôe3_öt64
 
sz
;

3437 
sz
 = 
pPagî
->
szMm≠
;

3438 
pPagî
->
bU£Fëch
 = (
sz
>0);

3439 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_MMAP_SIZE
, &
sz
);

3442 
	}
}

3447 
	$sqlôe3PagîSëMm≠Limô
(
Pagî
 *
pPagî
, 
sqlôe3_öt64
 
szMm≠
){

3448 
pPagî
->
szMm≠
 = szMmap;

3449 
	`∑gîFixM≠limô
(
pPagî
);

3450 
	}
}

3455 
	$sqlôe3PagîShrök
(
Pagî
 *
pPagî
){

3456 
	`sqlôe3PˇcheShrök
(
pPagî
->
pPCache
);

3457 
	}
}

3510 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


3511 
	$sqlôe3PagîSëFœgs
(

3512 
Pagî
 *
pPagî
,

3513 
pgFœgs


3515 
Àvñ
 = 
pgFœgs
 & 
PAGER_SYNCHRONOUS_MASK
;

3516 if–
pPagî
->
ãmpFûe
 ){

3517 
pPagî
->
noSync
 = 1;

3518 
pPagî
->
fuŒSync
 = 0;

3519 
pPagî
->
exåaSync
 = 0;

3521 
pPagî
->
noSync
 = 
Àvñ
==
PAGER_SYNCHRONOUS_OFF
 ?1:0;

3522 
pPagî
->
fuŒSync
 = 
Àvñ
>=
PAGER_SYNCHRONOUS_FULL
 ?1:0;

3523 
pPagî
->
exåaSync
 = 
Àvñ
==
PAGER_SYNCHRONOUS_EXTRA
 ?1:0;

3525 if–
pPagî
->
noSync
 ){

3526 
pPagî
->
syncFœgs
 = 0;

3527 
pPagî
->
ck±SyncFœgs
 = 0;

3528 }if–
pgFœgs
 & 
PAGER_FULLFSYNC
 ){

3529 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_FULL
;

3530 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_FULL
;

3531 }if–
pgFœgs
 & 
PAGER_CKPT_FULLFSYNC
 ){

3532 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3533 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_FULL
;

3535 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3536 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_NORMAL
;

3538 
pPagî
->
wÆSyncFœgs
 =ÖPagî->
syncFœgs
;

3539 if–
pPagî
->
fuŒSync
 ){

3540 
pPagî
->
wÆSyncFœgs
 |
WAL_SYNC_TRANSACTIONS
;

3542 if–
pgFœgs
 & 
PAGER_CACHESPILL
 ){

3543 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_OFF
;

3545 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_OFF
;

3547 
	}
}

3555 #ifde‡
SQLITE_TEST


3556 
	gsqlôe3_›íãmp_cou¡
 = 0;

3574 
	$∑gîO≥¡emp
(

3575 
Pagî
 *
pPagî
,

3576 
sqlôe3_fûe
 *
pFûe
,

3577 
vfsFœgs


3579 
rc
;

3581 #ifde‡
SQLITE_TEST


3582 
sqlôe3_›íãmp_cou¡
++;

3585 
vfsFœgs
 |
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 |

3586 
SQLITE_OPEN_EXCLUSIVE
 | 
SQLITE_OPEN_DELETEONCLOSE
;

3587 
rc
 = 
	`sqlôe3OsO≥n
(
pPagî
->
pVfs
, 0, 
pFûe
, 
vfsFœgs
, 0);

3588 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pFûe
) );

3589  
rc
;

3590 
	}
}

3613 
sqlôe3PagîSëBusyh™dÀr
(

3614 
Pagî
 *
pPagî
,

3615 (*
xBusyH™dÀr
)(*),

3616 *
pBusyH™dÀrArg


3618 
pPagî
->
xBusyH™dÀr
 = xBusyHandler;

3619 
pPagî
->
pBusyH™dÀrArg
 =ÖBusyHandlerArg;

3621 if–
	`isO≥n
(
pPagî
->
fd
) ){

3622 **
≠
 = (**)&
pPagî
->
xBusyH™dÀr
;

3623 
	`as£π
–(((*)(*))(
≠
[0]))==
xBusyH™dÀr
 );

3624 
	`as£π
–
≠
[1]==
pBusyH™dÀrArg
 );

3625 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_BUSYHANDLER
, (*)
≠
);

3627 
	}
}

3659 
	$sqlôe3PagîSëPagesize
(
Pagî
 *
pPagî
, 
u32
 *
pPageSize
, 
nRe£rve
){

3660 
rc
 = 
SQLITE_OK
;

3672 
u32
 
∑geSize
 = *
pPageSize
;

3673 
	`as£π
–
∑geSize
==0 || (∑geSize>=512 &&ÖageSize<=
SQLITE_MAX_PAGE_SIZE
) );

3674 if–(
pPagî
->
memDb
==0 ||ÖPagî->
dbSize
==0)

3675 && 
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0

3676 && 
∑geSize
 &&ÖageSize!=(
u32
)
pPagî
->pageSize

3678 *
pNew
 = 
NULL
;

3679 
i64
 
nByã
 = 0;

3681 if–
pPagî
->
eSèã
>
PAGER_OPEN
 && 
	`isO≥n
’Pagî->
fd
) ){

3682 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
fd
, &
nByã
);

3684 if–
rc
==
SQLITE_OK
 ){

3685 
pNew
 = (*)
	`sqlôe3PageMÆloc
(
∑geSize
);

3686 if–!
pNew
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

3689 if–
rc
==
SQLITE_OK
 ){

3690 
	`∑gî_ª£t
(
pPagî
);

3691 
rc
 = 
	`sqlôe3PˇcheSëPageSize
(
pPagî
->
pPCache
, 
∑geSize
);

3693 if–
rc
==
SQLITE_OK
 ){

3694 
	`sqlôe3PageFªe
(
pPagî
->
pTmpS∑˚
);

3695 
pPagî
->
pTmpS∑˚
 = 
pNew
;

3696 
pPagî
->
dbSize
 = (
Pgno
)((
nByã
+
∑geSize
-1)/pageSize);

3697 
pPagî
->
∑geSize
 =ÖageSize;

3699 
	`sqlôe3PageFªe
(
pNew
);

3703 *
pPageSize
 = 
pPagî
->
∑geSize
;

3704 if–
rc
==
SQLITE_OK
 ){

3705 if–
nRe£rve
<0 )ÇRe£rvê
pPagî
->nReserve;

3706 
	`as£π
–
nRe£rve
>=0 &&ÇReserve<1000 );

3707 
pPagî
->
nRe£rve
 = (
i16
)nReserve;

3708 
	`∑gîRï‹tSize
(
pPagî
);

3709 
	`∑gîFixM≠limô
(
pPagî
);

3711  
rc
;

3712 
	}
}

3722 *
	$sqlôe3PagîTempS∑˚
(
Pagî
 *
pPagî
){

3723  
pPagî
->
pTmpS∑˚
;

3724 
	}
}

3733 
	$sqlôe3PagîMaxPageCou¡
(
Pagî
 *
pPagî
, 
mxPage
){

3734 if–
mxPage
>0 ){

3735 
pPagî
->
mxPgno
 = 
mxPage
;

3737 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_OPEN
 );

3738 
	`as£π
–
pPagî
->
mxPgno
>ıPagî->
dbSize
 );

3739  
pPagî
->
mxPgno
;

3740 
	}
}

3750 #ifde‡
SQLITE_TEST


3751 
sqlôe3_io_îr‹_≥ndög
;

3752 
sqlôe3_io_îr‹_hô
;

3753 
	gßved_˙t
;

3754 
	$dißbÀ_simuœãd_io_îr‹s
(){

3755 
ßved_˙t
 = 
sqlôe3_io_îr‹_≥ndög
;

3756 
sqlôe3_io_îr‹_≥ndög
 = -1;

3757 
	}
}

3758 
	$íabÀ_simuœãd_io_îr‹s
(){

3759 
sqlôe3_io_îr‹_≥ndög
 = 
ßved_˙t
;

3760 
	}
}

3762 
	#dißbÀ_simuœãd_io_îr‹s
()

	)

3763 
	#íabÀ_simuœãd_io_îr‹s
()

	)

3780 
	$sqlôe3PagîRódFûehódî
(
Pagî
 *
pPagî
, 
N
, *
pDe°
){

3781 
rc
 = 
SQLITE_OK
;

3782 
	`mem£t
(
pDe°
, 0, 
N
);

3783 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

3789 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

3791 if–
	`isO≥n
(
pPagî
->
fd
) ){

3792 
	`IOTRACE
(("DBHDR %∞0 %d\n", 
pPagî
, 
N
))

3793 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, 
pDe°
, 
N
, 0);

3794 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

3795 
rc
 = 
SQLITE_OK
;

3798  
rc
;

3799 
	}
}

3808 
	$sqlôe3PagîPagecou¡
(
Pagî
 *
pPagî
, *
≤Page
){

3809 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

3810 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_WRITER_FINISHED
 );

3811 *
≤Page
 = ()
pPagî
->
dbSize
;

3812 
	}
}

3829 
	$∑gî_waô_⁄_lock
(
Pagî
 *
pPagî
, 
lockty≥
){

3830 
rc
;

3837 
	`as£π
–(
pPagî
->
eLock
>=
lockty≥
)

3838 || (
pPagî
->
eLock
==
NO_LOCK
 && 
lockty≥
==
SHARED_LOCK
)

3839 || (
pPagî
->
eLock
==
RESERVED_LOCK
 && 
lockty≥
==
EXCLUSIVE_LOCK
)

3843 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
lockty≥
);

3844 } 
rc
==
SQLITE_BUSY
 && 
pPagî
->
	`xBusyH™dÀr
’Pagî->
pBusyH™dÀrArg
) );

3845  
rc
;

3846 
	}
}

3870 #i‡
deföed
(
SQLITE_DEBUG
)

3871 
	$as£πTrunˇãC⁄°øötCb
(
PgHdr
 *
pPg
){

3872 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

3873 
	`as£π
–!
	`subjRequúesPage
(
pPg
Ë||ÖPg->
pgno
<ıPg->
pPagî
->
dbSize
 );

3874 
	}
}

3875 
	$as£πTrunˇãC⁄°øöt
(
Pagî
 *
pPagî
){

3876 
	`sqlôe3PˇcheIãøãDúty
(
pPagî
->
pPCache
, 
as£πTrunˇãC⁄°øötCb
);

3877 
	}
}

3879 
	#as£πTrunˇãC⁄°øöt
(
pPagî
)

	)

3893 
	$sqlôe3PagîTrunˇãImage
(
Pagî
 *
pPagî
, 
Pgno
 
nPage
){

3894 
	`as£π
–
pPagî
->
dbSize
>=
nPage
 );

3895 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 );

3896 
pPagî
->
dbSize
 = 
nPage
;

3907 
	}
}

3924 
	$∑gîSyncHŸJou∫Æ
(
Pagî
 *
pPagî
){

3925 
rc
 = 
SQLITE_OK
;

3926 if–!
pPagî
->
noSync
 ){

3927 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
, 
SQLITE_SYNC_NORMAL
);

3929 if–
rc
==
SQLITE_OK
 ){

3930 
rc
 = 
	`sqlôe3OsFûeSize
(
pPagî
->
jfd
, &pPagî->
jou∫ÆHdr
);

3932  
rc
;

3933 
	}
}

3945 
	$∑gîAcquúeM≠Page
(

3946 
Pagî
 *
pPagî
,

3947 
Pgno
 
pgno
,

3948 *
pD©a
,

3949 
PgHdr
 **
µPage


3951 
PgHdr
 *
p
;

3953 if–
pPagî
->
pMm≠Fªñi°
 ){

3954 *
µPage
 = 
p
 = 
pPagî
->
pMm≠Fªñi°
;

3955 
pPagî
->
pMm≠Fªñi°
 = 
p
->
pDúty
;

3956 
p
->
pDúty
 = 0;

3957 
	`mem£t
(
p
->
pExåa
, 0, 
pPagî
->
nExåa
);

3959 *
µPage
 = 
p
 = (
PgHdr
 *)
	`sqlôe3MÆlocZîo
((PgHdrË+ 
pPagî
->
nExåa
);

3960 if–
p
==0 ){

3961 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pgno
-1Ë*ÖPagî->
∑geSize
, 
pD©a
);

3962  
SQLITE_NOMEM_BKPT
;

3964 
p
->
pExåa
 = (*)&p[1];

3965 
p
->
Êags
 = 
PGHDR_MMAP
;

3966 
p
->
nRef
 = 1;

3967 
p
->
pPagî
 =ÖPager;

3970 
	`as£π
–
p
->
pExåa
==(*)&p[1] );

3971 
	`as£π
–
p
->
pPage
==0 );

3972 
	`as£π
–
p
->
Êags
==
PGHDR_MMAP
 );

3973 
	`as£π
–
p
->
pPagî
==pPager );

3974 
	`as£π
–
p
->
nRef
==1 );

3976 
p
->
pgno
 =Ögno;

3977 
p
->
pD©a
 =ÖData;

3978 
pPagî
->
nMm≠Out
++;

3980  
SQLITE_OK
;

3981 
	}
}

3987 
	$∑gîRñó£M≠Page
(
PgHdr
 *
pPg
){

3988 
Pagî
 *
pPagî
 = 
pPg
->pPager;

3989 
pPagî
->
nMm≠Out
--;

3990 
pPg
->
pDúty
 = 
pPagî
->
pMm≠Fªñi°
;

3991 
pPagî
->
pMm≠Fªñi°
 = 
pPg
;

3993 
	`as£π
–
pPagî
->
fd
->
pMëhods
->
iVîsi⁄
>=3 );

3994 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pPg
->
pgno
-1)*pPagî->
∑geSize
,ÖPg->
pD©a
);

3995 
	}
}

4000 
	$∑gîFªeM≠Hdrs
(
Pagî
 *
pPagî
){

4001 
PgHdr
 *
p
;

4002 
PgHdr
 *
pNext
;

4003 
p
=
pPagî
->
pMm≠Fªñi°
;Ö;Ö=
pNext
){

4004 
pNext
 = 
p
->
pDúty
;

4005 
	`sqlôe3_‰ì
(
p
);

4007 
	}
}

4024 
	$sqlôe3PagîClo£
(
Pagî
 *
pPagî
){

4025 
u8
 *
pTmp
 = (u8 *)
pPagî
->
pTmpS∑˚
;

4027 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4028 
	`dißbÀ_simuœãd_io_îr‹s
();

4029 
	`sqlôe3BegöBíignMÆloc
();

4030 
	`∑gîFªeM≠Hdrs
(
pPagî
);

4032 
pPagî
->
ex˛usiveMode
 = 0;

4033 #i‚de‡
SQLITE_OMIT_WAL


4034 
	`sqlôe3WÆClo£
(
pPagî
->
pWÆ
,ÖPagî->
ck±SyncFœgs
,ÖPagî->
∑geSize
, 
pTmp
);

4035 
pPagî
->
pWÆ
 = 0;

4037 
	`∑gî_ª£t
(
pPagî
);

4038 if–
MEMDB
 ){

4039 
	`∑gî_u∆ock
(
pPagî
);

4052 if–
	`isO≥n
(
pPagî
->
jfd
) ){

4053 
	`∑gî_îr‹
(
pPagî
, 
	`∑gîSyncHŸJou∫Æ
(pPager));

4055 
	`∑gîU∆ockAndRﬁlback
(
pPagî
);

4057 
	`sqlôe3EndBíignMÆloc
();

4058 
	`íabÀ_simuœãd_io_îr‹s
();

4059 
	`PAGERTRACE
(("CLOSE %d\n", 
	`PAGERID
(
pPagî
)));

4060 
	`IOTRACE
(("CLOSE %p\n", 
pPagî
))

4061 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

4062 
	`sqlôe3OsClo£
(
pPagî
->
fd
);

4063 
	`sqlôe3PageFªe
(
pTmp
);

4064 
	`sqlôe3PˇcheClo£
(
pPagî
->
pPCache
);

4066 #ifde‡
SQLITE_HAS_CODEC


4067 if–
pPagî
->
xCodecFªe
 )ÖPagî->
	`xCodecFªe
’Pagî->
pCodec
);

4070 
	`as£π
–!
pPagî
->
aSavïoöt
 && !pPagî->
pInJou∫Æ
 );

4071 
	`as£π
–!
	`isO≥n
(
pPagî
->
jfd
Ë&& !isO≥n’Pagî->
sjfd
) );

4073 
	`sqlôe3_‰ì
(
pPagî
);

4074  
SQLITE_OK
;

4075 
	}
}

4077 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_TEST
)

4081 
Pgno
 
	$sqlôe3PagîPagíumbî
(
DbPage
 *
pPg
){

4082  
pPg
->
pgno
;

4083 
	}
}

4089 
	$sqlôe3PagîRef
(
DbPage
 *
pPg
){

4090 
	`sqlôe3PˇcheRef
(
pPg
);

4091 
	}
}

4128 
	$syncJou∫Æ
(
Pagî
 *
pPagî
, 
√wHdr
){

4129 
rc
;

4131 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


4132 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


4134 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4135 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

4137 
rc
 = 
	`sqlôe3PagîEx˛usiveLock
(
pPagî
);

4138 if–
rc
!=
SQLITE_OK
 ) Ñc;

4140 if–!
pPagî
->
noSync
 ){

4141 
	`as£π
–!
pPagî
->
ãmpFûe
 );

4142 if–
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_MEMORY
 ){

4143 c⁄° 
iDc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

4144 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
) );

4146 if–0==(
iDc
&
SQLITE_IOCAP_SAFE_APPEND
) ){

4169 
i64
 
iNextHdrOff£t
;

4170 
u8
 
aMagic
[8];

4171 
u8
 
zHódî
[(
aJou∫ÆMagic
)+4];

4173 
	`mem˝y
(
zHódî
, 
aJou∫ÆMagic
, (aJournalMagic));

4174 
	`put32bôs
(&
zHódî
[(
aJou∫ÆMagic
)], 
pPagî
->
nRec
);

4176 
iNextHdrOff£t
 = 
	`jou∫ÆHdrOff£t
(
pPagî
);

4177 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, 
aMagic
, 8, 
iNextHdrOff£t
);

4178 if–
rc
==
SQLITE_OK
 && 0==
	`memcmp
(
aMagic
, 
aJou∫ÆMagic
, 8) ){

4179 c⁄° 
u8
 
zîobyã
 = 0;

4180 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, &
zîobyã
, 1, 
iNextHdrOff£t
);

4182 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IOERR_SHORT_READ
 ){

4183  
rc
;

4197 if–
pPagî
->
fuŒSync
 && 0==(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

4198 
	`PAGERTRACE
(("SYNC jou∫Æ o‡%d\n", 
	`PAGERID
(
pPagî
)));

4199 
	`IOTRACE
(("JSYNC %p\n", 
pPagî
))

4200 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
);

4201 if–
rc
!=
SQLITE_OK
 ) Ñc;

4203 
	`IOTRACE
(("JHDR %∞%Œd\n", 
pPagî
,ÖPagî->
jou∫ÆHdr
));

4204 
rc
 = 
	`sqlôe3OsWrôe
(

4205 
pPagî
->
jfd
, 
zHódî
, (zHódî),ÖPagî->
jou∫ÆHdr


4207 if–
rc
!=
SQLITE_OK
 ) Ñc;

4209 if–0==(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

4210 
	`PAGERTRACE
(("SYNC jou∫Æ o‡%d\n", 
	`PAGERID
(
pPagî
)));

4211 
	`IOTRACE
(("JSYNC %p\n", 
pPagî
))

4212 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
jfd
,ÖPagî->
syncFœgs
|

4213 (
pPagî
->
syncFœgs
==
SQLITE_SYNC_FULL
?
SQLITE_SYNC_DATAONLY
:0)

4215 if–
rc
!=
SQLITE_OK
 ) Ñc;

4218 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
;

4219 if–
√wHdr
 && 0==(
iDc
&
SQLITE_IOCAP_SAFE_APPEND
) ){

4220 
pPagî
->
nRec
 = 0;

4221 
rc
 = 
	`wrôeJou∫ÆHdr
(
pPagî
);

4222 if–
rc
!=
SQLITE_OK
 ) Ñc;

4225 
pPagî
->
jou∫ÆHdr
 =ÖPagî->
jou∫ÆOff
;

4233 
	`sqlôe3PˇcheCÀ¨SyncFœgs
(
pPagî
->
pPCache
);

4234 
pPagî
->
eSèã
 = 
PAGER_WRITER_DBMOD
;

4235 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4236  
SQLITE_OK
;

4237 
	}
}

4271 
	$∑gî_wrôe_∑gñi°
(
Pagî
 *
pPagî
, 
PgHdr
 *
pLi°
){

4272 
rc
 = 
SQLITE_OK
;

4275 
	`as£π
–!
	`∑gîU£WÆ
(
pPagî
) );

4276 
	`as£π
–
pPagî
->
ãmpFûe
 ||ÖPagî->
eSèã
==
PAGER_WRITER_DBMOD
 );

4277 
	`as£π
–
pPagî
->
eLock
==
EXCLUSIVE_LOCK
 );

4278 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë|| 
pLi°
->
pDúty
==0 );

4284 if–!
	`isO≥n
(
pPagî
->
fd
) ){

4285 
	`as£π
–
pPagî
->
ãmpFûe
 && 
rc
==
SQLITE_OK
 );

4286 
rc
 = 
	`∑gîO≥¡emp
(
pPagî
,ÖPagî->
fd
,ÖPagî->
vfsFœgs
);

4292 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
fd
) );

4293 if–
rc
==
SQLITE_OK


4294 && 
pPagî
->
dbHötSize
<pPagî->
dbSize


4295 && (
pLi°
->
pDúty
 ||ÖLi°->
pgno
>
pPagî
->
dbHötSize
)

4297 
sqlôe3_öt64
 
szFûe
 = 
pPagî
->
∑geSize
 * (sqlôe3_öt64ÌPagî->
dbSize
;

4298 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pPagî
->
fd
, 
SQLITE_FCNTL_SIZE_HINT
, &
szFûe
);

4299 
pPagî
->
dbHötSize
 =ÖPagî->
dbSize
;

4302  
rc
==
SQLITE_OK
 && 
pLi°
 ){

4303 
Pgno
 
pgno
 = 
pLi°
->pgno;

4313 if–
pgno
<=
pPagî
->
dbSize
 && 0==(
pLi°
->
Êags
&
PGHDR_DONT_WRITE
) ){

4314 
i64
 
off£t
 = (
pgno
-1)*(i64)
pPagî
->
∑geSize
;

4315 *
pD©a
;

4317 
	`as£π
–(
pLi°
->
Êags
&
PGHDR_NEED_SYNC
)==0 );

4318 if–
pLi°
->
pgno
==1 ) 
	`∑gî_wrôe_ch™gecou¡î
(pList);

4321 
	`CODEC2
(
pPagî
, 
pLi°
->
pD©a
, 
pgno
, 6,  
SQLITE_NOMEM_BKPT
,ÖData);

4324 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
pD©a
,ÖPagî->
∑geSize
, 
off£t
);

4330 if–
pgno
==1 ){

4331 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, &
pD©a
[24], (pPager->dbFileVers));

4333 if–
pgno
>
pPagî
->
dbFûeSize
 ){

4334 
pPagî
->
dbFûeSize
 = 
pgno
;

4336 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
]++;

4339 
	`sqlôe3BackupUpd©e
(
pPagî
->
pBackup
, 
pgno
, (
u8
*)
pLi°
->
pD©a
);

4341 
	`PAGERTRACE
(("STORE %dÖage %d hash(%08x)\n",

4342 
	`PAGERID
(
pPagî
), 
pgno
, 
	`∑gî_∑gehash
(
pLi°
)));

4343 
	`IOTRACE
(("PGOUT %∞%d\n", 
pPagî
, 
pgno
));

4344 
	`PAGER_INCR
(
sqlôe3_∑gî_wrôedb_cou¡
);

4346 
	`PAGERTRACE
(("NOSTORE %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pgno
));

4348 
	`∑gî_£t_∑gehash
(
pLi°
);

4349 
pLi°
 =ÖLi°->
pDúty
;

4352  
rc
;

4353 
	}
}

4363 
	$›íSubJou∫Æ
(
Pagî
 *
pPagî
){

4364 
rc
 = 
SQLITE_OK
;

4365 if–!
	`isO≥n
(
pPagî
->
sjfd
) ){

4366 c⁄° 
Êags
 = 
SQLITE_OPEN_SUBJOURNAL
 | 
SQLITE_OPEN_READWRITE


4367 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_EXCLUSIVE


4368 | 
SQLITE_OPEN_DELETEONCLOSE
;

4369 
nStmtSpûl
 = 
sqlôe3C⁄fig
.nStmtSpill;

4370 if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ||ÖPagî->
subjInMem‹y
 ){

4371 
nStmtSpûl
 = -1;

4373 
rc
 = 
	`sqlôe3Jou∫ÆO≥n
(
pPagî
->
pVfs
, 0,ÖPagî->
sjfd
, 
Êags
, 
nStmtSpûl
);

4375  
rc
;

4376 
	}
}

4389 
	$subjou∫ÆPage
(
PgHdr
 *
pPg
){

4390 
rc
 = 
SQLITE_OK
;

4391 
Pagî
 *
pPagî
 = 
pPg
->pPager;

4392 if–
pPagî
->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 ){

4395 
	`as£π
–
pPagî
->
u£Jou∫Æ
 );

4396 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
Ë|| 
	`∑gîU£WÆ
(pPager) );

4397 
	`as£π
–
	`isO≥n
(
pPagî
->
sjfd
Ë||ÖPagî->
nSubRec
==0 );

4398 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)

4399 || 
	`∑geInJou∫Æ
(
pPagî
, 
pPg
)

4400 || 
pPg
->
pgno
>
pPagî
->
dbOrigSize


4402 
rc
 = 
	`›íSubJou∫Æ
(
pPagî
);

4406 if–
rc
==
SQLITE_OK
 ){

4407 *
pD©a
 = 
pPg
->pData;

4408 
i64
 
off£t
 = (i64)
pPagî
->
nSubRec
*(4+pPagî->
∑geSize
);

4409 *
pD©a2
;

4411 
	`CODEC2
(
pPagî
, 
pD©a
, 
pPg
->
pgno
, 7,  
SQLITE_NOMEM_BKPT
, 
pD©a2
);

4412 
	`PAGERTRACE
(("STMT-JOURNAL %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
));

4413 
rc
 = 
	`wrôe32bôs
(
pPagî
->
sjfd
, 
off£t
, 
pPg
->
pgno
);

4414 if–
rc
==
SQLITE_OK
 ){

4415 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
sjfd
, 
pD©a2
,ÖPagî->
∑geSize
, 
off£t
+4);

4419 if–
rc
==
SQLITE_OK
 ){

4420 
pPagî
->
nSubRec
++;

4421 
	`as£π
–
pPagî
->
nSavïoöt
>0 );

4422 
rc
 = 
	`addToSavïoötBôvecs
(
pPagî
, 
pPg
->
pgno
);

4424  
rc
;

4425 
	}
}

4426 
	$subjou∫ÆPageIfRequúed
(
PgHdr
 *
pPg
){

4427 if–
	`subjRequúesPage
(
pPg
) ){

4428  
	`subjou∫ÆPage
(
pPg
);

4430  
SQLITE_OK
;

4432 
	}
}

4453 
	$∑gîSåess
(*
p
, 
PgHdr
 *
pPg
){

4454 
Pagî
 *
pPagî
 = (Pagî *)
p
;

4455 
rc
 = 
SQLITE_OK
;

4457 
	`as£π
–
pPg
->
pPagî
==pPager );

4458 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

4476 if–
	`NEVER
(
pPagî
->
îrCode
ËË 
SQLITE_OK
;

4477 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_ROLLBACK
 );

4478 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_OFF
 );

4479 
	`ã°ˇ£
–
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
 );

4480 if–
pPagî
->
doNŸSpûl


4481 && ((
pPagî
->
doNŸSpûl
 & (
SPILLFLAG_ROLLBACK
|
SPILLFLAG_OFF
))!=0

4482 || (
pPg
->
Êags
 & 
PGHDR_NEED_SYNC
)!=0)

4484  
SQLITE_OK
;

4487 
pPg
->
pDúty
 = 0;

4488 if–
	`∑gîU£WÆ
(
pPagî
) ){

4490 
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
);

4491 if–
rc
==
SQLITE_OK
 ){

4492 
rc
 = 
	`∑gîWÆFømes
(
pPagî
, 
pPg
, 0, 0);

4497 if–
pPg
->
Êags
&
PGHDR_NEED_SYNC


4498 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


4500 
rc
 = 
	`syncJou∫Æ
(
pPagî
, 1);

4504 if–
rc
==
SQLITE_OK
 ){

4505 
	`as£π
–(
pPg
->
Êags
&
PGHDR_NEED_SYNC
)==0 );

4506 
rc
 = 
	`∑gî_wrôe_∑gñi°
(
pPagî
, 
pPg
);

4511 if–
rc
==
SQLITE_OK
 ){

4512 
	`PAGERTRACE
(("STRESS %dÖagê%d\n", 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
));

4513 
	`sqlôe3PˇcheMakeCÀ™
(
pPg
);

4516  
	`∑gî_îr‹
(
pPagî
, 
rc
);

4517 
	}
}

4522 
	$sqlôe3PagîFlush
(
Pagî
 *
pPagî
){

4523 
rc
 = 
pPagî
->
îrCode
;

4524 if–!
MEMDB
 ){

4525 
PgHdr
 *
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

4526 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

4527  
rc
==
SQLITE_OK
 && 
pLi°
 ){

4528 
PgHdr
 *
pNext
 = 
pLi°
->
pDúty
;

4529 if–
pLi°
->
nRef
==0 ){

4530 
rc
 = 
	`∑gîSåess
((*)
pPagî
, 
pLi°
);

4532 
pLi°
 = 
pNext
;

4536  
rc
;

4537 
	}
}

4569 
sqlôe3PagîO≥n
(

4570 
sqlôe3_vfs
 *
pVfs
,

4571 
Pagî
 **
µPagî
,

4572 c⁄° *
zFûíame
,

4573 
nExåa
,

4574 
Êags
,

4575 
vfsFœgs
,

4576 (*
xReöô
)(
DbPage
*)

4578 
u8
 *
pPå
;

4579 
Pagî
 *
pPagî
 = 0;

4580 
rc
 = 
SQLITE_OK
;

4581 
ãmpFûe
 = 0;

4582 
memDb
 = 0;

4583 
ªadO∆y
 = 0;

4584 
jou∫ÆFûeSize
;

4585 *
zP©h«me
 = 0;

4586 
nP©h«me
 = 0;

4587 
u£Jou∫Æ
 = (
Êags
 & 
PAGER_OMIT_JOURNAL
)==0;

4588 
pˇcheSize
 = 
	`sqlôe3PˇcheSize
();

4589 
u32
 
szPageDÊt
 = 
SQLITE_DEFAULT_PAGE_SIZE
;

4590 c⁄° *
zUri
 = 0;

4591 
nUri
 = 0;

4595 
jou∫ÆFûeSize
 = 
	`ROUND8
(
	`sqlôe3Jou∫ÆSize
(
pVfs
));

4598 *
µPagî
 = 0;

4600 #i‚de‡
SQLITE_OMIT_MEMORYDB


4601 if–
Êags
 & 
PAGER_MEMORY
 ){

4602 
memDb
 = 1;

4603 if–
zFûíame
 && zFilename[0] ){

4604 
zP©h«me
 = 
	`sqlôe3DbSåDup
(0, 
zFûíame
);

4605 if–
zP©h«me
==0 )  
SQLITE_NOMEM_BKPT
;

4606 
nP©h«me
 = 
	`sqlôe3SåÀn30
(
zP©h«me
);

4607 
zFûíame
 = 0;

4616 if–
zFûíame
 && zFilename[0] ){

4617 c⁄° *
z
;

4618 
nP©h«me
 = 
pVfs
->
mxP©h«me
+1;

4619 
zP©h«me
 = 
	`sqlôe3DbMÆlocRaw
(0, 
nP©h«me
*2);

4620 if–
zP©h«me
==0 ){

4621  
SQLITE_NOMEM_BKPT
;

4623 
zP©h«me
[0] = 0;

4624 
rc
 = 
	`sqlôe3OsFuŒP©h«me
(
pVfs
, 
zFûíame
, 
nP©h«me
, 
zP©h«me
);

4625 
nP©h«me
 = 
	`sqlôe3SåÀn30
(
zP©h«me
);

4626 
z
 = 
zUri
 = &
zFûíame
[
	`sqlôe3SåÀn30
(zFilename)+1];

4627  *
z
 ){

4628 
z
 +
	`sqlôe3SåÀn30
(z)+1;

4629 
z
 +
	`sqlôe3SåÀn30
(z)+1;

4631 
nUri
 = ()(&
z
[1] - 
zUri
);

4632 
	`as£π
–
nUri
>=0 );

4633 if–
rc
==
SQLITE_OK
 && 
nP©h«me
+8>
pVfs
->
mxP©h«me
 ){

4640 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

4642 if–
rc
!=
SQLITE_OK
 ){

4643 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4644  
rc
;

4660 
pPå
 = (
u8
 *)
	`sqlôe3MÆlocZîo
(

4661 
	`ROUND8
((*
pPagî
)) +

4662 
	`ROUND8
(
pˇcheSize
) +

4663 
	`ROUND8
(
pVfs
->
szOsFûe
) +

4664 
jou∫ÆFûeSize
 * 2 +

4665 
nP©h«me
 + 1 + 
nUri
 +

4666 
nP©h«me
 + 8 + 2

4667 #i‚de‡
SQLITE_OMIT_WAL


4668 + 
nP©h«me
 + 4 + 2

4671 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
	`SQLITE_INT_TO_PTR
(
jou∫ÆFûeSize
)) );

4672 if–!
pPå
 ){

4673 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4674  
SQLITE_NOMEM_BKPT
;

4676 
pPagî
 = (
Pagî
*)(
pPå
);

4677 
pPagî
->
pPCache
 = (
PCache
*)(
pPå
 +
	`ROUND8
((*pPager)));

4678 
pPagî
->
fd
 = (
sqlôe3_fûe
*)(
pPå
 +
	`ROUND8
(
pˇcheSize
));

4679 
pPagî
->
sjfd
 = (
sqlôe3_fûe
*)(
pPå
 +
	`ROUND8
(
pVfs
->
szOsFûe
));

4680 
pPagî
->
jfd
 = (
sqlôe3_fûe
*)(
pPå
 +
jou∫ÆFûeSize
);

4681 
pPagî
->
zFûíame
 = (*)(
pPå
 +
jou∫ÆFûeSize
);

4682 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pPagî
->
jfd
) );

4685 if–
zP©h«me
 ){

4686 
	`as£π
–
nP©h«me
>0 );

4687 
pPagî
->
zJou∫Æ
 = (*)(
pPå
 +
nP©h«me
 + 1 + 
nUri
);

4688 
	`mem˝y
(
pPagî
->
zFûíame
, 
zP©h«me
, 
nP©h«me
);

4689 if–
nUri
 ) 
	`mem˝y
(&
pPagî
->
zFûíame
[
nP©h«me
+1], 
zUri
,ÇUri);

4690 
	`mem˝y
(
pPagî
->
zJou∫Æ
, 
zP©h«me
, 
nP©h«me
);

4691 
	`mem˝y
(&
pPagî
->
zJou∫Æ
[
nP©h«me
], "-journal\000", 8+2);

4692 
	`sqlôe3FûeSuffix3
(
pPagî
->
zFûíame
,ÖPagî->
zJou∫Æ
);

4693 #i‚de‡
SQLITE_OMIT_WAL


4694 
pPagî
->
zWÆ
 = &pPagî->
zJou∫Æ
[
nP©h«me
+8+1];

4695 
	`mem˝y
(
pPagî
->
zWÆ
, 
zP©h«me
, 
nP©h«me
);

4696 
	`mem˝y
(&
pPagî
->
zWÆ
[
nP©h«me
], "-wal\000", 4+1);

4697 
	`sqlôe3FûeSuffix3
(
pPagî
->
zFûíame
,ÖPagî->
zWÆ
);

4699 
	`sqlôe3DbFªe
(0, 
zP©h«me
);

4701 
pPagî
->
pVfs
 =ÖVfs;

4702 
pPagî
->
vfsFœgs
 = vfsFlags;

4706 if–
zFûíame
 && zFilename[0] ){

4707 
fout
 = 0;

4708 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zFûíame
,ÖPagî->
fd
, 
vfsFœgs
, &
fout
);

4709 
	`as£π
–!
memDb
 );

4710 
ªadO∆y
 = (
fout
&
SQLITE_OPEN_READONLY
);

4720 if–
rc
==
SQLITE_OK
 ){

4721 
iDc
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
fd
);

4722 if–!
ªadO∆y
 ){

4723 
	`£tSe˘‹Size
(
pPagî
);

4724 
	`as£π
(
SQLITE_DEFAULT_PAGE_SIZE
<=
SQLITE_MAX_DEFAULT_PAGE_SIZE
);

4725 if–
szPageDÊt
<
pPagî
->
£˘‹Size
 ){

4726 if–
pPagî
->
£˘‹Size
>
SQLITE_MAX_DEFAULT_PAGE_SIZE
 ){

4727 
szPageDÊt
 = 
SQLITE_MAX_DEFAULT_PAGE_SIZE
;

4729 
szPageDÊt
 = (
u32
)
pPagî
->
£˘‹Size
;

4732 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


4734 
ii
;

4735 
	`as£π
(
SQLITE_IOCAP_ATOMIC512
==(512>>8));

4736 
	`as£π
(
SQLITE_IOCAP_ATOMIC64K
==(65536>>8));

4737 
	`as£π
(
SQLITE_MAX_DEFAULT_PAGE_SIZE
<=65536);

4738 
ii
=
szPageDÊt
; ii<=
SQLITE_MAX_DEFAULT_PAGE_SIZE
; ii=ii*2){

4739 if–
iDc
&(
SQLITE_IOCAP_ATOMIC
|(
ii
>>8)) ){

4740 
szPageDÊt
 = 
ii
;

4746 
pPagî
->
noLock
 = 
	`sqlôe3_uri_boﬁón
(
zFûíame
, "nolock", 0);

4747 if–(
iDc
 & 
SQLITE_IOCAP_IMMUTABLE
)!=0

4748 || 
	`sqlôe3_uri_boﬁón
(
zFûíame
, "immutable", 0) ){

4749 
vfsFœgs
 |
SQLITE_OPEN_READONLY
;

4750 
a˘_like_ãmp_fûe
;

4764 
a˘_like_ãmp_fûe
:

4765 
ãmpFûe
 = 1;

4766 
pPagî
->
eSèã
 = 
PAGER_READER
;

4767 
pPagî
->
eLock
 = 
EXCLUSIVE_LOCK
;

4768 
pPagî
->
noLock
 = 1;

4769 
ªadO∆y
 = (
vfsFœgs
&
SQLITE_OPEN_READONLY
);

4775 if–
rc
==
SQLITE_OK
 ){

4776 
	`as£π
–
pPagî
->
memDb
==0 );

4777 
rc
 = 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
szPageDÊt
, -1);

4778 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

4782 if–
rc
==
SQLITE_OK
 ){

4783 
	`as£π
–
nExåa
<1000 );

4784 
nExåa
 = 
	`ROUND8
(nExtra);

4785 
rc
 = 
	`sqlôe3PˇcheO≥n
(
szPageDÊt
, 
nExåa
, !
memDb
,

4786 !
memDb
?
∑gîSåess
:0, (*)
pPagî
,ÖPagî->
pPCache
);

4791 if–
rc
!=
SQLITE_OK
 ){

4792 
	`sqlôe3OsClo£
(
pPagî
->
fd
);

4793 
	`sqlôe3PageFªe
(
pPagî
->
pTmpS∑˚
);

4794 
	`sqlôe3_‰ì
(
pPagî
);

4795  
rc
;

4798 
	`PAGERTRACE
(("OPEN %d %s\n", 
	`FILEHANDLEID
(
pPagî
->
fd
),ÖPagî->
zFûíame
));

4799 
	`IOTRACE
(("OPEN %∞%s\n", 
pPagî
,ÖPagî->
zFûíame
))

4801 
pPagî
->
u£Jou∫Æ
 = (
u8
)useJournal;

4808 
pPagî
->
mxPgno
 = 
SQLITE_MAX_PAGE_COUNT
;

4811 
pPagî
->
ãmpFûe
 = (
u8
)tempFile;

4812 
	`as£π
–
ãmpFûe
==
PAGER_LOCKINGMODE_NORMAL


4813 || 
ãmpFûe
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

4814 
	`as£π
–
PAGER_LOCKINGMODE_EXCLUSIVE
==1 );

4815 
pPagî
->
ex˛usiveMode
 = (
u8
)
ãmpFûe
;

4816 
pPagî
->
ch™geCou¡D⁄e
 =ÖPagî->
ãmpFûe
;

4817 
pPagî
->
memDb
 = (
u8
)memDb;

4818 
pPagî
->
ªadO∆y
 = (
u8
)readOnly;

4819 
	`as£π
–
u£Jou∫Æ
 || 
pPagî
->
ãmpFûe
 );

4820 
pPagî
->
noSync
 =ÖPagî->
ãmpFûe
;

4821 if–
pPagî
->
noSync
 ){

4822 
	`as£π
–
pPagî
->
fuŒSync
==0 );

4823 
	`as£π
–
pPagî
->
exåaSync
==0 );

4824 
	`as£π
–
pPagî
->
syncFœgs
==0 );

4825 
	`as£π
–
pPagî
->
wÆSyncFœgs
==0 );

4826 
	`as£π
–
pPagî
->
ck±SyncFœgs
==0 );

4828 
pPagî
->
fuŒSync
 = 1;

4829 
pPagî
->
exåaSync
 = 0;

4830 
pPagî
->
syncFœgs
 = 
SQLITE_SYNC_NORMAL
;

4831 
pPagî
->
wÆSyncFœgs
 = 
SQLITE_SYNC_NORMAL
 | 
WAL_SYNC_TRANSACTIONS
;

4832 
pPagî
->
ck±SyncFœgs
 = 
SQLITE_SYNC_NORMAL
;

4837 
pPagî
->
nExåa
 = (
u16
)nExtra;

4838 
pPagî
->
jou∫ÆSizeLimô
 = 
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT
;

4839 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë|| 
ãmpFûe
 );

4840 
	`£tSe˘‹Size
(
pPagî
);

4841 if–!
u£Jou∫Æ
 ){

4842 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_OFF
;

4843 }if–
memDb
 ){

4844 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_MEMORY
;

4848 
pPagî
->
xReöôî
 = 
xReöô
;

4852 *
µPagî
 = 
pPagî
;

4853  
SQLITE_OK
;

4854 
	}
}

4862 
	$d©aba£IsUnmoved
(
Pagî
 *
pPagî
){

4863 
bHasMoved
 = 0;

4864 
rc
;

4866 if–
pPagî
->
ãmpFûe
 )  
SQLITE_OK
;

4867 if–
pPagî
->
dbSize
==0 )  
SQLITE_OK
;

4868 
	`as£π
–
pPagî
->
zFûíame
 &&ÖPager->zFilename[0] );

4869 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_HAS_MOVED
, &
bHasMoved
);

4870 if–
rc
==
SQLITE_NOTFOUND
 ){

4874 
rc
 = 
SQLITE_OK
;

4875 }if–
rc
==
SQLITE_OK
 && 
bHasMoved
 ){

4876 
rc
 = 
SQLITE_READONLY_DBMOVED
;

4878  
rc
;

4879 
	}
}

4913 
	$hasHŸJou∫Æ
(
Pagî
 *
pPagî
, *
pExi°s
){

4914 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

4915 
rc
 = 
SQLITE_OK
;

4916 
exi°s
 = 1;

4917 
j∫lO≥n
 = !!
	`isO≥n
(
pPagî
->
jfd
);

4919 
	`as£π
–
pPagî
->
u£Jou∫Æ
 );

4920 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
) );

4921 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

4923 
	`as£π
–
j∫lO≥n
==0 || ( 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pPagî
->
jfd
) &

4924 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN


4927 *
pExi°s
 = 0;

4928 if–!
j∫lO≥n
 ){

4929 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
pPagî
->
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
exi°s
);

4931 if–
rc
==
SQLITE_OK
 && 
exi°s
 ){

4932 
locked
 = 0;

4942 
rc
 = 
	`sqlôe3OsCheckRe£rvedLock
(
pPagî
->
fd
, &
locked
);

4943 if–
rc
==
SQLITE_OK
 && !
locked
 ){

4944 
Pgno
 
nPage
;

4946 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

4947 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

4948 if–
rc
==
SQLITE_OK
 ){

4957 if–
nPage
==0 && !
j∫lO≥n
 ){

4958 
	`sqlôe3BegöBíignMÆloc
();

4959 if–
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
)==
SQLITE_OK
 ){

4960 
	`sqlôe3OsDñëe
(
pVfs
, 
pPagî
->
zJou∫Æ
, 0);

4961 if–!
pPagî
->
ex˛usiveMode
 ) 
	`∑gîU∆ockDb
’Pagî, 
SHARED_LOCK
);

4963 
	`sqlôe3EndBíignMÆloc
();

4971 if–!
j∫lO≥n
 ){

4972 
f
 = 
SQLITE_OPEN_READONLY
|
SQLITE_OPEN_MAIN_JOURNAL
;

4973 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
f
, &f);

4975 if–
rc
==
SQLITE_OK
 ){

4976 
u8
 
fú°
 = 0;

4977 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
jfd
, (*)&
fú°
, 1, 0);

4978 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

4979 
rc
 = 
SQLITE_OK
;

4981 if–!
j∫lO≥n
 ){

4982 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

4984 *
pExi°s
 = (
fú°
!=0);

4985 }if–
rc
==
SQLITE_CANTOPEN
 ){

4995 *
pExi°s
 = 1;

4996 
rc
 = 
SQLITE_OK
;

5003  
rc
;

5004 
	}
}

5033 
	$sqlôe3PagîSh¨edLock
(
Pagî
 *
pPagî
){

5034 
rc
 = 
SQLITE_OK
;

5040 
	`as£π
–
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
)==0 );

5041 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5042 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 ||ÖPagî->eSèã==
PAGER_READER
 );

5043 
	`as£π
–
pPagî
->
îrCode
==
SQLITE_OK
 );

5045 if–!
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
eSèã
==
PAGER_OPEN
 ){

5046 
bHŸJou∫Æ
 = 1;

5048 
	`as£π
–!
MEMDB
 );

5049 
	`as£π
–
pPagî
->
ãmpFûe
==0 ||ÖPagî->
eLock
==
EXCLUSIVE_LOCK
 );

5051 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
SHARED_LOCK
);

5052 if–
rc
!=
SQLITE_OK
 ){

5053 
	`as£π
–
pPagî
->
eLock
==
NO_LOCK
 ||ÖPagî->eLock==
UNKNOWN_LOCK
 );

5054 
Áûed
;

5060 if–
pPagî
->
eLock
<=
SHARED_LOCK
 ){

5061 
rc
 = 
	`hasHŸJou∫Æ
(
pPagî
, &
bHŸJou∫Æ
);

5063 if–
rc
!=
SQLITE_OK
 ){

5064 
Áûed
;

5066 if–
bHŸJou∫Æ
 ){

5067 if–
pPagî
->
ªadO∆y
 ){

5068 
rc
 = 
SQLITE_READONLY_ROLLBACK
;

5069 
Áûed
;

5087 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

5088 if–
rc
!=
SQLITE_OK
 ){

5089 
Áûed
;

5105 if–!
	`isO≥n
(
pPagî
->
jfd
) ){

5106 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

5107 
bExi°s
;

5108 
rc
 = 
	`sqlôe3OsAc˚ss
(

5109 
pVfs
, 
pPagî
->
zJou∫Æ
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

5110 if–
rc
==
SQLITE_OK
 && 
bExi°s
 ){

5111 
fout
 = 0;

5112 
f
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MAIN_JOURNAL
;

5113 
	`as£π
–!
pPagî
->
ãmpFûe
 );

5114 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
f
, &
fout
);

5115 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
jfd
) );

5116 if–
rc
==
SQLITE_OK
 && 
fout
&
SQLITE_OPEN_READONLY
 ){

5117 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

5118 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

5131 if–
	`isO≥n
(
pPagî
->
jfd
) ){

5132 
	`as£π
–
rc
==
SQLITE_OK
 );

5133 
rc
 = 
	`∑gîSyncHŸJou∫Æ
(
pPagî
);

5134 if–
rc
==
SQLITE_OK
 ){

5135 
rc
 = 
	`∑gî_∂ayback
(
pPagî
, !pPagî->
ãmpFûe
);

5136 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

5138 }if–!
pPagî
->
ex˛usiveMode
 ){

5139 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

5142 if–
rc
!=
SQLITE_OK
 ){

5159 
	`∑gî_îr‹
(
pPagî
, 
rc
);

5160 
Áûed
;

5163 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

5164 
	`as£π
–(
pPagî
->
eLock
==
SHARED_LOCK
)

5165 || (
pPagî
->
ex˛usiveMode
 &&ÖPagî->
eLock
>
SHARED_LOCK
)

5169 if–!
pPagî
->
ãmpFûe
 &&ÖPagî->
hasHñdSh¨edLock
 ){

5186 
Pgno
 
nPage
 = 0;

5187 
dbFûeVîs
[(
pPagî
->dbFileVers)];

5189 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &
nPage
);

5190 if–
rc
 ) 
Áûed
;

5192 if–
nPage
>0 ){

5193 
	`IOTRACE
(("CKVERS %∞%d\n", 
pPagî
, (
dbFûeVîs
)));

5194 
rc
 = 
	`sqlôe3OsRód
(
pPagî
->
fd
, &
dbFûeVîs
, (dbFileVers), 24);

5195 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_IOERR_SHORT_READ
 ){

5196 
Áûed
;

5199 
	`mem£t
(
dbFûeVîs
, 0, (dbFileVers));

5202 if–
	`memcmp
(
pPagî
->
dbFûeVîs
, dbFileVers, (dbFileVers))!=0 ){

5203 
	`∑gî_ª£t
(
pPagî
);

5211 if–
	`USEFETCH
(
pPagî
) ){

5212 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, 0, 0);

5220 
rc
 = 
	`∑gîO≥nWÆIfPª£¡
(
pPagî
);

5221 #i‚de‡
SQLITE_OMIT_WAL


5222 
	`as£π
–
pPagî
->
pWÆ
==0 || 
rc
==
SQLITE_OK
 );

5226 if–
	`∑gîU£WÆ
(
pPagî
) ){

5227 
	`as£π
–
rc
==
SQLITE_OK
 );

5228 
rc
 = 
	`∑gîBegöRódTønß˘i⁄
(
pPagî
);

5231 if–
pPagî
->
ãmpFûe
==0 &&ÖPagî->
eSèã
==
PAGER_OPEN
 && 
rc
==
SQLITE_OK
 ){

5232 
rc
 = 
	`∑gîPagecou¡
(
pPagî
, &pPagî->
dbSize
);

5235 
Áûed
:

5236 if–
rc
!=
SQLITE_OK
 ){

5237 
	`as£π
–!
MEMDB
 );

5238 
	`∑gî_u∆ock
(
pPagî
);

5239 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 );

5241 
pPagî
->
eSèã
 = 
PAGER_READER
;

5242 
pPagî
->
hasHñdSh¨edLock
 = 1;

5244  
rc
;

5245 
	}
}

5255 
	$∑gîU∆ockIfUnu£d
(
Pagî
 *
pPagî
){

5256 if–
pPagî
->
nMm≠Out
==0 && (
	`sqlôe3PˇcheRefCou¡
’Pagî->
pPCache
)==0) ){

5257 
	`∑gîU∆ockAndRﬁlback
(
pPagî
);

5259 
	}
}

5311 
	$sqlôe3PagîGë
(

5312 
Pagî
 *
pPagî
,

5313 
Pgno
 
pgno
,

5314 
DbPage
 **
µPage
,

5315 
Êags


5317 
rc
 = 
SQLITE_OK
;

5318 
PgHdr
 *
pPg
 = 0;

5319 
u32
 
iFøme
 = 0;

5320 c⁄° 
noC⁄ã¡
 = (
Êags
 & 
PAGER_GET_NOCONTENT
);

5326 c⁄° 
bMm≠Ok
 = (
pgno
>1 && 
	`USEFETCH
(
pPagî
)

5327 && (
pPagî
->
eSèã
==
PAGER_READER
 || (
Êags
 & 
PAGER_GET_READONLY
))

5328 #ifde‡
SQLITE_HAS_CODEC


5329 && 
pPagî
->
xCodec
==0

5337 if–
pgno
<=1 &&Ögno==0 ){

5338  
SQLITE_CORRUPT_BKPT
;

5340 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

5341 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5342 
	`as£π
–
noC⁄ã¡
==0 || 
bMm≠Ok
==0 );

5344 
	`as£π
–
pPagî
->
hasHñdSh¨edLock
==1 );

5348 if–
pPagî
->
îrCode
!=
SQLITE_OK
 ){

5349 
rc
 = 
pPagî
->
îrCode
;

5351 if–
bMm≠Ok
 && 
	`∑gîU£WÆ
(
pPagî
) ){

5352 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pgno
, &
iFøme
);

5353 if–
rc
!=
SQLITE_OK
 ) 
∑gî_acquúe_îr
;

5356 if–
bMm≠Ok
 && 
iFøme
==0 ){

5357 *
pD©a
 = 0;

5359 
rc
 = 
	`sqlôe3OsFëch
(
pPagî
->
fd
,

5360 (
i64
)(
pgno
-1Ë* 
pPagî
->
∑geSize
,ÖPagî->∑geSize, &
pD©a


5363 if–
rc
==
SQLITE_OK
 && 
pD©a
 ){

5364 if–
pPagî
->
eSèã
>
PAGER_READER
 ||ÖPagî->
ãmpFûe
 ){

5365 
pPg
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

5367 if–
pPg
==0 ){

5368 
rc
 = 
	`∑gîAcquúeM≠Page
(
pPagî
, 
pgno
, 
pD©a
, &
pPg
);

5370 
	`sqlôe3OsUn„tch
(
pPagî
->
fd
, (
i64
)(
pgno
-1)*pPagî->
∑geSize
, 
pD©a
);

5372 if–
pPg
 ){

5373 
	`as£π
–
rc
==
SQLITE_OK
 );

5374 *
µPage
 = 
pPg
;

5375  
SQLITE_OK
;

5378 if–
rc
!=
SQLITE_OK
 ){

5379 
∑gî_acquúe_îr
;

5384 
sqlôe3_pˇche_∑ge
 *
pBa£
;

5385 
pBa£
 = 
	`sqlôe3PˇcheFëch
(
pPagî
->
pPCache
, 
pgno
, 3);

5386 if–
pBa£
==0 ){

5387 
rc
 = 
	`sqlôe3PˇcheFëchSåess
(
pPagî
->
pPCache
, 
pgno
, &
pBa£
);

5388 if–
rc
!=
SQLITE_OK
 ) 
∑gî_acquúe_îr
;

5389 if–
pBa£
==0 ){

5390 
pPg
 = *
µPage
 = 0;

5391 
rc
 = 
SQLITE_NOMEM_BKPT
;

5392 
∑gî_acquúe_îr
;

5395 
pPg
 = *
µPage
 = 
	`sqlôe3PˇcheFëchFöish
(
pPagî
->
pPCache
, 
pgno
, 
pBa£
);

5396 
	`as£π
–
pPg
!=0 );

5400 if–
rc
!=
SQLITE_OK
 ){

5404 
pPg
 = 0;

5405 
∑gî_acquúe_îr
;

5407 
	`as£π
–
pPg
==(*
µPage
) );

5408 
	`as£π
–
pPg
->
pgno
==pgno );

5409 
	`as£π
–
pPg
->
pPagî
==pPager ||ÖPg->pPager==0 );

5411 if–
pPg
->
pPagî
 && !
noC⁄ã¡
 ){

5414 
	`as£π
–
pgno
<=
PAGER_MAX_PGNO
 &&Ögno!=
	`PAGER_MJ_PGNO
(
pPagî
) );

5415 
pPagî
->
aSèt
[
PAGER_STAT_HIT
]++;

5416  
SQLITE_OK
;

5422 
pPg
->
pPagî
 =ÖPager;

5426 if–
pgno
>
PAGER_MAX_PGNO
 ||Ögno==
	`PAGER_MJ_PGNO
(
pPagî
) ){

5427 
rc
 = 
SQLITE_CORRUPT_BKPT
;

5428 
∑gî_acquúe_îr
;

5431 
	`as£π
–!
	`isO≥n
(
pPagî
->
fd
Ë|| !
MEMDB
 );

5432 if–!
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
dbSize
<
pgno
 || 
noC⁄ã¡
 ){

5433 if–
pgno
>
pPagî
->
mxPgno
 ){

5434 
rc
 = 
SQLITE_FULL
;

5435 
∑gî_acquúe_îr
;

5437 if–
noC⁄ã¡
 ){

5444 
	`sqlôe3BegöBíignMÆloc
();

5445 if–
pgno
<=
pPagî
->
dbOrigSize
 ){

5446 
	`TESTONLY
–
rc
 = ) 
	`sqlôe3BôvecSë
(
pPagî
->
pInJou∫Æ
, 
pgno
);

5447 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5449 
	`TESTONLY
–
rc
 = ) 
	`addToSavïoötBôvecs
(
pPagî
, 
pgno
);

5450 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5451 
	`sqlôe3EndBíignMÆloc
();

5453 
	`mem£t
(
pPg
->
pD©a
, 0, 
pPagî
->
∑geSize
);

5454 
	`IOTRACE
(("ZERO %∞%d\n", 
pPagî
, 
pgno
));

5456 if–
	`∑gîU£WÆ
(
pPagî
Ë&& 
bMm≠Ok
==0 ){

5457 
rc
 = 
	`sqlôe3WÆFödFøme
(
pPagî
->
pWÆ
, 
pgno
, &
iFøme
);

5458 if–
rc
!=
SQLITE_OK
 ) 
∑gî_acquúe_îr
;

5460 
	`as£π
–
pPg
->
pPagî
==pPager );

5461 
pPagî
->
aSèt
[
PAGER_STAT_MISS
]++;

5462 
rc
 = 
	`ªadDbPage
(
pPg
, 
iFøme
);

5463 if–
rc
!=
SQLITE_OK
 ){

5464 
∑gî_acquúe_îr
;

5467 
	`∑gî_£t_∑gehash
(
pPg
);

5470  
SQLITE_OK
;

5472 
∑gî_acquúe_îr
:

5473 
	`as£π
–
rc
!=
SQLITE_OK
 );

5474 if–
pPg
 ){

5475 
	`sqlôe3PˇcheDr›
(
pPg
);

5477 
	`∑gîU∆ockIfUnu£d
(
pPagî
);

5479 *
µPage
 = 0;

5480  
rc
;

5481 
	}
}

5494 
DbPage
 *
	$sqlôe3PagîLookup
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
){

5495 
sqlôe3_pˇche_∑ge
 *
pPage
;

5496 
	`as£π
–
pPagî
!=0 );

5497 
	`as£π
–
pgno
!=0 );

5498 
	`as£π
–
pPagî
->
pPCache
!=0 );

5499 
pPage
 = 
	`sqlôe3PˇcheFëch
(
pPagî
->
pPCache
, 
pgno
, 0);

5500 
	`as£π
–
pPage
==0 || 
pPagî
->
hasHñdSh¨edLock
 );

5501 if–
pPage
==0 )  0;

5502  
	`sqlôe3PˇcheFëchFöish
(
pPagî
->
pPCache
, 
pgno
, 
pPage
);

5503 
	}
}

5513 
	$sqlôe3PagîUƒefNŸNuŒ
(
DbPage
 *
pPg
){

5514 
Pagî
 *
pPagî
;

5515 
	`as£π
–
pPg
!=0 );

5516 
pPagî
 = 
pPg
->pPager;

5517 if–
pPg
->
Êags
 & 
PGHDR_MMAP
 ){

5518 
	`∑gîRñó£M≠Page
(
pPg
);

5520 
	`sqlôe3PˇcheRñó£
(
pPg
);

5522 
	`∑gîU∆ockIfUnu£d
(
pPagî
);

5523 
	}
}

5524 
	$sqlôe3PagîUƒef
(
DbPage
 *
pPg
){

5525 if–
pPg
 ) 
	`sqlôe3PagîUƒefNŸNuŒ
(pPg);

5526 
	}
}

5550 
	$∑gî_›í_jou∫Æ
(
Pagî
 *
pPagî
){

5551 
rc
 = 
SQLITE_OK
;

5552 
sqlôe3_vfs
 * c⁄° 
pVfs
 = 
pPagî
->pVfs;

5554 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5555 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5556 
	`as£π
–
pPagî
->
pInJou∫Æ
==0 );

5561 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

5563 if–!
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
jou∫ÆMode
!=
PAGER_JOURNALMODE_OFF
 ){

5564 
pPagî
->
pInJou∫Æ
 = 
	`sqlôe3BôvecCª©e
’Pagî->
dbSize
);

5565 if–
pPagî
->
pInJou∫Æ
==0 ){

5566  
SQLITE_NOMEM_BKPT
;

5570 if–!
	`isO≥n
(
pPagî
->
jfd
) ){

5571 if–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_MEMORY
 ){

5572 
	`sqlôe3MemJou∫ÆO≥n
(
pPagî
->
jfd
);

5574 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
;

5575 
nSpûl
;

5577 if–
pPagî
->
ãmpFûe
 ){

5578 
Êags
 |(
SQLITE_OPEN_DELETEONCLOSE
|
SQLITE_OPEN_TEMP_JOURNAL
);

5579 
nSpûl
 = 
sqlôe3C⁄fig
.
nStmtSpûl
;

5581 
Êags
 |
SQLITE_OPEN_MAIN_JOURNAL
;

5582 
nSpûl
 = 
	`j∫lBuf„rSize
(
pPagî
);

5587 
rc
 = 
	`d©aba£IsUnmoved
(
pPagî
);

5588 if–
rc
==
SQLITE_OK
 ){

5589 
rc
 = 
	`sqlôe3Jou∫ÆO≥n
 (

5590 
pVfs
, 
pPagî
->
zJou∫Æ
,ÖPagî->
jfd
, 
Êags
, 
nSpûl


5594 
	`as£π
–
rc
!=
SQLITE_OK
 || 
	`isO≥n
(
pPagî
->
jfd
) );

5601 if–
rc
==
SQLITE_OK
 ){

5603 
pPagî
->
nRec
 = 0;

5604 
pPagî
->
jou∫ÆOff
 = 0;

5605 
pPagî
->
£tMa°î
 = 0;

5606 
pPagî
->
jou∫ÆHdr
 = 0;

5607 
rc
 = 
	`wrôeJou∫ÆHdr
(
pPagî
);

5611 if–
rc
!=
SQLITE_OK
 ){

5612 
	`sqlôe3BôvecDe°roy
(
pPagî
->
pInJou∫Æ
);

5613 
pPagî
->
pInJou∫Æ
 = 0;

5615 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5616 
pPagî
->
eSèã
 = 
PAGER_WRITER_CACHEMOD
;

5619  
rc
;

5620 
	}
}

5639 
	$sqlôe3PagîBegö
(
Pagî
 *
pPagî
, 
exFœg
, 
subjInMem‹y
){

5640 
rc
 = 
SQLITE_OK
;

5642 if–
pPagî
->
îrCode
 ) ÖPager->errCode;

5643 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 &&ÖPagî->eSèã<
PAGER_ERROR
 );

5644 
pPagî
->
subjInMem‹y
 = (
u8
)subjInMemory;

5646 if–
	`ALWAYS
(
pPagî
->
eSèã
==
PAGER_READER
) ){

5647 
	`as£π
–
pPagî
->
pInJou∫Æ
==0 );

5649 if–
	`∑gîU£WÆ
(
pPagî
) ){

5653 if–
pPagî
->
ex˛usiveMode
 && 
	`sqlôe3WÆEx˛usiveMode
’Pagî->
pWÆ
, -1) ){

5654 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

5655 if–
rc
!=
SQLITE_OK
 ){

5656  
rc
;

5658 ()
	`sqlôe3WÆEx˛usiveMode
(
pPagî
->
pWÆ
, 1);

5666 
rc
 = 
	`sqlôe3WÆBegöWrôeTønß˘i⁄
(
pPagî
->
pWÆ
);

5673 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
);

5674 if–
rc
==
SQLITE_OK
 && 
exFœg
 ){

5675 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
EXCLUSIVE_LOCK
);

5679 if–
rc
==
SQLITE_OK
 ){

5689 
pPagî
->
eSèã
 = 
PAGER_WRITER_LOCKED
;

5690 
pPagî
->
dbHötSize
 =ÖPagî->
dbSize
;

5691 
pPagî
->
dbFûeSize
 =ÖPagî->
dbSize
;

5692 
pPagî
->
dbOrigSize
 =ÖPagî->
dbSize
;

5693 
pPagî
->
jou∫ÆOff
 = 0;

5696 
	`as£π
–
rc
==
SQLITE_OK
 || 
pPagî
->
eSèã
==
PAGER_READER
 );

5697 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 );

5698 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5701 
	`PAGERTRACE
(("TRANSACTION %d\n", 
	`PAGERID
(
pPagî
)));

5702  
rc
;

5703 
	}
}

5708 
SQLITE_NOINLINE
 
	$∑gîAddPageToRﬁlbackJou∫Æ
(
PgHdr
 *
pPg
){

5709 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5710 
rc
;

5711 
u32
 
cksum
;

5712 *
pD©a2
;

5713 
i64
 
iOff
 = 
pPagî
->
jou∫ÆOff
;

5718 
	`as£π
–
pPg
->
pgno
!=
	`PAGER_MJ_PGNO
(
pPagî
) );

5720 
	`as£π
–
pPagî
->
jou∫ÆHdr
<ıPagî->
jou∫ÆOff
 );

5721 
	`CODEC2
(
pPagî
, 
pPg
->
pD©a
,ÖPg->
pgno
, 7,  
SQLITE_NOMEM_BKPT
, 
pD©a2
);

5722 
cksum
 = 
	`∑gî_cksum
(
pPagî
, (
u8
*)
pD©a2
);

5731 
pPg
->
Êags
 |
PGHDR_NEED_SYNC
;

5733 
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iOff
, 
pPg
->
pgno
);

5734 if–
rc
!=
SQLITE_OK
 ) Ñc;

5735 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
jfd
, 
pD©a2
,ÖPagî->
∑geSize
, 
iOff
+4);

5736 if–
rc
!=
SQLITE_OK
 ) Ñc;

5737 
rc
 = 
	`wrôe32bôs
(
pPagî
->
jfd
, 
iOff
+pPagî->
∑geSize
+4, 
cksum
);

5738 if–
rc
!=
SQLITE_OK
 ) Ñc;

5740 
	`IOTRACE
(("JOUT %∞%d %Œd %d\n", 
pPagî
, 
pPg
->
pgno
,

5741 
pPagî
->
jou∫ÆOff
,ÖPagî->
∑geSize
));

5742 
	`PAGER_INCR
(
sqlôe3_∑gî_wrôej_cou¡
);

5743 
	`PAGERTRACE
(("JOURNAL %dÖage %dÇeedSync=%d hash(%08x)\n",

5744 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
,

5745 ((
pPg
->
Êags
&
PGHDR_NEED_SYNC
)?1:0), 
	`∑gî_∑gehash
(pPg)));

5747 
pPagî
->
jou∫ÆOff
 +8 +ÖPagî->
∑geSize
;

5748 
pPagî
->
nRec
++;

5749 
	`as£π
–
pPagî
->
pInJou∫Æ
!=0 );

5750 
rc
 = 
	`sqlôe3BôvecSë
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
);

5751 
	`ã°ˇ£
–
rc
==
SQLITE_NOMEM
 );

5752 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

5753 
rc
 |
	`addToSavïoötBôvecs
(
pPagî
, 
pPg
->
pgno
);

5754 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
 );

5755  
rc
;

5756 
	}
}

5765 
	$∑gî_wrôe
(
PgHdr
 *
pPg
){

5766 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5767 
rc
 = 
SQLITE_OK
;

5773 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


5774 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


5775 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


5777 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5778 
	`as£π
–
pPagî
->
îrCode
==0 );

5779 
	`as£π
–
pPagî
->
ªadO∆y
==0 );

5780 
	`CHECK_PAGE
(
pPg
);

5791 if–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED
 ){

5792 
rc
 = 
	`∑gî_›í_jou∫Æ
(
pPagî
);

5793 if–
rc
!=
SQLITE_OK
 ) Ñc;

5795 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 );

5796 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5799 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

5805 
	`as£π
–(
pPagî
->
pInJou∫Æ
!=0Ë=
	`isO≥n
’Pagî->
jfd
) );

5806 if–
pPagî
->
pInJou∫Æ
!=0

5807 && 
	`sqlôe3BôvecTe°NŸNuŒ
(
pPagî
->
pInJou∫Æ
, 
pPg
->
pgno
)==0

5809 
	`as£π
–
	`∑gîU£WÆ
(
pPagî
)==0 );

5810 if–
pPg
->
pgno
<=
pPagî
->
dbOrigSize
 ){

5811 
rc
 = 
	`∑gîAddPageToRﬁlbackJou∫Æ
(
pPg
);

5812 if–
rc
!=
SQLITE_OK
 ){

5813  
rc
;

5816 if–
pPagî
->
eSèã
!=
PAGER_WRITER_DBMOD
 ){

5817 
pPg
->
Êags
 |
PGHDR_NEED_SYNC
;

5819 
	`PAGERTRACE
(("APPEND %dÖage %dÇeedSync=%d\n",

5820 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
,

5821 ((
pPg
->
Êags
&
PGHDR_NEED_SYNC
)?1:0)));

5830 
pPg
->
Êags
 |
PGHDR_WRITEABLE
;

5835 if–
pPagî
->
nSavïoöt
>0 ){

5836 
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
);

5840 if–
pPagî
->
dbSize
<
pPg
->
pgno
 ){

5841 
pPagî
->
dbSize
 = 
pPg
->
pgno
;

5843  
rc
;

5844 
	}
}

5857 
SQLITE_NOINLINE
 
	$∑gîWrôeL¨geSe˘‹
(
PgHdr
 *
pPg
){

5858 
rc
 = 
SQLITE_OK
;

5859 
Pgno
 
nPageCou¡
;

5860 
Pgno
 
pg1
;

5861 
nPage
 = 0;

5862 
ii
;

5863 
√edSync
 = 0;

5864 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5865 
Pgno
 
nPagePîSe˘‹
 = (
pPagî
->
£˘‹Size
/pPagî->
∑geSize
);

5871 
	`as£π
–!
MEMDB
 );

5872 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
)==0 );

5873 
pPagî
->
doNŸSpûl
 |
SPILLFLAG_NOSYNC
;

5879 
pg1
 = ((
pPg
->
pgno
-1Ë& ~(
nPagePîSe˘‹
-1)) + 1;

5881 
nPageCou¡
 = 
pPagî
->
dbSize
;

5882 if–
pPg
->
pgno
>
nPageCou¡
 ){

5883 
nPage
 = (
pPg
->
pgno
 - 
pg1
)+1;

5884 }if–(
pg1
+
nPagePîSe˘‹
-1)>
nPageCou¡
 ){

5885 
nPage
 = 
nPageCou¡
+1-
pg1
;

5887 
nPage
 = 
nPagePîSe˘‹
;

5889 
	`as£π
(
nPage
>0);

5890 
	`as£π
(
pg1
<=
pPg
->
pgno
);

5891 
	`as£π
((
pg1
+
nPage
)>
pPg
->
pgno
);

5893 
ii
=0; ii<
nPage
 && 
rc
==
SQLITE_OK
; ii++){

5894 
Pgno
 
pg
 = 
pg1
+
ii
;

5895 
PgHdr
 *
pPage
;

5896 if–
pg
==
pPg
->
pgno
 || !
	`sqlôe3BôvecTe°
(
pPagî
->
pInJou∫Æ
,Ög) ){

5897 if–
pg
!=
	`PAGER_MJ_PGNO
(
pPagî
) ){

5898 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pg
, &
pPage
, 0);

5899 if–
rc
==
SQLITE_OK
 ){

5900 
rc
 = 
	`∑gî_wrôe
(
pPage
);

5901 if–
pPage
->
Êags
&
PGHDR_NEED_SYNC
 ){

5902 
√edSync
 = 1;

5904 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

5907 }if–(
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pg
))!=0 ){

5908 if–
pPage
->
Êags
&
PGHDR_NEED_SYNC
 ){

5909 
√edSync
 = 1;

5911 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

5921 if–
rc
==
SQLITE_OK
 && 
√edSync
 ){

5922 
	`as£π
–!
MEMDB
 );

5923 
ii
=0; ii<
nPage
; ii++){

5924 
PgHdr
 *
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pg1
+
ii
);

5925 if–
pPage
 ){

5926 
pPage
->
Êags
 |
PGHDR_NEED_SYNC
;

5927 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPage
);

5932 
	`as£π
–(
pPagî
->
doNŸSpûl
 & 
SPILLFLAG_NOSYNC
)!=0 );

5933 
pPagî
->
doNŸSpûl
 &~
SPILLFLAG_NOSYNC
;

5934  
rc
;

5935 
	}
}

5951 
	$sqlôe3PagîWrôe
(
PgHdr
 *
pPg
){

5952 
Pagî
 *
pPagî
 = 
pPg
->pPager;

5953 
	`as£π
–(
pPg
->
Êags
 & 
PGHDR_MMAP
)==0 );

5954 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

5955 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

5956 if–
pPagî
->
îrCode
 ){

5957  
pPagî
->
îrCode
;

5958 }if–(
pPg
->
Êags
 & 
PGHDR_WRITEABLE
)!=0 && 
pPagî
->
dbSize
>ıPg->
pgno
 ){

5959 if–
pPagî
->
nSavïoöt
 )  
	`subjou∫ÆPageIfRequúed
(
pPg
);

5960  
SQLITE_OK
;

5961 }if–
pPagî
->
£˘‹Size
 > (
u32
ÌPagî->
∑geSize
 ){

5962 
	`as£π
–
pPagî
->
ãmpFûe
==0 );

5963  
	`∑gîWrôeL¨geSe˘‹
(
pPg
);

5965  
	`∑gî_wrôe
(
pPg
);

5967 
	}
}

5974 #i‚de‡
NDEBUG


5975 
	$sqlôe3PagîIswrôóbÀ
(
DbPage
 *
pPg
){

5976  
pPg
->
Êags
 & 
PGHDR_WRITEABLE
;

5977 
	}
}

6000 
	$sqlôe3PagîD⁄tWrôe
(
PgHdr
 *
pPg
){

6001 
Pagî
 *
pPagî
 = 
pPg
->pPager;

6002 if–!
pPagî
->
ãmpFûe
 && (
pPg
->
Êags
&
PGHDR_DIRTY
Ë&&ÖPagî->
nSavïoöt
==0 ){

6003 
	`PAGERTRACE
(("DONT_WRITEÖagê%d o‡%d\n", 
pPg
->
pgno
, 
	`PAGERID
(
pPagî
)));

6004 
	`IOTRACE
(("CLEAN %∞%d\n", 
pPagî
, 
pPg
->
pgno
))

6005 
pPg
->
Êags
 |
PGHDR_DONT_WRITE
;

6006 
pPg
->
Êags
 &~
PGHDR_WRITEABLE
;

6007 
	`ã°ˇ£
–
pPg
->
Êags
 & 
PGHDR_NEED_SYNC
 );

6008 
	`∑gî_£t_∑gehash
(
pPg
);

6010 
	}
}

6034 
	$∑gî_ö¸_ch™gecou¡î
(
Pagî
 *
pPagî
, 
isDúe˘Mode
){

6035 
rc
 = 
SQLITE_OK
;

6037 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6038 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6040 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6052 #i‚de‡
SQLITE_ENABLE_ATOMIC_WRITE


6053 
	#DIRECT_MODE
 0

	)

6054 
	`as£π
–
isDúe˘Mode
==0 );

6055 
	`UNUSED_PARAMETER
(
isDúe˘Mode
);

6057 
	#DIRECT_MODE
 
isDúe˘Mode


	)

6060 if–!
pPagî
->
ch™geCou¡D⁄e
 && 
	`ALWAYS
’Pagî->
dbSize
>0) ){

6061 
PgHdr
 *
pPgHdr
;

6063 
	`as£π
–!
pPagî
->
ãmpFûe
 && 
	`isO≥n
’Pagî->
fd
) );

6066 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 1, &
pPgHdr
, 0);

6067 
	`as£π
–
pPgHdr
==0 || 
rc
==
SQLITE_OK
 );

6074 if–!
DIRECT_MODE
 && 
	`ALWAYS
(
rc
==
SQLITE_OK
) ){

6075 
rc
 = 
	`sqlôe3PagîWrôe
(
pPgHdr
);

6078 if–
rc
==
SQLITE_OK
 ){

6080 
	`∑gî_wrôe_ch™gecou¡î
(
pPgHdr
);

6083 if–
DIRECT_MODE
 ){

6084 c⁄° *
zBuf
;

6085 
	`as£π
–
pPagî
->
dbFûeSize
>0 );

6086 
	`CODEC2
(
pPagî
, 
pPgHdr
->
pD©a
, 1, 6, 
rc
=
SQLITE_NOMEM_BKPT
, 
zBuf
);

6087 if–
rc
==
SQLITE_OK
 ){

6088 
rc
 = 
	`sqlôe3OsWrôe
(
pPagî
->
fd
, 
zBuf
,ÖPagî->
∑geSize
, 0);

6089 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
]++;

6091 if–
rc
==
SQLITE_OK
 ){

6095 c⁄° *
pC›y
 = (c⁄° *)&((c⁄° *)
zBuf
)[24];

6096 
	`mem˝y
(&
pPagî
->
dbFûeVîs
, 
pC›y
, (pPager->dbFileVers));

6097 
pPagî
->
ch™geCou¡D⁄e
 = 1;

6100 
pPagî
->
ch™geCou¡D⁄e
 = 1;

6105 
	`sqlôe3PagîUƒef
(
pPgHdr
);

6107  
rc
;

6108 
	}
}

6117 
	$sqlôe3PagîSync
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
){

6118 
rc
 = 
SQLITE_OK
;

6120 if–
	`isO≥n
(
pPagî
->
fd
) ){

6121 *
pArg
 = (*)
zMa°î
;

6122 
rc
 = 
	`sqlôe3OsFûeC⁄åﬁ
(
pPagî
->
fd
, 
SQLITE_FCNTL_SYNC
, 
pArg
);

6123 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

6125 if–
rc
==
SQLITE_OK
 && !
pPagî
->
noSync
 ){

6126 
	`as£π
–!
MEMDB
 );

6127 
rc
 = 
	`sqlôe3OsSync
(
pPagî
->
fd
,ÖPagî->
syncFœgs
);

6129  
rc
;

6130 
	}
}

6143 
	$sqlôe3PagîEx˛usiveLock
(
Pagî
 *
pPagî
){

6144 
rc
 = 
pPagî
->
îrCode
;

6145 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6146 if–
rc
==
SQLITE_OK
 ){

6147 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6148 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6149 || 
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6151 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6152 if–0==
	`∑gîU£WÆ
(
pPagî
) ){

6153 
rc
 = 
	`∑gî_waô_⁄_lock
(
pPagî
, 
EXCLUSIVE_LOCK
);

6156  
rc
;

6157 
	}
}

6185 
	$sqlôe3PagîCommôPha£O√
(

6186 
Pagî
 *
pPagî
,

6187 c⁄° *
zMa°î
,

6188 
noSync


6190 
rc
 = 
SQLITE_OK
;

6192 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6193 || 
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6194 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6195 || 
pPagî
->
eSèã
==
PAGER_ERROR


6197 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6200 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

6203 if–
	`sqlôe3Fau…Sim
(400ËË 
SQLITE_IOERR
;

6205 
	`PAGERTRACE
(("DATABASE SYNC: File=%s zMaster=%sÇSize=%d\n",

6206 
pPagî
->
zFûíame
, 
zMa°î
,ÖPagî->
dbSize
));

6209 if–
pPagî
->
eSèã
<
PAGER_WRITER_CACHEMOD
 )  
SQLITE_OK
;

6211 
	`as£π
–
MEMDB
==0 || 
pPagî
->
ãmpFûe
 );

6212 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ãmpFûe
 );

6213 if–0==
	`∑gîFlushOnCommô
(
pPagî
, 1) ){

6217 
	`sqlôe3BackupRe°¨t
(
pPagî
->
pBackup
);

6219 if–
	`∑gîU£WÆ
(
pPagî
) ){

6220 
PgHdr
 *
pLi°
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
);

6221 
PgHdr
 *
pPageO√
 = 0;

6222 if–
pLi°
==0 ){

6225 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 1, &
pPageO√
, 0);

6226 
pLi°
 = 
pPageO√
;

6227 
pLi°
->
pDúty
 = 0;

6229 
	`as£π
–
rc
==
SQLITE_OK
 );

6230 if–
	`ALWAYS
(
pLi°
) ){

6231 
rc
 = 
	`∑gîWÆFømes
(
pPagî
, 
pLi°
,ÖPagî->
dbSize
, 1);

6233 
	`sqlôe3PagîUƒef
(
pPageO√
);

6234 if–
rc
==
SQLITE_OK
 ){

6235 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

6261 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


6262 
PgHdr
 *
pPg
;

6263 
	`as£π
–
	`isO≥n
(
pPagî
->
jfd
)

6264 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF


6265 || 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL


6267 if–!
zMa°î
 && 
	`isO≥n
(
pPagî
->
jfd
)

6268 && 
pPagî
->
jou∫ÆOff
==
	`j∫lBuf„rSize
(pPager)

6269 && 
pPagî
->
dbSize
>ıPagî->
dbOrigSize


6270 && (0==(
pPg
 = 
	`sqlôe3PˇcheDútyLi°
(
pPagî
->
pPCache
)Ë|| 0=ıPg->
pDúty
)

6278 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 1);

6280 
rc
 = 
	`sqlôe3Jou∫ÆCª©e
(
pPagî
->
jfd
);

6281 if–
rc
==
SQLITE_OK
 ){

6282 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 0);

6286 
rc
 = 
	`∑gî_ö¸_ch™gecou¡î
(
pPagî
, 0);

6288 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6294 
rc
 = 
	`wrôeMa°îJou∫Æ
(
pPagî
, 
zMa°î
);

6295 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6308 
rc
 = 
	`syncJou∫Æ
(
pPagî
, 0);

6309 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6311 
rc
 = 
	`∑gî_wrôe_∑gñi°
(
pPagî
,
	`sqlôe3PˇcheDútyLi°
’Pagî->
pPCache
));

6312 if–
rc
!=
SQLITE_OK
 ){

6313 
	`as£π
–
rc
!=
SQLITE_IOERR_BLOCKED
 );

6314 
commô_pha£_⁄e_exô
;

6316 
	`sqlôe3PˇcheCÀ™AŒ
(
pPagî
->
pPCache
);

6324 if–
pPagî
->
dbSize
>pPagî->
dbFûeSize
 ){

6325 
Pgno
 
nNew
 = 
pPagî
->
dbSize
 - (pPagî->dbSize==
	`PAGER_MJ_PGNO
(pPager));

6326 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD
 );

6327 
rc
 = 
	`∑gî_åunˇã
(
pPagî
, 
nNew
);

6328 if–
rc
!=
SQLITE_OK
 ) 
commô_pha£_⁄e_exô
;

6332 if–!
noSync
 ){

6333 
rc
 = 
	`sqlôe3PagîSync
(
pPagî
, 
zMa°î
);

6335 
	`IOTRACE
(("DBSYNC %p\n", 
pPagî
))

6339 
commô_pha£_⁄e_exô
:

6340 if–
rc
==
SQLITE_OK
 && !
	`∑gîU£WÆ
(
pPagî
) ){

6341 
pPagî
->
eSèã
 = 
PAGER_WRITER_FINISHED
;

6343  
rc
;

6344 
	}
}

6362 
	$sqlôe3PagîCommôPha£Two
(
Pagî
 *
pPagî
){

6363 
rc
 = 
SQLITE_OK
;

6368 if–
	`NEVER
(
pPagî
->
îrCode
) ) ÖPager->errCode;

6370 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6371 || 
pPagî
->
eSèã
==
PAGER_WRITER_FINISHED


6372 || (
	`∑gîU£WÆ
(
pPagî
Ë&&ÖPagî->
eSèã
==
PAGER_WRITER_CACHEMOD
)

6374 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6387 if–
pPagî
->
eSèã
==
PAGER_WRITER_LOCKED


6388 && 
pPagî
->
ex˛usiveMode


6389 && 
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_PERSIST


6391 
	`as£π
–
pPagî
->
jou∫ÆOff
==
	`JOURNAL_HDR_SZ
(pPager) || !pPager->journalOff );

6392 
pPagî
->
eSèã
 = 
PAGER_READER
;

6393  
SQLITE_OK
;

6396 
	`PAGERTRACE
(("COMMIT %d\n", 
	`PAGERID
(
pPagî
)));

6397 
pPagî
->
iD©aVîsi⁄
++;

6398 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
,ÖPagî->
£tMa°î
, 1);

6399  
	`∑gî_îr‹
(
pPagî
, 
rc
);

6400 
	}
}

6428 
	$sqlôe3PagîRﬁlback
(
Pagî
 *
pPagî
){

6429 
rc
 = 
SQLITE_OK
;

6430 
	`PAGERTRACE
(("ROLLBACK %d\n", 
	`PAGERID
(
pPagî
)));

6436 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6437 if–
pPagî
->
eSèã
==
PAGER_ERROR
 ) ÖPagî->
îrCode
;

6438 if–
pPagî
->
eSèã
<=
PAGER_READER
 )  
SQLITE_OK
;

6440 if–
	`∑gîU£WÆ
(
pPagî
) ){

6441 
rc2
;

6442 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_ROLLBACK
, -1);

6443 
rc2
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
,ÖPagî->
£tMa°î
, 0);

6444 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

6445 }if–!
	`isO≥n
(
pPagî
->
jfd
Ë||ÖPagî->
eSèã
==
PAGER_WRITER_LOCKED
 ){

6446 
eSèã
 = 
pPagî
->eState;

6447 
rc
 = 
	`∑gî_íd_å™ß˘i⁄
(
pPagî
, 0, 0);

6448 if–!
MEMDB
 && 
eSèã
>
PAGER_WRITER_LOCKED
 ){

6453 
pPagî
->
îrCode
 = 
SQLITE_ABORT
;

6454 
pPagî
->
eSèã
 = 
PAGER_ERROR
;

6455  
rc
;

6458 
rc
 = 
	`∑gî_∂ayback
(
pPagî
, 0);

6461 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 || 
rc
!=
SQLITE_OK
 );

6462 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_FULL
 ||Ñc==
SQLITE_CORRUPT


6463 || 
rc
==
SQLITE_NOMEM
 || (rc&0xFF)==
SQLITE_IOERR


6464 || 
rc
==
SQLITE_CANTOPEN


6470  
	`∑gî_îr‹
(
pPagî
, 
rc
);

6471 
	}
}

6477 
u8
 
	$sqlôe3PagîI§ód⁄ly
(
Pagî
 *
pPagî
){

6478  
pPagî
->
ªadO∆y
;

6479 
	}
}

6481 #ifde‡
SQLITE_DEBUG


6485 
	$sqlôe3PagîRefcou¡
(
Pagî
 *
pPagî
){

6486  
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
);

6487 
	}
}

6494 
	$sqlôe3PagîMemU£d
(
Pagî
 *
pPagî
){

6495 
≥rPageSize
 = 
pPagî
->
∑geSize
 +ÖPagî->
nExåa
 + (
PgHdr
)

6497  
≥rPageSize
*
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
)

6498 + 
	`sqlôe3MÆlocSize
(
pPagî
)

6499 + 
pPagî
->
∑geSize
;

6500 
	}
}

6505 
	$sqlôe3PagîPageRefcou¡
(
DbPage
 *
pPage
){

6506  
	`sqlôe3PˇchePageRefcou¡
(
pPage
);

6507 
	}
}

6509 #ifde‡
SQLITE_TEST


6513 *
	$sqlôe3PagîSèts
(
Pagî
 *
pPagî
){

6514 
a
[11];

6515 
a
[0] = 
	`sqlôe3PˇcheRefCou¡
(
pPagî
->
pPCache
);

6516 
a
[1] = 
	`sqlôe3PˇchePagecou¡
(
pPagî
->
pPCache
);

6517 
a
[2] = 
	`sqlôe3PˇcheGëCachesize
(
pPagî
->
pPCache
);

6518 
a
[3] = 
pPagî
->
eSèã
==
PAGER_OPEN
 ? -1 : (ËpPagî->
dbSize
;

6519 
a
[4] = 
pPagî
->
eSèã
;

6520 
a
[5] = 
pPagî
->
îrCode
;

6521 
a
[6] = 
pPagî
->
aSèt
[
PAGER_STAT_HIT
];

6522 
a
[7] = 
pPagî
->
aSèt
[
PAGER_STAT_MISS
];

6523 
a
[8] = 0;

6524 
a
[9] = 
pPagî
->
nRód
;

6525 
a
[10] = 
pPagî
->
aSèt
[
PAGER_STAT_WRITE
];

6526  
a
;

6527 
	}
}

6537 
	$sqlôe3PagîCacheSèt
(
Pagî
 *
pPagî
, 
eSèt
, 
ª£t
, *
≤VÆ
){

6539 
	`as£π
–
eSèt
==
SQLITE_DBSTATUS_CACHE_HIT


6540 || 
eSèt
==
SQLITE_DBSTATUS_CACHE_MISS


6541 || 
eSèt
==
SQLITE_DBSTATUS_CACHE_WRITE


6544 
	`as£π
–
SQLITE_DBSTATUS_CACHE_HIT
+1==
SQLITE_DBSTATUS_CACHE_MISS
 );

6545 
	`as£π
–
SQLITE_DBSTATUS_CACHE_HIT
+2==
SQLITE_DBSTATUS_CACHE_WRITE
 );

6546 
	`as£π
–
PAGER_STAT_HIT
==0 && 
PAGER_STAT_MISS
==1 && 
PAGER_STAT_WRITE
==2 );

6548 *
≤VÆ
 +
pPagî
->
aSèt
[
eSèt
 - 
SQLITE_DBSTATUS_CACHE_HIT
];

6549 if–
ª£t
 ){

6550 
pPagî
->
aSèt
[
eSèt
 - 
SQLITE_DBSTATUS_CACHE_HIT
] = 0;

6552 
	}
}

6557 
	$sqlôe3PagîIsMemdb
(
Pagî
 *
pPagî
){

6558  
pPagî
->
ãmpFûe
;

6559 
	}
}

6571 
SQLITE_NOINLINE
 
	$∑gîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
nSavïoöt
){

6572 
rc
 = 
SQLITE_OK
;

6573 
nCuºít
 = 
pPagî
->
nSavïoöt
;

6574 
ii
;

6575 
PagîSavïoöt
 *
aNew
;

6577 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

6578 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6579 
	`as£π
–
nSavïoöt
>
nCuºít
 && 
pPagî
->
u£Jou∫Æ
 );

6585 
aNew
 = (
PagîSavïoöt
 *)
	`sqlôe3RóŒoc
(

6586 
pPagî
->
aSavïoöt
, (
PagîSavïoöt
)*
nSavïoöt


6588 if–!
aNew
 ){

6589  
SQLITE_NOMEM_BKPT
;

6591 
	`mem£t
(&
aNew
[
nCuºít
], 0, (
nSavïoöt
-nCuºítË* (
PagîSavïoöt
));

6592 
pPagî
->
aSavïoöt
 = 
aNew
;

6595 
ii
=
nCuºít
; ii<
nSavïoöt
; ii++){

6596 
aNew
[
ii
].
nOrig
 = 
pPagî
->
dbSize
;

6597 if–
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆOff
>0 ){

6598 
aNew
[
ii
].
iOff£t
 = 
pPagî
->
jou∫ÆOff
;

6600 
aNew
[
ii
].
iOff£t
 = 
	`JOURNAL_HDR_SZ
(
pPagî
);

6602 
aNew
[
ii
].
iSubRec
 = 
pPagî
->
nSubRec
;

6603 
aNew
[
ii
].
pInSavïoöt
 = 
	`sqlôe3BôvecCª©e
(
pPagî
->
dbSize
);

6604 if–!
aNew
[
ii
].
pInSavïoöt
 ){

6605  
SQLITE_NOMEM_BKPT
;

6607 if–
	`∑gîU£WÆ
(
pPagî
) ){

6608 
	`sqlôe3WÆSavïoöt
(
pPagî
->
pWÆ
, 
aNew
[
ii
].
aWÆD©a
);

6610 
pPagî
->
nSavïoöt
 = 
ii
+1;

6612 
	`as£π
–
pPagî
->
nSavïoöt
==nSavepoint );

6613 
	`as£πTrunˇãC⁄°øöt
(
pPagî
);

6614  
rc
;

6615 
	}
}

6616 
	$sqlôe3PagîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
nSavïoöt
){

6617 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_WRITER_LOCKED
 );

6618 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6620 if–
nSavïoöt
>
pPagî
->nSavïoöà&&ÖPagî->
u£Jou∫Æ
 ){

6621  
	`∑gîO≥nSavïoöt
(
pPagî
, 
nSavïoöt
);

6623  
SQLITE_OK
;

6625 
	}
}

6658 
	$sqlôe3PagîSavïoöt
(
Pagî
 *
pPagî
, 
›
, 
iSavïoöt
){

6659 
rc
 = 
pPagî
->
îrCode
;

6661 
	`as£π
–
›
==
SAVEPOINT_RELEASE
 || op==
SAVEPOINT_ROLLBACK
 );

6662 
	`as£π
–
iSavïoöt
>=0 || 
›
==
SAVEPOINT_ROLLBACK
 );

6664 if–
rc
==
SQLITE_OK
 && 
iSavïoöt
<
pPagî
->
nSavïoöt
 ){

6665 
ii
;

6666 
nNew
;

6672 
nNew
 = 
iSavïoöt
 + (–
›
==
SAVEPOINT_RELEASE
 ) ? 0 : 1);

6673 
ii
=
nNew
; ii<
pPagî
->
nSavïoöt
; ii++){

6674 
	`sqlôe3BôvecDe°roy
(
pPagî
->
aSavïoöt
[
ii
].
pInSavïoöt
);

6676 
pPagî
->
nSavïoöt
 = 
nNew
;

6680 if–
›
==
SAVEPOINT_RELEASE
 ){

6681 if–
nNew
==0 && 
	`isO≥n
(
pPagî
->
sjfd
) ){

6683 if–
	`sqlôe3Jou∫ÆIsInMem‹y
(
pPagî
->
sjfd
) ){

6684 
rc
 = 
	`sqlôe3OsTrunˇã
(
pPagî
->
sjfd
, 0);

6685 
	`as£π
–
rc
==
SQLITE_OK
 );

6687 
pPagî
->
nSubRec
 = 0;

6695 if–
	`∑gîU£WÆ
(
pPagî
Ë|| 
	`isO≥n
’Pagî->
jfd
) ){

6696 
PagîSavïoöt
 *
pSavïoöt
 = (
nNew
==0)?0:&
pPagî
->
aSavïoöt
[nNew-1];

6697 
rc
 = 
	`∑gîPœybackSavïoöt
(
pPagî
, 
pSavïoöt
);

6698 
	`as£π
(
rc
!=
SQLITE_DONE
);

6702  
rc
;

6703 
	}
}

6715 c⁄° *
	$sqlôe3PagîFûíame
(
Pagî
 *
pPagî
, 
nuŒIfMemDb
){

6716  (
nuŒIfMemDb
 && 
pPagî
->
memDb
Ë? "" :ÖPagî->
zFûíame
;

6717 
	}
}

6722 
sqlôe3_vfs
 *
	$sqlôe3PagîVfs
(
Pagî
 *
pPagî
){

6723  
pPagî
->
pVfs
;

6724 
	}
}

6731 
sqlôe3_fûe
 *
	$sqlôe3PagîFûe
(
Pagî
 *
pPagî
){

6732  
pPagî
->
fd
;

6733 
	}
}

6739 
sqlôe3_fûe
 *
	$sqlôe3PagîJ∫lFûe
(
Pagî
 *
pPagî
){

6740 #i‡
SQLITE_OMIT_WAL


6741  
pPagî
->
jfd
;

6743  
pPagî
->
pWÆ
 ? 
	`sqlôe3WÆFûe
’Pagî->pWÆË:ÖPagî->
jfd
;

6745 
	}
}

6750 c⁄° *
	$sqlôe3PagîJou∫Æ«me
(
Pagî
 *
pPagî
){

6751  
pPagî
->
zJou∫Æ
;

6752 
	}
}

6754 #ifde‡
SQLITE_HAS_CODEC


6758 
sqlôe3PagîSëCodec
(

6759 
Pagî
 *
pPagî
,

6760 *(*
xCodec
)(*,*,
Pgno
,),

6761 (*
xCodecSizeChng
)(*,,),

6762 (*
xCodecFªe
)(*),

6763 *
pCodec


6765 if–
pPagî
->
xCodecFªe
 )ÖPagî->
	`xCodecFªe
’Pagî->
pCodec
);

6766 
pPagî
->
xCodec
 =ÖPagî->
memDb
 ? 0 : xCodec;

6767 
pPagî
->
xCodecSizeChng
 = xCodecSizeChng;

6768 
pPagî
->
xCodecFªe
 = xCodecFree;

6769 
pPagî
->
pCodec
 =ÖCodec;

6770 
	`∑gîRï‹tSize
(
pPagî
);

6771 
	}
}

6772 *
	$sqlôe3PagîGëCodec
(
Pagî
 *
pPagî
){

6773  
pPagî
->
pCodec
;

6774 
	}
}

6783 *
	$sqlôe3PagîCodec
(
PgHdr
 *
pPg
){

6784 *
aD©a
 = 0;

6785 
	`CODEC2
(
pPg
->
pPagî
,ÖPg->
pD©a
,ÖPg->
pgno
, 6,  0, 
aD©a
);

6786  
aD©a
;

6787 
	}
}

6792 
	$sqlôe3PagîSèã
(
Pagî
 *
pPagî
){

6793  
pPagî
->
eSèã
;

6794 
	}
}

6797 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


6823 
	$sqlôe3PagîMovïage
(
Pagî
 *
pPagî
, 
DbPage
 *
pPg
, 
Pgno
 
pgno
, 
isCommô
){

6824 
PgHdr
 *
pPgOld
;

6825 
Pgno
 
√edSyncPgno
 = 0;

6826 
rc
;

6827 
Pgno
 
‹igPgno
;

6829 
	`as£π
–
pPg
->
nRef
>0 );

6830 
	`as£π
–
pPagî
->
eSèã
==
PAGER_WRITER_CACHEMOD


6831 || 
pPagî
->
eSèã
==
PAGER_WRITER_DBMOD


6833 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

6838 
	`as£π
–
pPagî
->
ãmpFûe
 || !
MEMDB
 );

6839 if–
pPagî
->
ãmpFûe
 ){

6840 
rc
 = 
	`sqlôe3PagîWrôe
(
pPg
);

6841 if–
rc
 ) Ñc;

6862 if–(
pPg
->
Êags
 & 
PGHDR_DIRTY
)!=0

6863 && 
SQLITE_OK
!=(
rc
 = 
	`subjou∫ÆPageIfRequúed
(
pPg
))

6865  
rc
;

6868 
	`PAGERTRACE
(("MOVE %dÖage %d (needSync=%d) movesÅo %d\n",

6869 
	`PAGERID
(
pPagî
), 
pPg
->
pgno
, (pPg->
Êags
&
PGHDR_NEED_SYNC
)?1:0,Ögno));

6870 
	`IOTRACE
(("MOVE %∞%d %d\n", 
pPagî
, 
pPg
->
pgno
,Ögno))

6879 if–(
pPg
->
Êags
&
PGHDR_NEED_SYNC
Ë&& !
isCommô
 ){

6880 
√edSyncPgno
 = 
pPg
->
pgno
;

6881 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_OFF
 ||

6882 
	`∑geInJou∫Æ
(
pPagî
, 
pPg
Ë||ÖPg->
pgno
>pPagî->
dbOrigSize
 );

6883 
	`as£π
–
pPg
->
Êags
&
PGHDR_DIRTY
 );

6891 
pPg
->
Êags
 &~
PGHDR_NEED_SYNC
;

6892 
pPgOld
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

6893 
	`as£π
–!
pPgOld
 ||ÖPgOld->
nRef
==1 );

6894 if–
pPgOld
 ){

6895 
pPg
->
Êags
 |(
pPgOld
->Êags&
PGHDR_NEED_SYNC
);

6896 if–
pPagî
->
ãmpFûe
 ){

6899 
	`sqlôe3PˇcheMove
(
pPgOld
, 
pPagî
->
dbSize
+1);

6901 
	`sqlôe3PˇcheDr›
(
pPgOld
);

6905 
‹igPgno
 = 
pPg
->
pgno
;

6906 
	`sqlôe3PˇcheMove
(
pPg
, 
pgno
);

6907 
	`sqlôe3PˇcheMakeDúty
(
pPg
);

6913 if–
pPagî
->
ãmpFûe
 && 
pPgOld
 ){

6914 
	`sqlôe3PˇcheMove
(
pPgOld
, 
‹igPgno
);

6915 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPgOld
);

6918 if–
√edSyncPgno
 ){

6933 
PgHdr
 *
pPgHdr
;

6934 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
√edSyncPgno
, &
pPgHdr
, 0);

6935 if–
rc
!=
SQLITE_OK
 ){

6936 if–
√edSyncPgno
<=
pPagî
->
dbOrigSize
 ){

6937 
	`as£π
–
pPagî
->
pTmpS∑˚
!=0 );

6938 
	`sqlôe3BôvecCÀ¨
(
pPagî
->
pInJou∫Æ
, 
√edSyncPgno
,ÖPagî->
pTmpS∑˚
);

6940  
rc
;

6942 
pPgHdr
->
Êags
 |
PGHDR_NEED_SYNC
;

6943 
	`sqlôe3PˇcheMakeDúty
(
pPgHdr
);

6944 
	`sqlôe3PagîUƒefNŸNuŒ
(
pPgHdr
);

6947  
SQLITE_OK
;

6948 
	}
}

6957 
	$sqlôe3PagîRekey
(
DbPage
 *
pPg
, 
Pgno
 
iNew
, 
u16
 
Êags
){

6958 
	`as£π
–
pPg
->
pgno
!=
iNew
 );

6959 
pPg
->
Êags
 = flags;

6960 
	`sqlôe3PˇcheMove
(
pPg
, 
iNew
);

6961 
	}
}

6966 *
	$sqlôe3PagîGëD©a
(
DbPage
 *
pPg
){

6967 
	`as£π
–
pPg
->
nRef
>0 ||ÖPg->
pPagî
->
memDb
 );

6968  
pPg
->
pD©a
;

6969 
	}
}

6975 *
	$sqlôe3PagîGëExåa
(
DbPage
 *
pPg
){

6976  
pPg
->
pExåa
;

6977 
	}
}

6989 
	$sqlôe3PagîLockögMode
(
Pagî
 *
pPagî
, 
eMode
){

6990 
	`as£π
–
eMode
==
PAGER_LOCKINGMODE_QUERY


6991 || 
eMode
==
PAGER_LOCKINGMODE_NORMAL


6992 || 
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

6993 
	`as£π
–
PAGER_LOCKINGMODE_QUERY
<0 );

6994 
	`as£π
–
PAGER_LOCKINGMODE_NORMAL
>=0 && 
PAGER_LOCKINGMODE_EXCLUSIVE
>=0 );

6995 
	`as£π
–
pPagî
->
ex˛usiveMode
 || 0==
	`sqlôe3WÆHópMem‹y
’Pagî->
pWÆ
) );

6996 if–
eMode
>=0 && !
pPagî
->
ãmpFûe
 && !
	`sqlôe3WÆHópMem‹y
’Pagî->
pWÆ
) ){

6997 
pPagî
->
ex˛usiveMode
 = (
u8
)
eMode
;

6999  ()
pPagî
->
ex˛usiveMode
;

7000 
	}
}

7022 
	$sqlôe3PagîSëJou∫ÆMode
(
Pagî
 *
pPagî
, 
eMode
){

7023 
u8
 
eOld
 = 
pPagî
->
jou∫ÆMode
;

7025 #ifde‡
SQLITE_DEBUG


7028 
	`¥öt_∑gî_°©e
(
pPagî
);

7033 
	`as£π
–
eMode
==
PAGER_JOURNALMODE_DELETE


7034 || 
eMode
==
PAGER_JOURNALMODE_TRUNCATE


7035 || 
eMode
==
PAGER_JOURNALMODE_PERSIST


7036 || 
eMode
==
PAGER_JOURNALMODE_OFF


7037 || 
eMode
==
PAGER_JOURNALMODE_WAL


7038 || 
eMode
==
PAGER_JOURNALMODE_MEMORY
 );

7044 
	`as£π
–
pPagî
->
ãmpFûe
==0 || 
eMode
!=
PAGER_JOURNALMODE_WAL
 );

7049 if–
MEMDB
 ){

7050 
	`as£π
–
eOld
==
PAGER_JOURNALMODE_MEMORY
 ||ÉOld==
PAGER_JOURNALMODE_OFF
 );

7051 if–
eMode
!=
PAGER_JOURNALMODE_MEMORY
 &&ÉMode!=
PAGER_JOURNALMODE_OFF
 ){

7052 
eMode
 = 
eOld
;

7056 if–
eMode
!=
eOld
 ){

7059 
	`as£π
–
pPagî
->
eSèã
!=
PAGER_ERROR
 );

7060 
pPagî
->
jou∫ÆMode
 = (
u8
)
eMode
;

7066 
	`as£π
–(
PAGER_JOURNALMODE_TRUNCATE
 & 5)==1 );

7067 
	`as£π
–(
PAGER_JOURNALMODE_PERSIST
 & 5)==1 );

7068 
	`as£π
–(
PAGER_JOURNALMODE_DELETE
 & 5)==0 );

7069 
	`as£π
–(
PAGER_JOURNALMODE_MEMORY
 & 5)==4 );

7070 
	`as£π
–(
PAGER_JOURNALMODE_OFF
 & 5)==0 );

7071 
	`as£π
–(
PAGER_JOURNALMODE_WAL
 & 5)==5 );

7073 
	`as£π
–
	`isO≥n
(
pPagî
->
fd
Ë||ÖPagî->
ex˛usiveMode
 );

7074 if–!
pPagî
->
ex˛usiveMode
 && (
eOld
 & 5)==1 && (
eMode
 & 1)==0 ){

7084 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7085 if–
pPagî
->
eLock
>=
RESERVED_LOCK
 ){

7086 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
, 0);

7088 
rc
 = 
SQLITE_OK
;

7089 
°©e
 = 
pPagî
->
eSèã
;

7090 
	`as£π
–
°©e
==
PAGER_OPEN
 || sèã==
PAGER_READER
 );

7091 if–
°©e
==
PAGER_OPEN
 ){

7092 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pPagî
);

7094 if–
pPagî
->
eSèã
==
PAGER_READER
 ){

7095 
	`as£π
–
rc
==
SQLITE_OK
 );

7096 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
RESERVED_LOCK
);

7098 if–
rc
==
SQLITE_OK
 ){

7099 
	`sqlôe3OsDñëe
(
pPagî
->
pVfs
,ÖPagî->
zJou∫Æ
, 0);

7101 if–
rc
==
SQLITE_OK
 && 
°©e
==
PAGER_READER
 ){

7102 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

7103 }if–
°©e
==
PAGER_OPEN
 ){

7104 
	`∑gî_u∆ock
(
pPagî
);

7106 
	`as£π
–
°©e
==
pPagî
->
eSèã
 );

7108 }if–
eMode
==
PAGER_JOURNALMODE_OFF
 ){

7109 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7114  ()
pPagî
->
jou∫ÆMode
;

7115 
	}
}

7120 
	$sqlôe3PagîGëJou∫ÆMode
(
Pagî
 *
pPagî
){

7121  ()
pPagî
->
jou∫ÆMode
;

7122 
	}
}

7129 
	$sqlôe3PagîOkToCh™geJou∫ÆMode
(
Pagî
 *
pPagî
){

7130 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

7131 if–
pPagî
->
eSèã
>=
PAGER_WRITER_CACHEMOD
 )  0;

7132 if–
	`NEVER
(
	`isO≥n
(
pPagî
->
jfd
Ë&&ÖPagî->
jou∫ÆOff
>0) )  0;

7134 
	}
}

7142 
i64
 
	$sqlôe3PagîJou∫ÆSizeLimô
(
Pagî
 *
pPagî
, 
i64
 
iLimô
){

7143 if–
iLimô
>=-1 ){

7144 
pPagî
->
jou∫ÆSizeLimô
 = 
iLimô
;

7145 
	`sqlôe3WÆLimô
(
pPagî
->
pWÆ
, 
iLimô
);

7147  
pPagî
->
jou∫ÆSizeLimô
;

7148 
	}
}

7156 
sqlôe3_backup
 **
	$sqlôe3PagîBackupPå
(
Pagî
 *
pPagî
){

7157  &
pPagî
->
pBackup
;

7158 
	}
}

7160 #i‚de‡
SQLITE_OMIT_VACUUM


7164 
	$sqlôe3PagîCÀ¨Cache
(
Pagî
 *
pPagî
){

7165 
	`as£π
–
MEMDB
==0 || 
pPagî
->
ãmpFûe
 );

7166 if–
pPagî
->
ãmpFûe
==0 ) 
	`∑gî_ª£t
(pPager);

7167 
	}
}

7171 #i‚de‡
SQLITE_OMIT_WAL


7179 
	$sqlôe3PagîCheckpoöt
(
Pagî
 *
pPagî
, 
eMode
, *
≤Log
, *
≤Ck±
){

7180 
rc
 = 
SQLITE_OK
;

7181 if–
pPagî
->
pWÆ
 ){

7182 
rc
 = 
	`sqlôe3WÆCheckpoöt
(
pPagî
->
pWÆ
, 
eMode
,

7183 (
eMode
==
SQLITE_CHECKPOINT_PASSIVE
 ? 0 : 
pPagî
->
xBusyH™dÀr
),

7184 
pPagî
->
pBusyH™dÀrArg
,

7185 
pPagî
->
ck±SyncFœgs
,ÖPagî->
∑geSize
, (
u8
 *ÌPagî->
pTmpS∑˚
,

7186 
≤Log
, 
≤Ck±


7189  
rc
;

7190 
	}
}

7192 
	$sqlôe3PagîWÆCÆlback
(
Pagî
 *
pPagî
){

7193  
	`sqlôe3WÆCÆlback
(
pPagî
->
pWÆ
);

7194 
	}
}

7200 
	$sqlôe3PagîWÆSuµ‹ãd
(
Pagî
 *
pPagî
){

7201 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
 = 
pPagî
->
fd
->pMethods;

7202 if–
pPagî
->
noLock
 )  0;

7203  
pPagî
->
ex˛usiveMode
 || (
pMëhods
->
iVîsi⁄
>=2 &&ÖMëhods->
xShmM≠
);

7204 
	}
}

7210 
	$∑gîEx˛usiveLock
(
Pagî
 *
pPagî
){

7211 
rc
;

7213 
	`as£π
–
pPagî
->
eLock
==
SHARED_LOCK
 ||ÖPagî->eLock==
EXCLUSIVE_LOCK
 );

7214 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
EXCLUSIVE_LOCK
);

7215 if–
rc
!=
SQLITE_OK
 ){

7218 
	`∑gîU∆ockDb
(
pPagî
, 
SHARED_LOCK
);

7221  
rc
;

7222 
	}
}

7230 
	$∑gîO≥nWÆ
(
Pagî
 *
pPagî
){

7231 
rc
 = 
SQLITE_OK
;

7233 
	`as£π
–
pPagî
->
pWÆ
==0 &&ÖPagî->
ãmpFûe
==0 );

7234 
	`as£π
–
pPagî
->
eLock
==
SHARED_LOCK
 ||ÖPagî->eLock==
EXCLUSIVE_LOCK
 );

7241 if–
pPagî
->
ex˛usiveMode
 ){

7242 
rc
 = 
	`∑gîEx˛usiveLock
(
pPagî
);

7248 if–
rc
==
SQLITE_OK
 ){

7249 
rc
 = 
	`sqlôe3WÆO≥n
(
pPagî
->
pVfs
,

7250 
pPagî
->
fd
,ÖPagî->
zWÆ
,ÖPagî->
ex˛usiveMode
,

7251 
pPagî
->
jou∫ÆSizeLimô
, &pPagî->
pWÆ


7254 
	`∑gîFixM≠limô
(
pPagî
);

7256  
rc
;

7257 
	}
}

7275 
	$sqlôe3PagîO≥nWÆ
(

7276 
Pagî
 *
pPagî
,

7277 *
pbO≥n


7279 
rc
 = 
SQLITE_OK
;

7281 
	`as£π
–
	`as£π_∑gî_°©e
(
pPagî
) );

7282 
	`as£π
–
pPagî
->
eSèã
==
PAGER_OPEN
 || 
pbO≥n
 );

7283 
	`as£π
–
pPagî
->
eSèã
==
PAGER_READER
 || !
pbO≥n
 );

7284 
	`as£π
–
pbO≥n
==0 || *pbOpen==0 );

7285 
	`as£π
–
pbO≥n
!=0 || (!
pPagî
->
ãmpFûe
 && !pPagî->
pWÆ
) );

7287 if–!
pPagî
->
ãmpFûe
 && !pPagî->
pWÆ
 ){

7288 if–!
	`sqlôe3PagîWÆSuµ‹ãd
(
pPagî
ËË 
SQLITE_CANTOPEN
;

7291 
	`sqlôe3OsClo£
(
pPagî
->
jfd
);

7293 
rc
 = 
	`∑gîO≥nWÆ
(
pPagî
);

7294 if–
rc
==
SQLITE_OK
 ){

7295 
pPagî
->
jou∫ÆMode
 = 
PAGER_JOURNALMODE_WAL
;

7296 
pPagî
->
eSèã
 = 
PAGER_OPEN
;

7299 *
pbO≥n
 = 1;

7302  
rc
;

7303 
	}
}

7314 
	$sqlôe3PagîClo£WÆ
(
Pagî
 *
pPagî
){

7315 
rc
 = 
SQLITE_OK
;

7317 
	`as£π
–
pPagî
->
jou∫ÆMode
==
PAGER_JOURNALMODE_WAL
 );

7323 if–!
pPagî
->
pWÆ
 ){

7324 
logexi°s
 = 0;

7325 
rc
 = 
	`∑gîLockDb
(
pPagî
, 
SHARED_LOCK
);

7326 if–
rc
==
SQLITE_OK
 ){

7327 
rc
 = 
	`sqlôe3OsAc˚ss
(

7328 
pPagî
->
pVfs
,ÖPagî->
zWÆ
, 
SQLITE_ACCESS_EXISTS
, &
logexi°s


7331 if–
rc
==
SQLITE_OK
 && 
logexi°s
 ){

7332 
rc
 = 
	`∑gîO≥nWÆ
(
pPagî
);

7339 if–
rc
==
SQLITE_OK
 && 
pPagî
->
pWÆ
 ){

7340 
rc
 = 
	`∑gîEx˛usiveLock
(
pPagî
);

7341 if–
rc
==
SQLITE_OK
 ){

7342 
rc
 = 
	`sqlôe3WÆClo£
(
pPagî
->
pWÆ
,ÖPagî->
ck±SyncFœgs
,

7343 
pPagî
->
∑geSize
, (
u8
*ÌPagî->
pTmpS∑˚
);

7344 
pPagî
->
pWÆ
 = 0;

7345 
	`∑gîFixM≠limô
(
pPagî
);

7346 if–
rc
 && !
pPagî
->
ex˛usiveMode
 ) 
	`∑gîU∆ockDb
’Pagî, 
SHARED_LOCK
);

7349  
rc
;

7350 
	}
}

7352 #ifde‡
SQLITE_ENABLE_SNAPSHOT


7357 
	$sqlôe3PagîS«pshŸGë
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
){

7358 
rc
 = 
SQLITE_ERROR
;

7359 if–
pPagî
->
pWÆ
 ){

7360 
rc
 = 
	`sqlôe3WÆS«pshŸGë
(
pPagî
->
pWÆ
, 
µS«pshŸ
);

7362  
rc
;

7363 
	}
}

7370 
	$sqlôe3PagîS«pshŸO≥n
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

7371 
rc
 = 
SQLITE_OK
;

7372 if–
pPagî
->
pWÆ
 ){

7373 
	`sqlôe3WÆS«pshŸO≥n
(
pPagî
->
pWÆ
, 
pS«pshŸ
);

7375 
rc
 = 
SQLITE_ERROR
;

7377  
rc
;

7378 
	}
}

7382 #ifde‡
SQLITE_ENABLE_ZIPVFS


7390 
	$sqlôe3PagîWÆFømesize
(
Pagî
 *
pPagî
){

7391 
	`as£π
–
pPagî
->
eSèã
>=
PAGER_READER
 );

7392  
	`sqlôe3WÆFømesize
(
pPagî
->
pWÆ
);

7393 
	}
}

	@pager.h

17 #i‚de‡
SQLITE_PAGER_H


18 
	#SQLITE_PAGER_H


	)

25 #i‚de‡
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT


26 
	#SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT
 -1

	)

33 
u32
 
	tPgno
;

38 
Pagî
 
	tPagî
;

43 
PgHdr
 
	tDbPage
;

53 
	#PAGER_MJ_PGNO
(
x
Ë((
Pgno
)((
PENDING_BYTE
/((x)->
∑geSize
))+1))

	)

60 
	#PAGER_OMIT_JOURNAL
 0x0001

	)

61 
	#PAGER_MEMORY
 0x0002

	)

66 
	#PAGER_LOCKINGMODE_QUERY
 -1

	)

67 
	#PAGER_LOCKINGMODE_NORMAL
 0

	)

68 
	#PAGER_LOCKINGMODE_EXCLUSIVE
 1

	)

77 
	#PAGER_JOURNALMODE_QUERY
 (-1Ë

	)

78 
	#PAGER_JOURNALMODE_DELETE
 0

	)

79 
	#PAGER_JOURNALMODE_PERSIST
 1

	)

80 
	#PAGER_JOURNALMODE_OFF
 2

	)

81 
	#PAGER_JOURNALMODE_TRUNCATE
 3

	)

82 
	#PAGER_JOURNALMODE_MEMORY
 4

	)

83 
	#PAGER_JOURNALMODE_WAL
 5

	)

88 
	#PAGER_GET_NOCONTENT
 0x01

	)

89 
	#PAGER_GET_READONLY
 0x02

	)

99 
	#PAGER_SYNCHRONOUS_OFF
 0x01

	)

100 
	#PAGER_SYNCHRONOUS_NORMAL
 0x02

	)

101 
	#PAGER_SYNCHRONOUS_FULL
 0x03

	)

102 
	#PAGER_SYNCHRONOUS_EXTRA
 0x04

	)

103 
	#PAGER_SYNCHRONOUS_MASK
 0x07

	)

104 
	#PAGER_FULLFSYNC
 0x08

	)

105 
	#PAGER_CKPT_FULLFSYNC
 0x10

	)

106 
	#PAGER_CACHESPILL
 0x20

	)

107 
	#PAGER_FLAGS_MASK
 0x38

	)

116 
sqlôe3PagîO≥n
(

117 
sqlôe3_vfs
*,

118 
Pagî
 **
µPagî
,

123 (*)(
DbPage
*)

125 
	`sqlôe3PagîClo£
(
Pagî
 *
pPagî
);

126 
	`sqlôe3PagîRódFûehódî
(
Pagî
*, , *);

129 
	`sqlôe3PagîSëBusyh™dÀr
(
Pagî
*, (*)(*), *);

130 
	`sqlôe3PagîSëPagesize
(
Pagî
*, 
u32
*, );

131 #ifde‡
SQLITE_HAS_CODEC


132 
	`sqlôe3PagîAlignRe£rve
(
Pagî
*,Pager*);

134 
	`sqlôe3PagîMaxPageCou¡
(
Pagî
*, );

135 
	`sqlôe3PagîSëCachesize
(
Pagî
*, );

136 
	`sqlôe3PagîSëSpûlsize
(
Pagî
*, );

137 
	`sqlôe3PagîSëMm≠Limô
(
Pagî
 *, 
sqlôe3_öt64
);

138 
	`sqlôe3PagîShrök
(
Pagî
*);

139 
	`sqlôe3PagîSëFœgs
(
Pagî
*,);

140 
	`sqlôe3PagîLockögMode
(
Pagî
 *, );

141 
	`sqlôe3PagîSëJou∫ÆMode
(
Pagî
 *, );

142 
	`sqlôe3PagîGëJou∫ÆMode
(
Pagî
*);

143 
	`sqlôe3PagîOkToCh™geJou∫ÆMode
(
Pagî
*);

144 
i64
 
	`sqlôe3PagîJou∫ÆSizeLimô
(
Pagî
 *, i64);

145 
sqlôe3_backup
 **
	`sqlôe3PagîBackupPå
(
Pagî
*);

146 
	`sqlôe3PagîFlush
(
Pagî
*);

149 
	`sqlôe3PagîGë
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
, 
DbPage
 **
µPage
, 
˛rFœg
);

150 
DbPage
 *
	`sqlôe3PagîLookup
(
Pagî
 *
pPagî
, 
Pgno
 
pgno
);

151 
	`sqlôe3PagîRef
(
DbPage
*);

152 
	`sqlôe3PagîUƒef
(
DbPage
*);

153 
	`sqlôe3PagîUƒefNŸNuŒ
(
DbPage
*);

156 
	`sqlôe3PagîWrôe
(
DbPage
*);

157 
	`sqlôe3PagîD⁄tWrôe
(
DbPage
*);

158 
	`sqlôe3PagîMovïage
(
Pagî
*,
DbPage
*,
Pgno
,);

159 
	`sqlôe3PagîPageRefcou¡
(
DbPage
*);

160 *
	`sqlôe3PagîGëD©a
(
DbPage
 *);

161 *
	`sqlôe3PagîGëExåa
(
DbPage
 *);

164 
	`sqlôe3PagîPagecou¡
(
Pagî
*, *);

165 
	`sqlôe3PagîBegö
(
Pagî
*, 
exFœg
, );

166 
	`sqlôe3PagîCommôPha£O√
(
Pagî
*,c⁄° *
zMa°î
, );

167 
	`sqlôe3PagîEx˛usiveLock
(
Pagî
*);

168 
	`sqlôe3PagîSync
(
Pagî
 *
pPagî
, c⁄° *
zMa°î
);

169 
	`sqlôe3PagîCommôPha£Two
(
Pagî
*);

170 
	`sqlôe3PagîRﬁlback
(
Pagî
*);

171 
	`sqlôe3PagîO≥nSavïoöt
(
Pagî
 *
pPagî
, 
n
);

172 
	`sqlôe3PagîSavïoöt
(
Pagî
 *
pPagî
, 
›
, 
iSavïoöt
);

173 
	`sqlôe3PagîSh¨edLock
(
Pagî
 *
pPagî
);

175 #i‚de‡
SQLITE_OMIT_WAL


176 
	`sqlôe3PagîCheckpoöt
(
Pagî
 *
pPagî
, , *, *);

177 
	`sqlôe3PagîWÆSuµ‹ãd
(
Pagî
 *
pPagî
);

178 
	`sqlôe3PagîWÆCÆlback
(
Pagî
 *
pPagî
);

179 
	`sqlôe3PagîO≥nWÆ
(
Pagî
 *
pPagî
, *
pisO≥n
);

180 
	`sqlôe3PagîClo£WÆ
(
Pagî
 *
pPagî
);

181 #ifde‡
SQLITE_ENABLE_SNAPSHOT


182 
	`sqlôe3PagîS«pshŸGë
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
);

183 
	`sqlôe3PagîS«pshŸO≥n
(
Pagî
 *
pPagî
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
);

187 #ifde‡
SQLITE_ENABLE_ZIPVFS


188 
	`sqlôe3PagîWÆFømesize
(
Pagî
 *
pPagî
);

192 
u8
 
	`sqlôe3PagîI§ód⁄ly
(
Pagî
*);

193 
u32
 
	`sqlôe3PagîD©aVîsi⁄
(
Pagî
*);

194 #ifde‡
SQLITE_DEBUG


195 
	`sqlôe3PagîRefcou¡
(
Pagî
*);

197 
	`sqlôe3PagîMemU£d
(
Pagî
*);

198 c⁄° *
	`sqlôe3PagîFûíame
(
Pagî
*, );

199 
sqlôe3_vfs
 *
	`sqlôe3PagîVfs
(
Pagî
*);

200 
sqlôe3_fûe
 *
	`sqlôe3PagîFûe
(
Pagî
*);

201 
sqlôe3_fûe
 *
	`sqlôe3PagîJ∫lFûe
(
Pagî
*);

202 c⁄° *
	`sqlôe3PagîJou∫Æ«me
(
Pagî
*);

203 *
	`sqlôe3PagîTempS∑˚
(
Pagî
*);

204 
	`sqlôe3PagîIsMemdb
(
Pagî
*);

205 
	`sqlôe3PagîCacheSèt
(
Pagî
 *, , , *);

206 
	`sqlôe3PagîCÀ¨Cache
(
Pagî
*);

207 
	`sqlôe3Se˘‹Size
(
sqlôe3_fûe
 *);

210 
	`sqlôe3PagîTrunˇãImage
(
Pagî
*,
Pgno
);

212 
	`sqlôe3PagîRekey
(
DbPage
*, 
Pgno
, 
u16
);

214 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_WAL
)

215 *
	`sqlôe3PagîCodec
(
DbPage
 *);

219 #i‡!
	`deföed
(
NDEBUG
Ë|| deföed(
SQLITE_TEST
)

220 
Pgno
 
	`sqlôe3PagîPagíumbî
(
DbPage
*);

221 
	`sqlôe3PagîIswrôóbÀ
(
DbPage
*);

223 #ifde‡
SQLITE_TEST


224 *
	`sqlôe3PagîSèts
(
Pagî
*);

225 
	`sqlôe3PagîRefdump
(
Pagî
*);

226 
	`dißbÀ_simuœãd_io_îr‹s
();

227 
	`íabÀ_simuœãd_io_îr‹s
();

229 
	#dißbÀ_simuœãd_io_îr‹s
()

	)

230 
	#íabÀ_simuœãd_io_îr‹s
()

	)

	@pcache.c

14 
	~"sqlôeI¡.h
"

42 
	sPCache
 {

43 
PgHdr
 *
	mpDúty
, *
	mpDútyTaû
;

44 
PgHdr
 *
	mpSyn˚d
;

45 
	mnRefSum
;

46 
	mszCache
;

47 
	mszSpûl
;

48 
	mszPage
;

49 
	mszExåa
;

50 
u8
 
	mbPurgóbÀ
;

51 
u8
 
	meCª©e
;

52 (*
	mxSåess
)(*,
	mPgHdr
*);

53 *
	mpSåess
;

54 
sqlôe3_pˇche
 *
	mpCache
;

66 #i‡
deföed
(
SQLITE_DEBUG
) && 0

67 
	gsqlôe3PˇcheTø˚
 = 2;

68 
	gsqlôe3PˇcheMxDump
 = 9999;

69 
	#pˇcheTø˚
(
X
Ëif(
sqlôe3PˇcheTø˚
){
sqlôe3DebugPrötf
 X;}

	)

70 
	$pˇcheDump
(
PCache
 *
pCache
){

71 
N
;

72 
i
, 
j
;

73 
sqlôe3_pˇche_∑ge
 *
pLowî
;

74 
PgHdr
 *
pPg
;

75 *
a
;

77 if–
sqlôe3PˇcheTø˚
<2 ) ;

78 if–
pCache
->pCache==0 ) ;

79 
N
 = 
	`sqlôe3PˇchePagecou¡
(
pCache
);

80 if–
N
>
sqlôe3PˇcheMxDump
 ) N = sqlite3PcacheMxDump;

81 
i
=1; i<=
N
; i++){

82 
pLowî
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
i
, 0);

83 if–
pLowî
==0 ) ;

84 
pPg
 = (
PgHdr
*)
pLowî
->
pExåa
;

85 
	`¥ötf
("%3d:ÇRe‡%2d flg†%02x d©®", 
i
, 
pPg
->
nRef
,ÖPg->
Êags
);

86 
a
 = (*)
pLowî
->
pBuf
;

87 
j
=0; j<12; j++Ë
	`¥ötf
("%02x", 
a
[j]);

88 
	`¥ötf
("\n");

89 if–
pPg
->
pPage
==0 ){

90 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
pCache
->pCache, 
pLowî
, 0);

93 
	}
}

95 
	#pˇcheTø˚
(
X
)

	)

96 
	#pˇcheDump
(
X
)

	)

108 #i‡
SQLITE_DEBUG


109 
	$sqlôe3PˇchePageS™ôy
(
PgHdr
 *
pPg
){

110 
PCache
 *
pCache
;

111 
	`as£π
–
pPg
!=0 );

112 
	`as£π
–
pPg
->
pgno
>0 );

113 
pCache
 = 
pPg
->pCache;

114 
	`as£π
–
pCache
!=0 );

115 if–
pPg
->
Êags
 & 
PGHDR_CLEAN
 ){

116 
	`as£π
–(
pPg
->
Êags
 & 
PGHDR_DIRTY
)==0 );

117 
	`as£π
–
pCache
->
pDúty
!=
pPg
 );

118 
	`as£π
–
pCache
->
pDútyTaû
!=
pPg
 );

121 if–
pPg
->
Êags
 & 
PGHDR_WRITEABLE
 ){

122 
	`as£π
–
pPg
->
Êags
 & 
PGHDR_DIRTY
 );

142 
	}
}

149 
	#PCACHE_DIRTYLIST_REMOVE
 1

	)

150 
	#PCACHE_DIRTYLIST_ADD
 2

	)

151 
	#PCACHE_DIRTYLIST_FRONT
 3

	)

159 
	$pˇcheM™ageDútyLi°
(
PgHdr
 *
pPage
, 
u8
 
addRemove
){

160 
PCache
 *
p
 = 
pPage
->
pCache
;

162 
	`pˇcheTø˚
(("%p.DIRTYLIST.%†%d\n", 
p
,

163 
addRemove
==1 ? "REMOVE" :áddRemove==2 ? "ADD" : "FRONT",

164 
pPage
->
pgno
));

165 if–
addRemove
 & 
PCACHE_DIRTYLIST_REMOVE
 ){

166 
	`as£π
–
pPage
->
pDútyNext
 ||ÖPage==
p
->
pDútyTaû
 );

167 
	`as£π
–
pPage
->
pDútyPªv
 ||ÖPage==
p
->
pDúty
 );

170 if–
p
->
pSyn˚d
==
pPage
 ){

171 
p
->
pSyn˚d
 = 
pPage
->
pDútyPªv
;

174 if–
pPage
->
pDútyNext
 ){

175 
pPage
->
pDútyNext
->
pDútyPªv
 =ÖPage->pDirtyPrev;

177 
	`as£π
–
pPage
==
p
->
pDútyTaû
 );

178 
p
->
pDútyTaû
 = 
pPage
->
pDútyPªv
;

180 if–
pPage
->
pDútyPªv
 ){

181 
pPage
->
pDútyPªv
->
pDútyNext
 =ÖPage->pDirtyNext;

187 
	`as£π
–
pPage
==
p
->
pDúty
 );

188 
p
->
pDúty
 = 
pPage
->
pDútyNext
;

189 
	`as£π
–
p
->
bPurgóbÀ
 ||Ö->
eCª©e
==2 );

190 if–
p
->
pDúty
==0 ){

191 
	`as£π
–
p
->
bPurgóbÀ
==0 ||Ö->
eCª©e
==1 );

192 
p
->
eCª©e
 = 2;

195 
pPage
->
pDútyNext
 = 0;

196 
pPage
->
pDútyPªv
 = 0;

198 if–
addRemove
 & 
PCACHE_DIRTYLIST_ADD
 ){

199 
	`as£π
–
pPage
->
pDútyNext
==0 &&ÖPage->
pDútyPªv
==0 && 
p
->
pDúty
!=pPage );

201 
pPage
->
pDútyNext
 = 
p
->
pDúty
;

202 if–
pPage
->
pDútyNext
 ){

203 
	`as£π
–
pPage
->
pDútyNext
->
pDútyPªv
==0 );

204 
pPage
->
pDútyNext
->
pDútyPªv
 =ÖPage;

206 
p
->
pDútyTaû
 = 
pPage
;

207 if–
p
->
bPurgóbÀ
 ){

208 
	`as£π
–
p
->
eCª©e
==2 );

209 
p
->
eCª©e
 = 1;

212 
p
->
pDúty
 = 
pPage
;

219 if–!
p
->
pSyn˚d


220 && 0==(
pPage
->
Êags
&
PGHDR_NEED_SYNC
)

222 
p
->
pSyn˚d
 = 
pPage
;

225 
	`pˇcheDump
(
p
);

226 
	}
}

232 
	$pˇcheU≈ö
(
PgHdr
 *
p
){

233 if–
p
->
pCache
->
bPurgóbÀ
 ){

234 
	`pˇcheTø˚
(("%p.UNPIN %d\n", 
p
->
pCache
,Ö->
pgno
));

235 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
p
->
pCache
->pCache,Ö->
pPage
, 0);

236 
	`pˇcheDump
(
p
->
pCache
);

238 
	}
}

244 
	$numbîOfCachePages
(
PCache
 *
p
){

245 if–
p
->
szCache
>=0 ){

248  
p
->
szCache
;

253  ()((-1024*(
i64
)
p
->
szCache
)/’->
szPage
+p->
szExåa
));

255 
	}
}

262 
	$sqlôe3PˇcheInôülize
(){

263 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xInô
==0 ){

267 
	`sqlôe3PCacheSëDeÁu…
();

269  
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xInô
(sqlôe3GlobÆC⁄fig.pˇche2.
pArg
);

270 
	}
}

271 
	$sqlôe3PˇcheShutdown
(){

272 if–
sqlôe3GlobÆC⁄fig
.
pˇche2
.
xShutdown
 ){

274 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xShutdown
(sqlôe3GlobÆC⁄fig.pˇche2.
pArg
);

276 
	}
}

281 
	$sqlôe3PˇcheSize
(){  (
PCache
); 
	}
}

289 
sqlôe3PˇcheO≥n
(

290 
szPage
,

291 
szExåa
,

292 
bPurgóbÀ
,

293 (*
xSåess
)(*,
PgHdr
*),

294 *
pSåess
,

295 
PCache
 *
p


297 
	`mem£t
(
p
, 0, (
PCache
));

298 
p
->
szPage
 = 1;

299 
p
->
szExåa
 = szExtra;

300 
p
->
bPurgóbÀ
 = bPurgeable;

301 
p
->
eCª©e
 = 2;

302 
p
->
xSåess
 = xStress;

303 
p
->
pSåess
 =ÖStress;

304 
p
->
szCache
 = 100;

305 
p
->
szSpûl
 = 1;

306 
	`pˇcheTø˚
(("%p.OPEN szPagê%d bPurgóbÀ %d\n",
p
,
szPage
,
bPurgóbÀ
));

307  
	`sqlôe3PˇcheSëPageSize
(
p
, 
szPage
);

308 
	}
}

314 
	$sqlôe3PˇcheSëPageSize
(
PCache
 *
pCache
, 
szPage
){

315 
	`as£π
–
pCache
->
nRefSum
==0 &&ÖCache->
pDúty
==0 );

316 if–
pCache
->
szPage
 ){

317 
sqlôe3_pˇche
 *
pNew
;

318 
pNew
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCª©e
(

319 
szPage
, 
pCache
->
szExåa
 + 
	`ROUND8
((
PgHdr
)),

320 
pCache
->
bPurgóbÀ


322 if–
pNew
==0 )  
SQLITE_NOMEM_BKPT
;

323 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCachesize
(
pNew
, 
	`numbîOfCachePages
(
pCache
));

324 if–
pCache
->pCache ){

325 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xDe°roy
(
pCache
->pCache);

327 
pCache
->pCachê
pNew
;

328 
pCache
->
szPage
 = szPage;

329 
	`pˇcheTø˚
(("%p.PAGESIZE %d\n",
pCache
,
szPage
));

331  
SQLITE_OK
;

332 
	}
}

358 
sqlôe3_pˇche_∑ge
 *
	$sqlôe3PˇcheFëch
(

359 
PCache
 *
pCache
,

360 
Pgno
 
pgno
,

361 
¸óãFœg


363 
eCª©e
;

364 
sqlôe3_pˇche_∑ge
 *
pRes
;

366 
	`as£π
–
pCache
!=0 );

367 
	`as£π
–
pCache
->pCache!=0 );

368 
	`as£π
–
¸óãFœg
==3 || createFlag==0 );

369 
	`as£π
–
pgno
>0 );

370 
	`as£π
–
pCache
->
eCª©e
==(’Cache->
bPurgóbÀ
 &&ÖCache->
pDúty
) ? 1 : 2) );

379 
eCª©e
 = 
¸óãFœg
 & 
pCache
->eCreate;

380 
	`as£π
–
eCª©e
==0 ||ÉCreate==1 ||ÉCreate==2 );

381 
	`as£π
–
¸óãFœg
==0 || 
pCache
->
eCª©e
==eCreate );

382 
	`as£π
–
¸óãFœg
==0 || 
eCª©e
==1+(!
pCache
->
bPurgóbÀ
||!pCache->
pDúty
) );

383 
pRes
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
pgno
, 
eCª©e
);

384 
	`pˇcheTø˚
(("%p.FETCH %d%†‘esu…: %p)\n",
pCache
,
pgno
,

385 
¸óãFœg
?" cª©e":"",
pRes
));

386  
pRes
;

387 
	}
}

400 
	$sqlôe3PˇcheFëchSåess
(

401 
PCache
 *
pCache
,

402 
Pgno
 
pgno
,

403 
sqlôe3_pˇche_∑ge
 **
µPage


405 
PgHdr
 *
pPg
;

406 if–
pCache
->
eCª©e
==2 )  0;

408 if–
	`sqlôe3PˇchePagecou¡
(
pCache
)>pCache->
szSpûl
 ){

418 
pPg
=
pCache
->
pSyn˚d
;

419 
pPg
 && (pPg->
nRef
 || (pPg->
Êags
&
PGHDR_NEED_SYNC
));

420 
pPg
ıPg->
pDútyPªv


422 
pCache
->
pSyn˚d
 = 
pPg
;

423 if–!
pPg
 ){

424 
pPg
=
pCache
->
pDútyTaû
;ÖPg &&ÖPg->
nRef
;ÖPgıPg->
pDútyPªv
);

426 if–
pPg
 ){

427 
rc
;

428 #ifde‡
SQLITE_LOG_CACHE_SPILL


429 
	`sqlôe3_log
(
SQLITE_FULL
,

431 
pPg
->
pgno
,Ögno,

432 
sqlôe3GlobÆC⁄fig
.
pˇche
.
	`xPagecou¡
(
pCache
->pCache),

433 
	`numbîOfCachePages
(
pCache
));

435 
	`pˇcheTø˚
(("%p.SPILL %d\n",
pCache
,
pPg
->
pgno
));

436 
rc
 = 
pCache
->
	`xSåess
’Cache->
pSåess
, 
pPg
);

437 
	`pˇcheDump
(
pCache
);

438 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 ){

439  
rc
;

443 *
µPage
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache, 
pgno
, 2);

444  *
µPage
==0 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_OK
;

445 
	}
}

456 
SQLITE_NOINLINE
 
PgHdr
 *
	$pˇcheFëchFöishWôhInô
(

457 
PCache
 *
pCache
,

458 
Pgno
 
pgno
,

459 
sqlôe3_pˇche_∑ge
 *
pPage


461 
PgHdr
 *
pPgHdr
;

462 
	`as£π
–
pPage
!=0 );

463 
pPgHdr
 = (
PgHdr
*)
pPage
->
pExåa
;

464 
	`as£π
–
pPgHdr
->
pPage
==0 );

465 
	`mem£t
(
pPgHdr
, 0, (
PgHdr
));

466 
pPgHdr
->
pPage
 =ÖPage;

467 
pPgHdr
->
pD©a
 = 
pPage
->
pBuf
;

468 
pPgHdr
->
pExåa
 = (*)&pPgHdr[1];

469 
	`mem£t
(
pPgHdr
->
pExåa
, 0, 
pCache
->
szExåa
);

470 
pPgHdr
->
pCache
 =ÖCache;

471 
pPgHdr
->
pgno
 =Ögno;

472 
pPgHdr
->
Êags
 = 
PGHDR_CLEAN
;

473  
	`sqlôe3PˇcheFëchFöish
(
pCache
,
pgno
,
pPage
);

474 
	}
}

482 
PgHdr
 *
	$sqlôe3PˇcheFëchFöish
(

483 
PCache
 *
pCache
,

484 
Pgno
 
pgno
,

485 
sqlôe3_pˇche_∑ge
 *
pPage


487 
PgHdr
 *
pPgHdr
;

489 
	`as£π
–
pPage
!=0 );

490 
pPgHdr
 = (
PgHdr
 *)
pPage
->
pExåa
;

492 if–!
pPgHdr
->
pPage
 ){

493  
	`pˇcheFëchFöishWôhInô
(
pCache
, 
pgno
, 
pPage
);

495 
pCache
->
nRefSum
++;

496 
pPgHdr
->
nRef
++;

497 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
pPgHdr
) );

498  
pPgHdr
;

499 
	}
}

505 
SQLITE_NOINLINE
 
	$sqlôe3PˇcheRñó£
(
PgHdr
 *
p
){

506 
	`as£π
–
p
->
nRef
>0 );

507 
p
->
pCache
->
nRefSum
--;

508 if–(--
p
->
nRef
)==0 ){

509 if–
p
->
Êags
&
PGHDR_CLEAN
 ){

510 
	`pˇcheU≈ö
(
p
);

511 }if–
p
->
pDútyPªv
!=0 ){

516 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_FRONT
);

519 
	}
}

524 
	$sqlôe3PˇcheRef
(
PgHdr
 *
p
){

525 
	`as£π
(
p
->
nRef
>0);

526 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

527 
p
->
nRef
++;

528 
p
->
pCache
->
nRefSum
++;

529 
	}
}

536 
	$sqlôe3PˇcheDr›
(
PgHdr
 *
p
){

537 
	`as£π
–
p
->
nRef
==1 );

538 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

539 if–
p
->
Êags
&
PGHDR_DIRTY
 ){

540 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_REMOVE
);

542 
p
->
pCache
->
nRefSum
--;

543 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xU≈ö
(
p
->
pCache
->pCache,Ö->
pPage
, 1);

544 
	}
}

550 
	$sqlôe3PˇcheMakeDúty
(
PgHdr
 *
p
){

551 
	`as£π
–
p
->
nRef
>0 );

552 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

553 if–
p
->
Êags
 & (
PGHDR_CLEAN
|
PGHDR_DONT_WRITE
) ){

554 
p
->
Êags
 &~
PGHDR_DONT_WRITE
;

555 if–
p
->
Êags
 & 
PGHDR_CLEAN
 ){

556 
p
->
Êags
 ^(
PGHDR_DIRTY
|
PGHDR_CLEAN
);

557 
	`pˇcheTø˚
(("%p.DIRTY %d\n",
p
->
pCache
,p->
pgno
));

558 
	`as£π
–(
p
->
Êags
 & (
PGHDR_DIRTY
|
PGHDR_CLEAN
))==PGHDR_DIRTY );

561 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xRemoveLru
(
p
->
pPage
);

562 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_ADD
);

564 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

566 
	}
}

572 
	$sqlôe3PˇcheMakeCÀ™
(
PgHdr
 *
p
){

573 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

574 if–
	`ALWAYS
((
p
->
Êags
 & 
PGHDR_DIRTY
)!=0) ){

575 
	`as£π
–(
p
->
Êags
 & 
PGHDR_CLEAN
)==0 );

576 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_REMOVE
);

577 
p
->
Êags
 &~(
PGHDR_DIRTY
|
PGHDR_NEED_SYNC
|
PGHDR_WRITEABLE
);

578 
p
->
Êags
 |
PGHDR_CLEAN
;

579 
	`pˇcheTø˚
(("%p.CLEAN %d\n",
p
->
pCache
,p->
pgno
));

580 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

581 if–
p
->
nRef
==0 ){

582 
	`pˇcheU≈ö
(
p
);

585 
	}
}

590 
	$sqlôe3PˇcheCÀ™AŒ
(
PCache
 *
pCache
){

591 
PgHdr
 *
p
;

592 
	`pˇcheTø˚
(("%p.CLEAN-ALL\n",
pCache
));

593  (
p
 = 
pCache
->
pDúty
)!=0 ){

594 
	`sqlôe3PˇcheMakeCÀ™
(
p
);

596 
	}
}

601 
	$sqlôe3PˇcheCÀ¨WrôabÀ
(
PCache
 *
pCache
){

602 
PgHdr
 *
p
;

603 
	`pˇcheTø˚
(("%p.CLEAR-WRITEABLE\n",
pCache
));

604 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

605 
p
->
Êags
 &~(
PGHDR_NEED_SYNC
|
PGHDR_WRITEABLE
);

607 
pCache
->
pSyn˚d
 =ÖCache->
pDútyTaû
;

608 
	}
}

613 
	$sqlôe3PˇcheCÀ¨SyncFœgs
(
PCache
 *
pCache
){

614 
PgHdr
 *
p
;

615 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

616 
p
->
Êags
 &~
PGHDR_NEED_SYNC
;

618 
pCache
->
pSyn˚d
 =ÖCache->
pDútyTaû
;

619 
	}
}

624 
	$sqlôe3PˇcheMove
(
PgHdr
 *
p
, 
Pgno
 
√wPgno
){

625 
PCache
 *
pCache
 = 
p
->pCache;

626 
	`as£π
–
p
->
nRef
>0 );

627 
	`as£π
–
√wPgno
>0 );

628 
	`as£π
–
	`sqlôe3PˇchePageS™ôy
(
p
) );

629 
	`pˇcheTø˚
(("%p.MOVE %d -> %d\n",
pCache
,
p
->
pgno
,
√wPgno
));

630 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xRekey
(
pCache
->pCache, 
p
->
pPage
,Ö->
pgno
,
√wPgno
);

631 
p
->
pgno
 = 
√wPgno
;

632 if–(
p
->
Êags
&
PGHDR_DIRTY
Ë&& (p->Êags&
PGHDR_NEED_SYNC
) ){

633 
	`pˇcheM™ageDútyLi°
(
p
, 
PCACHE_DIRTYLIST_FRONT
);

635 
	}
}

646 
	$sqlôe3PˇcheTrunˇã
(
PCache
 *
pCache
, 
Pgno
 
pgno
){

647 if–
pCache
->pCache ){

648 
PgHdr
 *
p
;

649 
PgHdr
 *
pNext
;

650 
	`pˇcheTø˚
(("%p.TRUNCATE %d\n",
pCache
,
pgno
));

651 
p
=
pCache
->
pDúty
;Ö;Ö=
pNext
){

652 
pNext
 = 
p
->
pDútyNext
;

657 
	`as£π
–
p
->
pgno
>0 );

658 if–
p
->
pgno
>pgno ){

659 
	`as£π
–
p
->
Êags
&
PGHDR_DIRTY
 );

660 
	`sqlôe3PˇcheMakeCÀ™
(
p
);

663 if–
pgno
==0 && 
pCache
->
nRefSum
 ){

664 
sqlôe3_pˇche_∑ge
 *
pPage1
;

665 
pPage1
 = 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xFëch
(
pCache
->pCache,1,0);

666 if–
	`ALWAYS
(
pPage1
) ){

668 
	`mem£t
(
pPage1
->
pBuf
, 0, 
pCache
->
szPage
);

669 
pgno
 = 1;

672 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xTrunˇã
(
pCache
->pCache, 
pgno
+1);

674 
	}
}

679 
	$sqlôe3PˇcheClo£
(
PCache
 *
pCache
){

680 
	`as£π
–
pCache
->pCache!=0 );

681 
	`pˇcheTø˚
(("%p.CLOSE\n",
pCache
));

682 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xDe°roy
(
pCache
->pCache);

683 
	}
}

688 
	$sqlôe3PˇcheCÀ¨
(
PCache
 *
pCache
){

689 
	`sqlôe3PˇcheTrunˇã
(
pCache
, 0);

690 
	}
}

696 
PgHdr
 *
	$pˇcheMîgeDútyLi°
(
PgHdr
 *
pA
, PgHd∏*
pB
){

697 
PgHdr
 
ªsu…
, *
pTaû
;

698 
pTaû
 = &
ªsu…
;

699 
	`as£π
–
pA
!=0 && 
pB
!=0 );

701 if–
pA
->
pgno
<
pB
->pgno ){

702 
pTaû
->
pDúty
 = 
pA
;

703 
pTaû
 = 
pA
;

704 
pA
 =ÖA->
pDúty
;

705 if–
pA
==0 ){

706 
pTaû
->
pDúty
 = 
pB
;

710 
pTaû
->
pDúty
 = 
pB
;

711 
pTaû
 = 
pB
;

712 
pB
 =ÖB->
pDúty
;

713 if–
pB
==0 ){

714 
pTaû
->
pDúty
 = 
pA
;

719  
ªsu…
.
pDúty
;

720 
	}
}

732 
	#N_SORT_BUCKET
 32

	)

733 
PgHdr
 *
	$pˇcheS‹tDútyLi°
(
PgHdr
 *
pIn
){

734 
PgHdr
 *
a
[
N_SORT_BUCKET
], *
p
;

735 
i
;

736 
	`mem£t
(
a
, 0, (a));

737  
pIn
 ){

738 
p
 = 
pIn
;

739 
pIn
 = 
p
->
pDúty
;

740 
p
->
pDúty
 = 0;

741 
i
=0; 
	`ALWAYS
(i<
N_SORT_BUCKET
-1); i++){

742 if–
a
[
i
]==0 ){

743 
a
[
i
] = 
p
;

746 
p
 = 
	`pˇcheMîgeDútyLi°
(
a
[
i
],Ö);

747 
a
[
i
] = 0;

750 if–
	`NEVER
(
i
==
N_SORT_BUCKET
-1) ){

754 
a
[
i
] = 
	`pˇcheMîgeDútyLi°
◊[i], 
p
);

757 
p
 = 
a
[0];

758 
i
=1; i<
N_SORT_BUCKET
; i++){

759 if–
a
[
i
]==0 ) ;

760 
p
 =Ö ? 
	`pˇcheMîgeDútyLi°
’, 
a
[
i
]) :á[i];

762  
p
;

763 
	}
}

768 
PgHdr
 *
	$sqlôe3PˇcheDútyLi°
(
PCache
 *
pCache
){

769 
PgHdr
 *
p
;

770 
p
=
pCache
->
pDúty
;Ö;Öı->
pDútyNext
){

771 
p
->
pDúty
 =Ö->
pDútyNext
;

773  
	`pˇcheS‹tDútyLi°
(
pCache
->
pDúty
);

774 
	}
}

782 
	$sqlôe3PˇcheRefCou¡
(
PCache
 *
pCache
){

783  
pCache
->
nRefSum
;

784 
	}
}

789 
	$sqlôe3PˇchePageRefcou¡
(
PgHdr
 *
p
){

790  
p
->
nRef
;

791 
	}
}

796 
	$sqlôe3PˇchePagecou¡
(
PCache
 *
pCache
){

797 
	`as£π
–
pCache
->pCache!=0 );

798  
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xPagecou¡
(
pCache
->pCache);

799 
	}
}

801 #ifde‡
SQLITE_TEST


805 
	$sqlôe3PˇcheGëCachesize
(
PCache
 *
pCache
){

806  
	`numbîOfCachePages
(
pCache
);

807 
	}
}

813 
	$sqlôe3PˇcheSëCachesize
(
PCache
 *
pCache
, 
mxPage
){

814 
	`as£π
–
pCache
->pCache!=0 );

815 
pCache
->
szCache
 = 
mxPage
;

816 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xCachesize
(
pCache
->pCache,

817 
	`numbîOfCachePages
(
pCache
));

818 
	}
}

825 
	$sqlôe3PˇcheSëSpûlsize
(
PCache
 *
p
, 
mxPage
){

826 
ªs
;

827 
	`as£π
–
p
->
pCache
!=0 );

828 if–
mxPage
 ){

829 if–
mxPage
<0 ){

830 
mxPage
 = ()((-1024*(
i64
)mxPage)/(
p
->
szPage
+p->
szExåa
));

832 
p
->
szSpûl
 = 
mxPage
;

834 
ªs
 = 
	`numbîOfCachePages
(
p
);

835 if–
ªs
<
p
->
szSpûl
 )Ñes =Ö->szSpill;

836  
ªs
;

837 
	}
}

842 
	$sqlôe3PˇcheShrök
(
PCache
 *
pCache
){

843 
	`as£π
–
pCache
->pCache!=0 );

844 
sqlôe3GlobÆC⁄fig
.
pˇche2
.
	`xShrök
(
pCache
->pCache);

845 
	}
}

851 
	$sqlôe3HódîSizePˇche
(){  
	`ROUND8
((
PgHdr
)); 
	}
}

857 
	$sqlôe3PCachePî˚¡Dúty
(
PCache
 *
pCache
){

858 
PgHdr
 *
pDúty
;

859 
nDúty
 = 0;

860 
nCache
 = 
	`numbîOfCachePages
(
pCache
);

861 
pDúty
=
pCache
->pDúty;ÖDúty;ÖDútyıDúty->
pDútyNext
Ë
nDúty
++;

862  
nCache
 ? ()(((
i64
)
nDúty
 * 100) /ÇCache) : 0;

863 
	}
}

865 #i‡
deföed
(
SQLITE_CHECK_PAGES
Ë|| deföed(
SQLITE_DEBUG
)

871 
sqlôe3PˇcheIãøãDúty
(
PCache
 *
pCache
, (*
xIãr
)(
PgHdr
 *)){

872 
PgHdr
 *
pDúty
;

873 
pDúty
=
pCache
->pDúty;ÖDúty;ÖDútyıDúty->
pDútyNext
){

874 
	`xIãr
(
pDúty
);

876 
	}
}

	@pcache.h

16 #i‚de‡
_PCACHE_H_


18 
PgHdr
 
	tPgHdr
;

19 
PCache
 
	tPCache
;

26 
	sPgHdr
 {

27 
sqlôe3_pˇche_∑ge
 *
	mpPage
;

28 *
	mpD©a
;

29 *
	mpExåa
;

30 
PgHdr
 *
	mpDúty
;

31 
Pagî
 *
	mpPagî
;

32 
Pgno
 
	mpgno
;

33 #ifde‡
SQLITE_CHECK_PAGES


34 
u32
 
	m∑geHash
;

36 
u16
 
	mÊags
;

42 
i16
 
	mnRef
;

43 
PCache
 *
	mpCache
;

45 
PgHdr
 *
	mpDútyNext
;

46 
PgHdr
 *
	mpDútyPªv
;

50 
	#PGHDR_CLEAN
 0x001

	)

51 
	#PGHDR_DIRTY
 0x002

	)

52 
	#PGHDR_WRITEABLE
 0x004

	)

53 
	#PGHDR_NEED_SYNC
 0x008

	)

55 
	#PGHDR_DONT_WRITE
 0x010

	)

56 
	#PGHDR_MMAP
 0x020

	)

58 
	#PGHDR_WAL_APPEND
 0x040

	)

61 
sqlôe3PˇcheInôülize
();

62 
sqlôe3PˇcheShutdown
();

67 
sqlôe3PCacheBuf„rSëup
(*, 
sz
, 
n
);

73 
sqlôe3PˇcheO≥n
(

74 
szPage
,

75 
szExåa
,

76 
bPurgóbÀ
,

77 (*
xSåess
)(*, 
PgHdr
*),

78 *
pSåess
,

79 
PCache
 *
pToInô


83 
	`sqlôe3PˇcheSëPageSize
(
PCache
 *, );

88 
	`sqlôe3PˇcheSize
();

93 
sqlôe3_pˇche_∑ge
 *
	`sqlôe3PˇcheFëch
(
PCache
*, 
Pgno
, 
¸óãFœg
);

94 
	`sqlôe3PˇcheFëchSåess
(
PCache
*, 
Pgno
, 
sqlôe3_pˇche_∑ge
**);

95 
PgHdr
 *
	`sqlôe3PˇcheFëchFöish
(
PCache
*, 
Pgno
, 
sqlôe3_pˇche_∑ge
 *
pPage
);

96 
	`sqlôe3PˇcheRñó£
(
PgHdr
*);

98 
	`sqlôe3PˇcheDr›
(
PgHdr
*);

99 
	`sqlôe3PˇcheMakeDúty
(
PgHdr
*);

100 
	`sqlôe3PˇcheMakeCÀ™
(
PgHdr
*);

101 
	`sqlôe3PˇcheCÀ™AŒ
(
PCache
*);

102 
	`sqlôe3PˇcheCÀ¨WrôabÀ
(
PCache
*);

105 
	`sqlôe3PˇcheMove
(
PgHdr
*, 
Pgno
);

108 
	`sqlôe3PˇcheTrunˇã
(
PCache
*, 
Pgno
 
x
);

111 
PgHdr
 *
	`sqlôe3PˇcheDútyLi°
(
PCache
*);

114 
	`sqlôe3PˇcheClo£
(
PCache
*);

117 
	`sqlôe3PˇcheCÀ¨SyncFœgs
(
PCache
 *);

120 
	`sqlôe3PˇcheCÀ¨
(
PCache
*);

123 
	`sqlôe3PˇcheRefCou¡
(
PCache
*);

126 
	`sqlôe3PˇcheRef
(
PgHdr
*);

128 
	`sqlôe3PˇchePageRefcou¡
(
PgHdr
*);

131 
	`sqlôe3PˇchePagecou¡
(
PCache
*);

133 #i‡
	`deföed
(
SQLITE_CHECK_PAGES
Ë|| deföed(
SQLITE_DEBUG
)

138 
	`sqlôe3PˇcheIãøãDúty
(
PCache
 *
pCache
, (*
xIãr
)(
PgHdr
 *));

141 #i‡
	`deföed
(
SQLITE_DEBUG
)

143 
	`sqlôe3PˇchePageS™ôy
(
PgHdr
*);

152 
	`sqlôe3PˇcheSëCachesize
(
PCache
 *, );

153 #ifde‡
SQLITE_TEST


154 
	`sqlôe3PˇcheGëCachesize
(
PCache
 *);

162 
	`sqlôe3PˇcheSëSpûlsize
(
PCache
 *, );

165 
	`sqlôe3PˇcheShrök
(
PCache
*);

167 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


169 
	`sqlôe3PˇcheRñó£Mem‹y
();

172 #ifde‡
SQLITE_TEST


173 
	`sqlôe3PˇcheSèts
(*,*,*,*);

176 
	`sqlôe3PCacheSëDeÁu…
();

179 
	`sqlôe3HódîSizePˇche
();

180 
	`sqlôe3HódîSizePˇche1
();

183 
	`sqlôe3PCachePî˚¡Dúty
(
PCache
*);

	@pcache1.c

83 
	~"sqlôeI¡.h
"

85 
PCache1
 
	tPCache1
;

86 
PgHdr1
 
	tPgHdr1
;

87 
PgFªe¶Ÿ
 
	tPgFªe¶Ÿ
;

88 
PGroup
 
	tPGroup
;

96 
	sPgHdr1
 {

97 
sqlôe3_pˇche_∑ge
 
	m∑ge
;

98 
	miKey
;

99 
u8
 
	misPö√d
;

100 
u8
 
	misBulkLoˇl
;

101 
u8
 
	misAnch‹
;

102 
PgHdr1
 *
	mpNext
;

103 
PCache1
 *
	mpCache
;

104 
u32
 
	mnTouch
;

105 
PgHdr1
 *
	mpLruNext
;

106 
PgHdr1
 *
	mpLruPªv
;

131 
	sPGroup
 {

132 
sqlôe3_muãx
 *
	mmuãx
;

133 
	mnMaxPage
;

134 
	mnMöPage
;

135 
	mmxPö√d
;

136 
	mnCuºítPage
;

137 
PgHdr1
 *
	mmidPoöt
;

138 
PgHdr1
 
	mÃu
;

149 
	sPCache1
 {

155 
PGroup
 *
	mpGroup
;

156 
	mszPage
;

157 
	mszExåa
;

158 
	mszAŒoc
;

159 
	mbPurgóbÀ
;

160 
	mnMö
;

161 
	mnMax
;

162 
	mn90p˘
;

163 
	miMaxKey
;

168 
	mnRecy˛abÀ
;

169 
	mnPage
;

170 
	mnHash
;

171 
	mnCÀ™Page
;

172 
PgHdr1
 **
	m≠Hash
;

173 
PgHdr1
 *
	mpFªe
;

174 *
	mpBulk
;

181 
	sPgFªe¶Ÿ
 {

182 
PgFªe¶Ÿ
 *
	mpNext
;

188 
SQLITE_WSD
 
	sPCacheGlobÆ
 {

189 
PGroup
 
	mgΩ
;

196 
	misInô
;

197 
	m£∑øãCache
;

198 
	mnInôPage
;

199 
	mszSlŸ
;

200 
	mnSlŸ
;

201 
	mnRe£rve
;

202 *
	mpSèπ
, *
	mpEnd
;

204 
sqlôe3_muãx
 *
	mmuãx
;

205 
PgFªe¶Ÿ
 *
	mpFªe
;

206 
	mnFªeSlŸ
;

211 
	mbUndîPªssuª
;

212 } 
	gpˇche1_g
;

219 
	#pˇche1
 (
	`GLOBAL
(
PCacheGlobÆ
, 
pˇche1_g
))

	)

224 #i‡!
deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
Ë|| 
SQLITE_THREADSAFE
==0

225 
	#pˇche1E¡îMuãx
(
X
Ë
	`as£π
((X)->
muãx
==0)

	)

226 
	#pˇche1LóveMuãx
(
X
Ë
	`as£π
((X)->
muãx
==0)

	)

227 
	#PCACHE1_MIGHT_USE_GROUP_MUTEX
 0

	)

229 
	#pˇche1E¡îMuãx
(
X
Ë
	`sqlôe3_muãx_íãr
((X)->
muãx
)

	)

230 
	#pˇche1LóveMuãx
(
X
Ë
	`sqlôe3_muãx_Àave
((X)->
muãx
)

	)

231 
	#PCACHE1_MIGHT_USE_GROUP_MUTEX
 1

	)

247 
	$sqlôe3PCacheBuf„rSëup
(*
pBuf
, 
sz
, 
n
){

248 if–
pˇche1
.
isInô
 ){

249 
PgFªe¶Ÿ
 *
p
;

250 if–
pBuf
==0 ) 
sz
 = 
n
 = 0;

251 
sz
 = 
	`ROUNDDOWN8
(sz);

252 
pˇche1
.
szSlŸ
 = 
sz
;

253 
pˇche1
.
nSlŸ
 =Öˇche1.
nFªeSlŸ
 = 
n
;

254 
pˇche1
.
nRe£rve
 = 
n
>90 ? 10 : (n/10 + 1);

255 
pˇche1
.
pSèπ
 = 
pBuf
;

256 
pˇche1
.
pFªe
 = 0;

257 
pˇche1
.
bUndîPªssuª
 = 0;

258  
n
-- ){

259 
p
 = (
PgFªe¶Ÿ
*)
pBuf
;

260 
p
->
pNext
 = 
pˇche1
.
pFªe
;

261 
pˇche1
.
pFªe
 = 
p
;

262 
pBuf
 = (*)&((*ÌBuf)[
sz
];

264 
pˇche1
.
pEnd
 = 
pBuf
;

266 
	}
}

272 
	$pˇche1InôBulk
(
PCache1
 *
pCache
){

273 
i64
 
szBulk
;

274 *
zBulk
;

275 if–
pˇche1
.
nInôPage
==0 )  0;

277 if–
pCache
->
nMax
<3 )  0;

278 
	`sqlôe3BegöBíignMÆloc
();

279 if–
pˇche1
.
nInôPage
>0 ){

280 
szBulk
 = 
pCache
->
szAŒoc
 * (
i64
)
pˇche1
.
nInôPage
;

282 
szBulk
 = -1024 * (
i64
)
pˇche1
.
nInôPage
;

284 if–
szBulk
 > 
pCache
->
szAŒoc
*(
i64
ÌCache->
nMax
 ){

285 
szBulk
 = 
pCache
->
szAŒoc
*pCache->
nMax
;

287 
zBulk
 = 
pCache
->
pBulk
 = 
	`sqlôe3MÆloc
–
szBulk
 );

288 
	`sqlôe3EndBíignMÆloc
();

289 if–
zBulk
 ){

290 
nBulk
 = 
	`sqlôe3MÆlocSize
(
zBulk
)/
pCache
->
szAŒoc
;

291 
i
;

292 
i
=0; i<
nBulk
; i++){

293 
PgHdr1
 *
pX
 = (PgHdr1*)&
zBulk
[
pCache
->
szPage
];

294 
pX
->
∑ge
.
pBuf
 = 
zBulk
;

295 
pX
->
∑ge
.
pExåa
 = &pX[1];

296 
pX
->
isBulkLoˇl
 = 1;

297 
pX
->
isAnch‹
 = 0;

298 
pX
->
pNext
 = 
pCache
->
pFªe
;

299 
pCache
->
pFªe
 = 
pX
;

300 
zBulk
 +
pCache
->
szAŒoc
;

303  
pCache
->
pFªe
!=0;

304 
	}
}

315 *
	$pˇche1AŒoc
(
nByã
){

316 *
p
 = 0;

317 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
gΩ
.
muãx
) );

318 if–
nByã
<=
pˇche1
.
szSlŸ
 ){

319 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

320 
p
 = (
PgHdr1
 *)
pˇche1
.
pFªe
;

321 if–
p
 ){

322 
pˇche1
.
pFªe
 =Öˇche1.pFªe->
pNext
;

323 
pˇche1
.
nFªeSlŸ
--;

324 
pˇche1
.
bUndîPªssuª
 =Öˇche1.
nFªeSlŸ
<pˇche1.
nRe£rve
;

325 
	`as£π
–
pˇche1
.
nFªeSlŸ
>=0 );

326 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PAGECACHE_SIZE
, 
nByã
);

327 
	`sqlôe3SètusUp
(
SQLITE_STATUS_PAGECACHE_USED
, 1);

329 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

331 if–
p
==0 ){

335 
p
 = 
	`sqlôe3MÆloc
(
nByã
);

336 #i‚de‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


337 if–
p
 ){

338 
sz
 = 
	`sqlôe3MÆlocSize
(
p
);

339 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

340 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PAGECACHE_SIZE
, 
nByã
);

341 
	`sqlôe3SètusUp
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, 
sz
);

342 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

345 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_PCACHE
);

347  
p
;

348 
	}
}

353 
	$pˇche1Fªe
(*
p
){

354 if–
p
==0 ) ;

355 if–
	`SQLITE_WITHIN
(
p
, 
pˇche1
.
pSèπ
,Öˇche1.
pEnd
) ){

356 
PgFªe¶Ÿ
 *
pSlŸ
;

357 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

358 
	`sqlôe3SètusDown
(
SQLITE_STATUS_PAGECACHE_USED
, 1);

359 
pSlŸ
 = (
PgFªe¶Ÿ
*)
p
;

360 
pSlŸ
->
pNext
 = 
pˇche1
.
pFªe
;

361 
pˇche1
.
pFªe
 = 
pSlŸ
;

362 
pˇche1
.
nFªeSlŸ
++;

363 
pˇche1
.
bUndîPªssuª
 =Öˇche1.
nFªeSlŸ
<pˇche1.
nRe£rve
;

364 
	`as£π
–
pˇche1
.
nFªeSlŸ
<ıˇche1.
nSlŸ
 );

365 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

367 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_PCACHE
) );

368 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

369 #i‚de‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


371 
nFªed
 = 0;

372 
nFªed
 = 
	`sqlôe3MÆlocSize
(
p
);

373 
	`sqlôe3_muãx_íãr
(
pˇche1
.
muãx
);

374 
	`sqlôe3SètusDown
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, 
nFªed
);

375 
	`sqlôe3_muãx_Àave
(
pˇche1
.
muãx
);

378 
	`sqlôe3_‰ì
(
p
);

380 
	}
}

382 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


386 
	$pˇche1MemSize
(*
p
){

387 if–
p
>=
pˇche1
.
pSèπ
 &&Ö<pˇche1.
pEnd
 ){

388  
pˇche1
.
szSlŸ
;

390 
iSize
;

391 
	`as£π
–
	`sqlôe3MemdebugHasTy≥
(
p
, 
MEMTYPE_PCACHE
) );

392 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_HEAP
);

393 
iSize
 = 
	`sqlôe3MÆlocSize
(
p
);

394 
	`sqlôe3MemdebugSëTy≥
(
p
, 
MEMTYPE_PCACHE
);

395  
iSize
;

397 
	}
}

403 
PgHdr1
 *
	$pˇche1AŒocPage
(
PCache1
 *
pCache
, 
bíignMÆloc
){

404 
PgHdr1
 *
p
 = 0;

405 *
pPg
;

407 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

408 if–
pCache
->
pFªe
 || (pCache->
nPage
==0 && 
	`pˇche1InôBulk
(pCache)) ){

409 
p
 = 
pCache
->
pFªe
;

410 
pCache
->
pFªe
 = 
p
->
pNext
;

411 
p
->
pNext
 = 0;

413 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


417 
	`as£π
–
pˇche1
.
£∑øãCache
==0 );

418 
	`as£π
–
pCache
->
pGroup
==&
pˇche1
.
gΩ
 );

419 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

421 if–
bíignMÆloc
 ){ 
	`sqlôe3BegöBíignMÆloc
(); }

422 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


423 
pPg
 = 
	`pˇche1AŒoc
(
pCache
->
szPage
);

424 
p
 = 
	`sqlôe3MÆloc
((
PgHdr1
Ë+ 
pCache
->
szExåa
);

425 if–!
pPg
 || !
p
 ){

426 
	`pˇche1Fªe
(
pPg
);

427 
	`sqlôe3_‰ì
(
p
);

428 
pPg
 = 0;

431 
pPg
 = 
	`pˇche1AŒoc
(
pCache
->
szAŒoc
);

432 
p
 = (
PgHdr1
 *)&((
u8
 *)
pPg
)[
pCache
->
szPage
];

434 if–
bíignMÆloc
 ){ 
	`sqlôe3EndBíignMÆloc
(); }

435 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


436 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

438 if–
pPg
==0 )  0;

439 
p
->
∑ge
.
pBuf
 = 
pPg
;

440 
p
->
∑ge
.
pExåa
 = &p[1];

441 
p
->
isBulkLoˇl
 = 0;

442 
p
->
isAnch‹
 = 0;

444 if–
pCache
->
bPurgóbÀ
 ){

445 
pCache
->
pGroup
->
nCuºítPage
++;

447  
p
;

448 
	}
}

453 
	$pˇche1FªePage
(
PgHdr1
 *
p
){

454 
PCache1
 *
pCache
;

455 
	`as£π
–
p
!=0 );

456 
pCache
 = 
p
->pCache;

457 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pCache
->
pGroup
->
muãx
) );

458 if–
p
->
isBulkLoˇl
 ){

459 
p
->
pNext
 = 
pCache
->
pFªe
;

460 
pCache
->
pFªe
 = 
p
;

462 
	`pˇche1Fªe
(
p
->
∑ge
.
pBuf
);

463 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


464 
	`sqlôe3_‰ì
(
p
);

467 if–
pCache
->
bPurgóbÀ
 ){

468 
pCache
->
pGroup
->
nCuºítPage
--;

470 
	}
}

477 *
	$sqlôe3PageMÆloc
(
sz
){

478  
	`pˇche1AŒoc
(
sz
);

479 
	}
}

484 
	$sqlôe3PageFªe
(*
p
){

485 
	`pˇche1Fªe
(
p
);

486 
	}
}

505 
	$pˇche1UndîMem‹yPªssuª
(
PCache1
 *
pCache
){

506 if–
pˇche1
.
nSlŸ
 && (
pCache
->
szPage
+pCache->
szExåa
)<ıˇche1.
szSlŸ
 ){

507  
pˇche1
.
bUndîPªssuª
;

509  
	`sqlôe3HópNóæyFuŒ
();

511 
	}
}

522 
	$pˇche1ResizeHash
(
PCache1
 *
p
){

523 
PgHdr1
 **
≠New
;

524 
nNew
;

525 
i
;

527 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pGroup
->
muãx
) );

529 
nNew
 = 
p
->
nHash
*2;

530 if–
nNew
<256 ){

531 
nNew
 = 256;

534 
	`pˇche1LóveMuãx
(
p
->
pGroup
);

535 if–
p
->
nHash
 ){ 
	`sqlôe3BegöBíignMÆloc
(); }

536 
≠New
 = (
PgHdr1
 **)
	`sqlôe3MÆlocZîo
((PgHdr1 *)*
nNew
);

537 if–
p
->
nHash
 ){ 
	`sqlôe3EndBíignMÆloc
(); }

538 
	`pˇche1E¡îMuãx
(
p
->
pGroup
);

539 if–
≠New
 ){

540 
i
=0; i<
p
->
nHash
; i++){

541 
PgHdr1
 *
pPage
;

542 
PgHdr1
 *
pNext
 = 
p
->
≠Hash
[
i
];

543  (
pPage
 = 
pNext
)!=0 ){

544 
h
 = 
pPage
->
iKey
 % 
nNew
;

545 
pNext
 = 
pPage
->pNext;

546 
pPage
->
pNext
 = 
≠New
[
h
];

547 
≠New
[
h
] = 
pPage
;

550 
	`sqlôe3_‰ì
(
p
->
≠Hash
);

551 
p
->
≠Hash
 = 
≠New
;

552 
p
->
nHash
 = 
nNew
;

554 
	}
}

563 
PgHdr1
 *
	$pˇche1PöPage
(
PgHdr1
 *
pPage
){

564 
PCache1
 *
pCache
;

566 
	`as£π
–
pPage
!=0 );

567 
	`as£π
–
pPage
->
isPö√d
==0 );

568 
pCache
 = 
pPage
->pCache;

569 
	`as£π
–
pPage
->
pLruNext
 );

570 
	`as£π
–
pPage
->
pLruPªv
 );

571 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

579 
pPage
->
isPö√d
 = 1;

581 
pPage
->
nTouch
++;

582 
	`as£π
–
pPage
->
isAnch‹
==0 );

583 
	`as£π
–
pCache
->
pGroup
->
Ãu
.
isAnch‹
==1 );

584 
pCache
->
nRecy˛abÀ
--;

585  
pPage
;

586 
	}
}

596 
	$pˇche1RemoveFromHash
(
PgHdr1
 *
pPage
, 
‰ìFœg
){

597 
h
;

598 
PCache1
 *
pCache
 = 
pPage
->pCache;

599 
PgHdr1
 **
µ
;

601 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

602 
h
 = 
pPage
->
iKey
 % 
pCache
->
nHash
;

603 
µ
=&
pCache
->
≠Hash
[
h
]; (*µ)!=
pPage
;Öp=&(*µ)->
pNext
);

604 *
µ
 = (*µ)->
pNext
;

606 
pCache
->
nPage
--;

607 if–
‰ìFœg
 ) 
	`pˇche1FªePage
(
pPage
);

608 
	}
}

614 
	$pˇche1Enf‹˚MaxPage
(
PCache1
 *
pCache
){

615 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

616 
PgHdr1
 *
p
;

617 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pGroup
->
muãx
) );

618  
pGroup
->
nCuºítPage
>pGroup->
nMaxPage


619 && (
p
=
pGroup
->
Ãu
.
pLruPªv
)->
isAnch‹
==0

621 
	`as£π
–
p
->
pCache
->
pGroup
==pGroup );

622 
	`as£π
–
p
->
isPö√d
==0 );

623 
	`pˇche1PöPage
(
p
);

624 
	`pˇche1RemoveFromHash
(
p
, 1);

626 if–
pCache
->
nPage
==0 &&ÖCache->
pBulk
 ){

627 
	`sqlôe3_‰ì
(
pCache
->
pBulk
);

628 
pCache
->
pBulk
 =ÖCache->
pFªe
 = 0;

630 
	}
}

639 
	$pˇche1TrunˇãUnß„
(

640 
PCache1
 *
pCache
,

641 
iLimô


643 
	`TESTONLY
–
nPage
 = 0; )

644 
h
, 
iSt›
;

645 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

646 
	`as£π
–
pCache
->
iMaxKey
 >
iLimô
 );

647 
	`as£π
–
pCache
->
nHash
 > 0 );

648 if–
pCache
->
iMaxKey
 - 
iLimô
 <ÖCache->
nHash
 ){

653 
h
 = 
iLimô
 % 
pCache
->
nHash
;

654 
iSt›
 = 
pCache
->
iMaxKey
 %ÖCache->
nHash
;

655 
	`TESTONLY
–
nPage
 = -10; )

659 
h
 = 
pCache
->
nHash
/2;

660 
iSt›
 = 
h
 - 1;

663 
PgHdr1
 **
µ
;

664 
PgHdr1
 *
pPage
;

665 
	`as£π
–
h
<
pCache
->
nHash
 );

666 
µ
 = &
pCache
->
≠Hash
[
h
];

667  (
pPage
 = *
µ
)!=0 ){

668 if–
pPage
->
iKey
>=
iLimô
 ){

669 
pCache
->
nPage
--;

670 *
µ
 = 
pPage
->
pNext
;

671 if–!
pPage
->
isPö√d
 ) 
	`pˇche1PöPage
(pPage);

672 
	`pˇche1FªePage
(
pPage
);

674 
µ
 = &
pPage
->
pNext
;

675 
	`TESTONLY
–if–
nPage
>=0 )ÇPage++; )

678 if–
h
==
iSt›
 ) ;

679 
h
 = (h+1Ë% 
pCache
->
nHash
;

681 
	`as£π
–
nPage
<0 || 
pCache
->nPage==()nPage );

682 
	}
}

690 
	$pˇche1Inô
(*
NŸU£d
){

691 
	`UNUSED_PARAMETER
(
NŸU£d
);

692 
	`as£π
–
pˇche1
.
isInô
==0 );

693 
	`mem£t
(&
pˇche1
, 0, (pcache1));

710 #i‡
	`deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
)

711 
pˇche1
.
£∑øãCache
 = 0;

712 #ñi‡
SQLITE_THREADSAFE


713 
pˇche1
.
£∑øãCache
 = 
sqlôe3GlobÆC⁄fig
.
pPage
==0

714 || 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
>0;

716 
pˇche1
.
£∑øãCache
 = 
sqlôe3GlobÆC⁄fig
.
pPage
==0;

719 #i‡
SQLITE_THREADSAFE


720 if–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
 ){

721 
pˇche1
.
gΩ
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_LRU
);

722 
pˇche1
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_PMEM
);

725 if–
pˇche1
.
£∑øãCache


726 && 
sqlôe3GlobÆC⁄fig
.
nPage
!=0

727 && 
sqlôe3GlobÆC⁄fig
.
pPage
==0

729 
pˇche1
.
nInôPage
 = 
sqlôe3GlobÆC⁄fig
.
nPage
;

731 
pˇche1
.
nInôPage
 = 0;

733 
pˇche1
.
gΩ
.
mxPö√d
 = 10;

734 
pˇche1
.
isInô
 = 1;

735  
SQLITE_OK
;

736 
	}
}

743 
	$pˇche1Shutdown
(*
NŸU£d
){

744 
	`UNUSED_PARAMETER
(
NŸU£d
);

745 
	`as£π
–
pˇche1
.
isInô
!=0 );

746 
	`mem£t
(&
pˇche1
, 0, (pcache1));

747 
	}
}

750 
pˇche1De°roy
(
sqlôe3_pˇche
 *
p
);

757 
sqlôe3_pˇche
 *
	$pˇche1Cª©e
(
szPage
, 
szExåa
, 
bPurgóbÀ
){

758 
PCache1
 *
pCache
;

759 
PGroup
 *
pGroup
;

760 
sz
;

762 
	`as£π
–(
szPage
 & (szPage-1))==0 && szPage>=512 && szPage<=65536 );

763 
	`as£π
–
szExåa
 < 300 );

765 
sz
 = (
PCache1
Ë+ (
PGroup
)*
pˇche1
.
£∑øãCache
;

766 
pCache
 = (
PCache1
 *)
	`sqlôe3MÆlocZîo
(
sz
);

767 if–
pCache
 ){

768 if–
pˇche1
.
£∑øãCache
 ){

769 
pGroup
 = (
PGroup
*)&
pCache
[1];

770 
pGroup
->
mxPö√d
 = 10;

772 
pGroup
 = &
pˇche1
.
gΩ
;

774 if–
pGroup
->
Ãu
.
isAnch‹
==0 ){

775 
pGroup
->
Ãu
.
isAnch‹
 = 1;

776 
pGroup
->
Ãu
.
pLruPªv
 =ÖGroup->Ãu.
pLruNext
 = &pGroup->lru;

777 
pGroup
->
midPoöt
 = &pGroup->
Ãu
;

779 
pCache
->
pGroup
 =ÖGroup;

780 
pCache
->
szPage
 = szPage;

781 
pCache
->
szExåa
 = szExtra;

782 
pCache
->
szAŒoc
 = 
szPage
 + 
szExåa
 + 
	`ROUND8
((
PgHdr1
));

783 
pCache
->
bPurgóbÀ
 = (bPurgeable ? 1 : 0);

784 
	`pˇche1E¡îMuãx
(
pGroup
);

785 
	`pˇche1ResizeHash
(
pCache
);

786 
pCache
->
nCÀ™Page
 = 0;

787 if–
bPurgóbÀ
 ){

788 
pCache
->
nMö
 = 10;

789 
pGroup
->
nMöPage
 +
pCache
->
nMö
;

790 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

792 
	`pˇche1LóveMuãx
(
pGroup
);

793 if–
pCache
->
nHash
==0 ){

794 
	`pˇche1De°roy
((
sqlôe3_pˇche
*)
pCache
);

795 
pCache
 = 0;

798  (
sqlôe3_pˇche
 *)
pCache
;

799 
	}
}

806 
	$pˇche1Cachesize
(
sqlôe3_pˇche
 *
p
, 
nMax
){

807 
PCache1
 *
pCache
 = (PCache1 *)
p
;

808 if–
pCache
->
bPurgóbÀ
 ){

809 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

810 
	`pˇche1E¡îMuãx
(
pGroup
);

811 
pGroup
->
nMaxPage
 +(
nMax
 - 
pCache
->nMax);

812 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

813 
pCache
->
nMax
 =ÇMax;

814 
pCache
->
n90p˘
 =ÖCache->
nMax
*9/10;

815 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

816 
	`pˇche1LóveMuãx
(
pGroup
);

818 
	}
}

825 
	$pˇche1Shrök
(
sqlôe3_pˇche
 *
p
){

826 
PCache1
 *
pCache
 = (PCache1*)
p
;

827 if–
pCache
->
bPurgóbÀ
 ){

828 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

829 
ßvedMaxPage
;

830 
	`pˇche1E¡îMuãx
(
pGroup
);

831 
ßvedMaxPage
 = 
pGroup
->
nMaxPage
;

832 
pGroup
->
nMaxPage
 = 0;

833 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

834 
pGroup
->
nMaxPage
 = 
ßvedMaxPage
;

835 
	`pˇche1LóveMuãx
(
pGroup
);

837 
	}
}

842 
	$pˇche1Pagecou¡
(
sqlôe3_pˇche
 *
p
){

843 
n
;

844 
PCache1
 *
pCache
 = (PCache1*)
p
;

845 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

846 
n
 = 
pCache
->
nPage
;

847 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

848  
n
;

849 
	}
}

860 
SQLITE_NOINLINE
 
PgHdr1
 *
	$pˇche1FëchSège2
(

861 
PCache1
 *
pCache
,

862 
iKey
,

863 
¸óãFœg


865 
nPö√d
;

866 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

867 
PgHdr1
 *
pPage
 = 0;

870 
	`as£π
–
pCache
->
nPage
 >pCache->
nRecy˛abÀ
 );

871 
nPö√d
 = 
pCache
->
nPage
 -ÖCache->
nRecy˛abÀ
;

872 
	`as£π
–
pGroup
->
mxPö√d
 =pGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
 );

873 
	`as£π
–
pCache
->
n90p˘
 =pCache->
nMax
*9/10 );

874 if–
¸óãFœg
==1 && (

875 
nPö√d
>=
pGroup
->
mxPö√d


876 || 
nPö√d
>=
pCache
->
n90p˘


877 || (
	`pˇche1UndîMem‹yPªssuª
(
pCache
Ë&&ÖCache->
nRecy˛abÀ
<
nPö√d
)

882 if–
pCache
->
nPage
>ıCache->
nHash
 ) 
	`pˇche1ResizeHash
(pCache);

883 
	`as£π
–
pCache
->
nHash
>0 &&ÖCache->
≠Hash
 );

886 if–
pCache
->
bPurgóbÀ


887 && !
pGroup
->
Ãu
.
pLruPªv
->
isAnch‹


888 && ((
pCache
->
nPage
+1>ıCache->
nMax
Ë|| 
	`pˇche1UndîMem‹yPªssuª
(pCache))

891 
PCache1
 *
pOthî
;

892 
pPage
 = 
pGroup
->
Ãu
.
pLruPªv
;

894 
pPage
 &&ÖPage!=&
pGroup
->
Ãu
){

895 if(
pPage
->
nTouch
 >= 4){

897 
pPage
->
pLruPªv
->
pLruNext
 =ÖPage->pLruNext;

898 
pPage
->
pLruNext
->
pLruPªv
 =ÖPage->pLruPrev;

903 
PgHdr1
 **
µFú°
 = &
pGroup
->
Ãu
.
pLruNext
;

904 
pPage
->
pLruPªv
 = &
pGroup
->
Ãu
;

905 (
pPage
->
pLruNext
 = *
µFú°
)->
pLruPªv
 =ÖPage;

906 *
µFú°
 = 
pPage
;

907 
pPage
->
nTouch
 = 0;

908 
pGroup
->
midPoöt
 =ÖGroup->midPoöt->
pLruPªv
;

911 if(
pPage
->
isPö√d
 == 0){

912 
	`as£π
–
pPage
->
isPö√d
==0 );

913 
	`pˇche1RemoveFromHash
(
pPage
, 0);

914 
pPage
->
pLruPªv
->
pLruNext
 =ÖPage->pLruNext;

915 
pPage
->
pLruNext
->
pLruPªv
 =ÖPage->pLruPrev;

916 
pPage
->
pLruNext
 = 0;

917 
pPage
->
pLruPªv
 = 0;

918 
pCache
->
nCÀ™Page
--;

922 
pPage
ıPage->
pLruPªv
;

925 
pOthî
 = 
pPage
->
pCache
;

926 if–
pOthî
->
szAŒoc
 !
pCache
->szAlloc ){

927 
	`pˇche1FªePage
(
pPage
);

928 
pCache
->
nCÀ™Page
--;

929 
pPage
 = 0;

931 
pGroup
->
nCuºítPage
 -(
pOthî
->
bPurgóbÀ
 - 
pCache
->bPurgeable);

938 if–!
pPage
 ){

939 
pPage
 = 
	`pˇche1AŒocPage
(
pCache
, 
¸óãFœg
==1);

942 if–
pPage
 ){

943 
h
 = 
iKey
 % 
pCache
->
nHash
;

944 
pCache
->
nPage
++;

945 
pPage
->
iKey
 = iKey;

946 
pPage
->
pNext
 = 
pCache
->
≠Hash
[
h
];

947 
pPage
->
pCache
 =ÖCache;

953 
pPage
->
isPö√d
 = 1;

954 
pPage
->
nTouch
 = 1;

955 if(
pGroup
->
midPoöt
==&pGroup->
Ãu
){

956 
pGroup
->
Ãu
.
pLruPªv
 =ÖGroup->Ãu.
pLruNext
 = 
pPage
;

957 
pPage
->
pLruPªv
 =ÖPage->
pLruNext
 = &
pGroup
->
Ãu
;

959 
pPage
->
pLruNext
=
pGroup
->
midPoöt
;

960 
pPage
->
pLruPªv
=
pGroup
->
midPoöt
->pLruPrev;

961 
pGroup
->
midPoöt
->
pLruPªv
->
pLruNext
 = 
pPage
;

962 
pGroup
->
midPoöt
->
pLruPªv
 = 
pPage
;

964 
pCache
->
nCÀ™Page
++;

965 *(**)
pPage
->
∑ge
.
pExåa
 = 0;

966 
pCache
->
≠Hash
[
h
] = 
pPage
;

967 if–
iKey
>
pCache
->
iMaxKey
 ){

968 
pCache
->
iMaxKey
 = 
iKey
;

976 if(
pCache
->)

978  
pPage
;

979 
	}
}

1040 
PgHdr1
 *
	$pˇche1FëchNoMuãx
(

1041 
sqlôe3_pˇche
 *
p
,

1042 
iKey
,

1043 
¸óãFœg


1045 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1046 
PgHdr1
 *
pPage
 = 0;

1049 
pPage
 = 
pCache
->
≠Hash
[
iKey
 %ÖCache->
nHash
];

1050  
pPage
 &&ÖPage->
iKey
!=iKey ){ÖPagêpPage->
pNext
; }

1056 if–
pPage
 ){

1057 if–!
pPage
->
isPö√d
 ){

1059  
	`pˇche1PöPage
(
pPage
);

1062 
pPage
->
nTouch
++;

1063  
pPage
;

1065 }if–
¸óãFœg
 ){

1067  
	`pˇche1FëchSège2
(
pCache
, 
iKey
, 
¸óãFœg
);

1071 
	}
}

1072 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX


1073 
PgHdr1
 *
	$pˇche1FëchWôhMuãx
(

1074 
sqlôe3_pˇche
 *
p
,

1075 
iKey
,

1076 
¸óãFœg


1078 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1079 
PgHdr1
 *
pPage
;

1081 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1082 
pPage
 = 
	`pˇche1FëchNoMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1083 
	`as£π
–
pPage
==0 || 
pCache
->
iMaxKey
>=
iKey
 );

1084 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1085  
pPage
;

1086 
	}
}

1088 
sqlôe3_pˇche_∑ge
 *
	$pˇche1Fëch
(

1089 
sqlôe3_pˇche
 *
p
,

1090 
iKey
,

1091 
¸óãFœg


1093 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX
 || 
	`deföed
(
SQLITE_DEBUG
)

1094 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1097 
	`as£π
–
	`off£tof
(
PgHdr1
,
∑ge
)==0 );

1098 
	`as£π
–
pCache
->
bPurgóbÀ
 || 
¸óãFœg
!=1 );

1099 
	`as£π
–
pCache
->
bPurgóbÀ
 ||ÖCache->
nMö
==0 );

1100 
	`as£π
–
pCache
->
bPurgóbÀ
==0 ||ÖCache->
nMö
==10 );

1101 
	`as£π
–
pCache
->
nMö
==0 ||ÖCache->
bPurgóbÀ
 );

1102 
	`as£π
–
pCache
->
nHash
>0 );

1103 #i‡
PCACHE1_MIGHT_USE_GROUP_MUTEX


1104 if–
pCache
->
pGroup
->
muãx
 ){

1105  (
sqlôe3_pˇche_∑ge
*)
	`pˇche1FëchWôhMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1109  (
sqlôe3_pˇche_∑ge
*)
	`pˇche1FëchNoMuãx
(
p
, 
iKey
, 
¸óãFœg
);

1111 
	}
}

1119 
	$pˇche1U≈ö
(

1120 
sqlôe3_pˇche
 *
p
,

1121 
sqlôe3_pˇche_∑ge
 *
pPg
,

1122 
ªu£U∆ikñy


1124 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1125 
PgHdr1
 *
pPage
 = (PgHdr1 *)
pPg
;

1126 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

1128 
	`as£π
–
pPage
->
pCache
==pCache );

1129 
	`pˇche1E¡îMuãx
(
pGroup
);

1136 
	`as£π
–
pPage
->
isPö√d
==1 );

1138 if–
ªu£U∆ikñy
 || 
pGroup
->
nCuºítPage
>pGroup->
nMaxPage
 ){

1140 
pPage
->
pLruPªv
->
pLruNext
 =ÖPage->pLruNext;

1141 
pPage
->
pLruNext
->
pLruPªv
 =ÖPage->pLruPrev;

1142 
pPage
->
pLruNext
 = 0;

1143 
pPage
->
pLruPªv
 = 0;

1144 
	`pˇche1RemoveFromHash
(
pPage
, 1);

1155 if(
pGroup
->
midPoöt
 =&pGroup->
Ãu
){

1156 
PgHdr1
 **
µFú°
 = &
pGroup
->
Ãu
.
pLruNext
;

1157 
pPage
->
pLruPªv
 = &
pGroup
->
Ãu
;

1158 (
pPage
->
pLruNext
 = *
µFú°
)->
pLruPªv
 =ÖPage;

1159 *
µFú°
 = 
pPage
;

1160 
pCache
->
nRecy˛abÀ
++;

1163 
PgHdr1
 *
µMid
 = 
pGroup
->
midPoöt
;

1164 
pPage
->
pLruNext
 = 
µMid
;

1165 
pPage
->
pLruPªv
 = 
µMid
->pLruPrev;

1166 
µMid
->
pLruPªv
->
pLruNext
 = 
pPage
;

1167 
µMid
->
pLruPªv
 = 
pPage
;

1168 
pCache
->
nRecy˛abÀ
++;

1169 if(
pCache
->
nRecy˛abÀ
%2 == 1){

1170 
µMid
 =ÖpMid->
pLruPªv
;

1174 
pPage
->
isPö√d
 = 0;

1177 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1178 
	}
}

1183 
	$pˇche1Rekey
(

1184 
sqlôe3_pˇche
 *
p
,

1185 
sqlôe3_pˇche_∑ge
 *
pPg
,

1186 
iOld
,

1187 
iNew


1189 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1190 
PgHdr1
 *
pPage
 = (PgHdr1 *)
pPg
;

1191 
PgHdr1
 **
µ
;

1192 
h
;

1193 
	`as£π
–
pPage
->
iKey
==
iOld
 );

1194 
	`as£π
–
pPage
->
pCache
==pCache );

1196 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1198 
h
 = 
iOld
%
pCache
->
nHash
;

1199 
µ
 = &
pCache
->
≠Hash
[
h
];

1200  (*
µ
)!=
pPage
 ){

1201 
µ
 = &(*µ)->
pNext
;

1203 *
µ
 = 
pPage
->
pNext
;

1205 
h
 = 
iNew
%
pCache
->
nHash
;

1206 
pPage
->
iKey
 = 
iNew
;

1207 
pPage
->
pNext
 = 
pCache
->
≠Hash
[
h
];

1208 
pCache
->
≠Hash
[
h
] = 
pPage
;

1209 if–
iNew
>
pCache
->
iMaxKey
 ){

1210 
pCache
->
iMaxKey
 = 
iNew
;

1213 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1214 
	}
}

1223 
	$pˇche1Trunˇã
(
sqlôe3_pˇche
 *
p
, 
iLimô
){

1224 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1225 
	`pˇche1E¡îMuãx
(
pCache
->
pGroup
);

1226 if–
iLimô
<=
pCache
->
iMaxKey
 ){

1227 
	`pˇche1TrunˇãUnß„
(
pCache
, 
iLimô
);

1228 
pCache
->
iMaxKey
 = 
iLimô
-1;

1230 
	`pˇche1LóveMuãx
(
pCache
->
pGroup
);

1231 
	}
}

1238 
	$pˇche1De°roy
(
sqlôe3_pˇche
 *
p
){

1239 
PCache1
 *
pCache
 = (PCache1 *)
p
;

1240 
PGroup
 *
pGroup
 = 
pCache
->pGroup;

1241 
	`as£π
–
pCache
->
bPurgóbÀ
 || (pCache->
nMax
==0 &&ÖCache->
nMö
==0) );

1242 
	`pˇche1E¡îMuãx
(
pGroup
);

1243 if–
pCache
->
nPage
 ) 
	`pˇche1TrunˇãUnß„
(pCache, 0);

1244 
	`as£π
–
pGroup
->
nMaxPage
 >
pCache
->
nMax
 );

1245 
pGroup
->
nMaxPage
 -
pCache
->
nMax
;

1246 
	`as£π
–
pGroup
->
nMöPage
 >
pCache
->
nMö
 );

1247 
pGroup
->
nMöPage
 -
pCache
->
nMö
;

1248 
pGroup
->
mxPö√d
 =ÖGroup->
nMaxPage
 + 10 -ÖGroup->
nMöPage
;

1249 
	`pˇche1Enf‹˚MaxPage
(
pCache
);

1250 
	`pˇche1LóveMuãx
(
pGroup
);

1251 
	`sqlôe3_‰ì
(
pCache
->
pBulk
);

1252 
	`sqlôe3_‰ì
(
pCache
->
≠Hash
);

1253 
	`sqlôe3_‰ì
(
pCache
);

1254 
	}
}

1257 
	$pˇche1RemoveLru
(
sqlôe3_pˇche_∑ge
 *
pPg
){

1258 
PgHdr1
 *
pPage
 = (PgHdr1 *)
pPg
;

1259 
PCache1
 *
pCache
;

1261 
	`as£π
–
pPage
!=0 );

1262 
	`as£π
–
pPage
->
isPö√d
==0 );

1263 
pCache
 = 
pPage
->pCache;

1266 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCache
->
pGroup
->
muãx
) );

1267 i‡(
pPage
->
pLruPªv
 &&ÖPage->
pLruNext
) {

1268 
pPage
->
pLruPªv
->
pLruNext
 =ÖPage->pLruNext;

1269 
pPage
->
pLruNext
->
pLruPªv
 =ÖPage->pLruPrev;

1271 
pPage
->
pLruNext
 = 0;

1272 
pPage
->
pLruPªv
 = 0;

1273 
pCache
->
nCÀ™Page
--;

1274 
	`as£π
–
pPage
->
isAnch‹
==0 );

1275 
	`as£π
–
pCache
->
pGroup
->
Ãu
.
isAnch‹
==1 );

1277 
	}
}

1284 
	$sqlôe3PCacheSëDeÁu…
(){

1285 c⁄° 
sqlôe3_pˇche_mëhods2
 
deÁu…Mëhods
 = {

1288 
pˇche1Inô
,

1289 
pˇche1Shutdown
,

1290 
pˇche1Cª©e
,

1291 
pˇche1Cachesize
,

1292 
pˇche1Pagecou¡
,

1293 
pˇche1Fëch
,

1294 
pˇche1U≈ö
,

1295 
pˇche1Rekey
,

1296 
pˇche1Trunˇã
,

1297 
pˇche1De°roy
,

1298 
pˇche1Shrök
,

1299 
pˇche1RemoveLru


1301 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
deÁu…Mëhods
);

1302 
	}
}

1307 
	$sqlôe3HódîSizePˇche1
(){  
	`ROUND8
((
PgHdr1
)); 
	}
}

1313 
sqlôe3_muãx
 *
	$sqlôe3Pˇche1Muãx
(){

1314  
pˇche1
.
muãx
;

1315 
	}
}

1317 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


1327 
	$sqlôe3PˇcheRñó£Mem‹y
(
nReq
){

1328 
nFªe
 = 0;

1329 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
gΩ
.
muãx
) );

1330 
	`as£π
–
	`sqlôe3_muãx_nŸhñd
(
pˇche1
.
muãx
) );

1331 if–
sqlôe3GlobÆC⁄fig
.
nPage
==0 ){

1332 
PgHdr1
 *
p
;

1333 
	`pˇche1E¡îMuãx
(&
pˇche1
.
gΩ
);

1334  (
nReq
<0 || 
nFªe
<nReq)

1335 && (
p
=
pˇche1
.
gΩ
.
Ãu
.
pLruPªv
)!=0

1336 && 
p
->
isAnch‹
==0

1338 
nFªe
 +
	`pˇche1MemSize
(
p
->
∑ge
.
pBuf
);

1339 #ifde‡
SQLITE_PCACHE_SEPARATE_HEADER


1340 
nFªe
 +
	`sqlôe3MemSize
(
p
);

1342 
	`as£π
–
p
->
isPö√d
==0 );

1343 
	`pˇche1PöPage
(
p
);

1344 
	`pˇche1RemoveFromHash
(
p
, 1);

1346 
	`pˇche1LóveMuãx
(&
pˇche1
.
gΩ
);

1348  
nFªe
;

1349 
	}
}

1352 #ifde‡
SQLITE_TEST


1357 
	$sqlôe3PˇcheSèts
(

1358 *
≤Cuºít
,

1359 *
≤Max
,

1360 *
≤Mö
,

1361 *
≤Recy˛abÀ


1363 
PgHdr1
 *
p
;

1364 
nRecy˛abÀ
 = 0;

1365 
p
=
pˇche1
.
gΩ
.
Ãu
.
pLruNext
;Ö && !p->
isAnch‹
;Ö=p->pLruNext){

1366 
	`as£π
–
p
->
isPö√d
==0 );

1367 
nRecy˛abÀ
++;

1369 *
≤Cuºít
 = 
pˇche1
.
gΩ
.
nCuºítPage
;

1370 *
≤Max
 = ()
pˇche1
.
gΩ
.
nMaxPage
;

1371 *
≤Mö
 = ()
pˇche1
.
gΩ
.
nMöPage
;

1372 *
≤Recy˛abÀ
 = 
nRecy˛abÀ
;

1373 
	}
}

	@pragma.c

14 
	~"sqlôeI¡.h
"

16 #i‡!
deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

17 #i‡
deföed
(
__APPLE__
)

18 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

20 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

31 
	~"¥agma.h
"

44 
u8
 
	$gëSa„tyLevñ
(c⁄° *
z
, 
omôFuŒ
, 
u8
 
dÊt
){

46 c⁄° 
zText
[] = "onoffalseyestruextrafull";

47 c⁄° 
u8
 
iOff£t
[] = {0, 1, 2, 4, 9, 12, 15, 20};

48 c⁄° 
u8
 
iLígth
[] = {2, 2, 3, 5, 3, 4, 5, 4};

49 c⁄° 
u8
 
iVÆue
[] = {1, 0, 0, 0, 1, 1, 3, 2};

51 
i
, 
n
;

52 if–
	`sqlôe3Isdigô
(*
z
) ){

53  (
u8
)
	`sqlôe3Atoi
(
z
);

55 
n
 = 
	`sqlôe3SåÀn30
(
z
);

56 
i
=0; i<
	`AºaySize
(
iLígth
); i++){

57 if–
iLígth
[
i
]==
n
 && 
	`sqlôe3SåNICmp
(&
zText
[
iOff£t
[i]],
z
,n)==0

58 && (!
omôFuŒ
 || 
iVÆue
[
i
]<=1)

60  
iVÆue
[
i
];

63  
dÊt
;

64 
	}
}

69 
u8
 
	$sqlôe3GëBoﬁón
(c⁄° *
z
, 
u8
 
dÊt
){

70  
	`gëSa„tyLevñ
(
z
,1,
dÊt
)!=0;

71 
	}
}

77 #i‡!
deföed
(
SQLITE_OMIT_PRAGMA
)

82 
	$gëLockögMode
(c⁄° *
z
){

83 if–
z
 ){

84 if–0==
	`sqlôe3SåICmp
(
z
, "ex˛usive"ËË 
PAGER_LOCKINGMODE_EXCLUSIVE
;

85 if–0==
	`sqlôe3SåICmp
(
z
, "n‹mÆ"ËË 
PAGER_LOCKINGMODE_NORMAL
;

87  
PAGER_LOCKINGMODE_QUERY
;

88 
	}
}

90 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


97 
	$gëAutoVacuum
(c⁄° *
z
){

98 
i
;

99 if–0==
	`sqlôe3SåICmp
(
z
, "n⁄e"ËË 
BTREE_AUTOVACUUM_NONE
;

100 if–0==
	`sqlôe3SåICmp
(
z
, "fuŒ"ËË 
BTREE_AUTOVACUUM_FULL
;

101 if–0==
	`sqlôe3SåICmp
(
z
, "ö¸emíèl"ËË 
BTREE_AUTOVACUUM_INCR
;

102 
i
 = 
	`sqlôe3Atoi
(
z
);

103  (
u8
)((
i
>=0&&i<=2)?i:0);

104 
	}
}

107 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


113 
	$gëTempSt‹e
(c⁄° *
z
){

114 if–
z
[0]>='0' && z[0]<='2' ){

115  
z
[0] - '0';

116 }if–
	`sqlôe3SåICmp
(
z
, "file")==0 ){

118 }if–
	`sqlôe3SåICmp
(
z
, "memory")==0 ){

123 
	}
}

126 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


131 
	$övÆid©eTempSt‹age
(
P¨£
 *
pP¨£
){

132 
sqlôe3
 *
db
 = 
pP¨£
->db;

133 if–
db
->
aDb
[1].
pBt
!=0 ){

134 if–!
db
->
autoCommô
 || 
	`sqlôe3BåìIsInRódTøns
(db->
aDb
[1].
pBt
) ){

135 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporary storage cannot be changed "

137  
SQLITE_ERROR
;

139 
	`sqlôe3BåìClo£
(
db
->
aDb
[1].
pBt
);

140 
db
->
aDb
[1].
pBt
 = 0;

141 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

143  
SQLITE_OK
;

144 
	}
}

147 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


153 
	$ch™geTempSt‹age
(
P¨£
 *
pP¨£
, c⁄° *
zSt‹ageTy≥
){

154 
ts
 = 
	`gëTempSt‹e
(
zSt‹ageTy≥
);

155 
sqlôe3
 *
db
 = 
pP¨£
->db;

156 if–
db
->
ãmp_°‹e
==
ts
 )  
SQLITE_OK
;

157 if–
	`övÆid©eTempSt‹age
–
pP¨£
 ) !
SQLITE_OK
 ){

158  
SQLITE_ERROR
;

160 
db
->
ãmp_°‹e
 = (
u8
)
ts
;

161  
SQLITE_OK
;

162 
	}
}

168 
	$£tAŒCﬁumnNames
(

169 
Vdbe
 *
v
,

170 
N
,

171 c⁄° **
azCﬁ


173 
i
;

174 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 
N
);

175 
i
=0; i<
N
; i++){

176 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
azCﬁ
[i], 
SQLITE_STATIC
);

178 
	}
}

179 
	$£tO√CﬁumnName
(
Vdbe
 *
v
, c⁄° *
z
){

180 
	`£tAŒCﬁumnNames
(
v
, 1, &
z
);

181 
	}
}

186 
	$ªtu∫SögÀI¡
(
Vdbe
 *
v
, c⁄° *
zLabñ
, 
i64
 
vÆue
){

187 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_I¡64
, 0, 1, 0, (c⁄° 
u8
*)&
vÆue
, 
P4_INT64
);

188 
	`£tO√CﬁumnName
(
v
, 
zLabñ
);

189 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

190 
	}
}

195 
	$ªtu∫SögÀText
(

196 
Vdbe
 *
v
,

197 c⁄° *
zLabñ
,

198 c⁄° *
zVÆue


200 if–
zVÆue
 ){

201 
	`sqlôe3VdbeLﬂdSåög
(
v
, 1, (c⁄° *)
zVÆue
);

202 
	`£tO√CﬁumnName
(
v
, 
zLabñ
);

203 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

205 
	}
}

212 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


213 
	$£tAŒPagîFœgs
(
sqlôe3
 *
db
){

214 if–
db
->
autoCommô
 ){

215 
Db
 *
pDb
 = 
db
->
aDb
;

216 
n
 = 
db
->
nDb
;

217 
	`as£π
–
SQLITE_FuŒFSync
==
PAGER_FULLFSYNC
 );

218 
	`as£π
–
SQLITE_Ck±FuŒFSync
==
PAGER_CKPT_FULLFSYNC
 );

219 
	`as£π
–
SQLITE_CacheSpûl
==
PAGER_CACHESPILL
 );

220 
	`as£π
–(
PAGER_FULLFSYNC
 | 
PAGER_CKPT_FULLFSYNC
 | 
PAGER_CACHESPILL
)

221 =
PAGER_FLAGS_MASK
 );

222 
	`as£π
–(
pDb
->
ß„ty_Àvñ
 & 
PAGER_SYNCHRONOUS_MASK
)==pDb->safety_level );

223  (
n
--) > 0 ){

224 if–
pDb
->
pBt
 ){

225 
	`sqlôe3BåìSëPagîFœgs
(
pDb
->
pBt
,

226 
pDb
->
ß„ty_Àvñ
 | (
db
->
Êags
 & 
PAGER_FLAGS_MASK
) );

228 
pDb
++;

231 
	}
}

233 
	#£tAŒPagîFœgs
(
X
Ë

	)

240 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


241 c⁄° *
	$a˘i⁄Name
(
u8
 
a˘i⁄
){

242 c⁄° *
zName
;

243  
a˘i⁄
 ){

244 
OE_SëNuŒ
: 
zName
 = "SET NULL"; ;

245 
OE_SëDÊt
: 
zName
 = "SET DEFAULT"; ;

246 
OE_Casˇde
: 
zName
 = "CASCADE"; ;

247 
OE_Re°ri˘
: 
zName
 = "RESTRICT"; ;

248 : 
zName
 = "NO ACTION";

249 
	`as£π
–
a˘i⁄
==
OE_N⁄e
 ); ;

251  
zName
;

252 
	}
}

261 c⁄° *
	$sqlôe3Jou∫ÆModíame
(
eMode
){

262 * c⁄° 
azModeName
[] = {

264 #i‚de‡
SQLITE_OMIT_WAL


268 
	`as£π
–
PAGER_JOURNALMODE_DELETE
==0 );

269 
	`as£π
–
PAGER_JOURNALMODE_PERSIST
==1 );

270 
	`as£π
–
PAGER_JOURNALMODE_OFF
==2 );

271 
	`as£π
–
PAGER_JOURNALMODE_TRUNCATE
==3 );

272 
	`as£π
–
PAGER_JOURNALMODE_MEMORY
==4 );

273 
	`as£π
–
PAGER_JOURNALMODE_WAL
==5 );

274 
	`as£π
–
eMode
>=0 &&ÉMode<=
	`AºaySize
(
azModeName
) );

276 if–
eMode
==
	`AºaySize
(
azModeName
) )  0;

277  
azModeName
[
eMode
];

278 
	}
}

295 
	$sqlôe3Pøgma
(

296 
P¨£
 *
pP¨£
,

297 
Tokí
 *
pId1
,

298 
Tokí
 *
pId2
,

299 
Tokí
 *
pVÆue
,

300 
möusFœg


302 *
zLe·
 = 0;

303 *
zRight
 = 0;

304 c⁄° *
zDb
 = 0;

305 
Tokí
 *
pId
;

306 *
aF˙é
[4];

307 
iDb
;

308 
lwr
, 
u¥
, 
mid
 = 0;

309 
rc
;

310 
sqlôe3
 *
db
 = 
pP¨£
->db;

311 
Db
 *
pDb
;

312 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

313 c⁄° 
sPøgmaNames
 *
pPøgma
;

315 if–
v
==0 ) ;

316 
	`sqlôe3VdbeRunO∆yOn˚
(
v
);

317 
pP¨£
->
nMem
 = 2;

321 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pId1
, 
pId2
, &
pId
);

322 if–
iDb
<0 ) ;

323 
pDb
 = &
db
->
aDb
[
iDb
];

328 if–
iDb
==1 && 
	`sqlôe3O≥nTempD©aba£
(
pP¨£
) ){

332 
zLe·
 = 
	`sqlôe3NameFromTokí
(
db
, 
pId
);

333 if–!
zLe·
 ) ;

334 if–
möusFœg
 ){

335 
zRight
 = 
	`sqlôe3MPrötf
(
db
, "-%T", 
pVÆue
);

337 
zRight
 = 
	`sqlôe3NameFromTokí
(
db
, 
pVÆue
);

340 
	`as£π
–
pId2
 );

341 
zDb
 = 
pId2
->
n
>0 ? 
pDb
->
zName
 : 0;

342 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_PRAGMA
, 
zLe·
, 
zRight
, 
zDb
) ){

343 
¥agma_out
;

361 
aF˙é
[0] = 0;

362 
aF˙é
[1] = 
zLe·
;

363 
aF˙é
[2] = 
zRight
;

364 
aF˙é
[3] = 0;

365 
db
->
busyH™dÀr
.
nBusy
 = 0;

366 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_PRAGMA
, (*)
aF˙é
);

367 if–
rc
==
SQLITE_OK
 ){

368 
	`ªtu∫SögÀText
(
v
, "ªsu…", 
aF˙é
[0]);

369 
	`sqlôe3_‰ì
(
aF˙é
[0]);

370 
¥agma_out
;

372 if–
rc
!=
SQLITE_NOTFOUND
 ){

373 if–
aF˙é
[0] ){

374 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
aF˙é
[0]);

375 
	`sqlôe3_‰ì
(
aF˙é
[0]);

377 
pP¨£
->
nEº
++;

378 
pP¨£
->
rc
 =Ñc;

379 
¥agma_out
;

383 
lwr
 = 0;

384 
u¥
 = 
	`AºaySize
(
aPøgmaNames
)-1;

385  
lwr
<=
u¥
 ){

386 
mid
 = (
lwr
+
u¥
)/2;

387 
rc
 = 
	`sqlôe3_°ricmp
(
zLe·
, 
aPøgmaNames
[
mid
].
zName
);

388 if–
rc
==0 ) ;

389 if–
rc
<0 ){

390 
u¥
 = 
mid
 - 1;

392 
lwr
 = 
mid
 + 1;

395 if–
lwr
>
u¥
 ) 
¥agma_out
;

396 
pPøgma
 = &
aPøgmaNames
[
mid
];

399 if–(
pPøgma
->
mPøgFœg
 & 
PøgFœg_NìdSchema
)!=0 ){

400 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
¥agma_out
;

404  
pPøgma
->
ePøgTyp
 ){

406 #i‡!
	`deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& !deföed(
SQLITE_OMIT_DEPRECATED
)

423 
PøgTyp_DEFAULT_CACHE_SIZE
: {

424 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

425 c⁄° 
VdbeOpLi°
 
gëCacheSize
[] = {

426 { 
OP_Tønß˘i⁄
, 0, 0, 0},

427 { 
OP_RódCookõ
, 0, 1, 
BTREE_DEFAULT_CACHE_SIZE
},

428 { 
OP_IfPos
, 1, 8, 0},

429 { 
OP_I¡egî
, 0, 2, 0},

430 { 
OP_Subåa˘
, 1, 2, 1},

431 { 
OP_IfPos
, 1, 8, 0},

432 { 
OP_I¡egî
, 0, 1, 0},

433 { 
OP_No›
, 0, 0, 0},

434 { 
OP_Resu…Row
, 1, 1, 0},

436 
VdbeOp
 *
aOp
;

437 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

438 if–!
zRight
 ){

439 
	`£tO√CﬁumnName
(
v
, "cache_size");

440 
pP¨£
->
nMem
 += 2;

441 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
gëCacheSize
));

442 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
gëCacheSize
), gëCacheSize, 
iLn
);

443 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

444 
aOp
[0].
p1
 = 
iDb
;

445 
aOp
[1].
p1
 = 
iDb
;

446 
aOp
[6].
p1
 = 
SQLITE_DEFAULT_CACHE_SIZE
;

448 
size
 = 
	`sqlôe3AbsI¡32
(
	`sqlôe3Atoi
(
zRight
));

449 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

450 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SëCookõ
, 
iDb
, 
BTREE_DEFAULT_CACHE_SIZE
, 
size
);

451 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

452 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

453 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

459 #i‡!
	`deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

469 
PøgTyp_PAGE_SIZE
: {

470 
Båì
 *
pBt
 = 
pDb
->pBt;

471 
	`as£π
–
pBt
!=0 );

472 if–!
zRight
 ){

473 
size
 = 
	`ALWAYS
(
pBt
Ë? 
	`sqlôe3BåìGëPageSize
(pBt) : 0;

474 
	`ªtu∫SögÀI¡
(
v
, "∑ge_size", 
size
);

479 
db
->
√xtPagesize
 = 
	`sqlôe3Atoi
(
zRight
);

480 if–
SQLITE_NOMEM
==
	`sqlôe3BåìSëPageSize
(
pBt
, 
db
->
√xtPagesize
,-1,0) ){

481 
	`sqlôe3OomFau…
(
db
);

495 
PøgTyp_SECURE_DELETE
: {

496 
Båì
 *
pBt
 = 
pDb
->pBt;

497 
b
 = -1;

498 
	`as£π
–
pBt
!=0 );

499 if–
zRight
 ){

500 
b
 = 
	`sqlôe3GëBoﬁón
(
zRight
, 0);

502 if–
pId2
->
n
==0 && 
b
>=0 ){

503 
ii
;

504 
ii
=0; ii<
db
->
nDb
; ii++){

505 
	`sqlôe3BåìSecuªDñëe
(
db
->
aDb
[
ii
].
pBt
, 
b
);

508 
b
 = 
	`sqlôe3BåìSecuªDñëe
(
pBt
, b);

509 
	`ªtu∫SögÀI¡
(
v
, "£cuª_dñëe", 
b
);

530 
PøgTyp_PAGE_COUNT
: {

531 
iReg
;

532 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

533 
iReg
 = ++
pP¨£
->
nMem
;

534 if–
	`sqlôe3Tﬁowî
(
zLe·
[0])=='p' ){

535 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Pagecou¡
, 
iDb
, 
iReg
);

537 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MaxPg˙t
, 
iDb
, 
iReg
,

538 
	`sqlôe3AbsI¡32
(
	`sqlôe3Atoi
(
zRight
)));

540 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
iReg
, 1);

541 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

542 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, 
zLe·
, 
SQLITE_TRANSIENT
);

550 
PøgTyp_LOCKING_MODE
: {

551 c⁄° *
zRë
 = "normal";

552 
eMode
 = 
	`gëLockögMode
(
zRight
);

554 if–
pId2
->
n
==0 && 
eMode
==
PAGER_LOCKINGMODE_QUERY
 ){

559 
eMode
 = 
db
->
dÊtLockMode
;

561 
Pagî
 *
pPagî
;

562 if–
pId2
->
n
==0 ){

571 
ii
;

572 
	`as£π
(
pDb
==&
db
->
aDb
[0]);

573 
ii
=2; ii<
db
->
nDb
; ii++){

574 
pPagî
 = 
	`sqlôe3BåìPagî
(
db
->
aDb
[
ii
].
pBt
);

575 
	`sqlôe3PagîLockögMode
(
pPagî
, 
eMode
);

577 
db
->
dÊtLockMode
 = (
u8
)
eMode
;

579 
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

580 
eMode
 = 
	`sqlôe3PagîLockögMode
(
pPagî
,ÉMode);

583 
	`as£π
–
eMode
==
PAGER_LOCKINGMODE_NORMAL


584 || 
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 );

585 if–
eMode
==
PAGER_LOCKINGMODE_EXCLUSIVE
 ){

586 
zRë
 = "exclusive";

588 
	`ªtu∫SögÀText
(
v
, "lockög_mode", 
zRë
);

597 
PøgTyp_JOURNAL_MODE
: {

598 
eMode
;

599 
ii
;

601 
	`£tO√CﬁumnName
(
v
, "journal_mode");

602 if–
zRight
==0 ){

605 
eMode
 = 
PAGER_JOURNALMODE_QUERY
;

607 c⁄° *
zMode
;

608 
n
 = 
	`sqlôe3SåÀn30
(
zRight
);

609 
eMode
=0; (
zMode
 = 
	`sqlôe3Jou∫ÆModíame
(eMode))!=0;ÉMode++){

610 if–
	`sqlôe3SåNICmp
(
zRight
, 
zMode
, 
n
)==0 ) ;

612 if–!
zMode
 ){

615 
eMode
 = 
PAGER_JOURNALMODE_QUERY
;

618 if–
eMode
==
PAGER_JOURNALMODE_QUERY
 && 
pId2
->
n
==0 ){

620 
iDb
 = 0;

621 
pId2
->
n
 = 1;

623 
ii
=
db
->
nDb
-1; ii>=0; ii--){

624 if–
db
->
aDb
[
ii
].
pBt
 && (ii==
iDb
 || 
pId2
->
n
==0) ){

625 
	`sqlôe3VdbeU£sBåì
(
v
, 
ii
);

626 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jou∫ÆMode
, 
ii
, 1, 
eMode
);

629 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

639 
PøgTyp_JOURNAL_SIZE_LIMIT
: {

640 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

641 
i64
 
iLimô
 = -2;

642 if–
zRight
 ){

643 
	`sqlôe3DecOrHexToI64
(
zRight
, &
iLimô
);

644 if–
iLimô
<-1 ) iLimit = -1;

646 
iLimô
 = 
	`sqlôe3PagîJou∫ÆSizeLimô
(
pPagî
, iLimit);

647 
	`ªtu∫SögÀI¡
(
v
, "jou∫Æ_size_limô", 
iLimô
);

660 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


661 
PøgTyp_AUTO_VACUUM
: {

662 
Båì
 *
pBt
 = 
pDb
->pBt;

663 
	`as£π
–
pBt
!=0 );

664 if–!
zRight
 ){

665 
	`ªtu∫SögÀI¡
(
v
, "auto_vacuum", 
	`sqlôe3BåìGëAutoVacuum
(
pBt
));

667 
eAuto
 = 
	`gëAutoVacuum
(
zRight
);

668 
	`as£π
–
eAuto
>=0 &&ÉAuto<=2 );

669 
db
->
√xtAutovac
 = (
u8
)
eAuto
;

675 
rc
 = 
	`sqlôe3BåìSëAutoVacuum
(
pBt
, 
eAuto
);

676 if–
rc
==
SQLITE_OK
 && (
eAuto
==1 ||ÉAuto==2) ){

682 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

683 c⁄° 
VdbeOpLi°
 
£tMëa6
[] = {

684 { 
OP_Tønß˘i⁄
, 0, 1, 0},

685 { 
OP_RódCookõ
, 0, 1, 
BTREE_LARGEST_ROOT_PAGE
},

686 { 
OP_If
, 1, 0, 0},

687 { 
OP_HÆt
, 
SQLITE_OK
, 
OE_Ab‹t
, 0},

688 { 
OP_SëCookõ
, 0, 
BTREE_INCR_VACUUM
, 0},

690 
VdbeOp
 *
aOp
;

691 
iAddr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

692 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
£tMëa6
));

693 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
£tMëa6
), sëMëa6, 
iLn
);

694 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

695 
aOp
[0].
p1
 = 
iDb
;

696 
aOp
[1].
p1
 = 
iDb
;

697 
aOp
[2].
p2
 = 
iAddr
+4;

698 
aOp
[4].
p1
 = 
iDb
;

699 
aOp
[4].
p3
 = 
eAuto
 - 1;

700 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

712 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


713 
PøgTyp_INCREMENTAL_VACUUM
: {

714 
iLimô
, 
addr
;

715 if–
zRight
==0 || !
	`sqlôe3GëI¡32
(zRight, &
iLimô
) || iLimit<=0 ){

716 
iLimô
 = 0x7fffffff;

718 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

719 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
iLimô
, 1);

720 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_In¸Vacuum
, 
iDb
); 
	`VdbeCovîage
(v);

721 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Resu…Row
, 1);

722 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

723 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 1, 
addr
); 
	`VdbeCovîage
(v);

724 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

729 #i‚de‡
SQLITE_OMIT_PAGER_PRAGMAS


741 
PøgTyp_CACHE_SIZE
: {

742 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

743 if–!
zRight
 ){

744 
	`ªtu∫SögÀI¡
(
v
, "ˇche_size", 
pDb
->
pSchema
->
ˇche_size
);

746 
size
 = 
	`sqlôe3Atoi
(
zRight
);

747 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

748 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

775 
PøgTyp_CACHE_SPILL
: {

776 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

777 if–!
zRight
 ){

778 
	`ªtu∫SögÀI¡
(
v
, "cache_spill",

779 (
db
->
Êags
 & 
SQLITE_CacheSpûl
)==0 ? 0 :

780 
	`sqlôe3BåìSëSpûlSize
(
pDb
->
pBt
,0));

782 
size
 = 1;

783 if–
	`sqlôe3GëI¡32
(
zRight
, &
size
) ){

784 
	`sqlôe3BåìSëSpûlSize
(
pDb
->
pBt
, 
size
);

786 if–
	`sqlôe3GëBoﬁón
(
zRight
, 
size
!=0) ){

787 
db
->
Êags
 |
SQLITE_CacheSpûl
;

789 
db
->
Êags
 &~
SQLITE_CacheSpûl
;

791 
	`£tAŒPagîFœgs
(
db
);

810 
PøgTyp_MMAP_SIZE
: {

811 
sqlôe3_öt64
 
sz
;

812 #i‡
SQLITE_MAX_MMAP_SIZE
>0

813 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

814 if–
zRight
 ){

815 
ii
;

816 
	`sqlôe3DecOrHexToI64
(
zRight
, &
sz
);

817 if–
sz
<0 ) sz = 
sqlôe3GlobÆC⁄fig
.
szMm≠
;

818 if–
pId2
->
n
==0 ) 
db
->
szMm≠
 = 
sz
;

819 
ii
=
db
->
nDb
-1; ii>=0; ii--){

820 if–
db
->
aDb
[
ii
].
pBt
 && (ii==
iDb
 || 
pId2
->
n
==0) ){

821 
	`sqlôe3BåìSëMm≠Limô
(
db
->
aDb
[
ii
].
pBt
, 
sz
);

825 
sz
 = -1;

826 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_MMAP_SIZE
, &
sz
);

828 
sz
 = 0;

829 
rc
 = 
SQLITE_OK
;

831 if–
rc
==
SQLITE_OK
 ){

832 
	`ªtu∫SögÀI¡
(
v
, "mm≠_size", 
sz
);

833 }if–
rc
!=
SQLITE_NOTFOUND
 ){

834 
pP¨£
->
nEº
++;

835 
pP¨£
->
rc
 =Ñc;

851 
PøgTyp_TEMP_STORE
: {

852 if–!
zRight
 ){

853 
	`ªtu∫SögÀI¡
(
v
, "ãmp_°‹e", 
db
->
ãmp_°‹e
);

855 
	`ch™geTempSt‹age
(
pP¨£
, 
zRight
);

870 
PøgTyp_TEMP_STORE_DIRECTORY
: {

871 if–!
zRight
 ){

872 
	`ªtu∫SögÀText
(
v
, "ãmp_°‹e_dúe˘‹y", 
sqlôe3_ãmp_dúe˘‹y
);

874 #i‚de‡
SQLITE_OMIT_WSD


875 if–
zRight
[0] ){

876 
ªs
;

877 
rc
 = 
	`sqlôe3OsAc˚ss
(
db
->
pVfs
, 
zRight
, 
SQLITE_ACCESS_READWRITE
, &
ªs
);

878 if–
rc
!=
SQLITE_OK
 || 
ªs
==0 ){

879 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notá writable directory");

880 
¥agma_out
;

883 if–
SQLITE_TEMP_STORE
==0

884 || (
SQLITE_TEMP_STORE
==1 && 
db
->
ãmp_°‹e
<=1)

885 || (
SQLITE_TEMP_STORE
==2 && 
db
->
ãmp_°‹e
==1)

887 
	`övÆid©eTempSt‹age
(
pP¨£
);

889 
	`sqlôe3_‰ì
(
sqlôe3_ãmp_dúe˘‹y
);

890 if–
zRight
[0] ){

891 
sqlôe3_ãmp_dúe˘‹y
 = 
	`sqlôe3_m¥ötf
("%s", 
zRight
);

893 
sqlôe3_ãmp_dúe˘‹y
 = 0;

900 #i‡
SQLITE_OS_WIN


914 
PøgTyp_DATA_STORE_DIRECTORY
: {

915 if–!
zRight
 ){

916 
	`ªtu∫SögÀText
(
v
, "d©a_°‹e_dúe˘‹y", 
sqlôe3_d©a_dúe˘‹y
);

918 #i‚de‡
SQLITE_OMIT_WSD


919 if–
zRight
[0] ){

920 
ªs
;

921 
rc
 = 
	`sqlôe3OsAc˚ss
(
db
->
pVfs
, 
zRight
, 
SQLITE_ACCESS_READWRITE
, &
ªs
);

922 if–
rc
!=
SQLITE_OK
 || 
ªs
==0 ){

923 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notá writable directory");

924 
¥agma_out
;

927 
	`sqlôe3_‰ì
(
sqlôe3_d©a_dúe˘‹y
);

928 if–
zRight
[0] ){

929 
sqlôe3_d©a_dúe˘‹y
 = 
	`sqlôe3_m¥ötf
("%s", 
zRight
);

931 
sqlôe3_d©a_dúe˘‹y
 = 0;

939 #i‡
SQLITE_ENABLE_LOCKING_STYLE


948 
PøgTyp_LOCK_PROXY_FILE
: {

949 if–!
zRight
 ){

950 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

951 *
¥oxy_fûe_∑th
 = 
NULL
;

952 
sqlôe3_fûe
 *
pFûe
 = 
	`sqlôe3PagîFûe
(
pPagî
);

953 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFûe
, 
SQLITE_GET_LOCKPROXYFILE
,

954 &
¥oxy_fûe_∑th
);

955 
	`ªtu∫SögÀText
(
v
, "lock_¥oxy_fûe", 
¥oxy_fûe_∑th
);

957 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pDb
->
pBt
);

958 
sqlôe3_fûe
 *
pFûe
 = 
	`sqlôe3PagîFûe
(
pPagî
);

959 
ªs
;

960 if–
zRight
[0] ){

961 
ªs
=
	`sqlôe3OsFûeC⁄åﬁ
(
pFûe
, 
SQLITE_SET_LOCKPROXYFILE
,

962 
zRight
);

964 
ªs
=
	`sqlôe3OsFûeC⁄åﬁ
(
pFûe
, 
SQLITE_SET_LOCKPROXYFILE
,

965 
NULL
);

967 if–
ªs
!=
SQLITE_OK
 ){

968 
	`sqlôe3Eº‹Msg
(
pP¨£
, "failedÅo setÜockÖroxy file");

969 
¥agma_out
;

985 
PøgTyp_SYNCHRONOUS
: {

986 if–!
zRight
 ){

987 
	`ªtu∫SögÀI¡
(
v
, "synchr⁄ous", 
pDb
->
ß„ty_Àvñ
-1);

989 if–!
db
->
autoCommô
 ){

990 
	`sqlôe3Eº‹Msg
(
pP¨£
,

993 
iLevñ
 = (
	`gëSa„tyLevñ
(
zRight
,0,1)+1Ë& 
PAGER_SYNCHRONOUS_MASK
;

994 if–
iLevñ
==0 ) iLevel = 1;

995 
pDb
->
ß„ty_Àvñ
 = 
iLevñ
;

996 
pDb
->
bSyncSë
 = 1;

997 
	`£tAŒPagîFœgs
(
db
);

1004 #i‚de‡
SQLITE_OMIT_FLAG_PRAGMAS


1005 
PøgTyp_FLAG
: {

1006 if–
zRight
==0 ){

1007 
	`ªtu∫SögÀI¡
(
v
, 
pPøgma
->
zName
, (
db
->
Êags
 &ÖPøgma->
iArg
)!=0 );

1009 
mask
 = 
pPøgma
->
iArg
;

1010 if–
db
->
autoCommô
==0 ){

1013 
mask
 &~(
SQLITE_F‹eignKeys
);

1015 #i‡
SQLITE_USER_AUTHENTICATION


1016 if–
db
->
auth
.
authLevñ
==
UAUTH_U£r
 ){

1018 
mask
 &~(
SQLITE_WrôeSchema
);

1022 if–
	`sqlôe3GëBoﬁón
(
zRight
, 0) ){

1023 
db
->
Êags
 |
mask
;

1025 
db
->
Êags
 &~
mask
;

1026 if–
mask
==
SQLITE_De„rFKs
 ) 
db
->
nDe„ºedImmC⁄s
 = 0;

1033 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

1034 
	`£tAŒPagîFœgs
(
db
);

1040 #i‚de‡
SQLITE_OMIT_SCHEMA_PRAGMAS


1053 
PøgTyp_TABLE_INFO
: if–
zRight
 ){

1054 
TabÀ
 *
pTab
;

1055 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 
LOCATE_NOERR
, 
zRight
, 
zDb
);

1056 if–
pTab
 ){

1057 c⁄° *
azCﬁ
[] = {

1060 
i
, 
k
;

1061 
nHiddí
 = 0;

1062 
Cﬁumn
 *
pCﬁ
;

1063 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1064 
pP¨£
->
nMem
 = 6;

1065 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1066 
	`£tAŒCﬁumnNames
(
v
, 6, 
azCﬁ
); 
	`as£π
–6==
	`AºaySize
(azCol) );

1067 
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
);

1068 
i
=0, 
pCﬁ
=
pTab
->
aCﬁ
; i<pTab->
nCﬁ
; i++,ÖCol++){

1069 if–
	`IsHiddíCﬁumn
(
pCﬁ
) ){

1070 
nHiddí
++;

1073 if–(
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)==0 ){

1074 
k
 = 0;

1075 }if–
pPk
==0 ){

1076 
k
 = 1;

1078 
k
=1; k<=
pTab
->
nCﬁ
 && 
pPk
->
aiCﬁumn
[k-1]!=
i
; k++){}

1080 
	`as£π
–
pCﬁ
->
pDÊt
==0 ||ÖCﬁ->pDÊt->
›
==
TK_SPAN
 );

1081 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "issisi",

1082 
i
-
nHiddí
,

1083 
pCﬁ
->
zName
,

1084 
	`sqlôe3CﬁumnTy≥
(
pCﬁ
,""),

1085 
pCﬁ
->
nŸNuŒ
 ? 1 : 0,

1086 
pCﬁ
->
pDÊt
 ?ÖCﬁ->pDÊt->
u
.
zTokí
 : 0,

1087 
k
);

1088 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 6);

1094 
PøgTyp_STATS
: {

1095 c⁄° *
azCﬁ
[] = { "table", "index", "width", "height" };

1096 
Index
 *
pIdx
;

1097 
HashEÀm
 *
i
;

1098 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1099 
pP¨£
->
nMem
 = 4;

1100 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1101 
	`£tAŒCﬁumnNames
(
v
, 4, 
azCﬁ
); 
	`as£π
–4==
	`AºaySize
(azCol) );

1102 
i
=
	`sqlôeHashFú°
(&
pDb
->
pSchema
->
tblHash
); i; i=
	`sqlôeHashNext
(i)){

1103 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
i
);

1104 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "ssii",

1105 
pTab
->
zName
,

1107 
pTab
->
szTabRow
,

1108 
pTab
->
nRowLogE°
);

1109 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 4);

1110 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1111 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 2, "sii",

1112 
pIdx
->
zName
,

1113 
pIdx
->
szIdxRow
,

1114 
pIdx
->
aiRowLogE°
[0]);

1115 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 4);

1121 
PøgTyp_INDEX_INFO
: if–
zRight
 ){

1122 
Index
 *
pIdx
;

1123 
TabÀ
 *
pTab
;

1124 
pIdx
 = 
	`sqlôe3FödIndex
(
db
, 
zRight
, 
zDb
);

1125 if–
pIdx
 ){

1126 c⁄° *
azCﬁ
[] = {

1129 
i
;

1130 
mx
;

1131 if–
pPøgma
->
iArg
 ){

1133 
mx
 = 
pIdx
->
nCﬁumn
;

1134 
pP¨£
->
nMem
 = 6;

1137 
mx
 = 
pIdx
->
nKeyCﬁ
;

1138 
pP¨£
->
nMem
 = 3;

1140 
pTab
 = 
pIdx
->
pTabÀ
;

1141 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1142 
	`as£π
–
pP¨£
->
nMem
<=
	`AºaySize
(
azCﬁ
) );

1143 
	`£tAŒCﬁumnNames
(
v
, 
pP¨£
->
nMem
, 
azCﬁ
);

1144 
i
=0; i<
mx
; i++){

1145 
i16
 
˙um
 = 
pIdx
->
aiCﬁumn
[
i
];

1146 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iis", 
i
, 
˙um
,

1147 
˙um
<0 ? 0 : 
pTab
->
aCﬁ
[˙um].
zName
);

1148 if–
pPøgma
->
iArg
 ){

1149 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 4, "isi",

1150 
pIdx
->
aS‹tOrdî
[
i
],

1151 
pIdx
->
azCﬁl
[
i
],

1152 
i
<
pIdx
->
nKeyCﬁ
);

1154 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 
pP¨£
->
nMem
);

1160 
PøgTyp_INDEX_LIST
: if–
zRight
 ){

1161 
Index
 *
pIdx
;

1162 
TabÀ
 *
pTab
;

1163 
i
;

1164 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zRight
, 
zDb
);

1165 if–
pTab
 ){

1166 c⁄° *
azCﬁ
[] = {

1169 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1170 
pP¨£
->
nMem
 = 5;

1171 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1172 
	`£tAŒCﬁumnNames
(
v
, 5, 
azCﬁ
); 
	`as£π
–5==
	`AºaySize
(azCol) );

1173 
pIdx
=
pTab
->
pIndex
, 
i
=0;ÖIdx;ÖIdxıIdx->
pNext
, i++){

1174 c⁄° *
azOrigö
[] = { "c", "u", "pk" };

1175 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "isisi",

1176 
i
,

1177 
pIdx
->
zName
,

1178 
	`IsUniqueIndex
(
pIdx
),

1179 
azOrigö
[
pIdx
->
idxTy≥
],

1180 
pIdx
->
pP¨tIdxWhîe
!=0);

1181 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 5);

1187 
PøgTyp_DATABASE_LIST
: {

1188 c⁄° *
azCﬁ
[] = { "seq", "name", "file" };

1189 
i
;

1190 
pP¨£
->
nMem
 = 3;

1191 
	`£tAŒCﬁumnNames
(
v
, 3, 
azCﬁ
); 
	`as£π
–3==
	`AºaySize
(azCol) );

1192 
i
=0; i<
db
->
nDb
; i++){

1193 if–
db
->
aDb
[
i
].
pBt
==0 ) ;

1194 
	`as£π
–
db
->
aDb
[
i
].
zName
!=0 );

1195 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iss",

1196 
i
,

1197 
db
->
aDb
[
i
].
zName
,

1198 
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[
i
].
pBt
));

1199 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 3);

1204 
PøgTyp_COLLATION_LIST
: {

1205 c⁄° *
azCﬁ
[] = { "seq", "name" };

1206 
i
 = 0;

1207 
HashEÀm
 *
p
;

1208 
pP¨£
->
nMem
 = 2;

1209 
	`£tAŒCﬁumnNames
(
v
, 2, 
azCﬁ
); 
	`as£π
–2==
	`AºaySize
(azCol) );

1210 
p
=
	`sqlôeHashFú°
(&
db
->
aCﬁlSeq
);Ö;Ö=
	`sqlôeHashNext
(p)){

1211 
CﬁlSeq
 *
pCﬁl
 = (CﬁlSeq *)
	`sqlôeHashD©a
(
p
);

1212 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "is", 
i
++, 
pCﬁl
->
zName
);

1213 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 2);

1219 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


1220 
PøgTyp_FOREIGN_KEY_LIST
: if–
zRight
 ){

1221 
FKey
 *
pFK
;

1222 
TabÀ
 *
pTab
;

1223 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zRight
, 
zDb
);

1224 if–
pTab
 ){

1225 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1226 
pFK
 = 
pTab
->
pFKey
;

1227 if–
pFK
 ){

1228 c⁄° *
azCﬁ
[] = {

1232 
i
 = 0;

1233 
pP¨£
->
nMem
 = 8;

1234 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1235 
	`£tAŒCﬁumnNames
(
v
, 8, 
azCﬁ
); 
	`as£π
–8==
	`AºaySize
(azCol) );

1236 
pFK
){

1237 
j
;

1238 
j
=0; j<
pFK
->
nCﬁ
; j++){

1239 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "iissssss",

1240 
i
,

1241 
j
,

1242 
pFK
->
zTo
,

1243 
pTab
->
aCﬁ
[
pFK
->aCﬁ[
j
].
iFrom
].
zName
,

1244 
pFK
->
aCﬁ
[
j
].
zCﬁ
,

1245 
	`a˘i⁄Name
(
pFK
->
aA˘i⁄
[1]),

1246 
	`a˘i⁄Name
(
pFK
->
aA˘i⁄
[0]),

1248 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 8);

1250 ++
i
;

1251 
pFK
 =ÖFK->
pNextFrom
;

1259 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


1260 #i‚de‡
SQLITE_OMIT_TRIGGER


1261 
PøgTyp_FOREIGN_KEY_CHECK
: {

1262 
FKey
 *
pFK
;

1263 
TabÀ
 *
pTab
;

1264 
TabÀ
 *
pP¨ít
;

1265 
Index
 *
pIdx
;

1266 
i
;

1267 
j
;

1268 
HashEÀm
 *
k
;

1269 
x
;

1270 
ªgResu…
;

1271 
ªgKey
;

1272 
ªgRow
;

1273 
addrT›
;

1274 
addrOk
;

1275 *
aiCﬁs
;

1276 c⁄° *
azCﬁ
[] = { "table", "rowid", "parent", "fkid" };

1278 
ªgResu…
 = 
pP¨£
->
nMem
+1;

1279 
pP¨£
->
nMem
 += 4;

1280 
ªgKey
 = ++
pP¨£
->
nMem
;

1281 
ªgRow
 = ++
pP¨£
->
nMem
;

1282 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1283 
	`£tAŒCﬁumnNames
(
v
, 4, 
azCﬁ
); 
	`as£π
–4==
	`AºaySize
(azCol) );

1284 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

1285 
k
 = 
	`sqlôeHashFú°
(&
db
->
aDb
[
iDb
].
pSchema
->
tblHash
);

1286  
k
 ){

1287 if–
zRight
 ){

1288 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
zRight
, 
zDb
);

1289 
k
 = 0;

1291 
pTab
 = (
TabÀ
*)
	`sqlôeHashD©a
(
k
);

1292 
k
 = 
	`sqlôeHashNext
(k);

1294 if–
pTab
==0 ||ÖTab->
pFKey
==0 ) ;

1295 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

1296 if–
pTab
->
nCﬁ
+
ªgRow
>
pP¨£
->
nMem
 )ÖParse->nMem =ÖTab->nCol +ÑegRow;

1297 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 0, 
iDb
, 
pTab
, 
OP_O≥nRód
);

1298 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
ªgResu…
, 
pTab
->
zName
);

1299 
i
=1, 
pFK
=
pTab
->
pFKey
;ÖFK; i++,ÖFKıFK->
pNextFrom
){

1300 
pP¨ít
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFK
->
zTo
, 
zDb
);

1301 if–
pP¨ít
==0 ) ;

1302 
pIdx
 = 0;

1303 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pP¨ít
->
äum
, 0,ÖP¨ít->
zName
);

1304 
x
 = 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pP¨ít
, 
pFK
, &
pIdx
, 0);

1305 if–
x
==0 ){

1306 if–
pIdx
==0 ){

1307 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
i
, 
iDb
, 
pP¨ít
, 
OP_O≥nRód
);

1309 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nRód
, 
i
, 
pIdx
->
äum
, 
iDb
);

1310 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

1313 
k
 = 0;

1317 
	`as£π
–
pP¨£
->
nEº
>0 || 
pFK
==0 );

1318 if–
pFK
 ) ;

1319 if–
pP¨£
->
nTab
<
i
 )ÖParse->nTab = i;

1320 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 0); 
	`VdbeCovîage
(v);

1321 
i
=1, 
pFK
=
pTab
->
pFKey
;ÖFK; i++,ÖFKıFK->
pNextFrom
){

1322 
pP¨ít
 = 
	`sqlôe3FödTabÀ
(
db
, 
pFK
->
zTo
, 
zDb
);

1323 
pIdx
 = 0;

1324 
aiCﬁs
 = 0;

1325 if–
pP¨ít
 ){

1326 
x
 = 
	`sqlôe3FkLoˇãIndex
(
pP¨£
, 
pP¨ít
, 
pFK
, &
pIdx
, &
aiCﬁs
);

1327 
	`as£π
–
x
==0 );

1329 
addrOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1330 if–
pP¨ít
 && 
pIdx
==0 ){

1331 
iKey
 = 
pFK
->
aCﬁ
[0].
iFrom
;

1332 
	`as£π
–
iKey
>=0 && iKey<
pTab
->
nCﬁ
 );

1333 if–
iKey
!=
pTab
->
iPKey
 ){

1334 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 0, 
iKey
, 
ªgRow
);

1335 
	`sqlôe3CﬁumnDeÁu…
(
v
, 
pTab
, 
iKey
, 
ªgRow
);

1336 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRow
, 
addrOk
); 
	`VdbeCovîage
(v);

1338 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 0, 
ªgRow
);

1340 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
i
, 0, 
ªgRow
); 
	`VdbeCovîage
(v);

1341 
	`sqlôe3VdbeGŸo
(
v
, 
addrOk
);

1342 
	`sqlôe3VdbeJumpHîe
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-2);

1344 
j
=0; j<
pFK
->
nCﬁ
; j++){

1345 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 0,

1346 
aiCﬁs
 ?áiCﬁs[
j
] : 
pFK
->
aCﬁ
[j].
iFrom
, 
ªgRow
+j);

1347 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgRow
+
j
, 
addrOk
); 
	`VdbeCovîage
(v);

1349 if–
pP¨ít
 ){

1350 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgRow
, 
pFK
->
nCﬁ
, 
ªgKey
,

1351 
	`sqlôe3IndexAfföôySå
(
db
,
pIdx
), 
pFK
->
nCﬁ
);

1352 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
i
, 
addrOk
, 
ªgKey
, 0);

1353 
	`VdbeCovîage
(
v
);

1356 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 0, 
ªgResu…
+1);

1357 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 
ªgResu…
+2, "si", 
pFK
->
zTo
, 
i
-1);

1358 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgResu…
, 4);

1359 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrOk
);

1360 
	`sqlôe3DbFªe
(
db
, 
aiCﬁs
);

1362 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 0, 
addrT›
+1); 
	`VdbeCovîage
(v);

1363 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
);

1370 #i‚de‡
NDEBUG


1371 
PøgTyp_PARSER_TRACE
: {

1372 if–
zRight
 ){

1373 if–
	`sqlôe3GëBoﬁón
(
zRight
, 0) ){

1374 
	`sqlôe3P¨£rTø˚
(
°dout
, "parser: ");

1376 
	`sqlôe3P¨£rTø˚
(0, 0);

1386 
PøgTyp_CASE_SENSITIVE_LIKE
: {

1387 if–
zRight
 ){

1388 
	`sqlôe3Regi°îLikeFun˘i⁄s
(
db
, 
	`sqlôe3GëBoﬁón
(
zRight
, 0));

1393 #i‚de‡
SQLITE_INTEGRITY_CHECK_ERROR_MAX


1394 
	#SQLITE_INTEGRITY_CHECK_ERROR_MAX
 100

	)

1397 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


1402 
PøgTyp_INTEGRITY_CHECK
: {

1403 
i
, 
j
, 
addr
, 
mxEº
;

1405 
isQuick
 = (
	`sqlôe3Tﬁowî
(
zLe·
[0])=='q');

1416 
	`as£π
–
iDb
>=0 );

1417 
	`as£π
–
iDb
==0 || 
pId2
->
z
 );

1418 if–
pId2
->
z
==0 ) 
iDb
 = -1;

1421 
pP¨£
->
nMem
 = 6;

1422 
	`£tO√CﬁumnName
(
v
, "integrity_check");

1425 
mxEº
 = 
SQLITE_INTEGRITY_CHECK_ERROR_MAX
;

1426 if–
zRight
 ){

1427 
	`sqlôe3GëI¡32
(
zRight
, &
mxEº
);

1428 if–
mxEº
<=0 ){

1429 
mxEº
 = 
SQLITE_INTEGRITY_CHECK_ERROR_MAX
;

1432 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
mxEº
, 1);

1435 
i
=0; i<
db
->
nDb
; i++){

1436 
HashEÀm
 *
x
;

1437 
Hash
 *
pTbls
;

1438 *
aRoŸ
;

1439 
˙t
 = 0;

1440 
mxIdx
 = 0;

1441 
nIdx
;

1443 if–
OMIT_TEMPDB
 && 
i
==1 ) ;

1444 if–
iDb
>=0 && 
i
!=iDb ) ;

1446 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
i
);

1447 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1);

1448 
	`VdbeCovîage
(
v
);

1449 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1450 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1457 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
i
, 0) );

1458 
pTbls
 = &
db
->
aDb
[
i
].
pSchema
->
tblHash
;

1459 
˙t
=0, 
x
=
	`sqlôeHashFú°
(
pTbls
); x; x=
	`sqlôeHashNext
(x)){

1460 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1461 
Index
 *
pIdx
;

1462 if–
	`HasRowid
(
pTab
ËË
˙t
++;

1463 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){ 
˙t
++; }

1464 if–
nIdx
>
mxIdx
 ) mxIdx =ÇIdx;

1466 
aRoŸ
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
˙t
+1));

1467 if–
aRoŸ
==0 ) ;

1468 
˙t
=0, 
x
=
	`sqlôeHashFú°
(
pTbls
); x; x=
	`sqlôeHashNext
(x)){

1469 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1470 
Index
 *
pIdx
;

1471 if–
	`HasRowid
(
pTab
ËË
aRoŸ
[
˙t
++] =ÖTab->
äum
;

1472 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

1473 
aRoŸ
[
˙t
++] = 
pIdx
->
äum
;

1476 
aRoŸ
[
˙t
] = 0;

1479 
pP¨£
->
nMem
 = 
	`MAX
–pP¨£->nMem, 8+
mxIdx
 );

1482 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_I¡egrôyCk
, 2, 
˙t
, 1, (*)
aRoŸ
,
P4_INTARRAY
);

1483 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
i
);

1484 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 2); 
	`VdbeCovîage
(v);

1485 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Såög8
, 0, 3, 0,

1486 
	`sqlôe3MPrötf
(
db
, "*** i¿d©aba£ %†***\n", db->
aDb
[
i
].
zName
),

1487 
P4_DYNAMIC
);

1488 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Move
, 2, 4, 1);

1489 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 2);

1490 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 2, 1);

1491 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1495 
x
=
	`sqlôeHashFú°
(
pTbls
); x && !
isQuick
; x=
	`sqlôeHashNext
(x)){

1496 
TabÀ
 *
pTab
 = 
	`sqlôeHashD©a
(
x
);

1497 
Index
 *
pIdx
, *
pPk
;

1498 
Index
 *
pPri‹
 = 0;

1499 
lo›T›
;

1500 
iD©aCur
, 
iIdxCur
;

1501 
r1
 = -1;

1503 if–
pTab
->
pIndex
==0 ) ;

1504 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

1505 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1);

1506 
	`VdbeCovîage
(
v
);

1507 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1508 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

1509 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

1510 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nRód
, 0,

1511 1, 0, &
iD©aCur
, &
iIdxCur
);

1512 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 7);

1513 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1514 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 8+
j
);

1516 
	`as£π
–
pP¨£
->
nMem
>=8+
j
 );

1517 
	`as£π
–
	`sqlôe3NoTempsInR™ge
(
pP¨£
,1,7+
j
) );

1518 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iD©aCur
, 0); 
	`VdbeCovîage
(v);

1519 
lo›T›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 7, 1);

1521 
j
=0; j<
pTab
->
nCﬁ
; j++){

1522 *
zEº
;

1523 
jmp2
, 
jmp3
;

1524 if–
j
==
pTab
->
iPKey
 ) ;

1525 if–
pTab
->
aCﬁ
[
j
].
nŸNuŒ
==0 ) ;

1526 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
j
, 3);

1527 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_TYPEOFARG
);

1528 
jmp2
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NŸNuŒ
, 3); 
	`VdbeCovîage
(v);

1529 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1530 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "NULL vÆuêö %s.%s", 
pTab
->
zName
,

1531 
pTab
->
aCﬁ
[
j
].
zName
);

1532 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Såög8
, 0, 3, 0, 
zEº
, 
P4_DYNAMIC
);

1533 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 3, 1);

1534 
jmp3
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1); 
	`VdbeCovîage
(v);

1535 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

1536 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp2
);

1537 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp3
);

1540 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1541 
jmp2
, 
jmp3
, 
jmp4
, 
jmp5
;

1542 
ckUniq
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1543 if–
pPk
==
pIdx
 ) ;

1544 
r1
 = 
	`sqlôe3Gíî©eIndexKey
(
pP¨£
, 
pIdx
, 
iD©aCur
, 0, 0, &
jmp3
,

1545 
pPri‹
, 
r1
);

1546 
pPri‹
 = 
pIdx
;

1547 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 8+
j
, 1);

1549 
jmp2
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iIdxCur
+
j
, 
ckUniq
, 
r1
,

1550 
pIdx
->
nCﬁumn
); 
	`VdbeCovîage
(
v
);

1551 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1552 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, "row ");

1553 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 7, 3, 3);

1554 
	`sqlôe3VdbeLﬂdSåög
(
v
, 4, " missing from index ");

1555 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 3);

1556 
jmp5
 = 
	`sqlôe3VdbeLﬂdSåög
(
v
, 4, 
pIdx
->
zName
);

1557 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 4, 3, 3);

1558 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 3, 1);

1559 
jmp4
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 1); 
	`VdbeCovîage
(v);

1560 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

1561 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp2
);

1565 if–
	`IsUniqueIndex
(
pIdx
) ){

1566 
uniqOk
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1567 
jmp6
;

1568 
kk
;

1569 
kk
=0; kk<
pIdx
->
nKeyCﬁ
; kk++){

1570 
iCﬁ
 = 
pIdx
->
aiCﬁumn
[
kk
];

1571 
	`as£π
–
iCﬁ
!=
XN_ROWID
 && iCﬁ<
pTab
->
nCﬁ
 );

1572 if–
iCﬁ
>=0 && 
pTab
->
aCﬁ
[iCﬁ].
nŸNuŒ
 ) ;

1573 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
r1
+
kk
, 
uniqOk
);

1574 
	`VdbeCovîage
(
v
);

1576 
jmp6
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Next
, 
iIdxCur
+
j
); 
	`VdbeCovîage
(v);

1577 
	`sqlôe3VdbeGŸo
(
v
, 
uniqOk
);

1578 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp6
);

1579 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_IdxGT
, 
iIdxCur
+
j
, 
uniqOk
, 
r1
,

1580 
pIdx
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1581 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1582 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, "non-uniqueÉntry in index ");

1583 
	`sqlôe3VdbeGŸo
(
v
, 
jmp5
);

1584 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
uniqOk
);

1586 
	`sqlôe3VdbeJumpHîe
(
v
, 
jmp4
);

1587 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
pP¨£
, 
jmp3
);

1589 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iD©aCur
, 
lo›T›
); 
	`VdbeCovîage
(v);

1590 
	`sqlôe3VdbeJumpHîe
(
v
, 
lo›T›
-1);

1591 #i‚de‡
SQLITE_OMIT_BTREECOUNT


1592 
	`sqlôe3VdbeLﬂdSåög
(
v
, 2, "wrong # ofÉntries in index ");

1593 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

1594 if–
pPk
==
pIdx
 ) ;

1595 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1596 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 1, 
addr
+2); 
	`VdbeCovîage
(v);

1597 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_HÆt
, 0, 0);

1598 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iIdxCur
+
j
, 3);

1599 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 8+
j
, 
addr
+8, 3); 
	`VdbeCovîage
(v);

1600 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NOTNULL
);

1601 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 1, -1);

1602 
	`sqlôe3VdbeLﬂdSåög
(
v
, 3, 
pIdx
->
zName
);

1603 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C⁄ˇt
, 3, 2, 7);

1604 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 7, 1);

1610 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

1611 c⁄° 
VdbeOpLi°
 
ídCode
[] = {

1612 { 
OP_AddImm
, 1, 0, 0},

1613 { 
OP_If
, 1, 4, 0},

1614 { 
OP_Såög8
, 0, 3, 0},

1615 { 
OP_Resu…Row
, 3, 1, 0},

1617 
VdbeOp
 *
aOp
;

1619 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
ídCode
),ÉndCode, 
iLn
);

1620 if–
aOp
 ){

1621 
aOp
[0].
p2
 = -
mxEº
;

1622 
aOp
[2].
p4ty≥
 = 
P4_STATIC
;

1623 
aOp
[2].
p4
.
z
 = "ok";

1630 #i‚de‡
SQLITE_OMIT_UTF16


1653 
PøgTyp_ENCODING
: {

1654 c⁄° 
	sEncName
 {

1655 *
zName
;

1656 
u8
 
íc
;

1657 } 
í˙ames
[] = {

1658 { "UTF8", 
SQLITE_UTF8
 },

1659 { "UTF-8", 
SQLITE_UTF8
 },

1660 { "UTF-16À", 
SQLITE_UTF16LE
 },

1661 { "UTF-16be", 
SQLITE_UTF16BE
 },

1662 { "UTF16À", 
SQLITE_UTF16LE
 },

1663 { "UTF16be", 
SQLITE_UTF16BE
 },

1668 c⁄° 
EncName
 *
pEnc
;

1669 if–!
zRight
 ){

1670 if–
	`sqlôe3RódSchema
(
pP¨£
ËË
¥agma_out
;

1671 
	`as£π
–
í˙ames
[
SQLITE_UTF8
].
íc
==SQLITE_UTF8 );

1672 
	`as£π
–
í˙ames
[
SQLITE_UTF16LE
].
íc
==SQLITE_UTF16LE );

1673 
	`as£π
–
í˙ames
[
SQLITE_UTF16BE
].
íc
==SQLITE_UTF16BE );

1674 
	`ªtu∫SögÀText
(
v
, "ícodög", 
í˙ames
[
	`ENC
(
pP¨£
->
db
)].
zName
);

1682 !(
	`DbHasPr›îty
(
db
, 0, 
DB_SchemaLﬂded
)) ||

1683 
	`DbHasPr›îty
(
db
, 0, 
DB_Em±y
)

1685 
pEnc
=&
í˙ames
[0];ÖEnc->
zName
;ÖEnc++){

1686 if–0==
	`sqlôe3SåICmp
(
zRight
, 
pEnc
->
zName
) ){

1687 
	`SCHEMA_ENC
(
db
Ë
	`ENC
(db) =

1688 
pEnc
->
íc
 ?ÖEnc->í¯: 
SQLITE_UTF16NATIVE
;

1692 if–!
pEnc
->
zName
 ){

1693 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unsuµ‹ãdÉncodög: %s", 
zRight
);

1701 #i‚de‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


1734 
PøgTyp_HEADER_VALUE
: {

1735 
iCookõ
 = 
pPøgma
->
iArg
;

1736 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

1737 if–
zRight
 && (
pPøgma
->
mPøgFœg
 & 
PøgFœg_RódO∆y
)==0 ){

1739 c⁄° 
VdbeOpLi°
 
£tCookõ
[] = {

1740 { 
OP_Tønß˘i⁄
, 0, 1, 0},

1741 { 
OP_SëCookõ
, 0, 0, 0},

1743 
VdbeOp
 *
aOp
;

1744 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
£tCookõ
));

1745 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
£tCookõ
), setCookie, 0);

1746 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

1747 
aOp
[0].
p1
 = 
iDb
;

1748 
aOp
[1].
p1
 = 
iDb
;

1749 
aOp
[1].
p2
 = 
iCookõ
;

1750 
aOp
[1].
p3
 = 
	`sqlôe3Atoi
(
zRight
);

1753 c⁄° 
VdbeOpLi°
 
ªadCookõ
[] = {

1754 { 
OP_Tønß˘i⁄
, 0, 0, 0},

1755 { 
OP_RódCookõ
, 0, 1, 0},

1756 { 
OP_Resu…Row
, 1, 1, 0}

1758 
VdbeOp
 *
aOp
;

1759 
	`sqlôe3VdbeVîifyNoMÆlocRequúed
(
v
, 
	`AºaySize
(
ªadCookõ
));

1760 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
ªadCookõ
),readCookie,0);

1761 if–
	`ONLY_IF_REALLOC_STRESS
(
aOp
==0) ) ;

1762 
aOp
[0].
p1
 = 
iDb
;

1763 
aOp
[1].
p1
 = 
iDb
;

1764 
aOp
[1].
p3
 = 
iCookõ
;

1765 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

1766 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, 
zLe·
, 
SQLITE_TRANSIENT
);

1767 
	`sqlôe3VdbeReußbÀ
(
v
);

1773 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


1780 
PøgTyp_COMPILE_OPTIONS
: {

1781 
i
 = 0;

1782 c⁄° *
zO±
;

1783 
pP¨£
->
nMem
 = 1;

1784 
	`£tO√CﬁumnName
(
v
, "compile_option");

1785  (
zO±
 = 
	`sqlôe3_compûe›ti⁄_gë
(
i
++))!=0 ){

1786 
	`sqlôe3VdbeLﬂdSåög
(
v
, 1, 
zO±
);

1787 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 1);

1789 
	`sqlôe3VdbeReußbÀ
(
v
);

1794 #i‚de‡
SQLITE_OMIT_WAL


1800 
PøgTyp_WAL_CHECKPOINT
: {

1801 c⁄° *
azCﬁ
[] = { "busy", "log", "checkpointed" };

1802 
iBt
 = (
pId2
->
z
?
iDb
:
SQLITE_MAX_ATTACHED
);

1803 
eMode
 = 
SQLITE_CHECKPOINT_PASSIVE
;

1804 if–
zRight
 ){

1805 if–
	`sqlôe3SåICmp
(
zRight
, "full")==0 ){

1806 
eMode
 = 
SQLITE_CHECKPOINT_FULL
;

1807 }if–
	`sqlôe3SåICmp
(
zRight
, "restart")==0 ){

1808 
eMode
 = 
SQLITE_CHECKPOINT_RESTART
;

1809 }if–
	`sqlôe3SåICmp
(
zRight
, "truncate")==0 ){

1810 
eMode
 = 
SQLITE_CHECKPOINT_TRUNCATE
;

1813 
	`£tAŒCﬁumnNames
(
v
, 3, 
azCﬁ
); 
	`as£π
–3==
	`AºaySize
(azCol) );

1814 
pP¨£
->
nMem
 = 3;

1815 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Checkpoöt
, 
iBt
, 
eMode
, 1);

1816 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 3);

1828 
PøgTyp_WAL_AUTOCHECKPOINT
: {

1829 if–
zRight
 ){

1830 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
	`sqlôe3Atoi
(
zRight
));

1832 
	`ªtu∫SögÀI¡
(
v
, "wal_autocheckpoint",

1833 
db
->
xWÆCÆlback
==
sqlôe3WÆDeÁu…Hook
 ?

1834 
	`SQLITE_PTR_TO_INT
(
db
->
pWÆArg
) : 0);

1846 
PøgTyp_SHRINK_MEMORY
: {

1847 
	`sqlôe3_db_ªÀa£_mem‹y
(
db
);

1861 
	`as£π
–
pPøgma
->
ePøgTyp
==
PøgTyp_BUSY_TIMEOUT
 );

1862 if–
zRight
 ){

1863 
	`sqlôe3_busy_timeout
(
db
, 
	`sqlôe3Atoi
(
zRight
));

1865 
	`ªtu∫SögÀI¡
(
v
, "timeout", 
db
->
busyTimeout
);

1880 
PøgTyp_SOFT_HEAP_LIMIT
: {

1881 
sqlôe3_öt64
 
N
;

1882 if–
zRight
 && 
	`sqlôe3DecOrHexToI64
(zRight, &
N
)==
SQLITE_OK
 ){

1883 
	`sqlôe3_so·_hóp_limô64
(
N
);

1885 
	`ªtu∫SögÀI¡
(
v
, "so·_hóp_limô", 
	`sqlôe3_so·_hóp_limô64
(-1));

1896 
PøgTyp_THREADS
: {

1897 
sqlôe3_öt64
 
N
;

1898 if–
zRight


1899 && 
	`sqlôe3DecOrHexToI64
(
zRight
, &
N
)==
SQLITE_OK


1900 && 
N
>=0

1902 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_WORKER_THREADS
, ()(
N
&0x7fffffff));

1904 
	`ªtu∫SögÀI¡
(
v
, "threads",

1905 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_WORKER_THREADS
, -1));

1909 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

1913 
PøgTyp_LOCK_STATUS
: {

1914 c⁄° *c⁄° 
azLockName
[] = {

1917 c⁄° *
azCﬁ
[] = { "database", "status" };

1918 
i
;

1919 
	`£tAŒCﬁumnNames
(
v
, 2, 
azCﬁ
); 
	`as£π
–2==
	`AºaySize
(azCol) );

1920 
pP¨£
->
nMem
 = 2;

1921 
i
=0; i<
db
->
nDb
; i++){

1922 
Båì
 *
pBt
;

1923 c⁄° *
zSèã
 = "unknown";

1924 
j
;

1925 if–
db
->
aDb
[
i
].
zName
==0 ) ;

1926 
pBt
 = 
db
->
aDb
[
i
].pBt;

1927 if–
pBt
==0 || 
	`sqlôe3BåìPagî
(pBt)==0 ){

1928 
zSèã
 = "closed";

1929 }if–
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
i
 ? db->
aDb
[i].
zName
 : 0,

1930 
SQLITE_FCNTL_LOCKSTATE
, &
j
)==
SQLITE_OK
 ){

1931 
zSèã
 = 
azLockName
[
j
];

1933 
	`sqlôe3VdbeMu…iLﬂd
(
v
, 1, "ss", 
db
->
aDb
[
i
].
zName
, 
zSèã
);

1934 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 1, 2);

1940 #ifde‡
SQLITE_HAS_CODEC


1941 
PøgTyp_KEY
: {

1942 if–
zRight
 ) 
	`sqlôe3_key_v2
(
db
, 
zDb
, zRight, 
	`sqlôe3SåÀn30
(zRight));

1945 
PøgTyp_REKEY
: {

1946 if–
zRight
 ) 
	`sqlôe3_ªkey_v2
(
db
, 
zDb
, zRight, 
	`sqlôe3SåÀn30
(zRight));

1949 
PøgTyp_HEXKEY
: {

1950 if–
zRight
 ){

1951 
u8
 
iByã
;

1952 
i
;

1953 
zKey
[40];

1954 
i
=0, 
iByã
=0; i<(
zKey
)*2 && 
	`sqlôe3Isxdigô
(
zRight
[i]); i++){

1955 
iByã
 = (iByã<<4Ë+ 
	`sqlôe3HexToI¡
(
zRight
[
i
]);

1956 if–(
i
&1)!=0 ) 
zKey
[i/2] = 
iByã
;

1958 if–(
zLe·
[3] & 0xf)==0xb ){

1959 
	`sqlôe3_key_v2
(
db
, 
zDb
, 
zKey
, 
i
/2);

1961 
	`sqlôe3_ªkey_v2
(
db
, 
zDb
, 
zKey
, 
i
/2);

1967 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë|| deföed(
SQLITE_ENABLE_CEROD
)

1968 
PøgTyp_ACTIVATE_EXTENSIONS
: if–
zRight
 ){

1969 #ifde‡
SQLITE_HAS_CODEC


1970 if–
	`sqlôe3SåNICmp
(
zRight
, "see-", 4)==0 ){

1971 
	`sqlôe3_a˘iv©e_£e
(&
zRight
[4]);

1974 #ifde‡
SQLITE_ENABLE_CEROD


1975 if–
	`sqlôe3SåNICmp
(
zRight
, "cerod-", 6)==0 ){

1976 
	`sqlôe3_a˘iv©e_˚rod
(&
zRight
[6]);

1985 
¥agma_out
:

1986 
	`sqlôe3DbFªe
(
db
, 
zLe·
);

1987 
	`sqlôe3DbFªe
(
db
, 
zRight
);

1988 
	}
}

	@pragma.h

6 
	#PøgTyp_HEADER_VALUE
 0

	)

7 
	#PøgTyp_AUTO_VACUUM
 1

	)

8 
	#PøgTyp_FLAG
 2

	)

9 
	#PøgTyp_BUSY_TIMEOUT
 3

	)

10 
	#PøgTyp_CACHE_SIZE
 4

	)

11 
	#PøgTyp_CACHE_SPILL
 5

	)

12 
	#PøgTyp_CASE_SENSITIVE_LIKE
 6

	)

13 
	#PøgTyp_COLLATION_LIST
 7

	)

14 
	#PøgTyp_COMPILE_OPTIONS
 8

	)

15 
	#PøgTyp_DATA_STORE_DIRECTORY
 9

	)

16 
	#PøgTyp_DATABASE_LIST
 10

	)

17 
	#PøgTyp_DEFAULT_CACHE_SIZE
 11

	)

18 
	#PøgTyp_ENCODING
 12

	)

19 
	#PøgTyp_FOREIGN_KEY_CHECK
 13

	)

20 
	#PøgTyp_FOREIGN_KEY_LIST
 14

	)

21 
	#PøgTyp_INCREMENTAL_VACUUM
 15

	)

22 
	#PøgTyp_INDEX_INFO
 16

	)

23 
	#PøgTyp_INDEX_LIST
 17

	)

24 
	#PøgTyp_INTEGRITY_CHECK
 18

	)

25 
	#PøgTyp_JOURNAL_MODE
 19

	)

26 
	#PøgTyp_JOURNAL_SIZE_LIMIT
 20

	)

27 
	#PøgTyp_LOCK_PROXY_FILE
 21

	)

28 
	#PøgTyp_LOCKING_MODE
 22

	)

29 
	#PøgTyp_PAGE_COUNT
 23

	)

30 
	#PøgTyp_MMAP_SIZE
 24

	)

31 
	#PøgTyp_PAGE_SIZE
 25

	)

32 
	#PøgTyp_SECURE_DELETE
 26

	)

33 
	#PøgTyp_SHRINK_MEMORY
 27

	)

34 
	#PøgTyp_SOFT_HEAP_LIMIT
 28

	)

35 
	#PøgTyp_STATS
 29

	)

36 
	#PøgTyp_SYNCHRONOUS
 30

	)

37 
	#PøgTyp_TABLE_INFO
 31

	)

38 
	#PøgTyp_TEMP_STORE
 32

	)

39 
	#PøgTyp_TEMP_STORE_DIRECTORY
 33

	)

40 
	#PøgTyp_THREADS
 34

	)

41 
	#PøgTyp_WAL_AUTOCHECKPOINT
 35

	)

42 
	#PøgTyp_WAL_CHECKPOINT
 36

	)

43 
	#PøgTyp_ACTIVATE_EXTENSIONS
 37

	)

44 
	#PøgTyp_HEXKEY
 38

	)

45 
	#PøgTyp_KEY
 39

	)

46 
	#PøgTyp_REKEY
 40

	)

47 
	#PøgTyp_LOCK_STATUS
 41

	)

48 
	#PøgTyp_PARSER_TRACE
 42

	)

49 
	#PøgFœg_NìdSchema
 0x01

	)

50 
	#PøgFœg_RódO∆y
 0x02

	)

51 c⁄° 
	ssPøgmaNames
 {

52 c⁄° *c⁄° 
	mzName
;

53 
u8
 
	mePøgTyp
;

54 
u8
 
	mmPøgFœg
;

55 
u32
 
	miArg
;

56 } 
	gaPøgmaNames
[] = {

57 #i‡
deföed
(
SQLITE_HAS_CODEC
Ë|| deföed(
SQLITE_ENABLE_CEROD
)

59  
PøgTyp_ACTIVATE_EXTENSIONS
,

63 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

65  
PøgTyp_HEADER_VALUE
,

67  
BTREE_APPLICATION_ID
 },

69 #i‡!
deföed
(
SQLITE_OMIT_AUTOVACUUM
)

71  
PøgTyp_AUTO_VACUUM
,

72  
PøgFœg_NìdSchema
,

75 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

76 #i‡!
deföed
(
SQLITE_OMIT_AUTOMATIC_INDEX
)

78  
PøgTyp_FLAG
,

80  
SQLITE_AutoIndex
 },

84  
PøgTyp_BUSY_TIMEOUT
,

87 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

89  
PøgTyp_CACHE_SIZE
,

90  
PøgFœg_NìdSchema
,

93 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

95  
PøgTyp_CACHE_SPILL
,

100  
PøgTyp_CASE_SENSITIVE_LIKE
,

104  
PøgTyp_FLAG
,

106  
SQLITE_CñlSizeCk
 },

107 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

109  
PøgTyp_FLAG
,

111  
SQLITE_Ck±FuŒFSync
 },

113 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

115  
PøgTyp_COLLATION_LIST
,

119 #i‡!
deföed
(
SQLITE_OMIT_COMPILEOPTION_DIAGS
)

121  
PøgTyp_COMPILE_OPTIONS
,

125 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

127  
PøgTyp_FLAG
,

129  
SQLITE_Cou¡Rows
 },

131 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& 
SQLITE_OS_WIN


133  
PøgTyp_DATA_STORE_DIRECTORY
,

137 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

139  
PøgTyp_HEADER_VALUE
,

140  
PøgFœg_RódO∆y
,

141  
BTREE_DATA_VERSION
 },

143 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

145  
PøgTyp_DATABASE_LIST
,

146  
PøgFœg_NìdSchema
,

149 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& !deföed(
SQLITE_OMIT_DEPRECATED
)

151  
PøgTyp_DEFAULT_CACHE_SIZE
,

152  
PøgFœg_NìdSchema
,

155 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

156 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

158  
PøgTyp_FLAG
,

160  
SQLITE_De„rFKs
 },

163 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

165  
PøgTyp_FLAG
,

167  
SQLITE_NuŒCÆlback
 },

169 #i‡!
deföed
(
SQLITE_OMIT_UTF16
)

171  
PøgTyp_ENCODING
,

175 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

177  
PøgTyp_FOREIGN_KEY_CHECK
,

178  
PøgFœg_NìdSchema
,

181 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
)

183  
PøgTyp_FOREIGN_KEY_LIST
,

184  
PøgFœg_NìdSchema
,

187 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

188 #i‡!
deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

190  
PøgTyp_FLAG
,

192  
SQLITE_F‹eignKeys
 },

195 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

197  
PøgTyp_HEADER_VALUE
,

198  
PøgFœg_RódO∆y
,

199  
BTREE_FREE_PAGE_COUNT
 },

201 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

203  
PøgTyp_FLAG
,

205  
SQLITE_FuŒCﬁNames
 },

207  
PøgTyp_FLAG
,

209  
SQLITE_FuŒFSync
 },

211 #i‡
deföed
(
SQLITE_HAS_CODEC
)

213  
PøgTyp_HEXKEY
,

217  
PøgTyp_HEXKEY
,

221 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

222 #i‡!
deföed
(
SQLITE_OMIT_CHECK
)

224  
PøgTyp_FLAG
,

226  
SQLITE_Ign‹eChecks
 },

229 #i‡!
deföed
(
SQLITE_OMIT_AUTOVACUUM
)

231  
PøgTyp_INCREMENTAL_VACUUM
,

232  
PøgFœg_NìdSchema
,

235 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

237  
PøgTyp_INDEX_INFO
,

238  
PøgFœg_NìdSchema
,

241  
PøgTyp_INDEX_LIST
,

242  
PøgFœg_NìdSchema
,

245  
PøgTyp_INDEX_INFO
,

246  
PøgFœg_NìdSchema
,

249 #i‡!
deföed
(
SQLITE_OMIT_INTEGRITY_CHECK
)

251  
PøgTyp_INTEGRITY_CHECK
,

252  
PøgFœg_NìdSchema
,

255 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

257  
PøgTyp_JOURNAL_MODE
,

258  
PøgFœg_NìdSchema
,

261  
PøgTyp_JOURNAL_SIZE_LIMIT
,

265 #i‡
deföed
(
SQLITE_HAS_CODEC
)

267  
PøgTyp_KEY
,

271 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

273  
PøgTyp_FLAG
,

275  
SQLITE_LegacyFûeFmt
 },

277 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


279  
PøgTyp_LOCK_PROXY_FILE
,

283 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_TEST
)

285  
PøgTyp_LOCK_STATUS
,

289 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

291  
PøgTyp_LOCKING_MODE
,

295  
PøgTyp_PAGE_COUNT
,

296  
PøgFœg_NìdSchema
,

299  
PøgTyp_MMAP_SIZE
,

303  
PøgTyp_PAGE_COUNT
,

304  
PøgFœg_NìdSchema
,

307  
PøgTyp_PAGE_SIZE
,

311 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_OMIT_PARSER_TRACE
)

313  
PøgTyp_PARSER_TRACE
,

317 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

319  
PøgTyp_FLAG
,

321  
SQLITE_QuîyO∆y
 },

323 #i‡!
deföed
(
SQLITE_OMIT_INTEGRITY_CHECK
)

325  
PøgTyp_INTEGRITY_CHECK
,

326  
PøgFœg_NìdSchema
,

329 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

331  
PøgTyp_FLAG
,

333  
SQLITE_RódUncommôãd
 },

335  
PøgTyp_FLAG
,

337  
SQLITE_RecTriggîs
 },

339 #i‡
deföed
(
SQLITE_HAS_CODEC
)

341  
PøgTyp_REKEY
,

345 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

347  
PøgTyp_FLAG
,

349  
SQLITE_Revî£Ordî
 },

351 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

353  
PøgTyp_HEADER_VALUE
,

355  
BTREE_SCHEMA_VERSION
 },

357 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

359  
PøgTyp_SECURE_DELETE
,

363 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

365  
PøgTyp_FLAG
,

367  
SQLITE_Sh‹tCﬁNames
 },

370  
PøgTyp_SHRINK_MEMORY
,

374  
PøgTyp_SOFT_HEAP_LIMIT
,

377 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

378 #i‡
deföed
(
SQLITE_DEBUG
)

380  
PøgTyp_FLAG
,

382  
SQLITE_SqlTø˚
 },

385 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

387  
PøgTyp_STATS
,

388  
PøgFœg_NìdSchema
,

391 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

393  
PøgTyp_SYNCHRONOUS
,

394  
PøgFœg_NìdSchema
,

397 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_PRAGMAS
)

399  
PøgTyp_TABLE_INFO
,

400  
PøgFœg_NìdSchema
,

403 #i‡!
deföed
(
SQLITE_OMIT_PAGER_PRAGMAS
)

405  
PøgTyp_TEMP_STORE
,

409  
PøgTyp_TEMP_STORE_DIRECTORY
,

414  
PøgTyp_THREADS
,

417 #i‡!
deföed
(
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
)

419  
PøgTyp_HEADER_VALUE
,

421  
BTREE_USER_VERSION
 },

423 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

424 #i‡
deföed
(
SQLITE_DEBUG
)

426  
PøgTyp_FLAG
,

428  
SQLITE_VdbeAdd›Tø˚
 },

430  
PøgTyp_FLAG
,

432  
SQLITE_SqlTø˚
|
SQLITE_VdbeLi°ög
|
SQLITE_VdbeTø˚
 },

434  
PøgTyp_FLAG
,

436  
SQLITE_VdbeEQP
 },

438  
PøgTyp_FLAG
,

440  
SQLITE_VdbeLi°ög
 },

442  
PøgTyp_FLAG
,

444  
SQLITE_VdbeTø˚
 },

447 #i‡!
deföed
(
SQLITE_OMIT_WAL
)

449  
PøgTyp_WAL_AUTOCHECKPOINT
,

453  
PøgTyp_WAL_CHECKPOINT
,

454  
PøgFœg_NìdSchema
,

457 #i‡!
deföed
(
SQLITE_OMIT_FLAG_PRAGMAS
)

459  
PøgTyp_FLAG
,

461  
SQLITE_WrôeSchema
|
SQLITE_RecovîyMode
 },

	@prepare.c

16 
	~"sqlôeI¡.h
"

22 
	$c‹ru±Schema
(

23 
InôD©a
 *
pD©a
,

24 c⁄° *
zObj
,

25 c⁄° *
zExåa


27 
sqlôe3
 *
db
 = 
pD©a
->db;

28 if–!
db
->
mÆlocFaûed
 && (db->
Êags
 & 
SQLITE_RecovîyMode
)==0 ){

29 *
z
;

30 if–
zObj
==0 ) zObj = "?";

31 
z
 = 
	`sqlôe3MPrötf
(
db
, "mÆf‹med d©aba£ schem®(%s)", 
zObj
);

32 if–
zExåa
 ) 
z
 = 
	`sqlôe3MPrötf
(
db
, "%z - %s", z, zExtra);

33 
	`sqlôe3DbFªe
(
db
, *
pD©a
->
pzEºMsg
);

34 *
pD©a
->
pzEºMsg
 = 
z
;

36 
pD©a
->
rc
 = 
db
->
mÆlocFaûed
 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_CORRUPT_BKPT
;

37 
	}
}

51 
	$sqlôe3InôCÆlback
(*
pInô
, 
¨gc
, **
¨gv
, **
NŸU£d
){

52 
InôD©a
 *
pD©a
 = (InôD©a*)
pInô
;

53 
sqlôe3
 *
db
 = 
pD©a
->db;

54 
iDb
 = 
pD©a
->iDb;

56 
	`as£π
–
¨gc
==3 );

57 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
¨gc
);

58 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

59 
	`DbCÀ¨Pr›îty
(
db
, 
iDb
, 
DB_Em±y
);

60 if–
db
->
mÆlocFaûed
 ){

61 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

65 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

66 if–
¨gv
==0 )  0;

67 if–
¨gv
[1]==0 ){

68 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

69 }if–
	`sqlôe3_°∫icmp
(
¨gv
[2],"create ",7)==0 ){

75 
rc
;

76 
sqlôe3_°mt
 *
pStmt
;

77 
	`TESTONLY
(
r˝
);

79 
	`as£π
–
db
->
öô
.
busy
 );

80 
db
->
öô
.
iDb
 = iDb;

81 
db
->
öô
.
√wTnum
 = 
	`sqlôe3Atoi
(
¨gv
[1]);

82 
db
->
öô
.
‹ph™Triggî
 = 0;

83 
	`TESTONLY
(
r˝
 = ) 
	`sqlôe3_¥ï¨e
(
db
, 
¨gv
[2], -1, &
pStmt
, 0);

84 
rc
 = 
db
->
îrCode
;

85 
	`as£π
–(
rc
&0xFF)==(
r˝
&0xFF) );

86 
db
->
öô
.
iDb
 = 0;

87 if–
SQLITE_OK
!=
rc
 ){

88 if–
db
->
öô
.
‹ph™Triggî
 ){

89 
	`as£π
–
iDb
==1 );

91 
pD©a
->
rc
 =Ñc;

92 if–
rc
==
SQLITE_NOMEM
 ){

93 
	`sqlôe3OomFau…
(
db
);

94 }if–
rc
!=
SQLITE_INTERRUPT
 && (rc&0xFF)!=
SQLITE_LOCKED
 ){

95 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 
	`sqlôe3_îrmsg
(
db
));

99 
	`sqlôe3_föÆize
(
pStmt
);

100 }if–
¨gv
[0]==0 || (argv[2]!=0 &&árgv[2][0]!=0) ){

101 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], 0);

109 
Index
 *
pIndex
;

110 
pIndex
 = 
	`sqlôe3FödIndex
(
db
, 
¨gv
[0], db->
aDb
[
iDb
].
zName
);

111 if–
pIndex
==0 ){

118 }if–
	`sqlôe3GëI¡32
(
¨gv
[1], &
pIndex
->
äum
)==0 ){

119 
	`c‹ru±Schema
(
pD©a
, 
¨gv
[0], "invalidÑootpage");

123 
	}
}

133 
	$sqlôe3InôO√
(
sqlôe3
 *
db
, 
iDb
, **
pzEºMsg
){

134 
rc
;

135 
i
;

136 #i‚de‡
SQLITE_OMIT_DEPRECATED


137 
size
;

139 
Db
 *
pDb
;

140 c⁄° *
azArg
[4];

141 
mëa
[5];

142 
InôD©a
 
öôD©a
;

143 c⁄° *
zMa°îName
;

144 
›íedTønß˘i⁄
 = 0;

146 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

147 
	`as£π
–
db
->
aDb
[
iDb
].
pSchema
 );

148 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

149 
	`as£π
–
iDb
==1 || 
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[iDb].
pBt
) );

156 
azArg
[0] = 
zMa°îName
 = 
	`SCHEMA_TABLE
(
iDb
);

157 
azArg
[1] = "1";

158 
azArg
[2] = "CREATE TABLE x(typeÅext,nameÅext,tbl_nameÅext,"

160 
azArg
[3] = 0;

161 
öôD©a
.
db
 = db;

162 
öôD©a
.
iDb
 = iDb;

163 
öôD©a
.
rc
 = 
SQLITE_OK
;

164 
öôD©a
.
pzEºMsg
 =ÖzErrMsg;

165 
	`sqlôe3InôCÆlback
(&
öôD©a
, 3, (**)
azArg
, 0);

166 if–
öôD©a
.
rc
 ){

167 
rc
 = 
öôD©a
.rc;

168 
îr‹_out
;

173 
pDb
 = &
db
->
aDb
[
iDb
];

174 if–
pDb
->
pBt
==0 ){

175 if–!
OMIT_TEMPDB
 && 
	`ALWAYS
(
iDb
==1) ){

176 
	`DbSëPr›îty
(
db
, 1, 
DB_SchemaLﬂded
);

178  
SQLITE_OK
;

184 
	`sqlôe3BåìE¡î
(
pDb
->
pBt
);

185 if–!
	`sqlôe3BåìIsInRódTøns
(
pDb
->
pBt
) ){

186 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pDb
->
pBt
, 0);

187 if–
rc
!=
SQLITE_OK
 ){

188 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, 
	`sqlôe3EºSå
(
rc
));

189 
öô⁄e_îr‹_out
;

191 
›íedTønß˘i⁄
 = 1;

211 
i
=0; i<
	`AºaySize
(
mëa
); i++){

212 
	`sqlôe3BåìGëMëa
(
pDb
->
pBt
, 
i
+1, (
u32
 *)&
mëa
[i]);

214 
pDb
->
pSchema
->
schema_cookõ
 = 
mëa
[
BTREE_SCHEMA_VERSION
-1];

221 if–
mëa
[
BTREE_TEXT_ENCODING
-1] ){

222 if–
iDb
==0 ){

223 #i‚de‡
SQLITE_OMIT_UTF16


224 
u8
 
ícodög
;

226 
ícodög
 = (
u8
)
mëa
[
BTREE_TEXT_ENCODING
-1] & 3;

227 if–
ícodög
==0 )Éncodög = 
SQLITE_UTF8
;

228 
	`ENC
(
db
Ë
ícodög
;

230 
	`ENC
(
db
Ë
SQLITE_UTF8
;

234 if–
mëa
[
BTREE_TEXT_ENCODING
-1]!=
	`ENC
(
db
) ){

235 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "attached databases must useÅhe same"

237 
rc
 = 
SQLITE_ERROR
;

238 
öô⁄e_îr‹_out
;

242 
	`DbSëPr›îty
(
db
, 
iDb
, 
DB_Em±y
);

244 
pDb
->
pSchema
->
íc
 = 
	`ENC
(
db
);

246 if–
pDb
->
pSchema
->
ˇche_size
==0 ){

247 #i‚de‡
SQLITE_OMIT_DEPRECATED


248 
size
 = 
	`sqlôe3AbsI¡32
(
mëa
[
BTREE_DEFAULT_CACHE_SIZE
-1]);

249 if–
size
==0 ){ sizê
SQLITE_DEFAULT_CACHE_SIZE
; }

250 
pDb
->
pSchema
->
ˇche_size
 = 
size
;

252 
pDb
->
pSchema
->
ˇche_size
 = 
SQLITE_DEFAULT_CACHE_SIZE
;

254 
	`sqlôe3BåìSëCacheSize
(
pDb
->
pBt
,ÖDb->
pSchema
->
ˇche_size
);

263 
pDb
->
pSchema
->
fûe_f‹m©
 = (
u8
)
mëa
[
BTREE_FILE_FORMAT
-1];

264 if–
pDb
->
pSchema
->
fûe_f‹m©
==0 ){

265 
pDb
->
pSchema
->
fûe_f‹m©
 = 1;

267 if–
pDb
->
pSchema
->
fûe_f‹m©
>
SQLITE_MAX_FILE_FORMAT
 ){

268 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "unsupported file format");

269 
rc
 = 
SQLITE_ERROR
;

270 
öô⁄e_îr‹_out
;

278 if–
iDb
==0 && 
mëa
[
BTREE_FILE_FORMAT
-1]>=4 ){

279 
db
->
Êags
 &~
SQLITE_LegacyFûeFmt
;

284 
	`as£π
–
db
->
öô
.
busy
 );

286 *
zSql
;

287 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

289 
db
->
aDb
[
iDb
].
zName
, 
zMa°îName
);

290 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


292 
sqlôe3_xauth
 
xAuth
;

293 
xAuth
 = 
db
->xAuth;

294 
db
->
xAuth
 = 0;

296 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3InôCÆlback
, &
öôD©a
, 0);

297 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


298 
db
->
xAuth
 = xAuth;

301 if–
rc
==
SQLITE_OK
 )Ñ¯
öôD©a
.rc;

302 
	`sqlôe3DbFªe
(
db
, 
zSql
);

303 #i‚de‡
SQLITE_OMIT_ANALYZE


304 if–
rc
==
SQLITE_OK
 ){

305 
	`sqlôe3A«lysisLﬂd
(
db
, 
iDb
);

309 if–
db
->
mÆlocFaûed
 ){

310 
rc
 = 
SQLITE_NOMEM_BKPT
;

311 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

313 if–
rc
==
SQLITE_OK
 || (
db
->
Êags
&
SQLITE_RecovîyMode
)){

322 
	`DbSëPr›îty
(
db
, 
iDb
, 
DB_SchemaLﬂded
);

323 
rc
 = 
SQLITE_OK
;

330 
öô⁄e_îr‹_out
:

331 if–
›íedTønß˘i⁄
 ){

332 
	`sqlôe3BåìCommô
(
pDb
->
pBt
);

334 
	`sqlôe3BåìLóve
(
pDb
->
pBt
);

336 
îr‹_out
:

337 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

338 
	`sqlôe3OomFau…
(
db
);

340  
rc
;

341 
	}
}

353 
	$sqlôe3Inô
(
sqlôe3
 *
db
, **
pzEºMsg
){

354 
i
, 
rc
;

355 
commô_öã∫Æ
 = !(
db
->
Êags
&
SQLITE_I¡înCh™ges
);

357 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

358 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[0].
pBt
) );

359 
	`as£π
–
db
->
öô
.
busy
==0 );

360 
rc
 = 
SQLITE_OK
;

361 
db
->
öô
.
busy
 = 1;

362 
	`ENC
(
db
Ë
	`SCHEMA_ENC
(db);

363 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

364 if–
	`DbHasPr›îty
(
db
, 
i
, 
DB_SchemaLﬂded
) || i==1 ) ;

365 
rc
 = 
	`sqlôe3InôO√
(
db
, 
i
, 
pzEºMsg
);

366 if–
rc
 ){

367 
	`sqlôe3Re£tO√Schema
(
db
, 
i
);

375 #i‚de‡
SQLITE_OMIT_TEMPDB


376 
	`as£π
–
db
->
nDb
>1 );

377 if–
rc
==
SQLITE_OK
 && !
	`DbHasPr›îty
(
db
, 1, 
DB_SchemaLﬂded
) ){

378 
rc
 = 
	`sqlôe3InôO√
(
db
, 1, 
pzEºMsg
);

379 if–
rc
 ){

380 
	`sqlôe3Re£tO√Schema
(
db
, 1);

385 
db
->
öô
.
busy
 = 0;

386 if–
rc
==
SQLITE_OK
 && 
commô_öã∫Æ
 ){

387 
	`sqlôe3CommôI¡î«lCh™ges
(
db
);

390  
rc
;

391 
	}
}

397 
	$sqlôe3RódSchema
(
P¨£
 *
pP¨£
){

398 
rc
 = 
SQLITE_OK
;

399 
sqlôe3
 *
db
 = 
pP¨£
->db;

400 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

401 if–!
db
->
öô
.
busy
 ){

402 
rc
 = 
	`sqlôe3Inô
(
db
, &
pP¨£
->
zEºMsg
);

404 if–
rc
!=
SQLITE_OK
 ){

405 
pP¨£
->
rc
 =Ñc;

406 
pP¨£
->
nEº
++;

408  
rc
;

409 
	}
}

417 
	$schemaIsVÆid
(
P¨£
 *
pP¨£
){

418 
sqlôe3
 *
db
 = 
pP¨£
->db;

419 
iDb
;

420 
rc
;

421 
cookõ
;

423 
	`as£π
–
pP¨£
->
checkSchema
 );

424 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

425 
iDb
=0; iDb<
db
->
nDb
; iDb++){

426 
›íedTønß˘i⁄
 = 0;

427 
Båì
 *
pBt
 = 
db
->
aDb
[
iDb
].pBt;

428 if–
pBt
==0 ) ;

433 if–!
	`sqlôe3BåìIsInRódTøns
(
pBt
) ){

434 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 0);

435 if–
rc
==
SQLITE_NOMEM
 ||Ñc==
SQLITE_IOERR_NOMEM
 ){

436 
	`sqlôe3OomFau…
(
db
);

438 if–
rc
!=
SQLITE_OK
 ) ;

439 
›íedTønß˘i⁄
 = 1;

445 
	`sqlôe3BåìGëMëa
(
pBt
, 
BTREE_SCHEMA_VERSION
, (
u32
 *)&
cookõ
);

446 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

447 if–
cookõ
!=
db
->
aDb
[
iDb
].
pSchema
->
schema_cookõ
 ){

448 
	`sqlôe3Re£tO√Schema
(
db
, 
iDb
);

449 
pP¨£
->
rc
 = 
SQLITE_SCHEMA
;

453 if–
›íedTønß˘i⁄
 ){

454 
	`sqlôe3BåìCommô
(
pBt
);

457 
	}
}

466 
	$sqlôe3SchemaToIndex
(
sqlôe3
 *
db
, 
Schema
 *
pSchema
){

467 
i
 = -1000000;

479 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

480 if–
pSchema
 ){

481 
i
=0; 
	`ALWAYS
(i<
db
->
nDb
); i++){

482 if–
db
->
aDb
[
i
].
pSchema
==pSchema ){

486 
	`as£π
–
i
>=0 && i<
db
->
nDb
 );

488  
i
;

489 
	}
}

494 
	$sqlôe3P¨£rRe£t
(
P¨£
 *
pP¨£
){

495 if–
pP¨£
 ){

496 
sqlôe3
 *
db
 = 
pP¨£
->db;

497 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
aLabñ
);

498 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pP¨£
->
pC⁄°Ex¥
);

499 if–
db
 ){

500 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 >
pP¨£
->
dißbÀLookaside
 );

501 
db
->
lookaside
.
bDißbÀ
 -
pP¨£
->
dißbÀLookaside
;

503 
pP¨£
->
dißbÀLookaside
 = 0;

505 
	}
}

510 
	$sqlôe3Pª∑ª
(

511 
sqlôe3
 *
db
,

512 c⁄° *
zSql
,

513 
nByãs
,

514 
ßveSqlFœg
,

515 
Vdbe
 *
pRïª∑ª
,

516 
sqlôe3_°mt
 **
µStmt
,

517 c⁄° **
pzTaû


519 
P¨£
 *
pP¨£
;

520 *
zEºMsg
 = 0;

521 
rc
 = 
SQLITE_OK
;

522 
i
;

525 
pP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
db
, (*pParse));

526 if–
pP¨£
==0 ){

527 
rc
 = 
SQLITE_NOMEM_BKPT
;

528 
íd_¥ï¨e
;

530 
pP¨£
->
pRïª∑ª
 =ÖReprepare;

531 
	`as£π
–
µStmt
 && *ppStmt==0 );

533 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

558 
i
=0; i<
db
->
nDb
; i++) {

559 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

560 if–
pBt
 ){

561 
	`as£π
–
	`sqlôe3BåìHﬁdsMuãx
(
pBt
) );

562 
rc
 = 
	`sqlôe3BåìSchemaLocked
(
pBt
);

563 if–
rc
 ){

564 c⁄° *
zDb
 = 
db
->
aDb
[
i
].
zName
;

565 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, "d©aba£ schem®i†locked: %s", 
zDb
);

566 
	`ã°ˇ£
–
db
->
Êags
 & 
SQLITE_RódUncommôãd
 );

567 
íd_¥ï¨e
;

572 
	`sqlôe3VèbU∆ockLi°
(
db
);

574 
pP¨£
->
db
 = db;

575 
pP¨£
->
nQuîyLo›
 = 0;

576 if–
nByãs
>=0 && (nByãs==0 || 
zSql
[nBytes-1]!=0) ){

577 *
zSqlC›y
;

578 
mxLí
 = 
db
->
aLimô
[
SQLITE_LIMIT_SQL_LENGTH
];

579 
	`ã°ˇ£
–
nByãs
==
mxLí
 );

580 
	`ã°ˇ£
–
nByãs
==
mxLí
+1 );

581 if–
nByãs
>
mxLí
 ){

582 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_TOOBIG
, "statementÅooÜong");

583 
rc
 = 
	`sqlôe3ApiExô
(
db
, 
SQLITE_TOOBIG
);

584 
íd_¥ï¨e
;

586 
zSqlC›y
 = 
	`sqlôe3DbSåNDup
(
db
, 
zSql
, 
nByãs
);

587 if–
zSqlC›y
 ){

588 
	`sqlôe3RunP¨£r
(
pP¨£
, 
zSqlC›y
, &
zEºMsg
);

589 
pP¨£
->
zTaû
 = &
zSql
[pP¨£->zTaû-
zSqlC›y
];

590 
	`sqlôe3DbFªe
(
db
, 
zSqlC›y
);

592 
pP¨£
->
zTaû
 = &
zSql
[
nByãs
];

595 
	`sqlôe3RunP¨£r
(
pP¨£
, 
zSql
, &
zEºMsg
);

597 
	`as£π
–0==
pP¨£
->
nQuîyLo›
 );

599 if–
pP¨£
->
rc
==
SQLITE_DONE
 )ÖP¨£->r¯
SQLITE_OK
;

600 if–
pP¨£
->
checkSchema
 ){

601 
	`schemaIsVÆid
(
pP¨£
);

603 if–
db
->
mÆlocFaûed
 ){

604 
pP¨£
->
rc
 = 
SQLITE_NOMEM_BKPT
;

606 if–
pzTaû
 ){

607 *
pzTaû
 = 
pP¨£
->
zTaû
;

609 
rc
 = 
pP¨£
->rc;

611 #i‚de‡
SQLITE_OMIT_EXPLAIN


612 if–
rc
==
SQLITE_OK
 && 
pP¨£
->
pVdbe
 &&ÖP¨£->
ex∂aö
 ){

613 c⁄° * c⁄° 
azCﬁName
[] = {

617 
iFú°
, 
mx
;

618 if–
pP¨£
->
ex∂aö
==2 ){

619 
	`sqlôe3VdbeSëNumCﬁs
(
pP¨£
->
pVdbe
, 4);

620 
iFú°
 = 8;

621 
mx
 = 12;

623 
	`sqlôe3VdbeSëNumCﬁs
(
pP¨£
->
pVdbe
, 8);

624 
iFú°
 = 0;

625 
mx
 = 8;

627 
i
=
iFú°
; i<
mx
; i++){

628 
	`sqlôe3VdbeSëCﬁName
(
pP¨£
->
pVdbe
, 
i
-
iFú°
, 
COLNAME_NAME
,

629 
azCﬁName
[
i
], 
SQLITE_STATIC
);

634 if–
db
->
öô
.
busy
==0 ){

635 
Vdbe
 *
pVdbe
 = 
pP¨£
->pVdbe;

636 
	`sqlôe3VdbeSëSql
(
pVdbe
, 
zSql
, ()(
pP¨£
->
zTaû
-zSql), 
ßveSqlFœg
);

638 if–
pP¨£
->
pVdbe
 && (
rc
!=
SQLITE_OK
 || 
db
->
mÆlocFaûed
) ){

639 
	`sqlôe3VdbeFöÆize
(
pP¨£
->
pVdbe
);

640 
	`as£π
(!(*
µStmt
));

642 *
µStmt
 = (
sqlôe3_°mt
*)
pP¨£
->
pVdbe
;

645 if–
zEºMsg
 ){

646 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, "%s", 
zEºMsg
);

647 
	`sqlôe3DbFªe
(
db
, 
zEºMsg
);

649 
	`sqlôe3Eº‹
(
db
, 
rc
);

653  
pP¨£
->
pTriggîPrg
 ){

654 
TriggîPrg
 *
pT
 = 
pP¨£
->
pTriggîPrg
;

655 
pP¨£
->
pTriggîPrg
 = 
pT
->
pNext
;

656 
	`sqlôe3DbFªe
(
db
, 
pT
);

659 
íd_¥ï¨e
:

661 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

662 
	`sqlôe3SèckFªe
(
db
, 
pP¨£
);

663 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

664 
	`as£π
–(
rc
&
db
->
îrMask
)==rc );

665  
rc
;

666 
	}
}

667 
	$sqlôe3LockAndPª∑ª
(

668 
sqlôe3
 *
db
,

669 c⁄° *
zSql
,

670 
nByãs
,

671 
ßveSqlFœg
,

672 
Vdbe
 *
pOld
,

673 
sqlôe3_°mt
 **
µStmt
,

674 c⁄° **
pzTaû


676 
rc
;

678 #ifde‡
SQLITE_ENABLE_API_ARMOR


679 if–
µStmt
==0 )  
SQLITE_MISUSE_BKPT
;

681 *
µStmt
 = 0;

682 if–!
	`sqlôe3Sa„tyCheckOk
(
db
)||
zSql
==0 ){

683  
SQLITE_MISUSE_BKPT
;

685 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

686 
	`sqlôe3BåìE¡îAŒ
(
db
);

687 
rc
 = 
	`sqlôe3Pª∑ª
(
db
, 
zSql
, 
nByãs
, 
ßveSqlFœg
, 
pOld
, 
µStmt
, 
pzTaû
);

688 if–
rc
==
SQLITE_SCHEMA
 ){

689 
	`sqlôe3_föÆize
(*
µStmt
);

690 
rc
 = 
	`sqlôe3Pª∑ª
(
db
, 
zSql
, 
nByãs
, 
ßveSqlFœg
, 
pOld
, 
µStmt
, 
pzTaû
);

692 
	`sqlôe3BåìLóveAŒ
(
db
);

693 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

694 
	`as£π
–
rc
==
SQLITE_OK
 || *
µStmt
==0 );

695  
rc
;

696 
	}
}

706 
	$sqlôe3Rïª∑ª
(
Vdbe
 *
p
){

707 
rc
;

708 
sqlôe3_°mt
 *
pNew
;

709 c⁄° *
zSql
;

710 
sqlôe3
 *
db
;

712 
	`as£π
–
	`sqlôe3_muãx_hñd
(
	`sqlôe3VdbeDb
(
p
)->
muãx
) );

713 
zSql
 = 
	`sqlôe3_sql
((
sqlôe3_°mt
 *)
p
);

714 
	`as£π
–
zSql
!=0 );

715 
db
 = 
	`sqlôe3VdbeDb
(
p
);

716 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

717 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
, 
zSql
, -1, 0, 
p
, &
pNew
, 0);

718 if–
rc
 ){

719 if–
rc
==
SQLITE_NOMEM
 ){

720 
	`sqlôe3OomFau…
(
db
);

722 
	`as£π
–
pNew
==0 );

723  
rc
;

725 
	`as£π
–
pNew
!=0 );

727 
	`sqlôe3VdbeSw≠
((
Vdbe
*)
pNew
, 
p
);

728 
	`sqlôe3Tøns„rBödögs
(
pNew
, (
sqlôe3_°mt
*)
p
);

729 
	`sqlôe3VdbeRe£tSãpResu…
((
Vdbe
*)
pNew
);

730 
	`sqlôe3VdbeFöÆize
((
Vdbe
*)
pNew
);

731  
SQLITE_OK
;

732 
	}
}

743 
	$sqlôe3_¥ï¨e
(

744 
sqlôe3
 *
db
,

745 c⁄° *
zSql
,

746 
nByãs
,

747 
sqlôe3_°mt
 **
µStmt
,

748 c⁄° **
pzTaû


750 
rc
;

751 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
,
zSql
,
nByãs
,0,0,
µStmt
,
pzTaû
);

752 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

753  
rc
;

754 
	}
}

755 
	$sqlôe3_¥ï¨e_v2
(

756 
sqlôe3
 *
db
,

757 c⁄° *
zSql
,

758 
nByãs
,

759 
sqlôe3_°mt
 **
µStmt
,

760 c⁄° **
pzTaû


762 
rc
;

763 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
,
zSql
,
nByãs
,1,0,
µStmt
,
pzTaû
);

764 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

765  
rc
;

766 
	}
}

769 #i‚de‡
SQLITE_OMIT_UTF16


773 
	$sqlôe3Pª∑ª16
(

774 
sqlôe3
 *
db
,

775 c⁄° *
zSql
,

776 
nByãs
,

777 
ßveSqlFœg
,

778 
sqlôe3_°mt
 **
µStmt
,

779 c⁄° **
pzTaû


785 *
zSql8
;

786 c⁄° *
zTaû8
 = 0;

787 
rc
 = 
SQLITE_OK
;

789 #ifde‡
SQLITE_ENABLE_API_ARMOR


790 if–
µStmt
==0 )  
SQLITE_MISUSE_BKPT
;

792 *
µStmt
 = 0;

793 if–!
	`sqlôe3Sa„tyCheckOk
(
db
)||
zSql
==0 ){

794  
SQLITE_MISUSE_BKPT
;

796 if–
nByãs
>=0 ){

797 
sz
;

798 c⁄° *
z
 = (c⁄° *)
zSql
;

799 
sz
=0; sz<
nByãs
 && (
z
[sz]!=0 || z[sz+1]!=0); sz += 2){}

800 
nByãs
 = 
sz
;

802 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

803 
zSql8
 = 
	`sqlôe3Utf16to8
(
db
, 
zSql
, 
nByãs
, 
SQLITE_UTF16NATIVE
);

804 if–
zSql8
 ){

805 
rc
 = 
	`sqlôe3LockAndPª∑ª
(
db
, 
zSql8
, -1, 
ßveSqlFœg
, 0, 
µStmt
, &
zTaû8
);

808 if–
zTaû8
 && 
pzTaû
 ){

814 
ch¨s_∑r£d
 = 
	`sqlôe3Utf8Ch¨Lí
(
zSql8
, ()(
zTaû8
-zSql8));

815 *
pzTaû
 = (
u8
 *)
zSql
 + 
	`sqlôe3Utf16ByãLí
(zSql, 
ch¨s_∑r£d
);

817 
	`sqlôe3DbFªe
(
db
, 
zSql8
);

818 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

819 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

820  
rc
;

821 
	}
}

831 
	$sqlôe3_¥ï¨e16
(

832 
sqlôe3
 *
db
,

833 c⁄° *
zSql
,

834 
nByãs
,

835 
sqlôe3_°mt
 **
µStmt
,

836 c⁄° **
pzTaû


838 
rc
;

839 
rc
 = 
	`sqlôe3Pª∑ª16
(
db
,
zSql
,
nByãs
,0,
µStmt
,
pzTaû
);

840 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

841  
rc
;

842 
	}
}

843 
	$sqlôe3_¥ï¨e16_v2
(

844 
sqlôe3
 *
db
,

845 c⁄° *
zSql
,

846 
nByãs
,

847 
sqlôe3_°mt
 **
µStmt
,

848 c⁄° **
pzTaû


850 
rc
;

851 
rc
 = 
	`sqlôe3Pª∑ª16
(
db
,
zSql
,
nByãs
,1,
µStmt
,
pzTaû
);

852 
	`as£π
–
rc
==
SQLITE_OK
 || 
µStmt
==0 || *ppStmt==0 );

853  
rc
;

854 
	}
}

	@printf.c

12 
	~"sqlôeI¡.h
"

18 
	#ëRADIX
 0

	)

19 
	#ëFLOAT
 1

	)

20 
	#ëEXP
 2

	)

21 
	#ëGENERIC
 3

	)

22 
	#ëSIZE
 4

	)

23 
	#ëSTRING
 5

	)

24 
	#ëDYNSTRING
 6

	)

25 
	#ëPERCENT
 7

	)

26 
	#ëCHARX
 8

	)

28 
	#ëSQLESCAPE
 9

	)

29 
	#ëSQLESCAPE2
 10

	)

31 
	#ëTOKEN
 11

	)

32 
	#ëSRCLIST
 12

	)

33 
	#ëPOINTER
 13

	)

34 
	#ëSQLESCAPE3
 14

	)

35 
	#ëORDINAL
 15

	)

37 
	#ëINVALID
 16

	)

43 
	tëByã
;

49 
	së_öfo
 {

50 
	mfmây≥
;

51 
ëByã
 
	mba£
;

52 
ëByã
 
	mÊags
;

53 
ëByã
 
	mty≥
;

54 
ëByã
 
	mch¨£t
;

55 
ëByã
 
	m¥efix
;

56 } 
	të_öfo
;

61 
	#FLAG_SIGNED
 1

	)

62 
	#FLAG_INTERN
 2

	)

63 
	#FLAG_STRING
 4

	)

70 c⁄° 
	gaDigôs
[] = "0123456789ABCDEF0123456789abcdef";

71 c⁄° 
	gaPªfix
[] = "-x0\000X0";

72 c⁄° 
ë_öfo
 
	gfmtöfo
[] = {

73 { 'd', 10, 1, 
ëRADIX
, 0, 0 },

74 { 's', 0, 4, 
ëSTRING
, 0, 0 },

75 { 'g', 0, 1, 
ëGENERIC
, 30, 0 },

76 { 'z', 0, 4, 
ëDYNSTRING
, 0, 0 },

77 { 'q', 0, 4, 
ëSQLESCAPE
, 0, 0 },

78 { 'Q', 0, 4, 
ëSQLESCAPE2
, 0, 0 },

79 { 'w', 0, 4, 
ëSQLESCAPE3
, 0, 0 },

80 { 'c', 0, 0, 
ëCHARX
, 0, 0 },

81 { 'o', 8, 0, 
ëRADIX
, 0, 2 },

82 { 'u', 10, 0, 
ëRADIX
, 0, 0 },

83 { 'x', 16, 0, 
ëRADIX
, 16, 1 },

84 { 'X', 16, 0, 
ëRADIX
, 0, 4 },

85 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


86 { 'f', 0, 1, 
ëFLOAT
, 0, 0 },

87 { 'e', 0, 1, 
ëEXP
, 30, 0 },

88 { 'E', 0, 1, 
ëEXP
, 14, 0 },

89 { 'G', 0, 1, 
ëGENERIC
, 14, 0 },

91 { 'i', 10, 1, 
ëRADIX
, 0, 0 },

92 { 'n', 0, 0, 
ëSIZE
, 0, 0 },

93 { '%', 0, 0, 
ëPERCENT
, 0, 0 },

94 { 'p', 16, 0, 
ëPOINTER
, 0, 1 },

98 { 'T', 0, 2, 
ëTOKEN
, 0, 0 },

99 { 'S', 0, 2, 
ëSRCLIST
, 0, 0 },

100 { 'r', 10, 3, 
ëORDINAL
, 0, 0 },

107 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


121 
	$ë_gëdigô
(
LONGDOUBLE_TYPE
 *
vÆ
, *
˙t
){

122 
digô
;

123 
LONGDOUBLE_TYPE
 
d
;

124 if–(*
˙t
)<=0 )  '0';

125 (*
˙t
)--;

126 
digô
 = ()*
vÆ
;

127 
d
 = 
digô
;

128 
digô
 += '0';

129 *
vÆ
 = (*vÆ - 
d
)*10.0;

130  ()
digô
;

131 
	}
}

137 
	$£tSåAccumEº‹
(
SåAccum
 *
p
, 
u8
 
eEº‹
){

138 
	`as£π
–
eEº‹
==
STRACCUM_NOMEM
 ||ÉEº‹==
STRACCUM_TOOBIG
 );

139 
p
->
accEº‹
 = 
eEº‹
;

140 
p
->
nAŒoc
 = 0;

141 
	}
}

146 
sqlôe3_öt64
 
	$gëI¡Arg
(
PrötfArgumíts
 *
p
){

147 if–
p
->
nArg
<ı->
nU£d
 )  0;

148  
	`sqlôe3_vÆue_öt64
(
p
->
≠Arg
[p->
nU£d
++]);

149 
	}
}

150 
	$gëDoubÀArg
(
PrötfArgumíts
 *
p
){

151 if–
p
->
nArg
<ı->
nU£d
 )  0.0;

152  
	`sqlôe3_vÆue_doubÀ
(
p
->
≠Arg
[p->
nU£d
++]);

153 
	}
}

154 *
	$gëTextArg
(
PrötfArgumíts
 *
p
){

155 if–
p
->
nArg
<ı->
nU£d
 )  0;

156  (*)
	`sqlôe3_vÆue_ãxt
(
p
->
≠Arg
[p->
nU£d
++]);

157 
	}
}

164 #i‚de‡
SQLITE_PRINT_BUF_SIZE


165 
	#SQLITE_PRINT_BUF_SIZE
 70

	)

167 
	#ëBUFSIZE
 
SQLITE_PRINT_BUF_SIZE


	)

172 
	$sqlôe3VXPrötf
(

173 
SåAccum
 *
pAccum
,

174 c⁄° *
fmt
,

175 
va_li°
 
≠


177 
c
;

178 *
buÂt
;

179 
¥ecisi⁄
;

180 
Àngth
;

181 
idx
;

182 
width
;

183 
ëByã
 
Êag_À·ju°ify
;

184 
ëByã
 
Êag_∂ussign
;

185 
ëByã
 
Êag_bœnksign
;

186 
ëByã
 
Êag_Æã∫©ef‹m
;

187 
ëByã
 
Êag_Ætf‹m2
;

188 
ëByã
 
Êag_zî›ad
;

189 
ëByã
 
Êag_l⁄g
;

190 
ëByã
 
Êag_l⁄gl⁄g
;

191 
ëByã
 
d⁄e
;

192 
ëByã
 
xty≥
 = 
ëINVALID
;

193 
u8
 
bArgLi°
;

194 
u8
 
u£I¡în
;

195 
¥efix
;

196 
sqlôe_uöt64
 
l⁄gvÆue
;

197 
LONGDOUBLE_TYPE
 
ªÆvÆue
;

198 c⁄° 
ë_öfo
 *
öf›
;

199 *
zOut
;

200 
nOut
;

201 *
zExåa
 = 0;

202 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


203 
exp
, 
e2
;

204 
nsd
;

205 
roundî
;

206 
ëByã
 
Êag_dp
;

207 
ëByã
 
Êag_πz
;

209 
PrötfArgumíts
 *
pArgLi°
 = 0;

210 
buf
[
ëBUFSIZE
];

212 
buÂt
 = 0;

213 if–
pAccum
->
¥ötfFœgs
 ){

214 if–(
bArgLi°
 = (
pAccum
->
¥ötfFœgs
 & 
SQLITE_PRINTF_SQLFUNC
))!=0 ){

215 
pArgLi°
 = 
	`va_¨g
(
≠
, 
PrötfArgumíts
*);

217 
u£I¡în
 = 
pAccum
->
¥ötfFœgs
 & 
SQLITE_PRINTF_INTERNAL
;

219 
bArgLi°
 = 
u£I¡în
 = 0;

221 ; (
c
=(*
fmt
))!=0; ++fmt){

222 if–
c
!='%' ){

223 
buÂt
 = (*)
fmt
;

224 #i‡
HAVE_STRCHRNUL


225 
fmt
 = 
	`°rch∫ul
(fmt, '%');

227 do{ 
fmt
++; } *fmt && *fmt != '%' );

229 
	`sqlôe3SåAccumAµíd
(
pAccum
, 
buÂt
, ()(
fmt
 - bufpt));

230 if–*
fmt
==0 ) ;

232 if–(
c
=(*++
fmt
))==0 ){

233 
	`sqlôe3SåAccumAµíd
(
pAccum
, "%", 1);

237 
Êag_À·ju°ify
 = 
Êag_∂ussign
 = 
Êag_bœnksign
 =

238 
Êag_Æã∫©ef‹m
 = 
Êag_Ætf‹m2
 = 
Êag_zî›ad
 = 0;

239 
d⁄e
 = 0;

241  
c
 ){

242 '-': 
Êag_À·ju°ify
 = 1; ;

243 '+': 
Êag_∂ussign
 = 1; ;

244 ' ': 
Êag_bœnksign
 = 1; ;

245 '#': 
Êag_Æã∫©ef‹m
 = 1; ;

246 '!': 
Êag_Ætf‹m2
 = 1; ;

247 '0': 
Êag_zî›ad
 = 1; ;

248 : 
d⁄e
 = 1; ;

250 } !
d⁄e
 && (
c
=(*++
fmt
))!=0 );

252 if–
c
=='*' ){

253 if–
bArgLi°
 ){

254 
width
 = ()
	`gëI¡Arg
(
pArgLi°
);

256 
width
 = 
	`va_¨g
(
≠
,);

258 if–
width
<0 ){

259 
Êag_À·ju°ify
 = 1;

260 
width
 = width >= -2147483647 ? -width : 0;

262 
c
 = *++
fmt
;

264 
wx
 = 0;

265  
c
>='0' && c<='9' ){

266 
wx
 = wx*10 + 
c
 - '0';

267 
c
 = *++
fmt
;

269 
	`ã°ˇ£
–
wx
>0x7fffffff );

270 
width
 = 
wx
 & 0x7fffffff;

272 
	`as£π
–
width
>=0 );

273 #ifde‡
SQLITE_PRINTF_PRECISION_LIMIT


274 if–
width
>
SQLITE_PRINTF_PRECISION_LIMIT
 ){

275 
width
 = 
SQLITE_PRINTF_PRECISION_LIMIT
;

280 if–
c
=='.' ){

281 
c
 = *++
fmt
;

282 if–
c
=='*' ){

283 if–
bArgLi°
 ){

284 
¥ecisi⁄
 = ()
	`gëI¡Arg
(
pArgLi°
);

286 
¥ecisi⁄
 = 
	`va_¨g
(
≠
,);

288 
c
 = *++
fmt
;

289 if–
¥ecisi⁄
<0 ){

290 
¥ecisi⁄
 =Örecision >= -2147483647 ? -precision : -1;

293 
px
 = 0;

294  
c
>='0' && c<='9' ){

295 
px
 =Öx*10 + 
c
 - '0';

296 
c
 = *++
fmt
;

298 
	`ã°ˇ£
–
px
>0x7fffffff );

299 
¥ecisi⁄
 = 
px
 & 0x7fffffff;

302 
¥ecisi⁄
 = -1;

304 
	`as£π
–
¥ecisi⁄
>=(-1) );

305 #ifde‡
SQLITE_PRINTF_PRECISION_LIMIT


306 if–
¥ecisi⁄
>
SQLITE_PRINTF_PRECISION_LIMIT
 ){

307 
¥ecisi⁄
 = 
SQLITE_PRINTF_PRECISION_LIMIT
;

313 if–
c
=='l' ){

314 
Êag_l⁄g
 = 1;

315 
c
 = *++
fmt
;

316 if–
c
=='l' ){

317 
Êag_l⁄gl⁄g
 = 1;

318 
c
 = *++
fmt
;

320 
Êag_l⁄gl⁄g
 = 0;

323 
Êag_l⁄g
 = 
Êag_l⁄gl⁄g
 = 0;

326 
öf›
 = &
fmtöfo
[0];

327 
xty≥
 = 
ëINVALID
;

328 
idx
=0; idx<
	`AºaySize
(
fmtöfo
); idx++){

329 if–
c
==
fmtöfo
[
idx
].
fmây≥
 ){

330 
öf›
 = &
fmtöfo
[
idx
];

331 if–
u£I¡în
 || (
öf›
->
Êags
 & 
FLAG_INTERN
)==0 ){

332 
xty≥
 = 
öf›
->
ty≥
;

361  
xty≥
 ){

362 
ëPOINTER
:

363 
Êag_l⁄gl⁄g
 = (*)==(
i64
);

364 
Êag_l⁄g
 = (*)==();

366 
ëORDINAL
:

367 
ëRADIX
:

368 if–
öf›
->
Êags
 & 
FLAG_SIGNED
 ){

369 
i64
 
v
;

370 if–
bArgLi°
 ){

371 
v
 = 
	`gëI¡Arg
(
pArgLi°
);

372 }if–
Êag_l⁄gl⁄g
 ){

373 
v
 = 
	`va_¨g
(
≠
,
i64
);

374 }if–
Êag_l⁄g
 ){

375 
v
 = 
	`va_¨g
(
≠
,);

377 
v
 = 
	`va_¨g
(
≠
,);

379 if–
v
<0 ){

380 if–
v
==
SMALLEST_INT64
 ){

381 
l⁄gvÆue
 = ((
u64
)1)<<63;

383 
l⁄gvÆue
 = -
v
;

385 
¥efix
 = '-';

387 
l⁄gvÆue
 = 
v
;

388 if–
Êag_∂ussign
 ) 
¥efix
 = '+';

389 if–
Êag_bœnksign
 ) 
¥efix
 = ' ';

390 
¥efix
 = 0;

393 if–
bArgLi°
 ){

394 
l⁄gvÆue
 = (
u64
)
	`gëI¡Arg
(
pArgLi°
);

395 }if–
Êag_l⁄gl⁄g
 ){

396 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,
u64
);

397 }if–
Êag_l⁄g
 ){

398 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,);

400 
l⁄gvÆue
 = 
	`va_¨g
(
≠
,);

402 
¥efix
 = 0;

404 if–
l⁄gvÆue
==0 ) 
Êag_Æã∫©ef‹m
 = 0;

405 if–
Êag_zî›ad
 && 
¥ecisi⁄
<
width
-(
¥efix
!=0) ){

406 
¥ecisi⁄
 = 
width
-(
¥efix
!=0);

408 if–
¥ecisi⁄
<
ëBUFSIZE
-10 ){

409 
nOut
 = 
ëBUFSIZE
;

410 
zOut
 = 
buf
;

412 
nOut
 = 
¥ecisi⁄
 + 10;

413 
zOut
 = 
zExåa
 = 
	`sqlôe3MÆloc
–
nOut
 );

414 if–
zOut
==0 ){

415 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

419 
buÂt
 = &
zOut
[
nOut
-1];

420 if–
xty≥
==
ëORDINAL
 ){

421 c⁄° 
zOrd
[] = "thstndrd";

422 
x
 = ()(
l⁄gvÆue
 % 10);

423 if–
x
>=4 || (
l⁄gvÆue
/10)%10==1 ){

424 
x
 = 0;

426 *(--
buÂt
Ë
zOrd
[
x
*2+1];

427 *(--
buÂt
Ë
zOrd
[
x
*2];

430 c⁄° *
c£t
 = &
aDigôs
[
öf›
->
ch¨£t
];

431 
u8
 
ba£
 = 
öf›
->base;

433 *(--
buÂt
Ë
c£t
[
l⁄gvÆue
%
ba£
];

434 
l⁄gvÆue
 =Ü⁄gvÆue/
ba£
;

435 } 
l⁄gvÆue
>0 );

437 
Àngth
 = ()(&
zOut
[
nOut
-1]-
buÂt
);

438 
idx
=
¥ecisi⁄
-
Àngth
; idx>0; idx--){

439 *(--
buÂt
) = '0';

441 if–
¥efix
 ) *(--
buÂt
) =Örefix;

442 if–
Êag_Æã∫©ef‹m
 && 
öf›
->
¥efix
 ){

443 c⁄° *
¥e
;

444 
x
;

445 
¥e
 = &
aPªfix
[
öf›
->
¥efix
];

446 ; (
x
=(*
¥e
))!=0;Öª++Ë*(--
buÂt
) = x;

448 
Àngth
 = ()(&
zOut
[
nOut
-1]-
buÂt
);

450 
ëFLOAT
:

451 
ëEXP
:

452 
ëGENERIC
:

453 if–
bArgLi°
 ){

454 
ªÆvÆue
 = 
	`gëDoubÀArg
(
pArgLi°
);

456 
ªÆvÆue
 = 
	`va_¨g
(
≠
,);

458 #ifde‡
SQLITE_OMIT_FLOATING_POINT


459 
Àngth
 = 0;

461 if–
¥ecisi⁄
<0 )Örecision = 6;

462 if–
ªÆvÆue
<0.0 ){

463 
ªÆvÆue
 = -realvalue;

464 
¥efix
 = '-';

466 if–
Êag_∂ussign
 ) 
¥efix
 = '+';

467 if–
Êag_bœnksign
 ) 
¥efix
 = ' ';

468 
¥efix
 = 0;

470 if–
xty≥
==
ëGENERIC
 && 
¥ecisi⁄
>0 )Örecision--;

471 
	`ã°ˇ£
–
¥ecisi⁄
>0xfff );

472 
idx
=
¥ecisi⁄
&0xfff, 
roundî
=0.5; idx>0; idx--,Ñounder*=0.1){}

473 if–
xty≥
==
ëFLOAT
 ) 
ªÆvÆue
 +
roundî
;

475 
exp
 = 0;

476 if–
	`sqlôe3IsNaN
(()
ªÆvÆue
) ){

477 
buÂt
 = "NaN";

478 
Àngth
 = 3;

481 if–
ªÆvÆue
>0.0 ){

482 
LONGDOUBLE_TYPE
 
sˇÀ
 = 1.0;

483  
ªÆvÆue
>=1e100*
sˇÀ
 && 
exp
<=350 ){ scale *= 1e100;exp+=100;}

484  
ªÆvÆue
>=1e10*
sˇÀ
 && 
exp
<=350 ){ scale *= 1e10;Éxp+=10; }

485  
ªÆvÆue
>=10.0*
sˇÀ
 && 
exp
<=350 ){ scale *= 10.0;Éxp++; }

486 
ªÆvÆue
 /
sˇÀ
;

487  
ªÆvÆue
<1e-8 ){ÑólvÆuê*1e8; 
exp
-=8; }

488  
ªÆvÆue
<1.0 ){ÑólvÆuê*10.0; 
exp
--; }

489 if–
exp
>350 ){

490 
buÂt
 = 
buf
;

491 
buf
[0] = 
¥efix
;

492 
	`mem˝y
(
buf
+(
¥efix
!=0),"Inf",4);

493 
Àngth
 = 3+(
¥efix
!=0);

497 
buÂt
 = 
buf
;

502 if–
xty≥
!=
ëFLOAT
 ){

503 
ªÆvÆue
 +
roundî
;

504 if–
ªÆvÆue
>=10.0 ){ÑólvÆuê*0.1; 
exp
++; }

506 if–
xty≥
==
ëGENERIC
 ){

507 
Êag_πz
 = !
Êag_Æã∫©ef‹m
;

508 if–
exp
<-4 ||Éxp>
¥ecisi⁄
 ){

509 
xty≥
 = 
ëEXP
;

511 
¥ecisi⁄
 =Öªcisi⁄ - 
exp
;

512 
xty≥
 = 
ëFLOAT
;

515 
Êag_πz
 = 
Êag_Ætf‹m2
;

517 if–
xty≥
==
ëEXP
 ){

518 
e2
 = 0;

520 
e2
 = 
exp
;

522 if–
	`MAX
(
e2
,0)+(
i64
)
¥ecisi⁄
+(i64)
width
 > 
ëBUFSIZE
 - 15 ){

523 
buÂt
 = 
zExåa


524 
	`sqlôe3MÆloc
–
	`MAX
(
e2
,0)+(
i64
)
¥ecisi⁄
+(i64)
width
+15 );

525 if–
buÂt
==0 ){

526 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

530 
zOut
 = 
buÂt
;

531 
nsd
 = 16 + 
Êag_Ætf‹m2
*10;

532 
Êag_dp
 = (
¥ecisi⁄
>0 ?1:0Ë| 
Êag_Æã∫©ef‹m
 | 
Êag_Ætf‹m2
;

534 if–
¥efix
 ){

535 *(
buÂt
++Ë
¥efix
;

538 if–
e2
<0 ){

539 *(
buÂt
++) = '0';

541 ; 
e2
>=0;É2--){

542 *(
buÂt
++Ë
	`ë_gëdigô
(&
ªÆvÆue
,&
nsd
);

546 if–
Êag_dp
 ){

547 *(
buÂt
++) = '.';

551 
e2
++;É2<0; 
¥ecisi⁄
--,É2++){

552 
	`as£π
–
¥ecisi⁄
>0 );

553 *(
buÂt
++) = '0';

556  (
¥ecisi⁄
--)>0 ){

557 *(
buÂt
++Ë
	`ë_gëdigô
(&
ªÆvÆue
,&
nsd
);

560 if–
Êag_πz
 && 
Êag_dp
 ){

561  
buÂt
[-1]=='0' ) *(--bufpt) = 0;

562 
	`as£π
–
buÂt
>
zOut
 );

563 if–
buÂt
[-1]=='.' ){

564 if–
Êag_Ætf‹m2
 ){

565 *(
buÂt
++) = '0';

567 *(--
buÂt
) = 0;

572 if–
xty≥
==
ëEXP
 ){

573 *(
buÂt
++Ë
aDigôs
[
öf›
->
ch¨£t
];

574 if–
exp
<0 ){

575 *(
buÂt
++Ë'-'; 
exp
 = -exp;

577 *(
buÂt
++) = '+';

579 if–
exp
>=100 ){

580 *(
buÂt
++Ë()((
exp
/100)+'0');

581 
exp
 %= 100;

583 *(
buÂt
++Ë()(
exp
/10+'0');

584 *(
buÂt
++Ë()(
exp
%10+'0');

586 *
buÂt
 = 0;

591 
Àngth
 = ()(
buÂt
-
zOut
);

592 
buÂt
 = 
zOut
;

596 if–
Êag_zî›ad
 && !
Êag_À·ju°ify
 && 
Àngth
 < 
width
){

597 
i
;

598 
nPad
 = 
width
 - 
Àngth
;

599 
i
=
width
; i>=
nPad
; i--){

600 
buÂt
[
i
] = buÂt[i-
nPad
];

602 
i
 = 
¥efix
!=0;

603  
nPad
-- ) 
buÂt
[
i
++] = '0';

604 
Àngth
 = 
width
;

608 
ëSIZE
:

609 if–!
bArgLi°
 ){

610 *(
	`va_¨g
(
≠
,*)Ë
pAccum
->
nCh¨
;

612 
Àngth
 = 
width
 = 0;

614 
ëPERCENT
:

615 
buf
[0] = '%';

616 
buÂt
 = 
buf
;

617 
Àngth
 = 1;

619 
ëCHARX
:

620 if–
bArgLi°
 ){

621 
buÂt
 = 
	`gëTextArg
(
pArgLi°
);

622 
c
 = 
buÂt
 ? bufpt[0] : 0;

624 
c
 = 
	`va_¨g
(
≠
,);

626 if–
¥ecisi⁄
>1 ){

627 
width
 -
¥ecisi⁄
-1;

628 if–
width
>1 && !
Êag_À·ju°ify
 ){

629 
	`sqlôe3AµídCh¨
(
pAccum
, 
width
-1, ' ');

630 
width
 = 0;

632 
	`sqlôe3AµídCh¨
(
pAccum
, 
¥ecisi⁄
-1, 
c
);

634 
Àngth
 = 1;

635 
buf
[0] = 
c
;

636 
buÂt
 = 
buf
;

638 
ëSTRING
:

639 
ëDYNSTRING
:

640 if–
bArgLi°
 ){

641 
buÂt
 = 
	`gëTextArg
(
pArgLi°
);

642 
xty≥
 = 
ëSTRING
;

644 
buÂt
 = 
	`va_¨g
(
≠
,*);

646 if–
buÂt
==0 ){

647 
buÂt
 = "";

648 }if–
xty≥
==
ëDYNSTRING
 ){

649 
zExåa
 = 
buÂt
;

651 if–
¥ecisi⁄
>=0 ){

652 
Àngth
=0;Üígth<
¥ecisi⁄
 && 
buÂt
[length];Üength++){}

654 
Àngth
 = 
	`sqlôe3SåÀn30
(
buÂt
);

657 
ëSQLESCAPE
:

658 
ëSQLESCAPE2
:

659 
ëSQLESCAPE3
: {

660 
i
, 
j
, 
k
, 
n
, 
i¢uŒ
;

661 
√edQuŸe
;

662 
ch
;

663 
q
 = ((
xty≥
==
ëSQLESCAPE3
)?'"':'\'');

664 *
esˇrg
;

666 if–
bArgLi°
 ){

667 
esˇrg
 = 
	`gëTextArg
(
pArgLi°
);

669 
esˇrg
 = 
	`va_¨g
(
≠
,*);

671 
i¢uŒ
 = 
esˇrg
==0;

672 if–
i¢uŒ
 ) 
esˇrg
 = (
xty≥
==
ëSQLESCAPE2
 ? "NULL" : "(NULL)");

673 
k
 = 
¥ecisi⁄
;

674 
i
=
n
=0; 
k
!=0 && (
ch
=
esˇrg
[i])!=0; i++, k--){

675 if–
ch
==
q
 ) 
n
++;

677 
√edQuŸe
 = !
i¢uŒ
 && 
xty≥
==
ëSQLESCAPE2
;

678 
n
 +
i
 + 3;

679 if–
n
>
ëBUFSIZE
 ){

680 
buÂt
 = 
zExåa
 = 
	`sqlôe3MÆloc
–
n
 );

681 if–
buÂt
==0 ){

682 
	`£tSåAccumEº‹
(
pAccum
, 
STRACCUM_NOMEM
);

686 
buÂt
 = 
buf
;

688 
j
 = 0;

689 if–
√edQuŸe
 ) 
buÂt
[
j
++] = 
q
;

690 
k
 = 
i
;

691 
i
=0; i<
k
; i++){

692 
buÂt
[
j
++] = 
ch
 = 
esˇrg
[
i
];

693 if–
ch
==
q
 ) 
buÂt
[
j
++] = ch;

695 if–
√edQuŸe
 ) 
buÂt
[
j
++] = 
q
;

696 
buÂt
[
j
] = 0;

697 
Àngth
 = 
j
;

703 
ëTOKEN
: {

704 
Tokí
 *
pTokí
 = 
	`va_¨g
(
≠
, Token*);

705 
	`as£π
–
bArgLi°
==0 );

706 if–
pTokí
 &&ÖTokí->
n
 ){

707 
	`sqlôe3SåAccumAµíd
(
pAccum
, (c⁄° *)
pTokí
->
z
,ÖTokí->
n
);

709 
Àngth
 = 
width
 = 0;

712 
ëSRCLIST
: {

713 
SrcLi°
 *
pSrc
 = 
	`va_¨g
(
≠
, SrcList*);

714 
k
 = 
	`va_¨g
(
≠
, );

715 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
k
];

716 
	`as£π
–
bArgLi°
==0 );

717 
	`as£π
–
k
>=0 && k<
pSrc
->
nSrc
 );

718 if–
pIãm
->
zD©aba£
 ){

719 
	`sqlôe3SåAccumAµídAŒ
(
pAccum
, 
pIãm
->
zD©aba£
);

720 
	`sqlôe3SåAccumAµíd
(
pAccum
, ".", 1);

722 
	`sqlôe3SåAccumAµídAŒ
(
pAccum
, 
pIãm
->
zName
);

723 
Àngth
 = 
width
 = 0;

727 
	`as£π
–
xty≥
==
ëINVALID
 );

736 
width
 -
Àngth
;

737 if–
width
>0 && !
Êag_À·ju°ify
 ) 
	`sqlôe3AµídCh¨
(
pAccum
, width, ' ');

738 
	`sqlôe3SåAccumAµíd
(
pAccum
, 
buÂt
, 
Àngth
);

739 if–
width
>0 && 
Êag_À·ju°ify
 ) 
	`sqlôe3AµídCh¨
(
pAccum
, width, ' ');

741 if–
zExåa
 ){

742 
	`sqlôe3DbFªe
(
pAccum
->
db
, 
zExåa
);

743 
zExåa
 = 0;

746 
	}
}

755 
	$sqlôe3SåAccumE∆¨ge
(
SåAccum
 *
p
, 
N
){

756 *
zNew
;

757 
	`as£π
–
p
->
nCh¨
+(
i64
)
N
 >p->
nAŒoc
 );

758 if–
p
->
accEº‹
 ){

759 
	`ã°ˇ£
(
p
->
accEº‹
==
STRACCUM_TOOBIG
);

760 
	`ã°ˇ£
(
p
->
accEº‹
==
STRACCUM_NOMEM
);

763 if–
p
->
mxAŒoc
==0 ){

764 
N
 = 
p
->
nAŒoc
 -Ö->
nCh¨
 - 1;

765 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_TOOBIG
);

766  
N
;

768 *
zOld
 = 
	`isMÆlo˚d
(
p
Ë?Ö->
zText
 : 0;

769 
i64
 
szNew
 = 
p
->
nCh¨
;

770 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

771 
szNew
 +
N
 + 1;

772 if–
szNew
+
p
->
nCh¨
<ı->
mxAŒoc
 ){

775 
szNew
 +
p
->
nCh¨
;

777 if–
szNew
 > 
p
->
mxAŒoc
 ){

778 
	`sqlôe3SåAccumRe£t
(
p
);

779 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_TOOBIG
);

782 
p
->
nAŒoc
 = ()
szNew
;

784 if–
p
->
db
 ){

785 
zNew
 = 
	`sqlôe3DbRóŒoc
(
p
->
db
, 
zOld
,Ö->
nAŒoc
);

787 
zNew
 = 
	`sqlôe3_ªÆloc64
(
zOld
, 
p
->
nAŒoc
);

789 if–
zNew
 ){

790 
	`as£π
–
p
->
zText
!=0 ||Ö->
nCh¨
==0 );

791 if–!
	`isMÆlo˚d
(
p
Ë&&Ö->
nCh¨
>0 ) 
	`mem˝y
(
zNew
,Ö->
zText
,Ö->nChar);

792 
p
->
zText
 = 
zNew
;

793 
p
->
nAŒoc
 = 
	`sqlôe3DbMÆlocSize
’->
db
, 
zNew
);

794 
p
->
¥ötfFœgs
 |
SQLITE_PRINTF_MALLOCED
;

796 
	`sqlôe3SåAccumRe£t
(
p
);

797 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_NOMEM
);

801  
N
;

802 
	}
}

807 
	$sqlôe3AµídCh¨
(
SåAccum
 *
p
, 
N
, 
c
){

808 
	`ã°ˇ£
–
p
->
nCh¨
 + (
i64
)
N
 > 0x7fffffff );

809 if–
p
->
nCh¨
+(
i64
)
N
 >p->
nAŒoc
 && (N = 
	`sqlôe3SåAccumE∆¨ge
(p, N))<=0 ){

812 
	`as£π
–(
p
->
zText
=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

813  (
N
--)>0 ) 
p
->
zText
[p->
nCh¨
++] = 
c
;

814 
	}
}

824 
SQLITE_NOINLINE
 
	$íœrgeAndAµíd
(
SåAccum
 *
p
, c⁄° *
z
, 
N
){

825 
N
 = 
	`sqlôe3SåAccumE∆¨ge
(
p
, N);

826 if–
N
>0 ){

827 
	`mem˝y
(&
p
->
zText
[p->
nCh¨
], 
z
, 
N
);

828 
p
->
nCh¨
 +
N
;

830 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

831 
	}
}

837 
	$sqlôe3SåAccumAµíd
(
SåAccum
 *
p
, c⁄° *
z
, 
N
){

838 
	`as£π
–
z
!=0 || 
N
==0 );

839 
	`as£π
–
p
->
zText
!=0 ||Ö->
nCh¨
==0 ||Ö->
accEº‹
 );

840 
	`as£π
–
N
>=0 );

841 
	`as£π
–
p
->
accEº‹
==0 ||Ö->
nAŒoc
==0 );

842 if–
p
->
nCh¨
+
N
 >p->
nAŒoc
 ){

843 
	`íœrgeAndAµíd
(
p
,
z
,
N
);

845 
	`as£π
–
p
->
zText
 );

846 
p
->
nCh¨
 +
N
;

847 
	`mem˝y
(&
p
->
zText
[p->
nCh¨
-
N
], 
z
, N);

849 
	}
}

854 
	$sqlôe3SåAccumAµídAŒ
(
SåAccum
 *
p
, c⁄° *
z
){

855 
	`sqlôe3SåAccumAµíd
(
p
, 
z
, 
	`sqlôe3SåÀn30
(z));

856 
	}
}

864 *
	$sqlôe3SåAccumFöish
(
SåAccum
 *
p
){

865 if–
p
->
zText
 ){

866 
	`as£π
–(
p
->
zText
=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

867 
p
->
zText
[p->
nCh¨
] = 0;

868 if–
p
->
mxAŒoc
>0 && !
	`isMÆlo˚d
(p) ){

869 
p
->
zText
 = 
	`sqlôe3DbMÆlocRaw
’->
db
,Ö->
nCh¨
+1 );

870 if–
p
->
zText
 ){

871 
	`mem˝y
(
p
->
zText
,Ö->
zBa£
,Ö->
nCh¨
+1);

872 
p
->
¥ötfFœgs
 |
SQLITE_PRINTF_MALLOCED
;

874 
	`£tSåAccumEº‹
(
p
, 
STRACCUM_NOMEM
);

878  
p
->
zText
;

879 
	}
}

884 
	$sqlôe3SåAccumRe£t
(
SåAccum
 *
p
){

885 
	`as£π
–(
p
->
zText
==0 ||Ö->zText=ı->
zBa£
)==!
	`isMÆlo˚d
(p) );

886 if–
	`isMÆlo˚d
(
p
) ){

887 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zText
);

888 
p
->
¥ötfFœgs
 &~
SQLITE_PRINTF_MALLOCED
;

890 
p
->
zText
 = 0;

891 
	}
}

907 
	$sqlôe3SåAccumInô
(
SåAccum
 *
p
, 
sqlôe3
 *
db
, *
zBa£
, 
n
, 
mx
){

908 
p
->
zText
 =Ö->
zBa£
 = zBase;

909 
p
->
db
 = db;

910 
p
->
nCh¨
 = 0;

911 
p
->
nAŒoc
 = 
n
;

912 
p
->
mxAŒoc
 = 
mx
;

913 
p
->
accEº‹
 = 0;

914 
p
->
¥ötfFœgs
 = 0;

915 
	}
}

921 *
	$sqlôe3VMPrötf
(
sqlôe3
 *
db
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

922 *
z
;

923 
zBa£
[
SQLITE_PRINT_BUF_SIZE
];

924 
SåAccum
 
acc
;

925 
	`as£π
–
db
!=0 );

926 
	`sqlôe3SåAccumInô
(&
acc
, 
db
, 
zBa£
, (zBase),

927 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

928 
acc
.
¥ötfFœgs
 = 
SQLITE_PRINTF_INTERNAL
;

929 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

930 
z
 = 
	`sqlôe3SåAccumFöish
(&
acc
);

931 if–
acc
.
accEº‹
==
STRACCUM_NOMEM
 ){

932 
	`sqlôe3OomFau…
(
db
);

934  
z
;

935 
	}
}

941 *
	$sqlôe3MPrötf
(
sqlôe3
 *
db
, c⁄° *
zF‹m©
, ...){

942 
va_li°
 
≠
;

943 *
z
;

944 
	`va_°¨t
(
≠
, 
zF‹m©
);

945 
z
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

946 
	`va_íd
(
≠
);

947  
z
;

948 
	}
}

954 *
	$sqlôe3_vm¥ötf
(c⁄° *
zF‹m©
, 
va_li°
 
≠
){

955 *
z
;

956 
zBa£
[
SQLITE_PRINT_BUF_SIZE
];

957 
SåAccum
 
acc
;

959 #ifde‡
SQLITE_ENABLE_API_ARMOR


960 if–
zF‹m©
==0 ){

961 ()
SQLITE_MISUSE_BKPT
;

965 #i‚de‡
SQLITE_OMIT_AUTOINIT


966 if–
	`sqlôe3_öôülize
() )  0;

968 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBa£
, (zBa£), 
SQLITE_MAX_LENGTH
);

969 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

970 
z
 = 
	`sqlôe3SåAccumFöish
(&
acc
);

971  
z
;

972 
	}
}

978 *
	$sqlôe3_m¥ötf
(c⁄° *
zF‹m©
, ...){

979 
va_li°
 
≠
;

980 *
z
;

981 #i‚de‡
SQLITE_OMIT_AUTOINIT


982 if–
	`sqlôe3_öôülize
() )  0;

984 
	`va_°¨t
(
≠
, 
zF‹m©
);

985 
z
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

986 
	`va_íd
(
≠
);

987  
z
;

988 
	}
}

1003 *
	$sqlôe3_v¢¥ötf
(
n
, *
zBuf
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

1004 
SåAccum
 
acc
;

1005 if–
n
<=0 )  
zBuf
;

1006 #ifde‡
SQLITE_ENABLE_API_ARMOR


1007 if–
zBuf
==0 || 
zF‹m©
==0 ) {

1008 ()
SQLITE_MISUSE_BKPT
;

1009 if–
zBuf
 ) zBuf[0] = 0;

1010  
zBuf
;

1013 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, 
n
, 0);

1014 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1015  
	`sqlôe3SåAccumFöish
(&
acc
);

1016 
	}
}

1017 *
	$sqlôe3_¢¥ötf
(
n
, *
zBuf
, c⁄° *
zF‹m©
, ...){

1018 *
z
;

1019 
va_li°
 
≠
;

1020 
	`va_°¨t
(
≠
,
zF‹m©
);

1021 
z
 = 
	`sqlôe3_v¢¥ötf
(
n
, 
zBuf
, 
zF‹m©
, 
≠
);

1022 
	`va_íd
(
≠
);

1023  
z
;

1024 
	}
}

1040 
	$ªndîLogMsg
(
iEºCode
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

1041 
SåAccum
 
acc
;

1042 
zMsg
[
SQLITE_PRINT_BUF_SIZE
*3];

1044 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zMsg
, (zMsg), 0);

1045 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1046 
sqlôe3GlobÆC⁄fig
.
	`xLog
(sqlôe3GlobÆC⁄fig.
pLogArg
, 
iEºCode
,

1047 
	`sqlôe3SåAccumFöish
(&
acc
));

1048 
	}
}

1053 
	$sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...){

1054 
va_li°
 
≠
;

1055 if–
sqlôe3GlobÆC⁄fig
.
xLog
 ){

1056 
	`va_°¨t
(
≠
, 
zF‹m©
);

1057 
	`ªndîLogMsg
(
iEºCode
, 
zF‹m©
, 
≠
);

1058 
	`va_íd
(
≠
);

1060 
	}
}

1062 #i‡
deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

1068 
	$sqlôe3DebugPrötf
(c⁄° *
zF‹m©
, ...){

1069 
va_li°
 
≠
;

1070 
SåAccum
 
acc
;

1071 
zBuf
[500];

1072 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, (zBuf), 0);

1073 
	`va_°¨t
(
≠
,
zF‹m©
);

1074 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

1075 
	`va_íd
(
≠
);

1076 
	`sqlôe3SåAccumFöish
(&
acc
);

1077 
	`Ârötf
(
°dout
,"%s", 
zBuf
);

1078 
	`fÊush
(
°dout
);

1079 
	}
}

1087 
	$sqlôe3XPrötf
(
SåAccum
 *
p
, c⁄° *
zF‹m©
, ...){

1088 
va_li°
 
≠
;

1089 
	`va_°¨t
(
≠
,
zF‹m©
);

1090 
	`sqlôe3VXPrötf
(
p
, 
zF‹m©
, 
≠
);

1091 
	`va_íd
(
≠
);

1092 
	}
}

	@random.c

18 
	~"sqlôeI¡.h
"

24 
SQLITE_WSD
 
	ssqlôe3P∫gTy≥
 {

25 
	misInô
;

26 
	mi
, 
	mj
;

27 
	ms
[256];

28 } 
	gsqlôe3P∫g
;

33 
	$sqlôe3_øndom√ss
(
N
, *
pBuf
){

34 
t
;

35 *
zBuf
 = 
pBuf
;

43 #ifde‡
SQLITE_OMIT_WSD


44 
sqlôe3P∫gTy≥
 *
p
 = &
	`GLOBAL
(sqlôe3P∫gTy≥, 
sqlôe3P∫g
);

45 
	#wsdP∫g
 
p
[0]

	)

47 
	#wsdP∫g
 
sqlôe3P∫g


	)

50 #i‡
SQLITE_THREADSAFE


51 
sqlôe3_muãx
 *
muãx
;

54 #i‚de‡
SQLITE_OMIT_AUTOINIT


55 if–
	`sqlôe3_öôülize
() ) ;

58 #i‡
SQLITE_THREADSAFE


59 
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_STATIC_PRNG
);

62 
	`sqlôe3_muãx_íãr
(
muãx
);

63 if–
N
<=0 || 
pBuf
==0 ){

64 
wsdP∫g
.
isInô
 = 0;

65 
	`sqlôe3_muãx_Àave
(
muãx
);

78 if–!
wsdP∫g
.
isInô
 ){

79 
i
;

80 
k
[256];

81 
wsdP∫g
.
j
 = 0;

82 
wsdP∫g
.
i
 = 0;

83 
	`sqlôe3OsR™dom√ss
(
	`sqlôe3_vfs_föd
(0), 256, 
k
);

84 
i
=0; i<256; i++){

85 
wsdP∫g
.
s
[
i
] = (
u8
)i;

87 
i
=0; i<256; i++){

88 
wsdP∫g
.
j
 +wsdP∫g.
s
[
i
] + 
k
[i];

89 
t
 = 
wsdP∫g
.
s
[wsdP∫g.
j
];

90 
wsdP∫g
.
s
[wsdP∫g.
j
] = wsdP∫g.s[
i
];

91 
wsdP∫g
.
s
[
i
] = 
t
;

93 
wsdP∫g
.
isInô
 = 1;

96 
	`as£π
–
N
>0 );

98 
wsdP∫g
.
i
++;

99 
t
 = 
wsdP∫g
.
s
[wsdP∫g.
i
];

100 
wsdP∫g
.
j
 +
t
;

101 
wsdP∫g
.
s
[wsdP∫g.
i
] = wsdP∫g.s[wsdP∫g.
j
];

102 
wsdP∫g
.
s
[wsdP∫g.
j
] = 
t
;

103 
t
 +
wsdP∫g
.
s
[wsdP∫g.
i
];

104 *(
zBuf
++Ë
wsdP∫g
.
s
[
t
];

105 } --
N
 );

106 
	`sqlôe3_muãx_Àave
(
muãx
);

107 
	}
}

109 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


119 
SQLITE_WSD
 
sqlôe3P∫gTy≥
 
	gsqlôe3SavedP∫g
;

120 
	$sqlôe3P∫gSaveSèã
(){

121 
	`mem˝y
(

122 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3SavedP∫g
),

123 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3P∫g
),

124 (
sqlôe3P∫g
)

126 
	}
}

127 
	$sqlôe3P∫gRe°‹eSèã
(){

128 
	`mem˝y
(

129 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3P∫g
),

130 &
	`GLOBAL
(
sqlôe3P∫gTy≥
, 
sqlôe3SavedP∫g
),

131 (
sqlôe3P∫g
)

133 
	}
}

	@resolve.c

17 
	~"sqlôeI¡.h
"

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

30 
	$ö¸AggDïth
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

31 if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 )ÖEx¥->
›2
 +
pWÆkî
->
u
.
n
;

32  
WRC_C⁄töue
;

33 
	}
}

34 
	$ö¸AggFun˘i⁄Dïth
(
Ex¥
 *
pEx¥
, 
N
){

35 if–
N
>0 ){

36 
WÆkî
 
w
;

37 
	`mem£t
(&
w
, 0, (w));

38 
w
.
xEx¥CÆlback
 = 
ö¸AggDïth
;

39 
w
.
u
.
n
 = 
N
;

40 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

42 
	}
}

63 
	$ªsﬁveAlüs
(

64 
P¨£
 *
pP¨£
,

65 
Ex¥Li°
 *
pELi°
,

66 
iCﬁ
,

67 
Ex¥
 *
pEx¥
,

68 c⁄° *
zTy≥
,

69 
nSubquîy


71 
Ex¥
 *
pOrig
;

72 
Ex¥
 *
pDup
;

73 
sqlôe3
 *
db
;

75 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pELi°
->
nEx¥
 );

76 
pOrig
 = 
pELi°
->
a
[
iCﬁ
].
pEx¥
;

77 
	`as£π
–
pOrig
!=0 );

78 
db
 = 
pP¨£
->db;

79 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrig
, 0);

80 if–
pDup
==0 ) ;

81 if–
zTy≥
[0]!='G' ) 
	`ö¸AggFun˘i⁄Dïth
(
pDup
, 
nSubquîy
);

82 if–
pEx¥
->
›
==
TK_COLLATE
 ){

83 
pDup
 = 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,ÖDup, 
pEx¥
->
u
.
zTokí
);

85 
	`Ex¥SëPr›îty
(
pDup
, 
EP_Alüs
);

94 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Sètic
);

95 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

96 
	`mem˝y
(
pEx¥
, 
pDup
, (*pExpr));

97 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
Ë&&ÖEx¥->
u
.
zTokí
!=0 ){

98 
	`as£π
–(
pEx¥
->
Êags
 & (
EP_Redu˚d
|
EP_TokíO∆y
))==0 );

99 
pEx¥
->
u
.
zTokí
 = 
	`sqlôe3DbSåDup
(
db
,ÖExpr->u.zToken);

100 
pEx¥
->
Êags
 |
EP_MemTokí
;

102 
	`sqlôe3DbFªe
(
db
, 
pDup
);

103 
	}
}

112 
	$«meInUsögCœu£
(
IdLi°
 *
pUsög
, c⁄° *
zCﬁ
){

113 if–
pUsög
 ){

114 
k
;

115 
k
=0; k<
pUsög
->
nId
; k++){

116 if–
	`sqlôe3SåICmp
(
pUsög
->
a
[
k
].
zName
, 
zCﬁ
)==0 )  1;

120 
	}
}

129 
	$sqlôe3M©chS∑nName
(

130 c⁄° *
zS∑n
,

131 c⁄° *
zCﬁ
,

132 c⁄° *
zTab
,

133 c⁄° *
zDb


135 
n
;

136 
n
=0; 
	`ALWAYS
(
zS∑n
[n]) && zSpan[n]!='.';Ç++){}

137 if–
zDb
 && (
	`sqlôe3SåNICmp
(
zS∑n
, zDb, 
n
)!=0 || zDb[n]!=0) ){

140 
zS∑n
 +
n
+1;

141 
n
=0; 
	`ALWAYS
(
zS∑n
[n]) && zSpan[n]!='.';Ç++){}

142 if–
zTab
 && (
	`sqlôe3SåNICmp
(
zS∑n
, zTab, 
n
)!=0 || zTab[n]!=0) ){

145 
zS∑n
 +
n
+1;

146 if–
zCﬁ
 && 
	`sqlôe3SåICmp
(
zS∑n
, zCol)!=0 ){

150 
	}
}

179 
	$lookupName
(

180 
P¨£
 *
pP¨£
,

181 c⁄° *
zDb
,

182 c⁄° *
zTab
,

183 c⁄° *
zCﬁ
,

184 
NameC⁄ãxt
 *
pNC
,

185 
Ex¥
 *
pEx¥


187 
i
, 
j
;

188 
˙t
 = 0;

189 
˙tTab
 = 0;

190 
nSubquîy
 = 0;

191 
sqlôe3
 *
db
 = 
pP¨£
->db;

192 
SrcLi°_ôem
 *
pIãm
;

193 
SrcLi°_ôem
 *
pM©ch
 = 0;

194 
NameC⁄ãxt
 *
pT›NC
 = 
pNC
;

195 
Schema
 *
pSchema
 = 0;

196 
isTriggî
 = 0;

197 
TabÀ
 *
pTab
 = 0;

198 
Cﬁumn
 *
pCﬁ
;

200 
	`as£π
–
pNC
 );

201 
	`as£π
–
zCﬁ
 );

202 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

205 
pEx¥
->
iTabÀ
 = -1;

206 
pEx¥
->
pTab
 = 0;

207 
	`Ex¥SëVVAPr›îty
(
pEx¥
, 
EP_NoRedu˚
);

213 if–
zDb
 ){

214 
	`ã°ˇ£
–
pNC
->
ncFœgs
 & 
NC_P¨tIdx
 );

215 
	`ã°ˇ£
–
pNC
->
ncFœgs
 & 
NC_IsCheck
 );

216 if–(
pNC
->
ncFœgs
 & (
NC_P¨tIdx
|
NC_IsCheck
))!=0 ){

221 
zDb
 = 0;

223 
i
=0; i<
db
->
nDb
; i++){

224 
	`as£π
–
db
->
aDb
[
i
].
zName
 );

225 if–
	`sqlôe3SåICmp
(
db
->
aDb
[
i
].
zName
,
zDb
)==0 ){

226 
pSchema
 = 
db
->
aDb
[
i
].pSchema;

234  
pNC
 && 
˙t
==0 ){

235 
Ex¥Li°
 *
pELi°
;

236 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

238 if–
pSrcLi°
 ){

239 
i
=0, 
pIãm
=
pSrcLi°
->
a
; i<pSrcLi°->
nSrc
; i++,ÖItem++){

240 
pTab
 = 
pIãm
->pTab;

241 
	`as£π
–
pTab
!=0 &&ÖTab->
zName
!=0 );

242 
	`as£π
–
pTab
->
nCﬁ
>0 );

243 if–
pIãm
->
pSñe˘
 && (pIãm->pSñe˘->
£lFœgs
 & 
SF_Ne°edFrom
)!=0 ){

244 
hô
 = 0;

245 
pELi°
 = 
pIãm
->
pSñe˘
->pEList;

246 
j
=0; j<
pELi°
->
nEx¥
; j++){

247 if–
	`sqlôe3M©chS∑nName
(
pELi°
->
a
[
j
].
zS∑n
, 
zCﬁ
, 
zTab
, 
zDb
) ){

248 
˙t
++;

249 
˙tTab
 = 2;

250 
pM©ch
 = 
pIãm
;

251 
pEx¥
->
iCﬁumn
 = 
j
;

252 
hô
 = 1;

255 if–
hô
 || 
zTab
==0 ) ;

257 if–
zDb
 && 
pTab
->
pSchema
!=pSchema ){

260 if–
zTab
 ){

261 c⁄° *
zTabName
 = 
pIãm
->
zAlüs
 ?ÖIãm->zAlü†: 
pTab
->
zName
;

262 
	`as£π
–
zTabName
!=0 );

263 if–
	`sqlôe3SåICmp
(
zTabName
, 
zTab
)!=0 ){

267 if–0==(
˙tTab
++) ){

268 
pM©ch
 = 
pIãm
;

270 
j
=0, 
pCﬁ
=
pTab
->
aCﬁ
; j<pTab->
nCﬁ
; j++,ÖCol++){

271 if–
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁ
)==0 ){

276 if–
˙t
==1 ){

277 if–
pIãm
->
fg
.
joöty≥
 & 
JT_NATURAL
 ) ;

278 if–
	`«meInUsögCœu£
(
pIãm
->
pUsög
, 
zCﬁ
) ) ;

280 
˙t
++;

281 
pM©ch
 = 
pIãm
;

283 
pEx¥
->
iCﬁumn
 = 
j
==
pTab
->
iPKey
 ? -1 : (
i16
)j;

288 if–
pM©ch
 ){

289 
pEx¥
->
iTabÀ
 = 
pM©ch
->
iCurs‹
;

290 
pEx¥
->
pTab
 = 
pM©ch
->pTab;

292 
	`as£π
–(
pM©ch
->
fg
.
joöty≥
 & 
JT_RIGHT
)==0 );

293 if–(
pM©ch
->
fg
.
joöty≥
 & 
JT_LEFT
)!=0 ){

294 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_C™BeNuŒ
);

296 
pSchema
 = 
pEx¥
->
pTab
->pSchema;

300 #i‚de‡
SQLITE_OMIT_TRIGGER


304 if–
zDb
==0 && 
zTab
!=0 && 
˙tTab
==0 && 
pP¨£
->
pTriggîTab
!=0 ){

305 
›
 = 
pP¨£
->
eTriggîOp
;

306 
	`as£π
–
›
==
TK_DELETE
 || op==
TK_UPDATE
 || op==
TK_INSERT
 );

307 if–
›
!=
TK_DELETE
 && 
	`sqlôe3SåICmp
("√w",
zTab
) == 0 ){

308 
pEx¥
->
iTabÀ
 = 1;

309 
pTab
 = 
pP¨£
->
pTriggîTab
;

310 }if–
›
!=
TK_INSERT
 && 
	`sqlôe3SåICmp
("ﬁd",
zTab
)==0 ){

311 
pEx¥
->
iTabÀ
 = 0;

312 
pTab
 = 
pP¨£
->
pTriggîTab
;

314 
pTab
 = 0;

317 if–
pTab
 ){

318 
iCﬁ
;

319 
pSchema
 = 
pTab
->pSchema;

320 
˙tTab
++;

321 
iCﬁ
=0, 
pCﬁ
=
pTab
->
aCﬁ
; iCﬁ<pTab->
nCﬁ
; iCol++,ÖCol++){

322 if–
	`sqlôe3SåICmp
(
pCﬁ
->
zName
, 
zCﬁ
)==0 ){

323 if–
iCﬁ
==
pTab
->
iPKey
 ){

324 
iCﬁ
 = -1;

329 if–
iCﬁ
>=
pTab
->
nCﬁ
 && 
	`sqlôe3IsRowid
(
zCﬁ
Ë&& 
	`VisibÀRowid
(pTab) ){

331 
iCﬁ
 = -1;

333 if–
iCﬁ
<
pTab
->
nCﬁ
 ){

334 
˙t
++;

335 if–
iCﬁ
<0 ){

336 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

337 }if–
pEx¥
->
iTabÀ
==0 ){

338 
	`ã°ˇ£
–
iCﬁ
==31 );

339 
	`ã°ˇ£
–
iCﬁ
==32 );

340 
pP¨£
->
ﬁdmask
 |(
iCﬁ
>=32 ? 0xfffffff‡: (((
u32
)1)<<iCol));

342 
	`ã°ˇ£
–
iCﬁ
==31 );

343 
	`ã°ˇ£
–
iCﬁ
==32 );

344 
pP¨£
->
√wmask
 |(
iCﬁ
>=32 ? 0xfffffff‡: (((
u32
)1)<<iCol));

346 
pEx¥
->
iCﬁumn
 = (
i16
)
iCﬁ
;

347 
pEx¥
->
pTab
 =ÖTab;

348 
isTriggî
 = 1;

357 if–
˙t
==0

358 && 
˙tTab
==1

359 && 
pM©ch


360 && (
pNC
->
ncFœgs
 & 
NC_IdxEx¥
)==0

361 && 
	`sqlôe3IsRowid
(
zCﬁ
)

362 && 
	`VisibÀRowid
(
pM©ch
->
pTab
)

364 
˙t
 = 1;

365 
pEx¥
->
iCﬁumn
 = -1;

366 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

387 if–(
pELi°
 = 
pNC
->pEList)!=0

388 && 
zTab
==0

389 && 
˙t
==0

391 
j
=0; j<
pELi°
->
nEx¥
; j++){

392 *
zAs
 = 
pELi°
->
a
[
j
].
zName
;

393 if–
zAs
!=0 && 
	`sqlôe3SåICmp
(zAs, 
zCﬁ
)==0 ){

394 
Ex¥
 *
pOrig
;

395 
	`as£π
–
pEx¥
->
pLe·
==0 &&ÖEx¥->
pRight
==0 );

396 
	`as£π
–
pEx¥
->
x
.
pLi°
==0 );

397 
	`as£π
–
pEx¥
->
x
.
pSñe˘
==0 );

398 
pOrig
 = 
pELi°
->
a
[
j
].
pEx¥
;

399 if–(
pNC
->
ncFœgs
&
NC_AŒowAgg
)==0 && 
	`Ex¥HasPr›îty
(
pOrig
, 
EP_Agg
) ){

400 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡Æü£dággªg©ê%s", 
zAs
);

401  
WRC_Ab‹t
;

403 
	`ªsﬁveAlüs
(
pP¨£
, 
pELi°
, 
j
, 
pEx¥
, "", 
nSubquîy
);

404 
˙t
 = 1;

405 
pM©ch
 = 0;

406 
	`as£π
–
zTab
==0 && 
zDb
==0 );

407 
looku≤ame_íd
;

415 if–
˙t
==0 ){

416 
pNC
 =ÖNC->
pNext
;

417 
nSubquîy
++;

431 if–
˙t
==0 && 
zTab
==0 && 
	`Ex¥HasPr›îty
(
pEx¥
,
EP_DblQuŸed
) ){

432 
pEx¥
->
›
 = 
TK_STRING
;

433 
pEx¥
->
pTab
 = 0;

434  
WRC_Pru√
;

441 if–
˙t
!=1 ){

442 c⁄° *
zEº
;

443 
zEº
 = 
˙t
==0 ? "no such column" : "ambiguous columnÇame";

444 if–
zDb
 ){

445 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s.%s", 
zEº
, 
zDb
, 
zTab
, 
zCﬁ
);

446 }if–
zTab
 ){

447 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s.%s", 
zEº
, 
zTab
, 
zCﬁ
);

449 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s: %s", 
zEº
, 
zCﬁ
);

451 
pP¨£
->
checkSchema
 = 1;

452 
pT›NC
->
nEº
++;

461 if–
pEx¥
->
iCﬁumn
>=0 && 
pM©ch
!=0 ){

462 
n
 = 
pEx¥
->
iCﬁumn
;

463 
	`ã°ˇ£
–
n
==
BMS
-1 );

464 if–
n
>=
BMS
 ){

465 
n
 = 
BMS
-1;

467 
	`as£π
–
pM©ch
->
iCurs‹
==
pEx¥
->
iTabÀ
 );

468 
pM©ch
->
cﬁU£d
 |((
Bômask
)1)<<
n
;

473 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
->
pLe·
);

474 
pEx¥
->
pLe·
 = 0;

475 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
->
pRight
);

476 
pEx¥
->
pRight
 = 0;

477 
pEx¥
->
›
 = (
isTriggî
 ? 
TK_TRIGGER
 : 
TK_COLUMN
);

478 
looku≤ame_íd
:

479 if–
˙t
==1 ){

480 
	`as£π
–
pNC
!=0 );

481 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Alüs
) ){

482 
	`sqlôe3AuthRód
(
pP¨£
, 
pEx¥
, 
pSchema
, 
pNC
->
pSrcLi°
);

487 
	`as£π
–
pT›NC
!=0 );

488 
pT›NC
->
nRef
++;

489 if–
pT›NC
==
pNC
 ) ;

490 
pT›NC
 =ÖT›NC->
pNext
;

492  
WRC_Pru√
;

494  
WRC_Ab‹t
;

496 
	}
}

502 
Ex¥
 *
	$sqlôe3Cª©eCﬁumnEx¥
(
sqlôe3
 *
db
, 
SrcLi°
 *
pSrc
, 
iSrc
, 
iCﬁ
){

503 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥AŒoc
(
db
, 
TK_COLUMN
, 0, 0);

504 if–
p
 ){

505 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
iSrc
];

506 
p
->
pTab
 = 
pIãm
->pTab;

507 
p
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

508 if–
p
->
pTab
->
iPKey
==
iCﬁ
 ){

509 
p
->
iCﬁumn
 = -1;

511 
p
->
iCﬁumn
 = (
ynV¨
)
iCﬁ
;

512 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

513 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

514 
pIãm
->
cﬁU£d
 |((
Bômask
)1)<<(
iCﬁ
>=
BMS
 ? BMS-1 : iCol);

516 
	`Ex¥SëPr›îty
(
p
, 
EP_Resﬁved
);

518  
p
;

519 
	}
}

525 
	$nŸVÆid
(

526 
P¨£
 *
pP¨£
,

527 
NameC⁄ãxt
 *
pNC
,

528 c⁄° *
zMsg
,

529 
vÆidMask


531 
	`as£π
–(
vÆidMask
&~(
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
))==0 );

532 if–(
pNC
->
ncFœgs
 & 
vÆidMask
)!=0 ){

533 c⁄° *
zIn
 = "partial index WHERE clauses";

534 if–
pNC
->
ncFœgs
 & 
NC_IdxEx¥
 ) 
zIn
 = "indexÉxpressions";

535 #i‚de‡
SQLITE_OMIT_CHECK


536 if–
pNC
->
ncFœgs
 & 
NC_IsCheck
 ) 
zIn
 = "CHECK constraints";

538 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%†¥ohibôed i¿%s", 
zMsg
, 
zIn
);

540 
	}
}

547 
	$ex¥Probabûôy
(
Ex¥
 *
p
){

548 
r
 = -1.0;

549 if–
p
->
›
!=
TK_FLOAT
 )  -1;

550 
	`sqlôe3AtoF
(
p
->
u
.
zTokí
, &
r
, 
	`sqlôe3SåÀn30
’->u.zTokí), 
SQLITE_UTF8
);

551 
	`as£π
–
r
>=0.0 );

552 if–
r
>1.0 )  -1;

553  ()(
r
*134217728.0);

554 
	}
}

567 
	$ªsﬁveEx¥Sãp
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

568 
NameC⁄ãxt
 *
pNC
;

569 
P¨£
 *
pP¨£
;

571 
pNC
 = 
pWÆkî
->
u
.pNC;

572 
	`as£π
–
pNC
!=0 );

573 
pP¨£
 = 
pNC
->pParse;

574 
	`as£π
–
pP¨£
==
pWÆkî
->pParse );

576 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Resﬁved
ËË 
WRC_Pru√
;

577 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Resﬁved
);

578 #i‚de‡
NDEBUG


579 if–
pNC
->
pSrcLi°
 &&ÖNC->pSrcLi°->
nAŒoc
>0 ){

580 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

581 
i
;

582 
i
=0; i<
pNC
->
pSrcLi°
->
nSrc
; i++){

583 
	`as£π
–
pSrcLi°
->
a
[
i
].
iCurs‹
>=0 &&ÖSrcLi°->a[i].iCurs‹<
pP¨£
->
nTab
);

587  
pEx¥
->
›
 ){

589 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

594 
TK_ROW
: {

595 
SrcLi°
 *
pSrcLi°
 = 
pNC
->pSrcList;

596 
SrcLi°_ôem
 *
pIãm
;

597 
	`as£π
–
pSrcLi°
 &&ÖSrcLi°->
nSrc
==1 );

598 
pIãm
 = 
pSrcLi°
->
a
;

599 
pEx¥
->
›
 = 
TK_COLUMN
;

600 
pEx¥
->
pTab
 = 
pIãm
->pTab;

601 
pEx¥
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

602 
pEx¥
->
iCﬁumn
 = -1;

603 
pEx¥
->
afföôy
 = 
SQLITE_AFF_INTEGER
;

607 && !
	`deföed
(
SQLITE_OMIT_SUBQUERY
) */

611 
TK_ID
: {

612  
	`lookupName
(
pP¨£
, 0, 0, 
pEx¥
->
u
.
zTokí
, 
pNC
,ÖExpr);

618 
TK_DOT
: {

619 c⁄° *
zCﬁumn
;

620 c⁄° *
zTabÀ
;

621 c⁄° *
zDb
;

622 
Ex¥
 *
pRight
;

625 
	`nŸVÆid
(
pP¨£
, 
pNC
, "thê\".\" o≥øt‹", 
NC_IdxEx¥
);

627 
pRight
 = 
pEx¥
->pRight;

628 if–
pRight
->
›
==
TK_ID
 ){

629 
zDb
 = 0;

630 
zTabÀ
 = 
pEx¥
->
pLe·
->
u
.
zTokí
;

631 
zCﬁumn
 = 
pRight
->
u
.
zTokí
;

633 
	`as£π
–
pRight
->
›
==
TK_DOT
 );

634 
zDb
 = 
pEx¥
->
pLe·
->
u
.
zTokí
;

635 
zTabÀ
 = 
pRight
->
pLe·
->
u
.
zTokí
;

636 
zCﬁumn
 = 
pRight
->pRight->
u
.
zTokí
;

638  
	`lookupName
(
pP¨£
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
pNC
, 
pEx¥
);

643 
TK_FUNCTION
: {

644 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

645 
n
 = 
pLi°
 ?ÖLi°->
nEx¥
 : 0;

646 
no_such_func
 = 0;

647 
wr⁄g_num_¨gs
 = 0;

648 
is_agg
 = 0;

649 
auth
;

650 
nId
;

651 c⁄° *
zId
;

652 
FuncDef
 *
pDef
;

653 
u8
 
íc
 = 
	`ENC
(
pP¨£
->
db
);

655 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

656 
	`nŸVÆid
(
pP¨£
, 
pNC
, "fun˘i⁄s", 
NC_P¨tIdx
);

657 
zId
 = 
pEx¥
->
u
.
zTokí
;

658 
nId
 = 
	`sqlôe3SåÀn30
(
zId
);

659 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
, 
zId
, 
n
, 
íc
, 0);

660 if–
pDef
==0 ){

661 
pDef
 = 
	`sqlôe3FödFun˘i⁄
(
pP¨£
->
db
, 
zId
, -2, 
íc
, 0);

662 if–
pDef
==0 ){

663 
no_such_func
 = 1;

665 
wr⁄g_num_¨gs
 = 1;

668 
is_agg
 = 
pDef
->
xFöÆize
!=0;

669 if–
pDef
->
funcFœgs
 & 
SQLITE_FUNC_UNLIKELY
 ){

670 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_U∆ikñy
|
EP_Skù
);

671 if–
n
==2 ){

672 
pEx¥
->
iTabÀ
 = 
	`ex¥Probabûôy
(
pLi°
->
a
[1].pExpr);

673 if–
pEx¥
->
iTabÀ
<0 ){

674 
	`sqlôe3Eº‹Msg
(
pP¨£
,

677 
pNC
->
nEº
++;

689 
pEx¥
->
iTabÀ
 = 
pDef
->
zName
[0]=='u' ? 8388608 : 125829120;

692 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


693 
auth
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_FUNCTION
, 0, 
pDef
->
zName
, 0);

694 if–
auth
!=
SQLITE_OK
 ){

695 if–
auth
==
SQLITE_DENY
 ){

696 
	`sqlôe3Eº‹Msg
(
pP¨£
, "notáuthorizedÅo use function: %s",

697 
pDef
->
zName
);

698 
pNC
->
nEº
++;

700 
pEx¥
->
›
 = 
TK_NULL
;

701  
WRC_Pru√
;

704 if–
pDef
->
funcFœgs
 & (
SQLITE_FUNC_CONSTANT
|
SQLITE_FUNC_SLOCHNG
) ){

708 
	`Ex¥SëPr›îty
(
pEx¥
,
EP_C⁄°Func
);

710 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_CONSTANT
)==0 ){

714 
	`nŸVÆid
(
pP¨£
, 
pNC
, "n⁄-dëîmöi°i¯fun˘i⁄s", 
NC_IdxEx¥
);

717 if–
is_agg
 && (
pNC
->
ncFœgs
 & 
NC_AŒowAgg
)==0 ){

718 
	`sqlôe3Eº‹Msg
(
pP¨£
, "misu£ o‡aggªg©êfun˘i⁄ %.*s()", 
nId
,
zId
);

719 
pNC
->
nEº
++;

720 
is_agg
 = 0;

721 }if–
no_such_func
 && 
pP¨£
->
db
->
öô
.
busy
==0

722 #ifde‡
SQLITE_ENABLE_UNKNOWN_SQL_FUNCTION


723 && 
pP¨£
->
ex∂aö
==0

726 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch fun˘i⁄: %.*s", 
nId
, 
zId
);

727 
pNC
->
nEº
++;

728 }if–
wr⁄g_num_¨gs
 ){

729 
	`sqlôe3Eº‹Msg
(
pP¨£
,"wrongÇumber ofárgumentsÅo function %.*s()",

730 
nId
, 
zId
);

731 
pNC
->
nEº
++;

733 if–
is_agg
 ) 
pNC
->
ncFœgs
 &~
NC_AŒowAgg
;

734 
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pLi°
);

735 if–
is_agg
 ){

736 
NameC⁄ãxt
 *
pNC2
 = 
pNC
;

737 
pEx¥
->
›
 = 
TK_AGG_FUNCTION
;

738 
pEx¥
->
›2
 = 0;

739  
pNC2
 && !
	`sqlôe3Fun˘i⁄U£sThisSrc
(
pEx¥
,ÖNC2->
pSrcLi°
) ){

740 
pEx¥
->
›2
++;

741 
pNC2
 =ÖNC2->
pNext
;

743 
	`as£π
–
pDef
!=0 );

744 if–
pNC2
 ){

745 
	`as£π
–
SQLITE_FUNC_MINMAX
==
NC_MöMaxAgg
 );

746 
	`ã°ˇ£
–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_MINMAX
)!=0 );

747 
pNC2
->
ncFœgs
 |
NC_HasAgg
 | (
pDef
->
funcFœgs
 & 
SQLITE_FUNC_MINMAX
);

750 
pNC
->
ncFœgs
 |
NC_AŒowAgg
;

755  
WRC_Pru√
;

757 #i‚de‡
SQLITE_OMIT_SUBQUERY


758 
TK_SELECT
:

759 
TK_EXISTS
: 
	`ã°ˇ£
–
pEx¥
->
›
==TK_EXISTS );

761 
TK_IN
: {

762 
	`ã°ˇ£
–
pEx¥
->
›
==
TK_IN
 );

763 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

764 
nRef
 = 
pNC
->nRef;

765 
	`nŸVÆid
(
pP¨£
, 
pNC
, "subquîõs", 
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
);

766 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pEx¥
->
x
.
pSñe˘
);

767 
	`as£π
–
pNC
->
nRef
>=nRef );

768 if–
nRef
!=
pNC
->nRef ){

769 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_V¨Sñe˘
);

770 
pNC
->
ncFœgs
 |
NC_V¨Sñe˘
;

775 
TK_VARIABLE
: {

776 
	`nŸVÆid
(
pP¨£
, 
pNC
, "∑ømëîs", 
NC_IsCheck
|
NC_P¨tIdx
|
NC_IdxEx¥
);

780  (
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
Ë? 
WRC_Ab‹t
 : 
WRC_C⁄töue
;

781 
	}
}

795 
	$ªsﬁveAsName
(

796 
P¨£
 *
pP¨£
,

797 
Ex¥Li°
 *
pELi°
,

798 
Ex¥
 *
pE


800 
i
;

802 
	`UNUSED_PARAMETER
(
pP¨£
);

804 if–
pE
->
›
==
TK_ID
 ){

805 *
zCﬁ
 = 
pE
->
u
.
zTokí
;

806 
i
=0; i<
pELi°
->
nEx¥
; i++){

807 *
zAs
 = 
pELi°
->
a
[
i
].
zName
;

808 if–
zAs
!=0 && 
	`sqlôe3SåICmp
(zAs, 
zCﬁ
)==0 ){

809  
i
+1;

814 
	}
}

834 
	$ªsﬁveOrdîByTîmToEx¥Li°
(

835 
P¨£
 *
pP¨£
,

836 
Sñe˘
 *
pSñe˘
,

837 
Ex¥
 *
pE


839 
i
;

840 
Ex¥Li°
 *
pELi°
;

841 
NameC⁄ãxt
 
nc
;

842 
sqlôe3
 *
db
;

843 
rc
;

844 
u8
 
ßvedSuµEº
;

846 
	`as£π
–
	`sqlôe3Ex¥IsI¡egî
(
pE
, &
i
)==0 );

847 
pELi°
 = 
pSñe˘
->pEList;

851 
	`mem£t
(&
nc
, 0, (nc));

852 
nc
.
pP¨£
 =ÖParse;

853 
nc
.
pSrcLi°
 = 
pSñe˘
->
pSrc
;

854 
nc
.
pELi°
 =ÖEList;

855 
nc
.
ncFœgs
 = 
NC_AŒowAgg
;

856 
nc
.
nEº
 = 0;

857 
db
 = 
pP¨£
->db;

858 
ßvedSuµEº
 = 
db
->
suµªssEº
;

859 
db
->
suµªssEº
 = 1;

860 
rc
 = 
	`sqlôe3ResﬁveEx¥Names
(&
nc
, 
pE
);

861 
db
->
suµªssEº
 = 
ßvedSuµEº
;

862 if–
rc
 )  0;

868 
i
=0; i<
pELi°
->
nEx¥
; i++){

869 if–
	`sqlôe3Ex¥Com∑ª
(
pELi°
->
a
[
i
].
pEx¥
, 
pE
, -1)<2 ){

870  
i
+1;

876 
	}
}

881 
	$ªsﬁveOutOfR™geEº‹
(

882 
P¨£
 *
pP¨£
,

883 c⁄° *
zTy≥
,

884 
i
,

885 
mx


887 
	`sqlôe3Eº‹Msg
(
pP¨£
,

889 "bëwì¿1ánd %d", 
i
, 
zTy≥
, 
mx
);

890 
	}
}

907 
	$ªsﬁveCompoundOrdîBy
(

908 
P¨£
 *
pP¨£
,

909 
Sñe˘
 *
pSñe˘


911 
i
;

912 
Ex¥Li°
 *
pOrdîBy
;

913 
Ex¥Li°
 *
pELi°
;

914 
sqlôe3
 *
db
;

915 
m‹eToDo
 = 1;

917 
pOrdîBy
 = 
pSñe˘
->pOrderBy;

918 if–
pOrdîBy
==0 )  0;

919 
db
 = 
pP¨£
->db;

920 #i‡
SQLITE_MAX_COLUMN


921 if–
pOrdîBy
->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

922 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyÅerms in ORDER BY clause");

926 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

927 
pOrdîBy
->
a
[
i
].
d⁄e
 = 0;

929 
pSñe˘
->
pNext
 = 0;

930  
pSñe˘
->
pPri‹
 ){

931 
pSñe˘
->
pPri‹
->
pNext
 =ÖSelect;

932 
pSñe˘
 =ÖSñe˘->
pPri‹
;

934  
pSñe˘
 && 
m‹eToDo
 ){

935 
Ex¥Li°_ôem
 *
pIãm
;

936 
m‹eToDo
 = 0;

937 
pELi°
 = 
pSñe˘
->pEList;

938 
	`as£π
–
pELi°
!=0 );

939 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

940 
iCﬁ
 = -1;

941 
Ex¥
 *
pE
, *
pDup
;

942 if–
pIãm
->
d⁄e
 ) ;

943 
pE
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pIãm
->
pEx¥
);

944 if–
	`sqlôe3Ex¥IsI¡egî
(
pE
, &
iCﬁ
) ){

945 if–
iCﬁ
<=0 || iCﬁ>
pELi°
->
nEx¥
 ){

946 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, "ORDER", 
i
+1, 
pELi°
->
nEx¥
);

950 
iCﬁ
 = 
	`ªsﬁveAsName
(
pP¨£
, 
pELi°
, 
pE
);

951 if–
iCﬁ
==0 ){

952 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pE
, 0);

953 if–!
db
->
mÆlocFaûed
 ){

954 
	`as£π
(
pDup
);

955 
iCﬁ
 = 
	`ªsﬁveOrdîByTîmToEx¥Li°
(
pP¨£
, 
pSñe˘
, 
pDup
);

957 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDup
);

960 if–
iCﬁ
>0 ){

963 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥
(
db
, 
TK_INTEGER
, 0);

964 if–
pNew
==0 )  1;

965 
pNew
->
Êags
 |
EP_I¡VÆue
;

966 
pNew
->
u
.
iVÆue
 = 
iCﬁ
;

967 if–
pIãm
->
pEx¥
==
pE
 ){

968 
pIãm
->
pEx¥
 = 
pNew
;

970 
Ex¥
 *
pP¨ít
 = 
pIãm
->
pEx¥
;

971 
	`as£π
–
pP¨ít
->
›
==
TK_COLLATE
 );

972  
pP¨ít
->
pLe·
->
›
==
TK_COLLATE
 )ÖParent =ÖParent->pLeft;

973 
	`as£π
–
pP¨ít
->
pLe·
==
pE
 );

974 
pP¨ít
->
pLe·
 = 
pNew
;

976 
	`sqlôe3Ex¥Dñëe
(
db
, 
pE
);

977 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

978 
pIãm
->
d⁄e
 = 1;

980 
m‹eToDo
 = 1;

983 
pSñe˘
 =ÖSñe˘->
pNext
;

985 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

986 if–
pOrdîBy
->
a
[
i
].
d⁄e
==0 ){

987 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%r ORDER BYÅerm doesÇot matchány "

988 "cﬁum¿öÅhêªsu… së", 
i
+1);

993 
	}
}

1005 
	$sqlôe3ResﬁveOrdîGroupBy
(

1006 
P¨£
 *
pP¨£
,

1007 
Sñe˘
 *
pSñe˘
,

1008 
Ex¥Li°
 *
pOrdîBy
,

1009 c⁄° *
zTy≥


1011 
i
;

1012 
sqlôe3
 *
db
 = 
pP¨£
->db;

1013 
Ex¥Li°
 *
pELi°
;

1014 
Ex¥Li°_ôem
 *
pIãm
;

1016 if–
pOrdîBy
==0 || 
pP¨£
->
db
->
mÆlocFaûed
 )  0;

1017 #i‡
SQLITE_MAX_COLUMN


1018 if–
pOrdîBy
->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

1019 
	`sqlôe3Eº‹Msg
(
pP¨£
, "toÿm™yÅîm†ö %†BY cœu£", 
zTy≥
);

1023 
pELi°
 = 
pSñe˘
->pEList;

1024 
	`as£π
–
pELi°
!=0 );

1025 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

1026 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
 ){

1027 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>
pELi°
->
nEx¥
 ){

1028 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, 
zTy≥
, 
i
+1, 
pELi°
->
nEx¥
);

1031 
	`ªsﬁveAlüs
(
pP¨£
, 
pELi°
, 
pIãm
->
u
.
x
.
iOrdîByCﬁ
-1,ÖIãm->
pEx¥
,

1032 
zTy≥
,0);

1036 
	}
}

1056 
	$ªsﬁveOrdîGroupBy
(

1057 
NameC⁄ãxt
 *
pNC
,

1058 
Sñe˘
 *
pSñe˘
,

1059 
Ex¥Li°
 *
pOrdîBy
,

1060 c⁄° *
zTy≥


1062 
i
, 
j
;

1063 
iCﬁ
;

1064 
Ex¥Li°_ôem
 *
pIãm
;

1065 
P¨£
 *
pP¨£
;

1066 
nResu…
;

1068 if–
pOrdîBy
==0 )  0;

1069 
nResu…
 = 
pSñe˘
->
pELi°
->
nEx¥
;

1070 
pP¨£
 = 
pNC
->pParse;

1071 
i
=0, 
pIãm
=
pOrdîBy
->
a
; i<pOrdîBy->
nEx¥
; i++,ÖItem++){

1072 
Ex¥
 *
pE
 = 
pIãm
->
pEx¥
;

1073 
Ex¥
 *
pE2
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pE
);

1074 if–
zTy≥
[0]!='G' ){

1075 
iCﬁ
 = 
	`ªsﬁveAsName
(
pP¨£
, 
pSñe˘
->
pELi°
, 
pE2
);

1076 if–
iCﬁ
>0 ){

1081 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

1085 if–
	`sqlôe3Ex¥IsI¡egî
(
pE2
, &
iCﬁ
) ){

1089 if–
iCﬁ
<1 || iCol>0xffff ){

1090 
	`ªsﬁveOutOfR™geEº‹
(
pP¨£
, 
zTy≥
, 
i
+1, 
nResu…
);

1093 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
iCﬁ
;

1098 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = 0;

1099 if–
	`sqlôe3ResﬁveEx¥Names
(
pNC
, 
pE
) ){

1102 
j
=0; j<
pSñe˘
->
pELi°
->
nEx¥
; j++){

1103 if–
	`sqlôe3Ex¥Com∑ª
(
pE
, 
pSñe˘
->
pELi°
->
a
[
j
].
pEx¥
, -1)==0 ){

1104 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 = 
j
+1;

1108  
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
pSñe˘
, 
pOrdîBy
, 
zTy≥
);

1109 
	}
}

1114 
	$ªsﬁveSñe˘Sãp
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

1115 
NameC⁄ãxt
 *
pOuãrNC
;

1116 
NameC⁄ãxt
 
sNC
;

1117 
isCompound
;

1118 
nCompound
;

1119 
P¨£
 *
pP¨£
;

1120 
i
;

1121 
Ex¥Li°
 *
pGroupBy
;

1122 
Sñe˘
 *
pLe·mo°
;

1123 
sqlôe3
 *
db
;

1126 
	`as£π
–
p
!=0 );

1127 if–
p
->
£lFœgs
 & 
SF_Resﬁved
 ){

1128  
WRC_Pru√
;

1130 
pOuãrNC
 = 
pWÆkî
->
u
.
pNC
;

1131 
pP¨£
 = 
pWÆkî
->pParse;

1132 
db
 = 
pP¨£
->db;

1142 if–(
p
->
£lFœgs
 & 
SF_Ex∑nded
)==0 ){

1143 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
p
, 
pOuãrNC
);

1144  (
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
Ë? 
WRC_Ab‹t
 : 
WRC_Pru√
;

1147 
isCompound
 = 
p
->
pPri‹
!=0;

1148 
nCompound
 = 0;

1149 
pLe·mo°
 = 
p
;

1150  
p
 ){

1151 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Ex∑nded
)!=0 );

1152 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Resﬁved
)==0 );

1153 
p
->
£lFœgs
 |
SF_Resﬁved
;

1158 
	`mem£t
(&
sNC
, 0, (sNC));

1159 
sNC
.
pP¨£
 =ÖParse;

1160 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pLimô
) ||

1161 
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pOff£t
) ){

1162  
WRC_Ab‹t
;

1171 if–
p
->
£lFœgs
 & 
SF_C⁄vîãd
 ){

1172 
Sñe˘
 *
pSub
 = 
p
->
pSrc
->
a
[0].
pSñe˘
;

1173 
	`as£π
–
p
->
pSrc
->
nSrc
==1 &&Ö->
pOrdîBy
 );

1174 
	`as£π
–
pSub
->
pPri‹
 &&ÖSub->
pOrdîBy
==0 );

1175 
pSub
->
pOrdîBy
 = 
p
->pOrderBy;

1176 
p
->
pOrdîBy
 = 0;

1181 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

1182 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

1183 if–
pIãm
->
pSñe˘
 ){

1184 
NameC⁄ãxt
 *
pNC
;

1185 
nRef
 = 0;

1186 c⁄° *
zSavedC⁄ãxt
 = 
pP¨£
->
zAuthC⁄ãxt
;

1193 
pNC
=
pOuãrNC
;ÖNC;ÖNCıNC->
pNext
Ë
nRef
 +=ÖNC->nRef;

1195 if–
pIãm
->
zName
 ) 
pP¨£
->
zAuthC⁄ãxt
 =ÖItem->zName;

1196 
	`sqlôe3ResﬁveSñe˘Names
(
pP¨£
, 
pIãm
->
pSñe˘
, 
pOuãrNC
);

1197 
pP¨£
->
zAuthC⁄ãxt
 = 
zSavedC⁄ãxt
;

1198 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 )  
WRC_Ab‹t
;

1200 
pNC
=
pOuãrNC
;ÖNC;ÖNCıNC->
pNext
Ë
nRef
 -=ÖNC->nRef;

1201 
	`as£π
–
pIãm
->
fg
.
isC‹ªœãd
==0 && 
nRef
<=0 );

1202 
pIãm
->
fg
.
isC‹ªœãd
 = (
nRef
!=0);

1209 
sNC
.
ncFœgs
 = 
NC_AŒowAgg
;

1210 
sNC
.
pSrcLi°
 = 
p
->
pSrc
;

1211 
sNC
.
pNext
 = 
pOuãrNC
;

1214 if–
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
p
->
pELi°
ËË 
WRC_Ab‹t
;

1219 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Aggªg©e
)==0 );

1220 
pGroupBy
 = 
p
->pGroupBy;

1221 if–
pGroupBy
 || (
sNC
.
ncFœgs
 & 
NC_HasAgg
)!=0 ){

1222 
	`as£π
–
NC_MöMaxAgg
==
SF_MöMaxAgg
 );

1223 
p
->
£lFœgs
 |
SF_Aggªg©e
 | (
sNC
.
ncFœgs
&
NC_MöMaxAgg
);

1225 
sNC
.
ncFœgs
 &~
NC_AŒowAgg
;

1230 if–
p
->
pHavög
 && !
pGroupBy
 ){

1231 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a GROUP BY clause isÑequired before HAVING");

1232  
WRC_Ab‹t
;

1243 
sNC
.
pELi°
 = 
p
->pEList;

1244 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pHavög
ËË 
WRC_Ab‹t
;

1245 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
p
->
pWhîe
ËË 
WRC_Ab‹t
;

1248 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

1249 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

1250 if–
pIãm
->
fg
.
isTabFunc


1251 && 
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
, 
pIãm
->
u1
.
pFuncArg
)

1253  
WRC_Ab‹t
;

1260 
sNC
.
pNext
 = 0;

1261 
sNC
.
ncFœgs
 |
NC_AŒowAgg
;

1268 if–
p
->
£lFœgs
 & 
SF_C⁄vîãd
 ){

1269 
Sñe˘
 *
pSub
 = 
p
->
pSrc
->
a
[0].
pSñe˘
;

1270 
p
->
pOrdîBy
 = 
pSub
->pOrderBy;

1271 
pSub
->
pOrdîBy
 = 0;

1284 if–
isCompound
<=
nCompound


1285 && 
	`ªsﬁveOrdîGroupBy
(&
sNC
, 
p
,Ö->
pOrdîBy
, "ORDER")

1287  
WRC_Ab‹t
;

1289 if–
db
->
mÆlocFaûed
 ){

1290  
WRC_Ab‹t
;

1296 if–
pGroupBy
 ){

1297 
Ex¥Li°_ôem
 *
pIãm
;

1299 if–
	`ªsﬁveOrdîGroupBy
(&
sNC
, 
p
, 
pGroupBy
, "GROUP"Ë|| 
db
->
mÆlocFaûed
 ){

1300  
WRC_Ab‹t
;

1302 
i
=0, 
pIãm
=
pGroupBy
->
a
; i<pGroupBy->
nEx¥
; i++,ÖItem++){

1303 if–
	`Ex¥HasPr›îty
(
pIãm
->
pEx¥
, 
EP_Agg
) ){

1304 
	`sqlôe3Eº‹Msg
(
pP¨£
, "aggregate functionsáreÇotállowed in "

1306  
WRC_Ab‹t
;

1313 if–
p
->
pNext
 &&Ö->
pELi°
->
nEx¥
!=p->pNext->pEList->nExpr ){

1314 
	`sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
pP¨£
, 
p
->
pNext
);

1315  
WRC_Ab‹t
;

1320 
p
 =Ö->
pPri‹
;

1321 
nCompound
++;

1327 if–
isCompound
 && 
	`ªsﬁveCompoundOrdîBy
(
pP¨£
, 
pLe·mo°
) ){

1328  
WRC_Ab‹t
;

1331  
WRC_Pru√
;

1332 
	}
}

1382 
	$sqlôe3ResﬁveEx¥Names
(

1383 
NameC⁄ãxt
 *
pNC
,

1384 
Ex¥
 *
pEx¥


1386 
u16
 
ßvedHasAgg
;

1387 
WÆkî
 
w
;

1389 if–
pEx¥
==0 )  0;

1390 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

1392 
P¨£
 *
pP¨£
 = 
pNC
->pParse;

1393 if–
	`sqlôe3Ex¥CheckHeight
(
pP¨£
, 
pEx¥
->
nHeight
+
pNC
->pParse->nHeight) ){

1396 
pP¨£
->
nHeight
 +
pEx¥
->nHeight;

1399 
ßvedHasAgg
 = 
pNC
->
ncFœgs
 & (
NC_HasAgg
|
NC_MöMaxAgg
);

1400 
pNC
->
ncFœgs
 &~(
NC_HasAgg
|
NC_MöMaxAgg
);

1401 
w
.
pP¨£
 = 
pNC
->pParse;

1402 
w
.
xEx¥CÆlback
 = 
ªsﬁveEx¥Sãp
;

1403 
w
.
xSñe˘CÆlback
 = 
ªsﬁveSñe˘Sãp
;

1404 
w
.
xSñe˘CÆlback2
 = 0;

1405 
w
.
wÆkîDïth
 = 0;

1406 
w
.
eCode
 = 0;

1407 
w
.
u
.
pNC
 =ÖNC;

1408 
	`sqlôe3WÆkEx¥
(&
w
, 
pEx¥
);

1409 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

1410 
pNC
->
pP¨£
->
nHeight
 -
pEx¥
->nHeight;

1412 if–
pNC
->
nEº
>0 || 
w
.
pP¨£
->nErr>0 ){

1413 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Eº‹
);

1415 if–
pNC
->
ncFœgs
 & 
NC_HasAgg
 ){

1416 
	`Ex¥SëPr›îty
(
pEx¥
, 
EP_Agg
);

1418 
pNC
->
ncFœgs
 |
ßvedHasAgg
;

1419  
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Eº‹
);

1420 
	}
}

1427 
	$sqlôe3ResﬁveEx¥Li°Names
(

1428 
NameC⁄ãxt
 *
pNC
,

1429 
Ex¥Li°
 *
pLi°


1431 
i
;

1432 if–
pLi°
 ){

1433 
i
=0; i<
pLi°
->
nEx¥
; i++){

1434 if–
	`sqlôe3ResﬁveEx¥Names
(
pNC
, 
pLi°
->
a
[
i
].
pEx¥
ËË 
WRC_Ab‹t
;

1437  
WRC_C⁄töue
;

1438 
	}
}

1452 
	$sqlôe3ResﬁveSñe˘Names
(

1453 
P¨£
 *
pP¨£
,

1454 
Sñe˘
 *
p
,

1455 
NameC⁄ãxt
 *
pOuãrNC


1457 
WÆkî
 
w
;

1459 
	`as£π
–
p
!=0 );

1460 
	`mem£t
(&
w
, 0, (w));

1461 
w
.
xEx¥CÆlback
 = 
ªsﬁveEx¥Sãp
;

1462 
w
.
xSñe˘CÆlback
 = 
ªsﬁveSñe˘Sãp
;

1463 
w
.
pP¨£
 =ÖParse;

1464 
w
.
u
.
pNC
 = 
pOuãrNC
;

1465 
	`sqlôe3WÆkSñe˘
(&
w
, 
p
);

1466 
	}
}

1479 
	$sqlôe3ResﬁveSñfRe„ªn˚
(

1480 
P¨£
 *
pP¨£
,

1481 
TabÀ
 *
pTab
,

1482 
ty≥
,

1483 
Ex¥
 *
pEx¥
,

1484 
Ex¥Li°
 *
pLi°


1486 
SrcLi°
 
sSrc
;

1487 
NameC⁄ãxt
 
sNC
;

1489 
	`as£π
–
ty≥
==
NC_IsCheck
 ||Åy≥==
NC_P¨tIdx
 ||Åy≥==
NC_IdxEx¥
 );

1490 
	`mem£t
(&
sNC
, 0, (sNC));

1491 
	`mem£t
(&
sSrc
, 0, (sSrc));

1492 
sSrc
.
nSrc
 = 1;

1493 
sSrc
.
a
[0].
zName
 = 
pTab
->zName;

1494 
sSrc
.
a
[0].
pTab
 =ÖTab;

1495 
sSrc
.
a
[0].
iCurs‹
 = -1;

1496 
sNC
.
pP¨£
 =ÖParse;

1497 
sNC
.
pSrcLi°
 = &
sSrc
;

1498 
sNC
.
ncFœgs
 = 
ty≥
;

1499 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pEx¥
) ) ;

1500 if–
pLi°
 ) 
	`sqlôe3ResﬁveEx¥Li°Names
(&
sNC
,ÖList);

1501 
	}
}

	@rowset.c

64 
	~"sqlôeI¡.h
"

70 
	#ROWSET_ALLOCATION_SIZE
 1024

	)

75 
	#ROWSET_ENTRY_PER_CHUNK
 \

76 ((
ROWSET_ALLOCATION_SIZE
-8)/(
RowSëE¡ry
))

	)

86 
	sRowSëE¡ry
 {

87 
i64
 
	mv
;

88 
RowSëE¡ry
 *
	mpRight
;

89 
RowSëE¡ry
 *
	mpLe·
;

98 
	sRowSëChunk
 {

99 
RowSëChunk
 *
	mpNextChunk
;

100 
RowSëE¡ry
 
	maE¡ry
[
ROWSET_ENTRY_PER_CHUNK
];

108 
	sRowSë
 {

109 
RowSëChunk
 *
	mpChunk
;

110 
sqlôe3
 *
	mdb
;

111 
RowSëE¡ry
 *
	mpE¡ry
;

112 
RowSëE¡ry
 *
	mpLa°
;

113 
RowSëE¡ry
 *
	mpFªsh
;

114 
RowSëE¡ry
 *
	mpF‹e°
;

115 
u16
 
	mnFªsh
;

116 
u16
 
	mrsFœgs
;

117 
	miB©ch
;

123 
	#ROWSET_SORTED
 0x01

	)

124 
	#ROWSET_NEXT
 0x02

	)

138 
RowSë
 *
	$sqlôe3RowSëInô
(
sqlôe3
 *
db
, *
pS∑˚
, 
N
){

139 
RowSë
 *
p
;

140 
	`as£π
–
N
 >
	`ROUND8
((*
p
)) );

141 
p
 = 
pS∑˚
;

142 
p
->
pChunk
 = 0;

143 
p
->
db
 = db;

144 
p
->
pE¡ry
 = 0;

145 
p
->
pLa°
 = 0;

146 
p
->
pF‹e°
 = 0;

147 
p
->
pFªsh
 = (
RowSëE¡ry
*)(
	`ROUND8
((*p)) + (*)p);

148 
p
->
nFªsh
 = (
u16
)((
N
 - 
	`ROUND8
((*p)))/(
RowSëE¡ry
));

149 
p
->
rsFœgs
 = 
ROWSET_SORTED
;

150 
p
->
iB©ch
 = 0;

151  
p
;

152 
	}
}

159 
	$sqlôe3RowSëCÀ¨
(
RowSë
 *
p
){

160 
RowSëChunk
 *
pChunk
, *
pNextChunk
;

161 
pChunk
=
p
->pChunk;ÖChunk;ÖChunk = 
pNextChunk
){

162 
pNextChunk
 = 
pChunk
->pNextChunk;

163 
	`sqlôe3DbFªe
(
p
->
db
, 
pChunk
);

165 
p
->
pChunk
 = 0;

166 
p
->
nFªsh
 = 0;

167 
p
->
pE¡ry
 = 0;

168 
p
->
pLa°
 = 0;

169 
p
->
pF‹e°
 = 0;

170 
p
->
rsFœgs
 = 
ROWSET_SORTED
;

171 
	}
}

181 
RowSëE¡ry
 *
	$rowSëE¡ryAŒoc
(
RowSë
 *
p
){

182 
	`as£π
–
p
!=0 );

183 if–
p
->
nFªsh
==0 ){

186 
RowSëChunk
 *
pNew
;

187 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
p
->
db
, (*pNew));

188 if–
pNew
==0 ){

191 
pNew
->
pNextChunk
 = 
p
->
pChunk
;

192 
p
->
pChunk
 = 
pNew
;

193 
p
->
pFªsh
 = 
pNew
->
aE¡ry
;

194 
p
->
nFªsh
 = 
ROWSET_ENTRY_PER_CHUNK
;

196 
p
->
nFªsh
--;

197  
p
->
pFªsh
++;

198 
	}
}

206 
	$sqlôe3RowSëIn£π
(
RowSë
 *
p
, 
i64
 
rowid
){

207 
RowSëE¡ry
 *
pE¡ry
;

208 
RowSëE¡ry
 *
pLa°
;

211 
	`as£π
–
p
!=0 && (p->
rsFœgs
 & 
ROWSET_NEXT
)==0 );

213 
pE¡ry
 = 
	`rowSëE¡ryAŒoc
(
p
);

214 if–
pE¡ry
==0 ) ;

215 
pE¡ry
->
v
 = 
rowid
;

216 
pE¡ry
->
pRight
 = 0;

217 
pLa°
 = 
p
->pLast;

218 if–
pLa°
 ){

219 if–
rowid
<=
pLa°
->
v
 ){

222 
p
->
rsFœgs
 &~
ROWSET_SORTED
;

224 
pLa°
->
pRight
 = 
pE¡ry
;

226 
p
->
pE¡ry
 =ÖEntry;

228 
p
->
pLa°
 = 
pE¡ry
;

229 
	}
}

237 
RowSëE¡ry
 *
	$rowSëE¡ryMîge
(

238 
RowSëE¡ry
 *
pA
,

239 
RowSëE¡ry
 *
pB


241 
RowSëE¡ry
 
hód
;

242 
RowSëE¡ry
 *
pTaû
;

244 
pTaû
 = &
hód
;

245 
	`as£π
–
pA
!=0 && 
pB
!=0 );

247 
	`as£π
–
pA
->
pRight
==0 ||ÖA->
v
<=pA->pRight->v );

248 
	`as£π
–
pB
->
pRight
==0 ||ÖB->
v
<=pB->pRight->v );

249 if–
pA
->
v
<=
pB
->v ){

250 if–
pA
->
v
<
pB
->v ) 
pTaû
 =ÖTaû->
pRight
 =ÖA;

251 
pA
 =ÖA->
pRight
;

252 if–
pA
==0 ){

253 
pTaû
->
pRight
 = 
pB
;

257 
pTaû
 =ÖTaû->
pRight
 = 
pB
;

258 
pB
 =ÖB->
pRight
;

259 if–
pB
==0 ){

260 
pTaû
->
pRight
 = 
pA
;

265  
hód
.
pRight
;

266 
	}
}

272 
RowSëE¡ry
 *
	$rowSëE¡ryS‹t
(
RowSëE¡ry
 *
pIn
){

273 
i
;

274 
RowSëE¡ry
 *
pNext
, *
aBuckë
[40];

276 
	`mem£t
(
aBuckë
, 0, (aBucket));

277  
pIn
 ){

278 
pNext
 = 
pIn
->
pRight
;

279 
pIn
->
pRight
 = 0;

280 
i
=0; 
aBuckë
[i]; i++){

281 
pIn
 = 
	`rowSëE¡ryMîge
(
aBuckë
[
i
],ÖIn);

282 
aBuckë
[
i
] = 0;

284 
aBuckë
[
i
] = 
pIn
;

285 
pIn
 = 
pNext
;

287 
pIn
 = 
aBuckë
[0];

288 
i
=1; i<(
aBuckë
)/(aBucket[0]); i++){

289 if–
aBuckë
[
i
]==0 ) ;

290 
pIn
 =ÖI¿? 
	`rowSëE¡ryMîge
’In, 
aBuckë
[
i
]) :áBucket[i];

292  
pIn
;

293 
	}
}

301 
	$rowSëTªeToLi°
(

302 
RowSëE¡ry
 *
pIn
,

303 
RowSëE¡ry
 **
µFú°
,

304 
RowSëE¡ry
 **
µLa°


306 
	`as£π
–
pIn
!=0 );

307 if–
pIn
->
pLe·
 ){

308 
RowSëE¡ry
 *
p
;

309 
	`rowSëTªeToLi°
(
pIn
->
pLe·
, 
µFú°
, &
p
);

310 
p
->
pRight
 = 
pIn
;

312 *
µFú°
 = 
pIn
;

314 if–
pIn
->
pRight
 ){

315 
	`rowSëTªeToLi°
(
pIn
->
pRight
, &pIn->pRight, 
µLa°
);

317 *
µLa°
 = 
pIn
;

319 
	`as£π
–(*
µLa°
)->
pRight
==0 );

320 
	}
}

336 
RowSëE¡ry
 *
	$rowSëNDìpTªe
(

337 
RowSëE¡ry
 **
µLi°
,

338 
iDïth


340 
RowSëE¡ry
 *
p
;

341 
RowSëE¡ry
 *
pLe·
;

342 if–*
µLi°
==0 ){

346 if–
iDïth
>1 ){

350 
pLe·
 = 
	`rowSëNDìpTªe
(
µLi°
, 
iDïth
-1);

351 
p
 = *
µLi°
;

352 if–
p
==0 ){

355  
pLe·
;

357 
p
->
pLe·
 =ÖLeft;

358 *
µLi°
 = 
p
->
pRight
;

359 
p
->
pRight
 = 
	`rowSëNDìpTªe
(
µLi°
, 
iDïth
-1);

361 
p
 = *
µLi°
;

362 *
µLi°
 = 
p
->
pRight
;

363 
p
->
pLe·
 =Ö->
pRight
 = 0;

365  
p
;

366 
	}
}

372 
RowSëE¡ry
 *
	$rowSëLi°ToTªe
(
RowSëE¡ry
 *
pLi°
){

373 
iDïth
;

374 
RowSëE¡ry
 *
p
;

375 
RowSëE¡ry
 *
pLe·
;

377 
	`as£π
–
pLi°
!=0 );

378 
p
 = 
pLi°
;

379 
pLi°
 = 
p
->
pRight
;

380 
p
->
pLe·
 =Ö->
pRight
 = 0;

381 
iDïth
=1; 
pLi°
; iDepth++){

382 
pLe·
 = 
p
;

383 
p
 = 
pLi°
;

384 
pLi°
 = 
p
->
pRight
;

385 
p
->
pLe·
 =ÖLeft;

386 
p
->
pRight
 = 
	`rowSëNDìpTªe
(&
pLi°
, 
iDïth
);

388  
p
;

389 
	}
}

404 
	$sqlôe3RowSëNext
(
RowSë
 *
p
, 
i64
 *
pRowid
){

405 
	`as£π
–
p
!=0 );

406 
	`as£π
–
p
->
pF‹e°
==0 );

409 if–(
p
->
rsFœgs
 & 
ROWSET_NEXT
)==0 ){

410 if–(
p
->
rsFœgs
 & 
ROWSET_SORTED
)==0 ){

411 
p
->
pE¡ry
 = 
	`rowSëE¡ryS‹t
(p->pEntry);

413 
p
->
rsFœgs
 |
ROWSET_SORTED
|
ROWSET_NEXT
;

417 if–
p
->
pE¡ry
 ){

418 *
pRowid
 = 
p
->
pE¡ry
->
v
;

419 
p
->
pE¡ry
 =Ö->pE¡ry->
pRight
;

420 if–
p
->
pE¡ry
==0 ){

422 
	`sqlôe3RowSëCÀ¨
(
p
);

428 
	}
}

438 
	$sqlôe3RowSëTe°
(
RowSë
 *
pRowSë
, 
iB©ch
, 
sqlôe3_öt64
 
iRowid
){

439 
RowSëE¡ry
 *
p
, *
pTªe
;

442 
	`as£π
–
pRowSë
!=0 && (pRowSë->
rsFœgs
 & 
ROWSET_NEXT
)==0 );

447 if–
iB©ch
!=
pRowSë
->iBatch ){

448 
p
 = 
pRowSë
->
pE¡ry
;

449 if–
p
 ){

450 
RowSëE¡ry
 **
µPªvTªe
 = &
pRowSë
->
pF‹e°
;

451 if–(
pRowSë
->
rsFœgs
 & 
ROWSET_SORTED
)==0 ){

453 
p
 = 
	`rowSëE¡ryS‹t
(p);

455 
pTªe
 = 
pRowSë
->
pF‹e°
;ÖTªe;ÖTªeıTªe->
pRight
){

456 
µPªvTªe
 = &
pTªe
->
pRight
;

457 if–
pTªe
->
pLe·
==0 ){

458 
pTªe
->
pLe·
 = 
	`rowSëLi°ToTªe
(
p
);

461 
RowSëE¡ry
 *
pAux
, *
pTaû
;

462 
	`rowSëTªeToLi°
(
pTªe
->
pLe·
, &
pAux
, &
pTaû
);

463 
pTªe
->
pLe·
 = 0;

464 
p
 = 
	`rowSëE¡ryMîge
(
pAux
,Ö);

467 if–
pTªe
==0 ){

468 *
µPªvTªe
 = 
pTªe
 = 
	`rowSëE¡ryAŒoc
(
pRowSë
);

469 if–
pTªe
 ){

470 
pTªe
->
v
 = 0;

471 
pTªe
->
pRight
 = 0;

472 
pTªe
->
pLe·
 = 
	`rowSëLi°ToTªe
(
p
);

475 
pRowSë
->
pE¡ry
 = 0;

476 
pRowSë
->
pLa°
 = 0;

477 
pRowSë
->
rsFœgs
 |
ROWSET_SORTED
;

479 
pRowSë
->
iB©ch
 = iBatch;

485 
pTªe
 = 
pRowSë
->
pF‹e°
;ÖTªe;ÖTªeıTªe->
pRight
){

486 
p
 = 
pTªe
->
pLe·
;

487  
p
 ){

488 if–
p
->
v
<
iRowid
 ){

489 
p
 =Ö->
pRight
;

490 }if–
p
->
v
>
iRowid
 ){

491 
p
 =Ö->
pLe·
;

498 
	}
}

	@select.c

15 
	~"sqlôeI¡.h
"

20 #i‡
SELECTTRACE_ENABLED


21  
	gsqlôe3Sñe˘Tø˚
 = 0;

22 
	#SELECTTRACE
(
K
,
P
,
S
,
X
) \

23 if(
sqlôe3Sñe˘Tø˚
&(
K
)) \

24 
	`sqlôe3DebugPrötf
("%*s%s.%p: ",(
P
)->
nSñe˘Indít
*2-2,"",\

25 (
S
)->
zSñName
,(S)),\

26 
sqlôe3DebugPrötf
 
X


	)

28 
	#SELECTTRACE
(
K
,
P
,
S
,
X
)

	)

37 
Di°ö˘Ctx
 
	tDi°ö˘Ctx
;

38 
	sDi°ö˘Ctx
 {

39 
u8
 
	misTn˘
;

40 
u8
 
	meTn˘Ty≥
;

41 
	mèbTn˘
;

42 
	maddrTn˘
;

49 
S‹tCtx
 
	tS‹tCtx
;

50 
	sS‹tCtx
 {

51 
Ex¥Li°
 *
	mpOrdîBy
;

52 
	mnOBS©
;

53 
	miECurs‹
;

54 
	mªgRëu∫
;

55 
	mœbñBkOut
;

56 
	maddrS‹tIndex
;

57 
	mœbñD⁄e
;

58 
u8
 
	ms‹tFœgs
;

59 
u8
 
	mbOrdîedI¬îLo›
;

61 
	#SORTFLAG_U£S‹ãr
 0x01

	)

67 
	$˛órSñe˘
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
, 
bFªe
){

68  
p
 ){

69 
Sñe˘
 *
pPri‹
 = 
p
->pPrior;

70 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pELi°
);

71 
	`sqlôe3SrcLi°Dñëe
(
db
, 
p
->
pSrc
);

72 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pWhîe
);

73 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pGroupBy
);

74 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pHavög
);

75 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

76 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

77 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pOff£t
);

78 if–
p
->
pWôh
 ) 
	`sqlôe3WôhDñëe
(
db
,Ö->pWith);

79 if–
bFªe
 ) 
	`sqlôe3DbFªe
(
db
, 
p
);

80 
p
 = 
pPri‹
;

81 
bFªe
 = 1;

83 
	}
}

88 
	$sqlôe3Sñe˘De°Inô
(
Sñe˘De°
 *
pDe°
, 
eDe°
, 
iP¨m
){

89 
pDe°
->
eDe°
 = (
u8
)eDest;

90 
pDe°
->
iSDP¨m
 = 
iP¨m
;

91 
pDe°
->
affSd°
 = 0;

92 
pDe°
->
iSd°
 = 0;

93 
pDe°
->
nSd°
 = 0;

94 
	}
}

101 
Sñe˘
 *
	$sqlôe3Sñe˘New
(

102 
P¨£
 *
pP¨£
,

103 
Ex¥Li°
 *
pELi°
,

104 
SrcLi°
 *
pSrc
,

105 
Ex¥
 *
pWhîe
,

106 
Ex¥Li°
 *
pGroupBy
,

107 
Ex¥
 *
pHavög
,

108 
Ex¥Li°
 *
pOrdîBy
,

109 
u32
 
£lFœgs
,

110 
Ex¥
 *
pLimô
,

111 
Ex¥
 *
pOff£t


113 
Sñe˘
 *
pNew
;

114 
Sñe˘
 
°™dö
;

115 
sqlôe3
 *
db
 = 
pP¨£
->db;

116 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pNew) );

117 if–
pNew
==0 ){

118 
	`as£π
–
db
->
mÆlocFaûed
 );

119 
pNew
 = &
°™dö
;

121 if–
pELi°
==0 ){

122 
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
	`sqlôe3Ex¥
(
db
,
TK_ASTERISK
,0));

124 
pNew
->
pELi°
 =ÖEList;

125 
pNew
->
›
 = 
TK_SELECT
;

126 
pNew
->
£lFœgs
 = selFlags;

127 
pNew
->
iLimô
 = 0;

128 
pNew
->
iOff£t
 = 0;

129 #i‡
SELECTTRACE_ENABLED


130 
pNew
->
zSñName
[0] = 0;

132 
pNew
->
addrO≥nEphm
[0] = -1;

133 
pNew
->
addrO≥nEphm
[1] = -1;

134 
pNew
->
nSñe˘Row
 = 0;

135 if–
pSrc
==0 )ÖSr¯
	`sqlôe3DbMÆlocZîo
(
db
, (*pSrc));

136 
pNew
->
pSrc
 =ÖSrc;

137 
pNew
->
pWhîe
 =ÖWhere;

138 
pNew
->
pGroupBy
 =ÖGroupBy;

139 
pNew
->
pHavög
 =ÖHaving;

140 
pNew
->
pOrdîBy
 =ÖOrderBy;

141 
pNew
->
pPri‹
 = 0;

142 
pNew
->
pNext
 = 0;

143 
pNew
->
pLimô
 =ÖLimit;

144 
pNew
->
pOff£t
 =ÖOffset;

145 
pNew
->
pWôh
 = 0;

146 
	`as£π
–
pOff£t
==0 || 
pLimô
!=0 || 
pP¨£
->
nEº
>0 || 
db
->
mÆlocFaûed
!=0 );

147 if–
db
->
mÆlocFaûed
 ) {

148 
	`˛órSñe˘
(
db
, 
pNew
,ÖNew!=&
°™dö
);

149 
pNew
 = 0;

151 
	`as£π
–
pNew
->
pSrc
!=0 || 
pP¨£
->
nEº
>0 );

153 
	`as£π
–
pNew
!=&
°™dö
 );

154  
pNew
;

155 
	}
}

157 #i‡
SELECTTRACE_ENABLED


161 
	$sqlôe3Sñe˘SëName
(
Sñe˘
 *
p
, c⁄° *
zName
){

162 if–
p
 && 
zName
 ){

163 
	`sqlôe3_¢¥ötf
((
p
->
zSñName
),Ö->zSñName, "%s", 
zName
);

165 
	}
}

172 
	$sqlôe3Sñe˘Dñëe
(
sqlôe3
 *
db
, 
Sñe˘
 *
p
){

173 if–
p
 ) 
	`˛órSñe˘
(
db
,Ö, 1);

174 
	}
}

179 
Sñe˘
 *
	$födRightmo°
(
Sñe˘
 *
p
){

180  
p
->
pNext
 )Ö =Ö->pNext;

181  
p
;

182 
	}
}

201 
	$sqlôe3JoöTy≥
(
P¨£
 *
pP¨£
, 
Tokí
 *
pA
, Tokí *
pB
, Tokí *
pC
){

202 
joöty≥
 = 0;

203 
Tokí
 *
≠AŒ
[3];

204 
Tokí
 *
p
;

206 c⁄° 
zKeyText
[] = "naturaleftouterightfullinnercross";

208 
u8
 
i
;

209 
u8
 
nCh¨
;

210 
u8
 
code
;

211 } 
aKeyw‹d
[] = {

212  { 0, 7, 
JT_NATURAL
 },

213  { 6, 4, 
JT_LEFT
|
JT_OUTER
 },

214  { 10, 5, 
JT_OUTER
 },

215  { 14, 5, 
JT_RIGHT
|
JT_OUTER
 },

216  { 19, 4, 
JT_LEFT
|
JT_RIGHT
|
JT_OUTER
 },

217  { 23, 5, 
JT_INNER
 },

218  { 28, 5, 
JT_INNER
|
JT_CROSS
 },

220 
i
, 
j
;

221 
≠AŒ
[0] = 
pA
;

222 
≠AŒ
[1] = 
pB
;

223 
≠AŒ
[2] = 
pC
;

224 
i
=0; i<3 && 
≠AŒ
[i]; i++){

225 
p
 = 
≠AŒ
[
i
];

226 
j
=0; j<
	`AºaySize
(
aKeyw‹d
); j++){

227 if–
p
->
n
==
aKeyw‹d
[
j
].
nCh¨


228 && 
	`sqlôe3SåNICmp
((*)
p
->
z
, &
zKeyText
[
aKeyw‹d
[
j
].
i
],Ö->
n
)==0 ){

229 
joöty≥
 |
aKeyw‹d
[
j
].
code
;

233 
	`ã°ˇ£
–
j
==0 || j==1 || j==2 || j==3 || j==4 || j==5 || j==6 );

234 if–
j
>=
	`AºaySize
(
aKeyw‹d
) ){

235 
joöty≥
 |
JT_ERROR
;

240 (
joöty≥
 & (
JT_INNER
|
JT_OUTER
))==(JT_INNER|JT_OUTER) ||

241 (
joöty≥
 & 
JT_ERROR
)!=0

243 c⁄° *
zSp
 = " ";

244 
	`as£π
–
pB
!=0 );

245 if–
pC
==0 ){ 
zSp
++; }

246 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unknown or unsupported joinÅype: "

247 "%T %T%s%T", 
pA
, 
pB
, 
zSp
, 
pC
);

248 
joöty≥
 = 
JT_INNER
;

249 }if–(
joöty≥
 & 
JT_OUTER
)!=0

250 && (
joöty≥
 & (
JT_LEFT
|
JT_RIGHT
))!=JT_LEFT ){

251 
	`sqlôe3Eº‹Msg
(
pP¨£
,

253 
joöty≥
 = 
JT_INNER
;

255  
joöty≥
;

256 
	}
}

262 
	$cﬁumnIndex
(
TabÀ
 *
pTab
, c⁄° *
zCﬁ
){

263 
i
;

264 
i
=0; i<
pTab
->
nCﬁ
; i++){

265 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
i
].
zName
, 
zCﬁ
)==0 )  i;

268 
	}
}

279 
	$èbÀAndCﬁumnIndex
(

280 
SrcLi°
 *
pSrc
,

281 
N
,

282 c⁄° *
zCﬁ
,

283 *
piTab
,

284 *
piCﬁ


286 
i
;

287 
iCﬁ
;

289 
	`as£π
–(
piTab
==0)==(
piCﬁ
==0) );

290 
i
=0; i<
N
; i++){

291 
iCﬁ
 = 
	`cﬁumnIndex
(
pSrc
->
a
[
i
].
pTab
, 
zCﬁ
);

292 if–
iCﬁ
>=0 ){

293 if–
piTab
 ){

294 *
piTab
 = 
i
;

295 *
piCﬁ
 = 
iCﬁ
;

301 
	}
}

314 
	$addWhîeTîm
(

315 
P¨£
 *
pP¨£
,

316 
SrcLi°
 *
pSrc
,

317 
iLe·
,

318 
iCﬁLe·
,

319 
iRight
,

320 
iCﬁRight
,

321 
isOuãrJoö
,

322 
Ex¥
 **
µWhîe


324 
sqlôe3
 *
db
 = 
pP¨£
->db;

325 
Ex¥
 *
pE1
;

326 
Ex¥
 *
pE2
;

327 
Ex¥
 *
pEq
;

329 
	`as£π
–
iLe·
<
iRight
 );

330 
	`as£π
–
pSrc
->
nSrc
>
iRight
 );

331 
	`as£π
–
pSrc
->
a
[
iLe·
].
pTab
 );

332 
	`as£π
–
pSrc
->
a
[
iRight
].
pTab
 );

334 
pE1
 = 
	`sqlôe3Cª©eCﬁumnEx¥
(
db
, 
pSrc
, 
iLe·
, 
iCﬁLe·
);

335 
pE2
 = 
	`sqlôe3Cª©eCﬁumnEx¥
(
db
, 
pSrc
, 
iRight
, 
iCﬁRight
);

337 
pEq
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pE1
, 
pE2
, 0);

338 if–
pEq
 && 
isOuãrJoö
 ){

339 
	`Ex¥SëPr›îty
(
pEq
, 
EP_FromJoö
);

340 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEq
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

341 
	`Ex¥SëVVAPr›îty
(
pEq
, 
EP_NoRedu˚
);

342 
pEq
->
iRightJoöTabÀ
 = (
i16
)
pE2
->
iTabÀ
;

344 *
µWhîe
 = 
	`sqlôe3Ex¥And
(
db
, *µWhîe, 
pEq
);

345 
	}
}

373 
	$£tJoöEx¥
(
Ex¥
 *
p
, 
iTabÀ
){

374  
p
 ){

375 
	`Ex¥SëPr›îty
(
p
, 
EP_FromJoö
);

376 
	`as£π
–!
	`Ex¥HasPr›îty
(
p
, 
EP_TokíO∆y
|
EP_Redu˚d
) );

377 
	`Ex¥SëVVAPr›îty
(
p
, 
EP_NoRedu˚
);

378 
p
->
iRightJoöTabÀ
 = (
i16
)
iTabÀ
;

379 if–
p
->
›
==
TK_FUNCTION
 &&Ö->
x
.
pLi°
 ){

380 
i
;

381 
i
=0; i<
p
->
x
.
pLi°
->
nEx¥
; i++){

382 
	`£tJoöEx¥
(
p
->
x
.
pLi°
->
a
[
i
].
pEx¥
, 
iTabÀ
);

385 
	`£tJoöEx¥
(
p
->
pLe·
, 
iTabÀ
);

386 
p
 =Ö->
pRight
;

388 
	}
}

404 
	$sqlôePro˚ssJoö
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
){

405 
SrcLi°
 *
pSrc
;

406 
i
, 
j
;

407 
SrcLi°_ôem
 *
pLe·
;

408 
SrcLi°_ôem
 *
pRight
;

410 
pSrc
 = 
p
->pSrc;

411 
pLe·
 = &
pSrc
->
a
[0];

412 
pRight
 = &
pLe·
[1];

413 
i
=0; i<
pSrc
->
nSrc
-1; i++, 
pRight
++, 
pLe·
++){

414 
TabÀ
 *
pLe·Tab
 = 
pLe·
->
pTab
;

415 
TabÀ
 *
pRightTab
 = 
pRight
->
pTab
;

416 
isOuãr
;

418 if–
	`NEVER
(
pLe·Tab
==0 || 
pRightTab
==0) ) ;

419 
isOuãr
 = (
pRight
->
fg
.
joöty≥
 & 
JT_OUTER
)!=0;

424 if–
pRight
->
fg
.
joöty≥
 & 
JT_NATURAL
 ){

425 if–
pRight
->
pOn
 ||ÖRight->
pUsög
 ){

426 
	`sqlôe3Eº‹Msg
(
pP¨£
, "a NATURAL join mayÇot have "

430 
j
=0; j<
pRightTab
->
nCﬁ
; j++){

431 *
zName
;

432 
iLe·
;

433 
iLe·Cﬁ
;

435 
zName
 = 
pRightTab
->
aCﬁ
[
j
].zName;

436 if–
	`èbÀAndCﬁumnIndex
(
pSrc
, 
i
+1, 
zName
, &
iLe·
, &
iLe·Cﬁ
) ){

437 
	`addWhîeTîm
(
pP¨£
, 
pSrc
, 
iLe·
, 
iLe·Cﬁ
, 
i
+1, 
j
,

438 
isOuãr
, &
p
->
pWhîe
);

445 if–
pRight
->
pOn
 &&ÖRight->
pUsög
 ){

446 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot have both ONánd USING "

454 if–
pRight
->
pOn
 ){

455 if–
isOuãr
 ) 
	`£tJoöEx¥
(
pRight
->
pOn
,ÖRight->
iCurs‹
);

456 
p
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
,Ö->pWhîe, 
pRight
->
pOn
);

457 
pRight
->
pOn
 = 0;

467 if–
pRight
->
pUsög
 ){

468 
IdLi°
 *
pLi°
 = 
pRight
->
pUsög
;

469 
j
=0; j<
pLi°
->
nId
; j++){

470 *
zName
;

471 
iLe·
;

472 
iLe·Cﬁ
;

473 
iRightCﬁ
;

475 
zName
 = 
pLi°
->
a
[
j
].zName;

476 
iRightCﬁ
 = 
	`cﬁumnIndex
(
pRightTab
, 
zName
);

477 if–
iRightCﬁ
<0

478 || !
	`èbÀAndCﬁumnIndex
(
pSrc
, 
i
+1, 
zName
, &
iLe·
, &
iLe·Cﬁ
)

480 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot join using column %s - column "

481 "nŸÖª£¡ i¿bŸhÅabÀs", 
zName
);

484 
	`addWhîeTîm
(
pP¨£
, 
pSrc
, 
iLe·
, 
iLe·Cﬁ
, 
i
+1, 
iRightCﬁ
,

485 
isOuãr
, &
p
->
pWhîe
);

490 
	}
}

493 
KeyInfo
 *
keyInfoFromEx¥Li°
(

494 
P¨£
 *
pP¨£
,

495 
Ex¥Li°
 *
pLi°
,

496 
iSèπ
,

497 
nExåa


504 
	$pushO¡oS‹ãr
(

505 
P¨£
 *
pP¨£
,

506 
S‹tCtx
 *
pS‹t
,

507 
Sñe˘
 *
pSñe˘
,

508 
ªgD©a
,

509 
ªgOrigD©a
,

510 
nD©a
,

511 
nPªfixReg


513 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

514 
bSeq
 = ((
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
)==0);

515 
nEx¥
 = 
pS‹t
->
pOrdîBy
->nExpr;

516 
nBa£
 = 
nEx¥
 + 
bSeq
 + 
nD©a
;

517 
ªgBa£
;

518 
ªgRec‹d
 = ++
pP¨£
->
nMem
;

519 
nOBS©
 = 
pS‹t
->nOBSat;

520 
›
;

521 
iLimô
;

523 
	`as£π
–
bSeq
==0 || bSeq==1 );

524 
	`as£π
–
nD©a
==1 || 
ªgD©a
==
ªgOrigD©a
 );

525 if–
nPªfixReg
 ){

526 
	`as£π
–
nPªfixReg
==
nEx¥
+
bSeq
 );

527 
ªgBa£
 = 
ªgD©a
 - 
nEx¥
 - 
bSeq
;

529 
ªgBa£
 = 
pP¨£
->
nMem
 + 1;

530 
pP¨£
->
nMem
 +
nBa£
;

532 
	`as£π
–
pSñe˘
->
iOff£t
==0 ||ÖSñe˘->
iLimô
!=0 );

533 
iLimô
 = 
pSñe˘
->
iOff£t
 ?ÖSelect->iOffset+1 :ÖSelect->iLimit;

534 
pS‹t
->
œbñD⁄e
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

535 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pS‹t
->
pOrdîBy
, 
ªgBa£
, 
ªgOrigD©a
,

536 
SQLITE_ECEL_DUP
|
SQLITE_ECEL_REF
);

537 if–
bSeq
 ){

538 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Sequí˚
, 
pS‹t
->
iECurs‹
, 
ªgBa£
+
nEx¥
);

540 if–
nPªfixReg
==0 ){

541 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
ªgD©a
, 
ªgBa£
+
nEx¥
+
bSeq
, 
nD©a
);

543 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
+
nOBS©
, 
nBa£
-nOBS©, 
ªgRec‹d
);

544 if–
nOBS©
>0 ){

545 
ªgPªvKey
;

546 
addrFú°
;

547 
addrJmp
;

548 
VdbeOp
 *
pOp
;

549 
nKey
;

550 
KeyInfo
 *
pKI
;

552 
ªgPªvKey
 = 
pP¨£
->
nMem
+1;

553 
pP¨£
->
nMem
 +
pS‹t
->
nOBS©
;

554 
nKey
 = 
nEx¥
 - 
pS‹t
->
nOBS©
 + 
bSeq
;

555 if–
bSeq
 ){

556 
addrFú°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgBa£
+
nEx¥
);

558 
addrFú°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Sequí˚Te°
, 
pS‹t
->
iECurs‹
);

560 
	`VdbeCovîage
(
v
);

561 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Com∑ª
, 
ªgPªvKey
, 
ªgBa£
, 
pS‹t
->
nOBS©
);

562 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pS‹t
->
addrS‹tIndex
);

563 if–
pP¨£
->
db
->
mÆlocFaûed
 ) ;

564 
pOp
->
p2
 = 
nKey
 + 
nD©a
;

565 
pKI
 = 
pOp
->
p4
.
pKeyInfo
;

566 
	`mem£t
(
pKI
->
aS‹tOrdî
, 0,ÖKI->
nFõld
);

567 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pKI
, 
P4_KEYINFO
);

568 
	`ã°ˇ£
–
pKI
->
nXFõld
>2 );

569 
pOp
->
p4
.
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pS‹t
->
pOrdîBy
, 
nOBS©
,

570 
pKI
->
nXFõld
-1);

571 
addrJmp
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

572 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addrJmp
+1, 0,áddrJmp+1); 
	`VdbeCovîage
(v);

573 
pS‹t
->
œbñBkOut
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

574 
pS‹t
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

575 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pS‹t
->
ªgRëu∫
,ÖS‹t->
œbñBkOut
);

576 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Re£tS‹ãr
, 
pS‹t
->
iECurs‹
);

577 if–
iLimô
 ){

578 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfNŸ
, 
iLimô
, 
pS‹t
->
œbñD⁄e
);

579 
	`VdbeCovîage
(
v
);

581 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrFú°
);

582 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
ªgBa£
, 
ªgPªvKey
, 
pS‹t
->
nOBS©
);

583 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrJmp
);

585 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

586 
›
 = 
OP_S‹ãrIn£π
;

588 
›
 = 
OP_IdxIn£π
;

590 
	`sqlôe3VdbeAddOp2
(
v
, 
›
, 
pS‹t
->
iECurs‹
, 
ªgRec‹d
);

591 if–
iLimô
 ){

592 
addr
;

593 
r1
 = 0;

598 
addr
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IfNŸZîo
, 
iLimô
, 0, 1); 
	`VdbeCovîage
(v);

599 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_La°
, 
pS‹t
->
iECurs‹
);

600 if–
pS‹t
->
bOrdîedI¬îLo›
 ){

601 
r1
 = ++
pP¨£
->
nMem
;

602 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
pS‹t
->
iECurs‹
, 
nEx¥
, 
r1
);

603 
	`VdbeCommít
((
v
, "seq"));

605 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
pS‹t
->
iECurs‹
);

606 if–
pS‹t
->
bOrdîedI¬îLo›
 ){

612 
iBrk
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 2;

613 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgBa£
+
nEx¥
, 
iBrk
, 
r1
);

614 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

615 
	`VdbeCovîage
(
v
);

617 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

619 
	}
}

624 
	$codeOff£t
(

625 
Vdbe
 *
v
,

626 
iOff£t
,

627 
iC⁄töue


629 if–
iOff£t
>0 ){

630 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IfPos
, 
iOff£t
, 
iC⁄töue
, 1); 
	`VdbeCovîage
(v);

631 
	`VdbeCommít
((
v
, "OFFSET"));

633 
	}
}

644 
	$codeDi°ö˘
(

645 
P¨£
 *
pP¨£
,

646 
iTab
,

647 
addrRïót
,

648 
N
,

649 
iMem


651 
Vdbe
 *
v
;

652 
r1
;

654 
v
 = 
pP¨£
->
pVdbe
;

655 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

656 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iTab
, 
addrRïót
, 
iMem
, 
N
); 
	`VdbeCovîage
(v);

657 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
iMem
, 
N
, 
r1
);

658 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iTab
, 
r1
);

659 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

660 
	}
}

662 #i‚de‡
SQLITE_OMIT_SUBQUERY


670 
	$checkF‹Mu…iCﬁumnSñe˘Eº‹
(

671 
P¨£
 *
pP¨£
,

672 
Sñe˘De°
 *
pDe°
,

673 
nEx¥


675 
eDe°
 = 
pDe°
->eDest;

676 if–
nEx¥
>1 && (
eDe°
==
SRT_Mem
 ||ÉDe°==
SRT_Së
) ){

677 
	`sqlôe3Eº‹Msg
(
pP¨£
, "onlyá singleÑesultállowed for "

683 
	}
}

695 
	$£À˘I¬îLo›
(

696 
P¨£
 *
pP¨£
,

697 
Sñe˘
 *
p
,

698 
Ex¥Li°
 *
pELi°
,

699 
§cTab
,

700 
S‹tCtx
 *
pS‹t
,

701 
Di°ö˘Ctx
 *
pDi°ö˘
,

702 
Sñe˘De°
 *
pDe°
,

703 
iC⁄töue
,

704 
iBªak


706 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

707 
i
;

708 
hasDi°ö˘
;

709 
ªgResu…
;

710 
eDe°
 = 
pDe°
->eDest;

711 
iP¨m
 = 
pDe°
->
iSDP¨m
;

712 
nResu…Cﬁ
;

713 
nPªfixReg
 = 0;

715 
	`as£π
–
v
 );

716 
	`as£π
–
pELi°
!=0 );

717 
hasDi°ö˘
 = 
pDi°ö˘
 ?ÖDi°ö˘->
eTn˘Ty≥
 : 
WHERE_DISTINCT_NOOP
;

718 if–
pS‹t
 &&ÖS‹t->
pOrdîBy
==0 )ÖSort = 0;

719 if–
pS‹t
==0 && !
hasDi°ö˘
 ){

720 
	`as£π
–
iC⁄töue
!=0 );

721 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

726 
nResu…Cﬁ
 = 
pELi°
->
nEx¥
;

728 if–
pDe°
->
iSd°
==0 ){

729 if–
pS‹t
 ){

730 
nPªfixReg
 = 
pS‹t
->
pOrdîBy
->
nEx¥
;

731 if–!(
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
ËË
nPªfixReg
++;

732 
pP¨£
->
nMem
 +
nPªfixReg
;

734 
pDe°
->
iSd°
 = 
pP¨£
->
nMem
+1;

735 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

736 }if–
pDe°
->
iSd°
+
nResu…Cﬁ
 > 
pP¨£
->
nMem
 ){

742 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

744 
pDe°
->
nSd°
 = 
nResu…Cﬁ
;

745 
ªgResu…
 = 
pDe°
->
iSd°
;

746 if–
§cTab
>=0 ){

747 
i
=0; i<
nResu…Cﬁ
; i++){

748 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
§cTab
, 
i
, 
ªgResu…
+i);

749 
	`VdbeCommít
((
v
, "%s", 
pELi°
->
a
[
i
].
zName
));

751 }if–
eDe°
!=
SRT_Exi°s
 ){

755 
u8
 
e˚lFœgs
;

756 if–
eDe°
==
SRT_Mem
 ||ÉDe°==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 ){

757 
e˚lFœgs
 = 
SQLITE_ECEL_DUP
;

759 
e˚lFœgs
 = 0;

761 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pELi°
, 
ªgResu…
, 0, 
e˚lFœgs
);

768 if–
hasDi°ö˘
 ){

769  
pDi°ö˘
->
eTn˘Ty≥
 ){

770 
WHERE_DISTINCT_ORDERED
: {

771 
VdbeOp
 *
pOp
;

772 
iJump
;

773 
ªgPªv
;

776 
ªgPªv
 = 
pP¨£
->
nMem
+1;

777 
pP¨£
->
nMem
 +
nResu…Cﬁ
;

785 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
pDi°ö˘
->
addrTn˘
);

786 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pDi°ö˘
->
addrTn˘
);

787 
pOp
->
›code
 = 
OP_NuŒ
;

788 
pOp
->
p1
 = 1;

789 
pOp
->
p2
 = 
ªgPªv
;

791 
iJump
 = 
	`sqlôe3VdbeCuºítAddr
(
v
Ë+ 
nResu…Cﬁ
;

792 
i
=0; i<
nResu…Cﬁ
; i++){

793 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pELi°
->
a
[
i
].
pEx¥
);

794 if–
i
<
nResu…Cﬁ
-1 ){

795 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Ne
, 
ªgResu…
+
i
, 
iJump
, 
ªgPªv
+i);

796 
	`VdbeCovîage
(
v
);

798 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Eq
, 
ªgResu…
+
i
, 
iC⁄töue
, 
ªgPªv
+i);

799 
	`VdbeCovîage
(
v
);

801 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (c⁄° *)
pCﬁl
, 
P4_COLLSEQ
);

802 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_NULLEQ
);

804 
	`as£π
–
	`sqlôe3VdbeCuºítAddr
(
v
)==
iJump
 || 
pP¨£
->
db
->
mÆlocFaûed
 );

805 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
ªgResu…
, 
ªgPªv
, 
nResu…Cﬁ
-1);

809 
WHERE_DISTINCT_UNIQUE
: {

810 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
pDi°ö˘
->
addrTn˘
);

815 
	`as£π
–
pDi°ö˘
->
eTn˘Ty≥
==
WHERE_DISTINCT_UNORDERED
 );

816 
	`codeDi°ö˘
(
pP¨£
, 
pDi°ö˘
->
èbTn˘
, 
iC⁄töue
, 
nResu…Cﬁ
,

817 
ªgResu…
);

821 if–
pS‹t
==0 ){

822 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

826  
eDe°
 ){

830 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


831 
SRT_Uni⁄
: {

832 
r1
;

833 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

834 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r1
);

835 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
);

836 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

844 
SRT_Ex˚±
: {

845 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxDñëe
, 
iP¨m
, 
ªgResu…
, 
nResu…Cﬁ
);

852 
SRT_Fifo
:

853 
SRT_Di°Fifo
:

854 
SRT_TabÀ
:

855 
SRT_EphemTab
: {

856 
r1
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPªfixReg
+1);

857 
	`ã°ˇ£
–
eDe°
==
SRT_TabÀ
 );

858 
	`ã°ˇ£
–
eDe°
==
SRT_EphemTab
 );

859 
	`ã°ˇ£
–
eDe°
==
SRT_Fifo
 );

860 
	`ã°ˇ£
–
eDe°
==
SRT_Di°Fifo
 );

861 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r1
+
nPªfixReg
);

862 #i‚de‡
SQLITE_OMIT_CTE


863 if–
eDe°
==
SRT_Di°Fifo
 ){

869 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 4;

870 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iP¨m
+1, 
addr
, 
r1
, 0);

871 
	`VdbeCovîage
(
v
);

872 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
+1, 
r1
);

873 
	`as£π
–
pS‹t
==0 );

876 if–
pS‹t
 ){

877 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
r1
+
nPªfixReg
,
ªgResu…
,1,nPrefixReg);

879 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

880 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iP¨m
, 
r2
);

881 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iP¨m
, 
r1
, 
r2
);

882 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

883 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

885 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r1
, 
nPªfixReg
+1);

889 #i‚de‡
SQLITE_OMIT_SUBQUERY


894 
SRT_Së
: {

895 
	`as£π
–
nResu…Cﬁ
==1 );

896 
pDe°
->
affSd°
 =

897 
	`sqlôe3Com∑ªAfföôy
(
pELi°
->
a
[0].
pEx¥
, 
pDe°
->
affSd°
);

898 if–
pS‹t
 ){

903 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
,ÑegResu…, 1, 
nPªfixReg
);

905 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

906 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
,1,
r1
, &
pDe°
->
affSd°
, 1);

907 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgResu…
, 1);

908 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
);

909 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

916 
SRT_Exi°s
: {

917 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iP¨m
);

926 
SRT_Mem
: {

927 
	`as£π
–
nResu…Cﬁ
==1 );

928 if–
pS‹t
 ){

929 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
,ÑegResu…, 1, 
nPªfixReg
);

931 
	`as£π
–
ªgResu…
==
iP¨m
 );

938 
SRT_C‹outöe
:

939 
SRT_Ouçut
: {

940 
	`ã°ˇ£
–
eDe°
==
SRT_C‹outöe
 );

941 
	`ã°ˇ£
–
eDe°
==
SRT_Ouçut
 );

942 if–
pS‹t
 ){

943 
	`pushO¡oS‹ãr
(
pP¨£
, 
pS‹t
, 
p
, 
ªgResu…
,ÑegResu…, 
nResu…Cﬁ
,

944 
nPªfixReg
);

945 }if–
eDe°
==
SRT_C‹outöe
 ){

946 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

948 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgResu…
, 
nResu…Cﬁ
);

949 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgResu…
, 
nResu…Cﬁ
);

954 #i‚de‡
SQLITE_OMIT_CTE


961 
SRT_Di°Queue
:

962 
SRT_Queue
: {

963 
nKey
;

964 
r1
, 
r2
, 
r3
;

965 
addrTe°
 = 0;

966 
Ex¥Li°
 *
pSO
;

967 
pSO
 = 
pDe°
->
pOrdîBy
;

968 
	`as£π
–
pSO
 );

969 
nKey
 = 
pSO
->
nEx¥
;

970 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

971 
r2
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nKey
+2);

972 
r3
 = 
r2
+
nKey
+1;

973 if–
eDe°
==
SRT_Di°Queue
 ){

977 
addrTe°
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
iP¨m
+1, 0,

978 
ªgResu…
, 
nResu…Cﬁ
);

979 
	`VdbeCovîage
(
v
);

981 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgResu…
, 
nResu…Cﬁ
, 
r3
);

982 if–
eDe°
==
SRT_Di°Queue
 ){

983 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
+1, 
r3
);

984 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

986 
i
=0; i<
nKey
; i++){

987 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
,

988 
ªgResu…
 + 
pSO
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
 - 1,

989 
r2
+
i
);

991 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Sequí˚
, 
iP¨m
, 
r2
+
nKey
);

992 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
r2
, 
nKey
+2, 
r1
);

993 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
r1
);

994 if–
addrTe°
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,áddrTest);

995 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

996 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r2
, 
nKey
+2);

1003 #i‡!
	`deföed
(
SQLITE_OMIT_TRIGGER
)

1010 
	`as£π
–
eDe°
==
SRT_Disˇrd
 );

1020 if–
pS‹t
==0 && 
p
->
iLimô
 ){

1021 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
p
->
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

1023 
	}
}

1029 
KeyInfo
 *
	$sqlôe3KeyInfoAŒoc
(
sqlôe3
 *
db
, 
N
, 
X
){

1030 
nExåa
 = (
N
+
X
)*((
CﬁlSeq
*)+1);

1031 
KeyInfo
 *
p
 = 
	`sqlôe3DbMÆlocRaw
(
db
, (KeyInfoË+ 
nExåa
);

1032 if–
p
 ){

1033 
p
->
aS‹tOrdî
 = (
u8
*)&p->
aCﬁl
[
N
+
X
];

1034 
p
->
nFõld
 = (
u16
)
N
;

1035 
p
->
nXFõld
 = (
u16
)
X
;

1036 
p
->
íc
 = 
	`ENC
(
db
);

1037 
p
->
db
 = db;

1038 
p
->
nRef
 = 1;

1039 
	`mem£t
(&
p
[1], 0, 
nExåa
);

1041 
	`sqlôe3OomFau…
(
db
);

1043  
p
;

1044 
	}
}

1049 
	$sqlôe3KeyInfoUƒef
(
KeyInfo
 *
p
){

1050 if–
p
 ){

1051 
	`as£π
–
p
->
nRef
>0 );

1052 
p
->
nRef
--;

1053 if–
p
->
nRef
==0 ) 
	`sqlôe3DbFªe
’->
db
,Ö);

1055 
	}
}

1060 
KeyInfo
 *
	$sqlôe3KeyInfoRef
(
KeyInfo
 *
p
){

1061 if–
p
 ){

1062 
	`as£π
–
p
->
nRef
>0 );

1063 
p
->
nRef
++;

1065  
p
;

1066 
	}
}

1068 #ifde‡
SQLITE_DEBUG


1075 
	$sqlôe3KeyInfoIsWrôóbÀ
(
KeyInfo
 *
p
){ Ö->
nRef
==1; 
	}
}

1092 
KeyInfo
 *
	$keyInfoFromEx¥Li°
(

1093 
P¨£
 *
pP¨£
,

1094 
Ex¥Li°
 *
pLi°
,

1095 
iSèπ
,

1096 
nExåa


1098 
nEx¥
;

1099 
KeyInfo
 *
pInfo
;

1100 
Ex¥Li°_ôem
 *
pIãm
;

1101 
sqlôe3
 *
db
 = 
pP¨£
->db;

1102 
i
;

1104 
nEx¥
 = 
pLi°
->nExpr;

1105 
pInfo
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nEx¥
-
iSèπ
, 
nExåa
+1);

1106 if–
pInfo
 ){

1107 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pInfo
) );

1108 
i
=
iSèπ
, 
pIãm
=
pLi°
->
a
+iSèπ; i<
nEx¥
; i++,ÖItem++){

1109 
CﬁlSeq
 *
pCﬁl
;

1110 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pIãm
->
pEx¥
);

1111 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

1112 
pInfo
->
aCﬁl
[
i
-
iSèπ
] = 
pCﬁl
;

1113 
pInfo
->
aS‹tOrdî
[
i
-
iSèπ
] = 
pIãm
->
s‹tOrdî
;

1116  
pInfo
;

1117 
	}
}

1122 c⁄° *
	$£À˘OpName
(
id
){

1123 *
z
;

1124  
id
 ){

1125 
TK_ALL
: 
z
 = "UNION ALL"; ;

1126 
TK_INTERSECT
: 
z
 = "INTERSECT"; ;

1127 
TK_EXCEPT
: 
z
 = "EXCEPT"; ;

1128 : 
z
 = "UNION"; ;

1130  
z
;

1131 
	}
}

1133 #i‚de‡
SQLITE_OMIT_EXPLAIN


1144 
	$ex∂aöTempTabÀ
(
P¨£
 *
pP¨£
, c⁄° *
zUßge
){

1145 if–
pP¨£
->
ex∂aö
==2 ){

1146 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1147 *
zMsg
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "USE TEMP B-TREE FOR %s", 
zUßge
);

1148 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

1150 
	}
}

1159 
	#ex∂aöSëI¡egî
(
a
, 
b
Ë®
	)
b

1163 
	#ex∂aöTempTabÀ
(
y
,
z
)

	)

1164 
	#ex∂aöSëI¡egî
(
y
,
z
)

	)

1167 #i‡!
deföed
(
SQLITE_OMIT_EXPLAIN
Ë&& !deföed(
SQLITE_OMIT_COMPOUND_SELECT
)

1182 
	$ex∂aöComposôe
(

1183 
P¨£
 *
pP¨£
,

1184 
›
,

1185 
iSub1
,

1186 
iSub2
,

1187 
bU£Tmp


1189 
	`as£π
–
›
==
TK_UNION
 || op==
TK_EXCEPT
 || op==
TK_INTERSECT
 || op==
TK_ALL
 );

1190 if–
pP¨£
->
ex∂aö
==2 ){

1191 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1192 *
zMsg
 = 
	`sqlôe3MPrötf
(

1193 
pP¨£
->
db
, "COMPOUND SUBQUERIES %d AND %d %s(%s)", 
iSub1
, 
iSub2
,

1194 
bU£Tmp
?"USING TEMP B-TREE ":"", 
	`£À˘OpName
(
›
)

1196 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
pP¨£
->
iSñe˘Id
, 0, 0, 
zMsg
, 
P4_DYNAMIC
);

1198 
	}
}

1201 
	#ex∂aöComposôe
(
v
,
w
,
x
,
y
,
z
)

	)

1210 
	$gíî©eS‹tTaû
(

1211 
P¨£
 *
pP¨£
,

1212 
Sñe˘
 *
p
,

1213 
S‹tCtx
 *
pS‹t
,

1214 
nCﬁumn
,

1215 
Sñe˘De°
 *
pDe°


1217 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1218 
addrBªak
 = 
pS‹t
->
œbñD⁄e
;

1219 
addrC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1220 
addr
;

1221 
addrOn˚
 = 0;

1222 
iTab
;

1223 
Ex¥Li°
 *
pOrdîBy
 = 
pS‹t
->pOrderBy;

1224 
eDe°
 = 
pDe°
->eDest;

1225 
iP¨m
 = 
pDe°
->
iSDP¨m
;

1226 
ªgRow
;

1227 
ªgRowid
;

1228 
nKey
;

1229 
iS‹tTab
;

1230 
nS‹tD©a
;

1231 
i
;

1232 
bSeq
;

1233 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1234 
Ex¥Li°_ôem
 *
aOutEx
 = 
p
->
pELi°
->
a
;

1237 
	`as£π
–
addrBªak
<0 );

1238 if–
pS‹t
->
œbñBkOut
 ){

1239 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pS‹t
->
ªgRëu∫
,ÖS‹t->
œbñBkOut
);

1240 
	`sqlôe3VdbeGŸo
(
v
, 
addrBªak
);

1241 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pS‹t
->
œbñBkOut
);

1243 
iTab
 = 
pS‹t
->
iECurs‹
;

1244 if–
eDe°
==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 ){

1245 
ªgRowid
 = 0;

1246 
ªgRow
 = 
pDe°
->
iSd°
;

1247 
nS‹tD©a
 = 
nCﬁumn
;

1249 
ªgRowid
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1250 
ªgRow
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

1251 
nS‹tD©a
 = 1;

1253 
nKey
 = 
pOrdîBy
->
nEx¥
 - 
pS‹t
->
nOBS©
;

1254 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

1255 
ªgS‹tOut
 = ++
pP¨£
->
nMem
;

1256 
iS‹tTab
 = 
pP¨£
->
nTab
++;

1257 if–
pS‹t
->
œbñBkOut
 ){

1258 
addrOn˚
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

1260 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
iS‹tTab
, 
ªgS‹tOut
, 
nKey
+1+
nS‹tD©a
);

1261 if–
addrOn˚
 ) 
	`sqlôe3VdbeJumpHîe
(
v
,áddrOnce);

1262 
addr
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
iTab
, 
addrBªak
);

1263 
	`VdbeCovîage
(
v
);

1264 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
addrC⁄töue
);

1265 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
iTab
, 
ªgS‹tOut
, 
iS‹tTab
);

1266 
bSeq
 = 0;

1268 
addr
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹t
, 
iTab
, 
addrBªak
); 
	`VdbeCovîage
(v);

1269 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
addrC⁄töue
);

1270 
iS‹tTab
 = 
iTab
;

1271 
bSeq
 = 1;

1273 
i
=0; i<
nS‹tD©a
; i++){

1274 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iS‹tTab
, 
nKey
+
bSeq
+
i
, 
ªgRow
+i);

1275 
	`VdbeCommít
((
v
, "%s", 
aOutEx
[
i
].
zName
 ?áOutEx[i].zNamê:áOutEx[i].
zS∑n
));

1277  
eDe°
 ){

1278 
SRT_EphemTab
: {

1279 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
iP¨m
, 
ªgRowid
);

1280 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
iP¨m
, 
ªgRow
, 
ªgRowid
);

1281 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

1284 #i‚de‡
SQLITE_OMIT_SUBQUERY


1285 
SRT_Së
: {

1286 
	`as£π
–
nCﬁumn
==1 );

1287 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
ªgRow
, 1, 
ªgRowid
,

1288 &
pDe°
->
affSd°
, 1);

1289 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgRow
, 1);

1290 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iP¨m
, 
ªgRowid
);

1293 
SRT_Mem
: {

1294 
	`as£π
–
nCﬁumn
==1 );

1295 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
ªgRow
, 
iP¨m
, 1);

1301 
	`as£π
–
eDe°
==
SRT_Ouçut
 ||ÉDe°==
SRT_C‹outöe
 );

1302 
	`ã°ˇ£
–
eDe°
==
SRT_Ouçut
 );

1303 
	`ã°ˇ£
–
eDe°
==
SRT_C‹outöe
 );

1304 if–
eDe°
==
SRT_Ouçut
 ){

1305 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
pDe°
->
iSd°
, 
nCﬁumn
);

1306 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pDe°
->
iSd°
, 
nCﬁumn
);

1308 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

1313 if–
ªgRowid
 ){

1314 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRow
);

1315 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRowid
);

1319 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrC⁄töue
);

1320 if–
pS‹t
->
s‹tFœgs
 & 
SORTFLAG_U£S‹ãr
 ){

1321 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
iTab
, 
addr
); 
	`VdbeCovîage
(v);

1323 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iTab
, 
addr
); 
	`VdbeCovîage
(v);

1325 if–
pS‹t
->
ªgRëu∫
 ) 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
,ÖSort->regReturn);

1326 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBªak
);

1327 
	}
}

1353 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1354 
	#cﬁumnTy≥
(
A
,
B
,
C
,
D
,
E
,
F
Ë
	`cﬁumnTy≥Im∂
(A,B,C,D,E,F)

	)

1356 
	#cﬁumnTy≥
(
A
,
B
,
C
,
D
,
E
,
F
Ë
	`cﬁumnTy≥Im∂
(A,B,F)

	)

1358 c⁄° *
cﬁumnTy≥Im∂
(

1359 
NameC⁄ãxt
 *
pNC
,

1360 
Ex¥
 *
pEx¥
,

1361 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1362 c⁄° **
pzOrigDb
,

1363 c⁄° **
pzOrigTab
,

1364 c⁄° **
pzOrigCﬁ
,

1366 
u8
 *
pE°Width


1368 c⁄° *
	gzTy≥
 = 0;

1369 
	gj
;

1370 
u8
 
	ge°Width
 = 1;

1371 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1372 c⁄° *
	gzOrigDb
 = 0;

1373 c⁄° *
	gzOrigTab
 = 0;

1374 c⁄° *
	gzOrigCﬁ
 = 0;

1377 
as£π
–
pEx¥
!=0 );

1378 
as£π
–
pNC
->
pSrcLi°
!=0 );

1379  
	gpEx¥
->
	g›
 ){

1380 
	gTK_AGG_COLUMN
:

1381 
TK_COLUMN
: {

1386 
TabÀ
 *
pTab
 = 0;

1387 
Sñe˘
 *
	gpS
 = 0;

1388 
	giCﬁ
 = 
pEx¥
->
iCﬁumn
;

1389 
ã°ˇ£
–
pEx¥
->
›
==
TK_AGG_COLUMN
 );

1390 
ã°ˇ£
–
pEx¥
->
›
==
TK_COLUMN
 );

1391  
	gpNC
 && !
	gpTab
 ){

1392 
SrcLi°
 *
	gpTabLi°
 = 
pNC
->
pSrcLi°
;

1393 
	gj
=0;j<
	gpTabLi°
->
	gnSrc
 &&ÖTabLi°->
	ga
[
j
].
	giCurs‹
!=
pEx¥
->
iTabÀ
;j++);

1394 if–
	gj
<
	gpTabLi°
->
	gnSrc
 ){

1395 
	gpTab
 = 
pTabLi°
->
a
[
j
].
pTab
;

1396 
	gpS
 = 
pTabLi°
->
a
[
j
].
pSñe˘
;

1398 
	gpNC
 = 
pNC
->
pNext
;

1402 if–
	gpTab
==0 ){

1423 
as£π
–
pTab
 && 
pEx¥
->pTab==pTab );

1424 if–
	gpS
 ){

1429 if–
	giCﬁ
>=0 && 
ALWAYS
(
iCﬁ
<
pS
->
pELi°
->
nEx¥
) ){

1437 
NameC⁄ãxt
 
sNC
;

1438 
Ex¥
 *
	gp
 = 
pS
->
pELi°
->
a
[
iCﬁ
].
pEx¥
;

1439 
	gsNC
.
	gpSrcLi°
 = 
pS
->
pSrc
;

1440 
	gsNC
.
	gpNext
 = 
pNC
;

1441 
	gsNC
.
	gpP¨£
 = 
pNC
->
pP¨£
;

1442 
	gzTy≥
 = 
cﬁumnTy≥
(&
sNC
, 
p
,&
zOrigDb
,&
zOrigTab
,&
zOrigCﬁ
, &
e°Width
);

1444 }if–
	gpTab
->
	gpSchema
 ){

1446 
as£π
–!
pS
 );

1447 if–
	giCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1448 
as£π
–
iCﬁ
==-1 || (iCﬁ>=0 && iCﬁ<
pTab
->
nCﬁ
) );

1449 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1450 if–
	giCﬁ
<0 ){

1451 
	gzTy≥
 = "INTEGER";

1452 
	gzOrigCﬁ
 = "rowid";

1454 
	gzOrigCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

1455 
	gzTy≥
 = 
sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
],0);

1456 
	ge°Width
 = 
pTab
->
aCﬁ
[
iCﬁ
].
szE°
;

1458 
	gzOrigTab
 = 
pTab
->
zName
;

1459 if–
	gpNC
->
	gpP¨£
 ){

1460 
	giDb
 = 
sqlôe3SchemaToIndex
(
pNC
->
pP¨£
->
db
, 
pTab
->
pSchema
);

1461 
	gzOrigDb
 = 
pNC
->
pP¨£
->
db
->
aDb
[
iDb
].
zName
;

1464 if–
	giCﬁ
<0 ){

1465 
	gzTy≥
 = "INTEGER";

1467 
	gzTy≥
 = 
sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
],0);

1468 
	ge°Width
 = 
pTab
->
aCﬁ
[
iCﬁ
].
szE°
;

1474 #i‚de‡
SQLITE_OMIT_SUBQUERY


1475 
	gTK_SELECT
: {

1480 
NameC⁄ãxt
 
sNC
;

1481 
Sñe˘
 *
	gpS
 = 
pEx¥
->
x
.
pSñe˘
;

1482 
Ex¥
 *
	gp
 = 
pS
->
pELi°
->
a
[0].
pEx¥
;

1483 
as£π
–
Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) );

1484 
	gsNC
.
	gpSrcLi°
 = 
pS
->
pSrc
;

1485 
	gsNC
.
	gpNext
 = 
pNC
;

1486 
	gsNC
.
	gpP¨£
 = 
pNC
->
pP¨£
;

1487 
	gzTy≥
 = 
cﬁumnTy≥
(&
sNC
, 
p
, &
zOrigDb
, &
zOrigTab
, &
zOrigCﬁ
, &
e°Width
);

1493 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1494 if–
	gpzOrigDb
 ){

1495 
as£π
–
pzOrigTab
 && 
pzOrigCﬁ
 );

1496 *
	gpzOrigDb
 = 
zOrigDb
;

1497 *
	gpzOrigTab
 = 
zOrigTab
;

1498 *
	gpzOrigCﬁ
 = 
zOrigCﬁ
;

1501 if–
	gpE°Width
 ) *pE°Width = 
e°Width
;

1502  
	gzTy≥
;

1509 
	$gíî©eCﬁumnTy≥s
(

1510 
P¨£
 *
pP¨£
,

1511 
SrcLi°
 *
pTabLi°
,

1512 
Ex¥Li°
 *
pELi°


1514 #i‚de‡
SQLITE_OMIT_DECLTYPE


1515 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1516 
i
;

1517 
NameC⁄ãxt
 
sNC
;

1518 
sNC
.
pSrcLi°
 = 
pTabLi°
;

1519 
sNC
.
pP¨£
 =ÖParse;

1520 
i
=0; i<
pELi°
->
nEx¥
; i++){

1521 
Ex¥
 *
p
 = 
pELi°
->
a
[
i
].
pEx¥
;

1522 c⁄° *
zTy≥
;

1523 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1524 c⁄° *
zOrigDb
 = 0;

1525 c⁄° *
zOrigTab
 = 0;

1526 c⁄° *
zOrigCﬁ
 = 0;

1527 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, &
zOrigDb
, &
zOrigTab
, &
zOrigCﬁ
, 0);

1533 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_DATABASE
, 
zOrigDb
, 
SQLITE_TRANSIENT
);

1534 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_TABLE
, 
zOrigTab
, 
SQLITE_TRANSIENT
);

1535 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_COLUMN
, 
zOrigCﬁ
, 
SQLITE_TRANSIENT
);

1537 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, 0, 0, 0, 0);

1539 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_DECLTYPE
, 
zTy≥
, 
SQLITE_TRANSIENT
);

1542 
	}
}

1549 
	$gíî©eCﬁumnNames
(

1550 
P¨£
 *
pP¨£
,

1551 
SrcLi°
 *
pTabLi°
,

1552 
Ex¥Li°
 *
pELi°


1554 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1555 
i
, 
j
;

1556 
sqlôe3
 *
db
 = 
pP¨£
->db;

1557 
fuŒNames
, 
sh‹tNames
;

1559 #i‚de‡
SQLITE_OMIT_EXPLAIN


1561 if–
pP¨£
->
ex∂aö
 ){

1566 if–
pP¨£
->
cﬁNamesSë
 || 
db
->
mÆlocFaûed
 ) ;

1567 
	`as£π
–
v
!=0 );

1568 
	`as£π
–
pTabLi°
!=0 );

1569 
pP¨£
->
cﬁNamesSë
 = 1;

1570 
fuŒNames
 = (
db
->
Êags
 & 
SQLITE_FuŒCﬁNames
)!=0;

1571 
sh‹tNames
 = (
db
->
Êags
 & 
SQLITE_Sh‹tCﬁNames
)!=0;

1572 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 
pELi°
->
nEx¥
);

1573 
i
=0; i<
pELi°
->
nEx¥
; i++){

1574 
Ex¥
 *
p
;

1575 
p
 = 
pELi°
->
a
[
i
].
pEx¥
;

1576 if–
	`NEVER
(
p
==0) ) ;

1577 if–
pELi°
->
a
[
i
].
zName
 ){

1578 *
zName
 = 
pELi°
->
a
[
i
].zName;

1579 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zName
, 
SQLITE_TRANSIENT
);

1580 }if–
p
->
›
==
TK_COLUMN
 ||Ö->›==
TK_AGG_COLUMN
 ){

1581 
TabÀ
 *
pTab
;

1582 *
zCﬁ
;

1583 
iCﬁ
 = 
p
->
iCﬁumn
;

1584 
j
=0; 
	`ALWAYS
(j<
pTabLi°
->
nSrc
); j++){

1585 if–
pTabLi°
->
a
[
j
].
iCurs‹
==
p
->
iTabÀ
 ) ;

1587 
	`as£π
–
j
<
pTabLi°
->
nSrc
 );

1588 
pTab
 = 
pTabLi°
->
a
[
j
].pTab;

1589 if–
iCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1590 
	`as£π
–
iCﬁ
==-1 || (iCﬁ>=0 && iCﬁ<
pTab
->
nCﬁ
) );

1591 if–
iCﬁ
<0 ){

1592 
zCﬁ
 = "rowid";

1594 
zCﬁ
 = 
pTab
->
aCﬁ
[
iCﬁ
].
zName
;

1596 if–!
sh‹tNames
 && !
fuŒNames
 ){

1597 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
,

1598 
	`sqlôe3DbSåDup
(
db
, 
pELi°
->
a
[
i
].
zS∑n
), 
SQLITE_DYNAMIC
);

1599 }if–
fuŒNames
 ){

1600 *
zName
 = 0;

1601 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
pTab
->zName, 
zCﬁ
);

1602 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zName
, 
SQLITE_DYNAMIC
);

1604 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
zCﬁ
, 
SQLITE_TRANSIENT
);

1607 c⁄° *
z
 = 
pELi°
->
a
[
i
].
zS∑n
;

1608 
z
 = z==0 ? 
	`sqlôe3MPrötf
(
db
, "cﬁumn%d", 
i
+1Ë: 
	`sqlôe3DbSåDup
(db, z);

1609 
	`sqlôe3VdbeSëCﬁName
(
v
, 
i
, 
COLNAME_NAME
, 
z
, 
SQLITE_DYNAMIC
);

1612 
	`gíî©eCﬁumnTy≥s
(
pP¨£
, 
pTabLi°
, 
pELi°
);

1613 
	}
}

1628 
	$sqlôe3CﬁumnsFromEx¥Li°
(

1629 
P¨£
 *
pP¨£
,

1630 
Ex¥Li°
 *
pELi°
,

1631 
i16
 *
≤Cﬁ
,

1632 
Cﬁumn
 **
∑Cﬁ


1634 
sqlôe3
 *
db
 = 
pP¨£
->db;

1635 
i
, 
j
;

1636 
u32
 
˙t
;

1637 
Cﬁumn
 *
aCﬁ
, *
pCﬁ
;

1638 
nCﬁ
;

1639 
Ex¥
 *
p
;

1640 *
zName
;

1641 
nName
;

1642 
Hash
 
ht
;

1644 
	`sqlôe3HashInô
(&
ht
);

1645 if–
pELi°
 ){

1646 
nCﬁ
 = 
pELi°
->
nEx¥
;

1647 
aCﬁ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, ◊Cﬁ[0])*
nCﬁ
);

1648 
	`ã°ˇ£
–
aCﬁ
==0 );

1650 
nCﬁ
 = 0;

1651 
aCﬁ
 = 0;

1653 
	`as£π
–
nCﬁ
==(
i16
)nCol );

1654 *
≤Cﬁ
 = 
nCﬁ
;

1655 *
∑Cﬁ
 = 
aCﬁ
;

1657 
i
=0, 
pCﬁ
=
aCﬁ
; i<
nCﬁ
 && !
db
->
mÆlocFaûed
; i++,ÖCol++){

1660 
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pELi°
->
a
[
i
].
pEx¥
);

1661 if–(
zName
 = 
pELi°
->
a
[
i
].zName)!=0 ){

1664 
Ex¥
 *
pCﬁEx¥
 = 
p
;

1665 
TabÀ
 *
pTab
;

1666  
pCﬁEx¥
->
›
==
TK_DOT
 ){

1667 
pCﬁEx¥
 =ÖCﬁEx¥->
pRight
;

1668 
	`as£π
–
pCﬁEx¥
!=0 );

1670 if–
pCﬁEx¥
->
›
==
TK_COLUMN
 && 
	`ALWAYS
’CﬁEx¥->
pTab
!=0) ){

1672 
iCﬁ
 = 
pCﬁEx¥
->
iCﬁumn
;

1673 
pTab
 = 
pCﬁEx¥
->pTab;

1674 if–
iCﬁ
<0 ) iCﬁ = 
pTab
->
iPKey
;

1675 
zName
 = 
iCﬁ
>=0 ? 
pTab
->
aCﬁ
[iCol].zName : "rowid";

1676 }if–
pCﬁEx¥
->
›
==
TK_ID
 ){

1677 
	`as£π
–!
	`Ex¥HasPr›îty
(
pCﬁEx¥
, 
EP_I¡VÆue
) );

1678 
zName
 = 
pCﬁEx¥
->
u
.
zTokí
;

1681 
zName
 = 
pELi°
->
a
[
i
].
zS∑n
;

1684 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%s", zName);

1689 
˙t
 = 0;

1690  
zName
 && 
	`sqlôe3HashFöd
(&
ht
, zName)!=0 ){

1691 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

1692 if–
nName
>0 ){

1693 
j
=
nName
-1; j>0 && 
	`sqlôe3Isdigô
(
zName
[j]); j--){}

1694 if–
zName
[
j
]==':' ) 
nName
 = j;

1696 
zName
 = 
	`sqlôe3MPrötf
(
db
, "%.*z:%u", 
nName
, zName, ++
˙t
);

1697 if–
˙t
>3 ) 
	`sqlôe3_øndom√ss
((cnt), &cnt);

1699 
pCﬁ
->
zName
 = zName;

1700 
	`sqlôe3CﬁumnPr›îtõsFromName
(0, 
pCﬁ
);

1701 if–
zName
 && 
	`sqlôe3HashIn£π
(&
ht
, zName, 
pCﬁ
)==pCol ){

1702 
	`sqlôe3OomFau…
(
db
);

1705 
	`sqlôe3HashCÀ¨
(&
ht
);

1706 if–
db
->
mÆlocFaûed
 ){

1707 
j
=0; j<
i
; j++){

1708 
	`sqlôe3DbFªe
(
db
, 
aCﬁ
[
j
].
zName
);

1710 
	`sqlôe3DbFªe
(
db
, 
aCﬁ
);

1711 *
∑Cﬁ
 = 0;

1712 *
≤Cﬁ
 = 0;

1713  
SQLITE_NOMEM_BKPT
;

1715  
SQLITE_OK
;

1716 
	}
}

1729 
	$sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(

1730 
P¨£
 *
pP¨£
,

1731 
TabÀ
 *
pTab
,

1732 
Sñe˘
 *
pSñe˘


1734 
sqlôe3
 *
db
 = 
pP¨£
->db;

1735 
NameC⁄ãxt
 
sNC
;

1736 
Cﬁumn
 *
pCﬁ
;

1737 
CﬁlSeq
 *
pCﬁl
;

1738 
i
;

1739 
Ex¥
 *
p
;

1740 
Ex¥Li°_ôem
 *
a
;

1741 
u64
 
szAŒ
 = 0;

1743 
	`as£π
–
pSñe˘
!=0 );

1744 
	`as£π
–(
pSñe˘
->
£lFœgs
 & 
SF_Resﬁved
)!=0 );

1745 
	`as£π
–
pTab
->
nCﬁ
==
pSñe˘
->
pELi°
->
nEx¥
 || 
db
->
mÆlocFaûed
 );

1746 if–
db
->
mÆlocFaûed
 ) ;

1747 
	`mem£t
(&
sNC
, 0, (sNC));

1748 
sNC
.
pSrcLi°
 = 
pSñe˘
->
pSrc
;

1749 
a
 = 
pSñe˘
->
pELi°
->a;

1750 
i
=0, 
pCﬁ
=
pTab
->
aCﬁ
; i<pTab->
nCﬁ
; i++,ÖCol++){

1751 c⁄° *
zTy≥
;

1752 
n
, 
m
;

1753 
p
 = 
a
[
i
].
pEx¥
;

1754 
zTy≥
 = 
	`cﬁumnTy≥
(&
sNC
, 
p
, 0, 0, 0, &
pCﬁ
->
szE°
);

1755 
szAŒ
 +
pCﬁ
->
szE°
;

1756 
pCﬁ
->
afföôy
 = 
	`sqlôe3Ex¥Afföôy
(
p
);

1757 if–
zTy≥
 && (
m
 = 
	`sqlôe3SåÀn30
(zType))>0 ){

1758 
n
 = 
	`sqlôe3SåÀn30
(
pCﬁ
->
zName
);

1759 
pCﬁ
->
zName
 = 
	`sqlôe3DbRóŒocOrFªe
(
db
,ÖCﬁ->zName, 
n
+
m
+2);

1760 if–
pCﬁ
->
zName
 ){

1761 
	`mem˝y
(&
pCﬁ
->
zName
[
n
+1], 
zTy≥
, 
m
+1);

1762 
pCﬁ
->
cﬁFœgs
 |
COLFLAG_HASTYPE
;

1765 if–
pCﬁ
->
afföôy
==0 )ÖCﬁ->afföôy = 
SQLITE_AFF_BLOB
;

1766 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
p
);

1767 if–
pCﬁl
 && 
pCﬁ
->
zCﬁl
==0 ){

1768 
pCﬁ
->
zCﬁl
 = 
	`sqlôe3DbSåDup
(
db
, 
pCﬁl
->
zName
);

1771 
pTab
->
szTabRow
 = 
	`sqlôe3LogE°
(
szAŒ
*4);

1772 
	}
}

1778 
TabÀ
 *
	$sqlôe3Resu…SëOfSñe˘
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

1779 
TabÀ
 *
pTab
;

1780 
sqlôe3
 *
db
 = 
pP¨£
->db;

1781 
ßvedFœgs
;

1783 
ßvedFœgs
 = 
db
->
Êags
;

1784 
db
->
Êags
 &~
SQLITE_FuŒCﬁNames
;

1785 
db
->
Êags
 |
SQLITE_Sh‹tCﬁNames
;

1786 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
pSñe˘
, 0);

1787 if–
pP¨£
->
nEº
 )  0;

1788  
pSñe˘
->
pPri‹
 )ÖSelect =ÖSelect->pPrior;

1789 
db
->
Êags
 = 
ßvedFœgs
;

1790 
pTab
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
) );

1791 if–
pTab
==0 ){

1796 
	`as£π
–
db
->
lookaside
.
bDißbÀ
 );

1797 
pTab
->
nRef
 = 1;

1798 
pTab
->
zName
 = 0;

1799 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

1800 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pSñe˘
->
pELi°
, &
pTab
->
nCﬁ
, &pTab->
aCﬁ
);

1801 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTab
, 
pSñe˘
);

1802 
pTab
->
iPKey
 = -1;

1803 if–
db
->
mÆlocFaûed
 ){

1804 
	`sqlôe3DñëeTabÀ
(
db
, 
pTab
);

1807  
pTab
;

1808 
	}
}

1814 
SQLITE_NOINLINE
 
Vdbe
 *
	$ÆlocVdbe
(
P¨£
 *
pP¨£
){

1815 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
 = 
	`sqlôe3VdbeCª©e
(pParse);

1816 if–
v
 ) 
	`sqlôe3VdbeAddOp0
(v, 
OP_Inô
);

1817 if–
pP¨£
->
pT›Àvñ
==0

1818 && 
	`O±imiz©i⁄E«bÀd
(
pP¨£
->
db
,
SQLITE_Fa˘‹OutC⁄°
)

1820 
pP¨£
->
okC⁄°Fa˘‹
 = 1;

1822  
v
;

1823 
	}
}

1824 
Vdbe
 *
	$sqlôe3GëVdbe
(
P¨£
 *
pP¨£
){

1825 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

1826  
v
 ? v : 
	`ÆlocVdbe
(
pP¨£
);

1827 
	}
}

1853 
	$compuãLimôRegi°îs
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
iBªak
){

1854 
Vdbe
 *
v
 = 0;

1855 
iLimô
 = 0;

1856 
iOff£t
;

1857 
n
;

1858 if–
p
->
iLimô
 ) ;

1866 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

1867 
	`as£π
–
p
->
pOff£t
==0 ||Ö->
pLimô
!=0 );

1868 if–
p
->
pLimô
 ){

1869 
p
->
iLimô
 = iLimô = ++
pP¨£
->
nMem
;

1870 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

1871 
	`as£π
–
v
!=0 );

1872 if–
	`sqlôe3Ex¥IsI¡egî
(
p
->
pLimô
, &
n
) ){

1873 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
n
, 
iLimô
);

1874 
	`VdbeCommít
((
v
, "LIMIT counter"));

1875 if–
n
==0 ){

1876 
	`sqlôe3VdbeGŸo
(
v
, 
iBªak
);

1877 }if–
n
>=0 && 
p
->
nSñe˘Row
>
	`sqlôe3LogE°
((
u64
)n) ){

1878 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°
((
u64
)
n
);

1879 
p
->
£lFœgs
 |
SF_FixedLimô
;

1882 
	`sqlôe3Ex¥Code
(
pP¨£
, 
p
->
pLimô
, 
iLimô
);

1883 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
iLimô
); 
	`VdbeCovîage
(v);

1884 
	`VdbeCommít
((
v
, "LIMIT counter"));

1885 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfNŸ
, 
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

1887 if–
p
->
pOff£t
 ){

1888 
p
->
iOff£t
 = iOff£à++
pP¨£
->
nMem
;

1889 
pP¨£
->
nMem
++;

1890 
	`sqlôe3Ex¥Code
(
pP¨£
, 
p
->
pOff£t
, 
iOff£t
);

1891 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
iOff£t
); 
	`VdbeCovîage
(v);

1892 
	`VdbeCommít
((
v
, "OFFSET counter"));

1893 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Off£tLimô
, 
iLimô
, 
iOff£t
+1, iOffset);

1894 
	`VdbeCommít
((
v
, "LIMIT+OFFSET"));

1897 
	}
}

1899 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


1908 
CﬁlSeq
 *
	$mu…iSñe˘CﬁlSeq
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
iCﬁ
){

1909 
CﬁlSeq
 *
pRë
;

1910 if–
p
->
pPri‹
 ){

1911 
pRë
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
->
pPri‹
, 
iCﬁ
);

1913 
pRë
 = 0;

1915 
	`as£π
–
iCﬁ
>=0 );

1919 if–
pRë
==0 && 
	`ALWAYS
(
iCﬁ
<
p
->
pELi°
->
nEx¥
) ){

1920 
pRë
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
p
->
pELi°
->
a
[
iCﬁ
].
pEx¥
);

1922  
pRë
;

1923 
	}
}

1934 
KeyInfo
 *
	$mu…iSñe˘OrdîByKeyInfo
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
, 
nExåa
){

1935 
Ex¥Li°
 *
pOrdîBy
 = 
p
->pOrderBy;

1936 
nOrdîBy
 = 
p
->
pOrdîBy
->
nEx¥
;

1937 
sqlôe3
 *
db
 = 
pP¨£
->db;

1938 
KeyInfo
 *
pRë
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nOrdîBy
+
nExåa
, 1);

1939 if–
pRë
 ){

1940 
i
;

1941 
i
=0; i<
nOrdîBy
; i++){

1942 
Ex¥Li°_ôem
 *
pIãm
 = &
pOrdîBy
->
a
[
i
];

1943 
Ex¥
 *
pTîm
 = 
pIãm
->
pEx¥
;

1944 
CﬁlSeq
 *
pCﬁl
;

1946 if–
pTîm
->
Êags
 & 
EP_Cﬁœã
 ){

1947 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pTîm
);

1949 
pCﬁl
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, 
pIãm
->
u
.
x
.
iOrdîByCﬁ
-1);

1950 if–
pCﬁl
==0 )ÖCﬁ»
db
->
pDÊtCﬁl
;

1951 
pOrdîBy
->
a
[
i
].
pEx¥
 =

1952 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
, 
pTîm
, 
pCﬁl
->
zName
);

1954 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pRë
) );

1955 
pRë
->
aCﬁl
[
i
] = 
pCﬁl
;

1956 
pRë
->
aS‹tOrdî
[
i
] = 
pOrdîBy
->
a
[i].
s‹tOrdî
;

1960  
pRë
;

1961 
	}
}

1963 #i‚de‡
SQLITE_OMIT_CTE


2000 
	$gíî©eWôhRecursiveQuîy
(

2001 
P¨£
 *
pP¨£
,

2002 
Sñe˘
 *
p
,

2003 
Sñe˘De°
 *
pDe°


2005 
SrcLi°
 *
pSrc
 = 
p
->pSrc;

2006 
nCﬁ
 = 
p
->
pELi°
->
nEx¥
;

2007 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2008 
Sñe˘
 *
pSëup
 = 
p
->
pPri‹
;

2009 
addrT›
;

2010 
addrC⁄t
, 
addrBªak
;

2011 
iCuºít
 = 0;

2012 
ªgCuºít
;

2013 
iQueue
;

2014 
iDi°ö˘
 = 0;

2015 
eDe°
 = 
SRT_Fifo
;

2016 
Sñe˘De°
 
de°Queue
;

2017 
i
;

2018 
rc
;

2019 
Ex¥Li°
 *
pOrdîBy
;

2020 
Ex¥
 *
pLimô
, *
pOff£t
;

2021 
ªgLimô
, 
ªgOff£t
;

2024 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_RECURSIVE
, 0, 0, 0) ) ;

2027 
addrBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2028 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
addrBªak
);

2029 
pLimô
 = 
p
->pLimit;

2030 
pOff£t
 = 
p
->pOffset;

2031 
ªgLimô
 = 
p
->
iLimô
;

2032 
ªgOff£t
 = 
p
->
iOff£t
;

2033 
p
->
pLimô
 =Ö->
pOff£t
 = 0;

2034 
p
->
iLimô
 =Ö->
iOff£t
 = 0;

2035 
pOrdîBy
 = 
p
->pOrderBy;

2038 
i
=0; 
	`ALWAYS
(i<
pSrc
->
nSrc
); i++){

2039 if–
pSrc
->
a
[
i
].
fg
.
isRecursive
 ){

2040 
iCuºít
 = 
pSrc
->
a
[
i
].
iCurs‹
;

2048 
iQueue
 = 
pP¨£
->
nTab
++;

2049 if–
p
->
›
==
TK_UNION
 ){

2050 
eDe°
 = 
pOrdîBy
 ? 
SRT_Di°Queue
 : 
SRT_Di°Fifo
;

2051 
iDi°ö˘
 = 
pP¨£
->
nTab
++;

2053 
eDe°
 = 
pOrdîBy
 ? 
SRT_Queue
 : 
SRT_Fifo
;

2055 
	`sqlôe3Sñe˘De°Inô
(&
de°Queue
, 
eDe°
, 
iQueue
);

2058 
ªgCuºít
 = ++
pP¨£
->
nMem
;

2059 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
iCuºít
, 
ªgCuºít
, 
nCﬁ
);

2060 if–
pOrdîBy
 ){

2061 
KeyInfo
 *
pKeyInfo
 = 
	`mu…iSñe˘OrdîByKeyInfo
(
pP¨£
, 
p
, 1);

2062 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
, 
iQueue
, 
pOrdîBy
->
nEx¥
+2, 0,

2063 (*)
pKeyInfo
, 
P4_KEYINFO
);

2064 
de°Queue
.
pOrdîBy
 =ÖOrderBy;

2066 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iQueue
, 
nCﬁ
);

2068 
	`VdbeCommít
((
v
, "QueueÅable"));

2069 if–
iDi°ö˘
 ){

2070 
p
->
addrO≥nEphm
[0] = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iDi°ö˘
, 0);

2071 
p
->
£lFœgs
 |
SF_U£sEphemîÆ
;

2075 
p
->
pOrdîBy
 = 0;

2078 
pSëup
->
pNext
 = 0;

2079 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSëup
, &
de°Queue
);

2080 
pSëup
->
pNext
 = 
p
;

2081 if–
rc
 ) 
íd_of_ªcursive_quîy
;

2084 
addrT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iQueue
, 
addrBªak
); 
	`VdbeCovîage
(v);

2087 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
iCuºít
);

2088 if–
pOrdîBy
 ){

2089 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iQueue
, 
pOrdîBy
->
nEx¥
+1, 
ªgCuºít
);

2091 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowD©a
, 
iQueue
, 
ªgCuºít
);

2093 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Dñëe
, 
iQueue
);

2096 
addrC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2097 
	`codeOff£t
(
v
, 
ªgOff£t
, 
addrC⁄t
);

2098 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
iCuºít
,

2099 0, 0, 
pDe°
, 
addrC⁄t
, 
addrBªak
);

2100 if–
ªgLimô
 ){

2101 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
ªgLimô
, 
addrBªak
);

2102 
	`VdbeCovîage
(
v
);

2104 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrC⁄t
);

2109 if–
p
->
£lFœgs
 & 
SF_Aggªg©e
 ){

2110 
	`sqlôe3Eº‹Msg
(
pP¨£
, "recursiveággregate queriesÇot supported");

2112 
p
->
pPri‹
 = 0;

2113 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°Queue
);

2114 
	`as£π
–
p
->
pPri‹
==0 );

2115 
p
->
pPri‹
 = 
pSëup
;

2119 
	`sqlôe3VdbeGŸo
(
v
, 
addrT›
);

2120 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrBªak
);

2122 
íd_of_ªcursive_quîy
:

2123 
	`sqlôe3Ex¥Li°Dñëe
(
pP¨£
->
db
, 
p
->
pOrdîBy
);

2124 
p
->
pOrdîBy
 =ÖOrderBy;

2125 
p
->
pLimô
 =ÖLimit;

2126 
p
->
pOff£t
 =ÖOffset;

2128 
	}
}

2132 
mu…iSñe˘OrdîBy
(

2133 
P¨£
 *
pP¨£
,

2134 
Sñe˘
 *
p
,

2135 
Sñe˘De°
 *
pDe°


2149 
	$mu…iSñe˘VÆues
(

2150 
P¨£
 *
pP¨£
,

2151 
Sñe˘
 *
p
,

2152 
Sñe˘De°
 *
pDe°


2154 
Sñe˘
 *
pPri‹
;

2155 
nRow
 = 1;

2156 
rc
 = 0;

2157 
	`as£π
–
p
->
£lFœgs
 & 
SF_Mu…iVÆue
 );

2159 
	`as£π
–
p
->
£lFœgs
 & 
SF_VÆues
 );

2160 
	`as£π
–
p
->
›
==
TK_ALL
 || (p->›==
TK_SELECT
 &&Ö->
pPri‹
==0) );

2161 
	`as£π
–
p
->
pLimô
==0 );

2162 
	`as£π
–
p
->
pOff£t
==0 );

2163 
	`as£π
–
p
->
pNext
==0 ||Ö->
pELi°
->
nEx¥
==p->pNext->pEList->nExpr );

2164 if–
p
->
pPri‹
==0 ) ;

2165 
	`as£π
–
p
->
pPri‹
->
pNext
==p );

2166 
p
 =Ö->
pPri‹
;

2167 
nRow
++;

2169  
p
 ){

2170 
pPri‹
 = 
p
->pPrior;

2171 
p
->
pPri‹
 = 0;

2172 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, 
pDe°
);

2173 
p
->
pPri‹
 =ÖPrior;

2174 if–
rc
 ) ;

2175 
p
->
nSñe˘Row
 = 
nRow
;

2176 
p
 =Ö->
pNext
;

2178  
rc
;

2179 
	}
}

2212 
	$mu…iSñe˘
(

2213 
P¨£
 *
pP¨£
,

2214 
Sñe˘
 *
p
,

2215 
Sñe˘De°
 *
pDe°


2217 
rc
 = 
SQLITE_OK
;

2218 
Sñe˘
 *
pPri‹
;

2219 
Vdbe
 *
v
;

2220 
Sñe˘De°
 
de°
;

2221 
Sñe˘
 *
pDñëe
 = 0;

2222 
sqlôe3
 *
db
;

2223 #i‚de‡
SQLITE_OMIT_EXPLAIN


2224 
iSub1
 = 0;

2225 
iSub2
 = 0;

2231 
	`as£π
–
p
 &&Ö->
pPri‹
 );

2232 
	`as£π
–(
p
->
£lFœgs
 & 
SF_Recursive
)==0 ||Ö->
›
==
TK_ALL
 ||Ö->›==
TK_UNION
 );

2233 
db
 = 
pP¨£
->db;

2234 
pPri‹
 = 
p
->pPrior;

2235 
de°
 = *
pDe°
;

2236 if–
pPri‹
->
pOrdîBy
 ){

2237 
	`sqlôe3Eº‹Msg
(
pP¨£
,"ORDER BY clause should comeáfter %sÇot before",

2238 
	`£À˘OpName
(
p
->
›
));

2239 
rc
 = 1;

2240 
mu…i_£À˘_íd
;

2242 if–
pPri‹
->
pLimô
 ){

2243 
	`sqlôe3Eº‹Msg
(
pP¨£
,"LIMIT clause should comeáfter %sÇot before",

2244 
	`£À˘OpName
(
p
->
›
));

2245 
rc
 = 1;

2246 
mu…i_£À˘_íd
;

2249 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

2250 
	`as£π
–
v
!=0 );

2254 if–
de°
.
eDe°
==
SRT_EphemTab
 ){

2255 
	`as£π
–
p
->
pELi°
 );

2256 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
de°
.
iSDP¨m
, 
p
->
pELi°
->
nEx¥
);

2257 
de°
.
eDe°
 = 
SRT_TabÀ
;

2262 if–
p
->
£lFœgs
 & 
SF_Mu…iVÆue
 ){

2263 
rc
 = 
	`mu…iSñe˘VÆues
(
pP¨£
, 
p
, &
de°
);

2264 
mu…i_£À˘_íd
;

2270 
	`as£π
–
p
->
pELi°
 && 
pPri‹
->pEList );

2271 
	`as£π
–
p
->
pELi°
->
nEx¥
==
pPri‹
->pEList->nExpr );

2273 #i‚de‡
SQLITE_OMIT_CTE


2274 if–
p
->
£lFœgs
 & 
SF_Recursive
 ){

2275 
	`gíî©eWôhRecursiveQuîy
(
pP¨£
, 
p
, &
de°
);

2281 if–
p
->
pOrdîBy
 ){

2282  
	`mu…iSñe˘OrdîBy
(
pP¨£
, 
p
, 
pDe°
);

2287  
p
->
›
 ){

2288 
TK_ALL
: {

2289 
addr
 = 0;

2290 
nLimô
;

2291 
	`as£π
–!
pPri‹
->
pLimô
 );

2292 
pPri‹
->
iLimô
 = 
p
->iLimit;

2293 
pPri‹
->
iOff£t
 = 
p
->iOffset;

2294 
pPri‹
->
pLimô
 = 
p
->pLimit;

2295 
pPri‹
->
pOff£t
 = 
p
->pOffset;

2296 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2297 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
de°
);

2298 
p
->
pLimô
 = 0;

2299 
p
->
pOff£t
 = 0;

2300 if–
rc
 ){

2301 
mu…i_£À˘_íd
;

2303 
p
->
pPri‹
 = 0;

2304 
p
->
iLimô
 = 
pPri‹
->iLimit;

2305 
p
->
iOff£t
 = 
pPri‹
->iOffset;

2306 if–
p
->
iLimô
 ){

2307 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
p
->
iLimô
); 
	`VdbeCovîage
(v);

2308 
	`VdbeCommít
((
v
, "Jumpáhead if LIMITÑeached"));

2309 if–
p
->
iOff£t
 ){

2310 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Off£tLimô
,

2311 
p
->
iLimô
,Ö->
iOff£t
+1,Ö->iOffset);

2314 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2315 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°
);

2316 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2317 
pDñëe
 = 
p
->
pPri‹
;

2318 
p
->
pPri‹
 =ÖPrior;

2319 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

2320 if–
pPri‹
->
pLimô


2321 && 
	`sqlôe3Ex¥IsI¡egî
(
pPri‹
->
pLimô
, &
nLimô
)

2322 && 
nLimô
>0 && 
p
->
nSñe˘Row
 > 
	`sqlôe3LogE°
((
u64
)nLimit)

2324 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°
((
u64
)
nLimô
);

2326 if–
addr
 ){

2327 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

2331 
TK_EXCEPT
:

2332 
TK_UNION
: {

2333 
uni⁄Tab
;

2334 
u8
 
›
 = 0;

2335 
¥i‹Op
;

2336 
Ex¥
 *
pLimô
, *
pOff£t
;

2337 
addr
;

2338 
Sñe˘De°
 
uni⁄de°
;

2340 
	`ã°ˇ£
–
p
->
›
==
TK_EXCEPT
 );

2341 
	`ã°ˇ£
–
p
->
›
==
TK_UNION
 );

2342 
¥i‹Op
 = 
SRT_Uni⁄
;

2343 if–
de°
.
eDe°
==
¥i‹Op
 ){

2347 
	`as£π
–
p
->
pLimô
==0 );

2348 
	`as£π
–
p
->
pOff£t
==0 );

2349 
uni⁄Tab
 = 
de°
.
iSDP¨m
;

2354 
uni⁄Tab
 = 
pP¨£
->
nTab
++;

2355 
	`as£π
–
p
->
pOrdîBy
==0 );

2356 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
uni⁄Tab
, 0);

2357 
	`as£π
–
p
->
addrO≥nEphm
[0] == -1 );

2358 
p
->
addrO≥nEphm
[0] = 
addr
;

2359 
	`födRightmo°
(
p
)->
£lFœgs
 |
SF_U£sEphemîÆ
;

2360 
	`as£π
–
p
->
pELi°
 );

2365 
	`as£π
–!
pPri‹
->
pOrdîBy
 );

2366 
	`sqlôe3Sñe˘De°Inô
(&
uni⁄de°
, 
¥i‹Op
, 
uni⁄Tab
);

2367 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2368 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
uni⁄de°
);

2369 if–
rc
 ){

2370 
mu…i_£À˘_íd
;

2375 if–
p
->
›
==
TK_EXCEPT
 ){

2376 
›
 = 
SRT_Ex˚±
;

2378 
	`as£π
–
p
->
›
==
TK_UNION
 );

2379 
›
 = 
SRT_Uni⁄
;

2381 
p
->
pPri‹
 = 0;

2382 
pLimô
 = 
p
->pLimit;

2383 
p
->
pLimô
 = 0;

2384 
pOff£t
 = 
p
->pOffset;

2385 
p
->
pOff£t
 = 0;

2386 
uni⁄de°
.
eDe°
 = 
›
;

2387 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2388 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
uni⁄de°
);

2389 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2392 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

2393 
pDñëe
 = 
p
->
pPri‹
;

2394 
p
->
pPri‹
 =ÖPrior;

2395 
p
->
pOrdîBy
 = 0;

2396 if–
p
->
›
==
TK_UNION
 ){

2397 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

2399 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2400 
p
->
pLimô
 =ÖLimit;

2401 
p
->
pOff£t
 =ÖOffset;

2402 
p
->
iLimô
 = 0;

2403 
p
->
iOff£t
 = 0;

2408 
	`as£π
–
uni⁄Tab
==
de°
.
iSDP¨m
 || de°.
eDe°
!=
¥i‹Op
 );

2409 if–
de°
.
eDe°
!=
¥i‹Op
 ){

2410 
iC⁄t
, 
iBªak
, 
iSèπ
;

2411 
	`as£π
–
p
->
pELi°
 );

2412 if–
de°
.
eDe°
==
SRT_Ouçut
 ){

2413 
Sñe˘
 *
pFú°
 = 
p
;

2414  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

2415 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

2417 
iBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2418 
iC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2419 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iBªak
);

2420 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
uni⁄Tab
, 
iBªak
); 
	`VdbeCovîage
(v);

2421 
iSèπ
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2422 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
uni⁄Tab
,

2423 0, 0, &
de°
, 
iC⁄t
, 
iBªak
);

2424 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄t
);

2425 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
uni⁄Tab
, 
iSèπ
); 
	`VdbeCovîage
(v);

2426 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iBªak
);

2427 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
uni⁄Tab
, 0);

2431 : 
	`as£π
–
p
->
›
==
TK_INTERSECT
 ); {

2432 
èb1
, 
èb2
;

2433 
iC⁄t
, 
iBªak
, 
iSèπ
;

2434 
Ex¥
 *
pLimô
, *
pOff£t
;

2435 
addr
;

2436 
Sñe˘De°
 
öãr£˘de°
;

2437 
r1
;

2443 
èb1
 = 
pP¨£
->
nTab
++;

2444 
èb2
 = 
pP¨£
->
nTab
++;

2445 
	`as£π
–
p
->
pOrdîBy
==0 );

2447 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
èb1
, 0);

2448 
	`as£π
–
p
->
addrO≥nEphm
[0] == -1 );

2449 
p
->
addrO≥nEphm
[0] = 
addr
;

2450 
	`födRightmo°
(
p
)->
£lFœgs
 |
SF_U£sEphemîÆ
;

2451 
	`as£π
–
p
->
pELi°
 );

2455 
	`sqlôe3Sñe˘De°Inô
(&
öãr£˘de°
, 
SRT_Uni⁄
, 
èb1
);

2456 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2457 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
öãr£˘de°
);

2458 if–
rc
 ){

2459 
mu…i_£À˘_íd
;

2464 
addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
èb2
, 0);

2465 
	`as£π
–
p
->
addrO≥nEphm
[1] == -1 );

2466 
p
->
addrO≥nEphm
[1] = 
addr
;

2467 
p
->
pPri‹
 = 0;

2468 
pLimô
 = 
p
->pLimit;

2469 
p
->
pLimô
 = 0;

2470 
pOff£t
 = 
p
->pOffset;

2471 
p
->
pOff£t
 = 0;

2472 
öãr£˘de°
.
iSDP¨m
 = 
èb2
;

2473 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

2474 
rc
 = 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
öãr£˘de°
);

2475 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

2476 
pDñëe
 = 
p
->
pPri‹
;

2477 
p
->
pPri‹
 =ÖPrior;

2478 if–
p
->
nSñe˘Row
>
pPri‹
->nSelectRow )Ö->nSelectRow =ÖPrior->nSelectRow;

2479 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2480 
p
->
pLimô
 =ÖLimit;

2481 
p
->
pOff£t
 =ÖOffset;

2486 
	`as£π
–
p
->
pELi°
 );

2487 if–
de°
.
eDe°
==
SRT_Ouçut
 ){

2488 
Sñe˘
 *
pFú°
 = 
p
;

2489  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

2490 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

2492 
iBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2493 
iC⁄t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2494 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iBªak
);

2495 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
èb1
, 
iBªak
); 
	`VdbeCovîage
(v);

2496 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2497 
iSèπ
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowKey
, 
èb1
, 
r1
);

2498 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
èb2
, 
iC⁄t
, 
r1
, 0); 
	`VdbeCovîage
(v);

2499 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2500 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, 
èb1
,

2501 0, 0, &
de°
, 
iC⁄t
, 
iBªak
);

2502 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄t
);

2503 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
èb1
, 
iSèπ
); 
	`VdbeCovîage
(v);

2504 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iBªak
);

2505 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
èb2
, 0);

2506 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
èb1
, 0);

2511 
	`ex∂aöComposôe
(
pP¨£
, 
p
->
›
, 
iSub1
, 
iSub2
,Ö->›!=
TK_ALL
);

2522 if–
p
->
£lFœgs
 & 
SF_U£sEphemîÆ
 ){

2523 
i
;

2524 
KeyInfo
 *
pKeyInfo
;

2525 
Sñe˘
 *
pLo›
;

2526 
CﬁlSeq
 **
≠Cﬁl
;

2527 
nCﬁ
;

2529 
	`as£π
–
p
->
pNext
==0 );

2530 
nCﬁ
 = 
p
->
pELi°
->
nEx¥
;

2531 
pKeyInfo
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nCﬁ
, 1);

2532 if–!
pKeyInfo
 ){

2533 
rc
 = 
SQLITE_NOMEM_BKPT
;

2534 
mu…i_£À˘_íd
;

2536 
i
=0, 
≠Cﬁl
=
pKeyInfo
->
aCﬁl
; i<
nCﬁ
; i++,ápColl++){

2537 *
≠Cﬁl
 = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, 
i
);

2538 if–0==*
≠Cﬁl
 ){

2539 *
≠Cﬁl
 = 
db
->
pDÊtCﬁl
;

2543 
pLo›
=
p
;ÖLo›;ÖLo›ıLo›->
pPri‹
){

2544 
i
=0; i<2; i++){

2545 
addr
 = 
pLo›
->
addrO≥nEphm
[
i
];

2546 if–
addr
<0 ){

2549 
	`as£π
–
pLo›
->
addrO≥nEphm
[1]<0 );

2552 
	`sqlôe3VdbeCh™geP2
(
v
, 
addr
, 
nCﬁ
);

2553 
	`sqlôe3VdbeCh™geP4
(
v
, 
addr
, (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
),

2554 
P4_KEYINFO
);

2555 
pLo›
->
addrO≥nEphm
[
i
] = -1;

2558 
	`sqlôe3KeyInfoUƒef
(
pKeyInfo
);

2561 
mu…i_£À˘_íd
:

2562 
pDe°
->
iSd°
 = 
de°
.iSdst;

2563 
pDe°
->
nSd°
 = 
de°
.nSdst;

2564 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pDñëe
);

2565  
rc
;

2566 
	}
}

2573 
	$sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
){

2574 if–
p
->
£lFœgs
 & 
SF_VÆues
 ){

2575 
	`sqlôe3Eº‹Msg
(
pP¨£
, "all VALUES must haveÅhe sameÇumber ofÅerms");

2577 
	`sqlôe3Eº‹Msg
(
pP¨£
, "SELECTsÅoÅheÜeftándÑight of %s"

2578 " dÿnŸ havêthêßmênumbî o‡ªsu… cﬁumns", 
	`£À˘OpName
(
p
->
›
));

2580 
	}
}

2602 
	$gíî©eOuçutSubroutöe
(

2603 
P¨£
 *
pP¨£
,

2604 
Sñe˘
 *
p
,

2605 
Sñe˘De°
 *
pIn
,

2606 
Sñe˘De°
 *
pDe°
,

2607 
ªgRëu∫
,

2608 
ªgPªv
,

2609 
KeyInfo
 *
pKeyInfo
,

2610 
iBªak


2612 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

2613 
iC⁄töue
;

2614 
addr
;

2616 
addr
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

2617 
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2621 if–
ªgPªv
 ){

2622 
addr1
, 
addr2
;

2623 
addr1
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfNŸ
, 
ªgPªv
); 
	`VdbeCovîage
(v);

2624 
addr2
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
pIn
->
iSd°
, 
ªgPªv
+1,ÖIn->
nSd°
,

2625 (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
), 
P4_KEYINFO
);

2626 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addr2
+2, 
iC⁄töue
,áddr2+2); 
	`VdbeCovîage
(v);

2627 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2628 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_C›y
, 
pIn
->
iSd°
, 
ªgPªv
+1,ÖIn->
nSd°
-1);

2629 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
ªgPªv
);

2631 if–
pP¨£
->
db
->
mÆlocFaûed
 )  0;

2635 
	`codeOff£t
(
v
, 
p
->
iOff£t
, 
iC⁄töue
);

2637 
	`as£π
–
pDe°
->
eDe°
!=
SRT_Exi°s
 );

2638 
	`as£π
–
pDe°
->
eDe°
!=
SRT_TabÀ
 );

2639  
pDe°
->
eDe°
 ){

2642 
SRT_EphemTab
: {

2643 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2644 
r2
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2645 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
pIn
->
iSd°
,ÖIn->
nSd°
, 
r1
);

2646 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
pDe°
->
iSDP¨m
, 
r2
);

2647 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
pDe°
->
iSDP¨m
, 
r1
, 
r2
);

2648 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_APPEND
);

2649 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r2
);

2650 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2654 #i‚de‡
SQLITE_OMIT_SUBQUERY


2659 
SRT_Së
: {

2660 
r1
;

2661 
	`as£π
–
pIn
->
nSd°
==1 || 
pP¨£
->
nEº
>0 );

2662 
pDe°
->
affSd°
 =

2663 
	`sqlôe3Com∑ªAfföôy
(
p
->
pELi°
->
a
[0].
pEx¥
, 
pDe°
->
affSd°
);

2664 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

2665 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
pIn
->
iSd°
, 1, 
r1
, &
pDe°
->
affSd°
,1);

2666 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pIn
->
iSd°
, 1);

2667 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
pDe°
->
iSDP¨m
, 
r1
);

2668 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

2676 
SRT_Mem
: {

2677 
	`as£π
–
pIn
->
nSd°
==1 || 
pP¨£
->
nEº
>0 ); 
	`ã°ˇ£
(ÖIn->nSdst!=1 );

2678 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
pIn
->
iSd°
, 
pDe°
->
iSDP¨m
, 1);

2687 
SRT_C‹outöe
: {

2688 if–
pDe°
->
iSd°
==0 ){

2689 
pDe°
->
iSd°
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pIn
->
nSd°
);

2690 
pDe°
->
nSd°
 = 
pIn
->nSdst;

2692 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
pIn
->
iSd°
, 
pDe°
->iSd°,ÖIn->
nSd°
);

2693 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
pDe°
->
iSDP¨m
);

2706 
	`as£π
–
pDe°
->
eDe°
==
SRT_Ouçut
 );

2707 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
pIn
->
iSd°
,ÖIn->
nSd°
);

2708 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
pIn
->
iSd°
,ÖIn->
nSd°
);

2715 if–
p
->
iLimô
 ){

2716 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, 
p
->
iLimô
, 
iBªak
); 
	`VdbeCovîage
(v);

2721 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄töue
);

2722 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgRëu∫
);

2724  
addr
;

2725 
	}
}

2812 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


2813 
	$mu…iSñe˘OrdîBy
(

2814 
P¨£
 *
pP¨£
,

2815 
Sñe˘
 *
p
,

2816 
Sñe˘De°
 *
pDe°


2818 
i
, 
j
;

2819 
Sñe˘
 *
pPri‹
;

2820 
Vdbe
 *
v
;

2821 
Sñe˘De°
 
de°A
;

2822 
Sñe˘De°
 
de°B
;

2823 
ªgAddrA
;

2824 
ªgAddrB
;

2825 
addrSñe˘A
;

2826 
addrSñe˘B
;

2827 
ªgOutA
;

2828 
ªgOutB
;

2829 
addrOutA
;

2830 
addrOutB
 = 0;

2831 
addrEofA
;

2832 
addrEofA_noB
;

2833 
addrEofB
;

2834 
addrA…B
;

2835 
addrAeqB
;

2836 
addrAgtB
;

2837 
ªgLimôA
;

2838 
ªgLimôB
;

2839 
ªgPªv
;

2840 
ßvedLimô
;

2841 
ßvedOff£t
;

2842 
œbñCm¥
;

2843 
œbñEnd
;

2844 
addr1
;

2845 
›
;

2846 
KeyInfo
 *
pKeyDup
 = 0;

2847 
KeyInfo
 *
pKeyMîge
;

2848 
sqlôe3
 *
db
;

2849 
Ex¥Li°
 *
pOrdîBy
;

2850 
nOrdîBy
;

2851 *
aPîmuã
;

2852 #i‚de‡
SQLITE_OMIT_EXPLAIN


2853 
iSub1
;

2854 
iSub2
;

2857 
	`as£π
–
p
->
pOrdîBy
!=0 );

2858 
	`as£π
–
pKeyDup
==0 );

2859 
db
 = 
pP¨£
->db;

2860 
v
 = 
pP¨£
->
pVdbe
;

2861 
	`as£π
–
v
!=0 );

2862 
œbñEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2863 
œbñCm¥
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

2868 
›
 = 
p
->op;

2869 
pPri‹
 = 
p
->pPrior;

2870 
	`as£π
–
pPri‹
->
pOrdîBy
==0 );

2871 
pOrdîBy
 = 
p
->pOrderBy;

2872 
	`as£π
–
pOrdîBy
 );

2873 
nOrdîBy
 = 
pOrdîBy
->
nEx¥
;

2879 if–
›
!=
TK_ALL
 ){

2880 
i
=1; 
db
->
mÆlocFaûed
==0 && i<=
p
->
pELi°
->
nEx¥
; i++){

2881 
Ex¥Li°_ôem
 *
pIãm
;

2882 
j
=0, 
pIãm
=
pOrdîBy
->
a
; j<
nOrdîBy
; j++,ÖItem++){

2883 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>0 );

2884 if–
pIãm
->
u
.
x
.
iOrdîByCﬁ
==
i
 ) ;

2886 if–
j
==
nOrdîBy
 ){

2887 
Ex¥
 *
pNew
 = 
	`sqlôe3Ex¥
(
db
, 
TK_INTEGER
, 0);

2888 if–
pNew
==0 )  
SQLITE_NOMEM_BKPT
;

2889 
pNew
->
Êags
 |
EP_I¡VÆue
;

2890 
pNew
->
u
.
iVÆue
 = 
i
;

2891 
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖOrdîBy, 
pNew
);

2892 if–
pOrdîBy
 )ÖOrdîBy->
a
[
nOrdîBy
++].
u
.
x
.
iOrdîByCﬁ
 = (
u16
)
i
;

2904 
aPîmuã
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ()*(
nOrdîBy
 + 1));

2905 if–
aPîmuã
 ){

2906 
Ex¥Li°_ôem
 *
pIãm
;

2907 
aPîmuã
[0] = 
nOrdîBy
;

2908 
i
=1, 
pIãm
=
pOrdîBy
->
a
; i<=
nOrdîBy
; i++,ÖItem++){

2909 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
>0 );

2910 
	`as£π
–
pIãm
->
u
.
x
.
iOrdîByCﬁ
<=
p
->
pELi°
->
nEx¥
 );

2911 
aPîmuã
[
i
] = 
pIãm
->
u
.
x
.
iOrdîByCﬁ
 - 1;

2913 
pKeyMîge
 = 
	`mu…iSñe˘OrdîByKeyInfo
(
pP¨£
, 
p
, 1);

2915 
pKeyMîge
 = 0;

2920 
p
->
pOrdîBy
 =ÖOrderBy;

2921 
pPri‹
->
pOrdîBy
 = 
	`sqlôe3Ex¥Li°Dup
(
pP¨£
->
db
,ÖOrderBy, 0);

2927 if–
›
==
TK_ALL
 ){

2928 
ªgPªv
 = 0;

2930 
nEx¥
 = 
p
->
pELi°
->nExpr;

2931 
	`as£π
–
nOrdîBy
>=
nEx¥
 || 
db
->
mÆlocFaûed
 );

2932 
ªgPªv
 = 
pP¨£
->
nMem
+1;

2933 
pP¨£
->
nMem
 +
nEx¥
+1;

2934 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgPªv
);

2935 
pKeyDup
 = 
	`sqlôe3KeyInfoAŒoc
(
db
, 
nEx¥
, 1);

2936 if–
pKeyDup
 ){

2937 
	`as£π
–
	`sqlôe3KeyInfoIsWrôóbÀ
(
pKeyDup
) );

2938 
i
=0; i<
nEx¥
; i++){

2939 
pKeyDup
->
aCﬁl
[
i
] = 
	`mu…iSñe˘CﬁlSeq
(
pP¨£
, 
p
, i);

2940 
pKeyDup
->
aS‹tOrdî
[
i
] = 0;

2947 
p
->
pPri‹
 = 0;

2948 
pPri‹
->
pNext
 = 0;

2949 
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
p
,Ö->
pOrdîBy
, "ORDER");

2950 if–
pPri‹
->pPrior==0 ){

2951 
	`sqlôe3ResﬁveOrdîGroupBy
(
pP¨£
, 
pPri‹
,ÖPri‹->
pOrdîBy
, "ORDER");

2955 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
œbñEnd
);

2956 if–
p
->
iLimô
 && 
›
==
TK_ALL
 ){

2957 
ªgLimôA
 = ++
pP¨£
->
nMem
;

2958 
ªgLimôB
 = ++
pP¨£
->
nMem
;

2959 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
p
->
iOff£t
 ?Ö->iOff£t+1 :Ö->
iLimô
,

2960 
ªgLimôA
);

2961 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgLimôA
, 
ªgLimôB
);

2963 
ªgLimôA
 = 
ªgLimôB
 = 0;

2965 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pLimô
);

2966 
p
->
pLimô
 = 0;

2967 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
->
pOff£t
);

2968 
p
->
pOff£t
 = 0;

2970 
ªgAddrA
 = ++
pP¨£
->
nMem
;

2971 
ªgAddrB
 = ++
pP¨£
->
nMem
;

2972 
ªgOutA
 = ++
pP¨£
->
nMem
;

2973 
ªgOutB
 = ++
pP¨£
->
nMem
;

2974 
	`sqlôe3Sñe˘De°Inô
(&
de°A
, 
SRT_C‹outöe
, 
ªgAddrA
);

2975 
	`sqlôe3Sñe˘De°Inô
(&
de°B
, 
SRT_C‹outöe
, 
ªgAddrB
);

2980 
addrSñe˘A
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

2981 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgAddrA
, 0, 
addrSñe˘A
);

2982 
	`VdbeCommít
((
v
, "left SELECT"));

2983 
pPri‹
->
iLimô
 = 
ªgLimôA
;

2984 
	`ex∂aöSëI¡egî
(
iSub1
, 
pP¨£
->
iNextSñe˘Id
);

2985 
	`sqlôe3Sñe˘
(
pP¨£
, 
pPri‹
, &
de°A
);

2986 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgAddrA
);

2987 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

2992 
addrSñe˘B
 = 
	`sqlôe3VdbeCuºítAddr
(
v
) + 1;

2993 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgAddrB
, 0, 
addrSñe˘B
);

2994 
	`VdbeCommít
((
v
, "right SELECT"));

2995 
ßvedLimô
 = 
p
->
iLimô
;

2996 
ßvedOff£t
 = 
p
->
iOff£t
;

2997 
p
->
iLimô
 = 
ªgLimôB
;

2998 
p
->
iOff£t
 = 0;

2999 
	`ex∂aöSëI¡egî
(
iSub2
, 
pP¨£
->
iNextSñe˘Id
);

3000 
	`sqlôe3Sñe˘
(
pP¨£
, 
p
, &
de°B
);

3001 
p
->
iLimô
 = 
ßvedLimô
;

3002 
p
->
iOff£t
 = 
ßvedOff£t
;

3003 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
ªgAddrB
);

3008 
	`VdbeNo›Commít
((
v
, "OutputÑoutine for A"));

3009 
addrOutA
 = 
	`gíî©eOuçutSubroutöe
(
pP¨£
,

3010 
p
, &
de°A
, 
pDe°
, 
ªgOutA
,

3011 
ªgPªv
, 
pKeyDup
, 
œbñEnd
);

3016 if–
›
==
TK_ALL
 || op==
TK_UNION
 ){

3017 
	`VdbeNo›Commít
((
v
, "OutputÑoutine for B"));

3018 
addrOutB
 = 
	`gíî©eOuçutSubroutöe
(
pP¨£
,

3019 
p
, &
de°B
, 
pDe°
, 
ªgOutB
,

3020 
ªgPªv
, 
pKeyDup
, 
œbñEnd
);

3022 
	`sqlôe3KeyInfoUƒef
(
pKeyDup
);

3027 if–
›
==
TK_EXCEPT
 || op==
TK_INTERSECT
 ){

3028 
addrEofA_noB
 = 
addrEofA
 = 
œbñEnd
;

3030 
	`VdbeNo›Commít
((
v
, "eof-A subroutine"));

3031 
addrEofA
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutB
, 
addrOutB
);

3032 
addrEofA_noB
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
œbñEnd
);

3033 
	`VdbeCovîage
(
v
);

3034 
	`sqlôe3VdbeGŸo
(
v
, 
addrEofA
);

3035 
p
->
nSñe˘Row
 = 
	`sqlôe3LogE°Add
’->nSñe˘Row, 
pPri‹
->nSelectRow);

3041 if–
›
==
TK_INTERSECT
 ){

3042 
addrEofB
 = 
addrEofA
;

3043 if–
p
->
nSñe˘Row
 > 
pPri‹
->nSelectRow )Ö->nSelectRow =ÖPrior->nSelectRow;

3045 
	`VdbeNo›Commít
((
v
, "eof-B subroutine"));

3046 
addrEofB
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutA
, 
addrOutA
);

3047 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
œbñEnd
); 
	`VdbeCovîage
(v);

3048 
	`sqlôe3VdbeGŸo
(
v
, 
addrEofB
);

3053 
	`VdbeNo›Commít
((
v
, "A-lt-B subroutine"));

3054 
addrA…B
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutA
, 
addrOutA
);

3055 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA
); 
	`VdbeCovîage
(v);

3056 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3060 if–
›
==
TK_ALL
 ){

3061 
addrAeqB
 = 
addrA…B
;

3062 }if–
›
==
TK_INTERSECT
 ){

3063 
addrAeqB
 = 
addrA…B
;

3064 
addrA…B
++;

3066 
	`VdbeNo›Commít
((
v
, "A-eq-B subroutine"));

3067 
addrAeqB
 =

3068 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA
); 
	`VdbeCovîage
(v);

3069 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3074 
	`VdbeNo›Commít
((
v
, "A-gt-B subroutine"));

3075 
addrAgtB
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

3076 if–
›
==
TK_ALL
 || op==
TK_UNION
 ){

3077 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOutB
, 
addrOutB
);

3079 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
addrEofB
); 
	`VdbeCovîage
(v);

3080 
	`sqlôe3VdbeGŸo
(
v
, 
œbñCm¥
);

3084 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

3085 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrA
, 
addrEofA_noB
); 
	`VdbeCovîage
(v);

3086 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgAddrB
, 
addrEofB
); 
	`VdbeCovîage
(v);

3090 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñCm¥
);

3091 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Pîmuèti⁄
, 0, 0, 0, (*)
aPîmuã
, 
P4_INTARRAY
);

3092 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
de°A
.
iSd°
, 
de°B
.iSd°, 
nOrdîBy
,

3093 (*)
pKeyMîge
, 
P4_KEYINFO
);

3094 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_PERMUTE
);

3095 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addrA…B
, 
addrAeqB
, 
addrAgtB
); 
	`VdbeCovîage
(v);

3099 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñEnd
);

3103 if–
pDe°
->
eDe°
==
SRT_Ouçut
 ){

3104 
Sñe˘
 *
pFú°
 = 
pPri‹
;

3105  
pFú°
->
pPri‹
 )ÖFirst =ÖFirst->pPrior;

3106 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pFú°
->
pSrc
,ÖFú°->
pELi°
);

3111 if–
p
->
pPri‹
 ){

3112 
	`sqlôe3Sñe˘Dñëe
(
db
, 
p
->
pPri‹
);

3114 
p
->
pPri‹
 =ÖPrior;

3115 
pPri‹
->
pNext
 = 
p
;

3119 
	`ex∂aöComposôe
(
pP¨£
, 
p
->
›
, 
iSub1
, 
iSub2
, 0);

3120  
pP¨£
->
nEº
!=0;

3121 
	}
}

3124 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3126 
sub°Ex¥Li°
(
sqlôe3
*, 
Ex¥Li°
*, , ExprList*);

3127 
sub°Sñe˘
(
sqlôe3
*, 
Sñe˘
 *, , 
Ex¥Li°
*, );

3142 
Ex¥
 *
	$sub°Ex¥
(

3143 
sqlôe3
 *
db
,

3144 
Ex¥
 *
pEx¥
,

3145 
iTabÀ
,

3146 
Ex¥Li°
 *
pELi°


3148 if–
pEx¥
==0 )  0;

3149 if–
pEx¥
->
›
==
TK_COLUMN
 &&ÖEx¥->
iTabÀ
==iTable ){

3150 if–
pEx¥
->
iCﬁumn
<0 ){

3151 
pEx¥
->
›
 = 
TK_NULL
;

3153 
Ex¥
 *
pNew
;

3154 
	`as£π
–
pELi°
!=0 && 
pEx¥
->
iCﬁumn
<pELi°->
nEx¥
 );

3155 
	`as£π
–
pEx¥
->
pLe·
==0 &&ÖEx¥->
pRight
==0 );

3156 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pELi°
->
a
[
pEx¥
->
iCﬁumn
].pExpr, 0);

3157 
	`sqlôe3Ex¥Dñëe
(
db
, 
pEx¥
);

3158 
pEx¥
 = 
pNew
;

3161 
pEx¥
->
pLe·
 = 
	`sub°Ex¥
(
db
,ÖEx¥->pLe·, 
iTabÀ
, 
pELi°
);

3162 
pEx¥
->
pRight
 = 
	`sub°Ex¥
(
db
,ÖEx¥->pRight, 
iTabÀ
, 
pELi°
);

3163 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

3164 
	`sub°Sñe˘
(
db
, 
pEx¥
->
x
.
pSñe˘
, 
iTabÀ
, 
pELi°
, 1);

3166 
	`sub°Ex¥Li°
(
db
, 
pEx¥
->
x
.
pLi°
, 
iTabÀ
, 
pELi°
);

3169  
pEx¥
;

3170 
	}
}

3171 
	$sub°Ex¥Li°
(

3172 
sqlôe3
 *
db
,

3173 
Ex¥Li°
 *
pLi°
,

3174 
iTabÀ
,

3175 
Ex¥Li°
 *
pELi°


3177 
i
;

3178 if–
pLi°
==0 ) ;

3179 
i
=0; i<
pLi°
->
nEx¥
; i++){

3180 
pLi°
->
a
[
i
].
pEx¥
 = 
	`sub°Ex¥
(
db
,ÖLi°->a[i].pEx¥, 
iTabÀ
, 
pELi°
);

3182 
	}
}

3183 
	$sub°Sñe˘
(

3184 
sqlôe3
 *
db
,

3185 
Sñe˘
 *
p
,

3186 
iTabÀ
,

3187 
Ex¥Li°
 *
pELi°
,

3188 
doPri‹


3190 
SrcLi°
 *
pSrc
;

3191 
SrcLi°_ôem
 *
pIãm
;

3192 
i
;

3193 if–!
p
 ) ;

3195 
	`sub°Ex¥Li°
(
db
, 
p
->
pELi°
, 
iTabÀ
,ÖEList);

3196 
	`sub°Ex¥Li°
(
db
, 
p
->
pGroupBy
, 
iTabÀ
, 
pELi°
);

3197 
	`sub°Ex¥Li°
(
db
, 
p
->
pOrdîBy
, 
iTabÀ
, 
pELi°
);

3198 
p
->
pHavög
 = 
	`sub°Ex¥
(
db
,Ö->pHavög, 
iTabÀ
, 
pELi°
);

3199 
p
->
pWhîe
 = 
	`sub°Ex¥
(
db
,Ö->pWhîe, 
iTabÀ
, 
pELi°
);

3200 
pSrc
 = 
p
->pSrc;

3201 
	`as£π
–
pSrc
!=0 );

3202 
i
=
pSrc
->
nSrc
, 
pIãm
ıSrc->
a
; i>0; i--,ÖItem++){

3203 
	`sub°Sñe˘
(
db
, 
pIãm
->
pSñe˘
, 
iTabÀ
, 
pELi°
, 1);

3204 if–
pIãm
->
fg
.
isTabFunc
 ){

3205 
	`sub°Ex¥Li°
(
db
, 
pIãm
->
u1
.
pFuncArg
, 
iTabÀ
, 
pELi°
);

3208 } 
doPri‹
 && (
p
 =Ö->
pPri‹
)!=0 );

3209 
	}
}

3212 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3352 
	$Ê©ãnSubquîy
(

3353 
P¨£
 *
pP¨£
,

3354 
Sñe˘
 *
p
,

3355 
iFrom
,

3356 
isAgg
,

3357 
subquîyIsAgg


3359 c⁄° *
zSavedAuthC⁄ãxt
 = 
pP¨£
->
zAuthC⁄ãxt
;

3360 
Sñe˘
 *
pP¨ít
;

3361 
Sñe˘
 *
pSub
;

3362 
Sñe˘
 *
pSub1
;

3363 
SrcLi°
 *
pSrc
;

3364 
SrcLi°
 *
pSubSrc
;

3365 
Ex¥Li°
 *
pLi°
;

3366 
iP¨ít
;

3367 
i
;

3368 
Ex¥
 *
pWhîe
;

3369 
SrcLi°_ôem
 *
pSubôem
;

3370 
sqlôe3
 *
db
 = 
pP¨£
->db;

3374 
	`as£π
–
p
!=0 );

3375 
	`as£π
–
p
->
pPri‹
==0 );

3376 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_QuîyFœâíî
) )  0;

3377 
pSrc
 = 
p
->pSrc;

3378 
	`as£π
–
pSrc
 && 
iFrom
>=0 && iFrom<pSrc->
nSrc
 );

3379 
pSubôem
 = &
pSrc
->
a
[
iFrom
];

3380 
iP¨ít
 = 
pSubôem
->
iCurs‹
;

3381 
pSub
 = 
pSubôem
->
pSñe˘
;

3382 
	`as£π
–
pSub
!=0 );

3383 if–
subquîyIsAgg
 ){

3384 if–
isAgg
 )  0;

3385 if–
pSrc
->
nSrc
>1 )  0;

3386 if–(
p
->
pWhîe
 && 
	`Ex¥HasPr›îty
’->pWhîe,
EP_Subquîy
))

3387 || (
	`sqlôe3Ex¥Li°Fœgs
(
p
->
pELi°
Ë& 
EP_Subquîy
)!=0

3388 || (
	`sqlôe3Ex¥Li°Fœgs
(
p
->
pOrdîBy
Ë& 
EP_Subquîy
)!=0

3394 
pSubSrc
 = 
pSub
->
pSrc
;

3395 
	`as£π
–
pSubSrc
 );

3401 if–
pSub
->
pLimô
 && 
p
->pLimit )  0;

3402 if–
pSub
->
pOff£t
 )  0;

3403 if–(
p
->
£lFœgs
 & 
SF_Compound
)!=0 && 
pSub
->
pLimô
 ){

3406 if–
pSubSrc
->
nSrc
==0 )  0;

3407 if–
pSub
->
£lFœgs
 & 
SF_Di°ö˘
 )  0;

3408 if–
pSub
->
pLimô
 && (
pSrc
->
nSrc
>1 || 
isAgg
) ){

3411 if–(
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 && 
subquîyIsAgg
 ){

3414 if–
p
->
pOrdîBy
 && 
pSub
->pOrderBy ){

3417 if–
isAgg
 && 
pSub
->
pOrdîBy
 )  0;

3418 if–
pSub
->
pLimô
 && 
p
->
pWhîe
 )  0;

3419 if–
pSub
->
pLimô
 && (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 ){

3422 
	`ã°ˇ£
–
pSub
->
£lFœgs
 & 
SF_Recursive
 );

3423 
	`ã°ˇ£
–
pSub
->
£lFœgs
 & 
SF_MöMaxAgg
 );

3424 if–
pSub
->
£lFœgs
 & (
SF_Recursive
|
SF_MöMaxAgg
) ){

3427 if–(
p
->
£lFœgs
 & 
SF_Recursive
Ë&& 
pSub
->
pPri‹
 ){

3463 if–(
pSubôem
->
fg
.
joöty≥
 & 
JT_OUTER
)!=0 ){

3472 if–
pSub
->
pPri‹
 ){

3473 if–
pSub
->
pOrdîBy
 ){

3476 if–
isAgg
 || (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0 || 
pSrc
->
nSrc
!=1 ){

3479 
pSub1
=
pSub
;ÖSub1;ÖSub1ıSub1->
pPri‹
){

3480 
	`ã°ˇ£
–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct );

3481 
	`ã°ˇ£
–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Aggregate );

3482 
	`as£π
–
pSub
->
pSrc
!=0 );

3483 
	`as£π
–
pSub
->
pELi°
->
nEx¥
==
pSub1
->pEList->nExpr );

3484 if–(
pSub1
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))!=0

3485 || (
pSub1
->
pPri‹
 &&ÖSub1->
›
!=
TK_ALL
)

3486 || 
pSub1
->
pSrc
->
nSrc
<1

3490 
	`ã°ˇ£
–
pSub1
->
pSrc
->
nSrc
>1 );

3494 if–
p
->
pOrdîBy
 ){

3495 
ii
;

3496 
ii
=0; ii<
p
->
pOrdîBy
->
nEx¥
; ii++){

3497 if–
p
->
pOrdîBy
->
a
[
ii
].
u
.
x
.
iOrdîByCﬁ
==0 )  0;

3503 
	`SELECTTRACE
(1,
pP¨£
,
p
,("flatten %s.%p fromÅerm %d\n",

3504 
pSub
->
zSñName
,ÖSub, 
iFrom
));

3507 
pP¨£
->
zAuthC⁄ãxt
 = 
pSubôem
->
zName
;

3508 
	`TESTONLY
(
i
 =Ë
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SELECT
, 0, 0, 0);

3509 
	`ã°ˇ£
–
i
==
SQLITE_DENY
 );

3510 
pP¨£
->
zAuthC⁄ãxt
 = 
zSavedAuthC⁄ãxt
;

3545 
pSub
ıSub->
pPri‹
;ÖSub;ÖSub=pSub->pPrior){

3546 
Sñe˘
 *
pNew
;

3547 
Ex¥Li°
 *
pOrdîBy
 = 
p
->pOrderBy;

3548 
Ex¥
 *
pLimô
 = 
p
->pLimit;

3549 
Ex¥
 *
pOff£t
 = 
p
->pOffset;

3550 
Sñe˘
 *
pPri‹
 = 
p
->pPrior;

3551 
p
->
pOrdîBy
 = 0;

3552 
p
->
pSrc
 = 0;

3553 
p
->
pPri‹
 = 0;

3554 
p
->
pLimô
 = 0;

3555 
p
->
pOff£t
 = 0;

3556 
pNew
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
p
, 0);

3557 
	`sqlôe3Sñe˘SëName
(
pNew
, 
pSub
->
zSñName
);

3558 
p
->
pOff£t
 =ÖOffset;

3559 
p
->
pLimô
 =ÖLimit;

3560 
p
->
pOrdîBy
 =ÖOrderBy;

3561 
p
->
pSrc
 =ÖSrc;

3562 
p
->
›
 = 
TK_ALL
;

3563 if–
pNew
==0 ){

3564 
p
->
pPri‹
 =ÖPrior;

3566 
pNew
->
pPri‹
 =ÖPrior;

3567 if–
pPri‹
 )ÖPri‹->
pNext
 = 
pNew
;

3568 
pNew
->
pNext
 = 
p
;

3569 
p
->
pPri‹
 = 
pNew
;

3570 
	`SELECTTRACE
(2,
pP¨£
,
p
,

3572 
pNew
->
zSñName
,ÖNew));

3574 if–
db
->
mÆlocFaûed
 )  1;

3580 
pSub
 = 
pSub1
 = 
pSubôem
->
pSñe˘
;

3585 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zD©aba£
);

3586 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zName
);

3587 
	`sqlôe3DbFªe
(
db
, 
pSubôem
->
zAlüs
);

3588 
pSubôem
->
zD©aba£
 = 0;

3589 
pSubôem
->
zName
 = 0;

3590 
pSubôem
->
zAlüs
 = 0;

3591 
pSubôem
->
pSñe˘
 = 0;

3600 if–
	`ALWAYS
(
pSubôem
->
pTab
!=0) ){

3601 
TabÀ
 *
pTabToDñ
 = 
pSubôem
->
pTab
;

3602 if–
pTabToDñ
->
nRef
==1 ){

3603 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

3604 
pTabToDñ
->
pNextZombõ
 = 
pT›Àvñ
->
pZombõTab
;

3605 
pT›Àvñ
->
pZombõTab
 = 
pTabToDñ
;

3607 
pTabToDñ
->
nRef
--;

3609 
pSubôem
->
pTab
 = 0;

3625 
pP¨ít
=
p
;ÖP¨ít;ÖP¨ítıP¨ít->
pPri‹
, 
pSub
=pSub->pPrior){

3626 
nSubSrc
;

3627 
u8
 
joöty≥
 = 0;

3628 
pSubSrc
 = 
pSub
->
pSrc
;

3629 
nSubSrc
 = 
pSubSrc
->
nSrc
;

3630 
pSrc
 = 
pP¨ít
->pSrc;

3632 if–
pSrc
 ){

3633 
	`as£π
–
pP¨ít
==
p
 );

3634 
joöty≥
 = 
pSubôem
->
fg
.jointype;

3636 
	`as£π
–
pP¨ít
!=
p
 );

3637 
pSrc
 = 
pP¨ít
->pSr¯
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

3638 if–
pSrc
==0 ){

3639 
	`as£π
–
db
->
mÆlocFaûed
 );

3659 if–
nSubSrc
>1 ){

3660 
pP¨ít
->
pSrc
 =ÖSr¯
	`sqlôe3SrcLi°E∆¨ge
(
db
,ÖSrc, 
nSubSrc
-1,
iFrom
+1);

3661 if–
db
->
mÆlocFaûed
 ){

3669 
i
=0; i<
nSubSrc
; i++){

3670 
	`sqlôe3IdLi°Dñëe
(
db
, 
pSrc
->
a
[
i
+
iFrom
].
pUsög
);

3671 
	`as£π
–
pSrc
->
a
[
i
+
iFrom
].
fg
.
isTabFunc
==0 );

3672 
pSrc
->
a
[
i
+
iFrom
] = 
pSubSrc
->a[i];

3673 
	`mem£t
(&
pSubSrc
->
a
[
i
], 0, (pSubSrc->a[i]));

3675 
pSrc
->
a
[
iFrom
].
fg
.
joöty≥
 = jointype;

3689 
pLi°
 = 
pP¨ít
->
pELi°
;

3690 
i
=0; i<
pLi°
->
nEx¥
; i++){

3691 if–
pLi°
->
a
[
i
].
zName
==0 ){

3692 *
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pLi°
->
a
[
i
].
zS∑n
);

3693 
	`sqlôe3DequŸe
(
zName
);

3694 
pLi°
->
a
[
i
].
zName
 = zName;

3697 if–
pSub
->
pOrdîBy
 ){

3708 
Ex¥Li°
 *
pOrdîBy
 = 
pSub
->pOrderBy;

3709 
i
=0; i<
pOrdîBy
->
nEx¥
; i++){

3710 
pOrdîBy
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
 = 0;

3712 
	`as£π
–
pP¨ít
->
pOrdîBy
==0 );

3713 
	`as£π
–
pSub
->
pPri‹
==0 );

3714 
pP¨ít
->
pOrdîBy
 =ÖOrderBy;

3715 
pSub
->
pOrdîBy
 = 0;

3717 
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pSub
->pWhere, 0);

3718 if–
subquîyIsAgg
 ){

3719 
	`as£π
–
pP¨ít
->
pHavög
==0 );

3720 
pP¨ít
->
pHavög
 =ÖP¨ít->
pWhîe
;

3721 
pP¨ít
->
pWhîe
 =ÖWhere;

3722 
pP¨ít
->
pHavög
 = 
	`sqlôe3Ex¥And
(
db
,ÖParent->pHaving,

3723 
	`sqlôe3Ex¥Dup
(
db
, 
pSub
->
pHavög
, 0));

3724 
	`as£π
–
pP¨ít
->
pGroupBy
==0 );

3725 
pP¨ít
->
pGroupBy
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pSub
->pGroupBy, 0);

3727 
pP¨ít
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖParent->pWhere,ÖWhere);

3729 
	`sub°Sñe˘
(
db
, 
pP¨ít
, 
iP¨ít
, 
pSub
->
pELi°
, 0);

3734 
pP¨ít
->
£lFœgs
 |
pSub
->£lFœg†& 
SF_Di°ö˘
;

3742 if–
pSub
->
pLimô
 ){

3743 
pP¨ít
->
pLimô
 = 
pSub
->pLimit;

3744 
pSub
->
pLimô
 = 0;

3751 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSub1
);

3753 #i‡
SELECTTRACE_ENABLED


3754 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

3755 
	`SELECTTRACE
(0x100,
pP¨£
,
p
,("After flattening:\n"));

3756 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

3761 
	}
}

3766 #i‡!
deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

3802 
	$pushDownWhîeTîms
(

3803 
sqlôe3
 *
db
,

3804 
Sñe˘
 *
pSubq
,

3805 
Ex¥
 *
pWhîe
,

3806 
iCurs‹


3808 
Ex¥
 *
pNew
;

3809 
nChng
 = 0;

3810 
Sñe˘
 *
pX
;

3811 if–
pWhîe
==0 )  0;

3812 
pX
=
pSubq
;ÖX;ÖXıX->
pPri‹
){

3813 if–(
pX
->
£lFœgs
 & (
SF_Aggªg©e
|
SF_Recursive
))!=0 ){

3814 
	`ã°ˇ£
–
pX
->
£lFœgs
 & 
SF_Aggªg©e
 );

3815 
	`ã°ˇ£
–
pX
->
£lFœgs
 & 
SF_Recursive
 );

3816 
	`ã°ˇ£
–
pX
!=
pSubq
 );

3820 if–
pSubq
->
pLimô
!=0 ){

3823  
pWhîe
->
›
==
TK_AND
 ){

3824 
nChng
 +
	`pushDownWhîeTîms
(
db
, 
pSubq
, 
pWhîe
->
pRight
, 
iCurs‹
);

3825 
pWhîe
 =ÖWhîe->
pLe·
;

3827 if–
	`Ex¥HasPr›îty
(
pWhîe
,
EP_FromJoö
) )  0;

3828 if–
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
pWhîe
, 
iCurs‹
) ){

3829 
nChng
++;

3830  
pSubq
 ){

3831 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pWhîe
, 0);

3832 
pNew
 = 
	`sub°Ex¥
(
db
,ÖNew, 
iCurs‹
, 
pSubq
->
pELi°
);

3833 
pSubq
->
pWhîe
 = 
	`sqlôe3Ex¥And
(
db
,ÖSubq->pWhîe, 
pNew
);

3834 
pSubq
 =ÖSubq->
pPri‹
;

3837  
nChng
;

3838 
	}
}

3856 
u8
 
	$möMaxQuîy
(
AggInfo
 *
pAggInfo
, 
Ex¥Li°
 **
µMöMax
){

3857 
eRë
 = 
WHERE_ORDERBY_NORMAL
;

3859 *
µMöMax
 = 0;

3860 if–
pAggInfo
->
nFunc
==1 ){

3861 
Ex¥
 *
pEx¥
 = 
pAggInfo
->
aFunc
[0].pExpr;

3862 
Ex¥Li°
 *
pELi°
 = 
pEx¥
->
x
.
pLi°
;

3864 
	`as£π
–
pEx¥
->
›
==
TK_AGG_FUNCTION
 );

3865 if–
pELi°
 &&ÖELi°->
nEx¥
==1 &&ÖELi°->
a
[0].
pEx¥
->
›
==
TK_AGG_COLUMN
 ){

3866 c⁄° *
zFunc
 = 
pEx¥
->
u
.
zTokí
;

3867 if–
	`sqlôe3SåICmp
(
zFunc
, "min")==0 ){

3868 
eRë
 = 
WHERE_ORDERBY_MIN
;

3869 *
µMöMax
 = 
pELi°
;

3870 }if–
	`sqlôe3SåICmp
(
zFunc
, "max")==0 ){

3871 
eRë
 = 
WHERE_ORDERBY_MAX
;

3872 *
µMöMax
 = 
pELi°
;

3877 
	`as£π
–*
µMöMax
==0 || (*µMöMax)->
nEx¥
==1 );

3878  
eRë
;

3879 
	}
}

3892 
TabÀ
 *
	$isSim∂eCou¡
(
Sñe˘
 *
p
, 
AggInfo
 *
pAggInfo
){

3893 
TabÀ
 *
pTab
;

3894 
Ex¥
 *
pEx¥
;

3896 
	`as£π
–!
p
->
pGroupBy
 );

3898 if–
p
->
pWhîe
 ||Ö->
pELi°
->
nEx¥
!=1

3899 || 
p
->
pSrc
->
nSrc
!=1 ||Ö->pSrc->
a
[0].
pSñe˘


3903 
pTab
 = 
p
->
pSrc
->
a
[0].pTab;

3904 
pEx¥
 = 
p
->
pELi°
->
a
[0].pExpr;

3905 
	`as£π
–
pTab
 && !pTab->
pSñe˘
 && 
pEx¥
 );

3907 if–
	`IsVútuÆ
(
pTab
) )  0;

3908 if–
pEx¥
->
›
!=
TK_AGG_FUNCTION
 )  0;

3909 if–
	`NEVER
(
pAggInfo
->
nFunc
==0) )  0;

3910 if–(
pAggInfo
->
aFunc
[0].
pFunc
->
funcFœgs
&
SQLITE_FUNC_COUNT
)==0 )  0;

3911 if–
pEx¥
->
Êags
&
EP_Di°ö˘
 )  0;

3913  
pTab
;

3914 
	}
}

3923 
	$sqlôe3IndexedByLookup
(
P¨£
 *
pP¨£
, 
SrcLi°_ôem
 *
pFrom
){

3924 if–
pFrom
->
pTab
 &&ÖFrom->
fg
.
isIndexedBy
 ){

3925 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

3926 *
zIndexedBy
 = 
pFrom
->
u1
.zIndexedBy;

3927 
Index
 *
pIdx
;

3928 
pIdx
=
pTab
->
pIndex
;

3929 
pIdx
 && 
	`sqlôe3SåICmp
’Idx->
zName
, 
zIndexedBy
);

3930 
pIdx
ıIdx->
pNext


3932 if–!
pIdx
 ){

3933 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch index: %s", 
zIndexedBy
, 0);

3934 
pP¨£
->
checkSchema
 = 1;

3935  
SQLITE_ERROR
;

3937 
pFrom
->
pIBIndex
 = 
pIdx
;

3939  
SQLITE_OK
;

3940 
	}
}

3962 
	$c⁄vîtCompoundSñe˘ToSubquîy
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

3963 
i
;

3964 
Sñe˘
 *
pNew
;

3965 
Sñe˘
 *
pX
;

3966 
sqlôe3
 *
db
;

3967 
Ex¥Li°_ôem
 *
a
;

3968 
SrcLi°
 *
pNewSrc
;

3969 
P¨£
 *
pP¨£
;

3970 
Tokí
 
dummy
;

3972 if–
p
->
pPri‹
==0 )  
WRC_C⁄töue
;

3973 if–
p
->
pOrdîBy
==0 )  
WRC_C⁄töue
;

3974 
pX
=
p
;ÖX && (pX->
›
==
TK_ALL
 ||ÖX->›==
TK_SELECT
);ÖXıX->
pPri‹
){}

3975 if–
pX
==0 )  
WRC_C⁄töue
;

3976 
a
 = 
p
->
pOrdîBy
->a;

3977 
i
=
p
->
pOrdîBy
->
nEx¥
-1; i>=0; i--){

3978 if–
a
[
i
].
pEx¥
->
Êags
 & 
EP_Cﬁœã
 ) ;

3980 if–
i
<0 )  
WRC_C⁄töue
;

3984 
pP¨£
 = 
pWÆkî
->pParse;

3985 
db
 = 
pP¨£
->db;

3986 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pNew) );

3987 if–
pNew
==0 )  
WRC_Ab‹t
;

3988 
	`mem£t
(&
dummy
, 0, (dummy));

3989 
pNewSrc
 = 
	`sqlôe3SrcLi°AµídFromTîm
(
pP¨£
,0,0,0,&
dummy
,
pNew
,0,0);

3990 if–
pNewSrc
==0 )  
WRC_Ab‹t
;

3991 *
pNew
 = *
p
;

3992 
p
->
pSrc
 = 
pNewSrc
;

3993 
p
->
pELi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
, 0, 
	`sqlôe3Ex¥
(
db
, 
TK_ASTERISK
, 0));

3994 
p
->
›
 = 
TK_SELECT
;

3995 
p
->
pWhîe
 = 0;

3996 
pNew
->
pGroupBy
 = 0;

3997 
pNew
->
pHavög
 = 0;

3998 
pNew
->
pOrdîBy
 = 0;

3999 
p
->
pPri‹
 = 0;

4000 
p
->
pNext
 = 0;

4001 
p
->
pWôh
 = 0;

4002 
p
->
£lFœgs
 &~
SF_Compound
;

4003 
	`as£π
–(
p
->
£lFœgs
 & 
SF_C⁄vîãd
)==0 );

4004 
p
->
£lFœgs
 |
SF_C⁄vîãd
;

4005 
	`as£π
–
pNew
->
pPri‹
!=0 );

4006 
pNew
->
pPri‹
->
pNext
 =ÖNew;

4007 
pNew
->
pLimô
 = 0;

4008 
pNew
->
pOff£t
 = 0;

4009  
WRC_C⁄töue
;

4010 
	}
}

4017 
	$ˇ¬ŸBeFun˘i⁄
(
P¨£
 *
pP¨£
, 
SrcLi°_ôem
 *
pFrom
){

4018 if–
pFrom
->
fg
.
isTabFunc
 ){

4019 
	`sqlôe3Eº‹Msg
(
pP¨£
, "'%s' i†nŸá fun˘i⁄", 
pFrom
->
zName
);

4023 
	}
}

4025 #i‚de‡
SQLITE_OMIT_CTE


4036 
Cã
 *
	$£¨chWôh
(

4037 
Wôh
 *
pWôh
,

4038 
SrcLi°_ôem
 *
pIãm
,

4039 
Wôh
 **
µC⁄ãxt


4041 c⁄° *
zName
;

4042 if–
pIãm
->
zD©aba£
==0 && (
zName
 =ÖItem->zName)!=0 ){

4043 
Wôh
 *
p
;

4044 
p
=
pWôh
;Ö;Öı->
pOuãr
){

4045 
i
;

4046 
i
=0; i<
p
->
nCã
; i++){

4047 if–
	`sqlôe3SåICmp
(
zName
, 
p
->
a
[
i
].zName)==0 ){

4048 *
µC⁄ãxt
 = 
p
;

4049  &
p
->
a
[
i
];

4055 
	}
}

4067 
	$sqlôe3WôhPush
(
P¨£
 *
pP¨£
, 
Wôh
 *
pWôh
, 
u8
 
bFªe
){

4068 
	`as£π
–
bFªe
==0 || (
pP¨£
->
pWôh
==0 &&ÖP¨£->
pWôhToFªe
==0) );

4069 if–
pWôh
 ){

4070 
	`as£π
–
pP¨£
->
pWôh
!=pWith );

4071 
pWôh
->
pOuãr
 = 
pP¨£
->pWith;

4072 
pP¨£
->
pWôh
 =ÖWith;

4073 if–
bFªe
 ) 
pP¨£
->
pWôhToFªe
 = 
pWôh
;

4075 
	}
}

4092 
	$wôhEx∑nd
(

4093 
WÆkî
 *
pWÆkî
,

4094 
SrcLi°_ôem
 *
pFrom


4096 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4097 
sqlôe3
 *
db
 = 
pP¨£
->db;

4098 
Cã
 *
pCã
;

4099 
Wôh
 *
pWôh
;

4101 
	`as£π
–
pFrom
->
pTab
==0 );

4103 
pCã
 = 
	`£¨chWôh
(
pP¨£
->
pWôh
, 
pFrom
, &pWith);

4104 if–
pCã
 ){

4105 
TabÀ
 *
pTab
;

4106 
Ex¥Li°
 *
pELi°
;

4107 
Sñe˘
 *
pSñ
;

4108 
Sñe˘
 *
pLe·
;

4109 
bMayRecursive
;

4110 
Wôh
 *
pSavedWôh
;

4116 if–
pCã
->
zCãEº
 ){

4117 
	`sqlôe3Eº‹Msg
(
pP¨£
, 
pCã
->
zCãEº
,ÖCã->
zName
);

4118  
SQLITE_ERROR
;

4120 if–
	`ˇ¬ŸBeFun˘i⁄
(
pP¨£
, 
pFrom
ËË 
SQLITE_ERROR
;

4122 
	`as£π
–
pFrom
->
pTab
==0 );

4123 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

4124 if–
pTab
==0 )  
WRC_Ab‹t
;

4125 
pTab
->
nRef
 = 1;

4126 
pTab
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pCã
->zName);

4127 
pTab
->
iPKey
 = -1;

4128 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

4129 
pTab
->
èbFœgs
 |
TF_EphemîÆ
 | 
TF_NoVisibÀRowid
;

4130 
pFrom
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pCã
->pSelect, 0);

4131 if–
db
->
mÆlocFaûed
 )  
SQLITE_NOMEM_BKPT
;

4132 
	`as£π
–
pFrom
->
pSñe˘
 );

4135 
pSñ
 = 
pFrom
->
pSñe˘
;

4136 
bMayRecursive
 = ( 
pSñ
->
›
==
TK_ALL
 ||ÖSñ->›==
TK_UNION
 );

4137 if–
bMayRecursive
 ){

4138 
i
;

4139 
SrcLi°
 *
pSrc
 = 
pFrom
->
pSñe˘
->pSrc;

4140 
i
=0; i<
pSrc
->
nSrc
; i++){

4141 
SrcLi°_ôem
 *
pIãm
 = &
pSrc
->
a
[
i
];

4142 if–
pIãm
->
zD©aba£
==0

4143 && 
pIãm
->
zName
!=0

4144 && 0==
	`sqlôe3SåICmp
(
pIãm
->
zName
, 
pCã
->zName)

4146 
pIãm
->
pTab
 =ÖTab;

4147 
pIãm
->
fg
.
isRecursive
 = 1;

4148 
pTab
->
nRef
++;

4149 
pSñ
->
£lFœgs
 |
SF_Recursive
;

4155 if–
pTab
->
nRef
>2 ){

4156 
	`sqlôe3Eº‹Msg
(

4157 
pP¨£
, "mu…ùÀÑe„ªn˚†tÿªcursivêèbÀ: %s", 
pCã
->
zName


4159  
SQLITE_ERROR
;

4161 
	`as£π
–
pTab
->
nRef
==1 || ((
pSñ
->
£lFœgs
&
SF_Recursive
) &&ÖTab->nRef==2 ));

4163 
pCã
->
zCãEº
 = "circularÑeference: %s";

4164 
pSavedWôh
 = 
pP¨£
->
pWôh
;

4165 
pP¨£
->
pWôh
 =ÖWith;

4166 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
bMayRecursive
 ? 
pSñ
->
pPri‹
 :ÖSel);

4167 
pP¨£
->
pWôh
 =ÖWith;

4169 
pLe·
=
pSñ
;ÖLe·->
pPri‹
;ÖLeft=pLeft->pPrior);

4170 
pELi°
 = 
pLe·
->pEList;

4171 if–
pCã
->
pCﬁs
 ){

4172 if–
pELi°
 &&ÖELi°->
nEx¥
!=
pCã
->
pCﬁs
->nExpr ){

4173 
	`sqlôe3Eº‹Msg
(
pP¨£
, "table %s has %d values for %d columns",

4174 
pCã
->
zName
, 
pELi°
->
nEx¥
,ÖCã->
pCﬁs
->nExpr

4176 
pP¨£
->
pWôh
 = 
pSavedWôh
;

4177  
SQLITE_ERROR
;

4179 
pELi°
 = 
pCã
->
pCﬁs
;

4182 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pELi°
, &
pTab
->
nCﬁ
, &pTab->
aCﬁ
);

4183 if–
bMayRecursive
 ){

4184 if–
pSñ
->
£lFœgs
 & 
SF_Recursive
 ){

4185 
pCã
->
zCãEº
 = "multipleÑecursiveÑeferences: %s";

4187 
pCã
->
zCãEº
 = "recursiveÑeference iná subquery: %s";

4189 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pSñ
);

4191 
pCã
->
zCãEº
 = 0;

4192 
pP¨£
->
pWôh
 = 
pSavedWôh
;

4195  
SQLITE_OK
;

4196 
	}
}

4199 #i‚de‡
SQLITE_OMIT_CTE


4208 
	$£À˘P›Wôh
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4209 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4210 
Wôh
 *
pWôh
 = 
	`födRightmo°
(
p
)->pWith;

4211 if–
pWôh
!=0 ){

4212 
	`as£π
–
pP¨£
->
pWôh
==pWith );

4213 
pP¨£
->
pWôh
 =ÖWôh->
pOuãr
;

4215 
	}
}

4217 
	#£À˘P›Wôh
 0

	)

4244 
	$£À˘Ex∑ndî
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4245 
P¨£
 *
pP¨£
 = 
pWÆkî
->pParse;

4246 
i
, 
j
, 
k
;

4247 
SrcLi°
 *
pTabLi°
;

4248 
Ex¥Li°
 *
pELi°
;

4249 
SrcLi°_ôem
 *
pFrom
;

4250 
sqlôe3
 *
db
 = 
pP¨£
->db;

4251 
Ex¥
 *
pE
, *
pRight
, *
pEx¥
;

4252 
u16
 
£lFœgs
 = 
p
->selFlags;

4254 
p
->
£lFœgs
 |
SF_Ex∑nded
;

4255 if–
db
->
mÆlocFaûed
 ){

4256  
WRC_Ab‹t
;

4258 if–
	`NEVER
(
p
->
pSrc
==0Ë|| (
£lFœgs
 & 
SF_Ex∑nded
)!=0 ){

4259  
WRC_Pru√
;

4261 
pTabLi°
 = 
p
->
pSrc
;

4262 
pELi°
 = 
p
->pEList;

4263 if–
pWÆkî
->
xSñe˘CÆlback2
==
£À˘P›Wôh
 ){

4264 
	`sqlôe3WôhPush
(
pP¨£
, 
	`födRightmo°
(
p
)->
pWôh
, 0);

4270 
	`sqlôe3SrcLi°AssignCurs‹s
(
pP¨£
, 
pTabLi°
);

4276 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4277 
TabÀ
 *
pTab
;

4278 
	`as£π
–
pFrom
->
fg
.
isRecursive
==0 ||ÖFrom->
pTab
!=0 );

4279 if–
pFrom
->
fg
.
isRecursive
 ) ;

4280 
	`as£π
–
pFrom
->
pTab
==0 );

4281 #i‚de‡
SQLITE_OMIT_CTE


4282 if–
	`wôhEx∑nd
(
pWÆkî
, 
pFrom
ËË 
WRC_Ab‹t
;

4283 if–
pFrom
->
pTab
 ) {} 

4285 if–
pFrom
->
zName
==0 ){

4286 #i‚de‡
SQLITE_OMIT_SUBQUERY


4287 
Sñe˘
 *
pSñ
 = 
pFrom
->
pSñe˘
;

4289 
	`as£π
–
pSñ
!=0 );

4290 
	`as£π
–
pFrom
->
pTab
==0 );

4291 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pSñ
ËË 
WRC_Ab‹t
;

4292 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

4293 if–
pTab
==0 )  
WRC_Ab‹t
;

4294 
pTab
->
nRef
 = 1;

4295 
pTab
->
zName
 = 
	`sqlôe3MPrötf
(
db
, "sqlite_sq_%p", (*)pTab);

4296  
pSñ
->
pPri‹
 ){ÖSel =ÖSel->pPrior; }

4297 
	`sqlôe3CﬁumnsFromEx¥Li°
(
pP¨£
, 
pSñ
->
pELi°
,&
pTab
->
nCﬁ
,&pTab->
aCﬁ
);

4298 
pTab
->
iPKey
 = -1;

4299 
pTab
->
nRowLogE°
 = 200; 
	`as£π
–200==
	`sqlôe3LogE°
(1048576) );

4300 
pTab
->
èbFœgs
 |
TF_EphemîÆ
;

4304 
	`as£π
–
pFrom
->
pTab
==0 );

4305 
pFrom
->
pTab
 =ÖTab = 
	`sqlôe3LoˇãTabÀIãm
(
pP¨£
, 0,ÖFrom);

4306 if–
pTab
==0 )  
WRC_Ab‹t
;

4307 if–
pTab
->
nRef
==0xffff ){

4308 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyÑeferencesÅo \"%s\": max 65535",

4309 
pTab
->
zName
);

4310 
pFrom
->
pTab
 = 0;

4311  
WRC_Ab‹t
;

4313 
pTab
->
nRef
++;

4314 if–!
	`IsVútuÆ
(
pTab
Ë&& 
	`ˇ¬ŸBeFun˘i⁄
(
pP¨£
, 
pFrom
) ){

4315  
WRC_Ab‹t
;

4317 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed (
SQLITE_OMIT_VIRTUALTABLE
)

4318 if–
	`IsVútuÆ
(
pTab
Ë||ÖTab->
pSñe˘
 ){

4319 
i16
 
nCﬁ
;

4320 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
ËË 
WRC_Ab‹t
;

4321 
	`as£π
–
pFrom
->
pSñe˘
==0 );

4322 
pFrom
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pTab
->pSelect, 0);

4323 
	`sqlôe3Sñe˘SëName
(
pFrom
->
pSñe˘
, 
pTab
->
zName
);

4324 
nCﬁ
 = 
pTab
->nCol;

4325 
pTab
->
nCﬁ
 = -1;

4326 
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pFrom
->
pSñe˘
);

4327 
pTab
->
nCﬁ
 =ÇCol;

4333 if–
	`sqlôe3IndexedByLookup
(
pP¨£
, 
pFrom
) ){

4334  
WRC_Ab‹t
;

4340 if–
db
->
mÆlocFaûed
 || 
	`sqlôePro˚ssJoö
(
pP¨£
, 
p
) ){

4341  
WRC_Ab‹t
;

4355 
k
=0; k<
pELi°
->
nEx¥
; k++){

4356 
pE
 = 
pELi°
->
a
[
k
].
pEx¥
;

4357 if–
pE
->
›
==
TK_ASTERISK
 ) ;

4358 
	`as£π
–
pE
->
›
!=
TK_DOT
 ||ÖE->
pRight
!=0 );

4359 
	`as£π
–
pE
->
›
!=
TK_DOT
 || (pE->
pLe·
!=0 &&ÖE->pLe·->›==
TK_ID
) );

4360 if–
pE
->
›
==
TK_DOT
 &&ÖE->
pRight
->›==
TK_ASTERISK
 ) ;

4362 if–
k
<
pELi°
->
nEx¥
 ){

4368 
Ex¥Li°_ôem
 *
a
 = 
pELi°
->a;

4369 
Ex¥Li°
 *
pNew
 = 0;

4370 
Êags
 = 
pP¨£
->
db
->flags;

4371 
l⁄gNames
 = (
Êags
 & 
SQLITE_FuŒCﬁNames
)!=0

4372 && (
Êags
 & 
SQLITE_Sh‹tCﬁNames
)==0;

4374 
k
=0; k<
pELi°
->
nEx¥
; k++){

4375 
pE
 = 
a
[
k
].
pEx¥
;

4376 
pRight
 = 
pE
->pRight;

4377 
	`as£π
–
pE
->
›
!=
TK_DOT
 || 
pRight
!=0 );

4378 if–
pE
->
›
!=
TK_ASTERISK


4379 && (
pE
->
›
!=
TK_DOT
 || 
pRight
->›!=
TK_ASTERISK
)

4383 
pNew
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖNew, 
a
[
k
].
pEx¥
);

4384 if–
pNew
 ){

4385 
pNew
->
a
[pNew->
nEx¥
-1].
zName
 =á[
k
].zName;

4386 
pNew
->
a
[pNew->
nEx¥
-1].
zS∑n
 =á[
k
].zSpan;

4387 
a
[
k
].
zName
 = 0;

4388 
a
[
k
].
zS∑n
 = 0;

4390 
a
[
k
].
pEx¥
 = 0;

4394 
èbÀSìn
 = 0;

4395 *
zTName
 = 0;

4396 if–
pE
->
›
==
TK_DOT
 ){

4397 
	`as£π
–
pE
->
pLe·
!=0 );

4398 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
->
pLe·
, 
EP_I¡VÆue
) );

4399 
zTName
 = 
pE
->
pLe·
->
u
.
zTokí
;

4401 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4402 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

4403 
Sñe˘
 *
pSub
 = 
pFrom
->
pSñe˘
;

4404 *
zTabName
 = 
pFrom
->
zAlüs
;

4405 c⁄° *
zSchemaName
 = 0;

4406 
iDb
;

4407 if–
zTabName
==0 ){

4408 
zTabName
 = 
pTab
->
zName
;

4410 if–
db
->
mÆlocFaûed
 ) ;

4411 if–
pSub
==0 || (pSub->
£lFœgs
 & 
SF_Ne°edFrom
)==0 ){

4412 
pSub
 = 0;

4413 if–
zTName
 && 
	`sqlôe3SåICmp
(zTName, 
zTabName
)!=0 ){

4416 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

4417 
zSchemaName
 = 
iDb
>=0 ? 
db
->
aDb
[iDb].
zName
 : "*";

4419 
j
=0; j<
pTab
->
nCﬁ
; j++){

4420 *
zName
 = 
pTab
->
aCﬁ
[
j
].zName;

4421 *
zCﬁ«me
;

4422 *
zToFªe
;

4423 
Tokí
 
sCﬁ«me
;

4425 
	`as£π
–
zName
 );

4426 if–
zTName
 && 
pSub


4427 && 
	`sqlôe3M©chS∑nName
(
pSub
->
pELi°
->
a
[
j
].
zS∑n
, 0, 
zTName
, 0)==0

4436 if–(
p
->
£lFœgs
 & 
SF_In˛udeHiddí
)==0

4437 && 
	`IsHiddíCﬁumn
(&
pTab
->
aCﬁ
[
j
])

4441 
èbÀSìn
 = 1;

4443 if–
i
>0 && 
zTName
==0 ){

4444 if–(
pFrom
->
fg
.
joöty≥
 & 
JT_NATURAL
)!=0

4445 && 
	`èbÀAndCﬁumnIndex
(
pTabLi°
, 
i
, 
zName
, 0, 0)

4451 if–
	`sqlôe3IdLi°Index
(
pFrom
->
pUsög
, 
zName
)>=0 ){

4457 
pRight
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zName
);

4458 
zCﬁ«me
 = 
zName
;

4459 
zToFªe
 = 0;

4460 if–
l⁄gNames
 || 
pTabLi°
->
nSrc
>1 ){

4461 
Ex¥
 *
pLe·
;

4462 
pLe·
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zTabName
);

4463 
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
pLe·
, 
pRight
, 0);

4464 if–
zSchemaName
 ){

4465 
pLe·
 = 
	`sqlôe3Ex¥
(
db
, 
TK_ID
, 
zSchemaName
);

4466 
pEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_DOT
, 
pLe·
,ÖExpr, 0);

4468 if–
l⁄gNames
 ){

4469 
zCﬁ«me
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s", 
zTabName
, 
zName
);

4470 
zToFªe
 = 
zCﬁ«me
;

4473 
pEx¥
 = 
pRight
;

4475 
pNew
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pP¨£
,ÖNew, 
pEx¥
);

4476 
	`sqlôe3TokíInô
(&
sCﬁ«me
, 
zCﬁ«me
);

4477 
	`sqlôe3Ex¥Li°SëName
(
pP¨£
, 
pNew
, &
sCﬁ«me
, 0);

4478 if–
pNew
 && (
p
->
£lFœgs
 & 
SF_Ne°edFrom
)!=0 ){

4479 
Ex¥Li°_ôem
 *
pX
 = &
pNew
->
a
[pNew->
nEx¥
-1];

4480 if–
pSub
 ){

4481 
pX
->
zS∑n
 = 
	`sqlôe3DbSåDup
(
db
, 
pSub
->
pELi°
->
a
[
j
].zSpan);

4482 
	`ã°ˇ£
–
pX
->
zS∑n
==0 );

4484 
pX
->
zS∑n
 = 
	`sqlôe3MPrötf
(
db
, "%s.%s.%s",

4485 
zSchemaName
, 
zTabName
, 
zCﬁ«me
);

4486 
	`ã°ˇ£
–
pX
->
zS∑n
==0 );

4488 
pX
->
bS∑nIsTab
 = 1;

4490 
	`sqlôe3DbFªe
(
db
, 
zToFªe
);

4493 if–!
èbÀSìn
 ){

4494 if–
zTName
 ){

4495 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuchÅabÀ: %s", 
zTName
);

4497 
	`sqlôe3Eº‹Msg
(
pP¨£
, "noÅables specified");

4502 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pELi°
);

4503 
p
->
pELi°
 = 
pNew
;

4505 #i‡
SQLITE_MAX_COLUMN


4506 if–
p
->
pELi°
 &&Ö->pELi°->
nEx¥
>
db
->
aLimô
[
SQLITE_LIMIT_COLUMN
] ){

4507 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too many columns inÑesult set");

4508  
WRC_Ab‹t
;

4511  
WRC_C⁄töue
;

4512 
	}
}

4523 
	$sqlôe3Ex¥WÆkNo›
(
WÆkî
 *
NŸU£d
, 
Ex¥
 *
NŸU£d2
){

4524 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

4525  
WRC_C⁄töue
;

4526 
	}
}

4541 
	$sqlôe3Sñe˘Ex∑nd
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

4542 
WÆkî
 
w
;

4543 
	`mem£t
(&
w
, 0, (w));

4544 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

4545 
w
.
pP¨£
 =ÖParse;

4546 if–
pP¨£
->
hasCompound
 ){

4547 
w
.
xSñe˘CÆlback
 = 
c⁄vîtCompoundSñe˘ToSubquîy
;

4548 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4550 
w
.
xSñe˘CÆlback
 = 
£À˘Ex∑ndî
;

4551 if–(
pSñe˘
->
£lFœgs
 & 
SF_Mu…iVÆue
)==0 ){

4552 
w
.
xSñe˘CÆlback2
 = 
£À˘P›Wôh
;

4554 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4555 
	}
}

4558 #i‚de‡
SQLITE_OMIT_SUBQUERY


4572 
	$£À˘AddSubquîyTy≥Info
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

4573 
P¨£
 *
pP¨£
;

4574 
i
;

4575 
SrcLi°
 *
pTabLi°
;

4576 
SrcLi°_ôem
 *
pFrom
;

4578 
	`as£π
–
p
->
£lFœgs
 & 
SF_Resﬁved
 );

4579 
	`as£π
–(
p
->
£lFœgs
 & 
SF_HasTy≥Info
)==0 );

4580 
p
->
£lFœgs
 |
SF_HasTy≥Info
;

4581 
pP¨£
 = 
pWÆkî
->pParse;

4582 
pTabLi°
 = 
p
->
pSrc
;

4583 
i
=0, 
pFrom
=
pTabLi°
->
a
; i<pTabLi°->
nSrc
; i++,ÖFrom++){

4584 
TabÀ
 *
pTab
 = 
pFrom
->pTab;

4585 
	`as£π
–
pTab
!=0 );

4586 if–(
pTab
->
èbFœgs
 & 
TF_EphemîÆ
)!=0 ){

4588 
Sñe˘
 *
pSñ
 = 
pFrom
->
pSñe˘
;

4589 if–
pSñ
 ){

4590  
pSñ
->
pPri‹
 )ÖSel =ÖSel->pPrior;

4591 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
pP¨£
, 
pTab
, 
pSñ
);

4595 
	}
}

4606 
	$sqlôe3Sñe˘AddTy≥Info
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
pSñe˘
){

4607 #i‚de‡
SQLITE_OMIT_SUBQUERY


4608 
WÆkî
 
w
;

4609 
	`mem£t
(&
w
, 0, (w));

4610 
w
.
xSñe˘CÆlback2
 = 
£À˘AddSubquîyTy≥Info
;

4611 
w
.
xEx¥CÆlback
 = 
sqlôe3Ex¥WÆkNo›
;

4612 
w
.
pP¨£
 =ÖParse;

4613 
	`sqlôe3WÆkSñe˘
(&
w
, 
pSñe˘
);

4615 
	}
}

4630 
	$sqlôe3Sñe˘Pªp
(

4631 
P¨£
 *
pP¨£
,

4632 
Sñe˘
 *
p
,

4633 
NameC⁄ãxt
 *
pOuãrNC


4635 
sqlôe3
 *
db
;

4636 if–
	`NEVER
(
p
==0) ) ;

4637 
db
 = 
pP¨£
->db;

4638 if–
db
->
mÆlocFaûed
 ) ;

4639 if–
p
->
£lFœgs
 & 
SF_HasTy≥Info
 ) ;

4640 
	`sqlôe3Sñe˘Ex∑nd
(
pP¨£
, 
p
);

4641 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

4642 
	`sqlôe3ResﬁveSñe˘Names
(
pP¨£
, 
p
, 
pOuãrNC
);

4643 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ) ;

4644 
	`sqlôe3Sñe˘AddTy≥Info
(
pP¨£
, 
p
);

4645 
	}
}

4655 
	$ª£tAccumuœt‹
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4656 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4657 
i
;

4658 
AggInfo_func
 *
pFunc
;

4659 
nReg
 = 
pAggInfo
->
nFunc
 +ÖAggInfo->
nCﬁumn
;

4660 if–
nReg
==0 ) ;

4661 #ifde‡
SQLITE_DEBUG


4664 
	`as£π
–
nReg
==
pAggInfo
->
mxReg
-pAggInfo->
mnReg
+1 );

4665 
i
=0; i<
pAggInfo
->
nCﬁumn
; i++){

4666 
	`as£π
–
pAggInfo
->
aCﬁ
[
i
].
iMem
>ıAggInfo->
mnReg


4667 && 
pAggInfo
->
aCﬁ
[
i
].
iMem
<ıAggInfo->
mxReg
 );

4669 
i
=0; i<
pAggInfo
->
nFunc
; i++){

4670 
	`as£π
–
pAggInfo
->
aFunc
[
i
].
iMem
>ıAggInfo->
mnReg


4671 && 
pAggInfo
->
aFunc
[
i
].
iMem
<ıAggInfo->
mxReg
 );

4674 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
pAggInfo
->
mnReg
,ÖAggInfo->
mxReg
);

4675 
pFunc
=
pAggInfo
->
aFunc
, 
i
=0; i<pAggInfo->
nFunc
; i++,ÖFunc++){

4676 if–
pFunc
->
iDi°ö˘
>=0 ){

4677 
Ex¥
 *
pE
 = 
pFunc
->
pEx¥
;

4678 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
, 
EP_xIsSñe˘
) );

4679 if–
pE
->
x
.
pLi°
==0 ||ÖE->x.pLi°->
nEx¥
!=1 ){

4680 
	`sqlôe3Eº‹Msg
(
pP¨£
, "DISTINCTággregates must haveÉxactly one "

4682 
pFunc
->
iDi°ö˘
 = -1;

4684 
KeyInfo
 *
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pE
->
x
.
pLi°
, 0, 0);

4685 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
, 
pFunc
->
iDi°ö˘
, 0, 0,

4686 (*)
pKeyInfo
, 
P4_KEYINFO
);

4690 
	}
}

4696 
	$föÆizeAggFun˘i⁄s
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4697 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4698 
i
;

4699 
AggInfo_func
 *
pF
;

4700 
i
=0, 
pF
=
pAggInfo
->
aFunc
; i<pAggInfo->
nFunc
; i++,ÖF++){

4701 
Ex¥Li°
 *
pLi°
 = 
pF
->
pEx¥
->
x
.pList;

4702 
	`as£π
–!
	`Ex¥HasPr›îty
(
pF
->
pEx¥
, 
EP_xIsSñe˘
) );

4703 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_AggFöÆ
, 
pF
->
iMem
, 
pLi°
 ?ÖLi°->
nEx¥
 : 0, 0,

4704 (*)
pF
->
pFunc
, 
P4_FUNCDEF
);

4706 
	}
}

4712 
	$upd©eAccumuœt‹
(
P¨£
 *
pP¨£
, 
AggInfo
 *
pAggInfo
){

4713 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4714 
i
;

4715 
ªgHô
 = 0;

4716 
addrHôTe°
 = 0;

4717 
AggInfo_func
 *
pF
;

4718 
AggInfo_cﬁ
 *
pC
;

4720 
pAggInfo
->
dúe˘Mode
 = 1;

4721 
i
=0, 
pF
=
pAggInfo
->
aFunc
; i<pAggInfo->
nFunc
; i++,ÖF++){

4722 
nArg
;

4723 
addrNext
 = 0;

4724 
ªgAgg
;

4725 
Ex¥Li°
 *
pLi°
 = 
pF
->
pEx¥
->
x
.pList;

4726 
	`as£π
–!
	`Ex¥HasPr›îty
(
pF
->
pEx¥
, 
EP_xIsSñe˘
) );

4727 if–
pLi°
 ){

4728 
nArg
 = 
pLi°
->
nEx¥
;

4729 
ªgAgg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nArg
);

4730 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pLi°
, 
ªgAgg
, 0, 
SQLITE_ECEL_DUP
);

4732 
nArg
 = 0;

4733 
ªgAgg
 = 0;

4735 if–
pF
->
iDi°ö˘
>=0 ){

4736 
addrNext
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4737 
	`ã°ˇ£
–
nArg
==0 );

4738 
	`ã°ˇ£
–
nArg
>1 );

4739 
	`codeDi°ö˘
(
pP¨£
, 
pF
->
iDi°ö˘
, 
addrNext
, 1, 
ªgAgg
);

4741 if–
pF
->
pFunc
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
 ){

4742 
CﬁlSeq
 *
pCﬁl
 = 0;

4743 
Ex¥Li°_ôem
 *
pIãm
;

4744 
j
;

4745 
	`as£π
–
pLi°
!=0 );

4746 
j
=0, 
pIãm
=
pLi°
->
a
; !
pCﬁl
 && j<
nArg
; j++,ÖItem++){

4747 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pIãm
->
pEx¥
);

4749 if–!
pCﬁl
 ){

4750 
pCﬁl
 = 
pP¨£
->
db
->
pDÊtCﬁl
;

4752 if–
ªgHô
==0 && 
pAggInfo
->
nAccumuœt‹
 )ÑegHô = ++
pP¨£
->
nMem
;

4753 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_CﬁlSeq
, 
ªgHô
, 0, 0, (*)
pCﬁl
, 
P4_COLLSEQ
);

4755 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_AggSãp0
, 0, 
ªgAgg
, 
pF
->
iMem
,

4756 (*)
pF
->
pFunc
, 
P4_FUNCDEF
);

4757 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
nArg
);

4758 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ªgAgg
, 
nArg
);

4759 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgAgg
, 
nArg
);

4760 if–
addrNext
 ){

4761 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrNext
);

4762 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4776 if–
ªgHô
 ){

4777 
addrHôTe°
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_If
, 
ªgHô
); 
	`VdbeCovîage
(v);

4779 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4780 
i
=0, 
pC
=
pAggInfo
->
aCﬁ
; i<pAggInfo->
nAccumuœt‹
; i++,ÖC++){

4781 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pC
->
pEx¥
,ÖC->
iMem
);

4783 
pAggInfo
->
dúe˘Mode
 = 0;

4784 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4785 if–
addrHôTe°
 ){

4786 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrHôTe°
);

4788 
	}
}

4794 #i‚de‡
SQLITE_OMIT_EXPLAIN


4795 
	$ex∂aöSim∂eCou¡
(

4796 
P¨£
 *
pP¨£
,

4797 
TabÀ
 *
pTab
,

4798 
Index
 *
pIdx


4800 if–
pP¨£
->
ex∂aö
==2 ){

4801 
bCovî
 = (
pIdx
!=0 && (
	`HasRowid
(
pTab
Ë|| !
	`IsPrim¨yKeyIndex
(pIdx)));

4802 *
zEqp
 = 
	`sqlôe3MPrötf
(
pP¨£
->
db
, "SCAN TABLE %s%s%s",

4803 
pTab
->
zName
,

4804 
bCovî
 ? " USING COVERING INDEX " : "",

4805 
bCovî
 ? 
pIdx
->
zName
 : ""

4807 
	`sqlôe3VdbeAddOp4
(

4808 
pP¨£
->
pVdbe
, 
OP_Ex∂aö
,ÖP¨£->
iSñe˘Id
, 0, 0, 
zEqp
, 
P4_DYNAMIC


4811 
	}
}

4813 
	#ex∂aöSim∂eCou¡
(
a
,
b
,
c
)

	)

4829 
	$sqlôe3Sñe˘
(

4830 
P¨£
 *
pP¨£
,

4831 
Sñe˘
 *
p
,

4832 
Sñe˘De°
 *
pDe°


4834 
i
, 
j
;

4835 
WhîeInfo
 *
pWInfo
;

4836 
Vdbe
 *
v
;

4837 
isAgg
;

4838 
Ex¥Li°
 *
pELi°
 = 0;

4839 
SrcLi°
 *
pTabLi°
;

4840 
Ex¥
 *
pWhîe
;

4841 
Ex¥Li°
 *
pGroupBy
;

4842 
Ex¥
 *
pHavög
;

4843 
rc
 = 1;

4844 
Di°ö˘Ctx
 
sDi°ö˘
;

4845 
S‹tCtx
 
sS‹t
;

4846 
AggInfo
 
sAggInfo
;

4847 
iEnd
;

4848 
sqlôe3
 *
db
;

4850 #i‚de‡
SQLITE_OMIT_EXPLAIN


4851 
iRe°‹eSñe˘Id
 = 
pP¨£
->
iSñe˘Id
;

4852 
pP¨£
->
iSñe˘Id
 =ÖP¨£->
iNextSñe˘Id
++;

4855 
db
 = 
pP¨£
->db;

4856 if–
p
==0 || 
db
->
mÆlocFaûed
 || 
pP¨£
->
nEº
 ){

4859 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_SELECT
, 0, 0, 0) )  1;

4860 
	`mem£t
(&
sAggInfo
, 0, (sAggInfo));

4861 #i‡
SELECTTRACE_ENABLED


4862 
pP¨£
->
nSñe˘Indít
++;

4863 
	`SELECTTRACE
(1,
pP¨£
,
p
, ("beginÖrocessing:\n"));

4864 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

4865 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

4869 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Di°Fifo
 );

4870 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Fifo
 );

4871 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Di°Queue
 );

4872 
	`as£π
–
p
->
pOrdîBy
==0 || 
pDe°
->
eDe°
!=
SRT_Queue
 );

4873 if–
	`Ign‹abÀOrdîby
(
pDe°
) ){

4874 
	`as£π
(
pDe°
->
eDe°
==
SRT_Exi°s
 ||ÖDe°->eDe°==
SRT_Uni⁄
 ||

4875 
pDe°
->
eDe°
==
SRT_Ex˚±
 ||ÖDe°->eDe°==
SRT_Disˇrd
 ||

4876 
pDe°
->
eDe°
==
SRT_Queue
 ||ÖDe°->eDe°==
SRT_Di°Fifo
 ||

4877 
pDe°
->
eDe°
==
SRT_Di°Queue
 ||ÖDe°->eDe°==
SRT_Fifo
);

4880 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
p
->
pOrdîBy
);

4881 
p
->
pOrdîBy
 = 0;

4882 
p
->
£lFœgs
 &~
SF_Di°ö˘
;

4884 
	`sqlôe3Sñe˘Pªp
(
pP¨£
, 
p
, 0);

4885 
	`mem£t
(&
sS‹t
, 0, (sSort));

4886 
sS‹t
.
pOrdîBy
 = 
p
->pOrderBy;

4887 
pTabLi°
 = 
p
->
pSrc
;

4888 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

4889 
£À˘_íd
;

4891 
	`as£π
–
p
->
pELi°
!=0 );

4892 
isAgg
 = (
p
->
£lFœgs
 & 
SF_Aggªg©e
)!=0;

4893 #i‡
SELECTTRACE_ENABLED


4894 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

4895 
	`SELECTTRACE
(0x100,
pP¨£
,
p
, ("afterÇameÑesolution:\n"));

4896 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

4904 #i‚de‡
SQLITE_OMIT_SUBQUERY


4905 if–
	`checkF‹Mu…iCﬁumnSñe˘Eº‹
(
pP¨£
, 
pDe°
, 
p
->
pELi°
->
nEx¥
) ){

4906 
£À˘_íd
;

4912 #i‡!
	`deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

4913 
i
=0; !
p
->
pPri‹
 && i<
pTabLi°
->
nSrc
; i++){

4914 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
i
];

4915 
Sñe˘
 *
pSub
 = 
pIãm
->
pSñe˘
;

4916 
isAggSub
;

4917 
TabÀ
 *
pTab
 = 
pIãm
->pTab;

4918 if–
pSub
==0 ) ;

4922 if–
pTab
->
nCﬁ
!=
pSub
->
pELi°
->
nEx¥
 ){

4923 
	`sqlôe3Eº‹Msg
(
pP¨£
, "expected %d columns for '%s' but got %d",

4924 
pTab
->
nCﬁ
,ÖTab->
zName
, 
pSub
->
pELi°
->
nEx¥
);

4925 
£À˘_íd
;

4928 
isAggSub
 = (
pSub
->
£lFœgs
 & 
SF_Aggªg©e
)!=0;

4929 if–
	`Ê©ãnSubquîy
(
pP¨£
, 
p
, 
i
, 
isAgg
, 
isAggSub
) ){

4931 if–
isAggSub
 ){

4932 
isAgg
 = 1;

4933 
p
->
£lFœgs
 |
SF_Aggªg©e
;

4935 
i
 = -1;

4937 
pTabLi°
 = 
p
->
pSrc
;

4938 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

4939 if–!
	`Ign‹abÀOrdîby
(
pDe°
) ){

4940 
sS‹t
.
pOrdîBy
 = 
p
->pOrderBy;

4947 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

4948 if–
v
==0 ) 
£À˘_íd
;

4950 #i‚de‡
SQLITE_OMIT_COMPOUND_SELECT


4954 if–
p
->
pPri‹
 ){

4955 
rc
 = 
	`mu…iSñe˘
(
pP¨£
, 
p
, 
pDe°
);

4956 
	`ex∂aöSëI¡egî
(
pP¨£
->
iSñe˘Id
, 
iRe°‹eSñe˘Id
);

4957 #i‡
SELECTTRACE_ENABLED


4958 
	`SELECTTRACE
(1,
pP¨£
,
p
,("end compound-selectÖrocessing\n"));

4959 
pP¨£
->
nSñe˘Indít
--;

4961  
rc
;

4967 #i‡!
	`deföed
(
SQLITE_OMIT_SUBQUERY
Ë|| !deföed(
SQLITE_OMIT_VIEW
)

4968 
i
=0; i<
pTabLi°
->
nSrc
; i++){

4969 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
i
];

4970 
Sñe˘De°
 
de°
;

4971 
Sñe˘
 *
pSub
 = 
pIãm
->
pSñe˘
;

4972 if–
pSub
==0 ) ;

4980 if–
pIãm
->
addrFûlSub
 ){

4981 if–
pIãm
->
fg
.
vüC‹outöe
==0 ){

4982 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pIãm
->
ªgRëu∫
,ÖIãm->
addrFûlSub
);

4994 
pP¨£
->
nHeight
 +
	`sqlôe3Sñe˘Ex¥Height
(
p
);

4999 if–(
pIãm
->
fg
.
joöty≥
 & 
JT_OUTER
)==0

5000 && 
	`pushDownWhîeTîms
(
db
, 
pSub
, 
p
->
pWhîe
, 
pIãm
->
iCurs‹
)

5002 #i‡
SELECTTRACE_ENABLED


5003 if–
sqlôe3Sñe˘Tø˚
 & 0x100 ){

5004 
	`SELECTTRACE
(0x100,
pP¨£
,
p
,("After WHERE-clauseÖush-down:\n"));

5005 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5024 if–
i
==0

5025 && (
pTabLi°
->
nSrc
==1

5026 || (
pTabLi°
->
a
[1].
fg
.
joöty≥
&(
JT_LEFT
|
JT_CROSS
))!=0)

5027 && (
p
->
£lFœgs
 & 
SF_AŒ
)==0

5028 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_SubqC‹outöe
)

5033 
addrT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
)+1;

5034 
pIãm
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

5035 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
pIãm
->
ªgRëu∫
, 0, 
addrT›
);

5036 
	`VdbeCommít
((
v
, "%s", 
pIãm
->
pTab
->
zName
));

5037 
pIãm
->
addrFûlSub
 = 
addrT›
;

5038 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_C‹outöe
, 
pIãm
->
ªgRëu∫
);

5039 
	`ex∂aöSëI¡egî
(
pIãm
->
iSñe˘Id
, (
u8
)
pP¨£
->
iNextSñe˘Id
);

5040 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSub
, &
de°
);

5041 
pIãm
->
pTab
->
nRowLogE°
 = 
pSub
->
nSñe˘Row
;

5042 
pIãm
->
fg
.
vüC‹outöe
 = 1;

5043 
pIãm
->
ªgResu…
 = 
de°
.
iSd°
;

5044 
	`sqlôe3VdbeEndC‹outöe
(
v
, 
pIãm
->
ªgRëu∫
);

5045 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
-1);

5046 
	`sqlôe3CÀ¨TempRegCache
(
pP¨£
);

5053 
t›Addr
;

5054 
⁄˚Addr
 = 0;

5055 
ªtAddr
;

5056 
	`as£π
–
pIãm
->
addrFûlSub
==0 );

5057 
pIãm
->
ªgRëu∫
 = ++
pP¨£
->
nMem
;

5058 
t›Addr
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
pIãm
->
ªgRëu∫
);

5059 
pIãm
->
addrFûlSub
 = 
t›Addr
+1;

5060 if–
pIãm
->
fg
.
isC‹ªœãd
==0 ){

5064 
⁄˚Addr
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

5065 
	`VdbeCommít
((
v
, "m©îülizê\"%s\"", 
pIãm
->
pTab
->
zName
));

5067 
	`VdbeNo›Commít
((
v
, "m©îülizê\"%s\"", 
pIãm
->
pTab
->
zName
));

5069 
	`sqlôe3Sñe˘De°Inô
(&
de°
, 
SRT_EphemTab
, 
pIãm
->
iCurs‹
);

5070 
	`ex∂aöSëI¡egî
(
pIãm
->
iSñe˘Id
, (
u8
)
pP¨£
->
iNextSñe˘Id
);

5071 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSub
, &
de°
);

5072 
pIãm
->
pTab
->
nRowLogE°
 = 
pSub
->
nSñe˘Row
;

5073 if–
⁄˚Addr
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, onceAddr);

5074 
ªtAddr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
pIãm
->
ªgRëu∫
);

5075 
	`VdbeCommít
((
v
, "íd %s", 
pIãm
->
pTab
->
zName
));

5076 
	`sqlôe3VdbeCh™geP1
(
v
, 
t›Addr
, 
ªtAddr
);

5077 
	`sqlôe3CÀ¨TempRegCache
(
pP¨£
);

5079 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

5080 
pP¨£
->
nHeight
 -
	`sqlôe3Sñe˘Ex¥Height
(
p
);

5086 
pELi°
 = 
p
->pEList;

5087 
pWhîe
 = 
p
->pWhere;

5088 
pGroupBy
 = 
p
->pGroupBy;

5089 
pHavög
 = 
p
->pHaving;

5090 
sDi°ö˘
.
isTn˘
 = (
p
->
£lFœgs
 & 
SF_Di°ö˘
)!=0;

5092 #i‡
SELECTTRACE_ENABLED


5093 if–
sqlôe3Sñe˘Tø˚
 & 0x400 ){

5094 
	`SELECTTRACE
(0x400,
pP¨£
,
p
,("Afteráll FROM-clauseánalysis:\n"));

5095 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5114 if–(
p
->
£lFœgs
 & (
SF_Di°ö˘
|
SF_Aggªg©e
))==SF_Distinct

5115 && 
	`sqlôe3Ex¥Li°Com∑ª
(
sS‹t
.
pOrdîBy
, 
pELi°
, -1)==0

5117 
p
->
£lFœgs
 &~
SF_Di°ö˘
;

5118 
pGroupBy
 = 
p
->pGroupBy = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pELi°
, 0);

5122 
	`as£π
–
sDi°ö˘
.
isTn˘
 );

5124 #i‡
SELECTTRACE_ENABLED


5125 if–
sqlôe3Sñe˘Tø˚
 & 0x400 ){

5126 
	`SELECTTRACE
(0x400,
pP¨£
,
p
,("Transform DISTINCT into GROUP BY:\n"));

5127 
	`sqlôe3TªeVõwSñe˘
(0, 
p
, 0);

5140 if–
sS‹t
.
pOrdîBy
 ){

5141 
KeyInfo
 *
pKeyInfo
;

5142 
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
sS‹t
.
pOrdîBy
, 0, 
pELi°
->
nEx¥
);

5143 
sS‹t
.
iECurs‹
 = 
pP¨£
->
nTab
++;

5144 
sS‹t
.
addrS‹tIndex
 =

5145 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
,

5146 
sS‹t
.
iECurs‹
, sS‹t.
pOrdîBy
->
nEx¥
+1+
pELi°
->nExpr, 0,

5147 (*)
pKeyInfo
, 
P4_KEYINFO


5150 
sS‹t
.
addrS‹tIndex
 = -1;

5155 if–
pDe°
->
eDe°
==
SRT_EphemTab
 ){

5156 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
pDe°
->
iSDP¨m
, 
pELi°
->
nEx¥
);

5161 
iEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5162 
p
->
nSñe˘Row
 = 320;

5163 
	`compuãLimôRegi°îs
(
pP¨£
, 
p
, 
iEnd
);

5164 if–
p
->
iLimô
==0 && 
sS‹t
.
addrS‹tIndex
>=0 ){

5165 
	`sqlôe3VdbeCh™geOpcode
(
v
, 
sS‹t
.
addrS‹tIndex
, 
OP_S‹ãrO≥n
);

5166 
sS‹t
.
s‹tFœgs
 |
SORTFLAG_U£S‹ãr
;

5171 if–
p
->
£lFœgs
 & 
SF_Di°ö˘
 ){

5172 
sDi°ö˘
.
èbTn˘
 = 
pP¨£
->
nTab
++;

5173 
sDi°ö˘
.
addrTn˘
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_O≥nEphemîÆ
,

5174 
sDi°ö˘
.
èbTn˘
, 0, 0,

5175 (*)
	`keyInfoFromEx¥Li°
(
pP¨£
, 
p
->
pELi°
,0,0),

5176 
P4_KEYINFO
);

5177 
	`sqlôe3VdbeCh™geP5
(
v
, 
BTREE_UNORDERED
);

5178 
sDi°ö˘
.
eTn˘Ty≥
 = 
WHERE_DISTINCT_UNORDERED
;

5180 
sDi°ö˘
.
eTn˘Ty≥
 = 
WHERE_DISTINCT_NOOP
;

5183 if–!
isAgg
 && 
pGroupBy
==0 ){

5185 
u16
 
w˘æFœgs
 = (
sDi°ö˘
.
isTn˘
 ? 
WHERE_WANT_DISTINCT
 : 0);

5186 
	`as£π
–
WHERE_USE_LIMIT
==
SF_FixedLimô
 );

5187 
w˘æFœgs
 |
p
->
£lFœgs
 & 
SF_FixedLimô
;

5190 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
sS‹t
.
pOrdîBy
,

5191 
p
->
pELi°
, 
w˘æFœgs
,Ö->
nSñe˘Row
);

5192 if–
pWInfo
==0 ) 
£À˘_íd
;

5193 if–
	`sqlôe3WhîeOuçutRowCou¡
(
pWInfo
Ë< 
p
->
nSñe˘Row
 ){

5194 
p
->
nSñe˘Row
 = 
	`sqlôe3WhîeOuçutRowCou¡
(
pWInfo
);

5196 if–
sDi°ö˘
.
isTn˘
 && 
	`sqlôe3WhîeIsDi°ö˘
(
pWInfo
) ){

5197 
sDi°ö˘
.
eTn˘Ty≥
 = 
	`sqlôe3WhîeIsDi°ö˘
(
pWInfo
);

5199 if–
sS‹t
.
pOrdîBy
 ){

5200 
sS‹t
.
nOBS©
 = 
	`sqlôe3WhîeIsOrdîed
(
pWInfo
);

5201 
sS‹t
.
bOrdîedI¬îLo›
 = 
	`sqlôe3WhîeOrdîedI¬îLo›
(
pWInfo
);

5202 if–
sS‹t
.
nOBS©
==sS‹t.
pOrdîBy
->
nEx¥
 ){

5203 
sS‹t
.
pOrdîBy
 = 0;

5211 if–
sS‹t
.
addrS‹tIndex
>=0 && sS‹t.
pOrdîBy
==0 ){

5212 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
sS‹t
.
addrS‹tIndex
);

5216 
	`£À˘I¬îLo›
(
pP¨£
, 
p
, 
pELi°
, -1, &
sS‹t
, &
sDi°ö˘
, 
pDe°
,

5217 
	`sqlôe3WhîeC⁄töueLabñ
(
pWInfo
),

5218 
	`sqlôe3WhîeBªakLabñ
(
pWInfo
));

5222 
	`sqlôe3WhîeEnd
(
pWInfo
);

5226 
NameC⁄ãxt
 
sNC
;

5227 
iAMem
;

5228 
iBMem
;

5229 
iU£Fœg
;

5232 
iAb‹tFœg
;

5233 
groupByS‹t
;

5234 
addrEnd
;

5235 
s‹tPTab
 = 0;

5236 
s‹tOut
 = 0;

5237 
‹dîByGΩ
 = 0;

5242 if–
pGroupBy
 ){

5243 
k
;

5244 
Ex¥Li°_ôem
 *
pIãm
;

5246 
k
=
p
->
pELi°
->
nEx¥
, 
pIãm
ı->pELi°->
a
; k>0; k--,ÖItem++){

5247 
pIãm
->
u
.
x
.
iAlüs
 = 0;

5249 
k
=
pGroupBy
->
nEx¥
, 
pIãm
ıGroupBy->
a
; k>0; k--,ÖItem++){

5250 
pIãm
->
u
.
x
.
iAlüs
 = 0;

5252 
	`as£π
–66==
	`sqlôe3LogE°
(100) );

5253 if–
p
->
nSñe˘Row
>66 )Ö->nSelectRow = 66;

5255 
	`as£π
–0==
	`sqlôe3LogE°
(1) );

5256 
p
->
nSñe˘Row
 = 0;

5267 if–
	`sqlôe3Ex¥Li°Com∑ª
(
pGroupBy
, 
sS‹t
.
pOrdîBy
, -1)==0 ){

5268 
‹dîByGΩ
 = 1;

5272 
addrEnd
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5278 
	`mem£t
(&
sNC
, 0, (sNC));

5279 
sNC
.
pP¨£
 =ÖParse;

5280 
sNC
.
pSrcLi°
 = 
pTabLi°
;

5281 
sNC
.
pAggInfo
 = &
sAggInfo
;

5282 
sAggInfo
.
mnReg
 = 
pP¨£
->
nMem
+1;

5283 
sAggInfo
.
nS‹tögCﬁumn
 = 
pGroupBy
 ?ÖGroupBy->
nEx¥
 : 0;

5284 
sAggInfo
.
pGroupBy
 =ÖGroupBy;

5285 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
pELi°
);

5286 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
sS‹t
.
pOrdîBy
);

5287 if–
pHavög
 ){

5288 
	`sqlôe3Ex¥A«lyzeAggªg©es
(&
sNC
, 
pHavög
);

5290 
sAggInfo
.
nAccumuœt‹
 = sAggInfo.
nCﬁumn
;

5291 
i
=0; i<
sAggInfo
.
nFunc
; i++){

5292 
	`as£π
–!
	`Ex¥HasPr›îty
(
sAggInfo
.
aFunc
[
i
].
pEx¥
, 
EP_xIsSñe˘
) );

5293 
sNC
.
ncFœgs
 |
NC_InAggFunc
;

5294 
	`sqlôe3Ex¥A«lyzeAggLi°
(&
sNC
, 
sAggInfo
.
aFunc
[
i
].
pEx¥
->
x
.
pLi°
);

5295 
sNC
.
ncFœgs
 &~
NC_InAggFunc
;

5297 
sAggInfo
.
mxReg
 = 
pP¨£
->
nMem
;

5298 if–
db
->
mÆlocFaûed
 ) 
£À˘_íd
;

5303 if–
pGroupBy
 ){

5304 
KeyInfo
 *
pKeyInfo
;

5305 
addr1
;

5306 
addrOuçutRow
;

5307 
ªgOuçutRow
;

5308 
addrSëAb‹t
;

5309 
addrT›OfLo›
;

5310 
addrS‹tögIdx
;

5311 
addrRe£t
;

5312 
ªgRe£t
;

5319 
sAggInfo
.
s‹tögIdx
 = 
pP¨£
->
nTab
++;

5320 
pKeyInfo
 = 
	`keyInfoFromEx¥Li°
(
pP¨£
, 
pGroupBy
, 0, 
sAggInfo
.
nCﬁumn
);

5321 
addrS‹tögIdx
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_S‹ãrO≥n
,

5322 
sAggInfo
.
s‹tögIdx
, sAggInfo.
nS‹tögCﬁumn
,

5323 0, (*)
pKeyInfo
, 
P4_KEYINFO
);

5327 
iU£Fœg
 = ++
pP¨£
->
nMem
;

5328 
iAb‹tFœg
 = ++
pP¨£
->
nMem
;

5329 
ªgOuçutRow
 = ++
pP¨£
->
nMem
;

5330 
addrOuçutRow
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5331 
ªgRe£t
 = ++
pP¨£
->
nMem
;

5332 
addrRe£t
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

5333 
iAMem
 = 
pP¨£
->
nMem
 + 1;

5334 
pP¨£
->
nMem
 +
pGroupBy
->
nEx¥
;

5335 
iBMem
 = 
pP¨£
->
nMem
 + 1;

5336 
pP¨£
->
nMem
 +
pGroupBy
->
nEx¥
;

5337 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
iAb‹tFœg
);

5338 
	`VdbeCommít
((
v
, "clearábort flag"));

5339 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
iU£Fœg
);

5340 
	`VdbeCommít
((
v
, "indicateáccumulatorÉmpty"));

5341 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
iAMem
, iAMem+
pGroupBy
->
nEx¥
-1);

5348 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRe£t
, 
addrRe£t
);

5349 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
pGroupBy
, 0,

5350 
WHERE_GROUPBY
 | (
‹dîByGΩ
 ? 
WHERE_SORTBYGROUP
 : 0), 0

5352 if–
pWInfo
==0 ) 
£À˘_íd
;

5353 if–
	`sqlôe3WhîeIsOrdîed
(
pWInfo
)==
pGroupBy
->
nEx¥
 ){

5358 
groupByS‹t
 = 0;

5365 
ªgBa£
;

5366 
ªgRec‹d
;

5367 
nCﬁ
;

5368 
nGroupBy
;

5370 
	`ex∂aöTempTabÀ
(
pP¨£
,

5371 (
sDi°ö˘
.
isTn˘
 && (
p
->
£lFœgs
&
SF_Di°ö˘
)==0) ?

5374 
groupByS‹t
 = 1;

5375 
nGroupBy
 = 
pGroupBy
->
nEx¥
;

5376 
nCﬁ
 = 
nGroupBy
;

5377 
j
 = 
nGroupBy
;

5378 
i
=0; i<
sAggInfo
.
nCﬁumn
; i++){

5379 if–
sAggInfo
.
aCﬁ
[
i
].
iS‹ãrCﬁumn
>=
j
 ){

5380 
nCﬁ
++;

5381 
j
++;

5384 
ªgBa£
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nCﬁ
);

5385 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5386 
	`sqlôe3Ex¥CodeEx¥Li°
(
pP¨£
, 
pGroupBy
, 
ªgBa£
, 0, 0);

5387 
j
 = 
nGroupBy
;

5388 
i
=0; i<
sAggInfo
.
nCﬁumn
; i++){

5389 
AggInfo_cﬁ
 *
pCﬁ
 = &
sAggInfo
.
aCﬁ
[
i
];

5390 if–
pCﬁ
->
iS‹ãrCﬁumn
>=
j
 ){

5391 
r1
 = 
j
 + 
ªgBa£
;

5392 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
,

5393 
pCﬁ
->
pTab
,ÖCﬁ->
iCﬁumn
,ÖCﬁ->
iTabÀ
, 
r1
);

5394 
j
++;

5397 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

5398 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgBa£
, 
nCﬁ
, 
ªgRec‹d
);

5399 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrIn£π
, 
sAggInfo
.
s‹tögIdx
, 
ªgRec‹d
);

5400 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

5401 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
ªgBa£
, 
nCﬁ
);

5402 
	`sqlôe3WhîeEnd
(
pWInfo
);

5403 
sAggInfo
.
s‹tögIdxPTab
 = 
s‹tPTab
 = 
pP¨£
->
nTab
++;

5404 
s‹tOut
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

5405 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_O≥nP£udo
, 
s‹tPTab
, 
s‹tOut
, 
nCﬁ
);

5406 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrS‹t
, 
sAggInfo
.
s‹tögIdx
, 
addrEnd
);

5407 
	`VdbeCommít
((
v
, "GROUP BY s‹t")); 
	`VdbeCovîage
(v);

5408 
sAggInfo
.
u£S‹tögIdx
 = 1;

5409 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5420 if–
‹dîByGΩ
 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_GroupByOrdî
)

5421 && (
groupByS‹t
 || 
	`sqlôe3WhîeIsS‹ãd
(
pWInfo
))

5423 
sS‹t
.
pOrdîBy
 = 0;

5424 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
sS‹t
.
addrS‹tIndex
);

5432 
addrT›OfLo›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5433 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

5434 if–
groupByS‹t
 ){

5435 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_S‹ãrD©a
, 
sAggInfo
.
s‹tögIdx
,

5436 
s‹tOut
, 
s‹tPTab
);

5438 
j
=0; j<
pGroupBy
->
nEx¥
; j++){

5439 if–
groupByS‹t
 ){

5440 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
s‹tPTab
, 
j
, 
iBMem
+j);

5442 
sAggInfo
.
dúe˘Mode
 = 1;

5443 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pGroupBy
->
a
[
j
].
pEx¥
, 
iBMem
+j);

5446 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Com∑ª
, 
iAMem
, 
iBMem
, 
pGroupBy
->
nEx¥
,

5447 (*)
	`sqlôe3KeyInfoRef
(
pKeyInfo
), 
P4_KEYINFO
);

5448 
addr1
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5449 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Jump
, 
addr1
+1, 0,áddr1+1); 
	`VdbeCovîage
(v);

5460 
	`sqlôe3Ex¥CodeMove
(
pP¨£
, 
iBMem
, 
iAMem
, 
pGroupBy
->
nEx¥
);

5461 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOuçutRow
, 
addrOuçutRow
);

5462 
	`VdbeCommít
((
v
, "output oneÑow"));

5463 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
iAb‹tFœg
, 
addrEnd
); 
	`VdbeCovîage
(v);

5464 
	`VdbeCommít
((
v
, "checkábort flag"));

5465 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRe£t
, 
addrRe£t
);

5466 
	`VdbeCommít
((
v
, "resetáccumulator"));

5471 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

5472 
	`upd©eAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5473 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iU£Fœg
);

5474 
	`VdbeCommít
((
v
, "indicate data ináccumulator"));

5478 if–
groupByS‹t
 ){

5479 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_S‹ãrNext
, 
sAggInfo
.
s‹tögIdx
, 
addrT›OfLo›
);

5480 
	`VdbeCovîage
(
v
);

5482 
	`sqlôe3WhîeEnd
(
pWInfo
);

5483 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addrS‹tögIdx
);

5488 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgOuçutRow
, 
addrOuçutRow
);

5489 
	`VdbeCommít
((
v
, "output finalÑow"));

5493 
	`sqlôe3VdbeGŸo
(
v
, 
addrEnd
);

5502 
addrSëAb‹t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5503 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
iAb‹tFœg
);

5504 
	`VdbeCommít
((
v
, "setábort flag"));

5505 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5506 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrOuçutRow
);

5507 
addrOuçutRow
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

5508 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IfPos
, 
iU£Fœg
, 
addrOuçutRow
+2);

5509 
	`VdbeCovîage
(
v
);

5510 
	`VdbeCommít
((
v
, "GroupbyÑesult generatorÉntryÖoint"));

5511 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5512 
	`föÆizeAggFun˘i⁄s
(
pP¨£
, &
sAggInfo
);

5513 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pHavög
, 
addrOuçutRow
+1, 
SQLITE_JUMPIFNULL
);

5514 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, -1, &
sS‹t
,

5515 &
sDi°ö˘
, 
pDe°
,

5516 
addrOuçutRow
+1, 
addrSëAb‹t
);

5517 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgOuçutRow
);

5518 
	`VdbeCommít
((
v
, "end groupbyÑesult generator"));

5522 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrRe£t
);

5523 
	`ª£tAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5524 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rëu∫
, 
ªgRe£t
);

5528 
Ex¥Li°
 *
pDñ
 = 0;

5529 #i‚de‡
SQLITE_OMIT_BTREECOUNT


5530 
TabÀ
 *
pTab
;

5531 if–(
pTab
 = 
	`isSim∂eCou¡
(
p
, &
sAggInfo
))!=0 ){

5545 c⁄° 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

5546 c⁄° 
iC§
 = 
pP¨£
->
nTab
++;

5547 
Index
 *
pIdx
;

5548 
KeyInfo
 *
pKeyInfo
 = 0;

5549 
Index
 *
pBe°
 = 0;

5550 
iRoŸ
 = 
pTab
->
äum
;

5552 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

5553 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

5564 if–!
	`HasRowid
(
pTab
ËË
pBe°
 = 
	`sqlôe3Prim¨yKeyIndex
(pTab);

5565 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

5566 if–
pIdx
->
bUn‹dîed
==0

5567 && 
pIdx
->
szIdxRow
<
pTab
->
szTabRow


5568 && 
pIdx
->
pP¨tIdxWhîe
==0

5569 && (!
pBe°
 || 
pIdx
->
szIdxRow
<pBest->szIdxRow)

5571 
pBe°
 = 
pIdx
;

5574 if–
pBe°
 ){

5575 
iRoŸ
 = 
pBe°
->
äum
;

5576 
pKeyInfo
 = 
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pBe°
);

5580 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_O≥nRód
, 
iC§
, 
iRoŸ
, 
iDb
, 1);

5581 if–
pKeyInfo
 ){

5582 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pKeyInfo
, 
P4_KEYINFO
);

5584 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Cou¡
, 
iC§
, 
sAggInfo
.
aFunc
[0].
iMem
);

5585 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
iC§
);

5586 
	`ex∂aöSim∂eCou¡
(
pP¨£
, 
pTab
, 
pBe°
);

5615 
Ex¥Li°
 *
pMöMax
 = 0;

5616 
u8
 
Êag
 = 
WHERE_ORDERBY_NORMAL
;

5618 
	`as£π
–
p
->
pGroupBy
==0 );

5619 
	`as£π
–
Êag
==0 );

5620 if–
p
->
pHavög
==0 ){

5621 
Êag
 = 
	`möMaxQuîy
(&
sAggInfo
, &
pMöMax
);

5623 
	`as£π
–
Êag
==0 || (
pMöMax
!=0 &&ÖMöMax->
nEx¥
==1) );

5625 if–
Êag
 ){

5626 
pMöMax
 = 
	`sqlôe3Ex¥Li°Dup
(
db
,ÖMinMax, 0);

5627 
pDñ
 = 
pMöMax
;

5628 
	`as£π
–
db
->
mÆlocFaûed
 || 
pMöMax
!=0 );

5629 if–!
db
->
mÆlocFaûed
 ){

5630 
pMöMax
->
a
[0].
s‹tOrdî
 = 
Êag
!=
WHERE_ORDERBY_MIN
 ?1:0;

5631 
pMöMax
->
a
[0].
pEx¥
->
›
 = 
TK_COLUMN
;

5639 
	`ª£tAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5640 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 
pMöMax
,0,
Êag
,0);

5641 if–
pWInfo
==0 ){

5642 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pDñ
);

5643 
£À˘_íd
;

5645 
	`upd©eAccumuœt‹
(
pP¨£
, &
sAggInfo
);

5646 
	`as£π
–
pMöMax
==0 ||ÖMöMax->
nEx¥
==1 );

5647 if–
	`sqlôe3WhîeIsOrdîed
(
pWInfo
)>0 ){

5648 
	`sqlôe3VdbeGŸo
(
v
, 
	`sqlôe3WhîeBªakLabñ
(
pWInfo
));

5649 
	`VdbeCommít
((
v
, "%s() by index",

5650 (
Êag
==
WHERE_ORDERBY_MIN
?"min":"max")));

5652 
	`sqlôe3WhîeEnd
(
pWInfo
);

5653 
	`föÆizeAggFun˘i⁄s
(
pP¨£
, &
sAggInfo
);

5656 
sS‹t
.
pOrdîBy
 = 0;

5657 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pHavög
, 
addrEnd
, 
SQLITE_JUMPIFNULL
);

5658 
	`£À˘I¬îLo›
(
pP¨£
, 
p
,Ö->
pELi°
, -1, 0, 0,

5659 
pDe°
, 
addrEnd
,áddrEnd);

5660 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pDñ
);

5662 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
addrEnd
);

5666 if–
sDi°ö˘
.
eTn˘Ty≥
==
WHERE_DISTINCT_UNORDERED
 ){

5667 
	`ex∂aöTempTabÀ
(
pP¨£
, "DISTINCT");

5673 if–
sS‹t
.
pOrdîBy
 ){

5674 
	`ex∂aöTempTabÀ
(
pP¨£
,

5675 
sS‹t
.
nOBS©
>0 ? "RIGHT PART OF ORDER BY":"ORDER BY");

5676 
	`gíî©eS‹tTaû
(
pP¨£
, 
p
, &
sS‹t
, 
pELi°
->
nEx¥
, 
pDe°
);

5681 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iEnd
);

5685 
rc
 = (
pP¨£
->
nEº
>0);

5690 
£À˘_íd
:

5691 
	`ex∂aöSëI¡egî
(
pP¨£
->
iSñe˘Id
, 
iRe°‹eSñe˘Id
);

5695 if–
rc
==
SQLITE_OK
 && 
pDe°
->
eDe°
==
SRT_Ouçut
 ){

5696 
	`gíî©eCﬁumnNames
(
pP¨£
, 
pTabLi°
, 
pELi°
);

5699 
	`sqlôe3DbFªe
(
db
, 
sAggInfo
.
aCﬁ
);

5700 
	`sqlôe3DbFªe
(
db
, 
sAggInfo
.
aFunc
);

5701 #i‡
SELECTTRACE_ENABLED


5702 
	`SELECTTRACE
(1,
pP¨£
,
p
,("endÖrocessing\n"));

5703 
pP¨£
->
nSñe˘Indít
--;

5705  
rc
;

5706 
	}
}

	@shell.c

15 #i‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
)Ë&& !deföed(
_CRT_SECURE_NO_WARNINGS
)

17 
	#_CRT_SECURE_NO_WARNINGS


	)

23 #i‡
deföed
(
INCLUDE_MSVC_H
)

24 
	~"msvc.h
"

30 #i‡(
deföed
(
__RTP__
Ë|| deföed(
_WRS_KERNEL
)Ë&& !
SQLITE_OMIT_LOAD_EXTENSION


31 
	#SQLITE_OMIT_LOAD_EXTENSION
 1

	)

37 #i‚de‡
SQLITE_DISABLE_LFS


38 
	#_LARGE_FILE
 1

	)

39 #i‚de‡
_FILE_OFFSET_BITS


40 
	#_FILE_OFFSET_BITS
 64

	)

42 
	#_LARGEFILE_SOURCE
 1

	)

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

47 
	~<°dio.h
>

48 
	~<as£π.h
>

49 
	~"sqlôe3.h
"

50 #i‡
SQLITE_USER_AUTHENTICATION


51 
	~"sqlôe3u£øuth.h
"

53 
	~<˘y≥.h
>

54 
	~<°d¨g.h
>

56 #i‡!
deföed
(
_WIN32
Ë&& !deföed(
WIN32
)

57 
	~<sig«l.h
>

58 #i‡!
deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

59 
	~<pwd.h
>

61 
	~<uni°d.h
>

62 
	~<sys/ty≥s.h
>

65 #i‡
HAVE_READLINE


66 
	~<ªadlöe/ªadlöe.h
>

67 
	~<ªadlöe/hi°‹y.h
>

70 #i‡
HAVE_EDITLINE


71 
	~<edôlöe/ªadlöe.h
>

74 #i‡
HAVE_EDITLINE
 || 
HAVE_READLINE


76 
	#shñl_add_hi°‹y
(
X
Ë
	`add_hi°‹y
(X)

	)

77 
	#shñl_ªad_hi°‹y
(
X
Ë
	`ªad_hi°‹y
(X)

	)

78 
	#shñl_wrôe_hi°‹y
(
X
Ë
	`wrôe_hi°‹y
(X)

	)

79 
	#shñl_°iÊe_hi°‹y
(
X
Ë
	`°iÊe_hi°‹y
(X)

	)

80 
	#shñl_ªadlöe
(
X
Ë
	`ªadlöe
(X)

	)

82 #ñi‡
HAVE_LINENOISE


84 
	~"löíoi£.h
"

85 
	#shñl_add_hi°‹y
(
X
Ë
	`löíoi£Hi°‹yAdd
(X)

	)

86 
	#shñl_ªad_hi°‹y
(
X
Ë
	`löíoi£Hi°‹yLﬂd
(X)

	)

87 
	#shñl_wrôe_hi°‹y
(
X
Ë
	`löíoi£Hi°‹ySave
(X)

	)

88 
	#shñl_°iÊe_hi°‹y
(
X
Ë
	`löíoi£Hi°‹ySëMaxLí
(X)

	)

89 
	#shñl_ªadlöe
(
X
Ë
	`löíoi£
(X)

	)

93 
	#shñl_ªad_hi°‹y
(
X
)

	)

94 
	#shñl_wrôe_hi°‹y
(
X
)

	)

95 
	#shñl_°iÊe_hi°‹y
(
X
)

	)

97 
	#SHELL_USE_LOCAL_GETLINE
 1

	)

101 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

102 
	~<io.h
>

103 
	~<f˙é.h
>

104 
	#ißây
(
h
Ë
	`_ißây
(h)

	)

105 #i‚de‡
ac˚ss


106 
	#ac˚ss
(
f
,
m
Ë
	`_ac˚ss
((f),(m))

	)

108 #unde‡
p›í


109 
	#p›í
 
_p›í


	)

110 #unde‡
p˛o£


111 
	#p˛o£
 
_p˛o£


	)

114 
ißây
();

116 #i‡!
deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

119 
FILE
 *
p›í
(const *,const *);

120 
p˛o£
(
FILE
*);

122 
	#SQLITE_OMIT_POPEN
 1

	)

126 #i‡
deföed
(
_WIN32_WCE
)

131 
	#ißây
(
x
Ë1

	)

135 
	#IsS∑˚
(
X
Ë
	`is•a˚
(()X)

	)

136 
	#IsDigô
(
X
Ë
	`isdigô
(()X)

	)

137 
	#ToLowî
(
X
Ë()
	`tﬁowî
(()X)

	)

139 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

140 
	~<wödows.h
>

143 *
sqlôe3_wö32_unicode_to_utf8
(
LPCWSTR
);

144 *
sqlôe3_wö32_mbcs_to_utf8_v2
(const *, );

145 *
sqlôe3_wö32_utf8_to_mbcs_v2
(const *, );

154 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

155 
	$£tBö¨yMode
(
FILE
 *
fûe
, 
isOuçut
){

156 if–
isOuçut
 ) 
	`fÊush
(
fûe
);

157 
	`_£tmode
(
	`_fûío
(
fûe
), 
_O_BINARY
);

158 
	}
}

159 
	$£tTextMode
(
FILE
 *
fûe
, 
isOuçut
){

160 if–
isOuçut
 ) 
	`fÊush
(
fûe
);

161 
	`_£tmode
(
	`_fûío
(
fûe
), 
_O_TEXT
);

162 
	}
}

164 
	#£tBö¨yMode
(
X
,
Y
)

	)

165 
	#£tTextMode
(
X
,
Y
)

	)

170 
	gíabÀTimî
 = 0;

173 
sqlôe3_öt64
 
	$timeOfDay
(){

174 
sqlôe3_vfs
 *
˛ockVfs
 = 0;

175 
sqlôe3_öt64
 
t
;

176 if–
˛ockVfs
==0 ) clockVf†
	`sqlôe3_vfs_föd
(0);

177 if–
˛ockVfs
->
iVîsi⁄
>=2 && clockVfs->
xCuºítTimeI¡64
!=0 ){

178 
˛ockVfs
->
	`xCuºítTimeI¡64
(˛ockVfs, &
t
);

180 
r
;

181 
˛ockVfs
->
	`xCuºítTime
(˛ockVfs, &
r
);

182 
t
 = (
sqlôe3_öt64
)(
r
*86400000.0);

184  
t
;

185 
	}
}

187 #i‡!
deföed
(
_WIN32
Ë&& !deföed(
WIN32
Ë&& !deföed(
__möux
)

188 
	~<sys/time.h
>

189 
	~<sys/ªsour˚.h
>

192 #i‡
deföed
(
_WRS_KERNEL
Ë|| deföed(
__RTP__
)

193 
	srußge
 {

194 
timevÆ
 
	mru_utime
;

195 
timevÆ
 
	mru_°ime
;

197 
	#gërußge
(
A
,
B
Ë
	`mem£t
(B,0,(*B))

	)

201 
rußge
 
	gsBegö
;

202 
sqlôe3_öt64
 
	giBegö
;

207 
	$begöTimî
(){

208 if–
íabÀTimî
 ){

209 
	`gërußge
(
RUSAGE_SELF
, &
sBegö
);

210 
iBegö
 = 
	`timeOfDay
();

212 
	}
}

215 
	$timeDiff
(
timevÆ
 *
pSèπ
, timevÆ *
pEnd
){

216  (
pEnd
->
tv_u£c
 - 
pSèπ
->tv_usec)*0.000001 +

217 ()(
pEnd
->
tv_£c
 - 
pSèπ
->tv_sec);

218 
	}
}

223 
	$ídTimî
(){

224 if–
íabÀTimî
 ){

225 
sqlôe3_öt64
 
iEnd
 = 
	`timeOfDay
();

226 
rußge
 
sEnd
;

227 
	`gërußge
(
RUSAGE_SELF
, &
sEnd
);

228 
	`¥ötf
("Run Time:Ñeal %.3f user %f sys %f\n",

229 (
iEnd
 - 
iBegö
)*0.001,

230 
	`timeDiff
(&
sBegö
.
ru_utime
, &
sEnd
.ru_utime),

231 
	`timeDiff
(&
sBegö
.
ru_°ime
, &
sEnd
.ru_stime));

233 
	}
}

235 
	#BEGIN_TIMER
 
	`begöTimî
()

	)

236 
	#END_TIMER
 
	`ídTimî
()

	)

237 
	#HAS_TIMER
 1

	)

239 #ñi‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
))

242 
HANDLE
 
	ghPro˚ss
;

243 
FILETIME
 
	g·Kî√lBegö
;

244 
FILETIME
 
	g·U£rBegö
;

245 
sqlôe3_öt64
 
	g·WÆlBegö
;

246 
	$BOOL
 (
	tWINAPI
 *
	tGETPROCTIMES
)(
	tHANDLE
, 
	tLPFILETIME
, LPFILETIME,

247 
	tLPFILETIME
, LPFILETIME);

248 
GETPROCTIMES
 
gëPro˚ssTimesAddr
 = 
NULL
;

254 
	$hasTimî
(){

255 if–
gëPro˚ssTimesAddr
 ){

262 
hPro˚ss
 = 
	`GëCuºítPro˚ss
();

263 if–
hPro˚ss
 ){

264 
HINSTANCE
 
hö°Lib
 = 
	`LﬂdLibøry
(
	`TEXT
("Kernel32.dll"));

265 if–
NULL
 !
hö°Lib
 ){

266 
gëPro˚ssTimesAddr
 =

267 (
GETPROCTIMES
Ë
	`GëProcAddªss
(
hö°Lib
, "GetProcessTimes");

268 if–
NULL
 !
gëPro˚ssTimesAddr
 ){

271 
	`FªeLibøry
(
hö°Lib
);

276 
	}
}

281 
	$begöTimî
(){

282 if–
íabÀTimî
 && 
gëPro˚ssTimesAddr
 ){

283 
FILETIME
 
·Cª©i⁄
, 
·Exô
;

284 
	`gëPro˚ssTimesAddr
(
hPro˚ss
,&
·Cª©i⁄
,&
·Exô
,

285 &
·Kî√lBegö
,&
·U£rBegö
);

286 
·WÆlBegö
 = 
	`timeOfDay
();

288 
	}
}

291 
	$timeDiff
(
FILETIME
 *
pSèπ
, FILETIME *
pEnd
){

292 
sqlôe_öt64
 
i64Sèπ
 = *((sqlôe_öt64 *Ë
pSèπ
);

293 
sqlôe_öt64
 
i64End
 = *((sqlôe_öt64 *Ë
pEnd
);

294  (Ë((
i64End
 - 
i64Sèπ
) / 10000000.0);

295 
	}
}

300 
	$ídTimî
(){

301 if–
íabÀTimî
 && 
gëPro˚ssTimesAddr
){

302 
FILETIME
 
·Cª©i⁄
, 
·Exô
, 
·Kî√lEnd
, 
·U£rEnd
;

303 
sqlôe3_öt64
 
·WÆlEnd
 = 
	`timeOfDay
();

304 
	`gëPro˚ssTimesAddr
(
hPro˚ss
,&
·Cª©i⁄
,&
·Exô
,&
·Kî√lEnd
,&
·U£rEnd
);

305 
	`¥ötf
("Run Time:Ñeal %.3f user %f sys %f\n",

306 (
·WÆlEnd
 - 
·WÆlBegö
)*0.001,

307 
	`timeDiff
(&
·U£rBegö
, &
·U£rEnd
),

308 
	`timeDiff
(&
·Kî√lBegö
, &
·Kî√lEnd
));

310 
	}
}

312 
	#BEGIN_TIMER
 
	`begöTimî
()

	)

313 
	#END_TIMER
 
	`ídTimî
()

	)

314 
	#HAS_TIMER
 
	`hasTimî
()

	)

317 
	#BEGIN_TIMER


	)

318 
	#END_TIMER


	)

319 
	#HAS_TIMER
 0

	)

325 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

331 
	gbaû_⁄_îr‹
 = 0;

337 
	g°dö_is_öãø˘ive
 = 1;

344 
	g°dout_is_c⁄sﬁe
 = 1;

351 
sqlôe3
 *
	gglobÆDb
 = 0;

356 vﬁ©ûê
	g£íI¡îru±
 = 0;

362 *
	gArgv0
;

368 
	gmaöProm±
[20];

369 
	gc⁄töueProm±
[20];

376 #i‡
deföed
(
_WIN32
Ë|| deföed(
WIN32
)

377 
	$utf8_¥ötf
(
FILE
 *
out
, c⁄° *
zF‹m©
, ...){

378 
va_li°
 
≠
;

379 
	`va_°¨t
(
≠
, 
zF‹m©
);

380 if–
°dout_is_c⁄sﬁe
 && (
out
==
°dout
 || out==
°dîr
) ){

381 *
z1
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

382 *
z2
 = 
	`sqlôe3_wö32_utf8_to_mbcs_v2
(
z1
, 0);

383 
	`sqlôe3_‰ì
(
z1
);

384 
	`Âuts
(
z2
, 
out
);

385 
	`sqlôe3_‰ì
(
z2
);

387 
	`vÂrötf
(
out
, 
zF‹m©
, 
≠
);

389 
	`va_íd
(
≠
);

390 
	}
}

391 #ñi‡!
deföed
(
utf8_¥ötf
)

392 
	#utf8_¥ötf
 
Ârötf


	)

399 #i‡!
deföed
(
øw_¥ötf
)

400 
	#øw_¥ötf
 
Ârötf


	)

406 #ifde‡
SQLITE_ENABLE_IOTRACE


407 
FILE
 *
	giŸø˚
 = 0;

416 #ifde‡
SQLITE_ENABLE_IOTRACE


417 
SQLITE_CDECL
 
	$iŸø˚Prötf
(c⁄° *
zF‹m©
, ...){

418 
va_li°
 
≠
;

419 *
z
;

420 if–
iŸø˚
==0 ) ;

421 
	`va_°¨t
(
≠
, 
zF‹m©
);

422 
z
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

423 
	`va_íd
(
≠
);

424 
	`utf8_¥ötf
(
iŸø˚
, "%s", 
z
);

425 
	`sqlôe3_‰ì
(
z
);

426 
	}
}

433 
	$isNumbî
(c⁄° *
z
, *
ªÆnum
){

434 if–*
z
=='-' || *z=='+' ) z++;

435 if–!
	`IsDigô
(*
z
) ){

438 
z
++;

439 if–
ªÆnum
 ) *realnum = 0;

440  
	`IsDigô
(*
z
) ){ z++; }

441 if–*
z
=='.' ){

442 
z
++;

443 if–!
	`IsDigô
(*
z
) )  0;

444  
	`IsDigô
(*
z
) ){ z++; }

445 if–
ªÆnum
 ) *realnum = 1;

447 if–*
z
=='e' || *z=='E' ){

448 
z
++;

449 if–*
z
=='+' || *z=='-' ) z++;

450 if–!
	`IsDigô
(*
z
) )  0;

451  
	`IsDigô
(*
z
) ){ z++; }

452 if–
ªÆnum
 ) *realnum = 1;

454  *
z
==0;

455 
	}
}

465 c⁄° *
	gzShñlSètic
 = 0;

466 
	$shñl°©icFunc
(

467 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

468 
¨gc
,

469 
sqlôe3_vÆue
 **
¨gv


471 
	`as£π
–0==
¨gc
 );

472 
	`as£π
–
zShñlSètic
 );

473 
	`UNUSED_PARAMETER
(
¨gc
);

474 
	`UNUSED_PARAMETER
(
¨gv
);

475 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zShñlSètic
, -1, 
SQLITE_STATIC
);

476 
	}
}

483 
	$°æí30
(c⁄° *
z
){

484 c⁄° *
z2
 = 
z
;

485  *
z2
 ){ z2++; }

486  0x3ffffff‡& ()(
z2
 - 
z
);

487 
	}
}

498 *
	$loˇl_gëlöe
(*
zLöe
, 
FILE
 *
ö
){

499 
nLöe
 = 
zLöe
==0 ? 0 : 100;

500 
n
 = 0;

503 if–
n
+100>
nLöe
 ){

504 
nLöe
 =ÇLine*2 + 100;

505 
zLöe
 = 
	`ªÆloc
(zLöe, 
nLöe
);

506 if–
zLöe
==0 )  0;

508 if–
	`fgës
(&
zLöe
[
n
], 
nLöe
 -Ç, 
ö
)==0 ){

509 if–
n
==0 ){

510 
	`‰ì
(
zLöe
);

513 
zLöe
[
n
] = 0;

516  
zLöe
[
n
] )Ç++;

517 if–
n
>0 && 
zLöe
[n-1]=='\n' ){

518 
n
--;

519 if–
n
>0 && 
zLöe
[n-1]=='\r' )Ç--;

520 
zLöe
[
n
] = 0;

524 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

527 if–
°dö_is_öãø˘ive
 ){

528 *
zTøns
 = 
	`sqlôe3_wö32_mbcs_to_utf8_v2
(
zLöe
, 0);

529 if–
zTøns
 ){

530 
nTøns
 = 
	`°æí30
(
zTøns
)+1;

531 if–
nTøns
>
nLöe
 ){

532 
zLöe
 = 
	`ªÆloc
(zLöe, 
nTøns
);

533 if–
zLöe
==0 ){

534 
	`sqlôe3_‰ì
(
zTøns
);

538 
	`mem˝y
(
zLöe
, 
zTøns
, 
nTøns
);

539 
	`sqlôe3_‰ì
(
zTøns
);

543  
zLöe
;

544 
	}
}

560 *
	$⁄e_öput_löe
(
FILE
 *
ö
, *
zPri‹
, 
isC⁄töu©i⁄
){

561 *
zProm±
;

562 *
zResu…
;

563 if–
ö
!=0 ){

564 
zResu…
 = 
	`loˇl_gëlöe
(
zPri‹
, 
ö
);

566 
zProm±
 = 
isC⁄töu©i⁄
 ? 
c⁄töueProm±
 : 
maöProm±
;

567 #i‡
SHELL_USE_LOCAL_GETLINE


568 
	`¥ötf
("%s", 
zProm±
);

569 
	`fÊush
(
°dout
);

570 
zResu…
 = 
	`loˇl_gëlöe
(
zPri‹
, 
°dö
);

572 
	`‰ì
(
zPri‹
);

573 
zResu…
 = 
	`shñl_ªadlöe
(
zProm±
);

574 if–
zResu…
 && *zResu… ) 
	`shñl_add_hi°‹y
(zResult);

577  
zResu…
;

578 
	}
}

580 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

584 
O≥nSessi⁄
 
	tO≥nSessi⁄
;

585 
	sO≥nSessi⁄
 {

586 *
	mzName
;

587 
	mnFûãr
;

588 **
	mazFûãr
;

589 
sqlôe3_£ssi⁄
 *
	mp
;

597 
SavedModeInfo
 
	tSavedModeInfo
;

598 
	sSavedModeInfo
 {

599 
	mvÆid
;

600 
	mmode
;

601 
	mshowHódî
;

602 
	mcﬁWidth
[100];

609 
ShñlSèã
 
	tShñlSèã
;

610 
	sShñlSèã
 {

611 
sqlôe3
 *
	mdb
;

612 
	mechoOn
;

613 
	mautoEx∂aö
;

614 
	mautoEQP
;

615 
	m°©sOn
;

616 
	msˇn°©sOn
;

617 
	mcou¡Ch™ges
;

618 
	mback¶ashOn
;

619 
	moutCou¡
;

620 
	m˙t
;

621 
FILE
 *
	mout
;

622 
FILE
 *
	måa˚Out
;

623 
	mnEº
;

624 
	mmode
;

625 
	mcMode
;

626 
	mn‹mÆMode
;

627 
	mwrôabÀSchema
;

628 
	mshowHódî
;

629 
	mshñlFlgs
;

630 *
	mzDe°TabÀ
;

631 
	mcﬁSï¨©‹
[20];

632 
	mrowSï¨©‹
[20];

633 
	mcﬁWidth
[100];

634 
	ma˘uÆWidth
[100];

635 
	mnuŒVÆue
[20];

637 
	moutfûe
[
FILENAME_MAX
];

638 c⁄° *
	mzDbFûíame
;

639 *
	mzFªeOnClo£
;

640 c⁄° *
	mzVfs
;

641 
sqlôe3_°mt
 *
	mpStmt
;

642 
FILE
 *
	mpLog
;

643 *
	maiIndít
;

644 
	mnIndít
;

645 
	miIndít
;

646 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

647 
	mnSessi⁄
;

648 
O≥nSessi⁄
 
	maSessi⁄
[4];

655 
	#SHFLG_S¸©ch
 0x00001

	)

656 
	#SHFLG_Pageˇche
 0x00002

	)

657 
	#SHFLG_Lookaside
 0x00004

	)

662 
	#MODE_Löe
 0

	)

663 
	#MODE_Cﬁumn
 1

	)

664 
	#MODE_Li°
 2

	)

665 
	#MODE_Semi
 3

	)

666 
	#MODE_Html
 4

	)

667 
	#MODE_In£π
 5

	)

668 
	#MODE_T˛
 6

	)

669 
	#MODE_Csv
 7

	)

670 
	#MODE_Ex∂aö
 8

	)

671 
	#MODE_Ascii
 9

	)

672 
	#MODE_Pªây
 10

	)

674 c⁄° *
	gmodeDes¸
[] = {

692 
	#SEP_Cﬁumn
 "|"

	)

693 
	#SEP_Row
 "\n"

	)

694 
	#SEP_Tab
 "\t"

	)

695 
	#SEP_S∑˚
 " "

	)

696 
	#SEP_Comma
 ","

	)

697 
	#SEP_CrLf
 "\r\n"

	)

698 
	#SEP_Unô
 "\x1F"

	)

699 
	#SEP_Rec‹d
 "\x1E"

	)

704 
	#AºaySize
(
X
Ë()((X)/(X[0]))

	)

709 
	$shñlLog
(*
pArg
, 
iEºCode
, c⁄° *
zMsg
){

710 
ShñlSèã
 *
p
 = (ShñlSèã*)
pArg
;

711 if–
p
->
pLog
==0 ) ;

712 
	`utf8_¥ötf
(
p
->
pLog
, "(%dË%s\n", 
iEºCode
, 
zMsg
);

713 
	`fÊush
(
p
->
pLog
);

714 
	}
}

719 
	$ouçut_hex_blob
(
FILE
 *
out
, c⁄° *
pBlob
, 
nBlob
){

720 
i
;

721 *
zBlob
 = (*)
pBlob
;

722 
	`øw_¥ötf
(
out
,"X'");

723 
i
=0; i<
nBlob
; i++){ 
	`øw_¥ötf
(
out
,"%02x",
zBlob
[i]&0xff); }

724 
	`øw_¥ötf
(
out
,"'");

725 
	}
}

730 
	$ouçut_quŸed_°rög
(
FILE
 *
out
, c⁄° *
z
){

731 
i
;

732 
nSögÀ
 = 0;

733 
	`£tBö¨yMode
(
out
, 1);

734 
i
=0; 
z
[i]; i++){

735 if–
z
[
i
]=='\'' ) 
nSögÀ
++;

737 if–
nSögÀ
==0 ){

738 
	`utf8_¥ötf
(
out
,"'%s'",
z
);

740 
	`øw_¥ötf
(
out
,"'");

741  *
z
 ){

742 
i
=0; 
z
[i] && z[i]!='\''; i++){}

743 if–
i
==0 ){

744 
	`øw_¥ötf
(
out
,"''");

745 
z
++;

746 }if–
z
[
i
]=='\'' ){

747 
	`utf8_¥ötf
(
out
,"%.*s''",
i
,
z
);

748 
z
 +
i
+1;

750 
	`utf8_¥ötf
(
out
,"%s",
z
);

754 
	`øw_¥ötf
(
out
,"'");

756 
	`£tTextMode
(
out
, 1);

757 
	}
}

762 
	$ouçut_c_°rög
(
FILE
 *
out
, c⁄° *
z
){

763 
c
;

764 
	`Âutc
('"', 
out
);

765  (
c
 = *(
z
++))!=0 ){

766 if–
c
=='\\' ){

767 
	`Âutc
(
c
, 
out
);

768 
	`Âutc
(
c
, 
out
);

769 }if–
c
=='"' ){

770 
	`Âutc
('\\', 
out
);

771 
	`Âutc
('"', 
out
);

772 }if–
c
=='\t' ){

773 
	`Âutc
('\\', 
out
);

774 
	`Âutc
('t', 
out
);

775 }if–
c
=='\n' ){

776 
	`Âutc
('\\', 
out
);

777 
	`Âutc
('n', 
out
);

778 }if–
c
=='\r' ){

779 
	`Âutc
('\\', 
out
);

780 
	`Âutc
('r', 
out
);

781 }if–!
	`i•röt
(
c
&0xff) ){

782 
	`øw_¥ötf
(
out
, "\\%03o", 
c
&0xff);

784 
	`Âutc
(
c
, 
out
);

787 
	`Âutc
('"', 
out
);

788 
	}
}

794 
	$ouçut_html_°rög
(
FILE
 *
out
, c⁄° *
z
){

795 
i
;

796 if–
z
==0 ) z = "";

797  *
z
 ){

798 
i
=0; 
z
[i]

799 && 
z
[
i
]!='<'

800 && 
z
[
i
]!='&'

801 && 
z
[
i
]!='>'

802 && 
z
[
i
]!='\"'

803 && 
z
[
i
]!='\'';

804 
i
++){}

805 if–
i
>0 ){

806 
	`utf8_¥ötf
(
out
,"%.*s",
i
,
z
);

808 if–
z
[
i
]=='<' ){

809 
	`øw_¥ötf
(
out
,"&lt;");

810 }if–
z
[
i
]=='&' ){

811 
	`øw_¥ötf
(
out
,"&amp;");

812 }if–
z
[
i
]=='>' ){

813 
	`øw_¥ötf
(
out
,"&gt;");

814 }if–
z
[
i
]=='\"' ){

815 
	`øw_¥ötf
(
out
,"&quot;");

816 }if–
z
[
i
]=='\'' ){

817 
	`øw_¥ötf
(
out
,"&#39;");

821 
z
 +
i
 + 1;

823 
	}
}

829 c⁄° 
	g√edCsvQuŸe
[] = {

854 
	$ouçut_csv
(
ShñlSèã
 *
p
, c⁄° *
z
, 
bSï
){

855 
FILE
 *
out
 = 
p
->out;

856 if–
z
==0 ){

857 
	`utf8_¥ötf
(
out
,"%s",
p
->
nuŒVÆue
);

859 
i
;

860 
nSï
 = 
	`°æí30
(
p
->
cﬁSï¨©‹
);

861 
i
=0; 
z
[i]; i++){

862 if–
√edCsvQuŸe
[((*)
z
)[
i
]]

863 || (
z
[
i
]==
p
->
cﬁSï¨©‹
[0] &&

864 (
nSï
==1 || 
	`memcmp
(
z
, 
p
->
cﬁSï¨©‹
,ÇSep)==0)) ){

865 
i
 = 0;

869 if–
i
==0 ){

870 
	`putc
('"', 
out
);

871 
i
=0; 
z
[i]; i++){

872 if–
z
[
i
]=='"' ) 
	`putc
('"', 
out
);

873 
	`putc
(
z
[
i
], 
out
);

875 
	`putc
('"', 
out
);

877 
	`utf8_¥ötf
(
out
, "%s", 
z
);

880 if–
bSï
 ){

881 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

883 
	}
}

885 #ifde‡
SIGINT


889 
	$öãºu±_h™dÀr
(
NŸU£d
){

890 
	`UNUSED_PARAMETER
(
NŸU£d
);

891 
£íI¡îru±
++;

892 if–
£íI¡îru±
>2 ) 
	`exô
(1);

893 if–
globÆDb
 ) 
	`sqlôe3_öãºu±
(globalDb);

894 
	}
}

901 
	$shñlAuth
(

902 *
pClõ¡D©a
,

903 
›
,

904 c⁄° *
zA1
,

905 c⁄° *
zA2
,

906 c⁄° *
zA3
,

907 c⁄° *
zA4


909 
ShñlSèã
 *
p
 = (ShñlSèã*)
pClõ¡D©a
;

910 c⁄° *
azA˘i⁄
[] = { 0,

923 
i
;

924 c⁄° *
az
[4];

925 
az
[0] = 
zA1
;

926 
az
[1] = 
zA2
;

927 
az
[2] = 
zA3
;

928 
az
[3] = 
zA4
;

929 
	`øw_¥ötf
(
p
->
out
, "auth‹izî: %s", 
azA˘i⁄
[
›
]);

930 
i
=0; i<4; i++){

931 
	`øw_¥ötf
(
p
->
out
, " ");

932 if–
az
[
i
] ){

933 
	`ouçut_c_°rög
(
p
->
out
, 
az
[
i
]);

935 
	`øw_¥ötf
(
p
->
out
, "NULL");

938 
	`øw_¥ötf
(
p
->
out
, "\n");

939  
SQLITE_OK
;

940 
	}
}

947 
	$shñl_ˇŒback
(

948 *
pArg
,

949 
nArg
,

950 **
azArg
,

951 **
azCﬁ
,

952 *
aiTy≥


954 
i
;

955 
ShñlSèã
 *
p
 = (ShñlSèã*)
pArg
;

957  
p
->
cMode
 ){

958 
MODE_Löe
: {

959 
w
 = 5;

960 if–
azArg
==0 ) ;

961 
i
=0; i<
nArg
; i++){

962 
Àn
 = 
	`°æí30
(
azCﬁ
[
i
] ?ázCol[i] : "");

963 if–
Àn
>
w
 ) w =Üen;

965 if–
p
->
˙t
++>0 ) 
	`utf8_¥ötf
’->
out
, "%s",Ö->
rowSï¨©‹
);

966 
i
=0; i<
nArg
; i++){

967 
	`utf8_¥ötf
(
p
->
out
,"%*†%s%s", 
w
, 
azCﬁ
[
i
],

968 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,Ö->
rowSï¨©‹
);

972 
MODE_Ex∂aö
:

973 
MODE_Cﬁumn
: {

974 c⁄° 
aEx∂aöWidths
[] = {4, 13, 4, 4, 4, 13, 2, 13};

975 c⁄° *
cﬁWidth
;

976 
showHdr
;

977 *
rowSï
;

978 if–
p
->
cMode
==
MODE_Cﬁumn
 ){

979 
cﬁWidth
 = 
p
->colWidth;

980 
showHdr
 = 
p
->
showHódî
;

981 
rowSï
 = 
p
->
rowSï¨©‹
;

983 
cﬁWidth
 = 
aEx∂aöWidths
;

984 
showHdr
 = 1;

985 
rowSï
 = 
SEP_Row
;

987 if–
p
->
˙t
++==0 ){

988 
i
=0; i<
nArg
; i++){

989 
w
, 
n
;

990 if–
i
<
	`AºaySize
(
p
->
cﬁWidth
) ){

991 
w
 = 
cﬁWidth
[
i
];

993 
w
 = 0;

995 if–
w
==0 ){

996 
w
 = 
	`°æí30
(
azCﬁ
[
i
] ?ázCol[i] : "");

997 if–
w
<10 ) w = 10;

998 
n
 = 
	`°æí30
(
azArg
 &&ázArg[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
);

999 if–
w
<
n
 ) w =Ç;

1001 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1002 
p
->
a˘uÆWidth
[
i
] = 
w
;

1004 if–
showHdr
 ){

1005 if–
w
<0 ){

1006 
	`utf8_¥ötf
(
p
->
out
,"%*.*s%s",-
w
,-w,
azCﬁ
[
i
],

1007 
i
==
nArg
-1 ? 
rowSï
 : " ");

1009 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,
azCﬁ
[
i
],

1010 
i
==
nArg
-1 ? 
rowSï
 : " ");

1014 if–
showHdr
 ){

1015 
i
=0; i<
nArg
; i++){

1016 
w
;

1017 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1018 
w
 = 
p
->
a˘uÆWidth
[
i
];

1019 if–
w
<0 ) w = -w;

1021 
w
 = 10;

1023 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,

1026 
i
==
nArg
-1 ? 
rowSï
 : " ");

1030 if–
azArg
==0 ) ;

1031 
i
=0; i<
nArg
; i++){

1032 
w
;

1033 if–
i
<
	`AºaySize
(
p
->
a˘uÆWidth
) ){

1034 
w
 = 
p
->
a˘uÆWidth
[
i
];

1036 
w
 = 10;

1038 if–
p
->
cMode
==
MODE_Ex∂aö
 && 
azArg
[
i
] && 
	`°æí30
◊zArg[i])>
w
 ){

1039 
w
 = 
	`°æí30
(
azArg
[
i
]);

1041 if–
i
==1 && 
p
->
aiIndít
 &&Ö->
pStmt
 ){

1042 if–
p
->
iIndít
<p->
nIndít
 ){

1043 
	`utf8_¥ötf
(
p
->
out
, "%*.s",Ö->
aiIndít
[p->
iIndít
], "");

1045 
p
->
iIndít
++;

1047 if–
w
<0 ){

1048 
	`utf8_¥ötf
(
p
->
out
,"%*.*s%s",-
w
,-w,

1049 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,

1050 
i
==
nArg
-1 ? 
rowSï
 : " ");

1052 
	`utf8_¥ötf
(
p
->
out
,"%-*.*s%s",
w
,w,

1053 
azArg
[
i
] ?ázArg[i] : 
p
->
nuŒVÆue
,

1054 
i
==
nArg
-1 ? 
rowSï
 : " ");

1059 
MODE_Semi
: {

1060 
	`utf8_¥ötf
(
p
->
out
, "%s;\n", 
azArg
[0]);

1063 
MODE_Pªây
: {

1064 *
z
;

1065 
j
;

1066 
nP¨í
 = 0;

1067 
cEnd
 = 0;

1068 
c
;

1069 
nLöe
 = 0;

1070 
	`as£π
–
nArg
==1 );

1071 if–
azArg
[0]==0 ) ;

1072 if–
	`sqlôe3_°æike
("CREATE VIEW%", 
azArg
[0], 0)==0

1073 || 
	`sqlôe3_°æike
("CREATE TRIG%", 
azArg
[0], 0)==0

1075 
	`utf8_¥ötf
(
p
->
out
, "%s;\n", 
azArg
[0]);

1078 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
azArg
[0]);

1079 
j
 = 0;

1080 
i
=0; 
	`IsS∑˚
(
z
[i]); i++){}

1081 ; (
c
 = 
z
[
i
])!=0; i++){

1082 if–
	`IsS∑˚
(
c
) ){

1083 if–
	`IsS∑˚
(
z
[
j
-1]) || z[j-1]=='(' ) ;

1084 }if–(
c
=='(' || c==')'Ë&& 
j
>0 && 
	`IsS∑˚
(
z
[j-1]) ){

1085 
j
--;

1087 
z
[
j
++] = 
c
;

1089  
j
>0 && 
	`IsS∑˚
(
z
[j-1]) ){ j--; }

1090 
z
[
j
] = 0;

1091 if–
	`°æí30
(
z
)>=79 ){

1092 
i
=
j
=0; (
c
 = 
z
[i])!=0; i++){

1093 if–
c
==
cEnd
 ){

1094 
cEnd
 = 0;

1095 }if–
c
=='"' || c=='\'' || c=='`' ){

1096 
cEnd
 = 
c
;

1097 }if–
c
=='[' ){

1098 
cEnd
 = ']';

1099 }if–
c
=='(' ){

1100 
nP¨í
++;

1101 }if–
c
==')' ){

1102 
nP¨í
--;

1103 if–
nLöe
>0 && 
nP¨í
==0 && 
j
>0 ){

1104 
	`utf8_¥ötf
(
p
->
out
, "%.*s\n", 
j
, 
z
);

1105 
j
 = 0;

1108 
z
[
j
++] = 
c
;

1109 if–
nP¨í
==1 && (
c
=='(' || c==',' || c=='\n') ){

1110 if–
c
=='\n' ) 
j
--;

1111 
	`utf8_¥ötf
(
p
->
out
, "%.*s\¿ ", 
j
, 
z
);

1112 
j
 = 0;

1113 
nLöe
++;

1114  
	`IsS∑˚
(
z
[
i
+1]) ){ i++; }

1117 
z
[
j
] = 0;

1119 
	`utf8_¥ötf
(
p
->
out
, "%s;\n", 
z
);

1120 
	`sqlôe3_‰ì
(
z
);

1123 
MODE_Li°
: {

1124 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1125 
i
=0; i<
nArg
; i++){

1126 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
azCﬁ
[
i
],

1127 
i
==
nArg
-1 ? 
p
->
rowSï¨©‹
 :Ö->
cﬁSï¨©‹
);

1130 if–
azArg
==0 ) ;

1131 
i
=0; i<
nArg
; i++){

1132 *
z
 = 
azArg
[
i
];

1133 if–
z
==0 ) z = 
p
->
nuŒVÆue
;

1134 
	`utf8_¥ötf
(
p
->
out
, "%s", 
z
);

1135 if–
i
<
nArg
-1 ){

1136 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1138 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1143 
MODE_Html
: {

1144 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1145 
	`øw_¥ötf
(
p
->
out
,"<TR>");

1146 
i
=0; i<
nArg
; i++){

1147 
	`øw_¥ötf
(
p
->
out
,"<TH>");

1148 
	`ouçut_html_°rög
(
p
->
out
, 
azCﬁ
[
i
]);

1149 
	`øw_¥ötf
(
p
->
out
,"</TH>\n");

1151 
	`øw_¥ötf
(
p
->
out
,"</TR>\n");

1153 if–
azArg
==0 ) ;

1154 
	`øw_¥ötf
(
p
->
out
,"<TR>");

1155 
i
=0; i<
nArg
; i++){

1156 
	`øw_¥ötf
(
p
->
out
,"<TD>");

1157 
	`ouçut_html_°rög
(
p
->
out
, 
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1158 
	`øw_¥ötf
(
p
->
out
,"</TD>\n");

1160 
	`øw_¥ötf
(
p
->
out
,"</TR>\n");

1163 
MODE_T˛
: {

1164 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1165 
i
=0; i<
nArg
; i++){

1166 
	`ouçut_c_°rög
(
p
->
out
,
azCﬁ
[
i
] ?ázCol[i] : "");

1167 if(
i
<
nArg
-1Ë
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1169 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1171 if–
azArg
==0 ) ;

1172 
i
=0; i<
nArg
; i++){

1173 
	`ouçut_c_°rög
(
p
->
out
, 
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1174 if(
i
<
nArg
-1Ë
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1176 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1179 
MODE_Csv
: {

1180 
	`£tBö¨yMode
(
p
->
out
, 1);

1181 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1182 
i
=0; i<
nArg
; i++){

1183 
	`ouçut_csv
(
p
, 
azCﬁ
[
i
] ?ázCﬁ[i] : "", i<
nArg
-1);

1185 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1187 if–
nArg
>0 ){

1188 
i
=0; i<
nArg
; i++){

1189 
	`ouçut_csv
(
p
, 
azArg
[
i
], i<
nArg
-1);

1191 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1193 
	`£tTextMode
(
p
->
out
, 1);

1196 
MODE_In£π
: {

1197 
p
->
˙t
++;

1198 if–
azArg
==0 ) ;

1199 
	`utf8_¥ötf
(
p
->
out
,"INSERT INTO %s",p->
zDe°TabÀ
);

1200 if–
p
->
showHódî
 ){

1201 
	`øw_¥ötf
(
p
->
out
,"(");

1202 
i
=0; i<
nArg
; i++){

1203 *
zSï
 = 
i
>0 ? ",": "";

1204 
	`utf8_¥ötf
(
p
->
out
, "%s%s", 
zSï
, 
azCﬁ
[
i
]);

1206 
	`øw_¥ötf
(
p
->
out
,")");

1208 
	`øw_¥ötf
(
p
->
out
," VALUES(");

1209 
i
=0; i<
nArg
; i++){

1210 *
zSï
 = 
i
>0 ? ",": "";

1211 if–(
azArg
[
i
]==0Ë|| (
aiTy≥
 &&áiTy≥[i]==
SQLITE_NULL
) ){

1212 
	`utf8_¥ötf
(
p
->
out
,"%sNULL",
zSï
);

1213 }if–
aiTy≥
 &&áiTy≥[
i
]==
SQLITE_TEXT
 ){

1214 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1215 
	`ouçut_quŸed_°rög
(
p
->
out
, 
azArg
[
i
]);

1216 }if–
aiTy≥
 && (aiTy≥[
i
]==
SQLITE_INTEGER


1217 || 
aiTy≥
[
i
]==
SQLITE_FLOAT
) ){

1218 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
zSï
, 
azArg
[
i
]);

1219 }if–
aiTy≥
 &&áiTy≥[
i
]==
SQLITE_BLOB
 && 
p
->
pStmt
 ){

1220 c⁄° *
pBlob
 = 
	`sqlôe3_cﬁumn_blob
(
p
->
pStmt
, 
i
);

1221 
nBlob
 = 
	`sqlôe3_cﬁumn_byãs
(
p
->
pStmt
, 
i
);

1222 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1223 
	`ouçut_hex_blob
(
p
->
out
, 
pBlob
, 
nBlob
);

1224 }if–
	`isNumbî
(
azArg
[
i
], 0) ){

1225 
	`utf8_¥ötf
(
p
->
out
,"%s%s",
zSï
, 
azArg
[
i
]);

1227 if–
zSï
[0] ) 
	`utf8_¥ötf
(
p
->
out
,"%s",zSep);

1228 
	`ouçut_quŸed_°rög
(
p
->
out
, 
azArg
[
i
]);

1231 
	`øw_¥ötf
(
p
->
out
,");\n");

1234 
MODE_Ascii
: {

1235 if–
p
->
˙t
++==0 &&Ö->
showHódî
 ){

1236 
i
=0; i<
nArg
; i++){

1237 if–
i
>0 ) 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1238 
	`utf8_¥ötf
(
p
->
out
,"%s",
azCﬁ
[
i
] ?ázCol[i] : "");

1240 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1242 if–
azArg
==0 ) ;

1243 
i
=0; i<
nArg
; i++){

1244 if–
i
>0 ) 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
cﬁSï¨©‹
);

1245 
	`utf8_¥ötf
(
p
->
out
,"%s",
azArg
[
i
] ?ázArg[i] :Ö->
nuŒVÆue
);

1247 
	`utf8_¥ötf
(
p
->
out
, "%s",Ö->
rowSï¨©‹
);

1252 
	}
}

1258 
	$ˇŒback
(*
pArg
, 
nArg
, **
azArg
, **
azCﬁ
){

1260  
	`shñl_ˇŒback
(
pArg
, 
nArg
, 
azArg
, 
azCﬁ
, 
NULL
);

1261 
	}
}

1268 
	$£t_èbÀ_«me
(
ShñlSèã
 *
p
, c⁄° *
zName
){

1269 
i
, 
n
;

1270 
√edQuŸe
;

1271 *
z
;

1273 if–
p
->
zDe°TabÀ
 ){

1274 
	`‰ì
(
p
->
zDe°TabÀ
);

1275 
p
->
zDe°TabÀ
 = 0;

1277 if–
zName
==0 ) ;

1278 
√edQuŸe
 = !
	`ißÕha
(()*
zName
) && *zName!='_';

1279 
i
=
n
=0; 
zName
[i]; i++,Ç++){

1280 if–!
	`iß um
(()
zName
[
i
]) && zName[i]!='_' ){

1281 
√edQuŸe
 = 1;

1282 if–
zName
[
i
]=='\'' ) 
n
++;

1285 if–
√edQuŸe
 ) 
n
 += 2;

1286 
z
 = 
p
->
zDe°TabÀ
 = 
	`mÆloc
–
n
+1 );

1287 if–
z
==0 ){

1288 
	`øw_¥ötf
(
°dîr
,"Error: out of memory\n");

1289 
	`exô
(1);

1291 
n
 = 0;

1292 if–
√edQuŸe
 ) 
z
[
n
++] = '\'';

1293 
i
=0; 
zName
[i]; i++){

1294 
z
[
n
++] = 
zName
[
i
];

1295 if–
zName
[
i
]=='\'' ) 
z
[
n
++] = '\'';

1297 if–
√edQuŸe
 ) 
z
[
n
++] = '\'';

1298 
z
[
n
] = 0;

1299 
	}
}

1309 *
	$≠≥ndText
(*
zIn
, c⁄° *
zAµíd
, 
quŸe
){

1310 
Àn
;

1311 
i
;

1312 
nAµíd
 = 
	`°æí30
(
zAµíd
);

1313 
nIn
 = (
zIn
?
	`°æí30
(zIn):0);

1315 
Àn
 = 
nAµíd
+
nIn
+1;

1316 if–
quŸe
 ){

1317 
Àn
 += 2;

1318 
i
=0; i<
nAµíd
; i++){

1319 if–
zAµíd
[
i
]==
quŸe
 ) 
Àn
++;

1323 
zIn
 = (*)
	`ªÆloc
(zIn, 
Àn
);

1324 if–!
zIn
 ){

1328 if–
quŸe
 ){

1329 *
zC§
 = &
zIn
[
nIn
];

1330 *
zC§
++ = 
quŸe
;

1331 
i
=0; i<
nAµíd
; i++){

1332 *
zC§
++ = 
zAµíd
[
i
];

1333 if–
zAµíd
[
i
]==
quŸe
 ) *
zC§
++ = quote;

1335 *
zC§
++ = 
quŸe
;

1336 *
zC§
++ = '\0';

1337 
	`as£π
–(
zC§
-
zIn
)==
Àn
 );

1339 
	`mem˝y
(&
zIn
[
nIn
], 
zAµíd
, 
nAµíd
);

1340 
zIn
[
Àn
-1] = '\0';

1343  
zIn
;

1344 
	}
}

1357 
	$run_èbÀ_dump_quîy
(

1358 
ShñlSèã
 *
p
,

1359 c⁄° *
zSñe˘
,

1360 c⁄° *
zFú°Row


1362 
sqlôe3_°mt
 *
pSñe˘
;

1363 
rc
;

1364 
nResu…
;

1365 
i
;

1366 c⁄° *
z
;

1367 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSñe˘
, -1, &
pSñe˘
, 0);

1368 if–
rc
!=
SQLITE_OK
 || !
pSñe˘
 ){

1369 
	`utf8_¥ötf
(
p
->
out
, "/**** ERROR: (%dË%†*****/\n", 
rc
,

1370 
	`sqlôe3_îrmsg
(
p
->
db
));

1371 if–(
rc
&0xff)!=
SQLITE_CORRUPT
 ) 
p
->
nEº
++;

1372  
rc
;

1374 
rc
 = 
	`sqlôe3_°ï
(
pSñe˘
);

1375 
nResu…
 = 
	`sqlôe3_cﬁumn_cou¡
(
pSñe˘
);

1376  
rc
==
SQLITE_ROW
 ){

1377 if–
zFú°Row
 ){

1378 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zFú°Row
);

1379 
zFú°Row
 = 0;

1381 
z
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSñe˘
, 0);

1382 
	`utf8_¥ötf
(
p
->
out
, "%s", 
z
);

1383 
i
=1; i<
nResu…
; i++){

1384 
	`utf8_¥ötf
(
p
->
out
, ",%s", 
	`sqlôe3_cﬁumn_ãxt
(
pSñe˘
, 
i
));

1386 if–
z
==0 ) z = "";

1387  
z
[0] && (z[0]!='-' || z[1]!='-') ) z++;

1388 if–
z
[0] ){

1389 
	`øw_¥ötf
(
p
->
out
, "\n;\n");

1391 
	`øw_¥ötf
(
p
->
out
, ";\n");

1393 
rc
 = 
	`sqlôe3_°ï
(
pSñe˘
);

1395 
rc
 = 
	`sqlôe3_föÆize
(
pSñe˘
);

1396 if–
rc
!=
SQLITE_OK
 ){

1397 
	`utf8_¥ötf
(
p
->
out
, "/**** ERROR: (%dË%†*****/\n", 
rc
,

1398 
	`sqlôe3_îrmsg
(
p
->
db
));

1399 if–(
rc
&0xff)!=
SQLITE_CORRUPT
 ) 
p
->
nEº
++;

1401  
rc
;

1402 
	}
}

1407 *
	$ßve_îr_msg
(

1408 
sqlôe3
 *
db


1410 
nEºMsg
 = 1+
	`°æí30
(
	`sqlôe3_îrmsg
(
db
));

1411 *
zEºMsg
 = 
	`sqlôe3_mÆloc64
(
nEºMsg
);

1412 if–
zEºMsg
 ){

1413 
	`mem˝y
(
zEºMsg
, 
	`sqlôe3_îrmsg
(
db
), 
nEºMsg
);

1415  
zEºMsg
;

1416 
	}
}

1418 #ifde‡
__löux__


1422 
	$di•œyLöuxIoSèts
(
FILE
 *
out
){

1423 
FILE
 *
ö
;

1424 
z
[200];

1425 
	`sqlôe3_¢¥ötf
((
z
), z, "/¥oc/%d/io", 
	`gëpid
());

1426 
ö
 = 
	`f›í
(
z
, "rb");

1427 if–
ö
==0 ) ;

1428  
	`fgës
(
z
, (z), 
ö
)!=0 ){

1430 c⁄° *
zP©ã∫
;

1431 c⁄° *
zDesc
;

1432 } 
aTøns
[] = {

1441 
i
;

1442 
i
=0; i<
	`AºaySize
(
aTøns
); i++){

1443 
n
 = ()
	`°æí
(
aTøns
[
i
].
zP©ã∫
);

1444 if–
	`°∫cmp
(
aTøns
[
i
].
zP©ã∫
, 
z
, 
n
)==0 ){

1445 
	`øw_¥ötf
(
out
, "%-36†%s", 
aTøns
[
i
].
zDesc
, &
z
[
n
]);

1450 
	`f˛o£
(
ö
);

1451 
	}
}

1458 
	$di•œy_°©s
(

1459 
sqlôe3
 *
db
,

1460 
ShñlSèã
 *
pArg
,

1461 
bRe£t


1463 
iCur
;

1464 
iHiwå
;

1466 if–
pArg
 &&ÖArg->
out
 ){

1468 
iHiwå
 = 
iCur
 = -1;

1469 
	`sqlôe3_°©us
(
SQLITE_STATUS_MEMORY_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1470 
	`øw_¥ötf
(
pArg
->
out
,

1472 
iCur
, 
iHiwå
);

1473 
iHiwå
 = 
iCur
 = -1;

1474 
	`sqlôe3_°©us
(
SQLITE_STATUS_MALLOC_COUNT
, &
iCur
, &
iHiwå
, 
bRe£t
);

1475 
	`øw_¥ötf
(
pArg
->
out
, "Number of Outstanding Allocations: %d (max %d)\n",

1476 
iCur
, 
iHiwå
);

1477 if–
pArg
->
shñlFlgs
 & 
SHFLG_Pageˇche
 ){

1478 
iHiwå
 = 
iCur
 = -1;

1479 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1480 
	`øw_¥ötf
(
pArg
->
out
,

1482 
iCur
, 
iHiwå
);

1484 
iHiwå
 = 
iCur
 = -1;

1485 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_OVERFLOW
, &
iCur
, &
iHiwå
, 
bRe£t
);

1486 
	`øw_¥ötf
(
pArg
->
out
,

1488 
iCur
, 
iHiwå
);

1489 if–
pArg
->
shñlFlgs
 & 
SHFLG_S¸©ch
 ){

1490 
iHiwå
 = 
iCur
 = -1;

1491 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1492 
	`øw_¥ötf
(
pArg
->
out
,

1494 
iCur
, 
iHiwå
);

1496 
iHiwå
 = 
iCur
 = -1;

1497 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_OVERFLOW
, &
iCur
, &
iHiwå
, 
bRe£t
);

1498 
	`øw_¥ötf
(
pArg
->
out
,

1500 
iCur
, 
iHiwå
);

1501 
iHiwå
 = 
iCur
 = -1;

1502 
	`sqlôe3_°©us
(
SQLITE_STATUS_MALLOC_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1503 
	`øw_¥ötf
(
pArg
->
out
, "Largest Allocation: %d bytes\n",

1504 
iHiwå
);

1505 
iHiwå
 = 
iCur
 = -1;

1506 
	`sqlôe3_°©us
(
SQLITE_STATUS_PAGECACHE_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1507 
	`øw_¥ötf
(
pArg
->
out
, "Largest Pcache Allocation: %d bytes\n",

1508 
iHiwå
);

1509 
iHiwå
 = 
iCur
 = -1;

1510 
	`sqlôe3_°©us
(
SQLITE_STATUS_SCRATCH_SIZE
, &
iCur
, &
iHiwå
, 
bRe£t
);

1511 
	`øw_¥ötf
(
pArg
->
out
, "Largest Scratch Allocation: %d bytes\n",

1512 
iHiwå
);

1513 #ifde‡
YYTRACKMAXSTACKDEPTH


1514 
iHiwå
 = 
iCur
 = -1;

1515 
	`sqlôe3_°©us
(
SQLITE_STATUS_PARSER_STACK
, &
iCur
, &
iHiwå
, 
bRe£t
);

1516 
	`øw_¥ötf
(
pArg
->
out
, "Deepest Parser Stack: %d (max %d)\n",

1517 
iCur
, 
iHiwå
);

1521 if–
pArg
 &&ÖArg->
out
 && 
db
 ){

1522 if–
pArg
->
shñlFlgs
 & 
SHFLG_Lookaside
 ){

1523 
iHiwå
 = 
iCur
 = -1;

1524 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_USED
,

1525 &
iCur
, &
iHiwå
, 
bRe£t
);

1526 
	`øw_¥ötf
(
pArg
->
out
,

1528 
iCur
, 
iHiwå
);

1529 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_HIT
,

1530 &
iCur
, &
iHiwå
, 
bRe£t
);

1531 
	`øw_¥ötf
(
pArg
->
out
, "SuccessfulÜookasideáttempts: %d\n",

1532 
iHiwå
);

1533 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
,

1534 &
iCur
, &
iHiwå
, 
bRe£t
);

1535 
	`øw_¥ötf
(
pArg
->
out
, "Lookaside failures dueÅo size: %d\n",

1536 
iHiwå
);

1537 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
,

1538 &
iCur
, &
iHiwå
, 
bRe£t
);

1539 
	`øw_¥ötf
(
pArg
->
out
, "Lookaside failures dueÅo OOM: %d\n",

1540 
iHiwå
);

1542 
iHiwå
 = 
iCur
 = -1;

1543 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1544 
	`øw_¥ötf
(
pArg
->
out
, "Pager Heap Usage: %d bytes\n",

1545 
iCur
);

1546 
iHiwå
 = 
iCur
 = -1;

1547 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_HIT
, &
iCur
, &
iHiwå
, 1);

1548 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêhôs: %d\n", 
iCur
);

1549 
iHiwå
 = 
iCur
 = -1;

1550 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_MISS
, &
iCur
, &
iHiwå
, 1);

1551 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêmis£s: %d\n", 
iCur
);

1552 
iHiwå
 = 
iCur
 = -1;

1553 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_CACHE_WRITE
, &
iCur
, &
iHiwå
, 1);

1554 
	`øw_¥ötf
(
pArg
->
out
, "Pagêˇchêwrôes: %d\n", 
iCur
);

1555 
iHiwå
 = 
iCur
 = -1;

1556 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_SCHEMA_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1557 
	`øw_¥ötf
(
pArg
->
out
, "Schema Heap Usage: %d bytes\n",

1558 
iCur
);

1559 
iHiwå
 = 
iCur
 = -1;

1560 
	`sqlôe3_db_°©us
(
db
, 
SQLITE_DBSTATUS_STMT_USED
, &
iCur
, &
iHiwå
, 
bRe£t
);

1561 
	`øw_¥ötf
(
pArg
->
out
, "Statement Heap/Lookaside Usage: %d bytes\n",

1562 
iCur
);

1565 if–
pArg
 &&ÖArg->
out
 && 
db
 &&ÖArg->
pStmt
 ){

1566 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_FULLSCAN_STEP
,

1567 
bRe£t
);

1568 
	`øw_¥ötf
(
pArg
->
out
, "FuŒsˇ¿Sãps: %d\n", 
iCur
);

1569 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_SORT
, 
bRe£t
);

1570 
	`øw_¥ötf
(
pArg
->
out
, "S‹àO≥øti⁄s: %d\n", 
iCur
);

1571 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_AUTOINDEX
,
bRe£t
);

1572 
	`øw_¥ötf
(
pArg
->
out
, "Autoödex In£πs: %d\n", 
iCur
);

1573 
iCur
 = 
	`sqlôe3_°mt_°©us
(
pArg
->
pStmt
, 
SQLITE_STMTSTATUS_VM_STEP
, 
bRe£t
);

1574 
	`øw_¥ötf
(
pArg
->
out
, "VútuÆ MachöêSãps: %d\n", 
iCur
);

1577 #ifde‡
__löux__


1578 
	`di•œyLöuxIoSèts
(
pArg
->
out
);

1584 
	}
}

1589 
	$di•œy_sˇn°©s
(

1590 
sqlôe3
 *
db
,

1591 
ShñlSèã
 *
pArg


1593 #i‚de‡
SQLITE_ENABLE_STMT_SCANSTATUS


1594 
	`UNUSED_PARAMETER
(
db
);

1595 
	`UNUSED_PARAMETER
(
pArg
);

1597 
i
, 
k
, 
n
, 
mx
;

1598 
	`øw_¥ötf
(
pArg
->
out
, "-------- scanstats --------\n");

1599 
mx
 = 0;

1600 
k
=0; k<=
mx
; k++){

1601 
rE°Lo›
 = 1.0;

1602 
i
=
n
=0; 1; i++){

1603 
sqlôe3_°mt
 *
p
 = 
pArg
->
pStmt
;

1604 
sqlôe3_öt64
 
nLo›
, 
nVisô
;

1605 
rE°
;

1606 
iSid
;

1607 c⁄° *
zEx∂aö
;

1608 if–
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_NLOOP
, (*)&
nLo›
) ){

1611 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_SELECTID
, (*)&
iSid
);

1612 if–
iSid
>
mx
 ) mx = iSid;

1613 if–
iSid
!=
k
 ) ;

1614 if–
n
==0 ){

1615 
rE°Lo›
 = ()
nLo›
;

1616 if–
k
>0 ) 
	`øw_¥ötf
(
pArg
->
out
, "-------- subquery %d -------\n", k);

1618 
n
++;

1619 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_NVISIT
, (*)&
nVisô
);

1620 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_EST
, (*)&
rE°
);

1621 
	`sqlôe3_°mt_sˇn°©us
(
p
, 
i
, 
SQLITE_SCANSTAT_EXPLAIN
, (*)&
zEx∂aö
);

1622 
	`utf8_¥ötf
(
pArg
->
out
, "Lo› %2d: %s\n", 
n
, 
zEx∂aö
);

1623 
rE°Lo›
 *
rE°
;

1624 
	`øw_¥ötf
(
pArg
->
out
,

1626 
nLo›
, 
nVisô
, (
sqlôe3_öt64
)(
rE°Lo›
+0.5), 
rE°


1630 
	`øw_¥ötf
(
pArg
->
out
, "---------------------------\n");

1632 
	}
}

1640 
	$°r_ö_¨øy
(c⁄° *
zSå
, c⁄° **
azAºay
){

1641 
i
;

1642 
i
=0; 
azAºay
[i]; i++){

1643 if–0==
	`°rcmp
(
zSå
, 
azAºay
[
i
]) )  1;

1646 
	}
}

1666 
	$ex∂aö_d©a_¥ï¨e
(
ShñlSèã
 *
p
, 
sqlôe3_°mt
 *
pSql
){

1667 c⁄° *
zSql
;

1668 c⁄° *
z
;

1669 *
abYõld
 = 0;

1670 
nAŒoc
 = 0;

1671 
iOp
;

1673 c⁄° *
azNext
[] = { "Next", "Prev", "VPrev", "VNext", "SorterNext",

1675 c⁄° *
azYõld
[] = { "Yield", "SeekLT", "SeekGT", "RowSetRead",

1677 c⁄° *
azGŸo
[] = { "Goto", 0 };

1681 if–
	`sqlôe3_cﬁumn_cou¡
(
pSql
)!=8 ){

1682 
p
->
cMode
 =Ö->
mode
;

1685 
zSql
 = 
	`sqlôe3_sql
(
pSql
);

1686 if–
zSql
==0 ) ;

1687 
z
=
zSql
; *z==' ' || *z=='\t' || *z=='\n' || *z=='\f' || *z=='\r'; z++);

1688 if–
	`sqlôe3_°∫icmp
(
z
, "explain", 7) ){

1689 
p
->
cMode
 =Ö->
mode
;

1693 
iOp
=0; 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pSql
); iOp++){

1694 
i
;

1695 
iAddr
 = 
	`sqlôe3_cﬁumn_öt
(
pSql
, 0);

1696 c⁄° *
zOp
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pSql
, 1);

1703 
p2
 = 
	`sqlôe3_cﬁumn_öt
(
pSql
, 3);

1704 
p2›
 = (
p2
 + (
iOp
-
iAddr
));

1707 if–
iOp
>=
nAŒoc
 ){

1708 if–
iOp
==0 ){

1711 c⁄° *
ex∂aöCﬁs
[] = {

1713 
jj
;

1714 
jj
=0; jj<
	`AºaySize
(
ex∂aöCﬁs
); jj++){

1715 if–
	`°rcmp
(
	`sqlôe3_cﬁumn_«me
(
pSql
,
jj
),
ex∂aöCﬁs
[jj])!=0 ){

1716 
p
->
cMode
 =Ö->
mode
;

1717 
	`sqlôe3_ª£t
(
pSql
);

1722 
nAŒoc
 += 100;

1723 
p
->
aiIndít
 = (*)
	`sqlôe3_ªÆloc64
’->aiIndít, 
nAŒoc
*());

1724 
abYõld
 = (*)
	`sqlôe3_ªÆloc64
◊bYõld, 
nAŒoc
*());

1726 
abYõld
[
iOp
] = 
	`°r_ö_¨øy
(
zOp
, 
azYõld
);

1727 
p
->
aiIndít
[
iOp
] = 0;

1728 
p
->
nIndít
 = 
iOp
+1;

1730 if–
	`°r_ö_¨øy
(
zOp
, 
azNext
) ){

1731 
i
=
p2›
; i<
iOp
; i++Ë
p
->
aiIndít
[i] += 2;

1733 if–
	`°r_ö_¨øy
(
zOp
, 
azGŸo
Ë&& 
p2›
<
p
->
nIndít


1734 && (
abYõld
[
p2›
] || 
	`sqlôe3_cﬁumn_öt
(
pSql
, 2))

1736 
i
=
p2›
; i<
iOp
; i++Ë
p
->
aiIndít
[i] += 2;

1740 
p
->
iIndít
 = 0;

1741 
	`sqlôe3_‰ì
(
abYõld
);

1742 
	`sqlôe3_ª£t
(
pSql
);

1743 
	}
}

1748 
	$ex∂aö_d©a_dñëe
(
ShñlSèã
 *
p
){

1749 
	`sqlôe3_‰ì
(
p
->
aiIndít
);

1750 
p
->
aiIndít
 = 0;

1751 
p
->
nIndít
 = 0;

1752 
p
->
iIndít
 = 0;

1753 
	}
}

1758 #i‡
deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1759 
sqlôe3Sñe˘Tø˚
;

1760 
	gßvedSñe˘Tø˚
;

1762 #i‡
deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1763 
sqlôe3WhîeTø˚
;

1764 
	gßvedWhîeTø˚
;

1766 
	$dißbÀ_debug_åa˚_modes
(){

1767 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1768 
ßvedSñe˘Tø˚
 = 
sqlôe3Sñe˘Tø˚
;

1769 
sqlôe3Sñe˘Tø˚
 = 0;

1771 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1772 
ßvedWhîeTø˚
 = 
sqlôe3WhîeTø˚
;

1773 
sqlôe3WhîeTø˚
 = 0;

1775 
	}
}

1776 
	$ª°‹e_debug_åa˚_modes
(){

1777 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

1778 
sqlôe3Sñe˘Tø˚
 = 
ßvedSñe˘Tø˚
;

1780 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

1781 
sqlôe3WhîeTø˚
 = 
ßvedWhîeTø˚
;

1783 
	}
}

1788 
exec_¥ï¨ed_°mt
(

1789 
ShñlSèã
 *
pArg
,

1790 
sqlôe3_°mt
 *
pStmt
,

1791 (*
xCÆlback
)(*,,**,**,*)

1793 
rc
;

1798 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1800 if–
SQLITE_ROW
 =
rc
 ){

1802 if–
xCÆlback
 ){

1804 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

1805 *
pD©a
 = 
	`sqlôe3_mÆloc64
(3*
nCﬁ
*(const *) + 1);

1806 if–!
pD©a
 ){

1807 
rc
 = 
SQLITE_NOMEM
;

1809 **
azCﬁs
 = (**)
pD©a
;

1810 **
azVÆs
 = &
azCﬁs
[
nCﬁ
];

1811 *
aiTy≥s
 = (*)&
azVÆs
[
nCﬁ
];

1812 
i
, 
x
;

1813 
	`as£π
(() <= (*));

1815 
i
=0; i<
nCﬁ
; i++){

1816 
azCﬁs
[
i
] = (*)
	`sqlôe3_cﬁumn_«me
(
pStmt
, i);

1820 
i
=0; i<
nCﬁ
; i++){

1821 
aiTy≥s
[
i
] = 
x
 = 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, i);

1822 if–
x
==
SQLITE_BLOB
 && 
pArg
 &&ÖArg->
cMode
==
MODE_In£π
 ){

1823 
azVÆs
[
i
] = "";

1825 
azVÆs
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, i);

1827 if–!
azVÆs
[
i
] && (
aiTy≥s
[i]!=
SQLITE_NULL
) ){

1828 
rc
 = 
SQLITE_NOMEM
;

1834 if–
SQLITE_ROW
 =
rc
 ){

1836 if–
	`xCÆlback
(
pArg
, 
nCﬁ
, 
azVÆs
, 
azCﬁs
, 
aiTy≥s
) ){

1837 
rc
 = 
SQLITE_ABORT
;

1839 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1842 }  
SQLITE_ROW
 =
rc
 );

1843 
	`sqlôe3_‰ì
(
pD©a
);

1847 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

1848 }  
rc
 =
SQLITE_ROW
 );

1851 
	}
}

1862 
shñl_exec
(

1863 
sqlôe3
 *
db
,

1864 c⁄° *
zSql
,

1865 (*
xCÆlback
)(*,,**,**,*),

1867 
ShñlSèã
 *
pArg
,

1868 **
pzEºMsg


1870 
sqlôe3_°mt
 *
pStmt
 = 
NULL
;

1871 
rc
 = 
SQLITE_OK
;

1872 
rc2
;

1873 c⁄° *
zLe·ovî
;

1875 if–
pzEºMsg
 ){

1876 *
pzEºMsg
 = 
NULL
;

1879  
zSql
[0] && (
SQLITE_OK
 =
rc
) ){

1880 c⁄° *
zStmtSql
;

1881 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, &
zLe·ovî
);

1882 if–
SQLITE_OK
 !
rc
 ){

1883 if–
pzEºMsg
 ){

1884 *
pzEºMsg
 = 
	`ßve_îr_msg
(
db
);

1887 if–!
pStmt
 ){

1889 
zSql
 = 
zLe·ovî
;

1890  
	`IsS∑˚
(
zSql
[0]) ) zSql++;

1893 
zStmtSql
 = 
	`sqlôe3_sql
(
pStmt
);

1894  
	`IsS∑˚
(
zStmtSql
[0]) ) zStmtSql++;

1897 if–
pArg
 ){

1898 
pArg
->
pStmt
 =ÖStmt;

1899 
pArg
->
˙t
 = 0;

1903 if–
pArg
 &&ÖArg->
echoOn
 ){

1904 
	`utf8_¥ötf
(
pArg
->
out
, "%s\n", 
zStmtSql
 ? zStmtSq»: 
zSql
);

1908 if–
pArg
 &&ÖArg->
autoEQP
 && 
	`sqlôe3_°æike
("EXPLAIN%",
zStmtSql
,0)!=0 ){

1909 
sqlôe3_°mt
 *
pEx∂aö
;

1910 *
zEQP
;

1911 
	`dißbÀ_debug_åa˚_modes
();

1912 
zEQP
 = 
	`sqlôe3_m¥ötf
("EXPLAIN QUERY PLAN %s", 
zStmtSql
);

1913 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zEQP
, -1, &
pEx∂aö
, 0);

1914 if–
rc
==
SQLITE_OK
 ){

1915  
	`sqlôe3_°ï
(
pEx∂aö
)==
SQLITE_ROW
 ){

1916 
	`øw_¥ötf
(
pArg
->
out
,"--EQP-- %d,",
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 0));

1917 
	`øw_¥ötf
(
pArg
->
out
,"%d,", 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 1));

1918 
	`øw_¥ötf
(
pArg
->
out
,"%d,", 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 2));

1919 
	`utf8_¥ötf
(
pArg
->
out
,"%s\n", 
	`sqlôe3_cﬁumn_ãxt
(
pEx∂aö
, 3));

1922 
	`sqlôe3_föÆize
(
pEx∂aö
);

1923 
	`sqlôe3_‰ì
(
zEQP
);

1924 if–
pArg
->
autoEQP
>=2 ){

1926 
zEQP
 = 
	`sqlôe3_m¥ötf
("EXPLAIN %s", 
zStmtSql
);

1927 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zEQP
, -1, &
pEx∂aö
, 0);

1928 if–
rc
==
SQLITE_OK
 ){

1929 
pArg
->
cMode
 = 
MODE_Ex∂aö
;

1930 
	`ex∂aö_d©a_¥ï¨e
(
pArg
, 
pEx∂aö
);

1931 
	`exec_¥ï¨ed_°mt
(
pArg
, 
pEx∂aö
, 
xCÆlback
);

1932 
	`ex∂aö_d©a_dñëe
(
pArg
);

1934 
	`sqlôe3_föÆize
(
pEx∂aö
);

1935 
	`sqlôe3_‰ì
(
zEQP
);

1937 
	`ª°‹e_debug_åa˚_modes
();

1940 if–
pArg
 ){

1941 
pArg
->
cMode
 =ÖArg->
mode
;

1942 if–
pArg
->
autoEx∂aö


1943 && 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)==8

1944 && 
	`sqlôe3_°æike
("EXPLAIN%", 
zStmtSql
,0)==0

1946 
pArg
->
cMode
 = 
MODE_Ex∂aö
;

1951 if–
pArg
->
cMode
==
MODE_Ex∂aö
 ){

1952 
	`ex∂aö_d©a_¥ï¨e
(
pArg
, 
pStmt
);

1956 
	`exec_¥ï¨ed_°mt
(
pArg
, 
pStmt
, 
xCÆlback
);

1957 
	`ex∂aö_d©a_dñëe
(
pArg
);

1960 if–
pArg
 &&ÖArg->
°©sOn
 ){

1961 
	`di•œy_°©s
(
db
, 
pArg
, 0);

1965 if–
pArg
 &&ÖArg->
sˇn°©sOn
 ){

1966 
	`di•œy_sˇn°©s
(
db
, 
pArg
);

1972 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

1973 if–
rc
!=
SQLITE_NOMEM
 )Ñ¯
rc2
;

1974 if–
rc
==
SQLITE_OK
 ){

1975 
zSql
 = 
zLe·ovî
;

1976  
	`IsS∑˚
(
zSql
[0]) ) zSql++;

1977 }if–
pzEºMsg
 ){

1978 *
pzEºMsg
 = 
	`ßve_îr_msg
(
db
);

1982 if–
pArg
 ){

1983 
pArg
->
pStmt
 = 
NULL
;

1988  
rc
;

1989 
	}
}

1998 
	$dump_ˇŒback
(*
pArg
, 
nArg
, **
azArg
, **
azCﬁ
){

1999 
rc
;

2000 c⁄° *
zTabÀ
;

2001 c⁄° *
zTy≥
;

2002 c⁄° *
zSql
;

2003 c⁄° *
zPªpStmt
 = 0;

2004 
ShñlSèã
 *
p
 = (ShñlSèã *)
pArg
;

2006 
	`UNUSED_PARAMETER
(
azCﬁ
);

2007 if–
nArg
!=3 )  1;

2008 
zTabÀ
 = 
azArg
[0];

2009 
zTy≥
 = 
azArg
[1];

2010 
zSql
 = 
azArg
[2];

2012 if–
	`°rcmp
(
zTabÀ
, "sqlite_sequence")==0 ){

2013 
zPªpStmt
 = "DELETE FROM sqlite_sequence;\n";

2014 }if–
	`sqlôe3_°rglob
("sqlôe_°©?", 
zTabÀ
)==0 ){

2015 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

2016 }if–
	`°∫cmp
(
zTabÀ
, "sqlite_", 7)==0 ){

2018 }if–
	`°∫cmp
(
zSql
, "CREATE VIRTUAL TABLE", 20)==0 ){

2019 *
zIns
;

2020 if–!
p
->
wrôabÀSchema
 ){

2021 
	`øw_¥ötf
(
p
->
out
, "PRAGMA writable_schema=ON;\n");

2022 
p
->
wrôabÀSchema
 = 1;

2024 
zIns
 = 
	`sqlôe3_m¥ötf
(

2027 
zTabÀ
, zTabÀ, 
zSql
);

2028 
	`utf8_¥ötf
(
p
->
out
, "%s\n", 
zIns
);

2029 
	`sqlôe3_‰ì
(
zIns
);

2032 
	`utf8_¥ötf
(
p
->
out
, "%s;\n", 
zSql
);

2035 if–
	`°rcmp
(
zTy≥
, "table")==0 ){

2036 
sqlôe3_°mt
 *
pTabÀInfo
 = 0;

2037 *
zSñe˘
 = 0;

2038 *
zTabÀInfo
 = 0;

2039 *
zTmp
 = 0;

2040 
nRow
 = 0;

2042 
zTabÀInfo
 = 
	`≠≥ndText
(zTableInfo, "PRAGMAÅable_info(", 0);

2043 
zTabÀInfo
 = 
	`≠≥ndText
(zTabÀInfo, 
zTabÀ
, '"');

2044 
zTabÀInfo
 = 
	`≠≥ndText
(zTableInfo, ");", 0);

2046 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zTabÀInfo
, -1, &
pTabÀInfo
, 0);

2047 
	`‰ì
(
zTabÀInfo
);

2048 if–
rc
!=
SQLITE_OK
 || !
pTabÀInfo
 ){

2052 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "SELECT 'INSERT INTO ' || ", 0);

2055 
zTmp
 = 
	`≠≥ndText
(zTmp, 
zTabÀ
, '"');

2056 if–
zTmp
 ){

2057 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zTmp
, '\'');

2058 
	`‰ì
(
zTmp
);

2060 
zSñe˘
 = 
	`≠≥ndText
(zSelect, " || ' VALUES(' || ", 0);

2061 
rc
 = 
	`sqlôe3_°ï
(
pTabÀInfo
);

2062  
rc
==
SQLITE_ROW
 ){

2063 c⁄° *
zText
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pTabÀInfo
, 1);

2064 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "quote(", 0);

2065 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zText
, '"');

2066 
rc
 = 
	`sqlôe3_°ï
(
pTabÀInfo
);

2067 if–
rc
==
SQLITE_ROW
 ){

2068 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "), ", 0);

2070 
zSñe˘
 = 
	`≠≥ndText
(zSelect, ") ", 0);

2072 
nRow
++;

2074 
rc
 = 
	`sqlôe3_föÆize
(
pTabÀInfo
);

2075 if–
rc
!=
SQLITE_OK
 || 
nRow
==0 ){

2076 
	`‰ì
(
zSñe˘
);

2079 
zSñe˘
 = 
	`≠≥ndText
(zSelect, "|| ')' FROM ", 0);

2080 
zSñe˘
 = 
	`≠≥ndText
(zSñe˘, 
zTabÀ
, '"');

2082 
rc
 = 
	`run_èbÀ_dump_quîy
(
p
, 
zSñe˘
, 
zPªpStmt
);

2083 if–
rc
==
SQLITE_CORRUPT
 ){

2084 
zSñe˘
 = 
	`≠≥ndText
(zSelect, " ORDER BYÑowid DESC", 0);

2085 
	`run_èbÀ_dump_quîy
(
p
, 
zSñe˘
, 0);

2087 
	`‰ì
(
zSñe˘
);

2090 
	}
}

2099 
	$run_schema_dump_quîy
(

2100 
ShñlSèã
 *
p
,

2101 c⁄° *
zQuîy


2103 
rc
;

2104 *
zEº
 = 0;

2105 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zQuîy
, 
dump_ˇŒback
,Ö, &
zEº
);

2106 if–
rc
==
SQLITE_CORRUPT
 ){

2107 *
zQ2
;

2108 
Àn
 = 
	`°æí30
(
zQuîy
);

2109 
	`øw_¥ötf
(
p
->
out
, "/****** CORRUPTION ERROR *******/\n");

2110 if–
zEº
 ){

2111 
	`utf8_¥ötf
(
p
->
out
, "/****** %†******/\n", 
zEº
);

2112 
	`sqlôe3_‰ì
(
zEº
);

2113 
zEº
 = 0;

2115 
zQ2
 = 
	`mÆloc
–
Àn
+100 );

2116 if–
zQ2
==0 )  
rc
;

2117 
	`sqlôe3_¢¥ötf
(
Àn
+100, 
zQ2
, "%†ORDER BYÑowid DESC", 
zQuîy
);

2118 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zQ2
, 
dump_ˇŒback
,Ö, &
zEº
);

2119 if–
rc
 ){

2120 
	`utf8_¥ötf
(
p
->
out
, "/****** ERROR: %†******/\n", 
zEº
);

2122 
rc
 = 
SQLITE_CORRUPT
;

2124 
	`sqlôe3_‰ì
(
zEº
);

2125 
	`‰ì
(
zQ2
);

2127  
rc
;

2128 
	}
}

2133 
	gzHñp
[] =

2156 #ifde‡
SQLITE_ENABLE_IOTRACE


2160 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2189 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2209 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2213 
	$£ssi⁄_hñp
(
ShñlSèã
 *
p
){

2214 
	`øw_¥ötf
(
p
->
out
,

2229 
	}
}

2234 
¥o˚ss_öput
(
ShñlSèã
 *
p
, 
FILE
 *
ö
);

2240 
	$ªadfûeFunc
(

2241 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

2242 
¨gc
,

2243 
sqlôe3_vÆue
 **
¨gv


2245 c⁄° *
zName
;

2246 
FILE
 *
ö
;

2247 
nIn
;

2248 *
pBuf
;

2250 
	`UNUSED_PARAMETER
(
¨gc
);

2251 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2252 if–
zName
==0 ) ;

2253 
ö
 = 
	`f›í
(
zName
, "rb");

2254 if–
ö
==0 ) ;

2255 
	`f£ek
(
ö
, 0, 
SEEK_END
);

2256 
nIn
 = 
	`·ñl
(
ö
);

2257 
	`ªwöd
(
ö
);

2258 
pBuf
 = 
	`sqlôe3_mÆloc64
–
nIn
 );

2259 if–
pBuf
 && 1==
	`‰ód
’Buf, 
nIn
, 1, 
ö
) ){

2260 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
pBuf
, 
nIn
, 
sqlôe3_‰ì
);

2262 
	`sqlôe3_‰ì
(
pBuf
);

2264 
	`f˛o£
(
ö
);

2265 
	}
}

2273 
	$wrôefûeFunc
(

2274 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

2275 
¨gc
,

2276 
sqlôe3_vÆue
 **
¨gv


2278 
FILE
 *
out
;

2279 c⁄° *
z
;

2280 
sqlôe3_öt64
 
rc
;

2281 c⁄° *
zFûe
;

2283 
	`UNUSED_PARAMETER
(
¨gc
);

2284 
zFûe
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2285 if–
zFûe
==0 ) ;

2286 
out
 = 
	`f›í
(
zFûe
, "wb");

2287 if–
out
==0 ) ;

2288 
z
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[1]);

2289 if–
z
==0 ){

2290 
rc
 = 0;

2292 
rc
 = 
	`fwrôe
(
z
, 1, 
	`sqlôe3_vÆue_byãs
(
¨gv
[1]), 
out
);

2294 
	`f˛o£
(
out
);

2295 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
rc
);

2296 
	}
}

2298 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2303 
	$£ssi⁄_˛o£
(
O≥nSessi⁄
 *
pSessi⁄
){

2304 
i
;

2305 
	`sqlôe3£ssi⁄_dñëe
(
pSessi⁄
->
p
);

2306 
	`sqlôe3_‰ì
(
pSessi⁄
->
zName
);

2307 
i
=0; i<
pSessi⁄
->
nFûãr
; i++){

2308 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
[
i
]);

2310 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
);

2311 
	`mem£t
(
pSessi⁄
, 0, (
O≥nSessi⁄
));

2312 
	}
}

2318 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2319 
	$£ssi⁄_˛o£_Æl
(
ShñlSèã
 *
p
){

2320 
i
;

2321 
i
=0; i<
p
->
nSessi⁄
; i++){

2322 
	`£ssi⁄_˛o£
(&
p
->
aSessi⁄
[
i
]);

2324 
p
->
nSessi⁄
 = 0;

2325 
	}
}

2327 
	#£ssi⁄_˛o£_Æl
(
X
)

	)

2334 #i‡
deföed
(
SQLITE_ENABLE_SESSION
)

2335 
	$£ssi⁄_fûãr
(*
pCtx
, c⁄° *
zTab
){

2336 
O≥nSessi⁄
 *
pSessi⁄
 = (O≥nSessi⁄*)
pCtx
;

2337 
i
;

2338 
i
=0; i<
pSessi⁄
->
nFûãr
; i++){

2339 if–
	`sqlôe3_°rglob
(
pSessi⁄
->
azFûãr
[
i
], 
zTab
)==0 )  0;

2342 
	}
}

2349 
	$›í_db
(
ShñlSèã
 *
p
, 
kìpAlive
){

2350 if–
p
->
db
==0 ){

2351 
	`sqlôe3_öôülize
();

2352 
	`sqlôe3_›í
(
p
->
zDbFûíame
, &p->
db
);

2353 
globÆDb
 = 
p
->
db
;

2354 if–
p
->
db
 && 
	`sqlôe3_îrcode
’->db)==
SQLITE_OK
 ){

2355 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "shñl°©ic", 0, 
SQLITE_UTF8
, 0,

2356 
shñl°©icFunc
, 0, 0);

2358 if–
p
->
db
==0 || 
SQLITE_OK
!=
	`sqlôe3_îrcode
(p->db) ){

2359 
	`utf8_¥ötf
(
°dîr
,"Error: unableÅo open database \"%s\": %s\n",

2360 
p
->
zDbFûíame
, 
	`sqlôe3_îrmsg
’->
db
));

2361 if–
kìpAlive
 ) ;

2362 
	`exô
(1);

2364 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2365 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
p
->
db
, 1);

2367 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "ªadfûe", 1, 
SQLITE_UTF8
, 0,

2368 
ªadfûeFunc
, 0, 0);

2369 
	`sqlôe3_¸óã_fun˘i⁄
(
p
->
db
, "wrôefûe", 2, 
SQLITE_UTF8
, 0,

2370 
wrôefûeFunc
, 0, 0);

2372 
	}
}

2390 
	$ªsﬁve_back¶ashes
(*
z
){

2391 
i
, 
j
;

2392 
c
;

2393  *
z
 && *z!='\\' ) z++;

2394 
i
=
j
=0; (
c
 = 
z
[i])!=0; i++, j++){

2395 if–
c
=='\\' && 
z
[
i
+1]!=0 ){

2396 
c
 = 
z
[++
i
];

2397 if–
c
=='a' ){

2398 
c
 = '\a';

2399 }if–
c
=='b' ){

2400 
c
 = '\b';

2401 }if–
c
=='t' ){

2402 
c
 = '\t';

2403 }if–
c
=='n' ){

2404 
c
 = '\n';

2405 }if–
c
=='v' ){

2406 
c
 = '\v';

2407 }if–
c
=='f' ){

2408 
c
 = '\f';

2409 }if–
c
=='r' ){

2410 
c
 = '\r';

2411 }if–
c
=='"' ){

2412 
c
 = '"';

2413 }if–
c
=='\'' ){

2414 
c
 = '\'';

2415 }if–
c
=='\\' ){

2416 
c
 = '\\';

2417 }if–
c
>='0' && c<='7' ){

2418 
c
 -= '0';

2419 if–
z
[
i
+1]>='0' && z[i+1]<='7' ){

2420 
i
++;

2421 
c
 = (c<<3Ë+ 
z
[
i
] - '0';

2422 if–
z
[
i
+1]>='0' && z[i+1]<='7' ){

2423 
i
++;

2424 
c
 = (c<<3Ë+ 
z
[
i
] - '0';

2429 
z
[
j
] = 
c
;

2431 if–
j
<
i
 ) 
z
[j] = 0;

2432 
	}
}

2438 
	$hexDigôVÆue
(
c
){

2439 if–
c
>='0' && c<='9' )  c - '0';

2440 if–
c
>='a' && c<='f' )  c - 'a' + 10;

2441 if–
c
>='A' && c<='F' )  c - 'A' + 10;

2443 
	}
}

2448 
sqlôe3_öt64
 
	$öãgîVÆue
(c⁄° *
zArg
){

2449 
sqlôe3_öt64
 
v
 = 0;

2450 c⁄° såu˘ { *
zSuffix
; 
iMu…
; } 
aMu…
[] = {

2461 
i
;

2462 
isNeg
 = 0;

2463 if–
zArg
[0]=='-' ){

2464 
isNeg
 = 1;

2465 
zArg
++;

2466 }if–
zArg
[0]=='+' ){

2467 
zArg
++;

2469 if–
zArg
[0]=='0' && zArg[1]=='x' ){

2470 
x
;

2471 
zArg
 += 2;

2472  (
x
 = 
	`hexDigôVÆue
(
zArg
[0]))>=0 ){

2473 
v
 = (v<<4Ë+ 
x
;

2474 
zArg
++;

2477  
	`IsDigô
(
zArg
[0]) ){

2478 
v
 = v*10 + 
zArg
[0] - '0';

2479 
zArg
++;

2482 
i
=0; i<
	`AºaySize
(
aMu…
); i++){

2483 if–
	`sqlôe3_°ricmp
(
aMu…
[
i
].
zSuffix
, 
zArg
)==0 ){

2484 
v
 *
aMu…
[
i
].
iMu…
;

2488  
isNeg
? -
v
 : v;

2489 
	}
}

2495 
	$boﬁónVÆue
(*
zArg
){

2496 
i
;

2497 if–
zArg
[0]=='0' && zArg[1]=='x' ){

2498 
i
=2; 
	`hexDigôVÆue
(
zArg
[i])>=0; i++){}

2500 
i
=0; 
zArg
[i]>='0' && zArg[i]<='9'; i++){}

2502 if–
i
>0 && 
zArg
[i]==0 )  ()(
	`öãgîVÆue
(zArg) & 0xffffffff);

2503 if–
	`sqlôe3_°ricmp
(
zArg
, "on")==0 || sqlite3_stricmp(zArg,"yes")==0 ){

2506 if–
	`sqlôe3_°ricmp
(
zArg
, "off")==0 || sqlite3_stricmp(zArg,"no")==0 ){

2509 
	`utf8_¥ötf
(
°dîr
, "ERROR: Notá boolean value: \"%s\". Assuming \"no\".\n",

2510 
zArg
);

2512 
	}
}

2517 
	$ouçut_fûe_˛o£
(
FILE
 *
f
){

2518 if–
f
 && f!=
°dout
 && f!=
°dîr
 ) 
	`f˛o£
(f);

2519 
	}
}

2526 
FILE
 *
	$ouçut_fûe_›í
(c⁄° *
zFûe
){

2527 
FILE
 *
f
;

2528 if–
	`°rcmp
(
zFûe
,"stdout")==0 ){

2529 
f
 = 
°dout
;

2530 }if–
	`°rcmp
(
zFûe
, "stderr")==0 ){

2531 
f
 = 
°dîr
;

2532 }if–
	`°rcmp
(
zFûe
, "off")==0 ){

2533 
f
 = 0;

2535 
f
 = 
	`f›í
(
zFûe
, "wb");

2536 if–
f
==0 ){

2537 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zFûe
);

2540  
f
;

2541 
	}
}

2546 
	$sql_åa˚_ˇŒback
(

2547 
mTy≥
,

2548 *
pArg
,

2549 *
pP
,

2550 *
pX


2552 
FILE
 *
f
 = (FILE*)
pArg
;

2553 
	`UNUSED_PARAMETER
(
mTy≥
);

2554 
	`UNUSED_PARAMETER
(
pP
);

2555 if–
f
 ){

2556 c⁄° *
z
 = (c⁄° *)
pX
;

2557 
i
 = ()
	`°æí
(
z
);

2558  
i
>0 && 
z
[i-1]==';' ){ i--; }

2559 
	`utf8_¥ötf
(
f
, "%.*s;\n", 
i
, 
z
);

2562 
	}
}

2568 
	$ã°_bªakpoöt
(){

2569 
nCÆl
 = 0;

2570 
nCÆl
++;

2571 
	}
}

2576 
Imp‹tCtx
 
	tImp‹tCtx
;

2577 
	sImp‹tCtx
 {

2578 c⁄° *
	mzFûe
;

2579 
FILE
 *
	mö
;

2580 *
	mz
;

2581 
	mn
;

2582 
	mnAŒoc
;

2583 
	mnLöe
;

2584 
	mcTîm
;

2585 
	mcCﬁSï
;

2586 
	mcRowSï
;

2590 
	$imp‹t_≠≥nd_ch¨
(
Imp‹tCtx
 *
p
, 
c
){

2591 if–
p
->
n
+1>ı->
nAŒoc
 ){

2592 
p
->
nAŒoc
 +=Ö->nAlloc + 100;

2593 
p
->
z
 = 
	`sqlôe3_ªÆloc64
’->z,Ö->
nAŒoc
);

2594 if–
p
->
z
==0 ){

2595 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

2596 
	`exô
(1);

2599 
p
->
z
[p->
n
++] = ()
c
;

2600 
	}
}

2615 *
SQLITE_CDECL
 
	$csv_ªad_⁄e_fõld
(
Imp‹tCtx
 *
p
){

2616 
c
;

2617 
cSï
 = 
p
->
cCﬁSï
;

2618 
rSï
 = 
p
->
cRowSï
;

2619 
p
->
n
 = 0;

2620 
c
 = 
	`fgëc
(
p
->
ö
);

2621 if–
c
==
EOF
 || 
£íI¡îru±
 ){

2622 
p
->
cTîm
 = 
EOF
;

2625 if–
c
=='"' ){

2626 
pc
, 
µc
;

2627 
°¨tLöe
 = 
p
->
nLöe
;

2628 
cQuŸe
 = 
c
;

2629 
pc
 = 
µc
 = 0;

2631 
c
 = 
	`fgëc
(
p
->
ö
);

2632 if–
c
==
rSï
 ) 
p
->
nLöe
++;

2633 if–
c
==
cQuŸe
 ){

2634 if–
pc
==
cQuŸe
 ){

2635 
pc
 = 0;

2639 if–(
c
==
cSï
 && 
pc
==
cQuŸe
)

2640 || (
c
==
rSï
 && 
pc
==
cQuŸe
)

2641 || (
c
==
rSï
 && 
pc
=='\r' && 
µc
==
cQuŸe
)

2642 || (
c
==
EOF
 && 
pc
==
cQuŸe
)

2644 do{ 
p
->
n
--; }Ö->
z
[p->n]!=
cQuŸe
 );

2645 
p
->
cTîm
 = 
c
;

2648 if–
pc
==
cQuŸe
 && 
c
!='\r' ){

2649 
	`utf8_¥ötf
(
°dîr
, "%s:%d: unescaped %c character\n",

2650 
p
->
zFûe
,Ö->
nLöe
, 
cQuŸe
);

2652 if–
c
==
EOF
 ){

2653 
	`utf8_¥ötf
(
°dîr
, "%s:%d: unterminated %c-quoted field\n",

2654 
p
->
zFûe
, 
°¨tLöe
, 
cQuŸe
);

2655 
p
->
cTîm
 = 
c
;

2658 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2659 
µc
 = 
pc
;

2660 
pc
 = 
c
;

2663  
c
!=
EOF
 && c!=
cSï
 && c!=
rSï
 ){

2664 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2665 
c
 = 
	`fgëc
(
p
->
ö
);

2667 if–
c
==
rSï
 ){

2668 
p
->
nLöe
++;

2669 if–
p
->
n
>0 &&Ö->
z
[p->n-1]=='\r' )Ö->n--;

2671 
p
->
cTîm
 = 
c
;

2673 if–
p
->
z
 )Ö->z[p->
n
] = 0;

2674  
p
->
z
;

2675 
	}
}

2689 *
SQLITE_CDECL
 
	$ascii_ªad_⁄e_fõld
(
Imp‹tCtx
 *
p
){

2690 
c
;

2691 
cSï
 = 
p
->
cCﬁSï
;

2692 
rSï
 = 
p
->
cRowSï
;

2693 
p
->
n
 = 0;

2694 
c
 = 
	`fgëc
(
p
->
ö
);

2695 if–
c
==
EOF
 || 
£íI¡îru±
 ){

2696 
p
->
cTîm
 = 
EOF
;

2699  
c
!=
EOF
 && c!=
cSï
 && c!=
rSï
 ){

2700 
	`imp‹t_≠≥nd_ch¨
(
p
, 
c
);

2701 
c
 = 
	`fgëc
(
p
->
ö
);

2703 if–
c
==
rSï
 ){

2704 
p
->
nLöe
++;

2706 
p
->
cTîm
 = 
c
;

2707 if–
p
->
z
 )Ö->z[p->
n
] = 0;

2708  
p
->
z
;

2709 
	}
}

2716 
	$åyToCl⁄eD©a
(

2717 
ShñlSèã
 *
p
,

2718 
sqlôe3
 *
√wDb
,

2719 c⁄° *
zTabÀ


2721 
sqlôe3_°mt
 *
pQuîy
 = 0;

2722 
sqlôe3_°mt
 *
pIn£π
 = 0;

2723 *
zQuîy
 = 0;

2724 *
zIn£π
 = 0;

2725 
rc
;

2726 
i
, 
j
, 
n
;

2727 
nTabÀ
 = ()
	`°æí
(
zTabÀ
);

2728 
k
 = 0;

2729 
˙t
 = 0;

2730 c⁄° 
•öR©e
 = 10000;

2732 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM \"%w\"", 
zTabÀ
);

2733 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2734 if–
rc
 ){

2735 
	`utf8_¥ötf
(
°dîr
, "Error %d: %s on [%s]\n",

2736 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2737 
zQuîy
);

2738 
íd_d©a_x„r
;

2740 
n
 = 
	`sqlôe3_cﬁumn_cou¡
(
pQuîy
);

2741 
zIn£π
 = 
	`sqlôe3_mÆloc64
(200 + 
nTabÀ
 + 
n
*3);

2742 if–
zIn£π
==0 ){

2743 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

2744 
íd_d©a_x„r
;

2746 
	`sqlôe3_¢¥ötf
(200+
nTabÀ
,
zIn£π
,

2747 "INSERT OR IGNORE INTO \"%s\" VALUES(?", 
zTabÀ
);

2748 
i
 = ()
	`°æí
(
zIn£π
);

2749 
j
=1; j<
n
; j++){

2750 
	`mem˝y
(
zIn£π
+
i
, ",?", 2);

2751 
i
 += 2;

2753 
	`mem˝y
(
zIn£π
+
i
, ");", 3);

2754 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
√wDb
, 
zIn£π
, -1, &
pIn£π
, 0);

2755 if–
rc
 ){

2756 
	`utf8_¥ötf
(
°dîr
, "Error %d: %s on [%s]\n",

2757 
	`sqlôe3_exãnded_îrcode
(
√wDb
), 
	`sqlôe3_îrmsg
(newDb),

2758 
zQuîy
);

2759 
íd_d©a_x„r
;

2761 
k
=0; k<2; k++){

2762  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2763 
i
=0; i<
n
; i++){

2764  
	`sqlôe3_cﬁumn_ty≥
(
pQuîy
, 
i
) ){

2765 
SQLITE_NULL
: {

2766 
	`sqlôe3_böd_nuŒ
(
pIn£π
, 
i
+1);

2769 
SQLITE_INTEGER
: {

2770 
	`sqlôe3_böd_öt64
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_öt64
(
pQuîy
,i));

2773 
SQLITE_FLOAT
: {

2774 
	`sqlôe3_böd_doubÀ
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_doubÀ
(
pQuîy
,i));

2777 
SQLITE_TEXT
: {

2778 
	`sqlôe3_böd_ãxt
(
pIn£π
, 
i
+1,

2779 (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
,
i
),

2780 -1, 
SQLITE_STATIC
);

2783 
SQLITE_BLOB
: {

2784 
	`sqlôe3_böd_blob
(
pIn£π
, 
i
+1, 
	`sqlôe3_cﬁumn_blob
(
pQuîy
,i),

2785 
	`sqlôe3_cﬁumn_byãs
(
pQuîy
,
i
),

2786 
SQLITE_STATIC
);

2791 
rc
 = 
	`sqlôe3_°ï
(
pIn£π
);

2792 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 ){

2793 
	`utf8_¥ötf
(
°dîr
, "Eº‹ %d: %s\n", 
	`sqlôe3_exãnded_îrcode
(
√wDb
),

2794 
	`sqlôe3_îrmsg
(
√wDb
));

2796 
	`sqlôe3_ª£t
(
pIn£π
);

2797 
˙t
++;

2798 if–(
˙t
%
•öR©e
)==0 ){

2799 
	`¥ötf
("%c\b", "|/-\\"[(
˙t
/
•öR©e
)%4]);

2800 
	`fÊush
(
°dout
);

2803 if–
rc
==
SQLITE_DONE
 ) ;

2804 
	`sqlôe3_föÆize
(
pQuîy
);

2805 
	`sqlôe3_‰ì
(
zQuîy
);

2806 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM \"%w\" ORDER BYÑowid DESC;",

2807 
zTabÀ
);

2808 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2809 if–
rc
 ){

2810 
	`utf8_¥ötf
(
°dîr
, "W¨nög: c™nŸ sã∞\"%s\" backw¨ds", 
zTabÀ
);

2815 
íd_d©a_x„r
:

2816 
	`sqlôe3_föÆize
(
pQuîy
);

2817 
	`sqlôe3_föÆize
(
pIn£π
);

2818 
	`sqlôe3_‰ì
(
zQuîy
);

2819 
	`sqlôe3_‰ì
(
zIn£π
);

2820 
	}
}

2829 
åyToCl⁄eSchema
(

2830 
ShñlSèã
 *
p
,

2831 
sqlôe3
 *
√wDb
,

2832 c⁄° *
zWhîe
,

2833 (*
xF‹Each
)(
ShñlSèã
*,
sqlôe3
*,const *)

2835 
sqlôe3_°mt
 *
pQuîy
 = 0;

2836 *
zQuîy
 = 0;

2837 
rc
;

2838 c⁄° *
zName
;

2839 c⁄° *
zSql
;

2840 *
zEºMsg
 = 0;

2842 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÇame, sql FROM sqlite_master"

2843 " WHERE %s", 
zWhîe
);

2844 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2845 if–
rc
 ){

2846 
	`utf8_¥ötf
(
°dîr
, "Error: (%d) %s on [%s]\n",

2847 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2848 
zQuîy
);

2849 
íd_schema_x„r
;

2851  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2852 
zName
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 0);

2853 
zSql
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 1);

2854 
	`¥ötf
("%s... ", 
zName
); 
	`fÊush
(
°dout
);

2855 
	`sqlôe3_exec
(
√wDb
, (c⁄° *)
zSql
, 0, 0, &
zEºMsg
);

2856 if–
zEºMsg
 ){

2857 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\nSQL: [%s]\n", 
zEºMsg
, 
zSql
);

2858 
	`sqlôe3_‰ì
(
zEºMsg
);

2859 
zEºMsg
 = 0;

2861 if–
xF‹Each
 ){

2862 
	`xF‹Each
(
p
, 
√wDb
, (c⁄° *)
zName
);

2864 
	`¥ötf
("done\n");

2866 if–
rc
!=
SQLITE_DONE
 ){

2867 
	`sqlôe3_föÆize
(
pQuîy
);

2868 
	`sqlôe3_‰ì
(
zQuîy
);

2869 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÇame, sql FROM sqlite_master"

2870 " WHERE %†ORDER BYÑowid DESC", 
zWhîe
);

2871 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zQuîy
, -1, &
pQuîy
, 0);

2872 if–
rc
 ){

2873 
	`utf8_¥ötf
(
°dîr
, "Error: (%d) %s on [%s]\n",

2874 
	`sqlôe3_exãnded_îrcode
(
p
->
db
), 
	`sqlôe3_îrmsg
(p->db),

2875 
zQuîy
);

2876 
íd_schema_x„r
;

2878  (
rc
 = 
	`sqlôe3_°ï
(
pQuîy
))==
SQLITE_ROW
 ){

2879 
zName
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 0);

2880 
zSql
 = 
	`sqlôe3_cﬁumn_ãxt
(
pQuîy
, 1);

2881 
	`¥ötf
("%s... ", 
zName
); 
	`fÊush
(
°dout
);

2882 
	`sqlôe3_exec
(
√wDb
, (c⁄° *)
zSql
, 0, 0, &
zEºMsg
);

2883 if–
zEºMsg
 ){

2884 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\nSQL: [%s]\n", 
zEºMsg
, 
zSql
);

2885 
	`sqlôe3_‰ì
(
zEºMsg
);

2886 
zEºMsg
 = 0;

2888 if–
xF‹Each
 ){

2889 
	`xF‹Each
(
p
, 
√wDb
, (c⁄° *)
zName
);

2891 
	`¥ötf
("done\n");

2894 
íd_schema_x„r
:

2895 
	`sqlôe3_föÆize
(
pQuîy
);

2896 
	`sqlôe3_‰ì
(
zQuîy
);

2897 
	}
}

2904 
	$åyToCl⁄e
(
ShñlSèã
 *
p
, c⁄° *
zNewDb
){

2905 
rc
;

2906 
sqlôe3
 *
√wDb
 = 0;

2907 if–
	`ac˚ss
(
zNewDb
,0)==0 ){

2908 
	`utf8_¥ötf
(
°dîr
, "Fûê\"%s\"áÃódyÉxi°s.\n", 
zNewDb
);

2911 
rc
 = 
	`sqlôe3_›í
(
zNewDb
, &
√wDb
);

2912 if–
rc
 ){

2913 
	`utf8_¥ötf
(
°dîr
, "Cannot create output database: %s\n",

2914 
	`sqlôe3_îrmsg
(
√wDb
));

2916 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=ON;", 0, 0, 0);

2917 
	`sqlôe3_exec
(
√wDb
, "BEGIN EXCLUSIVE;", 0, 0, 0);

2918 
	`åyToCl⁄eSchema
(
p
, 
√wDb
, "ty≥='èbÀ'", 
åyToCl⁄eD©a
);

2919 
	`åyToCl⁄eSchema
(
p
, 
√wDb
, "type!='table'", 0);

2920 
	`sqlôe3_exec
(
√wDb
, "COMMIT;", 0, 0, 0);

2921 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=OFF;", 0, 0, 0);

2923 
	`sqlôe3_˛o£
(
√wDb
);

2924 
	}
}

2929 
	$ouçut_ª£t
(
ShñlSèã
 *
p
){

2930 if–
p
->
outfûe
[0]=='|' ){

2931 #i‚de‡
SQLITE_OMIT_POPEN


2932 
	`p˛o£
(
p
->
out
);

2935 
	`ouçut_fûe_˛o£
(
p
->
out
);

2937 
p
->
outfûe
[0] = 0;

2938 
p
->
out
 = 
°dout
;

2939 
	}
}

2944 
	$db_öt
(
ShñlSèã
 *
p
, c⁄° *
zSql
){

2945 
sqlôe3_°mt
 *
pStmt
;

2946 
ªs
 = 0;

2947 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

2948 if–
pStmt
 && 
	`sqlôe3_°ï
’Stmt)==
SQLITE_ROW
 ){

2949 
ªs
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
,0);

2951 
	`sqlôe3_föÆize
(
pStmt
);

2952  
ªs
;

2953 
	}
}

2958 
	$gë2byãI¡
(*
a
){

2959  (
a
[0]<<8) +á[1];

2960 
	}
}

2961 
	$gë4byãI¡
(*
a
){

2962  (
a
[0]<<24) + (a[1]<<16) + (a[2]<<8) +á[3];

2963 
	}
}

2970 
	$shñl_dböfo_comm™d
(
ShñlSèã
 *
p
, 
nArg
, **
azArg
){

2971 c⁄° såu˘ { c⁄° *
zName
; 
of°
; } 
aFõld
[] = {

2985 c⁄° såu˘ { c⁄° *
zName
; c⁄° *
zSql
; } 
aQuîy
[] = {

2997 
sqlôe3_fûe
 *
pFûe
 = 0;

2998 
i
;

2999 *
zSchemaTab
;

3000 *
zDb
 = 
nArg
>=2 ? 
azArg
[1] : "main";

3001 
aHdr
[100];

3002 
	`›í_db
(
p
, 0);

3003 if–
p
->
db
==0 )  1;

3004 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDb
, 
SQLITE_FCNTL_FILE_POINTER
, &
pFûe
);

3005 if–
pFûe
==0 ||ÖFûe->
pMëhods
==0 ||ÖFûe->pMëhods->
xRód
==0 ){

3008 
i
 = 
pFûe
->
pMëhods
->
	`xRód
’Fûe, 
aHdr
, 100, 0);

3009 if–
i
!=
SQLITE_OK
 ){

3010 
	`øw_¥ötf
(
°dîr
, "unableÅoÑead database header\n");

3013 
i
 = 
	`gë2byãI¡
(
aHdr
+16);

3014 if–
i
==1 ) i = 65536;

3015 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "d©aba£Öagêsize:", 
i
);

3016 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "wrôêf‹m©:", 
aHdr
[18]);

3017 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "ªad f‹m©:", 
aHdr
[19]);

3018 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", "ª£rved byãs:", 
aHdr
[20]);

3019 
i
=0; i<
	`AºaySize
(
aFõld
); i++){

3020 
of°
 = 
aFõld
[
i
].ofst;

3021 
vÆ
 = 
	`gë4byãI¡
(
aHdr
 + 
of°
);

3022 
	`utf8_¥ötf
(
p
->
out
, "%-20†%u", 
aFõld
[
i
].
zName
, 
vÆ
);

3023  
of°
 ){

3025 if–
vÆ
==1 ) 
	`øw_¥ötf
(
p
->
out
, " (utf8)");

3026 if–
vÆ
==2 ) 
	`øw_¥ötf
(
p
->
out
, " (utf16le)");

3027 if–
vÆ
==3 ) 
	`øw_¥ötf
(
p
->
out
, " (utf16be)");

3030 
	`øw_¥ötf
(
p
->
out
, "\n");

3032 if–
zDb
==0 ){

3033 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("main.sqlite_master");

3034 }if–
	`°rcmp
(
zDb
,"temp")==0 ){

3035 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("%s", "sqlite_temp_master");

3037 
zSchemaTab
 = 
	`sqlôe3_m¥ötf
("\"%w\".sqlôe_ma°î", 
zDb
);

3039 
i
=0; i<
	`AºaySize
(
aQuîy
); i++){

3040 *
zSql
 = 
	`sqlôe3_m¥ötf
(
aQuîy
[
i
].zSql, 
zSchemaTab
);

3041 
vÆ
 = 
	`db_öt
(
p
, 
zSql
);

3042 
	`sqlôe3_‰ì
(
zSql
);

3043 
	`utf8_¥ötf
(
p
->
out
, "%-20†%d\n", 
aQuîy
[
i
].
zName
, 
vÆ
);

3045 
	`sqlôe3_‰ì
(
zSchemaTab
);

3047 
	}
}

3052 
	$shñlD©aba£Eº‹
(
sqlôe3
 *
db
){

3053 c⁄° *
zEº
 = 
	`sqlôe3_îrmsg
(
db
);

3054 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
zEº
);

3056 
	}
}

3061 
	$shñlNomemEº‹
(){

3062 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

3064 
	}
}

3070 
	$›ti⁄M©ch
(c⁄° *
zSå
, c⁄° *
zO±
){

3071 if–
zSå
[0]!='-' )  0;

3072 
zSå
++;

3073 if–
zSå
[0]=='-' ) zStr++;

3074  
	`°rcmp
(
zSå
, 
zO±
)==0;

3075 
	}
}

3083 
	$do_mëa_comm™d
(*
zLöe
, 
ShñlSèã
 *
p
){

3084 
h
 = 1;

3085 
nArg
 = 0;

3086 
n
, 
c
;

3087 
rc
 = 0;

3088 *
azArg
[50];

3092  
zLöe
[
h
] && 
nArg
<
	`AºaySize
(
azArg
) ){

3093  
	`IsS∑˚
(
zLöe
[
h
]) ){ h++; }

3094 if–
zLöe
[
h
]==0 ) ;

3095 if–
zLöe
[
h
]=='\'' || zLine[h]=='"' ){

3096 
dñim
 = 
zLöe
[
h
++];

3097 
azArg
[
nArg
++] = &
zLöe
[
h
];

3098  
zLöe
[
h
] && zLöe[h]!=
dñim
 ){

3099 if–
zLöe
[
h
]=='\\' && 
dñim
=='"' && zLine[h+1]!=0 ) h++;

3100 
h
++;

3102 if–
zLöe
[
h
]==
dñim
 ){

3103 
zLöe
[
h
++] = 0;

3105 if–
dñim
=='"' ) 
	`ªsﬁve_back¶ashes
(
azArg
[
nArg
-1]);

3107 
azArg
[
nArg
++] = &
zLöe
[
h
];

3108  
zLöe
[
h
] && !
	`IsS∑˚
(zLine[h]) ){ h++; }

3109 if–
zLöe
[
h
] ) zLine[h++] = 0;

3110 
	`ªsﬁve_back¶ashes
(
azArg
[
nArg
-1]);

3116 if–
nArg
==0 )  0;

3117 
n
 = 
	`°æí30
(
azArg
[0]);

3118 
c
 = 
azArg
[0][0];

3120 if–
c
=='a' && 
	`°∫cmp
(
azArg
[0], "auth", 
n
)==0 ){

3121 if–
nArg
!=2 ){

3122 
	`øw_¥ötf
(
°dîr
, "Usage: .auth ON|OFF\n");

3123 
rc
 = 1;

3124 
mëa_comm™d_exô
;

3126 
	`›í_db
(
p
, 0);

3127 if–
	`boﬁónVÆue
(
azArg
[1]) ){

3128 
	`sqlôe3_£t_auth‹izî
(
p
->
db
, 
shñlAuth
,Ö);

3130 
	`sqlôe3_£t_auth‹izî
(
p
->
db
, 0, 0);

3134 if–(
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "backup",Ç)==0)

3135 || (
c
=='s' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "save",Ç)==0)

3137 c⁄° *
zDe°Fûe
 = 0;

3138 c⁄° *
zDb
 = 0;

3139 
sqlôe3
 *
pDe°
;

3140 
sqlôe3_backup
 *
pBackup
;

3141 
j
;

3142 
j
=1; j<
nArg
; j++){

3143 c⁄° *
z
 = 
azArg
[
j
];

3144 if–
z
[0]=='-' ){

3145  
z
[0]=='-' ) z++;

3148 
	`utf8_¥ötf
(
°dîr
, "unknow¿›ti⁄: %s\n", 
azArg
[
j
]);

3151 }if–
zDe°Fûe
==0 ){

3152 
zDe°Fûe
 = 
azArg
[
j
];

3153 }if–
zDb
==0 ){

3154 
zDb
 = 
zDe°Fûe
;

3155 
zDe°Fûe
 = 
azArg
[
j
];

3157 
	`øw_¥ötf
(
°dîr
, "too manyárgumentsÅo .backup\n");

3161 if–
zDe°Fûe
==0 ){

3162 
	`øw_¥ötf
(
°dîr
, "missing FILENAMEárgument on .backup\n");

3165 if–
zDb
==0 ) zDb = "main";

3166 
rc
 = 
	`sqlôe3_›í
(
zDe°Fûe
, &
pDe°
);

3167 if–
rc
!=
SQLITE_OK
 ){

3168 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zDe°Fûe
);

3169 
	`sqlôe3_˛o£
(
pDe°
);

3172 
	`›í_db
(
p
, 0);

3173 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°
, "maö", 
p
->
db
, 
zDb
);

3174 if–
pBackup
==0 ){

3175 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
pDe°
));

3176 
	`sqlôe3_˛o£
(
pDe°
);

3179  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK
 ){}

3180 
	`sqlôe3_backup_föish
(
pBackup
);

3181 if–
rc
==
SQLITE_DONE
 ){

3182 
rc
 = 0;

3184 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
pDe°
));

3185 
rc
 = 1;

3187 
	`sqlôe3_˛o£
(
pDe°
);

3190 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "bail",Ç)==0 ){

3191 if–
nArg
==2 ){

3192 
baû_⁄_îr‹
 = 
	`boﬁónVÆue
(
azArg
[1]);

3194 
	`øw_¥ötf
(
°dîr
, "Usage: .bail on|off\n");

3195 
rc
 = 1;

3199 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "binary",Ç)==0 ){

3200 if–
nArg
==2 ){

3201 if–
	`boﬁónVÆue
(
azArg
[1]) ){

3202 
	`£tBö¨yMode
(
p
->
out
, 1);

3204 
	`£tTextMode
(
p
->
out
, 1);

3207 
	`øw_¥ötf
(
°dîr
, "Usage: .binary on|off\n");

3208 
rc
 = 1;

3215 if–
c
=='b' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "breakpoint",Ç)==0 ){

3216 
	`ã°_bªakpoöt
();

3219 if–
c
=='c' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "changes",Ç)==0 ){

3220 if–
nArg
==2 ){

3221 
p
->
cou¡Ch™ges
 = 
	`boﬁónVÆue
(
azArg
[1]);

3223 
	`øw_¥ötf
(
°dîr
, "Usage: .changes on|off\n");

3224 
rc
 = 1;

3228 if–
c
=='c' && 
	`°∫cmp
(
azArg
[0], "˛⁄e", 
n
)==0 ){

3229 if–
nArg
==2 ){

3230 
	`åyToCl⁄e
(
p
, 
azArg
[1]);

3232 
	`øw_¥ötf
(
°dîr
, "Usage: .clone FILENAME\n");

3233 
rc
 = 1;

3237 if–
c
=='d' && 
n
>1 && 
	`°∫cmp
(
azArg
[0], "databases",Ç)==0 ){

3238 
ShñlSèã
 
d©a
;

3239 *
zEºMsg
 = 0;

3240 
	`›í_db
(
p
, 0);

3241 
	`mem˝y
(&
d©a
, 
p
, (data));

3242 
d©a
.
showHódî
 = 1;

3243 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Cﬁumn
;

3244 
d©a
.
cﬁWidth
[0] = 3;

3245 
d©a
.
cﬁWidth
[1] = 15;

3246 
d©a
.
cﬁWidth
[2] = 58;

3247 
d©a
.
˙t
 = 0;

3248 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA d©aba£_li°; ", 
ˇŒback
, &
d©a
, &
zEºMsg
);

3249 if–
zEºMsg
 ){

3250 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

3251 
	`sqlôe3_‰ì
(
zEºMsg
);

3252 
rc
 = 1;

3256 if–
c
=='d' && 
	`°∫cmp
(
azArg
[0], "dböfo", 
n
)==0 ){

3257 
rc
 = 
	`shñl_dböfo_comm™d
(
p
, 
nArg
, 
azArg
);

3260 if–
c
=='d' && 
	`°∫cmp
(
azArg
[0], "dump", 
n
)==0 ){

3261 
	`›í_db
(
p
, 0);

3265 if–
nArg
!=1 &&ÇArg!=2 ){

3266 
	`øw_¥ötf
(
°dîr
, "Usage: .dump ?LIKE-PATTERN?\n");

3267 
rc
 = 1;

3268 
mëa_comm™d_exô
;

3270 
	`øw_¥ötf
(
p
->
out
, "PRAGMA foreign_keys=OFF;\n");

3271 
	`øw_¥ötf
(
p
->
out
, "BEGIN TRANSACTION;\n");

3272 
p
->
wrôabÀSchema
 = 0;

3273 
	`sqlôe3_exec
(
p
->
db
, "SAVEPOINT dump; PRAGMA writable_schema=ON", 0, 0, 0);

3274 
p
->
nEº
 = 0;

3275 if–
nArg
==1 ){

3276 
	`run_schema_dump_quîy
(
p
,

3280 
	`run_schema_dump_quîy
(
p
,

3284 
	`run_èbÀ_dump_quîy
(
p
,

3289 
i
;

3290 
i
=1; i<
nArg
; i++){

3291 
zShñlSètic
 = 
azArg
[
i
];

3292 
	`run_schema_dump_quîy
(
p
,

3296 
	`run_èbÀ_dump_quîy
(
p
,

3302 
zShñlSètic
 = 0;

3305 if–
p
->
wrôabÀSchema
 ){

3306 
	`øw_¥ötf
(
p
->
out
, "PRAGMA writable_schema=OFF;\n");

3307 
p
->
wrôabÀSchema
 = 0;

3309 
	`sqlôe3_exec
(
p
->
db
, "PRAGMA writable_schema=OFF;", 0, 0, 0);

3310 
	`sqlôe3_exec
(
p
->
db
, "RELEASE dump;", 0, 0, 0);

3311 
	`øw_¥ötf
(
p
->
out
,Ö->
nEº
 ? "ROLLBACK; -- dueÅoÉrrors\n" : "COMMIT;\n");

3314 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "echo", 
n
)==0 ){

3315 if–
nArg
==2 ){

3316 
p
->
echoOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

3318 
	`øw_¥ötf
(
°dîr
, "Usage: .echo on|off\n");

3319 
rc
 = 1;

3323 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "eqp", 
n
)==0 ){

3324 if–
nArg
==2 ){

3325 if–
	`°rcmp
(
azArg
[1],"full")==0 ){

3326 
p
->
autoEQP
 = 2;

3328 
p
->
autoEQP
 = 
	`boﬁónVÆue
(
azArg
[1]);

3331 
	`øw_¥ötf
(
°dîr
, "Usage: .eqp on|off|full\n");

3332 
rc
 = 1;

3336 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "exô", 
n
)==0 ){

3337 if–
nArg
>1 && (
rc
 = ()
	`öãgîVÆue
(
azArg
[1]))!=0 ) 
	`exô
(rc);

3338 
rc
 = 2;

3341 if–
c
=='e' && 
	`°∫cmp
(
azArg
[0], "ex∂aö", 
n
)==0 ){

3342 
vÆ
 = 1;

3343 if–
nArg
>=2 ){

3344 if–
	`°rcmp
(
azArg
[1],"auto")==0 ){

3345 
vÆ
 = 99;

3347 
vÆ
 = 
	`boﬁónVÆue
(
azArg
[1]);

3350 if–
vÆ
==1 && 
p
->
mode
!=
MODE_Ex∂aö
 ){

3351 
p
->
n‹mÆMode
 =Ö->
mode
;

3352 
p
->
mode
 = 
MODE_Ex∂aö
;

3353 
p
->
autoEx∂aö
 = 0;

3354 }if–
vÆ
==0 ){

3355 if–
p
->
mode
==
MODE_Ex∂aö
 )Ö->modêp->
n‹mÆMode
;

3356 
p
->
autoEx∂aö
 = 0;

3357 }if–
vÆ
==99 ){

3358 if–
p
->
mode
==
MODE_Ex∂aö
 )Ö->modêp->
n‹mÆMode
;

3359 
p
->
autoEx∂aö
 = 1;

3363 if–
c
=='f' && 
	`°∫cmp
(
azArg
[0], "fuŒschema", 
n
)==0 ){

3364 
ShñlSèã
 
d©a
;

3365 *
zEºMsg
 = 0;

3366 
doSèts
 = 0;

3367 
	`mem˝y
(&
d©a
, 
p
, (data));

3368 
d©a
.
showHódî
 = 0;

3369 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Semi
;

3370 if–
nArg
==2 && 
	`›ti⁄M©ch
(
azArg
[1], "indent") ){

3371 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Pªây
;

3372 
nArg
 = 1;

3374 if–
nArg
!=1 ){

3375 
	`øw_¥ötf
(
°dîr
, "Usage: .fullschema ?--indent?\n");

3376 
rc
 = 1;

3377 
mëa_comm™d_exô
;

3379 
	`›í_db
(
p
, 0);

3380 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

3387 
ˇŒback
, &
d©a
, &
zEºMsg


3389 if–
rc
==
SQLITE_OK
 ){

3390 
sqlôe3_°mt
 *
pStmt
;

3391 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
,

3394 -1, &
pStmt
, 0);

3395 
doSèts
 = 
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
;

3396 
	`sqlôe3_föÆize
(
pStmt
);

3398 if–
doSèts
==0 ){

3399 
	`øw_¥ötf
(
p
->
out
, "/* No STATÅablesávailable */\n");

3401 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

3402 
	`sqlôe3_exec
(
p
->
db
, "SELECT 'ANALYZE sqlite_master'",

3403 
ˇŒback
, &
d©a
, &
zEºMsg
);

3404 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_In£π
;

3405 
d©a
.
zDe°TabÀ
 = "sqlite_stat1";

3406 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat1",

3407 
shñl_ˇŒback
, &
d©a
,&
zEºMsg
);

3408 
d©a
.
zDe°TabÀ
 = "sqlite_stat3";

3409 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat3",

3410 
shñl_ˇŒback
, &
d©a
,&
zEºMsg
);

3411 
d©a
.
zDe°TabÀ
 = "sqlite_stat4";

3412 
	`shñl_exec
(
p
->
db
, "SELECT * FROM sqlite_stat4",

3413 
shñl_ˇŒback
, &
d©a
, &
zEºMsg
);

3414 
	`øw_¥ötf
(
p
->
out
, "ANALYZE sqlite_master;\n");

3418 if–
c
=='h' && 
	`°∫cmp
(
azArg
[0], "hódîs", 
n
)==0 ){

3419 if–
nArg
==2 ){

3420 
p
->
showHódî
 = 
	`boﬁónVÆue
(
azArg
[1]);

3422 
	`øw_¥ötf
(
°dîr
, "Usage: .headers on|off\n");

3423 
rc
 = 1;

3427 if–
c
=='h' && 
	`°∫cmp
(
azArg
[0], "hñp", 
n
)==0 ){

3428 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zHñp
);

3431 if–
c
=='i' && 
	`°∫cmp
(
azArg
[0], "imp‹t", 
n
)==0 ){

3432 *
zTabÀ
;

3433 *
zFûe
;

3434 
sqlôe3_°mt
 *
pStmt
 = 
NULL
;

3435 
nCﬁ
;

3436 
nByã
;

3437 
i
, 
j
;

3438 
√edCommô
;

3439 
nSï
;

3440 *
zSql
;

3441 
Imp‹tCtx
 
sCtx
;

3442 *(
SQLITE_CDECL
 *
xRód
)(
Imp‹tCtx
*);

3443 (
SQLITE_CDECL
 *
xClo£r
)(
FILE
*);

3445 if–
nArg
!=3 ){

3446 
	`øw_¥ötf
(
°dîr
, "Usage: .import FILE TABLE\n");

3447 
mëa_comm™d_exô
;

3449 
zFûe
 = 
azArg
[1];

3450 
zTabÀ
 = 
azArg
[2];

3451 
£íI¡îru±
 = 0;

3452 
	`mem£t
(&
sCtx
, 0, (sCtx));

3453 
	`›í_db
(
p
, 0);

3454 
nSï
 = 
	`°æí30
(
p
->
cﬁSï¨©‹
);

3455 if–
nSï
==0 ){

3456 
	`øw_¥ötf
(
°dîr
,

3460 if–
nSï
>1 ){

3461 
	`øw_¥ötf
(
°dîr
, "Error: multi-character column separatorsÇotállowed"

3465 
nSï
 = 
	`°æí30
(
p
->
rowSï¨©‹
);

3466 if–
nSï
==0 ){

3467 
	`øw_¥ötf
(
°dîr
, "Error:Çon-nullÑow separatorÑequired for import\n");

3470 if–
nSï
==2 && 
p
->
mode
==
MODE_Csv
 && 
	`°rcmp
’->
rowSï¨©‹
, 
SEP_CrLf
)==0 ){

3475 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_Row
);

3476 
nSï
 = 
	`°æí30
(
p
->
rowSï¨©‹
);

3478 if–
nSï
>1 ){

3479 
	`øw_¥ötf
(
°dîr
, "Error: multi-characterÑow separatorsÇotállowed"

3483 
sCtx
.
zFûe
 = zFile;

3484 
sCtx
.
nLöe
 = 1;

3485 if–
sCtx
.
zFûe
[0]=='|' ){

3486 #ifde‡
SQLITE_OMIT_POPEN


3487 
	`øw_¥ötf
(
°dîr
, "Error:ÖipesáreÇot supported inÅhis OS\n");

3490 
sCtx
.
ö
 = 
	`p›í
(sCtx.
zFûe
+1, "r");

3491 
sCtx
.
zFûe
 = "<pipe>";

3492 
xClo£r
 = 
p˛o£
;

3495 
sCtx
.
ö
 = 
	`f›í
(sCtx.
zFûe
, "rb");

3496 
xClo£r
 = 
f˛o£
;

3498 if–
p
->
mode
==
MODE_Ascii
 ){

3499 
xRód
 = 
ascii_ªad_⁄e_fõld
;

3501 
xRód
 = 
csv_ªad_⁄e_fõld
;

3503 if–
sCtx
.
ö
==0 ){

3504 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zFûe
);

3507 
sCtx
.
cCﬁSï
 = 
p
->
cﬁSï¨©‹
[0];

3508 
sCtx
.
cRowSï
 = 
p
->
rowSï¨©‹
[0];

3509 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %s", 
zTabÀ
);

3510 if–
zSql
==0 ){

3511 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

3512 
	`xClo£r
(
sCtx
.
ö
);

3515 
nByã
 = 
	`°æí30
(
zSql
);

3516 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

3517 
	`imp‹t_≠≥nd_ch¨
(&
sCtx
, 0);

3518 if–
rc
 && 
	`sqlôe3_°rglob
("nÿsuchÅabÀ: *", 
	`sqlôe3_îrmsg
(
p
->
db
))==0 ){

3519 *
zCª©e
 = 
	`sqlôe3_m¥ötf
("CREATE TABLE %s", 
zTabÀ
);

3520 
cSï
 = '(';

3521  
	`xRód
(&
sCtx
) ){

3522 
zCª©e
 = 
	`sqlôe3_m¥ötf
("%z%c\¿ \"%w\" TEXT", zCª©e, 
cSï
, 
sCtx
.
z
);

3523 
cSï
 = ',';

3524 if–
sCtx
.
cTîm
!=sCtx.
cCﬁSï
 ) ;

3526 if–
cSï
=='(' ){

3527 
	`sqlôe3_‰ì
(
zCª©e
);

3528 
	`sqlôe3_‰ì
(
sCtx
.
z
);

3529 
	`xClo£r
(
sCtx
.
ö
);

3530 
	`utf8_¥ötf
(
°dîr
,"%s:Ém±y fûe\n", 
sCtx
.
zFûe
);

3533 
zCª©e
 = 
	`sqlôe3_m¥ötf
("%z\n)", zCreate);

3534 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zCª©e
, 0, 0, 0);

3535 
	`sqlôe3_‰ì
(
zCª©e
);

3536 if–
rc
 ){

3537 
	`utf8_¥ötf
(
°dîr
, "CREATE TABLE %s(...ËÁûed: %s\n", 
zTabÀ
,

3538 
	`sqlôe3_îrmsg
(
p
->
db
));

3539 
	`sqlôe3_‰ì
(
sCtx
.
z
);

3540 
	`xClo£r
(
sCtx
.
ö
);

3543 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

3545 
	`sqlôe3_‰ì
(
zSql
);

3546 if–
rc
 ){

3547 i‡(
pStmt
Ë
	`sqlôe3_föÆize
(pStmt);

3548 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

3549 
	`xClo£r
(
sCtx
.
ö
);

3552 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

3553 
	`sqlôe3_föÆize
(
pStmt
);

3554 
pStmt
 = 0;

3555 if–
nCﬁ
==0 )  0;

3556 
zSql
 = 
	`sqlôe3_mÆloc64
–
nByã
*2 + 20 + 
nCﬁ
*2 );

3557 if–
zSql
==0 ){

3558 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

3559 
	`xClo£r
(
sCtx
.
ö
);

3562 
	`sqlôe3_¢¥ötf
(
nByã
+20, 
zSql
, "INSERT INTO \"%w\" VALUES(?", 
zTabÀ
);

3563 
j
 = 
	`°æí30
(
zSql
);

3564 
i
=1; i<
nCﬁ
; i++){

3565 
zSql
[
j
++] = ',';

3566 
zSql
[
j
++] = '?';

3568 
zSql
[
j
++] = ')';

3569 
zSql
[
j
] = 0;

3570 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zSql
, -1, &
pStmt
, 0);

3571 
	`sqlôe3_‰ì
(
zSql
);

3572 if–
rc
 ){

3573 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

3574 i‡(
pStmt
Ë
	`sqlôe3_föÆize
(pStmt);

3575 
	`xClo£r
(
sCtx
.
ö
);

3578 
√edCommô
 = 
	`sqlôe3_gë_autocommô
(
p
->
db
);

3579 if–
√edCommô
 ) 
	`sqlôe3_exec
(
p
->
db
, "BEGIN", 0, 0, 0);

3581 
°¨tLöe
 = 
sCtx
.
nLöe
;

3582 
i
=0; i<
nCﬁ
; i++){

3583 *
z
 = 
	`xRód
(&
sCtx
);

3588 if–
z
==0 && 
i
==0 ) ;

3594 if–
p
->
mode
==
MODE_Ascii
 && (
z
==0 || z[0]==0Ë&& 
i
==0 ) ;

3595 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
+1, 
z
, -1, 
SQLITE_TRANSIENT
);

3596 if–
i
<
nCﬁ
-1 && 
sCtx
.
cTîm
!=sCtx.
cCﬁSï
 ){

3597 
	`utf8_¥ötf
(
°dîr
, "%s:%d:Éxpected %d columns but found %d - "

3599 
sCtx
.
zFûe
, 
°¨tLöe
, 
nCﬁ
, 
i
+1);

3600 
i
 += 2;

3601  
i
<=
nCﬁ
 ){ 
	`sqlôe3_böd_nuŒ
(
pStmt
, i); i++; }

3604 if–
sCtx
.
cTîm
==sCtx.
cCﬁSï
 ){

3606 
	`xRód
(&
sCtx
);

3607 
i
++;

3608 } 
sCtx
.
cTîm
==sCtx.
cCﬁSï
 );

3609 
	`utf8_¥ötf
(
°dîr
, "%s:%d:Éxpected %d columns but found %d - "

3611 
sCtx
.
zFûe
, 
°¨tLöe
, 
nCﬁ
, 
i
);

3613 if–
i
>=
nCﬁ
 ){

3614 
	`sqlôe3_°ï
(
pStmt
);

3615 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

3616 if–
rc
!=
SQLITE_OK
 ){

3617 
	`utf8_¥ötf
(
°dîr
, "%s:%d: INSERT faûed: %s\n", 
sCtx
.
zFûe
,

3618 
°¨tLöe
, 
	`sqlôe3_îrmsg
(
p
->
db
));

3621 } 
sCtx
.
cTîm
!=
EOF
 );

3623 
	`xClo£r
(
sCtx
.
ö
);

3624 
	`sqlôe3_‰ì
(
sCtx
.
z
);

3625 
	`sqlôe3_föÆize
(
pStmt
);

3626 if–
√edCommô
 ) 
	`sqlôe3_exec
(
p
->
db
, "COMMIT", 0, 0, 0);

3629 if–
c
=='i' && (
	`°∫cmp
(
azArg
[0], "ödi˚s", 
n
)==0

3630 || 
	`°∫cmp
(
azArg
[0], "ödexes", 
n
)==0) ){

3631 
ShñlSèã
 
d©a
;

3632 *
zEºMsg
 = 0;

3633 
	`›í_db
(
p
, 0);

3634 
	`mem˝y
(&
d©a
, 
p
, (data));

3635 
d©a
.
showHódî
 = 0;

3636 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Li°
;

3637 if–
nArg
==1 ){

3638 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

3645 
ˇŒback
, &
d©a
, &
zEºMsg


3647 }if–
nArg
==2 ){

3648 
zShñlSètic
 = 
azArg
[1];

3649 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

3656 
ˇŒback
, &
d©a
, &
zEºMsg


3658 
zShñlSètic
 = 0;

3660 
	`øw_¥ötf
(
°dîr
, "Usage: .indexes ?LIKE-PATTERN?\n");

3661 
rc
 = 1;

3662 
mëa_comm™d_exô
;

3664 if–
zEºMsg
 ){

3665 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

3666 
	`sqlôe3_‰ì
(
zEºMsg
);

3667 
rc
 = 1;

3668 }if–
rc
 !
SQLITE_OK
 ){

3669 
	`øw_¥ötf
(
°dîr
,

3671 
rc
 = 1;

3675 #ifde‡
SQLITE_ENABLE_IOTRACE


3676 if–
c
=='i' && 
	`°∫cmp
(
azArg
[0], "iŸø˚", 
n
)==0 ){

3677 
SQLITE_API
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *, ...);

3678 if–
iŸø˚
 && iŸø˚!=
°dout
 ) 
	`f˛o£
(iotrace);

3679 
iŸø˚
 = 0;

3680 if–
nArg
<2 ){

3681 
sqlôe3IoTø˚
 = 0;

3682 }if–
	`°rcmp
(
azArg
[1], "-")==0 ){

3683 
sqlôe3IoTø˚
 = 
iŸø˚Prötf
;

3684 
iŸø˚
 = 
°dout
;

3686 
iŸø˚
 = 
	`f›í
(
azArg
[1], "w");

3687 if–
iŸø˚
==0 ){

3688 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
azArg
[1]);

3689 
sqlôe3IoTø˚
 = 0;

3690 
rc
 = 1;

3692 
sqlôe3IoTø˚
 = 
iŸø˚Prötf
;

3697 if–
c
=='l' && 
n
>=5 && 
	`°∫cmp
(
azArg
[0], "limits",Ç)==0 ){

3699 c⁄° *
zLimôName
;

3700 
limôCode
;

3701 } 
aLimô
[] = {

3702 { "Àngth", 
SQLITE_LIMIT_LENGTH
 },

3703 { "sql_Àngth", 
SQLITE_LIMIT_SQL_LENGTH
 },

3704 { "cﬁumn", 
SQLITE_LIMIT_COLUMN
 },

3705 { "ex¥_dïth", 
SQLITE_LIMIT_EXPR_DEPTH
 },

3706 { "compound_£À˘", 
SQLITE_LIMIT_COMPOUND_SELECT
 },

3707 { "vdbe_›", 
SQLITE_LIMIT_VDBE_OP
 },

3708 { "fun˘i⁄_¨g", 
SQLITE_LIMIT_FUNCTION_ARG
 },

3709 { "©èched", 
SQLITE_LIMIT_ATTACHED
 },

3710 { "like_∑âîn_Àngth", 
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 },

3711 { "v¨übÀ_numbî", 
SQLITE_LIMIT_VARIABLE_NUMBER
 },

3712 { "åiggî_dïth", 
SQLITE_LIMIT_TRIGGER_DEPTH
 },

3713 { "w‹kî_thªads", 
SQLITE_LIMIT_WORKER_THREADS
 },

3715 
i
, 
n2
;

3716 
	`›í_db
(
p
, 0);

3717 if–
nArg
==1 ){

3718 
i
=0; i<
	`AºaySize
(
aLimô
); i++){

3719 
	`¥ötf
("%20†%d\n", 
aLimô
[
i
].
zLimôName
,

3720 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
i
].
limôCode
, -1));

3722 }if–
nArg
>3 ){

3723 
	`øw_¥ötf
(
°dîr
, "Usage: .limit NAME ?NEW-VALUE?\n");

3724 
rc
 = 1;

3725 
mëa_comm™d_exô
;

3727 
iLimô
 = -1;

3728 
n2
 = 
	`°æí30
(
azArg
[1]);

3729 
i
=0; i<
	`AºaySize
(
aLimô
); i++){

3730 if–
	`sqlôe3_°∫icmp
(
aLimô
[
i
].
zLimôName
, 
azArg
[1], 
n2
)==0 ){

3731 if–
iLimô
<0 ){

3732 
iLimô
 = 
i
;

3734 
	`utf8_¥ötf
(
°dîr
, "ambiguou†limô: \"%s\"\n", 
azArg
[1]);

3735 
rc
 = 1;

3736 
mëa_comm™d_exô
;

3740 if–
iLimô
<0 ){

3741 
	`utf8_¥ötf
(
°dîr
, "unknownÜimit: \"%s\"\n"

3743 
azArg
[1]);

3744 
rc
 = 1;

3745 
mëa_comm™d_exô
;

3747 if–
nArg
==3 ){

3748 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
iLimô
].
limôCode
,

3749 ()
	`öãgîVÆue
(
azArg
[2]));

3751 
	`¥ötf
("%20†%d\n", 
aLimô
[
iLimô
].
zLimôName
,

3752 
	`sqlôe3_limô
(
p
->
db
, 
aLimô
[
iLimô
].
limôCode
, -1));

3756 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


3757 if–
c
=='l' && 
	`°∫cmp
(
azArg
[0], "lﬂd", 
n
)==0 ){

3758 c⁄° *
zFûe
, *
zProc
;

3759 *
zEºMsg
 = 0;

3760 if–
nArg
<2 ){

3761 
	`øw_¥ötf
(
°dîr
, "Usage: .load FILE ?ENTRYPOINT?\n");

3762 
rc
 = 1;

3763 
mëa_comm™d_exô
;

3765 
zFûe
 = 
azArg
[1];

3766 
zProc
 = 
nArg
>=3 ? 
azArg
[2] : 0;

3767 
	`›í_db
(
p
, 0);

3768 
rc
 = 
	`sqlôe3_lﬂd_exãnsi⁄
(
p
->
db
, 
zFûe
, 
zProc
, &
zEºMsg
);

3769 if–
rc
!=
SQLITE_OK
 ){

3770 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
zEºMsg
);

3771 
	`sqlôe3_‰ì
(
zEºMsg
);

3772 
rc
 = 1;

3777 if–
c
=='l' && 
	`°∫cmp
(
azArg
[0], "log", 
n
)==0 ){

3778 if–
nArg
!=2 ){

3779 
	`øw_¥ötf
(
°dîr
, "Usage: .log FILENAME\n");

3780 
rc
 = 1;

3782 c⁄° *
zFûe
 = 
azArg
[1];

3783 
	`ouçut_fûe_˛o£
(
p
->
pLog
);

3784 
p
->
pLog
 = 
	`ouçut_fûe_›í
(
zFûe
);

3788 if–
c
=='m' && 
	`°∫cmp
(
azArg
[0], "mode", 
n
)==0 ){

3789 c⁄° *
zMode
 = 
nArg
>=2 ? 
azArg
[1] : "";

3790 
n2
 = ()
	`°æí
(
zMode
);

3791 
c2
 = 
zMode
[0];

3792 if–
c2
=='l' && 
n2
>2 && 
	`°∫cmp
(
azArg
[1],"lines",n2)==0 ){

3793 
p
->
mode
 = 
MODE_Löe
;

3794 }if–
c2
=='c' && 
	`°∫cmp
(
azArg
[1],"cﬁumns",
n2
)==0 ){

3795 
p
->
mode
 = 
MODE_Cﬁumn
;

3796 }if–
c2
=='l' && 
n2
>2 && 
	`°∫cmp
(
azArg
[1],"list",n2)==0 ){

3797 
p
->
mode
 = 
MODE_Li°
;

3798 }if–
c2
=='h' && 
	`°∫cmp
(
azArg
[1],"html",
n2
)==0 ){

3799 
p
->
mode
 = 
MODE_Html
;

3800 }if–
c2
=='t' && 
	`°∫cmp
(
azArg
[1],"t˛",
n2
)==0 ){

3801 
p
->
mode
 = 
MODE_T˛
;

3802 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_S∑˚
);

3803 }if–
c2
=='c' && 
	`°∫cmp
(
azArg
[1],"csv",
n2
)==0 ){

3804 
p
->
mode
 = 
MODE_Csv
;

3805 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Comma
);

3806 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_CrLf
);

3807 }if–
c2
=='t' && 
	`°∫cmp
(
azArg
[1],"èbs",
n2
)==0 ){

3808 
p
->
mode
 = 
MODE_Li°
;

3809 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Tab
);

3810 }if–
c2
=='i' && 
	`°∫cmp
(
azArg
[1],"ö£π",
n2
)==0 ){

3811 
p
->
mode
 = 
MODE_In£π
;

3812 
	`£t_èbÀ_«me
(
p
, 
nArg
>=3 ? 
azArg
[2] : "table");

3813 }if–
c2
=='a' && 
	`°∫cmp
(
azArg
[1],"ascii",
n2
)==0 ){

3814 
p
->
mode
 = 
MODE_Ascii
;

3815 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->cﬁSï¨©‹, 
SEP_Unô
);

3816 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSï¨©‹, 
SEP_Rec‹d
);

3818 
	`øw_¥ötf
(
°dîr
, "Error: mode should be one of: "

3820 
rc
 = 1;

3822 
p
->
cMode
 =Ö->
mode
;

3825 if–
c
=='n' && 
	`°∫cmp
(
azArg
[0], "nuŒvÆue", 
n
)==0 ){

3826 if–
nArg
==2 ){

3827 
	`sqlôe3_¢¥ötf
((
p
->
nuŒVÆue
),Ö->nullValue,

3828 "%.*s", ()
	`AºaySize
(
p
->
nuŒVÆue
)-1, 
azArg
[1]);

3830 
	`øw_¥ötf
(
°dîr
, "Usage: .nullvalue STRING\n");

3831 
rc
 = 1;

3835 if–
c
=='o' && 
	`°∫cmp
(
azArg
[0], "›í", 
n
)==0 &&Ç>=2 ){

3836 
sqlôe3
 *
ßvedDb
 = 
p
->
db
;

3837 c⁄° *
zSavedFûíame
 = 
p
->
zDbFûíame
;

3838 *
zNewFûíame
 = 0;

3839 
p
->
db
 = 0;

3840 if–
nArg
>=2 ) 
zNewFûíame
 = 
	`sqlôe3_m¥ötf
("%s", 
azArg
[1]);

3841 
p
->
zDbFûíame
 = 
zNewFûíame
;

3842 
	`›í_db
(
p
, 1);

3843 if–
p
->
db
!=0 ){

3844 
	`£ssi⁄_˛o£_Æl
(
p
);

3845 
	`sqlôe3_˛o£
(
ßvedDb
);

3846 
	`sqlôe3_‰ì
(
p
->
zFªeOnClo£
);

3847 
p
->
zFªeOnClo£
 = 
zNewFûíame
;

3849 
	`sqlôe3_‰ì
(
zNewFûíame
);

3850 
p
->
db
 = 
ßvedDb
;

3851 
p
->
zDbFûíame
 = 
zSavedFûíame
;

3855 if–
c
=='o'

3856 && (
	`°∫cmp
(
azArg
[0], "ouçut", 
n
)==0 || strncmp(azArg[0], "once",Ç)==0)

3858 c⁄° *
zFûe
 = 
nArg
>=2 ? 
azArg
[1] : "stdout";

3859 if–
nArg
>2 ){

3860 
	`utf8_¥ötf
(
°dîr
, "Ußge: .%†FILE\n", 
azArg
[0]);

3861 
rc
 = 1;

3862 
mëa_comm™d_exô
;

3864 if–
n
>1 && 
	`°∫cmp
(
azArg
[0], "once",Ç)==0 ){

3865 if–
nArg
<2 ){

3866 
	`øw_¥ötf
(
°dîr
, "Usage: .once FILE\n");

3867 
rc
 = 1;

3868 
mëa_comm™d_exô
;

3870 
p
->
outCou¡
 = 2;

3872 
p
->
outCou¡
 = 0;

3874 
	`ouçut_ª£t
(
p
);

3875 if–
zFûe
[0]=='|' ){

3876 #ifde‡
SQLITE_OMIT_POPEN


3877 
	`øw_¥ötf
(
°dîr
, "Error:ÖipesáreÇot supported inÅhis OS\n");

3878 
rc
 = 1;

3879 
p
->
out
 = 
°dout
;

3881 
p
->
out
 = 
	`p›í
(
zFûe
 + 1, "w");

3882 if–
p
->
out
==0 ){

3883 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ o≥¿pùê\"%s\"\n", 
zFûe
 + 1);

3884 
p
->
out
 = 
°dout
;

3885 
rc
 = 1;

3887 
	`sqlôe3_¢¥ötf
((
p
->
outfûe
),Ö->outfûe, "%s", 
zFûe
);

3891 
p
->
out
 = 
	`ouçut_fûe_›í
(
zFûe
);

3892 if–
p
->
out
==0 ){

3893 if–
	`°rcmp
(
zFûe
,"off")!=0 ){

3894 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ wrôêtÿ\"%s\"\n", 
zFûe
);

3896 
p
->
out
 = 
°dout
;

3897 
rc
 = 1;

3899 
	`sqlôe3_¢¥ötf
((
p
->
outfûe
),Ö->outfûe, "%s", 
zFûe
);

3904 if–
c
=='p' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "print",Ç)==0 ){

3905 
i
;

3906 
i
=1; i<
nArg
; i++){

3907 if–
i
>1 ) 
	`øw_¥ötf
(
p
->
out
, " ");

3908 
	`utf8_¥ötf
(
p
->
out
, "%s", 
azArg
[
i
]);

3910 
	`øw_¥ötf
(
p
->
out
, "\n");

3913 if–
c
=='p' && 
	`°∫cmp
(
azArg
[0], "¥om±", 
n
)==0 ){

3914 if–
nArg
 >= 2) {

3915 
	`°∫˝y
(
maöProm±
,
azArg
[1],()
	`AºaySize
(mainPrompt)-1);

3917 if–
nArg
 >= 3) {

3918 
	`°∫˝y
(
c⁄töueProm±
,
azArg
[2],()
	`AºaySize
(continuePrompt)-1);

3922 if–
c
=='q' && 
	`°∫cmp
(
azArg
[0], "quô", 
n
)==0 ){

3923 
rc
 = 2;

3926 if–
c
=='r' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "read",Ç)==0 ){

3927 
FILE
 *
Æt
;

3928 if–
nArg
!=2 ){

3929 
	`øw_¥ötf
(
°dîr
, "Usage: .read FILE\n");

3930 
rc
 = 1;

3931 
mëa_comm™d_exô
;

3933 
Æt
 = 
	`f›í
(
azArg
[1], "rb");

3934 if–
Æt
==0 ){

3935 
	`utf8_¥ötf
(
°dîr
,"Eº‹: c™nŸ o≥¿\"%s\"\n", 
azArg
[1]);

3936 
rc
 = 1;

3938 
rc
 = 
	`¥o˚ss_öput
(
p
, 
Æt
);

3939 
	`f˛o£
(
Æt
);

3943 if–
c
=='r' && 
n
>=3 && 
	`°∫cmp
(
azArg
[0], "restore",Ç)==0 ){

3944 c⁄° *
zSrcFûe
;

3945 c⁄° *
zDb
;

3946 
sqlôe3
 *
pSrc
;

3947 
sqlôe3_backup
 *
pBackup
;

3948 
nTimeout
 = 0;

3950 if–
nArg
==2 ){

3951 
zSrcFûe
 = 
azArg
[1];

3952 
zDb
 = "main";

3953 }if–
nArg
==3 ){

3954 
zSrcFûe
 = 
azArg
[2];

3955 
zDb
 = 
azArg
[1];

3957 
	`øw_¥ötf
(
°dîr
, "Usage: .restore ?DB? FILE\n");

3958 
rc
 = 1;

3959 
mëa_comm™d_exô
;

3961 
rc
 = 
	`sqlôe3_›í
(
zSrcFûe
, &
pSrc
);

3962 if–
rc
!=
SQLITE_OK
 ){

3963 
	`utf8_¥ötf
(
°dîr
, "Eº‹: c™nŸ o≥¿\"%s\"\n", 
zSrcFûe
);

3964 
	`sqlôe3_˛o£
(
pSrc
);

3967 
	`›í_db
(
p
, 0);

3968 
pBackup
 = 
	`sqlôe3_backup_öô
(
p
->
db
, 
zDb
, 
pSrc
, "main");

3969 if–
pBackup
==0 ){

3970 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

3971 
	`sqlôe3_˛o£
(
pSrc
);

3974  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK


3975 || 
rc
==
SQLITE_BUSY
 ){

3976 if–
rc
==
SQLITE_BUSY
 ){

3977 if–
nTimeout
++ >= 3 ) ;

3978 
	`sqlôe3_¶ìp
(100);

3981 
	`sqlôe3_backup_föish
(
pBackup
);

3982 if–
rc
==
SQLITE_DONE
 ){

3983 
rc
 = 0;

3984 }if–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

3985 
	`øw_¥ötf
(
°dîr
, "Error: source database is busy\n");

3986 
rc
 = 1;

3988 
	`utf8_¥ötf
(
°dîr
, "Eº‹: %s\n", 
	`sqlôe3_îrmsg
(
p
->
db
));

3989 
rc
 = 1;

3991 
	`sqlôe3_˛o£
(
pSrc
);

3995 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "sˇn°©s", 
n
)==0 ){

3996 if–
nArg
==2 ){

3997 
p
->
sˇn°©sOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

3998 #i‚de‡
SQLITE_ENABLE_STMT_SCANSTATUS


3999 
	`øw_¥ötf
(
°dîr
, "Warning: .scanstatsÇotávailable inÅhis build.\n");

4002 
	`øw_¥ötf
(
°dîr
, "Usage: .scanstats on|off\n");

4003 
rc
 = 1;

4007 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "schema", 
n
)==0 ){

4008 
ShñlSèã
 
d©a
;

4009 *
zEºMsg
 = 0;

4010 
	`›í_db
(
p
, 0);

4011 
	`mem˝y
(&
d©a
, 
p
, (data));

4012 
d©a
.
showHódî
 = 0;

4013 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Semi
;

4014 if–
nArg
>=2 && 
	`›ti⁄M©ch
(
azArg
[1], "indent") ){

4015 
d©a
.
cMode
 = d©a.
mode
 = 
MODE_Pªây
;

4016 
nArg
--;

4017 if–
nArg
==2 ) 
azArg
[1] =ázArg[2];

4019 if–
nArg
==2 && 
azArg
[1][0]!='-' ){

4020 
i
;

4021 
i
=0; 
azArg
[1][i]; i++ËazArg[1][i] = 
	`ToLowî
(azArg[1][i]);

4022 if–
	`°rcmp
(
azArg
[1],"sqlite_master")==0 ){

4023 *
√w_¨gv
[2], *
√w_cﬁv
[2];

4024 
√w_¨gv
[0] = "CREATE TABLE sqlite_master (\n"

4031 
√w_¨gv
[1] = 0;

4032 
√w_cﬁv
[0] = "sql";

4033 
√w_cﬁv
[1] = 0;

4034 
	`ˇŒback
(&
d©a
, 1, 
√w_¨gv
, 
√w_cﬁv
);

4035 
rc
 = 
SQLITE_OK
;

4036 }if–
	`°rcmp
(
azArg
[1],"sqlite_temp_master")==0 ){

4037 *
√w_¨gv
[2], *
√w_cﬁv
[2];

4038 
√w_¨gv
[0] = "CREATE TEMP TABLE sqlite_temp_master (\n"

4045 
√w_¨gv
[1] = 0;

4046 
√w_cﬁv
[0] = "sql";

4047 
√w_cﬁv
[1] = 0;

4048 
	`ˇŒback
(&
d©a
, 1, 
√w_¨gv
, 
√w_cﬁv
);

4049 
rc
 = 
SQLITE_OK
;

4051 
zShñlSètic
 = 
azArg
[1];

4052 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

4060 
ˇŒback
, &
d©a
, &
zEºMsg
);

4061 
zShñlSètic
 = 0;

4063 }if–
nArg
==1 ){

4064 
rc
 = 
	`sqlôe3_exec
(
p
->
db
,

4071 
ˇŒback
, &
d©a
, &
zEºMsg


4074 
	`øw_¥ötf
(
°dîr
, "Usage: .schema ?--indent? ?LIKE-PATTERN?\n");

4075 
rc
 = 1;

4076 
mëa_comm™d_exô
;

4078 if–
zEºMsg
 ){

4079 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

4080 
	`sqlôe3_‰ì
(
zEºMsg
);

4081 
rc
 = 1;

4082 }if–
rc
 !
SQLITE_OK
 ){

4083 
	`øw_¥ötf
(
°dîr
,"Error: querying schema information\n");

4084 
rc
 = 1;

4086 
rc
 = 0;

4090 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_SELECTTRACE
)

4091 if–
c
=='s' && 
n
==11 && 
	`°∫cmp
(
azArg
[0], "selecttrace",Ç)==0 ){

4092 
sqlôe3Sñe˘Tø˚
 = 
	`öãgîVÆue
(
azArg
[1]);

4096 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
)

4097 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0],"£ssi⁄",
n
)==0 &&Ç>=3 ){

4098 
O≥nSessi⁄
 *
pSessi⁄
 = &
p
->
aSessi⁄
[0];

4099 **
azCmd
 = &
azArg
[1];

4100 
iSes
 = 0;

4101 
nCmd
 = 
nArg
 - 1;

4102 
i
;

4103 if–
nArg
<=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4104 
	`›í_db
(
p
, 0);

4105 if–
nArg
>=3 ){

4106 
iSes
=0; iSes<
p
->
nSessi⁄
; iSes++){

4107 if–
	`°rcmp
(
p
->
aSessi⁄
[
iSes
].
zName
, 
azArg
[1])==0 ) ;

4109 if–
iSes
<
p
->
nSessi⁄
 ){

4110 
pSessi⁄
 = &
p
->
aSessi⁄
[
iSes
];

4111 
azCmd
++;

4112 
nCmd
--;

4114 
pSessi⁄
 = &
p
->
aSessi⁄
[0];

4115 
iSes
 = 0;

4123 if–
	`°rcmp
(
azCmd
[0],"attach")==0 ){

4124 if–
nCmd
!=2 ) 
£ssi⁄_sy¡ax_îr‹
;

4125 if–
pSessi⁄
->
p
==0 ){

4126 
£ssi⁄_nŸ_›í
:

4127 
	`øw_¥ötf
(
°dîr
, "ERROR: No sessionsáre open\n");

4129 
rc
 = 
	`sqlôe3£ssi⁄_©èch
(
pSessi⁄
->
p
, 
azCmd
[1]);

4130 if–
rc
 ){

4131 
	`øw_¥ötf
(
°dîr
, "ERROR: sqlôe3£ssi⁄_©èch(Ëªtu∫†%d\n", 
rc
);

4132 
rc
 = 0;

4141 if–
	`°rcmp
(
azCmd
[0],"changeset")==0 || strcmp(azCmd[0],"patchset")==0 ){

4142 
FILE
 *
out
 = 0;

4143 if–
nCmd
!=2 ) 
£ssi⁄_sy¡ax_îr‹
;

4144 if–
pSessi⁄
->
p
==0 ) 
£ssi⁄_nŸ_›í
;

4145 
out
 = 
	`f›í
(
azCmd
[1], "wb");

4146 if–
out
==0 ){

4147 
	`utf8_¥ötf
(
°dîr
, "ERROR: c™nŸ o≥¿\"%s\" f‹ wrôög\n", 
azCmd
[1]);

4149 
szChng
;

4150 *
pChng
;

4151 if–
azCmd
[0][0]=='c' ){

4152 
rc
 = 
	`sqlôe3£ssi⁄_ch™ge£t
(
pSessi⁄
->
p
, &
szChng
, &
pChng
);

4154 
rc
 = 
	`sqlôe3£ssi⁄_∑tch£t
(
pSessi⁄
->
p
, &
szChng
, &
pChng
);

4156 if–
rc
 ){

4157 
	`¥ötf
("Eº‹:Éº‹ codê%d\n", 
rc
);

4158 
rc
 = 0;

4160 if–
pChng


4161 && 
	`fwrôe
(
pChng
, 
szChng
, 1, 
out
)!=1 ){

4162 
	`øw_¥ötf
(
°dîr
, "ERROR: FailedÅo writeÉntire %d-byte output\n",

4163 
szChng
);

4165 
	`sqlôe3_‰ì
(
pChng
);

4166 
	`f˛o£
(
out
);

4173 if–
	`°rcmp
(
azCmd
[0], "close")==0 ){

4174 if–
nCmd
!=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4175 if–
p
->
nSessi⁄
 ){

4176 
	`£ssi⁄_˛o£
(
pSessi⁄
);

4177 
p
->
aSessi⁄
[
iSes
] =Ö->aSessi⁄[--p->
nSessi⁄
];

4184 if–
	`°rcmp
(
azCmd
[0], "enable")==0 ){

4185 
ii
;

4186 if–
nCmd
>2 ) 
£ssi⁄_sy¡ax_îr‹
;

4187 
ii
 = 
nCmd
==1 ? -1 : 
	`boﬁónVÆue
(
azCmd
[1]);

4188 if–
p
->
nSessi⁄
 ){

4189 
ii
 = 
	`sqlôe3£ssi⁄_íabÀ
(
pSessi⁄
->
p
, ii);

4190 
	`utf8_¥ötf
(
p
->
out
, "session %sÉnable flag = %d\n",

4191 
pSessi⁄
->
zName
, 
ii
);

4198 if–
	`°rcmp
(
azCmd
[0], "filter")==0 ){

4199 
ii
, 
nByã
;

4200 if–
nCmd
<2 ) 
£ssi⁄_sy¡ax_îr‹
;

4201 if–
p
->
nSessi⁄
 ){

4202 
ii
=0; ii<
pSessi⁄
->
nFûãr
; ii++){

4203 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
[
ii
]);

4205 
	`sqlôe3_‰ì
(
pSessi⁄
->
azFûãr
);

4206 
nByã
 = (
pSessi⁄
->
azFûãr
[0])*(
nCmd
-1);

4207 
pSessi⁄
->
azFûãr
 = 
	`sqlôe3_mÆloc
–
nByã
 );

4208 if–
pSessi⁄
->
azFûãr
==0 ){

4209 
	`øw_¥ötf
(
°dîr
, "Error: out or memory\n");

4210 
	`exô
(1);

4212 
ii
=1; ii<
nCmd
; ii++){

4213 
pSessi⁄
->
azFûãr
[
ii
-1] = 
	`sqlôe3_m¥ötf
("%s", 
azCmd
[ii]);

4215 
pSessi⁄
->
nFûãr
 = 
ii
-1;

4222 if–
	`°rcmp
(
azCmd
[0], "indirect")==0 ){

4223 
ii
;

4224 if–
nCmd
>2 ) 
£ssi⁄_sy¡ax_îr‹
;

4225 
ii
 = 
nCmd
==1 ? -1 : 
	`boﬁónVÆue
(
azCmd
[1]);

4226 if–
p
->
nSessi⁄
 ){

4227 
ii
 = 
	`sqlôe3£ssi⁄_ödúe˘
(
pSessi⁄
->
p
, ii);

4228 
	`utf8_¥ötf
(
p
->
out
, "session %s indirect flag = %d\n",

4229 
pSessi⁄
->
zName
, 
ii
);

4236 if–
	`°rcmp
(
azCmd
[0], "isempty")==0 ){

4237 
ii
;

4238 if–
nCmd
!=1 ) 
£ssi⁄_sy¡ax_îr‹
;

4239 if–
p
->
nSessi⁄
 ){

4240 
ii
 = 
	`sqlôe3£ssi⁄_i£m±y
(
pSessi⁄
->
p
);

4241 
	`utf8_¥ötf
(
p
->
out
, "session %s isempty flag = %d\n",

4242 
pSessi⁄
->
zName
, 
ii
);

4249 if–
	`°rcmp
(
azCmd
[0],"list")==0 ){

4250 
i
=0; i<
p
->
nSessi⁄
; i++){

4251 
	`utf8_¥ötf
(
p
->
out
, "%d %s\n", 
i
,Ö->
aSessi⁄
[i].
zName
);

4259 if–
	`°rcmp
(
azCmd
[0],"open")==0 ){

4260 *
zName
;

4261 if–
nCmd
!=3 ) 
£ssi⁄_sy¡ax_îr‹
;

4262 
zName
 = 
azCmd
[2];

4263 if–
zName
[0]==0 ) 
£ssi⁄_sy¡ax_îr‹
;

4264 
i
=0; i<
p
->
nSessi⁄
; i++){

4265 if–
	`°rcmp
(
p
->
aSessi⁄
[
i
].
zName
,zName)==0 ){

4266 
	`utf8_¥ötf
(
°dîr
, "Sessi⁄ \"%s\"áÃódyÉxi°s\n", 
zName
);

4267 
mëa_comm™d_exô
;

4270 if–
p
->
nSessi⁄
>=
	`AºaySize
’->
aSessi⁄
) ){

4271 
	`øw_¥ötf
(
°dîr
, "Maximum o‡%d sessi⁄s\n", 
	`AºaySize
(
p
->
aSessi⁄
));

4272 
mëa_comm™d_exô
;

4274 
pSessi⁄
 = &
p
->
aSessi⁄
[p->
nSessi⁄
];

4275 
rc
 = 
	`sqlôe3£ssi⁄_¸óã
(
p
->
db
, 
azCmd
[1], &
pSessi⁄
->p);

4276 if–
rc
 ){

4277 
	`øw_¥ötf
(
°dîr
, "C™nŸ o≥¿£ssi⁄:Éº‹ code=%d\n", 
rc
);

4278 
rc
 = 0;

4279 
mëa_comm™d_exô
;

4281 
pSessi⁄
->
nFûãr
 = 0;

4282 
	`sqlôe3£ssi⁄_èbÀ_fûãr
(
pSessi⁄
->
p
, 
£ssi⁄_fûãr
,ÖSession);

4283 
p
->
nSessi⁄
++;

4284 
pSessi⁄
->
zName
 = 
	`sqlôe3_m¥ötf
("%s", zName);

4287 
£ssi⁄_sy¡ax_îr‹
:

4288 
	`£ssi⁄_hñp
(
p
);

4292 #ifde‡
SQLITE_DEBUG


4295 if–
c
=='s' && 
n
>=10 && 
	`°∫cmp
(
azArg
[0], "selftest-", 9)==0 ){

4296 if–
	`°∫cmp
(
azArg
[0]+9, "boﬁón", 
n
-9)==0 ){

4297 
i
, 
v
;

4298 
i
=1; i<
nArg
; i++){

4299 
v
 = 
	`boﬁónVÆue
(
azArg
[
i
]);

4300 
	`utf8_¥ötf
(
p
->
out
, "%s: %d 0x%x\n", 
azArg
[
i
], 
v
, v);

4303 if–
	`°∫cmp
(
azArg
[0]+9, "öãgî", 
n
-9)==0 ){

4304 
i
; 
sqlôe3_öt64
 
v
;

4305 
i
=1; i<
nArg
; i++){

4306 
zBuf
[200];

4307 
v
 = 
	`öãgîVÆue
(
azArg
[
i
]);

4308 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%s: %Œd 0x%Œx\n", 
azArg
[
i
],
v
,v);

4309 
	`utf8_¥ötf
(
p
->
out
, "%s", 
zBuf
);

4315 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "£∑øt‹", 
n
)==0 ){

4316 if–
nArg
<2 ||ÇArg>3 ){

4317 
	`øw_¥ötf
(
°dîr
, "Usage: .separator COL ?ROW?\n");

4318 
rc
 = 1;

4320 if–
nArg
>=2 ){

4321 
	`sqlôe3_¢¥ötf
((
p
->
cﬁSï¨©‹
),Ö->colSeparator,

4322 "%.*s", ()
	`AºaySize
(
p
->
cﬁSï¨©‹
)-1, 
azArg
[1]);

4324 if–
nArg
>=3 ){

4325 
	`sqlôe3_¢¥ötf
((
p
->
rowSï¨©‹
),Ö->rowSeparator,

4326 "%.*s", ()
	`AºaySize
(
p
->
rowSï¨©‹
)-1, 
azArg
[2]);

4330 if–
c
=='s'

4331 && (
	`°∫cmp
(
azArg
[0], "shñl", 
n
)==0 || strncmp(azArg[0],"system",n)==0)

4333 *
zCmd
;

4334 
i
, 
x
;

4335 if–
nArg
<2 ){

4336 
	`øw_¥ötf
(
°dîr
, "Usage: .system COMMAND\n");

4337 
rc
 = 1;

4338 
mëa_comm™d_exô
;

4340 
zCmd
 = 
	`sqlôe3_m¥ötf
(
	`°rchr
(
azArg
[1],' ')==0?"%s":"\"%s\"",ázArg[1]);

4341 
i
=2; i<
nArg
; i++){

4342 
zCmd
 = 
	`sqlôe3_m¥ötf
(
	`°rchr
(
azArg
[
i
],' ')==0?"%z %s":"%z \"%s\"",

4343 
zCmd
, 
azArg
[
i
]);

4345 
x
 = 
	`sy°em
(
zCmd
);

4346 
	`sqlôe3_‰ì
(
zCmd
);

4347 if–
x
 ) 
	`øw_¥ötf
(
°dîr
, "System commandÑeturns %d\n", x);

4350 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "show", 
n
)==0 ){

4351 c⁄° *
azBoﬁ
[] = { "off", "on", "full", "unk" };

4352 
i
;

4353 if–
nArg
!=1 ){

4354 
	`øw_¥ötf
(
°dîr
, "Usage: .show\n");

4355 
rc
 = 1;

4356 
mëa_comm™d_exô
;

4358 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","echo", 
azBoﬁ
[p->
echoOn
!=0]);

4359 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","eqp", 
azBoﬁ
[p->
autoEQP
&3]);

4360 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","explain",

4361 
p
->
mode
==
MODE_Ex∂aö
 ? "⁄" :Ö->
autoEx∂aö
 ? "auto" : "off");

4362 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: %s\n","hódîs", 
azBoﬁ
[p->
showHódî
!=0]);

4363 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","mode", 
modeDes¸
[p->
mode
]);

4364 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: ", "nullvalue");

4365 
	`ouçut_c_°rög
(
p
->
out
,Ö->
nuŒVÆue
);

4366 
	`øw_¥ötf
(
p
->
out
, "\n");

4367 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: %s\n","output",

4368 
	`°æí30
(
p
->
outfûe
) ?Ö->outfile : "stdout");

4369 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: ", "colseparator");

4370 
	`ouçut_c_°rög
(
p
->
out
,Ö->
cﬁSï¨©‹
);

4371 
	`øw_¥ötf
(
p
->
out
, "\n");

4372 
	`utf8_¥ötf
(
p
->
out
,"%12.12s: ", "rowseparator");

4373 
	`ouçut_c_°rög
(
p
->
out
,Ö->
rowSï¨©‹
);

4374 
	`øw_¥ötf
(
p
->
out
, "\n");

4375 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: %s\n","°©s", 
azBoﬁ
[p->
°©sOn
!=0]);

4376 
	`utf8_¥ötf
(
p
->
out
, "%12.12s: ", "width");

4377 
i
=0;i<()
	`AºaySize
(
p
->
cﬁWidth
) &&Ö->colWidth[i] != 0;i++) {

4378 
	`øw_¥ötf
(
p
->
out
, "%d ",Ö->
cﬁWidth
[
i
]);

4380 
	`øw_¥ötf
(
p
->
out
, "\n");

4383 if–
c
=='s' && 
	`°∫cmp
(
azArg
[0], "°©s", 
n
)==0 ){

4384 if–
nArg
==2 ){

4385 
p
->
°©sOn
 = 
	`boﬁónVÆue
(
azArg
[1]);

4386 }if–
nArg
==1 ){

4387 
	`di•œy_°©s
(
p
->
db
,Ö, 0);

4389 
	`øw_¥ötf
(
°dîr
, "Usage: .stats ?on|off?\n");

4390 
rc
 = 1;

4394 if–
c
=='t' && 
n
>1 && 
	`°∫cmp
(
azArg
[0], "tables",Ç)==0 ){

4395 
sqlôe3_°mt
 *
pStmt
;

4396 **
azResu…
;

4397 
nRow
, 
nAŒoc
;

4398 *
zSql
 = 0;

4399 
ii
;

4400 
	`›í_db
(
p
, 0);

4401 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, "PRAGMA d©aba£_li°", -1, &
pStmt
, 0);

4402 if–
rc
 )  
	`shñlD©aba£Eº‹
(
p
->
db
);

4407 
zSql
 = 
	`sqlôe3_m¥ötf
(

4412  
zSql
 && 
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

4413 c⁄° *
zDbName
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

4414 if–
zDbName
==0 || 
	`°rcmp
(zDbName,"main")==0 ) ;

4415 if–
	`°rcmp
(
zDbName
,"temp")==0 ){

4416 
zSql
 = 
	`sqlôe3_m¥ötf
(

4421 " ANDÇamêLIKE ?1", 
zSql
);

4423 
zSql
 = 
	`sqlôe3_m¥ötf
(

4428 " ANDÇamêLIKE ?1", 
zSql
, 
zDbName
, zDbName);

4431 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

4432 if–
zSql
 && 
rc
==
SQLITE_OK
 ){

4433 
zSql
 = 
	`sqlôe3_m¥ötf
("%z ORDER BY 1", zSql);

4434 if–
zSql
 ) 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, zSql, -1, &
pStmt
, 0);

4436 
	`sqlôe3_‰ì
(
zSql
);

4437 if–!
zSql
 )  
	`shñlNomemEº‹
();

4438 if–
rc
 )  
	`shñlD©aba£Eº‹
(
p
->
db
);

4442 
nRow
 = 
nAŒoc
 = 0;

4443 
azResu…
 = 0;

4444 if–
nArg
>1 ){

4445 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, 
azArg
[1], -1, 
SQLITE_TRANSIENT
);

4447 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, "%", -1, 
SQLITE_STATIC
);

4449  
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

4450 if–
nRow
>=
nAŒoc
 ){

4451 **
azNew
;

4452 
n2
 = 
nAŒoc
*2 + 10;

4453 
azNew
 = 
	`sqlôe3_ªÆloc64
(
azResu…
, ◊zResu…[0])*
n2
);

4454 if–
azNew
==0 ){

4455 
rc
 = 
	`shñlNomemEº‹
();

4458 
nAŒoc
 = 
n2
;

4459 
azResu…
 = 
azNew
;

4461 
azResu…
[
nRow
] = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0));

4462 if–0==
azResu…
[
nRow
] ){

4463 
rc
 = 
	`shñlNomemEº‹
();

4466 
nRow
++;

4468 if–
	`sqlôe3_föÆize
(
pStmt
)!=
SQLITE_OK
 ){

4469 
rc
 = 
	`shñlD©aba£Eº‹
(
p
->
db
);

4473 if–
rc
==0 && 
nRow
>0 ){

4474 
Àn
, 
maxÀn
 = 0;

4475 
i
, 
j
;

4476 
nPrötCﬁ
, 
nPrötRow
;

4477 
i
=0; i<
nRow
; i++){

4478 
Àn
 = 
	`°æí30
(
azResu…
[
i
]);

4479 if–
Àn
>
maxÀn
 ) maxlen =Üen;

4481 
nPrötCﬁ
 = 80/(
maxÀn
+2);

4482 if–
nPrötCﬁ
<1 )ÇPrintCol = 1;

4483 
nPrötRow
 = (
nRow
 + 
nPrötCﬁ
 - 1)/nPrintCol;

4484 
i
=0; i<
nPrötRow
; i++){

4485 
j
=
i
; j<
nRow
; j+=
nPrötRow
){

4486 *
zSp
 = 
j
<
nPrötRow
 ? "" : " ";

4487 
	`utf8_¥ötf
(
p
->
out
, "%s%-*s", 
zSp
, 
maxÀn
,

4488 
azResu…
[
j
] ?ázResult[j]:"");

4490 
	`øw_¥ötf
(
p
->
out
, "\n");

4494 
ii
=0; ii<
nRow
; ii++Ë
	`sqlôe3_‰ì
(
azResu…
[ii]);

4495 
	`sqlôe3_‰ì
(
azResu…
);

4498 if–
c
=='t' && 
n
>=8 && 
	`°∫cmp
(
azArg
[0], "ã°˘æ",Ç)==0 && 
nArg
>=2 ){

4500 c⁄° *
zCålName
;

4501 
˘æCode
;

4502 } 
aCål
[] = {

4503 { "¥ng_ßve", 
SQLITE_TESTCTRL_PRNG_SAVE
 },

4504 { "¥ng_ª°‹e", 
SQLITE_TESTCTRL_PRNG_RESTORE
 },

4505 { "¥ng_ª£t", 
SQLITE_TESTCTRL_PRNG_RESET
 },

4506 { "bôvec_ã°", 
SQLITE_TESTCTRL_BITVEC_TEST
 },

4507 { "Áu…_ö°Æl", 
SQLITE_TESTCTRL_FAULT_INSTALL
 },

4508 { "bíign_mÆloc_hooks", 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 },

4509 { "≥ndög_byã", 
SQLITE_TESTCTRL_PENDING_BYTE
 },

4510 { "as£π", 
SQLITE_TESTCTRL_ASSERT
 },

4511 { "Æways", 
SQLITE_TESTCTRL_ALWAYS
 },

4512 { "ª£rve", 
SQLITE_TESTCTRL_RESERVE
 },

4513 { "›timiz©i⁄s", 
SQLITE_TESTCTRL_OPTIMIZATIONS
 },

4514 { "iskeyw‹d", 
SQLITE_TESTCTRL_ISKEYWORD
 },

4515 { "s¸©chmÆloc", 
SQLITE_TESTCTRL_SCRATCHMALLOC
 },

4516 { "byã‹dî", 
SQLITE_TESTCTRL_BYTEORDER
 },

4517 { "√vî_c‹ru±", 
SQLITE_TESTCTRL_NEVER_CORRUPT
 },

4518 { "impo°î", 
SQLITE_TESTCTRL_IMPOSTER
 },

4520 
ã°˘æ
 = -1;

4521 
rc2
 = 0;

4522 
i
, 
n2
;

4523 
	`›í_db
(
p
, 0);

4527 
n2
 = 
	`°æí30
(
azArg
[1]);

4528 
i
=0; i<
	`AºaySize
(
aCål
); i++){

4529 if–
	`°∫cmp
(
azArg
[1], 
aCål
[
i
].
zCålName
, 
n2
)==0 ){

4530 if–
ã°˘æ
<0 ){

4531 
ã°˘æ
 = 
aCål
[
i
].
˘æCode
;

4533 
	`utf8_¥ötf
(
°dîr
, "ambiguou†›ti⁄Çame: \"%s\"\n", 
azArg
[1]);

4534 
ã°˘æ
 = -1;

4539 if–
ã°˘æ
<0 )Åe°˘æ = ()
	`öãgîVÆue
(
azArg
[1]);

4540 if–(
ã°˘æ
<
SQLITE_TESTCTRL_FIRST
Ë|| (ã°˘æ>
SQLITE_TESTCTRL_LAST
) ){

4541 
	`utf8_¥ötf
(
°dîr
,"Eº‹: invÆidÅe°˘æ o±i⁄: %s\n", 
azArg
[1]);

4543 
ã°˘æ
){

4546 
SQLITE_TESTCTRL_OPTIMIZATIONS
:

4547 
SQLITE_TESTCTRL_RESERVE
:

4548 if–
nArg
==3 ){

4549 
›t
 = ()
	`°πﬁ
(
azArg
[2], 0, 0);

4550 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
p
->
db
, 
›t
);

4551 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4553 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single int option\n",

4554 
azArg
[1]);

4559 
SQLITE_TESTCTRL_PRNG_SAVE
:

4560 
SQLITE_TESTCTRL_PRNG_RESTORE
:

4561 
SQLITE_TESTCTRL_PRNG_RESET
:

4562 
SQLITE_TESTCTRL_BYTEORDER
:

4563 if–
nArg
==2 ){

4564 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
);

4565 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4567 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesÇo options\n",

4568 
azArg
[1]);

4573 
SQLITE_TESTCTRL_PENDING_BYTE
:

4574 if–
nArg
==3 ){

4575 
›t
 = ()
	`öãgîVÆue
(
azArg
[2]);

4576 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

4577 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4579 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single unsigned"

4580 " i¡ o±i⁄\n", 
azArg
[1]);

4585 
SQLITE_TESTCTRL_ASSERT
:

4586 
SQLITE_TESTCTRL_ALWAYS
:

4587 
SQLITE_TESTCTRL_NEVER_CORRUPT
:

4588 if–
nArg
==3 ){

4589 
›t
 = 
	`boﬁónVÆue
(
azArg
[2]);

4590 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

4591 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4593 
	`utf8_¥ötf
(
°dîr
,"Error:Åestctrl %sÅakesá single int option\n",

4594 
azArg
[1]);

4599 #ifde‡
SQLITE_N_KEYWORD


4600 
SQLITE_TESTCTRL_ISKEYWORD
:

4601 if–
nArg
==3 ){

4602 c⁄° *
›t
 = 
azArg
[2];

4603 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
›t
);

4604 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4606 
	`utf8_¥ötf
(
°dîr
,

4608 
azArg
[1]);

4613 
SQLITE_TESTCTRL_IMPOSTER
:

4614 if–
nArg
==5 ){

4615 
rc2
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
ã°˘æ
, 
p
->
db
,

4616 
azArg
[2],

4617 
	`öãgîVÆue
(
azArg
[3]),

4618 
	`öãgîVÆue
(
azArg
[4]));

4619 
	`øw_¥ötf
(
p
->
out
, "%d (0x%08x)\n", 
rc2
,Ñc2);

4621 
	`øw_¥ötf
(
°dîr
,"Usage: .testctrl imposter dbName onoffÅnum\n");

4625 
SQLITE_TESTCTRL_BITVEC_TEST
:

4626 
SQLITE_TESTCTRL_FAULT_INSTALL
:

4627 
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
:

4628 
SQLITE_TESTCTRL_SCRATCHMALLOC
:

4630 
	`utf8_¥ötf
(
°dîr
,

4632 
azArg
[1]);

4638 if–
c
=='t' && 
n
>4 && 
	`°∫cmp
(
azArg
[0], "timeout",Ç)==0 ){

4639 
	`›í_db
(
p
, 0);

4640 
	`sqlôe3_busy_timeout
(
p
->
db
, 
nArg
>=2 ? ()
	`öãgîVÆue
(
azArg
[1]) : 0);

4643 if–
c
=='t' && 
n
>=5 && 
	`°∫cmp
(
azArg
[0], "timer",Ç)==0 ){

4644 if–
nArg
==2 ){

4645 
íabÀTimî
 = 
	`boﬁónVÆue
(
azArg
[1]);

4646 if–
íabÀTimî
 && !
HAS_TIMER
 ){

4647 
	`øw_¥ötf
(
°dîr
, "Error:ÅimerÇotávailable onÅhis system.\n");

4648 
íabÀTimî
 = 0;

4651 
	`øw_¥ötf
(
°dîr
, "Usage: .timer on|off\n");

4652 
rc
 = 1;

4656 if–
c
=='t' && 
	`°∫cmp
(
azArg
[0], "åa˚", 
n
)==0 ){

4657 
	`›í_db
(
p
, 0);

4658 if–
nArg
!=2 ){

4659 
	`øw_¥ötf
(
°dîr
, "Usage: .trace FILE|off\n");

4660 
rc
 = 1;

4661 
mëa_comm™d_exô
;

4663 
	`ouçut_fûe_˛o£
(
p
->
åa˚Out
);

4664 
p
->
åa˚Out
 = 
	`ouçut_fûe_›í
(
azArg
[1]);

4665 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

4666 if–
p
->
åa˚Out
==0 ){

4667 
	`sqlôe3_åa˚_v2
(
p
->
db
, 0, 0, 0);

4669 
	`sqlôe3_åa˚_v2
(
p
->
db
, 
SQLITE_TRACE_STMT
, 
sql_åa˚_ˇŒback
,p->
åa˚Out
);

4674 #i‡
SQLITE_USER_AUTHENTICATION


4675 if–
c
=='u' && 
	`°∫cmp
(
azArg
[0], "u£r", 
n
)==0 ){

4676 if–
nArg
<2 ){

4677 
	`øw_¥ötf
(
°dîr
, "Usage: .user SUBCOMMAND ...\n");

4678 
rc
 = 1;

4679 
mëa_comm™d_exô
;

4681 
	`›í_db
(
p
, 0);

4682 if–
	`°rcmp
(
azArg
[1],"login")==0 ){

4683 if–
nArg
!=4 ){

4684 
	`øw_¥ötf
(
°dîr
, "Usage: .userÜogin USER PASSWORD\n");

4685 
rc
 = 1;

4686 
mëa_comm™d_exô
;

4688 
rc
 = 
	`sqlôe3_u£r_authítiˇã
(
p
->
db
, 
azArg
[2],ázArg[3],

4689 ()
	`°æí
(
azArg
[3]));

4690 if–
rc
 ){

4691 
	`utf8_¥ötf
(
°dîr
, "Authítiˇti⁄ faûed f‹ u£∏%s\n", 
azArg
[2]);

4692 
rc
 = 1;

4694 }if–
	`°rcmp
(
azArg
[1],"add")==0 ){

4695 if–
nArg
!=5 ){

4696 
	`øw_¥ötf
(
°dîr
, "Usage: .userádd USER PASSWORD ISADMIN\n");

4697 
rc
 = 1;

4698 
mëa_comm™d_exô
;

4700 
rc
 = 
	`sqlôe3_u£r_add
(
p
->
db
, 
azArg
[2],

4701 
azArg
[3], ()
	`°æí
(azArg[3]),

4702 
	`boﬁónVÆue
(
azArg
[4]));

4703 if–
rc
 ){

4704 
	`øw_¥ötf
(
°dîr
, "U£r-Add faûed: %d\n", 
rc
);

4705 
rc
 = 1;

4707 }if–
	`°rcmp
(
azArg
[1],"edit")==0 ){

4708 if–
nArg
!=5 ){

4709 
	`øw_¥ötf
(
°dîr
, "Usage: .userÉdit USER PASSWORD ISADMIN\n");

4710 
rc
 = 1;

4711 
mëa_comm™d_exô
;

4713 
rc
 = 
	`sqlôe3_u£r_ch™ge
(
p
->
db
, 
azArg
[2],

4714 
azArg
[3], ()
	`°æí
(azArg[3]),

4715 
	`boﬁónVÆue
(
azArg
[4]));

4716 if–
rc
 ){

4717 
	`øw_¥ötf
(
°dîr
, "U£r-Edô faûed: %d\n", 
rc
);

4718 
rc
 = 1;

4720 }if–
	`°rcmp
(
azArg
[1],"delete")==0 ){

4721 if–
nArg
!=3 ){

4722 
	`øw_¥ötf
(
°dîr
, "Usage: .user delete USER\n");

4723 
rc
 = 1;

4724 
mëa_comm™d_exô
;

4726 
rc
 = 
	`sqlôe3_u£r_dñëe
(
p
->
db
, 
azArg
[2]);

4727 if–
rc
 ){

4728 
	`øw_¥ötf
(
°dîr
, "U£r-DñëêÁûed: %d\n", 
rc
);

4729 
rc
 = 1;

4732 
	`øw_¥ötf
(
°dîr
, "Usage: .userÜogin|add|edit|delete ...\n");

4733 
rc
 = 1;

4734 
mëa_comm™d_exô
;

4739 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vîsi⁄", 
n
)==0 ){

4740 
	`utf8_¥ötf
(
p
->
out
, "SQLite %s %s\n" ,

4741 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
());

4744 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vfsöfo", 
n
)==0 ){

4745 c⁄° *
zDbName
 = 
nArg
==2 ? 
azArg
[1] : "main";

4746 
sqlôe3_vfs
 *
pVfs
;

4747 if–
p
->
db
 ){

4748 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDbName
, 
SQLITE_FCNTL_VFS_POINTER
, &
pVfs
);

4749 if–
pVfs
 ){

4750 
	`utf8_¥ötf
(
p
->
out
, "vfs.zNamê = \"%s\"\n", 
pVfs
->
zName
);

4751 
	`øw_¥ötf
(
p
->
out
, "vfs.iVîsi⁄ = %d\n", 
pVfs
->
iVîsi⁄
);

4752 
	`øw_¥ötf
(
p
->
out
, "vfs.szOsFûê = %d\n", 
pVfs
->
szOsFûe
);

4753 
	`øw_¥ötf
(
p
->
out
, "vfs.mxP©h«mê%d\n", 
pVfs
->
mxP©h«me
);

4758 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vf¶i°", 
n
)==0 ){

4759 
sqlôe3_vfs
 *
pVfs
;

4760 
sqlôe3_vfs
 *
pCuºít
 = 0;

4761 if–
p
->
db
 ){

4762 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, "maö", 
SQLITE_FCNTL_VFS_POINTER
, &
pCuºít
);

4764 
pVfs
=
	`sqlôe3_vfs_föd
(0);ÖVfs;ÖVfsıVfs->
pNext
){

4765 
	`utf8_¥ötf
(
p
->
out
, "vfs.zNamê = \"%s\"%s\n", 
pVfs
->
zName
,

4766 
pVfs
==
pCuºít
 ? " <--- CURRENT" : "");

4767 
	`øw_¥ötf
(
p
->
out
, "vfs.iVîsi⁄ = %d\n", 
pVfs
->
iVîsi⁄
);

4768 
	`øw_¥ötf
(
p
->
out
, "vfs.szOsFûê = %d\n", 
pVfs
->
szOsFûe
);

4769 
	`øw_¥ötf
(
p
->
out
, "vfs.mxP©h«mê%d\n", 
pVfs
->
mxP©h«me
);

4770 if–
pVfs
->
pNext
 ){

4771 
	`øw_¥ötf
(
p
->
out
, "-----------------------------------\n");

4776 if–
c
=='v' && 
	`°∫cmp
(
azArg
[0], "vf¢ame", 
n
)==0 ){

4777 c⁄° *
zDbName
 = 
nArg
==2 ? 
azArg
[1] : "main";

4778 *
zVfsName
 = 0;

4779 if–
p
->
db
 ){

4780 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, 
zDbName
, 
SQLITE_FCNTL_VFSNAME
, &
zVfsName
);

4781 if–
zVfsName
 ){

4782 
	`utf8_¥ötf
(
p
->
out
, "%s\n", 
zVfsName
);

4783 
	`sqlôe3_‰ì
(
zVfsName
);

4788 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
SQLITE_ENABLE_WHERETRACE
)

4789 if–
c
=='w' && 
	`°∫cmp
(
azArg
[0], "whîëø˚", 
n
)==0 ){

4790 
sqlôe3WhîeTø˚
 = 
nArg
>=2 ? 
	`boﬁónVÆue
(
azArg
[1]) : 0xff;

4794 if–
c
=='w' && 
	`°∫cmp
(
azArg
[0], "width", 
n
)==0 ){

4795 
j
;

4796 
	`as£π
–
nArg
<=
	`AºaySize
(
azArg
) );

4797 
j
=1; j<
nArg
 && j<
	`AºaySize
(
p
->
cﬁWidth
); j++){

4798 
p
->
cﬁWidth
[
j
-1] = ()
	`öãgîVÆue
(
azArg
[j]);

4803 
	`utf8_¥ötf
(
°dîr
, "Error: unknown command or invalidárguments: "

4804 " \"%s\". E¡î \".hñp\" f‹ hñp\n", 
azArg
[0]);

4805 
rc
 = 1;

4808 
mëa_comm™d_exô
:

4809 if–
p
->
outCou¡
 ){

4810 
p
->
outCou¡
--;

4811 if–
p
->
outCou¡
==0 ) 
	`ouçut_ª£t
(p);

4813  
rc
;

4814 
	}
}

4820 
	$löe_c⁄èös_£micﬁ⁄
(c⁄° *
z
, 
N
){

4821 
i
;

4822 
i
=0; i<
N
; i++){ if–
z
[i]==';' )  1; }

4824 
	}
}

4829 
	$_Æl_whôe•a˚
(c⁄° *
z
){

4830 ; *
z
; z++){

4831 if–
	`IsS∑˚
(
z
[0]) ) ;

4832 if–*
z
=='/' && z[1]=='*' ){

4833 
z
 += 2;

4834  *
z
 && (*z!='*' || z[1]!='/') ){ z++; }

4835 if–*
z
==0 )  0;

4836 
z
++;

4839 if–*
z
=='-' && z[1]=='-' ){

4840 
z
 += 2;

4841  *
z
 && *z!='\n' ){ z++; }

4842 if–*
z
==0 )  1;

4848 
	}
}

4855 
	$löe_is_comm™d_ãrmö©‹
(c⁄° *
zLöe
){

4856  
	`IsS∑˚
(
zLöe
[0]) ){ zLine++; };

4857 if–
zLöe
[0]=='/' && 
	`_Æl_whôe•a˚
(&zLine[1]) ){

4860 if–
	`ToLowî
(
zLöe
[0])=='g' && ToLower(zLine[1])=='o'

4861 && 
	`_Æl_whôe•a˚
(&
zLöe
[2]) ){

4865 
	}
}

4871 
	$löe_is_com∂ëe
(*
zSql
, 
nSql
){

4872 
rc
;

4873 if–
zSql
==0 )  1;

4874 
zSql
[
nSql
] = ';';

4875 
zSql
[
nSql
+1] = 0;

4876 
rc
 = 
	`sqlôe3_com∂ëe
(
zSql
);

4877 
zSql
[
nSql
] = 0;

4878  
rc
;

4879 
	}
}

4890 
	$¥o˚ss_öput
(
ShñlSèã
 *
p
, 
FILE
 *
ö
){

4891 *
zLöe
 = 0;

4892 *
zSql
 = 0;

4893 
nLöe
;

4894 
nSql
 = 0;

4895 
nAŒoc
 = 0;

4896 
nSqlPri‹
 = 0;

4897 *
zEºMsg
;

4898 
rc
;

4899 
îrC¡
 = 0;

4900 
löío
 = 0;

4901 
°¨éöe
 = 0;

4903  
îrC¡
==0 || !
baû_⁄_îr‹
 || (
ö
==0 && 
°dö_is_öãø˘ive
) ){

4904 
	`fÊush
(
p
->
out
);

4905 
zLöe
 = 
	`⁄e_öput_löe
(
ö
, zLöe, 
nSql
>0);

4906 if–
zLöe
==0 ){

4908 if–
°dö_is_öãø˘ive
 ) 
	`¥ötf
("\n");

4911 if–
£íI¡îru±
 ){

4912 if–
ö
!=0 ) ;

4913 
£íI¡îru±
 = 0;

4915 
löío
++;

4916 if–
nSql
==0 && 
	`_Æl_whôe•a˚
(
zLöe
) ){

4917 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zLöe
);

4920 if–
zLöe
 && zLöe[0]=='.' && 
nSql
==0 ){

4921 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zLöe
);

4922 
rc
 = 
	`do_mëa_comm™d
(
zLöe
, 
p
);

4923 if–
rc
==2 ){

4925 }if–
rc
 ){

4926 
îrC¡
++;

4930 if–
	`löe_is_comm™d_ãrmö©‹
(
zLöe
Ë&& 
	`löe_is_com∂ëe
(
zSql
, 
nSql
) ){

4931 
	`mem˝y
(
zLöe
,";",2);

4933 
nLöe
 = 
	`°æí30
(
zLöe
);

4934 if–
nSql
+
nLöe
+2>=
nAŒoc
 ){

4935 
nAŒoc
 = 
nSql
+
nLöe
+100;

4936 
zSql
 = 
	`ªÆloc
(zSql, 
nAŒoc
);

4937 if–
zSql
==0 ){

4938 
	`øw_¥ötf
(
°dîr
, "Error: out of memory\n");

4939 
	`exô
(1);

4942 
nSqlPri‹
 = 
nSql
;

4943 if–
nSql
==0 ){

4944 
i
;

4945 
i
=0; 
zLöe
[i] && 
	`IsS∑˚
(zLine[i]); i++){}

4946 
	`as£π
–
nAŒoc
>0 && 
zSql
!=0 );

4947 
	`mem˝y
(
zSql
, 
zLöe
+
i
, 
nLöe
+1-i);

4948 
°¨éöe
 = 
löío
;

4949 
nSql
 = 
nLöe
-
i
;

4951 
zSql
[
nSql
++] = '\n';

4952 
	`mem˝y
(
zSql
+
nSql
, 
zLöe
, 
nLöe
+1);

4953 
nSql
 +
nLöe
;

4955 if–
nSql
 && 
	`löe_c⁄èös_£micﬁ⁄
(&
zSql
[
nSqlPri‹
],ÇSql-nSqlPrior)

4956 && 
	`sqlôe3_com∂ëe
(
zSql
) ){

4957 
p
->
˙t
 = 0;

4958 
	`›í_db
(
p
, 0);

4959 if–
p
->
back¶ashOn
 ) 
	`ªsﬁve_back¶ashes
(
zSql
);

4960 
BEGIN_TIMER
;

4961 
rc
 = 
	`shñl_exec
(
p
->
db
, 
zSql
, 
shñl_ˇŒback
,Ö, &
zEºMsg
);

4962 
END_TIMER
;

4963 if–
rc
 || 
zEºMsg
 ){

4964 
zPªfix
[100];

4965 if–
ö
!=0 || !
°dö_is_öãø˘ive
 ){

4966 
	`sqlôe3_¢¥ötf
((
zPªfix
), zPrefix,

4967 "Eº‹:Çó∏löê%d:", 
°¨éöe
);

4969 
	`sqlôe3_¢¥ötf
((
zPªfix
), zPrefix, "Error:");

4971 if–
zEºMsg
!=0 ){

4972 
	`utf8_¥ötf
(
°dîr
, "%†%s\n", 
zPªfix
, 
zEºMsg
);

4973 
	`sqlôe3_‰ì
(
zEºMsg
);

4974 
zEºMsg
 = 0;

4976 
	`utf8_¥ötf
(
°dîr
, "%†%s\n", 
zPªfix
, 
	`sqlôe3_îrmsg
(
p
->
db
));

4978 
îrC¡
++;

4979 }if–
p
->
cou¡Ch™ges
 ){

4980 
	`øw_¥ötf
(
p
->
out
, "changes: %3dÅotal_changes: %d\n",

4981 
	`sqlôe3_ch™ges
(
p
->
db
), 
	`sqlôe3_tŸÆ_ch™ges
(p->db));

4983 
nSql
 = 0;

4984 if–
p
->
outCou¡
 ){

4985 
	`ouçut_ª£t
(
p
);

4986 
p
->
outCou¡
 = 0;

4988 }if–
nSql
 && 
	`_Æl_whôe•a˚
(
zSql
) ){

4989 if–
p
->
echoOn
 ) 
	`¥ötf
("%s\n", 
zSql
);

4990 
nSql
 = 0;

4993 if–
nSql
 ){

4994 if–!
	`_Æl_whôe•a˚
(
zSql
) ){

4995 
	`utf8_¥ötf
(
°dîr
, "Eº‹: incom∂ëêSQL: %s\n", 
zSql
);

4996 
îrC¡
++;

4999 
	`‰ì
(
zSql
);

5000 
	`‰ì
(
zLöe
);

5001  
îrC¡
>0;

5002 
	}
}

5008 *
	$föd_home_dú
(){

5009 *
home_dú
 = 
NULL
;

5010 if–
home_dú
 )  home_dir;

5012 #i‡!
	`deföed
(
_WIN32
Ë&& !deföed(
WIN32
Ë&& !deföed(
_WIN32_WCE
) \

5013 && !
	`deföed
(
__RTP__
Ë&& !deföed(
_WRS_KERNEL
)

5015 
∑sswd
 *
pwít
;

5016 
uid_t
 
uid
 = 
	`gëuid
();

5017 if–(
pwít
=
	`gëpwuid
(
uid
)Ë!
NULL
) {

5018 
home_dú
 = 
pwít
->
pw_dú
;

5023 #i‡
	`deföed
(
_WIN32_WCE
)

5026 
home_dú
 = "/";

5029 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

5030 i‡(!
home_dú
) {

5031 
home_dú
 = 
	`gëív
("USERPROFILE");

5035 i‡(!
home_dú
) {

5036 
home_dú
 = 
	`gëív
("HOME");

5039 #i‡
	`deföed
(
_WIN32
Ë|| deföed(
WIN32
)

5040 i‡(!
home_dú
) {

5041 *
zDrive
, *
zP©h
;

5042 
n
;

5043 
zDrive
 = 
	`gëív
("HOMEDRIVE");

5044 
zP©h
 = 
	`gëív
("HOMEPATH");

5045 if–
zDrive
 && 
zP©h
 ){

5046 
n
 = 
	`°æí30
(
zDrive
Ë+ såÀn30(
zP©h
) + 1;

5047 
home_dú
 = 
	`mÆloc
–
n
 );

5048 if–
home_dú
==0 )  0;

5049 
	`sqlôe3_¢¥ötf
(
n
, 
home_dú
, "%s%s", 
zDrive
, 
zP©h
);

5050  
home_dú
;

5052 
home_dú
 = "c:\\";

5058 if–
home_dú
 ){

5059 
n
 = 
	`°æí30
(
home_dú
) + 1;

5060 *
z
 = 
	`mÆloc
–
n
 );

5061 if–
z
 ) 
	`mem˝y
(z, 
home_dú
, 
n
);

5062 
home_dú
 = 
z
;

5065  
home_dú
;

5066 
	}
}

5074 
	$¥o˚ss_sqlôîc
(

5075 
ShñlSèã
 *
p
,

5076 c⁄° *
sqlôîc_ovîride


5078 *
home_dú
 = 
NULL
;

5079 c⁄° *
sqlôîc
 = 
sqlôîc_ovîride
;

5080 *
zBuf
 = 0;

5081 
FILE
 *
ö
 = 
NULL
;

5083 i‡(
sqlôîc
 =
NULL
) {

5084 
home_dú
 = 
	`föd_home_dú
();

5085 if–
home_dú
==0 ){

5086 
	`øw_¥ötf
(
°dîr
, "-- warning: cannot find home directory;"

5090 
	`sqlôe3_öôülize
();

5091 
zBuf
 = 
	`sqlôe3_m¥ötf
("%s/.sqlôîc",
home_dú
);

5092 
sqlôîc
 = 
zBuf
;

5094 
ö
 = 
	`f›í
(
sqlôîc
,"rb");

5095 if–
ö
 ){

5096 if–
°dö_is_öãø˘ive
 ){

5097 
	`utf8_¥ötf
(
°dîr
,"-- LﬂdögÑesour˚†‰om %s\n",
sqlôîc
);

5099 
	`¥o˚ss_öput
(
p
,
ö
);

5100 
	`f˛o£
(
ö
);

5102 
	`sqlôe3_‰ì
(
zBuf
);

5103 
	}
}

5108 c⁄° 
	gzO±i⁄s
[] =

5118 #i‡
deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

5128 #ifde‡
SQLITE_ENABLE_MULTIPLEX


5139 #ifde‡
SQLITE_ENABLE_VFSTRACE


5143 
	$ußge
(
showDëaû
){

5144 
	`utf8_¥ötf
(
°dîr
,

5147 "i‡thêfûêd€†nŸÖªviou¶yÉxi°.\n", 
Argv0
);

5148 if–
showDëaû
 ){

5149 
	`utf8_¥ötf
(
°dîr
, "OPTIONS in˛ude:\n%s", 
zO±i⁄s
);

5151 
	`øw_¥ötf
(
°dîr
, "UseÅhe -help option forádditional information\n");

5153 
	`exô
(1);

5154 
	}
}

5159 
	$maö_öô
(
ShñlSèã
 *
d©a
) {

5160 
	`mem£t
(
d©a
, 0, (*data));

5161 
d©a
->
n‹mÆMode
 = d©a->
cMode
 = d©a->
mode
 = 
MODE_Li°
;

5162 
d©a
->
autoEx∂aö
 = 1;

5163 
	`mem˝y
(
d©a
->
cﬁSï¨©‹
,
SEP_Cﬁumn
, 2);

5164 
	`mem˝y
(
d©a
->
rowSï¨©‹
,
SEP_Row
, 2);

5165 
d©a
->
showHódî
 = 0;

5166 
d©a
->
shñlFlgs
 = 
SHFLG_Lookaside
;

5167 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_URI
, 1);

5168 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, 
shñlLog
, 
d©a
);

5169 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MULTITHREAD
);

5170 
	`sqlôe3_¢¥ötf
((
maöProm±
), mainPrompt,"sqlite> ");

5171 
	`sqlôe3_¢¥ötf
((
c⁄töueProm±
), continuePrompt," ...> ");

5172 
	}
}

5177 #ifde‡
_WIN32


5178 
	$¥ötBﬁd
(c⁄° *
zText
){

5179 
HANDLE
 
out
 = 
	`GëStdH™dÀ
(
STD_OUTPUT_HANDLE
);

5180 
CONSOLE_SCREEN_BUFFER_INFO
 
deÁu…S¸ìnInfo
;

5181 
	`GëC⁄sﬁeS¸ìnBuf„rInfo
(
out
, &
deÁu…S¸ìnInfo
);

5182 
	`SëC⁄sﬁeTextAâribuã
(
out
,

5183 
FOREGROUND_RED
|
FOREGROUND_INTENSITY


5185 
	`¥ötf
("%s", 
zText
);

5186 
	`SëC⁄sﬁeTextAâribuã
(
out
, 
deÁu…S¸ìnInfo
.
wAâribuãs
);

5187 
	}
}

5189 
	$¥ötBﬁd
(c⁄° *
zText
){

5190 
	`¥ötf
("\033[1m%s\033[0m", 
zText
);

5191 
	}
}

5198 *
	$cmdlöe_›ti⁄_vÆue
(
¨gc
, **
¨gv
, 
i
){

5199 if–
i
==
¨gc
 ){

5200 
	`utf8_¥ötf
(
°dîr
, "%s: Error: missingárgumentÅo %s\n",

5201 
¨gv
[0],árgv[
¨gc
-1]);

5202 
	`exô
(1);

5204  
¨gv
[
i
];

5205 
	}
}

5207 #i‚de‡
SQLITE_SHELL_IS_UTF8


5208 #i‡(
deföed
(
_WIN32
Ë|| deföed(
WIN32
)Ë&& deföed(
_MSC_VER
)

5209 
	#SQLITE_SHELL_IS_UTF8
 (0)

	)

5211 
	#SQLITE_SHELL_IS_UTF8
 (1)

	)

5215 #i‡
SQLITE_SHELL_IS_UTF8


5216 
SQLITE_CDECL
 
	$maö
(
¨gc
, **
¨gv
){

5218 
SQLITE_CDECL
 
	$wmaö
(
¨gc
, 
wch¨_t
 **
w¨gv
){

5219 **
¨gv
;

5221 *
zEºMsg
 = 0;

5222 
ShñlSèã
 
d©a
;

5223 c⁄° *
zInôFûe
 = 0;

5224 
i
;

5225 
rc
 = 0;

5226 
w¨nInmem‹yDb
 = 0;

5227 
ªadStdö
 = 1;

5228 
nCmd
 = 0;

5229 **
azCmd
 = 0;

5231 
	`£tBö¨yMode
(
°dö
, 0);

5232 
	`£tvbuf
(
°dîr
, 0, 
_IONBF
, 0);

5233 
°dö_is_öãø˘ive
 = 
	`ißây
(0);

5234 
°dout_is_c⁄sﬁe
 = 
	`ißây
(1);

5236 #i‡
USE_SYSTEM_SQLITE
+0!=1

5237 if–
	`°rcmp
(
	`sqlôe3_sour˚id
(),
SQLITE_SOURCE_ID
)!=0 ){

5238 
	`utf8_¥ötf
(
°dîr
, "SQLite headeránd source version mismatch\n%s\n%s\n",

5239 
	`sqlôe3_sour˚id
(), 
SQLITE_SOURCE_ID
);

5240 
	`exô
(1);

5243 
	`maö_öô
(&
d©a
);

5244 #i‡!
SQLITE_SHELL_IS_UTF8


5245 
	`sqlôe3_öôülize
();

5246 
¨gv
 = 
	`sqlôe3_mÆloc64
(◊rgv[0])*
¨gc
);

5247 if–
¨gv
==0 ){

5248 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5249 
	`exô
(1);

5251 
i
=0; i<
¨gc
; i++){

5252 
¨gv
[
i
] = 
	`sqlôe3_wö32_unicode_to_utf8
(
w¨gv
[i]);

5253 if–
¨gv
[
i
]==0 ){

5254 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5255 
	`exô
(1);

5259 
	`as£π
–
¨gc
>=1 && 
¨gv
 &&árgv[0] );

5260 
Argv0
 = 
¨gv
[0];

5265 #ifde‡
SIGINT


5266 
	`sig«l
(
SIGINT
, 
öãºu±_h™dÀr
);

5269 #ifde‡
SQLITE_SHELL_DBNAME_PROC


5275 
	`SQLITE_SHELL_DBNAME_PROC
(const **);

5276 
	`SQLITE_SHELL_DBNAME_PROC
(&
d©a
.
zDbFûíame
);

5277 
w¨nInmem‹yDb
 = 0;

5286 
i
=1; i<
¨gc
; i++){

5287 *
z
;

5288 
z
 = 
¨gv
[
i
];

5289 if–
z
[0]!='-' ){

5290 if–
d©a
.
zDbFûíame
==0 ){

5291 
d©a
.
zDbFûíame
 = 
z
;

5295 
ªadStdö
 = 0;

5296 
nCmd
++;

5297 
azCmd
 = 
	`ªÆloc
◊zCmd, ◊zCmd[0])*
nCmd
);

5298 if–
azCmd
==0 ){

5299 
	`øw_¥ötf
(
°dîr
, "out of memory\n");

5300 
	`exô
(1);

5302 
azCmd
[
nCmd
-1] = 
z
;

5305 if–
z
[1]=='-' ) z++;

5306 if–
	`°rcmp
(
z
,"-separator")==0

5307 || 
	`°rcmp
(
z
,"-nullvalue")==0

5308 || 
	`°rcmp
(
z
,"-newline")==0

5309 || 
	`°rcmp
(
z
,"-cmd")==0

5311 ()
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5312 }if–
	`°rcmp
(
z
,"-init")==0 ){

5313 
zInôFûe
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5314 }if–
	`°rcmp
(
z
,"-batch")==0 ){

5319 
°dö_is_öãø˘ive
 = 0;

5320 }if–
	`°rcmp
(
z
,"-heap")==0 ){

5321 #i‡
	`deföed
(
SQLITE_ENABLE_MEMSYS3
Ë|| deföed(
SQLITE_ENABLE_MEMSYS5
)

5322 c⁄° *
zSize
;

5323 
sqlôe3_öt64
 
szHóp
;

5325 
zSize
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5326 
szHóp
 = 
	`öãgîVÆue
(
zSize
);

5327 if–
szHóp
>0x7fff0000 ) szHeap = 0x7fff0000;

5328 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, 
	`mÆloc
(()
szHóp
), ()szHeap, 64);

5330 ()
	`cmdlöe_›ti⁄_vÆue
(
¨gc
, 
¨gv
, ++
i
);

5332 }if–
	`°rcmp
(
z
,"-scratch")==0 ){

5333 
n
, 
sz
;

5334 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5335 if–
sz
>400000 ) sz = 400000;

5336 if–
sz
<2500 ) sz = 2500;

5337 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5338 if–
n
>10 )Ç = 10;

5339 if–
n
<1 )Ç = 1;

5340 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, 
	`mÆloc
(
n
*
sz
+1), sz,Ç);

5341 
d©a
.
shñlFlgs
 |
SHFLG_S¸©ch
;

5342 }if–
	`°rcmp
(
z
,"-pagecache")==0 ){

5343 
n
, 
sz
;

5344 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5345 if–
sz
>70000 ) sz = 70000;

5346 if–
sz
<0 ) sz = 0;

5347 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5348 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
,

5349 (
n
>0 && 
sz
>0Ë? 
	`mÆloc
(n*sz) : 0, sz,Ç);

5350 
d©a
.
shñlFlgs
 |
SHFLG_Pageˇche
;

5351 }if–
	`°rcmp
(
z
,"-lookaside")==0 ){

5352 
n
, 
sz
;

5353 
sz
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5354 if–
sz
<0 ) sz = 0;

5355 
n
 = ()
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5356 if–
n
<0 )Ç = 0;

5357 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOOKASIDE
, 
sz
, 
n
);

5358 if–
sz
*
n
==0 ) 
d©a
.
shñlFlgs
 &~
SHFLG_Lookaside
;

5359 #ifde‡
SQLITE_ENABLE_VFSTRACE


5360 }if–
	`°rcmp
(
z
,"-vfstrace")==0 ){

5361 
	`vf°ø˚_ªgi°î
(

5362 c⁄° *
zTø˚Name
,

5363 c⁄° *
zOldVfsName
,

5364 (*
xOut
)(const *,*),

5365 *
pOutArg
,

5366 
makeDeÁu…


5368 
	`vf°ø˚_ªgi°î
("åa˚",0,((*)(c⁄° *,*))
Âuts
,
°dîr
,1);

5370 #ifde‡
SQLITE_ENABLE_MULTIPLEX


5371 }if–
	`°rcmp
(
z
,"-multiplex")==0 ){

5372 
	`sqlôe3_mu…ùÀ_öôülize
(const *,);

5373 
	`sqlôe3_mu…ùÀx_öôülize
(0, 1);

5375 }if–
	`°rcmp
(
z
,"-mmap")==0 ){

5376 
sqlôe3_öt64
 
sz
 = 
	`öãgîVÆue
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5377 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MMAP_SIZE
, 
sz
, sz);

5378 }if–
	`°rcmp
(
z
,"-vfs")==0 ){

5379 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5380 if–
pVfs
 ){

5381 
	`sqlôe3_vfs_ªgi°î
(
pVfs
, 1);

5383 
	`utf8_¥ötf
(
°dîr
, "nÿsuch VFS: \"%s\"\n", 
¨gv
[
i
]);

5384 
	`exô
(1);

5388 if–
d©a
.
zDbFûíame
==0 ){

5389 #i‚de‡
SQLITE_OMIT_MEMORYDB


5390 
d©a
.
zDbFûíame
 = ":memory:";

5391 
w¨nInmem‹yDb
 = 
¨gc
==1;

5393 
	`utf8_¥ötf
(
°dîr
,"%s: Eº‹:Çÿd©aba£ fûíamê•ecifõd\n", 
Argv0
);

5397 
d©a
.
out
 = 
°dout
;

5404 if–
	`ac˚ss
(
d©a
.
zDbFûíame
, 0)==0 ){

5405 
	`›í_db
(&
d©a
, 0);

5412 
	`¥o˚ss_sqlôîc
(&
d©a
,
zInôFûe
);

5419 
i
=1; i<
¨gc
; i++){

5420 *
z
 = 
¨gv
[
i
];

5421 if–
z
[0]!='-' ) ;

5422 if–
z
[1]=='-' ){ z++; }

5423 if–
	`°rcmp
(
z
,"-init")==0 ){

5424 
i
++;

5425 }if–
	`°rcmp
(
z
,"-html")==0 ){

5426 
d©a
.
mode
 = 
MODE_Html
;

5427 }if–
	`°rcmp
(
z
,"-list")==0 ){

5428 
d©a
.
mode
 = 
MODE_Li°
;

5429 }if–
	`°rcmp
(
z
,"-line")==0 ){

5430 
d©a
.
mode
 = 
MODE_Löe
;

5431 }if–
	`°rcmp
(
z
,"-column")==0 ){

5432 
d©a
.
mode
 = 
MODE_Cﬁumn
;

5433 }if–
	`°rcmp
(
z
,"-csv")==0 ){

5434 
d©a
.
mode
 = 
MODE_Csv
;

5435 
	`mem˝y
(
d©a
.
cﬁSï¨©‹
,",",2);

5436 }if–
	`°rcmp
(
z
,"-ascii")==0 ){

5437 
d©a
.
mode
 = 
MODE_Ascii
;

5438 
	`sqlôe3_¢¥ötf
((
d©a
.
cﬁSï¨©‹
), data.colSeparator,

5439 
SEP_Unô
);

5440 
	`sqlôe3_¢¥ötf
((
d©a
.
rowSï¨©‹
), data.rowSeparator,

5441 
SEP_Rec‹d
);

5442 }if–
	`°rcmp
(
z
,"-separator")==0 ){

5443 
	`sqlôe3_¢¥ötf
((
d©a
.
cﬁSï¨©‹
), data.colSeparator,

5444 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5445 }if–
	`°rcmp
(
z
,"-newline")==0 ){

5446 
	`sqlôe3_¢¥ötf
((
d©a
.
rowSï¨©‹
), data.rowSeparator,

5447 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5448 }if–
	`°rcmp
(
z
,"-nullvalue")==0 ){

5449 
	`sqlôe3_¢¥ötf
((
d©a
.
nuŒVÆue
), data.nullValue,

5450 "%s",
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
));

5451 }if–
	`°rcmp
(
z
,"-header")==0 ){

5452 
d©a
.
showHódî
 = 1;

5453 }if–
	`°rcmp
(
z
,"-noheader")==0 ){

5454 
d©a
.
showHódî
 = 0;

5455 }if–
	`°rcmp
(
z
,"-echo")==0 ){

5456 
d©a
.
echoOn
 = 1;

5457 }if–
	`°rcmp
(
z
,"-eqp")==0 ){

5458 
d©a
.
autoEQP
 = 1;

5459 }if–
	`°rcmp
(
z
,"-eqpfull")==0 ){

5460 
d©a
.
autoEQP
 = 2;

5461 }if–
	`°rcmp
(
z
,"-stats")==0 ){

5462 
d©a
.
°©sOn
 = 1;

5463 }if–
	`°rcmp
(
z
,"-scanstats")==0 ){

5464 
d©a
.
sˇn°©sOn
 = 1;

5465 }if–
	`°rcmp
(
z
,"-backslash")==0 ){

5471 
d©a
.
back¶ashOn
 = 1;

5472 }if–
	`°rcmp
(
z
,"-bail")==0 ){

5473 
baû_⁄_îr‹
 = 1;

5474 }if–
	`°rcmp
(
z
,"-version")==0 ){

5475 
	`¥ötf
("%†%s\n", 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
());

5477 }if–
	`°rcmp
(
z
,"-interactive")==0 ){

5478 
°dö_is_öãø˘ive
 = 1;

5479 }if–
	`°rcmp
(
z
,"-batch")==0 ){

5480 
°dö_is_öãø˘ive
 = 0;

5481 }if–
	`°rcmp
(
z
,"-heap")==0 ){

5482 
i
++;

5483 }if–
	`°rcmp
(
z
,"-scratch")==0 ){

5484 
i
+=2;

5485 }if–
	`°rcmp
(
z
,"-pagecache")==0 ){

5486 
i
+=2;

5487 }if–
	`°rcmp
(
z
,"-lookaside")==0 ){

5488 
i
+=2;

5489 }if–
	`°rcmp
(
z
,"-mmap")==0 ){

5490 
i
++;

5491 }if–
	`°rcmp
(
z
,"-vfs")==0 ){

5492 
i
++;

5493 #ifde‡
SQLITE_ENABLE_VFSTRACE


5494 }if–
	`°rcmp
(
z
,"-vfstrace")==0 ){

5495 
i
++;

5497 #ifde‡
SQLITE_ENABLE_MULTIPLEX


5498 }if–
	`°rcmp
(
z
,"-multiplex")==0 ){

5499 
i
++;

5501 }if–
	`°rcmp
(
z
,"-help")==0 ){

5502 
	`ußge
(1);

5503 }if–
	`°rcmp
(
z
,"-cmd")==0 ){

5508 if–
i
==
¨gc
-1 ) ;

5509 
z
 = 
	`cmdlöe_›ti⁄_vÆue
(
¨gc
,
¨gv
,++
i
);

5510 if–
z
[0]=='.' ){

5511 
rc
 = 
	`do_mëa_comm™d
(
z
, &
d©a
);

5512 if–
rc
 && 
baû_⁄_îr‹
 ) Ñc==2 ? 0 :Ñc;

5514 
	`›í_db
(&
d©a
, 0);

5515 
rc
 = 
	`shñl_exec
(
d©a
.
db
, 
z
, 
shñl_ˇŒback
, &d©a, &
zEºMsg
);

5516 if–
zEºMsg
!=0 ){

5517 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

5518 if–
baû_⁄_îr‹
 )  
rc
!=0 ?Ñc : 1;

5519 }if–
rc
!=0 ){

5520 
	`utf8_¥ötf
(
°dîr
,"Eº‹: u«bÀÅÿ¥o˚s†SQL \"%s\"\n", 
z
);

5521 if–
baû_⁄_îr‹
 )  
rc
;

5525 
	`utf8_¥ötf
(
°dîr
,"%s: Eº‹: unknow¿›ti⁄: %s\n", 
Argv0
, 
z
);

5526 
	`øw_¥ötf
(
°dîr
,"Use -help foráÜist of options.\n");

5529 
d©a
.
cMode
 = d©a.
mode
;

5532 if–!
ªadStdö
 ){

5537 
i
=0; i<
nCmd
; i++){

5538 if–
azCmd
[
i
][0]=='.' ){

5539 
rc
 = 
	`do_mëa_comm™d
(
azCmd
[
i
], &
d©a
);

5540 if–
rc
 ) Ñc==2 ? 0 :Ñc;

5542 
	`›í_db
(&
d©a
, 0);

5543 
rc
 = 
	`shñl_exec
(
d©a
.
db
, 
azCmd
[
i
], 
shñl_ˇŒback
, &d©a, &
zEºMsg
);

5544 if–
zEºMsg
!=0 ){

5545 
	`utf8_¥ötf
(
°dîr
,"Eº‹: %s\n", 
zEºMsg
);

5546  
rc
!=0 ?Ñc : 1;

5547 }if–
rc
!=0 ){

5548 
	`utf8_¥ötf
(
°dîr
,"Eº‹: u«bÀÅÿ¥o˚s†SQL: %s\n", 
azCmd
[
i
]);

5549  
rc
;

5553 
	`‰ì
(
azCmd
);

5557 if–
°dö_is_öãø˘ive
 ){

5558 *
zHome
;

5559 *
zHi°‹y
 = 0;

5560 
nHi°‹y
;

5561 
	`¥ötf
(

5564 
	`sqlôe3_libvîsi⁄
(), 
	`sqlôe3_sour˚id
()

5566 if–
w¨nInmem‹yDb
 ){

5567 
	`¥ötf
("ConnectedÅoá ");

5568 
	`¥ötBﬁd
("transient in-memory database");

5569 
	`¥ötf
(".\nUse \".open FILENAME\"ÅoÑeopen oná "

5572 
zHome
 = 
	`föd_home_dú
();

5573 if–
zHome
 ){

5574 
nHi°‹y
 = 
	`°æí30
(
zHome
) + 20;

5575 if–(
zHi°‹y
 = 
	`mÆloc
(
nHi°‹y
))!=0 ){

5576 
	`sqlôe3_¢¥ötf
(
nHi°‹y
, 
zHi°‹y
,"%s/.sqlôe_hi°‹y", 
zHome
);

5579 if–
zHi°‹y
 ){ 
	`shñl_ªad_hi°‹y
(zHistory); }

5580 
rc
 = 
	`¥o˚ss_öput
(&
d©a
, 0);

5581 if–
zHi°‹y
 ){

5582 
	`shñl_°iÊe_hi°‹y
(100);

5583 
	`shñl_wrôe_hi°‹y
(
zHi°‹y
);

5584 
	`‰ì
(
zHi°‹y
);

5587 
rc
 = 
	`¥o˚ss_öput
(&
d©a
, 
°dö
);

5590 
	`£t_èbÀ_«me
(&
d©a
, 0);

5591 if–
d©a
.
db
 ){

5592 
	`£ssi⁄_˛o£_Æl
(&
d©a
);

5593 
	`sqlôe3_˛o£
(
d©a
.
db
);

5595 
	`sqlôe3_‰ì
(
d©a
.
zFªeOnClo£
);

5596 #i‡!
SQLITE_SHELL_IS_UTF8


5597 
i
=0; i<
¨gc
; i++Ë
	`sqlôe3_‰ì
(
¨gv
[i]);

5598 
	`sqlôe3_‰ì
(
¨gv
);

5600  
rc
;

5601 
	}
}

	@sqlite3ext.h

18 #i‚de‡
SQLITE3EXT_H


19 
	#SQLITE3EXT_H


	)

20 
	~"sqlôe3.h
"

32 
	ssqlôe3_≠i_routöes
 {

33 * (*
	maggªg©e_c⁄ãxt
)(
	msqlôe3_c⁄ãxt
*,
	mnByãs
);

34 (*
	maggªg©e_cou¡
)(
	msqlôe3_c⁄ãxt
*);

35 (*
	mböd_blob
)(
	msqlôe3_°mt
*,,c⁄° *,
	mn
,(*)(*));

36 (*
	mböd_doubÀ
)(
	msqlôe3_°mt
*,,);

37 (*
	mböd_öt
)(
	msqlôe3_°mt
*,,);

38 (*
	mböd_öt64
)(
	msqlôe3_°mt
*,,
	msqlôe_öt64
);

39 (*
	mböd_nuŒ
)(
	msqlôe3_°mt
*,);

40 (*
	mböd_∑ømëî_cou¡
)(
	msqlôe3_°mt
*);

41 (*
	mböd_∑ømëî_ödex
)(
	msqlôe3_°mt
*,c⁄° *
	mzName
);

42 c⁄° * (*
	mböd_∑ømëî_«me
)(
	msqlôe3_°mt
*,);

43 (*
	mböd_ãxt
)(
	msqlôe3_°mt
*,,c⁄° *,
	mn
,(*)(*));

44 (*
	mböd_ãxt16
)(
	msqlôe3_°mt
*,,const *,,(*)(*));

45 (*
	mböd_vÆue
)(
	msqlôe3_°mt
*,,c⁄° 
	msqlôe3_vÆue
*);

46 (*
	mbusy_h™dÀr
)(
	msqlôe3
*,(*)(*,),*);

47 (*
	mbusy_timeout
)(
	msqlôe3
*,
	mms
);

48 (*
	mch™ges
)(
	msqlôe3
*);

49 (*
	m˛o£
)(
	msqlôe3
*);

50 (*
	mcﬁœti⁄_√eded
)(
	msqlôe3
*,*,(*)(*,sqlite3*,

51 
	meTextRï
,const *));

52 (*
	mcﬁœti⁄_√eded16
)(
	msqlôe3
*,*,(*)(*,sqlite3*,

53 
	meTextRï
,const *));

54 c⁄° * (*
	mcﬁumn_blob
)(
	msqlôe3_°mt
*,
	miCﬁ
);

55 (*
	mcﬁumn_byãs
)(
	msqlôe3_°mt
*,
	miCﬁ
);

56 (*
	mcﬁumn_byãs16
)(
	msqlôe3_°mt
*,
	miCﬁ
);

57 (*
	mcﬁumn_cou¡
)(
sqlôe3_°mt
*
	mpStmt
);

58 c⁄° * (*
	mcﬁumn_d©aba£_«me
)(
	msqlôe3_°mt
*,);

59 c⁄° * (*
	mcﬁumn_d©aba£_«me16
)(
	msqlôe3_°mt
*,);

60 c⁄° * (*
	mcﬁumn_de˛ty≥
)(
	msqlôe3_°mt
*,
	mi
);

61 c⁄° * (*
	mcﬁumn_de˛ty≥16
)(
	msqlôe3_°mt
*,);

62 (*
	mcﬁumn_doubÀ
)(
	msqlôe3_°mt
*,
	miCﬁ
);

63 (*
	mcﬁumn_öt
)(
	msqlôe3_°mt
*,
	miCﬁ
);

64 
sqlôe_öt64
 (*
cﬁumn_öt64
)(
	msqlôe3_°mt
*,
	miCﬁ
);

65 c⁄° * (*
	mcﬁumn_«me
)(
	msqlôe3_°mt
*,);

66 c⁄° * (*
	mcﬁumn_«me16
)(
	msqlôe3_°mt
*,);

67 c⁄° * (*
	mcﬁumn_‹igö_«me
)(
	msqlôe3_°mt
*,);

68 c⁄° * (*
	mcﬁumn_‹igö_«me16
)(
	msqlôe3_°mt
*,);

69 c⁄° * (*
	mcﬁumn_èbÀ_«me
)(
	msqlôe3_°mt
*,);

70 c⁄° * (*
	mcﬁumn_èbÀ_«me16
)(
	msqlôe3_°mt
*,);

71 c⁄° * (*
	mcﬁumn_ãxt
)(
	msqlôe3_°mt
*,
	miCﬁ
);

72 c⁄° * (*
	mcﬁumn_ãxt16
)(
	msqlôe3_°mt
*,
	miCﬁ
);

73 (*
	mcﬁumn_ty≥
)(
	msqlôe3_°mt
*,
	miCﬁ
);

74 
	msqlôe3_vÆue
* (*
	mcﬁumn_vÆue
)(
	msqlôe3_°mt
*,
	miCﬁ
);

75 * (*
	mcommô_hook
)(
	msqlôe3
*,(*)(*),*);

76 (*
	mcom∂ëe
)(c⁄° *
	msql
);

77 (*
	mcom∂ëe16
)(c⁄° *
	msql
);

78 (*
	m¸óã_cﬁœti⁄
)(
	msqlôe3
*,const *,,*,

80 (*
	m¸óã_cﬁœti⁄16
)(
	msqlôe3
*,const *,,*,

82 (*
	m¸óã_fun˘i⁄
)(
	msqlôe3
*,const *,,,*,

83 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

84 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

85 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*));

86 (*
	m¸óã_fun˘i⁄16
)(
	msqlôe3
*,const *,,,*,

87 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

88 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

89 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*));

90 (*
	m¸óã_moduÀ
)(
	msqlôe3
*,c⁄° *,c⁄° 
	msqlôe3_moduÀ
*,*);

91 (*
	md©a_cou¡
)(
sqlôe3_°mt
*
	mpStmt
);

92 
	msqlôe3
 * (*
	mdb_h™dÀ
)(
	msqlôe3_°mt
*);

93 (*
	mde˛¨e_vèb
)(
	msqlôe3
*,const *);

94 (*
	míabÀ_sh¨ed_ˇche
)();

95 (*
	mîrcode
)(
sqlôe3
*
	mdb
);

96 c⁄° * (*
	mîrmsg
)(
	msqlôe3
*);

97 c⁄° * (*
	mîrmsg16
)(
	msqlôe3
*);

98 (*
	mexec
)(
	msqlôe3
*,c⁄° *,
	msqlôe3_ˇŒback
,*,**);

99 (*
	mexpúed
)(
	msqlôe3_°mt
*);

100 (*
	mföÆize
)(
sqlôe3_°mt
*
	mpStmt
);

101 (*
	m‰ì
)(*);

102 (*
	m‰ì_èbÀ
)(**
	mªsu…
);

103 (*
	mgë_autocommô
)(
	msqlôe3
*);

104 * (*
	mgë_auxd©a
)(
	msqlôe3_c⁄ãxt
*,);

105 (*
	mgë_èbÀ
)(
	msqlôe3
*,const *,***,*,*,**);

106 (*
	mglobÆ_ªcovî
)();

107 (*
	möãºu±x
)(
	msqlôe3
*);

108 
sqlôe_öt64
 (*
œ°_ö£π_rowid
)(
	msqlôe3
*);

109 c⁄° * (*
	mlibvîsi⁄
)();

110 (*
	mlibvîsi⁄_numbî
)();

111 *(*
	mmÆloc
)();

112 * (*
	mm¥ötf
)(const *,...);

113 (*
	m›í
)(c⁄° *,
	msqlôe3
**);

114 (*
	m›í16
)(c⁄° *,
	msqlôe3
**);

115 (*
	m¥ï¨e
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

116 (*
	m¥ï¨e16
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

117 * (*
	m¥ofûe
)(
	msqlôe3
*,(*)(*,c⁄° *,
	msqlôe_uöt64
),*);

118 (*
	m¥ogªss_h™dÀr
)(
	msqlôe3
*,,(*)(*),*);

119 *(*
	mªÆloc
)(*,);

120 (*
	mª£t
)(
sqlôe3_°mt
*
	mpStmt
);

121 (*
	mªsu…_blob
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

122 (*
	mªsu…_doubÀ
)(
	msqlôe3_c⁄ãxt
*,);

123 (*
	mªsu…_îr‹
)(
	msqlôe3_c⁄ãxt
*,const *,);

124 (*
	mªsu…_îr‹16
)(
	msqlôe3_c⁄ãxt
*,const *,);

125 (*
	mªsu…_öt
)(
	msqlôe3_c⁄ãxt
*,);

126 (*
	mªsu…_öt64
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe_öt64
);

127 (*
	mªsu…_nuŒ
)(
	msqlôe3_c⁄ãxt
*);

128 (*
	mªsu…_ãxt
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

129 (*
	mªsu…_ãxt16
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

130 (*
	mªsu…_ãxt16be
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

131 (*
	mªsu…_ãxt16À
)(
	msqlôe3_c⁄ãxt
*,const *,,(*)(*));

132 (*
	mªsu…_vÆue
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe3_vÆue
*);

133 * (*
	mrﬁlback_hook
)(
	msqlôe3
*,(*)(*),*);

134 (*
	m£t_auth‹izî
)(
	msqlôe3
*,(*)(*,,const *,const *,

136 (*
	m£t_auxd©a
)(
	msqlôe3_c⁄ãxt
*,,*,(*)(*));

137 * (*
	m¢¥ötf
)(,*,const *,...);

138 (*
	m°ï
)(
	msqlôe3_°mt
*);

139 (*
	mèbÀ_cﬁumn_mëad©a
)(
	msqlôe3
*,const *,const *,const *,

141 (*
	mthªad_˛ónup
)();

142 (*
	mtŸÆ_ch™ges
)(
	msqlôe3
*);

143 * (*
	måa˚
)(
	msqlôe3
*,(*
	mxTø˚
)(*,const *),*);

144 (*
	må™s„r_bödögs
)(
	msqlôe3_°mt
*,sqlite3_stmt*);

145 * (*
	mupd©e_hook
)(
	msqlôe3
*,(*)(*,,const*,const*,

146 
	msqlôe_öt64
),*);

147 * (*
	mu£r_d©a
)(
	msqlôe3_c⁄ãxt
*);

148 c⁄° * (*
	mvÆue_blob
)(
	msqlôe3_vÆue
*);

149 (*
	mvÆue_byãs
)(
	msqlôe3_vÆue
*);

150 (*
	mvÆue_byãs16
)(
	msqlôe3_vÆue
*);

151 (*
	mvÆue_doubÀ
)(
	msqlôe3_vÆue
*);

152 (*
	mvÆue_öt
)(
	msqlôe3_vÆue
*);

153 
sqlôe_öt64
 (*
vÆue_öt64
)(
	msqlôe3_vÆue
*);

154 (*
	mvÆue_numîic_ty≥
)(
	msqlôe3_vÆue
*);

155 c⁄° * (*
	mvÆue_ãxt
)(
	msqlôe3_vÆue
*);

156 c⁄° * (*
	mvÆue_ãxt16
)(
	msqlôe3_vÆue
*);

157 c⁄° * (*
	mvÆue_ãxt16be
)(
	msqlôe3_vÆue
*);

158 c⁄° * (*
	mvÆue_ãxt16À
)(
	msqlôe3_vÆue
*);

159 (*
	mvÆue_ty≥
)(
	msqlôe3_vÆue
*);

160 *(*
	mvm¥ötf
)(c⁄° *,
	mva_li°
);

162 (*
	movîlﬂd_fun˘i⁄
)(
	msqlôe3
*, c⁄° *
	mzFuncName
, 
	mnArg
);

164 (*
	m¥ï¨e_v2
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

165 (*
	m¥ï¨e16_v2
)(
	msqlôe3
*,c⁄° *,,
	msqlôe3_°mt
**,const **);

166 (*
	m˛ór_bödögs
)(
	msqlôe3_°mt
*);

168 (*
	m¸óã_moduÀ_v2
)(
	msqlôe3
*,c⁄° *,c⁄° 
	msqlôe3_moduÀ
*,*,

169 (*
	mxDe°roy
)(*));

171 (*
	mböd_zîoblob
)(
	msqlôe3_°mt
*,,);

172 (*
	mblob_byãs
)(
	msqlôe3_blob
*);

173 (*
	mblob_˛o£
)(
	msqlôe3_blob
*);

174 (*
	mblob_›í
)(
	msqlôe3
*,c⁄° *,c⁄° *,c⁄° *,
	msqlôe3_öt64
,

175 ,
	msqlôe3_blob
**);

176 (*
	mblob_ªad
)(
	msqlôe3_blob
*,*,,);

177 (*
	mblob_wrôe
)(
	msqlôe3_blob
*,const *,,);

178 (*
	m¸óã_cﬁœti⁄_v2
)(
	msqlôe3
*,const *,,*,

181 (*
	mfûe_c⁄åﬁ
)(
	msqlôe3
*,const *,,*);

182 
sqlôe3_öt64
 (*
mem‹y_highw©î
)();

183 
sqlôe3_öt64
 (*
mem‹y_u£d
)();

184 
	msqlôe3_muãx
 *(*
	mmuãx_Æloc
)();

185 (*
	mmuãx_íãr
)(
	msqlôe3_muãx
*);

186 (*
	mmuãx_‰ì
)(
	msqlôe3_muãx
*);

187 (*
	mmuãx_Àave
)(
	msqlôe3_muãx
*);

188 (*
	mmuãx_åy
)(
	msqlôe3_muãx
*);

189 (*
	m›í_v2
)(c⁄° *,
	msqlôe3
**,,const *);

190 (*
	mªÀa£_mem‹y
)();

191 (*
	mªsu…_îr‹_nomem
)(
	msqlôe3_c⁄ãxt
*);

192 (*
	mªsu…_îr‹_toobig
)(
	msqlôe3_c⁄ãxt
*);

193 (*
	m¶ìp
)();

194 (*
	mso·_hóp_limô
)();

195 
	msqlôe3_vfs
 *(*
	mvfs_föd
)(const *);

196 (*
	mvfs_ªgi°î
)(
	msqlôe3_vfs
*,);

197 (*
	mvfs_uƒegi°î
)(
	msqlôe3_vfs
*);

198 (*
	mxthªadß„
)();

199 (*
	mªsu…_zîoblob
)(
	msqlôe3_c⁄ãxt
*,);

200 (*
	mªsu…_îr‹_code
)(
	msqlôe3_c⁄ãxt
*,);

201 (*
	mã°_c⁄åﬁ
)(, ...);

202 (*
	møndom√ss
)(,*);

203 
	msqlôe3
 *(*
	mc⁄ãxt_db_h™dÀ
)(
	msqlôe3_c⁄ãxt
*);

204 (*
	mexãnded_ªsu…_codes
)(
	msqlôe3
*,);

205 (*
	mlimô
)(
	msqlôe3
*,,);

206 
	msqlôe3_°mt
 *(*
	m√xt_°mt
)(
	msqlôe3
*,sqlite3_stmt*);

207 c⁄° *(*
	msql
)(
	msqlôe3_°mt
*);

208 (*
	m°©us
)(,*,*,);

209 (*
	mbackup_föish
)(
	msqlôe3_backup
*);

210 
	msqlôe3_backup
 *(*
	mbackup_öô
)(
	msqlôe3
*,const *,sqlite3*,const *);

211 (*
	mbackup_∑gecou¡
)(
	msqlôe3_backup
*);

212 (*
	mbackup_ªmaöög
)(
	msqlôe3_backup
*);

213 (*
	mbackup_°ï
)(
	msqlôe3_backup
*,);

214 c⁄° *(*
	mcompûe›ti⁄_gë
)();

215 (*
	mcompûe›ti⁄_u£d
)(const *);

216 (*
	m¸óã_fun˘i⁄_v2
)(
	msqlôe3
*,const *,,,*,

217 (*
	mxFunc
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

218 (*
	mxSãp
)(
	msqlôe3_c⁄ãxt
*,,
	msqlôe3_vÆue
**),

219 (*
	mxFöÆ
)(
	msqlôe3_c⁄ãxt
*),

220 (*
	mxDe°roy
)(*));

221 (*
	mdb_c⁄fig
)(
	msqlôe3
*,,...);

222 
	msqlôe3_muãx
 *(*
	mdb_muãx
)(
	msqlôe3
*);

223 (*
	mdb_°©us
)(
	msqlôe3
*,,*,*,);

224 (*
	mexãnded_îrcode
)(
	msqlôe3
*);

225 (*
	mlog
)(,const *,...);

226 
sqlôe3_öt64
 (*
so·_hóp_limô64
)(
	msqlôe3_öt64
);

227 c⁄° *(*
	msour˚id
)();

228 (*
	m°mt_°©us
)(
	msqlôe3_°mt
*,,);

229 (*
	m°∫icmp
)(const *,const *,);

230 (*
	mu∆ock_nŸify
)(
	msqlôe3
*,(*)(**,),*);

231 (*
	mwÆ_autocheckpoöt
)(
	msqlôe3
*,);

232 (*
	mwÆ_checkpoöt
)(
	msqlôe3
*,const *);

233 *(*
	mwÆ_hook
)(
	msqlôe3
*,(*)(*,sqlite3*,const *,),*);

234 (*
	mblob_ª›í
)(
	msqlôe3_blob
*,
	msqlôe3_öt64
);

235 (*
	mvèb_c⁄fig
)(
	msqlôe3
*,
	m›
,...);

236 (*
	mvèb_⁄_c⁄Êi˘
)(
	msqlôe3
*);

238 (*
	m˛o£_v2
)(
	msqlôe3
*);

239 c⁄° *(*
	mdb_fûíame
)(
	msqlôe3
*,const *);

240 (*
	mdb_ªad⁄ly
)(
	msqlôe3
*,const *);

241 (*
	mdb_ªÀa£_mem‹y
)(
	msqlôe3
*);

242 c⁄° *(*
	mîr°r
)();

243 (*
	m°mt_busy
)(
	msqlôe3_°mt
*);

244 (*
	m°mt_ªad⁄ly
)(
	msqlôe3_°mt
*);

245 (*
	m°ricmp
)(const *,const *);

246 (*
	muri_boﬁón
)(const *,const *,);

247 
sqlôe3_öt64
 (*
uri_öt64
)(c⁄° *,c⁄° *,
	msqlôe3_öt64
);

248 c⁄° *(*
	muri_∑ømëî
)(const *,const *);

249 *(*
	mv¢¥ötf
)(,*,c⁄° *,
	mva_li°
);

250 (*
	mwÆ_checkpoöt_v2
)(
	msqlôe3
*,const *,,*,*);

252 (*
	mauto_exãnsi⁄
)((*)());

253 (*
	mböd_blob64
)(
	msqlôe3_°mt
*,,c⁄° *,
	msqlôe3_uöt64
,

255 (*
	mböd_ãxt64
)(
	msqlôe3_°mt
*,,c⁄° *,
	msqlôe3_uöt64
,

257 (*
	mˇn˚l_auto_exãnsi⁄
)((*)());

258 (*
	mlﬂd_exãnsi⁄
)(
	msqlôe3
*,const *,const *,**);

259 *(*
	mmÆloc64
)(
	msqlôe3_uöt64
);

260 
sqlôe3_uöt64
 (*
msize
)(*);

261 *(*
	mªÆloc64
)(*,
	msqlôe3_uöt64
);

262 (*
	mª£t_auto_exãnsi⁄
)();

263 (*
	mªsu…_blob64
)(
	msqlôe3_c⁄ãxt
*,c⁄° *,
	msqlôe3_uöt64
,

265 (*
	mªsu…_ãxt64
)(
	msqlôe3_c⁄ãxt
*,c⁄° *,
	msqlôe3_uöt64
,

267 (*
	m°rglob
)(const *,const *);

269 
	msqlôe3_vÆue
 *(*
	mvÆue_dup
)(const sqlite3_value*);

270 (*
	mvÆue_‰ì
)(
	msqlôe3_vÆue
*);

271 (*
	mªsu…_zîoblob64
)(
	msqlôe3_c⁄ãxt
*,
	msqlôe3_uöt64
);

272 (*
	mböd_zîoblob64
)(
	msqlôe3_°mt
*, , 
	msqlôe3_uöt64
);

274 (*
	mvÆue_subty≥
)(
	msqlôe3_vÆue
*);

275 (*
	mªsu…_subty≥
)(
	msqlôe3_c⁄ãxt
*,);

277 (*
	m°©us64
)(,
	msqlôe3_öt64
*,sqlite3_int64*,);

278 (*
	m°æike
)(const *,const *,);

279 (*
	mdb_ˇcheÊush
)(
	msqlôe3
*);

281 (*
	msy°em_î∫o
)(
	msqlôe3
*);

283 (*
	måa˚_v2
)(
	msqlôe3
*,,(*)(,*,*,*),*);

284 *(*
	mex∑nded_sql
)(
	msqlôe3_°mt
*);

291 (*
	tsqlôe3_lﬂdext_íåy
)(

292 
	tsqlôe3
 *
	tdb
,

293 **
	tpzEºMsg
,

294 c⁄° 
	tsqlôe3_≠i_routöes
 *
	tpThunk


308 #i‡!
	`deföed
(
SQLITE_CORE
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

309 
	#sqlôe3_aggªg©e_c⁄ãxt
 
sqlôe3_≠i
->
aggªg©e_c⁄ãxt


	)

310 #i‚de‡
SQLITE_OMIT_DEPRECATED


311 
	#sqlôe3_aggªg©e_cou¡
 
sqlôe3_≠i
->
aggªg©e_cou¡


	)

313 
	#sqlôe3_böd_blob
 
sqlôe3_≠i
->
böd_blob


	)

314 
	#sqlôe3_böd_doubÀ
 
sqlôe3_≠i
->
böd_doubÀ


	)

315 
	#sqlôe3_böd_öt
 
sqlôe3_≠i
->
böd_öt


	)

316 
	#sqlôe3_böd_öt64
 
sqlôe3_≠i
->
böd_öt64


	)

317 
	#sqlôe3_böd_nuŒ
 
sqlôe3_≠i
->
böd_nuŒ


	)

318 
	#sqlôe3_böd_∑ømëî_cou¡
 
sqlôe3_≠i
->
böd_∑ømëî_cou¡


	)

319 
	#sqlôe3_böd_∑ømëî_ödex
 
sqlôe3_≠i
->
böd_∑ømëî_ödex


	)

320 
	#sqlôe3_böd_∑ømëî_«me
 
sqlôe3_≠i
->
böd_∑ømëî_«me


	)

321 
	#sqlôe3_böd_ãxt
 
sqlôe3_≠i
->
böd_ãxt


	)

322 
	#sqlôe3_böd_ãxt16
 
sqlôe3_≠i
->
böd_ãxt16


	)

323 
	#sqlôe3_böd_vÆue
 
sqlôe3_≠i
->
böd_vÆue


	)

324 
	#sqlôe3_busy_h™dÀr
 
sqlôe3_≠i
->
busy_h™dÀr


	)

325 
	#sqlôe3_busy_timeout
 
sqlôe3_≠i
->
busy_timeout


	)

326 
	#sqlôe3_ch™ges
 
sqlôe3_≠i
->
ch™ges


	)

327 
	#sqlôe3_˛o£
 
sqlôe3_≠i
->
˛o£


	)

328 
	#sqlôe3_cﬁœti⁄_√eded
 
sqlôe3_≠i
->
cﬁœti⁄_√eded


	)

329 
	#sqlôe3_cﬁœti⁄_√eded16
 
sqlôe3_≠i
->
cﬁœti⁄_√eded16


	)

330 
	#sqlôe3_cﬁumn_blob
 
sqlôe3_≠i
->
cﬁumn_blob


	)

331 
	#sqlôe3_cﬁumn_byãs
 
sqlôe3_≠i
->
cﬁumn_byãs


	)

332 
	#sqlôe3_cﬁumn_byãs16
 
sqlôe3_≠i
->
cﬁumn_byãs16


	)

333 
	#sqlôe3_cﬁumn_cou¡
 
sqlôe3_≠i
->
cﬁumn_cou¡


	)

334 
	#sqlôe3_cﬁumn_d©aba£_«me
 
sqlôe3_≠i
->
cﬁumn_d©aba£_«me


	)

335 
	#sqlôe3_cﬁumn_d©aba£_«me16
 
sqlôe3_≠i
->
cﬁumn_d©aba£_«me16


	)

336 
	#sqlôe3_cﬁumn_de˛ty≥
 
sqlôe3_≠i
->
cﬁumn_de˛ty≥


	)

337 
	#sqlôe3_cﬁumn_de˛ty≥16
 
sqlôe3_≠i
->
cﬁumn_de˛ty≥16


	)

338 
	#sqlôe3_cﬁumn_doubÀ
 
sqlôe3_≠i
->
cﬁumn_doubÀ


	)

339 
	#sqlôe3_cﬁumn_öt
 
sqlôe3_≠i
->
cﬁumn_öt


	)

340 
	#sqlôe3_cﬁumn_öt64
 
sqlôe3_≠i
->
cﬁumn_öt64


	)

341 
	#sqlôe3_cﬁumn_«me
 
sqlôe3_≠i
->
cﬁumn_«me


	)

342 
	#sqlôe3_cﬁumn_«me16
 
sqlôe3_≠i
->
cﬁumn_«me16


	)

343 
	#sqlôe3_cﬁumn_‹igö_«me
 
sqlôe3_≠i
->
cﬁumn_‹igö_«me


	)

344 
	#sqlôe3_cﬁumn_‹igö_«me16
 
sqlôe3_≠i
->
cﬁumn_‹igö_«me16


	)

345 
	#sqlôe3_cﬁumn_èbÀ_«me
 
sqlôe3_≠i
->
cﬁumn_èbÀ_«me


	)

346 
	#sqlôe3_cﬁumn_èbÀ_«me16
 
sqlôe3_≠i
->
cﬁumn_èbÀ_«me16


	)

347 
	#sqlôe3_cﬁumn_ãxt
 
sqlôe3_≠i
->
cﬁumn_ãxt


	)

348 
	#sqlôe3_cﬁumn_ãxt16
 
sqlôe3_≠i
->
cﬁumn_ãxt16


	)

349 
	#sqlôe3_cﬁumn_ty≥
 
sqlôe3_≠i
->
cﬁumn_ty≥


	)

350 
	#sqlôe3_cﬁumn_vÆue
 
sqlôe3_≠i
->
cﬁumn_vÆue


	)

351 
	#sqlôe3_commô_hook
 
sqlôe3_≠i
->
commô_hook


	)

352 
	#sqlôe3_com∂ëe
 
sqlôe3_≠i
->
com∂ëe


	)

353 
	#sqlôe3_com∂ëe16
 
sqlôe3_≠i
->
com∂ëe16


	)

354 
	#sqlôe3_¸óã_cﬁœti⁄
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄


	)

355 
	#sqlôe3_¸óã_cﬁœti⁄16
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄16


	)

356 
	#sqlôe3_¸óã_fun˘i⁄
 
sqlôe3_≠i
->
¸óã_fun˘i⁄


	)

357 
	#sqlôe3_¸óã_fun˘i⁄16
 
sqlôe3_≠i
->
¸óã_fun˘i⁄16


	)

358 
	#sqlôe3_¸óã_moduÀ
 
sqlôe3_≠i
->
¸óã_moduÀ


	)

359 
	#sqlôe3_¸óã_moduÀ_v2
 
sqlôe3_≠i
->
¸óã_moduÀ_v2


	)

360 
	#sqlôe3_d©a_cou¡
 
sqlôe3_≠i
->
d©a_cou¡


	)

361 
	#sqlôe3_db_h™dÀ
 
sqlôe3_≠i
->
db_h™dÀ


	)

362 
	#sqlôe3_de˛¨e_vèb
 
sqlôe3_≠i
->
de˛¨e_vèb


	)

363 
	#sqlôe3_íabÀ_sh¨ed_ˇche
 
sqlôe3_≠i
->
íabÀ_sh¨ed_ˇche


	)

364 
	#sqlôe3_îrcode
 
sqlôe3_≠i
->
îrcode


	)

365 
	#sqlôe3_îrmsg
 
sqlôe3_≠i
->
îrmsg


	)

366 
	#sqlôe3_îrmsg16
 
sqlôe3_≠i
->
îrmsg16


	)

367 
	#sqlôe3_exec
 
sqlôe3_≠i
->
exec


	)

368 #i‚de‡
SQLITE_OMIT_DEPRECATED


369 
	#sqlôe3_expúed
 
sqlôe3_≠i
->
expúed


	)

371 
	#sqlôe3_föÆize
 
sqlôe3_≠i
->
föÆize


	)

372 
	#sqlôe3_‰ì
 
sqlôe3_≠i
->
‰ì


	)

373 
	#sqlôe3_‰ì_èbÀ
 
sqlôe3_≠i
->
‰ì_èbÀ


	)

374 
	#sqlôe3_gë_autocommô
 
sqlôe3_≠i
->
gë_autocommô


	)

375 
	#sqlôe3_gë_auxd©a
 
sqlôe3_≠i
->
gë_auxd©a


	)

376 
	#sqlôe3_gë_èbÀ
 
sqlôe3_≠i
->
gë_èbÀ


	)

377 #i‚de‡
SQLITE_OMIT_DEPRECATED


378 
	#sqlôe3_globÆ_ªcovî
 
sqlôe3_≠i
->
globÆ_ªcovî


	)

380 
	#sqlôe3_öãºu±
 
sqlôe3_≠i
->
öãºu±x


	)

381 
	#sqlôe3_œ°_ö£π_rowid
 
sqlôe3_≠i
->
œ°_ö£π_rowid


	)

382 
	#sqlôe3_libvîsi⁄
 
sqlôe3_≠i
->
libvîsi⁄


	)

383 
	#sqlôe3_libvîsi⁄_numbî
 
sqlôe3_≠i
->
libvîsi⁄_numbî


	)

384 
	#sqlôe3_mÆloc
 
sqlôe3_≠i
->
mÆloc


	)

385 
	#sqlôe3_m¥ötf
 
sqlôe3_≠i
->
m¥ötf


	)

386 
	#sqlôe3_›í
 
sqlôe3_≠i
->
›í


	)

387 
	#sqlôe3_›í16
 
sqlôe3_≠i
->
›í16


	)

388 
	#sqlôe3_¥ï¨e
 
sqlôe3_≠i
->
¥ï¨e


	)

389 
	#sqlôe3_¥ï¨e16
 
sqlôe3_≠i
->
¥ï¨e16


	)

390 
	#sqlôe3_¥ï¨e_v2
 
sqlôe3_≠i
->
¥ï¨e_v2


	)

391 
	#sqlôe3_¥ï¨e16_v2
 
sqlôe3_≠i
->
¥ï¨e16_v2


	)

392 
	#sqlôe3_¥ofûe
 
sqlôe3_≠i
->
¥ofûe


	)

393 
	#sqlôe3_¥ogªss_h™dÀr
 
sqlôe3_≠i
->
¥ogªss_h™dÀr


	)

394 
	#sqlôe3_ªÆloc
 
sqlôe3_≠i
->
ªÆloc


	)

395 
	#sqlôe3_ª£t
 
sqlôe3_≠i
->
ª£t


	)

396 
	#sqlôe3_ªsu…_blob
 
sqlôe3_≠i
->
ªsu…_blob


	)

397 
	#sqlôe3_ªsu…_doubÀ
 
sqlôe3_≠i
->
ªsu…_doubÀ


	)

398 
	#sqlôe3_ªsu…_îr‹
 
sqlôe3_≠i
->
ªsu…_îr‹


	)

399 
	#sqlôe3_ªsu…_îr‹16
 
sqlôe3_≠i
->
ªsu…_îr‹16


	)

400 
	#sqlôe3_ªsu…_öt
 
sqlôe3_≠i
->
ªsu…_öt


	)

401 
	#sqlôe3_ªsu…_öt64
 
sqlôe3_≠i
->
ªsu…_öt64


	)

402 
	#sqlôe3_ªsu…_nuŒ
 
sqlôe3_≠i
->
ªsu…_nuŒ


	)

403 
	#sqlôe3_ªsu…_ãxt
 
sqlôe3_≠i
->
ªsu…_ãxt


	)

404 
	#sqlôe3_ªsu…_ãxt16
 
sqlôe3_≠i
->
ªsu…_ãxt16


	)

405 
	#sqlôe3_ªsu…_ãxt16be
 
sqlôe3_≠i
->
ªsu…_ãxt16be


	)

406 
	#sqlôe3_ªsu…_ãxt16À
 
sqlôe3_≠i
->
ªsu…_ãxt16À


	)

407 
	#sqlôe3_ªsu…_vÆue
 
sqlôe3_≠i
->
ªsu…_vÆue


	)

408 
	#sqlôe3_rﬁlback_hook
 
sqlôe3_≠i
->
rﬁlback_hook


	)

409 
	#sqlôe3_£t_auth‹izî
 
sqlôe3_≠i
->
£t_auth‹izî


	)

410 
	#sqlôe3_£t_auxd©a
 
sqlôe3_≠i
->
£t_auxd©a


	)

411 
	#sqlôe3_¢¥ötf
 
sqlôe3_≠i
->
¢¥ötf


	)

412 
	#sqlôe3_°ï
 
sqlôe3_≠i
->
°ï


	)

413 
	#sqlôe3_èbÀ_cﬁumn_mëad©a
 
sqlôe3_≠i
->
èbÀ_cﬁumn_mëad©a


	)

414 
	#sqlôe3_thªad_˛ónup
 
sqlôe3_≠i
->
thªad_˛ónup


	)

415 
	#sqlôe3_tŸÆ_ch™ges
 
sqlôe3_≠i
->
tŸÆ_ch™ges


	)

416 
	#sqlôe3_åa˚
 
sqlôe3_≠i
->
åa˚


	)

417 #i‚de‡
SQLITE_OMIT_DEPRECATED


418 
	#sqlôe3_å™s„r_bödögs
 
sqlôe3_≠i
->
å™s„r_bödögs


	)

420 
	#sqlôe3_upd©e_hook
 
sqlôe3_≠i
->
upd©e_hook


	)

421 
	#sqlôe3_u£r_d©a
 
sqlôe3_≠i
->
u£r_d©a


	)

422 
	#sqlôe3_vÆue_blob
 
sqlôe3_≠i
->
vÆue_blob


	)

423 
	#sqlôe3_vÆue_byãs
 
sqlôe3_≠i
->
vÆue_byãs


	)

424 
	#sqlôe3_vÆue_byãs16
 
sqlôe3_≠i
->
vÆue_byãs16


	)

425 
	#sqlôe3_vÆue_doubÀ
 
sqlôe3_≠i
->
vÆue_doubÀ


	)

426 
	#sqlôe3_vÆue_öt
 
sqlôe3_≠i
->
vÆue_öt


	)

427 
	#sqlôe3_vÆue_öt64
 
sqlôe3_≠i
->
vÆue_öt64


	)

428 
	#sqlôe3_vÆue_numîic_ty≥
 
sqlôe3_≠i
->
vÆue_numîic_ty≥


	)

429 
	#sqlôe3_vÆue_ãxt
 
sqlôe3_≠i
->
vÆue_ãxt


	)

430 
	#sqlôe3_vÆue_ãxt16
 
sqlôe3_≠i
->
vÆue_ãxt16


	)

431 
	#sqlôe3_vÆue_ãxt16be
 
sqlôe3_≠i
->
vÆue_ãxt16be


	)

432 
	#sqlôe3_vÆue_ãxt16À
 
sqlôe3_≠i
->
vÆue_ãxt16À


	)

433 
	#sqlôe3_vÆue_ty≥
 
sqlôe3_≠i
->
vÆue_ty≥


	)

434 
	#sqlôe3_vm¥ötf
 
sqlôe3_≠i
->
vm¥ötf


	)

435 
	#sqlôe3_v¢¥ötf
 
sqlôe3_≠i
->
v¢¥ötf


	)

436 
	#sqlôe3_ovîlﬂd_fun˘i⁄
 
sqlôe3_≠i
->
ovîlﬂd_fun˘i⁄


	)

437 
	#sqlôe3_¥ï¨e_v2
 
sqlôe3_≠i
->
¥ï¨e_v2


	)

438 
	#sqlôe3_¥ï¨e16_v2
 
sqlôe3_≠i
->
¥ï¨e16_v2


	)

439 
	#sqlôe3_˛ór_bödögs
 
sqlôe3_≠i
->
˛ór_bödögs


	)

440 
	#sqlôe3_böd_zîoblob
 
sqlôe3_≠i
->
böd_zîoblob


	)

441 
	#sqlôe3_blob_byãs
 
sqlôe3_≠i
->
blob_byãs


	)

442 
	#sqlôe3_blob_˛o£
 
sqlôe3_≠i
->
blob_˛o£


	)

443 
	#sqlôe3_blob_›í
 
sqlôe3_≠i
->
blob_›í


	)

444 
	#sqlôe3_blob_ªad
 
sqlôe3_≠i
->
blob_ªad


	)

445 
	#sqlôe3_blob_wrôe
 
sqlôe3_≠i
->
blob_wrôe


	)

446 
	#sqlôe3_¸óã_cﬁœti⁄_v2
 
sqlôe3_≠i
->
¸óã_cﬁœti⁄_v2


	)

447 
	#sqlôe3_fûe_c⁄åﬁ
 
sqlôe3_≠i
->
fûe_c⁄åﬁ


	)

448 
	#sqlôe3_mem‹y_highw©î
 
sqlôe3_≠i
->
mem‹y_highw©î


	)

449 
	#sqlôe3_mem‹y_u£d
 
sqlôe3_≠i
->
mem‹y_u£d


	)

450 
	#sqlôe3_muãx_Æloc
 
sqlôe3_≠i
->
muãx_Æloc


	)

451 
	#sqlôe3_muãx_íãr
 
sqlôe3_≠i
->
muãx_íãr


	)

452 
	#sqlôe3_muãx_‰ì
 
sqlôe3_≠i
->
muãx_‰ì


	)

453 
	#sqlôe3_muãx_Àave
 
sqlôe3_≠i
->
muãx_Àave


	)

454 
	#sqlôe3_muãx_åy
 
sqlôe3_≠i
->
muãx_åy


	)

455 
	#sqlôe3_›í_v2
 
sqlôe3_≠i
->
›í_v2


	)

456 
	#sqlôe3_ªÀa£_mem‹y
 
sqlôe3_≠i
->
ªÀa£_mem‹y


	)

457 
	#sqlôe3_ªsu…_îr‹_nomem
 
sqlôe3_≠i
->
ªsu…_îr‹_nomem


	)

458 
	#sqlôe3_ªsu…_îr‹_toobig
 
sqlôe3_≠i
->
ªsu…_îr‹_toobig


	)

459 
	#sqlôe3_¶ìp
 
sqlôe3_≠i
->
¶ìp


	)

460 
	#sqlôe3_so·_hóp_limô
 
sqlôe3_≠i
->
so·_hóp_limô


	)

461 
	#sqlôe3_vfs_föd
 
sqlôe3_≠i
->
vfs_föd


	)

462 
	#sqlôe3_vfs_ªgi°î
 
sqlôe3_≠i
->
vfs_ªgi°î


	)

463 
	#sqlôe3_vfs_uƒegi°î
 
sqlôe3_≠i
->
vfs_uƒegi°î


	)

464 
	#sqlôe3_thªadß„
 
sqlôe3_≠i
->
xthªadß„


	)

465 
	#sqlôe3_ªsu…_zîoblob
 
sqlôe3_≠i
->
ªsu…_zîoblob


	)

466 
	#sqlôe3_ªsu…_îr‹_code
 
sqlôe3_≠i
->
ªsu…_îr‹_code


	)

467 
	#sqlôe3_ã°_c⁄åﬁ
 
sqlôe3_≠i
->
ã°_c⁄åﬁ


	)

468 
	#sqlôe3_øndom√ss
 
sqlôe3_≠i
->
øndom√ss


	)

469 
	#sqlôe3_c⁄ãxt_db_h™dÀ
 
sqlôe3_≠i
->
c⁄ãxt_db_h™dÀ


	)

470 
	#sqlôe3_exãnded_ªsu…_codes
 
sqlôe3_≠i
->
exãnded_ªsu…_codes


	)

471 
	#sqlôe3_limô
 
sqlôe3_≠i
->
limô


	)

472 
	#sqlôe3_√xt_°mt
 
sqlôe3_≠i
->
√xt_°mt


	)

473 
	#sqlôe3_sql
 
sqlôe3_≠i
->
sql


	)

474 
	#sqlôe3_°©us
 
sqlôe3_≠i
->
°©us


	)

475 
	#sqlôe3_backup_föish
 
sqlôe3_≠i
->
backup_föish


	)

476 
	#sqlôe3_backup_öô
 
sqlôe3_≠i
->
backup_öô


	)

477 
	#sqlôe3_backup_∑gecou¡
 
sqlôe3_≠i
->
backup_∑gecou¡


	)

478 
	#sqlôe3_backup_ªmaöög
 
sqlôe3_≠i
->
backup_ªmaöög


	)

479 
	#sqlôe3_backup_°ï
 
sqlôe3_≠i
->
backup_°ï


	)

480 
	#sqlôe3_compûe›ti⁄_gë
 
sqlôe3_≠i
->
compûe›ti⁄_gë


	)

481 
	#sqlôe3_compûe›ti⁄_u£d
 
sqlôe3_≠i
->
compûe›ti⁄_u£d


	)

482 
	#sqlôe3_¸óã_fun˘i⁄_v2
 
sqlôe3_≠i
->
¸óã_fun˘i⁄_v2


	)

483 
	#sqlôe3_db_c⁄fig
 
sqlôe3_≠i
->
db_c⁄fig


	)

484 
	#sqlôe3_db_muãx
 
sqlôe3_≠i
->
db_muãx


	)

485 
	#sqlôe3_db_°©us
 
sqlôe3_≠i
->
db_°©us


	)

486 
	#sqlôe3_exãnded_îrcode
 
sqlôe3_≠i
->
exãnded_îrcode


	)

487 
	#sqlôe3_log
 
sqlôe3_≠i
->
log


	)

488 
	#sqlôe3_so·_hóp_limô64
 
sqlôe3_≠i
->
so·_hóp_limô64


	)

489 
	#sqlôe3_sour˚id
 
sqlôe3_≠i
->
sour˚id


	)

490 
	#sqlôe3_°mt_°©us
 
sqlôe3_≠i
->
°mt_°©us


	)

491 
	#sqlôe3_°∫icmp
 
sqlôe3_≠i
->
°∫icmp


	)

492 
	#sqlôe3_u∆ock_nŸify
 
sqlôe3_≠i
->
u∆ock_nŸify


	)

493 
	#sqlôe3_wÆ_autocheckpoöt
 
sqlôe3_≠i
->
wÆ_autocheckpoöt


	)

494 
	#sqlôe3_wÆ_checkpoöt
 
sqlôe3_≠i
->
wÆ_checkpoöt


	)

495 
	#sqlôe3_wÆ_hook
 
sqlôe3_≠i
->
wÆ_hook


	)

496 
	#sqlôe3_blob_ª›í
 
sqlôe3_≠i
->
blob_ª›í


	)

497 
	#sqlôe3_vèb_c⁄fig
 
sqlôe3_≠i
->
vèb_c⁄fig


	)

498 
	#sqlôe3_vèb_⁄_c⁄Êi˘
 
sqlôe3_≠i
->
vèb_⁄_c⁄Êi˘


	)

500 
	#sqlôe3_˛o£_v2
 
sqlôe3_≠i
->
˛o£_v2


	)

501 
	#sqlôe3_db_fûíame
 
sqlôe3_≠i
->
db_fûíame


	)

502 
	#sqlôe3_db_ªad⁄ly
 
sqlôe3_≠i
->
db_ªad⁄ly


	)

503 
	#sqlôe3_db_ªÀa£_mem‹y
 
sqlôe3_≠i
->
db_ªÀa£_mem‹y


	)

504 
	#sqlôe3_îr°r
 
sqlôe3_≠i
->
îr°r


	)

505 
	#sqlôe3_°mt_busy
 
sqlôe3_≠i
->
°mt_busy


	)

506 
	#sqlôe3_°mt_ªad⁄ly
 
sqlôe3_≠i
->
°mt_ªad⁄ly


	)

507 
	#sqlôe3_°ricmp
 
sqlôe3_≠i
->
°ricmp


	)

508 
	#sqlôe3_uri_boﬁón
 
sqlôe3_≠i
->
uri_boﬁón


	)

509 
	#sqlôe3_uri_öt64
 
sqlôe3_≠i
->
uri_öt64


	)

510 
	#sqlôe3_uri_∑ømëî
 
sqlôe3_≠i
->
uri_∑ømëî


	)

511 
	#sqlôe3_uri_v¢¥ötf
 
sqlôe3_≠i
->
v¢¥ötf


	)

512 
	#sqlôe3_wÆ_checkpoöt_v2
 
sqlôe3_≠i
->
wÆ_checkpoöt_v2


	)

514 
	#sqlôe3_auto_exãnsi⁄
 
sqlôe3_≠i
->
auto_exãnsi⁄


	)

515 
	#sqlôe3_böd_blob64
 
sqlôe3_≠i
->
böd_blob64


	)

516 
	#sqlôe3_böd_ãxt64
 
sqlôe3_≠i
->
böd_ãxt64


	)

517 
	#sqlôe3_ˇn˚l_auto_exãnsi⁄
 
sqlôe3_≠i
->
ˇn˚l_auto_exãnsi⁄


	)

518 
	#sqlôe3_lﬂd_exãnsi⁄
 
sqlôe3_≠i
->
lﬂd_exãnsi⁄


	)

519 
	#sqlôe3_mÆloc64
 
sqlôe3_≠i
->
mÆloc64


	)

520 
	#sqlôe3_msize
 
sqlôe3_≠i
->
msize


	)

521 
	#sqlôe3_ªÆloc64
 
sqlôe3_≠i
->
ªÆloc64


	)

522 
	#sqlôe3_ª£t_auto_exãnsi⁄
 
sqlôe3_≠i
->
ª£t_auto_exãnsi⁄


	)

523 
	#sqlôe3_ªsu…_blob64
 
sqlôe3_≠i
->
ªsu…_blob64


	)

524 
	#sqlôe3_ªsu…_ãxt64
 
sqlôe3_≠i
->
ªsu…_ãxt64


	)

525 
	#sqlôe3_°rglob
 
sqlôe3_≠i
->
°rglob


	)

527 
	#sqlôe3_vÆue_dup
 
sqlôe3_≠i
->
vÆue_dup


	)

528 
	#sqlôe3_vÆue_‰ì
 
sqlôe3_≠i
->
vÆue_‰ì


	)

529 
	#sqlôe3_ªsu…_zîoblob64
 
sqlôe3_≠i
->
ªsu…_zîoblob64


	)

530 
	#sqlôe3_böd_zîoblob64
 
sqlôe3_≠i
->
böd_zîoblob64


	)

532 
	#sqlôe3_vÆue_subty≥
 
sqlôe3_≠i
->
vÆue_subty≥


	)

533 
	#sqlôe3_ªsu…_subty≥
 
sqlôe3_≠i
->
ªsu…_subty≥


	)

535 
	#sqlôe3_°©us64
 
sqlôe3_≠i
->
°©us64


	)

536 
	#sqlôe3_°æike
 
sqlôe3_≠i
->
°æike


	)

537 
	#sqlôe3_db_ˇcheÊush
 
sqlôe3_≠i
->
db_ˇcheÊush


	)

539 
	#sqlôe3_sy°em_î∫o
 
sqlôe3_≠i
->
sy°em_î∫o


	)

541 
	#sqlôe3_åa˚_v2
 
sqlôe3_≠i
->
åa˚_v2


	)

542 
	#sqlôe3_ex∑nded_sql
 
sqlôe3_≠i
->
ex∑nded_sql


	)

545 #i‡!
	`deföed
(
SQLITE_CORE
Ë&& !deföed(
SQLITE_OMIT_LOAD_EXTENSION
)

548 
	#SQLITE_EXTENSION_INIT1
 c⁄° 
sqlôe3_≠i_routöes
 *
sqlôe3_≠i
=0;

	)

549 
	#SQLITE_EXTENSION_INIT2
(
v
Ë
sqlôe3_≠i
=v;

	)

550 
	#SQLITE_EXTENSION_INIT3
 \

551 c⁄° 
sqlôe3_≠i_routöes
 *
sqlôe3_≠i
;

	)

555 
	#SQLITE_EXTENSION_INIT1


	)

556 
	#SQLITE_EXTENSION_INIT2
(
v
Ë()v;

	)

557 
	#SQLITE_EXTENSION_INIT3


	)

	@sqliteInt.h

15 #i‚de‡
SQLITEINT_H


16 
	#SQLITEINT_H


	)

49 #i‚de‡
SQLITE_TCLAPI


50 
	#SQLITE_TCLAPI


	)

57 #i‡
deföed
(
_MSC_VER
) && _MSC_VER>=1400

58 
	#_CRT_RAND_S


	)

67 
	~"msvc.h
"

72 
	~"vxw‹ks.h
"

98 #i‚de‡
SQLITE_DISABLE_LFS


99 
	#_LARGE_FILE
 1

	)

100 #i‚de‡
_FILE_OFFSET_BITS


101 
	#_FILE_OFFSET_BITS
 64

	)

103 
	#_LARGEFILE_SOURCE
 1

	)

107 #ifde‡
__GNUC__


108 
	#GCC_VERSION
 (
__GNUC__
*1000000+
__GNUC_MINOR__
*1000+
__GNUC_PATCHLEVEL__
)

	)

110 
	#GCC_VERSION
 0

	)

114 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
_GNU_SOURCE
)

115 
	#_GNU_SOURCE


	)

118 #i‡
deföed
(
__O≥nBSD__
Ë&& !deföed(
_BSD_SOURCE
)

119 
	#_BSD_SOURCE


	)

136 #i‡
deföed
(
_HAVE_MINGW_H
)

137 
	~"mögw.h
"

138 #ñi‡
deföed
(
_HAVE__MINGW_H
)

139 
	~"_mögw.h
"

147 #i‡!
deföed
(
_USE_32BIT_TIME_T
Ë&& !deföed(
_USE_64BIT_TIME_T
) && \

148 
deföed
(
_WIN32
Ë&& !deföed(
_WIN64
) && \

149 
deföed
(
__MINGW_MAJOR_VERSION
Ë&& 
	g__MINGW_MAJOR_VERSION
 >= 4 && \

150 
	$deföed
(
__MSVCRT__
)

151 
	#_USE_32BIT_TIME_T


	)

158 
	~"sqlôe3.h
"

164 #ifde‡
_HAVE_SQLITE_CONFIG_H


165 
	~"c⁄fig.h
"

168 
	~"sqlôeLimô.h
"

171 #i‡
	`deföed
(
__BORLANDC__
)

172 #¥agm®
w¨n
 -
rch


173 #¥agm®
w¨n
 -
ccc


174 #¥agm®
w¨n
 -
aus


175 #¥agm®
w¨n
 -
csu


176 #¥agm®
w¨n
 -
•a


182 #ifde‡
HAVE_STDINT_H


183 
	~<°döt.h
>

185 #ifde‡
HAVE_INTTYPES_H


186 
	~<öây≥s.h
>

205 #i‡
	`deföed
(
__PTRDIFF_TYPE__
)

206 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(
__PTRDIFF_TYPE__
)(X))

	)

207 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(
__PTRDIFF_TYPE__
)(X))

	)

208 #ñi‡!
	`deföed
(
__GNUC__
)

209 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)&((*)0)[X])

	)

210 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(((*)X)-(*)0))

	)

211 #ñi‡
	`deföed
(
HAVE_STDINT_H
)

212 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(
öçå_t
)(X))

	)

213 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(
öçå_t
)(X))

	)

215 
	#SQLITE_INT_TO_PTR
(
X
Ë((*)(X))

	)

216 
	#SQLITE_PTR_TO_INT
(
X
Ë(()(X))

	)

223 #i‡
	`deföed
(
__GNUC__
)

224 
	#SQLITE_NOINLINE
 
	`__©åibuã__
((
noölöe
))

	)

225 #ñi‡
	`deföed
(
_MSC_VER
) && _MSC_VER>=1310

226 
	#SQLITE_NOINLINE
 
	`__de˛•ec
(
noölöe
)

	)

228 
	#SQLITE_NOINLINE


	)

236 #i‡!
	`deföed
(
SQLITE_DISABLE_INTRINSIC
)

237 #i‡
	`deföed
(
_MSC_VER
) && _MSC_VER>=1400

238 #i‡!
	`deföed
(
_WIN32_WCE
)

239 
	~<öåö.h
>

240 #¥agm®
	`öåösic
(
_byãsw≠_ush‹t
)

241 #¥agm®
	`öåösic
(
_byãsw≠_ul⁄g
)

242 #¥agm®
	`öåösic
(
_RódWrôeB¨rõr
)

244 
	~<cmnöåö.h
>

260 #i‡!
	`deföed
(
SQLITE_THREADSAFE
)

261 #i‡
	`deföed
(
THREADSAFE
)

262 
	#SQLITE_THREADSAFE
 
THREADSAFE


	)

264 
	#SQLITE_THREADSAFE
 1

	)

272 #i‚de‡
SQLITE_POWERSAFE_OVERWRITE


273 
	#SQLITE_POWERSAFE_OVERWRITE
 1

	)

281 #i‡!
	`deföed
(
SQLITE_DEFAULT_MEMSTATUS
)

282 
	#SQLITE_DEFAULT_MEMSTATUS
 1

	)

302 #i‡
	`deföed
(
SQLITE_SYSTEM_MALLOC
) \

303 + 
	`deföed
(
SQLITE_WIN32_MALLOC
) \

304 + 
	`deföed
(
SQLITE_ZERO_MALLOC
) \

305 + 
	`deföed
(
SQLITE_MEMDEBUG
)>1

311 #i‡
	`deföed
(
SQLITE_SYSTEM_MALLOC
) \

312 + 
	`deföed
(
SQLITE_WIN32_MALLOC
) \

313 + 
	`deföed
(
SQLITE_ZERO_MALLOC
) \

314 + 
	`deföed
(
SQLITE_MEMDEBUG
)==0

315 
	#SQLITE_SYSTEM_MALLOC
 1

	)

322 #i‡!
	`deföed
(
SQLITE_MALLOC_SOFT_LIMIT
)

323 
	#SQLITE_MALLOC_SOFT_LIMIT
 1024

	)

332 #i‡!
	`deföed
(
_XOPEN_SOURCE
Ë&& !deföed(
__DARWIN__
Ë&& !deföed(
__APPLE__
)

333 
	#_XOPEN_SOURCE
 600

	)

347 #i‡!
	`deföed
(
NDEBUG
Ë&& !deföed(
SQLITE_DEBUG
)

348 
	#NDEBUG
 1

	)

350 #i‡
	`deföed
(
NDEBUG
Ë&& deföed(
SQLITE_DEBUG
)

351 #unde‡
NDEBUG


357 #i‡!
	`deföed
(
SQLITE_ENABLE_EXPLAIN_COMMENTS
Ë&& deföed(
SQLITE_DEBUG
)

358 
	#SQLITE_ENABLE_EXPLAIN_COMMENTS
 1

	)

375 #ifde‡
SQLITE_COVERAGE_TEST


376 
	`sqlôe3Covîage
();

377 
	#ã°ˇ£
(
X
Ëif–X ){ 
	`sqlôe3Covîage
(
__LINE__
); 
	}

	)
}

379 
	#ã°ˇ£
(
X
)

	)

387 #i‡!
deföed
(
NDEBUG
Ë|| deföed(
SQLITE_COVERAGE_TEST
)

388 
	#TESTONLY
(
X
Ë
	)
X

390 
	#TESTONLY
(
X
)

	)

401 #i‚de‡
NDEBUG


402 
	#VVA_ONLY
(
X
Ë
	)
X

404 
	#VVA_ONLY
(
X
)

	)

422 #i‡
deföed
(
SQLITE_COVERAGE_TEST
Ë|| deföed(
SQLITE_MUTATION_TEST
)

423 
	#ALWAYS
(
X
Ë(1)

	)

424 
	#NEVER
(
X
Ë(0)

	)

425 #ñi‡!
deföed
(
NDEBUG
)

426 
	#ALWAYS
(
X
Ë((X)?1:(
	`as£π
(0),0))

	)

427 
	#NEVER
(
X
Ë((X)?(
	`as£π
(0),1):0)

	)

429 
	#ALWAYS
(
X
Ë(X)

	)

430 
	#NEVER
(
X
Ë(X)

	)

440 #i‡
deföed
(
SQLITE_TEST_REALLOC_STRESS
)

441 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë(X)

	)

442 #ñi‡!
deföed
(
NDEBUG
)

443 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë((X)?(
	`as£π
(0),1):0)

	)

445 
	#ONLY_IF_REALLOC_STRESS
(
X
Ë(0)

	)

451 #i‡
deföed
(
SQLITE_FORCE_OS_TRACE
Ë|| deföed(
SQLITE_TEST
) || \

452 (
deföed
(
SQLITE_DEBUG
Ë&& 
	gSQLITE_OS_WIN
)

453 
sqlôe3OSTø˚
;

454 
	#OSTRACE
(
X
Ëif–
sqlôe3OSTø˚
 ) 
sqlôe3DebugPrötf
 
	)
X

455 
	#SQLITE_HAVE_OS_TRACE


	)

457 
	#OSTRACE
(
X
)

	)

458 #unde‡
SQLITE_HAVE_OS_TRACE


467 #i‡
deföed
(
SQLITE_HAVE_OS_TRACE
Ë|| deföed(
SQLITE_TEST
) || \

468 (
deföed
(
SQLITE_DEBUG
Ë&& 
	gSQLITE_OS_WIN
)

469 
	#SQLITE_NEED_ERR_NAME


	)

471 #unde‡
SQLITE_NEED_ERR_NAME


477 #ifde‡
SQLITE_OMIT_EXPLAIN


478 #unde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


486 
	#IS_BIG_INT
(
X
Ë(((X)&~(
i64
)0xffffffff)!=0)

	)

495 
	#likñy
(
X
Ë(X)

	)

496 
	#u∆ikñy
(
X
Ë(X)

	)

498 
	~"hash.h
"

499 
	~"∑r£.h
"

500 
	~<°dio.h
>

501 
	~<°dlib.h
>

502 
	~<°rög.h
>

503 
	~<as£π.h
>

504 
	~<°ddef.h
>

510 #ifde‡
SQLITE_OMIT_FLOATING_POINT


511 
sqlôe_öt64


	)

512 
sqlôe_öt64


	)

513 
	#LONGDOUBLE_TYPE
 
sqlôe_öt64


	)

514 #i‚de‡
SQLITE_BIG_DBL


515 
	#SQLITE_BIG_DBL
 (((
sqlôe3_öt64
)1)<<50)

	)

517 
	#SQLITE_OMIT_DATETIME_FUNCS
 1

	)

518 
	#SQLITE_OMIT_TRACE
 1

	)

519 #unde‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


520 #unde‡
SQLITE_HAVE_ISNAN


522 #i‚de‡
SQLITE_BIG_DBL


523 
	#SQLITE_BIG_DBL
 (1e99)

	)

531 #ifde‡
SQLITE_OMIT_TEMPDB


532 
	#OMIT_TEMPDB
 1

	)

534 
	#OMIT_TEMPDB
 0

	)

543 
	#SQLITE_MAX_FILE_FORMAT
 4

	)

544 #i‚de‡
SQLITE_DEFAULT_FILE_FORMAT


545 
	#SQLITE_DEFAULT_FILE_FORMAT
 4

	)

552 #i‚de‡
SQLITE_DEFAULT_RECURSIVE_TRIGGERS


553 
	#SQLITE_DEFAULT_RECURSIVE_TRIGGERS
 0

	)

560 #i‚de‡
SQLITE_TEMP_STORE


561 
	#SQLITE_TEMP_STORE
 1

	)

562 
	#SQLITE_TEMP_STORE_xc
 1

	)

570 #i‡
SQLITE_TEMP_STORE
==3 || 
SQLITE_THREADSAFE
==0

571 #unde‡
SQLITE_MAX_WORKER_THREADS


572 
	#SQLITE_MAX_WORKER_THREADS
 0

	)

574 #i‚de‡
SQLITE_MAX_WORKER_THREADS


575 
	#SQLITE_MAX_WORKER_THREADS
 8

	)

577 #i‚de‡
SQLITE_DEFAULT_WORKER_THREADS


578 
	#SQLITE_DEFAULT_WORKER_THREADS
 0

	)

580 #i‡
SQLITE_DEFAULT_WORKER_THREADS
>
SQLITE_MAX_WORKER_THREADS


581 #unde‡
SQLITE_MAX_WORKER_THREADS


582 
	#SQLITE_MAX_WORKER_THREADS
 
SQLITE_DEFAULT_WORKER_THREADS


	)

591 #i‚de‡
SQLITE_DEFAULT_PCACHE_INITSZ


592 
	#SQLITE_DEFAULT_PCACHE_INITSZ
 100

	)

599 #i‚de‡
off£tof


600 
	#off£tof
(
STRUCTURE
,
FIELD
Ë(()((*)&((STRUCTURE*)0)->FIELD))

	)

606 #i‚de‡
MIN


607 
	#MIN
(
A
,
B
Ë((A)<(B)?(A):(B))

	)

609 #i‚de‡
MAX


610 
	#MAX
(
A
,
B
Ë((A)>(B)?(A):(B))

	)

616 
	#SWAP
(
TYPE
,
A
,
B
Ë{TYPE 
t
=A; A=B; BÒ;}

	)

623 
	#SQLITE_EBCDIC
 1

	)

625 
	#SQLITE_ASCII
 1

	)

635 #i‚de‡
UINT32_TYPE


636 #ifde‡
HAVE_UINT32_T


637 
	#UINT32_TYPE
 
uöt32_t


	)

639 
	#UINT32_TYPE
 

	)

642 #i‚de‡
UINT16_TYPE


643 #ifde‡
HAVE_UINT16_T


644 
	#UINT16_TYPE
 
uöt16_t


	)

646 
	#UINT16_TYPE
 

	)

649 #i‚de‡
INT16_TYPE


650 #ifde‡
HAVE_INT16_T


651 
	#INT16_TYPE
 
öt16_t


	)

653 
	#INT16_TYPE
 

	)

656 #i‚de‡
UINT8_TYPE


657 #ifde‡
HAVE_UINT8_T


658 
	#UINT8_TYPE
 
uöt8_t


	)

660 
	#UINT8_TYPE
 

	)

663 #i‚de‡
INT8_TYPE


664 #ifde‡
HAVE_INT8_T


665 
	#INT8_TYPE
 
öt8_t


	)

667 
	#INT8_TYPE
 sig√d 

	)

670 #i‚de‡
LONGDOUBLE_TYPE


671 
	#LONGDOUBLE_TYPE
 

	)

673 
sqlôe_öt64
 
	ti64
;

674 
sqlôe_uöt64
 
	tu64
;

675 
UINT32_TYPE
 
	tu32
;

676 
UINT16_TYPE
 
	tu16
;

677 
INT16_TYPE
 
	ti16
;

678 
UINT8_TYPE
 
	tu8
;

679 
INT8_TYPE
 
	ti8
;

687 
	#SQLITE_MAX_U32
 ((((
u64
)1)<<32)-1)

	)

695 #ifde‡
SQLITE_64BIT_STATS


696 
u64
 
	ttRow˙t
;

698 
u32
 
	ttRow˙t
;

724 
INT16_TYPE
 
	tLogE°
;

729 #i‚de‡
SQLITE_PTRSIZE


730 #i‡
deföed
(
__SIZEOF_POINTER__
)

731 
	#SQLITE_PTRSIZE
 
__SIZEOF_POINTER__


	)

732 #ñi‡
deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
_M_IX86
) || \

733 
deföed
(
_M_ARM
Ë|| deföed(
__¨m__
Ë|| 
	$deföed
(
__x86
)

734 
	#SQLITE_PTRSIZE
 4

	)

736 
	#SQLITE_PTRSIZE
 8

	)

742 #i‡
	`deföed
(
HAVE_STDINT_H
)

743 
uöçå_t
 
	tu±r
;

744 #ñi‡
SQLITE_PTRSIZE
==4

745 
u32
 
	tu±r
;

747 
u64
 
	tu±r
;

758 
	#SQLITE_WITHIN
(
P
,
S
,
E
Ë(((
u±r
)(P)>=(u±r)(S))&&((u±r)(P)<(u±r)(E)))

	)

770 #i‡(
	`deföed
(
i386
Ë|| deföed(
__i386__
Ë|| deföed(
_M_IX86
) || \

771 
	`deföed
(
__x86_64
Ë|| deföed(
__x86_64__
Ë|| deföed(
_M_X64
) || \

772 
	`deföed
(
_M_AMD64
Ë|| deföed(
_M_ARM
Ë|| deföed(
__x86
) || \

773 
	`deföed
(
__¨m__
)Ë&& !
	$deföed
(
SQLITE_RUNTIME_BYTEORDER
)

774 
	#SQLITE_BYTEORDER
 1234

	)

775 
	#SQLITE_BIGENDIAN
 0

	)

776 
	#SQLITE_LITTLEENDIAN
 1

	)

777 
	#SQLITE_UTF16NATIVE
 
SQLITE_UTF16LE


	)

779 #i‡(
	`deföed
(
•¨c
Ë|| deföed(
__µc__
)) \

780 && !
	$deföed
(
SQLITE_RUNTIME_BYTEORDER
)

781 
	#SQLITE_BYTEORDER
 4321

	)

782 
	#SQLITE_BIGENDIAN
 1

	)

783 
	#SQLITE_LITTLEENDIAN
 0

	)

784 
	#SQLITE_UTF16NATIVE
 
SQLITE_UTF16BE


	)

786 #i‡!
	`deföed
(
SQLITE_BYTEORDER
)

787 #ifde‡
SQLITE_AMALGAMATION


788 c⁄° 
sqlôe3⁄e
 = 1;

790 c⁄° 
sqlôe3⁄e
;

792 
	#SQLITE_BYTEORDER
 0

	)

793 
	#SQLITE_BIGENDIAN
 (*(*)(&
sqlôe3⁄e
)==0)

	)

794 
	#SQLITE_LITTLEENDIAN
 (*(*)(&
sqlôe3⁄e
)==1)

	)

795 
	#SQLITE_UTF16NATIVE
 (
SQLITE_BIGENDIAN
?
SQLITE_UTF16BE
:
SQLITE_UTF16LE
)

	)

803 
	#LARGEST_INT64
 (0xffffffff|(((
i64
)0x7fffffff)<<32))

	)

804 
	#SMALLEST_INT64
 (((
i64
)-1Ë- 
LARGEST_INT64
)

	)

810 
	#ROUND8
(
x
Ë(((x)+7)&~7)

	)

815 
	#ROUNDDOWN8
(
x
Ë((x)&~7)

	)

826 #ifde‡
SQLITE_4_BYTE_ALIGNED_MALLOC


827 
	#EIGHT_BYTE_ALIGNMENT
(
X
Ë((((*)(XË- (*)0)&3)==0)

	)

829 
	#EIGHT_BYTE_ALIGNMENT
(
X
Ë((((*)(XË- (*)0)&7)==0)

	)

835 #i‡
	`deföed
(
__O≥nBSD__
Ë|| deföed(
__QNXNTO__
)

836 #unde‡
SQLITE_MAX_MMAP_SIZE


837 
	#SQLITE_MAX_MMAP_SIZE
 0

	)

843 #ifde‡
__APPLE__


844 
	~<T¨gëC⁄dôi⁄Æs.h
>

846 #i‚de‡
SQLITE_MAX_MMAP_SIZE


847 #i‡
	`deföed
(
__löux__
) \

848 || 
	`deföed
(
_WIN32
) \

849 || (
	`deföed
(
__APPLE__
Ë&& deföed(
__MACH__
)) \

850 || 
	`deföed
(
__sun
) \

851 || 
	`deföed
(
__FªeBSD__
) \

852 || 
	$deföed
(
__Døg⁄Fly__
)

853 
	#SQLITE_MAX_MMAP_SIZE
 0x7fff0000

	)

855 
	#SQLITE_MAX_MMAP_SIZE
 0

	)

857 
	#SQLITE_MAX_MMAP_SIZE_xc
 1

	)

865 #i‚de‡
SQLITE_DEFAULT_MMAP_SIZE


866 
	#SQLITE_DEFAULT_MMAP_SIZE
 0

	)

867 
	#SQLITE_DEFAULT_MMAP_SIZE_xc
 1

	)

869 #i‡
SQLITE_DEFAULT_MMAP_SIZE
>
SQLITE_MAX_MMAP_SIZE


870 #unde‡
SQLITE_DEFAULT_MMAP_SIZE


871 
	#SQLITE_DEFAULT_MMAP_SIZE
 
SQLITE_MAX_MMAP_SIZE


	)

879 #ifde‡
SQLITE_ENABLE_STAT4


880 #unde‡
SQLITE_ENABLE_STAT3


881 
	#SQLITE_ENABLE_STAT3_OR_STAT4
 1

	)

882 #ñi‡
SQLITE_ENABLE_STAT3


883 
	#SQLITE_ENABLE_STAT3_OR_STAT4
 1

	)

884 #ñi‡
SQLITE_ENABLE_STAT3_OR_STAT4


885 #unde‡
SQLITE_ENABLE_STAT3_OR_STAT4


892 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_ENABLE_SELECTTRACE
)

893 
	#SELECTTRACE_ENABLED
 1

	)

895 
	#SELECTTRACE_ENABLED
 0

	)

907 
BusyH™dÀr
 
	tBusyH™dÀr
;

908 
	sBusyH™dÀr
 {

909 (*
xFunc
)(*,);

910 *
pArg
;

911 
nBusy
;

919 
	#MASTER_NAME
 "sqlôe_ma°î"

	)

920 
	#TEMP_MASTER_NAME
 "sqlôe_ãmp_ma°î"

	)

925 
	#MASTER_ROOT
 1

	)

930 
	#SCHEMA_TABLE
(
x
Ë((!
OMIT_TEMPDB
)&&(x==1)?
TEMP_MASTER_NAME
:
MASTER_NAME
)

	)

936 
	#AºaySize
(
X
Ë(()((X)/(X[0])))

	)

941 
	#IsPowîOfTwo
(
X
Ë(((X)&((X)-1))==0)

	)

951 
	#SQLITE_DYNAMIC
 ((
sqlôe3_de°ru˘‹_ty≥
)
sqlôe3MÆlocSize
)

	)

967 #ifde‡
SQLITE_OMIT_WSD


968 
	#SQLITE_WSD
 c⁄°

	)

969 
	#GLOBAL
(
t
,
v
Ë(*—*)
	`sqlôe3_wsd_föd
((*)&(v), (v)))

	)

970 
	#sqlôe3GlobÆC⁄fig
 
	`GLOBAL
(
Sqlôe3C⁄fig
, 
sqlôe3C⁄fig
)

	)

971 
	`sqlôe3_wsd_öô
(
N
, 
J
);

972 *
	`sqlôe3_wsd_föd
(*
K
, 
L
);

974 
	#SQLITE_WSD


	)

975 
	#GLOBAL
(
t
,
v
Ë
	)
v

976 
	#sqlôe3GlobÆC⁄fig
 
sqlôe3C⁄fig


	)

995 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

996 
	#UNUSED_PARAMETER2
(
x
,
y
Ë
	`UNUSED_PARAMETER
(x),UNUSED_PARAMETER(y)

	)

1001 
AggInfo
 
	tAggInfo
;

1002 
AuthC⁄ãxt
 
	tAuthC⁄ãxt
;

1003 
AutoöcInfo
 
	tAutoöcInfo
;

1004 
Bôvec
 
	tBôvec
;

1005 
CﬁlSeq
 
	tCﬁlSeq
;

1006 
Cﬁumn
 
	tCﬁumn
;

1007 
Db
 
	tDb
;

1008 
Schema
 
	tSchema
;

1009 
Ex¥
 
	tEx¥
;

1010 
Ex¥Li°
 
	tEx¥Li°
;

1011 
Ex¥S∑n
 
	tEx¥S∑n
;

1012 
FKey
 
	tFKey
;

1013 
FuncDe°ru˘‹
 
	tFuncDe°ru˘‹
;

1014 
FuncDef
 
	tFuncDef
;

1015 
FuncDefHash
 
	tFuncDefHash
;

1016 
IdLi°
 
	tIdLi°
;

1017 
Index
 
	tIndex
;

1018 
IndexSam∂e
 
	tIndexSam∂e
;

1019 
KeyCœss
 
	tKeyCœss
;

1020 
KeyInfo
 
	tKeyInfo
;

1021 
Lookaside
 
	tLookaside
;

1022 
LookasideSlŸ
 
	tLookasideSlŸ
;

1023 
ModuÀ
 
	tModuÀ
;

1024 
NameC⁄ãxt
 
	tNameC⁄ãxt
;

1025 
P¨£
 
	tP¨£
;

1026 
PªUpd©e
 
	tPªUpd©e
;

1027 
PrötfArgumíts
 
	tPrötfArgumíts
;

1028 
RowSë
 
	tRowSë
;

1029 
Savïoöt
 
	tSavïoöt
;

1030 
Sñe˘
 
	tSñe˘
;

1031 
SQLôeThªad
 
	tSQLôeThªad
;

1032 
Sñe˘De°
 
	tSñe˘De°
;

1033 
SrcLi°
 
	tSrcLi°
;

1034 
SåAccum
 
	tSåAccum
;

1035 
TabÀ
 
	tTabÀ
;

1036 
TabÀLock
 
	tTabÀLock
;

1037 
Tokí
 
	tTokí
;

1038 
TªeVõw
 
	tTªeVõw
;

1039 
Triggî
 
	tTriggî
;

1040 
TriggîPrg
 
	tTriggîPrg
;

1041 
TriggîSãp
 
	tTriggîSãp
;

1042 
U≈ackedRec‹d
 
	tU≈ackedRec‹d
;

1043 
VTabÀ
 
	tVTabÀ
;

1044 
VèbCtx
 
	tVèbCtx
;

1045 
WÆkî
 
	tWÆkî
;

1046 
WhîeInfo
 
	tWhîeInfo
;

1047 
Wôh
 
	tWôh
;

1054 
	~"båì.h
"

1055 
	~"vdbe.h
"

1056 
	~"∑gî.h
"

1057 
	~"pˇche.h
"

1058 
	~"os.h
"

1059 
	~"muãx.h
"

1064 #ifde‡
SQLITE_EXTRA_DURABLE


1065 #w¨nög 
U£
 
SQLITE_DEFAULT_SYNCHRONOUS
=3 
ö°ód
 
of
 
SQLITE_EXTRA_DURABLE


1066 
	#SQLITE_DEFAULT_SYNCHRONOUS
 3

	)

1085 #i‚de‡
SQLITE_DEFAULT_SYNCHRONOUS


1086 
	#SQLITE_DEFAULT_SYNCHRONOUS
 (
PAGER_SYNCHRONOUS_FULL
-1)

	)

1088 #i‚de‡
SQLITE_DEFAULT_WAL_SYNCHRONOUS


1089 
	#SQLITE_DEFAULT_WAL_SYNCHRONOUS
 
SQLITE_DEFAULT_SYNCHRONOUS


	)

1099 
	sDb
 {

1100 *
zName
;

1101 
Båì
 *
pBt
;

1102 
u8
 
ß„ty_Àvñ
;

1103 
u8
 
bSyncSë
;

1104 
Schema
 *
pSchema
;

1124 
	sSchema
 {

1125 
schema_cookõ
;

1126 
iGíî©i⁄
;

1127 
Hash
 
tblHash
;

1128 
Hash
 
idxHash
;

1129 
Hash
 
åigHash
;

1130 
Hash
 
fkeyHash
;

1131 
TabÀ
 *
pSeqTab
;

1132 
u8
 
fûe_f‹m©
;

1133 
u8
 
íc
;

1134 
u16
 
schemaFœgs
;

1135 
ˇche_size
;

1142 
	#DbHasPr›îty
(
D
,
I
,
P
Ë(((D)->
aDb
[I].
pSchema
->
schemaFœgs
&(P))==(P))

	)

1143 
	#DbHasAnyPr›îty
(
D
,
I
,
P
Ë(((D)->
aDb
[I].
pSchema
->
schemaFœgs
&(P))!=0)

	)

1144 
	#DbSëPr›îty
(
D
,
I
,
P
Ë(D)->
aDb
[I].
pSchema
->
schemaFœgs
|=(P)

	)

1145 
	#DbCÀ¨Pr›îty
(
D
,
I
,
P
Ë(D)->
aDb
[I].
pSchema
->
schemaFœgs
&=~(P)

	)

1157 
	#DB_SchemaLﬂded
 0x0001

	)

1158 
	#DB_Uƒe£tVõws
 0x0002

	)

1159 
	#DB_Em±y
 0x0004

	)

1165 
	#SQLITE_N_LIMIT
 (
SQLITE_LIMIT_WORKER_THREADS
+1)

	)

1187 
	sLookaside
 {

1188 
u32
 
bDißbÀ
;

1189 
u16
 
sz
;

1190 
u8
 
bMÆlo˚d
;

1191 
nOut
;

1192 
mxOut
;

1193 
™Sèt
[3];

1194 
LookasideSlŸ
 *
pFªe
;

1195 *
pSèπ
;

1196 *
pEnd
;

1198 
	sLookasideSlŸ
 {

1199 
LookasideSlŸ
 *
pNext
;

1209 
	#SQLITE_FUNC_HASH_SZ
 23

	)

1210 
	sFuncDefHash
 {

1211 
FuncDef
 *
a
[
SQLITE_FUNC_HASH_SZ
];

1214 #ifde‡
SQLITE_USER_AUTHENTICATION


1219 
sqlôe3_u£øuth
 
	tsqlôe3_u£øuth
;

1220 
	ssqlôe3_u£øuth
 {

1221 
u8
 
authLevñ
;

1222 
nAuthPW
;

1223 *
zAuthPW
;

1224 *
zAuthU£r
;

1228 
	#UAUTH_Unknown
 0

	)

1229 
	#UAUTH_Faû
 1

	)

1230 
	#UAUTH_U£r
 2

	)

1231 
	#UAUTH_Admö
 3

	)

1234 
	`sqlôe3U£rAuthTabÀ
(const *);

1235 
	`sqlôe3U£rAuthCheckLogö
(
sqlôe3
*,c⁄° *,
u8
*);

1236 
	`sqlôe3U£rAuthInô
(
sqlôe3
*);

1237 
	`sqlôe3Cry±Func
(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

1244 #ifde‡
SQLITE_USER_AUTHENTICATION


1245 (*
	tsqlôe3_xauth
)(*,,const *,const *,const *,

1248 (*
	tsqlôe3_xauth
)(*,,const *,const *,const *,

1252 #i‚de‡
SQLITE_OMIT_DEPRECATED


1256 
	#SQLITE_TRACE_LEGACY
 0x80

	)

1258 
	#SQLITE_TRACE_LEGACY
 0

	)

1265 
	ssqlôe3
 {

1266 
sqlôe3_vfs
 *
pVfs
;

1267 
Vdbe
 *
pVdbe
;

1268 
CﬁlSeq
 *
pDÊtCﬁl
;

1269 
sqlôe3_muãx
 *
muãx
;

1270 
Db
 *
aDb
;

1271 
nDb
;

1272 
Êags
;

1273 
i64
 
œ°Rowid
;

1274 
i64
 
szMm≠
;

1275 
›íFœgs
;

1276 
îrCode
;

1277 
îrMask
;

1278 
iSysEºno
;

1279 
u16
 
dbO±Fœgs
;

1280 
u8
 
íc
;

1281 
u8
 
autoCommô
;

1282 
u8
 
ãmp_°‹e
;

1283 
u8
 
mÆlocFaûed
;

1284 
u8
 
bBíignMÆloc
;

1285 
u8
 
dÊtLockMode
;

1286 sig√d 
√xtAutovac
;

1287 
u8
 
suµªssEº
;

1288 
u8
 
vèbOnC⁄Êi˘
;

1289 
u8
 
isTønß˘i⁄Savïoöt
;

1290 
u8
 
mTø˚
;

1291 
√xtPagesize
;

1292 
u32
 
magic
;

1293 
nCh™ge
;

1294 
nTŸÆCh™ge
;

1295 
aLimô
[
SQLITE_N_LIMIT
];

1296 
nMaxS‹ãrMm≠
;

1297 
	ssqlôe3InôInfo
 {

1298 
√wTnum
;

1299 
u8
 
iDb
;

1300 
u8
 
busy
;

1301 
u8
 
‹ph™Triggî
;

1302 
u8
 
impo°îTabÀ
;

1303 } 
öô
;

1304 
nVdbeA˘ive
;

1305 
nVdbeRód
;

1306 
nVdbeWrôe
;

1307 
nVdbeExec
;

1308 
nVDe°roy
;

1309 
nExãnsi⁄
;

1310 **
aExãnsi⁄
;

1311 (*
xTø˚
)(
u32
,*,*,*);

1312 *
pTø˚Arg
;

1313 (*
xProfûe
)(*,c⁄° *,
u64
);

1314 *
pProfûeArg
;

1315 *
pCommôArg
;

1316 (*
xCommôCÆlback
)(*);

1317 *
pRﬁlbackArg
;

1318 (*
xRﬁlbackCÆlback
)(*);

1319 *
pUpd©eArg
;

1320 (*
xUpd©eCÆlback
)(*,, c⁄° *,c⁄° *,
sqlôe_öt64
);

1321 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1322 *
pPªUpd©eArg
;

1323 (*
xPªUpd©eCÆlback
)(

1324 *,
sqlôe3
*,,c⁄°*,c⁄°*,
sqlôe3_öt64
,sqlite3_int64

1326 
PªUpd©e
 *
pPªUpd©e
;

1328 #i‚de‡
SQLITE_OMIT_WAL


1329 (*
xWÆCÆlback
)(*, 
sqlôe3
 *, const *, );

1330 *
pWÆArg
;

1332 (*
xCﬁlNìded
)(*,
sqlôe3
*,
eTextRï
,const *);

1333 (*
xCﬁlNìded16
)(*,
sqlôe3
*,
eTextRï
,const *);

1334 *
pCﬁlNìdedArg
;

1335 
sqlôe3_vÆue
 *
pEº
;

1337 vﬁ©ûê
isI¡îru±ed
;

1338 
nŸU£d1
;

1339 } 
u1
;

1340 
Lookaside
 
lookaside
;

1341 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


1342 
sqlôe3_xauth
 
xAuth
;

1343 *
pAuthArg
;

1345 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1346 (*
xProgªss
)(*);

1347 *
pProgªssArg
;

1348 
nProgªssOps
;

1350 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1351 
nVTøns
;

1352 
Hash
 
aModuÀ
;

1353 
VèbCtx
 *
pVèbCtx
;

1354 
VTabÀ
 **
aVTøns
;

1355 
VTabÀ
 *
pDisc⁄√˘
;

1357 
Hash
 
aFunc
;

1358 
Hash
 
aCﬁlSeq
;

1359 
BusyH™dÀr
 
busyH™dÀr
;

1360 
Db
 
aDbSètic
[2];

1361 
Savïoöt
 *
pSavïoöt
;

1362 
busyTimeout
;

1363 
nSavïoöt
;

1364 
nSèãmít
;

1365 
i64
 
nDe„ºedC⁄s
;

1366 
i64
 
nDe„ºedImmC⁄s
;

1367 *
≤ByãsFªed
;

1368 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


1379 
sqlôe3
 *
pBlockögC⁄√˘i⁄
;

1380 
sqlôe3
 *
pU∆ockC⁄√˘i⁄
;

1381 *
pU∆ockArg
;

1382 (*
xU∆ockNŸify
)(**, );

1383 
sqlôe3
 *
pNextBlocked
;

1385 #ifde‡
SQLITE_USER_AUTHENTICATION


1386 
sqlôe3_u£øuth
 
auth
;

1393 
	#SCHEMA_ENC
(
db
Ë((db)->
aDb
[0].
pSchema
->
íc
)

	)

1394 
	#ENC
(
db
Ë((db)->
íc
)

	)

1404 
	#SQLITE_VdbeTø˚
 0x00000001

	)

1405 
	#SQLITE_I¡înCh™ges
 0x00000002

	)

1406 
	#SQLITE_FuŒCﬁNames
 0x00000004

	)

1407 
	#SQLITE_FuŒFSync
 0x00000008

	)

1408 
	#SQLITE_Ck±FuŒFSync
 0x00000010

	)

1409 
	#SQLITE_CacheSpûl
 0x00000020

	)

1410 
	#SQLITE_Sh‹tCﬁNames
 0x00000040

	)

1411 
	#SQLITE_Cou¡Rows
 0x00000080

	)

1414 
	#SQLITE_NuŒCÆlback
 0x00000100

	)

1416 
	#SQLITE_SqlTø˚
 0x00000200

	)

1417 
	#SQLITE_VdbeLi°ög
 0x00000400

	)

1418 
	#SQLITE_WrôeSchema
 0x00000800

	)

1419 
	#SQLITE_VdbeAdd›Tø˚
 0x00001000

	)

1420 
	#SQLITE_Ign‹eChecks
 0x00002000

	)

1421 
	#SQLITE_RódUncommôãd
 0x0004000

	)

1422 
	#SQLITE_LegacyFûeFmt
 0x00008000

	)

1423 
	#SQLITE_RecovîyMode
 0x00010000

	)

1424 
	#SQLITE_Revî£Ordî
 0x00020000

	)

1425 
	#SQLITE_RecTriggîs
 0x00040000

	)

1426 
	#SQLITE_F‹eignKeys
 0x00080000

	)

1427 
	#SQLITE_AutoIndex
 0x00100000

	)

1428 
	#SQLITE_Pª„rBuûtö
 0x00200000

	)

1429 
	#SQLITE_LﬂdExãnsi⁄
 0x00400000

	)

1430 
	#SQLITE_LﬂdExtFunc
 0x00800000

	)

1431 
	#SQLITE_E«bÀTriggî
 0x01000000

	)

1432 
	#SQLITE_De„rFKs
 0x02000000

	)

1433 
	#SQLITE_QuîyO∆y
 0x04000000

	)

1434 
	#SQLITE_VdbeEQP
 0x08000000

	)

1435 
	#SQLITE_Vacuum
 0x10000000

	)

1436 
	#SQLITE_CñlSizeCk
 0x20000000

	)

1437 
	#SQLITE_Fts3Tokíizî
 0x40000000

	)

1445 
	#SQLITE_QuîyFœâíî
 0x0001

	)

1446 
	#SQLITE_CﬁumnCache
 0x0002

	)

1447 
	#SQLITE_GroupByOrdî
 0x0004

	)

1448 
	#SQLITE_Fa˘‹OutC⁄°
 0x0008

	)

1450 
	#SQLITE_Di°ö˘O±
 0x0020

	)

1451 
	#SQLITE_CovîIdxSˇn
 0x0040

	)

1452 
	#SQLITE_OrdîByIdxJoö
 0x0080

	)

1453 
	#SQLITE_SubqC‹outöe
 0x0100

	)

1454 
	#SQLITE_Tønsôive
 0x0200

	)

1455 
	#SQLITE_OmôNo›Joö
 0x0400

	)

1456 
	#SQLITE_Sèt34
 0x0800

	)

1457 
	#SQLITE_Curs‹Höts
 0x2000

	)

1458 
	#SQLITE_AŒO±s
 0xfff‡

	)

1463 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


1464 
	#O±imiz©i⁄DißbÀd
(
db
, 
mask
Ë(((db)->
dbO±Fœgs
&(mask))!=0)

	)

1465 
	#O±imiz©i⁄E«bÀd
(
db
, 
mask
Ë(((db)->
dbO±Fœgs
&(mask))==0)

	)

1467 
	#O±imiz©i⁄DißbÀd
(
db
, 
mask
Ë0

	)

1468 
	#O±imiz©i⁄E«bÀd
(
db
, 
mask
Ë1

	)

1475 
	#C⁄°Fa˘‹Ok
(
P
Ë((P)->
okC⁄°Fa˘‹
)

	)

1482 
	#SQLITE_MAGIC_OPEN
 0xa029a697

	)

1483 
	#SQLITE_MAGIC_CLOSED
 0x9f3c2d33

	)

1484 
	#SQLITE_MAGIC_SICK
 0x4b771290

	)

1485 
	#SQLITE_MAGIC_BUSY
 0xf03b7906

	)

1486 
	#SQLITE_MAGIC_ERROR
 0xb5357930

	)

1487 
	#SQLITE_MAGIC_ZOMBIE
 0x64cffc7‡

	)

1499 
	sFuncDef
 {

1500 
i8
 
nArg
;

1501 
u16
 
funcFœgs
;

1502 *
pU£rD©a
;

1503 
FuncDef
 *
pNext
;

1504 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

1505 (*
xFöÆize
)(
sqlôe3_c⁄ãxt
*);

1506 c⁄° *
zName
;

1508 
FuncDef
 *
pHash
;

1509 
FuncDe°ru˘‹
 *
pDe°ru˘‹
;

1510 } 
u
;

1527 
	sFuncDe°ru˘‹
 {

1528 
nRef
;

1529 (*
xDe°roy
)(*);

1530 *
pU£rD©a
;

1546 
	#SQLITE_FUNC_ENCMASK
 0x0003

	)

1547 
	#SQLITE_FUNC_LIKE
 0x0004

	)

1548 
	#SQLITE_FUNC_CASE
 0x0008

	)

1549 
	#SQLITE_FUNC_EPHEM
 0x0010

	)

1550 
	#SQLITE_FUNC_NEEDCOLL
 0x0020

	)

1551 
	#SQLITE_FUNC_LENGTH
 0x0040

	)

1552 
	#SQLITE_FUNC_TYPEOF
 0x0080

	)

1553 
	#SQLITE_FUNC_COUNT
 0x0100

	)

1554 
	#SQLITE_FUNC_COALESCE
 0x0200

	)

1555 
	#SQLITE_FUNC_UNLIKELY
 0x0400

	)

1556 
	#SQLITE_FUNC_CONSTANT
 0x0800

	)

1557 
	#SQLITE_FUNC_MINMAX
 0x1000

	)

1558 
	#SQLITE_FUNC_SLOCHNG
 0x2000

	)

1595 
	#FUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1596 {
nArg
, 
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1597 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} 
	}

	)
}

1598 
	#VFUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1599 {
nArg
, 
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1600 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1601 
	#DFUNCTION
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
) \

1602 {
nArg
, 
SQLITE_FUNC_SLOCHNG
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1603 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1604 
	#FUNCTION2
(
zName
, 
nArg
, 
iArg
, 
bNC
, 
xFunc
, 
exåaFœgs
) \

1605 {
nArg
,
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
)|
exåaFœgs
,\

1606 
	`SQLITE_INT_TO_PTR
(
iArg
), 0, 
xFunc
, 0, #zName, {0} }

	)

1607 
	#STR_FUNCTION
(
zName
, 
nArg
, 
pArg
, 
bNC
, 
xFunc
) \

1608 {
nArg
, 
SQLITE_FUNC_SLOCHNG
|
SQLITE_UTF8
|(
bNC
*
SQLITE_FUNC_NEEDCOLL
), \

1609 
pArg
, 0, 
xFunc
, 0, #zName, }

	)

1610 
	#LIKEFUNC
(
zName
, 
nArg
, 
¨g
, 
Êags
) \

1611 {
nArg
, 
SQLITE_FUNC_CONSTANT
|
SQLITE_UTF8
|
Êags
, \

1612 (*)
¨g
, 0, 
likeFunc
, 0, #zName, {0} }

	)

1613 
	#AGGREGATE
(
zName
, 
nArg
, 
¨g
, 
nc
, 
xSãp
, 
xFöÆ
) \

1614 {
nArg
, 
SQLITE_UTF8
|(
nc
*
SQLITE_FUNC_NEEDCOLL
), \

1615 
	`SQLITE_INT_TO_PTR
(
¨g
), 0, 
xSãp
,
xFöÆ
,#zName, {0}}

	)

1616 
	#AGGREGATE2
(
zName
, 
nArg
, 
¨g
, 
nc
, 
xSãp
, 
xFöÆ
, 
exåaFœgs
) \

1617 {
nArg
, 
SQLITE_UTF8
|(
nc
*
SQLITE_FUNC_NEEDCOLL
)|
exåaFœgs
, \

1618 
	`SQLITE_INT_TO_PTR
(
¨g
), 0, 
xSãp
,
xFöÆ
,#zName, {0}}

	)

1626 
	sSavïoöt
 {

1627 *
	mzName
;

1628 
i64
 
	mnDe„ºedC⁄s
;

1629 
i64
 
	mnDe„ºedImmC⁄s
;

1630 
Savïoöt
 *
	mpNext
;

1637 
	#SAVEPOINT_BEGIN
 0

	)

1638 
	#SAVEPOINT_RELEASE
 1

	)

1639 
	#SAVEPOINT_ROLLBACK
 2

	)

1647 
	sModuÀ
 {

1648 c⁄° 
sqlôe3_moduÀ
 *
	mpModuÀ
;

1649 c⁄° *
	mzName
;

1650 *
	mpAux
;

1651 (*
	mxDe°roy
)(*);

1652 
TabÀ
 *
	mpEpoTab
;

1659 
	sCﬁumn
 {

1660 *
	mzName
;

1661 
Ex¥
 *
	mpDÊt
;

1662 *
	mzCﬁl
;

1663 
u8
 
	mnŸNuŒ
;

1664 
	mafföôy
;

1665 
u8
 
	mszE°
;

1666 
u8
 
	mcﬁFœgs
;

1671 
	#COLFLAG_PRIMKEY
 0x0001

	)

1672 
	#COLFLAG_HIDDEN
 0x0002

	)

1673 
	#COLFLAG_HASTYPE
 0x0004

	)

1684 
	sCﬁlSeq
 {

1685 *
	mzName
;

1686 
u8
 
	míc
;

1687 *
	mpU£r
;

1688 (*
	mxCmp
)(*,, const *, , const *);

1689 (*
	mxDñ
)(*);

1695 
	#SQLITE_SO_ASC
 0

	)

1696 
	#SQLITE_SO_DESC
 1

	)

1697 
	#SQLITE_SO_UNDEFINED
 -1

	)

1713 
	#SQLITE_AFF_BLOB
 'A'

	)

1714 
	#SQLITE_AFF_TEXT
 'B'

	)

1715 
	#SQLITE_AFF_NUMERIC
 'C'

	)

1716 
	#SQLITE_AFF_INTEGER
 'D'

	)

1717 
	#SQLITE_AFF_REAL
 'E'

	)

1719 
	#sqlôe3IsNumîicAfföôy
(
X
Ë((X)>=
SQLITE_AFF_NUMERIC
)

	)

1725 
	#SQLITE_AFF_MASK
 0x47

	)

1736 
	#SQLITE_JUMPIFNULL
 0x10

	)

1737 
	#SQLITE_STOREP2
 0x20

	)

1738 
	#SQLITE_NULLEQ
 0x80

	)

1739 
	#SQLITE_NOTNULL
 0x90

	)

1783 
	sVTabÀ
 {

1784 
sqlôe3
 *
	mdb
;

1785 
ModuÀ
 *
	mpMod
;

1786 
sqlôe3_vèb
 *
	mpVèb
;

1787 
	mnRef
;

1788 
u8
 
	mbC⁄°øöt
;

1789 
	miSavïoöt
;

1790 
VTabÀ
 *
	mpNext
;

1797 
	sTabÀ
 {

1798 *
	mzName
;

1799 
Cﬁumn
 *
	maCﬁ
;

1800 
Index
 *
	mpIndex
;

1801 
Sñe˘
 *
	mpSñe˘
;

1802 
FKey
 *
	mpFKey
;

1803 *
	mzCﬁAff
;

1804 
Ex¥Li°
 *
	mpCheck
;

1806 
	mäum
;

1807 
i16
 
	miPKey
;

1808 
i16
 
	mnCﬁ
;

1809 
u16
 
	mnRef
;

1810 
LogE°
 
	mnRowLogE°
;

1811 
LogE°
 
	mszTabRow
;

1812 #ifde‡
SQLITE_ENABLE_COSTMULT


1813 
LogE°
 
	mco°Mu…
;

1815 
u8
 
	mèbFœgs
;

1816 
u8
 
	mkeyC⁄f
;

1817 #i‚de‡
SQLITE_OMIT_ALTERTABLE


1818 
	maddCﬁOff£t
;

1820 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1821 
	mnModuÀArg
;

1822 **
	mazModuÀArg
;

1823 
VTabÀ
 *
	mpVTabÀ
;

1825 
Triggî
 *
	mpTriggî
;

1826 
Schema
 *
	mpSchema
;

1827 
TabÀ
 *
	mpNextZombõ
;

1839 
	#TF_Ród⁄ly
 0x01

	)

1840 
	#TF_EphemîÆ
 0x02

	)

1841 
	#TF_HasPrim¨yKey
 0x04

	)

1842 
	#TF_Autoö¸emít
 0x08

	)

1843 
	#TF_VútuÆ
 0x10

	)

1844 
	#TF_WôhoutRowid
 0x20

	)

1845 
	#TF_NoVisibÀRowid
 0x40

	)

1846 
	#TF_OOOHiddí
 0x80

	)

1854 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1855 
	#IsVútuÆ
(
X
Ë(((X)->
èbFœgs
 & 
TF_VútuÆ
)!=0)

	)

1857 
	#IsVútuÆ
(
X
Ë0

	)

1866 #i‡
deföed
(
SQLITE_ENABLE_HIDDEN_COLUMNS
)

1867 
	#IsHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1868 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1869 #ñi‡!
deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

1870 
	#IsHiddíCﬁumn
(
X
Ë(((X)->
cﬁFœgs
 & 
COLFLAG_HIDDEN
)!=0)

	)

1871 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë0

	)

1873 
	#IsHiddíCﬁumn
(
X
Ë0

	)

1874 
	#IsOrdö¨yHiddíCﬁumn
(
X
Ë0

	)

1879 
	#HasRowid
(
X
Ë(((X)->
èbFœgs
 & 
TF_WôhoutRowid
)==0)

	)

1880 
	#VisibÀRowid
(
X
Ë(((X)->
èbFœgs
 & 
TF_NoVisibÀRowid
)==0)

	)

1910 
	sFKey
 {

1911 
TabÀ
 *
	mpFrom
;

1912 
FKey
 *
	mpNextFrom
;

1913 *
	mzTo
;

1914 
FKey
 *
	mpNextTo
;

1915 
FKey
 *
	mpPªvTo
;

1916 
	mnCﬁ
;

1918 
u8
 
	misDe„ºed
;

1919 
u8
 
	maA˘i⁄
[2];

1920 
Triggî
 *
	m≠Triggî
[2];

1921 
	ssCﬁM≠
 {

1922 
	miFrom
;

1923 *
	mzCﬁ
;

1924 } 
	maCﬁ
[1];

1952 
	#OE_N⁄e
 0

	)

1953 
	#OE_Rﬁlback
 1

	)

1954 
	#OE_Ab‹t
 2

	)

1955 
	#OE_Faû
 3

	)

1956 
	#OE_Ign‹e
 4

	)

1957 
	#OE_Rïœ˚
 5

	)

1959 
	#OE_Re°ri˘
 6

	)

1960 
	#OE_SëNuŒ
 7

	)

1961 
	#OE_SëDÊt
 8

	)

1962 
	#OE_Casˇde
 9

	)

1964 
	#OE_DeÁu…
 10

	)

1976 
	sKeyInfo
 {

1977 
u32
 
	mnRef
;

1978 
u8
 
	míc
;

1979 
u16
 
	mnFõld
;

1980 
u16
 
	mnXFõld
;

1981 
sqlôe3
 *
	mdb
;

1982 
u8
 *
	maS‹tOrdî
;

1983 
CﬁlSeq
 *
	maCﬁl
[1];

2021 
	sU≈ackedRec‹d
 {

2022 
KeyInfo
 *
	mpKeyInfo
;

2023 
Mem
 *
	maMem
;

2024 
u16
 
	mnFõld
;

2025 
i8
 
	mdeÁu…_rc
;

2026 
u8
 
	mîrCode
;

2027 
i8
 
	mr1
;

2028 
i8
 
	mr2
;

2029 
u8
 
	meqSìn
;

2067 
	sIndex
 {

2068 *
	mzName
;

2069 
i16
 *
	maiCﬁumn
;

2070 
LogE°
 *
	maiRowLogE°
;

2071 
TabÀ
 *
	mpTabÀ
;

2072 *
	mzCﬁAff
;

2073 
Index
 *
	mpNext
;

2074 
Schema
 *
	mpSchema
;

2075 
u8
 *
	maS‹tOrdî
;

2076 c⁄° **
	mazCﬁl
;

2077 
Ex¥
 *
	mpP¨tIdxWhîe
;

2078 
Ex¥Li°
 *
	maCﬁEx¥
;

2079 
	mäum
;

2080 
LogE°
 
	mszIdxRow
;

2081 
u16
 
	mnKeyCﬁ
;

2082 
u16
 
	mnCﬁumn
;

2083 
u8
 
	m⁄Eº‹
;

2084 
	midxTy≥
:2;

2085 
	mbUn‹dîed
:1;

2086 
	muniqNŸNuŒ
:1;

2087 
	misResized
:1;

2088 
	misCovîög
:1;

2089 
	mnoSkùSˇn
:1;

2090 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2091 
	mnSam∂e
;

2092 
	mnSam∂eCﬁ
;

2093 
tRow˙t
 *
	maAvgEq
;

2094 
IndexSam∂e
 *
	maSam∂e
;

2095 
tRow˙t
 *
	maiRowE°
;

2096 
tRow˙t
 
	mnRowE°0
;

2103 
	#SQLITE_IDXTYPE_APPDEF
 0

	)

2104 
	#SQLITE_IDXTYPE_UNIQUE
 1

	)

2105 
	#SQLITE_IDXTYPE_PRIMARYKEY
 2

	)

2108 
	#IsPrim¨yKeyIndex
(
X
Ë((X)->
idxTy≥
==
SQLITE_IDXTYPE_PRIMARYKEY
)

	)

2111 
	#IsUniqueIndex
(
X
Ë((X)->
⁄Eº‹
!=
OE_N⁄e
)

	)

2116 
	#XN_ROWID
 (-1Ë

	)

2117 
	#XN_EXPR
 (-2Ë

	)

2124 
	sIndexSam∂e
 {

2125 *
	mp
;

2126 
	mn
;

2127 
tRow˙t
 *
	m™Eq
;

2128 
tRow˙t
 *
	m™Lt
;

2129 
tRow˙t
 *
	m™DLt
;

2140 
	sTokí
 {

2141 c⁄° *
	mz
;

2142 
	mn
;

2158 
	sAggInfo
 {

2159 
u8
 
	mdúe˘Mode
;

2161 
u8
 
	mu£S‹tögIdx
;

2163 
	ms‹tögIdx
;

2164 
	ms‹tögIdxPTab
;

2165 
	mnS‹tögCﬁumn
;

2166 
	mmnReg
, 
	mmxReg
;

2167 
Ex¥Li°
 *
	mpGroupBy
;

2168 
	sAggInfo_cﬁ
 {

2169 
TabÀ
 *
	mpTab
;

2170 
	miTabÀ
;

2171 
	miCﬁumn
;

2172 
	miS‹ãrCﬁumn
;

2173 
	miMem
;

2174 
Ex¥
 *
	mpEx¥
;

2175 } *
	maCﬁ
;

2176 
	mnCﬁumn
;

2177 
	mnAccumuœt‹
;

2180 
	sAggInfo_func
 {

2181 
Ex¥
 *
	mpEx¥
;

2182 
FuncDef
 *
	mpFunc
;

2183 
	miMem
;

2184 
	miDi°ö˘
;

2185 } *
	maFunc
;

2186 
	mnFunc
;

2199 #i‡
SQLITE_MAX_VARIABLE_NUMBER
<=32767

2200 
i16
 
	tynV¨
;

2202 
	tynV¨
;

2268 
	sEx¥
 {

2269 
u8
 
	m›
;

2270 
	mafföôy
;

2271 
u32
 
	mÊags
;

2273 *
	mzTokí
;

2274 
	miVÆue
;

2275 } 
	mu
;

2282 
Ex¥
 *
	mpLe·
;

2283 
Ex¥
 *
	mpRight
;

2285 
Ex¥Li°
 *
	mpLi°
;

2286 
Sñe˘
 *
	mpSñe˘
;

2287 } 
	mx
;

2294 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

2295 
	mnHeight
;

2297 
	miTabÀ
;

2301 
ynV¨
 
	miCﬁumn
;

2303 
i16
 
	miAgg
;

2304 
i16
 
	miRightJoöTabÀ
;

2305 
u8
 
	m›2
;

2308 
AggInfo
 *
	mpAggInfo
;

2309 
TabÀ
 *
	mpTab
;

2315 
	#EP_FromJoö
 0x000001

	)

2316 
	#EP_Agg
 0x000002

	)

2317 
	#EP_Resﬁved
 0x000004

	)

2318 
	#EP_Eº‹
 0x000008

	)

2319 
	#EP_Di°ö˘
 0x000010

	)

2320 
	#EP_V¨Sñe˘
 0x000020

	)

2321 
	#EP_DblQuŸed
 0x000040

	)

2322 
	#EP_InfixFunc
 0x000080

	)

2323 
	#EP_Cﬁœã
 0x000100

	)

2324 
	#EP_Gíîic
 0x000200

	)

2325 
	#EP_I¡VÆue
 0x000400

	)

2326 
	#EP_xIsSñe˘
 0x000800

	)

2327 
	#EP_Skù
 0x001000

	)

2328 
	#EP_Redu˚d
 0x002000

	)

2329 
	#EP_TokíO∆y
 0x004000

	)

2330 
	#EP_Sètic
 0x008000

	)

2331 
	#EP_MemTokí
 0x010000

	)

2332 
	#EP_NoRedu˚
 0x020000

	)

2333 
	#EP_U∆ikñy
 0x040000

	)

2334 
	#EP_C⁄°Func
 0x080000

	)

2335 
	#EP_C™BeNuŒ
 0x100000

	)

2336 
	#EP_Subquîy
 0x200000

	)

2337 
	#EP_Alüs
 0x400000

	)

2342 
	#EP_Pr›ag©e
 (
EP_Cﬁœã
|
EP_Subquîy
Ë

	)

2348 
	#Ex¥HasPr›îty
(
E
,
P
Ë(((E)->
Êags
&(P))!=0)

	)

2349 
	#Ex¥HasAŒPr›îty
(
E
,
P
Ë(((E)->
Êags
&(P))==(P))

	)

2350 
	#Ex¥SëPr›îty
(
E
,
P
Ë(E)->
Êags
|=(P)

	)

2351 
	#Ex¥CÀ¨Pr›îty
(
E
,
P
Ë(E)->
Êags
&=~(P)

	)

2357 #ifde‡
SQLITE_DEBUG


2358 
	#Ex¥SëVVAPr›îty
(
E
,
P
Ë(E)->
Êags
|=(P)

	)

2360 
	#Ex¥SëVVAPr›îty
(
E
,
P
)

	)

2368 
	#EXPR_FULLSIZE
 (
Ex¥
Ë

	)

2369 
	#EXPR_REDUCEDSIZE
 
	`off£tof
(
Ex¥
,
iTabÀ
Ë

	)

2370 
	#EXPR_TOKENONLYSIZE
 
	`off£tof
(
Ex¥
,
pLe·
Ë

	)

2376 
	#EXPRDUP_REDUCE
 0x0001

	)

2394 
	sEx¥Li°
 {

2395 
	mnEx¥
;

2396 
	sEx¥Li°_ôem
 {

2397 
Ex¥
 *
	mpEx¥
;

2398 *
	mzName
;

2399 *
	mzS∑n
;

2400 
u8
 
	ms‹tOrdî
;

2401 
	md⁄e
 :1;

2402 
	mbS∑nIsTab
 :1;

2403 
	mªußbÀ
 :1;

2406 
u16
 
	miOrdîByCﬁ
;

2407 
u16
 
	miAlüs
;

2408 } 
	mx
;

2409 
	miC⁄°Ex¥Reg
;

2410 } 
	mu
;

2411 } *
	ma
;

2419 
	sEx¥S∑n
 {

2420 
Ex¥
 *
	mpEx¥
;

2421 c⁄° *
	mzSèπ
;

2422 c⁄° *
	mzEnd
;

2440 
	sIdLi°
 {

2441 
	sIdLi°_ôem
 {

2442 *
	mzName
;

2443 
	midx
;

2444 } *
	ma
;

2445 
	mnId
;

2455 #ifde‡
SQLITE_BITMASK_TYPE


2456 
SQLITE_BITMASK_TYPE
 
	tBômask
;

2458 
u64
 
	tBômask
;

2464 
	#BMS
 (()((
Bômask
)*8))

	)

2469 
	#MASKBIT
(
n
Ë(((
Bômask
)1)<<“))

	)

2470 
	#MASKBIT32
(
n
Ë((()1)<<“))

	)

2471 
	#ALLBITS
 ((
Bômask
)-1)

	)

2492 
	sSrcLi°
 {

2493 
	mnSrc
;

2494 
u32
 
	mnAŒoc
;

2495 
	sSrcLi°_ôem
 {

2496 
Schema
 *
	mpSchema
;

2497 *
	mzD©aba£
;

2498 *
	mzName
;

2499 *
	mzAlüs
;

2500 
TabÀ
 *
	mpTab
;

2501 
Sñe˘
 *
	mpSñe˘
;

2502 
	maddrFûlSub
;

2503 
	mªgRëu∫
;

2504 
	mªgResu…
;

2506 
u8
 
	mjoöty≥
;

2507 
	mnŸIndexed
 :1;

2508 
	misIndexedBy
 :1;

2509 
	misTabFunc
 :1;

2510 
	misC‹ªœãd
 :1;

2511 
	mvüC‹outöe
 :1;

2512 
	misRecursive
 :1;

2513 } 
	mfg
;

2514 #i‚de‡
SQLITE_OMIT_EXPLAIN


2515 
u8
 
	miSñe˘Id
;

2517 
	miCurs‹
;

2518 
Ex¥
 *
	mpOn
;

2519 
IdLi°
 *
	mpUsög
;

2520 
Bômask
 
	mcﬁU£d
;

2522 *
	mzIndexedBy
;

2523 
Ex¥Li°
 *
	mpFuncArg
;

2524 } 
	mu1
;

2525 
Index
 *
	mpIBIndex
;

2526 } 
	ma
[1];

2532 
	#JT_INNER
 0x0001

	)

2533 
	#JT_CROSS
 0x0002

	)

2534 
	#JT_NATURAL
 0x0004

	)

2535 
	#JT_LEFT
 0x0008

	)

2536 
	#JT_RIGHT
 0x0010

	)

2537 
	#JT_OUTER
 0x0020

	)

2538 
	#JT_ERROR
 0x0040

	)

2548 
	#WHERE_ORDERBY_NORMAL
 0x0000

	)

2549 
	#WHERE_ORDERBY_MIN
 0x0001

	)

2550 
	#WHERE_ORDERBY_MAX
 0x0002

	)

2551 
	#WHERE_ONEPASS_DESIRED
 0x0004

	)

2552 
	#WHERE_ONEPASS_MULTIROW
 0x0008

	)

2553 
	#WHERE_DUPLICATES_OK
 0x0010

	)

2554 
	#WHERE_OR_SUBCLAUSE
 0x0020

	)

2556 
	#WHERE_GROUPBY
 0x0040

	)

2557 
	#WHERE_DISTINCTBY
 0x0080

	)

2558 
	#WHERE_WANT_DISTINCT
 0x0100

	)

2559 
	#WHERE_SORTBYGROUP
 0x0200

	)

2560 
	#WHERE_SEEK_TABLE
 0x0400

	)

2561 
	#WHERE_ORDERBY_LIMIT
 0x0800

	)

2564 
	#WHERE_USE_LIMIT
 0x4000

	)

2569 
	#WHERE_DISTINCT_NOOP
 0

	)

2570 
	#WHERE_DISTINCT_UNIQUE
 1

	)

2571 
	#WHERE_DISTINCT_ORDERED
 2

	)

2572 
	#WHERE_DISTINCT_UNORDERED
 3

	)

2595 
	sNameC⁄ãxt
 {

2596 
P¨£
 *
	mpP¨£
;

2597 
SrcLi°
 *
	mpSrcLi°
;

2598 
Ex¥Li°
 *
	mpELi°
;

2599 
AggInfo
 *
	mpAggInfo
;

2600 
NameC⁄ãxt
 *
	mpNext
;

2601 
	mnRef
;

2602 
	mnEº
;

2603 
u16
 
	mncFœgs
;

2614 
	#NC_AŒowAgg
 0x0001

	)

2615 
	#NC_P¨tIdx
 0x0002

	)

2616 
	#NC_IsCheck
 0x0004

	)

2617 
	#NC_InAggFunc
 0x0008

	)

2618 
	#NC_HasAgg
 0x0010

	)

2619 
	#NC_IdxEx¥
 0x0020

	)

2620 
	#NC_V¨Sñe˘
 0x0040

	)

2621 
	#NC_MöMaxAgg
 0x1000

	)

2643 
	sSñe˘
 {

2644 
Ex¥Li°
 *
	mpELi°
;

2645 
u8
 
	m›
;

2646 
LogE°
 
	mnSñe˘Row
;

2647 
u32
 
	m£lFœgs
;

2648 
	miLimô
, 
	miOff£t
;

2649 #i‡
SELECTTRACE_ENABLED


2650 
	mzSñName
[12];

2652 
	maddrO≥nEphm
[2];

2653 
SrcLi°
 *
	mpSrc
;

2654 
Ex¥
 *
	mpWhîe
;

2655 
Ex¥Li°
 *
	mpGroupBy
;

2656 
Ex¥
 *
	mpHavög
;

2657 
Ex¥Li°
 *
	mpOrdîBy
;

2658 
Sñe˘
 *
	mpPri‹
;

2659 
Sñe˘
 *
	mpNext
;

2660 
Ex¥
 *
	mpLimô
;

2661 
Ex¥
 *
	mpOff£t
;

2662 
Wôh
 *
	mpWôh
;

2674 
	#SF_Di°ö˘
 0x00001

	)

2675 
	#SF_AŒ
 0x00002

	)

2676 
	#SF_Resﬁved
 0x00004

	)

2677 
	#SF_Aggªg©e
 0x00008

	)

2678 
	#SF_HasAgg
 0x00010

	)

2679 
	#SF_U£sEphemîÆ
 0x00020

	)

2680 
	#SF_Ex∑nded
 0x00040

	)

2681 
	#SF_HasTy≥Info
 0x00080

	)

2682 
	#SF_Compound
 0x00100

	)

2683 
	#SF_VÆues
 0x00200

	)

2684 
	#SF_Mu…iVÆue
 0x00400

	)

2685 
	#SF_Ne°edFrom
 0x00800

	)

2686 
	#SF_MöMaxAgg
 0x01000

	)

2687 
	#SF_Recursive
 0x02000

	)

2688 
	#SF_FixedLimô
 0x04000

	)

2689 
	#SF_MaybeC⁄vît
 0x08000

	)

2690 
	#SF_C⁄vîãd
 0x10000

	)

2691 
	#SF_In˛udeHiddí
 0x20000

	)

2758 
	#SRT_Uni⁄
 1

	)

2759 
	#SRT_Ex˚±
 2

	)

2760 
	#SRT_Exi°s
 3

	)

2761 
	#SRT_Disˇrd
 4

	)

2762 
	#SRT_Fifo
 5

	)

2763 
	#SRT_Di°Fifo
 6

	)

2764 
	#SRT_Queue
 7

	)

2765 
	#SRT_Di°Queue
 8

	)

2768 
	#Ign‹abÀOrdîby
(
X
Ë((X->
eDe°
)<=
SRT_Di°Queue
)

	)

2770 
	#SRT_Ouçut
 9

	)

2771 
	#SRT_Mem
 10

	)

2772 
	#SRT_Së
 11

	)

2773 
	#SRT_EphemTab
 12

	)

2774 
	#SRT_C‹outöe
 13

	)

2775 
	#SRT_TabÀ
 14

	)

2781 
	sSñe˘De°
 {

2782 
u8
 
	meDe°
;

2783 
	maffSd°
;

2784 
	miSDP¨m
;

2785 
	miSd°
;

2786 
	mnSd°
;

2787 
Ex¥Li°
 *
	mpOrdîBy
;

2799 
	sAutoöcInfo
 {

2800 
AutoöcInfo
 *
	mpNext
;

2801 
TabÀ
 *
	mpTab
;

2802 
	miDb
;

2803 
	mªgCå
;

2809 #i‚de‡
SQLITE_N_COLCACHE


2810 
	#SQLITE_N_COLCACHE
 10

	)

2831 
	sTriggîPrg
 {

2832 
Triggî
 *
	mpTriggî
;

2833 
TriggîPrg
 *
	mpNext
;

2834 
SubProgøm
 *
	mpProgøm
;

2835 
	m‹c⁄f
;

2836 
u32
 
	maCﬁmask
[2];

2842 #i‡
SQLITE_MAX_ATTACHED
>30

2843 
	tyDbMask
[(
SQLITE_MAX_ATTACHED
+9)/8];

2844 
	#DbMaskTe°
(
M
,
I
Ë(((M)[(I)/8]&(1<<((I)&7)))!=0)

	)

2845 
	#DbMaskZîo
(
M
Ë
	`mem£t
((M),0,(M))

	)

2846 
	#DbMaskSë
(
M
,
I
Ë(M)[(I)/8]|=(1<<((I)&7))

	)

2847 
	#DbMaskAŒZîo
(
M
Ë
	`sqlôe3DbMaskAŒZîo
(M)

	)

2848 
	#DbMaskN⁄Zîo
(
M
Ë(
	`sqlôe3DbMaskAŒZîo
(M)==0)

	)

2850 
	tyDbMask
;

2851 
	#DbMaskTe°
(
M
,
I
Ë(((M)&(((
yDbMask
)1)<<(I)))!=0)

	)

2852 
	#DbMaskZîo
(
M
Ë(M)=0

	)

2853 
	#DbMaskSë
(
M
,
I
Ë(M)|=(((
yDbMask
)1)<<(I))

	)

2854 
	#DbMaskAŒZîo
(
M
Ë(M)==0

	)

2855 
	#DbMaskN⁄Zîo
(
M
Ë(M)!=0

	)

2874 
	sP¨£
 {

2875 
sqlôe3
 *
	mdb
;

2876 *
	mzEºMsg
;

2877 
Vdbe
 *
	mpVdbe
;

2878 
	mrc
;

2879 
u8
 
	mcﬁNamesSë
;

2880 
u8
 
	mcheckSchema
;

2881 
u8
 
	m√°ed
;

2882 
u8
 
	mnTempReg
;

2883 
u8
 
	misMu…iWrôe
;

2884 
u8
 
	mmayAb‹t
;

2885 
u8
 
	mhasCompound
;

2886 
u8
 
	mokC⁄°Fa˘‹
;

2887 
u8
 
	mdißbÀLookaside
;

2888 
u8
 
	mnCﬁCache
;

2889 
	maTempReg
[8];

2890 
	mnR™geReg
;

2891 
	miR™geReg
;

2892 
	mnEº
;

2893 
	mnTab
;

2894 
	mnMem
;

2895 
	mnSë
;

2896 
	mnOn˚
;

2897 
	mnOpAŒoc
;

2898 
	mszOpAŒoc
;

2899 
	miFixedOp
;

2900 
	mckBa£
;

2901 
	miSñfTab
;

2902 
	miCacheLevñ
;

2903 
	miCacheC¡
;

2904 
	mnLabñ
;

2905 *
	maLabñ
;

2906 
	syCﬁCache
 {

2907 
	miTabÀ
;

2908 
i16
 
	miCﬁumn
;

2909 
u8
 
	mãmpReg
;

2910 
	miLevñ
;

2911 
	miReg
;

2912 
	mÃu
;

2913 } 
	maCﬁCache
[
SQLITE_N_COLCACHE
];

2914 
Ex¥Li°
 *
	mpC⁄°Ex¥
;

2915 
Tokí
 
	mc⁄°øötName
;

2916 
yDbMask
 
	mwrôeMask
;

2917 
yDbMask
 
	mcookõMask
;

2918 
	mcookõVÆue
[
SQLITE_MAX_ATTACHED
+2];

2919 
	mªgRowid
;

2920 
	mªgRoŸ
;

2921 
	mnMaxArg
;

2922 #i‡
SELECTTRACE_ENABLED


2923 
	mnSñe˘
;

2924 
	mnSñe˘Indít
;

2926 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


2927 
	mnTabÀLock
;

2928 
TabÀLock
 *
	maTabÀLock
;

2930 
AutoöcInfo
 *
	mpAöc
;

2933 
P¨£
 *
	mpT›Àvñ
;

2934 
TabÀ
 *
	mpTriggîTab
;

2935 
	maddrCrTab
;

2936 
u32
 
	mnQuîyLo›
;

2937 
u32
 
	mﬁdmask
;

2938 
u32
 
	m√wmask
;

2939 
u8
 
	meTriggîOp
;

2940 
u8
 
	meOrc⁄f
;

2941 
u8
 
	mdißbÀTriggîs
;

2950 
ynV¨
 
	mnV¨
;

2951 
	mnzV¨
;

2952 
u8
 
	miPkS‹tOrdî
;

2953 
u8
 
	mex∂aö
;

2954 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2955 
u8
 
	mde˛¨eVèb
;

2956 
	mnVèbLock
;

2958 
	mnAlüs
;

2959 
	mnHeight
;

2960 #i‚de‡
SQLITE_OMIT_EXPLAIN


2961 
	miSñe˘Id
;

2962 
	miNextSñe˘Id
;

2964 **
	mazV¨
;

2965 
Vdbe
 *
	mpRïª∑ª
;

2966 c⁄° *
	mzTaû
;

2967 
TabÀ
 *
	mpNewTabÀ
;

2968 
Triggî
 *
	mpNewTriggî
;

2969 c⁄° *
	mzAuthC⁄ãxt
;

2970 
Tokí
 
	msNameTokí
;

2971 
Tokí
 
	msLa°Tokí
;

2972 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2973 
Tokí
 
	msArg
;

2974 
TabÀ
 **
	m≠VèbLock
;

2976 
TabÀ
 *
	mpZombõTab
;

2977 
TriggîPrg
 *
	mpTriggîPrg
;

2978 
Wôh
 *
	mpWôh
;

2979 
Wôh
 *
	mpWôhToFªe
;

2985 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


2986 
	#IN_DECLARE_VTAB
 0

	)

2988 
	#IN_DECLARE_VTAB
 (
pP¨£
->
de˛¨eVèb
)

	)

2995 
	sAuthC⁄ãxt
 {

2996 c⁄° *
	mzAuthC⁄ãxt
;

2997 
P¨£
 *
	mpP¨£
;

3012 
	#OPFLAG_NCHANGE
 0x01

	)

3014 
	#OPFLAG_EPHEM
 0x01

	)

3015 
	#OPFLAG_LASTROWID
 0x02

	)

3016 
	#OPFLAG_ISUPDATE
 0x04

	)

3017 
	#OPFLAG_APPEND
 0x08

	)

3018 
	#OPFLAG_USESEEKRESULT
 0x10

	)

3019 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


3020 
	#OPFLAG_ISNOOP
 0x40

	)

3022 
	#OPFLAG_LENGTHARG
 0x40

	)

3023 
	#OPFLAG_TYPEOFARG
 0x80

	)

3024 
	#OPFLAG_BULKCSR
 0x01

	)

3025 
	#OPFLAG_SEEKEQ
 0x02

	)

3026 
	#OPFLAG_FORDELETE
 0x08

	)

3027 
	#OPFLAG_P2ISREG
 0x10

	)

3028 
	#OPFLAG_PERMUTE
 0x01

	)

3029 
	#OPFLAG_SAVEPOSITION
 0x02

	)

3030 
	#OPFLAG_AUXDELETE
 0x04

	)

3047 
	sTriggî
 {

3048 *
	mzName
;

3049 *
	mèbÀ
;

3050 
u8
 
	m›
;

3051 
u8
 
	må_tm
;

3052 
Ex¥
 *
	mpWhí
;

3053 
IdLi°
 *
	mpCﬁumns
;

3055 
Schema
 *
	mpSchema
;

3056 
Schema
 *
	mpTabSchema
;

3057 
TriggîSãp
 *
	m°ï_li°
;

3058 
Triggî
 *
	mpNext
;

3068 
	#TRIGGER_BEFORE
 1

	)

3069 
	#TRIGGER_AFTER
 2

	)

3109 
	sTriggîSãp
 {

3110 
u8
 
	m›
;

3111 
u8
 
	m‹c⁄f
;

3112 
Triggî
 *
	mpTrig
;

3113 
Sñe˘
 *
	mpSñe˘
;

3114 *
	mzT¨gë
;

3115 
Ex¥
 *
	mpWhîe
;

3116 
Ex¥Li°
 *
	mpEx¥Li°
;

3117 
IdLi°
 *
	mpIdLi°
;

3118 
TriggîSãp
 *
	mpNext
;

3119 
TriggîSãp
 *
	mpLa°
;

3127 
DbFixî
 
	tDbFixî
;

3128 
	sDbFixî
 {

3129 
P¨£
 *
	mpP¨£
;

3130 
Schema
 *
	mpSchema
;

3131 
	mbV¨O∆y
;

3132 c⁄° *
	mzDb
;

3133 c⁄° *
	mzTy≥
;

3134 c⁄° 
Tokí
 *
	mpName
;

3141 
	sSåAccum
 {

3142 
sqlôe3
 *
	mdb
;

3143 *
	mzBa£
;

3144 *
	mzText
;

3145 
u32
 
	mnCh¨
;

3146 
u32
 
	mnAŒoc
;

3147 
u32
 
	mmxAŒoc
;

3148 
u8
 
	maccEº‹
;

3149 
u8
 
	m¥ötfFœgs
;

3151 
	#STRACCUM_NOMEM
 1

	)

3152 
	#STRACCUM_TOOBIG
 2

	)

3153 
	#SQLITE_PRINTF_INTERNAL
 0x01

	)

3154 
	#SQLITE_PRINTF_SQLFUNC
 0x02

	)

3155 
	#SQLITE_PRINTF_MALLOCED
 0x04

	)

3157 
	#isMÆlo˚d
(
X
Ë(((X)->
¥ötfFœgs
 & 
SQLITE_PRINTF_MALLOCED
)!=0)

	)

3165 
sqlôe3
 *
	mdb
;

3166 **
	mpzEºMsg
;

3167 
	miDb
;

3168 
	mrc
;

3169 } 
	tInôD©a
;

3176 
	sSqlôe3C⁄fig
 {

3177 
	mbMem°©
;

3178 
	mbC‹eMuãx
;

3179 
	mbFuŒMuãx
;

3180 
	mbO≥nUri
;

3181 
	mbU£Cis
;

3182 
	mmxSåÀn
;

3183 
	m√vîC‹ru±
;

3184 
	mszLookaside
;

3185 
	mnLookaside
;

3186 
	mnStmtSpûl
;

3187 
sqlôe3_mem_mëhods
 
	mm
;

3188 
sqlôe3_muãx_mëhods
 
	mmuãx
;

3189 
sqlôe3_pˇche_mëhods2
 
	mpˇche2
;

3190 *
	mpHóp
;

3191 
	mnHóp
;

3192 
	mmnReq
, 
	mmxReq
;

3193 
sqlôe3_öt64
 
	mszMm≠
;

3194 
sqlôe3_öt64
 
	mmxMm≠
;

3195 *
	mpS¸©ch
;

3196 
	mszS¸©ch
;

3197 
	mnS¸©ch
;

3198 *
	mpPage
;

3199 
	mszPage
;

3200 
	mnPage
;

3201 
	mmxP¨£rSèck
;

3202 
	msh¨edCacheE«bÀd
;

3203 
u32
 
	mszPma
;

3206 
	misInô
;

3207 
	möProgªss
;

3208 
	misMuãxInô
;

3209 
	misMÆlocInô
;

3210 
	misPCacheInô
;

3211 
	mnRefInôMuãx
;

3212 
sqlôe3_muãx
 *
	mpInôMuãx
;

3213 (*
	mxLog
)(*,,const *);

3214 *
	mpLogArg
;

3215 #ifde‡
SQLITE_ENABLE_SQLLOG


3216 (*
	mxSqŒog
)(*,
	msqlôe3
*,const *, );

3217 *
	mpSqŒogArg
;

3219 #ifde‡
SQLITE_VDBE_COVERAGE


3223 (*
	mxVdbeBønch
)(*,
	miSrcLöe
,
u8
 
	meThis
,u8 
	meMx
);

3224 *
	mpVdbeBønchArg
;

3226 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


3227 (*
	mxTe°CÆlback
)();

3229 
	mbLoˇ…imeFau…
;

3248 
	#CORRUPT_DB
 (
sqlôe3C⁄fig
.
√vîC‹ru±
==0)

	)

3253 
	sWÆkî
 {

3254 
P¨£
 *
	mpP¨£
;

3255 (*
	mxEx¥CÆlback
)(
	mWÆkî
*, 
	mEx¥
*);

3256 (*
	mxSñe˘CÆlback
)(
	mWÆkî
*,
	mSñe˘
*);

3257 (*
	mxSñe˘CÆlback2
)(
	mWÆkî
*,
	mSñe˘
*);

3258 
	mwÆkîDïth
;

3259 
u8
 
	meCode
;

3261 
NameC⁄ãxt
 *
	mpNC
;

3262 
	mn
;

3263 
	miCur
;

3264 
SrcLi°
 *
	mpSrcLi°
;

3265 
SrcCou¡
 *
	mpSrcCou¡
;

3266 
CCurHöt
 *
	mpCCurHöt
;

3267 *
	maiCﬁ
;

3268 
IdxCovî
 *
	mpIdxCovî
;

3269 } 
	mu
;

3273 
sqlôe3WÆkEx¥
(
WÆkî
*, 
Ex¥
*);

3274 
sqlôe3WÆkEx¥Li°
(
WÆkî
*, 
Ex¥Li°
*);

3275 
sqlôe3WÆkSñe˘
(
WÆkî
*, 
Sñe˘
*);

3276 
sqlôe3WÆkSñe˘Ex¥
(
WÆkî
*, 
Sñe˘
*);

3277 
sqlôe3WÆkSñe˘From
(
WÆkî
*, 
Sñe˘
*);

3278 
sqlôe3Ex¥WÆkNo›
(
WÆkî
*, 
Ex¥
*);

3284 
	#WRC_C⁄töue
 0

	)

3285 
	#WRC_Pru√
 1

	)

3286 
	#WRC_Ab‹t
 2

	)

3292 
	sWôh
 {

3293 
	mnCã
;

3294 
Wôh
 *
	mpOuãr
;

3295 
	sCã
 {

3296 *
	mzName
;

3297 
Ex¥Li°
 *
	mpCﬁs
;

3298 
Sñe˘
 *
	mpSñe˘
;

3299 c⁄° *
	mzCãEº
;

3300 } 
	ma
[1];

3303 #ifde‡
SQLITE_DEBUG


3308 
	sTªeVõw
 {

3309 
	miLevñ
;

3310 
u8
 
	mbLöe
[100];

3318 
	#SQLITE_SKIP_UTF8
(
zIn
) { \

3319 if–(*(
zIn
++))>=0xc0 ){ \

3320  (*
zIn
 & 0xc0)==0x80 ){ zIn++; } \

3322 }

	)

3331 
sqlôe3C‹ru±Eº‹
();

3332 
sqlôe3Misu£Eº‹
();

3333 
sqlôe3C™t›íEº‹
();

3334 
	#SQLITE_CORRUPT_BKPT
 
	`sqlôe3C‹ru±Eº‹
(
__LINE__
)

	)

3335 
	#SQLITE_MISUSE_BKPT
 
	`sqlôe3Misu£Eº‹
(
__LINE__
)

	)

3336 
	#SQLITE_CANTOPEN_BKPT
 
	`sqlôe3C™t›íEº‹
(
__LINE__
)

	)

3337 #ifde‡
SQLITE_DEBUG


3338 
sqlôe3NomemEº‹
();

3339 
sqlôe3I€ºnomemEº‹
();

3340 
	#SQLITE_NOMEM_BKPT
 
	`sqlôe3NomemEº‹
(
__LINE__
)

	)

3341 
	#SQLITE_IOERR_NOMEM_BKPT
 
	`sqlôe3I€ºnomemEº‹
(
__LINE__
)

	)

3343 
	#SQLITE_NOMEM_BKPT
 
SQLITE_NOMEM


	)

3344 
	#SQLITE_IOERR_NOMEM_BKPT
 
SQLITE_IOERR_NOMEM


	)

3350 #i‡
deföed
(
SQLITE_OMIT_VIRTUALTABLE
)

3351 #unde‡
SQLITE_ENABLE_FTS3


3352 #unde‡
SQLITE_ENABLE_FTS4


3360 #i‡
deföed
(
SQLITE_ENABLE_FTS4
Ë&& !deföed(
SQLITE_ENABLE_FTS3
)

3361 
	#SQLITE_ENABLE_FTS3
 1

	)

3368 #i‡!
deföed
(
SQLITE_ASCII
) || \

3369 (
deföed
(
SQLITE_ENABLE_FTS3
Ë&& 
	$deföed
(
SQLITE_AMALGAMATION
))

3370 
	~<˘y≥.h
>

3378 #ifde‡
SQLITE_ASCII


3379 
	#sqlôe3Touµî
(
x
Ë((x)&~(
sqlôe3Cty≥M≠
[()(x)]&0x20))

	)

3380 
	#sqlôe3Is•a˚
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x01)

	)

3381 
	#sqlôe3Iß um
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x06)

	)

3382 
	#sqlôe3IßÕha
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x02)

	)

3383 
	#sqlôe3Isdigô
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x04)

	)

3384 
	#sqlôe3Isxdigô
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x08)

	)

3385 
	#sqlôe3Tﬁowî
(
x
Ë(
sqlôe3UµîToLowî
[()(x)])

	)

3386 
	#sqlôe3IsquŸe
(
x
Ë(
sqlôe3Cty≥M≠
[()(x)]&0x80)

	)

3388 
	#sqlôe3Touµî
(
x
Ë
	`touµî
(()(x))

	)

3389 
	#sqlôe3Is•a˚
(
x
Ë
	`is•a˚
(()(x))

	)

3390 
	#sqlôe3Iß um
(
x
Ë
	`iß um
(()(x))

	)

3391 
	#sqlôe3IßÕha
(
x
Ë
	`ißÕha
(()(x))

	)

3392 
	#sqlôe3Isdigô
(
x
Ë
	`isdigô
(()(x))

	)

3393 
	#sqlôe3Isxdigô
(
x
Ë
	`isxdigô
(()(x))

	)

3394 
	#sqlôe3Tﬁowî
(
x
Ë
	`tﬁowî
(()(x))

	)

3395 
	#sqlôe3IsquŸe
(
x
Ë((x)=='"'||(x)=='\''||(x)=='['||(x)=='`')

	)

3397 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


3398 
	`sqlôe3IsIdCh¨
(
u8
);

3404 
	`sqlôe3SåICmp
(const *,const *);

3405 
	`sqlôe3SåÀn30
(const *);

3406 *
	`sqlôe3CﬁumnTy≥
(
Cﬁumn
*,*);

3407 
	#sqlôe3SåNICmp
 
sqlôe3_°∫icmp


	)

3409 
	`sqlôe3MÆlocInô
();

3410 
	`sqlôe3MÆlocEnd
();

3411 *
	`sqlôe3MÆloc
(
u64
);

3412 *
	`sqlôe3MÆlocZîo
(
u64
);

3413 *
	`sqlôe3DbMÆlocZîo
(
sqlôe3
*, 
u64
);

3414 *
	`sqlôe3DbMÆlocRaw
(
sqlôe3
*, 
u64
);

3415 *
	`sqlôe3DbMÆlocRawNN
(
sqlôe3
*, 
u64
);

3416 *
	`sqlôe3DbSåDup
(
sqlôe3
*,const *);

3417 *
	`sqlôe3DbSåNDup
(
sqlôe3
*,c⁄° *, 
u64
);

3418 *
	`sqlôe3RóŒoc
(*, 
u64
);

3419 *
	`sqlôe3DbRóŒocOrFªe
(
sqlôe3
 *, *, 
u64
);

3420 *
	`sqlôe3DbRóŒoc
(
sqlôe3
 *, *, 
u64
);

3421 
	`sqlôe3DbFªe
(
sqlôe3
*, *);

3422 
	`sqlôe3MÆlocSize
(*);

3423 
	`sqlôe3DbMÆlocSize
(
sqlôe3
*, *);

3424 *
	`sqlôe3S¸©chMÆloc
();

3425 
	`sqlôe3S¸©chFªe
(*);

3426 *
	`sqlôe3PageMÆloc
();

3427 
	`sqlôe3PageFªe
(*);

3428 
	`sqlôe3MemSëDeÁu…
();

3429 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


3430 
	`sqlôe3BíignMÆlocHooks
((*)(), (*)());

3432 
	`sqlôe3HópNóæyFuŒ
();

3442 #ifde‡
SQLITE_USE_ALLOCA


3443 
	#sqlôe3SèckAŒocRaw
(
D
,
N
Ë
	`Æloˇ
(N)

	)

3444 
	#sqlôe3SèckAŒocZîo
(
D
,
N
Ë
	`mem£t
(
	`Æloˇ
(N), 0, N)

	)

3445 
	#sqlôe3SèckFªe
(
D
,
P
)

	)

3447 
	#sqlôe3SèckAŒocRaw
(
D
,
N
Ë
	`sqlôe3DbMÆlocRaw
(D,N)

	)

3448 
	#sqlôe3SèckAŒocZîo
(
D
,
N
Ë
	`sqlôe3DbMÆlocZîo
(D,N)

	)

3449 
	#sqlôe3SèckFªe
(
D
,
P
Ë
	`sqlôe3DbFªe
(D,P)

	)

3455 #ifde‡
SQLITE_ENABLE_MEMSYS5


3456 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys5
();

3457 #unde‡
SQLITE_ENABLE_MEMSYS3


3459 #ifde‡
SQLITE_ENABLE_MEMSYS3


3460 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys3
();

3464 #i‚de‡
SQLITE_MUTEX_OMIT


3465 
sqlôe3_muãx_mëhods
 c⁄° *
	`sqlôe3DeÁu…Muãx
();

3466 
sqlôe3_muãx_mëhods
 c⁄° *
	`sqlôe3No›Muãx
();

3467 
sqlôe3_muãx
 *
	`sqlôe3MuãxAŒoc
();

3468 
	`sqlôe3MuãxInô
();

3469 
	`sqlôe3MuãxEnd
();

3471 #i‡!
	`deföed
(
SQLITE_MUTEX_OMIT
Ë&& !deföed(
SQLITE_MUTEX_NOOP
)

3472 
	`sqlôe3Mem‹yB¨rõr
();

3474 
	#sqlôe3Mem‹yB¨rõr
()

	)

3477 
sqlôe3_öt64
 
	`sqlôe3SètusVÆue
();

3478 
	`sqlôe3SètusUp
(, );

3479 
	`sqlôe3SètusDown
(, );

3480 
	`sqlôe3SètusHighw©î
(, );

3483 
sqlôe3_muãx
 *
	`sqlôe3Pˇche1Muãx
();

3484 
sqlôe3_muãx
 *
	`sqlôe3MÆlocMuãx
();

3486 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


3487 
	`sqlôe3IsNaN
();

3489 
	#sqlôe3IsNaN
(
X
Ë0

	)

3496 
	sPrötfArgumíts
 {

3497 
nArg
;

3498 
nU£d
;

3499 
sqlôe3_vÆue
 **
≠Arg
;

3502 
	`sqlôe3VXPrötf
(
SåAccum
*, c⁄° *, 
va_li°
);

3503 
	`sqlôe3XPrötf
(
SåAccum
*, const *, ...);

3504 *
	`sqlôe3MPrötf
(
sqlôe3
*,const *, ...);

3505 *
	`sqlôe3VMPrötf
(
sqlôe3
*,c⁄° *, 
va_li°
);

3506 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
SQLITE_HAVE_OS_TRACE
)

3507 
	`sqlôe3DebugPrötf
(const *, ...);

3509 #i‡
	`deföed
(
SQLITE_TEST
)

3510 *
	`sqlôe3Te°TextToPå
(const *);

3513 #i‡
	`deföed
(
SQLITE_DEBUG
)

3514 
	`sqlôe3TªeVõwEx¥
(
TªeVõw
*, c⁄° 
Ex¥
*, 
u8
);

3515 
	`sqlôe3TªeVõwEx¥Li°
(
TªeVõw
*, c⁄° 
Ex¥Li°
*, 
u8
, const *);

3516 
	`sqlôe3TªeVõwSñe˘
(
TªeVõw
*, c⁄° 
Sñe˘
*, 
u8
);

3517 
	`sqlôe3TªeVõwWôh
(
TªeVõw
*, c⁄° 
Wôh
*, 
u8
);

3521 
	`sqlôe3SëSåög
(**, 
sqlôe3
*, const *);

3522 
	`sqlôe3Eº‹Msg
(
P¨£
*, const *, ...);

3523 
	`sqlôe3DequŸe
(*);

3524 
	`sqlôe3TokíInô
(
Tokí
*,*);

3525 
	`sqlôe3Keyw‹dCode
(const *, );

3526 
	`sqlôe3RunP¨£r
(
P¨£
*, const *, **);

3527 
	`sqlôe3FöishCodög
(
P¨£
*);

3528 
	`sqlôe3GëTempReg
(
P¨£
*);

3529 
	`sqlôe3Rñó£TempReg
(
P¨£
*,);

3530 
	`sqlôe3GëTempR™ge
(
P¨£
*,);

3531 
	`sqlôe3Rñó£TempR™ge
(
P¨£
*,,);

3532 
	`sqlôe3CÀ¨TempRegCache
(
P¨£
*);

3533 #ifde‡
SQLITE_DEBUG


3534 
	`sqlôe3NoTempsInR™ge
(
P¨£
*,,);

3536 
Ex¥
 *
	`sqlôe3Ex¥AŒoc
(
sqlôe3
*,,c⁄° 
Tokí
*,);

3537 
Ex¥
 *
	`sqlôe3Ex¥
(
sqlôe3
*,,const *);

3538 
	`sqlôe3Ex¥AâachSubåìs
(
sqlôe3
*,
Ex¥
*,Expr*,Expr*);

3539 
Ex¥
 *
	`sqlôe3PEx¥
(
P¨£
*, , Ex¥*, Ex¥*, c⁄° 
Tokí
*);

3540 
	`sqlôe3PEx¥AddSñe˘
(
P¨£
*, 
Ex¥
*, 
Sñe˘
*);

3541 
Ex¥
 *
	`sqlôe3Ex¥And
(
sqlôe3
*,Expr*, Expr*);

3542 
Ex¥
 *
	`sqlôe3Ex¥Fun˘i⁄
(
P¨£
*,
Ex¥Li°
*, 
Tokí
*);

3543 
	`sqlôe3Ex¥AssignV¨Numbî
(
P¨£
*, 
Ex¥
*);

3544 
	`sqlôe3Ex¥Dñëe
(
sqlôe3
*, 
Ex¥
*);

3545 
Ex¥Li°
 *
	`sqlôe3Ex¥Li°Aµíd
(
P¨£
*,Ex¥Li°*,
Ex¥
*);

3546 
	`sqlôe3Ex¥Li°SëS‹tOrdî
(
Ex¥Li°
*,);

3547 
	`sqlôe3Ex¥Li°SëName
(
P¨£
*,
Ex¥Li°
*,
Tokí
*,);

3548 
	`sqlôe3Ex¥Li°SëS∑n
(
P¨£
*,
Ex¥Li°
*,
Ex¥S∑n
*);

3549 
	`sqlôe3Ex¥Li°Dñëe
(
sqlôe3
*, 
Ex¥Li°
*);

3550 
u32
 
	`sqlôe3Ex¥Li°Fœgs
(c⁄° 
Ex¥Li°
*);

3551 
	`sqlôe3Inô
(
sqlôe3
*, **);

3552 
	`sqlôe3InôCÆlback
(*, , **, **);

3553 
	`sqlôe3Pøgma
(
P¨£
*,
Tokí
*,Token*,Token*,);

3554 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
sqlôe3
*);

3555 
	`sqlôe3Re£tO√Schema
(
sqlôe3
*,);

3556 
	`sqlôe3Cﬁœp£D©aba£Aºay
(
sqlôe3
*);

3557 
	`sqlôe3CommôI¡î«lCh™ges
(
sqlôe3
*);

3558 
	`sqlôe3DñëeCﬁumnNames
(
sqlôe3
*,
TabÀ
*);

3559 
	`sqlôe3CﬁumnsFromEx¥Li°
(
P¨£
*,
Ex¥Li°
*,
i16
*,
Cﬁumn
**);

3560 
	`sqlôe3Sñe˘AddCﬁumnTy≥AndCﬁœti⁄
(
P¨£
*,
TabÀ
*,
Sñe˘
*);

3561 
TabÀ
 *
	`sqlôe3Resu…SëOfSñe˘
(
P¨£
*,
Sñe˘
*);

3562 
	`sqlôe3O≥nMa°îTabÀ
(
P¨£
 *, );

3563 
Index
 *
	`sqlôe3Prim¨yKeyIndex
(
TabÀ
*);

3564 
i16
 
	`sqlôe3CﬁumnOfIndex
(
Index
*, i16);

3565 
	`sqlôe3SèπTabÀ
(
P¨£
*,
Tokí
*,Token*,,,,);

3566 #i‡
SQLITE_ENABLE_HIDDEN_COLUMNS


3567 
	`sqlôe3CﬁumnPr›îtõsFromName
(
TabÀ
*, 
Cﬁumn
*);

3569 
	#sqlôe3CﬁumnPr›îtõsFromName
(
T
,
C
Ë

	)

3571 
	`sqlôe3AddCﬁumn
(
P¨£
*,
Tokí
*,Token*);

3572 
	`sqlôe3AddNŸNuŒ
(
P¨£
*, );

3573 
	`sqlôe3AddPrim¨yKey
(
P¨£
*, 
Ex¥Li°
*, , , );

3574 
	`sqlôe3AddCheckC⁄°øöt
(
P¨£
*, 
Ex¥
*);

3575 
	`sqlôe3AddDeÁu…VÆue
(
P¨£
*,
Ex¥S∑n
*);

3576 
	`sqlôe3AddCﬁœãTy≥
(
P¨£
*, 
Tokí
*);

3577 
	`sqlôe3EndTabÀ
(
P¨£
*,
Tokí
*,Tokí*,
u8
,
Sñe˘
*);

3578 
	`sqlôe3P¨£Uri
(const *,const *,*,

3579 
sqlôe3_vfs
**,**,**);

3580 
Båì
 *
	`sqlôe3DbNameToBåì
(
sqlôe3
*,const *);

3581 
	`sqlôe3CodeOn˚
(
P¨£
 *);

3583 #ifde‡
SQLITE_OMIT_BUILTIN_TEST


3584 
	#sqlôe3Fau…Sim
(
X
Ë
SQLITE_OK


	)

3586 
	`sqlôe3Fau…Sim
();

3589 
Bôvec
 *
	`sqlôe3BôvecCª©e
(
u32
);

3590 
	`sqlôe3BôvecTe°
(
Bôvec
*, 
u32
);

3591 
	`sqlôe3BôvecTe°NŸNuŒ
(
Bôvec
*, 
u32
);

3592 
	`sqlôe3BôvecSë
(
Bôvec
*, 
u32
);

3593 
	`sqlôe3BôvecCÀ¨
(
Bôvec
*, 
u32
, *);

3594 
	`sqlôe3BôvecDe°roy
(
Bôvec
*);

3595 
u32
 
	`sqlôe3BôvecSize
(
Bôvec
*);

3596 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


3597 
	`sqlôe3BôvecBuûtöTe°
(,*);

3600 
RowSë
 *
	`sqlôe3RowSëInô
(
sqlôe3
*, *, );

3601 
	`sqlôe3RowSëCÀ¨
(
RowSë
*);

3602 
	`sqlôe3RowSëIn£π
(
RowSë
*, 
i64
);

3603 
	`sqlôe3RowSëTe°
(
RowSë
*, 
iB©ch
, 
i64
);

3604 
	`sqlôe3RowSëNext
(
RowSë
*, 
i64
*);

3606 
	`sqlôe3Cª©eVõw
(
P¨£
*,
Tokí
*,Tokí*,Tokí*,
Ex¥Li°
*,
Sñe˘
*,,);

3608 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë|| !deföed(
SQLITE_OMIT_VIRTUALTABLE
)

3609 
	`sqlôe3VõwGëCﬁumnNames
(
P¨£
*,
TabÀ
*);

3611 
	#sqlôe3VõwGëCﬁumnNames
(
A
,
B
Ë0

	)

3614 #i‡
SQLITE_MAX_ATTACHED
>30

3615 
	`sqlôe3DbMaskAŒZîo
(
yDbMask
);

3617 
	`sqlôe3Dr›TabÀ
(
P¨£
*, 
SrcLi°
*, , );

3618 
	`sqlôe3CodeDr›TabÀ
(
P¨£
*, 
TabÀ
*, , );

3619 
	`sqlôe3DñëeTabÀ
(
sqlôe3
*, 
TabÀ
*);

3620 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


3621 
	`sqlôe3Autoö¸emítBegö
(
P¨£
 *
pP¨£
);

3622 
	`sqlôe3Autoö¸emítEnd
(
P¨£
 *
pP¨£
);

3624 
	#sqlôe3Autoö¸emítBegö
(
X
)

	)

3625 
	#sqlôe3Autoö¸emítEnd
(
X
)

	)

3627 
	`sqlôe3In£π
(
P¨£
*, 
SrcLi°
*, 
Sñe˘
*, 
IdLi°
*, );

3628 *
	`sqlôe3AºayAŒoˇã
(
sqlôe3
*,*,,*,*);

3629 
IdLi°
 *
	`sqlôe3IdLi°Aµíd
(
sqlôe3
*, IdLi°*, 
Tokí
*);

3630 
	`sqlôe3IdLi°Index
(
IdLi°
*,const *);

3631 
SrcLi°
 *
	`sqlôe3SrcLi°E∆¨ge
(
sqlôe3
*, SrcList*, , );

3632 
SrcLi°
 *
	`sqlôe3SrcLi°Aµíd
(
sqlôe3
*, SrcLi°*, 
Tokí
*, Token*);

3633 
SrcLi°
 *
	`sqlôe3SrcLi°AµídFromTîm
(
P¨£
*, SrcLi°*, 
Tokí
*, Token*,

3634 
Tokí
*, 
Sñe˘
*, 
Ex¥
*, 
IdLi°
*);

3635 
	`sqlôe3SrcLi°IndexedBy
(
P¨£
 *, 
SrcLi°
 *, 
Tokí
 *);

3636 
	`sqlôe3SrcLi°FuncArgs
(
P¨£
*, 
SrcLi°
*, 
Ex¥Li°
*);

3637 
	`sqlôe3IndexedByLookup
(
P¨£
 *, 
SrcLi°_ôem
 *);

3638 
	`sqlôe3SrcLi°Shi·JoöTy≥
(
SrcLi°
*);

3639 
	`sqlôe3SrcLi°AssignCurs‹s
(
P¨£
*, 
SrcLi°
*);

3640 
	`sqlôe3IdLi°Dñëe
(
sqlôe3
*, 
IdLi°
*);

3641 
	`sqlôe3SrcLi°Dñëe
(
sqlôe3
*, 
SrcLi°
*);

3642 
Index
 *
	`sqlôe3AŒoˇãIndexObje˘
(
sqlôe3
*,
i16
,,**);

3643 
	`sqlôe3Cª©eIndex
(
P¨£
*,
Tokí
*,Tokí*,
SrcLi°
*,
Ex¥Li°
*,,Token*,

3644 
Ex¥
*, , , 
u8
);

3645 
	`sqlôe3Dr›Index
(
P¨£
*, 
SrcLi°
*, );

3646 
	`sqlôe3Sñe˘
(
P¨£
*, 
Sñe˘
*, 
Sñe˘De°
*);

3647 
Sñe˘
 *
	`sqlôe3Sñe˘New
(
P¨£
*,
Ex¥Li°
*,
SrcLi°
*,
Ex¥
*,ExprList*,

3648 
Ex¥
*,
Ex¥Li°
*,
u32
,Expr*,Expr*);

3649 
	`sqlôe3Sñe˘Dñëe
(
sqlôe3
*, 
Sñe˘
*);

3650 
TabÀ
 *
	`sqlôe3SrcLi°Lookup
(
P¨£
*, 
SrcLi°
*);

3651 
	`sqlôe3IsRódO∆y
(
P¨£
*, 
TabÀ
*, );

3652 
	`sqlôe3O≥nTabÀ
(
P¨£
*, 
iCur
, 
iDb
, 
TabÀ
*, );

3653 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

3654 
Ex¥
 *
	`sqlôe3LimôWhîe
(
P¨£
*,
SrcLi°
*,Ex¥*,
Ex¥Li°
*,Expr*,Expr*,*);

3656 
	`sqlôe3DñëeFrom
(
P¨£
*, 
SrcLi°
*, 
Ex¥
*);

3657 
	`sqlôe3Upd©e
(
P¨£
*, 
SrcLi°
*, 
Ex¥Li°
*, 
Ex¥
*, );

3658 
WhîeInfo
 *
	`sqlôe3WhîeBegö
(
P¨£
*,
SrcLi°
*,
Ex¥
*,
Ex¥Li°
*,Ex¥Li°*,
u16
,);

3659 
	`sqlôe3WhîeEnd
(
WhîeInfo
*);

3660 
LogE°
 
	`sqlôe3WhîeOuçutRowCou¡
(
WhîeInfo
*);

3661 
	`sqlôe3WhîeIsDi°ö˘
(
WhîeInfo
*);

3662 
	`sqlôe3WhîeIsOrdîed
(
WhîeInfo
*);

3663 
	`sqlôe3WhîeOrdîedI¬îLo›
(
WhîeInfo
*);

3664 
	`sqlôe3WhîeIsS‹ãd
(
WhîeInfo
*);

3665 
	`sqlôe3WhîeC⁄töueLabñ
(
WhîeInfo
*);

3666 
	`sqlôe3WhîeBªakLabñ
(
WhîeInfo
*);

3667 
	`sqlôe3WhîeOkO√Pass
(
WhîeInfo
*, *);

3668 
	#ONEPASS_OFF
 0

	)

3669 
	#ONEPASS_SINGLE
 1

	)

3670 
	#ONEPASS_MULTI
 2

	)

3671 
	`sqlôe3Ex¥CodeLﬂdIndexCﬁumn
(
P¨£
*, 
Index
*, , , );

3672 
	`sqlôe3Ex¥CodeGëCﬁumn
(
P¨£
*, 
TabÀ
*, , , , 
u8
);

3673 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
P¨£
*, 
TabÀ
*, , , );

3674 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
Vdbe
*, 
TabÀ
*, , , );

3675 
	`sqlôe3Ex¥CodeMove
(
P¨£
*, , , );

3676 
	`sqlôe3Ex¥CacheSt‹e
(
P¨£
*, , , );

3677 
	`sqlôe3Ex¥CachePush
(
P¨£
*);

3678 
	`sqlôe3Ex¥CacheP›
(
P¨£
*);

3679 
	`sqlôe3Ex¥CacheRemove
(
P¨£
*, , );

3680 
	`sqlôe3Ex¥CacheCÀ¨
(
P¨£
*);

3681 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
P¨£
*, , );

3682 
	`sqlôe3Ex¥Code
(
P¨£
*, 
Ex¥
*, );

3683 
	`sqlôe3Ex¥CodeC›y
(
P¨£
*, 
Ex¥
*, );

3684 
	`sqlôe3Ex¥CodeFa˘‹abÀ
(
P¨£
*, 
Ex¥
*, );

3685 
	`sqlôe3Ex¥CodeAtInô
(
P¨£
*, 
Ex¥
*, , 
u8
);

3686 
	`sqlôe3Ex¥CodeTemp
(
P¨£
*, 
Ex¥
*, *);

3687 
	`sqlôe3Ex¥CodeT¨gë
(
P¨£
*, 
Ex¥
*, );

3688 
	`sqlôe3Ex¥CodeAndCache
(
P¨£
*, 
Ex¥
*, );

3689 
	`sqlôe3Ex¥CodeEx¥Li°
(
P¨£
*, 
Ex¥Li°
*, , , 
u8
);

3690 
	#SQLITE_ECEL_DUP
 0x01

	)

3691 
	#SQLITE_ECEL_FACTOR
 0x02

	)

3692 
	#SQLITE_ECEL_REF
 0x04

	)

3693 
	`sqlôe3Ex¥IfTrue
(
P¨£
*, 
Ex¥
*, , );

3694 
	`sqlôe3Ex¥IfFÆ£
(
P¨£
*, 
Ex¥
*, , );

3695 
	`sqlôe3Ex¥IfFÆ£Dup
(
P¨£
*, 
Ex¥
*, , );

3696 
TabÀ
 *
	`sqlôe3FödTabÀ
(
sqlôe3
*,const *, const *);

3697 
	#LOCATE_VIEW
 0x01

	)

3698 
	#LOCATE_NOERR
 0x02

	)

3699 
TabÀ
 *
	`sqlôe3LoˇãTabÀ
(
P¨£
*,
u32
 
Êags
,const *, const *);

3700 
TabÀ
 *
	`sqlôe3LoˇãTabÀIãm
(
P¨£
*,
u32
 
Êags
,
SrcLi°_ôem
 *);

3701 
Index
 *
	`sqlôe3FödIndex
(
sqlôe3
*,const *, const *);

3702 
	`sqlôe3U∆ökAndDñëeTabÀ
(
sqlôe3
*,,const *);

3703 
	`sqlôe3U∆ökAndDñëeIndex
(
sqlôe3
*,,const *);

3704 
	`sqlôe3Vacuum
(
P¨£
*);

3705 
	`sqlôe3RunVacuum
(**, 
sqlôe3
*);

3706 *
	`sqlôe3NameFromTokí
(
sqlôe3
*, 
Tokí
*);

3707 
	`sqlôe3Ex¥Com∑ª
(
Ex¥
*, Expr*, );

3708 
	`sqlôe3Ex¥Li°Com∑ª
(
Ex¥Li°
*, ExprList*, );

3709 
	`sqlôe3Ex¥Im∂õsEx¥
(
Ex¥
*, Expr*, );

3710 
	`sqlôe3Ex¥A«lyzeAggªg©es
(
NameC⁄ãxt
*, 
Ex¥
*);

3711 
	`sqlôe3Ex¥A«lyzeAggLi°
(
NameC⁄ãxt
*,
Ex¥Li°
*);

3712 
	`sqlôe3Ex¥CovîedByIndex
(
Ex¥
*, 
iCur
, 
Index
 *
pIdx
);

3713 
	`sqlôe3Fun˘i⁄U£sThisSrc
(
Ex¥
*, 
SrcLi°
*);

3714 
Vdbe
 *
	`sqlôe3GëVdbe
(
P¨£
*);

3715 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


3716 
	`sqlôe3P∫gSaveSèã
();

3717 
	`sqlôe3P∫gRe°‹eSèã
();

3719 
	`sqlôe3RﬁlbackAŒ
(
sqlôe3
*,);

3720 
	`sqlôe3CodeVîifySchema
(
P¨£
*, );

3721 
	`sqlôe3CodeVîifyNamedSchema
(
P¨£
*, c⁄° *
zDb
);

3722 
	`sqlôe3BegöTønß˘i⁄
(
P¨£
*, );

3723 
	`sqlôe3CommôTønß˘i⁄
(
P¨£
*);

3724 
	`sqlôe3RﬁlbackTønß˘i⁄
(
P¨£
*);

3725 
	`sqlôe3Savïoöt
(
P¨£
*, , 
Tokí
*);

3726 
	`sqlôe3Clo£Savïoöts
(
sqlôe3
 *);

3727 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
sqlôe3
*);

3728 
	`sqlôe3Ex¥IsC⁄°™t
(
Ex¥
*);

3729 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
Ex¥
*);

3730 
	`sqlôe3Ex¥IsC⁄°™tOrFun˘i⁄
(
Ex¥
*, 
u8
);

3731 
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
Ex¥
*,);

3732 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


3733 
	`sqlôe3Ex¥C⁄èösSubquîy
(
Ex¥
*);

3735 
	`sqlôe3Ex¥IsI¡egî
(
Ex¥
*, *);

3736 
	`sqlôe3Ex¥C™BeNuŒ
(c⁄° 
Ex¥
*);

3737 
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(c⁄° 
Ex¥
*, );

3738 
	`sqlôe3IsRowid
(const *);

3739 
	`sqlôe3Gíî©eRowDñëe
(

3740 
P¨£
*,
TabÀ
*,
Triggî
*,,,,
i16
,
u8
,u8,u8,);

3741 
	`sqlôe3Gíî©eRowIndexDñëe
(
P¨£
*, 
TabÀ
*, , , *, );

3742 
	`sqlôe3Gíî©eIndexKey
(
P¨£
*, 
Index
*, , , , *,Index*,);

3743 
	`sqlôe3ResﬁveP¨tIdxLabñ
(
P¨£
*,);

3744 
	`sqlôe3Gíî©eC⁄°øötChecks
(
P¨£
*,
TabÀ
*,*,,,,,

3745 
u8
,u8,,*,*);

3746 
	`sqlôe3Com∂ëeIn£πi⁄
(
P¨£
*,
TabÀ
*,,,,*,,,);

3747 
	`sqlôe3O≥nTabÀAndIndi˚s
(
P¨£
*, 
TabÀ
*, , 
u8
, , u8*, *, *);

3748 
	`sqlôe3BegöWrôeO≥øti⁄
(
P¨£
*, , );

3749 
	`sqlôe3Mu…iWrôe
(
P¨£
*);

3750 
	`sqlôe3MayAb‹t
(
P¨£
*);

3751 
	`sqlôe3HÆtC⁄°øöt
(
P¨£
*, , , *, 
i8
, 
u8
);

3752 
	`sqlôe3UniqueC⁄°øöt
(
P¨£
*, , 
Index
*);

3753 
	`sqlôe3RowidC⁄°øöt
(
P¨£
*, , 
TabÀ
*);

3754 
Ex¥
 *
	`sqlôe3Ex¥Dup
(
sqlôe3
*,Expr*,);

3755 
Ex¥Li°
 *
	`sqlôe3Ex¥Li°Dup
(
sqlôe3
*,ExprList*,);

3756 
SrcLi°
 *
	`sqlôe3SrcLi°Dup
(
sqlôe3
*,SrcList*,);

3757 
IdLi°
 *
	`sqlôe3IdLi°Dup
(
sqlôe3
*,IdList*);

3758 
Sñe˘
 *
	`sqlôe3Sñe˘Dup
(
sqlôe3
*,Select*,);

3759 #i‡
SELECTTRACE_ENABLED


3760 
	`sqlôe3Sñe˘SëName
(
Sñe˘
*,const *);

3762 
	#sqlôe3Sñe˘SëName
(
A
,
B
)

	)

3764 
	`sqlôe3In£πBuûtöFuncs
(
FuncDef
*,);

3765 
FuncDef
 *
	`sqlôe3FödFun˘i⁄
(
sqlôe3
*,c⁄° *,,
u8
,u8);

3766 
	`sqlôe3Regi°îBuûtöFun˘i⁄s
();

3767 
	`sqlôe3Regi°îD©eTimeFun˘i⁄s
();

3768 
	`sqlôe3Regi°îPîC⁄√˘i⁄BuûtöFun˘i⁄s
(
sqlôe3
*);

3769 
	`sqlôe3Sa„tyCheckOk
(
sqlôe3
*);

3770 
	`sqlôe3Sa„tyCheckSickOrOk
(
sqlôe3
*);

3771 
	`sqlôe3Ch™geCookõ
(
P¨£
*, );

3773 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

3774 
	`sqlôe3M©îülizeVõw
(
P¨£
*, 
TabÀ
*, 
Ex¥
*, );

3777 #i‚de‡
SQLITE_OMIT_TRIGGER


3778 
	`sqlôe3BegöTriggî
(
P¨£
*, 
Tokí
*,Tokí*,,,
IdLi°
*,
SrcLi°
*,

3779 
Ex¥
*,, );

3780 
	`sqlôe3FöishTriggî
(
P¨£
*, 
TriggîSãp
*, 
Tokí
*);

3781 
	`sqlôe3Dr›Triggî
(
P¨£
*, 
SrcLi°
*, );

3782 
	`sqlôe3Dr›TriggîPå
(
P¨£
*, 
Triggî
*);

3783 
Triggî
 *
	`sqlôe3TriggîsExi°
(
P¨£
 *, 
TabÀ
*, , 
Ex¥Li°
*, *
pMask
);

3784 
Triggî
 *
	`sqlôe3TriggîLi°
(
P¨£
 *, 
TabÀ
 *);

3785 
	`sqlôe3CodeRowTriggî
(
P¨£
*, 
Triggî
 *, , 
Ex¥Li°
*, , 
TabÀ
 *,

3787 
	`sqlôe3CodeRowTriggîDúe˘
(
P¨£
 *, 
Triggî
 *, 
TabÀ
 *, , , );

3788 
	`sqlôeVõwTriggîs
(
P¨£
*, 
TabÀ
*, 
Ex¥
*, , 
Ex¥Li°
*);

3789 
	`sqlôe3DñëeTriggîSãp
(
sqlôe3
*, 
TriggîSãp
*);

3790 
TriggîSãp
 *
	`sqlôe3TriggîSñe˘Sãp
(
sqlôe3
*,
Sñe˘
*);

3791 
TriggîSãp
 *
	`sqlôe3TriggîIn£πSãp
(
sqlôe3
*,
Tokí
*, 
IdLi°
*,

3792 
Sñe˘
*,
u8
);

3793 
TriggîSãp
 *
	`sqlôe3TriggîUpd©eSãp
(
sqlôe3
*,
Tokí
*,
Ex¥Li°
*, 
Ex¥
*, 
u8
);

3794 
TriggîSãp
 *
	`sqlôe3TriggîDñëeSãp
(
sqlôe3
*,
Tokí
*, 
Ex¥
*);

3795 
	`sqlôe3DñëeTriggî
(
sqlôe3
*, 
Triggî
*);

3796 
	`sqlôe3U∆ökAndDñëeTriggî
(
sqlôe3
*,,const *);

3797 
u32
 
	`sqlôe3TriggîCﬁmask
(
P¨£
*,
Triggî
*,
Ex¥Li°
*,,,
TabÀ
*,);

3798 
	#sqlôe3P¨£T›Àvñ
(
p
Ë(’)->
pT›Àvñ
 ? (p)->pT›Àvñ : (p))

	)

3799 
	#sqlôe3IsT›Àvñ
(
p
Ë(’)->
pT›Àvñ
==0)

	)

3801 
	#sqlôe3TriggîsExi°
(
B
,
C
,
D
,
E
,
F
Ë0

	)

3802 
	#sqlôe3DñëeTriggî
(
A
,
B
)

	)

3803 
	#sqlôe3Dr›TriggîPå
(
A
,
B
)

	)

3804 
	#sqlôe3U∆ökAndDñëeTriggî
(
A
,
B
,
C
)

	)

3805 
	#sqlôe3CodeRowTriggî
(
A
,
B
,
C
,
D
,
E
,
F
,
G
,
H
,
I
)

	)

3806 
	#sqlôe3CodeRowTriggîDúe˘
(
A
,
B
,
C
,
D
,
E
,
F
)

	)

3807 
	#sqlôe3TriggîLi°
(
X
, 
Y
Ë0

	)

3808 
	#sqlôe3P¨£T›Àvñ
(
p
Ë
	)
p

3809 
	#sqlôe3IsT›Àvñ
(
p
Ë1

	)

3810 
	#sqlôe3TriggîCﬁmask
(
A
,
B
,
C
,
D
,
E
,
F
,
G
Ë0

	)

3813 
	`sqlôe3JoöTy≥
(
P¨£
*, 
Tokí
*, Token*, Token*);

3814 
	`sqlôe3Cª©eF‹eignKey
(
P¨£
*, 
Ex¥Li°
*, 
Tokí
*, ExprList*, );

3815 
	`sqlôe3De„rF‹eignKey
(
P¨£
*, );

3816 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


3817 
	`sqlôe3AuthRód
(
P¨£
*,
Ex¥
*,
Schema
*,
SrcLi°
*);

3818 
	`sqlôe3AuthCheck
(
P¨£
*,, const *, const *, const *);

3819 
	`sqlôe3AuthC⁄ãxtPush
(
P¨£
*, 
AuthC⁄ãxt
*, const *);

3820 
	`sqlôe3AuthC⁄ãxtP›
(
AuthC⁄ãxt
*);

3821 
	`sqlôe3AuthRódCﬁ
(
P¨£
*, const *, const *, );

3823 
	#sqlôe3AuthRód
(
a
,
b
,
c
,
d
)

	)

3824 
	#sqlôe3AuthCheck
(
a
,
b
,
c
,
d
,
e
Ë
SQLITE_OK


	)

3825 
	#sqlôe3AuthC⁄ãxtPush
(
a
,
b
,
c
)

	)

3826 
	#sqlôe3AuthC⁄ãxtP›
(
a
Ë(()◊))

	)

3828 
	`sqlôe3Aâach
(
P¨£
*, 
Ex¥
*, Expr*, Expr*);

3829 
	`sqlôe3Dëach
(
P¨£
*, 
Ex¥
*);

3830 
	`sqlôe3FixInô
(
DbFixî
*, 
P¨£
*, , c⁄° *, c⁄° 
Tokí
*);

3831 
	`sqlôe3FixSrcLi°
(
DbFixî
*, 
SrcLi°
*);

3832 
	`sqlôe3FixSñe˘
(
DbFixî
*, 
Sñe˘
*);

3833 
	`sqlôe3FixEx¥
(
DbFixî
*, 
Ex¥
*);

3834 
	`sqlôe3FixEx¥Li°
(
DbFixî
*, 
Ex¥Li°
*);

3835 
	`sqlôe3FixTriggîSãp
(
DbFixî
*, 
TriggîSãp
*);

3836 
	`sqlôe3AtoF
(c⁄° *
z
, *, , 
u8
);

3837 
	`sqlôe3GëI¡32
(const *, *);

3838 
	`sqlôe3Atoi
(const *);

3839 
	`sqlôe3Utf16ByãLí
(c⁄° *
pD©a
, 
nCh¨
);

3840 
	`sqlôe3Utf8Ch¨Lí
(c⁄° *
pD©a
, 
nByã
);

3841 
u32
 
	`sqlôe3Utf8Ród
(c⁄° 
u8
**);

3842 
LogE°
 
	`sqlôe3LogE°
(
u64
);

3843 
LogE°
 
	`sqlôe3LogE°Add
(LogEst,LogEst);

3844 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3845 
LogE°
 
	`sqlôe3LogE°FromDoubÀ
();

3847 #i‡
	`deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

3848 
	`deföed
(
SQLITE_ENABLE_STAT3_OR_STAT4
) || \

3849 
	$deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

3850 
u64
 
	`sqlôe3LogE°ToI¡
(
LogE°
);

3858 
	`sqlôe3PutV¨öt
(*, 
u64
);

3859 
u8
 
	`sqlôe3GëV¨öt
(c⁄° *, 
u64
 *);

3860 
u8
 
	`sqlôe3GëV¨öt32
(c⁄° *, 
u32
 *);

3861 
	`sqlôe3V¨ötLí
(
u64
 
v
);

3868 
	#gëV¨öt32
(
A
,
B
) \

3869 (
u8
)((*(
A
)<(u8)0x80)?((
B
)=(
u32
)*(A)),1:
	`sqlôe3GëV¨öt32
((A),(u32 *)&(B)))

	)

3870 
	#putV¨öt32
(
A
,
B
) \

3871 (
u8
)(((
u32
)(
B
)<(u32)0x80)?(*(
A
)=()(B)),1:\

3872 
	`sqlôe3PutV¨öt
((
A
),(
B
)))

	)

3873 
	#gëV¨öt
 
sqlôe3GëV¨öt


	)

3874 
	#putV¨öt
 
sqlôe3PutV¨öt


	)

3877 c⁄° *
	`sqlôe3IndexAfföôySå
(
sqlôe3
*, 
Index
*);

3878 
	`sqlôe3TabÀAfföôy
(
Vdbe
*, 
TabÀ
*, );

3879 
	`sqlôe3Com∑ªAfföôy
(
Ex¥
 *
pEx¥
, 
aff2
);

3880 
	`sqlôe3IndexAfföôyOk
(
Ex¥
 *
pEx¥
, 
idx_afföôy
);

3881 
	`sqlôe3Ex¥Afföôy
(
Ex¥
 *
pEx¥
);

3882 
	`sqlôe3Atoi64
(c⁄° *, 
i64
*, , 
u8
);

3883 
	`sqlôe3DecOrHexToI64
(c⁄° *, 
i64
*);

3884 
	`sqlôe3Eº‹WôhMsg
(
sqlôe3
*, , const *,...);

3885 
	`sqlôe3Eº‹
(
sqlôe3
*,);

3886 
	`sqlôe3Sy°emEº‹
(
sqlôe3
*,);

3887 *
	`sqlôe3HexToBlob
(
sqlôe3
*, c⁄° *
z
, 
n
);

3888 
u8
 
	`sqlôe3HexToI¡
(
h
);

3889 
	`sqlôe3TwoP¨tName
(
P¨£
 *, 
Tokí
 *, Token *, Token **);

3891 #i‡
	`deföed
(
SQLITE_NEED_ERR_NAME
)

3892 c⁄° *
	`sqlôe3EºName
();

3895 c⁄° *
	`sqlôe3EºSå
();

3896 
	`sqlôe3RódSchema
(
P¨£
 *
pP¨£
);

3897 
CﬁlSeq
 *
	`sqlôe3FödCﬁlSeq
(
sqlôe3
*,
u8
 
íc
, const *,);

3898 
CﬁlSeq
 *
	`sqlôe3LoˇãCﬁlSeq
(
P¨£
 *
pP¨£
, c⁄° *
zName
);

3899 
CﬁlSeq
 *
	`sqlôe3Ex¥CﬁlSeq
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
);

3900 
Ex¥
 *
	`sqlôe3Ex¥AddCﬁœãTokí
(
P¨£
 *
pP¨£
, Ex¥*, c⁄° 
Tokí
*, );

3901 
Ex¥
 *
	`sqlôe3Ex¥AddCﬁœãSåög
(
P¨£
*,Expr*,const *);

3902 
Ex¥
 *
	`sqlôe3Ex¥SkùCﬁœã
(Expr*);

3903 
	`sqlôe3CheckCﬁlSeq
(
P¨£
 *, 
CﬁlSeq
 *);

3904 
	`sqlôe3CheckObje˘Name
(
P¨£
 *, const *);

3905 
	`sqlôe3VdbeSëCh™ges
(
sqlôe3
 *, );

3906 
	`sqlôe3AddI¡64
(
i64
*,i64);

3907 
	`sqlôe3SubI¡64
(
i64
*,i64);

3908 
	`sqlôe3MulI¡64
(
i64
*,i64);

3909 
	`sqlôe3AbsI¡32
();

3910 #ifde‡
SQLITE_ENABLE_8_3_NAMES


3911 
	`sqlôe3FûeSuffix3
(const *, *);

3913 
	#sqlôe3FûeSuffix3
(
X
,
Y
)

	)

3915 
u8
 
	`sqlôe3GëBoﬁón
(c⁄° *
z
,u8);

3917 c⁄° *
	`sqlôe3VÆueText
(
sqlôe3_vÆue
*, 
u8
);

3918 
	`sqlôe3VÆueByãs
(
sqlôe3_vÆue
*, 
u8
);

3919 
	`sqlôe3VÆueSëSå
(
sqlôe3_vÆue
*, , c⁄° *,
u8
,

3921 
	`sqlôe3VÆueSëNuŒ
(
sqlôe3_vÆue
*);

3922 
	`sqlôe3VÆueFªe
(
sqlôe3_vÆue
*);

3923 
sqlôe3_vÆue
 *
	`sqlôe3VÆueNew
(
sqlôe3
 *);

3924 *
	`sqlôe3Utf16to8
(
sqlôe3
 *, c⁄° *, , 
u8
);

3925 
	`sqlôe3VÆueFromEx¥
(
sqlôe3
 *, 
Ex¥
 *, 
u8
, u8, 
sqlôe3_vÆue
 **);

3926 
	`sqlôe3VÆueAµlyAfföôy
(
sqlôe3_vÆue
 *, 
u8
, u8);

3927 #i‚de‡
SQLITE_AMALGAMATION


3928 c⁄° 
sqlôe3OpcodePr›îty
[];

3929 c⁄° 
sqlôe3SåBINARY
[];

3930 c⁄° 
sqlôe3UµîToLowî
[];

3931 c⁄° 
sqlôe3Cty≥M≠
[];

3932 c⁄° 
Tokí
 
sqlôe3I¡Tokís
[];

3933 
SQLITE_WSD
 
Sqlôe3C⁄fig
 
sqlôe3C⁄fig
;

3934 
FuncDefHash
 
sqlôe3BuûtöFun˘i⁄s
;

3935 #i‚de‡
SQLITE_OMIT_WSD


3936 
sqlôe3PídögByã
;

3939 
	`sqlôe3RoŸPageMoved
(
sqlôe3
*, , , );

3940 
	`sqlôe3Reödex
(
P¨£
*, 
Tokí
*, Token*);

3941 
	`sqlôe3A…îFun˘i⁄s
();

3942 
	`sqlôe3A…îRíameTabÀ
(
P¨£
*, 
SrcLi°
*, 
Tokí
*);

3943 
	`sqlôe3GëTokí
(const *, *);

3944 
	`sqlôe3Ne°edP¨£
(
P¨£
*, const *, ...);

3945 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
sqlôe3
*);

3946 
	`sqlôe3CodeSub£À˘
(
P¨£
 *, 
Ex¥
 *, , );

3947 
	`sqlôe3Sñe˘Pªp
(
P¨£
*, 
Sñe˘
*, 
NameC⁄ãxt
*);

3948 
	`sqlôe3Sñe˘Wr⁄gNumTîmsEº‹
(
P¨£
 *
pP¨£
, 
Sñe˘
 *
p
);

3949 
	`sqlôe3M©chS∑nName
(const *, const *, const *, const *);

3950 
	`sqlôe3ResﬁveEx¥Names
(
NameC⁄ãxt
*, 
Ex¥
*);

3951 
	`sqlôe3ResﬁveEx¥Li°Names
(
NameC⁄ãxt
*, 
Ex¥Li°
*);

3952 
	`sqlôe3ResﬁveSñe˘Names
(
P¨£
*, 
Sñe˘
*, 
NameC⁄ãxt
*);

3953 
	`sqlôe3ResﬁveSñfRe„ªn˚
(
P¨£
*,
TabÀ
*,,
Ex¥
*,
Ex¥Li°
*);

3954 
	`sqlôe3ResﬁveOrdîGroupBy
(
P¨£
*, 
Sñe˘
*, 
Ex¥Li°
*, const *);

3955 
	`sqlôe3CﬁumnDeÁu…
(
Vdbe
 *, 
TabÀ
 *, , );

3956 
	`sqlôe3A…îFöishAddCﬁumn
(
P¨£
 *, 
Tokí
 *);

3957 
	`sqlôe3A…îBegöAddCﬁumn
(
P¨£
 *, 
SrcLi°
 *);

3958 
CﬁlSeq
 *
	`sqlôe3GëCﬁlSeq
(
P¨£
*, 
u8
, CollSeq *, const *);

3959 
	`sqlôe3AfföôyTy≥
(c⁄° *, 
u8
*);

3960 
	`sqlôe3A«lyze
(
P¨£
*, 
Tokí
*, Token*);

3961 
	`sqlôe3InvokeBusyH™dÀr
(
BusyH™dÀr
*);

3962 
	`sqlôe3FödDb
(
sqlôe3
*, 
Tokí
*);

3963 
	`sqlôe3FödDbName
(
sqlôe3
 *, const *);

3964 
	`sqlôe3A«lysisLﬂd
(
sqlôe3
*,
iDB
);

3965 
	`sqlôe3DñëeIndexSam∂es
(
sqlôe3
*,
Index
*);

3966 
	`sqlôe3DeÁu…RowE°
(
Index
*);

3967 
	`sqlôe3Regi°îLikeFun˘i⁄s
(
sqlôe3
*, );

3968 
	`sqlôe3IsLikeFun˘i⁄
(
sqlôe3
*,
Ex¥
*,*,*);

3969 
	`sqlôe3SchemaCÀ¨
(*);

3970 
Schema
 *
	`sqlôe3SchemaGë
(
sqlôe3
 *, 
Båì
 *);

3971 
	`sqlôe3SchemaToIndex
(
sqlôe3
 *
db
, 
Schema
 *);

3972 
KeyInfo
 *
	`sqlôe3KeyInfoAŒoc
(
sqlôe3
*,,);

3973 
	`sqlôe3KeyInfoUƒef
(
KeyInfo
*);

3974 
KeyInfo
 *
	`sqlôe3KeyInfoRef
(KeyInfo*);

3975 
KeyInfo
 *
	`sqlôe3KeyInfoOfIndex
(
P¨£
*, 
Index
*);

3976 #ifde‡
SQLITE_DEBUG


3977 
	`sqlôe3KeyInfoIsWrôóbÀ
(
KeyInfo
*);

3979 
	`sqlôe3Cª©eFunc
(
sqlôe3
 *, const *, , , *,

3980 (*)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **),

3981 (*)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **), (*)(sqlite3_context*),

3982 
FuncDe°ru˘‹
 *
pDe°ru˘‹


3984 
	`sqlôe3OomFau…
(
sqlôe3
*);

3985 
	`sqlôe3OomCÀ¨
(
sqlôe3
*);

3986 
	`sqlôe3ApiExô
(
sqlôe3
 *
db
, );

3987 
	`sqlôe3O≥nTempD©aba£
(
P¨£
 *);

3989 
	`sqlôe3SåAccumInô
(
SåAccum
*, 
sqlôe3
*, *, , );

3990 
	`sqlôe3SåAccumAµíd
(
SåAccum
*,const *,);

3991 
	`sqlôe3SåAccumAµídAŒ
(
SåAccum
*,const *);

3992 
	`sqlôe3AµídCh¨
(
SåAccum
*,,);

3993 *
	`sqlôe3SåAccumFöish
(
SåAccum
*);

3994 
	`sqlôe3SåAccumRe£t
(
SåAccum
*);

3995 
	`sqlôe3Sñe˘De°Inô
(
Sñe˘De°
*,,);

3996 
Ex¥
 *
	`sqlôe3Cª©eCﬁumnEx¥
(
sqlôe3
 *, 
SrcLi°
 *, , );

3998 
	`sqlôe3BackupRe°¨t
(
sqlôe3_backup
 *);

3999 
	`sqlôe3BackupUpd©e
(
sqlôe3_backup
 *, 
Pgno
, c⁄° 
u8
 *);

4001 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


4002 
	`sqlôe3A«lyzeFun˘i⁄s
();

4003 
	`sqlôe3Sèt4ProbeSëVÆue
(
P¨£
*,
Index
*,
U≈ackedRec‹d
**,
Ex¥
*,
u8
,,*);

4004 
	`sqlôe3Sèt4VÆueFromEx¥
(
P¨£
*, 
Ex¥
*, 
u8
, 
sqlôe3_vÆue
**);

4005 
	`sqlôe3Sèt4ProbeFªe
(
U≈ackedRec‹d
*);

4006 
	`sqlôe3Sèt4Cﬁumn
(
sqlôe3
*, c⁄° *, , , 
sqlôe3_vÆue
**);

4012 *
	`sqlôe3P¨£rAŒoc
(*(*)(
u64
));

4013 
	`sqlôe3P¨£rFªe
(*, (*)(*));

4014 
	`sqlôe3P¨£r
(*, , 
Tokí
, 
P¨£
*);

4015 #ifde‡
YYTRACKMAXSTACKDEPTH


4016 
	`sqlôe3P¨£rSèckPók
(*);

4019 
	`sqlôe3AutoLﬂdExãnsi⁄s
(
sqlôe3
*);

4020 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


4021 
	`sqlôe3Clo£Exãnsi⁄s
(
sqlôe3
*);

4023 
	#sqlôe3Clo£Exãnsi⁄s
(
X
)

	)

4026 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


4027 
	`sqlôe3TabÀLock
(
P¨£
 *, , , 
u8
, const *);

4029 
	#sqlôe3TabÀLock
(
v
,
w
,
x
,
y
,
z
)

	)

4032 #ifde‡
SQLITE_TEST


4033 
	`sqlôe3Utf8To8
(*);

4036 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


4037 
	#sqlôe3VèbCÀ¨
(
Y
)

	)

4038 
	#sqlôe3VèbSync
(
X
,
Y
Ë
SQLITE_OK


	)

4039 
	#sqlôe3VèbRﬁlback
(
X
)

	)

4040 
	#sqlôe3VèbCommô
(
X
)

	)

4041 
	#sqlôe3VèbInSync
(
db
Ë0

	)

4042 
	#sqlôe3VèbLock
(
X
)

	)

4043 
	#sqlôe3VèbU∆ock
(
X
)

	)

4044 
	#sqlôe3VèbU∆ockLi°
(
X
)

	)

4045 
	#sqlôe3VèbSavïoöt
(
X
, 
Y
, 
Z
Ë
SQLITE_OK


	)

4046 
	#sqlôe3GëVTabÀ
(
X
,
Y
Ë((
VTabÀ
*)0)

	)

4048 
	`sqlôe3VèbCÀ¨
(
sqlôe3
 *
db
, 
TabÀ
*);

4049 
	`sqlôe3VèbDisc⁄√˘
(
sqlôe3
 *
db
, 
TabÀ
 *
p
);

4050 
	`sqlôe3VèbSync
(
sqlôe3
 *
db
, 
Vdbe
*);

4051 
	`sqlôe3VèbRﬁlback
(
sqlôe3
 *
db
);

4052 
	`sqlôe3VèbCommô
(
sqlôe3
 *
db
);

4053 
	`sqlôe3VèbLock
(
VTabÀ
 *);

4054 
	`sqlôe3VèbU∆ock
(
VTabÀ
 *);

4055 
	`sqlôe3VèbU∆ockLi°
(
sqlôe3
*);

4056 
	`sqlôe3VèbSavïoöt
(
sqlôe3
 *, , );

4057 
	`sqlôe3VèbImp‹tEºmsg
(
Vdbe
*, 
sqlôe3_vèb
*);

4058 
VTabÀ
 *
	`sqlôe3GëVTabÀ
(
sqlôe3
*, 
TabÀ
*);

4059 
	#sqlôe3VèbInSync
(
db
Ë((db)->
nVTøns
>0 && (db)->
aVTøns
==0)

	)

4061 
	`sqlôe3VèbEp⁄ymousTabÀInô
(
P¨£
*,
ModuÀ
*);

4062 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
sqlôe3
*,
ModuÀ
*);

4063 
	`sqlôe3VèbMakeWrôabÀ
(
P¨£
*,
TabÀ
*);

4064 
	`sqlôe3VèbBegöP¨£
(
P¨£
*, 
Tokí
*, Token*, Token*, );

4065 
	`sqlôe3VèbFöishP¨£
(
P¨£
*, 
Tokí
*);

4066 
	`sqlôe3VèbArgInô
(
P¨£
*);

4067 
	`sqlôe3VèbArgExãnd
(
P¨£
*, 
Tokí
*);

4068 
	`sqlôe3VèbCÆlCª©e
(
sqlôe3
*, , const *, **);

4069 
	`sqlôe3VèbCÆlC⁄√˘
(
P¨£
*, 
TabÀ
*);

4070 
	`sqlôe3VèbCÆlDe°roy
(
sqlôe3
*, , const *);

4071 
	`sqlôe3VèbBegö
(
sqlôe3
 *, 
VTabÀ
 *);

4072 
FuncDef
 *
	`sqlôe3VèbOvîlﬂdFun˘i⁄
(
sqlôe3
 *,FuncDef*, 
nArg
, 
Ex¥
*);

4073 
	`sqlôe3InvÆidFun˘i⁄
(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**);

4074 
sqlôe3_öt64
 
	`sqlôe3StmtCuºítTime
(
sqlôe3_c⁄ãxt
*);

4075 
	`sqlôe3VdbeP¨amëîIndex
(
Vdbe
*, const *, );

4076 
	`sqlôe3Tøns„rBödögs
(
sqlôe3_°mt
 *, sqlite3_stmt *);

4077 
	`sqlôe3P¨£rRe£t
(
P¨£
*);

4078 
	`sqlôe3Rïª∑ª
(
Vdbe
*);

4079 
	`sqlôe3Ex¥Li°CheckLígth
(
P¨£
*, 
Ex¥Li°
*, const *);

4080 
CﬁlSeq
 *
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
P¨£
 *, 
Ex¥
 *, Expr *);

4081 
	`sqlôe3TempInMem‹y
(c⁄° 
sqlôe3
*);

4082 c⁄° *
	`sqlôe3Jou∫ÆModíame
();

4083 #i‚de‡
SQLITE_OMIT_WAL


4084 
	`sqlôe3Checkpoöt
(
sqlôe3
*, , , *, *);

4085 
	`sqlôe3WÆDeÁu…Hook
(*,
sqlôe3
*,const *,);

4087 #i‚de‡
SQLITE_OMIT_CTE


4088 
Wôh
 *
	`sqlôe3WôhAdd
(
P¨£
*,Wôh*,
Tokí
*,
Ex¥Li°
*,
Sñe˘
*);

4089 
	`sqlôe3WôhDñëe
(
sqlôe3
*,
Wôh
*);

4090 
	`sqlôe3WôhPush
(
P¨£
*, 
Wôh
*, 
u8
);

4092 
	#sqlôe3WôhPush
(
x
,
y
,
z
)

	)

4093 
	#sqlôe3WôhDñëe
(
x
,
y
)

	)

4103 #i‡!
	`deföed
(
SQLITE_OMIT_FOREIGN_KEY
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

4104 
	`sqlôe3FkCheck
(
P¨£
*, 
TabÀ
*, , , *, );

4105 
	`sqlôe3FkDr›TabÀ
(
P¨£
*, 
SrcLi°
 *, 
TabÀ
*);

4106 
	`sqlôe3FkA˘i⁄s
(
P¨£
*, 
TabÀ
*, 
Ex¥Li°
*, , *, );

4107 
	`sqlôe3FkRequúed
(
P¨£
*, 
TabÀ
*, *, );

4108 
u32
 
	`sqlôe3FkOldmask
(
P¨£
*, 
TabÀ
*);

4109 
FKey
 *
	`sqlôe3FkRe„ªn˚s
(
TabÀ
 *);

4111 
	#sqlôe3FkA˘i⁄s
(
a
,
b
,
c
,
d
,
e
,
f
)

	)

4112 
	#sqlôe3FkCheck
(
a
,
b
,
c
,
d
,
e
,
f
)

	)

4113 
	#sqlôe3FkDr›TabÀ
(
a
,
b
,
c
)

	)

4114 
	#sqlôe3FkOldmask
(
a
,
b
Ë0

	)

4115 
	#sqlôe3FkRequúed
(
a
,
b
,
c
,
d
Ë0

	)

4117 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


4118 
	`sqlôe3FkDñëe
(
sqlôe3
 *, 
TabÀ
*);

4119 
	`sqlôe3FkLoˇãIndex
(
P¨£
*,
TabÀ
*,
FKey
*,
Index
**,**);

4121 
	#sqlôe3FkDñëe
(
a
,
b
)

	)

4122 
	#sqlôe3FkLoˇãIndex
(
a
,
b
,
c
,
d
,
e
)

	)

4129 
	#SQLITE_FAULTINJECTOR_MALLOC
 0

	)

4130 
	#SQLITE_FAULTINJECTOR_COUNT
 1

	)

4137 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


4138 
	`sqlôe3BegöBíignMÆloc
();

4139 
	`sqlôe3EndBíignMÆloc
();

4141 
	#sqlôe3BegöBíignMÆloc
()

	)

4142 
	#sqlôe3EndBíignMÆloc
()

	)

4148 
	#IN_INDEX_ROWID
 1

	)

4149 
	#IN_INDEX_EPH
 2

	)

4150 
	#IN_INDEX_INDEX_ASC
 3

	)

4151 
	#IN_INDEX_INDEX_DESC
 4

	)

4152 
	#IN_INDEX_NOOP
 5

	)

4156 
	#IN_INDEX_NOOP_OK
 0x0001

	)

4157 
	#IN_INDEX_MEMBERSHIP
 0x0002

	)

4158 
	#IN_INDEX_LOOP
 0x0004

	)

4159 
	`sqlôe3FödInIndex
(
P¨£
 *, 
Ex¥
 *, 
u32
, *);

4161 
	`sqlôe3Jou∫ÆO≥n
(
sqlôe3_vfs
 *, c⁄° *, 
sqlôe3_fûe
 *, , );

4162 
	`sqlôe3Jou∫ÆSize
(
sqlôe3_vfs
 *);

4163 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


4164 
	`sqlôe3Jou∫ÆCª©e
(
sqlôe3_fûe
 *);

4167 
	`sqlôe3Jou∫ÆIsInMem‹y
(
sqlôe3_fûe
 *
p
);

4168 
	`sqlôe3MemJou∫ÆO≥n
(
sqlôe3_fûe
 *);

4170 
	`sqlôe3Ex¥SëHeightAndFœgs
(
P¨£
 *
pP¨£
, 
Ex¥
 *
p
);

4171 #i‡
SQLITE_MAX_EXPR_DEPTH
>0

4172 
	`sqlôe3Sñe˘Ex¥Height
(
Sñe˘
 *);

4173 
	`sqlôe3Ex¥CheckHeight
(
P¨£
*, );

4175 
	#sqlôe3Sñe˘Ex¥Height
(
x
Ë0

	)

4176 
	#sqlôe3Ex¥CheckHeight
(
x
,
y
)

	)

4179 
u32
 
	`sqlôe3Gë4byã
(c⁄° 
u8
*);

4180 
	`sqlôe3Put4byã
(
u8
*, 
u32
);

4182 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


4183 
	`sqlôe3C⁄√˘i⁄Blocked
(
sqlôe3
 *, sqlite3 *);

4184 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
sqlôe3
 *
db
);

4185 
	`sqlôe3C⁄√˘i⁄Clo£d
(
sqlôe3
 *
db
);

4187 
	#sqlôe3C⁄√˘i⁄Blocked
(
x
,
y
)

	)

4188 
	#sqlôe3C⁄√˘i⁄U∆ocked
(
x
)

	)

4189 
	#sqlôe3C⁄√˘i⁄Clo£d
(
x
)

	)

4192 #ifde‡
SQLITE_DEBUG


4193 
	`sqlôe3P¨£rTø˚
(
FILE
*, *);

4201 #ifde‡
SQLITE_ENABLE_IOTRACE


4202 
	#IOTRACE
(
A
Ëif–
sqlôe3IoTø˚
 ){ sqlôe3IoTø˚ A; 
	}

	)
}

4203 
sqlôe3VdbeIOTø˚Sql
(
Vdbe
*);

4204 
SQLITE_API
 
SQLITE_EXTERN
 (
SQLITE_CDECL
 *
sqlôe3IoTø˚
)(const *,...);

4206 
	#IOTRACE
(
A
)

	)

4207 
	#sqlôe3VdbeIOTø˚Sql
(
X
)

	)

4238 #ifde‡
SQLITE_MEMDEBUG


4239 
	`sqlôe3MemdebugSëTy≥
(*,
u8
);

4240 
	`sqlôe3MemdebugHasTy≥
(*,
u8
);

4241 
	`sqlôe3MemdebugNoTy≥
(*,
u8
);

4243 
	#sqlôe3MemdebugSëTy≥
(
X
,
Y
Ë

	)

4244 
	#sqlôe3MemdebugHasTy≥
(
X
,
Y
Ë1

	)

4245 
	#sqlôe3MemdebugNoTy≥
(
X
,
Y
Ë1

	)

4247 
	#MEMTYPE_HEAP
 0x01

	)

4248 
	#MEMTYPE_LOOKASIDE
 0x02

	)

4249 
	#MEMTYPE_SCRATCH
 0x04

	)

4250 
	#MEMTYPE_PCACHE
 0x08

	)

4255 #i‡
SQLITE_MAX_WORKER_THREADS
>0

4256 
	`sqlôe3ThªadCª©e
(
SQLôeThªad
**,*(*)(*),*);

4257 
	`sqlôe3ThªadJoö
(
SQLôeThªad
*, **);

4260 #i‡
	`deföed
(
SQLITE_ENABLE_DBSTAT_VTAB
Ë|| deföed(
SQLITE_TEST
)

4261 
	`sqlôe3Db°©Regi°î
(
sqlôe3
*);

	@sqliteLimit.h

23 #i‚de‡
SQLITE_MAX_LENGTH


24 
	#SQLITE_MAX_LENGTH
 1000000000

	)

44 #i‚de‡
SQLITE_MAX_COLUMN


45 
	#SQLITE_MAX_COLUMN
 2000

	)

55 #i‚de‡
SQLITE_MAX_SQL_LENGTH


56 
	#SQLITE_MAX_SQL_LENGTH
 1000000000

	)

69 #i‚de‡
SQLITE_MAX_EXPR_DEPTH


70 
	#SQLITE_MAX_EXPR_DEPTH
 1000

	)

81 #i‚de‡
SQLITE_MAX_COMPOUND_SELECT


82 
	#SQLITE_MAX_COMPOUND_SELECT
 500

	)

89 #i‚de‡
SQLITE_MAX_VDBE_OP


90 
	#SQLITE_MAX_VDBE_OP
 25000

	)

96 #i‚de‡
SQLITE_MAX_FUNCTION_ARG


97 
	#SQLITE_MAX_FUNCTION_ARG
 127

	)

109 #i‚de‡
SQLITE_DEFAULT_CACHE_SIZE


110 
	#SQLITE_DEFAULT_CACHE_SIZE
 -2000

	)

117 #i‚de‡
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT


118 
	#SQLITE_DEFAULT_WAL_AUTOCHECKPOINT
 1000

	)

127 #i‚de‡
SQLITE_MAX_ATTACHED


128 
	#SQLITE_MAX_ATTACHED
 10

	)

135 #i‚de‡
SQLITE_MAX_VARIABLE_NUMBER


136 
	#SQLITE_MAX_VARIABLE_NUMBER
 999

	)

150 #ifde‡
SQLITE_MAX_PAGE_SIZE


151 #unde‡
SQLITE_MAX_PAGE_SIZE


153 
	#SQLITE_MAX_PAGE_SIZE
 65536

	)

159 #i‚de‡
SQLITE_DEFAULT_PAGE_SIZE


160 
	#SQLITE_DEFAULT_PAGE_SIZE
 4096

	)

162 #i‡
SQLITE_DEFAULT_PAGE_SIZE
>
SQLITE_MAX_PAGE_SIZE


163 #unde‡
SQLITE_DEFAULT_PAGE_SIZE


164 
	#SQLITE_DEFAULT_PAGE_SIZE
 
SQLITE_MAX_PAGE_SIZE


	)

174 #i‚de‡
SQLITE_MAX_DEFAULT_PAGE_SIZE


175 
	#SQLITE_MAX_DEFAULT_PAGE_SIZE
 8192

	)

177 #i‡
SQLITE_MAX_DEFAULT_PAGE_SIZE
>
SQLITE_MAX_PAGE_SIZE


178 #unde‡
SQLITE_MAX_DEFAULT_PAGE_SIZE


179 
	#SQLITE_MAX_DEFAULT_PAGE_SIZE
 
SQLITE_MAX_PAGE_SIZE


	)

190 #i‚de‡
SQLITE_MAX_PAGE_COUNT


191 
	#SQLITE_MAX_PAGE_COUNT
 1073741823

	)

198 #i‚de‡
SQLITE_MAX_LIKE_PATTERN_LENGTH


199 
	#SQLITE_MAX_LIKE_PATTERN_LENGTH
 50000

	)

209 #i‚de‡
SQLITE_MAX_TRIGGER_DEPTH


210 
	#SQLITE_MAX_TRIGGER_DEPTH
 1000

	)

	@status.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

22 #i‡
SQLITE_PTRSIZE
>4

23 
sqlôe3_öt64
 
	tsqlôe3SètVÆueTy≥
;

25 
u32
 
	tsqlôe3SètVÆueTy≥
;

27 
sqlôe3SètTy≥
 
	tsqlôe3SètTy≥
;

28 
SQLITE_WSD
 
	ssqlôe3SètTy≥
 {

29 
sqlôe3SètVÆueTy≥
 
	mnowVÆue
[10];

30 
sqlôe3SètVÆueTy≥
 
	mmxVÆue
[10];

31 } 
	gsqlôe3Sèt
 = { {0,}, {0,} };

37 c⁄° 
	g°©Muãx
[] = {

57 #ifde‡
SQLITE_OMIT_WSD


58 
	#wsdSètInô
 
sqlôe3SètTy≥
 *
x
 = &
	`GLOBAL
(sqlôe3SètTy≥,
sqlôe3Sèt
)

	)

59 
	#wsdSèt
 
x
[0]

	)

61 
	#wsdSètInô


	)

62 
	#wsdSèt
 
sqlôe3Sèt


	)

69 
sqlôe3_öt64
 
	$sqlôe3SètusVÆue
(
›
){

70 
wsdSètInô
;

71 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

72 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

73 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

74 : 
	`sqlôe3MÆlocMuãx
()) );

75  
wsdSèt
.
nowVÆue
[
›
];

76 
	}
}

89 
	$sqlôe3SètusUp
(
›
, 
N
){

90 
wsdSètInô
;

91 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

92 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

93 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

94 : 
	`sqlôe3MÆlocMuãx
()) );

95 
wsdSèt
.
nowVÆue
[
›
] +
N
;

96 if–
wsdSèt
.
nowVÆue
[
›
]>wsdSèt.
mxVÆue
[op] ){

97 
wsdSèt
.
mxVÆue
[
›
] = wsdSèt.
nowVÆue
[op];

99 
	}
}

100 
	$sqlôe3SètusDown
(
›
, 
N
){

101 
wsdSètInô
;

102 
	`as£π
–
N
>=0 );

103 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

104 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

105 : 
	`sqlôe3MÆlocMuãx
()) );

106 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

107 
wsdSèt
.
nowVÆue
[
›
] -
N
;

108 
	}
}

114 
	$sqlôe3SètusHighw©î
(
›
, 
X
){

115 
sqlôe3SètVÆueTy≥
 
√wVÆue
;

116 
wsdSètInô
;

117 
	`as£π
–
X
>=0 );

118 
√wVÆue
 = (
sqlôe3SètVÆueTy≥
)
X
;

119 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
wsdSèt
.
nowVÆue
) );

120 
	`as£π
–
›
>=0 && op<
	`AºaySize
(
°©Muãx
) );

121 
	`as£π
–
	`sqlôe3_muãx_hñd
(
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
()

122 : 
	`sqlôe3MÆlocMuãx
()) );

123 
	`as£π
–
›
==
SQLITE_STATUS_MALLOC_SIZE


124 || 
›
==
SQLITE_STATUS_PAGECACHE_SIZE


125 || 
›
==
SQLITE_STATUS_SCRATCH_SIZE


126 || 
›
==
SQLITE_STATUS_PARSER_STACK
 );

127 if–
√wVÆue
>
wsdSèt
.
mxVÆue
[
›
] ){

128 
wsdSèt
.
mxVÆue
[
›
] = 
√wVÆue
;

130 
	}
}

135 
	$sqlôe3_°©us64
(

136 
›
,

137 
sqlôe3_öt64
 *
pCuºít
,

138 
sqlôe3_öt64
 *
pHighw©î
,

139 
ª£tFœg


141 
sqlôe3_muãx
 *
pMuãx
;

142 
wsdSètInô
;

143 if–
›
<0 || op>=
	`AºaySize
(
wsdSèt
.
nowVÆue
) ){

144  
SQLITE_MISUSE_BKPT
;

146 #ifde‡
SQLITE_ENABLE_API_ARMOR


147 if–
pCuºít
==0 || 
pHighw©î
==0 )  
SQLITE_MISUSE_BKPT
;

149 
pMuãx
 = 
°©Muãx
[
›
] ? 
	`sqlôe3Pˇche1Muãx
(Ë: 
	`sqlôe3MÆlocMuãx
();

150 
	`sqlôe3_muãx_íãr
(
pMuãx
);

151 *
pCuºít
 = 
wsdSèt
.
nowVÆue
[
›
];

152 *
pHighw©î
 = 
wsdSèt
.
mxVÆue
[
›
];

153 if–
ª£tFœg
 ){

154 
wsdSèt
.
mxVÆue
[
›
] = wsdSèt.
nowVÆue
[op];

156 
	`sqlôe3_muãx_Àave
(
pMuãx
);

157 ()
pMuãx
;

158  
SQLITE_OK
;

159 
	}
}

160 
	$sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
){

161 
sqlôe3_öt64
 
iCur
 = 0, 
iHwå
 = 0;

162 
rc
;

163 #ifde‡
SQLITE_ENABLE_API_ARMOR


164 if–
pCuºít
==0 || 
pHighw©î
==0 )  
SQLITE_MISUSE_BKPT
;

166 
rc
 = 
	`sqlôe3_°©us64
(
›
, &
iCur
, &
iHwå
, 
ª£tFœg
);

167 if–
rc
==0 ){

168 *
pCuºít
 = ()
iCur
;

169 *
pHighw©î
 = ()
iHwå
;

171  
rc
;

172 
	}
}

177 
	$sqlôe3_db_°©us
(

178 
sqlôe3
 *
db
,

179 
›
,

180 *
pCuºít
,

181 *
pHighw©î
,

182 
ª£tFœg


184 
rc
 = 
SQLITE_OK
;

185 #ifde‡
SQLITE_ENABLE_API_ARMOR


186 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
pCuºít
==0|| 
pHighw©î
==0 ){

187  
SQLITE_MISUSE_BKPT
;

190 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

191  
›
 ){

192 
SQLITE_DBSTATUS_LOOKASIDE_USED
: {

193 *
pCuºít
 = 
db
->
lookaside
.
nOut
;

194 *
pHighw©î
 = 
db
->
lookaside
.
mxOut
;

195 if–
ª£tFœg
 ){

196 
db
->
lookaside
.
mxOut
 = db->lookaside.
nOut
;

201 
SQLITE_DBSTATUS_LOOKASIDE_HIT
:

202 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
:

203 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
: {

204 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_HIT
 );

205 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 );

206 
	`ã°ˇ£
–
›
==
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 );

207 
	`as£π
–(
›
-
SQLITE_DBSTATUS_LOOKASIDE_HIT
)>=0 );

208 
	`as£π
–(
›
-
SQLITE_DBSTATUS_LOOKASIDE_HIT
)<3 );

209 *
pCuºít
 = 0;

210 *
pHighw©î
 = 
db
->
lookaside
.
™Sèt
[
›
 - 
SQLITE_DBSTATUS_LOOKASIDE_HIT
];

211 if–
ª£tFœg
 ){

212 
db
->
lookaside
.
™Sèt
[
›
 - 
SQLITE_DBSTATUS_LOOKASIDE_HIT
] = 0;

222 
SQLITE_DBSTATUS_CACHE_USED_SHARED
:

223 
SQLITE_DBSTATUS_CACHE_USED
: {

224 
tŸÆU£d
 = 0;

225 
i
;

226 
	`sqlôe3BåìE¡îAŒ
(
db
);

227 
i
=0; i<
db
->
nDb
; i++){

228 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

229 if–
pBt
 ){

230 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

231 
nByã
 = 
	`sqlôe3PagîMemU£d
(
pPagî
);

232 if–
›
==
SQLITE_DBSTATUS_CACHE_USED_SHARED
 ){

233 
nByã
 =ÇByã / 
	`sqlôe3BåìC⁄√˘i⁄Cou¡
(
pBt
);

235 
tŸÆU£d
 +
nByã
;

238 
	`sqlôe3BåìLóveAŒ
(
db
);

239 *
pCuºít
 = 
tŸÆU£d
;

240 *
pHighw©î
 = 0;

249 
SQLITE_DBSTATUS_SCHEMA_USED
: {

250 
i
;

251 
nByã
 = 0;

253 
	`sqlôe3BåìE¡îAŒ
(
db
);

254 
db
->
≤ByãsFªed
 = &
nByã
;

255 
i
=0; i<
db
->
nDb
; i++){

256 
Schema
 *
pSchema
 = 
db
->
aDb
[
i
].pSchema;

257 if–
	`ALWAYS
(
pSchema
!=0) ){

258 
HashEÀm
 *
p
;

260 
nByã
 +
sqlôe3GlobÆC⁄fig
.
m
.
	`xRoundup
((
HashEÀm
)) * (

261 
pSchema
->
tblHash
.
cou¡


262 + 
pSchema
->
åigHash
.
cou¡


263 + 
pSchema
->
idxHash
.
cou¡


264 + 
pSchema
->
fkeyHash
.
cou¡


266 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
tblHash
.
ht
);

267 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
åigHash
.
ht
);

268 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
idxHash
.
ht
);

269 
nByã
 +
	`sqlôe3_msize
(
pSchema
->
fkeyHash
.
ht
);

271 
p
=
	`sqlôeHashFú°
(&
pSchema
->
åigHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

272 
	`sqlôe3DñëeTriggî
(
db
, (
Triggî
*)
	`sqlôeHashD©a
(
p
));

274 
p
=
	`sqlôeHashFú°
(&
pSchema
->
tblHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

275 
	`sqlôe3DñëeTabÀ
(
db
, (
TabÀ
 *)
	`sqlôeHashD©a
(
p
));

279 
db
->
≤ByãsFªed
 = 0;

280 
	`sqlôe3BåìLóveAŒ
(
db
);

282 *
pHighw©î
 = 0;

283 *
pCuºít
 = 
nByã
;

292 
SQLITE_DBSTATUS_STMT_USED
: {

293 
Vdbe
 *
pVdbe
;

294 
nByã
 = 0;

296 
db
->
≤ByãsFªed
 = &
nByã
;

297 
pVdbe
=
db
->pVdbe;ÖVdbe;ÖVdbeıVdbe->
pNext
){

298 
	`sqlôe3VdbeCÀ¨Obje˘
(
db
, 
pVdbe
);

299 
	`sqlôe3DbFªe
(
db
, 
pVdbe
);

301 
db
->
≤ByãsFªed
 = 0;

303 *
pHighw©î
 = 0;

304 *
pCuºít
 = 
nByã
;

314 
SQLITE_DBSTATUS_CACHE_HIT
:

315 
SQLITE_DBSTATUS_CACHE_MISS
:

316 
SQLITE_DBSTATUS_CACHE_WRITE
:{

317 
i
;

318 
nRë
 = 0;

319 
	`as£π
–
SQLITE_DBSTATUS_CACHE_MISS
==
SQLITE_DBSTATUS_CACHE_HIT
+1 );

320 
	`as£π
–
SQLITE_DBSTATUS_CACHE_WRITE
==
SQLITE_DBSTATUS_CACHE_HIT
+2 );

322 
i
=0; i<
db
->
nDb
; i++){

323 if–
db
->
aDb
[
i
].
pBt
 ){

324 
Pagî
 *
pPagî
 = 
	`sqlôe3BåìPagî
(
db
->
aDb
[
i
].
pBt
);

325 
	`sqlôe3PagîCacheSèt
(
pPagî
, 
›
, 
ª£tFœg
, &
nRë
);

328 *
pHighw©î
 = 0;

331 *
pCuºít
 = 
nRë
;

339 
SQLITE_DBSTATUS_DEFERRED_FKS
: {

340 *
pHighw©î
 = 0;

341 *
pCuºít
 = 
db
->
nDe„ºedImmC⁄s
>0 || db->
nDe„ºedC⁄s
>0;

346 
rc
 = 
SQLITE_ERROR
;

349 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

350  
rc
;

351 
	}
}

	@table.c

19 
	~"sqlôeI¡.h
"

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

23 #i‚de‡
SQLITE_OMIT_GET_TABLE


29 
	sTabResu…
 {

30 **
	mazResu…
;

31 *
	mzEºMsg
;

32 
u32
 
	mnAŒoc
;

33 
u32
 
	mnRow
;

34 
u32
 
	mnCﬁumn
;

35 
u32
 
	mnD©a
;

36 
	mrc
;

37 } 
	tTabResu…
;

44 
	$sqlôe3_gë_èbÀ_cb
(*
pArg
, 
nCﬁ
, **
¨gv
, **
cﬁv
){

45 
TabResu…
 *
p
 = (TabResu…*)
pArg
;

46 
√ed
;

47 
i
;

48 *
z
;

53 if–
p
->
nRow
==0 && 
¨gv
!=0 ){

54 
√ed
 = 
nCﬁ
*2;

56 
√ed
 = 
nCﬁ
;

58 if–
p
->
nD©a
 + 
√ed
 >Ö->
nAŒoc
 ){

59 **
azNew
;

60 
p
->
nAŒoc
 =Ö->nAŒoc*2 + 
√ed
;

61 
azNew
 = 
	`sqlôe3_ªÆloc64
–
p
->
azResu…
, (*)*p->
nAŒoc
 );

62 if–
azNew
==0 ) 
mÆloc_Áûed
;

63 
p
->
azResu…
 = 
azNew
;

69 if–
p
->
nRow
==0 ){

70 
p
->
nCﬁumn
 = 
nCﬁ
;

71 
i
=0; i<
nCﬁ
; i++){

72 
z
 = 
	`sqlôe3_m¥ötf
("%s", 
cﬁv
[
i
]);

73 if–
z
==0 ) 
mÆloc_Áûed
;

74 
p
->
azResu…
[p->
nD©a
++] = 
z
;

76 }if–()
p
->
nCﬁumn
!=
nCﬁ
 ){

77 
	`sqlôe3_‰ì
(
p
->
zEºMsg
);

78 
p
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
(

81 
p
->
rc
 = 
SQLITE_ERROR
;

87 if–
¨gv
!=0 ){

88 
i
=0; i<
nCﬁ
; i++){

89 if–
¨gv
[
i
]==0 ){

90 
z
 = 0;

92 
n
 = 
	`sqlôe3SåÀn30
(
¨gv
[
i
])+1;

93 
z
 = 
	`sqlôe3_mÆloc64
–
n
 );

94 if–
z
==0 ) 
mÆloc_Áûed
;

95 
	`mem˝y
(
z
, 
¨gv
[
i
], 
n
);

97 
p
->
azResu…
[p->
nD©a
++] = 
z
;

99 
p
->
nRow
++;

103 
mÆloc_Áûed
:

104 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

106 
	}
}

118 
	$sqlôe3_gë_èbÀ
(

119 
sqlôe3
 *
db
,

120 c⁄° *
zSql
,

121 ***
∑zResu…
,

122 *
≤Row
,

123 *
≤Cﬁumn
,

124 **
pzEºMsg


126 
rc
;

127 
TabResu…
 
ªs
;

129 #ifde‡
SQLITE_ENABLE_API_ARMOR


130 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
∑zResu…
==0 )  
SQLITE_MISUSE_BKPT
;

132 *
∑zResu…
 = 0;

133 if–
≤Cﬁumn
 ) *pnColumn = 0;

134 if–
≤Row
 ) *pnRow = 0;

135 if–
pzEºMsg
 ) *pzErrMsg = 0;

136 
ªs
.
zEºMsg
 = 0;

137 
ªs
.
nRow
 = 0;

138 
ªs
.
nCﬁumn
 = 0;

139 
ªs
.
nD©a
 = 1;

140 
ªs
.
nAŒoc
 = 20;

141 
ªs
.
rc
 = 
SQLITE_OK
;

142 
ªs
.
azResu…
 = 
	`sqlôe3_mÆloc64
((*)*ªs.
nAŒoc
 );

143 if–
ªs
.
azResu…
==0 ){

144 
db
->
îrCode
 = 
SQLITE_NOMEM
;

145  
SQLITE_NOMEM_BKPT
;

147 
ªs
.
azResu…
[0] = 0;

148 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3_gë_èbÀ_cb
, &
ªs
, 
pzEºMsg
);

149 
	`as£π
–(
ªs
.
azResu…
[0])>‘es.
nD©a
) );

150 
ªs
.
azResu…
[0] = 
	`SQLITE_INT_TO_PTR
‘es.
nD©a
);

151 if–(
rc
&0xff)==
SQLITE_ABORT
 ){

152 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

153 if–
ªs
.
zEºMsg
 ){

154 if–
pzEºMsg
 ){

155 
	`sqlôe3_‰ì
(*
pzEºMsg
);

156 *
pzEºMsg
 = 
	`sqlôe3_m¥ötf
("%s",
ªs
.
zEºMsg
);

158 
	`sqlôe3_‰ì
(
ªs
.
zEºMsg
);

160 
db
->
îrCode
 = 
ªs
.
rc
;

161  
ªs
.
rc
;

163 
	`sqlôe3_‰ì
(
ªs
.
zEºMsg
);

164 if–
rc
!=
SQLITE_OK
 ){

165 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

166  
rc
;

168 if–
ªs
.
nAŒoc
>ªs.
nD©a
 ){

169 **
azNew
;

170 
azNew
 = 
	`sqlôe3_ªÆloc64
–
ªs
.
azResu…
, (*)*ªs.
nD©a
 );

171 if–
azNew
==0 ){

172 
	`sqlôe3_‰ì_èbÀ
(&
ªs
.
azResu…
[1]);

173 
db
->
îrCode
 = 
SQLITE_NOMEM
;

174  
SQLITE_NOMEM_BKPT
;

176 
ªs
.
azResu…
 = 
azNew
;

178 *
∑zResu…
 = &
ªs
.
azResu…
[1];

179 if–
≤Cﬁumn
 ) *≤Cﬁum¿
ªs
.
nCﬁumn
;

180 if–
≤Row
 ) *≤Row = 
ªs
.
nRow
;

181  
rc
;

182 
	}
}

187 
	$sqlôe3_‰ì_èbÀ
(

188 **
azResu…


190 if–
azResu…
 ){

191 
i
, 
n
;

192 
azResu…
--;

193 
	`as£π
–
azResu…
!=0 );

194 
n
 = 
	`SQLITE_PTR_TO_INT
(
azResu…
[0]);

195 
i
=1; i<
n
; i++){ if–
azResu…
[i] ) 
	`sqlôe3_‰ì
(azResult[i]); }

196 
	`sqlôe3_‰ì
(
azResu…
);

198 
	}
}

	@tclsqlite.c

32 #i‡
deföed
(
INCLUDE_MSVC_H
)

33 
	~"msvc.h
"

36 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

37 
	~"sqlôe_t˛.h
"

39 
	~"t˛.h
"

40 #i‚de‡
SQLITE_TCLAPI


41 
	#SQLITE_TCLAPI


	)

44 
	~<î∫o.h
>

50 #i‚de‡
SQLITE_AMALGAMATION


51 
	~"sqlôe3.h
"

52 
	~<°dlib.h
>

53 
	~<°rög.h
>

54 
	~<as£π.h
>

55 
	tu8
;

57 
	~<˘y≥.h
>

60 #i‡!
deföed
(
_WIN32
)

61 
	~<uni°d.h
>

62 
	#GETPID
 
gëpid


	)

63 #ñi‡!
deföed
(
_WIN32_WCE
)

64 #i‚de‡
SQLITE_AMALGAMATION


65 
	#WIN32_LEAN_AND_MEAN


	)

66 
	~<wödows.h
>

68 
	#GETPID
 ()
GëCuºítPro˚ssId


	)

75 #ifde‡
BUILD_sqlôe


76 #unde‡
TCL_STORAGE_CLASS


77 
	#TCL_STORAGE_CLASS
 
DLLEXPORT


	)

80 
	#NUM_PREPARED_STMTS
 10

	)

81 
	#MAX_PREPARED_STMTS
 100

	)

84 
SqlôeDb
 
	tSqlôeDb
;

90 
SqlFunc
 
	tSqlFunc
;

91 
	sSqlFunc
 {

92 
T˛_I¡îp
 *
	möãΩ
;

93 
T˛_Obj
 *
	mpS¸ùt
;

94 
SqlôeDb
 *
	mpDb
;

95 
	mu£EvÆObjv
;

96 *
	mzName
;

97 
SqlFunc
 *
	mpNext
;

104 
SqlCﬁœã
 
	tSqlCﬁœã
;

105 
	sSqlCﬁœã
 {

106 
T˛_I¡îp
 *
	möãΩ
;

107 *
	mzS¸ùt
;

108 
SqlCﬁœã
 *
	mpNext
;

115 
SqlPª∑ªdStmt
 
	tSqlPª∑ªdStmt
;

116 
	sSqlPª∑ªdStmt
 {

117 
SqlPª∑ªdStmt
 *
	mpNext
;

118 
SqlPª∑ªdStmt
 *
	mpPªv
;

119 
sqlôe3_°mt
 *
	mpStmt
;

120 
	mnSql
;

121 c⁄° *
	mzSql
;

122 
	mnP¨m
;

123 
T˛_Obj
 **
	m≠P¨m
;

126 
In¸blobCh™√l
 
	tIn¸blobCh™√l
;

137 
	sSqlôeDb
 {

138 
sqlôe3
 *
	mdb
;

139 
T˛_I¡îp
 *
	möãΩ
;

140 *
	mzBusy
;

141 *
	mzCommô
;

142 *
	mzTø˚
;

143 *
	mzTø˚V2
;

144 *
	mzProfûe
;

145 *
	mzProgªss
;

146 *
	mzAuth
;

147 
	mdißbÀAuth
;

148 *
	mzNuŒ
;

149 
SqlFunc
 *
	mpFunc
;

150 
T˛_Obj
 *
	mpUpd©eHook
;

151 
T˛_Obj
 *
	mpPªUpd©eHook
;

152 
T˛_Obj
 *
	mpRﬁlbackHook
;

153 
T˛_Obj
 *
	mpWÆHook
;

154 
T˛_Obj
 *
	mpU∆ockNŸify
;

155 
SqlCﬁœã
 *
	mpCﬁœã
;

156 
	mrc
;

157 
T˛_Obj
 *
	mpCﬁœãNìded
;

158 
SqlPª∑ªdStmt
 *
	m°mtLi°
;

159 
SqlPª∑ªdStmt
 *
	m°mtLa°
;

160 
	mmaxStmt
;

161 
	mnStmt
;

162 
In¸blobCh™√l
 *
	mpIn¸blob
;

163 
	mnSãp
, 
	mnS‹t
, 
	mnIndex
;

164 
	mnTønß˘i⁄
;

165 
	m›íFœgs
;

166 #ifde‡
SQLITE_TEST


167 
	mbLegacyPª∑ª
;

171 
	sIn¸blobCh™√l
 {

172 
sqlôe3_blob
 *
	mpBlob
;

173 
SqlôeDb
 *
	mpDb
;

174 
	miSìk
;

175 
T˛_Ch™√l
 
	mch™√l
;

176 
In¸blobCh™√l
 *
	mpNext
;

177 
In¸blobCh™√l
 *
	mpPªv
;

184 
	$°æí30
(c⁄° *
z
){

185 c⁄° *
z2
 = 
z
;

186  *
z2
 ){ z2++; }

187  0x3ffffff‡& ()(
z2
 - 
z
);

188 
	}
}

191 #i‚de‡
SQLITE_OMIT_INCRBLOB


196 
	$˛o£In¸blobCh™√ls
(
SqlôeDb
 *
pDb
){

197 
In¸blobCh™√l
 *
p
;

198 
In¸blobCh™√l
 *
pNext
;

200 
p
=
pDb
->
pIn¸blob
;Ö;Ö=
pNext
){

201 
pNext
 = 
p
->pNext;

207 
	`T˛_Uƒegi°îCh™√l
(
pDb
->
öãΩ
, 
p
->
ch™√l
);

209 
	}
}

214 
SQLITE_TCLAPI
 
	$ö¸blobClo£
(

215 
Clõ¡D©a
 
ö°™˚D©a
,

216 
T˛_I¡îp
 *
öãΩ


218 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

219 
rc
 = 
	`sqlôe3_blob_˛o£
(
p
->
pBlob
);

220 
sqlôe3
 *
db
 = 
p
->
pDb
->db;

223 if–
p
->
pNext
 ){

224 
p
->
pNext
->
pPªv
 =Ö->pPrev;

226 if–
p
->
pPªv
 ){

227 
p
->
pPªv
->
pNext
 =Ö->pNext;

229 if–
p
->
pDb
->
pIn¸blob
==p ){

230 
p
->
pDb
->
pIn¸blob
 =Ö->
pNext
;

234 
	`T˛_Fªe
((*)
p
);

236 if–
rc
!=
SQLITE_OK
 ){

237 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
db
), 
TCL_VOLATILE
);

238  
TCL_ERROR
;

240  
TCL_OK
;

241 
	}
}

246 
SQLITE_TCLAPI
 
	$ö¸blobI≈ut
(

247 
Clõ¡D©a
 
ö°™˚D©a
,

248 *
buf
,

249 
bufSize
,

250 *
îr‹CodePå


252 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

253 
nRód
 = 
bufSize
;

254 
nBlob
;

255 
rc
;

257 
nBlob
 = 
	`sqlôe3_blob_byãs
(
p
->
pBlob
);

258 if–(
p
->
iSìk
+
nRód
)>
nBlob
 ){

259 
nRód
 = 
nBlob
-
p
->
iSìk
;

261 if–
nRód
<=0 ){

265 
rc
 = 
	`sqlôe3_blob_ªad
(
p
->
pBlob
, (*)
buf
, 
nRód
,Ö->
iSìk
);

266 if–
rc
!=
SQLITE_OK
 ){

267 *
îr‹CodePå
 = 
rc
;

271 
p
->
iSìk
 +
nRód
;

272  
nRód
;

273 
	}
}

278 
SQLITE_TCLAPI
 
	$ö¸blobOuçut
(

279 
Clõ¡D©a
 
ö°™˚D©a
,

280 
CONST
 *
buf
,

281 
toWrôe
,

282 *
îr‹CodePå


284 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

285 
nWrôe
 = 
toWrôe
;

286 
nBlob
;

287 
rc
;

289 
nBlob
 = 
	`sqlôe3_blob_byãs
(
p
->
pBlob
);

290 if–(
p
->
iSìk
+
nWrôe
)>
nBlob
 ){

291 *
îr‹CodePå
 = 
EINVAL
;

294 if–
nWrôe
<=0 ){

298 
rc
 = 
	`sqlôe3_blob_wrôe
(
p
->
pBlob
, (*)
buf
, 
nWrôe
,Ö->
iSìk
);

299 if–
rc
!=
SQLITE_OK
 ){

300 *
îr‹CodePå
 = 
EIO
;

304 
p
->
iSìk
 +
nWrôe
;

305  
nWrôe
;

306 
	}
}

311 
SQLITE_TCLAPI
 
	$ö¸blobSìk
(

312 
Clõ¡D©a
 
ö°™˚D©a
,

313 
off£t
,

314 
£ekMode
,

315 *
îr‹CodePå


317 
In¸blobCh™√l
 *
p
 = (In¸blobCh™√»*)
ö°™˚D©a
;

319  
£ekMode
 ){

320 
SEEK_SET
:

321 
p
->
iSìk
 = 
off£t
;

323 
SEEK_CUR
:

324 
p
->
iSìk
 +
off£t
;

326 
SEEK_END
:

327 
p
->
iSìk
 = 
	`sqlôe3_blob_byãs
’->
pBlob
Ë+ 
off£t
;

330 : 
	`as£π
(!"Bad seekMode");

333  
p
->
iSìk
;

334 
	}
}

337 
SQLITE_TCLAPI
 
	$ö¸blobW©ch
(

338 
Clõ¡D©a
 
ö°™˚D©a
,

339 
mode


342 
	}
}

343 
SQLITE_TCLAPI
 
	$ö¸blobH™dÀ
(

344 
Clõ¡D©a
 
ö°™˚D©a
,

345 
dú
,

346 
Clõ¡D©a
 *
hPå


348  
TCL_ERROR
;

349 
	}
}

351 
T˛_Ch™√lTy≥
 
	gIn¸blobCh™√lTy≥
 = {

353 
TCL_CHANNEL_VERSION_2
,

354 
ö¸blobClo£
,

355 
ö¸blobI≈ut
,

356 
ö¸blobOuçut
,

357 
ö¸blobSìk
,

360 
ö¸blobW©ch
,

361 
ö¸blobH™dÀ
,

372 
	$¸óãIn¸blobCh™√l
(

373 
T˛_I¡îp
 *
öãΩ
,

374 
SqlôeDb
 *
pDb
,

375 c⁄° *
zDb
,

376 c⁄° *
zTabÀ
,

377 c⁄° *
zCﬁumn
,

378 
sqlôe_öt64
 
iRow
,

379 
isRód⁄ly


381 
In¸blobCh™√l
 *
p
;

382 
sqlôe3
 *
db
 = 
pDb
->db;

383 
sqlôe3_blob
 *
pBlob
;

384 
rc
;

385 
Êags
 = 
TCL_READABLE
|(
isRód⁄ly
 ? 0 : 
TCL_WRITABLE
);

388 
cou¡
 = 0;

389 
zCh™√l
[64];

391 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRow
, !
isRód⁄ly
, &
pBlob
);

392 if–
rc
!=
SQLITE_OK
 ){

393 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

394  
TCL_ERROR
;

397 
p
 = (
In¸blobCh™√l
 *)
	`T˛_AŒoc
((IncrblobChannel));

398 
p
->
iSìk
 = 0;

399 
p
->
pBlob
 =ÖBlob;

401 
	`sqlôe3_¢¥ötf
((
zCh™√l
), zCh™√l, "ö¸blob_%d", ++
cou¡
);

402 
p
->
ch™√l
 = 
	`T˛_Cª©eCh™√l
(&
In¸blobCh™√lTy≥
, 
zCh™√l
,Ö, 
Êags
);

403 
	`T˛_Regi°îCh™√l
(
öãΩ
, 
p
->
ch™√l
);

406 
p
->
pNext
 = 
pDb
->
pIn¸blob
;

407 
p
->
pPªv
 = 0;

408 if–
p
->
pNext
 ){

409 
p
->
pNext
->
pPªv
 =Ö;

411 
pDb
->
pIn¸blob
 = 
p
;

412 
p
->
pDb
 =ÖDb;

414 
	`T˛_SëResu…
(
öãΩ
, (*)
	`T˛_GëCh™√lName
(
p
->
ch™√l
), 
TCL_VOLATILE
);

415  
TCL_OK
;

416 
	}
}

418 
	#˛o£In¸blobCh™√ls
(
pDb
)

	)

433 
	$ß„ToU£EvÆObjv
(
T˛_I¡îp
 *
öãΩ
, 
T˛_Obj
 *
pCmd
){

438 c⁄° *
z
;

439 
n
;

440 
z
 = 
	`T˛_GëSåögFromObj
(
pCmd
, &
n
);

441  
n
-- > 0 ){

442 
c
 = *(
z
++);

443 if–
c
=='$' || c=='[' || c==';' )  0;

446 
	}
}

453 
SqlFunc
 *
	$födSqlFunc
(
SqlôeDb
 *
pDb
, c⁄° *
zName
){

454 
SqlFunc
 *
p
, *
pNew
;

455 
nName
 = 
	`°æí30
(
zName
);

456 
pNew
 = (
SqlFunc
*)
	`T˛_AŒoc
–(*pNewË+ 
nName
 + 1 );

457 
pNew
->
zName
 = (*)&pNew[1];

458 
	`mem˝y
(
pNew
->
zName
, zName, 
nName
+1);

459 
p
=
pDb
->
pFunc
;Ö;Öı->
pNext
){

460 if–
	`sqlôe3_°ricmp
(
p
->
zName
, 
pNew
->zName)==0 ){

461 
	`T˛_Fªe
((*)
pNew
);

462  
p
;

465 
pNew
->
öãΩ
 = 
pDb
->interp;

466 
pNew
->
pDb
 =ÖDb;

467 
pNew
->
pS¸ùt
 = 0;

468 
pNew
->
pNext
 = 
pDb
->
pFunc
;

469 
pDb
->
pFunc
 = 
pNew
;

470  
pNew
;

471 
	}
}

476 
	$dbFªeStmt
(
SqlPª∑ªdStmt
 *
pStmt
){

477 #ifde‡
SQLITE_TEST


478 if–
	`sqlôe3_sql
(
pStmt
->pStmt)==0 ){

479 
	`T˛_Fªe
((*)
pStmt
->
zSql
);

482 
	`sqlôe3_föÆize
(
pStmt
->pStmt);

483 
	`T˛_Fªe
((*)
pStmt
);

484 
	}
}

489 
	$ÊushStmtCache
(
SqlôeDb
 *
pDb
){

490 
SqlPª∑ªdStmt
 *
pPªStmt
;

491 
SqlPª∑ªdStmt
 *
pNext
;

493 
pPªStmt
 = 
pDb
->
°mtLi°
;ÖPªStmt;ÖPªStmt=
pNext
){

494 
pNext
 = 
pPªStmt
->pNext;

495 
	`dbFªeStmt
(
pPªStmt
);

497 
pDb
->
nStmt
 = 0;

498 
pDb
->
°mtLa°
 = 0;

499 
pDb
->
°mtLi°
 = 0;

500 
	}
}

506 
SQLITE_TCLAPI
 
	$DbDñëeCmd
(*
db
){

507 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
db
;

508 
	`ÊushStmtCache
(
pDb
);

509 
	`˛o£In¸blobCh™√ls
(
pDb
);

510 
	`sqlôe3_˛o£
(
pDb
->
db
);

511  
pDb
->
pFunc
 ){

512 
SqlFunc
 *
pFunc
 = 
pDb
->pFunc;

513 
pDb
->
pFunc
 =ÖFunc->
pNext
;

514 
	`as£π
–
pFunc
->
pDb
==pDb );

515 
	`T˛_De¸RefCou¡
(
pFunc
->
pS¸ùt
);

516 
	`T˛_Fªe
((*)
pFunc
);

518  
pDb
->
pCﬁœã
 ){

519 
SqlCﬁœã
 *
pCﬁœã
 = 
pDb
->pCollate;

520 
pDb
->
pCﬁœã
 =ÖCﬁœã->
pNext
;

521 
	`T˛_Fªe
((*)
pCﬁœã
);

523 if–
pDb
->
zBusy
 ){

524 
	`T˛_Fªe
(
pDb
->
zBusy
);

526 if–
pDb
->
zTø˚
 ){

527 
	`T˛_Fªe
(
pDb
->
zTø˚
);

529 if–
pDb
->
zTø˚V2
 ){

530 
	`T˛_Fªe
(
pDb
->
zTø˚V2
);

532 if–
pDb
->
zProfûe
 ){

533 
	`T˛_Fªe
(
pDb
->
zProfûe
);

535 if–
pDb
->
zAuth
 ){

536 
	`T˛_Fªe
(
pDb
->
zAuth
);

538 if–
pDb
->
zNuŒ
 ){

539 
	`T˛_Fªe
(
pDb
->
zNuŒ
);

541 if–
pDb
->
pUpd©eHook
 ){

542 
	`T˛_De¸RefCou¡
(
pDb
->
pUpd©eHook
);

544 if–
pDb
->
pPªUpd©eHook
 ){

545 
	`T˛_De¸RefCou¡
(
pDb
->
pPªUpd©eHook
);

547 if–
pDb
->
pRﬁlbackHook
 ){

548 
	`T˛_De¸RefCou¡
(
pDb
->
pRﬁlbackHook
);

550 if–
pDb
->
pWÆHook
 ){

551 
	`T˛_De¸RefCou¡
(
pDb
->
pWÆHook
);

553 if–
pDb
->
pCﬁœãNìded
 ){

554 
	`T˛_De¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

556 
	`T˛_Fªe
((*)
pDb
);

557 
	}
}

563 
	$DbBusyH™dÀr
(*
cd
, 
nTrõs
){

564 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

565 
rc
;

566 
zVÆ
[30];

568 
	`sqlôe3_¢¥ötf
((
zVÆ
), zVÆ, "%d", 
nTrõs
);

569 
rc
 = 
	`T˛_V¨EvÆ
(
pDb
->
öãΩ
,ÖDb->
zBusy
, " ", 
zVÆ
, (*)0);

570 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

574 
	}
}

576 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


580 
	$DbProgªssH™dÀr
(*
cd
){

581 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

582 
rc
;

584 
	`as£π
–
pDb
->
zProgªss
 );

585 
rc
 = 
	`T˛_EvÆ
(
pDb
->
öãΩ
,ÖDb->
zProgªss
);

586 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

590 
	}
}

593 #i‚de‡
SQLITE_OMIT_TRACE


598 
	$DbTø˚H™dÀr
(*
cd
, c⁄° *
zSql
){

599 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

600 
T˛_DSåög
 
°r
;

602 
	`T˛_DSåögInô
(&
°r
);

603 
	`T˛_DSåögAµíd
(&
°r
, 
pDb
->
zTø˚
, -1);

604 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zSql
);

605 
	`T˛_EvÆ
(
pDb
->
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

606 
	`T˛_DSåögFªe
(&
°r
);

607 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

608 
	}
}

611 #i‚de‡
SQLITE_OMIT_TRACE


618 
	$DbTø˚V2H™dÀr
(

619 
ty≥
,

620 *
cd
,

621 *
pd
,

622 *
xd


624 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

625 
T˛_Obj
 *
pCmd
;

627  
ty≥
 ){

628 
SQLITE_TRACE_STMT
: {

629 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

630 *
zSql
 = (*)
xd
;

632 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

633 
	`T˛_In¸RefCou¡
(
pCmd
);

634 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

635 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

636 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

637 
	`T˛_NewSåögObj
(
zSql
, -1));

638 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

639 
	`T˛_De¸RefCou¡
(
pCmd
);

640 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

643 
SQLITE_TRACE_PROFILE
: {

644 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

645 
sqlôe3_öt64
 
ns
 = (sqlôe3_öt64)
xd
;

647 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

648 
	`T˛_In¸RefCou¡
(
pCmd
);

649 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

650 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

651 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

652 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
ns
));

653 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

654 
	`T˛_De¸RefCou¡
(
pCmd
);

655 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

658 
SQLITE_TRACE_ROW
: {

659 
sqlôe3_°mt
 *
pStmt
 = (sqlôe3_°mà*)
pd
;

661 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

662 
	`T˛_In¸RefCou¡
(
pCmd
);

663 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

664 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
pStmt
));

665 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

666 
	`T˛_De¸RefCou¡
(
pCmd
);

667 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

670 
SQLITE_TRACE_CLOSE
: {

671 
sqlôe3
 *
db
 = (sqlôe3 *)
pd
;

673 
pCmd
 = 
	`T˛_NewSåögObj
(
pDb
->
zTø˚V2
, -1);

674 
	`T˛_In¸RefCou¡
(
pCmd
);

675 
	`T˛_Li°ObjAµídEÀmít
(
pDb
->
öãΩ
, 
pCmd
,

676 
	`T˛_NewWideI¡Obj
((
T˛_WideI¡
)
db
));

677 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

678 
	`T˛_De¸RefCou¡
(
pCmd
);

679 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

683  
SQLITE_OK
;

684 
	}
}

687 #i‚de‡
SQLITE_OMIT_TRACE


692 
	$DbProfûeH™dÀr
(*
cd
, c⁄° *
zSql
, 
sqlôe_uöt64
 
tm
){

693 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

694 
T˛_DSåög
 
°r
;

695 
zTm
[100];

697 
	`sqlôe3_¢¥ötf
((
zTm
)-1, zTm, "%Œd", 
tm
);

698 
	`T˛_DSåögInô
(&
°r
);

699 
	`T˛_DSåögAµíd
(&
°r
, 
pDb
->
zProfûe
, -1);

700 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zSql
);

701 
	`T˛_DSåögAµídEÀmít
(&
°r
, 
zTm
);

702 
	`T˛_EvÆ
(
pDb
->
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

703 
	`T˛_DSåögFªe
(&
°r
);

704 
	`T˛_Re£tResu…
(
pDb
->
öãΩ
);

705 
	}
}

714 
	$DbCommôH™dÀr
(*
cd
){

715 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

716 
rc
;

718 
rc
 = 
	`T˛_EvÆ
(
pDb
->
öãΩ
,ÖDb->
zCommô
);

719 if–
rc
!=
TCL_OK
 || 
	`©oi
(
	`T˛_GëSåögResu…
(
pDb
->
öãΩ
)) ){

723 
	}
}

725 
	$DbRﬁlbackH™dÀr
(*
˛õ¡D©a
){

726 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
˛õ¡D©a
;

727 
	`as£π
(
pDb
->
pRﬁlbackHook
);

728 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
,ÖDb->
pRﬁlbackHook
, 0) ){

729 
	`T˛_BackgroundEº‹
(
pDb
->
öãΩ
);

731 
	}
}

736 
	$DbWÆH™dÀr
(

737 *
˛õ¡D©a
,

738 
sqlôe3
 *
db
,

739 c⁄° *
zDb
,

740 
nE¡ry


742 
ªt
 = 
SQLITE_OK
;

743 
T˛_Obj
 *
p
;

744 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
˛õ¡D©a
;

745 
T˛_I¡îp
 *
öãΩ
 = 
pDb
->interp;

746 
	`as£π
(
pDb
->
pWÆHook
);

748 
	`as£π
–
db
==
pDb
->db );

749 
p
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pWÆHook
);

750 
	`T˛_In¸RefCou¡
(
p
);

751 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
p
, 
	`T˛_NewSåögObj
(
zDb
, -1));

752 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
p
, 
	`T˛_NewI¡Obj
(
nE¡ry
));

753 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 0)

754 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
	`T˛_GëObjResu…
(öãΩ), &
ªt
)

756 
	`T˛_BackgroundEº‹
(
öãΩ
);

758 
	`T˛_De¸RefCou¡
(
p
);

760  
ªt
;

761 
	}
}

763 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

764 
	$£tTe°U∆ockNŸifyV¨s
(
T˛_I¡îp
 *
öãΩ
, 
iArg
, 
nArg
){

765 
zBuf
[64];

766 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
iArg
);

767 
	`T˛_SëV¨
(
öãΩ
, "sqlôe_u∆ock_nŸify_¨g", 
zBuf
, 
TCL_GLOBAL_ONLY
);

768 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nArg
);

769 
	`T˛_SëV¨
(
öãΩ
, "sqlôe_u∆ock_nŸify_¨gcou¡", 
zBuf
, 
TCL_GLOBAL_ONLY
);

770 
	}
}

772 
	#£tTe°U∆ockNŸifyV¨s
(
x
,
y
,
z
)

	)

775 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


776 
	$DbU∆ockNŸify
(**
≠Arg
, 
nArg
){

777 
i
;

778 
i
=0; i<
nArg
; i++){

779 c⁄° 
Êags
 = (
TCL_EVAL_GLOBAL
|
TCL_EVAL_DIRECT
);

780 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
≠Arg
[
i
];

781 
	`£tTe°U∆ockNŸifyV¨s
(
pDb
->
öãΩ
, 
i
, 
nArg
);

782 
	`as£π
–
pDb
->
pU∆ockNŸify
);

783 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
,ÖDb->
pU∆ockNŸify
, 
Êags
);

784 
	`T˛_De¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

785 
pDb
->
pU∆ockNŸify
 = 0;

787 
	}
}

790 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


794 
	$DbPªUpd©eH™dÀr
(

795 *
p
,

796 
sqlôe3
 *
db
,

797 
›
,

798 c⁄° *
zDb
,

799 c⁄° *
zTbl
,

800 
sqlôe_öt64
 
iKey1
,

801 
sqlôe_öt64
 
iKey2


803 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
p
;

804 
T˛_Obj
 *
pCmd
;

805 c⁄° *
azSå
[] = {"DELETE", "INSERT", "UPDATE"};

807 
	`as£π
–(
SQLITE_DELETE
-1)/9 == 0 );

808 
	`as£π
–(
SQLITE_INSERT
-1)/9 == 1 );

809 
	`as£π
–(
SQLITE_UPDATE
-1)/9 == 2 );

810 
	`as£π
–
pDb
->
pPªUpd©eHook
 );

811 
	`as£π
–
db
==
pDb
->db );

812 
	`as£π
–
›
==
SQLITE_INSERT
 || op==
SQLITE_UPDATE
 || op==
SQLITE_DELETE
 );

814 
pCmd
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pPªUpd©eHook
);

815 
	`T˛_In¸RefCou¡
(
pCmd
);

816 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
azSå
[(
›
-1)/9], -1));

817 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zDb
, -1));

818 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zTbl
, -1));

819 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
iKey1
));

820 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
iKey2
));

821 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

822 
	`T˛_De¸RefCou¡
(
pCmd
);

823 
	}
}

826 
	$DbUpd©eH™dÀr
(

827 *
p
,

828 
›
,

829 c⁄° *
zDb
,

830 c⁄° *
zTbl
,

831 
sqlôe_öt64
 
rowid


833 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
p
;

834 
T˛_Obj
 *
pCmd
;

835 c⁄° *
azSå
[] = {"DELETE", "INSERT", "UPDATE"};

837 
	`as£π
–(
SQLITE_DELETE
-1)/9 == 0 );

838 
	`as£π
–(
SQLITE_INSERT
-1)/9 == 1 );

839 
	`as£π
–(
SQLITE_UPDATE
-1)/9 == 2 );

841 
	`as£π
–
pDb
->
pUpd©eHook
 );

842 
	`as£π
–
›
==
SQLITE_INSERT
 || op==
SQLITE_UPDATE
 || op==
SQLITE_DELETE
 );

844 
pCmd
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pUpd©eHook
);

845 
	`T˛_In¸RefCou¡
(
pCmd
);

846 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
azSå
[(
›
-1)/9], -1));

847 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zDb
, -1));

848 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewSåögObj
(
zTbl
, -1));

849 
	`T˛_Li°ObjAµídEÀmít
(0, 
pCmd
, 
	`T˛_NewWideI¡Obj
(
rowid
));

850 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

851 
	`T˛_De¸RefCou¡
(
pCmd
);

852 
	}
}

854 
	$t˛CﬁœãNìded
(

855 *
pCtx
,

856 
sqlôe3
 *
db
,

857 
íc
,

858 c⁄° *
zName


860 
SqlôeDb
 *
pDb
 = (SqlôeDb *)
pCtx
;

861 
T˛_Obj
 *
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pDb
->
pCﬁœãNìded
);

862 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

863 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
(
zName
, -1));

864 
	`T˛_EvÆObjEx
(
pDb
->
öãΩ
, 
pS¸ùt
, 0);

865 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

866 
	}
}

872 
	$t˛SqlCﬁœã
(

873 *
pCtx
,

874 
nA
,

875 c⁄° *
zA
,

876 
nB
,

877 c⁄° *
zB


879 
SqlCﬁœã
 *
p
 = (SqlCﬁœã *)
pCtx
;

880 
T˛_Obj
 *
pCmd
;

882 
pCmd
 = 
	`T˛_NewSåögObj
(
p
->
zS¸ùt
, -1);

883 
	`T˛_In¸RefCou¡
(
pCmd
);

884 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
	`T˛_NewSåögObj
(
zA
, 
nA
));

885 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
	`T˛_NewSåögObj
(
zB
, 
nB
));

886 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

887 
	`T˛_De¸RefCou¡
(
pCmd
);

888  (
	`©oi
(
	`T˛_GëSåögResu…
(
p
->
öãΩ
)));

889 
	}
}

895 
	$t˛SqlFunc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
**
¨gv
){

896 
SqlFunc
 *
p
 = 
	`sqlôe3_u£r_d©a
(
c⁄ãxt
);

897 
T˛_Obj
 *
pCmd
;

898 
i
;

899 
rc
;

901 if–
¨gc
==0 ){

906 
pCmd
 = 
p
->
pS¸ùt
;

907 
	`T˛_In¸RefCou¡
(
pCmd
);

908 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 0);

909 
	`T˛_De¸RefCou¡
(
pCmd
);

920 
T˛_Obj
 **
aArg
;

921 
nArg
;

922 if–
	`T˛_Li°ObjGëEÀmíts
(
p
->
öãΩ
,Ö->
pS¸ùt
, &
nArg
, &
aArg
) ){

923 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

926 
pCmd
 = 
	`T˛_NewLi°Obj
(
nArg
, 
aArg
);

927 
	`T˛_In¸RefCou¡
(
pCmd
);

928 
i
=0; i<
¨gc
; i++){

929 
sqlôe3_vÆue
 *
pIn
 = 
¨gv
[
i
];

930 
T˛_Obj
 *
pVÆ
;

933  
	`sqlôe3_vÆue_ty≥
(
pIn
) ){

934 
SQLITE_BLOB
: {

935 
byãs
 = 
	`sqlôe3_vÆue_byãs
(
pIn
);

936 
pVÆ
 = 
	`T˛_NewByãAºayObj
(
	`sqlôe3_vÆue_blob
(
pIn
), 
byãs
);

939 
SQLITE_INTEGER
: {

940 
sqlôe_öt64
 
v
 = 
	`sqlôe3_vÆue_öt64
(
pIn
);

941 if–
v
>=-2147483647 && v<=2147483647 ){

942 
pVÆ
 = 
	`T˛_NewI¡Obj
(()
v
);

944 
pVÆ
 = 
	`T˛_NewWideI¡Obj
(
v
);

948 
SQLITE_FLOAT
: {

949 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
pIn
);

950 
pVÆ
 = 
	`T˛_NewDoubÀObj
(
r
);

953 
SQLITE_NULL
: {

954 
pVÆ
 = 
	`T˛_NewSåögObj
(
p
->
pDb
->
zNuŒ
, -1);

958 
byãs
 = 
	`sqlôe3_vÆue_byãs
(
pIn
);

959 
pVÆ
 = 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pIn
), 
byãs
);

963 
rc
 = 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pCmd
, 
pVÆ
);

964 if–
rc
 ){

965 
	`T˛_De¸RefCou¡
(
pCmd
);

966 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

970 if–!
p
->
u£EvÆObjv
 ){

974 
	`T˛_GëSåög
(
pCmd
);

976 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pCmd
, 
TCL_EVAL_DIRECT
);

977 
	`T˛_De¸RefCou¡
(
pCmd
);

980 if–
rc
 &&Ñc!=
TCL_RETURN
 ){

981 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
	`T˛_GëSåögResu…
(
p
->
öãΩ
), -1);

983 
T˛_Obj
 *
pV¨
 = 
	`T˛_GëObjResu…
(
p
->
öãΩ
);

984 
n
;

985 
u8
 *
d©a
;

986 c⁄° *
zTy≥
 = (
pV¨
->
ty≥På
 ?ÖV¨->ty≥På->
«me
 : "");

987 
c
 = 
zTy≥
[0];

988 if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"byã¨øy")==0 && 
pV¨
->
byãs
==0 ){

991 
d©a
 = 
	`T˛_GëByãAºayFromObj
(
pV¨
, &
n
);

992 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
d©a
, 
n
, 
SQLITE_TRANSIENT
);

993 }if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"boolean")==0 ){

994 
	`T˛_GëI¡FromObj
(0, 
pV¨
, &
n
);

995 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
n
);

996 }if–
c
=='d' && 
	`°rcmp
(
zTy≥
,"double")==0 ){

997 
r
;

998 
	`T˛_GëDoubÀFromObj
(0, 
pV¨
, &
r
);

999 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
);

1000 }if–(
c
=='w' && 
	`°rcmp
(
zTy≥
,"wideInt")==0) ||

1001 (
c
=='i' && 
	`°rcmp
(
zTy≥
,"int")==0) ){

1002 
T˛_WideI¡
 
v
;

1003 
	`T˛_GëWideI¡FromObj
(0, 
pV¨
, &
v
);

1004 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
v
);

1006 
d©a
 = (*)
	`T˛_GëSåögFromObj
(
pV¨
, &
n
);

1007 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
d©a
, 
n
, 
SQLITE_TRANSIENT
);

1010 
	}
}

1012 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


1019 
auth_ˇŒback
(

1020 *
pArg
,

1021 
code
,

1022 c⁄° *
zArg1
,

1023 c⁄° *
zArg2
,

1024 c⁄° *
zArg3
,

1025 c⁄° *
zArg4


1026 #ifde‡
SQLITE_USER_AUTHENTICATION


1027 ,c⁄° *
zArg5


1030 c⁄° *
	gzCode
;

1031 
T˛_DSåög
 
	g°r
;

1032 
	grc
;

1033 c⁄° *
	gzRïly
;

1034 
SqlôeDb
 *
	gpDb
 = (SqlôeDb*)
pArg
;

1035 if–
	gpDb
->
	gdißbÀAuth
 )  
	gSQLITE_OK
;

1037  
	gcode
 ){

1038 
	gSQLITE_COPY
 : 
zCode
="SQLITE_COPY"; ;

1039 
	gSQLITE_CREATE_INDEX
 : 
zCode
="SQLITE_CREATE_INDEX"; ;

1040 
	gSQLITE_CREATE_TABLE
 : 
zCode
="SQLITE_CREATE_TABLE"; ;

1041 
	gSQLITE_CREATE_TEMP_INDEX
 : 
zCode
="SQLITE_CREATE_TEMP_INDEX"; ;

1042 
	gSQLITE_CREATE_TEMP_TABLE
 : 
zCode
="SQLITE_CREATE_TEMP_TABLE"; ;

1043 
	gSQLITE_CREATE_TEMP_TRIGGER
: 
zCode
="SQLITE_CREATE_TEMP_TRIGGER"; ;

1044 
	gSQLITE_CREATE_TEMP_VIEW
 : 
zCode
="SQLITE_CREATE_TEMP_VIEW"; ;

1045 
	gSQLITE_CREATE_TRIGGER
 : 
zCode
="SQLITE_CREATE_TRIGGER"; ;

1046 
	gSQLITE_CREATE_VIEW
 : 
zCode
="SQLITE_CREATE_VIEW"; ;

1047 
	gSQLITE_DELETE
 : 
zCode
="SQLITE_DELETE"; ;

1048 
	gSQLITE_DROP_INDEX
 : 
zCode
="SQLITE_DROP_INDEX"; ;

1049 
	gSQLITE_DROP_TABLE
 : 
zCode
="SQLITE_DROP_TABLE"; ;

1050 
	gSQLITE_DROP_TEMP_INDEX
 : 
zCode
="SQLITE_DROP_TEMP_INDEX"; ;

1051 
	gSQLITE_DROP_TEMP_TABLE
 : 
zCode
="SQLITE_DROP_TEMP_TABLE"; ;

1052 
	gSQLITE_DROP_TEMP_TRIGGER
 : 
zCode
="SQLITE_DROP_TEMP_TRIGGER"; ;

1053 
	gSQLITE_DROP_TEMP_VIEW
 : 
zCode
="SQLITE_DROP_TEMP_VIEW"; ;

1054 
	gSQLITE_DROP_TRIGGER
 : 
zCode
="SQLITE_DROP_TRIGGER"; ;

1055 
	gSQLITE_DROP_VIEW
 : 
zCode
="SQLITE_DROP_VIEW"; ;

1056 
	gSQLITE_INSERT
 : 
zCode
="SQLITE_INSERT"; ;

1057 
	gSQLITE_PRAGMA
 : 
zCode
="SQLITE_PRAGMA"; ;

1058 
	gSQLITE_READ
 : 
zCode
="SQLITE_READ"; ;

1059 
	gSQLITE_SELECT
 : 
zCode
="SQLITE_SELECT"; ;

1060 
	gSQLITE_TRANSACTION
 : 
zCode
="SQLITE_TRANSACTION"; ;

1061 
	gSQLITE_UPDATE
 : 
zCode
="SQLITE_UPDATE"; ;

1062 
	gSQLITE_ATTACH
 : 
zCode
="SQLITE_ATTACH"; ;

1063 
	gSQLITE_DETACH
 : 
zCode
="SQLITE_DETACH"; ;

1064 
	gSQLITE_ALTER_TABLE
 : 
zCode
="SQLITE_ALTER_TABLE"; ;

1065 
	gSQLITE_REINDEX
 : 
zCode
="SQLITE_REINDEX"; ;

1066 
	gSQLITE_ANALYZE
 : 
zCode
="SQLITE_ANALYZE"; ;

1067 
	gSQLITE_CREATE_VTABLE
 : 
zCode
="SQLITE_CREATE_VTABLE"; ;

1068 
	gSQLITE_DROP_VTABLE
 : 
zCode
="SQLITE_DROP_VTABLE"; ;

1069 
	gSQLITE_FUNCTION
 : 
zCode
="SQLITE_FUNCTION"; ;

1070 
	gSQLITE_SAVEPOINT
 : 
zCode
="SQLITE_SAVEPOINT"; ;

1071 
	gSQLITE_RECURSIVE
 : 
zCode
="SQLITE_RECURSIVE"; ;

1072  : 
zCode
="????"; ;

1074 
T˛_DSåögInô
(&
°r
);

1075 
T˛_DSåögAµíd
(&
°r
, 
pDb
->
zAuth
, -1);

1076 
T˛_DSåögAµídEÀmít
(&
°r
, 
zCode
);

1077 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg1
 ? zArg1 : "");

1078 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg2
 ? zArg2 : "");

1079 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg3
 ? zArg3 : "");

1080 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg4
 ? zArg4 : "");

1081 #ifde‡
SQLITE_USER_AUTHENTICATION


1082 
T˛_DSåögAµídEÀmít
(&
°r
, 
zArg5
 ? zArg5 : "");

1084 
	grc
 = 
T˛_GlobÆEvÆ
(
pDb
->
öãΩ
, 
T˛_DSåögVÆue
(&
°r
));

1085 
T˛_DSåögFªe
(&
°r
);

1086 
	gzRïly
 = 
rc
==
TCL_OK
 ? 
T˛_GëSåögResu…
(
pDb
->
öãΩ
) : "SQLITE_DENY";

1087 if–
°rcmp
(
zRïly
,"SQLITE_OK")==0 ){

1088 
rc
 = 
SQLITE_OK
;

1089 }if–
°rcmp
(
zRïly
,"SQLITE_DENY")==0 ){

1090 
rc
 = 
SQLITE_DENY
;

1091 }if–
°rcmp
(
zRïly
,"SQLITE_IGNORE")==0 ){

1092 
rc
 = 
SQLITE_IGNORE
;

1094 
	grc
 = 999;

1096  
	grc
;

1111 *
	$loˇl_gëlöe
(*
zProm±
, 
FILE
 *
ö
){

1112 *
zLöe
;

1113 
nLöe
;

1114 
n
;

1116 
nLöe
 = 100;

1117 
zLöe
 = 
	`mÆloc
–
nLöe
 );

1118 if–
zLöe
==0 )  0;

1119 
n
 = 0;

1121 if–
n
+100>
nLöe
 ){

1122 
nLöe
 =ÇLine*2 + 100;

1123 
zLöe
 = 
	`ªÆloc
(zLöe, 
nLöe
);

1124 if–
zLöe
==0 )  0;

1126 if–
	`fgës
(&
zLöe
[
n
], 
nLöe
 -Ç, 
ö
)==0 ){

1127 if–
n
==0 ){

1128 
	`‰ì
(
zLöe
);

1131 
zLöe
[
n
] = 0;

1134  
zLöe
[
n
] ){Ç++; }

1135 if–
n
>0 && 
zLöe
[n-1]=='\n' ){

1136 
n
--;

1137 
zLöe
[
n
] = 0;

1141 
zLöe
 = 
	`ªÆloc
–zLöe, 
n
+1 );

1142  
zLöe
;

1143 
	}
}

1154 
SQLITE_TCLAPI
 
	$DbTønsPo°Cmd
(

1155 
Clõ¡D©a
 
d©a
[],

1156 
T˛_I¡îp
 *
öãΩ
,

1157 
ªsu…


1159 c⁄° *c⁄° 
azEnd
[] = {

1165 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
d©a
[0];

1166 
rc
 = 
ªsu…
;

1167 c⁄° *
zEnd
;

1169 
pDb
->
nTønß˘i⁄
--;

1170 
zEnd
 = 
azEnd
[(
rc
==
TCL_ERROR
)*2 + (
pDb
->
nTønß˘i⁄
==0)];

1172 
pDb
->
dißbÀAuth
++;

1173 if–
	`sqlôe3_exec
(
pDb
->
db
, 
zEnd
, 0, 0, 0) ){

1184 if–
rc
!=
TCL_ERROR
 ){

1185 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

1186 
rc
 = 
TCL_ERROR
;

1188 
	`sqlôe3_exec
(
pDb
->
db
, "ROLLBACK", 0, 0, 0);

1190 
pDb
->
dißbÀAuth
--;

1192  
rc
;

1193 
	}
}

1202 
	$dbPª∑ª
(

1203 
SqlôeDb
 *
pDb
,

1204 c⁄° *
zSql
,

1205 
sqlôe3_°mt
 **
µStmt
,

1206 c⁄° **
pzOut


1208 #ifde‡
SQLITE_TEST


1209 if–
pDb
->
bLegacyPª∑ª
 ){

1210  
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, 
µStmt
, 
pzOut
);

1213  
	`sqlôe3_¥ï¨e_v2
(
pDb
->
db
, 
zSql
, -1, 
µStmt
, 
pzOut
);

1214 
	}
}

1231 
	$dbPª∑ªAndBöd
(

1232 
SqlôeDb
 *
pDb
,

1233 c⁄° *
zIn
,

1234 c⁄° **
pzOut
,

1235 
SqlPª∑ªdStmt
 **
µPªStmt


1237 c⁄° *
zSql
 = 
zIn
;

1238 
sqlôe3_°mt
 *
pStmt
 = 0;

1239 
SqlPª∑ªdStmt
 *
pPªStmt
;

1240 
nSql
;

1241 
nV¨
 = 0;

1242 
iP¨m
 = 0;

1243 
c
;

1244 
i
;

1245 
T˛_I¡îp
 *
öãΩ
 = 
pDb
->interp;

1247 *
µPªStmt
 = 0;

1250  (
c
 = 
zSql
[0])==' ' || c=='\t' || c=='\r' || c=='\n' ){ zSql++; }

1251 
nSql
 = 
	`°æí30
(
zSql
);

1253 
pPªStmt
 = 
pDb
->
°mtLi°
;ÖPªStmt;ÖPªStmtıPªStmt->
pNext
){

1254 
n
 = 
pPªStmt
->
nSql
;

1255 if–
nSql
>=
n


1256 && 
	`memcmp
(
pPªStmt
->
zSql
, zSql, 
n
)==0

1257 && (
zSql
[
n
]==0 || zSql[n-1]==';')

1259 
pStmt
 = 
pPªStmt
->pStmt;

1260 *
pzOut
 = &
zSql
[
pPªStmt
->
nSql
];

1266 if–
pPªStmt
->
pPªv
 ){

1267 
pPªStmt
->
pPªv
->
pNext
 =ÖPreStmt->pNext;

1269 
pDb
->
°mtLi°
 = 
pPªStmt
->
pNext
;

1271 if–
pPªStmt
->
pNext
 ){

1272 
pPªStmt
->
pNext
->
pPªv
 =ÖPreStmt->pPrev;

1274 
pDb
->
°mtLa°
 = 
pPªStmt
->
pPªv
;

1276 
pDb
->
nStmt
--;

1277 
nV¨
 = 
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
);

1284 if–
pPªStmt
==0 ){

1285 
nByã
;

1287 if–
SQLITE_OK
!=
	`dbPª∑ª
(
pDb
, 
zSql
, &
pStmt
, 
pzOut
) ){

1288 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1289  
TCL_ERROR
;

1291 if–
pStmt
==0 ){

1292 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
pDb
->
db
) ){

1294 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1295  
TCL_ERROR
;

1300  
TCL_OK
;

1304 
	`as£π
–
pPªStmt
==0 );

1305 
nV¨
 = 
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
);

1306 
nByã
 = (
SqlPª∑ªdStmt
Ë+ 
nV¨
*(
T˛_Obj
 *);

1307 
pPªStmt
 = (
SqlPª∑ªdStmt
*)
	`T˛_AŒoc
(
nByã
);

1308 
	`mem£t
(
pPªStmt
, 0, 
nByã
);

1310 
pPªStmt
->
pStmt
 =ÖStmt;

1311 
pPªStmt
->
nSql
 = ()(*
pzOut
 - 
zSql
);

1312 
pPªStmt
->
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

1313 
pPªStmt
->
≠P¨m
 = (
T˛_Obj
 **)&pPreStmt[1];

1314 #ifde‡
SQLITE_TEST


1315 if–
pPªStmt
->
zSql
==0 ){

1316 *
zC›y
 = 
	`T˛_AŒoc
(
pPªStmt
->
nSql
 + 1);

1317 
	`mem˝y
(
zC›y
, 
zSql
, 
pPªStmt
->
nSql
);

1318 
zC›y
[
pPªStmt
->
nSql
] = '\0';

1319 
pPªStmt
->
zSql
 = 
zC›y
;

1323 
	`as£π
–
pPªStmt
 );

1324 
	`as£π
–
	`°æí30
(
pPªStmt
->
zSql
)=ıPªStmt->
nSql
 );

1325 
	`as£π
–0==
	`memcmp
(
pPªStmt
->
zSql
, zSql,ÖPªStmt->
nSql
) );

1328 
i
=1; i<=
nV¨
; i++){

1329 c⁄° *
zV¨
 = 
	`sqlôe3_böd_∑ømëî_«me
(
pStmt
, 
i
);

1330 if–
zV¨
!=0 && (zVar[0]=='$' || zVar[0]==':' || zVar[0]=='@') ){

1331 
T˛_Obj
 *
pV¨
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, &
zV¨
[1], 0, 0);

1332 if–
pV¨
 ){

1333 
n
;

1334 
u8
 *
d©a
;

1335 c⁄° *
zTy≥
 = (
pV¨
->
ty≥På
 ?ÖV¨->ty≥På->
«me
 : "");

1336 
c
 = 
zTy≥
[0];

1337 if–
zV¨
[0]=='@' ||

1338 (
c
=='b' && 
	`°rcmp
(
zTy≥
,"byã¨øy")==0 && 
pV¨
->
byãs
==0) ){

1342 
d©a
 = 
	`T˛_GëByãAºayFromObj
(
pV¨
, &
n
);

1343 
	`sqlôe3_böd_blob
(
pStmt
, 
i
, 
d©a
, 
n
, 
SQLITE_STATIC
);

1344 
	`T˛_In¸RefCou¡
(
pV¨
);

1345 
pPªStmt
->
≠P¨m
[
iP¨m
++] = 
pV¨
;

1346 }if–
c
=='b' && 
	`°rcmp
(
zTy≥
,"boolean")==0 ){

1347 
	`T˛_GëI¡FromObj
(
öãΩ
, 
pV¨
, &
n
);

1348 
	`sqlôe3_böd_öt
(
pStmt
, 
i
, 
n
);

1349 }if–
c
=='d' && 
	`°rcmp
(
zTy≥
,"double")==0 ){

1350 
r
;

1351 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
pV¨
, &
r
);

1352 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
i
, 
r
);

1353 }if–(
c
=='w' && 
	`°rcmp
(
zTy≥
,"wideInt")==0) ||

1354 (
c
=='i' && 
	`°rcmp
(
zTy≥
,"int")==0) ){

1355 
T˛_WideI¡
 
v
;

1356 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
pV¨
, &
v
);

1357 
	`sqlôe3_böd_öt64
(
pStmt
, 
i
, 
v
);

1359 
d©a
 = (*)
	`T˛_GëSåögFromObj
(
pV¨
, &
n
);

1360 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
, (*)
d©a
, 
n
, 
SQLITE_STATIC
);

1361 
	`T˛_In¸RefCou¡
(
pV¨
);

1362 
pPªStmt
->
≠P¨m
[
iP¨m
++] = 
pV¨
;

1365 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
);

1369 
pPªStmt
->
nP¨m
 = 
iP¨m
;

1370 *
µPªStmt
 = 
pPªStmt
;

1372  
TCL_OK
;

1373 
	}
}

1384 
	$dbRñó£Stmt
(

1385 
SqlôeDb
 *
pDb
,

1386 
SqlPª∑ªdStmt
 *
pPªStmt
,

1387 
disˇrd


1389 
i
;

1392 
i
=0; i<
pPªStmt
->
nP¨m
; i++){

1393 
	`T˛_De¸RefCou¡
(
pPªStmt
->
≠P¨m
[
i
]);

1395 
pPªStmt
->
nP¨m
 = 0;

1397 if–
pDb
->
maxStmt
<=0 || 
disˇrd
 ){

1399 
	`dbFªeStmt
(
pPªStmt
);

1402 
pPªStmt
->
pNext
 = 
pDb
->
°mtLi°
;

1403 
pPªStmt
->
pPªv
 = 0;

1404 if–
pDb
->
°mtLi°
 ){

1405 
pDb
->
°mtLi°
->
pPªv
 = 
pPªStmt
;

1407 
pDb
->
°mtLi°
 = 
pPªStmt
;

1408 if–
pDb
->
°mtLa°
==0 ){

1409 
	`as£π
–
pDb
->
nStmt
==0 );

1410 
pDb
->
°mtLa°
 = 
pPªStmt
;

1412 
	`as£π
–
pDb
->
nStmt
>0 );

1414 
pDb
->
nStmt
++;

1418  
pDb
->
nStmt
>pDb->
maxStmt
 ){

1419 
SqlPª∑ªdStmt
 *
pLa°
 = 
pDb
->
°mtLa°
;

1420 
pDb
->
°mtLa°
 = 
pLa°
->
pPªv
;

1421 
pDb
->
°mtLa°
->
pNext
 = 0;

1422 
pDb
->
nStmt
--;

1423 
	`dbFªeStmt
(
pLa°
);

1426 
	}
}

1437 
DbEvÆC⁄ãxt
 
	tDbEvÆC⁄ãxt
;

1438 
	sDbEvÆC⁄ãxt
 {

1439 
SqlôeDb
 *
	mpDb
;

1440 
T˛_Obj
 *
	mpSql
;

1441 c⁄° *
	mzSql
;

1442 
SqlPª∑ªdStmt
 *
	mpPªStmt
;

1443 
	mnCﬁ
;

1444 
T˛_Obj
 *
	mpAºay
;

1445 
T˛_Obj
 **
	m≠CﬁName
;

1452 
	$dbRñó£CﬁumnNames
(
DbEvÆC⁄ãxt
 *
p
){

1453 if–
p
->
≠CﬁName
 ){

1454 
i
;

1455 
i
=0; i<
p
->
nCﬁ
; i++){

1456 
	`T˛_De¸RefCou¡
(
p
->
≠CﬁName
[
i
]);

1458 
	`T˛_Fªe
((*)
p
->
≠CﬁName
);

1459 
p
->
≠CﬁName
 = 0;

1461 
p
->
nCﬁ
 = 0;

1462 
	}
}

1476 
	$dbEvÆInô
(

1477 
DbEvÆC⁄ãxt
 *
p
,

1478 
SqlôeDb
 *
pDb
,

1479 
T˛_Obj
 *
pSql
,

1480 
T˛_Obj
 *
pAºay


1482 
	`mem£t
(
p
, 0, (
DbEvÆC⁄ãxt
));

1483 
p
->
pDb
 =ÖDb;

1484 
p
->
zSql
 = 
	`T˛_GëSåög
(
pSql
);

1485 
p
->
pSql
 =ÖSql;

1486 
	`T˛_In¸RefCou¡
(
pSql
);

1487 if–
pAºay
 ){

1488 
p
->
pAºay
 =ÖArray;

1489 
	`T˛_In¸RefCou¡
(
pAºay
);

1491 
	}
}

1497 
	$dbEvÆRowInfo
(

1498 
DbEvÆC⁄ãxt
 *
p
,

1499 *
≤Cﬁ
,

1500 
T˛_Obj
 ***
∑pCﬁName


1503 if–0==
p
->
≠CﬁName
 ){

1504 
sqlôe3_°mt
 *
pStmt
 = 
p
->
pPªStmt
->pStmt;

1505 
i
;

1506 
nCﬁ
;

1507 
T˛_Obj
 **
≠CﬁName
 = 0;

1509 
p
->
nCﬁ
 =ÇCﬁ = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

1510 if–
nCﬁ
>0 && (
∑pCﬁName
 || 
p
->
pAºay
) ){

1511 
≠CﬁName
 = (
T˛_Obj
**)
	`T˛_AŒoc
–(T˛_Obj*)*
nCﬁ
 );

1512 
i
=0; i<
nCﬁ
; i++){

1513 
≠CﬁName
[
i
] = 
	`T˛_NewSåögObj
(
	`sqlôe3_cﬁumn_«me
(
pStmt
,i), -1);

1514 
	`T˛_In¸RefCou¡
(
≠CﬁName
[
i
]);

1516 
p
->
≠CﬁName
 =ápColName;

1522 if–
p
->
pAºay
 ){

1523 
T˛_I¡îp
 *
öãΩ
 = 
p
->
pDb
->interp;

1524 
T˛_Obj
 *
pCﬁLi°
 = 
	`T˛_NewObj
();

1525 
T˛_Obj
 *
pSèr
 = 
	`T˛_NewSåögObj
("*", -1);

1527 
i
=0; i<
nCﬁ
; i++){

1528 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pCﬁLi°
, 
≠CﬁName
[
i
]);

1530 
	`T˛_In¸RefCou¡
(
pSèr
);

1531 
	`T˛_ObjSëV¨2
(
öãΩ
, 
p
->
pAºay
, 
pSèr
, 
pCﬁLi°
, 0);

1532 
	`T˛_De¸RefCou¡
(
pSèr
);

1536 if–
∑pCﬁName
 ){

1537 *
∑pCﬁName
 = 
p
->
≠CﬁName
;

1539 if–
≤Cﬁ
 ){

1540 *
≤Cﬁ
 = 
p
->
nCﬁ
;

1542 
	}
}

1555 
	$dbEvÆSãp
(
DbEvÆC⁄ãxt
 *
p
){

1556 c⁄° *
zPªvSql
 = 0;

1558  
p
->
zSql
[0] ||Ö->
pPªStmt
 ){

1559 
rc
;

1560 if–
p
->
pPªStmt
==0 ){

1561 
zPªvSql
 = (
p
->
zSql
==zPrevSql ? 0 :Ö->zSql);

1562 
rc
 = 
	`dbPª∑ªAndBöd
(
p
->
pDb
,Ö->
zSql
, &p->zSql, &p->
pPªStmt
);

1563 if–
rc
!=
TCL_OK
 ) Ñc;

1565 
rcs
;

1566 
SqlôeDb
 *
pDb
 = 
p
->pDb;

1567 
SqlPª∑ªdStmt
 *
pPªStmt
 = 
p
->pPreStmt;

1568 
sqlôe3_°mt
 *
pStmt
 = 
pPªStmt
->pStmt;

1570 
rcs
 = 
	`sqlôe3_°ï
(
pStmt
);

1571 if–
rcs
==
SQLITE_ROW
 ){

1572  
TCL_OK
;

1574 if–
p
->
pAºay
 ){

1575 
	`dbEvÆRowInfo
(
p
, 0, 0);

1577 
rcs
 = 
	`sqlôe3_ª£t
(
pStmt
);

1579 
pDb
->
nSãp
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_FULLSCAN_STEP
,1);

1580 
pDb
->
nS‹t
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_SORT
,1);

1581 
pDb
->
nIndex
 = 
	`sqlôe3_°mt_°©us
(
pStmt
,
SQLITE_STMTSTATUS_AUTOINDEX
,1);

1582 
	`dbRñó£CﬁumnNames
(
p
);

1583 
p
->
pPªStmt
 = 0;

1585 if–
rcs
!=
SQLITE_OK
 ){

1588 
	`dbRñó£Stmt
(
pDb
, 
pPªStmt
, 1);

1589 #i‡
SQLITE_TEST


1590 if–
p
->
pDb
->
bLegacyPª∑ª
 && 
rcs
==
SQLITE_SCHEMA
 && 
zPªvSql
 ){

1596 
p
->
zSql
 = 
zPªvSql
;

1600 
	`T˛_SëObjResu…
(
pDb
->
öãΩ
,

1601 
	`T˛_NewSåögObj
(
	`sqlôe3_îrmsg
(
pDb
->
db
), -1));

1602  
TCL_ERROR
;

1604 
	`dbRñó£Stmt
(
pDb
, 
pPªStmt
, 0);

1610  
TCL_BREAK
;

1611 
	}
}

1618 
	$dbEvÆFöÆize
(
DbEvÆC⁄ãxt
 *
p
){

1619 if–
p
->
pPªStmt
 ){

1620 
	`sqlôe3_ª£t
(
p
->
pPªStmt
->
pStmt
);

1621 
	`dbRñó£Stmt
(
p
->
pDb
,Ö->
pPªStmt
, 0);

1622 
p
->
pPªStmt
 = 0;

1624 if–
p
->
pAºay
 ){

1625 
	`T˛_De¸RefCou¡
(
p
->
pAºay
);

1626 
p
->
pAºay
 = 0;

1628 
	`T˛_De¸RefCou¡
(
p
->
pSql
);

1629 
	`dbRñó£CﬁumnNames
(
p
);

1630 
	}
}

1637 
T˛_Obj
 *
	$dbEvÆCﬁumnVÆue
(
DbEvÆC⁄ãxt
 *
p
, 
iCﬁ
){

1638 
sqlôe3_°mt
 *
pStmt
 = 
p
->
pPªStmt
->pStmt;

1639  
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, 
iCﬁ
) ){

1640 
SQLITE_BLOB
: {

1641 
byãs
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 
iCﬁ
);

1642 c⁄° *
zBlob
 = 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 
iCﬁ
);

1643 if–!
zBlob
 ) 
byãs
 = 0;

1644  
	`T˛_NewByãAºayObj
((
u8
*)
zBlob
, 
byãs
);

1646 
SQLITE_INTEGER
: {

1647 
sqlôe_öt64
 
v
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 
iCﬁ
);

1648 if–
v
>=-2147483647 && v<=2147483647 ){

1649  
	`T˛_NewI¡Obj
(()
v
);

1651  
	`T˛_NewWideI¡Obj
(
v
);

1654 
SQLITE_FLOAT
: {

1655  
	`T˛_NewDoubÀObj
(
	`sqlôe3_cﬁumn_doubÀ
(
pStmt
, 
iCﬁ
));

1657 
SQLITE_NULL
: {

1658  
	`T˛_NewSåögObj
(
p
->
pDb
->
zNuŒ
, -1);

1662  
	`T˛_NewSåögObj
((*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 
iCﬁ
), -1);

1663 
	}
}

1672 #i‡
TCL_MAJOR_VERSION
>8 || (TCL_MAJOR_VERSION==8 && 
TCL_MINOR_VERSION
>=6)

1673 
	#SQLITE_TCL_NRE
 1

	)

1674 
	$DbU£Nª
(){

1675 
maj‹
, 
mö‹
;

1676 
	`T˛_GëVîsi⁄
(&
maj‹
, &
mö‹
, 0, 0);

1677 –(
maj‹
==8 && 
mö‹
>=6) || major>8 );

1678 
	}
}

1689 
	#SQLITE_TCL_NRE
 0

	)

1690 
	#DbU£Nª
(Ë0

	)

1691 
	#T˛_NRAddCÆlback
(
a
,
b
,
c
,
d
,
e
,
f
Ë()0

	)

1692 
	#T˛_NREvÆObj
(
a
,
b
,
c
Ë0

	)

1693 
	#T˛_NRCª©eComm™d
(
a
,
b
,
c
,
d
,
e
,
f
Ë()0

	)

1701 
SQLITE_TCLAPI
 
	$DbEvÆNextCmd
(

1702 
Clõ¡D©a
 
d©a
[],

1703 
T˛_I¡îp
 *
öãΩ
,

1704 
ªsu…


1706 
rc
 = 
ªsu…
;

1712 
DbEvÆC⁄ãxt
 *
p
 = (DbEvÆC⁄ãxà*)
d©a
[0];

1713 
T˛_Obj
 *
pS¸ùt
 = (T˛_Obj *)
d©a
[1];

1714 
T˛_Obj
 *
pAºay
 = 
p
->pArray;

1716  (
rc
==
TCL_OK
 ||Ñc==
TCL_CONTINUE
Ë&& TCL_OK==‘¯
	`dbEvÆSãp
(
p
)) ){

1717 
i
;

1718 
nCﬁ
;

1719 
T˛_Obj
 **
≠CﬁName
;

1720 
	`dbEvÆRowInfo
(
p
, &
nCﬁ
, &
≠CﬁName
);

1721 
i
=0; i<
nCﬁ
; i++){

1722 
T˛_Obj
 *
pVÆ
 = 
	`dbEvÆCﬁumnVÆue
(
p
, 
i
);

1723 if–
pAºay
==0 ){

1724 
	`T˛_ObjSëV¨2
(
öãΩ
, 
≠CﬁName
[
i
], 0, 
pVÆ
, 0);

1726 
	`T˛_ObjSëV¨2
(
öãΩ
, 
pAºay
, 
≠CﬁName
[
i
], 
pVÆ
, 0);

1739 if–
	`DbU£Nª
() ){

1740 
	`T˛_NRAddCÆlback
(
öãΩ
, 
DbEvÆNextCmd
, (*)
p
, (*)
pS¸ùt
, 0, 0);

1741  
	`T˛_NREvÆObj
(
öãΩ
, 
pS¸ùt
, 0);

1743 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 0);

1747 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

1748 
	`dbEvÆFöÆize
(
p
);

1749 
	`T˛_Fªe
((*)
p
);

1751 if–
rc
==
TCL_OK
 ||Ñc==
TCL_BREAK
 ){

1752 
	`T˛_Re£tResu…
(
öãΩ
);

1753 
rc
 = 
TCL_OK
;

1755  
rc
;

1756 
	}
}

1767 
	$DbHookCmd
(

1768 
T˛_I¡îp
 *
öãΩ
,

1769 
SqlôeDb
 *
pDb
,

1770 
T˛_Obj
 *
pArg
,

1771 
T˛_Obj
 **
µHook


1773 
sqlôe3
 *
db
 = 
pDb
->db;

1775 if–*
µHook
 ){

1776 
	`T˛_SëObjResu…
(
öãΩ
, *
µHook
);

1777 if–
pArg
 ){

1778 
	`T˛_De¸RefCou¡
(*
µHook
);

1779 *
µHook
 = 0;

1782 if–
pArg
 ){

1783 
	`as£π
–!(*
µHook
) );

1784 if–
	`T˛_GëCh¨Lígth
(
pArg
)>0 ){

1785 *
µHook
 = 
pArg
;

1786 
	`T˛_In¸RefCou¡
(*
µHook
);

1790 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1791 
	`sqlôe3_¥eupd©e_hook
(
db
, (
pDb
->
pPªUpd©eHook
?
DbPªUpd©eH™dÀr
:0),ÖDb);

1793 
	`sqlôe3_upd©e_hook
(
db
, (
pDb
->
pUpd©eHook
?
DbUpd©eH™dÀr
:0),ÖDb);

1794 
	`sqlôe3_rﬁlback_hook
(
db
, (
pDb
->
pRﬁlbackHook
?
DbRﬁlbackH™dÀr
:0),ÖDb);

1795 
	`sqlôe3_wÆ_hook
(
db
, (
pDb
->
pWÆHook
?
DbWÆH™dÀr
:0),ÖDb);

1796 
	}
}

1811 
SQLITE_TCLAPI
 
	$DbObjCmd
(

1812 *
cd
,

1813 
T˛_I¡îp
 *
öãΩ
,

1814 
objc
,

1815 
T˛_Obj
 *c⁄°*
objv


1817 
SqlôeDb
 *
pDb
 = (SqlôeDb*)
cd
;

1818 
choi˚
;

1819 
rc
 = 
TCL_OK
;

1820 c⁄° *
DB_°rs
[] = {

1836 
	eDB_íum
 {

1837 
DB_AUTHORIZER
, 
DB_BACKUP
, 
DB_BUSY
,

1838 
DB_CACHE
, 
DB_CHANGES
, 
DB_CLOSE
,

1839 
DB_COLLATE
, 
DB_COLLATION_NEEDED
, 
DB_COMMIT_HOOK
,

1840 
DB_COMPLETE
, 
DB_COPY
, 
DB_ENABLE_LOAD_EXTENSION
,

1841 
DB_ERRORCODE
, 
DB_EVAL
, 
DB_EXISTS
,

1842 
DB_FUNCTION
, 
DB_INCRBLOB
, 
DB_INTERRUPT
,

1843 
DB_LAST_INSERT_ROWID
, 
DB_NULLVALUE
, 
DB_ONECOLUMN
,

1844 
DB_PREUPDATE
, 
DB_PROFILE
, 
DB_PROGRESS
,

1845 
DB_REKEY
, 
DB_RESTORE
, 
DB_ROLLBACK_HOOK
,

1846 
DB_STATUS
, 
DB_TIMEOUT
, 
DB_TOTAL_CHANGES
,

1847 
DB_TRACE
, 
DB_TRACE_V2
, 
DB_TRANSACTION
,

1848 
DB_UNLOCK_NOTIFY
, 
DB_UPDATE_HOOK
, 
DB_VERSION
,

1849 
DB_WAL_HOOK
,

1853 if–
objc
<2 ){

1854 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUBCOMMAND ...");

1855  
TCL_ERROR
;

1857 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
DB_°rs
, "›ti⁄", 0, &
choi˚
) ){

1858  
TCL_ERROR
;

1861  (
DB_íum
)
choi˚
 ){

1881 
DB_AUTHORIZER
: {

1882 #ifde‡
SQLITE_OMIT_AUTHORIZATION


1883 
	`T˛_AµídResu…
(
öãΩ
, "authorizationÇotávailable inÅhis build",

1885  
TCL_ERROR
;

1887 if–
objc
>3 ){

1888 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

1889  
TCL_ERROR
;

1890 }if–
objc
==2 ){

1891 if–
pDb
->
zAuth
 ){

1892 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zAuth
, (*)0);

1895 *
zAuth
;

1896 
Àn
;

1897 if–
pDb
->
zAuth
 ){

1898 
	`T˛_Fªe
(
pDb
->
zAuth
);

1900 
zAuth
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

1901 if–
zAuth
 && 
Àn
>0 ){

1902 
pDb
->
zAuth
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

1903 
	`mem˝y
(
pDb
->
zAuth
, zAuth, 
Àn
+1);

1905 
pDb
->
zAuth
 = 0;

1907 if–
pDb
->
zAuth
 ){

1908 (*
	tsqlôe3_auth_cb
)(

1911 
pDb
->
öãΩ
 = interp;

1912 
	`sqlôe3_£t_auth‹izî
(
pDb
->
db
,(
sqlôe3_auth_cb
)
auth_ˇŒback
,pDb);

1914 
	`sqlôe3_£t_auth‹izî
(
pDb
->
db
, 0, 0);

1927 
DB_BACKUP
: {

1928 c⁄° *
zDe°Fûe
;

1929 c⁄° *
zSrcDb
;

1930 
sqlôe3
 *
pDe°
;

1931 
sqlôe3_backup
 *
pBackup
;

1933 if–
objc
==3 ){

1934 
zSrcDb
 = "main";

1935 
zDe°Fûe
 = 
	`T˛_GëSåög
(
objv
[2]);

1936 }if–
objc
==4 ){

1937 
zSrcDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1938 
zDe°Fûe
 = 
	`T˛_GëSåög
(
objv
[3]);

1940 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?DATABASE? FILENAME");

1941  
TCL_ERROR
;

1943 
rc
 = 
	`sqlôe3_›í_v2
(
zDe°Fûe
, &
pDe°
,

1944 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
| 
pDb
->
›íFœgs
, 0);

1945 if–
rc
!=
SQLITE_OK
 ){

1946 
	`T˛_AµídResu…
(
öãΩ
, "cannot openÅarget database: ",

1947 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1948 
	`sqlôe3_˛o£
(
pDe°
);

1949  
TCL_ERROR
;

1951 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°
, "maö", 
pDb
->
db
, 
zSrcDb
);

1952 if–
pBackup
==0 ){

1953 
	`T˛_AµídResu…
(
öãΩ
, "backup failed: ",

1954 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1955 
	`sqlôe3_˛o£
(
pDe°
);

1956  
TCL_ERROR
;

1958  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK
 ){}

1959 
	`sqlôe3_backup_föish
(
pBackup
);

1960 if–
rc
==
SQLITE_DONE
 ){

1961 
rc
 = 
TCL_OK
;

1963 
	`T˛_AµídResu…
(
öãΩ
, "backup failed: ",

1964 
	`sqlôe3_îrmsg
(
pDe°
), (*)0);

1965 
rc
 = 
TCL_ERROR
;

1967 
	`sqlôe3_˛o£
(
pDe°
);

1976 
DB_BUSY
: {

1977 if–
objc
>3 ){

1978 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "CALLBACK");

1979  
TCL_ERROR
;

1980 }if–
objc
==2 ){

1981 if–
pDb
->
zBusy
 ){

1982 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zBusy
, (*)0);

1985 *
zBusy
;

1986 
Àn
;

1987 if–
pDb
->
zBusy
 ){

1988 
	`T˛_Fªe
(
pDb
->
zBusy
);

1990 
zBusy
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

1991 if–
zBusy
 && 
Àn
>0 ){

1992 
pDb
->
zBusy
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

1993 
	`mem˝y
(
pDb
->
zBusy
, zBusy, 
Àn
+1);

1995 
pDb
->
zBusy
 = 0;

1997 if–
pDb
->
zBusy
 ){

1998 
pDb
->
öãΩ
 = interp;

1999 
	`sqlôe3_busy_h™dÀr
(
pDb
->
db
, 
DbBusyH™dÀr
,ÖDb);

2001 
	`sqlôe3_busy_h™dÀr
(
pDb
->
db
, 0, 0);

2013 
DB_CACHE
: {

2014 *
subCmd
;

2015 
n
;

2017 if–
objc
<=2 ){

2018 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "cache option ?arg?");

2019  
TCL_ERROR
;

2021 
subCmd
 = 
	`T˛_GëSåögFromObj
–
objv
[2], 0 );

2022 if–*
subCmd
=='f' && 
	`°rcmp
(subCmd,"flush")==0 ){

2023 if–
objc
!=3 ){

2024 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "flush");

2025  
TCL_ERROR
;

2027 
	`ÊushStmtCache
–
pDb
 );

2029 }if–*
subCmd
=='s' && 
	`°rcmp
(subCmd,"size")==0 ){

2030 if–
objc
!=4 ){

2031 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "sizeÇ");

2032  
TCL_ERROR
;

2034 if–
TCL_ERROR
==
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
n
) ){

2035 
	`T˛_AµídResu…
–
öãΩ
, "cannot convert \"",

2036 
	`T˛_GëSåögFromObj
(
objv
[3],0), "\"Åo integer", (*)0);

2037  
TCL_ERROR
;

2039 if–
n
<0 ){

2040 
	`ÊushStmtCache
–
pDb
 );

2041 
n
 = 0;

2042 }if–
n
>
MAX_PREPARED_STMTS
 ){

2043 
n
 = 
MAX_PREPARED_STMTS
;

2045 
pDb
->
maxStmt
 = 
n
;

2049 
	`T˛_AµídResu…
–
öãΩ
, "bad option \"",

2050 
	`T˛_GëSåögFromObj
(
objv
[2],0), "\": must be flush or size",

2052  
TCL_ERROR
;

2063 
DB_CHANGES
: {

2064 
T˛_Obj
 *
pResu…
;

2065 if–
objc
!=2 ){

2066 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2067  
TCL_ERROR
;

2069 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2070 
	`T˛_SëI¡Obj
(
pResu…
, 
	`sqlôe3_ch™ges
(
pDb
->
db
));

2078 
DB_CLOSE
: {

2079 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåögFromObj
(
objv
[0], 0));

2089 
DB_COLLATE
: {

2090 
SqlCﬁœã
 *
pCﬁœã
;

2091 *
zName
;

2092 *
zS¸ùt
;

2093 
nS¸ùt
;

2094 if–
objc
!=4 ){

2095 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NAME SCRIPT");

2096  
TCL_ERROR
;

2098 
zName
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2099 
zS¸ùt
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nS¸ùt
);

2100 
pCﬁœã
 = (
SqlCﬁœã
*)
	`T˛_AŒoc
–(*pCﬁœãË+ 
nS¸ùt
 + 1 );

2101 if–
pCﬁœã
==0 )  
TCL_ERROR
;

2102 
pCﬁœã
->
öãΩ
 = interp;

2103 
pCﬁœã
->
pNext
 = 
pDb
->pCollate;

2104 
pCﬁœã
->
zS¸ùt
 = (*)&pCollate[1];

2105 
pDb
->
pCﬁœã
 =ÖCollate;

2106 
	`mem˝y
(
pCﬁœã
->
zS¸ùt
, zS¸ùt, 
nS¸ùt
+1);

2107 if–
	`sqlôe3_¸óã_cﬁœti⁄
(
pDb
->
db
, 
zName
, 
SQLITE_UTF8
,

2108 
pCﬁœã
, 
t˛SqlCﬁœã
) ){

2109 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

2110  
TCL_ERROR
;

2121 
DB_COLLATION_NEEDED
: {

2122 if–
objc
!=3 ){

2123 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SCRIPT");

2124  
TCL_ERROR
;

2126 if–
pDb
->
pCﬁœãNìded
 ){

2127 
	`T˛_De¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

2129 
pDb
->
pCﬁœãNìded
 = 
	`T˛_Du∂iˇãObj
(
objv
[2]);

2130 
	`T˛_In¸RefCou¡
(
pDb
->
pCﬁœãNìded
);

2131 
	`sqlôe3_cﬁœti⁄_√eded
(
pDb
->
db
,ÖDb, 
t˛CﬁœãNìded
);

2142 
DB_COMMIT_HOOK
: {

2143 if–
objc
>3 ){

2144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2145  
TCL_ERROR
;

2146 }if–
objc
==2 ){

2147 if–
pDb
->
zCommô
 ){

2148 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zCommô
, (*)0);

2151 c⁄° *
zCommô
;

2152 
Àn
;

2153 if–
pDb
->
zCommô
 ){

2154 
	`T˛_Fªe
(
pDb
->
zCommô
);

2156 
zCommô
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2157 if–
zCommô
 && 
Àn
>0 ){

2158 
pDb
->
zCommô
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2159 
	`mem˝y
(
pDb
->
zCommô
, zCommô, 
Àn
+1);

2161 
pDb
->
zCommô
 = 0;

2163 if–
pDb
->
zCommô
 ){

2164 
pDb
->
öãΩ
 = interp;

2165 
	`sqlôe3_commô_hook
(
pDb
->
db
, 
DbCommôH™dÀr
,ÖDb);

2167 
	`sqlôe3_commô_hook
(
pDb
->
db
, 0, 0);

2179 
DB_COMPLETE
: {

2180 #i‚de‡
SQLITE_OMIT_COMPLETE


2181 
T˛_Obj
 *
pResu…
;

2182 
isCom∂ëe
;

2183 if–
objc
!=3 ){

2184 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL");

2185  
TCL_ERROR
;

2187 
isCom∂ëe
 = 
	`sqlôe3_com∂ëe
–
	`T˛_GëSåögFromObj
(
objv
[2], 0) );

2188 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2189 
	`T˛_SëBoﬁónObj
(
pResu…
, 
isCom∂ëe
);

2211 
DB_COPY
: {

2212 *
zTabÀ
;

2213 *
zFûe
;

2214 *
zC⁄Êi˘
;

2215 
sqlôe3_°mt
 *
pStmt
;

2216 
nCﬁ
;

2217 
nByã
;

2218 
i
, 
j
;

2219 
nSï
;

2220 
nNuŒ
;

2221 *
zSql
;

2222 *
zLöe
;

2223 **
azCﬁ
;

2224 c⁄° *
zCommô
;

2225 
FILE
 *
ö
;

2226 
löío
 = 0;

2227 
zLöeNum
[80];

2228 
T˛_Obj
 *
pResu…
;

2230 c⁄° *
zSï
;

2231 c⁄° *
zNuŒ
;

2232 if–
objc
<5 || objc>7 ){

2233 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
,

2235  
TCL_ERROR
;

2237 if–
objc
>=6 ){

2238 
zSï
 = 
	`T˛_GëSåögFromObj
(
objv
[5], 0);

2240 
zSï
 = "\t";

2242 if–
objc
>=7 ){

2243 
zNuŒ
 = 
	`T˛_GëSåögFromObj
(
objv
[6], 0);

2245 
zNuŒ
 = "";

2247 
zC⁄Êi˘
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2248 
zTabÀ
 = 
	`T˛_GëSåögFromObj
(
objv
[3], 0);

2249 
zFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[4], 0);

2250 
nSï
 = 
	`°æí30
(
zSï
);

2251 
nNuŒ
 = 
	`°æí30
(
zNuŒ
);

2252 if–
nSï
==0 ){

2253 
	`T˛_AµídResu…
(
öãΩ
,"Error:Çon-null separatorÑequired for copy",

2255  
TCL_ERROR
;

2257 if(
	`°rcmp
(
zC⁄Êi˘
, "rollback") != 0 &&

2258 
	`°rcmp
(
zC⁄Êi˘
, "abort" ) != 0 &&

2259 
	`°rcmp
(
zC⁄Êi˘
, "fail" ) != 0 &&

2260 
	`°rcmp
(
zC⁄Êi˘
, "ignore" ) != 0 &&

2261 
	`°rcmp
(
zC⁄Êi˘
, "replace" ) != 0 ) {

2262 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: \"", 
zC⁄Êi˘
,

2265  
TCL_ERROR
;

2267 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM '%q'", 
zTabÀ
);

2268 if–
zSql
==0 ){

2269 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹:ÇÿsuchÅabÀ: ", 
zTabÀ
, (*)0);

2270  
TCL_ERROR
;

2272 
nByã
 = 
	`°æí30
(
zSql
);

2273 
rc
 = 
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, &
pStmt
, 0);

2274 
	`sqlôe3_‰ì
(
zSql
);

2275 if–
rc
 ){

2276 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2277 
nCﬁ
 = 0;

2279 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

2281 
	`sqlôe3_föÆize
(
pStmt
);

2282 if–
nCﬁ
==0 ) {

2283  
TCL_ERROR
;

2285 
zSql
 = 
	`mÆloc
–
nByã
 + 50 + 
nCﬁ
*2 );

2286 if–
zSql
==0 ) {

2287 
	`T˛_AµídResu…
(
öãΩ
, "Error: can't malloc()", (*)0);

2288  
TCL_ERROR
;

2290 
	`sqlôe3_¢¥ötf
(
nByã
+50, 
zSql
, "INSERT OR %q INTO '%q' VALUES(?",

2291 
zC⁄Êi˘
, 
zTabÀ
);

2292 
j
 = 
	`°æí30
(
zSql
);

2293 
i
=1; i<
nCﬁ
; i++){

2294 
zSql
[
j
++] = ',';

2295 
zSql
[
j
++] = '?';

2297 
zSql
[
j
++] = ')';

2298 
zSql
[
j
] = 0;

2299 
rc
 = 
	`sqlôe3_¥ï¨e
(
pDb
->
db
, 
zSql
, -1, &
pStmt
, 0);

2300 
	`‰ì
(
zSql
);

2301 if–
rc
 ){

2302 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2303 
	`sqlôe3_föÆize
(
pStmt
);

2304  
TCL_ERROR
;

2306 
ö
 = 
	`f›í
(
zFûe
, "rb");

2307 if–
ö
==0 ){

2308 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹: c™nŸ o≥¿fûe: ", 
zFûe
, 
NULL
);

2309 
	`sqlôe3_föÆize
(
pStmt
);

2310  
TCL_ERROR
;

2312 
azCﬁ
 = 
	`mÆloc
–◊zCﬁ[0])*(
nCﬁ
+1) );

2313 if–
azCﬁ
==0 ) {

2314 
	`T˛_AµídResu…
(
öãΩ
, "Error: can't malloc()", (*)0);

2315 
	`f˛o£
(
ö
);

2316  
TCL_ERROR
;

2318 ()
	`sqlôe3_exec
(
pDb
->
db
, "BEGIN", 0, 0, 0);

2319 
zCommô
 = "COMMIT";

2320  (
zLöe
 = 
	`loˇl_gëlöe
(0, 
ö
))!=0 ){

2321 *
z
;

2322 
löío
++;

2323 
azCﬁ
[0] = 
zLöe
;

2324 
i
=0, 
z
=
zLöe
; *z; z++){

2325 if–*
z
==
zSï
[0] && 
	`°∫cmp
(z, zSï, 
nSï
)==0 ){

2326 *
z
 = 0;

2327 
i
++;

2328 if–
i
<
nCﬁ
 ){

2329 
azCﬁ
[
i
] = &
z
[
nSï
];

2330 
z
 +
nSï
-1;

2334 if–
i
+1!=
nCﬁ
 ){

2335 *
zEº
;

2336 
nEº
 = 
	`°æí30
(
zFûe
) + 200;

2337 
zEº
 = 
	`mÆloc
(
nEº
);

2338 if–
zEº
 ){

2339 
	`sqlôe3_¢¥ötf
(
nEº
, 
zEº
,

2341 
zFûe
, 
löío
, 
nCﬁ
, 
i
+1);

2342 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, (*)0);

2343 
	`‰ì
(
zEº
);

2345 
zCommô
 = "ROLLBACK";

2348 
i
=0; i<
nCﬁ
; i++){

2350 if–(
nNuŒ
>0 && 
	`°rcmp
(
azCﬁ
[
i
], 
zNuŒ
)==0)

2351 || 
	`°æí30
(
azCﬁ
[
i
])==0

2353 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
+1);

2355 
	`sqlôe3_böd_ãxt
(
pStmt
, 
i
+1, 
azCﬁ
[i], -1, 
SQLITE_STATIC
);

2358 
	`sqlôe3_°ï
(
pStmt
);

2359 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

2360 
	`‰ì
(
zLöe
);

2361 if–
rc
!=
SQLITE_OK
 ){

2362 
	`T˛_AµídResu…
(
öãΩ
,"Eº‹: ", 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2363 
zCommô
 = "ROLLBACK";

2367 
	`‰ì
(
azCﬁ
);

2368 
	`f˛o£
(
ö
);

2369 
	`sqlôe3_föÆize
(
pStmt
);

2370 ()
	`sqlôe3_exec
(
pDb
->
db
, 
zCommô
, 0, 0, 0);

2372 if–
zCommô
[0] == 'C' ){

2374 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2375 
	`T˛_SëI¡Obj
(
pResu…
, 
löío
);

2376 
rc
 = 
TCL_OK
;

2379 
	`sqlôe3_¢¥ötf
((
zLöeNum
), zLöeNum,"%d",
löío
);

2380 
	`T˛_AµídResu…
(
öãΩ
,", faûed whûê¥o˚ssögÜöe: ",
zLöeNum
,

2382 
rc
 = 
TCL_ERROR
;

2393 
DB_ENABLE_LOAD_EXTENSION
: {

2394 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


2395 
⁄off
;

2396 if–
objc
!=3 ){

2397 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "BOOLEAN");

2398  
TCL_ERROR
;

2400 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
⁄off
) ){

2401  
TCL_ERROR
;

2403 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
pDb
->
db
, 
⁄off
);

2406 
	`T˛_AµídResu…
(
öãΩ
, "extensionÜoading isÅurned offát compile-time",

2408  
TCL_ERROR
;

2418 
DB_ERRORCODE
: {

2419 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_îrcode
(
pDb
->
db
)));

2430 
DB_EXISTS
:

2431 
DB_ONECOLUMN
: {

2432 
T˛_Obj
 *
pResu…
 = 0;

2433 
DbEvÆC⁄ãxt
 
sEvÆ
;

2434 if–
objc
!=3 ){

2435 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL");

2436  
TCL_ERROR
;

2439 
	`dbEvÆInô
(&
sEvÆ
, 
pDb
, 
objv
[2], 0);

2440 
rc
 = 
	`dbEvÆSãp
(&
sEvÆ
);

2441 if–
choi˚
==
DB_ONECOLUMN
 ){

2442 if–
rc
==
TCL_OK
 ){

2443 
pResu…
 = 
	`dbEvÆCﬁumnVÆue
(&
sEvÆ
, 0);

2444 }if–
rc
==
TCL_BREAK
 ){

2445 
	`T˛_Re£tResu…
(
öãΩ
);

2447 }if–
rc
==
TCL_BREAK
 ||Ñc==
TCL_OK
 ){

2448 
pResu…
 = 
	`T˛_NewBoﬁónObj
(
rc
==
TCL_OK
);

2450 
	`dbEvÆFöÆize
(&
sEvÆ
);

2451 if–
pResu…
 ) 
	`T˛_SëObjResu…
(
öãΩ
,ÖResult);

2453 if–
rc
==
TCL_BREAK
 ){

2454 
rc
 = 
TCL_OK
;

2468 
DB_EVAL
: {

2469 if–
objc
<3 || objc>5 ){

2470 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SQL ?ARRAY-NAME? ?SCRIPT?");

2471  
TCL_ERROR
;

2474 if–
objc
==3 ){

2475 
DbEvÆC⁄ãxt
 
sEvÆ
;

2476 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

2477 
	`T˛_In¸RefCou¡
(
pRë
);

2478 
	`dbEvÆInô
(&
sEvÆ
, 
pDb
, 
objv
[2], 0);

2479  
TCL_OK
==(
rc
 = 
	`dbEvÆSãp
(&
sEvÆ
)) ){

2480 
i
;

2481 
nCﬁ
;

2482 
	`dbEvÆRowInfo
(&
sEvÆ
, &
nCﬁ
, 0);

2483 
i
=0; i<
nCﬁ
; i++){

2484 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`dbEvÆCﬁumnVÆue
(&
sEvÆ
, 
i
));

2487 
	`dbEvÆFöÆize
(&
sEvÆ
);

2488 if–
rc
==
TCL_BREAK
 ){

2489 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

2490 
rc
 = 
TCL_OK
;

2492 
	`T˛_De¸RefCou¡
(
pRë
);

2494 
Clõ¡D©a
 
cd2
[2];

2495 
DbEvÆC⁄ãxt
 *
p
;

2496 
T˛_Obj
 *
pAºay
 = 0;

2497 
T˛_Obj
 *
pS¸ùt
;

2499 if–
objc
==5 && *(*)
	`T˛_GëSåög
(
objv
[3]) ){

2500 
pAºay
 = 
objv
[3];

2502 
pS¸ùt
 = 
objv
[
objc
-1];

2503 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

2505 
p
 = (
DbEvÆC⁄ãxt
 *)
	`T˛_AŒoc
((DbEvalContext));

2506 
	`dbEvÆInô
(
p
, 
pDb
, 
objv
[2], 
pAºay
);

2508 
cd2
[0] = (*)
p
;

2509 
cd2
[1] = (*)
pS¸ùt
;

2510 
rc
 = 
	`DbEvÆNextCmd
(
cd2
, 
öãΩ
, 
TCL_OK
);

2521 
DB_FUNCTION
: {

2522 
Êags
 = 
SQLITE_UTF8
;

2523 
SqlFunc
 *
pFunc
;

2524 
T˛_Obj
 *
pS¸ùt
;

2525 *
zName
;

2526 
nArg
 = -1;

2527 
i
;

2528 if–
objc
<4 ){

2529 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NAME ?SWITCHES? SCRIPT");

2530  
TCL_ERROR
;

2532 
i
=3; i<(
objc
-1); i++){

2533 c⁄° *
z
 = 
	`T˛_GëSåög
(
objv
[
i
]);

2534 
n
 = 
	`°æí30
(
z
);

2535 if–
n
>2 && 
	`°∫cmp
(
z
, "-argcount",n)==0 ){

2536 if–
i
==(
objc
-2) ){

2537 
	`T˛_AµídResu…
(
öãΩ
, "›ti⁄Ñequúe†™árgumít: ", 
z
, 0);

2538  
TCL_ERROR
;

2540 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
nArg
ËË 
TCL_ERROR
;

2541 if–
nArg
<0 ){

2542 
	`T˛_AµídResu…
(
öãΩ
, "number ofárguments must beÇon-negative",

2544  
TCL_ERROR
;

2546 
i
++;

2548 if–
n
>2 && 
	`°∫cmp
(
z
, "-deterministic",n)==0 ){

2549 
Êags
 |
SQLITE_DETERMINISTIC
;

2551 
	`T˛_AµídResu…
(
öãΩ
, "bad o±i⁄ \"", 
z
,

2554  
TCL_ERROR
;

2558 
pS¸ùt
 = 
objv
[
objc
-1];

2559 
zName
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

2560 
pFunc
 = 
	`födSqlFunc
(
pDb
, 
zName
);

2561 if–
pFunc
==0 )  
TCL_ERROR
;

2562 if–
pFunc
->
pS¸ùt
 ){

2563 
	`T˛_De¸RefCou¡
(
pFunc
->
pS¸ùt
);

2565 
pFunc
->
pS¸ùt
 =ÖScript;

2566 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

2567 
pFunc
->
u£EvÆObjv
 = 
	`ß„ToU£EvÆObjv
(
öãΩ
, 
pS¸ùt
);

2568 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
pDb
->
db
, 
zName
, 
nArg
, 
Êags
,

2569 
pFunc
, 
t˛SqlFunc
, 0, 0);

2570 if–
rc
!=
SQLITE_OK
 ){

2571 
rc
 = 
TCL_ERROR
;

2572 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
pDb
->
db
), 
TCL_VOLATILE
);

2580 
DB_INCRBLOB
: {

2581 #ifde‡
SQLITE_OMIT_INCRBLOB


2582 
	`T˛_AµídResu…
(
öãΩ
, "incrblobÇotávailable inÅhis build", (*)0);

2583  
TCL_ERROR
;

2585 
isRód⁄ly
 = 0;

2586 c⁄° *
zDb
 = "main";

2587 c⁄° *
zTabÀ
;

2588 c⁄° *
zCﬁumn
;

2589 
T˛_WideI¡
 
iRow
;

2592 if–
objc
>3 && 
	`°rcmp
(
	`T˛_GëSåög
(
objv
[2]), "-readonly")==0 ){

2593 
isRód⁄ly
 = 1;

2596 if–
objc
!=(5+
isRód⁄ly
) && objc!=(6+isReadonly) ){

2597 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?-readonly? ?DB? TABLE COLUMN ROWID");

2598  
TCL_ERROR
;

2601 if–
objc
==(6+
isRód⁄ly
) ){

2602 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

2604 
zTabÀ
 = 
	`T˛_GëSåög
(
objv
[
objc
-3]);

2605 
zCﬁumn
 = 
	`T˛_GëSåög
(
objv
[
objc
-2]);

2606 
rc
 = 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[
objc
-1], &
iRow
);

2608 if–
rc
==
TCL_OK
 ){

2609 
rc
 = 
	`¸óãIn¸blobCh™√l
(

2610 
öãΩ
, 
pDb
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, (
sqlôe3_öt64
)
iRow
, 
isRód⁄ly


2623 
DB_INTERRUPT
: {

2624 
	`sqlôe3_öãºu±
(
pDb
->
db
);

2636 
DB_NULLVALUE
: {

2637 if–
objc
!=2 && objc!=3 ){

2638 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "NULLVALUE");

2639  
TCL_ERROR
;

2641 if–
objc
==3 ){

2642 
Àn
;

2643 *
zNuŒ
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2644 if–
pDb
->
zNuŒ
 ){

2645 
	`T˛_Fªe
(
pDb
->
zNuŒ
);

2647 if–
zNuŒ
 && 
Àn
>0 ){

2648 
pDb
->
zNuŒ
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2649 
	`mem˝y
(
pDb
->
zNuŒ
, zNuŒ, 
Àn
);

2650 
pDb
->
zNuŒ
[
Àn
] = '\0';

2652 
pDb
->
zNuŒ
 = 0;

2655 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pDb
->
zNuŒ
, -1));

2664 
DB_LAST_INSERT_ROWID
: {

2665 
T˛_Obj
 *
pResu…
;

2666 
T˛_WideI¡
 
rowid
;

2667 if–
objc
!=2 ){

2668 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2669  
TCL_ERROR
;

2671 
rowid
 = 
	`sqlôe3_œ°_ö£π_rowid
(
pDb
->
db
);

2672 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2673 
	`T˛_SëWideI¡Obj
(
pResu…
, 
rowid
);

2686 
DB_PROGRESS
: {

2687 if–
objc
==2 ){

2688 if–
pDb
->
zProgªss
 ){

2689 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zProgªss
, (*)0);

2691 }if–
objc
==4 ){

2692 *
zProgªss
;

2693 
Àn
;

2694 
N
;

2695 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
) ){

2696  
TCL_ERROR
;

2698 if–
pDb
->
zProgªss
 ){

2699 
	`T˛_Fªe
(
pDb
->
zProgªss
);

2701 
zProgªss
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
Àn
);

2702 if–
zProgªss
 && 
Àn
>0 ){

2703 
pDb
->
zProgªss
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2704 
	`mem˝y
(
pDb
->
zProgªss
, zProgªss, 
Àn
+1);

2706 
pDb
->
zProgªss
 = 0;

2708 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


2709 if–
pDb
->
zProgªss
 ){

2710 
pDb
->
öãΩ
 = interp;

2711 
	`sqlôe3_¥ogªss_h™dÀr
(
pDb
->
db
, 
N
, 
DbProgªssH™dÀr
,ÖDb);

2713 
	`sqlôe3_¥ogªss_h™dÀr
(
pDb
->
db
, 0, 0, 0);

2717 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "N CALLBACK");

2718  
TCL_ERROR
;

2729 
DB_PROFILE
: {

2730 if–
objc
>3 ){

2731 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2732  
TCL_ERROR
;

2733 }if–
objc
==2 ){

2734 if–
pDb
->
zProfûe
 ){

2735 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zProfûe
, (*)0);

2738 *
zProfûe
;

2739 
Àn
;

2740 if–
pDb
->
zProfûe
 ){

2741 
	`T˛_Fªe
(
pDb
->
zProfûe
);

2743 
zProfûe
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2744 if–
zProfûe
 && 
Àn
>0 ){

2745 
pDb
->
zProfûe
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2746 
	`mem˝y
(
pDb
->
zProfûe
, zProfûe, 
Àn
+1);

2748 
pDb
->
zProfûe
 = 0;

2750 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

2751 if–
pDb
->
zProfûe
 ){

2752 
pDb
->
öãΩ
 = interp;

2753 
	`sqlôe3_¥ofûe
(
pDb
->
db
, 
DbProfûeH™dÀr
,ÖDb);

2755 
	`sqlôe3_¥ofûe
(
pDb
->
db
, 0, 0);

2767 
DB_REKEY
: {

2768 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

2769 
nKey
;

2770 *
pKey
;

2772 if–
objc
!=3 ){

2773 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "KEY");

2774  
TCL_ERROR
;

2776 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

2777 
pKey
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
nKey
);

2778 
rc
 = 
	`sqlôe3_ªkey
(
pDb
->
db
, 
pKey
, 
nKey
);

2779 if–
rc
 ){

2780 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îr°r
(
rc
), (*)0);

2781 
rc
 = 
TCL_ERROR
;

2792 
DB_RESTORE
: {

2793 c⁄° *
zSrcFûe
;

2794 c⁄° *
zDe°Db
;

2795 
sqlôe3
 *
pSrc
;

2796 
sqlôe3_backup
 *
pBackup
;

2797 
nTimeout
 = 0;

2799 if–
objc
==3 ){

2800 
zDe°Db
 = "main";

2801 
zSrcFûe
 = 
	`T˛_GëSåög
(
objv
[2]);

2802 }if–
objc
==4 ){

2803 
zDe°Db
 = 
	`T˛_GëSåög
(
objv
[2]);

2804 
zSrcFûe
 = 
	`T˛_GëSåög
(
objv
[3]);

2806 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?DATABASE? FILENAME");

2807  
TCL_ERROR
;

2809 
rc
 = 
	`sqlôe3_›í_v2
(
zSrcFûe
, &
pSrc
,

2810 
SQLITE_OPEN_READONLY
 | 
pDb
->
›íFœgs
, 0);

2811 if–
rc
!=
SQLITE_OK
 ){

2812 
	`T˛_AµídResu…
(
öãΩ
, "cannot open source database: ",

2813 
	`sqlôe3_îrmsg
(
pSrc
), (*)0);

2814 
	`sqlôe3_˛o£
(
pSrc
);

2815  
TCL_ERROR
;

2817 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDb
->
db
, 
zDe°Db
, 
pSrc
, "main");

2818 if–
pBackup
==0 ){

2819 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: ",

2820 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2821 
	`sqlôe3_˛o£
(
pSrc
);

2822  
TCL_ERROR
;

2824  (
rc
 = 
	`sqlôe3_backup_°ï
(
pBackup
,100))==
SQLITE_OK


2825 || 
rc
==
SQLITE_BUSY
 ){

2826 if–
rc
==
SQLITE_BUSY
 ){

2827 if–
nTimeout
++ >= 3 ) ;

2828 
	`sqlôe3_¶ìp
(100);

2831 
	`sqlôe3_backup_föish
(
pBackup
);

2832 if–
rc
==
SQLITE_DONE
 ){

2833 
rc
 = 
TCL_OK
;

2834 }if–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

2835 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: source database busy",

2837 
rc
 = 
TCL_ERROR
;

2839 
	`T˛_AµídResu…
(
öãΩ
, "restore failed: ",

2840 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

2841 
rc
 = 
TCL_ERROR
;

2843 
	`sqlôe3_˛o£
(
pSrc
);

2853 
DB_STATUS
: {

2854 
v
;

2855 c⁄° *
zOp
;

2856 if–
objc
!=3 ){

2857 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "(step|sort|autoindex)");

2858  
TCL_ERROR
;

2860 
zOp
 = 
	`T˛_GëSåög
(
objv
[2]);

2861 if–
	`°rcmp
(
zOp
, "step")==0 ){

2862 
v
 = 
pDb
->
nSãp
;

2863 }if–
	`°rcmp
(
zOp
, "sort")==0 ){

2864 
v
 = 
pDb
->
nS‹t
;

2865 }if–
	`°rcmp
(
zOp
, "autoindex")==0 ){

2866 
v
 = 
pDb
->
nIndex
;

2868 
	`T˛_AµídResu…
(
öãΩ
,

2871  
TCL_ERROR
;

2873 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
v
));

2882 
DB_TIMEOUT
: {

2883 
ms
;

2884 if–
objc
!=3 ){

2885 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "MILLISECONDS");

2886  
TCL_ERROR
;

2888 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
ms
ËË 
TCL_ERROR
;

2889 
	`sqlôe3_busy_timeout
(
pDb
->
db
, 
ms
);

2899 
DB_TOTAL_CHANGES
: {

2900 
T˛_Obj
 *
pResu…
;

2901 if–
objc
!=2 ){

2902 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

2903  
TCL_ERROR
;

2905 
pResu…
 = 
	`T˛_GëObjResu…
(
öãΩ
);

2906 
	`T˛_SëI¡Obj
(
pResu…
, 
	`sqlôe3_tŸÆ_ch™ges
(
pDb
->
db
));

2916 
DB_TRACE
: {

2917 if–
objc
>3 ){

2918 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK?");

2919  
TCL_ERROR
;

2920 }if–
objc
==2 ){

2921 if–
pDb
->
zTø˚
 ){

2922 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zTø˚
, (*)0);

2925 *
zTø˚
;

2926 
Àn
;

2927 if–
pDb
->
zTø˚
 ){

2928 
	`T˛_Fªe
(
pDb
->
zTø˚
);

2930 
zTø˚
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

2931 if–
zTø˚
 && 
Àn
>0 ){

2932 
pDb
->
zTø˚
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

2933 
	`mem˝y
(
pDb
->
zTø˚
, zTø˚, 
Àn
+1);

2935 
pDb
->
zTø˚
 = 0;

2937 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
) \

2938 && !
	`deföed
(
SQLITE_OMIT_DEPRECATED
)

2939 if–
pDb
->
zTø˚
 ){

2940 
pDb
->
öãΩ
 = interp;

2941 
	`sqlôe3_åa˚
(
pDb
->
db
, 
DbTø˚H™dÀr
,ÖDb);

2943 
	`sqlôe3_åa˚
(
pDb
->
db
, 0, 0);

2956 
DB_TRACE_V2
: {

2957 if–
objc
>4 ){

2958 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CALLBACK? ?MASK?");

2959  
TCL_ERROR
;

2960 }if–
objc
==2 ){

2961 if–
pDb
->
zTø˚V2
 ){

2962 
	`T˛_AµídResu…
(
öãΩ
, 
pDb
->
zTø˚V2
, (*)0);

2965 *
zTø˚V2
;

2966 
Àn
;

2967 
T˛_WideI¡
 
wMask
 = 0;

2968 if–
objc
==4 ){

2969 c⁄° *
TTYPE_°rs
[] = {

2972 
	eTTYPE_íum
 {

2973 
TTYPE_STMT
, 
TTYPE_PROFILE
, 
TTYPE_ROW
, 
TTYPE_CLOSE


2975 
i
;

2976 if–
TCL_OK
!=
	`T˛_Li°ObjLígth
(
öãΩ
, 
objv
[3], &
Àn
) ){

2977  
TCL_ERROR
;

2979 
i
=0; i<
Àn
; i++){

2980 
T˛_Obj
 *
pObj
;

2981 
ây≥
;

2982 if–
TCL_OK
!=
	`T˛_Li°ObjIndex
(
öãΩ
, 
objv
[3], 
i
, &
pObj
) ){

2983  
TCL_ERROR
;

2985 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
pObj
, 
TTYPE_°rs
, "traceÅype",

2986 0, &
ây≥
)!=
TCL_OK
 ){

2987 
T˛_WideI¡
 
wTy≥
;

2988 
T˛_Obj
 *
pEº‹
 = 
	`T˛_Du∂iˇãObj
(
	`T˛_GëObjResu…
(
öãΩ
));

2989 
	`T˛_In¸RefCou¡
(
pEº‹
);

2990 if–
TCL_OK
==
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
pObj
, &
wTy≥
) ){

2991 
	`T˛_De¸RefCou¡
(
pEº‹
);

2992 
wMask
 |
wTy≥
;

2994 
	`T˛_SëObjResu…
(
öãΩ
, 
pEº‹
);

2995 
	`T˛_De¸RefCou¡
(
pEº‹
);

2996  
TCL_ERROR
;

2999  (
TTYPE_íum
)
ây≥
 ){

3000 
TTYPE_STMT
: 
wMask
 |
SQLITE_TRACE_STMT
; ;

3001 
TTYPE_PROFILE
: 
wMask
 |
SQLITE_TRACE_PROFILE
; ;

3002 
TTYPE_ROW
: 
wMask
 |
SQLITE_TRACE_ROW
; ;

3003 
TTYPE_CLOSE
: 
wMask
 |
SQLITE_TRACE_CLOSE
; ;

3008 
wMask
 = 
SQLITE_TRACE_STMT
;

3010 if–
pDb
->
zTø˚V2
 ){

3011 
	`T˛_Fªe
(
pDb
->
zTø˚V2
);

3013 
zTø˚V2
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
Àn
);

3014 if–
zTø˚V2
 && 
Àn
>0 ){

3015 
pDb
->
zTø˚V2
 = 
	`T˛_AŒoc
–
Àn
 + 1 );

3016 
	`mem˝y
(
pDb
->
zTø˚V2
, zTø˚V2, 
Àn
+1);

3018 
pDb
->
zTø˚V2
 = 0;

3020 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

3021 if–
pDb
->
zTø˚V2
 ){

3022 
pDb
->
öãΩ
 = interp;

3023 
	`sqlôe3_åa˚_v2
(
pDb
->
db
, ()
wMask
, 
DbTø˚V2H™dÀr
,ÖDb);

3025 
	`sqlôe3_åa˚_v2
(
pDb
->
db
, 0, 0, 0);

3043 
DB_TRANSACTION
: {

3044 
T˛_Obj
 *
pS¸ùt
;

3045 c⁄° *
zBegö
 = "SAVEPOINT _tcl_transaction";

3046 if–
objc
!=3 && objc!=4 ){

3047 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "[TYPE] SCRIPT");

3048  
TCL_ERROR
;

3051 if–
pDb
->
nTønß˘i⁄
==0 && 
objc
==4 ){

3052 c⁄° *
TTYPE_°rs
[] = {

3055 
	eTTYPE_íum
 {

3056 
TTYPE_DEFERRED
, 
TTYPE_EXCLUSIVE
, 
TTYPE_IMMEDIATE


3058 
ây≥
;

3059 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
TTYPE_°rs
, "transactionÅype",

3060 0, &
ây≥
) ){

3061  
TCL_ERROR
;

3063  (
TTYPE_íum
)
ây≥
 ){

3064 
TTYPE_DEFERRED
: ; ;

3065 
TTYPE_EXCLUSIVE
: 
zBegö
 = "BEGIN EXCLUSIVE"; ;

3066 
TTYPE_IMMEDIATE
: 
zBegö
 = "BEGIN IMMEDIATE"; ;

3069 
pS¸ùt
 = 
objv
[
objc
-1];

3072 
pDb
->
dißbÀAuth
++;

3073 
rc
 = 
	`sqlôe3_exec
(
pDb
->
db
, 
zBegö
, 0, 0, 0);

3074 
pDb
->
dißbÀAuth
--;

3075 if–
rc
!=
SQLITE_OK
 ){

3076 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

3077  
TCL_ERROR
;

3079 
pDb
->
nTønß˘i⁄
++;

3086 if–
	`DbU£Nª
() ){

3087 
	`T˛_NRAddCÆlback
(
öãΩ
, 
DbTønsPo°Cmd
, 
cd
, 0, 0, 0);

3088 ()
	`T˛_NREvÆObj
(
öãΩ
, 
pS¸ùt
, 0);

3090 
rc
 = 
	`DbTønsPo°Cmd
(&
cd
, 
öãΩ
, 
	`T˛_EvÆObjEx
(öãΩ, 
pS¸ùt
, 0));

3098 
DB_UNLOCK_NOTIFY
: {

3099 #i‚de‡
SQLITE_ENABLE_UNLOCK_NOTIFY


3100 
	`T˛_AµídResu…
(
öãΩ
, "unlock_notifyÇotávailable inÅhis build",

3102 
rc
 = 
TCL_ERROR
;

3104 if–
objc
!=2 && objc!=3 ){

3105 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

3106 
rc
 = 
TCL_ERROR
;

3108 (*
xNŸify
)(**, ) = 0;

3109 *
pNŸifyArg
 = 0;

3111 if–
pDb
->
pU∆ockNŸify
 ){

3112 
	`T˛_De¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

3113 
pDb
->
pU∆ockNŸify
 = 0;

3116 if–
objc
==3 ){

3117 
xNŸify
 = 
DbU∆ockNŸify
;

3118 
pNŸifyArg
 = (*)
pDb
;

3119 
pDb
->
pU∆ockNŸify
 = 
objv
[2];

3120 
	`T˛_In¸RefCou¡
(
pDb
->
pU∆ockNŸify
);

3123 if–
	`sqlôe3_u∆ock_nŸify
(
pDb
->
db
, 
xNŸify
, 
pNŸifyArg
) ){

3124 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), (*)0);

3125 
rc
 = 
TCL_ERROR
;

3138 
DB_PREUPDATE
: {

3139 #i‚de‡
SQLITE_ENABLE_PREUPDATE_HOOK


3140 
	`T˛_AµídResu…
(
öãΩ
, "preupdate_hook was omittedát compile-time");

3141 
rc
 = 
TCL_ERROR
;

3143 c⁄° *
azSub
[] = {"count", "depth", "hook", "new", "old", 0};

3144 
	eDbPªupd©eSubCmd
 {

3145 
PRE_COUNT
, 
PRE_DEPTH
, 
PRE_HOOK
, 
PRE_NEW
, 
PRE_OLD


3147 
iSub
;

3149 if–
objc
<3 ){

3150 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SUB-COMMAND ?ARGS?");

3152 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
azSub
, "sub-comm™d", 0, &
iSub
) ){

3153  
TCL_ERROR
;

3156  (
DbPªupd©eSubCmd
)
iSub
 ){

3157 
PRE_COUNT
: {

3158 
nCﬁ
 = 
	`sqlôe3_¥eupd©e_cou¡
(
pDb
->
db
);

3159 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nCﬁ
));

3163 
PRE_HOOK
: {

3164 if–
objc
>4 ){

3165 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "hook ?SCRIPT?");

3166  
TCL_ERROR
;

3168 
	`DbHookCmd
(
öãΩ
, 
pDb
, (
objc
==4 ? 
objv
[3] : 0), &pDb->
pPªUpd©eHook
);

3172 
PRE_DEPTH
: {

3173 
T˛_Obj
 *
pRë
;

3174 if–
objc
!=3 ){

3175 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "");

3176  
TCL_ERROR
;

3178 
pRë
 = 
	`T˛_NewI¡Obj
(
	`sqlôe3_¥eupd©e_dïth
(
pDb
->
db
));

3179 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

3183 
PRE_NEW
:

3184 
PRE_OLD
: {

3185 
iIdx
;

3186 
sqlôe3_vÆue
 *
pVÆue
;

3187 if–
objc
!=4 ){

3188 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "INDEX");

3189  
TCL_ERROR
;

3191 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
iIdx
) ){

3192  
TCL_ERROR
;

3195 if–
iSub
==
PRE_OLD
 ){

3196 
rc
 = 
	`sqlôe3_¥eupd©e_ﬁd
(
pDb
->
db
, 
iIdx
, &
pVÆue
);

3198 
	`as£π
–
iSub
==
PRE_NEW
 );

3199 
rc
 = 
	`sqlôe3_¥eupd©e_√w
(
pDb
->
db
, 
iIdx
, &
pVÆue
);

3202 if–
rc
==
SQLITE_OK
 ){

3203 
T˛_Obj
 *
pObj
;

3204 
pObj
 = 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆue
), -1);

3205 
	`T˛_SëObjResu…
(
öãΩ
, 
pObj
);

3207 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
pDb
->
db
), 0);

3208  
TCL_ERROR
;

3221 
DB_WAL_HOOK
:

3222 
DB_UPDATE_HOOK
:

3223 
DB_ROLLBACK_HOOK
: {

3227 
T˛_Obj
 **
µHook
 = 0;

3228 if–
choi˚
==
DB_WAL_HOOK
 ) 
µHook
 = &
pDb
->
pWÆHook
;

3229 if–
choi˚
==
DB_UPDATE_HOOK
 ) 
µHook
 = &
pDb
->
pUpd©eHook
;

3230 if–
choi˚
==
DB_ROLLBACK_HOOK
 ) 
µHook
 = &
pDb
->
pRﬁlbackHook
;

3231 if–
objc
>3 ){

3232 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

3233  
TCL_ERROR
;

3236 
	`DbHookCmd
(
öãΩ
, 
pDb
, (
objc
==3 ? 
objv
[2] : 0), 
µHook
);

3244 
DB_VERSION
: {

3245 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_libvîsi⁄
(), 
TCL_STATIC
);

3251  
rc
;

3252 
	}
}

3254 #i‡
SQLITE_TCL_NRE


3259 
SQLITE_TCLAPI
 
	$DbObjCmdAd≠t‹
(

3260 *
cd
,

3261 
T˛_I¡îp
 *
öãΩ
,

3262 
objc
,

3263 
T˛_Obj
 *c⁄°*
objv


3265  
	`T˛_NRCÆlObjProc
(
öãΩ
, 
DbObjCmd
, 
cd
, 
objc
, 
objv
);

3266 
	}
}

3284 
SQLITE_TCLAPI
 
	$DbMaö
(

3285 *
cd
,

3286 
T˛_I¡îp
 *
öãΩ
,

3287 
objc
,

3288 
T˛_Obj
 *c⁄°*
objv


3290 
SqlôeDb
 *
p
;

3291 c⁄° *
zArg
;

3292 *
zEºMsg
;

3293 
i
;

3294 c⁄° *
zFûe
;

3295 c⁄° *
zVfs
 = 0;

3296 
Êags
;

3297 
T˛_DSåög
 
å™¶©edFûíame
;

3298 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3299 *
pKey
 = 0;

3300 
nKey
 = 0;

3302 
rc
;

3310 #ifde‡
SQLITE_TCL_DEFAULT_FULLMUTEX


3311 
Êags
 = 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_FULLMUTEX
;

3313 
Êags
 = 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_NOMUTEX
;

3316 if–
objc
==2 ){

3317 
zArg
 = 
	`T˛_GëSåögFromObj
(
objv
[1], 0);

3318 if–
	`°rcmp
(
zArg
,"-version")==0 ){

3319 
	`T˛_AµídResu…
(
öãΩ
,
	`sqlôe3_libvîsi⁄
(), (*)0);

3320  
TCL_OK
;

3322 if–
	`°rcmp
(
zArg
,"-sourceid")==0 ){

3323 
	`T˛_AµídResu…
(
öãΩ
,
	`sqlôe3_sour˚id
(), (*)0);

3324  
TCL_OK
;

3326 if–
	`°rcmp
(
zArg
,"-has-codec")==0 ){

3327 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3328 
	`T˛_AµídResu…
(
öãΩ
,"1",(*)0);

3330 
	`T˛_AµídResu…
(
öãΩ
,"0",(*)0);

3332  
TCL_OK
;

3335 
i
=3; i+1<
objc
; i+=2){

3336 
zArg
 = 
	`T˛_GëSåög
(
objv
[
i
]);

3337 if–
	`°rcmp
(
zArg
,"-key")==0 ){

3338 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3339 
pKey
 = 
	`T˛_GëByãAºayFromObj
(
objv
[
i
+1], &
nKey
);

3341 }if–
	`°rcmp
(
zArg
, "-vfs")==0 ){

3342 
zVfs
 = 
	`T˛_GëSåög
(
objv
[
i
+1]);

3343 }if–
	`°rcmp
(
zArg
, "-readonly")==0 ){

3344 
b
;

3345 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3346 if–
b
 ){

3347 
Êags
 &~(
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
);

3348 
Êags
 |
SQLITE_OPEN_READONLY
;

3350 
Êags
 &~
SQLITE_OPEN_READONLY
;

3351 
Êags
 |
SQLITE_OPEN_READWRITE
;

3353 }if–
	`°rcmp
(
zArg
, "-create")==0 ){

3354 
b
;

3355 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3356 if–
b
 && (
Êags
 & 
SQLITE_OPEN_READONLY
)==0 ){

3357 
Êags
 |
SQLITE_OPEN_CREATE
;

3359 
Êags
 &~
SQLITE_OPEN_CREATE
;

3361 }if–
	`°rcmp
(
zArg
, "-nomutex")==0 ){

3362 
b
;

3363 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3364 if–
b
 ){

3365 
Êags
 |
SQLITE_OPEN_NOMUTEX
;

3366 
Êags
 &~
SQLITE_OPEN_FULLMUTEX
;

3368 
Êags
 &~
SQLITE_OPEN_NOMUTEX
;

3370 }if–
	`°rcmp
(
zArg
, "-fullmutex")==0 ){

3371 
b
;

3372 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3373 if–
b
 ){

3374 
Êags
 |
SQLITE_OPEN_FULLMUTEX
;

3375 
Êags
 &~
SQLITE_OPEN_NOMUTEX
;

3377 
Êags
 &~
SQLITE_OPEN_FULLMUTEX
;

3379 }if–
	`°rcmp
(
zArg
, "-uri")==0 ){

3380 
b
;

3381 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
b
ËË 
TCL_ERROR
;

3382 if–
b
 ){

3383 
Êags
 |
SQLITE_OPEN_URI
;

3385 
Êags
 &~
SQLITE_OPEN_URI
;

3388 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿›ti⁄: ", 
zArg
, (*)0);

3389  
TCL_ERROR
;

3392 if–
objc
<3 || (objc&1)!=1 ){

3393 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
,

3396 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3400  
TCL_ERROR
;

3402 
zEºMsg
 = 0;

3403 
p
 = (
SqlôeDb
*)
	`T˛_AŒoc
( (*p) );

3404 if–
p
==0 ){

3405 
	`T˛_SëResu…
(
öãΩ
, (*)"mÆlo¯Áûed", 
TCL_STATIC
);

3406  
TCL_ERROR
;

3408 
	`mem£t
(
p
, 0, (*p));

3409 
zFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[2], 0);

3410 
zFûe
 = 
	`T˛_Tøn¶©eFûeName
(
öãΩ
, zFûe, &
å™¶©edFûíame
);

3411 
rc
 = 
	`sqlôe3_›í_v2
(
zFûe
, &
p
->
db
, 
Êags
, 
zVfs
);

3412 
	`T˛_DSåögFªe
(&
å™¶©edFûíame
);

3413 if–
p
->
db
 ){

3414 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

3415 
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
(
p
->
db
));

3416 
	`sqlôe3_˛o£
(
p
->
db
);

3417 
p
->
db
 = 0;

3420 
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îr°r
(
rc
));

3422 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

3423 if–
p
->
db
 ){

3424 
	`sqlôe3_key
(
p
->
db
, 
pKey
, 
nKey
);

3427 if–
p
->
db
==0 ){

3428 
	`T˛_SëResu…
(
öãΩ
, 
zEºMsg
, 
TCL_VOLATILE
);

3429 
	`T˛_Fªe
((*)
p
);

3430 
	`sqlôe3_‰ì
(
zEºMsg
);

3431  
TCL_ERROR
;

3433 
p
->
maxStmt
 = 
NUM_PREPARED_STMTS
;

3434 
p
->
›íFœgs
 = 
Êags
 & 
SQLITE_OPEN_URI
;

3435 
p
->
öãΩ
 = interp;

3436 
zArg
 = 
	`T˛_GëSåögFromObj
(
objv
[1], 0);

3437 if–
	`DbU£Nª
() ){

3438 
	`T˛_NRCª©eComm™d
(
öãΩ
, 
zArg
, 
DbObjCmdAd≠t‹
, 
DbObjCmd
,

3439 (*)
p
, 
DbDñëeCmd
);

3441 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zArg
, 
DbObjCmd
, (*)
p
, 
DbDñëeCmd
);

3443  
TCL_OK
;

3444 
	}
}

3450 #i‚de‡
USE_TCL_STUBS


3451 #unde‡
T˛_InôStubs


3452 
	#T˛_InôStubs
(
a
,
b
,
c
Ë
TCL_VERSION


	)

3460 #i‚de‡
PACKAGE_VERSION


3461 
	#PACKAGE_VERSION
 
SQLITE_VERSION


	)

3475 
EXTERN
 
	$Sqlôe3_Inô
(
T˛_I¡îp
 *
öãΩ
){

3476 
rc
 = 
	`T˛_InôStubs
(
öãΩ
, "8.4", 0Ë? 
TCL_OK
 : 
TCL_ERROR
;

3477 if–
rc
==
TCL_OK
 ){

3478 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3", (
T˛_ObjCmdProc
*)
DbMaö
, 0, 0);

3479 #i‚de‡
SQLITE_3_SUFFIX_ONLY


3483 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe", (
T˛_ObjCmdProc
*)
DbMaö
, 0, 0);

3485 
rc
 = 
	`T˛_PkgProvide
(
öãΩ
, "sqlôe3", 
PACKAGE_VERSION
);

3487  
rc
;

3488 
	}
}

3489 
EXTERN
 
	$T˛sqlôe3_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3490 
EXTERN
 
	$Sqlôe3_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3491 
EXTERN
 
	$T˛sqlôe3_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3497 
EXTERN
 
	$Sqlôe3_Sa„Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_ERROR
; 
	}
}

3498 
EXTERN
 
	$Sqlôe3_Sa„U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){ 
TCL_ERROR
;
	}
}

3502 #i‚de‡
SQLITE_3_SUFFIX_ONLY


3503 
	$Sqlôe_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3504 
	$T˛sqlôe_Inô
(
T˛_I¡îp
 *
öãΩ
){  
	`Sqlôe3_Inô
(öãΩ); 
	}
}

3505 
	$Sqlôe_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3506 
	$T˛sqlôe_U∆ﬂd
(
T˛_I¡îp
 *
öãΩ
, 
Êags
){  
TCL_OK
; 
	}
}

3509 #ifde‡
TCLSH


3518 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_TCLMD5
)

3544 #i‚de‡
uöt32


3545 
	#uöt32
 

	)

3548 
	sMD5C⁄ãxt
 {

3549 
	misInô
;

3550 
uöt32
 
	mbuf
[4];

3551 
uöt32
 
	mbôs
[2];

3552 
	mö
[64];

3554 
MD5C⁄ãxt
 
	tMD5C⁄ãxt
;

3559 
	$byãRevî£
 (*
buf
, 
l⁄gs
){

3560 
uöt32
 
t
;

3562 
t
 = (
uöt32
)(()
buf
[3]<<8 | buf[2]) << 16 |

3563 (()
buf
[1]<<8 | buf[0]);

3564 *(
uöt32
 *)
buf
 = 
t
;

3565 
buf
 += 4;

3566 } --
l⁄gs
);

3567 
	}
}

3571 
	#F1
(
x
, 
y
, 
z
Ë(z ^ (x & (y ^ z)))

	)

3572 
	#F2
(
x
, 
y
, 
z
Ë
	`F1
(z, x, y)

	)

3573 
	#F3
(
x
, 
y
, 
z
Ë(x ^ y ^ z)

	)

3574 
	#F4
(
x
, 
y
, 
z
Ë(y ^ (x | ~z))

	)

3577 
	#MD5STEP
(
f
, 
w
, 
x
, 
y
, 
z
, 
d©a
, 
s
) \

3578 –
w
 +
	`f
(
x
, 
y
, 
z
Ë+ 
d©a
, w = w<<
s
 | w>>(32-s), w +x )

	)

3585 
	$MD5Tønsf‹m
(
uöt32
 
buf
[4], c⁄° uöt32 
ö
[16]){

3586 
uöt32
 
a
, 
b
, 
c
, 
d
;

3588 
a
 = 
buf
[0];

3589 
b
 = 
buf
[1];

3590 
c
 = 
buf
[2];

3591 
d
 = 
buf
[3];

3593 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xd76aa478, 7);

3594 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 1]+0xe8c7b756, 12);

3595 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x242070db, 17);

3596 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 3]+0xc1bdceee, 22);

3597 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf57c0faf, 7);

3598 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 5]+0x4787c62a, 12);

3599 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa8304613, 17);

3600 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 7]+0xfd469501, 22);

3601 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x698098d8, 7);

3602 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 9]+0x8b44f7af, 12);

3603 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffff5bb1, 17);

3604 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[11]+0x895cd7be, 22);

3605 
	`MD5STEP
(
F1
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x6b901122, 7);

3606 
	`MD5STEP
(
F1
, 
d
, 
a
, 
b
, 
c
, 
ö
[13]+0xfd987193, 12);

3607 
	`MD5STEP
(
F1
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xa679438e, 17);

3608 
	`MD5STEP
(
F1
, 
b
, 
c
, 
d
, 
a
, 
ö
[15]+0x49b40821, 22);

3610 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xf61e2562, 5);

3611 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 6]+0xc040b340, 9);

3612 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x265e5a51, 14);

3613 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 0]+0xe9b6c7aa, 20);

3614 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xd62f105d, 5);

3615 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[10]+0x02441453, 9);

3616 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0xd8a1e681, 14);

3617 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 4]+0xe7d3fbc8, 20);

3618 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0x21e1cde6, 5);

3619 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[14]+0xc33707d6, 9);

3620 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xf4d50d87, 14);

3621 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 8]+0x455a14ed, 20);

3622 
	`MD5STEP
(
F2
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0xa9e3e905, 5);

3623 
	`MD5STEP
(
F2
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 2]+0xfcefa3f8, 9);

3624 
	`MD5STEP
(
F2
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0x676f02d9, 14);

3625 
	`MD5STEP
(
F2
, 
b
, 
c
, 
d
, 
a
, 
ö
[12]+0x8d2a4c8a, 20);

3627 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 5]+0xfffa3942, 4);

3628 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 8]+0x8771f681, 11);

3629 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[11]+0x6d9d6122, 16);

3630 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[14]+0xfde5380c, 23);

3631 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 1]+0xa4beea44, 4);

3632 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 4]+0x4bdecfa9, 11);

3633 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 7]+0xf6bb4b60, 16);

3634 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[10]+0xbebfbc70, 23);

3635 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[13]+0x289b7ec6, 4);

3636 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 0]+0xeaa127fa, 11);

3637 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 3]+0xd4ef3085, 16);

3638 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 6]+0x04881d05, 23);

3639 
	`MD5STEP
(
F3
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 9]+0xd9d4d039, 4);

3640 
	`MD5STEP
(
F3
, 
d
, 
a
, 
b
, 
c
, 
ö
[12]+0xe6db99e5, 11);

3641 
	`MD5STEP
(
F3
, 
c
, 
d
, 
a
, 
b
, 
ö
[15]+0x1fa27cf8, 16);

3642 
	`MD5STEP
(
F3
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 2]+0xc4ac5665, 23);

3644 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 0]+0xf4292244, 6);

3645 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 7]+0x432aff97, 10);

3646 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[14]+0xab9423a7, 15);

3647 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 5]+0xfc93a039, 21);

3648 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[12]+0x655b59c3, 6);

3649 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[ 3]+0x8f0ccc92, 10);

3650 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[10]+0xffeff47d, 15);

3651 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 1]+0x85845dd1, 21);

3652 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 8]+0x6fa87e4f, 6);

3653 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[15]+0xfe2ce6e0, 10);

3654 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 6]+0xa3014314, 15);

3655 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[13]+0x4e0811a1, 21);

3656 
	`MD5STEP
(
F4
, 
a
, 
b
, 
c
, 
d
, 
ö
[ 4]+0xf7537e82, 6);

3657 
	`MD5STEP
(
F4
, 
d
, 
a
, 
b
, 
c
, 
ö
[11]+0xbd3af235, 10);

3658 
	`MD5STEP
(
F4
, 
c
, 
d
, 
a
, 
b
, 
ö
[ 2]+0x2ad7d2bb, 15);

3659 
	`MD5STEP
(
F4
, 
b
, 
c
, 
d
, 
a
, 
ö
[ 9]+0xeb86d391, 21);

3661 
buf
[0] +
a
;

3662 
buf
[1] +
b
;

3663 
buf
[2] +
c
;

3664 
buf
[3] +
d
;

3665 
	}
}

3671 
	$MD5Inô
(
MD5C⁄ãxt
 *
˘x
){

3672 
˘x
->
isInô
 = 1;

3673 
˘x
->
buf
[0] = 0x67452301;

3674 
˘x
->
buf
[1] = 0xefcdab89;

3675 
˘x
->
buf
[2] = 0x98badcfe;

3676 
˘x
->
buf
[3] = 0x10325476;

3677 
˘x
->
bôs
[0] = 0;

3678 
˘x
->
bôs
[1] = 0;

3679 
	}
}

3686 
	$MD5Upd©e
(
MD5C⁄ãxt
 *
˘x
, c⁄° *
buf
, 
Àn
){

3687 
uöt32
 
t
;

3691 
t
 = 
˘x
->
bôs
[0];

3692 i‡((
˘x
->
bôs
[0] = 
t
 + ((
uöt32
)
Àn
 << 3)) <Å)

3693 
˘x
->
bôs
[1]++;

3694 
˘x
->
bôs
[1] +
Àn
 >> 29;

3696 
t
 = (t >> 3) & 0x3f;

3700 i‡–
t
 ) {

3701 *
p
 = (*)
˘x
->
ö
 + 
t
;

3703 
t
 = 64-t;

3704 i‡(
Àn
 < 
t
) {

3705 
	`mem˝y
(
p
, 
buf
, 
Àn
);

3708 
	`mem˝y
(
p
, 
buf
, 
t
);

3709 
	`byãRevî£
(
˘x
->
ö
, 16);

3710 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3711 
buf
 +
t
;

3712 
Àn
 -
t
;

3717 
Àn
 >= 64) {

3718 
	`mem˝y
(
˘x
->
ö
, 
buf
, 64);

3719 
	`byãRevî£
(
˘x
->
ö
, 16);

3720 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3721 
buf
 += 64;

3722 
Àn
 -= 64;

3727 
	`mem˝y
(
˘x
->
ö
, 
buf
, 
Àn
);

3728 
	}
}

3734 
	$MD5FöÆ
(
dige°
[16], 
MD5C⁄ãxt
 *
˘x
){

3735 
cou¡
;

3736 *
p
;

3739 
cou¡
 = (
˘x
->
bôs
[0] >> 3) & 0x3F;

3743 
p
 = 
˘x
->
ö
 + 
cou¡
;

3744 *
p
++ = 0x80;

3747 
cou¡
 = 64 - 1 - count;

3750 i‡(
cou¡
 < 8) {

3752 
	`mem£t
(
p
, 0, 
cou¡
);

3753 
	`byãRevî£
(
˘x
->
ö
, 16);

3754 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3757 
	`mem£t
(
˘x
->
ö
, 0, 56);

3760 
	`mem£t
(
p
, 0, 
cou¡
-8);

3762 
	`byãRevî£
(
˘x
->
ö
, 14);

3765 
	`mem˝y
(
˘x
->
ö
 + 14*4, ctx->
bôs
, 8);

3767 
	`MD5Tønsf‹m
(
˘x
->
buf
, (
uöt32
 *)˘x->
ö
);

3768 
	`byãRevî£
((*)
˘x
->
buf
, 4);

3769 
	`mem˝y
(
dige°
, 
˘x
->
buf
, 16);

3770 
	}
}

3775 
	$MD5Dige°ToBa£16
(*
dige°
, *
zBuf
){

3776 c⁄° 
zEncode
[] = "0123456789abcdef";

3777 
i
, 
j
;

3779 
j
=
i
=0; i<16; i++){

3780 
a
 = 
dige°
[
i
];

3781 
zBuf
[
j
++] = 
zEncode
[(
a
>>4)&0xf];

3782 
zBuf
[
j
++] = 
zEncode
[
a
 & 0xf];

3784 
zBuf
[
j
] = 0;

3785 
	}
}

3793 
	$MD5Dige°ToBa£10x8
(
dige°
[16], 
zDige°
[50]){

3794 
i
, 
j
;

3795 
x
;

3796 
i
=
j
=0; i<16; i+=2){

3797 
x
 = 
dige°
[
i
]*256 + digest[i+1];

3798 if–
i
>0 ) 
zDige°
[
j
++] = '-';

3799 
	`sqlôe3_¢¥ötf
(50-
j
, &
zDige°
[j], "%05u", 
x
);

3800 
j
 += 5;

3802 
zDige°
[
j
] = 0;

3803 
	}
}

3809 
SQLITE_TCLAPI
 
	$md5_cmd
(

3810 *
cd
,

3811 
T˛_I¡îp
 *
öãΩ
,

3812 
¨gc
,

3813 c⁄° **
¨gv


3815 
MD5C⁄ãxt
 
˘x
;

3816 
dige°
[16];

3817 
zBuf
[50];

3818 (*
c⁄vîãr
)(*, *);

3820 if–
¨gc
!=2 ){

3821 
	`T˛_AµídResu…
(
öãΩ
,"wr⁄g #árgs: should bê\"", 
¨gv
[0],

3823  
TCL_ERROR
;

3825 
	`MD5Inô
(&
˘x
);

3826 
	`MD5Upd©e
(&
˘x
, (*)
¨gv
[1], ()
	`°æí
(argv[1]));

3827 
	`MD5FöÆ
(
dige°
, &
˘x
);

3828 
c⁄vîãr
 = ((*)(*,*))
cd
;

3829 
	`c⁄vîãr
(
dige°
, 
zBuf
);

3830 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

3831  
TCL_OK
;

3832 
	}
}

3838 
SQLITE_TCLAPI
 
	$md5fûe_cmd
(

3839 *
cd
,

3840 
T˛_I¡îp
 *
öãΩ
,

3841 
¨gc
,

3842 c⁄° **
¨gv


3844 
FILE
 *
ö
;

3845 
MD5C⁄ãxt
 
˘x
;

3846 (*
c⁄vîãr
)(*, *);

3847 
dige°
[16];

3848 
zBuf
[10240];

3850 if–
¨gc
!=2 ){

3851 
	`T˛_AµídResu…
(
öãΩ
,"wr⁄g #árgs: should bê\"", 
¨gv
[0],

3853  
TCL_ERROR
;

3855 
ö
 = 
	`f›í
(
¨gv
[1],"rb");

3856 if–
ö
==0 ){

3857 
	`T˛_AµídResu…
(
öãΩ
,"u«bÀÅÿ›í fûê\"", 
¨gv
[1],

3859  
TCL_ERROR
;

3861 
	`MD5Inô
(&
˘x
);

3863 
n
;

3864 
n
 = ()
	`‰ód
(
zBuf
, 1, (zBuf), 
ö
);

3865 if–
n
<=0 ) ;

3866 
	`MD5Upd©e
(&
˘x
, (*)
zBuf
, ()
n
);

3868 
	`f˛o£
(
ö
);

3869 
	`MD5FöÆ
(
dige°
, &
˘x
);

3870 
c⁄vîãr
 = ((*)(*,*))
cd
;

3871 
	`c⁄vîãr
(
dige°
, 
zBuf
);

3872 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

3873  
TCL_OK
;

3874 
	}
}

3880 
	$Md5_Inô
(
T˛_I¡îp
 *
öãΩ
){

3881 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5", (
T˛_CmdProc
*)
md5_cmd
,

3882 
MD5Dige°ToBa£16
, 0);

3883 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5-10x8", (
T˛_CmdProc
*)
md5_cmd
,

3884 
MD5Dige°ToBa£10x8
, 0);

3885 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5fûe", (
T˛_CmdProc
*)
md5fûe_cmd
,

3886 
MD5Dige°ToBa£16
, 0);

3887 
	`T˛_Cª©eComm™d
(
öãΩ
, "md5fûe-10x8", (
T˛_CmdProc
*)
md5fûe_cmd
,

3888 
MD5Dige°ToBa£10x8
, 0);

3889  
TCL_OK
;

3890 
	}
}

3893 #i‡
deföed
(
SQLITE_TEST
)

3898 
	$md5°ï
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

3899 
MD5C⁄ãxt
 *
p
;

3900 
i
;

3901 if–
¨gc
<1 ) ;

3902 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

3903 if–
p
==0 ) ;

3904 if–!
p
->
isInô
 ){

3905 
	`MD5Inô
(
p
);

3907 
i
=0; i<
¨gc
; i++){

3908 c⁄° *
zD©a
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

3909 if–
zD©a
 ){

3910 
	`MD5Upd©e
(
p
, (*)
zD©a
, ()
	`°æí
(zData));

3913 
	}
}

3914 
	$md5föÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

3915 
MD5C⁄ãxt
 *
p
;

3916 
dige°
[16];

3917 
zBuf
[33];

3918 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

3919 
	`MD5FöÆ
(
dige°
,
p
);

3920 
	`MD5Dige°ToBa£16
(
dige°
, 
zBuf
);

3921 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zBuf
, -1, 
SQLITE_TRANSIENT
);

3922 
	}
}

3923 
	$Md5_Regi°î
(

3924 
sqlôe3
 *
db
,

3925 **
pzEºMsg
,

3926 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk


3928 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "md5sum", -1, 
SQLITE_UTF8
, 0, 0,

3929 
md5°ï
, 
md5föÆize
);

3930 
	`sqlôe3_ovîlﬂd_fun˘i⁄
(
db
, "md5sum", -1);

3931  
rc
;

3932 
	}
}

3942 #i‡
TCLSH
==1

3943 c⁄° *
	$t˛sh_maö_lo›
(){

3944 c⁄° 
zMaölo›
[] =

3966  
zMaölo›
;

3967 
	}
}

3969 #i‡
TCLSH
==2

3970 c⁄° *
t˛sh_maö_lo›
();

3973 #ifde‡
SQLITE_TEST


3974 
öô_Æl
(
T˛_I¡îp
 *);

3975 
SQLITE_TCLAPI
 
	$öô_Æl_cmd
(

3976 
Clõ¡D©a
 
cd
,

3977 
T˛_I¡îp
 *
öãΩ
,

3978 
objc
,

3979 
T˛_Obj
 *
CONST
 
objv
[]

3982 
T˛_I¡îp
 *
¶ave
;

3983 if–
objc
!=2 ){

3984 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SLAVE");

3985  
TCL_ERROR
;

3988 
¶ave
 = 
	`T˛_GëSœve
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]));

3989 if–!
¶ave
 ){

3990  
TCL_ERROR
;

3993 
	`öô_Æl
(
¶ave
);

3994  
TCL_OK
;

3995 
	}
}

4005 
SQLITE_TCLAPI
 
	$db_u£_Àgacy_¥ï¨e_cmd
(

4006 
Clõ¡D©a
 
cd
,

4007 
T˛_I¡îp
 *
öãΩ
,

4008 
objc
,

4009 
T˛_Obj
 *
CONST
 
objv
[]

4011 
T˛_CmdInfo
 
cmdInfo
;

4012 
SqlôeDb
 *
pDb
;

4013 
bPª∑ª
;

4015 if–
objc
!=3 ){

4016 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB BOOLEAN");

4017  
TCL_ERROR
;

4020 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

4021 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch db: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

4022  
TCL_ERROR
;

4024 
pDb
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

4025 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
bPª∑ª
) ){

4026  
TCL_ERROR
;

4029 
pDb
->
bLegacyPª∑ª
 = 
bPª∑ª
;

4031 
	`T˛_Re£tResu…
(
öãΩ
);

4032  
TCL_OK
;

4033 
	}
}

4042 
SQLITE_TCLAPI
 
	$db_œ°_°mt_±r
(

4043 
Clõ¡D©a
 
cd
,

4044 
T˛_I¡îp
 *
öãΩ
,

4045 
objc
,

4046 
T˛_Obj
 *
CONST
 
objv
[]

4048 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

4049 
T˛_CmdInfo
 
cmdInfo
;

4050 
SqlôeDb
 *
pDb
;

4051 
sqlôe3_°mt
 *
pStmt
 = 0;

4052 
zBuf
[100];

4054 if–
objc
!=2 ){

4055 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

4056  
TCL_ERROR
;

4059 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

4060 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch db: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

4061  
TCL_ERROR
;

4063 
pDb
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

4065 if–
pDb
->
°mtLi°
 ) 
pStmt
 =ÖDb->stmtList->pStmt;

4066 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
) ){

4067  
TCL_ERROR
;

4069 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

4071  
TCL_OK
;

4072 
	}
}

4086 
	$öô_Æl
(
T˛_I¡îp
 *
öãΩ
){

4087 
	`Sqlôe3_Inô
(
öãΩ
);

4089 #i‡
	`deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_TCLMD5
)

4090 
	`Md5_Inô
(
öãΩ
);

4093 #ifde‡
SQLITE_TEST


4095 
	`Sqlôec⁄fig_Inô
(
T˛_I¡îp
*);

4096 
	`Sqlôëe°1_Inô
(
T˛_I¡îp
*);

4097 
	`Sqlôëe°2_Inô
(
T˛_I¡îp
*);

4098 
	`Sqlôëe°3_Inô
(
T˛_I¡îp
*);

4099 
	`Sqlôëe°4_Inô
(
T˛_I¡îp
*);

4100 
	`Sqlôëe°5_Inô
(
T˛_I¡îp
*);

4101 
	`Sqlôëe°6_Inô
(
T˛_I¡îp
*);

4102 
	`Sqlôëe°7_Inô
(
T˛_I¡îp
*);

4103 
	`Sqlôëe°8_Inô
(
T˛_I¡îp
*);

4104 
	`Sqlôëe°9_Inô
(
T˛_I¡îp
*);

4105 
	`Sqlôëe°async_Inô
(
T˛_I¡îp
*);

4106 
	`Sqlôëe°_aut€xt_Inô
(
T˛_I¡îp
*);

4107 
	`Sqlôëe°_blob_Inô
(
T˛_I¡îp
*);

4108 
	`Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *);

4109 
	`Sqlôëe°_func_Inô
(
T˛_I¡îp
*);

4110 
	`Sqlôëe°_hexio_Inô
(
T˛_I¡îp
*);

4111 
	`Sqlôëe°_öô_Inô
(
T˛_I¡îp
*);

4112 
	`Sqlôëe°_mÆloc_Inô
(
T˛_I¡îp
*);

4113 
	`Sqlôëe°_muãx_Inô
(
T˛_I¡îp
*);

4114 
	`Sqlôëe°schema_Inô
(
T˛_I¡îp
*);

4115 
	`Sqlôëe°s£_Inô
(
T˛_I¡îp
*);

4116 
	`Sqlôëe°t˛v¨_Inô
(
T˛_I¡îp
*);

4117 
	`Sqlôëe°fs_Inô
(
T˛_I¡îp
*);

4118 
	`Sqlôëe°Thªad_Inô
(
T˛_I¡îp
*);

4119 
	`Sqlôëe°O√fûe_Inô
();

4120 
	`Sqlôëe°Osö°_Inô
(
T˛_I¡îp
*);

4121 
	`Sqlôëe°backup_Inô
(
T˛_I¡îp
*);

4122 
	`Sqlôëe°öèºay_Inô
(
T˛_I¡îp
*);

4123 
	`Sqlôëe°vfs_Inô
(
T˛_I¡îp
 *);

4124 
	`Sqlôëe°πªe_Inô
(
T˛_I¡îp
*);

4125 
	`SqlôequŸa_Inô
(
T˛_I¡îp
*);

4126 
	`Sqlôemu…ùÀx_Inô
(
T˛_I¡îp
*);

4127 
	`SqlôeSu≥æock_Inô
(
T˛_I¡îp
*);

4128 
	`Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
*);

4129 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
Ë&& deföed(
SQLITE_ENABLE_PREUPDATE_HOOK
)

4130 
	`Te°Sessi⁄_Inô
(
T˛_I¡îp
*);

4132 
	`Fts5t˛_Inô
(
T˛_I¡îp
 *);

4133 
	`SqlôeRbu_Inô
(
T˛_I¡îp
*);

4134 
	`Sqlôëe°t˛_Inô
(
T˛_I¡îp
*);

4135 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë|| deföed(
SQLITE_ENABLE_FTS4
)

4136 
	`Sqlôëe°·s3_Inô
(
T˛_I¡îp
 *
öãΩ
);

4139 #ifde‡
SQLITE_ENABLE_ZIPVFS


4140 
	`Zùvfs_Inô
(
T˛_I¡îp
*);

4141 
	`Zùvfs_Inô
(
öãΩ
);

4144 
	`Sqlôec⁄fig_Inô
(
öãΩ
);

4145 
	`Sqlôëe°1_Inô
(
öãΩ
);

4146 
	`Sqlôëe°2_Inô
(
öãΩ
);

4147 
	`Sqlôëe°3_Inô
(
öãΩ
);

4148 
	`Sqlôëe°4_Inô
(
öãΩ
);

4149 
	`Sqlôëe°5_Inô
(
öãΩ
);

4150 
	`Sqlôëe°6_Inô
(
öãΩ
);

4151 
	`Sqlôëe°7_Inô
(
öãΩ
);

4152 
	`Sqlôëe°8_Inô
(
öãΩ
);

4153 
	`Sqlôëe°9_Inô
(
öãΩ
);

4154 
	`Sqlôëe°async_Inô
(
öãΩ
);

4155 
	`Sqlôëe°_aut€xt_Inô
(
öãΩ
);

4156 
	`Sqlôëe°_blob_Inô
(
öãΩ
);

4157 
	`Sqlôëe°_demovfs_Inô
(
öãΩ
);

4158 
	`Sqlôëe°_func_Inô
(
öãΩ
);

4159 
	`Sqlôëe°_hexio_Inô
(
öãΩ
);

4160 
	`Sqlôëe°_öô_Inô
(
öãΩ
);

4161 
	`Sqlôëe°_mÆloc_Inô
(
öãΩ
);

4162 
	`Sqlôëe°_muãx_Inô
(
öãΩ
);

4163 
	`Sqlôëe°schema_Inô
(
öãΩ
);

4164 
	`Sqlôëe°t˛v¨_Inô
(
öãΩ
);

4165 
	`Sqlôëe°fs_Inô
(
öãΩ
);

4166 
	`Sqlôëe°Thªad_Inô
(
öãΩ
);

4167 
	`Sqlôëe°O√fûe_Inô
();

4168 
	`Sqlôëe°Osö°_Inô
(
öãΩ
);

4169 
	`Sqlôëe°backup_Inô
(
öãΩ
);

4170 
	`Sqlôëe°öèºay_Inô
(
öãΩ
);

4171 
	`Sqlôëe°vfs_Inô
(
öãΩ
);

4172 
	`Sqlôëe°πªe_Inô
(
öãΩ
);

4173 
	`SqlôequŸa_Inô
(
öãΩ
);

4174 
	`Sqlôemu…ùÀx_Inô
(
öãΩ
);

4175 
	`SqlôeSu≥æock_Inô
(
öãΩ
);

4176 
	`Sqlôëe°SysˇŒ_Inô
(
öãΩ
);

4177 #i‡
	`deföed
(
SQLITE_ENABLE_SESSION
Ë&& deföed(
SQLITE_ENABLE_PREUPDATE_HOOK
)

4178 
	`Te°Sessi⁄_Inô
(
öãΩ
);

4180 
	`Fts5t˛_Inô
(
öãΩ
);

4181 
	`SqlôeRbu_Inô
(
öãΩ
);

4182 
	`Sqlôëe°t˛_Inô
(
öãΩ
);

4184 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë|| deföed(
SQLITE_ENABLE_FTS4
)

4185 
	`Sqlôëe°·s3_Inô
(
öãΩ
);

4188 
	`T˛_Cª©eObjComm™d
(

4189 
öãΩ
, "lﬂd_ã°fixtuª_exãnsi⁄s", 
öô_Æl_cmd
, 0, 0

4191 
	`T˛_Cª©eObjComm™d
(

4192 
öãΩ
, "db_u£_Àgacy_¥ï¨e", 
db_u£_Àgacy_¥ï¨e_cmd
, 0, 0

4194 
	`T˛_Cª©eObjComm™d
(

4195 
öãΩ
, "db_œ°_°mt_±r", 
db_œ°_°mt_±r
, 0, 0

4198 #ifde‡
SQLITE_SSE


4199 
	`Sqlôëe°s£_Inô
(
öãΩ
);

4203 
	}
}

4206 #i‡
deföed
(
unix
)

4207 
	~<sys/ªsour˚.h
>

4210 
	#TCLSH_MAIN
 
maö


	)

4211 
SQLITE_CDECL
 
	$TCLSH_MAIN
(
¨gc
, **
¨gv
){

4212 
T˛_I¡îp
 *
öãΩ
;

4214 #i‡!
	`deföed
(
_WIN32_WCE
)

4215 if–
	`gëív
("BREAK") ){

4216 
	`Ârötf
(
°dîr
,

4218 
	`GETPID
());

4219 
	`fgëc
(
°dö
);

4225 #i‡
	`deföed
(
SQLITE_TEST
Ë&& deföed(
unix
)

4226 { 
æimô
 
x
;

4227 
	`gëæimô
(
RLIMIT_CORE
, &
x
);

4228 
x
.
æim_cur
 = x.
æim_max
;

4229 
	`£ålimô
(
RLIMIT_CORE
, &
x
);

4237 
	`sqlôe3_shutdown
();

4239 
	`T˛_FödExecuèbÀ
(
¨gv
[0]);

4240 
	`T˛_SëSy°emEncodög
(
NULL
, "utf-8");

4241 
öãΩ
 = 
	`T˛_Cª©eI¡îp
();

4243 #i‡
TCLSH
==2

4244 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SINGLETHREAD
);

4247 
	`öô_Æl
(
öãΩ
);

4248 if–
¨gc
>=2 ){

4249 
i
;

4250 
zArgc
[32];

4251 
	`sqlôe3_¢¥ötf
((
zArgc
), zArgc, "%d", 
¨gc
-(3-
TCLSH
));

4252 
	`T˛_SëV¨
(
öãΩ
,"¨gc", 
zArgc
, 
TCL_GLOBAL_ONLY
);

4253 
	`T˛_SëV¨
(
öãΩ
,"¨gv0",
¨gv
[1],
TCL_GLOBAL_ONLY
);

4254 
	`T˛_SëV¨
(
öãΩ
,"¨gv", "", 
TCL_GLOBAL_ONLY
);

4255 
i
=3-
TCLSH
; i<
¨gc
; i++){

4256 
	`T˛_SëV¨
(
öãΩ
, "¨gv", 
¨gv
[
i
],

4257 
TCL_GLOBAL_ONLY
 | 
TCL_LIST_ELEMENT
 | 
TCL_APPEND_VALUE
);

4259 if–
TCLSH
==1 && 
	`T˛_EvÆFûe
(
öãΩ
, 
¨gv
[1])!=
TCL_OK
 ){

4260 c⁄° *
zInfo
 = 
	`T˛_GëV¨
(
öãΩ
, "îr‹Info", 
TCL_GLOBAL_ONLY
);

4261 if–
zInfo
==0 ) zInfÿ
	`T˛_GëSåögResu…
(
öãΩ
);

4262 
	`Ârötf
(
°dîr
,"%s: %s\n", *
¨gv
, 
zInfo
);

4266 if–
TCLSH
==2 || 
¨gc
<=1 ){

4267 
	`T˛_GlobÆEvÆ
(
öãΩ
, 
	`t˛sh_maö_lo›
());

4270 
	}
}

	@test1.c

16 
	~"sqlôeI¡.h
"

17 #i‡
SQLITE_OS_WIN


18 
	~"os_wö.h
"

21 
	~"vdbeI¡.h
"

22 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

23 
	~"sqlôe_t˛.h
"

25 
	~"t˛.h
"

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

36 
	sSqlôeDb
 {

37 
sqlôe3
 *
	mdb
;

44 
	$ã°HexToI¡
(
h
){

45 if–
h
>='0' && h<='9' ){

46  
h
 - '0';

47 }if–
h
>='a' && h<='f' ){

48  
h
 - 'a' + 10;

50 
	`as£π
–
h
>='A' && h<='F' );

51  
h
 - 'A' + 10;

53 
	}
}

54 *
	$sqlôe3Te°TextToPå
(c⁄° *
z
){

55 *
p
;

56 
u64
 
v
;

57 
u32
 
v2
;

58 if–
z
[0]=='0' && z[1]=='x' ){

59 
z
 += 2;

61 
v
 = 0;

62  *
z
 ){

63 
v
 = (v<<4Ë+ 
	`ã°HexToI¡
(*
z
);

64 
z
++;

66 if–(
p
)==(
v
) ){

67 
	`mem˝y
(&
p
, &
v
, (p));

69 
	`as£π
–(
p
)==(
v2
) );

70 
v2
 = (
u32
)
v
;

71 
	`mem˝y
(&
p
, &
v2
, (p));

73  
p
;

74 
	}
}

82 
SQLITE_TCLAPI
 
	$gë_sqlôe_poöãr
(

83 * 
˛õ¡D©a
,

84 
T˛_I¡îp
 *
öãΩ
,

85 
objc
,

86 
T˛_Obj
 *
CONST
 
objv
[]

88 
SqlôeDb
 *
p
;

89 
T˛_CmdInfo
 
cmdInfo
;

90 
zBuf
[100];

91 if–
objc
!=2 ){

92 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SQLITE-CONNECTION");

93  
TCL_ERROR
;

95 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

96 
	`T˛_AµídResu…
(
öãΩ
, "commandÇot found: ",

97 
	`T˛_GëSåög
(
objv
[1]), (*)0);

98  
TCL_ERROR
;

100 
p
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

101 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
p
->
db
);

102 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

103  
TCL_OK
;

104 
	}
}

109 
	$gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
){

110 
SqlôeDb
 *
p
;

111 
T˛_CmdInfo
 
cmdInfo
;

112 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zA
, &
cmdInfo
) ){

113 
p
 = (
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
;

114 *
µDb
 = 
p
->
db
;

116 *
µDb
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
zA
);

118  
TCL_OK
;

119 
	}
}

121 #i‡
SQLITE_OS_WIN


125 
	$gëWö32H™dÀ
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
LPHANDLE
 
phFûe
){

126 *
phFûe
 = (
HANDLE
)
	`sqlôe3Te°TextToPå
(
zA
);

127  
TCL_OK
;

128 
	}
}

131 c⁄° *
sqlôe3EºName
();

132 
	#t1Eº‹Name
 
sqlôe3EºName


	)

138 
	#StmtToDb
(
X
Ë
	`sqlôe3_db_h™dÀ
(X)

	)

144 
	$sqlôe3Te°EºCode
(
T˛_I¡îp
 *
öãΩ
, 
sqlôe3
 *
db
, 
rc
){

145 if–
	`sqlôe3_thªadß„
()==0 && 
rc
!=
SQLITE_MISUSE
 &&Ñc!=
SQLITE_OK


146 && 
	`sqlôe3_îrcode
(
db
)!=
rc
 ){

147 
zBuf
[200];

148 
r2
 = 
	`sqlôe3_îrcode
(
db
);

149 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,

151 
	`t1Eº‹Name
(
rc
),Ñc,Å1Eº‹Name(
r2
),Ñ2);

152 
	`T˛_Re£tResu…
(
öãΩ
);

153 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

157 
	}
}

162 
	$gëStmtPoöãr
(

163 
T˛_I¡îp
 *
öãΩ
,

164 c⁄° *
zArg
,

165 
sqlôe3_°mt
 **
µStmt


167 *
µStmt
 = (
sqlôe3_°mt
*)
	`sqlôe3Te°TextToPå
(
zArg
);

168  
TCL_OK
;

169 
	}
}

184 
	$sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *
öãΩ
, *
zPå
, *
p
){

185 
	`sqlôe3_¢¥ötf
(100, 
zPå
, "%p", 
p
);

186  
TCL_OK
;

187 
	}
}

192 
	$exec_¥ötf_cb
(*
pArg
, 
¨gc
, **
¨gv
, **
«me
){

193 
T˛_DSåög
 *
°r
 = (T˛_DSåög*)
pArg
;

194 
i
;

196 if–
	`T˛_DSåögLígth
(
°r
)==0 ){

197 
i
=0; i<
¨gc
; i++){

198 
	`T˛_DSåögAµídEÀmít
(
°r
, 
«me
[
i
] ?Çame[i] : "NULL");

201 
i
=0; i<
¨gc
; i++){

202 
	`T˛_DSåögAµídEÀmít
(
°r
, 
¨gv
[
i
] ?árgv[i] : "NULL");

205 
	}
}

210 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

211 
FILE
 *
	giŸø˚_fûe
 = 0;

212 
	$io_åa˚_ˇŒback
(c⁄° *
zF‹m©
, ...){

213 
va_li°
 
≠
;

214 
	`va_°¨t
(
≠
, 
zF‹m©
);

215 
	`vÂrötf
(
iŸø˚_fûe
, 
zF‹m©
, 
≠
);

216 
	`va_íd
(
≠
);

217 
	`fÊush
(
iŸø˚_fûe
);

218 
	}
}

228 
SQLITE_TCLAPI
 
	$ã°_io_åa˚
(

229 *
NŸU£d
,

230 
T˛_I¡îp
 *
öãΩ
,

231 
¨gc
,

232 **
¨gv


234 #i‡!
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

235 if–
¨gc
!=2 ){

236 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

238  
TCL_ERROR
;

240 if–
iŸø˚_fûe
 ){

241 if–
iŸø˚_fûe
!=
°dout
 && iŸø˚_fûe!=
°dîr
 ){

242 
	`f˛o£
(
iŸø˚_fûe
);

244 
iŸø˚_fûe
 = 0;

245 
sqlôe3IoTø˚
 = 0;

247 if–
¨gv
[1][0] ){

248 if–
	`°rcmp
(
¨gv
[1],"stdout")==0 ){

249 
iŸø˚_fûe
 = 
°dout
;

250 }if–
	`°rcmp
(
¨gv
[1],"stderr")==0 ){

251 
iŸø˚_fûe
 = 
°dîr
;

253 
iŸø˚_fûe
 = 
	`f›í
(
¨gv
[1], "w");

255 
sqlôe3IoTø˚
 = 
io_åa˚_ˇŒback
;

258  
TCL_OK
;

259 
	}
}

269 
SQLITE_TCLAPI
 
	$˛™g_ßnôize_addªss
(

270 *
NŸU£d
,

271 
T˛_I¡îp
 *
öãΩ
,

272 
¨gc
,

273 **
¨gv


275 
ªs
 = 0;

276 #i‡
	`deföed
(
__has_„©uª
)

277 #i‡
	`__has_„©uª
(
addªss_ßnôizî
)

278 
ªs
 = 1;

281 #ifde‡
__SANITIZE_ADDRESS__


282 
ªs
 = 1;

284 if–
ªs
==0 && 
	`gëív
("OMIT_MISUSE")!=0 )Ñes = 1;

285 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
ªs
));

286  
TCL_OK
;

287 
	}
}

296 
SQLITE_TCLAPI
 
	$ã°_exec_¥ötf
(

297 *
NŸU£d
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
¨gc
,

300 **
¨gv


302 
sqlôe3
 *
db
;

303 
T˛_DSåög
 
°r
;

304 
rc
;

305 *
zEº
 = 0;

306 *
zSql
;

307 
zBuf
[30];

308 if–
¨gc
!=4 ){

309 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

311  
TCL_ERROR
;

313 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

314 
	`T˛_DSåögInô
(&
°r
);

315 
zSql
 = 
	`sqlôe3_m¥ötf
(
¨gv
[2],árgv[3]);

316 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

317 
	`sqlôe3_‰ì
(
zSql
);

318 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

319 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

320 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

321 
	`T˛_DSåögFªe
(&
°r
);

322 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

323 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

324  
TCL_OK
;

325 
	}
}

334 
SQLITE_TCLAPI
 
	$ã°_exec_hex
(

335 *
NŸU£d
,

336 
T˛_I¡îp
 *
öãΩ
,

337 
¨gc
,

338 **
¨gv


340 
sqlôe3
 *
db
;

341 
T˛_DSåög
 
°r
;

342 
rc
, 
i
, 
j
;

343 *
zEº
 = 0;

344 *
zHex
;

345 
zSql
[501];

346 
zBuf
[30];

347 if–
¨gc
!=3 ){

348 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

350  
TCL_ERROR
;

352 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

353 
zHex
 = 
¨gv
[2];

354 
i
=
j
=0; i<((
zSql
)-1Ë&& 
zHex
[j]; i++, j++){

355 if–
zHex
[
j
]=='%' && zHex[j+2] && zHex[j+2] ){

356 
zSql
[
i
] = (
	`ã°HexToI¡
(
zHex
[
j
+1])<<4) +ÅestHexToInt(zHex[j+2]);

357 
j
 += 2;

359 
zSql
[
i
] = 
zHex
[
j
];

362 
zSql
[
i
] = 0;

363 
	`T˛_DSåögInô
(&
°r
);

364 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

365 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

366 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

367 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

368 
	`T˛_DSåögFªe
(&
°r
);

369 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

370 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

371  
TCL_OK
;

372 
	}
}

380 
SQLITE_TCLAPI
 
	$db_íãr
(

381 *
NŸU£d
,

382 
T˛_I¡îp
 *
öãΩ
,

383 
¨gc
,

384 **
¨gv


386 
sqlôe3
 *
db
;

387 if–
¨gc
!=2 ){

388 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

390  
TCL_ERROR
;

392 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

393 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

394  
TCL_OK
;

395 
	}
}

396 
SQLITE_TCLAPI
 
	$db_Àave
(

397 *
NŸU£d
,

398 
T˛_I¡îp
 *
öãΩ
,

399 
¨gc
,

400 **
¨gv


402 
sqlôe3
 *
db
;

403 if–
¨gc
!=2 ){

404 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

406  
TCL_ERROR
;

408 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

409 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

410  
TCL_OK
;

411 
	}
}

418 
SQLITE_TCLAPI
 
	$ã°_exec
(

419 *
NŸU£d
,

420 
T˛_I¡îp
 *
öãΩ
,

421 
¨gc
,

422 **
¨gv


424 
sqlôe3
 *
db
;

425 
T˛_DSåög
 
°r
;

426 
rc
;

427 *
zEº
 = 0;

428 *
zSql
;

429 
i
, 
j
;

430 
zBuf
[30];

431 if–
¨gc
!=3 ){

432 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

434  
TCL_ERROR
;

436 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

437 
	`T˛_DSåögInô
(&
°r
);

438 
zSql
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

439 
i
=
j
=0; 
zSql
[i];){

440 if–
zSql
[
i
]=='%' ){

441 
zSql
[
j
++] = (
	`ã°HexToI¡
(zSql[
i
+1])<<4) +ÅestHexToInt(zSql[i+2]);

442 
i
 += 3;

444 
zSql
[
j
++] = zSql[
i
++];

447 
zSql
[
j
] = 0;

448 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
exec_¥ötf_cb
, &
°r
, &
zEº
);

449 
	`sqlôe3_‰ì
(
zSql
);

450 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

451 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

452 
	`T˛_AµídEÀmít
(
öãΩ
, 
rc
==
SQLITE_OK
 ? 
	`T˛_DSåögVÆue
(&
°r
Ë: 
zEº
);

453 
	`T˛_DSåögFªe
(&
°r
);

454 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

455 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

456  
TCL_OK
;

457 
	}
}

465 
SQLITE_TCLAPI
 
	$ã°_exec_ƒ
(

466 *
NŸU£d
,

467 
T˛_I¡îp
 *
öãΩ
,

468 
¨gc
,

469 **
¨gv


471 
sqlôe3
 *
db
;

472 
rc
;

473 *
zEº
 = 0;

474 if–
¨gc
!=3 ){

475 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

477  
TCL_ERROR
;

479 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

480 
rc
 = 
	`sqlôe3_exec
(
db
, 
¨gv
[2], 0, 0, &
zEº
);

481 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

482  
TCL_OK
;

483 
	}
}

492 
SQLITE_TCLAPI
 
	$ã°_m¥ötf_z
(

493 *
NŸU£d
,

494 
T˛_I¡îp
 *
öãΩ
,

495 
¨gc
,

496 **
¨gv


498 *
zResu…
 = 0;

499 
i
;

501 
i
=2; i<
¨gc
 && (i==2 || 
zResu…
); i++){

502 
zResu…
 = 
	`sqlôe3_m¥ötf
("%z%s%s", zResu…, 
¨gv
[1],árgv[
i
]);

504 
	`T˛_AµídResu…
(
öãΩ
, 
zResu…
, 0);

505 
	`sqlôe3_‰ì
(
zResu…
);

506  
TCL_OK
;

507 
	}
}

515 
SQLITE_TCLAPI
 
	$ã°_m¥ötf_n
(

516 *
NŸU£d
,

517 
T˛_I¡îp
 *
öãΩ
,

518 
¨gc
,

519 **
¨gv


521 *
zSå
;

522 
n
 = 0;

523 
zSå
 = 
	`sqlôe3_m¥ötf
("%s%n", 
¨gv
[1], &
n
);

524 
	`sqlôe3_‰ì
(
zSå
);

525 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
n
));

526  
TCL_OK
;

527 
	}
}

539 
SQLITE_TCLAPI
 
	$ã°_¢¥ötf_öt
(

540 *
NŸU£d
,

541 
T˛_I¡îp
 *
öãΩ
,

542 
¨gc
,

543 **
¨gv


545 
zSå
[100];

546 
n
 = 
	`©oi
(
¨gv
[1]);

547 c⁄° *
zF‹m©
 = 
¨gv
[2];

548 
a1
 = 
	`©oi
(
¨gv
[3]);

549 if–
n
>(
zSå
) )Ç = (zStr);

550 
	`sqlôe3_¢¥ötf
((
zSå
), zStr, "abcdefghijklmnopqrstuvwxyz");

551 
	`sqlôe3_¢¥ötf
(
n
, 
zSå
, 
zF‹m©
, 
a1
);

552 
	`T˛_AµídResu…
(
öãΩ
, 
zSå
, 0);

553  
TCL_OK
;

554 
	}
}

556 #i‚de‡
SQLITE_OMIT_GET_TABLE


565 
SQLITE_TCLAPI
 
	$ã°_gë_èbÀ_¥ötf
(

566 *
NŸU£d
,

567 
T˛_I¡îp
 *
öãΩ
,

568 
¨gc
,

569 **
¨gv


571 
sqlôe3
 *
db
;

572 
T˛_DSåög
 
°r
;

573 
rc
;

574 *
zEº
 = 0;

575 
nRow
 = 0, 
nCﬁ
 = 0;

576 **
aResu…
;

577 
i
;

578 
zBuf
[30];

579 *
zSql
;

580 
ªsCou¡
 = -1;

581 if–
¨gc
==5 ){

582 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[4], &
ªsCou¡
ËË 
TCL_ERROR
;

584 if–
¨gc
!=4 &&árgc!=5 ){

585 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

587  
TCL_ERROR
;

589 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

590 
	`T˛_DSåögInô
(&
°r
);

591 
zSql
 = 
	`sqlôe3_m¥ötf
(
¨gv
[2],argv[3]);

592 if–
¨gc
==5 ){

593 
rc
 = 
	`sqlôe3_gë_èbÀ
(
db
, 
zSql
, &
aResu…
, 0, 0, &
zEº
);

595 
rc
 = 
	`sqlôe3_gë_èbÀ
(
db
, 
zSql
, &
aResu…
, &
nRow
, &
nCﬁ
, &
zEº
);

596 
ªsCou¡
 = (
nRow
+1)*
nCﬁ
;

598 
	`sqlôe3_‰ì
(
zSql
);

599 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

600 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

601 if–
rc
==
SQLITE_OK
 ){

602 if–
¨gc
==4 ){

603 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nRow
);

604 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

605 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nCﬁ
);

606 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

608 
i
=0; i<
ªsCou¡
; i++){

609 
	`T˛_AµídEÀmít
(
öãΩ
, 
aResu…
[
i
] ?áResult[i] : "NULL");

612 
	`T˛_AµídEÀmít
(
öãΩ
, 
zEº
);

614 
	`sqlôe3_‰ì_èbÀ
(
aResu…
);

615 if–
zEº
 ) 
	`sqlôe3_‰ì
(zErr);

616 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

617  
TCL_OK
;

618 
	}
}

628 
SQLITE_TCLAPI
 
	$ã°_œ°_rowid
(

629 *
NŸU£d
,

630 
T˛_I¡îp
 *
öãΩ
,

631 
¨gc
,

632 **
¨gv


634 
sqlôe3
 *
db
;

635 
zBuf
[30];

637 if–
¨gc
!=2 ){

638 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " DB\"", 0);

639  
TCL_ERROR
;

641 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

642 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%Œd", 
	`sqlôe3_œ°_ö£π_rowid
(
db
));

643 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

644  
SQLITE_OK
;

645 
	}
}

652 
SQLITE_TCLAPI
 
	$ã°_key
(

653 *
NŸU£d
,

654 
T˛_I¡îp
 *
öãΩ
,

655 
¨gc
,

656 **
¨gv


658 #i‡
	`deföed
(
SQLITE_HAS_CODEC
Ë&& !deföed(
SQLITE_OMIT_CODEC_FROM_TCL
)

659 
sqlôe3
 *
db
;

660 c⁄° *
zKey
;

661 
nKey
;

662 if–
¨gc
!=3 ){

663 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

665  
TCL_ERROR
;

667 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

668 
zKey
 = 
¨gv
[2];

669 
nKey
 = 
	`°æí
(
zKey
);

670 
	`sqlôe3_key
(
db
, 
zKey
, 
nKey
);

672  
TCL_OK
;

673 
	}
}

680 
SQLITE_TCLAPI
 
	$ã°_ªkey
(

681 *
NŸU£d
,

682 
T˛_I¡îp
 *
öãΩ
,

683 
¨gc
,

684 **
¨gv


686 #ifde‡
SQLITE_HAS_CODEC


687 
sqlôe3
 *
db
;

688 c⁄° *
zKey
;

689 
nKey
;

690 if–
¨gc
!=3 ){

691 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

693  
TCL_ERROR
;

695 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

696 
zKey
 = 
¨gv
[2];

697 
nKey
 = 
	`°æí
(
zKey
);

698 
	`sqlôe3_ªkey
(
db
, 
zKey
, 
nKey
);

700  
TCL_OK
;

701 
	}
}

708 
SQLITE_TCLAPI
 
	$sqlôe_ã°_˛o£
(

709 *
NŸU£d
,

710 
T˛_I¡îp
 *
öãΩ
,

711 
¨gc
,

712 **
¨gv


714 
sqlôe3
 *
db
;

715 
rc
;

716 if–
¨gc
!=2 ){

717 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

719  
TCL_ERROR
;

721 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

722 
rc
 = 
	`sqlôe3_˛o£
(
db
);

723 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

724  
TCL_OK
;

725 
	}
}

732 
SQLITE_TCLAPI
 
	$sqlôe_ã°_˛o£_v2
(

733 *
NŸU£d
,

734 
T˛_I¡îp
 *
öãΩ
,

735 
¨gc
,

736 **
¨gv


738 
sqlôe3
 *
db
;

739 
rc
;

740 if–
¨gc
!=2 ){

741 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

743  
TCL_ERROR
;

745 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

746 
rc
 = 
	`sqlôe3_˛o£_v2
(
db
);

747 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

748  
TCL_OK
;

749 
	}
}

755 
	$t1_i‚uŒFunc
(

756 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

757 
¨gc
,

758 
sqlôe3_vÆue
 **
¨gv


760 
i
;

761 
i
=0; i<
¨gc
; i++){

762 if–
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[
i
]) ){

763 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[
i
]);

764 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]),

765 
n
, 
SQLITE_TRANSIENT
);

769 
	}
}

776 
	$hex8Func
(
sqlôe3_c⁄ãxt
 *
p
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

777 c⁄° *
z
;

778 
i
;

779 
zBuf
[200];

780 
z
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

781 
i
=0; i<(
zBuf
)/2 - 2 && 
z
[i]; i++){

782 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
*2, &zBuf[i*2], "%02x", 
z
[i]);

784 
zBuf
[
i
*2] = 0;

785 
	`sqlôe3_ªsu…_ãxt
(
p
, (*)
zBuf
, -1, 
SQLITE_TRANSIENT
);

786 
	}
}

787 #i‚de‡
SQLITE_OMIT_UTF16


788 
	$hex16Func
(
sqlôe3_c⁄ãxt
 *
p
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

789 c⁄° *
z
;

790 
i
;

791 
zBuf
[400];

792 
z
 = 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

793 
i
=0; i<(
zBuf
)/4 - 4 && 
z
[i]; i++){

794 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
*4, &zBuf[i*4],"%04x", 
z
[i]&0xff);

796 
zBuf
[
i
*4] = 0;

797 
	`sqlôe3_ªsu…_ãxt
(
p
, (*)
zBuf
, -1, 
SQLITE_TRANSIENT
);

798 
	}
}

804 
	sd°r
 {

805 
	mnAŒoc
;

806 
	mnU£d
;

807 *
	mz
;

813 
	$d°rAµíd
(
d°r
 *
p
, c⁄° *
z
, 
dividî
){

814 
n
 = ()
	`°æí
(
z
);

815 if–
p
->
nU£d
 + 
n
 + 2 >Ö->
nAŒoc
 ){

816 *
zNew
;

817 
p
->
nAŒoc
 =Ö->nAŒoc*2 + 
n
 + 200;

818 
zNew
 = 
	`sqlôe3_ªÆloc
(
p
->
z
,Ö->
nAŒoc
);

819 if–
zNew
==0 ){

820 
	`sqlôe3_‰ì
(
p
->
z
);

821 
	`mem£t
(
p
, 0, (*p));

824 
p
->
z
 = 
zNew
;

826 if–
dividî
 && 
p
->
nU£d
>0 ){

827 
p
->
z
[p->
nU£d
++] = 
dividî
;

829 
	`mem˝y
(&
p
->
z
[p->
nU£d
], z, 
n
+1);

830 
p
->
nU£d
 +
n
;

831 
	}
}

836 
	$execFuncCÆlback
(*
pD©a
, 
¨gc
, **
¨gv
, **
NŸU£d
){

837 
d°r
 *
p
 = (d°r*)
pD©a
;

838 
i
;

839 
i
=0; i<
¨gc
; i++){

840 if–
¨gv
[
i
]==0 ){

841 
	`d°rAµíd
(
p
, "NULL", ' ');

843 
	`d°rAµíd
(
p
, 
¨gv
[
i
], ' ');

847 
	}
}

860 
	$sqlôe3ExecFunc
(

861 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

862 
¨gc
,

863 
sqlôe3_vÆue
 **
¨gv


865 
d°r
 
x
;

866 
	`mem£t
(&
x
, 0, (x));

867 ()
	`sqlôe3_exec
((
sqlôe3
*)
	`sqlôe3_u£r_d©a
(
c⁄ãxt
),

868 (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]),

869 
execFuncCÆlback
, &
x
, 0);

870 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
x
.
z
, x.
nU£d
, 
SQLITE_TRANSIENT
);

871 
	`sqlôe3_‰ì
(
x
.
z
);

872 
	}
}

890 
	$tkt2213Fun˘i⁄
(

891 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

892 
¨gc
,

893 
sqlôe3_vÆue
 **
¨gv


895 
nText
;

896 c⁄° *
zText1
;

897 c⁄° *
zText2
;

898 c⁄° *
zText3
;

900 
nText
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

901 
zText1
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

902 
zText2
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

903 
zText3
 = 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

905 if–
zText1
!=
zText2
 || zText2!=
zText3
 ){

906 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "tkt2213 isÇot fixed", -1);

908 *
zC›y
 = (*)
	`sqlôe3_mÆloc
(
nText
);

909 
	`mem˝y
(
zC›y
, 
zText1
, 
nText
);

910 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zC›y
, 
nText
, 
sqlôe3_‰ì
);

912 
	}
}

938 
	$±rChngFun˘i⁄
(

939 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

940 
¨gc
,

941 
sqlôe3_vÆue
 **
¨gv


943 c⁄° *
p1
, *
p2
;

944 c⁄° *
zCmd
;

945 if–
¨gc
!=4 ) ;

946 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]);

947 if–
zCmd
==0 ) ;

948 if–
	`°rcmp
(
zCmd
,"text")==0 ){

949 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

950 #i‚de‡
SQLITE_OMIT_UTF16


951 }if–
	`°rcmp
(
zCmd
, "text16")==0 ){

952 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

954 }if–
	`°rcmp
(
zCmd
, "blob")==0 ){

955 
p1
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

959 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[2]);

960 if–
zCmd
==0 ) ;

961 if–
	`°rcmp
(
zCmd
,"bytes")==0 ){

962 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

963 #i‚de‡
SQLITE_OMIT_UTF16


964 }if–
	`°rcmp
(
zCmd
, "bytes16")==0 ){

965 
	`sqlôe3_vÆue_byãs16
(
¨gv
[0]);

967 }if–
	`°rcmp
(
zCmd
, "noop")==0 ){

972 
zCmd
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[3]);

973 if–
zCmd
==0 ) ;

974 if–
	`°rcmp
(
zCmd
,"text")==0 ){

975 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

976 #i‚de‡
SQLITE_OMIT_UTF16


977 }if–
	`°rcmp
(
zCmd
, "text16")==0 ){

978 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

980 }if–
	`°rcmp
(
zCmd
, "blob")==0 ){

981 
p2
 = (c⁄° *)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

985 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
p1
!=
p2
);

986 
	}
}

992 
	$n⁄dëîmöi°icFun˘i⁄
(

993 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

994 
¨gc
,

995 
sqlôe3_vÆue
 **
¨gv


997 
˙t
 = 0;

998 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
˙t
++);

999 
	}
}

1016 
SQLITE_TCLAPI
 
	$ã°_¸óã_fun˘i⁄
(

1017 *
NŸU£d
,

1018 
T˛_I¡îp
 *
öãΩ
,

1019 
¨gc
,

1020 **
¨gv


1022 
rc
;

1023 
sqlôe3
 *
db
;

1025 if–
¨gc
!=2 ){

1026 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1028  
TCL_ERROR
;

1030 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

1031 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cﬂÀs˚", -1, 
SQLITE_UTF8
, 0,

1032 
t1_i‚uŒFunc
, 0, 0);

1033 if–
rc
==
SQLITE_OK
 ){

1034 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hex8", 1, 
SQLITE_UTF8
 | 
SQLITE_DETERMINISTIC
,

1035 0, 
hex8Func
, 0, 0);

1037 #i‚de‡
SQLITE_OMIT_UTF16


1038 if–
rc
==
SQLITE_OK
 ){

1039 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hex16", 1, 
SQLITE_UTF16
 | 
SQLITE_DETERMINISTIC
,

1040 0, 
hex16Func
, 0, 0);

1043 if–
rc
==
SQLITE_OK
 ){

1044 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tkt2213func", 1, 
SQLITE_ANY
, 0,

1045 
tkt2213Fun˘i⁄
, 0, 0);

1047 if–
rc
==
SQLITE_OK
 ){

1048 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "poöãr_ch™ge", 4, 
SQLITE_ANY
, 0,

1049 
±rChngFun˘i⁄
, 0, 0);

1056 if–
rc
==
SQLITE_OK
 ){

1057 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cou¡î1", -1, 
SQLITE_UTF8
,

1058 0, 
n⁄dëîmöi°icFun˘i⁄
, 0, 0);

1060 if–
rc
==
SQLITE_OK
 ){

1061 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cou¡î2", -1, 
SQLITE_UTF8
|
SQLITE_DETERMINISTIC
,

1062 0, 
n⁄dëîmöi°icFun˘i⁄
, 0, 0);

1065 #i‚de‡
SQLITE_OMIT_UTF16


1068 if–
rc
==
SQLITE_OK
 ){

1069 c⁄° *
zUtf16
;

1070 
sqlôe3_vÆue
 *
pVÆ
;

1071 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1072 
pVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

1073 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, "x_sqlôe_exec", 
SQLITE_UTF8
, 
SQLITE_STATIC
);

1074 
zUtf16
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

1075 if–
db
->
mÆlocFaûed
 ){

1076 
rc
 = 
SQLITE_NOMEM
;

1078 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄16
(
db
, 
zUtf16
,

1079 1, 
SQLITE_UTF16
, 
db
, 
sqlôe3ExecFunc
, 0, 0);

1081 
	`sqlôe3VÆueFªe
(
pVÆ
);

1082 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1086 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

1087 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

1088  
TCL_OK
;

1089 
	}
}

1102 
t1Cou¡Ctx
 
	tt1Cou¡Ctx
;

1103 
	st1Cou¡Ctx
 {

1104 
	mn
;

1106 
	$t1Cou¡Sãp
(

1107 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1108 
¨gc
,

1109 
sqlôe3_vÆue
 **
¨gv


1111 
t1Cou¡Ctx
 *
p
;

1112 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1113 if–(
¨gc
==0 || 
SQLITE_NULL
!=
	`sqlôe3_vÆue_ty≥
(
¨gv
[0]ËË&& 
p
 ){

1114 
p
->
n
++;

1116 if–
¨gc
>0 ){

1117 
v
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

1118 if–
v
==40 ){

1119 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "value of 40 handedÅo x_count", -1);

1120 #i‚de‡
SQLITE_OMIT_UTF16


1121 }if–
v
==41 ){

1122 c⁄° 
zUtf16EºMsg
[] = { 0, 0x61, 0, 0x62, 0, 0x63, 0, 0, 0};

1123 
	`sqlôe3_ªsu…_îr‹16
(
c⁄ãxt
, &
zUtf16EºMsg
[1-
SQLITE_BIGENDIAN
], -1);

1127 
	}
}

1128 
	$t1Cou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1129 
t1Cou¡Ctx
 *
p
;

1130 
p
 = 
	`sqlôe3_aggªg©e_c⁄ãxt
(
c⁄ãxt
, (*p));

1131 if–
p
 ){

1132 if–
p
->
n
==42 ){

1133 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "x_countÅotalsÅo 42", -1);

1135 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
p
 ?Ö->
n
 : 0);

1138 
	}
}

1140 #i‚de‡
SQLITE_OMIT_DEPRECATED


1141 
	$ÀgacyCou¡Sãp
(

1142 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1143 
¨gc
,

1144 
sqlôe3_vÆue
 **
¨gv


1147 
	}
}

1149 
	$ÀgacyCou¡FöÆize
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
){

1150 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_aggªg©e_cou¡
(context));

1151 
	}
}

1173 
SQLITE_TCLAPI
 
	$ã°_¸óã_aggªg©e
(

1174 *
NŸU£d
,

1175 
T˛_I¡îp
 *
öãΩ
,

1176 
¨gc
,

1177 **
¨gv


1179 
sqlôe3
 *
db
;

1180 
rc
;

1181 if–
¨gc
!=2 ){

1182 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1184  
TCL_ERROR
;

1186 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

1187 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cou¡", 0, 
SQLITE_UTF8
, 0, 0,

1188 
t1Cou¡Sãp
,
t1Cou¡FöÆize
);

1189 if–
rc
==
SQLITE_OK
 ){

1190 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "x_cou¡", 1, 
SQLITE_UTF8
, 0, 0,

1191 
t1Cou¡Sãp
,
t1Cou¡FöÆize
);

1193 #i‚de‡
SQLITE_OMIT_DEPRECATED


1194 if–
rc
==
SQLITE_OK
 ){

1195 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "Àgacy_cou¡", 0, 
SQLITE_ANY
, 0, 0,

1196 
ÀgacyCou¡Sãp
, 
ÀgacyCou¡FöÆize


1200 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

1201 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

1202  
TCL_OK
;

1203 
	}
}

1214 
SQLITE_TCLAPI
 
	$ã°_¥ötf
(

1215 *
NŸU£d
,

1216 
T˛_I¡îp
 *
öãΩ
,

1217 
¨gc
,

1218 **
¨gv


1220 if–
¨gc
!=2 ){

1221 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1223  
TCL_ERROR
;

1225 
	`¥ötf
("%s\n", 
¨gv
[1]);

1226  
TCL_OK
;

1227 
	}
}

1236 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_öt
(

1237 *
NŸU£d
,

1238 
T˛_I¡îp
 *
öãΩ
,

1239 
¨gc
,

1240 **
¨gv


1242 
a
[3], 
i
;

1243 *
z
;

1244 if–
¨gc
!=5 ){

1245 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1247  
TCL_ERROR
;

1249 
i
=2; i<5; i++){

1250 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1252 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1253 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1254 
	`sqlôe3_‰ì
(
z
);

1255  
TCL_OK
;

1256 
	}
}

1263 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_öt64
(

1264 *
NŸU£d
,

1265 
T˛_I¡îp
 *
öãΩ
,

1266 
¨gc
,

1267 **
¨gv


1269 
i
;

1270 
sqlôe_öt64
 
a
[3];

1271 *
z
;

1272 if–
¨gc
!=5 ){

1273 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1275  
TCL_ERROR
;

1277 
i
=2; i<5; i++){

1278 if–
	`sqlôe3Atoi64
(
¨gv
[
i
], &
a
[i-2], 
	`sqlôe3SåÀn30
◊rgv[i]), 
SQLITE_UTF8
) ){

1279 
	`T˛_AµídResu…
(
öãΩ
, "argument isÇotá valid 64-bit integer", 0);

1280  
TCL_ERROR
;

1283 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1284 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1285 
	`sqlôe3_‰ì
(
z
);

1286  
TCL_OK
;

1287 
	}
}

1296 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_l⁄g
(

1297 *
NŸU£d
,

1298 
T˛_I¡îp
 *
öãΩ
,

1299 
¨gc
,

1300 **
¨gv


1302 
i
;

1303 
a
[3];

1304 
b
[3];

1305 *
z
;

1306 if–
¨gc
!=5 ){

1307 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1309  
TCL_ERROR
;

1311 
i
=2; i<5; i++){

1312 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
b
[i-2]ËË 
TCL_ERROR
;

1313 
a
[
i
-2] = ()
b
[i-2];

1314 
a
[
i
-2] &(((
u64
)1)<<(()*8))-1;

1316 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1],á[2]);

1317 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1318 
	`sqlôe3_‰ì
(
z
);

1319  
TCL_OK
;

1320 
	}
}

1327 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_°r
(

1328 *
NŸU£d
,

1329 
T˛_I¡îp
 *
öãΩ
,

1330 
¨gc
,

1331 **
¨gv


1333 
a
[3], 
i
;

1334 *
z
;

1335 if–
¨gc
<4 ||árgc>5 ){

1336 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1338  
TCL_ERROR
;

1340 
i
=2; i<4; i++){

1341 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1343 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1], 
¨gc
>4 ?árgv[4] : 
NULL
);

1344 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1345 
	`sqlôe3_‰ì
(
z
);

1346  
TCL_OK
;

1347 
	}
}

1354 
SQLITE_TCLAPI
 
	$sqlôe3_¢¥ötf_°r
(

1355 *
NŸU£d
,

1356 
T˛_I¡îp
 *
öãΩ
,

1357 
¨gc
,

1358 **
¨gv


1360 
a
[3], 
i
;

1361 
n
;

1362 *
z
;

1363 if–
¨gc
<5 ||árgc>6 ){

1364 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1366  
TCL_ERROR
;

1368 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
n
ËË 
TCL_ERROR
;

1369 if–
n
<0 ){

1370 
	`T˛_AµídResu…
(
öãΩ
, "N must beÇon-negative", 0);

1371  
TCL_ERROR
;

1373 
i
=3; i<5; i++){

1374 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-3]ËË 
TCL_ERROR
;

1376 
z
 = 
	`sqlôe3_mÆloc
–
n
+1 );

1377 
	`sqlôe3_¢¥ötf
(
n
, 
z
, 
¨gv
[2], 
a
[0],á[1], 
¨gc
>4 ?árgv[5] : 
NULL
);

1378 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1379 
	`sqlôe3_‰ì
(
z
);

1380  
TCL_OK
;

1381 
	}
}

1388 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_doubÀ
(

1389 *
NŸU£d
,

1390 
T˛_I¡îp
 *
öãΩ
,

1391 
¨gc
,

1392 **
¨gv


1394 
a
[3], 
i
;

1395 
r
;

1396 *
z
;

1397 if–
¨gc
!=5 ){

1398 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1400  
TCL_ERROR
;

1402 
i
=2; i<4; i++){

1403 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[
i
], &
a
[i-2]ËË 
TCL_ERROR
;

1405 if–
	`T˛_GëDoubÀ
(
öãΩ
, 
¨gv
[4], &
r
ËË 
TCL_ERROR
;

1406 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
a
[0],á[1], 
r
);

1407 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1408 
	`sqlôe3_‰ì
(
z
);

1409  
TCL_OK
;

1410 
	}
}

1419 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_sˇÀd
(

1420 *
NŸU£d
,

1421 
T˛_I¡îp
 *
öãΩ
,

1422 
¨gc
,

1423 **
¨gv


1425 
i
;

1426 
r
[2];

1427 *
z
;

1428 if–
¨gc
!=4 ){

1429 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1431  
TCL_ERROR
;

1433 
i
=2; i<4; i++){

1434 if–
	`T˛_GëDoubÀ
(
öãΩ
, 
¨gv
[
i
], &
r
[i-2]ËË 
TCL_ERROR
;

1436 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
r
[0]*r[1]);

1437 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1438 
	`sqlôe3_‰ì
(
z
);

1439  
TCL_OK
;

1440 
	}
}

1449 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_°r⁄ly
(

1450 *
NŸU£d
,

1451 
T˛_I¡îp
 *
öãΩ
,

1452 
¨gc
,

1453 **
¨gv


1455 *
z
;

1456 if–
¨gc
!=3 ){

1457 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1459  
TCL_ERROR
;

1461 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1],árgv[2]);

1462 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1463 
	`sqlôe3_‰ì
(
z
);

1464  
TCL_OK
;

1465 
	}
}

1473 
SQLITE_TCLAPI
 
	$sqlôe3_m¥ötf_hexdoubÀ
(

1474 *
NŸU£d
,

1475 
T˛_I¡îp
 *
öãΩ
,

1476 
¨gc
,

1477 **
¨gv


1479 *
z
;

1480 
r
;

1481 
x1
, 
x2
;

1482 
sqlôe_uöt64
 
d
;

1483 if–
¨gc
!=3 ){

1484 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

1486  
TCL_ERROR
;

1488 if–
	`ssˇnf
(
¨gv
[2], "%08x%08x", &
x2
, &
x1
)!=2 ){

1489 
	`T˛_AµídResu…
(
öãΩ
, "2ndárgument should be 16-characters of hex", 0);

1490  
TCL_ERROR
;

1492 
d
 = 
x2
;

1493 
d
 = (d<<32Ë+ 
x1
;

1494 
	`mem˝y
(&
r
, &
d
, (r));

1495 
z
 = 
	`sqlôe3_m¥ötf
(
¨gv
[1], 
r
);

1496 
	`T˛_AµídResu…
(
öãΩ
, 
z
, 0);

1497 
	`sqlôe3_‰ì
(
z
);

1498  
TCL_OK
;

1499 
	}
}

1505 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

1506 
SQLITE_TCLAPI
 
	$ã°_íabÀ_sh¨ed
(

1507 
Clõ¡D©a
 
˛õ¡D©a
,

1508 
T˛_I¡îp
 *
öãΩ
,

1509 
objc
,

1510 
T˛_Obj
 *
CONST
 
objv
[]

1512 
rc
;

1513 
íabÀ
;

1514 
ªt
 = 0;

1516 if–
objc
!=2 && objc!=1 ){

1517 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?BOOLEAN?");

1518  
TCL_ERROR
;

1520 
ªt
 = 
sqlôe3GlobÆC⁄fig
.
sh¨edCacheE«bÀd
;

1522 if–
objc
==2 ){

1523 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
íabÀ
) ){

1524  
TCL_ERROR
;

1526 
rc
 = 
	`sqlôe3_íabÀ_sh¨ed_ˇche
(
íabÀ
);

1527 if–
rc
!=
SQLITE_OK
 ){

1528 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
rc
), 
TCL_STATIC
);

1529  
TCL_ERROR
;

1532 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
ªt
));

1533  
TCL_OK
;

1534 
	}
}

1543 
SQLITE_TCLAPI
 
	$ã°_exãnded_ªsu…_codes
(

1544 
Clõ¡D©a
 
˛õ¡D©a
,

1545 
T˛_I¡îp
 *
öãΩ
,

1546 
objc
,

1547 
T˛_Obj
 *
CONST
 
objv
[]

1549 
íabÀ
;

1550 
sqlôe3
 *
db
;

1552 if–
objc
!=3 ){

1553 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB BOOLEAN");

1554  
TCL_ERROR
;

1556 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1557 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
íabÀ
ËË 
TCL_ERROR
;

1558 
	`sqlôe3_exãnded_ªsu…_codes
(
db
, 
íabÀ
);

1559  
TCL_OK
;

1560 
	}
}

1566 
SQLITE_TCLAPI
 
	$ã°_libvîsi⁄_numbî
(

1567 
Clõ¡D©a
 
˛õ¡D©a
,

1568 
T˛_I¡îp
 *
öãΩ
,

1569 
objc
,

1570 
T˛_Obj
 *
CONST
 
objv
[]

1572 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_libvîsi⁄_numbî
()));

1573  
TCL_OK
;

1574 
	}
}

1580 
SQLITE_TCLAPI
 
	$ã°_èbÀ_cﬁumn_mëad©a
(

1581 
Clõ¡D©a
 
˛õ¡D©a
,

1582 
T˛_I¡îp
 *
öãΩ
,

1583 
objc
,

1584 
T˛_Obj
 *
CONST
 
objv
[]

1586 
sqlôe3
 *
db
;

1587 c⁄° *
zDb
;

1588 c⁄° *
zTbl
;

1589 c⁄° *
zCﬁ
;

1590 
rc
;

1591 
T˛_Obj
 *
pRë
;

1593 c⁄° *
zD©©y≥
;

1594 c⁄° *
zCﬁl£q
;

1595 
nŸnuŒ
;

1596 
¥im¨ykey
;

1597 
autoö¸emít
;

1599 if–
objc
!=5 && objc!=4 ){

1600 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB dbnameÅblname colname");

1601  
TCL_ERROR
;

1603 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1604 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1605 
zTbl
 = 
	`T˛_GëSåög
(
objv
[3]);

1606 
zCﬁ
 = 
objc
==5 ? 
	`T˛_GëSåög
(
objv
[4]) : 0;

1608 if–
	`°æí
(
zDb
)==0 ) zDb = 0;

1610 
rc
 = 
	`sqlôe3_èbÀ_cﬁumn_mëad©a
(
db
, 
zDb
, 
zTbl
, 
zCﬁ
,

1611 &
zD©©y≥
, &
zCﬁl£q
, &
nŸnuŒ
, &
¥im¨ykey
, &
autoö¸emít
);

1613 if–
rc
!=
SQLITE_OK
 ){

1614 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_îrmsg
(
db
), 0);

1615  
TCL_ERROR
;

1618 
pRë
 = 
	`T˛_NewObj
();

1619 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zD©©y≥
, -1));

1620 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zCﬁl£q
, -1));

1621 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
nŸnuŒ
));

1622 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
¥im¨ykey
));

1623 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewI¡Obj
(
autoö¸emít
));

1624 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1626  
TCL_OK
;

1627 
	}
}

1629 #i‚de‡
SQLITE_OMIT_INCRBLOB


1631 
SQLITE_TCLAPI
 
	$blobH™dÀFromObj
(

1632 
T˛_I¡îp
 *
öãΩ
,

1633 
T˛_Obj
 *
pObj
,

1634 
sqlôe3_blob
 **
µBlob


1636 *
z
;

1637 
n
;

1639 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

1640 if–
n
==0 ){

1641 *
µBlob
 = 0;

1643 
nŸU£d
;

1644 
T˛_Ch™√l
 
ch™√l
;

1645 
Clõ¡D©a
 
ö°™˚D©a
;

1647 
ch™√l
 = 
	`T˛_GëCh™√l
(
öãΩ
, 
z
, &
nŸU£d
);

1648 if–!
ch™√l
 )  
TCL_ERROR
;

1650 
	`T˛_Flush
(
ch™√l
);

1651 
	`T˛_Sìk
(
ch™√l
, 0, 
SEEK_SET
);

1653 
ö°™˚D©a
 = 
	`T˛_GëCh™√lIn°™˚D©a
(
ch™√l
);

1654 *
µBlob
 = *((
sqlôe3_blob
 **)
ö°™˚D©a
);

1657  
TCL_OK
;

1658 
	}
}

1660 
SQLITE_TCLAPI
 
	$ã°_blob_ª›í
(

1661 
Clõ¡D©a
 
˛õ¡D©a
,

1662 
T˛_I¡îp
 *
öãΩ
,

1663 
objc
,

1664 
T˛_Obj
 *
CONST
 
objv
[]

1666 
T˛_WideI¡
 
iRowid
;

1667 
sqlôe3_blob
 *
pBlob
;

1668 
rc
;

1670 if–
objc
!=3 ){

1671 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "CHANNEL ROWID");

1672  
TCL_ERROR
;

1675 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

1676 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
iRowid
ËË 
TCL_ERROR
;

1678 
rc
 = 
	`sqlôe3_blob_ª›í
(
pBlob
, 
iRowid
);

1679 if–
rc
!=
SQLITE_OK
 ){

1680 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1683  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

1684 
	}
}

1694 
	sTe°Cﬁœti⁄X
 {

1695 
T˛_I¡îp
 *
	möãΩ
;

1696 
T˛_Obj
 *
	mpCmp
;

1697 
T˛_Obj
 *
	mpDñ
;

1699 
Te°Cﬁœti⁄X
 
	tTe°Cﬁœti⁄X
;

1700 
	$ã°Cª©eCﬁœti⁄Dñ
(*
pCtx
){

1701 
Te°Cﬁœti⁄X
 *
p
 = (Te°Cﬁœti⁄X *)
pCtx
;

1703 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
,Ö->
pDñ
, 
TCL_EVAL_DIRECT
|
TCL_EVAL_GLOBAL
);

1704 if–
rc
!=
TCL_OK
 ){

1705 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1708 
	`T˛_De¸RefCou¡
(
p
->
pCmp
);

1709 
	`T˛_De¸RefCou¡
(
p
->
pDñ
);

1710 
	`sqlôe3_‰ì
((*)
p
);

1711 
	}
}

1712 
	$ã°Cª©eCﬁœti⁄Cmp
(

1713 *
pCtx
,

1714 
nLe·
,

1715 c⁄° *
zLe·
,

1716 
nRight
,

1717 c⁄° *
zRight


1719 
Te°Cﬁœti⁄X
 *
p
 = (Te°Cﬁœti⁄X *)
pCtx
;

1720 
T˛_Obj
 *
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
p
->
pCmp
);

1721 
iRes
 = 0;

1723 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

1724 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
((*)
zLe·
, 
nLe·
));

1725 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewSåögObj
((*)
zRight
,
nRight
));

1727 if–
TCL_OK
!=
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_DIRECT
|
TCL_EVAL_GLOBAL
)

1728 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
p
->
öãΩ
, 
	`T˛_GëObjResu…
’->öãΩ), &
iRes
)

1730 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1732 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

1734  
iRes
;

1735 
	}
}

1736 
SQLITE_TCLAPI
 
	$ã°_¸óã_cﬁœti⁄_v2
(

1737 
Clõ¡D©a
 
˛õ¡D©a
,

1738 
T˛_I¡îp
 *
öãΩ
,

1739 
objc
,

1740 
T˛_Obj
 *
CONST
 
objv
[]

1742 
Te°Cﬁœti⁄X
 *
p
;

1743 
sqlôe3
 *
db
;

1744 
rc
;

1746 if–
objc
!=5 ){

1747 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE NAME CMP-PROC DEL-PROC");

1748  
TCL_ERROR
;

1750 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1752 
p
 = (
Te°Cﬁœti⁄X
 *)
	`sqlôe3_mÆloc
((TestCollationX));

1753 
p
->
pCmp
 = 
objv
[3];

1754 
p
->
pDñ
 = 
objv
[4];

1755 
p
->
öãΩ
 = interp;

1756 
	`T˛_In¸RefCou¡
(
p
->
pCmp
);

1757 
	`T˛_In¸RefCou¡
(
p
->
pDñ
);

1759 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 16,

1760 (*)
p
, 
ã°Cª©eCﬁœti⁄Cmp
, 
ã°Cª©eCﬁœti⁄Dñ


1762 if–
rc
!=
SQLITE_MISUSE
 ){

1763 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_create_collate_v2() failedÅo detect "

1765  
TCL_ERROR
;

1767 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄_v2
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 
SQLITE_UTF8
,

1768 (*)
p
, 
ã°Cª©eCﬁœti⁄Cmp
, 
ã°Cª©eCﬁœti⁄Dñ


1770  
TCL_OK
;

1771 
	}
}

1783 
Cª©eFun˘i⁄V2
 
	tCª©eFun˘i⁄V2
;

1784 
	sCª©eFun˘i⁄V2
 {

1785 
T˛_I¡îp
 *
	möãΩ
;

1786 
T˛_Obj
 *
	mpFunc
;

1787 
T˛_Obj
 *
	mpSãp
;

1788 
T˛_Obj
 *
	mpFöÆ
;

1789 
T˛_Obj
 *
	mpDe°roy
;

1791 
	$cf2Func
(
sqlôe3_c⁄ãxt
 *
˘x
, 
nArg
, 
sqlôe3_vÆue
 **
aArg
){

1792 
	}
}

1793 
	$cf2Sãp
(
sqlôe3_c⁄ãxt
 *
˘x
, 
nArg
, 
sqlôe3_vÆue
 **
aArg
){

1794 
	}
}

1795 
	$cf2FöÆ
(
sqlôe3_c⁄ãxt
 *
˘x
){

1796 
	}
}

1797 
	$cf2De°roy
(*
pU£r
){

1798 
Cª©eFun˘i⁄V2
 *
p
 = (Cª©eFun˘i⁄V2 *)
pU£r
;

1800 if–
p
->
öãΩ
 &&Ö->
pDe°roy
 ){

1801 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
,Ö->
pDe°roy
, 0);

1802 if–
rc
!=
TCL_OK
 ) 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1805 if–
p
->
pFunc
 ) 
	`T˛_De¸RefCou¡
(p->pFunc);

1806 if–
p
->
pSãp
 ) 
	`T˛_De¸RefCou¡
(p->pStep);

1807 if–
p
->
pFöÆ
 ) 
	`T˛_De¸RefCou¡
(p->pFinal);

1808 if–
p
->
pDe°roy
 ) 
	`T˛_De¸RefCou¡
(p->pDestroy);

1809 
	`sqlôe3_‰ì
(
p
);

1810 
	}
}

1811 
SQLITE_TCLAPI
 
	$ã°_¸óã_fun˘i⁄_v2
(

1812 
Clõ¡D©a
 
˛õ¡D©a
,

1813 
T˛_I¡îp
 *
öãΩ
,

1814 
objc
,

1815 
T˛_Obj
 *
CONST
 
objv
[]

1817 
sqlôe3
 *
db
;

1818 c⁄° *
zFunc
;

1819 
nArg
;

1820 
íc
;

1821 
Cª©eFun˘i⁄V2
 *
p
;

1822 
i
;

1823 
rc
;

1825 
	sEncTabÀ
 {

1826 c⁄° *
zEnc
;

1827 
íc
;

1828 } 
aEnc
[] = {

1829 {"utf8", 
SQLITE_UTF8
 },

1830 {"utf16", 
SQLITE_UTF16
 },

1831 {"utf16À", 
SQLITE_UTF16LE
 },

1832 {"utf16be", 
SQLITE_UTF16BE
 },

1833 {"™y", 
SQLITE_ANY
 },

1837 if–
objc
<5 || (objc%2)==0 ){

1838 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB NAME NARG ENC SWITCHES...");

1839  
TCL_ERROR
;

1842 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1843 
zFunc
 = 
	`T˛_GëSåög
(
objv
[2]);

1844 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nArg
ËË 
TCL_ERROR
;

1845 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
objv
[4], 
aEnc
, (aEnc[0]),

1846 "ícodög", 0, &
íc
)

1848  
TCL_ERROR
;

1850 
íc
 = 
aEnc
[enc].enc;

1852 
p
 = 
	`sqlôe3_mÆloc
((
Cª©eFun˘i⁄V2
));

1853 
	`as£π
–
p
 );

1854 
	`mem£t
(
p
, 0, (
Cª©eFun˘i⁄V2
));

1855 
p
->
öãΩ
 = interp;

1857 
i
=5; i<
objc
; i+=2){

1858 
iSwôch
;

1859 c⁄° *
azSwôch
[] = {"-func", "-step", "-final", "-destroy", 0};

1860 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[
i
], 
azSwôch
, "swôch", 0, &
iSwôch
) ){

1861 
	`sqlôe3_‰ì
(
p
);

1862  
TCL_ERROR
;

1865  
iSwôch
 ){

1866 0: 
p
->
pFunc
 = 
objv
[
i
+1]; ;

1867 1: 
p
->
pSãp
 = 
objv
[
i
+1]; ;

1868 2: 
p
->
pFöÆ
 = 
objv
[
i
+1]; ;

1869 3: 
p
->
pDe°roy
 = 
objv
[
i
+1]; ;

1872 if–
p
->
pFunc
 )Ö->pFun¯
	`T˛_Du∂iˇãObj
(p->pFunc);

1873 if–
p
->
pSãp
 )Ö->pSã∞
	`T˛_Du∂iˇãObj
(p->pStep);

1874 if–
p
->
pFöÆ
 )Ö->pFöÆ = 
	`T˛_Du∂iˇãObj
(p->pFinal);

1875 if–
p
->
pDe°roy
 )Ö->pDe°roy = 
	`T˛_Du∂iˇãObj
(p->pDestroy);

1877 if–
p
->
pFunc
 ) 
	`T˛_In¸RefCou¡
(p->pFunc);

1878 if–
p
->
pSãp
 ) 
	`T˛_In¸RefCou¡
(p->pStep);

1879 if–
p
->
pFöÆ
 ) 
	`T˛_In¸RefCou¡
(p->pFinal);

1880 if–
p
->
pDe°roy
 ) 
	`T˛_In¸RefCou¡
(p->pDestroy);

1882 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄_v2
(
db
, 
zFunc
, 
nArg
, 
íc
, (*)
p
,

1883 (
p
->
pFunc
 ? 
cf2Func
 : 0),

1884 (
p
->
pSãp
 ? 
cf2Sãp
 : 0),

1885 (
p
->
pFöÆ
 ? 
cf2FöÆ
 : 0),

1886 
cf2De°roy


1888 if–
rc
!=
SQLITE_OK
 ){

1889 
	`T˛_Re£tResu…
(
öãΩ
);

1890 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

1891  
TCL_ERROR
;

1893  
TCL_OK
;

1894 
	}
}

1899 
SQLITE_TCLAPI
 
	$ã°_lﬂd_exãnsi⁄
(

1900 
Clõ¡D©a
 
˛õ¡D©a
,

1901 
T˛_I¡îp
 *
öãΩ
,

1902 
objc
,

1903 
T˛_Obj
 *
CONST
 
objv
[]

1905 
T˛_CmdInfo
 
cmdInfo
;

1906 
sqlôe3
 *
db
;

1907 
rc
;

1908 *
zDb
;

1909 *
zFûe
;

1910 *
zProc
 = 0;

1911 *
zEº
 = 0;

1913 if–
objc
!=4 && objc!=3 ){

1914 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE FILE ?PROC?");

1915  
TCL_ERROR
;

1917 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

1918 
zFûe
 = 
	`T˛_GëSåög
(
objv
[2]);

1919 if–
objc
==4 ){

1920 
zProc
 = 
	`T˛_GëSåög
(
objv
[3]);

1924 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1925 
	`T˛_AµídResu…
(
öãΩ
, "comm™dÇŸ found: ", 
zDb
, (*)0);

1926  
TCL_ERROR
;

1928 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1929 
	`as£π
(
db
);

1935 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


1936 
rc
 = 
SQLITE_ERROR
;

1937 
zEº
 = 
	`sqlôe3_m¥ötf
("this build omits sqlite3_load_extension()");

1938 ()
zProc
;

1939 ()
zFûe
;

1941 
rc
 = 
	`sqlôe3_lﬂd_exãnsi⁄
(
db
, 
zFûe
, 
zProc
, &
zEº
);

1943 if–
rc
!=
SQLITE_OK
 ){

1944 
	`T˛_SëResu…
(
öãΩ
, 
zEº
 ? zEº : "", 
TCL_VOLATILE
);

1945 
rc
 = 
TCL_ERROR
;

1947 
rc
 = 
TCL_OK
;

1949 
	`sqlôe3_‰ì
(
zEº
);

1951  
rc
;

1952 
	}
}

1957 
SQLITE_TCLAPI
 
	$ã°_íabÀ_lﬂd
(

1958 
Clõ¡D©a
 
˛õ¡D©a
,

1959 
T˛_I¡îp
 *
öãΩ
,

1960 
objc
,

1961 
T˛_Obj
 *
CONST
 
objv
[]

1963 
T˛_CmdInfo
 
cmdInfo
;

1964 
sqlôe3
 *
db
;

1965 *
zDb
;

1966 
⁄off
;

1968 if–
objc
!=3 ){

1969 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB-HANDLE ONOFF");

1970  
TCL_ERROR
;

1972 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

1975 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1976 
	`T˛_AµídResu…
(
öãΩ
, "comm™dÇŸ found: ", 
zDb
, (*)0);

1977  
TCL_ERROR
;

1979 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1980 
	`as£π
(
db
);

1983 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
⁄off
) ){

1984  
TCL_ERROR
;

1987 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


1988 
	`T˛_AµídResu…
(
öãΩ
, "this build omits sqlite3_load_extension()");

1989  
TCL_ERROR
;

1991 
	`sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
db
, 
⁄off
);

1992  
TCL_OK
;

1994 
	}
}

2003 
SQLITE_TCLAPI
 
	$sqlôe_ab‹t
(

2004 *
NŸU£d
,

2005 
T˛_I¡îp
 *
öãΩ
,

2006 
¨gc
,

2007 **
¨gv


2009 #i‡
	`deföed
(
_MSC_VER
)

2013 
	`_£t_ab‹t_behavi‹
–0, 
_CALL_REPORTFAULT
 );

2015 
	`exô
(255);

2016 
	`as£π
–
öãΩ
==0 );

2017  
TCL_OK
;

2018 
	}
}

2024 
	$ã°Func
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

2025  
¨gc
>=2 ){

2026 c⁄° *
zArg0
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

2027 if–
zArg0
 ){

2028 if–0==
	`sqlôe3SåICmp
(
zArg0
, "int") ){

2029 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

2030 }if–
	`sqlôe3SåICmp
(
zArg0
,"int64")==0 ){

2031 
	`sqlôe3_ªsu…_öt64
(
c⁄ãxt
, 
	`sqlôe3_vÆue_öt64
(
¨gv
[1]));

2032 }if–
	`sqlôe3SåICmp
(
zArg0
,"string")==0 ){

2033 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[1]), -1,

2034 
SQLITE_TRANSIENT
);

2035 }if–
	`sqlôe3SåICmp
(
zArg0
,"double")==0 ){

2036 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[1]));

2037 }if–
	`sqlôe3SåICmp
(
zArg0
,"null")==0 ){

2038 
	`sqlôe3_ªsu…_nuŒ
(
c⁄ãxt
);

2039 }if–
	`sqlôe3SåICmp
(
zArg0
,"value")==0 ){

2040 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[
	`sqlôe3_vÆue_öt
(argv[1])]);

2042 
îr‹_out
;

2045 
îr‹_out
;

2047 
¨gc
 -= 2;

2048 
¨gv
 += 2;

2052 
îr‹_out
:

2053 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
,"firstárgument should be one of: "

2055 
	}
}

2062 
SQLITE_TCLAPI
 
	$ã°_ªgi°î_func
(

2063 *
NŸU£d
,

2064 
T˛_I¡îp
 *
öãΩ
,

2065 
¨gc
,

2066 **
¨gv


2068 
sqlôe3
 *
db
;

2069 
rc
;

2070 if–
¨gc
!=3 ){

2071 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

2073  
TCL_ERROR
;

2075 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

2076 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
¨gv
[2], -1, 
SQLITE_UTF8
, 0,

2077 
ã°Func
, 0, 0);

2078 if–
rc
!=0 ){

2079 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºSå
(
rc
), 0);

2080  
TCL_ERROR
;

2082 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2083  
TCL_OK
;

2084 
	}
}

2091 
SQLITE_TCLAPI
 
	$ã°_föÆize
(

2092 * 
˛õ¡D©a
,

2093 
T˛_I¡îp
 *
öãΩ
,

2094 
objc
,

2095 
T˛_Obj
 *
CONST
 
objv
[]

2097 
sqlôe3_°mt
 *
pStmt
;

2098 
rc
;

2099 
sqlôe3
 *
db
 = 0;

2101 if–
objc
!=2 ){

2102 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2103 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2104  
TCL_ERROR
;

2107 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2109 if–
pStmt
 ){

2110 
db
 = 
	`StmtToDb
(
pStmt
);

2112 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

2113 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

2114 if–
db
 && 
	`sqlôe3Te°EºCode
(
öãΩ
, db, 
rc
ËË 
TCL_ERROR
;

2115  
TCL_OK
;

2116 
	}
}

2123 
SQLITE_TCLAPI
 
	$ã°_°mt_°©us
(

2124 * 
˛õ¡D©a
,

2125 
T˛_I¡îp
 *
öãΩ
,

2126 
objc
,

2127 
T˛_Obj
 *
CONST
 
objv
[]

2129 
iVÆue
;

2130 
i
, 
›
 = 0, 
ª£tFœg
;

2131 c⁄° *
zOpName
;

2132 
sqlôe3_°mt
 *
pStmt
;

2135 c⁄° *
zName
;

2136 
›
;

2137 } 
aOp
[] = {

2138 { "SQLITE_STMTSTATUS_FULLSCAN_STEP", 
SQLITE_STMTSTATUS_FULLSCAN_STEP
 },

2139 { "SQLITE_STMTSTATUS_SORT", 
SQLITE_STMTSTATUS_SORT
 },

2140 { "SQLITE_STMTSTATUS_AUTOINDEX", 
SQLITE_STMTSTATUS_AUTOINDEX
 },

2141 { "SQLITE_STMTSTATUS_VM_STEP", 
SQLITE_STMTSTATUS_VM_STEP
 },

2143 if–
objc
!=4 ){

2144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT PARAMETER RESETFLAG");

2145  
TCL_ERROR
;

2147 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2148 
zOpName
 = 
	`T˛_GëSåög
(
objv
[2]);

2149 
i
=0; i<
	`AºaySize
(
aOp
); i++){

2150 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

2151 
›
 = 
aOp
[
i
].op;

2155 if–
i
>=
	`AºaySize
(
aOp
) ){

2156 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
›
ËË 
TCL_ERROR
;

2158 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
ª£tFœg
ËË 
TCL_ERROR
;

2159 
iVÆue
 = 
	`sqlôe3_°mt_°©us
(
pStmt
, 
›
, 
ª£tFœg
);

2160 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iVÆue
));

2161  
TCL_OK
;

2162 
	}
}

2164 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2168 
SQLITE_TCLAPI
 
	$ã°_°mt_sˇn°©us
(

2169 * 
˛õ¡D©a
,

2170 
T˛_I¡îp
 *
öãΩ
,

2171 
objc
,

2172 
T˛_Obj
 *
CONST
 
objv
[]

2174 
sqlôe3_°mt
 *
pStmt
;

2175 
idx
;

2177 c⁄° *
zName
;

2178 c⁄° *
zEx∂aö
;

2179 
sqlôe3_öt64
 
nLo›
;

2180 
sqlôe3_öt64
 
nVisô
;

2181 
rE°
;

2182 
ªs
;

2184 if–
objc
!=3 ){

2185 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX");

2186  
TCL_ERROR
;

2188 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2189 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

2191 
ªs
 = 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NLOOP
, (*)&
nLo›
);

2192 if–
ªs
==0 ){

2193 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

2194 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nLoop", -1));

2195 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewWideI¡Obj
(
nLo›
));

2196 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NVISIT
, (*)&
nVisô
);

2197 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nVisit", -1));

2198 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewWideI¡Obj
(
nVisô
));

2199 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_EST
, (*)&
rE°
);

2200 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("nEst", -1));

2201 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewDoubÀObj
(
rE°
));

2202 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_NAME
, (*)&
zName
);

2203 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("zName", -1));

2204 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zName
, -1));

2205 
	`sqlôe3_°mt_sˇn°©us
(
pStmt
, 
idx
, 
SQLITE_SCANSTAT_EXPLAIN
, (*)&
zEx∂aö
);

2206 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
("zExplain", -1));

2207 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
	`T˛_NewSåögObj
(
zEx∂aö
, -1));

2208 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

2210 
	`T˛_Re£tResu…
(
öãΩ
);

2212  
TCL_OK
;

2213 
	}
}

2218 
SQLITE_TCLAPI
 
	$ã°_°mt_sˇn°©us_ª£t
(

2219 * 
˛õ¡D©a
,

2220 
T˛_I¡îp
 *
öãΩ
,

2221 
objc
,

2222 
T˛_Obj
 *
CONST
 
objv
[]

2224 
sqlôe3_°mt
 *
pStmt
;

2225 if–
objc
!=2 ){

2226 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

2227  
TCL_ERROR
;

2229 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2230 
	`sqlôe3_°mt_sˇn°©us_ª£t
(
pStmt
);

2231  
TCL_OK
;

2232 
	}
}

2235 #ifde‡
SQLITE_ENABLE_SQLLOG


2241 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_sqŒog
(

2242 * 
˛õ¡D©a
,

2243 
T˛_I¡îp
 *
öãΩ
,

2244 
objc
,

2245 
T˛_Obj
 *
CONST
 
objv
[]

2247 if–
objc
!=1 ){

2248 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

2249  
TCL_ERROR
;

2251 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SQLLOG
, 0, 0);

2252  
TCL_OK
;

2253 
	}
}

2261 
SQLITE_TCLAPI
 
	$vfsCuºítTimeI¡64
(

2262 * 
˛õ¡D©a
,

2263 
T˛_I¡îp
 *
öãΩ
,

2264 
objc
,

2265 
T˛_Obj
 *
CONST
 
objv
[]

2267 
i64
 
t
;

2268 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

2269 if–
objc
!=1 ){

2270 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

2271  
TCL_ERROR
;

2273 
pVfs
->
	`xCuºítTimeI¡64
’Vfs, &
t
);

2274 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
t
));

2275  
TCL_OK
;

2276 
	}
}

2278 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2282 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_gë
(

2283 * 
˛õ¡D©a
,

2284 
T˛_I¡îp
 *
öãΩ
,

2285 
objc
,

2286 
T˛_Obj
 *
CONST
 
objv
[]

2288 
rc
;

2289 
sqlôe3
 *
db
;

2290 *
zName
;

2291 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
 = 0;

2293 if–
objc
!=3 ){

2294 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

2295  
TCL_ERROR
;

2297 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2298 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2300 
rc
 = 
	`sqlôe3_¢≠shŸ_gë
(
db
, 
zName
, &
pS«pshŸ
);

2301 if–
rc
!=
SQLITE_OK
 ){

2302 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2303  
TCL_ERROR
;

2305 
zBuf
[100];

2306 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pS«pshŸ
ËË 
TCL_ERROR
;

2307 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zBuf
, -1));

2309  
TCL_OK
;

2310 
	}
}

2313 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2317 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_›í
(

2318 * 
˛õ¡D©a
,

2319 
T˛_I¡îp
 *
öãΩ
,

2320 
objc
,

2321 
T˛_Obj
 *
CONST
 
objv
[]

2323 
rc
;

2324 
sqlôe3
 *
db
;

2325 *
zName
;

2326 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
;

2328 if–
objc
!=4 ){

2329 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SNAPSHOT");

2330  
TCL_ERROR
;

2332 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2333 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

2334 
pS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[3]));

2336 
rc
 = 
	`sqlôe3_¢≠shŸ_›í
(
db
, 
zName
, 
pS«pshŸ
);

2337 if–
rc
!=
SQLITE_OK
 ){

2338 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

2339  
TCL_ERROR
;

2341  
TCL_OK
;

2342 
	}
}

2345 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2349 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_‰ì
(

2350 * 
˛õ¡D©a
,

2351 
T˛_I¡îp
 *
öãΩ
,

2352 
objc
,

2353 
T˛_Obj
 *
CONST
 
objv
[]

2355 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
;

2356 if–
objc
!=2 ){

2357 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SNAPSHOT");

2358  
TCL_ERROR
;

2360 
pS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

2361 
	`sqlôe3_¢≠shŸ_‰ì
(
pS«pshŸ
);

2362  
TCL_OK
;

2363 
	}
}

2366 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2370 
SQLITE_TCLAPI
 
	$ã°_¢≠shŸ_cmp
(

2371 * 
˛õ¡D©a
,

2372 
T˛_I¡îp
 *
öãΩ
,

2373 
objc
,

2374 
T˛_Obj
 *
CONST
 
objv
[]

2376 
ªs
;

2377 
sqlôe3_¢≠shŸ
 *
p1
;

2378 
sqlôe3_¢≠shŸ
 *
p2
;

2379 if–
objc
!=3 ){

2380 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SNAPSHOT1 SNAPSHOT2");

2381  
TCL_ERROR
;

2383 
p1
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

2384 
p2
 = (
sqlôe3_¢≠shŸ
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[2]));

2385 
ªs
 = 
	`sqlôe3_¢≠shŸ_cmp
(
p1
, 
p2
);

2386 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
ªs
));

2387  
TCL_OK
;

2388 
	}
}

2396 
SQLITE_TCLAPI
 
	$ã°_√xt_°mt
(

2397 * 
˛õ¡D©a
,

2398 
T˛_I¡îp
 *
öãΩ
,

2399 
objc
,

2400 
T˛_Obj
 *
CONST
 
objv
[]

2402 
sqlôe3_°mt
 *
pStmt
;

2403 
sqlôe3
 *
db
 = 0;

2404 
zBuf
[50];

2406 if–
objc
!=3 ){

2407 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2408 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB STMT", 0);

2409  
TCL_ERROR
;

2412 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2413 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pStmt
ËË 
TCL_ERROR
;

2414 
pStmt
 = 
	`sqlôe3_√xt_°mt
(
db
,ÖStmt);

2415 if–
pStmt
 ){

2416 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

2417 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

2419  
TCL_OK
;

2420 
	}
}

2428 
SQLITE_TCLAPI
 
	$ã°_°mt_ªad⁄ly
(

2429 * 
˛õ¡D©a
,

2430 
T˛_I¡îp
 *
öãΩ
,

2431 
objc
,

2432 
T˛_Obj
 *
CONST
 
objv
[]

2434 
sqlôe3_°mt
 *
pStmt
;

2435 
rc
;

2437 if–
objc
!=2 ){

2438 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2439 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2440  
TCL_ERROR
;

2443 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2444 
rc
 = 
	`sqlôe3_°mt_ªad⁄ly
(
pStmt
);

2445 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
rc
));

2446  
TCL_OK
;

2447 
	}
}

2455 
SQLITE_TCLAPI
 
	$ã°_°mt_busy
(

2456 * 
˛õ¡D©a
,

2457 
T˛_I¡îp
 *
öãΩ
,

2458 
objc
,

2459 
T˛_Obj
 *
CONST
 
objv
[]

2461 
sqlôe3_°mt
 *
pStmt
;

2462 
rc
;

2464 if–
objc
!=2 ){

2465 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2466 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2467  
TCL_ERROR
;

2470 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2471 
rc
 = 
	`sqlôe3_°mt_busy
(
pStmt
);

2472 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
rc
));

2473  
TCL_OK
;

2474 
	}
}

2481 
SQLITE_TCLAPI
 
	$u£s_°mt_jou∫Æ
(

2482 * 
˛õ¡D©a
,

2483 
T˛_I¡îp
 *
öãΩ
,

2484 
objc
,

2485 
T˛_Obj
 *
CONST
 
objv
[]

2487 
sqlôe3_°mt
 *
pStmt
;

2489 if–
objc
!=2 ){

2490 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2491 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT", 0);

2492  
TCL_ERROR
;

2495 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2496 
	`sqlôe3_°mt_ªad⁄ly
(
pStmt
);

2497 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(((
Vdbe
 *)
pStmt
)->
u£sStmtJou∫Æ
));

2498  
TCL_OK
;

2499 
	}
}

2507 
SQLITE_TCLAPI
 
	$ã°_ª£t
(

2508 * 
˛õ¡D©a
,

2509 
T˛_I¡îp
 *
öãΩ
,

2510 
objc
,

2511 
T˛_Obj
 *
CONST
 
objv
[]

2513 
sqlôe3_°mt
 *
pStmt
;

2514 
rc
;

2516 if–
objc
!=2 ){

2517 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2518 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2519  
TCL_ERROR
;

2522 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2524 
rc
 = 
	`sqlôe3_ª£t
(
pStmt
);

2525 if–
pStmt
 && 
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
’Stmt), 
rc
) ){

2526  
TCL_ERROR
;

2528 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

2534  
TCL_OK
;

2535 
	}
}

2542 
SQLITE_TCLAPI
 
	$ã°_expúed
(

2543 * 
˛õ¡D©a
,

2544 
T˛_I¡îp
 *
öãΩ
,

2545 
objc
,

2546 
T˛_Obj
 *
CONST
 
objv
[]

2548 #i‚de‡
SQLITE_OMIT_DEPRECATED


2549 
sqlôe3_°mt
 *
pStmt
;

2550 if–
objc
!=2 ){

2551 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2552 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <STMT>", 0);

2553  
TCL_ERROR
;

2555 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

2556 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
	`sqlôe3_expúed
(
pStmt
)));

2558  
TCL_OK
;

2559 
	}
}

2566 
SQLITE_TCLAPI
 
	$ã°_å™s„r_böd
(

2567 * 
˛õ¡D©a
,

2568 
T˛_I¡îp
 *
öãΩ
,

2569 
objc
,

2570 
T˛_Obj
 *
CONST
 
objv
[]

2572 #i‚de‡
SQLITE_OMIT_DEPRECATED


2573 
sqlôe3_°mt
 *
pStmt1
, *
pStmt2
;

2574 if–
objc
!=3 ){

2575 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2576 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " FROM-STMT TO-STMT", 0);

2577  
TCL_ERROR
;

2579 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt1
)Ë 
TCL_ERROR
;

2580 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pStmt2
)Ë 
TCL_ERROR
;

2581 
	`T˛_SëObjResu…
(
öãΩ
,

2582 
	`T˛_NewI¡Obj
(
	`sqlôe3_å™s„r_bödögs
(
pStmt1
,
pStmt2
)));

2584  
TCL_OK
;

2585 
	}
}

2593 
SQLITE_TCLAPI
 
	$ã°_ch™ges
(

2594 * 
˛õ¡D©a
,

2595 
T˛_I¡îp
 *
öãΩ
,

2596 
objc
,

2597 
T˛_Obj
 *
CONST
 
objv
[]

2599 
sqlôe3
 *
db
;

2600 if–
objc
!=2 ){

2601 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2602 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

2603  
TCL_ERROR
;

2605 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2606 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_ch™ges
(
db
)));

2607  
TCL_OK
;

2608 
	}
}

2614 *
	gsqlôe_°©ic_böd_vÆue
 = 0;

2615 
	gsqlôe_°©ic_böd_nbyã
 = 0;

2628 
SQLITE_TCLAPI
 
	$ã°_böd
(

2629 *
NŸU£d
,

2630 
T˛_I¡îp
 *
öãΩ
,

2631 
¨gc
,

2632 **
¨gv


2634 
sqlôe3_°mt
 *
pStmt
;

2635 
rc
;

2636 
idx
;

2637 if–
¨gc
!=5 ){

2638 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

2640  
TCL_ERROR
;

2642 if–
	`gëStmtPoöãr
(
öãΩ
, 
¨gv
[1], &
pStmt
ËË 
TCL_ERROR
;

2643 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
idx
ËË 
TCL_ERROR
;

2644 if–
	`°rcmp
(
¨gv
[4],"null")==0 ){

2645 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
idx
);

2646 }if–
	`°rcmp
(
¨gv
[4],"static")==0 ){

2647 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
sqlôe_°©ic_böd_vÆue
, -1, 0);

2648 }if–
	`°rcmp
(
¨gv
[4],"static-nbytes")==0 ){

2649 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
sqlôe_°©ic_böd_vÆue
,

2650 
sqlôe_°©ic_böd_nbyã
, 0);

2651 }if–
	`°rcmp
(
¨gv
[4],"normal")==0 ){

2652 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
¨gv
[3], -1, 
SQLITE_TRANSIENT
);

2653 }if–
	`°rcmp
(
¨gv
[4],"blob10")==0 ){

2654 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, "abc\000xyz\000pq", 10, 
SQLITE_STATIC
);

2656 
	`T˛_AµídResu…
(
öãΩ
, "4thárgument should be "

2658  
TCL_ERROR
;

2660 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

2661 if–
rc
 ){

2662 
zBuf
[50];

2663 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

2664 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3EºSå
(
rc
), 0);

2665  
TCL_ERROR
;

2667  
TCL_OK
;

2668 
	}
}

2670 #i‚de‡
SQLITE_OMIT_UTF16


2699 
T˛_I¡îp
* 
	gpTe°CﬁœãI¡îp
;

2700 
	$ã°_cﬁœã_func
(

2701 *
pCtx
,

2702 
nA
, c⁄° *
zA
,

2703 
nB
, c⁄° *
zB


2705 
T˛_I¡îp
 *
i
 = 
pTe°CﬁœãI¡îp
;

2706 
ícö
 = 
	`SQLITE_PTR_TO_INT
(
pCtx
);

2707 
ªs
;

2708 
n
;

2710 
sqlôe3_vÆue
 *
pVÆ
;

2711 
T˛_Obj
 *
pX
;

2713 
pX
 = 
	`T˛_NewSåögObj
("test_collate", -1);

2714 
	`T˛_In¸RefCou¡
(
pX
);

2716  
ícö
 ){

2717 
SQLITE_UTF8
:

2718 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-8",-1));

2720 
SQLITE_UTF16LE
:

2721 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-16LE",-1));

2723 
SQLITE_UTF16BE
:

2724 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,
	`T˛_NewSåögObj
("UTF-16BE",-1));

2727 
	`as£π
(0);

2730 
	`sqlôe3BegöBíignMÆloc
();

2731 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

2732 if–
pVÆ
 ){

2733 
	`sqlôe3VÆueSëSå
(
pVÆ
, 
nA
, 
zA
, 
ícö
, 
SQLITE_STATIC
);

2734 
n
 = 
	`sqlôe3_vÆue_byãs
(
pVÆ
);

2735 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,

2736 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),
n
));

2737 
	`sqlôe3VÆueSëSå
(
pVÆ
, 
nB
, 
zB
, 
ícö
, 
SQLITE_STATIC
);

2738 
n
 = 
	`sqlôe3_vÆue_byãs
(
pVÆ
);

2739 
	`T˛_Li°ObjAµídEÀmít
(
i
,
pX
,

2740 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),
n
));

2741 
	`sqlôe3VÆueFªe
(
pVÆ
);

2743 
	`sqlôe3EndBíignMÆloc
();

2745 
	`T˛_EvÆObjEx
(
i
, 
pX
, 0);

2746 
	`T˛_De¸RefCou¡
(
pX
);

2747 
	`T˛_GëI¡FromObj
(
i
, 
	`T˛_GëObjResu…
(i), &
ªs
);

2748  
ªs
;

2749 
	}
}

2750 
SQLITE_TCLAPI
 
	$ã°_cﬁœã
(

2751 * 
˛õ¡D©a
,

2752 
T˛_I¡îp
 *
öãΩ
,

2753 
objc
,

2754 
T˛_Obj
 *
CONST
 
objv
[]

2756 
sqlôe3
 *
db
;

2757 
vÆ
;

2758 
sqlôe3_vÆue
 *
pVÆ
;

2759 
rc
;

2761 if–
objc
!=5 ) 
bad_¨gs
;

2762 
pTe°CﬁœãI¡îp
 = 
öãΩ
;

2763 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2765 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

2766 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "ã°_cﬁœã", 
SQLITE_UTF8
,

2767 (*)
SQLITE_UTF8
, 
vÆ
?
ã°_cﬁœã_func
:0);

2768 if–
rc
==
SQLITE_OK
 ){

2769 c⁄° *
zUtf16
;

2770 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

2771 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "ã°_cﬁœã", 
SQLITE_UTF16LE
,

2772 (*)
SQLITE_UTF16LE
, 
vÆ
?
ã°_cﬁœã_func
:0);

2773 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
vÆ
ËË 
TCL_ERROR
;

2776 if–
sqlôe3_iMÆlocFaû
>0 ){

2777 
sqlôe3_iMÆlocFaû
++;

2780 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

2781 
pVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

2782 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, "ã°_cﬁœã", 
SQLITE_UTF8
, 
SQLITE_STATIC
);

2783 
zUtf16
 = 
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

2784 if–
db
->
mÆlocFaûed
 ){

2785 
rc
 = 
SQLITE_NOMEM
;

2787 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄16
(
db
, 
zUtf16
, 
SQLITE_UTF16BE
,

2788 (*)
SQLITE_UTF16BE
, 
vÆ
?
ã°_cﬁœã_func
:0);

2790 
	`sqlôe3VÆueFªe
(
pVÆ
);

2791 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

2793 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2795 if–
rc
!=
SQLITE_OK
 ){

2796 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

2797  
TCL_ERROR
;

2799  
TCL_OK
;

2801 
bad_¨gs
:

2802 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

2803 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <DB> <utf8> <utf16le> <utf16be>", 0);

2804  
TCL_ERROR
;

2805 
	}
}

2814 
	$ã°_utf16bö_cﬁœã_func
(

2815 *
pCtx
,

2816 
nA
, c⁄° *
zA
,

2817 
nB
, c⁄° *
zB


2819 
nCmp
 = (
nA
>
nB
 ?ÇB :ÇA);

2820 
ªs
 = 
	`memcmp
(
zA
, 
zB
, 
nCmp
);

2821 if–
ªs
==0 )Ñe†
nA
 - 
nB
;

2822  
ªs
;

2823 
	}
}

2824 
SQLITE_TCLAPI
 
	$ã°_utf16bö_cﬁœã
(

2825 * 
˛õ¡D©a
,

2826 
T˛_I¡îp
 *
öãΩ
,

2827 
objc
,

2828 
T˛_Obj
 *
CONST
 
objv
[]

2830 
sqlôe3
 *
db
;

2831 
rc
;

2833 if–
objc
!=2 ) 
bad_¨gs
;

2834 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2836 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16bö", 
SQLITE_UTF16
, 0,

2837 
ã°_utf16bö_cﬁœã_func


2839 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2840  
TCL_OK
;

2842 
bad_¨gs
:

2843 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

2844  
TCL_ERROR
;

2845 
	}
}

2853 
	gzNìdedCﬁœti⁄
[200];

2854 *
	gpzNìdedCﬁœti⁄
 = 
zNìdedCﬁœti⁄
;

2861 
	$ã°_cﬁœã_√eded_cb
(

2862 *
pCtx
,

2863 
sqlôe3
 *
db
,

2864 
eTextRï
,

2865 c⁄° *
pName


2867 
íc
 = 
	`ENC
(
db
);

2868 
i
;

2869 *
z
;

2870 
z
 = (*)
pName
, 
i
=0; *z || z[1]; z++){

2871 if–*
z
 ) 
zNìdedCﬁœti⁄
[
i
++] = *z;

2873 
zNìdedCﬁœti⁄
[
i
] = 0;

2874 
	`sqlôe3_¸óã_cﬁœti⁄
(

2875 
db
, "ã°_cﬁœã", 
	`ENC
(db), 
	`SQLITE_INT_TO_PTR
(
íc
), 
ã°_cﬁœã_func
);

2876 
	}
}

2881 
SQLITE_TCLAPI
 
	$ã°_cﬁœã_√eded
(

2882 * 
˛õ¡D©a
,

2883 
T˛_I¡îp
 *
öãΩ
,

2884 
objc
,

2885 
T˛_Obj
 *
CONST
 
objv
[]

2887 
sqlôe3
 *
db
;

2888 
rc
;

2890 if–
objc
!=2 ) 
bad_¨gs
;

2891 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2892 
rc
 = 
	`sqlôe3_cﬁœti⁄_√eded16
(
db
, 0, 
ã°_cﬁœã_√eded_cb
);

2893 
zNìdedCﬁœti⁄
[0] = 0;

2894 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

2895  
TCL_OK
;

2897 
bad_¨gs
:

2898 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

2899  
TCL_ERROR
;

2900 
	}
}

2916 
	gu«lig√d_°rög_cou¡î
 = 0;

2917 
	$ÆignmítCﬁlFunc
(

2918 *
NŸU£d
,

2919 
nKey1
, c⁄° *
pKey1
,

2920 
nKey2
, c⁄° *
pKey2


2922 
rc
, 
n
;

2923 
n
 = 
nKey1
<
nKey2
 ?ÇKey1 :ÇKey2;

2924 if–
nKey1
>0 && 1==(1&(
	`SQLITE_PTR_TO_INT
(
pKey1
))ËË
u«lig√d_°rög_cou¡î
++;

2925 if–
nKey2
>0 && 1==(1&(
	`SQLITE_PTR_TO_INT
(
pKey2
))ËË
u«lig√d_°rög_cou¡î
++;

2926 
rc
 = 
	`memcmp
(
pKey1
, 
pKey2
, 
n
);

2927 if–
rc
==0 ){

2928 
rc
 = 
nKey1
 - 
nKey2
;

2930  
rc
;

2931 
	}
}

2932 
SQLITE_TCLAPI
 
	$add_Æignmít_ã°_cﬁœti⁄s
(

2933 * 
˛õ¡D©a
,

2934 
T˛_I¡îp
 *
öãΩ
,

2935 
objc
,

2936 
T˛_Obj
 *
CONST
 
objv
[]

2938 
sqlôe3
 *
db
;

2939 if–
objc
>=2 ){

2940 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

2941 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16_u«lig√d", 
SQLITE_UTF16
,

2942 0, 
ÆignmítCﬁlFunc
);

2943 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "utf16_Æig√d", 
SQLITE_UTF16_ALIGNED
,

2944 0, 
ÆignmítCﬁlFunc
);

2946  
SQLITE_OK
;

2947 
	}
}

2975 #i‚de‡
SQLITE_OMIT_UTF16


2976 
	$ã°_fun˘i⁄_utf8
(

2977 
sqlôe3_c⁄ãxt
 *
pCtx
,

2978 
nArg
,

2979 
sqlôe3_vÆue
 **
¨gv


2981 
T˛_I¡îp
 *
öãΩ
;

2982 
T˛_Obj
 *
pX
;

2983 
sqlôe3_vÆue
 *
pVÆ
;

2984 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

2985 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

2986 
	`T˛_In¸RefCou¡
(
pX
);

2987 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-8", -1));

2988 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

2989 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

2990 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

2991 
	`T˛_De¸RefCou¡
(
pX
);

2992 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
	`T˛_GëSåögResu…
(
öãΩ
), -1, 
SQLITE_TRANSIENT
);

2993 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

2994 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

2995 
SQLITE_UTF8
, 
SQLITE_STATIC
);

2996 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16be
(
pVÆ
),

2997 -1, 
SQLITE_TRANSIENT
);

2998 
	`sqlôe3VÆueFªe
(
pVÆ
);

2999 
	}
}

3000 
	$ã°_fun˘i⁄_utf16À
(

3001 
sqlôe3_c⁄ãxt
 *
pCtx
,

3002 
nArg
,

3003 
sqlôe3_vÆue
 **
¨gv


3005 
T˛_I¡îp
 *
öãΩ
;

3006 
T˛_Obj
 *
pX
;

3007 
sqlôe3_vÆue
 *
pVÆ
;

3008 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

3009 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

3010 
	`T˛_In¸RefCou¡
(
pX
);

3011 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-16LE", -1));

3012 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

3013 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

3014 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

3015 
	`T˛_De¸RefCou¡
(
pX
);

3016 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3017 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

3018 
SQLITE_UTF8
, 
SQLITE_STATIC
);

3019 
	`sqlôe3_ªsu…_ãxt
(
pCtx
,(*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
),-1,
SQLITE_TRANSIENT
);

3020 
	`sqlôe3VÆueFªe
(
pVÆ
);

3021 
	}
}

3022 
	$ã°_fun˘i⁄_utf16be
(

3023 
sqlôe3_c⁄ãxt
 *
pCtx
,

3024 
nArg
,

3025 
sqlôe3_vÆue
 **
¨gv


3027 
T˛_I¡îp
 *
öãΩ
;

3028 
T˛_Obj
 *
pX
;

3029 
sqlôe3_vÆue
 *
pVÆ
;

3030 
öãΩ
 = (
T˛_I¡îp
 *)
	`sqlôe3_u£r_d©a
(
pCtx
);

3031 
pX
 = 
	`T˛_NewSåögObj
("test_function", -1);

3032 
	`T˛_In¸RefCou¡
(
pX
);

3033 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
, 
	`T˛_NewSåögObj
("UTF-16BE", -1));

3034 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pX
,

3035 
	`T˛_NewSåögObj
((*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1));

3036 
	`T˛_EvÆObjEx
(
öãΩ
, 
pX
, 0);

3037 
	`T˛_De¸RefCou¡
(
pX
);

3038 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

3039 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
	`T˛_GëSåögResu…
(
öãΩ
),

3040 
SQLITE_UTF8
, 
SQLITE_STATIC
);

3041 
	`sqlôe3_ªsu…_ãxt16
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3042 -1, 
SQLITE_TRANSIENT
);

3043 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3044 -1, 
SQLITE_TRANSIENT
);

3045 
	`sqlôe3_ªsu…_ãxt16À
(
pCtx
, 
	`sqlôe3_vÆue_ãxt16À
(
pVÆ
),

3046 -1, 
SQLITE_TRANSIENT
);

3047 
	`sqlôe3VÆueFªe
(
pVÆ
);

3048 
	}
}

3050 
SQLITE_TCLAPI
 
	$ã°_fun˘i⁄
(

3051 * 
˛õ¡D©a
,

3052 
T˛_I¡îp
 *
öãΩ
,

3053 
objc
,

3054 
T˛_Obj
 *
CONST
 
objv
[]

3056 #i‚de‡
SQLITE_OMIT_UTF16


3057 
sqlôe3
 *
db
;

3058 
vÆ
;

3060 if–
objc
!=5 ) 
bad_¨gs
;

3061 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3063 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

3064 if–
vÆ
 ){

3065 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF8
,

3066 
öãΩ
, 
ã°_fun˘i⁄_utf8
, 0, 0);

3068 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

3069 if–
vÆ
 ){

3070 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF16LE
,

3071 
öãΩ
, 
ã°_fun˘i⁄_utf16À
, 0, 0);

3073 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
vÆ
ËË 
TCL_ERROR
;

3074 if–
vÆ
 ){

3075 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_fun˘i⁄", 1, 
SQLITE_UTF16BE
,

3076 
öãΩ
, 
ã°_fun˘i⁄_utf16be
, 0, 0);

3079  
TCL_OK
;

3080 
bad_¨gs
:

3081 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3082 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <DB> <utf8> <utf16le> <utf16be>", 0);

3084  
TCL_ERROR
;

3085 
	}
}

3095 
SQLITE_TCLAPI
 
	$ã°_îr°r
(

3096 * 
˛õ¡D©a
,

3097 
T˛_I¡îp
 *
öãΩ
,

3098 
objc
,

3099 
T˛_Obj
 *
CONST
 
objv
[]

3101 *
zCode
;

3102 
i
;

3103 if–
objc
!=1 ){

3104 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "<error code>");

3107 
zCode
 = 
	`T˛_GëSåög
(
objv
[1]);

3108 
i
=0; i<200; i++){

3109 if–0==
	`°rcmp
(
	`t1Eº‹Name
(
i
), 
zCode
) ) ;

3111 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
i
), 0);

3112  
TCL_OK
;

3113 
	}
}

3128 
SQLITE_TCLAPI
 
	$ã°_bªakpoöt
(

3129 *
NŸU£d
,

3130 
T˛_I¡îp
 *
öãΩ
,

3131 
¨gc
,

3132 **
¨gv


3134  
TCL_OK
;

3135 
	}
}

3144 
SQLITE_TCLAPI
 
	$ã°_böd_zîoblob
(

3145 * 
˛õ¡D©a
,

3146 
T˛_I¡îp
 *
öãΩ
,

3147 
objc
,

3148 
T˛_Obj
 *
CONST
 
objv
[]

3150 
sqlôe3_°mt
 *
pStmt
;

3151 
idx
;

3152 
n
;

3153 
rc
;

3155 if–
objc
!=4 ){

3156 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX N");

3157  
TCL_ERROR
;

3160 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3161 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3162 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
n
ËË 
TCL_ERROR
;

3164 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
idx
, 
n
);

3165 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3166 if–
rc
!=
SQLITE_OK
 ){

3167  
TCL_ERROR
;

3170  
TCL_OK
;

3171 
	}
}

3180 
SQLITE_TCLAPI
 
	$ã°_böd_zîoblob64
(

3181 * 
˛õ¡D©a
,

3182 
T˛_I¡îp
 *
öãΩ
,

3183 
objc
,

3184 
T˛_Obj
 *
CONST
 
objv
[]

3186 
sqlôe3_°mt
 *
pStmt
;

3187 
idx
;

3188 
T˛_WideI¡
 
n
;

3189 
rc
;

3191 if–
objc
!=4 ){

3192 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT IDX N");

3193  
TCL_ERROR
;

3196 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3197 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3198 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
n
ËË 
TCL_ERROR
;

3200 
rc
 = 
	`sqlôe3_böd_zîoblob64
(
pStmt
, 
idx
, 
n
);

3201 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3202 if–
rc
!=
SQLITE_OK
 ){

3203 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3204  
TCL_ERROR
;

3207  
TCL_OK
;

3208 
	}
}

3217 
SQLITE_TCLAPI
 
	$ã°_böd_öt
(

3218 * 
˛õ¡D©a
,

3219 
T˛_I¡îp
 *
öãΩ
,

3220 
objc
,

3221 
T˛_Obj
 *
CONST
 
objv
[]

3223 
sqlôe3_°mt
 *
pStmt
;

3224 
idx
;

3225 
vÆue
;

3226 
rc
;

3228 if–
objc
!=4 ){

3229 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3230 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3231  
TCL_ERROR
;

3234 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3235 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3236 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆue
ËË 
TCL_ERROR
;

3238 
rc
 = 
	`sqlôe3_böd_öt
(
pStmt
, 
idx
, 
vÆue
);

3239 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3240 if–
rc
!=
SQLITE_OK
 ){

3241  
TCL_ERROR
;

3244  
TCL_OK
;

3245 
	}
}

3257 
SQLITE_TCLAPI
 
	$ã°_öèºay_addr
(

3258 * 
˛õ¡D©a
,

3259 
T˛_I¡îp
 *
öãΩ
,

3260 
objc
,

3261 
T˛_Obj
 *
CONST
 
objv
[]

3263 
i
;

3264 *
p
 = 0;

3266 
	`sqlôe3_‰ì
(
p
);

3267 
p
 = 0;

3268 if–
objc
>1 ){

3269 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3270 if–
p
==0 )  
TCL_ERROR
;

3271 
i
=0; i<
objc
-1; i++){

3272 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1+
i
], &
p
[i]) ){

3273 
	`sqlôe3_‰ì
(
p
);

3274 
p
 = 0;

3275  
TCL_ERROR
;

3279 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3280  
TCL_OK
;

3281 
	}
}

3291 
SQLITE_TCLAPI
 
	$ã°_öt64¨øy_addr
(

3292 * 
˛õ¡D©a
,

3293 
T˛_I¡îp
 *
öãΩ
,

3294 
objc
,

3295 
T˛_Obj
 *
CONST
 
objv
[]

3297 
i
;

3298 
sqlôe3_öt64
 *
p
 = 0;

3300 
	`sqlôe3_‰ì
(
p
);

3301 
p
 = 0;

3302 if–
objc
>1 ){

3303 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3304 if–
p
==0 )  
TCL_ERROR
;

3305 
i
=0; i<
objc
-1; i++){

3306 
T˛_WideI¡
 
v
;

3307 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[1+
i
], &
v
) ){

3308 
	`sqlôe3_‰ì
(
p
);

3309 
p
 = 0;

3310  
TCL_ERROR
;

3312 
p
[
i
] = 
v
;

3315 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3316  
TCL_OK
;

3317 
	}
}

3327 
SQLITE_TCLAPI
 
	$ã°_doubÀ¨øy_addr
(

3328 * 
˛õ¡D©a
,

3329 
T˛_I¡îp
 *
öãΩ
,

3330 
objc
,

3331 
T˛_Obj
 *
CONST
 
objv
[]

3333 
i
;

3334 *
p
 = 0;

3336 
	`sqlôe3_‰ì
(
p
);

3337 
p
 = 0;

3338 if–
objc
>1 ){

3339 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3340 if–
p
==0 )  
TCL_ERROR
;

3341 
i
=0; i<
objc
-1; i++){

3342 if–
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
objv
[1+
i
], &
p
[i]) ){

3343 
	`sqlôe3_‰ì
(
p
);

3344 
p
 = 0;

3345  
TCL_ERROR
;

3349 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3350  
TCL_OK
;

3351 
	}
}

3361 
SQLITE_TCLAPI
 
	$ã°_ãxèºay_addr
(

3362 * 
˛õ¡D©a
,

3363 
T˛_I¡îp
 *
öãΩ
,

3364 
objc
,

3365 
T˛_Obj
 *
CONST
 
objv
[]

3367 
i
;

3368 
n
 = 0;

3369 **
p
 = 0;

3371 
i
=0; i<
n
; i++Ë
	`sqlôe3_‰ì
(
p
[i]);

3372 
	`sqlôe3_‰ì
(
p
);

3373 
p
 = 0;

3374 if–
objc
>1 ){

3375 
p
 = 
	`sqlôe3_mÆloc
–’[0])*(
objc
-1) );

3376 if–
p
==0 )  
TCL_ERROR
;

3377 
i
=0; i<
objc
-1; i++){

3378 
p
[
i
] = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåög
(
objv
[1+i]));

3381 
n
 = 
objc
-1;

3382 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
((
sqlôe3_öt64
)
p
));

3383  
TCL_OK
;

3384 
	}
}

3394 
SQLITE_TCLAPI
 
	$ã°_böd_öt64
(

3395 * 
˛õ¡D©a
,

3396 
T˛_I¡îp
 *
öãΩ
,

3397 
objc
,

3398 
T˛_Obj
 *
CONST
 
objv
[]

3400 
sqlôe3_°mt
 *
pStmt
;

3401 
idx
;

3402 
T˛_WideI¡
 
vÆue
;

3403 
rc
;

3405 if–
objc
!=4 ){

3406 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3407 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3408  
TCL_ERROR
;

3411 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3412 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3413 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆue
ËË 
TCL_ERROR
;

3415 
rc
 = 
	`sqlôe3_böd_öt64
(
pStmt
, 
idx
, 
vÆue
);

3416 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3417 if–
rc
!=
SQLITE_OK
 ){

3418  
TCL_ERROR
;

3421  
TCL_OK
;

3422 
	}
}

3432 
SQLITE_TCLAPI
 
	$ã°_böd_doubÀ
(

3433 * 
˛õ¡D©a
,

3434 
T˛_I¡îp
 *
öãΩ
,

3435 
objc
,

3436 
T˛_Obj
 *
CONST
 
objv
[]

3438 
sqlôe3_°mt
 *
pStmt
;

3439 
idx
;

3440 
vÆue
 = 0;

3441 
rc
;

3442 c⁄° *
zVÆ
;

3443 
i
;

3445 c⁄° *
zName
;

3446 
iUµî
;

3447 
iLowî
;

3448 } 
aS≥cülFp
[] = {

3461 if–
objc
!=4 ){

3462 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3463 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE", 0);

3464  
TCL_ERROR
;

3467 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3468 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3475 
zVÆ
 = 
	`T˛_GëSåög
(
objv
[3]);

3476 
i
=0; i<(
aS≥cülFp
)/(aSpecialFp[0]); i++){

3477 if–
	`°rcmp
(
aS≥cülFp
[
i
].
zName
, 
zVÆ
)==0 ){

3478 
sqlôe3_uöt64
 
x
;

3479 
x
 = 
aS≥cülFp
[
i
].
iUµî
;

3480 
x
 <<= 32;

3481 
x
 |
aS≥cülFp
[
i
].
iLowî
;

3482 
	`as£π
–(
vÆue
)==8 );

3483 
	`as£π
–(
x
)==8 );

3484 
	`mem˝y
(&
vÆue
, &
x
, 8);

3488 if–
i
>=(
aS≥cülFp
)/(aSpecialFp[0]) &&

3489 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
objv
[3], &
vÆue
) ){

3490  
TCL_ERROR
;

3492 
rc
 = 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
idx
, 
vÆue
);

3493 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3494 if–
rc
!=
SQLITE_OK
 ){

3495  
TCL_ERROR
;

3498  
TCL_OK
;

3499 
	}
}

3508 
SQLITE_TCLAPI
 
	$ã°_böd_nuŒ
(

3509 * 
˛õ¡D©a
,

3510 
T˛_I¡îp
 *
öãΩ
,

3511 
objc
,

3512 
T˛_Obj
 *
CONST
 
objv
[]

3514 
sqlôe3_°mt
 *
pStmt
;

3515 
idx
;

3516 
rc
;

3518 if–
objc
!=3 ){

3519 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3520 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N", 0);

3521  
TCL_ERROR
;

3524 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3525 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3527 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
idx
);

3528 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3529 if–
rc
!=
SQLITE_OK
 ){

3530  
TCL_ERROR
;

3533  
TCL_OK
;

3534 
	}
}

3544 
SQLITE_TCLAPI
 
	$ã°_böd_ãxt
(

3545 * 
˛õ¡D©a
,

3546 
T˛_I¡îp
 *
öãΩ
,

3547 
objc
,

3548 
T˛_Obj
 *
CONST
 
objv
[]

3550 
sqlôe3_°mt
 *
pStmt
;

3551 
idx
;

3552 
byãs
;

3553 *
vÆue
;

3554 
rc
;

3556 if–
objc
!=5 ){

3557 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3558 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE BYTES", 0);

3559  
TCL_ERROR
;

3562 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3563 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3564 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &
byãs
);

3565 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
byãs
ËË 
TCL_ERROR
;

3567 
rc
 = 
	`sqlôe3_böd_ãxt
(
pStmt
, 
idx
, 
vÆue
, 
byãs
, 
SQLITE_TRANSIENT
);

3568 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3569 if–
rc
!=
SQLITE_OK
 ){

3570 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3571  
TCL_ERROR
;

3574  
TCL_OK
;

3575 
	}
}

3585 
SQLITE_TCLAPI
 
	$ã°_böd_ãxt16
(

3586 * 
˛õ¡D©a
,

3587 
T˛_I¡îp
 *
öãΩ
,

3588 
objc
,

3589 
T˛_Obj
 *
CONST
 
objv
[]

3591 #i‚de‡
SQLITE_OMIT_UTF16


3592 
sqlôe3_°mt
 *
pStmt
;

3593 
idx
;

3594 
byãs
;

3595 *
vÆue
;

3596 
rc
;

3598 (*
xDñ
)(*Ë(
objc
==6?
SQLITE_STATIC
:
SQLITE_TRANSIENT
);

3599 
T˛_Obj
 *
oStmt
 = 
objv
[
objc
-4];

3600 
T˛_Obj
 *
oN
 = 
objv
[
objc
-3];

3601 
T˛_Obj
 *
oSåög
 = 
objv
[
objc
-2];

3602 
T˛_Obj
 *
oByãs
 = 
objv
[
objc
-1];

3604 if–
objc
!=5 && objc!=6){

3605 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3606 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N VALUE BYTES", 0);

3607  
TCL_ERROR
;

3610 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
oStmt
), &
pStmt
ËË 
TCL_ERROR
;

3611 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
oN
, &
idx
ËË 
TCL_ERROR
;

3612 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
oSåög
, 0);

3613 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
oByãs
, &
byãs
ËË 
TCL_ERROR
;

3615 
rc
 = 
	`sqlôe3_böd_ãxt16
(
pStmt
, 
idx
, (*)
vÆue
, 
byãs
, 
xDñ
);

3616 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3617 if–
rc
!=
SQLITE_OK
 ){

3618 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

3619  
TCL_ERROR
;

3623  
TCL_OK
;

3624 
	}
}

3633 
SQLITE_TCLAPI
 
	$ã°_böd_blob
(

3634 * 
˛õ¡D©a
,

3635 
T˛_I¡îp
 *
öãΩ
,

3636 
objc
,

3637 
T˛_Obj
 *
CONST
 
objv
[]

3639 
sqlôe3_°mt
 *
pStmt
;

3640 
Àn
, 
idx
;

3641 
byãs
;

3642 *
vÆue
;

3643 
rc
;

3644 
sqlôe3_de°ru˘‹_ty≥
 
xDe°ru˘‹
 = 
SQLITE_TRANSIENT
;

3646 if–
objc
!=5 && objc!=6 ){

3647 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3648 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " STMT N DATA BYTES", 0);

3649  
TCL_ERROR
;

3652 if–
objc
==6 ){

3653 
xDe°ru˘‹
 = 
SQLITE_STATIC
;

3654 
objv
++;

3657 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3658 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
idx
ËË 
TCL_ERROR
;

3660 
vÆue
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &
Àn
);

3661 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
byãs
ËË 
TCL_ERROR
;

3663 if–
byãs
>
Àn
 ){

3664 
zBuf
[200];

3665 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,

3666 "ˇ¬Ÿ u£ %d blob byãs, havê%d", 
byãs
, 
Àn
);

3667 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, -1);

3668  
TCL_ERROR
;

3671 
rc
 = 
	`sqlôe3_böd_blob
(
pStmt
, 
idx
, 
vÆue
, 
byãs
, 
xDe°ru˘‹
);

3672 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
	`StmtToDb
(
pStmt
), 
rc
ËË 
TCL_ERROR
;

3673 if–
rc
!=
SQLITE_OK
 ){

3674  
TCL_ERROR
;

3677  
TCL_OK
;

3678 
	}
}

3685 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_cou¡
(

3686 * 
˛õ¡D©a
,

3687 
T˛_I¡îp
 *
öãΩ
,

3688 
objc
,

3689 
T˛_Obj
 *
CONST
 
objv
[]

3691 
sqlôe3_°mt
 *
pStmt
;

3693 if–
objc
!=2 ){

3694 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

3695  
TCL_ERROR
;

3697 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3698 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_böd_∑ømëî_cou¡
(
pStmt
)));

3699  
TCL_OK
;

3700 
	}
}

3709 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_«me
(

3710 * 
˛õ¡D©a
,

3711 
T˛_I¡îp
 *
öãΩ
,

3712 
objc
,

3713 
T˛_Obj
 *
CONST
 
objv
[]

3715 
sqlôe3_°mt
 *
pStmt
;

3716 
i
;

3718 if–
objc
!=3 ){

3719 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT N");

3720  
TCL_ERROR
;

3722 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3723 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
i
ËË 
TCL_ERROR
;

3724 
	`T˛_SëObjResu…
(
öãΩ
,

3725 
	`T˛_NewSåögObj
(
	`sqlôe3_böd_∑ømëî_«me
(
pStmt
,
i
),-1)

3727  
TCL_OK
;

3728 
	}
}

3736 
SQLITE_TCLAPI
 
	$ã°_böd_∑ømëî_ödex
(

3737 * 
˛õ¡D©a
,

3738 
T˛_I¡îp
 *
öãΩ
,

3739 
objc
,

3740 
T˛_Obj
 *
CONST
 
objv
[]

3742 
sqlôe3_°mt
 *
pStmt
;

3744 if–
objc
!=3 ){

3745 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT NAME");

3746  
TCL_ERROR
;

3748 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3749 
	`T˛_SëObjResu…
(
öãΩ
,

3750 
	`T˛_NewI¡Obj
(

3751 
	`sqlôe3_böd_∑ømëî_ödex
(
pStmt
,
	`T˛_GëSåög
(
objv
[2]))

3754  
TCL_OK
;

3755 
	}
}

3761 
SQLITE_TCLAPI
 
	$ã°_˛ór_bödögs
(

3762 * 
˛õ¡D©a
,

3763 
T˛_I¡îp
 *
öãΩ
,

3764 
objc
,

3765 
T˛_Obj
 *
CONST
 
objv
[]

3767 
sqlôe3_°mt
 *
pStmt
;

3769 if–
objc
!=2 ){

3770 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

3771  
TCL_ERROR
;

3773 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

3774 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_˛ór_bödögs
(
pStmt
)));

3775  
TCL_OK
;

3776 
	}
}

3781 
SQLITE_TCLAPI
 
	$ã°_¶ìp
(

3782 * 
˛õ¡D©a
,

3783 
T˛_I¡îp
 *
öãΩ
,

3784 
objc
,

3785 
T˛_Obj
 *
CONST
 
objv
[]

3787 
ms
;

3789 if–
objc
!=2 ){

3790 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "MILLISECONDS");

3791  
TCL_ERROR
;

3793 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ms
) ){

3794  
TCL_ERROR
;

3796 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_¶ìp
(
ms
)));

3797  
TCL_OK
;

3798 
	}
}

3806 
SQLITE_TCLAPI
 
	$ã°_ex_îrcode
(

3807 * 
˛õ¡D©a
,

3808 
T˛_I¡îp
 *
öãΩ
,

3809 
objc
,

3810 
T˛_Obj
 *
CONST
 
objv
[]

3812 
sqlôe3
 *
db
;

3813 
rc
;

3815 if–
objc
!=2 ){

3816 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3817 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

3818  
TCL_ERROR
;

3820 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3821 
rc
 = 
	`sqlôe3_exãnded_îrcode
(
db
);

3822 
	`T˛_AµídResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

3823  
TCL_OK
;

3824 
	}
}

3833 
SQLITE_TCLAPI
 
	$ã°_îrcode
(

3834 * 
˛õ¡D©a
,

3835 
T˛_I¡îp
 *
öãΩ
,

3836 
objc
,

3837 
T˛_Obj
 *
CONST
 
objv
[]

3839 
sqlôe3
 *
db
;

3840 
rc
;

3842 if–
objc
!=2 ){

3843 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3844 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

3845  
TCL_ERROR
;

3847 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3848 
rc
 = 
	`sqlôe3_îrcode
(
db
);

3849 
	`T˛_AµídResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

3850  
TCL_OK
;

3851 
	}
}

3859 
SQLITE_TCLAPI
 
	$ã°_îrmsg
(

3860 * 
˛õ¡D©a
,

3861 
T˛_I¡îp
 *
öãΩ
,

3862 
objc
,

3863 
T˛_Obj
 *
CONST
 
objv
[]

3865 
sqlôe3
 *
db
;

3866 c⁄° *
zEº
;

3868 if–
objc
!=2 ){

3869 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3870 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

3871  
TCL_ERROR
;

3873 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3875 
zEº
 = 
	`sqlôe3_îrmsg
(
db
);

3876 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zEº
, -1));

3877  
TCL_OK
;

3878 
	}
}

3888 
SQLITE_TCLAPI
 
	$ã°_îrmsg16
(

3889 * 
˛õ¡D©a
,

3890 
T˛_I¡îp
 *
öãΩ
,

3891 
objc
,

3892 
T˛_Obj
 *
CONST
 
objv
[]

3894 #i‚de‡
SQLITE_OMIT_UTF16


3895 
sqlôe3
 *
db
;

3896 c⁄° *
zEº
;

3897 c⁄° *
z
;

3898 
byãs
 = 0;

3900 if–
objc
!=2 ){

3901 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3902 
	`T˛_GëSåög
(
objv
[0]), " DB", 0);

3903  
TCL_ERROR
;

3905 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3907 
zEº
 = 
	`sqlôe3_îrmsg16
(
db
);

3908 if–
zEº
 ){

3909 
z
 = 
zEº
;

3910 
byãs
=0; 
z
[bytes] || z[bytes+1]; bytes+=2){}

3912 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
zEº
, 
byãs
));

3914  
TCL_OK
;

3915 
	}
}

3925 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e
(

3926 * 
˛õ¡D©a
,

3927 
T˛_I¡îp
 *
öãΩ
,

3928 
objc
,

3929 
T˛_Obj
 *
CONST
 
objv
[]

3931 
sqlôe3
 *
db
;

3932 c⁄° *
zSql
;

3933 
byãs
;

3934 c⁄° *
zTaû
 = 0;

3935 
sqlôe3_°mt
 *
pStmt
 = 0;

3936 
zBuf
[50];

3937 
rc
;

3939 if–
objc
!=5 && objc!=4 ){

3940 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3941 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

3942  
TCL_ERROR
;

3944 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

3945 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

3946 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

3948 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

3949 
	`T˛_Re£tResu…
(
öãΩ
);

3950 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

3951 if–
zTaû
 && 
objc
>=5 ){

3952 if–
byãs
>=0 ){

3953 
byãs
 = byã†- ()(
zTaû
-
zSql
);

3955 if–()
	`°æí
(
zTaû
)<
byãs
 ){

3956 
byãs
 = ()
	`°æí
(
zTaû
);

3958 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

3960 if–
rc
!=
SQLITE_OK
 ){

3961 
	`as£π
–
pStmt
==0 );

3962 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

3963 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

3964  
TCL_ERROR
;

3967 if–
pStmt
 ){

3968 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

3969 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

3971  
TCL_OK
;

3972 
	}
}

3982 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e_v2
(

3983 * 
˛õ¡D©a
,

3984 
T˛_I¡îp
 *
öãΩ
,

3985 
objc
,

3986 
T˛_Obj
 *
CONST
 
objv
[]

3988 
sqlôe3
 *
db
;

3989 c⁄° *
zSql
;

3990 *
zC›y
 = 0;

3991 
byãs
;

3992 c⁄° *
zTaû
 = 0;

3993 
sqlôe3_°mt
 *
pStmt
 = 0;

3994 
zBuf
[50];

3995 
rc
;

3997 if–
objc
!=5 && objc!=4 ){

3998 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

3999 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

4000  
TCL_ERROR
;

4002 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4003 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

4004 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4009 if–
byãs
>=0 ){

4010 
zC›y
 = 
	`mÆloc
(
byãs
);

4011 
	`mem˝y
(
zC›y
, 
zSql
, 
byãs
);

4013 
n
 = ()
	`°æí
(
zSql
) + 1;

4014 
zC›y
 = 
	`mÆloc
(
n
);

4015 
	`mem˝y
(
zC›y
, 
zSql
, 
n
);

4017 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zC›y
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4018 
	`‰ì
(
zC›y
);

4019 
zTaû
 = &
zSql
[(zTaû - 
zC›y
)];

4021 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

4022 
	`T˛_Re£tResu…
(
öãΩ
);

4023 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4024 if–
rc
==
SQLITE_OK
 && 
zTaû
 && 
objc
>=5 ){

4025 if–
byãs
>=0 ){

4026 
byãs
 = byã†- ()(
zTaû
-
zSql
);

4028 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

4030 if–
rc
!=
SQLITE_OK
 ){

4031 
	`as£π
–
pStmt
==0 );

4032 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

4033 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

4034  
TCL_ERROR
;

4037 if–
pStmt
 ){

4038 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4039 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4041  
TCL_OK
;

4042 
	}
}

4050 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e_tkt3134
(

4051 * 
˛õ¡D©a
,

4052 
T˛_I¡îp
 *
öãΩ
,

4053 
objc
,

4054 
T˛_Obj
 *
CONST
 
objv
[]

4056 
sqlôe3
 *
db
;

4057 c⁄° 
zSql
[] = "\000SELECT 1";

4058 
sqlôe3_°mt
 *
pStmt
 = 0;

4059 
zBuf
[50];

4060 
rc
;

4062 if–
objc
!=2 ){

4063 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4064 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

4065  
TCL_ERROR
;

4067 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4068 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, &
zSql
[1], 0, &
pStmt
, 0);

4069 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

4070 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4071 if–
rc
!=
SQLITE_OK
 ){

4072 
	`as£π
–
pStmt
==0 );

4073 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "(%dË", 
rc
);

4074 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

4075  
TCL_ERROR
;

4078 if–
pStmt
 ){

4079 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4080 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4082  
TCL_OK
;

4083 
	}
}

4093 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e16
(

4094 * 
˛õ¡D©a
,

4095 
T˛_I¡îp
 *
öãΩ
,

4096 
objc
,

4097 
T˛_Obj
 *
CONST
 
objv
[]

4099 #i‚de‡
SQLITE_OMIT_UTF16


4100 
sqlôe3
 *
db
;

4101 c⁄° *
zSql
;

4102 c⁄° *
zTaû
 = 0;

4103 
T˛_Obj
 *
pTaû
 = 0;

4104 
sqlôe3_°mt
 *
pStmt
 = 0;

4105 
zBuf
[50];

4106 
rc
;

4107 
byãs
;

4108 
objÀn
;

4110 if–
objc
!=5 && objc!=4 ){

4111 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4112 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

4113  
TCL_ERROR
;

4115 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4116 
zSql
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
objÀn
);

4117 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4119 
rc
 = 
	`sqlôe3_¥ï¨e16
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4120 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4121 if–
rc
 ){

4122  
TCL_ERROR
;

4125 if–
objc
>=5 ){

4126 if–
zTaû
 ){

4127 
objÀn
 = objÀ¿- ()((
u8
 *)
zTaû
-(u8 *)
zSql
);

4129 
objÀn
 = 0;

4131 
pTaû
 = 
	`T˛_NewByãAºayObj
((
u8
 *)
zTaû
, 
objÀn
);

4132 
	`T˛_In¸RefCou¡
(
pTaû
);

4133 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
pTaû
, 0);

4134 
	`T˛_De¸RefCou¡
(
pTaû
);

4137 if–
pStmt
 ){

4138 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4140 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4142  
TCL_OK
;

4143 
	}
}

4153 
SQLITE_TCLAPI
 
	$ã°_¥ï¨e16_v2
(

4154 * 
˛õ¡D©a
,

4155 
T˛_I¡îp
 *
öãΩ
,

4156 
objc
,

4157 
T˛_Obj
 *
CONST
 
objv
[]

4159 #i‚de‡
SQLITE_OMIT_UTF16


4160 
sqlôe3
 *
db
;

4161 c⁄° *
zSql
;

4162 c⁄° *
zTaû
 = 0;

4163 
T˛_Obj
 *
pTaû
 = 0;

4164 
sqlôe3_°mt
 *
pStmt
 = 0;

4165 
zBuf
[50];

4166 
rc
;

4167 
byãs
;

4168 
objÀn
;

4170 if–
objc
!=5 && objc!=4 ){

4171 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4172 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytes ?tailvar?", 0);

4173  
TCL_ERROR
;

4175 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

4176 
zSql
 = 
	`T˛_GëByãAºayFromObj
(
objv
[2], &
objÀn
);

4177 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

4179 
rc
 = 
	`sqlôe3_¥ï¨e16_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, 
objc
>=5 ? &
zTaû
 : 0);

4180 if–
	`sqlôe3Te°EºCode
(
öãΩ
, 
db
, 
rc
ËË 
TCL_ERROR
;

4181 if–
rc
 ){

4182  
TCL_ERROR
;

4185 if–
objc
>=5 ){

4186 if–
zTaû
 ){

4187 
objÀn
 = objÀ¿- ()((
u8
 *)
zTaû
-(u8 *)
zSql
);

4189 
objÀn
 = 0;

4191 
pTaû
 = 
	`T˛_NewByãAºayObj
((
u8
 *)
zTaû
, 
objÀn
);

4192 
	`T˛_In¸RefCou¡
(
pTaû
);

4193 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
pTaû
, 0);

4194 
	`T˛_De¸RefCou¡
(
pTaû
);

4197 if–
pStmt
 ){

4198 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

4200 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4202  
TCL_OK
;

4203 
	}
}

4208 
SQLITE_TCLAPI
 
	$ã°_›í
(

4209 * 
˛õ¡D©a
,

4210 
T˛_I¡îp
 *
öãΩ
,

4211 
objc
,

4212 
T˛_Obj
 *
CONST
 
objv
[]

4214 c⁄° *
zFûíame
;

4215 
sqlôe3
 *
db
;

4216 
zBuf
[100];

4218 if–
objc
!=3 && objc!=2 && objc!=1 ){

4219 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4220 
	`T˛_GëSåög
(
objv
[0]), " filename options-list", 0);

4221  
TCL_ERROR
;

4224 
zFûíame
 = 
objc
>1 ? 
	`T˛_GëSåög
(
objv
[1]) : 0;

4225 
	`sqlôe3_›í
(
zFûíame
, &
db
);

4227 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4228 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4229  
TCL_OK
;

4230 
	}
}

4235 
SQLITE_TCLAPI
 
	$ã°_›í_v2
(

4236 * 
˛õ¡D©a
,

4237 
T˛_I¡îp
 *
öãΩ
,

4238 
objc
,

4239 
T˛_Obj
 *
CONST
 
objv
[]

4241 c⁄° *
zFûíame
;

4242 c⁄° *
zVfs
;

4243 
Êags
 = 0;

4244 
sqlôe3
 *
db
;

4245 
rc
;

4246 
zBuf
[100];

4248 
nFœg
;

4249 
T˛_Obj
 **
≠Fœg
;

4250 
i
;

4252 if–
objc
!=4 ){

4253 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME FLAGS VFS");

4254  
TCL_ERROR
;

4256 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

4257 
zVfs
 = 
	`T˛_GëSåög
(
objv
[3]);

4258 if–
zVfs
[0]==0x00 ) zVfs = 0;

4260 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nFœg
, &
≠Fœg
);

4261 if–
rc
!=
TCL_OK
 ) Ñc;

4262 
i
=0; i<
nFœg
; i++){

4263 
iFœg
;

4264 
	sO≥nFœg
 {

4265 c⁄° *
zFœg
;

4266 
Êag
;

4267 } 
aFœg
[] = {

4268 { "SQLITE_OPEN_READONLY", 
SQLITE_OPEN_READONLY
 },

4269 { "SQLITE_OPEN_READWRITE", 
SQLITE_OPEN_READWRITE
 },

4270 { "SQLITE_OPEN_CREATE", 
SQLITE_OPEN_CREATE
 },

4271 { "SQLITE_OPEN_DELETEONCLOSE", 
SQLITE_OPEN_DELETEONCLOSE
 },

4272 { "SQLITE_OPEN_EXCLUSIVE", 
SQLITE_OPEN_EXCLUSIVE
 },

4273 { "SQLITE_OPEN_AUTOPROXY", 
SQLITE_OPEN_AUTOPROXY
 },

4274 { "SQLITE_OPEN_MAIN_DB", 
SQLITE_OPEN_MAIN_DB
 },

4275 { "SQLITE_OPEN_TEMP_DB", 
SQLITE_OPEN_TEMP_DB
 },

4276 { "SQLITE_OPEN_TRANSIENT_DB", 
SQLITE_OPEN_TRANSIENT_DB
 },

4277 { "SQLITE_OPEN_MAIN_JOURNAL", 
SQLITE_OPEN_MAIN_JOURNAL
 },

4278 { "SQLITE_OPEN_TEMP_JOURNAL", 
SQLITE_OPEN_TEMP_JOURNAL
 },

4279 { "SQLITE_OPEN_SUBJOURNAL", 
SQLITE_OPEN_SUBJOURNAL
 },

4280 { "SQLITE_OPEN_MASTER_JOURNAL", 
SQLITE_OPEN_MASTER_JOURNAL
 },

4281 { "SQLITE_OPEN_NOMUTEX", 
SQLITE_OPEN_NOMUTEX
 },

4282 { "SQLITE_OPEN_FULLMUTEX", 
SQLITE_OPEN_FULLMUTEX
 },

4283 { "SQLITE_OPEN_SHAREDCACHE", 
SQLITE_OPEN_SHAREDCACHE
 },

4284 { "SQLITE_OPEN_PRIVATECACHE", 
SQLITE_OPEN_PRIVATECACHE
 },

4285 { "SQLITE_OPEN_WAL", 
SQLITE_OPEN_WAL
 },

4286 { "SQLITE_OPEN_URI", 
SQLITE_OPEN_URI
 },

4289 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
≠Fœg
[
i
], 
aFœg
, (aFlag[0]),

4290 "Êag", 0, &
iFœg


4292 if–
rc
!=
TCL_OK
 ) Ñc;

4293 
Êags
 |
aFœg
[
iFœg
].
Êag
;

4296 
rc
 = 
	`sqlôe3_›í_v2
(
zFûíame
, &
db
, 
Êags
, 
zVfs
);

4297 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4298 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4299  
TCL_OK
;

4300 
	}
}

4305 
SQLITE_TCLAPI
 
	$ã°_›í16
(

4306 * 
˛õ¡D©a
,

4307 
T˛_I¡îp
 *
öãΩ
,

4308 
objc
,

4309 
T˛_Obj
 *
CONST
 
objv
[]

4311 #i‚de‡
SQLITE_OMIT_UTF16


4312 c⁄° *
zFûíame
;

4313 
sqlôe3
 *
db
;

4314 
zBuf
[100];

4316 if–
objc
!=3 ){

4317 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4318 
	`T˛_GëSåög
(
objv
[0]), " filename options-list", 0);

4319  
TCL_ERROR
;

4322 
zFûíame
 = 
	`T˛_GëByãAºayFromObj
(
objv
[1], 0);

4323 
	`sqlôe3_›í16
(
zFûíame
, &
db
);

4325 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

4326 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4328  
TCL_OK
;

4329 
	}
}

4337 
SQLITE_TCLAPI
 
	$ã°_com∂ëe16
(

4338 * 
˛õ¡D©a
,

4339 
T˛_I¡îp
 *
öãΩ
,

4340 
objc
,

4341 
T˛_Obj
 *
CONST
 
objv
[]

4343 #i‡!
	`deföed
(
SQLITE_OMIT_COMPLETE
Ë&& !deföed(
SQLITE_OMIT_UTF16
)

4344 *
zBuf
;

4346 if–
objc
!=2 ){

4347 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "<utf-16 sql>");

4348  
TCL_ERROR
;

4351 
zBuf
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[1], 0);

4352 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_com∂ëe16
(
zBuf
)));

4354  
TCL_OK
;

4355 
	}
}

4362 
SQLITE_TCLAPI
 
	$ã°_°ï
(

4363 * 
˛õ¡D©a
,

4364 
T˛_I¡îp
 *
öãΩ
,

4365 
objc
,

4366 
T˛_Obj
 *
CONST
 
objv
[]

4368 
sqlôe3_°mt
 *
pStmt
;

4369 
rc
;

4371 if–
objc
!=2 ){

4372 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4373 
	`T˛_GëSåög
(
objv
[0]), " STMT", 0);

4374  
TCL_ERROR
;

4377 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4378 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

4381 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

4382  
TCL_OK
;

4383 
	}
}

4385 
SQLITE_TCLAPI
 
	$ã°_sql
(

4386 * 
˛õ¡D©a
,

4387 
T˛_I¡îp
 *
öãΩ
,

4388 
objc
,

4389 
T˛_Obj
 *
CONST
 
objv
[]

4391 
sqlôe3_°mt
 *
pStmt
;

4393 if–
objc
!=2 ){

4394 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

4395  
TCL_ERROR
;

4398 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4399 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_sql
(
pStmt
), 
TCL_VOLATILE
);

4400  
TCL_OK
;

4401 
	}
}

4402 
SQLITE_TCLAPI
 
	$ã°_ex_sql
(

4403 * 
˛õ¡D©a
,

4404 
T˛_I¡îp
 *
öãΩ
,

4405 
objc
,

4406 
T˛_Obj
 *
CONST
 
objv
[]

4408 
sqlôe3_°mt
 *
pStmt
;

4409 *
z
;

4411 if–
objc
!=2 ){

4412 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

4413  
TCL_ERROR
;

4416 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4417 
z
 = 
	`sqlôe3_ex∑nded_sql
(
pStmt
);

4418 
	`T˛_SëResu…
(
öãΩ
, 
z
, 
TCL_VOLATILE
);

4419 
	`sqlôe3_‰ì
(
z
);

4420  
TCL_OK
;

4421 
	}
}

4428 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_cou¡
(

4429 * 
˛õ¡D©a
,

4430 
T˛_I¡îp
 *
öãΩ
,

4431 
objc
,

4432 
T˛_Obj
 *
CONST
 
objv
[]

4434 
sqlôe3_°mt
 *
pStmt
;

4436 if–
objc
!=2 ){

4437 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4438 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4439  
TCL_ERROR
;

4442 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4444 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)));

4445  
TCL_OK
;

4446 
	}
}

4453 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_ty≥
(

4454 * 
˛õ¡D©a
,

4455 
T˛_I¡îp
 *
öãΩ
,

4456 
objc
,

4457 
T˛_Obj
 *
CONST
 
objv
[]

4459 
sqlôe3_°mt
 *
pStmt
;

4460 
cﬁ
;

4461 
ç
;

4463 if–
objc
!=3 ){

4464 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4465 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4466  
TCL_ERROR
;

4469 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4470 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4472 
ç
 = 
	`sqlôe3_cﬁumn_ty≥
(
pStmt
, 
cﬁ
);

4473  
ç
 ){

4474 
SQLITE_INTEGER
:

4475 
	`T˛_SëResu…
(
öãΩ
, "INTEGER", 
TCL_STATIC
);

4477 
SQLITE_NULL
:

4478 
	`T˛_SëResu…
(
öãΩ
, "NULL", 
TCL_STATIC
);

4480 
SQLITE_FLOAT
:

4481 
	`T˛_SëResu…
(
öãΩ
, "FLOAT", 
TCL_STATIC
);

4483 
SQLITE_TEXT
:

4484 
	`T˛_SëResu…
(
öãΩ
, "TEXT", 
TCL_STATIC
);

4486 
SQLITE_BLOB
:

4487 
	`T˛_SëResu…
(
öãΩ
, "BLOB", 
TCL_STATIC
);

4490 
	`as£π
(0);

4493  
TCL_OK
;

4494 
	}
}

4502 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_öt64
(

4503 * 
˛õ¡D©a
,

4504 
T˛_I¡îp
 *
öãΩ
,

4505 
objc
,

4506 
T˛_Obj
 *
CONST
 
objv
[]

4508 
sqlôe3_°mt
 *
pStmt
;

4509 
cﬁ
;

4510 
i64
 
iVÆ
;

4512 if–
objc
!=3 ){

4513 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4514 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4515  
TCL_ERROR
;

4518 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4519 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4521 
iVÆ
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 
cﬁ
);

4522 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
iVÆ
));

4523  
TCL_OK
;

4524 
	}
}

4529 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_blob
(

4530 * 
˛õ¡D©a
,

4531 
T˛_I¡îp
 *
öãΩ
,

4532 
objc
,

4533 
T˛_Obj
 *
CONST
 
objv
[]

4535 
sqlôe3_°mt
 *
pStmt
;

4536 
cﬁ
;

4538 
Àn
;

4539 c⁄° *
pBlob
;

4541 if–
objc
!=3 ){

4542 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4543 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4544  
TCL_ERROR
;

4547 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4548 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4550 
Àn
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 
cﬁ
);

4551 
pBlob
 = 
	`sqlôe3_cﬁumn_blob
(
pStmt
, 
cﬁ
);

4552 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
pBlob
, 
Àn
));

4553  
TCL_OK
;

4554 
	}
}

4561 
SQLITE_TCLAPI
 
	$ã°_cﬁumn_doubÀ
(

4562 * 
˛õ¡D©a
,

4563 
T˛_I¡îp
 *
öãΩ
,

4564 
objc
,

4565 
T˛_Obj
 *
CONST
 
objv
[]

4567 
sqlôe3_°mt
 *
pStmt
;

4568 
cﬁ
;

4569 
rVÆ
;

4571 if–
objc
!=3 ){

4572 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4573 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4574  
TCL_ERROR
;

4577 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4578 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4580 
rVÆ
 = 
	`sqlôe3_cﬁumn_doubÀ
(
pStmt
, 
cﬁ
);

4581 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewDoubÀObj
(
rVÆ
));

4582  
TCL_OK
;

4583 
	}
}

4590 
SQLITE_TCLAPI
 
	$ã°_d©a_cou¡
(

4591 * 
˛õ¡D©a
,

4592 
T˛_I¡îp
 *
öãΩ
,

4593 
objc
,

4594 
T˛_Obj
 *
CONST
 
objv
[]

4596 
sqlôe3_°mt
 *
pStmt
;

4598 if–
objc
!=2 ){

4599 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4600 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4601  
TCL_ERROR
;

4604 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4606 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_d©a_cou¡
(
pStmt
)));

4607  
TCL_OK
;

4608 
	}
}

4617 
SQLITE_TCLAPI
 
	$ã°_°mt_utf8
(

4618 * 
˛õ¡D©a
,

4619 
T˛_I¡îp
 *
öãΩ
,

4620 
objc
,

4621 
T˛_Obj
 *
CONST
 
objv
[]

4623 
sqlôe3_°mt
 *
pStmt
;

4624 
cﬁ
;

4625 c⁄° *(*
xFunc
)(
sqlôe3_°mt
*, );

4626 c⁄° *
zRë
;

4628 
xFunc
 = (c⁄° *(*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4629 if–
objc
!=3 ){

4630 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4631 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4632  
TCL_ERROR
;

4635 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4636 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4637 
zRë
 = 
	`xFunc
(
pStmt
, 
cﬁ
);

4638 if–
zRë
 ){

4639 
	`T˛_SëResu…
(
öãΩ
, (*)
zRë
, 0);

4641  
TCL_OK
;

4642 
	}
}

4644 
SQLITE_TCLAPI
 
	$ã°_globÆ_ªcovî
(

4645 * 
˛õ¡D©a
,

4646 
T˛_I¡îp
 *
öãΩ
,

4647 
objc
,

4648 
T˛_Obj
 *
CONST
 
objv
[]

4650 #i‚de‡
SQLITE_OMIT_DEPRECATED


4651 
rc
;

4652 if–
objc
!=1 ){

4653 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

4654  
TCL_ERROR
;

4656 
rc
 = 
	`sqlôe3_globÆ_ªcovî
();

4657 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

4659  
TCL_OK
;

4660 
	}
}

4669 
SQLITE_TCLAPI
 
	$ã°_°mt_utf16
(

4670 * 
˛õ¡D©a
,

4671 
T˛_I¡îp
 *
öãΩ
,

4672 
objc
,

4673 
T˛_Obj
 *
CONST
 
objv
[]

4675 #i‚de‡
SQLITE_OMIT_UTF16


4676 
sqlôe3_°mt
 *
pStmt
;

4677 
cﬁ
;

4678 
T˛_Obj
 *
pRë
;

4679 c⁄° *
zName16
;

4680 c⁄° *(*
xFunc
)(
sqlôe3_°mt
*, );

4682 
xFunc
 = (c⁄° *(*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4683 if–
objc
!=3 ){

4684 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4685 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4686  
TCL_ERROR
;

4689 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4690 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4692 
zName16
 = 
	`xFunc
(
pStmt
, 
cﬁ
);

4693 if–
zName16
 ){

4694 
n
;

4695 c⁄° *
z
 = 
zName16
;

4696 
n
=0; 
z
[n] || z[n+1];Ç+=2){}

4697 
pRë
 = 
	`T˛_NewByãAºayObj
(
zName16
, 
n
+2);

4698 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

4702  
TCL_OK
;

4703 
	}
}

4713 
SQLITE_TCLAPI
 
	$ã°_°mt_öt
(

4714 * 
˛õ¡D©a
,

4715 
T˛_I¡îp
 *
öãΩ
,

4716 
objc
,

4717 
T˛_Obj
 *
CONST
 
objv
[]

4719 
sqlôe3_°mt
 *
pStmt
;

4720 
cﬁ
;

4721 (*
xFunc
)(
sqlôe3_°mt
*, );

4723 
xFunc
 = ((*)(
sqlôe3_°mt
*, ))
˛õ¡D©a
;

4724 if–
objc
!=3 ){

4725 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

4726 
	`T˛_GëSåög
(
objv
[0]), " STMT column", 0);

4727  
TCL_ERROR
;

4730 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

4731 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
cﬁ
ËË 
TCL_ERROR
;

4733 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`xFunc
(
pStmt
, 
cﬁ
)));

4734  
TCL_OK
;

4735 
	}
}

4742 
SQLITE_TCLAPI
 
	$sqlôe_£t_magic
(

4743 * 
˛õ¡D©a
,

4744 
T˛_I¡îp
 *
öãΩ
,

4745 
¨gc
,

4746 **
¨gv


4748 
sqlôe3
 *
db
;

4749 if–
¨gc
!=3 ){

4750 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4752  
TCL_ERROR
;

4754 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4755 if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_OPEN")==0 ){

4756 
db
->
magic
 = 
SQLITE_MAGIC_OPEN
;

4757 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_CLOSED")==0 ){

4758 
db
->
magic
 = 
SQLITE_MAGIC_CLOSED
;

4759 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_BUSY")==0 ){

4760 
db
->
magic
 = 
SQLITE_MAGIC_BUSY
;

4761 }if–
	`°rcmp
(
¨gv
[2], "SQLITE_MAGIC_ERROR")==0 ){

4762 
db
->
magic
 = 
SQLITE_MAGIC_ERROR
;

4763 }if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], (*)&
db
->
magic
) ){

4764  
TCL_ERROR
;

4766  
TCL_OK
;

4767 
	}
}

4774 
SQLITE_TCLAPI
 
	$ã°_öãºu±
(

4775 * 
˛õ¡D©a
,

4776 
T˛_I¡îp
 *
öãΩ
,

4777 
¨gc
,

4778 **
¨gv


4780 
sqlôe3
 *
db
;

4781 if–
¨gc
!=2 ){

4782 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " DB", 0);

4783  
TCL_ERROR
;

4785 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4786 
	`sqlôe3_öãºu±
(
db
);

4787  
TCL_OK
;

4788 
	}
}

4790 
u8
 *
	gsqlôe3_°ack_ba£löe
 = 0;

4795 
	$¥ïSèck
(){

4796 
i
;

4797 
u32
 
bigBuf
[65536];

4798 
i
=0; i<(
bigBuf
)/(bigBuf[0]); i++) bigBuf[i] = 0xdeadbeef;

4799 
sqlôe3_°ack_ba£löe
 = (
u8
*)&
bigBuf
[65536];

4800 
	}
}

4805 
u64
 
	$sqlôe3SèckDïth
(){

4806 
u8
 
x
;

4807  (
u64
)(
sqlôe3_°ack_ba£löe
 - &
x
);

4808 
	}
}

4815 
SQLITE_TCLAPI
 
	$ã°_°ack_u£d
(

4816 * 
˛õ¡D©a
,

4817 
T˛_I¡îp
 *
öãΩ
,

4818 
¨gc
,

4819 **
¨gv


4821 
sqlôe3
 *
db
;

4822 
i
;

4823 if–
¨gc
!=3 ){

4824 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4826  
TCL_ERROR
;

4828 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4829 
	`¥ïSèck
();

4830 ()
	`sqlôe3_exec
(
db
, 
¨gv
[2], 0, 0, 0);

4831 
i
=65535; i>=0 && ((
u32
*)
sqlôe3_°ack_ba£löe
)[-i]==0xdeadbeef; i--){}

4832 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
i
*4));

4833  
TCL_OK
;

4834 
	}
}

4843 
SQLITE_TCLAPI
 
	$dñëe_fun˘i⁄
(

4844 * 
˛õ¡D©a
,

4845 
T˛_I¡îp
 *
öãΩ
,

4846 
¨gc
,

4847 **
¨gv


4849 
rc
;

4850 
sqlôe3
 *
db
;

4851 if–
¨gc
!=3 ){

4852 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4854  
TCL_ERROR
;

4856 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4857 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
¨gv
[2], -1, 
SQLITE_UTF8
, 0, 0, 0, 0);

4858 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

4859  
TCL_OK
;

4860 
	}
}

4869 
SQLITE_TCLAPI
 
	$dñëe_cﬁœti⁄
(

4870 * 
˛õ¡D©a
,

4871 
T˛_I¡îp
 *
öãΩ
,

4872 
¨gc
,

4873 **
¨gv


4875 
rc
;

4876 
sqlôe3
 *
db
;

4877 if–
¨gc
!=3 ){

4878 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4880  
TCL_ERROR
;

4882 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4883 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, 
¨gv
[2], 
SQLITE_UTF8
, 0, 0);

4884 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

4885  
TCL_OK
;

4886 
	}
}

4894 
SQLITE_TCLAPI
 
	$gë_autocommô
(

4895 * 
˛õ¡D©a
,

4896 
T˛_I¡îp
 *
öãΩ
,

4897 
¨gc
,

4898 **
¨gv


4900 
zBuf
[30];

4901 
sqlôe3
 *
db
;

4902 if–
¨gc
!=2 ){

4903 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4905  
TCL_ERROR
;

4907 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4908 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
	`sqlôe3_gë_autocommô
(
db
));

4909 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

4910  
TCL_OK
;

4911 
	}
}

4920 
SQLITE_TCLAPI
 
	$ã°_busy_timeout
(

4921 * 
˛õ¡D©a
,

4922 
T˛_I¡îp
 *
öãΩ
,

4923 
¨gc
,

4924 **
¨gv


4926 
rc
, 
ms
;

4927 
sqlôe3
 *
db
;

4928 if–
¨gc
!=3 ){

4929 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

4931  
TCL_ERROR
;

4933 if–
	`gëDbPoöãr
(
öãΩ
, 
¨gv
[1], &
db
ËË 
TCL_ERROR
;

4934 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
ms
ËË 
TCL_ERROR
;

4935 
rc
 = 
	`sqlôe3_busy_timeout
(
db
, 
ms
);

4936 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

4937  
TCL_OK
;

4938 
	}
}

4946 
SQLITE_TCLAPI
 
	$t˛_v¨übÀ_ty≥
(

4947 * 
˛õ¡D©a
,

4948 
T˛_I¡îp
 *
öãΩ
,

4949 
objc
,

4950 
T˛_Obj
 *
CONST
 
objv
[]

4952 
T˛_Obj
 *
pV¨
;

4953 if–
objc
!=2 ){

4954 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VARIABLE");

4955  
TCL_ERROR
;

4957 
pV¨
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), 0, 
TCL_LEAVE_ERR_MSG
);

4958 if–
pV¨
==0 )  
TCL_ERROR
;

4959 if–
pV¨
->
ty≥På
 ){

4960 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pV¨
->
ty≥På
->
«me
, -1));

4962  
TCL_OK
;

4963 
	}
}

4972 
SQLITE_TCLAPI
 
	$ã°_ªÀa£_mem‹y
(

4973 * 
˛õ¡D©a
,

4974 
T˛_I¡îp
 *
öãΩ
,

4975 
objc
,

4976 
T˛_Obj
 *
CONST
 
objv
[]

4978 #i‡
	`deföed
(
SQLITE_ENABLE_MEMORY_MANAGEMENT
Ë&& !deföed(
SQLITE_OMIT_DISKIO
)

4979 
N
;

4980 
amt
;

4981 if–
objc
!=1 && objc!=2 ){

4982 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?N?");

4983  
TCL_ERROR
;

4985 if–
objc
==2 ){

4986 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
N
ËË 
TCL_ERROR
;

4988 
N
 = -1;

4990 
amt
 = 
	`sqlôe3_ªÀa£_mem‹y
(
N
);

4991 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
amt
));

4993  
TCL_OK
;

4994 
	}
}

5003 
SQLITE_TCLAPI
 
	$ã°_db_ªÀa£_mem‹y
(

5004 * 
˛õ¡D©a
,

5005 
T˛_I¡îp
 *
öãΩ
,

5006 
objc
,

5007 
T˛_Obj
 *
CONST
 
objv
[]

5009 
sqlôe3
 *
db
;

5010 
rc
;

5011 if–
objc
!=2 ){

5012 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5013  
TCL_ERROR
;

5015 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5016 
rc
 = 
	`sqlôe3_db_ªÀa£_mem‹y
(
db
);

5017 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5018  
TCL_OK
;

5019 
	}
}

5026 
SQLITE_TCLAPI
 
	$ã°_db_ˇcheÊush
(

5027 * 
˛õ¡D©a
,

5028 
T˛_I¡îp
 *
öãΩ
,

5029 
objc
,

5030 
T˛_Obj
 *
CONST
 
objv
[]

5032 
sqlôe3
 *
db
;

5033 
rc
;

5034 if–
objc
!=2 ){

5035 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5036  
TCL_ERROR
;

5038 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5039 
rc
 = 
	`sqlôe3_db_ˇcheÊush
(
db
);

5040 if–
rc
 ){

5041 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºSå
(
rc
), 
TCL_STATIC
);

5042  
TCL_ERROR
;

5045 
	`T˛_Re£tResu…
(
öãΩ
);

5046  
TCL_OK
;

5047 
	}
}

5054 
SQLITE_TCLAPI
 
	$ã°_sy°em_î∫o
(

5055 * 
˛õ¡D©a
,

5056 
T˛_I¡îp
 *
öãΩ
,

5057 
objc
,

5058 
T˛_Obj
 *
CONST
 
objv
[]

5060 
sqlôe3
 *
db
;

5061 
iEºno
;

5062 if–
objc
!=2 ){

5063 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

5064  
TCL_ERROR
;

5066 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5067 
iEºno
 = 
	`sqlôe3_sy°em_î∫o
(
db
);

5068 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iEºno
));

5069  
TCL_OK
;

5070 
	}
}

5077 
SQLITE_TCLAPI
 
	$ã°_db_fûíame
(

5078 * 
˛õ¡D©a
,

5079 
T˛_I¡îp
 *
öãΩ
,

5080 
objc
,

5081 
T˛_Obj
 *
CONST
 
objv
[]

5083 
sqlôe3
 *
db
;

5084 c⁄° *
zDbName
;

5085 if–
objc
!=3 ){

5086 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

5087  
TCL_ERROR
;

5089 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5090 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5091 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3_db_fûíame
(
db
, 
zDbName
), (*)0);

5092  
TCL_OK
;

5093 
	}
}

5101 
SQLITE_TCLAPI
 
	$ã°_db_ªad⁄ly
(

5102 * 
˛õ¡D©a
,

5103 
T˛_I¡îp
 *
öãΩ
,

5104 
objc
,

5105 
T˛_Obj
 *
CONST
 
objv
[]

5107 
sqlôe3
 *
db
;

5108 c⁄° *
zDbName
;

5109 if–
objc
!=3 ){

5110 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME");

5111  
TCL_ERROR
;

5113 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5114 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5115 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_db_ªad⁄ly
(
db
, 
zDbName
)));

5116  
TCL_OK
;

5117 
	}
}

5126 
SQLITE_TCLAPI
 
	$ã°_so·_hóp_limô
(

5127 * 
˛õ¡D©a
,

5128 
T˛_I¡îp
 *
öãΩ
,

5129 
objc
,

5130 
T˛_Obj
 *
CONST
 
objv
[]

5132 
sqlôe3_öt64
 
amt
;

5133 
T˛_WideI¡
 
N
 = -1;

5134 if–
objc
!=1 && objc!=2 ){

5135 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?N?");

5136  
TCL_ERROR
;

5138 if–
objc
==2 ){

5139 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[1], &
N
ËË 
TCL_ERROR
;

5141 
amt
 = 
	`sqlôe3_so·_hóp_limô64
(
N
);

5142 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
amt
));

5143  
TCL_OK
;

5144 
	}
}

5151 
SQLITE_TCLAPI
 
	$ã°_thªad_˛ónup
(

5152 * 
˛õ¡D©a
,

5153 
T˛_I¡îp
 *
öãΩ
,

5154 
objc
,

5155 
T˛_Obj
 *
CONST
 
objv
[]

5157 #i‚de‡
SQLITE_OMIT_DEPRECATED


5158 
	`sqlôe3_thªad_˛ónup
();

5160  
TCL_OK
;

5161 
	}
}

5169 
SQLITE_TCLAPI
 
	$ã°_∑gî_ªfcou¡s
(

5170 * 
˛õ¡D©a
,

5171 
T˛_I¡îp
 *
öãΩ
,

5172 
objc
,

5173 
T˛_Obj
 *
CONST
 
objv
[]

5175 
sqlôe3
 *
db
;

5176 
i
;

5177 
v
, *
a
;

5178 
T˛_Obj
 *
pResu…
;

5180 if–
objc
!=2 ){

5181 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5182 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5183  
TCL_ERROR
;

5185 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5186 
pResu…
 = 
	`T˛_NewObj
();

5187 
i
=0; i<
db
->
nDb
; i++){

5188 if–
db
->
aDb
[
i
].
pBt
==0 ){

5189 
v
 = -1;

5191 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

5192 
a
 = 
	`sqlôe3PagîSèts
(
	`sqlôe3BåìPagî
(
db
->
aDb
[
i
].
pBt
));

5193 
v
 = 
a
[0];

5194 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

5196 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
v
));

5198 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

5199  
TCL_OK
;

5200 
	}
}

5215 
SQLITE_TCLAPI
 
	$w‹kög_64bô_öt
(

5216 
Clõ¡D©a
 
˛õ¡D©a
,

5217 
T˛_I¡îp
 *
öãΩ
,

5218 
objc
,

5219 
T˛_Obj
 *
CONST
 
objv
[]

5221 
T˛_Obj
 *
pTe°Obj
;

5222 
w‹kög
 = 0;

5224 
pTe°Obj
 = 
	`T˛_NewWideI¡Obj
(1000000*(
i64
)1234567890);

5225 
w‹kög
 = 
	`°rcmp
(
	`T˛_GëSåög
(
pTe°Obj
), "1234567890000000")==0;

5226 
	`T˛_De¸RefCou¡
(
pTe°Obj
);

5227 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
w‹kög
));

5228  
TCL_OK
;

5229 
	}
}

5240 
SQLITE_TCLAPI
 
	$vfs_u∆ök_ã°
(

5241 
Clõ¡D©a
 
˛õ¡D©a
,

5242 
T˛_I¡îp
 *
öãΩ
,

5243 
objc
,

5244 
T˛_Obj
 *
CONST
 
objv
[]

5246 
i
;

5247 
sqlôe3_vfs
 *
pMaö
;

5248 
sqlôe3_vfs
 *
≠Vfs
[20];

5249 
sqlôe3_vfs
 
⁄e
, 
two
;

5251 
	`sqlôe3_vfs_uƒegi°î
(0);

5252 
⁄e
.
zName
 = "__one";

5253 
two
.
zName
 = "__two";

5258 
pMaö
 = 
	`sqlôe3_vfs_föd
(0);

5259 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 0);

5260 
	`as£π
–
pMaö
==0 ||ÖMaö==
	`sqlôe3_vfs_föd
(0) );

5261 
	`sqlôe3_vfs_ªgi°î
(&
two
, 0);

5262 
	`as£π
–
pMaö
==0 ||ÖMaö==
	`sqlôe3_vfs_föd
(0) );

5265 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5266 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5272 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 1);

5273 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5274 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5275 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==&
⁄e
 );

5276 
	`sqlôe3_vfs_ªgi°î
(&
two
, 1);

5277 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5278 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5279 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==&
two
 );

5280 if–
pMaö
 ){

5281 
	`sqlôe3_vfs_ªgi°î
(
pMaö
, 1);

5282 
	`as£π
–
	`sqlôe3_vfs_föd
("__⁄e")==&
⁄e
 );

5283 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==&
two
 );

5284 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5290 
i
=0; i<(
≠Vfs
)/(apVfs[0]); i++){

5291 
≠Vfs
[
i
] = 
	`sqlôe3_vfs_föd
(0);

5292 if–
≠Vfs
[
i
] ){

5293 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
◊pVfs[i]->
zName
) );

5294 
	`sqlôe3_vfs_uƒegi°î
(
≠Vfs
[
i
]);

5295 
	`as£π
–0==
	`sqlôe3_vfs_föd
(
≠Vfs
[
i
]->
zName
) );

5298 
	`as£π
–0==
	`sqlôe3_vfs_föd
(0) );

5303 
	`sqlôe3_vfs_ªgi°î
(
pMaö
, 0);

5304 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5307 
	`sqlôe3_vfs_uƒegi°î
(
pMaö
);

5308 
	`as£π
–0==
	`sqlôe3_vfs_föd
(0) );

5311 
i
=(
≠Vfs
)/(apVfs[0])-1; i>=0; i--){

5312 if–
≠Vfs
[
i
] ){

5313 
	`sqlôe3_vfs_ªgi°î
(
≠Vfs
[
i
], 1);

5314 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
(0) );

5315 
	`as£π
–
≠Vfs
[
i
]==
	`sqlôe3_vfs_föd
◊pVfs[i]->
zName
) );

5320 
	`sqlôe3_vfs_uƒegi°î
(&
⁄e
);

5321 
	`sqlôe3_vfs_uƒegi°î
(&
two
);

5324 
	`sqlôe3_vfs_uƒegi°î
(&
⁄e
);

5325 
	`sqlôe3_vfs_uƒegi°î
(&
two
);

5326 
	`as£π
–
	`sqlôe3_vfs_föd
("__one")==0 );

5327 
	`as£π
–
	`sqlôe3_vfs_föd
("__two")==0 );

5331 
	`as£π
–
	`sqlôe3_vfs_föd
(0)==
pMaö
 );

5333  
TCL_OK
;

5334 
	}
}

5342 
SQLITE_TCLAPI
 
	$vfs_öôÁû_ã°
(

5343 
Clõ¡D©a
 
˛õ¡D©a
,

5344 
T˛_I¡îp
 *
öãΩ
,

5345 
objc
,

5346 
T˛_Obj
 *
CONST
 
objv
[]

5348 
sqlôe3_vfs
 
⁄e
;

5349 
⁄e
.
zName
 = "__one";

5351 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5352 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 0);

5353 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5354 
	`sqlôe3_vfs_ªgi°î
(&
⁄e
, 1);

5355 if–
	`sqlôe3_vfs_föd
(0ËË 
TCL_ERROR
;

5356  
TCL_OK
;

5357 
	}
}

5362 
sqlôe3_vfs
 *
	g≠Vfs
[20];

5363 
	gnVfs
 = 0;

5370 
SQLITE_TCLAPI
 
	$vfs_uƒegi°î_Æl
(

5371 
Clõ¡D©a
 
˛õ¡D©a
,

5372 
T˛_I¡îp
 *
öãΩ
,

5373 
objc
,

5374 
T˛_Obj
 *
CONST
 
objv
[]

5376 
i
;

5377 
i
=0; i<
	`AºaySize
(
≠Vfs
); i++){

5378 
≠Vfs
[
i
] = 
	`sqlôe3_vfs_föd
(0);

5379 if–
≠Vfs
[
i
]==0 ) ;

5380 
	`sqlôe3_vfs_uƒegi°î
(
≠Vfs
[
i
]);

5382 
nVfs
 = 
i
;

5383  
TCL_OK
;

5384 
	}
}

5392 
SQLITE_TCLAPI
 
	$vfs_ªªgi°î_Æl
(

5393 
Clõ¡D©a
 
˛õ¡D©a
,

5394 
T˛_I¡îp
 *
öãΩ
,

5395 
objc
,

5396 
T˛_Obj
 *
CONST
 
objv
[]

5398 
i
;

5399 
i
=
nVfs
-1; i>=0; i--){

5400 
	`sqlôe3_vfs_ªgi°î
(
≠Vfs
[
i
], 1);

5402  
TCL_OK
;

5403 
	}
}

5412 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_ã°
(

5413 
Clõ¡D©a
 
˛õ¡D©a
,

5414 
T˛_I¡îp
 *
öãΩ
,

5415 
objc
,

5416 
T˛_Obj
 *
CONST
 
objv
[]

5418 
iArg
 = 0;

5419 
sqlôe3
 *
db
;

5420 
rc
;

5422 if–
objc
!=2 ){

5423 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5424 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5425  
TCL_ERROR
;

5427 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5428 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 0, 0, &
iArg
);

5429 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 );

5430 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "nŸad©aba£", 
SQLITE_FCNTL_LOCKSTATE
, &
iArg
);

5431 
	`as£π
–
rc
==
SQLITE_ERROR
 );

5432 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "maö", -1, &
iArg
);

5433 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 );

5434 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "ãmp", -1, &
iArg
);

5435 
	`as£π
–
rc
==
SQLITE_NOTFOUND
 ||Ñc==
SQLITE_ERROR
 );

5437  
TCL_OK
;

5438 
	}
}

5447 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_œ°î∫o_ã°
(

5448 
Clõ¡D©a
 
˛õ¡D©a
,

5449 
T˛_I¡îp
 *
öãΩ
,

5450 
objc
,

5451 
T˛_Obj
 *
CONST
 
objv
[]

5453 
iArg
 = 0;

5454 
sqlôe3
 *
db
;

5455 
rc
;

5457 if–
objc
!=2 ){

5458 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5459 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB", 0);

5460  
TCL_ERROR
;

5462 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5463  
TCL_ERROR
;

5465 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_LAST_ERRNO
, &
iArg
);

5466 if–
rc
 ){

5467 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5468  
TCL_ERROR
;

5470 if–
iArg
!=0 ) {

5471 
	`T˛_AµídResu…
(
öãΩ
, "UnexpectedÇon-zeroÉrrno: ",

5472 
	`T˛_GëSåögFromObj
(
	`T˛_NewI¡Obj
(
iArg
), 0), " ", 0);

5473  
TCL_ERROR
;

5475  
TCL_OK
;

5476 
	}
}

5485 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_chunksize_ã°
(

5486 
Clõ¡D©a
 
˛õ¡D©a
,

5487 
T˛_I¡îp
 *
öãΩ
,

5488 
objc
,

5489 
T˛_Obj
 *
CONST
 
objv
[]

5491 
nSize
;

5492 *
zDb
;

5493 
sqlôe3
 *
db
;

5494 
rc
;

5496 if–
objc
!=4 ){

5497 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SIZE");

5498  
TCL_ERROR
;

5500 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

5501 || 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nSize
)

5503  
TCL_ERROR
;

5505 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

5506 if–
zDb
[0]=='\0' ) zDb = 
NULL
;

5508 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_CHUNK_SIZE
, (*)&
nSize
);

5509 if–
rc
 ){

5510 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

5511  
TCL_ERROR
;

5513  
TCL_OK
;

5514 
	}
}

5522 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_sizehöt_ã°
(

5523 
Clõ¡D©a
 
˛õ¡D©a
,

5524 
T˛_I¡îp
 *
öãΩ
,

5525 
objc
,

5526 
T˛_Obj
 *
CONST
 
objv
[]

5528 
T˛_WideI¡
 
nSize
;

5529 *
zDb
;

5530 
sqlôe3
 *
db
;

5531 
rc
;

5533 if–
objc
!=4 ){

5534 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB DBNAME SIZE");

5535  
TCL_ERROR
;

5537 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

5538 || 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[3], &
nSize
)

5540  
TCL_ERROR
;

5542 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

5543 if–
zDb
[0]=='\0' ) zDb = 
NULL
;

5545 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDb
, 
SQLITE_FCNTL_SIZE_HINT
, (*)&
nSize
);

5546 if–
rc
 ){

5547 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

5548  
TCL_ERROR
;

5550  
TCL_OK
;

5551 
	}
}

5560 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_lock¥oxy_ã°
(

5561 
Clõ¡D©a
 
˛õ¡D©a
,

5562 
T˛_I¡îp
 *
öãΩ
,

5563 
objc
,

5564 
T˛_Obj
 *
CONST
 
objv
[]

5566 
sqlôe3
 *
db
;

5568 if–
objc
!=3 ){

5569 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5570 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB PWD", 0);

5571  
TCL_ERROR
;

5573 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5574  
TCL_ERROR
;

5577 #i‡!
	`deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

5578 #i‡
	`deföed
(
__APPLE__
)

5579 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

5581 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

5584 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

5586 *
ã°P©h
;

5587 
rc
;

5588 
nPwd
;

5589 c⁄° *
zPwd
;

5590 
¥oxyP©h
[400];

5592 
zPwd
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nPwd
);

5593 if–(
¥oxyP©h
)<
nPwd
+20 ){

5594 
	`T˛_AµídResu…
(
öãΩ
, "PWDÅoo big", (*)0);

5595  
TCL_ERROR
;

5597 
	`sqlôe3_¢¥ötf
((
¥oxyP©h
),ÖroxyP©h, "%s/ã°.¥oxy", 
zPwd
);

5598 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_SET_LOCKPROXYFILE
, 
¥oxyP©h
);

5599 if–
rc
 ){

5600 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5601  
TCL_ERROR
;

5603 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_GET_LOCKPROXYFILE
, &
ã°P©h
);

5604 if–
	`°∫cmp
(
¥oxyP©h
,
ã°P©h
,11) ){

5605 
	`T˛_AµídResu…
(
öãΩ
, "LockÖroxy file didÇot matchÅhe "

5607  
TCL_ERROR
;

5609 if–
rc
 ){

5610 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5611  
TCL_ERROR
;

5613 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_SET_LOCKPROXYFILE
, 
¥oxyP©h
);

5614 if–
rc
 ){

5615 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5616  
TCL_ERROR
;

5620  
TCL_OK
;

5621 
	}
}

5623 #i‡
SQLITE_OS_WIN


5630 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_wö32_av_ªåy
(

5631 
Clõ¡D©a
 
˛õ¡D©a
,

5632 
T˛_I¡îp
 *
öãΩ
,

5633 
objc
,

5634 
T˛_Obj
 *
CONST
 
objv
[]

5636 
sqlôe3
 *
db
;

5637 
rc
;

5638 
a
[2];

5639 
z
[100];

5641 if–
objc
!=4 ){

5642 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5643 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB NRETRY DELAY", 0);

5644  
TCL_ERROR
;

5646 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5647  
TCL_ERROR
;

5649 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
a
[0]ËË 
TCL_ERROR
;

5650 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
a
[1]ËË 
TCL_ERROR
;

5651 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_WIN32_AV_RETRY
, (*)
a
);

5652 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d %d", 
rc
, 
a
[0],á[1]);

5653 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5654  
TCL_OK
;

5655 
	}
}

5663 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_wö32_£t_h™dÀ
(

5664 
Clõ¡D©a
 
˛õ¡D©a
,

5665 
T˛_I¡îp
 *
öãΩ
,

5666 
objc
,

5667 
T˛_Obj
 *
CONST
 
objv
[]

5669 
sqlôe3
 *
db
;

5670 
rc
;

5671 
HANDLE
 
hFûe
 = 
NULL
;

5672 
z
[100];

5674 if–
objc
!=3 ){

5675 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5676 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB HANDLE", 0);

5677  
TCL_ERROR
;

5679 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5680  
TCL_ERROR
;

5682 if–
	`gëWö32H™dÀ
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
hFûe
) ){

5683  
TCL_ERROR
;

5685 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_WIN32_SET_HANDLE
,

5686 (*)&
hFûe
);

5687 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %p", 
rc
, (*)
hFûe
);

5688 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5689  
TCL_OK
;

5690 
	}
}

5699 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_≥rsi°_wÆ
(

5700 
Clõ¡D©a
 
˛õ¡D©a
,

5701 
T˛_I¡îp
 *
öãΩ
,

5702 
objc
,

5703 
T˛_Obj
 *
CONST
 
objv
[]

5705 
sqlôe3
 *
db
;

5706 
rc
;

5707 
bPîsi°
;

5708 
z
[100];

5710 if–
objc
!=3 ){

5711 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5712 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB FLAG", 0);

5713  
TCL_ERROR
;

5715 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5716  
TCL_ERROR
;

5718 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
bPîsi°
ËË 
TCL_ERROR
;

5719 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
NULL
, 
SQLITE_FCNTL_PERSIST_WAL
, (*)&
bPîsi°
);

5720 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d", 
rc
, 
bPîsi°
);

5721 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5722  
TCL_OK
;

5723 
	}
}

5731 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_powîß„_ovîwrôe
(

5732 
Clõ¡D©a
 
˛õ¡D©a
,

5733 
T˛_I¡îp
 *
öãΩ
,

5734 
objc
,

5735 
T˛_Obj
 *
CONST
 
objv
[]

5737 
sqlôe3
 *
db
;

5738 
rc
;

5739 
b
;

5740 
z
[100];

5742 if–
objc
!=3 ){

5743 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5744 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB FLAG", 0);

5745  
TCL_ERROR
;

5747 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5748  
TCL_ERROR
;

5750 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
b
ËË 
TCL_ERROR
;

5751 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
,
NULL
,
SQLITE_FCNTL_POWERSAFE_OVERWRITE
,(*)&
b
);

5752 
	`sqlôe3_¢¥ötf
((
z
), z, "%d %d", 
rc
, 
b
);

5753 
	`T˛_AµídResu…
(
öãΩ
, 
z
, (*)0);

5754  
TCL_OK
;

5755 
	}
}

5763 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_vf¢ame
(

5764 
Clõ¡D©a
 
˛õ¡D©a
,

5765 
T˛_I¡îp
 *
öãΩ
,

5766 
objc
,

5767 
T˛_Obj
 *
CONST
 
objv
[]

5769 
sqlôe3
 *
db
;

5770 c⁄° *
zDbName
 = "main";

5771 *
zVfsName
 = 0;

5773 if–
objc
!=2 && objc!=3 ){

5774 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5775 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ?AUXDB?", 0);

5776  
TCL_ERROR
;

5778 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5779  
TCL_ERROR
;

5781 if–
objc
==3 ){

5782 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5784 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDbName
, 
SQLITE_FCNTL_VFSNAME
,(*)&
zVfsName
);

5785 
	`T˛_AµídResu…
(
öãΩ
, 
zVfsName
, (*)0);

5786 
	`sqlôe3_‰ì
(
zVfsName
);

5787  
TCL_OK
;

5788 
	}
}

5795 
SQLITE_TCLAPI
 
	$fûe_c⁄åﬁ_ãmpfûíame
(

5796 
Clõ¡D©a
 
˛õ¡D©a
,

5797 
T˛_I¡îp
 *
öãΩ
,

5798 
objc
,

5799 
T˛_Obj
 *
CONST
 
objv
[]

5801 
sqlôe3
 *
db
;

5802 c⁄° *
zDbName
 = "main";

5803 *
zTName
 = 0;

5805 if–
objc
!=2 && objc!=3 ){

5806 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5807 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ?AUXDB?", 0);

5808  
TCL_ERROR
;

5810 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

5811  
TCL_ERROR
;

5813 if–
objc
==3 ){

5814 
zDbName
 = 
	`T˛_GëSåög
(
objv
[2]);

5816 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
zDbName
, 
SQLITE_FCNTL_TEMPFILENAME
, (*)&
zTName
);

5817 
	`T˛_AµídResu…
(
öãΩ
, 
zTName
, (*)0);

5818 
	`sqlôe3_‰ì
(
zTName
);

5819  
TCL_OK
;

5820 
	}
}

5828 
SQLITE_TCLAPI
 
	$vfs_li°
(

5829 
Clõ¡D©a
 
˛õ¡D©a
,

5830 
T˛_I¡îp
 *
öãΩ
,

5831 
objc
,

5832 
T˛_Obj
 *
CONST
 
objv
[]

5834 
sqlôe3_vfs
 *
pVfs
;

5835 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

5836 if–
objc
!=1 ){

5837 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

5838  
TCL_ERROR
;

5840 
pVfs
=
	`sqlôe3_vfs_föd
(0);ÖVfs;ÖVfsıVfs->
pNext
){

5841 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
pVfs
->
zName
, -1));

5843 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

5844  
TCL_OK
;

5845 
	}
}

5853 
SQLITE_TCLAPI
 
	$ã°_limô
(

5854 
Clõ¡D©a
 
˛õ¡D©a
,

5855 
T˛_I¡îp
 *
öãΩ
,

5856 
objc
,

5857 
T˛_Obj
 *
CONST
 
objv
[]

5859 
sqlôe3
 *
db
;

5860 
rc
;

5862 *
zName
;

5863 
id
;

5864 } 
aId
[] = {

5865 { "SQLITE_LIMIT_LENGTH", 
SQLITE_LIMIT_LENGTH
 },

5866 { "SQLITE_LIMIT_SQL_LENGTH", 
SQLITE_LIMIT_SQL_LENGTH
 },

5867 { "SQLITE_LIMIT_COLUMN", 
SQLITE_LIMIT_COLUMN
 },

5868 { "SQLITE_LIMIT_EXPR_DEPTH", 
SQLITE_LIMIT_EXPR_DEPTH
 },

5869 { "SQLITE_LIMIT_COMPOUND_SELECT", 
SQLITE_LIMIT_COMPOUND_SELECT
 },

5870 { "SQLITE_LIMIT_VDBE_OP", 
SQLITE_LIMIT_VDBE_OP
 },

5871 { "SQLITE_LIMIT_FUNCTION_ARG", 
SQLITE_LIMIT_FUNCTION_ARG
 },

5872 { "SQLITE_LIMIT_ATTACHED", 
SQLITE_LIMIT_ATTACHED
 },

5873 { "SQLITE_LIMIT_LIKE_PATTERN_LENGTH", 
SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 },

5874 { "SQLITE_LIMIT_VARIABLE_NUMBER", 
SQLITE_LIMIT_VARIABLE_NUMBER
 },

5875 { "SQLITE_LIMIT_TRIGGER_DEPTH", 
SQLITE_LIMIT_TRIGGER_DEPTH
 },

5876 { "SQLITE_LIMIT_WORKER_THREADS", 
SQLITE_LIMIT_WORKER_THREADS
 },

5880 { "SQLITE_LIMIT_TOOBIG", 
SQLITE_LIMIT_WORKER_THREADS
+1 },

5882 
i
, 
id
 = 0;

5883 
vÆ
;

5884 c⁄° *
zId
;

5886 if–
objc
!=4 ){

5887 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

5888 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " DB ID VALUE", 0);

5889  
TCL_ERROR
;

5891 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

5892 
zId
 = 
	`T˛_GëSåög
(
objv
[2]);

5893 
i
=0; i<(
aId
)/(aId[0]); i++){

5894 if–
	`°rcmp
(
zId
, 
aId
[
i
].
zName
)==0 ){

5895 
id
 = 
aId
[
i
].id;

5899 if–
i
>=(
aId
)/(aId[0]) ){

5900 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿limôÅy≥: ", 
zId
, (*)0);

5901  
TCL_ERROR
;

5903 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

5904 
rc
 = 
	`sqlôe3_limô
(
db
, 
id
, 
vÆ
);

5905 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

5906  
TCL_OK
;

5907 
	}
}

5916 
SQLITE_TCLAPI
 
	$ßve_¥ng_°©e
(

5917 
Clõ¡D©a
 
˛õ¡D©a
,

5918 
T˛_I¡îp
 *
öãΩ
,

5919 
objc
,

5920 
T˛_Obj
 *
CONST
 
objv
[]

5922 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(9999);

5923 
	`as£π
–
rc
==0 );

5924 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(-1);

5925 
	`as£π
–
rc
==0 );

5926 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_SAVE
);

5927  
TCL_OK
;

5928 
	}
}

5932 
SQLITE_TCLAPI
 
	$ª°‹e_¥ng_°©e
(

5933 
Clõ¡D©a
 
˛õ¡D©a
,

5934 
T˛_I¡îp
 *
öãΩ
,

5935 
objc
,

5936 
T˛_Obj
 *
CONST
 
objv
[]

5938 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_RESTORE
);

5939  
TCL_OK
;

5940 
	}
}

5944 
SQLITE_TCLAPI
 
	$ª£t_¥ng_°©e
(

5945 
Clõ¡D©a
 
˛õ¡D©a
,

5946 
T˛_I¡îp
 *
öãΩ
,

5947 
objc
,

5948 
T˛_Obj
 *
CONST
 
objv
[]

5950 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PRNG_RESET
);

5951  
TCL_OK
;

5952 
	}
}

5960 
SQLITE_TCLAPI
 
	$d©aba£_may_be_c‹ru±
(

5961 
Clõ¡D©a
 
˛õ¡D©a
,

5962 
T˛_I¡îp
 *
öãΩ
,

5963 
objc
,

5964 
T˛_Obj
 *
CONST
 
objv
[]

5966 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_NEVER_CORRUPT
, 0);

5967  
TCL_OK
;

5968 
	}
}

5975 
SQLITE_TCLAPI
 
	$d©aba£_√vî_c‹ru±
(

5976 
Clõ¡D©a
 
˛õ¡D©a
,

5977 
T˛_I¡îp
 *
öãΩ
,

5978 
objc
,

5979 
T˛_Obj
 *
CONST
 
objv
[]

5981 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_NEVER_CORRUPT
, 1);

5982  
TCL_OK
;

5983 
	}
}

5988 
SQLITE_TCLAPI
 
	$ã°_pˇche_°©s
(

5989 
Clõ¡D©a
 
˛õ¡D©a
,

5990 
T˛_I¡îp
 *
öãΩ
,

5991 
objc
,

5992 
T˛_Obj
 *
CONST
 
objv
[]

5994 
nMö
;

5995 
nMax
;

5996 
nCuºít
;

5997 
nRecy˛abÀ
;

5998 
T˛_Obj
 *
pRë
;

6000 
	`sqlôe3PˇcheSèts
(&
nCuºít
, &
nMax
, &
nMö
, &
nRecy˛abÀ
);

6002 
pRë
 = 
	`T˛_NewObj
();

6003 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("current", -1));

6004 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nCuºít
));

6005 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("max", -1));

6006 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nMax
));

6007 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("min", -1));

6008 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nMö
));

6009 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("recyclable", -1));

6010 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nRecy˛abÀ
));

6012 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

6014  
TCL_OK
;

6015 
	}
}

6017 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


6018 
	$ã°_u∆ock_nŸify_cb
(**
aArg
, 
nArg
){

6019 
ii
;

6020 
ii
=0; ii<
nArg
; ii++){

6021 
	`T˛_EvÆEx
((
T˛_I¡îp
 *)
aArg
[
ii
], "u∆ock_nŸify", -1, 
TCL_EVAL_GLOBAL
);

6023 
	}
}

6029 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


6030 
SQLITE_TCLAPI
 
	$ã°_u∆ock_nŸify
(

6031 
Clõ¡D©a
 
˛õ¡D©a
,

6032 
T˛_I¡îp
 *
öãΩ
,

6033 
objc
,

6034 
T˛_Obj
 *
CONST
 
objv
[]

6036 
sqlôe3
 *
db
;

6037 
rc
;

6039 if–
objc
!=2 ){

6040 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

6041  
TCL_ERROR
;

6044 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6045  
TCL_ERROR
;

6047 
rc
 = 
	`sqlôe3_u∆ock_nŸify
(
db
, 
ã°_u∆ock_nŸify_cb
, (*)
öãΩ
);

6048 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6049  
TCL_OK
;

6050 
	}
}

6056 
SQLITE_TCLAPI
 
	$ã°_wÆ_checkpoöt
(

6057 
Clõ¡D©a
 
˛õ¡D©a
,

6058 
T˛_I¡îp
 *
öãΩ
,

6059 
objc
,

6060 
T˛_Obj
 *
CONST
 
objv
[]

6062 *
zDb
 = 0;

6063 
sqlôe3
 *
db
;

6064 
rc
;

6066 if–
objc
!=3 && objc!=2 ){

6067 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB ?NAME?");

6068  
TCL_ERROR
;

6071 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6072  
TCL_ERROR
;

6074 if–
objc
==3 ){

6075 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

6077 
rc
 = 
	`sqlôe3_wÆ_checkpoöt
(
db
, 
zDb
);

6078 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6079  
TCL_OK
;

6080 
	}
}

6100 
SQLITE_TCLAPI
 
	$ã°_wÆ_checkpoöt_v2
(

6101 
Clõ¡D©a
 
˛õ¡D©a
,

6102 
T˛_I¡îp
 *
öãΩ
,

6103 
objc
,

6104 
T˛_Obj
 *
CONST
 
objv
[]

6106 *
zDb
 = 0;

6107 
sqlôe3
 *
db
;

6108 
rc
;

6110 
eMode
;

6111 
nLog
 = -555;

6112 
nCk±
 = -555;

6113 
T˛_Obj
 *
pRë
;

6115 c⁄° * 
aMode
[] = { "passive", "full", "restart", "truncate", 0 };

6116 
	`as£π
–
SQLITE_CHECKPOINT_PASSIVE
==0 );

6117 
	`as£π
–
SQLITE_CHECKPOINT_FULL
==1 );

6118 
	`as£π
–
SQLITE_CHECKPOINT_RESTART
==2 );

6119 
	`as£π
–
SQLITE_CHECKPOINT_TRUNCATE
==3 );

6121 if–
objc
!=3 && objc!=4 ){

6122 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB MODE ?NAME?");

6123  
TCL_ERROR
;

6126 if–
objc
==4 ){

6127 
zDb
 = 
	`T˛_GëSåög
(
objv
[3]);

6129 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) || (

6130 
TCL_OK
!=
	`T˛_GëI¡FromObj
(0, 
objv
[2], &
eMode
)

6131 && 
TCL_OK
!=
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
aMode
, "mode", 0, &
eMode
)

6133  
TCL_ERROR
;

6136 
rc
 = 
	`sqlôe3_wÆ_checkpoöt_v2
(
db
, 
zDb
, 
eMode
, &
nLog
, &
nCk±
);

6137 if–
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
 ){

6138 c⁄° *
zEºCode
 = 
	`sqlôe3EºName
(
rc
);

6139 
	`T˛_Re£tResu…
(
öãΩ
);

6140 
	`T˛_AµídResu…
(
öãΩ
, 
zEºCode
, " - ", (*)
	`sqlôe3_îrmsg
(
db
), 0);

6141  
TCL_ERROR
;

6144 
pRë
 = 
	`T˛_NewObj
();

6145 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
rc
==
SQLITE_BUSY
?1:0));

6146 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nLog
));

6147 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
nCk±
));

6148 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

6150  
TCL_OK
;

6151 
	}
}

6156 
SQLITE_TCLAPI
 
	$ã°_wÆ_autocheckpoöt
(

6157 
Clõ¡D©a
 
˛õ¡D©a
,

6158 
T˛_I¡îp
 *
öãΩ
,

6159 
objc
,

6160 
T˛_Obj
 *
CONST
 
objv
[]

6162 
sqlôe3
 *
db
;

6163 
rc
;

6164 
iVÆ
;

6167 if–
objc
!=3 ){

6168 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB VALUE");

6169  
TCL_ERROR
;

6172 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
)

6173 || 
	`T˛_GëI¡FromObj
(0, 
objv
[2], &
iVÆ
)

6175  
TCL_ERROR
;

6178 
rc
 = 
	`sqlôe3_wÆ_autocheckpoöt
(
db
, 
iVÆ
);

6179 
	`T˛_Re£tResu…
(
öãΩ
);

6180 if–
rc
!=
SQLITE_OK
 ){

6181 c⁄° *
zEºCode
 = 
	`sqlôe3EºName
(
rc
);

6182 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
zEºCode
, -1));

6183  
TCL_ERROR
;

6186  
TCL_OK
;

6187 
	}
}

6193 
	sLogCÆlback
 {

6194 
T˛_I¡îp
 *
	mpI¡îp
;

6195 
T˛_Obj
 *
	mpObj
;

6196 } 
	glogˇŒback
 = {0, 0};

6197 
	$xLogˇŒback
(*
unu£d
, 
îr
, *
zMsg
){

6198 
T˛_Obj
 *
pNew
 = 
	`T˛_Du∂iˇãObj
(
logˇŒback
.
pObj
);

6199 
	`T˛_In¸RefCou¡
(
pNew
);

6200 
	`T˛_Li°ObjAµídEÀmít
(

6201 0, 
pNew
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
îr
), -1)

6203 
	`T˛_Li°ObjAµídEÀmít
(0, 
pNew
, 
	`T˛_NewSåögObj
(
zMsg
, -1));

6204 
	`T˛_EvÆObjEx
(
logˇŒback
.
pI¡îp
, 
pNew
, 
TCL_EVAL_GLOBAL
|
TCL_EVAL_DIRECT
);

6205 
	`T˛_De¸RefCou¡
(
pNew
);

6206 
	}
}

6207 
SQLITE_TCLAPI
 
	$ã°_sqlôe3_log
(

6208 
Clõ¡D©a
 
˛õ¡D©a
,

6209 
T˛_I¡îp
 *
öãΩ
,

6210 
objc
,

6211 
T˛_Obj
 *
CONST
 
objv
[]

6213 if–
objc
>2 ){

6214 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SCRIPT");

6215  
TCL_ERROR
;

6217 if–
logˇŒback
.
pObj
 ){

6218 
	`T˛_De¸RefCou¡
(
logˇŒback
.
pObj
);

6219 
logˇŒback
.
pObj
 = 0;

6220 
logˇŒback
.
pI¡îp
 = 0;

6221 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, (*)0, (*)0);

6223 if–
objc
>1 ){

6224 
logˇŒback
.
pObj
 = 
objv
[1];

6225 
	`T˛_In¸RefCou¡
(
logˇŒback
.
pObj
);

6226 
logˇŒback
.
pI¡îp
 = 
öãΩ
;

6227 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOG
, 
xLogˇŒback
, (*)0);

6229  
TCL_OK
;

6230 
	}
}

6238 
SQLITE_TCLAPI
 
	$runAsObjProc
(

6239 * 
˛õ¡D©a
,

6240 
T˛_I¡îp
 *
öãΩ
,

6241 
objc
,

6242 
T˛_Obj
 *
CONST
 
objv
[]

6244 
T˛_CmdInfo
 
cmdInfo
;

6245 if–
objc
<2 ){

6246 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "COMMAND ...");

6247  
TCL_ERROR
;

6249 if–!
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

6250 
	`T˛_AµídResu…
(
öãΩ
, "commandÇot found: ",

6251 
	`T˛_GëSåög
(
objv
[1]), (*)0);

6252  
TCL_ERROR
;

6254 if–
cmdInfo
.
objProc
==0 ){

6255 
	`T˛_AµídResu…
(
öãΩ
, "command hasÇo objProc: ",

6256 
	`T˛_GëSåög
(
objv
[1]), (*)0);

6257  
TCL_ERROR
;

6259  
cmdInfo
.
	`objProc
(cmdInfo.
objClõ¡D©a
, 
öãΩ
, 
objc
-1, 
objv
+1);

6260 
	}
}

6262 #i‚de‡
SQLITE_OMIT_EXPLAIN


6273 
	$¥ötEx∂aöQuîyPœn
(
sqlôe3_°mt
 *
pStmt
){

6274 c⁄° *
zSql
;

6275 *
zEx∂aö
;

6276 
sqlôe3_°mt
 *
pEx∂aö
;

6277 
rc
;

6279 
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

6280 if–
zSql
==0 )  
SQLITE_ERROR
;

6282 
zEx∂aö
 = 
	`sqlôe3_m¥ötf
("EXPLAIN QUERY PLAN %s", 
zSql
);

6283 if–
zEx∂aö
==0 )  
SQLITE_NOMEM
;

6285 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
	`sqlôe3_db_h™dÀ
(
pStmt
), 
zEx∂aö
, -1, &
pEx∂aö
, 0);

6286 
	`sqlôe3_‰ì
(
zEx∂aö
);

6287 if–
rc
!=
SQLITE_OK
 ) Ñc;

6289  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pEx∂aö
) ){

6290 
iSñe˘id
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 0);

6291 
iOrdî
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 1);

6292 
iFrom
 = 
	`sqlôe3_cﬁumn_öt
(
pEx∂aö
, 2);

6293 c⁄° *
zDëaû
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pEx∂aö
, 3);

6295 
	`¥ötf
("%d %d %d %s\n", 
iSñe˘id
, 
iOrdî
, 
iFrom
, 
zDëaû
);

6298  
	`sqlôe3_föÆize
(
pEx∂aö
);

6299 
	}
}

6301 
SQLITE_TCLAPI
 
	$ã°_¥öt_eqp
(

6302 * 
˛õ¡D©a
,

6303 
T˛_I¡îp
 *
öãΩ
,

6304 
objc
,

6305 
T˛_Obj
 *
CONST
 
objv
[]

6307 
rc
;

6308 
sqlôe3_°mt
 *
pStmt
;

6310 if–
objc
!=2 ){

6311 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

6312  
TCL_ERROR
;

6314 if–
	`gëStmtPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
pStmt
ËË 
TCL_ERROR
;

6315 
rc
 = 
	`¥ötEx∂aöQuîyPœn
(
pStmt
);

6320 
	`fÊush
(
°dout
);

6321 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 0);

6322  
TCL_OK
;

6323 
	}
}

6329 
SQLITE_TCLAPI
 
	$ã°_ã°_c⁄åﬁ
(

6330 * 
˛õ¡D©a
,

6331 
T˛_I¡îp
 *
öãΩ
,

6332 
objc
,

6333 
T˛_Obj
 *
CONST
 
objv
[]

6335 
	sVîb
 {

6336 c⁄° *
zName
;

6337 
i
;

6338 } 
aVîb
[] = {

6339 { "SQLITE_TESTCTRL_LOCALTIME_FAULT", 
SQLITE_TESTCTRL_LOCALTIME_FAULT
 },

6340 { "SQLITE_TESTCTRL_SORTER_MMAP", 
SQLITE_TESTCTRL_SORTER_MMAP
 },

6341 { "SQLITE_TESTCTRL_IMPOSTER", 
SQLITE_TESTCTRL_IMPOSTER
 },

6343 
iVîb
;

6344 
iFœg
;

6345 
rc
;

6347 if–
objc
<2 ){

6348 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VERB ARGS...");

6349  
TCL_ERROR
;

6352 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

6353 
öãΩ
, 
objv
[1], 
aVîb
, ◊Vîb[0]), "VERB", 0, &
iVîb


6355 if–
rc
!=
TCL_OK
 ) Ñc;

6357 
iFœg
 = 
aVîb
[
iVîb
].
i
;

6358  
iFœg
 ){

6359 
SQLITE_TESTCTRL_LOCALTIME_FAULT
: {

6360 
vÆ
;

6361 if–
objc
!=3 ){

6362 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "ONOFF");

6363  
TCL_ERROR
;

6365 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
vÆ
ËË 
TCL_ERROR
;

6366 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_LOCALTIME_FAULT
, 
vÆ
);

6370 
SQLITE_TESTCTRL_SORTER_MMAP
: {

6371 
vÆ
;

6372 
sqlôe3
 *
db
;

6373 if–
objc
!=4 ){

6374 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB LIMIT");

6375  
TCL_ERROR
;

6377 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
db
ËË 
TCL_ERROR
;

6378 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
vÆ
ËË 
TCL_ERROR
;

6379 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_SORTER_MMAP
, 
db
, 
vÆ
);

6383 
SQLITE_TESTCTRL_IMPOSTER
: {

6384 
⁄Off
, 
äum
;

6385 c⁄° *
zDbName
;

6386 
sqlôe3
 *
db
;

6387 if–
objc
!=6 ){

6388 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB dbName onOffÅnum");

6389  
TCL_ERROR
;

6391 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
db
ËË 
TCL_ERROR
;

6392 
zDbName
 = 
	`T˛_GëSåög
(
objv
[3]);

6393 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
⁄Off
ËË 
TCL_ERROR
;

6394 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[5], &
äum
ËË 
TCL_ERROR
;

6395 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_IMPOSTER
, 
db
, 
zDbName
, 
⁄Off
, 
äum
);

6400 
	`T˛_Re£tResu…
(
öãΩ
);

6401  
TCL_OK
;

6402 
	}
}

6404 #i‡
SQLITE_OS_UNIX


6405 
	~<sys/time.h
>

6406 
	~<sys/ªsour˚.h
>

6408 
SQLITE_TCLAPI
 
	$ã°_gërußge
(

6409 * 
˛õ¡D©a
,

6410 
T˛_I¡îp
 *
öãΩ
,

6411 
objc
,

6412 
T˛_Obj
 *
CONST
 
objv
[]

6414 
buf
[1024];

6415 
rußge
 
r
;

6416 
	`mem£t
(&
r
, 0, (r));

6417 
	`gërußge
(
RUSAGE_SELF
, &
r
);

6419 
	`sqlôe3_¢¥ötf
((
buf
), buf,

6421 ()
r
.
ru_utime
.
tv_£c
, (Ï.ru_utime.
tv_u£c
,

6422 ()
r
.
ru_°ime
.
tv_£c
, (Ï.ru_°ime.
tv_u£c
,

6423 ()
r
.
ru_möÊt
, (Ï.
ru_majÊt


6425 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
buf
, -1));

6426  
TCL_OK
;

6427 
	}
}

6430 #i‡
SQLITE_OS_WIN


6435 
	swö32FûeLockî
 {

6436 *
	mevName
;

6437 
HANDLE
 
	mh
;

6438 
	mdñay1
;

6439 
	mdñay2
;

6440 
	mok
;

6441 
	mîr
;

6446 #i‡
SQLITE_OS_WIN


6447 
	~<¥o˚ss.h
>

6451 
SQLITE_CDECL
 
	$wö32_fûe_lockî
(*
pAµD©a
){

6452 
wö32FûeLockî
 *
p
 = (wö32FûeLockî*)
pAµD©a
;

6453 if–
p
->
evName
 ){

6454 
HANDLE
 
ev
 = 
	`O≥nEvít
(
EVENT_MODIFY_STATE
, 
FALSE
, 
p
->
evName
);

6455 i‡–
ev
 ){

6456 
	`SëEvít
(
ev
);

6457 
	`Clo£H™dÀ
(
ev
);

6460 if–
p
->
dñay1
 ) 
	`SÀï
(p->delay1);

6461 if–
	`LockFûe
(
p
->
h
, 0, 0, 100000000, 0) ){

6462 
	`SÀï
(
p
->
dñay2
);

6463 
	`U∆ockFûe
(
p
->
h
, 0, 0, 100000000, 0);

6464 
p
->
ok
 = 1;

6466 
p
->
îr
 = 1;

6468 
	`Clo£H™dÀ
(
p
->
h
);

6469 
p
->
h
 = 0;

6470 
p
->
dñay1
 = 0;

6471 
p
->
dñay2
 = 0;

6472 
	}
}

6475 #i‡
SQLITE_OS_WIN


6482 
SQLITE_TCLAPI
 
	$wö32_fûe_lock
(

6483 * 
˛õ¡D©a
,

6484 
T˛_I¡îp
 *
öãΩ
,

6485 
objc
,

6486 
T˛_Obj
 *
CONST
 
objv
[]

6488 
wö32FûeLockî
 
x
 = { "win32_file_lock", 0, 0, 0, 0, 0 };

6489 c⁄° *
zFûíame
;

6490 
zBuf
[200];

6491 
ªåy
 = 0;

6492 
HANDLE
 
ev
;

6493 
DWORD
 
wResu…
;

6495 if–
objc
!=4 && objc!=1 ){

6496 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME DELAY1 DELAY2");

6497  
TCL_ERROR
;

6499 if–
objc
==1 ){

6500 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d %d %d %d %d",

6501 
x
.
ok
, x.
îr
, x.
dñay1
, x.
dñay2
, x.
h
);

6502 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

6503  
TCL_OK
;

6505  
x
.
h
 && 
ªåy
<30 ){

6506 
ªåy
++;

6507 
	`SÀï
(100);

6509 if–
x
.
h
 ){

6510 
	`T˛_AµídResu…
(
öãΩ
, "busy", (*)0);

6511  
TCL_ERROR
;

6513 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
x
.
dñay1
ËË 
TCL_ERROR
;

6514 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
x
.
dñay2
ËË 
TCL_ERROR
;

6515 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

6516 
x
.
h
 = 
	`Cª©eFûe
(
zFûíame
, 
GENERIC_READ
|
GENERIC_WRITE
,

6517 
FILE_SHARE_READ
|
FILE_SHARE_WRITE
, 0, 
OPEN_ALWAYS
,

6518 
FILE_ATTRIBUTE_NORMAL
, 0);

6519 if–!
x
.
h
 ){

6520 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿fûe: ", 
zFûíame
, (*)0);

6521  
TCL_ERROR
;

6523 
ev
 = 
	`Cª©eEvít
(
NULL
, 
TRUE
, 
FALSE
, 
x
.
evName
);

6524 i‡–!
ev
 ){

6525 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ cª©êevít: ", 
x
.
evName
, (*)0);

6526  
TCL_ERROR
;

6528 
	`_begöthªad
(
wö32_fûe_lockî
, 0, (*)&
x
);

6529 
	`SÀï
(0);

6530 i‡–(
wResu…
 = 
	`WaôF‹SögÀObje˘
(
ev
, 10000))!=
WAIT_OBJECT_0
 ){

6531 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "0x%x", 
wResu…
);

6532 
	`T˛_AµídResu…
(
öãΩ
, "waô faûed: ", 
zBuf
, (*)0);

6533 
	`Clo£H™dÀ
(
ev
);

6534  
TCL_ERROR
;

6536 
	`Clo£H™dÀ
(
ev
);

6537  
TCL_OK
;

6538 
	}
}

6546 
SQLITE_TCLAPI
 
	$wö32_exi°s_∑th
(

6547 *
˛õ¡D©a
,

6548 
T˛_I¡îp
 *
öãΩ
,

6549 
objc
,

6550 
T˛_Obj
 *
CONST
 
objv
[]

6552 if–
objc
!=2 ){

6553 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATH");

6554  
TCL_ERROR
;

6556 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(

6557 
	`GëFûeAâribuãsW
–
	`T˛_GëUnicode
(
objv
[1]))!=
INVALID_FILE_ATTRIBUTES
 ));

6558  
TCL_OK
;

6559 
	}
}

6568 
SQLITE_TCLAPI
 
	$wö32_föd_fûe
(

6569 *
˛õ¡D©a
,

6570 
T˛_I¡îp
 *
öãΩ
,

6571 
objc
,

6572 
T˛_Obj
 *
CONST
 
objv
[]

6574 
HANDLE
 
hFödFûe
 = 
INVALID_HANDLE_VALUE
;

6575 
WIN32_FIND_DATAW
 
födD©a
;

6576 
T˛_Obj
 *
li°Obj
;

6577 
DWORD
 
œ°Eºno
;

6578 if–
objc
!=2 ){

6579 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN");

6580  
TCL_ERROR
;

6582 
hFödFûe
 = 
	`FödFú°FûeW
(
	`T˛_GëUnicode
(
objv
[1]), &
födD©a
);

6583 if–
hFödFûe
==
INVALID_HANDLE_VALUE
 ){

6584 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6585  
TCL_ERROR
;

6587 
li°Obj
 = 
	`T˛_NewObj
();

6588 
	`T˛_In¸RefCou¡
(
li°Obj
);

6590 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
li°Obj
, 
	`T˛_NewUnicodeObj
(

6591 
födD©a
.
cFûeName
, -1));

6592 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
li°Obj
, 
	`T˛_NewWideI¡Obj
(

6593 
födD©a
.
dwFûeAâribuãs
));

6594 }  
	`FödNextFûeW
(
hFödFûe
, &
födD©a
) );

6595 
œ°Eºno
 = 
	`GëLa°Eº‹
();

6596 if–
œ°Eºno
!=
NO_ERROR
 &&Üa°Eºno!=
ERROR_NO_MORE_FILES
 ){

6597 
	`FödClo£
(
hFödFûe
);

6598 
	`T˛_De¸RefCou¡
(
li°Obj
);

6599 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6600  
TCL_ERROR
;

6602 
	`FödClo£
(
hFödFûe
);

6603 
	`T˛_SëObjResu…
(
öãΩ
, 
li°Obj
);

6604  
TCL_OK
;

6605 
	}
}

6613 
SQLITE_TCLAPI
 
	$wö32_dñëe_fûe
(

6614 *
˛õ¡D©a
,

6615 
T˛_I¡îp
 *
öãΩ
,

6616 
objc
,

6617 
T˛_Obj
 *
CONST
 
objv
[]

6619 if–
objc
!=2 ){

6620 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

6621  
TCL_ERROR
;

6623 if–!
	`DñëeFûeW
(
	`T˛_GëUnicode
(
objv
[1])) ){

6624 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6625  
TCL_ERROR
;

6627 
	`T˛_Re£tResu…
(
öãΩ
);

6628  
TCL_OK
;

6629 
	}
}

6637 
SQLITE_TCLAPI
 
	$wö32_mkdú
(

6638 *
˛õ¡D©a
,

6639 
T˛_I¡îp
 *
öãΩ
,

6640 
objc
,

6641 
T˛_Obj
 *
CONST
 
objv
[]

6643 if–
objc
!=2 ){

6644 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DIRECTORY");

6645  
TCL_ERROR
;

6647 if–!
	`Cª©eDúe˘‹yW
(
	`T˛_GëUnicode
(
objv
[1]), 
NULL
) ){

6648 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6649  
TCL_ERROR
;

6651 
	`T˛_Re£tResu…
(
öãΩ
);

6652  
TCL_OK
;

6653 
	}
}

6661 
SQLITE_TCLAPI
 
	$wö32_rmdú
(

6662 *
˛õ¡D©a
,

6663 
T˛_I¡îp
 *
öãΩ
,

6664 
objc
,

6665 
T˛_Obj
 *
CONST
 
objv
[]

6667 if–
objc
!=2 ){

6668 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DIRECTORY");

6669  
TCL_ERROR
;

6671 if–!
	`RemoveDúe˘‹yW
(
	`T˛_GëUnicode
(
objv
[1])) ){

6672 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`GëLa°Eº‹
()));

6673  
TCL_ERROR
;

6675 
	`T˛_Re£tResu…
(
öãΩ
);

6676  
TCL_OK
;

6677 
	}
}

6688 
SQLITE_TCLAPI
 
	$›timiz©i⁄_c⁄åﬁ
(

6689 * 
˛õ¡D©a
,

6690 
T˛_I¡îp
 *
öãΩ
,

6691 
objc
,

6692 
T˛_Obj
 *
CONST
 
objv
[]

6694 
i
;

6695 
sqlôe3
 *
db
;

6696 c⁄° *
zO±
;

6697 
⁄off
;

6698 
mask
 = 0;

6700 c⁄° *
zO±Name
;

6701 
mask
;

6702 } 
aO±
[] = {

6703 { "Æl", 
SQLITE_AŒO±s
 },

6705 { "quîy-Ê©ã√r", 
SQLITE_QuîyFœâíî
 },

6706 { "cﬁumn-ˇche", 
SQLITE_CﬁumnCache
 },

6707 { "groupby-‹dî", 
SQLITE_GroupByOrdî
 },

6708 { "Á˘‹-c⁄°™ts", 
SQLITE_Fa˘‹OutC⁄°
 },

6709 { "di°ö˘-›t", 
SQLITE_Di°ö˘O±
 },

6710 { "covî-idx-sˇn", 
SQLITE_CovîIdxSˇn
 },

6711 { "‹dî-by-idx-joö", 
SQLITE_OrdîByIdxJoö
 },

6712 { "å™sôive", 
SQLITE_Tønsôive
 },

6713 { "subquîy-c‹outöe", 
SQLITE_SubqC‹outöe
 },

6714 { "omô-no›-joö", 
SQLITE_OmôNo›Joö
 },

6715 { "°©3", 
SQLITE_Sèt34
 },

6716 { "°©4", 
SQLITE_Sèt34
 },

6719 if–
objc
!=4 ){

6720 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB OPT BOOLEAN");

6721  
TCL_ERROR
;

6723 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6724 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
⁄off
ËË 
TCL_ERROR
;

6725 
zO±
 = 
	`T˛_GëSåög
(
objv
[2]);

6726 
i
=0; i<(
aO±
)/(aOpt[0]); i++){

6727 if–
	`°rcmp
(
zO±
, 
aO±
[
i
].
zO±Name
)==0 ){

6728 
mask
 = 
aO±
[
i
].mask;

6732 if–
⁄off
 ) 
mask
 = ~mask;

6733 if–
i
>=(
aO±
)/(aOpt[0]) ){

6734 
	`T˛_AµídResu…
(
öãΩ
, "unknown optimization - should be one of:",

6736 
i
=0; i<(
aO±
)/(aOpt[0]); i++){

6737 
	`T˛_AµídResu…
(
öãΩ
, " ", 
aO±
[
i
].
zO±Name
, (*)0);

6739  
TCL_ERROR
;

6741 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_OPTIMIZATIONS
, 
db
, 
mask
);

6742  
TCL_OK
;

6743 
	}
}

6750 
SQLITE_TCLAPI
 
	$t˛LﬂdSèticExãnsi⁄Cmd
(

6751 * 
˛õ¡D©a
,

6752 
T˛_I¡îp
 *
öãΩ
,

6753 
objc
,

6754 
T˛_Obj
 *
CONST
 
objv
[]

6756 
	`sqlôe3_am©ch_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6757 
	`sqlôe3_ˇºay_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6758 
	`sqlôe3_˛osuª_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6759 
	`sqlôe3_csv_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6760 
	`sqlôe3_evÆ_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6761 
	`sqlôe3_fûeio_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6762 
	`sqlôe3_fuzzî_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6763 
	`sqlôe3_õì_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6764 
	`sqlôe3_√xtch¨_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6765 
	`sqlôe3_≥r˚¡ûe_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6766 
	`sqlôe3_ªgexp_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6767 
	`sqlôe3_£rõs_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6768 
	`sqlôe3_•ñlfix_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6769 
	`sqlôe3_tŸy≥_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6770 
	`sqlôe3_whﬁíumbî_öô
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6772 c⁄° *
zExtName
;

6773 (*
pInô
)(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

6774 } 
aExãnsi⁄
[] = {

6775 { "am©ch", 
sqlôe3_am©ch_öô
 },

6776 { "ˇºay", 
sqlôe3_ˇºay_öô
 },

6777 { "˛osuª", 
sqlôe3_˛osuª_öô
 },

6778 { "csv", 
sqlôe3_csv_öô
 },

6779 { "evÆ", 
sqlôe3_evÆ_öô
 },

6780 { "fûeio", 
sqlôe3_fûeio_öô
 },

6781 { "fuzzî", 
sqlôe3_fuzzî_öô
 },

6782 { "õì754", 
sqlôe3_õì_öô
 },

6783 { "√xtch¨", 
sqlôe3_√xtch¨_öô
 },

6784 { "≥r˚¡ûe", 
sqlôe3_≥r˚¡ûe_öô
 },

6785 { "ªgexp", 
sqlôe3_ªgexp_öô
 },

6786 { "£rõs", 
sqlôe3_£rõs_öô
 },

6787 { "•ñlfix", 
sqlôe3_•ñlfix_öô
 },

6788 { "tŸy≥", 
sqlôe3_tŸy≥_öô
 },

6789 { "whﬁíumbî", 
sqlôe3_whﬁíumbî_öô
 },

6791 
sqlôe3
 *
db
;

6792 c⁄° *
zName
;

6793 
i
, 
j
, 
rc
;

6794 *
zEºMsg
 = 0;

6795 if–
objc
<3 ){

6796 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB NAME ...");

6797  
TCL_ERROR
;

6799 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6800 
j
=2; j<
objc
; j++){

6801 
zName
 = 
	`T˛_GëSåög
(
objv
[
j
]);

6802 
i
=0; i<
	`AºaySize
(
aExãnsi⁄
); i++){

6803 if–
	`°rcmp
(
zName
, 
aExãnsi⁄
[
i
].
zExtName
)==0 ) ;

6805 if–
i
>=
	`AºaySize
(
aExãnsi⁄
) ){

6806 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuchÉxãnsi⁄: ", 
zName
, (*)0);

6807  
TCL_ERROR
;

6809 if–
aExãnsi⁄
[
i
].
pInô
 ){

6810 
rc
 = 
aExãnsi⁄
[
i
].
	`pInô
(
db
, &
zEºMsg
, 0);

6812 
rc
 = 
SQLITE_OK
;

6814 if–
rc
!=
SQLITE_OK
 || 
zEºMsg
 ){

6815 
	`T˛_AµídResu…
(
öãΩ
, "öôüliz©i⁄ o‡", 
zName
, " faûed: ", 
zEºMsg
,

6817 
	`sqlôe3_‰ì
(
zEºMsg
);

6818  
TCL_ERROR
;

6821  
TCL_OK
;

6822 
	}
}

6828 
SQLITE_TCLAPI
 
	$s‹ãr_ã°_Ákehóp
(

6829 * 
˛õ¡D©a
,

6830 
T˛_I¡îp
 *
öãΩ
,

6831 
objc
,

6832 
T˛_Obj
 *
CONST
 
objv
[]

6834 
bArg
;

6835 if–
objc
!=2 ){

6836 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

6837  
TCL_ERROR
;

6840 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bArg
) ){

6841  
TCL_ERROR
;

6844 if–
bArg
 ){

6845 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==0 ){

6846 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 
	`SQLITE_INT_TO_PTR
(-1);

6849 if–
sqlôe3GlobÆC⁄fig
.
pHóp
==
	`SQLITE_INT_TO_PTR
(-1) ){

6850 
sqlôe3GlobÆC⁄fig
.
pHóp
 = 0;

6854 
	`T˛_Re£tResu…
(
öãΩ
);

6855  
TCL_OK
;

6856 
	}
}

6868 
SQLITE_TCLAPI
 
	$s‹ãr_ã°_s‹t4_hñ≥r
(

6869 * 
˛õ¡D©a
,

6870 
T˛_I¡îp
 *
öãΩ
,

6871 
objc
,

6872 
T˛_Obj
 *
CONST
 
objv
[]

6874 c⁄° *
zSql1
;

6875 c⁄° *
zSql2
;

6876 
nSãp
;

6877 
iSãp
;

6878 
iCksum1
 = 0;

6879 
iCksum2
 = 0;

6880 
rc
;

6881 
iB
;

6882 
sqlôe3
 *
db
;

6883 
sqlôe3_°mt
 *
pStmt
;

6885 if–
objc
!=5 ){

6886 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SQL1 NSTEP SQL2");

6887  
TCL_ERROR
;

6890 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

6891 
zSql1
 = 
	`T˛_GëSåög
(
objv
[2]);

6892 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nSãp
ËË 
TCL_ERROR
;

6893 
zSql2
 = 
	`T˛_GëSåög
(
objv
[4]);

6895 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql1
, -1, &
pStmt
, 0);

6896 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

6898 
iB
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
)-1;

6899 
iSãp
=0; iSãp<
nSãp
 && 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
); iStep++){

6900 
a
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

6901 if–
a
!=
	`sqlôe3_cﬁumn_öt
(
pStmt
, 
iB
) ){

6902 
	`T˛_AµídResu…
(
öãΩ
, "dataÉrror: (a!=b)", 0);

6903  
TCL_ERROR
;

6906 
iCksum1
 +(iCksum1 << 3Ë+ ()
a
;

6908 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

6909 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

6911 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql2
, -1, &
pStmt
, 0);

6912 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

6913 
iSãp
=0; 
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
); iStep++){

6914 
a
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

6915 
iCksum2
 +(iCksum2 << 3Ë+ ()
a
;

6917 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

6918 if–
rc
!=
SQLITE_OK
 ) 
sql_îr‹
;

6920 if–
iCksum1
!=
iCksum2
 ){

6921 
	`T˛_AµídResu…
(
öãΩ
, "checksum mismatch", 0);

6922  
TCL_ERROR
;

6925  
TCL_OK
;

6926 
sql_îr‹
:

6927 
	`T˛_AµídResu…
(
öãΩ
, "sq»îr‹: ", 
	`sqlôe3_îrmsg
(
db
), 0);

6928  
TCL_ERROR
;

6929 
	}
}

6932 #ifde‡
SQLITE_USER_AUTHENTICATION


6933 
	~"sqlôe3u£øuth.h
"

6937 
SQLITE_TCLAPI
 
	$ã°_u£r_authítiˇã
(

6938 
Clõ¡D©a
 
˛õ¡D©a
,

6939 
T˛_I¡îp
 *
öãΩ
,

6940 
objc
,

6941 
T˛_Obj
 *
CONST
 
objv
[]

6943 *
zU£r
 = 0;

6944 *
zPasswd
 = 0;

6945 
nPasswd
 = 0;

6946 
sqlôe3
 *
db
;

6947 
rc
;

6949 if–
objc
!=4 ){

6950 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD");

6951  
TCL_ERROR
;

6953 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6954  
TCL_ERROR
;

6956 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

6957 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

6958 
rc
 = 
	`sqlôe3_u£r_authítiˇã
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
);

6959 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6960  
TCL_OK
;

6961 
	}
}

6964 #ifde‡
SQLITE_USER_AUTHENTICATION


6968 
SQLITE_TCLAPI
 
	$ã°_u£r_add
(

6969 
Clõ¡D©a
 
˛õ¡D©a
,

6970 
T˛_I¡îp
 *
öãΩ
,

6971 
objc
,

6972 
T˛_Obj
 *
CONST
 
objv
[]

6974 *
zU£r
 = 0;

6975 *
zPasswd
 = 0;

6976 
nPasswd
 = 0;

6977 
isAdmö
 = 0;

6978 
sqlôe3
 *
db
;

6979 
rc
;

6981 if–
objc
!=5 ){

6982 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD ISADMIN");

6983  
TCL_ERROR
;

6985 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

6986  
TCL_ERROR
;

6988 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

6989 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

6990 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
isAdmö
);

6991 
rc
 = 
	`sqlôe3_u£r_add
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
, 
isAdmö
);

6992 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

6993  
TCL_OK
;

6994 
	}
}

6997 #ifde‡
SQLITE_USER_AUTHENTICATION


7001 
SQLITE_TCLAPI
 
	$ã°_u£r_ch™ge
(

7002 
Clõ¡D©a
 
˛õ¡D©a
,

7003 
T˛_I¡îp
 *
öãΩ
,

7004 
objc
,

7005 
T˛_Obj
 *
CONST
 
objv
[]

7007 *
zU£r
 = 0;

7008 *
zPasswd
 = 0;

7009 
nPasswd
 = 0;

7010 
isAdmö
 = 0;

7011 
sqlôe3
 *
db
;

7012 
rc
;

7014 if–
objc
!=5 ){

7015 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME PASSWORD ISADMIN");

7016  
TCL_ERROR
;

7018 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7019  
TCL_ERROR
;

7021 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7022 
zPasswd
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nPasswd
);

7023 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[4], &
isAdmö
);

7024 
rc
 = 
	`sqlôe3_u£r_ch™ge
(
db
, 
zU£r
, 
zPasswd
, 
nPasswd
, 
isAdmö
);

7025 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7026  
TCL_OK
;

7027 
	}
}

7030 #ifde‡
SQLITE_USER_AUTHENTICATION


7034 
SQLITE_TCLAPI
 
	$ã°_u£r_dñëe
(

7035 
Clõ¡D©a
 
˛õ¡D©a
,

7036 
T˛_I¡îp
 *
öãΩ
,

7037 
objc
,

7038 
T˛_Obj
 *
CONST
 
objv
[]

7040 *
zU£r
 = 0;

7041 
sqlôe3
 *
db
;

7042 
rc
;

7044 if–
objc
!=3 ){

7045 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB USERNAME");

7046  
TCL_ERROR
;

7048 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
) ){

7049  
TCL_ERROR
;

7051 
zU£r
 = 
	`T˛_GëSåög
(
objv
[2]);

7052 
rc
 = 
	`sqlôe3_u£r_dñëe
(
db
, 
zU£r
);

7053 
	`T˛_SëResu…
(
öãΩ
, (*)
	`t1Eº‹Name
(
rc
), 
TCL_STATIC
);

7054  
TCL_OK
;

7055 
	}
}

7071 
SQLITE_TCLAPI
 
	$ã°_bad_behavi‹
(

7072 
Clõ¡D©a
 
˛õ¡D©a
,

7073 
T˛_I¡îp
 *
öãΩ
,

7074 
objc
,

7075 
T˛_Obj
 *
CONST
 
objv
[]

7077 
iTy≥
;

7078 
xyz
;

7079 
i
 = *(*)
˛õ¡D©a
;

7080 
j
;

7081 
w
[10];

7082 *
a
;

7083 if–
objc
!=2 ){

7084 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "TYPE");

7085  
TCL_ERROR
;

7087 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iTy≥
ËË 
TCL_ERROR
;

7088  
iTy≥
 ){

7090 
xyz
 = 0x7fffff00 - 
i
;

7091 
xyz
 += 0x100;

7092 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
xyz
));

7096 
w
[1] = 5;

7097 if–
w
[
i
]>0 ) w[1]++;

7098 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
w
[1]));

7102 
a
 = 
	`mÆloc
( ()*10 );

7103 
j
=0; j<10; j++Ë
a
[j] = j;

7104 
	`‰ì
(
a
);

7105 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
a
[
i
]));

7109 
	`T˛_P™ic
("DeliberateÖanic");

7113  
TCL_OK
;

7114 
	}
}

7121 
SQLITE_TCLAPI
 
	$ã°_ªgi°î_db°©_vèb
(

7122 *
˛õ¡D©a
,

7123 
T˛_I¡îp
 *
öãΩ
,

7124 
objc
,

7125 
T˛_Obj
 *
CONST
 
objv
[]

7127 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


7128 
	`T˛_AµídResu…
(
öãΩ
, "dbstatÇotávailable because of "

7130  
TCL_ERROR
;

7132 
	sSqlôeDb
 { 
sqlôe3
 *
db
; };

7133 *
zDb
;

7134 
T˛_CmdInfo
 
cmdInfo
;

7136 if–
objc
!=2 ){

7137 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

7138  
TCL_ERROR
;

7141 
zDb
 = 
	`T˛_GëSåög
(
objv
[1]);

7142 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

7143 
sqlôe3
* 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

7144 
	`sqlôe3Db°©Regi°î
(
db
);

7146  
TCL_OK
;

7148 
	}
}

7155 
SQLITE_TCLAPI
 
	$ã°_sqlôe3_db_c⁄fig
(

7156 *
˛õ¡D©a
,

7157 
T˛_I¡îp
 *
öãΩ
,

7158 
objc
,

7159 
T˛_Obj
 *
CONST
 
objv
[]

7162 c⁄° *
zName
;

7163 
eVÆ
;

7164 } 
aSëtög
[] = {

7165 { "FKEY", 
SQLITE_DBCONFIG_ENABLE_FKEY
 },

7166 { "TRIGGER", 
SQLITE_DBCONFIG_ENABLE_TRIGGER
 },

7167 { "FTS3_TOKENIZER", 
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER
 },

7168 { "LOAD_EXTENSION", 
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION
 },

7170 
i
;

7171 
v
;

7172 c⁄° *
zSëtög
;

7173 
sqlôe3
 *
db
;

7175 if–
objc
!=4 ){

7176 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SETTING VALUE");

7177  
TCL_ERROR
;

7179 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

7180 
zSëtög
 = 
	`T˛_GëSåög
(
objv
[2]);

7181 if–
	`sqlôe3_°rglob
("SQLITE_*", 
zSëtög
)==0 ) zSetting += 7;

7182 if–
	`sqlôe3_°rglob
("DBCONFIG_*", 
zSëtög
)==0 ) zSetting += 9;

7183 if–
	`sqlôe3_°rglob
("ENABLE_*", 
zSëtög
)==0 ) zSetting += 7;

7184 
i
=0; i<
	`AºaySize
(
aSëtög
); i++){

7185 if–
	`°rcmp
(
zSëtög
, 
aSëtög
[
i
].
zName
)==0 ) ;

7187 if–
i
>=
	`AºaySize
(
aSëtög
) ){

7188 
	`T˛_SëObjResu…
(
öãΩ
,

7189 
	`T˛_NewSåögObj
("unknown sqlite3_db_config setting", -1));

7190  
TCL_ERROR
;

7192 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
v
ËË 
TCL_ERROR
;

7193 
	`sqlôe3_db_c⁄fig
(
db
, 
aSëtög
[
i
].
eVÆ
, 
v
, &v);

7194 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
v
));

7195  
TCL_OK
;

7196 
	}
}

7201 
	$Sqlôëe°1_Inô
(
T˛_I¡îp
 *
öãΩ
){

7202 
sqlôe3_£¨ch_cou¡
;

7203 
sqlôe3_found_cou¡
;

7204 
sqlôe3_öãºu±_cou¡
;

7205 
sqlôe3_›í_fûe_cou¡
;

7206 
sqlôe3_s‹t_cou¡
;

7207 
sqlôe3_cuºít_time
;

7208 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


7209 
sqlôe3_ho°id_num
;

7211 
sqlôe3_max_blobsize
;

7212 
SQLITE_TCLAPI
 
	`sqlôe3BåìSh¨edCacheRï‹t
(*,

7213 
T˛_I¡îp
*,,
T˛_Obj
*
CONST
*);

7214 
iZîo
 = 0;

7216 *
zName
;

7217 
T˛_CmdProc
 *
xProc
;

7218 } 
aCmd
[] = {

7219 { "db_íãr", (
T˛_CmdProc
*)
db_íãr
 },

7220 { "db_Àave", (
T˛_CmdProc
*)
db_Àave
 },

7221 { "sqlôe3_m¥ötf_öt", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_öt
 },

7222 { "sqlôe3_m¥ötf_öt64", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_öt64
 },

7223 { "sqlôe3_m¥ötf_l⁄g", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_l⁄g
 },

7224 { "sqlôe3_m¥ötf_°r", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_°r
 },

7225 { "sqlôe3_¢¥ötf_°r", (
T˛_CmdProc
*)
sqlôe3_¢¥ötf_°r
 },

7226 { "sqlôe3_m¥ötf_°r⁄ly", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_°r⁄ly
},

7227 { "sqlôe3_m¥ötf_doubÀ", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_doubÀ
 },

7228 { "sqlôe3_m¥ötf_sˇÀd", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_sˇÀd
 },

7229 { "sqlôe3_m¥ötf_hexdoubÀ", (
T˛_CmdProc
*)
sqlôe3_m¥ötf_hexdoubÀ
},

7230 { "sqlôe3_m¥ötf_z_ã°", (
T˛_CmdProc
*)
ã°_m¥ötf_z
 },

7231 { "sqlôe3_m¥ötf_n_ã°", (
T˛_CmdProc
*)
ã°_m¥ötf_n
 },

7232 { "sqlôe3_¢¥ötf_öt", (
T˛_CmdProc
*)
ã°_¢¥ötf_öt
 },

7233 { "sqlôe3_œ°_ö£π_rowid", (
T˛_CmdProc
*)
ã°_œ°_rowid
 },

7234 { "sqlôe3_exec_¥ötf", (
T˛_CmdProc
*)
ã°_exec_¥ötf
 },

7235 { "sqlôe3_exec_hex", (
T˛_CmdProc
*)
ã°_exec_hex
 },

7236 { "sqlôe3_exec", (
T˛_CmdProc
*)
ã°_exec
 },

7237 { "sqlôe3_exec_ƒ", (
T˛_CmdProc
*)
ã°_exec_ƒ
 },

7238 #i‚de‡
SQLITE_OMIT_GET_TABLE


7239 { "sqlôe3_gë_èbÀ_¥ötf", (
T˛_CmdProc
*)
ã°_gë_èbÀ_¥ötf
 },

7241 { "sqlôe3_˛o£", (
T˛_CmdProc
*)
sqlôe_ã°_˛o£
 },

7242 { "sqlôe3_˛o£_v2", (
T˛_CmdProc
*)
sqlôe_ã°_˛o£_v2
 },

7243 { "sqlôe3_¸óã_fun˘i⁄", (
T˛_CmdProc
*)
ã°_¸óã_fun˘i⁄
 },

7244 { "sqlôe3_¸óã_aggªg©e", (
T˛_CmdProc
*)
ã°_¸óã_aggªg©e
 },

7245 { "sqlôe_ªgi°î_ã°_fun˘i⁄", (
T˛_CmdProc
*)
ã°_ªgi°î_func
 },

7246 { "sqlôe_ab‹t", (
T˛_CmdProc
*)
sqlôe_ab‹t
 },

7247 { "sqlôe_böd", (
T˛_CmdProc
*)
ã°_böd
 },

7248 { "bªakpoöt", (
T˛_CmdProc
*)
ã°_bªakpoöt
 },

7249 { "sqlôe3_key", (
T˛_CmdProc
*)
ã°_key
 },

7250 { "sqlôe3_ªkey", (
T˛_CmdProc
*)
ã°_ªkey
 },

7251 { "sqlôe_£t_magic", (
T˛_CmdProc
*)
sqlôe_£t_magic
 },

7252 { "sqlôe3_öãºu±", (
T˛_CmdProc
*)
ã°_öãºu±
 },

7253 { "sqlôe_dñëe_fun˘i⁄", (
T˛_CmdProc
*)
dñëe_fun˘i⁄
 },

7254 { "sqlôe_dñëe_cﬁœti⁄", (
T˛_CmdProc
*)
dñëe_cﬁœti⁄
 },

7255 { "sqlôe3_gë_autocommô", (
T˛_CmdProc
*)
gë_autocommô
 },

7256 { "sqlôe3_°ack_u£d", (
T˛_CmdProc
*)
ã°_°ack_u£d
 },

7257 { "sqlôe3_busy_timeout", (
T˛_CmdProc
*)
ã°_busy_timeout
 },

7258 { "¥ötf", (
T˛_CmdProc
*)
ã°_¥ötf
 },

7259 { "sqlôe3IoTø˚", (
T˛_CmdProc
*)
ã°_io_åa˚
 },

7260 { "˛™g_ßnôize_addªss", (
T˛_CmdProc
*)
˛™g_ßnôize_addªss
 },

7263 *
zName
;

7264 
T˛_ObjCmdProc
 *
xProc
;

7265 *
˛õ¡D©a
;

7266 } 
aObjCmd
[] = {

7267 { "sqlôe3_db_c⁄fig", 
ã°_sqlôe3_db_c⁄fig
, 0 },

7268 { "bad_behavi‹", 
ã°_bad_behavi‹
, (*)&
iZîo
 },

7269 { "ªgi°î_db°©_vèb", 
ã°_ªgi°î_db°©_vèb
 },

7270 { "sqlôe3_c⁄√˘i⁄_poöãr", 
gë_sqlôe_poöãr
, 0 },

7271 { "öèºay_addr", 
ã°_öèºay_addr
, 0 },

7272 { "öt64¨øy_addr", 
ã°_öt64¨øy_addr
, 0 },

7273 { "doubÀ¨øy_addr", 
ã°_doubÀ¨øy_addr
, 0 },

7274 { "ãxèºay_addr", 
ã°_ãxèºay_addr
, 0 },

7275 { "sqlôe3_böd_öt", 
ã°_böd_öt
, 0 },

7276 { "sqlôe3_böd_zîoblob", 
ã°_böd_zîoblob
, 0 },

7277 { "sqlôe3_böd_zîoblob64", 
ã°_böd_zîoblob64
, 0 },

7278 { "sqlôe3_böd_öt64", 
ã°_böd_öt64
, 0 },

7279 { "sqlôe3_böd_doubÀ", 
ã°_böd_doubÀ
, 0 },

7280 { "sqlôe3_böd_nuŒ", 
ã°_böd_nuŒ
 ,0 },

7281 { "sqlôe3_böd_ãxt", 
ã°_böd_ãxt
 ,0 },

7282 { "sqlôe3_böd_ãxt16", 
ã°_böd_ãxt16
 ,0 },

7283 { "sqlôe3_böd_blob", 
ã°_böd_blob
 ,0 },

7284 { "sqlôe3_böd_∑ømëî_cou¡", 
ã°_böd_∑ømëî_cou¡
, 0},

7285 { "sqlôe3_böd_∑ømëî_«me", 
ã°_böd_∑ømëî_«me
, 0},

7286 { "sqlôe3_böd_∑ømëî_ödex", 
ã°_böd_∑ømëî_ödex
, 0},

7287 { "sqlôe3_˛ór_bödögs", 
ã°_˛ór_bödögs
, 0},

7288 { "sqlôe3_¶ìp", 
ã°_¶ìp
, 0},

7289 { "sqlôe3_îrcode", 
ã°_îrcode
 ,0 },

7290 { "sqlôe3_exãnded_îrcode", 
ã°_ex_îrcode
 ,0 },

7291 { "sqlôe3_îrmsg", 
ã°_îrmsg
 ,0 },

7292 { "sqlôe3_îrmsg16", 
ã°_îrmsg16
 ,0 },

7293 { "sqlôe3_›í", 
ã°_›í
 ,0 },

7294 { "sqlôe3_›í16", 
ã°_›í16
 ,0 },

7295 { "sqlôe3_›í_v2", 
ã°_›í_v2
 ,0 },

7296 { "sqlôe3_com∂ëe16", 
ã°_com∂ëe16
 ,0 },

7298 { "sqlôe3_¥ï¨e", 
ã°_¥ï¨e
 ,0 },

7299 { "sqlôe3_¥ï¨e16", 
ã°_¥ï¨e16
 ,0 },

7300 { "sqlôe3_¥ï¨e_v2", 
ã°_¥ï¨e_v2
 ,0 },

7301 { "sqlôe3_¥ï¨e_tkt3134", 
ã°_¥ï¨e_tkt3134
, 0},

7302 { "sqlôe3_¥ï¨e16_v2", 
ã°_¥ï¨e16_v2
 ,0 },

7303 { "sqlôe3_föÆize", 
ã°_föÆize
 ,0 },

7304 { "sqlôe3_°mt_°©us", 
ã°_°mt_°©us
 ,0 },

7305 { "sqlôe3_ª£t", 
ã°_ª£t
 ,0 },

7306 { "sqlôe3_expúed", 
ã°_expúed
 ,0 },

7307 { "sqlôe3_å™s„r_bödögs", 
ã°_å™s„r_böd
 ,0 },

7308 { "sqlôe3_ch™ges", 
ã°_ch™ges
 ,0 },

7309 { "sqlôe3_°ï", 
ã°_°ï
 ,0 },

7310 { "sqlôe3_sql", 
ã°_sql
 ,0 },

7311 { "sqlôe3_ex∑nded_sql", 
ã°_ex_sql
 ,0 },

7312 { "sqlôe3_√xt_°mt", 
ã°_√xt_°mt
 ,0 },

7313 { "sqlôe3_°mt_ªad⁄ly", 
ã°_°mt_ªad⁄ly
 ,0 },

7314 { "sqlôe3_°mt_busy", 
ã°_°mt_busy
 ,0 },

7315 { "u£s_°mt_jou∫Æ", 
u£s_°mt_jou∫Æ
 ,0 },

7317 { "sqlôe3_ªÀa£_mem‹y", 
ã°_ªÀa£_mem‹y
, 0},

7318 { "sqlôe3_db_ªÀa£_mem‹y", 
ã°_db_ªÀa£_mem‹y
, 0},

7319 { "sqlôe3_db_ˇcheÊush", 
ã°_db_ˇcheÊush
, 0},

7320 { "sqlôe3_sy°em_î∫o", 
ã°_sy°em_î∫o
, 0},

7321 { "sqlôe3_db_fûíame", 
ã°_db_fûíame
, 0},

7322 { "sqlôe3_db_ªad⁄ly", 
ã°_db_ªad⁄ly
, 0},

7323 { "sqlôe3_so·_hóp_limô", 
ã°_so·_hóp_limô
, 0},

7324 { "sqlôe3_thªad_˛ónup", 
ã°_thªad_˛ónup
, 0},

7325 { "sqlôe3_∑gî_ªfcou¡s", 
ã°_∑gî_ªfcou¡s
, 0},

7327 { "sqlôe3_lﬂd_exãnsi⁄", 
ã°_lﬂd_exãnsi⁄
, 0},

7328 { "sqlôe3_íabÀ_lﬂd_exãnsi⁄", 
ã°_íabÀ_lﬂd
, 0},

7329 { "sqlôe3_exãnded_ªsu…_codes", 
ã°_exãnded_ªsu…_codes
, 0},

7330 { "sqlôe3_limô", 
ã°_limô
, 0},

7332 { "ßve_¥ng_°©e", 
ßve_¥ng_°©e
, 0 },

7333 { "ª°‹e_¥ng_°©e", 
ª°‹e_¥ng_°©e
, 0 },

7334 { "ª£t_¥ng_°©e", 
ª£t_¥ng_°©e
, 0 },

7335 { "d©aba£_√vî_c‹ru±", 
d©aba£_√vî_c‹ru±
, 0},

7336 { "d©aba£_may_be_c‹ru±", 
d©aba£_may_be_c‹ru±
, 0},

7337 { "›timiz©i⁄_c⁄åﬁ", 
›timiz©i⁄_c⁄åﬁ
,0},

7338 #i‡
SQLITE_OS_WIN


7339 { "lock_wö32_fûe", 
wö32_fûe_lock
, 0 },

7340 { "exi°s_wö32_∑th", 
wö32_exi°s_∑th
, 0 },

7341 { "föd_wö32_fûe", 
wö32_föd_fûe
, 0 },

7342 { "dñëe_wö32_fûe", 
wö32_dñëe_fûe
, 0 },

7343 { "make_wö32_dú", 
wö32_mkdú
, 0 },

7344 { "ªmove_wö32_dú", 
wö32_rmdú
, 0 },

7346 { "t˛_obj¥oc", 
runAsObjProc
, 0 },

7349 { "sqlôe3_cﬁumn_cou¡", 
ã°_cﬁumn_cou¡
 ,0 },

7350 { "sqlôe3_d©a_cou¡", 
ã°_d©a_cou¡
 ,0 },

7351 { "sqlôe3_cﬁumn_ty≥", 
ã°_cﬁumn_ty≥
 ,0 },

7352 { "sqlôe3_cﬁumn_blob", 
ã°_cﬁumn_blob
 ,0 },

7353 { "sqlôe3_cﬁumn_doubÀ", 
ã°_cﬁumn_doubÀ
 ,0 },

7354 { "sqlôe3_cﬁumn_öt64", 
ã°_cﬁumn_öt64
 ,0 },

7355 { "sqlôe3_cﬁumn_ãxt", 
ã°_°mt_utf8
, (*)
sqlôe3_cﬁumn_ãxt
 },

7356 { "sqlôe3_cﬁumn_«me", 
ã°_°mt_utf8
, (*)
sqlôe3_cﬁumn_«me
 },

7357 { "sqlôe3_cﬁumn_öt", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_öt
 },

7358 { "sqlôe3_cﬁumn_byãs", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_byãs
},

7359 #i‚de‡
SQLITE_OMIT_DECLTYPE


7360 { "sqlôe3_cﬁumn_de˛ty≥",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_de˛ty≥
},

7362 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


7363 { "sqlôe3_cﬁumn_d©aba£_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_d©aba£_«me
},

7364 { "sqlôe3_cﬁumn_èbÀ_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_èbÀ_«me
},

7365 { "sqlôe3_cﬁumn_‹igö_«me",
ã°_°mt_utf8
,(*)
sqlôe3_cﬁumn_‹igö_«me
},

7368 #i‚de‡
SQLITE_OMIT_UTF16


7369 { "sqlôe3_cﬁumn_byãs16", 
ã°_°mt_öt
, (*)
sqlôe3_cﬁumn_byãs16
 },

7370 { "sqlôe3_cﬁumn_ãxt16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_ãxt16
},

7371 { "sqlôe3_cﬁumn_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_«me16
},

7372 { "add_Æignmít_ã°_cﬁœti⁄s", 
add_Æignmít_ã°_cﬁœti⁄s
, 0 },

7373 #i‚de‡
SQLITE_OMIT_DECLTYPE


7374 { "sqlôe3_cﬁumn_de˛ty≥16",
ã°_°mt_utf16
,(*)
sqlôe3_cﬁumn_de˛ty≥16
},

7376 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


7378 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_d©aba£_«me16
},

7379 {"sqlôe3_cﬁumn_èbÀ_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_èbÀ_«me16
},

7380 {"sqlôe3_cﬁumn_‹igö_«me16", 
ã°_°mt_utf16
, (*)
sqlôe3_cﬁumn_‹igö_«me16
},

7383 { "sqlôe3_¸óã_cﬁœti⁄_v2", 
ã°_¸óã_cﬁœti⁄_v2
, 0 },

7384 { "sqlôe3_globÆ_ªcovî", 
ã°_globÆ_ªcovî
, 0 },

7385 { "w‹kög_64bô_öt", 
w‹kög_64bô_öt
, 0 },

7386 { "vfs_u∆ök_ã°", 
vfs_u∆ök_ã°
, 0 },

7387 { "vfs_öôÁû_ã°", 
vfs_öôÁû_ã°
, 0 },

7388 { "vfs_uƒegi°î_Æl", 
vfs_uƒegi°î_Æl
, 0 },

7389 { "vfs_ªªgi°î_Æl", 
vfs_ªªgi°î_Æl
, 0 },

7390 { "fûe_c⁄åﬁ_ã°", 
fûe_c⁄åﬁ_ã°
, 0 },

7391 { "fûe_c⁄åﬁ_œ°î∫o_ã°", 
fûe_c⁄åﬁ_œ°î∫o_ã°
, 0 },

7392 { "fûe_c⁄åﬁ_lock¥oxy_ã°", 
fûe_c⁄åﬁ_lock¥oxy_ã°
, 0 },

7393 { "fûe_c⁄åﬁ_chunksize_ã°", 
fûe_c⁄åﬁ_chunksize_ã°
, 0 },

7394 { "fûe_c⁄åﬁ_sizehöt_ã°", 
fûe_c⁄åﬁ_sizehöt_ã°
, 0 },

7395 #i‡
SQLITE_OS_WIN


7396 { "fûe_c⁄åﬁ_wö32_av_ªåy", 
fûe_c⁄åﬁ_wö32_av_ªåy
, 0 },

7397 { "fûe_c⁄åﬁ_wö32_£t_h™dÀ", 
fûe_c⁄åﬁ_wö32_£t_h™dÀ
, 0 },

7399 { "fûe_c⁄åﬁ_≥rsi°_wÆ", 
fûe_c⁄åﬁ_≥rsi°_wÆ
, 0 },

7400 { "fûe_c⁄åﬁ_powîß„_ovîwrôe",
fûe_c⁄åﬁ_powîß„_ovîwrôe
,0},

7401 { "fûe_c⁄åﬁ_vf¢ame", 
fûe_c⁄åﬁ_vf¢ame
, 0 },

7402 { "fûe_c⁄åﬁ_ãmpfûíame", 
fûe_c⁄åﬁ_ãmpfûíame
, 0 },

7403 { "sqlôe3_vfs_li°", 
vfs_li°
, 0 },

7404 { "sqlôe3_¸óã_fun˘i⁄_v2", 
ã°_¸óã_fun˘i⁄_v2
, 0 },

7407 #i‚de‡
SQLITE_OMIT_UTF16


7408 { "add_ã°_cﬁœã", 
ã°_cﬁœã
, 0 },

7409 { "add_ã°_cﬁœã_√eded", 
ã°_cﬁœã_√eded
, 0 },

7410 { "add_ã°_fun˘i⁄", 
ã°_fun˘i⁄
, 0 },

7411 { "add_ã°_utf16bö_cﬁœã", 
ã°_utf16bö_cﬁœã
, 0 },

7413 { "sqlôe3_ã°_îr°r", 
ã°_îr°r
, 0 },

7414 { "t˛_v¨übÀ_ty≥", 
t˛_v¨übÀ_ty≥
, 0 },

7415 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


7416 { "sqlôe3_íabÀ_sh¨ed_ˇche", 
ã°_íabÀ_sh¨ed
, 0 },

7417 { "sqlôe3_sh¨ed_ˇche_ªp‹t", 
sqlôe3BåìSh¨edCacheRï‹t
, 0},

7419 { "sqlôe3_libvîsi⁄_numbî", 
ã°_libvîsi⁄_numbî
, 0 },

7420 { "sqlôe3_èbÀ_cﬁumn_mëad©a", 
ã°_èbÀ_cﬁumn_mëad©a
, 0 },

7421 #i‚de‡
SQLITE_OMIT_INCRBLOB


7422 { "sqlôe3_blob_ª›í", 
ã°_blob_ª›í
, 0 },

7424 { "pˇche_°©s", 
ã°_pˇche_°©s
, 0 },

7425 #ifde‡
SQLITE_ENABLE_UNLOCK_NOTIFY


7426 { "sqlôe3_u∆ock_nŸify", 
ã°_u∆ock_nŸify
, 0 },

7428 { "sqlôe3_wÆ_checkpoöt", 
ã°_wÆ_checkpoöt
, 0 },

7429 { "sqlôe3_wÆ_checkpoöt_v2",
ã°_wÆ_checkpoöt_v2
, 0 },

7430 { "sqlôe3_wÆ_autocheckpoöt",
ã°_wÆ_autocheckpoöt
, 0 },

7431 { "ã°_sqlôe3_log", 
ã°_sqlôe3_log
, 0 },

7432 #i‚de‡
SQLITE_OMIT_EXPLAIN


7433 { "¥öt_ex∂aö_quîy_∂™", 
ã°_¥öt_eqp
, 0 },

7435 { "sqlôe3_ã°_c⁄åﬁ", 
ã°_ã°_c⁄åﬁ
 },

7436 #i‡
SQLITE_OS_UNIX


7437 { "gërußge", 
ã°_gërußge
 },

7439 { "lﬂd_°©ic_exãnsi⁄", 
t˛LﬂdSèticExãnsi⁄Cmd
 },

7440 { "s‹ãr_ã°_Ákehóp", 
s‹ãr_ã°_Ákehóp
 },

7441 { "s‹ãr_ã°_s‹t4_hñ≥r", 
s‹ãr_ã°_s‹t4_hñ≥r
 },

7442 #ifde‡
SQLITE_USER_AUTHENTICATION


7443 { "sqlôe3_u£r_authítiˇã", 
ã°_u£r_authítiˇã
, 0 },

7444 { "sqlôe3_u£r_add", 
ã°_u£r_add
, 0 },

7445 { "sqlôe3_u£r_ch™ge", 
ã°_u£r_ch™ge
, 0 },

7446 { "sqlôe3_u£r_dñëe", 
ã°_u£r_dñëe
, 0 },

7448 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


7449 { "sqlôe3_°mt_sˇn°©us", 
ã°_°mt_sˇn°©us
, 0 },

7450 { "sqlôe3_°mt_sˇn°©us_ª£t", 
ã°_°mt_sˇn°©us_ª£t
, 0 },

7452 #ifde‡
SQLITE_ENABLE_SQLLOG


7453 { "sqlôe3_c⁄fig_sqŒog", 
ã°_c⁄fig_sqŒog
, 0 },

7455 { "vfs_cuºít_time_öt64", 
vfsCuºítTimeI¡64
, 0 },

7456 #ifde‡
SQLITE_ENABLE_SNAPSHOT


7457 { "sqlôe3_¢≠shŸ_gë", 
ã°_¢≠shŸ_gë
, 0 },

7458 { "sqlôe3_¢≠shŸ_›í", 
ã°_¢≠shŸ_›í
, 0 },

7459 { "sqlôe3_¢≠shŸ_‰ì", 
ã°_¢≠shŸ_‰ì
, 0 },

7460 { "sqlôe3_¢≠shŸ_cmp", 
ã°_¢≠shŸ_cmp
, 0 },

7463 
bômask_size
 = (
Bômask
)*8;

7464 
l⁄gdoubÀ_size
 = (
LONGDOUBLE_TYPE
);

7465 
i
;

7466 
sqlôe3_sync_cou¡
, 
sqlôe3_fuŒsync_cou¡
;

7467 
sqlôe3_›íãmp_cou¡
;

7468 
sqlôe3_like_cou¡
;

7469 
sqlôe3_x„r›t_cou¡
;

7470 
sqlôe3_∑gî_ªaddb_cou¡
;

7471 
sqlôe3_∑gî_wrôedb_cou¡
;

7472 
sqlôe3_∑gî_wrôej_cou¡
;

7473 #i‡
SQLITE_OS_WIN


7474 
LONG
 vﬁ©ûê
sqlôe3_os_ty≥
;

7476 #ifde‡
SQLITE_DEBUG


7477 
sqlôe3WhîeTø˚
;

7478 
sqlôe3OSTø˚
;

7479 
sqlôe3WÆTø˚
;

7481 #ifde‡
SQLITE_TEST


7482 #ifde‡
SQLITE_ENABLE_FTS3


7483 
sqlôe3_·s3_íabÀ_∑ª¡he£s
;

7487 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

7488 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

7490 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

7491 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

7492 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

7494 
	`T˛_LökV¨
(
öãΩ
, "sqlite_search_count",

7495 (*)&
sqlôe3_£¨ch_cou¡
, 
TCL_LINK_INT
);

7496 
	`T˛_LökV¨
(
öãΩ
, "sqlite_found_count",

7497 (*)&
sqlôe3_found_cou¡
, 
TCL_LINK_INT
);

7498 
	`T˛_LökV¨
(
öãΩ
, "sqlite_sort_count",

7499 (*)&
sqlôe3_s‹t_cou¡
, 
TCL_LINK_INT
);

7500 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_max_blobsize",

7501 (*)&
sqlôe3_max_blobsize
, 
TCL_LINK_INT
);

7502 
	`T˛_LökV¨
(
öãΩ
, "sqlite_like_count",

7503 (*)&
sqlôe3_like_cou¡
, 
TCL_LINK_INT
);

7504 
	`T˛_LökV¨
(
öãΩ
, "sqlite_interrupt_count",

7505 (*)&
sqlôe3_öãºu±_cou¡
, 
TCL_LINK_INT
);

7506 
	`T˛_LökV¨
(
öãΩ
, "sqlite_open_file_count",

7507 (*)&
sqlôe3_›í_fûe_cou¡
, 
TCL_LINK_INT
);

7508 
	`T˛_LökV¨
(
öãΩ
, "sqlite_current_time",

7509 (*)&
sqlôe3_cuºít_time
, 
TCL_LINK_INT
);

7510 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
__APPLE__
Ë&& 
SQLITE_ENABLE_LOCKING_STYLE


7511 
	`T˛_LökV¨
(
öãΩ
, "sqlite_hostid_num",

7512 (*)&
sqlôe3_ho°id_num
, 
TCL_LINK_INT
);

7514 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_xferopt_count",

7515 (*)&
sqlôe3_x„r›t_cou¡
, 
TCL_LINK_INT
);

7516 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_readdb_count",

7517 (*)&
sqlôe3_∑gî_ªaddb_cou¡
, 
TCL_LINK_INT
);

7518 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_writedb_count",

7519 (*)&
sqlôe3_∑gî_wrôedb_cou¡
, 
TCL_LINK_INT
);

7520 
	`T˛_LökV¨
(
öãΩ
, "sqlite3_pager_writej_count",

7521 (*)&
sqlôe3_∑gî_wrôej_cou¡
, 
TCL_LINK_INT
);

7522 #i‚de‡
SQLITE_OMIT_UTF16


7523 
	`T˛_LökV¨
(
öãΩ
, "unaligned_string_counter",

7524 (*)&
u«lig√d_°rög_cou¡î
, 
TCL_LINK_INT
);

7526 #i‚de‡
SQLITE_OMIT_UTF16


7527 
	`T˛_LökV¨
(
öãΩ
, "sqlite_last_needed_collation",

7528 (*)&
pzNìdedCﬁœti⁄
, 
TCL_LINK_STRING
|
TCL_LINK_READ_ONLY
);

7530 #i‡
SQLITE_OS_WIN


7531 
	`T˛_LökV¨
(
öãΩ
, "sqlite_os_type",

7532 (*)&
sqlôe3_os_ty≥
, 
TCL_LINK_LONG
);

7534 #ifde‡
SQLITE_TEST


7536 c⁄° *
quîy_∂™
 = "*** OBSOLETE VARIABLE ***";

7537 
	`T˛_LökV¨
(
öãΩ
, "sqlite_query_plan",

7538 (*)&
quîy_∂™
, 
TCL_LINK_STRING
|
TCL_LINK_READ_ONLY
);

7541 #ifde‡
SQLITE_DEBUG


7542 
	`T˛_LökV¨
(
öãΩ
, "sqlite_where_trace",

7543 (*)&
sqlôe3WhîeTø˚
, 
TCL_LINK_INT
);

7544 
	`T˛_LökV¨
(
öãΩ
, "sqlite_os_trace",

7545 (*)&
sqlôe3OSTø˚
, 
TCL_LINK_INT
);

7546 #i‚de‡
SQLITE_OMIT_WAL


7547 
	`T˛_LökV¨
(
öãΩ
, "sqlite_wal_trace",

7548 (*)&
sqlôe3WÆTø˚
, 
TCL_LINK_INT
);

7551 #i‚de‡
SQLITE_OMIT_DISKIO


7552 
	`T˛_LökV¨
(
öãΩ
, "sqlite_opentemp_count",

7553 (*)&
sqlôe3_›íãmp_cou¡
, 
TCL_LINK_INT
);

7555 
	`T˛_LökV¨
(
öãΩ
, "sqlite_static_bind_value",

7556 (*)&
sqlôe_°©ic_böd_vÆue
, 
TCL_LINK_STRING
);

7557 
	`T˛_LökV¨
(
öãΩ
, "sqlite_static_bind_nbyte",

7558 (*)&
sqlôe_°©ic_böd_nbyã
, 
TCL_LINK_INT
);

7559 
	`T˛_LökV¨
(
öãΩ
, "sqlite_temp_directory",

7560 (*)&
sqlôe3_ãmp_dúe˘‹y
, 
TCL_LINK_STRING
);

7561 
	`T˛_LökV¨
(
öãΩ
, "sqlite_data_directory",

7562 (*)&
sqlôe3_d©a_dúe˘‹y
, 
TCL_LINK_STRING
);

7563 
	`T˛_LökV¨
(
öãΩ
, "bitmask_size",

7564 (*)&
bômask_size
, 
TCL_LINK_INT
|
TCL_LINK_READ_ONLY
);

7565 
	`T˛_LökV¨
(
öãΩ
, "longdouble_size",

7566 (*)&
l⁄gdoubÀ_size
, 
TCL_LINK_INT
|
TCL_LINK_READ_ONLY
);

7567 
	`T˛_LökV¨
(
öãΩ
, "sqlite_sync_count",

7568 (*)&
sqlôe3_sync_cou¡
, 
TCL_LINK_INT
);

7569 
	`T˛_LökV¨
(
öãΩ
, "sqlite_fullsync_count",

7570 (*)&
sqlôe3_fuŒsync_cou¡
, 
TCL_LINK_INT
);

7571 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë&& deföed(
SQLITE_TEST
)

7572 
	`T˛_LökV¨
(
öãΩ
, "sqlite_fts3_enable_parentheses",

7573 (*)&
sqlôe3_·s3_íabÀ_∑ª¡he£s
, 
TCL_LINK_INT
);

7575  
TCL_OK
;

7576 
	}
}

	@test2.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<˘y≥.h
>

26 c⁄° *
sqlôe3EºName
();

31 
	gã°_∑gesize
 = 1024;

36 
	$∑gî_ã°_ªöôî
(
DbPage
 *
pNŸU£d
){

38 
	}
}

45 
SQLITE_TCLAPI
 
	$∑gî_›í
(

46 *
NŸU£d
,

47 
T˛_I¡îp
 *
öãΩ
,

48 
¨gc
,

49 c⁄° **
¨gv


51 
u32
 
∑geSize
;

52 
Pagî
 *
pPagî
;

53 
nPage
;

54 
rc
;

55 
zBuf
[100];

56 if–
¨gc
!=3 ){

57 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

59  
TCL_ERROR
;

61 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nPage
ËË 
TCL_ERROR
;

62 
rc
 = 
	`sqlôe3PagîO≥n
(
	`sqlôe3_vfs_föd
(0), &
pPagî
, 
¨gv
[1], 0, 0,

63 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MAIN_DB
,

64 
∑gî_ã°_ªöôî
);

65 if–
rc
!=
SQLITE_OK
 ){

66 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

67  
TCL_ERROR
;

69 
	`sqlôe3PagîSëCachesize
(
pPagî
, 
nPage
);

70 
∑geSize
 = 
ã°_∑gesize
;

71 
	`sqlôe3PagîSëPagesize
(
pPagî
, &
∑geSize
, -1);

72 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPagî
);

73 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

74  
TCL_OK
;

75 
	}
}

82 
SQLITE_TCLAPI
 
	$∑gî_˛o£
(

83 *
NŸU£d
,

84 
T˛_I¡îp
 *
öãΩ
,

85 
¨gc
,

86 c⁄° **
¨gv


88 
Pagî
 *
pPagî
;

89 
rc
;

90 if–
¨gc
!=2 ){

91 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

93  
TCL_ERROR
;

95 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

96 
rc
 = 
	`sqlôe3PagîClo£
(
pPagî
);

97 if–
rc
!=
SQLITE_OK
 ){

98 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

99  
TCL_ERROR
;

101  
TCL_OK
;

102 
	}
}

109 
SQLITE_TCLAPI
 
	$∑gî_rﬁlback
(

110 *
NŸU£d
,

111 
T˛_I¡îp
 *
öãΩ
,

112 
¨gc
,

113 c⁄° **
¨gv


115 
Pagî
 *
pPagî
;

116 
rc
;

117 if–
¨gc
!=2 ){

118 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

120  
TCL_ERROR
;

122 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

123 
rc
 = 
	`sqlôe3PagîRﬁlback
(
pPagî
);

124 if–
rc
!=
SQLITE_OK
 ){

125 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

126  
TCL_ERROR
;

128  
TCL_OK
;

129 
	}
}

136 
SQLITE_TCLAPI
 
	$∑gî_commô
(

137 *
NŸU£d
,

138 
T˛_I¡îp
 *
öãΩ
,

139 
¨gc
,

140 c⁄° **
¨gv


142 
Pagî
 *
pPagî
;

143 
rc
;

144 if–
¨gc
!=2 ){

145 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

147  
TCL_ERROR
;

149 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

150 
rc
 = 
	`sqlôe3PagîCommôPha£O√
(
pPagî
, 0, 0);

151 if–
rc
!=
SQLITE_OK
 ){

152 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

153  
TCL_ERROR
;

155 
rc
 = 
	`sqlôe3PagîCommôPha£Two
(
pPagî
);

156 if–
rc
!=
SQLITE_OK
 ){

157 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

158  
TCL_ERROR
;

160  
TCL_OK
;

161 
	}
}

168 
SQLITE_TCLAPI
 
	$∑gî_°mt_begö
(

169 *
NŸU£d
,

170 
T˛_I¡îp
 *
öãΩ
,

171 
¨gc
,

172 c⁄° **
¨gv


174 
Pagî
 *
pPagî
;

175 
rc
;

176 if–
¨gc
!=2 ){

177 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

179  
TCL_ERROR
;

181 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

182 
rc
 = 
	`sqlôe3PagîO≥nSavïoöt
(
pPagî
, 1);

183 if–
rc
!=
SQLITE_OK
 ){

184 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

185  
TCL_ERROR
;

187  
TCL_OK
;

188 
	}
}

195 
SQLITE_TCLAPI
 
	$∑gî_°mt_rﬁlback
(

196 *
NŸU£d
,

197 
T˛_I¡îp
 *
öãΩ
,

198 
¨gc
,

199 c⁄° **
¨gv


201 
Pagî
 *
pPagî
;

202 
rc
;

203 if–
¨gc
!=2 ){

204 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

206  
TCL_ERROR
;

208 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

209 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_ROLLBACK
, 0);

210 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_RELEASE
, 0);

211 if–
rc
!=
SQLITE_OK
 ){

212 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

213  
TCL_ERROR
;

215  
TCL_OK
;

216 
	}
}

223 
SQLITE_TCLAPI
 
	$∑gî_°mt_commô
(

224 *
NŸU£d
,

225 
T˛_I¡îp
 *
öãΩ
,

226 
¨gc
,

227 c⁄° **
¨gv


229 
Pagî
 *
pPagî
;

230 
rc
;

231 if–
¨gc
!=2 ){

232 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

234  
TCL_ERROR
;

236 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

237 
rc
 = 
	`sqlôe3PagîSavïoöt
(
pPagî
, 
SAVEPOINT_RELEASE
, 0);

238 if–
rc
!=
SQLITE_OK
 ){

239 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

240  
TCL_ERROR
;

242  
TCL_OK
;

243 
	}
}

250 
SQLITE_TCLAPI
 
	$∑gî_°©s
(

251 *
NŸU£d
,

252 
T˛_I¡îp
 *
öãΩ
,

253 
¨gc
,

254 c⁄° **
¨gv


256 
Pagî
 *
pPagî
;

257 
i
, *
a
;

258 if–
¨gc
!=2 ){

259 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

261  
TCL_ERROR
;

263 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

264 
a
 = 
	`sqlôe3PagîSèts
(
pPagî
);

265 
i
=0; i<9; i++){

266 *
zName
[] = {

270 
zBuf
[100];

271 
	`T˛_AµídEÀmít
(
öãΩ
, 
zName
[
i
]);

272 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
a
[
i
]);

273 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

275  
TCL_OK
;

276 
	}
}

283 
SQLITE_TCLAPI
 
	$∑gî_∑gecou¡
(

284 *
NŸU£d
,

285 
T˛_I¡îp
 *
öãΩ
,

286 
¨gc
,

287 c⁄° **
¨gv


289 
Pagî
 *
pPagî
;

290 
zBuf
[100];

291 
nPage
;

292 if–
¨gc
!=2 ){

293 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

295  
TCL_ERROR
;

297 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

298 
	`sqlôe3PagîPagecou¡
(
pPagî
, &
nPage
);

299 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
nPage
);

300 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

301  
TCL_OK
;

302 
	}
}

309 
SQLITE_TCLAPI
 
	$∑ge_gë
(

310 *
NŸU£d
,

311 
T˛_I¡îp
 *
öãΩ
,

312 
¨gc
,

313 c⁄° **
¨gv


315 
Pagî
 *
pPagî
;

316 
zBuf
[100];

317 
DbPage
 *
pPage
 = 0;

318 
pgno
;

319 
rc
;

320 if–
¨gc
!=3 ){

321 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

323  
TCL_ERROR
;

325 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

326 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

327 
rc
 = 
	`sqlôe3PagîSh¨edLock
(
pPagî
);

328 if–
rc
==
SQLITE_OK
 ){

329 
rc
 = 
	`sqlôe3PagîGë
(
pPagî
, 
pgno
, &
pPage
, 0);

331 if–
rc
!=
SQLITE_OK
 ){

332 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

333  
TCL_ERROR
;

335 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPage
);

336 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

337  
TCL_OK
;

338 
	}
}

346 
SQLITE_TCLAPI
 
	$∑ge_lookup
(

347 *
NŸU£d
,

348 
T˛_I¡îp
 *
öãΩ
,

349 
¨gc
,

350 c⁄° **
¨gv


352 
Pagî
 *
pPagî
;

353 
zBuf
[100];

354 
DbPage
 *
pPage
;

355 
pgno
;

356 if–
¨gc
!=3 ){

357 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

359  
TCL_ERROR
;

361 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

362 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

363 
pPage
 = 
	`sqlôe3PagîLookup
(
pPagî
, 
pgno
);

364 if–
pPage
 ){

365 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%p",
pPage
);

366 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

368  
TCL_OK
;

369 
	}
}

374 
SQLITE_TCLAPI
 
	$∑gî_åunˇã
(

375 *
NŸU£d
,

376 
T˛_I¡îp
 *
öãΩ
,

377 
¨gc
,

378 c⁄° **
¨gv


380 
Pagî
 *
pPagî
;

381 
pgno
;

382 if–
¨gc
!=3 ){

383 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

385  
TCL_ERROR
;

387 
pPagî
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

388 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
pgno
ËË 
TCL_ERROR
;

389 
	`sqlôe3PagîTrunˇãImage
(
pPagî
, 
pgno
);

390  
TCL_OK
;

391 
	}
}

399 
SQLITE_TCLAPI
 
	$∑ge_uƒef
(

400 *
NŸU£d
,

401 
T˛_I¡îp
 *
öãΩ
,

402 
¨gc
,

403 c⁄° **
¨gv


405 
DbPage
 *
pPage
;

406 if–
¨gc
!=2 ){

407 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

409  
TCL_ERROR
;

411 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

412 
	`sqlôe3PagîUƒef
(
pPage
);

413  
TCL_OK
;

414 
	}
}

421 
SQLITE_TCLAPI
 
	$∑ge_ªad
(

422 *
NŸU£d
,

423 
T˛_I¡îp
 *
öãΩ
,

424 
¨gc
,

425 c⁄° **
¨gv


427 
zBuf
[100];

428 
DbPage
 *
pPage
;

429 if–
¨gc
!=2 ){

430 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

432  
TCL_ERROR
;

434 
pPage
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

435 
	`mem˝y
(
zBuf
, 
	`sqlôe3PagîGëD©a
(
pPage
), (zBuf));

436 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

437  
TCL_OK
;

438 
	}
}

445 
SQLITE_TCLAPI
 
	$∑ge_numbî
(

446 *
NŸU£d
,

447 
T˛_I¡îp
 *
öãΩ
,

448 
¨gc
,

449 c⁄° **
¨gv


451 
zBuf
[100];

452 
DbPage
 *
pPage
;

453 if–
¨gc
!=2 ){

454 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

456  
TCL_ERROR
;

458 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

459 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
	`sqlôe3PagîPagíumbî
(
pPage
));

460 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

461  
TCL_OK
;

462 
	}
}

469 
SQLITE_TCLAPI
 
	$∑ge_wrôe
(

470 *
NŸU£d
,

471 
T˛_I¡îp
 *
öãΩ
,

472 
¨gc
,

473 c⁄° **
¨gv


475 
DbPage
 *
pPage
;

476 *
pD©a
;

477 
rc
;

478 if–
¨gc
!=3 ){

479 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

481  
TCL_ERROR
;

483 
pPage
 = (
DbPage
 *)
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

484 
rc
 = 
	`sqlôe3PagîWrôe
(
pPage
);

485 if–
rc
!=
SQLITE_OK
 ){

486 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

487  
TCL_ERROR
;

489 
pD©a
 = 
	`sqlôe3PagîGëD©a
(
pPage
);

490 
	`°∫˝y
(
pD©a
, 
¨gv
[2], 
ã°_∑gesize
-1);

491 
pD©a
[
ã°_∑gesize
-1] = 0;

492  
TCL_OK
;

493 
	}
}

495 #i‚de‡
SQLITE_OMIT_DISKIO


505 
SQLITE_TCLAPI
 
	$Áke_big_fûe
(

506 *
NŸU£d
,

507 
T˛_I¡îp
 *
öãΩ
,

508 
¨gc
,

509 c⁄° **
¨gv


511 
sqlôe3_vfs
 *
pVfs
;

512 
sqlôe3_fûe
 *
fd
 = 0;

513 
rc
;

514 
n
;

515 
i64
 
off£t
;

516 *
zFûe
;

517 
nFûe
;

518 if–
¨gc
!=3 ){

519 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

521  
TCL_ERROR
;

523 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
n
ËË 
TCL_ERROR
;

525 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

526 
nFûe
 = ()
	`°æí
(
¨gv
[2]);

527 
zFûe
 = 
	`sqlôe3_mÆloc
–
nFûe
+2 );

528 if–
zFûe
==0 )  
TCL_ERROR
;

529 
	`mem˝y
(
zFûe
, 
¨gv
[2], 
nFûe
+1);

530 
zFûe
[
nFûe
+1] = 0;

531 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
pVfs
, 
zFûe
, &
fd
,

532 (
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MAIN_DB
), 0

534 if–
rc
 ){

535 
	`T˛_AµídResu…
(
öãΩ
, "›í faûed: ", 
	`sqlôe3EºName
(
rc
), 0);

536 
	`sqlôe3_‰ì
(
zFûe
);

537  
TCL_ERROR
;

539 
off£t
 = 
n
;

540 
off£t
 *= 1024*1024;

541 
rc
 = 
	`sqlôe3OsWrôe
(
fd
, "Hñlo, W‹ld!", 14, 
off£t
);

542 
	`sqlôe3OsClo£Fªe
(
fd
);

543 
	`sqlôe3_‰ì
(
zFûe
);

544 if–
rc
 ){

545 
	`T˛_AµídResu…
(
öãΩ
, "wrôêÁûed: ", 
	`sqlôe3EºName
(
rc
), 0);

546  
TCL_ERROR
;

548  
TCL_OK
;

549 
	}
}

558 
SQLITE_TCLAPI
 
	$ã°PídögByã
(

559 *
NŸU£d
,

560 
T˛_I¡îp
 *
öãΩ
,

561 
¨gc
,

562 c⁄° **
¨gv


564 
pbyã
;

565 
rc
;

566 if–
¨gc
!=2 ){

567 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

569  
TCL_ERROR
;

571 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
pbyã
ËË 
TCL_ERROR
;

572 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_PENDING_BYTE
, 
pbyã
);

573 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

574  
TCL_OK
;

575 
	}
}

580 
T˛_I¡îp
 *
	gÁu…SimI¡îp
 = 0;

581 
	gÁu…SimS¸ùtSize
 = 0;

582 *
	gÁu…SimS¸ùt
;

583 
	$Áu…SimCÆlback
(
x
){

584 
zI¡
[30];

585 
i
;

586 
isNeg
;

587 
rc
;

588 if–
x
==0 ){

589 
	`mem˝y
(
Áu…SimS¸ùt
+
Áu…SimS¸ùtSize
, "0", 2);

592 if–
x
<0 ){

593 
isNeg
 = 1;

594 
x
 = -x;

596 
isNeg
 = 0;

598 
zI¡
[(zInt)-1] = 0;

599 
i
=(
zI¡
)-2; i>0 && 
x
>0; i--, x /= 10){

600 
zI¡
[
i
] = (
x
%10) + '0';

602 if–
isNeg
 ) 
zI¡
[
i
--] = '-';

603 
	`mem˝y
(
Áu…SimS¸ùt
+
Áu…SimS¸ùtSize
, 
zI¡
+
i
+1, (zInt)-i);

605 
rc
 = 
	`T˛_EvÆ
(
Áu…SimI¡îp
, 
Áu…SimS¸ùt
);

606 if–
rc
 ){

607 
	`Ârötf
(
°dîr
, "Áu… simuœt‹ s¸ùàÁûed: [%s]", 
Áu…SimS¸ùt
);

608 
rc
 = 
SQLITE_ERROR
;

610 
rc
 = 
	`©oi
(
	`T˛_GëSåögResu…
(
Áu…SimI¡îp
));

612 
	`T˛_Re£tResu…
(
Áu…SimI¡îp
);

613  
rc
;

614 
	}
}

623 
SQLITE_TCLAPI
 
	$Áu…In°ÆlCmd
(

624 *
NŸU£d
,

625 
T˛_I¡îp
 *
öãΩ
,

626 
¨gc
,

627 c⁄° **
¨gv


629 c⁄° *
zS¸ùt
;

630 
nS¸ùt
;

631 
rc
;

632 if–
¨gc
!=1 &&árgc!=2 ){

633 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

636 
zS¸ùt
 = 
¨gc
==2 ? 
¨gv
[1] : "";

637 
nS¸ùt
 = ()
	`°æí
(
zS¸ùt
);

638 if–
Áu…SimS¸ùt
 ){

639 
	`‰ì
(
Áu…SimS¸ùt
);

640 
Áu…SimS¸ùt
 = 0;

642 if–
nS¸ùt
==0 ){

643 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_FAULT_INSTALL
, 0);

645 
Áu…SimS¸ùt
 = 
	`mÆloc
–
nS¸ùt
+100 );

646 if–
Áu…SimS¸ùt
==0 ){

647 
	`T˛_AµídResu…
(
öãΩ
, "out of memory", (*)0);

648  
SQLITE_ERROR
;

650 
	`mem˝y
(
Áu…SimS¸ùt
, 
zS¸ùt
, 
nS¸ùt
);

651 
Áu…SimS¸ùt
[
nS¸ùt
] = ' ';

652 
Áu…SimS¸ùtSize
 = 
nS¸ùt
+1;

653 
Áu…SimI¡îp
 = 
öãΩ
;

654 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_FAULT_INSTALL
, 
Áu…SimCÆlback
);

656 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

657  
SQLITE_OK
;

658 
	}
}

666 
SQLITE_TCLAPI
 
	$ã°BôvecBuûtöTe°
(

667 *
NŸU£d
,

668 
T˛_I¡îp
 *
öãΩ
,

669 
¨gc
,

670 c⁄° **
¨gv


672 
sz
, 
rc
;

673 
nProg
 = 0;

674 
aProg
[100];

675 c⁄° *
z
;

676 if–
¨gc
!=3 ){

677 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

680 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], &
sz
ËË 
TCL_ERROR
;

681 
z
 = 
¨gv
[2];

682  
nProg
<99 && *
z
 ){

683  *
z
 && !
	`sqlôe3Isdigô
(*z) ){ z++; }

684 if–*
z
==0 ) ;

685 
aProg
[
nProg
++] = 
	`©oi
(
z
);

686  
	`sqlôe3Isdigô
(*
z
) ){ z++; }

688 
aProg
[
nProg
] = 0;

689 
rc
 = 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BITVEC_TEST
, 
sz
, 
aProg
);

690 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

691  
TCL_OK
;

692 
	}
}

697 
	$Sqlôëe°2_Inô
(
T˛_I¡îp
 *
öãΩ
){

698 
sqlôe3_io_îr‹_≥rsi°
;

699 
sqlôe3_io_îr‹_≥ndög
;

700 
sqlôe3_io_îr‹_hô
;

701 
sqlôe3_io_îr‹_h¨dhô
;

702 
sqlôe3_diskfuŒ_≥ndög
;

703 
sqlôe3_diskfuŒ
;

705 *
zName
;

706 
T˛_CmdProc
 *
xProc
;

707 } 
aCmd
[] = {

708 { "∑gî_›í", (
T˛_CmdProc
*)
∑gî_›í
 },

709 { "∑gî_˛o£", (
T˛_CmdProc
*)
∑gî_˛o£
 },

710 { "∑gî_commô", (
T˛_CmdProc
*)
∑gî_commô
 },

711 { "∑gî_rﬁlback", (
T˛_CmdProc
*)
∑gî_rﬁlback
 },

712 { "∑gî_°mt_begö", (
T˛_CmdProc
*)
∑gî_°mt_begö
 },

713 { "∑gî_°mt_commô", (
T˛_CmdProc
*)
∑gî_°mt_commô
 },

714 { "∑gî_°mt_rﬁlback", (
T˛_CmdProc
*)
∑gî_°mt_rﬁlback
 },

715 { "∑gî_°©s", (
T˛_CmdProc
*)
∑gî_°©s
 },

716 { "∑gî_∑gecou¡", (
T˛_CmdProc
*)
∑gî_∑gecou¡
 },

717 { "∑ge_gë", (
T˛_CmdProc
*)
∑ge_gë
 },

718 { "∑ge_lookup", (
T˛_CmdProc
*)
∑ge_lookup
 },

719 { "∑ge_uƒef", (
T˛_CmdProc
*)
∑ge_uƒef
 },

720 { "∑ge_ªad", (
T˛_CmdProc
*)
∑ge_ªad
 },

721 { "∑ge_wrôe", (
T˛_CmdProc
*)
∑ge_wrôe
 },

722 { "∑ge_numbî", (
T˛_CmdProc
*)
∑ge_numbî
 },

723 { "∑gî_åunˇã", (
T˛_CmdProc
*)
∑gî_åunˇã
 },

724 #i‚de‡
SQLITE_OMIT_DISKIO


725 { "Áke_big_fûe", (
T˛_CmdProc
*)
Áke_big_fûe
 },

727 { "sqlôe3BôvecBuûtöTe°",(
T˛_CmdProc
*)
ã°BôvecBuûtöTe°
 },

728 { "sqlôe3_ã°_c⁄åﬁ_≥ndög_byã", (
T˛_CmdProc
*)
ã°PídögByã
 },

729 { "sqlôe3_ã°_c⁄åﬁ_Áu…_ö°Æl", (
T˛_CmdProc
*)
Áu…In°ÆlCmd
 },

731 
i
;

732 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

733 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

735 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_pending",

736 (*)&
sqlôe3_io_îr‹_≥ndög
, 
TCL_LINK_INT
);

737 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_persist",

738 (*)&
sqlôe3_io_îr‹_≥rsi°
, 
TCL_LINK_INT
);

739 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_hit",

740 (*)&
sqlôe3_io_îr‹_hô
, 
TCL_LINK_INT
);

741 
	`T˛_LökV¨
(
öãΩ
, "sqlite_io_error_hardhit",

742 (*)&
sqlôe3_io_îr‹_h¨dhô
, 
TCL_LINK_INT
);

743 
	`T˛_LökV¨
(
öãΩ
, "sqlite_diskfull_pending",

744 (*)&
sqlôe3_diskfuŒ_≥ndög
, 
TCL_LINK_INT
);

745 
	`T˛_LökV¨
(
öãΩ
, "sqlite_diskfull",

746 (*)&
sqlôe3_diskfuŒ
, 
TCL_LINK_INT
);

747 #i‚de‡
SQLITE_OMIT_WSD


748 
	`T˛_LökV¨
(
öãΩ
, "sqlite_pending_byte",

749 (*)&
sqlôe3PídögByã
, 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

751  
TCL_OK
;

752 
	}
}

	@test3.c

16 
	~"sqlôeI¡.h
"

17 
	~"båìI¡.h
"

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

26 c⁄° *
sqlôe3EºName
();

32 
sqlôe3
 
	gsDb
;

33 
	gnRefSqlôe3
 = 0;

40 
SQLITE_TCLAPI
 
	$båì_›í
(

41 *
NŸU£d
,

42 
T˛_I¡îp
 *
öãΩ
,

43 
¨gc
,

44 c⁄° **
¨gv


46 
Båì
 *
pBt
;

47 
rc
, 
nCache
;

48 
zBuf
[100];

49 
n
;

50 *
zFûíame
;

51 if–
¨gc
!=3 ){

52 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

54  
TCL_ERROR
;

56 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nCache
ËË 
TCL_ERROR
;

57 
nRefSqlôe3
++;

58 if–
nRefSqlôe3
==1 ){

59 
sDb
.
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

60 
sDb
.
muãx
 = 
	`sqlôe3MuãxAŒoc
(
SQLITE_MUTEX_RECURSIVE
);

61 
	`sqlôe3_muãx_íãr
(
sDb
.
muãx
);

63 
n
 = ()
	`°æí
(
¨gv
[1]);

64 
zFûíame
 = 
	`sqlôe3_mÆloc
–
n
+2 );

65 if–
zFûíame
==0 )  
TCL_ERROR
;

66 
	`mem˝y
(
zFûíame
, 
¨gv
[1], 
n
+1);

67 
zFûíame
[
n
+1] = 0;

68 
rc
 = 
	`sqlôe3BåìO≥n
(
sDb
.
pVfs
, 
zFûíame
, &sDb, &
pBt
, 0,

69 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 | 
SQLITE_OPEN_MAIN_DB
);

70 
	`sqlôe3_‰ì
(
zFûíame
);

71 if–
rc
!=
SQLITE_OK
 ){

72 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

73  
TCL_ERROR
;

75 
	`sqlôe3BåìSëCacheSize
(
pBt
, 
nCache
);

76 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%p", 
pBt
);

77 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

78  
TCL_OK
;

79 
	}
}

86 
SQLITE_TCLAPI
 
	$båì_˛o£
(

87 *
NŸU£d
,

88 
T˛_I¡îp
 *
öãΩ
,

89 
¨gc
,

90 c⁄° **
¨gv


92 
Båì
 *
pBt
;

93 
rc
;

94 if–
¨gc
!=2 ){

95 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

97  
TCL_ERROR
;

99 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

100 
rc
 = 
	`sqlôe3BåìClo£
(
pBt
);

101 if–
rc
!=
SQLITE_OK
 ){

102 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

103  
TCL_ERROR
;

105 
nRefSqlôe3
--;

106 if–
nRefSqlôe3
==0 ){

107 
	`sqlôe3_muãx_Àave
(
sDb
.
muãx
);

108 
	`sqlôe3_muãx_‰ì
(
sDb
.
muãx
);

109 
sDb
.
muãx
 = 0;

110 
sDb
.
pVfs
 = 0;

112  
TCL_OK
;

113 
	}
}

121 
SQLITE_TCLAPI
 
	$båì_begö_å™ß˘i⁄
(

122 *
NŸU£d
,

123 
T˛_I¡îp
 *
öãΩ
,

124 
¨gc
,

125 c⁄° **
¨gv


127 
Båì
 *
pBt
;

128 
rc
;

129 if–
¨gc
!=2 ){

130 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

132  
TCL_ERROR
;

134 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

135 
	`sqlôe3BåìE¡î
(
pBt
);

136 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 1);

137 
	`sqlôe3BåìLóve
(
pBt
);

138 if–
rc
!=
SQLITE_OK
 ){

139 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

140  
TCL_ERROR
;

142  
TCL_OK
;

143 
	}
}

150 
SQLITE_TCLAPI
 
	$båì_∑gî_°©s
(

151 *
NŸU£d
,

152 
T˛_I¡îp
 *
öãΩ
,

153 
¨gc
,

154 c⁄° **
¨gv


156 
Båì
 *
pBt
;

157 
i
;

158 *
a
;

160 if–
¨gc
!=2 ){

161 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

163  
TCL_ERROR
;

165 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

174 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

176 
	`sqlôe3BåìE¡î
(
pBt
);

177 
a
 = 
	`sqlôe3PagîSèts
(
	`sqlôe3BåìPagî
(
pBt
));

178 
i
=0; i<11; i++){

179 *
zName
[] = {

183 
zBuf
[100];

184 
	`T˛_AµídEÀmít
(
öãΩ
, 
zName
[
i
]);

185 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%d",
a
[
i
]);

186 
	`T˛_AµídEÀmít
(
öãΩ
, 
zBuf
);

188 
	`sqlôe3BåìLóve
(
pBt
);

191 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

192  
TCL_OK
;

193 
	}
}

200 
SQLITE_TCLAPI
 
	$båì_curs‹
(

201 *
NŸU£d
,

202 
T˛_I¡îp
 *
öãΩ
,

203 
¨gc
,

204 c⁄° **
¨gv


206 
Båì
 *
pBt
;

207 
iTabÀ
;

208 
BtCurs‹
 *
pCur
;

209 
rc
 = 
SQLITE_OK
;

210 
wrFœg
;

211 
zBuf
[30];

213 if–
¨gc
!=4 ){

214 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

216  
TCL_ERROR
;

218 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

219 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
iTabÀ
ËË 
TCL_ERROR
;

220 if–
	`T˛_GëBoﬁón
(
öãΩ
, 
¨gv
[3], &
wrFœg
ËË 
TCL_ERROR
;

221 if–
wrFœg
 ) wrFœg = 
BTREE_WRCSR
;

222 
pCur
 = (
BtCurs‹
 *)
	`ckÆloc
(
	`sqlôe3BåìCurs‹Size
());

223 
	`mem£t
(
pCur
, 0, 
	`sqlôe3BåìCurs‹Size
());

224 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

225 
	`sqlôe3BåìE¡î
(
pBt
);

226 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


227 
rc
 = 
	`sqlôe3BåìLockTabÀ
(
pBt
, 
iTabÀ
, !!
wrFœg
);

229 if–
rc
==
SQLITE_OK
 ){

230 
rc
 = 
	`sqlôe3BåìCurs‹
(
pBt
, 
iTabÀ
, 
wrFœg
, 0, 
pCur
);

232 
	`sqlôe3BåìLóve
(
pBt
);

233 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

234 if–
rc
 ){

235 
	`ck‰ì
((*)
pCur
);

236 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

237  
TCL_ERROR
;

239 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf,"%p", 
pCur
);

240 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

241  
SQLITE_OK
;

242 
	}
}

249 
SQLITE_TCLAPI
 
	$båì_˛o£_curs‹
(

250 *
NŸU£d
,

251 
T˛_I¡îp
 *
öãΩ
,

252 
¨gc
,

253 c⁄° **
¨gv


255 
BtCurs‹
 *
pCur
;

256 
Båì
 *
pBt
;

257 
rc
;

259 if–
¨gc
!=2 ){

260 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

262  
TCL_ERROR
;

264 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

265 
pBt
 = 
pCur
->
pBåì
;

266 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

267 
	`sqlôe3BåìE¡î
(
pBt
);

268 
rc
 = 
	`sqlôe3BåìClo£Curs‹
(
pCur
);

269 
	`sqlôe3BåìLóve
(
pBt
);

270 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

271 
	`ck‰ì
((*)
pCur
);

272 if–
rc
 ){

273 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

274  
TCL_ERROR
;

276  
SQLITE_OK
;

277 
	}
}

286 
SQLITE_TCLAPI
 
	$båì_√xt
(

287 *
NŸU£d
,

288 
T˛_I¡îp
 *
öãΩ
,

289 
¨gc
,

290 c⁄° **
¨gv


292 
BtCurs‹
 *
pCur
;

293 
rc
;

294 
ªs
 = 0;

295 
zBuf
[100];

297 if–
¨gc
!=2 ){

298 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

300  
TCL_ERROR
;

302 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

303 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

304 
rc
 = 
	`sqlôe3BåìNext
(
pCur
, &
ªs
);

305 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

306 if–
rc
 ){

307 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

308  
TCL_ERROR
;

310 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
ªs
);

311 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

312  
SQLITE_OK
;

313 
	}
}

321 
SQLITE_TCLAPI
 
	$båì_fú°
(

322 *
NŸU£d
,

323 
T˛_I¡îp
 *
öãΩ
,

324 
¨gc
,

325 c⁄° **
¨gv


327 
BtCurs‹
 *
pCur
;

328 
rc
;

329 
ªs
 = 0;

330 
zBuf
[100];

332 if–
¨gc
!=2 ){

333 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

335  
TCL_ERROR
;

337 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

338 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

339 
rc
 = 
	`sqlôe3BåìFú°
(
pCur
, &
ªs
);

340 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

341 if–
rc
 ){

342 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

343  
TCL_ERROR
;

345 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf,"%d",
ªs
);

346 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

347  
SQLITE_OK
;

348 
	}
}

356 
SQLITE_TCLAPI
 
	$båì_eof
(

357 *
NŸU£d
,

358 
T˛_I¡îp
 *
öãΩ
,

359 
¨gc
,

360 c⁄° **
¨gv


362 
BtCurs‹
 *
pCur
;

363 
rc
;

364 
zBuf
[50];

366 if–
¨gc
!=2 ){

367 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

369  
TCL_ERROR
;

371 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

372 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

373 
rc
 = 
	`sqlôe3BåìEof
(
pCur
);

374 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

375 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf, "%d", 
rc
);

376 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

377  
SQLITE_OK
;

378 
	}
}

385 
SQLITE_TCLAPI
 
	$båì_∑ylﬂd_size
(

386 *
NŸU£d
,

387 
T˛_I¡îp
 *
öãΩ
,

388 
¨gc
,

389 c⁄° **
¨gv


391 
BtCurs‹
 *
pCur
;

392 
u32
 
n
;

393 
zBuf
[50];

395 if–
¨gc
!=2 ){

396 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

398  
TCL_ERROR
;

400 
pCur
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

401 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

402 
n
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

403 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

404 
	`sqlôe3_¢¥ötf
((
zBuf
),zBuf, "%u", 
n
);

405 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

406  
SQLITE_OK
;

407 
	}
}

423 
SQLITE_TCLAPI
 
	$båì_v¨öt_ã°
(

424 *
NŸU£d
,

425 
T˛_I¡îp
 *
öãΩ
,

426 
¨gc
,

427 c⁄° **
¨gv


429 
u32
 
°¨t
, 
mu…
, 
cou¡
, 
ö¸
;

430 
u64
 
ö
, 
out
;

431 
n1
, 
n2
, 
i
, 
j
;

432 
zBuf
[100];

433 if–
¨gc
!=5 ){

434 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

436  
TCL_ERROR
;

438 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[1], (*)&
°¨t
ËË 
TCL_ERROR
;

439 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], (*)&
mu…
ËË 
TCL_ERROR
;

440 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[3], (*)&
cou¡
ËË 
TCL_ERROR
;

441 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[4], (*)&
ö¸
ËË 
TCL_ERROR
;

442 
ö
 = 
°¨t
;

443 
ö
 *
mu…
;

444 
i
=0; i<()
cou¡
; i++){

445 
zEº
[200];

446 
n1
 = 
	`putV¨öt
(
zBuf
, 
ö
);

447 if–
n1
>9 ||Ç1<1 ){

448 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

449 "putV¨öàªtu∫ed %d - should bêbëwì¿1ánd 9", 
n1
);

450 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

451  
TCL_ERROR
;

453 
n2
 = 
	`gëV¨öt
(
zBuf
, &
out
);

454 if–
n1
!=
n2
 ){

455 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

456 "putV¨öàªtu∫ed %dánd gëV¨öàªtu∫ed %d", 
n1
, 
n2
);

457 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

458  
TCL_ERROR
;

460 if–
ö
!=
out
 ){

461 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

462 "WrŸê0x%016Œxánd gŸ back 0x%016Œx", 
ö
, 
out
);

463 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

464  
TCL_ERROR
;

466 if–(
ö
 & 0xffffffff)==in ){

467 
u32
 
out32
;

468 
n2
 = 
	`gëV¨öt32
(
zBuf
, 
out32
);

469 
out
 = 
out32
;

470 if–
n1
!=
n2
 ){

471 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

473 
n1
, 
n2
);

474 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

475  
TCL_ERROR
;

477 if–
ö
!=
out
 ){

478 
	`sqlôe3_¢¥ötf
((
zEº
), zErr,

480 
ö
, 
out
);

481 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 0);

482  
TCL_ERROR
;

490 
j
=0; j<19; j++){

491 
	`gëV¨öt
(
zBuf
, &
out
);

493 
ö
 +
ö¸
;

495  
TCL_OK
;

496 
	}
}

507 
SQLITE_TCLAPI
 
	$båì_‰om_db
(

508 *
NŸU£d
,

509 
T˛_I¡îp
 *
öãΩ
,

510 
¨gc
,

511 c⁄° **
¨gv


513 
zBuf
[100];

514 
T˛_CmdInfo
 
öfo
;

515 
sqlôe3
 *
db
;

516 
Båì
 *
pBt
;

517 
iDb
 = 0;

519 if–
¨gc
!=2 &&árgc!=3 ){

520 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

522  
TCL_ERROR
;

525 if–1!=
	`T˛_GëComm™dInfo
(
öãΩ
, 
¨gv
[1], &
öfo
) ){

526 
	`T˛_AµídResu…
(
öãΩ
, "Nÿsuch db-h™dÀ: \"", 
¨gv
[1], "\"", 0);

527  
TCL_ERROR
;

529 if–
¨gc
==3 ){

530 
iDb
 = 
	`©oi
(
¨gv
[2]);

533 
db
 = *((
sqlôe3
 **)
öfo
.
objClõ¡D©a
);

534 
	`as£π
–
db
 );

536 
pBt
 = 
db
->
aDb
[
iDb
].pBt;

537 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
pBt
);

538 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

539  
TCL_OK
;

540 
	}
}

547 
SQLITE_TCLAPI
 
	$båì_ismemdb
(

548 *
NŸU£d
,

549 
T˛_I¡îp
 *
öãΩ
,

550 
¨gc
,

551 c⁄° **
¨gv


553 
Båì
 *
pBt
;

554 
ªs
;

555 
sqlôe3_fûe
 *
pFûe
;

557 if–
¨gc
!=2 ){

558 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

560  
TCL_ERROR
;

562 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

563 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

564 
	`sqlôe3BåìE¡î
(
pBt
);

565 
pFûe
 = 
	`sqlôe3PagîFûe
(
	`sqlôe3BåìPagî
(
pBt
));

566 
ªs
 = (
pFûe
->
pMëhods
==0);

567 
	`sqlôe3BåìLóve
(
pBt
);

568 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

569 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
ªs
));

570  
SQLITE_OK
;

571 
	}
}

578 
SQLITE_TCLAPI
 
	$båì_£t_ˇche_size
(

579 *
NŸU£d
,

580 
T˛_I¡îp
 *
öãΩ
,

581 
¨gc
,

582 c⁄° **
¨gv


584 
nCache
;

585 
Båì
 *
pBt
;

587 if–
¨gc
!=3 ){

588 
	`T˛_AµídResu…
(

589 
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0], " BT NCACHE\"", 0);

590  
TCL_ERROR
;

592 
pBt
 = 
	`sqlôe3Te°TextToPå
(
¨gv
[1]);

593 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
nCache
ËË 
TCL_ERROR
;

595 
	`sqlôe3_muãx_íãr
(
pBt
->
db
->
muãx
);

596 
	`sqlôe3BåìE¡î
(
pBt
);

597 
	`sqlôe3BåìSëCacheSize
(
pBt
, 
nCache
);

598 
	`sqlôe3BåìLóve
(
pBt
);

599 
	`sqlôe3_muãx_Àave
(
pBt
->
db
->
muãx
);

600  
TCL_OK
;

601 
	}
}

608 
SQLITE_TCLAPI
 
	$båì_ö£π
(

609 
Clõ¡D©a
 
˛õ¡D©a
,

610 
T˛_I¡îp
 *
öãΩ
,

611 
objc
,

612 
T˛_Obj
 *c⁄° 
objv
[]

614 
BtCurs‹
 *
pCur
;

615 
rc
;

616 
BåìPaylﬂd
 
x
;

618 if–
objc
!=4 && objc!=3 ){

619 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-intkey? CSR KEY VALUE");

620  
TCL_ERROR
;

623 
	`mem£t
(&
x
, 0, (x));

624 if–
objc
==4 ){

625 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
rc
ËË 
TCL_ERROR
;

626 
x
.
nKey
 = 
rc
;

627 
x
.
pD©a
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[3], &x.
nD©a
);

629 
x
.
pKey
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[2], &
rc
);

630 
x
.
nKey
 = 
rc
;

632 
pCur
 = (
BtCurs‹
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

634 
	`sqlôe3_muãx_íãr
(
pCur
->
pBåì
->
db
->
muãx
);

635 
	`sqlôe3BåìE¡î
(
pCur
->
pBåì
);

636 
rc
 = 
	`sqlôe3BåìIn£π
(
pCur
, &
x
, 0, 0);

637 
	`sqlôe3BåìLóve
(
pCur
->
pBåì
);

638 
	`sqlôe3_muãx_Àave
(
pCur
->
pBåì
->
db
->
muãx
);

640 
	`T˛_Re£tResu…
(
öãΩ
);

641 if–
rc
 ){

642 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), 0);

643  
TCL_ERROR
;

645  
TCL_OK
;

646 
	}
}

652 
	$Sqlôëe°3_Inô
(
T˛_I¡îp
 *
öãΩ
){

654 *
zName
;

655 
T˛_CmdProc
 *
xProc
;

656 } 
aCmd
[] = {

657 { "båì_›í", (
T˛_CmdProc
*)
båì_›í
 },

658 { "båì_˛o£", (
T˛_CmdProc
*)
båì_˛o£
 },

659 { "båì_begö_å™ß˘i⁄", (
T˛_CmdProc
*)
båì_begö_å™ß˘i⁄
 },

660 { "båì_∑gî_°©s", (
T˛_CmdProc
*)
båì_∑gî_°©s
 },

661 { "båì_curs‹", (
T˛_CmdProc
*)
båì_curs‹
 },

662 { "båì_˛o£_curs‹", (
T˛_CmdProc
*)
båì_˛o£_curs‹
 },

663 { "båì_√xt", (
T˛_CmdProc
*)
båì_√xt
 },

664 { "båì_eof", (
T˛_CmdProc
*)
båì_eof
 },

665 { "båì_∑ylﬂd_size", (
T˛_CmdProc
*)
båì_∑ylﬂd_size
 },

666 { "båì_fú°", (
T˛_CmdProc
*)
båì_fú°
 },

667 { "båì_v¨öt_ã°", (
T˛_CmdProc
*)
båì_v¨öt_ã°
 },

668 { "båì_‰om_db", (
T˛_CmdProc
*)
båì_‰om_db
 },

669 { "båì_ismemdb", (
T˛_CmdProc
*)
båì_ismemdb
 },

670 { "båì_£t_ˇche_size", (
T˛_CmdProc
*)
båì_£t_ˇche_size
 }

672 
i
;

674 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

675 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

678 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "båì_ö£π", 
båì_ö£π
, 0, 0);

680  
TCL_OK
;

681 
	}
}

	@test4.c

14 
	~"sqlôeI¡.h
"

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 #i‡
SQLITE_OS_UNIX
 && 
SQLITE_THREADSAFE


21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<±hªad.h
>

24 
	~<sched.h
>

25 
	~<˘y≥.h
>

27 c⁄° *
sqlôe3EºName
();

33 
Thªad
 
	tThªad
;

34 
	sThªad
 {

37 *
	mzFûíame
;

38 (*
	mxOp
)(
	mThªad
*);

39 *
	mzArg
;

40 
	m›num
;

41 
	mbusy
;

45 
	mcom∂ëed
;

46 
sqlôe3
 *
	mdb
;

47 
sqlôe3_°mt
 *
	mpStmt
;

48 *
	mzEº
;

49 *
	mzSèticEº
;

50 
	mrc
;

51 
	m¨gc
;

52 c⁄° *
	m¨gv
[100];

53 c⁄° *
	mcﬁv
[100];

60 
	#N_THREAD
 26

	)

61 
Thªad
 
	gthªad£t
[
N_THREAD
];

67 *
	$thªad_maö
(*
pArg
){

68 
Thªad
 *
p
 = (Thªad*)
pArg
;

69 if–
p
->
db
 ){

70 
	`sqlôe3_˛o£
(
p
->
db
);

72 
	`sqlôe3_›í
(
p
->
zFûíame
, &p->
db
);

73 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

74 
p
->
zEº
 = 
	`°rdup
(
	`sqlôe3_îrmsg
’->
db
));

75 
	`sqlôe3_˛o£
(
p
->
db
);

76 
p
->
db
 = 0;

78 
p
->
pStmt
 = 0;

79 
p
->
com∂ëed
 = 1;

80  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

81  
p
->
xOp
 ){

82 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

83 
	`sqlôe3_‰ì
(
p
->
zEº
);

84 
p
->
zEº
 = 0;

86 (*
p
->
xOp
)(p);

87 
p
->
com∂ëed
++;

88  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

90 if–
p
->
pStmt
 ){

91 
	`sqlôe3_föÆize
(
p
->
pStmt
);

92 
p
->
pStmt
 = 0;

94 if–
p
->
db
 ){

95 
	`sqlôe3_˛o£
(
p
->
db
);

96 
p
->
db
 = 0;

98 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

99 
	`sqlôe3_‰ì
(
p
->
zEº
);

100 
p
->
zEº
 = 0;

102 
p
->
com∂ëed
++;

103 #i‚de‡
SQLITE_OMIT_DEPRECATED


104 
	`sqlôe3_thªad_˛ónup
();

107 
	}
}

114 
	$∑r£_thªad_id
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

115 if–
zArg
==0 || zArg[0]==0 || zArg[1]!=0 || !
	`isuµî
(()zArg[0]) ){

116 
	`T˛_AµídResu…
(
öãΩ
, "thread ID must beán upper caseÜetter", 0);

119  
zArg
[0] - 'A';

120 
	}
}

128 
SQLITE_TCLAPI
 
	$t˛_thªad_¸óã
(

129 *
NŸU£d
,

130 
T˛_I¡îp
 *
öãΩ
,

131 
¨gc
,

132 c⁄° **
¨gv


134 
i
;

135 
±hªad_t
 
x
;

136 
rc
;

138 if–
¨gc
!=3 ){

139 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

141  
TCL_ERROR
;

143 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

144 if–
i
<0 )  
TCL_ERROR
;

145 if–
thªad£t
[
i
].
busy
 ){

146 
	`T˛_AµídResu…
(
öãΩ
, "thªad ", 
¨gv
[1], " isálreadyÑunning", 0);

147  
TCL_ERROR
;

149 
thªad£t
[
i
].
busy
 = 1;

150 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

151 
thªad£t
[
i
].
zFûíame
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

152 
thªad£t
[
i
].
›num
 = 1;

153 
thªad£t
[
i
].
com∂ëed
 = 0;

154 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
thªad_maö
, &
thªad£t
[
i
]);

155 if–
rc
 ){

156 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo createÅheÅhread", 0);

157 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

158 
thªad£t
[
i
].
busy
 = 0;

159  
TCL_ERROR
;

161 
	`±hªad_dëach
(
x
);

162  
TCL_OK
;

163 
	}
}

168 
	$thªad_waô
(
Thªad
 *
p
){

169  
p
->
›num
>p->
com∂ëed
 ) 
	`sched_yõld
();

170 
	}
}

177 
SQLITE_TCLAPI
 
	$t˛_thªad_waô
(

178 *
NŸU£d
,

179 
T˛_I¡îp
 *
öãΩ
,

180 
¨gc
,

181 c⁄° **
¨gv


183 
i
;

185 if–
¨gc
!=2 ){

186 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

188  
TCL_ERROR
;

190 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

191 if–
i
<0 )  
TCL_ERROR
;

192 if–!
thªad£t
[
i
].
busy
 ){

193 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

194  
TCL_ERROR
;

196 
	`thªad_waô
(&
thªad£t
[
i
]);

197  
TCL_OK
;

198 
	}
}

203 
	$°›_thªad
(
Thªad
 *
p
){

204 
	`thªad_waô
(
p
);

205 
p
->
xOp
 = 0;

206 
p
->
›num
++;

207 
	`thªad_waô
(
p
);

208 
	`sqlôe3_‰ì
(
p
->
zArg
);

209 
p
->
zArg
 = 0;

210 
	`sqlôe3_‰ì
(
p
->
zFûíame
);

211 
p
->
zFûíame
 = 0;

212 
p
->
busy
 = 0;

213 
	}
}

221 
SQLITE_TCLAPI
 
	$t˛_thªad_hÆt
(

222 *
NŸU£d
,

223 
T˛_I¡îp
 *
öãΩ
,

224 
¨gc
,

225 c⁄° **
¨gv


227 
i
;

229 if–
¨gc
!=2 ){

230 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

232  
TCL_ERROR
;

234 if–
¨gv
[1][0]=='*' &&árgv[1][1]==0 ){

235 
i
=0; i<
N_THREAD
; i++){

236 if–
thªad£t
[
i
].
busy
 ) 
	`°›_thªad
(&threadset[i]);

239 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

240 if–
i
<0 )  
TCL_ERROR
;

241 if–!
thªad£t
[
i
].
busy
 ){

242 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

243  
TCL_ERROR
;

245 
	`°›_thªad
(&
thªad£t
[
i
]);

247  
TCL_OK
;

248 
	}
}

256 
SQLITE_TCLAPI
 
	$t˛_thªad_¨gc
(

257 *
NŸU£d
,

258 
T˛_I¡îp
 *
öãΩ
,

259 
¨gc
,

260 c⁄° **
¨gv


262 
i
;

263 
zBuf
[100];

265 if–
¨gc
!=2 ){

266 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

268  
TCL_ERROR
;

270 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

271 if–
i
<0 )  
TCL_ERROR
;

272 if–!
thªad£t
[
i
].
busy
 ){

273 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

274  
TCL_ERROR
;

276 
	`thªad_waô
(&
thªad£t
[
i
]);

277 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
thªad£t
[
i
].
¨gc
);

278 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

279  
TCL_OK
;

280 
	}
}

288 
SQLITE_TCLAPI
 
	$t˛_thªad_¨gv
(

289 *
NŸU£d
,

290 
T˛_I¡îp
 *
öãΩ
,

291 
¨gc
,

292 c⁄° **
¨gv


294 
i
;

295 
n
;

297 if–
¨gc
!=3 ){

298 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

300  
TCL_ERROR
;

302 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

303 if–
i
<0 )  
TCL_ERROR
;

304 if–!
thªad£t
[
i
].
busy
 ){

305 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

306  
TCL_ERROR
;

308 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

309 
	`thªad_waô
(&
thªad£t
[
i
]);

310 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

311 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

312  
TCL_ERROR
;

314 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
¨gv
[
n
], 0);

315  
TCL_OK
;

316 
	}
}

324 
SQLITE_TCLAPI
 
	$t˛_thªad_cﬁ«me
(

325 *
NŸU£d
,

326 
T˛_I¡îp
 *
öãΩ
,

327 
¨gc
,

328 c⁄° **
¨gv


330 
i
;

331 
n
;

333 if–
¨gc
!=3 ){

334 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

336  
TCL_ERROR
;

338 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

339 if–
i
<0 )  
TCL_ERROR
;

340 if–!
thªad£t
[
i
].
busy
 ){

341 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

342  
TCL_ERROR
;

344 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

345 
	`thªad_waô
(&
thªad£t
[
i
]);

346 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

347 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

348  
TCL_ERROR
;

350 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
cﬁv
[
n
], 0);

351  
TCL_OK
;

352 
	}
}

360 
SQLITE_TCLAPI
 
	$t˛_thªad_ªsu…
(

361 *
NŸU£d
,

362 
T˛_I¡îp
 *
öãΩ
,

363 
¨gc
,

364 c⁄° **
¨gv


366 
i
;

367 c⁄° *
zName
;

369 if–
¨gc
!=2 ){

370 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

372  
TCL_ERROR
;

374 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

375 if–
i
<0 )  
TCL_ERROR
;

376 if–!
thªad£t
[
i
].
busy
 ){

377 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

378  
TCL_ERROR
;

380 
	`thªad_waô
(&
thªad£t
[
i
]);

381 
zName
 = 
	`sqlôe3EºName
(
thªad£t
[
i
].
rc
);

382 
	`T˛_AµídResu…
(
öãΩ
, 
zName
, 0);

383  
TCL_OK
;

384 
	}
}

392 
SQLITE_TCLAPI
 
	$t˛_thªad_îr‹
(

393 *
NŸU£d
,

394 
T˛_I¡îp
 *
öãΩ
,

395 
¨gc
,

396 c⁄° **
¨gv


398 
i
;

400 if–
¨gc
!=2 ){

401 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

403  
TCL_ERROR
;

405 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

406 if–
i
<0 )  
TCL_ERROR
;

407 if–!
thªad£t
[
i
].
busy
 ){

408 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

409  
TCL_ERROR
;

411 
	`thªad_waô
(&
thªad£t
[
i
]);

412 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
zEº
, 0);

413  
TCL_OK
;

414 
	}
}

419 
	$do_compûe
(
Thªad
 *
p
){

420 if–
p
->
db
==0 ){

421 
p
->
zEº
 =Ö->
zSèticEº
 = "no database is open";

422 
p
->
rc
 = 
SQLITE_ERROR
;

425 if–
p
->
pStmt
 ){

426 
	`sqlôe3_föÆize
(
p
->
pStmt
);

427 
p
->
pStmt
 = 0;

429 
p
->
rc
 = 
	`sqlôe3_¥ï¨e
’->
db
,Ö->
zArg
, -1, &p->
pStmt
, 0);

430 
	}
}

437 
SQLITE_TCLAPI
 
	$t˛_thªad_compûe
(

438 *
NŸU£d
,

439 
T˛_I¡îp
 *
öãΩ
,

440 
¨gc
,

441 c⁄° **
¨gv


443 
i
;

444 if–
¨gc
!=3 ){

445 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

447  
TCL_ERROR
;

449 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

450 if–
i
<0 )  
TCL_ERROR
;

451 if–!
thªad£t
[
i
].
busy
 ){

452 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

453  
TCL_ERROR
;

455 
	`thªad_waô
(&
thªad£t
[
i
]);

456 
thªad£t
[
i
].
xOp
 = 
do_compûe
;

457 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

458 
thªad£t
[
i
].
zArg
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

459 
thªad£t
[
i
].
›num
++;

460  
TCL_OK
;

461 
	}
}

466 
	$do_°ï
(
Thªad
 *
p
){

467 
i
;

468 if–
p
->
pStmt
==0 ){

469 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

470 
p
->
rc
 = 
SQLITE_ERROR
;

473 
p
->
rc
 = 
	`sqlôe3_°ï
’->
pStmt
);

474 if–
p
->
rc
==
SQLITE_ROW
 ){

475 
p
->
¨gc
 = 
	`sqlôe3_cﬁumn_cou¡
’->
pStmt
);

476 
i
=0; i<
	`sqlôe3_d©a_cou¡
(
p
->
pStmt
); i++){

477 
p
->
¨gv
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
’->
pStmt
, i);

479 
i
=0; i<
p
->
¨gc
; i++){

480 
p
->
cﬁv
[
i
] = 
	`sqlôe3_cﬁumn_«me
’->
pStmt
, i);

483 
	}
}

490 
SQLITE_TCLAPI
 
	$t˛_thªad_°ï
(

491 *
NŸU£d
,

492 
T˛_I¡îp
 *
öãΩ
,

493 
¨gc
,

494 c⁄° **
¨gv


496 
i
;

497 if–
¨gc
!=2 ){

498 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

500  
TCL_ERROR
;

502 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

503 if–
i
<0 )  
TCL_ERROR
;

504 if–!
thªad£t
[
i
].
busy
 ){

505 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

506  
TCL_ERROR
;

508 
	`thªad_waô
(&
thªad£t
[
i
]);

509 
thªad£t
[
i
].
xOp
 = 
do_°ï
;

510 
thªad£t
[
i
].
›num
++;

511  
TCL_OK
;

512 
	}
}

517 
	$do_föÆize
(
Thªad
 *
p
){

518 if–
p
->
pStmt
==0 ){

519 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

520 
p
->
rc
 = 
SQLITE_ERROR
;

523 
p
->
rc
 = 
	`sqlôe3_föÆize
’->
pStmt
);

524 
p
->
pStmt
 = 0;

525 
	}
}

532 
SQLITE_TCLAPI
 
	$t˛_thªad_föÆize
(

533 *
NŸU£d
,

534 
T˛_I¡îp
 *
öãΩ
,

535 
¨gc
,

536 c⁄° **
¨gv


538 
i
;

539 if–
¨gc
!=2 ){

540 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

542  
TCL_ERROR
;

544 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

545 if–
i
<0 )  
TCL_ERROR
;

546 if–!
thªad£t
[
i
].
busy
 ){

547 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

548  
TCL_ERROR
;

550 
	`thªad_waô
(&
thªad£t
[
i
]);

551 
thªad£t
[
i
].
xOp
 = 
do_föÆize
;

552 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

553 
thªad£t
[
i
].
zArg
 = 0;

554 
thªad£t
[
i
].
›num
++;

555  
TCL_OK
;

556 
	}
}

563 
SQLITE_TCLAPI
 
	$t˛_thªad_sw≠
(

564 *
NŸU£d
,

565 
T˛_I¡îp
 *
öãΩ
,

566 
¨gc
,

567 c⁄° **
¨gv


569 
i
, 
j
;

570 
sqlôe3
 *
ãmp
;

571 if–
¨gc
!=3 ){

572 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

574  
TCL_ERROR
;

576 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

577 if–
i
<0 )  
TCL_ERROR
;

578 if–!
thªad£t
[
i
].
busy
 ){

579 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

580  
TCL_ERROR
;

582 
	`thªad_waô
(&
thªad£t
[
i
]);

583 
j
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[2]);

584 if–
j
<0 )  
TCL_ERROR
;

585 if–!
thªad£t
[
j
].
busy
 ){

586 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

587  
TCL_ERROR
;

589 
	`thªad_waô
(&
thªad£t
[
j
]);

590 
ãmp
 = 
thªad£t
[
i
].
db
;

591 
thªad£t
[
i
].
db
 =Åhªad£t[
j
].db;

592 
thªad£t
[
j
].
db
 = 
ãmp
;

593  
TCL_OK
;

594 
	}
}

603 
SQLITE_TCLAPI
 
	$t˛_thªad_db_gë
(

604 *
NŸU£d
,

605 
T˛_I¡îp
 *
öãΩ
,

606 
¨gc
,

607 c⁄° **
¨gv


609 
i
;

610 
zBuf
[100];

611 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

612 if–
¨gc
!=2 ){

613 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

615  
TCL_ERROR
;

617 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

618 if–
i
<0 )  
TCL_ERROR
;

619 if–!
thªad£t
[
i
].
busy
 ){

620 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

621  
TCL_ERROR
;

623 
	`thªad_waô
(&
thªad£t
[
i
]);

624 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
thªad£t
[
i
].
db
);

625 
thªad£t
[
i
].
db
 = 0;

626 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

627  
TCL_OK
;

628 
	}
}

634 
SQLITE_TCLAPI
 
	$t˛_thªad_db_put
(

635 *
NŸU£d
,

636 
T˛_I¡îp
 *
öãΩ
,

637 
¨gc
,

638 c⁄° **
¨gv


640 
i
;

641 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

642 *
	`sqlôe3Te°TextToPå
(const *);

643 if–
¨gc
!=3 ){

644 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

646  
TCL_ERROR
;

648 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

649 if–
i
<0 )  
TCL_ERROR
;

650 if–!
thªad£t
[
i
].
busy
 ){

651 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

652  
TCL_ERROR
;

654 
	`thªad_waô
(&
thªad£t
[
i
]);

655 
	`as£π
–!
thªad£t
[
i
].
db
 );

656 
thªad£t
[
i
].
db
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
¨gv
[2]);

657  
TCL_OK
;

658 
	}
}

666 
SQLITE_TCLAPI
 
	$t˛_thªad_°mt_gë
(

667 *
NŸU£d
,

668 
T˛_I¡îp
 *
öãΩ
,

669 
¨gc
,

670 c⁄° **
¨gv


672 
i
;

673 
zBuf
[100];

674 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *, *);

675 if–
¨gc
!=2 ){

676 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

678  
TCL_ERROR
;

680 
i
 = 
	`∑r£_thªad_id
(
öãΩ
, 
¨gv
[1]);

681 if–
i
<0 )  
TCL_ERROR
;

682 if–!
thªad£t
[
i
].
busy
 ){

683 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

684  
TCL_ERROR
;

686 
	`thªad_waô
(&
thªad£t
[
i
]);

687 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
thªad£t
[
i
].
pStmt
);

688 
thªad£t
[
i
].
pStmt
 = 0;

689 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

690  
TCL_OK
;

691 
	}
}

696 
	$Sqlôëe°4_Inô
(
T˛_I¡îp
 *
öãΩ
){

698 *
zName
;

699 
T˛_CmdProc
 *
xProc
;

700 } 
aCmd
[] = {

701 { "thªad_¸óã", (
T˛_CmdProc
*)
t˛_thªad_¸óã
 },

702 { "thªad_waô", (
T˛_CmdProc
*)
t˛_thªad_waô
 },

703 { "thªad_hÆt", (
T˛_CmdProc
*)
t˛_thªad_hÆt
 },

704 { "thªad_¨gc", (
T˛_CmdProc
*)
t˛_thªad_¨gc
 },

705 { "thªad_¨gv", (
T˛_CmdProc
*)
t˛_thªad_¨gv
 },

706 { "thªad_cﬁ«me", (
T˛_CmdProc
*)
t˛_thªad_cﬁ«me
 },

707 { "thªad_ªsu…", (
T˛_CmdProc
*)
t˛_thªad_ªsu…
 },

708 { "thªad_îr‹", (
T˛_CmdProc
*)
t˛_thªad_îr‹
 },

709 { "thªad_compûe", (
T˛_CmdProc
*)
t˛_thªad_compûe
 },

710 { "thªad_°ï", (
T˛_CmdProc
*)
t˛_thªad_°ï
 },

711 { "thªad_föÆize", (
T˛_CmdProc
*)
t˛_thªad_föÆize
 },

712 { "thªad_sw≠", (
T˛_CmdProc
*)
t˛_thªad_sw≠
 },

713 { "thªad_db_gë", (
T˛_CmdProc
*)
t˛_thªad_db_gë
 },

714 { "thªad_db_put", (
T˛_CmdProc
*)
t˛_thªad_db_put
 },

715 { "thªad_°mt_gë", (
T˛_CmdProc
*)
t˛_thªad_°mt_gë
 },

717 
i
;

719 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

720 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

722  
TCL_OK
;

723 
	}
}

725 
	$Sqlôëe°4_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test5.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

20 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

21 
	~"sqlôe_t˛.h
"

23 
	~"t˛.h
"

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

33 
SQLITE_TCLAPI
 
	$bö¨ize
(

34 * 
˛õ¡D©a
,

35 
T˛_I¡îp
 *
öãΩ
,

36 
objc
,

37 
T˛_Obj
 *
CONST
 
objv
[]

39 
Àn
;

40 *
byãs
;

41 
T˛_Obj
 *
pRë
;

42 
	`as£π
(
objc
==2);

44 
byãs
 = 
	`T˛_GëSåögFromObj
(
objv
[1], &
Àn
);

45 
pRë
 = 
	`T˛_NewByãAºayObj
((
u8
*)
byãs
, 
Àn
+1);

46 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

47  
TCL_OK
;

48 
	}
}

61 
SQLITE_TCLAPI
 
	$ã°_vÆue_ovîhód
(

62 * 
˛õ¡D©a
,

63 
T˛_I¡îp
 *
öãΩ
,

64 
objc
,

65 
T˛_Obj
 *
CONST
 
objv
[]

67 
do_ˇŒs
;

68 
ª≥©_cou¡
;

69 
i
;

70 
Mem
 
vÆ
;

72 if–
objc
!=3 ){

73 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

74 
	`T˛_GëSåögFromObj
(
objv
[0], 0), " <repeat-count> <do-calls>", 0);

75  
TCL_ERROR
;

78 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ª≥©_cou¡
ËË 
TCL_ERROR
;

79 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
do_ˇŒs
ËË 
TCL_ERROR
;

81 
vÆ
.
Êags
 = 
MEM_Så
|
MEM_Tîm
|
MEM_Sètic
;

82 
vÆ
.
z
 = "hello world";

83 
vÆ
.
íc
 = 
SQLITE_UTF8
;

85 
i
=0; i<
ª≥©_cou¡
; i++){

86 if–
do_ˇŒs
 ){

87 
	`sqlôe3_vÆue_ãxt
(&
vÆ
);

91  
TCL_OK
;

92 
	}
}

94 
u8
 
	$«me_to_íc
(
T˛_I¡îp
 *
öãΩ
, 
T˛_Obj
 *
pObj
){

95 
	sEncName
 {

96 *
zName
;

97 
u8
 
íc
;

98 } 
í˙ames
[] = {

99 { "UTF8", 
SQLITE_UTF8
 },

100 { "UTF16LE", 
SQLITE_UTF16LE
 },

101 { "UTF16BE", 
SQLITE_UTF16BE
 },

102 { "UTF16", 
SQLITE_UTF16
 },

105 
EncName
 *
pEnc
;

106 *
z
 = 
	`T˛_GëSåög
(
pObj
);

107 
pEnc
=&
í˙ames
[0];ÖEnc->
zName
;ÖEnc++){

108 if–0==
	`sqlôe3SåICmp
(
z
, 
pEnc
->
zName
) ){

112 if–!
pEnc
->
íc
 ){

113 
	`T˛_AµídResu…
(
öãΩ
, "NÿsuchÉncodög: ", 
z
, 0);

115 if–
pEnc
->
íc
==
SQLITE_UTF16
 ){

116  
SQLITE_UTF16NATIVE
;

118  
pEnc
->
íc
;

119 
	}
}

125 
SQLITE_TCLAPI
 
	$ã°_å™¶©e
(

126 * 
˛õ¡D©a
,

127 
T˛_I¡îp
 *
öãΩ
,

128 
objc
,

129 
T˛_Obj
 *
CONST
 
objv
[]

131 
u8
 
íc_‰om
;

132 
u8
 
íc_to
;

133 
sqlôe3_vÆue
 *
pVÆ
;

135 *
z
;

136 
Àn
;

137 (*
xDñ
)(*
p
Ë
SQLITE_STATIC
;

139 if–
objc
!=4 && objc!=5 ){

140 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

141 
	`T˛_GëSåögFromObj
(
objv
[0], 0),

144  
TCL_ERROR
;

146 if–
objc
==5 ){

147 
xDñ
 = 
sqlôe3_‰ì
;

150 
íc_‰om
 = 
	`«me_to_íc
(
öãΩ
, 
objv
[2]);

151 if–!
íc_‰om
 )  
TCL_ERROR
;

152 
íc_to
 = 
	`«me_to_íc
(
öãΩ
, 
objv
[3]);

153 if–!
íc_to
 )  
TCL_ERROR
;

155 
pVÆ
 = 
	`sqlôe3VÆueNew
(0);

157 if–
íc_‰om
==
SQLITE_UTF8
 ){

158 
z
 = 
	`T˛_GëSåög
(
objv
[1]);

159 if–
objc
==5 ){

160 
z
 = 
	`sqlôe3_m¥ötf
("%s", z);

162 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
z
, 
íc_‰om
, 
xDñ
);

164 
z
 = (*)
	`T˛_GëByãAºayFromObj
(
objv
[1], &
Àn
);

165 if–
objc
==5 ){

166 *
zTmp
 = 
z
;

167 
z
 = 
	`sqlôe3_mÆloc
(
Àn
);

168 
	`mem˝y
(
z
, 
zTmp
, 
Àn
);

170 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
z
, 
íc_‰om
, 
xDñ
);

173 
z
 = (*)
	`sqlôe3VÆueText
(
pVÆ
, 
íc_to
);

174 
Àn
 = 
	`sqlôe3VÆueByãs
(
pVÆ
, 
íc_to
Ë+ (íc_to==
SQLITE_UTF8
?1:2);

175 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
((
u8
*)
z
, 
Àn
));

177 
	`sqlôe3VÆueFªe
(
pVÆ
);

179  
TCL_OK
;

180 
	}
}

188 
sqlôe3UtfSñfTe°
();

189 
SQLITE_TCLAPI
 
	$ã°_å™¶©e_£l·e°
(

190 * 
˛õ¡D©a
,

191 
T˛_I¡îp
 *
öãΩ
,

192 
objc
,

193 
T˛_Obj
 *
CONST
 
objv
[]

195 #i‚de‡
SQLITE_OMIT_UTF16


196 
	`sqlôe3UtfSñfTe°
();

198  
SQLITE_OK
;

199 
	}
}

205 
	$Sqlôëe°5_Inô
(
T˛_I¡îp
 *
öãΩ
){

207 *
zName
;

208 
T˛_ObjCmdProc
 *
xProc
;

209 } 
aCmd
[] = {

210 { "bö¨ize", (
T˛_ObjCmdProc
*)
bö¨ize
 },

211 { "ã°_vÆue_ovîhód", (
T˛_ObjCmdProc
*)
ã°_vÆue_ovîhód
 },

212 { "ã°_å™¶©e", (
T˛_ObjCmdProc
*)
ã°_å™¶©e
 },

213 { "å™¶©e_£l·e°", (
T˛_ObjCmdProc
*)
ã°_å™¶©e_£l·e°
},

215 
i
;

216 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

217 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

219  
SQLITE_OK
;

220 
	}
}

	@test6.c

17 #i‡
SQLITE_TEST


18 
	~"sqlôeI¡.h
"

19 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

20 
	~"sqlôe_t˛.h
"

22 
	~"t˛.h
"

25 #i‚de‡
SQLITE_OMIT_DISKIO


29 
CøshFûe
 
	tCøshFûe
;

30 
CøshGlobÆ
 
	tCøshGlobÆ
;

31 
WrôeBuf„r
 
	tWrôeBuf„r
;

121 
	sWrôeBuf„r
 {

122 
i64
 
	miOff£t
;

123 
	mnBuf
;

124 
u8
 *
	mzBuf
;

125 
CøshFûe
 *
	mpFûe
;

127 
WrôeBuf„r
 *
	mpNext
;

130 
	sCøshFûe
 {

131 c⁄° 
sqlôe3_io_mëhods
 *
	mpMëhod
;

132 
sqlôe3_fûe
 *
	mpRólFûe
;

133 *
	mzName
;

134 
	mÊags
;

140 
u8
 *
	mzD©a
;

141 
	mnD©a
;

142 
i64
 
	miSize
;

145 
	sCøshGlobÆ
 {

146 
WrôeBuf„r
 *
	mpWrôeLi°
;

147 
WrôeBuf„r
 *
	mpWrôeLi°End
;

149 
	miSe˘‹Size
;

150 
	miDevi˚Ch¨a˘îi°ics
;

152 
	miCøsh
;

153 
	mzCøshFûe
[500];

156 
CøshGlobÆ
 
	gg
 = {0, 0, 
SQLITE_DEFAULT_SECTOR_SIZE
, 0, 0};

161 
	gsqlôe3CøshTe°E«bÀ
 = 0;

163 *
	$¸ash_mÆloc
(
nByã
){

164  (*)
	`T˛_AŒoc
((
size_t
)
nByã
);

165 
	}
}

166 
	$¸ash_‰ì
(*
p
){

167 
	`T˛_Fªe
(
p
);

168 
	}
}

169 *
	$¸ash_ªÆloc
(*
p
, 
n
){

170  (*)
	`T˛_RóŒoc
(
p
, (
size_t
)
n
);

171 
	}
}

177 
	$wrôeDbFûe
(
CøshFûe
 *
p
, 
u8
 *
z
, 
i64
 
iAmt
, i64 
iOff
){

178 
rc
 = 
SQLITE_OK
;

179 
iSkù
 = 0;

180 if–(
iAmt
-
iSkù
)>0 ){

181 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pRólFûe
, &
z
[
iSkù
], ()(
iAmt
-iSkù), 
iOff
+iSkip);

183  
rc
;

184 
	}
}

190 
	$wrôeLi°Sync
(
CøshFûe
 *
pFûe
, 
isCøsh
){

191 
rc
 = 
SQLITE_OK
;

192 
iDc
 = 
g
.
iDevi˚Ch¨a˘îi°ics
;

194 
WrôeBuf„r
 *
pWrôe
;

195 
WrôeBuf„r
 **
µPå
;

204 
WrôeBuf„r
 *
pFöÆ
 = 0;

205 if–!
isCøsh
 ){

206 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôe;ÖWrôeıWrôe->
pNext
){

207 if–
pWrôe
->
pFûe
==pFile ){

208 
pFöÆ
 = 
pWrôe
;

211 }if–
iDc
&(
SQLITE_IOCAP_SEQUENTIAL
|
SQLITE_IOCAP_SAFE_APPEND
) ){

212 
nWrôe
 = 0;

213 
iFöÆ
;

214 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôe;ÖWrôeıWrôe->
pNext
Ë
nWrôe
++;

215 
	`sqlôe3_øndom√ss
((), &
iFöÆ
);

216 
iFöÆ
 = ((iFöÆ<0)?-1*iFöÆ:iFöÆ)%
nWrôe
;

217 
pWrôe
=
g
.
pWrôeLi°
; 
iFöÆ
>0;ÖWrôeıWrôe->
pNext
) iFinal--;

218 
pFöÆ
 = 
pWrôe
;

221 #ifde‡
TRACE_CRASHTEST


222 if–
pFûe
 ){

223 
	`¥ötf
("Syn¯%†(i†%†¸ash)\n", 
pFûe
->
zName
, (
isCøsh
?"a":"notá"));

227 
µPå
 = &
g
.
pWrôeLi°
;

228 
pWrôe
=*
µPå
; 
rc
==
SQLITE_OK
 &&ÖWrite;ÖWrite=*ppPtr){

229 
sqlôe3_fûe
 *
pRólFûe
 = 
pWrôe
->
pFûe
->pRealFile;

235 
eA˘i⁄
 = 0;

236 if–!
isCøsh
 ){

237 
eA˘i⁄
 = 2;

238 if–(
pWrôe
->
pFûe
=ıFûê|| 
iDc
&
SQLITE_IOCAP_SEQUENTIAL
) ){

239 
eA˘i⁄
 = 1;

242 
øndom
;

243 
	`sqlôe3_øndom√ss
(1, &
øndom
);

248 if–(
iDc
&
SQLITE_IOCAP_ATOMIC
Ë|| (
pWrôe
->
zBuf
==0) ){

249 
øndom
 &= 0x01;

256 if–(
iDc
&
SQLITE_IOCAP_SEQUENTIAL
 && 
pWrôe
!=
pFöÆ
) ){

257 
øndom
 = 0;

264 if–
iDc
&
SQLITE_IOCAP_SAFE_APPEND
 && 
pWrôe
->
zBuf
 ){

265 
i64
 
iSize
;

266 
	`sqlôe3OsFûeSize
(
pRólFûe
, &
iSize
);

267 if–
iSize
==
pWrôe
->
iOff£t
 ){

268 
øndom
 = 0;

272 if–(
øndom
&0x06)==0x06 ){

273 
eA˘i⁄
 = 3;

275 
eA˘i⁄
 = ((
øndom
&0x01)?2:1);

279  
eA˘i⁄
 ){

281 if–
pWrôe
->
zBuf
 ){

282 
rc
 = 
	`wrôeDbFûe
(

283 
pWrôe
->
pFûe
,ÖWrôe->
zBuf
,ÖWrôe->
nBuf
,ÖWrôe->
iOff£t


286 
rc
 = 
	`sqlôe3OsTrunˇã
(
pRólFûe
, 
pWrôe
->
iOff£t
);

288 *
µPå
 = 
pWrôe
->
pNext
;

289 #ifde‡
TRACE_CRASHTEST


290 if–
isCøsh
 ){

291 
	`¥ötf
("Writing %d bytes @ %d (%s)\n",

292 
pWrôe
->
nBuf
, (ÌWrôe->
iOff£t
,ÖWrôe->
pFûe
->
zName


296 
	`¸ash_‰ì
(
pWrôe
);

300 
µPå
 = &
pWrôe
->
pNext
;

301 #ifde‡
TRACE_CRASHTEST


302 if–
isCøsh
 ){

303 
	`¥ötf
("Omiting %d bytes @ %d (%s)\n",

304 
pWrôe
->
nBuf
, (ÌWrôe->
iOff£t
,ÖWrôe->
pFûe
->
zName


311 
u8
 *
zG¨bage
;

312 
iFú°
 = ()(
pWrôe
->
iOff£t
/
g
.
iSe˘‹Size
);

313 
iLa°
 = ()((
pWrôe
->
iOff£t
+pWrôe->
nBuf
-1)/
g
.
iSe˘‹Size
);

315 
	`as£π
(
pWrôe
->
zBuf
);

317 #ifde‡
TRACE_CRASHTEST


318 
	`¥ötf
("Trashing %d sectors @ %lld (sector %d) (%s)\n",

319 1+
iLa°
-
iFú°
, 
pWrôe
->
iOff£t
, iFú°,ÖWrôe->
pFûe
->
zName


323 
zG¨bage
 = 
	`¸ash_mÆloc
(
g
.
iSe˘‹Size
);

324 if–
zG¨bage
 ){

325 
sqlôe3_öt64
 
i
;

326 
i
=
iFú°
; 
rc
==
SQLITE_OK
 && i<=
iLa°
; i++){

327 
	`sqlôe3_øndom√ss
(
g
.
iSe˘‹Size
, 
zG¨bage
);

328 
rc
 = 
	`wrôeDbFûe
(

329 
pWrôe
->
pFûe
, 
zG¨bage
, 
g
.
iSe˘‹Size
, 
i
*g.iSectorSize

332 
	`¸ash_‰ì
(
zG¨bage
);

334 
rc
 = 
SQLITE_NOMEM
;

337 
µPå
 = &
pWrôe
->
pNext
;

342 
	`as£π
(!"Cannot happen");

345 if–
pWrôe
==
pFöÆ
 ) ;

348 if–
rc
==
SQLITE_OK
 && 
isCøsh
 ){

349 
	`exô
(-1);

352 
pWrôe
=
g
.
pWrôeLi°
;ÖWrôê&&ÖWrôe->
pNext
;ÖWrite=pWrite->pNext);

353 
g
.
pWrôeLi°End
 = 
pWrôe
;

355  
rc
;

356 
	}
}

361 
	$wrôeLi°Aµíd
(

362 
sqlôe3_fûe
 *
pFûe
,

363 
sqlôe3_öt64
 
iOff£t
,

364 c⁄° 
u8
 *
zBuf
,

365 
nBuf


367 
WrôeBuf„r
 *
pNew
;

369 
	`as£π
((
zBuf
 && 
nBuf
) || (!nBuf && !zBuf));

371 
pNew
 = (
WrôeBuf„r
 *)
	`¸ash_mÆloc
((WrôeBuf„rË+ 
nBuf
);

372 if–
pNew
==0 ){

373 
	`Ârötf
(
°dîr
, "out of memory inÅhe crash simulator\n");

375 
	`mem£t
(
pNew
, 0, (
WrôeBuf„r
)+
nBuf
);

376 
pNew
->
iOff£t
 = iOffset;

377 
pNew
->
nBuf
 =ÇBuf;

378 
pNew
->
pFûe
 = (
CøshFûe
 *)pFile;

379 if–
zBuf
 ){

380 
pNew
->
zBuf
 = (
u8
 *)&pNew[1];

381 
	`mem˝y
(
pNew
->
zBuf
, zBuf, 
nBuf
);

384 if–
g
.
pWrôeLi°
 ){

385 
	`as£π
(
g
.
pWrôeLi°End
);

386 
g
.
pWrôeLi°End
->
pNext
 = 
pNew
;

388 
g
.
pWrôeLi°
 = 
pNew
;

390 
g
.
pWrôeLi°End
 = 
pNew
;

392  
SQLITE_OK
;

393 
	}
}

398 
	$cfClo£
(
sqlôe3_fûe
 *
pFûe
){

399 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

400 
	`wrôeLi°Sync
(
pCøsh
, 0);

401 
	`sqlôe3OsClo£
(
pCøsh
->
pRólFûe
);

402  
SQLITE_OK
;

403 
	}
}

408 
	$cfRód
(

409 
sqlôe3_fûe
 *
pFûe
,

410 *
zBuf
,

411 
iAmt
,

412 
sqlôe_öt64
 
iOf°


414 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

415 
nC›y
 = ()
	`MIN
((
i64
)
iAmt
, (
pCøsh
->
iSize
 - 
iOf°
));

417 if–
nC›y
>0 ){

418 
	`mem˝y
(
zBuf
, &
pCøsh
->
zD©a
[
iOf°
], 
nC›y
);

422 if–
nC›y
<
iAmt
 ){

423  
SQLITE_IOERR_SHORT_READ
;

426  
SQLITE_OK
;

427 
	}
}

432 
	$cfWrôe
(

433 
sqlôe3_fûe
 *
pFûe
,

434 c⁄° *
zBuf
,

435 
iAmt
,

436 
sqlôe_öt64
 
iOf°


438 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

439 if–
iAmt
+
iOf°
>
pCøsh
->
iSize
 ){

440 
pCøsh
->
iSize
 = ()(
iAmt
+
iOf°
);

442  
pCøsh
->
iSize
>pCøsh->
nD©a
 ){

443 
u8
 *
zNew
;

444 
nNew
 = (
pCøsh
->
nD©a
*2) + 4096;

445 
zNew
 = 
	`¸ash_ªÆloc
(
pCøsh
->
zD©a
, 
nNew
);

446 if–!
zNew
 ){

447  
SQLITE_NOMEM
;

449 
	`mem£t
(&
zNew
[
pCøsh
->
nD©a
], 0, 
nNew
-pCrash->nData);

450 
pCøsh
->
nD©a
 = 
nNew
;

451 
pCøsh
->
zD©a
 = 
zNew
;

453 
	`mem˝y
(&
pCøsh
->
zD©a
[
iOf°
], 
zBuf
, 
iAmt
);

454  
	`wrôeLi°Aµíd
(
pFûe
, 
iOf°
, 
zBuf
, 
iAmt
);

455 
	}
}

460 
	$cfTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

461 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

462 
	`as£π
(
size
>=0);

463 if–
pCøsh
->
iSize
>
size
 ){

464 
pCøsh
->
iSize
 = ()
size
;

466  
	`wrôeLi°Aµíd
(
pFûe
, 
size
, 0, 0);

467 
	}
}

472 
	$cfSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

473 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

474 
isCøsh
 = 0;

476 c⁄° *
zName
 = 
pCøsh
->zName;

477 c⁄° *
zCøshFûe
 = 
g
.zCrashFile;

478 
nName
 = ()
	`°æí
(
zName
);

479 
nCøshFûe
 = ()
	`°æí
(
zCøshFûe
);

481 if–
nCøshFûe
>0 && 
zCøshFûe
[nCrashFile-1]=='*' ){

482 
nCøshFûe
--;

483 if–
nName
>
nCøshFûe
 )ÇName =ÇCrashFile;

486 #ifde‡
TRACE_CRASHTEST


487 
	`¥ötf
("cfSync():ÇName = %d,ÇCrashFile = %d, zName = %s, zCrashFile = %s\n",

488 
nName
, 
nCøshFûe
, 
zName
, 
zCøshFûe
);

491 if–
nName
==
nCøshFûe
 && 0==
	`memcmp
(
zName
, 
zCøshFûe
,ÇName) ){

492 #ifde‡
TRACE_CRASHTEST


493 
	`¥ötf
("cfSync():Çamêm©ched, g.iCøsh = %d\n", 
g
.
iCøsh
);

495 if–(--
g
.
iCøsh
)==0 ) 
isCøsh
 = 1;

498  
	`wrôeLi°Sync
(
pCøsh
, 
isCøsh
);

499 
	}
}

504 
	$cfFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

505 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

506 *
pSize
 = (
i64
)
pCøsh
->
iSize
;

507  
SQLITE_OK
;

508 
	}
}

513 
	$cfLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

514  
	`sqlôe3OsLock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
eLock
);

515 
	}
}

516 
	$cfU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

517  
	`sqlôe3OsU∆ock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
eLock
);

518 
	}
}

519 
	$cfCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

520  
	`sqlôe3OsCheckRe£rvedLock
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
pResOut
);

521 
	}
}

522 
	$cfFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

523 if–
›
==
SQLITE_FCNTL_SIZE_HINT
 ){

524 
CøshFûe
 *
pCøsh
 = (CøshFûê*)
pFûe
;

525 
i64
 
nByã
 = *(i64 *)
pArg
;

526 if–
nByã
>
pCøsh
->
iSize
 ){

527 if–
SQLITE_OK
==
	`wrôeLi°Aµíd
(
pFûe
, 
nByã
, 0, 0) ){

528 
pCøsh
->
iSize
 = ()
nByã
;

531  
SQLITE_OK
;

533  
	`sqlôe3OsFûeC⁄åﬁ
(((
CøshFûe
 *)
pFûe
)->
pRólFûe
, 
›
, 
pArg
);

534 
	}
}

541 
	$cfSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

542  
g
.
iSe˘‹Size
;

543 
	}
}

544 
	$cfDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

545  
g
.
iDevi˚Ch¨a˘îi°ics
;

546 
	}
}

551 
	$cfShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

552  
	`sqlôe3OsShmLock
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
of°
, 
n
, 
Êags
);

553 
	}
}

554 
	$cfShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

555 
	`sqlôe3OsShmB¨rõr
(((
CøshFûe
*)
pFûe
)->
pRólFûe
);

556 
	}
}

557 
	$cfShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

558  
	`sqlôe3OsShmUnm≠
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
dñFœg
);

559 
	}
}

560 
	$cfShmM≠
(

561 
sqlôe3_fûe
 *
pFûe
,

562 
iRegi⁄
,

563 
sz
,

564 
w
,

565 vﬁ©ûê**
µ


567  
	`sqlôe3OsShmM≠
(((
CøshFûe
*)
pFûe
)->
pRólFûe
, 
iRegi⁄
, 
sz
, 
w
, 
µ
);

568 
	}
}

570 c⁄° 
sqlôe3_io_mëhods
 
	gCøshFûeVèb
 = {

572 
cfClo£
,

573 
cfRód
,

574 
cfWrôe
,

575 
cfTrunˇã
,

576 
cfSync
,

577 
cfFûeSize
,

578 
cfLock
,

579 
cfU∆ock
,

580 
cfCheckRe£rvedLock
,

581 
cfFûeC⁄åﬁ
,

582 
cfSe˘‹Size
,

583 
cfDevi˚Ch¨a˘îi°ics
,

584 
cfShmM≠
,

585 
cfShmLock
,

586 
cfShmB¨rõr
,

587 
cfShmUnm≠


593 
	s¸ashAµD©a
 {

594 
sqlôe3_vfs
 *
	mpOrig
;

606 
	$cfO≥n
(

607 
sqlôe3_vfs
 *
pCfVfs
,

608 c⁄° *
zName
,

609 
sqlôe3_fûe
 *
pFûe
,

610 
Êags
,

611 *
pOutFœgs


613 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

614 
rc
;

615 
CøshFûe
 *
pWøµî
 = (CøshFûê*)
pFûe
;

616 
sqlôe3_fûe
 *
pRól
 = (sqlôe3_fûe*)&
pWøµî
[1];

618 
	`mem£t
(
pWøµî
, 0, (
CøshFûe
));

619 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zName
, 
pRól
, 
Êags
, 
pOutFœgs
);

621 if–
rc
==
SQLITE_OK
 ){

622 
i64
 
iSize
;

623 
pWøµî
->
pMëhod
 = &
CøshFûeVèb
;

624 
pWøµî
->
zName
 = (*)zName;

625 
pWøµî
->
pRólFûe
 = 
pRól
;

626 
rc
 = 
	`sqlôe3OsFûeSize
(
pRól
, &
iSize
);

627 
pWøµî
->
iSize
 = ()iSize;

628 
pWøµî
->
Êags
 = flags;

630 if–
rc
==
SQLITE_OK
 ){

631 
pWøµî
->
nD©a
 = ()(4096 +ÖWøµî->
iSize
);

632 
pWøµî
->
zD©a
 = 
	`¸ash_mÆloc
’Wøµî->
nD©a
);

633 if–
pWøµî
->
zD©a
 ){

642 
i64
 
iOff
;

644 
	`mem£t
(
pWøµî
->
zD©a
, 0,ÖWøµî->
nD©a
);

645 
iOff
=0; iOff<
pWøµî
->
iSize
; iOff += 512){

646 
nRód
 = ()(
pWøµî
->
iSize
 - 
iOff
);

647 if–
nRód
>512 )ÇRead = 512;

648 
rc
 = 
	`sqlôe3OsRód
(
pRól
, &
pWøµî
->
zD©a
[
iOff
], 
nRód
, iOff);

651 
rc
 = 
SQLITE_NOMEM
;

654 if–
rc
!=
SQLITE_OK
 && 
pWøµî
->
pMëhod
 ){

655 
	`sqlôe3OsClo£
(
pFûe
);

657  
rc
;

658 
	}
}

660 
	$cfDñëe
(
sqlôe3_vfs
 *
pCfVfs
, c⁄° *
zP©h
, 
dúSync
){

661 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

662  
pVfs
->
	`xDñëe
’Vfs, 
zP©h
, 
dúSync
);

663 
	}
}

664 
	$cfAc˚ss
(

665 
sqlôe3_vfs
 *
pCfVfs
,

666 c⁄° *
zP©h
,

667 
Êags
,

668 *
pResOut


670 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

671  
pVfs
->
	`xAc˚ss
’Vfs, 
zP©h
, 
Êags
, 
pResOut
);

672 
	}
}

673 
	$cfFuŒP©h«me
(

674 
sqlôe3_vfs
 *
pCfVfs
,

675 c⁄° *
zP©h
,

676 
nP©hOut
,

677 *
zP©hOut


679 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

680  
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zP©h
, 
nP©hOut
, 
zP©hOut
);

681 
	}
}

682 *
	$cfDlO≥n
(
sqlôe3_vfs
 *
pCfVfs
, c⁄° *
zP©h
){

683 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

684  
pVfs
->
	`xDlO≥n
’Vfs, 
zP©h
);

685 
	}
}

686 
	$cfDlEº‹
(
sqlôe3_vfs
 *
pCfVfs
, 
nByã
, *
zEºMsg
){

687 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

688 
pVfs
->
	`xDlEº‹
’Vfs, 
nByã
, 
zEºMsg
);

689 
	}
}

690 (*
	$cfDlSym
(
sqlôe3_vfs
 *
pCfVfs
, *
pH
, c⁄° *
zSym
))(){

691 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

692  
pVfs
->
	`xDlSym
’Vfs, 
pH
, 
zSym
);

693 
	}
}

694 
	$cfDlClo£
(
sqlôe3_vfs
 *
pCfVfs
, *
pH™dÀ
){

695 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

696 
pVfs
->
	`xDlClo£
’Vfs, 
pH™dÀ
);

697 
	}
}

698 
	$cfR™dom√ss
(
sqlôe3_vfs
 *
pCfVfs
, 
nByã
, *
zBufOut
){

699 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

700  
pVfs
->
	`xR™dom√ss
’Vfs, 
nByã
, 
zBufOut
);

701 
	}
}

702 
	$cfSÀï
(
sqlôe3_vfs
 *
pCfVfs
, 
nMi¸o
){

703 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

704  
pVfs
->
	`xSÀï
’Vfs, 
nMi¸o
);

705 
	}
}

706 
	$cfCuºítTime
(
sqlôe3_vfs
 *
pCfVfs
, *
pTimeOut
){

707 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

708  
pVfs
->
	`xCuºítTime
’Vfs, 
pTimeOut
);

709 
	}
}

710 
	$cfGëLa°Eº‹
(
sqlôe3_vfs
 *
pCfVfs
, 
n
, *
z
){

711 
sqlôe3_vfs
 *
pVfs
 = (sqlôe3_vf†*)
pCfVfs
->
pAµD©a
;

712  
pVfs
->
	`xGëLa°Eº‹
’Vfs, 
n
, 
z
);

713 
	}
}

715 
	$¥o˚ssDevSymArgs
(

716 
T˛_I¡îp
 *
öãΩ
,

717 
objc
,

718 
T˛_Obj
 *
CONST
 
objv
[],

719 *
piDevi˚Ch¨
,

720 *
piSe˘‹Size


722 
	sDevi˚Fœg
 {

723 *
zName
;

724 
iVÆue
;

725 } 
aFœg
[] = {

726 { "©omic", 
SQLITE_IOCAP_ATOMIC
 },

727 { "©omic512", 
SQLITE_IOCAP_ATOMIC512
 },

728 { "©omic1k", 
SQLITE_IOCAP_ATOMIC1K
 },

729 { "©omic2k", 
SQLITE_IOCAP_ATOMIC2K
 },

730 { "©omic4k", 
SQLITE_IOCAP_ATOMIC4K
 },

731 { "©omic8k", 
SQLITE_IOCAP_ATOMIC8K
 },

732 { "©omic16k", 
SQLITE_IOCAP_ATOMIC16K
 },

733 { "©omic32k", 
SQLITE_IOCAP_ATOMIC32K
 },

734 { "©omic64k", 
SQLITE_IOCAP_ATOMIC64K
 },

735 { "£quítül", 
SQLITE_IOCAP_SEQUENTIAL
 },

736 { "ß„_≠≥nd", 
SQLITE_IOCAP_SAFE_APPEND
 },

737 { "powîß„_ovîwrôe", 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 },

741 
i
;

742 
iDc
 = 0;

743 
iSe˘‹Size
 = 0;

744 
£tSe˘‹size
 = 0;

745 
£tDevi˚Ch¨
 = 0;

747 
i
=0; i<
objc
; i+=2){

748 
nO±
;

749 *
zO±
 = 
	`T˛_GëSåögFromObj
(
objv
[
i
], &
nO±
);

751 if–(
nO±
>11 ||ÇO±<2 || 
	`°∫cmp
("-£˘‹size", 
zO±
,ÇOpt))

752 && (
nO±
>16 ||ÇO±<2 || 
	`°∫cmp
("-ch¨a˘îi°ics", 
zO±
,ÇOpt))

754 
	`T˛_AµídResu…
(
öãΩ
,

755 "Bad o±i⁄: \"", 
zO±
,

758  
TCL_ERROR
;

760 if–
i
==
objc
-1 ){

761 
	`T˛_AµídResu…
(
öãΩ
, "O±i⁄Ñequúe†™árgumít: \"", 
zO±
, "\"",0);

762  
TCL_ERROR
;

765 if–
zO±
[1]=='s' ){

766 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
iSe˘‹Size
) ){

767  
TCL_ERROR
;

769 
£tSe˘‹size
 = 1;

771 
j
;

772 
T˛_Obj
 **
≠Obj
;

773 
nObj
;

774 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[
i
+1], &
nObj
, &
≠Obj
) ){

775  
TCL_ERROR
;

777 
j
=0; j<
nObj
; j++){

778 
rc
;

779 
iChoi˚
;

780 
T˛_Obj
 *
pFœg
 = 
	`T˛_Du∂iˇãObj
(
≠Obj
[
j
]);

781 
	`T˛_In¸RefCou¡
(
pFœg
);

782 
	`T˛_UtfToLowî
(
	`T˛_GëSåög
(
pFœg
));

784 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

785 
öãΩ
, 
pFœg
, 
aFœg
, ◊Fœg[0]), "nÿsuch fœg", 0, &
iChoi˚


787 
	`T˛_De¸RefCou¡
(
pFœg
);

788 if–
rc
 ){

789  
TCL_ERROR
;

792 
iDc
 |
aFœg
[
iChoi˚
].
iVÆue
;

794 
£tDevi˚Ch¨
 = 1;

798 if–
£tDevi˚Ch¨
 ){

799 *
piDevi˚Ch¨
 = 
iDc
;

801 if–
£tSe˘‹size
 ){

802 *
piSe˘‹Size
 = 
iSe˘‹Size
;

805  
TCL_OK
;

806 
	}
}

814 
SQLITE_TCLAPI
 
	$¸ashNowCmd
(

815 * 
˛õ¡D©a
,

816 
T˛_I¡îp
 *
öãΩ
,

817 
objc
,

818 
T˛_Obj
 *
CONST
 
objv
[]

820 if–
objc
!=1 ){

821 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

822  
TCL_ERROR
;

824 
	`wrôeLi°Sync
(0, 1);

825 
	`as£π
( 0 );

826  
TCL_OK
;

827 
	}
}

835 
SQLITE_TCLAPI
 
	$¸ashE«bÀCmd
(

836 * 
˛õ¡D©a
,

837 
T˛_I¡îp
 *
öãΩ
,

838 
objc
,

839 
T˛_Obj
 *
CONST
 
objv
[]

841 
isE«bÀ
;

842 
sqlôe3_vfs
 
¸ashVfs
 = {

850 
cfO≥n
,

851 
cfDñëe
,

852 
cfAc˚ss
,

853 
cfFuŒP©h«me
,

854 
cfDlO≥n
,

855 
cfDlEº‹
,

856 
cfDlSym
,

857 
cfDlClo£
,

858 
cfR™dom√ss
,

859 
cfSÀï
,

860 
cfCuºítTime
,

861 
cfGëLa°Eº‹
,

865 if–
objc
!=2 ){

866 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ENABLE");

867  
TCL_ERROR
;

870 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isE«bÀ
) ){

871  
TCL_ERROR
;

874 if–(
isE«bÀ
 && 
¸ashVfs
.
pAµD©a
) || (!isEnable && !crashVfs.pAppData) ){

875  
TCL_OK
;

878 if–
¸ashVfs
.
pAµD©a
==0 ){

879 
sqlôe3_vfs
 *
pOrigöÆVfs
 = 
	`sqlôe3_vfs_föd
(0);

880 
¸ashVfs
.
mxP©h«me
 = 
pOrigöÆVfs
->mxPathname;

881 
¸ashVfs
.
pAµD©a
 = (*)
pOrigöÆVfs
;

882 
¸ashVfs
.
szOsFûe
 = (
CøshFûe
Ë+ 
pOrigöÆVfs
->szOsFile;

883 
	`sqlôe3_vfs_ªgi°î
(&
¸ashVfs
, 0);

885 
¸ashVfs
.
pAµD©a
 = 0;

886 
	`sqlôe3_vfs_uƒegi°î
(&
¸ashVfs
);

889  
TCL_OK
;

890 
	}
}

910 
SQLITE_TCLAPI
 
	$¸ashP¨amsObjCmd
(

911 * 
˛õ¡D©a
,

912 
T˛_I¡îp
 *
öãΩ
,

913 
objc
,

914 
T˛_Obj
 *
CONST
 
objv
[]

916 
iDñay
;

917 c⁄° *
zCøshFûe
;

918 
nCøshFûe
, 
iDc
, 
iSe˘‹Size
;

920 
iDc
 = -1;

921 
iSe˘‹Size
 = -1;

923 if–
objc
<3 ){

924 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?OPTIONS? DELAY CRASHFILE");

925 
îr‹
;

928 
zCøshFûe
 = 
	`T˛_GëSåögFromObj
(
objv
[
objc
-1], &
nCøshFûe
);

929 if–
nCøshFûe
>=(
g
.
zCøshFûe
) ){

930 
	`T˛_AµídResu…
(
öãΩ
, "Fûíamêi†toÿl⁄g: \"", 
zCøshFûe
, "\"", 0);

931 
îr‹
;

933 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
objc
-2], &
iDñay
) ){

934 
îr‹
;

937 if–
	`¥o˚ssDevSymArgs
(
öãΩ
, 
objc
-3, &
objv
[1], &
iDc
, &
iSe˘‹Size
) ){

938  
TCL_ERROR
;

941 if–
iDc
>=0 ){

942 
g
.
iDevi˚Ch¨a˘îi°ics
 = 
iDc
;

944 if–
iSe˘‹Size
>=0 ){

945 
g
.
iSe˘‹Size
 = iSectorSize;

948 
g
.
iCøsh
 = 
iDñay
;

949 
	`mem˝y
(
g
.
zCøshFûe
, zCøshFûe, 
nCøshFûe
+1);

950 
sqlôe3CøshTe°E«bÀ
 = 1;

951  
TCL_OK
;

953 
îr‹
:

954  
TCL_ERROR
;

955 
	}
}

957 
SQLITE_TCLAPI
 
	$devSymObjCmd
(

958 * 
˛õ¡D©a
,

959 
T˛_I¡îp
 *
öãΩ
,

960 
objc
,

961 
T˛_Obj
 *
CONST
 
objv
[]

963 
	`devsym_ªgi°î
(
iDevi˚Ch¨
, 
iSe˘‹Size
);

965 
iDc
 = -1;

966 
iSe˘‹Size
 = -1;

968 if–
	`¥o˚ssDevSymArgs
(
öãΩ
, 
objc
-1, &
objv
[1], &
iDc
, &
iSe˘‹Size
) ){

969  
TCL_ERROR
;

971 
	`devsym_ªgi°î
(
iDc
, 
iSe˘‹Size
);

973  
TCL_OK
;

975 
	}
}

980 
SQLITE_TCLAPI
 
	$dsUƒegi°îObjCmd
(

981 * 
˛õ¡D©a
,

982 
T˛_I¡îp
 *
öãΩ
,

983 
objc
,

984 
T˛_Obj
 *
CONST
 
objv
[]

986 
	`devsym_uƒegi°î
();

988 if–
objc
!=1 ){

989 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

990  
TCL_ERROR
;

993 
	`devsym_uƒegi°î
();

994  
TCL_OK
;

995 
	}
}

1000 
SQLITE_TCLAPI
 
	$jtObjCmd
(

1001 * 
˛õ¡D©a
,

1002 
T˛_I¡îp
 *
öãΩ
,

1003 
objc
,

1004 
T˛_Obj
 *
CONST
 
objv
[]

1006 
	`jt_ªgi°î
(*, );

1007 *
zP¨ít
 = 0;

1009 if–
objc
!=2 && objc!=3 ){

1010 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-default? PARENT-VFS");

1011  
TCL_ERROR
;

1013 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[1]);

1014 if–
objc
==3 ){

1015 if–
	`°rcmp
(
zP¨ít
, "-default") ){

1016 
	`T˛_AµídResu…
(
öãΩ
,

1017 "bad o±i⁄ \"", 
zP¨ít
, "\": must be -default", 0

1019  
TCL_ERROR
;

1021 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[2]);

1024 if–!(*
zP¨ít
) ){

1025 
zP¨ít
 = 0;

1027 if–
	`jt_ªgi°î
(
zP¨ít
, 
objc
==3) ){

1028 
	`T˛_AµídResu…
(
öãΩ
, "Error in jt_register", 0);

1029  
TCL_ERROR
;

1032  
TCL_OK
;

1033 
	}
}

1038 
SQLITE_TCLAPI
 
	$jtUƒegi°îObjCmd
(

1039 * 
˛õ¡D©a
,

1040 
T˛_I¡îp
 *
öãΩ
,

1041 
objc
,

1042 
T˛_Obj
 *
CONST
 
objv
[]

1044 
	`jt_uƒegi°î
();

1046 if–
objc
!=1 ){

1047 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

1048  
TCL_ERROR
;

1051 
	`jt_uƒegi°î
();

1052  
TCL_OK
;

1053 
	}
}

1060 
	$Sqlôëe°6_Inô
(
T˛_I¡îp
 *
öãΩ
){

1061 #i‚de‡
SQLITE_OMIT_DISKIO


1062 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash_íabÀ", 
¸ashE«bÀCmd
, 0, 0);

1063 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash∑øms", 
¸ashP¨amsObjCmd
, 0, 0);

1064 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_¸ash_now", 
¸ashNowCmd
, 0, 0);

1065 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_simuœã_devi˚", 
devSymObjCmd
, 0, 0);

1066 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_devsim", 
dsUƒegi°îObjCmd
, 0, 0);

1067 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_jt_vfs", 
jtObjCmd
, 0, 0);

1068 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_jt_vfs", 
jtUƒegi°îObjCmd
, 0, 0);

1070  
TCL_OK
;

1071 
	}
}

	@test7.c

15 
	~"sqlôeI¡.h
"

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

26 #i‡
deföed
(
SQLITE_SERVER
Ë&& !deföed(
SQLITE_OMIT_SHARED_CACHE
) && \

27 
	gSQLITE_OS_UNIX
 && 
	gSQLITE_THREADSAFE


29 
	~<°dlib.h
>

30 
	~<°rög.h
>

31 
	~<±hªad.h
>

32 
	~<sched.h
>

33 
	~<˘y≥.h
>

38 
sqlôe3_˛õ¡_›í
(c⁄° *, 
sqlôe3
**);

39 
sqlôe3_˛õ¡_¥ï¨e
(
sqlôe3
*,const *,,

40 
sqlôe3_°mt
**,const **);

41 
sqlôe3_˛õ¡_°ï
(
sqlôe3_°mt
*);

42 
sqlôe3_˛õ¡_ª£t
(
sqlôe3_°mt
*);

43 
sqlôe3_˛õ¡_föÆize
(
sqlôe3_°mt
*);

44 
sqlôe3_˛õ¡_˛o£
(
sqlôe3
*);

45 
sqlôe3_£rvî_°¨t
();

46 
sqlôe3_£rvî_°›
();

47 
sqlôe3_£rvî_°¨t2
(*
≤De¸
);

53 
Thªad
 
	tThªad
;

54 
	sThªad
 {

58 *
	mzFûíame
;

59 (*
	mxOp
)(
	mThªad
*);

60 *
	mzArg
;

61 vﬁ©ûê
	m›num
;

62 vﬁ©ûê
	mbusy
;

67 vﬁ©ûê
	mcom∂ëed
;

68 
sqlôe3
 *
	mdb
;

69 
sqlôe3_°mt
 *
	mpStmt
;

70 *
	mzEº
;

71 *
	mzSèticEº
;

72 
	mrc
;

73 
	m¨gc
;

74 c⁄° *
	m¨gv
[100];

75 c⁄° *
	mcﬁv
[100];

82 
	mnSîvî
;

89 
	#N_THREAD
 26

	)

90 
Thªad
 
	gthªad£t
[
N_THREAD
];

95 *
	$˛õ¡_maö
(*
pArg
){

96 
Thªad
 *
p
 = (Thªad*)
pArg
;

97 if–
p
->
db
 ){

98 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

100 
	`sqlôe3_˛õ¡_›í
(
p
->
zFûíame
, &p->
db
);

101 if–
SQLITE_OK
!=
	`sqlôe3_îrcode
(
p
->
db
) ){

102 
p
->
zEº
 = 
	`°rdup
(
	`sqlôe3_îrmsg
’->
db
));

103 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

104 
p
->
db
 = 0;

106 
p
->
pStmt
 = 0;

107 
p
->
com∂ëed
 = 1;

108  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

109  
p
->
xOp
 ){

110 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

111 
	`sqlôe3_‰ì
(
p
->
zEº
);

112 
p
->
zEº
 = 0;

114 (*
p
->
xOp
)(p);

115 
p
->
com∂ëed
++;

116  
p
->
›num
<ı->
com∂ëed
 ) 
	`sched_yõld
();

118 if–
p
->
pStmt
 ){

119 
	`sqlôe3_˛õ¡_föÆize
(
p
->
pStmt
);

120 
p
->
pStmt
 = 0;

122 if–
p
->
db
 ){

123 
	`sqlôe3_˛õ¡_˛o£
(
p
->
db
);

124 
p
->
db
 = 0;

126 if–
p
->
zEº
 &&Ö->zEº!ı->
zSèticEº
 ){

127 
	`sqlôe3_‰ì
(
p
->
zEº
);

128 
p
->
zEº
 = 0;

130 
p
->
com∂ëed
++;

131 #i‚de‡
SQLITE_OMIT_DEPRECATED


132 
	`sqlôe3_thªad_˛ónup
();

135 
	}
}

142 
	$∑r£_˛õ¡_id
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

143 if–
zArg
==0 || zArg[0]==0 || zArg[1]!=0 || !
	`isuµî
(()zArg[0]) ){

144 
	`T˛_AµídResu…
(
öãΩ
, "thread ID must beán upper caseÜetter", 0);

147  
zArg
[0] - 'A';

148 
	}
}

156 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¸óã
(

157 *
NŸU£d
,

158 
T˛_I¡îp
 *
öãΩ
,

159 
¨gc
,

160 c⁄° **
¨gv


162 
i
;

163 
±hªad_t
 
x
;

164 
rc
;

166 if–
¨gc
!=3 ){

167 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

169  
TCL_ERROR
;

171 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

172 if–
i
<0 )  
TCL_ERROR
;

173 if–
thªad£t
[
i
].
busy
 ){

174 
	`T˛_AµídResu…
(
öãΩ
, "thªad ", 
¨gv
[1], " isálreadyÑunning", 0);

175  
TCL_ERROR
;

177 
thªad£t
[
i
].
busy
 = 1;

178 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

179 
thªad£t
[
i
].
zFûíame
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

180 
thªad£t
[
i
].
›num
 = 1;

181 
thªad£t
[
i
].
com∂ëed
 = 0;

182 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
˛õ¡_maö
, &
thªad£t
[
i
]);

183 if–
rc
 ){

184 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo createÅheÅhread", 0);

185 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zFûíame
);

186 
thªad£t
[
i
].
busy
 = 0;

187  
TCL_ERROR
;

189 
	`±hªad_dëach
(
x
);

190 if–
thªad£t
[
i
].
nSîvî
==0 ){

191 
thªad£t
[
i
].
nSîvî
 = 1;

192 
	`sqlôe3_£rvî_°¨t2
(&
thªad£t
[
i
].
nSîvî
);

194  
TCL_OK
;

195 
	}
}

200 
	$˛õ¡_waô
(
Thªad
 *
p
){

201  
p
->
›num
>p->
com∂ëed
 ) 
	`sched_yõld
();

202 
	}
}

209 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_waô
(

210 *
NŸU£d
,

211 
T˛_I¡îp
 *
öãΩ
,

212 
¨gc
,

213 c⁄° **
¨gv


215 
i
;

217 if–
¨gc
!=2 ){

218 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

220  
TCL_ERROR
;

222 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

223 if–
i
<0 )  
TCL_ERROR
;

224 if–!
thªad£t
[
i
].
busy
 ){

225 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

226  
TCL_ERROR
;

228 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

229  
TCL_OK
;

230 
	}
}

235 
	$°›_thªad
(
Thªad
 *
p
){

236 
	`˛õ¡_waô
(
p
);

237 
p
->
xOp
 = 0;

238 
p
->
›num
++;

239 
	`˛õ¡_waô
(
p
);

240 
	`sqlôe3_‰ì
(
p
->
zArg
);

241 
p
->
zArg
 = 0;

242 
	`sqlôe3_‰ì
(
p
->
zFûíame
);

243 
p
->
zFûíame
 = 0;

244 
p
->
busy
 = 0;

245 
	}
}

253 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_hÆt
(

254 *
NŸU£d
,

255 
T˛_I¡îp
 *
öãΩ
,

256 
¨gc
,

257 c⁄° **
¨gv


259 
i
;

261 if–
¨gc
!=2 ){

262 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

264  
TCL_ERROR
;

266 if–
¨gv
[1][0]=='*' &&árgv[1][1]==0 ){

267 
i
=0; i<
N_THREAD
; i++){

268 if–
thªad£t
[
i
].
busy
 ){

269 
	`°›_thªad
(&
thªad£t
[
i
]);

273 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

274 if–
i
<0 )  
TCL_ERROR
;

275 if–!
thªad£t
[
i
].
busy
 ){

276 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

277  
TCL_ERROR
;

279 
	`°›_thªad
(&
thªad£t
[
i
]);

283 
i
=0; i<
N_THREAD
 && 
thªad£t
[i].
busy
==0; i++){}

284 if–
i
>=
N_THREAD
 ){

285 
	`sqlôe3_£rvî_°›
();

287 
i
=0; i<
N_THREAD
 && 
thªad£t
[i].
nSîvî
==0; i++);

288 if–
i
==
N_THREAD
 ) ;

289 
	`sched_yõld
();

292  
TCL_OK
;

293 
	}
}

301 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¨gc
(

302 *
NŸU£d
,

303 
T˛_I¡îp
 *
öãΩ
,

304 
¨gc
,

305 c⁄° **
¨gv


307 
i
;

308 
zBuf
[100];

310 if–
¨gc
!=2 ){

311 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

313  
TCL_ERROR
;

315 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

316 if–
i
<0 )  
TCL_ERROR
;

317 if–!
thªad£t
[
i
].
busy
 ){

318 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

319  
TCL_ERROR
;

321 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

322 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
thªad£t
[
i
].
¨gc
);

323 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

324  
TCL_OK
;

325 
	}
}

333 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_¨gv
(

334 *
NŸU£d
,

335 
T˛_I¡îp
 *
öãΩ
,

336 
¨gc
,

337 c⁄° **
¨gv


339 
i
;

340 
n
;

342 if–
¨gc
!=3 ){

343 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

345  
TCL_ERROR
;

347 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

348 if–
i
<0 )  
TCL_ERROR
;

349 if–!
thªad£t
[
i
].
busy
 ){

350 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

351  
TCL_ERROR
;

353 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

354 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

355 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

356 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

357  
TCL_ERROR
;

359 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
¨gv
[
n
], 0);

360  
TCL_OK
;

361 
	}
}

369 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_cﬁ«me
(

370 *
NŸU£d
,

371 
T˛_I¡îp
 *
öãΩ
,

372 
¨gc
,

373 c⁄° **
¨gv


375 
i
;

376 
n
;

378 if–
¨gc
!=3 ){

379 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

381  
TCL_ERROR
;

383 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

384 if–
i
<0 )  
TCL_ERROR
;

385 if–!
thªad£t
[
i
].
busy
 ){

386 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

387  
TCL_ERROR
;

389 if–
	`T˛_GëI¡
(
öãΩ
, 
¨gv
[2], &
n
ËË 
TCL_ERROR
;

390 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

391 if–
n
<0 ||Ç>=
thªad£t
[
i
].
¨gc
 ){

392 
	`T˛_AµídResu…
(
öãΩ
, "columnÇumber out ofÑange", 0);

393  
TCL_ERROR
;

395 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
cﬁv
[
n
], 0);

396  
TCL_OK
;

397 
	}
}

399 c⁄° *
sqlôe3EºName
();

407 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_ªsu…
(

408 *
NŸU£d
,

409 
T˛_I¡îp
 *
öãΩ
,

410 
¨gc
,

411 c⁄° **
¨gv


413 
i
;

414 c⁄° *
zName
;

416 if–
¨gc
!=2 ){

417 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

419  
TCL_ERROR
;

421 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

422 if–
i
<0 )  
TCL_ERROR
;

423 if–!
thªad£t
[
i
].
busy
 ){

424 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

425  
TCL_ERROR
;

427 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

428 
zName
 = 
	`sqlôe3EºName
(
thªad£t
[
i
].
rc
);

429 
	`T˛_AµídResu…
(
öãΩ
, 
zName
, 0);

430  
TCL_OK
;

431 
	}
}

439 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_îr‹
(

440 *
NŸU£d
,

441 
T˛_I¡îp
 *
öãΩ
,

442 
¨gc
,

443 c⁄° **
¨gv


445 
i
;

447 if–
¨gc
!=2 ){

448 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

450  
TCL_ERROR
;

452 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

453 if–
i
<0 )  
TCL_ERROR
;

454 if–!
thªad£t
[
i
].
busy
 ){

455 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

456  
TCL_ERROR
;

458 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

459 
	`T˛_AµídResu…
(
öãΩ
, 
thªad£t
[
i
].
zEº
, 0);

460  
TCL_OK
;

461 
	}
}

466 
	$do_compûe
(
Thªad
 *
p
){

467 if–
p
->
db
==0 ){

468 
p
->
zEº
 =Ö->
zSèticEº
 = "no database is open";

469 
p
->
rc
 = 
SQLITE_ERROR
;

472 if–
p
->
pStmt
 ){

473 
	`sqlôe3_˛õ¡_föÆize
(
p
->
pStmt
);

474 
p
->
pStmt
 = 0;

476 
p
->
rc
 = 
	`sqlôe3_˛õ¡_¥ï¨e
’->
db
,Ö->
zArg
, -1, &p->
pStmt
, 0);

477 
	}
}

484 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_compûe
(

485 *
NŸU£d
,

486 
T˛_I¡îp
 *
öãΩ
,

487 
¨gc
,

488 c⁄° **
¨gv


490 
i
;

491 if–
¨gc
!=3 ){

492 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

494  
TCL_ERROR
;

496 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

497 if–
i
<0 )  
TCL_ERROR
;

498 if–!
thªad£t
[
i
].
busy
 ){

499 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

500  
TCL_ERROR
;

502 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

503 
thªad£t
[
i
].
xOp
 = 
do_compûe
;

504 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

505 
thªad£t
[
i
].
zArg
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

506 
thªad£t
[
i
].
›num
++;

507  
TCL_OK
;

508 
	}
}

513 
	$do_°ï
(
Thªad
 *
p
){

514 
i
;

515 if–
p
->
pStmt
==0 ){

516 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

517 
p
->
rc
 = 
SQLITE_ERROR
;

520 
p
->
rc
 = 
	`sqlôe3_˛õ¡_°ï
’->
pStmt
);

521 if–
p
->
rc
==
SQLITE_ROW
 ){

522 
p
->
¨gc
 = 
	`sqlôe3_cﬁumn_cou¡
’->
pStmt
);

523 
i
=0; i<
	`sqlôe3_d©a_cou¡
(
p
->
pStmt
); i++){

524 
p
->
¨gv
[
i
] = (*)
	`sqlôe3_cﬁumn_ãxt
’->
pStmt
, i);

526 
i
=0; i<
p
->
¨gc
; i++){

527 
p
->
cﬁv
[
i
] = 
	`sqlôe3_cﬁumn_«me
’->
pStmt
, i);

530 
	}
}

537 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_°ï
(

538 *
NŸU£d
,

539 
T˛_I¡îp
 *
öãΩ
,

540 
¨gc
,

541 c⁄° **
¨gv


543 
i
;

544 if–
¨gc
!=2 ){

545 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

547  
TCL_ERROR
;

549 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

550 if–
i
<0 )  
TCL_ERROR
;

551 if–!
thªad£t
[
i
].
busy
 ){

552 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

553  
TCL_ERROR
;

555 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

556 
thªad£t
[
i
].
xOp
 = 
do_°ï
;

557 
thªad£t
[
i
].
›num
++;

558  
TCL_OK
;

559 
	}
}

564 
	$do_föÆize
(
Thªad
 *
p
){

565 if–
p
->
pStmt
==0 ){

566 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

567 
p
->
rc
 = 
SQLITE_ERROR
;

570 
p
->
rc
 = 
	`sqlôe3_˛õ¡_föÆize
’->
pStmt
);

571 
p
->
pStmt
 = 0;

572 
	}
}

579 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_föÆize
(

580 *
NŸU£d
,

581 
T˛_I¡îp
 *
öãΩ
,

582 
¨gc
,

583 c⁄° **
¨gv


585 
i
;

586 if–
¨gc
!=2 ){

587 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

589  
TCL_ERROR
;

591 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

592 if–
i
<0 )  
TCL_ERROR
;

593 if–!
thªad£t
[
i
].
busy
 ){

594 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

595  
TCL_ERROR
;

597 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

598 
thªad£t
[
i
].
xOp
 = 
do_föÆize
;

599 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

600 
thªad£t
[
i
].
zArg
 = 0;

601 
thªad£t
[
i
].
›num
++;

602  
TCL_OK
;

603 
	}
}

608 
	$do_ª£t
(
Thªad
 *
p
){

609 if–
p
->
pStmt
==0 ){

610 
p
->
zEº
 =Ö->
zSèticEº
 = "no virtual machineávailable";

611 
p
->
rc
 = 
SQLITE_ERROR
;

614 
p
->
rc
 = 
	`sqlôe3_˛õ¡_ª£t
’->
pStmt
);

615 
p
->
pStmt
 = 0;

616 
	}
}

623 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_ª£t
(

624 *
NŸU£d
,

625 
T˛_I¡îp
 *
öãΩ
,

626 
¨gc
,

627 c⁄° **
¨gv


629 
i
;

630 if–
¨gc
!=2 ){

631 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

633  
TCL_ERROR
;

635 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

636 if–
i
<0 )  
TCL_ERROR
;

637 if–!
thªad£t
[
i
].
busy
 ){

638 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

639  
TCL_ERROR
;

641 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

642 
thªad£t
[
i
].
xOp
 = 
do_ª£t
;

643 
	`sqlôe3_‰ì
(
thªad£t
[
i
].
zArg
);

644 
thªad£t
[
i
].
zArg
 = 0;

645 
thªad£t
[
i
].
›num
++;

646  
TCL_OK
;

647 
	}
}

654 
SQLITE_TCLAPI
 
	$t˛_˛õ¡_sw≠
(

655 *
NŸU£d
,

656 
T˛_I¡îp
 *
öãΩ
,

657 
¨gc
,

658 c⁄° **
¨gv


660 
i
, 
j
;

661 
sqlôe3
 *
ãmp
;

662 if–
¨gc
!=3 ){

663 
	`T˛_AµídResu…
(
öãΩ
, "wr⁄g #árgs: should bê\"", 
¨gv
[0],

665  
TCL_ERROR
;

667 
i
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[1]);

668 if–
i
<0 )  
TCL_ERROR
;

669 if–!
thªad£t
[
i
].
busy
 ){

670 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

671  
TCL_ERROR
;

673 
	`˛õ¡_waô
(&
thªad£t
[
i
]);

674 
j
 = 
	`∑r£_˛õ¡_id
(
öãΩ
, 
¨gv
[2]);

675 if–
j
<0 )  
TCL_ERROR
;

676 if–!
thªad£t
[
j
].
busy
 ){

677 
	`T˛_AµídResu…
(
öãΩ
, "no suchÅhread", 0);

678  
TCL_ERROR
;

680 
	`˛õ¡_waô
(&
thªad£t
[
j
]);

681 
ãmp
 = 
thªad£t
[
i
].
db
;

682 
thªad£t
[
i
].
db
 =Åhªad£t[
j
].db;

683 
thªad£t
[
j
].
db
 = 
ãmp
;

684  
TCL_OK
;

685 
	}
}

690 
	$Sqlôëe°7_Inô
(
T˛_I¡îp
 *
öãΩ
){

692 *
zName
;

693 
T˛_CmdProc
 *
xProc
;

694 } 
aCmd
[] = {

695 { "˛õ¡_¸óã", (
T˛_CmdProc
*)
t˛_˛õ¡_¸óã
 },

696 { "˛õ¡_waô", (
T˛_CmdProc
*)
t˛_˛õ¡_waô
 },

697 { "˛õ¡_hÆt", (
T˛_CmdProc
*)
t˛_˛õ¡_hÆt
 },

698 { "˛õ¡_¨gc", (
T˛_CmdProc
*)
t˛_˛õ¡_¨gc
 },

699 { "˛õ¡_¨gv", (
T˛_CmdProc
*)
t˛_˛õ¡_¨gv
 },

700 { "˛õ¡_cﬁ«me", (
T˛_CmdProc
*)
t˛_˛õ¡_cﬁ«me
 },

701 { "˛õ¡_ªsu…", (
T˛_CmdProc
*)
t˛_˛õ¡_ªsu…
 },

702 { "˛õ¡_îr‹", (
T˛_CmdProc
*)
t˛_˛õ¡_îr‹
 },

703 { "˛õ¡_compûe", (
T˛_CmdProc
*)
t˛_˛õ¡_compûe
 },

704 { "˛õ¡_°ï", (
T˛_CmdProc
*)
t˛_˛õ¡_°ï
 },

705 { "˛õ¡_ª£t", (
T˛_CmdProc
*)
t˛_˛õ¡_ª£t
 },

706 { "˛õ¡_föÆize", (
T˛_CmdProc
*)
t˛_˛õ¡_föÆize
 },

707 { "˛õ¡_sw≠", (
T˛_CmdProc
*)
t˛_˛õ¡_sw≠
 },

709 
i
;

711 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

712 
	`T˛_Cª©eComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

714  
TCL_OK
;

715 
	}
}

717 
	$Sqlôëe°7_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test8.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

25 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


27 
echo_vèb
 
	techo_vèb
;

28 
echo_curs‹
 
	techo_curs‹
;

76 
	secho_vèb
 {

77 
sqlôe3_vèb
 
	mba£
;

78 
T˛_I¡îp
 *
	möãΩ
;

79 
sqlôe3
 *
	mdb
;

81 
	misP©ã∫
;

82 
	möTønß˘i⁄
;

83 *
	mzThis
;

84 *
	mzTabÀName
;

85 *
	mzLogName
;

86 
	mnCﬁ
;

87 *
	maIndex
;

88 **
	maCﬁ
;

92 
	secho_curs‹
 {

93 
sqlôe3_vèb_curs‹
 
	mba£
;

94 
sqlôe3_°mt
 *
	mpStmt
;

97 
	$simuœãVèbEº‹
(
echo_vèb
 *
p
, c⁄° *
zMëhod
){

98 c⁄° *
zEº
;

99 
zV¨«me
[128];

100 
zV¨«me
[127] = '\0';

101 
	`sqlôe3_¢¥ötf
(127, 
zV¨«me
, "echo_moduÀ_Áû(%s,%s)", 
zMëhod
, 
p
->
zTabÀName
);

102 
zEº
 = 
	`T˛_GëV¨
(
p
->
öãΩ
, 
zV¨«me
, 
TCL_GLOBAL_ONLY
);

103 if–
zEº
 ){

104 
p
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("echo-vèb-îr‹: %s", 
zEº
);

106  (
zEº
!=0);

107 
	}
}

122 
	$dequŸeSåög
(*
z
){

123 
quŸe
;

124 
i
, 
j
;

125 if–
z
==0 ) ;

126 
quŸe
 = 
z
[0];

127  
quŸe
 ){

131 '[': 
quŸe
 = ']'; ;

134 
i
=1, 
j
=0; 
z
[i]; i++){

135 if–
z
[
i
]==
quŸe
 ){

136 if–
z
[
i
+1]==
quŸe
 ){

137 
z
[
j
++] = 
quŸe
;

138 
i
++;

140 
z
[
j
++] = 0;

144 
z
[
j
++] = z[
i
];

147 
	}
}

159 
	$gëCﬁumnNames
(

160 
sqlôe3
 *
db
,

161 c⁄° *
zTab
,

162 ***
∑Cﬁ
,

163 *
≤Cﬁ


165 **
aCﬁ
 = 0;

166 *
zSql
;

167 
sqlôe3_°mt
 *
pStmt
 = 0;

168 
rc
 = 
SQLITE_OK
;

169 
nCﬁ
 = 0;

175 
zSql
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %Q", 
zTab
);

176 if–!
zSql
 ){

177 
rc
 = 
SQLITE_NOMEM
;

178 
out
;

180 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

181 
	`sqlôe3_‰ì
(
zSql
);

183 if–
rc
==
SQLITE_OK
 ){

184 
ii
;

185 
nByãs
;

186 *
zS∑˚
;

187 
nCﬁ
 = 
	`sqlôe3_cﬁumn_cou¡
(
pStmt
);

192 
nByãs
 = (*Ë* 
nCﬁ
;

193 
ii
=0; ii<
nCﬁ
; ii++){

194 c⁄° *
zName
 = 
	`sqlôe3_cﬁumn_«me
(
pStmt
, 
ii
);

195 if–!
zName
 ){

196 
rc
 = 
SQLITE_NOMEM
;

197 
out
;

199 
nByãs
 +()
	`°æí
(
zName
)+1;

201 
aCﬁ
 = (**)
	`sqlôe3MÆlocZîo
(
nByãs
);

202 if–!
aCﬁ
 ){

203 
rc
 = 
SQLITE_NOMEM
;

204 
out
;

210 
zS∑˚
 = (*)(&
aCﬁ
[
nCﬁ
]);

211 
ii
=0; ii<
nCﬁ
; ii++){

212 
aCﬁ
[
ii
] = 
zS∑˚
;

213 
	`sqlôe3_¢¥ötf
(
nByãs
, 
zS∑˚
, "%s", 
	`sqlôe3_cﬁumn_«me
(
pStmt
,
ii
));

214 
zS∑˚
 +()
	`°æí
(zSpace) + 1;

216 
	`as£π
–(
zS∑˚
-
nByãs
)==(*)
aCﬁ
 );

219 *
∑Cﬁ
 = 
aCﬁ
;

220 *
≤Cﬁ
 = 
nCﬁ
;

222 
out
:

223 
	`sqlôe3_föÆize
(
pStmt
);

224  
rc
;

225 
	}
}

239 
	$gëIndexAºay
(

240 
sqlôe3
 *
db
,

241 c⁄° *
zTab
,

242 
nCﬁ
,

243 **
∑Index


245 
sqlôe3_°mt
 *
pStmt
 = 0;

246 *
aIndex
 = 0;

247 
rc
;

248 *
zSql
;

251 
aIndex
 = (*)
	`sqlôe3MÆlocZîo
((Ë* 
nCﬁ
);

252 if–!
aIndex
 ){

253 
rc
 = 
SQLITE_NOMEM
;

254 
gë_ödex_¨øy_out
;

258 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA index_li°(%s)", 
zTab
);

259 if–!
zSql
 ){

260 
rc
 = 
SQLITE_NOMEM
;

261 
gë_ödex_¨øy_out
;

263 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

264 
	`sqlôe3_‰ì
(
zSql
);

269  
pStmt
 && 
	`sqlôe3_°ï
’Stmt)==
SQLITE_ROW
 ){

270 c⁄° *
zIdx
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

271 
sqlôe3_°mt
 *
pStmt2
 = 0;

272 if–
zIdx
==0 ) ;

273 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA index_öfo(%s)", 
zIdx
);

274 if–!
zSql
 ){

275 
rc
 = 
SQLITE_NOMEM
;

276 
gë_ödex_¨øy_out
;

278 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt2
, 0);

279 
	`sqlôe3_‰ì
(
zSql
);

280 if–
pStmt2
 && 
	`sqlôe3_°ï
’Stmt2)==
SQLITE_ROW
 ){

281 
cid
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt2
, 1);

282 
	`as£π
–
cid
>=0 && cid<
nCﬁ
 );

283 
aIndex
[
cid
] = 1;

285 if–
pStmt2
 ){

286 
rc
 = 
	`sqlôe3_föÆize
(
pStmt2
);

288 if–
rc
!=
SQLITE_OK
 ){

289 
gë_ödex_¨øy_out
;

294 
gë_ödex_¨øy_out
:

295 if–
pStmt
 ){

296 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

297 if–
rc
==
SQLITE_OK
 ){

298 
rc
 = 
rc2
;

301 if–
rc
!=
SQLITE_OK
 ){

302 
	`sqlôe3_‰ì
(
aIndex
);

303 
aIndex
 = 0;

305 *
∑Index
 = 
aIndex
;

306  
rc
;

307 
	}
}

313 
	$≠≥ndToEchoModuÀ
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zArg
){

314 
Êags
 = (
TCL_APPEND_VALUE
 | 
TCL_LIST_ELEMENT
 | 
TCL_GLOBAL_ONLY
);

315 
	`T˛_SëV¨
(
öãΩ
, "echo_moduÀ", (
zArg
?zArg:""), 
Êags
);

316 
	}
}

335 
	$echoDe˛¨eVèb
(

336 
echo_vèb
 *
pVèb
,

337 
sqlôe3
 *
db


339 
rc
 = 
SQLITE_OK
;

341 if–
pVèb
->
zTabÀName
 ){

342 
sqlôe3_°mt
 *
pStmt
 = 0;

343 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
,

345 -1, &
pStmt
, 0);

346 if–
rc
==
SQLITE_OK
 ){

347 
	`sqlôe3_böd_ãxt
(
pStmt
, 1, 
pVèb
->
zTabÀName
, -1, 0);

348 if–
	`sqlôe3_°ï
(
pStmt
)==
SQLITE_ROW
 ){

349 
rc2
;

350 c⁄° *
zCª©eTabÀ
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

351 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
zCª©eTabÀ
);

352 
rc2
 = 
	`sqlôe3_föÆize
(
pStmt
);

353 if–
rc
==
SQLITE_OK
 ){

354 
rc
 = 
rc2
;

357 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

358 if–
rc
==
SQLITE_OK
 ){

359 
rc
 = 
SQLITE_ERROR
;

362 if–
rc
==
SQLITE_OK
 ){

363 
rc
 = 
	`gëCﬁumnNames
(
db
, 
pVèb
->
zTabÀName
, &pVèb->
aCﬁ
, &pVèb->
nCﬁ
);

365 if–
rc
==
SQLITE_OK
 ){

366 
rc
 = 
	`gëIndexAºay
(
db
, 
pVèb
->
zTabÀName
,ÖVèb->
nCﬁ
, &pVèb->
aIndex
);

371  
rc
;

372 
	}
}

378 
	$echoDe°ru˘‹
(
sqlôe3_vèb
 *
pVèb
){

379 
echo_vèb
 *
p
 = (echo_vèb*)
pVèb
;

380 
	`sqlôe3_‰ì
(
p
->
aIndex
);

381 
	`sqlôe3_‰ì
(
p
->
aCﬁ
);

382 
	`sqlôe3_‰ì
(
p
->
zThis
);

383 
	`sqlôe3_‰ì
(
p
->
zTabÀName
);

384 
	`sqlôe3_‰ì
(
p
->
zLogName
);

385 
	`sqlôe3_‰ì
(
p
);

387 
	}
}

389 
EchoModuÀ
 
	tEchoModuÀ
;

390 
	sEchoModuÀ
 {

391 
T˛_I¡îp
 *
	möãΩ
;

399 
	$echoC⁄°ru˘‹
(

400 
sqlôe3
 *
db
,

401 *
pAux
,

402 
¨gc
, c⁄° *c⁄°*
¨gv
,

403 
sqlôe3_vèb
 **
µVèb
,

404 **
pzEº


406 
rc
;

407 
i
;

408 
echo_vèb
 *
pVèb
;

411 
pVèb
 = 
	`sqlôe3MÆlocZîo
( (*pVtab) );

412 if–!
pVèb
 ){

413  
SQLITE_NOMEM
;

415 
pVèb
->
öãΩ
 = ((
EchoModuÀ
 *)
pAux
)->interp;

416 
pVèb
->
db
 = db;

419 
pVèb
->
zThis
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[2]);

420 if–!
pVèb
->
zThis
 ){

421 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

422  
SQLITE_NOMEM
;

426 if–
¨gc
>3 ){

427 
pVèb
->
zTabÀName
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[3]);

428 
	`dequŸeSåög
(
pVèb
->
zTabÀName
);

429 if–
pVèb
->
zTabÀName
 &&ÖVtab->zTableName[0]=='*' ){

430 *
z
 = 
	`sqlôe3_m¥ötf
("%s%s", 
¨gv
[2], &(
pVèb
->
zTabÀName
[1]));

431 
	`sqlôe3_‰ì
(
pVèb
->
zTabÀName
);

432 
pVèb
->
zTabÀName
 = 
z
;

433 
pVèb
->
isP©ã∫
 = 1;

435 if–!
pVèb
->
zTabÀName
 ){

436 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

437  
SQLITE_NOMEM
;

442 
i
=0; i<
¨gc
; i++){

443 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
¨gv
[
i
]);

450 
rc
 = 
	`echoDe˛¨eVèb
(
pVèb
, 
db
);

451 if–
rc
!=
SQLITE_OK
 ){

452 
	`echoDe°ru˘‹
((
sqlôe3_vèb
 *)
pVèb
);

453  
rc
;

457 *
µVèb
 = &
pVèb
->
ba£
;

458  
SQLITE_OK
;

459 
	}
}

464 
	$echoCª©e
(

465 
sqlôe3
 *
db
,

466 *
pAux
,

467 
¨gc
, c⁄° *c⁄°*
¨gv
,

468 
sqlôe3_vèb
 **
µVèb
,

469 **
pzEº


471 
rc
 = 
SQLITE_OK
;

472 
	`≠≥ndToEchoModuÀ
(((
EchoModuÀ
 *)
pAux
)->
öãΩ
, "xCreate");

473 
rc
 = 
	`echoC⁄°ru˘‹
(
db
, 
pAux
, 
¨gc
, 
¨gv
, 
µVèb
, 
pzEº
);

485 if–
rc
==
SQLITE_OK
 && 
¨gc
==5 ){

486 *
zSql
;

487 
echo_vèb
 *
pVèb
 = *”cho_vèb **)
µVèb
;

488 
pVèb
->
zLogName
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[4]);

489 
zSql
 = 
	`sqlôe3_m¥ötf
("CREATE TABLE %Q÷ogmsg)", 
pVèb
->
zLogName
);

490 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 0, 0, 0);

491 
	`sqlôe3_‰ì
(
zSql
);

492 if–
rc
!=
SQLITE_OK
 ){

493 *
pzEº
 = 
	`sqlôe3_m¥ötf
("%s", 
	`sqlôe3_îrmsg
(
db
));

497 if–*
µVèb
 && 
rc
!=
SQLITE_OK
 ){

498 
	`echoDe°ru˘‹
(*
µVèb
);

499 *
µVèb
 = 0;

502 if–
rc
==
SQLITE_OK
 ){

503 (*(
echo_vèb
**)
µVèb
)->
öTønß˘i⁄
 = 1;

506  
rc
;

507 
	}
}

512 
	$echoC⁄√˘
(

513 
sqlôe3
 *
db
,

514 *
pAux
,

515 
¨gc
, c⁄° *c⁄°*
¨gv
,

516 
sqlôe3_vèb
 **
µVèb
,

517 **
pzEº


519 
	`≠≥ndToEchoModuÀ
(((
EchoModuÀ
 *)
pAux
)->
öãΩ
, "xConnect");

520  
	`echoC⁄°ru˘‹
(
db
, 
pAux
, 
¨gc
, 
¨gv
, 
µVèb
, 
pzEº
);

521 
	}
}

526 
	$echoDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

527 
	`≠≥ndToEchoModuÀ
(((
echo_vèb
 *)
pVèb
)->
öãΩ
, "xDisconnect");

528  
	`echoDe°ru˘‹
(
pVèb
);

529 
	}
}

534 
	$echoDe°roy
(
sqlôe3_vèb
 *
pVèb
){

535 
rc
 = 
SQLITE_OK
;

536 
echo_vèb
 *
p
 = (echo_vèb *)
pVèb
;

537 
	`≠≥ndToEchoModuÀ
(((
echo_vèb
 *)
pVèb
)->
öãΩ
, "xDestroy");

540 if–
p
 &&Ö->
zLogName
 ){

541 *
zSql
;

542 
zSql
 = 
	`sqlôe3_m¥ötf
("DROP TABLE %Q", 
p
->
zLogName
);

543 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zSql
, 0, 0, 0);

544 
	`sqlôe3_‰ì
(
zSql
);

547 if–
rc
==
SQLITE_OK
 ){

548 
rc
 = 
	`echoDe°ru˘‹
(
pVèb
);

550  
rc
;

551 
	}
}

556 
	$echoO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

557 
echo_curs‹
 *
pCur
;

558 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)
pVTab
, "xOpen") ){

559  
SQLITE_ERROR
;

561 
pCur
 = 
	`sqlôe3MÆlocZîo
((
echo_curs‹
));

562 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

563  (
pCur
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM
);

564 
	}
}

569 
	$echoClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

570 
rc
;

571 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
cur
;

572 
sqlôe3_°mt
 *
pStmt
 = 
pCur
->pStmt;

573 
pCur
->
pStmt
 = 0;

574 
	`sqlôe3_‰ì
(
pCur
);

575 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

576  
rc
;

577 
	}
}

583 
	$echoEof
(
sqlôe3_vèb_curs‹
 *
cur
){

584  (((
echo_curs‹
 *)
cur
)->
pStmt
 ? 0 : 1);

585 
	}
}

590 
	$echoNext
(
sqlôe3_vèb_curs‹
 *
cur
){

591 
rc
 = 
SQLITE_OK
;

592 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
cur
;

594 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xNext") ){

595  
SQLITE_ERROR
;

598 if–
pCur
->
pStmt
 ){

599 
rc
 = 
	`sqlôe3_°ï
(
pCur
->
pStmt
);

600 if–
rc
==
SQLITE_ROW
 ){

601 
rc
 = 
SQLITE_OK
;

603 
rc
 = 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

604 
pCur
->
pStmt
 = 0;

608  
rc
;

609 
	}
}

614 
	$echoCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

615 
iCﬁ
 = 
i
 + 1;

616 
sqlôe3_°mt
 *
pStmt
 = ((
echo_curs‹
 *)
cur
)->pStmt;

618 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xColumn") ){

619  
SQLITE_ERROR
;

622 if–!
pStmt
 ){

623 
	`sqlôe3_ªsu…_nuŒ
(
˘x
);

625 
	`as£π
–
	`sqlôe3_d©a_cou¡
(
pStmt
)>
iCﬁ
 );

626 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pStmt
, 
iCﬁ
));

628  
SQLITE_OK
;

629 
	}
}

634 
	$echoRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

635 
sqlôe3_°mt
 *
pStmt
 = ((
echo_curs‹
 *)
cur
)->pStmt;

637 if–
	`simuœãVèbEº‹
((
echo_vèb
 *)(
cur
->
pVèb
), "xRowid") ){

638  
SQLITE_ERROR
;

641 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pStmt
, 0);

642  
SQLITE_OK
;

643 
	}
}

654 
	$hashSåög
(c⁄° *
zSåög
){

655 
u32
 
vÆ
 = 0;

656 
ii
;

657 
ii
=0; 
zSåög
[ii]; ii++){

658 
vÆ
 = (vÆ << 3Ë+ ()
zSåög
[
ii
];

660  ()(
vÆ
&0x7fffffff);

661 
	}
}

666 
	$echoFûãr
(

667 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

668 
idxNum
, c⁄° *
idxSå
,

669 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


671 
rc
;

672 
i
;

674 
echo_curs‹
 *
pCur
 = (echo_curs‹ *)
pVèbCurs‹
;

675 
echo_vèb
 *
pVèb
 = (echo_vèb *)
pVèbCurs‹
->pVtab;

676 
sqlôe3
 *
db
 = 
pVèb
->db;

678 if–
	`simuœãVèbEº‹
(
pVèb
, "xFilter") ){

679  
SQLITE_ERROR
;

683 
	`as£π
–
idxNum
==
	`hashSåög
(
idxSå
) );

686 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, "xFilter");

687 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
idxSå
);

688 
i
=0; i<
¨gc
; i++){

689 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]));

692 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

693 
pCur
->
pStmt
 = 0;

698 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
idxSå
, -1, &
pCur
->
pStmt
, 0);

699 
	`as£π
–
pCur
->
pStmt
 || 
rc
!=
SQLITE_OK
 );

700 
i
=0; 
rc
==
SQLITE_OK
 && i<
¨gc
; i++){

701 
rc
 = 
	`sqlôe3_böd_vÆue
(
pCur
->
pStmt
, 
i
+1, 
¨gv
[i]);

705 if–
rc
==
SQLITE_OK
 ){

706 
rc
 = 
	`echoNext
(
pVèbCurs‹
);

709  
rc
;

710 
	}
}

726 
	$°rög_c⁄ˇt
(**
pzSå
, *
zAµíd
, 
doFªe
, *
pRc
){

727 *
zIn
 = *
pzSå
;

728 if–!
zAµíd
 && 
doFªe
 && *
pRc
==
SQLITE_OK
 ){

729 *
pRc
 = 
SQLITE_NOMEM
;

731 if–*
pRc
!=
SQLITE_OK
 ){

732 
	`sqlôe3_‰ì
(
zIn
);

733 
zIn
 = 0;

735 if–
zIn
 ){

736 *
zTemp
 = 
zIn
;

737 
zIn
 = 
	`sqlôe3_m¥ötf
("%s%s", zIn, 
zAµíd
);

738 
	`sqlôe3_‰ì
(
zTemp
);

740 
zIn
 = 
	`sqlôe3_m¥ötf
("%s", 
zAµíd
);

742 if–!
zIn
 ){

743 *
pRc
 = 
SQLITE_NOMEM
;

746 *
pzSå
 = 
zIn
;

747 if–
doFªe
 ){

748 
	`sqlôe3_‰ì
(
zAµíd
);

750 
	}
}

762 *
	$echoSñe˘Li°
(
echo_vèb
 *
pTab
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

763 *
zRë
 = 0;

764 if–
	`sqlôe3_libvîsi⁄_numbî
()<3010000 ){

765 
zRë
 = 
	`sqlôe3_m¥ötf
(", *");

767 
i
;

768 
i
=0; i<
pTab
->
nCﬁ
; i++){

769 if–
pIdxInfo
->
cﬁU£d
 & ((
sqlôe3_uöt64
)1 << (
i
>=63 ? 63 : i)) ){

770 
zRë
 = 
	`sqlôe3_m¥ötf
("%z, %s", zRë, 
pTab
->
aCﬁ
[
i
]);

772 
zRë
 = 
	`sqlôe3_m¥ötf
("%z, NULL", zRet);

774 if–!
zRë
 ) ;

777  
zRë
;

778 
	}
}

802 
	$echoBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

803 
ii
;

804 *
zQuîy
 = 0;

805 *
zCﬁ
 = 0;

806 *
zNew
;

807 
nArg
 = 0;

808 c⁄° *
zSï
 = "WHERE";

809 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

810 
sqlôe3_°mt
 *
pStmt
 = 0;

811 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

813 
nRow
 = 0;

814 
u£Idx
 = 0;

815 
rc
 = 
SQLITE_OK
;

816 
u£Co°
 = 0;

817 
co°
 = 0;

818 
isIgn‹eUßbÀ
 = 0;

819 if–
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_ign‹e_ußbÀ", 
TCL_GLOBAL_ONLY
) ){

820 
isIgn‹eUßbÀ
 = 1;

823 if–
	`simuœãVèbEº‹
(
pVèb
, "xBestIndex") ){

824  
SQLITE_ERROR
;

832 if–
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_co°", 
TCL_GLOBAL_ONLY
) ){

833 
co°
 = 
	`©of
(
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_co°", 
TCL_GLOBAL_ONLY
));

834 
u£Co°
 = 1;

836 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECT cou¡(*ËFROM %Q", 
pVèb
->
zTabÀName
);

837 if–!
zQuîy
 ){

838  
SQLITE_NOMEM
;

840 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zQuîy
, -1, &
pStmt
, 0);

841 
	`sqlôe3_‰ì
(
zQuîy
);

842 if–
rc
!=
SQLITE_OK
 ){

843  
rc
;

845 
	`sqlôe3_°ï
(
pStmt
);

846 
nRow
 = 
	`sqlôe3_cﬁumn_öt
(
pStmt
, 0);

847 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

848 if–
rc
!=
SQLITE_OK
 ){

849  
rc
;

853 
zCﬁ
 = 
	`echoSñe˘Li°
(
pVèb
, 
pIdxInfo
);

854 if–!
zCﬁ
 )  
SQLITE_NOMEM
;

855 
zQuîy
 = 
	`sqlôe3_m¥ötf
("SELECTÑowid%z FROM %Q", 
zCﬁ
, 
pVèb
->
zTabÀName
);

856 if–!
zQuîy
 )  
SQLITE_NOMEM
;

858 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

859 c⁄° 
sqlôe3_ödex_c⁄°øöt
 *
pC⁄°øöt
;

860 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

861 
iCﬁ
;

863 
pC⁄°øöt
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

864 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

866 if–!
isIgn‹eUßbÀ
 && !
pC⁄°øöt
->
ußbÀ
 ) ;

868 
iCﬁ
 = 
pC⁄°øöt
->
iCﬁumn
;

869 if–
iCﬁ
<0 || 
pVèb
->
aIndex
[iCol] ){

870 *
zNewCﬁ
 = 
iCﬁ
>=0 ? 
pVèb
->
aCﬁ
[iCol] : "rowid";

871 *
zOp
 = 0;

872 
u£Idx
 = 1;

873  
pC⁄°øöt
->
›
 ){

874 
SQLITE_INDEX_CONSTRAINT_EQ
:

875 
zOp
 = "="; ;

876 
SQLITE_INDEX_CONSTRAINT_LT
:

877 
zOp
 = "<"; ;

878 
SQLITE_INDEX_CONSTRAINT_GT
:

879 
zOp
 = ">"; ;

880 
SQLITE_INDEX_CONSTRAINT_LE
:

881 
zOp
 = "<="; ;

882 
SQLITE_INDEX_CONSTRAINT_GE
:

883 
zOp
 = ">="; ;

884 
SQLITE_INDEX_CONSTRAINT_MATCH
:

892 
zOp
 = "LIKE"; ;

893 
SQLITE_INDEX_CONSTRAINT_LIKE
:

894 
zOp
 = "like"; ;

895 
SQLITE_INDEX_CONSTRAINT_GLOB
:

896 
zOp
 = "glob"; ;

897 
SQLITE_INDEX_CONSTRAINT_REGEXP
:

898 
zOp
 = "regexp"; ;

900 if–
zOp
[0]=='L' ){

901 
zNew
 = 
	`sqlôe3_m¥ötf
(" %s %s LIKE (SELECT '%%'||?||'%%')",

902 
zSï
, 
zNewCﬁ
);

904 
zNew
 = 
	`sqlôe3_m¥ötf
(" %†%†%†?", 
zSï
, 
zNewCﬁ
, 
zOp
);

906 
	`°rög_c⁄ˇt
(&
zQuîy
, 
zNew
, 1, &
rc
);

908 
zSï
 = "AND";

909 
pUßge
->
¨gvIndex
 = ++
nArg
;

910 
pUßge
->
omô
 = 1;

918 if–
pIdxInfo
->
nOrdîBy
==1 && (

919 
pIdxInfo
->
aOrdîBy
->
iCﬁumn
<0 ||

920 
pVèb
->
aIndex
[
pIdxInfo
->
aOrdîBy
->
iCﬁumn
]) ){

921 
iCﬁ
 = 
pIdxInfo
->
aOrdîBy
->
iCﬁumn
;

922 *
zNewCﬁ
 = 
iCﬁ
>=0 ? 
pVèb
->
aCﬁ
[iCol] : "rowid";

923 *
zDú
 = 
pIdxInfo
->
aOrdîBy
->
desc
?"DESC":"ASC";

924 
zNew
 = 
	`sqlôe3_m¥ötf
(" ORDER BY %†%s", 
zNewCﬁ
, 
zDú
);

925 
	`°rög_c⁄ˇt
(&
zQuîy
, 
zNew
, 1, &
rc
);

926 
pIdxInfo
->
‹dîByC⁄sumed
 = 1;

929 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, "xBestIndex");;

930 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
zQuîy
);

932 if–!
zQuîy
 ){

933  
rc
;

935 
pIdxInfo
->
idxNum
 = 
	`hashSåög
(
zQuîy
);

936 
pIdxInfo
->
idxSå
 = 
zQuîy
;

937 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

938 if–
u£Co°
 ){

939 
pIdxInfo
->
e°im©edCo°
 = 
co°
;

940 }if–
u£Idx
 ){

942  
ii
=0; ii<(()*8)-1; ii++ ){

943 if–
nRow
 & (1<<
ii
) ){

944 
pIdxInfo
->
e°im©edCo°
 = ()
ii
;

948 
pIdxInfo
->
e°im©edCo°
 = ()
nRow
;

950  
rc
;

951 
	}
}

967 
	$echoUpd©e
(

968 
sqlôe3_vèb
 *
èb
,

969 
nD©a
,

970 
sqlôe3_vÆue
 **
≠D©a
,

971 
sqlôe_öt64
 *
pRowid


973 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

974 
sqlôe3
 *
db
 = 
pVèb
->db;

975 
rc
 = 
SQLITE_OK
;

977 
sqlôe3_°mt
 *
pStmt
 = 0;

978 *
z
 = 0;

979 
bödArgZîo
 = 0;

980 
bödArgO√
 = 0;

981 
i
;

983 
	`as£π
–
nD©a
==
pVèb
->
nCﬁ
+2 ||ÇData==1 );

987 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

989 if–
	`simuœãVèbEº‹
(
pVèb
, "xUpdate") ){

990  
SQLITE_ERROR
;

994 if–
nD©a
>1 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_INTEGER
 ){

995 *
zSï
 = " SET";

996 
z
 = 
	`sqlôe3_m¥ötf
("UPDATE %Q", 
pVèb
->
zTabÀName
);

997 if–!
z
 ){

998 
rc
 = 
SQLITE_NOMEM
;

1001 
bödArgO√
 = (
≠D©a
[1] && 
	`sqlôe3_vÆue_ty≥
◊pD©a[1])==
SQLITE_INTEGER
);

1002 
bödArgZîo
 = 1;

1004 if–
bödArgO√
 ){

1005 
	`°rög_c⁄ˇt
(&
z
, " SETÑowid=?1 ", 0, &
rc
);

1006 
zSï
 = ",";

1008 
i
=2; i<
nD©a
; i++){

1009 if–
≠D©a
[
i
]==0 ) ;

1010 
	`°rög_c⁄ˇt
(&
z
, 
	`sqlôe3_m¥ötf
(

1011 "%†%Q=?%d", 
zSï
, 
pVèb
->
aCﬁ
[
i
-2], i), 1, &
rc
);

1012 
zSï
 = ",";

1014 
	`°rög_c⁄ˇt
(&
z
, 
	`sqlôe3_m¥ötf
(" WHEREÑowid=?%d", 
nD©a
), 1, &
rc
);

1018 if–
nD©a
==1 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_INTEGER
 ){

1019 
z
 = 
	`sqlôe3_m¥ötf
("DELETE FROM %Q WHEREÑowid = ?1", 
pVèb
->
zTabÀName
);

1020 if–!
z
 ){

1021 
rc
 = 
SQLITE_NOMEM
;

1023 
bödArgZîo
 = 1;

1027 if–
nD©a
>2 && 
	`sqlôe3_vÆue_ty≥
(
≠D©a
[0])==
SQLITE_NULL
 ){

1028 
ii
;

1029 *
zIn£π
 = 0;

1030 *
zVÆues
 = 0;

1032 
zIn£π
 = 
	`sqlôe3_m¥ötf
("INSERT INTO %Q (", 
pVèb
->
zTabÀName
);

1033 if–!
zIn£π
 ){

1034 
rc
 = 
SQLITE_NOMEM
;

1036 if–
	`sqlôe3_vÆue_ty≥
(
≠D©a
[1])==
SQLITE_INTEGER
 ){

1037 
bödArgO√
 = 1;

1038 
zVÆues
 = 
	`sqlôe3_m¥ötf
("?");

1039 
	`°rög_c⁄ˇt
(&
zIn£π
, "rowid", 0, &
rc
);

1042 
	`as£π
((
pVèb
->
nCﬁ
+2)==
nD©a
);

1043 
ii
=2; ii<
nD©a
; ii++){

1044 
	`°rög_c⁄ˇt
(&
zIn£π
,

1045 
	`sqlôe3_m¥ötf
("%s%Q", 
zVÆues
?", ":"", 
pVèb
->
aCﬁ
[
ii
-2]), 1, &
rc
);

1046 
	`°rög_c⁄ˇt
(&
zVÆues
,

1047 
	`sqlôe3_m¥ötf
("%s?%d", 
zVÆues
?", ":"", 
ii
), 1, &
rc
);

1050 
	`°rög_c⁄ˇt
(&
z
, 
zIn£π
, 1, &
rc
);

1051 
	`°rög_c⁄ˇt
(&
z
, "ËVALUES(", 0, &
rc
);

1052 
	`°rög_c⁄ˇt
(&
z
, 
zVÆues
, 1, &
rc
);

1053 
	`°rög_c⁄ˇt
(&
z
, ")", 0, &
rc
);

1058 
	`as£π
(0);

1059  
SQLITE_ERROR
;

1062 if–
rc
==
SQLITE_OK
 ){

1063 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
z
, -1, &
pStmt
, 0);

1065 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pStmt
 );

1066 
	`sqlôe3_‰ì
(
z
);

1067 if–
rc
==
SQLITE_OK
 ) {

1068 if–
bödArgZîo
 ){

1069 
	`sqlôe3_böd_vÆue
(
pStmt
, 
nD©a
, 
≠D©a
[0]);

1071 if–
bödArgO√
 ){

1072 
	`sqlôe3_böd_vÆue
(
pStmt
, 1, 
≠D©a
[1]);

1074 
i
=2; i<
nD©a
 && 
rc
==
SQLITE_OK
; i++){

1075 if–
≠D©a
[
i
] ) 
rc
 = 
	`sqlôe3_böd_vÆue
(
pStmt
, i,ápData[i]);

1077 if–
rc
==
SQLITE_OK
 ){

1078 
	`sqlôe3_°ï
(
pStmt
);

1079 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

1081 
	`sqlôe3_föÆize
(
pStmt
);

1085 if–
pRowid
 && 
rc
==
SQLITE_OK
 ){

1086 *
pRowid
 = 
	`sqlôe3_œ°_ö£π_rowid
(
db
);

1088 if–
rc
!=
SQLITE_OK
 ){

1089 
èb
->
zEºMsg
 = 
	`sqlôe3_m¥ötf
("echo-vèb-îr‹: %s", 
	`sqlôe3_îrmsg
(
db
));

1092  
rc
;

1093 
	}
}

1100 
	$echoTønß˘i⁄CÆl
(
sqlôe3_vèb
 *
èb
, c⁄° *
zCÆl
){

1101 *
z
;

1102 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1103 
z
 = 
	`sqlôe3_m¥ötf
("echo(%s)", 
pVèb
->
zTabÀName
);

1104 if–
z
==0 )  
SQLITE_NOMEM
;

1105 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
zCÆl
);

1106 
	`≠≥ndToEchoModuÀ
(
pVèb
->
öãΩ
, 
z
);

1107 
	`sqlôe3_‰ì
(
z
);

1108  
SQLITE_OK
;

1109 
	}
}

1110 
	$echoBegö
(
sqlôe3_vèb
 *
èb
){

1111 
rc
;

1112 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1113 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1114 c⁄° *
zVÆ
;

1118 
	`as£π
–!
pVèb
->
öTønß˘i⁄
 );

1120 if–
	`simuœãVèbEº‹
(
pVèb
, "xBegin") ){

1121  
SQLITE_ERROR
;

1124 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xBegin");

1126 if–
rc
==
SQLITE_OK
 ){

1131 
zVÆ
 = 
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_begö_Áû", 
TCL_GLOBAL_ONLY
);

1132 if–
zVÆ
 && 0==
	`°rcmp
(zVÆ, 
pVèb
->
zTabÀName
) ){

1133 
rc
 = 
SQLITE_ERROR
;

1136 if–
rc
==
SQLITE_OK
 ){

1137 
pVèb
->
öTønß˘i⁄
 = 1;

1139  
rc
;

1140 
	}
}

1141 
	$echoSync
(
sqlôe3_vèb
 *
èb
){

1142 
rc
;

1143 
echo_vèb
 *
pVèb
 = (echo_vèb *)
èb
;

1144 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1145 c⁄° *
zVÆ
;

1149 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1151 if–
	`simuœãVèbEº‹
(
pVèb
, "xSync") ){

1152  
SQLITE_ERROR
;

1155 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xSync");

1157 if–
rc
==
SQLITE_OK
 ){

1162 
zVÆ
 = 
	`T˛_GëV¨
(
öãΩ
, "echo_moduÀ_sync_Áû", 
TCL_GLOBAL_ONLY
);

1163 if–
zVÆ
 && 0==
	`°rcmp
(zVÆ, 
pVèb
->
zTabÀName
) ){

1164 
rc
 = -1;

1167  
rc
;

1168 
	}
}

1169 
	$echoCommô
(
sqlôe3_vèb
 *
èb
){

1170 
echo_vèb
 *
pVèb
 = (echo_vèb*)
èb
;

1171 
rc
;

1175 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1177 if–
	`simuœãVèbEº‹
(
pVèb
, "xCommit") ){

1178  
SQLITE_ERROR
;

1181 
	`sqlôe3BegöBíignMÆloc
();

1182 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xCommit");

1183 
	`sqlôe3EndBíignMÆloc
();

1184 
pVèb
->
öTønß˘i⁄
 = 0;

1185  
rc
;

1186 
	}
}

1187 
	$echoRﬁlback
(
sqlôe3_vèb
 *
èb
){

1188 
rc
;

1189 
echo_vèb
 *
pVèb
 = (echo_vèb*)
èb
;

1193 
	`as£π
–
pVèb
->
öTønß˘i⁄
 );

1195 
rc
 = 
	`echoTønß˘i⁄CÆl
(
èb
, "xRollback");

1196 
pVèb
->
öTønß˘i⁄
 = 0;

1197  
rc
;

1198 
	}
}

1205 
	$ovîlﬂdedGlobFun˘i⁄
(

1206 
sqlôe3_c⁄ãxt
 *
pC⁄ãxt
,

1207 
nArg
,

1208 
sqlôe3_vÆue
 **
≠Arg


1210 
T˛_I¡îp
 *
öãΩ
 = 
	`sqlôe3_u£r_d©a
(
pC⁄ãxt
);

1211 
T˛_DSåög
 
°r
;

1212 
i
;

1213 
rc
;

1214 
	`T˛_DSåögInô
(&
°r
);

1215 
	`T˛_DSåögAµídEÀmít
(&
°r
, "::echo_glob_overload");

1216 
i
=0; i<
nArg
; i++){

1217 
	`T˛_DSåögAµídEÀmít
(&
°r
, (*)
	`sqlôe3_vÆue_ãxt
(
≠Arg
[
i
]));

1219 
rc
 = 
	`T˛_EvÆ
(
öãΩ
, 
	`T˛_DSåögVÆue
(&
°r
));

1220 
	`T˛_DSåögFªe
(&
°r
);

1221 if–
rc
 ){

1222 
	`sqlôe3_ªsu…_îr‹
(
pC⁄ãxt
, 
	`T˛_GëSåögResu…
(
öãΩ
), -1);

1224 
	`sqlôe3_ªsu…_ãxt
(
pC⁄ãxt
, 
	`T˛_GëSåögResu…
(
öãΩ
),

1225 -1, 
SQLITE_TRANSIENT
);

1227 
	`T˛_Re£tResu…
(
öãΩ
);

1228 
	}
}

1238 
echoFödFun˘i⁄
(

1239 
sqlôe3_vèb
 *
vèb
,

1240 
nArg
,

1241 c⁄° *
zFuncName
,

1242 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

1243 **
µArg


1245 
echo_vèb
 *
pVèb
 = (echo_vèb *)
vèb
;

1246 
T˛_I¡îp
 *
öãΩ
 = 
pVèb
->interp;

1247 
T˛_CmdInfo
 
öfo
;

1248 if–
	`°rcmp
(
zFuncName
,"glob")!=0 ){

1251 if–
	`T˛_GëComm™dInfo
(
öãΩ
, "::echo_glob_ovîlﬂd", &
öfo
)==0 ){

1254 *
pxFunc
 = 
ovîlﬂdedGlobFun˘i⁄
;

1255 *
µArg
 = 
öãΩ
;

1257 
	}
}

1259 
	$echoRíame
(
sqlôe3_vèb
 *
vèb
, c⁄° *
zNewName
){

1260 
rc
 = 
SQLITE_OK
;

1261 
echo_vèb
 *
p
 = (echo_vèb *)
vèb
;

1263 if–
	`simuœãVèbEº‹
(
p
, "xRename") ){

1264  
SQLITE_ERROR
;

1267 if–
p
->
isP©ã∫
 ){

1268 
nThis
 = ()
	`°æí
(
p
->
zThis
);

1269 *
zSql
 = 
	`sqlôe3_m¥ötf
("ALTER TABLE %s RENAME TO %s%s",

1270 
p
->
zTabÀName
, 
zNewName
, &p->zTabÀName[
nThis
]

1272 
rc
 = 
	`sqlôe3_exec
(
p
->
db
, 
zSql
, 0, 0, 0);

1273 
	`sqlôe3_‰ì
(
zSql
);

1276  
rc
;

1277 
	}
}

1279 
	$echoSavïoöt
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1280 
	`as£π
–
pVTab
 );

1281  
SQLITE_OK
;

1282 
	}
}

1284 
	$echoRñó£
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1285 
	`as£π
–
pVTab
 );

1286  
SQLITE_OK
;

1287 
	}
}

1289 
	$echoRﬁlbackTo
(
sqlôe3_vèb
 *
pVTab
, 
iSavïoöt
){

1290 
	`as£π
–
pVTab
 );

1291  
SQLITE_OK
;

1292 
	}
}

1298 
sqlôe3_moduÀ
 
	gechoModuÀ
 = {

1300 
echoCª©e
,

1301 
echoC⁄√˘
,

1302 
echoBe°Index
,

1303 
echoDisc⁄√˘
,

1304 
echoDe°roy
,

1305 
echoO≥n
,

1306 
echoClo£
,

1307 
echoFûãr
,

1308 
echoNext
,

1309 
echoEof
,

1310 
echoCﬁumn
,

1311 
echoRowid
,

1312 
echoUpd©e
,

1313 
echoBegö
,

1314 
echoSync
,

1315 
echoCommô
,

1316 
echoRﬁlback
,

1317 
echoFödFun˘i⁄
,

1318 
echoRíame


1321 
sqlôe3_moduÀ
 
	gechoModuÀV2
 = {

1323 
echoCª©e
,

1324 
echoC⁄√˘
,

1325 
echoBe°Index
,

1326 
echoDisc⁄√˘
,

1327 
echoDe°roy
,

1328 
echoO≥n
,

1329 
echoClo£
,

1330 
echoFûãr
,

1331 
echoNext
,

1332 
echoEof
,

1333 
echoCﬁumn
,

1334 
echoRowid
,

1335 
echoUpd©e
,

1336 
echoBegö
,

1337 
echoSync
,

1338 
echoCommô
,

1339 
echoRﬁlback
,

1340 
echoFödFun˘i⁄
,

1341 
echoRíame
,

1342 
echoSavïoöt
,

1343 
echoRñó£
,

1344 
echoRﬁlbackTo


1350 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

1351 c⁄° *
sqlôe3EºName
();

1353 
	$moduÀDe°roy
(*
p
){

1354 
	`sqlôe3_‰ì
(
p
);

1355 
	}
}

1360 
SQLITE_TCLAPI
 
	$ªgi°î_echo_moduÀ
(

1361 
Clõ¡D©a
 
˛õ¡D©a
,

1362 
T˛_I¡îp
 *
öãΩ
,

1363 
objc
,

1364 
T˛_Obj
 *
CONST
 
objv
[]

1366 
rc
;

1367 
sqlôe3
 *
db
;

1368 
EchoModuÀ
 *
pMod
;

1369 if–
objc
!=2 ){

1370 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

1371  
TCL_ERROR
;

1373 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1376 
pMod
 = 
	`sqlôe3_mÆloc
((
EchoModuÀ
));

1377 
pMod
->
öãΩ
 = interp;

1378 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(

1379 
db
, "echo", &
echoModuÀ
, (*)
pMod
, 
moduÀDe°roy


1383 if–
rc
==
SQLITE_OK
 ){

1384 
pMod
 = 
	`sqlôe3_mÆloc
((
EchoModuÀ
));

1385 
pMod
->
öãΩ
 = interp;

1386 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(
db
, "echo_v2",

1387 &
echoModuÀV2
, (*)
pMod
, 
moduÀDe°roy


1391 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1392  
TCL_OK
;

1393 
	}
}

1400 
SQLITE_TCLAPI
 
	$de˛¨e_vèb
(

1401 
Clõ¡D©a
 
˛õ¡D©a
,

1402 
T˛_I¡îp
 *
öãΩ
,

1403 
objc
,

1404 
T˛_Obj
 *
CONST
 
objv
[]

1406 
sqlôe3
 *
db
;

1407 
rc
;

1408 if–
objc
!=3 ){

1409 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB SQL");

1410  
TCL_ERROR
;

1412 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1413 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
	`T˛_GëSåög
(
objv
[2]));

1414 if–
rc
!=
SQLITE_OK
 ){

1415 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3_îrmsg
(
db
), 
TCL_VOLATILE
);

1416  
TCL_ERROR
;

1418  
TCL_OK
;

1419 
	}
}

1426 
	$Sqlôëe°8_Inô
(
T˛_I¡îp
 *
öãΩ
){

1427 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1429 *
zName
;

1430 
T˛_ObjCmdProc
 *
xProc
;

1431 *
˛õ¡D©a
;

1432 } 
aObjCmd
[] = {

1433 { "ªgi°î_echo_moduÀ", 
ªgi°î_echo_moduÀ
, 0 },

1434 { "sqlôe3_de˛¨e_vèb", 
de˛¨e_vèb
, 0 },

1436 
i
;

1437 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

1438 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

1439 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

1442  
TCL_OK
;

1443 
	}
}

	@test9.c

17 
	~"sqlôeI¡.h
"

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

23 
	~<°dlib.h
>

24 
	~<°rög.h
>

29 
SQLITE_TCLAPI
 
	$c_cﬁœti⁄_ã°
(

30 
Clõ¡D©a
 
˛õ¡D©a
,

31 
T˛_I¡îp
 *
öãΩ
,

32 
objc
,

33 
T˛_Obj
 *
CONST
 
objv
[]

35 c⁄° *
zEºFun˘i⁄
 = "N/A";

36 
sqlôe3
 *
db
;

38 
rc
;

39 if–
objc
!=1 ){

40 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

41  
TCL_ERROR
;

45 
rc
 = 
	`sqlôe3_›í
(":mem‹y:", &
db
);

46 if–
rc
!=
SQLITE_OK
 ){

47 
zEºFun˘i⁄
 = "sqlite3_open";

48 
îr‹_out
;

51 
rc
 = 
	`sqlôe3_¸óã_cﬁœti⁄
(
db
, "collate", 456, 0, 0);

52 if–
rc
!=
SQLITE_MISUSE
 ){

53 
	`sqlôe3_˛o£
(
db
);

54 
zEºFun˘i⁄
 = "sqlite3_create_collation";

55 
îr‹_out
;

58 
	`sqlôe3_˛o£
(
db
);

59  
TCL_OK
;

61 
îr‹_out
:

62 
	`T˛_Re£tResu…
(
öãΩ
);

63 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

64  
TCL_ERROR
;

65 
	}
}

70 
SQLITE_TCLAPI
 
	$c_ªÆloc_ã°
(

71 
Clõ¡D©a
 
˛õ¡D©a
,

72 
T˛_I¡îp
 *
öãΩ
,

73 
objc
,

74 
T˛_Obj
 *
CONST
 
objv
[]

76 *
p
;

77 c⁄° *
zEºFun˘i⁄
 = "N/A";

79 if–
objc
!=1 ){

80 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

81  
TCL_ERROR
;

84 
p
 = 
	`sqlôe3_mÆloc
(5);

85 if–!
p
 ){

86 
zEºFun˘i⁄
 = "sqlite3_malloc";

87 
îr‹_out
;

93 
p
 = 
	`sqlôe3_ªÆloc
(p, -1);

94 if–
p
 ){

95 
zEºFun˘i⁄
 = "sqlite3_realloc";

96 
îr‹_out
;

99  
TCL_OK
;

101 
îr‹_out
:

102 
	`T˛_Re£tResu…
(
öãΩ
);

103 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

104  
TCL_ERROR
;

105 
	}
}

111 
SQLITE_TCLAPI
 
	$c_misu£_ã°
(

112 
Clõ¡D©a
 
˛õ¡D©a
,

113 
T˛_I¡îp
 *
öãΩ
,

114 
objc
,

115 
T˛_Obj
 *
CONST
 
objv
[]

117 c⁄° *
zEºFun˘i⁄
 = "N/A";

118 
sqlôe3
 *
db
 = 0;

119 
sqlôe3_°mt
 *
pStmt
;

120 
rc
;

122 if–
objc
!=1 ){

123 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

124  
TCL_ERROR
;

130 
rc
 = 
	`sqlôe3_›í
(":mem‹y:", &
db
);

131 if–
rc
!=
SQLITE_OK
 ){

132 
zEºFun˘i⁄
 = "sqlite3_open";

133 
îr‹_out
;

135 
	`sqlôe3_˛o£
(
db
);

138 
rc
 = 
	`sqlôe3_îrcode
(
db
);

139 if–
rc
!=
SQLITE_MISUSE
 ){

140 
zEºFun˘i⁄
 = "sqlite3_errcode";

141 
îr‹_out
;

144 
pStmt
 = (
sqlôe3_°mt
*)1234;

145 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 0, 0, &
pStmt
, 0);

146 if–
rc
!=
SQLITE_MISUSE
 ){

147 
zEºFun˘i⁄
 = "sqlite3_prepare";

148 
îr‹_out
;

150 
	`as£π
–
pStmt
==0 );

152 
pStmt
 = (
sqlôe3_°mt
*)1234;

153 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 0, 0, &
pStmt
, 0);

154 if–
rc
!=
SQLITE_MISUSE
 ){

155 
zEºFun˘i⁄
 = "sqlite3_prepare_v2";

156 
îr‹_out
;

158 
	`as£π
–
pStmt
==0 );

160 #i‚de‡
SQLITE_OMIT_UTF16


161 
pStmt
 = (
sqlôe3_°mt
*)1234;

162 
rc
 = 
	`sqlôe3_¥ï¨e16
(
db
, 0, 0, &
pStmt
, 0);

163 if–
rc
!=
SQLITE_MISUSE
 ){

164 
zEºFun˘i⁄
 = "sqlite3_prepare16";

165 
îr‹_out
;

167 
	`as£π
–
pStmt
==0 );

168 
pStmt
 = (
sqlôe3_°mt
*)1234;

169 
rc
 = 
	`sqlôe3_¥ï¨e16_v2
(
db
, 0, 0, &
pStmt
, 0);

170 if–
rc
!=
SQLITE_MISUSE
 ){

171 
zEºFun˘i⁄
 = "sqlite3_prepare16_v2";

172 
îr‹_out
;

174 
	`as£π
–
pStmt
==0 );

177  
TCL_OK
;

179 
îr‹_out
:

180 
	`T˛_Re£tResu…
(
öãΩ
);

181 
	`T˛_AµídResu…
(
öãΩ
, "Eº‹Åe°ög fun˘i⁄: ", 
zEºFun˘i⁄
, 0);

182  
TCL_ERROR
;

183 
	}
}

188 
	$Sqlôëe°9_Inô
(
T˛_I¡îp
 *
öãΩ
){

190 *
zName
;

191 
T˛_ObjCmdProc
 *
xProc
;

192 *
˛õ¡D©a
;

193 } 
aObjCmd
[] = {

194 { "c_misu£_ã°", 
c_misu£_ã°
, 0 },

195 { "c_ªÆloc_ã°", 
c_ªÆloc_ã°
, 0 },

196 { "c_cﬁœti⁄_ã°", 
c_cﬁœti⁄_ã°
, 0 },

198 
i
;

199 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

200 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

201 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

203  
TCL_OK
;

204 
	}
}

	@test_async.c

17 
	#TCL_THREADS


	)

18 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

19 
	~"sqlôe_t˛.h
"

21 
	~"t˛.h
"

22 #i‚de‡
SQLITE_TCLAPI


23 
	#SQLITE_TCLAPI


	)

27 #ifde‡
SQLITE_ENABLE_ASYNCIO


29 
	~"sqlôe3async.h
"

30 
	~"sqlôe3.h
"

31 
	~<as£π.h
>

34 c⁄° *
sqlôe3EºName
();

37 
	sTe°AsyncGlobÆ
 {

38 
	misIn°ÆÀd
;

39 } 
	gã°async_g
 = { 0 };

41 
TCL_DECLARE_MUTEX
(
ã°async_g_wrôîMuãx
);

46 
SQLITE_TCLAPI
 
	$ã°AsyncInô
(

47 * 
˛õ¡D©a
,

48 
T˛_I¡îp
 *
öãΩ
,

49 
objc
,

50 
T˛_Obj
 *
CONST
 
objv
[]

52 c⁄° *
zP¨ít
;

53 
isDeÁu…
;

54 
rc
;

56 if–
objc
!=3 ){

57 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PARENT-VFS ISDEFAULT");

58  
TCL_ERROR
;

60 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[1]);

61 if–!*
zP¨ít
 ) {

62 
zP¨ít
 = 0;

64 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
isDeÁu…
) ){

65  
TCL_ERROR
;

68 
rc
 = 
	`sqlôe3async_öôülize
(
zP¨ít
, 
isDeÁu…
);

69 if–
rc
!=
SQLITE_OK
 ){

70 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

71  
TCL_ERROR
;

73  
TCL_OK
;

74 
	}
}

79 
SQLITE_TCLAPI
 
	$ã°AsyncShutdown
(

80 * 
˛õ¡D©a
,

81 
T˛_I¡îp
 *
öãΩ
,

82 
objc
,

83 
T˛_Obj
 *
CONST
 
objv
[]

85 
	`sqlôe3async_shutdown
();

86  
TCL_OK
;

87 
	}
}

89 
T˛_ThªadCª©eTy≥
 
	$t˛WrôîThªad
(
Clõ¡D©a
 
pIsSèπed
){

90 
	`T˛_MuãxLock
(&
ã°async_g_wrôîMuãx
);

91 *((*)
pIsSèπed
) = 1;

92 
	`sqlôe3async_run
();

93 
	`T˛_MuãxU∆ock
(&
ã°async_g_wrôîMuãx
);

94 
	`T˛_ExôThªad
(0);

95 
TCL_THREAD_CREATE_RETURN
;

96 
	}
}

103 
SQLITE_TCLAPI
 
	$ã°AsyncSèπ
(

104 * 
˛õ¡D©a
,

105 
T˛_I¡îp
 *
öãΩ
,

106 
objc
,

107 
T˛_Obj
 *
CONST
 
objv
[]

109 vﬁ©ûê
isSèπed
 = 0;

110 
Clõ¡D©a
 
thªadD©a
 = (Clõ¡D©a)&
isSèπed
;

112 
T˛_ThªadId
 
x
;

113 c⁄° 
nSèck
 = 
TCL_THREAD_STACK_DEFAULT
;

114 c⁄° 
Êags
 = 
TCL_THREAD_NOFLAGS
;

115 
rc
;

117 
rc
 = 
	`T˛_Cª©eThªad
(&
x
, 
t˛WrôîThªad
, 
thªadD©a
, 
nSèck
, 
Êags
);

118 if–
rc
!=
TCL_OK
 ){

119 
	`T˛_AµídResu…
(
öãΩ
, "Tcl_CreateThread() failed", 0);

120  
TCL_ERROR
;

123  
isSèπed
==0 ) { }

124  
TCL_OK
;

125 
	}
}

135 
SQLITE_TCLAPI
 
	$ã°AsyncWaô
(

136 * 
˛õ¡D©a
,

137 
T˛_I¡îp
 *
öãΩ
,

138 
objc
,

139 
T˛_Obj
 *
CONST
 
objv
[]

141 
eC⁄d
;

142 if–
objc
!=1 ){

143 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

144  
TCL_ERROR
;

147 
	`sqlôe3async_c⁄åﬁ
(
SQLITEASYNC_GET_HALT
, &
eC⁄d
);

148 if–
eC⁄d
==
SQLITEASYNC_HALT_NEVER
 ){

149 
	`T˛_AµídResu…
(
öãΩ
, "would block forever", (*)0);

150  
TCL_ERROR
;

153 
	`T˛_MuãxLock
(&
ã°async_g_wrôîMuãx
);

154 
	`T˛_MuãxU∆ock
(&
ã°async_g_wrôîMuãx
);

155  
TCL_OK
;

156 
	}
}

161 
SQLITE_TCLAPI
 
	$ã°AsyncC⁄åﬁ
(

162 * 
˛õ¡D©a
,

163 
T˛_I¡îp
 *
öãΩ
,

164 
objc
,

165 
T˛_Obj
 *
CONST
 
objv
[]

167 
rc
 = 
SQLITE_OK
;

168 
´O±
[] = { 
SQLITEASYNC_HALT
, 
SQLITEASYNC_DELAY
, 
SQLITEASYNC_LOCKFILES
 };

169 c⁄° *
azO±
[] = { "halt", "delay", "lockfiles", 0 };

170 c⁄° *
az
[] = { "never", "now", "idle", 0 };

171 
iVÆ
;

172 
eO±
;

174 if–
objc
!=2 && objc!=3 ){

175 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "OPTION ?VALUE?");

176  
TCL_ERROR
;

178 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
azO±
, "›ti⁄", 0, &
eO±
) ){

179  
TCL_ERROR
;

181 
eO±
 = 
´O±
[eOpt];

183 if–
objc
==3 ){

184  
eO±
 ){

185 
SQLITEASYNC_HALT
: {

186 
	`as£π
–
SQLITEASYNC_HALT_NEVER
==0 );

187 
	`as£π
–
SQLITEASYNC_HALT_NOW
==1 );

188 
	`as£π
–
SQLITEASYNC_HALT_IDLE
==2 );

189 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[2], 
az
, "vÆue", 0, &
iVÆ
) ){

190  
TCL_ERROR
;

194 
SQLITEASYNC_DELAY
:

195 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iVÆ
) ){

196  
TCL_ERROR
;

200 
SQLITEASYNC_LOCKFILES
:

201 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
iVÆ
) ){

202  
TCL_ERROR
;

207 
rc
 = 
	`sqlôe3async_c⁄åﬁ
(
eO±
, 
iVÆ
);

210 if–
rc
==
SQLITE_OK
 ){

211 
rc
 = 
	`sqlôe3async_c⁄åﬁ
(

212 
eO±
==
SQLITEASYNC_HALT
 ? 
SQLITEASYNC_GET_HALT
 :

213 
eO±
==
SQLITEASYNC_DELAY
 ? 
SQLITEASYNC_GET_DELAY
 :

214 
SQLITEASYNC_GET_LOCKFILES
, &
iVÆ
);

217 if–
rc
!=
SQLITE_OK
 ){

218 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

219  
TCL_ERROR
;

222 if–
eO±
==
SQLITEASYNC_HALT
 ){

223 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
az
[
iVÆ
], -1));

225 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iVÆ
));

228  
TCL_OK
;

229 
	}
}

238 
	$Sqlôëe°async_Inô
(
T˛_I¡îp
 *
öãΩ
){

239 #ifde‡
SQLITE_ENABLE_ASYNCIO


240 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_°¨t",
ã°AsyncSèπ
,0,0);

241 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_waô",
ã°AsyncWaô
,0,0);

243 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_c⁄åﬁ",
ã°AsyncC⁄åﬁ
,0,0);

244 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_öôülize",
ã°AsyncInô
,0,0);

245 
	`T˛_Cª©eObjComm™d
(
öãΩ
,"sqlôe3async_shutdown",
ã°AsyncShutdown
,0,0);

247  
TCL_OK
;

248 
	}
}

	@test_autoext.c

14 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

15 
	~"sqlôe_t˛.h
"

17 
	~"t˛.h
"

18 #i‚de‡
SQLITE_TCLAPI


19 
	#SQLITE_TCLAPI


	)

22 
	~"sqlôe3ext.h
"

24 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


25 
SQLITE_EXTENSION_INIT1


30 
	$sqrFunc
(

31 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

32 
¨gc
,

33 
sqlôe3_vÆue
 **
¨gv


35 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

36 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
*r);

37 
	}
}

42 
	$sqr_öô
(

43 
sqlôe3
 *
db
,

44 **
pzEºMsg
,

45 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


47 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

48 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqr", 1, 
SQLITE_ANY
, 0, 
sqrFunc
, 0, 0);

50 
	}
}

55 
	$cubeFunc
(

56 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

57 
¨gc
,

58 
sqlôe3_vÆue
 **
¨gv


60 
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

61 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 
r
*r*r);

62 
	}
}

67 
	$cube_öô
(

68 
sqlôe3
 *
db
,

69 **
pzEºMsg
,

70 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


72 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

73 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "cube", 1, 
SQLITE_ANY
, 0, 
cubeFunc
, 0, 0);

75 
	}
}

80 
	$brokí_öô
(

81 
sqlôe3
 *
db
,

82 **
pzEºMsg
,

83 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


85 *
zEº
;

86 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

87 
zEº
 = 
	`sqlôe3_m¥ötf
("brokenáutoext!");

88 *
pzEºMsg
 = 
zEº
;

90 
	}
}

97 
SQLITE_TCLAPI
 
	$autoExtSqrObjCmd
(

98 * 
˛õ¡D©a
,

99 
T˛_I¡îp
 *
öãΩ
,

100 
objc
,

101 
T˛_Obj
 *
CONST
 
objv
[]

103 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
sqr_öô
);

104 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

105  
SQLITE_OK
;

106 
	}
}

113 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtSqrObjCmd
(

114 * 
˛õ¡D©a
,

115 
T˛_I¡îp
 *
öãΩ
,

116 
objc
,

117 
T˛_Obj
 *
CONST
 
objv
[]

119 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
sqr_öô
);

120 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

121  
SQLITE_OK
;

122 
	}
}

129 
SQLITE_TCLAPI
 
	$autoExtCubeObjCmd
(

130 * 
˛õ¡D©a
,

131 
T˛_I¡îp
 *
öãΩ
,

132 
objc
,

133 
T˛_Obj
 *
CONST
 
objv
[]

135 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
cube_öô
);

136 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

137  
SQLITE_OK
;

138 
	}
}

145 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtCubeObjCmd
(

146 * 
˛õ¡D©a
,

147 
T˛_I¡îp
 *
öãΩ
,

148 
objc
,

149 
T˛_Obj
 *
CONST
 
objv
[]

151 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
cube_öô
);

152 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

153  
SQLITE_OK
;

154 
	}
}

161 
SQLITE_TCLAPI
 
	$autoExtBrokíObjCmd
(

162 * 
˛õ¡D©a
,

163 
T˛_I¡îp
 *
öãΩ
,

164 
objc
,

165 
T˛_Obj
 *
CONST
 
objv
[]

167 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
brokí_öô
);

168 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

169  
SQLITE_OK
;

170 
	}
}

177 
SQLITE_TCLAPI
 
	$ˇn˚lAutoExtBrokíObjCmd
(

178 * 
˛õ¡D©a
,

179 
T˛_I¡îp
 *
öãΩ
,

180 
objc
,

181 
T˛_Obj
 *
CONST
 
objv
[]

183 
rc
 = 
	`sqlôe3_ˇn˚l_auto_exãnsi⁄
(((*)())
brokí_öô
);

184 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

185  
SQLITE_OK
;

186 
	}
}

196 
SQLITE_TCLAPI
 
	$ª£tAutoExtObjCmd
(

197 * 
˛õ¡D©a
,

198 
T˛_I¡îp
 *
öãΩ
,

199 
objc
,

200 
T˛_Obj
 *
CONST
 
objv
[]

202 
	`sqlôe3_ª£t_auto_exãnsi⁄
();

203  
SQLITE_OK
;

204 
	}
}

210 
	$Sqlôëe°_aut€xt_Inô
(
T˛_I¡îp
 *
öãΩ
){

211 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


212 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_sqr",

213 
autoExtSqrObjCmd
, 0, 0);

214 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_cube",

215 
autoExtCubeObjCmd
, 0, 0);

216 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_auto_extension_broken",

217 
autoExtBrokíObjCmd
, 0, 0);

218 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_sqr",

219 
ˇn˚lAutoExtSqrObjCmd
, 0, 0);

220 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_cube",

221 
ˇn˚lAutoExtCubeObjCmd
, 0, 0);

222 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_cancel_auto_extension_broken",

223 
ˇn˚lAutoExtBrokíObjCmd
, 0, 0);

225 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlite3_reset_auto_extension",

226 
ª£tAutoExtObjCmd
, 0, 0);

227  
TCL_OK
;

228 
	}
}

	@test_backup.c

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

20 #i‚de‡
SQLITE_TCLAPI


21 
	#SQLITE_TCLAPI


	)

24 
	~"sqlôe3.h
"

25 
	~<as£π.h
>

28 c⁄° *
sqlôe3EºName
();

31 
gëDbPoöãr
(
T˛_I¡îp
 *, c⁄° *, 
sqlôe3
 **);

33 
SQLITE_TCLAPI
 
	$backupTe°Cmd
(

34 
Clõ¡D©a
 
˛õ¡D©a
,

35 
T˛_I¡îp
 *
öãΩ
,

36 
objc
,

37 
T˛_Obj
 *c⁄°*
objv


39 
	eBackupSubComm™dEnum
 {

40 
BACKUP_STEP
, 
BACKUP_FINISH
, 
BACKUP_REMAINING
, 
BACKUP_PAGECOUNT


42 
	sBackupSubComm™d
 {

43 c⁄° *
zCmd
;

44 
BackupSubComm™dEnum
 
eCmd
;

45 
nArg
;

46 c⁄° *
zArg
;

47 } 
aSub
[] = {

48 {"°ï", 
BACKUP_STEP
 , 1, "npage" },

49 {"föish", 
BACKUP_FINISH
 , 0, "" },

50 {"ªmaöög", 
BACKUP_REMAINING
 , 0, "" },

51 {"∑gecou¡", 
BACKUP_PAGECOUNT
 , 0, "" },

55 
sqlôe3_backup
 *
p
 = (sqlôe3_backu∞*)
˛õ¡D©a
;

56 
iCmd
;

57 
rc
;

59 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

60 
öãΩ
, 
objv
[1], 
aSub
, ◊Sub[0]), "›ti⁄", 0, &
iCmd


62 if–
rc
!=
TCL_OK
 ){

63  
rc
;

65 if–
objc
!=(2 + 
aSub
[
iCmd
].
nArg
) ){

66 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, 
aSub
[
iCmd
].
zArg
);

67  
TCL_ERROR
;

70  
aSub
[
iCmd
].
eCmd
 ){

72 
BACKUP_FINISH
: {

73 c⁄° *
zCmdName
;

74 
T˛_CmdInfo
 
cmdInfo
;

75 
zCmdName
 = 
	`T˛_GëSåög
(
objv
[0]);

76 
	`T˛_GëComm™dInfo
(
öãΩ
, 
zCmdName
, &
cmdInfo
);

77 
cmdInfo
.
dñëeProc
 = 0;

78 
	`T˛_SëComm™dInfo
(
öãΩ
, 
zCmdName
, &
cmdInfo
);

79 
	`T˛_DñëeComm™d
(
öãΩ
, 
zCmdName
);

81 
rc
 = 
	`sqlôe3_backup_föish
(
p
);

82 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

86 
BACKUP_STEP
: {

87 
nPage
;

88 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nPage
) ){

89  
TCL_ERROR
;

91 
rc
 = 
	`sqlôe3_backup_°ï
(
p
, 
nPage
);

92 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

96 
BACKUP_REMAINING
:

97 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_backup_ªmaöög
(
p
)));

100 
BACKUP_PAGECOUNT
:

101 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`sqlôe3_backup_∑gecou¡
(
p
)));

105  
TCL_OK
;

106 
	}
}

108 
SQLITE_TCLAPI
 
	$backupTe°Föish
(
Clõ¡D©a
 
˛õ¡D©a
){

109 
sqlôe3_backup
 *
pBackup
 = (sqlôe3_backu∞*)
˛õ¡D©a
;

110 
	`sqlôe3_backup_föish
(
pBackup
);

111 
	}
}

117 
SQLITE_TCLAPI
 
	$backupTe°Inô
(

118 
Clõ¡D©a
 
˛õ¡D©a
,

119 
T˛_I¡îp
 *
öãΩ
,

120 
objc
,

121 
T˛_Obj
 *c⁄°*
objv


123 
sqlôe3_backup
 *
pBackup
;

124 
sqlôe3
 *
pDe°Db
;

125 
sqlôe3
 *
pSrcDb
;

126 c⁄° *
zDe°Name
;

127 c⁄° *
zSrcName
;

128 c⁄° *
zCmd
;

130 if–
objc
!=6 ){

131 
	`T˛_Wr⁄gNumArgs
(

132 
öãΩ
, 1, 
objv
, "CMDNAME DESTHANDLE DESTNAME SRCHANDLE SRCNAME"

134  
TCL_ERROR
;

137 
zCmd
 = 
	`T˛_GëSåög
(
objv
[1]);

138 
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[2]), &
pDe°Db
);

139 
zDe°Name
 = 
	`T˛_GëSåög
(
objv
[3]);

140 
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[4]), &
pSrcDb
);

141 
zSrcName
 = 
	`T˛_GëSåög
(
objv
[5]);

143 
pBackup
 = 
	`sqlôe3_backup_öô
(
pDe°Db
, 
zDe°Name
, 
pSrcDb
, 
zSrcName
);

144 if–!
pBackup
 ){

145 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_backup_init() failed", 0);

146  
TCL_ERROR
;

149 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zCmd
, 
backupTe°Cmd
, 
pBackup
, 
backupTe°Föish
);

150 
	`T˛_SëObjResu…
(
öãΩ
, 
objv
[1]);

151  
TCL_OK
;

152 
	}
}

154 
	$Sqlôëe°backup_Inô
(
T˛_I¡îp
 *
öãΩ
){

155 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_backup", 
backupTe°Inô
, 0, 0);

156  
TCL_OK
;

157 
	}
}

	@test_bestindex.c

95 
	~"sqlôeI¡.h
"

96 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

97 
	~"sqlôe_t˛.h
"

99 
	~"t˛.h
"

102 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


104 
t˛_vèb
 
	tt˛_vèb
;

105 
t˛_curs‹
 
	tt˛_curs‹
;

110 
	st˛_vèb
 {

111 
sqlôe3_vèb
 
	mba£
;

112 
T˛_I¡îp
 *
	möãΩ
;

113 
T˛_Obj
 *
	mpCmd
;

114 
sqlôe3
 *
	mdb
;

118 
	st˛_curs‹
 {

119 
sqlôe3_vèb_curs‹
 
	mba£
;

120 
sqlôe3_°mt
 *
	mpStmt
;

126 
	$t˛DequŸe
(*
z
){

127 
q
 = 
z
[0];

130 if–
q
=='[' || q=='\'' || q=='"' || q=='`' ){

131 
iIn
 = 1;

132 
iOut
 = 0;

133 if–
q
=='[' ) q = ']';

135  
	`ALWAYS
(
z
[
iIn
]) ){

136 if–
z
[
iIn
]==
q
 ){

137 if–
z
[
iIn
+1]!=
q
 ){

139 
iIn
++;

145 
iIn
 += 2;

146 
z
[
iOut
++] = 
q
;

149 
z
[
iOut
++] = z[
iIn
++];

153 
z
[
iOut
] = '\0';

155 
	}
}

168 
	$t˛C⁄√˘
(

169 
sqlôe3
 *
db
,

170 *
pAux
,

171 
¨gc
, c⁄° *c⁄°*
¨gv
,

172 
sqlôe3_vèb
 **
µVèb
,

173 **
pzEº


175 
T˛_I¡îp
 *
öãΩ
 = (T˛_I¡îp*)
pAux
;

176 
t˛_vèb
 *
pTab
 = 0;

177 *
zCmd
 = 0;

178 
T˛_Obj
 *
pS¸ùt
 = 0;

179 
rc
 = 
SQLITE_OK
;

181 if–
¨gc
!=4 ){

182 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

183  
SQLITE_ERROR
;

186 
zCmd
 = 
	`sqlôe3_mÆloc64
(
	`°æí
(
¨gv
[3])+1);

187 
pTab
 = (
t˛_vèb
*)
	`sqlôe3_mÆloc64
((tcl_vtab));

188 if–
zCmd
 && 
pTab
 ){

189 
	`mem˝y
(
zCmd
, 
¨gv
[3], 
	`°æí
(argv[3])+1);

190 
	`t˛DequŸe
(
zCmd
);

191 
	`mem£t
(
pTab
, 0, (
t˛_vèb
));

193 
pTab
->
pCmd
 = 
	`T˛_NewSåögObj
(
zCmd
, -1);

194 
pTab
->
öãΩ
 = interp;

195 
pTab
->
db
 = db;

196 
	`T˛_In¸RefCou¡
(
pTab
->
pCmd
);

198 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

199 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

200 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xConnect", -1));

202 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

203 if–
rc
!=
TCL_OK
 ){

204 *
pzEº
 = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåögResu…
(
öãΩ
));

205 
rc
 = 
SQLITE_ERROR
;

207 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
	`T˛_GëSåögResu…
(
öãΩ
));

210 if–
rc
!=
SQLITE_OK
 ){

211 
	`sqlôe3_‰ì
(
pTab
);

212 
pTab
 = 0;

215 
rc
 = 
SQLITE_NOMEM
;

218 
	`sqlôe3_‰ì
(
zCmd
);

219 *
µVèb
 = &
pTab
->
ba£
;

220  
rc
;

221 
	}
}

224 
	$t˛Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

225 
t˛_vèb
 *
pTab
 = (t˛_vèb*)
pVèb
;

226 
	`T˛_De¸RefCou¡
(
pTab
->
pCmd
);

227 
	`sqlôe3_‰ì
(
pTab
);

228  
SQLITE_OK
;

229 
	}
}

234 
	$t˛O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

235 
t˛_curs‹
 *
pCur
;

236 
pCur
 = 
	`sqlôe3_mÆloc
((
t˛_curs‹
));

237 if–
pCur
==0 )  
SQLITE_NOMEM
;

238 
	`mem£t
(
pCur
, 0, (
t˛_curs‹
));

239 *
µCurs‹
 = &
pCur
->
ba£
;

240  
SQLITE_OK
;

241 
	}
}

246 
	$t˛Clo£
(
sqlôe3_vèb_curs‹
 *
cur
){

247 
t˛_curs‹
 *
pCur
 = (t˛_curs‹ *)
cur
;

248 if–
pCur
 ){

249 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

250 
	`sqlôe3_‰ì
(
pCur
);

252  
SQLITE_OK
;

253 
	}
}

255 
	$t˛Next
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

256 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

257 if–
pC§
->
pStmt
 ){

258 
t˛_vèb
 *
pTab
 = (t˛_vèb*)(
pVèbCurs‹
->
pVèb
);

259 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

260 if–
rc
!=
SQLITE_ROW
 ){

261 c⁄° *
zEº
;

262 
rc
 = 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

263 
pC§
->
pStmt
 = 0;

264 if–
rc
!=
SQLITE_OK
 ){

265 
zEº
 = 
	`sqlôe3_îrmsg
(
pTab
->
db
);

266 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

270  
SQLITE_OK
;

271 
	}
}

273 
	$t˛Fûãr
(

274 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

275 
idxNum
, c⁄° *
idxSå
,

276 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


278 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

279 
t˛_vèb
 *
pTab
 = (t˛_vèb*)(
pVèbCurs‹
->
pVèb
);

280 
T˛_I¡îp
 *
öãΩ
 = 
pTab
->interp;

281 
T˛_Obj
 *
pS¸ùt
;

282 
T˛_Obj
 *
pArg
;

283 
ii
;

284 
rc
;

286 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

287 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

288 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xFilter", -1));

289 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewI¡Obj
(
idxNum
));

290 if–
idxSå
 ){

291 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
(
idxSå
, -1));

293 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("", -1));

296 
pArg
 = 
	`T˛_NewObj
();

297 
	`T˛_In¸RefCou¡
(
pArg
);

298 
ii
=0; ii<
¨gc
; ii++){

299 c⁄° *
zVÆ
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
ii
]);

300 
T˛_Obj
 *
pVÆ
;

301 if–
zVÆ
==0 ){

302 
pVÆ
 = 
	`T˛_NewObj
();

304 
pVÆ
 = 
	`T˛_NewSåögObj
(
zVÆ
, -1);

306 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pArg
, 
pVÆ
);

308 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
pArg
);

309 
	`T˛_De¸RefCou¡
(
pArg
);

311 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

312 if–
rc
!=
TCL_OK
 ){

313 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

314 
rc
 = 
SQLITE_ERROR
;

315 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

323 
T˛_Obj
 *
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

324 
T˛_Obj
 **
≠EÀm
 = 0;

325 
nEÀm
;

326 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
pRes
, &
nEÀm
, &
≠EÀm
);

327 if–
rc
!=
TCL_OK
 ){

328 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

329 
rc
 = 
SQLITE_ERROR
;

330 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

332 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nEÀm
; ii+=2){

333 c⁄° *
zCmd
 = 
	`T˛_GëSåög
(
≠EÀm
[
ii
]);

334 
T˛_Obj
 *
p
 = 
≠EÀm
[
ii
+1];

335 if–
	`sqlôe3_°ricmp
("sql", 
zCmd
)==0 ){

336 c⁄° *
zSql
 = 
	`T˛_GëSåög
(
p
);

337 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

338 if–
rc
!=
SQLITE_OK
 ){

339 c⁄° *
zEº
 = 
	`sqlôe3_îrmsg
(
pTab
->
db
);

340 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zEº
);

343 
rc
 = 
SQLITE_ERROR
;

344 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zCmd
);

350 if–
rc
==
SQLITE_OK
 ){

351 
rc
 = 
	`t˛Next
(
pVèbCurs‹
);

353  
rc
;

354 
	}
}

356 
	$t˛Cﬁumn
(

357 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

358 
sqlôe3_c⁄ãxt
 *
˘x
,

359 
i


361 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

362 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pC§
->
pStmt
, 
i
+1));

363  
SQLITE_OK
;

364 
	}
}

366 
	$t˛Rowid
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
, 
sqlôe_öt64
 *
pRowid
){

367 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

368 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pC§
->
pStmt
, 0);

369  
SQLITE_OK
;

370 
	}
}

372 
	$t˛Eof
(
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
){

373 
t˛_curs‹
 *
pC§
 = (t˛_curs‹*)
pVèbCurs‹
;

374  (
pC§
->
pStmt
==0);

375 
	}
}

377 
	$t˛Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

378 
t˛_vèb
 *
pTab
 = (t˛_vèb*)
èb
;

379 
T˛_I¡îp
 *
öãΩ
 = 
pTab
->interp;

380 
T˛_Obj
 *
pArg
;

381 
T˛_Obj
 *
pS¸ùt
;

382 
ii
;

383 
rc
 = 
SQLITE_OK
;

385 
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
pTab
->
pCmd
);

386 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

387 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pS¸ùt
, 
	`T˛_NewSåögObj
("xBestIndex", -1));

389 
pArg
 = 
	`T˛_NewObj
();

390 
	`T˛_In¸RefCou¡
(
pArg
);

391 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

392 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

393 
T˛_Obj
 *
pEÀm
 = 
	`T˛_NewObj
();

394 c⁄° *
zOp
 = "?";

396 
	`T˛_In¸RefCou¡
(
pEÀm
);

398  
pC⁄s
->
›
 ){

399 
SQLITE_INDEX_CONSTRAINT_EQ
:

400 
zOp
 = "eq"; ;

401 
SQLITE_INDEX_CONSTRAINT_GT
:

402 
zOp
 = "gt"; ;

403 
SQLITE_INDEX_CONSTRAINT_LE
:

404 
zOp
 = "le"; ;

405 
SQLITE_INDEX_CONSTRAINT_LT
:

406 
zOp
 = "lt"; ;

407 
SQLITE_INDEX_CONSTRAINT_GE
:

408 
zOp
 = "ge"; ;

409 
SQLITE_INDEX_CONSTRAINT_MATCH
:

410 
zOp
 = "match"; ;

411 
SQLITE_INDEX_CONSTRAINT_LIKE
:

412 
zOp
 = "like"; ;

413 
SQLITE_INDEX_CONSTRAINT_GLOB
:

414 
zOp
 = "glob"; ;

415 
SQLITE_INDEX_CONSTRAINT_REGEXP
:

416 
zOp
 = "regexp"; ;

419 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("op", -1));

420 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
(
zOp
, -1));

421 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("column", -1));

422 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pC⁄s
->
iCﬁumn
));

423 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("usable", -1));

424 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pC⁄s
->
ußbÀ
));

426 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
pEÀm
);

427 
	`T˛_De¸RefCou¡
(
pEÀm
);

430 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
pArg
);

431 
	`T˛_De¸RefCou¡
(
pArg
);

433 
pArg
 = 
	`T˛_NewObj
();

434 
	`T˛_In¸RefCou¡
(
pArg
);

435 
ii
=0; ii<
pIdxInfo
->
nOrdîBy
; ii++){

436 
sqlôe3_ödex_‹dîby
 c⁄° *
pOrdî
 = &
pIdxInfo
->
aOrdîBy
[
ii
];

437 
T˛_Obj
 *
pEÀm
 = 
	`T˛_NewObj
();

438 
	`T˛_In¸RefCou¡
(
pEÀm
);

440 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("column", -1));

441 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pOrdî
->
iCﬁumn
));

442 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewSåögObj
("desc", -1));

443 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEÀm
, 
	`T˛_NewI¡Obj
(
pOrdî
->
desc
));

445 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
pEÀm
);

446 
	`T˛_De¸RefCou¡
(
pEÀm
);

449 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
pArg
);

450 
	`T˛_De¸RefCou¡
(
pArg
);

452 
	`T˛_Li°ObjAµídEÀmít
(0, 
pS¸ùt
, 
	`T˛_NewWideI¡Obj
(
pIdxInfo
->
cﬁU£d
));

454 
rc
 = 
	`T˛_EvÆObjEx
(
öãΩ
, 
pS¸ùt
, 
TCL_EVAL_GLOBAL
);

455 
	`T˛_De¸RefCou¡
(
pS¸ùt
);

456 if–
rc
!=
TCL_OK
 ){

457 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

458 
rc
 = 
SQLITE_ERROR
;

459 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

473 
T˛_Obj
 *
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

474 
T˛_Obj
 **
≠EÀm
 = 0;

475 
nEÀm
;

476 
rc
 = 
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
pRes
, &
nEÀm
, &
≠EÀm
);

477 if–
rc
!=
TCL_OK
 ){

478 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

479 
rc
 = 
SQLITE_ERROR
;

480 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

482 
iArgv
 = 1;

483 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nEÀm
; ii+=2){

484 c⁄° *
zCmd
 = 
	`T˛_GëSåög
(
≠EÀm
[
ii
]);

485 
T˛_Obj
 *
p
 = 
≠EÀm
[
ii
+1];

486 if–
	`sqlôe3_°ricmp
("co°", 
zCmd
)==0 ){

487 
rc
 = 
	`T˛_GëDoubÀFromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
e°im©edCo°
);

489 if–
	`sqlôe3_°ricmp
("‹dîby", 
zCmd
)==0 ){

490 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
‹dîByC⁄sumed
);

492 if–
	`sqlôe3_°ricmp
("idxnum", 
zCmd
)==0 ){

493 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
pIdxInfo
->
idxNum
);

495 if–
	`sqlôe3_°ricmp
("idx°r", 
zCmd
)==0 ){

496 
	`sqlôe3_‰ì
(
pIdxInfo
->
idxSå
);

497 
pIdxInfo
->
idxSå
 = 
	`sqlôe3_m¥ötf
("%s", 
	`T˛_GëSåög
(
p
));

498 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

500 if–
	`sqlôe3_°ricmp
("rows", 
zCmd
)==0 ){

501 
T˛_WideI¡
 
x
 = 0;

502 
rc
 = 
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
p
, &
x
);

503 
pIdxInfo
->
e°im©edRows
 = (
tRow˙t
)
x
;

505 if–
	`sqlôe3_°ricmp
("u£", 
zCmd
)==0

506 || 
	`sqlôe3_°ricmp
("omô", 
zCmd
)==0

508 
iC⁄s
;

509 
rc
 = 
	`T˛_GëI¡FromObj
(
öãΩ
, 
p
, &
iC⁄s
);

510 if–
rc
==
SQLITE_OK
 ){

511 if–
iC⁄s
<0 || iC⁄s>=
pIdxInfo
->
nC⁄°øöt
 ){

512 
rc
 = 
SQLITE_ERROR
;

513 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %d", 
iC⁄s
);

515 
bOmô
 = (
zCmd
[0]=='o' || zCmd[0]=='O');

516 
pIdxInfo
->
aC⁄°øötUßge
[
iC⁄s
].
¨gvIndex
 = 
iArgv
++;

517 
pIdxInfo
->
aC⁄°øötUßge
[
iC⁄s
].
omô
 = 
bOmô
;

521 
rc
 = 
SQLITE_ERROR
;

522 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("u√x≥˘ed: %s", 
zCmd
);

524 if–
rc
!=
SQLITE_OK
 && 
pTab
->
ba£
.
zEºMsg
==0 ){

525 c⁄° *
zEº
 = 
	`T˛_GëSåögResu…
(
öãΩ
);

526 
pTab
->
ba£
.
zEºMsg
 = 
	`sqlôe3_m¥ötf
("%s", 
zEº
);

532  
rc
;

533 
	}
}

539 
sqlôe3_moduÀ
 
	gt˛ModuÀ
 = {

541 
t˛C⁄√˘
,

542 
t˛C⁄√˘
,

543 
t˛Be°Index
,

544 
t˛Disc⁄√˘
,

545 
t˛Disc⁄√˘
,

546 
t˛O≥n
,

547 
t˛Clo£
,

548 
t˛Fûãr
,

549 
t˛Next
,

550 
t˛Eof
,

551 
t˛Cﬁumn
,

552 
t˛Rowid
,

565 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

570 
SQLITE_TCLAPI
 
	$ªgi°î_t˛_moduÀ
(

571 
Clõ¡D©a
 
˛õ¡D©a
,

572 
T˛_I¡îp
 *
öãΩ
,

573 
objc
,

574 
T˛_Obj
 *
CONST
 
objv
[]

576 
sqlôe3
 *
db
;

577 if–
objc
!=2 ){

578 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

579  
TCL_ERROR
;

581 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

582 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


583 
	`sqlôe3_¸óã_moduÀ
(
db
, "t˛", &
t˛ModuÀ
, (*)
öãΩ
);

585  
TCL_OK
;

586 
	}
}

594 
	$Sqlôëe°t˛_Inô
(
T˛_I¡îp
 *
öãΩ
){

595 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


597 *
zName
;

598 
T˛_ObjCmdProc
 *
xProc
;

599 *
˛õ¡D©a
;

600 } 
aObjCmd
[] = {

601 { "ªgi°î_t˛_moduÀ", 
ªgi°î_t˛_moduÀ
, 0 },

603 
i
;

604 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

605 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

606 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

609  
TCL_OK
;

610 
	}
}

	@test_blob.c

14 
	~"sqlôeI¡.h
"

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 
	~<°dlib.h
>

21 
	~<°rög.h
>

22 
	~<as£π.h
>

23 #i‚de‡
SQLITE_OMIT_INCRBLOB


26 c⁄° *
sqlôe3EºName
();

29 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

30 *
sqlôe3Te°TextToPå
(c⁄° *
z
);

37 *
	$±rToText
(*
p
){

38 
buf
[100];

39 
	`sqlôe3_¢¥ötf
((
buf
)-1, buf, "%p", 
p
);

40  
buf
;

41 
	}
}

55 
	$blobH™dÀFromObj
(

56 
T˛_I¡îp
 *
öãΩ
,

57 
T˛_Obj
 *
pObj
,

58 
sqlôe3_blob
 **
µBlob


60 *
z
;

61 
n
;

63 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

64 if–
n
==0 ){

65 *
µBlob
 = 0;

66 }if–
n
>9 && 0==
	`memcmp
("ö¸blob_", 
z
, 9) ){

67 
nŸU£d
;

68 
T˛_Ch™√l
 
ch™√l
;

69 
Clõ¡D©a
 
ö°™˚D©a
;

71 
ch™√l
 = 
	`T˛_GëCh™√l
(
öãΩ
, 
z
, &
nŸU£d
);

72 if–!
ch™√l
 )  
TCL_ERROR
;

74 
	`T˛_Flush
(
ch™√l
);

75 
	`T˛_Sìk
(
ch™√l
, 0, 
SEEK_SET
);

77 
ö°™˚D©a
 = 
	`T˛_GëCh™√lIn°™˚D©a
(
ch™√l
);

78 *
µBlob
 = *((
sqlôe3_blob
 **)
ö°™˚D©a
);

80 *
µBlob
 = (
sqlôe3_blob
*)
	`sqlôe3Te°TextToPå
(
z
);

83  
TCL_OK
;

84 
	}
}

90 *
	$blobSåögFromObj
(
T˛_Obj
 *
pObj
){

91 
n
;

92 *
z
;

93 
z
 = 
	`T˛_GëSåögFromObj
(
pObj
, &
n
);

94  (
n
 ? 
z
 : 0);

95 
	}
}

102 
SQLITE_TCLAPI
 
	$ã°_blob_›í
(

103 
Clõ¡D©a
 
˛õ¡D©a
,

104 
T˛_I¡îp
 *
öãΩ
,

105 
objc
,

106 
T˛_Obj
 *
CONST
 
objv
[]

108 
sqlôe3
 *
db
;

109 c⁄° *
zDb
;

110 c⁄° *
zTabÀ
;

111 c⁄° *
zCﬁumn
;

112 
T˛_WideI¡
 
iRowid
;

113 
Êags
;

114 c⁄° *
zV¨«me
;

115 
nV¨«me
;

117 
sqlôe3_blob
 *
pBlob
 = (sqlite3_blob*)0xFFFFFFFF;

118 
rc
;

120 if–
objc
!=8 ){

121 c⁄° *
zUßge
 = "DB DATABASE TABLE COLUMN ROWID FLAGS VARNAME";

122 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, 
zUßge
);

123  
TCL_ERROR
;

125 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

126 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

127 
zTabÀ
 = 
	`blobSåögFromObj
(
objv
[3]);

128 
zCﬁumn
 = 
	`T˛_GëSåög
(
objv
[4]);

129 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[5], &
iRowid
ËË 
TCL_ERROR
;

130 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[6], &
Êags
ËË 
TCL_ERROR
;

131 
zV¨«me
 = 
	`T˛_GëSåögFromObj
(
objv
[7], &
nV¨«me
);

133 if–
nV¨«me
>0 ){

134 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRowid
, 
Êags
, &
pBlob
);

135 
	`T˛_SëV¨
(
öãΩ
, 
zV¨«me
, 
	`±rToText
(
pBlob
), 0);

137 
rc
 = 
	`sqlôe3_blob_›í
(
db
, 
zDb
, 
zTabÀ
, 
zCﬁumn
, 
iRowid
, 
Êags
, 0);

140 if–
rc
==
SQLITE_OK
 ){

141 
	`T˛_Re£tResu…
(
öãΩ
);

143 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

144  
TCL_ERROR
;

146  
TCL_OK
;

147 
	}
}

153 
SQLITE_TCLAPI
 
	$ã°_blob_˛o£
(

154 
Clõ¡D©a
 
˛õ¡D©a
,

155 
T˛_I¡îp
 *
öãΩ
,

156 
objc
,

157 
T˛_Obj
 *
CONST
 
objv
[]

159 
sqlôe3_blob
 *
pBlob
;

160 
rc
;

162 if–
objc
!=2 ){

163 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

164  
TCL_ERROR
;

167 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

168 
rc
 = 
	`sqlôe3_blob_˛o£
(
pBlob
);

170 if–
rc
 ){

171 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

173 
	`T˛_Re£tResu…
(
öãΩ
);

175  
TCL_OK
;

176 
	}
}

181 
SQLITE_TCLAPI
 
	$ã°_blob_byãs
(

182 
Clõ¡D©a
 
˛õ¡D©a
,

183 
T˛_I¡îp
 *
öãΩ
,

184 
objc
,

185 
T˛_Obj
 *
CONST
 
objv
[]

187 
sqlôe3_blob
 *
pBlob
;

188 
nByã
;

190 if–
objc
!=2 ){

191 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

192  
TCL_ERROR
;

195 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

196 
nByã
 = 
	`sqlôe3_blob_byãs
(
pBlob
);

197 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nByã
));

199  
TCL_OK
;

200 
	}
}

217 
SQLITE_TCLAPI
 
	$ã°_blob_ªad
(

218 
Clõ¡D©a
 
˛õ¡D©a
,

219 
T˛_I¡îp
 *
öãΩ
,

220 
objc
,

221 
T˛_Obj
 *
CONST
 
objv
[]

223 
sqlôe3_blob
 *
pBlob
;

224 
nByã
;

225 
iOff£t
;

226 *
zBuf
 = 0;

227 
rc
;

229 if–
objc
!=4 ){

230 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "CHANNEL OFFSET N");

231  
TCL_ERROR
;

234 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

235 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iOff£t
)

236 || 
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nByã
)

238  
TCL_ERROR
;

241 if–
nByã
>0 ){

242 
zBuf
 = (*)
	`T˛_AŒoc
(
nByã
);

244 
rc
 = 
	`sqlôe3_blob_ªad
(
pBlob
, 
zBuf
, 
nByã
, 
iOff£t
);

245 if–
rc
==
SQLITE_OK
 ){

246 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewByãAºayObj
(
zBuf
, 
nByã
));

248 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

250 
	`T˛_Fªe
((*)
zBuf
);

252  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

253 
	}
}

269 
SQLITE_TCLAPI
 
	$ã°_blob_wrôe
(

270 
Clõ¡D©a
 
˛õ¡D©a
,

271 
T˛_I¡îp
 *
öãΩ
,

272 
objc
,

273 
T˛_Obj
 *
CONST
 
objv
[]

275 
sqlôe3_blob
 *
pBlob
;

276 
iOff£t
;

277 
rc
;

279 *
zBuf
;

280 
nBuf
;

282 if–
objc
!=4 && objc!=5 ){

283 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE OFFSET DATA ?NDATA?");

284  
TCL_ERROR
;

287 if–
	`blobH™dÀFromObj
(
öãΩ
, 
objv
[1], &
pBlob
ËË 
TCL_ERROR
;

288 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iOff£t
) ){

289  
TCL_ERROR
;

292 
zBuf
 = 
	`T˛_GëByãAºayFromObj
(
objv
[3], &
nBuf
);

293 if–
objc
==5 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
nBuf
) ){

294  
TCL_ERROR
;

296 
rc
 = 
	`sqlôe3_blob_wrôe
(
pBlob
, 
zBuf
, 
nBuf
, 
iOff£t
);

297 if–
rc
!=
SQLITE_OK
 ){

298 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

301  (
rc
==
SQLITE_OK
 ? 
TCL_OK
 : 
TCL_ERROR
);

302 
	}
}

308 
	$Sqlôëe°_blob_Inô
(
T˛_I¡îp
 *
öãΩ
){

309 #i‚de‡
SQLITE_OMIT_INCRBLOB


311 *
zName
;

312 
T˛_ObjCmdProc
 *
xProc
;

313 } 
aObjCmd
[] = {

314 { "sqlôe3_blob_›í", 
ã°_blob_›í
 },

315 { "sqlôe3_blob_˛o£", 
ã°_blob_˛o£
 },

316 { "sqlôe3_blob_byãs", 
ã°_blob_byãs
 },

317 { "sqlôe3_blob_ªad", 
ã°_blob_ªad
 },

318 { "sqlôe3_blob_wrôe", 
ã°_blob_wrôe
 },

320 
i
;

321 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

322 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

325  
TCL_OK
;

326 
	}
}

	@test_btree.c

16 
	~"båìI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

29 
SQLITE_TCLAPI
 
	$sqlôe3BåìSh¨edCacheRï‹t
(

30 * 
˛õ¡D©a
,

31 
T˛_I¡îp
 *
öãΩ
,

32 
objc
,

33 
T˛_Obj
 *
CONST
 
objv
[]

35 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


36 
BtSh¨ed
 *
sqlôe3Sh¨edCacheLi°
;

37 
BtSh¨ed
 *
pBt
;

38 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

39 
pBt
=
	`GLOBAL
(
BtSh¨ed
*,
sqlôe3Sh¨edCacheLi°
);ÖBt;ÖBtıBt->
pNext
){

40 c⁄° *
zFûe
 = 
	`sqlôe3PagîFûíame
(
pBt
->
pPagî
, 1);

41 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
zFûe
, -1));

42 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
pBt
->
nRef
));

44 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

46  
TCL_OK
;

47 
	}
}

52 
	$sqlôe3BåìCurs‹Li°
(
Båì
 *
p
){

53 #ifde‡
SQLITE_DEBUG


54 
BtCurs‹
 *
pCur
;

55 
BtSh¨ed
 *
pBt
 = 
p
->pBt;

56 
pCur
=
pBt
->
pCurs‹
;ÖCur;ÖCurıCur->
pNext
){

57 
MemPage
 *
pPage
 = 
pCur
->
≠Page
[pCur->
iPage
];

58 *
zMode
 = (
pCur
->
curFœgs
 & 
BTCF_WrôeFœg
) ? "rw" : "ro";

59 
	`sqlôe3DebugPrötf
("CURSOR %pÑootedát %4d(%s) currentlyát %d.%d%s\n",

60 
pCur
,ÖCur->
pgnoRoŸ
, 
zMode
,

61 
pPage
 ?ÖPage->
pgno
 : 0, 
pCur
->
aiIdx
[pCur->
iPage
],

62 (
pCur
->
eSèã
==
CURSOR_VALID
) ? "" : "Éof"

66 
	}
}

	@test_config.c

20 
	~"sqlôeLimô.h
"

22 
	~"sqlôeI¡.h
"

23 #i‡
SQLITE_OS_WIN


24 
	~"os_wö.h
"

27 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

28 
	~"sqlôe_t˛.h
"

30 
	~"t˛.h
"

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

39 
	#STRINGVALUE2
(
x
Ë#x

	)

40 
	#STRINGVALUE
(
x
Ë
	`STRINGVALUE2
(x)

	)

47 
	$£t_›ti⁄s
(
T˛_I¡îp
 *
öãΩ
){

48 #i‡
HAVE_MALLOC_USABLE_SIZE


49 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "malloc_usable_size", "1",

50 
TCL_GLOBAL_ONLY
);

52 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "malloc_usable_size", "0",

53 
TCL_GLOBAL_ONLY
);

56 #ifde‡
SQLITE_32BIT_ROWID


57 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rowid32", "1", 
TCL_GLOBAL_ONLY
);

59 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rowid32", "0", 
TCL_GLOBAL_ONLY
);

62 #ifde‡
SQLITE_CASE_SENSITIVE_LIKE


63 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s","ˇ££nsôivñike","1",
TCL_GLOBAL_ONLY
);

65 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s","ˇ££nsôivñike","0",
TCL_GLOBAL_ONLY
);

68 #i‡!
SQLITE_OS_WINCE
 && !
SQLITE_OS_WINRT


69 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curdú", "1", 
TCL_GLOBAL_ONLY
);

71 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curdú", "0", 
TCL_GLOBAL_ONLY
);

74 #ifde‡
SQLITE_WIN32_MALLOC


75 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wö32mÆloc", "1", 
TCL_GLOBAL_ONLY
);

77 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wö32mÆloc", "0", 
TCL_GLOBAL_ONLY
);

80 #ifde‡
SQLITE_DEBUG


81 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "debug", "1", 
TCL_GLOBAL_ONLY
);

83 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "debug", "0", 
TCL_GLOBAL_ONLY
);

86 #ifde‡
SQLITE_DEFAULT_CKPTFULLFSYNC


87 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "default_ckptfullfsync",

88 
SQLITE_DEFAULT_CKPTFULLFSYNC
 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

90 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "deÁu…_ck±fuŒfsync", "0", 
TCL_GLOBAL_ONLY
);

93 #ifde‡
SQLITE_DIRECT_OVERFLOW_READ


94 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúe˘_ªad", "1", 
TCL_GLOBAL_ONLY
);

96 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúe˘_ªad", "0", 
TCL_GLOBAL_ONLY
);

99 #ifde‡
SQLITE_DISABLE_DIRSYNC


100 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúsync", "0", 
TCL_GLOBAL_ONLY
);

102 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dúsync", "1", 
TCL_GLOBAL_ONLY
);

105 #ifde‡
SQLITE_DISABLE_LFS


106 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lfs", "0", 
TCL_GLOBAL_ONLY
);

108 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lfs", "1", 
TCL_GLOBAL_ONLY
);

111 #ifde‡
SQLITE_DISABLE_PAGECACHE_OVERFLOW_STATS


112 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑geˇche_ovîÊow_°©s","0",
TCL_GLOBAL_ONLY
);

114 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑geˇche_ovîÊow_°©s","1",
TCL_GLOBAL_ONLY
);

117 #i‡
SQLITE_MAX_MMAP_SIZE
>0

118 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mm≠", "1", 
TCL_GLOBAL_ONLY
);

120 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mm≠", "0", 
TCL_GLOBAL_ONLY
);

123 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "worker_threads",

124 
	`STRINGVALUE
(
SQLITE_MAX_WORKER_THREADS
), 
TCL_GLOBAL_ONLY


128 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "memdebug", "1", 
TCL_GLOBAL_ONLY
);

130 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "memdebug", "0", 
TCL_GLOBAL_ONLY
);

133 #ifde‡
SQLITE_ENABLE_8_3_NAMES


134 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "8_3_«mes", "1", 
TCL_GLOBAL_ONLY
);

136 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "8_3_«mes", "0", 
TCL_GLOBAL_ONLY
);

139 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


140 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curs‹höts", "1", 
TCL_GLOBAL_ONLY
);

142 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "curs‹höts", "0", 
TCL_GLOBAL_ONLY
);

145 #ifde‡
SQLITE_ENABLE_HIDDEN_COLUMNS


146 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "hiddícﬁumns", "1", 
TCL_GLOBAL_ONLY
);

148 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "hiddícﬁumns", "0", 
TCL_GLOBAL_ONLY
);

151 #ifde‡
SQLITE_ENABLE_MEMSYS3


152 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem3", "1", 
TCL_GLOBAL_ONLY
);

154 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem3", "0", 
TCL_GLOBAL_ONLY
);

157 #ifde‡
SQLITE_ENABLE_MEMSYS5


158 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem5", "1", 
TCL_GLOBAL_ONLY
);

160 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem5", "0", 
TCL_GLOBAL_ONLY
);

163 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


164 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥eupd©e", "1", 
TCL_GLOBAL_ONLY
);

166 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥eupd©e", "0", 
TCL_GLOBAL_ONLY
);

169 #ifde‡
SQLITE_ENABLE_SNAPSHOT


170 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¢≠shŸ", "1", 
TCL_GLOBAL_ONLY
);

172 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¢≠shŸ", "0", 
TCL_GLOBAL_ONLY
);

175 #ifde‡
SQLITE_MUTEX_OMIT


176 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx", "0", 
TCL_GLOBAL_ONLY
);

178 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx", "1", 
TCL_GLOBAL_ONLY
);

181 #ifde‡
SQLITE_MUTEX_NOOP


182 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx_no›", "1", 
TCL_GLOBAL_ONLY
);

184 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "muãx_no›", "0", 
TCL_GLOBAL_ONLY
);

187 #ifde‡
SQLITE_OMIT_ALTERTABLE


188 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ÆãπabÀ", "0", 
TCL_GLOBAL_ONLY
);

190 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ÆãπabÀ", "1", 
TCL_GLOBAL_ONLY
);

193 #ifde‡
SQLITE_OMIT_ANALYZE


194 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "™Æyze", "0", 
TCL_GLOBAL_ONLY
);

196 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "™Æyze", "1", 
TCL_GLOBAL_ONLY
);

199 #ifde‡
SQLITE_ENABLE_API_ARMOR


200 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "≠i_¨m‹", "1", 
TCL_GLOBAL_ONLY
);

202 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "≠i_¨m‹", "0", 
TCL_GLOBAL_ONLY
);

205 #ifde‡
SQLITE_ENABLE_ATOMIC_WRITE


206 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©omicwrôe", "1", 
TCL_GLOBAL_ONLY
);

208 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©omicwrôe", "0", 
TCL_GLOBAL_ONLY
);

211 #ifde‡
SQLITE_ENABLE_JSON1


212 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "js⁄1", "1", 
TCL_GLOBAL_ONLY
);

214 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "js⁄1", "0", 
TCL_GLOBAL_ONLY
);

217 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


218 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_m©ch_blobs", "0", 
TCL_GLOBAL_ONLY
);

220 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_m©ch_blobs", "1", 
TCL_GLOBAL_ONLY
);

223 #ifde‡
SQLITE_OMIT_ATTACH


224 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©èch", "0", 
TCL_GLOBAL_ONLY
);

226 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "©èch", "1", 
TCL_GLOBAL_ONLY
);

229 #ifde‡
SQLITE_OMIT_AUTHORIZATION


230 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "auth", "0", 
TCL_GLOBAL_ONLY
);

232 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "auth", "1", 
TCL_GLOBAL_ONLY
);

235 #ifde‡
SQLITE_OMIT_AUTOINCREMENT


236 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoöc", "0", 
TCL_GLOBAL_ONLY
);

238 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoöc", "1", 
TCL_GLOBAL_ONLY
);

241 #ifde‡
SQLITE_OMIT_AUTOMATIC_INDEX


242 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoödex", "0", 
TCL_GLOBAL_ONLY
);

244 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autoödex", "1", 
TCL_GLOBAL_ONLY
);

247 #ifde‡
SQLITE_OMIT_AUTORESET


248 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "aut‹e£t", "0", 
TCL_GLOBAL_ONLY
);

250 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "aut‹e£t", "1", 
TCL_GLOBAL_ONLY
);

253 #ifde‡
SQLITE_OMIT_AUTOVACUUM


254 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autovacuum", "0", 
TCL_GLOBAL_ONLY
);

256 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "autovacuum", "1", 
TCL_GLOBAL_ONLY
);

258 #i‡!
	`deföed
(
SQLITE_DEFAULT_AUTOVACUUM
)

259 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","deÁu…_autovacuum","0",
TCL_GLOBAL_ONLY
);

261 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "default_autovacuum",

262 
	`STRINGVALUE
(
SQLITE_DEFAULT_AUTOVACUUM
), 
TCL_GLOBAL_ONLY
);

265 #ifde‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


266 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bëwìn_›t", "0", 
TCL_GLOBAL_ONLY
);

268 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bëwìn_›t", "1", 
TCL_GLOBAL_ONLY
);

271 #ifde‡
SQLITE_OMIT_BUILTIN_TEST


272 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "buûtö_ã°", "0", 
TCL_GLOBAL_ONLY
);

274 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "buûtö_ã°", "1", 
TCL_GLOBAL_ONLY
);

277 #ifde‡
SQLITE_OMIT_BLOB_LITERAL


278 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bloblô", "0", 
TCL_GLOBAL_ONLY
);

280 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "bloblô", "1", 
TCL_GLOBAL_ONLY
);

283 #ifde‡
SQLITE_OMIT_CAST


284 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ˇ°", "0", 
TCL_GLOBAL_ONLY
);

286 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ˇ°", "1", 
TCL_GLOBAL_ONLY
);

289 #ifde‡
SQLITE_OMIT_CHECK


290 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "check", "0", 
TCL_GLOBAL_ONLY
);

292 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "check", "1", 
TCL_GLOBAL_ONLY
);

295 #ifde‡
SQLITE_OMIT_CTE


296 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "˘e", "0", 
TCL_GLOBAL_ONLY
);

298 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "˘e", "1", 
TCL_GLOBAL_ONLY
);

301 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


302 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "cﬁumnmëad©a", "1", 
TCL_GLOBAL_ONLY
);

304 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "cﬁumnmëad©a", "0", 
TCL_GLOBAL_ONLY
);

307 #ifde‡
SQLITE_ENABLE_OVERSIZE_CELL_CHECK


308 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "oversize_cell_check", "1",

309 
TCL_GLOBAL_ONLY
);

311 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "oversize_cell_check", "0",

312 
TCL_GLOBAL_ONLY
);

315 #ifde‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


316 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compûe›ti⁄_dügs", "0", 
TCL_GLOBAL_ONLY
);

318 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compûe›ti⁄_dügs", "1", 
TCL_GLOBAL_ONLY
);

321 #ifde‡
SQLITE_OMIT_COMPLETE


322 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "com∂ëe", "0", 
TCL_GLOBAL_ONLY
);

324 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "com∂ëe", "1", 
TCL_GLOBAL_ONLY
);

327 #ifde‡
SQLITE_OMIT_COMPOUND_SELECT


328 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compound", "0", 
TCL_GLOBAL_ONLY
);

330 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "compound", "1", 
TCL_GLOBAL_ONLY
);

333 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "c⁄Êi˘", "1", 
TCL_GLOBAL_ONLY
);

334 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¸ashã°", "1", 
TCL_GLOBAL_ONLY
);

336 #ifde‡
SQLITE_OMIT_DATETIME_FUNCS


337 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "d©ëime", "0", 
TCL_GLOBAL_ONLY
);

339 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "d©ëime", "1", 
TCL_GLOBAL_ONLY
);

342 #ifde‡
SQLITE_OMIT_DECLTYPE


343 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "de˛ty≥", "0", 
TCL_GLOBAL_ONLY
);

345 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "de˛ty≥", "1", 
TCL_GLOBAL_ONLY
);

348 #ifde‡
SQLITE_OMIT_DEPRECATED


349 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dïªˇãd", "0", 
TCL_GLOBAL_ONLY
);

351 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "dïªˇãd", "1", 
TCL_GLOBAL_ONLY
);

354 #ifde‡
SQLITE_OMIT_DISKIO


355 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "diskio", "0", 
TCL_GLOBAL_ONLY
);

357 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "diskio", "1", 
TCL_GLOBAL_ONLY
);

360 #ifde‡
SQLITE_OMIT_EXPLAIN


361 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ex∂aö", "0", 
TCL_GLOBAL_ONLY
);

363 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ex∂aö", "1", 
TCL_GLOBAL_ONLY
);

366 #ifde‡
SQLITE_OMIT_FLOATING_POINT


367 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Êﬂtögpoöt", "0", 
TCL_GLOBAL_ONLY
);

369 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Êﬂtögpoöt", "1", 
TCL_GLOBAL_ONLY
);

372 #ifde‡
SQLITE_OMIT_FOREIGN_KEY


373 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "f‹eignkey", "0", 
TCL_GLOBAL_ONLY
);

375 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "f‹eignkey", "1", 
TCL_GLOBAL_ONLY
);

378 #ifde‡
SQLITE_ENABLE_FTS1


379 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s1", "1", 
TCL_GLOBAL_ONLY
);

381 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s1", "0", 
TCL_GLOBAL_ONLY
);

384 #ifde‡
SQLITE_ENABLE_FTS2


385 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s2", "1", 
TCL_GLOBAL_ONLY
);

387 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s2", "0", 
TCL_GLOBAL_ONLY
);

390 #ifde‡
SQLITE_ENABLE_FTS3


391 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3", "1", 
TCL_GLOBAL_ONLY
);

393 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3", "0", 
TCL_GLOBAL_ONLY
);

396 #ifde‡
SQLITE_ENABLE_FTS5


397 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s5", "1", 
TCL_GLOBAL_ONLY
);

399 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s5", "0", 
TCL_GLOBAL_ONLY
);

402 #i‡
	`deföed
(
SQLITE_ENABLE_FTS3
Ë&& !deföed(
SQLITE_DISABLE_FTS3_UNICODE
)

403 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3_unicode", "1", 
TCL_GLOBAL_ONLY
);

405 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s3_unicode", "0", 
TCL_GLOBAL_ONLY
);

408 #ifde‡
SQLITE_DISABLE_FTS4_DEFERRED


409 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s4_de„ºed", "0", 
TCL_GLOBAL_ONLY
);

411 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "·s4_de„ºed", "1", 
TCL_GLOBAL_ONLY
);

414 #ifde‡
SQLITE_OMIT_GET_TABLE


415 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "gëèbÀ", "0", 
TCL_GLOBAL_ONLY
);

417 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "gëèbÀ", "1", 
TCL_GLOBAL_ONLY
);

420 #ifde‡
SQLITE_ENABLE_ICU


421 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "icu", "1", 
TCL_GLOBAL_ONLY
);

423 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "icu", "0", 
TCL_GLOBAL_ONLY
);

426 #ifde‡
SQLITE_OMIT_INCRBLOB


427 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ö¸blob", "0", 
TCL_GLOBAL_ONLY
);

429 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ö¸blob", "1", 
TCL_GLOBAL_ONLY
);

432 #ifde‡
SQLITE_OMIT_INTEGRITY_CHECK


433 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "0", 
TCL_GLOBAL_ONLY
);

435 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "1", 
TCL_GLOBAL_ONLY
);

438 #i‡
	`deföed
(
SQLITE_DEFAULT_FILE_FORMAT
) && SQLITE_DEFAULT_FILE_FORMAT==1

439 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Àgacyf‹m©", "1", 
TCL_GLOBAL_ONLY
);

441 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "Àgacyf‹m©", "0", 
TCL_GLOBAL_ONLY
);

444 #ifde‡
SQLITE_OMIT_LIKE_OPTIMIZATION


445 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_›t", "0", 
TCL_GLOBAL_ONLY
);

447 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "like_›t", "1", 
TCL_GLOBAL_ONLY
);

450 #ifde‡
SQLITE_OMIT_LOAD_EXTENSION


451 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lﬂd_ext", "0", 
TCL_GLOBAL_ONLY
);

453 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lﬂd_ext", "1", 
TCL_GLOBAL_ONLY
);

456 #ifde‡
SQLITE_OMIT_LOCALTIME


457 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "loˇ…ime", "0", 
TCL_GLOBAL_ONLY
);

459 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "loˇ…ime", "1", 
TCL_GLOBAL_ONLY
);

462 #ifde‡
SQLITE_OMIT_LOOKASIDE


463 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lookaside", "0", 
TCL_GLOBAL_ONLY
);

465 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "lookaside", "1", 
TCL_GLOBAL_ONLY
);

468 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "long_double",

469 (
LONGDOUBLE_TYPE
)>() ? "1" : "0",

470 
TCL_GLOBAL_ONLY
);

472 #ifde‡
SQLITE_OMIT_MEMORYDB


473 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ydb", "0", 
TCL_GLOBAL_ONLY
);

475 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ydb", "1", 
TCL_GLOBAL_ONLY
);

478 #ifde‡
SQLITE_ENABLE_MEMORY_MANAGEMENT


479 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ym™age", "1", 
TCL_GLOBAL_ONLY
);

481 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mem‹ym™age", "0", 
TCL_GLOBAL_ONLY
);

484 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mîges‹t", "1", 
TCL_GLOBAL_ONLY
);

486 #ifde‡
SQLITE_OMIT_OR_OPTIMIZATION


487 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "‹_›t", "0", 
TCL_GLOBAL_ONLY
);

489 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "‹_›t", "1", 
TCL_GLOBAL_ONLY
);

492 #ifde‡
SQLITE_ENABLE_RBU


493 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rbu", "1", 
TCL_GLOBAL_ONLY
);

495 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "rbu", "0", 
TCL_GLOBAL_ONLY
);

498 #ifde‡
SQLITE_OMIT_PAGER_PRAGMAS


499 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑gî_¥agmas", "0", 
TCL_GLOBAL_ONLY
);

501 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "∑gî_¥agmas", "1", 
TCL_GLOBAL_ONLY
);

504 #i‡
	`deföed
(
SQLITE_OMIT_PRAGMA
Ë|| deföed(
SQLITE_OMIT_FLAG_PRAGMAS
)

505 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥agma", "0", 
TCL_GLOBAL_ONLY
);

506 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "öãgrôyck", "0", 
TCL_GLOBAL_ONLY
);

508 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥agma", "1", 
TCL_GLOBAL_ONLY
);

511 #ifde‡
SQLITE_OMIT_PROGRESS_CALLBACK


512 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥ogªss", "0", 
TCL_GLOBAL_ONLY
);

514 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "¥ogªss", "1", 
TCL_GLOBAL_ONLY
);

517 #ifde‡
SQLITE_OMIT_REINDEX


518 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ªödex", "0", 
TCL_GLOBAL_ONLY
);

520 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ªödex", "1", 
TCL_GLOBAL_ONLY
);

523 #ifde‡
SQLITE_ENABLE_RTREE


524 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe", "1", 
TCL_GLOBAL_ONLY
);

526 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe", "0", 
TCL_GLOBAL_ONLY
);

529 #ifde‡
SQLITE_RTREE_INT_ONLY


530 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe_öt_⁄ly", "1", 
TCL_GLOBAL_ONLY
);

532 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "πªe_öt_⁄ly", "0", 
TCL_GLOBAL_ONLY
);

535 #ifde‡
SQLITE_OMIT_SCHEMA_PRAGMAS


536 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_¥agmas", "0", 
TCL_GLOBAL_ONLY
);

538 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_¥agmas", "1", 
TCL_GLOBAL_ONLY
);

541 #ifde‡
SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS


542 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_vîsi⁄", "0", 
TCL_GLOBAL_ONLY
);

544 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "schema_vîsi⁄", "1", 
TCL_GLOBAL_ONLY
);

547 #ifde‡
SQLITE_ENABLE_SESSION


548 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£ssi⁄", "1", 
TCL_GLOBAL_ONLY
);

550 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£ssi⁄", "0", 
TCL_GLOBAL_ONLY
);

553 #ifde‡
SQLITE_ENABLE_STAT4


554 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©4", "1", 
TCL_GLOBAL_ONLY
);

556 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©4", "0", 
TCL_GLOBAL_ONLY
);

558 #i‡
	`deföed
(
SQLITE_ENABLE_STAT3
Ë&& !deföed(
SQLITE_ENABLE_STAT4
)

559 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©3", "1", 
TCL_GLOBAL_ONLY
);

561 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "°©3", "0", 
TCL_GLOBAL_ONLY
);

564 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


565 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sˇn°©us", "1", 
TCL_GLOBAL_ONLY
);

567 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sˇn°©us", "0", 
TCL_GLOBAL_ONLY
);

570 #i‡!
	`deföed
(
SQLITE_ENABLE_LOCKING_STYLE
)

571 #i‡
	`deföed
(
__APPLE__
)

572 
	#SQLITE_ENABLE_LOCKING_STYLE
 1

	)

574 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

577 #i‡
SQLITE_ENABLE_LOCKING_STYLE
 && 
	`deföed
(
__APPLE__
)

578 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","lock_¥oxy_¥agmas","1",
TCL_GLOBAL_ONLY
);

580 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","lock_¥oxy_¥agmas","0",
TCL_GLOBAL_ONLY
);

582 #i‡
	`deföed
(
SQLITE_PREFER_PROXY_LOCKING
Ë&& deföed(
__APPLE__
)

583 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","¥e„r_¥oxy_lockög","1",
TCL_GLOBAL_ONLY
);

585 
	`T˛_SëV¨2
(
öãΩ
,"sqlôe_›ti⁄s","¥e„r_¥oxy_lockög","0",
TCL_GLOBAL_ONLY
);

589 #ifde‡
SQLITE_OMIT_SHARED_CACHE


590 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sh¨ed_ˇche", "0", 
TCL_GLOBAL_ONLY
);

592 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sh¨ed_ˇche", "1", 
TCL_GLOBAL_ONLY
);

595 #ifde‡
SQLITE_OMIT_SUBQUERY


596 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "subquîy", "0", 
TCL_GLOBAL_ONLY
);

598 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "subquîy", "1", 
TCL_GLOBAL_ONLY
);

601 #ifde‡
SQLITE_OMIT_TCL_VARIABLE


602 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "t˛v¨", "0", 
TCL_GLOBAL_ONLY
);

604 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "t˛v¨", "1", 
TCL_GLOBAL_ONLY
);

607 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe",

608 
SQLITE_THREADSAFE
 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

609 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe1",

610 
SQLITE_THREADSAFE
==1 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

611 
	`T˛_SëV¨2
(
öãΩ
, "sqlite_options", "threadsafe2",

612 
SQLITE_THREADSAFE
==2 ? "1" : "0", 
TCL_GLOBAL_ONLY
);

613 
	`as£π
–
	`sqlôe3_thªadß„
()==
SQLITE_THREADSAFE
 );

615 #ifde‡
SQLITE_OMIT_TEMPDB


616 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ãmpdb", "0", 
TCL_GLOBAL_ONLY
);

618 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "ãmpdb", "1", 
TCL_GLOBAL_ONLY
);

621 #ifde‡
SQLITE_OMIT_TRACE


622 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åa˚", "0", 
TCL_GLOBAL_ONLY
);

624 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åa˚", "1", 
TCL_GLOBAL_ONLY
);

627 #ifde‡
SQLITE_OMIT_TRIGGER


628 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åiggî", "0", 
TCL_GLOBAL_ONLY
);

630 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åiggî", "1", 
TCL_GLOBAL_ONLY
);

633 #ifde‡
SQLITE_OMIT_TRUNCATE_OPTIMIZATION


634 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åunˇã_›t", "0", 
TCL_GLOBAL_ONLY
);

636 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "åunˇã_›t", "1", 
TCL_GLOBAL_ONLY
);

639 #ifde‡
SQLITE_OMIT_UTF16


640 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "utf16", "0", 
TCL_GLOBAL_ONLY
);

642 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "utf16", "1", 
TCL_GLOBAL_ONLY
);

645 #i‡
	`deföed
(
SQLITE_OMIT_VACUUM
Ë|| deföed(
SQLITE_OMIT_ATTACH
)

646 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vacuum", "0", 
TCL_GLOBAL_ONLY
);

648 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vacuum", "1", 
TCL_GLOBAL_ONLY
);

651 #ifde‡
SQLITE_OMIT_VIEW


652 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "võw", "0", 
TCL_GLOBAL_ONLY
);

654 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "võw", "1", 
TCL_GLOBAL_ONLY
);

657 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


658 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vèb", "0", 
TCL_GLOBAL_ONLY
);

660 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "vèb", "1", 
TCL_GLOBAL_ONLY
);

663 #ifde‡
SQLITE_OMIT_WAL


664 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wÆ", "0", 
TCL_GLOBAL_ONLY
);

666 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wÆ", "1", 
TCL_GLOBAL_ONLY
);

669 #ifde‡
SQLITE_OMIT_WSD


670 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wsd", "0", 
TCL_GLOBAL_ONLY
);

672 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "wsd", "1", 
TCL_GLOBAL_ONLY
);

675 #i‡
	`deföed
(
SQLITE_ENABLE_UPDATE_DELETE_LIMIT
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

676 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "upd©e_dñëe_limô", "1", 
TCL_GLOBAL_ONLY
);

678 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "upd©e_dñëe_limô", "0", 
TCL_GLOBAL_ONLY
);

681 #i‡
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

682 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u∆ock_nŸify", "1", 
TCL_GLOBAL_ONLY
);

684 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u∆ock_nŸify", "0", 
TCL_GLOBAL_ONLY
);

687 #ifde‡
SQLITE_SECURE_DELETE


688 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£cuª_dñëe", "1", 
TCL_GLOBAL_ONLY
);

690 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "£cuª_dñëe", "0", 
TCL_GLOBAL_ONLY
);

693 #ifde‡
SQLITE_USER_AUTHENTICATION


694 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u£øuth", "1", 
TCL_GLOBAL_ONLY
);

696 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "u£øuth", "0", 
TCL_GLOBAL_ONLY
);

699 #ifde‡
SQLITE_MULTIPLEX_EXT_OVWR


700 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mu…ùÀx_ext_ovîwrôe", "1", 
TCL_GLOBAL_ONLY
);

702 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "mu…ùÀx_ext_ovîwrôe", "0", 
TCL_GLOBAL_ONLY
);

705 #ifde‡
YYTRACKMAXSTACKDEPTH


706 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "yyåackmax°ackdïth", "1", 
TCL_GLOBAL_ONLY
);

708 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "yyåackmax°ackdïth", "0", 
TCL_GLOBAL_ONLY
);

711 #ifde‡
SQLITE_ENABLE_SQLLOG


712 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sqŒog", "1", 
TCL_GLOBAL_ONLY
);

714 
	`T˛_SëV¨2
(
öãΩ
, "sqlôe_›ti⁄s", "sqŒog", "0", 
TCL_GLOBAL_ONLY
);

717 
	#LINKVAR
(
x
) { \

718 c⁄° 
cv_
 ## 
x
 = 
SQLITE_
 ## x; \

719 
	`T˛_LökV¨
(
öãΩ
, "SQLITE_" #x, (*)&(
cv_
 ## 
x
), \

720 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
); }

	)

722 
	`LINKVAR
–
MAX_LENGTH
 );

723 
	`LINKVAR
–
MAX_COLUMN
 );

724 
	`LINKVAR
–
MAX_SQL_LENGTH
 );

725 
	`LINKVAR
–
MAX_EXPR_DEPTH
 );

726 
	`LINKVAR
–
MAX_COMPOUND_SELECT
 );

727 
	`LINKVAR
–
MAX_VDBE_OP
 );

728 
	`LINKVAR
–
MAX_FUNCTION_ARG
 );

729 
	`LINKVAR
–
MAX_VARIABLE_NUMBER
 );

730 
	`LINKVAR
–
MAX_PAGE_SIZE
 );

731 
	`LINKVAR
–
MAX_PAGE_COUNT
 );

732 
	`LINKVAR
–
MAX_LIKE_PATTERN_LENGTH
 );

733 
	`LINKVAR
–
MAX_TRIGGER_DEPTH
 );

734 
	`LINKVAR
–
DEFAULT_CACHE_SIZE
 );

735 
	`LINKVAR
–
DEFAULT_PAGE_SIZE
 );

736 
	`LINKVAR
–
DEFAULT_FILE_FORMAT
 );

737 
	`LINKVAR
–
MAX_ATTACHED
 );

738 
	`LINKVAR
–
MAX_DEFAULT_PAGE_SIZE
 );

739 
	`LINKVAR
–
MAX_WORKER_THREADS
 );

742 c⁄° 
cv_TEMP_STORE
 = 
SQLITE_TEMP_STORE
;

743 
	`T˛_LökV¨
(
öãΩ
, "TEMP_STORE", (*)&(
cv_TEMP_STORE
),

744 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

747 #ifde‡
_MSC_VER


749 c⁄° 
cv__MSC_VER
 = 1;

750 
	`T˛_LökV¨
(
öãΩ
, "_MSC_VER", (*)&(
cv__MSC_VER
),

751 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

754 #ifde‡
__GNUC__


756 c⁄° 
cv___GNUC__
 = 1;

757 
	`T˛_LökV¨
(
öãΩ
, "__GNUC__", (*)&(
cv___GNUC__
),

758 
TCL_LINK_INT
 | 
TCL_LINK_READ_ONLY
);

761 
	}
}

767 
	$Sqlôec⁄fig_Inô
(
T˛_I¡îp
 *
öãΩ
){

768 
	`£t_›ti⁄s
(
öãΩ
);

769  
TCL_OK
;

770 
	}
}

	@test_demovfs.c

116 #i‡!
deföed
(
SQLITE_TEST
Ë|| 
SQLITE_OS_UNIX


118 
	~"sqlôe3.h
"

120 
	~<as£π.h
>

121 
	~<°rög.h
>

122 
	~<sys/ty≥s.h
>

123 
	~<sys/°©.h
>

124 
	~<sys/fûe.h
>

125 
	~<sys/∑øm.h
>

126 
	~<uni°d.h
>

127 
	~<time.h
>

128 
	~<î∫o.h
>

129 
	~<f˙é.h
>

134 #i‚de‡
SQLITE_DEMOVFS_BUFFERSZ


135 
	#SQLITE_DEMOVFS_BUFFERSZ
 8192

	)

141 
	#MAXPATHNAME
 512

	)

147 
DemoFûe
 
	tDemoFûe
;

148 
	sDemoFûe
 {

149 
sqlôe3_fûe
 
	mba£
;

150 
	mfd
;

152 *
	maBuf„r
;

153 
	mnBuf„r
;

154 
sqlôe3_öt64
 
	miBuf„rOf°
;

161 
	$demoDúe˘Wrôe
(

162 
DemoFûe
 *
p
,

163 c⁄° *
zBuf
,

164 
iAmt
,

165 
sqlôe_öt64
 
iOf°


167 
off_t
 
of°
;

168 
size_t
 
nWrôe
;

170 
of°
 = 
	`l£ek
(
p
->
fd
, 
iOf°
, 
SEEK_SET
);

171 if–
of°
!=
iOf°
 ){

172  
SQLITE_IOERR_WRITE
;

175 
nWrôe
 = 
	`wrôe
(
p
->
fd
, 
zBuf
, 
iAmt
);

176 if–
nWrôe
!=
iAmt
 ){

177  
SQLITE_IOERR_WRITE
;

180  
SQLITE_OK
;

181 
	}
}

188 
	$demoFlushBuf„r
(
DemoFûe
 *
p
){

189 
rc
 = 
SQLITE_OK
;

190 if–
p
->
nBuf„r
 ){

191 
rc
 = 
	`demoDúe˘Wrôe
(
p
,Ö->
aBuf„r
,Ö->
nBuf„r
,Ö->
iBuf„rOf°
);

192 
p
->
nBuf„r
 = 0;

194  
rc
;

195 
	}
}

200 
	$demoClo£
(
sqlôe3_fûe
 *
pFûe
){

201 
rc
;

202 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

203 
rc
 = 
	`demoFlushBuf„r
(
p
);

204 
	`sqlôe3_‰ì
(
p
->
aBuf„r
);

205 
	`˛o£
(
p
->
fd
);

206  
rc
;

207 
	}
}

212 
	$demoRód
(

213 
sqlôe3_fûe
 *
pFûe
,

214 *
zBuf
,

215 
iAmt
,

216 
sqlôe_öt64
 
iOf°


218 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

219 
off_t
 
of°
;

220 
nRód
;

221 
rc
;

229 
rc
 = 
	`demoFlushBuf„r
(
p
);

230 if–
rc
!=
SQLITE_OK
 ){

231  
rc
;

234 
of°
 = 
	`l£ek
(
p
->
fd
, 
iOf°
, 
SEEK_SET
);

235 if–
of°
!=
iOf°
 ){

236  
SQLITE_IOERR_READ
;

238 
nRód
 = 
	`ªad
(
p
->
fd
, 
zBuf
, 
iAmt
);

240 if–
nRód
==
iAmt
 ){

241  
SQLITE_OK
;

242 }if–
nRód
>=0 ){

243  
SQLITE_IOERR_SHORT_READ
;

246  
SQLITE_IOERR_READ
;

247 
	}
}

252 
	$demoWrôe
(

253 
sqlôe3_fûe
 *
pFûe
,

254 c⁄° *
zBuf
,

255 
iAmt
,

256 
sqlôe_öt64
 
iOf°


258 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

260 if–
p
->
aBuf„r
 ){

261 *
z
 = (*)
zBuf
;

262 
n
 = 
iAmt
;

263 
sqlôe3_öt64
 
i
 = 
iOf°
;

265  
n
>0 ){

266 
nC›y
;

272 if–
p
->
nBuf„r
==
SQLITE_DEMOVFS_BUFFERSZ
 ||Ö->
iBuf„rOf°
+p->nBuf„r!=
i
 ){

273 
rc
 = 
	`demoFlushBuf„r
(
p
);

274 if–
rc
!=
SQLITE_OK
 ){

275  
rc
;

278 
	`as£π
–
p
->
nBuf„r
==0 ||Ö->
iBuf„rOf°
+p->nBuf„r==
i
 );

279 
p
->
iBuf„rOf°
 = 
i
 -Ö->
nBuf„r
;

282 
nC›y
 = 
SQLITE_DEMOVFS_BUFFERSZ
 - 
p
->
nBuf„r
;

283 if–
nC›y
>
n
 ){

284 
nC›y
 = 
n
;

286 
	`mem˝y
(&
p
->
aBuf„r
[p->
nBuf„r
], 
z
, 
nC›y
);

287 
p
->
nBuf„r
 +
nC›y
;

289 
n
 -
nC›y
;

290 
i
 +
nC›y
;

291 
z
 +
nC›y
;

294  
	`demoDúe˘Wrôe
(
p
, 
zBuf
, 
iAmt
, 
iOf°
);

297  
SQLITE_OK
;

298 
	}
}

304 
	$demoTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

306 if–
	`·runˇã
(((
DemoFûe
 *)
pFûe
)->
fd
, 
size
ËË 
SQLITE_IOERR_TRUNCATE
;

308  
SQLITE_OK
;

309 
	}
}

314 
	$demoSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

315 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

316 
rc
;

318 
rc
 = 
	`demoFlushBuf„r
(
p
);

319 if–
rc
!=
SQLITE_OK
 ){

320  
rc
;

323 
rc
 = 
	`fsync
(
p
->
fd
);

324  (
rc
==0 ? 
SQLITE_OK
 : 
SQLITE_IOERR_FSYNC
);

325 
	}
}

330 
	$demoFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

331 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

332 
rc
;

333 
°©
 
sSèt
;

340 
rc
 = 
	`demoFlushBuf„r
(
p
);

341 if–
rc
!=
SQLITE_OK
 ){

342  
rc
;

345 
rc
 = 
	`f°©
(
p
->
fd
, &
sSèt
);

346 if–
rc
!=0 )  
SQLITE_IOERR_FSTAT
;

347 *
pSize
 = 
sSèt
.
°_size
;

348  
SQLITE_OK
;

349 
	}
}

357 
	$demoLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

358  
SQLITE_OK
;

359 
	}
}

360 
	$demoU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

361  
SQLITE_OK
;

362 
	}
}

363 
	$demoCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

364 *
pResOut
 = 0;

365  
SQLITE_OK
;

366 
	}
}

371 
	$demoFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

372  
SQLITE_OK
;

373 
	}
}

380 
	$demoSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

382 
	}
}

383 
	$demoDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

385 
	}
}

390 
	$demoO≥n
(

391 
sqlôe3_vfs
 *
pVfs
,

392 c⁄° *
zName
,

393 
sqlôe3_fûe
 *
pFûe
,

394 
Êags
,

395 *
pOutFœgs


397 c⁄° 
sqlôe3_io_mëhods
 
demoio
 = {

399 
demoClo£
,

400 
demoRód
,

401 
demoWrôe
,

402 
demoTrunˇã
,

403 
demoSync
,

404 
demoFûeSize
,

405 
demoLock
,

406 
demoU∆ock
,

407 
demoCheckRe£rvedLock
,

408 
demoFûeC⁄åﬁ
,

409 
demoSe˘‹Size
,

410 
demoDevi˚Ch¨a˘îi°ics


413 
DemoFûe
 *
p
 = (DemoFûe*)
pFûe
;

414 
oÊags
 = 0;

415 *
aBuf
 = 0;

417 if–
zName
==0 ){

418  
SQLITE_IOERR
;

421 if–
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

422 
aBuf
 = (*)
	`sqlôe3_mÆloc
(
SQLITE_DEMOVFS_BUFFERSZ
);

423 if–!
aBuf
 ){

424  
SQLITE_NOMEM
;

428 if–
Êags
&
SQLITE_OPEN_EXCLUSIVE
 ) 
oÊags
 |
O_EXCL
;

429 if–
Êags
&
SQLITE_OPEN_CREATE
 ) 
oÊags
 |
O_CREAT
;

430 if–
Êags
&
SQLITE_OPEN_READONLY
 ) 
oÊags
 |
O_RDONLY
;

431 if–
Êags
&
SQLITE_OPEN_READWRITE
 ) 
oÊags
 |
O_RDWR
;

433 
	`mem£t
(
p
, 0, (
DemoFûe
));

434 
p
->
fd
 = 
	`›í
(
zName
, 
oÊags
, 0600);

435 if–
p
->
fd
<0 ){

436 
	`sqlôe3_‰ì
(
aBuf
);

437  
SQLITE_CANTOPEN
;

439 
p
->
aBuf„r
 = 
aBuf
;

441 if–
pOutFœgs
 ){

442 *
pOutFœgs
 = 
Êags
;

444 
p
->
ba£
.
pMëhods
 = &
demoio
;

445  
SQLITE_OK
;

446 
	}
}

453 
	$demoDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

454 
rc
;

456 
rc
 = 
	`u∆ök
(
zP©h
);

457 if–
rc
!=0 && 
î∫o
==
ENOENT
 )  
SQLITE_OK
;

459 if–
rc
==0 && 
dúSync
 ){

460 
dfd
;

461 
i
;

462 
zDú
[
MAXPATHNAME
+1];

465 
	`sqlôe3_¢¥ötf
(
MAXPATHNAME
, 
zDú
, "%s", 
zP©h
);

466 
zDú
[
MAXPATHNAME
] = '\0';

467 
i
=
	`°æí
(
zDú
); i>1 && zDir[i]!='/'; i++);

468 
zDú
[
i
] = '\0';

471 
dfd
 = 
	`›í
(
zDú
, 
O_RDONLY
, 0);

472 if–
dfd
<0 ){

473 
rc
 = -1;

475 
rc
 = 
	`fsync
(
dfd
);

476 
	`˛o£
(
dfd
);

479  (
rc
==0 ? 
SQLITE_OK
 : 
SQLITE_IOERR_DELETE
);

480 
	}
}

482 #i‚de‡
F_OK


483 
	#F_OK
 0

	)

485 #i‚de‡
R_OK


486 
	#R_OK
 4

	)

488 #i‚de‡
W_OK


489 
	#W_OK
 2

	)

496 
	$demoAc˚ss
(

497 
sqlôe3_vfs
 *
pVfs
,

498 c⁄° *
zP©h
,

499 
Êags
,

500 *
pResOut


502 
rc
;

503 
eAc˚ss
 = 
F_OK
;

505 
	`as£π
–
Êags
==
SQLITE_ACCESS_EXISTS


506 || 
Êags
==
SQLITE_ACCESS_READ


507 || 
Êags
==
SQLITE_ACCESS_READWRITE


510 if–
Êags
==
SQLITE_ACCESS_READWRITE
 ) 
eAc˚ss
 = 
R_OK
|
W_OK
;

511 if–
Êags
==
SQLITE_ACCESS_READ
 ) 
eAc˚ss
 = 
R_OK
;

513 
rc
 = 
	`ac˚ss
(
zP©h
, 
eAc˚ss
);

514 *
pResOut
 = (
rc
==0);

515  
SQLITE_OK
;

516 
	}
}

529 
	$demoFuŒP©h«me
(

530 
sqlôe3_vfs
 *
pVfs
,

531 c⁄° *
zP©h
,

532 
nP©hOut
,

533 *
zP©hOut


535 
zDú
[
MAXPATHNAME
+1];

536 if–
zP©h
[0]=='/' ){

537 
zDú
[0] = '\0';

539 if–
	`gëcwd
(
zDú
, (zDú))==0 )  
SQLITE_IOERR
;

541 
zDú
[
MAXPATHNAME
] = '\0';

543 
	`sqlôe3_¢¥ötf
(
nP©hOut
, 
zP©hOut
, "%s/%s", 
zDú
, 
zP©h
);

544 
zP©hOut
[
nP©hOut
-1] = '\0';

546  
SQLITE_OK
;

547 
	}
}

561 *
	$demoDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

563 
	}
}

564 
	$demoDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

565 
	`sqlôe3_¢¥ötf
(
nByã
, 
zEºMsg
, "LoadableÉxtensionsáreÇot supported");

566 
zEºMsg
[
nByã
-1] = '\0';

567 
	}
}

568 (*
	$demoDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pH
, c⁄° *
z
))(){

570 
	}
}

571 
	$demoDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

573 
	}
}

579 
	$demoR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zByã
){

580  
SQLITE_OK
;

581 
	}
}

587 
	$demoSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

588 
	`¶ìp
(
nMi¸o
 / 1000000);

589 
	`u¶ìp
(
nMi¸o
 % 1000000);

590  
nMi¸o
;

591 
	}
}

604 
	$demoCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTime
){

605 
time_t
 
t
 = 
	`time
(0);

606 *
pTime
 = 
t
/86400.0 + 2440587.5;

607  
SQLITE_OK
;

608 
	}
}

616 
sqlôe3_vfs
 *
	$sqlôe3_demovfs
(){

617 
sqlôe3_vfs
 
demovfs
 = {

619 (
DemoFûe
),

620 
MAXPATHNAME
,

624 
demoO≥n
,

625 
demoDñëe
,

626 
demoAc˚ss
,

627 
demoFuŒP©h«me
,

628 
demoDlO≥n
,

629 
demoDlEº‹
,

630 
demoDlSym
,

631 
demoDlClo£
,

632 
demoR™dom√ss
,

633 
demoSÀï
,

634 
demoCuºítTime
,

636  &
demovfs
;

637 
	}
}

642 #ifde‡
SQLITE_TEST


644 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

645 
	~"sqlôe_t˛.h
"

647 
	~"t˛.h
"

648 #i‚de‡
SQLITE_TCLAPI


649 
	#SQLITE_TCLAPI


	)

653 #i‡
SQLITE_OS_UNIX


654 
SQLITE_TCLAPI
 
	$ªgi°î_demovfs
(

655 
Clõ¡D©a
 
˛õ¡D©a
,

656 
T˛_I¡îp
 *
öãΩ
,

657 
objc
,

658 
T˛_Obj
 *
CONST
 
objv
[]

660 
	`sqlôe3_vfs_ªgi°î
(
	`sqlôe3_demovfs
(), 1);

661  
TCL_OK
;

662 
	}
}

663 
SQLITE_TCLAPI
 
	$uƒegi°î_demovfs
(

664 
Clõ¡D©a
 
˛õ¡D©a
,

665 
T˛_I¡îp
 *
öãΩ
,

666 
objc
,

667 
T˛_Obj
 *
CONST
 
objv
[]

669 
	`sqlôe3_vfs_uƒegi°î
(
	`sqlôe3_demovfs
());

670  
TCL_OK
;

671 
	}
}

676 
	$Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *
öãΩ
){

677 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_demovfs", 
ªgi°î_demovfs
, 0, 0);

678 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "uƒegi°î_demovfs", 
uƒegi°î_demovfs
, 0, 0);

679  
TCL_OK
;

680 
	}
}

683 
	$Sqlôëe°_demovfs_Inô
(
T˛_I¡îp
 *
öãΩ
){  
TCL_OK
; 
	}
}

	@test_devsym.c

17 #i‡
SQLITE_TEST


19 
	~"sqlôe3.h
"

20 
	~"sqlôeI¡.h
"

25 
	#DEVSYM_MAX_PATHNAME
 512

	)

30 
	#DEVSYM_VFS_NAME
 "devsym"

	)

32 
devsym_fûe
 
	tdevsym_fûe
;

33 
	sdevsym_fûe
 {

34 
sqlôe3_fûe
 
	mba£
;

35 
sqlôe3_fûe
 *
	mpRól
;

41 
devsymClo£
(
sqlôe3_fûe
*);

42 
devsymRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

43 
devsymWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

44 
devsymTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

45 
devsymSync
(
sqlôe3_fûe
*, 
Êags
);

46 
devsymFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

47 
devsymLock
(
sqlôe3_fûe
*, );

48 
devsymU∆ock
(
sqlôe3_fûe
*, );

49 
devsymCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

50 
devsymFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

51 
devsymSe˘‹Size
(
sqlôe3_fûe
*);

52 
devsymDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

53 
devsymShmLock
(
sqlôe3_fûe
*,,,);

54 
devsymShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

55 
devsymShmB¨rõr
(
sqlôe3_fûe
*);

56 
devsymShmUnm≠
(
sqlôe3_fûe
*,);

61 
devsymO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

62 
devsymDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

63 
devsymAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

64 
devsymFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

65 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


66 *
devsymDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

67 
devsymDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

68 (*
	$devsymDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

69 
	`devsymDlClo£
(
sqlôe3_vfs
*, *);

71 
	`devsymR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

72 
	`devsymSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

73 
	`devsymCuºítTime
(
sqlôe3_vfs
*, *);

75 
sqlôe3_vfs
 
devsym_vfs
 = {

77 (
devsym_fûe
),

78 
DEVSYM_MAX_PATHNAME
,

80 
DEVSYM_VFS_NAME
,

82 
devsymO≥n
,

83 
devsymDñëe
,

84 
devsymAc˚ss
,

85 
devsymFuŒP©h«me
,

86 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


87 
devsymDlO≥n
,

88 
devsymDlEº‹
,

89 
devsymDlSym
,

90 
devsymDlClo£
,

97 
devsymR™dom√ss
,

98 
devsymSÀï
,

99 
devsymCuºítTime
,

102 
	}
};

104 
sqlôe3_io_mëhods
 
	gdevsym_io_mëhods
 = {

106 
devsymClo£
,

107 
devsymRód
,

108 
devsymWrôe
,

109 
devsymTrunˇã
,

110 
devsymSync
,

111 
devsymFûeSize
,

112 
devsymLock
,

113 
devsymU∆ock
,

114 
devsymCheckRe£rvedLock
,

115 
devsymFûeC⁄åﬁ
,

116 
devsymSe˘‹Size
,

117 
devsymDevi˚Ch¨a˘îi°ics
,

118 
devsymShmM≠
,

119 
devsymShmLock
,

120 
devsymShmB¨rõr
,

121 
devsymShmUnm≠


124 
	sDevsymGlobÆ
 {

125 
sqlôe3_vfs
 *
	mpVfs
;

126 
	miDevi˚Ch¨
;

127 
	miSe˘‹Size
;

129 
DevsymGlobÆ
 
	gg
 = {0, 0, 512};

134 
	$devsymClo£
(
sqlôe3_fûe
 *
pFûe
){

135 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

136 
	`sqlôe3OsClo£
(
p
->
pRól
);

137  
SQLITE_OK
;

138 
	}
}

143 
	$devsymRód
(

144 
sqlôe3_fûe
 *
pFûe
,

145 *
zBuf
,

146 
iAmt
,

147 
sqlôe_öt64
 
iOf°


149 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

150  
	`sqlôe3OsRód
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

151 
	}
}

156 
	$devsymWrôe
(

157 
sqlôe3_fûe
 *
pFûe
,

158 c⁄° *
zBuf
,

159 
iAmt
,

160 
sqlôe_öt64
 
iOf°


162 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

163  
	`sqlôe3OsWrôe
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

164 
	}
}

169 
	$devsymTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

170 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

171  
	`sqlôe3OsTrunˇã
(
p
->
pRól
, 
size
);

172 
	}
}

177 
	$devsymSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

178 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

179  
	`sqlôe3OsSync
(
p
->
pRól
, 
Êags
);

180 
	}
}

185 
	$devsymFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

186 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

187  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

188 
	}
}

193 
	$devsymLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

194 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

195  
	`sqlôe3OsLock
(
p
->
pRól
, 
eLock
);

196 
	}
}

201 
	$devsymU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

202 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

203  
	`sqlôe3OsU∆ock
(
p
->
pRól
, 
eLock
);

204 
	}
}

209 
	$devsymCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

210 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

211  
	`sqlôe3OsCheckRe£rvedLock
(
p
->
pRól
, 
pResOut
);

212 
	}
}

217 
	$devsymFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

218 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

219  
	`sqlôe3OsFûeC⁄åﬁ
(
p
->
pRól
, 
›
, 
pArg
);

220 
	}
}

225 
	$devsymSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

226  
g
.
iSe˘‹Size
;

227 
	}
}

232 
	$devsymDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

233  
g
.
iDevi˚Ch¨
;

234 
	}
}

239 
	$devsymShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

240 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

241  
	`sqlôe3OsShmLock
(
p
->
pRól
, 
of°
, 
n
, 
Êags
);

242 
	}
}

243 
	$devsymShmM≠
(

244 
sqlôe3_fûe
 *
pFûe
,

245 
iRegi⁄
,

246 
szRegi⁄
,

247 
isWrôe
,

248 vﬁ©ûê**
µ


250 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

251  
	`sqlôe3OsShmM≠
(
p
->
pRól
, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

252 
	}
}

253 
	$devsymShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

254 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

255 
	`sqlôe3OsShmB¨rõr
(
p
->
pRól
);

256 
	}
}

257 
	$devsymShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

258 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

259  
	`sqlôe3OsShmUnm≠
(
p
->
pRól
, 
dñFœg
);

260 
	}
}

267 
	$devsymO≥n
(

268 
sqlôe3_vfs
 *
pVfs
,

269 c⁄° *
zName
,

270 
sqlôe3_fûe
 *
pFûe
,

271 
Êags
,

272 *
pOutFœgs


274 
rc
;

275 
devsym_fûe
 *
p
 = (devsym_fûê*)
pFûe
;

276 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

277 
rc
 = 
	`sqlôe3OsO≥n
(
g
.
pVfs
, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

278 if–
p
->
pRól
->
pMëhods
 ){

279 
pFûe
->
pMëhods
 = &
devsym_io_mëhods
;

281  
rc
;

282 
	}
}

289 
	$devsymDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

290  
	`sqlôe3OsDñëe
(
g
.
pVfs
, 
zP©h
, 
dúSync
);

291 
	}
}

297 
	$devsymAc˚ss
(

298 
sqlôe3_vfs
 *
pVfs
,

299 c⁄° *
zP©h
,

300 
Êags
,

301 *
pResOut


303  
	`sqlôe3OsAc˚ss
(
g
.
pVfs
, 
zP©h
, 
Êags
, 
pResOut
);

304 
	}
}

311 
	$devsymFuŒP©h«me
(

312 
sqlôe3_vfs
 *
pVfs
,

313 c⁄° *
zP©h
,

314 
nOut
,

315 *
zOut


317  
	`sqlôe3OsFuŒP©h«me
(
g
.
pVfs
, 
zP©h
, 
nOut
, 
zOut
);

318 
	}
}

320 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


324 *
	$devsymDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

325  
	`sqlôe3OsDlO≥n
(
g
.
pVfs
, 
zP©h
);

326 
	}
}

333 
	$devsymDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

334 
	`sqlôe3OsDlEº‹
(
g
.
pVfs
, 
nByã
, 
zEºMsg
);

335 
	}
}

340 (*
	$devsymDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

341  
	`sqlôe3OsDlSym
(
g
.
pVfs
, 
p
, 
zSym
);

342 
	}
}

347 
	$devsymDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

348 
	`sqlôe3OsDlClo£
(
g
.
pVfs
, 
pH™dÀ
);

349 
	}
}

356 
	$devsymR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

357  
	`sqlôe3OsR™dom√ss
(
g
.
pVfs
, 
nByã
, 
zBufOut
);

358 
	}
}

364 
	$devsymSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

365  
	`sqlôe3OsSÀï
(
g
.
pVfs
, 
nMi¸o
);

366 
	}
}

371 
	$devsymCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

372  
g
.
pVfs
->
	`xCuºítTime
(g.pVfs, 
pTimeOut
);

373 
	}
}

381 
	$devsym_ªgi°î
(
iDevi˚Ch¨
, 
iSe˘‹Size
){

382 if–
g
.
pVfs
==0 ){

383 
g
.
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

384 
devsym_vfs
.
szOsFûe
 +
g
.
pVfs
->szOsFile;

385 
	`sqlôe3_vfs_ªgi°î
(&
devsym_vfs
, 0);

387 if–
iDevi˚Ch¨
>=0 ){

388 
g
.
iDevi˚Ch¨
 = iDeviceChar;

390 
g
.
iDevi˚Ch¨
 = 0;

392 if–
iSe˘‹Size
>=0 ){

393 
g
.
iSe˘‹Size
 = iSectorSize;

395 
g
.
iSe˘‹Size
 = 512;

397 
	}
}

399 
	$devsym_uƒegi°î
(){

400 
	`sqlôe3_vfs_uƒegi°î
(&
devsym_vfs
);

401 
g
.
pVfs
 = 0;

402 
g
.
iDevi˚Ch¨
 = 0;

403 
g
.
iSe˘‹Size
 = 0;

404 
	}
}

	@test_fs.c

64 
	~"sqlôeI¡.h
"

65 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

66 
	~"sqlôe_t˛.h
"

68 
	~"t˛.h
"

71 
	~<°dlib.h
>

72 
	~<°rög.h
>

73 
	~<sys/ty≥s.h
>

74 
	~<sys/°©.h
>

75 
	~<f˙é.h
>

77 #i‡
SQLITE_OS_UNIX
 || 
deföed
(
__MINGW_H
)

78 
	~<uni°d.h
>

79 
	~<dúít.h
>

80 #i‚de‡
DIRENT


81 
	#DIRENT
 
dúít


	)

84 #i‡
SQLITE_OS_WIN


85 
	~<io.h
>

86 #i‡!
deföed
(
__MINGW_H
)

87 
	~"ã°_wödúít.h
"

89 #i‚de‡
S_ISREG


90 
	#S_ISREG
(
mode
Ë(((modeË& 
S_IFMT
Ë=
S_IFREG
)

	)

94 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


96 
fs_vèb
 
	tfs_vèb
;

97 
fs_curs‹
 
	tfs_curs‹
;

102 
	sfs_vèb
 {

103 
sqlôe3_vèb
 
	mba£
;

104 
sqlôe3
 *
	mdb
;

105 *
	mzDb
;

106 *
	mzTbl
;

110 
	sfs_curs‹
 {

111 
sqlôe3_vèb_curs‹
 
	mba£
;

112 
sqlôe3_°mt
 *
	mpStmt
;

113 *
	mzBuf
;

114 
	mnBuf
;

115 
	mnAŒoc
;

121 
FsdúVèb
 
	tFsdúVèb
;

122 
FsdúC§
 
	tFsdúC§
;

123 
	sFsdúVèb
 {

124 
sqlôe3_vèb
 
	mba£
;

127 
	sFsdúC§
 {

128 
sqlôe3_vèb_curs‹
 
	mba£
;

129 *
	mzDú
;

130 
DIR
 *
	mpDú
;

131 
sqlôe3_öt64
 
	miRowid
;

132 
DIRENT
 
	míåy
;

146 
	$fsdúC⁄√˘
(

147 
sqlôe3
 *
db
,

148 *
pAux
,

149 
¨gc
, c⁄° *c⁄°*
¨gv
,

150 
sqlôe3_vèb
 **
µVèb
,

151 **
pzEº


153 
FsdúVèb
 *
pTab
;

155 if–
¨gc
!=3 ){

156 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

157  
SQLITE_ERROR
;

160 
pTab
 = (
FsdúVèb
 *)
	`sqlôe3_mÆloc
((FsdirVtab));

161 if–!
pTab
 )  
SQLITE_NOMEM
;

162 
	`mem£t
(
pTab
, 0, (
FsdúVèb
));

164 *
µVèb
 = &
pTab
->
ba£
;

165 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE xyz(dir,Çame);");

167  
SQLITE_OK
;

168 
	}
}

173 
	$fsdúDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

174 
	`sqlôe3_‰ì
(
pVèb
);

175  
SQLITE_OK
;

176 
	}
}

183 
	$fsdúBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

184 
ii
;

186 
pIdxInfo
->
e°im©edCo°
 = 1000000000.0;

188 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

189 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
p
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

190 if–
p
->
iCﬁumn
==0 &&Ö->
ußbÀ
 &&Ö->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 ){

191 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

192 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

193 
pUßge
->
omô
 = 1;

194 
pUßge
->
¨gvIndex
 = 1;

195 
pIdxInfo
->
idxNum
 = 1;

196 
pIdxInfo
->
e°im©edCo°
 = 1.0;

201  
SQLITE_OK
;

202 
	}
}

209 
	$fsdúO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

210 
FsdúC§
 *
pCur
;

214 
pCur
 = (
FsdúC§
*)
	`sqlôe3_mÆloc
((FsdirCsr)+256);

215 if–
pCur
==0 )  
SQLITE_NOMEM
;

216 
	`mem£t
(
pCur
, 0, (
FsdúC§
));

217 *
µCurs‹
 = &
pCur
->
ba£
;

218  
SQLITE_OK
;

219 
	}
}

224 
	$fsdúClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

225 
FsdúC§
 *
pCur
 = (FsdúC§*)
cur
;

226 if–
pCur
->
pDú
 ) 
	`˛o£dú
(pCur->pDir);

227 
	`sqlôe3_‰ì
(
pCur
->
zDú
);

228 
	`sqlôe3_‰ì
(
pCur
);

229  
SQLITE_OK
;

230 
	}
}

235 
	$fsdúNext
(
sqlôe3_vèb_curs‹
 *
cur
){

236 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

238 if–
pC§
->
pDú
 ){

239 
DIRENT
 *
pRes
 = 0;

240 #i‡
	`deföed
(
__MINGW_H
)

241 
pRes
 = 
	`ªaddú
(
pC§
->
pDú
);

242 if–
pRes
!=0 ){

243 
	`mem˝y
(&
pC§
->
íåy
, 
pRes
, (
DIRENT
));

246 
	`ªaddú_r
(
pC§
->
pDú
, &pC§->
íåy
, &
pRes
);

248 if–
pRes
==0 ){

249 
	`˛o£dú
(
pC§
->
pDú
);

250 
pC§
->
pDú
 = 0;

252 
pC§
->
iRowid
++;

255  
SQLITE_OK
;

256 
	}
}

261 
	$fsdúFûãr
(

262 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

263 
idxNum
, c⁄° *
idxSå
,

264 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


266 
FsdúC§
 *
pC§
 = (FsdúC§*)
pVèbCurs‹
;

267 c⁄° *
zDú
;

268 
nDú
;

271 if–
idxNum
!=1 || 
¨gc
!=1 ){

272  
SQLITE_ERROR
;

275 
pC§
->
iRowid
 = 0;

276 
	`sqlôe3_‰ì
(
pC§
->
zDú
);

277 if–
pC§
->
pDú
 ){

278 
	`˛o£dú
(
pC§
->
pDú
);

279 
pC§
->
pDú
 = 0;

282 
zDú
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

283 
nDú
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

284 
pC§
->
zDú
 = 
	`sqlôe3_mÆloc
(
nDú
+1);

285 if–
pC§
->
zDú
==0 )  
SQLITE_NOMEM
;

286 
	`mem˝y
(
pC§
->
zDú
, zDú, 
nDú
+1);

288 
pC§
->
pDú
 = 
	`›ídú
’C§->
zDú
);

289  
	`fsdúNext
(
pVèbCurs‹
);

290 
	}
}

295 
	$fsdúEof
(
sqlôe3_vèb_curs‹
 *
cur
){

296 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

297  
pC§
->
pDú
==0;

298 
	}
}

303 
	$fsdúCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

304 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

305  
i
 ){

307 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
zDú
, -1, 
SQLITE_STATIC
);

311 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pC§
->
íåy
.
d_«me
, -1, 
SQLITE_TRANSIENT
);

315 
	`as£π
( 0 );

318  
SQLITE_OK
;

319 
	}
}

324 
	$fsdúRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

325 
FsdúC§
 *
pC§
 = (FsdúC§*)
cur
;

326 *
pRowid
 = 
pC§
->
iRowid
;

327  
SQLITE_OK
;

328 
	}
}

336 
F°ªeVèb
 
	tF°ªeVèb
;

337 
F°ªeC§
 
	tF°ªeC§
;

338 
	sF°ªeVèb
 {

339 
sqlôe3_vèb
 
	mba£
;

340 
sqlôe3
 *
	mdb
;

343 
	sF°ªeC§
 {

344 
sqlôe3_vèb_curs‹
 
	mba£
;

345 
sqlôe3_°mt
 *
	mpStmt
;

346 
	mfd
;

360 
	$f°ªeC⁄√˘
(

361 
sqlôe3
 *
db
,

362 *
pAux
,

363 
¨gc
, c⁄° *c⁄°*
¨gv
,

364 
sqlôe3_vèb
 **
µVèb
,

365 **
pzEº


367 
F°ªeVèb
 *
pTab
;

369 if–
¨gc
!=3 ){

370 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

371  
SQLITE_ERROR
;

374 
pTab
 = (
F°ªeVèb
 *)
	`sqlôe3_mÆloc
((FstreeVtab));

375 if–!
pTab
 )  
SQLITE_NOMEM
;

376 
	`mem£t
(
pTab
, 0, (
F°ªeVèb
));

377 
pTab
->
db
 = db;

379 *
µVèb
 = &
pTab
->
ba£
;

380 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE xyz(path, size, data);");

382  
SQLITE_OK
;

383 
	}
}

388 
	$f°ªeDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

389 
	`sqlôe3_‰ì
(
pVèb
);

390  
SQLITE_OK
;

391 
	}
}

398 
	$f°ªeBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

399 
ii
;

401 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

402 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
p
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

403 if–
p
->
iCﬁumn
==0 &&Ö->
ußbÀ
 && (

404 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_GLOB


405 || 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_LIKE


406 || 
p
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ


408 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

409 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

410 
pIdxInfo
->
idxNum
 = 
p
->
›
;

411 
pUßge
->
¨gvIndex
 = 1;

412 
pIdxInfo
->
e°im©edCo°
 = 100000.0;

413  
SQLITE_OK
;

417 
pIdxInfo
->
e°im©edCo°
 = 1000000000.0;

418  
SQLITE_OK
;

419 
	}
}

426 
	$f°ªeO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

427 
F°ªeC§
 *
pCur
;

428 
pCur
 = (
F°ªeC§
*)
	`sqlôe3_mÆloc
((FstreeCsr));

429 if–
pCur
==0 )  
SQLITE_NOMEM
;

430 
	`mem£t
(
pCur
, 0, (
F°ªeC§
));

431 
pCur
->
fd
 = -1;

432 *
µCurs‹
 = &
pCur
->
ba£
;

433  
SQLITE_OK
;

434 
	}
}

436 
	$f°ªeClo£Fd
(
F°ªeC§
 *
pC§
){

437 if–
pC§
->
fd
>=0 ){

438 
	`˛o£
(
pC§
->
fd
);

439 
pC§
->
fd
 = -1;

441 
	}
}

446 
	$f°ªeClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

447 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

448 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

449 
	`f°ªeClo£Fd
(
pC§
);

450 
	`sqlôe3_‰ì
(
pC§
);

451  
SQLITE_OK
;

452 
	}
}

457 
	$f°ªeNext
(
sqlôe3_vèb_curs‹
 *
cur
){

458 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

459 
rc
;

461 
	`f°ªeClo£Fd
(
pC§
);

462 
rc
 = 
	`sqlôe3_°ï
(
pC§
->
pStmt
);

463 if–
rc
!=
SQLITE_ROW
 ){

464 
rc
 = 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

465 
pC§
->
pStmt
 = 0;

467 
rc
 = 
SQLITE_OK
;

468 
pC§
->
fd
 = 
	`›í
((c⁄° *)
	`sqlôe3_cﬁumn_ãxt
’C§->
pStmt
, 0), 
O_RDONLY
);

471  
rc
;

472 
	}
}

477 
	$f°ªeFûãr
(

478 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

479 
idxNum
, c⁄° *
idxSå
,

480 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


482 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
pVèbCurs‹
;

483 
F°ªeVèb
 *
pTab
 = (F°ªeVèb*)(
pC§
->
ba£
.
pVèb
);

484 
rc
;

485 c⁄° *
zSql
 =

493 *
zRoŸ
;

494 
nRoŸ
;

495 *
zPªfix
;

496 
nPªfix
;

497 c⁄° *
zDú
;

498 
nDú
;

499 
aWûd
[2] = { '\0', '\0' };

501 #i‡
SQLITE_OS_WIN


502 
zRoŸ
 = 
	`sqlôe3_m¥ötf
("%s%c", 
	`gëív
("SystemDrive"), '/');

503 
nRoŸ
 = 
	`sqlôe3SåÀn30
(
zRoŸ
);

504 
zPªfix
 = 
	`sqlôe3_m¥ötf
("%s", 
	`gëív
("SystemDrive"));

505 
nPªfix
 = 
	`sqlôe3SåÀn30
(
zPªfix
);

507 
zRoŸ
 = "/";

508 
nRoŸ
 = 1;

509 
zPªfix
 = "";

510 
nPªfix
 = 0;

513 
zDú
 = 
zRoŸ
;

514 
nDú
 = 
nRoŸ
;

516 
	`f°ªeClo£Fd
(
pC§
);

517 
	`sqlôe3_föÆize
(
pC§
->
pStmt
);

518 
pC§
->
pStmt
 = 0;

519 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
pTab
->
db
, 
zSql
, -1, &
pC§
->
pStmt
, 0);

520 if–
rc
!=
SQLITE_OK
 ) Ñc;

522 if–
idxNum
 ){

523 c⁄° *
zQuîy
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

524  
idxNum
 ){

525 
SQLITE_INDEX_CONSTRAINT_GLOB
:

526 
aWûd
[0] = '*';

527 
aWûd
[1] = '?';

529 
SQLITE_INDEX_CONSTRAINT_LIKE
:

530 
aWûd
[0] = '_';

531 
aWûd
[1] = '%';

535 if–
	`sqlôe3_°∫icmp
(
zQuîy
, 
zPªfix
, 
nPªfix
)==0 ){

536 
i
;

537 
i
=
nPªfix
; 
zQuîy
[i]; i++){

538 if–
zQuîy
[
i
]==
aWûd
[0] || zQuery[i]==aWild[1] ) ;

539 if–
zQuîy
[
i
]=='/' ) 
nDú
 = i;

541 
zDú
 = 
zQuîy
;

545 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 1, 
zDú
, 
nDú
, 
SQLITE_TRANSIENT
);

546 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 2, 
zRoŸ
, 
nRoŸ
, 
SQLITE_TRANSIENT
);

547 
	`sqlôe3_böd_ãxt
(
pC§
->
pStmt
, 3, 
zPªfix
, 
nPªfix
, 
SQLITE_TRANSIENT
);

549 #i‡
SQLITE_OS_WIN


550 
	`sqlôe3_‰ì
(
zPªfix
);

551 
	`sqlôe3_‰ì
(
zRoŸ
);

554  
	`f°ªeNext
(
pVèbCurs‹
);

555 
	}
}

560 
	$f°ªeEof
(
sqlôe3_vèb_curs‹
 *
cur
){

561 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

562  
pC§
->
pStmt
==0;

563 
	}
}

568 
	$f°ªeCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

569 
F°ªeC§
 *
pC§
 = (F°ªeC§*)
cur
;

570 if–
i
==0 ){

571 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pC§
->
pStmt
, 0));

573 
°©
 
sBuf
;

574 
	`f°©
(
pC§
->
fd
, &
sBuf
);

576 if–
	`S_ISREG
(
sBuf
.
°_mode
) ){

577 if–
i
==1 ){

578 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
sBuf
.
°_size
);

580 
nRód
;

581 *
aBuf
 = 
	`sqlôe3_mÆloc
(
sBuf
.
°_mode
+1);

582 if–!
aBuf
 )  
SQLITE_NOMEM
;

583 
nRód
 = 
	`ªad
(
pC§
->
fd
, 
aBuf
, 
sBuf
.
°_mode
);

584 if–
nRód
!=
sBuf
.
°_mode
 ){

585  
SQLITE_IOERR
;

587 
	`sqlôe3_ªsu…_blob
(
˘x
, 
aBuf
, 
nRód
, 
SQLITE_TRANSIENT
);

588 
	`sqlôe3_‰ì
(
aBuf
);

593  
SQLITE_OK
;

594 
	}
}

599 
	$f°ªeRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

600 *
pRowid
 = 0;

601  
SQLITE_OK
;

602 
	}
}

621 
	$fsC⁄√˘
(

622 
sqlôe3
 *
db
,

623 *
pAux
,

624 
¨gc
, c⁄° *c⁄°*
¨gv
,

625 
sqlôe3_vèb
 **
µVèb
,

626 **
pzEº


628 
fs_vèb
 *
pVèb
;

629 
nByã
;

630 c⁄° *
zTbl
;

631 c⁄° *
zDb
 = 
¨gv
[1];

633 if–
¨gc
!=4 ){

634 *
pzEº
 = 
	`sqlôe3_m¥ötf
("wrongÇumber ofárguments");

635  
SQLITE_ERROR
;

637 
zTbl
 = 
¨gv
[3];

639 
nByã
 = (
fs_vèb
Ë+ ()
	`°æí
(
zTbl
Ë+ 1 + ()°æí(
zDb
) + 1;

640 
pVèb
 = (
fs_vèb
 *)
	`sqlôe3MÆlocZîo
–
nByã
 );

641 if–!
pVèb
 )  
SQLITE_NOMEM
;

643 
pVèb
->
zTbl
 = (*)&pVtab[1];

644 
pVèb
->
zDb
 = &pVèb->
zTbl
[
	`°æí
(zTbl)+1];

645 
pVèb
->
db
 = db;

646 
	`mem˝y
(
pVèb
->
zTbl
, zTbl, 
	`°æí
(zTbl));

647 
	`mem˝y
(
pVèb
->
zDb
, zDb, 
	`°æí
(zDb));

648 *
µVèb
 = &
pVèb
->
ba£
;

649 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE x(path TEXT, data TEXT)");

651  
SQLITE_OK
;

652 
	}
}

656 
	$fsDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

657 
	`sqlôe3_‰ì
(
pVèb
);

658  
SQLITE_OK
;

659 
	}
}

665 
	$fsO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

666 
fs_curs‹
 *
pCur
;

667 
pCur
 = 
	`sqlôe3MÆlocZîo
((
fs_curs‹
));

668 *
µCurs‹
 = &
pCur
->
ba£
;

669  
SQLITE_OK
;

670 
	}
}

675 
	$fsClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

676 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
cur
;

677 
	`sqlôe3_föÆize
(
pCur
->
pStmt
);

678 
	`sqlôe3_‰ì
(
pCur
->
zBuf
);

679 
	`sqlôe3_‰ì
(
pCur
);

680  
SQLITE_OK
;

681 
	}
}

683 
	$fsNext
(
sqlôe3_vèb_curs‹
 *
cur
){

684 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
cur
;

685 
rc
;

687 
rc
 = 
	`sqlôe3_°ï
(
pCur
->
pStmt
);

688 if–
rc
==
SQLITE_ROW
 ||Ñc==
SQLITE_DONE
 )Ñ¯
SQLITE_OK
;

690  
rc
;

691 
	}
}

693 
	$fsFûãr
(

694 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

695 
idxNum
, c⁄° *
idxSå
,

696 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


698 
rc
;

699 
fs_curs‹
 *
pCur
 = (fs_curs‹ *)
pVèbCurs‹
;

700 
fs_vèb
 *
p
 = (fs_vèb *)(
pVèbCurs‹
->
pVèb
);

702 
	`as£π
–(
idxNum
==0 && 
¨gc
==0) || (idxNum==1 &&árgc==1) );

703 if–
idxNum
==1 ){

704 *
zStmt
 = 
	`sqlôe3_m¥ötf
(

705 "SELECT * FROM %Q.%Q WHEREÑowid=?", 
p
->
zDb
,Ö->
zTbl
);

706 if–!
zStmt
 )  
SQLITE_NOMEM
;

707 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zStmt
, -1, &
pCur
->
pStmt
, 0);

708 
	`sqlôe3_‰ì
(
zStmt
);

709 if–
rc
==
SQLITE_OK
 ){

710 
	`sqlôe3_böd_vÆue
(
pCur
->
pStmt
, 1, 
¨gv
[0]);

713 *
zStmt
 = 
	`sqlôe3_m¥ötf
("SELECT * FROM %Q.%Q", 
p
->
zDb
,Ö->
zTbl
);

714 if–!
zStmt
 )  
SQLITE_NOMEM
;

715 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
p
->
db
, 
zStmt
, -1, &
pCur
->
pStmt
, 0);

716 
	`sqlôe3_‰ì
(
zStmt
);

719 if–
rc
==
SQLITE_OK
 ){

720 
rc
 = 
	`fsNext
(
pVèbCurs‹
);

722  
rc
;

723 
	}
}

725 
	$fsCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

726 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

728 
	`as£π
–
i
==0 || i==1 || i==2 );

729 if–
i
==0 ){

730 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pStmt
, 0));

732 c⁄° *
zFûe
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pStmt
, 1);

733 
°©
 
sbuf
;

734 
fd
;

736 
n
;

737 
fd
 = 
	`›í
(
zFûe
, 
O_RDONLY
);

738 if–
fd
<0 )  
SQLITE_IOERR
;

739 
	`f°©
(
fd
, &
sbuf
);

741 if–
sbuf
.
°_size
>=
pCur
->
nAŒoc
 ){

742 
nNew
 = 
sbuf
.
°_size
*2;

743 *
zNew
;

744 if–
nNew
<1024 )ÇNew = 1024;

746 
zNew
 = 
	`sqlôe3RóŒoc
(
pCur
->
zBuf
, 
nNew
);

747 if–
zNew
==0 ){

748 
	`˛o£
(
fd
);

749  
SQLITE_NOMEM
;

751 
pCur
->
zBuf
 = 
zNew
;

752 
pCur
->
nAŒoc
 = 
nNew
;

755 
n
 = ()
	`ªad
(
fd
, 
pCur
->
zBuf
, 
sbuf
.
°_size
);

756 
	`˛o£
(
fd
);

757 if–
n
!=
sbuf
.
°_size
 )  
SQLITE_ERROR
;

758 
pCur
->
nBuf
 = 
sbuf
.
°_size
;

759 
pCur
->
zBuf
[pCur->
nBuf
] = '\0';

761 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
pCur
->
zBuf
, -1, 
SQLITE_TRANSIENT
);

763  
SQLITE_OK
;

764 
	}
}

766 
	$fsRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

767 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

768 *
pRowid
 = 
	`sqlôe3_cﬁumn_öt64
(
pCur
->
pStmt
, 0);

769  
SQLITE_OK
;

770 
	}
}

772 
	$fsEof
(
sqlôe3_vèb_curs‹
 *
cur
){

773 
fs_curs‹
 *
pCur
 = (fs_curs‹*)
cur
;

774  (
	`sqlôe3_d©a_cou¡
(
pCur
->
pStmt
)==0);

775 
	}
}

777 
	$fsBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

778 
ii
;

780 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

781 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

782 if–
pC⁄s
->
iCﬁumn
<0 &&ÖC⁄s->
ußbÀ


783 && 
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 ){

784 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

785 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

786 
pUßge
->
omô
 = 0;

787 
pUßge
->
¨gvIndex
 = 1;

788 
pIdxInfo
->
idxNum
 = 1;

789 
pIdxInfo
->
e°im©edCo°
 = 1.0;

794  
SQLITE_OK
;

795 
	}
}

801 
sqlôe3_moduÀ
 
	gfsModuÀ
 = {

803 
fsC⁄√˘
,

804 
fsC⁄√˘
,

805 
fsBe°Index
,

806 
fsDisc⁄√˘
,

807 
fsDisc⁄√˘
,

808 
fsO≥n
,

809 
fsClo£
,

810 
fsFûãr
,

811 
fsNext
,

812 
fsEof
,

813 
fsCﬁumn
,

814 
fsRowid
,

824 
sqlôe3_moduÀ
 
	gfsdúModuÀ
 = {

826 
fsdúC⁄√˘
,

827 
fsdúC⁄√˘
,

828 
fsdúBe°Index
,

829 
fsdúDisc⁄√˘
,

830 
fsdúDisc⁄√˘
,

831 
fsdúO≥n
,

832 
fsdúClo£
,

833 
fsdúFûãr
,

834 
fsdúNext
,

835 
fsdúEof
,

836 
fsdúCﬁumn
,

837 
fsdúRowid
,

847 
sqlôe3_moduÀ
 
	gf°ªeModuÀ
 = {

849 
f°ªeC⁄√˘
,

850 
f°ªeC⁄√˘
,

851 
f°ªeBe°Index
,

852 
f°ªeDisc⁄√˘
,

853 
f°ªeDisc⁄√˘
,

854 
f°ªeO≥n
,

855 
f°ªeClo£
,

856 
f°ªeFûãr
,

857 
f°ªeNext
,

858 
f°ªeEof
,

859 
f°ªeCﬁumn
,

860 
f°ªeRowid
,

873 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

878 
SQLITE_TCLAPI
 
	$ªgi°î_fs_moduÀ
(

879 
Clõ¡D©a
 
˛õ¡D©a
,

880 
T˛_I¡îp
 *
öãΩ
,

881 
objc
,

882 
T˛_Obj
 *
CONST
 
objv
[]

884 
sqlôe3
 *
db
;

885 if–
objc
!=2 ){

886 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

887  
TCL_ERROR
;

889 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

890 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


891 
	`sqlôe3_¸óã_moduÀ
(
db
, "fs", &
fsModuÀ
, (*)
öãΩ
);

892 
	`sqlôe3_¸óã_moduÀ
(
db
, "fsdú", &
fsdúModuÀ
, 0);

893 
	`sqlôe3_¸óã_moduÀ
(
db
, "f°ªe", &
f°ªeModuÀ
, 0);

895  
TCL_OK
;

896 
	}
}

904 
	$Sqlôëe°fs_Inô
(
T˛_I¡îp
 *
öãΩ
){

905 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


907 *
zName
;

908 
T˛_ObjCmdProc
 *
xProc
;

909 *
˛õ¡D©a
;

910 } 
aObjCmd
[] = {

911 { "ªgi°î_fs_moduÀ", 
ªgi°î_fs_moduÀ
, 0 },

913 
i
;

914 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

915 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

916 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

919  
TCL_OK
;

920 
	}
}

	@test_func.c

15 
	~"sqlôe3.h
"

16 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

17 
	~"sqlôe_t˛.h
"

19 
	~"t˛.h
"

21 
	~<°dlib.h
>

22 
	~<°rög.h
>

23 
	~<as£π.h
>

25 
	~"sqlôeI¡.h
"

26 
	~"vdbeI¡.h
"

33 *
	$ã°C⁄ãxtMÆloc
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
nByã
){

34 *
z
 = 
	`sqlôe3_mÆloc
(
nByã
);

35 if–!
z
 && 
nByã
>0 ){

36 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

38  
z
;

39 
	}
}

45 
	$øndSå
(
sqlôe3_c⁄ãxt
 *
c⁄ãxt
, 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
){

46 c⁄° 
zSrc
[] =

51 
iMö
, 
iMax
, 
n
, 
r
, 
i
;

52 
zBuf
[1000];

57 
	`as£π
(
¨gc
==2);

59 
iMö
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

60 if–
iMö
<0 ) iMin = 0;

61 if–
iMö
>=(
zBuf
) ) iMin = (zBuf)-1;

62 
iMax
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

63 if–
iMax
<
iMö
 ) iMax = iMin;

64 if–
iMax
>=(
zBuf
) ) iMax = (zBuf)-1;

65 
n
 = 
iMö
;

66 if–
iMax
>
iMö
 ){

67 
	`sqlôe3_øndom√ss
((
r
), &r);

68 
r
 &= 0x7fffffff;

69 
n
 +
r
%(
iMax
 + 1 - 
iMö
);

71 
	`as£π
–
n
<(
zBuf
) );

72 
	`sqlôe3_øndom√ss
(
n
, 
zBuf
);

73 
i
=0; i<
n
; i++){

74 
zBuf
[
i
] = 
zSrc
[zBuf[i]%((zSrc)-1)];

76 
zBuf
[
n
] = 0;

77 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, (*)
zBuf
, 
n
, 
SQLITE_TRANSIENT
);

78 
	}
}

91 
	gã°_de°ru˘‹_cou¡_v¨
 = 0;

92 
	$de°ru˘‹
(*
p
){

93 *
zVÆ
 = (*)
p
;

94 
	`as£π
(
zVÆ
);

95 
zVÆ
--;

96 
	`sqlôe3_‰ì
(
zVÆ
);

97 
ã°_de°ru˘‹_cou¡_v¨
--;

98 
	}
}

99 
	$ã°_de°ru˘‹
(

100 
sqlôe3_c⁄ãxt
 *
pCtx
,

101 
nArg
,

102 
sqlôe3_vÆue
 **
¨gv


104 *
zVÆ
;

105 
Àn
;

107 
ã°_de°ru˘‹_cou¡_v¨
++;

108 
	`as£π
–
nArg
==1 );

109 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

110 
Àn
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

111 
zVÆ
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
Àn
+3);

112 if–!
zVÆ
 ){

115 
zVÆ
[
Àn
+1] = 0;

116 
zVÆ
[
Àn
+2] = 0;

117 
zVÆ
++;

118 
	`mem˝y
(
zVÆ
, 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), 
Àn
);

119 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zVÆ
, -1, 
de°ru˘‹
);

120 
	}
}

121 #i‚de‡
SQLITE_OMIT_UTF16


122 
	$ã°_de°ru˘‹16
(

123 
sqlôe3_c⁄ãxt
 *
pCtx
,

124 
nArg
,

125 
sqlôe3_vÆue
 **
¨gv


127 *
zVÆ
;

128 
Àn
;

130 
ã°_de°ru˘‹_cou¡_v¨
++;

131 
	`as£π
–
nArg
==1 );

132 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_NULL
 ) ;

133 
Àn
 = 
	`sqlôe3_vÆue_byãs16
(
¨gv
[0]);

134 
zVÆ
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
Àn
+3);

135 if–!
zVÆ
 ){

138 
zVÆ
[
Àn
+1] = 0;

139 
zVÆ
[
Àn
+2] = 0;

140 
zVÆ
++;

141 
	`mem˝y
(
zVÆ
, 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]), 
Àn
);

142 
	`sqlôe3_ªsu…_ãxt16
(
pCtx
, 
zVÆ
, -1, 
de°ru˘‹
);

143 
	}
}

145 
	$ã°_de°ru˘‹_cou¡
(

146 
sqlôe3_c⁄ãxt
 *
pCtx
,

147 
nArg
,

148 
sqlôe3_vÆue
 **
¨gv


150 
	`sqlôe3_ªsu…_öt
(
pCtx
, 
ã°_de°ru˘‹_cou¡_v¨
);

151 
	}
}

158 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


159 
sqlôe3BegöBíignMÆloc
();

160 
sqlôe3EndBíignMÆloc
();

162 
	#sqlôe3BegöBíignMÆloc
()

	)

163 
	#sqlôe3EndBíignMÆloc
()

	)

165 
	$ã°_agg_îrmsg16_°ï
(
sqlôe3_c⁄ãxt
 *
a
, 
b
,
sqlôe3_vÆue
 **
c
){

166 
	}
}

167 
	$ã°_agg_îrmsg16_föÆ
(
sqlôe3_c⁄ãxt
 *
˘x
){

168 #i‚de‡
SQLITE_OMIT_UTF16


169 c⁄° *
z
;

170 
sqlôe3
 * 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
˘x
);

171 
	`sqlôe3_aggªg©e_c⁄ãxt
(
˘x
, 2048);

172 
z
 = 
	`sqlôe3_îrmsg16
(
db
);

173 
	`sqlôe3_ªsu…_ãxt16
(
˘x
, 
z
, -1, 
SQLITE_TRANSIENT
);

175 
	}
}

188 
	$‰ì_ã°_auxd©a
(*
p
Ë{
	`sqlôe3_‰ì
’);
	}
}

189 
	$ã°_auxd©a
(

190 
sqlôe3_c⁄ãxt
 *
pCtx
,

191 
nArg
,

192 
sqlôe3_vÆue
 **
¨gv


194 
i
;

195 *
zRë
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
nArg
*2);

196 if–!
zRë
 ) ;

197 
	`mem£t
(
zRë
, 0, 
nArg
*2);

198 
i
=0; i<
nArg
; i++){

199 c⁄° *
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

200 if–
z
 ){

201 
n
;

202 *
zAux
 = 
	`sqlôe3_gë_auxd©a
(
pCtx
, 
i
);

203 if–
zAux
 ){

204 
zRë
[
i
*2] = '1';

205 
	`as£π
–
	`°rcmp
(
zAux
,
z
)==0 );

207 
zRë
[
i
*2] = '0';

209 
n
 = ()
	`°æí
(
z
) + 1;

210 
zAux
 = 
	`ã°C⁄ãxtMÆloc
(
pCtx
, 
n
);

211 if–
zAux
 ){

212 
	`mem˝y
(
zAux
, 
z
, 
n
);

213 
	`sqlôe3_£t_auxd©a
(
pCtx
, 
i
, 
zAux
, 
‰ì_ã°_auxd©a
);

215 
zRë
[
i
*2+1] = ' ';

218 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zRë
, 2*
nArg
-1, 
‰ì_ã°_auxd©a
);

219 
	}
}

226 
	$ã°_îr‹
(

227 
sqlôe3_c⁄ãxt
 *
pCtx
,

228 
nArg
,

229 
sqlôe3_vÆue
 **
¨gv


231 
	`sqlôe3_ªsu…_îr‹
(
pCtx
, (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]), -1);

232 if–
nArg
==2 ){

233 
	`sqlôe3_ªsu…_îr‹_code
(
pCtx
, 
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

235 
	}
}

243 
	$cou¡îFunc
(

244 
sqlôe3_c⁄ãxt
 *
pCtx
,

245 
nArg
,

246 
sqlôe3_vÆue
 **
¨gv


248 *
pCou¡î
 = (*)
	`sqlôe3_gë_auxd©a
(
pCtx
, 0);

249 if–
pCou¡î
==0 ){

250 
pCou¡î
 = 
	`sqlôe3_mÆloc
( (*pCounter) );

251 if–
pCou¡î
==0 ){

252 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

255 *
pCou¡î
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

256 
	`sqlôe3_£t_auxd©a
(
pCtx
, 0, 
pCou¡î
, 
sqlôe3_‰ì
);

258 ++*
pCou¡î
;

260 
	`sqlôe3_ªsu…_öt
(
pCtx
, *
pCou¡î
);

261 
	}
}

276 
	$ã°_isﬁ©i⁄
(

277 
sqlôe3_c⁄ãxt
 *
pCtx
,

278 
nArg
,

279 
sqlôe3_vÆue
 **
¨gv


281 #i‚de‡
SQLITE_OMIT_UTF16


282 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

283 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

284 
	`sqlôe3_vÆue_ãxt16
(
¨gv
[0]);

285 
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

287 
	`sqlôe3_ªsu…_vÆue
(
pCtx
, 
¨gv
[1]);

288 
	}
}

294 
	$ã°_evÆ
(

295 
sqlôe3_c⁄ãxt
 *
pCtx
,

296 
nArg
,

297 
sqlôe3_vÆue
 **
¨gv


299 
sqlôe3_°mt
 *
pStmt
;

300 
rc
;

301 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
pCtx
);

302 c⁄° *
zSql
;

304 
zSql
 = (*)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

305 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, -1, &
pStmt
, 0);

306 if–
rc
==
SQLITE_OK
 ){

307 
rc
 = 
	`sqlôe3_°ï
(
pStmt
);

308 if–
rc
==
SQLITE_ROW
 ){

309 
	`sqlôe3_ªsu…_vÆue
(
pCtx
, 
	`sqlôe3_cﬁumn_vÆue
(
pStmt
, 0));

311 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

313 if–
rc
 ){

314 *
zEº
;

315 
	`as£π
–
pStmt
==0 );

316 
zEº
 = 
	`sqlôe3_m¥ötf
("sqlôe3_¥ï¨e_v2(Ëîr‹: %s",
	`sqlôe3_îrmsg
(
db
));

317 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zEº
, -1, 
sqlôe3_‰ì
);

318 
	`sqlôe3_ªsu…_îr‹_code
(
pCtx
, 
rc
);

320 
	}
}

326 
	$ã°HexCh¨
(
c
){

327 if–
c
>='0' && c<='9' ){

328  
c
 - '0';

329 }if–
c
>='a' && c<='f' ){

330  
c
 - 'a' + 10;

331 }if–
c
>='A' && c<='F' ){

332  
c
 - 'A' + 10;

335 
	}
}

340 
	$ã°HexToBö
(c⁄° *
zIn
, *
zOut
){

341  
zIn
[0] && zIn[1] ){

342 *(
zOut
++Ë(
	`ã°HexCh¨
(
zIn
[0])<<4) +ÅestHexChar(zIn[1]);

343 
zIn
 += 2;

345 
	}
}

353 #i‚de‡
SQLITE_OMIT_UTF16


354 
	$ã°HexToUtf16be
(

355 
sqlôe3_c⁄ãxt
 *
pCtx
,

356 
nArg
,

357 
sqlôe3_vÆue
 **
¨gv


359 
n
;

360 c⁄° *
zIn
;

361 *
zOut
;

362 
	`as£π
–
nArg
==1 );

363 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

364 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

365 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

366 if–
zOut
==0 ){

367 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

369 
	`ã°HexToBö
(
zIn
, 
zOut
);

370 
	`sqlôe3_ªsu…_ãxt16be
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

372 
	}
}

381 
	$ã°HexToUtf8
(

382 
sqlôe3_c⁄ãxt
 *
pCtx
,

383 
nArg
,

384 
sqlôe3_vÆue
 **
¨gv


386 
n
;

387 c⁄° *
zIn
;

388 *
zOut
;

389 
	`as£π
–
nArg
==1 );

390 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

391 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

392 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

393 if–
zOut
==0 ){

394 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

396 
	`ã°HexToBö
(
zIn
, 
zOut
);

397 
	`sqlôe3_ªsu…_ãxt
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

399 
	}
}

407 #i‚de‡
SQLITE_OMIT_UTF16


408 
	$ã°HexToUtf16À
(

409 
sqlôe3_c⁄ãxt
 *
pCtx
,

410 
nArg
,

411 
sqlôe3_vÆue
 **
¨gv


413 
n
;

414 c⁄° *
zIn
;

415 *
zOut
;

416 
	`as£π
–
nArg
==1 );

417 
n
 = 
	`sqlôe3_vÆue_byãs
(
¨gv
[0]);

418 
zIn
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

419 
zOut
 = 
	`sqlôe3_mÆloc
–
n
/2 );

420 if–
zOut
==0 ){

421 
	`sqlôe3_ªsu…_îr‹_nomem
(
pCtx
);

423 
	`ã°HexToBö
(
zIn
, 
zOut
);

424 
	`sqlôe3_ªsu…_ãxt16À
(
pCtx
, 
zOut
, 
n
/2, 
sqlôe3_‰ì
);

426 
	}
}

436 
	$ªÆ2hex
(

437 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

438 
¨gc
,

439 
sqlôe3_vÆue
 **
¨gv


442 
sqlôe3_uöt64
 
i
;

443 
r
;

444 
x
[8];

445 } 
v
;

446 
zOut
[20];

447 
i
;

448 
bigEndün
;

449 
v
.
i
 = 1;

450 
bigEndün
 = 
v
.
x
[0]==0;

451 
v
.
r
 = 
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]);

452 
i
=0; i<8; i++){

453 if–
bigEndün
 ){

454 
zOut
[
i
*2] = "0123456789abcdef"[
v
.
x
[i]>>4];

455 
zOut
[
i
*2+1] = "0123456789abcdef"[
v
.
x
[i]&0xf];

457 
zOut
[14-
i
*2] = "0123456789abcdef"[
v
.
x
[i]>>4];

458 
zOut
[14-
i
*2+1] = "0123456789abcdef"[
v
.
x
[i]&0xf];

461 
zOut
[16] = 0;

462 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
zOut
, -1, 
SQLITE_TRANSIENT
);

463 
	}
}

473 
	$ã°_exåa˘
(

474 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

475 
¨gc
,

476 
sqlôe3_vÆue
 **
¨gv


478 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

479 
u8
 *
pRec
;

480 
u8
 *
pEndHdr
;

481 
u8
 *
pHdr
;

482 
u8
 *
pBody
;

483 
u64
 
nHdr
;

484 
iIdx
;

485 
iCuºít
 = 0;

487 
	`as£π
–
¨gc
==2 );

488 
pRec
 = (
u8
*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

489 
iIdx
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

491 
pHdr
 = 
pRec
 + 
	`sqlôe3GëV¨öt
’Rec, &
nHdr
);

492 
pBody
 = 
pEndHdr
 = &
pRec
[
nHdr
];

494 
iCuºít
=0; 
pHdr
<
pEndHdr
 && iCuºít<=
iIdx
; iCurrent++){

495 
u64
 
iSîülTy≥
;

496 
Mem
 
mem
;

498 
	`mem£t
(&
mem
, 0, (mem));

499 
mem
.
db
 = db;

500 
mem
.
íc
 = 
	`ENC
(
db
);

501 
pHdr
 +
	`sqlôe3GëV¨öt
’Hdr, &
iSîülTy≥
);

502 
pBody
 +
	`sqlôe3VdbeSîülGë
’Body, (
u32
)
iSîülTy≥
, &
mem
);

504 if–
iCuºít
==
iIdx
 ){

505 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, &
mem
);

508 if–
mem
.
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
, mem.
zMÆloc
);

510 
	}
}

520 
	$ã°_decode
(

521 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

522 
¨gc
,

523 
sqlôe3_vÆue
 **
¨gv


525 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

526 
u8
 *
pRec
;

527 
u8
 *
pEndHdr
;

528 
u8
 *
pHdr
;

529 
u8
 *
pBody
;

530 
u64
 
nHdr
;

531 
T˛_Obj
 *
pRë
;

533 
pRë
 = 
	`T˛_NewObj
();

534 
	`T˛_In¸RefCou¡
(
pRë
);

536 
	`as£π
–
¨gc
==1 );

537 
pRec
 = (
u8
*)
	`sqlôe3_vÆue_blob
(
¨gv
[0]);

539 
pHdr
 = 
pRec
 + 
	`sqlôe3GëV¨öt
’Rec, &
nHdr
);

540 
pBody
 = 
pEndHdr
 = &
pRec
[
nHdr
];

541  
pHdr
<
pEndHdr
 ){

542 
T˛_Obj
 *
pVÆ
 = 0;

543 
u64
 
iSîülTy≥
;

544 
Mem
 
mem
;

546 
	`mem£t
(&
mem
, 0, (mem));

547 
mem
.
db
 = db;

548 
mem
.
íc
 = 
	`ENC
(
db
);

549 
pHdr
 +
	`sqlôe3GëV¨öt
’Hdr, &
iSîülTy≥
);

550 
pBody
 +
	`sqlôe3VdbeSîülGë
’Body, (
u32
)
iSîülTy≥
, &
mem
);

552  
	`sqlôe3_vÆue_ty≥
(&
mem
) ){

553 
SQLITE_TEXT
:

554 
pVÆ
 = 
	`T˛_NewSåögObj
((c⁄° *)
	`sqlôe3_vÆue_ãxt
(&
mem
), -1);

557 
SQLITE_BLOB
: {

558 
hexdigô
[] = {

562 
n
 = 
	`sqlôe3_vÆue_byãs
(&
mem
);

563 
u8
 *
z
 = (u8*)
	`sqlôe3_vÆue_blob
(&
mem
);

564 
i
;

565 
pVÆ
 = 
	`T˛_NewSåögObj
("x'", -1);

566 
i
=0; i<
n
; i++){

567 
hex
[3];

568 
hex
[0] = 
hexdigô
[((
z
[
i
] >> 4) & 0x0F)];

569 
hex
[1] = 
hexdigô
[(
z
[
i
] & 0x0F)];

570 
hex
[2] = '\0';

571 
	`T˛_AµídSåögsToObj
(
pVÆ
, 
hex
, 0);

573 
	`T˛_AµídSåögsToObj
(
pVÆ
, "'", 0);

577 
SQLITE_FLOAT
:

578 
pVÆ
 = 
	`T˛_NewDoubÀObj
(
	`sqlôe3_vÆue_doubÀ
(&
mem
));

581 
SQLITE_INTEGER
:

582 
pVÆ
 = 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_vÆue_öt64
(&
mem
));

585 
SQLITE_NULL
:

586 
pVÆ
 = 
	`T˛_NewSåögObj
("NULL", -1);

590 
	`as£π
( 0 );

593 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRë
, 
pVÆ
);

595 if–
mem
.
szMÆloc
 ){

596 
	`sqlôe3DbFªe
(
db
, 
mem
.
zMÆloc
);

600 
	`sqlôe3_ªsu…_ãxt
(
c⁄ãxt
, 
	`T˛_GëSåög
(
pRë
), -1, 
SQLITE_TRANSIENT
);

601 
	`T˛_De¸RefCou¡
(
pRë
);

602 
	}
}

612 
	$ã°_zîoblob
(

613 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

614 
¨gc
,

615 
sqlôe3_vÆue
 **
¨gv


617 
nZîo
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

618 
	`sqlôe3_ªsu…_zîoblob
(
c⁄ãxt
, 
nZîo
);

619 
	}
}

625 
	$ã°_gësubty≥
(

626 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

627 
¨gc
,

628 
sqlôe3_vÆue
 **
¨gv


630 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, ()
	`sqlôe3_vÆue_subty≥
(
¨gv
[0]));

631 
	}
}

637 
	$ã°_£tsubty≥
(

638 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

639 
¨gc
,

640 
sqlôe3_vÆue
 **
¨gv


642 
	`sqlôe3_ªsu…_vÆue
(
c⁄ãxt
, 
¨gv
[0]);

643 
	`sqlôe3_ªsu…_subty≥
(
c⁄ãxt
, ()
	`sqlôe3_vÆue_öt
(
¨gv
[1]));

644 
	}
}

646 
	$ªgi°îTe°Fun˘i⁄s
(

647 
sqlôe3
 *
db
,

648 **
pzEºMsg
,

649 c⁄° 
sqlôe3_≠i_routöes
 *
pThunk


652 *
zName
;

653 sig√d 
nArg
;

654 
eTextRï
;

655 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
 **);

656 } 
aFuncs
[] = {

657 { "ønd°r", 2, 
SQLITE_UTF8
, 
øndSå
 },

658 { "ã°_de°ru˘‹", 1, 
SQLITE_UTF8
, 
ã°_de°ru˘‹
},

659 #i‚de‡
SQLITE_OMIT_UTF16


660 { "ã°_de°ru˘‹16", 1, 
SQLITE_UTF8
, 
ã°_de°ru˘‹16
},

661 { "hex_to_utf16be", 1, 
SQLITE_UTF8
, 
ã°HexToUtf16be
},

662 { "hex_to_utf16À", 1, 
SQLITE_UTF8
, 
ã°HexToUtf16À
},

664 { "hex_to_utf8", 1, 
SQLITE_UTF8
, 
ã°HexToUtf8
},

665 { "ã°_de°ru˘‹_cou¡", 0, 
SQLITE_UTF8
, 
ã°_de°ru˘‹_cou¡
},

666 { "ã°_auxd©a", -1, 
SQLITE_UTF8
, 
ã°_auxd©a
},

667 { "ã°_îr‹", 1, 
SQLITE_UTF8
, 
ã°_îr‹
},

668 { "ã°_îr‹", 2, 
SQLITE_UTF8
, 
ã°_îr‹
},

669 { "ã°_evÆ", 1, 
SQLITE_UTF8
, 
ã°_evÆ
},

670 { "ã°_isﬁ©i⁄", 2, 
SQLITE_UTF8
, 
ã°_isﬁ©i⁄
},

671 { "ã°_cou¡î", 1, 
SQLITE_UTF8
, 
cou¡îFunc
},

672 { "ªÆ2hex", 1, 
SQLITE_UTF8
, 
ªÆ2hex
},

673 { "ã°_decode", 1, 
SQLITE_UTF8
, 
ã°_decode
},

674 { "ã°_exåa˘", 2, 
SQLITE_UTF8
, 
ã°_exåa˘
},

675 { "ã°_zîoblob", 1, 
SQLITE_UTF8
|
SQLITE_DETERMINISTIC
, 
ã°_zîoblob
},

676 { "ã°_gësubty≥", 1, 
SQLITE_UTF8
, 
ã°_gësubty≥
},

677 { "ã°_£tsubty≥", 2, 
SQLITE_UTF8
, 
ã°_£tsubty≥
},

679 
i
;

681 
i
=0; i<(
aFuncs
)/(aFuncs[0]); i++){

682 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, 
aFuncs
[
i
].
zName
,áFuncs[i].
nArg
,

683 
aFuncs
[
i
].
eTextRï
, 0,áFuncs[i].
xFunc
, 0, 0);

686 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "ã°_agg_îrmsg16", 0, 
SQLITE_ANY
, 0, 0,

687 
ã°_agg_îrmsg16_°ï
, 
ã°_agg_îrmsg16_föÆ
);

689  
SQLITE_OK
;

690 
	}
}

699 
SQLITE_TCLAPI
 
	$autoö°Æl_ã°_funcs
(

700 * 
˛õ¡D©a
,

701 
T˛_I¡îp
 *
öãΩ
,

702 
objc
,

703 
T˛_Obj
 *
CONST
 
objv
[]

705 
	`Md5_Regi°î
(
sqlôe3
 *, **, c⁄° 
sqlôe3_≠i_routöes
 *);

706 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
ªgi°îTe°Fun˘i⁄s
);

707 if–
rc
==
SQLITE_OK
 ){

708 
rc
 = 
	`sqlôe3_auto_exãnsi⁄
(((*)())
Md5_Regi°î
);

710 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

711  
TCL_OK
;

712 
	}
}

717 
	$tSãp
(
sqlôe3_c⁄ãxt
 *
a
, 
b
, 
sqlôe3_vÆue
 **
c
){
	}
}

718 
	$tFöÆ
(
sqlôe3_c⁄ãxt
 *
a
){
	}
}

727 
SQLITE_TCLAPI
 
	$abu£_¸óã_fun˘i⁄
(

728 * 
˛õ¡D©a
,

729 
T˛_I¡îp
 *
öãΩ
,

730 
objc
,

731 
T˛_Obj
 *
CONST
 
objv
[]

733 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

734 
sqlôe3
 *
db
;

735 
rc
;

736 
mxArg
;

738 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

740 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
,tSãp,
tFöÆ
);

741 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

743 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
,ÅStep, 0);

744 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

746 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 
tFöÆ
);

747 if–
rc
!=
SQLITE_MISUSE
Ë
abu£_îr
;

749 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 0, 0, 
tFöÆ
);

750 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

752 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 1, 
SQLITE_UTF8
, 0, 0, 
tSãp
, 0);

753 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

755 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", -2, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

756 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

758 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "tx", 128, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

759 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

761 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "funcxx"

767 1, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

768 if–
rc
!=
SQLITE_MISUSE
 ) 
abu£_îr
;

774 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_FUNCTION_ARG
, 10000);

775 
mxArg
 = 
	`sqlôe3_limô
(
db
, 
SQLITE_LIMIT_FUNCTION_ARG
, -1);

776 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "nullx"

782 
mxArg
, 
SQLITE_UTF8
, 0, 
tSãp
, 0, 0);

783 if–
rc
!=
SQLITE_OK
 ) 
abu£_îr
;

785  
TCL_OK
;

787 
abu£_îr
:

788 
	`T˛_AµídResu…
(
öãΩ
, "sqlite3_create_functionábusedÅest failed",

790  
TCL_ERROR
;

791 
	}
}

797 
	$Sqlôëe°_func_Inô
(
T˛_I¡îp
 *
öãΩ
){

799 *
zName
;

800 
T˛_ObjCmdProc
 *
xProc
;

801 } 
aObjCmd
[] = {

802 { "autoö°Æl_ã°_fun˘i⁄s", 
autoö°Æl_ã°_funcs
 },

803 { "abu£_¸óã_fun˘i⁄", 
abu£_¸óã_fun˘i⁄
 },

805 
i
;

806 
	`Md5_Regi°î
(
sqlôe3
 *, **, c⁄° 
sqlôe3_≠i_routöes
 *);

808 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

809 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

811 
	`sqlôe3_öôülize
();

812 
	`sqlôe3_auto_exãnsi⁄
(((*)())
ªgi°îTe°Fun˘i⁄s
);

813 
	`sqlôe3_auto_exãnsi⁄
(((*)())
Md5_Regi°î
);

814  
TCL_OK
;

815 
	}
}

	@test_hexio.c

20 
	~"sqlôeI¡.h
"

21 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

22 
	~"sqlôe_t˛.h
"

24 
	~"t˛.h
"

26 
	~<°dlib.h
>

27 
	~<°rög.h
>

28 
	~<as£π.h
>

36 
	$sqlôe3Te°BöToHex
(*
zBuf
, 
N
){

37 c⁄° 
zHex
[] = "0123456789ABCDEF";

38 
i
, 
j
;

39 
c
;

40 
i
 = 
N
*2;

41 
zBuf
[
i
--] = 0;

42 
j
=
N
-1; j>=0; j--){

43 
c
 = 
zBuf
[
j
];

44 
zBuf
[
i
--] = 
zHex
[
c
&0xf];

45 
zBuf
[
i
--] = 
zHex
[
c
>>4];

47 
	`as£π
–
i
==-1 );

48 
	}
}

56 
	$sqlôe3Te°HexToBö
(c⁄° *
zIn
, 
N
, *
aOut
){

57 c⁄° 
aM≠
[] = {

75 
i
, 
j
;

76 
hi
=1;

77 
c
;

79 
i
=
j
=0; i<
N
; i++){

80 
c
 = 
aM≠
[
zIn
[
i
]];

81 if–
c
==0 ) ;

82 if–
hi
 ){

83 
aOut
[
j
] = (
c
-1)<<4;

84 
hi
 = 0;

86 
aOut
[
j
++] |
c
-1;

87 
hi
 = 1;

90  
j
;

91 
	}
}

101 
SQLITE_TCLAPI
 
	$hexio_ªad
(

102 * 
˛õ¡D©a
,

103 
T˛_I¡îp
 *
öãΩ
,

104 
objc
,

105 
T˛_Obj
 *
CONST
 
objv
[]

107 
off£t
;

108 
amt
, 
gŸ
;

109 c⁄° *
zFûe
;

110 *
zBuf
;

111 
FILE
 *
ö
;

113 if–
objc
!=4 ){

114 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME OFFSET AMT");

115  
TCL_ERROR
;

117 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
off£t
ËË 
TCL_ERROR
;

118 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
amt
ËË 
TCL_ERROR
;

119 
zFûe
 = 
	`T˛_GëSåög
(
objv
[1]);

120 
zBuf
 = 
	`sqlôe3_mÆloc
–
amt
*2+1 );

121 if–
zBuf
==0 ){

122  
TCL_ERROR
;

124 
ö
 = 
	`f›í
(
zFûe
, "rb");

125 if–
ö
==0 ){

126 
ö
 = 
	`f›í
(
zFûe
, "r");

128 if–
ö
==0 ){

129 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿öpuàfûê", 
zFûe
, 0);

130  
TCL_ERROR
;

132 
	`f£ek
(
ö
, 
off£t
, 
SEEK_SET
);

133 
gŸ
 = ()
	`‰ód
(
zBuf
, 1, 
amt
, 
ö
);

134 
	`f˛o£
(
ö
);

135 if–
gŸ
<0 ){

136 
gŸ
 = 0;

138 
	`sqlôe3Te°BöToHex
(
zBuf
, 
gŸ
);

139 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

140 
	`sqlôe3_‰ì
(
zBuf
);

141  
TCL_OK
;

142 
	}
}

151 
SQLITE_TCLAPI
 
	$hexio_wrôe
(

152 * 
˛õ¡D©a
,

153 
T˛_I¡îp
 *
öãΩ
,

154 
objc
,

155 
T˛_Obj
 *
CONST
 
objv
[]

157 
off£t
;

158 
nIn
, 
nOut
, 
wrôãn
;

159 c⁄° *
zFûe
;

160 c⁄° *
zIn
;

161 *
aOut
;

162 
FILE
 *
out
;

164 if–
objc
!=4 ){

165 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME OFFSET HEXDATA");

166  
TCL_ERROR
;

168 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
off£t
ËË 
TCL_ERROR
;

169 
zFûe
 = 
	`T˛_GëSåög
(
objv
[1]);

170 
zIn
 = (c⁄° *)
	`T˛_GëSåögFromObj
(
objv
[3], &
nIn
);

171 
aOut
 = 
	`sqlôe3_mÆloc
–
nIn
/2 );

172 if–
aOut
==0 ){

173  
TCL_ERROR
;

175 
nOut
 = 
	`sqlôe3Te°HexToBö
(
zIn
, 
nIn
, 
aOut
);

176 
out
 = 
	`f›í
(
zFûe
, "r+b");

177 if–
out
==0 ){

178 
out
 = 
	`f›í
(
zFûe
, "r+");

180 if–
out
==0 ){

181 
	`T˛_AµídResu…
(
öãΩ
, "ˇ¬Ÿ o≥¿ouçuàfûê", 
zFûe
, 0);

182  
TCL_ERROR
;

184 
	`f£ek
(
out
, 
off£t
, 
SEEK_SET
);

185 
wrôãn
 = ()
	`fwrôe
(
aOut
, 1, 
nOut
, 
out
);

186 
	`sqlôe3_‰ì
(
aOut
);

187 
	`f˛o£
(
out
);

188 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
wrôãn
));

189  
TCL_OK
;

190 
	}
}

199 
SQLITE_TCLAPI
 
	$hexio_gë_öt
(

200 * 
˛õ¡D©a
,

201 
T˛_I¡îp
 *
öãΩ
,

202 
objc
,

203 
T˛_Obj
 *
CONST
 
objv
[]

205 
vÆ
;

206 
nIn
, 
nOut
;

207 c⁄° *
zIn
;

208 *
aOut
;

209 
aNum
[4];

211 if–
objc
!=2 ){

212 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HEXDATA");

213  
TCL_ERROR
;

215 
zIn
 = (c⁄° *)
	`T˛_GëSåögFromObj
(
objv
[1], &
nIn
);

216 
aOut
 = 
	`sqlôe3_mÆloc
–
nIn
/2 );

217 if–
aOut
==0 ){

218  
TCL_ERROR
;

220 
nOut
 = 
	`sqlôe3Te°HexToBö
(
zIn
, 
nIn
, 
aOut
);

221 if–
nOut
>=4 ){

222 
	`mem˝y
(
aNum
, 
aOut
, 4);

224 
	`mem£t
(
aNum
, 0, (aNum));

225 
	`mem˝y
(&
aNum
[4-
nOut
], 
aOut
,ÇOut);

227 
	`sqlôe3_‰ì
(
aOut
);

228 
vÆ
 = (
aNum
[0]<<24) | (aNum[1]<<16) | (aNum[2]<<8) |áNum[3];

229 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
vÆ
));

230  
TCL_OK
;

231 
	}
}

239 
SQLITE_TCLAPI
 
	$hexio_ªndî_öt16
(

240 * 
˛õ¡D©a
,

241 
T˛_I¡îp
 *
öãΩ
,

242 
objc
,

243 
T˛_Obj
 *
CONST
 
objv
[]

245 
vÆ
;

246 
aNum
[10];

248 if–
objc
!=2 ){

249 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTEGER");

250  
TCL_ERROR
;

252 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
vÆ
ËË 
TCL_ERROR
;

253 
aNum
[0] = 
vÆ
>>8;

254 
aNum
[1] = 
vÆ
;

255 
	`sqlôe3Te°BöToHex
(
aNum
, 2);

256 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
((*)
aNum
, 4));

257  
TCL_OK
;

258 
	}
}

266 
SQLITE_TCLAPI
 
	$hexio_ªndî_öt32
(

267 * 
˛õ¡D©a
,

268 
T˛_I¡îp
 *
öãΩ
,

269 
objc
,

270 
T˛_Obj
 *
CONST
 
objv
[]

272 
vÆ
;

273 
aNum
[10];

275 if–
objc
!=2 ){

276 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTEGER");

277  
TCL_ERROR
;

279 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
vÆ
ËË 
TCL_ERROR
;

280 
aNum
[0] = 
vÆ
>>24;

281 
aNum
[1] = 
vÆ
>>16;

282 
aNum
[2] = 
vÆ
>>8;

283 
aNum
[3] = 
vÆ
;

284 
	`sqlôe3Te°BöToHex
(
aNum
, 4);

285 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
((*)
aNum
, 8));

286  
TCL_OK
;

287 
	}
}

296 
SQLITE_TCLAPI
 
	$utf8_to_utf8
(

297 * 
˛õ¡D©a
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
objc
,

300 
T˛_Obj
 *
CONST
 
objv
[]

302 #ifde‡
SQLITE_DEBUG


303 
n
;

304 
nOut
;

305 c⁄° *
zOrig
;

306 *
z
;

307 if–
objc
!=2 ){

308 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HEX");

309  
TCL_ERROR
;

311 
zOrig
 = (*)
	`T˛_GëSåögFromObj
(
objv
[1], &
n
);

312 
z
 = 
	`sqlôe3_mÆloc
–
n
+3 );

313 
n
 = 
	`sqlôe3Te°HexToBö
(
zOrig
,Ç, 
z
);

314 
z
[
n
] = 0;

315 
nOut
 = 
	`sqlôe3Utf8To8
(
z
);

316 
	`sqlôe3Te°BöToHex
(
z
,
nOut
);

317 
	`T˛_AµídResu…
(
öãΩ
, (*)
z
, 0);

318 
	`sqlôe3_‰ì
(
z
);

319  
TCL_OK
;

321 
	`T˛_AµídResu…
(
öãΩ
,

324  
TCL_ERROR
;

326 
	}
}

328 
	$gëFts3V¨öt
(c⁄° *
p
, 
sqlôe_öt64
 *
v
){

329 c⁄° *
q
 = (c⁄° *Ë
p
;

330 
sqlôe_uöt64
 
x
 = 0, 
y
 = 1;

331  (*
q
 & 0x80) == 0x80 ){

332 
x
 +
y
 * (*
q
++ & 0x7f);

333 
y
 <<= 7;

335 
x
 +
y
 * (*
q
++);

336 *
v
 = (
sqlôe_öt64
Ë
x
;

337  (Ë(
q
 - (*)
p
);

338 
	}
}

347 
SQLITE_TCLAPI
 
	$ªad_·s3v¨öt
(

348 * 
˛õ¡D©a
,

349 
T˛_I¡îp
 *
öãΩ
,

350 
objc
,

351 
T˛_Obj
 *
CONST
 
objv
[]

353 
nBlob
;

354 *
zBlob
;

355 
sqlôe3_öt64
 
iVÆ
;

356 
nVÆ
;

358 if–
objc
!=3 ){

359 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BLOB VARNAME");

360  
TCL_ERROR
;

362 
zBlob
 = 
	`T˛_GëByãAºayFromObj
(
objv
[1], &
nBlob
);

364 
nVÆ
 = 
	`gëFts3V¨öt
((*)
zBlob
, (
sqlôe3_öt64
 *)(&
iVÆ
));

365 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[2], 0, 
	`T˛_NewWideI¡Obj
(
iVÆ
), 0);

366 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nVÆ
));

367  
TCL_OK
;

368 
	}
}

374 
	$Sqlôëe°_hexio_Inô
(
T˛_I¡îp
 *
öãΩ
){

376 *
zName
;

377 
T˛_ObjCmdProc
 *
xProc
;

378 } 
aObjCmd
[] = {

379 { "hexio_ªad", 
hexio_ªad
 },

380 { "hexio_wrôe", 
hexio_wrôe
 },

381 { "hexio_gë_öt", 
hexio_gë_öt
 },

382 { "hexio_ªndî_öt16", 
hexio_ªndî_öt16
 },

383 { "hexio_ªndî_öt32", 
hexio_ªndî_öt32
 },

384 { "utf8_to_utf8", 
utf8_to_utf8
 },

385 { "ªad_·s3v¨öt", 
ªad_·s3v¨öt
 },

387 
i
;

388 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

389 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

391  
TCL_OK
;

392 
	}
}

	@test_init.c

28 
	~"sqlôeI¡.h
"

29 
	~<°rög.h
>

30 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

31 
	~"sqlôe_t˛.h
"

33 
	~"t˛.h
"

36 
	sWøµed
 {

37 
sqlôe3_pˇche_mëhods2
 
	mpˇche
;

38 
sqlôe3_mem_mëhods
 
	mmem
;

39 
sqlôe3_muãx_mëhods
 
	mmuãx
;

41 
	mmem_öô
;

42 
	mmem_Áû
;

43 
	mmuãx_öô
;

44 
	mmuãx_Áû
;

45 
	mpˇche_öô
;

46 
	mpˇche_Áû
;

47 } 
	gwøµed
;

49 
	$wrMemInô
(*
pAµD©a
){

50 
rc
;

51 if–
wøµed
.
mem_Áû
 ){

52 
rc
 = 
SQLITE_ERROR
;

54 
rc
 = 
wøµed
.
mem
.
	`xInô
(wøµed.mem.
pAµD©a
);

56 if–
rc
==
SQLITE_OK
 ){

57 
wøµed
.
mem_öô
 = 1;

59  
rc
;

60 
	}
}

61 
	$wrMemShutdown
(*
pAµD©a
){

62 
wøµed
.
mem
.
	`xShutdown
(wøµed.mem.
pAµD©a
);

63 
wøµed
.
mem_öô
 = 0;

64 
	}
}

65 *
	$wrMemMÆloc
(
n
Ë{ 
wøµed
.
mem
.
	`xMÆloc
“);
	}
}

66 
	$wrMemFªe
(*
p
Ë{
wøµed
.
mem
.
	`xFªe
’);
	}
}

67 *
	$wrMemRóŒoc
(*
p
, 
n
Ë{ 
wøµed
.
mem
.
	`xRóŒoc
’,Ç);
	}
}

68 
	$wrMemSize
(*
p
Ë{ 
wøµed
.
mem
.
	`xSize
’);
	}
}

69 
	$wrMemRoundup
(
n
Ë{ 
wøµed
.
mem
.
	`xRoundup
“);
	}
}

72 
	$wrMuãxInô
(){

73 
rc
;

74 if–
wøµed
.
muãx_Áû
 ){

75 
rc
 = 
SQLITE_ERROR
;

77 
rc
 = 
wøµed
.
muãx
.
	`xMuãxInô
();

79 if–
rc
==
SQLITE_OK
 ){

80 
wøµed
.
muãx_öô
 = 1;

82  
rc
;

83 
	}
}

84 
	$wrMuãxEnd
(){

85 
wøµed
.
muãx
.
	`xMuãxEnd
();

86 
wøµed
.
muãx_öô
 = 0;

87  
SQLITE_OK
;

88 
	}
}

89 
sqlôe3_muãx
 *
	$wrMuãxAŒoc
(
e
){

90  
wøµed
.
muãx
.
	`xMuãxAŒoc
(
e
);

91 
	}
}

92 
	$wrMuãxFªe
(
sqlôe3_muãx
 *
p
){

93 
wøµed
.
muãx
.
	`xMuãxFªe
(
p
);

94 
	}
}

95 
	$wrMuãxE¡î
(
sqlôe3_muãx
 *
p
){

96 
wøµed
.
muãx
.
	`xMuãxE¡î
(
p
);

97 
	}
}

98 
	$wrMuãxTry
(
sqlôe3_muãx
 *
p
){

99  
wøµed
.
muãx
.
	`xMuãxTry
(
p
);

100 
	}
}

101 
	$wrMuãxLóve
(
sqlôe3_muãx
 *
p
){

102 
wøµed
.
muãx
.
	`xMuãxLóve
(
p
);

103 
	}
}

104 
	$wrMuãxHñd
(
sqlôe3_muãx
 *
p
){

105  
wøµed
.
muãx
.
	`xMuãxHñd
(
p
);

106 
	}
}

107 
	$wrMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

108  
wøµed
.
muãx
.
	`xMuãxNŸhñd
(
p
);

109 
	}
}

113 
	$wrPCacheInô
(*
pArg
){

114 
rc
;

115 if–
wøµed
.
pˇche_Áû
 ){

116 
rc
 = 
SQLITE_ERROR
;

118 
rc
 = 
wøµed
.
pˇche
.
	`xInô
(wøµed.pˇche.
pArg
);

120 if–
rc
==
SQLITE_OK
 ){

121 
wøµed
.
pˇche_öô
 = 1;

123  
rc
;

124 
	}
}

125 
	$wrPCacheShutdown
(*
pArg
){

126 
wøµed
.
pˇche
.
	`xShutdown
(wøµed.pˇche.
pArg
);

127 
wøµed
.
pˇche_öô
 = 0;

128 
	}
}

130 
sqlôe3_pˇche
 *
	$wrPCacheCª©e
(
a
, 
b
, 
c
){

131  
wøµed
.
pˇche
.
	`xCª©e
(
a
, 
b
, 
c
);

132 
	}
}

133 
	$wrPCacheCachesize
(
sqlôe3_pˇche
 *
p
, 
n
){

134 
wøµed
.
pˇche
.
	`xCachesize
(
p
, 
n
);

135 
	}
}

136 
	$wrPCachePagecou¡
(
sqlôe3_pˇche
 *
p
){

137  
wøµed
.
pˇche
.
	`xPagecou¡
(
p
);

138 
	}
}

139 
sqlôe3_pˇche_∑ge
 *
	$wrPCacheFëch
(
sqlôe3_pˇche
 *
p
, 
a
, 
b
){

140  
wøµed
.
pˇche
.
	`xFëch
(
p
, 
a
, 
b
);

141 
	}
}

142 
	$wrPCacheU≈ö
(
sqlôe3_pˇche
 *
p
, 
sqlôe3_pˇche_∑ge
 *
a
, 
b
){

143 
wøµed
.
pˇche
.
	`xU≈ö
(
p
, 
a
, 
b
);

144 
	}
}

145 
	$wrPCacheRekey
(

146 
sqlôe3_pˇche
 *
p
,

147 
sqlôe3_pˇche_∑ge
 *
a
,

148 
b
,

149 
c


151 
wøµed
.
pˇche
.
	`xRekey
(
p
, 
a
, 
b
, 
c
);

152 
	}
}

153 
	$wrPCacheTrunˇã
(
sqlôe3_pˇche
 *
p
, 
a
){

154 
wøµed
.
pˇche
.
	`xTrunˇã
(
p
, 
a
);

155 
	}
}

156 
	$wrPCacheDe°roy
(
sqlôe3_pˇche
 *
p
){

157 
wøµed
.
pˇche
.
	`xDe°roy
(
p
);

158 
	}
}

160 
	$ö°ÆlInôWøµîs
(){

161 
sqlôe3_muãx_mëhods
 
muãxmëhods
 = {

162 
wrMuãxInô
, 
wrMuãxEnd
, 
wrMuãxAŒoc
,

163 
wrMuãxFªe
, 
wrMuãxE¡î
, 
wrMuãxTry
,

164 
wrMuãxLóve
, 
wrMuãxHñd
, 
wrMuãxNŸhñd


166 
sqlôe3_pˇche_mëhods2
 
pˇchemëhods
 = {

168 
wrPCacheInô
, 
wrPCacheShutdown
, 
wrPCacheCª©e
,

169 
wrPCacheCachesize
, 
wrPCachePagecou¡
, 
wrPCacheFëch
,

170 
wrPCacheU≈ö
, 
wrPCacheRekey
, 
wrPCacheTrunˇã
,

171 
wrPCacheDe°roy


173 
sqlôe3_mem_mëhods
 
memmëhods
 = {

174 
wrMemMÆloc
, 
wrMemFªe
, 
wrMemRóŒoc
,

175 
wrMemSize
, 
wrMemRoundup
, 
wrMemInô
,

176 
wrMemShutdown
,

180 
	`mem£t
(&
wøµed
, 0, (wrapped));

182 
	`sqlôe3_shutdown
();

183 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMUTEX
, &
wøµed
.
muãx
);

184 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
wøµed
.
mem
);

185 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETPCACHE2
, &
wøµed
.
pˇche
);

186 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
muãxmëhods
);

187 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
memmëhods
);

188 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
pˇchemëhods
);

189 
	}
}

191 
SQLITE_TCLAPI
 
	$öô_wøµî_ö°Æl
(

192 
Clõ¡D©a
 
˛õ¡D©a
,

193 
T˛_I¡îp
 *
öãΩ
,

194 
objc
,

195 
T˛_Obj
 *
CONST
 
objv
[]

197 
i
;

198 
	`ö°ÆlInôWøµîs
();

199 
i
=1; i<
objc
; i++){

200 *
z
 = 
	`T˛_GëSåög
(
objv
[
i
]);

201 if–
	`°rcmp
(
z
, "mem")==0 ){

202 
wøµed
.
mem_Áû
 = 1;

203 }if–
	`°rcmp
(
z
, "mutex")==0 ){

204 
wøµed
.
muãx_Áû
 = 1;

205 }if–
	`°rcmp
(
z
, "pcache")==0 ){

206 
wøµed
.
pˇche_Áû
 = 1;

208 
	`T˛_AµídResu…
(
öãΩ
, "Unknow¿¨gumít: \"", 
z
, "\"");

209  
TCL_ERROR
;

212  
TCL_OK
;

213 
	}
}

215 
SQLITE_TCLAPI
 
	$öô_wøµî_unö°Æl
(

216 
Clõ¡D©a
 
˛õ¡D©a
,

217 
T˛_I¡îp
 *
öãΩ
,

218 
objc
,

219 
T˛_Obj
 *
CONST
 
objv
[]

221 if–
objc
!=1 ){

222 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

223  
TCL_ERROR
;

226 
	`sqlôe3_shutdown
();

227 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
wøµed
.
muãx
);

228 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
wøµed
.
mem
);

229 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
wøµed
.
pˇche
);

230  
TCL_OK
;

231 
	}
}

233 
SQLITE_TCLAPI
 
	$öô_wøµî_˛ór
(

234 
Clõ¡D©a
 
˛õ¡D©a
,

235 
T˛_I¡îp
 *
öãΩ
,

236 
objc
,

237 
T˛_Obj
 *
CONST
 
objv
[]

239 if–
objc
!=1 ){

240 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

241  
TCL_ERROR
;

244 
wøµed
.
mem_Áû
 = 0;

245 
wøµed
.
muãx_Áû
 = 0;

246 
wøµed
.
pˇche_Áû
 = 0;

247  
TCL_OK
;

248 
	}
}

250 
SQLITE_TCLAPI
 
	$öô_wøµî_quîy
(

251 
Clõ¡D©a
 
˛õ¡D©a
,

252 
T˛_I¡îp
 *
öãΩ
,

253 
objc
,

254 
T˛_Obj
 *
CONST
 
objv
[]

256 
T˛_Obj
 *
pRë
;

258 if–
objc
!=1 ){

259 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

260  
TCL_ERROR
;

263 
pRë
 = 
	`T˛_NewObj
();

264 if–
wøµed
.
muãx_öô
 ){

265 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("mutex", -1));

267 if–
wøµed
.
mem_öô
 ){

268 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("mem", -1));

270 if–
wøµed
.
pˇche_öô
 ){

271 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
("pcache", -1));

274 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

275  
TCL_OK
;

276 
	}
}

278 
	$Sqlôëe°_öô_Inô
(
T˛_I¡îp
 *
öãΩ
){

280 *
zName
;

281 
T˛_ObjCmdProc
 *
xProc
;

282 } 
aObjCmd
[] = {

283 {"öô_wøµî_ö°Æl", 
öô_wøµî_ö°Æl
},

284 {"öô_wøµî_quîy", 
öô_wøµî_quîy
 },

285 {"öô_wøµî_unö°Æl", 
öô_wøµî_unö°Æl
},

286 {"öô_wøµî_˛ór", 
öô_wøµî_˛ór
}

288 
i
;

290 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

291 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 0, 0);

294  
TCL_OK
;

295 
	}
}

	@test_intarray.c

17 
	~"ã°_öèºay.h
"

18 
	~<°rög.h
>

19 
	~<as£π.h
>

30 
	ssqlôe3_öèºay
 {

31 
	mn
;

32 
sqlôe3_öt64
 *
	ma
;

33 (*
	mxFªe
)(*);

37 
öèºay_vèb
 
	töèºay_vèb
;

38 
öèºay_curs‹
 
	töèºay_curs‹
;

41 
	söèºay_vèb
 {

42 
sqlôe3_vèb
 
	mba£
;

43 
sqlôe3_öèºay
 *
	mpC⁄ã¡
;

47 
	söèºay_curs‹
 {

48 
sqlôe3_vèb_curs‹
 
	mba£
;

49 
	mi
;

55 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


60 
	$öèºayFªe
(
sqlôe3_öèºay
 *
p
){

61 if–
p
->
xFªe
 ){

62 
p
->
	`xFªe
’->
a
);

64 
	`sqlôe3_‰ì
(
p
);

65 
	}
}

70 
	$öèºayDe°roy
(
sqlôe3_vèb
 *
p
){

71 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb*)
p
;

72 
	`sqlôe3_‰ì
(
pVèb
);

74 
	}
}

79 
	$öèºayCª©e
(

80 
sqlôe3
 *
db
,

81 *
pAux
,

82 
¨gc
,

83 c⁄° *c⁄°*
¨gv
,

84 
sqlôe3_vèb
 **
µVèb
,

85 **
pzEº


87 
rc
 = 
SQLITE_NOMEM
;

88 
öèºay_vèb
 *
pVèb
 = 
	`sqlôe3_mÆloc64
((intarray_vtab));

90 if–
pVèb
 ){

91 
	`mem£t
(
pVèb
, 0, (
öèºay_vèb
));

92 
pVèb
->
pC⁄ã¡
 = (
sqlôe3_öèºay
*)
pAux
;

93 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, "CREATE TABLE x(value INTEGER PRIMARY KEY)");

95 *
µVèb
 = (
sqlôe3_vèb
 *)
pVèb
;

96  
rc
;

97 
	}
}

102 
	$öèºayO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

103 
rc
 = 
SQLITE_NOMEM
;

104 
öèºay_curs‹
 *
pCur
;

105 
pCur
 = 
	`sqlôe3_mÆloc64
((
öèºay_curs‹
));

106 if–
pCur
 ){

107 
	`mem£t
(
pCur
, 0, (
öèºay_curs‹
));

108 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

109 
rc
 = 
SQLITE_OK
;

111  
rc
;

112 
	}
}

117 
	$öèºayClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

118 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

119 
	`sqlôe3_‰ì
(
pCur
);

120  
SQLITE_OK
;

121 
	}
}

126 
	$öèºayCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

127 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹*)
cur
;

128 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb*)
cur
->pVtab;

129 if–
pCur
->
i
>=0 &&ÖCur->i<
pVèb
->
pC⁄ã¡
->
n
 ){

130 
	`sqlôe3_ªsu…_öt64
(
˘x
, 
pVèb
->
pC⁄ã¡
->
a
[
pCur
->
i
]);

132  
SQLITE_OK
;

133 
	}
}

138 
	$öèºayRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

139 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

140 *
pRowid
 = 
pCur
->
i
;

141  
SQLITE_OK
;

142 
	}
}

144 
	$öèºayEof
(
sqlôe3_vèb_curs‹
 *
cur
){

145 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

146 
öèºay_vèb
 *
pVèb
 = (öèºay_vèb *)
cur
->pVtab;

147  
pCur
->
i
>=
pVèb
->
pC⁄ã¡
->
n
;

148 
	}
}

153 
	$öèºayNext
(
sqlôe3_vèb_curs‹
 *
cur
){

154 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
cur
;

155 
pCur
->
i
++;

156  
SQLITE_OK
;

157 
	}
}

162 
	$öèºayFûãr
(

163 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

164 
idxNum
, c⁄° *
idxSå
,

165 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


167 
öèºay_curs‹
 *
pCur
 = (öèºay_curs‹ *)
pVèbCurs‹
;

168 
pCur
->
i
 = 0;

169  
SQLITE_OK
;

170 
	}
}

175 
	$öèºayBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

176  
SQLITE_OK
;

177 
	}
}

183 
sqlôe3_moduÀ
 
	göèºayModuÀ
 = {

185 
öèºayCª©e
,

186 
öèºayCª©e
,

187 
öèºayBe°Index
,

188 
öèºayDe°roy
,

189 
öèºayDe°roy
,

190 
öèºayO≥n
,

191 
öèºayClo£
,

192 
öèºayFûãr
,

193 
öèºayNext
,

194 
öèºayEof
,

195 
öèºayCﬁumn
,

196 
öèºayRowid
,

219 
SQLITE_API
 
	$sqlôe3_öèºay_¸óã
(

220 
sqlôe3
 *
db
,

221 c⁄° *
zName
,

222 
sqlôe3_öèºay
 **
µRëu∫


224 
rc
 = 
SQLITE_OK
;

225 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


226 
sqlôe3_öèºay
 *
p
;

228 *
µRëu∫
 = 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

229 if–
p
==0 ){

230  
SQLITE_NOMEM
;

232 
	`mem£t
(
p
, 0, (*p));

233 
rc
 = 
	`sqlôe3_¸óã_moduÀ_v2
(
db
, 
zName
, &
öèºayModuÀ
, 
p
,

234 ((*)(*))
öèºayFªe
);

235 if–
rc
==
SQLITE_OK
 ){

236 *
zSql
;

237 
zSql
 = 
	`sqlôe3_m¥ötf
("CREATE VIRTUAL TABLEÅemp.%Q USING %Q",

238 
zName
, zName);

239 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 0, 0, 0);

240 
	`sqlôe3_‰ì
(
zSql
);

243  
rc
;

244 
	}
}

253 
SQLITE_API
 
sqlôe3_öèºay_böd
(

254 
sqlôe3_öèºay
 *
pI¡Aºay
,

255 
nEÀmíts
,

256 
sqlôe3_öt64
 *
aEÀmíts
,

257 (*
xFªe
)(*)

259 if–
pI¡Aºay
->
xFªe
 ){

260 
pI¡Aºay
->
	`xFªe
’I¡Aºay->
a
);

262 
pI¡Aºay
->
n
 = 
nEÀmíts
;

263 
pI¡Aºay
->
a
 = 
aEÀmíts
;

264 
pI¡Aºay
->
xFªe
 = xFree;

265  
SQLITE_OK
;

266 
	}
}

272 #ifde‡
SQLITE_TEST


273 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

274 
	~"sqlôe_t˛.h
"

276 
	~"t˛.h
"

277 #i‚de‡
SQLITE_TCLAPI


278 
	#SQLITE_TCLAPI


	)

285 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

286 *
sqlôe3Te°TextToPå
(const *);

287 
sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
*, *
zPå
, *);

288 c⁄° *
sqlôe3EºName
();

296 
SQLITE_TCLAPI
 
	$ã°_öèºay_¸óã
(

297 
Clõ¡D©a
 
˛õ¡D©a
,

298 
T˛_I¡îp
 *
öãΩ
,

299 
objc
,

300 
T˛_Obj
 *
CONST
 
objv
[]

302 
sqlôe3
 *
db
;

303 c⁄° *
zName
;

304 
sqlôe3_öèºay
 *
pAºay
;

305 
rc
 = 
SQLITE_OK
;

306 
zPå
[100];

308 if–
objc
!=3 ){

309 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

310  
TCL_ERROR
;

312 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

313 
zName
 = 
	`T˛_GëSåög
(
objv
[2]);

314 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


315 
rc
 = 
	`sqlôe3_öèºay_¸óã
(
db
, 
zName
, &
pAºay
);

317 if–
rc
!=
SQLITE_OK
 ){

318 
	`as£π
–
pAºay
==0 );

319 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), (*)0);

320  
TCL_ERROR
;

322 
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zPå
, 
pAºay
);

323 
	`T˛_AµídResu…
(
öãΩ
, 
zPå
, (*)0);

324  
TCL_OK
;

325 
	}
}

332 
SQLITE_TCLAPI
 
	$ã°_öèºay_böd
(

333 
Clõ¡D©a
 
˛õ¡D©a
,

334 
T˛_I¡îp
 *
öãΩ
,

335 
objc
,

336 
T˛_Obj
 *
CONST
 
objv
[]

338 
sqlôe3_öèºay
 *
pAºay
;

339 
rc
 = 
SQLITE_OK
;

340 
i
, 
n
;

341 
sqlôe3_öt64
 *
a
;

343 if–
objc
<2 ){

344 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "INTARRAY");

345  
TCL_ERROR
;

347 
pAºay
 = (
sqlôe3_öèºay
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

348 
n
 = 
objc
 - 2;

349 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


350 
a
 = 
	`sqlôe3_mÆloc64
–◊[0])*
n
 );

351 if–
a
==0 ){

352 
	`T˛_AµídResu…
(
öãΩ
, "SQLITE_NOMEM", (*)0);

353  
TCL_ERROR
;

355 
i
=0; i<
n
; i++){

356 
T˛_WideI¡
 
x
 = 0;

357 
	`T˛_GëWideI¡FromObj
(0, 
objv
[
i
+2], &
x
);

358 
a
[
i
] = 
x
;

360 
rc
 = 
	`sqlôe3_öèºay_böd
(
pAºay
, 
n
, 
a
, 
sqlôe3_‰ì
);

361 if–
rc
!=
SQLITE_OK
 ){

362 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºName
(
rc
), (*)0);

363  
TCL_ERROR
;

366  
TCL_OK
;

367 
	}
}

372 
	$Sqlôëe°öèºay_Inô
(
T˛_I¡îp
 *
öãΩ
){

374 *
zName
;

375 
T˛_ObjCmdProc
 *
xProc
;

376 *
˛õ¡D©a
;

377 } 
aObjCmd
[] = {

378 { "sqlôe3_öèºay_¸óã", 
ã°_öèºay_¸óã
, 0 },

379 { "sqlôe3_öèºay_böd", 
ã°_öèºay_böd
, 0 },

381 
i
;

382 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

383 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

384 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

386  
TCL_OK
;

387 
	}
}

	@test_intarray.h

77 
	~"sqlôe3.h
"

78 #i‚de‡
SQLITE_INTARRAY_H


79 
	#SQLITE_INTARRAY_H


	)

84 #ifde‡
__˝lu•lus


92 
sqlôe3_öèºay
 
	tsqlôe3_öèºay
;

105 
SQLITE_API
 
sqlôe3_öèºay_¸óã
(

106 
sqlôe3
 *
db
,

107 c⁄° *
zName
,

108 
sqlôe3_öèºay
 **
µRëu∫


118 
SQLITE_API
 
sqlôe3_öèºay_böd
(

119 
sqlôe3_öèºay
 *
pI¡Aºay
,

120 
nEÀmíts
,

121 
sqlôe3_öt64
 *
aEÀmíts
,

122 (*
xFªe
)(*)

125 #ifde‡
__˝lu•lus


	@test_journal.c

96 #i‡
SQLITE_TEST


98 
	~"sqlôe3.h
"

99 
	~"sqlôeI¡.h
"

104 
	#JT_MAX_PATHNAME
 512

	)

109 
	#JT_VFS_NAME
 "jt"

	)

111 
jt_fûe
 
	tjt_fûe
;

112 
	sjt_fûe
 {

113 
sqlôe3_fûe
 
	mba£
;

114 c⁄° *
	mzName
;

115 
	mÊags
;

118 
	meLock
;

119 
u32
 
	mnPage
;

120 
u32
 
	mnPagesize
;

121 
Bôvec
 *
	mpWrôabÀ
;

122 
u32
 *
	maCksum
;

123 
	mnSync
;

126 
sqlôe3_öt64
 
	miMaxOff
;

128 
jt_fûe
 *
	mpNext
;

129 
sqlôe3_fûe
 *
	mpRól
;

135 
jtClo£
(
sqlôe3_fûe
*);

136 
jtRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

137 
jtWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

138 
jtTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

139 
jtSync
(
sqlôe3_fûe
*, 
Êags
);

140 
jtFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

141 
jtLock
(
sqlôe3_fûe
*, );

142 
jtU∆ock
(
sqlôe3_fûe
*, );

143 
jtCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

144 
jtFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

145 
jtSe˘‹Size
(
sqlôe3_fûe
*);

146 
jtDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

151 
jtO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

152 
jtDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

153 
jtAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

154 
jtFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

155 *
jtDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

156 
jtDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

157 (*
	$jtDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

158 
	`jtDlClo£
(
sqlôe3_vfs
*, *);

159 
	`jtR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

160 
	`jtSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

161 
	`jtCuºítTime
(
sqlôe3_vfs
*, *);

162 
	`jtCuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

163 
	`jtGëLa°Eº‹
(
sqlôe3_vfs
*, , *);

165 
sqlôe3_vfs
 
jt_vfs
 = {

167 (
jt_fûe
),

168 
JT_MAX_PATHNAME
,

170 
JT_VFS_NAME
,

172 
jtO≥n
,

173 
jtDñëe
,

174 
jtAc˚ss
,

175 
jtFuŒP©h«me
,

176 
jtDlO≥n
,

177 
jtDlEº‹
,

178 
jtDlSym
,

179 
jtDlClo£
,

180 
jtR™dom√ss
,

181 
jtSÀï
,

182 
jtCuºítTime
,

183 
jtGëLa°Eº‹
,

184 
jtCuºítTimeI¡64


185 
	}
};

187 
sqlôe3_io_mëhods
 
	gjt_io_mëhods
 = {

189 
jtClo£
,

190 
jtRód
,

191 
jtWrôe
,

192 
jtTrunˇã
,

193 
jtSync
,

194 
jtFûeSize
,

195 
jtLock
,

196 
jtU∆ock
,

197 
jtCheckRe£rvedLock
,

198 
jtFûeC⁄åﬁ
,

199 
jtSe˘‹Size
,

200 
jtDevi˚Ch¨a˘îi°ics


203 
	sJtGlobÆ
 {

204 
sqlôe3_vfs
 *
	mpVfs
;

205 
jt_fûe
 *
	mpLi°
;

207 
JtGlobÆ
 
	gg
 = {0, 0};

213 
	$íãrJtMuãx
(){

214 
	`sqlôe3_muãx_íãr
(
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_PRNG
));

215 
	}
}

216 
	$ÀaveJtMuãx
(){

217 
	`sqlôe3_muãx_Àave
(
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_PRNG
));

218 
	}
}

220 
sqlôe3_io_îr‹_≥ndög
;

221 
sqlôe3_io_îr‹_hô
;

222 
	$°›_i€º_simuœti⁄
(*
piSave
, *
piSave2
){

223 *
piSave
 = 
sqlôe3_io_îr‹_≥ndög
;

224 *
piSave2
 = 
sqlôe3_io_îr‹_hô
;

225 
sqlôe3_io_îr‹_≥ndög
 = -1;

226 
sqlôe3_io_îr‹_hô
 = 0;

227 
	}
}

228 
	$°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
){

229 
sqlôe3_io_îr‹_≥ndög
 = 
iSave
;

230 
sqlôe3_io_îr‹_hô
 = 
iSave2
;

231 
	}
}

238 
	$˛o£Tønß˘i⁄
(
jt_fûe
 *
p
){

239 
	`sqlôe3BôvecDe°roy
(
p
->
pWrôabÀ
);

240 
	`sqlôe3_‰ì
(
p
->
aCksum
);

241 
p
->
pWrôabÀ
 = 0;

242 
p
->
aCksum
 = 0;

243 
p
->
nSync
 = 0;

244 
	}
}

249 
	$jtClo£
(
sqlôe3_fûe
 *
pFûe
){

250 
jt_fûe
 **
µ
;

251 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

253 
	`˛o£Tønß˘i⁄
(
p
);

254 
	`íãrJtMuãx
();

255 if–
p
->
zName
 ){

256 
µ
=&
g
.
pLi°
; *µ!=
p
;Öp=&(*µ)->
pNext
);

257 *
µ
 = 
p
->
pNext
;

259 
	`ÀaveJtMuãx
();

260 
	`sqlôe3OsClo£
(
p
->
pRól
);

261  
SQLITE_OK
;

262 
	}
}

267 
	$jtRód
(

268 
sqlôe3_fûe
 *
pFûe
,

269 *
zBuf
,

270 
iAmt
,

271 
sqlôe_öt64
 
iOf°


273 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

274  
	`sqlôe3OsRód
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

275 
	}
}

292 
jt_fûe
 *
	$loˇãD©aba£H™dÀ
(c⁄° *
zJou∫Æ
, 
noLock
){

293 
jt_fûe
 *
pMaö
 = 0;

294 
	`íãrJtMuãx
();

295 
pMaö
=
g
.
pLi°
;ÖMaö;ÖMaöıMaö->
pNext
){

296 
nName
 = ()(
	`°æí
(
zJou∫Æ
) - strlen("-journal"));

297 if–(
pMaö
->
Êags
&
SQLITE_OPEN_MAIN_DB
)

298 && (()
	`°æí
(
pMaö
->
zName
)==
nName
)

299 && 0==
	`memcmp
(
pMaö
->
zName
, 
zJou∫Æ
, 
nName
)

300 && ((
pMaö
->
eLock
>=
SQLITE_LOCK_RESERVED
Ë|| 
noLock
)

305 
	`ÀaveJtMuãx
();

306  
pMaö
;

307 
	}
}

314 
u32
 
	$decodeUöt32
(c⁄° *
z
){

315  (
z
[0]<<24) + (z[1]<<16) + (z[2]<<8) + z[3];

316 
	}
}

322 
u32
 
	$gíCksum
(c⁄° *
z
, 
n
){

323 
i
;

324 
u32
 
cksum
 = 0;

325 
i
=0; i<
n
; i++){

326 
cksum
 = cksum + 
z
[
i
] + (cksum<<3);

328  
cksum
;

329 
	}
}

340 
	$decodeJou∫ÆHdr
(

341 c⁄° *
zBuf
,

342 
u32
 *
≤Rec
,

343 
u32
 *
≤Page
,

344 
u32
 *
≤Se˘‹
,

345 
u32
 *
≤Pagesize


347 
aMagic
[] = { 0xd9, 0xd5, 0x05, 0xf9, 0x20, 0xa1, 0x63, 0xd7 };

348 if–
	`memcmp
(
aMagic
, 
zBuf
, 8ËË 
SQLITE_ERROR
;

349 if–
≤Rec
 ) *≤Re¯
	`decodeUöt32
(&
zBuf
[8]);

350 if–
≤Page
 ) *≤Pagê
	`decodeUöt32
(&
zBuf
[16]);

351 if–
≤Se˘‹
 ) *≤Se˘‹ = 
	`decodeUöt32
(&
zBuf
[20]);

352 if–
≤Pagesize
 ) *≤Pagesizê
	`decodeUöt32
(&
zBuf
[24]);

353  
SQLITE_OK
;

354 
	}
}

360 
	$›íTønß˘i⁄
(
jt_fûe
 *
pMaö
, jt_fûê*
pJou∫Æ
){

361 *
aD©a
;

362 
sqlôe3_fûe
 *
p
 = 
pMaö
->
pRól
;

363 
rc
 = 
SQLITE_OK
;

365 
	`˛o£Tønß˘i⁄
(
pMaö
);

366 
aD©a
 = 
	`sqlôe3_mÆloc
(
pMaö
->
nPagesize
);

367 
pMaö
->
pWrôabÀ
 = 
	`sqlôe3BôvecCª©e
’Maö->
nPage
);

368 
pMaö
->
aCksum
 = 
	`sqlôe3_mÆloc
((
u32
Ë* (pMaö->
nPage
 + 1));

369 
pJou∫Æ
->
iMaxOff
 = 0;

371 if–!
pMaö
->
pWrôabÀ
 || !pMaö->
aCksum
 || !
aD©a
 ){

372 
rc
 = 
SQLITE_IOERR_NOMEM
;

373 }if–
pMaö
->
nPage
>0 ){

374 
u32
 
iTrunk
;

375 
iSave
;

376 
iSave2
;

378 
	`°›_i€º_simuœti⁄
(&
iSave
, &
iSave2
);

383 
rc
 = 
	`sqlôe3OsRód
(
p
, 
aD©a
, 
pMaö
->
nPagesize
, 0);

384 if–
rc
==
SQLITE_OK
 ){

385 
u32
 
nDbsize
 = 
	`decodeUöt32
(&
aD©a
[28]);

386 if–
nDbsize
>0 && 
	`memcmp
(&
aD©a
[24], &aData[92], 4)==0 ){

387 
u32
 
iPg
;

388 
iPg
=
nDbsize
+1; iPg<=
pMaö
->
nPage
; iPg++){

389 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
iPg
);

393 
iTrunk
 = 
	`decodeUöt32
(&
aD©a
[32]);

394  
rc
==
SQLITE_OK
 && 
iTrunk
>0 ){

395 
u32
 
nLóf
;

396 
u32
 
iLóf
;

397 
sqlôe3_öt64
 
iOff
 = (
i64
)(
iTrunk
-1)*
pMaö
->
nPagesize
;

398 
rc
 = 
	`sqlôe3OsRód
(
p
, 
aD©a
, 
pMaö
->
nPagesize
, 
iOff
);

399 
nLóf
 = 
	`decodeUöt32
(&
aD©a
[4]);

400 
iLóf
=0; 
rc
==
SQLITE_OK
 && iLóf<
nLóf
; iLeaf++){

401 
u32
 
pgno
 = 
	`decodeUöt32
(&
aD©a
[8+4*
iLóf
]);

402 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
pgno
);

404 
iTrunk
 = 
	`decodeUöt32
(
aD©a
);

408 if–
rc
==
SQLITE_OK
 ){

409 
ii
;

410 
ii
=0; 
rc
==
SQLITE_OK
 && ii<()
pMaö
->
nPage
; ii++){

411 
i64
 
iOff
 = (i64)(
pMaö
->
nPagesize
Ë* (i64)
ii
;

412 if–
iOff
==
PENDING_BYTE
 ) ;

413 
rc
 = 
	`sqlôe3OsRód
(
pMaö
->
pRól
, 
aD©a
,ÖMaö->
nPagesize
, 
iOff
);

414 
pMaö
->
aCksum
[
ii
] = 
	`gíCksum
(
aD©a
,ÖMaö->
nPagesize
);

415 if–
ii
+1==()
pMaö
->
nPage
 && 
rc
==
SQLITE_IOERR_SHORT_READ
 ){

416 
rc
 = 
SQLITE_OK
;

421 
	`°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
);

424 
	`sqlôe3_‰ì
(
aD©a
);

425  
rc
;

426 
	}
}

433 
	$ªadJou∫ÆFûe
(
jt_fûe
 *
p
, jt_fûê*
pMaö
){

434 
rc
 = 
SQLITE_OK
;

435 
zBuf
[28];

436 
sqlôe3_fûe
 *
pRól
 = 
p
->pReal;

437 
sqlôe3_öt64
 
iOff
 = 0;

438 
sqlôe3_öt64
 
iSize
 = 
p
->
iMaxOff
;

439 *
aPage
;

440 
iSave
;

441 
iSave2
;

443 
aPage
 = 
	`sqlôe3_mÆloc
(
pMaö
->
nPagesize
);

444 if–!
aPage
 ){

445  
SQLITE_IOERR_NOMEM
;

448 
	`°›_i€º_simuœti⁄
(&
iSave
, &
iSave2
);

450  
rc
==
SQLITE_OK
 && 
iOff
<
iSize
 ){

451 
u32
 
nRec
, 
nPage
, 
nSe˘‹
, 
nPagesize
;

452 
u32
 
ii
;

455 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 28, 
iOff
);

456 if–
rc
!=
SQLITE_OK


457 || 
	`decodeJou∫ÆHdr
(
zBuf
, &
nRec
, &
nPage
, &
nSe˘‹
, &
nPagesize
)

459 
föish_rjf
;

461 
iOff
 +
nSe˘‹
;

463 if–
nRec
==0 ){

468 if–
iSize
>=(
iOff
+
nSe˘‹
) ){

469 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 28, 
iOff
);

470 if–
rc
!=
SQLITE_OK
 || 0==
	`decodeJou∫ÆHdr
(
zBuf
, 0, 0, 0, 0) ){

474 
nRec
 = (
u32
)((
iSize
-
iOff
Ë/ (
pMaö
->
nPagesize
+8));

478 
ii
=0; 
rc
==
SQLITE_OK
 && ii<
nRec
 && 
iOff
<
iSize
; ii++){

479 
u32
 
pgno
;

480 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
zBuf
, 4, 
iOff
);

481 if–
rc
==
SQLITE_OK
 ){

482 
pgno
 = 
	`decodeUöt32
(
zBuf
);

483 if–
pgno
>0 &&Ögno<=
pMaö
->
nPage
 ){

484 if–0==
	`sqlôe3BôvecTe°
(
pMaö
->
pWrôabÀ
, 
pgno
) ){

485 
rc
 = 
	`sqlôe3OsRód
(
pRól
, 
aPage
, 
pMaö
->
nPagesize
, 
iOff
+4);

486 if–
rc
==
SQLITE_OK
 ){

487 
u32
 
cksum
 = 
	`gíCksum
(
aPage
, 
pMaö
->
nPagesize
);

488 
	`as£π
–
cksum
==
pMaö
->
aCksum
[
pgno
-1] );

491 
	`sqlôe3BôvecSë
(
pMaö
->
pWrôabÀ
, 
pgno
);

493 
iOff
 +(8 + 
pMaö
->
nPagesize
);

497 
iOff
 = ((iOf‡+ (
nSe˘‹
-1)) /ÇSector) *ÇSector;

500 
föish_rjf
:

501 
	`°¨t_i€º_simuœti⁄
(
iSave
, 
iSave2
);

502 
	`sqlôe3_‰ì
(
aPage
);

503 if–
rc
==
SQLITE_IOERR_SHORT_READ
 ){

504 
rc
 = 
SQLITE_OK
;

506  
rc
;

507 
	}
}

512 
	$jtWrôe
(

513 
sqlôe3_fûe
 *
pFûe
,

514 c⁄° *
zBuf
,

515 
iAmt
,

516 
sqlôe_öt64
 
iOf°


518 
rc
;

519 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

520 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

521 if–
iOf°
==0 ){

522 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

523 
	`as£π
–
pMaö
 );

525 if–
iAmt
==28 ){

528 
	`˛o£Tønß˘i⁄
(
pMaö
);

529 }if–
iAmt
!=12 ){

532 
u8
 *
z
 = (u8 *)
zBuf
;

533 
pMaö
->
nPage
 = 
	`decodeUöt32
(&
z
[16]);

534 
pMaö
->
nPagesize
 = 
	`decodeUöt32
(&
z
[24]);

535 if–
SQLITE_OK
!=(
rc
=
	`›íTønß˘i⁄
(
pMaö
, 
p
)) ){

536  
rc
;

540 if–
p
->
iMaxOff
<(
iOf°
 + 
iAmt
) ){

541 
p
->
iMaxOff
 = 
iOf°
 + 
iAmt
;

545 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_DB
 &&Ö->
pWrôabÀ
 ){

546 if–
iAmt
<()
p
->
nPagesize


547 && 
p
->
nPagesize
%
iAmt
==0

548 && 
iOf°
>=(
PENDING_BYTE
+512)

549 && 
iOf°
+
iAmt
<=
PENDING_BYTE
+
p
->
nPagesize


557 
u32
 
pgno
 = (u32)(
iOf°
/
p
->
nPagesize
 + 1);

558 
	`as£π
–(
iAmt
==1||iAmt==()
p
->
nPagesize
) &&

559 ((
iOf°
+
iAmt
)%
p
->
nPagesize
)==0 );

560 
	`as£π
–
pgno
<=
p
->
nPage
 ||Ö->
nSync
>0 );

561 
	`as£π
–
pgno
>
p
->
nPage
 || 
	`sqlôe3BôvecTe°
’->
pWrôabÀ
,Ögno) );

565 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

566 if–(
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
Ë&& 
iAmt
==12 ){

567 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

568 
rc2
 = 
	`ªadJou∫ÆFûe
(
p
, 
pMaö
);

569 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

571  
rc
;

572 
	}
}

577 
	$jtTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

578 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

579 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 && 
size
==0 ){

581 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

582 
	`˛o£Tønß˘i⁄
(
pMaö
);

584 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_DB
 &&Ö->
pWrôabÀ
 ){

585 
u32
 
pgno
;

586 
u32
 
lockög_∑ge
 = (u32)(
PENDING_BYTE
/
p
->
nPagesize
+1);

587 
pgno
=(
u32
)(
size
/
p
->
nPagesize
+1);Ögno<ı->
nPage
;Ögno++){

588 
	`as£π
–
pgno
==
lockög_∑ge
 || 
	`sqlôe3BôvecTe°
(
p
->
pWrôabÀ
,Ögno) );

591  
	`sqlôe3OsTrunˇã
(
p
->
pRól
, 
size
);

592 
	}
}

597 
	$jtSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

598 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

600 if–
p
->
Êags
&
SQLITE_OPEN_MAIN_JOURNAL
 ){

601 
rc
;

602 
jt_fûe
 *
pMaö
;

609 
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
p
->
zName
, 0);

612 if–
pMaö
 &&ÖMaö->
pWrôabÀ
 ){

613 
pMaö
->
nSync
++;

614 
rc
 = 
	`ªadJou∫ÆFûe
(
p
, 
pMaö
);

615 if–
rc
!=
SQLITE_OK
 ){

616  
rc
;

621  
	`sqlôe3OsSync
(
p
->
pRól
, 
Êags
);

622 
	}
}

627 
	$jtFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

628 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

629  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

630 
	}
}

635 
	$jtLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

636 
rc
;

637 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

638 
rc
 = 
	`sqlôe3OsLock
(
p
->
pRól
, 
eLock
);

639 if–
rc
==
SQLITE_OK
 && 
eLock
>
p
->eLock ){

640 
p
->
eLock
 =ÉLock;

642  
rc
;

643 
	}
}

648 
	$jtU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

649 
rc
;

650 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

651 
rc
 = 
	`sqlôe3OsU∆ock
(
p
->
pRól
, 
eLock
);

652 if–
rc
==
SQLITE_OK
 && 
eLock
<
p
->eLock ){

653 
p
->
eLock
 =ÉLock;

655  
rc
;

656 
	}
}

661 
	$jtCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

662 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

663  
	`sqlôe3OsCheckRe£rvedLock
(
p
->
pRól
, 
pResOut
);

664 
	}
}

669 
	$jtFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

670 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

671  
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

672 
	}
}

677 
	$jtSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

678 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

679  
	`sqlôe3OsSe˘‹Size
(
p
->
pRól
);

680 
	}
}

685 
	$jtDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

686 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

687  
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
p
->
pRól
);

688 
	}
}

693 
	$jtO≥n
(

694 
sqlôe3_vfs
 *
pVfs
,

695 c⁄° *
zName
,

696 
sqlôe3_fûe
 *
pFûe
,

697 
Êags
,

698 *
pOutFœgs


700 
rc
;

701 
jt_fûe
 *
p
 = (jt_fûê*)
pFûe
;

702 
pFûe
->
pMëhods
 = 0;

703 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

704 
p
->
pRól
->
pMëhods
 = 0;

705 
rc
 = 
	`sqlôe3OsO≥n
(
g
.
pVfs
, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

706 
	`as£π
–
rc
==
SQLITE_OK
 || 
p
->
pRól
->
pMëhods
==0 );

707 if–
rc
==
SQLITE_OK
 ){

708 
pFûe
->
pMëhods
 = &
jt_io_mëhods
;

709 
p
->
eLock
 = 0;

710 
p
->
zName
 = zName;

711 
p
->
Êags
 = flags;

712 
p
->
pNext
 = 0;

713 
p
->
pWrôabÀ
 = 0;

714 
p
->
aCksum
 = 0;

715 
	`íãrJtMuãx
();

716 if–
zName
 ){

717 
p
->
pNext
 = 
g
.
pLi°
;

718 
g
.
pLi°
 = 
p
;

720 
	`ÀaveJtMuãx
();

722  
rc
;

723 
	}
}

730 
	$jtDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

731 
nP©h
 = ()
	`°æí
(
zP©h
);

732 if–
nP©h
>8 && 0==
	`°rcmp
("-jou∫Æ", &
zP©h
[nPath-8]) ){

734 
jt_fûe
 *
pMaö
 = 
	`loˇãD©aba£H™dÀ
(
zP©h
, 0);

735 if–
pMaö
 ){

736 
	`˛o£Tønß˘i⁄
(
pMaö
);

740  
	`sqlôe3OsDñëe
(
g
.
pVfs
, 
zP©h
, 
dúSync
);

741 
	}
}

747 
	$jtAc˚ss
(

748 
sqlôe3_vfs
 *
pVfs
,

749 c⁄° *
zP©h
,

750 
Êags
,

751 *
pResOut


753  
	`sqlôe3OsAc˚ss
(
g
.
pVfs
, 
zP©h
, 
Êags
, 
pResOut
);

754 
	}
}

761 
	$jtFuŒP©h«me
(

762 
sqlôe3_vfs
 *
pVfs
,

763 c⁄° *
zP©h
,

764 
nOut
,

765 *
zOut


767  
	`sqlôe3OsFuŒP©h«me
(
g
.
pVfs
, 
zP©h
, 
nOut
, 
zOut
);

768 
	}
}

773 *
	$jtDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

774  
g
.
pVfs
->
	`xDlO≥n
(g.pVfs, 
zP©h
);

775 
	}
}

782 
	$jtDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

783 
g
.
pVfs
->
	`xDlEº‹
(g.pVfs, 
nByã
, 
zEºMsg
);

784 
	}
}

789 (*
	$jtDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

790  
g
.
pVfs
->
	`xDlSym
(g.pVfs, 
p
, 
zSym
);

791 
	}
}

796 
	$jtDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

797 
g
.
pVfs
->
	`xDlClo£
(g.pVfs, 
pH™dÀ
);

798 
	}
}

804 
	$jtR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

805  
	`sqlôe3OsR™dom√ss
(
g
.
pVfs
, 
nByã
, 
zBufOut
);

806 
	}
}

812 
	$jtSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

813  
	`sqlôe3OsSÀï
(
g
.
pVfs
, 
nMi¸o
);

814 
	}
}

819 
	$jtCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

820  
g
.
pVfs
->
	`xCuºítTime
(g.pVfs, 
pTimeOut
);

821 
	}
}

825 
	$jtCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

826  
g
.
pVfs
->
	`xCuºítTimeI¡64
(g.pVfs, 
pTimeOut
);

827 
	}
}

829 
	$jtGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
n
, *
z
){

830  
g
.
pVfs
->
	`xGëLa°Eº‹
(g.pVfs, 
n
, 
z
);

831 
	}
}

844 
	$jt_ªgi°î
(*
zWøp
, 
isDeÁu…
){

845 
g
.
pVfs
 = 
	`sqlôe3_vfs_föd
(
zWøp
);

846 if–
g
.
pVfs
==0 ){

847  
SQLITE_ERROR
;

849 
jt_vfs
.
szOsFûe
 = (
jt_fûe
Ë+ 
g
.
pVfs
->szOsFile;

850 if–
g
.
pVfs
->
iVîsi⁄
==1 ){

851 
jt_vfs
.
iVîsi⁄
 = 1;

852 }if–
g
.
pVfs
->
xCuºítTimeI¡64
==0 ){

853 
jt_vfs
.
xCuºítTimeI¡64
 = 0;

855 
	`sqlôe3_vfs_ªgi°î
(&
jt_vfs
, 
isDeÁu…
);

856  
SQLITE_OK
;

857 
	}
}

862 
	$jt_uƒegi°î
(){

863 
	`sqlôe3_vfs_uƒegi°î
(&
jt_vfs
);

864 
	}
}

	@test_loadext.c

14 
	~<°rög.h
>

15 
	~"sqlôe3ext.h
"

16 
SQLITE_EXTENSION_INIT1


21 
	$hÆfFunc
(

22 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

23 
¨gc
,

24 
sqlôe3_vÆue
 **
¨gv


26 
	`sqlôe3_ªsu…_doubÀ
(
c⁄ãxt
, 0.5*
	`sqlôe3_vÆue_doubÀ
(
¨gv
[0]));

27 
	}
}

32 
	$°©usFunc
(

33 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

34 
¨gc
,

35 
sqlôe3_vÆue
 **
¨gv


37 
›
 = 0, 
mx
, 
cur
, 
ª£tFœg
, 
rc
;

38 if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_INTEGER
 ){

39 
›
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

40 }if–
	`sqlôe3_vÆue_ty≥
(
¨gv
[0])==
SQLITE_TEXT
 ){

41 
i
;

42 c⁄° *
zName
;

44 c⁄° *
zName
;

45 
›
;

46 } 
aOp
[] = {

47 { "MEMORY_USED", 
SQLITE_STATUS_MEMORY_USED
 },

48 { "PAGECACHE_USED", 
SQLITE_STATUS_PAGECACHE_USED
 },

49 { "PAGECACHE_OVERFLOW", 
SQLITE_STATUS_PAGECACHE_OVERFLOW
 },

50 { "SCRATCH_USED", 
SQLITE_STATUS_SCRATCH_USED
 },

51 { "SCRATCH_OVERFLOW", 
SQLITE_STATUS_SCRATCH_OVERFLOW
 },

52 { "MALLOC_SIZE", 
SQLITE_STATUS_MALLOC_SIZE
 },

54 
nOp
 = (
aOp
)/(aOp[0]);

55 
zName
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[0]);

56 
i
=0; i<
nOp
; i++){

57 if–
	`°rcmp
(
aOp
[
i
].
zName
, zName)==0 ){

58 
›
 = 
aOp
[
i
].op;

62 if–
i
>=
nOp
 ){

63 *
zMsg
 = 
	`sqlôe3_m¥ötf
("unknow¿°©u†¥›îty: %s", 
zName
);

64 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zMsg
, -1);

65 
	`sqlôe3_‰ì
(
zMsg
);

69 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, "unknown statusÅype", -1);

72 if–
¨gc
==2 ){

73 
ª£tFœg
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

75 
ª£tFœg
 = 0;

77 
rc
 = 
	`sqlôe3_°©us
(
›
, &
cur
, &
mx
, 
ª£tFœg
);

78 if–
rc
!=
SQLITE_OK
 ){

79 *
zMsg
 = 
	`sqlôe3_m¥ötf
("sqlôe3_°©us(%d,...Ëªtu∫†%d", 
›
, 
rc
);

80 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zMsg
, -1);

81 
	`sqlôe3_‰ì
(
zMsg
);

84 if–
¨gc
==2 ){

85 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
mx
);

87 
	`sqlôe3_ªsu…_öt
(
c⁄ãxt
, 
cur
);

89 
	}
}

94 #ifde‡
_WIN32


95 
	$__de˛•ec
(
dŒexp‹t
)

97 
	$ã°lﬂdext_öô
(

98 
sqlôe3
 *
db
,

99 **
pzEºMsg
,

100 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


102 
nEº
 = 0;

103 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

104 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "hÆf", 1, 
SQLITE_ANY
, 0, 
hÆfFunc
, 0, 0);

105 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqlôe3_°©us", 1, 
SQLITE_ANY
, 0,

106 
°©usFunc
, 0, 0);

107 
nEº
 |
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "sqlôe3_°©us", 2, 
SQLITE_ANY
, 0,

108 
°©usFunc
, 0, 0);

109  
nEº
 ? 
SQLITE_ERROR
 : 
SQLITE_OK
;

110 
	}
}

115 #ifde‡
_WIN32


116 
	$__de˛•ec
(
dŒexp‹t
)

118 
	$ã°brokíext_öô
(

119 
sqlôe3
 *
db
,

120 **
pzEºMsg
,

121 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


123 *
zEº
;

124 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

125 
zEº
 = 
	`sqlôe3_m¥ötf
("broken!");

126 *
pzEºMsg
 = 
zEº
;

128 
	}
}

	@test_malloc.c

16 
	~"sqlôeI¡.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

22 
	~<°dlib.h
>

23 
	~<°rög.h
>

24 
	~<as£π.h
>

30 
	sMemFau…
 {

31 
	miCou¡down
;

32 
	mnRïót
;

33 
	mnBíign
;

34 
	mnFaû
;

35 
u8
 
	míabÀ
;

36 
	misIn°ÆÀd
;

37 
	misBíignMode
;

38 
sqlôe3_mem_mëhods
 
	mm
;

39 } 
	gmemÁu…
;

45 
	$sqlôe3Fau…
(){

46 
˙t
 = 0;

47 
˙t
++;

48 
	}
}

54 
	$Áu…simSãp
(){

55 if–
	`likñy
(!
memÁu…
.
íabÀ
) ){

58 if–
memÁu…
.
iCou¡down
>0 ){

59 
memÁu…
.
iCou¡down
--;

62 
	`sqlôe3Fau…
();

63 
memÁu…
.
nFaû
++;

64 if–
memÁu…
.
isBíignMode
>0 ){

65 
memÁu…
.
nBíign
++;

67 
memÁu…
.
nRïót
--;

68 if–
memÁu…
.
nRïót
<=0 ){

69 
memÁu…
.
íabÀ
 = 0;

72 
	}
}

78 *
	$Áu…simMÆloc
(
n
){

79 *
p
 = 0;

80 if–!
	`Áu…simSãp
() ){

81 
p
 = 
memÁu…
.
m
.
	`xMÆloc
(
n
);

83  
p
;

84 
	}
}

91 *
	$Áu…simRóŒoc
(*
pOld
, 
n
){

92 *
p
 = 0;

93 if–!
	`Áu…simSãp
() ){

94 
p
 = 
memÁu…
.
m
.
	`xRóŒoc
(
pOld
, 
n
);

96  
p
;

97 
	}
}

109 
	$Áu…simFªe
(*
p
){

110 
memÁu…
.
m
.
	`xFªe
(
p
);

111 
	}
}

112 
	$Áu…simSize
(*
p
){

113  
memÁu…
.
m
.
	`xSize
(
p
);

114 
	}
}

115 
	$Áu…simRoundup
(
n
){

116  
memÁu…
.
m
.
	`xRoundup
(
n
);

117 
	}
}

118 
	$Áu…simInô
(*
p
){

119  
memÁu…
.
m
.
	`xInô
(memÁu….m.
pAµD©a
);

120 
	}
}

121 
	$Áu…simShutdown
(*
p
){

122 
memÁu…
.
m
.
	`xShutdown
(memÁu….m.
pAµD©a
);

123 
	}
}

131 
	$Áu…simC⁄fig
(
nDñay
, 
nRïót
){

132 
memÁu…
.
iCou¡down
 = 
nDñay
;

133 
memÁu…
.
nRïót
 =ÇRepeat;

134 
memÁu…
.
nBíign
 = 0;

135 
memÁu…
.
nFaû
 = 0;

136 
memÁu…
.
íabÀ
 = 
nDñay
>=0;

145 
memÁu…
.
isBíignMode
 = 0;

146 
	}
}

152 
	$Áu…simFaûuªs
(){

153  
memÁu…
.
nFaû
;

154 
	}
}

160 
	$Áu…simBíignFaûuªs
(){

161  
memÁu…
.
nBíign
;

162 
	}
}

168 
	$Áu…simPídög
(){

169 if–
memÁu…
.
íabÀ
 ){

170  
memÁu…
.
iCou¡down
;

174 
	}
}

177 
	$Áu…simBegöBíign
(){

178 
memÁu…
.
isBíignMode
++;

179 
	}
}

180 
	$Áu…simEndBíign
(){

181 
memÁu…
.
isBíignMode
--;

182 
	}
}

188 
	$Áu…simIn°Æl
(
ö°Æl
){

189 
sqlôe3_mem_mëhods
 
m
 = {

190 
Áu…simMÆloc
,

191 
Áu…simFªe
,

192 
Áu…simRóŒoc
,

193 
Áu…simSize
,

194 
Áu…simRoundup
,

195 
Áu…simInô
,

196 
Áu…simShutdown
,

199 
rc
;

201 
ö°Æl
 = (install ? 1 : 0);

202 
	`as£π
(
memÁu…
.
isIn°ÆÀd
==1 || memfault.isInstalled==0);

204 if–
ö°Æl
==
memÁu…
.
isIn°ÆÀd
 ){

205  
SQLITE_ERROR
;

208 if–
ö°Æl
 ){

209 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
memÁu…
.
m
);

210 
	`as£π
(
memÁu…
.
m
.
xMÆloc
);

211 if–
rc
==
SQLITE_OK
 ){

212 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
m
);

214 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
,

215 
Áu…simBegöBíign
, 
Áu…simEndBíign


218 
sqlôe3_mem_mëhods
 
m2
;

219 
	`as£π
(
memÁu…
.
m
.
xMÆloc
);

223 
	`mem£t
(&
m2
, 0, (m2));

224 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
m2
);

225 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMALLOC
, &
m2
);

226 
	`as£π
–
	`memcmp
(&
m2
, &
memÁu…
.
m
, (m2))==0 );

228 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, &
memÁu…
.
m
);

229 
	`sqlôe3_ã°_c⁄åﬁ
(
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
,

233 if–
rc
==
SQLITE_OK
 ){

234 
memÁu…
.
isIn°ÆÀd
 = 1;

236  
rc
;

237 
	}
}

239 #ifde‡
SQLITE_TEST


249 c⁄° *
sqlôe3EºName
();

254 
	$poöãrToText
(*
p
, *
z
){

255 c⁄° 
zHex
[] = "0123456789abcdef";

256 
i
, 
k
;

257 
u
;

258 
sqlôe3_uöt64
 
n
;

259 if–
p
==0 ){

260 
	`°r˝y
(
z
, "0");

263 if–(
n
)==(
p
) ){

264 
	`mem˝y
(&
n
, &
p
, (p));

265 }if–(
u
)==(
p
) ){

266 
	`mem˝y
(&
u
, &
p
, (u));

267 
n
 = 
u
;

269 
	`as£π
( 0 );

271 
i
=0, 
k
=(
p
)*2-1; i<(p)*2; i++, k--){

272 
z
[
k
] = 
zHex
[
n
&0xf];

273 
n
 >>= 4;

275 
z
[(
p
)*2] = 0;

276 
	}
}

277 
	$hexToI¡
(
h
){

278 if–
h
>='0' && h<='9' ){

279  
h
 - '0';

280 }if–
h
>='a' && h<='f' ){

281  
h
 - 'a' + 10;

285 
	}
}

286 
	$ãxtToPoöãr
(c⁄° *
z
, **
µ
){

287 
sqlôe3_uöt64
 
n
 = 0;

288 
i
;

289 
u
;

290 
i
=0; i<(*)*2 && 
z
[0]; i++){

291 
v
;

292 
v
 = 
	`hexToI¡
(*
z
++);

293 if–
v
<0 )  
TCL_ERROR
;

294 
n
 =Ç*16 + 
v
;

296 if–*
z
!=0 )  
TCL_ERROR
;

297 if–(
n
)==(*
µ
) ){

298 
	`mem˝y
(
µ
, &
n
, (n));

299 }if–(
u
)==(*
µ
) ){

300 
u
 = ()
n
;

301 
	`mem˝y
(
µ
, &
u
, (u));

303 
	`as£π
( 0 );

305  
TCL_OK
;

306 
	}
}

313 
SQLITE_TCLAPI
 
	$ã°_mÆloc
(

314 * 
˛õ¡D©a
,

315 
T˛_I¡îp
 *
öãΩ
,

316 
objc
,

317 
T˛_Obj
 *
CONST
 
objv
[]

319 
nByã
;

320 *
p
;

321 
zOut
[100];

322 if–
objc
!=2 ){

323 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTES");

324  
TCL_ERROR
;

326 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
nByã
ËË 
TCL_ERROR
;

327 
p
 = 
	`sqlôe3_mÆloc
(()
nByã
);

328 
	`poöãrToText
(
p
, 
zOut
);

329 
	`T˛_AµídResu…
(
öãΩ
, 
zOut
, 
NULL
);

330  
TCL_OK
;

331 
	}
}

338 
SQLITE_TCLAPI
 
	$ã°_ªÆloc
(

339 * 
˛õ¡D©a
,

340 
T˛_I¡îp
 *
öãΩ
,

341 
objc
,

342 
T˛_Obj
 *
CONST
 
objv
[]

344 
nByã
;

345 *
pPri‹
, *
p
;

346 
zOut
[100];

347 if–
objc
!=3 ){

348 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PRIOR NBYTES");

349  
TCL_ERROR
;

351 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nByã
ËË 
TCL_ERROR
;

352 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
pPri‹
) ){

353 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

354  
TCL_ERROR
;

356 
p
 = 
	`sqlôe3_ªÆloc
(
pPri‹
, ()
nByã
);

357 
	`poöãrToText
(
p
, 
zOut
);

358 
	`T˛_AµídResu…
(
öãΩ
, 
zOut
, 
NULL
);

359  
TCL_OK
;

360 
	}
}

367 
SQLITE_TCLAPI
 
	$ã°_‰ì
(

368 * 
˛õ¡D©a
,

369 
T˛_I¡îp
 *
öãΩ
,

370 
objc
,

371 
T˛_Obj
 *
CONST
 
objv
[]

373 *
pPri‹
;

374 if–
objc
!=2 ){

375 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PRIOR");

376  
TCL_ERROR
;

378 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
pPri‹
) ){

379 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

380  
TCL_ERROR
;

382 
	`sqlôe3_‰ì
(
pPri‹
);

383  
TCL_OK
;

384 
	}
}

389 
sqlôe3Te°HexToBö
(const *, , *);

390 
sqlôe3Te°BöToHex
(*,);

398 
SQLITE_TCLAPI
 
	$ã°_mem£t
(

399 * 
˛õ¡D©a
,

400 
T˛_I¡îp
 *
öãΩ
,

401 
objc
,

402 
T˛_Obj
 *
CONST
 
objv
[]

404 *
p
;

405 
size
, 
n
, 
i
;

406 *
zHex
;

407 *
zOut
;

408 
zBö
[100];

410 if–
objc
!=4 ){

411 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ADDRESS SIZE HEX");

412  
TCL_ERROR
;

414 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
p
) ){

415 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

416  
TCL_ERROR
;

418 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
size
) ){

419  
TCL_ERROR
;

421 if–
size
<=0 ){

422 
	`T˛_AµídResu…
(
öãΩ
, "size must beÖositive", (*)0);

423  
TCL_ERROR
;

425 
zHex
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
n
);

426 if–
n
>(
zBö
)*2 )Ç = (zBin)*2;

427 
n
 = 
	`sqlôe3Te°HexToBö
(
zHex
,Ç, 
zBö
);

428 if–
n
==0 ){

429 
	`T˛_AµídResu…
(
öãΩ
, "no data", (*)0);

430  
TCL_ERROR
;

432 
zOut
 = 
p
;

433 
i
=0; i<
size
; i++){

434 
zOut
[
i
] = 
zBö
[i%
n
];

436  
TCL_OK
;

437 
	}
}

444 
SQLITE_TCLAPI
 
	$ã°_memgë
(

445 * 
˛õ¡D©a
,

446 
T˛_I¡îp
 *
öãΩ
,

447 
objc
,

448 
T˛_Obj
 *
CONST
 
objv
[]

450 *
p
;

451 
size
, 
n
;

452 *
zBö
;

453 
zHex
[100];

455 if–
objc
!=3 ){

456 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "ADDRESS SIZE");

457  
TCL_ERROR
;

459 if–
	`ãxtToPoöãr
(
	`T˛_GëSåög
(
objv
[1]), &
p
) ){

460 
	`T˛_AµídResu…
(
öãΩ
, "badÖoöãr: ", 
	`T˛_GëSåög
(
objv
[1]), (*)0);

461  
TCL_ERROR
;

463 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
size
) ){

464  
TCL_ERROR
;

466 if–
size
<=0 ){

467 
	`T˛_AµídResu…
(
öãΩ
, "size must beÖositive", (*)0);

468  
TCL_ERROR
;

470 
zBö
 = 
p
;

471  
size
>0 ){

472 if–
size
>((
zHex
)-1)/2 ){

473 
n
 = ((
zHex
)-1)/2;

475 
n
 = 
size
;

477 
	`mem˝y
(
zHex
, 
zBö
, 
n
);

478 
zBö
 +
n
;

479 
size
 -
n
;

480 
	`sqlôe3Te°BöToHex
(
zHex
, 
n
);

481 
	`T˛_AµídResu…
(
öãΩ
, 
zHex
, (*)0);

483  
TCL_OK
;

484 
	}
}

491 
SQLITE_TCLAPI
 
	$ã°_mem‹y_u£d
(

492 * 
˛õ¡D©a
,

493 
T˛_I¡îp
 *
öãΩ
,

494 
objc
,

495 
T˛_Obj
 *
CONST
 
objv
[]

497 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_mem‹y_u£d
()));

498  
TCL_OK
;

499 
	}
}

506 
SQLITE_TCLAPI
 
	$ã°_mem‹y_highw©î
(

507 * 
˛õ¡D©a
,

508 
T˛_I¡îp
 *
öãΩ
,

509 
objc
,

510 
T˛_Obj
 *
CONST
 
objv
[]

512 
ª£tFœg
 = 0;

513 if–
objc
!=1 && objc!=2 ){

514 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?RESET?");

515  
TCL_ERROR
;

517 if–
objc
==2 ){

518 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
ª£tFœg
ËË 
TCL_ERROR
;

520 
	`T˛_SëObjResu…
(
öãΩ
,

521 
	`T˛_NewWideI¡Obj
(
	`sqlôe3_mem‹y_highw©î
(
ª£tFœg
)));

522  
TCL_OK
;

523 
	}
}

531 
SQLITE_TCLAPI
 
	$ã°_memdebug_backåa˚
(

532 * 
˛õ¡D©a
,

533 
T˛_I¡îp
 *
öãΩ
,

534 
objc
,

535 
T˛_Obj
 *
CONST
 
objv
[]

537 
dïth
;

538 if–
objc
!=2 ){

539 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DEPT");

540  
TCL_ERROR
;

542 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
dïth
ËË 
TCL_ERROR
;

543 #ifde‡
SQLITE_MEMDEBUG


545 
	`sqlôe3MemdebugBackåa˚
();

546 
	`sqlôe3MemdebugBackåa˚
(
dïth
);

549  
TCL_OK
;

550 
	}
}

557 
SQLITE_TCLAPI
 
	$ã°_memdebug_dump
(

558 * 
˛õ¡D©a
,

559 
T˛_I¡îp
 *
öãΩ
,

560 
objc
,

561 
T˛_Obj
 *
CONST
 
objv
[]

563 if–
objc
!=2 ){

564 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

565  
TCL_ERROR
;

567 #i‡
	`deföed
(
SQLITE_MEMDEBUG
Ë|| deföed(
SQLITE_MEMORY_SIZE
) \

568 || 
	`deföed
(
SQLITE_POW2_MEMORY_SIZE
)

570 
	`sqlôe3MemdebugDump
(const *);

571 
	`sqlôe3MemdebugDump
(
	`T˛_GëSåög
(
objv
[1]));

574  
TCL_OK
;

575 
	}
}

582 
SQLITE_TCLAPI
 
	$ã°_memdebug_mÆloc_cou¡
(

583 * 
˛õ¡D©a
,

584 
T˛_I¡îp
 *
öãΩ
,

585 
objc
,

586 
T˛_Obj
 *
CONST
 
objv
[]

588 
nMÆloc
 = -1;

589 if–
objc
!=1 ){

590 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

591  
TCL_ERROR
;

593 #i‡
	`deföed
(
SQLITE_MEMDEBUG
)

595 
	`sqlôe3MemdebugMÆlocCou¡
();

596 
nMÆloc
 = 
	`sqlôe3MemdebugMÆlocCou¡
();

599 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nMÆloc
));

600  
TCL_OK
;

601 
	}
}

622 
SQLITE_TCLAPI
 
	$ã°_memdebug_Áû
(

623 * 
˛õ¡D©a
,

624 
T˛_I¡îp
 *
öãΩ
,

625 
objc
,

626 
T˛_Obj
 *
CONST
 
objv
[]

628 
ii
;

629 
iFaû
;

630 
nRïót
 = 1;

631 
T˛_Obj
 *
pBíignC¡
 = 0;

632 
nBíign
;

633 
nFaû
 = 0;

635 if–
objc
<2 ){

636 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "COUNTER ?OPTIONS?");

637  
TCL_ERROR
;

639 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iFaû
ËË 
TCL_ERROR
;

641 
ii
=2; ii<
objc
; ii+=2){

642 
nO±i⁄
;

643 *
zO±i⁄
 = 
	`T˛_GëSåögFromObj
(
objv
[
ii
], &
nO±i⁄
);

644 *
zEº
 = 0;

646 if–
nO±i⁄
>1 && 
	`°∫cmp
(
zO±i⁄
, "-repeat",ÇOption)==0 ){

647 if–
ii
==(
objc
-1) ){

648 
zEº
 = "optionÑequiresánárgument: ";

650 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
ii
+1], &
nRïót
) ){

651  
TCL_ERROR
;

654 }if–
nO±i⁄
>1 && 
	`°∫cmp
(
zO±i⁄
, "-benigncnt",ÇOption)==0 ){

655 if–
ii
==(
objc
-1) ){

656 
zEº
 = "optionÑequiresánárgument: ";

658 
pBíignC¡
 = 
objv
[
ii
+1];

661 
zEº
 = "unknown option: ";

664 if–
zEº
 ){

665 
	`T˛_AµídResu…
(
öãΩ
, 
zEº
, 
zO±i⁄
, 0);

666  
TCL_ERROR
;

670 
nBíign
 = 
	`Áu…simBíignFaûuªs
();

671 
nFaû
 = 
	`Áu…simFaûuªs
();

672 
	`Áu…simC⁄fig
(
iFaû
, 
nRïót
);

674 if–
pBíignC¡
 ){

675 
	`T˛_ObjSëV¨2
(
öãΩ
, 
pBíignC¡
, 0, 
	`T˛_NewI¡Obj
(
nBíign
), 0);

677 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nFaû
));

678  
TCL_OK
;

679 
	}
}

688 
SQLITE_TCLAPI
 
	$ã°_memdebug_≥ndög
(

689 * 
˛õ¡D©a
,

690 
T˛_I¡îp
 *
öãΩ
,

691 
objc
,

692 
T˛_Obj
 *
CONST
 
objv
[]

694 
nPídög
;

695 if–
objc
!=1 ){

696 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

697  
TCL_ERROR
;

699 
nPídög
 = 
	`Áu…simPídög
();

700 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
nPídög
));

701  
TCL_OK
;

702 
	}
}

709 
	gsqlôe3_memdebug_tôÀ_cou¡
 = 0;

721 
SQLITE_TCLAPI
 
	$ã°_memdebug_£âôÀ
(

722 * 
˛õ¡D©a
,

723 
T˛_I¡îp
 *
öãΩ
,

724 
objc
,

725 
T˛_Obj
 *
CONST
 
objv
[]

727 
sqlôe3_memdebug_tôÀ_cou¡
++;

728 if–
objc
!=2 ){

729 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "TITLE");

730  
TCL_ERROR
;

732 #ifde‡
SQLITE_MEMDEBUG


734 c⁄° *
zTôÀ
;

735 
	`sqlôe3MemdebugSëtôÀ
(const *);

736 
zTôÀ
 = 
	`T˛_GëSåög
(
objv
[1]);

737 
	`sqlôe3MemdebugSëtôÀ
(
zTôÀ
);

740  
TCL_OK
;

741 
	}
}

743 
	#MALLOC_LOG_FRAMES
 10

	)

744 
	#MALLOC_LOG_KEYINTS
 ( \

746 )

	)

747 
T˛_HashTabÀ
 
	gaMÆlocLog
;

748 
	gmÆlocLogE«bÀd
 = 0;

750 
MÆlocLog
 
	tMÆlocLog
;

751 
	sMÆlocLog
 {

752 
	mnCÆl
;

753 
	mnByã
;

756 #ifde‡
SQLITE_MEMDEBUG


757 
	$ã°_memdebug_ˇŒback
(
nByã
, 
nFøme
, **
aFøme
){

758 if–
mÆlocLogE«bÀd
 ){

759 
MÆlocLog
 *
pLog
;

760 
T˛_HashE¡ry
 *
pE¡ry
;

761 
isNew
;

763 
aKey
[
MALLOC_LOG_KEYINTS
];

764 
nKey
 = ()*
MALLOC_LOG_KEYINTS
;

766 
	`mem£t
(
aKey
, 0, 
nKey
);

767 if–((*)*
nFøme
)<
nKey
 ){

768 
nKey
 = 
nFøme
*(*);

770 
	`mem˝y
(
aKey
, 
aFøme
, 
nKey
);

772 
pE¡ry
 = 
	`T˛_Cª©eHashE¡ry
(&
aMÆlocLog
, (c⁄° *)
aKey
, &
isNew
);

773 if–
isNew
 ){

774 
pLog
 = (
MÆlocLog
 *)
	`T˛_AŒoc
((MallocLog));

775 
	`mem£t
(
pLog
, 0, (
MÆlocLog
));

776 
	`T˛_SëHashVÆue
(
pE¡ry
, (
Clõ¡D©a
)
pLog
);

778 
pLog
 = (
MÆlocLog
 *)
	`T˛_GëHashVÆue
(
pE¡ry
);

781 
pLog
->
nCÆl
++;

782 
pLog
->
nByã
 +=ÇByte;

784 
	}
}

787 
	$ã°_memdebug_log_˛ór
(){

788 
T˛_HashSórch
 
£¨ch
;

789 
T˛_HashE¡ry
 *
pE¡ry
;

791 
pE¡ry
=
	`T˛_Fú°HashE¡ry
(&
aMÆlocLog
, &
£¨ch
);

792 
pE¡ry
;

793 
pE¡ry
=
	`T˛_NextHashE¡ry
(&
£¨ch
)

795 
MÆlocLog
 *
pLog
 = (MÆlocLog *)
	`T˛_GëHashVÆue
(
pE¡ry
);

796 
	`T˛_Fªe
((*)
pLog
);

798 
	`T˛_DñëeHashTabÀ
(&
aMÆlocLog
);

799 
	`T˛_InôHashTabÀ
(&
aMÆlocLog
, 
MALLOC_LOG_KEYINTS
);

800 
	}
}

802 
SQLITE_TCLAPI
 
	$ã°_memdebug_log
(

803 * 
˛õ¡D©a
,

804 
T˛_I¡îp
 *
öãΩ
,

805 
objc
,

806 
T˛_Obj
 *
CONST
 
objv
[]

808 
isInô
 = 0;

809 
iSub
;

811 c⁄° *
MB_°rs
[] = { "start", "stop", "dump", "clear", "sync" };

812 
	eMB_íum
 {

813 
MB_LOG_START
, 
MB_LOG_STOP
, 
MB_LOG_DUMP
, 
MB_LOG_CLEAR
, 
MB_LOG_SYNC


816 if–!
isInô
 ){

817 #ifde‡
SQLITE_MEMDEBUG


818 
	`sqlôe3MemdebugBackåa˚CÆlback
(

819 (*
xBackåa˚
)(, , **));

820 
	`sqlôe3MemdebugBackåa˚CÆlback
(
ã°_memdebug_ˇŒback
);

822 
	`T˛_InôHashTabÀ
(&
aMÆlocLog
, 
MALLOC_LOG_KEYINTS
);

823 
isInô
 = 1;

826 if–
objc
<2 ){

827 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

829 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
MB_°rs
, "sub-comm™d", 0, &
iSub
) ){

830  
TCL_ERROR
;

833  (
MB_íum
)
iSub
 ){

834 
MB_LOG_START
:

835 
mÆlocLogE«bÀd
 = 1;

837 
MB_LOG_STOP
:

838 
mÆlocLogE«bÀd
 = 0;

840 
MB_LOG_DUMP
: {

841 
T˛_HashSórch
 
£¨ch
;

842 
T˛_HashE¡ry
 *
pE¡ry
;

843 
T˛_Obj
 *
pRë
 = 
	`T˛_NewObj
();

845 
	`as£π
((
T˛_WideI¡
)>=(*));

848 
pE¡ry
=
	`T˛_Fú°HashE¡ry
(&
aMÆlocLog
, &
£¨ch
);

849 
pE¡ry
;

850 
pE¡ry
=
	`T˛_NextHashE¡ry
(&
£¨ch
)

852 
T˛_Obj
 *
≠EÀm
[
MALLOC_LOG_FRAMES
+2];

853 
MÆlocLog
 *
pLog
 = (MÆlocLog *)
	`T˛_GëHashVÆue
(
pE¡ry
);

854 
T˛_WideI¡
 *
aKey
 = (T˛_WideI¡ *)
	`T˛_GëHashKey
(&
aMÆlocLog
, 
pE¡ry
);

855 
ii
;

857 
≠EÀm
[0] = 
	`T˛_NewI¡Obj
(
pLog
->
nCÆl
);

858 
≠EÀm
[1] = 
	`T˛_NewI¡Obj
(
pLog
->
nByã
);

859 
ii
=0; ii<
MALLOC_LOG_FRAMES
; ii++){

860 
≠EÀm
[
ii
+2] = 
	`T˛_NewWideI¡Obj
(
aKey
[ii]);

863 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
,

864 
	`T˛_NewLi°Obj
(
MALLOC_LOG_FRAMES
+2, 
≠EÀm
)

868 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

871 
MB_LOG_CLEAR
: {

872 
	`ã°_memdebug_log_˛ór
();

876 
MB_LOG_SYNC
: {

877 #ifde‡
SQLITE_MEMDEBUG


878 
	`sqlôe3MemdebugSync
();

879 
	`ã°_memdebug_log_˛ór
();

880 
mÆlocLogE«bÀd
 = 1;

881 
	`sqlôe3MemdebugSync
();

887  
TCL_OK
;

888 
	}
}

900 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_s¸©ch
(

901 * 
˛õ¡D©a
,

902 
T˛_I¡îp
 *
öãΩ
,

903 
objc
,

904 
T˛_Obj
 *
CONST
 
objv
[]

906 
sz
, 
N
, 
rc
;

907 
T˛_Obj
 *
pResu…
;

908 *
buf
 = 0;

909 if–
objc
!=3 ){

910 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE N");

911  
TCL_ERROR
;

913 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

914 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
ËË 
TCL_ERROR
;

915 
	`‰ì
(
buf
);

916 if–
sz
<0 ){

917 
buf
 = 0;

918 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, (*)0, 0, 0);

920 
buf
 = 
	`mÆloc
–
sz
*
N
 + 1 );

921 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SCRATCH
, 
buf
, 
sz
, 
N
);

923 
pResu…
 = 
	`T˛_NewObj
();

924 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

925 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
N
));

926 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

927  
TCL_OK
;

928 
	}
}

940 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_∑geˇche
(

941 * 
˛õ¡D©a
,

942 
T˛_I¡îp
 *
öãΩ
,

943 
objc
,

944 
T˛_Obj
 *
CONST
 
objv
[]

946 
sz
, 
N
;

947 
T˛_Obj
 *
pRes
;

948 *
buf
 = 0;

949 if–
objc
!=3 ){

950 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE N");

951  
TCL_ERROR
;

953 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

954 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
N
ËË 
TCL_ERROR
;

955 
	`‰ì
(
buf
);

956 
buf
 = 0;

959 
pRes
 = 
	`T˛_NewObj
();

960 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRes
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
szPage
));

961 
	`T˛_Li°ObjAµídEÀmít
(0, 
pRes
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
nPage
));

962 
	`T˛_SëObjResu…
(
öãΩ
, 
pRes
);

964 if–
sz
<0 ){

965 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
, (*)0, 0, 0);

967 
buf
 = 
	`mÆloc
–
sz
*
N
 );

968 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PAGECACHE
, 
buf
, 
sz
, 
N
);

970  
TCL_OK
;

971 
	}
}

983 
SQLITE_TCLAPI
 
	$ã°_Æt_pˇche
(

984 * 
˛õ¡D©a
,

985 
T˛_I¡îp
 *
öãΩ
,

986 
objc
,

987 
T˛_Obj
 *
CONST
 
objv
[]

989 
ö°ÆlFœg
;

990 
disˇrdCh™˚
 = 0;

991 
¥ngSìd
 = 0;

992 
highSåess
 = 0;

993 
	`ö°ÆlTe°PCache
(,,,);

994 if–
objc
<2 || objc>5 ){

995 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
,

997  
TCL_ERROR
;

999 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
ö°ÆlFœg
ËË 
TCL_ERROR
;

1000 if–
objc
>=3 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
disˇrdCh™˚
) ){

1001  
TCL_ERROR
;

1003 if–
objc
>=4 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
¥ngSìd
) ){

1004  
TCL_ERROR
;

1006 if–
objc
>=5 && 
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
highSåess
) ){

1007  
TCL_ERROR
;

1009 if–
disˇrdCh™˚
<0 || discardChance>100 ){

1010 
	`T˛_AµídResu…
(
öãΩ
, "discard-chance should be between 0ánd 100",

1012  
TCL_ERROR
;

1014 
	`ö°ÆlTe°PCache
(
ö°ÆlFœg
, ()
disˇrdCh™˚
, ()
¥ngSìd
,

1015 ()
highSåess
);

1016  
TCL_OK
;

1017 
	}
}

1024 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_mem°©us
(

1025 * 
˛õ¡D©a
,

1026 
T˛_I¡îp
 *
öãΩ
,

1027 
objc
,

1028 
T˛_Obj
 *
CONST
 
objv
[]

1030 
íabÀ
, 
rc
;

1031 if–
objc
!=2 ){

1032 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

1033  
TCL_ERROR
;

1035 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
íabÀ
ËË 
TCL_ERROR
;

1036 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MEMSTATUS
, 
íabÀ
);

1037 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1038  
TCL_OK
;

1039 
	}
}

1045 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_lookaside
(

1046 * 
˛õ¡D©a
,

1047 
T˛_I¡îp
 *
öãΩ
,

1048 
objc
,

1049 
T˛_Obj
 *
CONST
 
objv
[]

1051 
sz
, 
˙t
;

1052 
T˛_Obj
 *
pRë
;

1053 if–
objc
!=3 ){

1054 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SIZE COUNT");

1055  
TCL_ERROR
;

1057 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
sz
ËË 
TCL_ERROR
;

1058 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
˙t
ËË 
TCL_ERROR
;

1059 
pRë
 = 
	`T˛_NewObj
();

1060 
	`T˛_Li°ObjAµídEÀmít
(

1061 
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
szLookaside
)

1063 
	`T˛_Li°ObjAµídEÀmít
(

1064 
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
sqlôe3GlobÆC⁄fig
.
nLookaside
)

1066 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_LOOKASIDE
, 
sz
, 
˙t
);

1067 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1068  
TCL_OK
;

1069 
	}
}

1079 
SQLITE_TCLAPI
 
	$ã°_db_c⁄fig_lookaside
(

1080 * 
˛õ¡D©a
,

1081 
T˛_I¡îp
 *
öãΩ
,

1082 
objc
,

1083 
T˛_Obj
 *
CONST
 
objv
[]

1085 
rc
;

1086 
sz
, 
˙t
;

1087 
sqlôe3
 *
db
;

1088 
bufid
;

1089 
azBuf
[2][10000];

1090 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1091 if–
objc
!=5 ){

1092 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BUFID SIZE COUNT");

1093  
TCL_ERROR
;

1095 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1096 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
bufid
ËË 
TCL_ERROR
;

1097 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
sz
ËË 
TCL_ERROR
;

1098 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
˙t
ËË 
TCL_ERROR
;

1099 if–
bufid
==0 ){

1100 
rc
 = 
	`sqlôe3_db_c⁄fig
(
db
, 
SQLITE_DBCONFIG_LOOKASIDE
, (*)0, 
sz
, 
˙t
);

1101 }if–
bufid
>=1 && bufid<=2 && 
sz
*
˙t
<=(
azBuf
[0]) ){

1102 
rc
 = 
	`sqlôe3_db_c⁄fig
(
db
, 
SQLITE_DBCONFIG_LOOKASIDE
, 
azBuf
[
bufid
], 
sz
,
˙t
);

1104 
	`T˛_AµídResu…
(
öãΩ
, "illegalárguments - see documentation", (*)0);

1105  
TCL_ERROR
;

1107 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1108  
TCL_OK
;

1109 
	}
}

1114 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_hóp
(

1115 * 
˛õ¡D©a
,

1116 
T˛_I¡îp
 *
öãΩ
,

1117 
objc
,

1118 
T˛_Obj
 *
CONST
 
objv
[]

1120 *
zBuf
;

1121 
nByã
;

1122 
nMöAŒoc
;

1123 
rc
;

1125 
T˛_Obj
 * 
CONST
 *
aArg
 = &
objv
[1];

1126 
nArg
 = 
objc
-1;

1128 if–
nArg
!=2 ){

1129 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTE NMINALLOC");

1130  
TCL_ERROR
;

1132 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[0], &
nByã
ËË 
TCL_ERROR
;

1133 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[1], &
nMöAŒoc
ËË 
TCL_ERROR
;

1135 if–
nByã
==0 ){

1136 
	`‰ì
–
zBuf
 );

1137 
zBuf
 = 0;

1138 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, (*)0, 0, 0);

1140 
zBuf
 = 
	`ªÆloc
(zBuf, 
nByã
);

1141 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_HEAP
, 
zBuf
, 
nByã
, 
nMöAŒoc
);

1144 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1145  
TCL_OK
;

1146 
	}
}

1151 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_hóp_size
(

1152 * 
˛õ¡D©a
,

1153 
T˛_I¡îp
 *
öãΩ
,

1154 
objc
,

1155 
T˛_Obj
 *
CONST
 
objv
[]

1157 
nByã
;

1158 
rc
;

1160 
T˛_Obj
 * 
CONST
 *
aArg
 = &
objv
[1];

1161 
nArg
 = 
objc
-1;

1163 if–
nArg
!=1 ){

1164 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NBYTE");

1165  
TCL_ERROR
;

1167 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
aArg
[0], &
nByã
ËË 
TCL_ERROR
;

1169 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_WIN32_HEAPSIZE
, 
nByã
);

1171 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1172  
TCL_OK
;

1173 
	}
}

1181 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_îr‹
(

1182 * 
˛õ¡D©a
,

1183 
T˛_I¡îp
 *
öãΩ
,

1184 
objc
,

1185 
T˛_Obj
 *
CONST
 
objv
[]

1187 
sqlôe3
 *
db
;

1188 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1190 if–
objc
!=2 && objc!=1 ){

1191 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "[DB]");

1192  
TCL_ERROR
;

1194 if–
objc
==2 ){

1195 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1196 if–
	`sqlôe3_db_c⁄fig
(
db
, 99999)!=
SQLITE_ERROR
 ){

1197 
	`T˛_AµídResu…
(
öãΩ
,

1200  
TCL_ERROR
;

1203 if–
	`sqlôe3_c⁄fig
(99999)!=
SQLITE_ERROR
 ){

1204 
	`T˛_AµídResu…
(
öãΩ
,

1207  
TCL_ERROR
;

1210  
TCL_OK
;

1211 
	}
}

1219 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_uri
(

1220 * 
˛õ¡D©a
,

1221 
T˛_I¡îp
 *
öãΩ
,

1222 
objc
,

1223 
T˛_Obj
 *
CONST
 
objv
[]

1225 
rc
;

1226 
bO≥nUri
;

1228 if–
objc
!=2 ){

1229 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1230  
TCL_ERROR
;

1232 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bO≥nUri
) ){

1233  
TCL_ERROR
;

1236 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_URI
, 
bO≥nUri
);

1237 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1239  
TCL_OK
;

1240 
	}
}

1248 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_cis
(

1249 * 
˛õ¡D©a
,

1250 
T˛_I¡îp
 *
öãΩ
,

1251 
objc
,

1252 
T˛_Obj
 *
CONST
 
objv
[]

1254 
rc
;

1255 
bU£Cis
;

1257 if–
objc
!=2 ){

1258 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1259  
TCL_ERROR
;

1261 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
bU£Cis
) ){

1262  
TCL_ERROR
;

1265 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_COVERING_INDEX_SCAN
, 
bU£Cis
);

1266 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1268  
TCL_OK
;

1269 
	}
}

1276 
SQLITE_TCLAPI
 
	$ã°_c⁄fig_pmasz
(

1277 * 
˛õ¡D©a
,

1278 
T˛_I¡îp
 *
öãΩ
,

1279 
objc
,

1280 
T˛_Obj
 *
CONST
 
objv
[]

1282 
rc
;

1283 
iPmaSz
;

1285 if–
objc
!=2 ){

1286 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOL");

1287  
TCL_ERROR
;

1289 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iPmaSz
) ){

1290  
TCL_ERROR
;

1293 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PMASZ
, 
iPmaSz
);

1294 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1296  
TCL_OK
;

1297 
	}
}

1306 
SQLITE_TCLAPI
 
	$ã°_dump_memsys3
(

1307 * 
˛õ¡D©a
,

1308 
T˛_I¡îp
 *
öãΩ
,

1309 
objc
,

1310 
T˛_Obj
 *
CONST
 
objv
[]

1312 if–
objc
!=2 ){

1313 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1314  
TCL_ERROR
;

1317  
	`SQLITE_PTR_TO_INT
(
˛õ¡D©a
) ){

1319 #ifde‡
SQLITE_ENABLE_MEMSYS3


1320 
	`sqlôe3Memsys3Dump
(const *);

1321 
	`sqlôe3Memsys3Dump
(
	`T˛_GëSåög
(
objv
[1]));

1326 #ifde‡
SQLITE_ENABLE_MEMSYS5


1327 
	`sqlôe3Memsys5Dump
(const *);

1328 
	`sqlôe3Memsys5Dump
(
	`T˛_GëSåög
(
objv
[1]));

1333  
TCL_OK
;

1334 
	}
}

1342 
SQLITE_TCLAPI
 
	$ã°_°©us
(

1343 * 
˛õ¡D©a
,

1344 
T˛_I¡îp
 *
öãΩ
,

1345 
objc
,

1346 
T˛_Obj
 *
CONST
 
objv
[]

1348 
rc
, 
iVÆue
, 
mxVÆue
;

1349 
i
, 
›
 = 0, 
ª£tFœg
;

1350 c⁄° *
zOpName
;

1352 c⁄° *
zName
;

1353 
›
;

1354 } 
aOp
[] = {

1355 { "SQLITE_STATUS_MEMORY_USED", 
SQLITE_STATUS_MEMORY_USED
 },

1356 { "SQLITE_STATUS_MALLOC_SIZE", 
SQLITE_STATUS_MALLOC_SIZE
 },

1357 { "SQLITE_STATUS_PAGECACHE_USED", 
SQLITE_STATUS_PAGECACHE_USED
 },

1358 { "SQLITE_STATUS_PAGECACHE_OVERFLOW", 
SQLITE_STATUS_PAGECACHE_OVERFLOW
 },

1359 { "SQLITE_STATUS_PAGECACHE_SIZE", 
SQLITE_STATUS_PAGECACHE_SIZE
 },

1360 { "SQLITE_STATUS_SCRATCH_USED", 
SQLITE_STATUS_SCRATCH_USED
 },

1361 { "SQLITE_STATUS_SCRATCH_OVERFLOW", 
SQLITE_STATUS_SCRATCH_OVERFLOW
 },

1362 { "SQLITE_STATUS_SCRATCH_SIZE", 
SQLITE_STATUS_SCRATCH_SIZE
 },

1363 { "SQLITE_STATUS_PARSER_STACK", 
SQLITE_STATUS_PARSER_STACK
 },

1364 { "SQLITE_STATUS_MALLOC_COUNT", 
SQLITE_STATUS_MALLOC_COUNT
 },

1366 
T˛_Obj
 *
pResu…
;

1367 if–
objc
!=3 ){

1368 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PARAMETER RESETFLAG");

1369  
TCL_ERROR
;

1371 
zOpName
 = 
	`T˛_GëSåög
(
objv
[1]);

1372 
i
=0; i<
	`AºaySize
(
aOp
); i++){

1373 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

1374 
›
 = 
aOp
[
i
].op;

1378 if–
i
>=
	`AºaySize
(
aOp
) ){

1379 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
›
ËË 
TCL_ERROR
;

1381 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
ª£tFœg
ËË 
TCL_ERROR
;

1382 
iVÆue
 = 0;

1383 
mxVÆue
 = 0;

1384 
rc
 = 
	`sqlôe3_°©us
(
›
, &
iVÆue
, &
mxVÆue
, 
ª£tFœg
);

1385 
pResu…
 = 
	`T˛_NewObj
();

1386 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

1387 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
iVÆue
));

1388 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
mxVÆue
));

1389 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1390  
TCL_OK
;

1391 
	}
}

1399 
SQLITE_TCLAPI
 
	$ã°_db_°©us
(

1400 * 
˛õ¡D©a
,

1401 
T˛_I¡îp
 *
öãΩ
,

1402 
objc
,

1403 
T˛_Obj
 *
CONST
 
objv
[]

1405 
rc
, 
iVÆue
, 
mxVÆue
;

1406 
i
, 
›
 = 0, 
ª£tFœg
;

1407 c⁄° *
zOpName
;

1408 
sqlôe3
 *
db
;

1409 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

1411 c⁄° *
zName
;

1412 
›
;

1413 } 
aOp
[] = {

1414 { "LOOKASIDE_USED", 
SQLITE_DBSTATUS_LOOKASIDE_USED
 },

1415 { "CACHE_USED", 
SQLITE_DBSTATUS_CACHE_USED
 },

1416 { "SCHEMA_USED", 
SQLITE_DBSTATUS_SCHEMA_USED
 },

1417 { "STMT_USED", 
SQLITE_DBSTATUS_STMT_USED
 },

1418 { "LOOKASIDE_HIT", 
SQLITE_DBSTATUS_LOOKASIDE_HIT
 },

1419 { "LOOKASIDE_MISS_SIZE", 
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 },

1420 { "LOOKASIDE_MISS_FULL", 
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 },

1421 { "CACHE_HIT", 
SQLITE_DBSTATUS_CACHE_HIT
 },

1422 { "CACHE_MISS", 
SQLITE_DBSTATUS_CACHE_MISS
 },

1423 { "CACHE_WRITE", 
SQLITE_DBSTATUS_CACHE_WRITE
 },

1424 { "DEFERRED_FKS", 
SQLITE_DBSTATUS_DEFERRED_FKS
 },

1425 { "CACHE_USED_SHARED", 
SQLITE_DBSTATUS_CACHE_USED_SHARED
 },

1427 
T˛_Obj
 *
pResu…
;

1428 if–
objc
!=4 ){

1429 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB PARAMETER RESETFLAG");

1430  
TCL_ERROR
;

1432 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

1433 
zOpName
 = 
	`T˛_GëSåög
(
objv
[2]);

1434 if–
	`memcmp
(
zOpName
, "SQLITE_", 7)==0 ) zOpName += 7;

1435 if–
	`memcmp
(
zOpName
, "DBSTATUS_", 9)==0 ) zOpName += 9;

1436 
i
=0; i<
	`AºaySize
(
aOp
); i++){

1437 if–
	`°rcmp
(
aOp
[
i
].
zName
, 
zOpName
)==0 ){

1438 
›
 = 
aOp
[
i
].op;

1442 if–
i
>=
	`AºaySize
(
aOp
) ){

1443 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
›
ËË 
TCL_ERROR
;

1445 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
ª£tFœg
ËË 
TCL_ERROR
;

1446 
iVÆue
 = 0;

1447 
mxVÆue
 = 0;

1448 
rc
 = 
	`sqlôe3_db_°©us
(
db
, 
›
, &
iVÆue
, &
mxVÆue
, 
ª£tFœg
);

1449 
pResu…
 = 
	`T˛_NewObj
();

1450 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
rc
));

1451 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
iVÆue
));

1452 
	`T˛_Li°ObjAµídEÀmít
(0, 
pResu…
, 
	`T˛_NewI¡Obj
(
mxVÆue
));

1453 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1454  
TCL_OK
;

1455 
	}
}

1460 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_mÆloc_Áu…sim
(

1461 * 
˛õ¡D©a
,

1462 
T˛_I¡îp
 *
öãΩ
,

1463 
objc
,

1464 
T˛_Obj
 *
CONST
 
objv
[]

1466 
rc
;

1467 
isIn°Æl
;

1469 if–
objc
!=2 ){

1470 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

1471  
TCL_ERROR
;

1473 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isIn°Æl
) ){

1474  
TCL_ERROR
;

1476 
rc
 = 
	`Áu…simIn°Æl
(
isIn°Æl
);

1477 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1478  
TCL_OK
;

1479 
	}
}

1484 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_memsys3
(

1485 * 
˛õ¡D©a
,

1486 
T˛_I¡îp
 *
öãΩ
,

1487 
objc
,

1488 
T˛_Obj
 *
CONST
 
objv
[]

1490 
rc
 = 
SQLITE_MISUSE
;

1491 #ifde‡
SQLITE_ENABLE_MEMSYS3


1492 c⁄° 
sqlôe3_mem_mëhods
 *
	`sqlôe3MemGëMemsys3
();

1493 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MALLOC
, 
	`sqlôe3MemGëMemsys3
());

1495 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

1496  
TCL_OK
;

1497 
	}
}

1499 
SQLITE_TCLAPI
 
	$ã°_vfs_oom_ã°
(

1500 * 
˛õ¡D©a
,

1501 
T˛_I¡îp
 *
öãΩ
,

1502 
objc
,

1503 
T˛_Obj
 *
CONST
 
objv
[]

1505 
sqlôe3_memdebug_vfs_oom_ã°
;

1506 if–
objc
>2 ){

1507 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?INTEGER?");

1508  
TCL_ERROR
;

1509 }if–
objc
==2 ){

1510 
iNew
;

1511 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
iNew
ËË 
TCL_ERROR
;

1512 
sqlôe3_memdebug_vfs_oom_ã°
 = 
iNew
;

1514 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
sqlôe3_memdebug_vfs_oom_ã°
));

1515  
TCL_OK
;

1516 
	}
}

1521 
	$Sqlôëe°_mÆloc_Inô
(
T˛_I¡îp
 *
öãΩ
){

1523 *
zName
;

1524 
T˛_ObjCmdProc
 *
xProc
;

1525 
˛õ¡D©a
;

1526 } 
aObjCmd
[] = {

1527 { "sqlôe3_mÆloc", 
ã°_mÆloc
 ,0 },

1528 { "sqlôe3_ªÆloc", 
ã°_ªÆloc
 ,0 },

1529 { "sqlôe3_‰ì", 
ã°_‰ì
 ,0 },

1530 { "mem£t", 
ã°_mem£t
 ,0 },

1531 { "memgë", 
ã°_memgë
 ,0 },

1532 { "sqlôe3_mem‹y_u£d", 
ã°_mem‹y_u£d
 ,0 },

1533 { "sqlôe3_mem‹y_highw©î", 
ã°_mem‹y_highw©î
 ,0 },

1534 { "sqlôe3_memdebug_backåa˚", 
ã°_memdebug_backåa˚
 ,0 },

1535 { "sqlôe3_memdebug_dump", 
ã°_memdebug_dump
 ,0 },

1536 { "sqlôe3_memdebug_Áû", 
ã°_memdebug_Áû
 ,0 },

1537 { "sqlôe3_memdebug_≥ndög", 
ã°_memdebug_≥ndög
 ,0 },

1538 { "sqlôe3_memdebug_£âôÀ", 
ã°_memdebug_£âôÀ
 ,0 },

1539 { "sqlôe3_memdebug_mÆloc_cou¡", 
ã°_memdebug_mÆloc_cou¡
 ,0 },

1540 { "sqlôe3_memdebug_log", 
ã°_memdebug_log
 ,0 },

1541 { "sqlôe3_c⁄fig_s¸©ch", 
ã°_c⁄fig_s¸©ch
 ,0 },

1542 { "sqlôe3_c⁄fig_∑geˇche", 
ã°_c⁄fig_∑geˇche
 ,0 },

1543 { "sqlôe3_c⁄fig_Æt_pˇche", 
ã°_Æt_pˇche
 ,0 },

1544 { "sqlôe3_°©us", 
ã°_°©us
 ,0 },

1545 { "sqlôe3_db_°©us", 
ã°_db_°©us
 ,0 },

1546 { "ö°Æl_mÆloc_Áu…sim", 
ã°_ö°Æl_mÆloc_Áu…sim
 ,0 },

1547 { "sqlôe3_c⁄fig_hóp", 
ã°_c⁄fig_hóp
 ,0 },

1548 { "sqlôe3_c⁄fig_hóp_size", 
ã°_c⁄fig_hóp_size
 ,0 },

1549 { "sqlôe3_c⁄fig_mem°©us", 
ã°_c⁄fig_mem°©us
 ,0 },

1550 { "sqlôe3_c⁄fig_lookaside", 
ã°_c⁄fig_lookaside
 ,0 },

1551 { "sqlôe3_c⁄fig_îr‹", 
ã°_c⁄fig_îr‹
 ,0 },

1552 { "sqlôe3_c⁄fig_uri", 
ã°_c⁄fig_uri
 ,0 },

1553 { "sqlôe3_c⁄fig_cis", 
ã°_c⁄fig_cis
 ,0 },

1554 { "sqlôe3_c⁄fig_pmasz", 
ã°_c⁄fig_pmasz
 ,0 },

1555 { "sqlôe3_db_c⁄fig_lookaside",
ã°_db_c⁄fig_lookaside
 ,0 },

1556 { "sqlôe3_dump_memsys3", 
ã°_dump_memsys3
 ,3 },

1557 { "sqlôe3_dump_memsys5", 
ã°_dump_memsys3
 ,5 },

1558 { "sqlôe3_ö°Æl_memsys3", 
ã°_ö°Æl_memsys3
 ,0 },

1559 { "sqlôe3_memdebug_vfs_oom_ã°", 
ã°_vfs_oom_ã°
 ,0 },

1561 
i
;

1562 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

1563 
Clõ¡D©a
 
c
 = (Clõ¡D©a)
	`SQLITE_INT_TO_PTR
(
aObjCmd
[
i
].
˛õ¡D©a
);

1564 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,áObjCmd[i].
xProc
, 
c
, 0);

1566  
TCL_OK
;

1567 
	}
}

	@test_multiplex.c

50 
	~"sqlôe3.h
"

51 
	~<°rög.h
>

52 
	~<as£π.h
>

53 
	~<°dlib.h
>

54 
	~"ã°_mu…ùÀx.h
"

56 #i‚de‡
SQLITE_CORE


57 
	#SQLITE_CORE
 1

	)

59 
	~"sqlôe3ext.h
"

67 
	#UNUSED_PARAMETER
(
x
Ë()(x)

	)

68 
	#MAX_PAGE_SIZE
 0x10000

	)

69 
	#DEFAULT_SECTOR_SIZE
 0x1000

	)

74 #i‡
deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE==0

75 
	#sqlôe3_muãx_Æloc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

76 
	#sqlôe3_muãx_‰ì
(
X
)

	)

77 
	#sqlôe3_muãx_íãr
(
X
)

	)

78 
	#sqlôe3_muãx_åy
(
X
Ë
SQLITE_OK


	)

79 
	#sqlôe3_muãx_Àave
(
X
)

	)

80 
	#sqlôe3_muãx_hñd
(
X
Ë(()(X),1)

	)

81 
	#sqlôe3_muãx_nŸhñd
(
X
Ë(()(X),1)

	)

85 
	#MX_CHUNK_NUMBER
 299

	)

88 
	#SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
 400

	)

89 
	#SQLITE_MULTIPLEX_WAL_8_3_OFFSET
 700

	)

94 #i‚de‡
SQLITE_MULTIPLEX_VFS_NAME


95 
	#SQLITE_MULTIPLEX_VFS_NAME
 "mu…ùÀx"

	)

102 #i‚de‡
SQLITE_MULTIPLEX_CHUNK_SIZE


103 
	#SQLITE_MULTIPLEX_CHUNK_SIZE
 2147418112

	)

112 #i‚de‡
SQLITE_MULTIPLEX_MAX_CHUNKS


113 
	#SQLITE_MULTIPLEX_MAX_CHUNKS
 12

	)

119 
mu…ùÀxGroup
 
	tmu…ùÀxGroup
;

120 
mu…ùÀxC⁄n
 
	tmu…ùÀxC⁄n
;

130 
	smu…ùÀxGroup
 {

131 
	smu…ùÀxRól
 {

132 
sqlôe3_fûe
 *
	mp
;

133 *
	mz
;

134 } *
	maRól
;

135 
	mnRól
;

136 *
	mzName
;

137 
	mnName
;

138 
	mÊags
;

139 
	mszChunk
;

140 
	mbE«bÀd
;

141 
	mbTrunˇã
;

142 
mu…ùÀxGroup
 *
	mpNext
, *
	mpPªv
;

151 
	smu…ùÀxC⁄n
 {

152 
sqlôe3_fûe
 
	mba£
;

153 
mu…ùÀxGroup
 *
	mpGroup
;

167 
sqlôe3_vfs
 *
	mpOrigVfs
;

172 
sqlôe3_vfs
 
	msThisVfs
;

184 
sqlôe3_io_mëhods
 
	msIoMëhodsV1
;

185 
sqlôe3_io_mëhods
 
	msIoMëhodsV2
;

189 
	misInôülized
;

197 
sqlôe3_muãx
 *
	mpMuãx
;

201 
mu…ùÀxGroup
 *
	mpGroups
;

202 } 
	ggMu…ùÀx
;

209 
	$mu…ùÀxE¡î
(){ 
	`sqlôe3_muãx_íãr
(
gMu…ùÀx
.
pMuãx
); 
	}
}

210 
	$mu…ùÀxLóve
(){ 
	`sqlôe3_muãx_Àave
(
gMu…ùÀx
.
pMuãx
); 
	}
}

220 
	$mu…ùÀxSåÀn30
(c⁄° *
z
){

221 c⁄° *
z2
 = 
z
;

222 if–
z
==0 )  0;

223  *
z2
 ){ z2++; }

224  0x3ffffff‡& ()(
z2
 - 
z
);

225 
	}
}

252 
	$mu…ùÀxFûíame
(

253 c⁄° *
zBa£
,

254 
nBa£
,

255 
Êags
,

256 
iChunk
,

257 *
zOut


259 
n
 = 
nBa£
;

260 
	`mem˝y
(
zOut
, 
zBa£
, 
n
+1);

261 if–
iChunk
!=0 && iChunk<=
MX_CHUNK_NUMBER
 ){

262 #ifde‡
SQLITE_ENABLE_8_3_NAMES


263 
i
;

264 
i
=
n
-1; i>0 && i>Ú-4 && 
zOut
[i]!='.'; i--){}

265 if–
i
>=
n
-4 )Ç = i+1;

266 if–
Êags
 & 
SQLITE_OPEN_MAIN_JOURNAL
 ){

271 
iChunk
 +
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
;

272 }if–
Êags
 & 
SQLITE_OPEN_WAL
 ){

276 
iChunk
 +
SQLITE_MULTIPLEX_WAL_8_3_OFFSET
;

279 
	`sqlôe3_¢¥ötf
(4,&
zOut
[
n
],"%03d",
iChunk
);

280 
n
 += 3;

283 
	`as£π
–
zOut
[
n
]=='\0' );

284 
zOut
[
n
+1] = '\0';

285 
	}
}

289 
	$mu…ùÀxSubFûíame
(
mu…ùÀxGroup
 *
pGroup
, 
iChunk
){

290 if–
iChunk
>=
pGroup
->
nRól
 ){

291 
mu…ùÀxRól
 *
p
;

292 
p
 = 
	`sqlôe3_ªÆloc64
(
pGroup
->
aRól
, (
iChunk
+1)*(*p));

293 if–
p
==0 ){

294  
SQLITE_NOMEM
;

296 
	`mem£t
(&
p
[
pGroup
->
nRól
], 0, ’[0])*(
iChunk
+1-pGroup->nReal));

297 
pGroup
->
aRól
 = 
p
;

298 
pGroup
->
nRól
 = 
iChunk
+1;

300 if–
pGroup
->
zName
 &&ÖGroup->
aRól
[
iChunk
].
z
==0 ){

301 *
z
;

302 
n
 = 
pGroup
->
nName
;

303 
pGroup
->
aRól
[
iChunk
].
z
 = z = 
	`sqlôe3_mÆloc64
–
n
+5 );

304 if–
z
==0 ){

305  
SQLITE_NOMEM
;

307 
	`mu…ùÀxFûíame
(
pGroup
->
zName
,ÖGroup->
nName
,ÖGroup->
Êags
, 
iChunk
, 
z
);

309  
SQLITE_OK
;

310 
	}
}

319 
sqlôe3_fûe
 *
	$mu…ùÀxSubO≥n
(

320 
mu…ùÀxGroup
 *
pGroup
,

321 
iChunk
,

322 *
rc
,

323 *
pOutFœgs
,

324 
¸óãFœg


326 
sqlôe3_fûe
 *
pSubO≥n
 = 0;

327 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

329 #ifde‡
SQLITE_ENABLE_8_3_NAMES


334 if–
iChunk
>=
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET
 ){

335 
	`sqlôe3_log
(
SQLITE_FULL
, "mu…ùÀxed chunk ovîÊow: %s", 
pGroup
->
zName
);

336 *
rc
 = 
SQLITE_FULL
;

341 *
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, 
iChunk
);

342 if–(*
rc
)==
SQLITE_OK
 && (
pSubO≥n
 = 
pGroup
->
aRól
[
iChunk
].
p
)==0 ){

343 
Êags
, 
bExi°s
;

344 
Êags
 = 
pGroup
->flags;

345 if–
¸óãFœg
 ){

346 
Êags
 |
SQLITE_OPEN_CREATE
;

347 }if–
iChunk
==0 ){

349 }if–
pGroup
->
aRól
[
iChunk
].
z
==0 ){

352 *
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
,

353 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

354 if–*
rc
 || !
bExi°s
 ){

355 if–*
rc
 ){

356 
	`sqlôe3_log
(*
rc
, "multiplexor.xAccess failure on %s",

357 
pGroup
->
aRól
[
iChunk
].
z
);

361 
Êags
 &~
SQLITE_OPEN_CREATE
;

363 
pSubO≥n
 = 
	`sqlôe3_mÆloc64
–
pOrigVfs
->
szOsFûe
 );

364 if–
pSubO≥n
==0 ){

365 *
rc
 = 
SQLITE_IOERR_NOMEM
;

368 
pGroup
->
aRól
[
iChunk
].
p
 = 
pSubO≥n
;

369 *
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 
pSubO≥n
,

370 
Êags
, 
pOutFœgs
);

371 if–(*
rc
)!=
SQLITE_OK
 ){

372 
	`sqlôe3_log
(*
rc
, "multiplexor.xOpen failure on %s",

373 
pGroup
->
aRól
[
iChunk
].
z
);

374 
	`sqlôe3_‰ì
(
pSubO≥n
);

375 
pGroup
->
aRól
[
iChunk
].
p
 = 0;

379  
pSubO≥n
;

380 
	}
}

387 
sqlôe3_öt64
 
	$mu…ùÀxSubSize
(

388 
mu…ùÀxGroup
 *
pGroup
,

389 
iChunk
,

390 *
rc


392 
sqlôe3_fûe
 *
pSub
;

393 
sqlôe3_öt64
 
sz
 = 0;

395 if–*
rc
 )  0;

396 
pSub
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
iChunk
, 
rc
, 
NULL
, 0);

397 if–
pSub
==0 )  0;

398 *
rc
 = 
pSub
->
pMëhods
->
	`xFûeSize
’Sub, &
sz
);

399  
sz
;

400 
	}
}

405 
	$mu…ùÀxC⁄åﬁFunc
(

406 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

407 
¨gc
,

408 
sqlôe3_vÆue
 **
¨gv


410 
rc
 = 
SQLITE_OK
;

411 
sqlôe3
 *
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

412 
›
 = 0;

413 
iVÆ
;

415 if–!
db
 || 
¨gc
!=2 ){

416 
rc
 = 
SQLITE_ERROR
;

419 
›
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[0]);

420 
iVÆ
 = 
	`sqlôe3_vÆue_öt
(
¨gv
[1]);

422  
›
 ){

424 
›
 = 
MULTIPLEX_CTRL_ENABLE
;

427 
›
 = 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
;

430 
›
 = 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
;

433 
rc
 = 
SQLITE_NOTFOUND
;

437 if–
rc
==
SQLITE_OK
 ){

438 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 0, 
›
, &
iVÆ
);

440 
	`sqlôe3_ªsu…_îr‹_code
(
c⁄ãxt
, 
rc
);

441 
	}
}

447 
	$mu…ùÀxFuncInô
(

448 
sqlôe3
 *
db
,

449 **
pzEºMsg
,

450 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


452 
rc
;

453 
rc
 = 
	`sqlôe3_¸óã_fun˘i⁄
(
db
, "mu…ùÀx_c⁄åﬁ", 2, 
SQLITE_ANY
,

454 0, 
mu…ùÀxC⁄åﬁFunc
, 0, 0);

455  
rc
;

456 
	}
}

461 
	$mu…ùÀxSubClo£
(

462 
mu…ùÀxGroup
 *
pGroup
,

463 
iChunk
,

464 
sqlôe3_vfs
 *
pOrigVfs


466 
sqlôe3_fûe
 *
pSubO≥n
 = 
pGroup
->
aRól
[
iChunk
].
p
;

467 if–
pSubO≥n
 ){

468 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

469 if–
pOrigVfs
 && 
pGroup
->
aRól
[
iChunk
].
z
 ){

470 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 0);

472 
	`sqlôe3_‰ì
(
pGroup
->
aRól
[
iChunk
].
p
);

474 
	`sqlôe3_‰ì
(
pGroup
->
aRól
[
iChunk
].
z
);

475 
	`mem£t
(&
pGroup
->
aRól
[
iChunk
], 0, (pGroup->aReal[iChunk]));

476 
	}
}

481 
	$mu…ùÀxFªeComp⁄íts
(
mu…ùÀxGroup
 *
pGroup
){

482 
i
;

483 
i
=0; i<
pGroup
->
nRól
; i++){ 
	`mu…ùÀxSubClo£
(pGroup, i, 0); }

484 
	`sqlôe3_‰ì
(
pGroup
->
aRól
);

485 
pGroup
->
aRól
 = 0;

486 
pGroup
->
nRól
 = 0;

487 
	}
}

499 
	$mu…ùÀxO≥n
(

500 
sqlôe3_vfs
 *
pVfs
,

501 c⁄° *
zName
,

502 
sqlôe3_fûe
 *
pC⁄n
,

503 
Êags
,

504 *
pOutFœgs


506 
rc
 = 
SQLITE_OK
;

507 
mu…ùÀxC⁄n
 *
pMu…ùÀxO≥n
;

508 
mu…ùÀxGroup
 *
pGroup
 = 0;

509 
sqlôe3_fûe
 *
pSubO≥n
 = 0;

510 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

511 
nName
 = 0;

512 
sz
 = 0;

513 *
zToFªe
 = 0;

515 
	`UNUSED_PARAMETER
(
pVfs
);

516 
	`mem£t
(
pC⁄n
, 0, 
pVfs
->
szOsFûe
);

517 
	`as£π
–
zName
 || (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
) );

522 
	`mu…ùÀxE¡î
();

523 
pMu…ùÀxO≥n
 = (
mu…ùÀxC⁄n
*)
pC⁄n
;

525 if–
rc
==
SQLITE_OK
 ){

527 
nName
 = 
zName
 ? 
	`mu…ùÀxSåÀn30
(zName) : 0;

528 
sz
 = (
mu…ùÀxGroup
)

529 + 
nName
 + 1;

530 
pGroup
 = 
	`sqlôe3_mÆloc64
–
sz
 );

531 if–
pGroup
==0 ){

532 
rc
 = 
SQLITE_NOMEM
;

536 if–
rc
==
SQLITE_OK
 ){

537 c⁄° *
zUri
 = (
Êags
 & 
SQLITE_OPEN_URI
Ë? 
zName
 : 0;

539 
	`mem£t
(
pGroup
, 0, 
sz
);

540 
pMu…ùÀxO≥n
->
pGroup
 =ÖGroup;

541 
pGroup
->
bE«bÀd
 = ()-1;

542 
pGroup
->
bTrunˇã
 = ()
	`sqlôe3_uri_boﬁón
(
zUri
, "truncate",

543 (
Êags
 & 
SQLITE_OPEN_MAIN_DB
)==0);

544 
pGroup
->
szChunk
 = ()
	`sqlôe3_uri_öt64
(
zUri
, "chunksize",

545 
SQLITE_MULTIPLEX_CHUNK_SIZE
);

546 
pGroup
->
szChunk
 = (pGroup->szChunk+0xffff)&~0xffff;

547 if–
zName
 ){

548 *
p
 = (*)&
pGroup
[1];

549 
pGroup
->
zName
 = 
p
;

550 
	`mem˝y
(
pGroup
->
zName
, zName, 
nName
+1);

551 
pGroup
->
nName
 =ÇName;

553 if–
pGroup
->
bE«bÀd
 ){

558 #i‚de‡
SQLITE_OMIT_WSD


559 
sqlôe3PídögByã
;

561 
sqlôe3PídögByã
 = 0x40000000;

563  (
sqlôe3PídögByã
 % 
pGroup
->
szChunk
)>=(pGroup->szChunk-65536) ){

564 
pGroup
->
szChunk
 += 65536;

567 
pGroup
->
Êags
 = flags;

568 
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, 1);

569 if–
rc
==
SQLITE_OK
 ){

570 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
pOutFœgs
, 0);

571 if–
pSubO≥n
==0 && 
rc
==
SQLITE_OK
 )Ñ¯
SQLITE_CANTOPEN
;

573 if–
rc
==
SQLITE_OK
 ){

574 
sqlôe3_öt64
 
sz64
;

576 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, &
sz64
);

577 if–
rc
==
SQLITE_OK
 && 
zName
 ){

578 
bExi°s
;

579 if–
Êags
 & 
SQLITE_OPEN_MASTER_JOURNAL
 ){

580 
pGroup
->
bE«bÀd
 = 0;

582 if–
sz64
==0 ){

583 if–
Êags
 & 
SQLITE_OPEN_MAIN_JOURNAL
 ){

587 
iChunk
 = 1;

589 
rc
 = 
pOrigVfs
->
	`xAc˚ss
(pOrigVfs,

590 
pGroup
->
aRól
[
iChunk
].
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s


592 if–
rc
==
SQLITE_OK
 && 
bExi°s
 ){

593 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
pGroup
->
aRól
[
iChunk
].
z
, 0);

594 if–
rc
==
SQLITE_OK
 ){

595 
rc
 = 
	`mu…ùÀxSubFûíame
(
pGroup
, ++
iChunk
);

598 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

610 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
pGroup
->
aRól
[1].
z
,

611 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

612 
bExi°s
 = 
	`mu…ùÀxSubSize
(
pGroup
, 1, &
rc
)>0;

613 if–
rc
==
SQLITE_OK
 && 
bExi°s
 && 
sz64
==(sz64&0xffff0000) && sz64>0

614 && 
sz64
!=
pGroup
->
szChunk
 ){

615 
pGroup
->
szChunk
 = ()
sz64
;

616 }if–
rc
==
SQLITE_OK
 && !
bExi°s
 && 
sz64
>
pGroup
->
szChunk
 ){

617 
pGroup
->
bE«bÀd
 = 0;

623 if–
rc
==
SQLITE_OK
 ){

624 if–
pSubO≥n
->
pMëhods
->
iVîsi⁄
==1 ){

625 
pMu…ùÀxO≥n
->
ba£
.
pMëhods
 = &
gMu…ùÀx
.
sIoMëhodsV1
;

627 
pMu…ùÀxO≥n
->
ba£
.
pMëhods
 = &
gMu…ùÀx
.
sIoMëhodsV2
;

630 
pGroup
->
pNext
 = 
gMu…ùÀx
.
pGroups
;

631 if–
gMu…ùÀx
.
pGroups
 ) gMu…ùÀx.pGroups->
pPªv
 = 
pGroup
;

632 
gMu…ùÀx
.
pGroups
 = 
pGroup
;

634 
	`mu…ùÀxFªeComp⁄íts
(
pGroup
);

635 
	`sqlôe3_‰ì
(
pGroup
);

638 
	`mu…ùÀxLóve
();

639 
	`sqlôe3_‰ì
(
zToFªe
);

640  
rc
;

641 
	}
}

647 
	$mu…ùÀxDñëe
(

648 
sqlôe3_vfs
 *
pVfs
,

649 c⁄° *
zName
,

650 
syncDú


652 
rc
;

653 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

654 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
zName
, 
syncDú
);

655 if–
rc
==
SQLITE_OK
 ){

659 
nName
 = ()
	`°æí
(
zName
);

660 *
z
;

661 
z
 = 
	`sqlôe3_mÆloc64
(
nName
 + 5);

662 if–
z
==0 ){

663 
rc
 = 
SQLITE_IOERR_NOMEM
;

665 
iChunk
 = 0;

666 
bExi°s
;

668 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_MAIN_JOURNAL
, ++
iChunk
, 
z
);

669 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

670 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

671  
rc
==
SQLITE_OK
 && 
iChunk
>1 ){

672 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_MAIN_JOURNAL
, --
iChunk
, 
z
);

673 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
z
, 
syncDú
);

675 if–
rc
==
SQLITE_OK
 ){

676 
iChunk
 = 0;

678 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_WAL
, ++
iChunk
, 
z
);

679 
rc
 = 
pOrigVfs
->
	`xAc˚ss
’OrigVfs, 
z
, 
SQLITE_ACCESS_EXISTS
, &
bExi°s
);

680 } 
rc
==
SQLITE_OK
 && 
bExi°s
 );

681  
rc
==
SQLITE_OK
 && 
iChunk
>1 ){

682 
	`mu…ùÀxFûíame
(
zName
, 
nName
, 
SQLITE_OPEN_WAL
, --
iChunk
, 
z
);

683 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
z
, 
syncDú
);

687 
	`sqlôe3_‰ì
(
z
);

689  
rc
;

690 
	}
}

692 
	$mu…ùÀxAc˚ss
(
sqlôe3_vfs
 *
a
, c⁄° *
b
, 
c
, *
d
){

693  
gMu…ùÀx
.
pOrigVfs
->
	`xAc˚ss
(gMu…ùÀx.pOrigVfs, 
b
, 
c
, 
d
);

694 
	}
}

695 
	$mu…ùÀxFuŒP©h«me
(
sqlôe3_vfs
 *
a
, c⁄° *
b
, 
c
, *
d
){

696  
gMu…ùÀx
.
pOrigVfs
->
	`xFuŒP©h«me
(gMu…ùÀx.pOrigVfs, 
b
, 
c
, 
d
);

697 
	}
}

698 *
	$mu…ùÀxDlO≥n
(
sqlôe3_vfs
 *
a
, c⁄° *
b
){

699  
gMu…ùÀx
.
pOrigVfs
->
	`xDlO≥n
(gMu…ùÀx.pOrigVfs, 
b
);

700 
	}
}

701 
	$mu…ùÀxDlEº‹
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

702 
gMu…ùÀx
.
pOrigVfs
->
	`xDlEº‹
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

703 
	}
}

704 (*
	$mu…ùÀxDlSym
(
sqlôe3_vfs
 *
a
, *
b
, c⁄° *
c
))(){

705  
gMu…ùÀx
.
pOrigVfs
->
	`xDlSym
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

706 
	}
}

707 
	$mu…ùÀxDlClo£
(
sqlôe3_vfs
 *
a
, *
b
){

708 
gMu…ùÀx
.
pOrigVfs
->
	`xDlClo£
(gMu…ùÀx.pOrigVfs, 
b
);

709 
	}
}

710 
	$mu…ùÀxR™dom√ss
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

711  
gMu…ùÀx
.
pOrigVfs
->
	`xR™dom√ss
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

712 
	}
}

713 
	$mu…ùÀxSÀï
(
sqlôe3_vfs
 *
a
, 
b
){

714  
gMu…ùÀx
.
pOrigVfs
->
	`xSÀï
(gMu…ùÀx.pOrigVfs, 
b
);

715 
	}
}

716 
	$mu…ùÀxCuºítTime
(
sqlôe3_vfs
 *
a
, *
b
){

717  
gMu…ùÀx
.
pOrigVfs
->
	`xCuºítTime
(gMu…ùÀx.pOrigVfs, 
b
);

718 
	}
}

719 
	$mu…ùÀxGëLa°Eº‹
(
sqlôe3_vfs
 *
a
, 
b
, *
c
){

720 if–
gMu…ùÀx
.
pOrigVfs
->
xGëLa°Eº‹
 ){

721  
gMu…ùÀx
.
pOrigVfs
->
	`xGëLa°Eº‹
(gMu…ùÀx.pOrigVfs, 
b
, 
c
);

725 
	}
}

726 
	$mu…ùÀxCuºítTimeI¡64
(
sqlôe3_vfs
 *
a
, 
sqlôe3_öt64
 *
b
){

727  
gMu…ùÀx
.
pOrigVfs
->
	`xCuºítTimeI¡64
(gMu…ùÀx.pOrigVfs, 
b
);

728 
	}
}

737 
	$mu…ùÀxClo£
(
sqlôe3_fûe
 *
pC⁄n
){

738 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

739 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

740 
rc
 = 
SQLITE_OK
;

741 
	`mu…ùÀxE¡î
();

742 
	`mu…ùÀxFªeComp⁄íts
(
pGroup
);

744 if–
pGroup
->
pNext
 )ÖGroup->pNext->
pPªv
 =ÖGroup->pPrev;

745 if–
pGroup
->
pPªv
 ){

746 
pGroup
->
pPªv
->
pNext
 =ÖGroup->pNext;

748 
gMu…ùÀx
.
pGroups
 = 
pGroup
->
pNext
;

750 
	`sqlôe3_‰ì
(
pGroup
);

751 
	`mu…ùÀxLóve
();

752  
rc
;

753 
	}
}

759 
	$mu…ùÀxRód
(

760 
sqlôe3_fûe
 *
pC⁄n
,

761 *
pBuf
,

762 
iAmt
,

763 
sqlôe3_öt64
 
iOf°


765 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

766 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

767 
rc
 = 
SQLITE_OK
;

768 if–!
pGroup
->
bE«bÀd
 ){

769 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

770 if–
pSubO≥n
==0 ){

771 
rc
 = 
SQLITE_IOERR_READ
;

773 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

776  
iAmt
 > 0 ){

777 
i
 = ()(
iOf°
 / 
pGroup
->
szChunk
);

778 
sqlôe3_fûe
 *
pSubO≥n
;

779 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 
NULL
, 1);

780 if–
pSubO≥n
 ){

781 
exåa
 = (()(
iOf°
 % 
pGroup
->
szChunk
Ë+ 
iAmt
) -ÖGroup->szChunk;

782 if–
exåa
<0 )Éxtra = 0;

783 
iAmt
 -
exåa
;

784 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
,

785 
iOf°
 % 
pGroup
->
szChunk
);

786 if–
rc
!=
SQLITE_OK
 ) ;

787 
pBuf
 = (*ÌBu‡+ 
iAmt
;

788 
iOf°
 +
iAmt
;

789 
iAmt
 = 
exåa
;

791 
rc
 = 
SQLITE_IOERR_READ
;

797  
rc
;

798 
	}
}

804 
	$mu…ùÀxWrôe
(

805 
sqlôe3_fûe
 *
pC⁄n
,

806 c⁄° *
pBuf
,

807 
iAmt
,

808 
sqlôe3_öt64
 
iOf°


810 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

811 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

812 
rc
 = 
SQLITE_OK
;

813 if–!
pGroup
->
bE«bÀd
 ){

814 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

815 if–
pSubO≥n
==0 ){

816 
rc
 = 
SQLITE_IOERR_WRITE
;

818 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

821  
rc
==
SQLITE_OK
 && 
iAmt
>0 ){

822 
i
 = ()(
iOf°
 / 
pGroup
->
szChunk
);

823 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 
NULL
, 1);

824 if–
pSubO≥n
 ){

825 
exåa
 = (()(
iOf°
 % 
pGroup
->
szChunk
Ë+ 
iAmt
) -

826 
pGroup
->
szChunk
;

827 if–
exåa
<0 )Éxtra = 0;

828 
iAmt
 -
exåa
;

829 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
,

830 
iOf°
 % 
pGroup
->
szChunk
);

831 
pBuf
 = (*ÌBu‡+ 
iAmt
;

832 
iOf°
 +
iAmt
;

833 
iAmt
 = 
exåa
;

837  
rc
;

838 
	}
}

844 
	$mu…ùÀxTrunˇã
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 
size
){

845 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

846 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

847 
rc
 = 
SQLITE_OK
;

848 
	`mu…ùÀxE¡î
();

849 if–!
pGroup
->
bE«bÀd
 ){

850 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

851 if–
pSubO≥n
==0 ){

852 
rc
 = 
SQLITE_IOERR_TRUNCATE
;

854 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
);

857 
i
;

858 
iBa£Group
 = ()(
size
 / 
pGroup
->
szChunk
);

859 
sqlôe3_fûe
 *
pSubO≥n
;

860 
sqlôe3_vfs
 *
pOrigVfs
 = 
gMu…ùÀx
.pOrigVfs;

862 
i
 = 
pGroup
->
nRól
-1; i>
iBa£Group
 && 
rc
==
SQLITE_OK
; i--){

863 if–
pGroup
->
bTrunˇã
 ){

864 
	`mu…ùÀxSubClo£
(
pGroup
, 
i
, 
pOrigVfs
);

866 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
i
, &
rc
, 0, 0);

867 if–
pSubO≥n
 ){

868 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
(pSubOpen, 0);

872 if–
rc
==
SQLITE_OK
 ){

873 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 
iBa£Group
, &
rc
, 0, 0);

874 if–
pSubO≥n
 ){

875 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
 % 
pGroup
->
szChunk
);

878 if–
rc
 )Ñ¯
SQLITE_IOERR_TRUNCATE
;

880 
	`mu…ùÀxLóve
();

881  
rc
;

882 
	}
}

886 
	$mu…ùÀxSync
(
sqlôe3_fûe
 *
pC⁄n
, 
Êags
){

887 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

888 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

889 
rc
 = 
SQLITE_OK
;

890 
i
;

891 
	`mu…ùÀxE¡î
();

892 
i
=0; i<
pGroup
->
nRól
; i++){

893 
sqlôe3_fûe
 *
pSubO≥n
 = 
pGroup
->
aRól
[
i
].
p
;

894 if–
pSubO≥n
 ){

895 
rc2
 = 
pSubO≥n
->
pMëhods
->
	`xSync
’SubO≥n, 
Êags
);

896 if–
rc2
!=
SQLITE_OK
 ) 
rc
 =Ñc2;

899 
	`mu…ùÀxLóve
();

900  
rc
;

901 
	}
}

906 
	$mu…ùÀxFûeSize
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 *
pSize
){

907 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

908 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

909 
rc
 = 
SQLITE_OK
;

910 
i
;

911 
	`mu…ùÀxE¡î
();

912 if–!
pGroup
->
bE«bÀd
 ){

913 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

914 if–
pSubO≥n
==0 ){

915 
rc
 = 
SQLITE_IOERR_FSTAT
;

917 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, 
pSize
);

920 *
pSize
 = 0;

921 
i
=0; 
rc
==
SQLITE_OK
; i++){

922 
sqlôe3_öt64
 
sz
 = 
	`mu…ùÀxSubSize
(
pGroup
, 
i
, &
rc
);

923 if–
sz
==0 ) ;

924 *
pSize
 = 
i
*(
sqlôe3_öt64
)
pGroup
->
szChunk
 + 
sz
;

927 
	`mu…ùÀxLóve
();

928  
rc
;

929 
	}
}

933 
	$mu…ùÀxLock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

934 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

935 
rc
;

936 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

937 if–
pSubO≥n
 ){

938  
pSubO≥n
->
pMëhods
->
	`xLock
’SubO≥n, 
lock
);

940  
SQLITE_BUSY
;

941 
	}
}

945 
	$mu…ùÀxU∆ock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

946 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

947 
rc
;

948 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

949 if–
pSubO≥n
 ){

950  
pSubO≥n
->
pMëhods
->
	`xU∆ock
’SubO≥n, 
lock
);

952  
SQLITE_IOERR_UNLOCK
;

953 
	}
}

957 
	$mu…ùÀxCheckRe£rvedLock
(
sqlôe3_fûe
 *
pC⁄n
, *
pResOut
){

958 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

959 
rc
;

960 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

961 if–
pSubO≥n
 ){

962  
pSubO≥n
->
pMëhods
->
	`xCheckRe£rvedLock
’SubO≥n, 
pResOut
);

964  
SQLITE_IOERR_CHECKRESERVEDLOCK
;

965 
	}
}

970 
	$mu…ùÀxFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pC⁄n
, 
›
, *
pArg
){

971 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

972 
mu…ùÀxGroup
 *
pGroup
 = 
p
->pGroup;

973 
rc
 = 
SQLITE_ERROR
;

974 
sqlôe3_fûe
 *
pSubO≥n
;

976 if–!
gMu…ùÀx
.
isInôülized
 )  
SQLITE_MISUSE
;

977  
›
 ){

978 
MULTIPLEX_CTRL_ENABLE
:

979 if–
pArg
 ) {

980 
bE«bÀd
 = *(*)
pArg
;

981 
pGroup
->
bE«bÀd
 = ()bEnabled;

982 
rc
 = 
SQLITE_OK
;

985 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
:

986 if–
pArg
 ) {

987 
szChunk
 = *(*)
pArg
;

988 if–
szChunk
<1 ){

989 
rc
 = 
SQLITE_MISUSE
;

992 
szChunk
 = (szChunk + (
MAX_PAGE_SIZE
-1));

993 
szChunk
 &~(
MAX_PAGE_SIZE
-1);

994 
pGroup
->
szChunk
 = szChunk;

995 
rc
 = 
SQLITE_OK
;

999 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
:

1000 
rc
 = 
SQLITE_OK
;

1002 
SQLITE_FCNTL_SIZE_HINT
:

1003 
SQLITE_FCNTL_CHUNK_SIZE
:

1005 
rc
 = 
SQLITE_OK
;

1007 
SQLITE_FCNTL_PRAGMA
: {

1008 **
aF˙é
 = (**)
pArg
;

1016 if–
aF˙é
[1] && 
	`sqlôe3_°ricmp
(aFcntl[1],"multiplex_truncate")==0 ){

1017 if–
aF˙é
[2] &&áFcntl[2][0] ){

1018 if–
	`sqlôe3_°ricmp
(
aF˙é
[2], "on")==0

1019 || 
	`sqlôe3_°ricmp
(
aF˙é
[2], "1")==0 ){

1020 
pGroup
->
bTrunˇã
 = 1;

1022 if–
	`sqlôe3_°ricmp
(
aF˙é
[2], "off")==0

1023 || 
	`sqlôe3_°ricmp
(
aF˙é
[2], "0")==0 ){

1024 
pGroup
->
bTrunˇã
 = 0;

1033 
aF˙é
[0] = 
	`sqlôe3_m¥ötf
(
pGroup
->
bTrunˇã
 ? "on" : "off");

1034 
rc
 = 
SQLITE_OK
;

1041 
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
pGroup
, 0, &
rc
, 
NULL
, 0);

1042 if–
pSubO≥n
 ){

1043 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeC⁄åﬁ
’SubO≥n, 
›
, 
pArg
);

1044 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

1045 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("multiplex/%z", *(**)pArg);

1050  
rc
;

1051 
	}
}

1055 
	$mu…ùÀxSe˘‹Size
(
sqlôe3_fûe
 *
pC⁄n
){

1056 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1057 
rc
;

1058 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1059 if–
pSubO≥n
 &&ÖSubO≥n->
pMëhods
->
xSe˘‹Size
 ){

1060  
pSubO≥n
->
pMëhods
->
	`xSe˘‹Size
(pSubOpen);

1062  
DEFAULT_SECTOR_SIZE
;

1063 
	}
}

1067 
	$mu…ùÀxDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pC⁄n
){

1068 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1069 
rc
;

1070 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1071 if–
pSubO≥n
 ){

1072  
pSubO≥n
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(pSubOpen);

1075 
	}
}

1079 
	$mu…ùÀxShmM≠
(

1080 
sqlôe3_fûe
 *
pC⁄n
,

1081 
iRegi⁄
,

1082 
szRegi⁄
,

1083 
bExãnd
,

1084 vﬁ©ûê**
µ


1086 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1087 
rc
;

1088 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1089 if–
pSubO≥n
 ){

1090  
pSubO≥n
->
pMëhods
->
	`xShmM≠
’SubO≥n, 
iRegi⁄
, 
szRegi⁄
, 
bExãnd
,
µ
);

1092  
SQLITE_IOERR
;

1093 
	}
}

1097 
	$mu…ùÀxShmLock
(

1098 
sqlôe3_fûe
 *
pC⁄n
,

1099 
of°
,

1100 
n
,

1101 
Êags


1103 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1104 
rc
;

1105 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1106 if–
pSubO≥n
 ){

1107  
pSubO≥n
->
pMëhods
->
	`xShmLock
’SubO≥n, 
of°
, 
n
, 
Êags
);

1109  
SQLITE_BUSY
;

1110 
	}
}

1114 
	$mu…ùÀxShmB¨rõr
(
sqlôe3_fûe
 *
pC⁄n
){

1115 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1116 
rc
;

1117 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1118 if–
pSubO≥n
 ){

1119 
pSubO≥n
->
pMëhods
->
	`xShmB¨rõr
(pSubOpen);

1121 
	}
}

1125 
	$mu…ùÀxShmUnm≠
(
sqlôe3_fûe
 *
pC⁄n
, 
dñëeFœg
){

1126 
mu…ùÀxC⁄n
 *
p
 = (mu…ùÀxC⁄n*)
pC⁄n
;

1127 
rc
;

1128 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`mu…ùÀxSubO≥n
(
p
->
pGroup
, 0, &
rc
, 
NULL
, 0);

1129 if–
pSubO≥n
 ){

1130  
pSubO≥n
->
pMëhods
->
	`xShmUnm≠
’SubO≥n, 
dñëeFœg
);

1132  
SQLITE_OK
;

1133 
	}
}

1148 
	$sqlôe3_mu…ùÀx_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
){

1149 
sqlôe3_vfs
 *
pOrigVfs
;

1150 if–
gMu…ùÀx
.
isInôülized
 )  
SQLITE_MISUSE
;

1151 
pOrigVfs
 = 
	`sqlôe3_vfs_föd
(
zOrigVfsName
);

1152 if–
pOrigVfs
==0 )  
SQLITE_ERROR
;

1153 
	`as£π
–
pOrigVfs
!=&
gMu…ùÀx
.
sThisVfs
 );

1154 
gMu…ùÀx
.
pMuãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

1155 if–!
gMu…ùÀx
.
pMuãx
 ){

1156  
SQLITE_NOMEM
;

1158 
gMu…ùÀx
.
pGroups
 = 
NULL
;

1159 
gMu…ùÀx
.
isInôülized
 = 1;

1160 
gMu…ùÀx
.
pOrigVfs
 =ÖOrigVfs;

1161 
gMu…ùÀx
.
sThisVfs
 = *
pOrigVfs
;

1162 
gMu…ùÀx
.
sThisVfs
.
szOsFûe
 +(
mu…ùÀxC⁄n
);

1163 
gMu…ùÀx
.
sThisVfs
.
zName
 = 
SQLITE_MULTIPLEX_VFS_NAME
;

1164 
gMu…ùÀx
.
sThisVfs
.
xO≥n
 = 
mu…ùÀxO≥n
;

1165 
gMu…ùÀx
.
sThisVfs
.
xDñëe
 = 
mu…ùÀxDñëe
;

1166 
gMu…ùÀx
.
sThisVfs
.
xAc˚ss
 = 
mu…ùÀxAc˚ss
;

1167 
gMu…ùÀx
.
sThisVfs
.
xFuŒP©h«me
 = 
mu…ùÀxFuŒP©h«me
;

1168 
gMu…ùÀx
.
sThisVfs
.
xDlO≥n
 = 
mu…ùÀxDlO≥n
;

1169 
gMu…ùÀx
.
sThisVfs
.
xDlEº‹
 = 
mu…ùÀxDlEº‹
;

1170 
gMu…ùÀx
.
sThisVfs
.
xDlSym
 = 
mu…ùÀxDlSym
;

1171 
gMu…ùÀx
.
sThisVfs
.
xDlClo£
 = 
mu…ùÀxDlClo£
;

1172 
gMu…ùÀx
.
sThisVfs
.
xR™dom√ss
 = 
mu…ùÀxR™dom√ss
;

1173 
gMu…ùÀx
.
sThisVfs
.
xSÀï
 = 
mu…ùÀxSÀï
;

1174 
gMu…ùÀx
.
sThisVfs
.
xCuºítTime
 = 
mu…ùÀxCuºítTime
;

1175 
gMu…ùÀx
.
sThisVfs
.
xGëLa°Eº‹
 = 
mu…ùÀxGëLa°Eº‹
;

1176 
gMu…ùÀx
.
sThisVfs
.
xCuºítTimeI¡64
 = 
mu…ùÀxCuºítTimeI¡64
;

1178 
gMu…ùÀx
.
sIoMëhodsV1
.
iVîsi⁄
 = 1;

1179 
gMu…ùÀx
.
sIoMëhodsV1
.
xClo£
 = 
mu…ùÀxClo£
;

1180 
gMu…ùÀx
.
sIoMëhodsV1
.
xRód
 = 
mu…ùÀxRód
;

1181 
gMu…ùÀx
.
sIoMëhodsV1
.
xWrôe
 = 
mu…ùÀxWrôe
;

1182 
gMu…ùÀx
.
sIoMëhodsV1
.
xTrunˇã
 = 
mu…ùÀxTrunˇã
;

1183 
gMu…ùÀx
.
sIoMëhodsV1
.
xSync
 = 
mu…ùÀxSync
;

1184 
gMu…ùÀx
.
sIoMëhodsV1
.
xFûeSize
 = 
mu…ùÀxFûeSize
;

1185 
gMu…ùÀx
.
sIoMëhodsV1
.
xLock
 = 
mu…ùÀxLock
;

1186 
gMu…ùÀx
.
sIoMëhodsV1
.
xU∆ock
 = 
mu…ùÀxU∆ock
;

1187 
gMu…ùÀx
.
sIoMëhodsV1
.
xCheckRe£rvedLock
 = 
mu…ùÀxCheckRe£rvedLock
;

1188 
gMu…ùÀx
.
sIoMëhodsV1
.
xFûeC⁄åﬁ
 = 
mu…ùÀxFûeC⁄åﬁ
;

1189 
gMu…ùÀx
.
sIoMëhodsV1
.
xSe˘‹Size
 = 
mu…ùÀxSe˘‹Size
;

1190 
gMu…ùÀx
.
sIoMëhodsV1
.
xDevi˚Ch¨a˘îi°ics
 =

1191 
mu…ùÀxDevi˚Ch¨a˘îi°ics
;

1192 
gMu…ùÀx
.
sIoMëhodsV2
 = gMu…ùÀx.
sIoMëhodsV1
;

1193 
gMu…ùÀx
.
sIoMëhodsV2
.
iVîsi⁄
 = 2;

1194 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmM≠
 = 
mu…ùÀxShmM≠
;

1195 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmLock
 = 
mu…ùÀxShmLock
;

1196 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmB¨rõr
 = 
mu…ùÀxShmB¨rõr
;

1197 
gMu…ùÀx
.
sIoMëhodsV2
.
xShmUnm≠
 = 
mu…ùÀxShmUnm≠
;

1198 
	`sqlôe3_vfs_ªgi°î
(&
gMu…ùÀx
.
sThisVfs
, 
makeDeÁu…
);

1200 
	`sqlôe3_auto_exãnsi⁄
(((*)())
mu…ùÀxFuncInô
);

1202  
SQLITE_OK
;

1203 
	}
}

1214 
	$sqlôe3_mu…ùÀx_shutdown
(
eF‹˚
){

1215 
rc
 = 
SQLITE_OK
;

1216 if–
gMu…ùÀx
.
isInôülized
==0 )  
SQLITE_MISUSE
;

1217 if–
gMu…ùÀx
.
pGroups
 ){

1218 
	`sqlôe3_log
(
SQLITE_MISUSE
, "sqlite3_multiplex_shutdown() called "

1220 if–!
eF‹˚
 )  
SQLITE_MISUSE
;

1221 
rc
 = 
SQLITE_MISUSE
;

1223 
gMu…ùÀx
.
isInôülized
 = 0;

1224 
	`sqlôe3_muãx_‰ì
(
gMu…ùÀx
.
pMuãx
);

1225 
	`sqlôe3_vfs_uƒegi°î
(&
gMu…ùÀx
.
sThisVfs
);

1226 
	`mem£t
(&
gMu…ùÀx
, 0, (gMultiplex));

1227  
rc
;

1228 
	}
}

1231 #ifde‡
SQLITE_TEST


1232 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1233 
	~"sqlôe_t˛.h
"

1235 
	~"t˛.h
"

1236 #i‚de‡
SQLITE_TCLAPI


1237 
	#SQLITE_TCLAPI


	)

1240 c⁄° *
sqlôe3EºName
();

1246 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_öôülize
(

1247 * 
˛õ¡D©a
,

1248 
T˛_I¡îp
 *
öãΩ
,

1249 
objc
,

1250 
T˛_Obj
 *
CONST
 
objv
[]

1252 c⁄° *
zName
;

1253 
makeDeÁu…
;

1254 
rc
;

1256 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

1259 if–
objc
!=3 ){

1260 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME MAKEDEFAULT");

1261  
TCL_ERROR
;

1263 
zName
 = 
	`T˛_GëSåög
(
objv
[1]);

1264 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
makeDeÁu…
ËË 
TCL_ERROR
;

1265 if–
zName
[0]=='\0' ) zName = 0;

1268 
rc
 = 
	`sqlôe3_mu…ùÀx_öôülize
(
zName
, 
makeDeÁu…
);

1269 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1271  
TCL_OK
;

1272 
	}
}

1277 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_shutdown
(

1278 * 
˛õ¡D©a
,

1279 
T˛_I¡îp
 *
öãΩ
,

1280 
objc
,

1281 
T˛_Obj
 *
CONST
 
objv
[]

1283 
rc
;

1285 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

1287 if–
objc
==2 && 
	`°rcmp
(
	`T˛_GëSåög
(
objv
[1]),"-force")!=0 ){

1288 
objc
 = 3;

1290 if–(
objc
!=1 && objc!=2) ){

1291 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "?-force?");

1292  
TCL_ERROR
;

1296 
rc
 = 
	`sqlôe3_mu…ùÀx_shutdown
(
objc
==2);

1297 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1299  
TCL_OK
;

1300 
	}
}

1305 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_dump
(

1306 * 
˛õ¡D©a
,

1307 
T˛_I¡îp
 *
öãΩ
,

1308 
objc
,

1309 
T˛_Obj
 *
CONST
 
objv
[]

1311 
T˛_Obj
 *
pResu…
;

1312 
T˛_Obj
 *
pGroupTîm
;

1313 
mu…ùÀxGroup
 *
pGroup
;

1314 
i
;

1315 
nChunks
 = 0;

1317 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

1318 
	`UNUSED_PARAMETER
(
objc
);

1319 
	`UNUSED_PARAMETER
(
objv
);

1321 
pResu…
 = 
	`T˛_NewObj
();

1322 
	`mu…ùÀxE¡î
();

1323 
pGroup
=
gMu…ùÀx
.
pGroups
;ÖGroup;ÖGroupıGroup->
pNext
){

1324 
pGroupTîm
 = 
	`T˛_NewObj
();

1326 if–
pGroup
->
zName
 ){

1327 
pGroup
->
zName
[pGroup->
nName
] = '\0';

1328 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1329 
	`T˛_NewSåögObj
(
pGroup
->
zName
, -1));

1331 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
, 
	`T˛_NewObj
());

1333 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1334 
	`T˛_NewI¡Obj
(
pGroup
->
nName
));

1335 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1336 
	`T˛_NewI¡Obj
(
pGroup
->
Êags
));

1339 
i
=0; i<
pGroup
->
nRól
; i++){

1340 if–
pGroup
->
aRól
[
i
].
p
!=0 ) 
nChunks
++;

1342 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1343 
	`T˛_NewI¡Obj
(
nChunks
));

1345 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1346 
	`T˛_NewI¡Obj
(
pGroup
->
szChunk
));

1347 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1348 
	`T˛_NewI¡Obj
(
pGroup
->
nRól
));

1350 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pResu…
, 
pGroupTîm
);

1352 
	`mu…ùÀxLóve
();

1353 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1354  
TCL_OK
;

1355 
	}
}

1360 
SQLITE_TCLAPI
 
	$ã°_mu…ùÀx_c⁄åﬁ
(

1361 
Clõ¡D©a
 
cd
,

1362 
T˛_I¡îp
 *
öãΩ
,

1363 
objc
,

1364 
T˛_Obj
 *
CONST
 
objv
[]

1366 
rc
;

1367 
idx
;

1368 
T˛_CmdInfo
 
cmdInfo
;

1369 
sqlôe3
 *
db
;

1370 
iVÆue
 = 0;

1371 *
pArg
 = 0;

1373 
	sSubComm™d
 {

1374 c⁄° *
zName
;

1375 
›
;

1376 
¨gty≥
;

1377 } 
aSub
[] = {

1378 { "íabÀ", 
MULTIPLEX_CTRL_ENABLE
, 1 },

1379 { "chunk_size", 
MULTIPLEX_CTRL_SET_CHUNK_SIZE
, 1 },

1380 { "max_chunks", 
MULTIPLEX_CTRL_SET_MAX_CHUNKS
, 1 },

1384 if–
objc
!=5 ){

1385 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE DBNAME SUB-COMMAND INT-VALUE");

1386  
TCL_ERROR
;

1389 if–0==
	`T˛_GëComm™dInfo
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
cmdInfo
) ){

1390 
	`T˛_AµídResu…
(
öãΩ
, "expected database handle, got \"", 0);

1391 
	`T˛_AµídResu…
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), "\"", 0);

1392  
TCL_ERROR
;

1394 
db
 = *(
sqlôe3
 **)
cmdInfo
.
objClõ¡D©a
;

1397 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

1398 
öãΩ
, 
objv
[3], 
aSub
, ◊Sub[0]), "sub-comm™d", 0, &
idx


1400 if–
rc
!=
TCL_OK
 ) Ñc;

1402  
aSub
[
idx
].
¨gty≥
 ){

1404 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[4], &
iVÆue
) ){

1405  
TCL_ERROR
;

1407 
pArg
 = (*)&
iVÆue
;

1410 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 4, 
objv
, "SUB-COMMAND");

1411  
TCL_ERROR
;

1414 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, 
	`T˛_GëSåög
(
objv
[2]), 
aSub
[
idx
].
›
, 
pArg
);

1415 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1416  (
rc
==
SQLITE_OK
Ë? 
TCL_OK
 : 
TCL_ERROR
;

1417 
	}
}

1424 
	$Sqlôemu…ùÀx_Inô
(
T˛_I¡îp
 *
öãΩ
){

1426 *
zName
;

1427 
T˛_ObjCmdProc
 *
xProc
;

1428 } 
aCmd
[] = {

1429 { "sqlôe3_mu…ùÀx_öôülize", 
ã°_mu…ùÀx_öôülize
 },

1430 { "sqlôe3_mu…ùÀx_shutdown", 
ã°_mu…ùÀx_shutdown
 },

1431 { "sqlôe3_mu…ùÀx_dump", 
ã°_mu…ùÀx_dump
 },

1432 { "sqlôe3_mu…ùÀx_c⁄åﬁ", 
ã°_mu…ùÀx_c⁄åﬁ
 },

1434 
i
;

1436 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

1437 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

1440  
TCL_OK
;

1441 
	}
}

	@test_multiplex.h

23 #i‚de‡
SQLITE_TEST_MULTIPLEX_H


24 
	#SQLITE_TEST_MULTIPLEX_H


	)

45 
	#MULTIPLEX_CTRL_ENABLE
 214014

	)

46 
	#MULTIPLEX_CTRL_SET_CHUNK_SIZE
 214015

	)

47 
	#MULTIPLEX_CTRL_SET_MAX_CHUNKS
 214016

	)

49 #ifde‡
__˝lu•lus


82 
sqlôe3_mu…ùÀx_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
);

93 
sqlôe3_mu…ùÀx_shutdown
(
eF‹˚
);

95 #ifde‡
__˝lu•lus


	@test_mutex.c

15 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

16 
	~"sqlôe_t˛.h
"

18 
	~"t˛.h
"

20 
	~"sqlôe3.h
"

21 
	~"sqlôeI¡.h
"

22 
	~<°dlib.h
>

23 
	~<as£π.h
>

24 
	~<°rög.h
>

26 
	#MAX_MUTEXES
 (
SQLITE_MUTEX_STATIC_VFS3
+1)

	)

27 
	#STATIC_MUTEXES
 (
MAX_MUTEXES
-(
SQLITE_MUTEX_RECURSIVE
+1))

	)

30 c⁄° *
sqlôe3EºName
();

32 c⁄° *
	gaName
[
MAX_MUTEXES
+1] = {

40 
	ssqlôe3_muãx
 {

41 
sqlôe3_muãx
 *
	mpRól
;

42 
	meTy≥
;

46 
	sã°_muãx_globÆs
 {

47 
	misIn°ÆÀd
;

48 
	mdißbÀInô
;

49 
	mdißbÀTry
;

50 
	misInô
;

51 
sqlôe3_muãx_mëhods
 
	mm
;

52 
	maCou¡î
[
MAX_MUTEXES
];

53 
sqlôe3_muãx
 
	maSètic
[
STATIC_MUTEXES
];

54 } 
	gg
 = {0};

57 
	$cou¡îMuãxHñd
(
sqlôe3_muãx
 *
p
){

58  
g
.
m
.
	`xMuãxHñd
(
p
->
pRól
);

59 
	}
}

62 
	$cou¡îMuãxNŸhñd
(
sqlôe3_muãx
 *
p
){

63  
g
.
m
.
	`xMuãxNŸhñd
(
p
->
pRól
);

64 
	}
}

71 
	$cou¡îMuãxInô
(){

72 
rc
;

73 if–
g
.
dißbÀInô
 )  g.disableInit;

74 
rc
 = 
g
.
m
.
	`xMuãxInô
();

75 
g
.
isInô
 = 1;

76  
rc
;

77 
	}
}

82 
	$cou¡îMuãxEnd
(){

83 
g
.
isInô
 = 0;

84  
g
.
m
.
	`xMuãxEnd
();

85 
	}
}

90 
sqlôe3_muãx
 *
	$cou¡îMuãxAŒoc
(
eTy≥
){

91 
sqlôe3_muãx
 *
pRól
;

92 
sqlôe3_muãx
 *
pRë
 = 0;

94 
	`as£π
–
g
.
isInô
 );

95 
	`as£π
–
eTy≥
>=
SQLITE_MUTEX_FAST
 );

96 
	`as£π
–
eTy≥
<=
SQLITE_MUTEX_STATIC_VFS3
 );

98 
pRól
 = 
g
.
m
.
	`xMuãxAŒoc
(
eTy≥
);

99 if–!
pRól
 )  0;

101 if–
eTy≥
==
SQLITE_MUTEX_FAST
 ||ÉTy≥==
SQLITE_MUTEX_RECURSIVE
 ){

102 
pRë
 = (
sqlôe3_muãx
 *)
	`mÆloc
((sqlite3_mutex));

104 
eSèticTy≥
 = 
eTy≥
 - (
MAX_MUTEXES
 - 
STATIC_MUTEXES
);

105 
	`as£π
–
eSèticTy≥
>=0 );

106 
	`as£π
–
eSèticTy≥
<
STATIC_MUTEXES
 );

107 
pRë
 = &
g
.
aSètic
[
eSèticTy≥
];

110 
pRë
->
eTy≥
 =ÉType;

111 
pRë
->
pRól
 =ÖReal;

112  
pRë
;

113 
	}
}

118 
	$cou¡îMuãxFªe
(
sqlôe3_muãx
 *
p
){

119 
	`as£π
–
g
.
isInô
 );

120 
g
.
m
.
	`xMuãxFªe
(
p
->
pRól
);

121 if–
p
->
eTy≥
==
SQLITE_MUTEX_FAST
 ||Ö->eTy≥==
SQLITE_MUTEX_RECURSIVE
 ){

122 
	`‰ì
(
p
);

124 
	}
}

129 
	$cou¡îMuãxE¡î
(
sqlôe3_muãx
 *
p
){

130 
	`as£π
–
g
.
isInô
 );

131 
	`as£π
–
p
->
eTy≥
>=0 );

132 
	`as£π
–
p
->
eTy≥
<
MAX_MUTEXES
 );

133 
g
.
aCou¡î
[
p
->
eTy≥
]++;

134 
g
.
m
.
	`xMuãxE¡î
(
p
->
pRól
);

135 
	}
}

140 
	$cou¡îMuãxTry
(
sqlôe3_muãx
 *
p
){

141 
	`as£π
–
g
.
isInô
 );

142 
	`as£π
–
p
->
eTy≥
>=0 );

143 
	`as£π
–
p
->
eTy≥
<
MAX_MUTEXES
 );

144 
g
.
aCou¡î
[
p
->
eTy≥
]++;

145 if–
g
.
dißbÀTry
 )  
SQLITE_BUSY
;

146  
g
.
m
.
	`xMuãxTry
(
p
->
pRól
);

147 
	}
}

151 
	$cou¡îMuãxLóve
(
sqlôe3_muãx
 *
p
){

152 
	`as£π
–
g
.
isInô
 );

153 
g
.
m
.
	`xMuãxLóve
(
p
->
pRól
);

154 
	}
}

159 
SQLITE_TCLAPI
 
	$ã°_shutdown
(

160 * 
˛õ¡D©a
,

161 
T˛_I¡îp
 *
öãΩ
,

162 
objc
,

163 
T˛_Obj
 *
CONST
 
objv
[]

165 
rc
;

167 if–
objc
!=1 ){

168 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

169  
TCL_ERROR
;

172 
rc
 = 
	`sqlôe3_shutdown
();

173 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

174  
TCL_OK
;

175 
	}
}

180 
SQLITE_TCLAPI
 
	$ã°_öôülize
(

181 * 
˛õ¡D©a
,

182 
T˛_I¡îp
 *
öãΩ
,

183 
objc
,

184 
T˛_Obj
 *
CONST
 
objv
[]

186 
rc
;

188 if–
objc
!=1 ){

189 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

190  
TCL_ERROR
;

193 
rc
 = 
	`sqlôe3_öôülize
();

194 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

195  
TCL_OK
;

196 
	}
}

201 
SQLITE_TCLAPI
 
	$ã°_ö°Æl_muãx_cou¡îs
(

202 * 
˛õ¡D©a
,

203 
T˛_I¡îp
 *
öãΩ
,

204 
objc
,

205 
T˛_Obj
 *
CONST
 
objv
[]

207 
rc
 = 
SQLITE_OK
;

208 
isIn°Æl
;

210 
sqlôe3_muãx_mëhods
 
cou¡î_mëhods
 = {

211 
cou¡îMuãxInô
,

212 
cou¡îMuãxEnd
,

213 
cou¡îMuãxAŒoc
,

214 
cou¡îMuãxFªe
,

215 
cou¡îMuãxE¡î
,

216 
cou¡îMuãxTry
,

217 
cou¡îMuãxLóve
,

218 
cou¡îMuãxHñd
,

219 
cou¡îMuãxNŸhñd


222 if–
objc
!=2 ){

223 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "BOOLEAN");

224  
TCL_ERROR
;

226 if–
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[1], &
isIn°Æl
) ){

227  
TCL_ERROR
;

230 
	`as£π
(
isIn°Æl
==0 || isInstall==1);

231 
	`as£π
(
g
.
isIn°ÆÀd
==0 || g.isInstalled==1);

232 if–
isIn°Æl
==
g
.
isIn°ÆÀd
 ){

233 
	`T˛_AµídResu…
(
öãΩ
, "mutex countersáre ", 0);

234 
	`T˛_AµídResu…
(
öãΩ
, 
isIn°Æl
?"already installed":"not installed", 0);

235  
TCL_ERROR
;

238 if–
isIn°Æl
 ){

239 
	`as£π
–
g
.
m
.
xMuãxAŒoc
==0 );

240 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETMUTEX
, &
g
.
m
);

241 if–
rc
==
SQLITE_OK
 ){

242 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
cou¡î_mëhods
);

244 
g
.
dißbÀTry
 = 0;

246 
	`as£π
–
g
.
m
.
xMuãxAŒoc
 );

247 
rc
 = 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_MUTEX
, &
g
.
m
);

248 
	`mem£t
(&
g
.
m
, 0, (
sqlôe3_muãx_mëhods
));

251 if–
rc
==
SQLITE_OK
 ){

252 
g
.
isIn°ÆÀd
 = 
isIn°Æl
;

255 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

256  
TCL_OK
;

257 
	}
}

262 
SQLITE_TCLAPI
 
	$ã°_ªad_muãx_cou¡îs
(

263 * 
˛õ¡D©a
,

264 
T˛_I¡îp
 *
öãΩ
,

265 
objc
,

266 
T˛_Obj
 *
CONST
 
objv
[]

268 
T˛_Obj
 *
pRë
;

269 
ii
;

271 if–
objc
!=1 ){

272 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

273  
TCL_ERROR
;

276 
pRë
 = 
	`T˛_NewObj
();

277 
	`T˛_In¸RefCou¡
(
pRë
);

278 
ii
=0; ii<
MAX_MUTEXES
; ii++){

279 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
aName
[
ii
], -1));

280 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pRë
, 
	`T˛_NewI¡Obj
(
g
.
aCou¡î
[
ii
]));

282 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

283 
	`T˛_De¸RefCou¡
(
pRë
);

285  
TCL_OK
;

286 
	}
}

291 
SQLITE_TCLAPI
 
	$ã°_˛ór_muãx_cou¡îs
(

292 * 
˛õ¡D©a
,

293 
T˛_I¡îp
 *
öãΩ
,

294 
objc
,

295 
T˛_Obj
 *
CONST
 
objv
[]

297 
ii
;

299 if–
objc
!=1 ){

300 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

301  
TCL_ERROR
;

304 
ii
=0; ii<
MAX_MUTEXES
; ii++){

305 
g
.
aCou¡î
[
ii
] = 0;

307  
TCL_OK
;

308 
	}
}

315 
SQLITE_TCLAPI
 
	$ã°_Æloc_muãx
(

316 * 
˛õ¡D©a
,

317 
T˛_I¡îp
 *
öãΩ
,

318 
objc
,

319 
T˛_Obj
 *
CONST
 
objv
[]

321 #i‡
SQLITE_THREADSAFE


322 
sqlôe3_muãx
 *
p
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

323 
zBuf
[100];

324 
	`sqlôe3_muãx_‰ì
(
p
);

325 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%p", 
p
);

326 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, (*)0);

328  
TCL_OK
;

329 
	}
}

342 
SQLITE_TCLAPI
 
	$ã°_c⁄fig
(

343 * 
˛õ¡D©a
,

344 
T˛_I¡îp
 *
öãΩ
,

345 
objc
,

346 
T˛_Obj
 *
CONST
 
objv
[]

348 
	sC⁄figO±i⁄
 {

349 c⁄° *
zName
;

350 
iVÆue
;

351 } 
aO±
[] = {

352 {"sögÀthªad", 
SQLITE_CONFIG_SINGLETHREAD
},

353 {"mu…ôhªad", 
SQLITE_CONFIG_MULTITHREAD
},

354 {"£rülized", 
SQLITE_CONFIG_SERIALIZED
},

357 
s
 = (
C⁄figO±i⁄
);

358 
i
;

359 
rc
;

361 if–
objc
!=2 ){

362 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

363  
TCL_ERROR
;

366 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
objv
[1], 
aO±
, 
s
, "Êag", 0, &
i
) ){

367 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[1], &
i
) ){

368  
TCL_ERROR
;

371 
i
 = 
aO±
[i].
iVÆue
;

374 
rc
 = 
	`sqlôe3_c⁄fig
(
i
);

375 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_VOLATILE
);

376  
TCL_OK
;

377 
	}
}

379 
sqlôe3
 *
	$gëDbPoöãr
(
T˛_I¡îp
 *
pI¡îp
, 
T˛_Obj
 *
pObj
){

380 
sqlôe3
 *
db
;

381 
T˛_CmdInfo
 
öfo
;

382 *
zCmd
 = 
	`T˛_GëSåög
(
pObj
);

383 if–
	`T˛_GëComm™dInfo
(
pI¡îp
, 
zCmd
, &
öfo
) ){

384 
db
 = *((
sqlôe3
 **)
öfo
.
objClõ¡D©a
);

386 
db
 = (
sqlôe3
*)
	`sqlôe3Te°TextToPå
(
zCmd
);

388 
	`as£π
–
db
 );

389  
db
;

390 
	}
}

392 
sqlôe3_muãx
 *
	$gëSèticMuãxPoöãr
(

393 
T˛_I¡îp
 *
pI¡îp
,

394 
T˛_Obj
 *
pObj


396 
iMuãx
;

397 if–
	`T˛_GëIndexFromObj
(
pI¡îp
, 
pObj
, 
aName
, "muãxÇame", 0, &
iMuãx
) ){

400 
	`as£π
–
iMuãx
!=
SQLITE_MUTEX_FAST
 && iMuãx!=
SQLITE_MUTEX_RECURSIVE
 );

401  
	`cou¡îMuãxAŒoc
(
iMuãx
);

402 
	}
}

404 
SQLITE_TCLAPI
 
	$ã°_íãr_°©ic_muãx
(

405 * 
˛õ¡D©a
,

406 
T˛_I¡îp
 *
öãΩ
,

407 
objc
,

408 
T˛_Obj
 *
CONST
 
objv
[]

410 
sqlôe3_muãx
 *
pMuãx
;

411 if–
objc
!=2 ){

412 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME");

413  
TCL_ERROR
;

415 
pMuãx
 = 
	`gëSèticMuãxPoöãr
(
öãΩ
, 
objv
[1]);

416 if–!
pMuãx
 ){

417  
TCL_ERROR
;

419 
	`sqlôe3_muãx_íãr
(
pMuãx
);

420  
TCL_OK
;

421 
	}
}

423 
SQLITE_TCLAPI
 
	$ã°_Àave_°©ic_muãx
(

424 * 
˛õ¡D©a
,

425 
T˛_I¡îp
 *
öãΩ
,

426 
objc
,

427 
T˛_Obj
 *
CONST
 
objv
[]

429 
sqlôe3_muãx
 *
pMuãx
;

430 if–
objc
!=2 ){

431 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME");

432  
TCL_ERROR
;

434 
pMuãx
 = 
	`gëSèticMuãxPoöãr
(
öãΩ
, 
objv
[1]);

435 if–!
pMuãx
 ){

436  
TCL_ERROR
;

438 
	`sqlôe3_muãx_Àave
(
pMuãx
);

439  
TCL_OK
;

440 
	}
}

442 
SQLITE_TCLAPI
 
	$ã°_íãr_db_muãx
(

443 * 
˛õ¡D©a
,

444 
T˛_I¡îp
 *
öãΩ
,

445 
objc
,

446 
T˛_Obj
 *
CONST
 
objv
[]

448 
sqlôe3
 *
db
;

449 if–
objc
!=2 ){

450 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

451  
TCL_ERROR
;

453 
db
 = 
	`gëDbPoöãr
(
öãΩ
, 
objv
[1]);

454 if–!
db
 ){

455  
TCL_ERROR
;

457 
	`sqlôe3_muãx_íãr
(
	`sqlôe3_db_muãx
(
db
));

458  
TCL_OK
;

459 
	}
}

461 
SQLITE_TCLAPI
 
	$ã°_Àave_db_muãx
(

462 * 
˛õ¡D©a
,

463 
T˛_I¡îp
 *
öãΩ
,

464 
objc
,

465 
T˛_Obj
 *
CONST
 
objv
[]

467 
sqlôe3
 *
db
;

468 if–
objc
!=2 ){

469 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

470  
TCL_ERROR
;

472 
db
 = 
	`gëDbPoöãr
(
öãΩ
, 
objv
[1]);

473 if–!
db
 ){

474  
TCL_ERROR
;

476 
	`sqlôe3_muãx_Àave
(
	`sqlôe3_db_muãx
(
db
));

477  
TCL_OK
;

478 
	}
}

480 
	$Sqlôëe°_muãx_Inô
(
T˛_I¡îp
 *
öãΩ
){

482 *
zName
;

483 
T˛_ObjCmdProc
 *
xProc
;

484 } 
aCmd
[] = {

485 { "sqlôe3_shutdown", (
T˛_ObjCmdProc
*)
ã°_shutdown
 },

486 { "sqlôe3_öôülize", (
T˛_ObjCmdProc
*)
ã°_öôülize
 },

487 { "sqlôe3_c⁄fig", (
T˛_ObjCmdProc
*)
ã°_c⁄fig
 },

489 { "íãr_°©ic_muãx", (
T˛_ObjCmdProc
*)
ã°_íãr_°©ic_muãx
 },

490 { "Àave_°©ic_muãx", (
T˛_ObjCmdProc
*)
ã°_Àave_°©ic_muãx
 },

492 { "íãr_db_muãx", (
T˛_ObjCmdProc
*)
ã°_íãr_db_muãx
 },

493 { "Àave_db_muãx", (
T˛_ObjCmdProc
*)
ã°_Àave_db_muãx
 },

495 { "Æloc_dóŒoc_muãx", (
T˛_ObjCmdProc
*)
ã°_Æloc_muãx
 },

496 { "ö°Æl_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_ö°Æl_muãx_cou¡îs
 },

497 { "ªad_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_ªad_muãx_cou¡îs
 },

498 { "˛ór_muãx_cou¡îs", (
T˛_ObjCmdProc
*)
ã°_˛ór_muãx_cou¡îs
 },

500 
i
;

501 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

502 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

505 
	`T˛_LökV¨
(
öãΩ
, "disable_mutex_init",

506 (*)&
g
.
dißbÀInô
, 
TCL_LINK_INT
);

507 
	`T˛_LökV¨
(
öãΩ
, "disable_mutex_try",

508 (*)&
g
.
dißbÀTry
, 
TCL_LINK_INT
);

509  
SQLITE_OK
;

510 
	}
}

	@test_onefile.c

82 
	~"sqlôe3.h
"

83 
	~<as£π.h
>

84 
	~<°rög.h
>

89 
	#BLOCKSIZE
 512

	)

90 
	#BLOBSIZE
 10485760

	)

95 
	#FS_VFS_NAME
 "fs"

	)

97 
fs_ªÆ_fûe
 
	tfs_ªÆ_fûe
;

98 
	sfs_ªÆ_fûe
 {

99 
sqlôe3_fûe
 *
	mpFûe
;

100 c⁄° *
	mzName
;

101 
	mnD©aba£
;

102 
	mnJou∫Æ
;

103 
	mnBlob
;

104 
	mnRef
;

105 
fs_ªÆ_fûe
 *
	mpNext
;

106 
fs_ªÆ_fûe
 **
	mµThis
;

109 
fs_fûe
 
	tfs_fûe
;

110 
	sfs_fûe
 {

111 
sqlôe3_fûe
 
	mba£
;

112 
	meTy≥
;

113 
fs_ªÆ_fûe
 *
	mpRól
;

116 
tmp_fûe
 
	ttmp_fûe
;

117 
	stmp_fûe
 {

118 
sqlôe3_fûe
 
	mba£
;

119 
	mnSize
;

120 
	mnAŒoc
;

121 *
	mzAŒoc
;

125 
	#DATABASE_FILE
 1

	)

126 
	#JOURNAL_FILE
 2

	)

131 
fsClo£
(
sqlôe3_fûe
*);

132 
fsRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

133 
fsWrôe
(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

134 
fsTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

135 
fsSync
(
sqlôe3_fûe
*, 
Êags
);

136 
fsFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

137 
fsLock
(
sqlôe3_fûe
*, );

138 
fsU∆ock
(
sqlôe3_fûe
*, );

139 
fsCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

140 
fsFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

141 
fsSe˘‹Size
(
sqlôe3_fûe
*);

142 
fsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

147 
tmpClo£
(
sqlôe3_fûe
*);

148 
tmpRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

149 
tmpWrôe
(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

150 
tmpTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

151 
tmpSync
(
sqlôe3_fûe
*, 
Êags
);

152 
tmpFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

153 
tmpLock
(
sqlôe3_fûe
*, );

154 
tmpU∆ock
(
sqlôe3_fûe
*, );

155 
tmpCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

156 
tmpFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

157 
tmpSe˘‹Size
(
sqlôe3_fûe
*);

158 
tmpDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

163 
fsO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

164 
fsDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

165 
fsAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

166 
fsFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
,*
zOut
);

167 *
fsDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

168 
fsDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

169 (*
	$fsDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

170 
	`fsDlClo£
(
sqlôe3_vfs
*, *);

171 
	`fsR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

172 
	`fsSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

173 
	`fsCuºítTime
(
sqlôe3_vfs
*, *);

176 
fs_vfs_t
 
	tfs_vfs_t
;

177 
	sfs_vfs_t
 {

178 
sqlôe3_vfs
 
ba£
;

179 
fs_ªÆ_fûe
 *
pFûeLi°
;

180 
sqlôe3_vfs
 *
pP¨ít
;

183 
fs_vfs_t
 
fs_vfs
 = {

189 
FS_VFS_NAME
,

191 
fsO≥n
,

192 
fsDñëe
,

193 
fsAc˚ss
,

194 
fsFuŒP©h«me
,

195 
fsDlO≥n
,

196 
fsDlEº‹
,

197 
fsDlSym
,

198 
fsDlClo£
,

199 
fsR™dom√ss
,

200 
fsSÀï
,

201 
fsCuºítTime
,

206 
	}
};

208 
sqlôe3_io_mëhods
 
	gfs_io_mëhods
 = {

210 
fsClo£
,

211 
fsRód
,

212 
fsWrôe
,

213 
fsTrunˇã
,

214 
fsSync
,

215 
fsFûeSize
,

216 
fsLock
,

217 
fsU∆ock
,

218 
fsCheckRe£rvedLock
,

219 
fsFûeC⁄åﬁ
,

220 
fsSe˘‹Size
,

221 
fsDevi˚Ch¨a˘îi°ics
,

229 
sqlôe3_io_mëhods
 
	gtmp_io_mëhods
 = {

231 
tmpClo£
,

232 
tmpRód
,

233 
tmpWrôe
,

234 
tmpTrunˇã
,

235 
tmpSync
,

236 
tmpFûeSize
,

237 
tmpLock
,

238 
tmpU∆ock
,

239 
tmpCheckRe£rvedLock
,

240 
tmpFûeC⁄åﬁ
,

241 
tmpSe˘‹Size
,

242 
tmpDevi˚Ch¨a˘îi°ics
,

250 
	#MIN
(
x
,
y
Ë((x)<(y)?(x):(y))

	)

251 
	#MAX
(
x
,
y
Ë((x)>(y)?(x):(y))

	)

257 
	$tmpClo£
(
sqlôe3_fûe
 *
pFûe
){

258 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

259 
	`sqlôe3_‰ì
(
pTmp
->
zAŒoc
);

260  
SQLITE_OK
;

261 
	}
}

266 
	$tmpRód
(

267 
sqlôe3_fûe
 *
pFûe
,

268 *
zBuf
,

269 
iAmt
,

270 
sqlôe_öt64
 
iOf°


272 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

273 if–(
iAmt
+
iOf°
)>
pTmp
->
nSize
 ){

274  
SQLITE_IOERR_SHORT_READ
;

276 
	`mem˝y
(
zBuf
, &
pTmp
->
zAŒoc
[
iOf°
], 
iAmt
);

277  
SQLITE_OK
;

278 
	}
}

283 
	$tmpWrôe
(

284 
sqlôe3_fûe
 *
pFûe
,

285 c⁄° *
zBuf
,

286 
iAmt
,

287 
sqlôe_öt64
 
iOf°


289 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

290 if–(
iAmt
+
iOf°
)>
pTmp
->
nAŒoc
 ){

291 
nNew
 = ()(2*(
iAmt
+
iOf°
+
pTmp
->
nAŒoc
));

292 *
zNew
 = 
	`sqlôe3_ªÆloc
(
pTmp
->
zAŒoc
, 
nNew
);

293 if–!
zNew
 ){

294  
SQLITE_NOMEM
;

296 
pTmp
->
zAŒoc
 = 
zNew
;

297 
pTmp
->
nAŒoc
 = 
nNew
;

299 
	`mem˝y
(&
pTmp
->
zAŒoc
[
iOf°
], 
zBuf
, 
iAmt
);

300 
pTmp
->
nSize
 = ()
	`MAX
’Tmp->nSize, 
iOf°
+
iAmt
);

301  
SQLITE_OK
;

302 
	}
}

307 
	$tmpTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

308 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

309 
pTmp
->
nSize
 = ()
	`MIN
’Tmp->nSize, 
size
);

310  
SQLITE_OK
;

311 
	}
}

316 
	$tmpSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

317  
SQLITE_OK
;

318 
	}
}

323 
	$tmpFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

324 
tmp_fûe
 *
pTmp
 = (tmp_fûê*)
pFûe
;

325 *
pSize
 = 
pTmp
->
nSize
;

326  
SQLITE_OK
;

327 
	}
}

332 
	$tmpLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

333  
SQLITE_OK
;

334 
	}
}

339 
	$tmpU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

340  
SQLITE_OK
;

341 
	}
}

346 
	$tmpCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

347 *
pResOut
 = 0;

348  
SQLITE_OK
;

349 
	}
}

354 
	$tmpFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

355  
SQLITE_OK
;

356 
	}
}

361 
	$tmpSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

363 
	}
}

368 
	$tmpDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

370 
	}
}

375 
	$fsClo£
(
sqlôe3_fûe
 *
pFûe
){

376 
rc
 = 
SQLITE_OK
;

377 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

378 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

381 
pRól
->
nRef
--;

382 
	`as£π
(
pRól
->
nRef
>=0);

385 if–
pRól
->
nRef
==0 ){

386 *
pRól
->
µThis
 =ÖRól->
pNext
;

387 if–
pRól
->
pNext
 ){

388 
pRól
->
pNext
->
µThis
 =ÖReal->ppThis;

390 
rc
 = 
pRól
->
pFûe
->
pMëhods
->
	`xClo£
(pReal->pFile);

391 
	`sqlôe3_‰ì
(
pRól
);

394  
rc
;

395 
	}
}

400 
	$fsRód
(

401 
sqlôe3_fûe
 *
pFûe
,

402 *
zBuf
,

403 
iAmt
,

404 
sqlôe_öt64
 
iOf°


406 
rc
 = 
SQLITE_OK
;

407 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

408 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

409 
sqlôe3_fûe
 *
pF
 = 
pRól
->
pFûe
;

411 if–(
p
->
eTy≥
==
DATABASE_FILE
 && (
iAmt
+
iOf°
)>
pRól
->
nD©aba£
)

412 || (
p
->
eTy≥
==
JOURNAL_FILE
 && (
iAmt
+
iOf°
)>
pRól
->
nJou∫Æ
)

414 
rc
 = 
SQLITE_IOERR_SHORT_READ
;

415 }if–
p
->
eTy≥
==
DATABASE_FILE
 ){

416 
rc
 = 
pF
->
pMëhods
->
	`xRód
’F, 
zBuf
, 
iAmt
, 
iOf°
+
BLOCKSIZE
);

419 
iRem
 = 
iAmt
;

420 
iBuf
 = 0;

421 
ii
 = ()
iOf°
;

422  
iRem
>0 && 
rc
==
SQLITE_OK
 ){

423 
iRólOff
 = 
pRól
->
nBlob
 - 
BLOCKSIZE
*((
ii
/BLOCKSIZE)+1) + ii%BLOCKSIZE;

424 
iRólAmt
 = 
	`MIN
(
iRem
, 
BLOCKSIZE
 - (
iRólOff
%BLOCKSIZE));

426 
rc
 = 
pF
->
pMëhods
->
	`xRód
’F, &((*)
zBuf
)[
iBuf
], 
iRólAmt
, 
iRólOff
);

427 
ii
 +
iRólAmt
;

428 
iBuf
 +
iRólAmt
;

429 
iRem
 -
iRólAmt
;

433  
rc
;

434 
	}
}

439 
	$fsWrôe
(

440 
sqlôe3_fûe
 *
pFûe
,

441 c⁄° *
zBuf
,

442 
iAmt
,

443 
sqlôe_öt64
 
iOf°


445 
rc
 = 
SQLITE_OK
;

446 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

447 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

448 
sqlôe3_fûe
 *
pF
 = 
pRól
->
pFûe
;

450 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

451 if–(
iAmt
+
iOf°
+
BLOCKSIZE
)>(
pRól
->
nBlob
-pRól->
nJou∫Æ
) ){

452 
rc
 = 
SQLITE_FULL
;

454 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, 
zBuf
, 
iAmt
, 
iOf°
+
BLOCKSIZE
);

455 if–
rc
==
SQLITE_OK
 ){

456 
pRól
->
nD©aba£
 = ()
	`MAX
’Ról->nD©aba£, 
iAmt
+
iOf°
);

461 
iRem
 = 
iAmt
;

462 
iBuf
 = 0;

463 
ii
 = ()
iOf°
;

464  
iRem
>0 && 
rc
==
SQLITE_OK
 ){

465 
iRólOff
 = 
pRól
->
nBlob
 - 
BLOCKSIZE
*((
ii
/BLOCKSIZE)+1) + ii%BLOCKSIZE;

466 
iRólAmt
 = 
	`MIN
(
iRem
, 
BLOCKSIZE
 - (
iRólOff
%BLOCKSIZE));

468 if–
iRólOff
<(
pRól
->
nD©aba£
+
BLOCKSIZE
) ){

469 
rc
 = 
SQLITE_FULL
;

471 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, &((*)
zBuf
)[
iBuf
], 
iRólAmt
,
iRólOff
);

472 
ii
 +
iRólAmt
;

473 
iBuf
 +
iRólAmt
;

474 
iRem
 -
iRólAmt
;

477 if–
rc
==
SQLITE_OK
 ){

478 
pRól
->
nJou∫Æ
 = ()
	`MAX
’Ról->nJou∫Æ, 
iAmt
+
iOf°
);

482  
rc
;

483 
	}
}

488 
	$fsTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

489 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

490 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

491 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

492 
pRól
->
nD©aba£
 = ()
	`MIN
’Ról->nD©aba£, 
size
);

494 
pRól
->
nJou∫Æ
 = ()
	`MIN
’Ról->nJou∫Æ, 
size
);

496  
SQLITE_OK
;

497 
	}
}

502 
	$fsSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

503 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

504 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

505 
sqlôe3_fûe
 *
pRólFûe
 = 
pRól
->
pFûe
;

506 
rc
 = 
SQLITE_OK
;

508 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

509 
zSize
[4];

510 
zSize
[0] = (
pRól
->
nD©aba£
&0xFF000000)>>24;

511 
zSize
[1] = ()((
pRól
->
nD©aba£
&0x00FF0000)>>16);

512 
zSize
[2] = (
pRól
->
nD©aba£
&0x0000FF00)>>8;

513 
zSize
[3] = (
pRól
->
nD©aba£
&0x000000FF);

514 
rc
 = 
pRólFûe
->
pMëhods
->
	`xWrôe
’RólFûe, 
zSize
, 4, 0);

516 if–
rc
==
SQLITE_OK
 ){

517 
rc
 = 
pRólFûe
->
pMëhods
->
	`xSync
’RólFûe, 
Êags
&(~
SQLITE_SYNC_DATAONLY
));

520  
rc
;

521 
	}
}

526 
	$fsFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

527 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

528 
fs_ªÆ_fûe
 *
pRól
 = 
p
->pReal;

529 if–
p
->
eTy≥
==
DATABASE_FILE
 ){

530 *
pSize
 = 
pRól
->
nD©aba£
;

532 *
pSize
 = 
pRól
->
nJou∫Æ
;

534  
SQLITE_OK
;

535 
	}
}

540 
	$fsLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

541  
SQLITE_OK
;

542 
	}
}

547 
	$fsU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

548  
SQLITE_OK
;

549 
	}
}

554 
	$fsCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

555 *
pResOut
 = 0;

556  
SQLITE_OK
;

557 
	}
}

562 
	$fsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

563  
SQLITE_OK
;

564 
	}
}

569 
	$fsSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

570  
BLOCKSIZE
;

571 
	}
}

576 
	$fsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

578 
	}
}

583 
	$fsO≥n
(

584 
sqlôe3_vfs
 *
pVfs
,

585 c⁄° *
zName
,

586 
sqlôe3_fûe
 *
pFûe
,

587 
Êags
,

588 *
pOutFœgs


590 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

591 
fs_fûe
 *
p
 = (fs_fûê*)
pFûe
;

592 
fs_ªÆ_fûe
 *
pRól
 = 0;

593 
eTy≥
;

594 
nName
;

595 
rc
 = 
SQLITE_OK
;

597 if–0==(
Êags
&(
SQLITE_OPEN_MAIN_DB
|
SQLITE_OPEN_MAIN_JOURNAL
)) ){

598 
tmp_fûe
 *
p2
 = (tmp_fûê*)
pFûe
;

599 
	`mem£t
(
p2
, 0, (*p2));

600 
p2
->
ba£
.
pMëhods
 = &
tmp_io_mëhods
;

601  
SQLITE_OK
;

604 
eTy≥
 = ((
Êags
&(
SQLITE_OPEN_MAIN_DB
))?
DATABASE_FILE
:
JOURNAL_FILE
);

605 
p
->
ba£
.
pMëhods
 = &
fs_io_mëhods
;

606 
p
->
eTy≥
 =ÉType;

608 
	`as£π
(
	`°æí
("-journal")==8);

609 
nName
 = ()
	`°æí
(
zName
)-((
eTy≥
==
JOURNAL_FILE
)?8:0);

610 
pRól
=
pFsVfs
->
pFûeLi°
;

611 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, zName, 
nName
);ÖRólıRól->
pNext
);

613 if–!
pRól
 ){

614 
ªÆ_Êags
 = (
Êags
&~(
SQLITE_OPEN_MAIN_DB
))|
SQLITE_OPEN_TEMP_DB
;

615 
sqlôe3_öt64
 
size
;

616 
sqlôe3_fûe
 *
pRólFûe
;

617 
sqlôe3_vfs
 *
pP¨ít
 = 
pFsVfs
->pParent;

618 
	`as£π
(
eTy≥
==
DATABASE_FILE
);

620 
pRól
 = (
fs_ªÆ_fûe
 *)
	`sqlôe3_mÆloc
((*pRól)+
pP¨ít
->
szOsFûe
);

621 if–!
pRól
 ){

622 
rc
 = 
SQLITE_NOMEM
;

623 
›í_out
;

625 
	`mem£t
(
pRól
, 0, (*pRól)+
pP¨ít
->
szOsFûe
);

626 
pRól
->
zName
 = zName;

627 
pRól
->
pFûe
 = (
sqlôe3_fûe
 *)(&pReal[1]);

629 
rc
 = 
pP¨ít
->
	`xO≥n
’P¨ít, 
zName
, 
pRól
->
pFûe
, 
ªÆ_Êags
, 
pOutFœgs
);

630 if–
rc
!=
SQLITE_OK
 ){

631 
›í_out
;

633 
pRólFûe
 = 
pRól
->
pFûe
;

635 
rc
 = 
pRólFûe
->
pMëhods
->
	`xFûeSize
’RólFûe, &
size
);

636 if–
rc
!=
SQLITE_OK
 ){

637 
›í_out
;

639 if–
size
==0 ){

640 
rc
 = 
pRólFûe
->
pMëhods
->
	`xWrôe
’RólFûe, "\0", 1, 
BLOBSIZE
-1);

641 
pRól
->
nBlob
 = 
BLOBSIZE
;

643 
zS
[4];

644 
pRól
->
nBlob
 = ()
size
;

645 
rc
 = 
pRólFûe
->
pMëhods
->
	`xRód
’RólFûe, 
zS
, 4, 0);

646 
pRól
->
nD©aba£
 = (
zS
[0]<<24)+(zS[1]<<16)+(zS[2]<<8)+zS[3];

647 if–
rc
==
SQLITE_OK
 ){

648 
rc
 = 
pRólFûe
->
pMëhods
->
	`xRód
’RólFûe, 
zS
, 4, 
pRól
->
nBlob
-4);

649 if–
zS
[0] || zS[1] || zS[2] || zS[3] ){

650 
pRól
->
nJou∫Æ
 =ÖRól->
nBlob
;

655 if–
rc
==
SQLITE_OK
 ){

656 
pRól
->
pNext
 = 
pFsVfs
->
pFûeLi°
;

657 if–
pRól
->
pNext
 ){

658 
pRól
->
pNext
->
µThis
 = &pReal->pNext;

660 
pRól
->
µThis
 = &
pFsVfs
->
pFûeLi°
;

661 
pFsVfs
->
pFûeLi°
 = 
pRól
;

665 
›í_out
:

666 if–
pRól
 ){

667 if–
rc
==
SQLITE_OK
 ){

668 
p
->
pRól
 =ÖReal;

669 
pRól
->
nRef
++;

671 if–
pRól
->
pFûe
->
pMëhods
 ){

672 
pRól
->
pFûe
->
pMëhods
->
	`xClo£
(pReal->pFile);

674 
	`sqlôe3_‰ì
(
pRól
);

677  
rc
;

678 
	}
}

685 
	$fsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

686 
rc
 = 
SQLITE_OK
;

687 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

688 
fs_ªÆ_fûe
 *
pRól
;

689 
sqlôe3_fûe
 *
pF
;

690 
nName
 = ()
	`°æí
(
zP©h
) - 8;

692 
	`as£π
(
	`°æí
("-journal")==8);

693 
	`as£π
(
	`°rcmp
("-jou∫Æ", &
zP©h
[
nName
])==0);

695 
pRól
 = 
pFsVfs
->
pFûeLi°
;

696 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, 
zP©h
, 
nName
);ÖRólıRól->
pNext
);

697 if–
pRól
 ){

698 
pF
 = 
pRól
->
pFûe
;

699 
rc
 = 
pF
->
pMëhods
->
	`xWrôe
’F, "\0\0\0\0", 4, 
pRól
->
nBlob
-
BLOCKSIZE
);

700 if–
rc
==
SQLITE_OK
 ){

701 
pRól
->
nJou∫Æ
 = 0;

704  
rc
;

705 
	}
}

711 
	$fsAc˚ss
(

712 
sqlôe3_vfs
 *
pVfs
,

713 c⁄° *
zP©h
,

714 
Êags
,

715 *
pResOut


717 
fs_vfs_t
 *
pFsVfs
 = (fs_vfs_à*)
pVfs
;

718 
fs_ªÆ_fûe
 *
pRól
;

719 
isJou∫Æ
 = 0;

720 
nName
 = ()
	`°æí
(
zP©h
);

722 if–
Êags
!=
SQLITE_ACCESS_EXISTS
 ){

723 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

724  
pP¨ít
->
	`xAc˚ss
’P¨ít, 
zP©h
, 
Êags
, 
pResOut
);

727 
	`as£π
(
	`°æí
("-journal")==8);

728 if–
nName
>8 && 
	`°rcmp
("-jou∫Æ", &
zP©h
[nName-8])==0 ){

729 
nName
 -= 8;

730 
isJou∫Æ
 = 1;

733 
pRól
 = 
pFsVfs
->
pFûeLi°
;

734 ; 
pRól
 && 
	`°∫cmp
’Ról->
zName
, 
zP©h
, 
nName
);ÖRólıRól->
pNext
);

736 *
pResOut
 = (
pRól
 && (!
isJou∫Æ
 ||ÖRól->
nJou∫Æ
>0));

737  
SQLITE_OK
;

738 
	}
}

745 
	$fsFuŒP©h«me
(

746 
sqlôe3_vfs
 *
pVfs
,

747 c⁄° *
zP©h
,

748 
nOut
,

749 *
zOut


751 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

752  
pP¨ít
->
	`xFuŒP©h«me
’P¨ít, 
zP©h
, 
nOut
, 
zOut
);

753 
	}
}

758 *
	$fsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

759 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

760  
pP¨ít
->
	`xDlO≥n
’P¨ít, 
zP©h
);

761 
	}
}

768 
	$fsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

769 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

770 
pP¨ít
->
	`xDlEº‹
’P¨ít, 
nByã
, 
zEºMsg
);

771 
	}
}

776 (*
	$fsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
pH
, c⁄° *
zSym
))(){

777 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

778  
pP¨ít
->
	`xDlSym
’P¨ít, 
pH
, 
zSym
);

779 
	}
}

784 
	$fsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

785 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

786 
pP¨ít
->
	`xDlClo£
’P¨ít, 
pH™dÀ
);

787 
	}
}

793 
	$fsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

794 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

795  
pP¨ít
->
	`xR™dom√ss
’P¨ít, 
nByã
, 
zBufOut
);

796 
	}
}

802 
	$fsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

803 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

804  
pP¨ít
->
	`xSÀï
’P¨ít, 
nMi¸o
);

805 
	}
}

810 
	$fsCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

811 
sqlôe3_vfs
 *
pP¨ít
 = ((
fs_vfs_t
 *)
pVfs
)->pParent;

812  
pP¨ít
->
	`xCuºítTime
’P¨ít, 
pTimeOut
);

813 
	}
}

820 
	$fs_ªgi°î
(){

821 if–
fs_vfs
.
pP¨ít
 )  
SQLITE_OK
;

822 
fs_vfs
.
pP¨ít
 = 
	`sqlôe3_vfs_föd
(0);

823 
fs_vfs
.
ba£
.
mxP©h«me
 = fs_vfs.
pP¨ít
->mxPathname;

824 
fs_vfs
.
ba£
.
szOsFûe
 = 
	`MAX
((
tmp_fûe
), (
fs_fûe
));

825  
	`sqlôe3_vfs_ªgi°î
(&
fs_vfs
.
ba£
, 0);

826 
	}
}

828 #ifde‡
SQLITE_TEST


829 
	$Sqlôëe°O√fûe_Inô
(Ë{ 
	`fs_ªgi°î
();
	}
}

	@test_osinst.c

72 
	~"sqlôe3.h
"

74 
	~"os_£tup.h
"

75 #i‡
SQLITE_OS_WIN


76 
	~"os_wö.h
"

79 
	~<°rög.h
>

80 
	~<as£π.h
>

86 
	#INST_MAX_PATHNAME
 512

	)

88 
	#OS_ACCESS
 1

	)

89 
	#OS_CHECKRESERVEDLOCK
 2

	)

90 
	#OS_CLOSE
 3

	)

91 
	#OS_CURRENTTIME
 4

	)

92 
	#OS_DELETE
 5

	)

93 
	#OS_DEVCHAR
 6

	)

94 
	#OS_FILECONTROL
 7

	)

95 
	#OS_FILESIZE
 8

	)

96 
	#OS_FULLPATHNAME
 9

	)

97 
	#OS_LOCK
 11

	)

98 
	#OS_OPEN
 12

	)

99 
	#OS_RANDOMNESS
 13

	)

100 
	#OS_READ
 14

	)

101 
	#OS_SECTORSIZE
 15

	)

102 
	#OS_SLEEP
 16

	)

103 
	#OS_SYNC
 17

	)

104 
	#OS_TRUNCATE
 18

	)

105 
	#OS_UNLOCK
 19

	)

106 
	#OS_WRITE
 20

	)

107 
	#OS_SHMUNMAP
 22

	)

108 
	#OS_SHMMAP
 23

	)

109 
	#OS_SHMLOCK
 25

	)

110 
	#OS_SHMBARRIER
 26

	)

111 
	#OS_ANNOTATE
 28

	)

113 
	#OS_NUMEVENTS
 29

	)

115 
	#VFSLOG_BUFFERSIZE
 8192

	)

117 
Vf¶ogVfs
 
	tVf¶ogVfs
;

118 
Vf¶ogFûe
 
	tVf¶ogFûe
;

120 
	sVf¶ogVfs
 {

121 
sqlôe3_vfs
 
	mba£
;

122 
sqlôe3_vfs
 *
	mpVfs
;

123 
	miNextFûeId
;

124 
sqlôe3_fûe
 *
	mpLog
;

125 
sqlôe3_öt64
 
	miOff£t
;

126 
	mnBuf
;

127 
	maBuf
[
VFSLOG_BUFFERSIZE
];

130 
	sVf¶ogFûe
 {

131 
sqlôe3_fûe
 
	mba£
;

132 
sqlôe3_fûe
 *
	mpRól
;

133 
sqlôe3_vfs
 *
	mpVf¶og
;

134 
	miFûeId
;

137 
	#REALVFS
(
p
Ë(((
Vf¶ogVfs
 *)’))->
pVfs
)

	)

144 
vf¶ogClo£
(
sqlôe3_fûe
*);

145 
vf¶ogRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

146 
vf¶ogWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

147 
vf¶ogTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

148 
vf¶ogSync
(
sqlôe3_fûe
*, 
Êags
);

149 
vf¶ogFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

150 
vf¶ogLock
(
sqlôe3_fûe
*, );

151 
vf¶ogU∆ock
(
sqlôe3_fûe
*, );

152 
vf¶ogCheckRe£rvedLock
(
sqlôe3_fûe
*, *
pResOut
);

153 
vf¶ogFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

154 
vf¶ogSe˘‹Size
(
sqlôe3_fûe
*);

155 
vf¶ogDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

157 
vf¶ogShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
);

158 
vf¶ogShmM≠
(
sqlôe3_fûe
 *
pFûe
,,,,volatile **);

159 
vf¶ogShmB¨rõr
(
sqlôe3_fûe
*);

160 
vf¶ogShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñëeFœg
);

165 
vf¶ogO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

166 
vf¶ogDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

167 
vf¶ogAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

168 
vf¶ogFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

169 *
vf¶ogDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

170 
vf¶ogDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

171 (*
	$vf¶ogDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))();

172 
	`vf¶ogDlClo£
(
sqlôe3_vfs
*, *);

173 
	`vf¶ogR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

174 
	`vf¶ogSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

175 
	`vf¶ogCuºítTime
(
sqlôe3_vfs
*, *);

177 
	`vf¶ogGëLa°Eº‹
(
sqlôe3_vfs
*, , *);

178 
	`vf¶ogCuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

180 
sqlôe3_vfs
 
vf¶og_vfs
 = {

182 (
Vf¶ogFûe
),

183 
INST_MAX_PATHNAME
,

187 
vf¶ogO≥n
,

188 
vf¶ogDñëe
,

189 
vf¶ogAc˚ss
,

190 
vf¶ogFuŒP©h«me
,

191 
vf¶ogDlO≥n
,

192 
vf¶ogDlEº‹
,

193 
vf¶ogDlSym
,

194 
vf¶ogDlClo£
,

195 
vf¶ogR™dom√ss
,

196 
vf¶ogSÀï
,

197 
vf¶ogCuºítTime
,

198 
vf¶ogGëLa°Eº‹
,

199 
vf¶ogCuºítTimeI¡64


200 
	}
};

202 
sqlôe3_io_mëhods
 
	gvf¶og_io_mëhods
 = {

204 
vf¶ogClo£
,

205 
vf¶ogRód
,

206 
vf¶ogWrôe
,

207 
vf¶ogTrunˇã
,

208 
vf¶ogSync
,

209 
vf¶ogFûeSize
,

210 
vf¶ogLock
,

211 
vf¶ogU∆ock
,

212 
vf¶ogCheckRe£rvedLock
,

213 
vf¶ogFûeC⁄åﬁ
,

214 
vf¶ogSe˘‹Size
,

215 
vf¶ogDevi˚Ch¨a˘îi°ics
,

216 
vf¶ogShmM≠
,

217 
vf¶ogShmLock
,

218 
vf¶ogShmB¨rõr
,

219 
vf¶ogShmUnm≠


222 #i‡
SQLITE_OS_UNIX
 && !
deföed
(
NO_GETTOD
)

223 
	~<sys/time.h
>

224 
sqlôe3_uöt64
 
	$vf¶og_time
(){

225 
timevÆ
 
sTime
;

226 
	`gëtimeofday
(&
sTime
, 0);

227  
sTime
.
tv_u£c
 + (
sqlôe3_uöt64
)sTime.
tv_£c
 * 1000000;

228 
	}
}

229 #ñi‡
SQLITE_OS_WIN


230 
	~<time.h
>

231 
sqlôe3_uöt64
 
	$vf¶og_time
(){

232 
FILETIME
 
·
;

233 
sqlôe3_uöt64
 
u64time
 = 0;

235 
	`GëSy°emTimeAsFûeTime
(&
·
);

237 
u64time
 |
·
.
dwHighD©eTime
;

238 
u64time
 <<= 32;

239 
u64time
 |
·
.
dwLowD©eTime
;

242  
u64time
 /(
sqlôe3_uöt64
)10;

243 
	}
}

245 
sqlôe3_uöt64
 
	$vf¶og_time
(){

247 
	}
}

250 
vf¶og_ˇŒ
(
sqlôe3_vfs
 *, , , 
sqlôe3_öt64
, , , );

251 
vf¶og_°rög
(
sqlôe3_vfs
 *, const *);

256 
	$vf¶ogClo£
(
sqlôe3_fûe
 *
pFûe
){

257 
sqlôe3_uöt64
 
t
;

258 
rc
 = 
SQLITE_OK
;

259 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

261 
t
 = 
	`vf¶og_time
();

262 if–
p
->
pRól
->
pMëhods
 ){

263 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xClo£
(p->pReal);

265 
t
 = 
	`vf¶og_time
() -Å;

266 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_CLOSE
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

267  
rc
;

268 
	}
}

273 
	$vf¶ogRód
(

274 
sqlôe3_fûe
 *
pFûe
,

275 *
zBuf
,

276 
iAmt
,

277 
sqlôe_öt64
 
iOf°


279 
rc
;

280 
sqlôe3_uöt64
 
t
;

281 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

282 
t
 = 
	`vf¶og_time
();

283 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xRód
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

284 
t
 = 
	`vf¶og_time
() -Å;

285 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_READ
,Ö->
iFûeId
, 
t
, 
rc
, 
iAmt
, ()
iOf°
);

286  
rc
;

287 
	}
}

292 
	$vf¶ogWrôe
(

293 
sqlôe3_fûe
 *
pFûe
,

294 c⁄° *
z
,

295 
iAmt
,

296 
sqlôe_öt64
 
iOf°


298 
rc
;

299 
sqlôe3_uöt64
 
t
;

300 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

301 
t
 = 
	`vf¶og_time
();

302 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xWrôe
’->pRól, 
z
, 
iAmt
, 
iOf°
);

303 
t
 = 
	`vf¶og_time
() -Å;

304 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_WRITE
,Ö->
iFûeId
, 
t
, 
rc
, 
iAmt
, ()
iOf°
);

305  
rc
;

306 
	}
}

311 
	$vf¶ogTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

312 
rc
;

313 
sqlôe3_uöt64
 
t
;

314 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

315 
t
 = 
	`vf¶og_time
();

316 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xTrunˇã
’->pRól, 
size
);

317 
t
 = 
	`vf¶og_time
() -Å;

318 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_TRUNCATE
,Ö->
iFûeId
, 
t
, 
rc
, 0, ()
size
);

319  
rc
;

320 
	}
}

325 
	$vf¶ogSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

326 
rc
;

327 
sqlôe3_uöt64
 
t
;

328 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

329 
t
 = 
	`vf¶og_time
();

330 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSync
’->pRól, 
Êags
);

331 
t
 = 
	`vf¶og_time
() -Å;

332 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SYNC
,Ö->
iFûeId
, 
t
, 
rc
, 
Êags
, 0);

333  
rc
;

334 
	}
}

339 
	$vf¶ogFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

340 
rc
;

341 
sqlôe3_uöt64
 
t
;

342 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

343 
t
 = 
	`vf¶og_time
();

344 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeSize
’->pRól, 
pSize
);

345 
t
 = 
	`vf¶og_time
() -Å;

346 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_FILESIZE
,Ö->
iFûeId
, 
t
, 
rc
, 0, ()*
pSize
);

347  
rc
;

348 
	}
}

353 
	$vf¶ogLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

354 
rc
;

355 
sqlôe3_uöt64
 
t
;

356 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

357 
t
 = 
	`vf¶og_time
();

358 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xLock
’->pRól, 
eLock
);

359 
t
 = 
	`vf¶og_time
() -Å;

360 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_LOCK
,Ö->
iFûeId
, 
t
, 
rc
, 
eLock
, 0);

361  
rc
;

362 
	}
}

367 
	$vf¶ogU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

368 
rc
;

369 
sqlôe3_uöt64
 
t
;

370 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

371 
t
 = 
	`vf¶og_time
();

372 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xU∆ock
’->pRól, 
eLock
);

373 
t
 = 
	`vf¶og_time
() -Å;

374 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_UNLOCK
,Ö->
iFûeId
, 
t
, 
rc
, 
eLock
, 0);

375  
rc
;

376 
	}
}

381 
	$vf¶ogCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

382 
rc
;

383 
sqlôe3_uöt64
 
t
;

384 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

385 
t
 = 
	`vf¶og_time
();

386 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xCheckRe£rvedLock
’->pRól, 
pResOut
);

387 
t
 = 
	`vf¶og_time
() -Å;

388 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_CHECKRESERVEDLOCK
,Ö->
iFûeId
, 
t
, 
rc
, *
pResOut
, 0);

389  
rc
;

390 
	}
}

395 
	$vf¶ogFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

396 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

397 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

398 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

399 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("vfslog/%z", *(**)pArg);

401  
rc
;

402 
	}
}

407 
	$vf¶ogSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

408 
rc
;

409 
sqlôe3_uöt64
 
t
;

410 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

411 
t
 = 
	`vf¶og_time
();

412 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSe˘‹Size
(p->pReal);

413 
t
 = 
	`vf¶og_time
() -Å;

414 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SECTORSIZE
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

415  
rc
;

416 
	}
}

421 
	$vf¶ogDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

422 
rc
;

423 
sqlôe3_uöt64
 
t
;

424 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

425 
t
 = 
	`vf¶og_time
();

426 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(p->pReal);

427 
t
 = 
	`vf¶og_time
() -Å;

428 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_DEVCHAR
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

429  
rc
;

430 
	}
}

432 
	$vf¶ogShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

433 
rc
;

434 
sqlôe3_uöt64
 
t
;

435 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

436 
t
 = 
	`vf¶og_time
();

437 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmLock
’->pRól, 
of°
, 
n
, 
Êags
);

438 
t
 = 
	`vf¶og_time
() -Å;

439 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMLOCK
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

440  
rc
;

441 
	}
}

442 
	$vf¶ogShmM≠
(

443 
sqlôe3_fûe
 *
pFûe
,

444 
iRegi⁄
,

445 
szRegi⁄
,

446 
isWrôe
,

447 vﬁ©ûê**
µ


449 
rc
;

450 
sqlôe3_uöt64
 
t
;

451 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

452 
t
 = 
	`vf¶og_time
();

453 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmM≠
’->pRól, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

454 
t
 = 
	`vf¶og_time
() -Å;

455 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMMAP
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

456  
rc
;

457 
	}
}

458 
	$vf¶ogShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

459 
sqlôe3_uöt64
 
t
;

460 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

461 
t
 = 
	`vf¶og_time
();

462 
p
->
pRól
->
pMëhods
->
	`xShmB¨rõr
(p->pReal);

463 
t
 = 
	`vf¶og_time
() -Å;

464 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMBARRIER
,Ö->
iFûeId
, 
t
, 
SQLITE_OK
, 0, 0);

465 
	}
}

466 
	$vf¶ogShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñëeFœg
){

467 
rc
;

468 
sqlôe3_uöt64
 
t
;

469 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

470 
t
 = 
	`vf¶og_time
();

471 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmUnm≠
’->pRól, 
dñëeFœg
);

472 
t
 = 
	`vf¶og_time
() -Å;

473 
	`vf¶og_ˇŒ
(
p
->
pVf¶og
, 
OS_SHMUNMAP
,Ö->
iFûeId
, 
t
, 
rc
, 0, 0);

474  
rc
;

475 
	}
}

481 
	$vf¶ogO≥n
(

482 
sqlôe3_vfs
 *
pVfs
,

483 c⁄° *
zName
,

484 
sqlôe3_fûe
 *
pFûe
,

485 
Êags
,

486 *
pOutFœgs


488 
rc
;

489 
sqlôe3_uöt64
 
t
;

490 
Vf¶ogFûe
 *
p
 = (Vf¶ogFûê*)
pFûe
;

491 
Vf¶ogVfs
 *
pLog
 = (Vf¶ogVf†*)
pVfs
;

493 
pFûe
->
pMëhods
 = &
vf¶og_io_mëhods
;

494 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

495 
p
->
pVf¶og
 = 
pVfs
;

496 
p
->
iFûeId
 = ++
pLog
->
iNextFûeId
;

498 
t
 = 
	`vf¶og_time
();

499 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xO≥n
(REALVFS’Vfs), 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

500 
t
 = 
	`vf¶og_time
() -Å;

502 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_OPEN
, 
p
->
iFûeId
, 
t
, 
rc
, 0, 0);

503 
	`vf¶og_°rög
(
pVfs
, 
zName
);

504  
rc
;

505 
	}
}

512 
	$vf¶ogDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

513 
rc
;

514 
sqlôe3_uöt64
 
t
;

515 
t
 = 
	`vf¶og_time
();

516 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xDñëe
(REALVFS’Vfs), 
zP©h
, 
dúSync
);

517 
t
 = 
	`vf¶og_time
() -Å;

518 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_DELETE
, 0, 
t
, 
rc
, 
dúSync
, 0);

519 
	`vf¶og_°rög
(
pVfs
, 
zP©h
);

520  
rc
;

521 
	}
}

527 
	$vf¶ogAc˚ss
(

528 
sqlôe3_vfs
 *
pVfs
,

529 c⁄° *
zP©h
,

530 
Êags
,

531 *
pResOut


533 
rc
;

534 
sqlôe3_uöt64
 
t
;

535 
t
 = 
	`vf¶og_time
();

536 
rc
 = 
	`REALVFS
(
pVfs
)->
	`xAc˚ss
(REALVFS’Vfs), 
zP©h
, 
Êags
, 
pResOut
);

537 
t
 = 
	`vf¶og_time
() -Å;

538 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_ACCESS
, 0, 
t
, 
rc
, 
Êags
, *
pResOut
);

539 
	`vf¶og_°rög
(
pVfs
, 
zP©h
);

540  
rc
;

541 
	}
}

548 
	$vf¶ogFuŒP©h«me
(

549 
sqlôe3_vfs
 *
pVfs
,

550 c⁄° *
zP©h
,

551 
nOut
,

552 *
zOut


554  
	`REALVFS
(
pVfs
)->
	`xFuŒP©h«me
(REALVFS’Vfs), 
zP©h
, 
nOut
, 
zOut
);

555 
	}
}

560 *
	$vf¶ogDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

561  
	`REALVFS
(
pVfs
)->
	`xDlO≥n
(REALVFS’Vfs), 
zP©h
);

562 
	}
}

569 
	$vf¶ogDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

570 
	`REALVFS
(
pVfs
)->
	`xDlEº‹
(REALVFS’Vfs), 
nByã
, 
zEºMsg
);

571 
	}
}

576 (*
	$vf¶ogDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

577  
	`REALVFS
(
pVfs
)->
	`xDlSym
(REALVFS’Vfs), 
p
, 
zSym
);

578 
	}
}

583 
	$vf¶ogDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

584 
	`REALVFS
(
pVfs
)->
	`xDlClo£
(REALVFS’Vfs), 
pH™dÀ
);

585 
	}
}

591 
	$vf¶ogR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

592  
	`REALVFS
(
pVfs
)->
	`xR™dom√ss
(REALVFS’Vfs), 
nByã
, 
zBufOut
);

593 
	}
}

599 
	$vf¶ogSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

600  
	`REALVFS
(
pVfs
)->
	`xSÀï
(REALVFS’Vfs), 
nMi¸o
);

601 
	}
}

606 
	$vf¶ogCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

607  
	`REALVFS
(
pVfs
)->
	`xCuºítTime
(REALVFS’Vfs), 
pTimeOut
);

608 
	}
}

610 
	$vf¶ogGëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
a
, *
b
){

611  
	`REALVFS
(
pVfs
)->
	`xGëLa°Eº‹
(REALVFS’Vfs), 
a
, 
b
);

612 
	}
}

613 
	$vf¶ogCuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
p
){

614  
	`REALVFS
(
pVfs
)->
	`xCuºítTimeI¡64
(REALVFS’Vfs), 
p
);

615 
	}
}

617 
	$vf¶og_Êush
(
Vf¶ogVfs
 *
p
){

618 #ifde‡
SQLITE_TEST


619 
sqlôe3_io_îr‹_≥ndög
;

620 
sqlôe3_io_îr‹_≥rsi°
;

621 
sqlôe3_diskfuŒ_≥ndög
;

623 
≥ndög
 = 
sqlôe3_io_îr‹_≥ndög
;

624 
≥rsi°
 = 
sqlôe3_io_îr‹_≥rsi°
;

625 
diskfuŒ
 = 
sqlôe3_diskfuŒ_≥ndög
;

627 
sqlôe3_io_îr‹_≥ndög
 = 0;

628 
sqlôe3_io_îr‹_≥rsi°
 = 0;

629 
sqlôe3_diskfuŒ_≥ndög
 = 0;

632 if–
p
->
nBuf
 ){

633 
p
->
pLog
->
pMëhods
->
	`xWrôe
’->pLog,Ö->
aBuf
,Ö->
nBuf
,Ö->
iOff£t
);

634 
p
->
iOff£t
 +p->
nBuf
;

635 
p
->
nBuf
 = 0;

638 #ifde‡
SQLITE_TEST


639 
sqlôe3_io_îr‹_≥ndög
 = 
≥ndög
;

640 
sqlôe3_io_îr‹_≥rsi°
 = 
≥rsi°
;

641 
sqlôe3_diskfuŒ_≥ndög
 = 
diskfuŒ
;

643 
	}
}

645 
	$put32bôs
(*
p
, 
v
){

646 
p
[0] = 
v
>>24;

647 
p
[1] = ()(
v
>>16);

648 
p
[2] = ()(
v
>>8);

649 
p
[3] = ()
v
;

650 
	}
}

652 
	$vf¶og_ˇŒ
(

653 
sqlôe3_vfs
 *
pVfs
,

654 
eEvít
,

655 
iFûeid
,

656 
sqlôe3_öt64
 
nClick
,

657 
ªtu∫_code
,

658 
size
,

659 
off£t


661 
Vf¶ogVfs
 *
p
 = (Vf¶ogVf†*)
pVfs
;

662 *
zRec
;

663 if–(24+
p
->
nBuf
)>’->
aBuf
) ){

664 
	`vf¶og_Êush
(
p
);

666 
zRec
 = (*)&
p
->
aBuf
[p->
nBuf
];

667 
	`put32bôs
(&
zRec
[0], 
eEvít
);

668 
	`put32bôs
(&
zRec
[4], 
iFûeid
);

669 
	`put32bôs
(&
zRec
[8], ()(
nClick
&0xffff));

670 
	`put32bôs
(&
zRec
[12], 
ªtu∫_code
);

671 
	`put32bôs
(&
zRec
[16], 
size
);

672 
	`put32bôs
(&
zRec
[20], 
off£t
);

673 
p
->
nBuf
 += 24;

674 
	}
}

676 
	$vf¶og_°rög
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zSå
){

677 
Vf¶ogVfs
 *
p
 = (Vf¶ogVf†*)
pVfs
;

678 *
zRec
;

679 
nSå
 = 
zSå
 ? ()
	`°æí
(zStr) : 0;

680 if–(4+
nSå
+
p
->
nBuf
)>’->
aBuf
) ){

681 
	`vf¶og_Êush
(
p
);

683 
zRec
 = (*)&
p
->
aBuf
[p->
nBuf
];

684 
	`put32bôs
(&
zRec
[0], 
nSå
);

685 if–
zSå
 ){

686 
	`mem˝y
(&
zRec
[4], 
zSå
, 
nSå
);

688 
p
->
nBuf
 +(4 + 
nSå
);

689 
	}
}

691 
	$vf¶og_föÆize
(
Vf¶ogVfs
 *
p
){

692 if–
p
->
pLog
->
pMëhods
 ){

693 
	`vf¶og_Êush
(
p
);

694 
p
->
pLog
->
pMëhods
->
	`xClo£
(p->pLog);

696 
	`sqlôe3_‰ì
(
p
);

697 
	}
}

699 
	$sqlôe3_vf¶og_föÆize
(c⁄° *
zVfs
){

700 
sqlôe3_vfs
 *
pVfs
;

701 
pVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

702 if–!
pVfs
 ||ÖVfs->
xO≥n
!=
vf¶ogO≥n
 ){

703  
SQLITE_ERROR
;

705 
	`sqlôe3_vfs_uƒegi°î
(
pVfs
);

706 
	`vf¶og_föÆize
((
Vf¶ogVfs
 *)
pVfs
);

707  
SQLITE_OK
;

708 
	}
}

710 
	$sqlôe3_vf¶og_√w
(

711 c⁄° *
zVfs
,

712 c⁄° *
zP¨ítVfs
,

713 c⁄° *
zLog


715 
Vf¶ogVfs
 *
p
;

716 
sqlôe3_vfs
 *
pP¨ít
;

717 
nByã
;

718 
Êags
;

719 
rc
;

720 *
zFûe
;

721 
nVfs
;

723 
pP¨ít
 = 
	`sqlôe3_vfs_föd
(
zP¨ítVfs
);

724 if–!
pP¨ít
 ){

725  
SQLITE_ERROR
;

728 
nVfs
 = ()
	`°æí
(
zVfs
);

729 
nByã
 = (
Vf¶ogVfs
Ë+ 
pP¨ít
->
szOsFûe
 + 
nVfs
+1+pP¨ít->
mxP©h«me
+1;

730 
p
 = (
Vf¶ogVfs
 *)
	`sqlôe3_mÆloc
(
nByã
);

731 
	`mem£t
(
p
, 0, 
nByã
);

733 
p
->
pVfs
 = 
pP¨ít
;

734 
p
->
pLog
 = (
sqlôe3_fûe
 *)&p[1];

735 
	`mem˝y
(&
p
->
ba£
, &
vf¶og_vfs
, (
sqlôe3_vfs
));

736 
p
->
ba£
.
zName
 = &((*Ì->
pLog
)[
pP¨ít
->
szOsFûe
];

737 
p
->
ba£
.
szOsFûe
 +
pP¨ít
->szOsFile;

738 
	`mem˝y
((*)
p
->
ba£
.
zName
, 
zVfs
, 
nVfs
);

740 
zFûe
 = (*)&
p
->
ba£
.
zName
[
nVfs
+1];

741 
pP¨ít
->
	`xFuŒP©h«me
’P¨ít, 
zLog
,ÖP¨ít->
mxP©h«me
, 
zFûe
);

743 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_MASTER_JOURNAL
;

744 
pP¨ít
->
	`xDñëe
’P¨ít, 
zFûe
, 0);

745 
rc
 = 
pP¨ít
->
	`xO≥n
’P¨ít, 
zFûe
, 
p
->
pLog
, 
Êags
, &flags);

746 if–
rc
==
SQLITE_OK
 ){

747 
	`mem˝y
(
p
->
aBuf
, "sqlite_ostrace1.....", 20);

748 
p
->
iOff£t
 = 0;

749 
p
->
nBuf
 = 20;

750 
rc
 = 
	`sqlôe3_vfs_ªgi°î
((
sqlôe3_vfs
 *)
p
, 1);

752 if–
rc
 ){

753 
	`vf¶og_föÆize
(
p
);

755  
rc
;

756 
	}
}

758 
	$sqlôe3_vf¶og_™nŸ©e
(c⁄° *
zVfs
, c⁄° *
zMsg
){

759 
sqlôe3_vfs
 *
pVfs
;

760 
pVfs
 = 
	`sqlôe3_vfs_föd
(
zVfs
);

761 if–!
pVfs
 ||ÖVfs->
xO≥n
!=
vf¶ogO≥n
 ){

762  
SQLITE_ERROR
;

764 
	`vf¶og_ˇŒ
(
pVfs
, 
OS_ANNOTATE
, 0, 0, 0, 0, 0);

765 
	`vf¶og_°rög
(
pVfs
, 
zMsg
);

766  
SQLITE_OK
;

767 
	}
}

769 c⁄° *
	$vf¶og_evíäame
(
eEvít
){

770 c⁄° *
zEvít
 = 0;

772  
eEvít
 ){

773 
OS_CLOSE
: 
zEvít
 = "xClose"; ;

774 
OS_READ
: 
zEvít
 = "xRead"; ;

775 
OS_WRITE
: 
zEvít
 = "xWrite"; ;

776 
OS_TRUNCATE
: 
zEvít
 = "xTruncate"; ;

777 
OS_SYNC
: 
zEvít
 = "xSync"; ;

778 
OS_FILESIZE
: 
zEvít
 = "xFilesize"; ;

779 
OS_LOCK
: 
zEvít
 = "xLock"; ;

780 
OS_UNLOCK
: 
zEvít
 = "xUnlock"; ;

781 
OS_CHECKRESERVEDLOCK
: 
zEvít
 = "xCheckResLock"; ;

782 
OS_FILECONTROL
: 
zEvít
 = "xFileControl"; ;

783 
OS_SECTORSIZE
: 
zEvít
 = "xSectorSize"; ;

784 
OS_DEVCHAR
: 
zEvít
 = "xDeviceChar"; ;

785 
OS_OPEN
: 
zEvít
 = "xOpen"; ;

786 
OS_DELETE
: 
zEvít
 = "xDelete"; ;

787 
OS_ACCESS
: 
zEvít
 = "xAccess"; ;

788 
OS_FULLPATHNAME
: 
zEvít
 = "xFullPathname"; ;

789 
OS_RANDOMNESS
: 
zEvít
 = "xRandomness"; ;

790 
OS_SLEEP
: 
zEvít
 = "xSleep"; ;

791 
OS_CURRENTTIME
: 
zEvít
 = "xCurrentTime"; ;

793 
OS_SHMUNMAP
: 
zEvít
 = "xShmUnmap"; ;

794 
OS_SHMLOCK
: 
zEvít
 = "xShmLock"; ;

795 
OS_SHMBARRIER
: 
zEvít
 = "xShmBarrier"; ;

796 
OS_SHMMAP
: 
zEvít
 = "xShmMap"; ;

798 
OS_ANNOTATE
: 
zEvít
 = "annotation"; ;

801  
zEvít
;

802 
	}
}

804 
Vf¶ogVèb
 
	tVf¶ogVèb
;

805 
Vf¶ogC§
 
	tVf¶ogC§
;

810 
	sVf¶ogVèb
 {

811 
sqlôe3_vèb
 
	mba£
;

812 
sqlôe3_fûe
 *
	mpFd
;

813 
sqlôe3_öt64
 
	mnByã
;

814 *
	mzFûe
;

820 
	sVf¶ogC§
 {

821 
sqlôe3_vèb_curs‹
 
	mba£
;

822 
sqlôe3_öt64
 
	miRowid
;

823 
sqlôe3_öt64
 
	miOff£t
;

824 *
	mzTønsõ¡
;

825 
	mnFûe
;

826 **
	mazFûe
;

827 
	maBuf
[1024];

830 
	$gë32bôs
(*
p
){

831  (
p
[0]<<24) + (p[1]<<16) + (p[2]<<8) +Ö[3];

832 
	}
}

839 
	$dequŸe
(*
z
){

840 
quŸe
;

841 
quŸe
 = 
z
[0];

842 if–
quŸe
=='[' || quote=='\'' || quote=='"' || quote=='`' ){

843 
iIn
 = 1;

844 
iOut
 = 0;

845 if–
quŸe
=='[' ) quote = ']';

846  
z
[
iIn
] ){

847 if–
z
[
iIn
]==
quŸe
 ){

848 if–
z
[
iIn
+1]!=
quŸe
 ) ;

849 
z
[
iOut
++] = 
quŸe
;

850 
iIn
 += 2;

852 
z
[
iOut
++] = z[
iIn
++];

855 
z
[
iOut
] = '\0';

857 
	}
}

859 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


863 
	$vlogC⁄√˘
(

864 
sqlôe3
 *
db
,

865 *
pAux
,

866 
¨gc
, c⁄° *c⁄°*
¨gv
,

867 
sqlôe3_vèb
 **
µVèb
,

868 **
pzEº


870 
sqlôe3_vfs
 *
pVfs
;

871 
Êags
;

872 
Vf¶ogVèb
 *
p
;

873 
rc
;

874 
nByã
;

875 *
zFûe
;

877 *
µVèb
 = 0;

878 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

879 
nByã
 = (
Vf¶ogVèb
Ë+ 
pVfs
->
szOsFûe
 +ÖVfs->
mxP©h«me
;

880 
p
 = 
	`sqlôe3_mÆloc
(
nByã
);

881 if–
p
==0 )  
SQLITE_NOMEM
;

882 
	`mem£t
(
p
, 0, 
nByã
);

884 
p
->
pFd
 = (
sqlôe3_fûe
 *)&p[1];

885 
p
->
zFûe
 = &((*Ì->
pFd
)[
pVfs
->
szOsFûe
];

887 
zFûe
 = 
	`sqlôe3_m¥ötf
("%s", 
¨gv
[3]);

888 if–!
zFûe
 ){

889 
	`sqlôe3_‰ì
(
p
);

890  
SQLITE_NOMEM
;

892 
	`dequŸe
(
zFûe
);

893 
pVfs
->
	`xFuŒP©h«me
’Vfs, 
zFûe
,ÖVfs->
mxP©h«me
, 
p
->zFile);

894 
	`sqlôe3_‰ì
(
zFûe
);

896 
Êags
 = 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_MASTER_JOURNAL
;

897 
rc
 = 
pVfs
->
	`xO≥n
’Vfs, 
p
->
zFûe
,Ö->
pFd
, 
Êags
, &flags);

899 if–
rc
==
SQLITE_OK
 ){

900 
p
->
pFd
->
pMëhods
->
	`xFûeSize
’->pFd, &p->
nByã
);

901 
	`sqlôe3_de˛¨e_vèb
(
db
,

904 *
µVèb
 = &
p
->
ba£
;

906 
	`sqlôe3_‰ì
(
p
);

909  
rc
;

910 
	}
}

916 
	$vlogBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

917 
pIdxInfo
->
e°im©edCo°
 = 10.0;

918  
SQLITE_OK
;

919 
	}
}

924 
	$vlogDisc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

925 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pVèb
;

926 if–
p
->
pFd
->
pMëhods
 ){

927 
p
->
pFd
->
pMëhods
->
	`xClo£
(p->pFd);

928 
p
->
pFd
->
pMëhods
 = 0;

930 
	`sqlôe3_‰ì
(
p
);

931  
SQLITE_OK
;

932 
	}
}

937 
	$vlogO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

938 
Vf¶ogC§
 *
pC§
;

940 
pC§
 = 
	`sqlôe3_mÆloc
((
Vf¶ogC§
));

941 if–!
pC§
 )  
SQLITE_NOMEM
;

942 
	`mem£t
(
pC§
, 0, (
Vf¶ogC§
));

943 *
µCurs‹
 = &
pC§
->
ba£
;

944  
SQLITE_OK
;

945 
	}
}

950 
	$vlogClo£
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

951 
Vf¶ogC§
 *
p
 = (Vf¶ogC§ *)
pCurs‹
;

952 
i
;

953 
i
=0; i<
p
->
nFûe
; i++){

954 
	`sqlôe3_‰ì
(
p
->
azFûe
[
i
]);

956 
	`sqlôe3_‰ì
(
p
->
azFûe
);

957 
	`sqlôe3_‰ì
(
p
->
zTønsõ¡
);

958 
	`sqlôe3_‰ì
(
p
);

959  
SQLITE_OK
;

960 
	}
}

965 
	$vlogNext
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

966 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

967 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pCurs‹
->
pVèb
;

968 
rc
 = 
SQLITE_OK
;

969 
nRód
;

971 
	`sqlôe3_‰ì
(
pC§
->
zTønsõ¡
);

972 
pC§
->
zTønsõ¡
 = 0;

974 
nRód
 = 24;

975 if–
pC§
->
iOff£t
+
nRód
<=
p
->
nByã
 ){

976 
eEvít
;

977 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
pC§
->
aBuf
, 
nRód
,ÖC§->
iOff£t
);

979 
eEvít
 = 
	`gë32bôs
(
pC§
->
aBuf
);

980 if–(
rc
==
SQLITE_OK
)

981 && (
eEvít
==
OS_OPEN
 ||ÉEvít==
OS_DELETE
 ||ÉEvít==
OS_ACCESS
)

983 
buf
[4];

984 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
buf
, 4, 
pC§
->
iOff£t
+
nRód
);

985 
nRód
 += 4;

986 if–
rc
==
SQLITE_OK
 ){

987 
nSå
 = 
	`gë32bôs
((*)
buf
);

988 *
zSå
 = 
	`sqlôe3_mÆloc
(
nSå
+1);

989 
rc
 = 
p
->
pFd
->
pMëhods
->
	`xRód
’->pFd, 
zSå
, 
nSå
, 
pC§
->
iOff£t
+
nRód
);

990 
zSå
[
nSå
] = '\0';

991 
nRód
 +
nSå
;

993 if–
eEvít
==
OS_OPEN
 ){

994 
iFûeid
 = 
	`gë32bôs
(&
pC§
->
aBuf
[4]);

995 if–
iFûeid
>=
pC§
->
nFûe
 ){

996 
nNew
 = (
pC§
->
azFûe
[0])*(
iFûeid
+1);

997 
pC§
->
azFûe
 = (**)
	`sqlôe3_ªÆloc
’C§->azFûe, 
nNew
);

998 
nNew
 -(
pC§
->
azFûe
[0])*pC§->
nFûe
;

999 
	`mem£t
(&
pC§
->
azFûe
[pC§->
nFûe
], 0, 
nNew
);

1000 
pC§
->
nFûe
 = 
iFûeid
+1;

1002 
	`sqlôe3_‰ì
(
pC§
->
azFûe
[
iFûeid
]);

1003 
pC§
->
azFûe
[
iFûeid
] = 
zSå
;

1005 
pC§
->
zTønsõ¡
 = 
zSå
;

1011 
pC§
->
iRowid
 += 1;

1012 
pC§
->
iOff£t
 +
nRód
;

1013  
rc
;

1014 
	}
}

1016 
	$vlogEof
(
sqlôe3_vèb_curs‹
 *
pCurs‹
){

1017 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1018 
Vf¶ogVèb
 *
p
 = (Vf¶ogVèb *)
pCurs‹
->
pVèb
;

1019  (
pC§
->
iOff£t
>=
p
->
nByã
);

1020 
	}
}

1022 
	$vlogFûãr
(

1023 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

1024 
idxNum
, c⁄° *
idxSå
,

1025 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


1027 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1028 
pC§
->
iRowid
 = 0;

1029 
pC§
->
iOff£t
 = 20;

1030  
	`vlogNext
(
pCurs‹
);

1031 
	}
}

1033 
	$vlogCﬁumn
(

1034 
sqlôe3_vèb_curs‹
 *
pCurs‹
,

1035 
sqlôe3_c⁄ãxt
 *
˘x
,

1036 
i


1038 
vÆ
;

1039 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1041 
	`as£π
–
i
<7 );

1042 
vÆ
 = 
	`gë32bôs
(&
pC§
->
aBuf
[4*
i
]);

1044  
i
 ){

1046 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
	`vf¶og_evíäame
(
vÆ
), -1, 
SQLITE_STATIC
);

1050 *
zSå
 = 
pC§
->
zTønsõ¡
;

1051 if–
vÆ
!=0 && vÆ<()
pC§
->
nFûe
 ){

1052 
zSå
 = 
pC§
->
azFûe
[
vÆ
];

1054 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
zSå
, -1, 
SQLITE_TRANSIENT
);

1058 
	`sqlôe3_ªsu…_öt
(
˘x
, 
vÆ
);

1062  
SQLITE_OK
;

1063 
	}
}

1065 
	$vlogRowid
(
sqlôe3_vèb_curs‹
 *
pCurs‹
, 
sqlôe_öt64
 *
pRowid
){

1066 
Vf¶ogC§
 *
pC§
 = (Vf¶ogC§ *)
pCurs‹
;

1067 *
pRowid
 = 
pC§
->
iRowid
;

1068  
SQLITE_OK
;

1069 
	}
}

1071 
	$sqlôe3_vf¶og_ªgi°î
(
sqlôe3
 *
db
){

1072 
sqlôe3_moduÀ
 
vf¶og_moduÀ
 = {

1074 
vlogC⁄√˘
,

1075 
vlogC⁄√˘
,

1076 
vlogBe°Index
,

1077 
vlogDisc⁄√˘
,

1078 
vlogDisc⁄√˘
,

1079 
vlogO≥n
,

1080 
vlogClo£
,

1081 
vlogFûãr
,

1082 
vlogNext
,

1083 
vlogEof
,

1084 
vlogCﬁumn
,

1085 
vlogRowid
,

1095 
	`sqlôe3_¸óã_moduÀ
(
db
, "vf¶og", &
vf¶og_moduÀ
, 0);

1096  
SQLITE_OK
;

1097 
	}
}

1105 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
TCLSH
)

1107 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1108 
	~"sqlôe_t˛.h
"

1110 
	~"t˛.h
"

1111 #i‚de‡
SQLITE_TCLAPI


1112 
	#SQLITE_TCLAPI


	)

1116 
SQLITE_TCLAPI
 
	$ã°_vf¶og
(

1117 *
˛õ¡D©a
,

1118 
T˛_I¡îp
 *
öãΩ
,

1119 
objc
,

1120 
T˛_Obj
 *
CONST
 
objv
[]

1122 
	sSqlôeDb
 { 
sqlôe3
 *
db
; };

1123 
sqlôe3
 *
db
;

1124 
T˛_CmdInfo
 
cmdInfo
;

1125 
rc
 = 
SQLITE_ERROR
;

1127 c⁄° *
°rs
[] = { "annotate", "finalize", "new", "register", 0 };

1128 
	eVL_íum
 { 
VL_ANNOTATE
, 
VL_FINALIZE
, 
VL_NEW
, 
VL_REGISTER
 };

1129 
iSub
;

1131 if–
objc
<2 ){

1132 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

1133  
TCL_ERROR
;

1135 if–
	`T˛_GëIndexFromObj
(
öãΩ
, 
objv
[1], 
°rs
, "sub-comm™d", 0, &
iSub
) ){

1136  
TCL_ERROR
;

1139  (
VL_íum
)
iSub
 ){

1140 
VL_ANNOTATE
: {

1141 *
zVfs
;

1142 *
zMsg
;

1143 if–
objc
!=4 ){

1144 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 3, 
objv
, "VFS");

1145  
TCL_ERROR
;

1147 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1148 
zMsg
 = 
	`T˛_GëSåög
(
objv
[3]);

1149 
rc
 = 
	`sqlôe3_vf¶og_™nŸ©e
(
zVfs
, 
zMsg
);

1150 if–
rc
!=
SQLITE_OK
 ){

1151 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1152  
TCL_ERROR
;

1156 
VL_FINALIZE
: {

1157 *
zVfs
;

1158 if–
objc
!=3 ){

1159 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "VFS");

1160  
TCL_ERROR
;

1162 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1163 
rc
 = 
	`sqlôe3_vf¶og_föÆize
(
zVfs
);

1164 if–
rc
!=
SQLITE_OK
 ){

1165 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1166  
TCL_ERROR
;

1171 
VL_NEW
: {

1172 *
zVfs
;

1173 *
zP¨ít
;

1174 *
zLog
;

1175 if–
objc
!=5 ){

1176 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "VFS PARENT LOGFILE");

1177  
TCL_ERROR
;

1179 
zVfs
 = 
	`T˛_GëSåög
(
objv
[2]);

1180 
zP¨ít
 = 
	`T˛_GëSåög
(
objv
[3]);

1181 
zLog
 = 
	`T˛_GëSåög
(
objv
[4]);

1182 if–*
zP¨ít
=='\0' ) zParent = 0;

1183 
rc
 = 
	`sqlôe3_vf¶og_√w
(
zVfs
, 
zP¨ít
, 
zLog
);

1184 if–
rc
!=
SQLITE_OK
 ){

1185 
	`T˛_AµídResu…
(
öãΩ
, "failed", 0);

1186  
TCL_ERROR
;

1191 
VL_REGISTER
: {

1192 *
zDb
;

1193 if–
objc
!=3 ){

1194 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "DB");

1195  
TCL_ERROR
;

1197 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


1198 
	`T˛_AµídResu…
(
öãΩ
, "vfslogÇotávailable because of "

1200  
TCL_ERROR
;

1202 
zDb
 = 
	`T˛_GëSåög
(
objv
[2]);

1203 if–
	`T˛_GëComm™dInfo
(
öãΩ
, 
zDb
, &
cmdInfo
) ){

1204 
db
 = ((
SqlôeDb
*)
cmdInfo
.
objClõ¡D©a
)->db;

1205 
rc
 = 
	`sqlôe3_vf¶og_ªgi°î
(
db
);

1207 if–
rc
!=
SQLITE_OK
 ){

1208 
	`T˛_AµídResu…
(
öãΩ
, "bad sqlôe3 h™dÀ: ", 
zDb
, (*)0);

1209  
TCL_ERROR
;

1216  
TCL_OK
;

1217 
	}
}

1219 
	$Sqlôëe°Osö°_Inô
(
T˛_I¡îp
 *
öãΩ
){

1220 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "vf¶og", 
ã°_vf¶og
, 0, 0);

1221  
TCL_OK
;

1222 
	}
}

	@test_pcache.c

24 
	~"sqlôe3.h
"

25 
	~<°rög.h
>

26 
	~<as£π.h
>

33 
ã°pˇcheGlobÆTy≥
 
	tã°pˇcheGlobÆTy≥
;

34 
	sã°pˇcheGlobÆTy≥
 {

35 *
	mpDummy
;

36 
	mnIn°™˚
;

37 
	mdisˇrdCh™˚
;

38 
	m¥ngSìd
;

39 
	mhighSåess
;

41 
ã°pˇcheGlobÆTy≥
 
	gã°pˇcheGlobÆ
;

53 
	$ã°pˇcheInô
(*
pArg
){

54 
	`as£π
–
pArg
==(*)&
ã°pˇcheGlobÆ
 );

55 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
==0 );

56 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

57 
ã°pˇcheGlobÆ
.
pDummy
 = 
	`sqlôe3_mÆloc
(10);

58  
ã°pˇcheGlobÆ
.
pDummy
==0 ? 
SQLITE_NOMEM
 : 
SQLITE_OK
;

59 
	}
}

67 
	$ã°pˇcheShutdown
(*
pArg
){

68 
	`as£π
–
pArg
==(*)&
ã°pˇcheGlobÆ
 );

69 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

70 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

71 
	`sqlôe3_‰ì
–
ã°pˇcheGlobÆ
.
pDummy
 );

72 
ã°pˇcheGlobÆ
.
pDummy
 = 0;

73 
	}
}

84 #i‡
deföed
(
SQLITE_TEMP_STORE
) && SQLITE_TEMP_STORE>=2

85 
	#TESTPCACHE_NPAGE
 499

	)

87 
	#TESTPCACHE_NPAGE
 217

	)

89 
	#TESTPCACHE_RESERVE
 17

	)

94 
	#TESTPCACHE_VALID
 0x364585fd

	)

95 
	#TESTPCACHE_CLEAR
 0xd42670d4

	)

100 
ã°pˇche
 
	tã°pˇche
;

101 
	sã°pˇche
 {

102 
	mszPage
;

103 
	mszExåa
;

104 
	mbPurgóbÀ
;

105 
	mnFªe
;

106 
	mnPö√d
;

107 
	miR™d
;

108 
	miMagic
;

109 
	sã°pˇchePage
 {

110 
sqlôe3_pˇche_∑ge
 
	m∑ge
;

111 
	mkey
;

112 
	misPö√d
;

113 } 
	ma
[
TESTPCACHE_NPAGE
];

119 
	$ã°pˇcheR™dom
(
ã°pˇche
 *
p
){

120 
x
 = 0;

121 
i
;

122 
i
=0; i<4; i++){

123 
p
->
iR™d
 = (p->iRand*69069 + 5);

124 
x
 = (x<<8Ë| ((
p
->
iR™d
>>16)&0xff);

126  
x
;

127 
	}
}

133 
sqlôe3_pˇche
 *
	$ã°pˇcheCª©e
(

134 
szPage
,

135 
szExåa
,

136 
bPurgóbÀ


138 
nMem
;

139 *
x
;

140 
ã°pˇche
 *
p
;

141 
i
;

142 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

143 
szPage
 = (szPage+7)&~7;

144 
nMem
 = (
ã°pˇche
Ë+ 
TESTPCACHE_NPAGE
*(
szPage
+
szExåa
);

145 
p
 = 
	`sqlôe3_mÆloc
–
nMem
 );

146 if–
p
==0 )  0;

147 
x
 = (*)&
p
[1];

148 
p
->
szPage
 = szPage;

149 
p
->
szExåa
 = szExtra;

150 
p
->
nFªe
 = 
TESTPCACHE_NPAGE
;

151 
p
->
nPö√d
 = 0;

152 
p
->
iR™d
 = 
ã°pˇcheGlobÆ
.
¥ngSìd
;

153 
p
->
bPurgóbÀ
 = bPurgeable;

154 
p
->
iMagic
 = 
TESTPCACHE_VALID
;

155 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
x
 +(
szPage
+
szExåa
)){

156 
p
->
a
[
i
].
key
 = 0;

157 
p
->
a
[
i
].
isPö√d
 = 0;

158 
p
->
a
[
i
].
∑ge
.
pBuf
 = (*)
x
;

159 
p
->
a
[
i
].
∑ge
.
pExåa
 = (*)&
x
[
szPage
];

161 
ã°pˇcheGlobÆ
.
nIn°™˚
++;

162  (
sqlôe3_pˇche
*)
p
;

163 
	}
}

168 
	$ã°pˇcheCachesize
(
sqlôe3_pˇche
 *
pCache
, 
√wSize
){

169 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

170 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

171 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

172 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

173 
	}
}

179 
	$ã°pˇchePagecou¡
(
sqlôe3_pˇche
 *
pCache
){

180 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

181 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

182 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

183 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

184  
TESTPCACHE_NPAGE
 - 
p
->
nFªe
;

185 
	}
}

190 
sqlôe3_pˇche_∑ge
 *
	$ã°pˇcheFëch
(

191 
sqlôe3_pˇche
 *
pCache
,

192 
key
,

193 
¸óãFœg


195 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

196 
i
, 
j
;

197 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

198 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

199 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

202 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

203 if–
p
->
a
[
i
].
key
==key ){

204 if–!
p
->
a
[
i
].
isPö√d
 ){

205 
p
->
nPö√d
++;

206 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

207 
p
->
a
[
i
].
isPö√d
 = 1;

209  &
p
->
a
[
i
].
∑ge
;

214 if–
¸óãFœg
==0 ){

219 if–
p
->
nPö√d
==
TESTPCACHE_NPAGE
 ){

224 if–
p
->
nPö√d
>=
TESTPCACHE_NPAGE
-
TESTPCACHE_RESERVE
 && 
¸óãFœg
<2 ){

233 if–
ã°pˇcheGlobÆ
.
highSåess
 && 
¸óãFœg
<2 ){

240 if–
p
->
nFªe
>
TESTPCACHE_RESERVE
 || (
¸óãFœg
==2 &&Ö->nFree>0) ){

241 
j
 = 
	`ã°pˇcheR™dom
(
p
Ë% 
TESTPCACHE_NPAGE
;

242 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
j
 = (j+1)%TESTPCACHE_NPAGE){

243 if–
p
->
a
[
j
].
key
==0 ){

244 
p
->
a
[
j
].
key
 = key;

245 
p
->
a
[
j
].
isPö√d
 = 1;

246 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pBuf
, 0,Ö->
szPage
);

247 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pExåa
, 0,Ö->
szExåa
);

248 
p
->
nPö√d
++;

249 
p
->
nFªe
--;

250 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

251  &
p
->
a
[
j
].
∑ge
;

256 
	`as£π
( 0 );

261 if–
p
->
bPurgóbÀ
==0 ){

268 
j
 = 
	`ã°pˇcheR™dom
(
p
Ë% 
TESTPCACHE_NPAGE
;

269 
i
=0; i<
TESTPCACHE_NPAGE
; i++, 
j
 = (j+1)%TESTPCACHE_NPAGE){

270 if–
p
->
a
[
j
].
key
>0 &&Ö->a[j].
isPö√d
==0 ){

271 
p
->
a
[
j
].
key
 = key;

272 
p
->
a
[
j
].
isPö√d
 = 1;

273 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pBuf
, 0,Ö->
szPage
);

274 
	`mem£t
(
p
->
a
[
j
].
∑ge
.
pExåa
, 0,Ö->
szExåa
);

275 
p
->
nPö√d
++;

276 
	`as£π
–
p
->
nPö√d
 <
TESTPCACHE_NPAGE
 -Ö->
nFªe
 );

277  &
p
->
a
[
j
].
∑ge
;

282 
	`as£π
(0);

284 
	}
}

289 
	$ã°pˇcheU≈ö
(

290 
sqlôe3_pˇche
 *
pCache
,

291 
sqlôe3_pˇche_∑ge
 *
pOldPage
,

292 
disˇrd


294 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

295 
i
;

296 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

297 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

298 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

304 if–
p
->
bPurgóbÀ


305 && (100-
ã°pˇcheGlobÆ
.
disˇrdCh™˚
Ë<(
	`ã°pˇcheR™dom
(
p
)%100)

307 
disˇrd
 = 1;

310 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

311 if–&
p
->
a
[
i
].
∑ge
==
pOldPage
 ){

313 
	`as£π
–
p
->
a
[
i
].
isPö√d
 );

314 
p
->
a
[
i
].
isPö√d
 = 0;

315 
p
->
nPö√d
--;

316 
	`as£π
–
p
->
nPö√d
>=0 );

317 if–
disˇrd
 ){

318 
p
->
a
[
i
].
key
 = 0;

319 
p
->
nFªe
++;

320 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

327 
	`as£π
( 0 );

328 
	}
}

334 
	$ã°pˇcheRekey
(

335 
sqlôe3_pˇche
 *
pCache
,

336 
sqlôe3_pˇche_∑ge
 *
pOldPage
,

337 
ﬁdKey
,

338 
√wKey


340 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

341 
i
;

342 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

343 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

344 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

349 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

350 if–
p
->
a
[
i
].
key
==
√wKey
 ){

352 
	`as£π
–
p
->
a
[
i
].
isPö√d
==0 );

353 
p
->
a
[
i
].
key
 = 0;

354 
p
->
nFªe
++;

355 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

362 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

363 if–
p
->
a
[
i
].
key
==
ﬁdKey
 ){

365 
	`as£π
–&
p
->
a
[
i
].
∑ge
==
pOldPage
 );

367 
	`as£π
–
p
->
a
[
i
].
isPö√d
 );

368 
p
->
a
[
i
].
key
 = 
√wKey
;

374 
	`as£π
( 0 );

375 
	}
}

382 
	$ã°pˇcheTrunˇã
(
sqlôe3_pˇche
 *
pCache
, 
iLimô
){

383 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

384 
i
;

385 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

386 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

387 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

388 
i
=0; i<
TESTPCACHE_NPAGE
; i++){

389 if–
p
->
a
[
i
].
key
>=
iLimô
 ){

390 
p
->
a
[
i
].
key
 = 0;

391 if–
p
->
a
[
i
].
isPö√d
 ){

392 
p
->
nPö√d
--;

393 
	`as£π
–
p
->
nPö√d
>=0 );

395 
p
->
nFªe
++;

396 
	`as£π
–
p
->
nFªe
<=
TESTPCACHE_NPAGE
 );

399 
	}
}

404 
	$ã°pˇcheDe°roy
(
sqlôe3_pˇche
 *
pCache
){

405 
ã°pˇche
 *
p
 = (ã°pˇche*)
pCache
;

406 
	`as£π
–
p
->
iMagic
==
TESTPCACHE_VALID
 );

407 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
!=0 );

408 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
>0 );

409 
p
->
iMagic
 = 
TESTPCACHE_CLEAR
;

410 
	`sqlôe3_‰ì
(
p
);

411 
ã°pˇcheGlobÆ
.
nIn°™˚
--;

412 
	}
}

427 
	$ö°ÆlTe°PCache
(

428 
ö°ÆlFœg
,

429 
disˇrdCh™˚
,

430 
¥ngSìd
,

431 
highSåess


433 c⁄° 
sqlôe3_pˇche_mëhods2
 
ã°Pˇche
 = {

435 (*)&
ã°pˇcheGlobÆ
,

436 
ã°pˇcheInô
,

437 
ã°pˇcheShutdown
,

438 
ã°pˇcheCª©e
,

439 
ã°pˇcheCachesize
,

440 
ã°pˇchePagecou¡
,

441 
ã°pˇcheFëch
,

442 
ã°pˇcheU≈ö
,

443 
ã°pˇcheRekey
,

444 
ã°pˇcheTrunˇã
,

445 
ã°pˇcheDe°roy
,

447 
sqlôe3_pˇche_mëhods2
 
deÁu…Pˇche
;

448 
isIn°ÆÀd
 = 0;

450 
	`as£π
–
ã°pˇcheGlobÆ
.
nIn°™˚
==0 );

451 
	`as£π
–
ã°pˇcheGlobÆ
.
pDummy
==0 );

452 
	`as£π
–
disˇrdCh™˚
<=100 );

453 
ã°pˇcheGlobÆ
.
disˇrdCh™˚
 = discardChance;

454 
ã°pˇcheGlobÆ
.
¥ngSìd
 =ÖrngSeed ^ (prngSeed<<16);

455 
ã°pˇcheGlobÆ
.
highSåess
 = highStress;

456 if–
ö°ÆlFœg
!=
isIn°ÆÀd
 ){

457 if–
ö°ÆlFœg
 ){

458 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_GETPCACHE2
, &
deÁu…Pˇche
);

459 
	`as£π
–
deÁu…Pˇche
.
xCª©e
!=
ã°pˇcheCª©e
 );

460 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
ã°Pˇche
);

462 
	`as£π
–
deÁu…Pˇche
.
xCª©e
!=0 );

463 
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_PCACHE2
, &
deÁu…Pˇche
);

465 
isIn°ÆÀd
 = 
ö°ÆlFœg
;

467 
	}
}

	@test_quota.c

30 
	~"ã°_quŸa.h
"

31 
	~<°rög.h
>

32 
	~<as£π.h
>

37 #i‡
deföed
(
SQLITE_THREADSAFE
) && SQLITE_THREADSAFE==0

38 
	#sqlôe3_muãx_Æloc
(
X
Ë((
sqlôe3_muãx
*)8)

	)

39 
	#sqlôe3_muãx_‰ì
(
X
)

	)

40 
	#sqlôe3_muãx_íãr
(
X
)

	)

41 
	#sqlôe3_muãx_åy
(
X
Ë
SQLITE_OK


	)

42 
	#sqlôe3_muãx_Àave
(
X
)

	)

43 
	#sqlôe3_muãx_hñd
(
X
Ë(()(X),1)

	)

44 
	#sqlôe3_muãx_nŸhñd
(
X
Ë(()(X),1)

	)

47 
	~"os_£tup.h
"

49 #i‡
SQLITE_OS_UNIX


50 
	~<uni°d.h
>

52 #i‡
SQLITE_OS_WIN


53 
	~"os_wö.h
"

54 
	~<io.h
>

61 
quŸaGroup
 
	tquŸaGroup
;

62 
quŸaC⁄n
 
	tquŸaC⁄n
;

63 
quŸaFûe
 
	tquŸaFûe
;

79 
	squŸaGroup
 {

80 c⁄° *
	mzP©ã∫
;

81 
sqlôe3_öt64
 
	miLimô
;

82 
sqlôe3_öt64
 
	miSize
;

83 (*
	mxCÆlback
)(

84 c⁄° *
	mzFûíame
,

85 
sqlôe3_öt64
 *
	mpiLimô
,

86 
sqlôe3_öt64
 
	miSize
,

87 *
	mpArg


89 *
	mpArg
;

90 (*
	mxDe°roy
)(*);

91 
quŸaGroup
 *
	mpNext
, **
	mµPªv
;

92 
quŸaFûe
 *
	mpFûes
;

103 
	squŸaFûe
 {

104 *
	mzFûíame
;

105 
quŸaGroup
 *
	mpGroup
;

106 
sqlôe3_öt64
 
	miSize
;

107 
	mnRef
;

108 
	mdñëeOnClo£
;

109 
quŸaFûe
 *
	mpNext
, **
	mµPªv
;

118 
	squŸaC⁄n
 {

119 
sqlôe3_fûe
 
	mba£
;

120 
quŸaFûe
 *
	mpFûe
;

129 
	squŸa_FILE
 {

130 
FILE
 *
	mf
;

131 
sqlôe3_öt64
 
	miOf°
;

132 
quŸaFûe
 *
	mpFûe
;

133 #i‡
SQLITE_OS_WIN


134 *
	mzMbcsName
;

150 
sqlôe3_vfs
 *
	mpOrigVfs
;

155 
sqlôe3_vfs
 
	msThisVfs
;

167 
sqlôe3_io_mëhods
 
	msIoMëhodsV1
;

168 
sqlôe3_io_mëhods
 
	msIoMëhodsV2
;

172 
	misInôülized
;

177 
sqlôe3_muãx
 *
	mpMuãx
;

181 
quŸaGroup
 *
	mpGroup
;

183 } 
	ggQuŸa
;

190 
	$quŸaE¡î
(){ 
	`sqlôe3_muãx_íãr
(
gQuŸa
.
pMuãx
); 
	}
}

191 
	$quŸaLóve
(){ 
	`sqlôe3_muãx_Àave
(
gQuŸa
.
pMuãx
); 
	}
}

195 
	$quŸaGroupO≥nFûeCou¡
(
quŸaGroup
 *
pGroup
){

196 
N
 = 0;

197 
quŸaFûe
 *
pFûe
 = 
pGroup
->
pFûes
;

198  
pFûe
 ){

199 if–
pFûe
->
nRef
 ) 
N
++;

200 
pFûe
 =ÖFûe->
pNext
;

202  
N
;

203 
	}
}

207 
	$quŸaRemoveFûe
(
quŸaFûe
 *
pFûe
){

208 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

209 
pGroup
->
iSize
 -
pFûe
->iSize;

210 *
pFûe
->
µPªv
 =ÖFûe->
pNext
;

211 if–
pFûe
->
pNext
 )ÖFûe->pNext->
µPªv
 =ÖFile->ppPrev;

212 
	`sqlôe3_‰ì
(
pFûe
);

213 
	}
}

218 
	$quŸaRemoveAŒFûes
(
quŸaGroup
 *
pGroup
){

219  
pGroup
->
pFûes
 ){

220 
	`as£π
–
pGroup
->
pFûes
->
nRef
==0 );

221 
	`quŸaRemoveFûe
(
pGroup
->
pFûes
);

223 
	}
}

229 
	$quŸaGroupDîef
(
quŸaGroup
 *
pGroup
){

230 if–
pGroup
->
iLimô
==0 && 
	`quŸaGroupO≥nFûeCou¡
(pGroup)==0 ){

231 
	`quŸaRemoveAŒFûes
(
pGroup
);

232 *
pGroup
->
µPªv
 =ÖGroup->
pNext
;

233 if–
pGroup
->
pNext
 )ÖGroup->pNext->
µPªv
 =ÖGroup->ppPrev;

234 if–
pGroup
->
xDe°roy
 )ÖGroup->
	`xDe°roy
’Group->
pArg
);

235 
	`sqlôe3_‰ì
(
pGroup
);

237 
	}
}

256 
	$quŸaSåglob
(c⁄° *
zGlob
, c⁄° *
z
){

257 
c
, 
c2
, 
cx
;

258 
övît
;

259 
£í
;

261  (
c
 = (*(
zGlob
++)))!=0 ){

262 if–
c
=='*' ){

263  (
c
=(*(
zGlob
++))) == '*' || c=='?' ){

264 if–
c
=='?' && (*(
z
++))==0 )  0;

266 if–
c
==0 ){

268 }if–
c
=='[' ){

269  *
z
 && 
	`quŸaSåglob
(
zGlob
-1,z)==0 ){

270 
z
++;

272  (*
z
)!=0;

274 
cx
 = (
c
=='/') ? '\\' : c;

275  (
c2
 = (*(
z
++)))!=0 ){

276  
c2
!=
c
 && c2!=
cx
 ){

277 
c2
 = *(
z
++);

278 if–
c2
==0 )  0;

280 if–
	`quŸaSåglob
(
zGlob
,
z
) )  1;

283 }if–
c
=='?' ){

284 if–(*(
z
++))==0 )  0;

285 }if–
c
=='[' ){

286 
¥i‹_c
 = 0;

287 
£í
 = 0;

288 
övît
 = 0;

289 
c
 = *(
z
++);

290 if–
c
==0 )  0;

291 
c2
 = *(
zGlob
++);

292 if–
c2
=='^' ){

293 
övît
 = 1;

294 
c2
 = *(
zGlob
++);

296 if–
c2
==']' ){

297 if–
c
==']' ) 
£í
 = 1;

298 
c2
 = *(
zGlob
++);

300  
c2
 && c2!=']' ){

301 if–
c2
=='-' && 
zGlob
[0]!=']' && zGlob[0]!=0 && 
¥i‹_c
>0 ){

302 
c2
 = *(
zGlob
++);

303 if–
c
>=
¥i‹_c
 && c<=
c2
 ) 
£í
 = 1;

304 
¥i‹_c
 = 0;

306 if–
c
==
c2
 ){

307 
£í
 = 1;

309 
¥i‹_c
 = 
c2
;

311 
c2
 = *(
zGlob
++);

313 if–
c2
==0 || (
£í
 ^ 
övît
)==0 )  0;

314 }if–
c
=='/' ){

315 if–
z
[0]!='/' && z[0]!='\\' )  0;

316 
z
++;

318 if–
c
!=(*(
z
++)) )  0;

321  *
z
==0;

322 
	}
}

329 
quŸaGroup
 *
	$quŸaGroupFöd
(c⁄° *
zFûíame
){

330 
quŸaGroup
 *
p
;

331 
p
=
gQuŸa
.
pGroup
;Ö && 
	`quŸaSåglob
’->
zP©ã∫
, 
zFûíame
)==0;

332 
p
ı->
pNext
){}

333  
p
;

334 
	}
}

339 
sqlôe3_fûe
 *
	$quŸaSubO≥n
(
sqlôe3_fûe
 *
pC⁄n
){

340 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

341  (
sqlôe3_fûe
*)&
p
[1];

342 
	}
}

347 
quŸaFûe
 *
	$quŸaFödFûe
(

348 
quŸaGroup
 *
pGroup
,

349 c⁄° *
zName
,

350 
¸óãFœg


352 
quŸaFûe
 *
pFûe
 = 
pGroup
->
pFûes
;

353  
pFûe
 && 
	`°rcmp
’Fûe->
zFûíame
, 
zName
)!=0 ){

354 
pFûe
 =ÖFûe->
pNext
;

356 if–
pFûe
==0 && 
¸óãFœg
 ){

357 
nName
 = ()(
	`°æí
(
zName
) & 0x3fffffff);

358 
pFûe
 = (
quŸaFûe
 *)
	`sqlôe3_mÆloc
–(*pFûeË+ 
nName
 + 1 );

359 if–
pFûe
 ){

360 
	`mem£t
(
pFûe
, 0, (*pFile));

361 
pFûe
->
zFûíame
 = (*)&pFile[1];

362 
	`mem˝y
(
pFûe
->
zFûíame
, 
zName
, 
nName
+1);

363 
pFûe
->
pNext
 = 
pGroup
->
pFûes
;

364 if–
pGroup
->
pFûes
 )ÖGroup->pFûes->
µPªv
 = &
pFûe
->
pNext
;

365 
pFûe
->
µPªv
 = &
pGroup
->
pFûes
;

366 
pGroup
->
pFûes
 = 
pFûe
;

367 
pFûe
->
pGroup
 =ÖGroup;

370  
pFûe
;

371 
	}
}

377 *
	$quŸa_utf8_to_mbcs
(c⁄° *
zUtf8
){

378 #i‡
SQLITE_OS_WIN


379 
size_t
 
n
;

380 
nWide
;

381 
nMbcs
;

382 
LPWSTR
 
zTmpWide
;

383 *
zMbcs
;

384 
codïage
;

386 
n
 = 
	`°æí
(
zUtf8
);

387 
nWide
 = 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zUtf8
, -1, 
NULL
, 0);

388 if–
nWide
==0 )  0;

389 
zTmpWide
 = (
LPWSTR
)
	`sqlôe3_mÆloc
–(
nWide
+1)*(zTmpWide[0]) );

390 if–
zTmpWide
==0 )  0;

391 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
zUtf8
, -1, 
zTmpWide
, 
nWide
);

392 
codïage
 = 
	`AªFûeApisANSI
(Ë? 
CP_ACP
 : 
CP_OEMCP
;

393 
nMbcs
 = 
	`WideCh¨ToMu…iByã
(
codïage
, 0, 
zTmpWide
, 
nWide
, 0, 0, 0, 0);

394 
zMbcs
 = 
nMbcs
 ? (*)
	`sqlôe3_mÆloc
(ÇMbcs+1 ) : 0;

395 if–
zMbcs
 ){

396 
	`WideCh¨ToMu…iByã
(
codïage
, 0, 
zTmpWide
, 
nWide
, 
zMbcs
, 
nMbcs
, 0, 0);

398 
	`sqlôe3_‰ì
(
zTmpWide
);

399  
zMbcs
;

401  (*)
zUtf8
;

403 
	}
}

408 
	$quŸa_mbcs_‰ì
(*
zOld
){

409 #i‡
SQLITE_OS_WIN


410 
	`sqlôe3_‰ì
(
zOld
);

414 
	}
}

424 
	$quŸaO≥n
(

425 
sqlôe3_vfs
 *
pVfs
,

426 c⁄° *
zName
,

427 
sqlôe3_fûe
 *
pC⁄n
,

428 
Êags
,

429 *
pOutFœgs


431 
rc
;

432 
quŸaC⁄n
 *
pQuŸaO≥n
;

433 
quŸaFûe
 *
pFûe
;

434 
quŸaGroup
 *
pGroup
;

435 
sqlôe3_fûe
 *
pSubO≥n
;

436 
sqlôe3_vfs
 *
pOrigVfs
 = 
gQuŸa
.pOrigVfs;

441 if–(
Êags
 & (
SQLITE_OPEN_MAIN_DB
|
SQLITE_OPEN_WAL
))==0 ){

442  
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pC⁄n
, 
Êags
, 
pOutFœgs
);

448 
	`quŸaE¡î
();

449 
pGroup
 = 
	`quŸaGroupFöd
(
zName
);

450 if–
pGroup
==0 ){

451 
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pC⁄n
, 
Êags
, 
pOutFœgs
);

455 
pQuŸaO≥n
 = (
quŸaC⁄n
*)
pC⁄n
;

456 
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

457 
rc
 = 
pOrigVfs
->
	`xO≥n
’OrigVfs, 
zName
, 
pSubO≥n
, 
Êags
, 
pOutFœgs
);

458 if–
rc
==
SQLITE_OK
 ){

459 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zName
, 1);

460 if–
pFûe
==0 ){

461 
	`quŸaLóve
();

462 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

463  
SQLITE_NOMEM
;

465 
pFûe
->
dñëeOnClo£
 = (
Êags
 & 
SQLITE_OPEN_DELETEONCLOSE
)!=0;

466 
pFûe
->
nRef
++;

467 
pQuŸaO≥n
->
pFûe
 =ÖFile;

468 if–
pSubO≥n
->
pMëhods
->
iVîsi⁄
==1 ){

469 
pQuŸaO≥n
->
ba£
.
pMëhods
 = &
gQuŸa
.
sIoMëhodsV1
;

471 
pQuŸaO≥n
->
ba£
.
pMëhods
 = &
gQuŸa
.
sIoMëhodsV2
;

475 
	`quŸaLóve
();

476  
rc
;

477 
	}
}

486 
	$quŸaDñëe
(

487 
sqlôe3_vfs
 *
pVfs
,

488 c⁄° *
zName
,

489 
syncDú


491 
rc
;

492 
quŸaFûe
 *
pFûe
;

493 
quŸaGroup
 *
pGroup
;

494 
sqlôe3_vfs
 *
pOrigVfs
 = 
gQuŸa
.pOrigVfs;

497 
rc
 = 
pOrigVfs
->
	`xDñëe
’OrigVfs, 
zName
, 
syncDú
);

502 if–
rc
==
SQLITE_OK
 ){

503 
	`quŸaE¡î
();

504 
pGroup
 = 
	`quŸaGroupFöd
(
zName
);

505 if–
pGroup
 ){

506 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zName
, 0);

507 if–
pFûe
 ){

508 if–
pFûe
->
nRef
 ){

509 
pFûe
->
dñëeOnClo£
 = 1;

511 
	`quŸaRemoveFûe
(
pFûe
);

512 
	`quŸaGroupDîef
(
pGroup
);

516 
	`quŸaLóve
();

518  
rc
;

519 
	}
}

528 
	$quŸaClo£
(
sqlôe3_fûe
 *
pC⁄n
){

529 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

530 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

531 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

532 
rc
;

533 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xClo£
(pSubOpen);

534 
	`quŸaE¡î
();

535 
pFûe
->
nRef
--;

536 if–
pFûe
->
nRef
==0 ){

537 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

538 if–
pFûe
->
dñëeOnClo£
 ){

539 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

540 
	`quŸaRemoveFûe
(
pFûe
);

542 
	`quŸaGroupDîef
(
pGroup
);

544 
	`quŸaLóve
();

545  
rc
;

546 
	}
}

551 
	$quŸaRód
(

552 
sqlôe3_fûe
 *
pC⁄n
,

553 *
pBuf
,

554 
iAmt
,

555 
sqlôe3_öt64
 
iOf°


557 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

558  
pSubO≥n
->
pMëhods
->
	`xRód
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

559 
	}
}

565 
	$quŸaWrôe
(

566 
sqlôe3_fûe
 *
pC⁄n
,

567 c⁄° *
pBuf
,

568 
iAmt
,

569 
sqlôe3_öt64
 
iOf°


571 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

572 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

573 
sqlôe3_öt64
 
iEnd
 = 
iOf°
+
iAmt
;

574 
quŸaGroup
 *
pGroup
;

575 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

576 
sqlôe3_öt64
 
szNew
;

578 if–
pFûe
->
iSize
<
iEnd
 ){

579 
pGroup
 = 
pFûe
->pGroup;

580 
	`quŸaE¡î
();

581 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

582 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

583 if–
pGroup
->
xCÆlback
 ){

584 
pGroup
->
	`xCÆlback
(
pFûe
->
zFûíame
, &pGroup->
iLimô
, 
szNew
,

585 
pGroup
->
pArg
);

587 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

588 
	`quŸaLóve
();

589  
SQLITE_FULL
;

592 
pGroup
->
iSize
 = 
szNew
;

593 
pFûe
->
iSize
 = 
iEnd
;

594 
	`quŸaLóve
();

596  
pSubO≥n
->
pMëhods
->
	`xWrôe
’SubO≥n, 
pBuf
, 
iAmt
, 
iOf°
);

597 
	}
}

602 
	$quŸaTrunˇã
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 
size
){

603 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

604 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

605 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xTrunˇã
’SubO≥n, 
size
);

606 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

607 
quŸaGroup
 *
pGroup
;

608 if–
rc
==
SQLITE_OK
 ){

609 
	`quŸaE¡î
();

610 
pGroup
 = 
pFûe
->pGroup;

611 
pGroup
->
iSize
 -
pFûe
->iSize;

612 
pFûe
->
iSize
 = 
size
;

613 
pGroup
->
iSize
 +
size
;

614 
	`quŸaLóve
();

616  
rc
;

617 
	}
}

621 
	$quŸaSync
(
sqlôe3_fûe
 *
pC⁄n
, 
Êags
){

622 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

623  
pSubO≥n
->
pMëhods
->
	`xSync
’SubO≥n, 
Êags
);

624 
	}
}

629 
	$quŸaFûeSize
(
sqlôe3_fûe
 *
pC⁄n
, 
sqlôe3_öt64
 *
pSize
){

630 
quŸaC⁄n
 *
p
 = (quŸaC⁄n*)
pC⁄n
;

631 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

632 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

633 
quŸaGroup
 *
pGroup
;

634 
sqlôe3_öt64
 
sz
;

635 
rc
;

637 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeSize
’SubO≥n, &
sz
);

638 if–
rc
==
SQLITE_OK
 ){

639 
	`quŸaE¡î
();

640 
pGroup
 = 
pFûe
->pGroup;

641 
pGroup
->
iSize
 -
pFûe
->iSize;

642 
pFûe
->
iSize
 = 
sz
;

643 
pGroup
->
iSize
 +
sz
;

644 
	`quŸaLóve
();

645 *
pSize
 = 
sz
;

647  
rc
;

648 
	}
}

652 
	$quŸaLock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

653 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

654  
pSubO≥n
->
pMëhods
->
	`xLock
’SubO≥n, 
lock
);

655 
	}
}

659 
	$quŸaU∆ock
(
sqlôe3_fûe
 *
pC⁄n
, 
lock
){

660 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

661  
pSubO≥n
->
pMëhods
->
	`xU∆ock
’SubO≥n, 
lock
);

662 
	}
}

666 
	$quŸaCheckRe£rvedLock
(
sqlôe3_fûe
 *
pC⁄n
, *
pResOut
){

667 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

668  
pSubO≥n
->
pMëhods
->
	`xCheckRe£rvedLock
’SubO≥n, 
pResOut
);

669 
	}
}

673 
	$quŸaFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pC⁄n
, 
›
, *
pArg
){

674 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

675 
rc
 = 
pSubO≥n
->
pMëhods
->
	`xFûeC⁄åﬁ
’SubO≥n, 
›
, 
pArg
);

676 #i‡
	`deföed
(
SQLITE_FCNTL_VFSNAME
)

677 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

678 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("quota/%z", *(**)pArg);

681  
rc
;

682 
	}
}

686 
	$quŸaSe˘‹Size
(
sqlôe3_fûe
 *
pC⁄n
){

687 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

688  
pSubO≥n
->
pMëhods
->
	`xSe˘‹Size
(pSubOpen);

689 
	}
}

693 
	$quŸaDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pC⁄n
){

694 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

695  
pSubO≥n
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(pSubOpen);

696 
	}
}

700 
	$quŸaShmM≠
(

701 
sqlôe3_fûe
 *
pC⁄n
,

702 
iRegi⁄
,

703 
szRegi⁄
,

704 
bExãnd
,

705 vﬁ©ûê**
µ


707 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

708  
pSubO≥n
->
pMëhods
->
	`xShmM≠
’SubO≥n, 
iRegi⁄
, 
szRegi⁄
, 
bExãnd
, 
µ
);

709 
	}
}

713 
	$quŸaShmLock
(

714 
sqlôe3_fûe
 *
pC⁄n
,

715 
of°
,

716 
n
,

717 
Êags


719 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

720  
pSubO≥n
->
pMëhods
->
	`xShmLock
’SubO≥n, 
of°
, 
n
, 
Êags
);

721 
	}
}

725 
	$quŸaShmB¨rõr
(
sqlôe3_fûe
 *
pC⁄n
){

726 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

727 
pSubO≥n
->
pMëhods
->
	`xShmB¨rõr
(pSubOpen);

728 
	}
}

732 
	$quŸaShmUnm≠
(
sqlôe3_fûe
 *
pC⁄n
, 
dñëeFœg
){

733 
sqlôe3_fûe
 *
pSubO≥n
 = 
	`quŸaSubO≥n
(
pC⁄n
);

734  
pSubO≥n
->
pMëhods
->
	`xShmUnm≠
’SubO≥n, 
dñëeFœg
);

735 
	}
}

749 
	$sqlôe3_quŸa_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
){

750 
sqlôe3_vfs
 *
pOrigVfs
;

751 if–
gQuŸa
.
isInôülized
 )  
SQLITE_MISUSE
;

752 
pOrigVfs
 = 
	`sqlôe3_vfs_föd
(
zOrigVfsName
);

753 if–
pOrigVfs
==0 )  
SQLITE_ERROR
;

754 
	`as£π
–
pOrigVfs
!=&
gQuŸa
.
sThisVfs
 );

755 
gQuŸa
.
pMuãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_FAST
);

756 if–!
gQuŸa
.
pMuãx
 ){

757  
SQLITE_NOMEM
;

759 
gQuŸa
.
isInôülized
 = 1;

760 
gQuŸa
.
pOrigVfs
 =ÖOrigVfs;

761 
gQuŸa
.
sThisVfs
 = *
pOrigVfs
;

762 
gQuŸa
.
sThisVfs
.
xO≥n
 = 
quŸaO≥n
;

763 
gQuŸa
.
sThisVfs
.
xDñëe
 = 
quŸaDñëe
;

764 
gQuŸa
.
sThisVfs
.
szOsFûe
 +(
quŸaC⁄n
);

765 
gQuŸa
.
sThisVfs
.
zName
 = "quota";

766 
gQuŸa
.
sIoMëhodsV1
.
iVîsi⁄
 = 1;

767 
gQuŸa
.
sIoMëhodsV1
.
xClo£
 = 
quŸaClo£
;

768 
gQuŸa
.
sIoMëhodsV1
.
xRód
 = 
quŸaRód
;

769 
gQuŸa
.
sIoMëhodsV1
.
xWrôe
 = 
quŸaWrôe
;

770 
gQuŸa
.
sIoMëhodsV1
.
xTrunˇã
 = 
quŸaTrunˇã
;

771 
gQuŸa
.
sIoMëhodsV1
.
xSync
 = 
quŸaSync
;

772 
gQuŸa
.
sIoMëhodsV1
.
xFûeSize
 = 
quŸaFûeSize
;

773 
gQuŸa
.
sIoMëhodsV1
.
xLock
 = 
quŸaLock
;

774 
gQuŸa
.
sIoMëhodsV1
.
xU∆ock
 = 
quŸaU∆ock
;

775 
gQuŸa
.
sIoMëhodsV1
.
xCheckRe£rvedLock
 = 
quŸaCheckRe£rvedLock
;

776 
gQuŸa
.
sIoMëhodsV1
.
xFûeC⁄åﬁ
 = 
quŸaFûeC⁄åﬁ
;

777 
gQuŸa
.
sIoMëhodsV1
.
xSe˘‹Size
 = 
quŸaSe˘‹Size
;

778 
gQuŸa
.
sIoMëhodsV1
.
xDevi˚Ch¨a˘îi°ics
 = 
quŸaDevi˚Ch¨a˘îi°ics
;

779 
gQuŸa
.
sIoMëhodsV2
 = gQuŸa.
sIoMëhodsV1
;

780 
gQuŸa
.
sIoMëhodsV2
.
iVîsi⁄
 = 2;

781 
gQuŸa
.
sIoMëhodsV2
.
xShmM≠
 = 
quŸaShmM≠
;

782 
gQuŸa
.
sIoMëhodsV2
.
xShmLock
 = 
quŸaShmLock
;

783 
gQuŸa
.
sIoMëhodsV2
.
xShmB¨rõr
 = 
quŸaShmB¨rõr
;

784 
gQuŸa
.
sIoMëhodsV2
.
xShmUnm≠
 = 
quŸaShmUnm≠
;

785 
	`sqlôe3_vfs_ªgi°î
(&
gQuŸa
.
sThisVfs
, 
makeDeÁu…
);

786  
SQLITE_OK
;

787 
	}
}

798 
	$sqlôe3_quŸa_shutdown
(){

799 
quŸaGroup
 *
pGroup
;

800 if–
gQuŸa
.
isInôülized
==0 )  
SQLITE_MISUSE
;

801 
pGroup
=
gQuŸa
.pGroup;ÖGroup;ÖGroupıGroup->
pNext
){

802 if–
	`quŸaGroupO≥nFûeCou¡
(
pGroup
)>0 )  
SQLITE_MISUSE
;

804  
gQuŸa
.
pGroup
 ){

805 
pGroup
 = 
gQuŸa
.pGroup;

806 
gQuŸa
.
pGroup
 =ÖGroup->
pNext
;

807 
pGroup
->
iLimô
 = 0;

808 
	`as£π
–
	`quŸaGroupO≥nFûeCou¡
(
pGroup
)==0 );

809 
	`quŸaGroupDîef
(
pGroup
);

811 
gQuŸa
.
isInôülized
 = 0;

812 
	`sqlôe3_muãx_‰ì
(
gQuŸa
.
pMuãx
);

813 
	`sqlôe3_vfs_uƒegi°î
(&
gQuŸa
.
sThisVfs
);

814 
	`mem£t
(&
gQuŸa
, 0, (gQuota));

815  
SQLITE_OK
;

816 
	}
}

838 
sqlôe3_quŸa_£t
(

839 c⁄° *
zP©ã∫
,

840 
sqlôe3_öt64
 
iLimô
,

841 (*
xCÆlback
)(

842 c⁄° *
zFûíame
,

843 
sqlôe3_öt64
 *
piLimô
,

844 
sqlôe3_öt64
 
iSize
,

845 *
pArg


847 *
pArg
,

848 (*
xDe°roy
)(*)

850 
quŸaGroup
 *
pGroup
;

851 
	`quŸaE¡î
();

852 
pGroup
 = 
gQuŸa
.pGroup;

853  
pGroup
 && 
	`°rcmp
’Group->
zP©ã∫
, zPattern)!=0 ){

854 
pGroup
 =ÖGroup->
pNext
;

856 if–
pGroup
==0 ){

857 
nP©ã∫
 = ()(
	`°æí
(
zP©ã∫
) & 0x3fffffff);

858 if–
iLimô
<=0 ){

859 
	`quŸaLóve
();

860  
SQLITE_OK
;

862 
pGroup
 = (
quŸaGroup
 *)
	`sqlôe3_mÆloc
–(*pGroupË+ 
nP©ã∫
 + 1 );

863 if–
pGroup
==0 ){

864 
	`quŸaLóve
();

865  
SQLITE_NOMEM
;

867 
	`mem£t
(
pGroup
, 0, (*pGroup));

868 
pGroup
->
zP©ã∫
 = (*)&pGroup[1];

869 
	`mem˝y
((*)
pGroup
->
zP©ã∫
, zP©ã∫, 
nP©ã∫
+1);

870 if–
gQuŸa
.
pGroup
 ) gQuŸa.pGroup->
µPªv
 = &pGroup->
pNext
;

871 
pGroup
->
pNext
 = 
gQuŸa
.pGroup;

872 
pGroup
->
µPªv
 = &
gQuŸa
.pGroup;

873 
gQuŸa
.
pGroup
 =ÖGroup;

875 
pGroup
->
iLimô
 = iLimit;

876 
pGroup
->
xCÆlback
 = xCallback;

877 if–
pGroup
->
xDe°roy
 &&ÖGroup->
pArg
!=pArg ){

878 
pGroup
->
	`xDe°roy
’Group->
pArg
);

880 
pGroup
->
pArg
 =ÖArg;

881 
pGroup
->
xDe°roy
 = xDestroy;

882 
	`quŸaGroupDîef
(
pGroup
);

883 
	`quŸaLóve
();

884  
SQLITE_OK
;

885 
	}
}

891 
	$sqlôe3_quŸa_fûe
(c⁄° *
zFûíame
){

892 *
zFuŒ
 = 0;

893 
sqlôe3_fûe
 *
fd
;

894 
rc
;

895 
outFœgs
 = 0;

896 
sqlôe3_öt64
 
iSize
;

897 
nAŒoc
 = 
gQuŸa
.
sThisVfs
.
szOsFûe
 + gQuŸa.sThisVfs.
mxP©h«me
+2;

900 
fd
 = (
sqlôe3_fûe
 *)
	`sqlôe3_mÆloc
(
nAŒoc
);

901 if–
fd
==0 ){

902 
rc
 = 
SQLITE_NOMEM
;

904 
zFuŒ
 = &((*)
fd
)[
gQuŸa
.
sThisVfs
.
szOsFûe
];

905 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

906 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

909 if–
rc
==
SQLITE_OK
 ){

910 
zFuŒ
[
	`°æí
(zFull)+1] = '\0';

911 
rc
 = 
	`quŸaO≥n
(&
gQuŸa
.
sThisVfs
, 
zFuŒ
, 
fd
,

912 
SQLITE_OPEN_READONLY
 | 
SQLITE_OPEN_MAIN_DB
, &
outFœgs
);

913 if–
rc
==
SQLITE_OK
 ){

914 
fd
->
pMëhods
->
	`xFûeSize
(fd, &
iSize
);

915 
fd
->
pMëhods
->
	`xClo£
(fd);

916 }if–
rc
==
SQLITE_CANTOPEN
 ){

917 
quŸaGroup
 *
pGroup
;

918 
quŸaFûe
 *
pFûe
;

919 
	`quŸaE¡î
();

920 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

921 if–
pGroup
 ){

922 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zFuŒ
, 0);

923 if–
pFûe
 ) 
	`quŸaRemoveFûe
(pFile);

925 
	`quŸaLóve
();

929 
	`sqlôe3_‰ì
(
fd
);

930  
rc
;

931 
	}
}

936 
quŸa_FILE
 *
	$sqlôe3_quŸa_f›í
(c⁄° *
zFûíame
, c⁄° *
zMode
){

937 
quŸa_FILE
 *
p
 = 0;

938 *
zFuŒ
 = 0;

939 *
zFuŒTøn¶©ed
 = 0;

940 
rc
;

941 
quŸaGroup
 *
pGroup
;

942 
quŸaFûe
 *
pFûe
;

944 
zFuŒ
 = (*)
	`sqlôe3_mÆloc
(
gQuŸa
.
sThisVfs
.
mxP©h«me
 + 1);

945 if–
zFuŒ
==0 )  0;

946 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

947 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

948 if–
rc
 ) 
quŸa_f›í_îr‹
;

949 
p
 = (
quŸa_FILE
*)
	`sqlôe3_mÆloc
((*p));

950 if–
p
==0 ) 
quŸa_f›í_îr‹
;

951 
	`mem£t
(
p
, 0, (*p));

952 
zFuŒTøn¶©ed
 = 
	`quŸa_utf8_to_mbcs
(
zFuŒ
);

953 if–
zFuŒTøn¶©ed
==0 ) 
quŸa_f›í_îr‹
;

954 
p
->
f
 = 
	`f›í
(
zFuŒTøn¶©ed
, 
zMode
);

955 if–
p
->
f
==0 ) 
quŸa_f›í_îr‹
;

956 
	`quŸaE¡î
();

957 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

958 if–
pGroup
 ){

959 
pFûe
 = 
	`quŸaFödFûe
(
pGroup
, 
zFuŒ
, 1);

960 if–
pFûe
==0 ){

961 
	`quŸaLóve
();

962 
quŸa_f›í_îr‹
;

964 
pFûe
->
nRef
++;

965 
p
->
pFûe
 =ÖFile;

967 
	`quŸaLóve
();

968 
	`sqlôe3_‰ì
(
zFuŒ
);

969 #i‡
SQLITE_OS_WIN


970 
p
->
zMbcsName
 = 
zFuŒTøn¶©ed
;

972  
p
;

974 
quŸa_f›í_îr‹
:

975 
	`quŸa_mbcs_‰ì
(
zFuŒTøn¶©ed
);

976 
	`sqlôe3_‰ì
(
zFuŒ
);

977 if–
p
 &&Ö->
f
 ) 
	`f˛o£
(p->f);

978 
	`sqlôe3_‰ì
(
p
);

980 
	}
}

985 
size_t
 
	$sqlôe3_quŸa_‰ód
(

986 *
pBuf
,

987 
size_t
 
size
,

988 
size_t
 
nmemb
,

989 
quŸa_FILE
 *
p


991  
	`‰ód
(
pBuf
, 
size
, 
nmemb
, 
p
->
f
);

992 
	}
}

998 
size_t
 
	$sqlôe3_quŸa_fwrôe
(

999 c⁄° *
pBuf
,

1000 
size_t
 
size
,

1001 
size_t
 
nmemb
,

1002 
quŸa_FILE
 *
p


1004 
sqlôe3_öt64
 
iOf°
;

1005 
sqlôe3_öt64
 
iEnd
;

1006 
sqlôe3_öt64
 
szNew
;

1007 
quŸaFûe
 *
pFûe
;

1008 
size_t
 
rc
;

1010 
iOf°
 = 
	`·ñl
(
p
->
f
);

1011 
iEnd
 = 
iOf°
 + 
size
*
nmemb
;

1012 
pFûe
 = 
p
->pFile;

1013 if–
pFûe
 &&ÖFûe->
iSize
<
iEnd
 ){

1014 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1015 
	`quŸaE¡î
();

1016 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

1017 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

1018 if–
pGroup
->
xCÆlback
 ){

1019 
pGroup
->
	`xCÆlback
(
pFûe
->
zFûíame
, &pGroup->
iLimô
, 
szNew
,

1020 
pGroup
->
pArg
);

1022 if–
szNew
>
pGroup
->
iLimô
 &&ÖGroup->iLimit>0 ){

1023 
iEnd
 = 
pGroup
->
iLimô
 -ÖGroup->
iSize
 + 
pFûe
->iSize;

1024 
nmemb
 = (
size_t
)((
iEnd
 - 
iOf°
)/
size
);

1025 
iEnd
 = 
iOf°
 + 
size
*
nmemb
;

1026 
szNew
 = 
pGroup
->
iSize
 - 
pFûe
->iSizê+ 
iEnd
;

1029 
pGroup
->
iSize
 = 
szNew
;

1030 
pFûe
->
iSize
 = 
iEnd
;

1031 
	`quŸaLóve
();

1033 
pFûe
 = 0;

1035 
rc
 = 
	`fwrôe
(
pBuf
, 
size
, 
nmemb
, 
p
->
f
);

1039 if–
rc
<
nmemb
 && 
pFûe
 ){

1040 
size_t
 
nWrôãn
 = 
rc
;

1041 
sqlôe3_öt64
 
iNewEnd
 = 
iOf°
 + 
size
*
nWrôãn
;

1042 if–
iNewEnd
<
iEnd
 ) iNewEnd = iEnd;

1043 
	`quŸaE¡î
();

1044 
pFûe
->
pGroup
->
iSize
 +
iNewEnd
 -ÖFile->iSize;

1045 
pFûe
->
iSize
 = 
iNewEnd
;

1046 
	`quŸaLóve
();

1048  
rc
;

1049 
	}
}

1054 
	$sqlôe3_quŸa_f˛o£
(
quŸa_FILE
 *
p
){

1055 
rc
;

1056 
quŸaFûe
 *
pFûe
;

1057 
rc
 = 
	`f˛o£
(
p
->
f
);

1058 
pFûe
 = 
p
->pFile;

1059 if–
pFûe
 ){

1060 
	`quŸaE¡î
();

1061 
pFûe
->
nRef
--;

1062 if–
pFûe
->
nRef
==0 ){

1063 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1064 if–
pFûe
->
dñëeOnClo£
 ){

1065 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

1066 
	`quŸaRemoveFûe
(
pFûe
);

1068 
	`quŸaGroupDîef
(
pGroup
);

1070 
	`quŸaLóve
();

1072 #i‡
SQLITE_OS_WIN


1073 
	`quŸa_mbcs_‰ì
(
p
->
zMbcsName
);

1075 
	`sqlôe3_‰ì
(
p
);

1076  
rc
;

1077 
	}
}

1082 
	$sqlôe3_quŸa_fÊush
(
quŸa_FILE
 *
p
, 
doFsync
){

1083 
rc
;

1084 
rc
 = 
	`fÊush
(
p
->
f
);

1085 if–
rc
==0 && 
doFsync
 ){

1086 #i‡
SQLITE_OS_UNIX


1087 
rc
 = 
	`fsync
(
	`fûío
(
p
->
f
));

1089 #i‡
SQLITE_OS_WIN


1090 
rc
 = 
	`_commô
(
	`_fûío
(
p
->
f
));

1093  
rc
!=0;

1094 
	}
}

1099 
	$sqlôe3_quŸa_f£ek
(
quŸa_FILE
 *
p
, 
off£t
, 
whí˚
){

1100  
	`f£ek
(
p
->
f
, 
off£t
, 
whí˚
);

1101 
	}
}

1106 
	$sqlôe3_quŸa_ªwöd
(
quŸa_FILE
 *
p
){

1107 
	`ªwöd
(
p
->
f
);

1108 
	}
}

1113 
	$sqlôe3_quŸa_·ñl
(
quŸa_FILE
 *
p
){

1114  
	`·ñl
(
p
->
f
);

1115 
	}
}

1120 
	$sqlôe3_quŸa_„º‹
(
quŸa_FILE
 *
p
){

1121  
	`„º‹
(
p
->
f
);

1122 
	}
}

1127 
	$sqlôe3_quŸa_·runˇã
(
quŸa_FILE
 *
p
, 
sqlôe3_öt64
 
szNew
){

1128 
quŸaFûe
 *
pFûe
 = 
p
->pFile;

1129 
rc
;

1130 if–(
pFûe
 = 
p
->pFûe)!=0 &&ÖFûe->
iSize
<
szNew
 ){

1131 
quŸaGroup
 *
pGroup
;

1132 if–
pFûe
->
iSize
<
szNew
 ){

1137 
pGroup
 = 
pFûe
->pGroup;

1138 
	`quŸaE¡î
();

1139 
pGroup
->
iSize
 +
szNew
 - 
pFûe
->iSize;

1140 
	`quŸaLóve
();

1142 #i‡
SQLITE_OS_UNIX


1143 
rc
 = 
	`·runˇã
(
	`fûío
(
p
->
f
), 
szNew
);

1145 #i‡
SQLITE_OS_WIN


1146 #i‡
	`deföed
(
__MINGW32__
Ë&& deföed(
SQLITE_TEST
)

1149 
rc
 = 
	`_chsize
(
	`_fûío
(
p
->
f
), ()
szNew
);

1151 
rc
 = 
	`_chsize_s
(
	`_fûío
(
p
->
f
), 
szNew
);

1154 if–
pFûe
 && 
rc
==0 ){

1155 
quŸaGroup
 *
pGroup
 = 
pFûe
->pGroup;

1156 
	`quŸaE¡î
();

1157 
pGroup
->
iSize
 +
szNew
 - 
pFûe
->iSize;

1158 
pFûe
->
iSize
 = 
szNew
;

1159 
	`quŸaLóve
();

1161  
rc
;

1162 
	}
}

1169 
	$sqlôe3_quŸa_fûe_mtime
(
quŸa_FILE
 *
p
, 
time_t
 *
pTime
){

1170 
rc
;

1171 #i‡
SQLITE_OS_UNIX


1172 
°©
 
buf
;

1173 
rc
 = 
	`f°©
(
	`fûío
(
p
->
f
), &
buf
);

1175 #i‡
SQLITE_OS_WIN


1176 
_°©i64
 
buf
;

1177 
rc
 = 
	`_°©i64
(
p
->
zMbcsName
, &
buf
);

1179 if–
rc
==0 ) *
pTime
 = 
buf
.
°_mtime
;

1180  
rc
;

1181 
	}
}

1187 
sqlôe3_öt64
 
	$sqlôe3_quŸa_fûe_åuesize
(
quŸa_FILE
 *
p
){

1188 
rc
;

1189 #i‡
SQLITE_OS_UNIX


1190 
°©
 
buf
;

1191 
rc
 = 
	`f°©
(
	`fûío
(
p
->
f
), &
buf
);

1193 #i‡
SQLITE_OS_WIN


1194 
_°©i64
 
buf
;

1195 
rc
 = 
	`_°©i64
(
p
->
zMbcsName
, &
buf
);

1197  
rc
==0 ? 
buf
.
°_size
 : -1;

1198 
	}
}

1203 
sqlôe3_öt64
 
	$sqlôe3_quŸa_fûe_size
(
quŸa_FILE
 *
p
){

1204  
p
->
pFûe
 ?Ö->pFûe->
iSize
 : -1;

1205 
	}
}

1211 
	$sqlôe3_quŸa_fûe_avaûabÀ
(
quŸa_FILE
 *
p
){

1212 
FILE
* 
f
 = 
p
->f;

1213 
pos1
, 
pos2
;

1214 
rc
;

1215 
pos1
 = 
	`·ñl
(
f
);

1216 i‡–
pos1
 < 0 )  -1;

1217 
rc
 = 
	`f£ek
(
f
, 0, 
SEEK_END
);

1218 i‡–
rc
 != 0 )  -1;

1219 
pos2
 = 
	`·ñl
(
f
);

1220 i‡–
pos2
 < 0 )  -1;

1221 
rc
 = 
	`f£ek
(
f
, 
pos1
, 
SEEK_SET
);

1222 i‡–
rc
 != 0 )  -1;

1223  
pos2
 - 
pos1
;

1224 
	}
}

1229 
	$sqlôe3_quŸa_ªmove
(c⁄° *
zFûíame
){

1230 *
zFuŒ
;

1231 
size_t
 
nFuŒ
;

1232 
rc
;

1233 
quŸaGroup
 *
pGroup
;

1234 
quŸaFûe
 *
pFûe
;

1235 
quŸaFûe
 *
pNextFûe
;

1236 
diff
;

1237 
c
;

1239 
zFuŒ
 = (*)
	`sqlôe3_mÆloc
(
gQuŸa
.
sThisVfs
.
mxP©h«me
 + 1);

1240 if–
zFuŒ
==0 )  
SQLITE_NOMEM
;

1241 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xFuŒP©h«me
(gQuŸa.pOrigVfs, 
zFûíame
,

1242 
gQuŸa
.
sThisVfs
.
mxP©h«me
+1, 
zFuŒ
);

1243 if–
rc
 ){

1244 
	`sqlôe3_‰ì
(
zFuŒ
);

1245  
rc
;

1251 
nFuŒ
 = 
	`°æí
(
zFuŒ
);

1252 if–
nFuŒ
>0 && (
zFuŒ
[nFull-1]=='/' || zFull[nFull-1]=='\\') ){

1253 
nFuŒ
--;

1254 
zFuŒ
[
nFuŒ
] = 0;

1257 
	`quŸaE¡î
();

1258 
pGroup
 = 
	`quŸaGroupFöd
(
zFuŒ
);

1259 if–
pGroup
 ){

1260 
pFûe
=
pGroup
->
pFûes
;ÖFûê&& 
rc
==
SQLITE_OK
;ÖFûe=
pNextFûe
){

1261 
pNextFûe
 = 
pFûe
->
pNext
;

1262 
diff
 = 
	`°∫cmp
(
zFuŒ
, 
pFûe
->
zFûíame
, 
nFuŒ
);

1263 if–
diff
==0 && ((
c
 = 
pFûe
->
zFûíame
[
nFuŒ
])==0 || c=='/' || c=='\\') ){

1264 if–
pFûe
->
nRef
 ){

1265 
pFûe
->
dñëeOnClo£
 = 1;

1267 
rc
 = 
gQuŸa
.
pOrigVfs
->
	`xDñëe
(gQuŸa.pOrigVfs, 
pFûe
->
zFûíame
, 0);

1268 
	`quŸaRemoveFûe
(
pFûe
);

1269 
	`quŸaGroupDîef
(
pGroup
);

1274 
	`quŸaLóve
();

1275 
	`sqlôe3_‰ì
(
zFuŒ
);

1276  
rc
;

1277 
	}
}

1280 #ifde‡
SQLITE_TEST


1281 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

1282 
	~"sqlôe_t˛.h
"

1284 
	~"t˛.h
"

1285 #i‚de‡
SQLITE_TCLAPI


1286 
	#SQLITE_TCLAPI


	)

1293 
T˛QuŸaCÆlback
 
	tT˛QuŸaCÆlback
;

1294 
	sT˛QuŸaCÆlback
 {

1295 
T˛_I¡îp
 *
	möãΩ
;

1296 
T˛_Obj
 *
	mpS¸ùt
;

1299 c⁄° *
sqlôe3EºName
();

1305 
	$t˛QuŸaCÆlback
(

1306 c⁄° *
zFûíame
,

1307 
sqlôe3_öt64
 *
piLimô
,

1308 
sqlôe3_öt64
 
iSize
,

1309 *
pArg


1311 
T˛QuŸaCÆlback
 *
p
;

1312 
T˛_Obj
 *
pEvÆ
;

1313 
T˛_Obj
 *
pV¨«me
;

1314 
∫d
;

1315 
rc
;

1317 
p
 = (
T˛QuŸaCÆlback
 *)
pArg
;

1318 if–
p
==0 ) ;

1320 
pV¨«me
 = 
	`T˛_NewSåögObj
("::piLimit_", -1);

1321 
	`T˛_In¸RefCou¡
(
pV¨«me
);

1322 
	`sqlôe3_øndom√ss
((
∫d
), (*)&rnd);

1323 
	`T˛_AµídObjToObj
(
pV¨«me
, 
	`T˛_NewI¡Obj
(()(
∫d
&0x7FFFFFFF)));

1324 
	`T˛_ObjSëV¨2
(
p
->
öãΩ
, 
pV¨«me
, 0, 
	`T˛_NewWideI¡Obj
(*
piLimô
), 0);

1326 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

1327 
	`T˛_In¸RefCou¡
(
pEvÆ
);

1328 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
	`T˛_NewSåögObj
(
zFûíame
, -1));

1329 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
pV¨«me
);

1330 
	`T˛_Li°ObjAµídEÀmít
(0, 
pEvÆ
, 
	`T˛_NewWideI¡Obj
(
iSize
));

1331 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

1333 if–
rc
==
TCL_OK
 ){

1334 
T˛_WideI¡
 
x
;

1335 
T˛_Obj
 *
pLimô
 = 
	`T˛_ObjGëV¨2
(
p
->
öãΩ
, 
pV¨«me
, 0, 0);

1336 
rc
 = 
	`T˛_GëWideI¡FromObj
(
p
->
öãΩ
, 
pLimô
, &
x
);

1337 *
piLimô
 = 
x
;

1338 
	`T˛_Un£tV¨
(
p
->
öãΩ
, 
	`T˛_GëSåög
(
pV¨«me
), 0);

1341 
	`T˛_De¸RefCou¡
(
pEvÆ
);

1342 
	`T˛_De¸RefCou¡
(
pV¨«me
);

1343 if–
rc
!=
TCL_OK
 ) 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

1344 
	}
}

1349 
	$t˛CÆlbackDe°ru˘‹
(*
pObj
){

1350 
T˛QuŸaCÆlback
 *
p
 = (T˛QuŸaCÆlback*)
pObj
;

1351 if–
p
 ){

1352 
	`T˛_De¸RefCou¡
(
p
->
pS¸ùt
);

1353 
	`sqlôe3_‰ì
((*)
p
);

1355 
	}
}

1360 
SQLITE_TCLAPI
 
	$ã°_quŸa_öôülize
(

1361 * 
˛õ¡D©a
,

1362 
T˛_I¡îp
 *
öãΩ
,

1363 
objc
,

1364 
T˛_Obj
 *
CONST
 
objv
[]

1366 c⁄° *
zName
;

1367 
makeDeÁu…
;

1368 
rc
;

1371 if–
objc
!=3 ){

1372 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "NAME MAKEDEFAULT");

1373  
TCL_ERROR
;

1375 
zName
 = 
	`T˛_GëSåög
(
objv
[1]);

1376 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
makeDeÁu…
ËË 
TCL_ERROR
;

1377 if–
zName
[0]=='\0' ) zName = 0;

1380 
rc
 = 
	`sqlôe3_quŸa_öôülize
(
zName
, 
makeDeÁu…
);

1381 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1383  
TCL_OK
;

1384 
	}
}

1389 
SQLITE_TCLAPI
 
	$ã°_quŸa_shutdown
(

1390 * 
˛õ¡D©a
,

1391 
T˛_I¡îp
 *
öãΩ
,

1392 
objc
,

1393 
T˛_Obj
 *
CONST
 
objv
[]

1395 
rc
;

1397 if–
objc
!=1 ){

1398 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

1399  
TCL_ERROR
;

1403 
rc
 = 
	`sqlôe3_quŸa_shutdown
();

1404 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1406  
TCL_OK
;

1407 
	}
}

1412 
SQLITE_TCLAPI
 
	$ã°_quŸa_£t
(

1413 * 
˛õ¡D©a
,

1414 
T˛_I¡îp
 *
öãΩ
,

1415 
objc
,

1416 
T˛_Obj
 *
CONST
 
objv
[]

1418 c⁄° *
zP©ã∫
;

1419 
T˛_WideI¡
 
iLimô
;

1420 
T˛_Obj
 *
pS¸ùt
;

1421 
rc
;

1422 
T˛QuŸaCÆlback
 *
p
;

1423 
nS¸ùt
;

1424 (*
xDe°roy
)(*);

1425 (*
xCÆlback
)(c⁄° *, 
sqlôe3_öt64
 *, sqlite3_int64, *);

1428 if–
objc
!=4 ){

1429 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN LIMIT SCRIPT");

1430  
TCL_ERROR
;

1432 
zP©ã∫
 = 
	`T˛_GëSåög
(
objv
[1]);

1433 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
iLimô
ËË 
TCL_ERROR
;

1434 
pS¸ùt
 = 
objv
[3];

1435 
	`T˛_GëSåögFromObj
(
pS¸ùt
, &
nS¸ùt
);

1437 if–
nS¸ùt
>0 ){

1439 
p
 = (
T˛QuŸaCÆlback
 *)
	`sqlôe3_mÆloc
((TclQuotaCallback));

1440 if–!
p
 ){

1441 
	`T˛_SëResu…
(
öãΩ
, (*)"SQLITE_NOMEM", 
TCL_STATIC
);

1442  
TCL_OK
;

1444 
	`mem£t
(
p
, 0, (
T˛QuŸaCÆlback
));

1445 
p
->
öãΩ
 = interp;

1446 
	`T˛_In¸RefCou¡
(
pS¸ùt
);

1447 
p
->
pS¸ùt
 =ÖScript;

1448 
xDe°roy
 = 
t˛CÆlbackDe°ru˘‹
;

1449 
xCÆlback
 = 
t˛QuŸaCÆlback
;

1451 
p
 = 0;

1452 
xDe°roy
 = 0;

1453 
xCÆlback
 = 0;

1457 
rc
 = 
	`sqlôe3_quŸa_£t
(
zP©ã∫
, 
iLimô
, 
xCÆlback
, (*)
p
, 
xDe°roy
);

1459 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1460  
TCL_OK
;

1461 
	}
}

1466 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe
(

1467 * 
˛õ¡D©a
,

1468 
T˛_I¡îp
 *
öãΩ
,

1469 
objc
,

1470 
T˛_Obj
 *
CONST
 
objv
[]

1472 c⁄° *
zFûíame
;

1473 
rc
;

1476 if–
objc
!=2 ){

1477 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1478  
TCL_ERROR
;

1480 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1483 
rc
 = 
	`sqlôe3_quŸa_fûe
(
zFûíame
);

1485 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

1486  
TCL_OK
;

1487 
	}
}

1492 
SQLITE_TCLAPI
 
	$ã°_quŸa_dump
(

1493 * 
˛õ¡D©a
,

1494 
T˛_I¡îp
 *
öãΩ
,

1495 
objc
,

1496 
T˛_Obj
 *
CONST
 
objv
[]

1498 
T˛_Obj
 *
pResu…
;

1499 
T˛_Obj
 *
pGroupTîm
;

1500 
T˛_Obj
 *
pFûeTîm
;

1501 
quŸaGroup
 *
pGroup
;

1502 
quŸaFûe
 *
pFûe
;

1504 
pResu…
 = 
	`T˛_NewObj
();

1505 
	`quŸaE¡î
();

1506 
pGroup
=
gQuŸa
.pGroup;ÖGroup;ÖGroupıGroup->
pNext
){

1507 
pGroupTîm
 = 
	`T˛_NewObj
();

1508 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1509 
	`T˛_NewSåögObj
(
pGroup
->
zP©ã∫
, -1));

1510 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1511 
	`T˛_NewWideI¡Obj
(
pGroup
->
iLimô
));

1512 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
,

1513 
	`T˛_NewWideI¡Obj
(
pGroup
->
iSize
));

1514 
pFûe
=
pGroup
->
pFûes
;ÖFûe;ÖFûeıFûe->
pNext
){

1515 
i
;

1516 
zTemp
[1000];

1517 
pFûeTîm
 = 
	`T˛_NewObj
();

1518 
	`sqlôe3_¢¥ötf
((
zTemp
), zTemp, "%s", 
pFûe
->
zFûíame
);

1519 
i
=0; 
zTemp
[i]; i++){ if( zTemp[i]=='\\' ) zTemp[i] = '/'; }

1520 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1521 
	`T˛_NewSåögObj
(
zTemp
, -1));

1522 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1523 
	`T˛_NewWideI¡Obj
(
pFûe
->
iSize
));

1524 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1525 
	`T˛_NewWideI¡Obj
(
pFûe
->
nRef
));

1526 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pFûeTîm
,

1527 
	`T˛_NewWideI¡Obj
(
pFûe
->
dñëeOnClo£
));

1528 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pGroupTîm
, 
pFûeTîm
);

1530 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pResu…
, 
pGroupTîm
);

1532 
	`quŸaLóve
();

1533 
	`T˛_SëObjResu…
(
öãΩ
, 
pResu…
);

1534  
TCL_OK
;

1535 
	}
}

1540 
SQLITE_TCLAPI
 
	$ã°_quŸa_f›í
(

1541 * 
˛õ¡D©a
,

1542 
T˛_I¡îp
 *
öãΩ
,

1543 
objc
,

1544 
T˛_Obj
 *
CONST
 
objv
[]

1546 c⁄° *
zFûíame
;

1547 c⁄° *
zMode
;

1548 
quŸa_FILE
 *
p
;

1549 
zRëu∫
[50];

1552 if–
objc
!=3 ){

1553 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME MODE");

1554  
TCL_ERROR
;

1556 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1557 
zMode
 = 
	`T˛_GëSåög
(
objv
[2]);

1558 
p
 = 
	`sqlôe3_quŸa_f›í
(
zFûíame
, 
zMode
);

1559 
	`sqlôe3_¢¥ötf
((
zRëu∫
), zRëu∫, "%p", 
p
);

1560 
	`T˛_SëResu…
(
öãΩ
, 
zRëu∫
, 
TCL_VOLATILE
);

1561  
TCL_OK
;

1562 
	}
}

1565 *
sqlôe3Te°TextToPå
(const *);

1570 
SQLITE_TCLAPI
 
	$ã°_quŸa_‰ód
(

1571 * 
˛õ¡D©a
,

1572 
T˛_I¡îp
 *
öãΩ
,

1573 
objc
,

1574 
T˛_Obj
 *
CONST
 
objv
[]

1576 
quŸa_FILE
 *
p
;

1577 *
zBuf
;

1578 
sz
;

1579 
nEÀm
;

1580 
size_t
 
gŸ
;

1582 if–
objc
!=4 ){

1583 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE NELEM");

1584  
TCL_ERROR
;

1586 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1587 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
sz
ËË 
TCL_ERROR
;

1588 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nEÀm
ËË 
TCL_ERROR
;

1589 
zBuf
 = (*)
	`sqlôe3_mÆloc
–
sz
*
nEÀm
 + 1 );

1590 if–
zBuf
==0 ){

1591 
	`T˛_SëResu…
(
öãΩ
, "ouào‡mem‹y", 
TCL_STATIC
);

1592  
TCL_ERROR
;

1594 
gŸ
 = 
	`sqlôe3_quŸa_‰ód
(
zBuf
, 
sz
, 
nEÀm
, 
p
);

1595 
zBuf
[
gŸ
*
sz
] = 0;

1596 
	`T˛_SëResu…
(
öãΩ
, 
zBuf
, 
TCL_VOLATILE
);

1597 
	`sqlôe3_‰ì
(
zBuf
);

1598  
TCL_OK
;

1599 
	}
}

1604 
SQLITE_TCLAPI
 
	$ã°_quŸa_fwrôe
(

1605 * 
˛õ¡D©a
,

1606 
T˛_I¡îp
 *
öãΩ
,

1607 
objc
,

1608 
T˛_Obj
 *
CONST
 
objv
[]

1610 
quŸa_FILE
 *
p
;

1611 *
zBuf
;

1612 
sz
;

1613 
nEÀm
;

1614 
size_t
 
gŸ
;

1616 if–
objc
!=5 ){

1617 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE NELEM CONTENT");

1618  
TCL_ERROR
;

1620 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1621 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
sz
ËË 
TCL_ERROR
;

1622 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
nEÀm
ËË 
TCL_ERROR
;

1623 
zBuf
 = 
	`T˛_GëSåög
(
objv
[4]);

1624 
gŸ
 = 
	`sqlôe3_quŸa_fwrôe
(
zBuf
, 
sz
, 
nEÀm
, 
p
);

1625 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
gŸ
));

1626  
TCL_OK
;

1627 
	}
}

1632 
SQLITE_TCLAPI
 
	$ã°_quŸa_f˛o£
(

1633 * 
˛õ¡D©a
,

1634 
T˛_I¡îp
 *
öãΩ
,

1635 
objc
,

1636 
T˛_Obj
 *
CONST
 
objv
[]

1638 
quŸa_FILE
 *
p
;

1639 
rc
;

1641 if–
objc
!=2 ){

1642 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1643  
TCL_ERROR
;

1645 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1646 
rc
 = 
	`sqlôe3_quŸa_f˛o£
(
p
);

1647 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1648  
TCL_OK
;

1649 
	}
}

1654 
SQLITE_TCLAPI
 
	$ã°_quŸa_fÊush
(

1655 * 
˛õ¡D©a
,

1656 
T˛_I¡îp
 *
öãΩ
,

1657 
objc
,

1658 
T˛_Obj
 *
CONST
 
objv
[]

1660 
quŸa_FILE
 *
p
;

1661 
rc
;

1662 
doSync
 = 0;

1664 if–
objc
!=2 && objc!=3 ){

1665 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE ?HARDSYNC?");

1666  
TCL_ERROR
;

1668 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1669 if–
objc
==3 ){

1670 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[2], &
doSync
ËË 
TCL_ERROR
;

1672 
rc
 = 
	`sqlôe3_quŸa_fÊush
(
p
, 
doSync
);

1673 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1674  
TCL_OK
;

1675 
	}
}

1680 
SQLITE_TCLAPI
 
	$ã°_quŸa_f£ek
(

1681 * 
˛õ¡D©a
,

1682 
T˛_I¡îp
 *
öãΩ
,

1683 
objc
,

1684 
T˛_Obj
 *
CONST
 
objv
[]

1686 
quŸa_FILE
 *
p
;

1687 
of°
;

1688 c⁄° *
zWhí˚
;

1689 
whí˚
;

1690 
rc
;

1692 if–
objc
!=4 ){

1693 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE OFFSET WHENCE");

1694  
TCL_ERROR
;

1696 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1697 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
of°
ËË 
TCL_ERROR
;

1698 
zWhí˚
 = 
	`T˛_GëSåög
(
objv
[3]);

1699 if–
	`°rcmp
(
zWhí˚
, "SEEK_SET")==0 ){

1700 
whí˚
 = 
SEEK_SET
;

1701 }if–
	`°rcmp
(
zWhí˚
, "SEEK_CUR")==0 ){

1702 
whí˚
 = 
SEEK_CUR
;

1703 }if–
	`°rcmp
(
zWhí˚
, "SEEK_END")==0 ){

1704 
whí˚
 = 
SEEK_END
;

1706 
	`T˛_AµídResu…
(
öãΩ
,

1708  
TCL_ERROR
;

1710 
rc
 = 
	`sqlôe3_quŸa_f£ek
(
p
, 
of°
, 
whí˚
);

1711 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1712  
TCL_OK
;

1713 
	}
}

1718 
SQLITE_TCLAPI
 
	$ã°_quŸa_ªwöd
(

1719 * 
˛õ¡D©a
,

1720 
T˛_I¡îp
 *
öãΩ
,

1721 
objc
,

1722 
T˛_Obj
 *
CONST
 
objv
[]

1724 
quŸa_FILE
 *
p
;

1725 if–
objc
!=2 ){

1726 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1727  
TCL_ERROR
;

1729 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1730 
	`sqlôe3_quŸa_ªwöd
(
p
);

1731  
TCL_OK
;

1732 
	}
}

1737 
SQLITE_TCLAPI
 
	$ã°_quŸa_·ñl
(

1738 * 
˛õ¡D©a
,

1739 
T˛_I¡îp
 *
öãΩ
,

1740 
objc
,

1741 
T˛_Obj
 *
CONST
 
objv
[]

1743 
quŸa_FILE
 *
p
;

1744 
sqlôe3_öt64
 
x
;

1745 if–
objc
!=2 ){

1746 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1747  
TCL_ERROR
;

1749 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1750 
x
 = 
	`sqlôe3_quŸa_·ñl
(
p
);

1751 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1752  
TCL_OK
;

1753 
	}
}

1758 
SQLITE_TCLAPI
 
	$ã°_quŸa_·runˇã
(

1759 * 
˛õ¡D©a
,

1760 
T˛_I¡îp
 *
öãΩ
,

1761 
objc
,

1762 
T˛_Obj
 *
CONST
 
objv
[]

1764 
quŸa_FILE
 *
p
;

1765 
sqlôe3_öt64
 
x
;

1766 
T˛_WideI¡
 
w
;

1767 
rc
;

1768 if–
objc
!=3 ){

1769 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE SIZE");

1770  
TCL_ERROR
;

1772 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1773 if–
	`T˛_GëWideI¡FromObj
(
öãΩ
, 
objv
[2], &
w
ËË 
TCL_ERROR
;

1774 
x
 = (
sqlôe3_öt64
)
w
;

1775 
rc
 = 
	`sqlôe3_quŸa_·runˇã
(
p
, 
x
);

1776 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1777  
TCL_OK
;

1778 
	}
}

1783 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_size
(

1784 * 
˛õ¡D©a
,

1785 
T˛_I¡îp
 *
öãΩ
,

1786 
objc
,

1787 
T˛_Obj
 *
CONST
 
objv
[]

1789 
quŸa_FILE
 *
p
;

1790 
sqlôe3_öt64
 
x
;

1791 if–
objc
!=2 ){

1792 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1793  
TCL_ERROR
;

1795 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1796 
x
 = 
	`sqlôe3_quŸa_fûe_size
(
p
);

1797 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1798  
TCL_OK
;

1799 
	}
}

1804 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_åuesize
(

1805 * 
˛õ¡D©a
,

1806 
T˛_I¡îp
 *
öãΩ
,

1807 
objc
,

1808 
T˛_Obj
 *
CONST
 
objv
[]

1810 
quŸa_FILE
 *
p
;

1811 
sqlôe3_öt64
 
x
;

1812 if–
objc
!=2 ){

1813 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1814  
TCL_ERROR
;

1816 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1817 
x
 = 
	`sqlôe3_quŸa_fûe_åuesize
(
p
);

1818 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1819  
TCL_OK
;

1820 
	}
}

1825 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_mtime
(

1826 * 
˛õ¡D©a
,

1827 
T˛_I¡îp
 *
öãΩ
,

1828 
objc
,

1829 
T˛_Obj
 *
CONST
 
objv
[]

1831 
quŸa_FILE
 *
p
;

1832 
time_t
 
t
;

1833 if–
objc
!=2 ){

1834 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1835  
TCL_ERROR
;

1837 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1838 
t
 = 0;

1839 
	`sqlôe3_quŸa_fûe_mtime
(
p
, &
t
);

1840 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
t
));

1841  
TCL_OK
;

1842 
	}
}

1848 
SQLITE_TCLAPI
 
	$ã°_quŸa_ªmove
(

1849 * 
˛õ¡D©a
,

1850 
T˛_I¡îp
 *
öãΩ
,

1851 
objc
,

1852 
T˛_Obj
 *
CONST
 
objv
[]

1854 c⁄° *
zFûíame
;

1855 
rc
;

1856 if–
objc
!=2 ){

1857 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "FILENAME");

1858  
TCL_ERROR
;

1860 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[1]);

1861 
rc
 = 
	`sqlôe3_quŸa_ªmove
(
zFûíame
);

1862 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1863  
TCL_OK
;

1864 
	}
}

1872 
SQLITE_TCLAPI
 
	$ã°_quŸa_glob
(

1873 * 
˛õ¡D©a
,

1874 
T˛_I¡îp
 *
öãΩ
,

1875 
objc
,

1876 
T˛_Obj
 *
CONST
 
objv
[]

1878 c⁄° *
zP©ã∫
;

1879 c⁄° *
zText
;

1880 
rc
;

1881 if–
objc
!=3 ){

1882 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "PATTERN TEXT");

1883  
TCL_ERROR
;

1885 
zP©ã∫
 = 
	`T˛_GëSåög
(
objv
[1]);

1886 
zText
 = 
	`T˛_GëSåög
(
objv
[2]);

1887 
rc
 = 
	`quŸaSåglob
(
zP©ã∫
, 
zText
);

1888 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
rc
));

1889  
TCL_OK
;

1890 
	}
}

1898 
SQLITE_TCLAPI
 
	$ã°_quŸa_fûe_avaûabÀ
(

1899 * 
˛õ¡D©a
,

1900 
T˛_I¡îp
 *
öãΩ
,

1901 
objc
,

1902 
T˛_Obj
 *
CONST
 
objv
[]

1904 
quŸa_FILE
 *
p
;

1905 
sqlôe3_öt64
 
x
;

1906 if–
objc
!=2 ){

1907 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1908  
TCL_ERROR
;

1910 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1911 
x
 = 
	`sqlôe3_quŸa_fûe_avaûabÀ
(
p
);

1912 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewWideI¡Obj
(
x
));

1913  
TCL_OK
;

1914 
	}
}

1921 
SQLITE_TCLAPI
 
	$ã°_quŸa_„º‹
(

1922 * 
˛õ¡D©a
,

1923 
T˛_I¡îp
 *
öãΩ
,

1924 
objc
,

1925 
T˛_Obj
 *
CONST
 
objv
[]

1927 
quŸa_FILE
 *
p
;

1928 
x
;

1929 if–
objc
!=2 ){

1930 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "HANDLE");

1931  
TCL_ERROR
;

1933 
p
 = 
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

1934 
x
 = 
	`sqlôe3_quŸa_„º‹
(
p
);

1935 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
x
));

1936  
TCL_OK
;

1937 
	}
}

1944 
	$SqlôequŸa_Inô
(
T˛_I¡îp
 *
öãΩ
){

1946 *
zName
;

1947 
T˛_ObjCmdProc
 *
xProc
;

1948 } 
aCmd
[] = {

1949 { "sqlôe3_quŸa_öôülize", 
ã°_quŸa_öôülize
 },

1950 { "sqlôe3_quŸa_shutdown", 
ã°_quŸa_shutdown
 },

1951 { "sqlôe3_quŸa_£t", 
ã°_quŸa_£t
 },

1952 { "sqlôe3_quŸa_fûe", 
ã°_quŸa_fûe
 },

1953 { "sqlôe3_quŸa_dump", 
ã°_quŸa_dump
 },

1954 { "sqlôe3_quŸa_f›í", 
ã°_quŸa_f›í
 },

1955 { "sqlôe3_quŸa_‰ód", 
ã°_quŸa_‰ód
 },

1956 { "sqlôe3_quŸa_fwrôe", 
ã°_quŸa_fwrôe
 },

1957 { "sqlôe3_quŸa_f˛o£", 
ã°_quŸa_f˛o£
 },

1958 { "sqlôe3_quŸa_fÊush", 
ã°_quŸa_fÊush
 },

1959 { "sqlôe3_quŸa_f£ek", 
ã°_quŸa_f£ek
 },

1960 { "sqlôe3_quŸa_ªwöd", 
ã°_quŸa_ªwöd
 },

1961 { "sqlôe3_quŸa_·ñl", 
ã°_quŸa_·ñl
 },

1962 { "sqlôe3_quŸa_·runˇã", 
ã°_quŸa_·runˇã
 },

1963 { "sqlôe3_quŸa_fûe_size", 
ã°_quŸa_fûe_size
 },

1964 { "sqlôe3_quŸa_fûe_åuesize", 
ã°_quŸa_fûe_åuesize
 },

1965 { "sqlôe3_quŸa_fûe_mtime", 
ã°_quŸa_fûe_mtime
 },

1966 { "sqlôe3_quŸa_ªmove", 
ã°_quŸa_ªmove
 },

1967 { "sqlôe3_quŸa_glob", 
ã°_quŸa_glob
 },

1968 { "sqlôe3_quŸa_fûe_avaûabÀ",
ã°_quŸa_fûe_avaûabÀ
 },

1969 { "sqlôe3_quŸa_„º‹", 
ã°_quŸa_„º‹
 },

1971 
i
;

1973 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

1974 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xProc
, 0, 0);

1977  
TCL_OK
;

1978 
	}
}

	@test_quota.h

29 #i‚de‡
_QUOTA_H_


30 
	~"sqlôe3.h
"

31 
	~<°dio.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/°©.h
>

36 #ifde‡
__˝lu•lus


51 
sqlôe3_quŸa_öôülize
(c⁄° *
zOrigVfsName
, 
makeDeÁu…
);

62 
sqlôe3_quŸa_shutdown
();

116 
sqlôe3_quŸa_£t
(

117 c⁄° *
zP©ã∫
,

118 
sqlôe3_öt64
 
iLimô
,

119 (*
xCÆlback
)(

120 c⁄° *
zFûíame
,

121 
sqlôe3_öt64
 *
piLimô
,

122 
sqlôe3_öt64
 
iSize
,

123 *
pArg


125 *
pArg
,

126 (*
xDe°roy
)(*)

135 
sqlôe3_quŸa_fûe
(c⁄° *
zFûíame
);

145 
quŸa_FILE
 
	tquŸa_FILE
;

151 
quŸa_FILE
 *
sqlôe3_quŸa_f›í
(c⁄° *
zFûíame
, c⁄° *
zMode
);

158 
size_t
 
sqlôe3_quŸa_‰ód
(*, size_t, size_t, 
quŸa_FILE
*);

159 
size_t
 
sqlôe3_quŸa_fwrôe
(c⁄° *, size_t, size_t, 
quŸa_FILE
*);

171 
sqlôe3_quŸa_fÊush
(
quŸa_FILE
*, 
h¨dSync
);

177 
sqlôe3_quŸa_f˛o£
(
quŸa_FILE
*);

183 
sqlôe3_quŸa_f£ek
(
quŸa_FILE
*, , );

184 
sqlôe3_quŸa_ªwöd
(
quŸa_FILE
*);

185 
sqlôe3_quŸa_·ñl
(
quŸa_FILE
*);

192 
sqlôe3_quŸa_„º‹
(
quŸa_FILE
*);

202 
sqlôe3_quŸa_·runˇã
(
quŸa_FILE
*, 
sqlôe3_öt64
 
√wSize
);

208 
sqlôe3_quŸa_fûe_mtime
(
quŸa_FILE
*, 
time_t
 *
pTime
);

221 
sqlôe3_öt64
 
sqlôe3_quŸa_fûe_size
(
quŸa_FILE
*);

234 
sqlôe3_öt64
 
sqlôe3_quŸa_fûe_åuesize
(
quŸa_FILE
*);

242 
sqlôe3_quŸa_fûe_avaûabÀ
(
quŸa_FILE
*);

263 
sqlôe3_quŸa_ªmove
(c⁄° *
zFûíame
);

265 #ifde‡
__˝lu•lus


	@test_rtree.c

16 
	~"sqlôe3.h
"

17 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

18 
	~"sqlôe_t˛.h
"

20 
	~"t˛.h
"

24 
	~"sqlôeI¡.h
"

26 #ifde‡
SQLITE_ENABLE_RTREE


31 
Cú˛e
 
	tCú˛e
;

32 
	sCú˛e
 {

33 
	sBox
 {

34 
	mxmö
;

35 
	mxmax
;

36 
	mymö
;

37 
	mymax
;

38 } 
	maBox
[2];

39 
	m˚¡îx
;

40 
	m˚¡îy
;

41 
	mødius
;

42 
	mmxAªa
;

43 
	meSc‹eTy≥
;

49 
	$cú˛e_dñ
(*
p
){

50 
	`sqlôe3_‰ì
(
p
);

51 
	}
}

56 
	$cú˛e_geom
(

57 
sqlôe3_πªe_geomëry
 *
p
,

58 
nCo‹d
,

59 
sqlôe3_πªe_dbl
 *
aCo‹d
,

60 *
pRes


62 
i
;

63 
Cú˛e
 *
pCú˛e
;

64 
xmö
, 
xmax
;

65 
ymö
, 
ymax
;

67 
xmö
 = 
aCo‹d
[0];

68 
xmax
 = 
aCo‹d
[1];

69 
ymö
 = 
aCo‹d
[2];

70 
ymax
 = 
aCo‹d
[3];

71 
pCú˛e
 = (
Cú˛e
 *)
p
->
pU£r
;

72 if–
pCú˛e
==0 ){

78 if–
nCo‹d
!=4 )  
SQLITE_ERROR
;

83 if–
p
->
nP¨am
!=3 ||Ö->
aP¨am
[2]<0.0 )  
SQLITE_ERROR
;

87 
pCú˛e
 = (
Cú˛e
 *)(
p
->
pU£r
 = 
	`sqlôe3_mÆloc
((Circle)));

88 if–!
pCú˛e
 )  
SQLITE_NOMEM
;

89 
p
->
xDñU£r
 = 
cú˛e_dñ
;

95 
pCú˛e
->
˚¡îx
 = 
p
->
aP¨am
[0];

96 
pCú˛e
->
˚¡îy
 = 
p
->
aP¨am
[1];

97 
pCú˛e
->
ødius
 = 
p
->
aP¨am
[2];

110 
pCú˛e
->
aBox
[0].
xmö
 =ÖCú˛e->
˚¡îx
;

111 
pCú˛e
->
aBox
[0].
xmax
 =ÖCú˛e->
˚¡îx
;

112 
pCú˛e
->
aBox
[0].
ymö
 =ÖCú˛e->
˚¡îy
 +ÖCú˛e->
ødius
;

113 
pCú˛e
->
aBox
[0].
ymax
 =ÖCú˛e->
˚¡îy
 -ÖCú˛e->
ødius
;

114 
pCú˛e
->
aBox
[1].
xmö
 =ÖCú˛e->
˚¡îx
 +ÖCú˛e->
ødius
;

115 
pCú˛e
->
aBox
[1].
xmax
 =ÖCú˛e->
˚¡îx
 -ÖCú˛e->
ødius
;

116 
pCú˛e
->
aBox
[1].
ymö
 =ÖCú˛e->
˚¡îy
;

117 
pCú˛e
->
aBox
[1].
ymax
 =ÖCú˛e->
˚¡îy
;

118 
pCú˛e
->
mxAªa
 = (
xmax
 - 
xmö
)*(
ymax
 - 
ymö
) + 1.0;

125 
i
=0; i<4; i++){

126 
x
 = (
i
&0x01Ë? 
xmax
 : 
xmö
;

127 
y
 = (
i
&0x02Ë? 
ymax
 : 
ymö
;

128 
d2
;

130 
d2
 = (
x
-
pCú˛e
->
˚¡îx
)*(x-pCircle->centerx);

131 
d2
 +(
y
-
pCú˛e
->
˚¡îy
)*(y-pCircle->centery);

132 if–
d2
<(
pCú˛e
->
ødius
*pCircle->radius) ){

133 *
pRes
 = 1;

134  
SQLITE_OK
;

142 
i
=0; i<2; i++){

143 if–
xmö
<=
pCú˛e
->
aBox
[
i
].xmin

144 && 
xmax
>=
pCú˛e
->
aBox
[
i
].xmax

145 && 
ymö
<=
pCú˛e
->
aBox
[
i
].ymin

146 && 
ymax
>=
pCú˛e
->
aBox
[
i
].ymax

148 *
pRes
 = 1;

149  
SQLITE_OK
;

155 *
pRes
 = 0;

156  
SQLITE_OK
;

157 
	}
}

168 
	$cú˛e_quîy_func
(
sqlôe3_πªe_quîy_öfo
 *
p
){

169 
i
;

170 
Cú˛e
 *
pCú˛e
;

171 
xmö
, 
xmax
;

172 
ymö
, 
ymax
;

173 
nWôhö
 = 0;

175 
xmö
 = 
p
->
aCo‹d
[0];

176 
xmax
 = 
p
->
aCo‹d
[1];

177 
ymö
 = 
p
->
aCo‹d
[2];

178 
ymax
 = 
p
->
aCo‹d
[3];

179 
pCú˛e
 = (
Cú˛e
 *)
p
->
pU£r
;

180 if–
pCú˛e
==0 ){

186 if–
p
->
nCo‹d
!=4 )  
SQLITE_ERROR
;

190 if–
p
->
nP¨am
!=4 &&Ö->nP¨am!=1 )  
SQLITE_ERROR
;

194 
pCú˛e
 = (
Cú˛e
 *)(
p
->
pU£r
 = 
	`sqlôe3_mÆloc
((Circle)));

195 if–!
pCú˛e
 )  
SQLITE_NOMEM
;

196 
p
->
xDñU£r
 = 
cú˛e_dñ
;

202 if–
p
->
nP¨am
==4 ){

203 
pCú˛e
->
˚¡îx
 = 
p
->
aP¨am
[0];

204 
pCú˛e
->
˚¡îy
 = 
p
->
aP¨am
[1];

205 
pCú˛e
->
ødius
 = 
p
->
aP¨am
[2];

206 
pCú˛e
->
eSc‹eTy≥
 = ()
p
->
aP¨am
[3];

208 c⁄° *
z
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
p
->
≠SqlP¨am
[0]);

209 
pCú˛e
->
˚¡îx
 = 0.0;

210 
pCú˛e
->
˚¡îy
 = 0.0;

211 
pCú˛e
->
ødius
 = 0.0;

212 
pCú˛e
->
eSc‹eTy≥
 = 0;

213  
z
 && z[0] ){

214 if–
z
[0]=='r' && z[1]==':' ){

215 
pCú˛e
->
ødius
 = 
	`©of
(&
z
[2]);

216 }if–
z
[0]=='x' && z[1]==':' ){

217 
pCú˛e
->
˚¡îx
 = 
	`©of
(&
z
[2]);

218 }if–
z
[0]=='y' && z[1]==':' ){

219 
pCú˛e
->
˚¡îy
 = 
	`©of
(&
z
[2]);

220 }if–
z
[0]=='e' && z[1]==':' ){

221 
pCú˛e
->
eSc‹eTy≥
 = ()
	`©of
(&
z
[2]);

222 }if–
z
[0]==' ' ){

223 
z
++;

226  
z
[0]!=0 && z[0]!=' ' ) z++;

227  
z
[0]==' ' ) z++;

230 if–
pCú˛e
->
ødius
<0.0 ){

231 
	`sqlôe3_‰ì
(
pCú˛e
);

232  
SQLITE_NOMEM
;

246 
pCú˛e
->
aBox
[0].
xmö
 =ÖCú˛e->
˚¡îx
;

247 
pCú˛e
->
aBox
[0].
xmax
 =ÖCú˛e->
˚¡îx
;

248 
pCú˛e
->
aBox
[0].
ymö
 =ÖCú˛e->
˚¡îy
 +ÖCú˛e->
ødius
;

249 
pCú˛e
->
aBox
[0].
ymax
 =ÖCú˛e->
˚¡îy
 -ÖCú˛e->
ødius
;

250 
pCú˛e
->
aBox
[1].
xmö
 =ÖCú˛e->
˚¡îx
 +ÖCú˛e->
ødius
;

251 
pCú˛e
->
aBox
[1].
xmax
 =ÖCú˛e->
˚¡îx
 -ÖCú˛e->
ødius
;

252 
pCú˛e
->
aBox
[1].
ymö
 =ÖCú˛e->
˚¡îy
;

253 
pCú˛e
->
aBox
[1].
ymax
 =ÖCú˛e->
˚¡îy
;

254 
pCú˛e
->
mxAªa
 = 200.0*200.0;

261 
i
=0; i<4; i++){

262 
x
 = (
i
&0x01Ë? 
xmax
 : 
xmö
;

263 
y
 = (
i
&0x02Ë? 
ymax
 : 
ymö
;

264 
d2
;

266 
d2
 = (
x
-
pCú˛e
->
˚¡îx
)*(x-pCircle->centerx);

267 
d2
 +(
y
-
pCú˛e
->
˚¡îy
)*(y-pCircle->centery);

268 if–
d2
<(
pCú˛e
->
ødius
*pCú˛e->ødiusËË
nWôhö
++;

275 if–
nWôhö
==0 ){

276 
i
=0; i<2; i++){

277 if–
xmö
<=
pCú˛e
->
aBox
[
i
].xmin

278 && 
xmax
>=
pCú˛e
->
aBox
[
i
].xmax

279 && 
ymö
<=
pCú˛e
->
aBox
[
i
].ymin

280 && 
ymax
>=
pCú˛e
->
aBox
[
i
].ymax

282 
nWôhö
 = 1;

288 if–
pCú˛e
->
eSc‹eTy≥
==1 ){

290 
p
->
rSc‹e
 =Ö->
iLevñ
;

291 }if–
pCú˛e
->
eSc‹eTy≥
==2 ){

293 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

294 }if–
pCú˛e
->
eSc‹eTy≥
==3 ){

297 if–
p
->
iLevñ
==1 ){

298 
p
->
rSc‹e
 = 1.0 - (
xmax
-
xmö
)*(
ymax
-
ymö
)/
pCú˛e
->
mxAªa
;

299 if–
p
->
rSc‹e
<0.01 )Ö->rScore = 0.01;

301 
p
->
rSc‹e
 = 0.0;

303 }if–
pCú˛e
->
eSc‹eTy≥
==4 ){

305 
p
->
rSc‹e
 =Ö->
iLevñ
;

306 if–
p
->
iRowid
&1 ) 
nWôhö
 = 0;

309 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

310 if–
p
->
iRowid
&1 ) 
nWôhö
 = 0;

312 if–
nWôhö
==0 ){

313 
p
->
eWôhö
 = 
NOT_WITHIN
;

314 }if–
nWôhö
>=4 ){

315 
p
->
eWôhö
 = 
FULLY_WITHIN
;

317 
p
->
eWôhö
 = 
PARTLY_WITHIN
;

319  
SQLITE_OK
;

320 
	}
}

329 
	$bfs_quîy_func
(
sqlôe3_πªe_quîy_öfo
 *
p
){

330 
x0
,
x1
,
y0
,
y1
;

331 
bx0
,
bx1
,
by0
,
by1
;

333 if–
p
->
nP¨am
!=4 )  
SQLITE_ERROR
;

334 
x0
 = 
p
->
aCo‹d
[0];

335 
x1
 = 
p
->
aCo‹d
[1];

336 
y0
 = 
p
->
aCo‹d
[2];

337 
y1
 = 
p
->
aCo‹d
[3];

338 
bx0
 = 
p
->
aP¨am
[0];

339 
bx1
 = 
p
->
aP¨am
[1];

340 
by0
 = 
p
->
aP¨am
[2];

341 
by1
 = 
p
->
aP¨am
[3];

342 
p
->
rSc‹e
 = 100 -Ö->
iLevñ
;

343 if–
p
->
eP¨ítWôhö
==
FULLY_WITHIN
 ){

344 
p
->
eWôhö
 = 
FULLY_WITHIN
;

345 }if–
x0
>=
bx0
 && 
x1
<=
bx1
 && 
y0
>=
by0
 && 
y1
<=
by1
 ){

346 
p
->
eWôhö
 = 
FULLY_WITHIN
;

347 }if–
x1
>=
bx0
 && 
x0
<=
bx1
 && 
y1
>=
by0
 && 
y0
<=
by1
 ){

348 
p
->
eWôhö
 = 
PARTLY_WITHIN
;

350 
p
->
eWôhö
 = 
NOT_WITHIN
;

352  
SQLITE_OK
;

353 
	}
}

359 
	~<as£π.h
>

360 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

361 
	~"sqlôe_t˛.h
"

363 
	~"t˛.h
"

366 
Cube
 
	tCube
;

367 
	sCube
 {

368 
	mx
;

369 
	my
;

370 
	mz
;

371 
	mwidth
;

372 
	mheight
;

373 
	mdïth
;

376 
	$cube_c⁄ãxt_‰ì
(*
p
){

377 
	`sqlôe3_‰ì
(
p
);

378 
	}
}

385 
	ggHîe
 = 42;

396 
	$cube_geom
(

397 
sqlôe3_πªe_geomëry
 *
p
,

398 
nCo‹d
,

399 
sqlôe3_πªe_dbl
 *
aCo‹d
,

400 *
piRes


402 
Cube
 *
pCube
 = (Cubê*)
p
->
pU£r
;

404 
	`as£π
–
p
->
pC⁄ãxt
==(*)&
gHîe
 );

406 if–
pCube
==0 ){

407 if–
p
->
nP¨am
!=6 || 
nCo‹d
!=6

408 || 
p
->
aP¨am
[3]<=0.0 ||Ö->aParam[4]<=0.0 ||Ö->aParam[5]<=0.0

410  
SQLITE_ERROR
;

412 
pCube
 = (
Cube
 *)
	`sqlôe3_mÆloc
((Cube));

413 if–!
pCube
 ){

414  
SQLITE_NOMEM
;

416 
pCube
->
x
 = 
p
->
aP¨am
[0];

417 
pCube
->
y
 = 
p
->
aP¨am
[1];

418 
pCube
->
z
 = 
p
->
aP¨am
[2];

419 
pCube
->
width
 = 
p
->
aP¨am
[3];

420 
pCube
->
height
 = 
p
->
aP¨am
[4];

421 
pCube
->
dïth
 = 
p
->
aP¨am
[5];

423 
p
->
pU£r
 = (*)
pCube
;

424 
p
->
xDñU£r
 = 
cube_c⁄ãxt_‰ì
;

427 
	`as£π
–
nCo‹d
==6 );

428 *
piRes
 = 0;

429 if–
aCo‹d
[0]<=(
pCube
->
x
+pCube->
width
)

430 && 
aCo‹d
[1]>=
pCube
->
x


431 && 
aCo‹d
[2]<=(
pCube
->
y
+pCube->
height
)

432 && 
aCo‹d
[3]>=
pCube
->
y


433 && 
aCo‹d
[4]<=(
pCube
->
z
+pCube->
dïth
)

434 && 
aCo‹d
[5]>=
pCube
->
z


436 *
piRes
 = 1;

439  
SQLITE_OK
;

440 
	}
}

443 
SQLITE_TCLAPI
 
	$ªgi°î_cube_geom
(

444 * 
˛õ¡D©a
,

445 
T˛_I¡îp
 *
öãΩ
,

446 
objc
,

447 
T˛_Obj
 *
CONST
 
objv
[]

449 #i‚de‡
SQLITE_ENABLE_RTREE


450 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

451 
	`UNUSED_PARAMETER
(
öãΩ
);

452 
	`UNUSED_PARAMETER
(
objc
);

453 
	`UNUSED_PARAMETER
(
objv
);

455 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

456 c⁄° *
	`sqlôe3EºName
();

457 
sqlôe3
 *
db
;

458 
rc
;

460 if–
objc
!=2 ){

461 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

462  
TCL_ERROR
;

464 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

465 
rc
 = 
	`sqlôe3_πªe_geomëry_ˇŒback
(
db
, "cube", 
cube_geom
, (*)&
gHîe
);

466 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

468  
TCL_OK
;

469 
	}
}

471 
SQLITE_TCLAPI
 
	$ªgi°î_cú˛e_geom
(

472 * 
˛õ¡D©a
,

473 
T˛_I¡îp
 *
öãΩ
,

474 
objc
,

475 
T˛_Obj
 *
CONST
 
objv
[]

477 #i‚de‡
SQLITE_ENABLE_RTREE


478 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

479 
	`UNUSED_PARAMETER
(
öãΩ
);

480 
	`UNUSED_PARAMETER
(
objc
);

481 
	`UNUSED_PARAMETER
(
objv
);

483 
	`gëDbPoöãr
(
T˛_I¡îp
*, c⁄° *, 
sqlôe3
**);

484 c⁄° *
	`sqlôe3EºName
();

485 
sqlôe3
 *
db
;

486 
rc
;

488 if–
objc
!=2 ){

489 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

490  
TCL_ERROR
;

492 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

493 
rc
 = 
	`sqlôe3_πªe_geomëry_ˇŒback
(
db
, "cú˛e", 
cú˛e_geom
, 0);

494 if–
rc
==
SQLITE_OK
 ){

495 
rc
 = 
	`sqlôe3_πªe_quîy_ˇŒback
(
db
, "Qcircle",

496 
cú˛e_quîy_func
, 0, 0);

498 if–
rc
==
SQLITE_OK
 ){

499 
rc
 = 
	`sqlôe3_πªe_quîy_ˇŒback
(
db
, "breadthfirstsearch",

500 
bfs_quîy_func
, 0, 0);

502 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 
TCL_STATIC
);

504  
TCL_OK
;

505 
	}
}

507 
	$Sqlôëe°πªe_Inô
(
T˛_I¡îp
 *
öãΩ
){

508 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_cube_geom", 
ªgi°î_cube_geom
, 0, 0);

509 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ªgi°î_cú˛e_geom",
ªgi°î_cú˛e_geom
,0,0);

510  
TCL_OK
;

511 
	}
}

	@test_schema.c

21 
	#SCHEMA
 \

31 ")"

	)

37 #ifde‡
SQLITE_TEST


38 
	~"sqlôeI¡.h
"

39 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

40 
	~"sqlôe_t˛.h
"

42 
	~"t˛.h
"

45 
	~"sqlôe3ext.h
"

46 
	gSQLITE_EXTENSION_INIT1


49 
	~<°dlib.h
>

50 
	~<°rög.h
>

51 
	~<as£π.h
>

53 
schema_vèb
 
	tschema_vèb
;

54 
schema_curs‹
 
	tschema_curs‹
;

57 
	sschema_vèb
 {

58 
sqlôe3_vèb
 
	mba£
;

59 
sqlôe3
 *
	mdb
;

63 
	sschema_curs‹
 {

64 
sqlôe3_vèb_curs‹
 
	mba£
;

65 
sqlôe3_°mt
 *
	mpDbLi°
;

66 
sqlôe3_°mt
 *
	mpTabÀLi°
;

67 
sqlôe3_°mt
 *
	mpCﬁumnLi°
;

68 
	mrowid
;

74 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


79 
	$schemaDe°roy
(
sqlôe3_vèb
 *
pVèb
){

80 
	`sqlôe3_‰ì
(
pVèb
);

82 
	}
}

87 
	$schemaCª©e
(

88 
sqlôe3
 *
db
,

89 *
pAux
,

90 
¨gc
, c⁄° *c⁄°*
¨gv
,

91 
sqlôe3_vèb
 **
µVèb
,

92 **
pzEº


94 
rc
 = 
SQLITE_NOMEM
;

95 
schema_vèb
 *
pVèb
 = 
	`sqlôe3_mÆloc
((schema_vtab));

96 if–
pVèb
 ){

97 
	`mem£t
(
pVèb
, 0, (
schema_vèb
));

98 
pVèb
->
db
 = db;

99 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


100 
rc
 = 
	`sqlôe3_de˛¨e_vèb
(
db
, 
SCHEMA
);

103 *
µVèb
 = (
sqlôe3_vèb
 *)
pVèb
;

104  
rc
;

105 
	}
}

110 
	$schemaO≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

111 
rc
 = 
SQLITE_NOMEM
;

112 
schema_curs‹
 *
pCur
;

113 
pCur
 = 
	`sqlôe3_mÆloc
((
schema_curs‹
));

114 if–
pCur
 ){

115 
	`mem£t
(
pCur
, 0, (
schema_curs‹
));

116 *
µCurs‹
 = (
sqlôe3_vèb_curs‹
 *)
pCur
;

117 
rc
 = 
SQLITE_OK
;

119  
rc
;

120 
	}
}

125 
	$schemaClo£
(
sqlôe3_vèb_curs‹
 *
cur
){

126 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

127 
	`sqlôe3_föÆize
(
pCur
->
pDbLi°
);

128 
	`sqlôe3_föÆize
(
pCur
->
pTabÀLi°
);

129 
	`sqlôe3_föÆize
(
pCur
->
pCﬁumnLi°
);

130 
	`sqlôe3_‰ì
(
pCur
);

131  
SQLITE_OK
;

132 
	}
}

137 
	$schemaCﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

138 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

139  
i
 ){

141 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pDbLi°
, 1));

144 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pTabÀLi°
, 0));

147 
	`sqlôe3_ªsu…_vÆue
(
˘x
, 
	`sqlôe3_cﬁumn_vÆue
(
pCur
->
pCﬁumnLi°
, 
i
-2));

150  
SQLITE_OK
;

151 
	}
}

156 
	$schemaRowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

157 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

158 *
pRowid
 = 
pCur
->
rowid
;

159  
SQLITE_OK
;

160 
	}
}

162 
	$föÆize
(
sqlôe3_°mt
 **
µStmt
){

163 
rc
 = 
	`sqlôe3_föÆize
(*
µStmt
);

164 *
µStmt
 = 0;

165  
rc
;

166 
	}
}

168 
	$schemaEof
(
sqlôe3_vèb_curs‹
 *
cur
){

169 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

170  (
pCur
->
pDbLi°
 ? 0 : 1);

171 
	}
}

176 
	$schemaNext
(
sqlôe3_vèb_curs‹
 *
cur
){

177 
rc
 = 
SQLITE_OK
;

178 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
cur
;

179 
schema_vèb
 *
pVèb
 = (schema_vèb *)(
cur
->pVtab);

180 *
zSql
 = 0;

182  !
pCur
->
pCﬁumnLi°
 || 
SQLITE_ROW
!=
	`sqlôe3_°ï
(pCur->pColumnList) ){

183 if–
SQLITE_OK
!=(
rc
 = 
	`föÆize
(&
pCur
->
pCﬁumnLi°
)ËË
√xt_exô
;

185  !
pCur
->
pTabÀLi°
 || 
SQLITE_ROW
!=
	`sqlôe3_°ï
(pCur->pTableList) ){

186 if–
SQLITE_OK
!=(
rc
 = 
	`föÆize
(&
pCur
->
pTabÀLi°
)ËË
√xt_exô
;

188 
	`as£π
(
pCur
->
pDbLi°
);

189  
SQLITE_ROW
!=
	`sqlôe3_°ï
(
pCur
->
pDbLi°
) ){

190 
rc
 = 
	`föÆize
(&
pCur
->
pDbLi°
);

191 
√xt_exô
;

199 if–
	`sqlôe3_cﬁumn_öt
(
pCur
->
pDbLi°
, 0)==1 ){

200 
zSql
 = 
	`sqlôe3_m¥ötf
(

204 
sqlôe3_°mt
 *
pDbLi°
 = 
pCur
->pDbList;

205 
zSql
 = 
	`sqlôe3_m¥ötf
(

207 
	`sqlôe3_cﬁumn_ãxt
(
pDbLi°
, 1)

210 if–!
zSql
 ){

211 
rc
 = 
SQLITE_NOMEM
;

212 
√xt_exô
;

215 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zSql
, -1, &
pCur
->
pTabÀLi°
, 0);

216 
	`sqlôe3_‰ì
(
zSql
);

217 if–
rc
!=
SQLITE_OK
 ) 
√xt_exô
;

224 
zSql
 = 
	`sqlôe3_m¥ötf
("PRAGMA %Q.table_info(%Q)",

225 
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pDbLi°
, 1),

226 
	`sqlôe3_cﬁumn_ãxt
(
pCur
->
pTabÀLi°
, 0)

229 if–!
zSql
 ){

230 
rc
 = 
SQLITE_NOMEM
;

231 
√xt_exô
;

233 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
, 
zSql
, -1, &
pCur
->
pCﬁumnLi°
, 0);

234 
	`sqlôe3_‰ì
(
zSql
);

235 if–
rc
!=
SQLITE_OK
 ) 
√xt_exô
;

237 
pCur
->
rowid
++;

239 
√xt_exô
:

241  
rc
;

242 
	}
}

247 
	$schemaFûãr
(

248 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

249 
idxNum
, c⁄° *
idxSå
,

250 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


252 
rc
;

253 
schema_vèb
 *
pVèb
 = (schema_vèb *)(
pVèbCurs‹
->pVtab);

254 
schema_curs‹
 *
pCur
 = (schema_curs‹ *)
pVèbCurs‹
;

255 
pCur
->
rowid
 = 0;

256 
	`föÆize
(&
pCur
->
pTabÀLi°
);

257 
	`föÆize
(&
pCur
->
pCﬁumnLi°
);

258 
	`föÆize
(&
pCur
->
pDbLi°
);

259 
rc
 = 
	`sqlôe3_¥ï¨e
(
pVèb
->
db
,"PRAGMA d©aba£_li°", -1, &
pCur
->
pDbLi°
, 0);

260  (
rc
==
SQLITE_OK
 ? 
	`schemaNext
(
pVèbCurs‹
) :Ñc);

261 
	}
}

266 
	$schemaBe°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

267  
SQLITE_OK
;

268 
	}
}

274 
sqlôe3_moduÀ
 
	gschemaModuÀ
 = {

276 
schemaCª©e
,

277 
schemaCª©e
,

278 
schemaBe°Index
,

279 
schemaDe°roy
,

280 
schemaDe°roy
,

281 
schemaO≥n
,

282 
schemaClo£
,

283 
schemaFûãr
,

284 
schemaNext
,

285 
schemaEof
,

286 
schemaCﬁumn
,

287 
schemaRowid
,

299 #ifde‡
SQLITE_TEST


304 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

309 
SQLITE_TCLAPI
 
	$ªgi°î_schema_moduÀ
(

310 
Clõ¡D©a
 
˛õ¡D©a
,

311 
T˛_I¡îp
 *
öãΩ
,

312 
objc
,

313 
T˛_Obj
 *
CONST
 
objv
[]

315 
sqlôe3
 *
db
;

316 if–
objc
!=2 ){

317 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

318  
TCL_ERROR
;

320 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

321 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


322 
	`sqlôe3_¸óã_moduÀ
(
db
, "schema", &
schemaModuÀ
, 0);

324  
TCL_OK
;

325 
	}
}

330 
	$Sqlôëe°schema_Inô
(
T˛_I¡îp
 *
öãΩ
){

332 *
zName
;

333 
T˛_ObjCmdProc
 *
xProc
;

334 *
˛õ¡D©a
;

335 } 
aObjCmd
[] = {

336 { "ªgi°î_schema_moduÀ", 
ªgi°î_schema_moduÀ
, 0 },

338 
i
;

339 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

340 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

341 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

343  
TCL_OK
;

344 
	}
}

351 #ifde‡
_WIN32


352 
	$__de˛•ec
(
dŒexp‹t
)

354 
	$sqlôe3_schema_öô
(

355 
sqlôe3
 *
db
,

356 **
pzEºMsg
,

357 c⁄° 
sqlôe3_≠i_routöes
 *
pApi


359 
	`SQLITE_EXTENSION_INIT2
(
pApi
);

360 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


361 
	`sqlôe3_¸óã_moduÀ
(
db
, "schema", &
schemaModuÀ
, 0);

364 
	}
}

	@test_server.c

202 
	~"sqlôeI¡.h
"

208 #i‡
deföed
(
SQLITE_SERVER
Ë&& !deföed(
SQLITE_OMIT_SHARED_CACHE
)

209 #i‡
SQLITE_OS_UNIX
 && 
SQLITE_THREADSAFE


214 
	~<±hªad.h
>

215 
	~"sqlôe3.h
"

221 
SqlMesßge
 
	tSqlMesßge
;

222 
	sSqlMesßge
 {

223 
	m›
;

224 
sqlôe3
 *
	mpDb
;

225 
sqlôe3_°mt
 *
	mpStmt
;

226 
	mîrCode
;

227 c⁄° *
	mzIn
;

228 
	mnByã
;

229 c⁄° *
	mzOut
;

230 
SqlMesßge
 *
	mpNext
;

231 
SqlMesßge
 *
	mpPªv
;

232 
±hªad_muãx_t
 
	m˛õ¡Muãx
;

233 
±hªad_c⁄d_t
 
	m˛õ¡Wakeup
;

239 
	#MSG_O≥n
 1

	)

240 
	#MSG_Pª∑ª
 2

	)

241 
	#MSG_Sãp
 3

	)

242 
	#MSG_Re£t
 4

	)

243 
	#MSG_FöÆize
 5

	)

244 
	#MSG_Clo£
 6

	)

245 
	#MSG_D⁄e
 7

	)

252 
	sSîvîSèã
 {

253 
±hªad_muãx_t
 
	mqueueMuãx
;

254 
±hªad_muãx_t
 
	m£rvîMuãx
;

255 
±hªad_c⁄d_t
 
	m£rvîWakeup
;

256 vﬁ©ûê
	m£rvîHÆt
;

257 
SqlMesßge
 *
	mpQueueHód
;

258 
SqlMesßge
 *
	mpQueueTaû
;

259 } 
	gg
 = {

260 
PTHREAD_MUTEX_INITIALIZER
,

261 
PTHREAD_MUTEX_INITIALIZER
,

262 
PTHREAD_COND_INITIALIZER
,

272 
	$£ndToSîvî
(
SqlMesßge
 *
pMsg
){

275 
	`±hªad_muãx_öô
(&
pMsg
->
˛õ¡Muãx
, 0);

276 
	`±hªad_c⁄d_öô
(&
pMsg
->
˛õ¡Wakeup
, 0);

280 
	`±hªad_muãx_lock
(&
g
.
queueMuãx
);

281 
pMsg
->
pNext
 = 
g
.
pQueueHód
;

282 if–
g
.
pQueueHód
==0 ){

283 
g
.
pQueueTaû
 = 
pMsg
;

285 
g
.
pQueueHód
->
pPªv
 = 
pMsg
;

287 
pMsg
->
pPªv
 = 0;

288 
g
.
pQueueHód
 = 
pMsg
;

289 
	`±hªad_muãx_u∆ock
(&
g
.
queueMuãx
);

294 
	`±hªad_muãx_lock
(&
pMsg
->
˛õ¡Muãx
);

295 
	`±hªad_c⁄d_sig«l
(&
g
.
£rvîWakeup
);

296  
pMsg
->
›
!=
MSG_D⁄e
 ){

297 
	`±hªad_c⁄d_waô
(&
pMsg
->
˛õ¡Wakeup
, &pMsg->
˛õ¡Muãx
);

299 
	`±hªad_muãx_u∆ock
(&
pMsg
->
˛õ¡Muãx
);

303 
	`±hªad_muãx_de°roy
(&
pMsg
->
˛õ¡Muãx
);

304 
	`±hªad_c⁄d_de°roy
(&
pMsg
->
˛õ¡Wakeup
);

305 
	}
}

332 
	$sqlôe3_˛õ¡_›í
(c⁄° *
zD©aba£Name
, 
sqlôe3
 **
µDb
){

333 
SqlMesßge
 
msg
;

334 
msg
.
›
 = 
MSG_O≥n
;

335 
msg
.
zIn
 = 
zD©aba£Name
;

336 
	`£ndToSîvî
(&
msg
);

337 *
µDb
 = 
msg
.
pDb
;

338  
msg
.
îrCode
;

339 
	}
}

340 
	$sqlôe3_˛õ¡_¥ï¨e
(

341 
sqlôe3
 *
pDb
,

342 c⁄° *
zSql
,

343 
nByã
,

344 
sqlôe3_°mt
 **
µStmt
,

345 c⁄° **
pzTaû


347 
SqlMesßge
 
msg
;

348 
msg
.
›
 = 
MSG_Pª∑ª
;

349 
msg
.
pDb
 =ÖDb;

350 
msg
.
zIn
 = 
zSql
;

351 
msg
.
nByã
 =ÇByte;

352 
	`£ndToSîvî
(&
msg
);

353 *
µStmt
 = 
msg
.
pStmt
;

354 if–
pzTaû
 ) *pzTaû = 
msg
.
zOut
;

355  
msg
.
îrCode
;

356 
	}
}

357 
	$sqlôe3_˛õ¡_°ï
(
sqlôe3_°mt
 *
pStmt
){

358 
SqlMesßge
 
msg
;

359 
msg
.
›
 = 
MSG_Sãp
;

360 
msg
.
pStmt
 =ÖStmt;

361 
	`£ndToSîvî
(&
msg
);

362  
msg
.
îrCode
;

363 
	}
}

364 
	$sqlôe3_˛õ¡_ª£t
(
sqlôe3_°mt
 *
pStmt
){

365 
SqlMesßge
 
msg
;

366 
msg
.
›
 = 
MSG_Re£t
;

367 
msg
.
pStmt
 =ÖStmt;

368 
	`£ndToSîvî
(&
msg
);

369  
msg
.
îrCode
;

370 
	}
}

371 
	$sqlôe3_˛õ¡_föÆize
(
sqlôe3_°mt
 *
pStmt
){

372 
SqlMesßge
 
msg
;

373 
msg
.
›
 = 
MSG_FöÆize
;

374 
msg
.
pStmt
 =ÖStmt;

375 
	`£ndToSîvî
(&
msg
);

376  
msg
.
îrCode
;

377 
	}
}

378 
	$sqlôe3_˛õ¡_˛o£
(
sqlôe3
 *
pDb
){

379 
SqlMesßge
 
msg
;

380 
msg
.
›
 = 
MSG_Clo£
;

381 
msg
.
pDb
 =ÖDb;

382 
	`£ndToSîvî
(&
msg
);

383  
msg
.
îrCode
;

384 
	}
}

393 *
	$sqlôe3_£rvî
(*
NŸU£d
){

394 if–
	`±hªad_muãx_åylock
(&
g
.
£rvîMuãx
) ){

397 
	`sqlôe3_íabÀ_sh¨ed_ˇche
(1);

398  !
g
.
£rvîHÆt
 ){

399 
SqlMesßge
 *
pMsg
;

403 
	`±hªad_muãx_lock
(&
g
.
queueMuãx
);

404  
g
.
pQueueTaû
==0 && g.
£rvîHÆt
==0 ){

405 
	`±hªad_c⁄d_waô
(&
g
.
£rvîWakeup
, &g.
queueMuãx
);

407 
pMsg
 = 
g
.
pQueueTaû
;

408 if–
pMsg
 ){

409 if–
pMsg
->
pPªv
 ){

410 
pMsg
->
pPªv
->
pNext
 = 0;

412 
g
.
pQueueHód
 = 0;

414 
g
.
pQueueTaû
 = 
pMsg
->
pPªv
;

416 
	`±hªad_muãx_u∆ock
(&
g
.
queueMuãx
);

417 if–
pMsg
==0 ) ;

421 
	`±hªad_muãx_lock
(&
pMsg
->
˛õ¡Muãx
);

422  
pMsg
->
›
 ){

423 
MSG_O≥n
: {

424 
pMsg
->
îrCode
 = 
	`sqlôe3_›í
’Msg->
zIn
, &pMsg->
pDb
);

427 
MSG_Pª∑ª
: {

428 
pMsg
->
îrCode
 = 
	`sqlôe3_¥ï¨e
’Msg->
pDb
,ÖMsg->
zIn
,ÖMsg->
nByã
,

429 &
pMsg
->
pStmt
, &pMsg->
zOut
);

432 
MSG_Sãp
: {

433 
pMsg
->
îrCode
 = 
	`sqlôe3_°ï
’Msg->
pStmt
);

436 
MSG_Re£t
: {

437 
pMsg
->
îrCode
 = 
	`sqlôe3_ª£t
’Msg->
pStmt
);

440 
MSG_FöÆize
: {

441 
pMsg
->
îrCode
 = 
	`sqlôe3_föÆize
’Msg->
pStmt
);

444 
MSG_Clo£
: {

445 
pMsg
->
îrCode
 = 
	`sqlôe3_˛o£
’Msg->
pDb
);

452 
pMsg
->
›
 = 
MSG_D⁄e
;

453 
	`±hªad_muãx_u∆ock
(&
pMsg
->
˛õ¡Muãx
);

454 
	`±hªad_c⁄d_sig«l
(&
pMsg
->
˛õ¡Wakeup
);

456 
	`±hªad_muãx_u∆ock
(&
g
.
£rvîMuãx
);

458 
	}
}

465 
	$sqlôe3_£rvî_°¨t
(){

466 
±hªad_t
 
x
;

467 
rc
;

468 
g
.
£rvîHÆt
 = 0;

469 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
sqlôe3_£rvî
, 0);

470 if–
rc
==0 ){

471 
	`±hªad_dëach
(
x
);

473 
	}
}

480 *
	$£rvîWøµî
(*
≤De¸
){

481 *
p
 = 
	`sqlôe3_£rvî
(0);

482 (*(*)
≤De¸
)--;

483  
p
;

484 
	}
}

491 
	$sqlôe3_£rvî_°¨t2
(*
≤De¸
){

492 
±hªad_t
 
x
;

493 
rc
;

494 
g
.
£rvîHÆt
 = 0;

495 
rc
 = 
	`±hªad_¸óã
(&
x
, 0, 
£rvîWøµî
, (*)
≤De¸
);

496 if–
rc
==0 ){

497 
	`±hªad_dëach
(
x
);

499 
	}
}

508 
	$sqlôe3_£rvî_°›
(){

509 
g
.
£rvîHÆt
 = 1;

510 
	`±hªad_c⁄d_brﬂdˇ°
(&
g
.
£rvîWakeup
);

511 
	`±hªad_muãx_lock
(&
g
.
£rvîMuãx
);

512 
	`±hªad_muãx_u∆ock
(&
g
.
£rvîMuãx
);

513 
	}
}

	@test_sqllog.c

76 #i‚de‡
_SQLITE3_H_


77 
	~"sqlôe3.h
"

79 
	~<°dio.h
>

80 
	~<°dlib.h
>

81 
	~<°rög.h
>

82 
	~<as£π.h
>

84 
	~<sys/ty≥s.h
>

85 
	~<uni°d.h
>

86 
	$gëPro˚ssId
(){

87 #i‡
SQLITE_OS_WIN


88  ()
	`_gëpid
();

90  ()
	`gëpid
();

92 
	}
}

95 
	#ENVIRONMENT_VARIABLE1_NAME
 "SQLITE_SQLLOG_DIR"

	)

96 
	#ENVIRONMENT_VARIABLE2_NAME
 "SQLITE_SQLLOG_REUSE_FILES"

	)

97 
	#ENVIRONMENT_VARIABLE3_NAME
 "SQLITE_SQLLOG_CONDITIONAL"

	)

100 
	#SQLLOG_NAMESZ
 512

	)

106 
	#MAX_CONNECTIONS
 256

	)

111 
	sSLC⁄n
 {

112 
	misEº
;

113 
sqlôe3
 *
	mdb
;

114 
	miLog
;

115 
FILE
 *
	mfd
;

120 
	sSLGlobÆ
 {

122 
sqlôe3_muãx
 *
	mmuãx
;

123 
	mnC⁄n
;

126 
	mbC⁄dôi⁄Æ
;

127 
	mbReu£
;

128 
	mzPªfix
[
SQLLOG_NAMESZ
];

129 
	mzIdx
[
SQLLOG_NAMESZ
];

130 
	miNextLog
;

131 
	miNextDb
;

132 
	mbRec
;

133 
	miClock
;

134 
SLC⁄n
 
	maC⁄n
[
MAX_CONNECTIONS
];

135 } 
	gsqŒogglobÆ
;

140 
	$sqŒog_is•a˚
(
c
){

141  (
c
==' ' || c=='\t' || c=='\n' || c=='\v' || c=='\f' || c=='\r');

142 
	}
}

151 
	$sqŒogTokíize
(c⁄° *
z
, c⁄° **
pz
, *
≤
){

152 c⁄° *
p
 = 
z
;

153 
n
;

156  
	`sqŒog_is•a˚
(*
p
) ){

157 
p
++;

161 *
pz
 = 
p
;

162 
n
 = 0;

163  (
p
[
n
]>='a' &&Ö[n]<='z') || (p[n]>='A' &&Ö[n]<='Z') )Ç++;

164 *
≤
 = 
n
;

165 
	}
}

175 *
	$sqŒogFödFûe
(c⁄° *
zFûe
){

176 *
zRë
 = 0;

177 
FILE
 *
fd
 = 0;

180 
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "r");

181 if–
fd
==0 ){

182 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogFindFile():Érror in fopen()");

189  
	`„of
(
fd
)==0 ){

190 
zLöe
[
SQLLOG_NAMESZ
*2+5];

191 if–
	`fgës
(
zLöe
, (zLöe), 
fd
) ){

192 
n
;

193 *
z
;

195 
zLöe
[(zLine)-1] = '\0';

196 
z
 = 
zLöe
;

197  *
z
>='0' && *z<='9' ) z++;

198  *
z
==' ' ) z++;

200 
n
 = 
	`°æí
(
z
);

201  
n
>0 && 
	`sqŒog_is•a˚
(
z
[n-1]) )Ç--;

203 if–
n
==
	`°æí
(
zFûe
Ë&& 0==
	`memcmp
(zFûe, 
z
,Ç) ){

204 
zBuf
[16];

205 
	`mem£t
(
zBuf
, 0, (zBuf));

206 
z
 = 
zLöe
;

207  *
z
>='0' && *z<='9' ){

208 
zBuf
[
z
-
zLöe
] = *z;

209 
z
++;

211 
zRë
 = 
	`sqlôe3_m¥ötf
("%s_%s.db", 
sqŒogglobÆ
.
zPªfix
, 
zBuf
);

217 if–
	`„º‹
(
fd
) ){

218 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogFindFile():ÉrrorÑeading index file");

221 
	`f˛o£
(
fd
);

222  
zRë
;

223 
	}
}

225 
	$sqŒogFödAâached
(

226 
sqlôe3
 *
db
,

227 c⁄° *
zSórch
,

228 *
zName
,

229 *
zFûe


231 
sqlôe3_°mt
 *
pStmt
;

232 
rc
;

237 
	`as£π
–
sqŒogglobÆ
.
bRec
==0 );

238 
sqŒogglobÆ
.
bRec
 = 1;

239 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, "PRAGMA d©aba£_li°", -1, &
pStmt
, 0);

240 if–
rc
==
SQLITE_OK
 ){

241  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
) ){

242 c⁄° *
zVÆ1
; 
nVÆ1
;

243 c⁄° *
zVÆ2
; 
nVÆ2
;

245 
zVÆ1
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 1);

246 
nVÆ1
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 1);

247 if–
zName
 ){

248 
	`mem˝y
(
zName
, 
zVÆ1
, 
nVÆ1
+1);

251 
zVÆ2
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 2);

252 
nVÆ2
 = 
	`sqlôe3_cﬁumn_byãs
(
pStmt
, 2);

253 
	`mem˝y
(
zFûe
, 
zVÆ2
, 
nVÆ2
+1);

255 if–
zSórch
 && 
	`°æí
(zSórch)==
nVÆ1


256 && 0==
	`sqlôe3_°∫icmp
(
zSórch
, 
zVÆ1
, 
nVÆ1
)

261 
rc
 = 
	`sqlôe3_föÆize
(
pStmt
);

263 
sqŒogglobÆ
.
bRec
 = 0;

265 if–
rc
!=
SQLITE_OK
 ){

266 
	`sqlôe3_log
(
rc
, "sqllogFindAttached():Érror in \"PRAGMA database_list\"");

268  
rc
;

269 
	}
}

291 
	$sqŒogC›ydb
(
SLC⁄n
 *
p
, c⁄° *
zSórch
, 
bLog
){

292 
zName
[
SQLLOG_NAMESZ
];

293 
zFûe
[
SQLLOG_NAMESZ
];

294 *
zFªe
;

295 *
zInô
 = 0;

296 
rc
;

298 
rc
 = 
	`sqŒogFödAâached
(
p
->
db
, 
zSórch
, 
zName
, 
zFûe
);

299 if–
rc
!=
SQLITE_OK
 ) ;

301 if–
zFûe
[0]=='\0' ){

302 
zInô
 = 
	`sqlôe3_m¥ötf
("");

304 if–
sqŒogglobÆ
.
bReu£
 ){

305 
zInô
 = 
	`sqŒogFödFûe
(
zFûe
);

307 
zInô
 = 0;

309 if–
zInô
==0 ){

310 
rc
;

311 
sqlôe3
 *
c›y
 = 0;

312 
iDb
;

315 
iDb
 = 
sqŒogglobÆ
.
iNextDb
++;

316 
zInô
 = 
	`sqlôe3_m¥ötf
("%s_%d.db", 
sqŒogglobÆ
.
zPªfix
, 
iDb
);

319 
	`as£π
–
sqŒogglobÆ
.
bRec
==0 );

320 
sqŒogglobÆ
.
bRec
 = 1;

321 
rc
 = 
	`sqlôe3_›í
(
zInô
, &
c›y
);

322 if–
rc
==
SQLITE_OK
 ){

323 
sqlôe3_backup
 *
pBak
;

324 
	`sqlôe3_exec
(
c›y
, "PRAGMA synchronous = 0", 0, 0, 0);

325 
pBak
 = 
	`sqlôe3_backup_öô
(
c›y
, "maö", 
p
->
db
, 
zName
);

326 if–
pBak
 ){

327 
	`sqlôe3_backup_°ï
(
pBak
, -1);

328 
rc
 = 
	`sqlôe3_backup_föish
(
pBak
);

330 
rc
 = 
	`sqlôe3_îrcode
(
c›y
);

332 
	`sqlôe3_˛o£
(
c›y
);

334 
sqŒogglobÆ
.
bRec
 = 0;

336 if–
rc
==
SQLITE_OK
 ){

338 
FILE
 *
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "a");

339 if–
fd
 ){

340 
	`Ârötf
(
fd
, "%d %s\n", 
iDb
, 
zFûe
);

341 
	`f˛o£
(
fd
);

344 
	`sqlôe3_log
(
rc
, "sqllogCopydb():Érror backing up database");

349 if–
bLog
 ){

350 
zFªe
 = 
	`sqlôe3_m¥ötf
("ATTACH '%q' AS '%q'; -- clock=%d\n",

351 
zInô
, 
zName
, 
sqŒogglobÆ
.
iClock
++

354 
zFªe
 = 
	`sqlôe3_m¥ötf
("-- Maö d©aba£ i†'%q'\n", 
zInô
);

356 
	`Ârötf
(
p
->
fd
, "%s", 
zFªe
);

357 
	`sqlôe3_‰ì
(
zFªe
);

359 
	`sqlôe3_‰ì
(
zInô
);

360 
	}
}

367 
	$sqŒogO≥∆og
(
SLC⁄n
 *
p
){

369 if–
p
->
fd
==0 ){

370 *
zLog
;

374 if–
sqŒogglobÆ
.
zPªfix
[0]==0 ){

375 
FILE
 *
fd
;

376 *
zV¨
 = 
	`gëív
(
ENVIRONMENT_VARIABLE1_NAME
);

377 if–
zV¨
==0 || 
	`°æí
(zV¨)+10>=((
sqŒogglobÆ
.
zPªfix
)) ) ;

378 
	`sqlôe3_¢¥ötf
((
sqŒogglobÆ
.
zPªfix
), sqllogglobal.zPrefix,

379 "%s/sqŒog_%d", 
zV¨
, 
	`gëPro˚ssId
());

380 
	`sqlôe3_¢¥ötf
((
sqŒogglobÆ
.
zIdx
), sqllogglobal.zIdx,

381 "%s.idx", 
sqŒogglobÆ
.
zPªfix
);

382 if–
	`gëív
(
ENVIRONMENT_VARIABLE2_NAME
) ){

383 
sqŒogglobÆ
.
bReu£
 = 
	`©oi
(
	`gëív
(
ENVIRONMENT_VARIABLE2_NAME
));

385 
fd
 = 
	`f›í
(
sqŒogglobÆ
.
zIdx
, "w");

386 if–
fd
 ) 
	`f˛o£
(fd);

390 
zLog
 = 
	`sqlôe3_m¥ötf
("%s_%d.sql", 
sqŒogglobÆ
.
zPªfix
, 
p
->
iLog
);

391 
p
->
fd
 = 
	`f›í
(
zLog
, "w");

392 
	`sqlôe3_‰ì
(
zLog
);

393 if–
p
->
fd
==0 ){

394 
	`sqlôe3_log
(
SQLITE_IOERR
, "sqllogOpenlog(): FailedÅo openÜog file");

397 
	}
}

404 
	$ã°SqŒogStmt
(
SLC⁄n
 *
p
, c⁄° *
zSql
){

405 c⁄° *
zFú°
;

406 
nFú°
;

408 
	`sqŒogTokíize
(
zSql
, &
zFú°
, &
nFú°
);

409 if–
nFú°
!=6 || 0!=
	`sqlôe3_°∫icmp
("ATTACH", 
zFú°
, 6) ){

411 
	`Ârötf
(
p
->
fd
, "%s; -- clock=%d\n", 
zSql
, 
sqŒogglobÆ
.
iClock
++);

414 
	`sqŒogC›ydb
(
p
, 0, 1);

416 
	}
}

426 
	$sqŒogTø˚Db
(
sqlôe3
 *
db
){

427 
bRë
 = 1;

428 if–
sqŒogglobÆ
.
bC⁄dôi⁄Æ
 ){

429 
zFûe
[
SQLLOG_NAMESZ
];

430 
rc
 = 
	`sqŒogFödAâached
(
db
, "maö", 0, 
zFûe
);

431 if–
rc
==
SQLITE_OK
 ){

432 
nFûe
 = 
	`°æí
(
zFûe
);

433 if–(
SQLLOG_NAMESZ
-
nFûe
)<8 ){

434 
	`sqlôe3_log
(
SQLITE_IOERR
,

435 "sqŒogTø˚Db(): d©aba£Çamêtoÿl⁄g (%d byãs)", 
nFûe


437 
bRë
 = 0;

439 
	`mem˝y
(&
zFûe
[
nFûe
], "-sqllog", 8);

440 
bRë
 = !
	`ac˚ss
(
zFûe
, 
F_OK
);

444  
bRë
;

445 
	}
}

468 
	$ã°SqŒog
(*
pCtx
, 
sqlôe3
 *
db
, c⁄° *
zSql
, 
eTy≥
){

469 
SLC⁄n
 *
p
 = 0;

470 
sqlôe3_muãx
 *
ma°î
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_STATIC_MASTER
);

472 
	`as£π
–
eTy≥
==0 ||ÉType==1 ||ÉType==2 );

473 
	`as£π
–(
eTy≥
==2)==(
zSql
==0) );

476 if–
eTy≥
==0 ){

477 
	`sqlôe3_muãx_íãr
(
ma°î
);

478 if–
sqŒogglobÆ
.
muãx
==0 ){

479 
sqŒogglobÆ
.
muãx
 = 
	`sqlôe3_muãx_Æloc
(
SQLITE_MUTEX_RECURSIVE
);

481 
	`sqlôe3_muãx_Àave
(
ma°î
);

483 
	`sqlôe3_muãx_íãr
(
sqŒogglobÆ
.
muãx
);

484 if–
sqŒogglobÆ
.
bRec
==0 && 
	`sqŒogTø˚Db
(
db
) ){

486 
	`sqlôe3_muãx_íãr
(
ma°î
);

487 
p
 = &
sqŒogglobÆ
.
aC⁄n
[sqŒogglobÆ.
nC⁄n
++];

488 
p
->
fd
 = 0;

489 
p
->
db
 = db;

490 
p
->
iLog
 = 
sqŒogglobÆ
.
iNextLog
++;

491 
	`sqlôe3_muãx_Àave
(
ma°î
);

494 
	`sqŒogO≥∆og
(
p
);

495 if–
p
->
fd
 ) 
	`sqŒogC›ydb
(p, "main", 0);

497 
	`sqlôe3_muãx_Àave
(
sqŒogglobÆ
.
muãx
);

502 
i
;

503 
i
=0; i<
sqŒogglobÆ
.
nC⁄n
; i++){

504 
p
 = &
sqŒogglobÆ
.
aC⁄n
[
i
];

505 if–
p
->
db
==db ) ;

509 if–
eTy≥
==2 ){

510 
	`sqlôe3_muãx_íãr
(
ma°î
);

511 if–
i
<
sqŒogglobÆ
.
nC⁄n
 ){

512 if–
p
->
fd
 ) 
	`f˛o£
(p->fd);

513 
p
->
db
 = 0;

514 
p
->
fd
 = 0;

515 
sqŒogglobÆ
.
nC⁄n
--;

518 if–
sqŒogglobÆ
.
nC⁄n
==0 ){

519 
	`sqlôe3_muãx_‰ì
(
sqŒogglobÆ
.
muãx
);

520 
sqŒogglobÆ
.
muãx
 = 0;

521 }if–
i
<
sqŒogglobÆ
.
nC⁄n
 ){

522 
nShi·
 = &
sqŒogglobÆ
.
aC⁄n
[sqŒogglobÆ.
nC⁄n
] - 
p
;

523 if–
nShi·
>0 ){

524 
	`memmove
(
p
, &p[1], 
nShi·
*(
SLC⁄n
));

527 
	`sqlôe3_muãx_Àave
(
ma°î
);

530 }if–
i
<
sqŒogglobÆ
.
nC⁄n
 && 
p
->
fd
 ){

531 
	`sqlôe3_muãx_íãr
(
sqŒogglobÆ
.
muãx
);

532 if–
sqŒogglobÆ
.
bRec
==0 ){

533 
	`ã°SqŒogStmt
(
p
, 
zSql
);

535 
	`sqlôe3_muãx_Àave
(
sqŒogglobÆ
.
muãx
);

538 
	}
}

546 
	$sqlôe3_öô_sqŒog
(){

547 if–
	`gëív
(
ENVIRONMENT_VARIABLE1_NAME
) ){

548 if–
SQLITE_OK
==
	`sqlôe3_c⁄fig
(
SQLITE_CONFIG_SQLLOG
, 
ã°SqŒog
, 0) ){

549 
	`mem£t
(&
sqŒogglobÆ
, 0, (sqllogglobal));

550 
sqŒogglobÆ
.
bReu£
 = 1;

551 if–
	`gëív
(
ENVIRONMENT_VARIABLE3_NAME
) ){

552 
sqŒogglobÆ
.
bC⁄dôi⁄Æ
 = 1;

556 
	}
}

	@test_superlock.c

21 
	~"sqlôe3.h
"

22 
	~<°rög.h
>

23 
	~<as£π.h
>

29 
	sSu≥æockBusy
 {

30 (*
	mxBusy
)(*,);

31 *
	mpBusyArg
;

32 
	mnBusy
;

34 
Su≥æockBusy
 
	tSu≥æockBusy
;

41 
	sSu≥æock
 {

42 
sqlôe3
 *
	mdb
;

43 
	mbWÆ
;

45 
Su≥æock
 
	tSu≥æock
;

52 
	$su≥æockBusyH™dÀr
(*
pCtx
, 
UNUSED
){

53 
Su≥æockBusy
 *
pBusy
 = (Su≥æockBusy *)
pCtx
;

54 if–
pBusy
->
xBusy
==0 )  0;

55  
pBusy
->
	`xBusy
’Busy->
pBusyArg
,ÖBusy->
nBusy
++);

56 
	}
}

67 
	$su≥æockIsWÆ
(
Su≥æock
 *
pLock
){

68 
rc
;

69 
sqlôe3_°mt
 *
pStmt
;

71 
rc
 = 
	`sqlôe3_¥ï¨e
(
pLock
->
db
, "PRAGMA maö.jou∫Æ_mode", -1, &
pStmt
, 0);

72 if–
rc
!=
SQLITE_OK
 ) Ñc;

74 
pLock
->
bWÆ
 = 0;

75 if–
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
) ){

76 c⁄° *
zMode
 = (c⁄° *)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0);

77 if–
zMode
 && 
	`°æí
(zMode)==3 && 
	`sqlôe3_°∫icmp
("wal", zMode, 3)==0 ){

78 
pLock
->
bWÆ
 = 1;

82  
	`sqlôe3_föÆize
(
pStmt
);

83 
	}
}

91 
	$su≥æockShmLock
(

92 
sqlôe3_fûe
 *
fd
,

93 
idx
,

94 
nByã
,

95 
Su≥æockBusy
 *
pBusy


97 
rc
;

98 (*
xShmLock
)(
sqlôe3_fûe
*, , , Ë
fd
->
pMëhods
->xShmLock;

100 
rc
 = 
	`xShmLock
(
fd
, 
idx
, 
nByã
, 
SQLITE_SHM_LOCK
|
SQLITE_SHM_EXCLUSIVE
);

101 } 
rc
==
SQLITE_BUSY
 && 
	`su≥æockBusyH™dÀr
((*)
pBusy
, 0) );

102  
rc
;

103 
	}
}

109 
	$su≥æockWÆLock
(

110 
sqlôe3
 *
db
,

111 
Su≥æockBusy
 *
pBusy


113 
rc
;

114 
sqlôe3_fûe
 *
fd
 = 0;

115 vﬁ©ûê*
p
 = 0;

118 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, "maö", 
SQLITE_FCNTL_FILE_POINTER
, (*)&
fd
);

119 if–
rc
!=
SQLITE_OK
 ) Ñc;

124 
rc
 = 
	`su≥æockShmLock
(
fd
, 2, 1, 
pBusy
);

125 if–
rc
!=
SQLITE_OK
 ) Ñc;

134 
rc
 = 
fd
->
pMëhods
->
	`xShmM≠
(fd, 0, 32*1024, 1, &
p
);

135 if–
rc
!=
SQLITE_OK
 ) Ñc;

136 
	`mem£t
((*)
p
, 0, 32);

142 
rc
 = 
	`su≥æockShmLock
(
fd
, 3, 
SQLITE_SHM_NLOCK
-3, 
pBusy
);

143  
rc
;

144 
	}
}

151 
	$sqlôe3demo_su≥ru∆ock
(*
pLock
){

152 
Su≥æock
 *
p
 = (Su≥æock *)
pLock
;

153 if–
p
->
bWÆ
 ){

154 
rc
;

155 
Êags
 = 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
;

156 
sqlôe3_fûe
 *
fd
 = 0;

157 
rc
 = 
	`sqlôe3_fûe_c⁄åﬁ
(
p
->
db
, "maö", 
SQLITE_FCNTL_FILE_POINTER
, (*)&
fd
);

158 if–
rc
==
SQLITE_OK
 ){

159 
fd
->
pMëhods
->
	`xShmLock
(fd, 2, 1, 
Êags
);

160 
fd
->
pMëhods
->
	`xShmLock
(fd, 3, 
SQLITE_SHM_NLOCK
-3, 
Êags
);

163 
	`sqlôe3_˛o£
(
p
->
db
);

164 
	`sqlôe3_‰ì
(
p
);

165 
	}
}

182 
sqlôe3demo_su≥æock
(

183 c⁄° *
zP©h
,

184 c⁄° *
zVfs
,

185 (*
xBusy
)(*,),

186 *
pBusyArg
,

187 **
µLock


189 
Su≥æockBusy
 
busy
 = {0, 0, 0};

190 
rc
;

191 
Su≥æock
 *
pLock
;

193 
pLock
 = 
	`sqlôe3_mÆloc
((
Su≥æock
));

194 if–!
pLock
 )  
SQLITE_NOMEM
;

195 
	`mem£t
(
pLock
, 0, (
Su≥æock
));

198 
rc
 = 
	`sqlôe3_›í_v2
(

199 
zP©h
, &
pLock
->
db
, 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
, 
zVfs


215 if–
rc
==
SQLITE_OK
 ){

216 
busy
.
xBusy
 = xBusy;

217 
busy
.
pBusyArg
 =ÖBusyArg;

218 
	`sqlôe3_busy_h™dÀr
(
pLock
->
db
, 
su≥æockBusyH™dÀr
, (*)&
busy
);

219 
rc
 = 
	`sqlôe3_exec
(
pLock
->
db
, "BEGIN EXCLUSIVE", 0, 0, 0);

231 if–
rc
==
SQLITE_OK
 ){

232 if–
SQLITE_OK
==(
rc
 = 
	`su≥æockIsWÆ
(
pLock
)Ë&&ÖLock->
bWÆ
 ){

233 
rc
 = 
	`sqlôe3_exec
(
pLock
->
db
, "COMMIT", 0, 0, 0);

234 if–
rc
==
SQLITE_OK
 ){

235 
rc
 = 
	`su≥æockWÆLock
(
pLock
->
db
, &
busy
);

240 if–
rc
!=
SQLITE_OK
 ){

241 
	`sqlôe3demo_su≥ru∆ock
(
pLock
);

242 *
µLock
 = 0;

244 *
µLock
 = 
pLock
;

247  
rc
;

248 
	}
}

257 #ifde‡
SQLITE_TEST


259 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

260 
	~"sqlôe_t˛.h
"

262 
	~"t˛.h
"

263 #i‚de‡
SQLITE_TCLAPI


264 
	#SQLITE_TCLAPI


	)

268 
	sI¡îpAndS¸ùt
 {

269 
T˛_I¡îp
 *
	möãΩ
;

270 
T˛_Obj
 *
	mpS¸ùt
;

272 
I¡îpAndS¸ùt
 
	tI¡îpAndS¸ùt
;

274 
SQLITE_TCLAPI
 
	$su≥ru∆ock_dñ
(
Clõ¡D©a
 
cd
){

275 
	`sqlôe3demo_su≥ru∆ock
((*)
cd
);

276 
	}
}

278 
SQLITE_TCLAPI
 
	$su≥ru∆ock_cmd
(

279 
Clõ¡D©a
 
cd
,

280 
T˛_I¡îp
 *
öãΩ
,

281 
objc
,

282 
T˛_Obj
 *
CONST
 
objv
[]

284 if–
objc
!=1 ){

285 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "");

286  
TCL_ERROR
;

288 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[0]));

289  
TCL_OK
;

290 
	}
}

292 
	$su≥æock_busy
(*
pCtx
, 
nBusy
){

293 
I¡îpAndS¸ùt
 *
p
 = (I¡îpAndS¸ùà*)
pCtx
;

294 
T˛_Obj
 *
pEvÆ
;

295 
iVÆ
 = 0;

297 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

298 
	`T˛_In¸RefCou¡
(
pEvÆ
);

299 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
, 
	`T˛_NewI¡Obj
(
nBusy
));

300 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

301 
	`T˛_GëI¡FromObj
(
p
->
öãΩ
, 
	`T˛_GëObjResu…
’->öãΩ), &
iVÆ
);

302 
	`T˛_De¸RefCou¡
(
pEvÆ
);

304  
iVÆ
;

305 
	}
}

310 
SQLITE_TCLAPI
 
	$su≥æock_cmd
(

311 
Clõ¡D©a
 
cd
,

312 
T˛_I¡îp
 *
öãΩ
,

313 
objc
,

314 
T˛_Obj
 *
CONST
 
objv
[]

316 *
pLock
;

317 *
zP©h
;

318 *
zVfs
 = 0;

319 
I¡îpAndS¸ùt
 
busy
 = {0, 0};

320 (*
xBusy
)(*,) = 0;

321 
rc
;

323 if–
objc
<3 || objc>5 ){

324 
	`T˛_Wr⁄gNumArgs
(

325 
öãΩ
, 1, 
objv
, "CMDNAME PATH ?VFS? ?BUSY-HANDLER-SCRIPT?");

326  
TCL_ERROR
;

329 
zP©h
 = 
	`T˛_GëSåög
(
objv
[2]);

331 if–
objc
>3 ){

332 
zVfs
 = 
	`T˛_GëSåög
(
objv
[3]);

333 if–
	`°æí
(
zVfs
)==0 ) zVfs = 0;

335 if–
objc
>4 ){

336 
busy
.
öãΩ
 = interp;

337 
busy
.
pS¸ùt
 = 
objv
[4];

338 
xBusy
 = 
su≥æock_busy
;

341 
rc
 = 
	`sqlôe3demo_su≥æock
(
zP©h
, 
zVfs
, 
xBusy
, &
busy
, &
pLock
);

342 
	`as£π
–
rc
==
SQLITE_OK
 || 
pLock
==0 );

343 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pLock
!=0 );

345 if–
rc
!=
SQLITE_OK
 ){

346 c⁄° *
	`sqlôe3EºSå
();

347 
	`T˛_Re£tResu…
(
öãΩ
);

348 
	`T˛_AµídResu…
(
öãΩ
, 
	`sqlôe3EºSå
(
rc
), 0);

349  
TCL_ERROR
;

352 
	`T˛_Cª©eObjComm™d
(

353 
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), 
su≥ru∆ock_cmd
, 
pLock
, 
su≥ru∆ock_dñ


355 
	`T˛_SëObjResu…
(
öãΩ
, 
objv
[1]);

356  
TCL_OK
;

357 
	}
}

359 
	$SqlôeSu≥æock_Inô
(
T˛_I¡îp
 *
öãΩ
){

360 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3demo_su≥æock", 
su≥æock_cmd
, 0, 0);

361  
TCL_OK
;

362 
	}
}

	@test_syscall.c

77 
	~"sqlôeI¡.h
"

78 
	~"sqlôe3.h
"

79 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

80 
	~"sqlôe_t˛.h
"

82 
	~"t˛.h
"

84 
	~<°dlib.h
>

85 
	~<°rög.h
>

86 
	~<as£π.h
>

88 #i‡
SQLITE_OS_UNIX


91 c⁄° *
sqlôe3EºName
();

93 
	~<sys/mm™.h
>

94 
	~<sys/ty≥s.h
>

95 
	~<î∫o.h
>

97 
	sTe°SysˇŒGlobÆ
 {

98 
	mbPîsi°
;

99 
	mnCou¡
;

100 
	mnFaû
;

101 
	mpgsz
;

102 
sqlôe3_sysˇŒ_±r
 
	m‹ig_gë∑gesize
;

103 } 
	ggSysˇŒ
 = { 0, 0, 0, 0, 0 };

105 
ts_›í
(const *, , );

106 
ts_˛o£
(
fd
);

107 
ts_ac˚ss
(c⁄° *
zP©h
, 
mode
);

108 *
ts_gëcwd
(*
zP©h
, 
size_t
 
nP©h
);

109 
ts_°©
(c⁄° *
zP©h
, 
°©
 *
p
);

110 
ts_f°©
(
fd
, 
°©
 *
p
);

111 
ts_·runˇã
(
fd
, 
off_t
 
n
);

112 
ts_f˙é
(
fd
, 
cmd
, ... );

113 
ts_ªad
(
fd
, *
aBuf
, 
size_t
 
nBuf
);

114 
ts_¥ód
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
);

118 
ts_¥ód64
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
);

119 
ts_wrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
);

120 
ts_pwrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
);

121 
ts_pwrôe64
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
);

122 
ts_fchmod
(
fd
, 
mode_t
 
mode
);

123 
ts_ÁŒoˇã
(
fd
, 
off_t
 
off
, off_à
Àn
);

124 *
ts_mm≠
(*, 
size_t
, , , , 
off_t
);

125 *
ts_mªm≠
(*, 
size_t
, size_t, , ...);

127 
	sTe°SysˇŒAºay
 {

128 c⁄° *
	mzName
;

129 
sqlôe3_sysˇŒ_±r
 
	mxTe°
;

130 
sqlôe3_sysˇŒ_±r
 
	mxOrig
;

131 
	mdeÁu…_î∫o
;

132 
	mcu°om_î∫o
;

133 } 
	gaSysˇŒ
[] = {

134  { "›í", (
sqlôe3_sysˇŒ_±r
)
ts_›í
, 0, 
EACCES
, 0 },

135  { "˛o£", (
sqlôe3_sysˇŒ_±r
)
ts_˛o£
, 0, 0, 0 },

136  { "ac˚ss", (
sqlôe3_sysˇŒ_±r
)
ts_ac˚ss
, 0, 0, 0 },

137  { "gëcwd", (
sqlôe3_sysˇŒ_±r
)
ts_gëcwd
, 0, 0, 0 },

138  { "°©", (
sqlôe3_sysˇŒ_±r
)
ts_°©
, 0, 0, 0 },

139  { "f°©", (
sqlôe3_sysˇŒ_±r
)
ts_f°©
, 0, 0, 0 },

140  { "·runˇã", (
sqlôe3_sysˇŒ_±r
)
ts_·runˇã
, 0, 
EIO
, 0 },

141  { "f˙é", (
sqlôe3_sysˇŒ_±r
)
ts_f˙é
, 0, 
EACCES
, 0 },

142  { "ªad", (
sqlôe3_sysˇŒ_±r
)
ts_ªad
, 0, 0, 0 },

143  { "¥ód", (
sqlôe3_sysˇŒ_±r
)
ts_¥ód
, 0, 0, 0 },

144  { "¥ód64", (
sqlôe3_sysˇŒ_±r
)
ts_¥ód64
, 0, 0, 0 },

145  { "wrôe", (
sqlôe3_sysˇŒ_±r
)
ts_wrôe
, 0, 0, 0 },

146  { "pwrôe", (
sqlôe3_sysˇŒ_±r
)
ts_pwrôe
, 0, 0, 0 },

147  { "pwrôe64", (
sqlôe3_sysˇŒ_±r
)
ts_pwrôe64
, 0, 0, 0 },

148  { "fchmod", (
sqlôe3_sysˇŒ_±r
)
ts_fchmod
, 0, 0, 0 },

149  { "ÁŒoˇã", (
sqlôe3_sysˇŒ_±r
)
ts_ÁŒoˇã
, 0, 0, 0 },

150  { "mm≠", (
sqlôe3_sysˇŒ_±r
)
ts_mm≠
, 0, 0, 0 },

151  { "mªm≠", (
sqlôe3_sysˇŒ_±r
)
ts_mªm≠
, 0, 0, 0 },

155 
	#‹ig_›í
 (((*)(c⁄° *, , ))
aSysˇŒ
[0].
xOrig
)

	)

156 
	#‹ig_˛o£
 (((*)())
aSysˇŒ
[1].
xOrig
)

	)

157 
	#‹ig_ac˚ss
 (((*)(c⁄° *,))
aSysˇŒ
[2].
xOrig
)

	)

158 
	#‹ig_gëcwd
 ((*(*)(*,
size_t
))
aSysˇŒ
[3].
xOrig
)

	)

159 
	#‹ig_°©
 (((*)(c⁄° *,
°©
*))
aSysˇŒ
[4].
xOrig
)

	)

160 
	#‹ig_f°©
 (((*)(,
°©
*))
aSysˇŒ
[5].
xOrig
)

	)

161 
	#‹ig_·runˇã
 (((*)(,
off_t
))
aSysˇŒ
[6].
xOrig
)

	)

162 
	#‹ig_f˙é
 (((*)(,,...))
aSysˇŒ
[7].
xOrig
)

	)

163 
	#‹ig_ªad
 ((
	`ssize_t
(*)(,*,
size_t
))
aSysˇŒ
[8].
xOrig
)

	)

164 
	#‹ig_¥ód
 ((
	`ssize_t
(*)(,*,
size_t
,
off_t
))
aSysˇŒ
[9].
xOrig
)

	)

165 
	#‹ig_¥ód64
 ((
	`ssize_t
(*)(,*,
size_t
,
sqlôe3_uöt64
))
aSysˇŒ
[10].
xOrig
)

	)

166 
	#‹ig_wrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
))
aSysˇŒ
[11].
xOrig
)

	)

167 
	#‹ig_pwrôe
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
off_t
))\

168 
aSysˇŒ
[12].
xOrig
)

	)

169 
	#‹ig_pwrôe64
 ((
	`ssize_t
(*)(,c⁄° *,
size_t
,
sqlôe3_uöt64
))\

170 
aSysˇŒ
[13].
xOrig
)

	)

171 
	#‹ig_fchmod
 (((*)(,
mode_t
))
aSysˇŒ
[14].
xOrig
)

	)

172 
	#‹ig_ÁŒoˇã
 (((*)(,
off_t
,off_t))
aSysˇŒ
[15].
xOrig
)

	)

173 
	#‹ig_mm≠
 ((*(*)(*,
size_t
,,,,
off_t
))
aSysˇŒ
[16].
xOrig
)

	)

174 
	#‹ig_mªm≠
 ((*(*)(*,
size_t
,size_t,,...))
aSysˇŒ
[17].
xOrig
)

	)

181 
	$tsIsFaû
(){

182 
gSysˇŒ
.
nCou¡
--;

183 if–
gSysˇŒ
.
nCou¡
==0 || (gSysˇŒ.
nFaû
 && gSysˇŒ.
bPîsi°
) ){

184 
gSysˇŒ
.
nFaû
++;

188 
	}
}

198 
	$tsEºno
(c⁄° *
zFunc
){

199 
i
;

200 
nFunc
 = 
	`°æí
(
zFunc
);

201 
i
=0; 
aSysˇŒ
[i].
zName
; i++){

202 if–
	`°æí
(
aSysˇŒ
[
i
].
zName
)!=
nFunc
 ) ;

203 if–
	`memcmp
(
aSysˇŒ
[
i
].
zName
, 
zFunc
, 
nFunc
) ) ;

204  
aSysˇŒ
[
i
].
cu°om_î∫o
;

207 
	`as£π
(0);

209 
	}
}

215 
	$tsIsFaûEºno
(c⁄° *
zFunc
){

216 if–
	`tsIsFaû
() ){

217 
î∫o
 = 
	`tsEºno
(
zFunc
);

221 
	}
}

226 
	$ts_›í
(c⁄° *
zFûe
, 
Êags
, 
mode
){

227 if–
	`tsIsFaûEºno
("open") ){

230  
	`‹ig_›í
(
zFûe
, 
Êags
, 
mode
);

231 
	}
}

236 
	$ts_˛o£
(
fd
){

237 if–
	`tsIsFaû
() ){

243 
	`‹ig_˛o£
(
fd
);

246  
	`‹ig_˛o£
(
fd
);

247 
	}
}

252 
	$ts_ac˚ss
(c⁄° *
zP©h
, 
mode
){

253 if–
	`tsIsFaû
() ){

256  
	`‹ig_ac˚ss
(
zP©h
, 
mode
);

257 
	}
}

262 *
	$ts_gëcwd
(*
zP©h
, 
size_t
 
nP©h
){

263 if–
	`tsIsFaû
() ){

264  
NULL
;

266  
	`‹ig_gëcwd
(
zP©h
, 
nP©h
);

267 
	}
}

272 
	$ts_°©
(c⁄° *
zP©h
, 
°©
 *
p
){

273 if–
	`tsIsFaû
() ){

276  
	`‹ig_°©
(
zP©h
, 
p
);

277 
	}
}

282 
	$ts_f°©
(
fd
, 
°©
 *
p
){

283 if–
	`tsIsFaûEºno
("fstat") ){

286  
	`‹ig_f°©
(
fd
, 
p
);

287 
	}
}

292 
	$ts_·runˇã
(
fd
, 
off_t
 
n
){

293 if–
	`tsIsFaûEºno
("ftruncate") ){

296  
	`‹ig_·runˇã
(
fd
, 
n
);

297 
	}
}

302 
	$ts_f˙é
(
fd
, 
cmd
, ... ){

303 
va_li°
 
≠
;

304 *
pArg
;

305 if–
	`tsIsFaûEºno
("fcntl") ){

308 
	`va_°¨t
(
≠
, 
cmd
);

309 
pArg
 = 
	`va_¨g
(
≠
, *);

310  
	`‹ig_f˙é
(
fd
, 
cmd
, 
pArg
);

311 
	}
}

316 
	$ts_ªad
(
fd
, *
aBuf
, 
size_t
 
nBuf
){

317 if–
	`tsIsFaûEºno
("read") ){

320  
	`‹ig_ªad
(
fd
, 
aBuf
, 
nBuf
);

321 
	}
}

326 
	$ts_¥ód
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
){

327 if–
	`tsIsFaûEºno
("pread") ){

330  
	`‹ig_¥ód
(
fd
, 
aBuf
, 
nBuf
, 
off
);

331 
	}
}

336 
	$ts_¥ód64
(
fd
, *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
){

337 if–
	`tsIsFaûEºno
("pread64") ){

340  
	`‹ig_¥ód64
(
fd
, 
aBuf
, 
nBuf
, 
off
);

341 
	}
}

346 
	$ts_wrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
){

347 if–
	`tsIsFaûEºno
("write") ){

348 if–
	`tsEºno
("wrôe")==
EINTR
 ) 
	`‹ig_wrôe
(
fd
, 
aBuf
, 
nBuf
/2);

351  
	`‹ig_wrôe
(
fd
, 
aBuf
, 
nBuf
);

352 
	}
}

357 
	$ts_pwrôe
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
off_t
 
off
){

358 if–
	`tsIsFaûEºno
("pwrite") ){

361  
	`‹ig_pwrôe
(
fd
, 
aBuf
, 
nBuf
, 
off
);

362 
	}
}

367 
	$ts_pwrôe64
(
fd
, c⁄° *
aBuf
, 
size_t
 
nBuf
, 
sqlôe3_uöt64
 
off
){

368 if–
	`tsIsFaûEºno
("pwrite64") ){

371  
	`‹ig_pwrôe64
(
fd
, 
aBuf
, 
nBuf
, 
off
);

372 
	}
}

377 
	$ts_fchmod
(
fd
, 
mode_t
 
mode
){

378 if–
	`tsIsFaû
() ){

381  
	`‹ig_fchmod
(
fd
, 
mode
);

382 
	}
}

393 
	$ts_ÁŒoˇã
(
fd
, 
off_t
 
off
, off_à
Àn
){

394 if–
	`tsIsFaû
() ){

395  
	`tsEºno
("fallocate");

397  
	`‹ig_ÁŒoˇã
(
fd
, 
off
, 
Àn
);

398 
	}
}

400 *
	$ts_mm≠
(

401 *
pAddr
,

402 
size_t
 
nByã
,

403 
¥Ÿ
,

404 
Êags
,

405 
fd
,

406 
off_t
 
iOff


408 if–
	`tsIsFaûEºno
("mmap") ){

409  
MAP_FAILED
;

411  
	`‹ig_mm≠
(
pAddr
, 
nByã
, 
¥Ÿ
, 
Êags
, 
fd
, 
iOff
);

412 
	}
}

414 *
	$ts_mªm≠
(*
a
, 
size_t
 
b
, size_à
c
, 
d
, ...){

415 
va_li°
 
≠
;

416 *
pArg
;

417 if–
	`tsIsFaûEºno
("mremap") ){

418  
MAP_FAILED
;

420 
	`va_°¨t
(
≠
, 
d
);

421 
pArg
 = 
	`va_¨g
(
≠
, *);

422  
	`‹ig_mªm≠
(
a
, 
b
, 
c
, 
d
, 
pArg
);

423 
	}
}

425 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_ö°Æl
(

426 * 
˛õ¡D©a
,

427 
T˛_I¡îp
 *
öãΩ
,

428 
objc
,

429 
T˛_Obj
 *
CONST
 
objv
[]

431 
sqlôe3_vfs
 *
pVfs
;

432 
nEÀm
;

433 
i
;

434 
T˛_Obj
 **
≠EÀm
;

436 if–
objc
!=3 ){

437 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SYSCALL-LIST");

438  
TCL_ERROR
;

440 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nEÀm
, &
≠EÀm
) ){

441  
TCL_ERROR
;

443 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

445 
i
=0; i<
nEÀm
; i++){

446 
iCÆl
;

447 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

448 
≠EÀm
[
i
], 
aSysˇŒ
, ◊SysˇŒ[0]), "sy°em-ˇŒ", 0, &
iCÆl


450 if–
rc
 ) Ñc;

451 if–
aSysˇŒ
[
iCÆl
].
xOrig
==0 ){

452 
aSysˇŒ
[
iCÆl
].
xOrig
 = 
pVfs
->
	`xGëSy°emCÆl
’Vfs,áSysˇŒ[iCÆl].
zName
);

453 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
aSysˇŒ
[
iCÆl
].
zName
,áSysˇŒ[iCÆl].
xTe°
);

455 
aSysˇŒ
[
iCÆl
].
cu°om_î∫o
 =áSysˇŒ[iCÆl].
deÁu…_î∫o
;

458  
TCL_OK
;

459 
	}
}

461 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_unö°Æl
(

462 * 
˛õ¡D©a
,

463 
T˛_I¡îp
 *
öãΩ
,

464 
objc
,

465 
T˛_Obj
 *
CONST
 
objv
[]

467 
sqlôe3_vfs
 *
pVfs
;

468 
i
;

470 if–
objc
!=2 ){

471 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

472  
TCL_ERROR
;

475 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

476 
i
=0; 
aSysˇŒ
[i].
zName
; i++){

477 if–
aSysˇŒ
[
i
].
xOrig
 ){

478 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
aSysˇŒ
[
i
].
zName
, 0);

479 
aSysˇŒ
[
i
].
xOrig
 = 0;

482  
TCL_OK
;

483 
	}
}

485 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_ª£t
(

486 * 
˛õ¡D©a
,

487 
T˛_I¡îp
 *
öãΩ
,

488 
objc
,

489 
T˛_Obj
 *
CONST
 
objv
[]

491 
sqlôe3_vfs
 *
pVfs
;

492 
i
;

493 
rc
;

495 if–
objc
!=2 && objc!=3 ){

496 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

497  
TCL_ERROR
;

500 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

501 if–
objc
==2 ){

502 
rc
 = 
pVfs
->
	`xSëSy°emCÆl
(pVfs, 0, 0);

503 
i
=0; 
aSysˇŒ
[i].
zName
; i++ËaSysˇŒ[i].
xOrig
 = 0;

505 
nFunc
;

506 *
zFunc
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nFunc
);

507 
rc
 = 
pVfs
->
	`xSëSy°emCÆl
’Vfs, 
	`T˛_GëSåög
(
objv
[2]), 0);

508 
i
=0; 
rc
==
SQLITE_OK
 && 
aSysˇŒ
[i].
zName
; i++){

509 if–
	`°æí
(
aSysˇŒ
[
i
].
zName
)!=
nFunc
 ) ;

510 if–
	`memcmp
(
aSysˇŒ
[
i
].
zName
, 
zFunc
, 
nFunc
) ) ;

511 
aSysˇŒ
[
i
].
xOrig
 = 0;

514 if–
rc
!=
SQLITE_OK
 ){

515 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
	`sqlôe3EºName
(
rc
), -1));

516  
TCL_ERROR
;

519 
	`T˛_Re£tResu…
(
öãΩ
);

520  
TCL_OK
;

521 
	}
}

523 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_exi°s
(

524 * 
˛õ¡D©a
,

525 
T˛_I¡îp
 *
öãΩ
,

526 
objc
,

527 
T˛_Obj
 *
CONST
 
objv
[]

529 
sqlôe3_vfs
 *
pVfs
;

530 
sqlôe3_sysˇŒ_±r
 
x
;

532 if–
objc
!=3 ){

533 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

534  
TCL_ERROR
;

537 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

538 
x
 = 
pVfs
->
	`xGëSy°emCÆl
’Vfs, 
	`T˛_GëSåög
(
objv
[2]));

540 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewBoﬁónObj
(
x
!=0));

541  
TCL_OK
;

542 
	}
}

544 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_Áu…
(

545 * 
˛õ¡D©a
,

546 
T˛_I¡îp
 *
öãΩ
,

547 
objc
,

548 
T˛_Obj
 *
CONST
 
objv
[]

550 
nCou¡
 = 0;

551 
bPîsi°
 = 0;

553 if–
objc
!=2 && objc!=4 ){

554 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?COUNT PERSIST?");

555  
TCL_ERROR
;

558 if–
objc
==4 ){

559 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
nCou¡
)

560 || 
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
bPîsi°
)

562  
TCL_ERROR
;

566 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
gSysˇŒ
.
nFaû
));

567 
gSysˇŒ
.
nCou¡
 =ÇCount;

568 
gSysˇŒ
.
bPîsi°
 = bPersist;

569 
gSysˇŒ
.
nFaû
 = 0;

570  
TCL_OK
;

571 
	}
}

573 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_î∫o
(

574 * 
˛õ¡D©a
,

575 
T˛_I¡îp
 *
öãΩ
,

576 
objc
,

577 
T˛_Obj
 *
CONST
 
objv
[]

579 
iCÆl
;

580 
iEºno
;

581 
rc
;

583 
	sEºno
 {

584 c⁄° *
z
;

585 
i
;

586 } 
aEºno
[] = {

587 { "EACCES", 
EACCES
 },

588 { "EINTR", 
EINTR
 },

589 { "EIO", 
EIO
 },

590 { "EOVERFLOW", 
EOVERFLOW
 },

591 { "ENOMEM", 
ENOMEM
 },

592 { "EAGAIN", 
EAGAIN
 },

593 { "ETIMEDOUT", 
ETIMEDOUT
 },

594 { "EBUSY", 
EBUSY
 },

595 { "EPERM", 
EPERM
 },

596 { "EDEADLK", 
EDEADLK
 },

597 { "ENOLCK", 
ENOLCK
 },

601 if–
objc
!=4 ){

602 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "SYSCALL ERRNO");

603  
TCL_ERROR
;

606 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

607 
objv
[2], 
aSysˇŒ
, ◊SysˇŒ[0]), "sy°em-ˇŒ", 0, &
iCÆl


609 if–
rc
!=
TCL_OK
 ) Ñc;

610 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

611 
objv
[3], 
aEºno
, ◊Eºno[0]), "î∫o", 0, &
iEºno


613 if–
rc
!=
TCL_OK
 ) Ñc;

615 
aSysˇŒ
[
iCÆl
].
cu°om_î∫o
 = 
aEºno
[
iEºno
].
i
;

616  
TCL_OK
;

617 
	}
}

619 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_li°
(

620 * 
˛õ¡D©a
,

621 
T˛_I¡îp
 *
öãΩ
,

622 
objc
,

623 
T˛_Obj
 *
CONST
 
objv
[]

625 c⁄° *
zSys
;

626 
sqlôe3_vfs
 *
pVfs
;

627 
T˛_Obj
 *
pLi°
;

629 if–
objc
!=2 ){

630 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

631  
TCL_ERROR
;

634 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

635 
pLi°
 = 
	`T˛_NewObj
();

636 
	`T˛_In¸RefCou¡
(
pLi°
);

637 
zSys
 = 
pVfs
->
	`xNextSy°emCÆl
(pVfs, 0);

638 
zSys
!=0;

639 
zSys
 = 
pVfs
->
	`xNextSy°emCÆl
(pVfs, zSys)

641 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
(
zSys
, -1));

644 
	`T˛_SëObjResu…
(
öãΩ
, 
pLi°
);

645 
	`T˛_De¸RefCou¡
(
pLi°
);

646  
TCL_OK
;

647 
	}
}

649 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_deÁu…vfs
(

650 * 
˛õ¡D©a
,

651 
T˛_I¡îp
 *
öãΩ
,

652 
objc
,

653 
T˛_Obj
 *
CONST
 
objv
[]

655 
sqlôe3_vfs
 *
pVfs
;

657 if–
objc
!=2 ){

658 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "");

659  
TCL_ERROR
;

662 
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

663 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewSåögObj
(
pVfs
->
zName
, -1));

664  
TCL_OK
;

665 
	}
}

667 
	$ts_gë∑gesize
(){

668  
gSysˇŒ
.
pgsz
;

669 
	}
}

671 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ_∑gesize
(

672 * 
˛õ¡D©a
,

673 
T˛_I¡îp
 *
öãΩ
,

674 
objc
,

675 
T˛_Obj
 *
CONST
 
objv
[]

677 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

678 
pgsz
;

679 if–
objc
!=3 ){

680 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "PGSZ");

681  
TCL_ERROR
;

683 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
pgsz
) ){

684  
TCL_ERROR
;

687 if–
pgsz
<0 ){

688 if–
gSysˇŒ
.
‹ig_gë∑gesize
 ){

689 
pVfs
->
	`xSëSy°emCÆl
’Vfs, "gë∑gesize", 
gSysˇŒ
.
‹ig_gë∑gesize
);

692 if–
pgsz
<512 || (pgsz & (pgsz-1)) ){

693 
	`T˛_AµídResu…
(
öãΩ
, "pgsz out ofÑange", 0);

694  
TCL_ERROR
;

696 
gSysˇŒ
.
‹ig_gë∑gesize
 = 
pVfs
->
	`xGëSy°emCÆl
(pVfs, "getpagesize");

697 
gSysˇŒ
.
pgsz
 =Ögsz;

698 
pVfs
->
	`xSëSy°emCÆl
(

699 
pVfs
, "gë∑gesize", (
sqlôe3_sysˇŒ_±r
)
ts_gë∑gesize


703  
TCL_OK
;

704 
	}
}

706 
SQLITE_TCLAPI
 
	$ã°_sysˇŒ
(

707 * 
˛õ¡D©a
,

708 
T˛_I¡îp
 *
öãΩ
,

709 
objc
,

710 
T˛_Obj
 *
CONST
 
objv
[]

712 
	sSysˇŒCmd
 {

713 c⁄° *
zName
;

714 
T˛_ObjCmdProc
 *
xCmd
;

715 } 
aCmd
[] = {

716 { "Áu…", 
ã°_sysˇŒ_Áu…
 },

717 { "ö°Æl", 
ã°_sysˇŒ_ö°Æl
 },

718 { "unö°Æl", 
ã°_sysˇŒ_unö°Æl
 },

719 { "ª£t", 
ã°_sysˇŒ_ª£t
 },

720 { "î∫o", 
ã°_sysˇŒ_î∫o
 },

721 { "exi°s", 
ã°_sysˇŒ_exi°s
 },

722 { "li°", 
ã°_sysˇŒ_li°
 },

723 { "deÁu…vfs", 
ã°_sysˇŒ_deÁu…vfs
 },

724 { "∑gesize", 
ã°_sysˇŒ_∑gesize
 },

727 
iCmd
;

728 
rc
;

729 
sqlôe3_vfs
 *
pVfs
 = 
	`sqlôe3_vfs_föd
(0);

731 if–
objc
<2 ){

732 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND ...");

733  
TCL_ERROR
;

735 if–
pVfs
->
iVîsi⁄
<3 ||ÖVfs->
xSëSy°emCÆl
==0 ){

736 
	`T˛_AµídResu…
(
öãΩ
, "VFS doesÇot support xSetSystemCall", 0);

737 
rc
 = 
TCL_ERROR
;

739 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
,

740 
objv
[1], 
aCmd
, ◊Cmd[0]), "sub-comm™d", 0, &
iCmd


743 if–
rc
!=
TCL_OK
 ) Ñc;

744  
aCmd
[
iCmd
].
	`xCmd
(
˛õ¡D©a
, 
öãΩ
, 
objc
, 
objv
);

745 
	}
}

747 
	$Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
 *
öãΩ
){

748 
	sSysˇŒCmd
 {

749 c⁄° *
zName
;

750 
T˛_ObjCmdProc
 *
xCmd
;

751 } 
aCmd
[] = {

752 { "ã°_sysˇŒ", 
ã°_sysˇŒ
},

754 
i
;

756 
i
=0; i<(
aCmd
)/(aCmd[0]); i++){

757 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aCmd
[
i
].
zName
,áCmd[i].
xCmd
, 0, 0);

759  
TCL_OK
;

760 
	}
}

762 
	$Sqlôëe°SysˇŒ_Inô
(
T˛_I¡îp
 *
öãΩ
){

763  
TCL_OK
;

764 
	}
}

	@test_tclvar.c

19 
	~"sqlôeI¡.h
"

20 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

21 
	~"sqlôe_t˛.h
"

23 
	~"t˛.h
"

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

28 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


33 
	#TCLVAR_NAME_EQ
 'e'

	)

34 
	#TCLVAR_NAME_MATCH
 'm'

	)

35 
	#TCLVAR_VALUE_GLOB
 'g'

	)

36 
	#TCLVAR_VALUE_REGEXP
 'r'

	)

37 
	#TCLVAR_VALUE_LIKE
 'l'

	)

39 
t˛v¨_vèb
 
	tt˛v¨_vèb
;

40 
t˛v¨_curs‹
 
	tt˛v¨_curs‹
;

45 
	st˛v¨_vèb
 {

46 
sqlôe3_vèb
 
	mba£
;

47 
T˛_I¡îp
 *
	möãΩ
;

51 
	st˛v¨_curs‹
 {

52 
sqlôe3_vèb_curs‹
 
	mba£
;

54 
T˛_Obj
 *
	mpLi°1
;

55 
T˛_Obj
 *
	mpLi°2
;

56 
	mi1
;

57 
	mi2
;

61 
	$t˛v¨C⁄√˘
(

62 
sqlôe3
 *
db
,

63 *
pAux
,

64 
¨gc
, c⁄° *c⁄°*
¨gv
,

65 
sqlôe3_vèb
 **
µVèb
,

66 **
pzEº


68 
t˛v¨_vèb
 *
pVèb
;

69 c⁄° 
zSchema
[] =

71 
pVèb
 = 
	`sqlôe3MÆlocZîo
( (*pVtab) );

72 if–
pVèb
==0 )  
SQLITE_NOMEM
;

73 *
µVèb
 = &
pVèb
->
ba£
;

74 
pVèb
->
öãΩ
 = (
T˛_I¡îp
 *)
pAux
;

75 
	`sqlôe3_de˛¨e_vèb
(
db
, 
zSchema
);

76  
SQLITE_OK
;

77 
	}
}

81 
	$t˛v¨Disc⁄√˘
(
sqlôe3_vèb
 *
pVèb
){

82 
	`sqlôe3_‰ì
(
pVèb
);

83  
SQLITE_OK
;

84 
	}
}

90 
	$t˛v¨O≥n
(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
){

91 
t˛v¨_curs‹
 *
pCur
;

92 
pCur
 = 
	`sqlôe3MÆlocZîo
((
t˛v¨_curs‹
));

93 *
µCurs‹
 = &
pCur
->
ba£
;

94  
SQLITE_OK
;

95 
	}
}

100 
	$t˛v¨Clo£
(
sqlôe3_vèb_curs‹
 *
cur
){

101 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
cur
;

102 if–
pCur
->
pLi°1
 ){

103 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°1
);

105 if–
pCur
->
pLi°2
 ){

106 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

108 
	`sqlôe3_‰ì
(
pCur
);

109  
SQLITE_OK
;

110 
	}
}

115 
	$√xt2
(
T˛_I¡îp
 *
öãΩ
, 
t˛v¨_curs‹
 *
pCur
, 
T˛_Obj
 *
pObj
){

116 
T˛_Obj
 *
p
;

118 if–
pObj
 ){

119 if–!
pCur
->
pLi°2
 ){

120 
p
 = 
	`T˛_NewSåögObj
("arrayÇames", -1);

121 
	`T˛_In¸RefCou¡
(
p
);

122 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
pObj
);

123 
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 
TCL_EVAL_GLOBAL
);

124 
	`T˛_De¸RefCou¡
(
p
);

125 
pCur
->
pLi°2
 = 
	`T˛_GëObjResu…
(
öãΩ
);

126 
	`T˛_In¸RefCou¡
(
pCur
->
pLi°2
);

127 
	`as£π
–
pCur
->
i2
==0 );

129 
n
 = 0;

130 
pCur
->
i2
++;

131 
	`T˛_Li°ObjLígth
(0, 
pCur
->
pLi°2
, &
n
);

132 if–
pCur
->
i2
>=
n
 ){

133 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

134 
pCur
->
pLi°2
 = 0;

135 
pCur
->
i2
 = 0;

142 
	}
}

144 
	$t˛v¨Next
(
sqlôe3_vèb_curs‹
 *
cur
){

145 
T˛_Obj
 *
pObj
;

146 
n
 = 0;

147 
ok
 = 0;

149 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
cur
;

150 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)(
cur
->
pVèb
))->interp;

152 
	`T˛_Li°ObjLígth
(0, 
pCur
->
pLi°1
, &
n
);

153  !
ok
 && 
pCur
->
i1
<
n
 ){

154 
	`T˛_Li°ObjIndex
(0, 
pCur
->
pLi°1
,ÖCur->
i1
, &
pObj
);

155 
ok
 = 
	`√xt2
(
öãΩ
, 
pCur
, 
pObj
);

156 if–!
ok
 ){

157 
pCur
->
i1
++;

162 
	}
}

164 
	$t˛v¨Fûãr
(

165 
sqlôe3_vèb_curs‹
 *
pVèbCurs‹
,

166 
idxNum
, c⁄° *
idxSå
,

167 
¨gc
, 
sqlôe3_vÆue
 **
¨gv


169 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹ *)
pVèbCurs‹
;

170 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)(
pVèbCurs‹
->
pVèb
))->interp;

171 
T˛_Obj
 *
p
 = 
	`T˛_NewSåögObj
("tclvar_filter_cmd", -1);

173 c⁄° *
zEq
 = "";

174 c⁄° *
zM©ch
 = "";

175 c⁄° *
zGlob
 = "";

176 c⁄° *
zRegexp
 = "";

177 c⁄° *
zLike
 = "";

178 
i
;

180 
i
=0; 
idxSå
[i]; i++){

181  
idxSå
[
i
] ){

182 
TCLVAR_NAME_EQ
:

183 
zEq
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

185 
TCLVAR_NAME_MATCH
:

186 
zM©ch
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

188 
TCLVAR_VALUE_GLOB
:

189 
zGlob
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

191 
TCLVAR_VALUE_REGEXP
:

192 
zRegexp
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

194 
TCLVAR_VALUE_LIKE
:

195 
zLike
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
¨gv
[
i
]);

198 
	`as£π
( 0 );

202 
	`T˛_In¸RefCou¡
(
p
);

203 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zEq
, -1));

204 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zM©ch
, -1));

205 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zGlob
, -1));

206 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zRegexp
, -1));

207 
	`T˛_Li°ObjAµídEÀmít
(0, 
p
, 
	`T˛_NewSåögObj
(
zLike
, -1));

209 
	`T˛_EvÆObjEx
(
öãΩ
, 
p
, 
TCL_EVAL_GLOBAL
);

210 if–
pCur
->
pLi°1
 ){

211 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°1
);

213 if–
pCur
->
pLi°2
 ){

214 
	`T˛_De¸RefCou¡
(
pCur
->
pLi°2
);

215 
pCur
->
pLi°2
 = 0;

217 
pCur
->
i1
 = 0;

218 
pCur
->
i2
 = 0;

219 
pCur
->
pLi°1
 = 
	`T˛_GëObjResu…
(
öãΩ
);

220 
	`T˛_In¸RefCou¡
(
pCur
->
pLi°1
);

222 
	`T˛_De¸RefCou¡
(
p
);

223  
	`t˛v¨Next
(
pVèbCurs‹
);

224 
	}
}

226 
	$t˛v¨Cﬁumn
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe3_c⁄ãxt
 *
˘x
, 
i
){

227 
T˛_Obj
 *
p1
;

228 
T˛_Obj
 *
p2
;

229 c⁄° *
z1
;

230 c⁄° *
z2
 = "";

231 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹*)
cur
;

232 
T˛_I¡îp
 *
öãΩ
 = ((
t˛v¨_vèb
 *)
cur
->
pVèb
)->interp;

234 
	`T˛_Li°ObjIndex
(
öãΩ
, 
pCur
->
pLi°1
,ÖCur->
i1
, &
p1
);

235 
	`T˛_Li°ObjIndex
(
öãΩ
, 
pCur
->
pLi°2
,ÖCur->
i2
, &
p2
);

236 
z1
 = 
	`T˛_GëSåög
(
p1
);

237 if–
p2
 ){

238 
z2
 = 
	`T˛_GëSåög
(
p2
);

240 
i
) {

242 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
z1
, -1, 
SQLITE_TRANSIENT
);

246 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
z2
, -1, 
SQLITE_TRANSIENT
);

250 
T˛_Obj
 *
pVÆ
 = 
	`T˛_GëV¨2Ex
(
öãΩ
, 
z1
, *
z2
?z2:0, 
TCL_GLOBAL_ONLY
);

251 
	`sqlôe3_ªsu…_ãxt
(
˘x
, 
	`T˛_GëSåög
(
pVÆ
), -1, 
SQLITE_TRANSIENT
);

255  
SQLITE_OK
;

256 
	}
}

258 
	$t˛v¨Rowid
(
sqlôe3_vèb_curs‹
 *
cur
, 
sqlôe_öt64
 *
pRowid
){

259 *
pRowid
 = 0;

260  
SQLITE_OK
;

261 
	}
}

263 
	$t˛v¨Eof
(
sqlôe3_vèb_curs‹
 *
cur
){

264 
t˛v¨_curs‹
 *
pCur
 = (t˛v¨_curs‹*)
cur
;

265  (
pCur
->
pLi°2
?0:1);

266 
	}
}

276 
	$t˛v¨AddToIdx°r
(*
zSå
, 
x
){

277 
i
;

278 
i
=0; 
zSå
[i]; i++){

279 if–
zSå
[
i
]==
x
 )  1;

281 
zSå
[
i
] = 
x
;

282 
zSå
[
i
+1] = '\0';

284 
	}
}

290 
	$t˛v¨SëOmô
(
T˛_I¡îp
 *
öãΩ
){

291 
rc
;

292 
ªs
 = 0;

293 
T˛_Obj
 *
pRes
;

294 
rc
 = 
	`T˛_EvÆ
(
öãΩ
,

297 if–
rc
==
TCL_OK
 ){

298 
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

299 
rc
 = 
	`T˛_GëBoﬁónFromObj
(0, 
pRes
, &
ªs
);

301  (
rc
==
TCL_OK
 && 
ªs
);

302 
	}
}

317 
	$t˛v¨Be°Index
(
sqlôe3_vèb
 *
èb
, 
sqlôe3_ödex_öfo
 *
pIdxInfo
){

318 
t˛v¨_vèb
 *
pTab
 = (t˛v¨_vèb*)
èb
;

319 
ii
;

320 *
zSå
 = 
	`sqlôe3_mÆloc
(32);

321 
iSå
 = 0;

323 if–
zSå
==0 )  
SQLITE_NOMEM
;

324 
zSå
[0] = '\0';

326 
ii
=0; ii<
pIdxInfo
->
nC⁄°øöt
; ii++){

327 
sqlôe3_ödex_c⁄°øöt
 c⁄° *
pC⁄s
 = &
pIdxInfo
->
aC⁄°øöt
[
ii
];

328 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

330 
pUßge
 = &
pIdxInfo
->
aC⁄°øötUßge
[
ii
];

331 if–
pC⁄s
->
ußbÀ
 ){

333 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_EQ
 &&ÖC⁄s->
iCﬁumn
==0 ){

334 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_NAME_EQ
) ){

335 
pUßge
->
¨gvIndex
 = ++
iSå
;

336 
pUßge
->
omô
 = 0;

341 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_MATCH
 &&ÖC⁄s->
iCﬁumn
==0 ){

342 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_NAME_MATCH
) ){

343 
pUßge
->
¨gvIndex
 = ++
iSå
;

344 
pUßge
->
omô
 = 1;

349 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_GLOB
 &&ÖC⁄s->
iCﬁumn
==2 ){

350 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_GLOB
) ){

351 
pUßge
->
¨gvIndex
 = ++
iSå
;

352 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

357 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_REGEXP
 &&ÖC⁄s->
iCﬁumn
==2 ){

358 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_REGEXP
) ){

359 
pUßge
->
¨gvIndex
 = ++
iSå
;

360 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

365 if–
pC⁄s
->
›
==
SQLITE_INDEX_CONSTRAINT_LIKE
 &&ÖC⁄s->
iCﬁumn
==2 ){

366 if–0==
	`t˛v¨AddToIdx°r
(
zSå
, 
TCLVAR_VALUE_LIKE
) ){

367 
pUßge
->
¨gvIndex
 = ++
iSå
;

368 
pUßge
->
omô
 = 
	`t˛v¨SëOmô
(
pTab
->
öãΩ
);

373 
pIdxInfo
->
idxSå
 = 
zSå
;

374 
pIdxInfo
->
√edToFªeIdxSå
 = 1;

376  
SQLITE_OK
;

377 
	}
}

383 
sqlôe3_moduÀ
 
	gt˛v¨ModuÀ
 = {

385 
t˛v¨C⁄√˘
,

386 
t˛v¨C⁄√˘
,

387 
t˛v¨Be°Index
,

388 
t˛v¨Disc⁄√˘
,

389 
t˛v¨Disc⁄√˘
,

390 
t˛v¨O≥n
,

391 
t˛v¨Clo£
,

392 
t˛v¨Fûãr
,

393 
t˛v¨Next
,

394 
t˛v¨Eof
,

395 
t˛v¨Cﬁumn
,

396 
t˛v¨Rowid
,

409 
gëDbPoöãr
(
T˛_I¡îp
 *
öãΩ
, c⁄° *
zA
, 
sqlôe3
 **
µDb
);

414 
SQLITE_TCLAPI
 
	$ªgi°î_t˛v¨_moduÀ
(

415 
Clõ¡D©a
 
˛õ¡D©a
,

416 
T˛_I¡îp
 *
öãΩ
,

417 
objc
,

418 
T˛_Obj
 *
CONST
 
objv
[]

420 
rc
 = 
TCL_OK
;

421 
sqlôe3
 *
db
;

422 if–
objc
!=2 ){

423 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "DB");

424  
TCL_ERROR
;

426 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

427 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


428 
	`sqlôe3_¸óã_moduÀ
(
db
, "t˛v¨", &
t˛v¨ModuÀ
, (*)
öãΩ
);

429 
rc
 = 
	`T˛_EvÆ
(
öãΩ
,

451  
rc
;

452 
	}
}

460 
	$Sqlôëe°t˛v¨_Inô
(
T˛_I¡îp
 *
öãΩ
){

461 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


463 *
zName
;

464 
T˛_ObjCmdProc
 *
xProc
;

465 *
˛õ¡D©a
;

466 } 
aObjCmd
[] = {

467 { "ªgi°î_t˛v¨_moduÀ", 
ªgi°î_t˛v¨_moduÀ
, 0 },

469 
i
;

470 
i
=0; i<(
aObjCmd
)/(aObjCmd[0]); i++){

471 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
aObjCmd
[
i
].
zName
,

472 
aObjCmd
[
i
].
xProc
,áObjCmd[i].
˛õ¡D©a
, 0);

475  
TCL_OK
;

476 
	}
}

	@test_thread.c

18 
	~"sqlôeI¡.h
"

19 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

20 
	~"sqlôe_t˛.h
"

22 
	~"t˛.h
"

25 #i‡
SQLITE_THREADSAFE


27 
	~<î∫o.h
>

29 #i‡!
deföed
(
_MSC_VER
)

30 
	~<uni°d.h
>

36 
SqlThªad
 
	tSqlThªad
;

37 
	sSqlThªad
 {

38 
T˛_ThªadId
 
	m∑ª¡
;

39 
T˛_I¡îp
 *
	möãΩ
;

40 *
	mzS¸ùt
;

41 *
	mzV¨«me
;

51 
EvÆEvít
 
	tEvÆEvít
;

52 
	sEvÆEvít
 {

53 
T˛_Evít
 
	mba£
;

54 *
	mzS¸ùt
;

55 
T˛_I¡îp
 *
	möãΩ
;

58 
T˛_ObjCmdProc
 
	gsq…hªad_¥oc
;

59 
T˛_ObjCmdProc
 
	g˛ock_£c⁄ds_¥oc
;

60 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

61 
T˛_ObjCmdProc
 
	gblockög_°ï_¥oc
;

62 
T˛_ObjCmdProc
 
	gblockög_¥ï¨e_v2_¥oc
;

64 
Sqlôëe°1_Inô
(
T˛_I¡îp
 *);

65 
Sqlôe3_Inô
(
T˛_I¡îp
 *);

68 c⁄° *
sqlôe3EºName
();

71 *
sqlôe3Te°TextToPå
(const *);

72 
gëDbPoöãr
(
T˛_I¡îp
 *, c⁄° *, 
sqlôe3
 **);

73 
sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *, *, *);

74 
sqlôe3Te°EºCode
(
T˛_I¡îp
 *, 
sqlôe3
 *, );

79 
SQLITE_TCLAPI
 
	$t˛S¸ùtEvít
(
T˛_Evít
 *
evPå
, 
Êags
){

80 
rc
;

81 
EvÆEvít
 *
p
 = (EvÆEvíà*)
evPå
;

82 
rc
 = 
	`T˛_EvÆ
(
p
->
öãΩ
,Ö->
zS¸ùt
);

83 if–
rc
!=
TCL_OK
 ){

84 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

86 
	`UNUSED_PARAMETER
(
Êags
);

88 
	}
}

94 
	$po°ToP¨ít
(
SqlThªad
 *
p
, 
T˛_Obj
 *
pS¸ùt
){

95 
EvÆEvít
 *
pEvít
;

96 *
zMsg
;

97 
nMsg
;

99 
zMsg
 = 
	`T˛_GëSåögFromObj
(
pS¸ùt
, &
nMsg
);

100 
pEvít
 = (
EvÆEvít
 *)
	`ckÆloc
((EvÆEvít)+
nMsg
+1);

101 
pEvít
->
ba£
.
√xtPå
 = 0;

102 
pEvít
->
ba£
.
¥oc
 = 
t˛S¸ùtEvít
;

103 
pEvít
->
zS¸ùt
 = (*)&pEvent[1];

104 
	`mem˝y
(
pEvít
->
zS¸ùt
, 
zMsg
, 
nMsg
+1);

105 
pEvít
->
öãΩ
 = 
p
->interp;

107 
	`T˛_ThªadQueueEvít
(
p
->
∑ª¡
, (
T˛_Evít
 *)
pEvít
, 
TCL_QUEUE_TAIL
);

108 
	`T˛_ThªadAÀπ
(
p
->
∑ª¡
);

109 
	}
}

114 
T˛_ThªadCª©eTy≥
 
	$t˛S¸ùtThªad
(
Clõ¡D©a
 
pSqlThªad
){

115 
T˛_I¡îp
 *
öãΩ
;

116 
T˛_Obj
 *
pRes
;

117 
T˛_Obj
 *
pLi°
;

118 
rc
;

119 
SqlThªad
 *
p
 = (SqlThªad *)
pSqlThªad
;

120 
	`Sqlôëe°_muãx_Inô
(
T˛_I¡îp
*);

122 
öãΩ
 = 
	`T˛_Cª©eI¡îp
();

123 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "˛ock_£c⁄ds", 
˛ock_£c⁄ds_¥oc
, 0, 0);

124 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sq…hªad", 
sq…hªad_¥oc
, 
pSqlThªad
, 0);

125 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

126 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_blockög_°ï", 
blockög_°ï_¥oc
,0,0);

127 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

128 "sqlôe3_blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, (*)1, 0);

129 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

130 "sqlôe3_n⁄blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, 0, 0);

132 
	`Sqlôëe°1_Inô
(
öãΩ
);

133 
	`Sqlôëe°_muãx_Inô
(
öãΩ
);

134 
	`Sqlôe3_Inô
(
öãΩ
);

136 
rc
 = 
	`T˛_EvÆ
(
öãΩ
, 
p
->
zS¸ùt
);

137 
pRes
 = 
	`T˛_GëObjResu…
(
öãΩ
);

138 
pLi°
 = 
	`T˛_NewObj
();

139 
	`T˛_In¸RefCou¡
(
pLi°
);

140 
	`T˛_In¸RefCou¡
(
pRes
);

142 if–
rc
!=
TCL_OK
 ){

143 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
("error", -1));

144 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
pRes
);

145 
	`po°ToP¨ít
(
p
, 
pLi°
);

146 
	`T˛_De¸RefCou¡
(
pLi°
);

147 
pLi°
 = 
	`T˛_NewObj
();

150 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
("set", -1));

151 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
	`T˛_NewSåögObj
(
p
->
zV¨«me
, -1));

152 
	`T˛_Li°ObjAµídEÀmít
(
öãΩ
, 
pLi°
, 
pRes
);

153 
	`po°ToP¨ít
(
p
, 
pLi°
);

155 
	`ck‰ì
((*)
p
);

156 
	`T˛_De¸RefCou¡
(
pLi°
);

157 
	`T˛_De¸RefCou¡
(
pRes
);

158 
	`T˛_DñëeI¡îp
(
öãΩ
);

159  
	`T˛_DoO√Evít
(
TCL_ALL_EVENTS
|
TCL_DONT_WAIT
) );

160 
	`T˛_ExôThªad
(0);

161 
TCL_THREAD_CREATE_RETURN
;

162 
	}
}

174 
SQLITE_TCLAPI
 
	$sq…hªad_•awn
(

175 
Clõ¡D©a
 
˛õ¡D©a
,

176 
T˛_I¡îp
 *
öãΩ
,

177 
objc
,

178 
T˛_Obj
 *
CONST
 
objv
[]

180 
T˛_ThªadId
 
x
;

181 
SqlThªad
 *
pNew
;

182 
rc
;

184 
nV¨«me
; *
zV¨«me
;

185 
nS¸ùt
; *
zS¸ùt
;

188 c⁄° 
nSèck
 = 
TCL_THREAD_STACK_DEFAULT
;

189 c⁄° 
Êags
 = 
TCL_THREAD_NOFLAGS
;

191 
	`as£π
(
objc
==4);

192 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

193 
	`UNUSED_PARAMETER
(
objc
);

195 
zV¨«me
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nV¨«me
);

196 
zS¸ùt
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nS¸ùt
);

198 
pNew
 = (
SqlThªad
 *)
	`ckÆloc
((SqlThªad)+
nV¨«me
+
nS¸ùt
+2);

199 
pNew
->
zV¨«me
 = (*)&pNew[1];

200 
pNew
->
zS¸ùt
 = (*)&pNew->
zV¨«me
[
nV¨«me
+1];

201 
	`mem˝y
(
pNew
->
zV¨«me
, zV¨«me, 
nV¨«me
+1);

202 
	`mem˝y
(
pNew
->
zS¸ùt
, zS¸ùt, 
nS¸ùt
+1);

203 
pNew
->
∑ª¡
 = 
	`T˛_GëCuºítThªad
();

204 
pNew
->
öãΩ
 = interp;

206 
rc
 = 
	`T˛_Cª©eThªad
(&
x
, 
t˛S¸ùtThªad
, (*)
pNew
, 
nSèck
, 
Êags
);

207 if–
rc
!=
TCL_OK
 ){

208 
	`T˛_AµídResu…
(
öãΩ
, "Error in Tcl_CreateThread()", 0);

209 
	`ck‰ì
((*)
pNew
);

210  
TCL_ERROR
;

213  
TCL_OK
;

214 
	}
}

227 
SQLITE_TCLAPI
 
	$sq…hªad_∑ª¡
(

228 
Clõ¡D©a
 
˛õ¡D©a
,

229 
T˛_I¡îp
 *
öãΩ
,

230 
objc
,

231 
T˛_Obj
 *
CONST
 
objv
[]

233 
EvÆEvít
 *
pEvít
;

234 *
zMsg
;

235 
nMsg
;

236 
SqlThªad
 *
p
 = (SqlThªad *)
˛õ¡D©a
;

238 
	`as£π
(
objc
==3);

239 
	`UNUSED_PARAMETER
(
objc
);

241 if–
p
==0 ){

242 
	`T˛_AµídResu…
(
öãΩ
, "noÖarentÅhread", 0);

243  
TCL_ERROR
;

246 
zMsg
 = 
	`T˛_GëSåögFromObj
(
objv
[2], &
nMsg
);

247 
pEvít
 = (
EvÆEvít
 *)
	`ckÆloc
((EvÆEvít)+
nMsg
+1);

248 
pEvít
->
ba£
.
√xtPå
 = 0;

249 
pEvít
->
ba£
.
¥oc
 = 
t˛S¸ùtEvít
;

250 
pEvít
->
zS¸ùt
 = (*)&pEvent[1];

251 
	`mem˝y
(
pEvít
->
zS¸ùt
, 
zMsg
, 
nMsg
+1);

252 
pEvít
->
öãΩ
 = 
p
->interp;

253 
	`T˛_ThªadQueueEvít
(
p
->
∑ª¡
, (
T˛_Evít
 *)
pEvít
, 
TCL_QUEUE_TAIL
);

254 
	`T˛_ThªadAÀπ
(
p
->
∑ª¡
);

256  
TCL_OK
;

257 
	}
}

259 
	$xBusy
(*
pArg
, 
nBusy
){

260 
	`UNUSED_PARAMETER
(
pArg
);

261 
	`UNUSED_PARAMETER
(
nBusy
);

262 
	`sqlôe3_¶ìp
(50);

264 
	}
}

272 
SQLITE_TCLAPI
 
	$sq…hªad_›í
(

273 
Clõ¡D©a
 
˛õ¡D©a
,

274 
T˛_I¡îp
 *
öãΩ
,

275 
objc
,

276 
T˛_Obj
 *
CONST
 
objv
[]

278 
	`sqlôe3Te°MakePoöãrSå
(
T˛_I¡îp
 *
öãΩ
, *
zPå
, *
p
);

280 c⁄° *
zFûíame
;

281 
sqlôe3
 *
db
;

282 
zBuf
[100];

283 
	`Md5_Regi°î
(
sqlôe3
*,**,c⁄° 
sqlôe3_≠i_routöes
*);

285 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

286 
	`UNUSED_PARAMETER
(
objc
);

288 
zFûíame
 = 
	`T˛_GëSåög
(
objv
[2]);

289 
	`sqlôe3_›í
(
zFûíame
, &
db
);

290 #ifde‡
SQLITE_HAS_CODEC


291 if–
db
 && 
objc
>=4 ){

292 c⁄° *
zKey
;

293 
nKey
;

294 
rc
;

295 
zKey
 = 
	`T˛_GëSåögFromObj
(
objv
[3], &
nKey
);

296 
rc
 = 
	`sqlôe3_key
(
db
, 
zKey
, 
nKey
);

297 if–
rc
!=
SQLITE_OK
 ){

298 *
zEºMsg
 = 
	`sqlôe3_m¥ötf
("îr‹ %d: %s", 
rc
, 
	`sqlôe3_îrmsg
(
db
));

299 
	`sqlôe3_˛o£
(
db
);

300 
	`T˛_AµídResu…
(
öãΩ
, 
zEºMsg
, (*)0);

301 
	`sqlôe3_‰ì
(
zEºMsg
);

302  
TCL_ERROR
;

306 
	`Md5_Regi°î
(
db
, 0, 0);

307 
	`sqlôe3_busy_h™dÀr
(
db
, 
xBusy
, 0);

309 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
db
ËË 
TCL_ERROR
;

310 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

312  
TCL_OK
;

313 
	}
}

322 
SQLITE_TCLAPI
 
	$sq…hªad_id
(

323 
Clõ¡D©a
 
˛õ¡D©a
,

324 
T˛_I¡îp
 *
öãΩ
,

325 
objc
,

326 
T˛_Obj
 *
CONST
 
objv
[]

328 
T˛_ThªadId
 
id
 = 
	`T˛_GëCuºítThªad
();

329 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
	`SQLITE_PTR_TO_INT
(
id
)));

330 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

331 
	`UNUSED_PARAMETER
(
objc
);

332 
	`UNUSED_PARAMETER
(
objv
);

333  
TCL_OK
;

334 
	}
}

340 
SQLITE_TCLAPI
 
	$sq…hªad_¥oc
(

341 
Clõ¡D©a
 
˛õ¡D©a
,

342 
T˛_I¡îp
 *
öãΩ
,

343 
objc
,

344 
T˛_Obj
 *
CONST
 
objv
[]

346 
	sSubComm™d
 {

347 *
zName
;

348 
T˛_ObjCmdProc
 *
xProc
;

349 
nArg
;

350 *
zUßge
;

351 } 
aSub
[] = {

352 {"∑ª¡", 
sq…hªad_∑ª¡
, 1, "SCRIPT"},

353 {"•awn", 
sq…hªad_•awn
, 2, "VARNAME SCRIPT"},

354 {"›í", 
sq…hªad_›í
, 1, "DBNAME"},

355 {"id", 
sq…hªad_id
, 0, ""},

358 
SubComm™d
 *
pSub
;

359 
rc
;

360 
iIndex
;

362 if–
objc
<2 ){

363 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUB-COMMAND");

364  
TCL_ERROR
;

367 
rc
 = 
	`T˛_GëIndexFromObjSåu˘
(

368 
öãΩ
, 
objv
[1], 
aSub
, ◊Sub[0]), "sub-comm™d", 0, &
iIndex


370 if–
rc
!=
TCL_OK
 ) Ñc;

371 
pSub
 = &
aSub
[
iIndex
];

373 if–
objc
<(
pSub
->
nArg
+2) ){

374 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, 
pSub
->
zUßge
);

375  
TCL_ERROR
;

378  
pSub
->
	`xProc
(
˛õ¡D©a
, 
öãΩ
, 
objc
, 
objv
);

379 
	}
}

388 
SQLITE_TCLAPI
 
	$˛ock_£c⁄ds_¥oc
(

389 
Clõ¡D©a
 
˛õ¡D©a
,

390 
T˛_I¡îp
 *
öãΩ
,

391 
objc
,

392 
T˛_Obj
 *
CONST
 
objv
[]

394 
T˛_Time
 
now
;

395 
	`T˛_GëTime
(&
now
);

396 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
now
.
£c
));

397 
	`UNUSED_PARAMETER
(
˛õ¡D©a
);

398 
	`UNUSED_PARAMETER
(
objc
);

399 
	`UNUSED_PARAMETER
(
objv
);

400  
TCL_OK
;

401 
	}
}

416 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

420 
	~<±hªad.h
>

426 
U∆ockNŸifiˇti⁄
 
	tU∆ockNŸifiˇti⁄
;

427 
	sU∆ockNŸifiˇti⁄
 {

428 
	mfúed
;

429 
±hªad_c⁄d_t
 
	mc⁄d
;

430 
±hªad_muãx_t
 
	mmuãx
;

436 
	$u∆ock_nŸify_cb
(**
≠Arg
, 
nArg
){

437 
i
;

438 
i
=0; i<
nArg
; i++){

439 
U∆ockNŸifiˇti⁄
 *
p
 = (U∆ockNŸifiˇti⁄ *)
≠Arg
[
i
];

440 
	`±hªad_muãx_lock
(&
p
->
muãx
);

441 
p
->
fúed
 = 1;

442 
	`±hªad_c⁄d_sig«l
(&
p
->
c⁄d
);

443 
	`±hªad_muãx_u∆ock
(&
p
->
muãx
);

445 
	}
}

461 
	$waô_f‹_u∆ock_nŸify
(
sqlôe3
 *
db
){

462 
rc
;

463 
U∆ockNŸifiˇti⁄
 
un
;

466 
un
.
fúed
 = 0;

467 
	`±hªad_muãx_öô
(&
un
.
muãx
, 0);

468 
	`±hªad_c⁄d_öô
(&
un
.
c⁄d
, 0);

471 
rc
 = 
	`sqlôe3_u∆ock_nŸify
(
db
, 
u∆ock_nŸify_cb
, (*)&
un
);

472 
	`as£π
–
rc
==
SQLITE_LOCKED
 ||Ñc==
SQLITE_OK
 );

482 if–
rc
==
SQLITE_OK
 ){

483 
	`±hªad_muãx_lock
(&
un
.
muãx
);

484 if–!
un
.
fúed
 ){

485 
	`±hªad_c⁄d_waô
(&
un
.
c⁄d
, &un.
muãx
);

487 
	`±hªad_muãx_u∆ock
(&
un
.
muãx
);

491 
	`±hªad_c⁄d_de°roy
(&
un
.
c⁄d
);

492 
	`±hªad_muãx_de°roy
(&
un
.
muãx
);

494  
rc
;

495 
	}
}

508 
	$sqlôe3_blockög_°ï
(
sqlôe3_°mt
 *
pStmt
){

509 
rc
;

510  
SQLITE_LOCKED
==(
rc
 = 
	`sqlôe3_°ï
(
pStmt
)) ){

511 
rc
 = 
	`waô_f‹_u∆ock_nŸify
(
	`sqlôe3_db_h™dÀ
(
pStmt
));

512 if–
rc
!=
SQLITE_OK
 ) ;

513 
	`sqlôe3_ª£t
(
pStmt
);

515  
rc
;

516 
	}
}

529 
	$sqlôe3_blockög_¥ï¨e_v2
(

530 
sqlôe3
 *
db
,

531 c⁄° *
zSql
,

532 
nSql
,

533 
sqlôe3_°mt
 **
µStmt
,

534 c⁄° **
pz


536 
rc
;

537  
SQLITE_LOCKED
==(
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, 
nSql
, 
µStmt
, 
pz
)) ){

538 
rc
 = 
	`waô_f‹_u∆ock_nŸify
(
db
);

539 if–
rc
!=
SQLITE_OK
 ) ;

541  
rc
;

542 
	}
}

550 
SQLITE_TCLAPI
 
	$blockög_°ï_¥oc
(

551 * 
˛õ¡D©a
,

552 
T˛_I¡îp
 *
öãΩ
,

553 
objc
,

554 
T˛_Obj
 *
CONST
 
objv
[]

557 
sqlôe3_°mt
 *
pStmt
;

558 
rc
;

560 if–
objc
!=2 ){

561 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "STMT");

562  
TCL_ERROR
;

565 
pStmt
 = (
sqlôe3_°mt
*)
	`sqlôe3Te°TextToPå
(
	`T˛_GëSåög
(
objv
[1]));

566 
rc
 = 
	`sqlôe3_blockög_°ï
(
pStmt
);

568 
	`T˛_SëResu…
(
öãΩ
, (*)
	`sqlôe3EºName
(
rc
), 0);

569  
TCL_OK
;

570 
	}
}

576 
SQLITE_TCLAPI
 
	$blockög_¥ï¨e_v2_¥oc
(

577 * 
˛õ¡D©a
,

578 
T˛_I¡îp
 *
öãΩ
,

579 
objc
,

580 
T˛_Obj
 *
CONST
 
objv
[]

582 
sqlôe3
 *
db
;

583 c⁄° *
zSql
;

584 
byãs
;

585 c⁄° *
zTaû
 = 0;

586 
sqlôe3_°mt
 *
pStmt
 = 0;

587 
zBuf
[50];

588 
rc
;

589 
isBlockög
 = !(
˛õ¡D©a
==0);

591 if–
objc
!=5 && objc!=4 ){

592 
	`T˛_AµídResu…
(
öãΩ
, "wrong #árgs: should be \"",

593 
	`T˛_GëSåög
(
objv
[0]), " DB sql bytesÅailvar", 0);

594  
TCL_ERROR
;

596 if–
	`gëDbPoöãr
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[1]), &
db
ËË 
TCL_ERROR
;

597 
zSql
 = 
	`T˛_GëSåög
(
objv
[2]);

598 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[3], &
byãs
ËË 
TCL_ERROR
;

600 if–
isBlockög
 ){

601 
rc
 = 
	`sqlôe3_blockög_¥ï¨e_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, &
zTaû
);

603 
rc
 = 
	`sqlôe3_¥ï¨e_v2
(
db
, 
zSql
, 
byãs
, &
pStmt
, &
zTaû
);

606 
	`as£π
(
rc
==
SQLITE_OK
 || 
pStmt
==0);

607 if–
zTaû
 && 
objc
>=5 ){

608 if–
byãs
>=0 ){

609 
byãs
 = byã†- (
zTaû
-
zSql
);

611 
	`T˛_ObjSëV¨2
(
öãΩ
, 
objv
[4], 0, 
	`T˛_NewSåögObj
(
zTaû
, 
byãs
), 0);

613 if–
rc
!=
SQLITE_OK
 ){

614 
	`as£π
–
pStmt
==0 );

615 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%†", (*)
	`sqlôe3EºName
(
rc
));

616 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 
	`sqlôe3_îrmsg
(
db
), 0);

617  
TCL_ERROR
;

620 if–
pStmt
 ){

621 if–
	`sqlôe3Te°MakePoöãrSå
(
öãΩ
, 
zBuf
, 
pStmt
ËË 
TCL_ERROR
;

622 
	`T˛_AµídResu…
(
öãΩ
, 
zBuf
, 0);

624  
TCL_OK
;

625 
	}
}

635 
	$Sqlôëe°Thªad_Inô
(
T˛_I¡îp
 *
öãΩ
){

636 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sq…hªad", 
sq…hªad_¥oc
, 0, 0);

637 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "˛ock_£c⁄ds", 
˛ock_£c⁄ds_¥oc
, 0, 0);

638 #i‡
SQLITE_OS_UNIX
 && 
	`deföed
(
SQLITE_ENABLE_UNLOCK_NOTIFY
)

639 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "sqlôe3_blockög_°ï", 
blockög_°ï_¥oc
,0,0);

640 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

641 "sqlôe3_blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, (*)1, 0);

642 
	`T˛_Cª©eObjComm™d
(
öãΩ
,

643 "sqlôe3_n⁄blockög_¥ï¨e_v2", 
blockög_¥ï¨e_v2_¥oc
, 0, 0);

645  
TCL_OK
;

646 
	}
}

648 
	$Sqlôëe°Thªad_Inô
(
T˛_I¡îp
 *
öãΩ
){

649  
TCL_OK
;

650 
	}
}

	@test_vfs.c

27 #i‡
SQLITE_TEST


29 
	~"sqlôe3.h
"

30 
	~"sqlôeI¡.h
"

31 #i‡
deföed
(
INCLUDE_SQLITE_TCL_H
)

32 
	~"sqlôe_t˛.h
"

34 
	~"t˛.h
"

37 
Te°vfs
 
	tTe°vfs
;

38 
Te°vfsShm
 
	tTe°vfsShm
;

39 
Te°vfsBuf„r
 
	tTe°vfsBuf„r
;

40 
Te°vfsFûe
 
	tTe°vfsFûe
;

41 
Te°vfsFd
 
	tTe°vfsFd
;

46 
	sTe°vfsFûe
 {

47 
sqlôe3_fûe
 
	mba£
;

48 
Te°vfsFd
 *
	mpFd
;

50 
	#tvfsGëFd
(
pFûe
Ë(((
Te°vfsFûe
 *ÌFûe)->
pFd
)

	)

52 
	sTe°vfsFd
 {

53 
sqlôe3_vfs
 *
	mpVfs
;

54 c⁄° *
	mzFûíame
;

55 
sqlôe3_fûe
 *
	mpRól
;

56 
T˛_Obj
 *
	mpShmId
;

58 
Te°vfsBuf„r
 *
	mpShm
;

59 
u32
 
	mex˛lock
;

60 
u32
 
	msh¨edlock
;

61 
Te°vfsFd
 *
	mpNext
;

65 
	#FAULT_INJECT_NONE
 0

	)

66 
	#FAULT_INJECT_TRANSIENT
 1

	)

67 
	#FAULT_INJECT_PERSISTENT
 2

	)

69 
Te°Fau…Inje˘
 
	tTe°Fau…Inje˘
;

70 
	sTe°Fau…Inje˘
 {

71 
	miC¡
;

72 
	meFau…
;

73 
	mnFaû
;

81 
	sTe°vfs
 {

82 *
	mzName
;

83 
sqlôe3_vfs
 *
	mpP¨ít
;

84 
sqlôe3_vfs
 *
	mpVfs
;

85 
T˛_I¡îp
 *
	möãΩ
;

86 
T˛_Obj
 *
	mpS¸ùt
;

87 
Te°vfsBuf„r
 *
	mpBuf„r
;

88 
	misNoshm
;

89 
	misFuŒshm
;

91 
	mmask
;

93 
Te°Fau…Inje˘
 
	mi€º_îr
;

94 
Te°Fau…Inje˘
 
	mfuŒ_îr
;

95 
Te°Fau…Inje˘
 
	mˇ¡›í_îr
;

98 
	miI€ºC¡
;

99 
	mi€º
;

100 
	mnI€ºFaû
;

101 
	miFuŒC¡
;

102 
	mfuŒîr
;

103 
	mnFuŒFaû
;

106 
	miDevch¨
;

107 
	miSe˘‹size
;

118 
	#TESTVFS_SHMOPEN_MASK
 0x00000001

	)

119 
	#TESTVFS_SHMLOCK_MASK
 0x00000010

	)

120 
	#TESTVFS_SHMMAP_MASK
 0x00000020

	)

121 
	#TESTVFS_SHMBARRIER_MASK
 0x00000040

	)

122 
	#TESTVFS_SHMCLOSE_MASK
 0x00000080

	)

124 
	#TESTVFS_OPEN_MASK
 0x00000100

	)

125 
	#TESTVFS_SYNC_MASK
 0x00000200

	)

126 
	#TESTVFS_DELETE_MASK
 0x00000400

	)

127 
	#TESTVFS_CLOSE_MASK
 0x00000800

	)

128 
	#TESTVFS_WRITE_MASK
 0x00001000

	)

129 
	#TESTVFS_TRUNCATE_MASK
 0x00002000

	)

130 
	#TESTVFS_ACCESS_MASK
 0x00004000

	)

131 
	#TESTVFS_FULLPATHNAME_MASK
 0x00008000

	)

132 
	#TESTVFS_READ_MASK
 0x00010000

	)

133 
	#TESTVFS_UNLOCK_MASK
 0x00020000

	)

134 
	#TESTVFS_LOCK_MASK
 0x00040000

	)

135 
	#TESTVFS_CKLOCK_MASK
 0x00080000

	)

137 
	#TESTVFS_ALL_MASK
 0x000FFFFF

	)

140 
	#TESTVFS_MAX_PAGES
 1024

	)

147 
	sTe°vfsBuf„r
 {

148 *
	mzFûe
;

149 
	mpgsz
;

150 
u8
 *
	maPage
[
TESTVFS_MAX_PAGES
];

151 
Te°vfsFd
 *
	mpFûe
;

152 
Te°vfsBuf„r
 *
	mpNext
;

156 
	#PARENTVFS
(
x
Ë(((
Te°vfs
 *)((x)->
pAµD©a
))->
pP¨ít
)

	)

158 
	#TESTVFS_MAX_ARGS
 12

	)

164 
tvfsClo£
(
sqlôe3_fûe
*);

165 
tvfsRód
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

166 
tvfsWrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
 
iOf°
);

167 
tvfsTrunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

168 
tvfsSync
(
sqlôe3_fûe
*, 
Êags
);

169 
tvfsFûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

170 
tvfsLock
(
sqlôe3_fûe
*, );

171 
tvfsU∆ock
(
sqlôe3_fûe
*, );

172 
tvfsCheckRe£rvedLock
(
sqlôe3_fûe
*, *);

173 
tvfsFûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

174 
tvfsSe˘‹Size
(
sqlôe3_fûe
*);

175 
tvfsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

180 
tvfsO≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

181 
tvfsDñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

182 
tvfsAc˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

183 
tvfsFuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *
zOut
);

184 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


185 *
tvfsDlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

186 
tvfsDlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

187 (*
	$tvfsDlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

188 
	`tvfsDlClo£
(
sqlôe3_vfs
*, *);

190 
	`tvfsR™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

191 
	`tvfsSÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

192 
	`tvfsCuºítTime
(
sqlôe3_vfs
*, *);

194 
	`tvfsShmO≥n
(
sqlôe3_fûe
*);

195 
	`tvfsShmLock
(
sqlôe3_fûe
*, , , );

196 
	`tvfsShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

197 
	`tvfsShmB¨rõr
(
sqlôe3_fûe
*);

198 
	`tvfsShmUnm≠
(
sqlôe3_fûe
*, );

200 
	`tvfsFëch
(
sqlôe3_fûe
*, 
sqlôe3_öt64
, , **);

201 
	`tvfsUn„tch
(
sqlôe3_fûe
*, 
sqlôe3_öt64
, *);

203 
sqlôe3_io_mëhods
 
tvfs_io_mëhods
 = {

205 
tvfsClo£
,

206 
tvfsRód
,

207 
tvfsWrôe
,

208 
tvfsTrunˇã
,

209 
tvfsSync
,

210 
tvfsFûeSize
,

211 
tvfsLock
,

212 
tvfsU∆ock
,

213 
tvfsCheckRe£rvedLock
,

214 
tvfsFûeC⁄åﬁ
,

215 
tvfsSe˘‹Size
,

216 
tvfsDevi˚Ch¨a˘îi°ics
,

217 
tvfsShmM≠
,

218 
tvfsShmLock
,

219 
tvfsShmB¨rõr
,

220 
tvfsShmUnm≠
,

221 
tvfsFëch
,

222 
tvfsUn„tch


223 
	}
};

225 
	$tvfsResu…Code
(
Te°vfs
 *
p
, *
pRc
){

226 
	sîrcode
 {

227 
eCode
;

228 c⁄° *
zCode
;

229 } 
aCode
[] = {

230 { 
SQLITE_OK
, "SQLITE_OK" },

231 { 
SQLITE_ERROR
, "SQLITE_ERROR" },

232 { 
SQLITE_IOERR
, "SQLITE_IOERR" },

233 { 
SQLITE_LOCKED
, "SQLITE_LOCKED" },

234 { 
SQLITE_BUSY
, "SQLITE_BUSY" },

237 c⁄° *
z
;

238 
i
;

240 
z
 = 
	`T˛_GëSåögResu…
(
p
->
öãΩ
);

241 
i
=0; i<
	`AºaySize
(
aCode
); i++){

242 if–0==
	`°rcmp
(
z
, 
aCode
[
i
].
zCode
) ){

243 *
pRc
 = 
aCode
[
i
].
eCode
;

249 
	}
}

251 
	$tvfsInje˘Fau…
(
Te°Fau…Inje˘
 *
p
){

252 
ªt
 = 0;

253 if–
p
->
eFau…
 ){

254 
p
->
iC¡
--;

255 if–
p
->
iC¡
==0 || (p->iC¡<0 &&Ö->
eFau…
==
FAULT_INJECT_PERSISTENT
 ) ){

256 
ªt
 = 1;

257 
p
->
nFaû
++;

260  
ªt
;

261 
	}
}

264 
	$tvfsInje˘I€º
(
Te°vfs
 *
p
){

265  
	`tvfsInje˘Fau…
(&
p
->
i€º_îr
);

266 
	}
}

268 
	$tvfsInje˘FuŒîr
(
Te°vfs
 *
p
){

269  
	`tvfsInje˘Fau…
(&
p
->
fuŒ_îr
);

270 
	}
}

271 
	$tvfsInje˘C™t›íîr
(
Te°vfs
 *
p
){

272  
	`tvfsInje˘Fau…
(&
p
->
ˇ¡›í_îr
);

273 
	}
}

276 
	$tvfsExecT˛
(

277 
Te°vfs
 *
p
,

278 c⁄° *
zMëhod
,

279 
T˛_Obj
 *
¨g1
,

280 
T˛_Obj
 *
¨g2
,

281 
T˛_Obj
 *
¨g3
,

282 
T˛_Obj
 *
¨g4


284 
rc
;

285 
T˛_Obj
 *
pEvÆ
;

286 
	`as£π
–
p
->
pS¸ùt
 );

288 
	`as£π
–
zMëhod
 );

289 
	`as£π
–
p
 );

290 
	`as£π
–
¨g2
==0 || 
¨g1
!=0 );

291 
	`as£π
–
¨g3
==0 || 
¨g2
!=0 );

293 
pEvÆ
 = 
	`T˛_Du∂iˇãObj
(
p
->
pS¸ùt
);

294 
	`T˛_In¸RefCou¡
(
p
->
pS¸ùt
);

295 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
, 
	`T˛_NewSåögObj
(
zMëhod
, -1));

296 if–
¨g1
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg1);

297 if–
¨g2
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg2);

298 if–
¨g3
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg3);

299 if–
¨g4
 ) 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pEvÆ
,árg4);

301 
rc
 = 
	`T˛_EvÆObjEx
(
p
->
öãΩ
, 
pEvÆ
, 
TCL_EVAL_GLOBAL
);

302 if–
rc
!=
TCL_OK
 ){

303 
	`T˛_BackgroundEº‹
(
p
->
öãΩ
);

304 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

306 
	}
}

312 
	$tvfsClo£
(
sqlôe3_fûe
 *
pFûe
){

313 
Te°vfsFûe
 *
pTe°fûe
 = (Te°vfsFûê*)
pFûe
;

314 
Te°vfsFd
 *
pFd
 = 
pTe°fûe
->pFd;

315 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

317 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_CLOSE_MASK
 ){

318 
	`tvfsExecT˛
(
p
, "xClose",

319 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

323 if–
pFd
->
pShmId
 ){

324 
	`T˛_De¸RefCou¡
(
pFd
->
pShmId
);

325 
pFd
->
pShmId
 = 0;

327 if–
pFûe
->
pMëhods
 ){

328 
	`ck‰ì
((*)
pFûe
->
pMëhods
);

330 
	`sqlôe3OsClo£
(
pFd
->
pRól
);

331 
	`ck‰ì
((*)
pFd
);

332 
pTe°fûe
->
pFd
 = 0;

333  
SQLITE_OK
;

334 
	}
}

339 
	$tvfsRód
(

340 
sqlôe3_fûe
 *
pFûe
,

341 *
zBuf
,

342 
iAmt
,

343 
sqlôe_öt64
 
iOf°


345 
rc
 = 
SQLITE_OK
;

346 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

347 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

348 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_READ_MASK
 ){

349 
	`tvfsExecT˛
(
p
, "xRead",

350 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

352 
	`tvfsResu…Code
(
p
, &
rc
);

354 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_READ_MASK
 && 
	`tvfsInje˘I€º
(p) ){

355 
rc
 = 
SQLITE_IOERR
;

357 if–
rc
==
SQLITE_OK
 ){

358 
rc
 = 
	`sqlôe3OsRód
(
pFd
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

360  
rc
;

361 
	}
}

366 
	$tvfsWrôe
(

367 
sqlôe3_fûe
 *
pFûe
,

368 c⁄° *
zBuf
,

369 
iAmt
,

370 
sqlôe_öt64
 
iOf°


372 
rc
 = 
SQLITE_OK
;

373 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

374 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

376 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_WRITE_MASK
 ){

377 
	`tvfsExecT˛
(
p
, "xWrite",

378 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
,

379 
	`T˛_NewWideI¡Obj
(
iOf°
), 
	`T˛_NewI¡Obj
(
iAmt
)

381 
	`tvfsResu…Code
(
p
, &
rc
);

384 if–
rc
==
SQLITE_OK
 && 
	`tvfsInje˘FuŒîr
(
p
) ){

385 
rc
 = 
SQLITE_FULL
;

387 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_WRITE_MASK
 && 
	`tvfsInje˘I€º
(p) ){

388 
rc
 = 
SQLITE_IOERR
;

391 if–
rc
==
SQLITE_OK
 ){

392 
rc
 = 
	`sqlôe3OsWrôe
(
pFd
->
pRól
, 
zBuf
, 
iAmt
, 
iOf°
);

394  
rc
;

395 
	}
}

400 
	$tvfsTrunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

401 
rc
 = 
SQLITE_OK
;

402 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

403 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

405 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_TRUNCATE_MASK
 ){

406 
	`tvfsExecT˛
(
p
, "xTruncate",

407 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
, 0, 0

409 
	`tvfsResu…Code
(
p
, &
rc
);

412 if–
rc
==
SQLITE_OK
 ){

413 
rc
 = 
	`sqlôe3OsTrunˇã
(
pFd
->
pRól
, 
size
);

415  
rc
;

416 
	}
}

421 
	$tvfsSync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

422 
rc
 = 
SQLITE_OK
;

423 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

424 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

426 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SYNC_MASK
 ){

427 *
zFœgs
 = 0;

429  
Êags
 ){

430 
SQLITE_SYNC_NORMAL
:

431 
zFœgs
 = "normal";

433 
SQLITE_SYNC_FULL
:

434 
zFœgs
 = "full";

436 
SQLITE_SYNC_NORMAL
|
SQLITE_SYNC_DATAONLY
:

437 
zFœgs
 = "normal|dataonly";

439 
SQLITE_SYNC_FULL
|
SQLITE_SYNC_DATAONLY
:

440 
zFœgs
 = "full|dataonly";

443 
	`as£π
(0);

446 
	`tvfsExecT˛
(
p
, "xSync",

447 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),ÖFd->
pShmId
,

448 
	`T˛_NewSåögObj
(
zFœgs
, -1), 0

450 
	`tvfsResu…Code
(
p
, &
rc
);

453 if–
rc
==
SQLITE_OK
 && 
	`tvfsInje˘FuŒîr
(
p
ËËr¯
SQLITE_FULL
;

455 if–
rc
==
SQLITE_OK
 ){

456 
rc
 = 
	`sqlôe3OsSync
(
pFd
->
pRól
, 
Êags
);

459  
rc
;

460 
	}
}

465 
	$tvfsFûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

466 
Te°vfsFd
 *
p
 = 
	`tvfsGëFd
(
pFûe
);

467  
	`sqlôe3OsFûeSize
(
p
->
pRól
, 
pSize
);

468 
	}
}

473 
	$tvfsLock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

474 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

475 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

476 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_LOCK_MASK
 ){

477 
zLock
[30];

478 
	`sqlôe3_¢¥ötf
((
zLock
),zLock,"%d",
eLock
);

479 
	`tvfsExecT˛
(
p
, "xLock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

480 
	`T˛_NewSåögObj
(
zLock
, -1), 0, 0);

482  
	`sqlôe3OsLock
(
pFd
->
pRól
, 
eLock
);

483 
	}
}

488 
	$tvfsU∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

489 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

490 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

491 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_UNLOCK_MASK
 ){

492 
zLock
[30];

493 
	`sqlôe3_¢¥ötf
((
zLock
),zLock,"%d",
eLock
);

494 
	`tvfsExecT˛
(
p
, "xU∆ock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

495 
	`T˛_NewSåögObj
(
zLock
, -1), 0, 0);

497 if–
p
->
mask
&
TESTVFS_WRITE_MASK
 && 
	`tvfsInje˘I€º
(p) ){

498  
SQLITE_IOERR_UNLOCK
;

500  
	`sqlôe3OsU∆ock
(
pFd
->
pRól
, 
eLock
);

501 
	}
}

506 
	$tvfsCheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

507 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

508 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

509 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_CKLOCK_MASK
 ){

510 
	`tvfsExecT˛
(
p
, "xCheckRe£rvedLock", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1),

513  
	`sqlôe3OsCheckRe£rvedLock
(
pFd
->
pRól
, 
pResOut
);

514 
	}
}

519 
	$tvfsFûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

520 
Te°vfsFd
 *
p
 = 
	`tvfsGëFd
(
pFûe
);

521 if–
›
==
SQLITE_FCNTL_PRAGMA
 ){

522 **
¨gv
 = (**)
pArg
;

523 if–
	`sqlôe3_°ricmp
(
¨gv
[1],"error")==0 ){

524 
rc
 = 
SQLITE_ERROR
;

525 if–
¨gv
[2] ){

526 c⁄° *
z
 = 
¨gv
[2];

527 
x
 = 
	`©oi
(
z
);

528 if–
x
 ){

529 
rc
 = 
x
;

530  
	`sqlôe3Isdigô
(
z
[0]) ){ z++; }

531  
	`sqlôe3Is•a˚
(
z
[0]) ){ z++; }

533 if–
z
[0] ) 
¨gv
[0] = 
	`sqlôe3_m¥ötf
("%s", z);

535  
rc
;

537 if–
	`sqlôe3_°ricmp
(
¨gv
[1], "filename")==0 ){

538 
¨gv
[0] = 
	`sqlôe3_m¥ötf
("%s", 
p
->
zFûíame
);

539  
SQLITE_OK
;

542  
	`sqlôe3OsFûeC⁄åﬁ
(
p
->
pRól
, 
›
, 
pArg
);

543 
	}
}

548 
	$tvfsSe˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

549 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

550 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

551 if–
p
->
iSe˘‹size
>=0 ){

552  
p
->
iSe˘‹size
;

554  
	`sqlôe3OsSe˘‹Size
(
pFd
->
pRól
);

555 
	}
}

560 
	$tvfsDevi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

561 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

562 
Te°vfs
 *
p
 = (Te°vf†*)
pFd
->
pVfs
->
pAµD©a
;

563 if–
p
->
iDevch¨
>=0 ){

564  
p
->
iDevch¨
;

566  
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pFd
->
pRól
);

567 
	}
}

572 
	$tvfsO≥n
(

573 
sqlôe3_vfs
 *
pVfs
,

574 c⁄° *
zName
,

575 
sqlôe3_fûe
 *
pFûe
,

576 
Êags
,

577 *
pOutFœgs


579 
rc
;

580 
Te°vfsFûe
 *
pTe°fûe
 = (Te°vfsFûê*)
pFûe
;

581 
Te°vfsFd
 *
pFd
;

582 
T˛_Obj
 *
pId
 = 0;

583 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

585 
pFd
 = (
Te°vfsFd
 *)
	`ckÆloc
((Te°vfsFdË+ 
	`PARENTVFS
(
pVfs
)->
szOsFûe
);

586 
	`mem£t
(
pFd
, 0, (
Te°vfsFd
Ë+ 
	`PARENTVFS
(
pVfs
)->
szOsFûe
);

587 
pFd
->
pShm
 = 0;

588 
pFd
->
pShmId
 = 0;

589 
pFd
->
zFûíame
 = 
zName
;

590 
pFd
->
pVfs
 =ÖVfs;

591 
pFd
->
pRól
 = (
sqlôe3_fûe
 *)&pFd[1];

592 
	`mem£t
(
pTe°fûe
, 0, (
Te°vfsFûe
));

593 
pTe°fûe
->
pFd
 =ÖFd;

604 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

605 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_OPEN_MASK
 ){

606 
T˛_Obj
 *
pArg
 = 
	`T˛_NewObj
();

607 
	`T˛_In¸RefCou¡
(
pArg
);

608 if–
Êags
&
SQLITE_OPEN_MAIN_DB
 ){

609 c⁄° *
z
 = &
zName
[
	`°æí
(zName)+1];

610  *
z
 ){

611 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
	`T˛_NewSåögObj
(
z
, -1));

612 
z
 +
	`°æí
(z) + 1;

613 
	`T˛_Li°ObjAµídEÀmít
(0, 
pArg
, 
	`T˛_NewSåögObj
(
z
, -1));

614 
z
 +
	`°æí
(z) + 1;

617 
	`tvfsExecT˛
(
p
, "xO≥n", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1), 
pArg
, 0, 0);

618 
	`T˛_De¸RefCou¡
(
pArg
);

619 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

620 if–
rc
!=
SQLITE_OK
 ) Ñc;

622 
pId
 = 
	`T˛_GëObjResu…
(
p
->
öãΩ
);

626 if–(
p
->
mask
&
TESTVFS_OPEN_MASK
Ë&& 
	`tvfsInje˘I€º
’ËË 
SQLITE_IOERR
;

627 if–
	`tvfsInje˘C™t›íîr
(
p
ËË 
SQLITE_CANTOPEN
;

628 if–
	`tvfsInje˘FuŒîr
(
p
ËË 
SQLITE_FULL
;

630 if–!
pId
 ){

631 
pId
 = 
	`T˛_NewSåögObj
("anon", -1);

633 
	`T˛_In¸RefCou¡
(
pId
);

634 
pFd
->
pShmId
 = 
pId
;

635 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

637 
rc
 = 
	`sqlôe3OsO≥n
(
	`PARENTVFS
(
pVfs
), 
zName
, 
pFd
->
pRól
, 
Êags
, 
pOutFœgs
);

638 if–
pFd
->
pRól
->
pMëhods
 ){

639 
sqlôe3_io_mëhods
 *
pMëhods
;

640 
nByã
;

642 if–
pVfs
->
iVîsi⁄
>1 ){

643 
nByã
 = (
sqlôe3_io_mëhods
);

645 
nByã
 = 
	`off£tof
(
sqlôe3_io_mëhods
, 
xShmM≠
);

648 
pMëhods
 = (
sqlôe3_io_mëhods
 *)
	`ckÆloc
(
nByã
);

649 
	`mem˝y
(
pMëhods
, &
tvfs_io_mëhods
, 
nByã
);

650 
pMëhods
->
iVîsi⁄
 = 
pFd
->
pRól
->pMethods->iVersion;

651 if–
pMëhods
->
iVîsi⁄
>
pVfs
->iVersion ){

652 
pMëhods
->
iVîsi⁄
 = 
pVfs
->iVersion;

654 if–
pVfs
->
iVîsi⁄
>1 && ((
Te°vfs
 *ÌVfs->
pAµD©a
)->
isNoshm
 ){

655 
pMëhods
->
xShmUnm≠
 = 0;

656 
pMëhods
->
xShmLock
 = 0;

657 
pMëhods
->
xShmB¨rõr
 = 0;

658 
pMëhods
->
xShmM≠
 = 0;

660 
pFûe
->
pMëhods
 =ÖMethods;

663  
rc
;

664 
	}
}

671 
	$tvfsDñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

672 
rc
 = 
SQLITE_OK
;

673 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

675 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_DELETE_MASK
 ){

676 
	`tvfsExecT˛
(
p
, "xDelete",

677 
	`T˛_NewSåögObj
(
zP©h
, -1), 
	`T˛_NewI¡Obj
(
dúSync
), 0, 0

679 
	`tvfsResu…Code
(
p
, &
rc
);

681 if–
rc
==
SQLITE_OK
 ){

682 
rc
 = 
	`sqlôe3OsDñëe
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
dúSync
);

684  
rc
;

685 
	}
}

691 
	$tvfsAc˚ss
(

692 
sqlôe3_vfs
 *
pVfs
,

693 c⁄° *
zP©h
,

694 
Êags
,

695 *
pResOut


697 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

698 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_ACCESS_MASK
 ){

699 
rc
;

700 *
zArg
 = 0;

701 if–
Êags
==
SQLITE_ACCESS_EXISTS
 ) 
zArg
 = "SQLITE_ACCESS_EXISTS";

702 if–
Êags
==
SQLITE_ACCESS_READWRITE
 ) 
zArg
 = "SQLITE_ACCESS_READWRITE";

703 if–
Êags
==
SQLITE_ACCESS_READ
 ) 
zArg
 = "SQLITE_ACCESS_READ";

704 
	`tvfsExecT˛
(
p
, "xAccess",

705 
	`T˛_NewSåögObj
(
zP©h
, -1), T˛_NewSåögObj(
zArg
, -1), 0, 0

707 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

708 if–
rc
!=
SQLITE_OK
 ) Ñc;

710 
T˛_I¡îp
 *
öãΩ
 = 
p
->interp;

711 if–
TCL_OK
==
	`T˛_GëBoﬁónFromObj
(0, 
	`T˛_GëObjResu…
(
öãΩ
), 
pResOut
) ){

712  
SQLITE_OK
;

716  
	`sqlôe3OsAc˚ss
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
Êags
, 
pResOut
);

717 
	}
}

724 
	$tvfsFuŒP©h«me
(

725 
sqlôe3_vfs
 *
pVfs
,

726 c⁄° *
zP©h
,

727 
nOut
,

728 *
zOut


730 
Te°vfs
 *
p
 = (Te°vf†*)
pVfs
->
pAµD©a
;

731 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_FULLPATHNAME_MASK
 ){

732 
rc
;

733 
	`tvfsExecT˛
(
p
, "xFuŒP©h«me", 
	`T˛_NewSåögObj
(
zP©h
, -1), 0, 0, 0);

734 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

735 if–
rc
!=
SQLITE_OK
 ) Ñc;

738  
	`sqlôe3OsFuŒP©h«me
(
	`PARENTVFS
(
pVfs
), 
zP©h
, 
nOut
, 
zOut
);

739 
	}
}

741 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


745 *
	$tvfsDlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

746  
	`sqlôe3OsDlO≥n
(
	`PARENTVFS
(
pVfs
), 
zP©h
);

747 
	}
}

754 
	$tvfsDlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

755 
	`sqlôe3OsDlEº‹
(
	`PARENTVFS
(
pVfs
), 
nByã
, 
zEºMsg
);

756 
	}
}

761 (*
	$tvfsDlSym
(
sqlôe3_vfs
 *
pVfs
, *
p
, c⁄° *
zSym
))(){

762  
	`sqlôe3OsDlSym
(
	`PARENTVFS
(
pVfs
), 
p
, 
zSym
);

763 
	}
}

768 
	$tvfsDlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

769 
	`sqlôe3OsDlClo£
(
	`PARENTVFS
(
pVfs
), 
pH™dÀ
);

770 
	}
}

777 
	$tvfsR™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

778  
	`sqlôe3OsR™dom√ss
(
	`PARENTVFS
(
pVfs
), 
nByã
, 
zBufOut
);

779 
	}
}

785 
	$tvfsSÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

786  
	`sqlôe3OsSÀï
(
	`PARENTVFS
(
pVfs
), 
nMi¸o
);

787 
	}
}

792 
	$tvfsCuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

793  
	`PARENTVFS
(
pVfs
)->
	`xCuºítTime
(PARENTVFS’Vfs), 
pTimeOut
);

794 
	}
}

796 
	$tvfsShmO≥n
(
sqlôe3_fûe
 *
pFûe
){

797 
Te°vfs
 *
p
;

798 
rc
 = 
SQLITE_OK
;

799 
Te°vfsBuf„r
 *
pBuf„r
;

800 
Te°vfsFd
 *
pFd
;

802 
pFd
 = 
	`tvfsGëFd
(
pFûe
);

803 
p
 = (
Te°vfs
 *)
pFd
->
pVfs
->
pAµD©a
;

804 
	`as£π
–0==
p
->
isFuŒshm
 );

805 
	`as£π
–
pFd
->
pShmId
 &&ÖFd->
pShm
==0 &&ÖFd->
pNext
==0 );

811 
	`T˛_Re£tResu…
(
p
->
öãΩ
);

812 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMOPEN_MASK
 ){

813 
	`tvfsExecT˛
(
p
, "xShmO≥n", 
	`T˛_NewSåögObj
(
pFd
->
zFûíame
, -1), 0, 0, 0);

814 if–
	`tvfsResu…Code
(
p
, &
rc
) ){

815 if–
rc
!=
SQLITE_OK
 ) Ñc;

819 
	`as£π
–
rc
==
SQLITE_OK
 );

820 if–
p
->
mask
&
TESTVFS_SHMOPEN_MASK
 && 
	`tvfsInje˘I€º
(p) ){

821  
SQLITE_IOERR
;

825 
pBuf„r
=
p
->pBuf„r;ÖBuf„r;ÖBuf„rıBuf„r->
pNext
){

826 if–0==
	`°rcmp
(
pFd
->
zFûíame
, 
pBuf„r
->
zFûe
) ) ;

828 if–!
pBuf„r
 ){

829 
szName
 = ()
	`°æí
(
pFd
->
zFûíame
);

830 
nByã
 = (
Te°vfsBuf„r
Ë+ 
szName
 + 1;

831 
pBuf„r
 = (
Te°vfsBuf„r
 *)
	`ckÆloc
(
nByã
);

832 
	`mem£t
(
pBuf„r
, 0, 
nByã
);

833 
pBuf„r
->
zFûe
 = (*)&pBuffer[1];

834 
	`mem˝y
(
pBuf„r
->
zFûe
, 
pFd
->
zFûíame
, 
szName
+1);

835 
pBuf„r
->
pNext
 = 
p
->pBuffer;

836 
p
->
pBuf„r
 =ÖBuffer;

840 
pFd
->
pNext
 = 
pBuf„r
->
pFûe
;

841 
pBuf„r
->
pFûe
 = 
pFd
;

842 
pFd
->
pShm
 = 
pBuf„r
;

843  
SQLITE_OK
;

844 
	}
}

846 
	$tvfsAŒocPage
(
Te°vfsBuf„r
 *
p
, 
iPage
, 
pgsz
){

847 
	`as£π
–
iPage
<
TESTVFS_MAX_PAGES
 );

848 if–
p
->
aPage
[
iPage
]==0 ){

849 
p
->
aPage
[
iPage
] = (
u8
 *)
	`ckÆloc
(
pgsz
);

850 
	`mem£t
(
p
->
aPage
[
iPage
], 0, 
pgsz
);

851 
p
->
pgsz
 =Ögsz;

853 
	}
}

855 
	$tvfsShmM≠
(

856 
sqlôe3_fûe
 *
pFûe
,

857 
iPage
,

858 
pgsz
,

859 
isWrôe
,

860 vﬁ©ûê**
µ


862 
rc
 = 
SQLITE_OK
;

863 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

864 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

866 if–
p
->
isFuŒshm
 ){

867  
	`sqlôe3OsShmM≠
(
pFd
->
pRól
, 
iPage
, 
pgsz
, 
isWrôe
, 
µ
);

870 if–0==
pFd
->
pShm
 ){

871 
rc
 = 
	`tvfsShmO≥n
(
pFûe
);

872 if–
rc
!=
SQLITE_OK
 ){

873  
rc
;

877 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMMAP_MASK
 ){

878 
T˛_Obj
 *
pArg
 = 
	`T˛_NewObj
();

879 
	`T˛_In¸RefCou¡
(
pArg
);

880 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
iPage
));

881 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
pgsz
));

882 
	`T˛_Li°ObjAµídEÀmít
(
p
->
öãΩ
, 
pArg
, 
	`T˛_NewI¡Obj
(
isWrôe
));

883 
	`tvfsExecT˛
(
p
, "xShmMap",

884 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
, 
pArg
, 0

886 
	`tvfsResu…Code
(
p
, &
rc
);

887 
	`T˛_De¸RefCou¡
(
pArg
);

889 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_SHMMAP_MASK
 && 
	`tvfsInje˘I€º
(p) ){

890 
rc
 = 
SQLITE_IOERR
;

893 if–
rc
==
SQLITE_OK
 && 
isWrôe
 && !
pFd
->
pShm
->
aPage
[
iPage
] ){

894 
	`tvfsAŒocPage
(
pFd
->
pShm
, 
iPage
, 
pgsz
);

896 *
µ
 = (vﬁ©ûê*)
pFd
->
pShm
->
aPage
[
iPage
];

898  
rc
;

899 
	}
}

902 
	$tvfsShmLock
(

903 
sqlôe3_fûe
 *
pFûe
,

904 
of°
,

905 
n
,

906 
Êags


908 
rc
 = 
SQLITE_OK
;

909 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

910 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

911 
nLock
;

912 
zLock
[80];

914 if–
p
->
isFuŒshm
 ){

915  
	`sqlôe3OsShmLock
(
pFd
->
pRól
, 
of°
, 
n
, 
Êags
);

918 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMLOCK_MASK
 ){

919 
	`sqlôe3_¢¥ötf
((
zLock
), zLock, "%d %d", 
of°
, 
n
);

920 
nLock
 = ()
	`°æí
(
zLock
);

921 if–
Êags
 & 
SQLITE_SHM_LOCK
 ){

922 
	`°r˝y
(&
zLock
[
nLock
], "Üock");

924 
	`°r˝y
(&
zLock
[
nLock
], " unlock");

926 
nLock
 +()
	`°æí
(&
zLock
[nLock]);

927 if–
Êags
 & 
SQLITE_SHM_SHARED
 ){

928 
	`°r˝y
(&
zLock
[
nLock
], " shared");

930 
	`°r˝y
(&
zLock
[
nLock
], "Éxclusive");

932 
	`tvfsExecT˛
(
p
, "xShmLock",

933 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
,

934 
	`T˛_NewSåögObj
(
zLock
, -1), 0

936 
	`tvfsResu…Code
(
p
, &
rc
);

939 if–
rc
==
SQLITE_OK
 && 
p
->
mask
&
TESTVFS_SHMLOCK_MASK
 && 
	`tvfsInje˘I€º
(p) ){

940 
rc
 = 
SQLITE_IOERR
;

943 if–
rc
==
SQLITE_OK
 ){

944 
isLock
 = (
Êags
 & 
SQLITE_SHM_LOCK
);

945 
isEx˛
 = (
Êags
 & 
SQLITE_SHM_EXCLUSIVE
);

946 
u32
 
mask
 = (((1<<
n
)-1Ë<< 
of°
);

947 if–
isLock
 ){

948 
Te°vfsFd
 *
p2
;

949 
p2
=
pFd
->
pShm
->
pFûe
;Ö2;Ö2ı2->
pNext
){

950 if–
p2
==
pFd
 ) ;

951 if–(
p2
->
ex˛lock
&
mask
Ë|| (
isEx˛
 &&Ö2->
sh¨edlock
&mask) ){

952 
rc
 = 
SQLITE_BUSY
;

956 if–
rc
==
SQLITE_OK
 ){

957 if–
isEx˛
 ) 
pFd
->
ex˛lock
 |
mask
;

958 if–!
isEx˛
 ) 
pFd
->
sh¨edlock
 |
mask
;

961 if–
isEx˛
 ) 
pFd
->
ex˛lock
 &(~
mask
);

962 if–!
isEx˛
 ) 
pFd
->
sh¨edlock
 &(~
mask
);

966  
rc
;

967 
	}
}

969 
	$tvfsShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

970 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

971 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

973 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMBARRIER_MASK
 ){

974 c⁄° *
z
 = 
pFd
->
pShm
 ?ÖFd->pShm->
zFûe
 : "";

975 
	`tvfsExecT˛
(
p
, "xShmB¨rõr", 
	`T˛_NewSåögObj
(
z
, -1), 
pFd
->
pShmId
, 0, 0);

978 if–
p
->
isFuŒshm
 ){

979 
	`sqlôe3OsShmB¨rõr
(
pFd
->
pRól
);

982 
	}
}

984 
	$tvfsShmUnm≠
(

985 
sqlôe3_fûe
 *
pFûe
,

986 
dñëeFœg


988 
rc
 = 
SQLITE_OK
;

989 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

990 
Te°vfs
 *
p
 = (Te°vf†*)(
pFd
->
pVfs
->
pAµD©a
);

991 
Te°vfsBuf„r
 *
pBuf„r
 = 
pFd
->
pShm
;

992 
Te°vfsFd
 **
µFd
;

994 if–
p
->
isFuŒshm
 ){

995  
	`sqlôe3OsShmUnm≠
(
pFd
->
pRól
, 
dñëeFœg
);

998 if–!
pBuf„r
 )  
SQLITE_OK
;

999 
	`as£π
–
pFd
->
pShmId
 &&ÖFd->
pShm
 );

1001 if–
p
->
pS¸ùt
 &&Ö->
mask
&
TESTVFS_SHMCLOSE_MASK
 ){

1002 
	`tvfsExecT˛
(
p
, "xShmUnmap",

1003 
	`T˛_NewSåögObj
(
pFd
->
pShm
->
zFûe
, -1),ÖFd->
pShmId
, 0, 0

1005 
	`tvfsResu…Code
(
p
, &
rc
);

1008 
µFd
=&
pBuf„r
->
pFûe
; *µFd!=
pFd
;ÖpFd=&((*µFd)->
pNext
));

1009 
	`as£π
–(*
µFd
)==
pFd
 );

1010 *
µFd
 = 
pFd
->
pNext
;

1011 
pFd
->
pNext
 = 0;

1013 if–
pBuf„r
->
pFûe
==0 ){

1014 
i
;

1015 
Te°vfsBuf„r
 **
µ
;

1016 
µ
=&
p
->
pBuf„r
; *µ!ıBuf„r;Öp=&((*µ)->
pNext
));

1017 *
µ
 = (*µ)->
pNext
;

1018 
i
=0; 
pBuf„r
->
aPage
[i]; i++){

1019 
	`ck‰ì
((*)
pBuf„r
->
aPage
[
i
]);

1021 
	`ck‰ì
((*)
pBuf„r
);

1023 
pFd
->
pShm
 = 0;

1025  
rc
;

1026 
	}
}

1028 
	$tvfsFëch
(

1029 
sqlôe3_fûe
 *
pFûe
,

1030 
sqlôe3_öt64
 
iOf°
,

1031 
iAmt
,

1032 **
µ


1034 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

1035  
	`sqlôe3OsFëch
(
pFd
->
pRól
, 
iOf°
, 
iAmt
, 
µ
);

1036 
	}
}

1038 
	$tvfsUn„tch
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe3_öt64
 
iOf°
, *
p
){

1039 
Te°vfsFd
 *
pFd
 = 
	`tvfsGëFd
(
pFûe
);

1040  
	`sqlôe3OsUn„tch
(
pFd
->
pRól
, 
iOf°
, 
p
);

1041 
	}
}

1043 
SQLITE_TCLAPI
 
	$ã°vfs_obj_cmd
(

1044 
Clõ¡D©a
 
cd
,

1045 
T˛_I¡îp
 *
öãΩ
,

1046 
objc
,

1047 
T˛_Obj
 *
CONST
 
objv
[]

1049 
Te°vfs
 *
p
 = (Te°vf†*)
cd
;

1051 
	eDB_íum
 {

1052 
CMD_SHM
, 
CMD_DELETE
, 
CMD_FILTER
, 
CMD_IOERR
, 
CMD_SCRIPT
,

1053 
CMD_DEVCHAR
, 
CMD_SECTORSIZE
, 
CMD_FULLERR
, 
CMD_CANTOPENERR


1055 
	sTe°vfsSubcmd
 {

1056 *
zName
;

1057 
DB_íum
 
eCmd
;

1058 } 
aSubcmd
[] = {

1059 { "shm", 
CMD_SHM
 },

1060 { "dñëe", 
CMD_DELETE
 },

1061 { "fûãr", 
CMD_FILTER
 },

1062 { "i€º", 
CMD_IOERR
 },

1063 { "fuŒîr", 
CMD_FULLERR
 },

1064 { "ˇ¡›íîr", 
CMD_CANTOPENERR
 },

1065 { "s¸ùt", 
CMD_SCRIPT
 },

1066 { "devch¨", 
CMD_DEVCHAR
 },

1067 { "£˘‹size", 
CMD_SECTORSIZE
 },

1070 
i
;

1072 if–
objc
<2 ){

1073 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "SUBCOMMAND ...");

1074  
TCL_ERROR
;

1076 if–
	`T˛_GëIndexFromObjSåu˘
(

1077 
öãΩ
, 
objv
[1], 
aSubcmd
, ◊Subcmd[0]), "subcomm™d", 0, &
i
)

1079  
TCL_ERROR
;

1081 
	`T˛_Re£tResu…
(
öãΩ
);

1083  
aSubcmd
[
i
].
eCmd
 ){

1084 
CMD_SHM
: {

1085 
T˛_Obj
 *
pObj
;

1086 
rc
;

1087 
Te°vfsBuf„r
 *
pBuf„r
;

1088 *
zName
;

1089 if–
objc
!=3 && objc!=4 ){

1090 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "FILE ?VALUE?");

1091  
TCL_ERROR
;

1093 
zName
 = 
	`ckÆloc
(
p
->
pP¨ít
->
mxP©h«me
);

1094 
rc
 = 
p
->
pP¨ít
->
	`xFuŒP©h«me
(

1095 
p
->
pP¨ít
, 
	`T˛_GëSåög
(
objv
[2]),

1096 
p
->
pP¨ít
->
mxP©h«me
, 
zName


1098 if–
rc
!=
SQLITE_OK
 ){

1099 
	`T˛_AµídResu…
(
öãΩ
, "failedÅo get fullÖath: ",

1100 
	`T˛_GëSåög
(
objv
[2]), 0);

1101 
	`ck‰ì
(
zName
);

1102  
TCL_ERROR
;

1104 
pBuf„r
=
p
->pBuf„r;ÖBuf„r;ÖBuf„rıBuf„r->
pNext
){

1105 if–0==
	`°rcmp
(
pBuf„r
->
zFûe
, 
zName
) ) ;

1107 
	`ck‰ì
(
zName
);

1108 if–!
pBuf„r
 ){

1109 
	`T˛_AµídResu…
(
öãΩ
, "nÿsuch fûe: ", 
	`T˛_GëSåög
(
objv
[2]), 0);

1110  
TCL_ERROR
;

1112 if–
objc
==4 ){

1113 
n
;

1114 
u8
 *
a
 = 
	`T˛_GëByãAºayFromObj
(
objv
[3], &
n
);

1115 
pgsz
 = 
pBuf„r
->pgsz;

1116 if–
pgsz
==0 )Ögsz = 65536;

1117 
i
=0; i*
pgsz
<
n
; i++){

1118 
nByã
 = 
pgsz
;

1119 
	`tvfsAŒocPage
(
pBuf„r
, 
i
, 
pgsz
);

1120 if–
n
-
i
*
pgsz
<pgsz ){

1121 
nByã
 = 
n
;

1123 
	`mem˝y
(
pBuf„r
->
aPage
[
i
], &
a
[i*
pgsz
], 
nByã
);

1127 
pObj
 = 
	`T˛_NewObj
();

1128 
i
=0; 
pBuf„r
->
aPage
[i]; i++){

1129 
pgsz
 = 
pBuf„r
->pgsz;

1130 if–
pgsz
==0 )Ögsz = 65536;

1131 
	`T˛_AµídObjToObj
(
pObj
, 
	`T˛_NewByãAºayObj
(
pBuf„r
->
aPage
[
i
], 
pgsz
));

1133 
	`T˛_SëObjResu…
(
öãΩ
, 
pObj
);

1141 
CMD_FILTER
: {

1142 
	sVfsMëhod
 {

1143 *
zName
;

1144 
mask
;

1145 } 
vfsmëhod
 [] = {

1146 { "xShmO≥n", 
TESTVFS_SHMOPEN_MASK
 },

1147 { "xShmLock", 
TESTVFS_SHMLOCK_MASK
 },

1148 { "xShmB¨rõr", 
TESTVFS_SHMBARRIER_MASK
 },

1149 { "xShmUnm≠", 
TESTVFS_SHMCLOSE_MASK
 },

1150 { "xShmM≠", 
TESTVFS_SHMMAP_MASK
 },

1151 { "xSync", 
TESTVFS_SYNC_MASK
 },

1152 { "xDñëe", 
TESTVFS_DELETE_MASK
 },

1153 { "xWrôe", 
TESTVFS_WRITE_MASK
 },

1154 { "xRód", 
TESTVFS_READ_MASK
 },

1155 { "xTrunˇã", 
TESTVFS_TRUNCATE_MASK
 },

1156 { "xO≥n", 
TESTVFS_OPEN_MASK
 },

1157 { "xClo£", 
TESTVFS_CLOSE_MASK
 },

1158 { "xAc˚ss", 
TESTVFS_ACCESS_MASK
 },

1159 { "xFuŒP©h«me", 
TESTVFS_FULLPATHNAME_MASK
 },

1160 { "xU∆ock", 
TESTVFS_UNLOCK_MASK
 },

1161 { "xLock", 
TESTVFS_LOCK_MASK
 },

1162 { "xCheckRe£rvedLock", 
TESTVFS_CKLOCK_MASK
 },

1164 
T˛_Obj
 **
≠EÀm
 = 0;

1165 
nEÀm
 = 0;

1166 
mask
 = 0;

1167 if–
objc
!=3 ){

1168 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "LIST");

1169  
TCL_ERROR
;

1171 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nEÀm
, &
≠EÀm
) ){

1172  
TCL_ERROR
;

1174 
	`T˛_Re£tResu…
(
öãΩ
);

1175 
i
=0; i<
nEÀm
; i++){

1176 
iMëhod
;

1177 *
zEÀm
 = 
	`T˛_GëSåög
(
≠EÀm
[
i
]);

1178 
iMëhod
=0; iMëhod<
	`AºaySize
(
vfsmëhod
); iMethod++){

1179 if–
	`°rcmp
(
zEÀm
, 
vfsmëhod
[
iMëhod
].
zName
)==0 ){

1180 
mask
 |
vfsmëhod
[
iMëhod
].mask;

1184 if–
iMëhod
==
	`AºaySize
(
vfsmëhod
) ){

1185 
	`T˛_AµídResu…
(
öãΩ
, "unknow¿mëhod: ", 
zEÀm
, 0);

1186  
TCL_ERROR
;

1189 
p
->
mask
 = mask;

1199 
CMD_SCRIPT
: {

1200 if–
objc
==3 ){

1201 
nByã
;

1202 if–
p
->
pS¸ùt
 ){

1203 
	`T˛_De¸RefCou¡
(
p
->
pS¸ùt
);

1204 
p
->
pS¸ùt
 = 0;

1206 
	`T˛_GëSåögFromObj
(
objv
[2], &
nByã
);

1207 if–
nByã
>0 ){

1208 
p
->
pS¸ùt
 = 
	`T˛_Du∂iˇãObj
(
objv
[2]);

1209 
	`T˛_In¸RefCou¡
(
p
->
pS¸ùt
);

1211 }if–
objc
!=2 ){

1212 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?SCRIPT?");

1213  
TCL_ERROR
;

1216 
	`T˛_Re£tResu…
(
öãΩ
);

1217 if–
p
->
pS¸ùt
 ) 
	`T˛_SëObjResu…
(
öãΩ
,Ö->pScript);

1227 
CMD_CANTOPENERR
:

1228 
CMD_IOERR
:

1229 
CMD_FULLERR
: {

1230 
Te°Fau…Inje˘
 *
pTe°
 = 0;

1231 
iRë
;

1233  
aSubcmd
[
i
].
eCmd
 ){

1234 
CMD_IOERR
: 
pTe°
 = &
p
->
i€º_îr
; ;

1235 
CMD_FULLERR
: 
pTe°
 = &
p
->
fuŒ_îr
; ;

1236 
CMD_CANTOPENERR
: 
pTe°
 = &
p
->
ˇ¡›í_îr
; ;

1237 : 
	`as£π
(0);

1239 
iRë
 = 
pTe°
->
nFaû
;

1240 
pTe°
->
nFaû
 = 0;

1241 
pTe°
->
eFau…
 = 0;

1242 
pTe°
->
iC¡
 = 0;

1244 if–
objc
==4 ){

1245 
iC¡
, 
iPîsi°
;

1246 if–
TCL_OK
!=
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iC¡
)

1247 || 
TCL_OK
!=
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[3], &
iPîsi°
)

1249  
TCL_ERROR
;

1251 
pTe°
->
eFau…
 = 
iPîsi°
?
FAULT_INJECT_PERSISTENT
:
FAULT_INJECT_TRANSIENT
;

1252 
pTe°
->
iC¡
 = iCnt;

1253 }if–
objc
!=2 ){

1254 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?CNT PERSIST?");

1255  
TCL_ERROR
;

1257 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
iRë
));

1261 
CMD_DELETE
: {

1262 
	`T˛_DñëeComm™d
(
öãΩ
, 
	`T˛_GëSåög
(
objv
[0]));

1266 
CMD_DEVCHAR
: {

1267 
	sDevi˚Fœg
 {

1268 *
zName
;

1269 
iVÆue
;

1270 } 
aFœg
[] = {

1272 { "©omic", 
SQLITE_IOCAP_ATOMIC
 },

1273 { "©omic512", 
SQLITE_IOCAP_ATOMIC512
 },

1274 { "©omic1k", 
SQLITE_IOCAP_ATOMIC1K
 },

1275 { "©omic2k", 
SQLITE_IOCAP_ATOMIC2K
 },

1276 { "©omic4k", 
SQLITE_IOCAP_ATOMIC4K
 },

1277 { "©omic8k", 
SQLITE_IOCAP_ATOMIC8K
 },

1278 { "©omic16k", 
SQLITE_IOCAP_ATOMIC16K
 },

1279 { "©omic32k", 
SQLITE_IOCAP_ATOMIC32K
 },

1280 { "©omic64k", 
SQLITE_IOCAP_ATOMIC64K
 },

1281 { "£quítül", 
SQLITE_IOCAP_SEQUENTIAL
 },

1282 { "ß„_≠≥nd", 
SQLITE_IOCAP_SAFE_APPEND
 },

1283 { "undñëabÀ_whí_›í", 
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 },

1284 { "powîß„_ovîwrôe", 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 },

1285 { "immuèbÀ", 
SQLITE_IOCAP_IMMUTABLE
 },

1288 
T˛_Obj
 *
pRë
;

1289 
iFœg
;

1291 if–
objc
>3 ){

1292 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?ATTR-LIST?");

1293  
TCL_ERROR
;

1295 if–
objc
==3 ){

1296 
j
;

1297 
iNew
 = 0;

1298 
T˛_Obj
 **
Êags
 = 0;

1299 
nFœgs
 = 0;

1301 if–
	`T˛_Li°ObjGëEÀmíts
(
öãΩ
, 
objv
[2], &
nFœgs
, &
Êags
) ){

1302  
TCL_ERROR
;

1305 
j
=0; j<
nFœgs
; j++){

1306 
idx
 = 0;

1307 if–
	`T˛_GëIndexFromObjSåu˘
(
öãΩ
, 
Êags
[
j
], 
aFœg
,

1308 (
aFœg
[0]), "Êag", 0, &
idx
)

1310  
TCL_ERROR
;

1312 if–
aFœg
[
idx
].
iVÆue
<0 && 
nFœgs
>1 ){

1313 
	`T˛_AµídResu…
(
öãΩ
, "bad fœgs: ", 
	`T˛_GëSåög
(
objv
[2]), 0);

1314  
TCL_ERROR
;

1316 
iNew
 |
aFœg
[
idx
].
iVÆue
;

1319 
p
->
iDevch¨
 = 
iNew
| 0x10000000;

1322 
pRë
 = 
	`T˛_NewObj
();

1323 
iFœg
=0; iFœg<(
aFœg
)/(aFlag[0]); iFlag++){

1324 if–
p
->
iDevch¨
 & 
aFœg
[
iFœg
].
iVÆue
 ){

1325 
	`T˛_Li°ObjAµídEÀmít
(

1326 
öãΩ
, 
pRë
, 
	`T˛_NewSåögObj
(
aFœg
[
iFœg
].
zName
, -1)

1330 
	`T˛_SëObjResu…
(
öãΩ
, 
pRë
);

1335 
CMD_SECTORSIZE
: {

1336 if–
objc
>3 ){

1337 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 2, 
objv
, "?VALUE?");

1338  
TCL_ERROR
;

1340 if–
objc
==3 ){

1341 
iNew
 = 0;

1342 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[2], &
iNew
) ){

1343  
TCL_ERROR
;

1345 
p
->
iSe˘‹size
 = 
iNew
;

1347 
	`T˛_SëObjResu…
(
öãΩ
, 
	`T˛_NewI¡Obj
(
p
->
iSe˘‹size
));

1352  
TCL_OK
;

1353 
	}
}

1355 
SQLITE_TCLAPI
 
	$ã°vfs_obj_dñ
(
Clõ¡D©a
 
cd
){

1356 
Te°vfs
 *
p
 = (Te°vf†*)
cd
;

1357 if–
p
->
pS¸ùt
 ) 
	`T˛_De¸RefCou¡
(p->pScript);

1358 
	`sqlôe3_vfs_uƒegi°î
(
p
->
pVfs
);

1359 
	`ck‰ì
((*)
p
->
pVfs
);

1360 
	`ck‰ì
((*)
p
);

1361 
	}
}

1398 
SQLITE_TCLAPI
 
	$ã°vfs_cmd
(

1399 
Clõ¡D©a
 
cd
,

1400 
T˛_I¡îp
 *
öãΩ
,

1401 
objc
,

1402 
T˛_Obj
 *
CONST
 
objv
[]

1404 
sqlôe3_vfs
 
tvfs_vfs
 = {

1411 
tvfsO≥n
,

1412 
tvfsDñëe
,

1413 
tvfsAc˚ss
,

1414 
tvfsFuŒP©h«me
,

1415 #i‚de‡
SQLITE_OMIT_LOAD_EXTENSION


1416 
tvfsDlO≥n
,

1417 
tvfsDlEº‹
,

1418 
tvfsDlSym
,

1419 
tvfsDlClo£
,

1426 
tvfsR™dom√ss
,

1427 
tvfsSÀï
,

1428 
tvfsCuºítTime
,

1436 
Te°vfs
 *
p
;

1437 
sqlôe3_vfs
 *
pVfs
;

1438 *
zVfs
;

1439 
nByã
;

1441 
i
;

1442 
isNoshm
 = 0;

1443 
isFuŒshm
 = 0;

1444 
isDeÁu…
 = 0;

1445 
szOsFûe
 = 0;

1446 
mxP©h«me
 = -1;

1447 
iVîsi⁄
 = 3;

1449 if–
objc
<2 || 0!=(objc%2ËË
bad_¨gs
;

1450 
i
=2; i<
objc
; i += 2){

1451 
nSwôch
;

1452 *
zSwôch
;

1453 
zSwôch
 = 
	`T˛_GëSåögFromObj
(
objv
[
i
], &
nSwôch
);

1455 if–
nSwôch
>2 && 0==
	`°∫cmp
("-noshm", 
zSwôch
,ÇSwitch) ){

1456 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isNoshm
) ){

1457  
TCL_ERROR
;

1459 if–
isNoshm
 ) 
isFuŒshm
 = 0;

1461 if–
nSwôch
>2 && 0==
	`°∫cmp
("-deÁu…", 
zSwôch
,ÇSwitch) ){

1462 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isDeÁu…
) ){

1463  
TCL_ERROR
;

1466 if–
nSwôch
>2 && 0==
	`°∫cmp
("-szosfûe", 
zSwôch
,ÇSwitch) ){

1467 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
szOsFûe
) ){

1468  
TCL_ERROR
;

1471 if–
nSwôch
>2 && 0==
	`°∫cmp
("-mx∑th«me", 
zSwôch
,ÇSwitch) ){

1472 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
mxP©h«me
) ){

1473  
TCL_ERROR
;

1476 if–
nSwôch
>2 && 0==
	`°∫cmp
("-ivîsi⁄", 
zSwôch
,ÇSwitch) ){

1477 if–
	`T˛_GëI¡FromObj
(
öãΩ
, 
objv
[
i
+1], &
iVîsi⁄
) ){

1478  
TCL_ERROR
;

1481 if–
nSwôch
>2 && 0==
	`°∫cmp
("-fuŒshm", 
zSwôch
,ÇSwitch) ){

1482 if–
	`T˛_GëBoﬁónFromObj
(
öãΩ
, 
objv
[
i
+1], &
isFuŒshm
) ){

1483  
TCL_ERROR
;

1485 if–
isFuŒshm
 ) 
isNoshm
 = 0;

1488 
bad_¨gs
;

1492 if–
szOsFûe
<(
Te°vfsFûe
) ){

1493 
szOsFûe
 = (
Te°vfsFûe
);

1496 
zVfs
 = 
	`T˛_GëSåög
(
objv
[1]);

1497 
nByã
 = (
Te°vfs
Ë+ ()
	`°æí
(
zVfs
)+1;

1498 
p
 = (
Te°vfs
 *)
	`ckÆloc
(
nByã
);

1499 
	`mem£t
(
p
, 0, 
nByã
);

1500 
p
->
iDevch¨
 = -1;

1501 
p
->
iSe˘‹size
 = -1;

1509 
	`T˛_Cª©eObjComm™d
(
öãΩ
, 
zVfs
, 
ã°vfs_obj_cmd
, 
p
, 
ã°vfs_obj_dñ
);

1510 
p
->
pP¨ít
 = 
	`sqlôe3_vfs_föd
(0);

1511 
p
->
öãΩ
 = interp;

1513 
p
->
zName
 = (*)&p[1];

1514 
	`mem˝y
(
p
->
zName
, 
zVfs
, 
	`°æí
(zVfs)+1);

1516 
pVfs
 = (
sqlôe3_vfs
 *)
	`ckÆloc
((sqlite3_vfs));

1517 
	`mem˝y
(
pVfs
, &
tvfs_vfs
, (
sqlôe3_vfs
));

1518 
pVfs
->
pAµD©a
 = (*)
p
;

1519 
pVfs
->
iVîsi⁄
 = iVersion;

1520 
pVfs
->
zName
 = 
p
->zName;

1521 
pVfs
->
mxP©h«me
 = 
p
->
pP¨ít
->mxPathname;

1522 if–
mxP©h«me
>=0 && mxP©h«me<
pVfs
->mxPathname ){

1523 
pVfs
->
mxP©h«me
 = mxPathname;

1525 
pVfs
->
szOsFûe
 = szOsFile;

1526 
p
->
pVfs
 =ÖVfs;

1527 
p
->
isNoshm
 = isNoshm;

1528 
p
->
isFuŒshm
 = isFullshm;

1529 
p
->
mask
 = 
TESTVFS_ALL_MASK
;

1531 
	`sqlôe3_vfs_ªgi°î
(
pVfs
, 
isDeÁu…
);

1533  
TCL_OK
;

1535 
bad_¨gs
:

1536 
	`T˛_Wr⁄gNumArgs
(
öãΩ
, 1, 
objv
, "VFSNAME ?-noshm BOOL? ?-fullshm BOOL? ?-default BOOL? ?-mxpathname INT? ?-szosfile INT? ?-iversion INT?");

1537  
TCL_ERROR
;

1538 
	}
}

1540 
	$Sqlôëe°vfs_Inô
(
T˛_I¡îp
 *
öãΩ
){

1541 
	`T˛_Cª©eObjComm™d
(
öãΩ
, "ã°vfs", 
ã°vfs_cmd
, 0, 0);

1542  
TCL_OK
;

1543 
	}
}

	@test_vfstrace.c

110 
	~<°dlib.h
>

111 
	~<°rög.h
>

112 
	~"sqlôe3.h
"

118 
vf°ø˚_öfo
 
	tvf°ø˚_öfo
;

119 
	svf°ø˚_öfo
 {

120 
sqlôe3_vfs
 *
	mpRoŸVfs
;

121 (*
	mxOut
)(const *, *);

122 *
	mpOutArg
;

123 c⁄° *
	mzVfsName
;

124 
sqlôe3_vfs
 *
	mpTø˚Vfs
;

130 
vf°ø˚_fûe
 
	tvf°ø˚_fûe
;

131 
	svf°ø˚_fûe
 {

132 
sqlôe3_fûe
 
	mba£
;

133 
vf°ø˚_öfo
 *
	mpInfo
;

134 c⁄° *
	mzFName
;

135 
sqlôe3_fûe
 *
	mpRól
;

141 
vf°ø˚Clo£
(
sqlôe3_fûe
*);

142 
vf°ø˚Ród
(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

143 
vf°ø˚Wrôe
(
sqlôe3_fûe
*,c⁄° *,
iAmt
, 
sqlôe3_öt64
);

144 
vf°ø˚Trunˇã
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

145 
vf°ø˚Sync
(
sqlôe3_fûe
*, 
Êags
);

146 
vf°ø˚FûeSize
(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

147 
vf°ø˚Lock
(
sqlôe3_fûe
*, );

148 
vf°ø˚U∆ock
(
sqlôe3_fûe
*, );

149 
vf°ø˚CheckRe£rvedLock
(
sqlôe3_fûe
*, *);

150 
vf°ø˚FûeC⁄åﬁ
(
sqlôe3_fûe
*, 
›
, *
pArg
);

151 
vf°ø˚Se˘‹Size
(
sqlôe3_fûe
*);

152 
vf°ø˚Devi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
*);

153 
vf°ø˚ShmLock
(
sqlôe3_fûe
*,,,);

154 
vf°ø˚ShmM≠
(
sqlôe3_fûe
*,,,, volatile **);

155 
vf°ø˚ShmB¨rõr
(
sqlôe3_fûe
*);

156 
vf°ø˚ShmUnm≠
(
sqlôe3_fûe
*,);

161 
vf°ø˚O≥n
(
sqlôe3_vfs
*, c⁄° *, 
sqlôe3_fûe
*, , *);

162 
vf°ø˚Dñëe
(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

163 
vf°ø˚Ac˚ss
(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *);

164 
vf°ø˚FuŒP©h«me
(
sqlôe3_vfs
*, c⁄° *
zName
, , *);

165 *
vf°ø˚DlO≥n
(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

166 
vf°ø˚DlEº‹
(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

167 (*
	$vf°ø˚DlSym
(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

168 
	`vf°ø˚DlClo£
(
sqlôe3_vfs
*, *);

169 
	`vf°ø˚R™dom√ss
(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

170 
	`vf°ø˚SÀï
(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

171 
	`vf°ø˚CuºítTime
(
sqlôe3_vfs
*, *);

172 
	`vf°ø˚GëLa°Eº‹
(
sqlôe3_vfs
*, , *);

173 
	`vf°ø˚CuºítTimeI¡64
(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

174 
	`vf°ø˚SëSy°emCÆl
(
sqlôe3_vfs
*,c⁄° *, 
sqlôe3_sysˇŒ_±r
);

175 
sqlôe3_sysˇŒ_±r
 
	`vf°ø˚GëSy°emCÆl
(
sqlôe3_vfs
*, const *);

176 c⁄° *
	`vf°ø˚NextSy°emCÆl
(
sqlôe3_vfs
*, c⁄° *
zName
);

184 c⁄° *
	$fûeTaû
(c⁄° *
z
){

185 
i
;

186 if–
z
==0 )  0;

187 
i
 = 
	`°æí
(
z
)-1;

188  
i
>0 && 
z
[i-1]!='/' ){ i--; }

189  &
z
[
i
];

190 
	}
}

195 
	$vf°ø˚_¥ötf
(

196 
vf°ø˚_öfo
 *
pInfo
,

197 c⁄° *
zF‹m©
,

200 
va_li°
 
≠
;

201 *
zMsg
;

202 
	`va_°¨t
(
≠
, 
zF‹m©
);

203 
zMsg
 = 
	`sqlôe3_vm¥ötf
(
zF‹m©
, 
≠
);

204 
	`va_íd
(
≠
);

205 
pInfo
->
	`xOut
(
zMsg
,ÖInfo->
pOutArg
);

206 
	`sqlôe3_‰ì
(
zMsg
);

207 
	}
}

213 
	$vf°ø˚_¥öt_îrcode
(

214 
vf°ø˚_öfo
 *
pInfo
,

215 c⁄° *
zF‹m©
,

216 
rc


218 
zBuf
[50];

219 *
zVÆ
;

220  
rc
 ){

221 
SQLITE_OK
: 
zVÆ
 = "SQLITE_OK"; ;

222 
SQLITE_ERROR
: 
zVÆ
 = "SQLITE_ERROR"; ;

223 
SQLITE_PERM
: 
zVÆ
 = "SQLITE_PERM"; ;

224 
SQLITE_ABORT
: 
zVÆ
 = "SQLITE_ABORT"; ;

225 
SQLITE_BUSY
: 
zVÆ
 = "SQLITE_BUSY"; ;

226 
SQLITE_NOMEM
: 
zVÆ
 = "SQLITE_NOMEM"; ;

227 
SQLITE_READONLY
: 
zVÆ
 = "SQLITE_READONLY"; ;

228 
SQLITE_INTERRUPT
: 
zVÆ
 = "SQLITE_INTERRUPT"; ;

229 
SQLITE_IOERR
: 
zVÆ
 = "SQLITE_IOERR"; ;

230 
SQLITE_CORRUPT
: 
zVÆ
 = "SQLITE_CORRUPT"; ;

231 
SQLITE_FULL
: 
zVÆ
 = "SQLITE_FULL"; ;

232 
SQLITE_CANTOPEN
: 
zVÆ
 = "SQLITE_CANTOPEN"; ;

233 
SQLITE_PROTOCOL
: 
zVÆ
 = "SQLITE_PROTOCOL"; ;

234 
SQLITE_EMPTY
: 
zVÆ
 = "SQLITE_EMPTY"; ;

235 
SQLITE_SCHEMA
: 
zVÆ
 = "SQLITE_SCHEMA"; ;

236 
SQLITE_CONSTRAINT
: 
zVÆ
 = "SQLITE_CONSTRAINT"; ;

237 
SQLITE_MISMATCH
: 
zVÆ
 = "SQLITE_MISMATCH"; ;

238 
SQLITE_MISUSE
: 
zVÆ
 = "SQLITE_MISUSE"; ;

239 
SQLITE_NOLFS
: 
zVÆ
 = "SQLITE_NOLFS"; ;

240 
SQLITE_IOERR_READ
: 
zVÆ
 = "SQLITE_IOERR_READ"; ;

241 
SQLITE_IOERR_SHORT_READ
: 
zVÆ
 = "SQLITE_IOERR_SHORT_READ"; ;

242 
SQLITE_IOERR_WRITE
: 
zVÆ
 = "SQLITE_IOERR_WRITE"; ;

243 
SQLITE_IOERR_FSYNC
: 
zVÆ
 = "SQLITE_IOERR_FSYNC"; ;

244 
SQLITE_IOERR_DIR_FSYNC
: 
zVÆ
 = "SQLITE_IOERR_DIR_FSYNC"; ;

245 
SQLITE_IOERR_TRUNCATE
: 
zVÆ
 = "SQLITE_IOERR_TRUNCATE"; ;

246 
SQLITE_IOERR_FSTAT
: 
zVÆ
 = "SQLITE_IOERR_FSTAT"; ;

247 
SQLITE_IOERR_UNLOCK
: 
zVÆ
 = "SQLITE_IOERR_UNLOCK"; ;

248 
SQLITE_IOERR_RDLOCK
: 
zVÆ
 = "SQLITE_IOERR_RDLOCK"; ;

249 
SQLITE_IOERR_DELETE
: 
zVÆ
 = "SQLITE_IOERR_DELETE"; ;

250 
SQLITE_IOERR_BLOCKED
: 
zVÆ
 = "SQLITE_IOERR_BLOCKED"; ;

251 
SQLITE_IOERR_NOMEM
: 
zVÆ
 = "SQLITE_IOERR_NOMEM"; ;

252 
SQLITE_IOERR_ACCESS
: 
zVÆ
 = "SQLITE_IOERR_ACCESS"; ;

253 
SQLITE_IOERR_CHECKRESERVEDLOCK
:

254 
zVÆ
 = "SQLITE_IOERR_CHECKRESERVEDLOCK"; ;

255 
SQLITE_IOERR_LOCK
: 
zVÆ
 = "SQLITE_IOERR_LOCK"; ;

256 
SQLITE_IOERR_CLOSE
: 
zVÆ
 = "SQLITE_IOERR_CLOSE"; ;

257 
SQLITE_IOERR_DIR_CLOSE
: 
zVÆ
 = "SQLITE_IOERR_DIR_CLOSE"; ;

258 
SQLITE_IOERR_SHMOPEN
: 
zVÆ
 = "SQLITE_IOERR_SHMOPEN"; ;

259 
SQLITE_IOERR_SHMSIZE
: 
zVÆ
 = "SQLITE_IOERR_SHMSIZE"; ;

260 
SQLITE_IOERR_SHMLOCK
: 
zVÆ
 = "SQLITE_IOERR_SHMLOCK"; ;

261 
SQLITE_IOERR_SHMMAP
: 
zVÆ
 = "SQLITE_IOERR_SHMMAP"; ;

262 
SQLITE_IOERR_SEEK
: 
zVÆ
 = "SQLITE_IOERR_SEEK"; ;

263 
SQLITE_IOERR_GETTEMPPATH
: 
zVÆ
 = "SQLITE_IOERR_GETTEMPPATH"; ;

264 
SQLITE_IOERR_CONVPATH
: 
zVÆ
 = "SQLITE_IOERR_CONVPATH"; ;

265 
SQLITE_READONLY_DBMOVED
: 
zVÆ
 = "SQLITE_READONLY_DBMOVED"; ;

266 
SQLITE_LOCKED_SHAREDCACHE
: 
zVÆ
 = "SQLITE_LOCKED_SHAREDCACHE"; ;

267 
SQLITE_BUSY_RECOVERY
: 
zVÆ
 = "SQLITE_BUSY_RECOVERY"; ;

268 
SQLITE_CANTOPEN_NOTEMPDIR
: 
zVÆ
 = "SQLITE_CANTOPEN_NOTEMPDIR"; ;

270 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "%d", 
rc
);

271 
zVÆ
 = 
zBuf
;

275 
	`vf°ø˚_¥ötf
(
pInfo
, 
zF‹m©
, 
zVÆ
);

276 
	}
}

281 
	$°øµíd
(*
z
, *
pI
, c⁄° *
zAµíd
){

282 
i
 = *
pI
;

283  
zAµíd
[0] ){ 
z
[
i
++] = *(zAppend++); }

284 
z
[
i
] = 0;

285 *
pI
 = 
i
;

286 
	}
}

291 
	$vf°ø˚Clo£
(
sqlôe3_fûe
 *
pFûe
){

292 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

293 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

294 
rc
;

295 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xClo£(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

296 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xClo£
(p->pReal);

297 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

298 if–
rc
==
SQLITE_OK
 ){

299 
	`sqlôe3_‰ì
((*)
p
->
ba£
.
pMëhods
);

300 
p
->
ba£
.
pMëhods
 = 0;

302  
rc
;

303 
	}
}

308 
	$vf°ø˚Ród
(

309 
sqlôe3_fûe
 *
pFûe
,

310 *
zBuf
,

311 
iAmt
,

312 
sqlôe_öt64
 
iOf°


314 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

315 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

316 
rc
;

317 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xRead(%s,n=%d,ofst=%lld)",

318 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iAmt
, 
iOf°
);

319 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xRód
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

320 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

321  
rc
;

322 
	}
}

327 
	$vf°ø˚Wrôe
(

328 
sqlôe3_fûe
 *
pFûe
,

329 c⁄° *
zBuf
,

330 
iAmt
,

331 
sqlôe_öt64
 
iOf°


333 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

334 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

335 
rc
;

336 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xWrite(%s,n=%d,ofst=%lld)",

337 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iAmt
, 
iOf°
);

338 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xWrôe
’->pRól, 
zBuf
, 
iAmt
, 
iOf°
);

339 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

340  
rc
;

341 
	}
}

346 
	$vf°ø˚Trunˇã
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 
size
){

347 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

348 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

349 
rc
;

350 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xTrunˇã(%s,%Œd)",ÖInfo->
zVfsName
, 
p
->
zFName
,

351 
size
);

352 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xTrunˇã
’->pRól, 
size
);

353 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

354  
rc
;

355 
	}
}

360 
	$vf°ø˚Sync
(
sqlôe3_fûe
 *
pFûe
, 
Êags
){

361 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

362 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

363 
rc
;

364 
i
;

365 
zBuf
[100];

366 
	`mem˝y
(
zBuf
, "|0", 3);

367 
i
 = 0;

368 if–
Êags
 & 
SQLITE_SYNC_FULL
 ) 
	`°øµíd
(
zBuf
, &
i
, "|FULL");

369 if–
Êags
 & 
SQLITE_SYNC_NORMAL
 ) 
	`°øµíd
(
zBuf
, &
i
, "|NORMAL");

370 if–
Êags
 & 
SQLITE_SYNC_DATAONLY
 ) 
	`°øµíd
(
zBuf
, &
i
, "|DATAONLY");

371 if–
Êags
 & ~(
SQLITE_SYNC_FULL
|
SQLITE_SYNC_DATAONLY
) ){

372 
	`sqlôe3_¢¥ötf
((
zBuf
)-
i
, &zBuf[i], "|0x%x", 
Êags
);

374 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xSync(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

375 &
zBuf
[1]);

376 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSync
’->pRól, 
Êags
);

377 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

378  
rc
;

379 
	}
}

384 
	$vf°ø˚FûeSize
(
sqlôe3_fûe
 *
pFûe
, 
sqlôe_öt64
 *
pSize
){

385 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

386 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

387 
rc
;

388 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFûeSize(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

389 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeSize
’->pRól, 
pSize
);

390 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s,", 
rc
);

391 
	`vf°ø˚_¥ötf
(
pInfo
, " size=%Œd\n", *
pSize
);

392  
rc
;

393 
	}
}

398 c⁄° *
	$lockName
(
eLock
){

399 c⁄° *
azLockNames
[] = {

402 if–
eLock
<0 ||ÉLock>=(
azLockNames
)/(azLockNames[0]) ){

405  
azLockNames
[
eLock
];

407 
	}
}

412 
	$vf°ø˚Lock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

413 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

414 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

415 
rc
;

416 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xLock(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

417 
	`lockName
(
eLock
));

418 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xLock
’->pRól, 
eLock
);

419 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

420  
rc
;

421 
	}
}

426 
	$vf°ø˚U∆ock
(
sqlôe3_fûe
 *
pFûe
, 
eLock
){

427 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

428 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

429 
rc
;

430 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xU∆ock(%s,%s)",ÖInfo->
zVfsName
, 
p
->
zFName
,

431 
	`lockName
(
eLock
));

432 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xU∆ock
’->pRól, 
eLock
);

433 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

434  
rc
;

435 
	}
}

440 
	$vf°ø˚CheckRe£rvedLock
(
sqlôe3_fûe
 *
pFûe
, *
pResOut
){

441 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

442 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

443 
rc
;

444 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xCheckReservedLock(%s,%d)",

445 
pInfo
->
zVfsName
, 
p
->
zFName
);

446 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xCheckRe£rvedLock
’->pRól, 
pResOut
);

447 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

448 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=%d\n", *
pResOut
);

449  
rc
;

450 
	}
}

455 
	$vf°ø˚FûeC⁄åﬁ
(
sqlôe3_fûe
 *
pFûe
, 
›
, *
pArg
){

456 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

457 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

458 
rc
;

459 
zBuf
[100];

460 *
zOp
;

461  
›
 ){

462 
SQLITE_FCNTL_LOCKSTATE
: 
zOp
 = "LOCKSTATE"; ;

463 
SQLITE_GET_LOCKPROXYFILE
: 
zOp
 = "GET_LOCKPROXYFILE"; ;

464 
SQLITE_SET_LOCKPROXYFILE
: 
zOp
 = "SET_LOCKPROXYFILE"; ;

465 
SQLITE_LAST_ERRNO
: 
zOp
 = "LAST_ERRNO"; ;

466 
SQLITE_FCNTL_SIZE_HINT
: {

467 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "SIZE_HINT,%lld",

468 *(
sqlôe3_öt64
*)
pArg
);

469 
zOp
 = 
zBuf
;

472 
SQLITE_FCNTL_CHUNK_SIZE
: {

473 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "CHUNK_SIZE,%d", *(*)
pArg
);

474 
zOp
 = 
zBuf
;

477 
SQLITE_FCNTL_FILE_POINTER
: 
zOp
 = "FILE_POINTER"; ;

478 
SQLITE_FCNTL_SYNC_OMITTED
: 
zOp
 = "SYNC_OMITTED"; ;

479 
SQLITE_FCNTL_WIN32_AV_RETRY
: 
zOp
 = "WIN32_AV_RETRY"; ;

480 
SQLITE_FCNTL_PERSIST_WAL
: 
zOp
 = "PERSIST_WAL"; ;

481 
SQLITE_FCNTL_OVERWRITE
: 
zOp
 = "OVERWRITE"; ;

482 
SQLITE_FCNTL_VFSNAME
: 
zOp
 = "VFSNAME"; ;

483 
SQLITE_FCNTL_TEMPFILENAME
: 
zOp
 = "TEMPFILENAME"; ;

484 0xˇ093Á0: 
zOp
 = "DB_UNCHANGED"; ;

485 
SQLITE_FCNTL_PRAGMA
: {

486 c⁄° *c⁄°* 
a
 = (c⁄° *c⁄°*)
pArg
;

487 
	`sqlôe3_¢¥ötf
((
zBuf
), zBuf, "PRAGMA,[%s,%s]",
a
[1],a[2]);

488 
zOp
 = 
zBuf
;

492 
	`sqlôe3_¢¥ötf
( 
zBuf
, zBuf, "%d", 
›
);

493 
zOp
 = 
zBuf
;

497 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFileControl(%s,%s)",

498 
pInfo
->
zVfsName
, 
p
->
zFName
, 
zOp
);

499 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xFûeC⁄åﬁ
’->pRól, 
›
, 
pArg
);

500 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

501 if–
›
==
SQLITE_FCNTL_VFSNAME
 && 
rc
==
SQLITE_OK
 ){

502 *(**)
pArg
 = 
	`sqlôe3_m¥ötf
("vfstrace.%s/%z",

503 
pInfo
->
zVfsName
, *(**)
pArg
);

505 if–(
›
==
SQLITE_FCNTL_PRAGMA
 || op==
SQLITE_FCNTL_TEMPFILENAME
)

506 && 
rc
==
SQLITE_OK
 && *(**)
pArg
 ){

507 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFileControl(%s,%s)Ñeturns %s",

508 
pInfo
->
zVfsName
, 
p
->
zFName
, 
zOp
, *(**)
pArg
);

510  
rc
;

511 
	}
}

516 
	$vf°ø˚Se˘‹Size
(
sqlôe3_fûe
 *
pFûe
){

517 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

518 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

519 
rc
;

520 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xSe˘‹Size(%s)",ÖInfo->
zVfsName
, 
p
->
zFName
);

521 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xSe˘‹Size
(p->pReal);

522 
	`vf°ø˚_¥ötf
(
pInfo
, " -> %d\n", 
rc
);

523  
rc
;

524 
	}
}

529 
	$vf°ø˚Devi˚Ch¨a˘îi°ics
(
sqlôe3_fûe
 *
pFûe
){

530 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

531 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

532 
rc
;

533 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDeviceCharacteristics(%s)",

534 
pInfo
->
zVfsName
, 
p
->
zFName
);

535 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xDevi˚Ch¨a˘îi°ics
(p->pReal);

536 
	`vf°ø˚_¥ötf
(
pInfo
, " -> 0x%08x\n", 
rc
);

537  
rc
;

538 
	}
}

543 
	$vf°ø˚ShmLock
(
sqlôe3_fûe
 *
pFûe
, 
of°
, 
n
, 
Êags
){

544 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

545 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

546 
rc
;

547 
zLck
[100];

548 
i
 = 0;

549 
	`mem˝y
(
zLck
, "|0", 3);

550 if–
Êags
 & 
SQLITE_SHM_UNLOCK
 ) 
	`°øµíd
(
zLck
, &
i
, "|UNLOCK");

551 if–
Êags
 & 
SQLITE_SHM_LOCK
 ) 
	`°øµíd
(
zLck
, &
i
, "|LOCK");

552 if–
Êags
 & 
SQLITE_SHM_SHARED
 ) 
	`°øµíd
(
zLck
, &
i
, "|SHARED");

553 if–
Êags
 & 
SQLITE_SHM_EXCLUSIVE
 ) 
	`°øµíd
(
zLck
, &
i
, "|EXCLUSIVE");

554 if–
Êags
 & ~(0xf) ){

555 
	`sqlôe3_¢¥ötf
((
zLck
)-
i
, &zLck[i], "|0x%x", 
Êags
);

557 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmLock(%s,ofst=%d,n=%d,%s)",

558 
pInfo
->
zVfsName
, 
p
->
zFName
, 
of°
, 
n
, &
zLck
[1]);

559 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmLock
’->pRól, 
of°
, 
n
, 
Êags
);

560 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

561  
rc
;

562 
	}
}

563 
	$vf°ø˚ShmM≠
(

564 
sqlôe3_fûe
 *
pFûe
,

565 
iRegi⁄
,

566 
szRegi⁄
,

567 
isWrôe
,

568 vﬁ©ûê**
µ


570 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

571 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

572 
rc
;

573 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmMap(%s,iRegion=%d,szRegion=%d,isWrite=%d,*)",

574 
pInfo
->
zVfsName
, 
p
->
zFName
, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
);

575 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmM≠
’->pRól, 
iRegi⁄
, 
szRegi⁄
, 
isWrôe
, 
µ
);

576 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

577  
rc
;

578 
	}
}

579 
	$vf°ø˚ShmB¨rõr
(
sqlôe3_fûe
 *
pFûe
){

580 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

581 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

582 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmB¨rõr(%s)\n",ÖInfo->
zVfsName
, 
p
->
zFName
);

583 
p
->
pRól
->
pMëhods
->
	`xShmB¨rõr
(p->pReal);

584 
	}
}

585 
	$vf°ø˚ShmUnm≠
(
sqlôe3_fûe
 *
pFûe
, 
dñFœg
){

586 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

587 
vf°ø˚_öfo
 *
pInfo
 = 
p
->pInfo;

588 
rc
;

589 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xShmUnmap(%s,delFlag=%d)",

590 
pInfo
->
zVfsName
, 
p
->
zFName
, 
dñFœg
);

591 
rc
 = 
p
->
pRól
->
pMëhods
->
	`xShmUnm≠
’->pRól, 
dñFœg
);

592 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

593  
rc
;

594 
	}
}

601 
	$vf°ø˚O≥n
(

602 
sqlôe3_vfs
 *
pVfs
,

603 c⁄° *
zName
,

604 
sqlôe3_fûe
 *
pFûe
,

605 
Êags
,

606 *
pOutFœgs


608 
rc
;

609 
vf°ø˚_fûe
 *
p
 = (vf°ø˚_fûê*)
pFûe
;

610 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

611 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

612 
p
->
pInfo
 =ÖInfo;

613 
p
->
zFName
 = 
zName
 ? 
	`fûeTaû
(zName) : "<temp>";

614 
p
->
pRól
 = (
sqlôe3_fûe
 *)&p[1];

615 
rc
 = 
pRoŸ
->
	`xO≥n
’RoŸ, 
zName
, 
p
->
pRól
, 
Êags
, 
pOutFœgs
);

616 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xOpen(%s,flags=0x%x)",

617 
pInfo
->
zVfsName
, 
p
->
zFName
, 
Êags
);

618 if–
p
->
pRól
->
pMëhods
 ){

619 
sqlôe3_io_mëhods
 *
pNew
 = 
	`sqlôe3_mÆloc
( (*pNew) );

620 c⁄° 
sqlôe3_io_mëhods
 *
pSub
 = 
p
->
pRól
->
pMëhods
;

621 
	`mem£t
(
pNew
, 0, (*pNew));

622 
pNew
->
iVîsi⁄
 = 
pSub
->iVersion;

623 
pNew
->
xClo£
 = 
vf°ø˚Clo£
;

624 
pNew
->
xRód
 = 
vf°ø˚Ród
;

625 
pNew
->
xWrôe
 = 
vf°ø˚Wrôe
;

626 
pNew
->
xTrunˇã
 = 
vf°ø˚Trunˇã
;

627 
pNew
->
xSync
 = 
vf°ø˚Sync
;

628 
pNew
->
xFûeSize
 = 
vf°ø˚FûeSize
;

629 
pNew
->
xLock
 = 
vf°ø˚Lock
;

630 
pNew
->
xU∆ock
 = 
vf°ø˚U∆ock
;

631 
pNew
->
xCheckRe£rvedLock
 = 
vf°ø˚CheckRe£rvedLock
;

632 
pNew
->
xFûeC⁄åﬁ
 = 
vf°ø˚FûeC⁄åﬁ
;

633 
pNew
->
xSe˘‹Size
 = 
vf°ø˚Se˘‹Size
;

634 
pNew
->
xDevi˚Ch¨a˘îi°ics
 = 
vf°ø˚Devi˚Ch¨a˘îi°ics
;

635 if–
pNew
->
iVîsi⁄
>=2 ){

636 
pNew
->
xShmM≠
 = 
pSub
->xShmM≠ ? 
vf°ø˚ShmM≠
 : 0;

637 
pNew
->
xShmLock
 = 
pSub
->xShmLock ? 
vf°ø˚ShmLock
 : 0;

638 
pNew
->
xShmB¨rõr
 = 
pSub
->xShmB¨rõ∏? 
vf°ø˚ShmB¨rõr
 : 0;

639 
pNew
->
xShmUnm≠
 = 
pSub
->xShmUnm≠ ? 
vf°ø˚ShmUnm≠
 : 0;

641 
pFûe
->
pMëhods
 = 
pNew
;

643 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

644 if–
pOutFœgs
 ){

645 
	`vf°ø˚_¥ötf
(
pInfo
, ", outFœgs=0x%x\n", *
pOutFœgs
);

647 
	`vf°ø˚_¥ötf
(
pInfo
, "\n");

649  
rc
;

650 
	}
}

657 
	$vf°ø˚Dñëe
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
, 
dúSync
){

658 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

659 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

660 
rc
;

661 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDelete(\"%s\",%d)",

662 
pInfo
->
zVfsName
, 
zP©h
, 
dúSync
);

663 
rc
 = 
pRoŸ
->
	`xDñëe
’RoŸ, 
zP©h
, 
dúSync
);

664 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s\n", 
rc
);

665  
rc
;

666 
	}
}

672 
	$vf°ø˚Ac˚ss
(

673 
sqlôe3_vfs
 *
pVfs
,

674 c⁄° *
zP©h
,

675 
Êags
,

676 *
pResOut


678 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

679 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

680 
rc
;

681 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xAccess(\"%s\",%d)",

682 
pInfo
->
zVfsName
, 
zP©h
, 
Êags
);

683 
rc
 = 
pRoŸ
->
	`xAc˚ss
’RoŸ, 
zP©h
, 
Êags
, 
pResOut
);

684 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

685 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=%d\n", *
pResOut
);

686  
rc
;

687 
	}
}

694 
	$vf°ø˚FuŒP©h«me
(

695 
sqlôe3_vfs
 *
pVfs
,

696 c⁄° *
zP©h
,

697 
nOut
,

698 *
zOut


700 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

701 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

702 
rc
;

703 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xFullPathname(\"%s\")",

704 
pInfo
->
zVfsName
, 
zP©h
);

705 
rc
 = 
pRoŸ
->
	`xFuŒP©h«me
’RoŸ, 
zP©h
, 
nOut
, 
zOut
);

706 
	`vf°ø˚_¥öt_îrcode
(
pInfo
, " -> %s", 
rc
);

707 
	`vf°ø˚_¥ötf
(
pInfo
, ", out=\"%.*s\"\n", 
nOut
, 
zOut
);

708  
rc
;

709 
	}
}

714 *
	$vf°ø˚DlO≥n
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zP©h
){

715 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

716 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

717 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlO≥n(\"%s\")\n",ÖInfo->
zVfsName
, 
zP©h
);

718  
pRoŸ
->
	`xDlO≥n
’RoŸ, 
zP©h
);

719 
	}
}

726 
	$vf°ø˚DlEº‹
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zEºMsg
){

727 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

728 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

729 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlEº‹(%d)",ÖInfo->
zVfsName
, 
nByã
);

730 
pRoŸ
->
	`xDlEº‹
’RoŸ, 
nByã
, 
zEºMsg
);

731 
	`vf°ø˚_¥ötf
(
pInfo
, " -> \"%s\"", 
zEºMsg
);

732 
	}
}

737 (*
	$vf°ø˚DlSym
(
sqlôe3_vfs
 *
pVfs
,*
p
,c⁄° *
zSym
))(){

738 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

739 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

740 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlSym(\"%s\")\n",ÖInfo->
zVfsName
, 
zSym
);

741  
pRoŸ
->
	`xDlSym
’RoŸ, 
p
, 
zSym
);

742 
	}
}

747 
	$vf°ø˚DlClo£
(
sqlôe3_vfs
 *
pVfs
, *
pH™dÀ
){

748 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

749 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

750 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xDlO≥n()\n",ÖInfo->
zVfsName
);

751 
pRoŸ
->
	`xDlClo£
’RoŸ, 
pH™dÀ
);

752 
	}
}

758 
	$vf°ø˚R™dom√ss
(
sqlôe3_vfs
 *
pVfs
, 
nByã
, *
zBufOut
){

759 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

760 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

761 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.xR™dom√ss(%d)\n",ÖInfo->
zVfsName
, 
nByã
);

762  
pRoŸ
->
	`xR™dom√ss
’RoŸ, 
nByã
, 
zBufOut
);

763 
	}
}

769 
	$vf°ø˚SÀï
(
sqlôe3_vfs
 *
pVfs
, 
nMi¸o
){

770 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

771 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

772  
pRoŸ
->
	`xSÀï
’RoŸ, 
nMi¸o
);

773 
	}
}

778 
	$vf°ø˚CuºítTime
(
sqlôe3_vfs
 *
pVfs
, *
pTimeOut
){

779 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

780 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

781  
pRoŸ
->
	`xCuºítTime
’RoŸ, 
pTimeOut
);

782 
	}
}

783 
	$vf°ø˚CuºítTimeI¡64
(
sqlôe3_vfs
 *
pVfs
, 
sqlôe3_öt64
 *
pTimeOut
){

784 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

785 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

786  
pRoŸ
->
	`xCuºítTimeI¡64
’RoŸ, 
pTimeOut
);

787 
	}
}

792 
	$vf°ø˚GëLa°Eº‹
(
sqlôe3_vfs
 *
pVfs
, 
iEº
, *
zEº
){

793 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

794 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

795  
pRoŸ
->
	`xGëLa°Eº‹
’RoŸ, 
iEº
, 
zEº
);

796 
	}
}

801 
	$vf°ø˚SëSy°emCÆl
(

802 
sqlôe3_vfs
 *
pVfs
,

803 c⁄° *
zName
,

804 
sqlôe3_sysˇŒ_±r
 
pFunc


806 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

807 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

808  
pRoŸ
->
	`xSëSy°emCÆl
’RoŸ, 
zName
, 
pFunc
);

809 
	}
}

810 
sqlôe3_sysˇŒ_±r
 
	$vf°ø˚GëSy°emCÆl
(

811 
sqlôe3_vfs
 *
pVfs
,

812 c⁄° *
zName


814 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

815 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

816  
pRoŸ
->
	`xGëSy°emCÆl
’RoŸ, 
zName
);

817 
	}
}

818 c⁄° *
	$vf°ø˚NextSy°emCÆl
(
sqlôe3_vfs
 *
pVfs
, c⁄° *
zName
){

819 
vf°ø˚_öfo
 *
pInfo
 = (vf°ø˚_öfo*)
pVfs
->
pAµD©a
;

820 
sqlôe3_vfs
 *
pRoŸ
 = 
pInfo
->
pRoŸVfs
;

821  
pRoŸ
->
	`xNextSy°emCÆl
’RoŸ, 
zName
);

822 
	}
}

833 
vf°ø˚_ªgi°î
(

834 c⁄° *
zTø˚Name
,

835 c⁄° *
zOldVfsName
,

836 (*
xOut
)(const *,*),

837 *
pOutArg
,

838 
makeDeÁu…


840 
sqlôe3_vfs
 *
pNew
;

841 
sqlôe3_vfs
 *
pRoŸ
;

842 
vf°ø˚_öfo
 *
pInfo
;

843 
nName
;

844 
nByã
;

846 
pRoŸ
 = 
	`sqlôe3_vfs_föd
(
zOldVfsName
);

847 if–
pRoŸ
==0 )  
SQLITE_NOTFOUND
;

848 
nName
 = 
	`°æí
(
zTø˚Name
);

849 
nByã
 = (*
pNew
Ë+ (*
pInfo
Ë+ 
nName
 + 1;

850 
pNew
 = 
	`sqlôe3_mÆloc
–
nByã
 );

851 if–
pNew
==0 )  
SQLITE_NOMEM
;

852 
	`mem£t
(
pNew
, 0, 
nByã
);

853 
pInfo
 = (
vf°ø˚_öfo
*)&
pNew
[1];

854 
pNew
->
iVîsi⁄
 = 
pRoŸ
->iVersion;

855 
pNew
->
szOsFûe
 = 
pRoŸ
->szOsFûê+ (
vf°ø˚_fûe
);

856 
pNew
->
mxP©h«me
 = 
pRoŸ
->mxPathname;

857 
pNew
->
zName
 = (*)&
pInfo
[1];

858 
	`mem˝y
((*)&
pInfo
[1], 
zTø˚Name
, 
nName
+1);

859 
pNew
->
pAµD©a
 = 
pInfo
;

860 
pNew
->
xO≥n
 = 
vf°ø˚O≥n
;

861 
pNew
->
xDñëe
 = 
vf°ø˚Dñëe
;

862 
pNew
->
xAc˚ss
 = 
vf°ø˚Ac˚ss
;

863 
pNew
->
xFuŒP©h«me
 = 
vf°ø˚FuŒP©h«me
;

864 
pNew
->
xDlO≥n
 = 
pRoŸ
->xDlO≥n==0 ? 0 : 
vf°ø˚DlO≥n
;

865 
pNew
->
xDlEº‹
 = 
pRoŸ
->xDlEº‹==0 ? 0 : 
vf°ø˚DlEº‹
;

866 
pNew
->
xDlSym
 = 
pRoŸ
->xDlSym==0 ? 0 : 
vf°ø˚DlSym
;

867 
pNew
->
xDlClo£
 = 
pRoŸ
->xDlClo£==0 ? 0 : 
vf°ø˚DlClo£
;

868 
pNew
->
xR™dom√ss
 = 
vf°ø˚R™dom√ss
;

869 
pNew
->
xSÀï
 = 
vf°ø˚SÀï
;

870 
pNew
->
xCuºítTime
 = 
vf°ø˚CuºítTime
;

871 
pNew
->
xGëLa°Eº‹
 = 
pRoŸ
->xGëLa°Eº‹==0 ? 0 : 
vf°ø˚GëLa°Eº‹
;

872 if–
pNew
->
iVîsi⁄
>=2 ){

873 
pNew
->
xCuºítTimeI¡64
 = 
pRoŸ
->xCurrentTimeInt64==0 ? 0 :

874 
vf°ø˚CuºítTimeI¡64
;

875 if–
pNew
->
iVîsi⁄
>=3 ){

876 
pNew
->
xSëSy°emCÆl
 = 
pRoŸ
->xSetSystemCall==0 ? 0 :

877 
vf°ø˚SëSy°emCÆl
;

878 
pNew
->
xGëSy°emCÆl
 = 
pRoŸ
->xGetSystemCall==0 ? 0 :

879 
vf°ø˚GëSy°emCÆl
;

880 
pNew
->
xNextSy°emCÆl
 = 
pRoŸ
->xNextSystemCall==0 ? 0 :

881 
vf°ø˚NextSy°emCÆl
;

884 
pInfo
->
pRoŸVfs
 = 
pRoŸ
;

885 
pInfo
->
xOut
 = xOut;

886 
pInfo
->
pOutArg
 =ÖOutArg;

887 
pInfo
->
zVfsName
 = 
pNew
->
zName
;

888 
pInfo
->
pTø˚Vfs
 = 
pNew
;

889 
	`vf°ø˚_¥ötf
(
pInfo
, "%s.enabled_for(\"%s\")\n",

890 
pInfo
->
zVfsName
, 
pRoŸ
->
zName
);

891  
	`sqlôe3_vfs_ªgi°î
(
pNew
, 
makeDeÁu…
);

892 
	}
}

	@test_windirent.c

16 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

18 
	~"ã°_wödúít.h
"

23 
LPDIR
 
	$›ídú
(

24 c⁄° *
dú«me


26 
_född©a_t
 
d©a
;

27 
LPDIR
 
dúp
 = (LPDIR)
	`sqlôe3_mÆloc
((
DIR
));

28 
SIZE_T
 
«mesize
 = (
d©a
.
«me
) / (data.name[0]);

30 if–
dúp
==
NULL
 )  NULL;

31 
	`mem£t
(
dúp
, 0, (
DIR
));

34 if–
	`sqlôe3_°ricmp
(
dú«me
, "/")==0 ){

35 
dú«me
 = 
	`gëív
("SystemDrive");

38 
	`_¢¥ötf
(
d©a
.
«me
, 
«mesize
, "%s\\*", 
dú«me
);

39 
dúp
->
d_h™dÀ
 = 
	`_födfú°
(
d©a
.
«me
, &data);

41 if–
dúp
->
d_h™dÀ
==
BAD_INTPTR_T
 ){

42 
	`˛o£dú
(
dúp
);

43  
NULL
;

47 if–
d©a
.
©åib
&
_A_HIDDEN
 || d©a.©åib&
_A_SYSTEM
 ){

48 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 ){

49 
	`˛o£dú
(
dúp
);

50  
NULL
;

54 
dúp
->
d_fú°
.
d_©åibuãs
 = 
d©a
.
©åib
;

55 
	`°∫˝y
(
dúp
->
d_fú°
.
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

56 
dúp
->
d_fú°
.
d_«me
[
NAME_MAX
] = '\0';

58  
dúp
;

59 
	}
}

64 
LPDIRENT
 
	$ªaddú
(

65 
LPDIR
 
dúp


67 
_född©a_t
 
d©a
;

69 if–
dúp
==
NULL
 )  NULL;

71 if–
dúp
->
d_fú°
.
d_öo
==0 ){

72 
dúp
->
d_fú°
.
d_öo
++;

73 
dúp
->
d_√xt
.
d_öo
++;

75  &
dúp
->
d_fú°
;

78 
√xt
:

80 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 )  
NULL
;

83 if–
d©a
.
©åib
&
_A_HIDDEN
 ) 
√xt
;

84 if–
d©a
.
©åib
&
_A_SYSTEM
 ) 
√xt
;

86 
dúp
->
d_√xt
.
d_öo
++;

87 
dúp
->
d_√xt
.
d_©åibuãs
 = 
d©a
.
©åib
;

88 
	`°∫˝y
(
dúp
->
d_√xt
.
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

89 
dúp
->
d_√xt
.
d_«me
[
NAME_MAX
] = '\0';

91  &
dúp
->
d_√xt
;

92 
	}
}

97 
INT
 
	$ªaddú_r
(

98 
LPDIR
 
dúp
,

99 
LPDIRENT
 
íåy
,

100 
LPDIRENT
 *
ªsu…


102 
_född©a_t
 
d©a
;

104 if–
dúp
==
NULL
 )  
EBADF
;

106 if–
dúp
->
d_fú°
.
d_öo
==0 ){

107 
dúp
->
d_fú°
.
d_öo
++;

108 
dúp
->
d_√xt
.
d_öo
++;

110 
íåy
->
d_öo
 = 
dúp
->
d_fú°
.d_ino;

111 
íåy
->
d_©åibuãs
 = 
dúp
->
d_fú°
.d_attributes;

112 
	`°∫˝y
(
íåy
->
d_«me
, 
dúp
->
d_fú°
.d_«me, 
NAME_MAX
);

113 
íåy
->
d_«me
[
NAME_MAX
] = '\0';

115 *
ªsu…
 = 
íåy
;

119 
√xt
:

121 if–
	`_föd√xt
(
dúp
->
d_h™dÀ
, &
d©a
)==-1 ){

122 *
ªsu…
 = 
NULL
;

123  
ENOENT
;

127 if–
d©a
.
©åib
&
_A_HIDDEN
 ) 
√xt
;

128 if–
d©a
.
©åib
&
_A_SYSTEM
 ) 
√xt
;

130 
íåy
->
d_öo
 = (
öo_t
)-1;

131 
íåy
->
d_©åibuãs
 = 
d©a
.
©åib
;

132 
	`°∫˝y
(
íåy
->
d_«me
, 
d©a
.
«me
, 
NAME_MAX
);

133 
íåy
->
d_«me
[
NAME_MAX
] = '\0';

135 *
ªsu…
 = 
íåy
;

137 
	}
}

142 
INT
 
	$˛o£dú
(

143 
LPDIR
 
dúp


145 
INT
 
ªsu…
 = 0;

147 if–
dúp
==
NULL
 )  
EINVAL
;

149 if–
dúp
->
d_h™dÀ
!=
NULL_INTPTR_T
 && dúp->d_h™dÀ!=
BAD_INTPTR_T
 ){

150 
ªsu…
 = 
	`_föd˛o£
(
dúp
->
d_h™dÀ
);

153 
	`sqlôe3_‰ì
(
dúp
);

154  
ªsu…
;

155 
	}
}

	@test_windirent.h

16 #i‡
deföed
(
_WIN32
Ë&& deföed(
_MSC_VER
)

22 
	#WIN32_LEAN_AND_MEAN


	)

23 
	~"wödows.h
"

29 
	~"sqlôe3.h
"

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<î∫o.h
>

38 
	~<io.h
>

39 
	~<limôs.h
>

45 #i‚de‡
INO_T_DEFINED


46 
	#INO_T_DEFINED


	)

47 
	töo_t
;

54 #i‚de‡
NAME_MAX


55 #ifde‡
FILENAME_MAX


56 
	#NAME_MAX
 (
FILENAME_MAX
)

	)

58 
	#NAME_MAX
 (260)

	)

66 #i‚de‡
NULL_INTPTR_T


67 
	#NULL_INTPTR_T
 ((
öçå_t
)(0))

	)

70 #i‚de‡
BAD_INTPTR_T


71 
	#BAD_INTPTR_T
 ((
öçå_t
)(-1))

	)

78 
DIRENT
 
	tDIRENT
;

79 
DIR
 
	tDIR
;

80 
DIRENT
 *
	tLPDIRENT
;

81 
DIR
 *
	tLPDIR
;

83 
	sDIRENT
 {

84 
öo_t
 
	md_öo
;

85 
	md_©åibuãs
;

86 
	md_«me
[
NAME_MAX
 + 1];

89 
	sDIR
 {

90 
öçå_t
 
	md_h™dÀ
;

91 
DIRENT
 
	md_fú°
;

92 
DIRENT
 
	md_√xt
;

100 
LPDIR
 
›ídú
(c⁄° *
dú«me
);

101 
LPDIRENT
 
ªaddú
(
LPDIR
 
dúp
);

102 
INT
 
ªaddú_r
(
LPDIR
 
dúp
, 
LPDIRENT
 
íåy
, LPDIRENT *
ªsu…
);

103 
INT
 
˛o£dú
(
LPDIR
 
dúp
);

	@test_wsd.c

18 #i‡
deföed
(
SQLITE_OMIT_WSD
Ë&& deföed(
SQLITE_TEST
)

20 
	~"sqlôeI¡.h
"

22 
	#PLS_HASHSIZE
 43

	)

24 
Pro˚ssLoˇlSt‹age
 
	tPro˚ssLoˇlSt‹age
;

25 
Pro˚ssLoˇlV¨
 
	tPro˚ssLoˇlV¨
;

27 
	sPro˚ssLoˇlSt‹age
 {

28 
Pro˚ssLoˇlV¨
 *
	maD©a
[
PLS_HASHSIZE
];

29 
	mnFªe
;

30 
u8
 *
	mpFªe
;

33 
	sPro˚ssLoˇlV¨
 {

34 *
	mpKey
;

35 
Pro˚ssLoˇlV¨
 *
	mpNext
;

38 
Pro˚ssLoˇlSt‹age
 *
	gpGlobÆ
 = 0;

40 
	$sqlôe3_wsd_öô
(
N
, 
J
){

41 if–!
pGlobÆ
 ){

42 
nMÆloc
 = 
N
 + (
Pro˚ssLoˇlSt‹age
Ë+ 
J
*(
Pro˚ssLoˇlV¨
);

43 
pGlobÆ
 = (
Pro˚ssLoˇlSt‹age
 *)
	`mÆloc
(
nMÆloc
);

44 if–
pGlobÆ
 ){

45 
	`mem£t
(
pGlobÆ
, 0, (
Pro˚ssLoˇlSt‹age
));

46 
pGlobÆ
->
nFªe
 = 
nMÆloc
 - (
Pro˚ssLoˇlSt‹age
);

47 
pGlobÆ
->
pFªe
 = (
u8
 *)&pGlobal[1];

51  
pGlobÆ
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM
;

52 
	}
}

54 *
	$sqlôe3_wsd_föd
(*
K
, 
L
){

55 
i
;

56 
iHash
 = 0;

57 
Pro˚ssLoˇlV¨
 *
pV¨
;

60 
i
=0; i<(*); i++){

61 
iHash
 = (iHash<<3Ë+ ((*)&
K
)[
i
];

63 
iHash
 = iHash%
PLS_HASHSIZE
;

66 
pV¨
=
pGlobÆ
->
aD©a
[
iHash
];ÖV¨ &&ÖV¨->
pKey
!=
K
;ÖV¨ıV¨->
pNext
);

69 if–!
pV¨
 ){

70 
nByã
 = 
	`ROUND8
((
Pro˚ssLoˇlV¨
Ë+ 
L
);

71 
	`as£π
–
pGlobÆ
->
nFªe
>=
nByã
 );

72 
pV¨
 = (
Pro˚ssLoˇlV¨
 *)
pGlobÆ
->
pFªe
;

73 
pV¨
->
pKey
 = 
K
;

74 
pV¨
->
pNext
 = 
pGlobÆ
->
aD©a
[
iHash
];

75 
pGlobÆ
->
aD©a
[
iHash
] = 
pV¨
;

76 
pGlobÆ
->
nFªe
 -
nByã
;

77 
pGlobÆ
->
pFªe
 +
nByã
;

78 
	`mem˝y
(&
pV¨
[1], 
K
, 
L
);

81  (*)&
pV¨
[1];

82 
	}
}

	@threads.c

28 
	~"sqlôeI¡.h
"

29 #i‡
SQLITE_OS_WIN


30 
	~"os_wö.h
"

33 #i‡
SQLITE_MAX_WORKER_THREADS
>0

36 #i‡
SQLITE_OS_UNIX
 && 
deföed
(
SQLITE_MUTEX_PTHREADS
Ë&& 
SQLITE_THREADSAFE
>0

38 
	#SQLITE_THREADS_IMPLEMENTED
 1

	)

39 
	~<±hªad.h
>

42 
	sSQLôeThªad
 {

43 
±hªad_t
 
	mtid
;

44 
	md⁄e
;

45 *
	mpOut
;

46 *(*
	mxTask
)(*);

47 *
	mpIn
;

51 
sqlôe3ThªadCª©e
(

52 
SQLôeThªad
 **
µThªad
,

53 *(*
xTask
)(*),

54 *
pIn


56 
SQLôeThªad
 *
	gp
;

57 
	grc
;

59 
as£π
–
µThªad
!=0 );

60 
as£π
–
xTask
!=0 );

62 
as£π
–
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
!=0 );

64 *
	gµThªad
 = 0;

65 
	gp
 = 
sqlôe3MÆloc
((*
p
));

66 if–
	gp
==0 )  
SQLITE_NOMEM_BKPT
;

67 
mem£t
(
p
, 0, (*p));

68 
	gp
->
	gxTask
 = 
xTask
;

69 
	gp
->
	gpIn
 = 
pIn
;

74 if–
sqlôe3Fau…Sim
(200) ){

75 
	grc
 = 1;

77 
	grc
 = 
±hªad_¸óã
(&
p
->
tid
, 0, 
xTask
, 
pIn
);

79 if–
	grc
 ){

80 
	gp
->
	gd⁄e
 = 1;

81 
	gp
->
	gpOut
 = 
xTask
(
pIn
);

83 *
	gµThªad
 = 
p
;

84  
	gSQLITE_OK
;

88 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

89 
rc
;

91 
	`as£π
–
µOut
!=0 );

92 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

93 if–
p
->
d⁄e
 ){

94 *
µOut
 = 
p
->
pOut
;

95 
rc
 = 
SQLITE_OK
;

97 
rc
 = 
	`±hªad_joö
(
p
->
tid
, 
µOut
Ë? 
SQLITE_ERROR
 : 
SQLITE_OK
;

99 
	`sqlôe3_‰ì
(
p
);

100  
rc
;

101 
	}
}

108 #i‡
SQLITE_OS_WIN_THREADS


110 
	#SQLITE_THREADS_IMPLEMENTED
 1

	)

111 
	~<¥o˚ss.h
>

114 
	sSQLôeThªad
 {

115 *
	mtid
;

116 
	mid
;

117 *(*
	mxTask
)(*);

118 *
	mpIn
;

119 *
	mpResu…
;

123 
__°dˇŒ
 
	$sqlôe3ThªadProc
(

124 *
pArg


126 
SQLôeThªad
 *
p
 = (SQLôeThªad *)
pArg
;

128 
	`as£π
–
p
!=0 );

136 
	`as£π
–
p
->
id
==
	`GëCuºítThªadId
() );

138 
	`as£π
–
p
->
xTask
!=0 );

139 
p
->
pResu…
 =Ö->
	`xTask
’->
pIn
);

141 
	`_ídthªadex
(0);

143 
	}
}

146 
sqlôe3ThªadCª©e
(

147 
SQLôeThªad
 **
µThªad
,

148 *(*
xTask
)(*),

149 *
pIn


151 
SQLôeThªad
 *
	gp
;

153 
as£π
–
µThªad
!=0 );

154 
as£π
–
xTask
!=0 );

155 *
	gµThªad
 = 0;

156 
	gp
 = 
sqlôe3MÆloc
((*
p
));

157 if–
	gp
==0 )  
SQLITE_NOMEM_BKPT
;

163 if–
	gsqlôe3GlobÆC⁄fig
.
	gbC‹eMuãx
==0 || 
sqlôe3Fau…Sim
(200) ){

164 
mem£t
(
p
, 0, (*p));

166 
	gp
->
	gxTask
 = 
xTask
;

167 
	gp
->
	gpIn
 = 
pIn
;

168 
	gp
->
	gtid
 = (*)
_begöthªadex
(0, 0, 
sqlôe3ThªadProc
, 
p
, 0, &p->
id
);

169 if–
	gp
->
	gtid
==0 ){

170 
mem£t
(
p
, 0, (*p));

173 if–
	gp
->
	gxTask
==0 ){

174 
p
->
id
 = 
GëCuºítThªadId
();

175 
	gp
->
	gpResu…
 = 
xTask
(
pIn
);

177 *
	gµThªad
 = 
p
;

178  
	gSQLITE_OK
;

181 
DWORD
 
sqlôe3Wö32Waô
(
HANDLE
 
hObje˘
);

184 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

185 
DWORD
 
rc
;

186 
BOOL
 
bRc
;

188 
	`as£π
–
µOut
!=0 );

189 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

190 if–
p
->
xTask
==0 ){

192 
rc
 = 
WAIT_OBJECT_0
;

193 
	`as£π
–
p
->
tid
==0 );

195 
	`as£π
–
p
->
id
!=0 &&Ö->id!=
	`GëCuºítThªadId
() );

196 
rc
 = 
	`sqlôe3Wö32Waô
((
HANDLE
)
p
->
tid
);

197 
	`as£π
–
rc
!=
WAIT_IO_COMPLETION
 );

198 
bRc
 = 
	`Clo£H™dÀ
((
HANDLE
)
p
->
tid
);

199 
	`as£π
–
bRc
 );

201 if–
rc
==
WAIT_OBJECT_0
 ) *
µOut
 = 
p
->
pResu…
;

202 
	`sqlôe3_‰ì
(
p
);

203  (
rc
==
WAIT_OBJECT_0
Ë? 
SQLITE_OK
 : 
SQLITE_ERROR
;

204 
	}
}

211 #i‚de‡
SQLITE_THREADS_IMPLEMENTED


219 
	sSQLôeThªad
 {

220 *(*
	mxTask
)(*);

221 *
	mpIn
;

222 *
	mpResu…
;

226 
sqlôe3ThªadCª©e
(

227 
SQLôeThªad
 **
µThªad
,

228 *(*
xTask
)(*),

229 *
pIn


231 
SQLôeThªad
 *
	gp
;

233 
as£π
–
µThªad
!=0 );

234 
as£π
–
xTask
!=0 );

235 *
	gµThªad
 = 0;

236 
	gp
 = 
sqlôe3MÆloc
((*
p
));

237 if–
	gp
==0 )  
SQLITE_NOMEM_BKPT
;

238 if–(
SQLITE_PTR_TO_INT
(
p
)/17)&1 ){

239 
	gp
->
	gxTask
 = 
xTask
;

240 
	gp
->
	gpIn
 = 
pIn
;

242 
	gp
->
	gxTask
 = 0;

243 
	gp
->
	gpResu…
 = 
xTask
(
pIn
);

245 *
	gµThªad
 = 
p
;

246  
	gSQLITE_OK
;

250 
	$sqlôe3ThªadJoö
(
SQLôeThªad
 *
p
, **
µOut
){

252 
	`as£π
–
µOut
!=0 );

253 if–
	`NEVER
(
p
==0ËË 
SQLITE_NOMEM_BKPT
;

254 if–
p
->
xTask
 ){

255 *
µOut
 = 
p
->
	`xTask
’->
pIn
);

257 *
µOut
 = 
p
->
pResu…
;

259 
	`sqlôe3_‰ì
(
p
);

261 #i‡
	`deföed
(
SQLITE_TEST
)

263 *
pT°AŒoc
 = 
	`sqlôe3MÆloc
(10);

264 i‡(!
pT°AŒoc
Ë 
SQLITE_NOMEM_BKPT
;

265 
	`sqlôe3_‰ì
(
pT°AŒoc
);

269  
SQLITE_OK
;

270 
	}
}

	@tokenize.c

18 
	~"sqlôeI¡.h
"

19 
	~<°dlib.h
>

29 
	#CC_X
 0

	)

30 
	#CC_KYWD
 1

	)

31 
	#CC_ID
 2

	)

32 
	#CC_DIGIT
 3

	)

33 
	#CC_DOLLAR
 4

	)

34 
	#CC_VARALPHA
 5

	)

35 
	#CC_VARNUM
 6

	)

36 
	#CC_SPACE
 7

	)

37 
	#CC_QUOTE
 8

	)

38 
	#CC_QUOTE2
 9

	)

39 
	#CC_PIPE
 10

	)

40 
	#CC_MINUS
 11

	)

41 
	#CC_LT
 12

	)

42 
	#CC_GT
 13

	)

43 
	#CC_EQ
 14

	)

44 
	#CC_BANG
 15

	)

45 
	#CC_SLASH
 16

	)

46 
	#CC_LP
 17

	)

47 
	#CC_RP
 18

	)

48 
	#CC_SEMI
 19

	)

49 
	#CC_PLUS
 20

	)

50 
	#CC_STAR
 21

	)

51 
	#CC_PERCENT
 22

	)

52 
	#CC_COMMA
 23

	)

53 
	#CC_AND
 24

	)

54 
	#CC_TILDA
 25

	)

55 
	#CC_DOT
 26

	)

56 
	#CC_ILLEGAL
 27

	)

58 c⁄° 
	gaiCœss
[] = {

59 #ifde‡
SQLITE_ASCII


78 #ifde‡
SQLITE_EBCDIC


108 #ifde‡
SQLITE_ASCII


109 
	#ch¨M≠
(
X
Ë
sqlôe3UµîToLowî
[()X]

	)

111 #ifde‡
SQLITE_EBCDIC


112 
	#ch¨M≠
(
X
Ë
ebcdicToAscii
[()X]

	)

113 c⁄° 
	gebcdicToAscii
[] = {

145 
	~"keyw‹dhash.h
"

164 #ifde‡
SQLITE_ASCII


165 
	#IdCh¨
(
C
Ë((
sqlôe3Cty≥M≠
[()C]&0x46)!=0)

	)

167 #ifde‡
SQLITE_EBCDIC


168 c⁄° 
	gsqlôe3IsEbcdicIdCh¨
[] = {

183 
	#IdCh¨
(
C
Ë(((
c
=C)>=0x42 && 
sqlôe3IsEbcdicIdCh¨
[c-0x40]))

	)

187 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


188 
	$sqlôe3IsIdCh¨
(
u8
 
c
){  
	`IdCh¨
(c); 
	}
}

196 
	$sqlôe3GëTokí
(c⁄° *
z
, *
tokíTy≥
){

197 
i
, 
c
;

198  
aiCœss
[*
z
] ){

201 
CC_SPACE
: {

202 
	`ã°ˇ£
–
z
[0]==' ' );

203 
	`ã°ˇ£
–
z
[0]=='\t' );

204 
	`ã°ˇ£
–
z
[0]=='\n' );

205 
	`ã°ˇ£
–
z
[0]=='\f' );

206 
	`ã°ˇ£
–
z
[0]=='\r' );

207 
i
=1; 
	`sqlôe3Is•a˚
(
z
[i]); i++){}

208 *
tokíTy≥
 = 
TK_SPACE
;

209  
i
;

211 
CC_MINUS
: {

212 if–
z
[1]=='-' ){

213 
i
=2; (
c
=
z
[i])!=0 && c!='\n'; i++){}

214 *
tokíTy≥
 = 
TK_SPACE
;

215  
i
;

217 *
tokíTy≥
 = 
TK_MINUS
;

220 
CC_LP
: {

221 *
tokíTy≥
 = 
TK_LP
;

224 
CC_RP
: {

225 *
tokíTy≥
 = 
TK_RP
;

228 
CC_SEMI
: {

229 *
tokíTy≥
 = 
TK_SEMI
;

232 
CC_PLUS
: {

233 *
tokíTy≥
 = 
TK_PLUS
;

236 
CC_STAR
: {

237 *
tokíTy≥
 = 
TK_STAR
;

240 
CC_SLASH
: {

241 if–
z
[1]!='*' || z[2]==0 ){

242 *
tokíTy≥
 = 
TK_SLASH
;

245 
i
=3, 
c
=
z
[2]; (c!='*' || z[i]!='/') && (c=z[i])!=0; i++){}

246 if–
c
 ) 
i
++;

247 *
tokíTy≥
 = 
TK_SPACE
;

248  
i
;

250 
CC_PERCENT
: {

251 *
tokíTy≥
 = 
TK_REM
;

254 
CC_EQ
: {

255 *
tokíTy≥
 = 
TK_EQ
;

256  1 + (
z
[1]=='=');

258 
CC_LT
: {

259 if–(
c
=
z
[1])=='=' ){

260 *
tokíTy≥
 = 
TK_LE
;

262 }if–
c
=='>' ){

263 *
tokíTy≥
 = 
TK_NE
;

265 }if–
c
=='<' ){

266 *
tokíTy≥
 = 
TK_LSHIFT
;

269 *
tokíTy≥
 = 
TK_LT
;

273 
CC_GT
: {

274 if–(
c
=
z
[1])=='=' ){

275 *
tokíTy≥
 = 
TK_GE
;

277 }if–
c
=='>' ){

278 *
tokíTy≥
 = 
TK_RSHIFT
;

281 *
tokíTy≥
 = 
TK_GT
;

285 
CC_BANG
: {

286 if–
z
[1]!='=' ){

287 *
tokíTy≥
 = 
TK_ILLEGAL
;

290 *
tokíTy≥
 = 
TK_NE
;

294 
CC_PIPE
: {

295 if–
z
[1]!='|' ){

296 *
tokíTy≥
 = 
TK_BITOR
;

299 *
tokíTy≥
 = 
TK_CONCAT
;

303 
CC_COMMA
: {

304 *
tokíTy≥
 = 
TK_COMMA
;

307 
CC_AND
: {

308 *
tokíTy≥
 = 
TK_BITAND
;

311 
CC_TILDA
: {

312 *
tokíTy≥
 = 
TK_BITNOT
;

315 
CC_QUOTE
: {

316 
dñim
 = 
z
[0];

317 
	`ã°ˇ£
–
dñim
=='`' );

318 
	`ã°ˇ£
–
dñim
=='\'' );

319 
	`ã°ˇ£
–
dñim
=='"' );

320 
i
=1; (
c
=
z
[i])!=0; i++){

321 if–
c
==
dñim
 ){

322 if–
z
[
i
+1]==
dñim
 ){

323 
i
++;

329 if–
c
=='\'' ){

330 *
tokíTy≥
 = 
TK_STRING
;

331  
i
+1;

332 }if–
c
!=0 ){

333 *
tokíTy≥
 = 
TK_ID
;

334  
i
+1;

336 *
tokíTy≥
 = 
TK_ILLEGAL
;

337  
i
;

340 
CC_DOT
: {

341 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


342 if–!
	`sqlôe3Isdigô
(
z
[1]) )

345 *
tokíTy≥
 = 
TK_DOT
;

351 
CC_DIGIT
: {

352 
	`ã°ˇ£
–
z
[0]=='0' );Åestcase( z[0]=='1' );Åestcase( z[0]=='2' );

353 
	`ã°ˇ£
–
z
[0]=='3' );Åestcase( z[0]=='4' );Åestcase( z[0]=='5' );

354 
	`ã°ˇ£
–
z
[0]=='6' );Åestcase( z[0]=='7' );Åestcase( z[0]=='8' );

355 
	`ã°ˇ£
–
z
[0]=='9' );

356 *
tokíTy≥
 = 
TK_INTEGER
;

357 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


358 if–
z
[0]=='0' && (z[1]=='x' || z[1]=='X'Ë&& 
	`sqlôe3Isxdigô
(z[2]) ){

359 
i
=3; 
	`sqlôe3Isxdigô
(
z
[i]); i++){}

360  
i
;

363 
i
=0; 
	`sqlôe3Isdigô
(
z
[i]); i++){}

364 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


365 if–
z
[
i
]=='.' ){

366 
i
++;

367  
	`sqlôe3Isdigô
(
z
[
i
]) ){ i++; }

368 *
tokíTy≥
 = 
TK_FLOAT
;

370 if–(
z
[
i
]=='e' || z[i]=='E') &&

371 –
	`sqlôe3Isdigô
(
z
[
i
+1])

372 || ((
z
[
i
+1]=='+' || z[i+1]=='-'Ë&& 
	`sqlôe3Isdigô
(z[i+2]))

375 
i
 += 2;

376  
	`sqlôe3Isdigô
(
z
[
i
]) ){ i++; }

377 *
tokíTy≥
 = 
TK_FLOAT
;

380  
	`IdCh¨
(
z
[
i
]) ){

381 *
tokíTy≥
 = 
TK_ILLEGAL
;

382 
i
++;

384  
i
;

386 
CC_QUOTE2
: {

387 
i
=1, 
c
=
z
[0]; c!=']' && (c=z[i])!=0; i++){}

388 *
tokíTy≥
 = 
c
==']' ? 
TK_ID
 : 
TK_ILLEGAL
;

389  
i
;

391 
CC_VARNUM
: {

392 *
tokíTy≥
 = 
TK_VARIABLE
;

393 
i
=1; 
	`sqlôe3Isdigô
(
z
[i]); i++){}

394  
i
;

396 
CC_DOLLAR
:

397 
CC_VARALPHA
: {

398 
n
 = 0;

399 
	`ã°ˇ£
–
z
[0]=='$' );Åestcase( z[0]=='@' );

400 
	`ã°ˇ£
–
z
[0]==':' );Åestcase( z[0]=='#' );

401 *
tokíTy≥
 = 
TK_VARIABLE
;

402 
i
=1; (
c
=
z
[i])!=0; i++){

403 if–
	`IdCh¨
(
c
) ){

404 
n
++;

405 #i‚de‡
SQLITE_OMIT_TCL_VARIABLE


406 }if–
c
=='(' && 
n
>0 ){

408 
i
++;

409 } (
c
=
z
[
i
])!=0 && !
	`sqlôe3Is•a˚
(c) && c!=')' );

410 if–
c
==')' ){

411 
i
++;

413 *
tokíTy≥
 = 
TK_ILLEGAL
;

416 }if–
c
==':' && 
z
[
i
+1]==':' ){

417 
i
++;

423 if–
n
==0 ) *
tokíTy≥
 = 
TK_ILLEGAL
;

424  
i
;

426 
CC_KYWD
: {

427 
i
=1; 
aiCœss
[
z
[i]]<=
CC_KYWD
; i++){}

428 if–
	`IdCh¨
(
z
[
i
]) ){

432 
i
++;

435 *
tokíTy≥
 = 
TK_ID
;

436  
	`keyw‹dCode
((*)
z
, 
i
, 
tokíTy≥
);

438 
CC_X
: {

439 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


440 
	`ã°ˇ£
–
z
[0]=='x' );Åestcase( z[0]=='X' );

441 if–
z
[1]=='\'' ){

442 *
tokíTy≥
 = 
TK_BLOB
;

443 
i
=2; 
	`sqlôe3Isxdigô
(
z
[i]); i++){}

444 if–
z
[
i
]!='\'' || i%2 ){

445 *
tokíTy≥
 = 
TK_ILLEGAL
;

446  
z
[
i
] && z[i]!='\'' ){ i++; }

448 if–
z
[
i
] ) i++;

449  
i
;

455 
CC_ID
: {

456 
i
 = 1;

460 *
tokíTy≥
 = 
TK_ILLEGAL
;

464  
	`IdCh¨
(
z
[
i
]) ){ i++; }

465 *
tokíTy≥
 = 
TK_ID
;

466  
i
;

467 
	}
}

476 
	$sqlôe3RunP¨£r
(
P¨£
 *
pP¨£
, c⁄° *
zSql
, **
pzEºMsg
){

477 
nEº
 = 0;

478 
i
;

479 *
pEngöe
;

480 
tokíTy≥
;

481 
œ°TokíP¨£d
 = -1;

482 
sqlôe3
 *
db
 = 
pP¨£
->db;

483 
mxSqlLí
;

485 
	`as£π
–
zSql
!=0 );

486 
mxSqlLí
 = 
db
->
aLimô
[
SQLITE_LIMIT_SQL_LENGTH
];

487 if–
db
->
nVdbeA˘ive
==0 ){

488 
db
->
u1
.
isI¡îru±ed
 = 0;

490 
pP¨£
->
rc
 = 
SQLITE_OK
;

491 
pP¨£
->
zTaû
 = 
zSql
;

492 
i
 = 0;

493 
	`as£π
–
pzEºMsg
!=0 );

495 
pEngöe
 = 
	`sqlôe3P¨£rAŒoc
(
sqlôe3MÆloc
);

496 if–
pEngöe
==0 ){

497 
	`sqlôe3OomFau…
(
db
);

498  
SQLITE_NOMEM_BKPT
;

500 
	`as£π
–
pP¨£
->
pNewTabÀ
==0 );

501 
	`as£π
–
pP¨£
->
pNewTriggî
==0 );

502 
	`as£π
–
pP¨£
->
nV¨
==0 );

503 
	`as£π
–
pP¨£
->
nzV¨
==0 );

504 
	`as£π
–
pP¨£
->
azV¨
==0 );

505  
zSql
[
i
]!=0 ){

506 
	`as£π
–
i
>=0 );

507 
pP¨£
->
sLa°Tokí
.
z
 = &
zSql
[
i
];

508 
pP¨£
->
sLa°Tokí
.
n
 = 
	`sqlôe3GëTokí
((*)&
zSql
[
i
],&
tokíTy≥
);

509 
i
 +
pP¨£
->
sLa°Tokí
.
n
;

510 if–
i
>
mxSqlLí
 ){

511 
pP¨£
->
rc
 = 
SQLITE_TOOBIG
;

514 if–
tokíTy≥
>=
TK_SPACE
 ){

515 
	`as£π
–
tokíTy≥
==
TK_SPACE
 ||ÅokíTy≥==
TK_ILLEGAL
 );

516 if–
db
->
u1
.
isI¡îru±ed
 ){

517 
pP¨£
->
rc
 = 
SQLITE_INTERRUPT
;

520 if–
tokíTy≥
==
TK_ILLEGAL
 ){

521 
	`sqlôe3Eº‹Msg
(
pP¨£
, "unrecognizedÅoken: \"%T\"",

522 &
pP¨£
->
sLa°Tokí
);

526 
	`sqlôe3P¨£r
(
pEngöe
, 
tokíTy≥
, 
pP¨£
->
sLa°Tokí
,ÖParse);

527 
œ°TokíP¨£d
 = 
tokíTy≥
;

528 if–
pP¨£
->
rc
!=
SQLITE_OK
 || 
db
->
mÆlocFaûed
 ) ;

531 
	`as£π
–
nEº
==0 );

532 
pP¨£
->
zTaû
 = &
zSql
[
i
];

533 if–
pP¨£
->
rc
==
SQLITE_OK
 && 
db
->
mÆlocFaûed
==0 ){

534 
	`as£π
–
zSql
[
i
]==0 );

535 if–
œ°TokíP¨£d
!=
TK_SEMI
 ){

536 
	`sqlôe3P¨£r
(
pEngöe
, 
TK_SEMI
, 
pP¨£
->
sLa°Tokí
,ÖParse);

538 if–
pP¨£
->
rc
==
SQLITE_OK
 && 
db
->
mÆlocFaûed
==0 ){

539 
	`sqlôe3P¨£r
(
pEngöe
, 0, 
pP¨£
->
sLa°Tokí
,ÖParse);

542 #ifde‡
YYTRACKMAXSTACKDEPTH


543 
	`sqlôe3_muãx_íãr
(
	`sqlôe3MÆlocMuãx
());

544 
	`sqlôe3SètusHighw©î
(
SQLITE_STATUS_PARSER_STACK
,

545 
	`sqlôe3P¨£rSèckPók
(
pEngöe
)

547 
	`sqlôe3_muãx_Àave
(
	`sqlôe3MÆlocMuãx
());

549 
	`sqlôe3P¨£rFªe
(
pEngöe
, 
sqlôe3_‰ì
);

550 if–
db
->
mÆlocFaûed
 ){

551 
pP¨£
->
rc
 = 
SQLITE_NOMEM_BKPT
;

553 if–
pP¨£
->
rc
!=
SQLITE_OK
 &&ÖP¨£->rc!=
SQLITE_DONE
 &&ÖP¨£->
zEºMsg
==0 ){

554 
pP¨£
->
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
	`sqlôe3EºSå
’P¨£->
rc
));

556 
	`as£π
–
pzEºMsg
!=0 );

557 if–
pP¨£
->
zEºMsg
 ){

558 *
pzEºMsg
 = 
pP¨£
->
zEºMsg
;

559 
	`sqlôe3_log
(
pP¨£
->
rc
, "%s", *
pzEºMsg
);

560 
pP¨£
->
zEºMsg
 = 0;

561 
nEº
++;

563 if–
pP¨£
->
pVdbe
 &&ÖP¨£->
nEº
>0 &&ÖP¨£->
√°ed
==0 ){

564 
	`sqlôe3VdbeDñëe
(
pP¨£
->
pVdbe
);

565 
pP¨£
->
pVdbe
 = 0;

567 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


568 if–
pP¨£
->
√°ed
==0 ){

569 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
aTabÀLock
);

570 
pP¨£
->
aTabÀLock
 = 0;

571 
pP¨£
->
nTabÀLock
 = 0;

574 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


575 
	`sqlôe3_‰ì
(
pP¨£
->
≠VèbLock
);

578 if–!
IN_DECLARE_VTAB
 ){

583 
	`sqlôe3DñëeTabÀ
(
db
, 
pP¨£
->
pNewTabÀ
);

586 if–
pP¨£
->
pWôhToFªe
 ) 
	`sqlôe3WôhDñëe
(
db
,ÖParse->pWithToFree);

587 
	`sqlôe3DñëeTriggî
(
db
, 
pP¨£
->
pNewTriggî
);

588 
i
=
pP¨£
->
nzV¨
-1; i>=0; i--Ë
	`sqlôe3DbFªe
(
db
,ÖP¨£->
azV¨
[i]);

589 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
azV¨
);

590  
pP¨£
->
pAöc
 ){

591 
AutoöcInfo
 *
p
 = 
pP¨£
->
pAöc
;

592 
pP¨£
->
pAöc
 = 
p
->
pNext
;

593 
	`sqlôe3DbFªe
(
db
, 
p
);

595  
pP¨£
->
pZombõTab
 ){

596 
TabÀ
 *
p
 = 
pP¨£
->
pZombõTab
;

597 
pP¨£
->
pZombõTab
 = 
p
->
pNextZombõ
;

598 
	`sqlôe3DñëeTabÀ
(
db
, 
p
);

600 
	`as£π
–
nEº
==0 || 
pP¨£
->
rc
!=
SQLITE_OK
 );

601  
nEº
;

602 
	}
}

	@treeview.c

20 
	~"sqlôeI¡.h
"

21 #ifde‡
SQLITE_DEBUG


27 
TªeVõw
 *
	$sqlôe3TªeVõwPush
(
TªeVõw
 *
p
, 
u8
 
m‹eToFﬁlow
){

28 if–
p
==0 ){

29 
p
 = 
	`sqlôe3_mÆloc64
( (*p) );

30 if–
p
==0 )  0;

31 
	`mem£t
(
p
, 0, (*p));

33 
p
->
iLevñ
++;

35 
	`as£π
–
m‹eToFﬁlow
==0 || moreToFollow==1 );

36 if–
p
->
iLevñ
<’->
bLöe
ËËp->bLöe[p->iLevñ] = 
m‹eToFﬁlow
;

37  
p
;

38 
	}
}

43 
	$sqlôe3TªeVõwP›
(
TªeVõw
 *
p
){

44 if–
p
==0 ) ;

45 
p
->
iLevñ
--;

46 if–
p
->
iLevñ
<0 ) 
	`sqlôe3_‰ì
(p);

47 
	}
}

53 
	$sqlôe3TªeVõwLöe
(
TªeVõw
 *
p
, c⁄° *
zF‹m©
, ...){

54 
va_li°
 
≠
;

55 
i
;

56 
SåAccum
 
acc
;

57 
zBuf
[500];

58 
	`sqlôe3SåAccumInô
(&
acc
, 0, 
zBuf
, (zBuf), 0);

59 if–
p
 ){

60 
i
=0; i<
p
->
iLevñ
 && i<’->
bLöe
)-1; i++){

61 
	`sqlôe3SåAccumAµíd
(&
acc
, 
p
->
bLöe
[
i
] ? "| " : " ", 4);

63 
	`sqlôe3SåAccumAµíd
(&
acc
, 
p
->
bLöe
[
i
] ? "|-- " : "'-- ", 4);

65 
	`va_°¨t
(
≠
, 
zF‹m©
);

66 
	`sqlôe3VXPrötf
(&
acc
, 
zF‹m©
, 
≠
);

67 
	`va_íd
(
≠
);

68 if–
zBuf
[
acc
.
nCh¨
-1]!='\n' ) 
	`sqlôe3SåAccumAµíd
(&acc, "\n", 1);

69 
	`sqlôe3SåAccumFöish
(&
acc
);

70 
	`Ârötf
(
°dout
,"%s", 
zBuf
);

71 
	`fÊush
(
°dout
);

72 
	}
}

77 
	$sqlôe3TªeVõwIãm
(
TªeVõw
 *
p
, c⁄° *
zLabñ
,
u8
 
m‹eFﬁlows
){

78 
p
 = 
	`sqlôe3TªeVõwPush
’, 
m‹eFﬁlows
);

79 
	`sqlôe3TªeVõwLöe
(
p
, "%s", 
zLabñ
);

80 
	}
}

85 
	$sqlôe3TªeVõwWôh
(
TªeVõw
 *
pVõw
, c⁄° 
Wôh
 *
pWôh
, 
u8
 
m‹eToFﬁlow
){

86 
i
;

87 if–
pWôh
==0 ) ;

88 if–
pWôh
->
nCã
==0 ) ;

89 if–
pWôh
->
pOuãr
 ){

90 
	`sqlôe3TªeVõwLöe
(
pVõw
, "WITH (0x%p,ÖOuãr=0x%p)",
pWôh
,pWôh->
pOuãr
);

92 
	`sqlôe3TªeVõwLöe
(
pVõw
, "WITH (0x%p)", 
pWôh
);

94 if–
pWôh
->
nCã
>0 ){

95 
pVõw
 = 
	`sqlôe3TªeVõwPush
(pView, 1);

96 
i
=0; i<
pWôh
->
nCã
; i++){

97 
SåAccum
 
x
;

98 
zLöe
[1000];

99 c⁄° 
Cã
 *
pCã
 = &
pWôh
->
a
[
i
];

100 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zLöe
, (zLine), 0);

101 
	`sqlôe3XPrötf
(&
x
, "%s", 
pCã
->
zName
);

102 if–
pCã
->
pCﬁs
 &&ÖCã->pCﬁs->
nEx¥
>0 ){

103 
cSï
 = '(';

104 
j
;

105 
j
=0; j<
pCã
->
pCﬁs
->
nEx¥
; j++){

106 
	`sqlôe3XPrötf
(&
x
, "%c%s", 
cSï
, 
pCã
->
pCﬁs
->
a
[
j
].
zName
);

107 
cSï
 = ',';

109 
	`sqlôe3XPrötf
(&
x
, ")");

111 
	`sqlôe3XPrötf
(&
x
, " AS");

112 
	`sqlôe3SåAccumFöish
(&
x
);

113 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zLöe
, 
i
<
pWôh
->
nCã
-1);

114 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pCã
->
pSñe˘
, 0);

115 
	`sqlôe3TªeVõwP›
(
pVõw
);

117 
	`sqlôe3TªeVõwP›
(
pVõw
);

119 
	}
}

125 
	$sqlôe3TªeVõwSñe˘
(
TªeVõw
 *
pVõw
, c⁄° 
Sñe˘
 *
p
, 
u8
 
m‹eToFﬁlow
){

126 
n
 = 0;

127 
˙t
 = 0;

128 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

129 if–
p
->
pWôh
 ){

130 
	`sqlôe3TªeVõwWôh
(
pVõw
, 
p
->
pWôh
, 1);

131 
˙t
 = 1;

132 
	`sqlôe3TªeVõwPush
(
pVõw
, 1);

135 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SELECT%s%s (0x%p) selFlags=0x%xÇSelectRow=%d",

136 ((
p
->
£lFœgs
 & 
SF_Di°ö˘
) ? " DISTINCT" : ""),

137 ((
p
->
£lFœgs
 & 
SF_Aggªg©e
) ? "ágg_flag" : ""),Ö,Ö->selFlags,

138 ()
p
->
nSñe˘Row


140 if–
˙t
++ ) 
	`sqlôe3TªeVõwP›
(
pVõw
);

141 if–
p
->
pPri‹
 ){

142 
n
 = 1000;

144 
n
 = 0;

145 if–
p
->
pSrc
 &&Ö->pSrc->
nSrc
 ) 
n
++;

146 if–
p
->
pWhîe
 ) 
n
++;

147 if–
p
->
pGroupBy
 ) 
n
++;

148 if–
p
->
pHavög
 ) 
n
++;

149 if–
p
->
pOrdîBy
 ) 
n
++;

150 if–
p
->
pLimô
 ) 
n
++;

151 if–
p
->
pOff£t
 ) 
n
++;

153 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pELi°
, (
n
--)>0, "result-set");

154 if–
p
->
pSrc
 &&Ö->pSrc->
nSrc
 ){

155 
i
;

156 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, (
n
--)>0);

157 
	`sqlôe3TªeVõwLöe
(
pVõw
, "FROM");

158 
i
=0; i<
p
->
pSrc
->
nSrc
; i++){

159 
SrcLi°_ôem
 *
pIãm
 = &
p
->
pSrc
->
a
[
i
];

160 
SåAccum
 
x
;

161 
zLöe
[100];

162 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zLöe
, (zLine), 0);

163 
	`sqlôe3XPrötf
(&
x
, "{%d,*}", 
pIãm
->
iCurs‹
);

164 if–
pIãm
->
zD©aba£
 ){

165 
	`sqlôe3XPrötf
(&
x
, " %s.%s", 
pIãm
->
zD©aba£
,ÖIãm->
zName
);

166 }if–
pIãm
->
zName
 ){

167 
	`sqlôe3XPrötf
(&
x
, " %s", 
pIãm
->
zName
);

169 if–
pIãm
->
pTab
 ){

170 
	`sqlôe3XPrötf
(&
x
, "Åab«me=%Q", 
pIãm
->
pTab
->
zName
);

172 if–
pIãm
->
zAlüs
 ){

173 
	`sqlôe3XPrötf
(&
x
, " (AS %s)", 
pIãm
->
zAlüs
);

175 if–
pIãm
->
fg
.
joöty≥
 & 
JT_LEFT
 ){

176 
	`sqlôe3XPrötf
(&
x
, " LEFT-JOIN");

178 
	`sqlôe3SåAccumFöish
(&
x
);

179 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zLöe
, 
i
<
p
->
pSrc
->
nSrc
-1);

180 if–
pIãm
->
pSñe˘
 ){

181 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pIãm
->
pSñe˘
, 0);

183 if–
pIãm
->
fg
.
isTabFunc
 ){

184 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pIãm
->
u1
.
pFuncArg
, 0, "func-args:");

186 
	`sqlôe3TªeVõwP›
(
pVõw
);

188 
	`sqlôe3TªeVõwP›
(
pVõw
);

190 if–
p
->
pWhîe
 ){

191 
	`sqlôe3TªeVõwIãm
(
pVõw
, "WHERE", (
n
--)>0);

192 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pWhîe
, 0);

193 
	`sqlôe3TªeVõwP›
(
pVõw
);

195 if–
p
->
pGroupBy
 ){

196 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pGroupBy
, (
n
--)>0, "GROUPBY");

198 if–
p
->
pHavög
 ){

199 
	`sqlôe3TªeVõwIãm
(
pVõw
, "HAVING", (
n
--)>0);

200 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pHavög
, 0);

201 
	`sqlôe3TªeVõwP›
(
pVõw
);

203 if–
p
->
pOrdîBy
 ){

204 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
p
->
pOrdîBy
, (
n
--)>0, "ORDERBY");

206 if–
p
->
pLimô
 ){

207 
	`sqlôe3TªeVõwIãm
(
pVõw
, "LIMIT", (
n
--)>0);

208 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pLimô
, 0);

209 
	`sqlôe3TªeVõwP›
(
pVõw
);

211 if–
p
->
pOff£t
 ){

212 
	`sqlôe3TªeVõwIãm
(
pVõw
, "OFFSET", (
n
--)>0);

213 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
p
->
pOff£t
, 0);

214 
	`sqlôe3TªeVõwP›
(
pVõw
);

216 if–
p
->
pPri‹
 ){

217 c⁄° *
zOp
 = "UNION";

218  
p
->
›
 ){

219 
TK_ALL
: 
zOp
 = "UNION ALL"; ;

220 
TK_INTERSECT
: 
zOp
 = "INTERSECT"; ;

221 
TK_EXCEPT
: 
zOp
 = "EXCEPT"; ;

223 
	`sqlôe3TªeVõwIãm
(
pVõw
, 
zOp
, 1);

225 
p
 =Ö->
pPri‹
;

226 } 
p
!=0 );

227 
	`sqlôe3TªeVõwP›
(
pVõw
);

228 
	}
}

233 
	$sqlôe3TªeVõwEx¥
(
TªeVõw
 *
pVõw
, c⁄° 
Ex¥
 *
pEx¥
, 
u8
 
m‹eToFﬁlow
){

234 c⁄° *
zBöOp
 = 0;

235 c⁄° *
zUniOp
 = 0;

236 
zFlgs
[30];

237 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

238 if–
pEx¥
==0 ){

239 
	`sqlôe3TªeVõwLöe
(
pVõw
, "nil");

240 
	`sqlôe3TªeVõwP›
(
pVõw
);

243 if–
pEx¥
->
Êags
 ){

244 
	`sqlôe3_¢¥ötf
((
zFlgs
),zFlgs," fœgs=0x%x",
pEx¥
->
Êags
);

246 
zFlgs
[0] = 0;

248  
pEx¥
->
›
 ){

249 
TK_AGG_COLUMN
: {

250 
	`sqlôe3TªeVõwLöe
(
pVõw
, "AGG{%d:%d}%s",

251 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

254 
TK_COLUMN
: {

255 if–
pEx¥
->
iTabÀ
<0 ){

257 
	`sqlôe3TªeVõwLöe
(
pVõw
, "COLUMN(%d)%s", 
pEx¥
->
iCﬁumn
, 
zFlgs
);

259 
	`sqlôe3TªeVõwLöe
(
pVõw
, "{%d:%d}%s",

260 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

264 
TK_INTEGER
: {

265 if–
pEx¥
->
Êags
 & 
EP_I¡VÆue
 ){

266 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%d", 
pEx¥
->
u
.
iVÆue
);

268 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s", 
pEx¥
->
u
.
zTokí
);

272 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


273 
TK_FLOAT
: {

274 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%s", 
pEx¥
->
u
.
zTokí
);

278 
TK_STRING
: {

279 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%Q", 
pEx¥
->
u
.
zTokí
);

282 
TK_NULL
: {

283 
	`sqlôe3TªeVõwLöe
(
pVõw
,"NULL");

286 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


287 
TK_BLOB
: {

288 
	`sqlôe3TªeVõwLöe
(
pVõw
,"%s", 
pEx¥
->
u
.
zTokí
);

292 
TK_VARIABLE
: {

293 
	`sqlôe3TªeVõwLöe
(
pVõw
,"VARIABLE(%s,%d)",

294 
pEx¥
->
u
.
zTokí
,ÖEx¥->
iCﬁumn
);

297 
TK_REGISTER
: {

298 
	`sqlôe3TªeVõwLöe
(
pVõw
,"REGISTER(%d)", 
pEx¥
->
iTabÀ
);

301 
TK_ID
: {

302 
	`sqlôe3TªeVõwLöe
(
pVõw
,"ID \"%w\"", 
pEx¥
->
u
.
zTokí
);

305 #i‚de‡
SQLITE_OMIT_CAST


306 
TK_CAST
: {

308 
	`sqlôe3TªeVõwLöe
(
pVõw
,"CAST %Q", 
pEx¥
->
u
.
zTokí
);

309 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

313 
TK_LT
: 
zBöOp
 = "LT"; ;

314 
TK_LE
: 
zBöOp
 = "LE"; ;

315 
TK_GT
: 
zBöOp
 = "GT"; ;

316 
TK_GE
: 
zBöOp
 = "GE"; ;

317 
TK_NE
: 
zBöOp
 = "NE"; ;

318 
TK_EQ
: 
zBöOp
 = "EQ"; ;

319 
TK_IS
: 
zBöOp
 = "IS"; ;

320 
TK_ISNOT
: 
zBöOp
 = "ISNOT"; ;

321 
TK_AND
: 
zBöOp
 = "AND"; ;

322 
TK_OR
: 
zBöOp
 = "OR"; ;

323 
TK_PLUS
: 
zBöOp
 = "ADD"; ;

324 
TK_STAR
: 
zBöOp
 = "MUL"; ;

325 
TK_MINUS
: 
zBöOp
 = "SUB"; ;

326 
TK_REM
: 
zBöOp
 = "REM"; ;

327 
TK_BITAND
: 
zBöOp
 = "BITAND"; ;

328 
TK_BITOR
: 
zBöOp
 = "BITOR"; ;

329 
TK_SLASH
: 
zBöOp
 = "DIV"; ;

330 
TK_LSHIFT
: 
zBöOp
 = "LSHIFT"; ;

331 
TK_RSHIFT
: 
zBöOp
 = "RSHIFT"; ;

332 
TK_CONCAT
: 
zBöOp
 = "CONCAT"; ;

333 
TK_DOT
: 
zBöOp
 = "DOT"; ;

335 
TK_UMINUS
: 
zUniOp
 = "UMINUS"; ;

336 
TK_UPLUS
: 
zUniOp
 = "UPLUS"; ;

337 
TK_BITNOT
: 
zUniOp
 = "BITNOT"; ;

338 
TK_NOT
: 
zUniOp
 = "NOT"; ;

339 
TK_ISNULL
: 
zUniOp
 = "ISNULL"; ;

340 
TK_NOTNULL
: 
zUniOp
 = "NOTNULL"; ;

342 
TK_SPAN
: {

343 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SPAN %Q", 
pEx¥
->
u
.
zTokí
);

344 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

348 
TK_COLLATE
: {

349 
	`sqlôe3TªeVõwLöe
(
pVõw
, "COLLATE %Q", 
pEx¥
->
u
.
zTokí
);

350 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

354 
TK_AGG_FUNCTION
:

355 
TK_FUNCTION
: {

356 
Ex¥Li°
 *
pF¨g
;

357 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) ){

358 
pF¨g
 = 0;

360 
pF¨g
 = 
pEx¥
->
x
.
pLi°
;

362 if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 ){

363 
	`sqlôe3TªeVõwLöe
(
pVõw
, "AGG_FUNCTION%d %Q",

364 
pEx¥
->
›2
,ÖEx¥->
u
.
zTokí
);

366 
	`sqlôe3TªeVõwLöe
(
pVõw
, "FUNCTION %Q", 
pEx¥
->
u
.
zTokí
);

368 if–
pF¨g
 ){

369 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pF¨g
, 0, 0);

373 #i‚de‡
SQLITE_OMIT_SUBQUERY


374 
TK_EXISTS
: {

375 
	`sqlôe3TªeVõwLöe
(
pVõw
, "EXISTS-expr");

376 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

379 
TK_SELECT
: {

380 
	`sqlôe3TªeVõwLöe
(
pVõw
, "SELECT-expr");

381 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

384 
TK_IN
: {

385 
	`sqlôe3TªeVõwLöe
(
pVõw
, "IN");

386 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

387 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

388 
	`sqlôe3TªeVõwSñe˘
(
pVõw
, 
pEx¥
->
x
.
pSñe˘
, 0);

390 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pEx¥
->
x
.
pLi°
, 0, 0);

407 
TK_BETWEEN
: {

408 
Ex¥
 *
pX
 = 
pEx¥
->
pLe·
;

409 
Ex¥
 *
pY
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

410 
Ex¥
 *
pZ
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

411 
	`sqlôe3TªeVõwLöe
(
pVõw
, "BETWEEN");

412 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pX
, 1);

413 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pY
, 1);

414 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pZ
, 0);

417 
TK_TRIGGER
: {

425 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s(%d)",

426 
pEx¥
->
iTabÀ
 ? "NEW" : "OLD",ÖEx¥->
iCﬁumn
);

429 
TK_CASE
: {

430 
	`sqlôe3TªeVõwLöe
(
pVõw
, "CASE");

431 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

432 
	`sqlôe3TªeVõwEx¥Li°
(
pVõw
, 
pEx¥
->
x
.
pLi°
, 0, 0);

435 #i‚de‡
SQLITE_OMIT_TRIGGER


436 
TK_RAISE
: {

437 c⁄° *
zTy≥
 = "unk";

438  
pEx¥
->
afföôy
 ){

439 
OE_Rﬁlback
: 
zTy≥
 = "rollback"; ;

440 
OE_Ab‹t
: 
zTy≥
 = "abort"; ;

441 
OE_Faû
: 
zTy≥
 = "fail"; ;

442 
OE_Ign‹e
: 
zTy≥
 = "ignore"; ;

444 
	`sqlôe3TªeVõwLöe
(
pVõw
, "RAISE %s(%Q)", 
zTy≥
, 
pEx¥
->
u
.
zTokí
);

448 
TK_MATCH
: {

449 
	`sqlôe3TªeVõwLöe
(
pVõw
, "MATCH {%d:%d}%s",

450 
pEx¥
->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
zFlgs
);

451 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pRight
, 0);

455 
	`sqlôe3TªeVõwLöe
(
pVõw
, "›=%d", 
pEx¥
->
›
);

459 if–
zBöOp
 ){

460 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s%s", 
zBöOp
, 
zFlgs
);

461 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 1);

462 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pRight
, 0);

463 }if–
zUniOp
 ){

464 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s%s", 
zUniOp
, 
zFlgs
);

465 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pEx¥
->
pLe·
, 0);

467 
	`sqlôe3TªeVõwP›
(
pVõw
);

468 
	}
}

473 
	$sqlôe3TªeVõwEx¥Li°
(

474 
TªeVõw
 *
pVõw
,

475 c⁄° 
Ex¥Li°
 *
pLi°
,

476 
u8
 
m‹eToFﬁlow
,

477 c⁄° *
zLabñ


479 
i
;

480 
pVõw
 = 
	`sqlôe3TªeVõwPush
’Võw, 
m‹eToFﬁlow
);

481 if–
zLabñ
==0 || zLabel[0]==0 ) zLabel = "LIST";

482 if–
pLi°
==0 ){

483 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%†”m±y)", 
zLabñ
);

485 
	`sqlôe3TªeVõwLöe
(
pVõw
, "%s", 
zLabñ
);

486 
i
=0; i<
pLi°
->
nEx¥
; i++){

487 
j
 = 
pLi°
->
a
[
i
].
u
.
x
.
iOrdîByCﬁ
;

488 if–
j
 ){

489 
	`sqlôe3TªeVõwPush
(
pVõw
, 0);

490 
	`sqlôe3TªeVõwLöe
(
pVõw
, "iOrdîByCﬁ=%d", 
j
);

492 
	`sqlôe3TªeVõwEx¥
(
pVõw
, 
pLi°
->
a
[
i
].
pEx¥
, i<pLi°->
nEx¥
-1);

493 if–
j
 ) 
	`sqlôe3TªeVõwP›
(
pVõw
);

496 
	`sqlôe3TªeVõwP›
(
pVõw
);

497 
	}
}

	@trigger.c

13 
	~"sqlôeI¡.h
"

15 #i‚de‡
SQLITE_OMIT_TRIGGER


19 
	$sqlôe3DñëeTriggîSãp
(
sqlôe3
 *
db
, 
TriggîSãp
 *
pTriggîSãp
){

20  
pTriggîSãp
 ){

21 
TriggîSãp
 * 
pTmp
 = 
pTriggîSãp
;

22 
pTriggîSãp
 =ÖTriggîSãp->
pNext
;

24 
	`sqlôe3Ex¥Dñëe
(
db
, 
pTmp
->
pWhîe
);

25 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pTmp
->
pEx¥Li°
);

26 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pTmp
->
pSñe˘
);

27 
	`sqlôe3IdLi°Dñëe
(
db
, 
pTmp
->
pIdLi°
);

29 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

31 
	}
}

47 
Triggî
 *
	$sqlôe3TriggîLi°
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

48 
Schema
 * c⁄° 
pTmpSchema
 = 
pP¨£
->
db
->
aDb
[1].
pSchema
;

49 
Triggî
 *
pLi°
 = 0;

51 if–
pP¨£
->
dißbÀTriggîs
 ){

55 if–
pTmpSchema
!=
pTab
->
pSchema
 ){

56 
HashEÀm
 *
p
;

57 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
pP¨£
->
db
, 0, 
pTmpSchema
) );

58 
p
=
	`sqlôeHashFú°
(&
pTmpSchema
->
åigHash
);Ö;Ö=
	`sqlôeHashNext
(p)){

59 
Triggî
 *
pTrig
 = (Triggî *)
	`sqlôeHashD©a
(
p
);

60 if–
pTrig
->
pTabSchema
==
pTab
->
pSchema


61 && 0==
	`sqlôe3SåICmp
(
pTrig
->
èbÀ
, 
pTab
->
zName
)

63 
pTrig
->
pNext
 = (
pLi°
 ?ÖLi° : 
pTab
->
pTriggî
);

64 
pLi°
 = 
pTrig
;

69  (
pLi°
 ?ÖLi° : 
pTab
->
pTriggî
);

70 
	}
}

80 
	$sqlôe3BegöTriggî
(

81 
P¨£
 *
pP¨£
,

82 
Tokí
 *
pName1
,

83 
Tokí
 *
pName2
,

84 
å_tm
,

85 
›
,

86 
IdLi°
 *
pCﬁumns
,

87 
SrcLi°
 *
pTabÀName
,

88 
Ex¥
 *
pWhí
,

89 
isTemp
,

90 
noEº


92 
Triggî
 *
pTriggî
 = 0;

93 
TabÀ
 *
pTab
;

94 *
zName
 = 0;

95 
sqlôe3
 *
db
 = 
pP¨£
->db;

96 
iDb
;

97 
Tokí
 *
pName
;

98 
DbFixî
 
sFix
;

99 
iTabDb
;

101 
	`as£π
–
pName1
!=0 );

102 
	`as£π
–
pName2
!=0 );

103 
	`as£π
–
›
==
TK_INSERT
 || op==
TK_UPDATE
 || op==
TK_DELETE
 );

104 
	`as£π
–
›
>0 && op<0xff );

105 if–
isTemp
 ){

107 if–
pName2
->
n
>0 ){

108 
	`sqlôe3Eº‹Msg
(
pP¨£
, "temporaryÅrigger mayÇot have qualifiedÇame");

109 
åiggî_˛ónup
;

111 
iDb
 = 1;

112 
pName
 = 
pName1
;

115 
iDb
 = 
	`sqlôe3TwoP¨tName
(
pP¨£
, 
pName1
, 
pName2
, &
pName
);

116 if–
iDb
<0 ){

117 
åiggî_˛ónup
;

120 if–!
pTabÀName
 || 
db
->
mÆlocFaûed
 ){

121 
åiggî_˛ónup
;

132 if–
db
->
öô
.
busy
 && 
iDb
!=1 ){

133 
	`sqlôe3DbFªe
(
db
, 
pTabÀName
->
a
[0].
zD©aba£
);

134 
pTabÀName
->
a
[0].
zD©aba£
 = 0;

142 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabÀName
);

143 if–
db
->
öô
.
busy
==0 && 
pName2
->
n
==0 && 
pTab


144 && 
pTab
->
pSchema
==
db
->
aDb
[1].pSchema ){

145 
iDb
 = 1;

149 if–
db
->
mÆlocFaûed
 ) 
åiggî_˛ónup
;

150 
	`as£π
–
pTabÀName
->
nSrc
==1 );

151 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "åiggî", 
pName
);

152 if–
	`sqlôe3FixSrcLi°
(&
sFix
, 
pTabÀName
) ){

153 
åiggî_˛ónup
;

155 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabÀName
);

156 if–!
pTab
 ){

158 if–
db
->
öô
.
iDb
==1 ){

167 
db
->
öô
.
‹ph™Triggî
 = 1;

169 
åiggî_˛ónup
;

171 if–
	`IsVútuÆ
(
pTab
) ){

172 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot createÅriggers on virtualÅables");

173 
åiggî_˛ónup
;

178 
zName
 = 
	`sqlôe3NameFromTokí
(
db
, 
pName
);

179 if–!
zName
 || 
SQLITE_OK
!=
	`sqlôe3CheckObje˘Name
(
pP¨£
, zName) ){

180 
åiggî_˛ónup
;

182 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

183 if–
	`sqlôe3HashFöd
(&(
db
->
aDb
[
iDb
].
pSchema
->
åigHash
),
zName
) ){

184 if–!
noEº
 ){

185 
	`sqlôe3Eº‹Msg
(
pP¨£
, "åiggî %TáÃódyÉxi°s", 
pName
);

187 
	`as£π
–!
db
->
öô
.
busy
 );

188 
	`sqlôe3CodeVîifySchema
(
pP¨£
, 
iDb
);

190 
åiggî_˛ónup
;

194 if–
	`sqlôe3SåNICmp
(
pTab
->
zName
, "sqlite_", 7)==0 ){

195 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot createÅrigger on systemÅable");

196 
åiggî_˛ónup
;

202 if–
pTab
->
pSñe˘
 && 
å_tm
!=
TK_INSTEAD
 ){

203 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot create %sÅrigger on view: %S",

204 (
å_tm
 =
TK_BEFORE
)?"BEFORE":"AFTER", 
pTabÀName
, 0);

205 
åiggî_˛ónup
;

207 if–!
pTab
->
pSñe˘
 && 
å_tm
==
TK_INSTEAD
 ){

208 
	`sqlôe3Eº‹Msg
(
pP¨£
, "cannot create INSTEAD OF"

209 "Åriggî o¿èbÀ: %S", 
pTabÀName
, 0);

210 
åiggî_˛ónup
;

212 
iTabDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

214 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


216 
code
 = 
SQLITE_CREATE_TRIGGER
;

217 c⁄° *
zDb
 = 
db
->
aDb
[
iTabDb
].
zName
;

218 c⁄° *
zDbTrig
 = 
isTemp
 ? 
db
->
aDb
[1].
zName
 : 
zDb
;

219 if–
iTabDb
==1 || 
isTemp
 ) 
code
 = 
SQLITE_CREATE_TEMP_TRIGGER
;

220 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
zName
, 
pTab
->zName, 
zDbTrig
) ){

221 
åiggî_˛ónup
;

223 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_INSERT
, 
	`SCHEMA_TABLE
(
iTabDb
),0,
zDb
)){

224 
åiggî_˛ónup
;

234 i‡(
å_tm
 =
TK_INSTEAD
){

235 
å_tm
 = 
TK_BEFORE
;

239 
pTriggî
 = (
Triggî
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Trigger));

240 if–
pTriggî
==0 ) 
åiggî_˛ónup
;

241 
pTriggî
->
zName
 = zName;

242 
zName
 = 0;

243 
pTriggî
->
èbÀ
 = 
	`sqlôe3DbSåDup
(
db
, 
pTabÀName
->
a
[0].
zName
);

244 
pTriggî
->
pSchema
 = 
db
->
aDb
[
iDb
].pSchema;

245 
pTriggî
->
pTabSchema
 = 
pTab
->
pSchema
;

246 
pTriggî
->
›
 = (
u8
)op;

247 
pTriggî
->
å_tm
 =År_tm==
TK_BEFORE
 ? 
TRIGGER_BEFORE
 : 
TRIGGER_AFTER
;

248 
pTriggî
->
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhí, 
EXPRDUP_REDUCE
);

249 
pTriggî
->
pCﬁumns
 = 
	`sqlôe3IdLi°Dup
(
db
,ÖColumns);

250 
	`as£π
–
pP¨£
->
pNewTriggî
==0 );

251 
pP¨£
->
pNewTriggî
 = 
pTriggî
;

253 
åiggî_˛ónup
:

254 
	`sqlôe3DbFªe
(
db
, 
zName
);

255 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabÀName
);

256 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumns
);

257 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

258 if–!
pP¨£
->
pNewTriggî
 ){

259 
	`sqlôe3DñëeTriggî
(
db
, 
pTriggî
);

261 
	`as£π
–
pP¨£
->
pNewTriggî
==
pTriggî
 );

263 
	}
}

269 
	$sqlôe3FöishTriggî
(

270 
P¨£
 *
pP¨£
,

271 
TriggîSãp
 *
pSãpLi°
,

272 
Tokí
 *
pAŒ


274 
Triggî
 *
pTrig
 = 
pP¨£
->
pNewTriggî
;

275 *
zName
;

276 
sqlôe3
 *
db
 = 
pP¨£
->db;

277 
DbFixî
 
sFix
;

278 
iDb
;

279 
Tokí
 
«meTokí
;

281 
pP¨£
->
pNewTriggî
 = 0;

282 if–
	`NEVER
(
pP¨£
->
nEº
Ë|| !
pTrig
 ) 
åiggîföish_˛ónup
;

283 
zName
 = 
pTrig
->zName;

284 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTrig
->
pSchema
);

285 
pTrig
->
°ï_li°
 = 
pSãpLi°
;

286  
pSãpLi°
 ){

287 
pSãpLi°
->
pTrig
 =ÖTrig;

288 
pSãpLi°
 =ÖSãpLi°->
pNext
;

290 
	`sqlôe3TokíInô
(&
«meTokí
, 
pTrig
->
zName
);

291 
	`sqlôe3FixInô
(&
sFix
, 
pP¨£
, 
iDb
, "åiggî", &
«meTokí
);

292 if–
	`sqlôe3FixTriggîSãp
(&
sFix
, 
pTrig
->
°ï_li°
)

293 || 
	`sqlôe3FixEx¥
(&
sFix
, 
pTrig
->
pWhí
)

295 
åiggîföish_˛ónup
;

301 if–!
db
->
öô
.
busy
 ){

302 
Vdbe
 *
v
;

303 *
z
;

306 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

307 if–
v
==0 ) 
åiggîföish_˛ónup
;

308 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 0, 
iDb
);

309 
z
 = 
	`sqlôe3DbSåNDup
(
db
, (*)
pAŒ
->z,ÖAŒ->
n
);

310 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

312 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb), zName,

313 
pTrig
->
èbÀ
, 
z
);

314 
	`sqlôe3DbFªe
(
db
, 
z
);

315 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

316 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
,

317 
	`sqlôe3MPrötf
(
db
, "ty≥='åiggî' ANDÇame='%q'", 
zName
));

320 if–
db
->
öô
.
busy
 ){

321 
Triggî
 *
pLök
 = 
pTrig
;

322 
Hash
 *
pHash
 = &
db
->
aDb
[
iDb
].
pSchema
->
åigHash
;

323 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

324 
pTrig
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zName
,ÖTrig);

325 if–
pTrig
 ){

326 
	`sqlôe3OomFau…
(
db
);

327 }if–
pLök
->
pSchema
=ıLök->
pTabSchema
 ){

328 
TabÀ
 *
pTab
;

329 
pTab
 = 
	`sqlôe3HashFöd
(&
pLök
->
pTabSchema
->
tblHash
,ÖLök->
èbÀ
);

330 
	`as£π
–
pTab
!=0 );

331 
pLök
->
pNext
 = 
pTab
->
pTriggî
;

332 
pTab
->
pTriggî
 = 
pLök
;

336 
åiggîföish_˛ónup
:

337 
	`sqlôe3DñëeTriggî
(
db
, 
pTrig
);

338 
	`as£π
–!
pP¨£
->
pNewTriggî
 );

339 
	`sqlôe3DñëeTriggîSãp
(
db
, 
pSãpLi°
);

340 
	}
}

349 
TriggîSãp
 *
	$sqlôe3TriggîSñe˘Sãp
(
sqlôe3
 *
db
, 
Sñe˘
 *
pSñe˘
){

350 
TriggîSãp
 *
pTriggîSãp
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (TriggerStep));

351 if–
pTriggîSãp
==0 ) {

352 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

355 
pTriggîSãp
->
›
 = 
TK_SELECT
;

356 
pTriggîSãp
->
pSñe˘
 =ÖSelect;

357 
pTriggîSãp
->
‹c⁄f
 = 
OE_DeÁu…
;

358  
pTriggîSãp
;

359 
	}
}

367 
TriggîSãp
 *
	$åiggîSãpAŒoˇã
(

368 
sqlôe3
 *
db
,

369 
u8
 
›
,

370 
Tokí
 *
pName


372 
TriggîSãp
 *
pTriggîSãp
;

374 
pTriggîSãp
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TriggîSãp
Ë+ 
pName
->
n
 + 1);

375 if–
pTriggîSãp
 ){

376 *
z
 = (*)&
pTriggîSãp
[1];

377 
	`mem˝y
(
z
, 
pName
->z,ÖName->
n
);

378 
	`sqlôe3DequŸe
(
z
);

379 
pTriggîSãp
->
zT¨gë
 = 
z
;

380 
pTriggîSãp
->
›
 = op;

382  
pTriggîSãp
;

383 
	}
}

392 
TriggîSãp
 *
	$sqlôe3TriggîIn£πSãp
(

393 
sqlôe3
 *
db
,

394 
Tokí
 *
pTabÀName
,

395 
IdLi°
 *
pCﬁumn
,

396 
Sñe˘
 *
pSñe˘
,

397 
u8
 
‹c⁄f


399 
TriggîSãp
 *
pTriggîSãp
;

401 
	`as£π
(
pSñe˘
 !0 || 
db
->
mÆlocFaûed
);

403 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_INSERT
, 
pTabÀName
);

404 if–
pTriggîSãp
 ){

405 
pTriggîSãp
->
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
,ÖSñe˘, 
EXPRDUP_REDUCE
);

406 
pTriggîSãp
->
pIdLi°
 = 
pCﬁumn
;

407 
pTriggîSãp
->
‹c⁄f
 = orconf;

409 
	`sqlôe3IdLi°Dñëe
(
db
, 
pCﬁumn
);

411 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

413  
pTriggîSãp
;

414 
	}
}

421 
TriggîSãp
 *
	$sqlôe3TriggîUpd©eSãp
(

422 
sqlôe3
 *
db
,

423 
Tokí
 *
pTabÀName
,

424 
Ex¥Li°
 *
pELi°
,

425 
Ex¥
 *
pWhîe
,

426 
u8
 
‹c⁄f


428 
TriggîSãp
 *
pTriggîSãp
;

430 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_UPDATE
, 
pTabÀName
);

431 if–
pTriggîSãp
 ){

432 
pTriggîSãp
->
pEx¥Li°
 = 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pELi°
, 
EXPRDUP_REDUCE
);

433 
pTriggîSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

434 
pTriggîSãp
->
‹c⁄f
 = orconf;

436 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pELi°
);

437 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

438  
pTriggîSãp
;

439 
	}
}

446 
TriggîSãp
 *
	$sqlôe3TriggîDñëeSãp
(

447 
sqlôe3
 *
db
,

448 
Tokí
 *
pTabÀName
,

449 
Ex¥
 *
pWhîe


451 
TriggîSãp
 *
pTriggîSãp
;

453 
pTriggîSãp
 = 
	`åiggîSãpAŒoˇã
(
db
, 
TK_DELETE
, 
pTabÀName
);

454 if–
pTriggîSãp
 ){

455 
pTriggîSãp
->
pWhîe
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖWhîe, 
EXPRDUP_REDUCE
);

456 
pTriggîSãp
->
‹c⁄f
 = 
OE_DeÁu…
;

458 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

459  
pTriggîSãp
;

460 
	}
}

465 
	$sqlôe3DñëeTriggî
(
sqlôe3
 *
db
, 
Triggî
 *
pTriggî
){

466 if–
pTriggî
==0 ) ;

467 
	`sqlôe3DñëeTriggîSãp
(
db
, 
pTriggî
->
°ï_li°
);

468 
	`sqlôe3DbFªe
(
db
, 
pTriggî
->
zName
);

469 
	`sqlôe3DbFªe
(
db
, 
pTriggî
->
èbÀ
);

470 
	`sqlôe3Ex¥Dñëe
(
db
, 
pTriggî
->
pWhí
);

471 
	`sqlôe3IdLi°Dñëe
(
db
, 
pTriggî
->
pCﬁumns
);

472 
	`sqlôe3DbFªe
(
db
, 
pTriggî
);

473 
	}
}

483 
	$sqlôe3Dr›Triggî
(
P¨£
 *
pP¨£
, 
SrcLi°
 *
pName
, 
noEº
){

484 
Triggî
 *
pTriggî
 = 0;

485 
i
;

486 c⁄° *
zDb
;

487 c⁄° *
zName
;

488 
sqlôe3
 *
db
 = 
pP¨£
->db;

490 if–
db
->
mÆlocFaûed
 ) 
dr›_åiggî_˛ónup
;

491 if–
SQLITE_OK
!=
	`sqlôe3RódSchema
(
pP¨£
) ){

492 
dr›_åiggî_˛ónup
;

495 
	`as£π
–
pName
->
nSrc
==1 );

496 
zDb
 = 
pName
->
a
[0].
zD©aba£
;

497 
zName
 = 
pName
->
a
[0].zName;

498 
	`as£π
–
zDb
!=0 || 
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

499 
i
=
OMIT_TEMPDB
; i<
db
->
nDb
; i++){

500 
j
 = (
i
<2) ? i^1 : i;

501 if–
zDb
 && 
	`sqlôe3SåICmp
(
db
->
aDb
[
j
].
zName
, zDb) ) ;

502 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
j
, 0) );

503 
pTriggî
 = 
	`sqlôe3HashFöd
(&(
db
->
aDb
[
j
].
pSchema
->
åigHash
), 
zName
);

504 if–
pTriggî
 ) ;

506 if–!
pTriggî
 ){

507 if–!
noEº
 ){

508 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuchÅriggî: %S", 
pName
, 0);

510 
	`sqlôe3CodeVîifyNamedSchema
(
pP¨£
, 
zDb
);

512 
pP¨£
->
checkSchema
 = 1;

513 
dr›_åiggî_˛ónup
;

515 
	`sqlôe3Dr›TriggîPå
(
pP¨£
, 
pTriggî
);

517 
dr›_åiggî_˛ónup
:

518 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pName
);

519 
	}
}

525 
TabÀ
 *
	$èbÀOfTriggî
(
Triggî
 *
pTriggî
){

526  
	`sqlôe3HashFöd
(&
pTriggî
->
pTabSchema
->
tblHash
,ÖTriggî->
èbÀ
);

527 
	}
}

533 
	$sqlôe3Dr›TriggîPå
(
P¨£
 *
pP¨£
, 
Triggî
 *
pTriggî
){

534 
TabÀ
 *
pTabÀ
;

535 
Vdbe
 *
v
;

536 
sqlôe3
 *
db
 = 
pP¨£
->db;

537 
iDb
;

539 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTriggî
->
pSchema
);

540 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

541 
pTabÀ
 = 
	`èbÀOfTriggî
(
pTriggî
);

542 
	`as£π
–
pTabÀ
 );

543 
	`as£π
–
pTabÀ
->
pSchema
==
pTriggî
->pSchem®|| 
iDb
==1 );

544 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


546 
code
 = 
SQLITE_DROP_TRIGGER
;

547 c⁄° *
zDb
 = 
db
->
aDb
[
iDb
].
zName
;

548 c⁄° *
zTab
 = 
	`SCHEMA_TABLE
(
iDb
);

549 if–
iDb
==1 ) 
code
 = 
SQLITE_DROP_TEMP_TRIGGER
;

550 if–
	`sqlôe3AuthCheck
(
pP¨£
, 
code
, 
pTriggî
->
zName
, 
pTabÀ
->zName, 
zDb
) ||

551 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_DELETE
, 
zTab
, 0, 
zDb
) ){

559 
	`as£π
–
pTabÀ
!=0 );

560 if–(
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
))!=0 ){

561 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

563 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb), 
pTriggî
->zName

565 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

566 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Dr›Triggî
, 
iDb
, 0, 0, 
pTriggî
->
zName
, 0);

568 
	}
}

573 
	$sqlôe3U∆ökAndDñëeTriggî
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zName
){

574 
Triggî
 *
pTriggî
;

575 
Hash
 *
pHash
;

577 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

578 
pHash
 = &(
db
->
aDb
[
iDb
].
pSchema
->
åigHash
);

579 
pTriggî
 = 
	`sqlôe3HashIn£π
(
pHash
, 
zName
, 0);

580 if–
	`ALWAYS
(
pTriggî
) ){

581 if–
pTriggî
->
pSchema
=ıTriggî->
pTabSchema
 ){

582 
TabÀ
 *
pTab
 = 
	`èbÀOfTriggî
(
pTriggî
);

583 
Triggî
 **
µ
;

584 
µ
=&
pTab
->
pTriggî
; *µ!ıTriggî;Öp=&((*µ)->
pNext
));

585 *
µ
 = (*µ)->
pNext
;

587 
	`sqlôe3DñëeTriggî
(
db
, 
pTriggî
);

588 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

590 
	}
}

601 
	$checkCﬁumnOvîœp
(
IdLi°
 *
pIdLi°
, 
Ex¥Li°
 *
pELi°
){

602 
e
;

603 if–
pIdLi°
==0 || 
	`NEVER
(
pELi°
==0) )  1;

604 
e
=0;É<
pELi°
->
nEx¥
;É++){

605 if–
	`sqlôe3IdLi°Index
(
pIdLi°
, 
pELi°
->
a
[
e
].
zName
)>=0 )  1;

608 
	}
}

616 
Triggî
 *
	$sqlôe3TriggîsExi°
(

617 
P¨£
 *
pP¨£
,

618 
TabÀ
 *
pTab
,

619 
›
,

620 
Ex¥Li°
 *
pCh™ges
,

621 *
pMask


623 
mask
 = 0;

624 
Triggî
 *
pLi°
 = 0;

625 
Triggî
 *
p
;

627 if–(
pP¨£
->
db
->
Êags
 & 
SQLITE_E«bÀTriggî
)!=0 ){

628 
pLi°
 = 
	`sqlôe3TriggîLi°
(
pP¨£
, 
pTab
);

630 
	`as£π
–
pLi°
==0 || 
	`IsVútuÆ
(
pTab
)==0 );

631 
p
=
pLi°
;Ö;Öı->
pNext
){

632 if–
p
->
›
==› && 
	`checkCﬁumnOvîœp
’->
pCﬁumns
, 
pCh™ges
) ){

633 
mask
 |
p
->
å_tm
;

636 if–
pMask
 ){

637 *
pMask
 = 
mask
;

639  (
mask
 ? 
pLi°
 : 0);

640 
	}
}

652 
SrcLi°
 *
	$èrgëSrcLi°
(

653 
P¨£
 *
pP¨£
,

654 
TriggîSãp
 *
pSãp


656 
sqlôe3
 *
db
 = 
pP¨£
->db;

657 
iDb
;

658 
SrcLi°
 *
pSrc
;

660 
pSrc
 = 
	`sqlôe3SrcLi°Aµíd
(
db
, 0, 0, 0);

661 if–
pSrc
 ){

662 
	`as£π
–
pSrc
->
nSrc
>0 );

663 
pSrc
->
a
[pSrc->
nSrc
-1].
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pSãp
->
zT¨gë
);

664 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pSãp
->
pTrig
->
pSchema
);

665 if–
iDb
==0 || iDb>=2 ){

666 
	`as£π
–
iDb
<
db
->
nDb
 );

667 
pSrc
->
a
[pSrc->
nSrc
-1].
zD©aba£
 = 
	`sqlôe3DbSåDup
(
db
, db->
aDb
[
iDb
].
zName
);

670  
pSrc
;

671 
	}
}

677 
	$codeTriggîProgøm
(

678 
P¨£
 *
pP¨£
,

679 
TriggîSãp
 *
pSãpLi°
,

680 
‹c⁄f


682 
TriggîSãp
 *
pSãp
;

683 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

684 
sqlôe3
 *
db
 = 
pP¨£
->db;

686 
	`as£π
–
pP¨£
->
pTriggîTab
 &&ÖP¨£->
pT›Àvñ
 );

687 
	`as£π
–
pSãpLi°
 );

688 
	`as£π
–
v
!=0 );

689 
pSãp
=
pSãpLi°
;ÖSãp;ÖSãpıSãp->
pNext
){

703 
pP¨£
->
eOrc⁄f
 = (
‹c⁄f
==
OE_DeÁu…
)?
pSãp
->‹c⁄f:(
u8
)orconf;

704 
	`as£π
–
pP¨£
->
okC⁄°Fa˘‹
==0 );

706  
pSãp
->
›
 ){

707 
TK_UPDATE
: {

708 
	`sqlôe3Upd©e
(
pP¨£
,

709 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

710 
	`sqlôe3Ex¥Li°Dup
(
db
, 
pSãp
->
pEx¥Li°
, 0),

711 
	`sqlôe3Ex¥Dup
(
db
, 
pSãp
->
pWhîe
, 0),

712 
pP¨£
->
eOrc⁄f


716 
TK_INSERT
: {

717 
	`sqlôe3In£π
(
pP¨£
,

718 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

719 
	`sqlôe3Sñe˘Dup
(
db
, 
pSãp
->
pSñe˘
, 0),

720 
	`sqlôe3IdLi°Dup
(
db
, 
pSãp
->
pIdLi°
),

721 
pP¨£
->
eOrc⁄f


725 
TK_DELETE
: {

726 
	`sqlôe3DñëeFrom
(
pP¨£
,

727 
	`èrgëSrcLi°
(
pP¨£
, 
pSãp
),

728 
	`sqlôe3Ex¥Dup
(
db
, 
pSãp
->
pWhîe
, 0)

732 : 
	`as£π
–
pSãp
->
›
==
TK_SELECT
 ); {

733 
Sñe˘De°
 
sDe°
;

734 
Sñe˘
 *
pSñe˘
 = 
	`sqlôe3Sñe˘Dup
(
db
, 
pSãp
->pSelect, 0);

735 
	`sqlôe3Sñe˘De°Inô
(&
sDe°
, 
SRT_Disˇrd
, 0);

736 
	`sqlôe3Sñe˘
(
pP¨£
, 
pSñe˘
, &
sDe°
);

737 
	`sqlôe3Sñe˘Dñëe
(
db
, 
pSñe˘
);

741 if–
pSãp
->
›
!=
TK_SELECT
 ){

742 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Re£tCou¡
);

747 
	}
}

749 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


754 c⁄° *
	$⁄Eº‹Text
(
⁄Eº‹
){

755  
⁄Eº‹
 ){

756 
OE_Ab‹t
:  "abort";

757 
OE_Rﬁlback
:  "rollback";

758 
OE_Faû
:  "fail";

759 
OE_Rïœ˚
:  "replace";

760 
OE_Ign‹e
:  "ignore";

761 
OE_DeÁu…
:  "default";

764 
	}
}

772 
	$å™s„rP¨£Eº‹
(
P¨£
 *
pTo
, P¨£ *
pFrom
){

773 
	`as£π
–
pFrom
->
zEºMsg
==0 ||ÖFrom->
nEº
 );

774 
	`as£π
–
pTo
->
zEºMsg
==0 ||ÖTo->
nEº
 );

775 if–
pTo
->
nEº
==0 ){

776 
pTo
->
zEºMsg
 = 
pFrom
->zErrMsg;

777 
pTo
->
nEº
 = 
pFrom
->nErr;

778 
pTo
->
rc
 = 
pFrom
->rc;

780 
	`sqlôe3DbFªe
(
pFrom
->
db
,ÖFrom->
zEºMsg
);

782 
	}
}

788 
TriggîPrg
 *
	$codeRowTriggî
(

789 
P¨£
 *
pP¨£
,

790 
Triggî
 *
pTriggî
,

791 
TabÀ
 *
pTab
,

792 
‹c⁄f


794 
P¨£
 *
pT›
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

795 
sqlôe3
 *
db
 = 
pP¨£
->db;

796 
TriggîPrg
 *
pPrg
;

797 
Ex¥
 *
pWhí
 = 0;

798 
Vdbe
 *
v
;

799 
NameC⁄ãxt
 
sNC
;

800 
SubProgøm
 *
pProgøm
 = 0;

801 
P¨£
 *
pSubP¨£
;

802 
iEndTriggî
 = 0;

804 
	`as£π
–
pTriggî
->
zName
==0 || 
pTab
==
	`èbÀOfTriggî
(pTrigger) );

805 
	`as£π
–
pT›
->
pVdbe
 );

810 
pPrg
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TriggîPrg
));

811 if–!
pPrg
 )  0;

812 
pPrg
->
pNext
 = 
pT›
->
pTriggîPrg
;

813 
pT›
->
pTriggîPrg
 = 
pPrg
;

814 
pPrg
->
pProgøm
 =ÖProgøm = 
	`sqlôe3DbMÆlocZîo
(
db
, (
SubProgøm
));

815 if–!
pProgøm
 )  0;

816 
	`sqlôe3VdbeLökSubProgøm
(
pT›
->
pVdbe
, 
pProgøm
);

817 
pPrg
->
pTriggî
 =ÖTrigger;

818 
pPrg
->
‹c⁄f
 = orconf;

819 
pPrg
->
aCﬁmask
[0] = 0xffffffff;

820 
pPrg
->
aCﬁmask
[1] = 0xffffffff;

824 
pSubP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
db
, (
P¨£
));

825 if–!
pSubP¨£
 )  0;

826 
	`mem£t
(&
sNC
, 0, (sNC));

827 
sNC
.
pP¨£
 = 
pSubP¨£
;

828 
pSubP¨£
->
db
 = db;

829 
pSubP¨£
->
pTriggîTab
 = 
pTab
;

830 
pSubP¨£
->
pT›Àvñ
 = 
pT›
;

831 
pSubP¨£
->
zAuthC⁄ãxt
 = 
pTriggî
->
zName
;

832 
pSubP¨£
->
eTriggîOp
 = 
pTriggî
->
›
;

833 
pSubP¨£
->
nQuîyLo›
 = 
pP¨£
->nQueryLoop;

835 
v
 = 
	`sqlôe3GëVdbe
(
pSubP¨£
);

836 if–
v
 ){

837 
	`VdbeCommít
((
v
, "Start: %s.%s (%s %s%s%s ON %s)",

838 
pTriggî
->
zName
, 
	`⁄Eº‹Text
(
‹c⁄f
),

839 (
pTriggî
->
å_tm
==
TRIGGER_BEFORE
 ? "BEFORE" : "AFTER"),

840 (
pTriggî
->
›
==
TK_UPDATE
 ? "UPDATE" : ""),

841 (
pTriggî
->
›
==
TK_INSERT
 ? "INSERT" : ""),

842 (
pTriggî
->
›
==
TK_DELETE
 ? "DELETE" : ""),

843 
pTab
->
zName


845 #i‚de‡
SQLITE_OMIT_TRACE


846 
	`sqlôe3VdbeCh™geP4
(
v
, -1,

847 
	`sqlôe3MPrötf
(
db
, "-- TRIGGER %s", 
pTriggî
->
zName
), 
P4_DYNAMIC


854 if–
pTriggî
->
pWhí
 ){

855 
pWhí
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pTriggî
->pWhen, 0);

856 if–
SQLITE_OK
==
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhí
)

857 && 
db
->
mÆlocFaûed
==0

859 
iEndTriggî
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

860 
	`sqlôe3Ex¥IfFÆ£
(
pSubP¨£
, 
pWhí
, 
iEndTriggî
, 
SQLITE_JUMPIFNULL
);

862 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhí
);

866 
	`codeTriggîProgøm
(
pSubP¨£
, 
pTriggî
->
°ï_li°
, 
‹c⁄f
);

869 if–
iEndTriggî
 ){

870 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iEndTriggî
);

872 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_HÆt
);

873 
	`VdbeCommít
((
v
, "End: %s.%s", 
pTriggî
->
zName
, 
	`⁄Eº‹Text
(
‹c⁄f
)));

875 
	`å™s„rP¨£Eº‹
(
pP¨£
, 
pSubP¨£
);

876 if–
db
->
mÆlocFaûed
==0 ){

877 
pProgøm
->
aOp
 = 
	`sqlôe3VdbeTakeOpAºay
(
v
, &pProgøm->
nOp
, &
pT›
->
nMaxArg
);

879 
pProgøm
->
nMem
 = 
pSubP¨£
->nMem;

880 
pProgøm
->
nC§
 = 
pSubP¨£
->
nTab
;

881 
pProgøm
->
nOn˚
 = 
pSubP¨£
->nOnce;

882 
pProgøm
->
tokí
 = (*)
pTriggî
;

883 
pPrg
->
aCﬁmask
[0] = 
pSubP¨£
->
ﬁdmask
;

884 
pPrg
->
aCﬁmask
[1] = 
pSubP¨£
->
√wmask
;

885 
	`sqlôe3VdbeDñëe
(
v
);

888 
	`as£π
–!
pSubP¨£
->
pAöc
 && !pSubP¨£->
pZombõTab
 );

889 
	`as£π
–!
pSubP¨£
->
pTriggîPrg
 && !pSubP¨£->
nMaxArg
 );

890 
	`sqlôe3P¨£rRe£t
(
pSubP¨£
);

891 
	`sqlôe3SèckFªe
(
db
, 
pSubP¨£
);

893  
pPrg
;

894 
	}
}

902 
TriggîPrg
 *
	$gëRowTriggî
(

903 
P¨£
 *
pP¨£
,

904 
Triggî
 *
pTriggî
,

905 
TabÀ
 *
pTab
,

906 
‹c⁄f


908 
P¨£
 *
pRoŸ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

909 
TriggîPrg
 *
pPrg
;

911 
	`as£π
–
pTriggî
->
zName
==0 || 
pTab
==
	`èbÀOfTriggî
(pTrigger) );

917 
pPrg
=
pRoŸ
->
pTriggîPrg
;

918 
pPrg
 && (pPrg->
pTriggî
!ıTriggî ||ÖPrg->
‹c⁄f
!=orconf);

919 
pPrg
ıPrg->
pNext


923 if–!
pPrg
 ){

924 
pPrg
 = 
	`codeRowTriggî
(
pP¨£
, 
pTriggî
, 
pTab
, 
‹c⁄f
);

927  
pPrg
;

928 
	}
}

936 
	$sqlôe3CodeRowTriggîDúe˘
(

937 
P¨£
 *
pP¨£
,

938 
Triggî
 *
p
,

939 
TabÀ
 *
pTab
,

940 
ªg
,

941 
‹c⁄f
,

942 
ign‹eJump


944 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

945 
TriggîPrg
 *
pPrg
;

946 
pPrg
 = 
	`gëRowTriggî
(
pP¨£
, 
p
, 
pTab
, 
‹c⁄f
);

947 
	`as£π
–
pPrg
 || 
pP¨£
->
nEº
 ||ÖP¨£->
db
->
mÆlocFaûed
 );

951 if–
pPrg
 ){

952 
bRecursive
 = (
p
->
zName
 && 0==(
pP¨£
->
db
->
Êags
&
SQLITE_RecTriggîs
));

954 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Progøm
, 
ªg
, 
ign‹eJump
, ++
pP¨£
->
nMem
,

955 (c⁄° *)
pPrg
->
pProgøm
, 
P4_SUBPROGRAM
);

956 
	`VdbeCommít
(

957 (
v
, "CÆl: %s.%s", (
p
->
zName
?p->zName:"fkey"), 
	`⁄Eº‹Text
(
‹c⁄f
)));

964 
	`sqlôe3VdbeCh™geP5
(
v
, (
u8
)
bRecursive
);

966 
	}
}

1008 
	$sqlôe3CodeRowTriggî
(

1009 
P¨£
 *
pP¨£
,

1010 
Triggî
 *
pTriggî
,

1011 
›
,

1012 
Ex¥Li°
 *
pCh™ges
,

1013 
å_tm
,

1014 
TabÀ
 *
pTab
,

1015 
ªg
,

1016 
‹c⁄f
,

1017 
ign‹eJump


1019 
Triggî
 *
p
;

1021 
	`as£π
–
›
==
TK_UPDATE
 || op==
TK_INSERT
 || op==
TK_DELETE
 );

1022 
	`as£π
–
å_tm
==
TRIGGER_BEFORE
 ||År_tm==
TRIGGER_AFTER
 );

1023 
	`as£π
–(
›
==
TK_UPDATE
)==(
pCh™ges
!=0) );

1025 
p
=
pTriggî
;Ö;Öı->
pNext
){

1030 
	`as£π
–
p
->
pSchema
!=0 );

1031 
	`as£π
–
p
->
pTabSchema
!=0 );

1032 
	`as£π
–
p
->
pSchema
=ı->
pTabSchema


1033 || 
p
->
pSchema
==
pP¨£
->
db
->
aDb
[1].pSchema );

1036 if–
p
->
›
==op

1037 && 
p
->
å_tm
==tr_tm

1038 && 
	`checkCﬁumnOvîœp
(
p
->
pCﬁumns
, 
pCh™ges
)

1040 
	`sqlôe3CodeRowTriggîDúe˘
(
pP¨£
, 
p
, 
pTab
, 
ªg
, 
‹c⁄f
, 
ign‹eJump
);

1043 
	}
}

1070 
u32
 
	$sqlôe3TriggîCﬁmask
(

1071 
P¨£
 *
pP¨£
,

1072 
Triggî
 *
pTriggî
,

1073 
Ex¥Li°
 *
pCh™ges
,

1074 
isNew
,

1075 
å_tm
,

1076 
TabÀ
 *
pTab
,

1077 
‹c⁄f


1079 c⁄° 
›
 = 
pCh™ges
 ? 
TK_UPDATE
 : 
TK_DELETE
;

1080 
u32
 
mask
 = 0;

1081 
Triggî
 *
p
;

1083 
	`as£π
–
isNew
==1 || isNew==0 );

1084 
p
=
pTriggî
;Ö;Öı->
pNext
){

1085 if–
p
->
›
==› && (
å_tm
&p->tr_tm)

1086 && 
	`checkCﬁumnOvîœp
(
p
->
pCﬁumns
,
pCh™ges
)

1088 
TriggîPrg
 *
pPrg
;

1089 
pPrg
 = 
	`gëRowTriggî
(
pP¨£
, 
p
, 
pTab
, 
‹c⁄f
);

1090 if–
pPrg
 ){

1091 
mask
 |
pPrg
->
aCﬁmask
[
isNew
];

1096  
mask
;

1097 
	}
}

	@update.c

15 
	~"sqlôeI¡.h
"

17 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


19 
upd©eVútuÆTabÀ
(

20 
P¨£
 *
pP¨£
,

21 
SrcLi°
 *
pSrc
,

22 
TabÀ
 *
pTab
,

23 
Ex¥Li°
 *
pCh™ges
,

24 
Ex¥
 *
pRowidEx¥
,

25 *
aXRef
,

26 
Ex¥
 *
pWhîe
,

27 
⁄Eº‹


61 
	$sqlôe3CﬁumnDeÁu…
(
Vdbe
 *
v
, 
TabÀ
 *
pTab
, 
i
, 
iReg
){

62 
	`as£π
–
pTab
!=0 );

63 if–!
pTab
->
pSñe˘
 ){

64 
sqlôe3_vÆue
 *
pVÆue
 = 0;

65 
u8
 
íc
 = 
	`ENC
(
	`sqlôe3VdbeDb
(
v
));

66 
Cﬁumn
 *
pCﬁ
 = &
pTab
->
aCﬁ
[
i
];

67 
	`VdbeCommít
((
v
, "%s.%s", 
pTab
->
zName
, 
pCﬁ
->zName));

68 
	`as£π
–
i
<
pTab
->
nCﬁ
 );

69 
	`sqlôe3VÆueFromEx¥
(
	`sqlôe3VdbeDb
(
v
), 
pCﬁ
->
pDÊt
, 
íc
,

70 
pCﬁ
->
afföôy
, &
pVÆue
);

71 if–
pVÆue
 ){

72 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (c⁄° *)
pVÆue
, 
P4_MEM
);

74 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


75 if–
pTab
->
aCﬁ
[
i
].
afföôy
==
SQLITE_AFF_REAL
 ){

76 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_RólAfföôy
, 
iReg
);

80 
	}
}

89 
	$sqlôe3Upd©e
(

90 
P¨£
 *
pP¨£
,

91 
SrcLi°
 *
pTabLi°
,

92 
Ex¥Li°
 *
pCh™ges
,

93 
Ex¥
 *
pWhîe
,

94 
⁄Eº‹


96 
i
, 
j
;

97 
TabÀ
 *
pTab
;

98 
addrT›
 = 0;

99 
WhîeInfo
 *
pWInfo
;

100 
Vdbe
 *
v
;

101 
Index
 *
pIdx
;

102 
Index
 *
pPk
;

103 
nIdx
;

104 
iBa£Cur
;

105 
iD©aCur
;

106 
iIdxCur
;

107 
sqlôe3
 *
db
;

108 *
aRegIdx
 = 0;

109 *
aXRef
 = 0;

112 
u8
 *
aToO≥n
;

113 
u8
 
chngPk
;

114 
u8
 
chngRowid
;

115 
u8
 
chngKey
;

116 
Ex¥
 *
pRowidEx¥
 = 0;

117 
AuthC⁄ãxt
 
sC⁄ãxt
;

118 
NameC⁄ãxt
 
sNC
;

119 
iDb
;

120 
okO√Pass
;

121 
hasFK
;

122 
œbñBªak
;

123 
œbñC⁄töue
;

125 #i‚de‡
SQLITE_OMIT_TRIGGER


126 
isVõw
;

127 
Triggî
 *
pTriggî
;

128 
tmask
;

130 
√wmask
;

131 
iEph
 = 0;

132 
nKey
 = 0;

133 
aiCurO√Pass
[2];

136 
ªgRowCou¡
 = 0;

137 
ªgOldRowid
 = 0;

138 
ªgNewRowid
 = 0;

139 
ªgNew
 = 0;

140 
ªgOld
 = 0;

141 
ªgRowSë
 = 0;

142 
ªgKey
 = 0;

144 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

145 
db
 = 
pP¨£
->db;

146 if–
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 ){

147 
upd©e_˛ónup
;

149 
	`as£π
–
pTabLi°
->
nSrc
==1 );

153 
pTab
 = 
	`sqlôe3SrcLi°Lookup
(
pP¨£
, 
pTabLi°
);

154 if–
pTab
==0 ) 
upd©e_˛ónup
;

155 
iDb
 = 
	`sqlôe3SchemaToIndex
(
pP¨£
->
db
, 
pTab
->
pSchema
);

160 #i‚de‡
SQLITE_OMIT_TRIGGER


161 
pTriggî
 = 
	`sqlôe3TriggîsExi°
(
pP¨£
, 
pTab
, 
TK_UPDATE
, 
pCh™ges
, &
tmask
);

162 
isVõw
 = 
pTab
->
pSñe˘
!=0;

163 
	`as£π
–
pTriggî
 || 
tmask
==0 );

165 
	#pTriggî
 0

	)

166 
	#isVõw
 0

	)

167 
	#tmask
 0

	)

169 #ifde‡
SQLITE_OMIT_VIEW


170 #unde‡
isVõw


171 
	#isVõw
 0

	)

174 if–
	`sqlôe3VõwGëCﬁumnNames
(
pP¨£
, 
pTab
) ){

175 
upd©e_˛ónup
;

177 if–
	`sqlôe3IsRódO∆y
(
pP¨£
, 
pTab
, 
tmask
) ){

178 
upd©e_˛ónup
;

186 
pTabLi°
->
a
[0].
iCurs‹
 = 
iBa£Cur
 = 
iD©aCur
 = 
pP¨£
->
nTab
++;

187 
iIdxCur
 = 
iD©aCur
+1;

188 
pPk
 = 
	`HasRowid
(
pTab
Ë? 0 : 
	`sqlôe3Prim¨yKeyIndex
(pTab);

189 
nIdx
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
,ÇIdx++){

190 if–
	`IsPrim¨yKeyIndex
(
pIdx
Ë&& 
pPk
!=0 ){

191 
iD©aCur
 = 
pP¨£
->
nTab
;

192 
pTabLi°
->
a
[0].
iCurs‹
 = 
iD©aCur
;

194 
pP¨£
->
nTab
++;

200 
aXRef
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (Ë* (
pTab
->
nCﬁ
+
nIdx
) +ÇIdx+2 );

201 if–
aXRef
==0 ) 
upd©e_˛ónup
;

202 
aRegIdx
 = 
aXRef
+
pTab
->
nCﬁ
;

203 
aToO≥n
 = (
u8
*)(
aRegIdx
+
nIdx
);

204 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

205 
aToO≥n
[
nIdx
+1] = 0;

206 
i
=0; i<
pTab
->
nCﬁ
; i++Ë
aXRef
[i] = -1;

209 
	`mem£t
(&
sNC
, 0, (sNC));

210 
sNC
.
pP¨£
 =ÖParse;

211 
sNC
.
pSrcLi°
 = 
pTabLi°
;

219 
chngRowid
 = 
chngPk
 = 0;

220 
i
=0; i<
pCh™ges
->
nEx¥
; i++){

221 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pCh™ges
->
a
[
i
].
pEx¥
) ){

222 
upd©e_˛ónup
;

224 
j
=0; j<
pTab
->
nCﬁ
; j++){

225 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
j
].
zName
, 
pCh™ges
->
a
[
i
].zName)==0 ){

226 if–
j
==
pTab
->
iPKey
 ){

227 
chngRowid
 = 1;

228 
pRowidEx¥
 = 
pCh™ges
->
a
[
i
].
pEx¥
;

229 }if–
pPk
 && (
pTab
->
aCﬁ
[
j
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0 ){

230 
chngPk
 = 1;

232 
aXRef
[
j
] = 
i
;

236 if–
j
>=
pTab
->
nCﬁ
 ){

237 if–
pPk
==0 && 
	`sqlôe3IsRowid
(
pCh™ges
->
a
[
i
].
zName
) ){

238 
j
 = -1;

239 
chngRowid
 = 1;

240 
pRowidEx¥
 = 
pCh™ges
->
a
[
i
].
pEx¥
;

242 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch cﬁumn: %s", 
pCh™ges
->
a
[
i
].
zName
);

243 
pP¨£
->
checkSchema
 = 1;

244 
upd©e_˛ónup
;

247 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


249 
rc
;

250 
rc
 = 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_UPDATE
, 
pTab
->
zName
,

251 
j
<0 ? "ROWID" : 
pTab
->
aCﬁ
[j].
zName
,

252 
db
->
aDb
[
iDb
].
zName
);

253 if–
rc
==
SQLITE_DENY
 ){

254 
upd©e_˛ónup
;

255 }if–
rc
==
SQLITE_IGNORE
 ){

256 
aXRef
[
j
] = -1;

261 
	`as£π
–(
chngRowid
 & 
chngPk
)==0 );

262 
	`as£π
–
chngRowid
==0 || chngRowid==1 );

263 
	`as£π
–
chngPk
==0 || chngPk==1 );

264 
chngKey
 = 
chngRowid
 + 
chngPk
;

271 
pTabLi°
->
a
[0].
cﬁU£d
 = 
	`IsVútuÆ
(
pTab
Ë? 
ALLBITS
 : 0;

273 
hasFK
 = 
	`sqlôe3FkRequúed
(
pP¨£
, 
pTab
, 
aXRef
, 
chngKey
);

281 
j
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, j++){

282 
ªg
;

283 if–
chngKey
 || 
hasFK
 || 
pIdx
->
pP¨tIdxWhîe
 ||ÖIdx==
pPk
 ){

284 
ªg
 = ++
pP¨£
->
nMem
;

286 
ªg
 = 0;

287 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

288 
i16
 
iIdxCﬁ
 = 
pIdx
->
aiCﬁumn
[
i
];

289 if–
iIdxCﬁ
<0 || 
aXRef
[iIdxCol]>=0 ){

290 
ªg
 = ++
pP¨£
->
nMem
;

295 if–
ªg
==0 ) 
aToO≥n
[
j
+1] = 0;

296 
aRegIdx
[
j
] = 
ªg
;

300 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

301 if–
v
==0 ) 
upd©e_˛ónup
;

302 if–
pP¨£
->
√°ed
==0 ) 
	`sqlôe3VdbeCou¡Ch™ges
(
v
);

303 
	`sqlôe3BegöWrôeO≥øti⁄
(
pP¨£
, 1, 
iDb
);

306 if–!
	`IsVútuÆ
(
pTab
) ){

307 
ªgRowSë
 = ++
pP¨£
->
nMem
;

308 
ªgOldRowid
 = 
ªgNewRowid
 = ++
pP¨£
->
nMem
;

309 if–
chngPk
 || 
pTriggî
 || 
hasFK
 ){

310 
ªgOld
 = 
pP¨£
->
nMem
 + 1;

311 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
;

313 if–
chngKey
 || 
pTriggî
 || 
hasFK
 ){

314 
ªgNewRowid
 = ++
pP¨£
->
nMem
;

316 
ªgNew
 = 
pP¨£
->
nMem
 + 1;

317 
pP¨£
->
nMem
 +
pTab
->
nCﬁ
;

321 if–
isVõw
 ){

322 
	`sqlôe3AuthC⁄ãxtPush
(
pP¨£
, &
sC⁄ãxt
, 
pTab
->
zName
);

328 #i‡!
	`deföed
(
SQLITE_OMIT_VIEW
Ë&& !deföed(
SQLITE_OMIT_TRIGGER
)

329 if–
isVõw
 ){

330 
	`sqlôe3M©îülizeVõw
(
pP¨£
, 
pTab
, 
pWhîe
, 
iD©aCur
);

337 if–
	`sqlôe3ResﬁveEx¥Names
(&
sNC
, 
pWhîe
) ){

338 
upd©e_˛ónup
;

341 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


343 if–
	`IsVútuÆ
(
pTab
) ){

344 
	`upd©eVútuÆTabÀ
(
pP¨£
, 
pTabLi°
, 
pTab
, 
pCh™ges
, 
pRowidEx¥
, 
aXRef
,

345 
pWhîe
, 
⁄Eº‹
);

346 
upd©e_˛ónup
;

352 if–
	`HasRowid
(
pTab
) ){

353 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NuŒ
, 0, 
ªgRowSë
, 
ªgOldRowid
);

354 
pWInfo
 = 
	`sqlôe3WhîeBegö
(

355 
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0,

356 
WHERE_ONEPASS_DESIRED
 | 
WHERE_SEEK_TABLE
, 
iIdxCur


358 if–
pWInfo
==0 ) 
upd©e_˛ónup
;

359 
okO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

363 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iD©aCur
, 
ªgOldRowid
);

364 if–!
okO√Pass
 ){

365 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowSëAdd
, 
ªgRowSë
, 
ªgOldRowid
);

370 
	`sqlôe3WhîeEnd
(
pWInfo
);

372 
iPk
;

373 
i16
 
nPk
;

374 
addrO≥n
;

376 
	`as£π
–
pPk
!=0 );

377 
nPk
 = 
pPk
->
nKeyCﬁ
;

378 
iPk
 = 
pP¨£
->
nMem
+1;

379 
pP¨£
->
nMem
 +
nPk
;

380 
ªgKey
 = ++
pP¨£
->
nMem
;

381 
iEph
 = 
pP¨£
->
nTab
++;

382 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iPk
);

383 
addrO≥n
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
iEph
, 
nPk
);

384 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

385 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pTabLi°
, 
pWhîe
, 0, 0,

386 
WHERE_ONEPASS_DESIRED
, 
iIdxCur
);

387 if–
pWInfo
==0 ) 
upd©e_˛ónup
;

388 
okO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aiCurO√Pass
);

389 
i
=0; i<
nPk
; i++){

390 
	`as£π
–
pPk
->
aiCﬁumn
[
i
]>=0 );

391 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
pPk
->
aiCﬁumn
[
i
],

392 
iPk
+
i
);

394 if–
okO√Pass
 ){

395 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addrO≥n
);

396 
nKey
 = 
nPk
;

397 
ªgKey
 = 
iPk
;

399 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_MakeRec‹d
, 
iPk
, 
nPk
, 
ªgKey
,

400 
	`sqlôe3IndexAfföôySå
(
db
, 
pPk
), 
nPk
);

401 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
iEph
, 
ªgKey
);

403 
	`sqlôe3WhîeEnd
(
pWInfo
);

408 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
 ){

409 
ªgRowCou¡
 = ++
pP¨£
->
nMem
;

410 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRowCou¡
);

413 
œbñBªak
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

414 if–!
isVõw
 ){

421 if–
⁄Eº‹
==
OE_Rïœ˚
 ){

422 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

424 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

425 if–
pIdx
->
⁄Eº‹
==
OE_Rïœ˚
 ){

426 
	`mem£t
(
aToO≥n
, 1, 
nIdx
+1);

431 if–
okO√Pass
 ){

432 if–
aiCurO√Pass
[0]>=0 ) 
aToO≥n
[aiCurO√Pass[0]-
iBa£Cur
] = 0;

433 if–
aiCurO√Pass
[1]>=0 ) 
aToO≥n
[aiCurO√Pass[1]-
iBa£Cur
] = 0;

435 
	`sqlôe3O≥nTabÀAndIndi˚s
(
pP¨£
, 
pTab
, 
OP_O≥nWrôe
, 0, 
iBa£Cur
, 
aToO≥n
,

440 if–
okO√Pass
 ){

441 if–
aToO≥n
[
iD©aCur
-
iBa£Cur
] && !
isVõw
 ){

442 
	`as£π
–
pPk
 );

443 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñBªak
, 
ªgKey
, 
nKey
);

444 
	`VdbeCovîageNevîTakí
(
v
);

446 
œbñC⁄töue
 = 
œbñBªak
;

447 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
pPk
 ? 
ªgKey
 : 
ªgOldRowid
, 
œbñBªak
);

448 
	`VdbeCovîageIf
(
v
, 
pPk
==0);

449 
	`VdbeCovîageIf
(
v
, 
pPk
!=0);

450 }if–
pPk
 ){

451 
œbñC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

452 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rewöd
, 
iEph
, 
œbñBªak
); 
	`VdbeCovîage
(v);

453 
addrT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_RowKey
, 
iEph
, 
ªgKey
);

454 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgKey
, 0);

455 
	`VdbeCovîage
(
v
);

457 
œbñC⁄töue
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_RowSëRód
, 
ªgRowSë
, 
œbñBªak
,

458 
ªgOldRowid
);

459 
	`VdbeCovîage
(
v
);

460 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgOldRowid
);

461 
	`VdbeCovîage
(
v
);

468 
	`as£π
–
chngKey
 || 
pTriggî
 || 
hasFK
 || 
ªgOldRowid
==
ªgNewRowid
 );

469 if–
chngRowid
 ){

470 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRowidEx¥
, 
ªgNewRowid
);

471 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Mu°BeI¡
, 
ªgNewRowid
); 
	`VdbeCovîage
(v);

476 if–
chngPk
 || 
hasFK
 || 
pTriggî
 ){

477 
u32
 
ﬁdmask
 = (
hasFK
 ? 
	`sqlôe3FkOldmask
(
pP¨£
, 
pTab
) : 0);

478 
ﬁdmask
 |
	`sqlôe3TriggîCﬁmask
(
pP¨£
,

479 
pTriggî
, 
pCh™ges
, 0, 
TRIGGER_BEFORE
|
TRIGGER_AFTER
, 
pTab
, 
⁄Eº‹


481 
i
=0; i<
pTab
->
nCﬁ
; i++){

482 if–
ﬁdmask
==0xffffffff

483 || (
i
<32 && (
ﬁdmask
 & 
	`MASKBIT32
(i))!=0)

484 || (
pTab
->
aCﬁ
[
i
].
cﬁFœgs
 & 
COLFLAG_PRIMKEY
)!=0

486 
	`ã°ˇ£
–
ﬁdmask
!=0xfffffff‡&& 
i
==31 );

487 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
i
, 
ªgOld
+i);

489 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgOld
+
i
);

492 if–
chngRowid
==0 && 
pPk
==0 ){

493 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_C›y
, 
ªgOldRowid
, 
ªgNewRowid
);

510 
√wmask
 = 
	`sqlôe3TriggîCﬁmask
(

511 
pP¨£
, 
pTriggî
, 
pCh™ges
, 1, 
TRIGGER_BEFORE
, 
pTab
, 
⁄Eº‹


513 
i
=0; i<
pTab
->
nCﬁ
; i++){

514 if–
i
==
pTab
->
iPKey
 ){

515 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgNew
+
i
);

517 
j
 = 
aXRef
[
i
];

518 if–
j
>=0 ){

519 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pCh™ges
->
a
[
j
].
pEx¥
, 
ªgNew
+
i
);

520 }if–0==(
tmask
&
TRIGGER_BEFORE
Ë|| 
i
>31 || (
√wmask
 & 
	`MASKBIT32
(i)) ){

526 
	`ã°ˇ£
–
i
==31 );

527 
	`ã°ˇ£
–
i
==32 );

528 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
, 
pTab
, 
i
, 
iD©aCur
, 
ªgNew
+i);

530 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgNew
+
i
);

538 if–
tmask
&
TRIGGER_BEFORE
 ){

539 
	`sqlôe3TabÀAfföôy
(
v
, 
pTab
, 
ªgNew
);

540 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_UPDATE
, 
pCh™ges
,

541 
TRIGGER_BEFORE
, 
pTab
, 
ªgOldRowid
, 
⁄Eº‹
, 
œbñC⁄töue
);

549 if–
pPk
 ){

550 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 
œbñC⁄töue
,
ªgKey
,
nKey
);

551 
	`VdbeCovîage
(
v
);

553 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 
œbñC⁄töue
, 
ªgOldRowid
);

554 
	`VdbeCovîage
(
v
);

562 
i
=0; i<
pTab
->
nCﬁ
; i++){

563 if–
aXRef
[
i
]<0 && i!=
pTab
->
iPKey
 ){

564 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(
v
, 
pTab
, 
iD©aCur
, 
i
, 
ªgNew
+i);

569 if–!
isVõw
 ){

570 
addr1
 = 0;

571 
bRïœ˚
 = 0;

574 
	`as£π
–
ªgOldRowid
>0 );

575 
	`sqlôe3Gíî©eC⁄°øötChecks
(
pP¨£
, 
pTab
, 
aRegIdx
, 
iD©aCur
, 
iIdxCur
,

576 
ªgNewRowid
, 
ªgOldRowid
, 
chngKey
, 
⁄Eº‹
, 
œbñC⁄töue
, &
bRïœ˚
,

577 
aXRef
);

580 if–
hasFK
 ){

581 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 
ªgOldRowid
, 0, 
aXRef
, 
chngKey
);

585 if–
bRïœ˚
 || 
chngKey
 ){

586 if–
pPk
 ){

587 
addr1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iD©aCur
, 0, 
ªgKey
, 
nKey
);

589 
addr1
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iD©aCur
, 0, 
ªgOldRowid
);

591 
	`VdbeCovîageNevîTakí
(
v
);

593 
	`sqlôe3Gíî©eRowIndexDñëe
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
, 
aRegIdx
, -1);

604 
	`as£π
–
ªgNew
==
ªgNewRowid
+1 );

605 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


606 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Dñëe
, 
iD©aCur
,

607 
OPFLAG_ISUPDATE
 | ((
hasFK
 || 
chngKey
 || 
pPk
!=0Ë? 0 : 
OPFLAG_ISNOOP
),

608 
ªgNewRowid


610 if–!
pP¨£
->
√°ed
 ){

611 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
pTab
, 
P4_TABLE
);

614 if–
hasFK
 || 
chngKey
 || 
pPk
!=0 ){

615 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Dñëe
, 
iD©aCur
, 0);

618 if–
bRïœ˚
 || 
chngKey
 ){

619 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr1
);

622 if–
hasFK
 ){

623 
	`sqlôe3FkCheck
(
pP¨£
, 
pTab
, 0, 
ªgNewRowid
, 
aXRef
, 
chngKey
);

627 
	`sqlôe3Com∂ëeIn£πi⁄
(
pP¨£
, 
pTab
, 
iD©aCur
, 
iIdxCur
,

628 
ªgNewRowid
, 
aRegIdx
, 1, 0, 0);

633 if–
hasFK
 ){

634 
	`sqlôe3FkA˘i⁄s
(
pP¨£
, 
pTab
, 
pCh™ges
, 
ªgOldRowid
, 
aXRef
, 
chngKey
);

640 if–(
db
->
Êags
 & 
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
){

641 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_AddImm
, 
ªgRowCou¡
, 1);

644 
	`sqlôe3CodeRowTriggî
(
pP¨£
, 
pTriggî
, 
TK_UPDATE
, 
pCh™ges
,

645 
TRIGGER_AFTER
, 
pTab
, 
ªgOldRowid
, 
⁄Eº‹
, 
œbñC⁄töue
);

650 if–
okO√Pass
 ){

652 }if–
pPk
 ){

653 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñC⁄töue
);

654 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
iEph
, 
addrT›
); 
	`VdbeCovîage
(v);

656 
	`sqlôe3VdbeGŸo
(
v
, 
œbñC⁄töue
);

658 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
œbñBªak
);

661 
i
=0, 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
, i++){

662 
	`as£π
–
aRegIdx
 );

663 if–
aToO≥n
[
i
+1] ){

664 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
iIdxCur
+
i
, 0);

667 if–
iD©aCur
<
iIdxCur
 ) 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, iDataCur, 0);

673 if–
pP¨£
->
√°ed
==0 &&ÖP¨£->
pTriggîTab
==0 ){

674 
	`sqlôe3Autoö¸emítEnd
(
pP¨£
);

682 if–(
db
->
Êags
&
SQLITE_Cou¡Rows
Ë&& !
pP¨£
->
pTriggîTab
 && !pP¨£->
√°ed
 ){

683 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Resu…Row
, 
ªgRowCou¡
, 1);

684 
	`sqlôe3VdbeSëNumCﬁs
(
v
, 1);

685 
	`sqlôe3VdbeSëCﬁName
(
v
, 0, 
COLNAME_NAME
, "row†upd©ed", 
SQLITE_STATIC
);

688 
upd©e_˛ónup
:

689 
	`sqlôe3AuthC⁄ãxtP›
(&
sC⁄ãxt
);

690 
	`sqlôe3DbFªe
(
db
, 
aXRef
);

691 
	`sqlôe3SrcLi°Dñëe
(
db
, 
pTabLi°
);

692 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pCh™ges
);

693 
	`sqlôe3Ex¥Dñëe
(
db
, 
pWhîe
);

695 
	}
}

699 #ifde‡
isVõw


700 #unde‡
isVõw


702 #ifde‡
pTriggî


703 #unde‡
pTriggî


706 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


728 
	$upd©eVútuÆTabÀ
(

729 
P¨£
 *
pP¨£
,

730 
SrcLi°
 *
pSrc
,

731 
TabÀ
 *
pTab
,

732 
Ex¥Li°
 *
pCh™ges
,

733 
Ex¥
 *
pRowid
,

734 *
aXRef
,

735 
Ex¥
 *
pWhîe
,

736 
⁄Eº‹


738 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

739 
ïhemTab
;

740 
i
;

741 
sqlôe3
 *
db
 = 
pP¨£
->db;

742 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

743 
WhîeInfo
 *
pWInfo
;

744 
nArg
 = 2 + 
pTab
->
nCﬁ
;

745 
ªgArg
;

746 
ªgRec
;

747 
ªgRowid
;

748 
iC§
 = 
pSrc
->
a
[0].
iCurs‹
;

749 
aDummy
[2];

750 
bO√Pass
;

751 
addr
;

756 
	`as£π
–
v
 );

757 
ïhemTab
 = 
pP¨£
->
nTab
++;

758 
addr

	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
ïhemTab
, 
nArg
);

759 
ªgArg
 = 
pP¨£
->
nMem
 + 1;

760 
pP¨£
->
nMem
 +
nArg
;

761 
ªgRec
 = ++
pP¨£
->
nMem
;

762 
ªgRowid
 = ++
pP¨£
->
nMem
;

765 
pWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pSrc
, 
pWhîe
, 0,0,
WHERE_ONEPASS_DESIRED
,0);

766 if–
pWInfo
==0 ) ;

769 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iC§
, 
ªgArg
);

770 if–
pRowid
 ){

771 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRowid
, 
ªgArg
+1);

773 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iC§
, 
ªgArg
+1);

775 
i
=0; i<
pTab
->
nCﬁ
; i++){

776 if–
aXRef
[
i
]>=0 ){

777 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pCh™ges
->
a
[
aXRef
[
i
]].
pEx¥
, 
ªgArg
+2+i);

779 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_VCﬁumn
, 
iC§
, 
i
, 
ªgArg
+2+i);

783 
bO√Pass
 = 
	`sqlôe3WhîeOkO√Pass
(
pWInfo
, 
aDummy
);

785 if–
bO√Pass
 ){

789 
	`sqlôe3VdbeCh™geToNo›
(
v
, 
addr
);

790 if–
	`sqlôe3IsT›Àvñ
(
pP¨£
) ){

791 
pP¨£
->
isMu…iWrôe
 = 0;

796 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
ªgArg
, 
nArg
, 
ªgRec
);

797 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NewRowid
, 
ïhemTab
, 
ªgRowid
);

798 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_In£π
, 
ïhemTab
, 
ªgRec
, 
ªgRowid
);

802 if–
bO√Pass
==0 ){

804 
	`sqlôe3WhîeEnd
(
pWInfo
);

807 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
ïhemTab
); 
	`VdbeCovîage
(v);

811 
i
=0; i<
nArg
; i++){

812 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
ïhemTab
, 
i
, 
ªgArg
+i);

815 
	`sqlôe3VèbMakeWrôabÀ
(
pP¨£
, 
pTab
);

816 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VUpd©e
, 0, 
nArg
, 
ªgArg
, 
pVTab
, 
P4_VTAB
);

817 
	`sqlôe3VdbeCh™geP5
(
v
, 
⁄Eº‹
==
OE_DeÁu…
 ? 
OE_Ab‹t
 : onError);

818 
	`sqlôe3MayAb‹t
(
pP¨£
);

822 if–
bO√Pass
==0 ){

823 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
ïhemTab
, 
addr
+1); 
	`VdbeCovîage
(v);

824 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

825 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Clo£
, 
ïhemTab
, 0);

827 
	`sqlôe3WhîeEnd
(
pWInfo
);

829 
	}
}

	@utf.c

36 
	~"sqlôeI¡.h
"

37 
	~<as£π.h
>

38 
	~"vdbeI¡.h
"

40 #i‡!
deföed
(
SQLITE_AMALGAMATION
Ë&& 
SQLITE_BYTEORDER
==0

45 c⁄° 
	gsqlôe3⁄e
 = 1;

52 c⁄° 
	gsqlôe3Utf8Tøns1
[] = {

64 
	#WRITE_UTF8
(
zOut
, 
c
) { \

65 if–
c
<0x00080 ){ \

66 *
zOut
++ = (
u8
)(
c
&0xFF); \

68 if–
c
<0x00800 ){ \

69 *
zOut
++ = 0xC0 + (
u8
)((
c
>>6)&0x1F); \

70 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

72 if–
c
<0x10000 ){ \

73 *
zOut
++ = 0xE0 + (
u8
)((
c
>>12)&0x0F); \

74 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F); \

75 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

77 *
zOut
++ = 0xF0 + (
u8
)((
c
>>18) & 0x07); \

78 *
zOut
++ = 0x80 + (
u8
)((
c
>>12) & 0x3F); \

79 *
zOut
++ = 0x80 + (
u8
)((
c
>>6) & 0x3F); \

80 *
zOut
++ = 0x80 + (
u8
)(
c
 & 0x3F); \

82 }

	)

84 
	#WRITE_UTF16LE
(
zOut
, 
c
) { \

85 if–
c
<=0xFFFF ){ \

86 *
zOut
++ = (
u8
)(
c
&0x00FF); \

87 *
zOut
++ = (
u8
)((
c
>>8)&0x00FF); \

89 *
zOut
++ = (
u8
)(((
c
>>10)&0x003F) + (((c-0x10000)>>10)&0x00C0)); \

90 *
zOut
++ = (
u8
)(0x00D8 + (((
c
-0x10000)>>18)&0x03)); \

91 *
zOut
++ = (
u8
)(
c
&0x00FF); \

92 *
zOut
++ = (
u8
)(0x00DC + ((
c
>>8)&0x03)); \

94 }

	)

96 
	#WRITE_UTF16BE
(
zOut
, 
c
) { \

97 if–
c
<=0xFFFF ){ \

98 *
zOut
++ = (
u8
)((
c
>>8)&0x00FF); \

99 *
zOut
++ = (
u8
)(
c
&0x00FF); \

101 *
zOut
++ = (
u8
)(0x00D8 + (((
c
-0x10000)>>18)&0x03)); \

102 *
zOut
++ = (
u8
)(((
c
>>10)&0x003F) + (((c-0x10000)>>10)&0x00C0)); \

103 *
zOut
++ = (
u8
)(0x00DC + ((
c
>>8)&0x03)); \

104 *
zOut
++ = (
u8
)(
c
&0x00FF); \

106 }

	)

108 
	#READ_UTF16LE
(
zIn
, 
TERM
, 
c
){ \

109 
c
 = (*
zIn
++); \

110 
c
 +((*
zIn
++)<<8); \

111 if–
c
>=0xD800 && c<0xE000 && 
TERM
 ){ \

112 
c2
 = (*
zIn
++); \

113 
c2
 +((*
zIn
++)<<8); \

114 
c
 = (
c2
&0x03FF) + ((c&0x003F)<<10) + (((c&0x03C0)+0x0040)<<10); \

116 }

	)

118 
	#READ_UTF16BE
(
zIn
, 
TERM
, 
c
){ \

119 
c
 = ((*
zIn
++)<<8); \

120 
c
 +(*
zIn
++); \

121 if–
c
>=0xD800 && c<0xE000 && 
TERM
 ){ \

122 
c2
 = ((*
zIn
++)<<8); \

123 
c2
 +(*
zIn
++); \

124 
c
 = (
c2
&0x03FF) + ((c&0x003F)<<10) + (((c&0x03C0)+0x0040)<<10); \

126 }

	)

155 
	#READ_UTF8
(
zIn
, 
zTîm
, 
c
) \

156 
c
 = *(
zIn
++); \

157 if–
c
>=0xc0 ){ \

158 
c
 = 
sqlôe3Utf8Tøns1
[c-0xc0]; \

159  
zIn
!=
zTîm
 && (*zIn & 0xc0)==0x80 ){ \

160 
c
 = (c<<6Ë+ (0x3‡& *(
zIn
++)); \

162 if–
c
<0x80 \

163 || (
c
&0xFFFFF800)==0xD800 \

164 || (
c
&0xFFFFFFFE)==0xFFFE ){ c = 0xFFFD; } \

165 }

	)

166 
u32
 
	$sqlôe3Utf8Ród
(

167 c⁄° **
pz


169 
c
;

174 
c
 = *((*
pz
)++);

175 if–
c
>=0xc0 ){

176 
c
 = 
sqlôe3Utf8Tøns1
[c-0xc0];

177  (*(*
pz
) & 0xc0)==0x80 ){

178 
c
 = (c<<6Ë+ (0x3‡& *((*
pz
)++));

180 if–
c
<0x80

181 || (
c
&0xFFFFF800)==0xD800

182 || (
c
&0xFFFFFFFE)==0xFFFE ){ c = 0xFFFD; }

184  
c
;

185 
	}
}

196 #i‚de‡
SQLITE_OMIT_UTF16


202 
SQLITE_NOINLINE
 
	$sqlôe3VdbeMemTøn¶©e
(
Mem
 *
pMem
, 
u8
 
desúedEnc
){

203 
Àn
;

204 *
zOut
;

205 *
zIn
;

206 *
zTîm
;

207 *
z
;

208 
c
;

210 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

211 
	`as£π
–
pMem
->
Êags
&
MEM_Så
 );

212 
	`as£π
–
pMem
->
íc
!=
desúedEnc
 );

213 
	`as£π
–
pMem
->
íc
!=0 );

214 
	`as£π
–
pMem
->
n
>=0 );

216 #i‡
	`deföed
(
TRANSLATE_TRACE
Ë&& deföed(
SQLITE_DEBUG
)

218 
zBuf
[100];

219 
	`sqlôe3VdbeMemPªâyPröt
(
pMem
, 
zBuf
);

220 
	`Ârötf
(
°dîr
, "INPUT: %s\n", 
zBuf
);

228 if–
pMem
->
íc
!=
SQLITE_UTF8
 && 
desúedEnc
!=SQLITE_UTF8 ){

229 
u8
 
ãmp
;

230 
rc
;

231 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pMem
);

232 if–
rc
!=
SQLITE_OK
 ){

233 
	`as£π
–
rc
==
SQLITE_NOMEM
 );

234  
SQLITE_NOMEM_BKPT
;

236 
zIn
 = (
u8
*)
pMem
->
z
;

237 
zTîm
 = &
zIn
[
pMem
->
n
&~1];

238  
zIn
<
zTîm
 ){

239 
ãmp
 = *
zIn
;

240 *
zIn
 = *(zIn+1);

241 
zIn
++;

242 *
zIn
++ = 
ãmp
;

244 
pMem
->
íc
 = 
desúedEnc
;

245 
å™¶©e_out
;

249 if–
desúedEnc
==
SQLITE_UTF8
 ){

255 
pMem
->
n
 &= ~1;

256 
Àn
 = 
pMem
->
n
 * 2 + 1;

263 
Àn
 = 
pMem
->
n
 * 2 + 2;

272 
zIn
 = (
u8
*)
pMem
->
z
;

273 
zTîm
 = &
zIn
[
pMem
->
n
];

274 
zOut
 = 
	`sqlôe3DbMÆlocRaw
(
pMem
->
db
, 
Àn
);

275 if–!
zOut
 ){

276  
SQLITE_NOMEM_BKPT
;

278 
z
 = 
zOut
;

280 if–
pMem
->
íc
==
SQLITE_UTF8
 ){

281 if–
desúedEnc
==
SQLITE_UTF16LE
 ){

283  
zIn
<
zTîm
 ){

284 
	`READ_UTF8
(
zIn
, 
zTîm
, 
c
);

285 
	`WRITE_UTF16LE
(
z
, 
c
);

288 
	`as£π
–
desúedEnc
==
SQLITE_UTF16BE
 );

290  
zIn
<
zTîm
 ){

291 
	`READ_UTF8
(
zIn
, 
zTîm
, 
c
);

292 
	`WRITE_UTF16BE
(
z
, 
c
);

295 
pMem
->
n
 = ()(
z
 - 
zOut
);

296 *
z
++ = 0;

298 
	`as£π
–
desúedEnc
==
SQLITE_UTF8
 );

299 if–
pMem
->
íc
==
SQLITE_UTF16LE
 ){

301  
zIn
<
zTîm
 ){

302 
	`READ_UTF16LE
(
zIn
, zIn<
zTîm
, 
c
);

303 
	`WRITE_UTF8
(
z
, 
c
);

307  
zIn
<
zTîm
 ){

308 
	`READ_UTF16BE
(
zIn
, zIn<
zTîm
, 
c
);

309 
	`WRITE_UTF8
(
z
, 
c
);

312 
pMem
->
n
 = ()(
z
 - 
zOut
);

314 *
z
 = 0;

315 
	`as£π
–(
pMem
->
n
+(
desúedEnc
==
SQLITE_UTF8
?1:2))<=
Àn
 );

317 
c
 = 
pMem
->
Êags
;

318 
	`sqlôe3VdbeMemRñó£
(
pMem
);

319 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
|(
c
&(
MEM_AffMask
|
MEM_Subty≥
));

320 
pMem
->
íc
 = 
desúedEnc
;

321 
pMem
->
z
 = (*)
zOut
;

322 
pMem
->
zMÆloc
 =ÖMem->
z
;

323 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
z
);

325 
å™¶©e_out
:

326 #i‡
	`deföed
(
TRANSLATE_TRACE
Ë&& deföed(
SQLITE_DEBUG
)

328 
zBuf
[100];

329 
	`sqlôe3VdbeMemPªâyPröt
(
pMem
, 
zBuf
);

330 
	`Ârötf
(
°dîr
, "OUTPUT: %s\n", 
zBuf
);

333  
SQLITE_OK
;

334 
	}
}

345 
	$sqlôe3VdbeMemH™dÀBom
(
Mem
 *
pMem
){

346 
rc
 = 
SQLITE_OK
;

347 
u8
 
bom
 = 0;

349 
	`as£π
–
pMem
->
n
>=0 );

350 if–
pMem
->
n
>1 ){

351 
u8
 
b1
 = *(u8 *)
pMem
->
z
;

352 
u8
 
b2
 = *(((u8 *)
pMem
->
z
) + 1);

353 if–
b1
==0xFE && 
b2
==0xFF ){

354 
bom
 = 
SQLITE_UTF16BE
;

356 if–
b1
==0xFF && 
b2
==0xFE ){

357 
bom
 = 
SQLITE_UTF16LE
;

361 if–
bom
 ){

362 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pMem
);

363 if–
rc
==
SQLITE_OK
 ){

364 
pMem
->
n
 -= 2;

365 
	`memmove
(
pMem
->
z
, &pMem->z[2],ÖMem->
n
);

366 
pMem
->
z
[pMem->
n
] = '\0';

367 
pMem
->
z
[pMem->
n
+1] = '\0';

368 
pMem
->
Êags
 |
MEM_Tîm
;

369 
pMem
->
íc
 = 
bom
;

372  
rc
;

373 
	}
}

383 
	$sqlôe3Utf8Ch¨Lí
(c⁄° *
zIn
, 
nByã
){

384 
r
 = 0;

385 c⁄° 
u8
 *
z
 = (c⁄° u8*)
zIn
;

386 c⁄° 
u8
 *
zTîm
;

387 if–
nByã
>=0 ){

388 
zTîm
 = &
z
[
nByã
];

390 
zTîm
 = (c⁄° 
u8
*)(-1);

392 
	`as£π
–
z
<=
zTîm
 );

393  *
z
!=0 && z<
zTîm
 ){

394 
	`SQLITE_SKIP_UTF8
(
z
);

395 
r
++;

397  
r
;

398 
	}
}

403 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

413 
	$sqlôe3Utf8To8
(*
zIn
){

414 *
zOut
 = 
zIn
;

415 *
zSèπ
 = 
zIn
;

416 
u32
 
c
;

418  
zIn
[0] && 
zOut
<=zIn ){

419 
c
 = 
	`sqlôe3Utf8Ród
((c⁄° 
u8
**)&
zIn
);

420 if–
c
!=0xfffd ){

421 
	`WRITE_UTF8
(
zOut
, 
c
);

424 *
zOut
 = 0;

425  ()(
zOut
 - 
zSèπ
);

426 
	}
}

429 #i‚de‡
SQLITE_OMIT_UTF16


437 *
	$sqlôe3Utf16to8
(
sqlôe3
 *
db
, c⁄° *
z
, 
nByã
, 
u8
 
íc
){

438 
Mem
 
m
;

439 
	`mem£t
(&
m
, 0, (m));

440 
m
.
db
 = db;

441 
	`sqlôe3VdbeMemSëSå
(&
m
, 
z
, 
nByã
, 
íc
, 
SQLITE_STATIC
);

442 
	`sqlôe3VdbeCh™geEncodög
(&
m
, 
SQLITE_UTF8
);

443 if–
db
->
mÆlocFaûed
 ){

444 
	`sqlôe3VdbeMemRñó£
(&
m
);

445 
m
.
z
 = 0;

447 
	`as£π
–(
m
.
Êags
 & 
MEM_Tîm
)!=0 || 
db
->
mÆlocFaûed
 );

448 
	`as£π
–(
m
.
Êags
 & 
MEM_Så
)!=0 || 
db
->
mÆlocFaûed
 );

449 
	`as£π
–
m
.
z
 || 
db
->
mÆlocFaûed
 );

450  
m
.
z
;

451 
	}
}

458 
	$sqlôe3Utf16ByãLí
(c⁄° *
zIn
, 
nCh¨
){

459 
c
;

460 c⁄° *
z
 = 
zIn
;

461 
n
 = 0;

463 if–
SQLITE_UTF16NATIVE
==
SQLITE_UTF16BE
 ){

464  
n
<
nCh¨
 ){

465 
	`READ_UTF16BE
(
z
, 1, 
c
);

466 
n
++;

469  
n
<
nCh¨
 ){

470 
	`READ_UTF16LE
(
z
, 1, 
c
);

471 
n
++;

474  ()(
z
-(c⁄° *)
zIn
);

475 
	}
}

477 #i‡
deföed
(
SQLITE_TEST
)

483 
	$sqlôe3UtfSñfTe°
(){

484 
i
, 
t
;

485 
zBuf
[20];

486 *
z
;

487 
n
;

488 
c
;

490 
i
=0; i<0x00110000; i++){

491 
z
 = 
zBuf
;

492 
	`WRITE_UTF8
(
z
, 
i
);

493 
n
 = ()(
z
-
zBuf
);

494 
	`as£π
–
n
>0 &&Ç<=4 );

495 
z
[0] = 0;

496 
z
 = 
zBuf
;

497 
c
 = 
	`sqlôe3Utf8Ród
((c⁄° 
u8
**)&
z
);

498 
t
 = 
i
;

499 if–
i
>=0xD800 && i<=0xDFFF ) 
t
 = 0xFFFD;

500 if–(
i
&0xFFFFFFFE)==0xFFFE ) 
t
 = 0xFFFD;

501 
	`as£π
–
c
==
t
 );

502 
	`as£π
–(
z
-
zBuf
)==
n
 );

504 
i
=0; i<0x00110000; i++){

505 if–
i
>=0xD800 && i<0xE000 ) ;

506 
z
 = 
zBuf
;

507 
	`WRITE_UTF16LE
(
z
, 
i
);

508 
n
 = ()(
z
-
zBuf
);

509 
	`as£π
–
n
>0 &&Ç<=4 );

510 
z
[0] = 0;

511 
z
 = 
zBuf
;

512 
	`READ_UTF16LE
(
z
, 1, 
c
);

513 
	`as£π
–
c
==
i
 );

514 
	`as£π
–(
z
-
zBuf
)==
n
 );

516 
i
=0; i<0x00110000; i++){

517 if–
i
>=0xD800 && i<0xE000 ) ;

518 
z
 = 
zBuf
;

519 
	`WRITE_UTF16BE
(
z
, 
i
);

520 
n
 = ()(
z
-
zBuf
);

521 
	`as£π
–
n
>0 &&Ç<=4 );

522 
z
[0] = 0;

523 
z
 = 
zBuf
;

524 
	`READ_UTF16BE
(
z
, 1, 
c
);

525 
	`as£π
–
c
==
i
 );

526 
	`as£π
–(
z
-
zBuf
)==
n
 );

528 
	}
}

	@util.c

18 
	~"sqlôeI¡.h
"

19 
	~<°d¨g.h
>

20 #i‡
HAVE_ISNAN
 || 
SQLITE_HAVE_ISNAN


21 
	~<m©h.h
>

27 #ifde‡
SQLITE_COVERAGE_TEST


28 
	$sqlôe3Covîage
(
x
){

29 
dummy
 = 0;

30 
dummy
 +()
x
;

31 
	}
}

45 #i‚de‡
SQLITE_OMIT_BUILTIN_TEST


46 
	$sqlôe3Fau…Sim
(
iTe°
){

47 (*
xCÆlback
)(Ë
sqlôe3GlobÆC⁄fig
.
xTe°CÆlback
;

48  
xCÆlback
 ? 
	`xCÆlback
(
iTe°
Ë: 
SQLITE_OK
;

49 
	}
}

52 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


59 
	$sqlôe3IsNaN
(
x
){

60 
rc
;

61 #i‡!
SQLITE_HAVE_ISNAN
 && !
HAVE_ISNAN


85 #ifde‡
__FAST_MATH__


86 #îr‹ 
SQLôe
 
wûl
 
nŸ
 
w‹k
 
c‹ª˘ly
 
wôh
 
the
 -
fÁ°
-
m©h
 
›ti⁄
 
of
 
GCC
.

88 vﬁ©ûê
y
 = 
x
;

89 vﬁ©ûê
z
 = 
y
;

90 
rc
 = (
y
!=
z
);

92 
rc
 = 
	`i¢™
(
x
);

94 
	`ã°ˇ£
–
rc
 );

95  
rc
;

96 
	}
}

107 
	$sqlôe3SåÀn30
(c⁄° *
z
){

108 if–
z
==0 )  0;

109  0x3ffffff‡& ()
	`°æí
(
z
);

110 
	}
}

119 *
	$sqlôe3CﬁumnTy≥
(
Cﬁumn
 *
pCﬁ
, *
zDÊt
){

120 if–(
pCﬁ
->
cﬁFœgs
 & 
COLFLAG_HASTYPE
)==0 )  
zDÊt
;

121  
pCﬁ
->
zName
 + 
	`°æí
(pCol->zName) + 1;

122 
	}
}

129 
SQLITE_NOINLINE
 
	$sqlôe3Eº‹Föish
(
sqlôe3
 *
db
, 
îr_code
){

130 if–
db
->
pEº
 ) 
	`sqlôe3VÆueSëNuŒ
(db->pErr);

131 
	`sqlôe3Sy°emEº‹
(
db
, 
îr_code
);

132 
	}
}

139 
	$sqlôe3Eº‹
(
sqlôe3
 *
db
, 
îr_code
){

140 
	`as£π
–
db
!=0 );

141 
db
->
îrCode
 = 
îr_code
;

142 if–
îr_code
 || 
db
->
pEº
 ) 
	`sqlôe3Eº‹Föish
(db,Érr_code);

143 
	}
}

149 
	$sqlôe3Sy°emEº‹
(
sqlôe3
 *
db
, 
rc
){

150 if–
rc
==
SQLITE_IOERR_NOMEM
 ) ;

151 
rc
 &= 0xff;

152 if–
rc
==
SQLITE_CANTOPEN
 ||Ñc==
SQLITE_IOERR
 ){

153 
db
->
iSysEºno
 = 
	`sqlôe3OsGëLa°Eº‹
(db->
pVfs
);

155 
	}
}

178 
	$sqlôe3Eº‹WôhMsg
(
sqlôe3
 *
db
, 
îr_code
, c⁄° *
zF‹m©
, ...){

179 
	`as£π
–
db
!=0 );

180 
db
->
îrCode
 = 
îr_code
;

181 
	`sqlôe3Sy°emEº‹
(
db
, 
îr_code
);

182 if–
zF‹m©
==0 ){

183 
	`sqlôe3Eº‹
(
db
, 
îr_code
);

184 }if–
db
->
pEº
 || (db->pEº = 
	`sqlôe3VÆueNew
(db))!=0 ){

185 *
z
;

186 
va_li°
 
≠
;

187 
	`va_°¨t
(
≠
, 
zF‹m©
);

188 
z
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

189 
	`va_íd
(
≠
);

190 
	`sqlôe3VÆueSëSå
(
db
->
pEº
, -1, 
z
, 
SQLITE_UTF8
, 
SQLITE_DYNAMIC
);

192 
	}
}

211 
	$sqlôe3Eº‹Msg
(
P¨£
 *
pP¨£
, c⁄° *
zF‹m©
, ...){

212 *
zMsg
;

213 
va_li°
 
≠
;

214 
sqlôe3
 *
db
 = 
pP¨£
->db;

215 
	`va_°¨t
(
≠
, 
zF‹m©
);

216 
zMsg
 = 
	`sqlôe3VMPrötf
(
db
, 
zF‹m©
, 
≠
);

217 
	`va_íd
(
≠
);

218 if–
db
->
suµªssEº
 ){

219 
	`sqlôe3DbFªe
(
db
, 
zMsg
);

221 
pP¨£
->
nEº
++;

222 
	`sqlôe3DbFªe
(
db
, 
pP¨£
->
zEºMsg
);

223 
pP¨£
->
zEºMsg
 = 
zMsg
;

224 
pP¨£
->
rc
 = 
SQLITE_ERROR
;

226 
	}
}

245 
	$sqlôe3DequŸe
(*
z
){

246 
quŸe
;

247 
i
, 
j
;

248 if–
z
==0 ) ;

249 
quŸe
 = 
z
[0];

250 if–!
	`sqlôe3IsquŸe
(
quŸe
) ) ;

251 if–
quŸe
=='[' ) quote = ']';

252 
i
=1, 
j
=0;; i++){

253 
	`as£π
–
z
[
i
] );

254 if–
z
[
i
]==
quŸe
 ){

255 if–
z
[
i
+1]==
quŸe
 ){

256 
z
[
j
++] = 
quŸe
;

257 
i
++;

262 
z
[
j
++] = z[
i
];

265 
z
[
j
] = 0;

266 
	}
}

271 
	$sqlôe3TokíInô
(
Tokí
 *
p
, *
z
){

272 
p
->
z
 = z;

273 
p
->
n
 = 
	`sqlôe3SåÀn30
(
z
);

274 
	}
}

277 
	#UµîToLowî
 
sqlôe3UµîToLowî


	)

289 
	$sqlôe3_°ricmp
(c⁄° *
zLe·
, c⁄° *
zRight
){

290 if–
zLe·
==0 ){

291  
zRight
 ? -1 : 0;

292 }if–
zRight
==0 ){

295  
	`sqlôe3SåICmp
(
zLe·
, 
zRight
);

296 
	}
}

297 
	$sqlôe3SåICmp
(c⁄° *
zLe·
, c⁄° *
zRight
){

298 *
a
, *
b
;

299 
c
;

300 
a
 = (*)
zLe·
;

301 
b
 = (*)
zRight
;

303 
c
 = ()
UµîToLowî
[*
a
] - ()UµîToLowî[*
b
];

304 if–
c
 || *
a
==0 ) ;

305 
a
++;

306 
b
++;

308  
c
;

309 
	}
}

310 
	$sqlôe3_°∫icmp
(c⁄° *
zLe·
, c⁄° *
zRight
, 
N
){

311 *
a
, *
b
;

312 if–
zLe·
==0 ){

313  
zRight
 ? -1 : 0;

314 }if–
zRight
==0 ){

317 
a
 = (*)
zLe·
;

318 
b
 = (*)
zRight
;

319  
N
-- > 0 && *
a
!=0 && 
UµîToLowî
[*a]==UµîToLowî[*
b
]){á++; b++; }

320  
N
<0 ? 0 : 
UµîToLowî
[*
a
] - UµîToLowî[*
b
];

321 
	}
}

345 
	$sqlôe3AtoF
(c⁄° *
z
, *
pResu…
, 
Àngth
, 
u8
 
íc
){

346 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


347 
ö¸
;

348 c⁄° *
zEnd
 = 
z
 + 
Àngth
;

350 
sign
 = 1;

351 
i64
 
s
 = 0;

352 
d
 = 0;

353 
esign
 = 1;

354 
e
 = 0;

355 
eVÆid
 = 1;

356 
ªsu…
;

357 
nDigôs
 = 0;

358 
n⁄Num
 = 0;

360 
	`as£π
–
íc
==
SQLITE_UTF8
 ||Énc==
SQLITE_UTF16LE
 ||Énc==
SQLITE_UTF16BE
 );

361 *
pResu…
 = 0.0;

363 if–
íc
==
SQLITE_UTF8
 ){

364 
ö¸
 = 1;

366 
i
;

367 
ö¸
 = 2;

368 
	`as£π
–
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

369 
i
=3-
íc
; i<
Àngth
 && 
z
[i]==0; i+=2){}

370 
n⁄Num
 = 
i
<
Àngth
;

371 
zEnd
 = &
z
[
i
^1];

372 
z
 +(
íc
&1);

376  
z
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zËËz+=
ö¸
;

377 if–
z
>=
zEnd
 )  0;

380 if–*
z
=='-' ){

381 
sign
 = -1;

382 
z
+=
ö¸
;

383 }if–*
z
=='+' ){

384 
z
+=
ö¸
;

388  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*zË&& 
s
<((
LARGEST_INT64
-9)/10) ){

389 
s
 = s*10 + (*
z
 - '0');

390 
z
+=
ö¸
, 
nDigôs
++;

395  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*zËËz+=
ö¸
, 
nDigôs
++, 
d
++;

396 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

399 if–*
z
=='.' ){

400 
z
+=
ö¸
;

403  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*z) ){

404 if–
s
<((
LARGEST_INT64
-9)/10) ){

405 
s
 = s*10 + (*
z
 - '0');

406 
d
--;

408 
z
+=
ö¸
, 
nDigôs
++;

411 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

414 if–*
z
=='e' || *z=='E' ){

415 
z
+=
ö¸
;

416 
eVÆid
 = 0;

421 if–
z
>=
zEnd
 ) 
do_©of_ˇlc
;

424 if–*
z
=='-' ){

425 
esign
 = -1;

426 
z
+=
ö¸
;

427 }if–*
z
=='+' ){

428 
z
+=
ö¸
;

431  
z
<
zEnd
 && 
	`sqlôe3Isdigô
(*z) ){

432 
e
 =É<10000 ? (e*10 + (*
z
 - '0')) : 10000;

433 
z
+=
ö¸
;

434 
eVÆid
 = 1;

439  
z
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zËËz+=
ö¸
;

441 
do_©of_ˇlc
:

443 
e
 = (e*
esign
Ë+ 
d
;

444 if–
e
<0 ) {

445 
esign
 = -1;

446 
e
 *= -1;

448 
esign
 = 1;

451 if–
s
==0 ) {

453 
ªsu…
 = 
sign
<0 ? -()0 : ()0;

461  
e
>0 ){

462 if–
esign
>0 ){

463 if–
s
>=(
LARGEST_INT64
/10) ) ;

464 
s
 *= 10;

466 if–
s
%10!=0 ) ;

467 
s
 /= 10;

469 
e
--;

473 
s
 = 
sign
<0 ? -s : s;

475 if–
e
==0 ){

476 
ªsu…
 = ()
s
;

478 
LONGDOUBLE_TYPE
 
sˇÀ
 = 1.0;

480 if–
e
>307 ){

481 if–
e
<342 ){

482  
e
%308 ) { 
sˇÀ
 *= 1.0e+1;É -= 1; }

483 if–
esign
<0 ){

484 
ªsu…
 = 
s
 / 
sˇÀ
;

485 
ªsu…
 /= 1.0e+308;

487 
ªsu…
 = 
s
 * 
sˇÀ
;

488 
ªsu…
 *= 1.0e+308;

490 }{ 
	`as£π
–
e
>=342 );

491 if–
esign
<0 ){

492 
ªsu…
 = 0.0*
s
;

494 
ªsu…
 = 1e308*1e308*
s
;

500  
e
%22 ) { 
sˇÀ
 *= 1.0e+1;É -= 1; }

501  
e
>0 ) { 
sˇÀ
 *= 1.0e+22;É -= 22; }

502 if–
esign
<0 ){

503 
ªsu…
 = 
s
 / 
sˇÀ
;

505 
ªsu…
 = 
s
 * 
sˇÀ
;

512 *
pResu…
 = 
ªsu…
;

515  
z
==
zEnd
 && 
nDigôs
>0 && 
eVÆid
 && 
n⁄Num
==0;

517  !
	`sqlôe3Atoi64
(
z
, 
pResu…
, 
Àngth
, 
íc
);

519 
	}
}

535 
	$com∑ª2pow63
(c⁄° *
zNum
, 
ö¸
){

536 
c
 = 0;

537 
i
;

539 c⁄° *
pow63
 = "922337203685477580";

540 
i
=0; 
c
==0 && i<18; i++){

541 
c
 = (
zNum
[
i
*
ö¸
]-
pow63
[i])*10;

543 if–
c
==0 ){

544 
c
 = 
zNum
[18*
ö¸
] - '8';

545 
	`ã°ˇ£
–
c
==(-1) );

546 
	`ã°ˇ£
–
c
==0 );

547 
	`ã°ˇ£
–
c
==(+1) );

549  
c
;

550 
	}
}

571 
	$sqlôe3Atoi64
(c⁄° *
zNum
, 
i64
 *
pNum
, 
Àngth
, 
u8
 
íc
){

572 
ö¸
;

573 
u64
 
u
 = 0;

574 
√g
 = 0;

575 
i
;

576 
c
 = 0;

577 
n⁄Num
 = 0;

578 c⁄° *
zSèπ
;

579 c⁄° *
zEnd
 = 
zNum
 + 
Àngth
;

580 
	`as£π
–
íc
==
SQLITE_UTF8
 ||Énc==
SQLITE_UTF16LE
 ||Énc==
SQLITE_UTF16BE
 );

581 if–
íc
==
SQLITE_UTF8
 ){

582 
ö¸
 = 1;

584 
ö¸
 = 2;

585 
	`as£π
–
SQLITE_UTF16LE
==2 && 
SQLITE_UTF16BE
==3 );

586 
i
=3-
íc
; i<
Àngth
 && 
zNum
[i]==0; i+=2){}

587 
n⁄Num
 = 
i
<
Àngth
;

588 
zEnd
 = &
zNum
[
i
^1];

589 
zNum
 +(
íc
&1);

591  
zNum
<
zEnd
 && 
	`sqlôe3Is•a˚
(*zNumËËzNum+=
ö¸
;

592 if–
zNum
<
zEnd
 ){

593 if–*
zNum
=='-' ){

594 
√g
 = 1;

595 
zNum
+=
ö¸
;

596 }if–*
zNum
=='+' ){

597 
zNum
+=
ö¸
;

600 
zSèπ
 = 
zNum
;

601  
zNum
<
zEnd
 && zNum[0]=='0' ){ zNum+=
ö¸
; }

602 
i
=0; &
zNum
[i]<
zEnd
 && (
c
=zNum[i])>='0' && c<='9'; i+=
ö¸
){

603 
u
 = u*10 + 
c
 - '0';

605 if–
u
>
LARGEST_INT64
 ){

606 *
pNum
 = 
√g
 ? 
SMALLEST_INT64
 : 
LARGEST_INT64
;

607 }if–
√g
 ){

608 *
pNum
 = -(
i64
)
u
;

610 *
pNum
 = (
i64
)
u
;

612 
	`ã°ˇ£
–
i
==18 );

613 
	`ã°ˇ£
–
i
==19 );

614 
	`ã°ˇ£
–
i
==20 );

615 if–&
zNum
[
i
]<
zEnd


616 || (
i
==0 && 
zSèπ
==
zNum
)

617 || 
i
>19*
ö¸


618 || 
n⁄Num


623 }if–
i
<19*
ö¸
 ){

625 
	`as£π
–
u
<=
LARGEST_INT64
 );

629 
c
 = 
	`com∑ª2pow63
(
zNum
, 
ö¸
);

630 if–
c
<0 ){

632 
	`as£π
–
u
<=
LARGEST_INT64
 );

634 }if–
c
>0 ){

640 
	`as£π
–
u
-1==
LARGEST_INT64
 );

641  
√g
 ? 0 : 2;

644 
	}
}

657 
	$sqlôe3DecOrHexToI64
(c⁄° *
z
, 
i64
 *
pOut
){

658 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


659 if–
z
[0]=='0'

660 && (
z
[1]=='x' || z[1]=='X')

662 
u64
 
u
 = 0;

663 
i
, 
k
;

664 
i
=2; 
z
[i]=='0'; i++){}

665 
k
=
i
; 
	`sqlôe3Isxdigô
(
z
[k]); k++){

666 
u
 = u*16 + 
	`sqlôe3HexToI¡
(
z
[
k
]);

668 
	`mem˝y
(
pOut
, &
u
, 8);

669  (
z
[
k
]==0 && k-
i
<=16) ? 0 : 1;

673  
	`sqlôe3Atoi64
(
z
, 
pOut
, 
	`sqlôe3SåÀn30
(z), 
SQLITE_UTF8
);

675 
	}
}

687 
	$sqlôe3GëI¡32
(c⁄° *
zNum
, *
pVÆue
){

688 
sqlôe_öt64
 
v
 = 0;

689 
i
, 
c
;

690 
√g
 = 0;

691 if–
zNum
[0]=='-' ){

692 
√g
 = 1;

693 
zNum
++;

694 }if–
zNum
[0]=='+' ){

695 
zNum
++;

697 #i‚de‡
SQLITE_OMIT_HEX_INTEGER


698 if–
zNum
[0]=='0'

699 && (
zNum
[1]=='x' || zNum[1]=='X')

700 && 
	`sqlôe3Isxdigô
(
zNum
[2])

702 
u32
 
u
 = 0;

703 
zNum
 += 2;

704  
zNum
[0]=='0' ) zNum++;

705 
i
=0; 
	`sqlôe3Isxdigô
(
zNum
[i]) && i<8; i++){

706 
u
 = u*16 + 
	`sqlôe3HexToI¡
(
zNum
[
i
]);

708 if–(
u
&0x80000000)==0 && 
	`sqlôe3Isxdigô
(
zNum
[
i
])==0 ){

709 
	`mem˝y
(
pVÆue
, &
u
, 4);

716  
zNum
[0]=='0' ) zNum++;

717 
i
=0; i<11 && (
c
 = 
zNum
[i] - '0')>=0 && c<=9; i++){

718 
v
 = v*10 + 
c
;

726 
	`ã°ˇ£
–
i
==10 );

727 if–
i
>10 ){

730 
	`ã°ˇ£
–
v
-
√g
==2147483647 );

731 if–
v
-
√g
>2147483647 ){

734 if–
√g
 ){

735 
v
 = -v;

737 *
pVÆue
 = ()
v
;

739 
	}
}

745 
	$sqlôe3Atoi
(c⁄° *
z
){

746 
x
 = 0;

747 if–
z
 ) 
	`sqlôe3GëI¡32
(z, &
x
);

748  
x
;

749 
	}
}

780 
SQLITE_NOINLINE
 
	$putV¨öt64
(*
p
, 
u64
 
v
){

781 
i
, 
j
, 
n
;

782 
u8
 
buf
[10];

783 if–
v
 & (((
u64
)0xff000000)<<32) ){

784 
p
[8] = (
u8
)
v
;

785 
v
 >>= 8;

786 
i
=7; i>=0; i--){

787 
p
[
i
] = (
u8
)((
v
 & 0x7f) | 0x80);

788 
v
 >>= 7;

792 
n
 = 0;

794 
buf
[
n
++] = (
u8
)((
v
 & 0x7f) | 0x80);

795 
v
 >>= 7;

796 } 
v
!=0 );

797 
buf
[0] &= 0x7f;

798 
	`as£π
–
n
<=9 );

799 
i
=0, 
j
=
n
-1; j>=0; j--, i++){

800 
p
[
i
] = 
buf
[
j
];

802  
n
;

803 
	}
}

804 
	$sqlôe3PutV¨öt
(*
p
, 
u64
 
v
){

805 if–
v
<=0x7f ){

806 
p
[0] = 
v
&0x7f;

809 if–
v
<=0x3fff ){

810 
p
[0] = ((
v
>>7)&0x7f)|0x80;

811 
p
[1] = 
v
&0x7f;

814  
	`putV¨öt64
(
p
,
v
);

815 
	}
}

826 
	#SLOT_2_0
 0x001fc07f

	)

827 
	#SLOT_4_2_0
 0xf01fc07f

	)

834 
u8
 
	$sqlôe3GëV¨öt
(c⁄° *
p
, 
u64
 *
v
){

835 
u32
 
a
,
b
,
s
;

837 
a
 = *
p
;

839 i‡(!(
a
&0x80))

841 *
v
 = 
a
;

845 
p
++;

846 
b
 = *
p
;

848 i‡(!(
b
&0x80))

850 
a
 &= 0x7f;

851 
a
 =á<<7;

852 
a
 |
b
;

853 *
v
 = 
a
;

858 
	`as£π
–
SLOT_2_0
 == ((0x7f<<14) | (0x7f)) );

859 
	`as£π
–
SLOT_4_2_0
 == ((0xfU<<28) | (0x7f<<14) | (0x7f)) );

861 
p
++;

862 
a
 =á<<14;

863 
a
 |*
p
;

865 i‡(!(
a
&0x80))

867 
a
 &
SLOT_2_0
;

868 
b
 &= 0x7f;

869 
b
 = b<<7;

870 
a
 |
b
;

871 *
v
 = 
a
;

876 
a
 &
SLOT_2_0
;

877 
p
++;

878 
b
 = b<<14;

879 
b
 |*
p
;

881 i‡(!(
b
&0x80))

883 
b
 &
SLOT_2_0
;

886 
a
 =á<<7;

887 
a
 |
b
;

888 *
v
 = 
a
;

897 
b
 &
SLOT_2_0
;

898 
s
 = 
a
;

901 
p
++;

902 
a
 =á<<14;

903 
a
 |*
p
;

905 i‡(!(
a
&0x80))

911 
b
 = b<<7;

912 
a
 |
b
;

913 
s
 = s>>18;

914 *
v
 = ((
u64
)
s
)<<32 | 
a
;

919 
s
 = s<<7;

920 
s
 |
b
;

923 
p
++;

924 
b
 = b<<14;

925 
b
 |*
p
;

927 i‡(!(
b
&0x80))

931 
a
 &
SLOT_2_0
;

932 
a
 =á<<7;

933 
a
 |
b
;

934 
s
 = s>>18;

935 *
v
 = ((
u64
)
s
)<<32 | 
a
;

939 
p
++;

940 
a
 =á<<14;

941 
a
 |*
p
;

943 i‡(!(
a
&0x80))

945 
a
 &
SLOT_4_2_0
;

946 
b
 &
SLOT_2_0
;

947 
b
 = b<<7;

948 
a
 |
b
;

949 
s
 = s>>11;

950 *
v
 = ((
u64
)
s
)<<32 | 
a
;

955 
a
 &
SLOT_2_0
;

956 
p
++;

957 
b
 = b<<14;

958 
b
 |*
p
;

960 i‡(!(
b
&0x80))

962 
b
 &
SLOT_4_2_0
;

965 
a
 =á<<7;

966 
a
 |
b
;

967 
s
 = s>>4;

968 *
v
 = ((
u64
)
s
)<<32 | 
a
;

972 
p
++;

973 
a
 =á<<15;

974 
a
 |*
p
;

979 
b
 &
SLOT_2_0
;

980 
b
 = b<<8;

981 
a
 |
b
;

983 
s
 = s<<4;

984 
b
 = 
p
[-4];

985 
b
 &= 0x7f;

986 
b
 = b>>3;

987 
s
 |
b
;

989 *
v
 = ((
u64
)
s
)<<32 | 
a
;

992 
	}
}

1005 
u8
 
	$sqlôe3GëV¨öt32
(c⁄° *
p
, 
u32
 *
v
){

1006 
u32
 
a
,
b
;

1010 
a
 = *
p
;

1012 #i‚de‡
gëV¨öt32


1013 i‡(!(
a
&0x80))

1016 *
v
 = 
a
;

1022 
p
++;

1023 
b
 = *
p
;

1025 i‡(!(
b
&0x80))

1028 
a
 &= 0x7f;

1029 
a
 =á<<7;

1030 *
v
 = 
a
 | 
b
;

1035 
p
++;

1036 
a
 =á<<14;

1037 
a
 |*
p
;

1039 i‡(!(
a
&0x80))

1042 
a
 &= (0x7f<<14)|(0x7f);

1043 
b
 &= 0x7f;

1044 
b
 = b<<7;

1045 *
v
 = 
a
 | 
b
;

1060 
u64
 
v64
;

1061 
u8
 
n
;

1063 
p
 -= 2;

1064 
n
 = 
	`sqlôe3GëV¨öt
(
p
, &
v64
);

1065 
	`as£π
–
n
>3 &&Ç<=9 );

1066 if–(
v64
 & 
SQLITE_MAX_U32
)!=v64 ){

1067 *
v
 = 0xffffffff;

1069 *
v
 = (
u32
)
v64
;

1071  
n
;

1079 
p
++;

1080 
b
 = b<<14;

1081 
b
 |*
p
;

1083 i‡(!(
b
&0x80))

1086 
b
 &= (0x7f<<14)|(0x7f);

1087 
a
 &= (0x7f<<14)|(0x7f);

1088 
a
 =á<<7;

1089 *
v
 = 
a
 | 
b
;

1093 
p
++;

1094 
a
 =á<<14;

1095 
a
 |*
p
;

1097 i‡(!(
a
&0x80))

1100 
a
 &
SLOT_4_2_0
;

1101 
b
 &
SLOT_4_2_0
;

1102 
b
 = b<<7;

1103 *
v
 = 
a
 | 
b
;

1112 
u64
 
v64
;

1113 
u8
 
n
;

1115 
p
 -= 4;

1116 
n
 = 
	`sqlôe3GëV¨öt
(
p
, &
v64
);

1117 
	`as£π
–
n
>5 &&Ç<=9 );

1118 *
v
 = (
u32
)
v64
;

1119  
n
;

1122 
	}
}

1128 
	$sqlôe3V¨ötLí
(
u64
 
v
){

1129 
i
;

1130 
i
=1; (
v
 >>7)!=0; i++){ 
	`as£π
( i<10 ); }

1131  
i
;

1132 
	}
}

1138 
u32
 
	$sqlôe3Gë4byã
(c⁄° 
u8
 *
p
){

1139 #i‡
SQLITE_BYTEORDER
==4321

1140 
u32
 
x
;

1141 
	`mem˝y
(&
x
,
p
,4);

1142  
x
;

1143 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1144 && 
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4003000

1145 
u32
 
x
;

1146 
	`mem˝y
(&
x
,
p
,4);

1147  
	`__buûtö_bsw≠32
(
x
);

1148 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1149 && 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

1150 
u32
 
x
;

1151 
	`mem˝y
(&
x
,
p
,4);

1152  
	`_byãsw≠_ul⁄g
(
x
);

1154 
	`ã°ˇ£
–
p
[0]&0x80 );

1155  (()
p
[0]<<24) | (p[1]<<16) | (p[2]<<8) |Ö[3];

1157 
	}
}

1158 
	$sqlôe3Put4byã
(*
p
, 
u32
 
v
){

1159 #i‡
SQLITE_BYTEORDER
==4321

1160 
	`mem˝y
(
p
,&
v
,4);

1161 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1162 && 
	`deföed
(
__GNUC__
Ë&& 
GCC_VERSION
>=4003000

1163 
u32
 
x
 = 
	`__buûtö_bsw≠32
(
v
);

1164 
	`mem˝y
(
p
,&
x
,4);

1165 #ñi‡
SQLITE_BYTEORDER
==1234 && !
	`deföed
(
SQLITE_DISABLE_INTRINSIC
) \

1166 && 
	`deföed
(
_MSC_VER
) && _MSC_VER>=1300

1167 
u32
 
x
 = 
	`_byãsw≠_ul⁄g
(
v
);

1168 
	`mem˝y
(
p
,&
x
,4);

1170 
p
[0] = (
u8
)(
v
>>24);

1171 
p
[1] = (
u8
)(
v
>>16);

1172 
p
[2] = (
u8
)(
v
>>8);

1173 
p
[3] = (
u8
)
v
;

1175 
	}
}

1184 
u8
 
	$sqlôe3HexToI¡
(
h
){

1185 
	`as£π
–(
h
>='0' && h<='9') || (h>='a' && h<='f') || (h>='A' && h<='F') );

1186 #ifde‡
SQLITE_ASCII


1187 
h
 += 9*(1&(h>>6));

1189 #ifde‡
SQLITE_EBCDIC


1190 
h
 += 9*(1&~(h>>4));

1192  (
u8
)(
h
 & 0xf);

1193 
	}
}

1195 #i‡!
deföed
(
SQLITE_OMIT_BLOB_LITERAL
Ë|| deföed(
SQLITE_HAS_CODEC
)

1202 *
	$sqlôe3HexToBlob
(
sqlôe3
 *
db
, c⁄° *
z
, 
n
){

1203 *
zBlob
;

1204 
i
;

1206 
zBlob
 = (*)
	`sqlôe3DbMÆlocRawNN
(
db
, 
n
/2 + 1);

1207 
n
--;

1208 if–
zBlob
 ){

1209 
i
=0; i<
n
; i+=2){

1210 
zBlob
[
i
/2] = (
	`sqlôe3HexToI¡
(
z
[i])<<4) | sqlite3HexToInt(z[i+1]);

1212 
zBlob
[
i
/2] = 0;

1214  
zBlob
;

1215 
	}
}

1223 
	$logBadC⁄√˘i⁄
(c⁄° *
zTy≥
){

1224 
	`sqlôe3_log
(
SQLITE_MISUSE
,

1226 
zTy≥


1228 
	}
}

1244 
	$sqlôe3Sa„tyCheckOk
(
sqlôe3
 *
db
){

1245 
u32
 
magic
;

1246 if–
db
==0 ){

1247 
	`logBadC⁄√˘i⁄
("NULL");

1250 
magic
 = 
db
->magic;

1251 if–
magic
!=
SQLITE_MAGIC_OPEN
 ){

1252 if–
	`sqlôe3Sa„tyCheckSickOrOk
(
db
) ){

1253 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

1254 
	`logBadC⁄√˘i⁄
("unopened");

1260 
	}
}

1261 
	$sqlôe3Sa„tyCheckSickOrOk
(
sqlôe3
 *
db
){

1262 
u32
 
magic
;

1263 
magic
 = 
db
->magic;

1264 if–
magic
!=
SQLITE_MAGIC_SICK
 &&

1265 
magic
!=
SQLITE_MAGIC_OPEN
 &&

1266 
magic
!=
SQLITE_MAGIC_BUSY
 ){

1267 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

1268 
	`logBadC⁄√˘i⁄
("invalid");

1273 
	}
}

1281 
	$sqlôe3AddI¡64
(
i64
 *
pA
, i64 
iB
){

1282 
i64
 
iA
 = *
pA
;

1283 
	`ã°ˇ£
–
iA
==0 );Åestcase( iA==1 );

1284 
	`ã°ˇ£
–
iB
==-1 );Åestcase( iB==0 );

1285 if–
iB
>=0 ){

1286 
	`ã°ˇ£
–
iA
>0 && 
LARGEST_INT64
 - iA =
iB
 );

1287 
	`ã°ˇ£
–
iA
>0 && 
LARGEST_INT64
 - iA =
iB
 - 1 );

1288 if–
iA
>0 && 
LARGEST_INT64
 - iA < 
iB
 )  1;

1290 
	`ã°ˇ£
–
iA
<0 && -(iA + 
LARGEST_INT64
Ë=
iB
 + 1 );

1291 
	`ã°ˇ£
–
iA
<0 && -(iA + 
LARGEST_INT64
Ë=
iB
 + 2 );

1292 if–
iA
<0 && -(iA + 
LARGEST_INT64
Ë> 
iB
 + 1 )  1;

1294 *
pA
 +
iB
;

1296 
	}
}

1297 
	$sqlôe3SubI¡64
(
i64
 *
pA
, i64 
iB
){

1298 
	`ã°ˇ£
–
iB
==
SMALLEST_INT64
+1 );

1299 if–
iB
==
SMALLEST_INT64
 ){

1300 
	`ã°ˇ£
–(*
pA
)==(-1) );Åestcase( (*pA)==0 );

1301 if–(*
pA
)>=0 )  1;

1302 *
pA
 -
iB
;

1305  
	`sqlôe3AddI¡64
(
pA
, -
iB
);

1307 
	}
}

1308 
	#TWOPOWER32
 (((
i64
)1)<<32)

	)

1309 
	#TWOPOWER31
 (((
i64
)1)<<31)

	)

1310 
	$sqlôe3MulI¡64
(
i64
 *
pA
, i64 
iB
){

1311 
i64
 
iA
 = *
pA
;

1312 
i64
 
iA1
, 
iA0
, 
iB1
, 
iB0
, 
r
;

1314 
iA1
 = 
iA
/
TWOPOWER32
;

1315 
iA0
 = 
iA
 % 
TWOPOWER32
;

1316 
iB1
 = 
iB
/
TWOPOWER32
;

1317 
iB0
 = 
iB
 % 
TWOPOWER32
;

1318 if–
iA1
==0 ){

1319 if–
iB1
==0 ){

1320 *
pA
 *
iB
;

1323 
r
 = 
iA0
*
iB1
;

1324 }if–
iB1
==0 ){

1325 
r
 = 
iA1
*
iB0
;

1330 
	`ã°ˇ£
–
r
==(-
TWOPOWER31
)-1 );

1331 
	`ã°ˇ£
–
r
==(-
TWOPOWER31
) );

1332 
	`ã°ˇ£
–
r
==
TWOPOWER31
 );

1333 
	`ã°ˇ£
–
r
==
TWOPOWER31
-1 );

1334 if–
r
<(-
TWOPOWER31
) ||Ñ>=TWOPOWER31 )  1;

1335 
r
 *
TWOPOWER32
;

1336 if–
	`sqlôe3AddI¡64
(&
r
, 
iA0
*
iB0
) )  1;

1337 *
pA
 = 
r
;

1339 
	}
}

1345 
	$sqlôe3AbsI¡32
(
x
){

1346 if–
x
>=0 )  x;

1347 if–
x
==()0x80000000 )  0x7fffffff;

1348  -
x
;

1349 
	}
}

1351 #ifde‡
SQLITE_ENABLE_8_3_NAMES


1369 
	$sqlôe3FûeSuffix3
(c⁄° *
zBa£Fûíame
, *
z
){

1370 #i‡
SQLITE_ENABLE_8_3_NAMES
<2

1371 if–
	`sqlôe3_uri_boﬁón
(
zBa£Fûíame
, "8_3_names", 0) )

1374 
i
, 
sz
;

1375 
sz
 = 
	`sqlôe3SåÀn30
(
z
);

1376 
i
=
sz
-1; i>0 && 
z
[i]!='/' && z[i]!='.'; i--){}

1377 if–
z
[
i
]=='.' && 
	`ALWAYS
(
sz
>i+4ËË
	`memmove
(&z[i+1], &z[sz-3], 4);

1379 
	}
}

1388 
LogE°
 
	$sqlôe3LogE°Add
(
LogE°
 
a
, LogE° 
b
){

1389 c⁄° 
x
[] = {

1400 if–
a
>=
b
 ){

1401 if–
a
>
b
+49 ) á;

1402 if–
a
>
b
+31 ) á+1;

1403  
a
+
x
[a-
b
];

1405 if–
b
>
a
+49 )  b;

1406 if–
b
>
a
+31 )  b+1;

1407  
b
+
x
[b-
a
];

1409 
	}
}

1415 
LogE°
 
	$sqlôe3LogE°
(
u64
 
x
){

1416 
LogE°
 
a
[] = { 0, 2, 3, 5, 6, 7, 8, 9 };

1417 
LogE°
 
y
 = 40;

1418 if–
x
<8 ){

1419 if–
x
<2 )  0;

1420  
x
<8 ){ 
y
 -= 10; x <<= 1; }

1422  
x
>255 ){ 
y
 += 40; x >>= 4; }

1423  
x
>15 ){ 
y
 += 10; x >>= 1; }

1425  
a
[
x
&7] + 
y
 - 10;

1426 
	}
}

1428 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1433 
LogE°
 
	$sqlôe3LogE°FromDoubÀ
(
x
){

1434 
u64
 
a
;

1435 
LogE°
 
e
;

1436 
	`as£π
–(
x
)==8 && (
a
)==8 );

1437 if–
x
<=1 )  0;

1438 if–
x
<=2000000000 )  
	`sqlôe3LogE°
((
u64
)x);

1439 
	`mem˝y
(&
a
, &
x
, 8);

1440 
e
 = (
a
>>52) - 1022;

1441  
e
*10;

1442 
	}
}

1445 #i‡
deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

1446 
deföed
(
SQLITE_ENABLE_STAT3_OR_STAT4
) || \

1447 
	$deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

1454 
u64
 
	$sqlôe3LogE°ToI¡
(
LogE°
 
x
){

1455 
u64
 
n
;

1456 
n
 = 
x
%10;

1457 
x
 /= 10;

1458 if–
n
>=5 )Ç -= 2;

1459 if–
n
>=1 )Ç -= 1;

1460 #i‡
	`deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
) || \

1461 
	`deföed
(
SQLITE_EXPLAIN_ESTIMATED_ROWS
)

1462 if–
x
>60 )  (
u64
)
LARGEST_INT64
;

1466 
	`as£π
–
x
<=60 );

1468  
x
>=3 ? (
n
+8)<<(x-3) : (n+8)>>(3-x);

1469 
	}
}

	@vacuum.c

17 
	~"sqlôeI¡.h
"

18 
	~"vdbeI¡.h
"

20 #i‡!
deföed
(
SQLITE_OMIT_VACUUM
Ë&& !deföed(
SQLITE_OMIT_ATTACH
)

25 
	$vacuumFöÆize
(
sqlôe3
 *
db
, 
sqlôe3_°mt
 *
pStmt
, **
pzEºMsg
){

26 
rc
;

27 
rc
 = 
	`sqlôe3VdbeFöÆize
((
Vdbe
*)
pStmt
);

28 if–
rc
 ){

29 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, 
	`sqlôe3_îrmsg
(db));

31  
rc
;

32 
	}
}

37 
	$execSql
(
sqlôe3
 *
db
, **
pzEºMsg
, c⁄° *
zSql
){

38 
sqlôe3_°mt
 *
pStmt
;

39 
	`VVA_ONLY
–
rc
; )

40 if–!
zSql
 ){

41  
SQLITE_NOMEM_BKPT
;

43 if–
SQLITE_OK
!=
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0) ){

44 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, 
	`sqlôe3_îrmsg
(db));

45  
	`sqlôe3_îrcode
(
db
);

47 
	`VVA_ONLY
–
rc
 = ) 
	`sqlôe3_°ï
(
pStmt
);

48 
	`as£π
–
rc
!=
SQLITE_ROW
 || (
db
->
Êags
&
SQLITE_Cou¡Rows
) );

49  
	`vacuumFöÆize
(
db
, 
pStmt
, 
pzEºMsg
);

50 
	}
}

56 
	$execExecSql
(
sqlôe3
 *
db
, **
pzEºMsg
, c⁄° *
zSql
){

57 
sqlôe3_°mt
 *
pStmt
;

58 
rc
;

60 
rc
 = 
	`sqlôe3_¥ï¨e
(
db
, 
zSql
, -1, &
pStmt
, 0);

61 if–
rc
!=
SQLITE_OK
 ) Ñc;

63  
SQLITE_ROW
==
	`sqlôe3_°ï
(
pStmt
) ){

64 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, (*)
	`sqlôe3_cﬁumn_ãxt
(
pStmt
, 0));

65 if–
rc
!=
SQLITE_OK
 ){

66 
	`vacuumFöÆize
(
db
, 
pStmt
, 
pzEºMsg
);

67  
rc
;

71  
	`vacuumFöÆize
(
db
, 
pStmt
, 
pzEºMsg
);

72 
	}
}

104 
	$sqlôe3Vacuum
(
P¨£
 *
pP¨£
){

105 
Vdbe
 *
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

106 if–
v
 ){

107 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Vacuum
, 0, 0);

108 
	`sqlôe3VdbeU£sBåì
(
v
, 0);

111 
	}
}

116 
	$sqlôe3RunVacuum
(**
pzEºMsg
, 
sqlôe3
 *
db
){

117 
rc
 = 
SQLITE_OK
;

118 
Båì
 *
pMaö
;

119 
Båì
 *
pTemp
;

120 *
zSql
 = 0;

121 
ßved_Êags
;

122 
ßved_nCh™ge
;

123 
ßved_nTŸÆCh™ge
;

124 
u8
 
ßved_mTø˚
;

125 
Db
 *
pDb
 = 0;

126 
isMemDb
;

127 
nRes
;

128 
nDb
;

130 if–!
db
->
autoCommô
 ){

131 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
, "cannot VACUUM from withináÅransaction");

132  
SQLITE_ERROR
;

134 if–
db
->
nVdbeA˘ive
>1 ){

135 
	`sqlôe3SëSåög
(
pzEºMsg
, 
db
,"cannot VACUUM - SQL statements inÖrogress");

136  
SQLITE_ERROR
;

142 
ßved_Êags
 = 
db
->
Êags
;

143 
ßved_nCh™ge
 = 
db
->
nCh™ge
;

144 
ßved_nTŸÆCh™ge
 = 
db
->
nTŸÆCh™ge
;

145 
ßved_mTø˚
 = 
db
->
mTø˚
;

146 
db
->
Êags
 |
SQLITE_WrôeSchema
 | 
SQLITE_Ign‹eChecks
 | 
SQLITE_Pª„rBuûtö
;

147 
db
->
Êags
 &~(
SQLITE_F‹eignKeys
 | 
SQLITE_Revî£Ordî
);

148 
db
->
mTø˚
 = 0;

150 
pMaö
 = 
db
->
aDb
[0].
pBt
;

151 
isMemDb
 = 
	`sqlôe3PagîIsMemdb
(
	`sqlôe3BåìPagî
(
pMaö
));

167 
nDb
 = 
db
->nDb;

168 if–
	`sqlôe3TempInMem‹y
(
db
) ){

169 
zSql
 = "ATTACH ':memory:' AS vacuum_db;";

171 
zSql
 = "ATTACH '' AS vacuum_db;";

173 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, 
zSql
);

174 if–
db
->
nDb
>nDb ){

175 
pDb
 = &
db
->
aDb
[db->
nDb
-1];

176 
	`as£π
–
	`°rcmp
(
pDb
->
zName
,"vacuum_db")==0 );

178 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

179 
pTemp
 = 
db
->
aDb
[db->
nDb
-1].
pBt
;

185 
	`sqlôe3BåìCommô
(
pTemp
);

187 
nRes
 = 
	`sqlôe3BåìGëO±imÆRe£rve
(
pMaö
);

190 #ifde‡
SQLITE_HAS_CODEC


191 if–
db
->
√xtPagesize
 ){

192 
	`sqlôe3CodecGëKey
(
sqlôe3
*, , **, *);

193 
nKey
;

194 *
zKey
;

195 
	`sqlôe3CodecGëKey
(
db
, 0, (**)&
zKey
, &
nKey
);

196 if–
nKey
 ) 
db
->
√xtPagesize
 = 0;

200 
	`sqlôe3BåìSëCacheSize
(
pTemp
, 
db
->
aDb
[0].
pSchema
->
ˇche_size
);

201 
	`sqlôe3BåìSëSpûlSize
(
pTemp
, sqlôe3BåìSëSpûlSize(
pMaö
,0));

202 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, "PRAGMA vacuum_db.synchronous=OFF");

203 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

209 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
, "BEGIN;");

210 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

211 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pMaö
, 2);

212 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

215 if–
	`sqlôe3PagîGëJou∫ÆMode
(
	`sqlôe3BåìPagî
(
pMaö
))

216 ==
PAGER_JOURNALMODE_WAL
 ){

217 
db
->
√xtPagesize
 = 0;

220 if–
	`sqlôe3BåìSëPageSize
(
pTemp
, 
	`sqlôe3BåìGëPageSize
(
pMaö
), 
nRes
, 0)

221 || (!
isMemDb
 && 
	`sqlôe3BåìSëPageSize
(
pTemp
, 
db
->
√xtPagesize
, 
nRes
, 0))

222 || 
	`NEVER
(
db
->
mÆlocFaûed
)

224 
rc
 = 
SQLITE_NOMEM_BKPT
;

225 
íd_of_vacuum
;

228 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


229 
	`sqlôe3BåìSëAutoVacuum
(
pTemp
, 
db
->
√xtAutovac
>=0 ? db->nextAutovac :

230 
	`sqlôe3BåìGëAutoVacuum
(
pMaö
));

236 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

241 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

242 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

245 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

246 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

249 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

255 
	`as£π
–(
db
->
Êags
 & 
SQLITE_Vacuum
)==0 );

256 
db
->
Êags
 |
SQLITE_Vacuum
;

257 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

264 
	`as£π
–(
db
->
Êags
 & 
SQLITE_Vacuum
)!=0 );

265 
db
->
Êags
 &~
SQLITE_Vacuum
;

266 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

270 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

274 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

275 
rc
 = 
	`execExecSql
(
db
, 
pzEºMsg
,

280 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

288 
rc
 = 
	`execSql
(
db
, 
pzEºMsg
,

295 if–
rc
 ) 
íd_of_vacuum
;

304 
u32
 
mëa
;

305 
i
;

313 c⁄° 
aC›y
[] = {

314 
BTREE_SCHEMA_VERSION
, 1,

315 
BTREE_DEFAULT_CACHE_SIZE
, 0,

316 
BTREE_TEXT_ENCODING
, 0,

317 
BTREE_USER_VERSION
, 0,

318 
BTREE_APPLICATION_ID
, 0,

321 
	`as£π
–1==
	`sqlôe3BåìIsInTøns
(
pTemp
) );

322 
	`as£π
–1==
	`sqlôe3BåìIsInTøns
(
pMaö
) );

325 
i
=0; i<
	`AºaySize
(
aC›y
); i+=2){

328 
	`sqlôe3BåìGëMëa
(
pMaö
, 
aC›y
[
i
], &
mëa
);

329 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
pTemp
, 
aC›y
[
i
], 
mëa
+aCopy[i+1]);

330 if–
	`NEVER
(
rc
!=
SQLITE_OK
ËË
íd_of_vacuum
;

333 
rc
 = 
	`sqlôe3BåìC›yFûe
(
pMaö
, 
pTemp
);

334 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

335 
rc
 = 
	`sqlôe3BåìCommô
(
pTemp
);

336 if–
rc
!=
SQLITE_OK
 ) 
íd_of_vacuum
;

337 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


338 
	`sqlôe3BåìSëAutoVacuum
(
pMaö
, 
	`sqlôe3BåìGëAutoVacuum
(
pTemp
));

342 
	`as£π
–
rc
==
SQLITE_OK
 );

343 
rc
 = 
	`sqlôe3BåìSëPageSize
(
pMaö
, 
	`sqlôe3BåìGëPageSize
(
pTemp
), 
nRes
,1);

345 
íd_of_vacuum
:

347 
db
->
Êags
 = 
ßved_Êags
;

348 
db
->
nCh™ge
 = 
ßved_nCh™ge
;

349 
db
->
nTŸÆCh™ge
 = 
ßved_nTŸÆCh™ge
;

350 
db
->
mTø˚
 = 
ßved_mTø˚
;

351 
	`sqlôe3BåìSëPageSize
(
pMaö
, -1, -1, 1);

360 
db
->
autoCommô
 = 1;

362 if–
pDb
 ){

363 
	`sqlôe3BåìClo£
(
pDb
->
pBt
);

364 
pDb
->
pBt
 = 0;

365 
pDb
->
pSchema
 = 0;

370 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

372  
rc
;

373 
	}
}

	@vdbe.c

21 
	~"sqlôeI¡.h
"

22 
	~"vdbeI¡.h
"

33 #ifde‡
SQLITE_DEBUG


34 
	#memAboutToCh™ge
(
P
,
M
Ë
	`sqlôe3VdbeMemAboutToCh™ge
(P,M)

	)

36 
	#memAboutToCh™ge
(
P
,
M
)

	)

46 #ifde‡
SQLITE_TEST


47 
	gsqlôe3_£¨ch_cou¡
 = 0;

58 #ifde‡
SQLITE_TEST


59 
	gsqlôe3_öãºu±_cou¡
 = 0;

69 #ifde‡
SQLITE_TEST


70 
	gsqlôe3_s‹t_cou¡
 = 0;

80 #ifde‡
SQLITE_TEST


81 
	gsqlôe3_max_blobsize
 = 0;

82 
	$upd©eMaxBlobsize
(
Mem
 *
p
){

83 if–(
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
))!=0 &&Ö->
n
>
sqlôe3_max_blobsize
 ){

84 
sqlôe3_max_blobsize
 = 
p
->
n
;

86 
	}
}

93 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


94 
	#HAS_UPDATE_HOOK
(
DB
Ë((DB)->
xPªUpd©eCÆlback
||(DB)->
xUpd©eCÆlback
)

	)

96 
	#HAS_UPDATE_HOOK
(
DB
Ë((DB)->
xUpd©eCÆlback
)

	)

106 #ifde‡
SQLITE_TEST


107 
	gsqlôe3_found_cou¡
 = 0;

114 #i‡
deföed
(
SQLITE_TEST
Ë&& !deföed(
SQLITE_OMIT_BUILTIN_TEST
)

115 
	#UPDATE_MAX_BLOBSIZE
(
P
Ë
	`upd©eMaxBlobsize
(P)

	)

117 
	#UPDATE_MAX_BLOBSIZE
(
P
)

	)

136 #i‡!
deföed
(
SQLITE_VDBE_COVERAGE
)

137 
	#VdbeBønchTakí
(
I
,
M
)

	)

139 
	#VdbeBønchTakí
(
I
,
M
Ë
	`vdbeTakeBønch
(
pOp
->
iSrcLöe
,I,M)

	)

140 
	$vdbeTakeBønch
(
iSrcLöe
, 
u8
 
I
, u8 
M
){

141 if–
iSrcLöe
<=2 && 
	`ALWAYS
(iSrcLine>0) ){

142 
M
 = 
iSrcLöe
;

145 
	`as£π
–(
M
 & 
I
)==I );

147 if–
sqlôe3GlobÆC⁄fig
.
xVdbeBønch
==0 ) ;

148 
sqlôe3GlobÆC⁄fig
.
	`xVdbeBønch
(sqlôe3GlobÆC⁄fig.
pVdbeBønchArg
,

149 
iSrcLöe
,
I
,
M
);

151 
	}
}

158 
	#Såögify
(
P
, 
íc
) \

159 if(((
P
)->
Êags
&(
MEM_Så
|
MEM_Blob
))==0 && 
	`sqlôe3VdbeMemSåögify
(P,
íc
,0)) \

160 { 
no_mem
; }

	)

173 
	#DìphemîÆize
(
P
) \

174 if–((
P
)->
Êags
&
MEM_Ephem
)!=0 \

175 && 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
P
Ë){ 
no_mem
;}

	)

178 
	#isS‹ãr
(
x
Ë((x)->
eCurTy≥
==
CURTYPE_SORTER
)

	)

184 
VdbeCurs‹
 *
	$ÆloˇãCurs‹
(

185 
Vdbe
 *
p
,

186 
iCur
,

187 
nFõld
,

188 
iDb
,

189 
u8
 
eCurTy≥


209 
Mem
 *
pMem
 = 
iCur
>0 ? &
p
->
aMem
[p->
nMem
-iCur] :Ö->aMem;

211 
nByã
;

212 
VdbeCurs‹
 *
pCx
 = 0;

213 
nByã
 =

214 
	`ROUND8
((
VdbeCurs‹
)Ë+ 2*(
u32
)*
nFõld
 +

215 (
eCurTy≥
==
CURTYPE_BTREE
?
	`sqlôe3BåìCurs‹Size
():0);

217 
	`as£π
–
iCur
>=0 && iCur<
p
->
nCurs‹
 );

218 if–
p
->
≠C§
[
iCur
] ){

219 
	`sqlôe3VdbeFªeCurs‹
(
p
,Ö->
≠C§
[
iCur
]);

220 
p
->
≠C§
[
iCur
] = 0;

222 if–
SQLITE_OK
==
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
) ){

223 
p
->
≠C§
[
iCur
] = 
pCx
 = (
VdbeCurs‹
*)
pMem
->
z
;

224 
	`mem£t
(
pCx
, 0, (
VdbeCurs‹
));

225 
pCx
->
eCurTy≥
 =ÉCurType;

226 
pCx
->
iDb
 = iDb;

227 
pCx
->
nFõld
 =ÇField;

228 
pCx
->
aOff£t
 = &pCx->
aTy≥
[
nFõld
];

229 if–
eCurTy≥
==
CURTYPE_BTREE
 ){

230 
pCx
->
uc
.
pCurs‹
 = (
BtCurs‹
*)

231 &
pMem
->
z
[
	`ROUND8
((
VdbeCurs‹
))+2*(
u32
)*
nFõld
];

232 
	`sqlôe3BåìCurs‹Zîo
(
pCx
->
uc
.
pCurs‹
);

235  
pCx
;

236 
	}
}

253 
	$≠∂yNumîicAfföôy
(
Mem
 *
pRec
, 
bTryF‹I¡
){

254 
rVÆue
;

255 
i64
 
iVÆue
;

256 
u8
 
íc
 = 
pRec
->enc;

257 
	`as£π
–(
pRec
->
Êags
 & (
MEM_Så
|
MEM_I¡
|
MEM_Ról
))==MEM_Str );

258 if–
	`sqlôe3AtoF
(
pRec
->
z
, &
rVÆue
,ÖRec->
n
, 
íc
)==0 ) ;

259 if–0==
	`sqlôe3Atoi64
(
pRec
->
z
, &
iVÆue
,ÖRec->
n
, 
íc
) ){

260 
pRec
->
u
.
i
 = 
iVÆue
;

261 
pRec
->
Êags
 |
MEM_I¡
;

263 
pRec
->
u
.
r
 = 
rVÆue
;

264 
pRec
->
Êags
 |
MEM_Ról
;

265 if–
bTryF‹I¡
 ) 
	`sqlôe3VdbeI¡egîAfföôy
(
pRec
);

267 
	}
}

287 
	$≠∂yAfföôy
(

288 
Mem
 *
pRec
,

289 
afföôy
,

290 
u8
 
íc


292 if–
afföôy
>=
SQLITE_AFF_NUMERIC
 ){

293 
	`as£π
–
afföôy
==
SQLITE_AFF_INTEGER
 ||áfföôy==
SQLITE_AFF_REAL


294 || 
afföôy
==
SQLITE_AFF_NUMERIC
 );

295 if–(
pRec
->
Êags
 & 
MEM_I¡
)==0 ){

296 if–(
pRec
->
Êags
 & 
MEM_Ról
)==0 ){

297 if–
pRec
->
Êags
 & 
MEM_Så
 ) 
	`≠∂yNumîicAfföôy
(pRec,1);

299 
	`sqlôe3VdbeI¡egîAfföôy
(
pRec
);

302 }if–
afföôy
==
SQLITE_AFF_TEXT
 ){

308 if–0==(
pRec
->
Êags
&
MEM_Så
) ){

309 if–(
pRec
->
Êags
&(
MEM_Ról
|
MEM_I¡
)) ){

310 
	`sqlôe3VdbeMemSåögify
(
pRec
, 
íc
, 1);

313 
pRec
->
Êags
 &~(
MEM_Ról
|
MEM_I¡
);

315 
	}
}

323 
	$sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
 *
pVÆ
){

324 
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
pVÆ
);

325 if–
eTy≥
==
SQLITE_TEXT
 ){

326 
Mem
 *
pMem
 = (Mem*)
pVÆ
;

327 
	`≠∂yNumîicAfföôy
(
pMem
, 0);

328 
eTy≥
 = 
	`sqlôe3_vÆue_ty≥
(
pVÆ
);

330  
eTy≥
;

331 
	}
}

337 
	$sqlôe3VÆueAµlyAfföôy
(

338 
sqlôe3_vÆue
 *
pVÆ
,

339 
u8
 
afföôy
,

340 
u8
 
íc


342 
	`≠∂yAfföôy
((
Mem
 *)
pVÆ
, 
afföôy
, 
íc
);

343 
	}
}

351 
u16
 
SQLITE_NOINLINE
 
	$compuãNumîicTy≥
(
Mem
 *
pMem
){

352 
	`as£π
–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
))==0 );

353 
	`as£π
–(
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
))!=0 );

354 if–
	`sqlôe3AtoF
(
pMem
->
z
, &pMem->
u
.
r
,ÖMem->
n
,ÖMem->
íc
)==0 ){

357 if–
	`sqlôe3Atoi64
(
pMem
->
z
, &pMem->
u
.
i
,ÖMem->
n
,ÖMem->
íc
)==
SQLITE_OK
 ){

358  
MEM_I¡
;

360  
MEM_Ról
;

361 
	}
}

370 
u16
 
	$numîicTy≥
(
Mem
 *
pMem
){

371 if–
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
) ){

372  
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
);

374 if–
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

375  
	`compuãNumîicTy≥
(
pMem
);

378 
	}
}

380 #ifde‡
SQLITE_DEBUG


385 
	$sqlôe3VdbeMemPªâyPröt
(
Mem
 *
pMem
, *
zBuf
){

386 *
zC§
 = 
zBuf
;

387 
f
 = 
pMem
->
Êags
;

389 c⁄° *c⁄° 
í˙ames
[] = {"(X)", "(8)", "(16LE)", "(16BE)"};

391 if–
f
&
MEM_Blob
 ){

392 
i
;

393 
c
;

394 if–
f
 & 
MEM_Dyn
 ){

395 
c
 = 'z';

396 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Ephem
))==0 );

397 }if–
f
 & 
MEM_Sètic
 ){

398 
c
 = 't';

399 
	`as£π
–(
f
 & (
MEM_Dyn
|
MEM_Ephem
))==0 );

400 }if–
f
 & 
MEM_Ephem
 ){

401 
c
 = 'e';

402 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Dyn
))==0 );

404 
c
 = 's';

407 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%c", 
c
);

408 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

409 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%d[", 
pMem
->
n
);

410 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

411 
i
=0; i<16 && i<
pMem
->
n
; i++){

412 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "%02X", (()
pMem
->
z
[
i
] & 0xFF));

413 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

415 
i
=0; i<16 && i<
pMem
->
n
; i++){

416 
z
 = 
pMem
->z[
i
];

417 if–
z
<32 || z>126 ) *
zC§
++ = '.';

418 *
zC§
++ = 
z
;

421 
	`sqlôe3_¢¥ötf
(100, 
zC§
, "]%s", 
í˙ames
[
pMem
->
íc
]);

422 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

423 if–
f
 & 
MEM_Zîo
 ){

424 
	`sqlôe3_¢¥ötf
(100, 
zC§
,"+%dz",
pMem
->
u
.
nZîo
);

425 
zC§
 +
	`sqlôe3SåÀn30
(zCsr);

427 *
zC§
 = '\0';

428 }if–
f
 & 
MEM_Så
 ){

429 
j
, 
k
;

430 
zBuf
[0] = ' ';

431 if–
f
 & 
MEM_Dyn
 ){

432 
zBuf
[1] = 'z';

433 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Ephem
))==0 );

434 }if–
f
 & 
MEM_Sètic
 ){

435 
zBuf
[1] = 't';

436 
	`as£π
–(
f
 & (
MEM_Dyn
|
MEM_Ephem
))==0 );

437 }if–
f
 & 
MEM_Ephem
 ){

438 
zBuf
[1] = 'e';

439 
	`as£π
–(
f
 & (
MEM_Sètic
|
MEM_Dyn
))==0 );

441 
zBuf
[1] = 's';

443 
k
 = 2;

444 
	`sqlôe3_¢¥ötf
(100, &
zBuf
[
k
], "%d", 
pMem
->
n
);

445 
k
 +
	`sqlôe3SåÀn30
(&
zBuf
[k]);

446 
zBuf
[
k
++] = '[';

447 
j
=0; j<15 && j<
pMem
->
n
; j++){

448 
u8
 
c
 = 
pMem
->
z
[
j
];

449 if–
c
>=0x20 && c<0x7f ){

450 
zBuf
[
k
++] = 
c
;

452 
zBuf
[
k
++] = '.';

455 
zBuf
[
k
++] = ']';

456 
	`sqlôe3_¢¥ötf
(100,&
zBuf
[
k
], 
í˙ames
[
pMem
->
íc
]);

457 
k
 +
	`sqlôe3SåÀn30
(&
zBuf
[k]);

458 
zBuf
[
k
++] = 0;

460 
	}
}

463 #ifde‡
SQLITE_DEBUG


467 
	$memTø˚Pröt
(
Mem
 *
p
){

468 if–
p
->
Êags
 & 
MEM_Undeföed
 ){

469 
	`¥ötf
(" undefined");

470 }if–
p
->
Êags
 & 
MEM_NuŒ
 ){

471 
	`¥ötf
(" NULL");

472 }if–(
p
->
Êags
 & (
MEM_I¡
|
MEM_Så
))==(MEM_Int|MEM_Str) ){

473 
	`¥ötf
(" si:%Œd", 
p
->
u
.
i
);

474 }if–
p
->
Êags
 & 
MEM_I¡
 ){

475 
	`¥ötf
(" i:%Œd", 
p
->
u
.
i
);

476 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


477 }if–
p
->
Êags
 & 
MEM_Ról
 ){

478 
	`¥ötf
("Ñ:%g", 
p
->
u
.
r
);

480 }if–
p
->
Êags
 & 
MEM_RowSë
 ){

481 
	`¥ötf
(" (rowset)");

483 
zBuf
[200];

484 
	`sqlôe3VdbeMemPªâyPröt
(
p
, 
zBuf
);

485 
	`¥ötf
(" %s", 
zBuf
);

487 if–
p
->
Êags
 & 
MEM_Subty≥
 ) 
	`¥ötf
(" subty≥=0x%02x",Ö->
eSubty≥
);

488 
	}
}

489 
	$ªgi°îTø˚
(
iReg
, 
Mem
 *
p
){

490 
	`¥ötf
("REG[%d] = ", 
iReg
);

491 
	`memTø˚Pröt
(
p
);

492 
	`¥ötf
("\n");

493 
	}
}

496 #ifde‡
SQLITE_DEBUG


497 
	#REGISTER_TRACE
(
R
,
M
Ëif(
db
->
Êags
&
SQLITE_VdbeTø˚
)
	`ªgi°îTø˚
(R,M)

	)

499 
	#REGISTER_TRACE
(
R
,
M
)

	)

503 #ifde‡
VDBE_PROFILE


509 
	~"hwtime.h
"

513 #i‚de‡
NDEBUG


524 
	$checkSavïoötCou¡
(
sqlôe3
 *
db
){

525 
n
 = 0;

526 
Savïoöt
 *
p
;

527 
p
=
db
->
pSavïoöt
;Ö;Öı->
pNext
Ë
n
++;

528 
	`as£π
–
n
==(
db
->
nSavïoöt
 + db->
isTønß˘i⁄Savïoöt
) );

530 
	}
}

537 
SQLITE_NOINLINE
 
Mem
 *
	$out2PªªÀa£WôhCÀ¨
(
Mem
 *
pOut
){

538 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

539 
pOut
->
Êags
 = 
MEM_I¡
;

540  
pOut
;

541 
	}
}

542 
Mem
 *
	$out2PªªÀa£
(
Vdbe
 *
p
, 
VdbeOp
 *
pOp
){

543 
Mem
 *
pOut
;

544 
	`as£π
–
pOp
->
p2
>0 );

545 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

546 
pOut
 = &
p
->
aMem
[
pOp
->
p2
];

547 
	`memAboutToCh™ge
(
p
, 
pOut
);

548 if–
	`VdbeMemDy«mic
(
pOut
) ){

549  
	`out2PªªÀa£WôhCÀ¨
(
pOut
);

551 
pOut
->
Êags
 = 
MEM_I¡
;

552  
pOut
;

554 
	}
}

561 
	$sqlôe3VdbeExec
(

562 
Vdbe
 *
p


564 
Op
 *
aOp
 = 
p
->aOp;

565 
Op
 *
pOp
 = 
aOp
;

566 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

567 
Op
 *
pOrigOp
;

569 #ifde‡
SQLITE_DEBUG


570 
nExåaDñëe
 = 0;

572 
rc
 = 
SQLITE_OK
;

573 
sqlôe3
 *
db
 = 
p
->db;

574 
u8
 
ª£tSchemaOnFau…
 = 0;

575 
u8
 
ícodög
 = 
	`ENC
(
db
);

576 
iCom∑ª
 = 0;

577 
nVmSãp
 = 0;

578 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


579 
nProgªssLimô
 = 0;

581 
Mem
 *
aMem
 = 
p
->aMem;

582 
Mem
 *
pIn1
 = 0;

583 
Mem
 *
pIn2
 = 0;

584 
Mem
 *
pIn3
 = 0;

585 
Mem
 *
pOut
 = 0;

586 *
aPîmuã
 = 0;

587 
i64
 
œ°Rowid
 = 
db
->lastRowid;

588 #ifde‡
VDBE_PROFILE


589 
u64
 
°¨t
;

593 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_RUN
 );

594 
	`sqlôe3VdbeE¡î
(
p
);

595 if–
p
->
rc
==
SQLITE_NOMEM
 ){

598 
no_mem
;

600 
	`as£π
–
p
->
rc
==
SQLITE_OK
 || (p->rc&0xff)==
SQLITE_BUSY
 );

601 
	`as£π
–
p
->
bIsRódî
 ||Ö->
ªadO∆y
!=0 );

602 
p
->
rc
 = 
SQLITE_OK
;

603 
p
->
iCuºítTime
 = 0;

604 
	`as£π
–
p
->
ex∂aö
==0 );

605 
p
->
pResu…Së
 = 0;

606 
db
->
busyH™dÀr
.
nBusy
 = 0;

607 if–
db
->
u1
.
isI¡îru±ed
 ) 
ab‹t_due_to_öãºu±
;

608 
	`sqlôe3VdbeIOTø˚Sql
(
p
);

609 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


610 if–
db
->
xProgªss
 ){

611 
u32
 
iPri‹
 = 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_VM_STEP
];

612 
	`as£π
–0 < 
db
->
nProgªssOps
 );

613 
nProgªssLimô
 = 
db
->
nProgªssOps
 - (
iPri‹
 % db->nProgressOps);

616 #ifde‡
SQLITE_DEBUG


617 
	`sqlôe3BegöBíignMÆloc
();

618 if–
p
->
pc
==0

619 && (
p
->
db
->
Êags
 & (
SQLITE_VdbeLi°ög
|
SQLITE_VdbeEQP
|
SQLITE_VdbeTø˚
))!=0

621 
i
;

622 
⁄˚
 = 1;

623 
	`sqlôe3VdbePrötSql
(
p
);

624 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeLi°ög
 ){

625 
	`¥ötf
("VDBE Program Listing:\n");

626 
i
=0; i<
p
->
nOp
; i++){

627 
	`sqlôe3VdbePrötOp
(
°dout
, 
i
, &
aOp
[i]);

630 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeEQP
 ){

631 
i
=0; i<
p
->
nOp
; i++){

632 if–
aOp
[
i
].
›code
==
OP_Ex∂aö
 ){

633 if–
⁄˚
 ) 
	`¥ötf
("VDBE Query Plan:\n");

634 
	`¥ötf
("%s\n", 
aOp
[
i
].
p4
.
z
);

635 
⁄˚
 = 0;

639 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ) 
	`¥ötf
("VDBE Trace:\n");

641 
	`sqlôe3EndBíignMÆloc
();

643 
pOp
=&
aOp
[
p
->
pc
]; 1;ÖOp++){

646 
	`as£π
–
rc
==
SQLITE_OK
 );

648 
	`as£π
–
pOp
>=
aOp
 &&ÖOp<&aOp[
p
->
nOp
]);

649 #ifde‡
VDBE_PROFILE


650 
°¨t
 = 
	`sqlôe3Hwtime
();

652 
nVmSãp
++;

653 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


654 if–
p
->
™Exec
 )Ö->™Exec[()(
pOp
-
aOp
)]++;

659 #ifde‡
SQLITE_DEBUG


660 if–
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ){

661 
	`sqlôe3VdbePrötOp
(
°dout
, ()(
pOp
 - 
aOp
),ÖOp);

669 #ifde‡
SQLITE_TEST


670 if–
sqlôe3_öãºu±_cou¡
>0 ){

671 
sqlôe3_öãºu±_cou¡
--;

672 if–
sqlôe3_öãºu±_cou¡
==0 ){

673 
	`sqlôe3_öãºu±
(
db
);

679 #ifde‡
SQLITE_DEBUG


681 
u8
 
›Pr›îty
 = 
sqlôe3OpcodePr›îty
[
pOp
->
›code
];

682 if–(
›Pr›îty
 & 
OPFLG_IN1
)!=0 ){

683 
	`as£π
–
pOp
->
p1
>0 );

684 
	`as£π
–
pOp
->
p1
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

685 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p1
]) );

686 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p1
]) );

687 
	`REGISTER_TRACE
(
pOp
->
p1
, &
aMem
[pOp->p1]);

689 if–(
›Pr›îty
 & 
OPFLG_IN2
)!=0 ){

690 
	`as£π
–
pOp
->
p2
>0 );

691 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

692 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p2
]) );

693 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p2
]) );

694 
	`REGISTER_TRACE
(
pOp
->
p2
, &
aMem
[pOp->p2]);

696 if–(
›Pr›îty
 & 
OPFLG_IN3
)!=0 ){

697 
	`as£π
–
pOp
->
p3
>0 );

698 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

699 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p3
]) );

700 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(&
aMem
[
pOp
->
p3
]) );

701 
	`REGISTER_TRACE
(
pOp
->
p3
, &
aMem
[pOp->p3]);

703 if–(
›Pr›îty
 & 
OPFLG_OUT2
)!=0 ){

704 
	`as£π
–
pOp
->
p2
>0 );

705 
	`as£π
–
pOp
->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

706 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p2
]);

708 if–(
›Pr›îty
 & 
OPFLG_OUT3
)!=0 ){

709 
	`as£π
–
pOp
->
p3
>0 );

710 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

711 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p3
]);

715 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

716 
pOrigOp
 = 
pOp
;

719  
pOp
->
›code
 ){

768 
OP_GŸo
: {

769 
jump_to_p2_™d_check_f‹_öãºu±
:

770 
pOp
 = &
aOp
[pOp->
p2
 - 1];

782 
check_f‹_öãºu±
:

783 if–
db
->
u1
.
isI¡îru±ed
 ) 
ab‹t_due_to_öãºu±
;

784 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


791 if–
db
->
xProgªss
!=0 && 
nVmSãp
>=
nProgªssLimô
 ){

792 
	`as£π
–
db
->
nProgªssOps
!=0 );

793 
nProgªssLimô
 = 
nVmSãp
 + 
db
->
nProgªssOps
 - (nVmStep%db->nProgressOps);

794 if–
db
->
	`xProgªss
(db->
pProgªssArg
) ){

795 
rc
 = 
SQLITE_INTERRUPT
;

796 
ab‹t_due_to_îr‹
;

809 
OP_Gosub
: {

810 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

811 
pIn1
 = &
aMem
[
pOp
->
p1
];

812 
	`as£π
–
	`VdbeMemDy«mic
(
pIn1
)==0 );

813 
	`memAboutToCh™ge
(
p
, 
pIn1
);

814 
pIn1
->
Êags
 = 
MEM_I¡
;

815 
pIn1
->
u
.
i
 = ()(
pOp
-
aOp
);

816 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pIn1
);

820 
jump_to_p2
:

821 
pOp
 = &
aOp
[pOp->
p2
 - 1];

830 
OP_Rëu∫
: {

831 
pIn1
 = &
aMem
[
pOp
->
p1
];

832 
	`as£π
–
pIn1
->
Êags
==
MEM_I¡
 );

833 
pOp
 = &
aOp
[
pIn1
->
u
.
i
];

834 
pIn1
->
Êags
 = 
MEM_Undeföed
;

849 
OP_InôC‹outöe
: {

850 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

851 
	`as£π
–
pOp
->
p2
>=0 &&ÖOp->p2<
p
->
nOp
 );

852 
	`as£π
–
pOp
->
p3
>=0 &&ÖOp->p3<
p
->
nOp
 );

853 
pOut
 = &
aMem
[
pOp
->
p1
];

854 
	`as£π
–!
	`VdbeMemDy«mic
(
pOut
) );

855 
pOut
->
u
.
i
 = 
pOp
->
p3
 - 1;

856 
pOut
->
Êags
 = 
MEM_I¡
;

857 if–
pOp
->
p2
 ) 
jump_to_p2
;

869 
OP_EndC‹outöe
: {

870 
VdbeOp
 *
pCÆÀr
;

871 
pIn1
 = &
aMem
[
pOp
->
p1
];

872 
	`as£π
–
pIn1
->
Êags
==
MEM_I¡
 );

873 
	`as£π
–
pIn1
->
u
.
i
>=0 &&ÖIn1->u.i<
p
->
nOp
 );

874 
pCÆÀr
 = &
aOp
[
pIn1
->
u
.
i
];

875 
	`as£π
–
pCÆÀr
->
›code
==
OP_Yõld
 );

876 
	`as£π
–
pCÆÀr
->
p2
>=0 &&ÖCÆÀr->p2<
p
->
nOp
 );

877 
pOp
 = &
aOp
[
pCÆÀr
->
p2
 - 1];

878 
pIn1
->
Êags
 = 
MEM_Undeföed
;

895 
OP_Yõld
: {

896 
pcDe°
;

897 
pIn1
 = &
aMem
[
pOp
->
p1
];

898 
	`as£π
–
	`VdbeMemDy«mic
(
pIn1
)==0 );

899 
pIn1
->
Êags
 = 
MEM_I¡
;

900 
pcDe°
 = ()
pIn1
->
u
.
i
;

901 
pIn1
->
u
.
i
 = ()(
pOp
 - 
aOp
);

902 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pIn1
);

903 
pOp
 = &
aOp
[
pcDe°
];

915 
OP_HÆtIfNuŒ
: {

916 
pIn3
 = &
aMem
[
pOp
->
p3
];

917 if–(
pIn3
->
Êags
 & 
MEM_NuŒ
)==0 ) ;

951 
OP_HÆt
: {

952 
VdbeFøme
 *
pFøme
;

953 
pcx
;

955 
pcx
 = ()(
pOp
 - 
aOp
);

956 if–
pOp
->
p1
==
SQLITE_OK
 && 
p
->
pFøme
 ){

958 
pFøme
 = 
p
->pFrame;

959 
p
->
pFøme
 =ÖFøme->
pP¨ít
;

960 
p
->
nFøme
--;

961 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

962 
pcx
 = 
	`sqlôe3VdbeFømeRe°‹e
(
pFøme
);

963 
œ°Rowid
 = 
db
->lastRowid;

964 if–
pOp
->
p2
==
OE_Ign‹e
 ){

970 
pcx
 = 
p
->
aOp
[pcx].
p2
-1;

972 
aOp
 = 
p
->aOp;

973 
aMem
 = 
p
->aMem;

974 
pOp
 = &
aOp
[
pcx
];

977 
p
->
rc
 = 
pOp
->
p1
;

978 
p
->
îr‹A˘i⁄
 = (
u8
)
pOp
->
p2
;

979 
p
->
pc
 = 
pcx
;

980 
	`as£π
–
pOp
->
p5
>=0 &&ÖOp->p5<=4 );

981 if–
p
->
rc
 ){

982 if–
pOp
->
p5
 ){

983 c⁄° * c⁄° 
azTy≥
[] = { "NOT NULL", "UNIQUE", "CHECK",

985 
	`ã°ˇ£
–
pOp
->
p5
==1 );

986 
	`ã°ˇ£
–
pOp
->
p5
==2 );

987 
	`ã°ˇ£
–
pOp
->
p5
==3 );

988 
	`ã°ˇ£
–
pOp
->
p5
==4 );

989 
	`sqlôe3VdbeEº‹
(
p
, "%†c⁄°øöàÁûed", 
azTy≥
[
pOp
->
p5
-1]);

990 if–
pOp
->
p4
.
z
 ){

991 
p
->
zEºMsg
 = 
	`sqlôe3MPrötf
(
db
, "%z: %s",Ö->zEºMsg, 
pOp
->
p4
.
z
);

994 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
pOp
->
p4
.
z
);

996 
	`sqlôe3_log
(
pOp
->
p1
, "ab‹à© %d i¿[%s]: %s", 
pcx
, 
p
->
zSql
,Ö->
zEºMsg
);

998 
rc
 = 
	`sqlôe3VdbeHÆt
(
p
);

999 
	`as£π
–
rc
==
SQLITE_BUSY
 ||Ñc==
SQLITE_OK
 ||Ñc==
SQLITE_ERROR
 );

1000 if–
rc
==
SQLITE_BUSY
 ){

1001 
p
->
rc
 = 
SQLITE_BUSY
;

1003 
	`as£π
–
rc
==
SQLITE_OK
 || (
p
->rc&0xff)==
SQLITE_CONSTRAINT
 );

1004 
	`as£π
–
rc
==
SQLITE_OK
 || 
db
->
nDe„ºedC⁄s
>0 || db->
nDe„ºedImmC⁄s
>0 );

1005 
rc
 = 
p
->r¯? 
SQLITE_ERROR
 : 
SQLITE_DONE
;

1007 
vdbe_ªtu∫
;

1015 
OP_I¡egî
: {

1016 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1017 
pOut
->
u
.
i
 = 
pOp
->
p1
;

1027 
OP_I¡64
: {

1028 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1029 
	`as£π
–
pOp
->
p4
.
pI64
!=0 );

1030 
pOut
->
u
.
i
 = *
pOp
->
p4
.
pI64
;

1034 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1041 
OP_Ról
: {

1042 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1043 
pOut
->
Êags
 = 
MEM_Ról
;

1044 
	`as£π
–!
	`sqlôe3IsNaN
(*
pOp
->
p4
.
pRól
) );

1045 
pOut
->
u
.
r
 = *
pOp
->
p4
.
pRól
;

1058 
OP_Såög8
: {

1059 
	`as£π
–
pOp
->
p4
.
z
!=0 );

1060 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1061 
pOp
->
›code
 = 
OP_Såög
;

1062 
pOp
->
p1
 = 
	`sqlôe3SåÀn30
’Op->
p4
.
z
);

1064 #i‚de‡
SQLITE_OMIT_UTF16


1065 if–
ícodög
!=
SQLITE_UTF8
 ){

1066 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pOut
, 
pOp
->
p4
.
z
, -1, 
SQLITE_UTF8
, 
SQLITE_STATIC
);

1067 
	`as£π
–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_TOOBIG
 );

1068 if–
SQLITE_OK
!=
	`sqlôe3VdbeCh™geEncodög
(
pOut
, 
ícodög
ËË
no_mem
;

1069 
	`as£π
–
pOut
->
szMÆloc
>0 &&ÖOut->
zMÆloc
=ıOut->
z
 );

1070 
	`as£π
–
	`VdbeMemDy«mic
(
pOut
)==0 );

1071 
pOut
->
szMÆloc
 = 0;

1072 
pOut
->
Êags
 |
MEM_Sètic
;

1073 if–
pOp
->
p4ty≥
==
P4_DYNAMIC
 ){

1074 
	`sqlôe3DbFªe
(
db
, 
pOp
->
p4
.
z
);

1076 
pOp
->
p4ty≥
 = 
P4_DYNAMIC
;

1077 
pOp
->
p4
.
z
 = 
pOut
->z;

1078 
pOp
->
p1
 = 
pOut
->
n
;

1080 
	`ã°ˇ£
–
rc
==
SQLITE_TOOBIG
 );

1082 if–
pOp
->
p1
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1083 
too_big
;

1085 
	`as£π
–
rc
==
SQLITE_OK
 );

1101 
OP_Såög
: {

1102 
	`as£π
–
pOp
->
p4
.
z
!=0 );

1103 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1104 
pOut
->
Êags
 = 
MEM_Så
|
MEM_Sètic
|
MEM_Tîm
;

1105 
pOut
->
z
 = 
pOp
->
p4
.z;

1106 
pOut
->
n
 = 
pOp
->
p1
;

1107 
pOut
->
íc
 = 
ícodög
;

1108 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1109 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1110 if–
pOp
->
p3
>0 ){

1111 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1112 
pIn3
 = &
aMem
[
pOp
->
p3
];

1113 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

1114 if–
pIn3
->
u
.
i
==
pOp
->
p5
 ) 
pOut
->
Êags
 = 
MEM_Blob
|
MEM_Sètic
|
MEM_Tîm
;

1132 
OP_NuŒ
: {

1133 
˙t
;

1134 
u16
 
nuŒFœg
;

1135 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1136 
˙t
 = 
pOp
->
p3
-pOp->
p2
;

1137 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1138 
pOut
->
Êags
 = 
nuŒFœg
 = 
pOp
->
p1
 ? (
MEM_NuŒ
|
MEM_CÀ¨ed
) : MEM_Null;

1139  
˙t
>0 ){

1140 
pOut
++;

1141 
	`memAboutToCh™ge
(
p
, 
pOut
);

1142 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1143 
pOut
->
Êags
 = 
nuŒFœg
;

1144 
˙t
--;

1157 
OP_So·NuŒ
: {

1158 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1159 
pOut
 = &
aMem
[
pOp
->
p1
];

1160 
pOut
->
Êags
 = (pOut->Êags|
MEM_NuŒ
)&~
MEM_Undeföed
;

1170 
OP_Blob
: {

1171 
	`as£π
–
pOp
->
p1
 <
SQLITE_MAX_LENGTH
 );

1172 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1173 
	`sqlôe3VdbeMemSëSå
(
pOut
, 
pOp
->
p4
.
z
,ÖOp->
p1
, 0, 0);

1174 
pOut
->
íc
 = 
ícodög
;

1175 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1187 
OP_V¨übÀ
: {

1188 
Mem
 *
pV¨
;

1190 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=
p
->
nV¨
 );

1191 
	`as£π
–
pOp
->
p4
.
z
==0 ||ÖOp->p4.z==
p
->
azV¨
[pOp->
p1
-1] );

1192 
pV¨
 = &
p
->
aV¨
[
pOp
->
p1
 - 1];

1193 if–
	`sqlôe3VdbeMemTooBig
(
pV¨
) ){

1194 
too_big
;

1196 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

1197 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pV¨
, 
MEM_Sètic
);

1198 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1211 
OP_Move
: {

1212 
n
;

1213 
p1
;

1214 
p2
;

1216 
n
 = 
pOp
->
p3
;

1217 
p1
 = 
pOp
->p1;

1218 
p2
 = 
pOp
->p2;

1219 
	`as£π
–
n
>0 && 
p1
>0 && 
p2
>0 );

1220 
	`as£π
–
p1
+
n
<=
p2
 ||Ö2+n<=p1 );

1222 
pIn1
 = &
aMem
[
p1
];

1223 
pOut
 = &
aMem
[
p2
];

1225 
	`as£π
–
pOut
<=&
aMem
[(
p
->
nMem
+1 -Ö->
nCurs‹
)] );

1226 
	`as£π
–
pIn1
<=&
aMem
[(
p
->
nMem
+1 -Ö->
nCurs‹
)] );

1227 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

1228 
	`memAboutToCh™ge
(
p
, 
pOut
);

1229 
	`sqlôe3VdbeMemMove
(
pOut
, 
pIn1
);

1230 #ifde‡
SQLITE_DEBUG


1231 if–
pOut
->
pSc›yFrom
>=&
aMem
[
p1
] &&ÖOut->pScopyFrom<pOut ){

1232 
pOut
->
pSc›yFrom
 +
pOp
->
p2
 - 
p1
;

1235 
	`DìphemîÆize
(
pOut
);

1236 
	`REGISTER_TRACE
(
p2
++, 
pOut
);

1237 
pIn1
++;

1238 
pOut
++;

1239 } --
n
 );

1251 
OP_C›y
: {

1252 
n
;

1254 
n
 = 
pOp
->
p3
;

1255 
pIn1
 = &
aMem
[
pOp
->
p1
];

1256 
pOut
 = &
aMem
[
pOp
->
p2
];

1257 
	`as£π
–
pOut
!=
pIn1
 );

1259 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn1
, 
MEM_Ephem
);

1260 
	`DìphemîÆize
(
pOut
);

1261 #ifde‡
SQLITE_DEBUG


1262 
pOut
->
pSc›yFrom
 = 0;

1264 
	`REGISTER_TRACE
(
pOp
->
p2
+pOp->
p3
-
n
, 
pOut
);

1265 if–(
n
--)==0 ) ;

1266 
pOut
++;

1267 
pIn1
++;

1285 
OP_SC›y
: {

1286 
pIn1
 = &
aMem
[
pOp
->
p1
];

1287 
pOut
 = &
aMem
[
pOp
->
p2
];

1288 
	`as£π
–
pOut
!=
pIn1
 );

1289 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn1
, 
MEM_Ephem
);

1290 #ifde‡
SQLITE_DEBUG


1291 if–
pOut
->
pSc›yFrom
==0 )ÖOut->pSc›yFrom = 
pIn1
;

1304 
OP_I¡C›y
: {

1305 
pIn1
 = &
aMem
[
pOp
->
p1
];

1306 
	`as£π
–(
pIn1
->
Êags
 & 
MEM_I¡
)!=0 );

1307 
pOut
 = &
aMem
[
pOp
->
p2
];

1308 
	`sqlôe3VdbeMemSëI¡64
(
pOut
, 
pIn1
->
u
.
i
);

1321 
OP_Resu…Row
: {

1322 
Mem
 *
pMem
;

1323 
i
;

1324 
	`as£π
–
p
->
nResCﬁumn
==
pOp
->
p2
 );

1325 
	`as£π
–
pOp
->
p1
>0 );

1326 
	`as£π
–
pOp
->
p1
+pOp->
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

1328 #i‚de‡
SQLITE_OMIT_PROGRESS_CALLBACK


1331 if–
db
->
xProgªss
!=0

1332 && 
nVmSãp
>=
nProgªssLimô


1333 && 
db
->
	`xProgªss
(db->
pProgªssArg
)!=0

1335 
rc
 = 
SQLITE_INTERRUPT
;

1336 
ab‹t_due_to_îr‹
;

1343 if–
SQLITE_OK
!=(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 0)) ){

1344 
	`as£π
–
db
->
Êags
&
SQLITE_Cou¡Rows
 );

1345 
	`as£π
–
p
->
u£sStmtJou∫Æ
 );

1346 
ab‹t_due_to_îr‹
;

1364 
	`as£π
–
p
->
iSèãmít
==0 || 
db
->
Êags
&
SQLITE_Cou¡Rows
 );

1365 
rc
 = 
	`sqlôe3VdbeClo£Sèãmít
(
p
, 
SAVEPOINT_RELEASE
);

1366 
	`as£π
–
rc
==
SQLITE_OK
 );

1369 
p
->
ˇcheCå
 = (p->cacheCtr + 2)|1;

1375 
pMem
 = 
p
->
pResu…Së
 = &
aMem
[
pOp
->
p1
];

1376 
i
=0; i<
pOp
->
p2
; i++){

1377 
	`as£π
–
	`memIsVÆid
(&
pMem
[
i
]) );

1378 
	`DìphemîÆize
(&
pMem
[
i
]);

1379 
	`as£π
–(
pMem
[
i
].
Êags
 & 
MEM_Ephem
)==0

1380 || (
pMem
[
i
].
Êags
 & (
MEM_Så
|
MEM_Blob
))==0 );

1381 
	`sqlôe3VdbeMemNulTîmö©e
(&
pMem
[
i
]);

1382 
	`REGISTER_TRACE
(
pOp
->
p1
+
i
, &
pMem
[i]);

1384 if–
db
->
mÆlocFaûed
 ) 
no_mem
;

1386 if–
db
->
mTø˚
 & 
SQLITE_TRACE_ROW
 ){

1387 
db
->
	`xTø˚
(
SQLITE_TRACE_ROW
, db->
pTø˚Arg
, 
p
, 0);

1392 
p
->
pc
 = ()(
pOp
 - 
aOp
) + 1;

1393 
rc
 = 
SQLITE_ROW
;

1394 
vdbe_ªtu∫
;

1410 
OP_C⁄ˇt
: {

1411 
i64
 
nByã
;

1413 
pIn1
 = &
aMem
[
pOp
->
p1
];

1414 
pIn2
 = &
aMem
[
pOp
->
p2
];

1415 
pOut
 = &
aMem
[
pOp
->
p3
];

1416 
	`as£π
–
pIn1
!=
pOut
 );

1417 if–(
pIn1
->
Êags
 | 
pIn2
->ÊagsË& 
MEM_NuŒ
 ){

1418 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1421 if–
	`Ex∑ndBlob
(
pIn1
Ë|| Ex∑ndBlob(
pIn2
ËË
no_mem
;

1422 
	`Såögify
(
pIn1
, 
ícodög
);

1423 
	`Såögify
(
pIn2
, 
ícodög
);

1424 
nByã
 = 
pIn1
->
n
 + 
pIn2
->n;

1425 if–
nByã
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1426 
too_big
;

1428 if–
	`sqlôe3VdbeMemGrow
(
pOut
, ()
nByã
+2,ÖOut==
pIn2
) ){

1429 
no_mem
;

1431 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Så
);

1432 if–
pOut
!=
pIn2
 ){

1433 
	`mem˝y
(
pOut
->
z
, 
pIn2
->z,ÖIn2->
n
);

1435 
	`mem˝y
(&
pOut
->
z
[
pIn2
->
n
], 
pIn1
->z,ÖIn1->n);

1436 
pOut
->
z
[
nByã
]=0;

1437 
pOut
->
z
[
nByã
+1] = 0;

1438 
pOut
->
Êags
 |
MEM_Tîm
;

1439 
pOut
->
n
 = ()
nByã
;

1440 
pOut
->
íc
 = 
ícodög
;

1441 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

1483 
OP_Add
:

1484 
OP_Subåa˘
:

1485 
OP_Mu…ùly
:

1486 
OP_Divide
:

1487 
OP_Remaödî
: {

1488 
bI¡öt
;

1489 
u16
 
Êags
;

1490 
u16
 
ty≥1
;

1491 
u16
 
ty≥2
;

1492 
i64
 
iA
;

1493 
i64
 
iB
;

1494 
rA
;

1495 
rB
;

1497 
pIn1
 = &
aMem
[
pOp
->
p1
];

1498 
ty≥1
 = 
	`numîicTy≥
(
pIn1
);

1499 
pIn2
 = &
aMem
[
pOp
->
p2
];

1500 
ty≥2
 = 
	`numîicTy≥
(
pIn2
);

1501 
pOut
 = &
aMem
[
pOp
->
p3
];

1502 
Êags
 = 
pIn1
->Êag†| 
pIn2
->flags;

1503 if–(
Êags
 & 
MEM_NuŒ
)!=0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1504 if–(
ty≥1
 & 
ty≥2
 & 
MEM_I¡
)!=0 ){

1505 
iA
 = 
pIn1
->
u
.
i
;

1506 
iB
 = 
pIn2
->
u
.
i
;

1507 
bI¡öt
 = 1;

1508  
pOp
->
›code
 ){

1509 
OP_Add
: if–
	`sqlôe3AddI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1510 
OP_Subåa˘
: if–
	`sqlôe3SubI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1511 
OP_Mu…ùly
: if–
	`sqlôe3MulI¡64
(&
iB
,
iA
ËË
Â_m©h
; ;

1512 
OP_Divide
: {

1513 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1514 if–
iA
==-1 && 
iB
==
SMALLEST_INT64
 ) 
Â_m©h
;

1515 
iB
 /
iA
;

1519 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1520 if–
iA
==-1 ) iA = 1;

1521 
iB
 %
iA
;

1525 
pOut
->
u
.
i
 = 
iB
;

1526 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1528 
bI¡öt
 = 0;

1529 
Â_m©h
:

1530 
rA
 = 
	`sqlôe3VdbeRólVÆue
(
pIn1
);

1531 
rB
 = 
	`sqlôe3VdbeRólVÆue
(
pIn2
);

1532  
pOp
->
›code
 ){

1533 
OP_Add
: 
rB
 +
rA
; ;

1534 
OP_Subåa˘
: 
rB
 -
rA
; ;

1535 
OP_Mu…ùly
: 
rB
 *
rA
; ;

1536 
OP_Divide
: {

1538 if–
rA
==()0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1539 
rB
 /
rA
;

1543 
iA
 = (
i64
)
rA
;

1544 
iB
 = (
i64
)
rB
;

1545 if–
iA
==0 ) 
¨ôhmëic_ªsu…_is_nuŒ
;

1546 if–
iA
==-1 ) iA = 1;

1547 
rB
 = ()(
iB
 % 
iA
);

1551 #ifde‡
SQLITE_OMIT_FLOATING_POINT


1552 
pOut
->
u
.
i
 = 
rB
;

1553 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1555 if–
	`sqlôe3IsNaN
(
rB
) ){

1556 
¨ôhmëic_ªsu…_is_nuŒ
;

1558 
pOut
->
u
.
r
 = 
rB
;

1559 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Ról
);

1560 if–((
ty≥1
|
ty≥2
)&
MEM_Ról
)==0 && !
bI¡öt
 ){

1561 
	`sqlôe3VdbeI¡egîAfföôy
(
pOut
);

1567 
¨ôhmëic_ªsu…_is_nuŒ
:

1568 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1587 
OP_CﬁlSeq
: {

1588 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 );

1589 if–
pOp
->
p1
 ){

1590 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[
pOp
->
p1
], 0);

1636 
OP_Fun˘i⁄0
: {

1637 
n
;

1638 
sqlôe3_c⁄ãxt
 *
pCtx
;

1640 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCDEF
 );

1641 
n
 = 
pOp
->
p5
;

1642 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

1643 
	`as£π
–
n
==0 || (
pOp
->
p2
>0 &&ÖOp->p2+n<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1) );

1644 
	`as£π
–
pOp
->
p3
<pOp->
p2
 ||ÖOp->p3>ıOp->p2+
n
 );

1645 
pCtx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pCtxË+ (
n
-1)*(
sqlôe3_vÆue
*));

1646 if–
pCtx
==0 ) 
no_mem
;

1647 
pCtx
->
pOut
 = 0;

1648 
pCtx
->
pFunc
 = 
pOp
->
p4
.pFunc;

1649 
pCtx
->
iOp
 = ()(
pOp
 - 
aOp
);

1650 
pCtx
->
pVdbe
 = 
p
;

1651 
pCtx
->
¨gc
 = 
n
;

1652 
pOp
->
p4ty≥
 = 
P4_FUNCCTX
;

1653 
pOp
->
p4
.
pCtx
 =ÖCtx;

1654 
pOp
->
›code
 = 
OP_Fun˘i⁄
;

1657 
OP_Fun˘i⁄
: {

1658 
i
;

1659 
sqlôe3_c⁄ãxt
 *
pCtx
;

1661 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCCTX
 );

1662 
pCtx
 = 
pOp
->
p4
.pCtx;

1668 
pOut
 = &
aMem
[
pOp
->
p3
];

1669 if–
pCtx
->
pOut
 !=ÖOut ){

1670 
pCtx
->
pOut
 =ÖOut;

1671 
i
=
pCtx
->
¨gc
-1; i>=0; i--ËpCtx->
¨gv
[i] = &
aMem
[
pOp
->
p2
+i];

1674 
	`memAboutToCh™ge
(
p
, 
pCtx
->
pOut
);

1675 #ifde‡
SQLITE_DEBUG


1676 
i
=0; i<
pCtx
->
¨gc
; i++){

1677 
	`as£π
–
	`memIsVÆid
(
pCtx
->
¨gv
[
i
]) );

1678 
	`REGISTER_TRACE
(
pOp
->
p2
+
i
, 
pCtx
->
¨gv
[i]);

1681 
	`MemSëTy≥Fœg
(
pCtx
->
pOut
, 
MEM_NuŒ
);

1682 
pCtx
->
fEº‹OrAux
 = 0;

1683 
db
->
œ°Rowid
 =ÜastRowid;

1684 (*
pCtx
->
pFunc
->
xSFunc
)’Ctx,ÖCtx->
¨gc
,ÖCtx->
¨gv
);

1685 
œ°Rowid
 = 
db
->lastRowid;

1688 if–
pCtx
->
fEº‹OrAux
 ){

1689 if–
pCtx
->
isEº‹
 ){

1690 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pCtx
->
pOut
));

1691 
rc
 = 
pCtx
->
isEº‹
;

1693 
	`sqlôe3VdbeDñëeAuxD©a
(
db
, &
p
->
pAuxD©a
, 
pCtx
->
iOp
, 
pOp
->
p1
);

1694 if–
rc
 ) 
ab‹t_due_to_îr‹
;

1698 if–
pOut
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

1699 
	`sqlôe3VdbeCh™geEncodög
(
pCtx
->
pOut
, 
ícodög
);

1700 if–
	`sqlôe3VdbeMemTooBig
(
pCtx
->
pOut
ËË
too_big
;

1703 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pCtx
->
pOut
);

1704 
	`UPDATE_MAX_BLOBSIZE
(
pCtx
->
pOut
);

1738 
OP_BôAnd
:

1739 
OP_BôOr
:

1740 
OP_Shi·Le·
:

1741 
OP_Shi·Right
: {

1742 
i64
 
iA
;

1743 
u64
 
uA
;

1744 
i64
 
iB
;

1745 
u8
 
›
;

1747 
pIn1
 = &
aMem
[
pOp
->
p1
];

1748 
pIn2
 = &
aMem
[
pOp
->
p2
];

1749 
pOut
 = &
aMem
[
pOp
->
p3
];

1750 if–(
pIn1
->
Êags
 | 
pIn2
->ÊagsË& 
MEM_NuŒ
 ){

1751 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

1754 
iA
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn2
);

1755 
iB
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

1756 
›
 = 
pOp
->
›code
;

1757 if–
›
==
OP_BôAnd
 ){

1758 
iA
 &
iB
;

1759 }if–
›
==
OP_BôOr
 ){

1760 
iA
 |
iB
;

1761 }if–
iB
!=0 ){

1762 
	`as£π
–
›
==
OP_Shi·Right
 || op==
OP_Shi·Le·
 );

1765 if–
iB
<0 ){

1766 
	`as£π
–
OP_Shi·Right
==
OP_Shi·Le·
+1 );

1767 
›
 = 2*
OP_Shi·Le·
 + 1 - op;

1768 
iB
 = iB>(-64) ? -iB : 64;

1771 if–
iB
>=64 ){

1772 
iA
 = (iA>=0 || 
›
==
OP_Shi·Le·
) ? 0 : -1;

1774 
	`mem˝y
(&
uA
, &
iA
, (uA));

1775 if–
›
==
OP_Shi·Le·
 ){

1776 
uA
 <<
iB
;

1778 
uA
 >>
iB
;

1780 if–
iA
<0 ) 
uA
 |((((
u64
)0xffffffff)<<32)|0xffffffffË<< (64-
iB
);

1782 
	`mem˝y
(&
iA
, &
uA
, (iA));

1785 
pOut
->
u
.
i
 = 
iA
;

1786 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

1798 
OP_AddImm
: {

1799 
pIn1
 = &
aMem
[
pOp
->
p1
];

1800 
	`memAboutToCh™ge
(
p
, 
pIn1
);

1801 
	`sqlôe3VdbeMemI¡egîify
(
pIn1
);

1802 
pIn1
->
u
.
i
 +
pOp
->
p2
;

1813 
OP_Mu°BeI¡
: {

1814 
pIn1
 = &
aMem
[
pOp
->
p1
];

1815 if–(
pIn1
->
Êags
 & 
MEM_I¡
)==0 ){

1816 
	`≠∂yAfföôy
(
pIn1
, 
SQLITE_AFF_NUMERIC
, 
ícodög
);

1817 
	`VdbeBønchTakí
((
pIn1
->
Êags
&
MEM_I¡
)==0, 2);

1818 if–(
pIn1
->
Êags
 & 
MEM_I¡
)==0 ){

1819 if–
pOp
->
p2
==0 ){

1820 
rc
 = 
SQLITE_MISMATCH
;

1821 
ab‹t_due_to_îr‹
;

1823 
jump_to_p2
;

1827 
	`MemSëTy≥Fœg
(
pIn1
, 
MEM_I¡
);

1831 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


1841 
OP_RólAfföôy
: {

1842 
pIn1
 = &
aMem
[
pOp
->
p1
];

1843 if–
pIn1
->
Êags
 & 
MEM_I¡
 ){

1844 
	`sqlôe3VdbeMemRólify
(
pIn1
);

1850 #i‚de‡
SQLITE_OMIT_CAST


1866 
OP_Ca°
: {

1867 
	`as£π
–
pOp
->
p2
>=
SQLITE_AFF_BLOB
 &&ÖOp->p2<=
SQLITE_AFF_REAL
 );

1868 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_TEXT
 );

1869 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_BLOB
 );

1870 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_NUMERIC
 );

1871 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_INTEGER
 );

1872 
	`ã°ˇ£
–
pOp
->
p2
==
SQLITE_AFF_REAL
 );

1873 
pIn1
 = &
aMem
[
pOp
->
p1
];

1874 
	`memAboutToCh™ge
(
p
, 
pIn1
);

1875 
rc
 = 
	`Ex∑ndBlob
(
pIn1
);

1876 
	`sqlôe3VdbeMemCa°
(
pIn1
, 
pOp
->
p2
, 
ícodög
);

1877 
	`UPDATE_MAX_BLOBSIZE
(
pIn1
);

1878 if–
rc
 ) 
ab‹t_due_to_îr‹
;

1965 
OP_Eq
:

1966 
OP_Ne
:

1967 
OP_Lt
:

1968 
OP_Le
:

1969 
OP_Gt
:

1970 
OP_Ge
: {

1971 
ªs
;

1972 
afföôy
;

1973 
u16
 
Êags1
;

1974 
u16
 
Êags3
;

1976 
pIn1
 = &
aMem
[
pOp
->
p1
];

1977 
pIn3
 = &
aMem
[
pOp
->
p3
];

1978 
Êags1
 = 
pIn1
->
Êags
;

1979 
Êags3
 = 
pIn3
->
Êags
;

1980 if–(
Êags1
 | 
Êags3
)&
MEM_NuŒ
 ){

1982 if–
pOp
->
p5
 & 
SQLITE_NULLEQ
 ){

1987 
	`as£π
–
pOp
->
›code
==
OP_Eq
 ||ÖOp->›code==
OP_Ne
 );

1988 
	`as£π
–(
Êags1
 & 
MEM_CÀ¨ed
)==0 );

1989 
	`as£π
–(
pOp
->
p5
 & 
SQLITE_JUMPIFNULL
)==0 );

1990 if–(
Êags1
&
MEM_NuŒ
)!=0

1991 && (
Êags3
&
MEM_NuŒ
)!=0

1992 && (
Êags3
&
MEM_CÀ¨ed
)==0

1994 
ªs
 = 0;

1996 
ªs
 = 1;

2003 if–
pOp
->
p5
 & 
SQLITE_STOREP2
 ){

2004 
pOut
 = &
aMem
[
pOp
->
p2
];

2005 
	`memAboutToCh™ge
(
p
, 
pOut
);

2006 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_NuŒ
);

2007 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

2009 
	`VdbeBønchTakí
(2,3);

2010 if–
pOp
->
p5
 & 
SQLITE_JUMPIFNULL
 ){

2011 
jump_to_p2
;

2018 
afföôy
 = 
pOp
->
p5
 & 
SQLITE_AFF_MASK
;

2019 if–
afföôy
>=
SQLITE_AFF_NUMERIC
 ){

2020 if–(
Êags1
 | 
Êags3
)&
MEM_Så
 ){

2021 if–(
Êags1
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

2022 
	`≠∂yNumîicAfföôy
(
pIn1
,0);

2023 
Êags3
 = 
pIn3
->
Êags
;

2025 if–(
Êags3
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

2026 
	`≠∂yNumîicAfföôy
(
pIn3
,0);

2029 }if–
afföôy
==
SQLITE_AFF_TEXT
 ){

2030 if–(
Êags1
 & 
MEM_Så
)==0 && (Êags1 & (
MEM_I¡
|
MEM_Ról
))!=0 ){

2031 
	`ã°ˇ£
–
pIn1
->
Êags
 & 
MEM_I¡
 );

2032 
	`ã°ˇ£
–
pIn1
->
Êags
 & 
MEM_Ról
 );

2033 
	`sqlôe3VdbeMemSåögify
(
pIn1
, 
ícodög
, 1);

2034 
	`ã°ˇ£
–(
Êags1
&
MEM_Dyn
Ë!(
pIn1
->
Êags
&MEM_Dyn) );

2035 
Êags1
 = (
pIn1
->
Êags
 & ~
MEM_Ty≥Mask
) | (flags1 & MEM_TypeMask);

2036 
Êags3
 = 
pIn3
->
Êags
;

2038 if–(
Êags3
 & 
MEM_Så
)==0 && (Êags3 & (
MEM_I¡
|
MEM_Ról
))!=0 ){

2039 
	`ã°ˇ£
–
pIn3
->
Êags
 & 
MEM_I¡
 );

2040 
	`ã°ˇ£
–
pIn3
->
Êags
 & 
MEM_Ról
 );

2041 
	`sqlôe3VdbeMemSåögify
(
pIn3
, 
ícodög
, 1);

2042 
	`ã°ˇ£
–(
Êags3
&
MEM_Dyn
Ë!(
pIn3
->
Êags
&MEM_Dyn) );

2043 
Êags3
 = (
pIn3
->
Êags
 & ~
MEM_Ty≥Mask
) | (flags3 & MEM_TypeMask);

2046 
	`as£π
–
pOp
->
p4ty≥
==
P4_COLLSEQ
 ||ÖOp->
p4
.
pCﬁl
==0 );

2047 if–
Êags1
 & 
MEM_Zîo
 ){

2048 
	`sqlôe3VdbeMemEx∑ndBlob
(
pIn1
);

2049 
Êags1
 &~
MEM_Zîo
;

2051 if–
Êags3
 & 
MEM_Zîo
 ){

2052 
	`sqlôe3VdbeMemEx∑ndBlob
(
pIn3
);

2053 
Êags3
 &~
MEM_Zîo
;

2055 
ªs
 = 
	`sqlôe3MemCom∑ª
(
pIn3
, 
pIn1
, 
pOp
->
p4
.
pCﬁl
);

2057  
pOp
->
›code
 ){

2058 
OP_Eq
: 
ªs
 =Ñes==0; ;

2059 
OP_Ne
: 
ªs
 =Ñes!=0; ;

2060 
OP_Lt
: 
ªs
 =Ñes<0; ;

2061 
OP_Le
: 
ªs
 =Ñes<=0; ;

2062 
OP_Gt
: 
ªs
 =Ñes>0; ;

2063 : 
ªs
 =Ñes>=0; ;

2067 
	`as£π
–(
pIn1
->
Êags
 & 
MEM_Dyn
Ë=(
Êags1
 & MEM_Dyn) );

2068 
pIn1
->
Êags
 = 
Êags1
;

2069 
	`as£π
–(
pIn3
->
Êags
 & 
MEM_Dyn
Ë=(
Êags3
 & MEM_Dyn) );

2070 
pIn3
->
Êags
 = 
Êags3
;

2072 if–
pOp
->
p5
 & 
SQLITE_STOREP2
 ){

2073 
pOut
 = &
aMem
[
pOp
->
p2
];

2074 
	`memAboutToCh™ge
(
p
, 
pOut
);

2075 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

2076 
pOut
->
u
.
i
 = 
ªs
;

2077 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

2079 
	`VdbeBønchTakí
(
ªs
!=0, (
pOp
->
p5
 & 
SQLITE_NULLEQ
)?2:3);

2080 if–
ªs
 ){

2081 
jump_to_p2
;

2099 
OP_Pîmuèti⁄
: {

2100 
	`as£π
–
pOp
->
p4ty≥
==
P4_INTARRAY
 );

2101 
	`as£π
–
pOp
->
p4
.
ai
 );

2102 
aPîmuã
 = 
pOp
->
p4
.
ai
 + 1;

2126 
OP_Com∑ª
: {

2127 
n
;

2128 
i
;

2129 
p1
;

2130 
p2
;

2131 c⁄° 
KeyInfo
 *
pKeyInfo
;

2132 
idx
;

2133 
CﬁlSeq
 *
pCﬁl
;

2134 
bRev
;

2136 if–(
pOp
->
p5
 & 
OPFLAG_PERMUTE
)==0 ) 
aPîmuã
 = 0;

2137 
n
 = 
pOp
->
p3
;

2138 
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

2139 
	`as£π
–
n
>0 );

2140 
	`as£π
–
pKeyInfo
!=0 );

2141 
p1
 = 
pOp
->p1;

2142 
p2
 = 
pOp
->p2;

2143 #i‡
SQLITE_DEBUG


2144 if–
aPîmuã
 ){

2145 
k
, 
mx
 = 0;

2146 
k
=0; k<
n
; k++Ëif–
aPîmuã
[k]>
mx
 ) mx =áPermute[k];

2147 
	`as£π
–
p1
>0 &&Ö1+
mx
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2148 
	`as£π
–
p2
>0 &&Ö2+
mx
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2150 
	`as£π
–
p1
>0 &&Ö1+
n
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2151 
	`as£π
–
p2
>0 &&Ö2+
n
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2154 
i
=0; i<
n
; i++){

2155 
idx
 = 
aPîmuã
 ?áPîmuã[
i
] : i;

2156 
	`as£π
–
	`memIsVÆid
(&
aMem
[
p1
+
idx
]) );

2157 
	`as£π
–
	`memIsVÆid
(&
aMem
[
p2
+
idx
]) );

2158 
	`REGISTER_TRACE
(
p1
+
idx
, &
aMem
[p1+idx]);

2159 
	`REGISTER_TRACE
(
p2
+
idx
, &
aMem
[p2+idx]);

2160 
	`as£π
–
i
<
pKeyInfo
->
nFõld
 );

2161 
pCﬁl
 = 
pKeyInfo
->
aCﬁl
[
i
];

2162 
bRev
 = 
pKeyInfo
->
aS‹tOrdî
[
i
];

2163 
iCom∑ª
 = 
	`sqlôe3MemCom∑ª
(&
aMem
[
p1
+
idx
], &aMem[
p2
+idx], 
pCﬁl
);

2164 if–
iCom∑ª
 ){

2165 if–
bRev
 ) 
iCom∑ª
 = -iCompare;

2169 
aPîmuã
 = 0;

2179 
OP_Jump
: {

2180 if–
iCom∑ª
<0 ){

2181 
	`VdbeBønchTakí
(0,3); 
pOp
 = &
aOp
[pOp->
p1
 - 1];

2182 }if–
iCom∑ª
==0 ){

2183 
	`VdbeBønchTakí
(1,3); 
pOp
 = &
aOp
[pOp->
p2
 - 1];

2185 
	`VdbeBønchTakí
(2,3); 
pOp
 = &
aOp
[pOp->
p3
 - 1];

2210 
OP_And
:

2211 
OP_Or
: {

2212 
v1
;

2213 
v2
;

2215 
pIn1
 = &
aMem
[
pOp
->
p1
];

2216 if–
pIn1
->
Êags
 & 
MEM_NuŒ
 ){

2217 
v1
 = 2;

2219 
v1
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
)!=0;

2221 
pIn2
 = &
aMem
[
pOp
->
p2
];

2222 if–
pIn2
->
Êags
 & 
MEM_NuŒ
 ){

2223 
v2
 = 2;

2225 
v2
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn2
)!=0;

2227 if–
pOp
->
›code
==
OP_And
 ){

2228 c⁄° 
™d_logic
[] = { 0, 0, 0, 0, 1, 2, 0, 2, 2 };

2229 
v1
 = 
™d_logic
[v1*3+
v2
];

2231 c⁄° 
‹_logic
[] = { 0, 1, 2, 1, 1, 1, 2, 1, 2 };

2232 
v1
 = 
‹_logic
[v1*3+
v2
];

2234 
pOut
 = &
aMem
[
pOp
->
p3
];

2235 if–
v1
==2 ){

2236 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_NuŒ
);

2238 
pOut
->
u
.
i
 = 
v1
;

2239 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_I¡
);

2251 
OP_NŸ
: {

2252 
pIn1
 = &
aMem
[
pOp
->
p1
];

2253 
pOut
 = &
aMem
[
pOp
->
p2
];

2254 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

2255 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2256 
pOut
->
Êags
 = 
MEM_I¡
;

2257 
pOut
->
u
.
i
 = !
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

2269 
OP_BôNŸ
: {

2270 
pIn1
 = &
aMem
[
pOp
->
p1
];

2271 
pOut
 = &
aMem
[
pOp
->
p2
];

2272 
	`sqlôe3VdbeMemSëNuŒ
(
pOut
);

2273 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2274 
pOut
->
Êags
 = 
MEM_I¡
;

2275 
pOut
->
u
.
i
 = ~
	`sqlôe3VdbeI¡VÆue
(
pIn1
);

2291 
OP_On˚
: {

2292 
	`as£π
–
pOp
->
p1
<
p
->
nOn˚Fœg
 );

2293 
	`VdbeBønchTakí
(
p
->
aOn˚Fœg
[
pOp
->
p1
]!=0, 2);

2294 if–
p
->
aOn˚Fœg
[
pOp
->
p1
] ){

2295 
jump_to_p2
;

2297 
p
->
aOn˚Fœg
[
pOp
->
p1
] = 1;

2314 
OP_If
:

2315 
OP_IfNŸ
: {

2316 
c
;

2317 
pIn1
 = &
aMem
[
pOp
->
p1
];

2318 if–
pIn1
->
Êags
 & 
MEM_NuŒ
 ){

2319 
c
 = 
pOp
->
p3
;

2321 #ifde‡
SQLITE_OMIT_FLOATING_POINT


2322 
c
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn1
)!=0;

2324 
c
 = 
	`sqlôe3VdbeRólVÆue
(
pIn1
)!=0.0;

2326 if–
pOp
->
›code
==
OP_IfNŸ
 ) 
c
 = !c;

2328 
	`VdbeBønchTakí
(
c
!=0, 2);

2329 if–
c
 ){

2330 
jump_to_p2
;

2340 
OP_IsNuŒ
: {

2341 
pIn1
 = &
aMem
[
pOp
->
p1
];

2342 
	`VdbeBønchTakí
–(
pIn1
->
Êags
 & 
MEM_NuŒ
)!=0, 2);

2343 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)!=0 ){

2344 
jump_to_p2
;

2354 
OP_NŸNuŒ
: {

2355 
pIn1
 = &
aMem
[
pOp
->
p1
];

2356 
	`VdbeBønchTakí
–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0, 2);

2357 if–(
pIn1
->
Êags
 & 
MEM_NuŒ
)==0 ){

2358 
jump_to_p2
;

2388 
OP_Cﬁumn
: {

2389 
p2
;

2390 
VdbeCurs‹
 *
pC
;

2391 
BtCurs‹
 *
pCr§
;

2392 
u32
 *
aOff£t
;

2393 
Àn
;

2394 
i
;

2395 
Mem
 *
pDe°
;

2396 
Mem
 
sMem
;

2397 c⁄° 
u8
 *
zD©a
;

2398 c⁄° 
u8
 *
zHdr
;

2399 c⁄° 
u8
 *
zEndHdr
;

2400 
u32
 
off£t
;

2401 
u64
 
off£t64
;

2402 
u32
 
avaû
;

2403 
u32
 
t
;

2404 
Mem
 *
pReg
;

2406 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

2407 
p2
 = 
pOp
->p2;

2410 
rc
 = 
	`sqlôe3VdbeCurs‹Movëo
(&
pC
, &
p2
);

2411 if–
rc
 ) 
ab‹t_due_to_îr‹
;

2413 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

2414 
pDe°
 = &
aMem
[
pOp
->
p3
];

2415 
	`memAboutToCh™ge
(
p
, 
pDe°
);

2416 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

2417 
	`as£π
–
pC
!=0 );

2418 
	`as£π
–
p2
<
pC
->
nFõld
 );

2419 
aOff£t
 = 
pC
->aOffset;

2420 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_VTAB
 );

2421 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_PSEUDO
 ||ÖC->
nuŒRow
 );

2422 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_SORTER
 );

2423 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

2425 if–
pC
->
ˇcheSètus
!=
p
->
ˇcheCå
 ){

2426 if–
pC
->
nuŒRow
 ){

2427 if–
pC
->
eCurTy≥
==
CURTYPE_PSEUDO
 ){

2428 
	`as£π
–
pC
->
uc
.
p£udoTabÀReg
>0 );

2429 
pReg
 = &
aMem
[
pC
->
uc
.
p£udoTabÀReg
];

2430 
	`as£π
–
pReg
->
Êags
 & 
MEM_Blob
 );

2431 
	`as£π
–
	`memIsVÆid
(
pReg
) );

2432 
pC
->
∑ylﬂdSize
 =ÖC->
szRow
 = 
avaû
 = 
pReg
->
n
;

2433 
pC
->
aRow
 = (
u8
*)
pReg
->
z
;

2435 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2436 
›_cﬁumn_out
;

2439 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

2440 
	`as£π
–
pCr§
 );

2441 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCr§
) );

2442 
pC
->
∑ylﬂdSize
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCr§
);

2443 
pC
->
aRow
 = 
	`sqlôe3BåìPaylﬂdFëch
(
pCr§
, &
avaû
);

2444 
	`as£π
–
avaû
<=65536 );

2445 if–
pC
->
∑ylﬂdSize
 <(
u32
)
avaû
 ){

2446 
pC
->
szRow
 =ÖC->
∑ylﬂdSize
;

2447 }if–
pC
->
∑ylﬂdSize
 > (
u32
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

2448 
too_big
;

2450 
pC
->
szRow
 = 
avaû
;

2453 
pC
->
ˇcheSètus
 = 
p
->
ˇcheCå
;

2454 
pC
->
iHdrOff£t
 = 
	`gëV¨öt32
’C->
aRow
, 
off£t
);

2455 
pC
->
nHdrP¨£d
 = 0;

2456 
aOff£t
[0] = 
off£t
;

2459 if–
avaû
<
off£t
 ){

2464 
pC
->
aRow
 = 0;

2465 
pC
->
szRow
 = 0;

2476 if–
off£t
 > 98307 || off£à> 
pC
->
∑ylﬂdSize
 ){

2477 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2478 
ab‹t_due_to_îr‹
;

2480 }if–
off£t
>0 ){

2485 
zD©a
 = 
pC
->
aRow
;

2486 
	`as£π
–
pC
->
nHdrP¨£d
<=
p2
 );

2487 
›_cﬁumn_ªad_hódî
;

2494 if–
pC
->
nHdrP¨£d
<=
p2
 ){

2498 if–
pC
->
iHdrOff£t
<
aOff£t
[0] ){

2500 if–
pC
->
aRow
==0 ){

2501 
	`mem£t
(&
sMem
, 0, (sMem));

2502 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCr§
, 0, 
aOff£t
[0], !
pC
->
isTabÀ
, &
sMem
);

2503 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2504 
zD©a
 = (
u8
*)
sMem
.
z
;

2506 
zD©a
 = 
pC
->
aRow
;

2510 
›_cﬁumn_ªad_hódî
:

2511 
i
 = 
pC
->
nHdrP¨£d
;

2512 
off£t64
 = 
aOff£t
[
i
];

2513 
zHdr
 = 
zD©a
 + 
pC
->
iHdrOff£t
;

2514 
zEndHdr
 = 
zD©a
 + 
aOff£t
[0];

2516 if–(
t
 = 
zHdr
[0])<0x80 ){

2517 
zHdr
++;

2518 
off£t64
 +
	`sqlôe3VdbeO√ByãSîülTy≥Lí
(
t
);

2520 
zHdr
 +
	`sqlôe3GëV¨öt32
(zHdr, &
t
);

2521 
off£t64
 +
	`sqlôe3VdbeSîülTy≥Lí
(
t
);

2523 
pC
->
aTy≥
[
i
++] = 
t
;

2524 
aOff£t
[
i
] = (
u32
)(
off£t64
 & 0xffffffff);

2525 } 
i
<=
p2
 && 
zHdr
<
zEndHdr
 );

2532 if–(
zHdr
>=
zEndHdr
 && (zHdr>zEndHd∏|| 
off£t64
!=
pC
->
∑ylﬂdSize
))

2533 || (
off£t64
 > 
pC
->
∑ylﬂdSize
)

2535 if–
pC
->
aRow
==0 ) 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

2536 
rc
 = 
SQLITE_CORRUPT_BKPT
;

2537 
ab‹t_due_to_îr‹
;

2540 
pC
->
nHdrP¨£d
 = 
i
;

2541 
pC
->
iHdrOff£t
 = (
u32
)(
zHdr
 - 
zD©a
);

2542 if–
pC
->
aRow
==0 ) 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

2544 
t
 = 0;

2551 if–
pC
->
nHdrP¨£d
<=
p2
 ){

2552 if–
pOp
->
p4ty≥
==
P4_MEM
 ){

2553 
	`sqlôe3VdbeMemShÆlowC›y
(
pDe°
, 
pOp
->
p4
.
pMem
, 
MEM_Sètic
);

2555 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2557 
›_cﬁumn_out
;

2560 
t
 = 
pC
->
aTy≥
[
p2
];

2567 
	`as£π
–
p2
<
pC
->
nHdrP¨£d
 );

2568 
	`as£π
–
rc
==
SQLITE_OK
 );

2569 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
pDe°
) );

2570 if–
	`VdbeMemDy«mic
(
pDe°
) ){

2571 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

2573 
	`as£π
–
t
==
pC
->
aTy≥
[
p2
] );

2574 if–
pC
->
szRow
>=
aOff£t
[
p2
+1] ){

2577 
zD©a
 = 
pC
->
aRow
 + 
aOff£t
[
p2
];

2578 if–
t
<12 ){

2579 
	`sqlôe3VdbeSîülGë
(
zD©a
, 
t
, 
pDe°
);

2585 c⁄° 
u16
 
aFœg
[] = { 
MEM_Blob
, 
MEM_Så
|
MEM_Tîm
 };

2586 
pDe°
->
n
 = 
Àn
 = (
t
-12)/2;

2587 
pDe°
->
íc
 = 
ícodög
;

2588 if–
pDe°
->
szMÆloc
 < 
Àn
+2 ){

2589 
pDe°
->
Êags
 = 
MEM_NuŒ
;

2590 if–
	`sqlôe3VdbeMemGrow
(
pDe°
, 
Àn
+2, 0ËË
no_mem
;

2592 
pDe°
->
z
 =ÖDe°->
zMÆloc
;

2594 
	`mem˝y
(
pDe°
->
z
, 
zD©a
, 
Àn
);

2595 
pDe°
->
z
[
Àn
] = 0;

2596 
pDe°
->
z
[
Àn
+1] = 0;

2597 
pDe°
->
Êags
 = 
aFœg
[
t
&1];

2600 
pDe°
->
íc
 = 
ícodög
;

2602 if–((
pOp
->
p5
 & (
OPFLAG_LENGTHARG
|
OPFLAG_TYPEOFARG
))!=0

2603 && ((
t
>=12 && (t&1)==0Ë|| (
pOp
->
p5
 & 
OPFLAG_TYPEOFARG
)!=0))

2604 || (
Àn
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
t
))==0

2612 
u8
 
aZîo
[8];

2613 
	`sqlôe3VdbeSîülGë
(
aZîo
, 
t
, 
pDe°
);

2615 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCr§
, 
aOff£t
[
p2
], 
Àn
, !
pC
->
isTabÀ
,

2616 
pDe°
);

2617 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2618 
	`sqlôe3VdbeSîülGë
((c⁄° 
u8
*)
pDe°
->
z
, 
t
,ÖDest);

2619 
pDe°
->
Êags
 &~
MEM_Ephem
;

2623 
›_cﬁumn_out
:

2624 
	`UPDATE_MAX_BLOBSIZE
(
pDe°
);

2625 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pDe°
);

2638 
OP_Afföôy
: {

2639 c⁄° *
zAfföôy
;

2640 
cAff
;

2642 
zAfföôy
 = 
pOp
->
p4
.
z
;

2643 
	`as£π
–
zAfföôy
!=0 );

2644 
	`as£π
–
zAfföôy
[
pOp
->
p2
]==0 );

2645 
pIn1
 = &
aMem
[
pOp
->
p1
];

2646  (
cAff
 = *(
zAfföôy
++))!=0 ){

2647 
	`as£π
–
pIn1
 <&
p
->
aMem
[’->
nMem
+1 -Ö->
nCurs‹
)] );

2648 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

2649 
	`≠∂yAfföôy
(
pIn1
, 
cAff
, 
ícodög
);

2650 
pIn1
++;

2671 
OP_MakeRec‹d
: {

2672 
u8
 *
zNewRec‹d
;

2673 
Mem
 *
pRec
;

2674 
u64
 
nD©a
;

2675 
nHdr
;

2676 
i64
 
nByã
;

2677 
i64
 
nZîo
;

2678 
nV¨öt
;

2679 
u32
 
£rül_ty≥
;

2680 
Mem
 *
pD©a0
;

2681 
Mem
 *
pLa°
;

2682 
nFõld
;

2683 *
zAfföôy
;

2684 
fûe_f‹m©
;

2685 
i
;

2686 
j
;

2687 
u32
 
Àn
;

2704 
nD©a
 = 0;

2705 
nHdr
 = 0;

2706 
nZîo
 = 0;

2707 
nFõld
 = 
pOp
->
p1
;

2708 
zAfföôy
 = 
pOp
->
p4
.
z
;

2709 
	`as£π
–
nFõld
>0 && 
pOp
->
p2
>0 &&ÖOp->p2+nFõld<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

2710 
pD©a0
 = &
aMem
[
nFõld
];

2711 
nFõld
 = 
pOp
->
p2
;

2712 
pLa°
 = &
pD©a0
[
nFõld
-1];

2713 
fûe_f‹m©
 = 
p
->
möWrôeFûeF‹m©
;

2716 
	`as£π
–
pOp
->
p3
<pOp->
p1
 ||ÖOp->p3>ıOp->p1+pOp->
p2
 );

2717 
pOut
 = &
aMem
[
pOp
->
p3
];

2718 
	`memAboutToCh™ge
(
p
, 
pOut
);

2722 
	`as£π
–
pD©a0
<=
pLa°
 );

2723 if–
zAfföôy
 ){

2724 
pRec
 = 
pD©a0
;

2726 
	`≠∂yAfföôy
(
pRec
++, *(
zAfföôy
++), 
ícodög
);

2727 
	`as£π
–
zAfföôy
[0]==0 || 
pRec
<=
pLa°
 );

2728 } 
zAfföôy
[0] );

2734 
pRec
 = 
pLa°
;

2736 
	`as£π
–
	`memIsVÆid
(
pRec
) );

2737 
pRec
->
uTemp
 = 
£rül_ty≥
 = 
	`sqlôe3VdbeSîülTy≥
’Rec, 
fûe_f‹m©
, &
Àn
);

2738 if–
pRec
->
Êags
 & 
MEM_Zîo
 ){

2739 if–
nD©a
 ){

2740 if–
	`sqlôe3VdbeMemEx∑ndBlob
(
pRec
ËË
no_mem
;

2742 
nZîo
 +
pRec
->
u
.nZero;

2743 
Àn
 -
pRec
->
u
.
nZîo
;

2746 
nD©a
 +
Àn
;

2747 
	`ã°ˇ£
–
£rül_ty≥
==127 );

2748 
	`ã°ˇ£
–
£rül_ty≥
==128 );

2749 
nHdr
 +
£rül_ty≥
<=127 ? 1 : 
	`sqlôe3V¨ötLí
(serial_type);

2750 if–
pRec
==
pD©a0
 ) ;

2751 
pRec
--;

2758 
	`ã°ˇ£
–
nHdr
==126 );

2759 
	`ã°ˇ£
–
nHdr
==127 );

2760 if–
nHdr
<=126 ){

2762 
nHdr
 += 1;

2765 
nV¨öt
 = 
	`sqlôe3V¨ötLí
(
nHdr
);

2766 
nHdr
 +
nV¨öt
;

2767 if–
nV¨öt
<
	`sqlôe3V¨ötLí
(
nHdr
) )ÇHdr++;

2769 
nByã
 = 
nHdr
+
nD©a
;

2770 if–
nByã
+
nZîo
>
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

2771 
too_big
;

2779 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, ()
nByã
) ){

2780 
no_mem
;

2782 
zNewRec‹d
 = (
u8
 *)
pOut
->
z
;

2785 
i
 = 
	`putV¨öt32
(
zNewRec‹d
, 
nHdr
);

2786 
j
 = 
nHdr
;

2787 
	`as£π
–
pD©a0
<=
pLa°
 );

2788 
pRec
 = 
pD©a0
;

2790 
£rül_ty≥
 = 
pRec
->
uTemp
;

2793 
i
 +
	`putV¨öt32
(&
zNewRec‹d
[i], 
£rül_ty≥
);

2796 
j
 +
	`sqlôe3VdbeSîülPut
(&
zNewRec‹d
[j], 
pRec
, 
£rül_ty≥
);

2797 } (++
pRec
)<=
pLa°
 );

2798 
	`as£π
–
i
==
nHdr
 );

2799 
	`as£π
–
j
==
nByã
 );

2801 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

2802 
pOut
->
n
 = ()
nByã
;

2803 
pOut
->
Êags
 = 
MEM_Blob
;

2804 if–
nZîo
 ){

2805 
pOut
->
u
.
nZîo
 =ÇZero;

2806 
pOut
->
Êags
 |
MEM_Zîo
;

2808 
pOut
->
íc
 = 
SQLITE_UTF8
;

2809 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pOut
);

2810 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

2820 #i‚de‡
SQLITE_OMIT_BTREECOUNT


2821 
OP_Cou¡
: {

2822 
i64
 
nE¡ry
;

2823 
BtCurs‹
 *
pCr§
;

2825 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]->
eCurTy≥
==
CURTYPE_BTREE
 );

2826 
pCr§
 = 
p
->
≠C§
[
pOp
->
p1
]->
uc
.
pCurs‹
;

2827 
	`as£π
–
pCr§
 );

2828 
nE¡ry
 = 0;

2829 
rc
 = 
	`sqlôe3BåìCou¡
(
pCr§
, &
nE¡ry
);

2830 if–
rc
 ) 
ab‹t_due_to_îr‹
;

2831 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

2832 
pOut
->
u
.
i
 = 
nE¡ry
;

2843 
OP_Savïoöt
: {

2844 
p1
;

2845 *
zName
;

2846 
nName
;

2847 
Savïoöt
 *
pNew
;

2848 
Savïoöt
 *
pSavïoöt
;

2849 
Savïoöt
 *
pTmp
;

2850 
iSavïoöt
;

2851 
ii
;

2853 
p1
 = 
pOp
->p1;

2854 
zName
 = 
pOp
->
p4
.
z
;

2859 
	`as£π
–
db
->
pSavïoöt
==0 || db->
autoCommô
==0 );

2860 
	`as£π
–
p1
==
SAVEPOINT_BEGIN
||p1==
SAVEPOINT_RELEASE
||p1==
SAVEPOINT_ROLLBACK
 );

2861 
	`as£π
–
db
->
pSavïoöt
 || db->
isTønß˘i⁄Savïoöt
==0 );

2862 
	`as£π
–
	`checkSavïoötCou¡
(
db
) );

2863 
	`as£π
–
p
->
bIsRódî
 );

2865 if–
p1
==
SAVEPOINT_BEGIN
 ){

2866 if–
db
->
nVdbeWrôe
>0 ){

2870 
	`sqlôe3VdbeEº‹
(
p
, "cannot open savepoint - SQL statements inÖrogress");

2871 
rc
 = 
SQLITE_BUSY
;

2873 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

2875 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2880 
	`as£π
–
db
->
autoCommô
==0 || db->
nVTøns
==0 );

2881 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_BEGIN
,

2882 
db
->
nSèãmít
+db->
nSavïoöt
);

2883 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2887 
pNew
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
Savïoöt
)+
nName
+1);

2888 if–
pNew
 ){

2889 
pNew
->
zName
 = (*)&pNew[1];

2890 
	`mem˝y
(
pNew
->
zName
, zName, 
nName
+1);

2894 if–
db
->
autoCommô
 ){

2895 
db
->
autoCommô
 = 0;

2896 
db
->
isTønß˘i⁄Savïoöt
 = 1;

2898 
db
->
nSavïoöt
++;

2902 
pNew
->
pNext
 = 
db
->
pSavïoöt
;

2903 
db
->
pSavïoöt
 = 
pNew
;

2904 
pNew
->
nDe„ºedC⁄s
 = 
db
->nDeferredCons;

2905 
pNew
->
nDe„ºedImmC⁄s
 = 
db
->nDeferredImmCons;

2909 
iSavïoöt
 = 0;

2914 
pSavïoöt
 = 
db
->pSavepoint;

2915 
pSavïoöt
 && 
	`sqlôe3SåICmp
’Savïoöt->
zName
, zName);

2916 
pSavïoöt
 =ÖSavïoöt->
pNext


2918 
iSavïoöt
++;

2920 if–!
pSavïoöt
 ){

2921 
	`sqlôe3VdbeEº‹
(
p
, "nÿsuch savïoöt: %s", 
zName
);

2922 
rc
 = 
SQLITE_ERROR
;

2923 }if–
db
->
nVdbeWrôe
>0 && 
p1
==
SAVEPOINT_RELEASE
 ){

2927 
	`sqlôe3VdbeEº‹
(
p
, "cannotÑelease savepoint - "

2929 
rc
 = 
SQLITE_BUSY
;

2936 
isTønß˘i⁄
 = 
pSavïoöt
->
pNext
==0 && 
db
->
isTønß˘i⁄Savïoöt
;

2937 if–
isTønß˘i⁄
 && 
p1
==
SAVEPOINT_RELEASE
 ){

2938 if–(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1))!=
SQLITE_OK
 ){

2939 
vdbe_ªtu∫
;

2941 
db
->
autoCommô
 = 1;

2942 if–
	`sqlôe3VdbeHÆt
(
p
)==
SQLITE_BUSY
 ){

2943 
p
->
pc
 = ()(
pOp
 - 
aOp
);

2944 
db
->
autoCommô
 = 0;

2945 
p
->
rc
 =Ñ¯
SQLITE_BUSY
;

2946 
vdbe_ªtu∫
;

2948 
db
->
isTønß˘i⁄Savïoöt
 = 0;

2949 
rc
 = 
p
->rc;

2951 
isSchemaCh™ge
;

2952 
iSavïoöt
 = 
db
->
nSavïoöt
 - iSavepoint - 1;

2953 if–
p1
==
SAVEPOINT_ROLLBACK
 ){

2954 
isSchemaCh™ge
 = (
db
->
Êags
 & 
SQLITE_I¡înCh™ges
)!=0;

2955 
ii
=0; ii<
db
->
nDb
; ii++){

2956 
rc
 = 
	`sqlôe3BåìTrùAŒCurs‹s
(
db
->
aDb
[
ii
].
pBt
,

2957 
SQLITE_ABORT_ROLLBACK
,

2958 
isSchemaCh™ge
==0);

2959 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

2962 
isSchemaCh™ge
 = 0;

2964 
ii
=0; ii<
db
->
nDb
; ii++){

2965 
rc
 = 
	`sqlôe3BåìSavïoöt
(
db
->
aDb
[
ii
].
pBt
, 
p1
, 
iSavïoöt
);

2966 if–
rc
!=
SQLITE_OK
 ){

2967 
ab‹t_due_to_îr‹
;

2970 if–
isSchemaCh™ge
 ){

2971 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

2972 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

2973 
db
->
Êags
 = (db->Êag†| 
SQLITE_I¡înCh™ges
);

2979  
db
->
pSavïoöt
!=pSavepoint ){

2980 
pTmp
 = 
db
->
pSavïoöt
;

2981 
db
->
pSavïoöt
 = 
pTmp
->
pNext
;

2982 
	`sqlôe3DbFªe
(
db
, 
pTmp
);

2983 
db
->
nSavïoöt
--;

2990 if–
p1
==
SAVEPOINT_RELEASE
 ){

2991 
	`as£π
–
pSavïoöt
==
db
->pSavepoint );

2992 
db
->
pSavïoöt
 =ÖSavïoöt->
pNext
;

2993 
	`sqlôe3DbFªe
(
db
, 
pSavïoöt
);

2994 if–!
isTønß˘i⁄
 ){

2995 
db
->
nSavïoöt
--;

2998 
db
->
nDe„ºedC⁄s
 = 
pSavïoöt
->nDeferredCons;

2999 
db
->
nDe„ºedImmC⁄s
 = 
pSavïoöt
->nDeferredImmCons;

3002 if–!
isTønß˘i⁄
 || 
p1
==
SAVEPOINT_ROLLBACK
 ){

3003 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
p1
, 
iSavïoöt
);

3004 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3008 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3022 
OP_AutoCommô
: {

3023 
desúedAutoCommô
;

3024 
iRﬁlback
;

3026 
desúedAutoCommô
 = 
pOp
->
p1
;

3027 
iRﬁlback
 = 
pOp
->
p2
;

3028 
	`as£π
–
desúedAutoCommô
==1 || desiredAutoCommit==0 );

3029 
	`as£π
–
desúedAutoCommô
==1 || 
iRﬁlback
==0 );

3030 
	`as£π
–
db
->
nVdbeA˘ive
>0 );

3031 
	`as£π
–
p
->
bIsRódî
 );

3033 if–
desúedAutoCommô
!=
db
->
autoCommô
 ){

3034 if–
iRﬁlback
 ){

3035 
	`as£π
–
desúedAutoCommô
==1 );

3036 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

3037 
db
->
autoCommô
 = 1;

3038 }if–
desúedAutoCommô
 && 
db
->
nVdbeWrôe
>0 ){

3042 
	`sqlôe3VdbeEº‹
(
p
, "cannot commitÅransaction - "

3044 
rc
 = 
SQLITE_BUSY
;

3045 
ab‹t_due_to_îr‹
;

3046 }if–(
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1))!=
SQLITE_OK
 ){

3047 
vdbe_ªtu∫
;

3049 
db
->
autoCommô
 = (
u8
)
desúedAutoCommô
;

3051 if–
	`sqlôe3VdbeHÆt
(
p
)==
SQLITE_BUSY
 ){

3052 
p
->
pc
 = ()(
pOp
 - 
aOp
);

3053 
db
->
autoCommô
 = (
u8
)(1-
desúedAutoCommô
);

3054 
p
->
rc
 =Ñ¯
SQLITE_BUSY
;

3055 
vdbe_ªtu∫
;

3057 
	`as£π
–
db
->
nSèãmít
==0 );

3058 
	`sqlôe3Clo£Savïoöts
(
db
);

3059 if–
p
->
rc
==
SQLITE_OK
 ){

3060 
rc
 = 
SQLITE_DONE
;

3062 
rc
 = 
SQLITE_ERROR
;

3064 
vdbe_ªtu∫
;

3066 
	`sqlôe3VdbeEº‹
(
p
,

3067 (!
desúedAutoCommô
)?"cannot startáÅransaction withináÅransaction":(

3068 (
iRﬁlback
)?"cannotÑollback -ÇoÅransaction isáctive":

3071 
rc
 = 
SQLITE_ERROR
;

3072 
ab‹t_due_to_îr‹
;

3111 
OP_Tønß˘i⁄
: {

3112 
Båì
 *
pBt
;

3113 
iMëa
;

3114 
iGí
;

3116 
	`as£π
–
p
->
bIsRódî
 );

3117 
	`as£π
–
p
->
ªadO∆y
==0 || 
pOp
->
p2
==0 );

3118 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

3119 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

3120 if–
pOp
->
p2
 && (
db
->
Êags
 & 
SQLITE_QuîyO∆y
)!=0 ){

3121 
rc
 = 
SQLITE_READONLY
;

3122 
ab‹t_due_to_îr‹
;

3124 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

3126 if–
pBt
 ){

3127 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pBt
, 
pOp
->
p2
);

3128 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY_SNAPSHOT
 );

3129 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY_RECOVERY
 );

3130 if–(
rc
&0xff)==
SQLITE_BUSY
 ){

3131 
p
->
pc
 = ()(
pOp
 - 
aOp
);

3132 
p
->
rc
 =Ñc;

3133 
vdbe_ªtu∫
;

3135 if–
rc
!=
SQLITE_OK
 ){

3136 
ab‹t_due_to_îr‹
;

3139 if–
pOp
->
p2
 && 
p
->
u£sStmtJou∫Æ


3140 && (
db
->
autoCommô
==0 || db->
nVdbeRód
>1)

3142 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pBt
) );

3143 if–
p
->
iSèãmít
==0 ){

3144 
	`as£π
–
db
->
nSèãmít
>=0 && db->
nSavïoöt
>=0 );

3145 
db
->
nSèãmít
++;

3146 
p
->
iSèãmít
 = 
db
->
nSavïoöt
 + db->
nSèãmít
;

3149 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_BEGIN
, 
p
->
iSèãmít
-1);

3150 if–
rc
==
SQLITE_OK
 ){

3151 
rc
 = 
	`sqlôe3BåìBegöStmt
(
pBt
, 
p
->
iSèãmít
);

3157 
p
->
nStmtDefC⁄s
 = 
db
->
nDe„ºedC⁄s
;

3158 
p
->
nStmtDefImmC⁄s
 = 
db
->
nDe„ºedImmC⁄s
;

3167 
	`sqlôe3BåìGëMëa
(
pBt
, 
BTREE_SCHEMA_VERSION
, (
u32
 *)&
iMëa
);

3168 
iGí
 = 
db
->
aDb
[
pOp
->
p1
].
pSchema
->
iGíî©i⁄
;

3170 
iGí
 = 
iMëa
 = 0;

3172 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->
p4ty≥
==
P4_INT32
 );

3173 if–
pOp
->
p5
 && (
iMëa
!ıOp->
p3
 || 
iGí
!ıOp->
p4
.
i
) ){

3174 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

3175 
p
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, "database schema has changed");

3189 if–
db
->
aDb
[
pOp
->
p1
].
pSchema
->
schema_cookõ
!=
iMëa
 ){

3190 
	`sqlôe3Re£tO√Schema
(
db
, 
pOp
->
p1
);

3192 
p
->
expúed
 = 1;

3193 
rc
 = 
SQLITE_SCHEMA
;

3195 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3211 
OP_RódCookõ
: {

3212 
iMëa
;

3213 
iDb
;

3214 
iCookõ
;

3216 
	`as£π
–
p
->
bIsRódî
 );

3217 
iDb
 = 
pOp
->
p1
;

3218 
iCookõ
 = 
pOp
->
p3
;

3219 
	`as£π
–
pOp
->
p3
<
SQLITE_N_BTREE_META
 );

3220 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

3221 
	`as£π
–
db
->
aDb
[
iDb
].
pBt
!=0 );

3222 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

3224 
	`sqlôe3BåìGëMëa
(
db
->
aDb
[
iDb
].
pBt
, 
iCookõ
, (
u32
 *)&
iMëa
);

3225 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

3226 
pOut
->
u
.
i
 = 
iMëa
;

3240 
OP_SëCookõ
: {

3241 
Db
 *
pDb
;

3242 
	`as£π
–
pOp
->
p2
<
SQLITE_N_BTREE_META
 );

3243 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

3244 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

3245 
	`as£π
–
p
->
ªadO∆y
==0 );

3246 
pDb
 = &
db
->
aDb
[
pOp
->
p1
];

3247 
	`as£π
–
pDb
->
pBt
!=0 );

3248 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
pOp
->
p1
, 0) );

3250 
rc
 = 
	`sqlôe3BåìUpd©eMëa
(
pDb
->
pBt
, 
pOp
->
p2
,ÖOp->
p3
);

3251 if–
pOp
->
p2
==
BTREE_SCHEMA_VERSION
 ){

3253 
pDb
->
pSchema
->
schema_cookõ
 = 
pOp
->
p3
;

3254 
db
->
Êags
 |
SQLITE_I¡înCh™ges
;

3255 }if–
pOp
->
p2
==
BTREE_FILE_FORMAT
 ){

3257 
pDb
->
pSchema
->
fûe_f‹m©
 = 
pOp
->
p3
;

3259 if–
pOp
->
p1
==1 ){

3262 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

3263 
p
->
expúed
 = 0;

3265 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3334 
OP_Re›íIdx
: {

3335 
nFõld
;

3336 
KeyInfo
 *
pKeyInfo
;

3337 
p2
;

3338 
iDb
;

3339 
wrFœg
;

3340 
Båì
 *
pX
;

3341 
VdbeCurs‹
 *
pCur
;

3342 
Db
 *
pDb
;

3344 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->p5==
OPFLAG_SEEKEQ
 );

3345 
	`as£π
–
pOp
->
p4ty≥
==
P4_KEYINFO
 );

3346 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

3347 if–
pCur
 &&ÖCur->
pgnoRoŸ
==(
u32
)
pOp
->
p2
 ){

3348 
	`as£π
–
pCur
->
iDb
==
pOp
->
p3
 );

3349 
›í_curs‹_£t_höts
;

3353 
OP_O≥nRód
:

3354 
OP_O≥nWrôe
:

3356 
	`as£π
–
pOp
->
›code
==
OP_O≥nWrôe
 ||ÖOp->
p5
==0 ||ÖOp->p5==
OPFLAG_SEEKEQ
 );

3357 
	`as£π
–
p
->
bIsRódî
 );

3358 
	`as£π
–
pOp
->
›code
==
OP_O≥nRód
 ||ÖOp->›code==
OP_Re›íIdx


3359 || 
p
->
ªadO∆y
==0 );

3361 if–
p
->
expúed
 ){

3362 
rc
 = 
SQLITE_ABORT_ROLLBACK
;

3363 
ab‹t_due_to_îr‹
;

3366 
nFõld
 = 0;

3367 
pKeyInfo
 = 0;

3368 
p2
 = 
pOp
->p2;

3369 
iDb
 = 
pOp
->
p3
;

3370 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

3371 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

3372 
pDb
 = &
db
->
aDb
[
iDb
];

3373 
pX
 = 
pDb
->
pBt
;

3374 
	`as£π
–
pX
!=0 );

3375 if–
pOp
->
›code
==
OP_O≥nWrôe
 ){

3376 
	`as£π
–
OPFLAG_FORDELETE
==
BTREE_FORDELETE
 );

3377 
wrFœg
 = 
BTREE_WRCSR
 | (
pOp
->
p5
 & 
OPFLAG_FORDELETE
);

3378 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 
iDb
, 0) );

3379 if–
pDb
->
pSchema
->
fûe_f‹m©
 < 
p
->
möWrôeFûeF‹m©
 ){

3380 
p
->
möWrôeFûeF‹m©
 = 
pDb
->
pSchema
->
fûe_f‹m©
;

3383 
wrFœg
 = 0;

3385 if–
pOp
->
p5
 & 
OPFLAG_P2ISREG
 ){

3386 
	`as£π
–
p2
>0 );

3387 
	`as£π
–
p2
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

3388 
pIn2
 = &
aMem
[
p2
];

3389 
	`as£π
–
	`memIsVÆid
(
pIn2
) );

3390 
	`as£π
–(
pIn2
->
Êags
 & 
MEM_I¡
)!=0 );

3391 
	`sqlôe3VdbeMemI¡egîify
(
pIn2
);

3392 
p2
 = ()
pIn2
->
u
.
i
;

3397 
	`as£π
–
p2
>=2 );

3399 if–
pOp
->
p4ty≥
==
P4_KEYINFO
 ){

3400 
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

3401 
	`as£π
–
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3402 
	`as£π
–
pKeyInfo
->
db
==db );

3403 
nFõld
 = 
pKeyInfo
->nFõld+pKeyInfo->
nXFõld
;

3404 }if–
pOp
->
p4ty≥
==
P4_INT32
 ){

3405 
nFõld
 = 
pOp
->
p4
.
i
;

3407 
	`as£π
–
pOp
->
p1
>=0 );

3408 
	`as£π
–
nFõld
>=0 );

3409 
	`ã°ˇ£
–
nFõld
==0 );

3410 
pCur
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
, 
nFõld
, 
iDb
, 
CURTYPE_BTREE
);

3411 if–
pCur
==0 ) 
no_mem
;

3412 
pCur
->
nuŒRow
 = 1;

3413 
pCur
->
isOrdîed
 = 1;

3414 
pCur
->
pgnoRoŸ
 = 
p2
;

3415 #ifde‡
SQLITE_DEBUG


3416 
pCur
->
wrFœg
 = wrFlag;

3418 
rc
 = 
	`sqlôe3BåìCurs‹
(
pX
, 
p2
, 
wrFœg
, 
pKeyInfo
, 
pCur
->
uc
.
pCurs‹
);

3419 
pCur
->
pKeyInfo
 =ÖKeyInfo;

3424 
pCur
->
isTabÀ
 = 
pOp
->
p4ty≥
!=
P4_KEYINFO
;

3426 
›í_curs‹_£t_höts
:

3427 
	`as£π
–
OPFLAG_BULKCSR
==
BTREE_BULKLOAD
 );

3428 
	`as£π
–
OPFLAG_SEEKEQ
==
BTREE_SEEK_EQ
 );

3429 
	`ã°ˇ£
–
pOp
->
p5
 & 
OPFLAG_BULKCSR
 );

3430 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


3431 
	`ã°ˇ£
–
pOp
->
p2
 & 
OPFLAG_SEEKEQ
 );

3433 
	`sqlôe3BåìCurs‹HötFœgs
(
pCur
->
uc
.
pCurs‹
,

3434 (
pOp
->
p5
 & (
OPFLAG_BULKCSR
|
OPFLAG_SEEKEQ
)));

3435 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3465 
OP_O≥nAutoödex
:

3466 
OP_O≥nEphemîÆ
: {

3467 
VdbeCurs‹
 *
pCx
;

3468 
KeyInfo
 *
pKeyInfo
;

3470 c⁄° 
vfsFœgs
 =

3471 
SQLITE_OPEN_READWRITE
 |

3472 
SQLITE_OPEN_CREATE
 |

3473 
SQLITE_OPEN_EXCLUSIVE
 |

3474 
SQLITE_OPEN_DELETEONCLOSE
 |

3475 
SQLITE_OPEN_TRANSIENT_DB
;

3476 
	`as£π
–
pOp
->
p1
>=0 );

3477 
	`as£π
–
pOp
->
p2
>=0 );

3478 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p2
, -1, 
CURTYPE_BTREE
);

3479 if–
pCx
==0 ) 
no_mem
;

3480 
pCx
->
nuŒRow
 = 1;

3481 
pCx
->
isEphemîÆ
 = 1;

3482 
rc
 = 
	`sqlôe3BåìO≥n
(
db
->
pVfs
, 0, db, &
pCx
->
pBt
,

3483 
BTREE_OMIT_JOURNAL
 | 
BTREE_SINGLE
 | 
pOp
->
p5
, 
vfsFœgs
);

3484 if–
rc
==
SQLITE_OK
 ){

3485 
rc
 = 
	`sqlôe3BåìBegöTøns
(
pCx
->
pBt
, 1);

3487 if–
rc
==
SQLITE_OK
 ){

3493 if–(
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo)!=0 ){

3494 
pgno
;

3495 
	`as£π
–
pOp
->
p4ty≥
==
P4_KEYINFO
 );

3496 
rc
 = 
	`sqlôe3BåìCª©eTabÀ
(
pCx
->
pBt
, &
pgno
, 
BTREE_BLOBKEY
 | 
pOp
->
p5
);

3497 if–
rc
==
SQLITE_OK
 ){

3498 
	`as£π
–
pgno
==
MASTER_ROOT
+1 );

3499 
	`as£π
–
pKeyInfo
->
db
==db );

3500 
	`as£π
–
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3501 
pCx
->
pKeyInfo
 =ÖKeyInfo;

3502 
rc
 = 
	`sqlôe3BåìCurs‹
(
pCx
->
pBt
, 
pgno
, 
BTREE_WRCSR
,

3503 
pKeyInfo
, 
pCx
->
uc
.
pCurs‹
);

3505 
pCx
->
isTabÀ
 = 0;

3507 
rc
 = 
	`sqlôe3BåìCurs‹
(
pCx
->
pBt
, 
MASTER_ROOT
, 
BTREE_WRCSR
,

3508 0, 
pCx
->
uc
.
pCurs‹
);

3509 
pCx
->
isTabÀ
 = 1;

3512 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3513 
pCx
->
isOrdîed
 = (
pOp
->
p5
!=
BTREE_UNORDERED
);

3527 
OP_S‹ãrO≥n
: {

3528 
VdbeCurs‹
 *
pCx
;

3530 
	`as£π
–
pOp
->
p1
>=0 );

3531 
	`as£π
–
pOp
->
p2
>=0 );

3532 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p2
, -1, 
CURTYPE_SORTER
);

3533 if–
pCx
==0 ) 
no_mem
;

3534 
pCx
->
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

3535 
	`as£π
–
pCx
->
pKeyInfo
->
db
==db );

3536 
	`as£π
–
pCx
->
pKeyInfo
->
íc
==
	`ENC
(
db
) );

3537 
rc
 = 
	`sqlôe3VdbeS‹ãrInô
(
db
, 
pOp
->
p3
, 
pCx
);

3538 if–
rc
 ) 
ab‹t_due_to_îr‹
;

3549 
OP_Sequí˚Te°
: {

3550 
VdbeCurs‹
 *
pC
;

3551 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3552 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3553 
	`as£π
–
	`isS‹ãr
(
pC
) );

3554 if–(
pC
->
£qCou¡
++)==0 ){

3555 
jump_to_p2
;

3576 
OP_O≥nP£udo
: {

3577 
VdbeCurs‹
 *
pCx
;

3579 
	`as£π
–
pOp
->
p1
>=0 );

3580 
	`as£π
–
pOp
->
p3
>=0 );

3581 
pCx
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
,ÖOp->
p3
, -1, 
CURTYPE_PSEUDO
);

3582 if–
pCx
==0 ) 
no_mem
;

3583 
pCx
->
nuŒRow
 = 1;

3584 
pCx
->
uc
.
p£udoTabÀReg
 = 
pOp
->
p2
;

3585 
pCx
->
isTabÀ
 = 1;

3586 
	`as£π
–
pOp
->
p5
==0 );

3595 
OP_Clo£
: {

3596 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3597 
	`sqlôe3VdbeFªeCurs‹
(
p
,Ö->
≠C§
[
pOp
->
p1
]);

3598 
p
->
≠C§
[
pOp
->
p1
] = 0;

3602 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


3613 
OP_CﬁumnsU£d
: {

3614 
VdbeCurs‹
 *
pC
;

3615 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3616 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

3617 
pC
->
maskU£d
 = *(
u64
*)
pOp
->
p4
.
pI64
;

3708 
OP_SìkLT
:

3709 
OP_SìkLE
:

3710 
OP_SìkGE
:

3711 
OP_SìkGT
: {

3712 
ªs
;

3713 
oc
;

3714 
VdbeCurs‹
 *
pC
;

3715 
U≈ackedRec‹d
 
r
;

3716 
nFõld
;

3717 
i64
 
iKey
;

3718 
eqO∆y
;

3720 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3721 
	`as£π
–
pOp
->
p2
!=0 );

3722 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3723 
	`as£π
–
pC
!=0 );

3724 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

3725 
	`as£π
–
OP_SìkLE
 =
OP_SìkLT
+1 );

3726 
	`as£π
–
OP_SìkGE
 =
OP_SìkLT
+2 );

3727 
	`as£π
–
OP_SìkGT
 =
OP_SìkLT
+3 );

3728 
	`as£π
–
pC
->
isOrdîed
 );

3729 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

3730 
oc
 = 
pOp
->
›code
;

3731 
eqO∆y
 = 0;

3732 
pC
->
nuŒRow
 = 0;

3733 #ifde‡
SQLITE_DEBUG


3734 
pC
->
£ekOp
 = 
pOp
->
›code
;

3737 if–
pC
->
isTabÀ
 ){

3739 
	`as£π
–
	`sqlôe3BåìCurs‹HasHöt
(
pC
->
uc
.
pCurs‹
, 
BTREE_SEEK_EQ
)==0 );

3744 
pIn3
 = &
aMem
[
pOp
->
p3
];

3745 if–(
pIn3
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_Så
))==MEM_Str ){

3746 
	`≠∂yNumîicAfföôy
(
pIn3
, 0);

3748 
iKey
 = 
	`sqlôe3VdbeI¡VÆue
(
pIn3
);

3752 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ){

3753 if–(
pIn3
->
Êags
 & 
MEM_Ról
)==0 ){

3756 
	`VdbeBønchTakí
(1,2); 
jump_to_p2
;

3767 if–
pIn3
->
u
.
r
<()
iKey
 ){

3768 
	`as£π
–
OP_SìkGE
==(
OP_SìkGT
-1) );

3769 
	`as£π
–
OP_SìkLT
==(
OP_SìkLE
-1) );

3770 
	`as£π
–(
OP_SìkLE
 & 0x0001)==(
OP_SìkGT
 & 0x0001) );

3771 if–(
oc
 & 0x0001)==(
OP_SìkGT
 & 0x0001) ) oc--;

3776 if–
pIn3
->
u
.
r
>()
iKey
 ){

3777 
	`as£π
–
OP_SìkLE
==(
OP_SìkLT
+1) );

3778 
	`as£π
–
OP_SìkGT
==(
OP_SìkGE
+1) );

3779 
	`as£π
–(
OP_SìkLT
 & 0x0001)==(
OP_SìkGE
 & 0x0001) );

3780 if–(
oc
 & 0x0001)==(
OP_SìkLT
 & 0x0001) ) oc++;

3783 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 0, (
u64
)
iKey
, 0, &
ªs
);

3784 
pC
->
movëoT¨gë
 = 
iKey
;

3785 if–
rc
!=
SQLITE_OK
 ){

3786 
ab‹t_due_to_îr‹
;

3793 if–
	`sqlôe3BåìCurs‹HasHöt
(
pC
->
uc
.
pCurs‹
, 
BTREE_SEEK_EQ
) ){

3794 
eqO∆y
 = 1;

3795 
	`as£π
–
pOp
->
›code
==
OP_SìkGE
 ||ÖOp->›code==
OP_SìkLE
 );

3796 
	`as£π
–
pOp
[1].
›code
==
OP_IdxLT
 ||ÖOp[1].›code==
OP_IdxGT
 );

3797 
	`as£π
–
pOp
[1].
p1
==pOp[0].p1 );

3798 
	`as£π
–
pOp
[1].
p2
==pOp[0].p2 );

3799 
	`as£π
–
pOp
[1].
p3
==pOp[0].p3 );

3800 
	`as£π
–
pOp
[1].
p4
.
i
==pOp[0].p4.i );

3803 
nFõld
 = 
pOp
->
p4
.
i
;

3804 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

3805 
	`as£π
–
nFõld
>0 );

3806 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

3807 
r
.
nFõld
 = (
u16
)nField;

3816 
r
.
deÁu…_rc
 = ((1 & (
oc
 - 
OP_SìkLT
)) ? -1 : +1);

3817 
	`as£π
–
oc
!=
OP_SìkGT
 || 
r
.
deÁu…_rc
==-1 );

3818 
	`as£π
–
oc
!=
OP_SìkLE
 || 
r
.
deÁu…_rc
==-1 );

3819 
	`as£π
–
oc
!=
OP_SìkGE
 || 
r
.
deÁu…_rc
==+1 );

3820 
	`as£π
–
oc
!=
OP_SìkLT
 || 
r
.
deÁu…_rc
==+1 );

3822 
r
.
aMem
 = &aMem[
pOp
->
p3
];

3823 #ifde‡
SQLITE_DEBUG


3824 { 
i
; i=0; i<
r
.
nFõld
; i++Ë
	`as£π
–
	`memIsVÆid
(&r.
aMem
[i]) ); }

3826 
	`Ex∑ndBlob
(
r
.
aMem
);

3827 
r
.
eqSìn
 = 0;

3828 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, &
r
, 0, 0, &
ªs
);

3829 if–
rc
!=
SQLITE_OK
 ){

3830 
ab‹t_due_to_îr‹
;

3832 if–
eqO∆y
 && 
r
.
eqSìn
==0 ){

3833 
	`as£π
–
ªs
!=0 );

3834 
£ek_nŸ_found
;

3837 
pC
->
de„ºedMovëo
 = 0;

3838 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

3839 #ifde‡
SQLITE_TEST


3840 
sqlôe3_£¨ch_cou¡
++;

3842 if–
oc
>=
OP_SìkGE
 ){ 
	`as£π
–oc==OP_SìkGE || oc==
OP_SìkGT
 );

3843 if–
ªs
<0 || (ªs==0 && 
oc
==
OP_SìkGT
) ){

3844 
ªs
 = 0;

3845 
rc
 = 
	`sqlôe3BåìNext
(
pC
->
uc
.
pCurs‹
, &
ªs
);

3846 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3848 
ªs
 = 0;

3851 
	`as£π
–
oc
==
OP_SìkLT
 || oc==
OP_SìkLE
 );

3852 if–
ªs
>0 || (ªs==0 && 
oc
==
OP_SìkLT
) ){

3853 
ªs
 = 0;

3854 
rc
 = 
	`sqlôe3BåìPªvious
(
pC
->
uc
.
pCurs‹
, &
ªs
);

3855 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

3860 
ªs
 = 
	`sqlôe3BåìEof
(
pC
->
uc
.
pCurs‹
);

3863 
£ek_nŸ_found
:

3864 
	`as£π
–
pOp
->
p2
>0 );

3865 
	`VdbeBønchTakí
(
ªs
!=0,2);

3866 if–
ªs
 ){

3867 
jump_to_p2
;

3868 }if–
eqO∆y
 ){

3869 
	`as£π
–
pOp
[1].
›code
==
OP_IdxLT
 ||ÖOp[1].›code==
OP_IdxGT
 );

3870 
pOp
++;

3935 
OP_NoC⁄Êi˘
:

3936 
OP_NŸFound
:

3937 
OP_Found
: {

3938 
ÆªadyExi°s
;

3939 
èkeJump
;

3940 
ii
;

3941 
VdbeCurs‹
 *
pC
;

3942 
ªs
;

3943 *
pFªe
;

3944 
U≈ackedRec‹d
 *
pIdxKey
;

3945 
U≈ackedRec‹d
 
r
;

3946 
aTempRec
[
	`ROUND8
((
U≈ackedRec‹d
)Ë+ (
Mem
)*4 + 7];

3948 #ifde‡
SQLITE_TEST


3949 if–
pOp
->
›code
!=
OP_NoC⁄Êi˘
 ) 
sqlôe3_found_cou¡
++;

3952 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

3953 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

3954 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

3955 
	`as£π
–
pC
!=0 );

3956 #ifde‡
SQLITE_DEBUG


3957 
pC
->
£ekOp
 = 
pOp
->
›code
;

3959 
pIn3
 = &
aMem
[
pOp
->
p3
];

3960 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

3961 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

3962 
	`as£π
–
pC
->
isTabÀ
==0 );

3963 
pFªe
 = 0;

3964 if–
pOp
->
p4
.
i
>0 ){

3965 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

3966 
r
.
nFõld
 = (
u16
)
pOp
->
p4
.
i
;

3967 
r
.
aMem
 = 
pIn3
;

3968 
ii
=0; ii<
r
.
nFõld
; ii++){

3969 
	`as£π
–
	`memIsVÆid
(&
r
.
aMem
[
ii
]) );

3970 
	`Ex∑ndBlob
(&
r
.
aMem
[
ii
]);

3971 #ifde‡
SQLITE_DEBUG


3972 if–
ii
 ) 
	`REGISTER_TRACE
(
pOp
->
p3
+ii, &
r
.
aMem
[ii]);

3975 
pIdxKey
 = &
r
;

3977 
pIdxKey
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(

3978 
pC
->
pKeyInfo
, 
aTempRec
, ◊TempRec), &
pFªe


3980 if–
pIdxKey
==0 ) 
no_mem
;

3981 
	`as£π
–
pIn3
->
Êags
 & 
MEM_Blob
 );

3982 
	`Ex∑ndBlob
(
pIn3
);

3983 
	`sqlôe3VdbeRec‹dU≈ack
(
pC
->
pKeyInfo
, 
pIn3
->
n
,ÖIn3->
z
, 
pIdxKey
);

3985 
pIdxKey
->
deÁu…_rc
 = 0;

3986 
èkeJump
 = 0;

3987 if–
pOp
->
›code
==
OP_NoC⁄Êi˘
 ){

3991 
ii
=0; ii<
pIdxKey
->
nFõld
; ii++){

3992 if–
pIdxKey
->
aMem
[
ii
].
Êags
 & 
MEM_NuŒ
 ){

3993 
èkeJump
 = 1;

3998 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 
pIdxKey
, 0, 0, &
ªs
);

3999 
	`sqlôe3DbFªe
(
db
, 
pFªe
);

4000 if–
rc
!=
SQLITE_OK
 ){

4001 
ab‹t_due_to_îr‹
;

4003 
pC
->
£ekResu…
 = 
ªs
;

4004 
ÆªadyExi°s
 = (
ªs
==0);

4005 
pC
->
nuŒRow
 = 1-
ÆªadyExi°s
;

4006 
pC
->
de„ºedMovëo
 = 0;

4007 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4008 if–
pOp
->
›code
==
OP_Found
 ){

4009 
	`VdbeBønchTakí
(
ÆªadyExi°s
!=0,2);

4010 if–
ÆªadyExi°s
 ) 
jump_to_p2
;

4012 
	`VdbeBønchTakí
(
èkeJump
||
ÆªadyExi°s
==0,2);

4013 if–
èkeJump
 || !
ÆªadyExi°s
 ) 
jump_to_p2
;

4065 
OP_SìkRowid
: {

4066 
VdbeCurs‹
 *
pC
;

4067 
BtCurs‹
 *
pCr§
;

4068 
ªs
;

4069 
u64
 
iKey
;

4071 
pIn3
 = &
aMem
[
pOp
->
p3
];

4072 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ){

4073 
	`≠∂yAfföôy
(
pIn3
, 
SQLITE_AFF_NUMERIC
, 
ícodög
);

4074 if–(
pIn3
->
Êags
 & 
MEM_I¡
)==0 ) 
jump_to_p2
;

4077 
OP_NŸExi°s
:

4078 
pIn3
 = &
aMem
[
pOp
->
p3
];

4079 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

4080 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4081 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4082 
	`as£π
–
pC
!=0 );

4083 #ifde‡
SQLITE_DEBUG


4084 
pC
->
£ekOp
 = 0;

4086 
	`as£π
–
pC
->
isTabÀ
 );

4087 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4088 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4089 
	`as£π
–
pCr§
!=0 );

4090 
ªs
 = 0;

4091 
iKey
 = 
pIn3
->
u
.
i
;

4092 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCr§
, 0, 
iKey
, 0, &
ªs
);

4093 
	`as£π
–
rc
==
SQLITE_OK
 || 
ªs
==0 );

4094 
pC
->
movëoT¨gë
 = 
iKey
;

4095 
pC
->
nuŒRow
 = 0;

4096 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4097 
pC
->
de„ºedMovëo
 = 0;

4098 
	`VdbeBønchTakí
(
ªs
!=0,2);

4099 
pC
->
£ekResu…
 = 
ªs
;

4100 if–
ªs
!=0 ){

4101 
	`as£π
–
rc
==
SQLITE_OK
 );

4102 if–
pOp
->
p2
==0 ){

4103 
rc
 = 
SQLITE_CORRUPT_BKPT
;

4105 
jump_to_p2
;

4108 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4120 
OP_Sequí˚
: {

4121 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4122 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]!=0 );

4123 
	`as£π
–
p
->
≠C§
[
pOp
->
p1
]->
eCurTy≥
!=
CURTYPE_VTAB
 );

4124 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4125 
pOut
->
u
.
i
 = 
p
->
≠C§
[
pOp
->
p1
]->
£qCou¡
++;

4145 
OP_NewRowid
: {

4146 
i64
 
v
;

4147 
VdbeCurs‹
 *
pC
;

4148 
ªs
;

4149 
˙t
;

4150 
Mem
 *
pMem
;

4151 
VdbeFøme
 *
pFøme
;

4153 
v
 = 0;

4154 
ªs
 = 0;

4155 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4156 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4157 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4158 
	`as£π
–
pC
!=0 );

4159 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4160 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4175 
	`as£π
–
pC
->
isTabÀ
 );

4177 #ifde‡
SQLITE_32BIT_ROWID


4178 
	#MAX_ROWID
 0x7fffffff

	)

4184 
	#MAX_ROWID
 (
i64
)–(((
u64
)0x7fffffff)<<32Ë| (u64)0xfffffff‡)

	)

4187 if–!
pC
->
u£R™domRowid
 ){

4188 
rc
 = 
	`sqlôe3BåìLa°
(
pC
->
uc
.
pCurs‹
, &
ªs
);

4189 if–
rc
!=
SQLITE_OK
 ){

4190 
ab‹t_due_to_îr‹
;

4192 if–
ªs
 ){

4193 
v
 = 1;

4195 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pC
->
uc
.
pCurs‹
) );

4196 
v
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4197 if–
v
>=
MAX_ROWID
 ){

4198 
pC
->
u£R™domRowid
 = 1;

4200 
v
++;

4205 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


4206 if–
pOp
->
p3
 ){

4208 
	`as£π
–
pOp
->
p3
>0 );

4209 if–
p
->
pFøme
 ){

4210 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

4212 
	`as£π
–
pOp
->
p3
<=
pFøme
->
nMem
 );

4213 
pMem
 = &
pFøme
->
aMem
[
pOp
->
p3
];

4216 
	`as£π
–
pOp
->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

4217 
pMem
 = &
aMem
[
pOp
->
p3
];

4218 
	`memAboutToCh™ge
(
p
, 
pMem
);

4220 
	`as£π
–
	`memIsVÆid
(
pMem
) );

4222 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pMem
);

4223 
	`sqlôe3VdbeMemI¡egîify
(
pMem
);

4224 
	`as£π
–(
pMem
->
Êags
 & 
MEM_I¡
)!=0 );

4225 if–
pMem
->
u
.
i
==
MAX_ROWID
 || 
pC
->
u£R™domRowid
 ){

4226 
rc
 = 
SQLITE_FULL
;

4227 
ab‹t_due_to_îr‹
;

4229 if–
v
<
pMem
->
u
.
i
+1 ){

4230 
v
 = 
pMem
->
u
.
i
 + 1;

4232 
pMem
->
u
.
i
 = 
v
;

4235 if–
pC
->
u£R™domRowid
 ){

4240 
	`as£π
–
pOp
->
p3
==0 );

4242 
˙t
 = 0;

4244 
	`sqlôe3_øndom√ss
((
v
), &v);

4245 
v
 &(
MAX_ROWID
>>1); v++;

4246 } ((
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pC
->
uc
.
pCurs‹
, 0, (
u64
)
v
,

4247 0, &
ªs
))==
SQLITE_OK
)

4248 && (
ªs
==0)

4249 && (++
˙t
<100));

4250 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4251 if–
ªs
==0 ){

4252 
rc
 = 
SQLITE_FULL
;

4253 
ab‹t_due_to_îr‹
;

4255 
	`as£π
–
v
>0 );

4257 
pC
->
de„ºedMovëo
 = 0;

4258 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4260 
pOut
->
u
.
i
 = 
v
;

4312 
OP_In£π
:

4313 
OP_In£πI¡
: {

4314 
Mem
 *
pD©a
;

4315 
Mem
 *
pKey
;

4316 
VdbeCurs‹
 *
pC
;

4317 
£ekResu…
;

4318 c⁄° *
zDb
;

4319 
TabÀ
 *
pTab
;

4320 
›
;

4321 
BåìPaylﬂd
 
x
;

4323 
›
 = 0;

4324 
pD©a
 = &
aMem
[
pOp
->
p2
];

4325 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4326 
	`as£π
–
	`memIsVÆid
(
pD©a
) );

4327 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4328 
	`as£π
–
pC
!=0 );

4329 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4330 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4331 
	`as£π
–
pC
->
isTabÀ
 );

4332 
	`as£π
–
pOp
->
p4ty≥
==
P4_TABLE
 ||ÖOp->p4ty≥>=
P4_STATIC
 );

4333 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pD©a
);

4335 if–
pOp
->
›code
==
OP_In£π
 ){

4336 
pKey
 = &
aMem
[
pOp
->
p3
];

4337 
	`as£π
–
pKey
->
Êags
 & 
MEM_I¡
 );

4338 
	`as£π
–
	`memIsVÆid
(
pKey
) );

4339 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pKey
);

4340 
x
.
nKey
 = 
pKey
->
u
.
i
;

4342 
	`as£π
–
pOp
->
›code
==
OP_In£πI¡
 );

4343 
x
.
nKey
 = 
pOp
->
p3
;

4346 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HAS_UPDATE_HOOK
(
db
) ){

4347 
	`as£π
–
pC
->
isTabÀ
 );

4348 
	`as£π
–
pC
->
iDb
>=0 );

4349 
zDb
 = 
db
->
aDb
[
pC
->
iDb
].
zName
;

4350 
pTab
 = 
pOp
->
p4
.pTab;

4351 
	`as£π
–
	`HasRowid
(
pTab
) );

4352 
›
 = ((
pOp
->
p5
 & 
OPFLAG_ISUPDATE
Ë? 
SQLITE_UPDATE
 : 
SQLITE_INSERT
);

4354 
pTab
 = 0;

4355 
zDb
 = 0;

4358 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4360 if–
db
->
xPªUpd©eCÆlback


4361 && 
pOp
->
p4ty≥
==
P4_TABLE


4362 && !(
pOp
->
p5
 & 
OPFLAG_ISUPDATE
)

4364 
	`sqlôe3VdbePªUpd©eHook
(
p
, 
pC
, 
SQLITE_INSERT
, 
zDb
, 
pTab
, 
x
.
nKey
, 
pOp
->
p2
);

4368 if–
pOp
->
p5
 & 
OPFLAG_NCHANGE
 ) 
p
->
nCh™ge
++;

4369 if–
pOp
->
p5
 & 
OPFLAG_LASTROWID
 ) 
db
->
œ°Rowid
 =Üa°Rowid = 
x
.
nKey
;

4370 if–
pD©a
->
Êags
 & 
MEM_NuŒ
 ){

4371 
x
.
pD©a
 = 0;

4372 
x
.
nD©a
 = 0;

4374 
	`as£π
–
pD©a
->
Êags
 & (
MEM_Blob
|
MEM_Så
) );

4375 
x
.
pD©a
 =ÖD©a->
z
;

4376 
x
.
nD©a
 = 
pD©a
->
n
;

4378 
£ekResu…
 = ((
pOp
->
p5
 & 
OPFLAG_USESEEKRESULT
Ë? 
pC
->seekResult : 0);

4379 if–
pD©a
->
Êags
 & 
MEM_Zîo
 ){

4380 
x
.
nZîo
 = 
pD©a
->
u
.nZero;

4382 
x
.
nZîo
 = 0;

4384 
x
.
pKey
 = 0;

4385 
rc
 = 
	`sqlôe3BåìIn£π
(
pC
->
uc
.
pCurs‹
, &
x
,

4386 (
pOp
->
p5
 & 
OPFLAG_APPEND
)!=0, 
£ekResu…


4388 
pC
->
de„ºedMovëo
 = 0;

4389 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4392 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4393 if–
db
->
xUpd©eCÆlback
 && 
›
 ){

4394 
db
->
	`xUpd©eCÆlback
(db->
pUpd©eArg
, 
›
, 
zDb
, 
pTab
->
zName
, 
x
.
nKey
);

4434 
OP_Dñëe
: {

4435 
VdbeCurs‹
 *
pC
;

4436 c⁄° *
zDb
;

4437 
TabÀ
 *
pTab
;

4438 
›Êags
;

4440 
›Êags
 = 
pOp
->
p2
;

4441 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4442 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4443 
	`as£π
–
pC
!=0 );

4444 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4445 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4446 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4448 #ifde‡
SQLITE_DEBUG


4449 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HasRowid
’Op->
p4
.
pTab
Ë&&ÖOp->
p5
==0 ){

4453 
i64
 
iKey
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4454 
	`as£π
–
pC
->
movëoT¨gë
==
iKey
 );

4463 if–
pOp
->
p4ty≥
==
P4_TABLE
 && 
	`HAS_UPDATE_HOOK
(
db
) ){

4464 
	`as£π
–
pC
->
iDb
>=0 );

4465 
	`as£π
–
pOp
->
p4
.
pTab
!=0 );

4466 
zDb
 = 
db
->
aDb
[
pC
->
iDb
].
zName
;

4467 
pTab
 = 
pOp
->
p4
.pTab;

4468 if–(
pOp
->
p5
 & 
OPFLAG_SAVEPOSITION
)!=0 && 
pC
->
isTabÀ
 ){

4469 
pC
->
movëoT¨gë
 = 
	`sqlôe3BåìI¡egîKey
’C->
uc
.
pCurs‹
);

4472 
zDb
 = 0;

4473 
pTab
 = 0;

4476 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4478 if–
db
->
xPªUpd©eCÆlback
 && 
pOp
->
p4
.
pTab
 && 
	`HasRowid
(pTab) ){

4479 
	`as£π
–!(
›Êags
 & 
OPFLAG_ISUPDATE
Ë|| (
aMem
[
pOp
->
p3
].
Êags
 & 
MEM_I¡
) );

4480 
	`sqlôe3VdbePªUpd©eHook
(
p
, 
pC
,

4481 (
›Êags
 & 
OPFLAG_ISUPDATE
Ë? 
SQLITE_UPDATE
 : 
SQLITE_DELETE
,

4482 
zDb
, 
pTab
, 
pC
->
movëoT¨gë
,

4483 
pOp
->
p3


4486 if–
›Êags
 & 
OPFLAG_ISNOOP
 ) ;

4490 
	`as£π
–(
pOp
->
p5
 & ~(
OPFLAG_SAVEPOSITION
|
OPFLAG_AUXDELETE
))==0 );

4491 
	`as£π
–
OPFLAG_SAVEPOSITION
==
BTREE_SAVEPOSITION
 );

4492 
	`as£π
–
OPFLAG_AUXDELETE
==
BTREE_AUXDELETE
 );

4494 #ifde‡
SQLITE_DEBUG


4495 if–
p
->
pFøme
==0 ){

4496 if–
pC
->
isEphemîÆ
==0

4497 && (
pOp
->
p5
 & 
OPFLAG_AUXDELETE
)==0

4498 && (
pC
->
wrFœg
 & 
OPFLAG_FORDELETE
)==0

4500 
nExåaDñëe
++;

4502 if–
pOp
->
p2
 & 
OPFLAG_NCHANGE
 ){

4503 
nExåaDñëe
--;

4508 
rc
 = 
	`sqlôe3BåìDñëe
(
pC
->
uc
.
pCurs‹
, 
pOp
->
p5
);

4509 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4510 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4513 if–
›Êags
 & 
OPFLAG_NCHANGE
 ){

4514 
p
->
nCh™ge
++;

4515 if–
db
->
xUpd©eCÆlback
 && 
	`HasRowid
(
pTab
) ){

4516 
db
->
	`xUpd©eCÆlback
(db->
pUpd©eArg
, 
SQLITE_DELETE
, 
zDb
, 
pTab
->
zName
,

4517 
pC
->
movëoT¨gë
);

4518 
	`as£π
–
pC
->
iDb
>=0 );

4531 
OP_Re£tCou¡
: {

4532 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

4533 
p
->
nCh™ge
 = 0;

4552 
OP_S‹ãrCom∑ª
: {

4553 
VdbeCurs‹
 *
pC
;

4554 
ªs
;

4555 
nKeyCﬁ
;

4557 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4558 
	`as£π
–
	`isS‹ãr
(
pC
) );

4559 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

4560 
pIn3
 = &
aMem
[
pOp
->
p3
];

4561 
nKeyCﬁ
 = 
pOp
->
p4
.
i
;

4562 
ªs
 = 0;

4563 
rc
 = 
	`sqlôe3VdbeS‹ãrCom∑ª
(
pC
, 
pIn3
, 
nKeyCﬁ
, &
ªs
);

4564 
	`VdbeBønchTakí
(
ªs
!=0,2);

4565 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4566 if–
ªs
 ) 
jump_to_p2
;

4582 
OP_S‹ãrD©a
: {

4583 
VdbeCurs‹
 *
pC
;

4585 
pOut
 = &
aMem
[
pOp
->
p2
];

4586 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4587 
	`as£π
–
	`isS‹ãr
(
pC
) );

4588 
rc
 = 
	`sqlôe3VdbeS‹ãrRowkey
(
pC
, 
pOut
);

4589 
	`as£π
–
rc
!=
SQLITE_OK
 || (
pOut
->
Êags
 & 
MEM_Blob
) );

4590 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4591 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4592 
p
->
≠C§
[
pOp
->
p3
]->
ˇcheSètus
 = 
CACHE_STALE
;

4618 
OP_RowKey
:

4619 
OP_RowD©a
: {

4620 
VdbeCurs‹
 *
pC
;

4621 
BtCurs‹
 *
pCr§
;

4622 
u32
 
n
;

4624 
pOut
 = &
aMem
[
pOp
->
p2
];

4625 
	`memAboutToCh™ge
(
p
, 
pOut
);

4628 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4629 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4630 
	`as£π
–
pC
!=0 );

4631 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4632 
	`as£π
–
	`isS‹ãr
(
pC
)==0 );

4633 
	`as£π
–
pC
->
isTabÀ
 || 
pOp
->
›code
!=
OP_RowD©a
 );

4634 
	`as£π
–
pC
->
isTabÀ
==0 || 
pOp
->
›code
==
OP_RowD©a
 );

4635 
	`as£π
–
pC
->
nuŒRow
==0 );

4636 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4637 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4647 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4648 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCr§
) );

4650 
rc
 = 
	`sqlôe3VdbeCurs‹Movëo
(
pC
);

4651 if–
rc
!=
SQLITE_OK
 ) 
ab‹t_due_to_îr‹
;

4654 
n
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCr§
);

4655 if–
n
>(
u32
)
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

4656 
too_big
;

4658 
	`ã°ˇ£
–
n
==0 );

4659 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, 
	`MAX
(
n
,32)) ){

4660 
no_mem
;

4662 
pOut
->
n
 =Ç;

4663 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Blob
);

4664 if–
pC
->
isTabÀ
==0 ){

4665 
rc
 = 
	`sqlôe3BåìKey
(
pCr§
, 0, 
n
, 
pOut
->
z
);

4667 
rc
 = 
	`sqlôe3BåìD©a
(
pCr§
, 0, 
n
, 
pOut
->
z
);

4669 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4670 
pOut
->
íc
 = 
SQLITE_UTF8
;

4671 
	`UPDATE_MAX_BLOBSIZE
(
pOut
);

4672 
	`REGISTER_TRACE
(
pOp
->
p2
, 
pOut
);

4686 
OP_Rowid
: {

4687 
VdbeCurs‹
 *
pC
;

4688 
i64
 
v
;

4689 
sqlôe3_vèb
 *
pVèb
;

4690 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

4692 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

4693 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4694 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4695 
	`as£π
–
pC
!=0 );

4696 
	`as£π
–
pC
->
eCurTy≥
!=
CURTYPE_PSEUDO
 ||ÖC->
nuŒRow
 );

4697 if–
pC
->
nuŒRow
 ){

4698 
pOut
->
Êags
 = 
MEM_NuŒ
;

4700 }if–
pC
->
de„ºedMovëo
 ){

4701 
v
 = 
pC
->
movëoT¨gë
;

4702 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4703 }if–
pC
->
eCurTy≥
==
CURTYPE_VTAB
 ){

4704 
	`as£π
–
pC
->
uc
.
pVCur
!=0 );

4705 
pVèb
 = 
pC
->
uc
.
pVCur
->pVtab;

4706 
pModuÀ
 = 
pVèb
->pModule;

4707 
	`as£π
–
pModuÀ
->
xRowid
 );

4708 
rc
 = 
pModuÀ
->
	`xRowid
(
pC
->
uc
.
pVCur
, &
v
);

4709 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

4710 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4713 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4714 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4715 
rc
 = 
	`sqlôe3VdbeCurs‹Re°‹e
(
pC
);

4716 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4717 if–
pC
->
nuŒRow
 ){

4718 
pOut
->
Êags
 = 
MEM_NuŒ
;

4721 
v
 = 
	`sqlôe3BåìI¡egîKey
(
pC
->
uc
.
pCurs‹
);

4723 
pOut
->
u
.
i
 = 
v
;

4733 
OP_NuŒRow
: {

4734 
VdbeCurs‹
 *
pC
;

4736 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4737 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4738 
	`as£π
–
pC
!=0 );

4739 
pC
->
nuŒRow
 = 1;

4740 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4741 if–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 ){

4742 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

4743 
	`sqlôe3BåìCÀ¨Curs‹
(
pC
->
uc
.
pCurs‹
);

4760 
OP_La°
: {

4761 
VdbeCurs‹
 *
pC
;

4762 
BtCurs‹
 *
pCr§
;

4763 
ªs
;

4765 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4766 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4767 
	`as£π
–
pC
!=0 );

4768 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4769 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4770 
ªs
 = 0;

4771 
	`as£π
–
pCr§
!=0 );

4772 
rc
 = 
	`sqlôe3BåìLa°
(
pCr§
, &
ªs
);

4773 
pC
->
nuŒRow
 = (
u8
)
ªs
;

4774 
pC
->
de„ºedMovëo
 = 0;

4775 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4776 
pC
->
£ekResu…
 = 
pOp
->
p3
;

4777 #ifde‡
SQLITE_DEBUG


4778 
pC
->
£ekOp
 = 
OP_La°
;

4780 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4781 if–
pOp
->
p2
>0 ){

4782 
	`VdbeBønchTakí
(
ªs
!=0,2);

4783 if–
ªs
 ) 
jump_to_p2
;

4801 
OP_S‹ãrS‹t
:

4802 
OP_S‹t
: {

4803 #ifde‡
SQLITE_TEST


4804 
sqlôe3_s‹t_cou¡
++;

4805 
sqlôe3_£¨ch_cou¡
--;

4807 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_SORT
]++;

4822 
OP_Rewöd
: {

4823 
VdbeCurs‹
 *
pC
;

4824 
BtCurs‹
 *
pCr§
;

4825 
ªs
;

4827 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4828 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4829 
	`as£π
–
pC
!=0 );

4830 
	`as£π
–
	`isS‹ãr
(
pC
)==(
pOp
->
›code
==
OP_S‹ãrS‹t
) );

4831 
ªs
 = 1;

4832 #ifde‡
SQLITE_DEBUG


4833 
pC
->
£ekOp
 = 
OP_Rewöd
;

4835 if–
	`isS‹ãr
(
pC
) ){

4836 
rc
 = 
	`sqlôe3VdbeS‹ãrRewöd
(
pC
, &
ªs
);

4838 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4839 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

4840 
	`as£π
–
pCr§
 );

4841 
rc
 = 
	`sqlôe3BåìFú°
(
pCr§
, &
ªs
);

4842 
pC
->
de„ºedMovëo
 = 0;

4843 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4845 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4846 
pC
->
nuŒRow
 = (
u8
)
ªs
;

4847 
	`as£π
–
pOp
->
p2
>0 &&ÖOp->p2<
p
->
nOp
 );

4848 
	`VdbeBønchTakí
(
ªs
!=0,2);

4849 if–
ªs
 ) 
jump_to_p2
;

4916 
OP_S‹ãrNext
: {

4917 
VdbeCurs‹
 *
pC
;

4918 
ªs
;

4920 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4921 
	`as£π
–
	`isS‹ãr
(
pC
) );

4922 
ªs
 = 0;

4923 
rc
 = 
	`sqlôe3VdbeS‹ãrNext
(
db
, 
pC
, &
ªs
);

4924 
√xt_èû
;

4925 
OP_PªvIfO≥n
:

4926 
OP_NextIfO≥n
:

4927 if–
p
->
≠C§
[
pOp
->
p1
]==0 ) ;

4929 
OP_Pªv
:

4930 
OP_Next
:

4931 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4932 
	`as£π
–
pOp
->
p5
<
	`AºaySize
(
p
->
aCou¡î
) );

4933 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

4934 
ªs
 = 
pOp
->
p3
;

4935 
	`as£π
–
pC
!=0 );

4936 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

4937 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4938 
	`as£π
–
ªs
==0 || (ªs==1 && 
pC
->
isTabÀ
==0) );

4939 
	`ã°ˇ£
–
ªs
==1 );

4940 
	`as£π
–
pOp
->
›code
!=
OP_Next
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìNext
 );

4941 
	`as£π
–
pOp
->
›code
!=
OP_Pªv
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìPªvious
 );

4942 
	`as£π
–
pOp
->
›code
!=
OP_NextIfO≥n
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìNext
 );

4943 
	`as£π
–
pOp
->
›code
!=
OP_PªvIfO≥n
 ||ÖOp->
p4
.
xAdv™˚
==
sqlôe3BåìPªvious
);

4947 
	`as£π
–
pOp
->
›code
!=
OP_Next
 ||ÖOp->›code!=
OP_NextIfO≥n


4948 || 
pC
->
£ekOp
==
OP_SìkGT
 ||ÖC->£ekOp==
OP_SìkGE


4949 || 
pC
->
£ekOp
==
OP_Rewöd
 ||ÖC->£ekOp==
OP_Found
);

4950 
	`as£π
–
pOp
->
›code
!=
OP_Pªv
 ||ÖOp->›code!=
OP_PªvIfO≥n


4951 || 
pC
->
£ekOp
==
OP_SìkLT
 ||ÖC->£ekOp==
OP_SìkLE


4952 || 
pC
->
£ekOp
==
OP_La°
 );

4954 
rc
 = 
pOp
->
p4
.
	`xAdv™˚
(
pC
->
uc
.
pCurs‹
, &
ªs
);

4955 
√xt_èû
:

4956 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

4957 
	`VdbeBønchTakí
(
ªs
==0,2);

4958 if–
rc
 ) 
ab‹t_due_to_îr‹
;

4959 if–
ªs
==0 ){

4960 
pC
->
nuŒRow
 = 0;

4961 
p
->
aCou¡î
[
pOp
->
p5
]++;

4962 #ifde‡
SQLITE_TEST


4963 
sqlôe3_£¨ch_cou¡
++;

4965 
jump_to_p2_™d_check_f‹_öãºu±
;

4967 
pC
->
nuŒRow
 = 1;

4969 
check_f‹_öãºu±
;

4993 
OP_S‹ãrIn£π
:

4994 
OP_IdxIn£π
: {

4995 
VdbeCurs‹
 *
pC
;

4996 
BåìPaylﬂd
 
x
;

4998 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

4999 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5000 
	`as£π
–
pC
!=0 );

5001 
	`as£π
–
	`isS‹ãr
(
pC
)==(
pOp
->
›code
==
OP_S‹ãrIn£π
) );

5002 
pIn2
 = &
aMem
[
pOp
->
p2
];

5003 
	`as£π
–
pIn2
->
Êags
 & 
MEM_Blob
 );

5004 if–
pOp
->
p5
 & 
OPFLAG_NCHANGE
 ) 
p
->
nCh™ge
++;

5005 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 || 
pOp
->
›code
==
OP_S‹ãrIn£π
 );

5006 
	`as£π
–
pC
->
isTabÀ
==0 );

5007 
rc
 = 
	`Ex∑ndBlob
(
pIn2
);

5008 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5009 if–
pOp
->
›code
==
OP_S‹ãrIn£π
 ){

5010 
rc
 = 
	`sqlôe3VdbeS‹ãrWrôe
(
pC
, 
pIn2
);

5012 
x
.
nKey
 = 
pIn2
->
n
;

5013 
x
.
pKey
 = 
pIn2
->
z
;

5014 
x
.
nD©a
 = 0;

5015 
x
.
nZîo
 = 0;

5016 
x
.
pD©a
 = 0;

5017 
rc
 = 
	`sqlôe3BåìIn£π
(
pC
->
uc
.
pCurs‹
, &
x
, 
pOp
->
p3
,

5018 ((
pOp
->
p5
 & 
OPFLAG_USESEEKRESULT
Ë? 
pC
->
£ekResu…
 : 0)

5020 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5021 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

5023 if–
rc
Ë
ab‹t_due_to_îr‹
;

5034 
OP_IdxDñëe
: {

5035 
VdbeCurs‹
 *
pC
;

5036 
BtCurs‹
 *
pCr§
;

5037 
ªs
;

5038 
U≈ackedRec‹d
 
r
;

5040 
	`as£π
–
pOp
->
p3
>0 );

5041 
	`as£π
–
pOp
->
p2
>0 &&ÖOp->p2+pOp->
p3
<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1 );

5042 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5043 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5044 
	`as£π
–
pC
!=0 );

5045 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5046 
pCr§
 = 
pC
->
uc
.
pCurs‹
;

5047 
	`as£π
–
pCr§
!=0 );

5048 
	`as£π
–
pOp
->
p5
==0 );

5049 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

5050 
r
.
nFõld
 = (
u16
)
pOp
->
p3
;

5051 
r
.
deÁu…_rc
 = 0;

5052 
r
.
aMem
 = &aMem[
pOp
->
p2
];

5053 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
pCr§
, &
r
, 0, 0, &
ªs
);

5054 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5055 if–
ªs
==0 ){

5056 
rc
 = 
	`sqlôe3BåìDñëe
(
pCr§
, 
BTREE_AUXDELETE
);

5057 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5059 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5060 
pC
->
ˇcheSètus
 = 
CACHE_STALE
;

5092 
OP_Sìk
:

5093 
OP_IdxRowid
: {

5094 
VdbeCurs‹
 *
pC
;

5095 
VdbeCurs‹
 *
pTabCur
;

5096 
i64
 
rowid
;

5098 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5099 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5100 
	`as£π
–
pC
!=0 );

5101 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5102 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0 );

5103 
	`as£π
–
pC
->
isTabÀ
==0 );

5104 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5105 
	`as£π
–!
pC
->
nuŒRow
 || 
pOp
->
›code
==
OP_IdxRowid
 );

5109 
rc
 = 
	`sqlôe3VdbeCurs‹Re°‹e
(
pC
);

5114 if–
	`NEVER
(
rc
!=
SQLITE_OK
ËË
ab‹t_due_to_îr‹
;

5116 if–!
pC
->
nuŒRow
 ){

5117 
rowid
 = 0;

5118 
rc
 = 
	`sqlôe3VdbeIdxRowid
(
db
, 
pC
->
uc
.
pCurs‹
, &
rowid
);

5119 if–
rc
!=
SQLITE_OK
 ){

5120 
ab‹t_due_to_îr‹
;

5122 if–
pOp
->
›code
==
OP_Sìk
 ){

5123 
	`as£π
–
pOp
->
p3
>=0 &&ÖOp->p3<
p
->
nCurs‹
 );

5124 
pTabCur
 = 
p
->
≠C§
[
pOp
->
p3
];

5125 
	`as£π
–
pTabCur
!=0 );

5126 
	`as£π
–
pTabCur
->
eCurTy≥
==
CURTYPE_BTREE
 );

5127 
	`as£π
–
pTabCur
->
uc
.
pCurs‹
!=0 );

5128 
	`as£π
–
pTabCur
->
isTabÀ
 );

5129 
pTabCur
->
nuŒRow
 = 0;

5130 
pTabCur
->
movëoT¨gë
 = 
rowid
;

5131 
pTabCur
->
de„ºedMovëo
 = 1;

5132 
	`as£π
–
pOp
->
p4ty≥
==
P4_INTARRAY
 ||ÖOp->
p4
.
ai
==0 );

5133 
pTabCur
->
aA…M≠
 = 
pOp
->
p4
.
ai
;

5134 
pTabCur
->
pA…Curs‹
 = 
pC
;

5136 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5137 
pOut
->
u
.
i
 = 
rowid
;

5138 
pOut
->
Êags
 = 
MEM_I¡
;

5141 
	`as£π
–
pOp
->
›code
==
OP_IdxRowid
 );

5142 
	`sqlôe3VdbeMemSëNuŒ
(&
aMem
[
pOp
->
p2
]);

5191 
OP_IdxLE
:

5192 
OP_IdxGT
:

5193 
OP_IdxLT
:

5194 
OP_IdxGE
: {

5195 
VdbeCurs‹
 *
pC
;

5196 
ªs
;

5197 
U≈ackedRec‹d
 
r
;

5199 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5200 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5201 
	`as£π
–
pC
!=0 );

5202 
	`as£π
–
pC
->
isOrdîed
 );

5203 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5204 
	`as£π
–
pC
->
uc
.
pCurs‹
!=0);

5205 
	`as£π
–
pC
->
de„ºedMovëo
==0 );

5206 
	`as£π
–
pOp
->
p5
==0 ||ÖOp->p5==1 );

5207 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

5208 
r
.
pKeyInfo
 = 
pC
->pKeyInfo;

5209 
r
.
nFõld
 = (
u16
)
pOp
->
p4
.
i
;

5210 if–
pOp
->
›code
<
OP_IdxLT
 ){

5211 
	`as£π
–
pOp
->
›code
==
OP_IdxLE
 ||ÖOp->›code==
OP_IdxGT
 );

5212 
r
.
deÁu…_rc
 = -1;

5214 
	`as£π
–
pOp
->
›code
==
OP_IdxGE
 ||ÖOp->›code==
OP_IdxLT
 );

5215 
r
.
deÁu…_rc
 = 0;

5217 
r
.
aMem
 = &aMem[
pOp
->
p3
];

5218 #ifde‡
SQLITE_DEBUG


5219 { 
i
; i=0; i<
r
.
nFõld
; i++Ë
	`as£π
–
	`memIsVÆid
(&r.
aMem
[i]) ); }

5221 
ªs
 = 0;

5222 
rc
 = 
	`sqlôe3VdbeIdxKeyCom∑ª
(
db
, 
pC
, &
r
, &
ªs
);

5223 
	`as£π
–(
OP_IdxLE
&1)==(
OP_IdxLT
&1Ë&& (
OP_IdxGE
&1)==(
OP_IdxGT
&1) );

5224 if–(
pOp
->
›code
&1)==(
OP_IdxLT
&1) ){

5225 
	`as£π
–
pOp
->
›code
==
OP_IdxLE
 ||ÖOp->›code==
OP_IdxLT
 );

5226 
ªs
 = -res;

5228 
	`as£π
–
pOp
->
›code
==
OP_IdxGE
 ||ÖOp->›code==
OP_IdxGT
 );

5229 
ªs
++;

5231 
	`VdbeBønchTakí
(
ªs
>0,2);

5232 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5233 if–
ªs
>0 ) 
jump_to_p2
;

5257 
OP_De°roy
: {

5258 
iMoved
;

5259 
iDb
;

5261 
	`as£π
–
p
->
ªadO∆y
==0 );

5262 
	`as£π
–
pOp
->
p1
>1 );

5263 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5264 
pOut
->
Êags
 = 
MEM_NuŒ
;

5265 if–
db
->
nVdbeRód
 > db->
nVDe°roy
+1 ){

5266 
rc
 = 
SQLITE_LOCKED
;

5267 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

5268 
ab‹t_due_to_îr‹
;

5270 
iDb
 = 
pOp
->
p3
;

5271 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
iDb
) );

5272 
iMoved
 = 0;

5273 
rc
 = 
	`sqlôe3BåìDr›TabÀ
(
db
->
aDb
[
iDb
].
pBt
, 
pOp
->
p1
, &
iMoved
);

5274 
pOut
->
Êags
 = 
MEM_I¡
;

5275 
pOut
->
u
.
i
 = 
iMoved
;

5276 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5277 #i‚de‡
SQLITE_OMIT_AUTOVACUUM


5278 if–
iMoved
!=0 ){

5279 
	`sqlôe3RoŸPageMoved
(
db
, 
iDb
, 
iMoved
, 
pOp
->
p1
);

5281 
	`as£π
–
ª£tSchemaOnFau…
==0 ||Ñe£tSchemaOnFau…==
iDb
+1 );

5282 
ª£tSchemaOnFau…
 = 
iDb
+1;

5307 
OP_CÀ¨
: {

5308 
nCh™ge
;

5310 
nCh™ge
 = 0;

5311 
	`as£π
–
p
->
ªadO∆y
==0 );

5312 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p2
) );

5313 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀ
(

5314 
db
->
aDb
[
pOp
->
p2
].
pBt
,ÖOp->
p1
, (pOp->
p3
 ? &
nCh™ge
 : 0)

5316 if–
pOp
->
p3
 ){

5317 
p
->
nCh™ge
 +=ÇChange;

5318 if–
pOp
->
p3
>0 ){

5319 
	`as£π
–
	`memIsVÆid
(&
aMem
[
pOp
->
p3
]) );

5320 
	`memAboutToCh™ge
(
p
, &
aMem
[
pOp
->
p3
]);

5321 
aMem
[
pOp
->
p3
].
u
.
i
 +
nCh™ge
;

5324 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5336 
OP_Re£tS‹ãr
: {

5337 
VdbeCurs‹
 *
pC
;

5339 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

5340 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

5341 
	`as£π
–
pC
!=0 );

5342 if–
	`isS‹ãr
(
pC
) ){

5343 
	`sqlôe3VdbeS‹ãrRe£t
(
db
, 
pC
->
uc
.
pS‹ãr
);

5345 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

5346 
	`as£π
–
pC
->
isEphemîÆ
 );

5347 
rc
 = 
	`sqlôe3BåìCÀ¨TabÀOfCurs‹
(
pC
->
uc
.
pCurs‹
);

5348 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5377 
OP_Cª©eIndex
:

5378 
OP_Cª©eTabÀ
: {

5379 
pgno
;

5380 
Êags
;

5381 
Db
 *
pDb
;

5383 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5384 
pgno
 = 0;

5385 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

5386 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

5387 
	`as£π
–
p
->
ªadO∆y
==0 );

5388 
pDb
 = &
db
->
aDb
[
pOp
->
p1
];

5389 
	`as£π
–
pDb
->
pBt
!=0 );

5390 if–
pOp
->
›code
==
OP_Cª©eTabÀ
 ){

5392 
Êags
 = 
BTREE_INTKEY
;

5394 
Êags
 = 
BTREE_BLOBKEY
;

5396 
rc
 = 
	`sqlôe3BåìCª©eTabÀ
(
pDb
->
pBt
, &
pgno
, 
Êags
);

5397 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5398 
pOut
->
u
.
i
 = 
pgno
;

5410 
OP_P¨£Schema
: {

5411 
iDb
;

5412 c⁄° *
zMa°î
;

5413 *
zSql
;

5414 
InôD©a
 
öôD©a
;

5420 #ifde‡
SQLITE_DEBUG


5421 
iDb
=0; iDb<
db
->
nDb
; iDb++){

5422 
	`as£π
–
iDb
==1 || 
	`sqlôe3BåìHﬁdsMuãx
(
db
->
aDb
[iDb].
pBt
) );

5426 
iDb
 = 
pOp
->
p1
;

5427 
	`as£π
–
iDb
>=0 && iDb<
db
->
nDb
 );

5428 
	`as£π
–
	`DbHasPr›îty
(
db
, 
iDb
, 
DB_SchemaLﬂded
) );

5430 
zMa°î
 = 
	`SCHEMA_TABLE
(
iDb
);

5431 
öôD©a
.
db
 = db;

5432 
öôD©a
.
iDb
 = 
pOp
->
p1
;

5433 
öôD©a
.
pzEºMsg
 = &
p
->
zEºMsg
;

5434 
zSql
 = 
	`sqlôe3MPrötf
(
db
,

5436 
db
->
aDb
[
iDb
].
zName
, 
zMa°î
, 
pOp
->
p4
.
z
);

5437 if–
zSql
==0 ){

5438 
rc
 = 
SQLITE_NOMEM_BKPT
;

5440 
	`as£π
–
db
->
öô
.
busy
==0 );

5441 
db
->
öô
.
busy
 = 1;

5442 
öôD©a
.
rc
 = 
SQLITE_OK
;

5443 
	`as£π
–!
db
->
mÆlocFaûed
 );

5444 
rc
 = 
	`sqlôe3_exec
(
db
, 
zSql
, 
sqlôe3InôCÆlback
, &
öôD©a
, 0);

5445 if–
rc
==
SQLITE_OK
 )Ñ¯
öôD©a
.rc;

5446 
	`sqlôe3DbFªe
(
db
, 
zSql
);

5447 
db
->
öô
.
busy
 = 0;

5450 if–
rc
 ){

5451 
	`sqlôe3Re£tAŒSchemasOfC⁄√˘i⁄
(
db
);

5452 if–
rc
==
SQLITE_NOMEM
 ){

5453 
no_mem
;

5455 
ab‹t_due_to_îr‹
;

5460 #i‡!
	`deföed
(
SQLITE_OMIT_ANALYZE
)

5467 
OP_LﬂdA«lysis
: {

5468 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

5469 
rc
 = 
	`sqlôe3A«lysisLﬂd
(
db
, 
pOp
->
p1
);

5470 if–
rc
 ) 
ab‹t_due_to_îr‹
;

5483 
OP_Dr›TabÀ
: {

5484 
	`sqlôe3U∆ökAndDñëeTabÀ
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5496 
OP_Dr›Index
: {

5497 
	`sqlôe3U∆ökAndDñëeIndex
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5509 
OP_Dr›Triggî
: {

5510 
	`sqlôe3U∆ökAndDñëeTriggî
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

5515 #i‚de‡
SQLITE_OMIT_INTEGRITY_CHECK


5535 
OP_I¡egrôyCk
: {

5536 
nRoŸ
;

5537 *
aRoŸ
;

5538 
nEº
;

5539 *
z
;

5540 
Mem
 *
≤Eº
;

5542 
	`as£π
–
p
->
bIsRódî
 );

5543 
nRoŸ
 = 
pOp
->
p2
;

5544 
aRoŸ
 = 
pOp
->
p4
.
ai
;

5545 
	`as£π
–
nRoŸ
>0 );

5546 
	`as£π
–
aRoŸ
[
nRoŸ
]==0 );

5547 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

5548 
≤Eº
 = &
aMem
[
pOp
->
p3
];

5549 
	`as£π
–(
≤Eº
->
Êags
 & 
MEM_I¡
)!=0 );

5550 
	`as£π
–(
≤Eº
->
Êags
 & (
MEM_Så
|
MEM_Blob
))==0 );

5551 
pIn1
 = &
aMem
[
pOp
->
p1
];

5552 
	`as£π
–
pOp
->
p5
<
db
->
nDb
 );

5553 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p5
) );

5554 
z
 = 
	`sqlôe3BåìI¡egrôyCheck
(
db
->
aDb
[
pOp
->
p5
].
pBt
, 
aRoŸ
, 
nRoŸ
,

5555 ()
≤Eº
->
u
.
i
, &
nEº
);

5556 
≤Eº
->
u
.
i
 -
nEº
;

5557 
	`sqlôe3VdbeMemSëNuŒ
(
pIn1
);

5558 if–
nEº
==0 ){

5559 
	`as£π
–
z
==0 );

5560 }if–
z
==0 ){

5561 
no_mem
;

5563 
	`sqlôe3VdbeMemSëSå
(
pIn1
, 
z
, -1, 
SQLITE_UTF8
, 
sqlôe3_‰ì
);

5565 
	`UPDATE_MAX_BLOBSIZE
(
pIn1
);

5566 
	`sqlôe3VdbeCh™geEncodög
(
pIn1
, 
ícodög
);

5579 
OP_RowSëAdd
: {

5580 
pIn1
 = &
aMem
[
pOp
->
p1
];

5581 
pIn2
 = &
aMem
[
pOp
->
p2
];

5582 
	`as£π
–(
pIn2
->
Êags
 & 
MEM_I¡
)!=0 );

5583 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ){

5584 
	`sqlôe3VdbeMemSëRowSë
(
pIn1
);

5585 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ) 
no_mem
;

5587 
	`sqlôe3RowSëIn£π
(
pIn1
->
u
.
pRowSë
, 
pIn2
->u.
i
);

5598 
OP_RowSëRód
: {

5599 
i64
 
vÆ
;

5601 
pIn1
 = &
aMem
[
pOp
->
p1
];

5602 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0

5603 || 
	`sqlôe3RowSëNext
(
pIn1
->
u
.
pRowSë
, &
vÆ
)==0

5606 
	`sqlôe3VdbeMemSëNuŒ
(
pIn1
);

5607 
	`VdbeBønchTakí
(1,2);

5608 
jump_to_p2_™d_check_f‹_öãºu±
;

5611 
	`VdbeBønchTakí
(0,2);

5612 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[
pOp
->
p3
], 
vÆ
);

5614 
check_f‹_öãºu±
;

5641 
OP_RowSëTe°
: {

5642 
iSë
;

5643 
exi°s
;

5645 
pIn1
 = &
aMem
[
pOp
->
p1
];

5646 
pIn3
 = &
aMem
[
pOp
->
p3
];

5647 
iSë
 = 
pOp
->
p4
.
i
;

5648 
	`as£π
–
pIn3
->
Êags
&
MEM_I¡
 );

5653 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ){

5654 
	`sqlôe3VdbeMemSëRowSë
(
pIn1
);

5655 if–(
pIn1
->
Êags
 & 
MEM_RowSë
)==0 ) 
no_mem
;

5658 
	`as£π
–
pOp
->
p4ty≥
==
P4_INT32
 );

5659 
	`as£π
–
iSë
==-1 || iSet>=0 );

5660 if–
iSë
 ){

5661 
exi°s
 = 
	`sqlôe3RowSëTe°
(
pIn1
->
u
.
pRowSë
, 
iSë
, 
pIn3
->u.
i
);

5662 
	`VdbeBønchTakí
(
exi°s
!=0,2);

5663 if–
exi°s
 ) 
jump_to_p2
;

5665 if–
iSë
>=0 ){

5666 
	`sqlôe3RowSëIn£π
(
pIn1
->
u
.
pRowSë
, 
pIn3
->u.
i
);

5672 #i‚de‡
SQLITE_OMIT_TRIGGER


5689 
OP_Progøm
: {

5690 
nMem
;

5691 
nByã
;

5692 
Mem
 *
pRt
;

5693 
Mem
 *
pMem
;

5694 
Mem
 *
pEnd
;

5695 
VdbeFøme
 *
pFøme
;

5696 
SubProgøm
 *
pProgøm
;

5697 *
t
;

5699 
pProgøm
 = 
pOp
->
p4
.pProgram;

5700 
pRt
 = &
aMem
[
pOp
->
p3
];

5701 
	`as£π
–
pProgøm
->
nOp
>0 );

5714 if–
pOp
->
p5
 ){

5715 
t
 = 
pProgøm
->
tokí
;

5716 
pFøme
=
p
->pFøme;ÖFømê&&ÖFøme->
tokí
!=
t
;ÖFømeıFøme->
pP¨ít
);

5717 if–
pFøme
 ) ;

5720 if–
p
->
nFøme
>=
db
->
aLimô
[
SQLITE_LIMIT_TRIGGER_DEPTH
] ){

5721 
rc
 = 
SQLITE_ERROR
;

5722 
	`sqlôe3VdbeEº‹
(
p
, "too manyÜevels ofÅriggerÑecursion");

5723 
ab‹t_due_to_îr‹
;

5730 if–(
pRt
->
Êags
&
MEM_Føme
)==0 ){

5736 
nMem
 = 
pProgøm
->nMem +ÖProgøm->
nC§
;

5737 
	`as£π
–
nMem
>0 );

5738 if–
pProgøm
->
nC§
==0 ) 
nMem
++;

5739 
nByã
 = 
	`ROUND8
((
VdbeFøme
))

5740 + 
nMem
 * (
Mem
)

5741 + 
pProgøm
->
nC§
 * (
VdbeCurs‹
 *)

5742 + 
pProgøm
->
nOn˚
 * (
u8
);

5743 
pFøme
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

5744 if–!
pFøme
 ){

5745 
no_mem
;

5747 
	`sqlôe3VdbeMemRñó£
(
pRt
);

5748 
pRt
->
Êags
 = 
MEM_Føme
;

5749 
pRt
->
u
.
pFøme
 =ÖFrame;

5751 
pFøme
->
v
 = 
p
;

5752 
pFøme
->
nChûdMem
 = 
nMem
;

5753 
pFøme
->
nChûdC§
 = 
pProgøm
->
nC§
;

5754 
pFøme
->
pc
 = ()(
pOp
 - 
aOp
);

5755 
pFøme
->
aMem
 = 
p
->aMem;

5756 
pFøme
->
nMem
 = 
p
->nMem;

5757 
pFøme
->
≠C§
 = 
p
->apCsr;

5758 
pFøme
->
nCurs‹
 = 
p
->nCursor;

5759 
pFøme
->
aOp
 = 
p
->aOp;

5760 
pFøme
->
nOp
 = 
p
->nOp;

5761 
pFøme
->
tokí
 = 
pProgøm
->token;

5762 
pFøme
->
aOn˚Fœg
 = 
p
->aOnceFlag;

5763 
pFøme
->
nOn˚Fœg
 = 
p
->nOnceFlag;

5764 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


5765 
pFøme
->
™Exec
 = 
p
->anExec;

5768 
pEnd
 = &
	`VdbeFømeMem
(
pFøme
)[pFøme->
nChûdMem
];

5769 
pMem
=
	`VdbeFømeMem
(
pFøme
);ÖMem!=
pEnd
;ÖMem++){

5770 
pMem
->
Êags
 = 
MEM_Undeföed
;

5771 
pMem
->
db
 = db;

5774 
pFøme
 = 
pRt
->
u
.pFrame;

5775 
	`as£π
–
pProgøm
->
nMem
+pProgøm->
nC§
==
pFøme
->
nChûdMem


5776 || (
pProgøm
->
nC§
==0 &&ÖProgøm->
nMem
+1==
pFøme
->
nChûdMem
) );

5777 
	`as£π
–
pProgøm
->
nC§
==
pFøme
->
nChûdC§
 );

5778 
	`as£π
–()(
pOp
 - 
aOp
)==
pFøme
->
pc
 );

5781 
p
->
nFøme
++;

5782 
pFøme
->
pP¨ít
 = 
p
->pFrame;

5783 
pFøme
->
œ°Rowid
 =ÜastRowid;

5784 
pFøme
->
nCh™ge
 = 
p
->nChange;

5785 
pFøme
->
nDbCh™ge
 = 
p
->
db
->
nCh™ge
;

5786 
	`as£π
–
pFøme
->
pAuxD©a
==0 );

5787 
pFøme
->
pAuxD©a
 = 
p
->pAuxData;

5788 
p
->
pAuxD©a
 = 0;

5789 
p
->
nCh™ge
 = 0;

5790 
p
->
pFøme
 =ÖFrame;

5791 
p
->
aMem
 =áMem = 
	`VdbeFømeMem
(
pFøme
);

5792 
p
->
nMem
 = 
pFøme
->
nChûdMem
;

5793 
p
->
nCurs‹
 = (
u16
)
pFøme
->
nChûdC§
;

5794 
p
->
≠C§
 = (
VdbeCurs‹
 **)&
aMem
[p->
nMem
];

5795 
p
->
aOp
 =áO∞
pProgøm
->aOp;

5796 
p
->
nOp
 = 
pProgøm
->nOp;

5797 
p
->
aOn˚Fœg
 = (
u8
 *)&p->
≠C§
[p->
nCurs‹
];

5798 
p
->
nOn˚Fœg
 = 
pProgøm
->
nOn˚
;

5799 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


5800 
p
->
™Exec
 = 0;

5802 
pOp
 = &
aOp
[-1];

5803 
	`mem£t
(
p
->
aOn˚Fœg
, 0,Ö->
nOn˚Fœg
);

5820 
OP_P¨am
: {

5821 
VdbeFøme
 *
pFøme
;

5822 
Mem
 *
pIn
;

5823 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5824 
pFøme
 = 
p
->pFrame;

5825 
pIn
 = &
pFøme
->
aMem
[
pOp
->
p1
 +ÖFøme->
aOp
[pFøme->
pc
].p1];

5826 
	`sqlôe3VdbeMemShÆlowC›y
(
pOut
, 
pIn
, 
MEM_Ephem
);

5832 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


5841 
OP_FkCou¡î
: {

5842 if–
db
->
Êags
 & 
SQLITE_De„rFKs
 ){

5843 
db
->
nDe„ºedImmC⁄s
 +
pOp
->
p2
;

5844 }if–
pOp
->
p1
 ){

5845 
db
->
nDe„ºedC⁄s
 +
pOp
->
p2
;

5847 
p
->
nFkC⁄°øöt
 +
pOp
->
p2
;

5864 
OP_FkIfZîo
: {

5865 if–
pOp
->
p1
 ){

5866 
	`VdbeBønchTakí
(
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0, 2);

5867 if–
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0 ) 
jump_to_p2
;

5869 
	`VdbeBønchTakí
(
p
->
nFkC⁄°øöt
==0 && 
db
->
nDe„ºedImmC⁄s
==0, 2);

5870 if–
p
->
nFkC⁄°øöt
==0 && 
db
->
nDe„ºedImmC⁄s
==0 ) 
jump_to_p2
;

5876 #i‚de‡
SQLITE_OMIT_AUTOINCREMENT


5888 
OP_MemMax
: {

5889 
VdbeFøme
 *
pFøme
;

5890 if–
p
->
pFøme
 ){

5891 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

5892 
pIn1
 = &
pFøme
->
aMem
[
pOp
->
p1
];

5894 
pIn1
 = &
aMem
[
pOp
->
p1
];

5896 
	`as£π
–
	`memIsVÆid
(
pIn1
) );

5897 
	`sqlôe3VdbeMemI¡egîify
(
pIn1
);

5898 
pIn2
 = &
aMem
[
pOp
->
p2
];

5899 
	`sqlôe3VdbeMemI¡egîify
(
pIn2
);

5900 if–
pIn1
->
u
.
i
<
pIn2
->u.i){

5901 
pIn1
->
u
.
i
 = 
pIn2
->u.i;

5917 
OP_IfPos
: {

5918 
pIn1
 = &
aMem
[
pOp
->
p1
];

5919 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

5920 
	`VdbeBønchTakí
–
pIn1
->
u
.
i
>0, 2);

5921 if–
pIn1
->
u
.
i
>0 ){

5922 
pIn1
->
u
.
i
 -
pOp
->
p3
;

5923 
jump_to_p2
;

5946 
OP_Off£tLimô
: {

5947 
pIn1
 = &
aMem
[
pOp
->
p1
];

5948 
pIn3
 = &
aMem
[
pOp
->
p3
];

5949 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

5950 
	`as£π
–
pIn1
->
Êags
 & 
MEM_I¡
 );

5951 
	`as£π
–
pIn3
->
Êags
 & 
MEM_I¡
 );

5952 
pOut
->
u
.
i
 = 
pIn1
->u.i<=0 ? -1 :ÖIn1->u.i+(
pIn3
->u.i>0?pIn3->u.i:0);

5964 
OP_IfNŸZîo
: {

5965 
pIn1
 = &
aMem
[
pOp
->
p1
];

5966 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

5967 
	`VdbeBønchTakí
(
pIn1
->
u
.
i
<0, 2);

5968 if–
pIn1
->
u
.
i
 ){

5969 
pIn1
->
u
.
i
 -
pOp
->
p3
;

5970 
jump_to_p2
;

5981 
OP_De¸JumpZîo
: {

5982 
pIn1
 = &
aMem
[
pOp
->
p1
];

5983 
	`as£π
–
pIn1
->
Êags
&
MEM_I¡
 );

5984 
pIn1
->
u
.
i
--;

5985 
	`VdbeBønchTakí
(
pIn1
->
u
.
i
==0, 2);

5986 if–
pIn1
->
u
.
i
==0 ) 
jump_to_p2
;

6019 
OP_AggSãp0
: {

6020 
n
;

6021 
sqlôe3_c⁄ãxt
 *
pCtx
;

6023 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCDEF
 );

6024 
n
 = 
pOp
->
p5
;

6025 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6026 
	`as£π
–
n
==0 || (
pOp
->
p2
>0 &&ÖOp->p2+n<=(
p
->
nMem
+1 -Ö->
nCurs‹
)+1) );

6027 
	`as£π
–
pOp
->
p3
<pOp->
p2
 ||ÖOp->p3>ıOp->p2+
n
 );

6028 
pCtx
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pCtxË+ (
n
-1)*(
sqlôe3_vÆue
*));

6029 if–
pCtx
==0 ) 
no_mem
;

6030 
pCtx
->
pMem
 = 0;

6031 
pCtx
->
pFunc
 = 
pOp
->
p4
.pFunc;

6032 
pCtx
->
iOp
 = ()(
pOp
 - 
aOp
);

6033 
pCtx
->
pVdbe
 = 
p
;

6034 
pCtx
->
¨gc
 = 
n
;

6035 
pOp
->
p4ty≥
 = 
P4_FUNCCTX
;

6036 
pOp
->
p4
.
pCtx
 =ÖCtx;

6037 
pOp
->
›code
 = 
OP_AggSãp
;

6040 
OP_AggSãp
: {

6041 
i
;

6042 
sqlôe3_c⁄ãxt
 *
pCtx
;

6043 
Mem
 *
pMem
;

6044 
Mem
 
t
;

6046 
	`as£π
–
pOp
->
p4ty≥
==
P4_FUNCCTX
 );

6047 
pCtx
 = 
pOp
->
p4
.pCtx;

6048 
pMem
 = &
aMem
[
pOp
->
p3
];

6054 if–
pCtx
->
pMem
 !=ÖMem ){

6055 
pCtx
->
pMem
 =ÖMem;

6056 
i
=
pCtx
->
¨gc
-1; i>=0; i--ËpCtx->
¨gv
[i] = &
aMem
[
pOp
->
p2
+i];

6059 #ifde‡
SQLITE_DEBUG


6060 
i
=0; i<
pCtx
->
¨gc
; i++){

6061 
	`as£π
–
	`memIsVÆid
(
pCtx
->
¨gv
[
i
]) );

6062 
	`REGISTER_TRACE
(
pOp
->
p2
+
i
, 
pCtx
->
¨gv
[i]);

6066 
pMem
->
n
++;

6067 
	`sqlôe3VdbeMemInô
(&
t
, 
db
, 
MEM_NuŒ
);

6068 
pCtx
->
pOut
 = &
t
;

6069 
pCtx
->
fEº‹OrAux
 = 0;

6070 
pCtx
->
skùFœg
 = 0;

6071 (
pCtx
->
pFunc
->
xSFunc
)’Ctx,pCtx->
¨gc
,pCtx->
¨gv
);

6072 if–
pCtx
->
fEº‹OrAux
 ){

6073 if–
pCtx
->
isEº‹
 ){

6074 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(&
t
));

6075 
rc
 = 
pCtx
->
isEº‹
;

6077 
	`sqlôe3VdbeMemRñó£
(&
t
);

6078 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6080 
	`as£π
–
t
.
Êags
==
MEM_NuŒ
 );

6082 if–
pCtx
->
skùFœg
 ){

6083 
	`as£π
–
pOp
[-1].
›code
==
OP_CﬁlSeq
 );

6084 
i
 = 
pOp
[-1].
p1
;

6085 if–
i
 ) 
	`sqlôe3VdbeMemSëI¡64
(&
aMem
[i], 1);

6103 
OP_AggFöÆ
: {

6104 
Mem
 *
pMem
;

6105 
	`as£π
–
pOp
->
p1
>0 &&ÖOp->p1<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6106 
pMem
 = &
aMem
[
pOp
->
p1
];

6107 
	`as£π
–(
pMem
->
Êags
 & ~(
MEM_NuŒ
|
MEM_Agg
))==0 );

6108 
rc
 = 
	`sqlôe3VdbeMemFöÆize
(
pMem
, 
pOp
->
p4
.
pFunc
);

6109 if–
rc
 ){

6110 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pMem
));

6111 
ab‹t_due_to_îr‹
;

6113 
	`sqlôe3VdbeCh™geEncodög
(
pMem
, 
ícodög
);

6114 
	`UPDATE_MAX_BLOBSIZE
(
pMem
);

6115 if–
	`sqlôe3VdbeMemTooBig
(
pMem
) ){

6116 
too_big
;

6121 #i‚de‡
SQLITE_OMIT_WAL


6133 
OP_Checkpoöt
: {

6134 
i
;

6135 
aRes
[3];

6136 
Mem
 *
pMem
;

6138 
	`as£π
–
p
->
ªadO∆y
==0 );

6139 
aRes
[0] = 0;

6140 
aRes
[1] =áRes[2] = -1;

6141 
	`as£π
–
pOp
->
p2
==
SQLITE_CHECKPOINT_PASSIVE


6142 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_FULL


6143 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_RESTART


6144 || 
pOp
->
p2
==
SQLITE_CHECKPOINT_TRUNCATE


6146 
rc
 = 
	`sqlôe3Checkpoöt
(
db
, 
pOp
->
p1
,ÖOp->
p2
, &
aRes
[1], &aRes[2]);

6147 if–
rc
 ){

6148 if–
rc
!=
SQLITE_BUSY
 ) 
ab‹t_due_to_îr‹
;

6149 
rc
 = 
SQLITE_OK
;

6150 
aRes
[0] = 1;

6152 
i
=0, 
pMem
 = &
aMem
[
pOp
->
p3
]; i<3; i++,ÖMem++){

6153 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, (
i64
)
aRes
[
i
]);

6159 #i‚de‡
SQLITE_OMIT_PRAGMA


6171 
OP_Jou∫ÆMode
: {

6172 
Båì
 *
pBt
;

6173 
Pagî
 *
pPagî
;

6174 
eNew
;

6175 
eOld
;

6176 #i‚de‡
SQLITE_OMIT_WAL


6177 c⁄° *
zFûíame
;

6180 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6181 
eNew
 = 
pOp
->
p3
;

6182 
	`as£π
–
eNew
==
PAGER_JOURNALMODE_DELETE


6183 || 
eNew
==
PAGER_JOURNALMODE_TRUNCATE


6184 || 
eNew
==
PAGER_JOURNALMODE_PERSIST


6185 || 
eNew
==
PAGER_JOURNALMODE_OFF


6186 || 
eNew
==
PAGER_JOURNALMODE_MEMORY


6187 || 
eNew
==
PAGER_JOURNALMODE_WAL


6188 || 
eNew
==
PAGER_JOURNALMODE_QUERY


6190 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

6191 
	`as£π
–
p
->
ªadO∆y
==0 );

6193 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6194 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

6195 
eOld
 = 
	`sqlôe3PagîGëJou∫ÆMode
(
pPagî
);

6196 if–
eNew
==
PAGER_JOURNALMODE_QUERY
 )ÉNew = 
eOld
;

6197 if–!
	`sqlôe3PagîOkToCh™geJou∫ÆMode
(
pPagî
ËË
eNew
 = 
eOld
;

6199 #i‚de‡
SQLITE_OMIT_WAL


6200 
zFûíame
 = 
	`sqlôe3PagîFûíame
(
pPagî
, 1);

6205 if–
eNew
==
PAGER_JOURNALMODE_WAL


6206 && (
	`sqlôe3SåÀn30
(
zFûíame
)==0

6207 || !
	`sqlôe3PagîWÆSuµ‹ãd
(
pPagî
))

6209 
eNew
 = 
eOld
;

6212 if–(
eNew
!=
eOld
)

6213 && (
eOld
==
PAGER_JOURNALMODE_WAL
 || 
eNew
==PAGER_JOURNALMODE_WAL)

6215 if–!
db
->
autoCommô
 || db->
nVdbeRód
>1 ){

6216 
rc
 = 
SQLITE_ERROR
;

6217 
	`sqlôe3VdbeEº‹
(
p
,

6219 (
eNew
==
PAGER_JOURNALMODE_WAL
 ? "into" : "out of")

6221 
ab‹t_due_to_îr‹
;

6224 if–
eOld
==
PAGER_JOURNALMODE_WAL
 ){

6230 
rc
 = 
	`sqlôe3PagîClo£WÆ
(
pPagî
);

6231 if–
rc
==
SQLITE_OK
 ){

6232 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
, 
eNew
);

6234 }if–
eOld
==
PAGER_JOURNALMODE_MEMORY
 ){

6237 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
, 
PAGER_JOURNALMODE_OFF
);

6243 
	`as£π
–
	`sqlôe3BåìIsInTøns
(
pBt
)==0 );

6244 if–
rc
==
SQLITE_OK
 ){

6245 
rc
 = 
	`sqlôe3BåìSëVîsi⁄
(
pBt
, (
eNew
==
PAGER_JOURNALMODE_WAL
 ? 2 : 1));

6251 if–
rc
 ) 
eNew
 = 
eOld
;

6252 
eNew
 = 
	`sqlôe3PagîSëJou∫ÆMode
(
pPagî
,ÉNew);

6254 
pOut
->
Êags
 = 
MEM_Så
|
MEM_Sètic
|
MEM_Tîm
;

6255 
pOut
->
z
 = (*)
	`sqlôe3Jou∫ÆModíame
(
eNew
);

6256 
pOut
->
n
 = 
	`sqlôe3SåÀn30
’Out->
z
);

6257 
pOut
->
íc
 = 
SQLITE_UTF8
;

6258 
	`sqlôe3VdbeCh™geEncodög
(
pOut
, 
ícodög
);

6259 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6264 #i‡!
	`deföed
(
SQLITE_OMIT_VACUUM
Ë&& !deföed(
SQLITE_OMIT_ATTACH
)

6271 
OP_Vacuum
: {

6272 
	`as£π
–
p
->
ªadO∆y
==0 );

6273 
rc
 = 
	`sqlôe3RunVacuum
(&
p
->
zEºMsg
, 
db
);

6274 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6279 #i‡!
	`deföed
(
SQLITE_OMIT_AUTOVACUUM
)

6286 
OP_In¸Vacuum
: {

6287 
Båì
 *
pBt
;

6289 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
db
->
nDb
 );

6290 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
pOp
->
p1
) );

6291 
	`as£π
–
p
->
ªadO∆y
==0 );

6292 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6293 
rc
 = 
	`sqlôe3BåìIn¸Vacuum
(
pBt
);

6294 
	`VdbeBønchTakí
(
rc
==
SQLITE_DONE
,2);

6295 if–
rc
 ){

6296 if–
rc
!=
SQLITE_DONE
 ) 
ab‹t_due_to_îr‹
;

6297 
rc
 = 
SQLITE_OK
;

6298 
jump_to_p2
;

6314 
OP_Expúe
: {

6315 if–!
pOp
->
p1
 ){

6316 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

6318 
p
->
expúed
 = 1;

6323 #i‚de‡
SQLITE_OMIT_SHARED_CACHE


6339 
OP_TabÀLock
: {

6340 
u8
 
isWrôeLock
 = (u8)
pOp
->
p3
;

6341 if–
isWrôeLock
 || 0==(
db
->
Êags
&
SQLITE_RódUncommôãd
) ){

6342 
p1
 = 
pOp
->p1;

6343 
	`as£π
–
p1
>=0 &&Ö1<
db
->
nDb
 );

6344 
	`as£π
–
	`DbMaskTe°
(
p
->
båìMask
, 
p1
) );

6345 
	`as£π
–
isWrôeLock
==0 || isWriteLock==1 );

6346 
rc
 = 
	`sqlôe3BåìLockTabÀ
(
db
->
aDb
[
p1
].
pBt
, 
pOp
->
p2
, 
isWrôeLock
);

6347 if–
rc
 ){

6348 if–(
rc
&0xFF)==
SQLITE_LOCKED
 ){

6349 c⁄° *
z
 = 
pOp
->
p4
.z;

6350 
	`sqlôe3VdbeEº‹
(
p
, "d©aba£ÅabÀ i†locked: %s", 
z
);

6352 
ab‹t_due_to_îr‹
;

6359 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6369 
OP_VBegö
: {

6370 
VTabÀ
 *
pVTab
;

6371 
pVTab
 = 
pOp
->
p4
.
pVèb
;

6372 
rc
 = 
	`sqlôe3VèbBegö
(
db
, 
pVTab
);

6373 if–
pVTab
 ) 
	`sqlôe3VèbImp‹tEºmsg
(
p
,ÖVTab->
pVèb
);

6374 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6379 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6385 
OP_VCª©e
: {

6386 
Mem
 
sMem
;

6387 c⁄° *
zTab
;

6389 
	`mem£t
(&
sMem
, 0, (sMem));

6390 
sMem
.
db
 = db;

6393 
	`as£π
–(
aMem
[
pOp
->
p2
].
Êags
 & 
MEM_Så
)!=0 );

6394 
	`as£π
–(
aMem
[
pOp
->
p2
].
Êags
 & 
MEM_Sètic
)!=0 );

6395 
rc
 = 
	`sqlôe3VdbeMemC›y
(&
sMem
, &
aMem
[
pOp
->
p2
]);

6396 
	`as£π
–
rc
==
SQLITE_OK
 );

6397 
zTab
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(&
sMem
);

6398 
	`as£π
–
zTab
 || 
db
->
mÆlocFaûed
 );

6399 if–
zTab
 ){

6400 
rc
 = 
	`sqlôe3VèbCÆlCª©e
(
db
, 
pOp
->
p1
, 
zTab
, &
p
->
zEºMsg
);

6402 
	`sqlôe3VdbeMemRñó£
(&
sMem
);

6403 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6408 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6414 
OP_VDe°roy
: {

6415 
db
->
nVDe°roy
++;

6416 
rc
 = 
	`sqlôe3VèbCÆlDe°roy
(
db
, 
pOp
->
p1
,ÖOp->
p4
.
z
);

6417 
db
->
nVDe°roy
--;

6418 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6423 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6430 
OP_VO≥n
: {

6431 
VdbeCurs‹
 *
pCur
;

6432 
sqlôe3_vèb_curs‹
 *
pVCur
;

6433 
sqlôe3_vèb
 *
pVèb
;

6434 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6436 
	`as£π
–
p
->
bIsRódî
 );

6437 
pCur
 = 0;

6438 
pVCur
 = 0;

6439 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6440 if–
pVèb
==0 || 
	`NEVER
’Vèb->
pModuÀ
==0) ){

6441 
rc
 = 
SQLITE_LOCKED
;

6442 
ab‹t_due_to_îr‹
;

6444 
pModuÀ
 = 
pVèb
->pModule;

6445 
rc
 = 
pModuÀ
->
	`xO≥n
(
pVèb
, &
pVCur
);

6446 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6447 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6450 
pVCur
->
pVèb
 =ÖVtab;

6453 
pCur
 = 
	`ÆloˇãCurs‹
(
p
, 
pOp
->
p1
, 0, -1, 
CURTYPE_VTAB
);

6454 if–
pCur
 ){

6455 
pCur
->
uc
.
pVCur
 =ÖVCur;

6456 
pVèb
->
nRef
++;

6458 
	`as£π
–
db
->
mÆlocFaûed
 );

6459 
pModuÀ
->
	`xClo£
(
pVCur
);

6460 
no_mem
;

6466 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6486 
OP_VFûãr
: {

6487 
nArg
;

6488 
iQuîy
;

6489 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6490 
Mem
 *
pQuîy
;

6491 
Mem
 *
pArgc
;

6492 
sqlôe3_vèb_curs‹
 *
pVCur
;

6493 
sqlôe3_vèb
 *
pVèb
;

6494 
VdbeCurs‹
 *
pCur
;

6495 
ªs
;

6496 
i
;

6497 
Mem
 **
≠Arg
;

6499 
pQuîy
 = &
aMem
[
pOp
->
p3
];

6500 
pArgc
 = &
pQuîy
[1];

6501 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6502 
	`as£π
–
	`memIsVÆid
(
pQuîy
) );

6503 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pQuîy
);

6504 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6505 
pVCur
 = 
pCur
->
uc
.pVCur;

6506 
pVèb
 = 
pVCur
->pVtab;

6507 
pModuÀ
 = 
pVèb
->pModule;

6510 
	`as£π
–(
pQuîy
->
Êags
&
MEM_I¡
)!=0 && 
pArgc
->flags==MEM_Int );

6511 
nArg
 = ()
pArgc
->
u
.
i
;

6512 
iQuîy
 = ()
pQuîy
->
u
.
i
;

6515 
ªs
 = 0;

6516 
≠Arg
 = 
p
->apArg;

6517 
i
 = 0; i<
nArg
; i++){

6518 
≠Arg
[
i
] = &
pArgc
[i+1];

6520 
rc
 = 
pModuÀ
->
	`xFûãr
(
pVCur
, 
iQuîy
, 
pOp
->
p4
.
z
, 
nArg
, 
≠Arg
);

6521 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6522 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6523 
ªs
 = 
pModuÀ
->
	`xEof
(
pVCur
);

6524 
pCur
->
nuŒRow
 = 0;

6525 
	`VdbeBønchTakí
(
ªs
!=0,2);

6526 if–
ªs
 ) 
jump_to_p2
;

6531 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6539 
OP_VCﬁumn
: {

6540 
sqlôe3_vèb
 *
pVèb
;

6541 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6542 
Mem
 *
pDe°
;

6543 
sqlôe3_c⁄ãxt
 
sC⁄ãxt
;

6545 
VdbeCurs‹
 *
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6546 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6547 
	`as£π
–
pOp
->
p3
>0 &&ÖOp->p3<=(
p
->
nMem
+1 -Ö->
nCurs‹
) );

6548 
pDe°
 = &
aMem
[
pOp
->
p3
];

6549 
	`memAboutToCh™ge
(
p
, 
pDe°
);

6550 if–
pCur
->
nuŒRow
 ){

6551 
	`sqlôe3VdbeMemSëNuŒ
(
pDe°
);

6554 
pVèb
 = 
pCur
->
uc
.
pVCur
->pVtab;

6555 
pModuÀ
 = 
pVèb
->pModule;

6556 
	`as£π
–
pModuÀ
->
xCﬁumn
 );

6557 
	`mem£t
(&
sC⁄ãxt
, 0, (sContext));

6558 
sC⁄ãxt
.
pOut
 = 
pDe°
;

6559 
	`MemSëTy≥Fœg
(
pDe°
, 
MEM_NuŒ
);

6560 
rc
 = 
pModuÀ
->
	`xCﬁumn
(
pCur
->
uc
.
pVCur
, &
sC⁄ãxt
, 
pOp
->
p2
);

6561 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6562 if–
sC⁄ãxt
.
isEº‹
 ){

6563 
rc
 = 
sC⁄ãxt
.
isEº‹
;

6565 
	`sqlôe3VdbeCh™geEncodög
(
pDe°
, 
ícodög
);

6566 
	`REGISTER_TRACE
(
pOp
->
p3
, 
pDe°
);

6567 
	`UPDATE_MAX_BLOBSIZE
(
pDe°
);

6569 if–
	`sqlôe3VdbeMemTooBig
(
pDe°
) ){

6570 
too_big
;

6572 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6577 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6584 
OP_VNext
: {

6585 
sqlôe3_vèb
 *
pVèb
;

6586 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6587 
ªs
;

6588 
VdbeCurs‹
 *
pCur
;

6590 
ªs
 = 0;

6591 
pCur
 = 
p
->
≠C§
[
pOp
->
p1
];

6592 
	`as£π
–
pCur
->
eCurTy≥
==
CURTYPE_VTAB
 );

6593 if–
pCur
->
nuŒRow
 ){

6596 
pVèb
 = 
pCur
->
uc
.
pVCur
->pVtab;

6597 
pModuÀ
 = 
pVèb
->pModule;

6598 
	`as£π
–
pModuÀ
->
xNext
 );

6606 
rc
 = 
pModuÀ
->
	`xNext
(
pCur
->
uc
.
pVCur
);

6607 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6608 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6609 
ªs
 = 
pModuÀ
->
	`xEof
(
pCur
->
uc
.
pVCur
);

6610 
	`VdbeBønchTakí
(!
ªs
,2);

6611 if–!
ªs
 ){

6613 
jump_to_p2_™d_check_f‹_öãºu±
;

6615 
check_f‹_öãºu±
;

6619 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6626 
OP_VRíame
: {

6627 
sqlôe3_vèb
 *
pVèb
;

6628 
Mem
 *
pName
;

6630 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6631 
pName
 = &
aMem
[
pOp
->
p1
];

6632 
	`as£π
–
pVèb
->
pModuÀ
->
xRíame
 );

6633 
	`as£π
–
	`memIsVÆid
(
pName
) );

6634 
	`as£π
–
p
->
ªadO∆y
==0 );

6635 
	`REGISTER_TRACE
(
pOp
->
p1
, 
pName
);

6636 
	`as£π
–
pName
->
Êags
 & 
MEM_Så
 );

6637 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF8
 );

6638 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF16BE
 );

6639 
	`ã°ˇ£
–
pName
->
íc
==
SQLITE_UTF16LE
 );

6640 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pName
, 
SQLITE_UTF8
);

6641 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6642 
rc
 = 
pVèb
->
pModuÀ
->
	`xRíame
’Vèb, 
pName
->
z
);

6643 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6644 
p
->
expúed
 = 0;

6645 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6650 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


6678 
OP_VUpd©e
: {

6679 
sqlôe3_vèb
 *
pVèb
;

6680 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

6681 
nArg
;

6682 
i
;

6683 
sqlôe_öt64
 
rowid
;

6684 
Mem
 **
≠Arg
;

6685 
Mem
 *
pX
;

6687 
	`as£π
–
pOp
->
p2
==1 ||ÖOp->
p5
==
OE_Faû
 ||ÖOp->p5==
OE_Rﬁlback


6688 || 
pOp
->
p5
==
OE_Ab‹t
 ||ÖOp->p5==
OE_Ign‹e
 ||ÖOp->p5==
OE_Rïœ˚


6690 
	`as£π
–
p
->
ªadO∆y
==0 );

6691 
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

6692 if–
pVèb
==0 || 
	`NEVER
’Vèb->
pModuÀ
==0) ){

6693 
rc
 = 
SQLITE_LOCKED
;

6694 
ab‹t_due_to_îr‹
;

6696 
pModuÀ
 = 
pVèb
->pModule;

6697 
nArg
 = 
pOp
->
p2
;

6698 
	`as£π
–
pOp
->
p4ty≥
==
P4_VTAB
 );

6699 if–
	`ALWAYS
(
pModuÀ
->
xUpd©e
) ){

6700 
u8
 
vèbOnC⁄Êi˘
 = 
db
->vtabOnConflict;

6701 
≠Arg
 = 
p
->apArg;

6702 
pX
 = &
aMem
[
pOp
->
p3
];

6703 
i
=0; i<
nArg
; i++){

6704 
	`as£π
–
	`memIsVÆid
(
pX
) );

6705 
	`memAboutToCh™ge
(
p
, 
pX
);

6706 
≠Arg
[
i
] = 
pX
;

6707 
pX
++;

6709 
db
->
vèbOnC⁄Êi˘
 = 
pOp
->
p5
;

6710 
rc
 = 
pModuÀ
->
	`xUpd©e
(
pVèb
, 
nArg
, 
≠Arg
, &
rowid
);

6711 
db
->
vèbOnC⁄Êi˘
 = vtabOnConflict;

6712 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

6713 if–
rc
==
SQLITE_OK
 && 
pOp
->
p1
 ){

6714 
	`as£π
–
nArg
>1 && 
≠Arg
[0] && (≠Arg[0]->
Êags
&
MEM_NuŒ
) );

6715 
db
->
œ°Rowid
 =Üa°Rowid = 
rowid
;

6717 if–(
rc
&0xff)==
SQLITE_CONSTRAINT
 && 
pOp
->
p4
.
pVèb
->
bC⁄°øöt
 ){

6718 if–
pOp
->
p5
==
OE_Ign‹e
 ){

6719 
rc
 = 
SQLITE_OK
;

6721 
p
->
îr‹A˘i⁄
 = ((
pOp
->
p5
==
OE_Rïœ˚
Ë? 
OE_Ab‹t
 :ÖOp->p5);

6724 
p
->
nCh™ge
++;

6726 if–
rc
 ) 
ab‹t_due_to_îr‹
;

6732 #i‚de‡ 
SQLITE_OMIT_PAGER_PRAGMAS


6737 
OP_Pagecou¡
: {

6738 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6739 
pOut
->
u
.
i
 = 
	`sqlôe3BåìLa°Page
(
db
->
aDb
[
pOp
->
p1
].
pBt
);

6745 #i‚de‡ 
SQLITE_OMIT_PAGER_PRAGMAS


6754 
OP_MaxPg˙t
: {

6755 
√wMax
;

6756 
Båì
 *
pBt
;

6758 
pOut
 = 
	`out2PªªÀa£
(
p
, 
pOp
);

6759 
pBt
 = 
db
->
aDb
[
pOp
->
p1
].pBt;

6760 
√wMax
 = 0;

6761 if–
pOp
->
p3
 ){

6762 
√wMax
 = 
	`sqlôe3BåìLa°Page
(
pBt
);

6763 if–
√wMax
 < ()
pOp
->
p3
 )ÇewMax = ()pOp->p3;

6765 
pOut
->
u
.
i
 = 
	`sqlôe3BåìMaxPageCou¡
(
pBt
, 
√wMax
);

6783 
OP_Inô
: {

6784 *
zTø˚
;

6795 
	`as£π
–
pOp
->
p4
.
z
==0 || 
	`°∫cmp
(pOp->p4.z, "-" "- ", 3)==0 );

6797 #i‚de‡
SQLITE_OMIT_TRACE


6798 if–(
db
->
mTø˚
 & (
SQLITE_TRACE_STMT
|
SQLITE_TRACE_LEGACY
))!=0

6799 && !
p
->
doögRîun


6800 && (
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
))!=0

6802 #i‚de‡
SQLITE_OMIT_DEPRECATED


6803 if–
db
->
mTø˚
 & 
SQLITE_TRACE_LEGACY
 ){

6804 (*
x
)(*,c⁄° *Ë((*)(*,c⁄° *))
db
->
xTø˚
;

6805 *
z
 = 
	`sqlôe3VdbeEx∑ndSql
(
p
, 
zTø˚
);

6806 
	`x
(
db
->
pTø˚Arg
, 
z
);

6807 
	`sqlôe3_‰ì
(
z
);

6811 ()
db
->
	`xTø˚
(
SQLITE_TRACE_STMT
, db->
pTø˚Arg
, 
p
, 
zTø˚
);

6814 #ifde‡
SQLITE_USE_FCNTL_TRACE


6815 
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
);

6816 if–
zTø˚
 ){

6817 
i
;

6818 
i
=0; i<
db
->
nDb
; i++){

6819 if–
	`DbMaskTe°
(
p
->
båìMask
, 
i
)==0 ) ;

6820 
	`sqlôe3_fûe_c⁄åﬁ
(
db
, db->
aDb
[
i
].
zName
, 
SQLITE_FCNTL_TRACE
, 
zTø˚
);

6824 #ifde‡
SQLITE_DEBUG


6825 if–(
db
->
Êags
 & 
SQLITE_SqlTø˚
)!=0

6826 && (
zTø˚
 = (
pOp
->
p4
.
z
 ?ÖOp->p4.z : 
p
->
zSql
))!=0

6828 
	`sqlôe3DebugPrötf
("SQL-åa˚: %s\n", 
zTø˚
);

6832 if–
pOp
->
p2
 ) 
jump_to_p2
;

6836 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


6844 
OP_Curs‹Höt
: {

6845 
VdbeCurs‹
 *
pC
;

6847 
	`as£π
–
pOp
->
p1
>=0 &&ÖOp->p1<
p
->
nCurs‹
 );

6848 
	`as£π
–
pOp
->
p4ty≥
==
P4_EXPR
 );

6849 
pC
 = 
p
->
≠C§
[
pOp
->
p1
];

6850 if–
pC
 ){

6851 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

6852 
	`sqlôe3BåìCurs‹Höt
(
pC
->
uc
.
pCurs‹
, 
BTREE_HINT_RANGE
,

6853 
pOp
->
p4
.
pEx¥
, 
aMem
);

6871 
	`as£π
–
pOp
->
›code
==
OP_No›
 ||ÖOp->›code==
OP_Ex∂aö
 );

6883 #ifde‡
VDBE_PROFILE


6885 
u64
 
ídTime
 = 
	`sqlôe3Hwtime
();

6886 if–
ídTime
>
°¨t
 ) 
pOrigOp
->
cy˛es
 +=ÉndTime - start;

6887 
pOrigOp
->
˙t
++;

6896 #i‚de‡
NDEBUG


6897 
	`as£π
–
pOp
>=&
aOp
[-1] &&ÖOp<&aOp[
p
->
nOp
-1] );

6899 #ifde‡
SQLITE_DEBUG


6900 if–
db
->
Êags
 & 
SQLITE_VdbeTø˚
 ){

6901 
u8
 
›Pr›îty
 = 
sqlôe3OpcodePr›îty
[
pOrigOp
->
›code
];

6902 if–
rc
!=0 ) 
	`¥ötf
("rc=%d\n",rc);

6903 if–
›Pr›îty
 & (
OPFLG_OUT2
) ){

6904 
	`ªgi°îTø˚
(
pOrigOp
->
p2
, &
aMem
[pOrigOp->p2]);

6906 if–
›Pr›îty
 & 
OPFLG_OUT3
 ){

6907 
	`ªgi°îTø˚
(
pOrigOp
->
p3
, &
aMem
[pOrigOp->p3]);

6917 
ab‹t_due_to_îr‹
:

6918 if–
db
->
mÆlocFaûed
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

6919 
	`as£π
–
rc
 );

6920 if–
p
->
zEºMsg
==0 && 
rc
!=
SQLITE_IOERR_NOMEM
 ){

6921 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3EºSå
(
rc
));

6923 
p
->
rc
 =Ñc;

6924 
	`sqlôe3Sy°emEº‹
(
db
, 
rc
);

6925 
	`ã°ˇ£
–
sqlôe3GlobÆC⁄fig
.
xLog
!=0 );

6926 
	`sqlôe3_log
(
rc
, "statementábortsát %d: [%s] %s",

6927 ()(
pOp
 - 
aOp
), 
p
->
zSql
,Ö->
zEºMsg
);

6928 
	`sqlôe3VdbeHÆt
(
p
);

6929 if–
rc
==
SQLITE_IOERR_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

6930 
rc
 = 
SQLITE_ERROR
;

6931 if–
ª£tSchemaOnFau…
>0 ){

6932 
	`sqlôe3Re£tO√Schema
(
db
, 
ª£tSchemaOnFau…
-1);

6938 
vdbe_ªtu∫
:

6939 
db
->
œ°Rowid
 =ÜastRowid;

6940 
	`ã°ˇ£
–
nVmSãp
>0 );

6941 
p
->
aCou¡î
[
SQLITE_STMTSTATUS_VM_STEP
] +()
nVmSãp
;

6942 
	`sqlôe3VdbeLóve
(
p
);

6943 
	`as£π
–
rc
!=
SQLITE_OK
 || 
nExåaDñëe
==0

6944 || 
	`sqlôe3_°æike
("DELETE%",
p
->
zSql
,0)!=0

6946  
rc
;

6951 
too_big
:

6952 
	`sqlôe3VdbeEº‹
(
p
, "string or blobÅoo big");

6953 
rc
 = 
SQLITE_TOOBIG
;

6954 
ab‹t_due_to_îr‹
;

6958 
no_mem
:

6959 
	`sqlôe3OomFau…
(
db
);

6960 
	`sqlôe3VdbeEº‹
(
p
, "out of memory");

6961 
rc
 = 
SQLITE_NOMEM_BKPT
;

6962 
ab‹t_due_to_îr‹
;

6967 
ab‹t_due_to_öãºu±
:

6968 
	`as£π
–
db
->
u1
.
isI¡îru±ed
 );

6969 
rc
 = 
db
->
mÆlocFaûed
 ? 
SQLITE_NOMEM_BKPT
 : 
SQLITE_INTERRUPT
;

6970 
p
->
rc
 =Ñc;

6971 
	`sqlôe3VdbeEº‹
(
p
, "%s", 
	`sqlôe3EºSå
(
rc
));

6972 
ab‹t_due_to_îr‹
;

6973 
	}
}

	@vdbe.h

18 #i‚de‡
SQLITE_VDBE_H


19 
	#SQLITE_VDBE_H


	)

20 
	~<°dio.h
>

27 
Vdbe
 
	tVdbe
;

33 
Mem
 
	tMem
;

34 
SubProgøm
 
	tSubProgøm
;

41 
	sVdbeOp
 {

42 
u8
 
	m›code
;

43 sig√d 
	mp4ty≥
;

44 
u8
 
	mnŸU£d1
;

45 
u8
 
	mp5
;

46 
	mp1
;

47 
	mp2
;

48 
	mp3
;

49 
	up4uni⁄
 {

50 
	mi
;

51 *
	mp
;

52 *
	mz
;

53 
i64
 *
	mpI64
;

54 *
	mpRól
;

55 
FuncDef
 *
	mpFunc
;

56 
sqlôe3_c⁄ãxt
 *
	mpCtx
;

57 
CﬁlSeq
 *
	mpCﬁl
;

58 
Mem
 *
	mpMem
;

59 
VTabÀ
 *
	mpVèb
;

60 
KeyInfo
 *
	mpKeyInfo
;

61 *
	mai
;

62 
SubProgøm
 *
	mpProgøm
;

63 
TabÀ
 *
	mpTab
;

64 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


65 
Ex¥
 *
	mpEx¥
;

67 (*
	mxAdv™˚
)(
	mBtCurs‹
 *, *);

68 } 
	mp4
;

69 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


70 *
	mzCommít
;

72 #ifde‡
VDBE_PROFILE


73 
u32
 
	m˙t
;

74 
u64
 
	mcy˛es
;

76 #ifde‡
SQLITE_VDBE_COVERAGE


77 
	miSrcLöe
;

80 
VdbeOp
 
	tVdbeOp
;

86 
	sSubProgøm
 {

87 
VdbeOp
 *
	maOp
;

88 
	mnOp
;

89 
	mnMem
;

90 
	mnC§
;

91 
	mnOn˚
;

92 *
	mtokí
;

93 
SubProgøm
 *
	mpNext
;

100 
	sVdbeOpLi°
 {

101 
u8
 
	m›code
;

102 sig√d 
	mp1
;

103 sig√d 
	mp2
;

104 sig√d 
	mp3
;

106 
VdbeOpLi°
 
	tVdbeOpLi°
;

111 
	#P4_NOTUSED
 0

	)

112 
	#P4_DYNAMIC
 (-1Ë

	)

113 
	#P4_STATIC
 (-2Ë

	)

114 
	#P4_COLLSEQ
 (-4Ë

	)

115 
	#P4_FUNCDEF
 (-5Ë

	)

116 
	#P4_KEYINFO
 (-6Ë

	)

117 
	#P4_EXPR
 (-7Ë

	)

118 
	#P4_MEM
 (-8Ë

	)

119 
	#P4_TRANSIENT
 0

	)

120 
	#P4_VTAB
 (-10Ë

	)

121 
	#P4_MPRINTF
 (-11Ë

	)

122 
	#P4_REAL
 (-12Ë

	)

123 
	#P4_INT64
 (-13Ë

	)

124 
	#P4_INT32
 (-14Ë

	)

125 
	#P4_INTARRAY
 (-15Ë

	)

126 
	#P4_SUBPROGRAM
 (-18Ë

	)

127 
	#P4_ADVANCE
 (-19Ë

	)

128 
	#P4_TABLE
 (-20Ë

	)

129 
	#P4_FUNCCTX
 (-21Ë

	)

132 
	#P5_C⁄°øötNŸNuŒ
 1

	)

133 
	#P5_C⁄°øötUnique
 2

	)

134 
	#P5_C⁄°øötCheck
 3

	)

135 
	#P5_C⁄°øötFK
 4

	)

141 
	#COLNAME_NAME
 0

	)

142 
	#COLNAME_DECLTYPE
 1

	)

143 
	#COLNAME_DATABASE
 2

	)

144 
	#COLNAME_TABLE
 3

	)

145 
	#COLNAME_COLUMN
 4

	)

146 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


147 
	#COLNAME_N
 5

	)

149 #ifde‡
SQLITE_OMIT_DECLTYPE


150 
	#COLNAME_N
 1

	)

152 
	#COLNAME_N
 2

	)

162 
	#ADDR
(
X
Ë(-1-(X))

	)

168 
	~"›codes.h
"

174 
Vdbe
 *
sqlôe3VdbeCª©e
(
P¨£
*);

175 
sqlôe3VdbeAddOp0
(
Vdbe
*,);

176 
sqlôe3VdbeAddOp1
(
Vdbe
*,,);

177 
sqlôe3VdbeAddOp2
(
Vdbe
*,,,);

178 
sqlôe3VdbeGŸo
(
Vdbe
*,);

179 
sqlôe3VdbeLﬂdSåög
(
Vdbe
*,,const *);

180 
sqlôe3VdbeMu…iLﬂd
(
Vdbe
*,,const *,...);

181 
sqlôe3VdbeAddOp3
(
Vdbe
*,,,,);

182 
sqlôe3VdbeAddOp4
(
Vdbe
*,,,,,c⁄° *
zP4
,);

183 
sqlôe3VdbeAddOp4Dup8
(
Vdbe
*,,,,,c⁄° 
u8
*,);

184 
sqlôe3VdbeAddOp4I¡
(
Vdbe
*,,,,,);

185 
sqlôe3VdbeEndC‹outöe
(
Vdbe
*,);

186 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_TEST_REALLOC_STRESS
)

187 
sqlôe3VdbeVîifyNoMÆlocRequúed
(
Vdbe
 *
p
, 
N
);

189 
	#sqlôe3VdbeVîifyNoMÆlocRequúed
(
A
,
B
)

	)

191 
VdbeOp
 *
sqlôe3VdbeAddOpLi°
(
Vdbe
*, 
nOp
, 
VdbeOpLi°
 c⁄° *
aOp
, 
iLöío
);

192 
sqlôe3VdbeAddP¨£SchemaOp
(
Vdbe
*,,*);

193 
sqlôe3VdbeCh™geOpcode
(
Vdbe
*, 
u32
 
addr
, 
u8
);

194 
sqlôe3VdbeCh™geP1
(
Vdbe
*, 
u32
 
addr
, 
P1
);

195 
sqlôe3VdbeCh™geP2
(
Vdbe
*, 
u32
 
addr
, 
P2
);

196 
sqlôe3VdbeCh™geP3
(
Vdbe
*, 
u32
 
addr
, 
P3
);

197 
sqlôe3VdbeCh™geP5
(
Vdbe
*, 
u8
 
P5
);

198 
sqlôe3VdbeJumpHîe
(
Vdbe
*, 
addr
);

199 
sqlôe3VdbeCh™geToNo›
(
Vdbe
*, 
addr
);

200 
sqlôe3VdbeDñëePri‹Opcode
(
Vdbe
*, 
u8
 
›
);

201 
sqlôe3VdbeCh™geP4
(
Vdbe
*, 
addr
, c⁄° *
zP4
, 
N
);

202 
sqlôe3VdbeSëP4KeyInfo
(
P¨£
*, 
Index
*);

203 
sqlôe3VdbeU£sBåì
(
Vdbe
*, );

204 
VdbeOp
 *
sqlôe3VdbeGëOp
(
Vdbe
*, );

205 
sqlôe3VdbeMakeLabñ
(
Vdbe
*);

206 
sqlôe3VdbeRunO∆yOn˚
(
Vdbe
*);

207 
sqlôe3VdbeReußbÀ
(
Vdbe
*);

208 
sqlôe3VdbeDñëe
(
Vdbe
*);

209 
sqlôe3VdbeCÀ¨Obje˘
(
sqlôe3
*,
Vdbe
*);

210 
sqlôe3VdbeMakeRódy
(
Vdbe
*,
P¨£
*);

211 
sqlôe3VdbeFöÆize
(
Vdbe
*);

212 
sqlôe3VdbeResﬁveLabñ
(
Vdbe
*, );

213 
sqlôe3VdbeCuºítAddr
(
Vdbe
*);

214 #ifde‡
SQLITE_DEBUG


215 
sqlôe3VdbeAs£πMayAb‹t
(
Vdbe
 *, );

217 
sqlôe3VdbeRe£tSãpResu…
(
Vdbe
*);

218 
sqlôe3VdbeRewöd
(
Vdbe
*);

219 
sqlôe3VdbeRe£t
(
Vdbe
*);

220 
sqlôe3VdbeSëNumCﬁs
(
Vdbe
*,);

221 
sqlôe3VdbeSëCﬁName
(
Vdbe
*, , , const *, (*)(*));

222 
	`sqlôe3VdbeCou¡Ch™ges
(
Vdbe
*);

223 
sqlôe3
 *
	`sqlôe3VdbeDb
(
Vdbe
*);

224 
	`sqlôe3VdbeSëSql
(
Vdbe
*, c⁄° *
z
, 
n
, );

225 
	`sqlôe3VdbeSw≠
(
Vdbe
*,Vdbe*);

226 
VdbeOp
 *
	`sqlôe3VdbeTakeOpAºay
(
Vdbe
*, *, *);

227 
sqlôe3_vÆue
 *
	`sqlôe3VdbeGëBoundVÆue
(
Vdbe
*, , 
u8
);

228 
	`sqlôe3VdbeSëV¨mask
(
Vdbe
*, );

229 #i‚de‡
SQLITE_OMIT_TRACE


230 *
	`sqlôe3VdbeEx∑ndSql
(
Vdbe
*, const *);

232 
	`sqlôe3MemCom∑ª
(c⁄° 
Mem
*, c⁄° Mem*, c⁄° 
CﬁlSeq
*);

234 
	`sqlôe3VdbeRec‹dU≈ack
(
KeyInfo
*,,c⁄° *,
U≈ackedRec‹d
*);

235 
	`sqlôe3VdbeRec‹dCom∑ª
(,c⁄° *,
U≈ackedRec‹d
*);

236 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(, c⁄° *, 
U≈ackedRec‹d
 *, );

237 
U≈ackedRec‹d
 *
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
KeyInfo
 *, *, , **);

239 (*
	tRec‹dCom∑ª
)(,c⁄° *,
	tU≈ackedRec‹d
*);

240 
Rec‹dCom∑ª
 
	`sqlôe3VdbeFödCom∑ª
(
U≈ackedRec‹d
*);

242 #i‚de‡
SQLITE_OMIT_TRIGGER


243 
	`sqlôe3VdbeLökSubProgøm
(
Vdbe
 *, 
SubProgøm
 *);

253 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


254 
	`sqlôe3VdbeCommít
(
Vdbe
*, const *, ...);

255 
	#VdbeCommít
(
X
Ë
sqlôe3VdbeCommít
 
	)
X

256 
	`sqlôe3VdbeNo›Commít
(
Vdbe
*, const *, ...);

257 
	#VdbeNo›Commít
(
X
Ë
sqlôe3VdbeNo›Commít
 
	)
X

258 #ifde‡
SQLITE_ENABLE_MODULE_COMMENTS


259 
	#VdbeModuÀCommít
(
X
Ë
sqlôe3VdbeNo›Commít
 
	)
X

261 
	#VdbeModuÀCommít
(
X
)

	)

264 
	#VdbeCommít
(
X
)

	)

265 
	#VdbeNo›Commít
(
X
)

	)

266 
	#VdbeModuÀCommít
(
X
)

	)

291 #ifde‡
SQLITE_VDBE_COVERAGE


292 
	`sqlôe3VdbeSëLöeNumbî
(
Vdbe
*,);

293 
	#VdbeCovîage
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,
__LINE__
)

	)

294 
	#VdbeCovîageIf
(
v
,
x
Ëif(x)
	`sqlôe3VdbeSëLöeNumbî
(v,
__LINE__
)

	)

295 
	#VdbeCovîageAlwaysTakí
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,2);

	)

296 
	#VdbeCovîageNevîTakí
(
v
Ë
	`sqlôe3VdbeSëLöeNumbî
(v,1);

	)

297 
	#VDBE_OFFSET_LINENO
(
x
Ë(
__LINE__
+x)

	)

299 
	#VdbeCovîage
(
v
)

	)

300 
	#VdbeCovîageIf
(
v
,
x
)

	)

301 
	#VdbeCovîageAlwaysTakí
(
v
)

	)

302 
	#VdbeCovîageNevîTakí
(
v
)

	)

303 
	#VDBE_OFFSET_LINENO
(
x
Ë0

	)

306 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


307 
	`sqlôe3VdbeSˇnSètus
(
Vdbe
*, , , , 
LogE°
, const *);

309 
	#sqlôe3VdbeSˇnSètus
(
a
,
b
,
c
,
d
,
e
)

	)

	@vdbeInt.h

18 #i‚de‡
SQLITE_VDBEINT_H


19 
	#SQLITE_VDBEINT_H


	)

25 #i‚de‡
SQLITE_MAX_SCHEMA_RETRY


26 
	#SQLITE_MAX_SCHEMA_RETRY
 50

	)

33 #i‡!
deföed
(
SQLITE_OMIT_EXPLAIN
Ë|| !deföed(
NDEBUG
) \

34 || 
deföed
(
VDBE_PROFILE
Ë|| 
	$deföed
(
SQLITE_DEBUG
)

35 
	#VDBE_DISPLAY_P4
 1

	)

37 
	#VDBE_DISPLAY_P4
 0

	)

45 
VdbeOp
 
	tOp
;

50 
	tBoﬁ
;

53 
VdbeS‹ãr
 
	tVdbeS‹ãr
;

56 
Ex∂aö
 
	tEx∂aö
;

59 
AuxD©a
 
	tAuxD©a
;

62 
	#CURTYPE_BTREE
 0

	)

63 
	#CURTYPE_SORTER
 1

	)

64 
	#CURTYPE_VTAB
 2

	)

65 
	#CURTYPE_PSEUDO
 3

	)

77 
VdbeCurs‹
 
	tVdbeCurs‹
;

78 
	sVdbeCurs‹
 {

79 
u8
 
eCurTy≥
;

80 
i8
 
iDb
;

81 
u8
 
nuŒRow
;

82 
u8
 
de„ºedMovëo
;

83 
u8
 
isTabÀ
;

84 #ifde‡
SQLITE_DEBUG


85 
u8
 
£ekOp
;

86 
u8
 
wrFœg
;

88 
Boﬁ
 
isEphemîÆ
:1;

89 
Boﬁ
 
u£R™domRowid
:1;

90 
Boﬁ
 
isOrdîed
:1;

91 
Pgno
 
pgnoRoŸ
;

92 
i16
 
nFõld
;

93 
u16
 
nHdrP¨£d
;

95 
BtCurs‹
 *
pCurs‹
;

96 
sqlôe3_vèb_curs‹
 *
pVCur
;

97 
p£udoTabÀReg
;

98 
VdbeS‹ãr
 *
pS‹ãr
;

99 } 
uc
;

100 
Båì
 *
pBt
;

101 
KeyInfo
 *
pKeyInfo
;

102 
£ekResu…
;

103 
i64
 
£qCou¡
;

104 
i64
 
movëoT¨gë
;

105 
VdbeCurs‹
 *
pA…Curs‹
;

106 *
aA…M≠
;

107 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


108 
u64
 
maskU£d
;

120 
u32
 
ˇcheSètus
;

121 
u32
 
∑ylﬂdSize
;

122 
u32
 
szRow
;

123 
u32
 
iHdrOff£t
;

124 c⁄° 
u8
 *
aRow
;

125 
u32
 *
aOff£t
;

126 
u32
 
aTy≥
[1];

153 
VdbeFøme
 
	tVdbeFøme
;

154 
	sVdbeFøme
 {

155 
Vdbe
 *
v
;

156 
VdbeFøme
 *
pP¨ít
;

157 
Op
 *
aOp
;

158 
i64
 *
™Exec
;

159 
Mem
 *
aMem
;

160 
u8
 *
aOn˚Fœg
;

161 
VdbeCurs‹
 **
≠C§
;

162 *
tokí
;

163 
i64
 
œ°Rowid
;

164 
AuxD©a
 *
pAuxD©a
;

165 
nCurs‹
;

166 
pc
;

167 
nOp
;

168 
nMem
;

169 
nOn˚Fœg
;

170 
nChûdMem
;

171 
nChûdC§
;

172 
nCh™ge
;

173 
nDbCh™ge
;

176 
	#VdbeFømeMem
(
p
Ë((
Mem
 *)&((
u8
 *Ì)[
	`ROUND8
((
VdbeFøme
))])

	)

181 
	#CACHE_STALE
 0

	)

188 
	sMem
 {

189 
	uMemVÆue
 {

190 
r
;

191 
i64
 
i
;

192 
nZîo
;

193 
FuncDef
 *
pDef
;

194 
RowSë
 *
pRowSë
;

195 
VdbeFøme
 *
pFøme
;

196 } 
u
;

197 
u16
 
Êags
;

198 
u8
 
íc
;

199 
u8
 
eSubty≥
;

200 
n
;

201 *
z
;

203 *
zMÆloc
;

204 
szMÆloc
;

205 
u32
 
uTemp
;

206 
sqlôe3
 *
db
;

207 (*
xDñ
)(*);

208 #ifde‡
SQLITE_DEBUG


209 
Mem
 *
pSc›yFrom
;

210 *
pFûÀr
;

218 
	#MEMCELLSIZE
 
	`off£tof
(
Mem
,
zMÆloc
)

	)

232 
	#MEM_NuŒ
 0x0001

	)

233 
	#MEM_Så
 0x0002

	)

234 
	#MEM_I¡
 0x0004

	)

235 
	#MEM_Ról
 0x0008

	)

236 
	#MEM_Blob
 0x0010

	)

237 
	#MEM_AffMask
 0x001‡

	)

238 
	#MEM_RowSë
 0x0020

	)

239 
	#MEM_Føme
 0x0040

	)

240 
	#MEM_Undeföed
 0x0080

	)

241 
	#MEM_CÀ¨ed
 0x0100

	)

242 
	#MEM_Ty≥Mask
 0x81f‡

	)

250 
	#MEM_Tîm
 0x0200

	)

251 
	#MEM_Dyn
 0x0400

	)

252 
	#MEM_Sètic
 0x0800

	)

253 
	#MEM_Ephem
 0x1000

	)

254 
	#MEM_Agg
 0x2000

	)

255 
	#MEM_Zîo
 0x4000

	)

256 
	#MEM_Subty≥
 0x8000

	)

257 #ifde‡
SQLITE_OMIT_INCRBLOB


258 #unde‡
MEM_Zîo


259 
	#MEM_Zîo
 0x0000

	)

265 
	#VdbeMemDy«mic
(
X
) \

266 (((
X
)->
Êags
&(
MEM_Agg
|
MEM_Dyn
|
MEM_RowSë
|
MEM_Føme
))!=0)

	)

271 
	#MemSëTy≥Fœg
(
p
, 
f
) \

272 ((
p
)->
Êags
 = (’)->Êags&~(
MEM_Ty≥Mask
|
MEM_Zîo
))|
f
)

	)

278 #ifde‡
SQLITE_DEBUG


279 
	#memIsVÆid
(
M
Ë((M)->
Êags
 & 
MEM_Undeföed
)==0

	)

289 
	sAuxD©a
 {

290 
iOp
;

291 
iArg
;

292 *
pAux
;

293 (*
xDñëe
)(*);

294 
AuxD©a
 *
pNext
;

310 
	ssqlôe3_c⁄ãxt
 {

311 
Mem
 *
pOut
;

312 
FuncDef
 *
pFunc
;

313 
Mem
 *
pMem
;

314 
Vdbe
 *
pVdbe
;

315 
iOp
;

316 
isEº‹
;

317 
u8
 
skùFœg
;

318 
u8
 
fEº‹OrAux
;

319 
u8
 
¨gc
;

320 
sqlôe3_vÆue
 *
¨gv
[1];

327 
	sEx∂aö
 {

328 
Vdbe
 *
pVdbe
;

329 
SåAccum
 
°r
;

330 
nIndít
;

331 
u16
 
aIndít
[100];

332 
zBa£
[100];

338 
	tb·
;

340 
SˇnSètus
 
	tSˇnSètus
;

341 
	sSˇnSètus
 {

342 
addrEx∂aö
;

343 
addrLo›
;

344 
addrVisô
;

345 
iSñe˘ID
;

346 
LogE°
 
nE°
;

347 *
zName
;

357 
	sVdbe
 {

358 
sqlôe3
 *
db
;

359 
Op
 *
aOp
;

360 
Mem
 *
aMem
;

361 
Mem
 **
≠Arg
;

362 
Mem
 *
aCﬁName
;

363 
Mem
 *
pResu…Së
;

364 
P¨£
 *
pP¨£
;

365 
nMem
;

366 
nOp
;

367 
nCurs‹
;

368 
u32
 
magic
;

369 *
zEºMsg
;

370 
Vdbe
 *
pPªv
,*
pNext
;

371 
VdbeCurs‹
 **
≠C§
;

372 
Mem
 *
aV¨
;

373 **
azV¨
;

374 
ynV¨
 
nV¨
;

375 
ynV¨
 
nzV¨
;

376 
u32
 
ˇcheCå
;

377 
pc
;

378 
rc
;

379 #ifde‡
SQLITE_DEBUG


380 
rcAµ
;

382 
u16
 
nResCﬁumn
;

383 
u8
 
îr‹A˘i⁄
;

384 
b·
 
expúed
:1;

385 
b·
 
doögRîun
:1;

386 
u8
 
möWrôeFûeF‹m©
;

387 
b·
 
ex∂aö
:2;

388 
b·
 
ch™geC¡On
:1;

389 
b·
 
runO∆yOn˚
:1;

390 
b·
 
u£sStmtJou∫Æ
:1;

391 
b·
 
ªadO∆y
:1;

392 
b·
 
bIsRódî
:1;

393 
b·
 
isPª∑ªV2
:1;

394 
nCh™ge
;

395 
yDbMask
 
båìMask
;

396 
yDbMask
 
lockMask
;

397 
iSèãmít
;

398 
u32
 
aCou¡î
[5];

399 #i‚de‡
SQLITE_OMIT_TRACE


400 
i64
 
°¨tTime
;

402 
i64
 
iCuºítTime
;

403 
i64
 
nFkC⁄°øöt
;

404 
i64
 
nStmtDefC⁄s
;

405 
i64
 
nStmtDefImmC⁄s
;

406 *
zSql
;

407 *
pFªe
;

408 
VdbeFøme
 *
pFøme
;

409 
VdbeFøme
 *
pDñFøme
;

410 
nFøme
;

411 
u32
 
expmask
;

412 
SubProgøm
 *
pProgøm
;

413 
nOn˚Fœg
;

414 
u8
 *
aOn˚Fœg
;

415 
AuxD©a
 *
pAuxD©a
;

416 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


417 
i64
 *
™Exec
;

418 
nSˇn
;

419 
SˇnSètus
 *
aSˇn
;

426 
	#VDBE_MAGIC_INIT
 0x26b˚Ø5

	)

427 
	#VDBE_MAGIC_RUN
 0xbdf20da3

	)

428 
	#VDBE_MAGIC_HALT
 0x519c2973

	)

429 
	#VDBE_MAGIC_DEAD
 0xb606c3c8

	)

435 
	sPªUpd©e
 {

436 
Vdbe
 *
v
;

437 
VdbeCurs‹
 *
pC§
;

438 
›
;

439 
u8
 *
aRec‹d
;

440 
KeyInfo
 
keyöfo
;

441 
U≈ackedRec‹d
 *
pU≈acked
;

442 
U≈ackedRec‹d
 *
pNewU≈acked
;

443 
iNewReg
;

444 
i64
 
iKey1
;

445 
i64
 
iKey2
;

446 
iPKey
;

447 
Mem
 *
aNew
;

453 
	`sqlôe3VdbeEº‹
(
Vdbe
*, const *, ...);

454 
	`sqlôe3VdbeFªeCurs‹
(
Vdbe
 *, 
VdbeCurs‹
*);

455 
	`sqlôeVdbeP›Sèck
(
Vdbe
*,);

456 
	`sqlôe3VdbeCurs‹Movëo
(
VdbeCurs‹
**, *);

457 
	`sqlôe3VdbeCurs‹Re°‹e
(
VdbeCurs‹
*);

458 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

459 
	`sqlôe3VdbePrötOp
(
FILE
*, , 
Op
*);

461 
u32
 
	`sqlôe3VdbeSîülTy≥Lí
(u32);

462 
u8
 
	`sqlôe3VdbeO√ByãSîülTy≥Lí
(u8);

463 
u32
 
	`sqlôe3VdbeSîülTy≥
(
Mem
*, , u32*);

464 
u32
 
	`sqlôe3VdbeSîülPut
(*, 
Mem
*, u32);

465 
u32
 
	`sqlôe3VdbeSîülGë
(c⁄° *, u32, 
Mem
*);

466 
	`sqlôe3VdbeDñëeAuxD©a
(
sqlôe3
*, 
AuxD©a
**, , );

468 
	`sqlôe2BåìKeyCom∑ª
(
BtCurs‹
 *, const *, , , *);

469 
	`sqlôe3VdbeIdxKeyCom∑ª
(
sqlôe3
*,
VdbeCurs‹
*,
U≈ackedRec‹d
*,*);

470 
	`sqlôe3VdbeIdxRowid
(
sqlôe3
*, 
BtCurs‹
*, 
i64
*);

471 
	`sqlôe3VdbeExec
(
Vdbe
*);

472 
	`sqlôe3VdbeLi°
(
Vdbe
*);

473 
	`sqlôe3VdbeHÆt
(
Vdbe
*);

474 
	`sqlôe3VdbeCh™geEncodög
(
Mem
 *, );

475 
	`sqlôe3VdbeMemTooBig
(
Mem
*);

476 
	`sqlôe3VdbeMemC›y
(
Mem
*, const Mem*);

477 
	`sqlôe3VdbeMemShÆlowC›y
(
Mem
*, const Mem*, );

478 
	`sqlôe3VdbeMemMove
(
Mem
*, Mem*);

479 
	`sqlôe3VdbeMemNulTîmö©e
(
Mem
*);

480 
	`sqlôe3VdbeMemSëSå
(
Mem
*, c⁄° *, , 
u8
, (*)(*));

481 
	`sqlôe3VdbeMemSëI¡64
(
Mem
*, 
i64
);

482 #ifde‡
SQLITE_OMIT_FLOATING_POINT


483 
	#sqlôe3VdbeMemSëDoubÀ
 
sqlôe3VdbeMemSëI¡64


	)

485 
	`sqlôe3VdbeMemSëDoubÀ
(
Mem
*, );

487 
	`sqlôe3VdbeMemInô
(
Mem
*,
sqlôe3
*,
u16
);

488 
	`sqlôe3VdbeMemSëNuŒ
(
Mem
*);

489 
	`sqlôe3VdbeMemSëZîoBlob
(
Mem
*,);

490 
	`sqlôe3VdbeMemSëRowSë
(
Mem
*);

491 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
Mem
*);

492 
	`sqlôe3VdbeMemSåögify
(
Mem
*, 
u8
, u8);

493 
i64
 
	`sqlôe3VdbeI¡VÆue
(
Mem
*);

494 
	`sqlôe3VdbeMemI¡egîify
(
Mem
*);

495 
	`sqlôe3VdbeRólVÆue
(
Mem
*);

496 
	`sqlôe3VdbeI¡egîAfföôy
(
Mem
*);

497 
	`sqlôe3VdbeMemRólify
(
Mem
*);

498 
	`sqlôe3VdbeMemNumîify
(
Mem
*);

499 
	`sqlôe3VdbeMemCa°
(
Mem
*,
u8
,u8);

500 
	`sqlôe3VdbeMemFromBåì
(
BtCurs‹
*,
u32
,u32,,
Mem
*);

501 
	`sqlôe3VdbeMemRñó£
(
Mem
 *
p
);

502 
	`sqlôe3VdbeMemFöÆize
(
Mem
*, 
FuncDef
*);

503 c⁄° *
	`sqlôe3OpcodeName
();

504 
	`sqlôe3VdbeMemGrow
(
Mem
 *
pMem
, 
n
, 
¥e£rve
);

505 
	`sqlôe3VdbeMemCÀ¨AndResize
(
Mem
 *
pMem
, 
n
);

506 
	`sqlôe3VdbeClo£Sèãmít
(
Vdbe
 *, );

507 
	`sqlôe3VdbeFømeDñëe
(
VdbeFøme
*);

508 
	`sqlôe3VdbeFømeRe°‹e
(
VdbeFøme
 *);

509 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


510 
	`sqlôe3VdbePªUpd©eHook
(
Vdbe
*,
VdbeCurs‹
*,,c⁄° *,
TabÀ
*,
i64
,);

512 
	`sqlôe3VdbeTøns„rEº‹
(
Vdbe
 *
p
);

514 
	`sqlôe3VdbeS‹ãrInô
(
sqlôe3
 *, , 
VdbeCurs‹
 *);

515 
	`sqlôe3VdbeS‹ãrRe£t
(
sqlôe3
 *, 
VdbeS‹ãr
 *);

516 
	`sqlôe3VdbeS‹ãrClo£
(
sqlôe3
 *, 
VdbeCurs‹
 *);

517 
	`sqlôe3VdbeS‹ãrRowkey
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *);

518 
	`sqlôe3VdbeS‹ãrNext
(
sqlôe3
 *, c⁄° 
VdbeCurs‹
 *, *);

519 
	`sqlôe3VdbeS‹ãrRewöd
(c⁄° 
VdbeCurs‹
 *, *);

520 
	`sqlôe3VdbeS‹ãrWrôe
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *);

521 
	`sqlôe3VdbeS‹ãrCom∑ª
(c⁄° 
VdbeCurs‹
 *, 
Mem
 *, , *);

523 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
)

524 
	`sqlôe3VdbeE¡î
(
Vdbe
*);

526 
	#sqlôe3VdbeE¡î
(
X
)

	)

529 #i‡!
	`deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE
>0

530 
	`sqlôe3VdbeLóve
(
Vdbe
*);

532 
	#sqlôe3VdbeLóve
(
X
)

	)

535 #ifde‡
SQLITE_DEBUG


536 
	`sqlôe3VdbeMemAboutToCh™ge
(
Vdbe
*,
Mem
*);

537 
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
Mem
*);

540 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


541 
	`sqlôe3VdbeCheckFk
(
Vdbe
 *, );

543 
	#sqlôe3VdbeCheckFk
(
p
,
i
Ë0

	)

546 
	`sqlôe3VdbeMemTøn¶©e
(
Mem
*, 
u8
);

547 #ifde‡
SQLITE_DEBUG


548 
	`sqlôe3VdbePrötSql
(
Vdbe
*);

549 
	`sqlôe3VdbeMemPªâyPröt
(
Mem
 *
pMem
, *
zBuf
);

551 
	`sqlôe3VdbeMemH™dÀBom
(
Mem
 *
pMem
);

553 #i‚de‡
SQLITE_OMIT_INCRBLOB


554 
	`sqlôe3VdbeMemEx∑ndBlob
(
Mem
 *);

555 
	#Ex∑ndBlob
(
P
Ë(((P)->
Êags
&
MEM_Zîo
)?
	`sqlôe3VdbeMemEx∑ndBlob
(P):0)

	)

557 
	#sqlôe3VdbeMemEx∑ndBlob
(
x
Ë
SQLITE_OK


	)

558 
	#Ex∑ndBlob
(
P
Ë
SQLITE_OK


	)

	@vdbeapi.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

19 #i‚de‡
SQLITE_OMIT_DEPRECATED


28 
	$sqlôe3_expúed
(
sqlôe3_°mt
 *
pStmt
){

29 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

30  
p
==0 ||Ö->
expúed
;

31 
	}
}

39 
	$vdbeSa„ty
(
Vdbe
 *
p
){

40 if–
p
->
db
==0 ){

41 
	`sqlôe3_log
(
SQLITE_MISUSE
, "API called with finalizedÖrepared statement");

46 
	}
}

47 
	$vdbeSa„tyNŸNuŒ
(
Vdbe
 *
p
){

48 if–
p
==0 ){

49 
	`sqlôe3_log
(
SQLITE_MISUSE
, "API called with NULLÖrepared statement");

52  
	`vdbeSa„ty
(
p
);

54 
	}
}

56 #i‚de‡
SQLITE_OMIT_TRACE


61 
SQLITE_NOINLINE
 
	$övokeProfûeCÆlback
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

62 
sqlôe3_öt64
 
iNow
;

63 
sqlôe3_öt64
 
iEœp£
;

64 
	`as£π
–
p
->
°¨tTime
>0 );

65 
	`as£π
–
db
->
xProfûe
!=0 || (db->
mTø˚
 & 
SQLITE_TRACE_PROFILE
)!=0 );

66 
	`as£π
–
db
->
öô
.
busy
==0 );

67 
	`as£π
–
p
->
zSql
!=0 );

68 
	`sqlôe3OsCuºítTimeI¡64
(
db
->
pVfs
, &
iNow
);

69 
iEœp£
 = (
iNow
 - 
p
->
°¨tTime
)*1000000;

70 if–
db
->
xProfûe
 ){

71 
db
->
	`xProfûe
(db->
pProfûeArg
, 
p
->
zSql
, 
iEœp£
);

73 if–
db
->
mTø˚
 & 
SQLITE_TRACE_PROFILE
 ){

74 
db
->
	`xTø˚
(
SQLITE_TRACE_PROFILE
, db->
pTø˚Arg
, 
p
, (*)&
iEœp£
);

76 
p
->
°¨tTime
 = 0;

77 
	}
}

82 
	#checkProfûeCÆlback
(
DB
,
P
) \

83 if–((
P
)->
°¨tTime
)>0 ){ 
	`övokeProfûeCÆlback
(
DB
,P); }

	)

85 
	#checkProfûeCÆlback
(
DB
,
P
Ë

	)

97 
	$sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
){

98 
rc
;

99 if–
pStmt
==0 ){

102 
rc
 = 
SQLITE_OK
;

104 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

105 
sqlôe3
 *
db
 = 
v
->db;

106 if–
	`vdbeSa„ty
(
v
ËË 
SQLITE_MISUSE_BKPT
;

107 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

108 
	`checkProfûeCÆlback
(
db
, 
v
);

109 
rc
 = 
	`sqlôe3VdbeFöÆize
(
v
);

110 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

111 
	`sqlôe3LóveMuãxAndClo£Zombõ
(
db
);

113  
rc
;

114 
	}
}

124 
	$sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
){

125 
rc
;

126 if–
pStmt
==0 ){

127 
rc
 = 
SQLITE_OK
;

129 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

130 
sqlôe3
 *
db
 = 
v
->db;

131 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

132 
	`checkProfûeCÆlback
(
db
, 
v
);

133 
rc
 = 
	`sqlôe3VdbeRe£t
(
v
);

134 
	`sqlôe3VdbeRewöd
(
v
);

135 
	`as£π
–(
rc
 & (
db
->
îrMask
))==rc );

136 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

137 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

139  
rc
;

140 
	}
}

145 
	$sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
 *
pStmt
){

146 
i
;

147 
rc
 = 
SQLITE_OK
;

148 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

149 #i‡
SQLITE_THREADSAFE


150 
sqlôe3_muãx
 *
muãx
 = ((
Vdbe
*)
pStmt
)->
db
->mutex;

152 
	`sqlôe3_muãx_íãr
(
muãx
);

153 
i
=0; i<
p
->
nV¨
; i++){

154 
	`sqlôe3VdbeMemRñó£
(&
p
->
aV¨
[
i
]);

155 
p
->
aV¨
[
i
].
Êags
 = 
MEM_NuŒ
;

157 if–
p
->
isPª∑ªV2
 &&Ö->
expmask
 ){

158 
p
->
expúed
 = 1;

160 
	`sqlôe3_muãx_Àave
(
muãx
);

161  
rc
;

162 
	}
}

169 c⁄° *
	$sqlôe3_vÆue_blob
(
sqlôe3_vÆue
 *
pVÆ
){

170 
Mem
 *
p
 = (Mem*)
pVÆ
;

171 if–
p
->
Êags
 & (
MEM_Blob
|
MEM_Så
) ){

172 if–
	`sqlôe3VdbeMemEx∑ndBlob
(
p
)!=
SQLITE_OK
 ){

173 
	`as£π
–
p
->
Êags
==
MEM_NuŒ
 &&Ö->
z
==0 );

176 
p
->
Êags
 |
MEM_Blob
;

177  
p
->
n
 ?Ö->
z
 : 0;

179  
	`sqlôe3_vÆue_ãxt
(
pVÆ
);

181 
	}
}

182 
	$sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
 *
pVÆ
){

183  
	`sqlôe3VÆueByãs
(
pVÆ
, 
SQLITE_UTF8
);

184 
	}
}

185 
	$sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
 *
pVÆ
){

186  
	`sqlôe3VÆueByãs
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

187 
	}
}

188 
	$sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
 *
pVÆ
){

189  
	`sqlôe3VdbeRólVÆue
((
Mem
*)
pVÆ
);

190 
	}
}

191 
	$sqlôe3_vÆue_öt
(
sqlôe3_vÆue
 *
pVÆ
){

192  ()
	`sqlôe3VdbeI¡VÆue
((
Mem
*)
pVÆ
);

193 
	}
}

194 
sqlôe_öt64
 
	$sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
 *
pVÆ
){

195  
	`sqlôe3VdbeI¡VÆue
((
Mem
*)
pVÆ
);

196 
	}
}

197 
	$sqlôe3_vÆue_subty≥
(
sqlôe3_vÆue
 *
pVÆ
){

198 
Mem
 *
pMem
 = (Mem*)
pVÆ
;

199  ((
pMem
->
Êags
 & 
MEM_Subty≥
Ë?ÖMem->
eSubty≥
 : 0);

200 
	}
}

201 c⁄° *
	$sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
 *
pVÆ
){

202  (c⁄° *)
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF8
);

203 
	}
}

204 #i‚de‡
SQLITE_OMIT_UTF16


205 c⁄° *
	$sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
* 
pVÆ
){

206  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16NATIVE
);

207 
	}
}

208 c⁄° *
	$sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
 *
pVÆ
){

209  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16BE
);

210 
	}
}

211 c⁄° *
	$sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
 *
pVÆ
){

212  
	`sqlôe3VÆueText
(
pVÆ
, 
SQLITE_UTF16LE
);

213 
	}
}

219 
	$sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
* 
pVÆ
){

220 c⁄° 
u8
 
aTy≥
[] = {

221 
SQLITE_BLOB
,

222 
SQLITE_NULL
,

223 
SQLITE_TEXT
,

224 
SQLITE_NULL
,

225 
SQLITE_INTEGER
,

226 
SQLITE_NULL
,

227 
SQLITE_INTEGER
,

228 
SQLITE_NULL
,

229 
SQLITE_FLOAT
,

230 
SQLITE_NULL
,

231 
SQLITE_FLOAT
,

232 
SQLITE_NULL
,

233 
SQLITE_INTEGER
,

234 
SQLITE_NULL
,

235 
SQLITE_INTEGER
,

236 
SQLITE_NULL
,

237 
SQLITE_BLOB
,

238 
SQLITE_NULL
,

239 
SQLITE_TEXT
,

240 
SQLITE_NULL
,

241 
SQLITE_INTEGER
,

242 
SQLITE_NULL
,

243 
SQLITE_INTEGER
,

244 
SQLITE_NULL
,

245 
SQLITE_FLOAT
,

246 
SQLITE_NULL
,

247 
SQLITE_FLOAT
,

248 
SQLITE_NULL
,

249 
SQLITE_INTEGER
,

250 
SQLITE_NULL
,

251 
SQLITE_INTEGER
,

252 
SQLITE_NULL
,

254  
aTy≥
[
pVÆ
->
Êags
&
MEM_AffMask
];

255 
	}
}

259 
sqlôe3_vÆue
 *
	$sqlôe3_vÆue_dup
(c⁄° 
sqlôe3_vÆue
 *
pOrig
){

260 
sqlôe3_vÆue
 *
pNew
;

261 if–
pOrig
==0 )  0;

262 
pNew
 = 
	`sqlôe3_mÆloc
( (*pNew) );

263 if–
pNew
==0 )  0;

264 
	`mem£t
(
pNew
, 0, (*pNew));

265 
	`mem˝y
(
pNew
, 
pOrig
, 
MEMCELLSIZE
);

266 
pNew
->
Êags
 &~
MEM_Dyn
;

267 
pNew
->
db
 = 0;

268 if–
pNew
->
Êags
&(
MEM_Så
|
MEM_Blob
) ){

269 
pNew
->
Êags
 &~(
MEM_Sètic
|
MEM_Dyn
);

270 
pNew
->
Êags
 |
MEM_Ephem
;

271 if–
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pNew
)!=
SQLITE_OK
 ){

272 
	`sqlôe3VÆueFªe
(
pNew
);

273 
pNew
 = 0;

276  
pNew
;

277 
	}
}

282 
	$sqlôe3_vÆue_‰ì
(
sqlôe3_vÆue
 *
pOld
){

283 
	`sqlôe3VÆueFªe
(
pOld
);

284 
	}
}

298 
£tResu…SåOrEº‹
(

299 
sqlôe3_c⁄ãxt
 *
pCtx
,

300 c⁄° *
z
,

301 
n
,

302 
u8
 
íc
,

303 (*
xDñ
)(*)

305 if–
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
íc
, 
xDñ
)==
SQLITE_TOOBIG
 ){

306 
	`sqlôe3_ªsu…_îr‹_toobig
(
pCtx
);

308 
	}
}

309 
övokeVÆueDe°ru˘‹
(

310 c⁄° *
p
,

311 (*
xDñ
)(*),

312 
sqlôe3_c⁄ãxt
 *
pCtx


314 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

315 if–
xDñ
==0 ){

317 }if–
xDñ
==
SQLITE_TRANSIENT
 ){

320 
	`xDñ
((*)
p
);

322 if–
pCtx
 ) 
	`sqlôe3_ªsu…_îr‹_toobig
(pCtx);

323  
SQLITE_TOOBIG
;

324 
	}
}

325 
sqlôe3_ªsu…_blob
(

326 
sqlôe3_c⁄ãxt
 *
pCtx
,

327 c⁄° *
z
,

328 
n
,

329 (*
xDñ
)(*)

331 
	`as£π
–
n
>=0 );

332 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

333 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 0, 
xDñ
);

334 
	}
}

335 
sqlôe3_ªsu…_blob64
(

336 
sqlôe3_c⁄ãxt
 *
pCtx
,

337 c⁄° *
z
,

338 
sqlôe3_uöt64
 
n
,

339 (*
xDñ
)(*)

341 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

342 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

343 if–
n
>0x7fffffff ){

344 ()
	`övokeVÆueDe°ru˘‹
(
z
, 
xDñ
, 
pCtx
);

346 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, ()
n
, 0, 
xDñ
);

348 
	}
}

349 
	$sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
rVÆ
){

350 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

351 
	`sqlôe3VdbeMemSëDoubÀ
(
pCtx
->
pOut
, 
rVÆ
);

352 
	}
}

353 
	$sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
 *
pCtx
, c⁄° *
z
, 
n
){

354 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

355 
pCtx
->
isEº‹
 = 
SQLITE_ERROR
;

356 
pCtx
->
fEº‹OrAux
 = 1;

357 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
SQLITE_UTF8
, 
SQLITE_TRANSIENT
);

358 
	}
}

359 #i‚de‡
SQLITE_OMIT_UTF16


360 
	$sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
 *
pCtx
, c⁄° *
z
, 
n
){

361 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

362 
pCtx
->
isEº‹
 = 
SQLITE_ERROR
;

363 
pCtx
->
fEº‹OrAux
 = 1;

364 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
z
, 
n
, 
SQLITE_UTF16NATIVE
, 
SQLITE_TRANSIENT
);

365 
	}
}

367 
	$sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
iVÆ
){

368 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

369 
	`sqlôe3VdbeMemSëI¡64
(
pCtx
->
pOut
, (
i64
)
iVÆ
);

370 
	}
}

371 
	$sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
i64
 
iVÆ
){

372 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

373 
	`sqlôe3VdbeMemSëI¡64
(
pCtx
->
pOut
, 
iVÆ
);

374 
	}
}

375 
	$sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
 *
pCtx
){

376 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

377 
	`sqlôe3VdbeMemSëNuŒ
(
pCtx
->
pOut
);

378 
	}
}

379 
	$sqlôe3_ªsu…_subty≥
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
eSubty≥
){

380 
Mem
 *
pOut
 = 
pCtx
->pOut;

381 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pOut
->
db
->
muãx
) );

382 
pOut
->
eSubty≥
 =ÉSubtype & 0xff;

383 
pOut
->
Êags
 |
MEM_Subty≥
;

384 
	}
}

385 
sqlôe3_ªsu…_ãxt
(

386 
sqlôe3_c⁄ãxt
 *
pCtx
,

387 c⁄° *
z
,

388 
n
,

389 (*
xDñ
)(*)

391 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

392 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF8
, 
xDñ
);

393 
	}
}

394 
sqlôe3_ªsu…_ãxt64
(

395 
sqlôe3_c⁄ãxt
 *
pCtx
,

396 c⁄° *
z
,

397 
sqlôe3_uöt64
 
n
,

398 (*
xDñ
)(*),

399 
íc


401 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

402 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

403 if–
íc
==
SQLITE_UTF16
 )Én¯
SQLITE_UTF16NATIVE
;

404 if–
n
>0x7fffffff ){

405 ()
	`övokeVÆueDe°ru˘‹
(
z
, 
xDñ
, 
pCtx
);

407 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, ()
n
, 
íc
, 
xDñ
);

409 
	}
}

410 #i‚de‡
SQLITE_OMIT_UTF16


411 
sqlôe3_ªsu…_ãxt16
(

412 
sqlôe3_c⁄ãxt
 *
pCtx
,

413 c⁄° *
z
,

414 
n
,

415 (*
xDñ
)(*)

417 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

418 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16NATIVE
, 
xDñ
);

419 
	}
}

420 
sqlôe3_ªsu…_ãxt16be
(

421 
sqlôe3_c⁄ãxt
 *
pCtx
,

422 c⁄° *
z
,

423 
n
,

424 (*
xDñ
)(*)

426 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

427 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16BE
, 
xDñ
);

428 
	}
}

429 
sqlôe3_ªsu…_ãxt16À
(

430 
sqlôe3_c⁄ãxt
 *
pCtx
,

431 c⁄° *
z
,

432 
n
,

433 (*
xDñ
)(*)

435 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

436 
	`£tResu…SåOrEº‹
(
pCtx
, 
z
, 
n
, 
SQLITE_UTF16LE
, 
xDñ
);

437 
	}
}

439 
	$sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
sqlôe3_vÆue
 *
pVÆue
){

440 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

441 
	`sqlôe3VdbeMemC›y
(
pCtx
->
pOut
, 
pVÆue
);

442 
	}
}

443 
	$sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
n
){

444 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

445 
	`sqlôe3VdbeMemSëZîoBlob
(
pCtx
->
pOut
, 
n
);

446 
	}
}

447 
	$sqlôe3_ªsu…_zîoblob64
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
u64
 
n
){

448 
Mem
 *
pOut
 = 
pCtx
->pOut;

449 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pOut
->
db
->
muãx
) );

450 if–
n
>(
u64
)
pOut
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

451  
SQLITE_TOOBIG
;

453 
	`sqlôe3VdbeMemSëZîoBlob
(
pCtx
->
pOut
, ()
n
);

454  
SQLITE_OK
;

455 
	}
}

456 
	$sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
îrCode
){

457 
pCtx
->
isEº‹
 = 
îrCode
;

458 
pCtx
->
fEº‹OrAux
 = 1;

459 #ifde‡
SQLITE_DEBUG


460 if–
pCtx
->
pVdbe
 )ÖCtx->pVdbe->
rcAµ
 = 
îrCode
;

462 if–
pCtx
->
pOut
->
Êags
 & 
MEM_NuŒ
 ){

463 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, 
	`sqlôe3EºSå
(
îrCode
), -1,

464 
SQLITE_UTF8
, 
SQLITE_STATIC
);

466 
	}
}

469 
	$sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
 *
pCtx
){

470 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

471 
pCtx
->
isEº‹
 = 
SQLITE_TOOBIG
;

472 
pCtx
->
fEº‹OrAux
 = 1;

473 
	`sqlôe3VdbeMemSëSå
(
pCtx
->
pOut
, "string or blobÅoo big", -1,

474 
SQLITE_UTF8
, 
SQLITE_STATIC
);

475 
	}
}

478 
	$sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
 *
pCtx
){

479 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

480 
	`sqlôe3VdbeMemSëNuŒ
(
pCtx
->
pOut
);

481 
pCtx
->
isEº‹
 = 
SQLITE_NOMEM_BKPT
;

482 
pCtx
->
fEº‹OrAux
 = 1;

483 
	`sqlôe3OomFau…
(
pCtx
->
pOut
->
db
);

484 
	}
}

490 
	$doWÆCÆlbacks
(
sqlôe3
 *
db
){

491 
rc
 = 
SQLITE_OK
;

492 #i‚de‡
SQLITE_OMIT_WAL


493 
i
;

494 
i
=0; i<
db
->
nDb
; i++){

495 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

496 if–
pBt
 ){

497 
nE¡ry
;

498 
	`sqlôe3BåìE¡î
(
pBt
);

499 
nE¡ry
 = 
	`sqlôe3PagîWÆCÆlback
(
	`sqlôe3BåìPagî
(
pBt
));

500 
	`sqlôe3BåìLóve
(
pBt
);

501 if–
db
->
xWÆCÆlback
 && 
nE¡ry
>0 && 
rc
==
SQLITE_OK
 ){

502 
rc
 = 
db
->
	`xWÆCÆlback
(db->
pWÆArg
, db, db->
aDb
[
i
].
zName
, 
nE¡ry
);

507  
rc
;

508 
	}
}

520 
	$sqlôe3Sãp
(
Vdbe
 *
p
){

521 
sqlôe3
 *
db
;

522 
rc
;

524 
	`as£π
(
p
);

525 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ){

542 #ifde‡
SQLITE_OMIT_AUTORESET


543 if–(
rc
 = 
p
->rc&0xff)==
SQLITE_BUSY
 ||Ñc==
SQLITE_LOCKED
 ){

544 
	`sqlôe3_ª£t
((
sqlôe3_°mt
*)
p
);

546  
SQLITE_MISUSE_BKPT
;

549 
	`sqlôe3_ª£t
((
sqlôe3_°mt
*)
p
);

554 
db
 = 
p
->db;

555 if–
db
->
mÆlocFaûed
 ){

556 
p
->
rc
 = 
SQLITE_NOMEM
;

557  
SQLITE_NOMEM_BKPT
;

560 if–
p
->
pc
<=0 &&Ö->
expúed
 ){

561 
p
->
rc
 = 
SQLITE_SCHEMA
;

562 
rc
 = 
SQLITE_ERROR
;

563 
íd_of_°ï
;

565 if–
p
->
pc
<0 ){

570 if–
db
->
nVdbeA˘ive
==0 ){

571 
db
->
u1
.
isI¡îru±ed
 = 0;

574 
	`as£π
–
db
->
nVdbeWrôe
>0 || db->
autoCommô
==0

575 || (
db
->
nDe„ºedC⁄s
==0 && db->
nDe„ºedImmC⁄s
==0)

578 #i‚de‡
SQLITE_OMIT_TRACE


579 if–(
db
->
xProfûe
 || (db->
mTø˚
 & 
SQLITE_TRACE_PROFILE
)!=0)

580 && !
db
->
öô
.
busy
 && 
p
->
zSql
 ){

581 
	`sqlôe3OsCuºítTimeI¡64
(
db
->
pVfs
, &
p
->
°¨tTime
);

583 
	`as£π
–
p
->
°¨tTime
==0 );

587 
db
->
nVdbeA˘ive
++;

588 if–
p
->
ªadO∆y
==0 ) 
db
->
nVdbeWrôe
++;

589 if–
p
->
bIsRódî
 ) 
db
->
nVdbeRód
++;

590 
p
->
pc
 = 0;

592 #ifde‡
SQLITE_DEBUG


593 
p
->
rcAµ
 = 
SQLITE_OK
;

595 #i‚de‡
SQLITE_OMIT_EXPLAIN


596 if–
p
->
ex∂aö
 ){

597 
rc
 = 
	`sqlôe3VdbeLi°
(
p
);

601 
db
->
nVdbeExec
++;

602 
rc
 = 
	`sqlôe3VdbeExec
(
p
);

603 
db
->
nVdbeExec
--;

606 #i‚de‡
SQLITE_OMIT_TRACE


608 if–
rc
!=
SQLITE_ROW
 ) 
	`checkProfûeCÆlback
(
db
, 
p
);

611 if–
rc
==
SQLITE_DONE
 ){

612 
	`as£π
–
p
->
rc
==
SQLITE_OK
 );

613 
p
->
rc
 = 
	`doWÆCÆlbacks
(
db
);

614 if–
p
->
rc
!=
SQLITE_OK
 ){

615 
rc
 = 
SQLITE_ERROR
;

619 
db
->
îrCode
 = 
rc
;

620 if–
SQLITE_NOMEM
==
	`sqlôe3ApiExô
(
p
->
db
,Ö->
rc
) ){

621 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

623 
íd_of_°ï
:

631 
	`as£π
–
rc
==
SQLITE_ROW
 ||Ñc==
SQLITE_DONE
 ||Ñc==
SQLITE_ERROR


632 || (
rc
&0xff)==
SQLITE_BUSY
 ||Ñc==
SQLITE_MISUSE


634 
	`as£π
–(
p
->
rc
!=
SQLITE_ROW
 &&Ö->rc!=
SQLITE_DONE
Ë||Ö->rc=ı->
rcAµ
 );

635 if–
p
->
isPª∑ªV2
 && 
rc
!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 ){

640 
rc
 = 
	`sqlôe3VdbeTøns„rEº‹
(
p
);

642  (
rc
&
db
->
îrMask
);

643 
	}
}

650 
	$sqlôe3_°ï
(
sqlôe3_°mt
 *
pStmt
){

651 
rc
 = 
SQLITE_OK
;

652 
rc2
 = 
SQLITE_OK
;

653 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

654 
˙t
 = 0;

655 
sqlôe3
 *
db
;

657 if–
	`vdbeSa„tyNŸNuŒ
(
v
) ){

658  
SQLITE_MISUSE_BKPT
;

660 
db
 = 
v
->db;

661 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

662 
v
->
doögRîun
 = 0;

663  (
rc
 = 
	`sqlôe3Sãp
(
v
))==
SQLITE_SCHEMA


664 && 
˙t
++ < 
SQLITE_MAX_SCHEMA_RETRY
 ){

665 
ßvedPc
 = 
v
->
pc
;

666 
rc2
 = 
rc
 = 
	`sqlôe3Rïª∑ª
(
v
);

667 if–
rc
!=
SQLITE_OK
) ;

668 
	`sqlôe3_ª£t
(
pStmt
);

669 if–
ßvedPc
>=0 ) 
v
->
doögRîun
 = 1;

670 
	`as£π
–
v
->
expúed
==0 );

672 if–
rc2
!=
SQLITE_OK
 ){

681 c⁄° *
zEº
 = (c⁄° *)
	`sqlôe3_vÆue_ãxt
(
db
->
pEº
);

682 
	`sqlôe3DbFªe
(
db
, 
v
->
zEºMsg
);

683 if–!
db
->
mÆlocFaûed
 ){

684 
v
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, 
zEº
);

685 
v
->
rc
 = 
rc2
;

687 
v
->
zEºMsg
 = 0;

688 
v
->
rc
 =Ñ¯
SQLITE_NOMEM_BKPT
;

691 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

692 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

693  
rc
;

694 
	}
}

701 *
	$sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
 *
p
){

702 
	`as£π
–
p
 &&Ö->
pFunc
 );

703  
p
->
pFunc
->
pU£rD©a
;

704 
	}
}

716 
sqlôe3
 *
	$sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
 *
p
){

717 
	`as£π
–
p
 &&Ö->
pOut
 );

718  
p
->
pOut
->
db
;

719 
	}
}

728 
sqlôe3_öt64
 
	$sqlôe3StmtCuºítTime
(
sqlôe3_c⁄ãxt
 *
p
){

729 
rc
;

730 #i‚de‡
SQLITE_ENABLE_STAT3_OR_STAT4


731 
sqlôe3_öt64
 *
piTime
 = &
p
->
pVdbe
->
iCuºítTime
;

732 
	`as£π
–
p
->
pVdbe
!=0 );

734 
sqlôe3_öt64
 
iTime
 = 0;

735 
sqlôe3_öt64
 *
piTime
 = 
p
->
pVdbe
!=0 ? &p->pVdbe->
iCuºítTime
 : &
iTime
;

737 if–*
piTime
==0 ){

738 
rc
 = 
	`sqlôe3OsCuºítTimeI¡64
(
p
->
pOut
->
db
->
pVfs
, 
piTime
);

739 if–
rc
 ) *
piTime
 = 0;

741  *
piTime
;

742 
	}
}

752 
	$sqlôe3InvÆidFun˘i⁄
(

753 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

754 
NŸU£d
,

755 
sqlôe3_vÆue
 **
NŸU£d2


757 c⁄° *
zName
 = 
c⁄ãxt
->
pFunc
->zName;

758 *
zEº
;

759 
	`UNUSED_PARAMETER2
(
NŸU£d
, 
NŸU£d2
);

760 
zEº
 = 
	`sqlôe3_m¥ötf
(

761 "u«bÀÅÿu£ fun˘i⁄ %†öÅhêªque°ed c⁄ãxt", 
zName
);

762 
	`sqlôe3_ªsu…_îr‹
(
c⁄ãxt
, 
zEº
, -1);

763 
	`sqlôe3_‰ì
(
zEº
);

764 
	}
}

770 
SQLITE_NOINLINE
 *
	$¸óãAggC⁄ãxt
(
sqlôe3_c⁄ãxt
 *
p
, 
nByã
){

771 
Mem
 *
pMem
 = 
p
->pMem;

772 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Agg
)==0 );

773 if–
nByã
<=0 ){

774 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

775 
pMem
->
z
 = 0;

777 
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
);

778 
pMem
->
Êags
 = 
MEM_Agg
;

779 
pMem
->
u
.
pDef
 = 
p
->
pFunc
;

780 if–
pMem
->
z
 ){

781 
	`mem£t
(
pMem
->
z
, 0, 
nByã
);

784  (*)
pMem
->
z
;

785 
	}
}

792 *
	$sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
 *
p
, 
nByã
){

793 
	`as£π
–
p
 &&Ö->
pFunc
 &&Ö->pFunc->
xFöÆize
 );

794 
	`as£π
–
	`sqlôe3_muãx_hñd
(
p
->
pOut
->
db
->
muãx
) );

795 
	`ã°ˇ£
–
nByã
<0 );

796 if–(
p
->
pMem
->
Êags
 & 
MEM_Agg
)==0 ){

797  
	`¸óãAggC⁄ãxt
(
p
, 
nByã
);

799  (*)
p
->
pMem
->
z
;

801 
	}
}

807 *
	$sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
 *
pCtx
, 
iArg
){

808 
AuxD©a
 *
pAuxD©a
;

810 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

811 #i‡
SQLITE_ENABLE_STAT3_OR_STAT4


812 if–
pCtx
->
pVdbe
==0 )  0;

814 
	`as£π
–
pCtx
->
pVdbe
!=0 );

816 
pAuxD©a
=
pCtx
->
pVdbe
->pAuxD©a;ÖAuxD©a;ÖAuxD©aıAuxD©a->
pNext
){

817 if–
pAuxD©a
->
iOp
==
pCtx
->iO∞&&ÖAuxD©a->
iArg
==iArg ) ;

820  (
pAuxD©a
 ?ÖAuxD©a->
pAux
 : 0);

821 
	}
}

828 
sqlôe3_£t_auxd©a
(

829 
sqlôe3_c⁄ãxt
 *
pCtx
,

830 
iArg
,

831 *
pAux
,

832 (*
xDñëe
)(*)

834 
AuxD©a
 *
pAuxD©a
;

835 
Vdbe
 *
pVdbe
 = 
pCtx
->pVdbe;

837 
	`as£π
–
	`sqlôe3_muãx_hñd
(
pCtx
->
pOut
->
db
->
muãx
) );

838 if–
iArg
<0 ) 
Áûed
;

839 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


840 if–
pVdbe
==0 ) 
Áûed
;

842 
	`as£π
–
pVdbe
!=0 );

845 
pAuxD©a
=
pVdbe
->pAuxD©a;ÖAuxD©a;ÖAuxD©aıAuxD©a->
pNext
){

846 if–
pAuxD©a
->
iOp
==
pCtx
->iO∞&&ÖAuxD©a->
iArg
==iArg ) ;

848 if–
pAuxD©a
==0 ){

849 
pAuxD©a
 = 
	`sqlôe3DbMÆlocZîo
(
pVdbe
->
db
, (
AuxD©a
));

850 if–!
pAuxD©a
 ) 
Áûed
;

851 
pAuxD©a
->
iOp
 = 
pCtx
->iOp;

852 
pAuxD©a
->
iArg
 = iArg;

853 
pAuxD©a
->
pNext
 = 
pVdbe
->pAuxData;

854 
pVdbe
->
pAuxD©a
 =ÖAuxData;

855 if–
pCtx
->
fEº‹OrAux
==0 ){

856 
pCtx
->
isEº‹
 = 0;

857 
pCtx
->
fEº‹OrAux
 = 1;

859 }if–
pAuxD©a
->
xDñëe
 ){

860 
pAuxD©a
->
	`xDñëe
’AuxD©a->
pAux
);

863 
pAuxD©a
->
pAux
 =ÖAux;

864 
pAuxD©a
->
xDñëe
 = xDelete;

867 
Áûed
:

868 if–
xDñëe
 ){

869 
	`xDñëe
(
pAux
);

871 
	}
}

873 #i‚de‡
SQLITE_OMIT_DEPRECATED


883 
	$sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
 *
p
){

884 
	`as£π
–
p
 &&Ö->
pMem
 &&Ö->
pFunc
 &&Ö->pFunc->
xFöÆize
 );

885  
p
->
pMem
->
n
;

886 
	}
}

892 
	$sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
){

893 
Vdbe
 *
pVm
 = (Vdbê*)
pStmt
;

894  
pVm
 ?ÖVm->
nResCﬁumn
 : 0;

895 
	}
}

901 
	$sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
){

902 
Vdbe
 *
pVm
 = (Vdbê*)
pStmt
;

903 if–
pVm
==0 ||ÖVm->
pResu…Së
==0 )  0;

904  
pVm
->
nResCﬁumn
;

905 
	}
}

910 c⁄° 
Mem
 *
	$cﬁumnNuŒVÆue
(){

920 c⁄° 
Mem
 
nuŒMem


921 #i‡
	`deföed
(
SQLITE_DEBUG
Ë&& deföed(
__GNUC__
)

922 
	`__©åibuã__
((
	`Æig√d
(8)))

926  (
u16
)
MEM_NuŒ
,

927  (
u8
)0,

928  (
u8
)0,

933  (
u32
)0,

934  (
sqlôe3
*)0,

936 #ifde‡
SQLITE_DEBUG


937  (
Mem
*)0,

941  &
nuŒMem
;

942 
	}
}

950 
Mem
 *
	$cﬁumnMem
(
sqlôe3_°mt
 *
pStmt
, 
i
){

951 
Vdbe
 *
pVm
;

952 
Mem
 *
pOut
;

954 
pVm
 = (
Vdbe
 *)
pStmt
;

955 if–
pVm
 &&ÖVm->
pResu…Së
!=0 && 
i
<pVm->
nResCﬁumn
 && i>=0 ){

956 
	`sqlôe3_muãx_íãr
(
pVm
->
db
->
muãx
);

957 
pOut
 = &
pVm
->
pResu…Së
[
i
];

959 if–
pVm
 && 
	`ALWAYS
’Vm->
db
) ){

960 
	`sqlôe3_muãx_íãr
(
pVm
->
db
->
muãx
);

961 
	`sqlôe3Eº‹
(
pVm
->
db
, 
SQLITE_RANGE
);

963 
pOut
 = (
Mem
*)
	`cﬁumnNuŒVÆue
();

965  
pOut
;

966 
	}
}

986 
	$cﬁumnMÆlocFaûuª
(
sqlôe3_°mt
 *
pStmt
)

993 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

994 if–
p
 ){

995 
p
->
rc
 = 
	`sqlôe3ApiExô
’->
db
,Ö->rc);

996 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

998 
	}
}

1004 c⁄° *
	$sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1005 c⁄° *
vÆ
;

1006 
vÆ
 = 
	`sqlôe3_vÆue_blob
–
	`cﬁumnMem
(
pStmt
,
i
) );

1011 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1012  
vÆ
;

1013 
	}
}

1014 
	$sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1015 
vÆ
 = 
	`sqlôe3_vÆue_byãs
–
	`cﬁumnMem
(
pStmt
,
i
) );

1016 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1017  
vÆ
;

1018 
	}
}

1019 
	$sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1020 
vÆ
 = 
	`sqlôe3_vÆue_byãs16
–
	`cﬁumnMem
(
pStmt
,
i
) );

1021 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1022  
vÆ
;

1023 
	}
}

1024 
	$sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1025 
vÆ
 = 
	`sqlôe3_vÆue_doubÀ
–
	`cﬁumnMem
(
pStmt
,
i
) );

1026 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1027  
vÆ
;

1028 
	}
}

1029 
	$sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1030 
vÆ
 = 
	`sqlôe3_vÆue_öt
–
	`cﬁumnMem
(
pStmt
,
i
) );

1031 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1032  
vÆ
;

1033 
	}
}

1034 
sqlôe_öt64
 
	$sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1035 
sqlôe_öt64
 
vÆ
 = 
	`sqlôe3_vÆue_öt64
–
	`cﬁumnMem
(
pStmt
,
i
) );

1036 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1037  
vÆ
;

1038 
	}
}

1039 c⁄° *
	$sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1040 c⁄° *
vÆ
 = 
	`sqlôe3_vÆue_ãxt
–
	`cﬁumnMem
(
pStmt
,
i
) );

1041 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1042  
vÆ
;

1043 
	}
}

1044 
sqlôe3_vÆue
 *
	$sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1045 
Mem
 *
pOut
 = 
	`cﬁumnMem
(
pStmt
, 
i
);

1046 if–
pOut
->
Êags
&
MEM_Sètic
 ){

1047 
pOut
->
Êags
 &~
MEM_Sètic
;

1048 
pOut
->
Êags
 |
MEM_Ephem
;

1050 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1051  (
sqlôe3_vÆue
 *)
pOut
;

1052 
	}
}

1053 #i‚de‡
SQLITE_OMIT_UTF16


1054 c⁄° *
	$sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1055 c⁄° *
vÆ
 = 
	`sqlôe3_vÆue_ãxt16
–
	`cﬁumnMem
(
pStmt
,
i
) );

1056 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1057  
vÆ
;

1058 
	}
}

1060 
	$sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1061 
iTy≥
 = 
	`sqlôe3_vÆue_ty≥
–
	`cﬁumnMem
(
pStmt
,
i
) );

1062 
	`cﬁumnMÆlocFaûuª
(
pStmt
);

1063  
iTy≥
;

1064 
	}
}

1082 c⁄° *
cﬁumnName
(

1083 
sqlôe3_°mt
 *
pStmt
,

1084 
N
,

1085 c⁄° *(*
xFunc
)(
Mem
*),

1086 
u£Ty≥


1088 c⁄° *
	gªt
;

1089 
Vdbe
 *
	gp
;

1090 
	gn
;

1091 
sqlôe3
 *
	gdb
;

1092 #ifde‡
SQLITE_ENABLE_API_ARMOR


1093 if–
	gpStmt
==0 ){

1094 ()
SQLITE_MISUSE_BKPT
;

1098 
	gªt
 = 0;

1099 
	gp
 = (
Vdbe
 *)
pStmt
;

1100 
	gdb
 = 
p
->
db
;

1101 
as£π
–
db
!=0 );

1102 
	gn
 = 
sqlôe3_cﬁumn_cou¡
(
pStmt
);

1103 if–
	gN
<
	gn
 && N>=0 ){

1104 
N
 +
u£Ty≥
*
n
;

1105 
sqlôe3_muãx_íãr
(
db
->
muãx
);

1106 
as£π
–
db
->
mÆlocFaûed
==0 );

1107 
	gªt
 = 
xFunc
(&
p
->
aCﬁName
[
N
]);

1111 if–
	gdb
->
	gmÆlocFaûed
 ){

1112 
sqlôe3OomCÀ¨
(
db
);

1113 
	gªt
 = 0;

1115 
sqlôe3_muãx_Àave
(
db
->
muãx
);

1117  
	gªt
;

1124 c⁄° *
	$sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1125  
	`cﬁumnName
(

1126 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_NAME
);

1127 
	}
}

1128 #i‚de‡
SQLITE_OMIT_UTF16


1129 c⁄° *
	$sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1130  
	`cﬁumnName
(

1131 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_NAME
);

1132 
	}
}

1139 #i‡
deföed
(
SQLITE_OMIT_DECLTYPE
Ë&& deföed(
SQLITE_ENABLE_COLUMN_METADATA
)

1144 #i‚de‡
SQLITE_OMIT_DECLTYPE


1149 c⁄° *
	$sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1150  
	`cﬁumnName
(

1151 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_DECLTYPE
);

1152 
	}
}

1153 #i‚de‡
SQLITE_OMIT_UTF16


1154 c⁄° *
	$sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1155  
	`cﬁumnName
(

1156 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_DECLTYPE
);

1157 
	}
}

1161 #ifde‡
SQLITE_ENABLE_COLUMN_METADATA


1167 c⁄° *
	$sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1168  
	`cﬁumnName
(

1169 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_DATABASE
);

1170 
	}
}

1171 #i‚de‡
SQLITE_OMIT_UTF16


1172 c⁄° *
	$sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1173  
	`cﬁumnName
(

1174 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_DATABASE
);

1175 
	}
}

1183 c⁄° *
	$sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1184  
	`cﬁumnName
(

1185 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_TABLE
);

1186 
	}
}

1187 #i‚de‡
SQLITE_OMIT_UTF16


1188 c⁄° *
	$sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1189  
	`cﬁumnName
(

1190 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_TABLE
);

1191 
	}
}

1199 c⁄° *
	$sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1200  
	`cﬁumnName
(

1201 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt
, 
COLNAME_COLUMN
);

1202 
	}
}

1203 #i‚de‡
SQLITE_OMIT_UTF16


1204 c⁄° *
	$sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
 *
pStmt
, 
N
){

1205  
	`cﬁumnName
(

1206 
pStmt
, 
N
, (c⁄° *(*)(
Mem
*))
sqlôe3_vÆue_ãxt16
, 
COLNAME_COLUMN
);

1207 
	}
}

1227 
	$vdbeUnböd
(
Vdbe
 *
p
, 
i
){

1228 
Mem
 *
pV¨
;

1229 if–
	`vdbeSa„tyNŸNuŒ
(
p
) ){

1230  
SQLITE_MISUSE_BKPT
;

1232 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1233 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ||Ö->
pc
>=0 ){

1234 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_MISUSE
);

1235 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1236 
	`sqlôe3_log
(
SQLITE_MISUSE
,

1237 "böd o¿®busyÖª∑ªd sèãmít: [%s]", 
p
->
zSql
);

1238  
SQLITE_MISUSE_BKPT
;

1240 if–
i
<1 || i>
p
->
nV¨
 ){

1241 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_RANGE
);

1242 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1243  
SQLITE_RANGE
;

1245 
i
--;

1246 
pV¨
 = &
p
->
aV¨
[
i
];

1247 
	`sqlôe3VdbeMemRñó£
(
pV¨
);

1248 
pV¨
->
Êags
 = 
MEM_NuŒ
;

1249 
	`sqlôe3Eº‹
(
p
->
db
, 
SQLITE_OK
);

1260 if–
p
->
isPª∑ªV2
 &&

1261 ((
i
<32 && 
p
->
expmask
 & ((
u32
)1 << i)) ||Ö->expmask==0xffffffff)

1263 
p
->
expúed
 = 1;

1265  
SQLITE_OK
;

1266 
	}
}

1271 
bödText
(

1272 
sqlôe3_°mt
 *
pStmt
,

1273 
i
,

1274 c⁄° *
zD©a
,

1275 
nD©a
,

1276 (*
xDñ
)(*),

1277 
u8
 
ícodög


1279 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1280 
Mem
 *
pV¨
;

1281 
rc
;

1283 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1284 if–
rc
==
SQLITE_OK
 ){

1285 if–
zD©a
!=0 ){

1286 
pV¨
 = &
p
->
aV¨
[
i
-1];

1287 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pV¨
, 
zD©a
, 
nD©a
, 
ícodög
, 
xDñ
);

1288 if–
rc
==
SQLITE_OK
 && 
ícodög
!=0 ){

1289 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pV¨
, 
	`ENC
(
p
->
db
));

1291 
	`sqlôe3Eº‹
(
p
->
db
, 
rc
);

1292 
rc
 = 
	`sqlôe3ApiExô
(
p
->
db
,Ñc);

1294 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1295 }if–
xDñ
!=
SQLITE_STATIC
 && xDñ!=
SQLITE_TRANSIENT
 ){

1296 
	`xDñ
((*)
zD©a
);

1298  
rc
;

1299 
	}
}

1305 
sqlôe3_böd_blob
(

1306 
sqlôe3_°mt
 *
pStmt
,

1307 
i
,

1308 c⁄° *
zD©a
,

1309 
nD©a
,

1310 (*
xDñ
)(*)

1312 #ifde‡
SQLITE_ENABLE_API_ARMOR


1313 if–
nD©a
<0 )  
SQLITE_MISUSE_BKPT
;

1315  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 0);

1316 
	}
}

1317 
sqlôe3_böd_blob64
(

1318 
sqlôe3_°mt
 *
pStmt
,

1319 
i
,

1320 c⁄° *
zD©a
,

1321 
sqlôe3_uöt64
 
nD©a
,

1322 (*
xDñ
)(*)

1324 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

1325 if–
nD©a
>0x7fffffff ){

1326  
	`övokeVÆueDe°ru˘‹
(
zD©a
, 
xDñ
, 0);

1328  
	`bödText
(
pStmt
, 
i
, 
zD©a
, ()
nD©a
, 
xDñ
, 0);

1330 
	}
}

1331 
	$sqlôe3_böd_doubÀ
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
rVÆue
){

1332 
rc
;

1333 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1334 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1335 if–
rc
==
SQLITE_OK
 ){

1336 
	`sqlôe3VdbeMemSëDoubÀ
(&
p
->
aV¨
[
i
-1], 
rVÆue
);

1337 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1339  
rc
;

1340 
	}
}

1341 
	$sqlôe3_böd_öt
(
sqlôe3_°mt
 *
p
, 
i
, 
iVÆue
){

1342  
	`sqlôe3_böd_öt64
(
p
, 
i
, (
i64
)
iVÆue
);

1343 
	}
}

1344 
	$sqlôe3_böd_öt64
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
sqlôe_öt64
 
iVÆue
){

1345 
rc
;

1346 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1347 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1348 if–
rc
==
SQLITE_OK
 ){

1349 
	`sqlôe3VdbeMemSëI¡64
(&
p
->
aV¨
[
i
-1], 
iVÆue
);

1350 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1352  
rc
;

1353 
	}
}

1354 
	$sqlôe3_böd_nuŒ
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1355 
rc
;

1356 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1357 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1358 if–
rc
==
SQLITE_OK
 ){

1359 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1361  
rc
;

1362 
	}
}

1363 
sqlôe3_böd_ãxt
(

1364 
sqlôe3_°mt
 *
pStmt
,

1365 
i
,

1366 c⁄° *
zD©a
,

1367 
nD©a
,

1368 (*
xDñ
)(*)

1370  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 
SQLITE_UTF8
);

1371 
	}
}

1372 
sqlôe3_böd_ãxt64
(

1373 
sqlôe3_°mt
 *
pStmt
,

1374 
i
,

1375 c⁄° *
zD©a
,

1376 
sqlôe3_uöt64
 
nD©a
,

1377 (*
xDñ
)(*),

1378 
íc


1380 
	`as£π
–
xDñ
!=
SQLITE_DYNAMIC
 );

1381 if–
nD©a
>0x7fffffff ){

1382  
	`övokeVÆueDe°ru˘‹
(
zD©a
, 
xDñ
, 0);

1384 if–
íc
==
SQLITE_UTF16
 )Én¯
SQLITE_UTF16NATIVE
;

1385  
	`bödText
(
pStmt
, 
i
, 
zD©a
, ()
nD©a
, 
xDñ
, 
íc
);

1387 
	}
}

1388 #i‚de‡
SQLITE_OMIT_UTF16


1389 
sqlôe3_böd_ãxt16
(

1390 
sqlôe3_°mt
 *
pStmt
,

1391 
i
,

1392 c⁄° *
zD©a
,

1393 
nD©a
,

1394 (*
xDñ
)(*)

1396  
	`bödText
(
pStmt
, 
i
, 
zD©a
, 
nD©a
, 
xDñ
, 
SQLITE_UTF16NATIVE
);

1397 
	}
}

1399 
	$sqlôe3_böd_vÆue
(
sqlôe3_°mt
 *
pStmt
, 
i
, c⁄° 
sqlôe3_vÆue
 *
pVÆue
){

1400 
rc
;

1401  
	`sqlôe3_vÆue_ty≥
((
sqlôe3_vÆue
*)
pVÆue
) ){

1402 
SQLITE_INTEGER
: {

1403 
rc
 = 
	`sqlôe3_böd_öt64
(
pStmt
, 
i
, 
pVÆue
->
u
.i);

1406 
SQLITE_FLOAT
: {

1407 
rc
 = 
	`sqlôe3_böd_doubÀ
(
pStmt
, 
i
, 
pVÆue
->
u
.
r
);

1410 
SQLITE_BLOB
: {

1411 if–
pVÆue
->
Êags
 & 
MEM_Zîo
 ){

1412 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
i
, 
pVÆue
->
u
.
nZîo
);

1414 
rc
 = 
	`sqlôe3_böd_blob
(
pStmt
, 
i
, 
pVÆue
->
z
,ÖVÆue->
n
,
SQLITE_TRANSIENT
);

1418 
SQLITE_TEXT
: {

1419 
rc
 = 
	`bödText
(
pStmt
,
i
, 
pVÆue
->
z
,ÖVÆue->
n
, 
SQLITE_TRANSIENT
,

1420 
pVÆue
->
íc
);

1424 
rc
 = 
	`sqlôe3_böd_nuŒ
(
pStmt
, 
i
);

1428  
rc
;

1429 
	}
}

1430 
	$sqlôe3_böd_zîoblob
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
n
){

1431 
rc
;

1432 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1433 
rc
 = 
	`vdbeUnböd
(
p
, 
i
);

1434 if–
rc
==
SQLITE_OK
 ){

1435 
	`sqlôe3VdbeMemSëZîoBlob
(&
p
->
aV¨
[
i
-1], 
n
);

1436 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1438  
rc
;

1439 
	}
}

1440 
	$sqlôe3_böd_zîoblob64
(
sqlôe3_°mt
 *
pStmt
, 
i
, 
sqlôe3_uöt64
 
n
){

1441 
rc
;

1442 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1443 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1444 if–
n
>(
u64
)
p
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
] ){

1445 
rc
 = 
SQLITE_TOOBIG
;

1447 
	`as£π
–(
n
 & 0x7FFFFFFF)==n );

1448 
rc
 = 
	`sqlôe3_böd_zîoblob
(
pStmt
, 
i
, 
n
);

1450 
rc
 = 
	`sqlôe3ApiExô
(
p
->
db
,Ñc);

1451 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1452  
rc
;

1453 
	}
}

1459 
	$sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
 *
pStmt
){

1460 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1461  
p
 ?Ö->
nV¨
 : 0;

1462 
	}
}

1470 c⁄° *
	$sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
 *
pStmt
, 
i
){

1471 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1472 if–
p
==0 || 
i
<1 || i>p->
nzV¨
 ){

1475  
p
->
azV¨
[
i
-1];

1476 
	}
}

1483 
	$sqlôe3VdbeP¨amëîIndex
(
Vdbe
 *
p
, c⁄° *
zName
, 
nName
){

1484 
i
;

1485 if–
p
==0 ){

1488 if–
zName
 ){

1489 
i
=0; i<
p
->
nzV¨
; i++){

1490 c⁄° *
z
 = 
p
->
azV¨
[
i
];

1491 if–
z
 && 
	`°∫cmp
(z,
zName
,
nName
)==0 && z[nName]==0 ){

1492  
i
+1;

1497 
	}
}

1498 
	$sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
 *
pStmt
, c⁄° *
zName
){

1499  
	`sqlôe3VdbeP¨amëîIndex
((
Vdbe
*)
pStmt
, 
zName
, 
	`sqlôe3SåÀn30
(zName));

1500 
	}
}

1505 
	$sqlôe3Tøns„rBödögs
(
sqlôe3_°mt
 *
pFromStmt
, sqlôe3_°mà*
pToStmt
){

1506 
Vdbe
 *
pFrom
 = (Vdbe*)
pFromStmt
;

1507 
Vdbe
 *
pTo
 = (Vdbe*)
pToStmt
;

1508 
i
;

1509 
	`as£π
–
pTo
->
db
==
pFrom
->db );

1510 
	`as£π
–
pTo
->
nV¨
==
pFrom
->nVar );

1511 
	`sqlôe3_muãx_íãr
(
pTo
->
db
->
muãx
);

1512 
i
=0; i<
pFrom
->
nV¨
; i++){

1513 
	`sqlôe3VdbeMemMove
(&
pTo
->
aV¨
[
i
], &
pFrom
->aVar[i]);

1515 
	`sqlôe3_muãx_Àave
(
pTo
->
db
->
muãx
);

1516  
SQLITE_OK
;

1517 
	}
}

1519 #i‚de‡
SQLITE_OMIT_DEPRECATED


1532 
	$sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
 *
pFromStmt
, sqlôe3_°mà*
pToStmt
){

1533 
Vdbe
 *
pFrom
 = (Vdbe*)
pFromStmt
;

1534 
Vdbe
 *
pTo
 = (Vdbe*)
pToStmt
;

1535 if–
pFrom
->
nV¨
!=
pTo
->nVar ){

1536  
SQLITE_ERROR
;

1538 if–
pTo
->
isPª∑ªV2
 &&ÖTo->
expmask
 ){

1539 
pTo
->
expúed
 = 1;

1541 if–
pFrom
->
isPª∑ªV2
 &&ÖFrom->
expmask
 ){

1542 
pFrom
->
expúed
 = 1;

1544  
	`sqlôe3Tøns„rBödögs
(
pFromStmt
, 
pToStmt
);

1545 
	}
}

1554 
sqlôe3
 *
	$sqlôe3_db_h™dÀ
(
sqlôe3_°mt
 *
pStmt
){

1555  
pStmt
 ? ((
Vdbe
*ÌStmt)->
db
 : 0;

1556 
	}
}

1562 
	$sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
){

1563  
pStmt
 ? ((
Vdbe
*ÌStmt)->
ªadO∆y
 : 1;

1564 
	}
}

1569 
	$sqlôe3_°mt_busy
(
sqlôe3_°mt
 *
pStmt
){

1570 
Vdbe
 *
v
 = (Vdbe*)
pStmt
;

1571  
v
!=0 && v->
pc
>=0 && v->
magic
==
VDBE_MAGIC_RUN
;

1572 
	}
}

1580 
sqlôe3_°mt
 *
	$sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, 
sqlôe3_°mt
 *
pStmt
){

1581 
sqlôe3_°mt
 *
pNext
;

1582 #ifde‡
SQLITE_ENABLE_API_ARMOR


1583 if–!
	`sqlôe3Sa„tyCheckOk
(
pDb
) ){

1584 ()
SQLITE_MISUSE_BKPT
;

1588 
	`sqlôe3_muãx_íãr
(
pDb
->
muãx
);

1589 if–
pStmt
==0 ){

1590 
pNext
 = (
sqlôe3_°mt
*)
pDb
->
pVdbe
;

1592 
pNext
 = (
sqlôe3_°mt
*)((
Vdbe
*)
pStmt
)->pNext;

1594 
	`sqlôe3_muãx_Àave
(
pDb
->
muãx
);

1595  
pNext
;

1596 
	}
}

1601 
	$sqlôe3_°mt_°©us
(
sqlôe3_°mt
 *
pStmt
, 
›
, 
ª£tFœg
){

1602 
Vdbe
 *
pVdbe
 = (Vdbe*)
pStmt
;

1603 
u32
 
v
;

1604 #ifde‡
SQLITE_ENABLE_API_ARMOR


1605 if–!
pStmt
 ){

1606 ()
SQLITE_MISUSE_BKPT
;

1610 
v
 = 
pVdbe
->
aCou¡î
[
›
];

1611 if–
ª£tFœg
 ) 
pVdbe
->
aCou¡î
[
›
] = 0;

1612  ()
v
;

1613 
	}
}

1618 c⁄° *
	$sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
){

1619 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1620  
p
 ?Ö->
zSql
 : 0;

1621 
	}
}

1632 *
	$sqlôe3_ex∑nded_sql
(
sqlôe3_°mt
 *
pStmt
){

1633 #ifde‡
SQLITE_OMIT_TRACE


1636 *
z
 = 0;

1637 c⁄° *
zSql
 = 
	`sqlôe3_sql
(
pStmt
);

1638 if–
zSql
 ){

1639 
Vdbe
 *
p
 = (Vdbê*)
pStmt
;

1640 
	`sqlôe3_muãx_íãr
(
p
->
db
->
muãx
);

1641 
z
 = 
	`sqlôe3VdbeEx∑ndSql
(
p
, 
zSql
);

1642 
	`sqlôe3_muãx_Àave
(
p
->
db
->
muãx
);

1644  
z
;

1646 
	}
}

1648 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1654 
U≈ackedRec‹d
 *
	$vdbeU≈ackRec‹d
(

1655 
KeyInfo
 *
pKeyInfo
,

1656 
nKey
,

1657 c⁄° *
pKey


1659 *
dummy
;

1660 
U≈ackedRec‹d
 *
pRë
;

1662 
pRë
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pKeyInfo
, 0, 0, &
dummy
);

1663 if–
pRë
 ){

1664 
	`mem£t
(
pRë
->
aMem
, 0, (
Mem
)*(
pKeyInfo
->
nFõld
+1));

1665 
	`sqlôe3VdbeRec‹dU≈ack
(
pKeyInfo
, 
nKey
, 
pKey
, 
pRë
);

1667  
pRë
;

1668 
	}
}

1674 
	$sqlôe3_¥eupd©e_ﬁd
(
sqlôe3
 *
db
, 
iIdx
, 
sqlôe3_vÆue
 **
µVÆue
){

1675 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1676 
rc
 = 
SQLITE_OK
;

1680 if–!
p
 ||Ö->
›
==
SQLITE_INSERT
 ){

1681 
rc
 = 
SQLITE_MISUSE_BKPT
;

1682 
¥eupd©e_ﬁd_out
;

1684 if–
iIdx
>=
p
->
pC§
->
nFõld
 || iIdx<0 ){

1685 
rc
 = 
SQLITE_RANGE
;

1686 
¥eupd©e_ﬁd_out
;

1690 if–
p
->
pU≈acked
==0 ){

1691 
u32
 
nRec
;

1692 
u8
 *
aRec
;

1694 
nRec
 = 
	`sqlôe3BåìPaylﬂdSize
(
p
->
pC§
->
uc
.
pCurs‹
);

1695 
aRec
 = 
	`sqlôe3DbMÆlocRaw
(
db
, 
nRec
);

1696 if–!
aRec
 ) 
¥eupd©e_ﬁd_out
;

1697 
rc
 = 
	`sqlôe3BåìD©a
(
p
->
pC§
->
uc
.
pCurs‹
, 0, 
nRec
, 
aRec
);

1698 if–
rc
==
SQLITE_OK
 ){

1699 
p
->
pU≈acked
 = 
	`vdbeU≈ackRec‹d
(&p->
keyöfo
, 
nRec
, 
aRec
);

1700 if–!
p
->
pU≈acked
 ) 
rc
 = 
SQLITE_NOMEM
;

1702 if–
rc
!=
SQLITE_OK
 ){

1703 
	`sqlôe3DbFªe
(
db
, 
aRec
);

1704 
¥eupd©e_ﬁd_out
;

1706 
p
->
aRec‹d
 = 
aRec
;

1709 if–
iIdx
>=
p
->
pU≈acked
->
nFõld
 ){

1710 *
µVÆue
 = (
sqlôe3_vÆue
 *)
	`cﬁumnNuŒVÆue
();

1712 *
µVÆue
 = &
p
->
pU≈acked
->
aMem
[
iIdx
];

1713 if–
iIdx
==
p
->
iPKey
 ){

1714 
	`sqlôe3VdbeMemSëI¡64
(*
µVÆue
, 
p
->
iKey1
);

1718 
¥eupd©e_ﬁd_out
:

1719 
	`sqlôe3Eº‹
(
db
, 
rc
);

1720  
	`sqlôe3ApiExô
(
db
, 
rc
);

1721 
	}
}

1724 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1729 
	$sqlôe3_¥eupd©e_cou¡
(
sqlôe3
 *
db
){

1730 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1731  (
p
 ?Ö->
keyöfo
.
nFõld
 : 0);

1732 
	}
}

1735 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1747 
	$sqlôe3_¥eupd©e_dïth
(
sqlôe3
 *
db
){

1748 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1749  (
p
 ?Ö->
v
->
nFøme
 : 0);

1750 
	}
}

1753 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


1758 
	$sqlôe3_¥eupd©e_√w
(
sqlôe3
 *
db
, 
iIdx
, 
sqlôe3_vÆue
 **
µVÆue
){

1759 
PªUpd©e
 *
p
 = 
db
->
pPªUpd©e
;

1760 
rc
 = 
SQLITE_OK
;

1761 
Mem
 *
pMem
;

1763 if–!
p
 ||Ö->
›
==
SQLITE_DELETE
 ){

1764 
rc
 = 
SQLITE_MISUSE_BKPT
;

1765 
¥eupd©e_√w_out
;

1767 if–
iIdx
>=
p
->
pC§
->
nFõld
 || iIdx<0 ){

1768 
rc
 = 
SQLITE_RANGE
;

1769 
¥eupd©e_√w_out
;

1772 if–
p
->
›
==
SQLITE_INSERT
 ){

1775 
U≈ackedRec‹d
 *
pU≈ack
 = 
p
->
pNewU≈acked
;

1776 if–!
pU≈ack
 ){

1777 
Mem
 *
pD©a
 = &
p
->
v
->
aMem
[p->
iNewReg
];

1778 
rc
 = 
	`sqlôe3VdbeMemEx∑ndBlob
(
pD©a
);

1779 if–
rc
!=
SQLITE_OK
 ) 
¥eupd©e_√w_out
;

1780 
pU≈ack
 = 
	`vdbeU≈ackRec‹d
(&
p
->
keyöfo
, 
pD©a
->
n
,ÖD©a->
z
);

1781 if–!
pU≈ack
 ){

1782 
rc
 = 
SQLITE_NOMEM
;

1783 
¥eupd©e_√w_out
;

1785 
p
->
pNewU≈acked
 = 
pU≈ack
;

1787 if–
iIdx
>=
pU≈ack
->
nFõld
 ){

1788 
pMem
 = (
sqlôe3_vÆue
 *)
	`cﬁumnNuŒVÆue
();

1790 
pMem
 = &
pU≈ack
->
aMem
[
iIdx
];

1791 if–
iIdx
==
p
->
iPKey
 ){

1792 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, 
p
->
iKey2
);

1801 
	`as£π
–
p
->
›
==
SQLITE_UPDATE
 );

1802 if–!
p
->
aNew
 ){

1803 
p
->
aNew
 = (
Mem
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (MemË*Ö->
pC§
->
nFõld
);

1804 if–!
p
->
aNew
 ){

1805 
rc
 = 
SQLITE_NOMEM
;

1806 
¥eupd©e_√w_out
;

1809 
	`as£π
–
iIdx
>=0 && iIdx<
p
->
pC§
->
nFõld
 );

1810 
pMem
 = &
p
->
aNew
[
iIdx
];

1811 if–
pMem
->
Êags
==0 ){

1812 if–
iIdx
==
p
->
iPKey
 ){

1813 
	`sqlôe3VdbeMemSëI¡64
(
pMem
, 
p
->
iKey2
);

1815 
rc
 = 
	`sqlôe3VdbeMemC›y
(
pMem
, &
p
->
v
->
aMem
[p->
iNewReg
+1+
iIdx
]);

1816 if–
rc
!=
SQLITE_OK
 ) 
¥eupd©e_√w_out
;

1820 *
µVÆue
 = 
pMem
;

1822 
¥eupd©e_√w_out
:

1823 
	`sqlôe3Eº‹
(
db
, 
rc
);

1824  
	`sqlôe3ApiExô
(
db
, 
rc
);

1825 
	}
}

1828 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1832 
	$sqlôe3_°mt_sˇn°©us
(

1833 
sqlôe3_°mt
 *
pStmt
,

1834 
idx
,

1835 
iSˇnSètusOp
,

1836 *
pOut


1838 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1839 
SˇnSètus
 *
pSˇn
;

1840 if–
idx
<0 || idx>=
p
->
nSˇn
 )  1;

1841 
pSˇn
 = &
p
->
aSˇn
[
idx
];

1842  
iSˇnSètusOp
 ){

1843 
SQLITE_SCANSTAT_NLOOP
: {

1844 *(
sqlôe3_öt64
*)
pOut
 = 
p
->
™Exec
[
pSˇn
->
addrLo›
];

1847 
SQLITE_SCANSTAT_NVISIT
: {

1848 *(
sqlôe3_öt64
*)
pOut
 = 
p
->
™Exec
[
pSˇn
->
addrVisô
];

1851 
SQLITE_SCANSTAT_EST
: {

1852 
r
 = 1.0;

1853 
LogE°
 
x
 = 
pSˇn
->
nE°
;

1854  
x
<100 ){

1855 
x
 += 10;

1856 
r
 *= 0.5;

1858 *(*)
pOut
 = 
r
*
	`sqlôe3LogE°ToI¡
(
x
);

1861 
SQLITE_SCANSTAT_NAME
: {

1862 *(c⁄° **)
pOut
 = 
pSˇn
->
zName
;

1865 
SQLITE_SCANSTAT_EXPLAIN
: {

1866 if–
pSˇn
->
addrEx∂aö
 ){

1867 *(c⁄° **)
pOut
 = 
p
->
aOp
[ 
pSˇn
->
addrEx∂aö
 ].
p4
.
z
;

1869 *(c⁄° **)
pOut
 = 0;

1873 
SQLITE_SCANSTAT_SELECTID
: {

1874 if–
pSˇn
->
addrEx∂aö
 ){

1875 *(*)
pOut
 = 
p
->
aOp
[ 
pSˇn
->
addrEx∂aö
 ].
p1
;

1877 *(*)
pOut
 = -1;

1886 
	}
}

1891 
	$sqlôe3_°mt_sˇn°©us_ª£t
(
sqlôe3_°mt
 *
pStmt
){

1892 
Vdbe
 *
p
 = (Vdbe*)
pStmt
;

1893 
	`mem£t
(
p
->
™Exec
, 0,Ö->
nOp
 * (
i64
));

1894 
	}
}

	@vdbeaux.c

15 
	~"sqlôeI¡.h
"

16 
	~"vdbeI¡.h
"

21 
Vdbe
 *
	$sqlôe3VdbeCª©e
(
P¨£
 *
pP¨£
){

22 
sqlôe3
 *
db
 = 
pP¨£
->db;

23 
Vdbe
 *
p
;

24 
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
Vdbe
) );

25 if–
p
==0 )  0;

26 
p
->
db
 = db;

27 if–
db
->
pVdbe
 ){

28 
db
->
pVdbe
->
pPªv
 = 
p
;

30 
p
->
pNext
 = 
db
->
pVdbe
;

31 
p
->
pPªv
 = 0;

32 
db
->
pVdbe
 = 
p
;

33 
p
->
magic
 = 
VDBE_MAGIC_INIT
;

34 
p
->
pP¨£
 =ÖParse;

35 
	`as£π
–
pP¨£
->
aLabñ
==0 );

36 
	`as£π
–
pP¨£
->
nLabñ
==0 );

37 
	`as£π
–
pP¨£
->
nOpAŒoc
==0 );

38 
	`as£π
–
pP¨£
->
szOpAŒoc
==0 );

39  
p
;

40 
	}
}

45 
	$sqlôe3VdbeEº‹
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

46 
va_li°
 
≠
;

47 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zEºMsg
);

48 
	`va_°¨t
(
≠
, 
zF‹m©
);

49 
p
->
zEºMsg
 = 
	`sqlôe3VMPrötf
’->
db
, 
zF‹m©
, 
≠
);

50 
	`va_íd
(
≠
);

51 
	}
}

56 
	$sqlôe3VdbeSëSql
(
Vdbe
 *
p
, c⁄° *
z
, 
n
, 
isPª∑ªV2
){

57 
	`as£π
–
isPª∑ªV2
==1 || isPrepareV2==0 );

58 if–
p
==0 ) ;

59 #i‡
	`deföed
(
SQLITE_OMIT_TRACE
Ë&& !deföed(
SQLITE_ENABLE_SQLLOG
)

60 if–!
isPª∑ªV2
 ) ;

62 
	`as£π
–
p
->
zSql
==0 );

63 
p
->
zSql
 = 
	`sqlôe3DbSåNDup
’->
db
, 
z
, 
n
);

64 
p
->
isPª∑ªV2
 = (
u8
)isPrepareV2;

65 
	}
}

70 
	$sqlôe3VdbeSw≠
(
Vdbe
 *
pA
, Vdbê*
pB
){

71 
Vdbe
 
tmp
, *
pTmp
;

72 *
zTmp
;

73 
	`as£π
–
pA
->
db
==
pB
->db );

74 
tmp
 = *
pA
;

75 *
pA
 = *
pB
;

76 *
pB
 = 
tmp
;

77 
pTmp
 = 
pA
->
pNext
;

78 
pA
->
pNext
 = 
pB
->pNext;

79 
pB
->
pNext
 = 
pTmp
;

80 
pTmp
 = 
pA
->
pPªv
;

81 
pA
->
pPªv
 = 
pB
->pPrev;

82 
pB
->
pPªv
 = 
pTmp
;

83 
zTmp
 = 
pA
->
zSql
;

84 
pA
->
zSql
 = 
pB
->zSql;

85 
pB
->
zSql
 = 
zTmp
;

86 
pB
->
isPª∑ªV2
 = 
pA
->isPrepareV2;

87 
	}
}

99 
	$growOpAºay
(
Vdbe
 *
v
, 
nOp
){

100 
VdbeOp
 *
pNew
;

101 
P¨£
 *
p
 = 
v
->
pP¨£
;

110 #ifde‡
SQLITE_TEST_REALLOC_STRESS


111 
nNew
 = (
p
->
nOpAŒoc
>=512 ?Ö->nOpAŒoc*2 :Ö->nOpAŒoc+
nOp
);

113 
nNew
 = (
p
->
nOpAŒoc
 ?Ö->nOpAŒoc*2 : ()(1024/(
Op
)));

114 
	`UNUSED_PARAMETER
(
nOp
);

117 
	`as£π
–
nOp
<=(1024/(
Op
)) );

118 
	`as£π
–
nNew
>=(
p
->
nOpAŒoc
+
nOp
) );

119 
pNew
 = 
	`sqlôe3DbRóŒoc
(
p
->
db
, 
v
->
aOp
, 
nNew
*(
Op
));

120 if–
pNew
 ){

121 
p
->
szOpAŒoc
 = 
	`sqlôe3DbMÆlocSize
’->
db
, 
pNew
);

122 
p
->
nOpAŒoc
 =Ö->
szOpAŒoc
/(
Op
);

123 
v
->
aOp
 = 
pNew
;

125  (
pNew
 ? 
SQLITE_OK
 : 
SQLITE_NOMEM_BKPT
);

126 
	}
}

128 #ifde‡
SQLITE_DEBUG


133 
	$ã°_add›_bªakpoöt
(){

134 
n
 = 0;

135 
n
++;

136 
	}
}

155 
SQLITE_NOINLINE
 
	$growOp3
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
, 
p3
){

156 
	`as£π
–
p
->
pP¨£
->
nOpAŒoc
<ı->
nOp
 );

157 if–
	`growOpAºay
(
p
, 1) )  1;

158 
	`as£π
–
p
->
pP¨£
->
nOpAŒoc
>p->
nOp
 );

159  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

160 
	}
}

161 
	$sqlôe3VdbeAddOp3
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
, 
p3
){

162 
i
;

163 
VdbeOp
 *
pOp
;

165 
i
 = 
p
->
nOp
;

166 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

167 
	`as£π
–
›
>=0 && op<0xff );

168 if–
p
->
pP¨£
->
nOpAŒoc
<=
i
 ){

169  
	`growOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

171 
p
->
nOp
++;

172 
pOp
 = &
p
->
aOp
[
i
];

173 
pOp
->
›code
 = (
u8
)
›
;

174 
pOp
->
p5
 = 0;

175 
pOp
->
p1
 =Ö1;

176 
pOp
->
p2
 =Ö2;

177 
pOp
->
p3
 =Ö3;

178 
pOp
->
p4
.
p
 = 0;

179 
pOp
->
p4ty≥
 = 
P4_NOTUSED
;

180 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


181 
pOp
->
zCommít
 = 0;

183 #ifde‡
SQLITE_DEBUG


184 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

185 
jj
, 
kk
;

186 
P¨£
 *
pP¨£
 = 
p
->pParse;

187 
jj
=
kk
=0; jj<
SQLITE_N_COLCACHE
; jj++){

188 
yCﬁCache
 *
x
 = 
pP¨£
->
aCﬁCache
 + 
jj
;

189 if–
x
->
iLevñ
>
pP¨£
->
iCacheLevñ
 || x->
iReg
==0 ) ;

190 
	`¥ötf
("Ñ[%d]={%d:%d}", 
x
->
iReg
, x->
iTabÀ
, x->
iCﬁumn
);

191 
kk
++;

193 if–
kk
 ) 
	`¥ötf
("\n");

194 
	`sqlôe3VdbePrötOp
(0, 
i
, &
p
->
aOp
[i]);

195 
	`ã°_add›_bªakpoöt
();

198 #ifde‡
VDBE_PROFILE


199 
pOp
->
cy˛es
 = 0;

200 
pOp
->
˙t
 = 0;

202 #ifde‡
SQLITE_VDBE_COVERAGE


203 
pOp
->
iSrcLöe
 = 0;

205  
i
;

206 
	}
}

207 
	$sqlôe3VdbeAddOp0
(
Vdbe
 *
p
, 
›
){

208  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 0, 0, 0);

209 
	}
}

210 
	$sqlôe3VdbeAddOp1
(
Vdbe
 *
p
, 
›
, 
p1
){

211  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 0, 0);

212 
	}
}

213 
	$sqlôe3VdbeAddOp2
(
Vdbe
 *
p
, 
›
, 
p1
, 
p2
){

214  
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 0);

215 
	}
}

219 
	$sqlôe3VdbeGŸo
(
Vdbe
 *
p
, 
iDe°
){

220  
	`sqlôe3VdbeAddOp3
(
p
, 
OP_GŸo
, 0, 
iDe°
, 0);

221 
	}
}

226 
	$sqlôe3VdbeLﬂdSåög
(
Vdbe
 *
p
, 
iDe°
, c⁄° *
zSå
){

227  
	`sqlôe3VdbeAddOp4
(
p
, 
OP_Såög8
, 0, 
iDe°
, 0, 
zSå
, 0);

228 
	}
}

238 
	$sqlôe3VdbeMu…iLﬂd
(
Vdbe
 *
p
, 
iDe°
, c⁄° *
zTy≥s
, ...){

239 
va_li°
 
≠
;

240 
i
;

241 
c
;

242 
	`va_°¨t
(
≠
, 
zTy≥s
);

243 
i
=0; (
c
 = 
zTy≥s
[i])!=0; i++){

244 if–
c
=='s' ){

245 c⁄° *
z
 = 
	`va_¨g
(
≠
, const *);

246 
	`sqlôe3VdbeAddOp4
(
p
, 
z
==0 ? 
OP_NuŒ
 : 
OP_Såög8
, 0, 
iDe°
++, 0, z, 0);

248 
	`as£π
–
c
=='i' );

249 
	`sqlôe3VdbeAddOp2
(
p
, 
OP_I¡egî
, 
	`va_¨g
(
≠
, ), 
iDe°
++);

252 
	`va_íd
(
≠
);

253 
	}
}

258 
	$sqlôe3VdbeAddOp4
(

259 
Vdbe
 *
p
,

260 
›
,

261 
p1
,

262 
p2
,

263 
p3
,

264 c⁄° *
zP4
,

265 
p4ty≥


267 
addr
 = 
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

268 
	`sqlôe3VdbeCh™geP4
(
p
, 
addr
, 
zP4
, 
p4ty≥
);

269  
addr
;

270 
	}
}

276 
	$sqlôe3VdbeAddOp4Dup8
(

277 
Vdbe
 *
p
,

278 
›
,

279 
p1
,

280 
p2
,

281 
p3
,

282 c⁄° 
u8
 *
zP4
,

283 
p4ty≥


285 *
p4c›y
 = 
	`sqlôe3DbMÆlocRawNN
(
	`sqlôe3VdbeDb
(
p
), 8);

286 if–
p4c›y
 ) 
	`mem˝y
’4c›y, 
zP4
, 8);

287  
	`sqlôe3VdbeAddOp4
(
p
, 
›
, 
p1
, 
p2
, 
p3
, 
p4c›y
, 
p4ty≥
);

288 
	}
}

298 
	$sqlôe3VdbeAddP¨£SchemaOp
(
Vdbe
 *
p
, 
iDb
, *
zWhîe
){

299 
j
;

300 
	`sqlôe3VdbeAddOp4
(
p
, 
OP_P¨£Schema
, 
iDb
, 0, 0, 
zWhîe
, 
P4_DYNAMIC
);

301 
j
=0; j<
p
->
db
->
nDb
; j++Ë
	`sqlôe3VdbeU£sBåì
(p, j);

302 
	}
}

307 
	$sqlôe3VdbeAddOp4I¡
(

308 
Vdbe
 *
p
,

309 
›
,

310 
p1
,

311 
p2
,

312 
p3
,

313 
p4


315 
addr
 = 
	`sqlôe3VdbeAddOp3
(
p
, 
›
, 
p1
, 
p2
, 
p3
);

316 
	`sqlôe3VdbeCh™geP4
(
p
, 
addr
, 
	`SQLITE_INT_TO_PTR
(
p4
), 
P4_INT32
);

317  
addr
;

318 
	}
}

322 
	$sqlôe3VdbeEndC‹outöe
(
Vdbe
 *
v
, 
ªgYõld
){

323 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_EndC‹outöe
, 
ªgYõld
);

331 
v
->
pP¨£
->
nTempReg
 = 0;

332 
v
->
pP¨£
->
nR™geReg
 = 0;

333 
	}
}

349 
	$sqlôe3VdbeMakeLabñ
(
Vdbe
 *
v
){

350 
P¨£
 *
p
 = 
v
->
pP¨£
;

351 
i
 = 
p
->
nLabñ
++;

352 
	`as£π
–
v
->
magic
==
VDBE_MAGIC_INIT
 );

353 if–(
i
 & (i-1))==0 ){

354 
p
->
aLabñ
 = 
	`sqlôe3DbRóŒocOrFªe
’->
db
,Ö->aLabel,

355 (
i
*2+1)*(
p
->
aLabñ
[0]));

357 if–
p
->
aLabñ
 ){

358 
p
->
aLabñ
[
i
] = -1;

360  
	`ADDR
(
i
);

361 
	}
}

368 
	$sqlôe3VdbeResﬁveLabñ
(
Vdbe
 *
v
, 
x
){

369 
P¨£
 *
p
 = 
v
->
pP¨£
;

370 
j
 = 
	`ADDR
(
x
);

371 
	`as£π
–
v
->
magic
==
VDBE_MAGIC_INIT
 );

372 
	`as£π
–
j
<
p
->
nLabñ
 );

373 
	`as£π
–
j
>=0 );

374 if–
p
->
aLabñ
 ){

375 
p
->
aLabñ
[
j
] = 
v
->
nOp
;

377 
p
->
iFixedOp
 = 
v
->
nOp
 - 1;

378 
	}
}

383 
	$sqlôe3VdbeRunO∆yOn˚
(
Vdbe
 *
p
){

384 
p
->
runO∆yOn˚
 = 1;

385 
	}
}

390 
	$sqlôe3VdbeReußbÀ
(
Vdbe
 *
p
){

391 
p
->
runO∆yOn˚
 = 0;

392 
	}
}

394 #ifde‡
SQLITE_DEBUG


412 
VdbeOpIãr
 
	tVdbeOpIãr
;

413 
	sVdbeOpIãr
 {

414 
Vdbe
 *
	mv
;

415 
SubProgøm
 **
	m≠Sub
;

416 
	mnSub
;

417 
	miAddr
;

418 
	miSub
;

420 
Op
 *
	$›IãrNext
(
VdbeOpIãr
 *
p
){

421 
Vdbe
 *
v
 = 
p
->v;

422 
Op
 *
pRë
 = 0;

423 
Op
 *
aOp
;

424 
nOp
;

426 if–
p
->
iSub
<ı->
nSub
 ){

428 if–
p
->
iSub
==0 ){

429 
aOp
 = 
v
->aOp;

430 
nOp
 = 
v
->nOp;

432 
aOp
 = 
p
->
≠Sub
[p->
iSub
-1]->aOp;

433 
nOp
 = 
p
->
≠Sub
[p->
iSub
-1]->nOp;

435 
	`as£π
–
p
->
iAddr
<
nOp
 );

437 
pRë
 = &
aOp
[
p
->
iAddr
];

438 
p
->
iAddr
++;

439 if–
p
->
iAddr
==
nOp
 ){

440 
p
->
iSub
++;

441 
p
->
iAddr
 = 0;

444 if–
pRë
->
p4ty≥
==
P4_SUBPROGRAM
 ){

445 
nByã
 = (
p
->
nSub
+1)*(
SubProgøm
*);

446 
j
;

447 
j
=0; j<
p
->
nSub
; j++){

448 if–
p
->
≠Sub
[
j
]==
pRë
->
p4
.
pProgøm
 ) ;

450 if–
j
==
p
->
nSub
 ){

451 
p
->
≠Sub
 = 
	`sqlôe3DbRóŒocOrFªe
(
v
->
db
,Ö->≠Sub, 
nByã
);

452 if–!
p
->
≠Sub
 ){

453 
pRë
 = 0;

455 
p
->
≠Sub
[p->
nSub
++] = 
pRë
->
p4
.
pProgøm
;

461  
pRë
;

462 
	}
}

485 
	$sqlôe3VdbeAs£πMayAb‹t
(
Vdbe
 *
v
, 
mayAb‹t
){

486 
hasAb‹t
 = 0;

487 
hasFkCou¡î
 = 0;

488 
hasCª©eTabÀ
 = 0;

489 
hasInôC‹outöe
 = 0;

490 
Op
 *
pOp
;

491 
VdbeOpIãr
 
sIãr
;

492 
	`mem£t
(&
sIãr
, 0, (sIter));

493 
sIãr
.
v
 = v;

495  (
pOp
 = 
	`›IãrNext
(&
sIãr
))!=0 ){

496 
›code
 = 
pOp
->opcode;

497 if–
›code
==
OP_De°roy
 || opcode==
OP_VUpd©e
 || opcode==
OP_VRíame


498 || ((
›code
==
OP_HÆt
 || opcode==
OP_HÆtIfNuŒ
)

499 && ((
pOp
->
p1
&0xff)==
SQLITE_CONSTRAINT
 &&ÖOp->
p2
==
OE_Ab‹t
))

501 
hasAb‹t
 = 1;

504 if–
›code
==
OP_Cª©eTabÀ
 ) 
hasCª©eTabÀ
 = 1;

505 if–
›code
==
OP_InôC‹outöe
 ) 
hasInôC‹outöe
 = 1;

506 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


507 if–
›code
==
OP_FkCou¡î
 && 
pOp
->
p1
==0 &&ÖOp->
p2
==1 ){

508 
hasFkCou¡î
 = 1;

512 
	`sqlôe3DbFªe
(
v
->
db
, 
sIãr
.
≠Sub
);

519  ( 
v
->
db
->
mÆlocFaûed
 || 
hasAb‹t
==
mayAb‹t
 || 
hasFkCou¡î


520 || (
hasCª©eTabÀ
 && 
hasInôC‹outöe
) );

521 
	}
}

545 
	$ªsﬁveP2VÆues
(
Vdbe
 *
p
, *
pMaxFuncArgs
){

546 
nMaxArgs
 = *
pMaxFuncArgs
;

547 
Op
 *
pOp
;

548 
P¨£
 *
pP¨£
 = 
p
->pParse;

549 *
aLabñ
 = 
pP¨£
->aLabel;

550 
p
->
ªadO∆y
 = 1;

551 
p
->
bIsRódî
 = 0;

552 
pOp
 = &
p
->
aOp
[p->
nOp
-1];

561 if–
pOp
->
›code
<=
SQLITE_MX_JUMP_OPCODE
 ){

564  
pOp
->
›code
 ){

565 
OP_Tønß˘i⁄
: {

566 if–
pOp
->
p2
!=0 ) 
p
->
ªadO∆y
 = 0;

569 
OP_AutoCommô
:

570 
OP_Savïoöt
: {

571 
p
->
bIsRódî
 = 1;

574 #i‚de‡
SQLITE_OMIT_WAL


575 
OP_Checkpoöt
:

577 
OP_Vacuum
:

578 
OP_Jou∫ÆMode
: {

579 
p
->
ªadO∆y
 = 0;

580 
p
->
bIsRódî
 = 1;

583 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


584 
OP_VUpd©e
: {

585 if–
pOp
->
p2
>
nMaxArgs
 )ÇMaxArgs =ÖOp->p2;

588 
OP_VFûãr
: {

589 
n
;

590 
	`as£π
–(
pOp
 - 
p
->
aOp
) >= 3 );

591 
	`as£π
–
pOp
[-1].
›code
==
OP_I¡egî
 );

592 
n
 = 
pOp
[-1].
p1
;

593 if–
n
>
nMaxArgs
 )ÇMaxArgs =Ç;

597 
OP_Next
:

598 
OP_NextIfO≥n
:

599 
OP_S‹ãrNext
: {

600 
pOp
->
p4
.
xAdv™˚
 = 
sqlôe3BåìNext
;

601 
pOp
->
p4ty≥
 = 
P4_ADVANCE
;

604 
OP_Pªv
:

605 
OP_PªvIfO≥n
: {

606 
pOp
->
p4
.
xAdv™˚
 = 
sqlôe3BåìPªvious
;

607 
pOp
->
p4ty≥
 = 
P4_ADVANCE
;

611 if–(
sqlôe3OpcodePr›îty
[
pOp
->
›code
] & 
OPFLG_JUMP
)!=0 &&ÖOp->
p2
<0 ){

612 
	`as£π
–
	`ADDR
(
pOp
->
p2
)<
pP¨£
->
nLabñ
 );

613 
pOp
->
p2
 = 
aLabñ
[
	`ADDR
(pOp->p2)];

616 if–
pOp
==
p
->
aOp
 ) ;

617 
pOp
--;

619 
	`sqlôe3DbFªe
(
p
->
db
, 
pP¨£
->
aLabñ
);

620 
pP¨£
->
aLabñ
 = 0;

621 
pP¨£
->
nLabñ
 = 0;

622 *
pMaxFuncArgs
 = 
nMaxArgs
;

623 
	`as£π
–
p
->
bIsRódî
!=0 || 
	`DbMaskAŒZîo
’->
båìMask
) );

624 
	}
}

629 
	$sqlôe3VdbeCuºítAddr
(
Vdbe
 *
p
){

630 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

631  
p
->
nOp
;

632 
	}
}

642 #i‡
deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_TEST_REALLOC_STRESS
)

643 
	$sqlôe3VdbeVîifyNoMÆlocRequúed
(
Vdbe
 *
p
, 
N
){

644 
	`as£π
–
p
->
nOp
 + 
N
 <p->
pP¨£
->
nOpAŒoc
 );

645 
	}
}

659 
VdbeOp
 *
	$sqlôe3VdbeTakeOpAºay
(
Vdbe
 *
p
, *
≤Op
, *
≤MaxArg
){

660 
VdbeOp
 *
aOp
 = 
p
->aOp;

661 
	`as£π
–
aOp
 && !
p
->
db
->
mÆlocFaûed
 );

664 
	`as£π
–
	`DbMaskAŒZîo
(
p
->
båìMask
) );

666 
	`ªsﬁveP2VÆues
(
p
, 
≤MaxArg
);

667 *
≤Op
 = 
p
->
nOp
;

668 
p
->
aOp
 = 0;

669  
aOp
;

670 
	}
}

679 
VdbeOp
 *
	$sqlôe3VdbeAddOpLi°
(

680 
Vdbe
 *
p
,

681 
nOp
,

682 
VdbeOpLi°
 c⁄° *
aOp
,

683 
iLöío


685 
i
;

686 
VdbeOp
 *
pOut
, *
pFú°
;

687 
	`as£π
–
nOp
>0 );

688 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

689 if–
p
->
nOp
 +ÇO∞>Ö->
pP¨£
->
nOpAŒoc
 && 
	`growOpAºay
(p,ÇOp) ){

692 
pFú°
 = 
pOut
 = &
p
->
aOp
[p->
nOp
];

693 
i
=0; i<
nOp
; i++, 
aOp
++, 
pOut
++){

694 
pOut
->
›code
 = 
aOp
->opcode;

695 
pOut
->
p1
 = 
aOp
->p1;

696 
pOut
->
p2
 = 
aOp
->p2;

697 
	`as£π
–
aOp
->
p2
>=0 );

698 if–(
sqlôe3OpcodePr›îty
[
aOp
->
›code
] & 
OPFLG_JUMP
)!=0 &&áOp->
p2
>0 ){

699 
pOut
->
p2
 +
p
->
nOp
;

701 
pOut
->
p3
 = 
aOp
->p3;

702 
pOut
->
p4ty≥
 = 
P4_NOTUSED
;

703 
pOut
->
p4
.
p
 = 0;

704 
pOut
->
p5
 = 0;

705 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


706 
pOut
->
zCommít
 = 0;

708 #ifde‡
SQLITE_VDBE_COVERAGE


709 
pOut
->
iSrcLöe
 = 
iLöío
+
i
;

711 ()
iLöío
;

713 #ifde‡
SQLITE_DEBUG


714 if–
p
->
db
->
Êags
 & 
SQLITE_VdbeAdd›Tø˚
 ){

715 
	`sqlôe3VdbePrötOp
(0, 
i
+
p
->
nOp
, &p->
aOp
[i+p->nOp]);

719 
p
->
nOp
 +=ÇOp;

720  
pFú°
;

721 
	}
}

723 #i‡
deföed
(
SQLITE_ENABLE_STMT_SCANSTATUS
)

727 
	$sqlôe3VdbeSˇnSètus
(

728 
Vdbe
 *
p
,

729 
addrEx∂aö
,

730 
addrLo›
,

731 
addrVisô
,

732 
LogE°
 
nE°
,

733 c⁄° *
zName


735 
nByã
 = (
p
->
nSˇn
+1Ë* (
SˇnSètus
);

736 
SˇnSètus
 *
aNew
;

737 
aNew
 = (
SˇnSètus
*)
	`sqlôe3DbRóŒoc
(
p
->
db
,Ö->
aSˇn
, 
nByã
);

738 if–
aNew
 ){

739 
SˇnSètus
 *
pNew
 = &
aNew
[
p
->
nSˇn
++];

740 
pNew
->
addrEx∂aö
 =áddrExplain;

741 
pNew
->
addrLo›
 =áddrLoop;

742 
pNew
->
addrVisô
 =áddrVisit;

743 
pNew
->
nE°
 =ÇEst;

744 
pNew
->
zName
 = 
	`sqlôe3DbSåDup
(
p
->
db
, zName);

745 
p
->
aSˇn
 = 
aNew
;

747 
	}
}

755 
	$sqlôe3VdbeCh™geOpcode
(
Vdbe
 *
p
, 
u32
 
addr
, 
u8
 
iNewOpcode
){

756 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
›code
 = 
iNewOpcode
;

757 
	}
}

758 
	$sqlôe3VdbeCh™geP1
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

759 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p1
 = 
vÆ
;

760 
	}
}

761 
	$sqlôe3VdbeCh™geP2
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

762 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p2
 = 
vÆ
;

763 
	}
}

764 
	$sqlôe3VdbeCh™geP3
(
Vdbe
 *
p
, 
u32
 
addr
, 
vÆ
){

765 
	`sqlôe3VdbeGëOp
(
p
,
addr
)->
p3
 = 
vÆ
;

766 
	}
}

767 
	$sqlôe3VdbeCh™geP5
(
Vdbe
 *
p
, 
u8
 
p5
){

768 if–!
p
->
db
->
mÆlocFaûed
 )Ö->
aOp
[p->
nOp
-1].
p5
 =Ö5;

769 
	}
}

775 
	$sqlôe3VdbeJumpHîe
(
Vdbe
 *
p
, 
addr
){

776 
p
->
pP¨£
->
iFixedOp
 =Ö->
nOp
 - 1;

777 
	`sqlôe3VdbeCh™geP2
(
p
, 
addr
,Ö->
nOp
);

778 
	}
}

785 
	$‰ìEphemîÆFun˘i⁄
(
sqlôe3
 *
db
, 
FuncDef
 *
pDef
){

786 if–(
pDef
->
funcFœgs
 & 
SQLITE_FUNC_EPHEM
)!=0 ){

787 
	`sqlôe3DbFªe
(
db
, 
pDef
);

789 
	}
}

791 
vdbeFªeOpAºay
(
sqlôe3
 *, 
Op
 *, );

796 
SQLITE_NOINLINE
 
	$‰ìP4Mem
(
sqlôe3
 *
db
, 
Mem
 *
p
){

797 if–
p
->
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
zMÆloc
);

798 
	`sqlôe3DbFªe
(
db
, 
p
);

799 
	}
}

800 
SQLITE_NOINLINE
 
	$‰ìP4FuncCtx
(
sqlôe3
 *
db
, 
sqlôe3_c⁄ãxt
 *
p
){

801 
	`‰ìEphemîÆFun˘i⁄
(
db
, 
p
->
pFunc
);

802 
	`sqlôe3DbFªe
(
db
, 
p
);

803 
	}
}

804 
	$‰ìP4
(
sqlôe3
 *
db
, 
p4ty≥
, *
p4
){

805 
	`as£π
–
db
 );

806  
p4ty≥
 ){

807 
P4_FUNCCTX
: {

808 
	`‰ìP4FuncCtx
(
db
, (
sqlôe3_c⁄ãxt
*)
p4
);

811 
P4_REAL
:

812 
P4_INT64
:

813 
P4_DYNAMIC
:

814 
P4_INTARRAY
: {

815 
	`sqlôe3DbFªe
(
db
, 
p4
);

818 
P4_KEYINFO
: {

819 if–
db
->
≤ByãsFªed
==0 ) 
	`sqlôe3KeyInfoUƒef
((
KeyInfo
*)
p4
);

822 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


823 
P4_EXPR
: {

824 
	`sqlôe3Ex¥Dñëe
(
db
, (
Ex¥
*)
p4
);

828 
P4_MPRINTF
: {

829 if–
db
->
≤ByãsFªed
==0 ) 
	`sqlôe3_‰ì
(
p4
);

832 
P4_FUNCDEF
: {

833 
	`‰ìEphemîÆFun˘i⁄
(
db
, (
FuncDef
*)
p4
);

836 
P4_MEM
: {

837 if–
db
->
≤ByãsFªed
==0 ){

838 
	`sqlôe3VÆueFªe
((
sqlôe3_vÆue
*)
p4
);

840 
	`‰ìP4Mem
(
db
, (
Mem
*)
p4
);

844 
P4_VTAB
 : {

845 if–
db
->
≤ByãsFªed
==0 ) 
	`sqlôe3VèbU∆ock
((
VTabÀ
 *)
p4
);

849 
	}
}

856 
	$vdbeFªeOpAºay
(
sqlôe3
 *
db
, 
Op
 *
aOp
, 
nOp
){

857 if–
aOp
 ){

858 
Op
 *
pOp
;

859 
pOp
=
aOp
;ÖOp<&aOp[
nOp
];ÖOp++){

860 if–
pOp
->
p4ty≥
 ) 
	`‰ìP4
(
db
,ÖOp->p4ty≥,ÖOp->
p4
.
p
);

861 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


862 
	`sqlôe3DbFªe
(
db
, 
pOp
->
zCommít
);

866 
	`sqlôe3DbFªe
(
db
, 
aOp
);

867 
	}
}

874 
	$sqlôe3VdbeLökSubProgøm
(
Vdbe
 *
pVdbe
, 
SubProgøm
 *
p
){

875 
p
->
pNext
 = 
pVdbe
->
pProgøm
;

876 
pVdbe
->
pProgøm
 = 
p
;

877 
	}
}

882 
	$sqlôe3VdbeCh™geToNo›
(
Vdbe
 *
p
, 
addr
){

883 
VdbeOp
 *
pOp
;

884 if–
p
->
db
->
mÆlocFaûed
 )  0;

885 
	`as£π
–
addr
>=0 &&áddr<
p
->
nOp
 );

886 
pOp
 = &
p
->
aOp
[
addr
];

887 
	`‰ìP4
(
p
->
db
, 
pOp
->
p4ty≥
,ÖOp->
p4
.p);

888 
pOp
->
p4ty≥
 = 
P4_NOTUSED
;

889 
pOp
->
p4
.
z
 = 0;

890 
pOp
->
›code
 = 
OP_No›
;

892 
	}
}

898 
	$sqlôe3VdbeDñëePri‹Opcode
(
Vdbe
 *
p
, 
u8
 
›
){

899 if–(
p
->
nOp
-1)>’->
pP¨£
->
iFixedOp
Ë&&Ö->
aOp
[p->nOp-1].
›code
==
›
 ){

900  
	`sqlôe3VdbeCh™geToNo›
(
p
,Ö->
nOp
-1);

904 
	}
}

923 
SQLITE_NOINLINE
 
	$vdbeCh™geP4FuŒ
(

924 
Vdbe
 *
p
,

925 
Op
 *
pOp
,

926 c⁄° *
zP4
,

927 
n


929 if–
pOp
->
p4ty≥
 ){

930 
	`‰ìP4
(
p
->
db
, 
pOp
->
p4ty≥
,ÖOp->
p4
.p);

931 
pOp
->
p4ty≥
 = 0;

932 
pOp
->
p4
.
p
 = 0;

934 if–
n
<0 ){

935 
	`sqlôe3VdbeCh™geP4
(
p
, ()(
pOp
 -Ö->
aOp
), 
zP4
, 
n
);

937 if–
n
==0 )Ç = 
	`sqlôe3SåÀn30
(
zP4
);

938 
pOp
->
p4
.
z
 = 
	`sqlôe3DbSåNDup
(
p
->
db
, 
zP4
, 
n
);

939 
pOp
->
p4ty≥
 = 
P4_DYNAMIC
;

941 
	}
}

942 
	$sqlôe3VdbeCh™geP4
(
Vdbe
 *
p
, 
addr
, c⁄° *
zP4
, 
n
){

943 
Op
 *
pOp
;

944 
sqlôe3
 *
db
;

945 
	`as£π
–
p
!=0 );

946 
db
 = 
p
->db;

947 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

948 
	`as£π
–
p
->
aOp
!=0 || 
db
->
mÆlocFaûed
 );

949 if–
db
->
mÆlocFaûed
 ){

950 if–
n
!=
P4_VTAB
 ) 
	`‰ìP4
(
db
,Ç, (*)*(**)&
zP4
);

953 
	`as£π
–
p
->
nOp
>0 );

954 
	`as£π
–
addr
<
p
->
nOp
 );

955 if–
addr
<0 ){

956 
addr
 = 
p
->
nOp
 - 1;

958 
pOp
 = &
p
->
aOp
[
addr
];

959 if–
n
>=0 || 
pOp
->
p4ty≥
 ){

960 
	`vdbeCh™geP4FuŒ
(
p
, 
pOp
, 
zP4
, 
n
);

963 if–
n
==
P4_INT32
 ){

966 
pOp
->
p4
.
i
 = 
	`SQLITE_PTR_TO_INT
(
zP4
);

967 
pOp
->
p4ty≥
 = 
P4_INT32
;

968 }if–
zP4
!=0 ){

969 
	`as£π
–
n
<0 );

970 
pOp
->
p4
.
p
 = (*)
zP4
;

971 
pOp
->
p4ty≥
 = (sig√d )
n
;

972 if–
n
==
P4_VTAB
 ) 
	`sqlôe3VèbLock
((
VTabÀ
*)
zP4
);

974 
	}
}

980 
	$sqlôe3VdbeSëP4KeyInfo
(
P¨£
 *
pP¨£
, 
Index
 *
pIdx
){

981 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

982 
	`as£π
–
v
!=0 );

983 
	`as£π
–
pIdx
!=0 );

984 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
	`sqlôe3KeyInfoOfIndex
(
pP¨£
, 
pIdx
),

985 
P4_KEYINFO
);

986 
	}
}

988 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


995 
	$vdbeVCommít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, 
va_li°
 
≠
){

996 
	`as£π
–
p
->
nOp
>0 ||Ö->
aOp
==0 );

997 
	`as£π
–
p
->
aOp
==0 ||Ö->aOp[p->
nOp
-1].
zCommít
==0 ||Ö->
db
->
mÆlocFaûed
 );

998 if–
p
->
nOp
 ){

999 
	`as£π
–
p
->
aOp
 );

1000 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
aOp
[p->
nOp
-1].
zCommít
);

1001 
p
->
aOp
[p->
nOp
-1].
zCommít
 = 
	`sqlôe3VMPrötf
’->
db
, 
zF‹m©
, 
≠
);

1003 
	}
}

1004 
	$sqlôe3VdbeCommít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

1005 
va_li°
 
≠
;

1006 if–
p
 ){

1007 
	`va_°¨t
(
≠
, 
zF‹m©
);

1008 
	`vdbeVCommít
(
p
, 
zF‹m©
, 
≠
);

1009 
	`va_íd
(
≠
);

1011 
	}
}

1012 
	$sqlôe3VdbeNo›Commít
(
Vdbe
 *
p
, c⁄° *
zF‹m©
, ...){

1013 
va_li°
 
≠
;

1014 if–
p
 ){

1015 
	`sqlôe3VdbeAddOp0
(
p
, 
OP_No›
);

1016 
	`va_°¨t
(
≠
, 
zF‹m©
);

1017 
	`vdbeVCommít
(
p
, 
zF‹m©
, 
≠
);

1018 
	`va_íd
(
≠
);

1020 
	}
}

1023 #ifde‡
SQLITE_VDBE_COVERAGE


1027 
	$sqlôe3VdbeSëLöeNumbî
(
Vdbe
 *
v
, 
iLöe
){

1028 
	`sqlôe3VdbeGëOp
(
v
,-1)->
iSrcLöe
 = 
iLöe
;

1029 
	}
}

1045 
VdbeOp
 *
	$sqlôe3VdbeGëOp
(
Vdbe
 *
p
, 
addr
){

1048 
VdbeOp
 
dummy
;

1049 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

1050 if–
addr
<0 ){

1051 
addr
 = 
p
->
nOp
 - 1;

1053 
	`as£π
–(
addr
>=0 &&áddr<
p
->
nOp
Ë||Ö->
db
->
mÆlocFaûed
 );

1054 if–
p
->
db
->
mÆlocFaûed
 ){

1055  (
VdbeOp
*)&
dummy
;

1057  &
p
->
aOp
[
addr
];

1059 
	}
}

1061 #i‡
deföed
(
SQLITE_ENABLE_EXPLAIN_COMMENTS
)

1066 
	$å™¶©eP
(
c
, c⁄° 
Op
 *
pOp
){

1067 if–
c
=='1' )  
pOp
->
p1
;

1068 if–
c
=='2' )  
pOp
->
p2
;

1069 if–
c
=='3' )  
pOp
->
p3
;

1070 if–
c
=='4' )  
pOp
->
p4
.
i
;

1071  
pOp
->
p5
;

1072 
	}
}

1087 
	$di•œyCommít
(

1088 c⁄° 
Op
 *
pOp
,

1089 c⁄° *
zP4
,

1090 *
zTemp
,

1091 
nTemp


1093 c⁄° *
zOpName
;

1094 c⁄° *
zSyn›sis
;

1095 
nOpName
;

1096 
ii
, 
jj
;

1097 
zOpName
 = 
	`sqlôe3OpcodeName
(
pOp
->
›code
);

1098 
nOpName
 = 
	`sqlôe3SåÀn30
(
zOpName
);

1099 if–
zOpName
[
nOpName
+1] ){

1100 
£íCom
 = 0;

1101 
c
;

1102 
zSyn›sis
 = 
zOpName
 +
nOpName
 + 1;

1103 
ii
=
jj
=0; jj<
nTemp
-1 && (
c
 = 
zSyn›sis
[ii])!=0; ii++){

1104 if–
c
=='P' ){

1105 
c
 = 
zSyn›sis
[++
ii
];

1106 if–
c
=='4' ){

1107 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%s", 
zP4
);

1108 }if–
c
=='X' ){

1109 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%s", 
pOp
->
zCommít
);

1110 
£íCom
 = 1;

1112 
v1
 = 
	`å™¶©eP
(
c
, 
pOp
);

1113 
v2
;

1114 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "%d", 
v1
);

1115 if–
	`°∫cmp
(
zSyn›sis
+
ii
+1, "@P", 2)==0 ){

1116 
ii
 += 3;

1117 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1118 
v2
 = 
	`å™¶©eP
(
zSyn›sis
[
ii
], 
pOp
);

1119 if–
	`°∫cmp
(
zSyn›sis
+
ii
+1,"+1",2)==0 ){

1120 
ii
 += 2;

1121 
v2
++;

1123 if–
v2
>1 ){

1124 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "..%d", 
v1
+
v2
-1);

1126 }if–
	`°∫cmp
(
zSyn›sis
+
ii
+1, "..P3", 4)==0 && 
pOp
->
p3
==0 ){

1127 
ii
 += 4;

1130 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1132 
zTemp
[
jj
++] = 
c
;

1135 if–!
£íCom
 && 
jj
<
nTemp
-5 && 
pOp
->
zCommít
 ){

1136 
	`sqlôe3_¢¥ötf
(
nTemp
-
jj
, 
zTemp
+jj, "; %s", 
pOp
->
zCommít
);

1137 
jj
 +
	`sqlôe3SåÀn30
(
zTemp
+jj);

1139 if–
jj
<
nTemp
 ) 
zTemp
[jj] = 0;

1140 }if–
pOp
->
zCommít
 ){

1141 
	`sqlôe3_¢¥ötf
(
nTemp
, 
zTemp
, "%s", 
pOp
->
zCommít
);

1142 
jj
 = 
	`sqlôe3SåÀn30
(
zTemp
);

1144 
zTemp
[0] = 0;

1145 
jj
 = 0;

1147  
jj
;

1148 
	}
}

1151 #i‡
VDBE_DISPLAY_P4
 && 
deföed
(
SQLITE_ENABLE_CURSOR_HINTS
)

1156 
	$di•œyP4Ex¥
(
SåAccum
 *
p
, 
Ex¥
 *
pEx¥
){

1157 c⁄° *
zOp
 = 0;

1158  
pEx¥
->
›
 ){

1159 
TK_STRING
:

1160 
	`sqlôe3XPrötf
(
p
, "%Q", 
pEx¥
->
u
.
zTokí
);

1162 
TK_INTEGER
:

1163 
	`sqlôe3XPrötf
(
p
, "%d", 
pEx¥
->
u
.
iVÆue
);

1165 
TK_NULL
:

1166 
	`sqlôe3XPrötf
(
p
, "NULL");

1168 
TK_REGISTER
: {

1169 
	`sqlôe3XPrötf
(
p
, "r[%d]", 
pEx¥
->
iTabÀ
);

1172 
TK_COLUMN
: {

1173 if–
pEx¥
->
iCﬁumn
<0 ){

1174 
	`sqlôe3XPrötf
(
p
, "rowid");

1176 
	`sqlôe3XPrötf
(
p
, "c%d", ()
pEx¥
->
iCﬁumn
);

1180 
TK_LT
: 
zOp
 = "LT"; ;

1181 
TK_LE
: 
zOp
 = "LE"; ;

1182 
TK_GT
: 
zOp
 = "GT"; ;

1183 
TK_GE
: 
zOp
 = "GE"; ;

1184 
TK_NE
: 
zOp
 = "NE"; ;

1185 
TK_EQ
: 
zOp
 = "EQ"; ;

1186 
TK_IS
: 
zOp
 = "IS"; ;

1187 
TK_ISNOT
: 
zOp
 = "ISNOT"; ;

1188 
TK_AND
: 
zOp
 = "AND"; ;

1189 
TK_OR
: 
zOp
 = "OR"; ;

1190 
TK_PLUS
: 
zOp
 = "ADD"; ;

1191 
TK_STAR
: 
zOp
 = "MUL"; ;

1192 
TK_MINUS
: 
zOp
 = "SUB"; ;

1193 
TK_REM
: 
zOp
 = "REM"; ;

1194 
TK_BITAND
: 
zOp
 = "BITAND"; ;

1195 
TK_BITOR
: 
zOp
 = "BITOR"; ;

1196 
TK_SLASH
: 
zOp
 = "DIV"; ;

1197 
TK_LSHIFT
: 
zOp
 = "LSHIFT"; ;

1198 
TK_RSHIFT
: 
zOp
 = "RSHIFT"; ;

1199 
TK_CONCAT
: 
zOp
 = "CONCAT"; ;

1200 
TK_UMINUS
: 
zOp
 = "MINUS"; ;

1201 
TK_UPLUS
: 
zOp
 = "PLUS"; ;

1202 
TK_BITNOT
: 
zOp
 = "BITNOT"; ;

1203 
TK_NOT
: 
zOp
 = "NOT"; ;

1204 
TK_ISNULL
: 
zOp
 = "ISNULL"; ;

1205 
TK_NOTNULL
: 
zOp
 = "NOTNULL"; ;

1208 
	`sqlôe3XPrötf
(
p
, "%s", "expr");

1212 if–
zOp
 ){

1213 
	`sqlôe3XPrötf
(
p
, "%s(", 
zOp
);

1214 
	`di•œyP4Ex¥
(
p
, 
pEx¥
->
pLe·
);

1215 if–
pEx¥
->
pRight
 ){

1216 
	`sqlôe3SåAccumAµíd
(
p
, ",", 1);

1217 
	`di•œyP4Ex¥
(
p
, 
pEx¥
->
pRight
);

1219 
	`sqlôe3SåAccumAµíd
(
p
, ")", 1);

1221 
	}
}

1225 #i‡
VDBE_DISPLAY_P4


1230 *
	$di•œyP4
(
Op
 *
pOp
, *
zTemp
, 
nTemp
){

1231 *
zP4
 = 
zTemp
;

1232 
SåAccum
 
x
;

1233 
	`as£π
–
nTemp
>=20 );

1234 
	`sqlôe3SåAccumInô
(&
x
, 0, 
zTemp
, 
nTemp
, 0);

1235  
pOp
->
p4ty≥
 ){

1236 
P4_KEYINFO
: {

1237 
j
;

1238 
KeyInfo
 *
pKeyInfo
 = 
pOp
->
p4
.pKeyInfo;

1239 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

1240 
	`sqlôe3XPrötf
(&
x
, "k(%d", 
pKeyInfo
->
nFõld
);

1241 
j
=0; j<
pKeyInfo
->
nFõld
; j++){

1242 
CﬁlSeq
 *
pCﬁl
 = 
pKeyInfo
->
aCﬁl
[
j
];

1243 c⁄° *
zCﬁl
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : "";

1244 if–
	`°rcmp
(
zCﬁl
, "BINARY")==0 ) zColl = "B";

1245 
	`sqlôe3XPrötf
(&
x
, ",%s%s", 
pKeyInfo
->
aS‹tOrdî
[
j
] ? "-" : "", 
zCﬁl
);

1247 
	`sqlôe3SåAccumAµíd
(&
x
, ")", 1);

1250 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


1251 
P4_EXPR
: {

1252 
	`di•œyP4Ex¥
(&
x
, 
pOp
->
p4
.
pEx¥
);

1256 
P4_COLLSEQ
: {

1257 
CﬁlSeq
 *
pCﬁl
 = 
pOp
->
p4
.pColl;

1258 
	`sqlôe3XPrötf
(&
x
, "(%.20s)", 
pCﬁl
->
zName
);

1261 
P4_FUNCDEF
: {

1262 
FuncDef
 *
pDef
 = 
pOp
->
p4
.
pFunc
;

1263 
	`sqlôe3XPrötf
(&
x
, "%s(%d)", 
pDef
->
zName
,ÖDef->
nArg
);

1266 #ifde‡
SQLITE_DEBUG


1267 
P4_FUNCCTX
: {

1268 
FuncDef
 *
pDef
 = 
pOp
->
p4
.
pCtx
->
pFunc
;

1269 
	`sqlôe3XPrötf
(&
x
, "%s(%d)", 
pDef
->
zName
,ÖDef->
nArg
);

1273 
P4_INT64
: {

1274 
	`sqlôe3XPrötf
(&
x
, "%Œd", *
pOp
->
p4
.
pI64
);

1277 
P4_INT32
: {

1278 
	`sqlôe3XPrötf
(&
x
, "%d", 
pOp
->
p4
.
i
);

1281 
P4_REAL
: {

1282 
	`sqlôe3XPrötf
(&
x
, "%.16g", *
pOp
->
p4
.
pRól
);

1285 
P4_MEM
: {

1286 
Mem
 *
pMem
 = 
pOp
->
p4
.pMem;

1287 if–
pMem
->
Êags
 & 
MEM_Så
 ){

1288 
zP4
 = 
pMem
->
z
;

1289 }if–
pMem
->
Êags
 & 
MEM_I¡
 ){

1290 
	`sqlôe3XPrötf
(&
x
, "%Œd", 
pMem
->
u
.
i
);

1291 }if–
pMem
->
Êags
 & 
MEM_Ról
 ){

1292 
	`sqlôe3XPrötf
(&
x
, "%.16g", 
pMem
->
u
.
r
);

1293 }if–
pMem
->
Êags
 & 
MEM_NuŒ
 ){

1294 
zP4
 = "NULL";

1296 
	`as£π
–
pMem
->
Êags
 & 
MEM_Blob
 );

1297 
zP4
 = "(blob)";

1301 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1302 
P4_VTAB
: {

1303 
sqlôe3_vèb
 *
pVèb
 = 
pOp
->
p4
.pVtab->pVtab;

1304 
	`sqlôe3XPrötf
(&
x
, "vèb:%p", 
pVèb
);

1308 
P4_INTARRAY
: {

1309 
i
;

1310 *
ai
 = 
pOp
->
p4
.ai;

1311 
n
 = 
ai
[0];

1313 
i
=1; i<
n
; i++){

1314 
	`sqlôe3XPrötf
(&
x
, ",%d", 
ai
[
i
]);

1316 
zTemp
[0] = '[';

1317 
	`sqlôe3SåAccumAµíd
(&
x
, "]", 1);

1320 
P4_SUBPROGRAM
: {

1321 
	`sqlôe3XPrötf
(&
x
, "program");

1324 
P4_ADVANCE
: {

1325 
zTemp
[0] = 0;

1328 
P4_TABLE
: {

1329 
	`sqlôe3XPrötf
(&
x
, "%s", 
pOp
->
p4
.
pTab
->
zName
);

1333 
zP4
 = 
pOp
->
p4
.
z
;

1334 if–
zP4
==0 ){

1335 
zP4
 = 
zTemp
;

1336 
zTemp
[0] = 0;

1340 
	`sqlôe3SåAccumFöish
(&
x
);

1341 
	`as£π
–
zP4
!=0 );

1342  
zP4
;

1343 
	}
}

1354 
	$sqlôe3VdbeU£sBåì
(
Vdbe
 *
p
, 
i
){

1355 
	`as£π
–
i
>=0 && i<
p
->
db
->
nDb
 && i<()(
yDbMask
)*8 );

1356 
	`as£π
–
i
<()(
p
->
båìMask
)*8 );

1357 
	`DbMaskSë
(
p
->
båìMask
, 
i
);

1358 if–
i
!=1 && 
	`sqlôe3BåìSh¨abÀ
(
p
->
db
->
aDb
[i].
pBt
) ){

1359 
	`DbMaskSë
(
p
->
lockMask
, 
i
);

1361 
	}
}

1363 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
)

1385 
	$sqlôe3VdbeE¡î
(
Vdbe
 *
p
){

1386 
i
;

1387 
sqlôe3
 *
db
;

1388 
Db
 *
aDb
;

1389 
nDb
;

1390 if–
	`DbMaskAŒZîo
(
p
->
lockMask
) ) ;

1391 
db
 = 
p
->db;

1392 
aDb
 = 
db
->aDb;

1393 
nDb
 = 
db
->nDb;

1394 
i
=0; i<
nDb
; i++){

1395 if–
i
!=1 && 
	`DbMaskTe°
(
p
->
lockMask
,iË&& 
	`ALWAYS
(
aDb
[i].
pBt
!=0) ){

1396 
	`sqlôe3BåìE¡î
(
aDb
[
i
].
pBt
);

1399 
	}
}

1402 #i‡!
deföed
(
SQLITE_OMIT_SHARED_CACHE
Ë&& 
SQLITE_THREADSAFE
>0

1406 
SQLITE_NOINLINE
 
	$vdbeLóve
(
Vdbe
 *
p
){

1407 
i
;

1408 
sqlôe3
 *
db
;

1409 
Db
 *
aDb
;

1410 
nDb
;

1411 
db
 = 
p
->db;

1412 
aDb
 = 
db
->aDb;

1413 
nDb
 = 
db
->nDb;

1414 
i
=0; i<
nDb
; i++){

1415 if–
i
!=1 && 
	`DbMaskTe°
(
p
->
lockMask
,iË&& 
	`ALWAYS
(
aDb
[i].
pBt
!=0) ){

1416 
	`sqlôe3BåìLóve
(
aDb
[
i
].
pBt
);

1419 
	}
}

1420 
	$sqlôe3VdbeLóve
(
Vdbe
 *
p
){

1421 if–
	`DbMaskAŒZîo
(
p
->
lockMask
) ) ;

1422 
	`vdbeLóve
(
p
);

1423 
	}
}

1426 #i‡
deföed
(
VDBE_PROFILE
Ë|| deföed(
SQLITE_DEBUG
)

1430 
	$sqlôe3VdbePrötOp
(
FILE
 *
pOut
, 
pc
, 
Op
 *
pOp
){

1431 *
zP4
;

1432 
zPå
[50];

1433 
zCom
[100];

1434 c⁄° *
zF‹m©1
 = "%4d %-13s %4d %4d %4d %-13s %.2X %s\n";

1435 if–
pOut
==0 )ÖOuà
°dout
;

1436 
zP4
 = 
	`di•œyP4
(
pOp
, 
zPå
, (zPtr));

1437 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1438 
	`di•œyCommít
(
pOp
, 
zP4
, 
zCom
, (zCom));

1440 
zCom
[0] = 0;

1445 
	`Ârötf
(
pOut
, 
zF‹m©1
, 
pc
,

1446 
	`sqlôe3OpcodeName
(
pOp
->
›code
),ÖOp->
p1
,ÖOp->
p2
,ÖOp->
p3
, 
zP4
,ÖOp->
p5
,

1447 
zCom


1449 
	`fÊush
(
pOut
);

1450 
	}
}

1456 
	$ªÀa£MemAºay
(
Mem
 *
p
, 
N
){

1457 if–
p
 && 
N
 ){

1458 
Mem
 *
pEnd
 = &
p
[
N
];

1459 
sqlôe3
 *
db
 = 
p
->db;

1460 if–
db
->
≤ByãsFªed
 ){

1462 if–
p
->
szMÆloc
 ) 
	`sqlôe3DbFªe
(
db
,Ö->
zMÆloc
);

1463 } (++
p
)<
pEnd
 );

1467 
	`as£π
–(&
p
[1])==
pEnd
 ||Ö[0].
db
==p[1].db );

1468 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
p
) );

1482 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Agg
 );

1483 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Dyn
 );

1484 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Føme
 );

1485 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_RowSë
 );

1486 if–
p
->
Êags
&(
MEM_Agg
|
MEM_Dyn
|
MEM_Føme
|
MEM_RowSë
) ){

1487 
	`sqlôe3VdbeMemRñó£
(
p
);

1488 }if–
p
->
szMÆloc
 ){

1489 
	`sqlôe3DbFªe
(
db
, 
p
->
zMÆloc
);

1490 
p
->
szMÆloc
 = 0;

1493 
p
->
Êags
 = 
MEM_Undeföed
;

1494 } (++
p
)<
pEnd
 );

1496 
	}
}

1502 
	$sqlôe3VdbeFømeDñëe
(
VdbeFøme
 *
p
){

1503 
i
;

1504 
Mem
 *
aMem
 = 
	`VdbeFømeMem
(
p
);

1505 
VdbeCurs‹
 **
≠C§
 = (VdbeCurs‹ **)&
aMem
[
p
->
nChûdMem
];

1506 
i
=0; i<
p
->
nChûdC§
; i++){

1507 
	`sqlôe3VdbeFªeCurs‹
(
p
->
v
, 
≠C§
[
i
]);

1509 
	`ªÀa£MemAºay
(
aMem
, 
p
->
nChûdMem
);

1510 
	`sqlôe3VdbeDñëeAuxD©a
(
p
->
v
->
db
, &p->
pAuxD©a
, -1, 0);

1511 
	`sqlôe3DbFªe
(
p
->
v
->
db
,Ö);

1512 
	}
}

1514 #i‚de‡
SQLITE_OMIT_EXPLAIN


1530 
	$sqlôe3VdbeLi°
(

1531 
Vdbe
 *
p


1533 
nRow
;

1534 
nSub
 = 0;

1535 
SubProgøm
 **
≠Sub
 = 0;

1536 
Mem
 *
pSub
 = 0;

1537 
sqlôe3
 *
db
 = 
p
->db;

1538 
i
;

1539 
rc
 = 
SQLITE_OK
;

1540 
Mem
 *
pMem
 = &
p
->
aMem
[1];

1542 
	`as£π
–
p
->
ex∂aö
 );

1543 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_RUN
 );

1544 
	`as£π
–
p
->
rc
==
SQLITE_OK
 ||Ö->rc==
SQLITE_BUSY
 ||Ö->rc==
SQLITE_NOMEM
 );

1550 
	`ªÀa£MemAºay
(
pMem
, 8);

1551 
p
->
pResu…Së
 = 0;

1553 if–
p
->
rc
==
SQLITE_NOMEM_BKPT
 ){

1556 
	`sqlôe3OomFau…
(
db
);

1557  
SQLITE_ERROR
;

1567 
nRow
 = 
p
->
nOp
;

1568 if–
p
->
ex∂aö
==1 ){

1573 
	`as£π
–
p
->
nMem
>9 );

1574 
pSub
 = &
p
->
aMem
[9];

1575 if–
pSub
->
Êags
&
MEM_Blob
 ){

1578 
nSub
 = 
pSub
->
n
/(
Vdbe
*);

1579 
≠Sub
 = (
SubProgøm
 **)
pSub
->
z
;

1581 
i
=0; i<
nSub
; i++){

1582 
nRow
 +
≠Sub
[
i
]->
nOp
;

1587 
i
 = 
p
->
pc
++;

1588 } 
i
<
nRow
 && 
p
->
ex∂aö
==2 &&Ö->
aOp
[i].
›code
!=
OP_Ex∂aö
 );

1589 if–
i
>=
nRow
 ){

1590 
p
->
rc
 = 
SQLITE_OK
;

1591 
rc
 = 
SQLITE_DONE
;

1592 }if–
db
->
u1
.
isI¡îru±ed
 ){

1593 
p
->
rc
 = 
SQLITE_INTERRUPT
;

1594 
rc
 = 
SQLITE_ERROR
;

1595 
	`sqlôe3VdbeEº‹
(
p
, 
	`sqlôe3EºSå
’->
rc
));

1597 *
zP4
;

1598 
Op
 *
pOp
;

1599 if–
i
<
p
->
nOp
 ){

1602 
pOp
 = &
p
->
aOp
[
i
];

1606 
j
;

1607 
i
 -
p
->
nOp
;

1608 
j
=0; 
i
>=
≠Sub
[j]->
nOp
; j++){

1609 
i
 -
≠Sub
[
j
]->
nOp
;

1611 
pOp
 = &
≠Sub
[
j
]->
aOp
[
i
];

1613 if–
p
->
ex∂aö
==1 ){

1614 
pMem
->
Êags
 = 
MEM_I¡
;

1615 
pMem
->
u
.
i
 = i;

1616 
pMem
++;

1618 
pMem
->
Êags
 = 
MEM_Sètic
|
MEM_Så
|
MEM_Tîm
;

1619 
pMem
->
z
 = (*)
	`sqlôe3OpcodeName
(
pOp
->
›code
);

1620 
	`as£π
–
pMem
->
z
!=0 );

1621 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

1622 
pMem
->
íc
 = 
SQLITE_UTF8
;

1623 
pMem
++;

1630 if–
pOp
->
p4ty≥
==
P4_SUBPROGRAM
 ){

1631 
nByã
 = (
nSub
+1)*(
SubProgøm
*);

1632 
j
;

1633 
j
=0; j<
nSub
; j++){

1634 if–
≠Sub
[
j
]==
pOp
->
p4
.
pProgøm
 ) ;

1636 if–
j
==
nSub
 && 
SQLITE_OK
==
	`sqlôe3VdbeMemGrow
(
pSub
, 
nByã
,ÇSub!=0) ){

1637 
≠Sub
 = (
SubProgøm
 **)
pSub
->
z
;

1638 
≠Sub
[
nSub
++] = 
pOp
->
p4
.
pProgøm
;

1639 
pSub
->
Êags
 |
MEM_Blob
;

1640 
pSub
->
n
 = 
nSub
*(
SubProgøm
*);

1645 
pMem
->
Êags
 = 
MEM_I¡
;

1646 
pMem
->
u
.
i
 = 
pOp
->
p1
;

1647 
pMem
++;

1649 
pMem
->
Êags
 = 
MEM_I¡
;

1650 
pMem
->
u
.
i
 = 
pOp
->
p2
;

1651 
pMem
++;

1653 
pMem
->
Êags
 = 
MEM_I¡
;

1654 
pMem
->
u
.
i
 = 
pOp
->
p3
;

1655 
pMem
++;

1657 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 100) ){

1658 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1659  
SQLITE_ERROR
;

1661 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1662 
zP4
 = 
	`di•œyP4
(
pOp
, 
pMem
->
z
,ÖMem->
szMÆloc
);

1663 if–
zP4
!=
pMem
->
z
 ){

1664 
	`sqlôe3VdbeMemSëSå
(
pMem
, 
zP4
, -1, 
SQLITE_UTF8
, 0);

1666 
	`as£π
–
pMem
->
z
!=0 );

1667 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

1668 
pMem
->
íc
 = 
SQLITE_UTF8
;

1670 
pMem
++;

1672 if–
p
->
ex∂aö
==1 ){

1673 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 4) ){

1674 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1675  
SQLITE_ERROR
;

1677 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1678 
pMem
->
n
 = 2;

1679 
	`sqlôe3_¢¥ötf
(3, 
pMem
->
z
, "%.2x", 
pOp
->
p5
);

1680 
pMem
->
íc
 = 
SQLITE_UTF8
;

1681 
pMem
++;

1683 #ifde‡
SQLITE_ENABLE_EXPLAIN_COMMENTS


1684 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 500) ){

1685 
	`as£π
–
p
->
db
->
mÆlocFaûed
 );

1686  
SQLITE_ERROR
;

1688 
pMem
->
Êags
 = 
MEM_Så
|
MEM_Tîm
;

1689 
pMem
->
n
 = 
	`di•œyCommít
(
pOp
, 
zP4
,ÖMem->
z
, 500);

1690 
pMem
->
íc
 = 
SQLITE_UTF8
;

1692 
pMem
->
Êags
 = 
MEM_NuŒ
;

1696 
p
->
nResCﬁumn
 = 8 - 4*’->
ex∂aö
-1);

1697 
p
->
pResu…Së
 = &p->
aMem
[1];

1698 
p
->
rc
 = 
SQLITE_OK
;

1699 
rc
 = 
SQLITE_ROW
;

1701  
rc
;

1702 
	}
}

1705 #ifde‡
SQLITE_DEBUG


1709 
	$sqlôe3VdbePrötSql
(
Vdbe
 *
p
){

1710 c⁄° *
z
 = 0;

1711 if–
p
->
zSql
 ){

1712 
z
 = 
p
->
zSql
;

1713 }if–
p
->
nOp
>=1 ){

1714 c⁄° 
VdbeOp
 *
pOp
 = &
p
->
aOp
[0];

1715 if–
pOp
->
›code
==
OP_Inô
 &&ÖOp->
p4
.
z
!=0 ){

1716 
z
 = 
pOp
->
p4
.z;

1717  
	`sqlôe3Is•a˚
(*
z
) ) z++;

1720 if–
z
 ) 
	`¥ötf
("SQL: [%s]\n", z);

1721 
	}
}

1724 #i‡!
deföed
(
SQLITE_OMIT_TRACE
Ë&& deföed(
SQLITE_ENABLE_IOTRACE
)

1728 
	$sqlôe3VdbeIOTø˚Sql
(
Vdbe
 *
p
){

1729 
nOp
 = 
p
->nOp;

1730 
VdbeOp
 *
pOp
;

1731 if–
sqlôe3IoTø˚
==0 ) ;

1732 if–
nOp
<1 ) ;

1733 
pOp
 = &
p
->
aOp
[0];

1734 if–
pOp
->
›code
==
OP_Inô
 &&ÖOp->
p4
.
z
!=0 ){

1735 
i
, 
j
;

1736 
z
[1000];

1737 
	`sqlôe3_¢¥ötf
((
z
), z, "%s", 
pOp
->
p4
.z);

1738 
i
=0; 
	`sqlôe3Is•a˚
(
z
[i]); i++){}

1739 
j
=0; 
z
[
i
]; i++){

1740 if–
	`sqlôe3Is•a˚
(
z
[
i
]) ){

1741 if–
z
[
i
-1]!=' ' ){

1742 
z
[
j
++] = ' ';

1745 
z
[
j
++] = z[
i
];

1748 
z
[
j
] = 0;

1749 
	`sqlôe3IoTø˚
("SQL %s\n", 
z
);

1751 
	}
}

1758 
	sReußbÀS∑˚
 {

1759 
u8
 *
	mpS∑˚
;

1760 
	mnFªe
;

1761 
	mnNìded
;

1778 *
	$ÆlocS∑˚
(

1779 
ReußbÀS∑˚
 *
p
,

1780 *
pBuf
,

1781 
nByã


1783 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
p
->
pS∑˚
) );

1784 if–
pBuf
==0 ){

1785 
nByã
 = 
	`ROUND8
(nByte);

1786 if–
nByã
 <
p
->
nFªe
 ){

1787 
p
->
nFªe
 -
nByã
;

1788 
pBuf
 = &
p
->
pS∑˚
[p->
nFªe
];

1790 
p
->
nNìded
 +
nByã
;

1793 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pBuf
) );

1794  
pBuf
;

1795 
	}
}

1801 
	$sqlôe3VdbeRewöd
(
Vdbe
 *
p
){

1802 #i‡
	`deföed
(
SQLITE_DEBUG
Ë|| deföed(
VDBE_PROFILE
)

1803 
i
;

1805 
	`as£π
–
p
!=0 );

1806 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

1810 
	`as£π
–
p
->
nOp
>0 );

1813 
p
->
magic
 = 
VDBE_MAGIC_RUN
;

1815 #ifde‡
SQLITE_DEBUG


1816 
i
=0; i<
p
->
nMem
; i++){

1817 
	`as£π
–
p
->
aMem
[
i
].
db
==p->db );

1820 
p
->
pc
 = -1;

1821 
p
->
rc
 = 
SQLITE_OK
;

1822 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

1823 
p
->
nCh™ge
 = 0;

1824 
p
->
ˇcheCå
 = 1;

1825 
p
->
möWrôeFûeF‹m©
 = 255;

1826 
p
->
iSèãmít
 = 0;

1827 
p
->
nFkC⁄°øöt
 = 0;

1828 #ifde‡
VDBE_PROFILE


1829 
i
=0; i<
p
->
nOp
; i++){

1830 
p
->
aOp
[
i
].
˙t
 = 0;

1831 
p
->
aOp
[
i
].
cy˛es
 = 0;

1834 
	}
}

1854 
	$sqlôe3VdbeMakeRódy
(

1855 
Vdbe
 *
p
,

1856 
P¨£
 *
pP¨£


1858 
sqlôe3
 *
db
;

1859 
nV¨
;

1860 
nMem
;

1861 
nCurs‹
;

1862 
nArg
;

1863 
nOn˚
;

1864 
n
;

1865 
ReußbÀS∑˚
 
x
;

1867 
	`as£π
–
p
!=0 );

1868 
	`as£π
–
p
->
nOp
>0 );

1869 
	`as£π
–
pP¨£
!=0 );

1870 
	`as£π
–
p
->
magic
==
VDBE_MAGIC_INIT
 );

1871 
	`as£π
–
pP¨£
==
p
->pParse );

1872 
db
 = 
p
->db;

1873 
	`as£π
–
db
->
mÆlocFaûed
==0 );

1874 
nV¨
 = 
pP¨£
->nVar;

1875 
nMem
 = 
pP¨£
->nMem;

1876 
nCurs‹
 = 
pP¨£
->
nTab
;

1877 
nArg
 = 
pP¨£
->
nMaxArg
;

1878 
nOn˚
 = 
pP¨£
->nOnce;

1879 if–
nOn˚
==0 )ÇOnce = 1;

1886 
nMem
 +
nCurs‹
;

1887 if–
nCurs‹
==0 && 
nMem
>0 )ÇMem++;

1893 
n
 = 
	`ROUND8
((
Op
)*
p
->
nOp
);

1894 
x
.
pS∑˚
 = &((
u8
*)
p
->
aOp
)[
n
];

1895 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
x
.
pS∑˚
) );

1896 
x
.
nFªe
 = 
	`ROUNDDOWN8
(
pP¨£
->
szOpAŒoc
 - 
n
);

1897 
	`as£π
–
x
.
nFªe
>=0 );

1898 if–
x
.
nFªe
>0 ){

1899 
	`mem£t
(
x
.
pS∑˚
, 0, x.
nFªe
);

1900 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(&
x
.
pS∑˚
[x.
nFªe
]) );

1903 
	`ªsﬁveP2VÆues
(
p
, &
nArg
);

1904 
p
->
u£sStmtJou∫Æ
 = (
u8
)(
pP¨£
->
isMu…iWrôe
 &&ÖP¨£->
mayAb‹t
);

1905 if–
pP¨£
->
ex∂aö
 && 
nMem
<10 ){

1906 
nMem
 = 10;

1908 
p
->
expúed
 = 0;

1921 
x
.
nNìded
 = 0;

1922 
p
->
aMem
 = 
	`ÆlocS∑˚
(&
x
,Ö->aMem, 
nMem
*(
Mem
));

1923 
p
->
aV¨
 = 
	`ÆlocS∑˚
(&
x
,Ö->aV¨, 
nV¨
*(
Mem
));

1924 
p
->
≠Arg
 = 
	`ÆlocS∑˚
(&
x
,Ö->≠Arg, 
nArg
*(
Mem
*));

1925 
p
->
≠C§
 = 
	`ÆlocS∑˚
(&
x
,Ö->≠C§, 
nCurs‹
*(
VdbeCurs‹
*));

1926 
p
->
aOn˚Fœg
 = 
	`ÆlocS∑˚
(&
x
,Ö->aOn˚Fœg, 
nOn˚
);

1927 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1928 
p
->
™Exec
 = 
	`ÆlocS∑˚
(&
x
,Ö->™Exec,Ö->
nOp
*(
i64
));

1930 if–
x
.
nNìded
==0 ) ;

1931 
x
.
pS∑˚
 = 
p
->
pFªe
 = 
	`sqlôe3DbMÆlocZîo
(
db
, x.
nNìded
);

1932 
x
.
nFªe
 = x.
nNìded
;

1933 } !
db
->
mÆlocFaûed
 );

1935 
p
->
nCurs‹
 =ÇCursor;

1936 
p
->
nOn˚Fœg
 = 
nOn˚
;

1937 if–
p
->
aV¨
 ){

1938 
p
->
nV¨
 = (
ynV¨
)nVar;

1939 
n
=0;Ç<
nV¨
;Ç++){

1940 
p
->
aV¨
[
n
].
Êags
 = 
MEM_NuŒ
;

1941 
p
->
aV¨
[
n
].
db
 = db;

1944 
p
->
nzV¨
 = 
pP¨£
->nzVar;

1945 
p
->
azV¨
 = 
pP¨£
->azVar;

1946 
pP¨£
->
nzV¨
 = 0;

1947 
pP¨£
->
azV¨
 = 0;

1948 if–
p
->
aMem
 ){

1949 
p
->
nMem
 =ÇMem;

1950 
n
=0;Ç<
nMem
;Ç++){

1951 
p
->
aMem
[
n
].
Êags
 = 
MEM_Undeföed
;

1952 
p
->
aMem
[
n
].
db
 = db;

1955 
p
->
ex∂aö
 = 
pP¨£
->explain;

1956 
	`sqlôe3VdbeRewöd
(
p
);

1957 
	}
}

1963 
	$sqlôe3VdbeFªeCurs‹
(
Vdbe
 *
p
, 
VdbeCurs‹
 *
pCx
){

1964 if–
pCx
==0 ){

1967 
	`as£π
–
pCx
->
pBt
==0 ||ÖCx->
eCurTy≥
==
CURTYPE_BTREE
 );

1968  
pCx
->
eCurTy≥
 ){

1969 
CURTYPE_SORTER
: {

1970 
	`sqlôe3VdbeS‹ãrClo£
(
p
->
db
, 
pCx
);

1973 
CURTYPE_BTREE
: {

1974 if–
pCx
->
pBt
 ){

1975 
	`sqlôe3BåìClo£
(
pCx
->
pBt
);

1979 
	`as£π
–
pCx
->
uc
.
pCurs‹
!=0 );

1980 
	`sqlôe3BåìClo£Curs‹
(
pCx
->
uc
.
pCurs‹
);

1984 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1985 
CURTYPE_VTAB
: {

1986 
sqlôe3_vèb_curs‹
 *
pVCur
 = 
pCx
->
uc
.pVCur;

1987 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
 = 
pVCur
->
pVèb
->pModule;

1988 
	`as£π
–
pVCur
->
pVèb
->
nRef
>0 );

1989 
pVCur
->
pVèb
->
nRef
--;

1990 
pModuÀ
->
	`xClo£
(
pVCur
);

1995 
	}
}

2000 
	$˛o£Curs‹sInFøme
(
Vdbe
 *
p
){

2001 if–
p
->
≠C§
 ){

2002 
i
;

2003 
i
=0; i<
p
->
nCurs‹
; i++){

2004 
VdbeCurs‹
 *
pC
 = 
p
->
≠C§
[
i
];

2005 if–
pC
 ){

2006 
	`sqlôe3VdbeFªeCurs‹
(
p
, 
pC
);

2007 
p
->
≠C§
[
i
] = 0;

2011 
	}
}

2018 
	$sqlôe3VdbeFømeRe°‹e
(
VdbeFøme
 *
pFøme
){

2019 
Vdbe
 *
v
 = 
pFøme
->v;

2020 
	`˛o£Curs‹sInFøme
(
v
);

2021 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2022 
v
->
™Exec
 = 
pFøme
->anExec;

2024 
v
->
aOn˚Fœg
 = 
pFøme
->aOnceFlag;

2025 
v
->
nOn˚Fœg
 = 
pFøme
->nOnceFlag;

2026 
v
->
aOp
 = 
pFøme
->aOp;

2027 
v
->
nOp
 = 
pFøme
->nOp;

2028 
v
->
aMem
 = 
pFøme
->aMem;

2029 
v
->
nMem
 = 
pFøme
->nMem;

2030 
v
->
≠C§
 = 
pFøme
->apCsr;

2031 
v
->
nCurs‹
 = 
pFøme
->nCursor;

2032 
v
->
db
->
œ°Rowid
 = 
pFøme
->lastRowid;

2033 
v
->
nCh™ge
 = 
pFøme
->nChange;

2034 
v
->
db
->
nCh™ge
 = 
pFøme
->
nDbCh™ge
;

2035 
	`sqlôe3VdbeDñëeAuxD©a
(
v
->
db
, &v->
pAuxD©a
, -1, 0);

2036 
v
->
pAuxD©a
 = 
pFøme
->pAuxData;

2037 
pFøme
->
pAuxD©a
 = 0;

2038  
pFøme
->
pc
;

2039 
	}
}

2049 
	$˛o£AŒCurs‹s
(
Vdbe
 *
p
){

2050 if–
p
->
pFøme
 ){

2051 
VdbeFøme
 *
pFøme
;

2052 
pFøme
=
p
->pFøme;ÖFøme->
pP¨ít
;ÖFrame=pFrame->pParent);

2053 
	`sqlôe3VdbeFømeRe°‹e
(
pFøme
);

2054 
p
->
pFøme
 = 0;

2055 
p
->
nFøme
 = 0;

2057 
	`as£π
–
p
->
nFøme
==0 );

2058 
	`˛o£Curs‹sInFøme
(
p
);

2059 if–
p
->
aMem
 ){

2060 
	`ªÀa£MemAºay
(
p
->
aMem
,Ö->
nMem
);

2062  
p
->
pDñFøme
 ){

2063 
VdbeFøme
 *
pDñ
 = 
p
->
pDñFøme
;

2064 
p
->
pDñFøme
 = 
pDñ
->
pP¨ít
;

2065 
	`sqlôe3VdbeFømeDñëe
(
pDñ
);

2069 if–
p
->
pAuxD©a
 ) 
	`sqlôe3VdbeDñëeAuxD©a
’->
db
, &p->pAuxData, -1, 0);

2070 
	`as£π
–
p
->
pAuxD©a
==0 );

2071 
	}
}

2076 
	$CÀ™up
(
Vdbe
 *
p
){

2077 
sqlôe3
 *
db
 = 
p
->db;

2079 #ifde‡
SQLITE_DEBUG


2082 
i
;

2083 if–
p
->
≠C§
 ) 
i
=0; i<p->
nCurs‹
; i++Ë
	`as£π
(Ö->apCsr[i]==0 );

2084 if–
p
->
aMem
 ){

2085 
i
=0; i<
p
->
nMem
; i++Ë
	`as£π
–p->
aMem
[i].
Êags
==
MEM_Undeföed
 );

2089 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2090 
p
->
zEºMsg
 = 0;

2091 
p
->
pResu…Së
 = 0;

2092 
	}
}

2100 
	$sqlôe3VdbeSëNumCﬁs
(
Vdbe
 *
p
, 
nResCﬁumn
){

2101 
Mem
 *
pCﬁName
;

2102 
n
;

2103 
sqlôe3
 *
db
 = 
p
->db;

2105 
	`ªÀa£MemAºay
(
p
->
aCﬁName
,Ö->
nResCﬁumn
*
COLNAME_N
);

2106 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁName
);

2107 
n
 = 
nResCﬁumn
*
COLNAME_N
;

2108 
p
->
nResCﬁumn
 = (
u16
)nResColumn;

2109 
p
->
aCﬁName
 = 
pCﬁName
 = (
Mem
*)
	`sqlôe3DbMÆlocZîo
(
db
, (Mem)*
n
 );

2110 if–
p
->
aCﬁName
==0 ) ;

2111  
n
-- > 0 ){

2112 
pCﬁName
->
Êags
 = 
MEM_NuŒ
;

2113 
pCﬁName
->
db
 = 
p
->db;

2114 
pCﬁName
++;

2116 
	}
}

2128 
sqlôe3VdbeSëCﬁName
(

2129 
Vdbe
 *
p
,

2130 
idx
,

2131 
v¨
,

2132 c⁄° *
zName
,

2133 (*
xDñ
)(*)

2135 
rc
;

2136 
Mem
 *
pCﬁName
;

2137 
	`as£π
–
idx
<
p
->
nResCﬁumn
 );

2138 
	`as£π
–
v¨
<
COLNAME_N
 );

2139 if–
p
->
db
->
mÆlocFaûed
 ){

2140 
	`as£π
–!
zName
 || 
xDñ
!=
SQLITE_DYNAMIC
 );

2141  
SQLITE_NOMEM_BKPT
;

2143 
	`as£π
–
p
->
aCﬁName
!=0 );

2144 
pCﬁName
 = &(
p
->
aCﬁName
[
idx
+
v¨
*p->
nResCﬁumn
]);

2145 
rc
 = 
	`sqlôe3VdbeMemSëSå
(
pCﬁName
, 
zName
, -1, 
SQLITE_UTF8
, 
xDñ
);

2146 
	`as£π
–
rc
!=0 || !
zName
 || (
pCﬁName
->
Êags
&
MEM_Tîm
)!=0 );

2147  
rc
;

2148 
	}
}

2156 
	$vdbeCommô
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

2157 
i
;

2158 
nTøns
 = 0;

2161 
rc
 = 
SQLITE_OK
;

2162 
√edXcommô
 = 0;

2164 #ifde‡
SQLITE_OMIT_VIRTUALTABLE


2168 
	`UNUSED_PARAMETER
(
p
);

2177 
rc
 = 
	`sqlôe3VèbSync
(
db
, 
p
);

2185 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2186 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2187 if–
	`sqlôe3BåìIsInTøns
(
pBt
) ){

2191 c⁄° 
u8
 
aMJNìded
[] = {

2199 
Pagî
 *
pPagî
;

2200 
√edXcommô
 = 1;

2201 
	`sqlôe3BåìE¡î
(
pBt
);

2202 
pPagî
 = 
	`sqlôe3BåìPagî
(
pBt
);

2203 if–
db
->
aDb
[
i
].
ß„ty_Àvñ
!=
PAGER_SYNCHRONOUS_OFF


2204 && 
aMJNìded
[
	`sqlôe3PagîGëJou∫ÆMode
(
pPagî
)]

2206 
	`as£π
–
i
!=1 );

2207 
nTøns
++;

2209 
rc
 = 
	`sqlôe3PagîEx˛usiveLock
(
pPagî
);

2210 
	`sqlôe3BåìLóve
(
pBt
);

2213 if–
rc
!=
SQLITE_OK
 ){

2214  
rc
;

2218 if–
√edXcommô
 && 
db
->
xCommôCÆlback
 ){

2219 
rc
 = 
db
->
	`xCommôCÆlback
(db->
pCommôArg
);

2220 if–
rc
 ){

2221  
SQLITE_CONSTRAINT_COMMITHOOK
;

2234 if–0==
	`sqlôe3SåÀn30
(
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[0].
pBt
))

2235 || 
nTøns
<=1

2237 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2238 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2239 if–
pBt
 ){

2240 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
pBt
, 0);

2249 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2250 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2251 if–
pBt
 ){

2252 
rc
 = 
	`sqlôe3BåìCommôPha£Two
(
pBt
, 0);

2255 if–
rc
==
SQLITE_OK
 ){

2256 
	`sqlôe3VèbCommô
(
db
);

2264 #i‚de‡
SQLITE_OMIT_DISKIO


2266 
sqlôe3_vfs
 *
pVfs
 = 
db
->pVfs;

2267 *
zMa°î
 = 0;

2268 c⁄° *
zMaöFûe
 = 
	`sqlôe3BåìGëFûíame
(
db
->
aDb
[0].
pBt
);

2269 
sqlôe3_fûe
 *
pMa°î
 = 0;

2270 
i64
 
off£t
 = 0;

2271 
ªs
;

2272 
ªåyCou¡
 = 0;

2273 
nMaöFûe
;

2276 
nMaöFûe
 = 
	`sqlôe3SåÀn30
(
zMaöFûe
);

2277 
zMa°î
 = 
	`sqlôe3MPrötf
(
db
, "%s-mjXXXXXX9XXz", 
zMaöFûe
);

2278 if–
zMa°î
==0 )  
SQLITE_NOMEM_BKPT
;

2280 
u32
 
iR™dom
;

2281 if–
ªåyCou¡
 ){

2282 if–
ªåyCou¡
>100 ){

2283 
	`sqlôe3_log
(
SQLITE_FULL
, "MJ dñëe: %s", 
zMa°î
);

2284 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2286 }if–
ªåyCou¡
==1 ){

2287 
	`sqlôe3_log
(
SQLITE_FULL
, "MJ cﬁlide: %s", 
zMa°î
);

2290 
ªåyCou¡
++;

2291 
	`sqlôe3_øndom√ss
((
iR™dom
), &iRandom);

2292 
	`sqlôe3_¢¥ötf
(13, &
zMa°î
[
nMaöFûe
], "-mj%06X9%02X",

2293 (
iR™dom
>>8)&0xffffff, iRandom&0xff);

2296 
	`as£π
–
zMa°î
[
	`sqlôe3SåÀn30
(zMaster)-3]=='9' );

2297 
	`sqlôe3FûeSuffix3
(
zMaöFûe
, 
zMa°î
);

2298 
rc
 = 
	`sqlôe3OsAc˚ss
(
pVfs
, 
zMa°î
, 
SQLITE_ACCESS_EXISTS
, &
ªs
);

2299 } 
rc
==
SQLITE_OK
 && 
ªs
 );

2300 if–
rc
==
SQLITE_OK
 ){

2302 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
pVfs
, 
zMa°î
, &
pMa°î
,

2303 
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|

2304 
SQLITE_OPEN_EXCLUSIVE
|
SQLITE_OPEN_MASTER_JOURNAL
, 0

2307 if–
rc
!=
SQLITE_OK
 ){

2308 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2309  
rc
;

2318 
i
=0; i<
db
->
nDb
; i++){

2319 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2320 if–
	`sqlôe3BåìIsInTøns
(
pBt
) ){

2321 c⁄° *
zFûe
 = 
	`sqlôe3BåìGëJou∫Æ«me
(
pBt
);

2322 if–
zFûe
==0 ){

2325 
	`as£π
–
zFûe
[0]!=0 );

2326 
rc
 = 
	`sqlôe3OsWrôe
(
pMa°î
, 
zFûe
, 
	`sqlôe3SåÀn30
(zFûe)+1, 
off£t
);

2327 
off£t
 +
	`sqlôe3SåÀn30
(
zFûe
)+1;

2328 if–
rc
!=
SQLITE_OK
 ){

2329 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2330 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2331 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2332  
rc
;

2340 if–0==(
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pMa°î
)&
SQLITE_IOCAP_SEQUENTIAL
)

2341 && 
SQLITE_OK
!=(
rc
 = 
	`sqlôe3OsSync
(
pMa°î
, 
SQLITE_SYNC_NORMAL
))

2343 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2344 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 0);

2345 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2346  
rc
;

2359 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nDb
; i++){

2360 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2361 if–
pBt
 ){

2362 
rc
 = 
	`sqlôe3BåìCommôPha£O√
(
pBt
, 
zMa°î
);

2365 
	`sqlôe3OsClo£Fªe
(
pMa°î
);

2366 
	`as£π
–
rc
!=
SQLITE_BUSY
 );

2367 if–
rc
!=
SQLITE_OK
 ){

2368 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2369  
rc
;

2376 
rc
 = 
	`sqlôe3OsDñëe
(
pVfs
, 
zMa°î
, 1);

2377 
	`sqlôe3DbFªe
(
db
, 
zMa°î
);

2378 
zMa°î
 = 0;

2379 if–
rc
 ){

2380  
rc
;

2390 
	`dißbÀ_simuœãd_io_îr‹s
();

2391 
	`sqlôe3BegöBíignMÆloc
();

2392 
i
=0; i<
db
->
nDb
; i++){

2393 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2394 if–
pBt
 ){

2395 
	`sqlôe3BåìCommôPha£Two
(
pBt
, 1);

2398 
	`sqlôe3EndBíignMÆloc
();

2399 
	`íabÀ_simuœãd_io_îr‹s
();

2401 
	`sqlôe3VèbCommô
(
db
);

2405  
rc
;

2406 
	}
}

2417 #i‚de‡
NDEBUG


2418 
	$checkA˘iveVdbeC¡
(
sqlôe3
 *
db
){

2419 
Vdbe
 *
p
;

2420 
˙t
 = 0;

2421 
nWrôe
 = 0;

2422 
nRód
 = 0;

2423 
p
 = 
db
->
pVdbe
;

2424  
p
 ){

2425 if–
	`sqlôe3_°mt_busy
((
sqlôe3_°mt
*)
p
) ){

2426 
˙t
++;

2427 if–
p
->
ªadO∆y
==0 ) 
nWrôe
++;

2428 if–
p
->
bIsRódî
 ) 
nRód
++;

2430 
p
 =Ö->
pNext
;

2432 
	`as£π
–
˙t
==
db
->
nVdbeA˘ive
 );

2433 
	`as£π
–
nWrôe
==
db
->
nVdbeWrôe
 );

2434 
	`as£π
–
nRód
==
db
->
nVdbeRód
 );

2435 
	}
}

2437 
	#checkA˘iveVdbeC¡
(
x
)

	)

2450 
	$sqlôe3VdbeClo£Sèãmít
(
Vdbe
 *
p
, 
eOp
){

2451 
sqlôe3
 *c⁄° 
db
 = 
p
->db;

2452 
rc
 = 
SQLITE_OK
;

2459 if–
db
->
nSèãmít
 && 
p
->
iSèãmít
 ){

2460 
i
;

2461 c⁄° 
iSavïoöt
 = 
p
->
iSèãmít
-1;

2463 
	`as£π
–
eOp
==
SAVEPOINT_ROLLBACK
 ||ÉOp==
SAVEPOINT_RELEASE
);

2464 
	`as£π
–
db
->
nSèãmít
>0 );

2465 
	`as£π
–
p
->
iSèãmít
==(
db
->
nSèãmít
+db->
nSavïoöt
) );

2467 
i
=0; i<
db
->
nDb
; i++){

2468 
rc2
 = 
SQLITE_OK
;

2469 
Båì
 *
pBt
 = 
db
->
aDb
[
i
].pBt;

2470 if–
pBt
 ){

2471 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2472 
rc2
 = 
	`sqlôe3BåìSavïoöt
(
pBt
, 
SAVEPOINT_ROLLBACK
, 
iSavïoöt
);

2474 if–
rc2
==
SQLITE_OK
 ){

2475 
rc2
 = 
	`sqlôe3BåìSavïoöt
(
pBt
, 
SAVEPOINT_RELEASE
, 
iSavïoöt
);

2477 if–
rc
==
SQLITE_OK
 ){

2478 
rc
 = 
rc2
;

2482 
db
->
nSèãmít
--;

2483 
p
->
iSèãmít
 = 0;

2485 if–
rc
==
SQLITE_OK
 ){

2486 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2487 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_ROLLBACK
, 
iSavïoöt
);

2489 if–
rc
==
SQLITE_OK
 ){

2490 
rc
 = 
	`sqlôe3VèbSavïoöt
(
db
, 
SAVEPOINT_RELEASE
, 
iSavïoöt
);

2497 if–
eOp
==
SAVEPOINT_ROLLBACK
 ){

2498 
db
->
nDe„ºedC⁄s
 = 
p
->
nStmtDefC⁄s
;

2499 
db
->
nDe„ºedImmC⁄s
 = 
p
->
nStmtDefImmC⁄s
;

2502  
rc
;

2503 
	}
}

2515 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


2516 
	$sqlôe3VdbeCheckFk
(
Vdbe
 *
p
, 
de„ºed
){

2517 
sqlôe3
 *
db
 = 
p
->db;

2518 if–(
de„ºed
 && (
db
->
nDe„ºedC⁄s
+db->
nDe„ºedImmC⁄s
)>0)

2519 || (!
de„ºed
 && 
p
->
nFkC⁄°øöt
>0)

2521 
p
->
rc
 = 
SQLITE_CONSTRAINT_FOREIGNKEY
;

2522 
p
->
îr‹A˘i⁄
 = 
OE_Ab‹t
;

2523 
	`sqlôe3VdbeEº‹
(
p
, "FOREIGN KEY constraint failed");

2524  
SQLITE_ERROR
;

2526  
SQLITE_OK
;

2527 
	}
}

2543 
	$sqlôe3VdbeHÆt
(
Vdbe
 *
p
){

2544 
rc
;

2545 
sqlôe3
 *
db
 = 
p
->db;

2563 if–
db
->
mÆlocFaûed
 ){

2564 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

2566 if–
p
->
aOn˚Fœg
 ) 
	`mem£t
’->aOn˚Fœg, 0,Ö->
nOn˚Fœg
);

2567 
	`˛o£AŒCurs‹s
(
p
);

2568 if–
p
->
magic
!=
VDBE_MAGIC_RUN
 ){

2569  
SQLITE_OK
;

2571 
	`checkA˘iveVdbeC¡
(
db
);

2575 if–
p
->
pc
>=0 &&Ö->
bIsRódî
 ){

2576 
mrc
;

2577 
eSèãmítOp
 = 0;

2578 
isS≥cülEº‹
;

2581 
	`sqlôe3VdbeE¡î
(
p
);

2584 
mrc
 = 
p
->
rc
 & 0xff;

2585 
isS≥cülEº‹
 = 
mrc
==
SQLITE_NOMEM
 || mrc==
SQLITE_IOERR


2586 || 
mrc
==
SQLITE_INTERRUPT
 || mrc==
SQLITE_FULL
;

2587 if–
isS≥cülEº‹
 ){

2600 if–!
p
->
ªadO∆y
 || 
mrc
!=
SQLITE_INTERRUPT
 ){

2601 if–(
mrc
==
SQLITE_NOMEM
 || mrc==
SQLITE_FULL
Ë&& 
p
->
u£sStmtJou∫Æ
 ){

2602 
eSèãmítOp
 = 
SAVEPOINT_ROLLBACK
;

2607 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2608 
	`sqlôe3Clo£Savïoöts
(
db
);

2609 
db
->
autoCommô
 = 1;

2610 
p
->
nCh™ge
 = 0;

2616 if–
p
->
rc
==
SQLITE_OK
 ){

2617 
	`sqlôe3VdbeCheckFk
(
p
, 0);

2626 if–!
	`sqlôe3VèbInSync
(
db
)

2627 && 
db
->
autoCommô


2628 && 
db
->
nVdbeWrôe
==(
p
->
ªadO∆y
==0)

2630 if–
p
->
rc
==
SQLITE_OK
 || (p->
îr‹A˘i⁄
==
OE_Faû
 && !
isS≥cülEº‹
) ){

2631 
rc
 = 
	`sqlôe3VdbeCheckFk
(
p
, 1);

2632 if–
rc
!=
SQLITE_OK
 ){

2633 if–
	`NEVER
(
p
->
ªadO∆y
) ){

2634 
	`sqlôe3VdbeLóve
(
p
);

2635  
SQLITE_ERROR
;

2637 
rc
 = 
SQLITE_CONSTRAINT_FOREIGNKEY
;

2643 
rc
 = 
	`vdbeCommô
(
db
, 
p
);

2645 if–
rc
==
SQLITE_BUSY
 && 
p
->
ªadO∆y
 ){

2646 
	`sqlôe3VdbeLóve
(
p
);

2647  
SQLITE_BUSY
;

2648 }if–
rc
!=
SQLITE_OK
 ){

2649 
p
->
rc
 =Ñc;

2650 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

2651 
p
->
nCh™ge
 = 0;

2653 
db
->
nDe„ºedC⁄s
 = 0;

2654 
db
->
nDe„ºedImmC⁄s
 = 0;

2655 
db
->
Êags
 &~
SQLITE_De„rFKs
;

2656 
	`sqlôe3CommôI¡î«lCh™ges
(
db
);

2659 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_OK
);

2660 
p
->
nCh™ge
 = 0;

2662 
db
->
nSèãmít
 = 0;

2663 }if–
eSèãmítOp
==0 ){

2664 if–
p
->
rc
==
SQLITE_OK
 ||Ö->
îr‹A˘i⁄
==
OE_Faû
 ){

2665 
eSèãmítOp
 = 
SAVEPOINT_RELEASE
;

2666 }if–
p
->
îr‹A˘i⁄
==
OE_Ab‹t
 ){

2667 
eSèãmítOp
 = 
SAVEPOINT_ROLLBACK
;

2669 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2670 
	`sqlôe3Clo£Savïoöts
(
db
);

2671 
db
->
autoCommô
 = 1;

2672 
p
->
nCh™ge
 = 0;

2682 if–
eSèãmítOp
 ){

2683 
rc
 = 
	`sqlôe3VdbeClo£Sèãmít
(
p
, 
eSèãmítOp
);

2684 if–
rc
 ){

2685 if–
p
->
rc
==
SQLITE_OK
 || (p->rc&0xff)==
SQLITE_CONSTRAINT
 ){

2686 
p
->
rc
 =Ñc;

2687 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2688 
p
->
zEºMsg
 = 0;

2690 
	`sqlôe3RﬁlbackAŒ
(
db
, 
SQLITE_ABORT_ROLLBACK
);

2691 
	`sqlôe3Clo£Savïoöts
(
db
);

2692 
db
->
autoCommô
 = 1;

2693 
p
->
nCh™ge
 = 0;

2700 if–
p
->
ch™geC¡On
 ){

2701 if–
eSèãmítOp
!=
SAVEPOINT_ROLLBACK
 ){

2702 
	`sqlôe3VdbeSëCh™ges
(
db
, 
p
->
nCh™ge
);

2704 
	`sqlôe3VdbeSëCh™ges
(
db
, 0);

2706 
p
->
nCh™ge
 = 0;

2710 
	`sqlôe3VdbeLóve
(
p
);

2714 if–
p
->
pc
>=0 ){

2715 
db
->
nVdbeA˘ive
--;

2716 if–!
p
->
ªadO∆y
 ) 
db
->
nVdbeWrôe
--;

2717 if–
p
->
bIsRódî
 ) 
db
->
nVdbeRód
--;

2718 
	`as£π
–
db
->
nVdbeA˘ive
>=db->
nVdbeRód
 );

2719 
	`as£π
–
db
->
nVdbeRód
>=db->
nVdbeWrôe
 );

2720 
	`as£π
–
db
->
nVdbeWrôe
>=0 );

2722 
p
->
magic
 = 
VDBE_MAGIC_HALT
;

2723 
	`checkA˘iveVdbeC¡
(
db
);

2724 if–
db
->
mÆlocFaûed
 ){

2725 
p
->
rc
 = 
SQLITE_NOMEM_BKPT
;

2732 if–
db
->
autoCommô
 ){

2733 
	`sqlôe3C⁄√˘i⁄U∆ocked
(
db
);

2736 
	`as£π
–
db
->
nVdbeA˘ive
>0 || db->
autoCommô
==0 || db->
nSèãmít
==0 );

2737  (
p
->
rc
==
SQLITE_BUSY
 ? SQLITE_BUSY : 
SQLITE_OK
);

2738 
	}
}

2745 
	$sqlôe3VdbeRe£tSãpResu…
(
Vdbe
 *
p
){

2746 
p
->
rc
 = 
SQLITE_OK
;

2747 
	}
}

2757 
	$sqlôe3VdbeTøns„rEº‹
(
Vdbe
 *
p
){

2758 
sqlôe3
 *
db
 = 
p
->db;

2759 
rc
 = 
p
->rc;

2760 if–
p
->
zEºMsg
 ){

2761 
db
->
bBíignMÆloc
++;

2762 
	`sqlôe3BegöBíignMÆloc
();

2763 if–
db
->
pEº
==0 ) db->pEº = 
	`sqlôe3VÆueNew
(db);

2764 
	`sqlôe3VÆueSëSå
(
db
->
pEº
, -1, 
p
->
zEºMsg
, 
SQLITE_UTF8
, 
SQLITE_TRANSIENT
);

2765 
	`sqlôe3EndBíignMÆloc
();

2766 
db
->
bBíignMÆloc
--;

2767 
db
->
îrCode
 = 
rc
;

2769 
	`sqlôe3Eº‹
(
db
, 
rc
);

2771  
rc
;

2772 
	}
}

2774 #ifde‡
SQLITE_ENABLE_SQLLOG


2779 
	$vdbeInvokeSqŒog
(
Vdbe
 *
v
){

2780 if–
sqlôe3GlobÆC⁄fig
.
xSqŒog
 && 
v
->
rc
==
SQLITE_OK
 && v->
zSql
 && v->
pc
>=0 ){

2781 *
zEx∑nded
 = 
	`sqlôe3VdbeEx∑ndSql
(
v
, v->
zSql
);

2782 
	`as£π
–
v
->
db
->
öô
.
busy
==0 );

2783 if–
zEx∑nded
 ){

2784 
sqlôe3GlobÆC⁄fig
.
	`xSqŒog
(

2785 
sqlôe3GlobÆC⁄fig
.
pSqŒogArg
, 
v
->
db
, 
zEx∑nded
, 1

2787 
	`sqlôe3DbFªe
(
v
->
db
, 
zEx∑nded
);

2790 
	}
}

2792 
	#vdbeInvokeSqŒog
(
x
)

	)

2806 
	$sqlôe3VdbeRe£t
(
Vdbe
 *
p
){

2807 
sqlôe3
 *
db
;

2808 
db
 = 
p
->db;

2814 
	`sqlôe3VdbeHÆt
(
p
);

2821 if–
p
->
pc
>=0 ){

2822 
	`vdbeInvokeSqŒog
(
p
);

2823 
	`sqlôe3VdbeTøns„rEº‹
(
p
);

2824 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2825 
p
->
zEºMsg
 = 0;

2826 if–
p
->
runO∆yOn˚
 )Ö->
expúed
 = 1;

2827 }if–
p
->
rc
 &&Ö->
expúed
 ){

2832 
	`sqlôe3Eº‹WôhMsg
(
db
, 
p
->
rc
,Ö->
zEºMsg
 ? "%s" : 0,Ö->zErrMsg);

2833 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

2834 
p
->
zEºMsg
 = 0;

2839 
	`CÀ™up
(
p
);

2843 #ifde‡
VDBE_PROFILE


2845 
FILE
 *
out
 = 
	`f›í
("vdbe_profile.out", "a");

2846 if–
out
 ){

2847 
i
;

2848 
	`Ârötf
(
out
, "---- ");

2849 
i
=0; i<
p
->
nOp
; i++){

2850 
	`Ârötf
(
out
, "%02x", 
p
->
aOp
[
i
].
›code
);

2852 
	`Ârötf
(
out
, "\n");

2853 if–
p
->
zSql
 ){

2854 
c
, 
pc
 = 0;

2855 
	`Ârötf
(
out
, "-- ");

2856 
i
=0; (
c
 = 
p
->
zSql
[i])!=0; i++){

2857 if–
pc
=='\n' ) 
	`Ârötf
(
out
, "-- ");

2858 
	`putc
(
c
, 
out
);

2859 
pc
 = 
c
;

2861 if–
pc
!='\n' ) 
	`Ârötf
(
out
, "\n");

2863 
i
=0; i<
p
->
nOp
; i++){

2864 
zHdr
[100];

2865 
	`sqlôe3_¢¥ötf
((
zHdr
), zHdr, "%6u %12llu %8llu ",

2866 
p
->
aOp
[
i
].
˙t
,

2867 
p
->
aOp
[
i
].
cy˛es
,

2868 
p
->
aOp
[
i
].
˙t
>0 ?Ö->aOp[i].
cy˛es
/p->aOp[i].cnt : 0

2870 
	`Ârötf
(
out
, "%s", 
zHdr
);

2871 
	`sqlôe3VdbePrötOp
(
out
, 
i
, &
p
->
aOp
[i]);

2873 
	`f˛o£
(
out
);

2877 
p
->
iCuºítTime
 = 0;

2878 
p
->
magic
 = 
VDBE_MAGIC_INIT
;

2879  
p
->
rc
 & 
db
->
îrMask
;

2880 
	}
}

2886 
	$sqlôe3VdbeFöÆize
(
Vdbe
 *
p
){

2887 
rc
 = 
SQLITE_OK
;

2888 if–
p
->
magic
==
VDBE_MAGIC_RUN
 ||Ö->magic==
VDBE_MAGIC_HALT
 ){

2889 
rc
 = 
	`sqlôe3VdbeRe£t
(
p
);

2890 
	`as£π
–(
rc
 & 
p
->
db
->
îrMask
)==rc );

2892 
	`sqlôe3VdbeDñëe
(
p
);

2893  
rc
;

2894 
	}
}

2912 
	$sqlôe3VdbeDñëeAuxD©a
(
sqlôe3
 *
db
, 
AuxD©a
 **
µ
, 
iOp
, 
mask
){

2913  *
µ
 ){

2914 
AuxD©a
 *
pAux
 = *
µ
;

2915 if–(
iOp
<0)

2916 || (
pAux
->
iOp
==iO∞&& (pAux->
iArg
>31 || !(
mask
 & 
	`MASKBIT32
(pAux->iArg))))

2918 
	`ã°ˇ£
–
pAux
->
iArg
==31 );

2919 if–
pAux
->
xDñëe
 ){

2920 
pAux
->
	`xDñëe
(pAux->pAux);

2922 *
µ
 = 
pAux
->
pNext
;

2923 
	`sqlôe3DbFªe
(
db
, 
pAux
);

2925 
µ
&
pAux
->
pNext
;

2928 
	}
}

2938 
	$sqlôe3VdbeCÀ¨Obje˘
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

2939 
SubProgøm
 *
pSub
, *
pNext
;

2940 
i
;

2941 
	`as£π
–
p
->
db
==0 ||Ö->db==db );

2942 
	`ªÀa£MemAºay
(
p
->
aV¨
,Ö->
nV¨
);

2943 
	`ªÀa£MemAºay
(
p
->
aCﬁName
,Ö->
nResCﬁumn
*
COLNAME_N
);

2944 
pSub
=
p
->
pProgøm
;ÖSub;ÖSub=
pNext
){

2945 
pNext
 = 
pSub
->pNext;

2946 
	`vdbeFªeOpAºay
(
db
, 
pSub
->
aOp
,ÖSub->
nOp
);

2947 
	`sqlôe3DbFªe
(
db
, 
pSub
);

2949 
i
=
p
->
nzV¨
-1; i>=0; i--Ë
	`sqlôe3DbFªe
(
db
,Ö->
azV¨
[i]);

2950 
	`sqlôe3DbFªe
(
db
, 
p
->
azV¨
);

2951 
	`vdbeFªeOpAºay
(
db
, 
p
->
aOp
,Ö->
nOp
);

2952 
	`sqlôe3DbFªe
(
db
, 
p
->
aCﬁName
);

2953 
	`sqlôe3DbFªe
(
db
, 
p
->
zSql
);

2954 
	`sqlôe3DbFªe
(
db
, 
p
->
pFªe
);

2955 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


2956 
i
=0; i<
p
->
nSˇn
; i++){

2957 
	`sqlôe3DbFªe
(
db
, 
p
->
aSˇn
[
i
].
zName
);

2959 
	`sqlôe3DbFªe
(
db
, 
p
->
aSˇn
);

2961 
	}
}

2966 
	$sqlôe3VdbeDñëe
(
Vdbe
 *
p
){

2967 
sqlôe3
 *
db
;

2969 if–
	`NEVER
(
p
==0) ) ;

2970 
db
 = 
p
->db;

2971 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

2972 
	`sqlôe3VdbeCÀ¨Obje˘
(
db
, 
p
);

2973 if–
p
->
pPªv
 ){

2974 
p
->
pPªv
->
pNext
 =Ö->pNext;

2976 
	`as£π
–
db
->
pVdbe
==
p
 );

2977 
db
->
pVdbe
 = 
p
->
pNext
;

2979 if–
p
->
pNext
 ){

2980 
p
->
pNext
->
pPªv
 =Ö->pPrev;

2982 
p
->
magic
 = 
VDBE_MAGIC_DEAD
;

2983 
p
->
db
 = 0;

2984 
	`sqlôe3DbFªe
(
db
, 
p
);

2985 
	}
}

2992 
SQLITE_NOINLINE
 
	$h™dÀDe„ºedMovëo
(
VdbeCurs‹
 *
p
){

2993 
ªs
, 
rc
;

2994 #ifde‡
SQLITE_TEST


2995 
sqlôe3_£¨ch_cou¡
;

2997 
	`as£π
–
p
->
de„ºedMovëo
 );

2998 
	`as£π
–
p
->
isTabÀ
 );

2999 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3000 
rc
 = 
	`sqlôe3BåìMovëoU≈acked
(
p
->
uc
.
pCurs‹
, 0,Ö->
movëoT¨gë
, 0, &
ªs
);

3001 if–
rc
 ) Ñc;

3002 if–
ªs
!=0 )  
SQLITE_CORRUPT_BKPT
;

3003 #ifde‡
SQLITE_TEST


3004 
sqlôe3_£¨ch_cou¡
++;

3006 
p
->
de„ºedMovëo
 = 0;

3007 
p
->
ˇcheSètus
 = 
CACHE_STALE
;

3008  
SQLITE_OK
;

3009 
	}
}

3018 
SQLITE_NOINLINE
 
	$h™dÀMovedCurs‹
(
VdbeCurs‹
 *
p
){

3019 
isDif„ª¡Row
, 
rc
;

3020 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3021 
	`as£π
–
p
->
uc
.
pCurs‹
!=0 );

3022 
	`as£π
–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) );

3023 
rc
 = 
	`sqlôe3BåìCurs‹Re°‹e
(
p
->
uc
.
pCurs‹
, &
isDif„ª¡Row
);

3024 
p
->
ˇcheSètus
 = 
CACHE_STALE
;

3025 if–
isDif„ª¡Row
 ) 
p
->
nuŒRow
 = 1;

3026  
rc
;

3027 
	}
}

3033 
	$sqlôe3VdbeCurs‹Re°‹e
(
VdbeCurs‹
 *
p
){

3034 
	`as£π
–
p
->
eCurTy≥
==
CURTYPE_BTREE
 );

3035 if–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) ){

3036  
	`h™dÀMovedCurs‹
(
p
);

3038  
SQLITE_OK
;

3039 
	}
}

3054 
	$sqlôe3VdbeCurs‹Movëo
(
VdbeCurs‹
 **
µ
, *
piCﬁ
){

3055 
VdbeCurs‹
 *
p
 = *
µ
;

3056 if–
p
->
eCurTy≥
==
CURTYPE_BTREE
 ){

3057 if–
p
->
de„ºedMovëo
 ){

3058 
iM≠
;

3059 if–
p
->
aA…M≠
 && (
iM≠
 =Ö->aA…M≠[1+*
piCﬁ
])>0 ){

3060 *
µ
 = 
p
->
pA…Curs‹
;

3061 *
piCﬁ
 = 
iM≠
 - 1;

3062  
SQLITE_OK
;

3064  
	`h™dÀDe„ºedMovëo
(
p
);

3066 if–
	`sqlôe3BåìCurs‹HasMoved
(
p
->
uc
.
pCurs‹
) ){

3067  
	`h™dÀMovedCurs‹
(
p
);

3070  
SQLITE_OK
;

3071 
	}
}

3118 
u32
 
	$sqlôe3VdbeSîülTy≥
(
Mem
 *
pMem
, 
fûe_f‹m©
, 
u32
 *
pLí
){

3119 
Êags
 = 
pMem
->flags;

3120 
u32
 
n
;

3122 
	`as£π
–
pLí
!=0 );

3123 if–
Êags
&
MEM_NuŒ
 ){

3124 *
pLí
 = 0;

3127 if–
Êags
&
MEM_I¡
 ){

3129 
	#MAX_6BYTE
 ((((
i64
)0x00008000)<<32)-1)

	)

3130 
i64
 
i
 = 
pMem
->
u
.i;

3131 
u64
 
u
;

3132 if–
i
<0 ){

3133 
u
 = ~
i
;

3135 
u
 = 
i
;

3137 if–
u
<=127 ){

3138 if–(
i
&1)==ò&& 
fûe_f‹m©
>=4 ){

3139 *
pLí
 = 0;

3140  8+(
u32
)
u
;

3142 *
pLí
 = 1;

3146 if–
u
<=32767 ){ *
pLí
 = 2;  2; }

3147 if–
u
<=8388607 ){ *
pLí
 = 3;  3; }

3148 if–
u
<=2147483647 ){ *
pLí
 = 4;  4; }

3149 if–
u
<=
MAX_6BYTE
 ){ *
pLí
 = 6;  5; }

3150 *
pLí
 = 8;

3153 if–
Êags
&
MEM_Ról
 ){

3154 *
pLí
 = 8;

3157 
	`as£π
–
pMem
->
db
->
mÆlocFaûed
 || 
Êags
&(
MEM_Så
|
MEM_Blob
) );

3158 
	`as£π
–
pMem
->
n
>=0 );

3159 
n
 = (
u32
)
pMem
->n;

3160 if–
Êags
 & 
MEM_Zîo
 ){

3161 
n
 +
pMem
->
u
.
nZîo
;

3163 *
pLí
 = 
n
;

3164  ((
n
*2Ë+ 12 + ((
Êags
&
MEM_Så
)!=0));

3165 
	}
}

3170 c⁄° 
u8
 
	gsqlôe3SmÆlTy≥Sizes
[] = {

3190 
u32
 
	$sqlôe3VdbeSîülTy≥Lí
(
u32
 
£rül_ty≥
){

3191 if–
£rül_ty≥
>=128 ){

3192  (
£rül_ty≥
-12)/2;

3194 
	`as£π
–
£rül_ty≥
<12

3195 || 
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
]==(serial_type - 12)/2 );

3196  
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3198 
	}
}

3199 
u8
 
	$sqlôe3VdbeO√ByãSîülTy≥Lí
(
u8
 
£rül_ty≥
){

3200 
	`as£π
–
£rül_ty≥
<128 );

3201  
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3202 
	}
}

3238 #ifde‡
SQLITE_MIXED_ENDIAN_64BIT_FLOAT


3239 
u64
 
	$ÊﬂtSw≠
(
u64
 
ö
){

3241 
u64
 
r
;

3242 
u32
 
i
[2];

3243 } 
u
;

3244 
u32
 
t
;

3246 
u
.
r
 = 
ö
;

3247 
t
 = 
u
.
i
[0];

3248 
u
.
i
[0] = u.i[1];

3249 
u
.
i
[1] = 
t
;

3250  
u
.
r
;

3251 
	}
}

3252 
	#sw≠MixedEndünFlﬂt
(
X
ËX = 
	`ÊﬂtSw≠
(X)

	)

3254 
	#sw≠MixedEndünFlﬂt
(
X
)

	)

3270 
u32
 
	$sqlôe3VdbeSîülPut
(
u8
 *
buf
, 
Mem
 *
pMem
, 
u32
 
£rül_ty≥
){

3271 
u32
 
Àn
;

3274 if–
£rül_ty≥
<=7 && serial_type>0 ){

3275 
u64
 
v
;

3276 
u32
 
i
;

3277 if–
£rül_ty≥
==7 ){

3278 
	`as£π
–(
v
)==(
pMem
->
u
.
r
) );

3279 
	`mem˝y
(&
v
, &
pMem
->
u
.
r
, (v));

3280 
	`sw≠MixedEndünFlﬂt
(
v
);

3282 
v
 = 
pMem
->
u
.
i
;

3284 
Àn
 = 
i
 = 
sqlôe3SmÆlTy≥Sizes
[
£rül_ty≥
];

3285 
	`as£π
–
i
>0 );

3287 
buf
[--
i
] = (
u8
)(
v
&0xFF);

3288 
v
 >>= 8;

3289 } 
i
 );

3290  
Àn
;

3294 if–
£rül_ty≥
>=12 ){

3295 
	`as£π
–
pMem
->
n
 + (’Mem->
Êags
 & 
MEM_Zîo
)?pMem->
u
.
nZîo
:0)

3296 =()
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥
) );

3297 
Àn
 = 
pMem
->
n
;

3298 if–
Àn
>0 ) 
	`mem˝y
(
buf
, 
pMem
->
z
,Üen);

3299  
Àn
;

3304 
	}
}

3309 
	#ONE_BYTE_INT
(
x
Ë((
i8
)(x)[0])

	)

3310 
	#TWO_BYTE_INT
(
x
Ë(256*(
i8
)((x)[0])|(x)[1])

	)

3311 
	#THREE_BYTE_INT
(
x
Ë(65536*(
i8
)((x)[0])|((x)[1]<<8)|(x)[2])

	)

3312 
	#FOUR_BYTE_UINT
(
x
Ë(((
u32
)(x)[0]<<24)|((x)[1]<<16)|((x)[2]<<8)|(x)[3])

	)

3313 
	#FOUR_BYTE_INT
(
x
Ë(16777216*(
i8
)((x)[0])|((x)[1]<<16)|((x)[2]<<8)|(x)[3])

	)

3324 
u32
 
SQLITE_NOINLINE
 
	$£rülGë
(

3325 c⁄° *
buf
,

3326 
u32
 
£rül_ty≥
,

3327 
Mem
 *
pMem


3329 
u64
 
x
 = 
	`FOUR_BYTE_UINT
(
buf
);

3330 
u32
 
y
 = 
	`FOUR_BYTE_UINT
(
buf
+4);

3331 
x
 = (x<<32Ë+ 
y
;

3332 if–
£rül_ty≥
==6 ){

3335 
pMem
->
u
.
i
 = *(
i64
*)&
x
;

3336 
pMem
->
Êags
 = 
MEM_I¡
;

3337 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3341 #i‡!
	`deföed
(
NDEBUG
Ë&& !deföed(
SQLITE_OMIT_FLOATING_POINT
)

3347 c⁄° 
u64
 
t1
 = ((u64)0x3ff00000)<<32;

3348 c⁄° 
r1
 = 1.0;

3349 
u64
 
t2
 = 
t1
;

3350 
	`sw≠MixedEndünFlﬂt
(
t2
);

3351 
	`as£π
–(
r1
)==(
t2
Ë&& 
	`memcmp
(&r1, &t2, (r1))==0 );

3353 
	`as£π
–(
x
)==8 && (
pMem
->
u
.
r
)==8 );

3354 
	`sw≠MixedEndünFlﬂt
(
x
);

3355 
	`mem˝y
(&
pMem
->
u
.
r
, &
x
, (x));

3356 
pMem
->
Êags
 = 
	`sqlôe3IsNaN
’Mem->
u
.
r
Ë? 
MEM_NuŒ
 : 
MEM_Ról
;

3359 
	}
}

3360 
u32
 
	$sqlôe3VdbeSîülGë
(

3361 c⁄° *
buf
,

3362 
u32
 
£rül_ty≥
,

3363 
Mem
 *
pMem


3365  
£rül_ty≥
 ){

3370 
pMem
->
Êags
 = 
MEM_NuŒ
;

3376 
pMem
->
u
.
i
 = 
	`ONE_BYTE_INT
(
buf
);

3377 
pMem
->
Êags
 = 
MEM_I¡
;

3378 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3384 
pMem
->
u
.
i
 = 
	`TWO_BYTE_INT
(
buf
);

3385 
pMem
->
Êags
 = 
MEM_I¡
;

3386 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3392 
pMem
->
u
.
i
 = 
	`THREE_BYTE_INT
(
buf
);

3393 
pMem
->
Êags
 = 
MEM_I¡
;

3394 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3400 
pMem
->
u
.
i
 = 
	`FOUR_BYTE_INT
(
buf
);

3401 #ifde‡
__HP_cc


3403 if–
buf
[0]&0x80 ) 
pMem
->
u
.
i
 |= 0xffffffff80000000LL;

3405 
pMem
->
Êags
 = 
MEM_I¡
;

3406 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3412 
pMem
->
u
.
i
 = 
	`FOUR_BYTE_UINT
(
buf
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(buf);

3413 
pMem
->
Êags
 = 
MEM_I¡
;

3414 
	`ã°ˇ£
–
pMem
->
u
.
i
<0 );

3421  
	`£rülGë
(
buf
,
£rül_ty≥
,
pMem
);

3427 
pMem
->
u
.
i
 = 
£rül_ty≥
-8;

3428 
pMem
->
Êags
 = 
MEM_I¡
;

3436 c⁄° 
u16
 
aFœg
[] = { 
MEM_Blob
|
MEM_Ephem
, 
MEM_Så
|MEM_Ephem };

3437 
pMem
->
z
 = (*)
buf
;

3438 
pMem
->
n
 = (
£rül_ty≥
-12)/2;

3439 
pMem
->
Êags
 = 
aFœg
[
£rül_ty≥
&1];

3440  
pMem
->
n
;

3444 
	}
}

3459 
U≈ackedRec‹d
 *
	$sqlôe3VdbeAŒocU≈ackedRec‹d
(

3460 
KeyInfo
 *
pKeyInfo
,

3461 *
pS∑˚
,

3462 
szS∑˚
,

3463 **
µFªe


3465 
U≈ackedRec‹d
 *
p
;

3466 
nOff
;

3467 
nByã
;

3473 
nOff
 = (8 - (
	`SQLITE_PTR_TO_INT
(
pS∑˚
) & 7)) & 7;

3474 
nByã
 = 
	`ROUND8
((
U≈ackedRec‹d
)Ë+ (
Mem
)*(
pKeyInfo
->
nFõld
+1);

3475 if–
nByã
>
szS∑˚
+
nOff
 ){

3476 
p
 = (
U≈ackedRec‹d
 *)
	`sqlôe3DbMÆlocRaw
(
pKeyInfo
->
db
, 
nByã
);

3477 *
µFªe
 = (*)
p
;

3478 if–!
p
 )  0;

3480 
p
 = (
U≈ackedRec‹d
*)&
pS∑˚
[
nOff
];

3481 *
µFªe
 = 0;

3484 
p
->
aMem
 = (
Mem
*)&((*Ì)[
	`ROUND8
((
U≈ackedRec‹d
))];

3485 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

3486 
p
->
pKeyInfo
 =ÖKeyInfo;

3487 
p
->
nFõld
 = 
pKeyInfo
->nField + 1;

3488  
p
;

3489 
	}
}

3496 
	$sqlôe3VdbeRec‹dU≈ack
(

3497 
KeyInfo
 *
pKeyInfo
,

3498 
nKey
,

3499 c⁄° *
pKey
,

3500 
U≈ackedRec‹d
 *
p


3502 c⁄° *
aKey
 = (c⁄° *)
pKey
;

3503 
d
;

3504 
u32
 
idx
;

3505 
u16
 
u
;

3506 
u32
 
szHdr
;

3507 
Mem
 *
pMem
 = 
p
->
aMem
;

3509 
p
->
deÁu…_rc
 = 0;

3510 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

3511 
idx
 = 
	`gëV¨öt32
(
aKey
, 
szHdr
);

3512 
d
 = 
szHdr
;

3513 
u
 = 0;

3514  
idx
<
szHdr
 && 
d
<=
nKey
 ){

3515 
u32
 
£rül_ty≥
;

3517 
idx
 +
	`gëV¨öt32
(&
aKey
[idx], 
£rül_ty≥
);

3518 
pMem
->
íc
 = 
pKeyInfo
->enc;

3519 
pMem
->
db
 = 
pKeyInfo
->db;

3521 
pMem
->
szMÆloc
 = 0;

3522 
pMem
->
z
 = 0;

3523 
d
 +
	`sqlôe3VdbeSîülGë
(&
aKey
[d], 
£rül_ty≥
, 
pMem
);

3524 
pMem
++;

3525 if–(++
u
)>=
p
->
nFõld
 ) ;

3527 
	`as£π
–
u
<=
pKeyInfo
->
nFõld
 + 1 );

3528 
p
->
nFõld
 = 
u
;

3529 
	}
}

3531 #i‡
SQLITE_DEBUG


3543 
	$vdbeRec‹dCom∑ªDebug
(

3544 
nKey1
, c⁄° *
pKey1
,

3545 c⁄° 
U≈ackedRec‹d
 *
pPKey2
,

3546 
desúedResu…


3548 
u32
 
d1
;

3549 
u32
 
idx1
;

3550 
u32
 
szHdr1
;

3551 
i
 = 0;

3552 
rc
 = 0;

3553 c⁄° *
aKey1
 = (c⁄° *)
pKey1
;

3554 
KeyInfo
 *
pKeyInfo
;

3555 
Mem
 
mem1
;

3557 
pKeyInfo
 = 
pPKey2
->pKeyInfo;

3558 if–
pKeyInfo
->
db
==0 )  1;

3559 
mem1
.
íc
 = 
pKeyInfo
->enc;

3560 
mem1
.
db
 = 
pKeyInfo
->db;

3562 
	`VVA_ONLY
–
mem1
.
szMÆloc
 = 0; )

3573 
idx1
 = 
	`gëV¨öt32
(
aKey1
, 
szHdr1
);

3574 if–
szHdr1
>98307 )  
SQLITE_CORRUPT
;

3575 
d1
 = 
szHdr1
;

3576 
	`as£π
–
pKeyInfo
->
nFõld
+pKeyInfo->
nXFõld
>=
pPKey2
->nFõld || 
CORRUPT_DB
 );

3577 
	`as£π
–
pKeyInfo
->
aS‹tOrdî
!=0 );

3578 
	`as£π
–
pKeyInfo
->
nFõld
>0 );

3579 
	`as£π
–
idx1
<=
szHdr1
 || 
CORRUPT_DB
 );

3581 
u32
 
£rül_ty≥1
;

3584 
idx1
 +
	`gëV¨öt32
–
aKey1
+idx1, 
£rül_ty≥1
 );

3592 if–
d1
+
£rül_ty≥1
+2>(
u32
)
nKey1


3593 && 
d1
+
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥1
)>(
u32
)
nKey1


3600 
d1
 +
	`sqlôe3VdbeSîülGë
(&
aKey1
[d1], 
£rül_ty≥1
, &
mem1
);

3604 
rc
 = 
	`sqlôe3MemCom∑ª
(&
mem1
, &
pPKey2
->
aMem
[
i
], 
pKeyInfo
->
aCﬁl
[i]);

3605 if–
rc
!=0 ){

3606 
	`as£π
–
mem1
.
szMÆloc
==0 );

3607 if–
pKeyInfo
->
aS‹tOrdî
[
i
] ){

3608 
rc
 = -rc;

3610 
debugCom∑ªEnd
;

3612 
i
++;

3613 } 
idx1
<
szHdr1
 && 
i
<
pPKey2
->
nFõld
 );

3619 
	`as£π
–
mem1
.
szMÆloc
==0 );

3624 
rc
 = 
pPKey2
->
deÁu…_rc
;

3626 
debugCom∑ªEnd
:

3627 if–
desúedResu…
==0 && 
rc
==0 )  1;

3628 if–
desúedResu…
<0 && 
rc
<0 )  1;

3629 if–
desúedResu…
>0 && 
rc
>0 )  1;

3630 if–
CORRUPT_DB
 )  1;

3631 if–
pKeyInfo
->
db
->
mÆlocFaûed
 )  1;

3633 
	}
}

3636 #i‡
SQLITE_DEBUG


3648 
	$vdbeAs£πFõldCou¡WôhöLimôs
(

3649 
nKey
, c⁄° *
pKey
,

3650 c⁄° 
KeyInfo
 *
pKeyInfo


3652 
nFõld
 = 0;

3653 
u32
 
szHdr
;

3654 
u32
 
idx
;

3655 
u32
 
nŸU£d
;

3656 c⁄° *
aKey
 = (c⁄° *)
pKey
;

3658 if–
CORRUPT_DB
 ) ;

3659 
idx
 = 
	`gëV¨öt32
(
aKey
, 
szHdr
);

3660 
	`as£π
–
nKey
>=0 );

3661 
	`as£π
–
szHdr
<=(
u32
)
nKey
 );

3662  
idx
<
szHdr
 ){

3663 
idx
 +
	`gëV¨öt32
(
aKey
+idx, 
nŸU£d
);

3664 
nFõld
++;

3666 
	`as£π
–
nFõld
 <
pKeyInfo
->nFõld+pKeyInfo->
nXFõld
 );

3667 
	}
}

3669 
	#vdbeAs£πFõldCou¡WôhöLimôs
(
A
,
B
,
C
)

	)

3678 
	$vdbeCom∑ªMemSåög
(

3679 c⁄° 
Mem
 *
pMem1
,

3680 c⁄° 
Mem
 *
pMem2
,

3681 c⁄° 
CﬁlSeq
 *
pCﬁl
,

3682 
u8
 *
¥cEº


3684 if–
pMem1
->
íc
==
pCﬁl
->enc ){

3687  
pCﬁl
->
	`xCmp
’Cﬁl->
pU£r
,
pMem1
->
n
,pMem1->
z
,
pMem2
->n,pMem2->z);

3689 
rc
;

3690 c⁄° *
v1
, *
v2
;

3691 
n1
, 
n2
;

3692 
Mem
 
c1
;

3693 
Mem
 
c2
;

3694 
	`sqlôe3VdbeMemInô
(&
c1
, 
pMem1
->
db
, 
MEM_NuŒ
);

3695 
	`sqlôe3VdbeMemInô
(&
c2
, 
pMem1
->
db
, 
MEM_NuŒ
);

3696 
	`sqlôe3VdbeMemShÆlowC›y
(&
c1
, 
pMem1
, 
MEM_Ephem
);

3697 
	`sqlôe3VdbeMemShÆlowC›y
(&
c2
, 
pMem2
, 
MEM_Ephem
);

3698 
v1
 = 
	`sqlôe3VÆueText
((
sqlôe3_vÆue
*)&
c1
, 
pCﬁl
->
íc
);

3699 
n1
 = 
v1
==0 ? 0 : 
c1
.
n
;

3700 
v2
 = 
	`sqlôe3VÆueText
((
sqlôe3_vÆue
*)&
c2
, 
pCﬁl
->
íc
);

3701 
n2
 = 
v2
==0 ? 0 : 
c2
.
n
;

3702 
rc
 = 
pCﬁl
->
	`xCmp
’Cﬁl->
pU£r
, 
n1
, 
v1
, 
n2
, 
v2
);

3703 if–(
v1
==0 || 
v2
==0Ë&& 
¥cEº
 ) *¥cEº = 
SQLITE_NOMEM_BKPT
;

3704 
	`sqlôe3VdbeMemRñó£
(&
c1
);

3705 
	`sqlôe3VdbeMemRñó£
(&
c2
);

3706  
rc
;

3708 
	}
}

3715 
SQLITE_NOINLINE
 
	$sqlôe3BlobCom∑ª
(c⁄° 
Mem
 *
pB1
, c⁄° Mem *
pB2
){

3716 
c
 = 
	`memcmp
(
pB1
->
z
, 
pB2
->z,ÖB1->
n
>pB2->n ?ÖB2->n :ÖB1->n);

3717 if–
c
 )  c;

3718  
pB1
->
n
 - 
pB2
->n;

3719 
	}
}

3726 
	$sqlôe3I¡FlﬂtCom∑ª
(
i64
 
i
, 
r
){

3727 if–(
LONGDOUBLE_TYPE
)>8 ){

3728 
LONGDOUBLE_TYPE
 
x
 = (LONGDOUBLE_TYPE)
i
;

3729 if–
x
<
r
 )  -1;

3730 if–
x
>
r
 )  +1;

3733 
i64
 
y
;

3734 
s
;

3735 if–
r
<-9223372036854775808.0 )  +1;

3736 if–
r
>9223372036854775807.0 )  -1;

3737 
y
 = (
i64
)
r
;

3738 if–
i
<
y
 )  -1;

3739 if–
i
>
y
 ){

3740 if–
y
==
SMALLEST_INT64
 && 
r
>0.0 )  -1;

3743 
s
 = ()
i
;

3744 if–
s
<
r
 )  -1;

3745 if–
s
>
r
 )  +1;

3748 
	}
}

3759 
	$sqlôe3MemCom∑ª
(c⁄° 
Mem
 *
pMem1
, c⁄° Mem *
pMem2
, c⁄° 
CﬁlSeq
 *
pCﬁl
){

3760 
f1
, 
f2
;

3761 
comböed_Êags
;

3763 
f1
 = 
pMem1
->
Êags
;

3764 
f2
 = 
pMem2
->
Êags
;

3765 
comböed_Êags
 = 
f1
|
f2
;

3766 
	`as£π
–(
comböed_Êags
 & 
MEM_RowSë
)==0 );

3771 if–
comböed_Êags
&
MEM_NuŒ
 ){

3772  (
f2
&
MEM_NuŒ
Ë- (
f1
&MEM_Null);

3777 if–
comböed_Êags
&(
MEM_I¡
|
MEM_Ról
) ){

3778 if–(
f1
 & 
f2
 & 
MEM_I¡
)!=0 ){

3779 if–
pMem1
->
u
.
i
 < 
pMem2
->u.i )  -1;

3780 if–
pMem1
->
u
.
i
 > 
pMem2
->u.i )  +1;

3783 if–(
f1
 & 
f2
 & 
MEM_Ról
)!=0 ){

3784 if–
pMem1
->
u
.
r
 < 
pMem2
->u.r )  -1;

3785 if–
pMem1
->
u
.
r
 > 
pMem2
->u.r )  +1;

3788 if–(
f1
&
MEM_I¡
)!=0 ){

3789 if–(
f2
&
MEM_Ról
)!=0 ){

3790  
	`sqlôe3I¡FlﬂtCom∑ª
(
pMem1
->
u
.
i
, 
pMem2
->u.
r
);

3795 if–(
f1
&
MEM_Ról
)!=0 ){

3796 if–(
f2
&
MEM_I¡
)!=0 ){

3797  -
	`sqlôe3I¡FlﬂtCom∑ª
(
pMem2
->
u
.
i
, 
pMem1
->u.
r
);

3808 if–
comböed_Êags
&
MEM_Så
 ){

3809 if–(
f1
 & 
MEM_Så
)==0 ){

3812 if–(
f2
 & 
MEM_Så
)==0 ){

3816 
	`as£π
–
pMem1
->
íc
==
pMem2
->í¯||ÖMem1->
db
->
mÆlocFaûed
 );

3817 
	`as£π
–
pMem1
->
íc
==
SQLITE_UTF8
 ||

3818 
pMem1
->
íc
==
SQLITE_UTF16LE
 ||ÖMem1->íc==
SQLITE_UTF16BE
 );

3824 
	`as£π
–!
pCﬁl
 ||ÖCﬁl->
xCmp
 );

3826 if–
pCﬁl
 ){

3827  
	`vdbeCom∑ªMemSåög
(
pMem1
, 
pMem2
, 
pCﬁl
, 0);

3834  
	`sqlôe3BlobCom∑ª
(
pMem1
, 
pMem2
);

3835 
	}
}

3845 
i64
 
	$vdbeRec‹dDecodeI¡
(
u32
 
£rül_ty≥
, c⁄° 
u8
 *
aKey
){

3846 
u32
 
y
;

3847 
	`as£π
–
CORRUPT_DB
 || (
£rül_ty≥
>=1 && serial_type<=9 && serial_type!=7) );

3848  
£rül_ty≥
 ){

3851 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3852  
	`ONE_BYTE_INT
(
aKey
);

3854 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3855  
	`TWO_BYTE_INT
(
aKey
);

3857 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3858  
	`THREE_BYTE_INT
(
aKey
);

3860 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3861 
y
 = 
	`FOUR_BYTE_UINT
(
aKey
);

3862  (
i64
)*(*)&
y
;

3865 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3866  
	`FOUR_BYTE_UINT
(
aKey
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(aKey);

3869 
u64
 
x
 = 
	`FOUR_BYTE_UINT
(
aKey
);

3870 
	`ã°ˇ£
–
aKey
[0]&0x80 );

3871 
x
 = (x<<32Ë| 
	`FOUR_BYTE_UINT
(
aKey
+4);

3872  (
i64
)*(i64*)&
x
;

3876  (
£rül_ty≥
 - 8);

3877 
	}
}

3900 
	$sqlôe3VdbeRec‹dCom∑ªWôhSkù
(

3901 
nKey1
, c⁄° *
pKey1
,

3902 
U≈ackedRec‹d
 *
pPKey2
,

3903 
bSkù


3905 
u32
 
d1
;

3906 
i
;

3907 
u32
 
szHdr1
;

3908 
u32
 
idx1
;

3909 
rc
 = 0;

3910 
Mem
 *
pRhs
 = 
pPKey2
->
aMem
;

3911 
KeyInfo
 *
pKeyInfo
 = 
pPKey2
->pKeyInfo;

3912 c⁄° *
aKey1
 = (c⁄° *)
pKey1
;

3913 
Mem
 
mem1
;

3918 if–
bSkù
 ){

3919 
u32
 
s1
;

3920 
idx1
 = 1 + 
	`gëV¨öt32
(&
aKey1
[1], 
s1
);

3921 
szHdr1
 = 
aKey1
[0];

3922 
d1
 = 
szHdr1
 + 
	`sqlôe3VdbeSîülTy≥Lí
(
s1
);

3923 
i
 = 1;

3924 
pRhs
++;

3926 
idx1
 = 
	`gëV¨öt32
(
aKey1
, 
szHdr1
);

3927 
d1
 = 
szHdr1
;

3928 if–
d1
>()
nKey1
 ){

3929 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

3932 
i
 = 0;

3935 
	`VVA_ONLY
–
mem1
.
szMÆloc
 = 0; )

3936 
	`as£π
–
pPKey2
->
pKeyInfo
->
nFõld
+pPKey2->pKeyInfo->
nXFõld
>=pPKey2->nField

3937 || 
CORRUPT_DB
 );

3938 
	`as£π
–
pPKey2
->
pKeyInfo
->
aS‹tOrdî
!=0 );

3939 
	`as£π
–
pPKey2
->
pKeyInfo
->
nFõld
>0 );

3940 
	`as£π
–
idx1
<=
szHdr1
 || 
CORRUPT_DB
 );

3942 
u32
 
£rül_ty≥
;

3945 if–
pRhs
->
Êags
 & 
MEM_I¡
 ){

3946 
£rül_ty≥
 = 
aKey1
[
idx1
];

3947 
	`ã°ˇ£
–
£rül_ty≥
==12 );

3948 if–
£rül_ty≥
>=10 ){

3949 
rc
 = +1;

3950 }if–
£rül_ty≥
==0 ){

3951 
rc
 = -1;

3952 }if–
£rül_ty≥
==7 ){

3953 
	`sqlôe3VdbeSîülGë
(&
aKey1
[
d1
], 
£rül_ty≥
, &
mem1
);

3954 
rc
 = -
	`sqlôe3I¡FlﬂtCom∑ª
(
pRhs
->
u
.
i
, 
mem1
.u.
r
);

3956 
i64
 
lhs
 = 
	`vdbeRec‹dDecodeI¡
(
£rül_ty≥
, &
aKey1
[
d1
]);

3957 
i64
 
rhs
 = 
pRhs
->
u
.
i
;

3958 if–
lhs
<
rhs
 ){

3959 
rc
 = -1;

3960 }if–
lhs
>
rhs
 ){

3961 
rc
 = +1;

3967 if–
pRhs
->
Êags
 & 
MEM_Ról
 ){

3968 
£rül_ty≥
 = 
aKey1
[
idx1
];

3969 if–
£rül_ty≥
>=10 ){

3974 
rc
 = +1;

3975 }if–
£rül_ty≥
==0 ){

3976 
rc
 = -1;

3978 
	`sqlôe3VdbeSîülGë
(&
aKey1
[
d1
], 
£rül_ty≥
, &
mem1
);

3979 if–
£rül_ty≥
==7 ){

3980 if–
mem1
.
u
.
r
<
pRhs
->u.r ){

3981 
rc
 = -1;

3982 }if–
mem1
.
u
.
r
>
pRhs
->u.r ){

3983 
rc
 = +1;

3986 
rc
 = 
	`sqlôe3I¡FlﬂtCom∑ª
(
mem1
.
u
.
i
, 
pRhs
->u.
r
);

3992 if–
pRhs
->
Êags
 & 
MEM_Så
 ){

3993 
	`gëV¨öt32
(&
aKey1
[
idx1
], 
£rül_ty≥
);

3994 
	`ã°ˇ£
–
£rül_ty≥
==12 );

3995 if–
£rül_ty≥
<12 ){

3996 
rc
 = -1;

3997 }if–!(
£rül_ty≥
 & 0x01) ){

3998 
rc
 = +1;

4000 
mem1
.
n
 = (
£rül_ty≥
 - 12) / 2;

4001 
	`ã°ˇ£
–(
d1
+
mem1
.
n
)==()
nKey1
 );

4002 
	`ã°ˇ£
–(
d1
+
mem1
.
n
+1)==()
nKey1
 );

4003 if–(
d1
+
mem1
.
n
Ë> ()
nKey1
 ){

4004 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4006 }if–
pKeyInfo
->
aCﬁl
[
i
] ){

4007 
mem1
.
íc
 = 
pKeyInfo
->enc;

4008 
mem1
.
db
 = 
pKeyInfo
->db;

4009 
mem1
.
Êags
 = 
MEM_Så
;

4010 
mem1
.
z
 = (*)&
aKey1
[
d1
];

4011 
rc
 = 
	`vdbeCom∑ªMemSåög
(

4012 &
mem1
, 
pRhs
, 
pKeyInfo
->
aCﬁl
[
i
], &
pPKey2
->
îrCode


4015 
nCmp
 = 
	`MIN
(
mem1
.
n
, 
pRhs
->n);

4016 
rc
 = 
	`memcmp
(&
aKey1
[
d1
], 
pRhs
->
z
, 
nCmp
);

4017 if–
rc
==0 )Ñ¯
mem1
.
n
 - 
pRhs
->n;

4023 if–
pRhs
->
Êags
 & 
MEM_Blob
 ){

4024 
	`gëV¨öt32
(&
aKey1
[
idx1
], 
£rül_ty≥
);

4025 
	`ã°ˇ£
–
£rül_ty≥
==12 );

4026 if–
£rül_ty≥
<12 || (serial_type & 0x01) ){

4027 
rc
 = -1;

4029 
nSå
 = (
£rül_ty≥
 - 12) / 2;

4030 
	`ã°ˇ£
–(
d1
+
nSå
)==()
nKey1
 );

4031 
	`ã°ˇ£
–(
d1
+
nSå
+1)==()
nKey1
 );

4032 if–(
d1
+
nSå
Ë> ()
nKey1
 ){

4033 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4036 
nCmp
 = 
	`MIN
(
nSå
, 
pRhs
->
n
);

4037 
rc
 = 
	`memcmp
(&
aKey1
[
d1
], 
pRhs
->
z
, 
nCmp
);

4038 if–
rc
==0 )Ñ¯
nSå
 - 
pRhs
->
n
;

4045 
£rül_ty≥
 = 
aKey1
[
idx1
];

4046 
rc
 = (
£rül_ty≥
!=0);

4049 if–
rc
!=0 ){

4050 if–
pKeyInfo
->
aS‹tOrdî
[
i
] ){

4051 
rc
 = -rc;

4053 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
rc
) );

4054 
	`as£π
–
mem1
.
szMÆloc
==0 );

4055  
rc
;

4058 
i
++;

4059 
pRhs
++;

4060 
d1
 +
	`sqlôe3VdbeSîülTy≥Lí
(
£rül_ty≥
);

4061 
idx1
 +
	`sqlôe3V¨ötLí
(
£rül_ty≥
);

4062 } 
idx1
<()
szHdr1
 && 
i
<
pPKey2
->
nFõld
 && 
d1
<=()
nKey1
 );

4067 
	`as£π
–
mem1
.
szMÆloc
==0 );

4072 
	`as£π
–
CORRUPT_DB


4073 || 
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
,ÖPKey2->
deÁu…_rc
)

4074 || 
pKeyInfo
->
db
->
mÆlocFaûed


4076 
pPKey2
->
eqSìn
 = 1;

4077  
pPKey2
->
deÁu…_rc
;

4078 
	}
}

4079 
	$sqlôe3VdbeRec‹dCom∑ª
(

4080 
nKey1
, c⁄° *
pKey1
,

4081 
U≈ackedRec‹d
 *
pPKey2


4083  
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 0);

4084 
	}
}

4096 
	$vdbeRec‹dCom∑ªI¡
(

4097 
nKey1
, c⁄° *
pKey1
,

4098 
U≈ackedRec‹d
 *
pPKey2


4100 c⁄° 
u8
 *
aKey
 = &((c⁄° u8*)
pKey1
)[*(const u8*)pKey1 & 0x3F];

4101 
£rül_ty≥
 = ((c⁄° 
u8
*)
pKey1
)[1];

4102 
ªs
;

4103 
u32
 
y
;

4104 
u64
 
x
;

4105 
i64
 
v
 = 
pPKey2
->
aMem
[0].
u
.
i
;

4106 
i64
 
lhs
;

4108 
	`vdbeAs£πFõldCou¡WôhöLimôs
(
nKey1
, 
pKey1
, 
pPKey2
->
pKeyInfo
);

4109 
	`as£π
–(*(
u8
*)
pKey1
)<=0x3F || 
CORRUPT_DB
 );

4110  
£rül_ty≥
 ){

4112 
lhs
 = 
	`ONE_BYTE_INT
(
aKey
);

4113 
	`ã°ˇ£
–
lhs
<0 );

4117 
lhs
 = 
	`TWO_BYTE_INT
(
aKey
);

4118 
	`ã°ˇ£
–
lhs
<0 );

4122 
lhs
 = 
	`THREE_BYTE_INT
(
aKey
);

4123 
	`ã°ˇ£
–
lhs
<0 );

4127 
y
 = 
	`FOUR_BYTE_UINT
(
aKey
);

4128 
lhs
 = (
i64
)*(*)&
y
;

4129 
	`ã°ˇ£
–
lhs
<0 );

4133 
lhs
 = 
	`FOUR_BYTE_UINT
(
aKey
+2Ë+ (((
i64
)1)<<32)*
	`TWO_BYTE_INT
(aKey);

4134 
	`ã°ˇ£
–
lhs
<0 );

4138 
x
 = 
	`FOUR_BYTE_UINT
(
aKey
);

4139 
x
 = (x<<32Ë| 
	`FOUR_BYTE_UINT
(
aKey
+4);

4140 
lhs
 = *(
i64
*)&
x
;

4141 
	`ã°ˇ£
–
lhs
<0 );

4145 
lhs
 = 0;

4148 
lhs
 = 1;

4158  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
pPKey2
);

4161  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
pPKey2
);

4164 if–
v
>
lhs
 ){

4165 
ªs
 = 
pPKey2
->
r1
;

4166 }if–
v
<
lhs
 ){

4167 
ªs
 = 
pPKey2
->
r2
;

4168 }if–
pPKey2
->
nFõld
>1 ){

4171 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 1);

4175 
ªs
 = 
pPKey2
->
deÁu…_rc
;

4176 
pPKey2
->
eqSìn
 = 1;

4179 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
ªs
) );

4180  
ªs
;

4181 
	}
}

4189 
	$vdbeRec‹dCom∑ªSåög
(

4190 
nKey1
, c⁄° *
pKey1
,

4191 
U≈ackedRec‹d
 *
pPKey2


4193 c⁄° 
u8
 *
aKey1
 = (c⁄° u8*)
pKey1
;

4194 
£rül_ty≥
;

4195 
ªs
;

4197 
	`as£π
–
pPKey2
->
aMem
[0].
Êags
 & 
MEM_Så
 );

4198 
	`vdbeAs£πFõldCou¡WôhöLimôs
(
nKey1
, 
pKey1
, 
pPKey2
->
pKeyInfo
);

4199 
	`gëV¨öt32
(&
aKey1
[1], 
£rül_ty≥
);

4200 if–
£rül_ty≥
<12 ){

4201 
ªs
 = 
pPKey2
->
r1
;

4202 }if–!(
£rül_ty≥
 & 0x01) ){

4203 
ªs
 = 
pPKey2
->
r2
;

4205 
nCmp
;

4206 
nSå
;

4207 
szHdr
 = 
aKey1
[0];

4209 
nSå
 = (
£rül_ty≥
-12) / 2;

4210 if–(
szHdr
 + 
nSå
Ë> 
nKey1
 ){

4211 
pPKey2
->
îrCode
 = (
u8
)
SQLITE_CORRUPT_BKPT
;

4214 
nCmp
 = 
	`MIN
–
pPKey2
->
aMem
[0].
n
, 
nSå
 );

4215 
ªs
 = 
	`memcmp
(&
aKey1
[
szHdr
], 
pPKey2
->
aMem
[0].
z
, 
nCmp
);

4217 if–
ªs
==0 ){

4218 
ªs
 = 
nSå
 - 
pPKey2
->
aMem
[0].
n
;

4219 if–
ªs
==0 ){

4220 if–
pPKey2
->
nFõld
>1 ){

4221 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
pPKey2
, 1);

4223 
ªs
 = 
pPKey2
->
deÁu…_rc
;

4224 
pPKey2
->
eqSìn
 = 1;

4226 }if–
ªs
>0 ){

4227 
ªs
 = 
pPKey2
->
r2
;

4229 
ªs
 = 
pPKey2
->
r1
;

4231 }if–
ªs
>0 ){

4232 
ªs
 = 
pPKey2
->
r2
;

4234 
ªs
 = 
pPKey2
->
r1
;

4238 
	`as£π
–
	`vdbeRec‹dCom∑ªDebug
(
nKey1
, 
pKey1
, 
pPKey2
, 
ªs
)

4239 || 
CORRUPT_DB


4240 || 
pPKey2
->
pKeyInfo
->
db
->
mÆlocFaûed


4242  
ªs
;

4243 
	}
}

4250 
Rec‹dCom∑ª
 
	$sqlôe3VdbeFödCom∑ª
(
U≈ackedRec‹d
 *
p
){

4264 if–(
p
->
pKeyInfo
->
nFõld
 +Ö->pKeyInfo->
nXFõld
)<=13 ){

4265 
Êags
 = 
p
->
aMem
[0].flags;

4266 if–
p
->
pKeyInfo
->
aS‹tOrdî
[0] ){

4267 
p
->
r1
 = 1;

4268 
p
->
r2
 = -1;

4270 
p
->
r1
 = -1;

4271 
p
->
r2
 = 1;

4273 if–(
Êags
 & 
MEM_I¡
) ){

4274  
vdbeRec‹dCom∑ªI¡
;

4276 
	`ã°ˇ£
–
Êags
 & 
MEM_Ról
 );

4277 
	`ã°ˇ£
–
Êags
 & 
MEM_NuŒ
 );

4278 
	`ã°ˇ£
–
Êags
 & 
MEM_Blob
 );

4279 if–(
Êags
 & (
MEM_Ról
|
MEM_NuŒ
|
MEM_Blob
))==0 && 
p
->
pKeyInfo
->
aCﬁl
[0]==0 ){

4280 
	`as£π
–
Êags
 & 
MEM_Så
 );

4281  
vdbeRec‹dCom∑ªSåög
;

4285  
sqlôe3VdbeRec‹dCom∑ª
;

4286 
	}
}

4296 
	$sqlôe3VdbeIdxRowid
(
sqlôe3
 *
db
, 
BtCurs‹
 *
pCur
, 
i64
 *
rowid
){

4297 
i64
 
nCñlKey
 = 0;

4298 
rc
;

4299 
u32
 
szHdr
;

4300 
u32
 
ty≥Rowid
;

4301 
u32
 
ÀnRowid
;

4302 
Mem
 
m
, 
v
;

4309 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

4310 
nCñlKey
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

4311 
	`as£π
–(
nCñlKey
 & 
SQLITE_MAX_U32
)==(
u64
)nCellKey );

4314 
	`sqlôe3VdbeMemInô
(&
m
, 
db
, 0);

4315 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCur
, 0, (
u32
)
nCñlKey
, 1, &
m
);

4316 if–
rc
 ){

4317  
rc
;

4321 ()
	`gëV¨öt32
((
u8
*)
m
.
z
, 
szHdr
);

4322 
	`ã°ˇ£
–
szHdr
==3 );

4323 
	`ã°ˇ£
–
szHdr
==
m
.
n
 );

4324 if–
	`u∆ikñy
(
szHdr
<3 || ()szHdr>
m
.
n
) ){

4325 
idx_rowid_c‹ru±i⁄
;

4330 ()
	`gëV¨öt32
((
u8
*)&
m
.
z
[
szHdr
-1], 
ty≥Rowid
);

4331 
	`ã°ˇ£
–
ty≥Rowid
==1 );

4332 
	`ã°ˇ£
–
ty≥Rowid
==2 );

4333 
	`ã°ˇ£
–
ty≥Rowid
==3 );

4334 
	`ã°ˇ£
–
ty≥Rowid
==4 );

4335 
	`ã°ˇ£
–
ty≥Rowid
==5 );

4336 
	`ã°ˇ£
–
ty≥Rowid
==6 );

4337 
	`ã°ˇ£
–
ty≥Rowid
==8 );

4338 
	`ã°ˇ£
–
ty≥Rowid
==9 );

4339 if–
	`u∆ikñy
(
ty≥Rowid
<1 ||ÅypeRowid>9 ||ÅypeRowid==7) ){

4340 
idx_rowid_c‹ru±i⁄
;

4342 
ÀnRowid
 = 
sqlôe3SmÆlTy≥Sizes
[
ty≥Rowid
];

4343 
	`ã°ˇ£
–(
u32
)
m
.
n
==
szHdr
+
ÀnRowid
 );

4344 if–
	`u∆ikñy
((
u32
)
m
.
n
<
szHdr
+
ÀnRowid
) ){

4345 
idx_rowid_c‹ru±i⁄
;

4349 
	`sqlôe3VdbeSîülGë
((
u8
*)&
m
.
z
[m.
n
-
ÀnRowid
], 
ty≥Rowid
, &
v
);

4350 *
rowid
 = 
v
.
u
.
i
;

4351 
	`sqlôe3VdbeMemRñó£
(&
m
);

4352  
SQLITE_OK
;

4356 
idx_rowid_c‹ru±i⁄
:

4357 
	`ã°ˇ£
–
m
.
szMÆloc
!=0 );

4358 
	`sqlôe3VdbeMemRñó£
(&
m
);

4359  
SQLITE_CORRUPT_BKPT
;

4360 
	}
}

4373 
	$sqlôe3VdbeIdxKeyCom∑ª
(

4374 
sqlôe3
 *
db
,

4375 
VdbeCurs‹
 *
pC
,

4376 
U≈ackedRec‹d
 *
pU≈acked
,

4377 *
ªs


4379 
i64
 
nCñlKey
 = 0;

4380 
rc
;

4381 
BtCurs‹
 *
pCur
;

4382 
Mem
 
m
;

4384 
	`as£π
–
pC
->
eCurTy≥
==
CURTYPE_BTREE
 );

4385 
pCur
 = 
pC
->
uc
.
pCurs‹
;

4386 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

4387 
nCñlKey
 = 
	`sqlôe3BåìPaylﬂdSize
(
pCur
);

4390 if–
nCñlKey
<=0 ||ÇCellKey>0x7fffffff ){

4391 *
ªs
 = 0;

4392  
SQLITE_CORRUPT_BKPT
;

4394 
	`sqlôe3VdbeMemInô
(&
m
, 
db
, 0);

4395 
rc
 = 
	`sqlôe3VdbeMemFromBåì
(
pCur
, 0, (
u32
)
nCñlKey
, 1, &
m
);

4396 if–
rc
 ){

4397  
rc
;

4399 *
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
m
.
n
, m.
z
, 
pU≈acked
);

4400 
	`sqlôe3VdbeMemRñó£
(&
m
);

4401  
SQLITE_OK
;

4402 
	}
}

4408 
	$sqlôe3VdbeSëCh™ges
(
sqlôe3
 *
db
, 
nCh™ge
){

4409 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

4410 
db
->
nCh™ge
 =ÇChange;

4411 
db
->
nTŸÆCh™ge
 +
nCh™ge
;

4412 
	}
}

4418 
	$sqlôe3VdbeCou¡Ch™ges
(
Vdbe
 *
v
){

4419 
v
->
ch™geC¡On
 = 1;

4420 
	}
}

4432 
	$sqlôe3ExpúePª∑ªdSèãmíts
(
sqlôe3
 *
db
){

4433 
Vdbe
 *
p
;

4434 
p
 = 
db
->
pVdbe
;Ö;Öı->
pNext
){

4435 
p
->
expúed
 = 1;

4437 
	}
}

4442 
sqlôe3
 *
	$sqlôe3VdbeDb
(
Vdbe
 *
v
){

4443  
v
->
db
;

4444 
	}
}

4454 
sqlôe3_vÆue
 *
	$sqlôe3VdbeGëBoundVÆue
(
Vdbe
 *
v
, 
iV¨
, 
u8
 
aff
){

4455 
	`as£π
–
iV¨
>0 );

4456 if–
v
 ){

4457 
Mem
 *
pMem
 = &
v
->
aV¨
[
iV¨
-1];

4458 if–0==(
pMem
->
Êags
 & 
MEM_NuŒ
) ){

4459 
sqlôe3_vÆue
 *
pRë
 = 
	`sqlôe3VÆueNew
(
v
->
db
);

4460 if–
pRë
 ){

4461 
	`sqlôe3VdbeMemC›y
((
Mem
 *)
pRë
, 
pMem
);

4462 
	`sqlôe3VÆueAµlyAfföôy
(
pRë
, 
aff
, 
SQLITE_UTF8
);

4464  
pRë
;

4468 
	}
}

4475 
	$sqlôe3VdbeSëV¨mask
(
Vdbe
 *
v
, 
iV¨
){

4476 
	`as£π
–
iV¨
>0 );

4477 if–
iV¨
>32 ){

4478 
v
->
expmask
 = 0xffffffff;

4480 
v
->
expmask
 |((
u32
)1 << (
iV¨
-1));

4482 
	}
}

4484 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4490 
	$sqlôe3VèbImp‹tEºmsg
(
Vdbe
 *
p
, 
sqlôe3_vèb
 *
pVèb
){

4491 if–
pVèb
->
zEºMsg
 ){

4492 
sqlôe3
 *
db
 = 
p
->db;

4493 
	`sqlôe3DbFªe
(
db
, 
p
->
zEºMsg
);

4494 
p
->
zEºMsg
 = 
	`sqlôe3DbSåDup
(
db
, 
pVèb
->zErrMsg);

4495 
	`sqlôe3_‰ì
(
pVèb
->
zEºMsg
);

4496 
pVèb
->
zEºMsg
 = 0;

4498 
	}
}

4501 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4511 
	$vdbeFªeU≈acked
(
sqlôe3
 *
db
, 
U≈ackedRec‹d
 *
p
){

4512 if–
p
 ){

4513 
i
;

4514 
i
=0; i<
p
->
nFõld
; i++){

4515 
Mem
 *
pMem
 = &
p
->
aMem
[
i
];

4516 if–
pMem
->
zMÆloc
 ) 
	`sqlôe3VdbeMemRñó£
(pMem);

4518 
	`sqlôe3DbFªe
(
db
, 
p
);

4520 
	}
}

4523 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


4530 
	$sqlôe3VdbePªUpd©eHook
(

4531 
Vdbe
 *
v
,

4532 
VdbeCurs‹
 *
pC§
,

4533 
›
,

4534 c⁄° *
zDb
,

4535 
TabÀ
 *
pTab
,

4536 
i64
 
iKey1
,

4537 
iReg


4539 
sqlôe3
 *
db
 = 
v
->db;

4540 
i64
 
iKey2
;

4541 
PªUpd©e
 
¥eupd©e
;

4542 c⁄° *
zTbl
 = 
pTab
->
zName
;

4543 c⁄° 
u8
 
ÁkeS‹tOrdî
 = 0;

4545 
	`as£π
–
db
->
pPªUpd©e
==0 );

4546 
	`mem£t
(&
¥eupd©e
, 0, (
PªUpd©e
));

4547 if–
›
==
SQLITE_UPDATE
 ){

4548 
iKey2
 = 
v
->
aMem
[
iReg
].
u
.
i
;

4550 
iKey2
 = 
iKey1
;

4553 
	`as£π
–
pC§
->
nFõld
==
pTab
->
nCﬁ


4554 || (
pC§
->
nFõld
==
pTab
->
nCﬁ
+1 && 
›
==
SQLITE_DELETE
 && 
iReg
==-1)

4557 
¥eupd©e
.
v
 = v;

4558 
¥eupd©e
.
pC§
 =ÖCsr;

4559 
¥eupd©e
.
›
 = op;

4560 
¥eupd©e
.
iNewReg
 = 
iReg
;

4561 
¥eupd©e
.
keyöfo
.
db
 = db;

4562 
¥eupd©e
.
keyöfo
.
íc
 = 
	`ENC
(
db
);

4563 
¥eupd©e
.
keyöfo
.
nFõld
 = 
pTab
->
nCﬁ
;

4564 
¥eupd©e
.
keyöfo
.
aS‹tOrdî
 = (
u8
*)&
ÁkeS‹tOrdî
;

4565 
¥eupd©e
.
iKey1
 = iKey1;

4566 
¥eupd©e
.
iKey2
 = iKey2;

4567 
¥eupd©e
.
iPKey
 = 
pTab
->iPKey;

4569 
db
->
pPªUpd©e
 = &
¥eupd©e
;

4570 
db
->
	`xPªUpd©eCÆlback
(db->
pPªUpd©eArg
, db, 
›
, 
zDb
, 
zTbl
, 
iKey1
, 
iKey2
);

4571 
db
->
pPªUpd©e
 = 0;

4572 
	`sqlôe3DbFªe
(
db
, 
¥eupd©e
.
aRec‹d
);

4573 
	`vdbeFªeU≈acked
(
db
, 
¥eupd©e
.
pU≈acked
);

4574 
	`vdbeFªeU≈acked
(
db
, 
¥eupd©e
.
pNewU≈acked
);

4575 if–
¥eupd©e
.
aNew
 ){

4576 
i
;

4577 
i
=0; i<
pC§
->
nFõld
; i++){

4578 
	`sqlôe3VdbeMemRñó£
(&
¥eupd©e
.
aNew
[
i
]);

4580 
	`sqlôe3DbFªe
(
db
, 
¥eupd©e
.
aNew
);

4582 
	}
}

	@vdbeblob.c

16 
	~"sqlôeI¡.h
"

17 
	~"vdbeI¡.h
"

19 #i‚de‡
SQLITE_OMIT_INCRBLOB


24 
In¸blob
 
	tIn¸blob
;

25 
	sIn¸blob
 {

26 
	mÊags
;

27 
	mnByã
;

28 
	miOff£t
;

29 
	miCﬁ
;

30 
BtCurs‹
 *
	mpC§
;

31 
sqlôe3_°mt
 *
	mpStmt
;

32 
sqlôe3
 *
	mdb
;

33 *
	mzDb
;

34 
TabÀ
 *
	mpTab
;

55 
	$blobSìkToRow
(
In¸blob
 *
p
, 
sqlôe3_öt64
 
iRow
, **
pzEº
){

56 
rc
;

57 *
zEº
 = 0;

58 
Vdbe
 *
v
 = (Vdbê*)
p
->
pStmt
;

64 
	`as£π
–
v
->
aV¨
[0].
Êags
&
MEM_I¡
 );

65 
v
->
aV¨
[0].
u
.
i
 = 
iRow
;

67 
rc
 = 
	`sqlôe3_°ï
(
p
->
pStmt
);

68 if–
rc
==
SQLITE_ROW
 ){

69 
VdbeCurs‹
 *
pC
 = 
v
->
≠C§
[0];

70 
u32
 
ty≥
 = 
pC
->
aTy≥
[
p
->
iCﬁ
];

71 if–
ty≥
<12 ){

72 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "cannot open value ofÅype %s",

73 
ty≥
==0?"null":Åype==7?"real": "integer"

75 
rc
 = 
SQLITE_ERROR
;

76 
	`sqlôe3_föÆize
(
p
->
pStmt
);

77 
p
->
pStmt
 = 0;

79 
p
->
iOff£t
 = 
pC
->
aTy≥
[p->
iCﬁ
 +ÖC->
nFõld
];

80 
p
->
nByã
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
ty≥
);

81 
p
->
pC§
 = 
pC
->
uc
.
pCurs‹
;

82 
	`sqlôe3BåìIn¸blobCurs‹
(
p
->
pC§
);

86 if–
rc
==
SQLITE_ROW
 ){

87 
rc
 = 
SQLITE_OK
;

88 }if–
p
->
pStmt
 ){

89 
rc
 = 
	`sqlôe3_föÆize
(
p
->
pStmt
);

90 
p
->
pStmt
 = 0;

91 if–
rc
==
SQLITE_OK
 ){

92 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "nÿsuchÑowid: %Œd", 
iRow
);

93 
rc
 = 
SQLITE_ERROR
;

95 
zEº
 = 
	`sqlôe3MPrötf
(
p
->
db
, "%s", 
	`sqlôe3_îrmsg
(p->db));

99 
	`as£π
–
rc
!=
SQLITE_OK
 || 
zEº
==0 );

100 
	`as£π
–
rc
!=
SQLITE_ROW
 &&Ñc!=
SQLITE_DONE
 );

102 *
pzEº
 = 
zEº
;

103  
rc
;

104 
	}
}

109 
	$sqlôe3_blob_›í
(

110 
sqlôe3
* 
db
,

111 c⁄° *
zDb
,

112 c⁄° *
zTabÀ
,

113 c⁄° *
zCﬁumn
,

114 
sqlôe_öt64
 
iRow
,

115 
Êags
,

116 
sqlôe3_blob
 **
µBlob


118 
nAâem±
 = 0;

119 
iCﬁ
;

120 
rc
 = 
SQLITE_OK
;

121 *
zEº
 = 0;

122 
TabÀ
 *
pTab
;

123 
P¨£
 *
pP¨£
 = 0;

124 
In¸blob
 *
pBlob
 = 0;

126 #ifde‡
SQLITE_ENABLE_API_ARMOR


127 if–
µBlob
==0 ){

128  
SQLITE_MISUSE_BKPT
;

131 *
µBlob
 = 0;

132 #ifde‡
SQLITE_ENABLE_API_ARMOR


133 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zTabÀ
==0 ){

134  
SQLITE_MISUSE_BKPT
;

137 
Êags
 = !!flags;

139 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

141 
pBlob
 = (
In¸blob
 *)
	`sqlôe3DbMÆlocZîo
(
db
, (Incrblob));

142 if–!
pBlob
 ) 
blob_›í_out
;

143 
pP¨£
 = 
	`sqlôe3SèckAŒocRaw
(
db
, (*pParse));

144 if–!
pP¨£
 ) 
blob_›í_out
;

147 
	`mem£t
(
pP¨£
, 0, (
P¨£
));

148 
pP¨£
->
db
 = db;

149 
	`sqlôe3DbFªe
(
db
, 
zEº
);

150 
zEº
 = 0;

152 
	`sqlôe3BåìE¡îAŒ
(
db
);

153 
pTab
 = 
	`sqlôe3LoˇãTabÀ
(
pP¨£
, 0, 
zTabÀ
, 
zDb
);

154 if–
pTab
 && 
	`IsVútuÆ
(pTab) ){

155 
pTab
 = 0;

156 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿vútuÆÅabÀ: %s", 
zTabÀ
);

158 if–
pTab
 && !
	`HasRowid
(pTab) ){

159 
pTab
 = 0;

160 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿èbÀ wôhouàrowid: %s", 
zTabÀ
);

162 #i‚de‡
SQLITE_OMIT_VIEW


163 if–
pTab
 &&ÖTab->
pSñe˘
 ){

164 
pTab
 = 0;

165 
	`sqlôe3Eº‹Msg
(
pP¨£
, "ˇ¬Ÿ o≥¿võw: %s", 
zTabÀ
);

168 if–!
pTab
 ){

169 if–
pP¨£
->
zEºMsg
 ){

170 
	`sqlôe3DbFªe
(
db
, 
zEº
);

171 
zEº
 = 
pP¨£
->
zEºMsg
;

172 
pP¨£
->
zEºMsg
 = 0;

174 
rc
 = 
SQLITE_ERROR
;

175 
	`sqlôe3BåìLóveAŒ
(
db
);

176 
blob_›í_out
;

178 
pBlob
->
pTab
 =ÖTab;

179 
pBlob
->
zDb
 = 
db
->
aDb
[
	`sqlôe3SchemaToIndex
(db, 
pTab
->
pSchema
)].
zName
;

182 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++) {

183 if–
	`sqlôe3SåICmp
(
pTab
->
aCﬁ
[
iCﬁ
].
zName
, 
zCﬁumn
)==0 ){

187 if–
iCﬁ
==
pTab
->
nCﬁ
 ){

188 
	`sqlôe3DbFªe
(
db
, 
zEº
);

189 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuch cﬁumn: \"%s\"", 
zCﬁumn
);

190 
rc
 = 
SQLITE_ERROR
;

191 
	`sqlôe3BåìLóveAŒ
(
db
);

192 
blob_›í_out
;

199 if–
Êags
 ){

200 c⁄° *
zFau…
 = 0;

201 
Index
 *
pIdx
;

202 #i‚de‡
SQLITE_OMIT_FOREIGN_KEY


203 if–
db
->
Êags
&
SQLITE_F‹eignKeys
 ){

208 
FKey
 *
pFKey
;

209 
pFKey
=
pTab
->pFKey;ÖFKey;ÖFKeyıFKey->
pNextFrom
){

210 
j
;

211 
j
=0; j<
pFKey
->
nCﬁ
; j++){

212 if–
pFKey
->
aCﬁ
[
j
].
iFrom
==
iCﬁ
 ){

213 
zFau…
 = "foreign key";

219 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

220 
j
;

221 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

223 if–
pIdx
->
aiCﬁumn
[
j
]==
iCﬁ
 ||ÖIdx->aiCﬁumn[j]==
XN_EXPR
 ){

224 
zFau…
 = "indexed";

228 if–
zFau…
 ){

229 
	`sqlôe3DbFªe
(
db
, 
zEº
);

230 
zEº
 = 
	`sqlôe3MPrötf
(
db
, "ˇ¬Ÿ o≥¿%†cﬁum¿f‹ wrôög", 
zFau…
);

231 
rc
 = 
SQLITE_ERROR
;

232 
	`sqlôe3BåìLóveAŒ
(
db
);

233 
blob_›í_out
;

237 
pBlob
->
pStmt
 = (
sqlôe3_°mt
 *)
	`sqlôe3VdbeCª©e
(
pP¨£
);

238 
	`as£π
–
pBlob
->
pStmt
 || 
db
->
mÆlocFaûed
 );

239 if–
pBlob
->
pStmt
 ){

256 c⁄° 
iLn
 = 
	`VDBE_OFFSET_LINENO
(2);

257 c⁄° 
VdbeOpLi°
 
›íBlob
[] = {

258 {
OP_TabÀLock
, 0, 0, 0},

259 {
OP_O≥nRód
, 0, 0, 0},

260 {
OP_V¨übÀ
, 1, 1, 0},

261 {
OP_NŸExi°s
, 0, 7, 1},

262 {
OP_Cﬁumn
, 0, 0, 1},

263 {
OP_Resu…Row
, 1, 0, 0},

264 {
OP_GŸo
, 0, 2, 0},

265 {
OP_Clo£
, 0, 0, 0},

266 {
OP_HÆt
, 0, 0, 0},

268 
Vdbe
 *
v
 = (Vdbê*)
pBlob
->
pStmt
;

269 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

270 
VdbeOp
 *
aOp
;

272 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Tønß˘i⁄
, 
iDb
, 
Êags
,

273 
pTab
->
pSchema
->
schema_cookõ
,

274 
pTab
->
pSchema
->
iGíî©i⁄
);

275 
	`sqlôe3VdbeCh™geP5
(
v
, 1);

276 
aOp
 = 
	`sqlôe3VdbeAddOpLi°
(
v
, 
	`AºaySize
(
›íBlob
), o≥nBlob, 
iLn
);

279 
	`sqlôe3VdbeU£sBåì
(
v
, 
iDb
);

281 if–
db
->
mÆlocFaûed
==0 ){

282 
	`as£π
–
aOp
!=0 );

284 #ifde‡
SQLITE_OMIT_SHARED_CACHE


285 
aOp
[0].
›code
 = 
OP_No›
;

287 
aOp
[0].
p1
 = 
iDb
;

288 
aOp
[0].
p2
 = 
pTab
->
äum
;

289 
aOp
[0].
p3
 = 
Êags
;

290 
	`sqlôe3VdbeCh™geP4
(
v
, 1, 
pTab
->
zName
, 
P4_TRANSIENT
);

292 if–
db
->
mÆlocFaûed
==0 ){

297 if–
Êags
 ) 
aOp
[1].
›code
 = 
OP_O≥nWrôe
;

298 
aOp
[1].
p2
 = 
pTab
->
äum
;

299 
aOp
[1].
p3
 = 
iDb
;

308 
aOp
[1].
p4ty≥
 = 
P4_INT32
;

309 
aOp
[1].
p4
.
i
 = 
pTab
->
nCﬁ
+1;

310 
aOp
[4].
p2
 = 
pTab
->
nCﬁ
;

312 
pP¨£
->
nV¨
 = 1;

313 
pP¨£
->
nMem
 = 1;

314 
pP¨£
->
nTab
 = 1;

315 
	`sqlôe3VdbeMakeRódy
(
v
, 
pP¨£
);

319 
pBlob
->
Êags
 = flags;

320 
pBlob
->
iCﬁ
 = iCol;

321 
pBlob
->
db
 = db;

322 
	`sqlôe3BåìLóveAŒ
(
db
);

323 if–
db
->
mÆlocFaûed
 ){

324 
blob_›í_out
;

326 
	`sqlôe3_böd_öt64
(
pBlob
->
pStmt
, 1, 
iRow
);

327 
rc
 = 
	`blobSìkToRow
(
pBlob
, 
iRow
, &
zEº
);

328 }  (++
nAâem±
)<
SQLITE_MAX_SCHEMA_RETRY
 && 
rc
==
SQLITE_SCHEMA
 );

330 
blob_›í_out
:

331 if–
rc
==
SQLITE_OK
 && 
db
->
mÆlocFaûed
==0 ){

332 *
µBlob
 = (
sqlôe3_blob
 *)
pBlob
;

334 if–
pBlob
 &&ÖBlob->
pStmt
 ) 
	`sqlôe3VdbeFöÆize
((
Vdbe
 *)pBlob->pStmt);

335 
	`sqlôe3DbFªe
(
db
, 
pBlob
);

337 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEº
 ? "%s" : 0), zErr);

338 
	`sqlôe3DbFªe
(
db
, 
zEº
);

339 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

340 
	`sqlôe3SèckFªe
(
db
, 
pP¨£
);

341 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

342 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

343  
rc
;

344 
	}
}

350 
	$sqlôe3_blob_˛o£
(
sqlôe3_blob
 *
pBlob
){

351 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

352 
rc
;

353 
sqlôe3
 *
db
;

355 if–
p
 ){

356 
db
 = 
p
->db;

357 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

358 
rc
 = 
	`sqlôe3_föÆize
(
p
->
pStmt
);

359 
	`sqlôe3DbFªe
(
db
, 
p
);

360 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

362 
rc
 = 
SQLITE_OK
;

364  
rc
;

365 
	}
}

370 
blobRódWrôe
(

371 
sqlôe3_blob
 *
pBlob
,

372 *
z
,

373 
n
,

374 
iOff£t
,

375 (*
xCÆl
)(
BtCurs‹
*, 
u32
, u32, *)

377 
rc
;

378 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

379 
Vdbe
 *
v
;

380 
sqlôe3
 *
db
;

382 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

383 
db
 = 
p
->db;

384 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

385 
v
 = (
Vdbe
*)
p
->
pStmt
;

387 if–
n
<0 || 
iOff£t
<0 || ((
sqlôe3_öt64
)iOff£t+n)>
p
->
nByã
 ){

389 
rc
 = 
SQLITE_ERROR
;

390 }if–
v
==0 ){

394 
rc
 = 
SQLITE_ABORT
;

399 
	`as£π
–
db
 =
v
->db );

400 
	`sqlôe3BåìE¡îCurs‹
(
p
->
pC§
);

402 #ifde‡
SQLITE_ENABLE_PREUPDATE_HOOK


403 if–
xCÆl
==
sqlôe3BåìPutD©a
 && 
db
->
xPªUpd©eCÆlback
 ){

417 
sqlôe3_öt64
 
iKey
;

418 
iKey
 = 
	`sqlôe3BåìI¡egîKey
(
p
->
pC§
);

419 
	`sqlôe3VdbePªUpd©eHook
(

420 
v
, v->
≠C§
[0], 
SQLITE_DELETE
, 
p
->
zDb
,Ö->
pTab
, 
iKey
, -1

425 
rc
 = 
	`xCÆl
(
p
->
pC§
, 
iOff£t
+p->iOff£t, 
n
, 
z
);

426 
	`sqlôe3BåìLóveCurs‹
(
p
->
pC§
);

427 if–
rc
==
SQLITE_ABORT
 ){

428 
	`sqlôe3VdbeFöÆize
(
v
);

429 
p
->
pStmt
 = 0;

431 
v
->
rc
 =Ñc;

434 
	`sqlôe3Eº‹
(
db
, 
rc
);

435 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

436 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

437  
rc
;

438 
	}
}

443 
	$sqlôe3_blob_ªad
(
sqlôe3_blob
 *
pBlob
, *
z
, 
n
, 
iOff£t
){

444  
	`blobRódWrôe
(
pBlob
, 
z
, 
n
, 
iOff£t
, 
sqlôe3BåìD©a
);

445 
	}
}

450 
	$sqlôe3_blob_wrôe
(
sqlôe3_blob
 *
pBlob
, c⁄° *
z
, 
n
, 
iOff£t
){

451  
	`blobRódWrôe
(
pBlob
, (*)
z
, 
n
, 
iOff£t
, 
sqlôe3BåìPutD©a
);

452 
	}
}

460 
	$sqlôe3_blob_byãs
(
sqlôe3_blob
 *
pBlob
){

461 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

462  (
p
 &&Ö->
pStmt
Ë?Ö->
nByã
 : 0;

463 
	}
}

475 
	$sqlôe3_blob_ª›í
(
sqlôe3_blob
 *
pBlob
, 
sqlôe3_öt64
 
iRow
){

476 
rc
;

477 
In¸blob
 *
p
 = (In¸blob *)
pBlob
;

478 
sqlôe3
 *
db
;

480 if–
p
==0 )  
SQLITE_MISUSE_BKPT
;

481 
db
 = 
p
->db;

482 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

484 if–
p
->
pStmt
==0 ){

488 
rc
 = 
SQLITE_ABORT
;

490 *
zEº
;

491 
rc
 = 
	`blobSìkToRow
(
p
, 
iRow
, &
zEº
);

492 if–
rc
!=
SQLITE_OK
 ){

493 
	`sqlôe3Eº‹WôhMsg
(
db
, 
rc
, (
zEº
 ? "%s" : 0), zErr);

494 
	`sqlôe3DbFªe
(
db
, 
zEº
);

496 
	`as£π
–
rc
!=
SQLITE_SCHEMA
 );

499 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

500 
	`as£π
–
rc
==
SQLITE_OK
 || 
p
->
pStmt
==0 );

501 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

502  
rc
;

503 
	}
}

	@vdbemem.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

21 #ifde‡
SQLITE_DEBUG


28 
	$sqlôe3VdbeCheckMemInv¨ü¡s
(
Mem
 *
p
){

32 
	`as£π
–(
p
->
Êags
 & 
MEM_Dyn
)==0 ||Ö->
xDñ
!=0 );

38 
	`as£π
–(
p
->
Êags
 & 
MEM_Dyn
)==0 ||Ö->
szMÆloc
==0 );

41 
	`as£π
–(
p
->
Êags
 & (
MEM_I¡
|
MEM_Ról
))!=(MEM_Int|MEM_Real) );

44 
	`as£π
–
p
->
szMÆloc
==0

45 || 
p
->
szMÆloc
==
	`sqlôe3DbMÆlocSize
’->
db
,p->
zMÆloc
) );

55 if–(
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
)Ë&&Ö->
n
>0 ){

56 
	`as£π
(

57 ((
p
->
szMÆloc
>0 &&Ö->
z
=ı->
zMÆloc
)? 1 : 0) +

58 ((
p
->
Êags
&
MEM_Dyn
)!=0 ? 1 : 0) +

59 ((
p
->
Êags
&
MEM_Ephem
)!=0 ? 1 : 0) +

60 ((
p
->
Êags
&
MEM_Sètic
)!=0 ? 1 : 0) == 1

64 
	}
}

81 
	$sqlôe3VdbeCh™geEncodög
(
Mem
 *
pMem
, 
desúedEnc
){

82 #i‚de‡
SQLITE_OMIT_UTF16


83 
rc
;

85 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

86 
	`as£π
–
desúedEnc
==
SQLITE_UTF8
 || desúedEnc==
SQLITE_UTF16LE


87 || 
desúedEnc
==
SQLITE_UTF16BE
 );

88 if–!(
pMem
->
Êags
&
MEM_Så
Ë||ÖMem->
íc
==
desúedEnc
 ){

89  
SQLITE_OK
;

91 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

92 #ifde‡
SQLITE_OMIT_UTF16


93  
SQLITE_ERROR
;

99 
rc
 = 
	`sqlôe3VdbeMemTøn¶©e
(
pMem
, (
u8
)
desúedEnc
);

100 
	`as£π
(
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_NOMEM
);

101 
	`as£π
(
rc
==
SQLITE_OK
 || 
pMem
->
íc
!=
desúedEnc
);

102 
	`as£π
(
rc
==
SQLITE_NOMEM
 || 
pMem
->
íc
==
desúedEnc
);

103  
rc
;

105 
	}
}

116 
SQLITE_NOINLINE
 
	$sqlôe3VdbeMemGrow
(
Mem
 *
pMem
, 
n
, 
bPª£rve
){

117 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
pMem
) );

118 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

119 
	`ã°ˇ£
–
pMem
->
db
==0 );

123 
	`as£π
–
bPª£rve
==0 || 
pMem
->
Êags
&(
MEM_Blob
|
MEM_Så
) );

124 
	`ã°ˇ£
–
bPª£rve
 && 
pMem
->
z
==0 );

126 
	`as£π
–
pMem
->
szMÆloc
==0

127 || 
pMem
->
szMÆloc
==
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
) );

128 if–
pMem
->
szMÆloc
<
n
 ){

129 if–
n
<32 )Ç = 32;

130 if–
bPª£rve
 && 
pMem
->
szMÆloc
>0 &&ÖMem->
z
=ıMem->
zMÆloc
 ){

131 
pMem
->
z
 =ÖMem->
zMÆloc
 = 
	`sqlôe3DbRóŒocOrFªe
’Mem->
db
,ÖMem->z, 
n
);

132 
bPª£rve
 = 0;

134 if–
pMem
->
szMÆloc
>0 ) 
	`sqlôe3DbFªe
’Mem->
db
,ÖMem->
zMÆloc
);

135 
pMem
->
zMÆloc
 = 
	`sqlôe3DbMÆlocRaw
’Mem->
db
, 
n
);

137 if–
pMem
->
zMÆloc
==0 ){

138 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

139 
pMem
->
z
 = 0;

140 
pMem
->
szMÆloc
 = 0;

141  
SQLITE_NOMEM_BKPT
;

143 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
);

147 if–
bPª£rve
 && 
pMem
->
z
 &&ÖMem->z!ıMem->
zMÆloc
 ){

148 
	`mem˝y
(
pMem
->
zMÆloc
,ÖMem->
z
,ÖMem->
n
);

150 if–(
pMem
->
Êags
&
MEM_Dyn
)!=0 ){

151 
	`as£π
–
pMem
->
xDñ
!=0 &&ÖMem->xDñ!=
SQLITE_DYNAMIC
 );

152 
pMem
->
	`xDñ
((*)’Mem->
z
));

155 
pMem
->
z
 =ÖMem->
zMÆloc
;

156 
pMem
->
Êags
 &~(
MEM_Dyn
|
MEM_Ephem
|
MEM_Sètic
);

157  
SQLITE_OK
;

158 
	}
}

173 
	$sqlôe3VdbeMemCÀ¨AndResize
(
Mem
 *
pMem
, 
szNew
){

174 
	`as£π
–
szNew
>0 );

175 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 ||ÖMem->
szMÆloc
==0 );

176 if–
pMem
->
szMÆloc
<
szNew
 ){

177  
	`sqlôe3VdbeMemGrow
(
pMem
, 
szNew
, 0);

179 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 );

180 
pMem
->
z
 =ÖMem->
zMÆloc
;

181 
pMem
->
Êags
 &(
MEM_NuŒ
|
MEM_I¡
|
MEM_Ról
);

182  
SQLITE_OK
;

183 
	}
}

191 
	$sqlôe3VdbeMemMakeWrôóbÀ
(
Mem
 *
pMem
){

192 
f
;

193 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

194 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

195 
	`Ex∑ndBlob
(
pMem
);

196 
f
 = 
pMem
->
Êags
;

197 if–(
f
&(
MEM_Så
|
MEM_Blob
)Ë&& (
pMem
->
szMÆloc
==0 ||ÖMem->
z
!ıMem->
zMÆloc
) ){

198 if–
	`sqlôe3VdbeMemGrow
(
pMem
,ÖMem->
n
 + 2, 1) ){

199  
SQLITE_NOMEM_BKPT
;

201 
pMem
->
z
[pMem->
n
] = 0;

202 
pMem
->
z
[pMem->
n
+1] = 0;

203 
pMem
->
Êags
 |
MEM_Tîm
;

205 
pMem
->
Êags
 &~
MEM_Ephem
;

206 #ifde‡
SQLITE_DEBUG


207 
pMem
->
pSc›yFrom
 = 0;

210  
SQLITE_OK
;

211 
	}
}

217 #i‚de‡
SQLITE_OMIT_INCRBLOB


218 
	$sqlôe3VdbeMemEx∑ndBlob
(
Mem
 *
pMem
){

219 if–
pMem
->
Êags
 & 
MEM_Zîo
 ){

220 
nByã
;

221 
	`as£π
–
pMem
->
Êags
&
MEM_Blob
 );

222 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

223 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

226 
nByã
 = 
pMem
->
n
 +ÖMem->
u
.
nZîo
;

227 if–
nByã
<=0 ){

228 
nByã
 = 1;

230 if–
	`sqlôe3VdbeMemGrow
(
pMem
, 
nByã
, 1) ){

231  
SQLITE_NOMEM_BKPT
;

234 
	`mem£t
(&
pMem
->
z
[pMem->
n
], 0,ÖMem->
u
.
nZîo
);

235 
pMem
->
n
 +pMem->
u
.
nZîo
;

236 
pMem
->
Êags
 &~(
MEM_Zîo
|
MEM_Tîm
);

238  
SQLITE_OK
;

239 
	}
}

246 
SQLITE_NOINLINE
 
	$vdbeMemAddTîmö©‹
(
Mem
 *
pMem
){

247 if–
	`sqlôe3VdbeMemGrow
(
pMem
,ÖMem->
n
+2, 1) ){

248  
SQLITE_NOMEM_BKPT
;

250 
pMem
->
z
[pMem->
n
] = 0;

251 
pMem
->
z
[pMem->
n
+1] = 0;

252 
pMem
->
Êags
 |
MEM_Tîm
;

253  
SQLITE_OK
;

254 
	}
}

259 
	$sqlôe3VdbeMemNulTîmö©e
(
Mem
 *
pMem
){

260 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

261 
	`ã°ˇ£
–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))==(MEM_Term|MEM_Str) );

262 
	`ã°ˇ£
–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))==0 );

263 if–(
pMem
->
Êags
 & (
MEM_Tîm
|
MEM_Så
))!=MEM_Str ){

264  
SQLITE_OK
;

266  
	`vdbeMemAddTîmö©‹
(
pMem
);

268 
	}
}

284 
	$sqlôe3VdbeMemSåögify
(
Mem
 *
pMem
, 
u8
 
íc
, u8 
bF‹˚
){

285 
fg
 = 
pMem
->
Êags
;

286 c⁄° 
nByã
 = 32;

288 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

289 
	`as£π
–!(
fg
&
MEM_Zîo
) );

290 
	`as£π
–!(
fg
&(
MEM_Så
|
MEM_Blob
)) );

291 
	`as£π
–
fg
&(
MEM_I¡
|
MEM_Ról
) );

292 
	`as£π
–(
pMem
->
Êags
&
MEM_RowSë
)==0 );

293 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

296 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
nByã
) ){

297  
SQLITE_NOMEM_BKPT
;

306 if–
fg
 & 
MEM_I¡
 ){

307 
	`sqlôe3_¢¥ötf
(
nByã
, 
pMem
->
z
, "%Œd",ÖMem->
u
.
i
);

309 
	`as£π
–
fg
 & 
MEM_Ról
 );

310 
	`sqlôe3_¢¥ötf
(
nByã
, 
pMem
->
z
, "%!.15g",ÖMem->
u
.
r
);

312 
pMem
->
n
 = 
	`sqlôe3SåÀn30
’Mem->
z
);

313 
pMem
->
íc
 = 
SQLITE_UTF8
;

314 
pMem
->
Êags
 |
MEM_Så
|
MEM_Tîm
;

315 if–
bF‹˚
 ) 
pMem
->
Êags
 &~(
MEM_I¡
|
MEM_Ról
);

316 
	`sqlôe3VdbeCh™geEncodög
(
pMem
, 
íc
);

317  
SQLITE_OK
;

318 
	}
}

328 
	$sqlôe3VdbeMemFöÆize
(
Mem
 *
pMem
, 
FuncDef
 *
pFunc
){

329 
rc
 = 
SQLITE_OK
;

330 if–
	`ALWAYS
(
pFunc
 &&ÖFunc->
xFöÆize
) ){

331 
sqlôe3_c⁄ãxt
 
˘x
;

332 
Mem
 
t
;

333 
	`as£π
–(
pMem
->
Êags
 & 
MEM_NuŒ
)!=0 || 
pFunc
=ıMem->
u
.
pDef
 );

334 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

335 
	`mem£t
(&
˘x
, 0, (ctx));

336 
	`mem£t
(&
t
, 0, (t));

337 
t
.
Êags
 = 
MEM_NuŒ
;

338 
t
.
db
 = 
pMem
->db;

339 
˘x
.
pOut
 = &
t
;

340 
˘x
.
pMem
 =ÖMem;

341 
˘x
.
pFunc
 =ÖFunc;

342 
pFunc
->
	`xFöÆize
(&
˘x
);

343 
	`as£π
–(
pMem
->
Êags
 & 
MEM_Dyn
)==0 );

344 if–
pMem
->
szMÆloc
>0 ) 
	`sqlôe3DbFªe
’Mem->
db
,ÖMem->
zMÆloc
);

345 
	`mem˝y
(
pMem
, &
t
, (t));

346 
rc
 = 
˘x
.
isEº‹
;

348  
rc
;

349 
	}
}

360 
SQLITE_NOINLINE
 
	$vdbeMemCÀ¨Exã∫AndSëNuŒ
(
Mem
 *
p
){

361 
	`as£π
–
p
->
db
==0 || 
	`sqlôe3_muãx_hñd
’->db->
muãx
) );

362 
	`as£π
–
	`VdbeMemDy«mic
(
p
) );

363 if–
p
->
Êags
&
MEM_Agg
 ){

364 
	`sqlôe3VdbeMemFöÆize
(
p
,Ö->
u
.
pDef
);

365 
	`as£π
–(
p
->
Êags
 & 
MEM_Agg
)==0 );

366 
	`ã°ˇ£
–
p
->
Êags
 & 
MEM_Dyn
 );

368 if–
p
->
Êags
&
MEM_Dyn
 ){

369 
	`as£π
–(
p
->
Êags
&
MEM_RowSë
)==0 );

370 
	`as£π
–
p
->
xDñ
!=
SQLITE_DYNAMIC
 &&Ö->xDel!=0 );

371 
p
->
	`xDñ
((*Ì->
z
);

372 }if–
p
->
Êags
&
MEM_RowSë
 ){

373 
	`sqlôe3RowSëCÀ¨
(
p
->
u
.
pRowSë
);

374 }if–
p
->
Êags
&
MEM_Føme
 ){

375 
VdbeFøme
 *
pFøme
 = 
p
->
u
.pFrame;

376 
pFøme
->
pP¨ít
 =ÖFøme->
v
->
pDñFøme
;

377 
pFøme
->
v
->
pDñFøme
 =ÖFrame;

379 
p
->
Êags
 = 
MEM_NuŒ
;

380 
	}
}

390 
SQLITE_NOINLINE
 
	$vdbeMemCÀ¨
(
Mem
 *
p
){

391 if–
	`VdbeMemDy«mic
(
p
) ){

392 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
p
);

394 if–
p
->
szMÆloc
 ){

395 
	`sqlôe3DbFªe
(
p
->
db
,Ö->
zMÆloc
);

396 
p
->
szMÆloc
 = 0;

398 
p
->
z
 = 0;

399 
	}
}

411 
	$sqlôe3VdbeMemRñó£
(
Mem
 *
p
){

412 
	`as£π
–
	`sqlôe3VdbeCheckMemInv¨ü¡s
(
p
) );

413 if–
	`VdbeMemDy«mic
(
p
Ë||Ö->
szMÆloc
 ){

414 
	`vdbeMemCÀ¨
(
p
);

416 
	}
}

423 
i64
 
	$doubÀToI¡64
(
r
){

424 #ifde‡
SQLITE_OMIT_FLOATING_POINT


426  
r
;

435 c⁄° 
i64
 
maxI¡
 = 
LARGEST_INT64
;

436 c⁄° 
i64
 
möI¡
 = 
SMALLEST_INT64
;

438 if–
r
<=()
möI¡
 ){

439  
möI¡
;

440 }if–
r
>=()
maxI¡
 ){

441  
maxI¡
;

443  (
i64
)
r
;

446 
	}
}

459 
i64
 
	$sqlôe3VdbeI¡VÆue
(
Mem
 *
pMem
){

460 
Êags
;

461 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

462 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

463 
Êags
 = 
pMem
->flags;

464 if–
Êags
 & 
MEM_I¡
 ){

465  
pMem
->
u
.
i
;

466 }if–
Êags
 & 
MEM_Ról
 ){

467  
	`doubÀToI¡64
(
pMem
->
u
.
r
);

468 }if–
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

469 
i64
 
vÆue
 = 0;

470 
	`as£π
–
pMem
->
z
 ||ÖMem->
n
==0 );

471 
	`sqlôe3Atoi64
(
pMem
->
z
, &
vÆue
,ÖMem->
n
,ÖMem->
íc
);

472  
vÆue
;

476 
	}
}

484 
	$sqlôe3VdbeRólVÆue
(
Mem
 *
pMem
){

485 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

486 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

487 if–
pMem
->
Êags
 & 
MEM_Ról
 ){

488  
pMem
->
u
.
r
;

489 }if–
pMem
->
Êags
 & 
MEM_I¡
 ){

490  ()
pMem
->
u
.
i
;

491 }if–
pMem
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

493 
vÆ
 = ()0;

494 
	`sqlôe3AtoF
(
pMem
->
z
, &
vÆ
,ÖMem->
n
,ÖMem->
íc
);

495  
vÆ
;

500 
	}
}

506 
	$sqlôe3VdbeI¡egîAfföôy
(
Mem
 *
pMem
){

507 
i64
 
ix
;

508 
	`as£π
–
pMem
->
Êags
 & 
MEM_Ról
 );

509 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

510 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

511 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

513 
ix
 = 
	`doubÀToI¡64
(
pMem
->
u
.
r
);

525 if–
pMem
->
u
.
r
==
ix
 && ix>
SMALLEST_INT64
 && ix<
LARGEST_INT64
 ){

526 
pMem
->
u
.
i
 = 
ix
;

527 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

529 
	}
}

534 
	$sqlôe3VdbeMemI¡egîify
(
Mem
 *
pMem
){

535 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

536 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

537 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

539 
pMem
->
u
.
i
 = 
	`sqlôe3VdbeI¡VÆue
(pMem);

540 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

541  
SQLITE_OK
;

542 
	}
}

548 
	$sqlôe3VdbeMemRólify
(
Mem
 *
pMem
){

549 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

550 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
pMem
) );

552 
pMem
->
u
.
r
 = 
	`sqlôe3VdbeRólVÆue
(pMem);

553 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_Ról
);

554  
SQLITE_OK
;

555 
	}
}

565 
	$sqlôe3VdbeMemNumîify
(
Mem
 *
pMem
){

566 if–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_NuŒ
))==0 ){

567 
	`as£π
–(
pMem
->
Êags
 & (
MEM_Blob
|
MEM_Så
))!=0 );

568 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

569 if–0==
	`sqlôe3Atoi64
(
pMem
->
z
, &pMem->
u
.
i
,ÖMem->
n
,ÖMem->
íc
) ){

570 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_I¡
);

572 
pMem
->
u
.
r
 = 
	`sqlôe3VdbeRólVÆue
(pMem);

573 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_Ról
);

574 
	`sqlôe3VdbeI¡egîAfföôy
(
pMem
);

577 
	`as£π
–(
pMem
->
Êags
 & (
MEM_I¡
|
MEM_Ról
|
MEM_NuŒ
))!=0 );

578 
pMem
->
Êags
 &~(
MEM_Så
|
MEM_Blob
);

579  
SQLITE_OK
;

580 
	}
}

589 
	$sqlôe3VdbeMemCa°
(
Mem
 *
pMem
, 
u8
 
aff
, u8 
ícodög
){

590 if–
pMem
->
Êags
 & 
MEM_NuŒ
 ) ;

591  
aff
 ){

592 
SQLITE_AFF_BLOB
: {

593 if–(
pMem
->
Êags
 & 
MEM_Blob
)==0 ){

594 
	`sqlôe3VÆueAµlyAfföôy
(
pMem
, 
SQLITE_AFF_TEXT
, 
ícodög
);

595 
	`as£π
–
pMem
->
Êags
 & 
MEM_Så
 ||ÖMem->
db
->
mÆlocFaûed
 );

596 
	`MemSëTy≥Fœg
(
pMem
, 
MEM_Blob
);

598 
pMem
->
Êags
 &~(
MEM_Ty≥Mask
&~
MEM_Blob
);

602 
SQLITE_AFF_NUMERIC
: {

603 
	`sqlôe3VdbeMemNumîify
(
pMem
);

606 
SQLITE_AFF_INTEGER
: {

607 
	`sqlôe3VdbeMemI¡egîify
(
pMem
);

610 
SQLITE_AFF_REAL
: {

611 
	`sqlôe3VdbeMemRólify
(
pMem
);

615 
	`as£π
–
aff
==
SQLITE_AFF_TEXT
 );

616 
	`as£π
–
MEM_Så
==(
MEM_Blob
>>3) );

617 
pMem
->
Êags
 |’Mem->Êags&
MEM_Blob
)>>3;

618 
	`sqlôe3VÆueAµlyAfföôy
(
pMem
, 
SQLITE_AFF_TEXT
, 
ícodög
);

619 
	`as£π
–
pMem
->
Êags
 & 
MEM_Så
 ||ÖMem->
db
->
mÆlocFaûed
 );

620 
pMem
->
Êags
 &~(
MEM_I¡
|
MEM_Ról
|
MEM_Blob
|
MEM_Zîo
);

624 
	}
}

631 
	$sqlôe3VdbeMemInô
(
Mem
 *
pMem
, 
sqlôe3
 *
db
, 
u16
 
Êags
){

632 
	`as£π
–(
Êags
 & ~
MEM_Ty≥Mask
)==0 );

633 
pMem
->
Êags
 = flags;

634 
pMem
->
db
 = db;

635 
pMem
->
szMÆloc
 = 0;

636 
	}
}

651 
	$sqlôe3VdbeMemSëNuŒ
(
Mem
 *
pMem
){

652 if–
	`VdbeMemDy«mic
(
pMem
) ){

653 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
pMem
);

655 
pMem
->
Êags
 = 
MEM_NuŒ
;

657 
	}
}

658 
	$sqlôe3VÆueSëNuŒ
(
sqlôe3_vÆue
 *
p
){

659 
	`sqlôe3VdbeMemSëNuŒ
((
Mem
*)
p
);

660 
	}
}

666 
	$sqlôe3VdbeMemSëZîoBlob
(
Mem
 *
pMem
, 
n
){

667 
	`sqlôe3VdbeMemRñó£
(
pMem
);

668 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Zîo
;

669 
pMem
->
n
 = 0;

670 if–
n
<0 )Ç = 0;

671 
pMem
->
u
.
nZîo
 = 
n
;

672 
pMem
->
íc
 = 
SQLITE_UTF8
;

673 
pMem
->
z
 = 0;

674 
	}
}

681 
SQLITE_NOINLINE
 
	$vdbeRñó£AndSëI¡64
(
Mem
 *
pMem
, 
i64
 
vÆ
){

682 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

683 
pMem
->
u
.
i
 = 
vÆ
;

684 
pMem
->
Êags
 = 
MEM_I¡
;

685 
	}
}

691 
	$sqlôe3VdbeMemSëI¡64
(
Mem
 *
pMem
, 
i64
 
vÆ
){

692 if–
	`VdbeMemDy«mic
(
pMem
) ){

693 
	`vdbeRñó£AndSëI¡64
(
pMem
, 
vÆ
);

695 
pMem
->
u
.
i
 = 
vÆ
;

696 
pMem
->
Êags
 = 
MEM_I¡
;

698 
	}
}

700 #i‚de‡
SQLITE_OMIT_FLOATING_POINT


705 
	$sqlôe3VdbeMemSëDoubÀ
(
Mem
 *
pMem
, 
vÆ
){

706 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

707 if–!
	`sqlôe3IsNaN
(
vÆ
) ){

708 
pMem
->
u
.
r
 = 
vÆ
;

709 
pMem
->
Êags
 = 
MEM_Ról
;

711 
	}
}

718 
	$sqlôe3VdbeMemSëRowSë
(
Mem
 *
pMem
){

719 
sqlôe3
 *
db
 = 
pMem
->db;

720 
	`as£π
–
db
!=0 );

721 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

722 
	`sqlôe3VdbeMemRñó£
(
pMem
);

723 
pMem
->
zMÆloc
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 64);

724 if–
db
->
mÆlocFaûed
 ){

725 
pMem
->
Êags
 = 
MEM_NuŒ
;

726 
pMem
->
szMÆloc
 = 0;

728 
	`as£π
–
pMem
->
zMÆloc
 );

729 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
(
db
,ÖMem->
zMÆloc
);

730 
pMem
->
u
.
pRowSë
 = 
	`sqlôe3RowSëInô
(
db
,ÖMem->
zMÆloc
,ÖMem->
szMÆloc
);

731 
	`as£π
–
pMem
->
u
.
pRowSë
!=0 );

732 
pMem
->
Êags
 = 
MEM_RowSë
;

734 
	}
}

740 
	$sqlôe3VdbeMemTooBig
(
Mem
 *
p
){

741 
	`as£π
–
p
->
db
!=0 );

742 if–
p
->
Êags
 & (
MEM_Så
|
MEM_Blob
) ){

743 
n
 = 
p
->n;

744 if–
p
->
Êags
 & 
MEM_Zîo
 ){

745 
n
 +
p
->
u
.
nZîo
;

747  
n
>
p
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

750 
	}
}

752 #ifde‡
SQLITE_DEBUG


761 
	$sqlôe3VdbeMemAboutToCh™ge
(
Vdbe
 *
pVdbe
, 
Mem
 *
pMem
){

762 
i
;

763 
Mem
 *
pX
;

764 
i
=0, 
pX
=
pVdbe
->
aMem
; i<pVdbe->
nMem
; i++,ÖX++){

765 if–
pX
->
pSc›yFrom
==
pMem
 ){

766 
pX
->
Êags
 |
MEM_Undeföed
;

767 
pX
->
pSc›yFrom
 = 0;

770 
pMem
->
pSc›yFrom
 = 0;

771 
	}
}

781 
SQLITE_NOINLINE
 
	$vdbeCÃC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
, 
eTy≥
){

782 
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(
pTo
);

783 
	`as£π
–!
	`VdbeMemDy«mic
(
pTo
) );

784 
	`sqlôe3VdbeMemShÆlowC›y
(
pTo
, 
pFrom
, 
eTy≥
);

785 
	}
}

786 
	$sqlôe3VdbeMemShÆlowC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
, 
§cTy≥
){

787 
	`as£π
–(
pFrom
->
Êags
 & 
MEM_RowSë
)==0 );

788 
	`as£π
–
pTo
->
db
==
pFrom
->db );

789 if–
	`VdbeMemDy«mic
(
pTo
Ë){ 
	`vdbeCÃC›y
’To,
pFrom
,
§cTy≥
); ; }

790 
	`mem˝y
(
pTo
, 
pFrom
, 
MEMCELLSIZE
);

791 if–(
pFrom
->
Êags
&
MEM_Sètic
)==0 ){

792 
pTo
->
Êags
 &~(
MEM_Dyn
|
MEM_Sètic
|
MEM_Ephem
);

793 
	`as£π
–
§cTy≥
==
MEM_Ephem
 || srcTy≥==
MEM_Sètic
 );

794 
pTo
->
Êags
 |
§cTy≥
;

796 
	}
}

802 
	$sqlôe3VdbeMemC›y
(
Mem
 *
pTo
, c⁄° Mem *
pFrom
){

803 
rc
 = 
SQLITE_OK
;

805 
	`as£π
–(
pFrom
->
Êags
 & 
MEM_RowSë
)==0 );

806 if–
	`VdbeMemDy«mic
(
pTo
ËË
	`vdbeMemCÀ¨Exã∫AndSëNuŒ
(pTo);

807 
	`mem˝y
(
pTo
, 
pFrom
, 
MEMCELLSIZE
);

808 
pTo
->
Êags
 &~
MEM_Dyn
;

809 if–
pTo
->
Êags
&(
MEM_Så
|
MEM_Blob
) ){

810 if–0==(
pFrom
->
Êags
&
MEM_Sètic
) ){

811 
pTo
->
Êags
 |
MEM_Ephem
;

812 
rc
 = 
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pTo
);

816  
rc
;

817 
	}
}

825 
	$sqlôe3VdbeMemMove
(
Mem
 *
pTo
, Mem *
pFrom
){

826 
	`as£π
–
pFrom
->
db
==0 || 
	`sqlôe3_muãx_hñd
’From->db->
muãx
) );

827 
	`as£π
–
pTo
->
db
==0 || 
	`sqlôe3_muãx_hñd
’To->db->
muãx
) );

828 
	`as£π
–
pFrom
->
db
==0 || 
pTo
->db==0 ||ÖFrom->db==pTo->db );

830 
	`sqlôe3VdbeMemRñó£
(
pTo
);

831 
	`mem˝y
(
pTo
, 
pFrom
, (
Mem
));

832 
pFrom
->
Êags
 = 
MEM_NuŒ
;

833 
pFrom
->
szMÆloc
 = 0;

834 
	}
}

851 
sqlôe3VdbeMemSëSå
(

852 
Mem
 *
pMem
,

853 c⁄° *
z
,

854 
n
,

855 
u8
 
íc
,

856 (*
xDñ
)(*)

858 
nByã
 = 
n
;

859 
iLimô
;

860 
u16
 
Êags
 = 0;

862 
	`as£π
–
pMem
->
db
==0 || 
	`sqlôe3_muãx_hñd
’Mem->db->
muãx
) );

863 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

866 if–!
z
 ){

867 
	`sqlôe3VdbeMemSëNuŒ
(
pMem
);

868  
SQLITE_OK
;

871 if–
pMem
->
db
 ){

872 
iLimô
 = 
pMem
->
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
];

874 
iLimô
 = 
SQLITE_MAX_LENGTH
;

876 
Êags
 = (
íc
==0?
MEM_Blob
:
MEM_Så
);

877 if–
nByã
<0 ){

878 
	`as£π
–
íc
!=0 );

879 if–
íc
==
SQLITE_UTF8
 ){

880 
nByã
 = 
	`sqlôe3SåÀn30
(
z
);

881 if–
nByã
>
iLimô
 )ÇByte = iLimit+1;

883 
nByã
=0;ÇByã<=
iLimô
 && (
z
[nByte] | z[nByte+1]);ÇByte+=2){}

885 
Êags
 |
MEM_Tîm
;

892 if–
xDñ
==
SQLITE_TRANSIENT
 ){

893 
nAŒoc
 = 
nByã
;

894 if–
Êags
&
MEM_Tîm
 ){

895 
nAŒoc
 +(
íc
==
SQLITE_UTF8
?1:2);

897 if–
nByã
>
iLimô
 ){

898  
SQLITE_TOOBIG
;

900 
	`ã°ˇ£
–
nAŒoc
==0 );

901 
	`ã°ˇ£
–
nAŒoc
==31 );

902 
	`ã°ˇ£
–
nAŒoc
==32 );

903 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
	`MAX
(
nAŒoc
,32)) ){

904  
SQLITE_NOMEM_BKPT
;

906 
	`mem˝y
(
pMem
->
z
, z, 
nAŒoc
);

907 }if–
xDñ
==
SQLITE_DYNAMIC
 ){

908 
	`sqlôe3VdbeMemRñó£
(
pMem
);

909 
pMem
->
zMÆloc
 =ÖMem->
z
 = (*)z;

910 
pMem
->
szMÆloc
 = 
	`sqlôe3DbMÆlocSize
’Mem->
db
,ÖMem->
zMÆloc
);

912 
	`sqlôe3VdbeMemRñó£
(
pMem
);

913 
pMem
->
z
 = (*)z;

914 
pMem
->
xDñ
 = xDel;

915 
Êags
 |((
xDñ
==
SQLITE_STATIC
)?
MEM_Sètic
:
MEM_Dyn
);

918 
pMem
->
n
 = 
nByã
;

919 
pMem
->
Êags
 = flags;

920 
pMem
->
íc
 = (íc==0 ? 
SQLITE_UTF8
 :Énc);

922 #i‚de‡
SQLITE_OMIT_UTF16


923 if–
pMem
->
íc
!=
SQLITE_UTF8
 && 
	`sqlôe3VdbeMemH™dÀBom
(pMem) ){

924  
SQLITE_NOMEM_BKPT
;

928 if–
nByã
>
iLimô
 ){

929  
SQLITE_TOOBIG
;

932  
SQLITE_OK
;

933 
	}
}

951 
SQLITE_NOINLINE
 
	$vdbeMemFromBåìResize
(

952 
BtCurs‹
 *
pCur
,

953 
u32
 
off£t
,

954 
u32
 
amt
,

955 
key
,

956 
Mem
 *
pMem


958 
rc
;

959 
pMem
->
Êags
 = 
MEM_NuŒ
;

960 if–
SQLITE_OK
==(
rc
 = 
	`sqlôe3VdbeMemCÀ¨AndResize
(
pMem
, 
amt
+2)) ){

961 if–
key
 ){

962 
rc
 = 
	`sqlôe3BåìKey
(
pCur
, 
off£t
, 
amt
, 
pMem
->
z
);

964 
rc
 = 
	`sqlôe3BåìD©a
(
pCur
, 
off£t
, 
amt
, 
pMem
->
z
);

966 if–
rc
==
SQLITE_OK
 ){

967 
pMem
->
z
[
amt
] = 0;

968 
pMem
->
z
[
amt
+1] = 0;

969 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Tîm
;

970 
pMem
->
n
 = ()
amt
;

972 
	`sqlôe3VdbeMemRñó£
(
pMem
);

975  
rc
;

976 
	}
}

977 
	$sqlôe3VdbeMemFromBåì
(

978 
BtCurs‹
 *
pCur
,

979 
u32
 
off£t
,

980 
u32
 
amt
,

981 
key
,

982 
Mem
 *
pMem


984 *
zD©a
;

985 
u32
 
avaûabÀ
 = 0;

986 
rc
 = 
SQLITE_OK
;

988 
	`as£π
–
	`sqlôe3BåìCurs‹IsVÆid
(
pCur
) );

989 
	`as£π
–!
	`VdbeMemDy«mic
(
pMem
) );

993 
	`as£π
–(
pMem
->
Êags
 & 
MEM_RowSë
)==0 );

994 
zD©a
 = (*)
	`sqlôe3BåìPaylﬂdFëch
(
pCur
, &
avaûabÀ
);

995 
	`as£π
–
zD©a
!=0 );

997 if–
off£t
+
amt
<=
avaûabÀ
 ){

998 
pMem
->
z
 = &
zD©a
[
off£t
];

999 
pMem
->
Êags
 = 
MEM_Blob
|
MEM_Ephem
;

1000 
pMem
->
n
 = ()
amt
;

1002 
rc
 = 
	`vdbeMemFromBåìResize
(
pCur
, 
off£t
, 
amt
, 
key
, 
pMem
);

1005  
rc
;

1006 
	}
}

1013 
SQLITE_NOINLINE
 c⁄° *
	$vÆueToText
(
sqlôe3_vÆue
* 
pVÆ
, 
u8
 
íc
){

1014 
	`as£π
–
pVÆ
!=0 );

1015 
	`as£π
–
pVÆ
->
db
==0 || 
	`sqlôe3_muãx_hñd
’VÆ->db->
muãx
) );

1016 
	`as£π
–(
íc
&3)==”nc&~
SQLITE_UTF16_ALIGNED
) );

1017 
	`as£π
–(
pVÆ
->
Êags
 & 
MEM_RowSë
)==0 );

1018 
	`as£π
–(
pVÆ
->
Êags
 & (
MEM_NuŒ
))==0 );

1019 if–
pVÆ
->
Êags
 & (
MEM_Blob
|
MEM_Så
) ){

1020 
pVÆ
->
Êags
 |
MEM_Så
;

1021 if–
pVÆ
->
Êags
 & 
MEM_Zîo
 ){

1022 
	`sqlôe3VdbeMemEx∑ndBlob
(
pVÆ
);

1024 if–
pVÆ
->
íc
 !”n¯& ~
SQLITE_UTF16_ALIGNED
) ){

1025 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
 & ~
SQLITE_UTF16_ALIGNED
);

1027 if–(
íc
 & 
SQLITE_UTF16_ALIGNED
)!=0 && 1==(1&
	`SQLITE_PTR_TO_INT
(
pVÆ
->
z
)) ){

1028 
	`as£π
–(
pVÆ
->
Êags
 & (
MEM_Ephem
|
MEM_Sètic
))!=0 );

1029 if–
	`sqlôe3VdbeMemMakeWrôóbÀ
(
pVÆ
)!=
SQLITE_OK
 ){

1033 
	`sqlôe3VdbeMemNulTîmö©e
(
pVÆ
);

1035 
	`sqlôe3VdbeMemSåögify
(
pVÆ
, 
íc
, 0);

1036 
	`as£π
–0==(1&
	`SQLITE_PTR_TO_INT
(
pVÆ
->
z
)) );

1038 
	`as£π
(
pVÆ
->
íc
==”n¯& ~
SQLITE_UTF16_ALIGNED
Ë||ÖVÆ->
db
==0

1039 || 
pVÆ
->
db
->
mÆlocFaûed
 );

1040 if–
pVÆ
->
íc
==”n¯& ~
SQLITE_UTF16_ALIGNED
) ){

1041  
pVÆ
->
z
;

1045 
	}
}

1057 c⁄° *
	$sqlôe3VÆueText
(
sqlôe3_vÆue
* 
pVÆ
, 
u8
 
íc
){

1058 if–!
pVÆ
 )  0;

1059 
	`as£π
–
pVÆ
->
db
==0 || 
	`sqlôe3_muãx_hñd
’VÆ->db->
muãx
) );

1060 
	`as£π
–(
íc
&3)==”nc&~
SQLITE_UTF16_ALIGNED
) );

1061 
	`as£π
–(
pVÆ
->
Êags
 & 
MEM_RowSë
)==0 );

1062 if–(
pVÆ
->
Êags
&(
MEM_Så
|
MEM_Tîm
))==(MEM_Så|MEM_TîmË&&ÖVÆ->
íc
==enc ){

1063  
pVÆ
->
z
;

1065 if–
pVÆ
->
Êags
&
MEM_NuŒ
 ){

1068  
	`vÆueToText
(
pVÆ
, 
íc
);

1069 
	}
}

1074 
sqlôe3_vÆue
 *
	$sqlôe3VÆueNew
(
sqlôe3
 *
db
){

1075 
Mem
 *
p
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*p));

1076 if–
p
 ){

1077 
p
->
Êags
 = 
MEM_NuŒ
;

1078 
p
->
db
 = db;

1080  
p
;

1081 
	}
}

1087 
	sVÆueNewSèt4Ctx
 {

1088 
P¨£
 *
	mpP¨£
;

1089 
Index
 *
	mpIdx
;

1090 
U≈ackedRec‹d
 **
	mµRec
;

1091 
	miVÆ
;

1105 
sqlôe3_vÆue
 *
	$vÆueNew
(
sqlôe3
 *
db
, 
VÆueNewSèt4Ctx
 *
p
){

1106 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1107 if–
p
 ){

1108 
U≈ackedRec‹d
 *
pRec
 = 
p
->
µRec
[0];

1110 if–
pRec
==0 ){

1111 
Index
 *
pIdx
 = 
p
->pIdx;

1112 
nByã
;

1113 
i
;

1114 
nCﬁ
 = 
pIdx
->
nCﬁumn
;

1116 
nByã
 = (
Mem
Ë* 
nCﬁ
 + 
	`ROUND8
((
U≈ackedRec‹d
));

1117 
pRec
 = (
U≈ackedRec‹d
*)
	`sqlôe3DbMÆlocZîo
(
db
, 
nByã
);

1118 if–
pRec
 ){

1119 
pRec
->
pKeyInfo
 = 
	`sqlôe3KeyInfoOfIndex
(
p
->
pP¨£
, 
pIdx
);

1120 if–
pRec
->
pKeyInfo
 ){

1121 
	`as£π
–
pRec
->
pKeyInfo
->
nFõld
+pRec->pKeyInfo->
nXFõld
==
nCﬁ
 );

1122 
	`as£π
–
pRec
->
pKeyInfo
->
íc
==
	`ENC
(
db
) );

1123 
pRec
->
aMem
 = (
Mem
 *)((
u8
*ÌRe¯+ 
	`ROUND8
((
U≈ackedRec‹d
)));

1124 
i
=0; i<
nCﬁ
; i++){

1125 
pRec
->
aMem
[
i
].
Êags
 = 
MEM_NuŒ
;

1126 
pRec
->
aMem
[
i
].
db
 = db;

1129 
	`sqlôe3DbFªe
(
db
, 
pRec
);

1130 
pRec
 = 0;

1133 if–
pRec
==0 )  0;

1134 
p
->
µRec
[0] = 
pRec
;

1137 
pRec
->
nFõld
 = 
p
->
iVÆ
+1;

1138  &
pRec
->
aMem
[
p
->
iVÆ
];

1141 
	`UNUSED_PARAMETER
(
p
);

1143  
	`sqlôe3VÆueNew
(
db
);

1144 
	}
}

1166 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1167 
	$vÆueFromFun˘i⁄
(

1168 
sqlôe3
 *
db
,

1169 
Ex¥
 *
p
,

1170 
u8
 
íc
,

1171 
u8
 
aff
,

1172 
sqlôe3_vÆue
 **
µVÆ
,

1173 
VÆueNewSèt4Ctx
 *
pCtx


1175 
sqlôe3_c⁄ãxt
 
˘x
;

1176 
sqlôe3_vÆue
 **
≠VÆ
 = 0;

1177 
nVÆ
 = 0;

1178 
FuncDef
 *
pFunc
 = 0;

1179 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1180 
rc
 = 
SQLITE_OK
;

1181 
Ex¥Li°
 *
pLi°
 = 0;

1182 
i
;

1184 
	`as£π
–
pCtx
!=0 );

1185 
	`as£π
–(
p
->
Êags
 & 
EP_TokíO∆y
)==0 );

1186 
pLi°
 = 
p
->
x
.pList;

1187 if–
pLi°
 ) 
nVÆ
 =ÖLi°->
nEx¥
;

1188 
pFunc
 = 
	`sqlôe3FödFun˘i⁄
(
db
, 
p
->
u
.
zTokí
, 
nVÆ
, 
íc
, 0);

1189 
	`as£π
–
pFunc
 );

1190 if–(
pFunc
->
funcFœgs
 & (
SQLITE_FUNC_CONSTANT
|
SQLITE_FUNC_SLOCHNG
))==0

1191 || (
pFunc
->
funcFœgs
 & 
SQLITE_FUNC_NEEDCOLL
)

1193  
SQLITE_OK
;

1196 if–
pLi°
 ){

1197 
≠VÆ
 = (
sqlôe3_vÆue
**)
	`sqlôe3DbMÆlocZîo
(
db
, ◊pVÆ[0]Ë* 
nVÆ
);

1198 if–
≠VÆ
==0 ){

1199 
rc
 = 
SQLITE_NOMEM_BKPT
;

1200 
vÆue_‰om_fun˘i⁄_out
;

1202 
i
=0; i<
nVÆ
; i++){

1203 
rc
 = 
	`sqlôe3VÆueFromEx¥
(
db
, 
pLi°
->
a
[
i
].
pEx¥
, 
íc
, 
aff
, &
≠VÆ
[i]);

1204 if–
≠VÆ
[
i
]==0 || 
rc
!=
SQLITE_OK
 ) 
vÆue_‰om_fun˘i⁄_out
;

1208 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1209 if–
pVÆ
==0 ){

1210 
rc
 = 
SQLITE_NOMEM_BKPT
;

1211 
vÆue_‰om_fun˘i⁄_out
;

1214 
	`as£π
–
pCtx
->
pP¨£
->
rc
==
SQLITE_OK
 );

1215 
	`mem£t
(&
˘x
, 0, (ctx));

1216 
˘x
.
pOut
 = 
pVÆ
;

1217 
˘x
.
pFunc
 =ÖFunc;

1218 
pFunc
->
	`xSFunc
(&
˘x
, 
nVÆ
, 
≠VÆ
);

1219 if–
˘x
.
isEº‹
 ){

1220 
rc
 = 
˘x
.
isEº‹
;

1221 
	`sqlôe3Eº‹Msg
(
pCtx
->
pP¨£
, "%s", 
	`sqlôe3_vÆue_ãxt
(
pVÆ
));

1223 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
aff
, 
SQLITE_UTF8
);

1224 
	`as£π
–
rc
==
SQLITE_OK
 );

1225 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
);

1226 if–
rc
==
SQLITE_OK
 && 
	`sqlôe3VdbeMemTooBig
(
pVÆ
) ){

1227 
rc
 = 
SQLITE_TOOBIG
;

1228 
pCtx
->
pP¨£
->
nEº
++;

1231 
pCtx
->
pP¨£
->
rc
 =Ñc;

1233 
vÆue_‰om_fun˘i⁄_out
:

1234 if–
rc
!=
SQLITE_OK
 ){

1235 
pVÆ
 = 0;

1237 if–
≠VÆ
 ){

1238 
i
=0; i<
nVÆ
; i++){

1239 
	`sqlôe3VÆueFªe
(
≠VÆ
[
i
]);

1241 
	`sqlôe3DbFªe
(
db
, 
≠VÆ
);

1244 *
µVÆ
 = 
pVÆ
;

1245  
rc
;

1246 
	}
}

1248 
	#vÆueFromFun˘i⁄
(
a
,
b
,
c
,
d
,
e
,
f
Ë
SQLITE_OK


	)

1261 
	$vÆueFromEx¥
(

1262 
sqlôe3
 *
db
,

1263 
Ex¥
 *
pEx¥
,

1264 
u8
 
íc
,

1265 
u8
 
afföôy
,

1266 
sqlôe3_vÆue
 **
µVÆ
,

1267 
VÆueNewSèt4Ctx
 *
pCtx


1269 
›
;

1270 *
zVÆ
 = 0;

1271 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1272 
√gI¡
 = 1;

1273 c⁄° *
zNeg
 = "";

1274 
rc
 = 
SQLITE_OK
;

1276 if–!
pEx¥
 ){

1277 *
µVÆ
 = 0;

1278  
SQLITE_OK
;

1280  (
›
 = 
pEx¥
->›)==
TK_UPLUS
 || op==
TK_SPAN
 )ÖEx¥ =ÖEx¥->
pLe·
;

1281 if–
	`NEVER
(
›
==
TK_REGISTER
ËË› = 
pEx¥
->
›2
;

1287 
	`as£π
–(
pEx¥
->
Êags
 & 
EP_TokíO∆y
)==0 || 
pCtx
==0 );

1289 if–
›
==
TK_CAST
 ){

1290 
u8
 
aff
 = 
	`sqlôe3AfföôyTy≥
(
pEx¥
->
u
.
zTokí
,0);

1291 
rc
 = 
	`vÆueFromEx¥
(
db
, 
pEx¥
->
pLe·
, 
íc
, 
aff
, 
µVÆ
, 
pCtx
);

1292 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

1293 if–*
µVÆ
 ){

1294 
	`sqlôe3VdbeMemCa°
(*
µVÆ
, 
aff
, 
SQLITE_UTF8
);

1295 
	`sqlôe3VÆueAµlyAfföôy
(*
µVÆ
, 
afföôy
, 
SQLITE_UTF8
);

1297  
rc
;

1303 if–
›
==
TK_UMINUS


1304 && (
pEx¥
->
pLe·
->
›
==
TK_INTEGER
 ||ÖEx¥->pLe·->›==
TK_FLOAT
) ){

1305 
pEx¥
 =ÖEx¥->
pLe·
;

1306 
›
 = 
pEx¥
->op;

1307 
√gI¡
 = -1;

1308 
zNeg
 = "-";

1311 if–
›
==
TK_STRING
 || op==
TK_FLOAT
 || op==
TK_INTEGER
 ){

1312 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1313 if–
pVÆ
==0 ) 
no_mem
;

1314 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_I¡VÆue
) ){

1315 
	`sqlôe3VdbeMemSëI¡64
(
pVÆ
, (
i64
)
pEx¥
->
u
.
iVÆue
*
√gI¡
);

1317 
zVÆ
 = 
	`sqlôe3MPrötf
(
db
, "%s%s", 
zNeg
, 
pEx¥
->
u
.
zTokí
);

1318 if–
zVÆ
==0 ) 
no_mem
;

1319 
	`sqlôe3VÆueSëSå
(
pVÆ
, -1, 
zVÆ
, 
SQLITE_UTF8
, 
SQLITE_DYNAMIC
);

1321 if–(
›
==
TK_INTEGER
 || op==
TK_FLOAT
 ) && 
afföôy
==
SQLITE_AFF_BLOB
 ){

1322 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
SQLITE_AFF_NUMERIC
, 
SQLITE_UTF8
);

1324 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
SQLITE_UTF8
);

1326 if–
pVÆ
->
Êags
 & (
MEM_I¡
|
MEM_Ról
ËËpVÆ->Êag†&~
MEM_Så
;

1327 if–
íc
!=
SQLITE_UTF8
 ){

1328 
rc
 = 
	`sqlôe3VdbeCh™geEncodög
(
pVÆ
, 
íc
);

1330 }if–
›
==
TK_UMINUS
 ) {

1332 if–
SQLITE_OK
==
	`sqlôe3VÆueFromEx¥
(
db
,
pEx¥
->
pLe·
,
íc
,
afföôy
,&
pVÆ
)

1333 && 
pVÆ
!=0

1335 
	`sqlôe3VdbeMemNumîify
(
pVÆ
);

1336 if–
pVÆ
->
Êags
 & 
MEM_Ról
 ){

1337 
pVÆ
->
u
.
r
 = -pVal->u.r;

1338 }if–
pVÆ
->
u
.
i
==
SMALLEST_INT64
 ){

1339 
pVÆ
->
u
.
r
 = -()
SMALLEST_INT64
;

1340 
	`MemSëTy≥Fœg
(
pVÆ
, 
MEM_Ról
);

1342 
pVÆ
->
u
.
i
 = -pVal->u.i;

1344 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
íc
);

1346 }if–
›
==
TK_NULL
 ){

1347 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1348 if–
pVÆ
==0 ) 
no_mem
;

1350 #i‚de‡
SQLITE_OMIT_BLOB_LITERAL


1351 if–
›
==
TK_BLOB
 ){

1352 
nVÆ
;

1353 
	`as£π
–
pEx¥
->
u
.
zTokí
[0]=='x' ||ÖExpr->u.zToken[0]=='X' );

1354 
	`as£π
–
pEx¥
->
u
.
zTokí
[1]=='\'' );

1355 
pVÆ
 = 
	`vÆueNew
(
db
, 
pCtx
);

1356 if–!
pVÆ
 ) 
no_mem
;

1357 
zVÆ
 = &
pEx¥
->
u
.
zTokí
[2];

1358 
nVÆ
 = 
	`sqlôe3SåÀn30
(
zVÆ
)-1;

1359 
	`as£π
–
zVÆ
[
nVÆ
]=='\'' );

1360 
	`sqlôe3VdbeMemSëSå
(
pVÆ
, 
	`sqlôe3HexToBlob
(
db
, 
zVÆ
, 
nVÆ
),ÇVal/2,

1361 0, 
SQLITE_DYNAMIC
);

1365 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1366 if–
›
==
TK_FUNCTION
 && 
pCtx
!=0 ){

1367 
rc
 = 
	`vÆueFromFun˘i⁄
(
db
, 
pEx¥
, 
íc
, 
afföôy
, &
pVÆ
, 
pCtx
);

1371 *
µVÆ
 = 
pVÆ
;

1372  
rc
;

1374 
no_mem
:

1375 
	`sqlôe3OomFau…
(
db
);

1376 
	`sqlôe3DbFªe
(
db
, 
zVÆ
);

1377 
	`as£π
–*
µVÆ
==0 );

1378 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1379 if–
pCtx
==0 ) 
	`sqlôe3VÆueFªe
(
pVÆ
);

1381 
	`as£π
–
pCtx
==0 ); 
	`sqlôe3VÆueFªe
(
pVÆ
);

1383  
SQLITE_NOMEM_BKPT
;

1384 
	}
}

1396 
	$sqlôe3VÆueFromEx¥
(

1397 
sqlôe3
 *
db
,

1398 
Ex¥
 *
pEx¥
,

1399 
u8
 
íc
,

1400 
u8
 
afföôy
,

1401 
sqlôe3_vÆue
 **
µVÆ


1403  
	`vÆueFromEx¥
(
db
, 
pEx¥
, 
íc
, 
afföôy
, 
µVÆ
, 0);

1404 
	}
}

1406 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1415 
	$ªc‹dFunc
(

1416 
sqlôe3_c⁄ãxt
 *
c⁄ãxt
,

1417 
¨gc
,

1418 
sqlôe3_vÆue
 **
¨gv


1420 c⁄° 
fûe_f‹m©
 = 1;

1421 
u32
 
iSîül
;

1422 
nSîül
;

1423 
u32
 
nVÆ
;

1424 
nRë
;

1425 
sqlôe3
 *
db
;

1426 
u8
 *
aRë
;

1428 
	`UNUSED_PARAMETER
–
¨gc
 );

1429 
iSîül
 = 
	`sqlôe3VdbeSîülTy≥
(
¨gv
[0], 
fûe_f‹m©
, &
nVÆ
);

1430 
nSîül
 = 
	`sqlôe3V¨ötLí
(
iSîül
);

1431 
db
 = 
	`sqlôe3_c⁄ãxt_db_h™dÀ
(
c⁄ãxt
);

1433 
nRë
 = 1 + 
nSîül
 + 
nVÆ
;

1434 
aRë
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nRë
);

1435 if–
aRë
==0 ){

1436 
	`sqlôe3_ªsu…_îr‹_nomem
(
c⁄ãxt
);

1438 
aRë
[0] = 
nSîül
+1;

1439 
	`putV¨öt32
(&
aRë
[1], 
iSîül
);

1440 
	`sqlôe3VdbeSîülPut
(&
aRë
[1+
nSîül
], 
¨gv
[0], 
iSîül
);

1441 
	`sqlôe3_ªsu…_blob
(
c⁄ãxt
, 
aRë
, 
nRë
, 
SQLITE_TRANSIENT
);

1442 
	`sqlôe3DbFªe
(
db
, 
aRë
);

1444 
	}
}

1449 
	$sqlôe3A«lyzeFun˘i⁄s
(){

1450 
FuncDef
 
aA«lyzeTabÀFuncs
[] = {

1451 
	`FUNCTION
(
sqlôe_ªc‹d
, 1, 0, 0, 
ªc‹dFunc
),

1453 
	`sqlôe3In£πBuûtöFuncs
(
aA«lyzeTabÀFuncs
, 
	`AºaySize
(aAnalyzeTableFuncs));

1454 
	}
}

1474 
	$°©4VÆueFromEx¥
(

1475 
P¨£
 *
pP¨£
,

1476 
Ex¥
 *
pEx¥
,

1477 
u8
 
afföôy
,

1478 
VÆueNewSèt4Ctx
 *
pAŒoc
,

1479 
sqlôe3_vÆue
 **
µVÆ


1481 
rc
 = 
SQLITE_OK
;

1482 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1483 
sqlôe3
 *
db
 = 
pP¨£
->db;

1486 
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(pExpr);

1488 if–!
pEx¥
 ){

1489 
pVÆ
 = 
	`vÆueNew
(
db
, 
pAŒoc
);

1490 if–
pVÆ
 ){

1491 
	`sqlôe3VdbeMemSëNuŒ
((
Mem
*)
pVÆ
);

1493 }if–
pEx¥
->
›
==
TK_VARIABLE


1494 || 
	`NEVER
(
pEx¥
->
›
==
TK_REGISTER
 &&ÖEx¥->
›2
==
TK_VARIABLE
)

1496 
Vdbe
 *
v
;

1497 
iBödV¨
 = 
pEx¥
->
iCﬁumn
;

1498 
	`sqlôe3VdbeSëV¨mask
(
pP¨£
->
pVdbe
, 
iBödV¨
);

1499 if–(
v
 = 
pP¨£
->
pRïª∑ª
)!=0 ){

1500 
pVÆ
 = 
	`vÆueNew
(
db
, 
pAŒoc
);

1501 if–
pVÆ
 ){

1502 
rc
 = 
	`sqlôe3VdbeMemC›y
((
Mem
*)
pVÆ
, &
v
->
aV¨
[
iBödV¨
-1]);

1503 if–
rc
==
SQLITE_OK
 ){

1504 
	`sqlôe3VÆueAµlyAfföôy
(
pVÆ
, 
afföôy
, 
	`ENC
(
db
));

1506 
pVÆ
->
db
 = 
pP¨£
->db;

1510 
rc
 = 
	`vÆueFromEx¥
(
db
, 
pEx¥
, 
	`ENC
(db), 
afföôy
, &
pVÆ
, 
pAŒoc
);

1513 
	`as£π
–
pVÆ
==0 ||ÖVÆ->
db
==db );

1514 *
µVÆ
 = 
pVÆ
;

1515  
rc
;

1516 
	}
}

1548 
	$sqlôe3Sèt4ProbeSëVÆue
(

1549 
P¨£
 *
pP¨£
,

1550 
Index
 *
pIdx
,

1551 
U≈ackedRec‹d
 **
µRec
,

1552 
Ex¥
 *
pEx¥
,

1553 
u8
 
afföôy
,

1554 
iVÆ
,

1555 *
pbOk


1557 
rc
;

1558 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1559 
VÆueNewSèt4Ctx
 
Æloc
;

1561 
Æloc
.
pP¨£
 =ÖParse;

1562 
Æloc
.
pIdx
 =ÖIdx;

1563 
Æloc
.
µRec
 =ÖpRec;

1564 
Æloc
.
iVÆ
 = iVal;

1566 
rc
 = 
	`°©4VÆueFromEx¥
(
pP¨£
, 
pEx¥
, 
afföôy
, &
Æloc
, &
pVÆ
);

1567 
	`as£π
–
pVÆ
==0 ||ÖVÆ->
db
==
pP¨£
->db );

1568 *
pbOk
 = (
pVÆ
!=0);

1569  
rc
;

1570 
	}
}

1582 
	$sqlôe3Sèt4VÆueFromEx¥
(

1583 
P¨£
 *
pP¨£
,

1584 
Ex¥
 *
pEx¥
,

1585 
u8
 
afföôy
,

1586 
sqlôe3_vÆue
 **
µVÆ


1588  
	`°©4VÆueFromEx¥
(
pP¨£
, 
pEx¥
, 
afföôy
, 0, 
µVÆ
);

1589 
	}
}

1599 
	$sqlôe3Sèt4Cﬁumn
(

1600 
sqlôe3
 *
db
,

1601 c⁄° *
pRec
,

1602 
nRec
,

1603 
iCﬁ
,

1604 
sqlôe3_vÆue
 **
µVÆ


1606 
u32
 
t
;

1607 
nHdr
;

1608 
iHdr
;

1609 
iFõld
;

1610 
szFõld
;

1611 
i
;

1612 
u8
 *
a
 = (u8*)
pRec
;

1613 
Mem
 *
pMem
 = *
µVÆ
;

1615 
	`as£π
–
iCﬁ
>0 );

1616 
iHdr
 = 
	`gëV¨öt32
(
a
, 
nHdr
);

1617 if–
nHdr
>
nRec
 || 
iHdr
>ÚHd∏Ë 
SQLITE_CORRUPT_BKPT
;

1618 
iFõld
 = 
nHdr
;

1619 
i
=0; i<=
iCﬁ
; i++){

1620 
iHdr
 +
	`gëV¨öt32
(&
a
[iHdr], 
t
);

1621 
	`ã°ˇ£
–
iHdr
==
nHdr
 );

1622 
	`ã°ˇ£
–
iHdr
==
nHdr
+1 );

1623 if–
iHdr
>
nHdr
 )  
SQLITE_CORRUPT_BKPT
;

1624 
szFõld
 = 
	`sqlôe3VdbeSîülTy≥Lí
(
t
);

1625 
iFõld
 +
szFõld
;

1627 
	`ã°ˇ£
–
iFõld
==
nRec
 );

1628 
	`ã°ˇ£
–
iFõld
==
nRec
+1 );

1629 if–
iFõld
>
nRec
 )  
SQLITE_CORRUPT_BKPT
;

1630 if–
pMem
==0 ){

1631 
pMem
 = *
µVÆ
 = 
	`sqlôe3VÆueNew
(
db
);

1632 if–
pMem
==0 )  
SQLITE_NOMEM_BKPT
;

1634 
	`sqlôe3VdbeSîülGë
(&
a
[
iFõld
-
szFõld
], 
t
, 
pMem
);

1635 
pMem
->
íc
 = 
	`ENC
(
db
);

1636  
SQLITE_OK
;

1637 
	}
}

1644 
	$sqlôe3Sèt4ProbeFªe
(
U≈ackedRec‹d
 *
pRec
){

1645 if–
pRec
 ){

1646 
i
;

1647 
nCﬁ
 = 
pRec
->
pKeyInfo
->
nFõld
+pRec->pKeyInfo->
nXFõld
;

1648 
Mem
 *
aMem
 = 
pRec
->aMem;

1649 
sqlôe3
 *
db
 = 
aMem
[0].db;

1650 
i
=0; i<
nCﬁ
; i++){

1651 
	`sqlôe3VdbeMemRñó£
(&
aMem
[
i
]);

1653 
	`sqlôe3KeyInfoUƒef
(
pRec
->
pKeyInfo
);

1654 
	`sqlôe3DbFªe
(
db
, 
pRec
);

1656 
	}
}

1662 
sqlôe3VÆueSëSå
(

1663 
sqlôe3_vÆue
 *
v
,

1664 
n
,

1665 c⁄° *
z
,

1666 
u8
 
íc
,

1667 (*
xDñ
)(*)

1669 if–
v
 ) 
	`sqlôe3VdbeMemSëSå
((
Mem
 *)v, 
z
, 
n
, 
íc
, 
xDñ
);

1670 
	}
}

1675 
	$sqlôe3VÆueFªe
(
sqlôe3_vÆue
 *
v
){

1676 if–!
v
 ) ;

1677 
	`sqlôe3VdbeMemRñó£
((
Mem
 *)
v
);

1678 
	`sqlôe3DbFªe
(((
Mem
*)
v
)->
db
, v);

1679 
	}
}

1686 
SQLITE_NOINLINE
 
	$vÆueByãs
(
sqlôe3_vÆue
 *
pVÆ
, 
u8
 
íc
){

1687  
	`vÆueToText
(
pVÆ
, 
íc
)!=0 ?ÖVÆ->
n
 : 0;

1688 
	}
}

1689 
	$sqlôe3VÆueByãs
(
sqlôe3_vÆue
 *
pVÆ
, 
u8
 
íc
){

1690 
Mem
 *
p
 = (Mem*)
pVÆ
;

1691 
	`as£π
–(
p
->
Êags
 & 
MEM_NuŒ
)==0 || (p->Êag†& (
MEM_Så
|
MEM_Blob
))==0 );

1692 if–(
p
->
Êags
 & 
MEM_Så
)!=0 && 
pVÆ
->
íc
==enc ){

1693  
p
->
n
;

1695 if–(
p
->
Êags
 & 
MEM_Blob
)!=0 ){

1696 if–
p
->
Êags
 & 
MEM_Zîo
 ){

1697  
p
->
n
 +Ö->
u
.
nZîo
;

1699  
p
->
n
;

1702 if–
p
->
Êags
 & 
MEM_NuŒ
 )  0;

1703  
	`vÆueByãs
(
pVÆ
, 
íc
);

1704 
	}
}

	@vdbesort.c

138 
	~"sqlôeI¡.h
"

139 
	~"vdbeI¡.h
"

147 
	#SQLITE_DEBUG_SORTER_THREADS
 1

	)

155 
	#SQLITE_MAX_PMASZ
 (1<<29)

	)

160 
MîgeEngöe
 
	tMîgeEngöe
;

161 
PmaRódî
 
	tPmaRódî
;

162 
PmaWrôî
 
	tPmaWrôî
;

163 
S‹ãrRec‹d
 
	tS‹ãrRec‹d
;

164 
S‹tSubèsk
 
	tS‹tSubèsk
;

165 
S‹ãrFûe
 
	tS‹ãrFûe
;

166 
S‹ãrLi°
 
	tS‹ãrLi°
;

167 
In¸Mîgî
 
	tIn¸Mîgî
;

173 
	sS‹ãrFûe
 {

174 
sqlôe3_fûe
 *
	mpFd
;

175 
i64
 
	miEof
;

186 
	sS‹ãrLi°
 {

187 
S‹ãrRec‹d
 *
	mpLi°
;

188 
u8
 *
	maMem‹y
;

189 
	mszPMA
;

256 
	sMîgeEngöe
 {

257 
	mnTªe
;

258 
S‹tSubèsk
 *
	mpTask
;

259 *
	maTªe
;

260 
PmaRódî
 *
	maRódr
;

294 (*
	tS‹ãrCom∑ª
)(
	tS‹tSubèsk
*,*,const *,,const *,);

295 
	sS‹tSubèsk
 {

296 
SQLôeThªad
 *
pThªad
;

297 
bD⁄e
;

298 
VdbeS‹ãr
 *
pS‹ãr
;

299 
U≈ackedRec‹d
 *
pU≈acked
;

300 
S‹ãrLi°
 
li°
;

301 
nPMA
;

302 
S‹ãrCom∑ª
 
xCom∑ª
;

303 
S‹ãrFûe
 
fûe
;

304 
S‹ãrFûe
 
fûe2
;

317 
	sVdbeS‹ãr
 {

318 
mnPmaSize
;

319 
mxPmaSize
;

320 
mxKeysize
;

321 
pgsz
;

322 
PmaRódî
 *
pRódî
;

323 
MîgeEngöe
 *
pMîgî
;

324 
sqlôe3
 *
db
;

325 
KeyInfo
 *
pKeyInfo
;

326 
U≈ackedRec‹d
 *
pU≈acked
;

327 
S‹ãrLi°
 
li°
;

328 
iMem‹y
;

329 
nMem‹y
;

330 
u8
 
bU£PMA
;

331 
u8
 
bU£Thªads
;

332 
u8
 
iPªv
;

333 
u8
 
nTask
;

334 
u8
 
ty≥Mask
;

335 
S‹tSubèsk
 
aTask
[1];

338 
	#SORTER_TYPE_INTEGER
 0x01

	)

339 
	#SORTER_TYPE_TEXT
 0x02

	)

350 
	sPmaRódî
 {

351 
i64
 
iRódOff
;

352 
i64
 
iEof
;

353 
nAŒoc
;

354 
nKey
;

355 
sqlôe3_fûe
 *
pFd
;

356 
u8
 *
aAŒoc
;

357 
u8
 *
aKey
;

358 
u8
 *
aBuf„r
;

359 
nBuf„r
;

360 
u8
 *
aM≠
;

361 
In¸Mîgî
 *
pIn¸
;

396 
	sIn¸Mîgî
 {

397 
S‹tSubèsk
 *
pTask
;

398 
MîgeEngöe
 *
pMîgî
;

399 
i64
 
iSèπOff
;

400 
mxSz
;

401 
bEof
;

402 
bU£Thªad
;

403 
S‹ãrFûe
 
aFûe
[2];

414 
	sPmaWrôî
 {

415 
eFWEº
;

416 
u8
 *
aBuf„r
;

417 
nBuf„r
;

418 
iBufSèπ
;

419 
iBufEnd
;

420 
i64
 
iWrôeOff
;

421 
sqlôe3_fûe
 *
pFd
;

442 
	sS‹ãrRec‹d
 {

443 
nVÆ
;

445 
S‹ãrRec‹d
 *
pNext
;

446 
iNext
;

447 } 
u
;

456 
	#SRVAL
(
p
Ë((*)((
S‹ãrRec‹d
*)’Ë+ 1))

	)

460 
	#SORTER_MAX_MERGE_COUNT
 16

	)

462 
	`vdbeIn¸Sw≠
(
In¸Mîgî
*);

463 
	`vdbeIn¸Fªe
(
In¸Mîgî
 *);

469 
	$vdbePmaRódîCÀ¨
(
PmaRódî
 *
pRódr
){

470 
	`sqlôe3_‰ì
(
pRódr
->
aAŒoc
);

471 
	`sqlôe3_‰ì
(
pRódr
->
aBuf„r
);

472 if–
pRódr
->
aM≠
 ) 
	`sqlôe3OsUn„tch
’Ródr->
pFd
, 0,ÖReadr->aMap);

473 
	`vdbeIn¸Fªe
(
pRódr
->
pIn¸
);

474 
	`mem£t
(
pRódr
, 0, (
PmaRódî
));

475 
	}
}

486 
	$vdbePmaRódBlob
(

487 
PmaRódî
 *
p
,

488 
nByã
,

489 
u8
 **
µOut


491 
iBuf
;

492 
nAvaû
;

494 if–
p
->
aM≠
 ){

495 *
µOut
 = &
p
->
aM≠
[p->
iRódOff
];

496 
p
->
iRódOff
 +
nByã
;

497  
SQLITE_OK
;

500 
	`as£π
–
p
->
aBuf„r
 );

505 
iBuf
 = 
p
->
iRódOff
 %Ö->
nBuf„r
;

506 if–
iBuf
==0 ){

507 
nRód
;

508 
rc
;

511 if–(
p
->
iEof
 -Ö->
iRódOff
Ë> (
i64
Ì->
nBuf„r
 ){

512 
nRód
 = 
p
->
nBuf„r
;

514 
nRód
 = ()(
p
->
iEof
 -Ö->
iRódOff
);

516 
	`as£π
–
nRód
>0 );

519 
rc
 = 
	`sqlôe3OsRód
(
p
->
pFd
,Ö->
aBuf„r
, 
nRód
,Ö->
iRódOff
);

520 
	`as£π
–
rc
!=
SQLITE_IOERR_SHORT_READ
 );

521 if–
rc
!=
SQLITE_OK
 ) Ñc;

523 
nAvaû
 = 
p
->
nBuf„r
 - 
iBuf
;

525 if–
nByã
<=
nAvaû
 ){

529 *
µOut
 = &
p
->
aBuf„r
[
iBuf
];

530 
p
->
iRódOff
 +
nByã
;

535 
nRem
;

538 if–
p
->
nAŒoc
<
nByã
 ){

539 
u8
 *
aNew
;

540 
nNew
 = 
	`MAX
(128, 
p
->
nAŒoc
*2);

541  
nByã
>
nNew
 )ÇNew =ÇNew*2;

542 
aNew
 = 
	`sqlôe3RóŒoc
(
p
->
aAŒoc
, 
nNew
);

543 if–!
aNew
 )  
SQLITE_NOMEM_BKPT
;

544 
p
->
nAŒoc
 = 
nNew
;

545 
p
->
aAŒoc
 = 
aNew
;

550 
	`mem˝y
(
p
->
aAŒoc
, &p->
aBuf„r
[
iBuf
], 
nAvaû
);

551 
p
->
iRódOff
 +
nAvaû
;

552 
nRem
 = 
nByã
 - 
nAvaû
;

556  
nRem
>0 ){

557 
rc
;

558 
nC›y
;

559 
u8
 *
aNext
;

561 
nC›y
 = 
nRem
;

562 if–
nRem
>
p
->
nBuf„r
 ) 
nC›y
 =Ö->nBuffer;

563 
rc
 = 
	`vdbePmaRódBlob
(
p
, 
nC›y
, &
aNext
);

564 if–
rc
!=
SQLITE_OK
 ) Ñc;

565 
	`as£π
–
aNext
!=
p
->
aAŒoc
 );

566 
	`mem˝y
(&
p
->
aAŒoc
[
nByã
 - 
nRem
], 
aNext
, 
nC›y
);

567 
nRem
 -
nC›y
;

570 *
µOut
 = 
p
->
aAŒoc
;

573  
SQLITE_OK
;

574 
	}
}

580 
	$vdbePmaRódV¨öt
(
PmaRódî
 *
p
, 
u64
 *
≤Out
){

581 
iBuf
;

583 if–
p
->
aM≠
 ){

584 
p
->
iRódOff
 +
	`sqlôe3GëV¨öt
(&p->
aM≠
[p->iRódOff], 
≤Out
);

586 
iBuf
 = 
p
->
iRódOff
 %Ö->
nBuf„r
;

587 if–
iBuf
 && (
p
->
nBuf„r
-iBuf)>=9 ){

588 
p
->
iRódOff
 +
	`sqlôe3GëV¨öt
(&p->
aBuf„r
[
iBuf
], 
≤Out
);

590 
u8
 
aV¨öt
[16], *
a
;

591 
i
 = 0, 
rc
;

593 
rc
 = 
	`vdbePmaRódBlob
(
p
, 1, &
a
);

594 if–
rc
 ) Ñc;

595 
aV¨öt
[(
i
++)&0xf] = 
a
[0];

596 } (
a
[0]&0x80)!=0 );

597 
	`sqlôe3GëV¨öt
(
aV¨öt
, 
≤Out
);

601  
SQLITE_OK
;

602 
	}
}

613 
	$vdbeS‹ãrM≠Fûe
(
S‹tSubèsk
 *
pTask
, 
S‹ãrFûe
 *
pFûe
, 
u8
 **
µ
){

614 
rc
 = 
SQLITE_OK
;

615 if–
pFûe
->
iEof
<=(
i64
)(
pTask
->
pS‹ãr
->
db
->
nMaxS‹ãrMm≠
) ){

616 
sqlôe3_fûe
 *
pFd
 = 
pFûe
->pFd;

617 if–
pFd
->
pMëhods
->
iVîsi⁄
>=3 ){

618 
rc
 = 
	`sqlôe3OsFëch
(
pFd
, 0, ()
pFûe
->
iEof
, (**)
µ
);

619 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

622  
rc
;

623 
	}
}

630 
	$vdbePmaRódîSìk
(

631 
S‹tSubèsk
 *
pTask
,

632 
PmaRódî
 *
pRódr
,

633 
S‹ãrFûe
 *
pFûe
,

634 
i64
 
iOff


636 
rc
 = 
SQLITE_OK
;

638 
	`as£π
–
pRódr
->
pIn¸
==0 ||ÖRódr->pIn¸->
bEof
==0 );

640 if–
	`sqlôe3Fau…Sim
(201ËË 
SQLITE_IOERR_READ
;

641 if–
pRódr
->
aM≠
 ){

642 
	`sqlôe3OsUn„tch
(
pRódr
->
pFd
, 0,ÖRódr->
aM≠
);

643 
pRódr
->
aM≠
 = 0;

645 
pRódr
->
iRódOff
 = 
iOff
;

646 
pRódr
->
iEof
 = 
pFûe
->iEof;

647 
pRódr
->
pFd
 = 
pFûe
->pFd;

649 
rc
 = 
	`vdbeS‹ãrM≠Fûe
(
pTask
, 
pFûe
, &
pRódr
->
aM≠
);

650 if–
rc
==
SQLITE_OK
 && 
pRódr
->
aM≠
==0 ){

651 
pgsz
 = 
pTask
->
pS‹ãr
->pgsz;

652 
iBuf
 = 
pRódr
->
iRódOff
 % 
pgsz
;

653 if–
pRódr
->
aBuf„r
==0 ){

654 
pRódr
->
aBuf„r
 = (
u8
*)
	`sqlôe3MÆloc
(
pgsz
);

655 if–
pRódr
->
aBuf„r
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

656 
pRódr
->
nBuf„r
 = 
pgsz
;

658 if–
rc
==
SQLITE_OK
 && 
iBuf
 ){

659 
nRód
 = 
pgsz
 - 
iBuf
;

660 if–(
pRódr
->
iRódOff
 + 
nRód
Ë>ÖRódr->
iEof
 ){

661 
nRód
 = ()(
pRódr
->
iEof
 -ÖRódr->
iRódOff
);

663 
rc
 = 
	`sqlôe3OsRód
(

664 
pRódr
->
pFd
, &pRódr->
aBuf„r
[
iBuf
], 
nRód
,ÖRódr->
iRódOff


666 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

670  
rc
;

671 
	}
}

677 
	$vdbePmaRódîNext
(
PmaRódî
 *
pRódr
){

678 
rc
 = 
SQLITE_OK
;

679 
u64
 
nRec
 = 0;

682 if–
pRódr
->
iRódOff
>ıRódr->
iEof
 ){

683 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

684 
bEof
 = 1;

685 if–
pIn¸
 ){

686 
rc
 = 
	`vdbeIn¸Sw≠
(
pIn¸
);

687 if–
rc
==
SQLITE_OK
 && 
pIn¸
->
bEof
==0 ){

688 
rc
 = 
	`vdbePmaRódîSìk
(

689 
pIn¸
->
pTask
, 
pRódr
, &pIn¸->
aFûe
[0],ÖIn¸->
iSèπOff


691 
bEof
 = 0;

695 if–
bEof
 ){

697 
	`vdbePmaRódîCÀ¨
(
pRódr
);

698 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

699  
rc
;

703 if–
rc
==
SQLITE_OK
 ){

704 
rc
 = 
	`vdbePmaRódV¨öt
(
pRódr
, &
nRec
);

706 if–
rc
==
SQLITE_OK
 ){

707 
pRódr
->
nKey
 = ()
nRec
;

708 
rc
 = 
	`vdbePmaRódBlob
(
pRódr
, ()
nRec
, &pRódr->
aKey
);

709 
	`ã°ˇ£
–
rc
!=
SQLITE_OK
 );

712  
rc
;

713 
	}
}

724 
	$vdbePmaRódîInô
(

725 
S‹tSubèsk
 *
pTask
,

726 
S‹ãrFûe
 *
pFûe
,

727 
i64
 
iSèπ
,

728 
PmaRódî
 *
pRódr
,

729 
i64
 *
≤Byã


731 
rc
;

733 
	`as£π
–
pFûe
->
iEof
>
iSèπ
 );

734 
	`as£π
–
pRódr
->
aAŒoc
==0 &&ÖRódr->
nAŒoc
==0 );

735 
	`as£π
–
pRódr
->
aBuf„r
==0 );

736 
	`as£π
–
pRódr
->
aM≠
==0 );

738 
rc
 = 
	`vdbePmaRódîSìk
(
pTask
, 
pRódr
, 
pFûe
, 
iSèπ
);

739 if–
rc
==
SQLITE_OK
 ){

740 
u64
 
nByã
 = 0;

741 
rc
 = 
	`vdbePmaRódV¨öt
(
pRódr
, &
nByã
);

742 
pRódr
->
iEof
 =ÖRódr->
iRódOff
 + 
nByã
;

743 *
≤Byã
 +
nByã
;

746 if–
rc
==
SQLITE_OK
 ){

747 
rc
 = 
	`vdbePmaRódîNext
(
pRódr
);

749  
rc
;

750 
	}
}

757 
	$vdbeS‹ãrCom∑ªTaû
(

758 
S‹tSubèsk
 *
pTask
,

759 *
pbKey2Cached
,

760 c⁄° *
pKey1
, 
nKey1
,

761 c⁄° *
pKey2
, 
nKey2


763 
U≈ackedRec‹d
 *
r2
 = 
pTask
->
pU≈acked
;

764 if–*
pbKey2Cached
==0 ){

765 
	`sqlôe3VdbeRec‹dU≈ack
(
pTask
->
pS‹ãr
->
pKeyInfo
, 
nKey2
, 
pKey2
, 
r2
);

766 *
pbKey2Cached
 = 1;

768  
	`sqlôe3VdbeRec‹dCom∑ªWôhSkù
(
nKey1
, 
pKey1
, 
r2
, 1);

769 
	}
}

784 
	$vdbeS‹ãrCom∑ª
(

785 
S‹tSubèsk
 *
pTask
,

786 *
pbKey2Cached
,

787 c⁄° *
pKey1
, 
nKey1
,

788 c⁄° *
pKey2
, 
nKey2


790 
U≈ackedRec‹d
 *
r2
 = 
pTask
->
pU≈acked
;

791 if–!*
pbKey2Cached
 ){

792 
	`sqlôe3VdbeRec‹dU≈ack
(
pTask
->
pS‹ãr
->
pKeyInfo
, 
nKey2
, 
pKey2
, 
r2
);

793 *
pbKey2Cached
 = 1;

795  
	`sqlôe3VdbeRec‹dCom∑ª
(
nKey1
, 
pKey1
, 
r2
);

796 
	}
}

803 
	$vdbeS‹ãrCom∑ªText
(

804 
S‹tSubèsk
 *
pTask
,

805 *
pbKey2Cached
,

806 c⁄° *
pKey1
, 
nKey1
,

807 c⁄° *
pKey2
, 
nKey2


809 c⁄° 
u8
 * c⁄° 
p1
 = (c⁄° u8 * c⁄°)
pKey1
;

810 c⁄° 
u8
 * c⁄° 
p2
 = (c⁄° u8 * c⁄°)
pKey2
;

811 c⁄° 
u8
 * c⁄° 
v1
 = &
p1
[Ö1[0] ];

812 c⁄° 
u8
 * c⁄° 
v2
 = &
p2
[Ö2[0] ];

814 
n1
;

815 
n2
;

816 
ªs
;

818 
	`gëV¨öt32
(&
p1
[1], 
n1
);Ç1 = (n1 - 13) / 2;

819 
	`gëV¨öt32
(&
p2
[1], 
n2
);Ç2 = (n2 - 13) / 2;

820 
ªs
 = 
	`memcmp
(
v1
, 
v2
, 
	`MIN
(
n1
, 
n2
));

821 if–
ªs
==0 ){

822 
ªs
 = 
n1
 - 
n2
;

825 if–
ªs
==0 ){

826 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
nFõld
>1 ){

827 
ªs
 = 
	`vdbeS‹ãrCom∑ªTaû
(

828 
pTask
, 
pbKey2Cached
, 
pKey1
, 
nKey1
, 
pKey2
, 
nKey2


832 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
aS‹tOrdî
[0] ){

833 
ªs
 =Ñes * -1;

837  
ªs
;

838 
	}
}

844 
	$vdbeS‹ãrCom∑ªI¡
(

845 
S‹tSubèsk
 *
pTask
,

846 *
pbKey2Cached
,

847 c⁄° *
pKey1
, 
nKey1
,

848 c⁄° *
pKey2
, 
nKey2


850 c⁄° 
u8
 * c⁄° 
p1
 = (c⁄° u8 * c⁄°)
pKey1
;

851 c⁄° 
u8
 * c⁄° 
p2
 = (c⁄° u8 * c⁄°)
pKey2
;

852 c⁄° 
s1
 = 
p1
[1];

853 c⁄° 
s2
 = 
p2
[1];

854 c⁄° 
u8
 * c⁄° 
v1
 = &
p1
[Ö1[0] ];

855 c⁄° 
u8
 * c⁄° 
v2
 = &
p2
[Ö2[0] ];

856 
ªs
;

858 
	`as£π
–(
s1
>0 && s1<7) || s1==8 || s1==9 );

859 
	`as£π
–(
s2
>0 && s2<7) || s2==8 || s2==9 );

861 if–
s1
>7 && 
s2
>7 ){

862 
ªs
 = 
s1
 - 
s2
;

864 if–
s1
==
s2
 ){

865 if–(*
v1
 ^ *
v2
) & 0x80 ){

867 
ªs
 = (*
v1
 & 0x80) ? -1 : +1;

870 c⁄° 
u8
 
aLí
[] = {0, 1, 2, 3, 4, 6, 8 };

871 
i
;

872 
ªs
 = 0;

873 
i
=0; i<
aLí
[
s1
]; i++){

874 if–(
ªs
 = 
v1
[
i
] - 
v2
[i]) ) ;

878 if–
s2
>7 ){

879 
ªs
 = +1;

880 }if–
s1
>7 ){

881 
ªs
 = -1;

883 
ªs
 = 
s1
 - 
s2
;

885 
	`as£π
–
ªs
!=0 );

887 if–
ªs
>0 ){

888 if–*
v1
 & 0x80 ) 
ªs
 = -1;

890 if–*
v2
 & 0x80 ) 
ªs
 = +1;

895 if–
ªs
==0 ){

896 if–
pTask
->
pS‹ãr
->
pKeyInfo
->
nFõld
>1 ){

897 
ªs
 = 
	`vdbeS‹ãrCom∑ªTaû
(

898 
pTask
, 
pbKey2Cached
, 
pKey1
, 
nKey1
, 
pKey2
, 
nKey2


901 }if–
pTask
->
pS‹ãr
->
pKeyInfo
->
aS‹tOrdî
[0] ){

902 
ªs
 =Ñes * -1;

905  
ªs
;

906 
	}
}

927 
	$sqlôe3VdbeS‹ãrInô
(

928 
sqlôe3
 *
db
,

929 
nFõld
,

930 
VdbeCurs‹
 *
pC§


932 
pgsz
;

933 
i
;

934 
VdbeS‹ãr
 *
pS‹ãr
;

935 
KeyInfo
 *
pKeyInfo
;

936 
szKeyInfo
;

937 
sz
;

938 
rc
 = 
SQLITE_OK
;

939 #i‡
SQLITE_MAX_WORKER_THREADS
==0

940 
	#nW‹kî
 0

	)

942 
nW‹kî
;

946 #i‡
SQLITE_MAX_WORKER_THREADS
>0

947 if–
	`sqlôe3TempInMem‹y
(
db
Ë|| 
sqlôe3GlobÆC⁄fig
.
bC‹eMuãx
==0 ){

948 
nW‹kî
 = 0;

950 
nW‹kî
 = 
db
->
aLimô
[
SQLITE_LIMIT_WORKER_THREADS
];

956 #i‡
SQLITE_MAX_WORKER_THREADS
>=
SORTER_MAX_MERGE_COUNT


957 if–
nW‹kî
>=
SORTER_MAX_MERGE_COUNT
 ){

958 
nW‹kî
 = 
SORTER_MAX_MERGE_COUNT
-1;

962 
	`as£π
–
pC§
->
pKeyInfo
 &&ÖC§->
pBt
==0 );

963 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

964 
szKeyInfo
 = (
KeyInfo
Ë+ (
pC§
->
pKeyInfo
->
nFõld
-1)*(
CﬁlSeq
*);

965 
sz
 = (
VdbeS‹ãr
Ë+ 
nW‹kî
 * (
S‹tSubèsk
);

967 
pS‹ãr
 = (
VdbeS‹ãr
*)
	`sqlôe3DbMÆlocZîo
(
db
, 
sz
 + 
szKeyInfo
);

968 
pC§
->
uc
.
pS‹ãr
 =ÖSorter;

969 if–
pS‹ãr
==0 ){

970 
rc
 = 
SQLITE_NOMEM_BKPT
;

972 
pS‹ãr
->
pKeyInfo
 =ÖKeyInfÿ(
KeyInfo
*)((
u8
*ÌS‹ã∏+ 
sz
);

973 
	`mem˝y
(
pKeyInfo
, 
pC§
->pKeyInfo, 
szKeyInfo
);

974 
pKeyInfo
->
db
 = 0;

975 if–
nFõld
 && 
nW‹kî
==0 ){

976 
pKeyInfo
->
nXFõld
 +’KeyInfo->
nFõld
 -ÇField);

977 
pKeyInfo
->
nFõld
 =ÇField;

979 
pS‹ãr
->
pgsz
 =Ögsz = 
	`sqlôe3BåìGëPageSize
(
db
->
aDb
[0].
pBt
);

980 
pS‹ãr
->
nTask
 = 
nW‹kî
 + 1;

981 
pS‹ãr
->
iPªv
 = (
u8
)(
nW‹kî
 - 1);

982 
pS‹ãr
->
bU£Thªads
 = (pS‹ãr->
nTask
>1);

983 
pS‹ãr
->
db
 = db;

984 
i
=0; i<
pS‹ãr
->
nTask
; i++){

985 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

986 
pTask
->
pS‹ãr
 =ÖSorter;

989 if–!
	`sqlôe3TempInMem‹y
(
db
) ){

990 
i64
 
mxCache
;

991 
u32
 
szPma
 = 
sqlôe3GlobÆC⁄fig
.szPma;

992 
pS‹ãr
->
mnPmaSize
 = 
szPma
 * 
pgsz
;

994 
mxCache
 = 
db
->
aDb
[0].
pSchema
->
ˇche_size
;

995 if–
mxCache
<0 ){

998 
mxCache
 = mxCache * -1024;

1000 
mxCache
 = mxCachê* 
pgsz
;

1002 
mxCache
 = 
	`MIN
(mxCache, 
SQLITE_MAX_PMASZ
);

1003 
pS‹ãr
->
mxPmaSize
 = 
	`MAX
’S‹ãr->
mnPmaSize
, ()
mxCache
);

1009 if–
sqlôe3GlobÆC⁄fig
.
pS¸©ch
==0 ){

1010 
	`as£π
–
pS‹ãr
->
iMem‹y
==0 );

1011 
pS‹ãr
->
nMem‹y
 = 
pgsz
;

1012 
pS‹ãr
->
li°
.
aMem‹y
 = (
u8
*)
	`sqlôe3MÆloc
(
pgsz
);

1013 if–!
pS‹ãr
->
li°
.
aMem‹y
 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

1017 if–(
pKeyInfo
->
nFõld
+pKeyInfo->
nXFõld
)<13

1018 && (
pKeyInfo
->
aCﬁl
[0]==0 ||ÖKeyInfo->aCﬁl[0]==
db
->
pDÊtCﬁl
)

1020 
pS‹ãr
->
ty≥Mask
 = 
SORTER_TYPE_INTEGER
 | 
SORTER_TYPE_TEXT
;

1024  
rc
;

1025 
	}
}

1026 #unde‡
nW‹kî


1031 
	$vdbeS‹ãrRec‹dFªe
(
sqlôe3
 *
db
, 
S‹ãrRec‹d
 *
pRec‹d
){

1032 
S‹ãrRec‹d
 *
p
;

1033 
S‹ãrRec‹d
 *
pNext
;

1034 
p
=
pRec‹d
;Ö;Ö=
pNext
){

1035 
pNext
 = 
p
->
u
.pNext;

1036 
	`sqlôe3DbFªe
(
db
, 
p
);

1038 
	}
}

1044 
	$vdbeS‹tSubèskCÀ™up
(
sqlôe3
 *
db
, 
S‹tSubèsk
 *
pTask
){

1045 
	`sqlôe3DbFªe
(
db
, 
pTask
->
pU≈acked
);

1046 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1049 if–
pTask
->
li°
.
aMem‹y
 ){

1050 
	`sqlôe3_‰ì
(
pTask
->
li°
.
aMem‹y
);

1054 
	`as£π
–
pTask
->
li°
.
aMem‹y
==0 );

1055 
	`vdbeS‹ãrRec‹dFªe
(0, 
pTask
->
li°
.
pLi°
);

1057 if–
pTask
->
fûe
.
pFd
 ){

1058 
	`sqlôe3OsClo£Fªe
(
pTask
->
fûe
.
pFd
);

1060 if–
pTask
->
fûe2
.
pFd
 ){

1061 
	`sqlôe3OsClo£Fªe
(
pTask
->
fûe2
.
pFd
);

1063 
	`mem£t
(
pTask
, 0, (
S‹tSubèsk
));

1064 
	}
}

1066 #ifde‡
SQLITE_DEBUG_SORTER_THREADS


1067 
	$vdbeS‹ãrW‹kDebug
(
S‹tSubèsk
 *
pTask
, c⁄° *
zEvít
){

1068 
i64
 
t
;

1069 
iTask
 = (
pTask
 -ÖTask->
pS‹ãr
->
aTask
);

1070 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1071 
	`Ârötf
(
°dîr
, "%Œd:%d %s\n", 
t
, 
iTask
, 
zEvít
);

1072 
	}
}

1073 
	$vdbeS‹ãrRewödDebug
(c⁄° *
zEvít
){

1074 
i64
 
t
;

1075 
	`sqlôe3OsCuºítTimeI¡64
(
	`sqlôe3_vfs_föd
(0), &
t
);

1076 
	`Ârötf
(
°dîr
, "%Œd:X %s\n", 
t
, 
zEvít
);

1077 
	}
}

1078 
	$vdbeS‹ãrP›uœãDebug
(

1079 
S‹tSubèsk
 *
pTask
,

1080 c⁄° *
zEvít


1082 
i64
 
t
;

1083 
iTask
 = (
pTask
 -ÖTask->
pS‹ãr
->
aTask
);

1084 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1085 
	`Ârötf
(
°dîr
, "%Œd:bg%d %s\n", 
t
, 
iTask
, 
zEvít
);

1086 
	}
}

1087 
	$vdbeS‹ãrBlockDebug
(

1088 
S‹tSubèsk
 *
pTask
,

1089 
bBlocked
,

1090 c⁄° *
zEvít


1092 if–
bBlocked
 ){

1093 
i64
 
t
;

1094 
	`sqlôe3OsCuºítTimeI¡64
(
pTask
->
pS‹ãr
->
db
->
pVfs
, &
t
);

1095 
	`Ârötf
(
°dîr
, "%Œd:maö %s\n", 
t
, 
zEvít
);

1097 
	}
}

1099 
	#vdbeS‹ãrW‹kDebug
(
x
,
y
)

	)

1100 
	#vdbeS‹ãrRewödDebug
(
y
)

	)

1101 
	#vdbeS‹ãrP›uœãDebug
(
x
,
y
)

	)

1102 
	#vdbeS‹ãrBlockDebug
(
x
,
y
,
z
)

	)

1105 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1109 
	$vdbeS‹ãrJoöThªad
(
S‹tSubèsk
 *
pTask
){

1110 
rc
 = 
SQLITE_OK
;

1111 if–
pTask
->
pThªad
 ){

1112 #ifde‡
SQLITE_DEBUG_SORTER_THREADS


1113 
bD⁄e
 = 
pTask
->bDone;

1115 *
pRë
 = 
	`SQLITE_INT_TO_PTR
(
SQLITE_ERROR
);

1116 
	`vdbeS‹ãrBlockDebug
(
pTask
, !
bD⁄e
, "enter");

1117 ()
	`sqlôe3ThªadJoö
(
pTask
->
pThªad
, &
pRë
);

1118 
	`vdbeS‹ãrBlockDebug
(
pTask
, !
bD⁄e
, "exit");

1119 
rc
 = 
	`SQLITE_PTR_TO_INT
(
pRë
);

1120 
	`as£π
–
pTask
->
bD⁄e
==1 );

1121 
pTask
->
bD⁄e
 = 0;

1122 
pTask
->
pThªad
 = 0;

1124  
rc
;

1125 
	}
}

1130 
vdbeS‹ãrCª©eThªad
(

1131 
S‹tSubèsk
 *
pTask
,

1132 *(*
xTask
)(*),

1133 *
pIn


1135 
as£π
–
pTask
->
pThªad
==0 &&ÖTask->
bD⁄e
==0 );

1136  
sqlôe3ThªadCª©e
(&
pTask
->
pThªad
, 
xTask
, 
pIn
);

1143 
	$vdbeS‹ãrJoöAŒ
(
VdbeS‹ãr
 *
pS‹ãr
, 
rcö
){

1144 
rc
 = 
rcö
;

1145 
i
;

1154 
i
=
pS‹ãr
->
nTask
-1; i>=0; i--){

1155 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

1156 
rc2
 = 
	`vdbeS‹ãrJoöThªad
(
pTask
);

1157 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

1159  
rc
;

1160 
	}
}

1162 
	#vdbeS‹ãrJoöAŒ
(
x
,
rcö
Ë‘cö)

	)

1163 
	#vdbeS‹ãrJoöThªad
(
pTask
Ë
SQLITE_OK


	)

1173 
MîgeEngöe
 *
	$vdbeMîgeEngöeNew
(
nRódî
){

1174 
N
 = 2;

1175 
nByã
;

1176 
MîgeEngöe
 *
pNew
;

1178 
	`as£π
–
nRódî
<=
SORTER_MAX_MERGE_COUNT
 );

1180  
N
<
nRódî
 ) N += N;

1181 
nByã
 = (
MîgeEngöe
Ë+ 
N
 * ((Ë+ (
PmaRódî
));

1183 
pNew
 = 
	`sqlôe3Fau…Sim
(100Ë? 0 : (
MîgeEngöe
*)
	`sqlôe3MÆlocZîo
(
nByã
);

1184 if–
pNew
 ){

1185 
pNew
->
nTªe
 = 
N
;

1186 
pNew
->
pTask
 = 0;

1187 
pNew
->
aRódr
 = (
PmaRódî
*)&pNew[1];

1188 
pNew
->
aTªe
 = (*)&pNew->
aRódr
[
N
];

1190  
pNew
;

1191 
	}
}

1196 
	$vdbeMîgeEngöeFªe
(
MîgeEngöe
 *
pMîgî
){

1197 
i
;

1198 if–
pMîgî
 ){

1199 
i
=0; i<
pMîgî
->
nTªe
; i++){

1200 
	`vdbePmaRódîCÀ¨
(&
pMîgî
->
aRódr
[
i
]);

1203 
	`sqlôe3_‰ì
(
pMîgî
);

1204 
	}
}

1210 
	$vdbeIn¸Fªe
(
In¸Mîgî
 *
pIn¸
){

1211 if–
pIn¸
 ){

1212 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1213 if–
pIn¸
->
bU£Thªad
 ){

1214 
	`vdbeS‹ãrJoöThªad
(
pIn¸
->
pTask
);

1215 if–
pIn¸
->
aFûe
[0].
pFd
 ) 
	`sqlôe3OsClo£Fªe
(pIncr->aFile[0].pFd);

1216 if–
pIn¸
->
aFûe
[1].
pFd
 ) 
	`sqlôe3OsClo£Fªe
(pIncr->aFile[1].pFd);

1219 
	`vdbeMîgeEngöeFªe
(
pIn¸
->
pMîgî
);

1220 
	`sqlôe3_‰ì
(
pIn¸
);

1222 
	}
}

1227 
	$sqlôe3VdbeS‹ãrRe£t
(
sqlôe3
 *
db
, 
VdbeS‹ãr
 *
pS‹ãr
){

1228 
i
;

1229 ()
	`vdbeS‹ãrJoöAŒ
(
pS‹ãr
, 
SQLITE_OK
);

1230 
	`as£π
–
pS‹ãr
->
bU£Thªads
 ||ÖS‹ãr->
pRódî
==0 );

1231 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1232 if–
pS‹ãr
->
pRódî
 ){

1233 
	`vdbePmaRódîCÀ¨
(
pS‹ãr
->
pRódî
);

1234 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
->
pRódî
);

1235 
pS‹ãr
->
pRódî
 = 0;

1238 
	`vdbeMîgeEngöeFªe
(
pS‹ãr
->
pMîgî
);

1239 
pS‹ãr
->
pMîgî
 = 0;

1240 
i
=0; i<
pS‹ãr
->
nTask
; i++){

1241 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
i
];

1242 
	`vdbeS‹tSubèskCÀ™up
(
db
, 
pTask
);

1243 
pTask
->
pS‹ãr
 =ÖSorter;

1245 if–
pS‹ãr
->
li°
.
aMem‹y
==0 ){

1246 
	`vdbeS‹ãrRec‹dFªe
(0, 
pS‹ãr
->
li°
.
pLi°
);

1248 
pS‹ãr
->
li°
.
pLi°
 = 0;

1249 
pS‹ãr
->
li°
.
szPMA
 = 0;

1250 
pS‹ãr
->
bU£PMA
 = 0;

1251 
pS‹ãr
->
iMem‹y
 = 0;

1252 
pS‹ãr
->
mxKeysize
 = 0;

1253 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
->
pU≈acked
);

1254 
pS‹ãr
->
pU≈acked
 = 0;

1255 
	}
}

1260 
	$sqlôe3VdbeS‹ãrClo£
(
sqlôe3
 *
db
, 
VdbeCurs‹
 *
pC§
){

1261 
VdbeS‹ãr
 *
pS‹ãr
;

1262 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

1263 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

1264 if–
pS‹ãr
 ){

1265 
	`sqlôe3VdbeS‹ãrRe£t
(
db
, 
pS‹ãr
);

1266 
	`sqlôe3_‰ì
(
pS‹ãr
->
li°
.
aMem‹y
);

1267 
	`sqlôe3DbFªe
(
db
, 
pS‹ãr
);

1268 
pC§
->
uc
.
pS‹ãr
 = 0;

1270 
	}
}

1272 #i‡
SQLITE_MAX_MMAP_SIZE
>0

1282 
	$vdbeS‹ãrExãndFûe
(
sqlôe3
 *
db
, 
sqlôe3_fûe
 *
pFd
, 
i64
 
nByã
){

1283 if–
nByã
<=(
i64
)(
db
->
nMaxS‹ãrMm≠
Ë&& 
pFd
->
pMëhods
->
iVîsi⁄
>=3 ){

1284 *
p
 = 0;

1285 
chunksize
 = 4*1024;

1286 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFd
, 
SQLITE_FCNTL_CHUNK_SIZE
, &
chunksize
);

1287 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pFd
, 
SQLITE_FCNTL_SIZE_HINT
, &
nByã
);

1288 
	`sqlôe3OsFëch
(
pFd
, 0, ()
nByã
, &
p
);

1289 
	`sqlôe3OsUn„tch
(
pFd
, 0, 
p
);

1291 
	}
}

1293 
	#vdbeS‹ãrExãndFûe
(
x
,
y
,
z
)

	)

1301 
	$vdbeS‹ãrO≥nTempFûe
(

1302 
sqlôe3
 *
db
,

1303 
i64
 
nExãnd
,

1304 
sqlôe3_fûe
 **
µFd


1306 
rc
;

1307 if–
	`sqlôe3Fau…Sim
(202ËË 
SQLITE_IOERR_ACCESS
;

1308 
rc
 = 
	`sqlôe3OsO≥nMÆloc
(
db
->
pVfs
, 0, 
µFd
,

1309 
SQLITE_OPEN_TEMP_JOURNAL
 |

1310 
SQLITE_OPEN_READWRITE
 | 
SQLITE_OPEN_CREATE
 |

1311 
SQLITE_OPEN_EXCLUSIVE
 | 
SQLITE_OPEN_DELETEONCLOSE
, &
rc


1313 if–
rc
==
SQLITE_OK
 ){

1314 
i64
 
max
 = 
SQLITE_MAX_MMAP_SIZE
;

1315 
	`sqlôe3OsFûeC⁄åﬁHöt
(*
µFd
, 
SQLITE_FCNTL_MMAP_SIZE
, (*)&
max
);

1316 if–
nExãnd
>0 ){

1317 
	`vdbeS‹ãrExãndFûe
(
db
, *
µFd
, 
nExãnd
);

1320  
rc
;

1321 
	}
}

1328 
	$vdbeS‹tAŒocU≈acked
(
S‹tSubèsk
 *
pTask
){

1329 if–
pTask
->
pU≈acked
==0 ){

1330 *
pFªe
;

1331 
pTask
->
pU≈acked
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(

1332 
pTask
->
pS‹ãr
->
pKeyInfo
, 0, 0, &
pFªe


1334 
	`as£π
–
pTask
->
pU≈acked
==(
U≈ackedRec‹d
*)
pFªe
 );

1335 if–
pFªe
==0 )  
SQLITE_NOMEM_BKPT
;

1336 
pTask
->
pU≈acked
->
nFõld
 =ÖTask->
pS‹ãr
->
pKeyInfo
->nField;

1337 
pTask
->
pU≈acked
->
îrCode
 = 0;

1339  
SQLITE_OK
;

1340 
	}
}

1346 
S‹ãrRec‹d
 *
	$vdbeS‹ãrMîge
(

1347 
S‹tSubèsk
 *
pTask
,

1348 
S‹ãrRec‹d
 *
p1
,

1349 
S‹ãrRec‹d
 *
p2


1351 
S‹ãrRec‹d
 *
pFöÆ
 = 0;

1352 
S‹ãrRec‹d
 **
µ
 = &
pFöÆ
;

1353 
bCached
 = 0;

1355 
	`as£π
–
p1
!=0 && 
p2
!=0 );

1357 
ªs
;

1358 
ªs
 = 
pTask
->
	`xCom∑ª
(

1359 
pTask
, &
bCached
, 
	`SRVAL
(
p1
),Ö1->
nVÆ
, SRVAL(
p2
),Ö2->nVal

1362 if–
ªs
<=0 ){

1363 *
µ
 = 
p1
;

1364 
µ
 = &
p1
->
u
.
pNext
;

1365 
p1
 =Ö1->
u
.
pNext
;

1366 if–
p1
==0 ){

1367 *
µ
 = 
p2
;

1371 *
µ
 = 
p2
;

1372 
µ
 = &
p2
->
u
.
pNext
;

1373 
p2
 =Ö2->
u
.
pNext
;

1374 
bCached
 = 0;

1375 if–
p2
==0 ){

1376 *
µ
 = 
p1
;

1381  
pFöÆ
;

1382 
	}
}

1388 
S‹ãrCom∑ª
 
	$vdbeS‹ãrGëCom∑ª
(
VdbeS‹ãr
 *
p
){

1389 if–
p
->
ty≥Mask
==
SORTER_TYPE_INTEGER
 ){

1390  
vdbeS‹ãrCom∑ªI¡
;

1391 }if–
p
->
ty≥Mask
==
SORTER_TYPE_TEXT
 ){

1392  
vdbeS‹ãrCom∑ªText
;

1394  
vdbeS‹ãrCom∑ª
;

1395 
	}
}

1402 
	$vdbeS‹ãrS‹t
(
S‹tSubèsk
 *
pTask
, 
S‹ãrLi°
 *
pLi°
){

1403 
i
;

1404 
S‹ãrRec‹d
 **
aSlŸ
;

1405 
S‹ãrRec‹d
 *
p
;

1406 
rc
;

1408 
rc
 = 
	`vdbeS‹tAŒocU≈acked
(
pTask
);

1409 if–
rc
!=
SQLITE_OK
 ) Ñc;

1411 
p
 = 
pLi°
->pList;

1412 
pTask
->
xCom∑ª
 = 
	`vdbeS‹ãrGëCom∑ª
’Task->
pS‹ãr
);

1414 
aSlŸ
 = (
S‹ãrRec‹d
 **)
	`sqlôe3MÆlocZîo
(64 * (SorterRecord *));

1415 if–!
aSlŸ
 ){

1416  
SQLITE_NOMEM_BKPT
;

1419  
p
 ){

1420 
S‹ãrRec‹d
 *
pNext
;

1421 if–
pLi°
->
aMem‹y
 ){

1422 if–(
u8
*)
p
==
pLi°
->
aMem‹y
 ){

1423 
pNext
 = 0;

1425 
	`as£π
–
p
->
u
.
iNext
<
	`sqlôe3MÆlocSize
(
pLi°
->
aMem‹y
) );

1426 
pNext
 = (
S‹ãrRec‹d
*)&
pLi°
->
aMem‹y
[
p
->
u
.
iNext
];

1429 
pNext
 = 
p
->
u
.pNext;

1432 
p
->
u
.
pNext
 = 0;

1433 
i
=0; 
aSlŸ
[i]; i++){

1434 
p
 = 
	`vdbeS‹ãrMîge
(
pTask
,Ö, 
aSlŸ
[
i
]);

1435 
aSlŸ
[
i
] = 0;

1437 
aSlŸ
[
i
] = 
p
;

1438 
p
 = 
pNext
;

1441 
p
 = 0;

1442 
i
=0; i<64; i++){

1443 if–
aSlŸ
[
i
]==0 ) ;

1444 
p
 =Ö ? 
	`vdbeS‹ãrMîge
(
pTask
,Ö, 
aSlŸ
[
i
]) :áSlot[i];

1446 
pLi°
->pLi° = 
p
;

1448 
	`sqlôe3_‰ì
(
aSlŸ
);

1449 
	`as£π
–
pTask
->
pU≈acked
->
îrCode
==
SQLITE_OK


1450 || 
pTask
->
pU≈acked
->
îrCode
==
SQLITE_NOMEM


1452  
pTask
->
pU≈acked
->
îrCode
;

1453 
	}
}

1458 
	$vdbePmaWrôîInô
(

1459 
sqlôe3_fûe
 *
pFd
,

1460 
PmaWrôî
 *
p
,

1461 
nBuf
,

1462 
i64
 
iSèπ


1464 
	`mem£t
(
p
, 0, (
PmaWrôî
));

1465 
p
->
aBuf„r
 = (
u8
*)
	`sqlôe3MÆloc
(
nBuf
);

1466 if–!
p
->
aBuf„r
 ){

1467 
p
->
eFWEº
 = 
SQLITE_NOMEM_BKPT
;

1469 
p
->
iBufEnd
 =Ö->
iBufSèπ
 = (
iSèπ
 % 
nBuf
);

1470 
p
->
iWrôeOff
 = 
iSèπ
 -Ö->
iBufSèπ
;

1471 
p
->
nBuf„r
 = 
nBuf
;

1472 
p
->
pFd
 =ÖFd;

1474 
	}
}

1480 
	$vdbePmaWrôeBlob
(
PmaWrôî
 *
p
, 
u8
 *
pD©a
, 
nD©a
){

1481 
nRem
 = 
nD©a
;

1482  
nRem
>0 && 
p
->
eFWEº
==0 ){

1483 
nC›y
 = 
nRem
;

1484 if–
nC›y
>(
p
->
nBuf„r
 -Ö->
iBufEnd
) ){

1485 
nC›y
 = 
p
->
nBuf„r
 -Ö->
iBufEnd
;

1488 
	`mem˝y
(&
p
->
aBuf„r
[p->
iBufEnd
], &
pD©a
[
nD©a
-
nRem
], 
nC›y
);

1489 
p
->
iBufEnd
 +
nC›y
;

1490 if–
p
->
iBufEnd
=ı->
nBuf„r
 ){

1491 
p
->
eFWEº
 = 
	`sqlôe3OsWrôe
’->
pFd
,

1492 &
p
->
aBuf„r
[p->
iBufSèπ
],Ö->
iBufEnd
 -Ö->iBufStart,

1493 
p
->
iWrôeOff
 +Ö->
iBufSèπ


1495 
p
->
iBufSèπ
 =Ö->
iBufEnd
 = 0;

1496 
p
->
iWrôeOff
 +p->
nBuf„r
;

1498 
	`as£π
–
p
->
iBufEnd
<p->
nBuf„r
 );

1500 
nRem
 -
nC›y
;

1502 
	}
}

1513 
	$vdbePmaWrôîFöish
(
PmaWrôî
 *
p
, 
i64
 *
piEof
){

1514 
rc
;

1515 if–
p
->
eFWEº
==0 && 
	`ALWAYS
’->
aBuf„r
Ë&&Ö->
iBufEnd
>p->
iBufSèπ
 ){

1516 
p
->
eFWEº
 = 
	`sqlôe3OsWrôe
’->
pFd
,

1517 &
p
->
aBuf„r
[p->
iBufSèπ
],Ö->
iBufEnd
 -Ö->iBufStart,

1518 
p
->
iWrôeOff
 +Ö->
iBufSèπ


1521 *
piEof
 = (
p
->
iWrôeOff
 +Ö->
iBufEnd
);

1522 
	`sqlôe3_‰ì
(
p
->
aBuf„r
);

1523 
rc
 = 
p
->
eFWEº
;

1524 
	`mem£t
(
p
, 0, (
PmaWrôî
));

1525  
rc
;

1526 
	}
}

1532 
	$vdbePmaWrôeV¨öt
(
PmaWrôî
 *
p
, 
u64
 
iVÆ
){

1533 
nByã
;

1534 
u8
 
aByã
[10];

1535 
nByã
 = 
	`sqlôe3PutV¨öt
(
aByã
, 
iVÆ
);

1536 
	`vdbePmaWrôeBlob
(
p
, 
aByã
, 
nByã
);

1537 
	}
}

1553 
	$vdbeS‹ãrLi°ToPMA
(
S‹tSubèsk
 *
pTask
, 
S‹ãrLi°
 *
pLi°
){

1554 
sqlôe3
 *
db
 = 
pTask
->
pS‹ãr
->db;

1555 
rc
 = 
SQLITE_OK
;

1556 
PmaWrôî
 
wrôî
;

1558 #ifde‡
SQLITE_DEBUG


1561 
i64
 
iSz
 = 
pLi°
->
szPMA
 + 
	`sqlôe3V¨ötLí
’Li°->szPMAË+ 
pTask
->
fûe
.
iEof
;

1564 
	`vdbeS‹ãrW‹kDebug
(
pTask
, "enter");

1565 
	`mem£t
(&
wrôî
, 0, (
PmaWrôî
));

1566 
	`as£π
–
pLi°
->
szPMA
>0 );

1569 if–
pTask
->
fûe
.
pFd
==0 ){

1570 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 0, &
pTask
->
fûe
.
pFd
);

1571 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pTask
->
fûe
.
pFd
 );

1572 
	`as£π
–
pTask
->
fûe
.
iEof
==0 );

1573 
	`as£π
–
pTask
->
nPMA
==0 );

1577 if–
rc
==
SQLITE_OK
 ){

1578 
	`vdbeS‹ãrExãndFûe
(
db
, 
pTask
->
fûe
.
pFd
,ÖTask->fûe.
iEof
+
pLi°
->
szPMA
+9);

1582 if–
rc
==
SQLITE_OK
 ){

1583 
rc
 = 
	`vdbeS‹ãrS‹t
(
pTask
, 
pLi°
);

1586 if–
rc
==
SQLITE_OK
 ){

1587 
S‹ãrRec‹d
 *
p
;

1588 
S‹ãrRec‹d
 *
pNext
 = 0;

1590 
	`vdbePmaWrôîInô
(
pTask
->
fûe
.
pFd
, &
wrôî
,ÖTask->
pS‹ãr
->
pgsz
,

1591 
pTask
->
fûe
.
iEof
);

1592 
pTask
->
nPMA
++;

1593 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
pLi°
->
szPMA
);

1594 
p
=
pLi°
->pLi°;Ö;Ö=
pNext
){

1595 
pNext
 = 
p
->
u
.pNext;

1596 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
p
->
nVÆ
);

1597 
	`vdbePmaWrôeBlob
(&
wrôî
, 
	`SRVAL
(
p
),Ö->
nVÆ
);

1598 if–
pLi°
->
aMem‹y
==0 ) 
	`sqlôe3_‰ì
(
p
);

1600 
pLi°
->pLi° = 
p
;

1601 
rc
 = 
	`vdbePmaWrôîFöish
(&
wrôî
, &
pTask
->
fûe
.
iEof
);

1604 
	`vdbeS‹ãrW‹kDebug
(
pTask
, "exit");

1605 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pLi°
->pList==0 );

1606 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pTask
->
fûe
.
iEof
==
iSz
 );

1607  
rc
;

1608 
	}
}

1617 
	$vdbeMîgeEngöeSãp
(

1618 
MîgeEngöe
 *
pMîgî
,

1619 *
pbEof


1621 
rc
;

1622 
iPªv
 = 
pMîgî
->
aTªe
[1];

1623 
S‹tSubèsk
 *
pTask
 = 
pMîgî
->pTask;

1626 
rc
 = 
	`vdbePmaRódîNext
(&
pMîgî
->
aRódr
[
iPªv
]);

1629 if–
rc
==
SQLITE_OK
 ){

1630 
i
;

1631 
PmaRódî
 *
pRódr1
;

1632 
PmaRódî
 *
pRódr2
;

1633 
bCached
 = 0;

1637 
pRódr1
 = &
pMîgî
->
aRódr
[(
iPªv
 & 0xFFFE)];

1638 
pRódr2
 = &
pMîgî
->
aRódr
[(
iPªv
 | 0x0001)];

1640 
i
=(
pMîgî
->
nTªe
+
iPªv
)/2; i>0; i=i/2){

1642 
iRes
;

1643 if–
pRódr1
->
pFd
==0 ){

1644 
iRes
 = +1;

1645 }if–
pRódr2
->
pFd
==0 ){

1646 
iRes
 = -1;

1648 
iRes
 = 
pTask
->
	`xCom∑ª
’Task, &
bCached
,

1649 
pRódr1
->
aKey
,ÖRódr1->
nKey
, 
pRódr2
->aKey,ÖReadr2->nKey

1668 if–
iRes
<0 || (iRes==0 && 
pRódr1
<
pRódr2
) ){

1669 
pMîgî
->
aTªe
[
i
] = ()(
pRódr1
 -ÖMîgî->
aRódr
);

1670 
pRódr2
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[
i
 ^ 0x0001] ];

1671 
bCached
 = 0;

1673 if–
pRódr1
->
pFd
 ) 
bCached
 = 0;

1674 
pMîgî
->
aTªe
[
i
] = ()(
pRódr2
 -ÖMîgî->
aRódr
);

1675 
pRódr1
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[
i
 ^ 0x0001] ];

1678 *
pbEof
 = (
pMîgî
->
aRódr
[pMîgî->
aTªe
[1]].
pFd
==0);

1681  (
rc
==
SQLITE_OK
 ? 
pTask
->
pU≈acked
->
îrCode
 :Ñc);

1682 
	}
}

1684 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1688 *
	$vdbeS‹ãrFlushThªad
(*
pCtx
){

1689 
S‹tSubèsk
 *
pTask
 = (S‹tSubèsk*)
pCtx
;

1690 
rc
;

1691 
	`as£π
–
pTask
->
bD⁄e
==0 );

1692 
rc
 = 
	`vdbeS‹ãrLi°ToPMA
(
pTask
, &pTask->
li°
);

1693 
pTask
->
bD⁄e
 = 1;

1694  
	`SQLITE_INT_TO_PTR
(
rc
);

1695 
	}
}

1702 
	$vdbeS‹ãrFlushPMA
(
VdbeS‹ãr
 *
pS‹ãr
){

1703 #i‡
SQLITE_MAX_WORKER_THREADS
==0

1704 
pS‹ãr
->
bU£PMA
 = 1;

1705  
	`vdbeS‹ãrLi°ToPMA
(&
pS‹ãr
->
aTask
[0], &pS‹ãr->
li°
);

1707 
rc
 = 
SQLITE_OK
;

1708 
i
;

1709 
S‹tSubèsk
 *
pTask
 = 0;

1710 
nW‹kî
 = (
pS‹ãr
->
nTask
-1);

1714 
pS‹ãr
->
bU£PMA
 = 1;

1724 
i
=0; i<
nW‹kî
; i++){

1725 
iTe°
 = (
pS‹ãr
->
iPªv
 + 
i
 + 1Ë% 
nW‹kî
;

1726 
pTask
 = &
pS‹ãr
->
aTask
[
iTe°
];

1727 if–
pTask
->
bD⁄e
 ){

1728 
rc
 = 
	`vdbeS‹ãrJoöThªad
(
pTask
);

1730 if–
rc
!=
SQLITE_OK
 || 
pTask
->
pThªad
==0 ) ;

1733 if–
rc
==
SQLITE_OK
 ){

1734 if–
i
==
nW‹kî
 ){

1736 
rc
 = 
	`vdbeS‹ãrLi°ToPMA
(&
pS‹ãr
->
aTask
[
nW‹kî
], &pS‹ãr->
li°
);

1739 
u8
 *
aMem
 = 
pTask
->
li°
.
aMem‹y
;

1740 *
pCtx
 = (*)
pTask
;

1742 
	`as£π
–
pTask
->
pThªad
==0 &&ÖTask->
bD⁄e
==0 );

1743 
	`as£π
–
pTask
->
li°
.
pLi°
==0 );

1744 
	`as£π
–
pTask
->
li°
.
aMem‹y
==0 || 
pS‹ãr
->list.aMemory!=0 );

1746 
pS‹ãr
->
iPªv
 = (
u8
)(
pTask
 -ÖS‹ãr->
aTask
);

1747 
pTask
->
li°
 = 
pS‹ãr
->list;

1748 
pS‹ãr
->
li°
.
pLi°
 = 0;

1749 
pS‹ãr
->
li°
.
szPMA
 = 0;

1750 if–
aMem
 ){

1751 
pS‹ãr
->
li°
.
aMem‹y
 = 
aMem
;

1752 
pS‹ãr
->
nMem‹y
 = 
	`sqlôe3MÆlocSize
(
aMem
);

1753 }if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1754 
pS‹ãr
->
li°
.
aMem‹y
 = 
	`sqlôe3MÆloc
’S‹ãr->
nMem‹y
);

1755 if–!
pS‹ãr
->
li°
.
aMem‹y
 )  
SQLITE_NOMEM_BKPT
;

1758 
rc
 = 
	`vdbeS‹ãrCª©eThªad
(
pTask
, 
vdbeS‹ãrFlushThªad
, 
pCtx
);

1762  
rc
;

1764 
	}
}

1769 
	$sqlôe3VdbeS‹ãrWrôe
(

1770 c⁄° 
VdbeCurs‹
 *
pC§
,

1771 
Mem
 *
pVÆ


1773 
VdbeS‹ãr
 *
pS‹ãr
;

1774 
rc
 = 
SQLITE_OK
;

1775 
S‹ãrRec‹d
 *
pNew
;

1776 
bFlush
;

1777 
nReq
;

1778 
nPMA
;

1779 
t
;

1781 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

1782 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

1783 
	`gëV¨öt32
((c⁄° 
u8
*)&
pVÆ
->
z
[1], 
t
);

1784 if–
t
>0 &&Å<10 &&Å!=7 ){

1785 
pS‹ãr
->
ty≥Mask
 &
SORTER_TYPE_INTEGER
;

1786 }if–
t
>10 && (t & 0x01) ){

1787 
pS‹ãr
->
ty≥Mask
 &
SORTER_TYPE_TEXT
;

1789 
pS‹ãr
->
ty≥Mask
 = 0;

1792 
	`as£π
–
pS‹ãr
 );

1810 
nReq
 = 
pVÆ
->
n
 + (
S‹ãrRec‹d
);

1811 
nPMA
 = 
pVÆ
->
n
 + 
	`sqlôe3V¨ötLí
(pVal->n);

1812 if–
pS‹ãr
->
mxPmaSize
 ){

1813 if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1814 
bFlush
 = 
pS‹ãr
->
iMem‹y
 && (pS‹ãr->iMem‹y+
nReq
Ë>ÖS‹ãr->
mxPmaSize
;

1816 
bFlush
 = (

1817 (
pS‹ãr
->
li°
.
szPMA
 >ÖS‹ãr->
mxPmaSize
)

1818 || (
pS‹ãr
->
li°
.
szPMA
 >ÖS‹ãr->
mnPmaSize
 && 
	`sqlôe3HópNóæyFuŒ
())

1821 if–
bFlush
 ){

1822 
rc
 = 
	`vdbeS‹ãrFlushPMA
(
pS‹ãr
);

1823 
pS‹ãr
->
li°
.
szPMA
 = 0;

1824 
pS‹ãr
->
iMem‹y
 = 0;

1825 
	`as£π
–
rc
!=
SQLITE_OK
 || 
pS‹ãr
->
li°
.
pLi°
==0 );

1829 
pS‹ãr
->
li°
.
szPMA
 +
nPMA
;

1830 if–
nPMA
>
pS‹ãr
->
mxKeysize
 ){

1831 
pS‹ãr
->
mxKeysize
 = 
nPMA
;

1834 if–
pS‹ãr
->
li°
.
aMem‹y
 ){

1835 
nMö
 = 
pS‹ãr
->
iMem‹y
 + 
nReq
;

1837 if–
nMö
>
pS‹ãr
->
nMem‹y
 ){

1838 
u8
 *
aNew
;

1839 
iLi°Off
 = (
u8
*)
pS‹ãr
->
li°
.
pLi°
 -ÖS‹ãr->li°.
aMem‹y
;

1840 
nNew
 = 
pS‹ãr
->
nMem‹y
 * 2;

1841  
nNew
 < 
nMö
 )ÇNew =ÇNew*2;

1842 if–
nNew
 > 
pS‹ãr
->
mxPmaSize
 )ÇNew =ÖSorter->mxPmaSize;

1843 if–
nNew
 < 
nMö
 )ÇNew =ÇMin;

1845 
aNew
 = 
	`sqlôe3RóŒoc
(
pS‹ãr
->
li°
.
aMem‹y
, 
nNew
);

1846 if–!
aNew
 )  
SQLITE_NOMEM_BKPT
;

1847 
pS‹ãr
->
li°
.
pLi°
 = (
S‹ãrRec‹d
*)&
aNew
[
iLi°Off
];

1848 
pS‹ãr
->
li°
.
aMem‹y
 = 
aNew
;

1849 
pS‹ãr
->
nMem‹y
 = 
nNew
;

1852 
pNew
 = (
S‹ãrRec‹d
*)&
pS‹ãr
->
li°
.
aMem‹y
[pS‹ãr->
iMem‹y
];

1853 
pS‹ãr
->
iMem‹y
 +
	`ROUND8
(
nReq
);

1854 if–
pS‹ãr
->
li°
.
pLi°
 ){

1855 
pNew
->
u
.
iNext
 = ()((
u8
*)(
pS‹ãr
->
li°
.
pLi°
Ë-ÖS‹ãr->li°.
aMem‹y
);

1858 
pNew
 = (
S‹ãrRec‹d
 *)
	`sqlôe3MÆloc
(
nReq
);

1859 if–
pNew
==0 ){

1860  
SQLITE_NOMEM_BKPT
;

1862 
pNew
->
u
.
pNext
 = 
pS‹ãr
->
li°
.
pLi°
;

1865 
	`mem˝y
(
	`SRVAL
(
pNew
), 
pVÆ
->
z
,ÖVÆ->
n
);

1866 
pNew
->
nVÆ
 = 
pVÆ
->
n
;

1867 
pS‹ãr
->
li°
.
pLi°
 = 
pNew
;

1869  
rc
;

1870 
	}
}

1877 
	$vdbeIn¸P›uœã
(
In¸Mîgî
 *
pIn¸
){

1878 
rc
 = 
SQLITE_OK
;

1879 
rc2
;

1880 
i64
 
iSèπ
 = 
pIn¸
->
iSèπOff
;

1881 
S‹ãrFûe
 *
pOut
 = &
pIn¸
->
aFûe
[1];

1882 
S‹tSubèsk
 *
pTask
 = 
pIn¸
->pTask;

1883 
MîgeEngöe
 *
pMîgî
 = 
pIn¸
->pMerger;

1884 
PmaWrôî
 
wrôî
;

1885 
	`as£π
–
pIn¸
->
bEof
==0 );

1887 
	`vdbeS‹ãrP›uœãDebug
(
pTask
, "enter");

1889 
	`vdbePmaWrôîInô
(
pOut
->
pFd
, &
wrôî
, 
pTask
->
pS‹ãr
->
pgsz
, 
iSèπ
);

1890  
rc
==
SQLITE_OK
 ){

1891 
dummy
;

1892 
PmaRódî
 *
pRódî
 = &
pMîgî
->
aRódr
[ÖMîgî->
aTªe
[1] ];

1893 
nKey
 = 
pRódî
->nKey;

1894 
i64
 
iEof
 = 
wrôî
.
iWrôeOff
 + wrôî.
iBufEnd
;

1898 if–
pRódî
->
pFd
==0 ) ;

1899 if–(
iEof
 + 
nKey
 + 
	`sqlôe3V¨ötLí
“Key))>(
iSèπ
 + 
pIn¸
->
mxSz
) ) ;

1902 
	`vdbePmaWrôeV¨öt
(&
wrôî
, 
nKey
);

1903 
	`vdbePmaWrôeBlob
(&
wrôî
, 
pRódî
->
aKey
, 
nKey
);

1904 
	`as£π
–
pIn¸
->
pMîgî
->
pTask
==pTask );

1905 
rc
 = 
	`vdbeMîgeEngöeSãp
(
pIn¸
->
pMîgî
, &
dummy
);

1908 
rc2
 = 
	`vdbePmaWrôîFöish
(&
wrôî
, &
pOut
->
iEof
);

1909 if–
rc
==
SQLITE_OK
 )Ñ¯
rc2
;

1910 
	`vdbeS‹ãrP›uœãDebug
(
pTask
, "exit");

1911  
rc
;

1912 
	}
}

1914 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1919 *
	$vdbeIn¸P›uœãThªad
(*
pCtx
){

1920 
In¸Mîgî
 *
pIn¸
 = (In¸Mîgî*)
pCtx
;

1921 *
pRë
 = 
	`SQLITE_INT_TO_PTR
–
	`vdbeIn¸P›uœã
(
pIn¸
) );

1922 
pIn¸
->
pTask
->
bD⁄e
 = 1;

1923  
pRë
;

1924 
	}
}

1929 
	$vdbeIn¸BgP›uœã
(
In¸Mîgî
 *
pIn¸
){

1930 *
p
 = (*)
pIn¸
;

1931 
	`as£π
–
pIn¸
->
bU£Thªad
 );

1932  
	`vdbeS‹ãrCª©eThªad
(
pIn¸
->
pTask
, 
vdbeIn¸P›uœãThªad
, 
p
);

1933 
	}
}

1953 
	$vdbeIn¸Sw≠
(
In¸Mîgî
 *
pIn¸
){

1954 
rc
 = 
SQLITE_OK
;

1956 #i‡
SQLITE_MAX_WORKER_THREADS
>0

1957 if–
pIn¸
->
bU£Thªad
 ){

1958 
rc
 = 
	`vdbeS‹ãrJoöThªad
(
pIn¸
->
pTask
);

1960 if–
rc
==
SQLITE_OK
 ){

1961 
S‹ãrFûe
 
f0
 = 
pIn¸
->
aFûe
[0];

1962 
pIn¸
->
aFûe
[0] =ÖIncr->aFile[1];

1963 
pIn¸
->
aFûe
[1] = 
f0
;

1966 if–
rc
==
SQLITE_OK
 ){

1967 if–
pIn¸
->
aFûe
[0].
iEof
=ıIn¸->
iSèπOff
 ){

1968 
pIn¸
->
bEof
 = 1;

1970 
rc
 = 
	`vdbeIn¸BgP›uœã
(
pIn¸
);

1976 
rc
 = 
	`vdbeIn¸P›uœã
(
pIn¸
);

1977 
pIn¸
->
aFûe
[0] =ÖIncr->aFile[1];

1978 if–
pIn¸
->
aFûe
[0].
iEof
=ıIn¸->
iSèπOff
 ){

1979 
pIn¸
->
bEof
 = 1;

1983  
rc
;

1984 
	}
}

1992 
	$vdbeIn¸MîgîNew
(

1993 
S‹tSubèsk
 *
pTask
,

1994 
MîgeEngöe
 *
pMîgî
,

1995 
In¸Mîgî
 **
µOut


1997 
rc
 = 
SQLITE_OK
;

1998 
In¸Mîgî
 *
pIn¸
 = *
µOut
 = (IncrMerger*)

1999 (
	`sqlôe3Fau…Sim
(100Ë? 0 : 
	`sqlôe3MÆlocZîo
((*
pIn¸
)));

2000 if–
pIn¸
 ){

2001 
pIn¸
->
pMîgî
 =ÖMerger;

2002 
pIn¸
->
pTask
 =ÖTask;

2003 
pIn¸
->
mxSz
 = 
	`MAX
(
pTask
->
pS‹ãr
->
mxKeysize
+9,pTask->pS‹ãr->
mxPmaSize
/2);

2004 
pTask
->
fûe2
.
iEof
 +
pIn¸
->
mxSz
;

2006 
	`vdbeMîgeEngöeFªe
(
pMîgî
);

2007 
rc
 = 
SQLITE_NOMEM_BKPT
;

2009  
rc
;

2010 
	}
}

2012 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2016 
	$vdbeIn¸MîgîSëThªads
(
In¸Mîgî
 *
pIn¸
){

2017 
pIn¸
->
bU£Thªad
 = 1;

2018 
pIn¸
->
pTask
->
fûe2
.
iEof
 -pIn¸->
mxSz
;

2019 
	}
}

2029 
	$vdbeMîgeEngöeCom∑ª
(

2030 
MîgeEngöe
 *
pMîgî
,

2031 
iOut


2033 
i1
;

2034 
i2
;

2035 
iRes
;

2036 
PmaRódî
 *
p1
;

2037 
PmaRódî
 *
p2
;

2039 
	`as£π
–
iOut
<
pMîgî
->
nTªe
 && iOut>0 );

2041 if–
iOut
>=(
pMîgî
->
nTªe
/2) ){

2042 
i1
 = (
iOut
 - 
pMîgî
->
nTªe
/2) * 2;

2043 
i2
 = 
i1
 + 1;

2045 
i1
 = 
pMîgî
->
aTªe
[
iOut
*2];

2046 
i2
 = 
pMîgî
->
aTªe
[
iOut
*2+1];

2049 
p1
 = &
pMîgî
->
aRódr
[
i1
];

2050 
p2
 = &
pMîgî
->
aRódr
[
i2
];

2052 if–
p1
->
pFd
==0 ){

2053 
iRes
 = 
i2
;

2054 }if–
p2
->
pFd
==0 ){

2055 
iRes
 = 
i1
;

2057 
S‹tSubèsk
 *
pTask
 = 
pMîgî
->pTask;

2058 
bCached
 = 0;

2059 
ªs
;

2060 
	`as£π
–
pTask
->
pU≈acked
!=0 );

2061 
ªs
 = 
pTask
->
	`xCom∑ª
(

2062 
pTask
, &
bCached
, 
p1
->
aKey
,Ö1->
nKey
, 
p2
->aKey,Ö2->nKey

2064 if–
ªs
<=0 ){

2065 
iRes
 = 
i1
;

2067 
iRes
 = 
i2
;

2071 
pMîgî
->
aTªe
[
iOut
] = 
iRes
;

2072 
	}
}

2082 
	#INCRINIT_NORMAL
 0

	)

2083 
	#INCRINIT_TASK
 1

	)

2084 
	#INCRINIT_ROOT
 2

	)

2091 
vdbePmaRódîIn¸Inô
(
PmaRódî
 *
pRódr
, 
eMode
);

2111 
	$vdbeMîgeEngöeInô
(

2112 
S‹tSubèsk
 *
pTask
,

2113 
MîgeEngöe
 *
pMîgî
,

2114 
eMode


2116 
rc
 = 
SQLITE_OK
;

2117 
i
;

2118 
nTªe
 = 
pMîgî
->nTree;

2121 
	`as£π
–
SQLITE_MAX_WORKER_THREADS
>0 || 
eMode
==
INCRINIT_NORMAL
 );

2124 
	`as£π
–
pMîgî
->
pTask
==0 );

2125 
pMîgî
->
pTask
 =ÖTask;

2127 
i
=0; i<
nTªe
; i++){

2128 if–
SQLITE_MAX_WORKER_THREADS
>0 && 
eMode
==
INCRINIT_ROOT
 ){

2136 
rc
 = 
	`vdbePmaRódîNext
(&
pMîgî
->
aRódr
[
nTªe
-
i
-1]);

2138 
rc
 = 
	`vdbePmaRódîIn¸Inô
(&
pMîgî
->
aRódr
[
i
], 
INCRINIT_NORMAL
);

2140 if–
rc
!=
SQLITE_OK
 ) Ñc;

2143 
i
=
pMîgî
->
nTªe
-1; i>0; i--){

2144 
	`vdbeMîgeEngöeCom∑ª
(
pMîgî
, 
i
);

2146  
pTask
->
pU≈acked
->
îrCode
;

2147 
	}
}

2182 
	$vdbePmaRódîIn¸MîgeInô
(
PmaRódî
 *
pRódr
, 
eMode
){

2183 
rc
 = 
SQLITE_OK
;

2184 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

2185 
S‹tSubèsk
 *
pTask
 = 
pIn¸
->pTask;

2186 
sqlôe3
 *
db
 = 
pTask
->
pS‹ãr
->db;

2189 
	`as£π
–
SQLITE_MAX_WORKER_THREADS
>0 || 
eMode
==
INCRINIT_NORMAL
 );

2191 
rc
 = 
	`vdbeMîgeEngöeInô
(
pTask
, 
pIn¸
->
pMîgî
, 
eMode
);

2196 if–
rc
==
SQLITE_OK
 ){

2197 
mxSz
 = 
pIn¸
->mxSz;

2198 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2199 if–
pIn¸
->
bU£Thªad
 ){

2200 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
mxSz
, &
pIn¸
->
aFûe
[0].
pFd
);

2201 if–
rc
==
SQLITE_OK
 ){

2202 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
mxSz
, &
pIn¸
->
aFûe
[1].
pFd
);

2207 if–
pTask
->
fûe2
.
pFd
==0 ){

2208 
	`as£π
–
pTask
->
fûe2
.
iEof
>0 );

2209 
rc
 = 
	`vdbeS‹ãrO≥nTempFûe
(
db
, 
pTask
->
fûe2
.
iEof
, &pTask->fûe2.
pFd
);

2210 
pTask
->
fûe2
.
iEof
 = 0;

2212 if–
rc
==
SQLITE_OK
 ){

2213 
pIn¸
->
aFûe
[1].
pFd
 = 
pTask
->
fûe2
.pFd;

2214 
pIn¸
->
iSèπOff
 = 
pTask
->
fûe2
.
iEof
;

2215 
pTask
->
fûe2
.
iEof
 +
mxSz
;

2220 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2221 if–
rc
==
SQLITE_OK
 && 
pIn¸
->
bU£Thªad
 ){

2232 
	`as£π
–
eMode
==
INCRINIT_ROOT
 ||ÉMode==
INCRINIT_TASK
 );

2233 
rc
 = 
	`vdbeIn¸P›uœã
(
pIn¸
);

2237 if–
rc
==
SQLITE_OK
 && (
SQLITE_MAX_WORKER_THREADS
==0 || 
eMode
!=
INCRINIT_TASK
) ){

2238 
rc
 = 
	`vdbePmaRódîNext
(
pRódr
);

2241  
rc
;

2242 
	}
}

2244 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2249 *
	$vdbePmaRódîBgIn¸Inô
(*
pCtx
){

2250 
PmaRódî
 *
pRódî
 = (PmaRódî*)
pCtx
;

2251 *
pRë
 = 
	`SQLITE_INT_TO_PTR
(

2252 
	`vdbePmaRódîIn¸MîgeInô
(
pRódî
,
INCRINIT_TASK
)

2254 
pRódî
->
pIn¸
->
pTask
->
bD⁄e
 = 1;

2255  
pRë
;

2256 
	}
}

2270 
	$vdbePmaRódîIn¸Inô
(
PmaRódî
 *
pRódr
, 
eMode
){

2271 
In¸Mîgî
 *
pIn¸
 = 
pRódr
->pIncr;

2272 
rc
 = 
SQLITE_OK
;

2273 if–
pIn¸
 ){

2274 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2275 
	`as£π
–
pIn¸
->
bU£Thªad
==0 || 
eMode
==
INCRINIT_TASK
 );

2276 if–
pIn¸
->
bU£Thªad
 ){

2277 *
pCtx
 = (*)
pRódr
;

2278 
rc
 = 
	`vdbeS‹ãrCª©eThªad
(
pIn¸
->
pTask
, 
vdbePmaRódîBgIn¸Inô
, 
pCtx
);

2282 
rc
 = 
	`vdbePmaRódîIn¸MîgeInô
(
pRódr
, 
eMode
);

2285  
rc
;

2286 
	}
}

2300 
	$vdbeMîgeEngöeLevñ0
(

2301 
S‹tSubèsk
 *
pTask
,

2302 
nPMA
,

2303 
i64
 *
piOff£t
,

2304 
MîgeEngöe
 **
µOut


2306 
MîgeEngöe
 *
pNew
;

2307 
i64
 
iOff
 = *
piOff£t
;

2308 
i
;

2309 
rc
 = 
SQLITE_OK
;

2311 *
µOut
 = 
pNew
 = 
	`vdbeMîgeEngöeNew
(
nPMA
);

2312 if–
pNew
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2314 
i
=0; i<
nPMA
 && 
rc
==
SQLITE_OK
; i++){

2315 
i64
 
nDummy
 = 0;

2316 
PmaRódî
 *
pRódr
 = &
pNew
->
aRódr
[
i
];

2317 
rc
 = 
	`vdbePmaRódîInô
(
pTask
, &pTask->
fûe
, 
iOff
, 
pRódr
, &
nDummy
);

2318 
iOff
 = 
pRódr
->
iEof
;

2321 if–
rc
!=
SQLITE_OK
 ){

2322 
	`vdbeMîgeEngöeFªe
(
pNew
);

2323 *
µOut
 = 0;

2325 *
piOff£t
 = 
iOff
;

2326  
rc
;

2327 
	}
}

2339 
	$vdbeS‹ãrTªeDïth
(
nPMA
){

2340 
nDïth
 = 0;

2341 
i64
 
nDiv
 = 
SORTER_MAX_MERGE_COUNT
;

2342  
nDiv
 < (
i64
)
nPMA
 ){

2343 
nDiv
 =ÇDiv * 
SORTER_MAX_MERGE_COUNT
;

2344 
nDïth
++;

2346  
nDïth
;

2347 
	}
}

2357 
	$vdbeS‹ãrAddToTªe
(

2358 
S‹tSubèsk
 *
pTask
,

2359 
nDïth
,

2360 
iSeq
,

2361 
MîgeEngöe
 *
pRoŸ
,

2362 
MîgeEngöe
 *
pLóf


2364 
rc
 = 
SQLITE_OK
;

2365 
nDiv
 = 1;

2366 
i
;

2367 
MîgeEngöe
 *
p
 = 
pRoŸ
;

2368 
In¸Mîgî
 *
pIn¸
;

2370 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pLóf
, &
pIn¸
);

2372 
i
=1; i<
nDïth
; i++){

2373 
nDiv
 =ÇDiv * 
SORTER_MAX_MERGE_COUNT
;

2376 
i
=1; i<
nDïth
 && 
rc
==
SQLITE_OK
; i++){

2377 
iIãr
 = (
iSeq
 / 
nDiv
Ë% 
SORTER_MAX_MERGE_COUNT
;

2378 
PmaRódî
 *
pRódr
 = &
p
->
aRódr
[
iIãr
];

2380 if–
pRódr
->
pIn¸
==0 ){

2381 
MîgeEngöe
 *
pNew
 = 
	`vdbeMîgeEngöeNew
(
SORTER_MAX_MERGE_COUNT
);

2382 if–
pNew
==0 ){

2383 
rc
 = 
SQLITE_NOMEM_BKPT
;

2385 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pNew
, &
pRódr
->
pIn¸
);

2388 if–
rc
==
SQLITE_OK
 ){

2389 
p
 = 
pRódr
->
pIn¸
->
pMîgî
;

2390 
nDiv
 =ÇDiv / 
SORTER_MAX_MERGE_COUNT
;

2394 if–
rc
==
SQLITE_OK
 ){

2395 
p
->
aRódr
[
iSeq
 % 
SORTER_MAX_MERGE_COUNT
].
pIn¸
 =ÖIncr;

2397 
	`vdbeIn¸Fªe
(
pIn¸
);

2399  
rc
;

2400 
	}
}

2413 
	$vdbeS‹ãrMîgeTªeBuûd
(

2414 
VdbeS‹ãr
 *
pS‹ãr
,

2415 
MîgeEngöe
 **
µOut


2417 
MîgeEngöe
 *
pMaö
 = 0;

2418 
rc
 = 
SQLITE_OK
;

2419 
iTask
;

2421 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2425 
	`as£π
–
pS‹ãr
->
bU£Thªads
 ||ÖS‹ãr->
nTask
==1 );

2426 if–
pS‹ãr
->
nTask
>1 ){

2427 
pMaö
 = 
	`vdbeMîgeEngöeNew
(
pS‹ãr
->
nTask
);

2428 if–
pMaö
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2432 
iTask
=0; 
rc
==
SQLITE_OK
 && iTask<
pS‹ãr
->
nTask
; iTask++){

2433 
S‹tSubèsk
 *
pTask
 = &
pS‹ãr
->
aTask
[
iTask
];

2434 
	`as£π
–
pTask
->
nPMA
>0 || 
SQLITE_MAX_WORKER_THREADS
>0 );

2435 if–
SQLITE_MAX_WORKER_THREADS
==0 || 
pTask
->
nPMA
 ){

2436 
MîgeEngöe
 *
pRoŸ
 = 0;

2437 
nDïth
 = 
	`vdbeS‹ãrTªeDïth
(
pTask
->
nPMA
);

2438 
i64
 
iRódOff
 = 0;

2440 if–
pTask
->
nPMA
<=
SORTER_MAX_MERGE_COUNT
 ){

2441 
rc
 = 
	`vdbeMîgeEngöeLevñ0
(
pTask
,ÖTask->
nPMA
, &
iRódOff
, &
pRoŸ
);

2443 
i
;

2444 
iSeq
 = 0;

2445 
pRoŸ
 = 
	`vdbeMîgeEngöeNew
(
SORTER_MAX_MERGE_COUNT
);

2446 if–
pRoŸ
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2447 
i
=0; i<
pTask
->
nPMA
 && 
rc
==
SQLITE_OK
; i +
SORTER_MAX_MERGE_COUNT
){

2448 
MîgeEngöe
 *
pMîgî
 = 0;

2449 
nRódî
;

2451 
nRódî
 = 
	`MIN
(
pTask
->
nPMA
 - 
i
, 
SORTER_MAX_MERGE_COUNT
);

2452 
rc
 = 
	`vdbeMîgeEngöeLevñ0
(
pTask
, 
nRódî
, &
iRódOff
, &
pMîgî
);

2453 if–
rc
==
SQLITE_OK
 ){

2454 
rc
 = 
	`vdbeS‹ãrAddToTªe
(
pTask
, 
nDïth
, 
iSeq
++, 
pRoŸ
, 
pMîgî
);

2459 if–
rc
==
SQLITE_OK
 ){

2460 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2461 if–
pMaö
!=0 ){

2462 
rc
 = 
	`vdbeIn¸MîgîNew
(
pTask
, 
pRoŸ
, &
pMaö
->
aRódr
[
iTask
].
pIn¸
);

2466 
	`as£π
–
pMaö
==0 );

2467 
pMaö
 = 
pRoŸ
;

2470 
	`vdbeMîgeEngöeFªe
(
pRoŸ
);

2475 if–
rc
!=
SQLITE_OK
 ){

2476 
	`vdbeMîgeEngöeFªe
(
pMaö
);

2477 
pMaö
 = 0;

2479 *
µOut
 = 
pMaö
;

2480  
rc
;

2481 
	}
}

2492 
	$vdbeS‹ãrSëupMîge
(
VdbeS‹ãr
 *
pS‹ãr
){

2493 
rc
;

2494 
S‹tSubèsk
 *
pTask0
 = &
pS‹ãr
->
aTask
[0];

2495 
MîgeEngöe
 *
pMaö
 = 0;

2496 #i‡
SQLITE_MAX_WORKER_THREADS


2497 
sqlôe3
 *
db
 = 
pTask0
->
pS‹ãr
->db;

2498 
i
;

2499 
S‹ãrCom∑ª
 
xCom∑ª
 = 
	`vdbeS‹ãrGëCom∑ª
(
pS‹ãr
);

2500 
i
=0; i<
pS‹ãr
->
nTask
; i++){

2501 
pS‹ãr
->
aTask
[
i
].
xCom∑ª
 = xCompare;

2505 
rc
 = 
	`vdbeS‹ãrMîgeTªeBuûd
(
pS‹ãr
, &
pMaö
);

2506 if–
rc
==
SQLITE_OK
 ){

2507 #i‡
SQLITE_MAX_WORKER_THREADS


2508 
	`as£π
–
pS‹ãr
->
bU£Thªads
==0 ||ÖS‹ãr->
nTask
>1 );

2509 if–
pS‹ãr
->
bU£Thªads
 ){

2510 
iTask
;

2511 
PmaRódî
 *
pRódr
 = 0;

2512 
S‹tSubèsk
 *
pLa°
 = &
pS‹ãr
->
aTask
[pS‹ãr->
nTask
-1];

2513 
rc
 = 
	`vdbeS‹tAŒocU≈acked
(
pLa°
);

2514 if–
rc
==
SQLITE_OK
 ){

2515 
pRódr
 = (
PmaRódî
*)
	`sqlôe3DbMÆlocZîo
(
db
, (PmaReader));

2516 
pS‹ãr
->
pRódî
 = 
pRódr
;

2517 if–
pRódr
==0 ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

2519 if–
rc
==
SQLITE_OK
 ){

2520 
rc
 = 
	`vdbeIn¸MîgîNew
(
pLa°
, 
pMaö
, &
pRódr
->
pIn¸
);

2521 if–
rc
==
SQLITE_OK
 ){

2522 
	`vdbeIn¸MîgîSëThªads
(
pRódr
->
pIn¸
);

2523 
iTask
=0; iTask<(
pS‹ãr
->
nTask
-1); iTask++){

2524 
In¸Mîgî
 *
pIn¸
;

2525 if–(
pIn¸
 = 
pMaö
->
aRódr
[
iTask
].pIncr) ){

2526 
	`vdbeIn¸MîgîSëThªads
(
pIn¸
);

2527 
	`as£π
–
pIn¸
->
pTask
!=
pLa°
 );

2530 
iTask
=0; 
rc
==
SQLITE_OK
 && iTask<
pS‹ãr
->
nTask
; iTask++){

2540 
PmaRódî
 *
p
 = &
pMaö
->
aRódr
[
iTask
];

2541 
	`as£π
–
p
->
pIn¸
==0 || (

2542 (
p
->
pIn¸
->
pTask
==&
pS‹ãr
->
aTask
[
iTask
])

2543 && (
iTask
!=
pS‹ãr
->
nTask
-1 || 
p
->
pIn¸
->
bU£Thªad
==0)

2545 
rc
 = 
	`vdbePmaRódîIn¸Inô
(
p
, 
INCRINIT_TASK
);

2548 
pMaö
 = 0;

2550 if–
rc
==
SQLITE_OK
 ){

2551 
rc
 = 
	`vdbePmaRódîIn¸MîgeInô
(
pRódr
, 
INCRINIT_ROOT
);

2556 
rc
 = 
	`vdbeMîgeEngöeInô
(
pTask0
, 
pMaö
, 
INCRINIT_NORMAL
);

2557 
pS‹ãr
->
pMîgî
 = 
pMaö
;

2558 
pMaö
 = 0;

2562 if–
rc
!=
SQLITE_OK
 ){

2563 
	`vdbeMîgeEngöeFªe
(
pMaö
);

2565  
rc
;

2566 
	}
}

2574 
	$sqlôe3VdbeS‹ãrRewöd
(c⁄° 
VdbeCurs‹
 *
pC§
, *
pbEof
){

2575 
VdbeS‹ãr
 *
pS‹ãr
;

2576 
rc
 = 
SQLITE_OK
;

2578 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2579 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2580 
	`as£π
–
pS‹ãr
 );

2585 if–
pS‹ãr
->
bU£PMA
==0 ){

2586 if–
pS‹ãr
->
li°
.
pLi°
 ){

2587 *
pbEof
 = 0;

2588 
rc
 = 
	`vdbeS‹ãrS‹t
(&
pS‹ãr
->
aTask
[0], &pS‹ãr->
li°
);

2590 *
pbEof
 = 1;

2592  
rc
;

2599 
	`as£π
–
pS‹ãr
->
li°
.
pLi°
 );

2600 
rc
 = 
	`vdbeS‹ãrFlushPMA
(
pS‹ãr
);

2603 
rc
 = 
	`vdbeS‹ãrJoöAŒ
(
pS‹ãr
,Ñc);

2605 
	`vdbeS‹ãrRewödDebug
("rewind");

2609 
	`as£π
–
pS‹ãr
->
pRódî
==0 );

2610 if–
rc
==
SQLITE_OK
 ){

2611 
rc
 = 
	`vdbeS‹ãrSëupMîge
(
pS‹ãr
);

2612 *
pbEof
 = 0;

2615 
	`vdbeS‹ãrRewödDebug
("rewinddone");

2616  
rc
;

2617 
	}
}

2622 
	$sqlôe3VdbeS‹ãrNext
(
sqlôe3
 *
db
, c⁄° 
VdbeCurs‹
 *
pC§
, *
pbEof
){

2623 
VdbeS‹ãr
 *
pS‹ãr
;

2624 
rc
;

2626 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2627 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2628 
	`as£π
–
pS‹ãr
->
bU£PMA
 || (pS‹ãr->
pRódî
==0 &&ÖS‹ãr->
pMîgî
==0) );

2629 if–
pS‹ãr
->
bU£PMA
 ){

2630 
	`as£π
–
pS‹ãr
->
pRódî
==0 ||ÖS‹ãr->
pMîgî
==0 );

2631 
	`as£π
–
pS‹ãr
->
bU£Thªads
==0 ||ÖS‹ãr->
pRódî
 );

2632 
	`as£π
–
pS‹ãr
->
bU£Thªads
==1 ||ÖS‹ãr->
pMîgî
 );

2633 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2634 if–
pS‹ãr
->
bU£Thªads
 ){

2635 
rc
 = 
	`vdbePmaRódîNext
(
pS‹ãr
->
pRódî
);

2636 *
pbEof
 = (
pS‹ãr
->
pRódî
->
pFd
==0);

2640 
	`as£π
–
pS‹ãr
->
pMîgî
!=0 );

2641 
	`as£π
–
pS‹ãr
->
pMîgî
->
pTask
==(&pS‹ãr->
aTask
[0]) );

2642 
rc
 = 
	`vdbeMîgeEngöeSãp
(
pS‹ãr
->
pMîgî
, 
pbEof
);

2645 
S‹ãrRec‹d
 *
pFªe
 = 
pS‹ãr
->
li°
.
pLi°
;

2646 
pS‹ãr
->
li°
.
pLi°
 = 
pFªe
->
u
.
pNext
;

2647 
pFªe
->
u
.
pNext
 = 0;

2648 if–
pS‹ãr
->
li°
.
aMem‹y
==0 ) 
	`vdbeS‹ãrRec‹dFªe
(
db
, 
pFªe
);

2649 *
pbEof
 = !
pS‹ãr
->
li°
.
pLi°
;

2650 
rc
 = 
SQLITE_OK
;

2652  
rc
;

2653 
	}
}

2659 *
	$vdbeS‹ãrRowkey
(

2660 c⁄° 
VdbeS‹ãr
 *
pS‹ãr
,

2661 *
≤Key


2663 *
pKey
;

2664 if–
pS‹ãr
->
bU£PMA
 ){

2665 
PmaRódî
 *
pRódî
;

2666 #i‡
SQLITE_MAX_WORKER_THREADS
>0

2667 if–
pS‹ãr
->
bU£Thªads
 ){

2668 
pRódî
 = 
pS‹ãr
->pReader;

2672 
pRódî
 = &
pS‹ãr
->
pMîgî
->
aRódr
[pS‹ãr->pMîgî->
aTªe
[1]];

2674 *
≤Key
 = 
pRódî
->
nKey
;

2675 
pKey
 = 
pRódî
->
aKey
;

2677 *
≤Key
 = 
pS‹ãr
->
li°
.
pLi°
->
nVÆ
;

2678 
pKey
 = 
	`SRVAL
(
pS‹ãr
->
li°
.
pLi°
);

2680  
pKey
;

2681 
	}
}

2686 
	$sqlôe3VdbeS‹ãrRowkey
(c⁄° 
VdbeCurs‹
 *
pC§
, 
Mem
 *
pOut
){

2687 
VdbeS‹ãr
 *
pS‹ãr
;

2688 *
pKey
; 
nKey
;

2690 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2691 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2692 
pKey
 = 
	`vdbeS‹ãrRowkey
(
pS‹ãr
, &
nKey
);

2693 if–
	`sqlôe3VdbeMemCÀ¨AndResize
(
pOut
, 
nKey
) ){

2694  
SQLITE_NOMEM_BKPT
;

2696 
pOut
->
n
 = 
nKey
;

2697 
	`MemSëTy≥Fœg
(
pOut
, 
MEM_Blob
);

2698 
	`mem˝y
(
pOut
->
z
, 
pKey
, 
nKey
);

2700  
SQLITE_OK
;

2701 
	}
}

2719 
	$sqlôe3VdbeS‹ãrCom∑ª
(

2720 c⁄° 
VdbeCurs‹
 *
pC§
,

2721 
Mem
 *
pVÆ
,

2722 
nKeyCﬁ
,

2723 *
pRes


2725 
VdbeS‹ãr
 *
pS‹ãr
;

2726 
U≈ackedRec‹d
 *
r2
;

2727 
KeyInfo
 *
pKeyInfo
;

2728 
i
;

2729 *
pKey
; 
nKey
;

2731 
	`as£π
–
pC§
->
eCurTy≥
==
CURTYPE_SORTER
 );

2732 
pS‹ãr
 = 
pC§
->
uc
.pSorter;

2733 
r2
 = 
pS‹ãr
->
pU≈acked
;

2734 
pKeyInfo
 = 
pC§
->pKeyInfo;

2735 if–
r2
==0 ){

2736 *
p
;

2737 
r2
 = 
pS‹ãr
->
pU≈acked
 = 
	`sqlôe3VdbeAŒocU≈ackedRec‹d
(
pKeyInfo
,0,0,&
p
);

2738 
	`as£π
–
pS‹ãr
->
pU≈acked
==(
U≈ackedRec‹d
*)
p
 );

2739 if–
r2
==0 )  
SQLITE_NOMEM_BKPT
;

2740 
r2
->
nFõld
 = 
nKeyCﬁ
;

2742 
	`as£π
–
r2
->
nFõld
==
nKeyCﬁ
 );

2744 
pKey
 = 
	`vdbeS‹ãrRowkey
(
pS‹ãr
, &
nKey
);

2745 
	`sqlôe3VdbeRec‹dU≈ack
(
pKeyInfo
, 
nKey
, 
pKey
, 
r2
);

2746 
i
=0; i<
nKeyCﬁ
; i++){

2747 if–
r2
->
aMem
[
i
].
Êags
 & 
MEM_NuŒ
 ){

2748 *
pRes
 = -1;

2749  
SQLITE_OK
;

2753 *
pRes
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
pVÆ
->
n
,ÖVÆ->
z
, 
r2
);

2754  
SQLITE_OK
;

2755 
	}
}

	@vdbetrace.c

18 
	~"sqlôeI¡.h
"

19 
	~"vdbeI¡.h
"

21 #i‚de‡
SQLITE_OMIT_TRACE


29 
	$födNextHo°P¨amëî
(c⁄° *
zSql
, *
≤Tokí
){

30 
tokíTy≥
;

31 
nTŸÆ
 = 0;

32 
n
;

34 *
≤Tokí
 = 0;

35  
zSql
[0] ){

36 
n
 = 
	`sqlôe3GëTokí
((
u8
*)
zSql
, &
tokíTy≥
);

37 
	`as£π
–
n
>0 && 
tokíTy≥
!=
TK_ILLEGAL
 );

38 if–
tokíTy≥
==
TK_VARIABLE
 ){

39 *
≤Tokí
 = 
n
;

42 
nTŸÆ
 +
n
;

43 
zSql
 +
n
;

45  
nTŸÆ
;

46 
	}
}

72 *
	$sqlôe3VdbeEx∑ndSql
(

73 
Vdbe
 *
p
,

74 c⁄° *
zRawSql


76 
sqlôe3
 *
db
;

77 
idx
 = 0;

78 
√xtIndex
 = 1;

79 
n
;

80 
nTokí
;

81 
i
;

82 
Mem
 *
pV¨
;

83 
SåAccum
 
out
;

84 #i‚de‡
SQLITE_OMIT_UTF16


85 
Mem
 
utf8
;

87 
zBa£
[100];

89 
db
 = 
p
->db;

90 
	`sqlôe3SåAccumInô
(&
out
, 0, 
zBa£
, (zBase),

91 
db
->
aLimô
[
SQLITE_LIMIT_LENGTH
]);

92 if–
db
->
nVdbeExec
>1 ){

93  *
zRawSql
 ){

94 c⁄° *
zSèπ
 = 
zRawSql
;

95  *(
zRawSql
++)!='\n' && *zRawSql );

96 
	`sqlôe3SåAccumAµíd
(&
out
, "-- ", 3);

97 
	`as£π
–(
zRawSql
 - 
zSèπ
) > 0 );

98 
	`sqlôe3SåAccumAµíd
(&
out
, 
zSèπ
, ()(
zRawSql
-zStart));

100 }if–
p
->
nV¨
==0 ){

101 
	`sqlôe3SåAccumAµíd
(&
out
, 
zRawSql
, 
	`sqlôe3SåÀn30
(zRawSql));

103  
zRawSql
[0] ){

104 
n
 = 
	`födNextHo°P¨amëî
(
zRawSql
, &
nTokí
);

105 
	`as£π
–
n
>0 );

106 
	`sqlôe3SåAccumAµíd
(&
out
, 
zRawSql
, 
n
);

107 
zRawSql
 +
n
;

108 
	`as£π
–
zRawSql
[0] || 
nTokí
==0 );

109 if–
nTokí
==0 ) ;

110 if–
zRawSql
[0]=='?' ){

111 if–
nTokí
>1 ){

112 
	`as£π
–
	`sqlôe3Isdigô
(
zRawSql
[1]) );

113 
	`sqlôe3GëI¡32
(&
zRawSql
[1], &
idx
);

115 
idx
 = 
√xtIndex
;

118 
	`as£π
–
zRawSql
[0]==':' || zRawSql[0]=='$' ||

119 
zRawSql
[0]=='@' || zRawSql[0]=='#' );

120 
	`ã°ˇ£
–
zRawSql
[0]==':' );

121 
	`ã°ˇ£
–
zRawSql
[0]=='$' );

122 
	`ã°ˇ£
–
zRawSql
[0]=='@' );

123 
	`ã°ˇ£
–
zRawSql
[0]=='#' );

124 
idx
 = 
	`sqlôe3VdbeP¨amëîIndex
(
p
, 
zRawSql
, 
nTokí
);

125 
	`as£π
–
idx
>0 );

127 
zRawSql
 +
nTokí
;

128 
√xtIndex
 = 
idx
 + 1;

129 
	`as£π
–
idx
>0 && idx<=
p
->
nV¨
 );

130 
pV¨
 = &
p
->
aV¨
[
idx
-1];

131 if–
pV¨
->
Êags
 & 
MEM_NuŒ
 ){

132 
	`sqlôe3SåAccumAµíd
(&
out
, "NULL", 4);

133 }if–
pV¨
->
Êags
 & 
MEM_I¡
 ){

134 
	`sqlôe3XPrötf
(&
out
, "%Œd", 
pV¨
->
u
.
i
);

135 }if–
pV¨
->
Êags
 & 
MEM_Ról
 ){

136 
	`sqlôe3XPrötf
(&
out
, "%!.15g", 
pV¨
->
u
.
r
);

137 }if–
pV¨
->
Êags
 & 
MEM_Så
 ){

138 
nOut
;

139 #i‚de‡
SQLITE_OMIT_UTF16


140 
u8
 
íc
 = 
	`ENC
(
db
);

141 if–
íc
!=
SQLITE_UTF8
 ){

142 
	`mem£t
(&
utf8
, 0, (utf8));

143 
utf8
.
db
 = db;

144 
	`sqlôe3VdbeMemSëSå
(&
utf8
, 
pV¨
->
z
,ÖV¨->
n
, 
íc
, 
SQLITE_STATIC
);

145 if–
SQLITE_NOMEM
==
	`sqlôe3VdbeCh™geEncodög
(&
utf8
, 
SQLITE_UTF8
) ){

146 
out
.
accEº‹
 = 
STRACCUM_NOMEM
;

147 
out
.
nAŒoc
 = 0;

149 
pV¨
 = &
utf8
;

152 
nOut
 = 
pV¨
->
n
;

153 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


154 if–
nOut
>
SQLITE_TRACE_SIZE_LIMIT
 ){

155 
nOut
 = 
SQLITE_TRACE_SIZE_LIMIT
;

156  
nOut
<
pV¨
->
n
 && (pV¨->
z
[nOut]&0xc0)==0x80 ){ÇOut++; }

159 
	`sqlôe3XPrötf
(&
out
, "'%.*q'", 
nOut
, 
pV¨
->
z
);

160 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


161 if–
nOut
<
pV¨
->
n
 ){

162 
	`sqlôe3XPrötf
(&
out
, "/*+%d byãs*/", 
pV¨
->
n
-
nOut
);

165 #i‚de‡
SQLITE_OMIT_UTF16


166 if–
íc
!=
SQLITE_UTF8
 ) 
	`sqlôe3VdbeMemRñó£
(&
utf8
);

168 }if–
pV¨
->
Êags
 & 
MEM_Zîo
 ){

169 
	`sqlôe3XPrötf
(&
out
, "zîoblob(%d)", 
pV¨
->
u
.
nZîo
);

171 
nOut
;

172 
	`as£π
–
pV¨
->
Êags
 & 
MEM_Blob
 );

173 
	`sqlôe3SåAccumAµíd
(&
out
, "x'", 2);

174 
nOut
 = 
pV¨
->
n
;

175 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


176 if–
nOut
>
SQLITE_TRACE_SIZE_LIMIT
 )ÇOut = SQLITE_TRACE_SIZE_LIMIT;

178 
i
=0; i<
nOut
; i++){

179 
	`sqlôe3XPrötf
(&
out
, "%02x", 
pV¨
->
z
[
i
]&0xff);

181 
	`sqlôe3SåAccumAµíd
(&
out
, "'", 1);

182 #ifde‡
SQLITE_TRACE_SIZE_LIMIT


183 if–
nOut
<
pV¨
->
n
 ){

184 
	`sqlôe3XPrötf
(&
out
, "/*+%d byãs*/", 
pV¨
->
n
-
nOut
);

190 if–
out
.
accEº‹
 ) 
	`sqlôe3SåAccumRe£t
(&out);

191  
	`sqlôe3SåAccumFöish
(&
out
);

192 
	}
}

	@vtab.c

14 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


15 
	~"sqlôeI¡.h
"

24 
	sVèbCtx
 {

25 
VTabÀ
 *
	mpVTabÀ
;

26 
TabÀ
 *
	mpTab
;

27 
VèbCtx
 *
	mpPri‹
;

28 
	mbDe˛¨ed
;

36 
¸óãModuÀ
(

37 
sqlôe3
 *
db
,

38 c⁄° *
zName
,

39 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

40 *
pAux
,

41 (*
xDe°roy
)(*)

43 
rc
 = 
SQLITE_OK
;

44 
nName
;

46 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

47 
nName
 = 
	`sqlôe3SåÀn30
(
zName
);

48 if–
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zName
) ){

49 
rc
 = 
SQLITE_MISUSE_BKPT
;

51 
ModuÀ
 *
pMod
;

52 
pMod
 = (
ModuÀ
 *)
	`sqlôe3DbMÆlocRawNN
(
db
, (ModuÀË+ 
nName
 + 1);

53 if–
pMod
 ){

54 
ModuÀ
 *
pDñ
;

55 *
zC›y
 = (*)(&
pMod
[1]);

56 
	`mem˝y
(
zC›y
, 
zName
, 
nName
+1);

57 
pMod
->
zName
 = 
zC›y
;

58 
pMod
->
pModuÀ
 =ÖModule;

59 
pMod
->
pAux
 =ÖAux;

60 
pMod
->
xDe°roy
 = xDestroy;

61 
pMod
->
pEpoTab
 = 0;

62 
pDñ
 = (
ModuÀ
 *)
	`sqlôe3HashIn£π
(&
db
->
aModuÀ
,
zC›y
,(*)
pMod
);

63 
	`as£π
–
pDñ
==0 ||ÖDñ==
pMod
 );

64 if–
pDñ
 ){

65 
	`sqlôe3OomFau…
(
db
);

66 
	`sqlôe3DbFªe
(
db
, 
pDñ
);

70 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

71 if–
rc
!=
SQLITE_OK
 && 
xDe°roy
 ) 
	`xDe°roy
(
pAux
);

73 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

74  
rc
;

75 
	}
}

81 
	$sqlôe3_¸óã_moduÀ
(

82 
sqlôe3
 *
db
,

83 c⁄° *
zName
,

84 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

85 *
pAux


87 #ifde‡
SQLITE_ENABLE_API_ARMOR


88 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

90  
	`¸óãModuÀ
(
db
, 
zName
, 
pModuÀ
, 
pAux
, 0);

91 
	}
}

96 
sqlôe3_¸óã_moduÀ_v2
(

97 
sqlôe3
 *
db
,

98 c⁄° *
zName
,

99 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
,

100 *
pAux
,

101 (*
xDe°roy
)(*)

103 #ifde‡
SQLITE_ENABLE_API_ARMOR


104 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zName
==0 )  
SQLITE_MISUSE_BKPT
;

106  
	`¸óãModuÀ
(
db
, 
zName
, 
pModuÀ
, 
pAux
, 
xDe°roy
);

107 
	}
}

117 
	$sqlôe3VèbLock
(
VTabÀ
 *
pVTab
){

118 
pVTab
->
nRef
++;

119 
	}
}

127 
VTabÀ
 *
	$sqlôe3GëVTabÀ
(
sqlôe3
 *
db
, 
TabÀ
 *
pTab
){

128 
VTabÀ
 *
pVèb
;

129 
	`as£π
–
	`IsVútuÆ
(
pTab
) );

130 
pVèb
=
pTab
->
pVTabÀ
;ÖVèb &&ÖVèb->
db
!=db;ÖVèbıVèb->
pNext
);

131  
pVèb
;

132 
	}
}

138 
	$sqlôe3VèbU∆ock
(
VTabÀ
 *
pVTab
){

139 
sqlôe3
 *
db
 = 
pVTab
->db;

141 
	`as£π
–
db
 );

142 
	`as£π
–
pVTab
->
nRef
>0 );

143 
	`as£π
–
db
->
magic
==
SQLITE_MAGIC_OPEN
 || db->magic==
SQLITE_MAGIC_ZOMBIE
 );

145 
pVTab
->
nRef
--;

146 if–
pVTab
->
nRef
==0 ){

147 
sqlôe3_vèb
 *
p
 = 
pVTab
->
pVèb
;

148 if–
p
 ){

149 
p
->
pModuÀ
->
	`xDisc⁄√˘
(p);

151 
	`sqlôe3DbFªe
(
db
, 
pVTab
);

153 
	}
}

162 
VTabÀ
 *
	$vèbDisc⁄√˘AŒ
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

163 
VTabÀ
 *
pRë
 = 0;

164 
VTabÀ
 *
pVTabÀ
 = 
p
->pVTable;

165 
p
->
pVTabÀ
 = 0;

173 
	`as£π
–
db
==0 || 
	`sqlôe3SchemaMuãxHñd
(db, 0, 
p
->
pSchema
) );

175  
pVTabÀ
 ){

176 
sqlôe3
 *
db2
 = 
pVTabÀ
->
db
;

177 
VTabÀ
 *
pNext
 = 
pVTabÀ
->pNext;

178 
	`as£π
–
db2
 );

179 if–
db2
==
db
 ){

180 
pRë
 = 
pVTabÀ
;

181 
p
->
pVTabÀ
 = 
pRë
;

182 
pRë
->
pNext
 = 0;

184 
pVTabÀ
->
pNext
 = 
db2
->
pDisc⁄√˘
;

185 
db2
->
pDisc⁄√˘
 = 
pVTabÀ
;

187 
pVTabÀ
 = 
pNext
;

190 
	`as£π
–!
db
 || 
pRë
 );

191  
pRë
;

192 
	}
}

202 
	$sqlôe3VèbDisc⁄√˘
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

203 
VTabÀ
 **
µVTab
;

205 
	`as£π
–
	`IsVútuÆ
(
p
) );

206 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

207 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

209 
µVTab
=&
p
->
pVTabÀ
; *µVTab;ÖpVTab=&(*µVTab)->
pNext
){

210 if–(*
µVTab
)->
db
==db ){

211 
VTabÀ
 *
pVTab
 = *
µVTab
;

212 *
µVTab
 = 
pVTab
->
pNext
;

213 
	`sqlôe3VèbU∆ock
(
pVTab
);

217 
	}
}

240 
	$sqlôe3VèbU∆ockLi°
(
sqlôe3
 *
db
){

241 
VTabÀ
 *
p
 = 
db
->
pDisc⁄√˘
;

242 
db
->
pDisc⁄√˘
 = 0;

244 
	`as£π
–
	`sqlôe3BåìHﬁdsAŒMuãxes
(
db
) );

245 
	`as£π
–
	`sqlôe3_muãx_hñd
(
db
->
muãx
) );

247 if–
p
 ){

248 
	`sqlôe3ExpúePª∑ªdSèãmíts
(
db
);

250 
VTabÀ
 *
pNext
 = 
p
->pNext;

251 
	`sqlôe3VèbU∆ock
(
p
);

252 
p
 = 
pNext
;

253 } 
p
 );

255 
	}
}

271 
	$sqlôe3VèbCÀ¨
(
sqlôe3
 *
db
, 
TabÀ
 *
p
){

272 if–!
db
 || db->
≤ByãsFªed
==0 ) 
	`vèbDisc⁄√˘AŒ
(0, 
p
);

273 if–
p
->
azModuÀArg
 ){

274 
i
;

275 
i
=0; i<
p
->
nModuÀArg
; i++){

276 if–
i
!=1 ) 
	`sqlôe3DbFªe
(
db
, 
p
->
azModuÀArg
[i]);

278 
	`sqlôe3DbFªe
(
db
, 
p
->
azModuÀArg
);

280 
	}
}

288 
	$addModuÀArgumít
(
sqlôe3
 *
db
, 
TabÀ
 *
pTabÀ
, *
zArg
){

289 
nByãs
 = (*)*(2+
pTabÀ
->
nModuÀArg
);

290 **
azModuÀArg
;

291 
azModuÀArg
 = 
	`sqlôe3DbRóŒoc
(
db
, 
pTabÀ
->azModuÀArg, 
nByãs
);

292 if–
azModuÀArg
==0 ){

293 
	`sqlôe3DbFªe
(
db
, 
zArg
);

295 
i
 = 
pTabÀ
->
nModuÀArg
++;

296 
azModuÀArg
[
i
] = 
zArg
;

297 
azModuÀArg
[
i
+1] = 0;

298 
pTabÀ
->
azModuÀArg
 =ázModuleArg;

300 
	}
}

307 
	$sqlôe3VèbBegöP¨£
(

308 
P¨£
 *
pP¨£
,

309 
Tokí
 *
pName1
,

310 
Tokí
 *
pName2
,

311 
Tokí
 *
pModuÀName
,

312 
ifNŸExi°s


314 
iDb
;

315 
TabÀ
 *
pTabÀ
;

316 
sqlôe3
 *
db
;

318 
	`sqlôe3SèπTabÀ
(
pP¨£
, 
pName1
, 
pName2
, 0, 0, 1, 
ifNŸExi°s
);

319 
pTabÀ
 = 
pP¨£
->
pNewTabÀ
;

320 if–
pTabÀ
==0 ) ;

321 
	`as£π
–0==
pTabÀ
->
pIndex
 );

323 
db
 = 
pP¨£
->db;

324 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTabÀ
->
pSchema
);

325 
	`as£π
–
iDb
>=0 );

327 
pTabÀ
->
èbFœgs
 |
TF_VútuÆ
;

328 
pTabÀ
->
nModuÀArg
 = 0;

329 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 
	`sqlôe3NameFromTokí
(db, 
pModuÀName
));

330 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 0);

331 
	`addModuÀArgumít
(
db
, 
pTabÀ
, 
	`sqlôe3DbSåDup
(db,ÖTabÀ->
zName
));

332 
	`as£π
–(
pP¨£
->
sNameTokí
.
z
==
pName2
->z &&ÖName2->z!=0)

333 || (
pP¨£
->
sNameTokí
.
z
==
pName1
->z && 
pName2
->z==0)

335 
pP¨£
->
sNameTokí
.
n
 = ()(

336 &
pModuÀName
->
z
[pModuÀName->
n
] - 
pP¨£
->
sNameTokí
.z

339 #i‚de‡
SQLITE_OMIT_AUTHORIZATION


345 if–
pTabÀ
->
azModuÀArg
 ){

346 
	`sqlôe3AuthCheck
(
pP¨£
, 
SQLITE_CREATE_VTABLE
, 
pTabÀ
->
zName
,

347 
pTabÀ
->
azModuÀArg
[0], 
pP¨£
->
db
->
aDb
[
iDb
].
zName
);

350 
	}
}

357 
	$addArgumítToVèb
(
P¨£
 *
pP¨£
){

358 if–
pP¨£
->
sArg
.
z
 &&ÖP¨£->
pNewTabÀ
 ){

359 c⁄° *
z
 = (c⁄° *)
pP¨£
->
sArg
.z;

360 
n
 = 
pP¨£
->
sArg
.n;

361 
sqlôe3
 *
db
 = 
pP¨£
->db;

362 
	`addModuÀArgumít
(
db
, 
pP¨£
->
pNewTabÀ
, 
	`sqlôe3DbSåNDup
(db, 
z
, 
n
));

364 
	}
}

370 
	$sqlôe3VèbFöishP¨£
(
P¨£
 *
pP¨£
, 
Tokí
 *
pEnd
){

371 
TabÀ
 *
pTab
 = 
pP¨£
->
pNewTabÀ
;

372 
sqlôe3
 *
db
 = 
pP¨£
->db;

374 if–
pTab
==0 ) ;

375 
	`addArgumítToVèb
(
pP¨£
);

376 
pP¨£
->
sArg
.
z
 = 0;

377 if–
pTab
->
nModuÀArg
<1 ) ;

385 if–!
db
->
öô
.
busy
 ){

386 *
zStmt
;

387 *
zWhîe
;

388 
iDb
;

389 
iReg
;

390 
Vdbe
 *
v
;

393 if–
pEnd
 ){

394 
pP¨£
->
sNameTokí
.
n
 = ()(
pEnd
->
z
 -ÖParse->sNameToken.z) +ÖEnd->n;

396 
zStmt
 = 
	`sqlôe3MPrötf
(
db
, "CREATE VIRTUAL TABLE %T", &
pP¨£
->
sNameTokí
);

406 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

407 
	`sqlôe3Ne°edP¨£
(
pP¨£
,

411 
db
->
aDb
[
iDb
].
zName
, 
	`SCHEMA_TABLE
(iDb),

412 
pTab
->
zName
,

413 
pTab
->
zName
,

414 
zStmt
,

415 
pP¨£
->
ªgRowid


417 
	`sqlôe3DbFªe
(
db
, 
zStmt
);

418 
v
 = 
	`sqlôe3GëVdbe
(
pP¨£
);

419 
	`sqlôe3Ch™geCookõ
(
pP¨£
, 
iDb
);

421 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_Expúe
);

422 
zWhîe
 = 
	`sqlôe3MPrötf
(
db
, "«me='%q' ANDÅy≥='èbÀ'", 
pTab
->
zName
);

423 
	`sqlôe3VdbeAddP¨£SchemaOp
(
v
, 
iDb
, 
zWhîe
);

425 
iReg
 = ++
pP¨£
->
nMem
;

426 
	`sqlôe3VdbeLﬂdSåög
(
v
, 
iReg
, 
pTab
->
zName
);

427 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_VCª©e
, 
iDb
, 
iReg
);

436 
TabÀ
 *
pOld
;

437 
Schema
 *
pSchema
 = 
pTab
->pSchema;

438 c⁄° *
zName
 = 
pTab
->zName;

439 
	`as£π
–
	`sqlôe3SchemaMuãxHñd
(
db
, 0, 
pSchema
) );

440 
pOld
 = 
	`sqlôe3HashIn£π
(&
pSchema
->
tblHash
, 
zName
, 
pTab
);

441 if–
pOld
 ){

442 
	`sqlôe3OomFau…
(
db
);

443 
	`as£π
–
pTab
==
pOld
 );

446 
pP¨£
->
pNewTabÀ
 = 0;

448 
	}
}

454 
	$sqlôe3VèbArgInô
(
P¨£
 *
pP¨£
){

455 
	`addArgumítToVèb
(
pP¨£
);

456 
pP¨£
->
sArg
.
z
 = 0;

457 
pP¨£
->
sArg
.
n
 = 0;

458 
	}
}

464 
	$sqlôe3VèbArgExãnd
(
P¨£
 *
pP¨£
, 
Tokí
 *
p
){

465 
Tokí
 *
pArg
 = &
pP¨£
->
sArg
;

466 if–
pArg
->
z
==0 ){

467 
pArg
->
z
 = 
p
->z;

468 
pArg
->
n
 = 
p
->n;

470 
	`as£π
(
pArg
->
z
 <
p
->z);

471 
pArg
->
n
 = ()(&
p
->
z
[p->n] -ÖArg->z);

473 
	}
}

480 
vèbCÆlC⁄°ru˘‹
(

481 
sqlôe3
 *
db
,

482 
TabÀ
 *
pTab
,

483 
ModuÀ
 *
pMod
,

484 (*
xC⁄°ru˘
)(
sqlôe3
*,*,,c⁄° *c⁄°*,
sqlôe3_vèb
**,**),

485 **
pzEº


487 
VèbCtx
 
sCtx
;

488 
VTabÀ
 *
pVTabÀ
;

489 
rc
;

490 c⁄° *c⁄°*
azArg
 = (c⁄° *c⁄°*)
pTab
->
azModuÀArg
;

491 
nArg
 = 
pTab
->
nModuÀArg
;

492 *
zEº
 = 0;

493 *
zModuÀName
;

494 
iDb
;

495 
VèbCtx
 *
pCtx
;

498 
pCtx
=
db
->
pVèbCtx
;ÖCtx;ÖCtxıCtx->
pPri‹
){

499 if–
pCtx
->
pTab
==pTab ){

500 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
,

501 "vèbÀ c⁄°ru˘‹ cÆÀdÑecursivñy: %s", 
pTab
->
zName


503  
SQLITE_LOCKED
;

507 
zModuÀName
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
pTab
->
zName
);

508 if–!
zModuÀName
 ){

509  
SQLITE_NOMEM_BKPT
;

512 
pVTabÀ
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
VTabÀ
));

513 if–!
pVTabÀ
 ){

514 
	`sqlôe3DbFªe
(
db
, 
zModuÀName
);

515  
SQLITE_NOMEM_BKPT
;

517 
pVTabÀ
->
db
 = db;

518 
pVTabÀ
->
pMod
 =ÖMod;

520 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

521 
pTab
->
azModuÀArg
[1] = 
db
->
aDb
[
iDb
].
zName
;

524 
	`as£π
–&
db
->
pVèbCtx
 );

525 
	`as£π
–
xC⁄°ru˘
 );

526 
sCtx
.
pTab
 =ÖTab;

527 
sCtx
.
pVTabÀ
 =ÖVTable;

528 
sCtx
.
pPri‹
 = 
db
->
pVèbCtx
;

529 
sCtx
.
bDe˛¨ed
 = 0;

530 
db
->
pVèbCtx
 = &
sCtx
;

531 
rc
 = 
	`xC⁄°ru˘
(
db
, 
pMod
->
pAux
, 
nArg
, 
azArg
, &
pVTabÀ
->
pVèb
, &
zEº
);

532 
db
->
pVèbCtx
 = 
sCtx
.
pPri‹
;

533 if–
rc
==
SQLITE_NOMEM
 ) 
	`sqlôe3OomFau…
(
db
);

534 
	`as£π
–
sCtx
.
pTab
==pTab );

536 if–
SQLITE_OK
!=
rc
 ){

537 if–
zEº
==0 ){

538 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "vèbÀ c⁄°ru˘‹ faûed: %s", 
zModuÀName
);

540 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "%s", 
zEº
);

541 
	`sqlôe3_‰ì
(
zEº
);

543 
	`sqlôe3DbFªe
(
db
, 
pVTabÀ
);

544 }if–
	`ALWAYS
(
pVTabÀ
->
pVèb
) ){

547 
	`mem£t
(
pVTabÀ
->
pVèb
, 0, (pVTable->pVtab[0]));

548 
pVTabÀ
->
pVèb
->
pModuÀ
 = 
pMod
->pModule;

549 
pVTabÀ
->
nRef
 = 1;

550 if–
sCtx
.
bDe˛¨ed
==0 ){

551 c⁄° *
zF‹m©
 = "vtable constructor didÇot declare schema: %s";

552 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, 
zF‹m©
, 
pTab
->
zName
);

553 
	`sqlôe3VèbU∆ock
(
pVTabÀ
);

554 
rc
 = 
SQLITE_ERROR
;

556 
iCﬁ
;

557 
u8
 
oooHiddí
 = 0;

563 
pVTabÀ
->
pNext
 = 
pTab
->pVTable;

564 
pTab
->
pVTabÀ
 =ÖVTable;

566 
iCﬁ
=0; iCﬁ<
pTab
->
nCﬁ
; iCol++){

567 *
zTy≥
 = 
	`sqlôe3CﬁumnTy≥
(&
pTab
->
aCﬁ
[
iCﬁ
], "");

568 
nTy≥
;

569 
i
 = 0;

570 
nTy≥
 = 
	`sqlôe3SåÀn30
(
zTy≥
);

571 
i
=0; i<
nTy≥
; i++){

572 if–0==
	`sqlôe3SåNICmp
("hiddí", &
zTy≥
[
i
], 6)

573 && (
i
==0 || 
zTy≥
[i-1]==' ')

574 && (
zTy≥
[
i
+6]=='\0' || zType[i+6]==' ')

579 if–
i
<
nTy≥
 ){

580 
j
;

581 
nDñ
 = 6 + (
zTy≥
[
i
+6] ? 1 : 0);

582 
j
=
i
; (j+
nDñ
)<=
nTy≥
; j++){

583 
zTy≥
[
j
] = zTy≥[j+
nDñ
];

585 if–
zTy≥
[
i
]=='\0' && i>0 ){

586 
	`as£π
(
zTy≥
[
i
-1]==' ');

587 
zTy≥
[
i
-1] = '\0';

589 
pTab
->
aCﬁ
[
iCﬁ
].
cﬁFœgs
 |
COLFLAG_HIDDEN
;

590 
oooHiddí
 = 
TF_OOOHiddí
;

592 
pTab
->
èbFœgs
 |
oooHiddí
;

598 
	`sqlôe3DbFªe
(
db
, 
zModuÀName
);

599  
rc
;

600 
	}
}

609 
	$sqlôe3VèbCÆlC⁄√˘
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

610 
sqlôe3
 *
db
 = 
pP¨£
->db;

611 c⁄° *
zMod
;

612 
ModuÀ
 *
pMod
;

613 
rc
;

615 
	`as£π
–
pTab
 );

616 if–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)==0 || 
	`sqlôe3GëVTabÀ
(
db
,ÖTab) ){

617  
SQLITE_OK
;

621 
zMod
 = 
pTab
->
azModuÀArg
[0];

622 
pMod
 = (
ModuÀ
*)
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zMod
);

624 if–!
pMod
 ){

625 c⁄° *
zModuÀ
 = 
pTab
->
azModuÀArg
[0];

626 
	`sqlôe3Eº‹Msg
(
pP¨£
, "nÿsuch moduÀ: %s", 
zModuÀ
);

627 
rc
 = 
SQLITE_ERROR
;

629 *
zEº
 = 0;

630 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
,ÖMod->
pModuÀ
->
xC⁄√˘
, &
zEº
);

631 if–
rc
!=
SQLITE_OK
 ){

632 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
zEº
);

634 
	`sqlôe3DbFªe
(
db
, 
zEº
);

637  
rc
;

638 
	}
}

643 
	$growVTøns
(
sqlôe3
 *
db
){

644 c⁄° 
ARRAY_INCR
 = 5;

647 if–(
db
->
nVTøns
%
ARRAY_INCR
)==0 ){

648 
VTabÀ
 **
aVTøns
;

649 
nByãs
 = (
sqlôe3_vèb
 *Ë* (
db
->
nVTøns
 + 
ARRAY_INCR
);

650 
aVTøns
 = 
	`sqlôe3DbRóŒoc
(
db
, (*)db->aVTøns, 
nByãs
);

651 if–!
aVTøns
 ){

652  
SQLITE_NOMEM_BKPT
;

654 
	`mem£t
(&
aVTøns
[
db
->
nVTøns
], 0, (
sqlôe3_vèb
 *)*
ARRAY_INCR
);

655 
db
->
aVTøns
 =áVTrans;

658  
SQLITE_OK
;

659 
	}
}

665 
	$addToVTøns
(
sqlôe3
 *
db
, 
VTabÀ
 *
pVTab
){

667 
db
->
aVTøns
[db->
nVTøns
++] = 
pVTab
;

668 
	`sqlôe3VèbLock
(
pVTab
);

669 
	}
}

679 
	$sqlôe3VèbCÆlCª©e
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTab
, **
pzEº
){

680 
rc
 = 
SQLITE_OK
;

681 
TabÀ
 *
pTab
;

682 
ModuÀ
 *
pMod
;

683 c⁄° *
zMod
;

685 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, db->
aDb
[
iDb
].
zName
);

686 
	`as£π
–
pTab
 && (pTab->
èbFœgs
 & 
TF_VútuÆ
)!=0 && !pTab->
pVTabÀ
 );

689 
zMod
 = 
pTab
->
azModuÀArg
[0];

690 
pMod
 = (
ModuÀ
*)
	`sqlôe3HashFöd
(&
db
->
aModuÀ
, 
zMod
);

696 if–
pMod
==0 ||ÖMod->
pModuÀ
->
xCª©e
==0 ||ÖMod->pModuÀ->
xDe°roy
==0 ){

697 *
pzEº
 = 
	`sqlôe3MPrötf
(
db
, "nÿsuch moduÀ: %s", 
zMod
);

698 
rc
 = 
SQLITE_ERROR
;

700 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
,ÖMod->
pModuÀ
->
xCª©e
, 
pzEº
);

705 if–
rc
==
SQLITE_OK
 && 
	`ALWAYS
(
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)) ){

706 
rc
 = 
	`growVTøns
(
db
);

707 if–
rc
==
SQLITE_OK
 ){

708 
	`addToVTøns
(
db
, 
	`sqlôe3GëVTabÀ
(db, 
pTab
));

712  
rc
;

713 
	}
}

720 
	$sqlôe3_de˛¨e_vèb
(
sqlôe3
 *
db
, c⁄° *
zCª©eTabÀ
){

721 
VèbCtx
 *
pCtx
;

722 
P¨£
 *
pP¨£
;

723 
rc
 = 
SQLITE_OK
;

724 
TabÀ
 *
pTab
;

725 *
zEº
 = 0;

727 #ifde‡
SQLITE_ENABLE_API_ARMOR


728 if–!
	`sqlôe3Sa„tyCheckOk
(
db
Ë|| 
zCª©eTabÀ
==0 ){

729  
SQLITE_MISUSE_BKPT
;

732 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

733 
pCtx
 = 
db
->
pVèbCtx
;

734 if–!
pCtx
 ||ÖCtx->
bDe˛¨ed
 ){

735 
	`sqlôe3Eº‹
(
db
, 
SQLITE_MISUSE
);

736 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

737  
SQLITE_MISUSE_BKPT
;

739 
pTab
 = 
pCtx
->pTab;

740 
	`as£π
–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)!=0 );

742 
pP¨£
 = 
	`sqlôe3SèckAŒocZîo
(
db
, (*pParse));

743 if–
pP¨£
==0 ){

744 
rc
 = 
SQLITE_NOMEM_BKPT
;

746 
pP¨£
->
de˛¨eVèb
 = 1;

747 
pP¨£
->
db
 = db;

748 
pP¨£
->
nQuîyLo›
 = 1;

750 if–
SQLITE_OK
==
	`sqlôe3RunP¨£r
(
pP¨£
, 
zCª©eTabÀ
, &
zEº
)

751 && 
pP¨£
->
pNewTabÀ


752 && !
db
->
mÆlocFaûed


753 && !
pP¨£
->
pNewTabÀ
->
pSñe˘


754 && (
pP¨£
->
pNewTabÀ
->
èbFœgs
 & 
TF_VútuÆ
)==0

756 if–!
pTab
->
aCﬁ
 ){

757 
TabÀ
 *
pNew
 = 
pP¨£
->
pNewTabÀ
;

758 
Index
 *
pIdx
;

759 
pTab
->
aCﬁ
 = 
pNew
->aCol;

760 
pTab
->
nCﬁ
 = 
pNew
->nCol;

761 
pTab
->
èbFœgs
 |
pNew
->èbFœg†& (
TF_WôhoutRowid
|
TF_NoVisibÀRowid
);

762 
pNew
->
nCﬁ
 = 0;

763 
pNew
->
aCﬁ
 = 0;

764 
	`as£π
–
pTab
->
pIndex
==0 );

765 if–!
	`HasRowid
(
pNew
Ë&& 
pCtx
->
pVTabÀ
->
pMod
->
pModuÀ
->
xUpd©e
!=0 ){

766 
rc
 = 
SQLITE_ERROR
;

768 
pIdx
 = 
pNew
->
pIndex
;

769 if–
pIdx
 ){

770 
	`as£π
–
pIdx
->
pNext
==0 );

771 
pTab
->
pIndex
 = 
pIdx
;

772 
pNew
->
pIndex
 = 0;

773 
pIdx
->
pTabÀ
 = 
pTab
;

776 
pCtx
->
bDe˛¨ed
 = 1;

778 
	`sqlôe3Eº‹WôhMsg
(
db
, 
SQLITE_ERROR
, (
zEº
 ? "%s" : 0), zErr);

779 
	`sqlôe3DbFªe
(
db
, 
zEº
);

780 
rc
 = 
SQLITE_ERROR
;

782 
pP¨£
->
de˛¨eVèb
 = 0;

784 if–
pP¨£
->
pVdbe
 ){

785 
	`sqlôe3VdbeFöÆize
(
pP¨£
->
pVdbe
);

787 
	`sqlôe3DñëeTabÀ
(
db
, 
pP¨£
->
pNewTabÀ
);

788 
	`sqlôe3P¨£rRe£t
(
pP¨£
);

789 
	`sqlôe3SèckFªe
(
db
, 
pP¨£
);

792 
	`as£π
–(
rc
&0xff)==rc );

793 
rc
 = 
	`sqlôe3ApiExô
(
db
,Ñc);

794 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

795  
rc
;

796 
	}
}

805 
	$sqlôe3VèbCÆlDe°roy
(
sqlôe3
 *
db
, 
iDb
, c⁄° *
zTab
){

806 
rc
 = 
SQLITE_OK
;

807 
TabÀ
 *
pTab
;

809 
pTab
 = 
	`sqlôe3FödTabÀ
(
db
, 
zTab
, db->
aDb
[
iDb
].
zName
);

810 if–
pTab
!=0 && 
	`ALWAYS
’Tab->
pVTabÀ
!=0) ){

811 
VTabÀ
 *
p
;

812 (*
xDe°roy
)(
sqlôe3_vèb
 *);

813 
p
=
pTab
->
pVTabÀ
;Ö;Öı->
pNext
){

814 
	`as£π
–
p
->
pVèb
 );

815 if–
p
->
pVèb
->
nRef
>0 ){

816  
SQLITE_LOCKED
;

819 
p
 = 
	`vèbDisc⁄√˘AŒ
(
db
, 
pTab
);

820 
xDe°roy
 = 
p
->
pMod
->
pModuÀ
->xDestroy;

821 
	`as£π
–
xDe°roy
!=0 );

822 
rc
 = 
	`xDe°roy
(
p
->
pVèb
);

824 if–
rc
==
SQLITE_OK
 ){

825 
	`as£π
–
pTab
->
pVTabÀ
==
p
 &&Ö->
pNext
==0 );

826 
p
->
pVèb
 = 0;

827 
pTab
->
pVTabÀ
 = 0;

828 
	`sqlôe3VèbU∆ock
(
p
);

832  
rc
;

833 
	}
}

843 
	$ˇŒFöÆi£r
(
sqlôe3
 *
db
, 
off£t
){

844 
i
;

845 if–
db
->
aVTøns
 ){

846 
VTabÀ
 **
aVTøns
 = 
db
->aVTrans;

847 
db
->
aVTøns
 = 0;

848 
i
=0; i<
db
->
nVTøns
; i++){

849 
VTabÀ
 *
pVTab
 = 
aVTøns
[
i
];

850 
sqlôe3_vèb
 *
p
 = 
pVTab
->
pVèb
;

851 if–
p
 ){

852 (*
x
)(
sqlôe3_vèb
 *);

853 
x
 = *((**)(
sqlôe3_vèb
 *))((*)
p
->
pModuÀ
 + 
off£t
);

854 if–
x
 ) 
	`x
(
p
);

856 
pVTab
->
iSavïoöt
 = 0;

857 
	`sqlôe3VèbU∆ock
(
pVTab
);

859 
	`sqlôe3DbFªe
(
db
, 
aVTøns
);

860 
db
->
nVTøns
 = 0;

862 
	}
}

871 
	$sqlôe3VèbSync
(
sqlôe3
 *
db
, 
Vdbe
 *
p
){

872 
i
;

873 
rc
 = 
SQLITE_OK
;

874 
VTabÀ
 **
aVTøns
 = 
db
->aVTrans;

876 
db
->
aVTøns
 = 0;

877 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nVTøns
; i++){

878 (*
x
)(
sqlôe3_vèb
 *);

879 
sqlôe3_vèb
 *
pVèb
 = 
aVTøns
[
i
]->pVtab;

880 if–
pVèb
 && (
x
 =ÖVèb->
pModuÀ
->
xSync
)!=0 ){

881 
rc
 = 
	`x
(
pVèb
);

882 
	`sqlôe3VèbImp‹tEºmsg
(
p
, 
pVèb
);

885 
db
->
aVTøns
 =áVTrans;

886  
rc
;

887 
	}
}

893 
	$sqlôe3VèbRﬁlback
(
sqlôe3
 *
db
){

894 
	`ˇŒFöÆi£r
(
db
, 
	`off£tof
(
sqlôe3_moduÀ
,
xRﬁlback
));

895  
SQLITE_OK
;

896 
	}
}

902 
	$sqlôe3VèbCommô
(
sqlôe3
 *
db
){

903 
	`ˇŒFöÆi£r
(
db
, 
	`off£tof
(
sqlôe3_moduÀ
,
xCommô
));

904  
SQLITE_OK
;

905 
	}
}

915 
	$sqlôe3VèbBegö
(
sqlôe3
 *
db
, 
VTabÀ
 *
pVTab
){

916 
rc
 = 
SQLITE_OK
;

917 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

924 if–
	`sqlôe3VèbInSync
(
db
) ){

925  
SQLITE_LOCKED
;

927 if–!
pVTab
 ){

928  
SQLITE_OK
;

930 
pModuÀ
 = 
pVTab
->
pVèb
->pModule;

932 if–
pModuÀ
->
xBegö
 ){

933 
i
;

936 
i
=0; i<
db
->
nVTøns
; i++){

937 if–
db
->
aVTøns
[
i
]==
pVTab
 ){

938  
SQLITE_OK
;

944 
rc
 = 
	`growVTøns
(
db
);

945 if–
rc
==
SQLITE_OK
 ){

946 
rc
 = 
pModuÀ
->
	`xBegö
(
pVTab
->
pVèb
);

947 if–
rc
==
SQLITE_OK
 ){

948 
iSv±
 = 
db
->
nSèãmít
 + db->
nSavïoöt
;

949 
	`addToVTøns
(
db
, 
pVTab
);

950 if–
iSv±
 && 
pModuÀ
->
xSavïoöt
 ){

951 
pVTab
->
iSavïoöt
 = 
iSv±
;

952 
rc
 = 
pModuÀ
->
	`xSavïoöt
(
pVTab
->
pVèb
, 
iSv±
-1);

957  
rc
;

958 
	}
}

975 
	$sqlôe3VèbSavïoöt
(
sqlôe3
 *
db
, 
›
, 
iSavïoöt
){

976 
rc
 = 
SQLITE_OK
;

978 
	`as£π
–
›
==
SAVEPOINT_RELEASE
||›==
SAVEPOINT_ROLLBACK
||›==
SAVEPOINT_BEGIN
 );

979 
	`as£π
–
iSavïoöt
>=-1 );

980 if–
db
->
aVTøns
 ){

981 
i
;

982 
i
=0; 
rc
==
SQLITE_OK
 && i<
db
->
nVTøns
; i++){

983 
VTabÀ
 *
pVTab
 = 
db
->
aVTøns
[
i
];

984 c⁄° 
sqlôe3_moduÀ
 *
pMod
 = 
pVTab
->pMod->
pModuÀ
;

985 if–
pVTab
->
pVèb
 && 
pMod
->
iVîsi⁄
>=2 ){

986 (*
xMëhod
)(
sqlôe3_vèb
 *, );

987  
›
 ){

988 
SAVEPOINT_BEGIN
:

989 
xMëhod
 = 
pMod
->
xSavïoöt
;

990 
pVTab
->
iSavïoöt
 = iSavepoint+1;

992 
SAVEPOINT_ROLLBACK
:

993 
xMëhod
 = 
pMod
->
xRﬁlbackTo
;

996 
xMëhod
 = 
pMod
->
xRñó£
;

999 if–
xMëhod
 && 
pVTab
->
iSavïoöt
>iSavepoint ){

1000 
rc
 = 
	`xMëhod
(
pVTab
->
pVèb
, 
iSavïoöt
);

1005  
rc
;

1006 
	}
}

1021 
FuncDef
 *
	$sqlôe3VèbOvîlﬂdFun˘i⁄
(

1022 
sqlôe3
 *
db
,

1023 
FuncDef
 *
pDef
,

1024 
nArg
,

1025 
Ex¥
 *
pEx¥


1027 
TabÀ
 *
pTab
;

1028 
sqlôe3_vèb
 *
pVèb
;

1029 
sqlôe3_moduÀ
 *
pMod
;

1030 (*
xSFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**) = 0;

1031 *
pArg
 = 0;

1032 
FuncDef
 *
pNew
;

1033 
rc
 = 0;

1034 *
zLowîName
;

1035 *
z
;

1039 if–
	`NEVER
(
pEx¥
==0ËË 
pDef
;

1040 if–
pEx¥
->
›
!=
TK_COLUMN
 )  
pDef
;

1041 
pTab
 = 
pEx¥
->pTab;

1042 if–
	`NEVER
(
pTab
==0ËË 
pDef
;

1043 if–(
pTab
->
èbFœgs
 & 
TF_VútuÆ
)==0 )  
pDef
;

1044 
pVèb
 = 
	`sqlôe3GëVTabÀ
(
db
, 
pTab
)->pVtab;

1045 
	`as£π
–
pVèb
!=0 );

1046 
	`as£π
–
pVèb
->
pModuÀ
!=0 );

1047 
pMod
 = (
sqlôe3_moduÀ
 *)
pVèb
->
pModuÀ
;

1048 if–
pMod
->
xFödFun˘i⁄
==0 )  
pDef
;

1053 
zLowîName
 = 
	`sqlôe3DbSåDup
(
db
, 
pDef
->
zName
);

1054 if–
zLowîName
 ){

1055 
z
=(*)
zLowîName
; *z; z++){

1056 *
z
 = 
sqlôe3UµîToLowî
[*z];

1058 
rc
 = 
pMod
->
	`xFödFun˘i⁄
(
pVèb
, 
nArg
, 
zLowîName
, &
xSFunc
, &
pArg
);

1059 
	`sqlôe3DbFªe
(
db
, 
zLowîName
);

1061 if–
rc
==0 ){

1062  
pDef
;

1067 
pNew
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (*pNew)

1068 + 
	`sqlôe3SåÀn30
(
pDef
->
zName
) + 1);

1069 if–
pNew
==0 ){

1070  
pDef
;

1072 *
pNew
 = *
pDef
;

1073 
pNew
->
zName
 = (const *)&pNew[1];

1074 
	`mem˝y
((*)&
pNew
[1], 
pDef
->
zName
, 
	`sqlôe3SåÀn30
(pDef->zName)+1);

1075 
pNew
->
xSFunc
 = xSFunc;

1076 
pNew
->
pU£rD©a
 = 
pArg
;

1077 
pNew
->
funcFœgs
 |
SQLITE_FUNC_EPHEM
;

1078  
pNew
;

1079 
	}
}

1087 
	$sqlôe3VèbMakeWrôabÀ
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
){

1088 
P¨£
 *
pT›Àvñ
 = 
	`sqlôe3P¨£T›Àvñ
(
pP¨£
);

1089 
i
, 
n
;

1090 
TabÀ
 **
≠VèbLock
;

1092 
	`as£π
–
	`IsVútuÆ
(
pTab
) );

1093 
i
=0; i<
pT›Àvñ
->
nVèbLock
; i++){

1094 if–
pTab
==
pT›Àvñ
->
≠VèbLock
[
i
] ) ;

1096 
n
 = (
pT›Àvñ
->
nVèbLock
+1)*’T›Àvñ->
≠VèbLock
[0]);

1097 
≠VèbLock
 = 
	`sqlôe3_ªÆloc64
(
pT›Àvñ
->≠VèbLock, 
n
);

1098 if–
≠VèbLock
 ){

1099 
pT›Àvñ
->
≠VèbLock
 =ápVtabLock;

1100 
pT›Àvñ
->
≠VèbLock
[pT›Àvñ->
nVèbLock
++] = 
pTab
;

1102 
	`sqlôe3OomFau…
(
pT›Àvñ
->
db
);

1104 
	}
}

1120 
	$sqlôe3VèbEp⁄ymousTabÀInô
(
P¨£
 *
pP¨£
, 
ModuÀ
 *
pMod
){

1121 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
 = 
pMod
->pModule;

1122 
TabÀ
 *
pTab
;

1123 *
zEº
 = 0;

1124 
rc
;

1125 
sqlôe3
 *
db
 = 
pP¨£
->db;

1126 if–
pMod
->
pEpoTab
 )  1;

1127 if–
pModuÀ
->
xCª©e
!=0 &&ÖModuÀ->xCª©e!ıModuÀ->
xC⁄√˘
 )  0;

1128 
pTab
 = 
	`sqlôe3DbMÆlocZîo
(
db
, (
TabÀ
));

1129 if–
pTab
==0 )  0;

1130 
pTab
->
zName
 = 
	`sqlôe3DbSåDup
(
db
, 
pMod
->zName);

1131 if–
pTab
->
zName
==0 ){

1132 
	`sqlôe3DbFªe
(
db
, 
pTab
);

1135 
pMod
->
pEpoTab
 = 
pTab
;

1136 
pTab
->
nRef
 = 1;

1137 
pTab
->
pSchema
 = 
db
->
aDb
[0].pSchema;

1138 
pTab
->
èbFœgs
 |
TF_VútuÆ
;

1139 
pTab
->
nModuÀArg
 = 0;

1140 
pTab
->
iPKey
 = -1;

1141 
	`addModuÀArgumít
(
db
, 
pTab
, 
	`sqlôe3DbSåDup
(db,ÖTab->
zName
));

1142 
	`addModuÀArgumít
(
db
, 
pTab
, 0);

1143 
	`addModuÀArgumít
(
db
, 
pTab
, 
	`sqlôe3DbSåDup
(db,ÖTab->
zName
));

1144 
rc
 = 
	`vèbCÆlC⁄°ru˘‹
(
db
, 
pTab
, 
pMod
, 
pModuÀ
->
xC⁄√˘
, &
zEº
);

1145 if–
rc
 ){

1146 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
zEº
);

1147 
	`sqlôe3DbFªe
(
db
, 
zEº
);

1148 
	`sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
db
, 
pMod
);

1152 
	}
}

1158 
	$sqlôe3VèbEp⁄ymousTabÀCÀ¨
(
sqlôe3
 *
db
, 
ModuÀ
 *
pMod
){

1159 
TabÀ
 *
pTab
 = 
pMod
->
pEpoTab
;

1160 if–
pTab
!=0 ){

1164 
pTab
->
èbFœgs
 |
TF_EphemîÆ
;

1165 
	`sqlôe3DñëeTabÀ
(
db
, 
pTab
);

1166 
pMod
->
pEpoTab
 = 0;

1168 
	}
}

1177 
	$sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *
db
){

1178 c⁄° 
aM≠
[] = {

1179 
SQLITE_ROLLBACK
, 
SQLITE_ABORT
, 
SQLITE_FAIL
, 
SQLITE_IGNORE
, 
SQLITE_REPLACE


1181 #ifde‡
SQLITE_ENABLE_API_ARMOR


1182 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1184 
	`as£π
–
OE_Rﬁlback
==1 && 
OE_Ab‹t
==2 && 
OE_Faû
==3 );

1185 
	`as£π
–
OE_Ign‹e
==4 && 
OE_Rïœ˚
==5 );

1186 
	`as£π
–
db
->
vèbOnC⁄Êi˘
>=1 && db->vtabOnConflict<=5 );

1187  ()
aM≠
[
db
->
vèbOnC⁄Êi˘
-1];

1188 
	}
}

1195 
	$sqlôe3_vèb_c⁄fig
(
sqlôe3
 *
db
, 
›
, ...){

1196 
va_li°
 
≠
;

1197 
rc
 = 
SQLITE_OK
;

1199 #ifde‡
SQLITE_ENABLE_API_ARMOR


1200 if–!
	`sqlôe3Sa„tyCheckOk
(
db
ËË 
SQLITE_MISUSE_BKPT
;

1202 
	`sqlôe3_muãx_íãr
(
db
->
muãx
);

1203 
	`va_°¨t
(
≠
, 
›
);

1204  
›
 ){

1205 
SQLITE_VTAB_CONSTRAINT_SUPPORT
: {

1206 
VèbCtx
 *
p
 = 
db
->
pVèbCtx
;

1207 if–!
p
 ){

1208 
rc
 = 
SQLITE_MISUSE_BKPT
;

1210 
	`as£π
–
p
->
pTab
==0 || (p->pTab->
èbFœgs
 & 
TF_VútuÆ
)!=0 );

1211 
p
->
pVTabÀ
->
bC⁄°øöt
 = (
u8
)
	`va_¨g
(
≠
, );

1216 
rc
 = 
SQLITE_MISUSE_BKPT
;

1219 
	`va_íd
(
≠
);

1221 if–
rc
!=
SQLITE_OK
 ) 
	`sqlôe3Eº‹
(
db
,Ñc);

1222 
	`sqlôe3_muãx_Àave
(
db
->
muãx
);

1223  
rc
;

1224 
	}
}

	@vxworks.h

15 #i‡
deföed
(
__RTP__
Ë|| deföed(
_WRS_KERNEL
)

18 
	~<vxW‹ks.h
>

19 
	~<±hªad.h
>

20 
	#OS_VXWORKS
 1

	)

21 
	#SQLITE_OS_OTHER
 0

	)

22 
	#SQLITE_HOMEGROWN_RECURSIVE_MUTEX
 1

	)

23 
	#SQLITE_OMIT_LOAD_EXTENSION
 1

	)

24 
	#SQLITE_ENABLE_LOCKING_STYLE
 0

	)

25 
	#HAVE_UTIME
 1

	)

28 
	#OS_VXWORKS
 0

	)

29 
	#HAVE_FCHOWN
 1

	)

30 
	#HAVE_READLINK
 1

	)

31 
	#HAVE_LSTAT
 1

	)

	@wal.c

243 #i‚de‡
SQLITE_OMIT_WAL


245 
	~"wÆ.h
"

250 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

251 
	gsqlôe3WÆTø˚
 = 0;

252 
	#WALTRACE
(
X
Ëif(
sqlôe3WÆTø˚
Ë
sqlôe3DebugPrötf
 
	)
X

254 
	#WALTRACE
(
X
)

	)

270 
	#WAL_MAX_VERSION
 3007000

	)

271 
	#WALINDEX_MAX_VERSION
 3007000

	)

278 
	#WAL_WRITE_LOCK
 0

	)

279 
	#WAL_ALL_BUT_WRITE
 1

	)

280 
	#WAL_CKPT_LOCK
 1

	)

281 
	#WAL_RECOVER_LOCK
 2

	)

282 
	#WAL_READ_LOCK
(
I
Ë(3+(I))

	)

283 
	#WAL_NREADER
 (
SQLITE_SHM_NLOCK
-3)

	)

287 
WÆIndexHdr
 
	tWÆIndexHdr
;

288 
WÆIãøt‹
 
	tWÆIãøt‹
;

289 
WÆCk±Info
 
	tWÆCk±Info
;

305 
	sWÆIndexHdr
 {

306 
u32
 
	miVîsi⁄
;

307 
u32
 
	munu£d
;

308 
u32
 
	miCh™ge
;

309 
u8
 
	misInô
;

310 
u8
 
	mbigEndCksum
;

311 
u16
 
	mszPage
;

312 
u32
 
	mmxFøme
;

313 
u32
 
	mnPage
;

314 
u32
 
	maFømeCksum
[2];

315 
u32
 
	maSÆt
[2];

316 
u32
 
	maCksum
[2];

378 
	sWÆCk±Info
 {

379 
u32
 
	mnBackfûl
;

380 
u32
 
	maRódM¨k
[
WAL_NREADER
];

381 
u8
 
	maLock
[
SQLITE_SHM_NLOCK
];

382 
u32
 
	mnBackfûlAâem±ed
;

383 
u32
 
	mnŸU£d0
;

385 
	#READMARK_NOT_USED
 0xffffffff

	)

393 
	#WALINDEX_LOCK_OFFSET
 ((
WÆIndexHdr
)*2+
	`off£tof
(
WÆCk±Info
,
aLock
))

	)

394 
	#WALINDEX_HDR_SIZE
 ((
WÆIndexHdr
)*2+(
WÆCk±Info
))

	)

397 
	#WAL_FRAME_HDRSIZE
 24

	)

401 
	#WAL_HDRSIZE
 32

	)

412 
	#WAL_MAGIC
 0x377f0682

	)

419 
	#wÆFømeOff£t
(
iFøme
, 
szPage
) ( \

420 
WAL_HDRSIZE
 + ((
iFøme
)-1)*(
i64
)((
szPage
)+
WAL_FRAME_HDRSIZE
) \

421 )

	)

427 
	sWÆ
 {

428 
sqlôe3_vfs
 *
	mpVfs
;

429 
sqlôe3_fûe
 *
	mpDbFd
;

430 
sqlôe3_fûe
 *
	mpWÆFd
;

431 
u32
 
	miCÆlback
;

432 
i64
 
	mmxWÆSize
;

433 
	mnWiD©a
;

434 
	mszFú°Block
;

435 vﬁ©ûê
u32
 **
	m≠WiD©a
;

436 
u32
 
	mszPage
;

437 
i16
 
	mªadLock
;

438 
u8
 
	msyncFœgs
;

439 
u8
 
	mex˛usiveMode
;

440 
u8
 
	mwrôeLock
;

441 
u8
 
	mck±Lock
;

442 
u8
 
	mªadO∆y
;

443 
u8
 
	måunˇãOnCommô
;

444 
u8
 
	msyncHódî
;

445 
u8
 
	m∑dToSe˘‹Bound¨y
;

446 
WÆIndexHdr
 
	mhdr
;

447 
u32
 
	mmöFøme
;

448 
u32
 
	miReCksum
;

449 c⁄° *
	mzWÆName
;

450 
u32
 
	mnCk±
;

451 #ifde‡
SQLITE_DEBUG


452 
u8
 
	mlockEº‹
;

454 #ifde‡
SQLITE_ENABLE_SNAPSHOT


455 
WÆIndexHdr
 *
	mpS«pshŸ
;

462 
	#WAL_NORMAL_MODE
 0

	)

463 
	#WAL_EXCLUSIVE_MODE
 1

	)

464 
	#WAL_HEAPMEMORY_MODE
 2

	)

469 
	#WAL_RDWR
 0

	)

470 
	#WAL_RDONLY
 1

	)

471 
	#WAL_SHM_RDONLY
 2

	)

477 
u16
 
	tht_¶Ÿ
;

494 
	sWÆIãøt‹
 {

495 
	miPri‹
;

496 
	mnSegmít
;

497 
	sWÆSegmít
 {

498 
	miNext
;

499 
ht_¶Ÿ
 *
	maIndex
;

500 
u32
 *
	maPgno
;

501 
	mnE¡ry
;

502 
	miZîo
;

503 } 
	maSegmít
[1];

514 
	#HASHTABLE_NPAGE
 4096

	)

515 
	#HASHTABLE_HASH_1
 383

	)

516 
	#HASHTABLE_NSLOT
 (
HASHTABLE_NPAGE
*2Ë

	)

523 
	#HASHTABLE_NPAGE_ONE
 (
HASHTABLE_NPAGE
 - (
WALINDEX_HDR_SIZE
/(
u32
)))

	)

526 
	#WALINDEX_PGSZ
 ( \

527 (
ht_¶Ÿ
)*
HASHTABLE_NSLOT
 + 
HASHTABLE_NPAGE
*(
u32
) \

528 )

	)

539 
	$wÆIndexPage
(
WÆ
 *
pWÆ
, 
iPage
, vﬁ©ûê
u32
 **
µPage
){

540 
rc
 = 
SQLITE_OK
;

543 if–
pWÆ
->
nWiD©a
<=
iPage
 ){

544 
nByã
 = (
u32
*)*(
iPage
+1);

545 vﬁ©ûê
u32
 **
≠New
;

546 
≠New
 = (vﬁ©ûê
u32
 **)
	`sqlôe3_ªÆloc64
((*)
pWÆ
->
≠WiD©a
, 
nByã
);

547 if–!
≠New
 ){

548 *
µPage
 = 0;

549  
SQLITE_NOMEM_BKPT
;

551 
	`mem£t
((*)&
≠New
[
pWÆ
->
nWiD©a
], 0,

552 (
u32
*)*(
iPage
+1-
pWÆ
->
nWiD©a
));

553 
pWÆ
->
≠WiD©a
 = 
≠New
;

554 
pWÆ
->
nWiD©a
 = 
iPage
+1;

558 if–
pWÆ
->
≠WiD©a
[
iPage
]==0 ){

559 if–
pWÆ
->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 ){

560 
pWÆ
->
≠WiD©a
[
iPage
] = (
u32
 vﬁ©ûê*)
	`sqlôe3MÆlocZîo
(
WALINDEX_PGSZ
);

561 if–!
pWÆ
->
≠WiD©a
[
iPage
] ) 
rc
 = 
SQLITE_NOMEM_BKPT
;

563 
rc
 = 
	`sqlôe3OsShmM≠
(
pWÆ
->
pDbFd
, 
iPage
, 
WALINDEX_PGSZ
,

564 
pWÆ
->
wrôeLock
, (vﬁ©ûê**)&pWÆ->
≠WiD©a
[
iPage
]

566 if–
rc
==
SQLITE_READONLY
 ){

567 
pWÆ
->
ªadO∆y
 |
WAL_SHM_RDONLY
;

568 
rc
 = 
SQLITE_OK
;

573 *
µPage
 = 
pWÆ
->
≠WiD©a
[
iPage
];

574 
	`as£π
–
iPage
==0 || *
µPage
 || 
rc
!=
SQLITE_OK
 );

575  
rc
;

576 
	}
}

581 vﬁ©ûê
WÆCk±Info
 *
	$wÆCk±Info
(
WÆ
 *
pWÆ
){

582 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

583  (vﬁ©ûê
WÆCk±Info
*)&(
pWÆ
->
≠WiD©a
[0][(
WÆIndexHdr
)/2]);

584 
	}
}

589 vﬁ©ûê
WÆIndexHdr
 *
	$wÆIndexHdr
(
WÆ
 *
pWÆ
){

590 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

591  (vﬁ©ûê
WÆIndexHdr
*)
pWÆ
->
≠WiD©a
[0];

592 
	}
}

601 
	#BYTESWAP32
(
x
) ( \

602 (((
x
)&0x000000FF)<<24) + (((x)&0x0000FF00)<<8) \

603 + (((
x
)&0x00FF0000)>>8) + (((x)&0xFF000000)>>24) \

604 )

	)

615 
	$wÆChecksumByãs
(

616 
«tiveCksum
,

617 
u8
 *
a
,

618 
nByã
,

619 c⁄° 
u32
 *
aIn
,

620 
u32
 *
aOut


622 
u32
 
s1
, 
s2
;

623 
u32
 *
aD©a
 = (u32 *)
a
;

624 
u32
 *
aEnd
 = (u32 *)&
a
[
nByã
];

626 if–
aIn
 ){

627 
s1
 = 
aIn
[0];

628 
s2
 = 
aIn
[1];

630 
s1
 = 
s2
 = 0;

633 
	`as£π
–
nByã
>=8 );

634 
	`as£π
–(
nByã
&0x00000007)==0 );

636 if–
«tiveCksum
 ){

638 
s1
 +*
aD©a
++ + 
s2
;

639 
s2
 +*
aD©a
++ + 
s1
;

640 } 
aD©a
<
aEnd
 );

643 
s1
 +
	`BYTESWAP32
(
aD©a
[0]Ë+ 
s2
;

644 
s2
 +
	`BYTESWAP32
(
aD©a
[1]Ë+ 
s1
;

645 
aD©a
 += 2;

646 } 
aD©a
<
aEnd
 );

649 
aOut
[0] = 
s1
;

650 
aOut
[1] = 
s2
;

651 
	}
}

653 
	$wÆShmB¨rõr
(
WÆ
 *
pWÆ
){

654 if–
pWÆ
->
ex˛usiveMode
!=
WAL_HEAPMEMORY_MODE
 ){

655 
	`sqlôe3OsShmB¨rõr
(
pWÆ
->
pDbFd
);

657 
	}
}

664 
	$wÆIndexWrôeHdr
(
WÆ
 *
pWÆ
){

665 vﬁ©ûê
WÆIndexHdr
 *
aHdr
 = 
	`wÆIndexHdr
(
pWÆ
);

666 c⁄° 
nCksum
 = 
	`off£tof
(
WÆIndexHdr
, 
aCksum
);

668 
	`as£π
–
pWÆ
->
wrôeLock
 );

669 
pWÆ
->
hdr
.
isInô
 = 1;

670 
pWÆ
->
hdr
.
iVîsi⁄
 = 
WALINDEX_MAX_VERSION
;

671 
	`wÆChecksumByãs
(1, (
u8
*)&
pWÆ
->
hdr
, 
nCksum
, 0,ÖWÆ->hdr.
aCksum
);

672 
	`mem˝y
((*)&
aHdr
[1], (c⁄° *)&
pWÆ
->
hdr
, (
WÆIndexHdr
));

673 
	`wÆShmB¨rõr
(
pWÆ
);

674 
	`mem˝y
((*)&
aHdr
[0], (c⁄° *)&
pWÆ
->
hdr
, (
WÆIndexHdr
));

675 
	}
}

690 
	$wÆEncodeFøme
(

691 
WÆ
 *
pWÆ
,

692 
u32
 
iPage
,

693 
u32
 
nTrunˇã
,

694 
u8
 *
aD©a
,

695 
u8
 *
aFøme


697 
«tiveCksum
;

698 
u32
 *
aCksum
 = 
pWÆ
->
hdr
.
aFømeCksum
;

699 
	`as£π
–
WAL_FRAME_HDRSIZE
==24 );

700 
	`sqlôe3Put4byã
(&
aFøme
[0], 
iPage
);

701 
	`sqlôe3Put4byã
(&
aFøme
[4], 
nTrunˇã
);

702 if–
pWÆ
->
iReCksum
==0 ){

703 
	`mem˝y
(&
aFøme
[8], 
pWÆ
->
hdr
.
aSÆt
, 8);

705 
«tiveCksum
 = (
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
);

706 
	`wÆChecksumByãs
(
«tiveCksum
, 
aFøme
, 8, 
aCksum
,áCksum);

707 
	`wÆChecksumByãs
(
«tiveCksum
, 
aD©a
, 
pWÆ
->
szPage
, 
aCksum
,áCksum);

709 
	`sqlôe3Put4byã
(&
aFøme
[16], 
aCksum
[0]);

710 
	`sqlôe3Put4byã
(&
aFøme
[20], 
aCksum
[1]);

712 
	`mem£t
(&
aFøme
[8], 0, 16);

714 
	}
}

721 
	$wÆDecodeFøme
(

722 
WÆ
 *
pWÆ
,

723 
u32
 *
piPage
,

724 
u32
 *
≤Trunˇã
,

725 
u8
 *
aD©a
,

726 
u8
 *
aFøme


728 
«tiveCksum
;

729 
u32
 *
aCksum
 = 
pWÆ
->
hdr
.
aFømeCksum
;

730 
u32
 
pgno
;

731 
	`as£π
–
WAL_FRAME_HDRSIZE
==24 );

736 if–
	`memcmp
(&
pWÆ
->
hdr
.
aSÆt
, &
aFøme
[8], 8)!=0 ){

742 
pgno
 = 
	`sqlôe3Gë4byã
(&
aFøme
[0]);

743 if–
pgno
==0 ){

752 
«tiveCksum
 = (
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
);

753 
	`wÆChecksumByãs
(
«tiveCksum
, 
aFøme
, 8, 
aCksum
,áCksum);

754 
	`wÆChecksumByãs
(
«tiveCksum
, 
aD©a
, 
pWÆ
->
szPage
, 
aCksum
,áCksum);

755 if–
aCksum
[0]!=
	`sqlôe3Gë4byã
(&
aFøme
[16])

756 || 
aCksum
[1]!=
	`sqlôe3Gë4byã
(&
aFøme
[20])

765 *
piPage
 = 
pgno
;

766 *
≤Trunˇã
 = 
	`sqlôe3Gë4byã
(&
aFøme
[4]);

768 
	}
}

771 #i‡
deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

776 c⁄° *
	$wÆLockName
(
lockIdx
){

777 if–
lockIdx
==
WAL_WRITE_LOCK
 ){

779 }if–
lockIdx
==
WAL_CKPT_LOCK
 ){

781 }if–
lockIdx
==
WAL_RECOVER_LOCK
 ){

784 
zName
[15];

785 
	`sqlôe3_¢¥ötf
((
zName
), zName, "READ-LOCK[%d]",

786 
lockIdx
-
	`WAL_READ_LOCK
(0));

787  
zName
;

789 
	}
}

800 
	$wÆLockSh¨ed
(
WÆ
 *
pWÆ
, 
lockIdx
){

801 
rc
;

802 if–
pWÆ
->
ex˛usiveMode
 )  
SQLITE_OK
;

803 
rc
 = 
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 1,

804 
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_SHARED
);

805 
	`WALTRACE
(("WAL%p:ácquúêSHARED-%†%s\n", 
pWÆ
,

806 
	`wÆLockName
(
lockIdx
), 
rc
 ? "failed" : "ok"));

807 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = (
u8
)(
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
); )

808  
rc
;

809 
	}
}

810 
	$wÆU∆ockSh¨ed
(
WÆ
 *
pWÆ
, 
lockIdx
){

811 if–
pWÆ
->
ex˛usiveMode
 ) ;

812 ()
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 1,

813 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_SHARED
);

814 
	`WALTRACE
(("WAL%p:Ññó£ SHARED-%s\n", 
pWÆ
, 
	`wÆLockName
(
lockIdx
)));

815 
	}
}

816 
	$wÆLockEx˛usive
(
WÆ
 *
pWÆ
, 
lockIdx
, 
n
){

817 
rc
;

818 if–
pWÆ
->
ex˛usiveMode
 )  
SQLITE_OK
;

819 
rc
 = 
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 
n
,

820 
SQLITE_SHM_LOCK
 | 
SQLITE_SHM_EXCLUSIVE
);

821 
	`WALTRACE
(("WAL%p:ácquúêEXCLUSIVE-%†˙t=%d %s\n", 
pWÆ
,

822 
	`wÆLockName
(
lockIdx
), 
n
, 
rc
 ? "failed" : "ok"));

823 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = (
u8
)(
rc
!=
SQLITE_OK
 &&Ñc!=
SQLITE_BUSY
); )

824  
rc
;

825 
	}
}

826 
	$wÆU∆ockEx˛usive
(
WÆ
 *
pWÆ
, 
lockIdx
, 
n
){

827 if–
pWÆ
->
ex˛usiveMode
 ) ;

828 ()
	`sqlôe3OsShmLock
(
pWÆ
->
pDbFd
, 
lockIdx
, 
n
,

829 
SQLITE_SHM_UNLOCK
 | 
SQLITE_SHM_EXCLUSIVE
);

830 
	`WALTRACE
(("WAL%p:Ññó£ EXCLUSIVE-%†˙t=%d\n", 
pWÆ
,

831 
	`wÆLockName
(
lockIdx
), 
n
));

832 
	}
}

839 
	$wÆHash
(
u32
 
iPage
){

840 
	`as£π
–
iPage
>0 );

841 
	`as£π
–(
HASHTABLE_NSLOT
 & (HASHTABLE_NSLOT-1))==0 );

842  (
iPage
*
HASHTABLE_HASH_1
Ë& (
HASHTABLE_NSLOT
-1);

843 
	}
}

844 
	$wÆNextHash
(
iPri‹Hash
){

845  (
iPri‹Hash
+1)&(
HASHTABLE_NSLOT
-1);

846 
	}
}

862 
	$wÆHashGë
(

863 
WÆ
 *
pWÆ
,

864 
iHash
,

865 vﬁ©ûê
ht_¶Ÿ
 **
∑Hash
,

866 vﬁ©ûê
u32
 **
∑Pgno
,

867 
u32
 *
piZîo


869 
rc
;

870 vﬁ©ûê
u32
 *
aPgno
;

872 
rc
 = 
	`wÆIndexPage
(
pWÆ
, 
iHash
, &
aPgno
);

873 
	`as£π
–
rc
==
SQLITE_OK
 || 
iHash
>0 );

875 if–
rc
==
SQLITE_OK
 ){

876 
u32
 
iZîo
;

877 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

879 
aHash
 = (vﬁ©ûê
ht_¶Ÿ
 *)&
aPgno
[
HASHTABLE_NPAGE
];

880 if–
iHash
==0 ){

881 
aPgno
 = &aPgno[
WALINDEX_HDR_SIZE
/(
u32
)];

882 
iZîo
 = 0;

884 
iZîo
 = 
HASHTABLE_NPAGE_ONE
 + (
iHash
-1)*
HASHTABLE_NPAGE
;

887 *
∑Pgno
 = &
aPgno
[-1];

888 *
∑Hash
 = 
aHash
;

889 *
piZîo
 = 
iZîo
;

891  
rc
;

892 
	}
}

900 
	$wÆFømePage
(
u32
 
iFøme
){

901 
iHash
 = (
iFøme
+
HASHTABLE_NPAGE
-
HASHTABLE_NPAGE_ONE
-1) / HASHTABLE_NPAGE;

902 
	`as£π
–(
iHash
==0 || 
iFøme
>
HASHTABLE_NPAGE_ONE
)

903 && (
iHash
>=1 || 
iFøme
<=
HASHTABLE_NPAGE_ONE
)

904 && (
iHash
<=1 || 
iFøme
>(
HASHTABLE_NPAGE_ONE
+
HASHTABLE_NPAGE
))

905 && (
iHash
>=2 || 
iFøme
<=
HASHTABLE_NPAGE_ONE
+
HASHTABLE_NPAGE
)

906 && (
iHash
<=2 || 
iFøme
>(
HASHTABLE_NPAGE_ONE
+2*
HASHTABLE_NPAGE
))

908  
iHash
;

909 
	}
}

914 
u32
 
	$wÆFømePgno
(
WÆ
 *
pWÆ
, 
u32
 
iFøme
){

915 
iHash
 = 
	`wÆFømePage
(
iFøme
);

916 if–
iHash
==0 ){

917  
pWÆ
->
≠WiD©a
[0][
WALINDEX_HDR_SIZE
/(
u32
Ë+ 
iFøme
 - 1];

919  
pWÆ
->
≠WiD©a
[
iHash
][(
iFøme
-1-
HASHTABLE_NPAGE_ONE
)%
HASHTABLE_NPAGE
];

920 
	}
}

934 
	$wÆCÀ™upHash
(
WÆ
 *
pWÆ
){

935 vﬁ©ûê
ht_¶Ÿ
 *
aHash
 = 0;

936 vﬁ©ûê
u32
 *
aPgno
 = 0;

937 
u32
 
iZîo
 = 0;

938 
iLimô
 = 0;

939 
nByã
;

940 
i
;

942 
	`as£π
–
pWÆ
->
wrôeLock
 );

943 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
-1 );

944 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
 );

945 
	`ã°ˇ£
–
pWÆ
->
hdr
.
mxFøme
==
HASHTABLE_NPAGE_ONE
+1 );

947 if–
pWÆ
->
hdr
.
mxFøme
==0 ) ;

953 
	`as£π
–
pWÆ
->
nWiD©a
>
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
) );

954 
	`as£π
–
pWÆ
->
≠WiD©a
[
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
)] );

955 
	`wÆHashGë
(
pWÆ
, 
	`wÆFømePage
’WÆ->
hdr
.
mxFøme
), &
aHash
, &
aPgno
, &
iZîo
);

960 
iLimô
 = 
pWÆ
->
hdr
.
mxFøme
 - 
iZîo
;

961 
	`as£π
–
iLimô
>0 );

962 
i
=0; i<
HASHTABLE_NSLOT
; i++){

963 if–
aHash
[
i
]>
iLimô
 ){

964 
aHash
[
i
] = 0;

971 
nByã
 = ()((*)
aHash
 - (*)&
aPgno
[
iLimô
+1]);

972 
	`mem£t
((*)&
aPgno
[
iLimô
+1], 0, 
nByã
);

974 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


978 if–
iLimô
 ){

979 
j
;

980 
iKey
;

981 
j
=1; j<=
iLimô
; j++){

982 
iKey
=
	`wÆHash
(
aPgno
[
j
]); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

983 if–
aHash
[
iKey
]==
j
 ) ;

985 
	`as£π
–
aHash
[
iKey
]==
j
 );

989 
	}
}

996 
	$wÆIndexAµíd
(
WÆ
 *
pWÆ
, 
u32
 
iFøme
, u32 
iPage
){

997 
rc
;

998 
u32
 
iZîo
 = 0;

999 vﬁ©ûê
u32
 *
aPgno
 = 0;

1000 vﬁ©ûê
ht_¶Ÿ
 *
aHash
 = 0;

1002 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
	`wÆFømePage
(
iFøme
), &
aHash
, &
aPgno
, &
iZîo
);

1007 if–
rc
==
SQLITE_OK
 ){

1008 
iKey
;

1009 
idx
;

1010 
nCﬁlide
;

1012 
idx
 = 
iFøme
 - 
iZîo
;

1013 
	`as£π
–
idx
 <
HASHTABLE_NSLOT
/2 + 1 );

1018 if–
idx
==1 ){

1019 
nByã
 = ()((
u8
 *)&
aHash
[
HASHTABLE_NSLOT
] - (u8 *)&
aPgno
[1]);

1020 
	`mem£t
((*)&
aPgno
[1], 0, 
nByã
);

1029 if–
aPgno
[
idx
] ){

1030 
	`wÆCÀ™upHash
(
pWÆ
);

1031 
	`as£π
–!
aPgno
[
idx
] );

1035 
nCﬁlide
 = 
idx
;

1036 
iKey
=
	`wÆHash
(
iPage
); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

1037 if–(
nCﬁlide
--)==0 )  
SQLITE_CORRUPT_BKPT
;

1039 
aPgno
[
idx
] = 
iPage
;

1040 
aHash
[
iKey
] = (
ht_¶Ÿ
)
idx
;

1042 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


1047 
i
;

1048 
nE¡ry
 = 0;

1049 
i
=0; i<
HASHTABLE_NSLOT
; i++){ if–
aHash
[i] ) 
nE¡ry
++; }

1050 
	`as£π
–
nE¡ry
==
idx
 );

1058 if–(
idx
&0x3ff)==0 ){

1059 
i
;

1060 
i
=1; i<=
idx
; i++){

1061 
iKey
=
	`wÆHash
(
aPgno
[
i
]); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

1062 if–
aHash
[
iKey
]==
i
 ) ;

1064 
	`as£π
–
aHash
[
iKey
]==
i
 );

1071  
rc
;

1072 
	}
}

1085 
	$wÆIndexRecovî
(
WÆ
 *
pWÆ
){

1086 
rc
;

1087 
i64
 
nSize
;

1088 
u32
 
aFømeCksum
[2] = {0, 0};

1089 
iLock
;

1090 
nLock
;

1098 
	`as£π
–
pWÆ
->
ck±Lock
==1 ||ÖWal->ckptLock==0 );

1099 
	`as£π
–
WAL_ALL_BUT_WRITE
==
WAL_WRITE_LOCK
+1 );

1100 
	`as£π
–
WAL_CKPT_LOCK
==
WAL_ALL_BUT_WRITE
 );

1101 
	`as£π
–
pWÆ
->
wrôeLock
 );

1102 
iLock
 = 
WAL_ALL_BUT_WRITE
 + 
pWÆ
->
ck±Lock
;

1103 
nLock
 = 
SQLITE_SHM_NLOCK
 - 
iLock
;

1104 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
iLock
, 
nLock
);

1105 if–
rc
 ){

1106  
rc
;

1108 
	`WALTRACE
(("WAL%p:Ñecovîy begö...\n", 
pWÆ
));

1110 
	`mem£t
(&
pWÆ
->
hdr
, 0, (
WÆIndexHdr
));

1112 
rc
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pWÆFd
, &
nSize
);

1113 if–
rc
!=
SQLITE_OK
 ){

1114 
ªcovîy_îr‹
;

1117 if–
nSize
>
WAL_HDRSIZE
 ){

1118 
u8
 
aBuf
[
WAL_HDRSIZE
];

1119 
u8
 *
aFøme
 = 0;

1120 
szFøme
;

1121 
u8
 *
aD©a
;

1122 
iFøme
;

1123 
i64
 
iOff£t
;

1124 
szPage
;

1125 
u32
 
magic
;

1126 
u32
 
vîsi⁄
;

1127 
isVÆid
;

1130 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, 
WAL_HDRSIZE
, 0);

1131 if–
rc
!=
SQLITE_OK
 ){

1132 
ªcovîy_îr‹
;

1140 
magic
 = 
	`sqlôe3Gë4byã
(&
aBuf
[0]);

1141 
szPage
 = 
	`sqlôe3Gë4byã
(&
aBuf
[8]);

1142 if–(
magic
&0xFFFFFFFE)!=
WAL_MAGIC


1143 || 
szPage
&(szPage-1)

1144 || 
szPage
>
SQLITE_MAX_PAGE_SIZE


1145 || 
szPage
<512

1147 
föished
;

1149 
pWÆ
->
hdr
.
bigEndCksum
 = (
u8
)(
magic
&0x00000001);

1150 
pWÆ
->
szPage
 = szPage;

1151 
pWÆ
->
nCk±
 = 
	`sqlôe3Gë4byã
(&
aBuf
[12]);

1152 
	`mem˝y
(&
pWÆ
->
hdr
.
aSÆt
, &
aBuf
[16], 8);

1155 
	`wÆChecksumByãs
(
pWÆ
->
hdr
.
bigEndCksum
==
SQLITE_BIGENDIAN
,

1156 
aBuf
, 
WAL_HDRSIZE
-2*4, 0, 
pWÆ
->
hdr
.
aFømeCksum


1158 if–
pWÆ
->
hdr
.
aFømeCksum
[0]!=
	`sqlôe3Gë4byã
(&
aBuf
[24])

1159 || 
pWÆ
->
hdr
.
aFømeCksum
[1]!=
	`sqlôe3Gë4byã
(&
aBuf
[28])

1161 
föished
;

1166 
vîsi⁄
 = 
	`sqlôe3Gë4byã
(&
aBuf
[4]);

1167 if–
vîsi⁄
!=
WAL_MAX_VERSION
 ){

1168 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

1169 
föished
;

1173 
szFøme
 = 
szPage
 + 
WAL_FRAME_HDRSIZE
;

1174 
aFøme
 = (
u8
 *)
	`sqlôe3_mÆloc64
(
szFøme
);

1175 if–!
aFøme
 ){

1176 
rc
 = 
SQLITE_NOMEM_BKPT
;

1177 
ªcovîy_îr‹
;

1179 
aD©a
 = &
aFøme
[
WAL_FRAME_HDRSIZE
];

1182 
iFøme
 = 0;

1183 
iOff£t
=
WAL_HDRSIZE
; (iOff£t+
szFøme
)<=
nSize
; iOffset+=szFrame){

1184 
u32
 
pgno
;

1185 
u32
 
nTrunˇã
;

1188 
iFøme
++;

1189 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aFøme
, 
szFøme
, 
iOff£t
);

1190 if–
rc
!=
SQLITE_OK
 ) ;

1191 
isVÆid
 = 
	`wÆDecodeFøme
(
pWÆ
, &
pgno
, &
nTrunˇã
, 
aD©a
, 
aFøme
);

1192 if–!
isVÆid
 ) ;

1193 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
pgno
);

1194 if–
rc
!=
SQLITE_OK
 ) ;

1197 if–
nTrunˇã
 ){

1198 
pWÆ
->
hdr
.
mxFøme
 = 
iFøme
;

1199 
pWÆ
->
hdr
.
nPage
 = 
nTrunˇã
;

1200 
pWÆ
->
hdr
.
szPage
 = (
u16
)((szPage&0xff00) | (szPage>>16));

1201 
	`ã°ˇ£
–
szPage
<=32768 );

1202 
	`ã°ˇ£
–
szPage
>=65536 );

1203 
aFømeCksum
[0] = 
pWÆ
->
hdr
.aFrameCksum[0];

1204 
aFømeCksum
[1] = 
pWÆ
->
hdr
.aFrameCksum[1];

1208 
	`sqlôe3_‰ì
(
aFøme
);

1211 
föished
:

1212 if–
rc
==
SQLITE_OK
 ){

1213 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

1214 
i
;

1215 
pWÆ
->
hdr
.
aFømeCksum
[0] =áFrameCksum[0];

1216 
pWÆ
->
hdr
.
aFømeCksum
[1] =áFrameCksum[1];

1217 
	`wÆIndexWrôeHdr
(
pWÆ
);

1223 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1224 
pInfo
->
nBackfûl
 = 0;

1225 
pInfo
->
nBackfûlAâem±ed
 = 
pWÆ
->
hdr
.
mxFøme
;

1226 
pInfo
->
aRódM¨k
[0] = 0;

1227 
i
=1; i<
WAL_NREADER
; i++Ë
pInfo
->
aRódM¨k
[i] = 
READMARK_NOT_USED
;

1228 if–
pWÆ
->
hdr
.
mxFøme
 ) 
pInfo
->
aRódM¨k
[1] =ÖWal->hdr.mxFrame;

1235 if–
pWÆ
->
hdr
.
nPage
 ){

1236 
	`sqlôe3_log
(
SQLITE_NOTICE_RECOVER_WAL
,

1238 
pWÆ
->
hdr
.
mxFøme
,ÖWÆ->
zWÆName


1243 
ªcovîy_îr‹
:

1244 
	`WALTRACE
(("WAL%p:Ñecovîy %s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

1245 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
iLock
, 
nLock
);

1246  
rc
;

1247 
	}
}

1252 
	$wÆIndexClo£
(
WÆ
 *
pWÆ
, 
isDñëe
){

1253 if–
pWÆ
->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 ){

1254 
i
;

1255 
i
=0; i<
pWÆ
->
nWiD©a
; i++){

1256 
	`sqlôe3_‰ì
((*)
pWÆ
->
≠WiD©a
[
i
]);

1257 
pWÆ
->
≠WiD©a
[
i
] = 0;

1260 
	`sqlôe3OsShmUnm≠
(
pWÆ
->
pDbFd
, 
isDñëe
);

1262 
	}
}

1279 
	$sqlôe3WÆO≥n
(

1280 
sqlôe3_vfs
 *
pVfs
,

1281 
sqlôe3_fûe
 *
pDbFd
,

1282 c⁄° *
zWÆName
,

1283 
bNoShm
,

1284 
i64
 
mxWÆSize
,

1285 
WÆ
 **
µWÆ


1287 
rc
;

1288 
WÆ
 *
pRë
;

1289 
Êags
;

1291 
	`as£π
–
zWÆName
 && zWalName[0] );

1292 
	`as£π
–
pDbFd
 );

1300 
	`as£π
–120==
WALINDEX_LOCK_OFFSET
 );

1301 
	`as£π
–136==
WALINDEX_HDR_SIZE
 );

1302 #ifde‡
WIN_SHM_BASE


1303 
	`as£π
–
WIN_SHM_BASE
==
WALINDEX_LOCK_OFFSET
 );

1305 #ifde‡
UNIX_SHM_BASE


1306 
	`as£π
–
UNIX_SHM_BASE
==
WALINDEX_LOCK_OFFSET
 );

1311 *
µWÆ
 = 0;

1312 
pRë
 = (
WÆ
*)
	`sqlôe3MÆlocZîo
((WÆË+ 
pVfs
->
szOsFûe
);

1313 if–!
pRë
 ){

1314  
SQLITE_NOMEM_BKPT
;

1317 
pRë
->
pVfs
 =ÖVfs;

1318 
pRë
->
pWÆFd
 = (
sqlôe3_fûe
 *)&pRet[1];

1319 
pRë
->
pDbFd
 =ÖDbFd;

1320 
pRë
->
ªadLock
 = -1;

1321 
pRë
->
mxWÆSize
 = mxWalSize;

1322 
pRë
->
zWÆName
 = zWalName;

1323 
pRë
->
syncHódî
 = 1;

1324 
pRë
->
∑dToSe˘‹Bound¨y
 = 1;

1325 
pRë
->
ex˛usiveMode
 = (
bNoShm
 ? 
WAL_HEAPMEMORY_MODE
: 
WAL_NORMAL_MODE
);

1328 
Êags
 = (
SQLITE_OPEN_READWRITE
|
SQLITE_OPEN_CREATE
|
SQLITE_OPEN_WAL
);

1329 
rc
 = 
	`sqlôe3OsO≥n
(
pVfs
, 
zWÆName
, 
pRë
->
pWÆFd
, 
Êags
, &flags);

1330 if–
rc
==
SQLITE_OK
 && 
Êags
&
SQLITE_OPEN_READONLY
 ){

1331 
pRë
->
ªadO∆y
 = 
WAL_RDONLY
;

1334 if–
rc
!=
SQLITE_OK
 ){

1335 
	`wÆIndexClo£
(
pRë
, 0);

1336 
	`sqlôe3OsClo£
(
pRë
->
pWÆFd
);

1337 
	`sqlôe3_‰ì
(
pRë
);

1339 
iDC
 = 
	`sqlôe3OsDevi˚Ch¨a˘îi°ics
(
pDbFd
);

1340 if–
iDC
 & 
SQLITE_IOCAP_SEQUENTIAL
 ){ 
pRë
->
syncHódî
 = 0; }

1341 if–
iDC
 & 
SQLITE_IOCAP_POWERSAFE_OVERWRITE
 ){

1342 
pRë
->
∑dToSe˘‹Bound¨y
 = 0;

1344 *
µWÆ
 = 
pRë
;

1345 
	`WALTRACE
(("WAL%d: o≥√d\n", 
pRë
));

1347  
rc
;

1348 
	}
}

1353 
	$sqlôe3WÆLimô
(
WÆ
 *
pWÆ
, 
i64
 
iLimô
){

1354 if–
pWÆ
 )ÖWÆ->
mxWÆSize
 = 
iLimô
;

1355 
	}
}

1367 
	$wÆIãøt‹Next
(

1368 
WÆIãøt‹
 *
p
,

1369 
u32
 *
piPage
,

1370 
u32
 *
piFøme


1372 
u32
 
iMö
;

1373 
u32
 
iRë
 = 0xFFFFFFFF;

1374 
i
;

1376 
iMö
 = 
p
->
iPri‹
;

1377 
	`as£π
–
iMö
<0xffffffff );

1378 
i
=
p
->
nSegmít
-1; i>=0; i--){

1379 
WÆSegmít
 *
pSegmít
 = &
p
->
aSegmít
[
i
];

1380  
pSegmít
->
iNext
<pSegmít->
nE¡ry
 ){

1381 
u32
 
iPg
 = 
pSegmít
->
aPgno
[pSegmít->
aIndex
[pSegmít->
iNext
]];

1382 if–
iPg
>
iMö
 ){

1383 if–
iPg
<
iRë
 ){

1384 
iRë
 = 
iPg
;

1385 *
piFøme
 = 
pSegmít
->
iZîo
 +ÖSegmít->
aIndex
[pSegmít->
iNext
];

1389 
pSegmít
->
iNext
++;

1393 *
piPage
 = 
p
->
iPri‹
 = 
iRë
;

1394  (
iRë
==0xFFFFFFFF);

1395 
	}
}

1420 
	$wÆMîge
(

1421 c⁄° 
u32
 *
aC⁄ã¡
,

1422 
ht_¶Ÿ
 *
aLe·
,

1423 
nLe·
,

1424 
ht_¶Ÿ
 **
∑Right
,

1425 *
≤Right
,

1426 
ht_¶Ÿ
 *
aTmp


1428 
iLe·
 = 0;

1429 
iRight
 = 0;

1430 
iOut
 = 0;

1431 
nRight
 = *
≤Right
;

1432 
ht_¶Ÿ
 *
aRight
 = *
∑Right
;

1434 
	`as£π
–
nLe·
>0 && 
nRight
>0 );

1435  
iRight
<
nRight
 || 
iLe·
<
nLe·
 ){

1436 
ht_¶Ÿ
 
log∑ge
;

1437 
Pgno
 
db∑ge
;

1439 if–(
iLe·
<
nLe·
)

1440 && (
iRight
>=
nRight
 || 
aC⁄ã¡
[
aLe·
[
iLe·
]]<aC⁄ã¡[
aRight
[iRight]])

1442 
log∑ge
 = 
aLe·
[
iLe·
++];

1444 
log∑ge
 = 
aRight
[
iRight
++];

1446 
db∑ge
 = 
aC⁄ã¡
[
log∑ge
];

1448 
aTmp
[
iOut
++] = 
log∑ge
;

1449 if–
iLe·
<
nLe·
 && 
aC⁄ã¡
[
aLe·
[iLe·]]==
db∑ge
 ) iLeft++;

1451 
	`as£π
–
iLe·
>=
nLe·
 || 
aC⁄ã¡
[
aLe·
[iLe·]]>
db∑ge
 );

1452 
	`as£π
–
iRight
>=
nRight
 || 
aC⁄ã¡
[
aRight
[iRight]]>
db∑ge
 );

1455 *
∑Right
 = 
aLe·
;

1456 *
≤Right
 = 
iOut
;

1457 
	`mem˝y
(
aLe·
, 
aTmp
, ◊Tmp[0])*
iOut
);

1458 
	}
}

1477 
	$wÆMîges‹t
(

1478 c⁄° 
u32
 *
aC⁄ã¡
,

1479 
ht_¶Ÿ
 *
aBuf„r
,

1480 
ht_¶Ÿ
 *
aLi°
,

1481 *
≤Li°


1483 
	sSubli°
 {

1484 
nLi°
;

1485 
ht_¶Ÿ
 *
aLi°
;

1488 c⁄° 
nLi°
 = *
≤Li°
;

1489 
nMîge
 = 0;

1490 
ht_¶Ÿ
 *
aMîge
 = 0;

1491 
iLi°
;

1492 
u32
 
iSub
 = 0;

1493 
Subli°
 
aSub
[13];

1495 
	`mem£t
(
aSub
, 0, (aSub));

1496 
	`as£π
–
nLi°
<=
HASHTABLE_NPAGE
 &&ÇList>0 );

1497 
	`as£π
–
HASHTABLE_NPAGE
==(1<<(
	`AºaySize
(
aSub
)-1)) );

1499 
iLi°
=0; iLi°<
nLi°
; iList++){

1500 
nMîge
 = 1;

1501 
aMîge
 = &
aLi°
[
iLi°
];

1502 
iSub
=0; 
iLi°
 & (1<<iSub); iSub++){

1503 
Subli°
 *
p
;

1504 
	`as£π
–
iSub
<
	`AºaySize
(
aSub
) );

1505 
p
 = &
aSub
[
iSub
];

1506 
	`as£π
–
p
->
aLi°
 &&Ö->
nLi°
<=(1<<
iSub
) );

1507 
	`as£π
–
p
->
aLi°
==&aLi°[
iLi°
&~((2<<
iSub
)-1)] );

1508 
	`wÆMîge
(
aC⁄ã¡
, 
p
->
aLi°
,Ö->
nLi°
, &
aMîge
, &
nMîge
, 
aBuf„r
);

1510 
aSub
[
iSub
].
aLi°
 = 
aMîge
;

1511 
aSub
[
iSub
].
nLi°
 = 
nMîge
;

1514 
iSub
++; iSub<
	`AºaySize
(
aSub
); iSub++){

1515 if–
nLi°
 & (1<<
iSub
) ){

1516 
Subli°
 *
p
;

1517 
	`as£π
–
iSub
<
	`AºaySize
(
aSub
) );

1518 
p
 = &
aSub
[
iSub
];

1519 
	`as£π
–
p
->
nLi°
<=(1<<
iSub
) );

1520 
	`as£π
–
p
->
aLi°
==&aLi°[
nLi°
&~((2<<
iSub
)-1)] );

1521 
	`wÆMîge
(
aC⁄ã¡
, 
p
->
aLi°
,Ö->
nLi°
, &
aMîge
, &
nMîge
, 
aBuf„r
);

1524 
	`as£π
–
aMîge
==
aLi°
 );

1525 *
≤Li°
 = 
nMîge
;

1527 #ifde‡
SQLITE_DEBUG


1529 
i
;

1530 
i
=1; i<*
≤Li°
; i++){

1531 
	`as£π
–
aC⁄ã¡
[
aLi°
[
i
]] >áContent[aList[i-1]] );

1535 
	}
}

1540 
	$wÆIãøt‹Fªe
(
WÆIãøt‹
 *
p
){

1541 
	`sqlôe3_‰ì
(
p
);

1542 
	}
}

1556 
	$wÆIãøt‹Inô
(
WÆ
 *
pWÆ
, 
WÆIãøt‹
 **
µ
){

1557 
WÆIãøt‹
 *
p
;

1558 
nSegmít
;

1559 
u32
 
iLa°
;

1560 
nByã
;

1561 
i
;

1562 
ht_¶Ÿ
 *
aTmp
;

1563 
rc
 = 
SQLITE_OK
;

1568 
	`as£π
–
pWÆ
->
ck±Lock
 &&ÖWÆ->
hdr
.
mxFøme
>0 );

1569 
iLa°
 = 
pWÆ
->
hdr
.
mxFøme
;

1572 
nSegmít
 = 
	`wÆFømePage
(
iLa°
) + 1;

1573 
nByã
 = (
WÆIãøt‹
)

1574 + (
nSegmít
-1)*(
WÆSegmít
)

1575 + 
iLa°
*(
ht_¶Ÿ
);

1576 
p
 = (
WÆIãøt‹
 *)
	`sqlôe3_mÆloc64
(
nByã
);

1577 if–!
p
 ){

1578  
SQLITE_NOMEM_BKPT
;

1580 
	`mem£t
(
p
, 0, 
nByã
);

1581 
p
->
nSegmít
 =ÇSegment;

1586 
aTmp
 = (
ht_¶Ÿ
 *)
	`sqlôe3_mÆloc64
(

1587 (
ht_¶Ÿ
Ë* (
iLa°
>
HASHTABLE_NPAGE
?HASHTABLE_NPAGE:iLast)

1589 if–!
aTmp
 ){

1590 
rc
 = 
SQLITE_NOMEM_BKPT
;

1593 
i
=0; 
rc
==
SQLITE_OK
 && i<
nSegmít
; i++){

1594 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

1595 
u32
 
iZîo
;

1596 vﬁ©ûê
u32
 *
aPgno
;

1598 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
i
, &
aHash
, &
aPgno
, &
iZîo
);

1599 if–
rc
==
SQLITE_OK
 ){

1600 
j
;

1601 
nE¡ry
;

1602 
ht_¶Ÿ
 *
aIndex
;

1604 
aPgno
++;

1605 if–(
i
+1)==
nSegmít
 ){

1606 
nE¡ry
 = ()(
iLa°
 - 
iZîo
);

1608 
nE¡ry
 = ()((
u32
*)
aHash
 - (u32*)
aPgno
);

1610 
aIndex
 = &((
ht_¶Ÿ
 *)&
p
->
aSegmít
[p->
nSegmít
])[
iZîo
];

1611 
iZîo
++;

1613 
j
=0; j<
nE¡ry
; j++){

1614 
aIndex
[
j
] = (
ht_¶Ÿ
)j;

1616 
	`wÆMîges‹t
((
u32
 *)
aPgno
, 
aTmp
, 
aIndex
, &
nE¡ry
);

1617 
p
->
aSegmít
[
i
].
iZîo
 = iZero;

1618 
p
->
aSegmít
[
i
].
nE¡ry
 =ÇEntry;

1619 
p
->
aSegmít
[
i
].
aIndex
 =áIndex;

1620 
p
->
aSegmít
[
i
].
aPgno
 = (
u32
 *)aPgno;

1623 
	`sqlôe3_‰ì
(
aTmp
);

1625 if–
rc
!=
SQLITE_OK
 ){

1626 
	`wÆIãøt‹Fªe
(
p
);

1628 *
µ
 = 
p
;

1629  
rc
;

1630 
	}
}

1638 
wÆBusyLock
(

1639 
WÆ
 *
pWÆ
,

1640 (*
xBusy
)(*),

1641 *
pBusyArg
,

1642 
lockIdx
,

1643 
n


1645 
rc
;

1647 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
lockIdx
, 
n
);

1648 } 
xBusy
 && 
rc
==
SQLITE_BUSY
 && 
	`xBusy
(
pBusyArg
) );

1649  
rc
;

1650 
	}
}

1656 
	$wÆPagesize
(
WÆ
 *
pWÆ
){

1657  (
pWÆ
->
hdr
.
szPage
&0xfe00) + ((pWal->hdr.szPage&0x0001)<<16);

1658 
	}
}

1677 
	$wÆRe°¨tHdr
(
WÆ
 *
pWÆ
, 
u32
 
ß…1
){

1678 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1679 
i
;

1680 
u32
 *
aSÆt
 = 
pWÆ
->
hdr
.aSalt;

1681 
pWÆ
->
nCk±
++;

1682 
pWÆ
->
hdr
.
mxFøme
 = 0;

1683 
	`sqlôe3Put4byã
((
u8
*)&
aSÆt
[0], 1 + 
	`sqlôe3Gë4byã
((u8*)&aSalt[0]));

1684 
	`mem˝y
(&
pWÆ
->
hdr
.
aSÆt
[1], &
ß…1
, 4);

1685 
	`wÆIndexWrôeHdr
(
pWÆ
);

1686 
pInfo
->
nBackfûl
 = 0;

1687 
pInfo
->
nBackfûlAâem±ed
 = 0;

1688 
pInfo
->
aRódM¨k
[1] = 0;

1689 
i
=2; i<
WAL_NREADER
; i++Ë
pInfo
->
aRódM¨k
[i] = 
READMARK_NOT_USED
;

1690 
	`as£π
–
pInfo
->
aRódM¨k
[0]==0 );

1691 
	}
}

1724 
wÆCheckpoöt
(

1725 
WÆ
 *
pWÆ
,

1726 
eMode
,

1727 (*
xBusy
)(*),

1728 *
pBusyArg
,

1729 
sync_Êags
,

1730 
u8
 *
zBuf


1732 
rc
 = 
SQLITE_OK
;

1733 
szPage
;

1734 
WÆIãøt‹
 *
pIãr
 = 0;

1735 
u32
 
iDb∑ge
 = 0;

1736 
u32
 
iFøme
 = 0;

1737 
u32
 
mxSa„Føme
;

1738 
u32
 
mxPage
;

1739 
i
;

1740 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

1742 
szPage
 = 
	`wÆPagesize
(
pWÆ
);

1743 
	`ã°ˇ£
–
szPage
<=32768 );

1744 
	`ã°ˇ£
–
szPage
>=65536 );

1745 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

1746 if–
pInfo
->
nBackfûl
<
pWÆ
->
hdr
.
mxFøme
 ){

1749 
rc
 = 
	`wÆIãøt‹Inô
(
pWÆ
, &
pIãr
);

1750 if–
rc
!=
SQLITE_OK
 ){

1751  
rc
;

1753 
	`as£π
–
pIãr
 );

1757 
	`as£π
–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 || 
xBusy
==0 );

1764 
mxSa„Føme
 = 
pWÆ
->
hdr
.
mxFøme
;

1765 
mxPage
 = 
pWÆ
->
hdr
.
nPage
;

1766 
i
=1; i<
WAL_NREADER
; i++){

1775 
u32
 
y
 = 
pInfo
->
aRódM¨k
[
i
];

1776 if–
mxSa„Føme
>
y
 ){

1777 
	`as£π
–
y
<=
pWÆ
->
hdr
.
mxFøme
 );

1778 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(
i
), 1);

1779 if–
rc
==
SQLITE_OK
 ){

1780 
pInfo
->
aRódM¨k
[
i
] = (i==1 ? 
mxSa„Føme
 : 
READMARK_NOT_USED
);

1781 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

1782 }if–
rc
==
SQLITE_BUSY
 ){

1783 
mxSa„Føme
 = 
y
;

1784 
xBusy
 = 0;

1786 
wÆcheckpoöt_out
;

1791 if–
pInfo
->
nBackfûl
<
mxSa„Føme


1792 && (
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(0),1))==
SQLITE_OK


1794 
i64
 
nSize
;

1795 
u32
 
nBackfûl
 = 
pInfo
->nBackfill;

1797 
pInfo
->
nBackfûlAâem±ed
 = 
mxSa„Føme
;

1800 if–
sync_Êags
 ){

1801 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pWÆFd
, 
sync_Êags
);

1807 if–
rc
==
SQLITE_OK
 ){

1808 
i64
 
nReq
 = ((i64)
mxPage
 * 
szPage
);

1809 
rc
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pDbFd
, &
nSize
);

1810 if–
rc
==
SQLITE_OK
 && 
nSize
<
nReq
 ){

1811 
	`sqlôe3OsFûeC⁄åﬁHöt
(
pWÆ
->
pDbFd
, 
SQLITE_FCNTL_SIZE_HINT
, &
nReq
);

1817  
rc
==
SQLITE_OK
 && 0==
	`wÆIãøt‹Next
(
pIãr
, &
iDb∑ge
, &
iFøme
) ){

1818 
i64
 
iOff£t
;

1819 
	`as£π
–
	`wÆFømePgno
(
pWÆ
, 
iFøme
)==
iDb∑ge
 );

1820 if–
iFøme
<=
nBackfûl
 || iFøme>
mxSa„Føme
 || 
iDb∑ge
>
mxPage
 ){

1823 
iOff£t
 = 
	`wÆFømeOff£t
(
iFøme
, 
szPage
Ë+ 
WAL_FRAME_HDRSIZE
;

1825 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
zBuf
, 
szPage
, 
iOff£t
);

1826 if–
rc
!=
SQLITE_OK
 ) ;

1827 
iOff£t
 = (
iDb∑ge
-1)*(
i64
)
szPage
;

1828 
	`ã°ˇ£
–
	`IS_BIG_INT
(
iOff£t
) );

1829 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pDbFd
, 
zBuf
, 
szPage
, 
iOff£t
);

1830 if–
rc
!=
SQLITE_OK
 ) ;

1834 if–
rc
==
SQLITE_OK
 ){

1835 if–
mxSa„Føme
==
	`wÆIndexHdr
(
pWÆ
)->
mxFøme
 ){

1836 
i64
 
szDb
 = 
pWÆ
->
hdr
.
nPage
*(i64)
szPage
;

1837 
	`ã°ˇ£
–
	`IS_BIG_INT
(
szDb
) );

1838 
rc
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pDbFd
, 
szDb
);

1839 if–
rc
==
SQLITE_OK
 && 
sync_Êags
 ){

1840 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pDbFd
, 
sync_Êags
);

1843 if–
rc
==
SQLITE_OK
 ){

1844 
pInfo
->
nBackfûl
 = 
mxSa„Føme
;

1849 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(0), 1);

1852 if–
rc
==
SQLITE_BUSY
 ){

1855 
rc
 = 
SQLITE_OK
;

1864 if–
rc
==
SQLITE_OK
 && 
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 ){

1865 
	`as£π
–
pWÆ
->
wrôeLock
 );

1866 if–
pInfo
->
nBackfûl
<
pWÆ
->
hdr
.
mxFøme
 ){

1867 
rc
 = 
SQLITE_BUSY
;

1868 }if–
eMode
>=
SQLITE_CHECKPOINT_RESTART
 ){

1869 
u32
 
ß…1
;

1870 
	`sqlôe3_øndom√ss
(4, &
ß…1
);

1871 
	`as£π
–
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme
 );

1872 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

1873 if–
rc
==
SQLITE_OK
 ){

1874 if–
eMode
==
SQLITE_CHECKPOINT_TRUNCATE
 ){

1888 
	`wÆRe°¨tHdr
(
pWÆ
, 
ß…1
);

1889 
rc
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pWÆFd
, 0);

1891 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

1896 
wÆcheckpoöt_out
:

1897 
	`wÆIãøt‹Fªe
(
pIãr
);

1898  
rc
;

1899 
	}
}

1905 
	$wÆLimôSize
(
WÆ
 *
pWÆ
, 
i64
 
nMax
){

1906 
i64
 
sz
;

1907 
rx
;

1908 
	`sqlôe3BegöBíignMÆloc
();

1909 
rx
 = 
	`sqlôe3OsFûeSize
(
pWÆ
->
pWÆFd
, &
sz
);

1910 if–
rx
==
SQLITE_OK
 && (
sz
 > 
nMax
 ) ){

1911 
rx
 = 
	`sqlôe3OsTrunˇã
(
pWÆ
->
pWÆFd
, 
nMax
);

1913 
	`sqlôe3EndBíignMÆloc
();

1914 if–
rx
 ){

1915 
	`sqlôe3_log
(
rx
, "ˇ¬ŸÜimô WAL size: %s", 
pWÆ
->
zWÆName
);

1917 
	}
}

1922 
	$sqlôe3WÆClo£
(

1923 
WÆ
 *
pWÆ
,

1924 
sync_Êags
,

1925 
nBuf
,

1926 
u8
 *
zBuf


1928 
rc
 = 
SQLITE_OK
;

1929 if–
pWÆ
 ){

1930 
isDñëe
 = 0;

1940 
rc
 = 
	`sqlôe3OsLock
(
pWÆ
->
pDbFd
, 
SQLITE_LOCK_EXCLUSIVE
);

1941 if–
rc
==
SQLITE_OK
 ){

1942 if–
pWÆ
->
ex˛usiveMode
==
WAL_NORMAL_MODE
 ){

1943 
pWÆ
->
ex˛usiveMode
 = 
WAL_EXCLUSIVE_MODE
;

1945 
rc
 = 
	`sqlôe3WÆCheckpoöt
(

1946 
pWÆ
, 
SQLITE_CHECKPOINT_PASSIVE
, 0, 0, 
sync_Êags
, 
nBuf
, 
zBuf
, 0, 0

1948 if–
rc
==
SQLITE_OK
 ){

1949 
bPîsi°
 = -1;

1950 
	`sqlôe3OsFûeC⁄åﬁHöt
(

1951 
pWÆ
->
pDbFd
, 
SQLITE_FCNTL_PERSIST_WAL
, &
bPîsi°


1953 if–
bPîsi°
!=1 ){

1957 
isDñëe
 = 1;

1958 }if–
pWÆ
->
mxWÆSize
>=0 ){

1965 
	`wÆLimôSize
(
pWÆ
, 0);

1970 
	`wÆIndexClo£
(
pWÆ
, 
isDñëe
);

1971 
	`sqlôe3OsClo£
(
pWÆ
->
pWÆFd
);

1972 if–
isDñëe
 ){

1973 
	`sqlôe3BegöBíignMÆloc
();

1974 
	`sqlôe3OsDñëe
(
pWÆ
->
pVfs
,ÖWÆ->
zWÆName
, 0);

1975 
	`sqlôe3EndBíignMÆloc
();

1977 
	`WALTRACE
(("WAL%p: clo£d\n", 
pWÆ
));

1978 
	`sqlôe3_‰ì
((*)
pWÆ
->
≠WiD©a
);

1979 
	`sqlôe3_‰ì
(
pWÆ
);

1981  
rc
;

1982 
	}
}

2001 
	$wÆIndexTryHdr
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2002 
u32
 
aCksum
[2];

2003 
WÆIndexHdr
 
h1
, 
h2
;

2004 
WÆIndexHdr
 vﬁ©ûê*
aHdr
;

2007 
	`as£π
–
pWÆ
->
nWiD©a
>0 &&ÖWÆ->
≠WiD©a
[0] );

2019 
aHdr
 = 
	`wÆIndexHdr
(
pWÆ
);

2020 
	`mem˝y
(&
h1
, (*)&
aHdr
[0], (h1));

2021 
	`wÆShmB¨rõr
(
pWÆ
);

2022 
	`mem˝y
(&
h2
, (*)&
aHdr
[1], (h2));

2024 if–
	`memcmp
(&
h1
, &
h2
, (h1))!=0 ){

2027 if–
h1
.
isInô
==0 ){

2030 
	`wÆChecksumByãs
(1, (
u8
*)&
h1
, (h1)-(h1.
aCksum
), 0,áCksum);

2031 if–
aCksum
[0]!=
h1
.aCksum[0] ||áCksum[1]!=h1.aCksum[1] ){

2035 if–
	`memcmp
(&
pWÆ
->
hdr
, &
h1
, (
WÆIndexHdr
)) ){

2036 *
pCh™ged
 = 1;

2037 
	`mem˝y
(&
pWÆ
->
hdr
, &
h1
, (
WÆIndexHdr
));

2038 
pWÆ
->
szPage
 = (pWÆ->
hdr
.szPage&0xfe00) + ((pWal->hdr.szPage&0x0001)<<16);

2039 
	`ã°ˇ£
–
pWÆ
->
szPage
<=32768 );

2040 
	`ã°ˇ£
–
pWÆ
->
szPage
>=65536 );

2045 
	}
}

2059 
	$wÆIndexRódHdr
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2060 
rc
;

2061 
badHdr
;

2062 vﬁ©ûê
u32
 *
∑ge0
;

2067 
	`as£π
–
pCh™ged
 );

2068 
rc
 = 
	`wÆIndexPage
(
pWÆ
, 0, &
∑ge0
);

2069 if–
rc
!=
SQLITE_OK
 ){

2070  
rc
;

2072 
	`as£π
–
∑ge0
 || 
pWÆ
->
wrôeLock
==0 );

2079 
badHdr
 = (
∑ge0
 ? 
	`wÆIndexTryHdr
(
pWÆ
, 
pCh™ged
) : 1);

2084 
	`as£π
–
badHdr
==0 || 
pWÆ
->
wrôeLock
==0 );

2085 if–
badHdr
 ){

2086 if–
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
 ){

2087 if–
SQLITE_OK
==(
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_WRITE_LOCK
)) ){

2088 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_WRITE_LOCK
);

2089 
rc
 = 
SQLITE_READONLY_RECOVERY
;

2091 }if–
SQLITE_OK
==(
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1)) ){

2092 
pWÆ
->
wrôeLock
 = 1;

2093 if–
SQLITE_OK
==(
rc
 = 
	`wÆIndexPage
(
pWÆ
, 0, &
∑ge0
)) ){

2094 
badHdr
 = 
	`wÆIndexTryHdr
(
pWÆ
, 
pCh™ged
);

2095 if–
badHdr
 ){

2100 
rc
 = 
	`wÆIndexRecovî
(
pWÆ
);

2101 *
pCh™ged
 = 1;

2104 
pWÆ
->
wrôeLock
 = 0;

2105 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2113 if–
badHdr
==0 && 
pWÆ
->
hdr
.
iVîsi⁄
!=
WALINDEX_MAX_VERSION
 ){

2114 
rc
 = 
SQLITE_CANTOPEN_BKPT
;

2117  
rc
;

2118 
	}
}

2124 
	#WAL_RETRY
 (-1)

	)

2176 
	$wÆTryBegöRód
(
WÆ
 *
pWÆ
, *
pCh™ged
, 
u£WÆ
, 
˙t
){

2177 vﬁ©ûê
WÆCk±Info
 *
pInfo
;

2178 
u32
 
mxRódM¨k
;

2179 
mxI
;

2180 
i
;

2181 
rc
 = 
SQLITE_OK
;

2182 
u32
 
mxFøme
;

2184 
	`as£π
–
pWÆ
->
ªadLock
<0 );

2203 if–
˙t
>5 ){

2204 
nDñay
 = 1;

2205 if–
˙t
>100 ){

2206 
	`VVA_ONLY
–
pWÆ
->
lockEº‹
 = 1; )

2207  
SQLITE_PROTOCOL
;

2209 if–
˙t
>=10 ) 
nDñay
 = (cnt-9)*(cnt-9)*39;

2210 
	`sqlôe3OsSÀï
(
pWÆ
->
pVfs
, 
nDñay
);

2213 if–!
u£WÆ
 ){

2214 
rc
 = 
	`wÆIndexRódHdr
(
pWÆ
, 
pCh™ged
);

2215 if–
rc
==
SQLITE_BUSY
 ){

2224 if–
pWÆ
->
≠WiD©a
[0]==0 ){

2232 
rc
 = 
WAL_RETRY
;

2233 }if–
SQLITE_OK
==(
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_RECOVER_LOCK
)) ){

2234 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_RECOVER_LOCK
);

2235 
rc
 = 
WAL_RETRY
;

2236 }if–
rc
==
SQLITE_BUSY
 ){

2237 
rc
 = 
SQLITE_BUSY_RECOVERY
;

2240 if–
rc
!=
SQLITE_OK
 ){

2241  
rc
;

2245 
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2246 if–!
u£WÆ
 && 
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme


2247 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2248 && (
pWÆ
->
pS«pshŸ
==0 ||ÖWÆ->
hdr
.
mxFøme
==0

2249 || 0==
	`memcmp
(&
pWÆ
->
hdr
,ÖWÆ->
pS«pshŸ
, (
WÆIndexHdr
)))

2255 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2256 
	`wÆShmB¨rõr
(
pWÆ
);

2257 if–
rc
==
SQLITE_OK
 ){

2258 if–
	`memcmp
((*)
	`wÆIndexHdr
(
pWÆ
), &pWÆ->
hdr
, (
WÆIndexHdr
)) ){

2272 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2273  
WAL_RETRY
;

2275 
pWÆ
->
ªadLock
 = 0;

2276  
SQLITE_OK
;

2277 }if–
rc
!=
SQLITE_BUSY
 ){

2278  
rc
;

2287 
mxRódM¨k
 = 0;

2288 
mxI
 = 0;

2289 
mxFøme
 = 
pWÆ
->
hdr
.mxFrame;

2290 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2291 if–
pWÆ
->
pS«pshŸ
 &&ÖWÆ->pS«pshŸ->
mxFøme
<mxFrame ){

2292 
mxFøme
 = 
pWÆ
->
pS«pshŸ
->mxFrame;

2295 
i
=1; i<
WAL_NREADER
; i++){

2296 
u32
 
thisM¨k
 = 
pInfo
->
aRódM¨k
[
i
];

2297 if–
mxRódM¨k
<=
thisM¨k
 &&ÅhisM¨k<=
mxFøme
 ){

2298 
	`as£π
–
thisM¨k
!=
READMARK_NOT_USED
 );

2299 
mxRódM¨k
 = 
thisM¨k
;

2300 
mxI
 = 
i
;

2303 if–(
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
)==0

2304 && (
mxRódM¨k
<
mxFøme
 || 
mxI
==0)

2306 
i
=1; i<
WAL_NREADER
; i++){

2307 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

2308 if–
rc
==
SQLITE_OK
 ){

2309 
mxRódM¨k
 = 
pInfo
->
aRódM¨k
[
i
] = 
mxFøme
;

2310 
mxI
 = 
i
;

2311 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(
i
), 1);

2313 }if–
rc
!=
SQLITE_BUSY
 ){

2314  
rc
;

2318 if–
mxI
==0 ){

2319 
	`as£π
–
rc
==
SQLITE_BUSY
 || (
pWÆ
->
ªadO∆y
 & 
WAL_SHM_RDONLY
)!=0 );

2320  
rc
==
SQLITE_BUSY
 ? 
WAL_RETRY
 : 
SQLITE_READONLY_CANTLOCK
;

2323 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(
mxI
));

2324 if–
rc
 ){

2325  
rc
==
SQLITE_BUSY
 ? 
WAL_RETRY
 :Ñc;

2361 
pWÆ
->
möFøme
 = 
pInfo
->
nBackfûl
+1;

2362 
	`wÆShmB¨rõr
(
pWÆ
);

2363 if–
pInfo
->
aRódM¨k
[
mxI
]!=
mxRódM¨k


2364 || 
	`memcmp
((*)
	`wÆIndexHdr
(
pWÆ
), &pWÆ->
hdr
, (
WÆIndexHdr
))

2366 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(
mxI
));

2367  
WAL_RETRY
;

2369 
	`as£π
–
mxRódM¨k
<=
pWÆ
->
hdr
.
mxFøme
 );

2370 
pWÆ
->
ªadLock
 = (
i16
)
mxI
;

2372  
rc
;

2373 
	}
}

2389 
	$sqlôe3WÆBegöRódTønß˘i⁄
(
WÆ
 *
pWÆ
, *
pCh™ged
){

2390 
rc
;

2391 
˙t
 = 0;

2393 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2394 
bCh™ged
 = 0;

2395 
WÆIndexHdr
 *
pS«pshŸ
 = 
pWÆ
->pSnapshot;

2396 if–
pS«pshŸ
 && 
	`memcmp
’S«pshŸ, &
pWÆ
->
hdr
, (
WÆIndexHdr
))!=0 ){

2397 
bCh™ged
 = 1;

2402 
rc
 = 
	`wÆTryBegöRód
(
pWÆ
, 
pCh™ged
, 0, ++
˙t
);

2403 } 
rc
==
WAL_RETRY
 );

2404 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_BUSY
 );

2405 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_IOERR
 );

2406 
	`ã°ˇ£
–
rc
==
SQLITE_PROTOCOL
 );

2407 
	`ã°ˇ£
–
rc
==
SQLITE_OK
 );

2409 #ifde‡
SQLITE_ENABLE_SNAPSHOT


2410 if–
rc
==
SQLITE_OK
 ){

2411 if–
pS«pshŸ
 && 
	`memcmp
’S«pshŸ, &
pWÆ
->
hdr
, (
WÆIndexHdr
))!=0 ){

2425 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2427 
	`as£π
–
pWÆ
->
ªadLock
>0 ||ÖWÆ->
hdr
.
mxFøme
==0 );

2428 
	`as£π
–
pInfo
->
aRódM¨k
[
pWÆ
->
ªadLock
]<=
pS«pshŸ
->
mxFøme
 );

2438 
rc
 = 
	`wÆLockSh¨ed
(
pWÆ
, 
WAL_CKPT_LOCK
);

2440 if–
rc
==
SQLITE_OK
 ){

2447 if–!
	`memcmp
(
pS«pshŸ
->
aSÆt
, 
pWÆ
->
hdr
.aSalt, (pWal->hdr.aSalt))

2448 && 
pS«pshŸ
->
mxFøme
>=
pInfo
->
nBackfûlAâem±ed


2450 
	`as£π
–
pWÆ
->
ªadLock
>0 );

2451 
	`mem˝y
(&
pWÆ
->
hdr
, 
pS«pshŸ
, (
WÆIndexHdr
));

2452 *
pCh™ged
 = 
bCh™ged
;

2454 
rc
 = 
SQLITE_BUSY_SNAPSHOT
;

2458 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
WAL_CKPT_LOCK
);

2462 if–
rc
!=
SQLITE_OK
 ){

2463 
	`sqlôe3WÆEndRódTønß˘i⁄
(
pWÆ
);

2468  
rc
;

2469 
	}
}

2475 
	$sqlôe3WÆEndRódTønß˘i⁄
(
WÆ
 *
pWÆ
){

2476 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pWÆ
);

2477 if–
pWÆ
->
ªadLock
>=0 ){

2478 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
));

2479 
pWÆ
->
ªadLock
 = -1;

2481 
	}
}

2491 
	$sqlôe3WÆFödFøme
(

2492 
WÆ
 *
pWÆ
,

2493 
Pgno
 
pgno
,

2494 
u32
 *
piRód


2496 
u32
 
iRód
 = 0;

2497 
u32
 
iLa°
 = 
pWÆ
->
hdr
.
mxFøme
;

2498 
iHash
;

2499 
iMöHash
;

2502 
	`as£π
–
pWÆ
->
ªadLock
>=0 ||ÖWÆ->
lockEº‹
 );

2510 if–
iLa°
==0 || 
pWÆ
->
ªadLock
==0 ){

2511 *
piRód
 = 0;

2512  
SQLITE_OK
;

2540 
iMöHash
 = 
	`wÆFømePage
(
pWÆ
->
möFøme
);

2541 
iHash
=
	`wÆFømePage
(
iLa°
); iHash>=
iMöHash
 && 
iRód
==0; iHash--){

2542 vﬁ©ûê
ht_¶Ÿ
 *
aHash
;

2543 vﬁ©ûê
u32
 *
aPgno
;

2544 
u32
 
iZîo
;

2545 
iKey
;

2546 
nCﬁlide
;

2547 
rc
;

2549 
rc
 = 
	`wÆHashGë
(
pWÆ
, 
iHash
, &
aHash
, &
aPgno
, &
iZîo
);

2550 if–
rc
!=
SQLITE_OK
 ){

2551  
rc
;

2553 
nCﬁlide
 = 
HASHTABLE_NSLOT
;

2554 
iKey
=
	`wÆHash
(
pgno
); 
aHash
[iKey]; iKey=
	`wÆNextHash
(iKey)){

2555 
u32
 
iFøme
 = 
aHash
[
iKey
] + 
iZîo
;

2556 if–
iFøme
<=
iLa°
 && iFøme>=
pWÆ
->
möFøme
 && 
aPgno
[
aHash
[
iKey
]]==
pgno
 ){

2557 
	`as£π
–
iFøme
>
iRód
 || 
CORRUPT_DB
 );

2558 
iRód
 = 
iFøme
;

2560 if–(
nCﬁlide
--)==0 ){

2561  
SQLITE_CORRUPT_BKPT
;

2566 #ifde‡
SQLITE_ENABLE_EXPENSIVE_ASSERT


2571 
u32
 
iRód2
 = 0;

2572 
u32
 
iTe°
;

2573 
	`as£π
–
pWÆ
->
möFøme
>0 );

2574 
iTe°
=
iLa°
; iTe°>=
pWÆ
->
möFøme
; iTest--){

2575 if–
	`wÆFømePgno
(
pWÆ
, 
iTe°
)==
pgno
 ){

2576 
iRód2
 = 
iTe°
;

2580 
	`as£π
–
iRód
==
iRód2
 );

2584 *
piRód
 = 
iRód
;

2585  
SQLITE_OK
;

2586 
	}
}

2593 
	$sqlôe3WÆRódFøme
(

2594 
WÆ
 *
pWÆ
,

2595 
u32
 
iRód
,

2596 
nOut
,

2597 
u8
 *
pOut


2599 
sz
;

2600 
i64
 
iOff£t
;

2601 
sz
 = 
pWÆ
->
hdr
.
szPage
;

2602 
sz
 = (sz&0xfe00) + ((sz&0x0001)<<16);

2603 
	`ã°ˇ£
–
sz
<=32768 );

2604 
	`ã°ˇ£
–
sz
>=65536 );

2605 
iOff£t
 = 
	`wÆFømeOff£t
(
iRód
, 
sz
Ë+ 
WAL_FRAME_HDRSIZE
;

2607  
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
pOut
, (
nOut
>
sz
 ? sz :ÇOut), 
iOff£t
);

2608 
	}
}

2613 
Pgno
 
	$sqlôe3WÆDbsize
(
WÆ
 *
pWÆ
){

2614 if–
pWÆ
 && 
	`ALWAYS
’WÆ->
ªadLock
>=0) ){

2615  
pWÆ
->
hdr
.
nPage
;

2618 
	}
}

2634 
	$sqlôe3WÆBegöWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
){

2635 
rc
;

2639 
	`as£π
–
pWÆ
->
ªadLock
>=0 );

2640 
	`as£π
–
pWÆ
->
wrôeLock
==0 &&ÖWÆ->
iReCksum
==0 );

2642 if–
pWÆ
->
ªadO∆y
 ){

2643  
SQLITE_READONLY
;

2649 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2650 if–
rc
 ){

2651  
rc
;

2653 
pWÆ
->
wrôeLock
 = 1;

2659 if–
	`memcmp
(&
pWÆ
->
hdr
, (*)
	`wÆIndexHdr
’WÆ), (
WÆIndexHdr
))!=0 ){

2660 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2661 
pWÆ
->
wrôeLock
 = 0;

2662 
rc
 = 
SQLITE_BUSY_SNAPSHOT
;

2665  
rc
;

2666 
	}
}

2672 
	$sqlôe3WÆEndWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
){

2673 if–
pWÆ
->
wrôeLock
 ){

2674 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_WRITE_LOCK
, 1);

2675 
pWÆ
->
wrôeLock
 = 0;

2676 
pWÆ
->
iReCksum
 = 0;

2677 
pWÆ
->
åunˇãOnCommô
 = 0;

2679  
SQLITE_OK
;

2680 
	}
}

2694 
sqlôe3WÆUndo
(
WÆ
 *
pWÆ
, (*
xUndo
)(*, 
Pgno
), *
pUndoCtx
){

2695 
rc
 = 
SQLITE_OK
;

2696 if–
	`ALWAYS
(
pWÆ
->
wrôeLock
) ){

2697 
Pgno
 
iMax
 = 
pWÆ
->
hdr
.
mxFøme
;

2698 
Pgno
 
iFøme
;

2703 
	`mem˝y
(&
pWÆ
->
hdr
, (*)
	`wÆIndexHdr
’WÆ), (
WÆIndexHdr
));

2705 
iFøme
=
pWÆ
->
hdr
.
mxFøme
+1;

2706 
	`ALWAYS
(
rc
==
SQLITE_OK
Ë&& 
iFøme
<=
iMax
;

2707 
iFøme
++

2720 
	`as£π
–
	`wÆFømePgno
(
pWÆ
, 
iFøme
)!=1 );

2721 
rc
 = 
	`xUndo
(
pUndoCtx
, 
	`wÆFømePgno
(
pWÆ
, 
iFøme
));

2723 if–
iMax
!=
pWÆ
->
hdr
.
mxFøme
 ) 
	`wÆCÀ™upHash
(pWal);

2725  
rc
;

2726 
	}
}

2734 
	$sqlôe3WÆSavïoöt
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
){

2735 
	`as£π
–
pWÆ
->
wrôeLock
 );

2736 
aWÆD©a
[0] = 
pWÆ
->
hdr
.
mxFøme
;

2737 
aWÆD©a
[1] = 
pWÆ
->
hdr
.
aFømeCksum
[0];

2738 
aWÆD©a
[2] = 
pWÆ
->
hdr
.
aFømeCksum
[1];

2739 
aWÆD©a
[3] = 
pWÆ
->
nCk±
;

2740 
	}
}

2748 
	$sqlôe3WÆSavïoötUndo
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
){

2749 
rc
 = 
SQLITE_OK
;

2751 
	`as£π
–
pWÆ
->
wrôeLock
 );

2752 
	`as£π
–
aWÆD©a
[3]!=
pWÆ
->
nCk±
 ||áWÆD©a[0]<ıWÆ->
hdr
.
mxFøme
 );

2754 if–
aWÆD©a
[3]!=
pWÆ
->
nCk±
 ){

2759 
aWÆD©a
[0] = 0;

2760 
aWÆD©a
[3] = 
pWÆ
->
nCk±
;

2763 if–
aWÆD©a
[0]<
pWÆ
->
hdr
.
mxFøme
 ){

2764 
pWÆ
->
hdr
.
mxFøme
 = 
aWÆD©a
[0];

2765 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
aWÆD©a
[1];

2766 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
aWÆD©a
[2];

2767 
	`wÆCÀ™upHash
(
pWÆ
);

2770  
rc
;

2771 
	}
}

2785 
	$wÆRe°¨tLog
(
WÆ
 *
pWÆ
){

2786 
rc
 = 
SQLITE_OK
;

2787 
˙t
;

2789 if–
pWÆ
->
ªadLock
==0 ){

2790 vﬁ©ûê
WÆCk±Info
 *
pInfo
 = 
	`wÆCk±Info
(
pWÆ
);

2791 
	`as£π
–
pInfo
->
nBackfûl
==
pWÆ
->
hdr
.
mxFøme
 );

2792 if–
pInfo
->
nBackfûl
>0 ){

2793 
u32
 
ß…1
;

2794 
	`sqlôe3_øndom√ss
(4, &
ß…1
);

2795 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

2796 if–
rc
==
SQLITE_OK
 ){

2806 
	`wÆRe°¨tHdr
(
pWÆ
, 
ß…1
);

2807 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
	`WAL_READ_LOCK
(1), 
WAL_NREADER
-1);

2808 }if–
rc
!=
SQLITE_BUSY
 ){

2809  
rc
;

2812 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
(0));

2813 
pWÆ
->
ªadLock
 = -1;

2814 
˙t
 = 0;

2816 
nŸU£d
;

2817 
rc
 = 
	`wÆTryBegöRód
(
pWÆ
, &
nŸU£d
, 1, ++
˙t
);

2818 } 
rc
==
WAL_RETRY
 );

2819 
	`as£π
–(
rc
&0xff)!=
SQLITE_BUSY
 );

2820 
	`ã°ˇ£
–(
rc
&0xff)==
SQLITE_IOERR
 );

2821 
	`ã°ˇ£
–
rc
==
SQLITE_PROTOCOL
 );

2822 
	`ã°ˇ£
–
rc
==
SQLITE_OK
 );

2824  
rc
;

2825 
	}
}

2832 
	sWÆWrôî
 {

2833 
WÆ
 *
	mpWÆ
;

2834 
sqlôe3_fûe
 *
	mpFd
;

2835 
sqlôe3_öt64
 
	miSyncPoöt
;

2836 
	msyncFœgs
;

2837 
	mszPage
;

2838 } 
	tWÆWrôî
;

2848 
	$wÆWrôeToLog
(

2849 
WÆWrôî
 *
p
,

2850 *
pC⁄ã¡
,

2851 
iAmt
,

2852 
sqlôe3_öt64
 
iOff£t


2854 
rc
;

2855 if–
iOff£t
<
p
->
iSyncPoöt
 && iOff£t+
iAmt
>=p->iSyncPoint ){

2856 
iFú°Amt
 = ()(
p
->
iSyncPoöt
 - 
iOff£t
);

2857 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pFd
, 
pC⁄ã¡
, 
iFú°Amt
, 
iOff£t
);

2858 if–
rc
 ) Ñc;

2859 
iOff£t
 +
iFú°Amt
;

2860 
iAmt
 -
iFú°Amt
;

2861 
pC⁄ã¡
 = (*)(
iFú°Amt
 + (*)pContent);

2862 
	`as£π
–
p
->
syncFœgs
 & (
SQLITE_SYNC_NORMAL
|
SQLITE_SYNC_FULL
) );

2863 
rc
 = 
	`sqlôe3OsSync
(
p
->
pFd
,Ö->
syncFœgs
 & 
SQLITE_SYNC_MASK
);

2864 if–
iAmt
==0 || 
rc
 ) Ñc;

2866 
rc
 = 
	`sqlôe3OsWrôe
(
p
->
pFd
, 
pC⁄ã¡
, 
iAmt
, 
iOff£t
);

2867  
rc
;

2868 
	}
}

2873 
	$wÆWrôeO√Føme
(

2874 
WÆWrôî
 *
p
,

2875 
PgHdr
 *
pPage
,

2876 
nTrunˇã
,

2877 
sqlôe3_öt64
 
iOff£t


2879 
rc
;

2880 *
pD©a
;

2881 
u8
 
aFøme
[
WAL_FRAME_HDRSIZE
];

2882 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

2883 if–(
pD©a
 = 
	`sqlôe3PagîCodec
(
pPage
))==0 )  
SQLITE_NOMEM_BKPT
;

2885 
pD©a
 = 
pPage
->pData;

2887 
	`wÆEncodeFøme
(
p
->
pWÆ
, 
pPage
->
pgno
, 
nTrunˇã
, 
pD©a
, 
aFøme
);

2888 
rc
 = 
	`wÆWrôeToLog
(
p
, 
aFøme
, ◊Føme), 
iOff£t
);

2889 if–
rc
 ) Ñc;

2891 
rc
 = 
	`wÆWrôeToLog
(
p
, 
pD©a
,Ö->
szPage
, 
iOff£t
+(
aFøme
));

2892  
rc
;

2893 
	}
}

2903 
	$wÆRewrôeChecksums
(
WÆ
 *
pWÆ
, 
u32
 
iLa°
){

2904 c⁄° 
szPage
 = 
pWÆ
->szPage;

2905 
rc
 = 
SQLITE_OK
;

2906 
u8
 *
aBuf
;

2907 
u8
 
aFøme
[
WAL_FRAME_HDRSIZE
];

2908 
u32
 
iRód
;

2909 
i64
 
iCksumOff
;

2911 
aBuf
 = 
	`sqlôe3_mÆloc
(
szPage
 + 
WAL_FRAME_HDRSIZE
);

2912 if–
aBuf
==0 )  
SQLITE_NOMEM_BKPT
;

2919 
	`as£π
–
pWÆ
->
iReCksum
>0 );

2920 if–
pWÆ
->
iReCksum
==1 ){

2921 
iCksumOff
 = 24;

2923 
iCksumOff
 = 
	`wÆFømeOff£t
(
pWÆ
->
iReCksum
-1, 
szPage
) + 16;

2925 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, (
u32
)*2, 
iCksumOff
);

2926 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
	`sqlôe3Gë4byã
(
aBuf
);

2927 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
	`sqlôe3Gë4byã
(&
aBuf
[(
u32
)]);

2929 
iRód
 = 
pWÆ
->
iReCksum
;

2930 
pWÆ
->
iReCksum
 = 0;

2931 ; 
rc
==
SQLITE_OK
 && 
iRód
<=
iLa°
; iRead++){

2932 
i64
 
iOff
 = 
	`wÆFømeOff£t
(
iRód
, 
szPage
);

2933 
rc
 = 
	`sqlôe3OsRód
(
pWÆ
->
pWÆFd
, 
aBuf
, 
szPage
+
WAL_FRAME_HDRSIZE
, 
iOff
);

2934 if–
rc
==
SQLITE_OK
 ){

2935 
u32
 
iPgno
, 
nDbSize
;

2936 
iPgno
 = 
	`sqlôe3Gë4byã
(
aBuf
);

2937 
nDbSize
 = 
	`sqlôe3Gë4byã
(&
aBuf
[4]);

2939 
	`wÆEncodeFøme
(
pWÆ
, 
iPgno
, 
nDbSize
, &
aBuf
[
WAL_FRAME_HDRSIZE
], 
aFøme
);

2940 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
aFøme
, ◊Føme), 
iOff
);

2944 
	`sqlôe3_‰ì
(
aBuf
);

2945  
rc
;

2946 
	}
}

2952 
	$sqlôe3WÆFømes
(

2953 
WÆ
 *
pWÆ
,

2954 
szPage
,

2955 
PgHdr
 *
pLi°
,

2956 
Pgno
 
nTrunˇã
,

2957 
isCommô
,

2958 
sync_Êags


2960 
rc
;

2961 
u32
 
iFøme
;

2962 
PgHdr
 *
p
;

2963 
PgHdr
 *
pLa°
 = 0;

2964 
nExåa
 = 0;

2965 
szFøme
;

2966 
i64
 
iOff£t
;

2967 
WÆWrôî
 
w
;

2968 
u32
 
iFú°
 = 0;

2969 
WÆIndexHdr
 *
pLive
;

2971 
	`as£π
–
pLi°
 );

2972 
	`as£π
–
pWÆ
->
wrôeLock
 );

2976 
	`as£π
–(
isCommô
!=0)==(
nTrunˇã
!=0) );

2978 #i‡
	`deföed
(
SQLITE_TEST
Ë&& deföed(
SQLITE_DEBUG
)

2979 { 
˙t
; ˙t=0, 
p
=
pLi°
;Ö;Öı->
pDúty
, cnt++){}

2980 
	`WALTRACE
(("WAL%p: frame write begin. %d frames. mxFrame=%d. %s\n",

2981 
pWÆ
, 
˙t
,ÖWÆ->
hdr
.
mxFøme
, 
isCommô
 ? "Commit" : "Spill"));

2985 
pLive
 = (
WÆIndexHdr
*)
	`wÆIndexHdr
(
pWÆ
);

2986 if–
	`memcmp
(&
pWÆ
->
hdr
, (*)
pLive
, (
WÆIndexHdr
))!=0 ){

2987 
iFú°
 = 
pLive
->
mxFøme
+1;

2993 if–
SQLITE_OK
!=(
rc
 = 
	`wÆRe°¨tLog
(
pWÆ
)) ){

2994  
rc
;

3001 
iFøme
 = 
pWÆ
->
hdr
.
mxFøme
;

3002 if–
iFøme
==0 ){

3003 
u8
 
aWÆHdr
[
WAL_HDRSIZE
];

3004 
u32
 
aCksum
[2];

3006 
	`sqlôe3Put4byã
(&
aWÆHdr
[0], (
WAL_MAGIC
 | 
SQLITE_BIGENDIAN
));

3007 
	`sqlôe3Put4byã
(&
aWÆHdr
[4], 
WAL_MAX_VERSION
);

3008 
	`sqlôe3Put4byã
(&
aWÆHdr
[8], 
szPage
);

3009 
	`sqlôe3Put4byã
(&
aWÆHdr
[12], 
pWÆ
->
nCk±
);

3010 if–
pWÆ
->
nCk±
==0 ) 
	`sqlôe3_øndom√ss
(8,ÖWÆ->
hdr
.
aSÆt
);

3011 
	`mem˝y
(&
aWÆHdr
[16], 
pWÆ
->
hdr
.
aSÆt
, 8);

3012 
	`wÆChecksumByãs
(1, 
aWÆHdr
, 
WAL_HDRSIZE
-2*4, 0, 
aCksum
);

3013 
	`sqlôe3Put4byã
(&
aWÆHdr
[24], 
aCksum
[0]);

3014 
	`sqlôe3Put4byã
(&
aWÆHdr
[28], 
aCksum
[1]);

3016 
pWÆ
->
szPage
 = szPage;

3017 
pWÆ
->
hdr
.
bigEndCksum
 = 
SQLITE_BIGENDIAN
;

3018 
pWÆ
->
hdr
.
aFømeCksum
[0] = 
aCksum
[0];

3019 
pWÆ
->
hdr
.
aFømeCksum
[1] = 
aCksum
[1];

3020 
pWÆ
->
åunˇãOnCommô
 = 1;

3022 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
aWÆHdr
, (aWalHdr), 0);

3023 
	`WALTRACE
(("WAL%p: wÆ-hódî wrôê%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3024 if–
rc
!=
SQLITE_OK
 ){

3025  
rc
;

3035 if–
pWÆ
->
syncHódî
 && 
sync_Êags
 ){

3036 
rc
 = 
	`sqlôe3OsSync
(
pWÆ
->
pWÆFd
, 
sync_Êags
 & 
SQLITE_SYNC_MASK
);

3037 if–
rc
 ) Ñc;

3040 
	`as£π
–()
pWÆ
->
szPage
==szPage );

3043 
w
.
pWÆ
 =ÖWal;

3044 
w
.
pFd
 = 
pWÆ
->
pWÆFd
;

3045 
w
.
iSyncPoöt
 = 0;

3046 
w
.
syncFœgs
 = 
sync_Êags
;

3047 
w
.
szPage
 = szPage;

3048 
iOff£t
 = 
	`wÆFømeOff£t
(
iFøme
+1, 
szPage
);

3049 
szFøme
 = 
szPage
 + 
WAL_FRAME_HDRSIZE
;

3052 
p
=
pLi°
;Ö;Öı->
pDúty
){

3053 
nDbSize
;

3059 if–
iFú°
 && (
p
->
pDúty
 || 
isCommô
==0) ){

3060 
u32
 
iWrôe
 = 0;

3061 
	`VVA_ONLY
(
rc
 =Ë
	`sqlôe3WÆFödFøme
(
pWÆ
, 
p
->
pgno
, &
iWrôe
);

3062 
	`as£π
–
rc
==
SQLITE_OK
 || 
iWrôe
==0 );

3063 if–
iWrôe
>=
iFú°
 ){

3064 
i64
 
iOff
 = 
	`wÆFømeOff£t
(
iWrôe
, 
szPage
Ë+ 
WAL_FRAME_HDRSIZE
;

3065 *
pD©a
;

3066 if–
pWÆ
->
iReCksum
==0 || 
iWrôe
<pWal->iReCksum ){

3067 
pWÆ
->
iReCksum
 = 
iWrôe
;

3069 #i‡
	`deföed
(
SQLITE_HAS_CODEC
)

3070 if–(
pD©a
 = 
	`sqlôe3PagîCodec
(
p
))==0 )  
SQLITE_NOMEM
;

3072 
pD©a
 = 
p
->pData;

3074 
rc
 = 
	`sqlôe3OsWrôe
(
pWÆ
->
pWÆFd
, 
pD©a
, 
szPage
, 
iOff
);

3075 if–
rc
 ) Ñc;

3076 
p
->
Êags
 &~
PGHDR_WAL_APPEND
;

3081 
iFøme
++;

3082 
	`as£π
–
iOff£t
==
	`wÆFømeOff£t
(
iFøme
, 
szPage
) );

3083 
nDbSize
 = (
isCommô
 && 
p
->
pDúty
==0Ë? 
nTrunˇã
 : 0;

3084 
rc
 = 
	`wÆWrôeO√Føme
(&
w
, 
p
, 
nDbSize
, 
iOff£t
);

3085 if–
rc
 ) Ñc;

3086 
pLa°
 = 
p
;

3087 
iOff£t
 +
szFøme
;

3088 
p
->
Êags
 |
PGHDR_WAL_APPEND
;

3092 if–
isCommô
 && 
pWÆ
->
iReCksum
 ){

3093 
rc
 = 
	`wÆRewrôeChecksums
(
pWÆ
, 
iFøme
);

3094 if–
rc
 ) Ñc;

3111 if–
isCommô
 && (
sync_Êags
 & 
WAL_SYNC_TRANSACTIONS
)!=0 ){

3112 
bSync
 = 1;

3113 if–
pWÆ
->
∑dToSe˘‹Bound¨y
 ){

3114 
£˘‹Size
 = 
	`sqlôe3Se˘‹Size
(
pWÆ
->
pWÆFd
);

3115 
w
.
iSyncPoöt
 = ((
iOff£t
+
£˘‹Size
-1)/sectorSize)*sectorSize;

3116 
bSync
 = (
w
.
iSyncPoöt
==
iOff£t
);

3117 
	`ã°ˇ£
–
bSync
 );

3118  
iOff£t
<
w
.
iSyncPoöt
 ){

3119 
rc
 = 
	`wÆWrôeO√Føme
(&
w
, 
pLa°
, 
nTrunˇã
, 
iOff£t
);

3120 if–
rc
 ) Ñc;

3121 
iOff£t
 +
szFøme
;

3122 
nExåa
++;

3125 if–
bSync
 ){

3126 
	`as£π
–
rc
==
SQLITE_OK
 );

3127 
rc
 = 
	`sqlôe3OsSync
(
w
.
pFd
, 
sync_Êags
 & 
SQLITE_SYNC_MASK
);

3135 if–
isCommô
 && 
pWÆ
->
åunˇãOnCommô
 &&ÖWÆ->
mxWÆSize
>=0 ){

3136 
i64
 
sz
 = 
pWÆ
->
mxWÆSize
;

3137 if–
	`wÆFømeOff£t
(
iFøme
+
nExåa
+1, 
szPage
)>
pWÆ
->
mxWÆSize
 ){

3138 
sz
 = 
	`wÆFømeOff£t
(
iFøme
+
nExåa
+1, 
szPage
);

3140 
	`wÆLimôSize
(
pWÆ
, 
sz
);

3141 
pWÆ
->
åunˇãOnCommô
 = 0;

3149 
iFøme
 = 
pWÆ
->
hdr
.
mxFøme
;

3150 
p
=
pLi°
;Ö && 
rc
==
SQLITE_OK
;Öı->
pDúty
){

3151 if–(
p
->
Êags
 & 
PGHDR_WAL_APPEND
)==0 ) ;

3152 
iFøme
++;

3153 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
p
->
pgno
);

3155  
rc
==
SQLITE_OK
 && 
nExåa
>0 ){

3156 
iFøme
++;

3157 
nExåa
--;

3158 
rc
 = 
	`wÆIndexAµíd
(
pWÆ
, 
iFøme
, 
pLa°
->
pgno
);

3161 if–
rc
==
SQLITE_OK
 ){

3163 
pWÆ
->
hdr
.
szPage
 = (
u16
)((szPage&0xff00) | (szPage>>16));

3164 
	`ã°ˇ£
–
szPage
<=32768 );

3165 
	`ã°ˇ£
–
szPage
>=65536 );

3166 
pWÆ
->
hdr
.
mxFøme
 = 
iFøme
;

3167 if–
isCommô
 ){

3168 
pWÆ
->
hdr
.
iCh™ge
++;

3169 
pWÆ
->
hdr
.
nPage
 = 
nTrunˇã
;

3172 if–
isCommô
 ){

3173 
	`wÆIndexWrôeHdr
(
pWÆ
);

3174 
pWÆ
->
iCÆlback
 = 
iFøme
;

3178 
	`WALTRACE
(("WAL%p: fømêwrôê%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3179  
rc
;

3180 
	}
}

3192 
sqlôe3WÆCheckpoöt
(

3193 
WÆ
 *
pWÆ
,

3194 
eMode
,

3195 (*
xBusy
)(*),

3196 *
pBusyArg
,

3197 
sync_Êags
,

3198 
nBuf
,

3199 
u8
 *
zBuf
,

3200 *
≤Log
,

3201 *
≤Ck±


3203 
rc
;

3204 
isCh™ged
 = 0;

3205 
eMode2
 = 
eMode
;

3206 (*
xBusy2
)(*Ë
xBusy
;

3208 
	`as£π
–
pWÆ
->
ck±Lock
==0 );

3209 
	`as£π
–
pWÆ
->
wrôeLock
==0 );

3213 
	`as£π
–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 || 
xBusy
==0 );

3215 if–
pWÆ
->
ªadO∆y
 )  
SQLITE_READONLY
;

3216 
	`WALTRACE
(("WAL%p: checkpoöàbegös\n", 
pWÆ
));

3220 
rc
 = 
	`wÆLockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

3221 if–
rc
 ){

3228 
	`ã°ˇ£
–
rc
==
SQLITE_BUSY
 );

3229 
	`ã°ˇ£
–
xBusy
!=0 );

3230  
rc
;

3232 
pWÆ
->
ck±Lock
 = 1;

3243 if–
eMode
!=
SQLITE_CHECKPOINT_PASSIVE
 ){

3244 
rc
 = 
	`wÆBusyLock
(
pWÆ
, 
xBusy
, 
pBusyArg
, 
WAL_WRITE_LOCK
, 1);

3245 if–
rc
==
SQLITE_OK
 ){

3246 
pWÆ
->
wrôeLock
 = 1;

3247 }if–
rc
==
SQLITE_BUSY
 ){

3248 
eMode2
 = 
SQLITE_CHECKPOINT_PASSIVE
;

3249 
xBusy2
 = 0;

3250 
rc
 = 
SQLITE_OK
;

3255 if–
rc
==
SQLITE_OK
 ){

3256 
rc
 = 
	`wÆIndexRódHdr
(
pWÆ
, &
isCh™ged
);

3257 if–
isCh™ged
 && 
pWÆ
->
pDbFd
->
pMëhods
->
iVîsi⁄
>=3 ){

3258 
	`sqlôe3OsUn„tch
(
pWÆ
->
pDbFd
, 0, 0);

3263 if–
rc
==
SQLITE_OK
 ){

3265 if–
pWÆ
->
hdr
.
mxFøme
 && 
	`wÆPagesize
’WÆ)!=
nBuf
 ){

3266 
rc
 = 
SQLITE_CORRUPT_BKPT
;

3268 
rc
 = 
	`wÆCheckpoöt
(
pWÆ
, 
eMode2
, 
xBusy2
, 
pBusyArg
, 
sync_Êags
, 
zBuf
);

3272 if–
rc
==
SQLITE_OK
 ||Ñc==
SQLITE_BUSY
 ){

3273 if–
≤Log
 ) *≤Log = ()
pWÆ
->
hdr
.
mxFøme
;

3274 if–
≤Ck±
 ) *≤Ck± = ()(
	`wÆCk±Info
(
pWÆ
)->
nBackfûl
);

3278 if–
isCh™ged
 ){

3285 
	`mem£t
(&
pWÆ
->
hdr
, 0, (
WÆIndexHdr
));

3289 
	`sqlôe3WÆEndWrôeTønß˘i⁄
(
pWÆ
);

3290 
	`wÆU∆ockEx˛usive
(
pWÆ
, 
WAL_CKPT_LOCK
, 1);

3291 
pWÆ
->
ck±Lock
 = 0;

3292 
	`WALTRACE
(("WAL%p: checkpoöà%s\n", 
pWÆ
, 
rc
 ? "failed" : "ok"));

3293  (
rc
==
SQLITE_OK
 && 
eMode
!=
eMode2
 ? 
SQLITE_BUSY
 :Ñc);

3294 
	}
}

3301 
	$sqlôe3WÆCÆlback
(
WÆ
 *
pWÆ
){

3302 
u32
 
ªt
 = 0;

3303 if–
pWÆ
 ){

3304 
ªt
 = 
pWÆ
->
iCÆlback
;

3305 
pWÆ
->
iCÆlback
 = 0;

3307  ()
ªt
;

3308 
	}
}

3334 
	$sqlôe3WÆEx˛usiveMode
(
WÆ
 *
pWÆ
, 
›
){

3335 
rc
;

3336 
	`as£π
–
pWÆ
->
wrôeLock
==0 );

3337 
	`as£π
–
pWÆ
->
ex˛usiveMode
!=
WAL_HEAPMEMORY_MODE
 || 
›
==-1 );

3345 
	`as£π
–
pWÆ
->
ªadLock
>=0 ||ÖWÆ->
lockEº‹
 );

3346 
	`as£π
–
pWÆ
->
ªadLock
>=0 || (
›
<=0 &&ÖWÆ->
ex˛usiveMode
==0) );

3348 if–
›
==0 ){

3349 if–
pWÆ
->
ex˛usiveMode
 ){

3350 
pWÆ
->
ex˛usiveMode
 = 0;

3351 if–
	`wÆLockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
))!=
SQLITE_OK
 ){

3352 
pWÆ
->
ex˛usiveMode
 = 1;

3354 
rc
 = 
pWÆ
->
ex˛usiveMode
==0;

3357 
rc
 = 0;

3359 }if–
›
>0 ){

3360 
	`as£π
–
pWÆ
->
ex˛usiveMode
==0 );

3361 
	`as£π
–
pWÆ
->
ªadLock
>=0 );

3362 
	`wÆU∆ockSh¨ed
(
pWÆ
, 
	`WAL_READ_LOCK
’WÆ->
ªadLock
));

3363 
pWÆ
->
ex˛usiveMode
 = 1;

3364 
rc
 = 1;

3366 
rc
 = 
pWÆ
->
ex˛usiveMode
==0;

3368  
rc
;

3369 
	}
}

3376 
	$sqlôe3WÆHópMem‹y
(
WÆ
 *
pWÆ
){

3377  (
pWÆ
 &&ÖWÆ->
ex˛usiveMode
==
WAL_HEAPMEMORY_MODE
 );

3378 
	}
}

3380 #ifde‡
SQLITE_ENABLE_SNAPSHOT


3385 
	$sqlôe3WÆS«pshŸGë
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
){

3386 
rc
 = 
SQLITE_OK
;

3387 
WÆIndexHdr
 *
pRë
;

3389 
	`as£π
–
pWÆ
->
ªadLock
>=0 &&ÖWÆ->
wrôeLock
==0 );

3391 
pRë
 = (
WÆIndexHdr
*)
	`sqlôe3_mÆloc
((WalIndexHdr));

3392 if–
pRë
==0 ){

3393 
rc
 = 
SQLITE_NOMEM_BKPT
;

3395 
	`mem˝y
(
pRë
, &
pWÆ
->
hdr
, (
WÆIndexHdr
));

3396 *
µS«pshŸ
 = (
sqlôe3_¢≠shŸ
*)
pRë
;

3399  
rc
;

3400 
	}
}

3404 
	$sqlôe3WÆS«pshŸO≥n
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
){

3405 
pWÆ
->
pS«pshŸ
 = (
WÆIndexHdr
*)pSnapshot;

3406 
	}
}

3412 
	$sqlôe3_¢≠shŸ_cmp
(
sqlôe3_¢≠shŸ
 *
p1
, sqlôe3_¢≠shŸ *
p2
){

3413 
WÆIndexHdr
 *
pHdr1
 = (WÆIndexHdr*)
p1
;

3414 
WÆIndexHdr
 *
pHdr2
 = (WÆIndexHdr*)
p2
;

3418 if–
pHdr1
->
aSÆt
[0]<
pHdr2
->aSalt[0] )  -1;

3419 if–
pHdr1
->
aSÆt
[0]>
pHdr2
->aSalt[0] )  +1;

3420 if–
pHdr1
->
mxFøme
<
pHdr2
->mxFrame )  -1;

3421 if–
pHdr1
->
mxFøme
>
pHdr2
->mxFrame )  +1;

3423 
	}
}

3426 #ifde‡
SQLITE_ENABLE_ZIPVFS


3432 
	$sqlôe3WÆFømesize
(
WÆ
 *
pWÆ
){

3433 
	`as£π
–
pWÆ
==0 ||ÖWÆ->
ªadLock
>=0 );

3434  (
pWÆ
 ?ÖWÆ->
szPage
 : 0);

3435 
	}
}

3440 
sqlôe3_fûe
 *
	$sqlôe3WÆFûe
(
WÆ
 *
pWÆ
){

3441  
pWÆ
->
pWÆFd
;

3442 
	}
}

	@wal.h

17 #i‚de‡
SQLITE_WAL_H


18 
	#SQLITE_WAL_H


	)

20 
	~"sqlôeI¡.h
"

25 
	#WAL_SYNC_TRANSACTIONS
 0x20

	)

26 
	#SQLITE_SYNC_MASK
 0x13

	)

28 #ifde‡
SQLITE_OMIT_WAL


29 
	#sqlôe3WÆO≥n
(
x
,
y
,
z
Ë0

	)

30 
	#sqlôe3WÆLimô
(
x
,
y
)

	)

31 
	#sqlôe3WÆClo£
(
w
,
x
,
y
,
z
Ë0

	)

32 
	#sqlôe3WÆBegöRódTønß˘i⁄
(
y
,
z
Ë0

	)

33 
	#sqlôe3WÆEndRódTønß˘i⁄
(
z
)

	)

34 
	#sqlôe3WÆDbsize
(
y
Ë0

	)

35 
	#sqlôe3WÆBegöWrôeTønß˘i⁄
(
y
Ë0

	)

36 
	#sqlôe3WÆEndWrôeTønß˘i⁄
(
x
Ë0

	)

37 
	#sqlôe3WÆUndo
(
x
,
y
,
z
Ë0

	)

38 
	#sqlôe3WÆSavïoöt
(
y
,
z
)

	)

39 
	#sqlôe3WÆSavïoötUndo
(
y
,
z
Ë0

	)

40 
	#sqlôe3WÆFømes
(
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

41 
	#sqlôe3WÆCheckpoöt
(
r
,
s
,
t
,
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

42 
	#sqlôe3WÆCÆlback
(
z
Ë0

	)

43 
	#sqlôe3WÆEx˛usiveMode
(
y
,
z
Ë0

	)

44 
	#sqlôe3WÆHópMem‹y
(
z
Ë0

	)

45 
	#sqlôe3WÆFømesize
(
z
Ë0

	)

46 
	#sqlôe3WÆFödFøme
(
x
,
y
,
z
Ë0

	)

47 
	#sqlôe3WÆFûe
(
x
Ë0

	)

50 
	#WAL_SAVEPOINT_NDATA
 4

	)

55 
WÆ
 
	tWÆ
;

58 
sqlôe3WÆO≥n
(
sqlôe3_vfs
*, 
sqlôe3_fûe
*, c⁄° *, , 
i64
, 
WÆ
**);

59 
sqlôe3WÆClo£
(
WÆ
 *
pWÆ
, 
sync_Êags
, , 
u8
 *);

62 
sqlôe3WÆLimô
(
WÆ
*, 
i64
);

71 
sqlôe3WÆBegöRódTønß˘i⁄
(
WÆ
 *
pWÆ
, *);

72 
sqlôe3WÆEndRódTønß˘i⁄
(
WÆ
 *
pWÆ
);

75 
sqlôe3WÆFödFøme
(
WÆ
 *, 
Pgno
, 
u32
 *);

76 
sqlôe3WÆRódFøme
(
WÆ
 *, 
u32
, , 
u8
 *);

79 
Pgno
 
sqlôe3WÆDbsize
(
WÆ
 *
pWÆ
);

82 
sqlôe3WÆBegöWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
);

83 
sqlôe3WÆEndWrôeTønß˘i⁄
(
WÆ
 *
pWÆ
);

86 
sqlôe3WÆUndo
(
WÆ
 *
pWÆ
, (*
xUndo
)(*, 
Pgno
), *
pUndoCtx
);

90 
	`sqlôe3WÆSavïoöt
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
);

94 
	`sqlôe3WÆSavïoötUndo
(
WÆ
 *
pWÆ
, 
u32
 *
aWÆD©a
);

97 
	`sqlôe3WÆFømes
(
WÆ
 *
pWÆ
, , 
PgHdr
 *, 
Pgno
, , );

100 
	`sqlôe3WÆCheckpoöt
(

101 
WÆ
 *
pWÆ
,

102 
eMode
,

103 (*
xBusy
)(*),

104 *
pBusyArg
,

105 
sync_Êags
,

106 
nBuf
,

107 
u8
 *
zBuf
,

108 *
≤Log
,

109 *
≤Ck±


117 
	`sqlôe3WÆCÆlback
(
WÆ
 *
pWÆ
);

122 
	`sqlôe3WÆEx˛usiveMode
(
WÆ
 *
pWÆ
, 
›
);

128 
	`sqlôe3WÆHópMem‹y
(
WÆ
 *
pWÆ
);

130 #ifde‡
SQLITE_ENABLE_SNAPSHOT


131 
	`sqlôe3WÆS«pshŸGë
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 **
µS«pshŸ
);

132 
	`sqlôe3WÆS«pshŸO≥n
(
WÆ
 *
pWÆ
, 
sqlôe3_¢≠shŸ
 *
pS«pshŸ
);

135 #ifde‡
SQLITE_ENABLE_ZIPVFS


139 
	`sqlôe3WÆFømesize
(
WÆ
 *
pWÆ
);

143 
sqlôe3_fûe
 *
	`sqlôe3WÆFûe
(
WÆ
 *
pWÆ
);

	@walker.c

15 
	~"sqlôeI¡.h
"

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

39 
SQLITE_NOINLINE
 
	$wÆkEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

40 
rc
;

41 
	`ã°ˇ£
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_TokíO∆y
) );

42 
	`ã°ˇ£
–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_Redu˚d
) );

43 
rc
 = 
pWÆkî
->
	`xEx¥CÆlback
’WÆkî, 
pEx¥
);

44 if–
rc
==
WRC_C⁄töue


45 && !
	`Ex¥HasPr›îty
(
pEx¥
,
EP_TokíO∆y
) ){

46 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
pEx¥
->
pLe·
ËË 
WRC_Ab‹t
;

47 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
pEx¥
->
pRight
ËË 
WRC_Ab‹t
;

48 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

49 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pEx¥
->
x
.
pSñe˘
ËË 
WRC_Ab‹t
;

51 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pEx¥
->
x
.
pLi°
ËË 
WRC_Ab‹t
;

54  
rc
 & 
WRC_Ab‹t
;

55 
	}
}

56 
	$sqlôe3WÆkEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

57  
pEx¥
 ? 
	`wÆkEx¥
(
pWÆkî
,pEx¥Ë: 
WRC_C⁄töue
;

58 
	}
}

64 
	$sqlôe3WÆkEx¥Li°
(
WÆkî
 *
pWÆkî
, 
Ex¥Li°
 *
p
){

65 
i
;

66 
Ex¥Li°_ôem
 *
pIãm
;

67 if–
p
 ){

68 
i
=
p
->
nEx¥
, 
pIãm
ı->
a
; i>0; i--,ÖItem++){

69 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
pIãm
->
pEx¥
ËË 
WRC_Ab‹t
;

72  
WRC_C⁄töue
;

73 
	}
}

81 
	$sqlôe3WÆkSñe˘Ex¥
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

82 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pELi°
ËË 
WRC_Ab‹t
;

83 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pWhîe
ËË 
WRC_Ab‹t
;

84 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pGroupBy
ËË 
WRC_Ab‹t
;

85 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pHavög
ËË 
WRC_Ab‹t
;

86 if–
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
p
->
pOrdîBy
ËË 
WRC_Ab‹t
;

87 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pLimô
ËË 
WRC_Ab‹t
;

88 if–
	`sqlôe3WÆkEx¥
(
pWÆkî
, 
p
->
pOff£t
ËË 
WRC_Ab‹t
;

89  
WRC_C⁄töue
;

90 
	}
}

99 
	$sqlôe3WÆkSñe˘From
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

100 
SrcLi°
 *
pSrc
;

101 
i
;

102 
SrcLi°_ôem
 *
pIãm
;

104 
pSrc
 = 
p
->pSrc;

105 if–
	`ALWAYS
(
pSrc
) ){

106 
i
=
pSrc
->
nSrc
, 
pIãm
ıSrc->
a
; i>0; i--,ÖItem++){

107 if–
	`sqlôe3WÆkSñe˘
(
pWÆkî
, 
pIãm
->
pSñe˘
) ){

108  
WRC_Ab‹t
;

110 if–
pIãm
->
fg
.
isTabFunc


111 && 
	`sqlôe3WÆkEx¥Li°
(
pWÆkî
, 
pIãm
->
u1
.
pFuncArg
)

113  
WRC_Ab‹t
;

117  
WRC_C⁄töue
;

118 
	}
}

136 
	$sqlôe3WÆkSñe˘
(
WÆkî
 *
pWÆkî
, 
Sñe˘
 *
p
){

137 
rc
;

138 if–
p
==0 || (
pWÆkî
->
xSñe˘CÆlback
==0 &&ÖWÆkî->
xSñe˘CÆlback2
==0) ){

139  
WRC_C⁄töue
;

141 
rc
 = 
WRC_C⁄töue
;

142 
pWÆkî
->
wÆkîDïth
++;

143  
p
 ){

144 if–
pWÆkî
->
xSñe˘CÆlback
 ){

145 
rc
 = 
pWÆkî
->
	`xSñe˘CÆlback
’WÆkî, 
p
);

146 if–
rc
 ) ;

148 if–
	`sqlôe3WÆkSñe˘Ex¥
(
pWÆkî
, 
p
)

149 || 
	`sqlôe3WÆkSñe˘From
(
pWÆkî
, 
p
)

151 
pWÆkî
->
wÆkîDïth
--;

152  
WRC_Ab‹t
;

154 if–
pWÆkî
->
xSñe˘CÆlback2
 ){

155 
pWÆkî
->
	`xSñe˘CÆlback2
’WÆkî, 
p
);

157 
p
 =Ö->
pPri‹
;

159 
pWÆkî
->
wÆkîDïth
--;

160  
rc
 & 
WRC_Ab‹t
;

161 
	}
}

	@where.c

19 
	~"sqlôeI¡.h
"

20 
	~"whîeI¡.h
"

23 
whîeLo›Resize
(
sqlôe3
*, 
WhîeLo›
*, );

26 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_DEBUG
)

27  
	gsqlôe3WhîeTø˚
 = 0;

34 
LogE°
 
	$sqlôe3WhîeOuçutRowCou¡
(
WhîeInfo
 *
pWInfo
){

35  
pWInfo
->
nRowOut
;

36 
	}
}

42 
	$sqlôe3WhîeIsDi°ö˘
(
WhîeInfo
 *
pWInfo
){

43  
pWInfo
->
eDi°ö˘
;

44 
	}
}

50 
	$sqlôe3WhîeIsOrdîed
(
WhîeInfo
 *
pWInfo
){

51  
pWInfo
->
nOBS©
;

52 
	}
}

62 
	$sqlôe3WhîeOrdîedI¬îLo›
(
WhîeInfo
 *
pWInfo
){

63  
pWInfo
->
bOrdîedI¬îLo›
;

64 
	}
}

70 
	$sqlôe3WhîeC⁄töueLabñ
(
WhîeInfo
 *
pWInfo
){

71 
	`as£π
–
pWInfo
->
iC⁄töue
!=0 );

72  
pWInfo
->
iC⁄töue
;

73 
	}
}

79 
	$sqlôe3WhîeBªakLabñ
(
WhîeInfo
 *
pWInfo
){

80  
pWInfo
->
iBªak
;

81 
	}
}

100 
	$sqlôe3WhîeOkO√Pass
(
WhîeInfo
 *
pWInfo
, *
aiCur
){

101 
	`mem˝y
(
aiCur
, 
pWInfo
->
aiCurO√Pass
, ()*2);

102 #ifde‡
WHERETRACE_ENABLED


103 if–
sqlôe3WhîeTø˚
 && 
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

104 
	`sqlôe3DebugPrötf
("%s cursors: %d %d\n",

105 
pWInfo
->
eO√Pass
==
ONEPASS_SINGLE
 ? "ONEPASS_SINGLE" : "ONEPASS_MULTI",

106 
aiCur
[0],áiCur[1]);

109  
pWInfo
->
eO√Pass
;

110 
	}
}

115 
	$whîeOrMove
(
WhîeOrSë
 *
pDe°
, WhîeOrSë *
pSrc
){

116 
pDe°
->
n
 = 
pSrc
->n;

117 
	`mem˝y
(
pDe°
->
a
, 
pSrc
->a,ÖDe°->
n
*(pDest->a[0]));

118 
	}
}

127 
	$whîeOrIn£π
(

128 
WhîeOrSë
 *
pSë
,

129 
Bômask
 
¥îeq
,

130 
LogE°
 
rRun
,

131 
LogE°
 
nOut


133 
u16
 
i
;

134 
WhîeOrCo°
 *
p
;

135 
i
=
pSë
->
n
, 
p
ıSë->
a
; i>0; i--,Ö++){

136 if–
rRun
<=
p
->rRu¿&& (
¥îeq
 &Ö->prereq)==prereq ){

137 
whîeOrIn£π_d⁄e
;

139 if–
p
->
rRun
<ÙRu¿&& (p->
¥îeq
 &Örereq)==p->prereq ){

143 if–
pSë
->
n
<
N_OR_COST
 ){

144 
p
 = &
pSë
->
a
[pSë->
n
++];

145 
p
->
nOut
 =ÇOut;

147 
p
 = 
pSë
->
a
;

148 
i
=1; i<
pSë
->
n
; i++){

149 if–
p
->
rRun
>
pSë
->
a
[
i
].rRun )Ö =ÖSet->a + i;

151 if–
p
->
rRun
<=rRun )  0;

153 
whîeOrIn£π_d⁄e
:

154 
p
->
¥îeq
 =Örereq;

155 
p
->
rRun
 =ÑRun;

156 if–
p
->
nOut
>nOut )Ö->nOut =ÇOut;

158 
	}
}

164 
Bômask
 
	$sqlôe3WhîeGëMask
(
WhîeMaskSë
 *
pMaskSë
, 
iCurs‹
){

165 
i
;

166 
	`as£π
–
pMaskSë
->
n
<=()(
Bômask
)*8 );

167 
i
=0; i<
pMaskSë
->
n
; i++){

168 if–
pMaskSë
->
ix
[
i
]==
iCurs‹
 ){

169  
	`MASKBIT
(
i
);

173 
	}
}

183 
	$¸óãMask
(
WhîeMaskSë
 *
pMaskSë
, 
iCurs‹
){

184 
	`as£π
–
pMaskSë
->
n
 < 
	`AºaySize
’MaskSë->
ix
) );

185 
pMaskSë
->
ix
[pMaskSë->
n
++] = 
iCurs‹
;

186 
	}
}

193 
WhîeTîm
 *
	$whîeSˇnNext
(
WhîeSˇn
 *
pSˇn
){

194 
iCur
;

195 
i16
 
iCﬁumn
;

196 
Ex¥
 *
pX
;

197 
WhîeCœu£
 *
pWC
;

198 
WhîeTîm
 *
pTîm
;

199 
k
 = 
pSˇn
->k;

201  
pSˇn
->
iEquiv
<ıSˇn->
nEquiv
 ){

202 
iCur
 = 
pSˇn
->
aiCur
[pSˇn->
iEquiv
-1];

203 
iCﬁumn
 = 
pSˇn
->
aiCﬁumn
[pSˇn->
iEquiv
-1];

204 if–
iCﬁumn
==
XN_EXPR
 && 
pSˇn
->
pIdxEx¥
==0 )  0;

205  (
pWC
 = 
pSˇn
->pWC)!=0 ){

206 
pTîm
=
pWC
->
a
+
k
; k<pWC->
nTîm
; k++,ÖTerm++){

207 if–
pTîm
->
À·Curs‹
==
iCur


208 && 
pTîm
->
u
.
À·Cﬁumn
==
iCﬁumn


209 && (
iCﬁumn
!=
XN_EXPR


210 || 
	`sqlôe3Ex¥Com∑ª
(
pTîm
->
pEx¥
->
pLe·
,
pSˇn
->
pIdxEx¥
,
iCur
)==0)

211 && (
pSˇn
->
iEquiv
<=1 || !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
))

213 if–(
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
)!=0

214 && 
pSˇn
->
nEquiv
<
	`AºaySize
’Sˇn->
aiCur
)

215 && (
pX
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pTîm
->
pEx¥
->
pRight
))->
›
==
TK_COLUMN


217 
j
;

218 
j
=0; j<
pSˇn
->
nEquiv
; j++){

219 if–
pSˇn
->
aiCur
[
j
]==
pX
->
iTabÀ


220 && 
pSˇn
->
aiCﬁumn
[
j
]==
pX
->
iCﬁumn
 ){

224 if–
j
==
pSˇn
->
nEquiv
 ){

225 
pSˇn
->
aiCur
[
j
] = 
pX
->
iTabÀ
;

226 
pSˇn
->
aiCﬁumn
[
j
] = 
pX
->
iCﬁumn
;

227 
pSˇn
->
nEquiv
++;

230 if–(
pTîm
->
eO≥øt‹
 & 
pSˇn
->
›Mask
)!=0 ){

232 if–
pSˇn
->
zCﬁlName
 && (
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
)==0 ){

233 
CﬁlSeq
 *
pCﬁl
;

234 
P¨£
 *
pP¨£
 = 
pWC
->
pWInfo
->pParse;

235 
pX
 = 
pTîm
->
pEx¥
;

236 if–!
	`sqlôe3IndexAfföôyOk
(
pX
, 
pSˇn
->
idxaff
) ){

239 
	`as£π
(
pX
->
pLe·
);

240 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
,

241 
pX
->
pLe·
,ÖX->
pRight
);

242 if–
pCﬁl
==0 )ÖCﬁ»
pP¨£
->
db
->
pDÊtCﬁl
;

243 if–
	`sqlôe3SåICmp
(
pCﬁl
->
zName
, 
pSˇn
->
zCﬁlName
) ){

247 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))!=0

248 && (
pX
 = 
pTîm
->
pEx¥
->
pRight
)->
›
==
TK_COLUMN


249 && 
pX
->
iTabÀ
==
pSˇn
->
aiCur
[0]

250 && 
pX
->
iCﬁumn
==
pSˇn
->
aiCﬁumn
[0]

252 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

255 
pSˇn
->
k
 = k+1;

256  
pTîm
;

260 
pSˇn
->
pWC
 =ÖSˇn->pWC->
pOuãr
;

261 
k
 = 0;

263 
pSˇn
->
pWC
 =ÖSˇn->
pOrigWC
;

264 
k
 = 0;

265 
pSˇn
->
iEquiv
++;

268 
	}
}

289 
WhîeTîm
 *
	$whîeSˇnInô
(

290 
WhîeSˇn
 *
pSˇn
,

291 
WhîeCœu£
 *
pWC
,

292 
iCur
,

293 
iCﬁumn
,

294 
u32
 
›Mask
,

295 
Index
 *
pIdx


297 
j
 = 0;

300 
pSˇn
->
pOrigWC
 = 
pWC
;

301 
pSˇn
->
pWC
 =ÖWC;

302 
pSˇn
->
pIdxEx¥
 = 0;

303 if–
pIdx
 ){

304 
j
 = 
iCﬁumn
;

305 
iCﬁumn
 = 
pIdx
->
aiCﬁumn
[
j
];

306 if–
iCﬁumn
==
XN_EXPR
 ) 
pSˇn
->
pIdxEx¥
 = 
pIdx
->
aCﬁEx¥
->
a
[
j
].
pEx¥
;

307 if–
iCﬁumn
==
pIdx
->
pTabÀ
->
iPKey
 ) iCﬁum¿
XN_ROWID
;

309 if–
pIdx
 && 
iCﬁumn
>=0 ){

310 
pSˇn
->
idxaff
 = 
pIdx
->
pTabÀ
->
aCﬁ
[
iCﬁumn
].
afföôy
;

311 
pSˇn
->
zCﬁlName
 = 
pIdx
->
azCﬁl
[
j
];

313 
pSˇn
->
idxaff
 = 0;

314 
pSˇn
->
zCﬁlName
 = 0;

316 
pSˇn
->
›Mask
 = opMask;

317 
pSˇn
->
k
 = 0;

318 
pSˇn
->
aiCur
[0] = 
iCur
;

319 
pSˇn
->
aiCﬁumn
[0] = 
iCﬁumn
;

320 
pSˇn
->
nEquiv
 = 1;

321 
pSˇn
->
iEquiv
 = 1;

322  
	`whîeSˇnNext
(
pSˇn
);

323 
	}
}

350 
WhîeTîm
 *
	$sqlôe3WhîeFödTîm
(

351 
WhîeCœu£
 *
pWC
,

352 
iCur
,

353 
iCﬁumn
,

354 
Bômask
 
nŸRódy
,

355 
u32
 
›
,

356 
Index
 *
pIdx


358 
WhîeTîm
 *
pResu…
 = 0;

359 
WhîeTîm
 *
p
;

360 
WhîeSˇn
 
sˇn
;

362 
p
 = 
	`whîeSˇnInô
(&
sˇn
, 
pWC
, 
iCur
, 
iCﬁumn
, 
›
, 
pIdx
);

363 
›
 &
WO_EQ
|
WO_IS
;

364  
p
 ){

365 if–(
p
->
¥îeqRight
 & 
nŸRódy
)==0 ){

366 if–
p
->
¥îeqRight
==0 && (p->
eO≥øt‹
&
›
)!=0 ){

367 
	`ã°ˇ£
–
p
->
eO≥øt‹
 & 
WO_IS
 );

368  
p
;

370 if–
pResu…
==0 )ÖResu… = 
p
;

372 
p
 = 
	`whîeSˇnNext
(&
sˇn
);

374  
pResu…
;

375 
	}
}

384 
	$födIndexCﬁ
(

385 
P¨£
 *
pP¨£
,

386 
Ex¥Li°
 *
pLi°
,

387 
iBa£
,

388 
Index
 *
pIdx
,

389 
iCﬁ


391 
i
;

392 c⁄° *
zCﬁl
 = 
pIdx
->
azCﬁl
[
iCﬁ
];

394 
i
=0; i<
pLi°
->
nEx¥
; i++){

395 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[
i
].
pEx¥
);

396 if–
p
->
›
==
TK_COLUMN


397 && 
p
->
iCﬁumn
==
pIdx
->
aiCﬁumn
[
iCﬁ
]

398 && 
p
->
iTabÀ
==
iBa£


400 
CﬁlSeq
 *
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pLi°
->
a
[
i
].
pEx¥
);

401 if–
pCﬁl
 && 0==
	`sqlôe3SåICmp
’Cﬁl->
zName
, 
zCﬁl
) ){

402  
i
;

408 
	}
}

413 
	$ödexCﬁumnNŸNuŒ
(
Index
 *
pIdx
, 
iCﬁ
){

414 
j
;

415 
	`as£π
–
pIdx
!=0 );

416 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pIdx
->
nCﬁumn
 );

417 
j
 = 
pIdx
->
aiCﬁumn
[
iCﬁ
];

418 if–
j
>=0 ){

419  
pIdx
->
pTabÀ
->
aCﬁ
[
j
].
nŸNuŒ
;

420 }if–
j
==(-1) ){

423 
	`as£π
–
j
==(-2) );

427 
	}
}

436 
	$isDi°ö˘Redund™t
(

437 
P¨£
 *
pP¨£
,

438 
SrcLi°
 *
pTabLi°
,

439 
WhîeCœu£
 *
pWC
,

440 
Ex¥Li°
 *
pDi°ö˘


442 
TabÀ
 *
pTab
;

443 
Index
 *
pIdx
;

444 
i
;

445 
iBa£
;

450 if–
pTabLi°
->
nSrc
!=1 )  0;

451 
iBa£
 = 
pTabLi°
->
a
[0].
iCurs‹
;

452 
pTab
 = 
pTabLi°
->
a
[0].pTab;

458 
i
=0; i<
pDi°ö˘
->
nEx¥
; i++){

459 
Ex¥
 *
p
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pDi°ö˘
->
a
[
i
].
pEx¥
);

460 if–
p
->
›
==
TK_COLUMN
 &&Ö->
iTabÀ
==
iBa£
 &&Ö->
iCﬁumn
<0 )  1;

476 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

477 if–!
	`IsUniqueIndex
(
pIdx
) ) ;

478 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

479 if–0==
	`sqlôe3WhîeFödTîm
(
pWC
, 
iBa£
, 
i
, ~(
Bômask
)0, 
WO_EQ
, 
pIdx
) ){

480 if–
	`födIndexCﬁ
(
pP¨£
, 
pDi°ö˘
, 
iBa£
, 
pIdx
, 
i
)<0 ) ;

481 if–
	`ödexCﬁumnNŸNuŒ
(
pIdx
, 
i
)==0 ) ;

484 if–
i
==
pIdx
->
nKeyCﬁ
 ){

491 
	}
}

497 
LogE°
 
	$e°Log
(
LogE°
 
N
){

498  
N
<=10 ? 0 : 
	`sqlôe3LogE°
(N) - 33;

499 
	}
}

513 
	$å™¶©eCﬁumnToC›y
(

514 
Vdbe
 *
v
,

515 
iSèπ
,

516 
iTabCur
,

517 
iRegi°î
,

518 
bIn¸Rowid


520 
VdbeOp
 *
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
iSèπ
);

521 
iEnd
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

522 ; 
iSèπ
<
iEnd
; iSèπ++, 
pOp
++){

523 if–
pOp
->
p1
!=
iTabCur
 ) ;

524 if–
pOp
->
›code
==
OP_Cﬁumn
 ){

525 
pOp
->
›code
 = 
OP_C›y
;

526 
pOp
->
p1
 =ÖOp->
p2
 + 
iRegi°î
;

527 
pOp
->
p2
 =ÖOp->
p3
;

528 
pOp
->
p3
 = 0;

529 }if–
pOp
->
›code
==
OP_Rowid
 ){

530 if–
bIn¸Rowid
 ){

532 
pOp
->
›code
 = 
OP_AddImm
;

533 
pOp
->
p1
 =ÖOp->
p2
;

534 
pOp
->
p2
 = 1;

536 
pOp
->
›code
 = 
OP_NuŒ
;

537 
pOp
->
p1
 = 0;

538 
pOp
->
p3
 = 0;

542 
	}
}

550 #i‡!
deföed
(
SQLITE_OMIT_VIRTUALTABLE
Ë&& deföed(
WHERETRACE_ENABLED
)

551 
	$TRACE_IDX_INPUTS
(
sqlôe3_ödex_öfo
 *
p
){

552 
i
;

553 if–!
sqlôe3WhîeTø˚
 ) ;

554 
i
=0; i<
p
->
nC⁄°øöt
; i++){

555 
	`sqlôe3DebugPrötf
(" constraint[%d]: col=%dÅermid=%d op=%d usabled=%d\n",

556 
i
,

557 
p
->
aC⁄°øöt
[
i
].
iCﬁumn
,

558 
p
->
aC⁄°øöt
[
i
].
iTîmOff£t
,

559 
p
->
aC⁄°øöt
[
i
].
›
,

560 
p
->
aC⁄°øöt
[
i
].
ußbÀ
);

562 
i
=0; i<
p
->
nOrdîBy
; i++){

563 
	`sqlôe3DebugPrötf
(" orderby[%d]: col=%d desc=%d\n",

564 
i
,

565 
p
->
aOrdîBy
[
i
].
iCﬁumn
,

566 
p
->
aOrdîBy
[
i
].
desc
);

568 
	}
}

569 
	$TRACE_IDX_OUTPUTS
(
sqlôe3_ödex_öfo
 *
p
){

570 
i
;

571 if–!
sqlôe3WhîeTø˚
 ) ;

572 
i
=0; i<
p
->
nC⁄°øöt
; i++){

573 
	`sqlôe3DebugPrötf
(" usage[%d]:árgvIdx=%d omit=%d\n",

574 
i
,

575 
p
->
aC⁄°øötUßge
[
i
].
¨gvIndex
,

576 
p
->
aC⁄°øötUßge
[
i
].
omô
);

578 
	`sqlôe3DebugPrötf
(" idxNum=%d\n", 
p
->
idxNum
);

579 
	`sqlôe3DebugPrötf
(" idxSå=%s\n", 
p
->
idxSå
);

580 
	`sqlôe3DebugPrötf
(" ordîByC⁄sumed=%d\n", 
p
->
‹dîByC⁄sumed
);

581 
	`sqlôe3DebugPrötf
("É°im©edCo°=%g\n", 
p
->
e°im©edCo°
);

582 
	`sqlôe3DebugPrötf
("É°im©edRows=%Œd\n", 
p
->
e°im©edRows
);

583 
	}
}

585 
	#TRACE_IDX_INPUTS
(
A
)

	)

586 
	#TRACE_IDX_OUTPUTS
(
A
)

	)

589 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


595 
	$ãrmC™DriveIndex
(

596 
WhîeTîm
 *
pTîm
,

597 
SrcLi°_ôem
 *
pSrc
,

598 
Bômask
 
nŸRódy


600 
aff
;

601 if–
pTîm
->
À·Curs‹
!=
pSrc
->
iCurs‹
 )  0;

602 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))==0 )  0;

603 if–(
pTîm
->
¥îeqRight
 & 
nŸRódy
)!=0 )  0;

604 if–
pTîm
->
u
.
À·Cﬁumn
<0 )  0;

605 
aff
 = 
pSrc
->
pTab
->
aCﬁ
[
pTîm
->
u
.
À·Cﬁumn
].
afföôy
;

606 if–!
	`sqlôe3IndexAfföôyOk
(
pTîm
->
pEx¥
, 
aff
) )  0;

607 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

609 
	}
}

613 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


619 
	$c⁄°ru˘Autom©icIndex
(

620 
P¨£
 *
pP¨£
,

621 
WhîeCœu£
 *
pWC
,

622 
SrcLi°_ôem
 *
pSrc
,

623 
Bômask
 
nŸRódy
,

624 
WhîeLevñ
 *
pLevñ


626 
nKeyCﬁ
;

627 
WhîeTîm
 *
pTîm
;

628 
WhîeTîm
 *
pWCEnd
;

629 
Index
 *
pIdx
;

630 
Vdbe
 *
v
;

631 
addrInô
;

632 
TabÀ
 *
pTabÀ
;

633 
addrT›
;

634 
ªgRec‹d
;

635 
n
;

636 
i
;

637 
mxBôCﬁ
;

638 
CﬁlSeq
 *
pCﬁl
;

639 
WhîeLo›
 *
pLo›
;

640 *
zNŸU£d
;

641 
Bômask
 
idxCﬁs
;

642 
Bômask
 
exåaCﬁs
;

643 
u8
 
£¡W¨nög
 = 0;

644 
Ex¥
 *
pP¨tül
 = 0;

645 
iC⁄töue
 = 0;

646 
SrcLi°_ôem
 *
pTabIãm
;

647 
addrCou¡î
 = 0;

648 
ªgBa£
;

652 
v
 = 
pP¨£
->
pVdbe
;

653 
	`as£π
–
v
!=0 );

654 
addrInô
 = 
	`sqlôe3CodeOn˚
(
pP¨£
); 
	`VdbeCovîage
(
v
);

658 
nKeyCﬁ
 = 0;

659 
pTabÀ
 = 
pSrc
->
pTab
;

660 
pWCEnd
 = &
pWC
->
a
[pWC->
nTîm
];

661 
pLo›
 = 
pLevñ
->
pWLo›
;

662 
idxCﬁs
 = 0;

663 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
;ÖTerm++){

664 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

665 
	`as£π
–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

666 || 
pEx¥
->
iRightJoöTabÀ
!=
pSrc
->
iCurs‹


667 || 
pLo›
->
¥îeq
!=0 );

668 if–
pLo›
->
¥îeq
==0

669 && (
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
)==0

670 && !
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

671 && 
	`sqlôe3Ex¥IsTabÀC⁄°™t
(
pEx¥
, 
pSrc
->
iCurs‹
) ){

672 
pP¨tül
 = 
	`sqlôe3Ex¥And
(
pP¨£
->
db
,ÖPartial,

673 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pEx¥
, 0));

675 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 
nŸRódy
) ){

676 
iCﬁ
 = 
pTîm
->
u
.
À·Cﬁumn
;

677 
Bômask
 
cMask
 = 
iCﬁ
>=
BMS
 ? 
	`MASKBIT
(BMS-1) : MASKBIT(iCol);

678 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

679 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

680 if–!
£¡W¨nög
 ){

681 
	`sqlôe3_log
(
SQLITE_WARNING_AUTOINDEX
,

682 "autom©i¯ödex o¿%s(%s)", 
pTabÀ
->
zName
,

683 
pTabÀ
->
aCﬁ
[
iCﬁ
].
zName
);

684 
£¡W¨nög
 = 1;

686 if–(
idxCﬁs
 & 
cMask
)==0 ){

687 if–
	`whîeLo›Resize
(
pP¨£
->
db
, 
pLo›
, 
nKeyCﬁ
+1) ){

688 
íd_auto_ödex_¸óã
;

690 
pLo›
->
aLTîm
[
nKeyCﬁ
++] = 
pTîm
;

691 
idxCﬁs
 |
cMask
;

695 
	`as£π
–
nKeyCﬁ
>0 );

696 
pLo›
->
u
.
båì
.
nEq
 =ÖLo›->
nLTîm
 = 
nKeyCﬁ
;

697 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
 | 
WHERE_IDX_ONLY
 | 
WHERE_INDEXED


698 | 
WHERE_AUTO_INDEX
;

708 
exåaCﬁs
 = 
pSrc
->
cﬁU£d
 & (~
idxCﬁs
 | 
	`MASKBIT
(
BMS
-1));

709 
mxBôCﬁ
 = 
	`MIN
(
BMS
-1,
pTabÀ
->
nCﬁ
);

710 
	`ã°ˇ£
–
pTabÀ
->
nCﬁ
==
BMS
-1 );

711 
	`ã°ˇ£
–
pTabÀ
->
nCﬁ
==
BMS
-2 );

712 
i
=0; i<
mxBôCﬁ
; i++){

713 if–
exåaCﬁs
 & 
	`MASKBIT
(
i
ËË
nKeyCﬁ
++;

715 if–
pSrc
->
cﬁU£d
 & 
	`MASKBIT
(
BMS
-1) ){

716 
nKeyCﬁ
 +
pTabÀ
->
nCﬁ
 - 
BMS
 + 1;

720 
pIdx
 = 
	`sqlôe3AŒoˇãIndexObje˘
(
pP¨£
->
db
, 
nKeyCﬁ
+1, 0, &
zNŸU£d
);

721 if–
pIdx
==0 ) 
íd_auto_ödex_¸óã
;

722 
pLo›
->
u
.
båì
.
pIndex
 = 
pIdx
;

723 
pIdx
->
zName
 = "auto-index";

724 
pIdx
->
pTabÀ
 =ÖTable;

725 
n
 = 0;

726 
idxCﬁs
 = 0;

727 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
;ÖTerm++){

728 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 
nŸRódy
) ){

729 
iCﬁ
 = 
pTîm
->
u
.
À·Cﬁumn
;

730 
Bômask
 
cMask
 = 
iCﬁ
>=
BMS
 ? 
	`MASKBIT
(BMS-1) : MASKBIT(iCol);

731 
	`ã°ˇ£
–
iCﬁ
==
BMS
-1 );

732 
	`ã°ˇ£
–
iCﬁ
==
BMS
 );

733 if–(
idxCﬁs
 & 
cMask
)==0 ){

734 
Ex¥
 *
pX
 = 
pTîm
->
pEx¥
;

735 
idxCﬁs
 |
cMask
;

736 
pIdx
->
aiCﬁumn
[
n
] = 
pTîm
->
u
.
À·Cﬁumn
;

737 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pX
->
pLe·
,ÖX->
pRight
);

738 
pIdx
->
azCﬁl
[
n
] = 
pCﬁl
 ?ÖCﬁl->
zName
 : 
sqlôe3SåBINARY
;

739 
n
++;

743 
	`as£π
–(
u32
)
n
==
pLo›
->
u
.
båì
.
nEq
 );

747 
i
=0; i<
mxBôCﬁ
; i++){

748 if–
exåaCﬁs
 & 
	`MASKBIT
(
i
) ){

749 
pIdx
->
aiCﬁumn
[
n
] = 
i
;

750 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

751 
n
++;

754 if–
pSrc
->
cﬁU£d
 & 
	`MASKBIT
(
BMS
-1) ){

755 
i
=
BMS
-1; i<
pTabÀ
->
nCﬁ
; i++){

756 
pIdx
->
aiCﬁumn
[
n
] = 
i
;

757 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

758 
n
++;

761 
	`as£π
–
n
==
nKeyCﬁ
 );

762 
pIdx
->
aiCﬁumn
[
n
] = 
XN_ROWID
;

763 
pIdx
->
azCﬁl
[
n
] = 
sqlôe3SåBINARY
;

766 
	`as£π
–
pLevñ
->
iIdxCur
>=0 );

767 
pLevñ
->
iIdxCur
 = 
pP¨£
->
nTab
++;

768 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nAutoödex
, 
pLevñ
->
iIdxCur
, 
nKeyCﬁ
+1);

769 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIdx
);

770 
	`VdbeCommít
((
v
, "f‹ %s", 
pTabÀ
->
zName
));

773 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

774 
pTabIãm
 = &
pWC
->
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
];

775 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

776 
ªgYõld
 = 
pTabIãm
->
ªgRëu∫
;

777 
addrCou¡î
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 0);

778 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
pTabIãm
->
addrFûlSub
);

779 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Yõld
, 
ªgYõld
);

780 
	`VdbeCovîage
(
v
);

781 
	`VdbeCommít
((
v
, "√xàrow o‡\"%s\"", 
pTabIãm
->
pTab
->
zName
));

783 
addrT›
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Rewöd
, 
pLevñ
->
iTabCur
); 
	`VdbeCovîage
(v);

785 if–
pP¨tül
 ){

786 
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

787 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pP¨tül
, 
iC⁄töue
, 
SQLITE_JUMPIFNULL
);

788 
pLo›
->
wsFœgs
 |
WHERE_PARTIALIDX
;

790 
ªgRec‹d
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

791 
ªgBa£
 = 
	`sqlôe3Gíî©eIndexKey
(

792 
pP¨£
, 
pIdx
, 
pLevñ
->
iTabCur
, 
ªgRec‹d
, 0, 0, 0, 0

794 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxIn£π
, 
pLevñ
->
iIdxCur
, 
ªgRec‹d
);

795 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

796 if–
pP¨tül
 ) 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iC⁄töue
);

797 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

798 
	`sqlôe3VdbeCh™geP2
(
v
, 
addrCou¡î
, 
ªgBa£
+
n
);

799 
	`å™¶©eCﬁumnToC›y
(
v
, 
addrT›
, 
pLevñ
->
iTabCur
, 
pTabIãm
->
ªgResu…
, 1);

800 
	`sqlôe3VdbeGŸo
(
v
, 
addrT›
);

801 
pTabIãm
->
fg
.
vüC‹outöe
 = 0;

803 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Next
, 
pLevñ
->
iTabCur
, 
addrT›
+1); 
	`VdbeCovîage
(v);

805 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_STMTSTATUS_AUTOINDEX
);

806 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrT›
);

807 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgRec‹d
);

808 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

811 
	`sqlôe3VdbeJumpHîe
(
v
, 
addrInô
);

813 
íd_auto_ödex_¸óã
:

814 
	`sqlôe3Ex¥Dñëe
(
pP¨£
->
db
, 
pP¨tül
);

815 
	}
}

818 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


824 
sqlôe3_ödex_öfo
 *
	$ÆloˇãIndexInfo
(

825 
P¨£
 *
pP¨£
,

826 
WhîeCœu£
 *
pWC
,

827 
Bômask
 
mUnußbÀ
,

828 
SrcLi°_ôem
 *
pSrc
,

829 
Ex¥Li°
 *
pOrdîBy


831 
i
, 
j
;

832 
nTîm
;

833 
sqlôe3_ödex_c⁄°øöt
 *
pIdxC⁄s
;

834 
sqlôe3_ödex_‹dîby
 *
pIdxOrdîBy
;

835 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
;

836 
WhîeTîm
 *
pTîm
;

837 
nOrdîBy
;

838 
sqlôe3_ödex_öfo
 *
pIdxInfo
;

842 
i
=
nTîm
=0, 
pTîm
=
pWC
->
a
; i<pWC->nTerm; i++,ÖTerm++){

843 if–
pTîm
->
À·Curs‹
 !
pSrc
->
iCurs‹
 ) ;

844 if–
pTîm
->
¥îeqRight
 & 
mUnußbÀ
 ) ;

845 
	`as£π
–
	`IsPowîOfTwo
(
pTîm
->
eO≥øt‹
 & ~
WO_EQUIV
) );

846 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IN
 );

847 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
 );

848 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

849 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ALL
 );

850 if–(
pTîm
->
eO≥øt‹
 & ~(
WO_ISNULL
|
WO_EQUIV
|
WO_IS
))==0 ) ;

851 if–
pTîm
->
wtFœgs
 & 
TERM_VNULL
 ) ;

852 
	`as£π
–
pTîm
->
u
.
À·Cﬁumn
>=(-1) );

853 
nTîm
++;

860 
nOrdîBy
 = 0;

861 if–
pOrdîBy
 ){

862 
n
 = 
pOrdîBy
->
nEx¥
;

863 
i
=0; i<
n
; i++){

864 
Ex¥
 *
pEx¥
 = 
pOrdîBy
->
a
[
i
].pExpr;

865 if–
pEx¥
->
›
!=
TK_COLUMN
 ||ÖEx¥->
iTabÀ
!=
pSrc
->
iCurs‹
 ) ;

867 if–
i
==
n
){

868 
nOrdîBy
 = 
n
;

874 
pIdxInfo
 = 
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, (*pIdxInfo)

875 + ((*
pIdxC⁄s
Ë+ (*
pUßge
))*
nTîm


876 + (*
pIdxOrdîBy
)*
nOrdîBy
 );

877 if–
pIdxInfo
==0 ){

878 
	`sqlôe3Eº‹Msg
(
pP¨£
, "out of memory");

887 
pIdxC⁄s
 = (
sqlôe3_ödex_c⁄°øöt
*)&
pIdxInfo
[1];

888 
pIdxOrdîBy
 = (
sqlôe3_ödex_‹dîby
*)&
pIdxC⁄s
[
nTîm
];

889 
pUßge
 = (
sqlôe3_ödex_c⁄°øöt_ußge
*)&
pIdxOrdîBy
[
nOrdîBy
];

890 *(*)&
pIdxInfo
->
nC⁄°øöt
 = 
nTîm
;

891 *(*)&
pIdxInfo
->
nOrdîBy
 =ÇOrderBy;

892 *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
 = 
pIdxC⁄s
;

893 *(
sqlôe3_ödex_‹dîby
**)&
pIdxInfo
->
aOrdîBy
 = 
pIdxOrdîBy
;

894 *(
sqlôe3_ödex_c⁄°øöt_ußge
**)&
pIdxInfo
->
aC⁄°øötUßge
 =

895 
pUßge
;

897 
i
=
j
=0, 
pTîm
=
pWC
->
a
; i<pWC->
nTîm
; i++,ÖTerm++){

898 
u8
 
›
;

899 if–
pTîm
->
À·Curs‹
 !
pSrc
->
iCurs‹
 ) ;

900 if–
pTîm
->
¥îeqRight
 & 
mUnußbÀ
 ) ;

901 
	`as£π
–
	`IsPowîOfTwo
(
pTîm
->
eO≥øt‹
 & ~
WO_EQUIV
) );

902 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IN
 );

903 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

904 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
 );

905 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ALL
 );

906 if–(
pTîm
->
eO≥øt‹
 & ~(
WO_ISNULL
|
WO_EQUIV
|
WO_IS
))==0 ) ;

907 if–
pTîm
->
wtFœgs
 & 
TERM_VNULL
 ) ;

908 
	`as£π
–
pTîm
->
u
.
À·Cﬁumn
>=(-1) );

909 
pIdxC⁄s
[
j
].
iCﬁumn
 = 
pTîm
->
u
.
À·Cﬁumn
;

910 
pIdxC⁄s
[
j
].
iTîmOff£t
 = 
i
;

911 
›
 = (
u8
)
pTîm
->
eO≥øt‹
 & 
WO_ALL
;

912 if–
›
==
WO_IN
 ) o∞
WO_EQ
;

913 if–
›
==
WO_MATCH
 ){

914 
›
 = 
pTîm
->
eM©chOp
;

916 
pIdxC⁄s
[
j
].
›
 = op;

920 
	`as£π
–
WO_EQ
==
SQLITE_INDEX_CONSTRAINT_EQ
 );

921 
	`as£π
–
WO_LT
==
SQLITE_INDEX_CONSTRAINT_LT
 );

922 
	`as£π
–
WO_LE
==
SQLITE_INDEX_CONSTRAINT_LE
 );

923 
	`as£π
–
WO_GT
==
SQLITE_INDEX_CONSTRAINT_GT
 );

924 
	`as£π
–
WO_GE
==
SQLITE_INDEX_CONSTRAINT_GE
 );

925 
	`as£π
–
WO_MATCH
==
SQLITE_INDEX_CONSTRAINT_MATCH
 );

926 
	`as£π
–
pTîm
->
eO≥øt‹
 & (
WO_IN
|
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
|
WO_MATCH
) );

927 
j
++;

929 
i
=0; i<
nOrdîBy
; i++){

930 
Ex¥
 *
pEx¥
 = 
pOrdîBy
->
a
[
i
].pExpr;

931 
pIdxOrdîBy
[
i
].
iCﬁumn
 = 
pEx¥
->iColumn;

932 
pIdxOrdîBy
[
i
].
desc
 = 
pOrdîBy
->
a
[i].
s‹tOrdî
;

935  
pIdxInfo
;

936 
	}
}

952 
	$vèbBe°Index
(
P¨£
 *
pP¨£
, 
TabÀ
 *
pTab
, 
sqlôe3_ödex_öfo
 *
p
){

953 
sqlôe3_vèb
 *
pVèb
 = 
	`sqlôe3GëVTabÀ
(
pP¨£
->
db
, 
pTab
)->pVtab;

954 
rc
;

956 
	`TRACE_IDX_INPUTS
(
p
);

957 
rc
 = 
pVèb
->
pModuÀ
->
	`xBe°Index
’Vèb, 
p
);

958 
	`TRACE_IDX_OUTPUTS
(
p
);

960 if–
rc
!=
SQLITE_OK
 ){

961 if–
rc
==
SQLITE_NOMEM
 ){

962 
	`sqlôe3OomFau…
(
pP¨£
->
db
);

963 }if–!
pVèb
->
zEºMsg
 ){

964 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
	`sqlôe3EºSå
(
rc
));

966 
	`sqlôe3Eº‹Msg
(
pP¨£
, "%s", 
pVèb
->
zEºMsg
);

969 
	`sqlôe3_‰ì
(
pVèb
->
zEºMsg
);

970 
pVèb
->
zEºMsg
 = 0;

975 
i
=0; i<
p
->
nC⁄°øöt
; i++){

976 if–!
p
->
aC⁄°øöt
[
i
].
ußbÀ
 &&Ö->
aC⁄°øötUßge
[i].
¨gvIndex
>0 ){

977 
	`sqlôe3Eº‹Msg
(
pP¨£
,

978 "èbÀ %s: xBe°IndexÑëu∫edá¿övÆidÖœn", 
pTab
->
zName
);

983  
pP¨£
->
nEº
;

984 
	}
}

987 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1001 
	$whîeKeySèts
(

1002 
P¨£
 *
pP¨£
,

1003 
Index
 *
pIdx
,

1004 
U≈ackedRec‹d
 *
pRec
,

1005 
roundUp
,

1006 
tRow˙t
 *
aSèt


1008 
IndexSam∂e
 *
aSam∂e
 = 
pIdx
->aSample;

1009 
iCﬁ
;

1010 
i
;

1011 
iSam∂e
;

1012 
iMö
 = 0;

1013 
iTe°
;

1014 
ªs
;

1015 
nFõld
;

1016 
tRow˙t
 
iLowî
 = 0;

1018 #i‚de‡
SQLITE_DEBUG


1019 
	`UNUSED_PARAMETER
–
pP¨£
 );

1021 
	`as£π
–
pRec
!=0 );

1022 
	`as£π
–
pIdx
->
nSam∂e
>0 );

1023 
	`as£π
–
pRec
->
nFõld
>0 &&ÖRec->nFõld<=
pIdx
->
nSam∂eCﬁ
 );

1069 
nFõld
 = 
pRec
->nField;

1070 
iCﬁ
 = 0;

1071 
iSam∂e
 = 
pIdx
->
nSam∂e
 * 
nFõld
;

1073 
iSamp
;

1074 
n
;

1076 
iTe°
 = (
iMö
+
iSam∂e
)/2;

1077 
iSamp
 = 
iTe°
 / 
nFõld
;

1078 if–
iSamp
>0 ){

1082 
n
=(
iTe°
 % 
nFõld
) + 1;Ç<nField;Ç++){

1083 if–
aSam∂e
[
iSamp
-1].
™Lt
[
n
-1]!=aSample[iSamp].anLt[n-1] ) ;

1086 
n
 = 
iTe°
 + 1;

1089 
pRec
->
nFõld
 = 
n
;

1090 
ªs
 = 
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
iSamp
].
n
,áSam∂e[iSamp].
p
, 
pRec
);

1091 if–
ªs
<0 ){

1092 
iLowî
 = 
aSam∂e
[
iSamp
].
™Lt
[
n
-1] +áSam∂e[iSamp].
™Eq
[n-1];

1093 
iMö
 = 
iTe°
+1;

1094 }if–
ªs
==0 && 
n
<
nFõld
 ){

1095 
iLowî
 = 
aSam∂e
[
iSamp
].
™Lt
[
n
-1];

1096 
iMö
 = 
iTe°
+1;

1097 
ªs
 = -1;

1099 
iSam∂e
 = 
iTe°
;

1100 
iCﬁ
 = 
n
-1;

1102 } 
ªs
 && 
iMö
<
iSam∂e
 );

1103 
i
 = 
iSam∂e
 / 
nFõld
;

1105 #ifde‡
SQLITE_DEBUG


1109 if–
pP¨£
->
db
->
mÆlocFaûed
==0 ){

1110 if–
ªs
==0 ){

1112 
	`as£π
–
i
<
pIdx
->
nSam∂e
 );

1113 
	`as£π
–
iCﬁ
==
nFõld
-1 );

1114 
pRec
->
nFõld
 =ÇField;

1115 
	`as£π
–0==
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)

1116 || 
pP¨£
->
db
->
mÆlocFaûed


1122 
	`as£π
–
i
<=
pIdx
->
nSam∂e
 && i>=0 );

1123 
pRec
->
nFõld
 = 
iCﬁ
+1;

1124 
	`as£π
–
i
==
pIdx
->
nSam∂e


1125 || 
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)>0

1126 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1132 if–
iCﬁ
>0 ){

1133 
pRec
->
nFõld
 = 
iCﬁ
;

1134 
	`as£π
–
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
].
n
,áSam∂e[i].
p
, 
pRec
)<=0

1135 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1137 if–
i
>0 ){

1138 
pRec
->
nFõld
 =ÇField;

1139 
	`as£π
–
	`sqlôe3VdbeRec‹dCom∑ª
(
aSam∂e
[
i
-1].
n
,áSam∂e[i-1].
p
, 
pRec
)<0

1140 || 
pP¨£
->
db
->
mÆlocFaûed
 );

1146 if–
ªs
==0 ){

1148 
	`as£π
–
iCﬁ
==
nFõld
-1 );

1149 
aSèt
[0] = 
aSam∂e
[
i
].
™Lt
[
iCﬁ
];

1150 
aSèt
[1] = 
aSam∂e
[
i
].
™Eq
[
iCﬁ
];

1155 
tRow˙t
 
iUµî
, 
iG≠
;

1156 if–
i
>=
pIdx
->
nSam∂e
 ){

1157 
iUµî
 = 
	`sqlôe3LogE°ToI¡
(
pIdx
->
aiRowLogE°
[0]);

1159 
iUµî
 = 
aSam∂e
[
i
].
™Lt
[
iCﬁ
];

1162 if–
iLowî
>=
iUµî
 ){

1163 
iG≠
 = 0;

1165 
iG≠
 = 
iUµî
 - 
iLowî
;

1167 if–
roundUp
 ){

1168 
iG≠
 = (iGap*2)/3;

1170 
iG≠
 = iGap/3;

1172 
aSèt
[0] = 
iLowî
 + 
iG≠
;

1173 
aSèt
[1] = 
pIdx
->
aAvgEq
[
iCﬁ
];

1177 
pRec
->
nFõld
 =ÇField;

1178  
i
;

1179 
	}
}

1193 
LogE°
 
	$whîeR™geAdju°
(
WhîeTîm
 *
pTîm
, 
LogE°
 
nNew
){

1194 
LogE°
 
nRë
 = 
nNew
;

1195 if–
pTîm
 ){

1196 if–
pTîm
->
åuthProb
<=0 ){

1197 
nRë
 +
pTîm
->
åuthProb
;

1198 }if–(
pTîm
->
wtFœgs
 & 
TERM_VNULL
)==0 ){

1199 
nRë
 -20; 
	`as£π
–20==
	`sqlôe3LogE°
(4) );

1202  
nRë
;

1203 
	}
}

1206 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1210 
	$sqlôe3IndexCﬁumnAfföôy
(
sqlôe3
 *
db
, 
Index
 *
pIdx
, 
iCﬁ
){

1211 
	`as£π
–
iCﬁ
>=0 && iCﬁ<
pIdx
->
nCﬁumn
 );

1212 if–!
pIdx
->
zCﬁAff
 ){

1213 if–
	`sqlôe3IndexAfföôySå
(
db
, 
pIdx
)==0 )  
SQLITE_AFF_BLOB
;

1215  
pIdx
->
zCﬁAff
[
iCﬁ
];

1216 
	}
}

1220 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1256 
	$whîeR™geSkùSˇnE°
(

1257 
P¨£
 *
pP¨£
,

1258 
WhîeTîm
 *
pLowî
,

1259 
WhîeTîm
 *
pUµî
,

1260 
WhîeLo›
 *
pLo›
,

1261 *
pbD⁄e


1263 
Index
 *
p
 = 
pLo›
->
u
.
båì
.
pIndex
;

1264 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1265 
sqlôe3
 *
db
 = 
pP¨£
->db;

1266 
nLowî
 = -1;

1267 
nUµî
 = 
p
->
nSam∂e
+1;

1268 
rc
 = 
SQLITE_OK
;

1269 
u8
 
aff
 = 
	`sqlôe3IndexCﬁumnAfföôy
(
db
, 
p
, 
nEq
);

1270 
CﬁlSeq
 *
pCﬁl
;

1272 
sqlôe3_vÆue
 *
p1
 = 0;

1273 
sqlôe3_vÆue
 *
p2
 = 0;

1274 
sqlôe3_vÆue
 *
pVÆ
 = 0;

1276 
pCﬁl
 = 
	`sqlôe3LoˇãCﬁlSeq
(
pP¨£
, 
p
->
azCﬁl
[
nEq
]);

1277 if–
pLowî
 ){

1278 
rc
 = 
	`sqlôe3Sèt4VÆueFromEx¥
(
pP¨£
, 
pLowî
->
pEx¥
->
pRight
, 
aff
, &
p1
);

1279 
nLowî
 = 0;

1281 if–
pUµî
 && 
rc
==
SQLITE_OK
 ){

1282 
rc
 = 
	`sqlôe3Sèt4VÆueFromEx¥
(
pP¨£
, 
pUµî
->
pEx¥
->
pRight
, 
aff
, &
p2
);

1283 
nUµî
 = 
p2
 ? 0 : 
p
->
nSam∂e
;

1286 if–
p1
 || 
p2
 ){

1287 
i
;

1288 
nDiff
;

1289 
i
=0; 
rc
==
SQLITE_OK
 && i<
p
->
nSam∂e
; i++){

1290 
rc
 = 
	`sqlôe3Sèt4Cﬁumn
(
db
, 
p
->
aSam∂e
[
i
].p,Ö->aSam∂e[i].
n
, 
nEq
, &
pVÆ
);

1291 if–
rc
==
SQLITE_OK
 && 
p1
 ){

1292 
ªs
 = 
	`sqlôe3MemCom∑ª
(
p1
, 
pVÆ
, 
pCﬁl
);

1293 if–
ªs
>=0 ) 
nLowî
++;

1295 if–
rc
==
SQLITE_OK
 && 
p2
 ){

1296 
ªs
 = 
	`sqlôe3MemCom∑ª
(
p2
, 
pVÆ
, 
pCﬁl
);

1297 if–
ªs
>=0 ) 
nUµî
++;

1300 
nDiff
 = (
nUµî
 - 
nLowî
);

1301 if–
nDiff
<=0 )ÇDiff = 1;

1308 if–
nDiff
!=1 || 
pUµî
==0 || 
pLowî
==0 ){

1309 
nAdju°
 = (
	`sqlôe3LogE°
(
p
->
nSam∂e
Ë- sqlôe3LogE°(
nDiff
));

1310 
pLo›
->
nOut
 -
nAdju°
;

1311 *
pbD⁄e
 = 1;

1312 
	`WHERETRACE
(0x10, ("range skip-scanÑegions: %u..%uádjust=%dÉst=%d\n",

1313 
nLowî
, 
nUµî
, 
nAdju°
*-1, 
pLo›
->
nOut
));

1317 
	`as£π
–*
pbD⁄e
==0 );

1320 
	`sqlôe3VÆueFªe
(
p1
);

1321 
	`sqlôe3VÆueFªe
(
p2
);

1322 
	`sqlôe3VÆueFªe
(
pVÆ
);

1324  
rc
;

1325 
	}
}

1368 
	$whîeR™geSˇnE°
(

1369 
P¨£
 *
pP¨£
,

1370 
WhîeLo›Buûdî
 *
pBuûdî
,

1371 
WhîeTîm
 *
pLowî
,

1372 
WhîeTîm
 *
pUµî
,

1373 
WhîeLo›
 *
pLo›


1375 
rc
 = 
SQLITE_OK
;

1376 
nOut
 = 
pLo›
->nOut;

1377 
LogE°
 
nNew
;

1379 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1380 
Index
 *
p
 = 
pLo›
->
u
.
båì
.
pIndex
;

1381 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1383 if–
p
->
nSam∂e
>0 && 
nEq
<p->
nSam∂eCﬁ
 ){

1384 if–
nEq
==
pBuûdî
->
nRecVÆid
 ){

1385 
U≈ackedRec‹d
 *
pRec
 = 
pBuûdî
->pRec;

1386 
tRow˙t
 
a
[2];

1387 
u8
 
aff
;

1408 
tRow˙t
 
iLowî
;

1409 
tRow˙t
 
iUµî
;

1410 
iLwrIdx
 = -2;

1411 
iU¥Idx
 = -1;

1413 if–
pRec
 ){

1414 
	`ã°ˇ£
–
pRec
->
nFõld
!=
pBuûdî
->
nRecVÆid
 );

1415 
pRec
->
nFõld
 = 
pBuûdî
->
nRecVÆid
;

1417 
aff
 = 
	`sqlôe3IndexCﬁumnAfföôy
(
pP¨£
->
db
, 
p
, 
nEq
);

1418 
	`as£π
–
nEq
!=
p
->
nKeyCﬁ
 || 
aff
==
SQLITE_AFF_INTEGER
 );

1420 if–
nEq
==0 ){

1421 
iLowî
 = 0;

1422 
iUµî
 = 
p
->
nRowE°0
;

1426 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1427 
iLowî
 = 
a
[0];

1428 
iUµî
 = 
a
[0] +á[1];

1431 
	`as£π
–
pLowî
==0 || (pLowî->
eO≥øt‹
 & (
WO_GT
|
WO_GE
))!=0 );

1432 
	`as£π
–
pUµî
==0 || (pUµî->
eO≥øt‹
 & (
WO_LT
|
WO_LE
))!=0 );

1433 
	`as£π
–
p
->
aS‹tOrdî
!=0 );

1434 if–
p
->
aS‹tOrdî
[
nEq
] ){

1436 
	`SWAP
(
WhîeTîm
*, 
pLowî
, 
pUµî
);

1440 if–
pLowî
 ){

1441 
bOk
;

1442 
Ex¥
 *
pEx¥
 = 
pLowî
->pEx¥->
pRight
;

1443 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 
aff
, 
nEq
, &
bOk
);

1444 if–
rc
==
SQLITE_OK
 && 
bOk
 ){

1445 
tRow˙t
 
iNew
;

1446 
iLwrIdx
 = 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1447 
iNew
 = 
a
[0] + ((
pLowî
->
eO≥øt‹
 & (
WO_GT
|
WO_LE
)) ?á[1] : 0);

1448 if–
iNew
>
iLowî
 ) iLower = iNew;

1449 
nOut
--;

1450 
pLowî
 = 0;

1455 if–
pUµî
 ){

1456 
bOk
;

1457 
Ex¥
 *
pEx¥
 = 
pUµî
->pEx¥->
pRight
;

1458 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 
aff
, 
nEq
, &
bOk
);

1459 if–
rc
==
SQLITE_OK
 && 
bOk
 ){

1460 
tRow˙t
 
iNew
;

1461 
iU¥Idx
 = 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 1, 
a
);

1462 
iNew
 = 
a
[0] + ((
pUµî
->
eO≥øt‹
 & (
WO_GT
|
WO_LE
)) ?á[1] : 0);

1463 if–
iNew
<
iUµî
 ) iUpper = iNew;

1464 
nOut
--;

1465 
pUµî
 = 0;

1469 
pBuûdî
->
pRec
 =ÖRec;

1470 if–
rc
==
SQLITE_OK
 ){

1471 if–
iUµî
>
iLowî
 ){

1472 
nNew
 = 
	`sqlôe3LogE°
(
iUµî
 - 
iLowî
);

1477 if–
iLwrIdx
==
iU¥Idx
 ) 
nNew
 -20; 
	`as£π
–20==
	`sqlôe3LogE°
(4) );

1479 
nNew
 = 10; 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

1481 if–
nNew
<
nOut
 ){

1482 
nOut
 = 
nNew
;

1484 
	`WHERETRACE
(0x10, ("STAT4Ñange scan: %u..%uÉst=%d\n",

1485 (
u32
)
iLowî
, (u32)
iUµî
, 
nOut
));

1488 
bD⁄e
 = 0;

1489 
rc
 = 
	`whîeR™geSkùSˇnE°
(
pP¨£
, 
pLowî
, 
pUµî
, 
pLo›
, &
bD⁄e
);

1490 if–
bD⁄e
 )  
rc
;

1494 
	`UNUSED_PARAMETER
(
pP¨£
);

1495 
	`UNUSED_PARAMETER
(
pBuûdî
);

1496 
	`as£π
–
pLowî
 || 
pUµî
 );

1498 
	`as£π
–
pUµî
==0 || (pUµî->
wtFœgs
 & 
TERM_VNULL
)==0 );

1499 
nNew
 = 
	`whîeR™geAdju°
(
pLowî
, 
nOut
);

1500 
nNew
 = 
	`whîeR™geAdju°
(
pUµî
,ÇNew);

1508 if–
pLowî
 &&ÖLowî->
åuthProb
>0 && 
pUµî
 &&ÖUpper->truthProb>0 ){

1509 
nNew
 -= 20;

1512 
nOut
 -(
pLowî
!=0Ë+ (
pUµî
!=0);

1513 if–
nNew
<10 )ÇNew = 10;

1514 if–
nNew
<
nOut
 )ÇOut =ÇNew;

1515 #i‡
	`deföed
(
WHERETRACE_ENABLED
)

1516 if–
pLo›
->
nOut
>nOut ){

1517 
	`WHERETRACE
(0x10,("Range scanÜowersÇOut from %dÅo %d\n",

1518 
pLo›
->
nOut
,ÇOut));

1521 
pLo›
->
nOut
 = (
LogE°
)nOut;

1522  
rc
;

1523 
	}
}

1525 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1543 
	$whîeEquÆSˇnE°
(

1544 
P¨£
 *
pP¨£
,

1545 
WhîeLo›Buûdî
 *
pBuûdî
,

1546 
Ex¥
 *
pEx¥
,

1547 
tRow˙t
 *
≤Row


1549 
Index
 *
p
 = 
pBuûdî
->
pNew
->
u
.
båì
.
pIndex
;

1550 
nEq
 = 
pBuûdî
->
pNew
->
u
.
båì
.nEq;

1551 
U≈ackedRec‹d
 *
pRec
 = 
pBuûdî
->pRec;

1552 
u8
 
aff
;

1553 
rc
;

1554 
tRow˙t
 
a
[2];

1555 
bOk
;

1557 
	`as£π
–
nEq
>=1 );

1558 
	`as£π
–
nEq
<=
p
->
nCﬁumn
 );

1559 
	`as£π
–
p
->
aSam∂e
!=0 );

1560 
	`as£π
–
p
->
nSam∂e
>0 );

1561 
	`as£π
–
pBuûdî
->
nRecVÆid
<
nEq
 );

1565 if–
pBuûdî
->
nRecVÆid
<(
nEq
-1) ){

1566  
SQLITE_NOTFOUND
;

1571 if–
nEq
>=
p
->
nCﬁumn
 ){

1572 *
≤Row
 = 1;

1573  
SQLITE_OK
;

1576 
aff
 = 
	`sqlôe3IndexCﬁumnAfföôy
(
pP¨£
->
db
, 
p
, 
nEq
-1);

1577 
rc
 = 
	`sqlôe3Sèt4ProbeSëVÆue
(
pP¨£
, 
p
, &
pRec
, 
pEx¥
, 
aff
, 
nEq
-1, &
bOk
);

1578 
pBuûdî
->
pRec
 =ÖRec;

1579 if–
rc
!=
SQLITE_OK
 ) Ñc;

1580 if–
bOk
==0 )  
SQLITE_NOTFOUND
;

1581 
pBuûdî
->
nRecVÆid
 = 
nEq
;

1583 
	`whîeKeySèts
(
pP¨£
, 
p
, 
pRec
, 0, 
a
);

1584 
	`WHERETRACE
(0x10,("equality scanÑegions %s(%d): %d\n",

1585 
p
->
zName
, 
nEq
-1, ()
a
[1]));

1586 *
≤Row
 = 
a
[1];

1588  
rc
;

1589 
	}
}

1592 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1609 
	$whîeInSˇnE°
(

1610 
P¨£
 *
pP¨£
,

1611 
WhîeLo›Buûdî
 *
pBuûdî
,

1612 
Ex¥Li°
 *
pLi°
,

1613 
tRow˙t
 *
≤Row


1615 
Index
 *
p
 = 
pBuûdî
->
pNew
->
u
.
båì
.
pIndex
;

1616 
i64
 
nRow0
 = 
	`sqlôe3LogE°ToI¡
(
p
->
aiRowLogE°
[0]);

1617 
nRecVÆid
 = 
pBuûdî
->nRecValid;

1618 
rc
 = 
SQLITE_OK
;

1619 
tRow˙t
 
nE°
;

1620 
tRow˙t
 
nRowE°
 = 0;

1621 
i
;

1623 
	`as£π
–
p
->
aSam∂e
!=0 );

1624 
i
=0; 
rc
==
SQLITE_OK
 && i<
pLi°
->
nEx¥
; i++){

1625 
nE°
 = 
nRow0
;

1626 
rc
 = 
	`whîeEquÆSˇnE°
(
pP¨£
, 
pBuûdî
, 
pLi°
->
a
[
i
].
pEx¥
, &
nE°
);

1627 
nRowE°
 +
nE°
;

1628 
pBuûdî
->
nRecVÆid
 =ÇRecValid;

1631 if–
rc
==
SQLITE_OK
 ){

1632 if–
nRowE°
 > 
nRow0
 )ÇRowEst =ÇRow0;

1633 *
≤Row
 = 
nRowE°
;

1634 
	`WHERETRACE
(0x10,("INÑowÉ°im©e:É°=%d\n", 
nRowE°
));

1636 
	`as£π
–
pBuûdî
->
nRecVÆid
==nRecValid );

1637  
rc
;

1638 
	}
}

1642 #ifde‡
WHERETRACE_ENABLED


1646 
	$whîeTîmPröt
(
WhîeTîm
 *
pTîm
, 
iTîm
){

1647 if–
pTîm
==0 ){

1648 
	`sqlôe3DebugPrötf
("TERM-%-3d NULL\n", 
iTîm
);

1650 
zTy≥
[4];

1651 
zLe·
[50];

1652 
	`mem˝y
(
zTy≥
, "...", 4);

1653 if–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 ) 
zTy≥
[0] = 'V';

1654 if–
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
 ) 
zTy≥
[1] = 'E';

1655 if–
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
ËË
zTy≥
[2] = 'L';

1656 if–
pTîm
->
eO≥øt‹
 & 
WO_SINGLE
 ){

1657 
	`sqlôe3_¢¥ötf
((
zLe·
),zLeft,"left={%d:%d}",

1658 
pTîm
->
À·Curs‹
,ÖTîm->
u
.
À·Cﬁumn
);

1659 }if–(
pTîm
->
eO≥øt‹
 & 
WO_OR
)!=0 &&ÖTîm->
u
.
pOrInfo
!=0 ){

1660 
	`sqlôe3_¢¥ötf
((
zLe·
),zLeft,"indexable=0x%lld",

1661 
pTîm
->
u
.
pOrInfo
->
ödexabÀ
);

1663 
	`sqlôe3_¢¥ötf
((
zLe·
),zLe·,"À·=%d", 
pTîm
->
À·Curs‹
);

1665 
	`sqlôe3DebugPrötf
(

1667 
iTîm
, 
pTîm
, 
zTy≥
, 
zLe·
,ÖTîm->
åuthProb
,

1668 
pTîm
->
eO≥øt‹
,ÖTîm->
wtFœgs
);

1669 
	`sqlôe3TªeVõwEx¥
(0, 
pTîm
->
pEx¥
, 0);

1671 
	}
}

1674 #ifde‡
WHERETRACE_ENABLED


1678 
	$sqlôe3WhîeCœu£Pröt
(
WhîeCœu£
 *
pWC
){

1679 
i
;

1680 
i
=0; i<
pWC
->
nTîm
; i++){

1681 
	`whîeTîmPröt
(&
pWC
->
a
[
i
], i);

1683 
	}
}

1686 #ifde‡
WHERETRACE_ENABLED


1690 
	$whîeLo›Pröt
(
WhîeLo›
 *
p
, 
WhîeCœu£
 *
pWC
){

1691 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

1692 
nb
 = 1+(
pWInfo
->
pTabLi°
->
nSrc
+3)/4;

1693 
SrcLi°_ôem
 *
pIãm
 = 
pWInfo
->
pTabLi°
->
a
 + 
p
->
iTab
;

1694 
TabÀ
 *
pTab
 = 
pIãm
->pTab;

1695 
Bômask
 
mAŒ
 = (((Bômask)1)<<(
nb
*4)) - 1;

1696 
	`sqlôe3DebugPrötf
("%c%2d.%0*Œx.%0*Œx", 
p
->
cId
,

1697 
p
->
iTab
, 
nb
,Ö->
maskSñf
,Çb,Ö->
¥îeq
 & 
mAŒ
);

1698 
	`sqlôe3DebugPrötf
(" %12s",

1699 
pIãm
->
zAlüs
 ?ÖIãm->zAlü†: 
pTab
->
zName
);

1700 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 ){

1701 c⁄° *
zName
;

1702 if–
p
->
u
.
båì
.
pIndex
 && (
zName
 =Ö->u.btree.pIndex->zName)!=0 ){

1703 if–
	`°∫cmp
(
zName
, "sqlite_autoindex_", 17)==0 ){

1704 
i
 = 
	`sqlôe3SåÀn30
(
zName
) - 1;

1705  
zName
[
i
]!='_' ) i--;

1706 
zName
 +
i
;

1708 
	`sqlôe3DebugPrötf
(".%-16†%2d", 
zName
, 
p
->
u
.
båì
.
nEq
);

1710 
	`sqlôe3DebugPrötf
("%20s","");

1713 *
z
;

1714 if–
p
->
u
.
vèb
.
idxSå
 ){

1715 
z
 = 
	`sqlôe3_m¥ötf
("(%d,\"%s\",%x)",

1716 
p
->
u
.
vèb
.
idxNum
,Ö->u.vèb.
idxSå
,Ö->u.vèb.
omôMask
);

1718 
z
 = 
	`sqlôe3_m¥ötf
("(%d,%x)", 
p
->
u
.
vèb
.
idxNum
,Ö->u.vèb.
omôMask
);

1720 
	`sqlôe3DebugPrötf
(" %-19s", 
z
);

1721 
	`sqlôe3_‰ì
(
z
);

1723 if–
p
->
wsFœgs
 & 
WHERE_SKIPSCAN
 ){

1724 
	`sqlôe3DebugPrötf
(" f %05x %d-%d", 
p
->
wsFœgs
,Ö->
nLTîm
,p->
nSkù
);

1726 
	`sqlôe3DebugPrötf
(" f %05x N %d", 
p
->
wsFœgs
,Ö->
nLTîm
);

1728 
	`sqlôe3DebugPrötf
(" co° %d,%d,%d\n", 
p
->
rSëup
,Ö->
rRun
,Ö->
nOut
);

1729 if–
p
->
nLTîm
 && (
sqlôe3WhîeTø˚
 & 0x100)!=0 ){

1730 
i
;

1731 
i
=0; i<
p
->
nLTîm
; i++){

1732 
	`whîeTîmPröt
(
p
->
aLTîm
[
i
], i);

1735 
	}
}

1742 
	$whîeLo›Inô
(
WhîeLo›
 *
p
){

1743 
p
->
aLTîm
 =Ö->
aLTîmS∑˚
;

1744 
p
->
nLTîm
 = 0;

1745 
p
->
nLSlŸ
 = 
	`AºaySize
’->
aLTîmS∑˚
);

1746 
p
->
wsFœgs
 = 0;

1747 
	}
}

1752 
	$whîeLo›CÀ¨Uni⁄
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1753 if–
p
->
wsFœgs
 & (
WHERE_VIRTUALTABLE
|
WHERE_AUTO_INDEX
) ){

1754 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 &&Ö->
u
.
vèb
.
√edFªe
 ){

1755 
	`sqlôe3_‰ì
(
p
->
u
.
vèb
.
idxSå
);

1756 
p
->
u
.
vèb
.
√edFªe
 = 0;

1757 
p
->
u
.
vèb
.
idxSå
 = 0;

1758 }if–(
p
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 &&Ö->
u
.
båì
.
pIndex
!=0 ){

1759 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
båì
.
pIndex
->
zCﬁAff
);

1760 
	`sqlôe3DbFªe
(
db
, 
p
->
u
.
båì
.
pIndex
);

1761 
p
->
u
.
båì
.
pIndex
 = 0;

1764 
	}
}

1769 
	$whîeLo›CÀ¨
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1770 if–
p
->
aLTîm
!ı->
aLTîmS∑˚
 ) 
	`sqlôe3DbFªe
(
db
,Ö->aLTerm);

1771 
	`whîeLo›CÀ¨Uni⁄
(
db
, 
p
);

1772 
	`whîeLo›Inô
(
p
);

1773 
	}
}

1778 
	$whîeLo›Resize
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
, 
n
){

1779 
WhîeTîm
 **
∑New
;

1780 if–
p
->
nLSlŸ
>=
n
 )  
SQLITE_OK
;

1781 
n
 = (n+7)&~7;

1782 
∑New
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
p
->
aLTîm
[0])*
n
);

1783 if–
∑New
==0 )  
SQLITE_NOMEM_BKPT
;

1784 
	`mem˝y
(
∑New
, 
p
->
aLTîm
, ’->aLTîm[0])*p->
nLSlŸ
);

1785 if–
p
->
aLTîm
!ı->
aLTîmS∑˚
 ) 
	`sqlôe3DbFªe
(
db
,Ö->aLTerm);

1786 
p
->
aLTîm
 = 
∑New
;

1787 
p
->
nLSlŸ
 = 
n
;

1788  
SQLITE_OK
;

1789 
	}
}

1794 
	$whîeLo›X„r
(
sqlôe3
 *
db
, 
WhîeLo›
 *
pTo
, WhîeLo› *
pFrom
){

1795 
	`whîeLo›CÀ¨Uni⁄
(
db
, 
pTo
);

1796 if–
	`whîeLo›Resize
(
db
, 
pTo
, 
pFrom
->
nLTîm
) ){

1797 
	`mem£t
(&
pTo
->
u
, 0, (pTo->u));

1798  
SQLITE_NOMEM_BKPT
;

1800 
	`mem˝y
(
pTo
, 
pFrom
, 
WHERE_LOOP_XFER_SZ
);

1801 
	`mem˝y
(
pTo
->
aLTîm
, 
pFrom
->aLTîm,ÖTo->
nLTîm
*(pTo->aLTerm[0]));

1802 if–
pFrom
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
 ){

1803 
pFrom
->
u
.
vèb
.
√edFªe
 = 0;

1804 }if–(
pFrom
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 ){

1805 
pFrom
->
u
.
båì
.
pIndex
 = 0;

1807  
SQLITE_OK
;

1808 
	}
}

1813 
	$whîeLo›Dñëe
(
sqlôe3
 *
db
, 
WhîeLo›
 *
p
){

1814 
	`whîeLo›CÀ¨
(
db
, 
p
);

1815 
	`sqlôe3DbFªe
(
db
, 
p
);

1816 
	}
}

1821 
	$whîeInfoFªe
(
sqlôe3
 *
db
, 
WhîeInfo
 *
pWInfo
){

1822 if–
	`ALWAYS
(
pWInfo
) ){

1823 
i
;

1824 
i
=0; i<
pWInfo
->
nLevñ
; i++){

1825 
WhîeLevñ
 *
pLevñ
 = &
pWInfo
->
a
[
i
];

1826 if–
pLevñ
->
pWLo›
 && (pLevñ->pWLo›->
wsFœgs
 & 
WHERE_IN_ABLE
) ){

1827 
	`sqlôe3DbFªe
(
db
, 
pLevñ
->
u
.
ö
.
aInLo›
);

1830 
	`sqlôe3WhîeCœu£CÀ¨
(&
pWInfo
->
sWC
);

1831  
pWInfo
->
pLo›s
 ){

1832 
WhîeLo›
 *
p
 = 
pWInfo
->
pLo›s
;

1833 
pWInfo
->
pLo›s
 = 
p
->
pNextLo›
;

1834 
	`whîeLo›Dñëe
(
db
, 
p
);

1836 
	`sqlôe3DbFªe
(
db
, 
pWInfo
);

1838 
	}
}

1857 
	$whîeLo›Chó≥rPr›îSub£t
(

1858 c⁄° 
WhîeLo›
 *
pX
,

1859 c⁄° 
WhîeLo›
 *
pY


1861 
i
, 
j
;

1862 if–
pX
->
nLTîm
-pX->
nSkù
 >
pY
->nLTerm-pY->nSkip ){

1865 if–
pY
->
nSkù
 > 
pX
->nSkip )  0;

1866 if–
pX
->
rRun
 >
pY
->rRun ){

1867 if–
pX
->
rRun
 > 
pY
->rRun )  0;

1868 if–
pX
->
nOut
 > 
pY
->nOut )  0;

1870 
i
=
pX
->
nLTîm
-1; i>=0; i--){

1871 if–
pX
->
aLTîm
[
i
]==0 ) ;

1872 
j
=
pY
->
nLTîm
-1; j>=0; j--){

1873 if–
pY
->
aLTîm
[
j
]==
pX
->aLTîm[
i
] ) ;

1875 if–
j
<0 )  0;

1878 
	}
}

1894 
	$whîeLo›Adju°Co°
(c⁄° 
WhîeLo›
 *
p
, WhîeLo› *
pTem∂©e
){

1895 if–(
pTem∂©e
->
wsFœgs
 & 
WHERE_INDEXED
)==0 ) ;

1896 ; 
p
;Öı->
pNextLo›
){

1897 if–
p
->
iTab
!=
pTem∂©e
->iTab ) ;

1898 if–(
p
->
wsFœgs
 & 
WHERE_INDEXED
)==0 ) ;

1899 if–
	`whîeLo›Chó≥rPr›îSub£t
(
p
, 
pTem∂©e
) ){

1902 
	`WHERETRACE
(0x80,("subset costádjustment %d,%dÅo %d,%d\n",

1903 
pTem∂©e
->
rRun
,ÖTem∂©e->
nOut
, 
p
->rRun,Ö->nOut-1));

1904 
pTem∂©e
->
rRun
 = 
p
->rRun;

1905 
pTem∂©e
->
nOut
 = 
p
->nOut - 1;

1906 }if–
	`whîeLo›Chó≥rPr›îSub£t
(
pTem∂©e
, 
p
) ){

1909 
	`WHERETRACE
(0x80,("subset costádjustment %d,%dÅo %d,%d\n",

1910 
pTem∂©e
->
rRun
,ÖTem∂©e->
nOut
, 
p
->rRun,Ö->nOut+1));

1911 
pTem∂©e
->
rRun
 = 
p
->rRun;

1912 
pTem∂©e
->
nOut
 = 
p
->nOut + 1;

1915 
	}
}

1930 
WhîeLo›
 **
	$whîeLo›FödLes£r
(

1931 
WhîeLo›
 **
µPªv
,

1932 c⁄° 
WhîeLo›
 *
pTem∂©e


1934 
WhîeLo›
 *
p
;

1935 
p
=(*
µPªv
);Ö;ÖpPªv=&p->
pNextLo›
,Ö=*ppPrev){

1936 if–
p
->
iTab
!=
pTem∂©e
->iTab ||Ö->
iS‹tIdx
!=pTemplate->iSortIdx ){

1945 
	`as£π
–
p
->
rSëup
==0 || 
pTem∂©e
->rSetup==0

1946 || 
p
->
rSëup
==
pTem∂©e
->rSetup );

1951 
	`as£π
–
p
->
rSëup
>=
pTem∂©e
->rSetup );

1956 if–(
p
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0

1957 && (
pTem∂©e
->
nSkù
)==0

1958 && (
pTem∂©e
->
wsFœgs
 & 
WHERE_INDEXED
)!=0

1959 && (
pTem∂©e
->
wsFœgs
 & 
WHERE_COLUMN_EQ
)!=0

1960 && (
p
->
¥îeq
 & 
pTem∂©e
->prereq)==pTemplate->prereq

1970 if–(
p
->
¥îeq
 & 
pTem∂©e
->prereq)==p->prereq

1971 && 
p
->
rSëup
<=
pTem∂©e
->rSetup

1972 && 
p
->
rRun
<=
pTem∂©e
->rRun

1973 && 
p
->
nOut
<=
pTem∂©e
->nOut

1983 if–(
p
->
¥îeq
 & 
pTem∂©e
->prereq)==pTemplate->prereq

1984 && 
p
->
rRun
>=
pTem∂©e
->rRun

1985 && 
p
->
nOut
>=
pTem∂©e
->nOut

1987 
	`as£π
–
p
->
rSëup
>=
pTem∂©e
->rSetup );

1991  
µPªv
;

1992 
	}
}

2018 
	$whîeLo›In£π
(
WhîeLo›Buûdî
 *
pBuûdî
, 
WhîeLo›
 *
pTem∂©e
){

2019 
WhîeLo›
 **
µPªv
, *
p
;

2020 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

2021 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

2022 
rc
;

2027 if–
pBuûdî
->
pOrSë
!=0 ){

2028 if–
pTem∂©e
->
nLTîm
 ){

2029 #i‡
WHERETRACE_ENABLED


2030 
u16
 
n
 = 
pBuûdî
->
pOrSë
->n;

2031 
x
 =

2033 
	`whîeOrIn£π
(
pBuûdî
->
pOrSë
, 
pTem∂©e
->
¥îeq
,ÖTem∂©e->
rRun
,

2034 
pTem∂©e
->
nOut
);

2035 #i‡
WHERETRACE_ENABLED


2036 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2037 
	`sqlôe3DebugPrötf
(
x
?" or-%d: ":" or-X: ", 
n
);

2038 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2042  
SQLITE_OK
;

2047 
	`whîeLo›Adju°Co°
(
pWInfo
->
pLo›s
, 
pTem∂©e
);

2048 
µPªv
 = 
	`whîeLo›FödLes£r
(&
pWInfo
->
pLo›s
, 
pTem∂©e
);

2050 if–
µPªv
==0 ){

2053 #i‡
WHERETRACE_ENABLED


2054 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2055 
	`sqlôe3DebugPrötf
(" skip: ");

2056 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2059  
SQLITE_OK
;

2061 
p
 = *
µPªv
;

2068 #i‡
WHERETRACE_ENABLED


2069 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2070 if–
p
!=0 ){

2071 
	`sqlôe3DebugPrötf
("replace: ");

2072 
	`whîeLo›Pröt
(
p
, 
pBuûdî
->
pWC
);

2074 
	`sqlôe3DebugPrötf
("ádd: ");

2075 
	`whîeLo›Pröt
(
pTem∂©e
, 
pBuûdî
->
pWC
);

2078 if–
p
==0 ){

2080 *
µPªv
 = 
p
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (
WhîeLo›
));

2081 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

2082 
	`whîeLo›Inô
(
p
);

2083 
p
->
pNextLo›
 = 0;

2088 
WhîeLo›
 **
µTaû
 = &
p
->
pNextLo›
;

2089 
WhîeLo›
 *
pToDñ
;

2090  *
µTaû
 ){

2091 
µTaû
 = 
	`whîeLo›FödLes£r
’pTaû, 
pTem∂©e
);

2092 if–
µTaû
==0 ) ;

2093 
pToDñ
 = *
µTaû
;

2094 if–
pToDñ
==0 ) ;

2095 *
µTaû
 = 
pToDñ
->
pNextLo›
;

2096 #i‡
WHERETRACE_ENABLED


2097 if–
sqlôe3WhîeTø˚
 & 0x8 ){

2098 
	`sqlôe3DebugPrötf
(" delete: ");

2099 
	`whîeLo›Pröt
(
pToDñ
, 
pBuûdî
->
pWC
);

2102 
	`whîeLo›Dñëe
(
db
, 
pToDñ
);

2105 
rc
 = 
	`whîeLo›X„r
(
db
, 
p
, 
pTem∂©e
);

2106 if–(
p
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 ){

2107 
Index
 *
pIndex
 = 
p
->
u
.
båì
.pIndex;

2108 if–
pIndex
 &&ÖIndex->
äum
==0 ){

2109 
p
->
u
.
båì
.
pIndex
 = 0;

2112  
rc
;

2113 
	}
}

2144 
	$whîeLo›OuçutAdju°
(

2145 
WhîeCœu£
 *
pWC
,

2146 
WhîeLo›
 *
pLo›
,

2147 
LogE°
 
nRow


2149 
WhîeTîm
 *
pTîm
, *
pX
;

2150 
Bômask
 
nŸAŒowed
 = ~(
pLo›
->
¥îeq
|pLo›->
maskSñf
);

2151 
i
, 
j
, 
k
;

2152 
LogE°
 
iRedu˚
 = 0;

2154 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)==0 );

2155 
i
=
pWC
->
nTîm
, 
pTîm
ıWC->
a
; i>0; i--,ÖTerm++){

2156 if–(
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
)!=0 ) ;

2157 if–(
pTîm
->
¥îeqAŒ
 & 
pLo›
->
maskSñf
)==0 ) ;

2158 if–(
pTîm
->
¥îeqAŒ
 & 
nŸAŒowed
)!=0 ) ;

2159 
j
=
pLo›
->
nLTîm
-1; j>=0; j--){

2160 
pX
 = 
pLo›
->
aLTîm
[
j
];

2161 if–
pX
==0 ) ;

2162 if–
pX
==
pTîm
 ) ;

2163 if–
pX
->
iP¨ít
>=0 && (&
pWC
->
a
[pX->iP¨ít])==
pTîm
 ) ;

2165 if–
j
<0 ){

2166 if–
pTîm
->
åuthProb
<=0 ){

2169 
pLo›
->
nOut
 +
pTîm
->
åuthProb
;

2173 
pLo›
->
nOut
--;

2174 if–
pTîm
->
eO≥øt‹
&(
WO_EQ
|
WO_IS
) ){

2175 
Ex¥
 *
pRight
 = 
pTîm
->
pEx¥
->pRight;

2176 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

2177 if–
	`sqlôe3Ex¥IsI¡egî
(
pRight
, &
k
) && k>=(-1) && k<=1 ){

2178 
k
 = 10;

2180 
k
 = 20;

2182 if–
iRedu˚
<
k
 ) iReduce = k;

2187 if–
pLo›
->
nOut
 > 
nRow
-
iRedu˚
 )ÖLoop->nOut =ÇRow - iReduce;

2188 
	}
}

2194 #ifde‡
SQLITE_ENABLE_COSTMULT


2195 
	#AµlyCo°Mu…ùlõr
(
C
,
T
ËC +
	)
T

2197 
	#AµlyCo°Mu…ùlõr
(
C
,
T
)

	)

2212 
	$whîeLo›AddBåìIndex
(

2213 
WhîeLo›Buûdî
 *
pBuûdî
,

2214 
SrcLi°_ôem
 *
pSrc
,

2215 
Index
 *
pProbe
,

2216 
LogE°
 
nInMul


2218 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

2219 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

2220 
sqlôe3
 *
db
 = 
pP¨£
->db;

2221 
WhîeLo›
 *
pNew
;

2222 
WhîeTîm
 *
pTîm
;

2223 
›Mask
;

2224 
WhîeSˇn
 
sˇn
;

2225 
Bômask
 
ßved_¥îeq
;

2226 
u16
 
ßved_nLTîm
;

2227 
u16
 
ßved_nEq
;

2228 
u16
 
ßved_nSkù
;

2229 
u32
 
ßved_wsFœgs
;

2230 
LogE°
 
ßved_nOut
;

2231 
rc
 = 
SQLITE_OK
;

2232 
LogE°
 
rSize
;

2233 
LogE°
 
rLogSize
;

2234 
WhîeTîm
 *
pT›
 = 0, *
pBtm
 = 0;

2236 
pNew
 = 
pBuûdî
->pNew;

2237 if–
db
->
mÆlocFaûed
 )  
SQLITE_NOMEM_BKPT
;

2239 
	`as£π
–(
pNew
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 );

2240 
	`as£π
–(
pNew
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)==0 );

2241 if–
pNew
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ){

2242 
›Mask
 = 
WO_LT
|
WO_LE
;

2244 
›Mask
 = 
WO_EQ
|
WO_IN
|
WO_GT
|
WO_GE
|
WO_LT
|
WO_LE
|
WO_ISNULL
|
WO_IS
;

2246 if–
pProbe
->
bUn‹dîed
 ) 
›Mask
 &~(
WO_GT
|
WO_GE
|
WO_LT
|
WO_LE
);

2248 
	`as£π
–
pNew
->
u
.
båì
.
nEq
<
pProbe
->
nCﬁumn
 );

2250 
ßved_nEq
 = 
pNew
->
u
.
båì
.
nEq
;

2251 
ßved_nSkù
 = 
pNew
->
nSkù
;

2252 
ßved_nLTîm
 = 
pNew
->
nLTîm
;

2253 
ßved_wsFœgs
 = 
pNew
->
wsFœgs
;

2254 
ßved_¥îeq
 = 
pNew
->
¥îeq
;

2255 
ßved_nOut
 = 
pNew
->
nOut
;

2256 
pTîm
 = 
	`whîeSˇnInô
(&
sˇn
, 
pBuûdî
->
pWC
, 
pSrc
->
iCurs‹
, 
ßved_nEq
,

2257 
›Mask
, 
pProbe
);

2258 
pNew
->
rSëup
 = 0;

2259 
rSize
 = 
pProbe
->
aiRowLogE°
[0];

2260 
rLogSize
 = 
	`e°Log
(
rSize
);

2261 ; 
rc
==
SQLITE_OK
 && 
pTîm
!=0;ÖTîm = 
	`whîeSˇnNext
(&
sˇn
)){

2262 
u16
 
eOp
 = 
pTîm
->
eO≥øt‹
;

2263 
LogE°
 
rCo°Idx
;

2264 
LogE°
 
nOutU«dju°ed
;

2265 
nIn
 = 0;

2266 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2267 
nRecVÆid
 = 
pBuûdî
->nRecValid;

2269 if–(
eOp
==
WO_ISNULL
 || (
pTîm
->
wtFœgs
&
TERM_VNULL
)!=0)

2270 && 
	`ödexCﬁumnNŸNuŒ
(
pProbe
, 
ßved_nEq
)

2274 if–
pTîm
->
¥îeqRight
 & 
pNew
->
maskSñf
 ) ;

2278 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 &&ÖTîm->
eO≥øt‹
==
WO_LT
 ) ;

2283 if–(
pSrc
->
fg
.
joöty≥
 & 
JT_LEFT
)!=0

2284 && !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
)

2285 && (
eOp
 & (
WO_IS
|
WO_ISNULL
))!=0

2287 
	`ã°ˇ£
–
eOp
 & 
WO_IS
 );

2288 
	`ã°ˇ£
–
eOp
 & 
WO_ISNULL
 );

2292 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2293 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2294 
pNew
->
nLTîm
 = 
ßved_nLTîm
;

2295 if–
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1) ) ;

2296 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 
pTîm
;

2297 
pNew
->
¥îeq
 = (
ßved_¥îeq
 | 
pTîm
->
¥îeqRight
Ë& ~pNew->
maskSñf
;

2299 
	`as£π
–
nInMul
==0

2300 || (
pNew
->
wsFœgs
 & 
WHERE_COLUMN_NULL
)!=0

2301 || (
pNew
->
wsFœgs
 & 
WHERE_COLUMN_IN
)!=0

2302 || (
pNew
->
wsFœgs
 & 
WHERE_SKIPSCAN
)!=0

2305 if–
eOp
 & 
WO_IN
 ){

2306 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2307 
pNew
->
wsFœgs
 |
WHERE_COLUMN_IN
;

2308 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

2310 
nIn
 = 46; 
	`as£π
–46==
	`sqlôe3LogE°
(25) );

2311 }if–
	`ALWAYS
(
pEx¥
->
x
.
pLi°
 &&ÖEx¥->x.pLi°->
nEx¥
) ){

2313 
nIn
 = 
	`sqlôe3LogE°
(
pEx¥
->
x
.
pLi°
->
nEx¥
);

2315 
	`as£π
–
nIn
>0 );

2318 }if–
eOp
 & (
WO_EQ
|
WO_IS
) ){

2319 
iCﬁ
 = 
pProbe
->
aiCﬁumn
[
ßved_nEq
];

2320 
pNew
->
wsFœgs
 |
WHERE_COLUMN_EQ
;

2321 
	`as£π
–
ßved_nEq
==
pNew
->
u
.
båì
.
nEq
 );

2322 if–
iCﬁ
==
XN_ROWID


2323 || (
iCﬁ
>0 && 
nInMul
==0 && 
ßved_nEq
==
pProbe
->
nKeyCﬁ
-1)

2325 if–
iCﬁ
>=0 && 
pProbe
->
uniqNŸNuŒ
==0 ){

2326 
pNew
->
wsFœgs
 |
WHERE_UNQ_WANTED
;

2328 
pNew
->
wsFœgs
 |
WHERE_ONEROW
;

2331 }if–
eOp
 & 
WO_ISNULL
 ){

2332 
pNew
->
wsFœgs
 |
WHERE_COLUMN_NULL
;

2333 }if–
eOp
 & (
WO_GT
|
WO_GE
) ){

2334 
	`ã°ˇ£
–
eOp
 & 
WO_GT
 );

2335 
	`ã°ˇ£
–
eOp
 & 
WO_GE
 );

2336 
pNew
->
wsFœgs
 |
WHERE_COLUMN_RANGE
|
WHERE_BTM_LIMIT
;

2337 
pBtm
 = 
pTîm
;

2338 
pT›
 = 0;

2339 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 ){

2342 
pT›
 = &
pTîm
[1];

2343 
	`as£π
–(
pT›
-(
pTîm
->
pWC
->
a
))<pTîm->pWC->
nTîm
 );

2344 
	`as£π
–
pT›
->
wtFœgs
 & 
TERM_LIKEOPT
 );

2345 
	`as£π
–
pT›
->
eO≥øt‹
==
WO_LT
 );

2346 if–
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1) ) ;

2347 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 
pT›
;

2348 
pNew
->
wsFœgs
 |
WHERE_TOP_LIMIT
;

2351 
	`as£π
–
eOp
 & (
WO_LT
|
WO_LE
) );

2352 
	`ã°ˇ£
–
eOp
 & 
WO_LT
 );

2353 
	`ã°ˇ£
–
eOp
 & 
WO_LE
 );

2354 
pNew
->
wsFœgs
 |
WHERE_COLUMN_RANGE
|
WHERE_TOP_LIMIT
;

2355 
pT›
 = 
pTîm
;

2356 
pBtm
 = (
pNew
->
wsFœgs
 & 
WHERE_BTM_LIMIT
)!=0 ?

2357 
pNew
->
aLTîm
[pNew->
nLTîm
-2] : 0;

2365 
	`as£π
–
pNew
->
nOut
==
ßved_nOut
 );

2366 if–
pNew
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
 ){

2369 
	`whîeR™geSˇnE°
(
pP¨£
, 
pBuûdî
, 
pBtm
, 
pT›
, 
pNew
);

2371 
nEq
 = ++
pNew
->
u
.
båì
.nEq;

2372 
	`as£π
–
eOp
 & (
WO_ISNULL
|
WO_EQ
|
WO_IN
|
WO_IS
) );

2374 
	`as£π
–
pNew
->
nOut
==
ßved_nOut
 );

2375 if–
pTîm
->
åuthProb
<=0 && 
pProbe
->
aiCﬁumn
[
ßved_nEq
]>=0 ){

2376 
	`as£π
–(
eOp
 & 
WO_IN
Ë|| 
nIn
==0 );

2377 
	`ã°ˇ£
–
eOp
 & 
WO_IN
 );

2378 
pNew
->
nOut
 +
pTîm
->
åuthProb
;

2379 
pNew
->
nOut
 -
nIn
;

2381 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2382 
tRow˙t
 
nOut
 = 0;

2383 if–
nInMul
==0

2384 && 
pProbe
->
nSam∂e


2385 && 
pNew
->
u
.
båì
.
nEq
<=
pProbe
->
nSam∂eCﬁ


2386 && ((
eOp
 & 
WO_IN
)==0 || !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_xIsSñe˘
))

2388 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2389 if–(
eOp
 & (
WO_EQ
|
WO_ISNULL
|
WO_IS
))!=0 ){

2390 
	`ã°ˇ£
–
eOp
 & 
WO_EQ
 );

2391 
	`ã°ˇ£
–
eOp
 & 
WO_IS
 );

2392 
	`ã°ˇ£
–
eOp
 & 
WO_ISNULL
 );

2393 
rc
 = 
	`whîeEquÆSˇnE°
(
pP¨£
, 
pBuûdî
, 
pEx¥
->
pRight
, &
nOut
);

2395 
rc
 = 
	`whîeInSˇnE°
(
pP¨£
, 
pBuûdî
, 
pEx¥
->
x
.
pLi°
, &
nOut
);

2397 if–
rc
==
SQLITE_NOTFOUND
 )Ñ¯
SQLITE_OK
;

2398 if–
rc
!=
SQLITE_OK
 ) ;

2399 if–
nOut
 ){

2400 
pNew
->
nOut
 = 
	`sqlôe3LogE°
(nOut);

2401 if–
pNew
->
nOut
>
ßved_nOut
 )ÖNew->nOut = saved_nOut;

2402 
pNew
->
nOut
 -
nIn
;

2405 if–
nOut
==0 )

2408 
pNew
->
nOut
 +(
pProbe
->
aiRowLogE°
[
nEq
] -ÖProbe->aiRowLogEst[nEq-1]);

2409 if–
eOp
 & 
WO_ISNULL
 ){

2413 
pNew
->
nOut
 += 10;

2423 
rCo°Idx
 = 
pNew
->
nOut
 + 1 + (15*
pProbe
->
szIdxRow
)/
pSrc
->
pTab
->
szTabRow
;

2424 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
(
rLogSize
, 
rCo°Idx
);

2425 if–(
pNew
->
wsFœgs
 & (
WHERE_IDX_ONLY
|
WHERE_IPK
))==0 ){

2426 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
’New->rRun,ÖNew->
nOut
 + 16);

2428 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pProbe
->
pTabÀ
->
co°Mu…
);

2430 
nOutU«dju°ed
 = 
pNew
->
nOut
;

2431 
pNew
->
rRun
 +
nInMul
 + 
nIn
;

2432 
pNew
->
nOut
 +
nInMul
 + 
nIn
;

2433 
	`whîeLo›OuçutAdju°
(
pBuûdî
->
pWC
, 
pNew
, 
rSize
);

2434 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2436 if–
pNew
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
 ){

2437 
pNew
->
nOut
 = 
ßved_nOut
;

2439 
pNew
->
nOut
 = 
nOutU«dju°ed
;

2442 if–(
pNew
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)==0

2443 && 
pNew
->
u
.
båì
.
nEq
<
pProbe
->
nCﬁumn


2445 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 
nInMul
+
nIn
);

2447 
pNew
->
nOut
 = 
ßved_nOut
;

2448 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2449 
pBuûdî
->
nRecVÆid
 =ÇRecValid;

2452 
pNew
->
¥îeq
 = 
ßved_¥îeq
;

2453 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2454 
pNew
->
nSkù
 = 
ßved_nSkù
;

2455 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2456 
pNew
->
nOut
 = 
ßved_nOut
;

2457 
pNew
->
nLTîm
 = 
ßved_nLTîm
;

2469 
	`as£π
–42==
	`sqlôe3LogE°
(18) );

2470 if–
ßved_nEq
==
ßved_nSkù


2471 && 
ßved_nEq
+1<
pProbe
->
nKeyCﬁ


2472 && 
pProbe
->
noSkùSˇn
==0

2473 && 
pProbe
->
aiRowLogE°
[
ßved_nEq
+1]>=42

2474 && (
rc
 = 
	`whîeLo›Resize
(
db
, 
pNew
,ÖNew->
nLTîm
+1))==
SQLITE_OK


2476 
LogE°
 
nIãr
;

2477 
pNew
->
u
.
båì
.
nEq
++;

2478 
pNew
->
nSkù
++;

2479 
pNew
->
aLTîm
[pNew->
nLTîm
++] = 0;

2480 
pNew
->
wsFœgs
 |
WHERE_SKIPSCAN
;

2481 
nIãr
 = 
pProbe
->
aiRowLogE°
[
ßved_nEq
] -ÖProbe->aiRowLogEst[saved_nEq+1];

2482 
pNew
->
nOut
 -
nIãr
;

2485 
nIãr
 += 5;

2486 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 
nIãr
 + 
nInMul
);

2487 
pNew
->
nOut
 = 
ßved_nOut
;

2488 
pNew
->
u
.
båì
.
nEq
 = 
ßved_nEq
;

2489 
pNew
->
nSkù
 = 
ßved_nSkù
;

2490 
pNew
->
wsFœgs
 = 
ßved_wsFœgs
;

2493  
rc
;

2494 
	}
}

2504 
	$ödexMightHñpWôhOrdîBy
(

2505 
WhîeLo›Buûdî
 *
pBuûdî
,

2506 
Index
 *
pIndex
,

2507 
iCurs‹


2509 
Ex¥Li°
 *
pOB
;

2510 
Ex¥Li°
 *
aCﬁEx¥
;

2511 
ii
, 
jj
;

2513 if–
pIndex
->
bUn‹dîed
 )  0;

2514 if–(
pOB
 = 
pBuûdî
->
pWInfo
->
pOrdîBy
)==0 )  0;

2515 
ii
=0; ii<
pOB
->
nEx¥
; ii++){

2516 
Ex¥
 *
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOB
->
a
[
ii
].pExpr);

2517 if–
pEx¥
->
›
==
TK_COLUMN
 &&ÖEx¥->
iTabÀ
==
iCurs‹
 ){

2518 if–
pEx¥
->
iCﬁumn
<0 )  1;

2519 
jj
=0; jj<
pIndex
->
nKeyCﬁ
; jj++){

2520 if–
pEx¥
->
iCﬁumn
==
pIndex
->
aiCﬁumn
[
jj
] )  1;

2522 }if–(
aCﬁEx¥
 = 
pIndex
->aColExpr)!=0 ){

2523 
jj
=0; jj<
pIndex
->
nKeyCﬁ
; jj++){

2524 if–
pIndex
->
aiCﬁumn
[
jj
]!=
XN_EXPR
 ) ;

2525 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥
,
aCﬁEx¥
->
a
[
jj
].pEx¥,
iCurs‹
)==0 ){

2532 
	}
}

2538 
Bômask
 
	$cﬁumnsInIndex
(
Index
 *
pIdx
){

2539 
Bômask
 
m
 = 0;

2540 
j
;

2541 
j
=
pIdx
->
nCﬁumn
-1; j>=0; j--){

2542 
x
 = 
pIdx
->
aiCﬁumn
[
j
];

2543 if–
x
>=0 ){

2544 
	`ã°ˇ£
–
x
==
BMS
-1 );

2545 
	`ã°ˇ£
–
x
==
BMS
-2 );

2546 if–
x
<
BMS
-1 ) 
m
 |
	`MASKBIT
(x);

2549  
m
;

2550 
	}
}

2555 
	$whîeUßbÀP¨tülIndex
(
iTab
, 
WhîeCœu£
 *
pWC
, 
Ex¥
 *
pWhîe
){

2556 
i
;

2557 
WhîeTîm
 *
pTîm
;

2558  
pWhîe
->
›
==
TK_AND
 ){

2559 if–!
	`whîeUßbÀP¨tülIndex
(
iTab
,
pWC
,
pWhîe
->
pLe·
) )  0;

2560 
pWhîe
 =ÖWhîe->
pRight
;

2562 
i
=0, 
pTîm
=
pWC
->
a
; i<pWC->
nTîm
; i++,ÖTerm++){

2563 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

2564 if–
	`sqlôe3Ex¥Im∂õsEx¥
(
pEx¥
, 
pWhîe
, 
iTab
)

2565 && (!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
Ë||ÖEx¥->
iRightJoöTabÀ
==
iTab
)

2571 
	}
}

2609 
	$whîeLo›AddBåì
(

2610 
WhîeLo›Buûdî
 *
pBuûdî
,

2611 
Bômask
 
mPªªq


2613 
WhîeInfo
 *
pWInfo
;

2614 
Index
 *
pProbe
;

2615 
Index
 
sPk
;

2616 
LogE°
 
aiRowE°Pk
[2];

2617 
i16
 
aiCﬁumnPk
 = -1;

2618 
SrcLi°
 *
pTabLi°
;

2619 
SrcLi°_ôem
 *
pSrc
;

2620 
WhîeLo›
 *
pNew
;

2621 
rc
 = 
SQLITE_OK
;

2622 
iS‹tIdx
 = 1;

2623 
b
;

2624 
LogE°
 
rSize
;

2625 
LogE°
 
rLogSize
;

2626 
WhîeCœu£
 *
pWC
;

2627 
TabÀ
 *
pTab
;

2629 
pNew
 = 
pBuûdî
->pNew;

2630 
pWInfo
 = 
pBuûdî
->pWInfo;

2631 
pTabLi°
 = 
pWInfo
->pTabList;

2632 
pSrc
 = 
pTabLi°
->
a
 + 
pNew
->
iTab
;

2633 
pTab
 = 
pSrc
->pTab;

2634 
pWC
 = 
pBuûdî
->pWC;

2635 
	`as£π
–!
	`IsVútuÆ
(
pSrc
->
pTab
) );

2637 if–
pSrc
->
pIBIndex
 ){

2639 
pProbe
 = 
pSrc
->
pIBIndex
;

2640 }if–!
	`HasRowid
(
pTab
) ){

2641 
pProbe
 = 
pTab
->
pIndex
;

2647 
Index
 *
pFú°
;

2648 
	`mem£t
(&
sPk
, 0, (
Index
));

2649 
sPk
.
nKeyCﬁ
 = 1;

2650 
sPk
.
nCﬁumn
 = 1;

2651 
sPk
.
aiCﬁumn
 = &
aiCﬁumnPk
;

2652 
sPk
.
aiRowLogE°
 = 
aiRowE°Pk
;

2653 
sPk
.
⁄Eº‹
 = 
OE_Rïœ˚
;

2654 
sPk
.
pTabÀ
 = 
pTab
;

2655 
sPk
.
szIdxRow
 = 
pTab
->
szTabRow
;

2656 
aiRowE°Pk
[0] = 
pTab
->
nRowLogE°
;

2657 
aiRowE°Pk
[1] = 0;

2658 
pFú°
 = 
pSrc
->
pTab
->
pIndex
;

2659 if–
pSrc
->
fg
.
nŸIndexed
==0 ){

2662 
sPk
.
pNext
 = 
pFú°
;

2664 
pProbe
 = &
sPk
;

2666 
rSize
 = 
pTab
->
nRowLogE°
;

2667 
rLogSize
 = 
	`e°Log
(
rSize
);

2669 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


2671 if–!
pBuûdî
->
pOrSë


2672 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

2673 && (
pWInfo
->
pP¨£
->
db
->
Êags
 & 
SQLITE_AutoIndex
)!=0

2674 && 
pSrc
->
pIBIndex
==0

2675 && !
pSrc
->
fg
.
nŸIndexed


2676 && 
	`HasRowid
(
pTab
)

2677 && !
pSrc
->
fg
.
isC‹ªœãd


2678 && !
pSrc
->
fg
.
isRecursive


2681 
WhîeTîm
 *
pTîm
;

2682 
WhîeTîm
 *
pWCEnd
 = 
pWC
->
a
 +ÖWC->
nTîm
;

2683 
pTîm
=
pWC
->
a
; 
rc
==
SQLITE_OK
 &&ÖTîm<
pWCEnd
;ÖTerm++){

2684 if–
pTîm
->
¥îeqRight
 & 
pNew
->
maskSñf
 ) ;

2685 if–
	`ãrmC™DriveIndex
(
pTîm
, 
pSrc
, 0) ){

2686 
pNew
->
u
.
båì
.
nEq
 = 1;

2687 
pNew
->
nSkù
 = 0;

2688 
pNew
->
u
.
båì
.
pIndex
 = 0;

2689 
pNew
->
nLTîm
 = 1;

2690 
pNew
->
aLTîm
[0] = 
pTîm
;

2699 
pNew
->
rSëup
 = 
rLogSize
 + 
rSize
 + 4;

2700 if–
pTab
->
pSñe˘
==0 && (pTab->
èbFœgs
 & 
TF_EphemîÆ
)==0 ){

2701 
pNew
->
rSëup
 += 24;

2703 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rSëup
, 
pTab
->
co°Mu…
);

2704 if–
pNew
->
rSëup
<0 )ÖNew->rSetup = 0;

2709 
pNew
->
nOut
 = 43; 
	`as£π
–43==
	`sqlôe3LogE°
(20) );

2710 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
(
rLogSize
,pNew->
nOut
);

2711 
pNew
->
wsFœgs
 = 
WHERE_AUTO_INDEX
;

2712 
pNew
->
¥îeq
 = 
mPªªq
 | 
pTîm
->
¥îeqRight
;

2713 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2721 ; 
rc
==
SQLITE_OK
 && 
pProbe
;ÖProbeıProbe->
pNext
, 
iS‹tIdx
++){

2722 if–
pProbe
->
pP¨tIdxWhîe
!=0

2723 && !
	`whîeUßbÀP¨tülIndex
(
pSrc
->
iCurs‹
, 
pWC
, 
pProbe
->
pP¨tIdxWhîe
) ){

2724 
	`ã°ˇ£
–
pNew
->
iTab
!=
pSrc
->
iCurs‹
 );

2727 
rSize
 = 
pProbe
->
aiRowLogE°
[0];

2728 
pNew
->
u
.
båì
.
nEq
 = 0;

2729 
pNew
->
nSkù
 = 0;

2730 
pNew
->
nLTîm
 = 0;

2731 
pNew
->
iS‹tIdx
 = 0;

2732 
pNew
->
rSëup
 = 0;

2733 
pNew
->
¥îeq
 = 
mPªªq
;

2734 
pNew
->
nOut
 = 
rSize
;

2735 
pNew
->
u
.
båì
.
pIndex
 = 
pProbe
;

2736 
b
 = 
	`ödexMightHñpWôhOrdîBy
(
pBuûdî
, 
pProbe
, 
pSrc
->
iCurs‹
);

2738 
	`as£π
–(
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 || 
b
==0 );

2739 if–
pProbe
->
äum
<=0 ){

2741 
pNew
->
wsFœgs
 = 
WHERE_IPK
;

2744 
pNew
->
iS‹tIdx
 = 
b
 ? iSortIdx : 0;

2746 
pNew
->
rRun
 = 
rSize
 + 16;

2747 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pTab
->
co°Mu…
);

2748 
	`whîeLo›OuçutAdju°
(
pWC
, 
pNew
, 
rSize
);

2749 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2750 
pNew
->
nOut
 = 
rSize
;

2751 if–
rc
 ) ;

2753 
Bômask
 
m
;

2754 if–
pProbe
->
isCovîög
 ){

2755 
pNew
->
wsFœgs
 = 
WHERE_IDX_ONLY
 | 
WHERE_INDEXED
;

2756 
m
 = 0;

2758 
m
 = 
pSrc
->
cﬁU£d
 & ~
	`cﬁumnsInIndex
(
pProbe
);

2759 
pNew
->
wsFœgs
 = (
m
==0Ë? (
WHERE_IDX_ONLY
|
WHERE_INDEXED
) : WHERE_INDEXED;

2763 if–
b


2764 || !
	`HasRowid
(
pTab
)

2765 || 
pProbe
->
pP¨tIdxWhîe
!=0

2766 || ( 
m
==0

2767 && 
pProbe
->
bUn‹dîed
==0

2768 && (
pProbe
->
szIdxRow
<
pTab
->
szTabRow
)

2769 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0

2770 && 
sqlôe3GlobÆC⁄fig
.
bU£Cis


2771 && 
	`O±imiz©i⁄E«bÀd
(
pWInfo
->
pP¨£
->
db
, 
SQLITE_CovîIdxSˇn
)

2774 
pNew
->
iS‹tIdx
 = 
b
 ? iSortIdx : 0;

2779 
pNew
->
rRun
 = 
rSize
 + 1 + (15*
pProbe
->
szIdxRow
)/
pTab
->
szTabRow
;

2780 if–
m
!=0 ){

2786 
LogE°
 
nLookup
 = 
rSize
 + 16;

2787 
ii
;

2788 
iCur
 = 
pSrc
->
iCurs‹
;

2789 
WhîeCœu£
 *
pWC2
 = &
pWInfo
->
sWC
;

2790 
ii
=0; ii<
pWC2
->
nTîm
; ii++){

2791 
WhîeTîm
 *
pTîm
 = &
pWC2
->
a
[
ii
];

2792 if–!
	`sqlôe3Ex¥CovîedByIndex
(
pTîm
->
pEx¥
, 
iCur
, 
pProbe
) ){

2797 if–
pTîm
->
åuthProb
<=0 ){

2798 
nLookup
 +
pTîm
->
åuthProb
;

2800 
nLookup
--;

2801 if–
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
ËË
nLookup
 -= 19;

2805 
pNew
->
rRun
 = 
	`sqlôe3LogE°Add
’New->rRun, 
nLookup
);

2807 
	`AµlyCo°Mu…ùlõr
(
pNew
->
rRun
, 
pTab
->
co°Mu…
);

2808 
	`whîeLo›OuçutAdju°
(
pWC
, 
pNew
, 
rSize
);

2809 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2810 
pNew
->
nOut
 = 
rSize
;

2811 if–
rc
 ) ;

2815 
rc
 = 
	`whîeLo›AddBåìIndex
(
pBuûdî
, 
pSrc
, 
pProbe
, 0);

2816 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


2817 
	`sqlôe3Sèt4ProbeFªe
(
pBuûdî
->
pRec
);

2818 
pBuûdî
->
nRecVÆid
 = 0;

2819 
pBuûdî
->
pRec
 = 0;

2824 if–
pSrc
->
pIBIndex
 ) ;

2826  
rc
;

2827 
	}
}

2829 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


2851 
	$whîeLo›AddVútuÆO√
(

2852 
WhîeLo›Buûdî
 *
pBuûdî
,

2853 
Bômask
 
mPªªq
,

2854 
Bômask
 
mUßbÀ
,

2855 
u16
 
mEx˛ude
,

2856 
sqlôe3_ödex_öfo
 *
pIdxInfo
,

2857 *
pbIn


2859 
WhîeCœu£
 *
pWC
 = 
pBuûdî
->pWC;

2860 
sqlôe3_ödex_c⁄°øöt
 *
pIdxC⁄s
;

2861 
sqlôe3_ödex_c⁄°øöt_ußge
 *
pUßge
 = 
pIdxInfo
->
aC⁄°øötUßge
;

2862 
i
;

2863 
mxTîm
;

2864 
rc
 = 
SQLITE_OK
;

2865 
WhîeLo›
 *
pNew
 = 
pBuûdî
->pNew;

2866 
P¨£
 *
pP¨£
 = 
pBuûdî
->
pWInfo
->pParse;

2867 
SrcLi°_ôem
 *
pSrc
 = &
pBuûdî
->
pWInfo
->
pTabLi°
->
a
[
pNew
->
iTab
];

2868 
nC⁄°øöt
 = 
pIdxInfo
->nConstraint;

2870 
	`as£π
–(
mUßbÀ
 & 
mPªªq
)==mPrereq );

2871 *
pbIn
 = 0;

2872 
pNew
->
¥îeq
 = 
mPªªq
;

2876 
pIdxC⁄s
 = *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
;

2877 
i
=0; i<
nC⁄°øöt
; i++, 
pIdxC⁄s
++){

2878 
WhîeTîm
 *
pTîm
 = &
pWC
->
a
[
pIdxC⁄s
->
iTîmOff£t
];

2879 
pIdxC⁄s
->
ußbÀ
 = 0;

2880 if–(
pTîm
->
¥îeqRight
 & 
mUßbÀ
)==pTerm->prereqRight

2881 && (
pTîm
->
eO≥øt‹
 & 
mEx˛ude
)==0

2883 
pIdxC⁄s
->
ußbÀ
 = 1;

2888 
	`mem£t
(
pUßge
, 0, ’Ußge[0])*
nC⁄°øöt
);

2889 
	`as£π
–
pIdxInfo
->
√edToFªeIdxSå
==0 );

2890 
pIdxInfo
->
idxSå
 = 0;

2891 
pIdxInfo
->
idxNum
 = 0;

2892 
pIdxInfo
->
‹dîByC⁄sumed
 = 0;

2893 
pIdxInfo
->
e°im©edCo°
 = 
SQLITE_BIG_DBL
 / ()2;

2894 
pIdxInfo
->
e°im©edRows
 = 25;

2895 
pIdxInfo
->
idxFœgs
 = 0;

2896 
pIdxInfo
->
cﬁU£d
 = (
sqlôe3_öt64
)
pSrc
->colUsed;

2899 
rc
 = 
	`vèbBe°Index
(
pP¨£
, 
pSrc
->
pTab
, 
pIdxInfo
);

2900 if–
rc
 ) Ñc;

2902 
mxTîm
 = -1;

2903 
	`as£π
–
pNew
->
nLSlŸ
>=
nC⁄°øöt
 );

2904 
i
=0; i<
nC⁄°øöt
; i++Ë
pNew
->
aLTîm
[i] = 0;

2905 
pNew
->
u
.
vèb
.
omôMask
 = 0;

2906 
pIdxC⁄s
 = *(
sqlôe3_ödex_c⁄°øöt
**)&
pIdxInfo
->
aC⁄°øöt
;

2907 
i
=0; i<
nC⁄°øöt
; i++, 
pIdxC⁄s
++){

2908 
iTîm
;

2909 if–(
iTîm
 = 
pUßge
[
i
].
¨gvIndex
 - 1)>=0 ){

2910 
WhîeTîm
 *
pTîm
;

2911 
j
 = 
pIdxC⁄s
->
iTîmOff£t
;

2912 if–
iTîm
>=
nC⁄°øöt


2913 || 
j
<0

2914 || 
j
>=
pWC
->
nTîm


2915 || 
pNew
->
aLTîm
[
iTîm
]!=0

2916 || 
pIdxC⁄s
->
ußbÀ
==0

2918 
rc
 = 
SQLITE_ERROR
;

2919 
	`sqlôe3Eº‹Msg
(
pP¨£
,"%s.xBe°Index mÆfun˘i⁄",
pSrc
->
pTab
->
zName
);

2920  
rc
;

2922 
	`ã°ˇ£
–
iTîm
==
nC⁄°øöt
-1 );

2923 
	`ã°ˇ£
–
j
==0 );

2924 
	`ã°ˇ£
–
j
==
pWC
->
nTîm
-1 );

2925 
pTîm
 = &
pWC
->
a
[
j
];

2926 
pNew
->
¥îeq
 |
pTîm
->
¥îeqRight
;

2927 
	`as£π
–
iTîm
<
pNew
->
nLSlŸ
 );

2928 
pNew
->
aLTîm
[
iTîm
] = 
pTîm
;

2929 if–
iTîm
>
mxTîm
 ) mxTerm = iTerm;

2930 
	`ã°ˇ£
–
iTîm
==15 );

2931 
	`ã°ˇ£
–
iTîm
==16 );

2932 if–
iTîm
<16 && 
pUßge
[
i
].
omô
 ) 
pNew
->
u
.
vèb
.
omôMask
 |= 1<<iTerm;

2933 if–(
pTîm
->
eO≥øt‹
 & 
WO_IN
)!=0 ){

2939 
pIdxInfo
->
‹dîByC⁄sumed
 = 0;

2940 
pIdxInfo
->
idxFœgs
 &~
SQLITE_INDEX_SCAN_UNIQUE
;

2941 *
pbIn
 = 1; 
	`as£π
–(
mEx˛ude
 & 
WO_IN
)==0 );

2946 
pNew
->
nLTîm
 = 
mxTîm
+1;

2947 
	`as£π
–
pNew
->
nLTîm
<ıNew->
nLSlŸ
 );

2948 
pNew
->
u
.
vèb
.
idxNum
 = 
pIdxInfo
->idxNum;

2949 
pNew
->
u
.
vèb
.
√edFªe
 = 
pIdxInfo
->
√edToFªeIdxSå
;

2950 
pIdxInfo
->
√edToFªeIdxSå
 = 0;

2951 
pNew
->
u
.
vèb
.
idxSå
 = 
pIdxInfo
->idxStr;

2952 
pNew
->
u
.
vèb
.
isOrdîed
 = (
i8
)(
pIdxInfo
->
‹dîByC⁄sumed
 ?

2953 
pIdxInfo
->
nOrdîBy
 : 0);

2954 
pNew
->
rSëup
 = 0;

2955 
pNew
->
rRun
 = 
	`sqlôe3LogE°FromDoubÀ
(
pIdxInfo
->
e°im©edCo°
);

2956 
pNew
->
nOut
 = 
	`sqlôe3LogE°
(
pIdxInfo
->
e°im©edRows
);

2960 if–
pIdxInfo
->
idxFœgs
 & 
SQLITE_INDEX_SCAN_UNIQUE
 ){

2961 
pNew
->
wsFœgs
 |
WHERE_ONEROW
;

2963 
pNew
->
wsFœgs
 &~
WHERE_ONEROW
;

2965 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

2966 if–
pNew
->
u
.
vèb
.
√edFªe
 ){

2967 
	`sqlôe3_‰ì
(
pNew
->
u
.
vèb
.
idxSå
);

2968 
pNew
->
u
.
vèb
.
√edFªe
 = 0;

2970 
	`WHERETRACE
(0xffff, (" bIn=%dÖrereqIn=%04llxÖrereqOut=%04llx\n",

2971 *
pbIn
, (
sqlôe3_uöt64
)
mPªªq
,

2972 (
sqlôe3_uöt64
)(
pNew
->
¥îeq
 & ~
mPªªq
)));

2974  
rc
;

2975 
	}
}

3003 
	$whîeLo›AddVútuÆ
(

3004 
WhîeLo›Buûdî
 *
pBuûdî
,

3005 
Bômask
 
mPªªq
,

3006 
Bômask
 
mUnußbÀ


3008 
rc
 = 
SQLITE_OK
;

3009 
WhîeInfo
 *
pWInfo
;

3010 
P¨£
 *
pP¨£
;

3011 
WhîeCœu£
 *
pWC
;

3012 
SrcLi°_ôem
 *
pSrc
;

3013 
sqlôe3_ödex_öfo
 *
p
;

3014 
nC⁄°øöt
;

3015 
bIn
;

3016 
WhîeLo›
 *
pNew
;

3017 
Bômask
 
mBe°
;

3019 
	`as£π
–(
mPªªq
 & 
mUnußbÀ
)==0 );

3020 
pWInfo
 = 
pBuûdî
->pWInfo;

3021 
pP¨£
 = 
pWInfo
->pParse;

3022 
pWC
 = 
pBuûdî
->pWC;

3023 
pNew
 = 
pBuûdî
->pNew;

3024 
pSrc
 = &
pWInfo
->
pTabLi°
->
a
[
pNew
->
iTab
];

3025 
	`as£π
–
	`IsVútuÆ
(
pSrc
->
pTab
) );

3026 
p
 = 
	`ÆloˇãIndexInfo
(
pP¨£
, 
pWC
, 
mUnußbÀ
, 
pSrc
, 
pBuûdî
->
pOrdîBy
);

3027 if–
p
==0 )  
SQLITE_NOMEM_BKPT
;

3028 
pNew
->
rSëup
 = 0;

3029 
pNew
->
wsFœgs
 = 
WHERE_VIRTUALTABLE
;

3030 
pNew
->
nLTîm
 = 0;

3031 
pNew
->
u
.
vèb
.
√edFªe
 = 0;

3032 
nC⁄°øöt
 = 
p
->nConstraint;

3033 if–
	`whîeLo›Resize
(
pP¨£
->
db
, 
pNew
, 
nC⁄°øöt
) ){

3034 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
p
);

3035  
SQLITE_NOMEM_BKPT
;

3039 
	`WHERETRACE
(0x40, (" VirtualOne:áll usable\n"));

3040 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, 
ALLBITS
, 0, 
p
, &
bIn
);

3047 if–
rc
==
SQLITE_OK
 && (
mBe°
 = (
pNew
->
¥îeq
 & ~
mPªªq
))!=0 ){

3048 
£íZîo
 = 0;

3049 
£íZîoNoIN
 = 0;

3050 
Bômask
 
mPªv
 = 0;

3051 
Bômask
 
mBe°NoIn
 = 0;

3055 if–
bIn
 ){

3056 
	`WHERETRACE
(0x40, (" VirtualOne:áll usable w/o IN\n"));

3057 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, 
ALLBITS
, 
WO_IN
, 
p
, &
bIn
);

3058 
	`as£π
–
bIn
==0 );

3059 
mBe°NoIn
 = 
pNew
->
¥îeq
 & ~
mPªªq
;

3060 if–
mBe°NoIn
==0 ){

3061 
£íZîo
 = 1;

3062 
£íZîoNoIN
 = 1;

3068  
rc
==
SQLITE_OK
 ){

3069 
i
;

3070 
Bômask
 
mNext
 = 
ALLBITS
;

3071 
	`as£π
–
mNext
>0 );

3072 
i
=0; i<
nC⁄°øöt
; i++){

3073 
Bômask
 
mThis
 = (

3074 
pWC
->
a
[
p
->
aC⁄°øöt
[
i
].
iTîmOff£t
].
¥îeqRight
 & ~
mPªªq


3076 if–
mThis
>
mPªv
 && mThis<
mNext
 ) mNext = mThis;

3078 
mPªv
 = 
mNext
;

3079 if–
mNext
==
ALLBITS
 ) ;

3080 if–
mNext
==
mBe°
 || mNext==
mBe°NoIn
 ) ;

3081 
	`WHERETRACE
(0x40, (" VirtualOne: mPrev=%04llx mNext=%04llx\n",

3082 (
sqlôe3_uöt64
)
mPªv
, (sqlôe3_uöt64)
mNext
));

3083 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, 
mNext
|mPªªq, 0, 
p
, &
bIn
);

3084 if–
pNew
->
¥îeq
==
mPªªq
 ){

3085 
£íZîo
 = 1;

3086 if–
bIn
==0 ) 
£íZîoNoIN
 = 1;

3093 if–
rc
==
SQLITE_OK
 && 
£íZîo
==0 ){

3094 
	`WHERETRACE
(0x40, (" VirtualOne:áll disabled\n"));

3095 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, mPªªq, 0, 
p
, &
bIn
);

3096 if–
bIn
==0 ) 
£íZîoNoIN
 = 1;

3102 if–
rc
==
SQLITE_OK
 && 
£íZîoNoIN
==0 ){

3103 
	`WHERETRACE
(0x40, (" VirtualOne:áll disabledánd w/o IN\n"));

3104 
rc
 = 
	`whîeLo›AddVútuÆO√
(
pBuûdî
, 
mPªªq
, mPªªq, 
WO_IN
, 
p
, &
bIn
);

3108 if–
p
->
√edToFªeIdxSå
 ) 
	`sqlôe3_‰ì
’->
idxSå
);

3109 
	`sqlôe3DbFªe
(
pP¨£
->
db
, 
p
);

3110  
rc
;

3111 
	}
}

3118 
	$whîeLo›AddOr
(

3119 
WhîeLo›Buûdî
 *
pBuûdî
,

3120 
Bômask
 
mPªªq
,

3121 
Bômask
 
mUnußbÀ


3123 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

3124 
WhîeCœu£
 *
pWC
;

3125 
WhîeLo›
 *
pNew
;

3126 
WhîeTîm
 *
pTîm
, *
pWCEnd
;

3127 
rc
 = 
SQLITE_OK
;

3128 
iCur
;

3129 
WhîeCœu£
 
ãmpWC
;

3130 
WhîeLo›Buûdî
 
sSubBuûd
;

3131 
WhîeOrSë
 
sSum
, 
sCur
;

3132 
SrcLi°_ôem
 *
pIãm
;

3134 
pWC
 = 
pBuûdî
->pWC;

3135 
pWCEnd
 = 
pWC
->
a
 +ÖWC->
nTîm
;

3136 
pNew
 = 
pBuûdî
->pNew;

3137 
	`mem£t
(&
sSum
, 0, (sSum));

3138 
pIãm
 = 
pWInfo
->
pTabLi°
->
a
 + 
pNew
->
iTab
;

3139 
iCur
 = 
pIãm
->
iCurs‹
;

3141 
pTîm
=
pWC
->
a
;ÖTîm<
pWCEnd
 && 
rc
==
SQLITE_OK
;ÖTerm++){

3142 if–(
pTîm
->
eO≥øt‹
 & 
WO_OR
)!=0

3143 && (
pTîm
->
u
.
pOrInfo
->
ödexabÀ
 & 
pNew
->
maskSñf
)!=0

3145 
WhîeCœu£
 * c⁄° 
pOrWC
 = &
pTîm
->
u
.
pOrInfo
->
wc
;

3146 
WhîeTîm
 * c⁄° 
pOrWCEnd
 = &
pOrWC
->
a
[pOrWC->
nTîm
];

3147 
WhîeTîm
 *
pOrTîm
;

3148 
⁄˚
 = 1;

3149 
i
, 
j
;

3151 
sSubBuûd
 = *
pBuûdî
;

3152 
sSubBuûd
.
pOrdîBy
 = 0;

3153 
sSubBuûd
.
pOrSë
 = &
sCur
;

3155 
	`WHERETRACE
(0x200, ("BegöÖro˚ssög OR-˛au£ %p\n", 
pTîm
));

3156 
pOrTîm
=
pOrWC
->
a
;ÖOrTîm<
pOrWCEnd
;ÖOrTerm++){

3157 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_AND
)!=0 ){

3158 
sSubBuûd
.
pWC
 = &
pOrTîm
->
u
.
pAndInfo
->
wc
;

3159 }if–
pOrTîm
->
À·Curs‹
==
iCur
 ){

3160 
ãmpWC
.
pWInfo
 = 
pWC
->pWInfo;

3161 
ãmpWC
.
pOuãr
 = 
pWC
;

3162 
ãmpWC
.
›
 = 
TK_AND
;

3163 
ãmpWC
.
nTîm
 = 1;

3164 
ãmpWC
.
a
 = 
pOrTîm
;

3165 
sSubBuûd
.
pWC
 = &
ãmpWC
;

3169 
sCur
.
n
 = 0;

3170 #ifde‡
WHERETRACE_ENABLED


3171 
	`WHERETRACE
(0x200, ("OR-term %d of %p has %d subterms:\n",

3172 ()(
pOrTîm
-
pOrWC
->
a
), 
pTîm
, 
sSubBuûd
.
pWC
->
nTîm
));

3173 if–
sqlôe3WhîeTø˚
 & 0x400 ){

3174 
	`sqlôe3WhîeCœu£Pröt
(
sSubBuûd
.
pWC
);

3177 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3178 if–
	`IsVútuÆ
(
pIãm
->
pTab
) ){

3179 
rc
 = 
	`whîeLo›AddVútuÆ
(&
sSubBuûd
, 
mPªªq
, 
mUnußbÀ
);

3183 
rc
 = 
	`whîeLo›AddBåì
(&
sSubBuûd
, 
mPªªq
);

3185 if–
rc
==
SQLITE_OK
 ){

3186 
rc
 = 
	`whîeLo›AddOr
(&
sSubBuûd
, 
mPªªq
, 
mUnußbÀ
);

3188 
	`as£π
–
rc
==
SQLITE_OK
 || 
sCur
.
n
==0 );

3189 if–
sCur
.
n
==0 ){

3190 
sSum
.
n
 = 0;

3192 }if–
⁄˚
 ){

3193 
	`whîeOrMove
(&
sSum
, &
sCur
);

3194 
⁄˚
 = 0;

3196 
WhîeOrSë
 
sPªv
;

3197 
	`whîeOrMove
(&
sPªv
, &
sSum
);

3198 
sSum
.
n
 = 0;

3199 
i
=0; i<
sPªv
.
n
; i++){

3200 
j
=0; j<
sCur
.
n
; j++){

3201 
	`whîeOrIn£π
(&
sSum
, 
sPªv
.
a
[
i
].
¥îeq
 | 
sCur
.a[
j
].prereq,

3202 
	`sqlôe3LogE°Add
(
sPªv
.
a
[
i
].
rRun
, 
sCur
.a[
j
].rRun),

3203 
	`sqlôe3LogE°Add
(
sPªv
.
a
[
i
].
nOut
, 
sCur
.a[
j
].nOut));

3208 
pNew
->
nLTîm
 = 1;

3209 
pNew
->
aLTîm
[0] = 
pTîm
;

3210 
pNew
->
wsFœgs
 = 
WHERE_MULTI_OR
;

3211 
pNew
->
rSëup
 = 0;

3212 
pNew
->
iS‹tIdx
 = 0;

3213 
	`mem£t
(&
pNew
->
u
, 0, (pNew->u));

3214 
i
=0; 
rc
==
SQLITE_OK
 && i<
sSum
.
n
; i++){

3227 
pNew
->
rRun
 = 
sSum
.
a
[
i
].rRun + 1;

3228 
pNew
->
nOut
 = 
sSum
.
a
[
i
].nOut;

3229 
pNew
->
¥îeq
 = 
sSum
.
a
[
i
].prereq;

3230 
rc
 = 
	`whîeLo›In£π
(
pBuûdî
, 
pNew
);

3232 
	`WHERETRACE
(0x200, ("EndÖro˚ssög OR-˛au£ %p\n", 
pTîm
));

3235  
rc
;

3236 
	}
}

3241 
	$whîeLo›AddAŒ
(
WhîeLo›Buûdî
 *
pBuûdî
){

3242 
WhîeInfo
 *
pWInfo
 = 
pBuûdî
->pWInfo;

3243 
Bômask
 
mPªªq
 = 0;

3244 
Bômask
 
mPri‹
 = 0;

3245 
iTab
;

3246 
SrcLi°
 *
pTabLi°
 = 
pWInfo
->pTabList;

3247 
SrcLi°_ôem
 *
pIãm
;

3248 
SrcLi°_ôem
 *
pEnd
 = &
pTabLi°
->
a
[
pWInfo
->
nLevñ
];

3249 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

3250 
rc
 = 
SQLITE_OK
;

3251 
WhîeLo›
 *
pNew
;

3252 
u8
 
¥i‹Joöty≥
 = 0;

3255 
pNew
 = 
pBuûdî
->pNew;

3256 
	`whîeLo›Inô
(
pNew
);

3257 
iTab
=0, 
pIãm
=
pTabLi°
->
a
;ÖIãm<
pEnd
; iTab++,ÖItem++){

3258 
Bômask
 
mUnußbÀ
 = 0;

3259 
pNew
->
iTab
 = iTab;

3260 
pNew
->
maskSñf
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pIãm
->
iCurs‹
);

3261 if–((
pIãm
->
fg
.
joöty≥
|
¥i‹Joöty≥
Ë& (
JT_LEFT
|
JT_CROSS
))!=0 ){

3264 
mPªªq
 = 
mPri‹
;

3266 
¥i‹Joöty≥
 = 
pIãm
->
fg
.
joöty≥
;

3267 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


3268 if–
	`IsVútuÆ
(
pIãm
->
pTab
) ){

3269 
SrcLi°_ôem
 *
p
;

3270 
p
=&
pIãm
[1];Ö<
pEnd
;Ö++){

3271 if–
mUnußbÀ
 || (
p
->
fg
.
joöty≥
 & (
JT_LEFT
|
JT_CROSS
)) ){

3272 
mUnußbÀ
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
p
->
iCurs‹
);

3275 
rc
 = 
	`whîeLo›AddVútuÆ
(
pBuûdî
, 
mPªªq
, 
mUnußbÀ
);

3279 
rc
 = 
	`whîeLo›AddBåì
(
pBuûdî
, 
mPªªq
);

3281 if–
rc
==
SQLITE_OK
 ){

3282 
rc
 = 
	`whîeLo›AddOr
(
pBuûdî
, 
mPªªq
, 
mUnußbÀ
);

3284 
mPri‹
 |
pNew
->
maskSñf
;

3285 if–
rc
 || 
db
->
mÆlocFaûed
 ) ;

3288 
	`whîeLo›CÀ¨
(
db
, 
pNew
);

3289  
rc
;

3290 
	}
}

3309 
i8
 
	$whîeP©hS©isfõsOrdîBy
(

3310 
WhîeInfo
 *
pWInfo
,

3311 
Ex¥Li°
 *
pOrdîBy
,

3312 
WhîeP©h
 *
pP©h
,

3313 
u16
 
w˘æFœgs
,

3314 
u16
 
nLo›
,

3315 
WhîeLo›
 *
pLa°
,

3316 
Bômask
 *
pRevMask


3318 
u8
 
ªvSë
;

3319 
u8
 
ªv
;

3320 
u8
 
ªvIdx
;

3321 
u8
 
isOrdîDi°ö˘
;

3322 
u8
 
di°ö˘Cﬁumns
;

3323 
u8
 
isM©ch
;

3324 
u16
 
eqOpMask
;

3325 
u16
 
nKeyCﬁ
;

3326 
u16
 
nCﬁumn
;

3327 
u16
 
nOrdîBy
;

3328 
iLo›
;

3329 
i
, 
j
;

3330 
iCur
;

3331 
iCﬁumn
;

3332 
WhîeLo›
 *
pLo›
 = 0;

3333 
WhîeTîm
 *
pTîm
;

3334 
Ex¥
 *
pOBEx¥
;

3335 
CﬁlSeq
 *
pCﬁl
;

3336 
Index
 *
pIndex
;

3337 
sqlôe3
 *
db
 = 
pWInfo
->
pP¨£
->db;

3338 
Bômask
 
obS©
 = 0;

3339 
Bômask
 
obD⁄e
;

3340 
Bômask
 
‹dîDi°ö˘Mask
;

3341 
Bômask
 
ªady
;

3365 
	`as£π
–
pOrdîBy
!=0 );

3366 if–
nLo›
 && 
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_OrdîByIdxJoö
) )  0;

3368 
nOrdîBy
 = 
pOrdîBy
->
nEx¥
;

3369 
	`ã°ˇ£
–
nOrdîBy
==
BMS
-1 );

3370 if–
nOrdîBy
>
BMS
-1 )  0;

3371 
isOrdîDi°ö˘
 = 1;

3372 
obD⁄e
 = 
	`MASKBIT
(
nOrdîBy
)-1;

3373 
‹dîDi°ö˘Mask
 = 0;

3374 
ªady
 = 0;

3375 
eqOpMask
 = 
WO_EQ
 | 
WO_IS
 | 
WO_ISNULL
;

3376 if–
w˘æFœgs
 & 
WHERE_ORDERBY_LIMIT
 ) 
eqOpMask
 |
WO_IN
;

3377 
iLo›
=0; 
isOrdîDi°ö˘
 && 
obS©
<
obD⁄e
 && iLo›<=
nLo›
; iLoop++){

3378 if–
iLo›
>0 ) 
ªady
 |
pLo›
->
maskSñf
;

3379 if–
iLo›
<
nLo›
 ){

3380 
pLo›
 = 
pP©h
->
aLo›
[
iLo›
];

3381 if–
w˘æFœgs
 & 
WHERE_ORDERBY_LIMIT
 ) ;

3383 
pLo›
 = 
pLa°
;

3385 if–
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
 ){

3386 if–
pLo›
->
u
.
vèb
.
isOrdîed
 ) 
obS©
 = 
obD⁄e
;

3389 
iCur
 = 
pWInfo
->
pTabLi°
->
a
[
pLo›
->
iTab
].
iCurs‹
;

3396 
i
=0; i<
nOrdîBy
; i++){

3397 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3398 
pOBEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOrdîBy
->
a
[
i
].
pEx¥
);

3399 if–
pOBEx¥
->
›
!=
TK_COLUMN
 ) ;

3400 if–
pOBEx¥
->
iTabÀ
!=
iCur
 ) ;

3401 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(&
pWInfo
->
sWC
, 
iCur
, 
pOBEx¥
->
iCﬁumn
,

3402 ~
ªady
, 
eqOpMask
, 0);

3403 if–
pTîm
==0 ) ;

3404 if–(
pTîm
->
eO≥øt‹
&(
WO_EQ
|
WO_IS
))!=0 && 
pOBEx¥
->
iCﬁumn
>=0 ){

3405 c⁄° *
z1
, *
z2
;

3406 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pOrdîBy
->
a
[
i
].
pEx¥
);

3407 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3408 
z1
 = 
pCﬁl
->
zName
;

3409 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pTîm
->
pEx¥
);

3410 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3411 
z2
 = 
pCﬁl
->
zName
;

3412 if–
	`sqlôe3SåICmp
(
z1
, 
z2
)!=0 ) ;

3413 
	`ã°ˇ£
–
pTîm
->
pEx¥
->
›
==
TK_IS
 );

3415 
obS©
 |
	`MASKBIT
(
i
);

3418 if–(
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
)==0 ){

3419 if–
pLo›
->
wsFœgs
 & 
WHERE_IPK
 ){

3420 
pIndex
 = 0;

3421 
nKeyCﬁ
 = 0;

3422 
nCﬁumn
 = 1;

3423 }if–(
pIndex
 = 
pLo›
->
u
.
båì
.pIndex)==0 ||ÖIndex->
bUn‹dîed
 ){

3426 
nKeyCﬁ
 = 
pIndex
->nKeyCol;

3427 
nCﬁumn
 = 
pIndex
->nColumn;

3428 
	`as£π
–
nCﬁumn
==
nKeyCﬁ
+1 || !
	`HasRowid
(
pIndex
->
pTabÀ
) );

3429 
	`as£π
–
pIndex
->
aiCﬁumn
[
nCﬁumn
-1]==
XN_ROWID


3430 || !
	`HasRowid
(
pIndex
->
pTabÀ
));

3431 
isOrdîDi°ö˘
 = 
	`IsUniqueIndex
(
pIndex
);

3437 
ªv
 = 
ªvSë
 = 0;

3438 
di°ö˘Cﬁumns
 = 0;

3439 
j
=0; j<
nCﬁumn
; j++){

3440 
u8
 
bOn˚
;

3445 if–
j
<
pLo›
->
u
.
båì
.
nEq


3446 && 
pLo›
->
nSkù
==0

3447 && ((
i
 = 
pLo›
->
aLTîm
[
j
]->
eO≥øt‹
Ë& 
eqOpMask
)!=0

3449 if–
i
 & 
WO_ISNULL
 ){

3450 
	`ã°ˇ£
–
isOrdîDi°ö˘
 );

3451 
isOrdîDi°ö˘
 = 0;

3459 if–
pIndex
 ){

3460 
iCﬁumn
 = 
pIndex
->
aiCﬁumn
[
j
];

3461 
ªvIdx
 = 
pIndex
->
aS‹tOrdî
[
j
];

3462 if–
iCﬁumn
==
pIndex
->
pTabÀ
->
iPKey
 ) iColumn = -1;

3464 
iCﬁumn
 = 
XN_ROWID
;

3465 
ªvIdx
 = 0;

3471 if–
isOrdîDi°ö˘


3472 && 
iCﬁumn
>=0

3473 && 
j
>=
pLo›
->
u
.
båì
.
nEq


3474 && 
pIndex
->
pTabÀ
->
aCﬁ
[
iCﬁumn
].
nŸNuŒ
==0

3476 
isOrdîDi°ö˘
 = 0;

3482 
bOn˚
 = 1;

3483 
isM©ch
 = 0;

3484 
i
=0; 
bOn˚
 && i<
nOrdîBy
; i++){

3485 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3486 
pOBEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pOrdîBy
->
a
[
i
].
pEx¥
);

3487 
	`ã°ˇ£
–
w˘æFœgs
 & 
WHERE_GROUPBY
 );

3488 
	`ã°ˇ£
–
w˘æFœgs
 & 
WHERE_DISTINCTBY
 );

3489 if–(
w˘æFœgs
 & (
WHERE_GROUPBY
|
WHERE_DISTINCTBY
))==0 ) 
bOn˚
 = 0;

3490 if–
iCﬁumn
>=(-1) ){

3491 if–
pOBEx¥
->
›
!=
TK_COLUMN
 ) ;

3492 if–
pOBEx¥
->
iTabÀ
!=
iCur
 ) ;

3493 if–
pOBEx¥
->
iCﬁumn
!=iColumn ) ;

3495 if–
	`sqlôe3Ex¥Com∑ª
(
pOBEx¥
,
pIndex
->
aCﬁEx¥
->
a
[
j
].
pEx¥
,
iCur
) ){

3499 if–
iCﬁumn
>=0 ){

3500 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pWInfo
->
pP¨£
, 
pOrdîBy
->
a
[
i
].
pEx¥
);

3501 if–!
pCﬁl
 )ÖCﬁ»
db
->
pDÊtCﬁl
;

3502 if–
	`sqlôe3SåICmp
(
pCﬁl
->
zName
, 
pIndex
->
azCﬁl
[
j
])!=0 ) ;

3504 
isM©ch
 = 1;

3507 if–
isM©ch
 && (
w˘æFœgs
 & 
WHERE_GROUPBY
)==0 ){

3510 if–
ªvSë
 ){

3511 if–(
ªv
 ^ 
ªvIdx
)!=
pOrdîBy
->
a
[
i
].
s‹tOrdî
 ) 
isM©ch
 = 0;

3513 
ªv
 = 
ªvIdx
 ^ 
pOrdîBy
->
a
[
i
].
s‹tOrdî
;

3514 if–
ªv
 ) *
pRevMask
 |
	`MASKBIT
(
iLo›
);

3515 
ªvSë
 = 1;

3518 if–
isM©ch
 ){

3519 if–
iCﬁumn
<0 ){

3520 
	`ã°ˇ£
–
di°ö˘Cﬁumns
==0 );

3521 
di°ö˘Cﬁumns
 = 1;

3523 
obS©
 |
	`MASKBIT
(
i
);

3526 if–
j
==0 || j<
nKeyCﬁ
 ){

3527 
	`ã°ˇ£
–
isOrdîDi°ö˘
!=0 );

3528 
isOrdîDi°ö˘
 = 0;

3533 if–
di°ö˘Cﬁumns
 ){

3534 
	`ã°ˇ£
–
isOrdîDi°ö˘
==0 );

3535 
isOrdîDi°ö˘
 = 1;

3540 if–
isOrdîDi°ö˘
 ){

3541 
‹dîDi°ö˘Mask
 |
pLo›
->
maskSñf
;

3542 
i
=0; i<
nOrdîBy
; i++){

3543 
Ex¥
 *
p
;

3544 
Bômask
 
mTîm
;

3545 if–
	`MASKBIT
(
i
Ë& 
obS©
 ) ;

3546 
p
 = 
pOrdîBy
->
a
[
i
].
pEx¥
;

3547 
mTîm
 = 
	`sqlôe3WhîeEx¥Ußge
(&
pWInfo
->
sMaskSë
,
p
);

3548 if–
mTîm
==0 && !
	`sqlôe3Ex¥IsC⁄°™t
(
p
) ) ;

3549 if–(
mTîm
&~
‹dîDi°ö˘Mask
)==0 ){

3550 
obS©
 |
	`MASKBIT
(
i
);

3555 if–
obS©
==
obD⁄e
 )  (
i8
)
nOrdîBy
;

3556 if–!
isOrdîDi°ö˘
 ){

3557 
i
=
nOrdîBy
-1; i>0; i--){

3558 
Bômask
 
m
 = 
	`MASKBIT
(
i
) - 1;

3559 if–(
obS©
&
m
)==m )  
i
;

3564 
	}
}

3590 
	$sqlôe3WhîeIsS‹ãd
(
WhîeInfo
 *
pWInfo
){

3591 
	`as£π
–
pWInfo
->
w˘æFœgs
 & 
WHERE_GROUPBY
 );

3592 
	`as£π
–
pWInfo
->
w˘æFœgs
 & 
WHERE_SORTBYGROUP
 );

3593  
pWInfo
->
s‹ãd
;

3594 
	}
}

3596 #ifde‡
WHERETRACE_ENABLED


3598 c⁄° *
	$whîeP©hName
(
WhîeP©h
 *
pP©h
, 
nLo›
, 
WhîeLo›
 *
pLa°
){

3599 
zName
[65];

3600 
i
;

3601 
i
=0; i<
nLo›
; i++){ 
zName
[i] = 
pP©h
->
aLo›
[i]->
cId
; }

3602 if–
pLa°
 ) 
zName
[
i
++] =ÖLa°->
cId
;

3603 
zName
[
i
] = 0;

3604  
zName
;

3605 
	}
}

3613 
LogE°
 
	$whîeS‹tögCo°
(

3614 
WhîeInfo
 *
pWInfo
,

3615 
LogE°
 
nRow
,

3616 
nOrdîBy
,

3617 
nS‹ãd


3632 
LogE°
 
rSˇÀ
, 
rS‹tCo°
;

3633 
	`as£π
–
nOrdîBy
>0 && 66==
	`sqlôe3LogE°
(100) );

3634 
rSˇÀ
 = 
	`sqlôe3LogE°
((
nOrdîBy
-
nS‹ãd
)*100/nOrderBy) - 66;

3635 
rS‹tCo°
 = 
nRow
 + 
rSˇÀ
 + 16;

3639 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_USE_LIMIT
)!=0 &&ÖWInfo->
iLimô
<
nRow
 ){

3640 
nRow
 = 
pWInfo
->
iLimô
;

3642 
rS‹tCo°
 +
	`e°Log
(
nRow
);

3643  
rS‹tCo°
;

3644 
	}
}

3658 
	$whîeP©hSﬁvî
(
WhîeInfo
 *
pWInfo
, 
LogE°
 
nRowE°
){

3659 
mxChoi˚
;

3660 
nLo›
;

3661 
P¨£
 *
pP¨£
;

3662 
sqlôe3
 *
db
;

3663 
iLo›
;

3664 
ii
, 
jj
;

3665 
mxI
 = 0;

3666 
nOrdîBy
;

3667 
LogE°
 
mxCo°
 = 0;

3668 
LogE°
 
mxUns‹ãd
 = 0;

3669 
nTo
, 
nFrom
;

3670 
WhîeP©h
 *
aFrom
;

3671 
WhîeP©h
 *
aTo
;

3672 
WhîeP©h
 *
pFrom
;

3673 
WhîeP©h
 *
pTo
;

3674 
WhîeLo›
 *
pWLo›
;

3675 
WhîeLo›
 **
pX
;

3676 
LogE°
 *
aS‹tCo°
 = 0;

3677 *
pS∑˚
;

3678 
nS∑˚
;

3680 
pP¨£
 = 
pWInfo
->pParse;

3681 
db
 = 
pP¨£
->db;

3682 
nLo›
 = 
pWInfo
->
nLevñ
;

3686 
mxChoi˚
 = (
nLo›
<=1) ? 1 : (nLoop==2 ? 5 : 10);

3687 
	`as£π
–
nLo›
<=
pWInfo
->
pTabLi°
->
nSrc
 );

3688 
	`WHERETRACE
(0x002, ("---- begö sﬁvî. (nRowE°=%d)\n", 
nRowE°
));

3695 if–
pWInfo
->
pOrdîBy
==0 || 
nRowE°
==0 ){

3696 
nOrdîBy
 = 0;

3698 
nOrdîBy
 = 
pWInfo
->
pOrdîBy
->
nEx¥
;

3702 
nS∑˚
 = ((
WhîeP©h
)+(
WhîeLo›
*)*
nLo›
)*
mxChoi˚
*2;

3703 
nS∑˚
 +(
LogE°
Ë* 
nOrdîBy
;

3704 
pS∑˚
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, 
nS∑˚
);

3705 if–
pS∑˚
==0 )  
SQLITE_NOMEM_BKPT
;

3706 
aTo
 = (
WhîeP©h
*)
pS∑˚
;

3707 
aFrom
 = 
aTo
+
mxChoi˚
;

3708 
	`mem£t
(
aFrom
, 0, (aFrom[0]));

3709 
pX
 = (
WhîeLo›
**)(
aFrom
+
mxChoi˚
);

3710 
ii
=
mxChoi˚
*2, 
pFrom
=
aTo
; ii>0; ii--,ÖFrom++, 
pX
 +
nLo›
){

3711 
pFrom
->
aLo›
 = 
pX
;

3713 if–
nOrdîBy
 ){

3720 
aS‹tCo°
 = (
LogE°
*)
pX
;

3721 
	`mem£t
(
aS‹tCo°
, 0, (
LogE°
Ë* 
nOrdîBy
);

3723 
	`as£π
–
aS‹tCo°
==0 || &
pS∑˚
[
nS∑˚
]==(*)&aS‹tCo°[
nOrdîBy
] );

3724 
	`as£π
–
aS‹tCo°
!=0 || &
pS∑˚
[
nS∑˚
]==(*)
pX
 );

3731 
aFrom
[0].
nRow
 = 
	`MIN
(
pP¨£
->
nQuîyLo›
, 48); 
	`as£π
–48==
	`sqlôe3LogE°
(28) );

3732 
nFrom
 = 1;

3733 
	`as£π
–
aFrom
[0].
isOrdîed
==0 );

3734 if–
nOrdîBy
 ){

3741 
aFrom
[0].
isOrdîed
 = 
nLo›
>0 ? -1 : 
nOrdîBy
;

3747 
iLo›
=0; iLo›<
nLo›
; iLoop++){

3748 
nTo
 = 0;

3749 
ii
=0, 
pFrom
=
aFrom
; ii<
nFrom
; ii++,ÖFrom++){

3750 
pWLo›
=
pWInfo
->
pLo›s
;ÖWLo›;ÖWLo›ıWLo›->
pNextLo›
){

3751 
LogE°
 
nOut
;

3752 
LogE°
 
rCo°
;

3753 
LogE°
 
rUns‹ãd
;

3754 
i8
 
isOrdîed
 = 
pFrom
->isOrdered;

3755 
Bômask
 
maskNew
;

3756 
Bômask
 
ªvMask
 = 0;

3758 if–(
pWLo›
->
¥îeq
 & ~
pFrom
->
maskLo›
)!=0 ) ;

3759 if–(
pWLo›
->
maskSñf
 & 
pFrom
->
maskLo›
)!=0 ) ;

3760 if–(
pWLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 && 
pFrom
->
nRow
<10 ){

3763 
	`as£π
–10==
	`sqlôe3LogE°
(2) );

3768 
rUns‹ãd
 = 
	`sqlôe3LogE°Add
(
pWLo›
->
rSëup
,pWLo›->
rRun
 + 
pFrom
->
nRow
);

3769 
rUns‹ãd
 = 
	`sqlôe3LogE°Add
‘Uns‹ãd, 
pFrom
->rUnsorted);

3770 
nOut
 = 
pFrom
->
nRow
 + 
pWLo›
->nOut;

3771 
maskNew
 = 
pFrom
->
maskLo›
 | 
pWLo›
->
maskSñf
;

3772 if–
isOrdîed
<0 ){

3773 
isOrdîed
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,

3774 
pWInfo
->
pOrdîBy
, 
pFrom
,ÖWInfo->
w˘æFœgs
,

3775 
iLo›
, 
pWLo›
, &
ªvMask
);

3777 
ªvMask
 = 
pFrom
->
ªvLo›
;

3779 if–
isOrdîed
>=0 && isOrdîed<
nOrdîBy
 ){

3780 if–
aS‹tCo°
[
isOrdîed
]==0 ){

3781 
aS‹tCo°
[
isOrdîed
] = 
	`whîeS‹tögCo°
(

3782 
pWInfo
, 
nRowE°
, 
nOrdîBy
, 
isOrdîed


3785 
rCo°
 = 
	`sqlôe3LogE°Add
(
rUns‹ãd
, 
aS‹tCo°
[
isOrdîed
]);

3787 
	`WHERETRACE
(0x002,

3789 
aS‹tCo°
[
isOrdîed
], (
nOrdîBy
-isOrdered),ÇOrderBy,

3790 
rUns‹ãd
, 
rCo°
));

3792 
rCo°
 = 
rUns‹ãd
;

3806 
jj
=0, 
pTo
=
aTo
; jj<
nTo
; jj++,ÖTo++){

3807 if–
pTo
->
maskLo›
==
maskNew


3808 && ((
pTo
->
isOrdîed
^isOrdered)&0x80)==0

3810 
	`ã°ˇ£
–
jj
==
nTo
-1 );

3814 if–
jj
>=
nTo
 ){

3816 if–
nTo
>=
mxChoi˚


3817 && (
rCo°
>
mxCo°
 || (rCo°==mxCo° && 
rUns‹ãd
>=
mxUns‹ãd
))

3822 #ifde‡
WHERETRACE_ENABLED


3823 if–
sqlôe3WhîeTø˚
&0x4 ){

3824 
	`sqlôe3DebugPrötf
("Skip %s cost=%-3d,%3d order=%c\n",

3825 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

3826 
isOrdîed
>=0 ? isOrdered+'0' : '?');

3833 if–
nTo
<
mxChoi˚
 ){

3835 
jj
 = 
nTo
++;

3838 
jj
 = 
mxI
;

3840 
pTo
 = &
aTo
[
jj
];

3841 #ifde‡
WHERETRACE_ENABLED


3842 if–
sqlôe3WhîeTø˚
&0x4 ){

3843 
	`sqlôe3DebugPrötf
("New %s cost=%-3d,%3d order=%c\n",

3844 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

3845 
isOrdîed
>=0 ? isOrdered+'0' : '?');

3853 if–
pTo
->
rCo°
<rCo° || (pTo->rCo°=ÙCo° &&ÖTo->
nRow
<=
nOut
) ){

3854 #ifde‡
WHERETRACE_ENABLED


3855 if–
sqlôe3WhîeTø˚
&0x4 ){

3856 
	`sqlôe3DebugPrötf
(

3858 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

3859 
isOrdîed
>=0 ? isOrdered+'0' : '?');

3860 
	`sqlôe3DebugPrötf
(" vs %s cost=%-3d,%d order=%c\n",

3861 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

3862 
pTo
->
isOrdîed
>=0 ?ÖTo->isOrdered+'0' : '?');

3866 
	`ã°ˇ£
–
pTo
->
rCo°
==rCost );

3869 
	`ã°ˇ£
–
pTo
->
rCo°
==rCost+1 );

3872 #ifde‡
WHERETRACE_ENABLED


3873 if–
sqlôe3WhîeTø˚
&0x4 ){

3874 
	`sqlôe3DebugPrötf
(

3876 
	`whîeP©hName
(
pFrom
, 
iLo›
, 
pWLo›
), 
rCo°
, 
nOut
,

3877 
isOrdîed
>=0 ? isOrdered+'0' : '?');

3878 
	`sqlôe3DebugPrötf
(" was %s cost=%-3d,%3d order=%c\n",

3879 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

3880 
pTo
->
isOrdîed
>=0 ?ÖTo->isOrdered+'0' : '?');

3885 
pTo
->
maskLo›
 = 
pFrom
->maskLo› | 
pWLo›
->
maskSñf
;

3886 
pTo
->
ªvLo›
 = 
ªvMask
;

3887 
pTo
->
nRow
 = 
nOut
;

3888 
pTo
->
rCo°
 =ÑCost;

3889 
pTo
->
rUns‹ãd
 =ÑUnsorted;

3890 
pTo
->
isOrdîed
 = isOrdered;

3891 
	`mem˝y
(
pTo
->
aLo›
, 
pFrom
->aLo›, (
WhîeLo›
*)*
iLo›
);

3892 
pTo
->
aLo›
[
iLo›
] = 
pWLo›
;

3893 if–
nTo
>=
mxChoi˚
 ){

3894 
mxI
 = 0;

3895 
mxCo°
 = 
aTo
[0].
rCo°
;

3896 
mxUns‹ãd
 = 
aTo
[0].
nRow
;

3897 
jj
=1, 
pTo
=&
aTo
[1]; jj<
mxChoi˚
; jj++,ÖTo++){

3898 if–
pTo
->
rCo°
>
mxCo°


3899 || (
pTo
->
rCo°
==
mxCo°
 &&ÖTo->
rUns‹ãd
>
mxUns‹ãd
)

3901 
mxCo°
 = 
pTo
->
rCo°
;

3902 
mxUns‹ãd
 = 
pTo
->
rUns‹ãd
;

3903 
mxI
 = 
jj
;

3910 #ifde‡
WHERETRACE_ENABLED


3911 if–
sqlôe3WhîeTø˚
 & 0x02 ){

3912 
	`sqlôe3DebugPrötf
("----á·îÑound %d ----\n", 
iLo›
);

3913 
ii
=0, 
pTo
=
aTo
; ii<
nTo
; ii++,ÖTo++){

3914 
	`sqlôe3DebugPrötf
(" %s cost=%-3dÇrow=%-3d order=%c",

3915 
	`whîeP©hName
(
pTo
, 
iLo›
+1, 0),ÖTo->
rCo°
,ÖTo->
nRow
,

3916 
pTo
->
isOrdîed
>=0 ? (pTo->isOrdered+'0') : '?');

3917 if–
pTo
->
isOrdîed
>0 ){

3918 
	`sqlôe3DebugPrötf
("Ñev=0x%Œx\n", 
pTo
->
ªvLo›
);

3920 
	`sqlôe3DebugPrötf
("\n");

3927 
pFrom
 = 
aTo
;

3928 
aTo
 = 
aFrom
;

3929 
aFrom
 = 
pFrom
;

3930 
nFrom
 = 
nTo
;

3933 if–
nFrom
==0 ){

3934 
	`sqlôe3Eº‹Msg
(
pP¨£
, "no query solution");

3935 
	`sqlôe3DbFªe
(
db
, 
pS∑˚
);

3936  
SQLITE_ERROR
;

3940 
pFrom
 = 
aFrom
;

3941 
ii
=1; ii<
nFrom
; ii++){

3942 if–
pFrom
->
rCo°
>
aFrom
[
ii
].rCost )ÖFrom = &aFrom[ii];

3944 
	`as£π
–
pWInfo
->
nLevñ
==
nLo›
 );

3946 
iLo›
=0; iLo›<
nLo›
; iLoop++){

3947 
WhîeLevñ
 *
pLevñ
 = 
pWInfo
->
a
 + 
iLo›
;

3948 
pLevñ
->
pWLo›
 =ÖWLo› = 
pFrom
->
aLo›
[
iLo›
];

3949 
pLevñ
->
iFrom
 = 
pWLo›
->
iTab
;

3950 
pLevñ
->
iTabCur
 = 
pWInfo
->
pTabLi°
->
a
[pLevñ->
iFrom
].
iCurs‹
;

3952 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
)!=0

3953 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_DISTINCTBY
)==0

3954 && 
pWInfo
->
eDi°ö˘
==
WHERE_DISTINCT_NOOP


3955 && 
nRowE°


3957 
Bômask
 
nŸU£d
;

3958 
rc
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pDi°ö˘Së
, 
pFrom
,

3959 
WHERE_DISTINCTBY
, 
nLo›
-1, 
pFrom
->
aLo›
[nLo›-1], &
nŸU£d
);

3960 if–
rc
==
pWInfo
->
pDi°ö˘Së
->
nEx¥
 ){

3961 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_ORDERED
;

3964 if–
pWInfo
->
pOrdîBy
 ){

3965 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_DISTINCTBY
 ){

3966 if–
pFrom
->
isOrdîed
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

3967 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_ORDERED
;

3970 
pWInfo
->
nOBS©
 = 
pFrom
->
isOrdîed
;

3971 
pWInfo
->
ªvMask
 = 
pFrom
->
ªvLo›
;

3972 if–
pWInfo
->
nOBS©
<=0 ){

3973 
pWInfo
->
nOBS©
 = 0;

3974 if–
nLo›
>0 && (
pFrom
->
aLo›
[nLo›-1]->
wsFœgs
 & 
WHERE_ONEROW
)==0 ){

3975 
Bômask
 
m
 = 0;

3976 
rc
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pOrdîBy
, 
pFrom
,

3977 
WHERE_ORDERBY_LIMIT
, 
nLo›
-1, 
pFrom
->
aLo›
[nLo›-1], &
m
);

3978 if–
rc
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

3979 
pWInfo
->
bOrdîedI¬îLo›
 = 1;

3980 
pWInfo
->
ªvMask
 = 
m
;

3985 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_SORTBYGROUP
)

3986 && 
pWInfo
->
nOBS©
=ıWInfo->
pOrdîBy
->
nEx¥
 && 
nLo›
>0

3988 
Bômask
 
ªvMask
 = 0;

3989 
nOrdî
 = 
	`whîeP©hS©isfõsOrdîBy
(
pWInfo
,ÖWInfo->
pOrdîBy
,

3990 
pFrom
, 0, 
nLo›
-1,ÖFrom->
aLo›
[nLo›-1], &
ªvMask


3992 
	`as£π
–
pWInfo
->
s‹ãd
==0 );

3993 if–
nOrdî
==
pWInfo
->
pOrdîBy
->
nEx¥
 ){

3994 
pWInfo
->
s‹ãd
 = 1;

3995 
pWInfo
->
ªvMask
 =ÑevMask;

4001 
pWInfo
->
nRowOut
 = 
pFrom
->
nRow
;

4004 
	`sqlôe3DbFªe
(
db
, 
pS∑˚
);

4005  
SQLITE_OK
;

4006 
	}
}

4019 
	$whîeSh‹tCut
(
WhîeLo›Buûdî
 *
pBuûdî
){

4020 
WhîeInfo
 *
pWInfo
;

4021 
SrcLi°_ôem
 *
pIãm
;

4022 
WhîeCœu£
 *
pWC
;

4023 
WhîeTîm
 *
pTîm
;

4024 
WhîeLo›
 *
pLo›
;

4025 
iCur
;

4026 
j
;

4027 
TabÀ
 *
pTab
;

4028 
Index
 *
pIdx
;

4030 
pWInfo
 = 
pBuûdî
->pWInfo;

4031 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
 )  0;

4032 
	`as£π
–
pWInfo
->
pTabLi°
->
nSrc
>=1 );

4033 
pIãm
 = 
pWInfo
->
pTabLi°
->
a
;

4034 
pTab
 = 
pIãm
->pTab;

4035 if–
	`IsVútuÆ
(
pTab
) )  0;

4036 if–
pIãm
->
fg
.
isIndexedBy
 )  0;

4037 
iCur
 = 
pIãm
->
iCurs‹
;

4038 
pWC
 = &
pWInfo
->
sWC
;

4039 
pLo›
 = 
pBuûdî
->
pNew
;

4040 
pLo›
->
wsFœgs
 = 0;

4041 
pLo›
->
nSkù
 = 0;

4042 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, -1, 0, 
WO_EQ
|
WO_IS
, 0);

4043 if–
pTîm
 ){

4044 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

4045 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
|
WHERE_IPK
|
WHERE_ONEROW
;

4046 
pLo›
->
aLTîm
[0] = 
pTîm
;

4047 
pLo›
->
nLTîm
 = 1;

4048 
pLo›
->
u
.
båì
.
nEq
 = 1;

4050 
pLo›
->
rRun
 = 33;

4052 
pIdx
=
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

4053 
›Mask
;

4054 
	`as£π
–
pLo›
->
aLTîmS∑˚
=ıLo›->
aLTîm
 );

4055 if–!
	`IsUniqueIndex
(
pIdx
)

4056 || 
pIdx
->
pP¨tIdxWhîe
!=0

4057 || 
pIdx
->
nKeyCﬁ
>
	`AºaySize
(
pLo›
->
aLTîmS∑˚
)

4059 
›Mask
 = 
pIdx
->
uniqNŸNuŒ
 ? (
WO_EQ
|
WO_IS
) : WO_EQ;

4060 
j
=0; j<
pIdx
->
nKeyCﬁ
; j++){

4061 
pTîm
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, 
j
, 0, 
›Mask
, 
pIdx
);

4062 if–
pTîm
==0 ) ;

4063 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IS
 );

4064 
pLo›
->
aLTîm
[
j
] = 
pTîm
;

4066 if–
j
!=
pIdx
->
nKeyCﬁ
 ) ;

4067 
pLo›
->
wsFœgs
 = 
WHERE_COLUMN_EQ
|
WHERE_ONEROW
|
WHERE_INDEXED
;

4068 if–
pIdx
->
isCovîög
 || (
pIãm
->
cﬁU£d
 & ~
	`cﬁumnsInIndex
(pIdx))==0 ){

4069 
pLo›
->
wsFœgs
 |
WHERE_IDX_ONLY
;

4071 
pLo›
->
nLTîm
 = 
j
;

4072 
pLo›
->
u
.
båì
.
nEq
 = 
j
;

4073 
pLo›
->
u
.
båì
.
pIndex
 = 
pIdx
;

4075 
pLo›
->
rRun
 = 39;

4079 if–
pLo›
->
wsFœgs
 ){

4080 
pLo›
->
nOut
 = (
LogE°
)1;

4081 
pWInfo
->
a
[0].
pWLo›
 = 
pLo›
;

4082 
pLo›
->
maskSñf
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCur
);

4083 
pWInfo
->
a
[0].
iTabCur
 = 
iCur
;

4084 
pWInfo
->
nRowOut
 = 1;

4085 if–
pWInfo
->
pOrdîBy
 )ÖWInfo->
nOBS©
 =ÖWInfo->pOrdîBy->
nEx¥
;

4086 if–
pWInfo
->
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4087 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4089 #ifde‡
SQLITE_DEBUG


4090 
pLo›
->
cId
 = '0';

4095 
	}
}

4185 
WhîeInfo
 *
	$sqlôe3WhîeBegö
(

4186 
P¨£
 *
pP¨£
,

4187 
SrcLi°
 *
pTabLi°
,

4188 
Ex¥
 *
pWhîe
,

4189 
Ex¥Li°
 *
pOrdîBy
,

4190 
Ex¥Li°
 *
pDi°ö˘Së
,

4191 
u16
 
w˘æFœgs
,

4192 
iAuxArg


4195 
nByãWInfo
;

4196 
nTabLi°
;

4197 
WhîeInfo
 *
pWInfo
;

4198 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4199 
Bômask
 
nŸRódy
;

4200 
WhîeLo›Buûdî
 
sWLB
;

4201 
WhîeMaskSë
 *
pMaskSë
;

4202 
WhîeLevñ
 *
pLevñ
;

4203 
WhîeLo›
 *
pLo›
;

4204 
ii
;

4205 
sqlôe3
 *
db
;

4206 
rc
;

4207 
u8
 
bF‹dñëe
 = 0;

4209 
	`as£π
–(
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
)==0 || (

4210 (
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)!=0

4211 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

4215 
	`as£π
–(
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

4216 || (
w˘æFœgs
 & 
WHERE_USE_LIMIT
)==0 );

4219 
db
 = 
pP¨£
->db;

4220 
	`mem£t
(&
sWLB
, 0, (sWLB));

4223 
	`ã°ˇ£
–
pOrdîBy
 &&ÖOrdîBy->
nEx¥
==
BMS
-1 );

4224 if–
pOrdîBy
 &&ÖOrdîBy->
nEx¥
>=
BMS
 )ÖOrderBy = 0;

4225 
sWLB
.
pOrdîBy
 =ÖOrderBy;

4229 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_Di°ö˘O±
) ){

4230 
w˘æFœgs
 &~
WHERE_WANT_DISTINCT
;

4236 
	`ã°ˇ£
–
pTabLi°
->
nSrc
==
BMS
 );

4237 if–
pTabLi°
->
nSrc
>
BMS
 ){

4238 
	`sqlôe3Eº‹Msg
(
pP¨£
, "© mo° %dÅabÀ†öá joö", 
BMS
);

4247 
nTabLi°
 = (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
Ë? 1 : 
pTabLi°
->
nSrc
;

4256 
nByãWInfo
 = 
	`ROUND8
((
WhîeInfo
)+(
nTabLi°
-1)*(
WhîeLevñ
));

4257 
pWInfo
 = 
	`sqlôe3DbMÆlocZîo
(
db
, 
nByãWInfo
 + (
WhîeLo›
));

4258 if–
db
->
mÆlocFaûed
 ){

4259 
	`sqlôe3DbFªe
(
db
, 
pWInfo
);

4260 
pWInfo
 = 0;

4261 
whîeBegöEº‹
;

4263 
pWInfo
->
aiCurO√Pass
[0] =ÖWInfo->aiCurOnePass[1] = -1;

4264 
pWInfo
->
nLevñ
 = 
nTabLi°
;

4265 
pWInfo
->
pP¨£
 =ÖParse;

4266 
pWInfo
->
pTabLi°
 =ÖTabList;

4267 
pWInfo
->
pOrdîBy
 =ÖOrderBy;

4268 
pWInfo
->
pDi°ö˘Së
 =ÖDistinctSet;

4269 
pWInfo
->
iBªak
 =ÖWInfo->
iC⁄töue
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

4270 
pWInfo
->
w˘æFœgs
 = wctrlFlags;

4271 
pWInfo
->
iLimô
 = 
iAuxArg
;

4272 
pWInfo
->
ßvedNQuîyLo›
 = 
pP¨£
->
nQuîyLo›
;

4273 
	`as£π
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 );

4274 
pMaskSë
 = &
pWInfo
->
sMaskSë
;

4275 
sWLB
.
pWInfo
 =ÖWInfo;

4276 
sWLB
.
pWC
 = &
pWInfo
->
sWC
;

4277 
sWLB
.
pNew
 = (
WhîeLo›
*)(((*)
pWInfo
)+
nByãWInfo
);

4278 
	`as£π
–
	`EIGHT_BYTE_ALIGNMENT
(
sWLB
.
pNew
) );

4279 
	`whîeLo›Inô
(
sWLB
.
pNew
);

4280 #ifde‡
SQLITE_DEBUG


4281 
sWLB
.
pNew
->
cId
 = '*';

4287 
	`öôMaskSë
(
pMaskSë
);

4288 
	`sqlôe3WhîeCœu£Inô
(&
pWInfo
->
sWC
,ÖWInfo);

4289 
	`sqlôe3WhîeS∂ô
(&
pWInfo
->
sWC
, 
pWhîe
, 
TK_AND
);

4294 
ii
=0; ii<
sWLB
.
pWC
->
nTîm
; ii++){

4295 if–
nTabLi°
==0 || 
	`sqlôe3Ex¥IsC⁄°™tNŸJoö
(
sWLB
.
pWC
->
a
[
ii
].
pEx¥
) ){

4296 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
sWLB
.
pWC
->
a
[
ii
].
pEx¥
, 
pWInfo
->
iBªak
,

4297 
SQLITE_JUMPIFNULL
);

4298 
sWLB
.
pWC
->
a
[
ii
].
wtFœgs
 |
TERM_CODED
;

4304 if–
nTabLi°
==0 ){

4305 if–
pOrdîBy
 ) 
pWInfo
->
nOBS©
 =ÖOrdîBy->
nEx¥
;

4306 if–
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4307 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4325 
ii
=0; ii<
pTabLi°
->
nSrc
; ii++){

4326 
	`¸óãMask
(
pMaskSë
, 
pTabLi°
->
a
[
ii
].
iCurs‹
);

4327 
	`sqlôe3WhîeTabFuncArgs
(
pP¨£
, &
pTabLi°
->
a
[
ii
], &
pWInfo
->
sWC
);

4329 #ifde‡
SQLITE_DEBUG


4330 
ii
=0; ii<
pTabLi°
->
nSrc
; ii++){

4331 
Bômask
 
m
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
pTabLi°
->
a
[
ii
].
iCurs‹
);

4332 
	`as£π
–
m
==
	`MASKBIT
(
ii
) );

4337 
	`sqlôe3WhîeEx¥A«lyze
(
pTabLi°
, &
pWInfo
->
sWC
);

4338 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4340 if–
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
 ){

4341 if–
	`isDi°ö˘Redund™t
(
pP¨£
, 
pTabLi°
, &
pWInfo
->
sWC
, 
pDi°ö˘Së
) ){

4343 
pWInfo
->
eDi°ö˘
 = 
WHERE_DISTINCT_UNIQUE
;

4344 }if–
pOrdîBy
==0 ){

4346 
pWInfo
->
w˘æFœgs
 |
WHERE_DISTINCTBY
;

4347 
pWInfo
->
pOrdîBy
 = 
pDi°ö˘Së
;

4352 #i‡
	`deföed
(
WHERETRACE_ENABLED
)

4353 if–
sqlôe3WhîeTø˚
 & 0xffff ){

4354 
	`sqlôe3DebugPrötf
("*** O±imizî Sèπ *** (w˘æFœgs: 0x%x",
w˘æFœgs
);

4355 if–
w˘æFœgs
 & 
WHERE_USE_LIMIT
 ){

4356 
	`sqlôe3DebugPrötf
(",Üimô: %d", 
iAuxArg
);

4358 
	`sqlôe3DebugPrötf
(")\n");

4360 if–
sqlôe3WhîeTø˚
 & 0x100 ){

4361 
	`sqlôe3WhîeCœu£Pröt
(
sWLB
.
pWC
);

4365 if–
nTabLi°
!=1 || 
	`whîeSh‹tCut
(&
sWLB
)==0 ){

4366 
rc
 = 
	`whîeLo›AddAŒ
(&
sWLB
);

4367 if–
rc
 ) 
whîeBegöEº‹
;

4369 #ifde‡
WHERETRACE_ENABLED


4370 if–
sqlôe3WhîeTø˚
 ){

4371 
WhîeLo›
 *
p
;

4372 
i
;

4373 c⁄° 
zLabñ
[] = "0123456789abcdefghijklmnopqrstuvwyxz"

4375 
p
=
pWInfo
->
pLo›s
, 
i
=0;Ö;Öı->
pNextLo›
, i++){

4376 
p
->
cId
 = 
zLabñ
[
i
%(zLabel)];

4377 
	`whîeLo›Pröt
(
p
, 
sWLB
.
pWC
);

4382 
	`whîeP©hSﬁvî
(
pWInfo
, 0);

4383 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4384 if–
pWInfo
->
pOrdîBy
 ){

4385 
	`whîeP©hSﬁvî
(
pWInfo
,ÖWInfo->
nRowOut
+1);

4386 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4389 if–
pWInfo
->
pOrdîBy
==0 && (
db
->
Êags
 & 
SQLITE_Revî£Ordî
)!=0 ){

4390 
pWInfo
->
ªvMask
 = 
ALLBITS
;

4392 if–
pP¨£
->
nEº
 || 
	`NEVER
(
db
->
mÆlocFaûed
) ){

4393 
whîeBegöEº‹
;

4395 #ifde‡
WHERETRACE_ENABLED


4396 if–
sqlôe3WhîeTø˚
 ){

4397 
	`sqlôe3DebugPrötf
("---- Sﬁuti⁄ÇRow=%d", 
pWInfo
->
nRowOut
);

4398 if–
pWInfo
->
nOBS©
>0 ){

4399 
	`sqlôe3DebugPrötf
(" ORDERBY=%d,0x%Œx", 
pWInfo
->
nOBS©
,ÖWInfo->
ªvMask
);

4401  
pWInfo
->
eDi°ö˘
 ){

4402 
WHERE_DISTINCT_UNIQUE
: {

4403 
	`sqlôe3DebugPrötf
(" DISTINCT=unique");

4406 
WHERE_DISTINCT_ORDERED
: {

4407 
	`sqlôe3DebugPrötf
(" DISTINCT=ordered");

4410 
WHERE_DISTINCT_UNORDERED
: {

4411 
	`sqlôe3DebugPrötf
(" DISTINCT=unordered");

4415 
	`sqlôe3DebugPrötf
("\n");

4416 
ii
=0; ii<
pWInfo
->
nLevñ
; ii++){

4417 
	`whîeLo›Pröt
(
pWInfo
->
a
[
ii
].
pWLo›
, 
sWLB
.
pWC
);

4422 if–
pWInfo
->
nLevñ
>=2

4423 && 
pDi°ö˘Së
!=0

4424 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_OmôNo›Joö
)

4426 
Bômask
 
èbU£d
 = 
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pDi°ö˘Së
);

4427 if–
sWLB
.
pOrdîBy
 ){

4428 
èbU£d
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
sWLB
.
pOrdîBy
);

4430  
pWInfo
->
nLevñ
>=2 ){

4431 
WhîeTîm
 *
pTîm
, *
pEnd
;

4432 
pLo›
 = 
pWInfo
->
a
[pWInfo->
nLevñ
-1].
pWLo›
;

4433 if–(
pWInfo
->
pTabLi°
->
a
[
pLo›
->
iTab
].
fg
.
joöty≥
 & 
JT_LEFT
)==0 ) ;

4434 if–(
w˘æFœgs
 & 
WHERE_WANT_DISTINCT
)==0

4435 && (
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
)==0

4439 if–(
èbU£d
 & 
pLo›
->
maskSñf
)!=0 ) ;

4440 
pEnd
 = 
sWLB
.
pWC
->
a
 + sWLB.pWC->
nTîm
;

4441 
pTîm
=
sWLB
.
pWC
->
a
;ÖTîm<
pEnd
;ÖTerm++){

4442 if–(
pTîm
->
¥îeqAŒ
 & 
pLo›
->
maskSñf
)!=0

4443 && !
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
)

4448 if–
pTîm
<
pEnd
 ) ;

4449 
	`WHERETRACE
(0xffff, ("-> dr›Üo› %¯nŸ u£d\n", 
pLo›
->
cId
));

4450 
pWInfo
->
nLevñ
--;

4451 
nTabLi°
--;

4454 
	`WHERETRACE
(0xffff,("*** Optimizer Finished ***\n"));

4455 
pWInfo
->
pP¨£
->
nQuîyLo›
 +pWInfo->
nRowOut
;

4460 
	`as£π
–(
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 || 
pWInfo
->
nLevñ
==1 );

4461 if–(
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)!=0 ){

4462 
wsFœgs
 = 
pWInfo
->
a
[0].
pWLo›
->wsFlags;

4463 
bO√row
 = (
wsFœgs
 & 
WHERE_ONEROW
)!=0;

4464 if–
bO√row


4465 || ((
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
)!=0

4466 && 0==(
wsFœgs
 & 
WHERE_VIRTUALTABLE
))

4468 
pWInfo
->
eO√Pass
 = 
bO√row
 ? 
ONEPASS_SINGLE
 : 
ONEPASS_MULTI
;

4469 if–
	`HasRowid
(
pTabLi°
->
a
[0].
pTab
Ë&& (
wsFœgs
 & 
WHERE_IDX_ONLY
) ){

4470 if–
w˘æFœgs
 & 
WHERE_ONEPASS_MULTIROW
 ){

4471 
bF‹dñëe
 = 
OPFLAG_FORDELETE
;

4473 
pWInfo
->
a
[0].
pWLo›
->
wsFœgs
 = (wsFœg†& ~
WHERE_IDX_ONLY
);

4481 
ii
=0, 
pLevñ
=
pWInfo
->
a
; ii<
nTabLi°
; ii++,ÖLevel++){

4482 
TabÀ
 *
pTab
;

4483 
iDb
;

4484 
SrcLi°_ôem
 *
pTabIãm
;

4486 
pTabIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

4487 
pTab
 = 
pTabIãm
->pTab;

4488 
iDb
 = 
	`sqlôe3SchemaToIndex
(
db
, 
pTab
->
pSchema
);

4489 
pLo›
 = 
pLevñ
->
pWLo›
;

4490 if–(
pTab
->
èbFœgs
 & 
TF_EphemîÆ
)!=0 ||ÖTab->
pSñe˘
 ){

4493 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


4494 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 ){

4495 c⁄° *
pVTab
 = (c⁄° *)
	`sqlôe3GëVTabÀ
(
db
, 
pTab
);

4496 
iCur
 = 
pTabIãm
->
iCurs‹
;

4497 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VO≥n
, 
iCur
, 0, 0, 
pVTab
, 
P4_VTAB
);

4498 }if–
	`IsVútuÆ
(
pTab
) ){

4502 if–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0

4503 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0 ){

4504 
›
 = 
OP_O≥nRód
;

4505 if–
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

4506 
›
 = 
OP_O≥nWrôe
;

4507 
pWInfo
->
aiCurO√Pass
[0] = 
pTabIãm
->
iCurs‹
;

4509 
	`sqlôe3O≥nTabÀ
(
pP¨£
, 
pTabIãm
->
iCurs‹
, 
iDb
, 
pTab
, 
›
);

4510 
	`as£π
–
pTabIãm
->
iCurs‹
==
pLevñ
->
iTabCur
 );

4511 
	`ã°ˇ£
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
==
BMS
-1 );

4512 
	`ã°ˇ£
–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
==
BMS
 );

4513 if–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && 
pTab
->
nCﬁ
<
BMS
 && 
	`HasRowid
(pTab) ){

4514 
Bômask
 
b
 = 
pTabIãm
->
cﬁU£d
;

4515 
n
 = 0;

4516 ; 
b
; b=b>>1, 
n
++){}

4517 
	`sqlôe3VdbeCh™geP4
(
v
, -1, 
	`SQLITE_INT_TO_PTR
(
n
), 
P4_INT32
);

4518 
	`as£π
–
n
<=
pTab
->
nCﬁ
 );

4520 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


4521 if–
pLo›
->
u
.
båì
.
pIndex
!=0 ){

4522 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_SEEKEQ
|
bF‹dñëe
);

4526 
	`sqlôe3VdbeCh™geP5
(
v
, 
bF‹dñëe
);

4528 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


4529 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
, 
pTabIãm
->
iCurs‹
, 0, 0,

4530 (c⁄° 
u8
*)&
pTabIãm
->
cﬁU£d
, 
P4_INT64
);

4533 
	`sqlôe3TabÀLock
(
pP¨£
, 
iDb
, 
pTab
->
äum
, 0,ÖTab->
zName
);

4535 if–
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
 ){

4536 
Index
 *
pIx
 = 
pLo›
->
u
.
båì
.
pIndex
;

4537 
iIndexCur
;

4538 
›
 = 
OP_O≥nRód
;

4540 
	`as£π
–
iAuxArg
!=0 || (
pWInfo
->
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
)==0 );

4541 if–!
	`HasRowid
(
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIx
)

4542 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0

4546 
iIndexCur
 = 
pLevñ
->
iTabCur
;

4547 
›
 = 0;

4548 }if–
pWInfo
->
eO√Pass
!=
ONEPASS_OFF
 ){

4549 
Index
 *
pJ
 = 
pTabIãm
->
pTab
->
pIndex
;

4550 
iIndexCur
 = 
iAuxArg
;

4551 
	`as£π
–
w˘æFœgs
 & 
WHERE_ONEPASS_DESIRED
 );

4552  
	`ALWAYS
(
pJ
Ë&&ÖJ!=
pIx
 ){

4553 
iIndexCur
++;

4554 
pJ
 =ÖJ->
pNext
;

4556 
›
 = 
OP_O≥nWrôe
;

4557 
pWInfo
->
aiCurO√Pass
[1] = 
iIndexCur
;

4558 }if–
iAuxArg
 && (
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0 ){

4559 
iIndexCur
 = 
iAuxArg
;

4560 
›
 = 
OP_Re›íIdx
;

4562 
iIndexCur
 = 
pP¨£
->
nTab
++;

4564 
pLevñ
->
iIdxCur
 = 
iIndexCur
;

4565 
	`as£π
–
pIx
->
pSchema
==
pTab
->pSchema );

4566 
	`as£π
–
iIndexCur
>=0 );

4567 if–
›
 ){

4568 
	`sqlôe3VdbeAddOp3
(
v
, 
›
, 
iIndexCur
, 
pIx
->
äum
, 
iDb
);

4569 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pIx
);

4570 if–(
pLo›
->
wsFœgs
 & 
WHERE_CONSTRAINT
)!=0

4571 && (
pLo›
->
wsFœgs
 & (
WHERE_COLUMN_RANGE
|
WHERE_SKIPSCAN
))==0

4572 && (
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)==0

4574 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_SEEKEQ
);

4576 
	`VdbeCommít
((
v
, "%s", 
pIx
->
zName
));

4577 #ifde‡
SQLITE_ENABLE_COLUMN_USED_MASK


4579 
u64
 
cﬁU£d
 = 0;

4580 
ii
, 
jj
;

4581 
ii
=0; ii<
pIx
->
nCﬁumn
; ii++){

4582 
jj
 = 
pIx
->
aiCﬁumn
[
ii
];

4583 if–
jj
<0 ) ;

4584 if–
jj
>63 ) jj = 63;

4585 if–(
pTabIãm
->
cﬁU£d
 & 
	`MASKBIT
(
jj
))==0 ) ;

4586 
cﬁU£d
 |((
u64
)1)<<(
ii
<63 ? ii : 63);

4588 
	`sqlôe3VdbeAddOp4Dup8
(
v
, 
OP_CﬁumnsU£d
, 
iIndexCur
, 0, 0,

4589 (
u8
*)&
cﬁU£d
, 
P4_INT64
);

4594 if–
iDb
>=0 ) 
	`sqlôe3CodeVîifySchema
(
pP¨£
, iDb);

4596 
pWInfo
->
iT›
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4597 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4603 
nŸRódy
 = ~(
Bômask
)0;

4604 
ii
=0; ii<
nTabLi°
; ii++){

4605 
addrEx∂aö
;

4606 
wsFœgs
;

4607 
pLevñ
 = &
pWInfo
->
a
[
ii
];

4608 
wsFœgs
 = 
pLevñ
->
pWLo›
->wsFlags;

4609 #i‚de‡
SQLITE_OMIT_AUTOMATIC_INDEX


4610 if–(
pLevñ
->
pWLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)!=0 ){

4611 
	`c⁄°ru˘Autom©icIndex
(
pP¨£
, &
pWInfo
->
sWC
,

4612 &
pTabLi°
->
a
[
pLevñ
->
iFrom
], 
nŸRódy
,ÖLevel);

4613 if–
db
->
mÆlocFaûed
 ) 
whîeBegöEº‹
;

4616 
addrEx∂aö
 = 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

4617 
pP¨£
, 
pTabLi°
, 
pLevñ
, 
ii
,ÖLevñ->
iFrom
, 
w˘æFœgs


4619 
pLevñ
->
addrBody
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4620 
nŸRódy
 = 
	`sqlôe3WhîeCodeO√Lo›Sèπ
(
pWInfo
, 
ii
,ÇotReady);

4621 
pWInfo
->
iC⁄töue
 = 
pLevñ
->
addrC⁄t
;

4622 if–(
wsFœgs
&
WHERE_MULTI_OR
)==0 && (
w˘æFœgs
&
WHERE_OR_SUBCLAUSE
)==0 ){

4623 
	`sqlôe3WhîeAddSˇnSètus
(
v
, 
pTabLi°
, 
pLevñ
, 
addrEx∂aö
);

4628 
	`VdbeModuÀCommít
((
v
, "Begin WHERE-core"));

4629  
pWInfo
;

4632 
whîeBegöEº‹
:

4633 if–
pWInfo
 ){

4634 
pP¨£
->
nQuîyLo›
 = 
pWInfo
->
ßvedNQuîyLo›
;

4635 
	`whîeInfoFªe
(
db
, 
pWInfo
);

4638 
	}
}

4644 
	$sqlôe3WhîeEnd
(
WhîeInfo
 *
pWInfo
){

4645 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

4646 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

4647 
i
;

4648 
WhîeLevñ
 *
pLevñ
;

4649 
WhîeLo›
 *
pLo›
;

4650 
SrcLi°
 *
pTabLi°
 = 
pWInfo
->pTabList;

4651 
sqlôe3
 *
db
 = 
pP¨£
->db;

4655 
	`VdbeModuÀCommít
((
v
, "End WHERE-core"));

4656 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

4657 
i
=
pWInfo
->
nLevñ
-1; i>=0; i--){

4658 
addr
;

4659 
pLevñ
 = &
pWInfo
->
a
[
i
];

4660 
pLo›
 = 
pLevñ
->
pWLo›
;

4661 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrC⁄t
);

4662 if–
pLevñ
->
›
!=
OP_No›
 ){

4663 
	`sqlôe3VdbeAddOp3
(
v
, 
pLevñ
->
›
,ÖLevñ->
p1
,ÖLevñ->
p2
,ÖLevñ->
p3
);

4664 
	`sqlôe3VdbeCh™geP5
(
v
, 
pLevñ
->
p5
);

4665 
	`VdbeCovîage
(
v
);

4666 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_Next
);

4667 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_Pªv
);

4668 
	`VdbeCovîageIf
(
v
, 
pLevñ
->
›
==
OP_VNext
);

4670 if–
pLo›
->
wsFœgs
 & 
WHERE_IN_ABLE
 && 
pLevñ
->
u
.
ö
.
nIn
>0 ){

4671 
InLo›
 *
pIn
;

4672 
j
;

4673 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrNxt
);

4674 
j
=
pLevñ
->
u
.
ö
.
nIn
, 
pIn
=&pLevñ->u.ö.
aInLo›
[j-1]; j>0; j--,ÖIn--){

4675 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIn
->
addrInT›
+1);

4676 
	`sqlôe3VdbeAddOp2
(
v
, 
pIn
->
eEndLo›Op
,ÖIn->
iCur
,ÖIn->
addrInT›
);

4677 
	`VdbeCovîage
(
v
);

4678 
	`VdbeCovîageIf
(
v
, 
pIn
->
eEndLo›Op
==
OP_PªvIfO≥n
);

4679 
	`VdbeCovîageIf
(
v
, 
pIn
->
eEndLo›Op
==
OP_NextIfO≥n
);

4680 
	`sqlôe3VdbeJumpHîe
(
v
, 
pIn
->
addrInT›
-1);

4683 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pLevñ
->
addrBrk
);

4684 if–
pLevñ
->
addrSkù
 ){

4685 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrSkù
);

4686 
	`VdbeCommít
((
v
, "√xàskù-sˇ¿⁄ %s", 
pLo›
->
u
.
båì
.
pIndex
->
zName
));

4687 
	`sqlôe3VdbeJumpHîe
(
v
, 
pLevñ
->
addrSkù
);

4688 
	`sqlôe3VdbeJumpHîe
(
v
, 
pLevñ
->
addrSkù
-2);

4690 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


4691 if–
pLevñ
->
addrLikeRï
 ){

4692 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_De¸JumpZîo
, ()(
pLevñ
->
iLikeRïC¡r
>>1),

4693 
pLevñ
->
addrLikeRï
);

4694 
	`VdbeCovîage
(
v
);

4697 if–
pLevñ
->
iLe·Joö
 ){

4698 
addr
 = 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IfPos
, 
pLevñ
->
iLe·Joö
); 
	`VdbeCovîage
(v);

4699 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0

4700 || (
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
)!=0 );

4701 if–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0 ){

4702 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
pTabLi°
->
a
[
i
].
iCurs‹
);

4704 if–
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
 ){

4705 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_NuŒRow
, 
pLevñ
->
iIdxCur
);

4707 if–
pLevñ
->
›
==
OP_Rëu∫
 ){

4708 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
pLevñ
->
p1
,ÖLevñ->
addrFú°
);

4710 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrFú°
);

4712 
	`sqlôe3VdbeJumpHîe
(
v
, 
addr
);

4714 
	`VdbeModuÀCommít
((
v
, "End WHERE-lo›%d: %s", 
i
,

4715 
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
].
pTab
->
zName
));

4721 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
pWInfo
->
iBªak
);

4723 
	`as£π
–
pWInfo
->
nLevñ
<=
pTabLi°
->
nSrc
 );

4724 
i
=0, 
pLevñ
=
pWInfo
->
a
; i<pWInfo->
nLevñ
; i++,ÖLevel++){

4725 
k
, 
œ°
;

4726 
VdbeOp
 *
pOp
;

4727 
Index
 *
pIdx
 = 0;

4728 
SrcLi°_ôem
 *
pTabIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

4729 
TabÀ
 *
pTab
 = 
pTabIãm
->pTab;

4730 
	`as£π
–
pTab
!=0 );

4731 
pLo›
 = 
pLevñ
->
pWLo›
;

4737 if–
pTabIãm
->
fg
.
vüC‹outöe
 && !
db
->
mÆlocFaûed
 ){

4738 
	`å™¶©eCﬁumnToC›y
(
v
, 
pLevñ
->
addrBody
,ÖLevñ->
iTabCur
,

4739 
pTabIãm
->
ªgResu…
, 0);

4748 if–(
pTab
->
èbFœgs
 & 
TF_EphemîÆ
)==0

4749 && 
pTab
->
pSñe˘
==0

4750 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0

4752 
ws
 = 
pLo›
->
wsFœgs
;

4753 if–
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 && (
ws
 & 
WHERE_IDX_ONLY
)==0 ){

4754 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
pTabIãm
->
iCurs‹
);

4756 if–(
ws
 & 
WHERE_INDEXED
)!=0

4757 && (
ws
 & (
WHERE_IPK
|
WHERE_AUTO_INDEX
))==0

4758 && 
pLevñ
->
iIdxCur
!=
pWInfo
->
aiCurO√Pass
[1]

4760 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_Clo£
, 
pLevñ
->
iIdxCur
);

4775 if–
pLo›
->
wsFœgs
 & (
WHERE_INDEXED
|
WHERE_IDX_ONLY
) ){

4776 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

4777 }if–
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
 ){

4778 
pIdx
 = 
pLevñ
->
u
.
pCovidx
;

4780 if–
pIdx


4781 && (
pWInfo
->
eO√Pass
==
ONEPASS_OFF
 || !
	`HasRowid
(
pIdx
->
pTabÀ
))

4782 && !
db
->
mÆlocFaûed


4784 
œ°
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

4785 
k
 = 
pLevñ
->
addrBody
;

4786 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
k
);

4787 ; 
k
<
œ°
; k++, 
pOp
++){

4788 if–
pOp
->
p1
!=
pLevñ
->
iTabCur
 ) ;

4789 if–
pOp
->
›code
==
OP_Cﬁumn
 ){

4790 
x
 = 
pOp
->
p2
;

4791 
	`as£π
–
pIdx
->
pTabÀ
==
pTab
 );

4792 if–!
	`HasRowid
(
pTab
) ){

4793 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

4794 
x
 = 
pPk
->
aiCﬁumn
[x];

4795 
	`as£π
–
x
>=0 );

4797 
x
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, x);

4798 if–
x
>=0 ){

4799 
pOp
->
p2
 = 
x
;

4800 
pOp
->
p1
 = 
pLevñ
->
iIdxCur
;

4802 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)==0 || 
x
>=0 );

4803 }if–
pOp
->
›code
==
OP_Rowid
 ){

4804 
pOp
->
p1
 = 
pLevñ
->
iIdxCur
;

4805 
pOp
->
›code
 = 
OP_IdxRowid
;

4813 
pP¨£
->
nQuîyLo›
 = 
pWInfo
->
ßvedNQuîyLo›
;

4814 
	`whîeInfoFªe
(
db
, 
pWInfo
);

4816 
	}
}

	@whereInt.h

21 #i‡
deföed
(
SQLITE_TEST
Ë|| deföed(
SQLITE_DEBUG
)

22  
	gsqlôe3WhîeTø˚
;

24 #i‡
deföed
(
SQLITE_DEBUG
) \

25 && (
deföed
(
SQLITE_TEST
Ë|| 
	$deföed
(
SQLITE_ENABLE_WHERETRACE
))

26 
	#WHERETRACE
(
K
,
X
Ëif(
sqlôe3WhîeTø˚
&(K)Ë
sqlôe3DebugPrötf
 
	)
X

27 
	#WHERETRACE_ENABLED
 1

	)

29 
	#WHERETRACE
(
K
,
X
)

	)

34 
WhîeCœu£
 
	tWhîeCœu£
;

35 
WhîeMaskSë
 
	tWhîeMaskSë
;

36 
WhîeOrInfo
 
	tWhîeOrInfo
;

37 
WhîeAndInfo
 
	tWhîeAndInfo
;

38 
WhîeLevñ
 
	tWhîeLevñ
;

39 
WhîeLo›
 
	tWhîeLo›
;

40 
WhîeP©h
 
	tWhîeP©h
;

41 
WhîeTîm
 
	tWhîeTîm
;

42 
WhîeLo›Buûdî
 
	tWhîeLo›Buûdî
;

43 
WhîeSˇn
 
	tWhîeSˇn
;

44 
WhîeOrCo°
 
	tWhîeOrCo°
;

45 
WhîeOrSë
 
	tWhîeOrSë
;

62 
	sWhîeLevñ
 {

63 
iLe·Joö
;

64 
iTabCur
;

65 
iIdxCur
;

66 
addrBrk
;

67 
addrNxt
;

68 
addrSkù
;

69 
addrC⁄t
;

70 
addrFú°
;

71 
addrBody
;

72 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


73 
u32
 
iLikeRïC¡r
;

74 
addrLikeRï
;

76 
u8
 
iFrom
;

77 
u8
 
›
, 
p3
, 
p5
;

78 
p1
, 
p2
;

81 
nIn
;

82 
	sInLo›
 {

83 
iCur
;

84 
addrInT›
;

85 
u8
 
eEndLo›Op
;

86 } *
aInLo›
;

87 } 
ö
;

88 
Index
 *
pCovidx
;

89 } 
u
;

90 
WhîeLo›
 *
pWLo›
;

91 
Bômask
 
nŸRódy
;

92 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


93 
addrVisô
;

111 
	sWhîeLo›
 {

112 
Bômask
 
¥îeq
;

113 
Bômask
 
maskSñf
;

114 #ifde‡
SQLITE_DEBUG


115 
cId
;

117 
u8
 
iTab
;

118 
u8
 
iS‹tIdx
;

119 
LogE°
 
rSëup
;

120 
LogE°
 
rRun
;

121 
LogE°
 
nOut
;

124 
u16
 
nEq
;

125 
Index
 *
pIndex
;

126 } 
båì
;

128 
idxNum
;

129 
u8
 
√edFªe
;

130 
i8
 
isOrdîed
;

131 
u16
 
omôMask
;

132 *
idxSå
;

133 } 
vèb
;

134 } 
u
;

135 
u32
 
wsFœgs
;

136 
u16
 
nLTîm
;

137 
u16
 
nSkù
;

139 
	#WHERE_LOOP_XFER_SZ
 
	`off£tof
(
WhîeLo›
,
nLSlŸ
)

	)

140 
u16
 
nLSlŸ
;

141 
WhîeTîm
 **
aLTîm
;

142 
WhîeLo›
 *
pNextLo›
;

143 
WhîeTîm
 *
aLTîmS∑˚
[3];

150 
	sWhîeOrCo°
 {

151 
Bômask
 
¥îeq
;

152 
LogE°
 
rRun
;

153 
LogE°
 
nOut
;

160 
	#N_OR_COST
 3

	)

161 
	sWhîeOrSë
 {

162 
u16
 
n
;

163 
WhîeOrCo°
 
a
[
N_OR_COST
];

184 
	sWhîeP©h
 {

185 
Bômask
 
maskLo›
;

186 
Bômask
 
ªvLo›
;

187 
LogE°
 
nRow
;

188 
LogE°
 
rCo°
;

189 
LogE°
 
rUns‹ãd
;

190 
i8
 
isOrdîed
;

191 
WhîeLo›
 **
aLo›
;

245 
	sWhîeTîm
 {

246 
Ex¥
 *
pEx¥
;

247 
iP¨ít
;

248 
À·Curs‹
;

250 
À·Cﬁumn
;

251 
WhîeOrInfo
 *
pOrInfo
;

252 
WhîeAndInfo
 *
pAndInfo
;

253 } 
u
;

254 
LogE°
 
åuthProb
;

255 
u16
 
eO≥øt‹
;

256 
u16
 
wtFœgs
;

257 
u8
 
nChûd
;

258 
u8
 
eM©chOp
;

259 
WhîeCœu£
 *
pWC
;

260 
Bômask
 
¥îeqRight
;

261 
Bômask
 
¥îeqAŒ
;

267 
	#TERM_DYNAMIC
 0x01

	)

268 
	#TERM_VIRTUAL
 0x02

	)

269 
	#TERM_CODED
 0x04

	)

270 
	#TERM_COPIED
 0x08

	)

271 
	#TERM_ORINFO
 0x10

	)

272 
	#TERM_ANDINFO
 0x20

	)

273 
	#TERM_OR_OK
 0x40

	)

274 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


275 
	#TERM_VNULL
 0x80

	)

277 
	#TERM_VNULL
 0x00

	)

279 
	#TERM_LIKEOPT
 0x100

	)

280 
	#TERM_LIKECOND
 0x200

	)

281 
	#TERM_LIKE
 0x400

	)

282 
	#TERM_IS
 0x800

	)

288 
	sWhîeSˇn
 {

289 
WhîeCœu£
 *
pOrigWC
;

290 
WhîeCœu£
 *
pWC
;

291 c⁄° *
zCﬁlName
;

292 
Ex¥
 *
pIdxEx¥
;

293 
idxaff
;

294 
nEquiv
;

295 
iEquiv
;

296 
u32
 
›Mask
;

297 
k
;

298 
aiCur
[11];

299 
i16
 
aiCﬁumn
[11];

314 
	sWhîeCœu£
 {

315 
WhîeInfo
 *
pWInfo
;

316 
WhîeCœu£
 *
pOuãr
;

317 
u8
 
›
;

318 
nTîm
;

319 
nSlŸ
;

320 
WhîeTîm
 *
a
;

321 #i‡
	`deföed
(
SQLITE_SMALL_STACK
)

322 
WhîeTîm
 
aSètic
[1];

324 
WhîeTîm
 
aSètic
[8];

332 
	sWhîeOrInfo
 {

333 
WhîeCœu£
 
wc
;

334 
Bômask
 
ödexabÀ
;

341 
	sWhîeAndInfo
 {

342 
WhîeCœu£
 
wc
;

371 
	sWhîeMaskSë
 {

372 
n
;

373 
ix
[
BMS
];

379 
	#öôMaskSë
(
P
Ë(P)->
n
=0

	)

385 
	sWhîeLo›Buûdî
 {

386 
WhîeInfo
 *
pWInfo
;

387 
WhîeCœu£
 *
pWC
;

388 
Ex¥Li°
 *
pOrdîBy
;

389 
WhîeLo›
 *
pNew
;

390 
WhîeOrSë
 *
pOrSë
;

391 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


392 
U≈ackedRec‹d
 *
pRec
;

393 
nRecVÆid
;

407 
	sWhîeInfo
 {

408 
P¨£
 *
pP¨£
;

409 
SrcLi°
 *
pTabLi°
;

410 
Ex¥Li°
 *
pOrdîBy
;

411 
Ex¥Li°
 *
pDi°ö˘Së
;

412 
WhîeLo›
 *
pLo›s
;

413 
Bômask
 
ªvMask
;

414 
LogE°
 
nRowOut
;

415 
LogE°
 
iLimô
;

416 
u16
 
w˘æFœgs
;

417 
i8
 
nOBS©
;

418 
u8
 
s‹ãd
;

419 
u8
 
eO√Pass
;

420 
u8
 
u¡e°edTîms
;

421 
u8
 
eDi°ö˘
;

422 
u8
 
nLevñ
;

423 
u8
 
bOrdîedI¬îLo›
;

424 
iT›
;

425 
iC⁄töue
;

426 
iBªak
;

427 
ßvedNQuîyLo›
;

428 
aiCurO√Pass
[2];

429 
WhîeMaskSë
 
sMaskSë
;

430 
WhîeCœu£
 
sWC
;

431 
WhîeLevñ
 
a
[1];

439 
Bômask
 
	`sqlôe3WhîeGëMask
(
WhîeMaskSë
*,);

440 #ifde‡
WHERETRACE_ENABLED


441 
	`sqlôe3WhîeCœu£Pröt
(
WhîeCœu£
 *
pWC
);

443 
WhîeTîm
 *
	`sqlôe3WhîeFödTîm
(

444 
WhîeCœu£
 *
pWC
,

445 
iCur
,

446 
iCﬁumn
,

447 
Bômask
 
nŸRódy
,

448 
u32
 
›
,

449 
Index
 *
pIdx


453 #i‚de‡
SQLITE_OMIT_EXPLAIN


454 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

455 
P¨£
 *
pP¨£
,

456 
SrcLi°
 *
pTabLi°
,

457 
WhîeLevñ
 *
pLevñ
,

458 
iLevñ
,

459 
iFrom
,

460 
u16
 
w˘æFœgs


463 
	#sqlôe3WhîeEx∂aöO√Sˇn
(
u
,
v
,
w
,
x
,
y
,
z
Ë0

	)

465 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


466 
	`sqlôe3WhîeAddSˇnSètus
(

467 
Vdbe
 *
v
,

468 
SrcLi°
 *
pSr˛i°
,

469 
WhîeLevñ
 *
pLvl
,

470 
addrEx∂aö


473 
	#sqlôe3WhîeAddSˇnSètus
(
a
, 
b
, 
c
, 
d
Ë(()d)

	)

475 
Bômask
 
	`sqlôe3WhîeCodeO√Lo›Sèπ
(

476 
WhîeInfo
 *
pWInfo
,

477 
iLevñ
,

478 
Bômask
 
nŸRódy


482 
	`sqlôe3WhîeCœu£Inô
(
WhîeCœu£
*,
WhîeInfo
*);

483 
	`sqlôe3WhîeCœu£CÀ¨
(
WhîeCœu£
*);

484 
	`sqlôe3WhîeS∂ô
(
WhîeCœu£
*,
Ex¥
*,
u8
);

485 
Bômask
 
	`sqlôe3WhîeEx¥Ußge
(
WhîeMaskSë
*, 
Ex¥
*);

486 
Bômask
 
	`sqlôe3WhîeEx¥Li°Ußge
(
WhîeMaskSë
*, 
Ex¥Li°
*);

487 
	`sqlôe3WhîeEx¥A«lyze
(
SrcLi°
*, 
WhîeCœu£
*);

488 
	`sqlôe3WhîeTabFuncArgs
(
P¨£
*, 
SrcLi°_ôem
*, 
WhîeCœu£
*);

508 
	#WO_IN
 0x0001

	)

509 
	#WO_EQ
 0x0002

	)

510 
	#WO_LT
 (
WO_EQ
<<(
TK_LT
-
TK_EQ
))

	)

511 
	#WO_LE
 (
WO_EQ
<<(
TK_LE
-
TK_EQ
))

	)

512 
	#WO_GT
 (
WO_EQ
<<(
TK_GT
-
TK_EQ
))

	)

513 
	#WO_GE
 (
WO_EQ
<<(
TK_GE
-
TK_EQ
))

	)

514 
	#WO_MATCH
 0x0040

	)

515 
	#WO_IS
 0x0080

	)

516 
	#WO_ISNULL
 0x0100

	)

517 
	#WO_OR
 0x0200

	)

518 
	#WO_AND
 0x0400

	)

519 
	#WO_EQUIV
 0x0800

	)

520 
	#WO_NOOP
 0x1000

	)

522 
	#WO_ALL
 0x1ff‡

	)

523 
	#WO_SINGLE
 0x01f‡

	)

530 
	#WHERE_COLUMN_EQ
 0x00000001

	)

531 
	#WHERE_COLUMN_RANGE
 0x00000002

	)

532 
	#WHERE_COLUMN_IN
 0x00000004

	)

533 
	#WHERE_COLUMN_NULL
 0x00000008

	)

534 
	#WHERE_CONSTRAINT
 0x0000000‡

	)

535 
	#WHERE_TOP_LIMIT
 0x00000010

	)

536 
	#WHERE_BTM_LIMIT
 0x00000020

	)

537 
	#WHERE_BOTH_LIMIT
 0x00000030

	)

538 
	#WHERE_IDX_ONLY
 0x00000040

	)

539 
	#WHERE_IPK
 0x00000100

	)

540 
	#WHERE_INDEXED
 0x00000200

	)

541 
	#WHERE_VIRTUALTABLE
 0x00000400

	)

542 
	#WHERE_IN_ABLE
 0x00000800

	)

543 
	#WHERE_ONEROW
 0x00001000

	)

544 
	#WHERE_MULTI_OR
 0x00002000

	)

545 
	#WHERE_AUTO_INDEX
 0x00004000

	)

546 
	#WHERE_SKIPSCAN
 0x00008000

	)

547 
	#WHERE_UNQ_WANTED
 0x00010000

	)

548 
	#WHERE_PARTIALIDX
 0x00020000

	)

	@wherecode.c

20 
	~"sqlôeI¡.h
"

21 
	~"whîeI¡.h
"

23 #i‚de‡
SQLITE_OMIT_EXPLAIN


32 
	$ex∂aöAµídTîm
(

33 
SåAccum
 *
pSå
,

34 
iTîm
,

35 c⁄° *
zCﬁumn
,

36 c⁄° *
zOp


38 if–
iTîm
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, " AND ", 5);

39 
	`sqlôe3SåAccumAµídAŒ
(
pSå
, 
zCﬁumn
);

40 
	`sqlôe3SåAccumAµíd
(
pSå
, 
zOp
, 1);

41 
	`sqlôe3SåAccumAµíd
(
pSå
, "?", 1);

42 
	}
}

47 c⁄° *
	$ex∂aöIndexCﬁumnName
(
Index
 *
pIdx
, 
i
){

48 
i
 = 
pIdx
->
aiCﬁumn
[i];

49 if–
i
==
XN_EXPR
 )  "<expr>";

50 if–
i
==
XN_ROWID
 )  "rowid";

51  
pIdx
->
pTabÀ
->
aCﬁ
[
i
].
zName
;

52 
	}
}

68 
	$ex∂aöIndexR™ge
(
SåAccum
 *
pSå
, 
WhîeLo›
 *
pLo›
){

69 
Index
 *
pIndex
 = 
pLo›
->
u
.
båì
.pIndex;

70 
u16
 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

71 
u16
 
nSkù
 = 
pLo›
->nSkip;

72 
i
, 
j
;

74 if–
nEq
==0 && (
pLo›
->
wsFœgs
&(
WHERE_BTM_LIMIT
|
WHERE_TOP_LIMIT
))==0 ) ;

75 
	`sqlôe3SåAccumAµíd
(
pSå
, " (", 2);

76 
i
=0; i<
nEq
; i++){

77 c⁄° *
z
 = 
	`ex∂aöIndexCﬁumnName
(
pIndex
, 
i
);

78 if–
i
 ) 
	`sqlôe3SåAccumAµíd
(
pSå
, " AND ", 5);

79 
	`sqlôe3XPrötf
(
pSå
, 
i
>=
nSkù
 ? "%s=?" : "ANY(%s)", 
z
);

82 
j
 = 
i
;

83 if–
pLo›
->
wsFœgs
&
WHERE_BTM_LIMIT
 ){

84 c⁄° *
z
 = 
	`ex∂aöIndexCﬁumnName
(
pIndex
, 
i
);

85 
	`ex∂aöAµídTîm
(
pSå
, 
i
++, 
z
, ">");

87 if–
pLo›
->
wsFœgs
&
WHERE_TOP_LIMIT
 ){

88 c⁄° *
z
 = 
	`ex∂aöIndexCﬁumnName
(
pIndex
, 
j
);

89 
	`ex∂aöAµídTîm
(
pSå
, 
i
, 
z
, "<");

91 
	`sqlôe3SåAccumAµíd
(
pSå
, ")", 1);

92 
	}
}

103 
	$sqlôe3WhîeEx∂aöO√Sˇn
(

104 
P¨£
 *
pP¨£
,

105 
SrcLi°
 *
pTabLi°
,

106 
WhîeLevñ
 *
pLevñ
,

107 
iLevñ
,

108 
iFrom
,

109 
u16
 
w˘æFœgs


111 
ªt
 = 0;

112 #i‡!
	`deföed
(
SQLITE_DEBUG
Ë&& !deföed(
SQLITE_ENABLE_STMT_SCANSTATUS
)

113 if–
pP¨£
->
ex∂aö
==2 )

116 
SrcLi°_ôem
 *
pIãm
 = &
pTabLi°
->
a
[
pLevñ
->
iFrom
];

117 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

118 
sqlôe3
 *
db
 = 
pP¨£
->db;

119 
iId
 = 
pP¨£
->
iSñe˘Id
;

120 
isSórch
;

121 
WhîeLo›
 *
pLo›
;

122 
u32
 
Êags
;

123 *
zMsg
;

124 
SåAccum
 
°r
;

125 
zBuf
[100];

127 
pLo›
 = 
pLevñ
->
pWLo›
;

128 
Êags
 = 
pLo›
->
wsFœgs
;

129 if–(
Êags
&
WHERE_MULTI_OR
Ë|| (
w˘æFœgs
&
WHERE_OR_SUBCLAUSE
) )  0;

131 
isSórch
 = (
Êags
&(
WHERE_BTM_LIMIT
|
WHERE_TOP_LIMIT
))!=0

132 || ((
Êags
&
WHERE_VIRTUALTABLE
)==0 && (
pLo›
->
u
.
båì
.
nEq
>0))

133 || (
w˘æFœgs
&(
WHERE_ORDERBY_MIN
|
WHERE_ORDERBY_MAX
));

135 
	`sqlôe3SåAccumInô
(&
°r
, 
db
, 
zBuf
, (zBuf), 
SQLITE_MAX_LENGTH
);

136 
	`sqlôe3SåAccumAµídAŒ
(&
°r
, 
isSórch
 ? "SEARCH" : "SCAN");

137 if–
pIãm
->
pSñe˘
 ){

138 
	`sqlôe3XPrötf
(&
°r
, " SUBQUERY %d", 
pIãm
->
iSñe˘Id
);

140 
	`sqlôe3XPrötf
(&
°r
, " TABLE %s", 
pIãm
->
zName
);

143 if–
pIãm
->
zAlüs
 ){

144 
	`sqlôe3XPrötf
(&
°r
, " AS %s", 
pIãm
->
zAlüs
);

146 if–(
Êags
 & (
WHERE_IPK
|
WHERE_VIRTUALTABLE
))==0 ){

147 c⁄° *
zFmt
 = 0;

148 
Index
 *
pIdx
;

150 
	`as£π
–
pLo›
->
u
.
båì
.
pIndex
!=0 );

151 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

152 
	`as£π
–!(
Êags
&
WHERE_AUTO_INDEX
Ë|| (Êags&
WHERE_IDX_ONLY
) );

153 if–!
	`HasRowid
(
pIãm
->
pTab
Ë&& 
	`IsPrim¨yKeyIndex
(
pIdx
) ){

154 if–
isSórch
 ){

155 
zFmt
 = "PRIMARY KEY";

157 }if–
Êags
 & 
WHERE_PARTIALIDX
 ){

158 
zFmt
 = "AUTOMATIC PARTIAL COVERING INDEX";

159 }if–
Êags
 & 
WHERE_AUTO_INDEX
 ){

160 
zFmt
 = "AUTOMATIC COVERING INDEX";

161 }if–
Êags
 & 
WHERE_IDX_ONLY
 ){

162 
zFmt
 = "COVERING INDEX %s";

164 
zFmt
 = "INDEX %s";

166 if–
zFmt
 ){

167 
	`sqlôe3SåAccumAµíd
(&
°r
, " USING ", 7);

168 
	`sqlôe3XPrötf
(&
°r
, 
zFmt
, 
pIdx
->
zName
);

169 
	`ex∂aöIndexR™ge
(&
°r
, 
pLo›
);

171 }if–(
Êags
 & 
WHERE_IPK
)!=0 && (Êag†& 
WHERE_CONSTRAINT
)!=0 ){

172 c⁄° *
zR™geOp
;

173 if–
Êags
&(
WHERE_COLUMN_EQ
|
WHERE_COLUMN_IN
) ){

174 
zR™geOp
 = "=";

175 }if–(
Êags
&
WHERE_BOTH_LIMIT
)==WHERE_BOTH_LIMIT ){

176 
zR™geOp
 = ">? ANDÑowid<";

177 }if–
Êags
&
WHERE_BTM_LIMIT
 ){

178 
zR™geOp
 = ">";

180 
	`as£π
–
Êags
&
WHERE_TOP_LIMIT
);

181 
zR™geOp
 = "<";

183 
	`sqlôe3XPrötf
(&
°r
, " USING INTEGER PRIMARY KEY (rowid%s?)",
zR™geOp
);

185 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


186 if–(
Êags
 & 
WHERE_VIRTUALTABLE
)!=0 ){

187 
	`sqlôe3XPrötf
(&
°r
, " VIRTUAL TABLE INDEX %d:%s",

188 
pLo›
->
u
.
vèb
.
idxNum
,ÖLo›->u.vèb.
idxSå
);

191 #ifde‡
SQLITE_EXPLAIN_ESTIMATED_ROWS


192 if–
pLo›
->
nOut
>=10 ){

193 
	`sqlôe3XPrötf
(&
°r
, " (~%ŒuÑows)", 
	`sqlôe3LogE°ToI¡
(
pLo›
->
nOut
));

195 
	`sqlôe3SåAccumAµíd
(&
°r
, " (~1Ñow)", 9);

198 
zMsg
 = 
	`sqlôe3SåAccumFöish
(&
°r
);

199 
ªt
 = 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Ex∂aö
, 
iId
, 
iLevñ
, 
iFrom
, 
zMsg
,
P4_DYNAMIC
);

201  
ªt
;

202 
	}
}

205 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


215 
	$sqlôe3WhîeAddSˇnSètus
(

216 
Vdbe
 *
v
,

217 
SrcLi°
 *
pSr˛i°
,

218 
WhîeLevñ
 *
pLvl
,

219 
addrEx∂aö


221 c⁄° *
zObj
 = 0;

222 
WhîeLo›
 *
pLo›
 = 
pLvl
->
pWLo›
;

223 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 &&ÖLo›->
u
.
båì
.
pIndex
!=0 ){

224 
zObj
 = 
pLo›
->
u
.
båì
.
pIndex
->
zName
;

226 
zObj
 = 
pSr˛i°
->
a
[
pLvl
->
iFrom
].
zName
;

228 
	`sqlôe3VdbeSˇnSètus
(

229 
v
, 
addrEx∂aö
, 
pLvl
->
addrBody
,ÖLvl->
addrVisô
, 
pLo›
->
nOut
, 
zObj


231 
	}
}

277 
	$dißbÀTîm
(
WhîeLevñ
 *
pLevñ
, 
WhîeTîm
 *
pTîm
){

278 
nLo›
 = 0;

279  
pTîm


280 && (
pTîm
->
wtFœgs
 & 
TERM_CODED
)==0

281 && (
pLevñ
->
iLe·Joö
==0 || 
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
))

282 && (
pLevñ
->
nŸRódy
 & 
pTîm
->
¥îeqAŒ
)==0

284 if–
nLo›
 && (
pTîm
->
wtFœgs
 & 
TERM_LIKE
)!=0 ){

285 
pTîm
->
wtFœgs
 |
TERM_LIKECOND
;

287 
pTîm
->
wtFœgs
 |
TERM_CODED
;

289 if–
pTîm
->
iP¨ít
<0 ) ;

290 
pTîm
 = &pTîm->
pWC
->
a
[pTîm->
iP¨ít
];

291 
pTîm
->
nChûd
--;

292 if–
pTîm
->
nChûd
!=0 ) ;

293 
nLo›
++;

295 
	}
}

308 
	$codeAµlyAfföôy
(
P¨£
 *
pP¨£
, 
ba£
, 
n
, *
zAff
){

309 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

310 if–
zAff
==0 ){

311 
	`as£π
–
pP¨£
->
db
->
mÆlocFaûed
 );

314 
	`as£π
–
v
!=0 );

319  
n
>0 && 
zAff
[0]==
SQLITE_AFF_BLOB
 ){

320 
n
--;

321 
ba£
++;

322 
zAff
++;

324  
n
>1 && 
zAff
[n-1]==
SQLITE_AFF_BLOB
 ){

325 
n
--;

329 if–
n
>0 ){

330 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Afföôy
, 
ba£
, 
n
, 0, 
zAff
,Ç);

331 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
ba£
, 
n
);

333 
	}
}

347 
	$codeEquÆôyTîm
(

348 
P¨£
 *
pP¨£
,

349 
WhîeTîm
 *
pTîm
,

350 
WhîeLevñ
 *
pLevñ
,

351 
iEq
,

352 
bRev
,

353 
iT¨gë


355 
Ex¥
 *
pX
 = 
pTîm
->
pEx¥
;

356 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

357 
iReg
;

359 
	`as£π
–
iT¨gë
>0 );

360 if–
pX
->
›
==
TK_EQ
 ||ÖX->›==
TK_IS
 ){

361 
iReg
 = 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pX
->
pRight
, 
iT¨gë
);

362 }if–
pX
->
›
==
TK_ISNULL
 ){

363 
iReg
 = 
iT¨gë
;

364 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
iReg
);

365 #i‚de‡
SQLITE_OMIT_SUBQUERY


367 
eTy≥
;

368 
iTab
;

369 
InLo›
 *
pIn
;

370 
WhîeLo›
 *
pLo›
 = 
pLevñ
->
pWLo›
;

372 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0

373 && 
pLo›
->
u
.
båì
.
pIndex
!=0

374 && 
pLo›
->
u
.
båì
.
pIndex
->
aS‹tOrdî
[
iEq
]

376 
	`ã°ˇ£
–
iEq
==0 );

377 
	`ã°ˇ£
–
bRev
 );

378 
bRev
 = !bRev;

380 
	`as£π
–
pX
->
›
==
TK_IN
 );

381 
iReg
 = 
iT¨gë
;

382 
eTy≥
 = 
	`sqlôe3FödInIndex
(
pP¨£
, 
pX
, 
IN_INDEX_LOOP
, 0);

383 if–
eTy≥
==
IN_INDEX_INDEX_DESC
 ){

384 
	`ã°ˇ£
–
bRev
 );

385 
bRev
 = !bRev;

387 
iTab
 = 
pX
->
iTabÀ
;

388 
	`sqlôe3VdbeAddOp2
(
v
, 
bRev
 ? 
OP_La°
 : 
OP_Rewöd
, 
iTab
, 0);

389 
	`VdbeCovîageIf
(
v
, 
bRev
);

390 
	`VdbeCovîageIf
(
v
, !
bRev
);

391 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
)==0 );

392 
pLo›
->
wsFœgs
 |
WHERE_IN_ABLE
;

393 if–
pLevñ
->
u
.
ö
.
nIn
==0 ){

394 
pLevñ
->
addrNxt
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

396 
pLevñ
->
u
.
ö
.
nIn
++;

397 
pLevñ
->
u
.
ö
.
aInLo›
 =

398 
	`sqlôe3DbRóŒocOrFªe
(
pP¨£
->
db
, 
pLevñ
->
u
.
ö
.
aInLo›
,

399 (
pLevñ
->
u
.
ö
.
aInLo›
[0])*pLevñ->u.ö.
nIn
);

400 
pIn
 = 
pLevñ
->
u
.
ö
.
aInLo›
;

401 if–
pIn
 ){

402 
pIn
 +
pLevñ
->
u
.
ö
.
nIn
 - 1;

403 
pIn
->
iCur
 = 
iTab
;

404 if–
eTy≥
==
IN_INDEX_ROWID
 ){

405 
pIn
->
addrInT›
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iTab
, 
iReg
);

407 
pIn
->
addrInT›
 = 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iTab
, 0, 
iReg
);

409 
pIn
->
eEndLo›Op
 = 
bRev
 ? 
OP_PªvIfO≥n
 : 
OP_NextIfO≥n
;

410 
	`sqlôe3VdbeAddOp1
(
v
, 
OP_IsNuŒ
, 
iReg
); 
	`VdbeCovîage
(v);

412 
pLevñ
->
u
.
ö
.
nIn
 = 0;

416 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

417  
iReg
;

418 
	}
}

465 
	$codeAŒEquÆôyTîms
(

466 
P¨£
 *
pP¨£
,

467 
WhîeLevñ
 *
pLevñ
,

468 
bRev
,

469 
nExåaReg
,

470 **
pzAff


472 
u16
 
nEq
;

473 
u16
 
nSkù
;

474 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

475 
Index
 *
pIdx
;

476 
WhîeTîm
 *
pTîm
;

477 
WhîeLo›
 *
pLo›
;

478 
j
;

479 
ªgBa£
;

480 
nReg
;

481 *
zAff
;

484 
pLo›
 = 
pLevñ
->
pWLo›
;

485 
	`as£π
–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)==0 );

486 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

487 
nSkù
 = 
pLo›
->nSkip;

488 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

489 
	`as£π
–
pIdx
!=0 );

493 
ªgBa£
 = 
pP¨£
->
nMem
 + 1;

494 
nReg
 = 
pLo›
->
u
.
båì
.
nEq
 + 
nExåaReg
;

495 
pP¨£
->
nMem
 +
nReg
;

497 
zAff
 = 
	`sqlôe3DbSåDup
(
pP¨£
->
db
,
	`sqlôe3IndexAfföôySå
’P¨£->db,
pIdx
));

498 
	`as£π
–
zAff
!=0 || 
pP¨£
->
db
->
mÆlocFaûed
 );

500 if–
nSkù
 ){

501 
iIdxCur
 = 
pLevñ
->iIdxCur;

502 
	`sqlôe3VdbeAddOp1
(
v
, (
bRev
?
OP_La°
:
OP_Rewöd
), 
iIdxCur
);

503 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

504 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

505 
	`VdbeCommít
((
v
, "begö skù-sˇ¿⁄ %s", 
pIdx
->
zName
));

506 
j
 = 
	`sqlôe3VdbeAddOp0
(
v
, 
OP_GŸo
);

507 
pLevñ
->
addrSkù
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, (
bRev
?
OP_SìkLT
:
OP_SìkGT
),

508 
iIdxCur
, 0, 
ªgBa£
, 
nSkù
);

509 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

510 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

511 
	`sqlôe3VdbeJumpHîe
(
v
, 
j
);

512 
j
=0; j<
nSkù
; j++){

513 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
j
, 
ªgBa£
+j);

514 
	`ã°ˇ£
–
pIdx
->
aiCﬁumn
[
j
]==
XN_EXPR
 );

515 
	`VdbeCommít
((
v
, "%s", 
	`ex∂aöIndexCﬁumnName
(
pIdx
, 
j
)));

521 
	`as£π
–
zAff
==0 || ()
	`°æí
(zAff)>=
nEq
 );

522 
j
=
nSkù
; j<
nEq
; j++){

523 
r1
;

524 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

525 
	`as£π
–
pTîm
!=0 );

528 
	`ã°ˇ£
–(
pTîm
->
wtFœgs
 & 
TERM_CODED
)!=0 );

529 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

530 
r1
 = 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 
j
, 
bRev
, 
ªgBa£
+j);

531 if–
r1
!=
ªgBa£
+
j
 ){

532 if–
nReg
==1 ){

533 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
ªgBa£
);

534 
ªgBa£
 = 
r1
;

536 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_SC›y
, 
r1
, 
ªgBa£
+
j
);

539 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_ISNULL
 );

540 
	`ã°ˇ£
–
pTîm
->
eO≥øt‹
 & 
WO_IN
 );

541 if–(
pTîm
->
eO≥øt‹
 & (
WO_ISNULL
|
WO_IN
))==0 ){

542 
Ex¥
 *
pRight
 = 
pTîm
->
pEx¥
->pRight;

543 if–(
pTîm
->
wtFœgs
 & 
TERM_IS
)==0 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
) ){

544 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
j
, 
pLevñ
->
addrBrk
);

545 
	`VdbeCovîage
(
v
);

547 if–
zAff
 ){

548 if–
	`sqlôe3Com∑ªAfföôy
(
pRight
, 
zAff
[
j
])==
SQLITE_AFF_BLOB
 ){

549 
zAff
[
j
] = 
SQLITE_AFF_BLOB
;

551 if–
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(
pRight
, 
zAff
[
j
]) ){

552 
zAff
[
j
] = 
SQLITE_AFF_BLOB
;

557 *
pzAff
 = 
zAff
;

558  
ªgBa£
;

559 
	}
}

561 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


579 
	$whîeLikeO±imiz©i⁄SåögFixup
(

580 
Vdbe
 *
v
,

581 
WhîeLevñ
 *
pLevñ
,

582 
WhîeTîm
 *
pTîm


584 if–
pTîm
->
wtFœgs
 & 
TERM_LIKEOPT
 ){

585 
VdbeOp
 *
pOp
;

586 
	`as£π
–
pLevñ
->
iLikeRïC¡r
>0 );

587 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, -1);

588 
	`as£π
–
pOp
!=0 );

589 
	`as£π
–
pOp
->
›code
==
OP_Såög8


590 || 
pTîm
->
pWC
->
pWInfo
->
pP¨£
->
db
->
mÆlocFaûed
 );

591 
pOp
->
p3
 = ()(
pLevñ
->
iLikeRïC¡r
>>1);

592 
pOp
->
p5
 = (
u8
)(
pLevñ
->
iLikeRïC¡r
&1);

594 
	}
}

596 
	#whîeLikeO±imiz©i⁄SåögFixup
(
A
,
B
,
C
)

	)

599 #ifde‡
SQLITE_ENABLE_CURSOR_HINTS


605 
	sCCurHöt
 {

606 
	miTabCur
;

607 
	miIdxCur
;

608 
Index
 *
	mpIdx
;

617 
	$codeCurs‹HötCheckEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

618 
CCurHöt
 *
pHöt
 = 
pWÆkî
->
u
.
pCCurHöt
;

619 
	`as£π
–
pHöt
->
pIdx
!=0 );

620 if–
pEx¥
->
›
==
TK_COLUMN


621 && 
pEx¥
->
iTabÀ
==
pHöt
->
iTabCur


622 && 
	`sqlôe3CﬁumnOfIndex
(
pHöt
->
pIdx
, 
pEx¥
->
iCﬁumn
)<0

624 
pWÆkî
->
eCode
 = 1;

626  
WRC_C⁄töue
;

627 
	}
}

644 
	$codeCurs‹HötIsOrFun˘i⁄
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

645 if–
pEx¥
->
›
==
TK_IS


646 || 
pEx¥
->
›
==
TK_ISNULL
 ||ÖEx¥->›==
TK_ISNOT


647 || 
pEx¥
->
›
==
TK_NOTNULL
 ||ÖEx¥->›==
TK_CASE


649 
pWÆkî
->
eCode
 = 1;

650 }if–
pEx¥
->
›
==
TK_FUNCTION
 ){

651 
d1
;

652 
d2
[3];

653 if–0==
	`sqlôe3IsLikeFun˘i⁄
(
pWÆkî
->
pP¨£
->
db
, 
pEx¥
, &
d1
, 
d2
) ){

654 
pWÆkî
->
eCode
 = 1;

658  
WRC_C⁄töue
;

659 
	}
}

679 
	$codeCurs‹HötFixEx¥
(
WÆkî
 *
pWÆkî
, 
Ex¥
 *
pEx¥
){

680 
rc
 = 
WRC_C⁄töue
;

681 
CCurHöt
 *
pHöt
 = 
pWÆkî
->
u
.
pCCurHöt
;

682 if–
pEx¥
->
›
==
TK_COLUMN
 ){

683 if–
pEx¥
->
iTabÀ
!=
pHöt
->
iTabCur
 ){

684 
Vdbe
 *
v
 = 
pWÆkî
->
pP¨£
->
pVdbe
;

685 
ªg
 = ++
pWÆkî
->
pP¨£
->
nMem
;

686 
	`sqlôe3Ex¥CodeGëCﬁumnOfTabÀ
(

687 
v
, 
pEx¥
->
pTab
,ÖEx¥->
iTabÀ
,ÖEx¥->
iCﬁumn
, 
ªg


689 
pEx¥
->
›
 = 
TK_REGISTER
;

690 
pEx¥
->
iTabÀ
 = 
ªg
;

691 }if–
pHöt
->
pIdx
!=0 ){

692 
pEx¥
->
iTabÀ
 = 
pHöt
->
iIdxCur
;

693 
pEx¥
->
iCﬁumn
 = 
	`sqlôe3CﬁumnOfIndex
(
pHöt
->
pIdx
,ÖExpr->iColumn);

694 
	`as£π
–
pEx¥
->
iCﬁumn
>=0 );

696 }if–
pEx¥
->
›
==
TK_AGG_FUNCTION
 ){

704 
rc
 = 
WRC_Pru√
;

706  
rc
;

707 
	}
}

712 
	$codeCurs‹Höt
(

713 
SrcLi°_ôem
 *
pTabIãm
,

714 
WhîeInfo
 *
pWInfo
,

715 
WhîeLevñ
 *
pLevñ
,

716 
WhîeTîm
 *
pEndR™ge


718 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

719 
sqlôe3
 *
db
 = 
pP¨£
->db;

720 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

721 
Ex¥
 *
pEx¥
 = 0;

722 
WhîeLo›
 *
pLo›
 = 
pLevñ
->
pWLo›
;

723 
iCur
;

724 
WhîeCœu£
 *
pWC
;

725 
WhîeTîm
 *
pTîm
;

726 
i
, 
j
;

727 
CCurHöt
 
sHöt
;

728 
WÆkî
 
sWÆkî
;

730 if–
	`O±imiz©i⁄DißbÀd
(
db
, 
SQLITE_Curs‹Höts
) ) ;

731 
iCur
 = 
pLevñ
->
iTabCur
;

732 
	`as£π
–
iCur
==
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
].
iCurs‹
 );

733 
sHöt
.
iTabCur
 = 
iCur
;

734 
sHöt
.
iIdxCur
 = 
pLevñ
->iIdxCur;

735 
sHöt
.
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

736 
	`mem£t
(&
sWÆkî
, 0, (sWalker));

737 
sWÆkî
.
pP¨£
 =ÖParse;

738 
sWÆkî
.
u
.
pCCurHöt
 = &
sHöt
;

739 
pWC
 = &
pWInfo
->
sWC
;

740 
i
=0; i<
pWC
->
nTîm
; i++){

741 
pTîm
 = &
pWC
->
a
[
i
];

742 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

743 if–
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
 ) ;

767 if–
pTabIãm
->
fg
.
joöty≥
 & 
JT_LEFT
 ){

768 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

769 if–!
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
)

770 || 
pEx¥
->
iRightJoöTabÀ
!=
pTabIãm
->
iCurs‹


772 
sWÆkî
.
eCode
 = 0;

773 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötIsOrFun˘i⁄
;

774 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pTîm
->
pEx¥
);

775 if–
sWÆkî
.
eCode
 ) ;

778 if–
	`Ex¥HasPr›îty
(
pTîm
->
pEx¥
, 
EP_FromJoö
) ) ;

784 if–
pLo›
->
u
.
båì
.
nEq
==0 && 
pTîm
!=
pEndR™ge
 ){

785 
j
=0; j<
pLo›
->
nLTîm
 &&ÖLo›->
aLTîm
[j]!=
pTîm
; j++){}

786 if–
j
<
pLo›
->
nLTîm
 ) ;

790 if–
	`sqlôe3Ex¥C⁄èösSubquîy
(
pTîm
->
pEx¥
) ) ;

794 if–
sHöt
.
pIdx
!=0 ){

795 
sWÆkî
.
eCode
 = 0;

796 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötCheckEx¥
;

797 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pTîm
->
pEx¥
);

798 if–
sWÆkî
.
eCode
 ) ;

802 
pEx¥
 = 
	`sqlôe3Ex¥And
(
db
,ÖEx¥, 
	`sqlôe3Ex¥Dup
(db, 
pTîm
->pExpr, 0));

804 if–
pEx¥
!=0 ){

805 
sWÆkî
.
xEx¥CÆlback
 = 
codeCurs‹HötFixEx¥
;

806 
	`sqlôe3WÆkEx¥
(&
sWÆkî
, 
pEx¥
);

807 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_Curs‹Höt
,

808 (
sHöt
.
pIdx
 ? sHöt.
iIdxCur
 : sHöt.
iTabCur
), 0, 0,

809 (c⁄° *)
pEx¥
, 
P4_EXPR
);

811 
	}
}

813 
	#codeCurs‹Höt
(
A
,
B
,
C
,
D
Ë

	)

834 
	$codeDe„ºedSìk
(

835 
WhîeInfo
 *
pWInfo
,

836 
Index
 *
pIdx
,

837 
iCur
,

838 
iIdxCur


840 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

841 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

843 
	`as£π
–
iIdxCur
>0 );

844 
	`as£π
–
pIdx
->
aiCﬁumn
[pIdx->
nCﬁumn
-1]==-1 );

846 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Sìk
, 
iIdxCur
, 0, 
iCur
);

847 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)

848 && 
	`DbMaskAŒZîo
(
	`sqlôe3P¨£T›Àvñ
(
pP¨£
)->
wrôeMask
)

850 
i
;

851 
TabÀ
 *
pTab
 = 
pIdx
->
pTabÀ
;

852 *
ai
 = (*)
	`sqlôe3DbMÆlocZîo
(
pP¨£
->
db
, ()*(
pTab
->
nCﬁ
+1));

853 if–
ai
 ){

854 
ai
[0] = 
pTab
->
nCﬁ
;

855 
i
=0; i<
pIdx
->
nCﬁumn
-1; i++){

856 
	`as£π
–
pIdx
->
aiCﬁumn
[
i
]<
pTab
->
nCﬁ
 );

857 if–
pIdx
->
aiCﬁumn
[
i
]>=0 ) 
ai
[pIdx->aiColumn[i]+1] = i+1;

859 
	`sqlôe3VdbeCh™geP4
(
v
, -1, (*)
ai
, 
P4_INTARRAY
);

862 
	}
}

868 
Bômask
 
	$sqlôe3WhîeCodeO√Lo›Sèπ
(

869 
WhîeInfo
 *
pWInfo
,

870 
iLevñ
,

871 
Bômask
 
nŸRódy


873 
j
, 
k
;

874 
iCur
;

875 
addrNxt
;

876 
omôTabÀ
;

877 
bRev
;

878 
WhîeLevñ
 *
pLevñ
;

879 
WhîeLo›
 *
pLo›
;

880 
WhîeCœu£
 *
pWC
;

881 
WhîeTîm
 *
pTîm
;

882 
P¨£
 *
pP¨£
;

883 
sqlôe3
 *
db
;

884 
Vdbe
 *
v
;

885 
SrcLi°_ôem
 *
pTabIãm
;

886 
addrBrk
;

887 
addrC⁄t
;

888 
iRowidReg
 = 0;

889 
iRñó£Reg
 = 0;

891 
pP¨£
 = 
pWInfo
->pParse;

892 
v
 = 
pP¨£
->
pVdbe
;

893 
pWC
 = &
pWInfo
->
sWC
;

894 
db
 = 
pP¨£
->db;

895 
pLevñ
 = &
pWInfo
->
a
[
iLevñ
];

896 
pLo›
 = 
pLevñ
->
pWLo›
;

897 
pTabIãm
 = &
pWInfo
->
pTabLi°
->
a
[
pLevñ
->
iFrom
];

898 
iCur
 = 
pTabIãm
->
iCurs‹
;

899 
pLevñ
->
nŸRódy
 =ÇŸRódy & ~
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCur
);

900 
bRev
 = (
pWInfo
->
ªvMask
>>
iLevñ
)&1;

901 
omôTabÀ
 = (
pLo›
->
wsFœgs
 & 
WHERE_IDX_ONLY
)!=0

902 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)==0;

903 
	`VdbeModuÀCommít
((
v
, "Begö WHERE-lo›%d: %s",
iLevñ
,
pTabIãm
->
pTab
->
zName
));

915 
addrBrk
 = 
pLevñ
->addrBrk =ÖLevñ->
addrNxt
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

916 
addrC⁄t
 = 
pLevñ
->addrC⁄à
	`sqlôe3VdbeMakeLabñ
(
v
);

922 if–
pLevñ
->
iFrom
>0 && (
pTabIãm
[0].
fg
.
joöty≥
 & 
JT_LEFT
)!=0 ){

923 
pLevñ
->
iLe·Joö
 = ++
pP¨£
->
nMem
;

924 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
pLevñ
->
iLe·Joö
);

925 
	`VdbeCommít
((
v
, "init LEFT JOINÇo-match flag"));

929 if–
pTabIãm
->
fg
.
vüC‹outöe
 ){

930 
ªgYõld
 = 
pTabIãm
->
ªgRëu∫
;

931 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_InôC‹outöe
, 
ªgYõld
, 0, 
pTabIãm
->
addrFûlSub
);

932 
pLevñ
->
p2
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Yõld
, 
ªgYõld
, 
addrBrk
);

933 
	`VdbeCovîage
(
v
);

934 
	`VdbeCommít
((
v
, "√xàrow o‡\"%s\"", 
pTabIãm
->
pTab
->
zName
));

935 
pLevñ
->
›
 = 
OP_GŸo
;

938 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


939 if–(
pLo›
->
wsFœgs
 & 
WHERE_VIRTUALTABLE
)!=0 ){

943 
iReg
;

944 
addrNŸFound
;

945 
nC⁄°øöt
 = 
pLo›
->
nLTîm
;

946 
iIn
;

948 
	`sqlôe3Ex¥CachePush
(
pP¨£
);

949 
iReg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nC⁄°øöt
+2);

950 
addrNŸFound
 = 
pLevñ
->
addrBrk
;

951 
j
=0; j<
nC⁄°øöt
; j++){

952 
iT¨gë
 = 
iReg
+
j
+2;

953 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

954 if–
	`NEVER
(
pTîm
==0) ) ;

955 if–
pTîm
->
eO≥øt‹
 & 
WO_IN
 ){

956 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 
j
, 
bRev
, 
iT¨gë
);

957 
addrNŸFound
 = 
pLevñ
->
addrNxt
;

959 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pTîm
->
pEx¥
->
pRight
, 
iT¨gë
);

962 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
pLo›
->
u
.
vèb
.
idxNum
, 
iReg
);

963 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 
nC⁄°øöt
, 
iReg
+1);

964 
	`sqlôe3VdbeAddOp4
(
v
, 
OP_VFûãr
, 
iCur
, 
addrNŸFound
, 
iReg
,

965 
pLo›
->
u
.
vèb
.
idxSå
,

966 
pLo›
->
u
.
vèb
.
√edFªe
 ? 
P4_MPRINTF
 : 
P4_STATIC
);

967 
	`VdbeCovîage
(
v
);

968 
pLo›
->
u
.
vèb
.
√edFªe
 = 0;

969 
pLevñ
->
p1
 = 
iCur
;

970 
pLevñ
->
›
 = 
pWInfo
->
eO√Pass
 ? 
OP_No›
 : 
OP_VNext
;

971 
pLevñ
->
p2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

972 
iIn
 = 
pLevñ
->
u
.
ö
.
nIn
;

973 
j
=
nC⁄°øöt
-1; j>=0; j--){

974 
pTîm
 = 
pLo›
->
aLTîm
[
j
];

975 if–
j
<16 && (
pLo›
->
u
.
vèb
.
omôMask
>>j)&1 ){

976 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

977 }if–(
pTîm
->
eO≥øt‹
 & 
WO_IN
)!=0 ){

978 
Ex¥
 *
pCom∑ª
;

979 
Ex¥
 *
pRight
;

980 
VdbeOp
 *
pOp
;

986 
	`as£π
–
pLevñ
->
u
.
ö
.
aInLo›
!=0 || 
db
->
mÆlocFaûed
 );

987 if–!
db
->
mÆlocFaûed
 ){

988 
	`as£π
–
iIn
>0 );

989 
pOp
 = 
	`sqlôe3VdbeGëOp
(
v
, 
pLevñ
->
u
.
ö
.
aInLo›
[--
iIn
].
addrInT›
);

990 
	`as£π
–
pOp
->
›code
==
OP_Cﬁumn
 ||ÖOp->›code==
OP_Rowid
 );

991 
	`as£π
–
pOp
->
›code
!=
OP_Cﬁumn
 ||ÖOp->
p3
==
iReg
+
j
+2 );

992 
	`as£π
–
pOp
->
›code
!=
OP_Rowid
 ||ÖOp->
p2
==
iReg
+
j
+2 );

993 
	`ã°ˇ£
–
pOp
->
›code
==
OP_Rowid
 );

994 
	`sqlôe3VdbeAddOp3
(
v
, 
pOp
->
›code
,ÖOp->
p1
,ÖOp->
p2
,ÖOp->
p3
);

999 
pCom∑ª
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 0, 0, 0);

1000 
	`as£π
–
pCom∑ª
!=0 || 
db
->
mÆlocFaûed
 );

1001 if–
pCom∑ª
 ){

1002 
pCom∑ª
->
pLe·
 = 
pTîm
->
pEx¥
->pLeft;

1003 
pCom∑ª
->
pRight
 =ÖRighà
	`sqlôe3Ex¥
(
db
, 
TK_REGISTER
, 0);

1004 if–
pRight
 ){

1005 
pRight
->
iTabÀ
 = 
iReg
+
j
+2;

1006 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pCom∑ª
, 
pLevñ
->
addrC⁄t
, 0);

1008 
pCom∑ª
->
pLe·
 = 0;

1009 
	`sqlôe3Ex¥Dñëe
(
db
, 
pCom∑ª
);

1020 
	`sqlôe3Ex¥CacheP›
(
pP¨£
);

1024 if–(
pLo›
->
wsFœgs
 & 
WHERE_IPK
)!=0

1025 && (
pLo›
->
wsFœgs
 & (
WHERE_COLUMN_IN
|
WHERE_COLUMN_EQ
))!=0

1032 
	`as£π
–
pLo›
->
u
.
båì
.
nEq
==1 );

1033 
pTîm
 = 
pLo›
->
aLTîm
[0];

1034 
	`as£π
–
pTîm
!=0 );

1035 
	`as£π
–
pTîm
->
pEx¥
!=0 );

1036 
	`as£π
–
omôTabÀ
==0 );

1037 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1038 
iRñó£Reg
 = ++
pP¨£
->
nMem
;

1039 
iRowidReg
 = 
	`codeEquÆôyTîm
(
pP¨£
, 
pTîm
, 
pLevñ
, 0, 
bRev
, 
iRñó£Reg
);

1040 if–
iRowidReg
!=
iRñó£Reg
 ) 
	`sqlôe3Rñó£TempReg
(
pP¨£
, iReleaseReg);

1041 
addrNxt
 = 
pLevñ
->addrNxt;

1042 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_SìkRowid
, 
iCur
, 
addrNxt
, 
iRowidReg
);

1043 
	`VdbeCovîage
(
v
);

1044 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
iRowidReg
, 1);

1045 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1046 
	`VdbeCommít
((
v
, "pk"));

1047 
pLevñ
->
›
 = 
OP_No›
;

1048 }if–(
pLo›
->
wsFœgs
 & 
WHERE_IPK
)!=0

1049 && (
pLo›
->
wsFœgs
 & 
WHERE_COLUMN_RANGE
)!=0

1053 
ã°Op
 = 
OP_No›
;

1054 
°¨t
;

1055 
memEndVÆue
 = 0;

1056 
WhîeTîm
 *
pSèπ
, *
pEnd
;

1058 
	`as£π
–
omôTabÀ
==0 );

1059 
j
 = 0;

1060 
pSèπ
 = 
pEnd
 = 0;

1061 if–
pLo›
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ) 
pSèπ
 =ÖLo›->
aLTîm
[
j
++];

1062 if–
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
 ) 
pEnd
 =ÖLo›->
aLTîm
[
j
++];

1063 
	`as£π
–
pSèπ
!=0 || 
pEnd
!=0 );

1064 if–
bRev
 ){

1065 
pTîm
 = 
pSèπ
;

1066 
pSèπ
 = 
pEnd
;

1067 
pEnd
 = 
pTîm
;

1069 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 
pEnd
);

1070 if–
pSèπ
 ){

1071 
Ex¥
 *
pX
;

1072 
r1
, 
rTemp
;

1077 c⁄° 
u8
 
aMoveOp
[] = {

1078  
OP_SìkGT
,

1079  
OP_SìkLE
,

1080  
OP_SìkLT
,

1081  
OP_SìkGE


1083 
	`as£π
–
TK_LE
==
TK_GT
+1 );

1084 
	`as£π
–
TK_LT
==
TK_GT
+2 );

1085 
	`as£π
–
TK_GE
==
TK_GT
+3 );

1087 
	`as£π
–(
pSèπ
->
wtFœgs
 & 
TERM_VNULL
)==0 );

1088 
	`ã°ˇ£
–
pSèπ
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1089 
pX
 = 
pSèπ
->
pEx¥
;

1090 
	`as£π
–
pX
!=0 );

1091 
	`ã°ˇ£
–
pSèπ
->
À·Curs‹
!=
iCur
 );

1092 
r1
 = 
	`sqlôe3Ex¥CodeTemp
(
pP¨£
, 
pX
->
pRight
, &
rTemp
);

1093 
	`sqlôe3VdbeAddOp3
(
v
, 
aMoveOp
[
pX
->
›
-
TK_GT
], 
iCur
, 
addrBrk
, 
r1
);

1094 
	`VdbeCommít
((
v
, "pk"));

1095 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_GT
);

1096 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_LE
);

1097 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_LT
);

1098 
	`VdbeCovîageIf
(
v
, 
pX
->
›
==
TK_GE
);

1099 
	`sqlôe3Ex¥CacheAfföôyCh™ge
(
pP¨£
, 
r1
, 1);

1100 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
rTemp
);

1101 
	`dißbÀTîm
(
pLevñ
, 
pSèπ
);

1103 
	`sqlôe3VdbeAddOp2
(
v
, 
bRev
 ? 
OP_La°
 : 
OP_Rewöd
, 
iCur
, 
addrBrk
);

1104 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

1105 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

1107 if–
pEnd
 ){

1108 
Ex¥
 *
pX
;

1109 
pX
 = 
pEnd
->
pEx¥
;

1110 
	`as£π
–
pX
!=0 );

1111 
	`as£π
–(
pEnd
->
wtFœgs
 & 
TERM_VNULL
)==0 );

1112 
	`ã°ˇ£
–
pEnd
->
À·Curs‹
!=
iCur
 );

1113 
	`ã°ˇ£
–
pEnd
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1114 
memEndVÆue
 = ++
pP¨£
->
nMem
;

1115 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pX
->
pRight
, 
memEndVÆue
);

1116 if–
pX
->
›
==
TK_LT
 ||ÖX->›==
TK_GT
 ){

1117 
ã°Op
 = 
bRev
 ? 
OP_Le
 : 
OP_Ge
;

1119 
ã°Op
 = 
bRev
 ? 
OP_Lt
 : 
OP_Gt
;

1121 
	`dißbÀTîm
(
pLevñ
, 
pEnd
);

1123 
°¨t
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1124 
pLevñ
->
›
 = 
bRev
 ? 
OP_Pªv
 : 
OP_Next
;

1125 
pLevñ
->
p1
 = 
iCur
;

1126 
pLevñ
->
p2
 = 
°¨t
;

1127 
	`as£π
–
pLevñ
->
p5
==0 );

1128 if–
ã°Op
!=
OP_No›
 ){

1129 
iRowidReg
 = ++
pP¨£
->
nMem
;

1130 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Rowid
, 
iCur
, 
iRowidReg
);

1131 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1132 
	`sqlôe3VdbeAddOp3
(
v
, 
ã°Op
, 
memEndVÆue
, 
addrBrk
, 
iRowidReg
);

1133 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Le
);

1134 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Lt
);

1135 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Ge
);

1136 
	`VdbeCovîageIf
(
v
, 
ã°Op
==
OP_Gt
);

1137 
	`sqlôe3VdbeCh™geP5
(
v
, 
SQLITE_AFF_NUMERIC
 | 
SQLITE_JUMPIFNULL
);

1139 }if–
pLo›
->
wsFœgs
 & 
WHERE_INDEXED
 ){

1171 c⁄° 
u8
 
aSèπOp
[] = {

1174 
OP_Rewöd
,

1175 
OP_La°
,

1176 
OP_SìkGT
,

1177 
OP_SìkLT
,

1178 
OP_SìkGE
,

1179 
OP_SìkLE


1181 c⁄° 
u8
 
aEndOp
[] = {

1182 
OP_IdxGE
,

1183 
OP_IdxGT
,

1184 
OP_IdxLE
,

1185 
OP_IdxLT
,

1187 
u16
 
nEq
 = 
pLo›
->
u
.
båì
.nEq;

1188 
ªgBa£
;

1189 
WhîeTîm
 *
pR™geSèπ
 = 0;

1190 
WhîeTîm
 *
pR™geEnd
 = 0;

1191 
°¨tEq
;

1192 
ídEq
;

1193 
°¨t_c⁄°øöts
;

1194 
nC⁄°øöt
;

1195 
Index
 *
pIdx
;

1196 
iIdxCur
;

1197 
nExåaReg
 = 0;

1198 
›
;

1199 *
zSèπAff
;

1200 
cEndAff
 = 0;

1201 
u8
 
bSìkPa°NuŒ
 = 0;

1202 
u8
 
bSt›AtNuŒ
 = 0;

1204 
pIdx
 = 
pLo›
->
u
.
båì
.
pIndex
;

1205 
iIdxCur
 = 
pLevñ
->iIdxCur;

1206 
	`as£π
–
nEq
>=
pLo›
->
nSkù
 );

1216 
	`as£π
–
pWInfo
->
pOrdîBy
==0

1217 || 
pWInfo
->
pOrdîBy
->
nEx¥
==1

1218 || (
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)==0 );

1219 if–(
pWInfo
->
w˘æFœgs
&
WHERE_ORDERBY_MIN
)!=0

1220 && 
pWInfo
->
nOBS©
>0

1221 && (
pIdx
->
nKeyCﬁ
>
nEq
)

1223 
	`as£π
–
pLo›
->
nSkù
==0 );

1224 
bSìkPa°NuŒ
 = 1;

1225 
nExåaReg
 = 1;

1231 
j
 = 
nEq
;

1232 if–
pLo›
->
wsFœgs
 & 
WHERE_BTM_LIMIT
 ){

1233 
pR™geSèπ
 = 
pLo›
->
aLTîm
[
j
++];

1234 
nExåaReg
 = 1;

1236 
	`as£π
–(
pR™geSèπ
->
wtFœgs
 & 
TERM_LIKEOPT
)==0 ||

1237 (
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
)!=0 );

1239 if–
pLo›
->
wsFœgs
 & 
WHERE_TOP_LIMIT
 ){

1240 
pR™geEnd
 = 
pLo›
->
aLTîm
[
j
++];

1241 
nExåaReg
 = 1;

1242 #i‚de‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1243 if–(
pR™geEnd
->
wtFœgs
 & 
TERM_LIKEOPT
)!=0 ){

1244 
	`as£π
–
pR™geSèπ
!=0 );

1245 
	`as£π
–
pR™geSèπ
->
wtFœgs
 & 
TERM_LIKEOPT
 );

1246 
pLevñ
->
iLikeRïC¡r
 = (
u32
)++
pP¨£
->
nMem
;

1247 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, ()
pLevñ
->
iLikeRïC¡r
);

1248 
	`VdbeCommít
((
v
, "LIKEÜoop counter"));

1249 
pLevñ
->
addrLikeRï
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1252 
	`ã°ˇ£
–
bRev
 );

1253 
	`ã°ˇ£
–
pIdx
->
aS‹tOrdî
[
nEq
]==
SQLITE_SO_DESC
 );

1254 
	`as£π
–(
bRev
 & ~1)==0 );

1255 
pLevñ
->
iLikeRïC¡r
 <<=1;

1256 
pLevñ
->
iLikeRïC¡r
 |
bRev
 ^ (
pIdx
->
aS‹tOrdî
[
nEq
]==
SQLITE_SO_DESC
);

1259 if–
pR™geSèπ
==0

1260 && (
j
 = 
pIdx
->
aiCﬁumn
[
nEq
])>=0

1261 && 
pIdx
->
pTabÀ
->
aCﬁ
[
j
].
nŸNuŒ
==0

1263 
bSìkPa°NuŒ
 = 1;

1266 
	`as£π
–
pR™geEnd
==0 || (pR™geEnd->
wtFœgs
 & 
TERM_VNULL
)==0 );

1272 if–(
nEq
<
pIdx
->
nKeyCﬁ
 && 
bRev
==’Idx->
aS‹tOrdî
[nEq]==
SQLITE_SO_ASC
))

1273 || (
bRev
 && 
pIdx
->
nKeyCﬁ
==
nEq
)

1275 
	`SWAP
(
WhîeTîm
 *, 
pR™geEnd
, 
pR™geSèπ
);

1276 
	`SWAP
(
u8
, 
bSìkPa°NuŒ
, 
bSt›AtNuŒ
);

1283 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 
pR™geEnd
);

1284 
ªgBa£
 = 
	`codeAŒEquÆôyTîms
(
pP¨£
,
pLevñ
,
bRev
,
nExåaReg
,&
zSèπAff
);

1285 
	`as£π
–
zSèπAff
==0 || 
	`sqlôe3SåÀn30
(zSèπAff)>=
nEq
 );

1286 if–
zSèπAff
 ) 
cEndAff
 = zSèπAff[
nEq
];

1287 
addrNxt
 = 
pLevñ
->addrNxt;

1289 
	`ã°ˇ£
–
pR™geSèπ
 && (pR™geSèπ->
eO≥øt‹
 & 
WO_LE
)!=0 );

1290 
	`ã°ˇ£
–
pR™geSèπ
 && (pR™geSèπ->
eO≥øt‹
 & 
WO_GE
)!=0 );

1291 
	`ã°ˇ£
–
pR™geEnd
 && (pR™geEnd->
eO≥øt‹
 & 
WO_LE
)!=0 );

1292 
	`ã°ˇ£
–
pR™geEnd
 && (pR™geEnd->
eO≥øt‹
 & 
WO_GE
)!=0 );

1293 
°¨tEq
 = !
pR™geSèπ
 ||ÖR™geSèπ->
eO≥øt‹
 & (
WO_LE
|
WO_GE
);

1294 
ídEq
 = !
pR™geEnd
 ||ÖR™geEnd->
eO≥øt‹
 & (
WO_LE
|
WO_GE
);

1295 
°¨t_c⁄°øöts
 = 
pR™geSèπ
 || 
nEq
>0;

1298 
nC⁄°øöt
 = 
nEq
;

1299 if–
pR™geSèπ
 ){

1300 
Ex¥
 *
pRight
 = 
pR™geSèπ
->
pEx¥
->pRight;

1301 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRight
, 
ªgBa£
+
nEq
);

1302 
	`whîeLikeO±imiz©i⁄SåögFixup
(
v
, 
pLevñ
, 
pR™geSèπ
);

1303 if–(
pR™geSèπ
->
wtFœgs
 & 
TERM_VNULL
)==0

1304 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
)

1306 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
nEq
, 
addrNxt
);

1307 
	`VdbeCovîage
(
v
);

1309 if–
zSèπAff
 ){

1310 if–
	`sqlôe3Com∑ªAfföôy
(
pRight
, 
zSèπAff
[
nEq
])==
SQLITE_AFF_BLOB
){

1314 
zSèπAff
[
nEq
] = 
SQLITE_AFF_BLOB
;

1316 if–
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(
pRight
, 
zSèπAff
[
nEq
]) ){

1317 
zSèπAff
[
nEq
] = 
SQLITE_AFF_BLOB
;

1320 
nC⁄°øöt
++;

1321 
	`ã°ˇ£
–
pR™geSèπ
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1322 
bSìkPa°NuŒ
 = 0;

1323 }if–
bSìkPa°NuŒ
 ){

1324 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgBa£
+
nEq
);

1325 
nC⁄°øöt
++;

1326 
°¨tEq
 = 0;

1327 
°¨t_c⁄°øöts
 = 1;

1329 
	`codeAµlyAfföôy
(
pP¨£
, 
ªgBa£
, 
nC⁄°øöt
 - 
bSìkPa°NuŒ
, 
zSèπAff
);

1330 if–
pLo›
->
nSkù
>0 && 
nC⁄°øöt
==pLoop->nSkip ){

1335 
›
 = 
aSèπOp
[(
°¨t_c⁄°øöts
<<2Ë+ (
°¨tEq
<<1Ë+ 
bRev
];

1336 
	`as£π
–
›
!=0 );

1337 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›
, 
iIdxCur
, 
addrNxt
, 
ªgBa£
, 
nC⁄°øöt
);

1338 
	`VdbeCovîage
(
v
);

1339 
	`VdbeCovîageIf
(
v
, 
›
==
OP_Rewöd
); 
	`ã°ˇ£
( op==OP_Rewind );

1340 
	`VdbeCovîageIf
(
v
, 
›
==
OP_La°
); 
	`ã°ˇ£
( op==OP_Last );

1341 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkGT
); 
	`ã°ˇ£
( op==OP_SeekGT );

1342 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkGE
); 
	`ã°ˇ£
( op==OP_SeekGE );

1343 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkLE
); 
	`ã°ˇ£
( op==OP_SeekLE );

1344 
	`VdbeCovîageIf
(
v
, 
›
==
OP_SìkLT
); 
	`ã°ˇ£
( op==OP_SeekLT );

1350 
nC⁄°øöt
 = 
nEq
;

1351 if–
pR™geEnd
 ){

1352 
Ex¥
 *
pRight
 = 
pR™geEnd
->
pEx¥
->pRight;

1353 
	`sqlôe3Ex¥CacheRemove
(
pP¨£
, 
ªgBa£
+
nEq
, 1);

1354 
	`sqlôe3Ex¥Code
(
pP¨£
, 
pRight
, 
ªgBa£
+
nEq
);

1355 
	`whîeLikeO±imiz©i⁄SåögFixup
(
v
, 
pLevñ
, 
pR™geEnd
);

1356 if–(
pR™geEnd
->
wtFœgs
 & 
TERM_VNULL
)==0

1357 && 
	`sqlôe3Ex¥C™BeNuŒ
(
pRight
)

1359 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IsNuŒ
, 
ªgBa£
+
nEq
, 
addrNxt
);

1360 
	`VdbeCovîage
(
v
);

1362 if–
	`sqlôe3Com∑ªAfföôy
(
pRight
, 
cEndAff
)!=
SQLITE_AFF_BLOB


1363 && !
	`sqlôe3Ex¥NìdsNoAfföôyCh™ge
(
pRight
, 
cEndAff
)

1365 
	`codeAµlyAfföôy
(
pP¨£
, 
ªgBa£
+
nEq
, 1, &
cEndAff
);

1367 
nC⁄°øöt
++;

1368 
	`ã°ˇ£
–
pR™geEnd
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1369 }if–
bSt›AtNuŒ
 ){

1370 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgBa£
+
nEq
);

1371 
ídEq
 = 0;

1372 
nC⁄°øöt
++;

1374 
	`sqlôe3DbFªe
(
db
, 
zSèπAff
);

1377 
pLevñ
->
p2
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1380 if–
nC⁄°øöt
 ){

1381 
›
 = 
aEndOp
[
bRev
*2 + 
ídEq
];

1382 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
›
, 
iIdxCur
, 
addrNxt
, 
ªgBa£
, 
nC⁄°øöt
);

1383 
	`ã°ˇ£
–
›
==
OP_IdxGT
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxGT );

1384 
	`ã°ˇ£
–
›
==
OP_IdxGE
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxGE );

1385 
	`ã°ˇ£
–
›
==
OP_IdxLT
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxLT );

1386 
	`ã°ˇ£
–
›
==
OP_IdxLE
 ); 
	`VdbeCovîageIf
(
v
, op==OP_IdxLE );

1390 
	`dißbÀTîm
(
pLevñ
, 
pR™geSèπ
);

1391 
	`dißbÀTîm
(
pLevñ
, 
pR™geEnd
);

1392 if–
omôTabÀ
 ){

1394 }if–
	`HasRowid
(
pIdx
->
pTabÀ
) ){

1395 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_SEEK_TABLE
)!=0 ){

1396 
iRowidReg
 = ++
pP¨£
->
nMem
;

1397 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_IdxRowid
, 
iIdxCur
, 
iRowidReg
);

1398 
	`sqlôe3Ex¥CacheSt‹e
(
pP¨£
, 
iCur
, -1, 
iRowidReg
);

1399 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_NŸExi°s
, 
iCur
, 0, 
iRowidReg
);

1400 
	`VdbeCovîage
(
v
);

1402 
	`codeDe„ºedSìk
(
pWInfo
, 
pIdx
, 
iCur
, 
iIdxCur
);

1404 }if–
iCur
!=
iIdxCur
 ){

1405 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pIdx
->
pTabÀ
);

1406 
iRowidReg
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
pPk
->
nKeyCﬁ
);

1407 
j
=0; j<
pPk
->
nKeyCﬁ
; j++){

1408 
k
 = 
	`sqlôe3CﬁumnOfIndex
(
pIdx
, 
pPk
->
aiCﬁumn
[
j
]);

1409 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_Cﬁumn
, 
iIdxCur
, 
k
, 
iRowidReg
+
j
);

1411 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_NŸFound
, 
iCur
, 
addrC⁄t
,

1412 
iRowidReg
, 
pPk
->
nKeyCﬁ
); 
	`VdbeCovîage
(
v
);

1418 if–
pLo›
->
wsFœgs
 & 
WHERE_ONEROW
 ){

1419 
pLevñ
->
›
 = 
OP_No›
;

1420 }if–
bRev
 ){

1421 
pLevñ
->
›
 = 
OP_Pªv
;

1423 
pLevñ
->
›
 = 
OP_Next
;

1425 
pLevñ
->
p1
 = 
iIdxCur
;

1426 
pLevñ
->
p3
 = (
pLo›
->
wsFœgs
&
WHERE_UNQ_WANTED
)!=0 ? 1:0;

1427 if–(
pLo›
->
wsFœgs
 & 
WHERE_CONSTRAINT
)==0 ){

1428 
pLevñ
->
p5
 = 
SQLITE_STMTSTATUS_FULLSCAN_STEP
;

1430 
	`as£π
–
pLevñ
->
p5
==0 );

1434 #i‚de‡
SQLITE_OMIT_OR_OPTIMIZATION


1435 if–
pLo›
->
wsFœgs
 & 
WHERE_MULTI_OR
 ){

1479 
WhîeCœu£
 *
pOrWc
;

1480 
SrcLi°
 *
pOrTab
;

1481 
Index
 *
pCov
 = 0;

1482 
iCovCur
 = 
pP¨£
->
nTab
++;

1484 
ªgRëu∫
 = ++
pP¨£
->
nMem
;

1485 
ªgRow£t
 = 0;

1486 
ªgRowid
 = 0;

1487 
iLo›Body
 = 
	`sqlôe3VdbeMakeLabñ
(
v
);

1488 
iRëInô
;

1489 
u¡e°edTîms
 = 0;

1490 
ii
;

1491 
u16
 
w˘æFœgs
;

1492 
Ex¥
 *
pAndEx¥
 = 0;

1493 
TabÀ
 *
pTab
 = 
pTabIãm
->pTab;

1495 
pTîm
 = 
pLo›
->
aLTîm
[0];

1496 
	`as£π
–
pTîm
!=0 );

1497 
	`as£π
–
pTîm
->
eO≥øt‹
 & 
WO_OR
 );

1498 
	`as£π
–(
pTîm
->
wtFœgs
 & 
TERM_ORINFO
)!=0 );

1499 
pOrWc
 = &
pTîm
->
u
.
pOrInfo
->
wc
;

1500 
pLevñ
->
›
 = 
OP_Rëu∫
;

1501 
pLevñ
->
p1
 = 
ªgRëu∫
;

1507 if–
pWInfo
->
nLevñ
>1 ){

1508 
nNŸRódy
;

1509 
SrcLi°_ôem
 *
‹igSrc
;

1510 
nNŸRódy
 = 
pWInfo
->
nLevñ
 - 
iLevñ
 - 1;

1511 
pOrTab
 = 
	`sqlôe3SèckAŒocRaw
(
db
,

1512 (*
pOrTab
)+ 
nNŸRódy
*’OrTab->
a
[0]));

1513 if–
pOrTab
==0 )  
nŸRódy
;

1514 
pOrTab
->
nAŒoc
 = (
u8
)(
nNŸRódy
 + 1);

1515 
pOrTab
->
nSrc
 =ÖOrTab->
nAŒoc
;

1516 
	`mem˝y
(
pOrTab
->
a
, 
pTabIãm
, (*pTabItem));

1517 
‹igSrc
 = 
pWInfo
->
pTabLi°
->
a
;

1518 
k
=1; k<=
nNŸRódy
; k++){

1519 
	`mem˝y
(&
pOrTab
->
a
[
k
], &
‹igSrc
[
pLevñ
[k].
iFrom
], (pOrTab->a[k]));

1522 
pOrTab
 = 
pWInfo
->
pTabLi°
;

1537 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_DUPLICATES_OK
)==0 ){

1538 if–
	`HasRowid
(
pTab
) ){

1539 
ªgRow£t
 = ++
pP¨£
->
nMem
;

1540 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_NuŒ
, 0, 
ªgRow£t
);

1542 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1543 
ªgRow£t
 = 
pP¨£
->
nTab
++;

1544 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_O≥nEphemîÆ
, 
ªgRow£t
, 
pPk
->
nKeyCﬁ
);

1545 
	`sqlôe3VdbeSëP4KeyInfo
(
pP¨£
, 
pPk
);

1547 
ªgRowid
 = ++
pP¨£
->
nMem
;

1549 
iRëInô
 = 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 0, 
ªgRëu∫
);

1565 if–
pWC
->
nTîm
>1 ){

1566 
iTîm
;

1567 
iTîm
=0; iTîm<
pWC
->
nTîm
; iTerm++){

1568 
Ex¥
 *
pEx¥
 = 
pWC
->
a
[
iTîm
].pExpr;

1569 if–&
pWC
->
a
[
iTîm
] =
pTîm
 ) ;

1570 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ) ;

1571 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_VIRTUAL
 );

1572 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_CODED
 );

1573 if–(
pWC
->
a
[
iTîm
].
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
))!=0 ) ;

1574 if–(
pWC
->
a
[
iTîm
].
eO≥øt‹
 & 
WO_ALL
)==0 ) ;

1575 
	`ã°ˇ£
–
pWC
->
a
[
iTîm
].
wtFœgs
 & 
TERM_ORINFO
 );

1576 
pEx¥
 = 
	`sqlôe3Ex¥Dup
(
db
,ÖExpr, 0);

1577 
pAndEx¥
 = 
	`sqlôe3Ex¥And
(
db
,ÖAndEx¥, 
pEx¥
);

1579 if–
pAndEx¥
 ){

1580 
pAndEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_AND
|
TKFLG_DONTFOLD
, 0,ÖAndExpr, 0);

1588 
w˘æFœgs
 = 
WHERE_OR_SUBCLAUSE
 | (
pWInfo
->w˘æFœg†& 
WHERE_SEEK_TABLE
);

1589 
ii
=0; ii<
pOrWc
->
nTîm
; ii++){

1590 
WhîeTîm
 *
pOrTîm
 = &
pOrWc
->
a
[
ii
];

1591 if–
pOrTîm
->
À·Curs‹
==
iCur
 || (pOrTîm->
eO≥øt‹
 & 
WO_AND
)!=0 ){

1592 
WhîeInfo
 *
pSubWInfo
;

1593 
Ex¥
 *
pOrEx¥
 = 
pOrTîm
->
pEx¥
;

1594 
jmp1
 = 0;

1595 if–
pAndEx¥
 && !
	`Ex¥HasPr›îty
(
pOrEx¥
, 
EP_FromJoö
) ){

1596 
pAndEx¥
->
pLe·
 = 
pOrEx¥
;

1597 
pOrEx¥
 = 
pAndEx¥
;

1600 
	`WHERETRACE
(0xffff, ("Subplan for OR-clause:\n"));

1601 
pSubWInfo
 = 
	`sqlôe3WhîeBegö
(
pP¨£
, 
pOrTab
, 
pOrEx¥
, 0, 0,

1602 
w˘æFœgs
, 
iCovCur
);

1603 
	`as£π
–
pSubWInfo
 || 
pP¨£
->
nEº
 || 
db
->
mÆlocFaûed
 );

1604 if–
pSubWInfo
 ){

1605 
WhîeLo›
 *
pSubLo›
;

1606 
addrEx∂aö
 = 
	`sqlôe3WhîeEx∂aöO√Sˇn
(

1607 
pP¨£
, 
pOrTab
, &
pSubWInfo
->
a
[0], 
iLevñ
, 
pLevñ
->
iFrom
, 0

1609 
	`sqlôe3WhîeAddSˇnSètus
(
v
, 
pOrTab
, &
pSubWInfo
->
a
[0], 
addrEx∂aö
);

1616 if–(
pWInfo
->
w˘æFœgs
 & 
WHERE_DUPLICATES_OK
)==0 ){

1617 
r
;

1618 
iSë
 = ((
ii
==
pOrWc
->
nTîm
-1)?-1:ii);

1619 if–
	`HasRowid
(
pTab
) ){

1620 
r
 = 
	`sqlôe3Ex¥CodeGëCﬁumn
(
pP¨£
, 
pTab
, -1, 
iCur
, 
ªgRowid
, 0);

1621 
jmp1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_RowSëTe°
, 
ªgRow£t
, 0,

1622 
r
,
iSë
);

1623 
	`VdbeCovîage
(
v
);

1625 
Index
 *
pPk
 = 
	`sqlôe3Prim¨yKeyIndex
(
pTab
);

1626 
nPk
 = 
pPk
->
nKeyCﬁ
;

1627 
iPk
;

1630 
r
 = 
	`sqlôe3GëTempR™ge
(
pP¨£
, 
nPk
);

1631 
iPk
=0; iPk<
nPk
; iPk++){

1632 
iCﬁ
 = 
pPk
->
aiCﬁumn
[
iPk
];

1633 
	`sqlôe3Ex¥CodeGëCﬁumnToReg
(
pP¨£
, 
pTab
, 
iCﬁ
, 
iCur
, 
r
+
iPk
);

1647 if–
iSë
 ){

1648 
jmp1
 = 
	`sqlôe3VdbeAddOp4I¡
(
v
, 
OP_Found
, 
ªgRow£t
, 0, 
r
, 
nPk
);

1649 
	`VdbeCovîage
(
v
);

1651 if–
iSë
>=0 ){

1652 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_MakeRec‹d
, 
r
, 
nPk
, 
ªgRowid
);

1653 
	`sqlôe3VdbeAddOp3
(
v
, 
OP_IdxIn£π
, 
ªgRow£t
, 
ªgRowid
, 0);

1654 if–
iSë
 ) 
	`sqlôe3VdbeCh™geP5
(
v
, 
OPFLAG_USESEEKRESULT
);

1658 
	`sqlôe3Rñó£TempR™ge
(
pP¨£
, 
r
, 
nPk
);

1663 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_Gosub
, 
ªgRëu∫
, 
iLo›Body
);

1667 if–
jmp1
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, jmp1);

1674 if–
pSubWInfo
->
u¡e°edTîms
 ) untestedTerms = 1;

1688 
pSubLo›
 = 
pSubWInfo
->
a
[0].
pWLo›
;

1689 
	`as£π
–(
pSubLo›
->
wsFœgs
 & 
WHERE_AUTO_INDEX
)==0 );

1690 if–(
pSubLo›
->
wsFœgs
 & 
WHERE_INDEXED
)!=0

1691 && (
ii
==0 || 
pSubLo›
->
u
.
båì
.
pIndex
==
pCov
)

1692 && (
	`HasRowid
(
pTab
Ë|| !
	`IsPrim¨yKeyIndex
(
pSubLo›
->
u
.
båì
.
pIndex
))

1694 
	`as£π
–
pSubWInfo
->
a
[0].
iIdxCur
==
iCovCur
 );

1695 
pCov
 = 
pSubLo›
->
u
.
båì
.
pIndex
;

1697 
pCov
 = 0;

1701 
	`sqlôe3WhîeEnd
(
pSubWInfo
);

1705 
pLevñ
->
u
.
pCovidx
 = 
pCov
;

1706 if–
pCov
 ) 
pLevñ
->
iIdxCur
 = 
iCovCur
;

1707 if–
pAndEx¥
 ){

1708 
pAndEx¥
->
pLe·
 = 0;

1709 
	`sqlôe3Ex¥Dñëe
(
db
, 
pAndEx¥
);

1711 
	`sqlôe3VdbeCh™geP1
(
v
, 
iRëInô
, 
	`sqlôe3VdbeCuºítAddr
(v));

1712 
	`sqlôe3VdbeGŸo
(
v
, 
pLevñ
->
addrBrk
);

1713 
	`sqlôe3VdbeResﬁveLabñ
(
v
, 
iLo›Body
);

1715 if–
pWInfo
->
nLevñ
>1 ) 
	`sqlôe3SèckFªe
(
db
, 
pOrTab
);

1716 if–!
u¡e°edTîms
 ) 
	`dißbÀTîm
(
pLevñ
, 
pTîm
);

1724 c⁄° 
u8
 
aSãp
[] = { 
OP_Next
, 
OP_Pªv
 };

1725 c⁄° 
u8
 
aSèπ
[] = { 
OP_Rewöd
, 
OP_La°
 };

1726 
	`as£π
–
bRev
==0 || bRev==1 );

1727 if–
pTabIãm
->
fg
.
isRecursive
 ){

1730 
pLevñ
->
›
 = 
OP_No›
;

1732 
	`codeCurs‹Höt
(
pTabIãm
, 
pWInfo
, 
pLevñ
, 0);

1733 
pLevñ
->
›
 = 
aSãp
[
bRev
];

1734 
pLevñ
->
p1
 = 
iCur
;

1735 
pLevñ
->
p2
 = 1 + 
	`sqlôe3VdbeAddOp2
(
v
, 
aSèπ
[
bRev
], 
iCur
, 
addrBrk
);

1736 
	`VdbeCovîageIf
(
v
, 
bRev
==0);

1737 
	`VdbeCovîageIf
(
v
, 
bRev
!=0);

1738 
pLevñ
->
p5
 = 
SQLITE_STMTSTATUS_FULLSCAN_STEP
;

1742 #ifde‡
SQLITE_ENABLE_STMT_SCANSTATUS


1743 
pLevñ
->
addrVisô
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1749 
pTîm
=
pWC
->
a
, 
j
ıWC->
nTîm
; j>0; j--,ÖTerm++){

1750 
Ex¥
 *
pE
;

1751 
skùLikeAddr
 = 0;

1752 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1753 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_CODED
 );

1754 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

1755 if–(
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
)!=0 ){

1756 
	`ã°ˇ£
–
pWInfo
->
u¡e°edTîms
==0

1757 && (
pWInfo
->
w˘æFœgs
 & 
WHERE_OR_SUBCLAUSE
)!=0 );

1758 
pWInfo
->
u¡e°edTîms
 = 1;

1761 
pE
 = 
pTîm
->
pEx¥
;

1762 
	`as£π
–
pE
!=0 );

1763 if–
pLevñ
->
iLe·Joö
 && !
	`Ex¥HasPr›îty
(
pE
, 
EP_FromJoö
) ){

1766 if–
pTîm
->
wtFœgs
 & 
TERM_LIKECOND
 ){

1772 #ifde‡
SQLITE_LIKE_DOESNT_MATCH_BLOBS


1775 
u32
 
x
 = 
pLevñ
->
iLikeRïC¡r
;

1776 
	`as£π
–
x
>0 );

1777 
skùLikeAddr
 = 
	`sqlôe3VdbeAddOp1
(
v
, (
x
&1)? 
OP_IfNŸ
 : 
OP_If
, ()(x>>1));

1778 
	`VdbeCovîage
(
v
);

1781 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pE
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

1782 if–
skùLikeAddr
 ) 
	`sqlôe3VdbeJumpHîe
(
v
, skipLikeAddr);

1783 
pTîm
->
wtFœgs
 |
TERM_CODED
;

1794 
pTîm
=
pWC
->
a
, 
j
ıWC->
nTîm
; j>0; j--,ÖTerm++){

1795 
Ex¥
 *
pE
, *
pEA…
;

1796 
WhîeTîm
 *
pA…
;

1797 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

1798 if–(
pTîm
->
eO≥øt‹
 & (
WO_EQ
|
WO_IS
))==0 ) ;

1799 if–(
pTîm
->
eO≥øt‹
 & 
WO_EQUIV
)==0 ) ;

1800 if–
pTîm
->
À·Curs‹
!=
iCur
 ) ;

1801 if–
pLevñ
->
iLe·Joö
 ) ;

1802 
pE
 = 
pTîm
->
pEx¥
;

1803 
	`as£π
–!
	`Ex¥HasPr›îty
(
pE
, 
EP_FromJoö
) );

1804 
	`as£π
–(
pTîm
->
¥îeqRight
 & 
pLevñ
->
nŸRódy
)!=0 );

1805 
pA…
 = 
	`sqlôe3WhîeFödTîm
(
pWC
, 
iCur
, 
pTîm
->
u
.
À·Cﬁumn
, 
nŸRódy
,

1806 
WO_EQ
|
WO_IN
|
WO_IS
, 0);

1807 if–
pA…
==0 ) ;

1808 if–
pA…
->
wtFœgs
 & (
TERM_CODED
) ) ;

1809 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_EQ
 );

1810 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_IS
 );

1811 
	`ã°ˇ£
–
pA…
->
eO≥øt‹
 & 
WO_IN
 );

1812 
	`VdbeModuÀCommít
((
v
, "beginÅransitive constraint"));

1813 
pEA…
 = 
	`sqlôe3SèckAŒocRaw
(
db
, (*pEAlt));

1814 if–
pEA…
 ){

1815 *
pEA…
 = *
pA…
->
pEx¥
;

1816 
pEA…
->
pLe·
 = 
pE
->pLeft;

1817 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pEA…
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

1818 
	`sqlôe3SèckFªe
(
db
, 
pEA…
);

1825 if–
pLevñ
->
iLe·Joö
 ){

1826 
pLevñ
->
addrFú°
 = 
	`sqlôe3VdbeCuºítAddr
(
v
);

1827 
	`sqlôe3VdbeAddOp2
(
v
, 
OP_I¡egî
, 1, 
pLevñ
->
iLe·Joö
);

1828 
	`VdbeCommít
((
v
, "record LEFT JOIN hit"));

1829 
	`sqlôe3Ex¥CacheCÀ¨
(
pP¨£
);

1830 
pTîm
=
pWC
->
a
, 
j
=0; j<pWC->
nTîm
; j++,ÖTerm++){

1831 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

1832 
	`ã°ˇ£
–
pTîm
->
wtFœgs
 & 
TERM_CODED
 );

1833 if–
pTîm
->
wtFœgs
 & (
TERM_VIRTUAL
|
TERM_CODED
) ) ;

1834 if–(
pTîm
->
¥îeqAŒ
 & 
pLevñ
->
nŸRódy
)!=0 ){

1835 
	`as£π
–
pWInfo
->
u¡e°edTîms
 );

1838 
	`as£π
–
pTîm
->
pEx¥
 );

1839 
	`sqlôe3Ex¥IfFÆ£
(
pP¨£
, 
pTîm
->
pEx¥
, 
addrC⁄t
, 
SQLITE_JUMPIFNULL
);

1840 
pTîm
->
wtFœgs
 |
TERM_CODED
;

1844  
pLevñ
->
nŸRódy
;

1845 
	}
}

	@whereexpr.c

19 
	~"sqlôeI¡.h
"

20 
	~"whîeI¡.h
"

23 
ex¥A«lyze
(
SrcLi°
*, 
WhîeCœu£
*, );

28 
	$whîeOrInfoDñëe
(
sqlôe3
 *
db
, 
WhîeOrInfo
 *
p
){

29 
	`sqlôe3WhîeCœu£CÀ¨
(&
p
->
wc
);

30 
	`sqlôe3DbFªe
(
db
, 
p
);

31 
	}
}

36 
	$whîeAndInfoDñëe
(
sqlôe3
 *
db
, 
WhîeAndInfo
 *
p
){

37 
	`sqlôe3WhîeCœu£CÀ¨
(&
p
->
wc
);

38 
	`sqlôe3DbFªe
(
db
, 
p
);

39 
	}
}

60 
	$whîeCœu£In£π
(
WhîeCœu£
 *
pWC
, 
Ex¥
 *
p
, 
u16
 
wtFœgs
){

61 
WhîeTîm
 *
pTîm
;

62 
idx
;

63 
	`ã°ˇ£
–
wtFœgs
 & 
TERM_VIRTUAL
 );

64 if–
pWC
->
nTîm
>ıWC->
nSlŸ
 ){

65 
WhîeTîm
 *
pOld
 = 
pWC
->
a
;

66 
sqlôe3
 *
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

67 
pWC
->
a
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, ’WC->a[0])*pWC->
nSlŸ
*2 );

68 if–
pWC
->
a
==0 ){

69 if–
wtFœgs
 & 
TERM_DYNAMIC
 ){

70 
	`sqlôe3Ex¥Dñëe
(
db
, 
p
);

72 
pWC
->
a
 = 
pOld
;

75 
	`mem˝y
(
pWC
->
a
, 
pOld
, ’WC->a[0])*pWC->
nTîm
);

76 if–
pOld
!=
pWC
->
aSètic
 ){

77 
	`sqlôe3DbFªe
(
db
, 
pOld
);

79 
pWC
->
nSlŸ
 = 
	`sqlôe3DbMÆlocSize
(
db
,ÖWC->
a
)/(pWC->a[0]);

80 
	`mem£t
(&
pWC
->
a
[pWC->
nTîm
], 0, ’WC->a[0])*’WC->
nSlŸ
-pWC->nTerm));

82 
pTîm
 = &
pWC
->
a
[
idx
 =ÖWC->
nTîm
++];

83 if–
p
 && 
	`Ex¥HasPr›îty
’, 
EP_U∆ikñy
) ){

84 
pTîm
->
åuthProb
 = 
	`sqlôe3LogE°
(
p
->
iTabÀ
) - 270;

86 
pTîm
->
åuthProb
 = 1;

88 
pTîm
->
pEx¥
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
p
);

89 
pTîm
->
wtFœgs
 = wtFlags;

90 
pTîm
->
pWC
 =ÖWC;

91 
pTîm
->
iP¨ít
 = -1;

92  
idx
;

93 
	}
}

100 
	$ÆlowedOp
(
›
){

101 
	`as£π
–
TK_GT
>
TK_EQ
 && TK_GT<
TK_GE
 );

102 
	`as£π
–
TK_LT
>
TK_EQ
 && TK_LT<
TK_GE
 );

103 
	`as£π
–
TK_LE
>
TK_EQ
 && TK_LE<
TK_GE
 );

104 
	`as£π
–
TK_GE
==
TK_EQ
+4 );

105  
›
==
TK_IN
 || (›>=
TK_EQ
 && op<=
TK_GE
Ë|| op==
TK_ISNULL
 || op==
TK_IS
;

106 
	}
}

120 
	$ex¥Commuã
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

121 
u16
 
expRight
 = (
pEx¥
->
pRight
->
Êags
 & 
EP_Cﬁœã
);

122 
u16
 
expLe·
 = (
pEx¥
->
pLe·
->
Êags
 & 
EP_Cﬁœã
);

123 
	`as£π
–
	`ÆlowedOp
(
pEx¥
->
›
Ë&&ÖEx¥->›!=
TK_IN
 );

124 if–
expRight
==
expLe·
 ){

126 if–
expRight
 ){

129 
pEx¥
->
pRight
->
Êags
 &~
EP_Cﬁœã
;

130 }if–
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
)!=0 ){

134 
pEx¥
->
pLe·
->
Êags
 |
EP_Cﬁœã
;

137 
	`SWAP
(
Ex¥
*,
pEx¥
->
pRight
,pEx¥->
pLe·
);

138 if–
pEx¥
->
›
>=
TK_GT
 ){

139 
	`as£π
–
TK_LT
==
TK_GT
+2 );

140 
	`as£π
–
TK_GE
==
TK_LE
+2 );

141 
	`as£π
–
TK_GT
>
TK_EQ
 );

142 
	`as£π
–
TK_GT
<
TK_LE
 );

143 
	`as£π
–
pEx¥
->
›
>=
TK_GT
 &&ÖEx¥->›<=
TK_GE
 );

144 
pEx¥
->
›
 = (’Ex¥->›-
TK_GT
)^2)+TK_GT;

146 
	}
}

151 
u16
 
	$›î©‹Mask
(
›
){

152 
u16
 
c
;

153 
	`as£π
–
	`ÆlowedOp
(
›
) );

154 if–
›
==
TK_IN
 ){

155 
c
 = 
WO_IN
;

156 }if–
›
==
TK_ISNULL
 ){

157 
c
 = 
WO_ISNULL
;

158 }if–
›
==
TK_IS
 ){

159 
c
 = 
WO_IS
;

161 
	`as£π
–(
WO_EQ
<<(
›
-
TK_EQ
)) < 0x7fff );

162 
c
 = (
u16
)(
WO_EQ
<<(
›
-
TK_EQ
));

164 
	`as£π
–
›
!=
TK_ISNULL
 || 
c
==
WO_ISNULL
 );

165 
	`as£π
–
›
!=
TK_IN
 || 
c
==
WO_IN
 );

166 
	`as£π
–
›
!=
TK_EQ
 || 
c
==
WO_EQ
 );

167 
	`as£π
–
›
!=
TK_LT
 || 
c
==
WO_LT
 );

168 
	`as£π
–
›
!=
TK_LE
 || 
c
==
WO_LE
 );

169 
	`as£π
–
›
!=
TK_GT
 || 
c
==
WO_GT
 );

170 
	`as£π
–
›
!=
TK_GE
 || 
c
==
WO_GE
 );

171 
	`as£π
–
›
!=
TK_IS
 || 
c
==
WO_IS
 );

172  
c
;

173 
	}
}

176 #i‚de‡
SQLITE_OMIT_LIKE_OPTIMIZATION


189 
	$isLikeOrGlob
(

190 
P¨£
 *
pP¨£
,

191 
Ex¥
 *
pEx¥
,

192 
Ex¥
 **
µPªfix
,

193 *
pisCom∂ëe
,

194 *
≤oCa£


196 c⁄° *
z
 = 0;

197 
Ex¥
 *
pRight
, *
pLe·
;

198 
Ex¥Li°
 *
pLi°
;

199 
c
;

200 
˙t
;

201 
wc
[3];

202 
sqlôe3
 *
db
 = 
pP¨£
->db;

203 
sqlôe3_vÆue
 *
pVÆ
 = 0;

204 
›
;

205 
rc
;

207 if–!
	`sqlôe3IsLikeFun˘i⁄
(
db
, 
pEx¥
, 
≤oCa£
, 
wc
) ){

210 #ifde‡
SQLITE_EBCDIC


211 if–*
≤oCa£
 )  0;

213 
pLi°
 = 
pEx¥
->
x
.pList;

214 
pLe·
 = 
pLi°
->
a
[1].
pEx¥
;

215 if–
pLe·
->
›
!=
TK_COLUMN


216 || 
	`sqlôe3Ex¥Afföôy
(
pLe·
)!=
SQLITE_AFF_TEXT


217 || 
	`IsVútuÆ
(
pLe·
->
pTab
)

223 
	`as£π
–
pLe·
->
iCﬁumn
!=(-1) );

225 
pRight
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pLi°
->
a
[0].
pEx¥
);

226 
›
 = 
pRight
->op;

227 if–
›
==
TK_VARIABLE
 ){

228 
Vdbe
 *
pRïª∑ª
 = 
pP¨£
->pReprepare;

229 
iCﬁ
 = 
pRight
->
iCﬁumn
;

230 
pVÆ
 = 
	`sqlôe3VdbeGëBoundVÆue
(
pRïª∑ª
, 
iCﬁ
, 
SQLITE_AFF_BLOB
);

231 if–
pVÆ
 && 
	`sqlôe3_vÆue_ty≥
’VÆ)==
SQLITE_TEXT
 ){

232 
z
 = (*)
	`sqlôe3_vÆue_ãxt
(
pVÆ
);

234 
	`sqlôe3VdbeSëV¨mask
(
pP¨£
->
pVdbe
, 
iCﬁ
);

235 
	`as£π
–
pRight
->
›
==
TK_VARIABLE
 ||ÖRight->›==
TK_REGISTER
 );

236 }if–
›
==
TK_STRING
 ){

237 
z
 = 
pRight
->
u
.
zTokí
;

239 if–
z
 ){

240 
˙t
 = 0;

241  (
c
=
z
[
˙t
])!=0 && c!=
wc
[0] && c!=wc[1] && c!=wc[2] ){

242 
˙t
++;

244 if–
˙t
!=0 && 255!=(
u8
)
z
[cnt-1] ){

245 
Ex¥
 *
pPªfix
;

246 *
pisCom∂ëe
 = 
c
==
wc
[0] && 
z
[
˙t
+1]==0;

247 
pPªfix
 = 
	`sqlôe3Ex¥
(
db
, 
TK_STRING
, 
z
);

248 if–
pPªfix
 )ÖPªfix->
u
.
zTokí
[
˙t
] = 0;

249 *
µPªfix
 = 
pPªfix
;

250 if–
›
==
TK_VARIABLE
 ){

251 
Vdbe
 *
v
 = 
pP¨£
->
pVdbe
;

252 
	`sqlôe3VdbeSëV¨mask
(
v
, 
pRight
->
iCﬁumn
);

253 if–*
pisCom∂ëe
 && 
pRight
->
u
.
zTokí
[1] ){

260 
r1
 = 
	`sqlôe3GëTempReg
(
pP¨£
);

261 
	`sqlôe3Ex¥CodeT¨gë
(
pP¨£
, 
pRight
, 
r1
);

262 
	`sqlôe3VdbeCh™geP3
(
v
, 
	`sqlôe3VdbeCuºítAddr
(v)-1, 0);

263 
	`sqlôe3Rñó£TempReg
(
pP¨£
, 
r1
);

267 
z
 = 0;

271 
rc
 = (
z
!=0);

272 
	`sqlôe3VÆueFªe
(
pVÆ
);

273  
rc
;

274 
	}
}

278 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


289 
	$isM©chOfCﬁumn
(

290 
Ex¥
 *
pEx¥
,

291 *
≥Op2


293 
	sOp2
 {

294 c⁄° *
zOp
;

295 
eOp2
;

296 } 
aOp
[] = {

297 { "m©ch", 
SQLITE_INDEX_CONSTRAINT_MATCH
 },

298 { "glob", 
SQLITE_INDEX_CONSTRAINT_GLOB
 },

299 { "like", 
SQLITE_INDEX_CONSTRAINT_LIKE
 },

300 { "ªgexp", 
SQLITE_INDEX_CONSTRAINT_REGEXP
 }

302 
Ex¥Li°
 *
pLi°
;

303 
Ex¥
 *
pCﬁ
;

304 
i
;

306 if–
pEx¥
->
›
!=
TK_FUNCTION
 ){

309 
pLi°
 = 
pEx¥
->
x
.pList;

310 if–
pLi°
==0 ||ÖLi°->
nEx¥
!=2 ){

313 
pCﬁ
 = 
pLi°
->
a
[1].
pEx¥
;

314 if–
pCﬁ
->
›
!=
TK_COLUMN
 || !
	`IsVútuÆ
’Cﬁ->
pTab
) ){

317 
i
=0; i<
	`AºaySize
(
aOp
); i++){

318 if–
	`sqlôe3SåICmp
(
pEx¥
->
u
.
zTokí
, 
aOp
[
i
].
zOp
)==0 ){

319 *
≥Op2
 = 
aOp
[
i
].
eOp2
;

324 
	}
}

331 
	$å™s„rJoöM¨kögs
(
Ex¥
 *
pDîived
, Ex¥ *
pBa£
){

332 if–
pDîived
 ){

333 
pDîived
->
Êags
 |
pBa£
->Êag†& 
EP_FromJoö
;

334 
pDîived
->
iRightJoöTabÀ
 = 
pBa£
->iRightJoinTable;

336 
	}
}

341 
	$m¨kTîmAsChûd
(
WhîeCœu£
 *
pWC
, 
iChûd
, 
iP¨ít
){

342 
pWC
->
a
[
iChûd
].
iP¨ít
 = iParent;

343 
pWC
->
a
[
iChûd
].
åuthProb
 =ÖWC->a[
iP¨ít
].truthProb;

344 
pWC
->
a
[
iP¨ít
].
nChûd
++;

345 
	}
}

352 
WhîeTîm
 *
	$whîeNthSubãrm
(
WhîeTîm
 *
pTîm
, 
N
){

353 if–
pTîm
->
eO≥øt‹
!=
WO_AND
 ){

354  
N
==0 ? 
pTîm
 : 0;

356 if–
N
<
pTîm
->
u
.
pAndInfo
->
wc
.
nTîm
 ){

357  &
pTîm
->
u
.
pAndInfo
->
wc
.
a
[
N
];

360 
	}
}

382 
	$whîeComböeDisjun˘s
(

383 
SrcLi°
 *
pSrc
,

384 
WhîeCœu£
 *
pWC
,

385 
WhîeTîm
 *
pO√
,

386 
WhîeTîm
 *
pTwo


388 
u16
 
eOp
 = 
pO√
->
eO≥øt‹
 | 
pTwo
->eOperator;

389 
sqlôe3
 *
db
;

390 
Ex¥
 *
pNew
;

391 
›
;

392 
idxNew
;

394 if–(
pO√
->
eO≥øt‹
 & (
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
))==0 ) ;

395 if–(
pTwo
->
eO≥øt‹
 & (
WO_EQ
|
WO_LT
|
WO_LE
|
WO_GT
|
WO_GE
))==0 ) ;

396 if–(
eOp
 & (
WO_EQ
|
WO_LT
|
WO_LE
))!=eOp

397 && (
eOp
 & (
WO_EQ
|
WO_GT
|
WO_GE
))!=eOp ) ;

398 
	`as£π
–
pO√
->
pEx¥
->
pLe·
!=0 &&ÖO√->pEx¥->
pRight
!=0 );

399 
	`as£π
–
pTwo
->
pEx¥
->
pLe·
!=0 &&ÖTwo->pEx¥->
pRight
!=0 );

400 if–
	`sqlôe3Ex¥Com∑ª
(
pO√
->
pEx¥
->
pLe·
, 
pTwo
->pExpr->pLeft, -1) ) ;

401 if–
	`sqlôe3Ex¥Com∑ª
(
pO√
->
pEx¥
->
pRight
, 
pTwo
->pExpr->pRight, -1) );

403 if–(
eOp
 & (eOp-1))!=0 ){

404 if–
eOp
 & (
WO_LT
|
WO_LE
) ){

405 
eOp
 = 
WO_LE
;

407 
	`as£π
–
eOp
 & (
WO_GT
|
WO_GE
) );

408 
eOp
 = 
WO_GE
;

411 
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

412 
pNew
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pO√
->
pEx¥
, 0);

413 if–
pNew
==0 ) ;

414 
›
=
TK_EQ
; 
eOp
!=(
WO_EQ
<<(›-TK_EQ)); op++){ 
	`as£π
–›<
TK_GE
 ); }

415 
pNew
->
›
 = op;

416 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNew
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

417 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

418 
	}
}

420 #i‡!
deföed
(
SQLITE_OMIT_OR_OPTIMIZATION
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

508 
	$ex¥A«lyzeOrTîm
(

509 
SrcLi°
 *
pSrc
,

510 
WhîeCœu£
 *
pWC
,

511 
idxTîm


513 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

514 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

515 
sqlôe3
 *
db
 = 
pP¨£
->db;

516 
WhîeTîm
 *
pTîm
 = &
pWC
->
a
[
idxTîm
];

517 
Ex¥
 *
pEx¥
 = 
pTîm
->pExpr;

518 
i
;

519 
WhîeCœu£
 *
pOrWc
;

520 
WhîeTîm
 *
pOrTîm
;

521 
WhîeOrInfo
 *
pOrInfo
;

522 
Bômask
 
chngToIN
;

523 
Bômask
 
ödexabÀ
;

530 
	`as£π
–(
pTîm
->
wtFœgs
 & (
TERM_DYNAMIC
|
TERM_ORINFO
|
TERM_ANDINFO
))==0 );

531 
	`as£π
–
pEx¥
->
›
==
TK_OR
 );

532 
pTîm
->
u
.
pOrInfo
 =ÖOrInfÿ
	`sqlôe3DbMÆlocZîo
(
db
, (*pOrInfo));

533 if–
pOrInfo
==0 ) ;

534 
pTîm
->
wtFœgs
 |
TERM_ORINFO
;

535 
pOrWc
 = &
pOrInfo
->
wc
;

536 
	`mem£t
(
pOrWc
->
aSètic
, 0, (pOrWc->aStatic));

537 
	`sqlôe3WhîeCœu£Inô
(
pOrWc
, 
pWInfo
);

538 
	`sqlôe3WhîeS∂ô
(
pOrWc
, 
pEx¥
, 
TK_OR
);

539 
	`sqlôe3WhîeEx¥A«lyze
(
pSrc
, 
pOrWc
);

540 if–
db
->
mÆlocFaûed
 ) ;

541 
	`as£π
–
pOrWc
->
nTîm
>=2 );

546 
ödexabÀ
 = ~(
Bômask
)0;

547 
chngToIN
 = ~(
Bômask
)0;

548 
i
=
pOrWc
->
nTîm
-1, 
pOrTîm
ıOrWc->
a
; i>=0 && 
ödexabÀ
; i--,ÖOrTerm++){

549 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_SINGLE
)==0 ){

550 
WhîeAndInfo
 *
pAndInfo
;

551 
	`as£π
–(
pOrTîm
->
wtFœgs
 & (
TERM_ANDINFO
|
TERM_ORINFO
))==0 );

552 
chngToIN
 = 0;

553 
pAndInfo
 = 
	`sqlôe3DbMÆlocRawNN
(
db
, (*pAndInfo));

554 if–
pAndInfo
 ){

555 
WhîeCœu£
 *
pAndWC
;

556 
WhîeTîm
 *
pAndTîm
;

557 
j
;

558 
Bômask
 
b
 = 0;

559 
pOrTîm
->
u
.
pAndInfo
 =ÖAndInfo;

560 
pOrTîm
->
wtFœgs
 |
TERM_ANDINFO
;

561 
pOrTîm
->
eO≥øt‹
 = 
WO_AND
;

562 
pAndWC
 = &
pAndInfo
->
wc
;

563 
	`mem£t
(
pAndWC
->
aSètic
, 0, (pAndWC->aStatic));

564 
	`sqlôe3WhîeCœu£Inô
(
pAndWC
, 
pWC
->
pWInfo
);

565 
	`sqlôe3WhîeS∂ô
(
pAndWC
, 
pOrTîm
->
pEx¥
, 
TK_AND
);

566 
	`sqlôe3WhîeEx¥A«lyze
(
pSrc
, 
pAndWC
);

567 
pAndWC
->
pOuãr
 = 
pWC
;

568 if–!
db
->
mÆlocFaûed
 ){

569 
j
=0, 
pAndTîm
=
pAndWC
->
a
; j<pAndWC->
nTîm
; j++,ÖAndTerm++){

570 
	`as£π
–
pAndTîm
->
pEx¥
 );

571 if–
	`ÆlowedOp
(
pAndTîm
->
pEx¥
->
›
)

572 || 
pAndTîm
->
eO≥øt‹
==
WO_MATCH


574 
b
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pAndTîm
->
À·Curs‹
);

578 
ödexabÀ
 &
b
;

580 }if–
pOrTîm
->
wtFœgs
 & 
TERM_COPIED
 ){

584 
Bômask
 
b
;

585 
b
 = 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pOrTîm
->
À·Curs‹
);

586 if–
pOrTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 ){

587 
WhîeTîm
 *
pOthî
 = &
pOrWc
->
a
[
pOrTîm
->
iP¨ít
];

588 
b
 |
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
pOthî
->
À·Curs‹
);

590 
ödexabÀ
 &
b
;

591 if–(
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
)==0 ){

592 
chngToIN
 = 0;

594 
chngToIN
 &
b
;

603 
pOrInfo
->
ödexabÀ
 = indexable;

604 
pTîm
->
eO≥øt‹
 = 
ödexabÀ
==0 ? 0 : 
WO_OR
;

608 if–
ödexabÀ
 && 
pOrWc
->
nTîm
==2 ){

609 
iO√
 = 0;

610 
WhîeTîm
 *
pO√
;

611  (
pO√
 = 
	`whîeNthSubãrm
(&
pOrWc
->
a
[0],
iO√
++))!=0 ){

612 
iTwo
 = 0;

613 
WhîeTîm
 *
pTwo
;

614  (
pTwo
 = 
	`whîeNthSubãrm
(&
pOrWc
->
a
[1],
iTwo
++))!=0 ){

615 
	`whîeComböeDisjun˘s
(
pSrc
, 
pWC
, 
pO√
, 
pTwo
);

641 if–
chngToIN
 ){

642 
okToChngToIN
 = 0;

643 
iCﬁumn
 = -1;

644 
iCurs‹
 = -1;

645 
j
 = 0;

653 
j
=0; j<2 && !
okToChngToIN
; j++){

654 
pOrTîm
 = 
pOrWc
->
a
;

655 
i
=
pOrWc
->
nTîm
-1; i>=0; i--, 
pOrTîm
++){

656 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

657 
pOrTîm
->
wtFœgs
 &~
TERM_OR_OK
;

658 if–
pOrTîm
->
À·Curs‹
==
iCurs‹
 ){

661 
	`as£π
–
j
==1 );

664 if–(
chngToIN
 & 
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
,

665 
pOrTîm
->
À·Curs‹
))==0 ){

670 
	`ã°ˇ£
–
pOrTîm
->
wtFœgs
 & 
TERM_COPIED
 );

671 
	`ã°ˇ£
–
pOrTîm
->
wtFœgs
 & 
TERM_VIRTUAL
 );

672 
	`as£π
–
pOrTîm
->
wtFœgs
 & (
TERM_COPIED
|
TERM_VIRTUAL
) );

675 
iCﬁumn
 = 
pOrTîm
->
u
.
À·Cﬁumn
;

676 
iCurs‹
 = 
pOrTîm
->
À·Curs‹
;

679 if–
i
<0 ){

682 
	`as£π
–
j
==1 );

683 
	`as£π
–
	`IsPowîOfTwo
(
chngToIN
) );

684 
	`as£π
–
chngToIN
==
	`sqlôe3WhîeGëMask
(&
pWInfo
->
sMaskSë
, 
iCurs‹
) );

687 
	`ã°ˇ£
–
j
==1 );

691 
okToChngToIN
 = 1;

692 ; 
i
>=0 && 
okToChngToIN
; i--, 
pOrTîm
++){

693 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

694 if–
pOrTîm
->
À·Curs‹
!=
iCurs‹
 ){

695 
pOrTîm
->
wtFœgs
 &~
TERM_OR_OK
;

696 }if–
pOrTîm
->
u
.
À·Cﬁumn
!=
iCﬁumn
 ){

697 
okToChngToIN
 = 0;

699 
affLe·
, 
affRight
;

704 
affRight
 = 
	`sqlôe3Ex¥Afföôy
(
pOrTîm
->
pEx¥
->
pRight
);

705 
affLe·
 = 
	`sqlôe3Ex¥Afföôy
(
pOrTîm
->
pEx¥
->
pLe·
);

706 if–
affRight
!=0 &&áffRight!=
affLe·
 ){

707 
okToChngToIN
 = 0;

709 
pOrTîm
->
wtFœgs
 |
TERM_OR_OK
;

719 if–
okToChngToIN
 ){

720 
Ex¥
 *
pDup
;

721 
Ex¥Li°
 *
pLi°
 = 0;

722 
Ex¥
 *
pLe·
 = 0;

723 
Ex¥
 *
pNew
;

725 
i
=
pOrWc
->
nTîm
-1, 
pOrTîm
ıOrWc->
a
; i>=0; i--,ÖOrTerm++){

726 if–(
pOrTîm
->
wtFœgs
 & 
TERM_OR_OK
)==0 ) ;

727 
	`as£π
–
pOrTîm
->
eO≥øt‹
 & 
WO_EQ
 );

728 
	`as£π
–
pOrTîm
->
À·Curs‹
==
iCurs‹
 );

729 
	`as£π
–
pOrTîm
->
u
.
À·Cﬁumn
==
iCﬁumn
 );

730 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pOrTîm
->
pEx¥
->
pRight
, 0);

731 
pLi°
 = 
	`sqlôe3Ex¥Li°Aµíd
(
pWInfo
->
pP¨£
,ÖLi°, 
pDup
);

732 
pLe·
 = 
pOrTîm
->
pEx¥
->pLeft;

734 
	`as£π
–
pLe·
!=0 );

735 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

736 
pNew
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_IN
, 
pDup
, 0, 0);

737 if–
pNew
 ){

738 
idxNew
;

739 
	`å™s„rJoöM¨kögs
(
pNew
, 
pEx¥
);

740 
	`as£π
–!
	`Ex¥HasPr›îty
(
pNew
, 
EP_xIsSñe˘
) );

741 
pNew
->
x
.
pLi°
 =ÖList;

742 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNew
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

743 
	`ã°ˇ£
–
idxNew
==0 );

744 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

745 
pTîm
 = &
pWC
->
a
[
idxTîm
];

746 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

748 
	`sqlôe3Ex¥Li°Dñëe
(
db
, 
pLi°
);

750 
pTîm
->
eO≥øt‹
 = 
WO_NOOP
;

753 
	}
}

771 
	$ãrmIsEquivÆí˚
(
P¨£
 *
pP¨£
, 
Ex¥
 *
pEx¥
){

772 
aff1
, 
aff2
;

773 
CﬁlSeq
 *
pCﬁl
;

774 c⁄° *
zCﬁl1
, *
zCﬁl2
;

775 if–!
	`O±imiz©i⁄E«bÀd
(
pP¨£
->
db
, 
SQLITE_Tønsôive
) )  0;

776 if–
pEx¥
->
›
!=
TK_EQ
 &&ÖEx¥->›!=
TK_IS
 )  0;

777 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) )  0;

778 
aff1
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pLe·
);

779 
aff2
 = 
	`sqlôe3Ex¥Afföôy
(
pEx¥
->
pRight
);

780 if–
aff1
!=
aff2


781 && (!
	`sqlôe3IsNumîicAfföôy
(
aff1
Ë|| !sqlôe3IsNumîicAfföôy(
aff2
))

785 
pCﬁl
 = 
	`sqlôe3Bö¨yCom∑ªCﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
,ÖEx¥->
pRight
);

786 if–
pCﬁl
==0 || 
	`sqlôe3SåICmp
’Cﬁl->
zName
, "BINARY")==0 )  1;

787 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pLe·
);

788 
zCﬁl1
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : 0;

789 
pCﬁl
 = 
	`sqlôe3Ex¥CﬁlSeq
(
pP¨£
, 
pEx¥
->
pRight
);

790 
zCﬁl2
 = 
pCﬁl
 ?ÖCﬁl->
zName
 : 0;

791  
	`sqlôe3_°ricmp
(
zCﬁl1
, 
zCﬁl2
)==0;

792 
	}
}

799 
Bômask
 
	$ex¥Sñe˘Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Sñe˘
 *
pS
){

800 
Bômask
 
mask
 = 0;

801  
pS
 ){

802 
SrcLi°
 *
pSrc
 = 
pS
->pSrc;

803 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pELi°
);

804 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pGroupBy
);

805 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pS
->
pOrdîBy
);

806 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pS
->
pWhîe
);

807 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pS
->
pHavög
);

808 if–
	`ALWAYS
(
pSrc
!=0) ){

809 
i
;

810 
i
=0; i<
pSrc
->
nSrc
; i++){

811 
mask
 |
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
pSrc
->
a
[
i
].
pSñe˘
);

812 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pSrc
->
a
[
i
].
pOn
);

815 
pS
 =ÖS->
pPri‹
;

817  
mask
;

818 
	}
}

832 
	$ex¥MightBeIndexed
(

833 
SrcLi°
 *
pFrom
,

834 
Bômask
 
mPªªq
,

835 
Ex¥
 *
pEx¥
,

836 *
piCur
,

837 *
piCﬁumn


839 
Index
 *
pIdx
;

840 
i
;

841 
iCur
;

842 if–
pEx¥
->
›
==
TK_COLUMN
 ){

843 *
piCur
 = 
pEx¥
->
iTabÀ
;

844 *
piCﬁumn
 = 
pEx¥
->
iCﬁumn
;

847 if–
mPªªq
==0 )  0;

848 if–(
mPªªq
&(mPrereq-1))!=0 )  0;

849 
i
=0; 
mPªªq
>1; i++, mPrereq>>=1){}

850 
iCur
 = 
pFrom
->
a
[
i
].
iCurs‹
;

851 
pIdx
=
pFrom
->
a
[
i
].
pTab
->
pIndex
;ÖIdx;ÖIdxıIdx->
pNext
){

852 if–
pIdx
->
aCﬁEx¥
==0 ) ;

853 
i
=0; i<
pIdx
->
nKeyCﬁ
; i++){

854 if–
pIdx
->
aiCﬁumn
[
i
]!=(-2) ) ;

855 if–
	`sqlôe3Ex¥Com∑ª
(
pEx¥
, 
pIdx
->
aCﬁEx¥
->
a
[
i
].pEx¥, 
iCur
)==0 ){

856 *
piCur
 = 
iCur
;

857 *
piCﬁumn
 = -2;

863 
	}
}

883 
	$ex¥A«lyze
(

884 
SrcLi°
 *
pSrc
,

885 
WhîeCœu£
 *
pWC
,

886 
idxTîm


888 
WhîeInfo
 *
pWInfo
 = 
pWC
->pWInfo;

889 
WhîeTîm
 *
pTîm
;

890 
WhîeMaskSë
 *
pMaskSë
;

891 
Ex¥
 *
pEx¥
;

892 
Bômask
 
¥îeqLe·
;

893 
Bômask
 
¥îeqAŒ
;

894 
Bômask
 
exåaRight
 = 0;

895 
Ex¥
 *
pSå1
 = 0;

896 
isCom∂ëe
 = 0;

897 
noCa£
 = 0;

898 
›
;

899 
P¨£
 *
pP¨£
 = 
pWInfo
->pParse;

900 
sqlôe3
 *
db
 = 
pP¨£
->db;

901 
eOp2
;

903 if–
db
->
mÆlocFaûed
 ){

906 
pTîm
 = &
pWC
->
a
[
idxTîm
];

907 
pMaskSë
 = &
pWInfo
->
sMaskSë
;

908 
pEx¥
 = 
pTîm
->pExpr;

909 
	`as£π
–
pEx¥
->
›
!=
TK_AS
 &&ÖEx¥->›!=
TK_COLLATE
 );

910 
¥îeqLe·
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
->
pLe·
);

911 
›
 = 
pEx¥
->op;

912 if–
›
==
TK_IN
 ){

913 
	`as£π
–
pEx¥
->
pRight
==0 );

914 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_xIsSñe˘
) ){

915 
pTîm
->
¥îeqRight
 = 
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
pEx¥
->
x
.
pSñe˘
);

917 
pTîm
->
¥îeqRight
 = 
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
pEx¥
->
x
.
pLi°
);

919 }if–
›
==
TK_ISNULL
 ){

920 
pTîm
->
¥îeqRight
 = 0;

922 
pTîm
->
¥îeqRight
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
->
pRight
);

924 
¥îeqAŒ
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pEx¥
);

925 if–
	`Ex¥HasPr›îty
(
pEx¥
, 
EP_FromJoö
) ){

926 
Bômask
 
x
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
pEx¥
->
iRightJoöTabÀ
);

927 
¥îeqAŒ
 |
x
;

928 
exåaRight
 = 
x
-1;

931 
pTîm
->
¥îeqAŒ
 =ÖrereqAll;

932 
pTîm
->
À·Curs‹
 = -1;

933 
pTîm
->
iP¨ít
 = -1;

934 
pTîm
->
eO≥øt‹
 = 0;

935 if–
	`ÆlowedOp
(
›
) ){

936 
iCur
, 
iCﬁumn
;

937 
Ex¥
 *
pLe·
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
->pLeft);

938 
Ex¥
 *
pRight
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
->pRight);

939 
u16
 
›Mask
 = (
pTîm
->
¥îeqRight
 & 
¥îeqLe·
)==0 ? 
WO_ALL
 : 
WO_EQUIV
;

940 if–
	`ex¥MightBeIndexed
(
pSrc
, 
¥îeqLe·
, 
pLe·
, &
iCur
, &
iCﬁumn
) ){

941 
pTîm
->
À·Curs‹
 = 
iCur
;

942 
pTîm
->
u
.
À·Cﬁumn
 = 
iCﬁumn
;

943 
pTîm
->
eO≥øt‹
 = 
	`›î©‹Mask
(
›
Ë& 
›Mask
;

945 if–
›
==
TK_IS
 ) 
pTîm
->
wtFœgs
 |
TERM_IS
;

946 if–
pRight


947 && 
	`ex¥MightBeIndexed
(
pSrc
, 
pTîm
->
¥îeqRight
, 
pRight
, &
iCur
, &
iCﬁumn
)

949 
WhîeTîm
 *
pNew
;

950 
Ex¥
 *
pDup
;

951 
u16
 
eExåaOp
 = 0;

952 if–
pTîm
->
À·Curs‹
>=0 ){

953 
idxNew
;

954 
pDup
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
, 0);

955 if–
db
->
mÆlocFaûed
 ){

956 
	`sqlôe3Ex¥Dñëe
(
db
, 
pDup
);

959 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pDup
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

960 if–
idxNew
==0 ) ;

961 
pNew
 = &
pWC
->
a
[
idxNew
];

962 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

963 if–
›
==
TK_IS
 ) 
pNew
->
wtFœgs
 |
TERM_IS
;

964 
pTîm
 = &
pWC
->
a
[
idxTîm
];

965 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

967 if–
	`ãrmIsEquivÆí˚
(
pP¨£
, 
pDup
) ){

968 
pTîm
->
eO≥øt‹
 |
WO_EQUIV
;

969 
eExåaOp
 = 
WO_EQUIV
;

972 
pDup
 = 
pEx¥
;

973 
pNew
 = 
pTîm
;

975 
	`ex¥Commuã
(
pP¨£
, 
pDup
);

976 
pNew
->
À·Curs‹
 = 
iCur
;

977 
pNew
->
u
.
À·Cﬁumn
 = 
iCﬁumn
;

978 
	`ã°ˇ£
–(
¥îeqLe·
 | 
exåaRight
) !=ÖrereqLeft );

979 
pNew
->
¥îeqRight
 = 
¥îeqLe·
 | 
exåaRight
;

980 
pNew
->
¥îeqAŒ
 =ÖrereqAll;

981 
pNew
->
eO≥øt‹
 = (
	`›î©‹Mask
(
pDup
->
›
Ë+ 
eExåaOp
Ë& 
›Mask
;

985 #i‚de‡
SQLITE_OMIT_BETWEEN_OPTIMIZATION


1001 if–
pEx¥
->
›
==
TK_BETWEEN
 && 
pWC
->›==
TK_AND
 ){

1002 
Ex¥Li°
 *
pLi°
 = 
pEx¥
->
x
.pList;

1003 
i
;

1004 c⁄° 
u8
 
›s
[] = {
TK_GE
, 
TK_LE
};

1005 
	`as£π
–
pLi°
!=0 );

1006 
	`as£π
–
pLi°
->
nEx¥
==2 );

1007 
i
=0; i<2; i++){

1008 
Ex¥
 *
pNewEx¥
;

1009 
idxNew
;

1010 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
›s
[
i
],

1011 
	`sqlôe3Ex¥Dup
(
db
, 
pEx¥
->
pLe·
, 0),

1012 
	`sqlôe3Ex¥Dup
(
db
, 
pLi°
->
a
[
i
].
pEx¥
, 0), 0);

1013 
	`å™s„rJoöM¨kögs
(
pNewEx¥
, 
pEx¥
);

1014 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

1015 
	`ã°ˇ£
–
idxNew
==0 );

1016 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew
);

1017 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1018 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1023 #i‡!
	`deföed
(
SQLITE_OMIT_OR_OPTIMIZATION
Ë&& !deföed(
SQLITE_OMIT_SUBQUERY
)

1027 if–
pEx¥
->
›
==
TK_OR
 ){

1028 
	`as£π
–
pWC
->
›
==
TK_AND
 );

1029 
	`ex¥A«lyzeOrTîm
(
pSrc
, 
pWC
, 
idxTîm
);

1030 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1034 #i‚de‡
SQLITE_OMIT_LIKE_OPTIMIZATION


1048 if–
pWC
->
›
==
TK_AND


1049 && 
	`isLikeOrGlob
(
pP¨£
, 
pEx¥
, &
pSå1
, &
isCom∂ëe
, &
noCa£
)

1051 
Ex¥
 *
pLe·
;

1052 
Ex¥
 *
pSå2
;

1053 
Ex¥
 *
pNewEx¥1
;

1054 
Ex¥
 *
pNewEx¥2
;

1055 
idxNew1
;

1056 
idxNew2
;

1057 c⁄° *
zCﬁlSeqName
;

1058 c⁄° 
u16
 
wtFœgs
 = 
TERM_LIKEOPT
 | 
TERM_VIRTUAL
 | 
TERM_DYNAMIC
;

1060 
pLe·
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

1061 
pSå2
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pSå1
, 0);

1067 if–
noCa£
 && !
pP¨£
->
db
->
mÆlocFaûed
 ){

1068 
i
;

1069 
c
;

1070 
pTîm
->
wtFœgs
 |
TERM_LIKE
;

1071 
i
=0; (
c
 = 
pSå1
->
u
.
zTokí
[i])!=0; i++){

1072 
pSå1
->
u
.
zTokí
[
i
] = 
	`sqlôe3Touµî
(
c
);

1073 
pSå2
->
u
.
zTokí
[
i
] = 
	`sqlôe3Tﬁowî
(
c
);

1077 if–!
db
->
mÆlocFaûed
 ){

1078 
u8
 
c
, *
pC
;

1079 
pC
 = (
u8
*)&
pSå2
->
u
.
zTokí
[
	`sqlôe3SåÀn30
(pStr2->u.zToken)-1];

1080 
c
 = *
pC
;

1081 if–
noCa£
 ){

1088 if–
c
=='A'-1 ) 
isCom∂ëe
 = 0;

1089 
c
 = 
sqlôe3UµîToLowî
[c];

1091 *
pC
 = 
c
 + 1;

1093 
zCﬁlSeqName
 = 
noCa£
 ? "NOCASE" : "BINARY";

1094 
pNewEx¥1
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

1095 
pNewEx¥1
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_GE
,

1096 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,
pNewEx¥1
,
zCﬁlSeqName
),

1097 
pSå1
, 0);

1098 
	`å™s„rJoöM¨kögs
(
pNewEx¥1
, 
pEx¥
);

1099 
idxNew1
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥1
, 
wtFœgs
);

1100 
	`ã°ˇ£
–
idxNew1
==0 );

1101 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew1
);

1102 
pNewEx¥2
 = 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0);

1103 
pNewEx¥2
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_LT
,

1104 
	`sqlôe3Ex¥AddCﬁœãSåög
(
pP¨£
,
pNewEx¥2
,
zCﬁlSeqName
),

1105 
pSå2
, 0);

1106 
	`å™s„rJoöM¨kögs
(
pNewEx¥2
, 
pEx¥
);

1107 
idxNew2
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥2
, 
wtFœgs
);

1108 
	`ã°ˇ£
–
idxNew2
==0 );

1109 
	`ex¥A«lyze
(
pSrc
, 
pWC
, 
idxNew2
);

1110 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1111 if–
isCom∂ëe
 ){

1112 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew1
, 
idxTîm
);

1113 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew2
, 
idxTîm
);

1118 #i‚de‡
SQLITE_OMIT_VIRTUALTABLE


1125 if–
pWC
->
›
==
TK_AND
 && 
	`isM©chOfCﬁumn
(
pEx¥
, &
eOp2
) ){

1126 
idxNew
;

1127 
Ex¥
 *
pRight
, *
pLe·
;

1128 
WhîeTîm
 *
pNewTîm
;

1129 
Bômask
 
¥îeqCﬁumn
, 
¥îeqEx¥
;

1131 
pRight
 = 
pEx¥
->
x
.
pLi°
->
a
[0].pExpr;

1132 
pLe·
 = 
pEx¥
->
x
.
pLi°
->
a
[1].pExpr;

1133 
¥îeqEx¥
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pRight
);

1134 
¥îeqCﬁumn
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pLe·
);

1135 if–(
¥îeqEx¥
 & 
¥îeqCﬁumn
)==0 ){

1136 
Ex¥
 *
pNewEx¥
;

1137 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_MATCH
,

1138 0, 
	`sqlôe3Ex¥Dup
(
db
, 
pRight
, 0), 0);

1139 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
, 
TERM_VIRTUAL
|
TERM_DYNAMIC
);

1140 
	`ã°ˇ£
–
idxNew
==0 );

1141 
pNewTîm
 = &
pWC
->
a
[
idxNew
];

1142 
pNewTîm
->
¥îeqRight
 = 
¥îeqEx¥
;

1143 
pNewTîm
->
À·Curs‹
 = 
pLe·
->
iTabÀ
;

1144 
pNewTîm
->
u
.
À·Cﬁumn
 = 
pLe·
->
iCﬁumn
;

1145 
pNewTîm
->
eO≥øt‹
 = 
WO_MATCH
;

1146 
pNewTîm
->
eM©chOp
 = 
eOp2
;

1147 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1148 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1149 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

1150 
pNewTîm
->
¥îeqAŒ
 = 
pTîm
->prereqAll;

1155 #ifde‡
SQLITE_ENABLE_STAT3_OR_STAT4


1163 if–
pEx¥
->
›
==
TK_NOTNULL


1164 && 
pEx¥
->
pLe·
->
›
==
TK_COLUMN


1165 && 
pEx¥
->
pLe·
->
iCﬁumn
>=0

1166 && 
	`O±imiz©i⁄E«bÀd
(
db
, 
SQLITE_Sèt34
)

1168 
Ex¥
 *
pNewEx¥
;

1169 
Ex¥
 *
pLe·
 = 
pEx¥
->pLeft;

1170 
idxNew
;

1171 
WhîeTîm
 *
pNewTîm
;

1173 
pNewEx¥
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_GT
,

1174 
	`sqlôe3Ex¥Dup
(
db
, 
pLe·
, 0),

1175 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_NULL
, 0, 0, 0), 0);

1177 
idxNew
 = 
	`whîeCœu£In£π
(
pWC
, 
pNewEx¥
,

1178 
TERM_VIRTUAL
|
TERM_DYNAMIC
|
TERM_VNULL
);

1179 if–
idxNew
 ){

1180 
pNewTîm
 = &
pWC
->
a
[
idxNew
];

1181 
pNewTîm
->
¥îeqRight
 = 0;

1182 
pNewTîm
->
À·Curs‹
 = 
pLe·
->
iTabÀ
;

1183 
pNewTîm
->
u
.
À·Cﬁumn
 = 
pLe·
->
iCﬁumn
;

1184 
pNewTîm
->
eO≥øt‹
 = 
WO_GT
;

1185 
	`m¨kTîmAsChûd
(
pWC
, 
idxNew
, 
idxTîm
);

1186 
pTîm
 = &
pWC
->
a
[
idxTîm
];

1187 
pTîm
->
wtFœgs
 |
TERM_COPIED
;

1188 
pNewTîm
->
¥îeqAŒ
 = 
pTîm
->prereqAll;

1196 
pTîm
->
¥îeqRight
 |
exåaRight
;

1197 
	}
}

1221 
	$sqlôe3WhîeS∂ô
(
WhîeCœu£
 *
pWC
, 
Ex¥
 *
pEx¥
, 
u8
 
›
){

1222 
Ex¥
 *
pE2
 = 
	`sqlôe3Ex¥SkùCﬁœã
(
pEx¥
);

1223 
pWC
->
›
 = op;

1224 if–
pE2
==0 ) ;

1225 if–
pE2
->
›
!=op ){

1226 
	`whîeCœu£In£π
(
pWC
, 
pEx¥
, 0);

1228 
	`sqlôe3WhîeS∂ô
(
pWC
, 
pE2
->
pLe·
, 
›
);

1229 
	`sqlôe3WhîeS∂ô
(
pWC
, 
pE2
->
pRight
, 
›
);

1231 
	}
}

1236 
	$sqlôe3WhîeCœu£Inô
(

1237 
WhîeCœu£
 *
pWC
,

1238 
WhîeInfo
 *
pWInfo


1240 
pWC
->
pWInfo
 =ÖWInfo;

1241 
pWC
->
pOuãr
 = 0;

1242 
pWC
->
nTîm
 = 0;

1243 
pWC
->
nSlŸ
 = 
	`AºaySize
’WC->
aSètic
);

1244 
pWC
->
a
 =ÖWC->
aSètic
;

1245 
	}
}

1252 
	$sqlôe3WhîeCœu£CÀ¨
(
WhîeCœu£
 *
pWC
){

1253 
i
;

1254 
WhîeTîm
 *
a
;

1255 
sqlôe3
 *
db
 = 
pWC
->
pWInfo
->
pP¨£
->db;

1256 
i
=
pWC
->
nTîm
-1, 
a
=pWC->a; i>=0; i--,á++){

1257 if–
a
->
wtFœgs
 & 
TERM_DYNAMIC
 ){

1258 
	`sqlôe3Ex¥Dñëe
(
db
, 
a
->
pEx¥
);

1260 if–
a
->
wtFœgs
 & 
TERM_ORINFO
 ){

1261 
	`whîeOrInfoDñëe
(
db
, 
a
->
u
.
pOrInfo
);

1262 }if–
a
->
wtFœgs
 & 
TERM_ANDINFO
 ){

1263 
	`whîeAndInfoDñëe
(
db
, 
a
->
u
.
pAndInfo
);

1266 if–
pWC
->
a
!ıWC->
aSètic
 ){

1267 
	`sqlôe3DbFªe
(
db
, 
pWC
->
a
);

1269 
	}
}

1277 
Bômask
 
	$sqlôe3WhîeEx¥Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Ex¥
 *
p
){

1278 
Bômask
 
mask
 = 0;

1279 if–
p
==0 )  0;

1280 if–
p
->
›
==
TK_COLUMN
 ){

1281 
mask
 = 
	`sqlôe3WhîeGëMask
(
pMaskSë
, 
p
->
iTabÀ
);

1282  
mask
;

1284 
mask
 = 
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
p
->
pRight
);

1285 if–
p
->
pLe·
 ) 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
,Ö->pLeft);

1286 if–
	`Ex¥HasPr›îty
(
p
, 
EP_xIsSñe˘
) ){

1287 
mask
 |
	`ex¥Sñe˘Ußge
(
pMaskSë
, 
p
->
x
.
pSñe˘
);

1288 }if–
p
->
x
.
pLi°
 ){

1289 
mask
 |
	`sqlôe3WhîeEx¥Li°Ußge
(
pMaskSë
, 
p
->
x
.
pLi°
);

1291  
mask
;

1292 
	}
}

1293 
Bômask
 
	$sqlôe3WhîeEx¥Li°Ußge
(
WhîeMaskSë
 *
pMaskSë
, 
Ex¥Li°
 *
pLi°
){

1294 
i
;

1295 
Bômask
 
mask
 = 0;

1296 if–
pLi°
 ){

1297 
i
=0; i<
pLi°
->
nEx¥
; i++){

1298 
mask
 |
	`sqlôe3WhîeEx¥Ußge
(
pMaskSë
, 
pLi°
->
a
[
i
].
pEx¥
);

1301  
mask
;

1302 
	}
}

1313 
	$sqlôe3WhîeEx¥A«lyze
(

1314 
SrcLi°
 *
pTabLi°
,

1315 
WhîeCœu£
 *
pWC


1317 
i
;

1318 
i
=
pWC
->
nTîm
-1; i>=0; i--){

1319 
	`ex¥A«lyze
(
pTabLi°
, 
pWC
, 
i
);

1321 
	}
}

1330 
	$sqlôe3WhîeTabFuncArgs
(

1331 
P¨£
 *
pP¨£
,

1332 
SrcLi°_ôem
 *
pIãm
,

1333 
WhîeCœu£
 *
pWC


1335 
TabÀ
 *
pTab
;

1336 
j
, 
k
;

1337 
Ex¥Li°
 *
pArgs
;

1338 
Ex¥
 *
pCﬁRef
;

1339 
Ex¥
 *
pTîm
;

1340 if–
pIãm
->
fg
.
isTabFunc
==0 ) ;

1341 
pTab
 = 
pIãm
->pTab;

1342 
	`as£π
–
pTab
!=0 );

1343 
pArgs
 = 
pIãm
->
u1
.
pFuncArg
;

1344 if–
pArgs
==0 ) ;

1345 
j
=
k
=0; j<
pArgs
->
nEx¥
; j++){

1346  
k
<
pTab
->
nCﬁ
 && (pTab->
aCﬁ
[k].
cﬁFœgs
 & 
COLFLAG_HIDDEN
)==0 ){k++;}

1347 if–
k
>=
pTab
->
nCﬁ
 ){

1348 
	`sqlôe3Eº‹Msg
(
pP¨£
, "too manyárguments on %s() - max %d",

1349 
pTab
->
zName
, 
j
);

1352 
pCﬁRef
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_COLUMN
, 0, 0, 0);

1353 if–
pCﬁRef
==0 ) ;

1354 
pCﬁRef
->
iTabÀ
 = 
pIãm
->
iCurs‹
;

1355 
pCﬁRef
->
iCﬁumn
 = 
k
++;

1356 
pCﬁRef
->
pTab
 =ÖTab;

1357 
pTîm
 = 
	`sqlôe3PEx¥
(
pP¨£
, 
TK_EQ
, 
pCﬁRef
,

1358 
	`sqlôe3Ex¥Dup
(
pP¨£
->
db
, 
pArgs
->
a
[
j
].
pEx¥
, 0), 0);

1359 
	`whîeCœu£In£π
(
pWC
, 
pTîm
, 
TERM_DYNAMIC
);

1361 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
Ë&& !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_BSD


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3));

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

195 
	#ªaddú_r
 
ªaddú64_r


	)

199 #ifde‡
__USE_LARGEFILE64


200 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

201 
dúít64
 *
__ª°ri˘
 
__íåy
,

202 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

203 
	`__n⁄nuŒ
 ((1, 2, 3));

208 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

210 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


211 
	~<bôs/ty≥s.h
>

214 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


223 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


226 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

229 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


230 #i‚de‡
MAXNAMLEN


232 
	~<bôs/posix1_lim.h
>

235 #ifde‡
NAME_MAX


236 
	#MAXNAMLEN
 
NAME_MAX


	)

238 
	#MAXNAMLEN
 255

	)

243 
	#__√ed_size_t


	)

244 
	~<°ddef.h
>

253 #i‚de‡
__USE_FILE_OFFSET64


254 
	`sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

255 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

256 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

257 (*
__cmp
Ë(c⁄° 
dúít
 **,

258 c⁄° 
dúít
 **))

259 
	`__n⁄nuŒ
 ((1, 2));

261 #ifde‡
__REDIRECT


262 
	`__REDIRECT
 (
sˇndú
,

263 (c⁄° *
__ª°ri˘
 
__dú
,

264 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

265 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

266 (*
__cmp
Ë(c⁄° 
dúít
 **,

267 c⁄° 
dúít
 **)),

268 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

270 
	#sˇndú
 
sˇndú64


	)

274 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


277 
	`sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

278 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

279 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

280 (*
__cmp
Ë(c⁄° 
dúít64
 **,

281 c⁄° 
dúít64
 **))

282 
	`__n⁄nuŒ
 ((1, 2));

285 #ifde‡
__USE_GNU


291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

293 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

294 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

295 (*
__cmp
Ë(c⁄° 
dúít
 **,

296 c⁄° 
dúít
 **))

297 
	`__n⁄nuŒ
 ((2, 3));

299 #ifde‡
__REDIRECT


300 
	`__REDIRECT
 (
sˇndú©
,

301 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

302 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

303 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

304 (*
__cmp
Ë(c⁄° 
dúít
 **,

305 c⁄° 
dúít
 **)),

306 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

308 
	#sˇndú©
 
sˇndú©64


	)

314 
	`sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

315 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

316 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

317 (*
__cmp
Ë(c⁄° 
dúít64
 **,

318 c⁄° 
dúít64
 **))

319 
	`__n⁄nuŒ
 ((2, 3));

323 #i‚de‡
__USE_FILE_OFFSET64


324 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

325 c⁄° 
dúít
 **
__e2
)

326 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT_NTH
 (
Æphas‹t
,

330 (c⁄° 
dúít
 **
__e1
,

331 c⁄° 
dúít
 **
__e2
),

332 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

334 
	#Æphas‹t
 
Æphas‹t64


	)

338 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


339 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

340 c⁄° 
dúít64
 **
__e2
)

341 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

346 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC


351 #i‚de‡
__USE_FILE_OFFSET64


352 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

353 
size_t
 
__nbyãs
,

354 
__off_t
 *
__ª°ri˘
 
__ba£p
)

355 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

357 #ifde‡
__REDIRECT


358 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

359 (
__fd
, *
__ª°ri˘
 
__buf
,

360 
size_t
 
__nbyãs
,

361 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

362 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

364 
	#gëdúíåõs
 
gëdúíåõs64


	)

368 #ifde‡
__USE_LARGEFILE64


369 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

370 
size_t
 
__nbyãs
,

371 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

372 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

376 #ifde‡
__USE_GNU


378 #i‚de‡
__USE_FILE_OFFSET64


379 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

380 c⁄° 
dúít
 **
__e2
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

383 #ifde‡
__REDIRECT


384 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

385 (c⁄° 
dúít
 **
__e1
,

386 c⁄° 
dúít
 **
__e2
),

387 
vîsi⁄s‹t64
)

388 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

390 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

394 #ifde‡
__USE_LARGEFILE64


395 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

396 c⁄° 
dúít64
 **
__e2
)

397 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

401 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

53 
	$‰ì
 (*
__±r
Ë
__THROW
;

56 
	$c‰ì
 (*
__±r
Ë
__THROW
;

59 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

60 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

63 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

67 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

71 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

74 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

75 
__THROW
 
__©åibuã_mÆloc__
;

79 
	smÆlöfo


81 
¨ía
;

82 
‹dblks
;

83 
smblks
;

84 
hblks
;

85 
hblkhd
;

86 
usmblks
;

87 
fsmblks
;

88 
u‹dblks
;

89 
f‹dblks
;

90 
kìpco°
;

94 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

97 #i‚de‡
M_MXFAST


98 
	#M_MXFAST
 1

	)

100 #i‚de‡
M_NLBLKS


101 
	#M_NLBLKS
 2

	)

103 #i‚de‡
M_GRAIN


104 
	#M_GRAIN
 3

	)

106 #i‚de‡
M_KEEP


107 
	#M_KEEP
 4

	)

111 
	#M_TRIM_THRESHOLD
 -1

	)

112 
	#M_TOP_PAD
 -2

	)

113 
	#M_MMAP_THRESHOLD
 -3

	)

114 
	#M_MMAP_MAX
 -4

	)

115 
	#M_CHECK_ACTION
 -5

	)

116 
	#M_PERTURB
 -6

	)

117 
	#M_ARENA_TEST
 -7

	)

118 
	#M_ARENA_MAX
 -8

	)

121 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

125 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

129 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

132 
	$mÆloc_°©s
 (Ë
__THROW
;

135 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

138 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

142 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

147 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

148 
__MALLOC_DEPRECATED
;

150 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

155 
__MALLOC_DEPRECATED
;

156 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

157 
size_t
 
__size
,

159 
__MALLOC_DEPRECATED
;

160 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

161 
size_t
 
__size
,

163 
__MALLOC_DEPRECATED
;

164 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

167 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

170 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

53 
__uid_t
 
	mpw_uid
;

54 
__gid_t
 
	mpw_gid
;

55 *
	mpw_gecos
;

56 *
	mpw_dú
;

57 *
	mpw_shñl
;

61 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


62 
	#__√ed_FILE


	)

63 
	~<°dio.h
>

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_SVID


94 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

102 
puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
gëpw«m
 (c⁄° *
__«me
);

118 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


139 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

144 
gëpwuid_r
 (
__uid_t
 
__uid
,

145 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

146 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

147 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

149 
gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

150 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

151 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

152 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

155 #ifdef 
__USE_SVID


163 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

164 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

165 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

166 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

171 #ifde‡
__USE_GNU


180 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

183 
	g__END_DECLS


	@/usr/include/readline/history.h

22 #i‚de‡
_HISTORY_H_


23 
	#_HISTORY_H_


	)

25 #ifde‡
__˝lu•lus


29 
	~<time.h
>

31 #i‡
deföed
 
READLINE_LIBRARY


32 
	~"æ°dc.h
"

33 
	~"æty≥defs.h
"

35 
	~<°dio.h
>

36 
	~<ªadlöe/æ°dc.h
>

37 
	~<ªadlöe/æty≥defs.h
>

40 #ifde‡
__STDC__


41 *
	thi°d©a_t
;

43 *
	thi°d©a_t
;

47 
	s_hi°_íåy
 {

48 *
löe
;

49 *
time°amp
;

50 
hi°d©a_t
 
d©a
;

51 } 
	tHIST_ENTRY
;

54 
	#HISTENT_BYTES
(
hs
Ë(
	`°æí
 ((hs)->
löe
Ë+ såÀ¿((hs)->
time°amp
))

	)

57 
	s_hi°_°©e
 {

58 
HIST_ENTRY
 **
íåõs
;

59 
off£t
;

60 
Àngth
;

61 
size
;

62 
Êags
;

63 } 
	tHISTORY_STATE
;

66 
	#HS_STIFLED
 0x01

	)

72 
usög_hi°‹y
 
PARAMS
(());

75 
HISTORY_STATE
 *
hi°‹y_gë_hi°‹y_°©e
 
PARAMS
(());

78 
hi°‹y_£t_hi°‹y_°©e
 
PARAMS
((
HISTORY_STATE
 *));

84 
add_hi°‹y
 
PARAMS
((const *));

88 
add_hi°‹y_time
 
PARAMS
((const *));

93 
HIST_ENTRY
 *
ªmove_hi°‹y
 
PARAMS
(());

97 
hi°d©a_t
 
‰ì_hi°‹y_íåy
 
PARAMS
((
HIST_ENTRY
 *));

102 
HIST_ENTRY
 *
ª∂a˚_hi°‹y_íåy
 
PARAMS
((, c⁄° *, 
hi°d©a_t
));

105 
˛ór_hi°‹y
 
PARAMS
(());

108 
°iÊe_hi°‹y
 
PARAMS
(());

113 
un°iÊe_hi°‹y
 
PARAMS
(());

116 
hi°‹y_is_°iÊed
 
PARAMS
(());

123 
HIST_ENTRY
 **
hi°‹y_li°
 
PARAMS
(());

127 
whîe_hi°‹y
 
PARAMS
(());

131 
HIST_ENTRY
 *
cuºít_hi°‹y
 
PARAMS
(());

135 
HIST_ENTRY
 *
hi°‹y_gë
 
PARAMS
(());

139 
time_t
 
hi°‹y_gë_time
 
PARAMS
((
HIST_ENTRY
 *));

143 
hi°‹y_tŸÆ_byãs
 
PARAMS
(());

148 
hi°‹y_£t_pos
 
PARAMS
(());

153 
HIST_ENTRY
 *
¥evious_hi°‹y
 
PARAMS
(());

158 
HIST_ENTRY
 *
√xt_hi°‹y
 
PARAMS
(());

168 
hi°‹y_£¨ch
 
PARAMS
((const *, ));

173 
hi°‹y_£¨ch_¥efix
 
PARAMS
((const *, ));

180 
hi°‹y_£¨ch_pos
 
PARAMS
((const *, , ));

187 
ªad_hi°‹y
 
PARAMS
((const *));

194 
ªad_hi°‹y_ønge
 
PARAMS
((const *, , ));

199 
wrôe_hi°‹y
 
PARAMS
((const *));

203 
≠≥nd_hi°‹y
 
PARAMS
((, const *));

206 
hi°‹y_åunˇã_fûe
 
PARAMS
((const *, ));

222 
hi°‹y_ex∑nd
 
PARAMS
((*, **));

227 *
hi°‹y_¨g_exåa˘
 
PARAMS
((, , const *));

235 *
gë_hi°‹y_evít
 
PARAMS
((const *, *, ));

239 **
hi°‹y_tokíize
 
PARAMS
((const *));

242 
hi°‹y_ba£
;

243 
hi°‹y_Àngth
;

244 
hi°‹y_max_íåõs
;

245 
hi°‹y_ex∑nsi⁄_ch¨
;

246 
hi°‹y_sub°_ch¨
;

247 *
hi°‹y_w‹d_dñimôîs
;

248 
hi°‹y_commít_ch¨
;

249 *
hi°‹y_no_ex∑nd_ch¨s
;

250 *
hi°‹y_£¨ch_dñimôî_ch¨s
;

251 
hi°‹y_quŸes_öhibô_ex∑nsi⁄
;

253 
hi°‹y_wrôe_time°amps
;

256 
max_öput_hi°‹y
;

261 
æ_löebuf_func_t
 *
hi°‹y_öhibô_ex∑nsi⁄_fun˘i⁄
;

263 #ifde‡
__˝lu•lus


	@/usr/include/readline/readline.h

22 #i‡!
deföed
 (
_READLINE_H_
)

23 
	#_READLINE_H_


	)

25 #ifde‡
__˝lu•lus


29 #i‡
deföed
 (
READLINE_LIBRARY
)

30 
	~"æ°dc.h
"

31 
	~"æty≥defs.h
"

32 
	~"keym≠s.h
"

33 
	~"tûde.h
"

35 
	~<°dio.h
>

36 
	~<ªadlöe/æ°dc.h
>

37 
	~<ªadlöe/æty≥defs.h
>

38 
	~<ªadlöe/keym≠s.h
>

39 
	~<ªadlöe/tûde.h
>

43 
	#RL_READLINE_VERSION
 0x0603

	)

44 
	#RL_VERSION_MAJOR
 6

	)

45 
	#RL_VERSION_MINOR
 3

	)

55 
	eundo_code
 { 
UNDO_DELETE
, 
UNDO_INSERT
, 
UNDO_BEGIN
, 
UNDO_END
 };

58 
	sundo_li°
 {

59 
undo_li°
 *
√xt
;

60 
°¨t
, 
íd
;

61 *
ãxt
;

62 
undo_code
 
wh©
;

63 } 
	tUNDO_LIST
;

66 
UNDO_LIST
 *
æ_undo_li°
;

69 
	s_funm≠
 {

70 c⁄° *
	g«me
;

71 
æ_comm™d_func_t
 *
	gfun˘i⁄
;

72 } 
	tFUNMAP
;

74 
FUNMAP
 **
funm≠
;

83 
æ_digô_¨gumít
 
PARAMS
((, ));

84 
æ_univîßl_¨gumít
 
PARAMS
((, ));

87 
æ_f‹w¨d_byã
 
PARAMS
((, ));

88 
æ_f‹w¨d_ch¨
 
PARAMS
((, ));

89 
æ_f‹w¨d
 
PARAMS
((, ));

90 
æ_backw¨d_byã
 
PARAMS
((, ));

91 
æ_backw¨d_ch¨
 
PARAMS
((, ));

92 
æ_backw¨d
 
PARAMS
((, ));

93 
æ_beg_of_löe
 
PARAMS
((, ));

94 
æ_íd_of_löe
 
PARAMS
((, ));

95 
æ_f‹w¨d_w‹d
 
PARAMS
((, ));

96 
æ_backw¨d_w‹d
 
PARAMS
((, ));

97 
æ_ª‰esh_löe
 
PARAMS
((, ));

98 
æ_˛ór_s¸ìn
 
PARAMS
((, ));

99 
æ_skù_csi_£quí˚
 
PARAMS
((, ));

100 
æ_¨row_keys
 
PARAMS
((, ));

103 
æ_ö£π
 
PARAMS
((, ));

104 
æ_quŸed_ö£π
 
PARAMS
((, ));

105 
æ_èb_ö£π
 
PARAMS
((, ));

106 
æ_√wlöe
 
PARAMS
((, ));

107 
æ_do_lowîˇ£_vîsi⁄
 
PARAMS
((, ));

108 
æ_rubout
 
PARAMS
((, ));

109 
æ_dñëe
 
PARAMS
((, ));

110 
æ_rubout_‹_dñëe
 
PARAMS
((, ));

111 
æ_dñëe_h‹iz⁄èl_•a˚
 
PARAMS
((, ));

112 
æ_dñëe_‹_show_com∂ëi⁄s
 
PARAMS
((, ));

113 
æ_ö£π_commít
 
PARAMS
((, ));

116 
æ_upˇ£_w‹d
 
PARAMS
((, ));

117 
æ_downˇ£_w‹d
 
PARAMS
((, ));

118 
æ_ˇpôÆize_w‹d
 
PARAMS
((, ));

121 
æ_å™•o£_w‹ds
 
PARAMS
((, ));

122 
æ_å™•o£_ch¨s
 
PARAMS
((, ));

125 
æ_ch¨_£¨ch
 
PARAMS
((, ));

126 
æ_backw¨d_ch¨_£¨ch
 
PARAMS
((, ));

129 
æ_begönög_of_hi°‹y
 
PARAMS
((, ));

130 
æ_íd_of_hi°‹y
 
PARAMS
((, ));

131 
æ_gë_√xt_hi°‹y
 
PARAMS
((, ));

132 
æ_gë_¥evious_hi°‹y
 
PARAMS
((, ));

135 
æ_£t_m¨k
 
PARAMS
((, ));

136 
æ_exch™ge_poöt_™d_m¨k
 
PARAMS
((, ));

139 
æ_vi_edôög_mode
 
PARAMS
((, ));

140 
æ_emacs_edôög_mode
 
PARAMS
((, ));

143 
æ_ovîwrôe_mode
 
PARAMS
((, ));

146 
æ_ª_ªad_öô_fûe
 
PARAMS
((, ));

147 
æ_dump_fun˘i⁄s
 
PARAMS
((, ));

148 
æ_dump_ma¸os
 
PARAMS
((, ));

149 
æ_dump_v¨übÀs
 
PARAMS
((, ));

152 
æ_com∂ëe
 
PARAMS
((, ));

153 
æ_possibÀ_com∂ëi⁄s
 
PARAMS
((, ));

154 
æ_ö£π_com∂ëi⁄s
 
PARAMS
((, ));

155 
æ_ﬁd_míu_com∂ëe
 
PARAMS
((, ));

156 
æ_míu_com∂ëe
 
PARAMS
((, ));

157 
æ_backw¨d_míu_com∂ëe
 
PARAMS
((, ));

160 
æ_kûl_w‹d
 
PARAMS
((, ));

161 
æ_backw¨d_kûl_w‹d
 
PARAMS
((, ));

162 
æ_kûl_löe
 
PARAMS
((, ));

163 
æ_backw¨d_kûl_löe
 
PARAMS
((, ));

164 
æ_kûl_fuŒ_löe
 
PARAMS
((, ));

165 
æ_unix_w‹d_rubout
 
PARAMS
((, ));

166 
æ_unix_fûíame_rubout
 
PARAMS
((, ));

167 
æ_unix_löe_disˇrd
 
PARAMS
((, ));

168 
æ_c›y_ªgi⁄_to_kûl
 
PARAMS
((, ));

169 
æ_kûl_ªgi⁄
 
PARAMS
((, ));

170 
æ_c›y_f‹w¨d_w‹d
 
PARAMS
((, ));

171 
æ_c›y_backw¨d_w‹d
 
PARAMS
((, ));

172 
æ_y™k
 
PARAMS
((, ));

173 
æ_y™k_p›
 
PARAMS
((, ));

174 
æ_y™k_¡h_¨g
 
PARAMS
((, ));

175 
æ_y™k_œ°_¨g
 
PARAMS
((, ));

177 #ifde‡
__CYGWIN__


178 
æ_∑°e_‰om_˛ùbﬂrd
 
PARAMS
((, ));

182 
æ_ªvî£_£¨ch_hi°‹y
 
PARAMS
((, ));

183 
æ_f‹w¨d_£¨ch_hi°‹y
 
PARAMS
((, ));

186 
æ_°¨t_kbd_ma¸o
 
PARAMS
((, ));

187 
æ_íd_kbd_ma¸o
 
PARAMS
((, ));

188 
æ_ˇŒ_œ°_kbd_ma¸o
 
PARAMS
((, ));

189 
æ_¥öt_œ°_kbd_ma¸o
 
PARAMS
((, ));

192 
æ_ªvît_löe
 
PARAMS
((, ));

193 
æ_undo_comm™d
 
PARAMS
((, ));

196 
æ_tûde_ex∑nd
 
PARAMS
((, ));

199 
æ_ª°¨t_ouçut
 
PARAMS
((, ));

200 
æ_°›_ouçut
 
PARAMS
((, ));

203 
æ_ab‹t
 
PARAMS
((, ));

204 
æ_ây_°©us
 
PARAMS
((, ));

207 
æ_hi°‹y_£¨ch_f‹w¨d
 
PARAMS
((, ));

208 
æ_hi°‹y_£¨ch_backw¨d
 
PARAMS
((, ));

209 
æ_hi°‹y_sub°r_£¨ch_f‹w¨d
 
PARAMS
((, ));

210 
æ_hi°‹y_sub°r_£¨ch_backw¨d
 
PARAMS
((, ));

211 
æ_n⁄öc_f‹w¨d_£¨ch
 
PARAMS
((, ));

212 
æ_n⁄öc_ªvî£_£¨ch
 
PARAMS
((, ));

213 
æ_n⁄öc_f‹w¨d_£¨ch_agaö
 
PARAMS
((, ));

214 
æ_n⁄öc_ªvî£_£¨ch_agaö
 
PARAMS
((, ));

217 
æ_ö£π_˛o£
 
PARAMS
((, ));

220 
æ_ˇŒback_h™dÀr_ö°Æl
 
PARAMS
((c⁄° *, 
æ_v˝func_t
 *));

221 
æ_ˇŒback_ªad_ch¨
 
PARAMS
(());

222 
æ_ˇŒback_h™dÀr_ªmove
 
PARAMS
(());

226 
æ_vi_ªdo
 
PARAMS
((, ));

227 
æ_vi_undo
 
PARAMS
((, ));

228 
æ_vi_y™k_¨g
 
PARAMS
((, ));

229 
æ_vi_„tch_hi°‹y
 
PARAMS
((, ));

230 
æ_vi_£¨ch_agaö
 
PARAMS
((, ));

231 
æ_vi_£¨ch
 
PARAMS
((, ));

232 
æ_vi_com∂ëe
 
PARAMS
((, ));

233 
æ_vi_tûde_ex∑nd
 
PARAMS
((, ));

234 
æ_vi_¥ev_w‹d
 
PARAMS
((, ));

235 
æ_vi_√xt_w‹d
 
PARAMS
((, ));

236 
æ_vi_íd_w‹d
 
PARAMS
((, ));

237 
æ_vi_ö£π_beg
 
PARAMS
((, ));

238 
æ_vi_≠≥nd_mode
 
PARAMS
((, ));

239 
æ_vi_≠≥nd_eﬁ
 
PARAMS
((, ));

240 
æ_vi_eof_maybe
 
PARAMS
((, ));

241 
æ_vi_ö£πi⁄_mode
 
PARAMS
((, ));

242 
æ_vi_ö£π_mode
 
PARAMS
((, ));

243 
æ_vi_movemít_mode
 
PARAMS
((, ));

244 
æ_vi_¨g_digô
 
PARAMS
((, ));

245 
æ_vi_ch™ge_ˇ£
 
PARAMS
((, ));

246 
æ_vi_put
 
PARAMS
((, ));

247 
æ_vi_cﬁumn
 
PARAMS
((, ));

248 
æ_vi_dñëe_to
 
PARAMS
((, ));

249 
æ_vi_ch™ge_to
 
PARAMS
((, ));

250 
æ_vi_y™k_to
 
PARAMS
((, ));

251 
æ_vi_rubout
 
PARAMS
((, ));

252 
æ_vi_dñëe
 
PARAMS
((, ));

253 
æ_vi_back_to_ödít
 
PARAMS
((, ));

254 
æ_vi_fú°_¥öt
 
PARAMS
((, ));

255 
æ_vi_ch¨_£¨ch
 
PARAMS
((, ));

256 
æ_vi_m©ch
 
PARAMS
((, ));

257 
æ_vi_ch™ge_ch¨
 
PARAMS
((, ));

258 
æ_vi_sub°
 
PARAMS
((, ));

259 
æ_vi_ovî°rike
 
PARAMS
((, ));

260 
æ_vi_ovî°rike_dñëe
 
PARAMS
((, ));

261 
æ_vi_ª∂a˚
 
PARAMS
((, ));

262 
æ_vi_£t_m¨k
 
PARAMS
((, ));

263 
æ_vi_gŸo_m¨k
 
PARAMS
((, ));

266 
æ_vi_check
 
PARAMS
(());

267 
æ_vi_domove
 
PARAMS
((, *));

268 
æ_vi_bøckty≥
 
PARAMS
(());

270 
æ_vi_°¨t_ö£πög
 
PARAMS
((, , ));

273 
æ_vi_fW‹d
 
PARAMS
((, ));

274 
æ_vi_bW‹d
 
PARAMS
((, ));

275 
æ_vi_eW‹d
 
PARAMS
((, ));

276 
æ_vi_fw‹d
 
PARAMS
((, ));

277 
æ_vi_bw‹d
 
PARAMS
((, ));

278 
æ_vi_ew‹d
 
PARAMS
((, ));

288 *
ªadlöe
 
PARAMS
((const *));

290 
æ_£t_¥om±
 
PARAMS
((const *));

291 
æ_ex∑nd_¥om±
 
PARAMS
((*));

293 
æ_öôülize
 
PARAMS
(());

296 
æ_disˇrd_¨gumít
 
PARAMS
(());

299 
æ_add_defun
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, ));

300 
æ_böd_key
 
PARAMS
((, 
æ_comm™d_func_t
 *));

301 
æ_böd_key_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

302 
æ_unböd_key
 
PARAMS
(());

303 
æ_unböd_key_ö_m≠
 
PARAMS
((, 
Keym≠
));

304 
æ_böd_key_if_unbound
 
PARAMS
((, 
æ_comm™d_func_t
 *));

305 
æ_böd_key_if_unbound_ö_m≠
 
PARAMS
((, 
æ_comm™d_func_t
 *, 
Keym≠
));

306 
æ_unböd_fun˘i⁄_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

307 
æ_unböd_comm™d_ö_m≠
 
PARAMS
((c⁄° *, 
Keym≠
));

308 
æ_böd_key£q
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

309 
æ_böd_key£q_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

310 
æ_böd_key£q_if_unbound
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

311 
æ_böd_key£q_if_unbound_ö_m≠
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

312 
æ_gíîic_böd
 
PARAMS
((, c⁄° *, *, 
Keym≠
));

314 *
æ_v¨übÀ_vÆue
 
PARAMS
((const *));

315 
æ_v¨übÀ_böd
 
PARAMS
((const *, const *));

318 
æ_£t_key
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *, 
Keym≠
));

321 
æ_ma¸o_böd
 
PARAMS
((c⁄° *, c⁄° *, 
Keym≠
));

324 
æ_å™¶©e_key£q
 
PARAMS
((const *, *, *));

325 *
æ_u¡øn¶©e_key£q
 
PARAMS
(());

327 
æ_comm™d_func_t
 *
æ_«med_fun˘i⁄
 
PARAMS
((const *));

328 
æ_comm™d_func_t
 *
æ_fun˘i⁄_of_key£q
 
PARAMS
((c⁄° *, 
Keym≠
, *));

330 
æ_li°_funm≠_«mes
 
PARAMS
(());

331 **
æ_övokög_key£qs_ö_m≠
 
PARAMS
((
æ_comm™d_func_t
 *, 
Keym≠
));

332 **
æ_övokög_key£qs
 
PARAMS
((
æ_comm™d_func_t
 *));

334 
æ_fun˘i⁄_dum≥r
 
PARAMS
(());

335 
æ_ma¸o_dum≥r
 
PARAMS
(());

336 
æ_v¨übÀ_dum≥r
 
PARAMS
(());

338 
æ_ªad_öô_fûe
 
PARAMS
((const *));

339 
æ_∑r£_™d_böd
 
PARAMS
((*));

342 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

343 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

344 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

345 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

346 
æ_‰ì_keym≠
 
PARAMS
((
Keym≠
));

348 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

349 *
æ_gë_keym≠_«me
 
PARAMS
((
Keym≠
));

350 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

351 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

353 
æ_£t_keym≠_‰om_edô_mode
 
PARAMS
(());

354 *
æ_gë_keym≠_«me_‰om_edô_mode
 
PARAMS
(());

357 
æ_add_funm≠_íåy
 
PARAMS
((c⁄° *, 
æ_comm™d_func_t
 *));

358 c⁄° **
æ_funm≠_«mes
 
PARAMS
(());

361 
æ_öôülize_funm≠
 
PARAMS
(());

364 
æ_push_ma¸o_öput
 
PARAMS
((*));

367 
æ_add_undo
 
PARAMS
((
undo_code
, , , *));

368 
æ_‰ì_undo_li°
 
PARAMS
(());

369 
æ_do_undo
 
PARAMS
(());

370 
æ_begö_undo_group
 
PARAMS
(());

371 
æ_íd_undo_group
 
PARAMS
(());

372 
æ_modifyög
 
PARAMS
((, ));

375 
æ_ªdi•œy
 
PARAMS
(());

376 
æ_⁄_√w_löe
 
PARAMS
(());

377 
æ_⁄_√w_löe_wôh_¥om±
 
PARAMS
(());

378 
æ_f‹˚d_upd©e_di•œy
 
PARAMS
(());

379 
æ_˛ór_mesßge
 
PARAMS
(());

380 
æ_ª£t_löe_°©e
 
PARAMS
(());

381 
æ_¸lf
 
PARAMS
(());

383 #i‡
deföed
 (
USE_VARARGS
Ë&& deföed (
PREFER_STDARG
)

384 
æ_mesßge
 (c⁄° *, ...Ë
__æ_©åibuã__
((
__f‹m©__
 (
¥ötf
, 1, 2)));

386 
æ_mesßge
 ();

389 
æ_show_ch¨
 
PARAMS
(());

392 
æ_ch¨a˘î_Àn
 
PARAMS
((, ));

395 
æ_ßve_¥om±
 
PARAMS
(());

396 
æ_ª°‹e_¥om±
 
PARAMS
(());

399 
æ_ª∂a˚_löe
 
PARAMS
((const *, ));

400 
æ_ö£π_ãxt
 
PARAMS
((const *));

401 
æ_dñëe_ãxt
 
PARAMS
((, ));

402 
æ_kûl_ãxt
 
PARAMS
((, ));

403 *
æ_c›y_ãxt
 
PARAMS
((, ));

406 
æ_¥ï_ãrmöÆ
 
PARAMS
(());

407 
æ_dïªp_ãrmöÆ
 
PARAMS
(());

408 
æ_ây_£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

409 
æ_ây_un£t_deÁu…_bödögs
 
PARAMS
((
Keym≠
));

411 
æ_ª£t_ãrmöÆ
 
PARAMS
((const *));

412 
æ_ªsize_ãrmöÆ
 
PARAMS
(());

413 
æ_£t_s¸ìn_size
 
PARAMS
((, ));

414 
æ_gë_s¸ìn_size
 
PARAMS
((*, *));

415 
æ_ª£t_s¸ìn_size
 
PARAMS
(());

417 *
æ_gë_ãrmˇp
 
PARAMS
((const *));

420 
æ_°uff_ch¨
 
PARAMS
(());

421 
æ_execuã_√xt
 
PARAMS
(());

422 
æ_˛ór_≥ndög_öput
 
PARAMS
(());

423 
æ_ªad_key
 
PARAMS
(());

424 
æ_gëc
 
PARAMS
((
FILE
 *));

425 
æ_£t_keybﬂrd_öput_timeout
 
PARAMS
(());

428 
æ_exãnd_löe_buf„r
 
PARAMS
(());

429 
æ_dög
 
PARAMS
(());

430 
æ_Æphabëic
 
PARAMS
(());

431 
æ_‰ì
 
PARAMS
((*));

434 
æ_£t_sig«ls
 
PARAMS
(());

435 
æ_˛ór_sig«ls
 
PARAMS
(());

436 
æ_˛ónup_a·î_sig«l
 
PARAMS
(());

437 
æ_ª£t_a·î_sig«l
 
PARAMS
(());

438 
æ_‰ì_löe_°©e
 
PARAMS
(());

440 
æ_echo_sig«l_ch¨
 
PARAMS
(());

442 
æ_£t_∑ªn_blök_timeout
 
PARAMS
(());

446 
æ_˛ór_hi°‹y
 
PARAMS
(());

449 
æ_maybe_ßve_löe
 
PARAMS
(());

450 
æ_maybe_unßve_löe
 
PARAMS
(());

451 
æ_maybe_ª∂a˚_löe
 
PARAMS
(());

454 
æ_com∂ëe_öã∫Æ
 
PARAMS
(());

455 
æ_di•œy_m©ch_li°
 
PARAMS
((**, , ));

457 **
æ_com∂ëi⁄_m©ches
 
PARAMS
((c⁄° *, 
æ_com≥¡ry_func_t
 *));

458 *
æ_u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

459 *
æ_fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

461 
æ_com∂ëi⁄_mode
 
PARAMS
((
æ_comm™d_func_t
 *));

465 
‰ì_undo_li°
 
PARAMS
(());

466 
maybe_ßve_löe
 
PARAMS
(());

467 
maybe_unßve_löe
 
PARAMS
(());

468 
maybe_ª∂a˚_löe
 
PARAMS
(());

470 
dög
 
PARAMS
(());

471 
Æphabëic
 
PARAMS
(());

472 
¸lf
 
PARAMS
(());

474 **
com∂ëi⁄_m©ches
 
PARAMS
((*, 
æ_com≥¡ry_func_t
 *));

475 *
u£∫ame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

476 *
fûíame_com∂ëi⁄_fun˘i⁄
 
PARAMS
((const *, ));

486 c⁄° *
æ_libøry_vîsi⁄
;

487 
æ_ªadlöe_vîsi⁄
;

490 
æ_gnu_ªadlöe_p
;

493 
æ_ªadlöe_°©e
;

497 
æ_edôög_mode
;

501 
æ_ö£π_mode
;

505 c⁄° *
æ_ªadlöe_«me
;

509 *
æ_¥om±
;

513 *
æ_di•œy_¥om±
;

516 *
æ_löe_buf„r
;

519 
æ_poöt
;

520 
æ_íd
;

523 
æ_m¨k
;

527 
æ_d⁄e
;

530 
æ_≥ndög_öput
;

535 
æ_di•©chög
;

539 
æ_ex∂icô_¨g
;

542 
æ_numîic_¨g
;

545 
æ_comm™d_func_t
 *
æ_œ°_func
;

548 c⁄° *
æ_ãrmöÆ_«me
;

551 
FILE
 *
æ_ö°ªam
;

552 
FILE
 *
æ_out°ªam
;

557 
æ_¥e„r_ív_wösize
;

561 
æ_hook_func_t
 *
æ_°¨tup_hook
;

566 
æ_hook_func_t
 *
æ_¥e_öput_hook
;

570 
æ_hook_func_t
 *
æ_evít_hook
;

573 
æ_hook_func_t
 *
æ_sig«l_evít_hook
;

577 
æ_hook_func_t
 *
æ_öput_avaûabÀ_hook
;

581 
æ_gëc_func_t
 *
æ_gëc_fun˘i⁄
;

583 
æ_voidfunc_t
 *
æ_ªdi•œy_fun˘i⁄
;

585 
æ_vötfunc_t
 *
æ_¥ï_ãrm_fun˘i⁄
;

586 
æ_voidfunc_t
 *
æ_dïªp_ãrm_fun˘i⁄
;

589 
Keym≠
 
æ_executög_keym≠
;

590 
Keym≠
 
æ_bödög_keym≠
;

592 
æ_executög_key
;

593 *
æ_executög_key£q
;

594 
æ_key_£quí˚_Àngth
;

600 
æ_îa£_em±y_löe
;

605 
æ_Æªady_¥om±ed
;

609 
æ_num_ch¨s_to_ªad
;

612 *
æ_executög_ma¸o
;

617 
æ_ˇtch_sig«ls
;

624 
æ_ˇtch_sigwöch
;

628 
æ_ch™ge_ívú⁄mít
;

634 
æ_com≥¡ry_func_t
 *
æ_com∂ëi⁄_íåy_fun˘i⁄
;

638 
æ_com≥¡ry_func_t
 *
æ_míu_com∂ëi⁄_íåy_fun˘i⁄
;

646 
æ_compign‹e_func_t
 *
æ_ign‹e_some_com∂ëi⁄s_fun˘i⁄
;

655 
æ_com∂ëi⁄_func_t
 *
æ_©ãm±ed_com∂ëi⁄_fun˘i⁄
;

660 c⁄° *
æ_basic_w‹d_bªak_ch¨a˘îs
;

665 *
æ_com∂ëî_w‹d_bªak_ch¨a˘îs
;

670 
æ_˝vfunc_t
 *
æ_com∂ëi⁄_w‹d_bªak_hook
;

676 c⁄° *
æ_com∂ëî_quŸe_ch¨a˘îs
;

679 c⁄° *
æ_basic_quŸe_ch¨a˘îs
;

682 c⁄° *
æ_fûíame_quŸe_ch¨a˘îs
;

687 c⁄° *
æ_•ecül_¥efixes
;

698 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_com∂ëi⁄_hook
;

711 
æ_i˝pfunc_t
 *
æ_dúe˘‹y_ªwrôe_hook
;

718 
æ_i˝pfunc_t
 *
æ_fûíame_°©_hook
;

729 
æ_dequŸe_func_t
 *
æ_fûíame_ªwrôe_hook
;

732 
	#æ_symbﬁic_lök_hook
 
æ_dúe˘‹y_com∂ëi⁄_hook


	)

741 
æ_compdi•_func_t
 *
æ_com∂ëi⁄_di•œy_m©ches_hook
;

746 
æ_fûíame_com∂ëi⁄_desúed
;

753 
æ_fûíame_quŸög_desúed
;

759 
æ_quŸe_func_t
 *
æ_fûíame_quŸög_fun˘i⁄
;

764 
æ_dequŸe_func_t
 *
æ_fûíame_dequŸög_fun˘i⁄
;

769 
æ_löebuf_func_t
 *
æ_ch¨_is_quŸed_p
;

773 
æ_©ãm±ed_com∂ëi⁄_ovî
;

778 
æ_com∂ëi⁄_ty≥
;

781 
æ_com∂ëi⁄_övokög_key
;

786 
æ_com∂ëi⁄_quîy_ôems
;

790 
æ_com∂ëi⁄_≠≥nd_ch¨a˘î
;

794 
æ_com∂ëi⁄_suµªss_≠≥nd
;

798 
æ_com∂ëi⁄_quŸe_ch¨a˘î
;

802 
æ_com∂ëi⁄_found_quŸe
;

807 
æ_com∂ëi⁄_suµªss_quŸe
;

810 
æ_s‹t_com∂ëi⁄_m©ches
;

821 
æ_com∂ëi⁄_m¨k_symlök_dús
;

824 
æ_ign‹e_com∂ëi⁄_du∂iˇãs
;

828 
æ_öhibô_com∂ëi⁄
;

832 
	#READERR
 (-2)

	)

835 
	#RL_PROMPT_START_IGNORE
 '\001'

	)

836 
	#RL_PROMPT_END_IGNORE
 '\002'

	)

840 
	#NO_MATCH
 0

	)

841 
	#SINGLE_MATCH
 1

	)

842 
	#MULT_MATCH
 2

	)

845 
	#RL_STATE_NONE
 0x000000

	)

847 
	#RL_STATE_INITIALIZING
 0x0000001

	)

848 
	#RL_STATE_INITIALIZED
 0x0000002

	)

849 
	#RL_STATE_TERMPREPPED
 0x0000004

	)

850 
	#RL_STATE_READCMD
 0x0000008

	)

851 
	#RL_STATE_METANEXT
 0x0000010

	)

852 
	#RL_STATE_DISPATCHING
 0x0000020

	)

853 
	#RL_STATE_MOREINPUT
 0x0000040

	)

854 
	#RL_STATE_ISEARCH
 0x0000080

	)

855 
	#RL_STATE_NSEARCH
 0x0000100

	)

856 
	#RL_STATE_SEARCH
 0x0000200

	)

857 
	#RL_STATE_NUMERICARG
 0x0000400

	)

858 
	#RL_STATE_MACROINPUT
 0x0000800

	)

859 
	#RL_STATE_MACRODEF
 0x0001000

	)

860 
	#RL_STATE_OVERWRITE
 0x0002000

	)

861 
	#RL_STATE_COMPLETING
 0x0004000

	)

862 
	#RL_STATE_SIGHANDLER
 0x0008000

	)

863 
	#RL_STATE_UNDOING
 0x0010000

	)

864 
	#RL_STATE_INPUTPENDING
 0x0020000

	)

865 
	#RL_STATE_TTYCSAVED
 0x0040000

	)

866 
	#RL_STATE_CALLBACK
 0x0080000

	)

867 
	#RL_STATE_VIMOTION
 0x0100000

	)

868 
	#RL_STATE_MULTIKEY
 0x0200000

	)

869 
	#RL_STATE_VICMDONCE
 0x0400000

	)

870 
	#RL_STATE_REDISPLAYING
 0x0800000

	)

872 
	#RL_STATE_DONE
 0x1000000

	)

874 
	#RL_SETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 |(x))

	)

875 
	#RL_UNSETSTATE
(
x
Ë(
æ_ªadlöe_°©e
 &~(x))

	)

876 
	#RL_ISSTATE
(
x
Ë(
æ_ªadlöe_°©e
 & (x))

	)

878 
	sªadlöe_°©e
 {

880 
	gpoöt
;

881 
	gíd
;

882 
	gm¨k
;

883 *
	gbuf„r
;

884 
	gbuÊí
;

885 
UNDO_LIST
 *
	gul
;

886 *
	g¥om±
;

889 
	gæ°©e
;

890 
	gd⁄e
;

891 
Keym≠
 
	gkm≠
;

894 
æ_comm™d_func_t
 *
	gœ°func
;

895 
	gösmode
;

896 
	gedmode
;

897 
	gk£qÀn
;

898 
FILE
 *
	göf
;

899 
FILE
 *
	goutf
;

900 
	g≥ndögö
;

901 *
	gma¸o
;

904 
	gˇtchsigs
;

905 
	gˇtchsigwöch
;

914 
	gª£rved
[64];

917 
æ_ßve_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

918 
æ_ª°‹e_°©e
 
PARAMS
((
ªadlöe_°©e
 *));

920 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/sqlite3.h

33 #i‚de‡
_SQLITE3_H_


34 
	#_SQLITE3_H_


	)

35 
	~<°d¨g.h
>

40 #ifde‡
__˝lu•lus


48 #i‚de‡
SQLITE_EXTERN


49 
	#SQLITE_EXTERN
 

	)

52 #i‚de‡
SQLITE_API


53 
	#SQLITE_API


	)

70 
	#SQLITE_DEPRECATED


	)

71 
	#SQLITE_EXPERIMENTAL


	)

76 #ifde‡
SQLITE_VERSION


77 #unde‡
SQLITE_VERSION


79 #ifde‡
SQLITE_VERSION_NUMBER


80 #unde‡
SQLITE_VERSION_NUMBER


110 
	#SQLITE_VERSION
 "3.8.2"

	)

111 
	#SQLITE_VERSION_NUMBER
 3008002

	)

112 
	#SQLITE_SOURCE_ID
 "2013-12-06 14:53:30 27392118af4c38c5203a04b8013e1afdb1˚bd0d"

	)

144 
SQLITE_API
 
SQLITE_EXTERN
 c⁄° 
sqlôe3_vîsi⁄
[];

145 
SQLITE_API
 c⁄° *
sqlôe3_libvîsi⁄
();

146 
SQLITE_API
 c⁄° *
sqlôe3_sour˚id
();

147 
SQLITE_API
 
sqlôe3_libvîsi⁄_numbî
();

171 #i‚de‡
SQLITE_OMIT_COMPILEOPTION_DIAGS


172 
SQLITE_API
 
sqlôe3_compûe›ti⁄_u£d
(c⁄° *
zO±Name
);

173 
SQLITE_API
 c⁄° *
sqlôe3_compûe›ti⁄_gë
(
N
);

212 
SQLITE_API
 
sqlôe3_thªadß„
();

228 
sqlôe3
 
	tsqlôe3
;

246 #ifde‡
SQLITE_INT64_TYPE


247 
SQLITE_INT64_TYPE
 
	tsqlôe_öt64
;

248 
	tSQLITE_INT64_TYPE
 
	tsqlôe_uöt64
;

249 #ñi‡
deföed
(
_MSC_VER
Ë|| deföed(
__BORLANDC__
)

250 
__öt64
 
	tsqlôe_öt64
;

251 
	t__öt64
 
	tsqlôe_uöt64
;

253 
	tsqlôe_öt64
;

254 
	tsqlôe_uöt64
;

256 
sqlôe_öt64
 
	tsqlôe3_öt64
;

257 
sqlôe_uöt64
 
	tsqlôe3_uöt64
;

263 #ifde‡
SQLITE_OMIT_FLOATING_POINT


264 
sqlôe3_öt64


	)

308 
SQLITE_API
 
sqlôe3_˛o£
(
sqlôe3
*);

309 
SQLITE_API
 
sqlôe3_˛o£_v2
(
sqlôe3
*);

316 (*
sqlôe3_ˇŒback
)(*,,**, **);

379 
SQLITE_API
 
sqlôe3_exec
(

380 
sqlôe3
*,

381 c⁄° *
sql
,

382 (*
ˇŒback
)(*,,**,**),

384 **
îrmsg


400 
	#SQLITE_OK
 0

	)

402 
	#SQLITE_ERROR
 1

	)

403 
	#SQLITE_INTERNAL
 2

	)

404 
	#SQLITE_PERM
 3

	)

405 
	#SQLITE_ABORT
 4

	)

406 
	#SQLITE_BUSY
 5

	)

407 
	#SQLITE_LOCKED
 6

	)

408 
	#SQLITE_NOMEM
 7

	)

409 
	#SQLITE_READONLY
 8

	)

410 
	#SQLITE_INTERRUPT
 9

	)

411 
	#SQLITE_IOERR
 10

	)

412 
	#SQLITE_CORRUPT
 11

	)

413 
	#SQLITE_NOTFOUND
 12

	)

414 
	#SQLITE_FULL
 13

	)

415 
	#SQLITE_CANTOPEN
 14

	)

416 
	#SQLITE_PROTOCOL
 15

	)

417 
	#SQLITE_EMPTY
 16

	)

418 
	#SQLITE_SCHEMA
 17

	)

419 
	#SQLITE_TOOBIG
 18

	)

420 
	#SQLITE_CONSTRAINT
 19

	)

421 
	#SQLITE_MISMATCH
 20

	)

422 
	#SQLITE_MISUSE
 21

	)

423 
	#SQLITE_NOLFS
 22

	)

424 
	#SQLITE_AUTH
 23

	)

425 
	#SQLITE_FORMAT
 24

	)

426 
	#SQLITE_RANGE
 25

	)

427 
	#SQLITE_NOTADB
 26

	)

428 
	#SQLITE_NOTICE
 27

	)

429 
	#SQLITE_WARNING
 28

	)

430 
	#SQLITE_ROW
 100

	)

431 
	#SQLITE_DONE
 101

	)

457 
	#SQLITE_IOERR_READ
 (
SQLITE_IOERR
 | (1<<8))

	)

458 
	#SQLITE_IOERR_SHORT_READ
 (
SQLITE_IOERR
 | (2<<8))

	)

459 
	#SQLITE_IOERR_WRITE
 (
SQLITE_IOERR
 | (3<<8))

	)

460 
	#SQLITE_IOERR_FSYNC
 (
SQLITE_IOERR
 | (4<<8))

	)

461 
	#SQLITE_IOERR_DIR_FSYNC
 (
SQLITE_IOERR
 | (5<<8))

	)

462 
	#SQLITE_IOERR_TRUNCATE
 (
SQLITE_IOERR
 | (6<<8))

	)

463 
	#SQLITE_IOERR_FSTAT
 (
SQLITE_IOERR
 | (7<<8))

	)

464 
	#SQLITE_IOERR_UNLOCK
 (
SQLITE_IOERR
 | (8<<8))

	)

465 
	#SQLITE_IOERR_RDLOCK
 (
SQLITE_IOERR
 | (9<<8))

	)

466 
	#SQLITE_IOERR_DELETE
 (
SQLITE_IOERR
 | (10<<8))

	)

467 
	#SQLITE_IOERR_BLOCKED
 (
SQLITE_IOERR
 | (11<<8))

	)

468 
	#SQLITE_IOERR_NOMEM
 (
SQLITE_IOERR
 | (12<<8))

	)

469 
	#SQLITE_IOERR_ACCESS
 (
SQLITE_IOERR
 | (13<<8))

	)

470 
	#SQLITE_IOERR_CHECKRESERVEDLOCK
 (
SQLITE_IOERR
 | (14<<8))

	)

471 
	#SQLITE_IOERR_LOCK
 (
SQLITE_IOERR
 | (15<<8))

	)

472 
	#SQLITE_IOERR_CLOSE
 (
SQLITE_IOERR
 | (16<<8))

	)

473 
	#SQLITE_IOERR_DIR_CLOSE
 (
SQLITE_IOERR
 | (17<<8))

	)

474 
	#SQLITE_IOERR_SHMOPEN
 (
SQLITE_IOERR
 | (18<<8))

	)

475 
	#SQLITE_IOERR_SHMSIZE
 (
SQLITE_IOERR
 | (19<<8))

	)

476 
	#SQLITE_IOERR_SHMLOCK
 (
SQLITE_IOERR
 | (20<<8))

	)

477 
	#SQLITE_IOERR_SHMMAP
 (
SQLITE_IOERR
 | (21<<8))

	)

478 
	#SQLITE_IOERR_SEEK
 (
SQLITE_IOERR
 | (22<<8))

	)

479 
	#SQLITE_IOERR_DELETE_NOENT
 (
SQLITE_IOERR
 | (23<<8))

	)

480 
	#SQLITE_IOERR_MMAP
 (
SQLITE_IOERR
 | (24<<8))

	)

481 
	#SQLITE_IOERR_GETTEMPPATH
 (
SQLITE_IOERR
 | (25<<8))

	)

482 
	#SQLITE_IOERR_CONVPATH
 (
SQLITE_IOERR
 | (26<<8))

	)

483 
	#SQLITE_LOCKED_SHAREDCACHE
 (
SQLITE_LOCKED
 | (1<<8))

	)

484 
	#SQLITE_BUSY_RECOVERY
 (
SQLITE_BUSY
 | (1<<8))

	)

485 
	#SQLITE_BUSY_SNAPSHOT
 (
SQLITE_BUSY
 | (2<<8))

	)

486 
	#SQLITE_CANTOPEN_NOTEMPDIR
 (
SQLITE_CANTOPEN
 | (1<<8))

	)

487 
	#SQLITE_CANTOPEN_ISDIR
 (
SQLITE_CANTOPEN
 | (2<<8))

	)

488 
	#SQLITE_CANTOPEN_FULLPATH
 (
SQLITE_CANTOPEN
 | (3<<8))

	)

489 
	#SQLITE_CANTOPEN_CONVPATH
 (
SQLITE_CANTOPEN
 | (4<<8))

	)

490 
	#SQLITE_CORRUPT_VTAB
 (
SQLITE_CORRUPT
 | (1<<8))

	)

491 
	#SQLITE_READONLY_RECOVERY
 (
SQLITE_READONLY
 | (1<<8))

	)

492 
	#SQLITE_READONLY_CANTLOCK
 (
SQLITE_READONLY
 | (2<<8))

	)

493 
	#SQLITE_READONLY_ROLLBACK
 (
SQLITE_READONLY
 | (3<<8))

	)

494 
	#SQLITE_ABORT_ROLLBACK
 (
SQLITE_ABORT
 | (2<<8))

	)

495 
	#SQLITE_CONSTRAINT_CHECK
 (
SQLITE_CONSTRAINT
 | (1<<8))

	)

496 
	#SQLITE_CONSTRAINT_COMMITHOOK
 (
SQLITE_CONSTRAINT
 | (2<<8))

	)

497 
	#SQLITE_CONSTRAINT_FOREIGNKEY
 (
SQLITE_CONSTRAINT
 | (3<<8))

	)

498 
	#SQLITE_CONSTRAINT_FUNCTION
 (
SQLITE_CONSTRAINT
 | (4<<8))

	)

499 
	#SQLITE_CONSTRAINT_NOTNULL
 (
SQLITE_CONSTRAINT
 | (5<<8))

	)

500 
	#SQLITE_CONSTRAINT_PRIMARYKEY
 (
SQLITE_CONSTRAINT
 | (6<<8))

	)

501 
	#SQLITE_CONSTRAINT_TRIGGER
 (
SQLITE_CONSTRAINT
 | (7<<8))

	)

502 
	#SQLITE_CONSTRAINT_UNIQUE
 (
SQLITE_CONSTRAINT
 | (8<<8))

	)

503 
	#SQLITE_CONSTRAINT_VTAB
 (
SQLITE_CONSTRAINT
 | (9<<8))

	)

504 
	#SQLITE_CONSTRAINT_ROWID
 (
SQLITE_CONSTRAINT
 |(10<<8))

	)

505 
	#SQLITE_NOTICE_RECOVER_WAL
 (
SQLITE_NOTICE
 | (1<<8))

	)

506 
	#SQLITE_NOTICE_RECOVER_ROLLBACK
 (
SQLITE_NOTICE
 | (2<<8))

	)

507 
	#SQLITE_WARNING_AUTOINDEX
 (
SQLITE_WARNING
 | (1<<8))

	)

516 
	#SQLITE_OPEN_READONLY
 0x00000001

	)

517 
	#SQLITE_OPEN_READWRITE
 0x00000002

	)

518 
	#SQLITE_OPEN_CREATE
 0x00000004

	)

519 
	#SQLITE_OPEN_DELETEONCLOSE
 0x00000008

	)

520 
	#SQLITE_OPEN_EXCLUSIVE
 0x00000010

	)

521 
	#SQLITE_OPEN_AUTOPROXY
 0x00000020

	)

522 
	#SQLITE_OPEN_URI
 0x00000040

	)

523 
	#SQLITE_OPEN_MEMORY
 0x00000080

	)

524 
	#SQLITE_OPEN_MAIN_DB
 0x00000100

	)

525 
	#SQLITE_OPEN_TEMP_DB
 0x00000200

	)

526 
	#SQLITE_OPEN_TRANSIENT_DB
 0x00000400

	)

527 
	#SQLITE_OPEN_MAIN_JOURNAL
 0x00000800

	)

528 
	#SQLITE_OPEN_TEMP_JOURNAL
 0x00001000

	)

529 
	#SQLITE_OPEN_SUBJOURNAL
 0x00002000

	)

530 
	#SQLITE_OPEN_MASTER_JOURNAL
 0x00004000

	)

531 
	#SQLITE_OPEN_NOMUTEX
 0x00008000

	)

532 
	#SQLITE_OPEN_FULLMUTEX
 0x00010000

	)

533 
	#SQLITE_OPEN_SHAREDCACHE
 0x00020000

	)

534 
	#SQLITE_OPEN_PRIVATECACHE
 0x00040000

	)

535 
	#SQLITE_OPEN_WAL
 0x00080000

	)

563 
	#SQLITE_IOCAP_ATOMIC
 0x00000001

	)

564 
	#SQLITE_IOCAP_ATOMIC512
 0x00000002

	)

565 
	#SQLITE_IOCAP_ATOMIC1K
 0x00000004

	)

566 
	#SQLITE_IOCAP_ATOMIC2K
 0x00000008

	)

567 
	#SQLITE_IOCAP_ATOMIC4K
 0x00000010

	)

568 
	#SQLITE_IOCAP_ATOMIC8K
 0x00000020

	)

569 
	#SQLITE_IOCAP_ATOMIC16K
 0x00000040

	)

570 
	#SQLITE_IOCAP_ATOMIC32K
 0x00000080

	)

571 
	#SQLITE_IOCAP_ATOMIC64K
 0x00000100

	)

572 
	#SQLITE_IOCAP_SAFE_APPEND
 0x00000200

	)

573 
	#SQLITE_IOCAP_SEQUENTIAL
 0x00000400

	)

574 
	#SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN
 0x00000800

	)

575 
	#SQLITE_IOCAP_POWERSAFE_OVERWRITE
 0x00001000

	)

584 
	#SQLITE_LOCK_NONE
 0

	)

585 
	#SQLITE_LOCK_SHARED
 1

	)

586 
	#SQLITE_LOCK_RESERVED
 2

	)

587 
	#SQLITE_LOCK_PENDING
 3

	)

588 
	#SQLITE_LOCK_EXCLUSIVE
 4

	)

616 
	#SQLITE_SYNC_NORMAL
 0x00002

	)

617 
	#SQLITE_SYNC_FULL
 0x00003

	)

618 
	#SQLITE_SYNC_DATAONLY
 0x00010

	)

631 
sqlôe3_fûe
 
	tsqlôe3_fûe
;

632 
	ssqlôe3_fûe
 {

633 c⁄° 
sqlôe3_io_mëhods
 *
pMëhods
;

726 
sqlôe3_io_mëhods
 
	tsqlôe3_io_mëhods
;

727 
	ssqlôe3_io_mëhods
 {

728 
iVîsi⁄
;

729 (*
xClo£
)(
sqlôe3_fûe
*);

730 (*
xRód
)(
sqlôe3_fûe
*, *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

731 (*
xWrôe
)(
sqlôe3_fûe
*, c⁄° *, 
iAmt
, 
sqlôe3_öt64
 
iOf°
);

732 (*
xTrunˇã
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
size
);

733 (*
xSync
)(
sqlôe3_fûe
*, 
Êags
);

734 (*
xFûeSize
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 *
pSize
);

735 (*
xLock
)(
sqlôe3_fûe
*, );

736 (*
xU∆ock
)(
sqlôe3_fûe
*, );

737 (*
xCheckRe£rvedLock
)(
sqlôe3_fûe
*, *
pResOut
);

738 (*
xFûeC⁄åﬁ
)(
sqlôe3_fûe
*, 
›
, *
pArg
);

739 (*
xSe˘‹Size
)(
sqlôe3_fûe
*);

740 (*
xDevi˚Ch¨a˘îi°ics
)(
sqlôe3_fûe
*);

742 (*
xShmM≠
)(
sqlôe3_fûe
*, 
iPg
, 
pgsz
, , volatile**);

743 (*
xShmLock
)(
sqlôe3_fûe
*, 
off£t
, 
n
, 
Êags
);

744 (*
xShmB¨rõr
)(
sqlôe3_fûe
*);

745 (*
xShmUnm≠
)(
sqlôe3_fûe
*, 
dñëeFœg
);

747 (*
xFëch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, 
iAmt
, **
µ
);

748 (*
xUn„tch
)(
sqlôe3_fûe
*, 
sqlôe3_öt64
 
iOf°
, *
p
);

926 
	#SQLITE_FCNTL_LOCKSTATE
 1

	)

927 
	#SQLITE_GET_LOCKPROXYFILE
 2

	)

928 
	#SQLITE_SET_LOCKPROXYFILE
 3

	)

929 
	#SQLITE_LAST_ERRNO
 4

	)

930 
	#SQLITE_FCNTL_SIZE_HINT
 5

	)

931 
	#SQLITE_FCNTL_CHUNK_SIZE
 6

	)

932 
	#SQLITE_FCNTL_FILE_POINTER
 7

	)

933 
	#SQLITE_FCNTL_SYNC_OMITTED
 8

	)

934 
	#SQLITE_FCNTL_WIN32_AV_RETRY
 9

	)

935 
	#SQLITE_FCNTL_PERSIST_WAL
 10

	)

936 
	#SQLITE_FCNTL_OVERWRITE
 11

	)

937 
	#SQLITE_FCNTL_VFSNAME
 12

	)

938 
	#SQLITE_FCNTL_POWERSAFE_OVERWRITE
 13

	)

939 
	#SQLITE_FCNTL_PRAGMA
 14

	)

940 
	#SQLITE_FCNTL_BUSYHANDLER
 15

	)

941 
	#SQLITE_FCNTL_TEMPFILENAME
 16

	)

942 
	#SQLITE_FCNTL_MMAP_SIZE
 18

	)

943 
	#SQLITE_FCNTL_TRACE
 19

	)

955 
sqlôe3_muãx
 
	tsqlôe3_muãx
;

1114 
sqlôe3_vfs
 
	tsqlôe3_vfs
;

1115 (*
sqlôe3_sysˇŒ_±r
)();

1116 
	ssqlôe3_vfs
 {

1117 
iVîsi⁄
;

1118 
szOsFûe
;

1119 
mxP©h«me
;

1120 
sqlôe3_vfs
 *
pNext
;

1121 c⁄° *
zName
;

1122 *
pAµD©a
;

1123 (*
xO≥n
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_fûe
*,

1124 
Êags
, *
pOutFœgs
);

1125 (*
xDñëe
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
syncDú
);

1126 (*
xAc˚ss
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
Êags
, *
pResOut
);

1127 (*
xFuŒP©h«me
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
nOut
, *
zOut
);

1128 *(*
xDlO≥n
)(
sqlôe3_vfs
*, c⁄° *
zFûíame
);

1129 (*
xDlEº‹
)(
sqlôe3_vfs
*, 
nByã
, *
zEºMsg
);

1130 (*(*
xDlSym
)(
sqlôe3_vfs
*,*, c⁄° *
zSymbﬁ
))();

1131 (*
xDlClo£
)(
sqlôe3_vfs
*, *);

1132 (*
xR™dom√ss
)(
sqlôe3_vfs
*, 
nByã
, *
zOut
);

1133 (*
xSÀï
)(
sqlôe3_vfs
*, 
mi¸o£c⁄ds
);

1134 (*
xCuºítTime
)(
sqlôe3_vfs
*, *);

1135 (*
xGëLa°Eº‹
)(
sqlôe3_vfs
*, , *);

1140 (*
xCuºítTimeI¡64
)(
sqlôe3_vfs
*, 
sqlôe3_öt64
*);

1145 (*
xSëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
, 
sqlôe3_sysˇŒ_±r
);

1146 
sqlôe3_sysˇŒ_±r
 (*
xGëSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1147 c⁄° *(*
xNextSy°emCÆl
)(
sqlôe3_vfs
*, c⁄° *
zName
);

1175 
	#SQLITE_ACCESS_EXISTS
 0

	)

1176 
	#SQLITE_ACCESS_READWRITE
 1

	)

1177 
	#SQLITE_ACCESS_READ
 2

	)

1201 
	#SQLITE_SHM_UNLOCK
 1

	)

1202 
	#SQLITE_SHM_LOCK
 2

	)

1203 
	#SQLITE_SHM_SHARED
 4

	)

1204 
	#SQLITE_SHM_EXCLUSIVE
 8

	)

1214 
	#SQLITE_SHM_NLOCK
 8

	)

1292 
SQLITE_API
 
sqlôe3_öôülize
();

1293 
SQLITE_API
 
sqlôe3_shutdown
();

1294 
SQLITE_API
 
sqlôe3_os_öô
();

1295 
SQLITE_API
 
sqlôe3_os_íd
();

1326 
SQLITE_API
 
sqlôe3_c⁄fig
(, ...);

1344 
SQLITE_API
 
sqlôe3_db_c⁄fig
(
sqlôe3
*, 
›
, ...);

1409 
sqlôe3_mem_mëhods
 
	tsqlôe3_mem_mëhods
;

1410 
	ssqlôe3_mem_mëhods
 {

1411 *(*
xMÆloc
)();

1412 (*
xFªe
)(*);

1413 *(*
xRóŒoc
)(*,);

1414 (*
xSize
)(*);

1415 (*
xRoundup
)();

1416 (*
xInô
)(*);

1417 (*
xShutdown
)(*);

1418 *
pAµD©a
;

1699 
	#SQLITE_CONFIG_SINGLETHREAD
 1

	)

1700 
	#SQLITE_CONFIG_MULTITHREAD
 2

	)

1701 
	#SQLITE_CONFIG_SERIALIZED
 3

	)

1702 
	#SQLITE_CONFIG_MALLOC
 4

	)

1703 
	#SQLITE_CONFIG_GETMALLOC
 5

	)

1704 
	#SQLITE_CONFIG_SCRATCH
 6

	)

1705 
	#SQLITE_CONFIG_PAGECACHE
 7

	)

1706 
	#SQLITE_CONFIG_HEAP
 8

	)

1707 
	#SQLITE_CONFIG_MEMSTATUS
 9

	)

1708 
	#SQLITE_CONFIG_MUTEX
 10

	)

1709 
	#SQLITE_CONFIG_GETMUTEX
 11

	)

1711 
	#SQLITE_CONFIG_LOOKASIDE
 13

	)

1712 
	#SQLITE_CONFIG_PCACHE
 14

	)

1713 
	#SQLITE_CONFIG_GETPCACHE
 15

	)

1714 
	#SQLITE_CONFIG_LOG
 16

	)

1715 
	#SQLITE_CONFIG_URI
 17

	)

1716 
	#SQLITE_CONFIG_PCACHE2
 18

	)

1717 
	#SQLITE_CONFIG_GETPCACHE2
 19

	)

1718 
	#SQLITE_CONFIG_COVERING_INDEX_SCAN
 20

	)

1719 
	#SQLITE_CONFIG_SQLLOG
 21

	)

1720 
	#SQLITE_CONFIG_MMAP_SIZE
 22

	)

1721 
	#SQLITE_CONFIG_WIN32_HEAPSIZE
 23

	)

1781 
	#SQLITE_DBCONFIG_LOOKASIDE
 1001

	)

1782 
	#SQLITE_DBCONFIG_ENABLE_FKEY
 1002

	)

1783 
	#SQLITE_DBCONFIG_ENABLE_TRIGGER
 1003

	)

1793 
SQLITE_API
 
sqlôe3_exãnded_ªsu…_codes
(
sqlôe3
*, 
⁄off
);

1844 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_œ°_ö£π_rowid
(
sqlôe3
*);

1898 
SQLITE_API
 
sqlôe3_ch™ges
(
sqlôe3
*);

1924 
SQLITE_API
 
sqlôe3_tŸÆ_ch™ges
(
sqlôe3
*);

1963 
SQLITE_API
 
sqlôe3_öãºu±
(
sqlôe3
*);

1998 
SQLITE_API
 
sqlôe3_com∂ëe
(c⁄° *
sql
);

1999 
SQLITE_API
 
sqlôe3_com∂ëe16
(c⁄° *
sql
);

2065 
SQLITE_API
 
sqlôe3_busy_h™dÀr
(
sqlôe3
*, (*)(*,), *);

2085 
SQLITE_API
 
sqlôe3_busy_timeout
(
sqlôe3
*, 
ms
);

2159 
SQLITE_API
 
sqlôe3_gë_èbÀ
(

2160 
sqlôe3
 *
db
,

2161 c⁄° *
zSql
,

2162 ***
∑zResu…
,

2163 *
≤Row
,

2164 *
≤Cﬁumn
,

2165 **
pzEºmsg


2167 
SQLITE_API
 
sqlôe3_‰ì_èbÀ
(**
ªsu…
);

2263 
SQLITE_API
 *
sqlôe3_m¥ötf
(const *,...);

2264 
SQLITE_API
 *
sqlôe3_vm¥ötf
(c⁄° *, 
va_li°
);

2265 
SQLITE_API
 *
sqlôe3_¢¥ötf
(,*,const *, ...);

2266 
SQLITE_API
 *
sqlôe3_v¢¥ötf
(,*,c⁄° *, 
va_li°
);

2338 
SQLITE_API
 *
sqlôe3_mÆloc
();

2339 
SQLITE_API
 *
sqlôe3_ªÆloc
(*, );

2340 
SQLITE_API
 
sqlôe3_‰ì
(*);

2365 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_u£d
();

2366 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_mem‹y_highw©î
(
ª£tFœg
);

2386 
SQLITE_API
 
sqlôe3_øndom√ss
(
N
, *
P
);

2468 
SQLITE_API
 
sqlôe3_£t_auth‹izî
(

2469 
sqlôe3
*,

2470 (*
xAuth
)(*,,const *,const *,const *,const *),

2471 *
pU£rD©a


2486 
	#SQLITE_DENY
 1

	)

2487 
	#SQLITE_IGNORE
 2

	)

2509 
	#SQLITE_CREATE_INDEX
 1

	)

2510 
	#SQLITE_CREATE_TABLE
 2

	)

2511 
	#SQLITE_CREATE_TEMP_INDEX
 3

	)

2512 
	#SQLITE_CREATE_TEMP_TABLE
 4

	)

2513 
	#SQLITE_CREATE_TEMP_TRIGGER
 5

	)

2514 
	#SQLITE_CREATE_TEMP_VIEW
 6

	)

2515 
	#SQLITE_CREATE_TRIGGER
 7

	)

2516 
	#SQLITE_CREATE_VIEW
 8

	)

2517 
	#SQLITE_DELETE
 9

	)

2518 
	#SQLITE_DROP_INDEX
 10

	)

2519 
	#SQLITE_DROP_TABLE
 11

	)

2520 
	#SQLITE_DROP_TEMP_INDEX
 12

	)

2521 
	#SQLITE_DROP_TEMP_TABLE
 13

	)

2522 
	#SQLITE_DROP_TEMP_TRIGGER
 14

	)

2523 
	#SQLITE_DROP_TEMP_VIEW
 15

	)

2524 
	#SQLITE_DROP_TRIGGER
 16

	)

2525 
	#SQLITE_DROP_VIEW
 17

	)

2526 
	#SQLITE_INSERT
 18

	)

2527 
	#SQLITE_PRAGMA
 19

	)

2528 
	#SQLITE_READ
 20

	)

2529 
	#SQLITE_SELECT
 21

	)

2530 
	#SQLITE_TRANSACTION
 22

	)

2531 
	#SQLITE_UPDATE
 23

	)

2532 
	#SQLITE_ATTACH
 24

	)

2533 
	#SQLITE_DETACH
 25

	)

2534 
	#SQLITE_ALTER_TABLE
 26

	)

2535 
	#SQLITE_REINDEX
 27

	)

2536 
	#SQLITE_ANALYZE
 28

	)

2537 
	#SQLITE_CREATE_VTABLE
 29

	)

2538 
	#SQLITE_DROP_VTABLE
 30

	)

2539 
	#SQLITE_FUNCTION
 31

	)

2540 
	#SQLITE_SAVEPOINT
 32

	)

2541 
	#SQLITE_COPY
 0

	)

2571 
SQLITE_API
 *
sqlôe3_åa˚
(
sqlôe3
*, (*
xTø˚
)(*,const *), *);

2572 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 *
sqlôe3_¥ofûe
(
sqlôe3
*,

2573 (*
xProfûe
)(*,c⁄° *,
sqlôe3_uöt64
), *);

2606 
SQLITE_API
 
sqlôe3_¥ogªss_h™dÀr
(
sqlôe3
*, , (*)(*), *);

2810 
SQLITE_API
 
sqlôe3_›í
(

2811 c⁄° *
fûíame
,

2812 
sqlôe3
 **
µDb


2814 
SQLITE_API
 
sqlôe3_›í16
(

2815 c⁄° *
fûíame
,

2816 
sqlôe3
 **
µDb


2818 
SQLITE_API
 
sqlôe3_›í_v2
(

2819 c⁄° *
fûíame
,

2820 
sqlôe3
 **
µDb
,

2821 
Êags
,

2822 c⁄° *
zVfs


2864 
SQLITE_API
 c⁄° *
sqlôe3_uri_∑ømëî
(c⁄° *
zFûíame
, c⁄° *
zP¨am
);

2865 
SQLITE_API
 
sqlôe3_uri_boﬁón
(c⁄° *
zFûe
, c⁄° *
zP¨am
, 
bDeÁu…
);

2866 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_uri_öt64
(const *, const *, sqlite3_int64);

2907 
SQLITE_API
 
sqlôe3_îrcode
(
sqlôe3
 *
db
);

2908 
SQLITE_API
 
sqlôe3_exãnded_îrcode
(
sqlôe3
 *
db
);

2909 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg
(
sqlôe3
*);

2910 
SQLITE_API
 c⁄° *
sqlôe3_îrmsg16
(
sqlôe3
*);

2911 
SQLITE_API
 c⁄° *
sqlôe3_îr°r
();

2937 
sqlôe3_°mt
 
	tsqlôe3_°mt
;

2978 
SQLITE_API
 
sqlôe3_limô
(
sqlôe3
*, 
id
, 
√wVÆ
);

3032 
	#SQLITE_LIMIT_LENGTH
 0

	)

3033 
	#SQLITE_LIMIT_SQL_LENGTH
 1

	)

3034 
	#SQLITE_LIMIT_COLUMN
 2

	)

3035 
	#SQLITE_LIMIT_EXPR_DEPTH
 3

	)

3036 
	#SQLITE_LIMIT_COMPOUND_SELECT
 4

	)

3037 
	#SQLITE_LIMIT_VDBE_OP
 5

	)

3038 
	#SQLITE_LIMIT_FUNCTION_ARG
 6

	)

3039 
	#SQLITE_LIMIT_ATTACHED
 7

	)

3040 
	#SQLITE_LIMIT_LIKE_PATTERN_LENGTH
 8

	)

3041 
	#SQLITE_LIMIT_VARIABLE_NUMBER
 9

	)

3042 
	#SQLITE_LIMIT_TRIGGER_DEPTH
 10

	)

3125 
SQLITE_API
 
sqlôe3_¥ï¨e
(

3126 
sqlôe3
 *
db
,

3127 c⁄° *
zSql
,

3128 
nByã
,

3129 
sqlôe3_°mt
 **
µStmt
,

3130 c⁄° **
pzTaû


3132 
SQLITE_API
 
sqlôe3_¥ï¨e_v2
(

3133 
sqlôe3
 *
db
,

3134 c⁄° *
zSql
,

3135 
nByã
,

3136 
sqlôe3_°mt
 **
µStmt
,

3137 c⁄° **
pzTaû


3139 
SQLITE_API
 
sqlôe3_¥ï¨e16
(

3140 
sqlôe3
 *
db
,

3141 c⁄° *
zSql
,

3142 
nByã
,

3143 
sqlôe3_°mt
 **
µStmt
,

3144 c⁄° **
pzTaû


3146 
SQLITE_API
 
sqlôe3_¥ï¨e16_v2
(

3147 
sqlôe3
 *
db
,

3148 c⁄° *
zSql
,

3149 
nByã
,

3150 
sqlôe3_°mt
 **
µStmt
,

3151 c⁄° **
pzTaû


3161 
SQLITE_API
 c⁄° *
sqlôe3_sql
(
sqlôe3_°mt
 *
pStmt
);

3192 
SQLITE_API
 
sqlôe3_°mt_ªad⁄ly
(
sqlôe3_°mt
 *
pStmt
);

3211 
SQLITE_API
 
sqlôe3_°mt_busy
(
sqlôe3_°mt
*);

3250 
Mem
 
	tsqlôe3_vÆue
;

3264 
sqlôe3_c⁄ãxt
 
	tsqlôe3_c⁄ãxt
;

3361 
SQLITE_API
 
sqlôe3_böd_blob
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3362 
SQLITE_API
 
sqlôe3_böd_doubÀ
(
sqlôe3_°mt
*, , );

3363 
SQLITE_API
 
sqlôe3_böd_öt
(
sqlôe3_°mt
*, , );

3364 
SQLITE_API
 
sqlôe3_böd_öt64
(
sqlôe3_°mt
*, , 
sqlôe3_öt64
);

3365 
SQLITE_API
 
sqlôe3_böd_nuŒ
(
sqlôe3_°mt
*, );

3366 
SQLITE_API
 
sqlôe3_böd_ãxt
(
sqlôe3_°mt
*, , c⁄° *, 
n
, (*)(*));

3367 
SQLITE_API
 
sqlôe3_böd_ãxt16
(
sqlôe3_°mt
*, , const *, , (*)(*));

3368 
SQLITE_API
 
sqlôe3_böd_vÆue
(
sqlôe3_°mt
*, , c⁄° 
sqlôe3_vÆue
*);

3369 
SQLITE_API
 
sqlôe3_böd_zîoblob
(
sqlôe3_°mt
*, , 
n
);

3389 
SQLITE_API
 
sqlôe3_böd_∑ømëî_cou¡
(
sqlôe3_°mt
*);

3416 
SQLITE_API
 c⁄° *
sqlôe3_böd_∑ømëî_«me
(
sqlôe3_°mt
*, );

3432 
SQLITE_API
 
sqlôe3_böd_∑ømëî_ödex
(
sqlôe3_°mt
*, c⁄° *
zName
);

3441 
SQLITE_API
 
sqlôe3_˛ór_bödögs
(
sqlôe3_°mt
*);

3452 
SQLITE_API
 
sqlôe3_cﬁumn_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3480 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me
(
sqlôe3_°mt
*, 
N
);

3481 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_«me16
(
sqlôe3_°mt
*, 
N
);

3528 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me
(
sqlôe3_°mt
*,);

3529 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_d©aba£_«me16
(
sqlôe3_°mt
*,);

3530 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me
(
sqlôe3_°mt
*,);

3531 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_èbÀ_«me16
(
sqlôe3_°mt
*,);

3532 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me
(
sqlôe3_°mt
*,);

3533 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_‹igö_«me16
(
sqlôe3_°mt
*,);

3564 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥
(
sqlôe3_°mt
*,);

3565 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_de˛ty≥16
(
sqlôe3_°mt
*,);

3644 
SQLITE_API
 
sqlôe3_°ï
(
sqlôe3_°mt
*);

3664 
SQLITE_API
 
sqlôe3_d©a_cou¡
(
sqlôe3_°mt
 *
pStmt
);

3687 
	#SQLITE_INTEGER
 1

	)

3688 
	#SQLITE_FLOAT
 2

	)

3689 
	#SQLITE_BLOB
 4

	)

3690 
	#SQLITE_NULL
 5

	)

3691 #ifde‡
SQLITE_TEXT


3692 #unde‡
SQLITE_TEXT


3694 
	#SQLITE_TEXT
 3

	)

3696 
	#SQLITE3_TEXT
 3

	)

3860 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_blob
(
sqlôe3_°mt
*, 
iCﬁ
);

3861 
SQLITE_API
 
sqlôe3_cﬁumn_byãs
(
sqlôe3_°mt
*, 
iCﬁ
);

3862 
SQLITE_API
 
sqlôe3_cﬁumn_byãs16
(
sqlôe3_°mt
*, 
iCﬁ
);

3863 
SQLITE_API
 
sqlôe3_cﬁumn_doubÀ
(
sqlôe3_°mt
*, 
iCﬁ
);

3864 
SQLITE_API
 
sqlôe3_cﬁumn_öt
(
sqlôe3_°mt
*, 
iCﬁ
);

3865 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_cﬁumn_öt64
(
sqlôe3_°mt
*, 
iCﬁ
);

3866 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt
(
sqlôe3_°mt
*, 
iCﬁ
);

3867 
SQLITE_API
 c⁄° *
sqlôe3_cﬁumn_ãxt16
(
sqlôe3_°mt
*, 
iCﬁ
);

3868 
SQLITE_API
 
sqlôe3_cﬁumn_ty≥
(
sqlôe3_°mt
*, 
iCﬁ
);

3869 
SQLITE_API
 
sqlôe3_vÆue
 *
sqlôe3_cﬁumn_vÆue
(
sqlôe3_°mt
*, 
iCﬁ
);

3896 
SQLITE_API
 
sqlôe3_föÆize
(
sqlôe3_°mt
 *
pStmt
);

3922 
SQLITE_API
 
sqlôe3_ª£t
(
sqlôe3_°mt
 *
pStmt
);

4012 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄
(

4013 
sqlôe3
 *
db
,

4014 c⁄° *
zFun˘i⁄Name
,

4015 
nArg
,

4016 
eTextRï
,

4017 *
pAµ
,

4018 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4019 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4020 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4022 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄16
(

4023 
sqlôe3
 *
db
,

4024 c⁄° *
zFun˘i⁄Name
,

4025 
nArg
,

4026 
eTextRï
,

4027 *
pAµ
,

4028 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4029 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4030 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*)

4032 
SQLITE_API
 
sqlôe3_¸óã_fun˘i⁄_v2
(

4033 
sqlôe3
 *
db
,

4034 c⁄° *
zFun˘i⁄Name
,

4035 
nArg
,

4036 
eTextRï
,

4037 *
pAµ
,

4038 (*
xFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4039 (*
xSãp
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

4040 (*
xFöÆ
)(
sqlôe3_c⁄ãxt
*),

4041 (*
xDe°roy
)(*)

4050 
	#SQLITE_UTF8
 1

	)

4051 
	#SQLITE_UTF16LE
 2

	)

4052 
	#SQLITE_UTF16BE
 3

	)

4053 
	#SQLITE_UTF16
 4

	)

4054 
	#SQLITE_ANY
 5

	)

4055 
	#SQLITE_UTF16_ALIGNED
 8

	)

4067 #i‚de‡
SQLITE_OMIT_DEPRECATED


4068 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_aggªg©e_cou¡
(
sqlôe3_c⁄ãxt
*);

4069 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_expúed
(
sqlôe3_°mt
*);

4070 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_å™s„r_bödögs
(
sqlôe3_°mt
*, sqlite3_stmt*);

4071 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_globÆ_ªcovî
();

4072 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_thªad_˛ónup
();

4073 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_mem‹y_Æ¨m
((*)(*,
sqlôe3_öt64
,),

4074 *,
sqlôe3_öt64
);

4122 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_blob
(
sqlôe3_vÆue
*);

4123 
SQLITE_API
 
sqlôe3_vÆue_byãs
(
sqlôe3_vÆue
*);

4124 
SQLITE_API
 
sqlôe3_vÆue_byãs16
(
sqlôe3_vÆue
*);

4125 
SQLITE_API
 
sqlôe3_vÆue_doubÀ
(
sqlôe3_vÆue
*);

4126 
SQLITE_API
 
sqlôe3_vÆue_öt
(
sqlôe3_vÆue
*);

4127 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_vÆue_öt64
(
sqlôe3_vÆue
*);

4128 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt
(
sqlôe3_vÆue
*);

4129 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16
(
sqlôe3_vÆue
*);

4130 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16À
(
sqlôe3_vÆue
*);

4131 
SQLITE_API
 c⁄° *
sqlôe3_vÆue_ãxt16be
(
sqlôe3_vÆue
*);

4132 
SQLITE_API
 
sqlôe3_vÆue_ty≥
(
sqlôe3_vÆue
*);

4133 
SQLITE_API
 
sqlôe3_vÆue_numîic_ty≥
(
sqlôe3_vÆue
*);

4177 
SQLITE_API
 *
sqlôe3_aggªg©e_c⁄ãxt
(
sqlôe3_c⁄ãxt
*, 
nByãs
);

4191 
SQLITE_API
 *
sqlôe3_u£r_d©a
(
sqlôe3_c⁄ãxt
*);

4202 
SQLITE_API
 
sqlôe3
 *
sqlôe3_c⁄ãxt_db_h™dÀ
(
sqlôe3_c⁄ãxt
*);

4254 
SQLITE_API
 *
sqlôe3_gë_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
);

4255 
SQLITE_API
 
sqlôe3_£t_auxd©a
(
sqlôe3_c⁄ãxt
*, 
N
, *, (*)(*));

4272 (*
sqlôe3_de°ru˘‹_ty≥
)(*);

4273 
	#SQLITE_STATIC
 ((
sqlôe3_de°ru˘‹_ty≥
)0)

	)

4274 
	#SQLITE_TRANSIENT
 ((
sqlôe3_de°ru˘‹_ty≥
)-1)

	)

4386 
SQLITE_API
 
sqlôe3_ªsu…_blob
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4387 
SQLITE_API
 
sqlôe3_ªsu…_doubÀ
(
sqlôe3_c⁄ãxt
*, );

4388 
SQLITE_API
 
sqlôe3_ªsu…_îr‹
(
sqlôe3_c⁄ãxt
*, const *, );

4389 
SQLITE_API
 
sqlôe3_ªsu…_îr‹16
(
sqlôe3_c⁄ãxt
*, const *, );

4390 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_toobig
(
sqlôe3_c⁄ãxt
*);

4391 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_nomem
(
sqlôe3_c⁄ãxt
*);

4392 
SQLITE_API
 
sqlôe3_ªsu…_îr‹_code
(
sqlôe3_c⁄ãxt
*, );

4393 
SQLITE_API
 
sqlôe3_ªsu…_öt
(
sqlôe3_c⁄ãxt
*, );

4394 
SQLITE_API
 
sqlôe3_ªsu…_öt64
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_öt64
);

4395 
SQLITE_API
 
sqlôe3_ªsu…_nuŒ
(
sqlôe3_c⁄ãxt
*);

4396 
SQLITE_API
 
sqlôe3_ªsu…_ãxt
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4397 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16
(
sqlôe3_c⁄ãxt
*, const *, , (*)(*));

4398 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16À
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4399 
SQLITE_API
 
sqlôe3_ªsu…_ãxt16be
(
sqlôe3_c⁄ãxt
*, const *, ,(*)(*));

4400 
SQLITE_API
 
sqlôe3_ªsu…_vÆue
(
sqlôe3_c⁄ãxt
*, 
sqlôe3_vÆue
*);

4401 
SQLITE_API
 
sqlôe3_ªsu…_zîoblob
(
sqlôe3_c⁄ãxt
*, 
n
);

4482 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄
(

4483 
sqlôe3
*,

4484 c⁄° *
zName
,

4485 
eTextRï
,

4486 *
pArg
,

4487 (*
xCom∑ª
)(*,,const *,,const *)

4489 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄_v2
(

4490 
sqlôe3
*,

4491 c⁄° *
zName
,

4492 
eTextRï
,

4493 *
pArg
,

4494 (*
xCom∑ª
)(*,,const *,,const *),

4495 (*
xDe°roy
)(*)

4497 
SQLITE_API
 
sqlôe3_¸óã_cﬁœti⁄16
(

4498 
sqlôe3
*,

4499 c⁄° *
zName
,

4500 
eTextRï
,

4501 *
pArg
,

4502 (*
xCom∑ª
)(*,,const *,,const *)

4531 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded
(

4532 
sqlôe3
*,

4534 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4536 
SQLITE_API
 
sqlôe3_cﬁœti⁄_√eded16
(

4537 
sqlôe3
*,

4539 (*)(*,
sqlôe3
*,
eTextRï
,const *)

4542 #ifde‡
SQLITE_HAS_CODEC


4550 
SQLITE_API
 
sqlôe3_key
(

4551 
sqlôe3
 *
db
,

4552 c⁄° *
pKey
, 
nKey


4554 
SQLITE_API
 
sqlôe3_key_v2
(

4555 
sqlôe3
 *
db
,

4556 c⁄° *
zDbName
,

4557 c⁄° *
pKey
, 
nKey


4568 
SQLITE_API
 
sqlôe3_ªkey
(

4569 
sqlôe3
 *
db
,

4570 c⁄° *
pKey
, 
nKey


4572 
SQLITE_API
 
sqlôe3_ªkey_v2
(

4573 
sqlôe3
 *
db
,

4574 c⁄° *
zDbName
,

4575 c⁄° *
pKey
, 
nKey


4582 
SQLITE_API
 
sqlôe3_a˘iv©e_£e
(

4583 c⁄° *
zPassPhø£


4587 #ifde‡
SQLITE_ENABLE_CEROD


4592 
SQLITE_API
 
sqlôe3_a˘iv©e_˚rod
(

4593 c⁄° *
zPassPhø£


4614 
SQLITE_API
 
sqlôe3_¶ìp
();

4660 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_ãmp_dúe˘‹y
;

4697 
SQLITE_API
 
SQLITE_EXTERN
 *
sqlôe3_d©a_dúe˘‹y
;

4720 
SQLITE_API
 
sqlôe3_gë_autocommô
(
sqlôe3
*);

4732 
SQLITE_API
 
sqlôe3
 *
sqlôe3_db_h™dÀ
(
sqlôe3_°mt
*);

4748 
SQLITE_API
 c⁄° *
sqlôe3_db_fûíame
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4757 
SQLITE_API
 
sqlôe3_db_ªad⁄ly
(
sqlôe3
 *
db
, c⁄° *
zDbName
);

4772 
SQLITE_API
 
sqlôe3_°mt
 *
sqlôe3_√xt_°mt
(
sqlôe3
 *
pDb
, sqlôe3_°mà*
pStmt
);

4820 
SQLITE_API
 *
sqlôe3_commô_hook
(
sqlôe3
*, (*)(*), *);

4821 
SQLITE_API
 *
sqlôe3_rﬁlback_hook
(
sqlôe3
*, (*)(*), *);

4871 
SQLITE_API
 *
sqlôe3_upd©e_hook
(

4872 
sqlôe3
*,

4873 (*)(*,,c⁄° *,c⁄° *,
sqlôe3_öt64
),

4906 
SQLITE_API
 
sqlôe3_íabÀ_sh¨ed_ˇche
();

4922 
SQLITE_API
 
sqlôe3_ªÀa£_mem‹y
();

4935 
SQLITE_API
 
sqlôe3_db_ªÀa£_mem‹y
(
sqlôe3
*);

4987 
SQLITE_API
 
sqlôe3_öt64
 
sqlôe3_so·_hóp_limô64
(sqlôe3_öt64 
N
);

4998 
SQLITE_API
 
SQLITE_DEPRECATED
 
sqlôe3_so·_hóp_limô
(
N
);

5063 
SQLITE_API
 
sqlôe3_èbÀ_cﬁumn_mëad©a
(

5064 
sqlôe3
 *
db
,

5065 c⁄° *
zDbName
,

5066 c⁄° *
zTabÀName
,

5067 c⁄° *
zCﬁumnName
,

5068 c⁄° **
pzD©aTy≥
,

5069 c⁄° **
pzCﬁlSeq
,

5070 *
pNŸNuŒ
,

5071 *
pPrim¨yKey
,

5072 *
pAutoöc


5109 
SQLITE_API
 
sqlôe3_lﬂd_exãnsi⁄
(

5110 
sqlôe3
 *
db
,

5111 c⁄° *
zFûe
,

5112 c⁄° *
zProc
,

5113 **
pzEºMsg


5129 
SQLITE_API
 
sqlôe3_íabÀ_lﬂd_exãnsi⁄
(
sqlôe3
 *
db
, 
⁄off
);

5167 
SQLITE_API
 
sqlôe3_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5179 
SQLITE_API
 
sqlôe3_ˇn˚l_auto_exãnsi⁄
((*
xE¡ryPoöt
)());

5187 
SQLITE_API
 
sqlôe3_ª£t_auto_exãnsi⁄
();

5201 
sqlôe3_vèb
 
	tsqlôe3_vèb
;

5202 
sqlôe3_ödex_öfo
 
	tsqlôe3_ödex_öfo
;

5203 
sqlôe3_vèb_curs‹
 
	tsqlôe3_vèb_curs‹
;

5204 
sqlôe3_moduÀ
 
	tsqlôe3_moduÀ
;

5222 
	ssqlôe3_moduÀ
 {

5223 
iVîsi⁄
;

5224 (*
xCª©e
)(
sqlôe3
*, *
pAux
,

5225 
¨gc
, c⁄° *c⁄°*
¨gv
,

5226 
sqlôe3_vèb
 **
µVTab
, **);

5227 (*
xC⁄√˘
)(
sqlôe3
*, *
pAux
,

5228 
¨gc
, c⁄° *c⁄°*
¨gv
,

5229 
sqlôe3_vèb
 **
µVTab
, **);

5230 (*
xBe°Index
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_ödex_öfo
*);

5231 (*
xDisc⁄√˘
)(
sqlôe3_vèb
 *
pVTab
);

5232 (*
xDe°roy
)(
sqlôe3_vèb
 *
pVTab
);

5233 (*
xO≥n
)(
sqlôe3_vèb
 *
pVTab
, 
sqlôe3_vèb_curs‹
 **
µCurs‹
);

5234 (*
xClo£
)(
sqlôe3_vèb_curs‹
*);

5235 (*
xFûãr
)(
sqlôe3_vèb_curs‹
*, 
idxNum
, c⁄° *
idxSå
,

5236 
¨gc
, 
sqlôe3_vÆue
 **
¨gv
);

5237 (*
xNext
)(
sqlôe3_vèb_curs‹
*);

5238 (*
xEof
)(
sqlôe3_vèb_curs‹
*);

5239 (*
xCﬁumn
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_c⁄ãxt
*, );

5240 (*
xRowid
)(
sqlôe3_vèb_curs‹
*, 
sqlôe3_öt64
 *
pRowid
);

5241 (*
xUpd©e
)(
sqlôe3_vèb
 *, , 
sqlôe3_vÆue
 **, 
sqlôe3_öt64
 *);

5242 (*
xBegö
)(
sqlôe3_vèb
 *
pVTab
);

5243 (*
xSync
)(
sqlôe3_vèb
 *
pVTab
);

5244 (*
xCommô
)(
sqlôe3_vèb
 *
pVTab
);

5245 (*
xRﬁlback
)(
sqlôe3_vèb
 *
pVTab
);

5246 (*
xFödFun˘i⁄
)(
sqlôe3_vèb
 *
pVèb
, 
nArg
, c⁄° *
zName
,

5247 (**
pxFunc
)(
sqlôe3_c⁄ãxt
*,,
sqlôe3_vÆue
**),

5248 **
µArg
);

5249 (*
xRíame
)(
sqlôe3_vèb
 *
pVèb
, c⁄° *
zNew
);

5252 (*
xSavïoöt
)(
sqlôe3_vèb
 *
pVTab
, );

5253 (*
xRñó£
)(
sqlôe3_vèb
 *
pVTab
, );

5254 (*
xRﬁlbackTo
)(
sqlôe3_vèb
 *
pVTab
, );

5322 
	ssqlôe3_ödex_öfo
 {

5324 
nC⁄°øöt
;

5325 
	ssqlôe3_ödex_c⁄°øöt
 {

5326 
iCﬁumn
;

5327 
›
;

5328 
ußbÀ
;

5329 
iTîmOff£t
;

5330 } *
aC⁄°øöt
;

5331 
nOrdîBy
;

5332 
	ssqlôe3_ödex_‹dîby
 {

5333 
iCﬁumn
;

5334 
desc
;

5335 } *
aOrdîBy
;

5337 
	ssqlôe3_ödex_c⁄°øöt_ußge
 {

5338 
¨gvIndex
;

5339 
omô
;

5340 } *
aC⁄°øötUßge
;

5341 
idxNum
;

5342 *
idxSå
;

5343 
√edToFªeIdxSå
;

5344 
‹dîByC⁄sumed
;

5345 
e°im©edCo°
;

5347 
sqlôe3_öt64
 
e°im©edRows
;

5358 
	#SQLITE_INDEX_CONSTRAINT_EQ
 2

	)

5359 
	#SQLITE_INDEX_CONSTRAINT_GT
 4

	)

5360 
	#SQLITE_INDEX_CONSTRAINT_LE
 8

	)

5361 
	#SQLITE_INDEX_CONSTRAINT_LT
 16

	)

5362 
	#SQLITE_INDEX_CONSTRAINT_GE
 32

	)

5363 
	#SQLITE_INDEX_CONSTRAINT_MATCH
 64

	)

5390 
SQLITE_API
 
sqlôe3_¸óã_moduÀ
(

5391 
sqlôe3
 *
db
,

5392 c⁄° *
zName
,

5393 c⁄° 
sqlôe3_moduÀ
 *
p
,

5394 *
pClõ¡D©a


5396 
SQLITE_API
 
sqlôe3_¸óã_moduÀ_v2
(

5397 
sqlôe3
 *
db
,

5398 c⁄° *
zName
,

5399 c⁄° 
sqlôe3_moduÀ
 *
p
,

5400 *
pClõ¡D©a
,

5401 (*
xDe°roy
)(*)

5422 
	ssqlôe3_vèb
 {

5423 c⁄° 
sqlôe3_moduÀ
 *
pModuÀ
;

5424 
nRef
;

5425 *
zEºMsg
;

5446 
	ssqlôe3_vèb_curs‹
 {

5447 
sqlôe3_vèb
 *
pVèb
;

5459 
SQLITE_API
 
sqlôe3_de˛¨e_vèb
(
sqlôe3
*, c⁄° *
zSQL
);

5477 
SQLITE_API
 
sqlôe3_ovîlﬂd_fun˘i⁄
(
sqlôe3
*, c⁄° *
zFuncName
, 
nArg
);

5501 
sqlôe3_blob
 
	tsqlôe3_blob
;

5562 
SQLITE_API
 
sqlôe3_blob_›í
(

5563 
sqlôe3
*,

5564 c⁄° *
zDb
,

5565 c⁄° *
zTabÀ
,

5566 c⁄° *
zCﬁumn
,

5567 
sqlôe3_öt64
 
iRow
,

5568 
Êags
,

5569 
sqlôe3_blob
 **
µBlob


5594 
SQLITE_API
 
SQLITE_EXPERIMENTAL
 
sqlôe3_blob_ª›í
(
sqlôe3_blob
 *, 
sqlôe3_öt64
);

5618 
SQLITE_API
 
sqlôe3_blob_˛o£
(
sqlôe3_blob
 *);

5633 
SQLITE_API
 
sqlôe3_blob_byãs
(
sqlôe3_blob
 *);

5661 
SQLITE_API
 
sqlôe3_blob_ªad
(
sqlôe3_blob
 *, *
Z
, 
N
, 
iOff£t
);

5699 
SQLITE_API
 
sqlôe3_blob_wrôe
(
sqlôe3_blob
 *, c⁄° *
z
, 
n
, 
iOff£t
);

5730 
SQLITE_API
 
sqlôe3_vfs
 *
sqlôe3_vfs_föd
(c⁄° *
zVfsName
);

5731 
SQLITE_API
 
sqlôe3_vfs_ªgi°î
(
sqlôe3_vfs
*, 
makeDÊt
);

5732 
SQLITE_API
 
sqlôe3_vfs_uƒegi°î
(
sqlôe3_vfs
*);

5847 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_muãx_Æloc
();

5848 
SQLITE_API
 
sqlôe3_muãx_‰ì
(
sqlôe3_muãx
*);

5849 
SQLITE_API
 
sqlôe3_muãx_íãr
(
sqlôe3_muãx
*);

5850 
SQLITE_API
 
sqlôe3_muãx_åy
(
sqlôe3_muãx
*);

5851 
SQLITE_API
 
sqlôe3_muãx_Àave
(
sqlôe3_muãx
*);

5918 
sqlôe3_muãx_mëhods
 
	tsqlôe3_muãx_mëhods
;

5919 
	ssqlôe3_muãx_mëhods
 {

5920 (*
xMuãxInô
)();

5921 (*
xMuãxEnd
)();

5922 
sqlôe3_muãx
 *(*
xMuãxAŒoc
)();

5923 (*
xMuãxFªe
)(
sqlôe3_muãx
 *);

5924 (*
xMuãxE¡î
)(
sqlôe3_muãx
 *);

5925 (*
xMuãxTry
)(
sqlôe3_muãx
 *);

5926 (*
xMuãxLóve
)(
sqlôe3_muãx
 *);

5927 (*
xMuãxHñd
)(
sqlôe3_muãx
 *);

5928 (*
xMuãxNŸhñd
)(
sqlôe3_muãx
 *);

5960 #i‚de‡
NDEBUG


5961 
SQLITE_API
 
sqlôe3_muãx_hñd
(
sqlôe3_muãx
*);

5962 
SQLITE_API
 
sqlôe3_muãx_nŸhñd
(
sqlôe3_muãx
*);

5975 
	#SQLITE_MUTEX_FAST
 0

	)

5976 
	#SQLITE_MUTEX_RECURSIVE
 1

	)

5977 
	#SQLITE_MUTEX_STATIC_MASTER
 2

	)

5978 
	#SQLITE_MUTEX_STATIC_MEM
 3

	)

5979 
	#SQLITE_MUTEX_STATIC_MEM2
 4

	)

5980 
	#SQLITE_MUTEX_STATIC_OPEN
 4

	)

5981 
	#SQLITE_MUTEX_STATIC_PRNG
 5

	)

5982 
	#SQLITE_MUTEX_STATIC_LRU
 6

	)

5983 
	#SQLITE_MUTEX_STATIC_LRU2
 7

	)

5984 
	#SQLITE_MUTEX_STATIC_PMEM
 7

	)

5995 
SQLITE_API
 
sqlôe3_muãx
 *
sqlôe3_db_muãx
(
sqlôe3
*);

6029 
SQLITE_API
 
sqlôe3_fûe_c⁄åﬁ
(
sqlôe3
*, c⁄° *
zDbName
, 
›
, *);

6048 
SQLITE_API
 
sqlôe3_ã°_c⁄åﬁ
(
›
, ...);

6061 
	#SQLITE_TESTCTRL_FIRST
 5

	)

6062 
	#SQLITE_TESTCTRL_PRNG_SAVE
 5

	)

6063 
	#SQLITE_TESTCTRL_PRNG_RESTORE
 6

	)

6064 
	#SQLITE_TESTCTRL_PRNG_RESET
 7

	)

6065 
	#SQLITE_TESTCTRL_BITVEC_TEST
 8

	)

6066 
	#SQLITE_TESTCTRL_FAULT_INSTALL
 9

	)

6067 
	#SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS
 10

	)

6068 
	#SQLITE_TESTCTRL_PENDING_BYTE
 11

	)

6069 
	#SQLITE_TESTCTRL_ASSERT
 12

	)

6070 
	#SQLITE_TESTCTRL_ALWAYS
 13

	)

6071 
	#SQLITE_TESTCTRL_RESERVE
 14

	)

6072 
	#SQLITE_TESTCTRL_OPTIMIZATIONS
 15

	)

6073 
	#SQLITE_TESTCTRL_ISKEYWORD
 16

	)

6074 
	#SQLITE_TESTCTRL_SCRATCHMALLOC
 17

	)

6075 
	#SQLITE_TESTCTRL_LOCALTIME_FAULT
 18

	)

6076 
	#SQLITE_TESTCTRL_EXPLAIN_STMT
 19

	)

6077 
	#SQLITE_TESTCTRL_NEVER_CORRUPT
 20

	)

6078 
	#SQLITE_TESTCTRL_LAST
 20

	)

6109 
SQLITE_API
 
sqlôe3_°©us
(
›
, *
pCuºít
, *
pHighw©î
, 
ª£tFœg
);

6194 
	#SQLITE_STATUS_MEMORY_USED
 0

	)

6195 
	#SQLITE_STATUS_PAGECACHE_USED
 1

	)

6196 
	#SQLITE_STATUS_PAGECACHE_OVERFLOW
 2

	)

6197 
	#SQLITE_STATUS_SCRATCH_USED
 3

	)

6198 
	#SQLITE_STATUS_SCRATCH_OVERFLOW
 4

	)

6199 
	#SQLITE_STATUS_MALLOC_SIZE
 5

	)

6200 
	#SQLITE_STATUS_PARSER_STACK
 6

	)

6201 
	#SQLITE_STATUS_PAGECACHE_SIZE
 7

	)

6202 
	#SQLITE_STATUS_SCRATCH_SIZE
 8

	)

6203 
	#SQLITE_STATUS_MALLOC_COUNT
 9

	)

6227 
SQLITE_API
 
sqlôe3_db_°©us
(
sqlôe3
*, 
›
, *
pCur
, *
pHiwå
, 
ª£tFlg
);

6319 
	#SQLITE_DBSTATUS_LOOKASIDE_USED
 0

	)

6320 
	#SQLITE_DBSTATUS_CACHE_USED
 1

	)

6321 
	#SQLITE_DBSTATUS_SCHEMA_USED
 2

	)

6322 
	#SQLITE_DBSTATUS_STMT_USED
 3

	)

6323 
	#SQLITE_DBSTATUS_LOOKASIDE_HIT
 4

	)

6324 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE
 5

	)

6325 
	#SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL
 6

	)

6326 
	#SQLITE_DBSTATUS_CACHE_HIT
 7

	)

6327 
	#SQLITE_DBSTATUS_CACHE_MISS
 8

	)

6328 
	#SQLITE_DBSTATUS_CACHE_WRITE
 9

	)

6329 
	#SQLITE_DBSTATUS_DEFERRED_FKS
 10

	)

6330 
	#SQLITE_DBSTATUS_MAX
 10

	)

6356 
SQLITE_API
 
sqlôe3_°mt_°©us
(
sqlôe3_°mt
*, 
›
,
ª£tFlg
);

6395 
	#SQLITE_STMTSTATUS_FULLSCAN_STEP
 1

	)

6396 
	#SQLITE_STMTSTATUS_SORT
 2

	)

6397 
	#SQLITE_STMTSTATUS_AUTOINDEX
 3

	)

6398 
	#SQLITE_STMTSTATUS_VM_STEP
 4

	)

6411 
sqlôe3_pˇche
 
	tsqlôe3_pˇche
;

6423 
sqlôe3_pˇche_∑ge
 
	tsqlôe3_pˇche_∑ge
;

6424 
	ssqlôe3_pˇche_∑ge
 {

6425 *
pBuf
;

6426 *
pExåa
;

6588 
sqlôe3_pˇche_mëhods2
 
	tsqlôe3_pˇche_mëhods2
;

6589 
	ssqlôe3_pˇche_mëhods2
 {

6590 
iVîsi⁄
;

6591 *
pArg
;

6592 (*
xInô
)(*);

6593 (*
xShutdown
)(*);

6594 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
szExåa
, 
bPurgóbÀ
);

6595 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6596 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6597 
sqlôe3_pˇche_∑ge
 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6598 (*
xU≈ö
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*, 
disˇrd
);

6599 (*
xRekey
)(
sqlôe3_pˇche
*, 
sqlôe3_pˇche_∑ge
*,

6600 
ﬁdKey
, 
√wKey
);

6601 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6602 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6603 (*
xShrök
)(
sqlôe3_pˇche
*);

6611 
sqlôe3_pˇche_mëhods
 
	tsqlôe3_pˇche_mëhods
;

6612 
	ssqlôe3_pˇche_mëhods
 {

6613 *
pArg
;

6614 (*
xInô
)(*);

6615 (*
xShutdown
)(*);

6616 
sqlôe3_pˇche
 *(*
xCª©e
)(
szPage
, 
bPurgóbÀ
);

6617 (*
xCachesize
)(
sqlôe3_pˇche
*, 
nCachesize
);

6618 (*
xPagecou¡
)(
sqlôe3_pˇche
*);

6619 *(*
xFëch
)(
sqlôe3_pˇche
*, 
key
, 
¸óãFœg
);

6620 (*
xU≈ö
)(
sqlôe3_pˇche
*, *, 
disˇrd
);

6621 (*
xRekey
)(
sqlôe3_pˇche
*, *, 
ﬁdKey
, 
√wKey
);

6622 (*
xTrunˇã
)(
sqlôe3_pˇche
*, 
iLimô
);

6623 (*
xDe°roy
)(
sqlôe3_pˇche
*);

6637 
sqlôe3_backup
 
	tsqlôe3_backup
;

6821 
SQLITE_API
 
sqlôe3_backup
 *
sqlôe3_backup_öô
(

6822 
sqlôe3
 *
pDe°
,

6823 c⁄° *
zDe°Name
,

6824 
sqlôe3
 *
pSour˚
,

6825 c⁄° *
zSour˚Name


6827 
SQLITE_API
 
sqlôe3_backup_°ï
(
sqlôe3_backup
 *
p
, 
nPage
);

6828 
SQLITE_API
 
sqlôe3_backup_föish
(
sqlôe3_backup
 *
p
);

6829 
SQLITE_API
 
sqlôe3_backup_ªmaöög
(
sqlôe3_backup
 *
p
);

6830 
SQLITE_API
 
sqlôe3_backup_∑gecou¡
(
sqlôe3_backup
 *
p
);

6946 
SQLITE_API
 
sqlôe3_u∆ock_nŸify
(

6947 
sqlôe3
 *
pBlocked
,

6948 (*
xNŸify
)(**
≠Arg
, 
nArg
),

6949 *
pNŸifyArg


6961 
SQLITE_API
 
sqlôe3_°ricmp
(const *, const *);

6962 
SQLITE_API
 
sqlôe3_°∫icmp
(const *, const *, );

6977 
SQLITE_API
 
sqlôe3_°rglob
(c⁄° *
zGlob
, c⁄° *
zSå
);

7000 
SQLITE_API
 
sqlôe3_log
(
iEºCode
, c⁄° *
zF‹m©
, ...);

7037 
SQLITE_API
 *
sqlôe3_wÆ_hook
(

7038 
sqlôe3
*,

7039 (*)(*,
sqlôe3
*,const *,),

7068 
SQLITE_API
 
sqlôe3_wÆ_autocheckpoöt
(
sqlôe3
 *
db
, 
N
);

7086 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt
(
sqlôe3
 *
db
, c⁄° *
zDb
);

7158 
SQLITE_API
 
sqlôe3_wÆ_checkpoöt_v2
(

7159 
sqlôe3
 *
db
,

7160 c⁄° *
zDb
,

7161 
eMode
,

7162 *
≤Log
,

7163 *
≤Ck±


7174 
	#SQLITE_CHECKPOINT_PASSIVE
 0

	)

7175 
	#SQLITE_CHECKPOINT_FULL
 1

	)

7176 
	#SQLITE_CHECKPOINT_RESTART
 2

	)

7192 
SQLITE_API
 
sqlôe3_vèb_c⁄fig
(
sqlôe3
*, 
›
, ...);

7233 
	#SQLITE_VTAB_CONSTRAINT_SUPPORT
 1

	)

7245 
SQLITE_API
 
sqlôe3_vèb_⁄_c⁄Êi˘
(
sqlôe3
 *);

7258 
	#SQLITE_ROLLBACK
 1

	)

7260 
	#SQLITE_FAIL
 3

	)

7262 
	#SQLITE_REPLACE
 5

	)

7270 #ifde‡
SQLITE_OMIT_FLOATING_POINT


7274 #ifde‡
__˝lu•lus


7292 #i‚de‡
_SQLITE3RTREE_H_


7293 
	#_SQLITE3RTREE_H_


	)

7296 #ifde‡
__˝lu•lus


7300 
sqlôe3_πªe_geomëry
 
	tsqlôe3_πªe_geomëry
;

7308 
SQLITE_API
 
sqlôe3_πªe_geomëry_ˇŒback
(

7309 
sqlôe3
 *
db
,

7310 c⁄° *
zGeom
,

7311 #ifde‡
SQLITE_RTREE_INT_ONLY


7312 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, 
n
, 
sqlôe3_öt64
 *
a
, *
pRes
),

7314 (*
xGeom
)(
sqlôe3_πªe_geomëry
*, 
n
, *
a
, *
pRes
),

7316 *
pC⁄ãxt


7324 
	ssqlôe3_πªe_geomëry
 {

7325 *
pC⁄ãxt
;

7326 
nP¨am
;

7327 *
aP¨am
;

7328 *
pU£r
;

7329 (*
xDñU£r
)(*);

7333 #ifde‡
__˝lu•lus


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 
	#SIZE_MAX
 (4294967295U)

	)

267 #i‚de‡
WCHAR_MIN


269 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

270 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

274 
	#WINT_MIN
 (0u)

	)

275 
	#WINT_MAX
 (4294967295u)

	)

278 
	#INT8_C
(
c
Ë
	)
c

279 
	#INT16_C
(
c
Ë
	)
c

280 
	#INT32_C
(
c
Ë
	)
c

281 #i‡
__WORDSIZE
 == 64

282 
	#INT64_C
(
c
Ë¯## 
L


	)

284 
	#INT64_C
(
c
Ë¯## 
LL


	)

288 
	#UINT8_C
(
c
Ë
	)
c

289 
	#UINT16_C
(
c
Ë
	)
c

290 
	#UINT32_C
(
c
Ë¯## 
U


	)

291 #i‡
__WORDSIZE
 == 64

292 
	#UINT64_C
(
c
Ë¯## 
UL


	)

294 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

298 #i‡
__WORDSIZE
 == 64

299 
	#INTMAX_C
(
c
Ë¯## 
L


	)

300 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

302 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

303 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/utime.h

22 #i‚def 
_UTIME_H


23 
	#_UTIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


32 
	#__√ed_time_t


	)

33 
	~<time.h
>

37 
	sutimbuf


39 
__time_t
 
	ma˘ime
;

40 
__time_t
 
	mmodtime
;

45 
	$utime
 (c⁄° *
__fûe
,

46 c⁄° 
utimbuf
 *
__fûe_times
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1));

49 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/readline/keymaps.h

22 #i‚de‡
_KEYMAPS_H_


23 
	#_KEYMAPS_H_


	)

25 #ifde‡
__˝lu•lus


29 #i‡
deföed
 (
READLINE_LIBRARY
)

30 
	~"æ°dc.h
"

31 
	~"ch¨defs.h
"

32 
	~"æty≥defs.h
"

34 
	~<ªadlöe/æ°dc.h
>

35 
	~<ªadlöe/ch¨defs.h
>

36 
	~<ªadlöe/æty≥defs.h
>

44 
	s_keym≠_íåy
 {

45 
ty≥
;

46 
æ_comm™d_func_t
 *
fun˘i⁄
;

47 } 
	tKEYMAP_ENTRY
;

52 
	#KEYMAP_SIZE
 257

	)

53 
	#ANYOTHERKEY
 
KEYMAP_SIZE
-1

	)

55 
KEYMAP_ENTRY
 
	tKEYMAP_ENTRY_ARRAY
[
KEYMAP_SIZE
];

56 
KEYMAP_ENTRY
 *
	tKeym≠
;

59 
	#ISFUNC
 0

	)

60 
	#ISKMAP
 1

	)

61 
	#ISMACR
 2

	)

63 
KEYMAP_ENTRY_ARRAY
 
emacs_°™d¨d_keym≠
, 
emacs_mëa_keym≠
, 
emacs_˘lx_keym≠
;

64 
KEYMAP_ENTRY_ARRAY
 
vi_ö£πi⁄_keym≠
, 
vi_movemít_keym≠
;

68 
Keym≠
 
æ_make_b¨e_keym≠
 
PARAMS
(());

71 
Keym≠
 
æ_c›y_keym≠
 
PARAMS
((Keymap));

76 
Keym≠
 
æ_make_keym≠
 
PARAMS
(());

79 
æ_disˇrd_keym≠
 
PARAMS
((
Keym≠
));

85 
Keym≠
 
æ_gë_keym≠_by_«me
 
PARAMS
((const *));

88 
Keym≠
 
æ_gë_keym≠
 
PARAMS
(());

91 
æ_£t_keym≠
 
PARAMS
((
Keym≠
));

93 #ifde‡
__˝lu•lus


	@/usr/include/readline/rlstdc.h

22 #i‡!
deföed
 (
_RL_STDC_H_
)

23 
	#_RL_STDC_H_


	)

31 #i‡!
deföed
 (
PARAMS
)

32 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

33 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

35 
	#PARAMS
(
¥Ÿos
Ë()

	)

39 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 2

40 
	#__æ_©åibuã__
(
x
Ë
	`__©åibuã__
(x)

	)

42 
	#__æ_©åibuã__
(
x
)

	)

47 #i‡
deföed
 (
__STDC__
Ë&& deföed (
HAVE_STDARG_H
)

48 
	#PREFER_STDARG


	)

49 
	#USE_VARARGS


	)

51 #i‡
deföed
 (
HAVE_VARARGS_H
)

52 
	#PREFER_VARARGS


	)

53 
	#USE_VARARGS


	)

	@/usr/include/readline/rltypedefs.h

22 #i‚de‡
_RL_TYPEDEFS_H_


23 
	#_RL_TYPEDEFS_H_


	)

25 #ifde‡
__˝lu•lus


31 #i‡!
deföed
 (
_RL_FUNCTION_TYPEDEF
)

32 
	#_RL_FUNCTION_TYPEDEF


	)

35 
	tæ_comm™d_func_t
 
	tPARAMS
((, ));

38 *
	tæ_com≥¡ry_func_t
 
	tPARAMS
((const *, ));

39 **
	tæ_com∂ëi⁄_func_t
 
	tPARAMS
((const *, , ));

41 *
	tæ_quŸe_func_t
 
	tPARAMS
((*, , *));

42 *
	tæ_dequŸe_func_t
 
	tPARAMS
((*, ));

44 
	tæ_compign‹e_func_t
 
	tPARAMS
((**));

46 
	tæ_compdi•_func_t
 
	tPARAMS
((**, , ));

49 
	tæ_hook_func_t
 
	tPARAMS
(());

52 
	tæ_gëc_func_t
 
	tPARAMS
((
	tFILE
 *));

57 
	tæ_löebuf_func_t
 
	tPARAMS
((*, ));

60 
	tæ_ötfunc_t
 
	tPARAMS
(());

61 
	#æ_ivoidfunc_t
 
æ_hook_func_t


	)

62 
	tæ_i˝func_t
 
	tPARAMS
((*));

63 
	tæ_i˝pfunc_t
 
	tPARAMS
((**));

65 
	tæ_voidfunc_t
 
	tPARAMS
(());

66 
	tæ_vötfunc_t
 
	tPARAMS
(());

67 
	tæ_v˝func_t
 
	tPARAMS
((*));

68 
	tæ_v˝pfunc_t
 
	tPARAMS
((**));

70 *
	tæ_˝vfunc_t
 
	tPARAMS
(());

71 *
	tæ_˝ifunc_t
 
	tPARAMS
(());

72 *
	tæ_˝˝func_t
 
	tPARAMS
((*));

73 *
	tæ_˝˝pfunc_t
 
	tPARAMS
((**));

77 #ifde‡
__˝lu•lus


	@/usr/include/readline/tilde.h

23 #i‡!
deföed
 (
_TILDE_H_
)

24 
	#_TILDE_H_


	)

26 #ifde‡
__˝lu•lus


34 #i‡!
deföed
 (
PARAMS
)

35 #i‡
deföed
 (
__STDC__
Ë|| deföed (
__GNUC__
Ë|| deföed (
__˝lu•lus
)

36 
	#PARAMS
(
¥Ÿos
Ë
	)
protos

38 
	#PARAMS
(
¥Ÿos
Ë()

	)

42 *
	ttûde_hook_func_t
 
	tPARAMS
((*));

48 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_¥ìx∑nsi⁄_hook
;

54 
tûde_hook_func_t
 *
tûde_ex∑nsi⁄_Áûuª_hook
;

59 **
tûde_addôi⁄Æ_¥efixes
;

64 **
tûde_addôi⁄Æ_suffixes
;

67 *
tûde_ex∑nd
 
PARAMS
((const *));

71 *
tûde_ex∑nd_w‹d
 
PARAMS
((const *));

74 *
tûde_föd_w‹d
 
PARAMS
((const *, , *));

76 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/readline/chardefs.h

22 #i‚de‡
_CHARDEFS_H_


23 
	#_CHARDEFS_H_


	)

25 
	~<˘y≥.h
>

27 
	~<°rög.h
>

29 #i‚de‡
whôe•a˚


30 
	#whôe•a˚
(
c
Ë(((cË=' 'Ë|| ((cË='\t'))

	)

33 #ifde‡
CTRL


34 #unde‡
CTRL


36 #ifde‡
UNCTRL


37 #unde‡
UNCTRL


41 
	#c⁄åﬁ_ch¨a˘î_thªshﬁd
 0x020

	)

42 
	#c⁄åﬁ_ch¨a˘î_mask
 0x1‡

	)

43 
	#mëa_ch¨a˘î_thªshﬁd
 0x07‡

	)

44 
	#c⁄åﬁ_ch¨a˘î_bô
 0x40

	)

45 
	#mëa_ch¨a˘î_bô
 0x080

	)

46 
	#œrge°_ch¨
 255

	)

48 
	#CTRL_CHAR
(
c
Ë((cË< 
c⁄åﬁ_ch¨a˘î_thªshﬁd
 && (((cË& 0x80Ë=0))

	)

49 
	#META_CHAR
(
c
Ë((cË> 
mëa_ch¨a˘î_thªshﬁd
 && (cË<
œrge°_ch¨
)

	)

51 
	#CTRL
(
c
Ë((cË& 
c⁄åﬁ_ch¨a˘î_mask
)

	)

52 
	#META
(
c
Ë((cË| 
mëa_ch¨a˘î_bô
)

	)

54 
	#UNMETA
(
c
Ë((cË& (~
mëa_ch¨a˘î_bô
))

	)

55 
	#UNCTRL
(
c
Ë
	`_æ_to_uµî
(((c)|
c⁄åﬁ_ch¨a˘î_bô
))

	)

57 #i‡
deföed
 
STDC_HEADERS
 || (!deföed (
ißscii
Ë&& !deföed (
HAVE_ISASCII
))

58 
	#IN_CTYPE_DOMAIN
(
c
Ë1

	)

60 
	#IN_CTYPE_DOMAIN
(
c
Ë
	`ißscii
(c)

	)

63 #i‡!
deföed
 (
isxdigô
Ë&& !deföed (
HAVE_ISXDIGIT
Ë&& !deföed (
__˝lu•lus
)

64 
	#isxdigô
(
c
Ë(
	`isdigô
((c)Ë|| ((cË>'a' && (cË<'f'Ë|| ((cË>'A' && (cË<'F'))

	)

67 #i‡
deföed
 (
CTYPE_NON_ASCII
)

68 
	#NON_NEGATIVE
(
c
Ë1

	)

70 
	#NON_NEGATIVE
(
c
Ë(()(cË=(c))

	)

74 #unde‡
ISPRINT


78 
	#ISALNUM
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`iß um
 (c))

	)

79 
	#ISALPHA
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`ißÕha
 (c))

	)

80 
	#ISDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isdigô
 (c))

	)

81 
	#ISLOWER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i¶owî
 (c))

	)

82 
	#ISPRINT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`i•röt
 (c))

	)

83 
	#ISUPPER
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isuµî
 (c))

	)

84 
	#ISXDIGIT
(
c
Ë(
	`IN_CTYPE_DOMAIN
 (cË&& 
	`isxdigô
 (c))

	)

86 
	#_æ_lowîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISLOWER
(c))

	)

87 
	#_æ_uµîˇ£_p
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISUPPER
(c))

	)

88 
	#_æ_digô_p
(
c
Ë((cË>'0' && (cË<'9')

	)

90 
	#_æ_puª_Æphabëic
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALPHA
(c))

	)

91 
	#ALPHABETIC
(
c
Ë(
	`NON_NEGATIVE
(cË&& 
	`ISALNUM
(c))

	)

93 #i‚de‡
_æ_to_uµî


94 
	#_æ_to_uµî
(
c
Ë(
	`_æ_lowîˇ£_p
(cË? 
	`touµî
(()cË: (c))

	)

95 
	#_æ_to_lowî
(
c
Ë(
	`_æ_uµîˇ£_p
(cË? 
	`tﬁowî
(()cË: (c))

	)

98 #i‚de‡
_æ_digô_vÆue


99 
	#_æ_digô_vÆue
(
x
Ë((xË- '0')

	)

102 #i‚de‡
_æ_isidít


103 
	#_æ_isidít
(
c
Ë(
	`ISALNUM
(cË|| (cË='_')

	)

106 #i‚de‡
ISOCTAL


107 
	#ISOCTAL
(
c
Ë((cË>'0' && (cË<'7')

	)

109 
	#OCTVALUE
(
c
Ë((cË- '0')

	)

111 
	#HEXVALUE
(
c
) \

112 (((
c
) >= 'a' && (c) <= 'f') \

113 ? (
c
)-'a'+10 \

114 : (
c
Ë>'A' && (cË<'F' ? (c)-'A'+10 : (c)-'0')

	)

116 #i‚de‡
NEWLINE


117 
	#NEWLINE
 '\n'

	)

120 #i‚de‡
RETURN


121 
	#RETURN
 
	`CTRL
('M')

	)

124 #i‚de‡
RUBOUT


125 
	#RUBOUT
 0x7f

	)

128 #i‚de‡
TAB


129 
	#TAB
 '\t'

	)

132 #ifde‡
ABORT_CHAR


133 #unde‡
ABORT_CHAR


135 
	#ABORT_CHAR
 
	`CTRL
('G')

	)

137 #ifde‡
PAGE


138 #unde‡
PAGE


140 
	#PAGE
 
	`CTRL
('L')

	)

142 #ifde‡
SPACE


143 #unde‡
SPACE


145 
	#SPACE
 ' '

	)

147 #ifde‡
ESC


148 #unde‡
ESC


150 
	#ESC
 
	`CTRL
('[')

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
185
2472
alter.c
analyze.c
attach.c
auth.c
backup.c
bitvec.c
btmutex.c
btree.c
btree.h
btreeInt.h
build.c
callback.c
complete.c
ctime.c
date.c
dbstat.c
delete.c
expr.c
fault.c
fkey.c
func.c
global.c
hash.c
hash.h
hwtime.h
insert.c
legacy.c
loadext.c
main.c
malloc.c
mem0.c
mem1.c
mem2.c
mem3.c
mem5.c
memjournal.c
msvc.h
mutex.c
mutex.h
mutex_noop.c
mutex_unix.c
mutex_w32.c
notify.c
os.c
os.h
os_common.h
os_setup.h
os_unix.c
os_win.c
os_win.h
pager.c
pager.h
pcache.c
pcache.h
pcache1.c
pragma.c
pragma.h
prepare.c
printf.c
random.c
resolve.c
rowset.c
select.c
shell.c
sqlite3ext.h
sqliteInt.h
sqliteLimit.h
status.c
table.c
tclsqlite.c
test1.c
test2.c
test3.c
test4.c
test5.c
test6.c
test7.c
test8.c
test9.c
test_async.c
test_autoext.c
test_backup.c
test_bestindex.c
test_blob.c
test_btree.c
test_config.c
test_demovfs.c
test_devsym.c
test_fs.c
test_func.c
test_hexio.c
test_init.c
test_intarray.c
test_intarray.h
test_journal.c
test_loadext.c
test_malloc.c
test_multiplex.c
test_multiplex.h
test_mutex.c
test_onefile.c
test_osinst.c
test_pcache.c
test_quota.c
test_quota.h
test_rtree.c
test_schema.c
test_server.c
test_sqllog.c
test_superlock.c
test_syscall.c
test_tclvar.c
test_thread.c
test_vfs.c
test_vfstrace.c
test_windirent.c
test_windirent.h
test_wsd.c
threads.c
tokenize.c
treeview.c
trigger.c
update.c
utf.c
util.c
vacuum.c
vdbe.c
vdbe.h
vdbeInt.h
vdbeapi.c
vdbeaux.c
vdbeblob.c
vdbemem.c
vdbesort.c
vdbetrace.c
vtab.c
vxworks.h
wal.c
wal.h
walker.c
where.c
whereInt.h
wherecode.c
whereexpr.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/pwd.h
/usr/include/readline/history.h
/usr/include/readline/readline.h
/usr/include/sched.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/sqlite3.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/readline/keymaps.h
/usr/include/readline/rlstdc.h
/usr/include/readline/rltypedefs.h
/usr/include/readline/tilde.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/readline/chardefs.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
