!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
$argv	test/releasetest.tcl	/^  process_options $argv$/;"	p
$argv	tool/omittest.tcl	/^  process_options $argv$/;"	p
'#destructor'	doc/lemon.html	/^on the <a name='#destructor'>%destructor<\/a> directive below for$/;"	a
'default_destructor'	doc/lemon.html	/^<a name='default_destructor'><\/a>$/;"	a
'default_type'	doc/lemon.html	/^<a name='default_type'><\/a>$/;"	a
'destructor'	doc/lemon.html	/^<a name='destructor'><\/a>$/;"	a
'parse_accept'	doc/lemon.html	/^<a name='parse_accept'><\/a>$/;"	a
'parse_failure'	doc/lemon.html	/^<a name='parse_failure'><\/a>$/;"	a
'pcode'	doc/lemon.html	/^<a name='pcode'><\/a>$/;"	a
'pfallback'	doc/lemon.html	/^<a name='pfallback'><\/a>$/;"	a
'pifdef'	doc/lemon.html	/^<a name='pifdef'><\/a>$/;"	a
'pinclude'	doc/lemon.html	/^<a name='pinclude'><\/a>$/;"	a
'pleft'	doc/lemon.html	/^<a name='pleft'><\/a>$/;"	a
'pname'	doc/lemon.html	/^<a name='pname'><\/a>$/;"	a
'pnonassoc'	doc/lemon.html	/^<a name='pnonassoc'><\/a>$/;"	a
'precrules'	doc/lemon.html	/^<a name='precrules'><\/a>$/;"	a
'pright'	doc/lemon.html	/^<a name='pright'><\/a>$/;"	a
'pwildcard'	doc/lemon.html	/^<a name='pwildcard'><\/a>$/;"	a
'stack_overflow'	doc/lemon.html	/^<a name='stack_overflow'><\/a>$/;"	a
'stack_size'	doc/lemon.html	/^<a name='stack_size'><\/a>$/;"	a
'start_symbol'	doc/lemon.html	/^<a name='start_symbol'><\/a>$/;"	a
'token_destructor'	doc/lemon.html	/^<a name='token_destructor'><\/a>$/;"	a
'token_prefix'	doc/lemon.html	/^<a name='token_prefix'><\/a>$/;"	a
'token_type'	doc/lemon.html	/^<a name='token_type'><\/a><a name='ptype'><\/a>$/;"	a
ACCEPT	tool/lemon.c	/^  ACCEPT,$/;"	e	enum:e_action	file:
ADDR	sqlite3.c	12518;"	d	file:
ADDR	src/vdbe.h	162;"	d
ADDR	tsrc/vdbe.h	162;"	d
AGGREGATE	sqlite3.c	14212;"	d	file:
AGGREGATE	src/sqliteInt.h	1613;"	d
AGGREGATE	tsrc/sqliteInt.h	1613;"	d
AGGREGATE2	sqlite3.c	14215;"	d	file:
AGGREGATE2	src/sqliteInt.h	1616;"	d
AGGREGATE2	tsrc/sqliteInt.h	1616;"	d
ALLBITS	sqlite3.c	15070;"	d	file:
ALLBITS	src/sqliteInt.h	2471;"	d
ALLBITS	tsrc/sqliteInt.h	2471;"	d
ALLOWRELEASE	Makefile	/^ALLOWRELEASE = $/;"	m
ALTER	tool/mkkeywordhash.c	55;"	d	file:
ALTER	tool/mkkeywordhash.c	57;"	d	file:
ALWAYS	ext/fts3/fts3Int.h	141;"	d
ALWAYS	ext/fts5/fts5Int.h	36;"	d
ALWAYS	ext/misc/spellfix.c	25;"	d	file:
ALWAYS	fts5.c	629;"	d	file:
ALWAYS	sqlite3.c	11085;"	d	file:
ALWAYS	sqlite3.c	11088;"	d	file:
ALWAYS	sqlite3.c	11091;"	d	file:
ALWAYS	sqlite3.c	141565;"	d	file:
ALWAYS	sqlite3.c	141568;"	d	file:
ALWAYS	sqlite3.c	141573;"	d	file:
ALWAYS	sqlite3.c	177831;"	d	file:
ALWAYS	src/sqliteInt.h	423;"	d
ALWAYS	src/sqliteInt.h	426;"	d
ALWAYS	src/sqliteInt.h	429;"	d
ALWAYS	tool/mkkeywordhash.c	59;"	d	file:
ALWAYS	tsrc/fts3Int.h	141;"	d
ALWAYS	tsrc/fts5.c	629;"	d	file:
ALWAYS	tsrc/sqliteInt.h	423;"	d
ALWAYS	tsrc/sqliteInt.h	426;"	d
ALWAYS	tsrc/sqliteInt.h	429;"	d
AMATCH_COL_COMMAND	ext/misc/amatch.c	910;"	d	file:
AMATCH_COL_DISTANCE	ext/misc/amatch.c	908;"	d	file:
AMATCH_COL_LANGUAGE	ext/misc/amatch.c	909;"	d	file:
AMATCH_COL_NWORD	ext/misc/amatch.c	911;"	d	file:
AMATCH_COL_WORD	ext/misc/amatch.c	907;"	d	file:
AMATCH_MX_COST	ext/misc/amatch.c	461;"	d	file:
AMATCH_MX_LANGID	ext/misc/amatch.c	460;"	d	file:
AMATCH_MX_LENGTH	ext/misc/amatch.c	459;"	d	file:
ANALYZE	tool/mkkeywordhash.c	61;"	d	file:
ANALYZE	tool/mkkeywordhash.c	63;"	d	file:
AND	ext/fts5/test/fts5_common.tcl	/^proc AND {args} {$/;"	p
ASSERT_SZLEAF_OK	ext/fts5/fts5_index.c	470;"	d	file:
ASSERT_SZLEAF_OK	fts5.c	8282;"	d	file:
ASSERT_SZLEAF_OK	sqlite3.c	185414;"	d	file:
ASSERT_SZLEAF_OK	tsrc/fts5.c	8282;"	d	file:
ASSERT_VALID_DOCLIST	ext/fts2/fts2.c	734;"	d	file:
ASSERT_VALID_DOCLIST	ext/fts2/fts2.c	736;"	d	file:
ASSERT_VALID_DOCLIST	tsrc/fts2.c	734;"	d	file:
ASSERT_VALID_DOCLIST	tsrc/fts2.c	736;"	d	file:
ASSERT_VALID_INTERIOR_BLOCK	ext/fts2/fts2.c	4155;"	d	file:
ASSERT_VALID_INTERIOR_BLOCK	ext/fts2/fts2.c	4157;"	d	file:
ASSERT_VALID_INTERIOR_BLOCK	tsrc/fts2.c	4155;"	d	file:
ASSERT_VALID_INTERIOR_BLOCK	tsrc/fts2.c	4157;"	d	file:
ASSERT_VALID_LEAF_NODE	ext/fts2/fts2.c	4558;"	d	file:
ASSERT_VALID_LEAF_NODE	ext/fts2/fts2.c	4560;"	d	file:
ASSERT_VALID_LEAF_NODE	tsrc/fts2.c	4558;"	d	file:
ASSERT_VALID_LEAF_NODE	tsrc/fts2.c	4560;"	d	file:
ASYNC_CLOSE	ext/async/sqlite3async.c	401;"	d	file:
ASYNC_COND_QUEUE	ext/async/sqlite3async.c	243;"	d	file:
ASYNC_DELETE	ext/async/sqlite3async.c	402;"	d	file:
ASYNC_MUTEX_LOCK	ext/async/sqlite3async.c	238;"	d	file:
ASYNC_MUTEX_QUEUE	ext/async/sqlite3async.c	239;"	d	file:
ASYNC_MUTEX_WRITER	ext/async/sqlite3async.c	240;"	d	file:
ASYNC_NOOP	ext/async/sqlite3async.c	397;"	d	file:
ASYNC_OPENEXCLUSIVE	ext/async/sqlite3async.c	403;"	d	file:
ASYNC_SYNC	ext/async/sqlite3async.c	399;"	d	file:
ASYNC_TRACE	ext/async/sqlite3async.c	47;"	d	file:
ASYNC_TRACE	ext/async/sqlite3async.c	58;"	d	file:
ASYNC_TRUNCATE	ext/async/sqlite3async.c	400;"	d	file:
ASYNC_UNLOCK	ext/async/sqlite3async.c	404;"	d	file:
ASYNC_WRITE	ext/async/sqlite3async.c	398;"	d	file:
ATTACH	tool/mkkeywordhash.c	66;"	d	file:
ATTACH	tool/mkkeywordhash.c	68;"	d	file:
AUTOINCR	tool/mkkeywordhash.c	71;"	d	file:
AUTOINCR	tool/mkkeywordhash.c	73;"	d	file:
AUTOVACUUM	tool/mkkeywordhash.c	137;"	d	file:
AUTOVACUUM	tool/mkkeywordhash.c	139;"	d	file:
Action_add	tool/lemon.c	/^void Action_add($/;"	f
Action_new	tool/lemon.c	/^static struct action *Action_new(void){$/;"	f	file:
Action_sort	tool/lemon.c	/^static struct action *Action_sort($/;"	f	file:
AdjustTree	ext/rtree/rtree.c	/^static int AdjustTree($/;"	f	file:
AdjustTree	sqlite3.c	/^static int AdjustTree($/;"	f	file:
AdjustTree	tsrc/rtree.c	/^static int AdjustTree($/;"	f	file:
AggInfo	sqlite3.c	/^struct AggInfo {$/;"	s	file:
AggInfo	sqlite3.c	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo	file:
AggInfo	src/sqliteInt.h	/^struct AggInfo {$/;"	s
AggInfo	src/sqliteInt.h	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo
AggInfo	tsrc/sqliteInt.h	/^struct AggInfo {$/;"	s
AggInfo	tsrc/sqliteInt.h	/^typedef struct AggInfo AggInfo;$/;"	t	typeref:struct:AggInfo
AggInfo_col	sqlite3.c	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo	file:
AggInfo_col	src/sqliteInt.h	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo
AggInfo_col	tsrc/sqliteInt.h	/^  struct AggInfo_col {    \/* For each column used in source tables *\/$/;"	s	struct:AggInfo
AggInfo_func	sqlite3.c	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo	file:
AggInfo_func	src/sqliteInt.h	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo
AggInfo_func	tsrc/sqliteInt.h	/^  struct AggInfo_func {   \/* For each aggregate function *\/$/;"	s	struct:AggInfo
App	vsixtest/App.xaml.cpp	/^App::App()$/;"	f	class:App
ApplyCostMultiplier	sqlite3.c	128901;"	d	file:
ApplyCostMultiplier	sqlite3.c	128903;"	d	file:
ApplyCostMultiplier	src/where.c	2195;"	d	file:
ApplyCostMultiplier	src/where.c	2197;"	d	file:
ApplyCostMultiplier	tsrc/where.c	2195;"	d	file:
ApplyCostMultiplier	tsrc/where.c	2197;"	d	file:
Argv0	shell.c	/^static char *Argv0;$/;"	v	file:
Argv0	src/shell.c	/^static char *Argv0;$/;"	v	file:
Argv0	tsrc/shell.c	/^static char *Argv0;$/;"	v	file:
ArraySize	ext/fts5/fts5Int.h	33;"	d
ArraySize	fts5.c	626;"	d	file:
ArraySize	shell.c	704;"	d	file:
ArraySize	sqlite3.c	11870;"	d	file:
ArraySize	sqlite3.c	177828;"	d	file:
ArraySize	src/shell.c	704;"	d	file:
ArraySize	src/sqliteInt.h	936;"	d
ArraySize	tool/offsets.c	17;"	d	file:
ArraySize	tsrc/fts5.c	626;"	d	file:
ArraySize	tsrc/shell.c	704;"	d	file:
ArraySize	tsrc/sqliteInt.h	936;"	d
AsciiTokenizer	ext/fts5/fts5_tokenize.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	ext/fts5/fts5_tokenize.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AsciiTokenizer	fts5.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	fts5.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AsciiTokenizer	sqlite3.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	sqlite3.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AsciiTokenizer	tsrc/fts5.c	/^struct AsciiTokenizer {$/;"	s	file:
AsciiTokenizer	tsrc/fts5.c	/^typedef struct AsciiTokenizer AsciiTokenizer;$/;"	t	typeref:struct:AsciiTokenizer	file:
AsyncFile	ext/async/sqlite3async.c	/^struct AsyncFile {$/;"	s	file:
AsyncFile	ext/async/sqlite3async.c	/^typedef struct AsyncFile AsyncFile;$/;"	t	typeref:struct:AsyncFile	file:
AsyncFileData	ext/async/sqlite3async.c	/^struct AsyncFileData {$/;"	s	file:
AsyncFileData	ext/async/sqlite3async.c	/^typedef struct AsyncFileData AsyncFileData;$/;"	t	typeref:struct:AsyncFileData	file:
AsyncFileLock	ext/async/sqlite3async.c	/^struct AsyncFileLock {$/;"	s	file:
AsyncFileLock	ext/async/sqlite3async.c	/^typedef struct AsyncFileLock AsyncFileLock;$/;"	t	typeref:struct:AsyncFileLock	file:
AsyncLock	ext/async/sqlite3async.c	/^struct AsyncLock {$/;"	s	file:
AsyncLock	ext/async/sqlite3async.c	/^typedef struct AsyncLock AsyncLock;$/;"	t	typeref:struct:AsyncLock	file:
AsyncPrimitives	ext/async/sqlite3async.c	/^static struct AsyncPrimitives {$/;"	s	file:
AsyncWrite	ext/async/sqlite3async.c	/^struct AsyncWrite {$/;"	s	file:
AsyncWrite	ext/async/sqlite3async.c	/^typedef struct AsyncWrite AsyncWrite;$/;"	t	typeref:struct:AsyncWrite	file:
AttachKey	parse.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AttachKey	sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AttachKey	tsrc/parse.c	/^struct AttachKey { int type;  Token key; };$/;"	s	file:
AuthContext	sqlite3.c	/^struct AuthContext {$/;"	s	file:
AuthContext	sqlite3.c	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext	file:
AuthContext	src/sqliteInt.h	/^struct AuthContext {$/;"	s
AuthContext	src/sqliteInt.h	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext
AuthContext	tsrc/sqliteInt.h	/^struct AuthContext {$/;"	s
AuthContext	tsrc/sqliteInt.h	/^typedef struct AuthContext AuthContext;$/;"	t	typeref:struct:AuthContext
AutoincInfo	sqlite3.c	/^struct AutoincInfo {$/;"	s	file:
AutoincInfo	sqlite3.c	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo	file:
AutoincInfo	src/sqliteInt.h	/^struct AutoincInfo {$/;"	s
AutoincInfo	src/sqliteInt.h	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo
AutoincInfo	tsrc/sqliteInt.h	/^struct AutoincInfo {$/;"	s
AutoincInfo	tsrc/sqliteInt.h	/^typedef struct AutoincInfo AutoincInfo;$/;"	t	typeref:struct:AutoincInfo
AuxData	sqlite3.c	/^struct AuxData {$/;"	s	file:
AuxData	sqlite3.c	/^typedef struct AuxData AuxData;$/;"	t	typeref:struct:AuxData	file:
AuxData	src/vdbeInt.h	/^struct AuxData {$/;"	s
AuxData	src/vdbeInt.h	/^typedef struct AuxData AuxData;$/;"	t	typeref:struct:AuxData
AuxData	tsrc/vdbeInt.h	/^struct AuxData {$/;"	s
AuxData	tsrc/vdbeInt.h	/^typedef struct AuxData AuxData;$/;"	t	typeref:struct:AuxData
BAD_INTPTR_T	src/test_windirent.h	71;"	d
BCC	Makefile	/^BCC = gcc  -g -O2$/;"	m
BEGIN_TIMER	shell.c	235;"	d	file:
BEGIN_TIMER	shell.c	312;"	d	file:
BEGIN_TIMER	shell.c	317;"	d	file:
BEGIN_TIMER	src/shell.c	235;"	d	file:
BEGIN_TIMER	src/shell.c	312;"	d	file:
BEGIN_TIMER	src/shell.c	317;"	d	file:
BEGIN_TIMER	tsrc/shell.c	235;"	d	file:
BEGIN_TIMER	tsrc/shell.c	312;"	d	file:
BEGIN_TIMER	tsrc/shell.c	317;"	d	file:
BEXE	Makefile	/^BEXE = $/;"	m
BITVEC_HASH	sqlite3.c	43144;"	d	file:
BITVEC_HASH	src/bitvec.c	68;"	d	file:
BITVEC_HASH	tsrc/bitvec.c	68;"	d	file:
BITVEC_MXHASH	sqlite3.c	43139;"	d	file:
BITVEC_MXHASH	src/bitvec.c	63;"	d	file:
BITVEC_MXHASH	tsrc/bitvec.c	63;"	d	file:
BITVEC_NBIT	sqlite3.c	43133;"	d	file:
BITVEC_NBIT	src/bitvec.c	57;"	d	file:
BITVEC_NBIT	tsrc/bitvec.c	57;"	d	file:
BITVEC_NELEM	sqlite3.c	43131;"	d	file:
BITVEC_NELEM	src/bitvec.c	55;"	d	file:
BITVEC_NELEM	tsrc/bitvec.c	55;"	d	file:
BITVEC_NINT	sqlite3.c	43136;"	d	file:
BITVEC_NINT	src/bitvec.c	60;"	d	file:
BITVEC_NINT	tsrc/bitvec.c	60;"	d	file:
BITVEC_NPTR	sqlite3.c	43146;"	d	file:
BITVEC_NPTR	src/bitvec.c	70;"	d	file:
BITVEC_NPTR	tsrc/bitvec.c	70;"	d	file:
BITVEC_SZ	sqlite3.c	43116;"	d	file:
BITVEC_SZ	src/bitvec.c	40;"	d	file:
BITVEC_SZ	tsrc/bitvec.c	40;"	d	file:
BITVEC_SZELEM	sqlite3.c	43129;"	d	file:
BITVEC_SZELEM	src/bitvec.c	53;"	d	file:
BITVEC_SZELEM	tsrc/bitvec.c	53;"	d	file:
BITVEC_TELEM	sqlite3.c	43127;"	d	file:
BITVEC_TELEM	src/bitvec.c	51;"	d	file:
BITVEC_TELEM	tsrc/bitvec.c	51;"	d	file:
BITVEC_USIZE	sqlite3.c	43120;"	d	file:
BITVEC_USIZE	src/bitvec.c	44;"	d	file:
BITVEC_USIZE	tsrc/bitvec.c	44;"	d	file:
BLOBSIZE	src/test_onefile.c	90;"	d	file:
BLOCKSIZE	src/test_onefile.c	89;"	d	file:
BLOCK_DELETE_ALL_STMT	ext/fts2/fts2.c	/^  BLOCK_DELETE_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_DELETE_ALL_STMT	tsrc/fts2.c	/^  BLOCK_DELETE_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_DELETE_STMT	ext/fts2/fts2.c	/^  BLOCK_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_DELETE_STMT	tsrc/fts2.c	/^  BLOCK_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_INSERT_STMT	ext/fts2/fts2.c	/^  BLOCK_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_INSERT_STMT	tsrc/fts2.c	/^  BLOCK_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_SELECT_STMT	ext/fts2/fts2.c	/^  BLOCK_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
BLOCK_SELECT_STMT	tsrc/fts2.c	/^  BLOCK_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
BMS	sqlite3.c	15063;"	d	file:
BMS	src/sqliteInt.h	2464;"	d
BMS	tsrc/sqliteInt.h	2464;"	d
BTALLOC_ANY	sqlite3.c	58185;"	d	file:
BTALLOC_ANY	src/btree.c	49;"	d	file:
BTALLOC_ANY	tsrc/btree.c	49;"	d	file:
BTALLOC_EXACT	sqlite3.c	58186;"	d	file:
BTALLOC_EXACT	src/btree.c	50;"	d	file:
BTALLOC_EXACT	tsrc/btree.c	50;"	d	file:
BTALLOC_LE	sqlite3.c	58187;"	d	file:
BTALLOC_LE	src/btree.c	51;"	d	file:
BTALLOC_LE	tsrc/btree.c	51;"	d	file:
BTCF_AtLast	sqlite3.c	57680;"	d	file:
BTCF_AtLast	src/btreeInt.h	538;"	d
BTCF_AtLast	tsrc/btreeInt.h	538;"	d
BTCF_Incrblob	sqlite3.c	57681;"	d	file:
BTCF_Incrblob	src/btreeInt.h	539;"	d
BTCF_Incrblob	tsrc/btreeInt.h	539;"	d
BTCF_Multiple	sqlite3.c	57682;"	d	file:
BTCF_Multiple	src/btreeInt.h	540;"	d
BTCF_Multiple	tsrc/btreeInt.h	540;"	d
BTCF_ValidNKey	sqlite3.c	57678;"	d	file:
BTCF_ValidNKey	src/btreeInt.h	536;"	d
BTCF_ValidNKey	tsrc/btreeInt.h	536;"	d
BTCF_ValidOvfl	sqlite3.c	57679;"	d	file:
BTCF_ValidOvfl	src/btreeInt.h	537;"	d
BTCF_ValidOvfl	tsrc/btreeInt.h	537;"	d
BTCF_WriteFlag	sqlite3.c	57677;"	d	file:
BTCF_WriteFlag	src/btreeInt.h	535;"	d
BTCF_WriteFlag	tsrc/btreeInt.h	535;"	d
BTCURSOR_MAX_DEPTH	sqlite3.c	57626;"	d	file:
BTCURSOR_MAX_DEPTH	src/btreeInt.h	484;"	d
BTCURSOR_MAX_DEPTH	tsrc/btreeInt.h	484;"	d
BTREE_APPLICATION_ID	sqlite3.c	12139;"	d	file:
BTREE_APPLICATION_ID	src/btree.h	150;"	d
BTREE_APPLICATION_ID	tsrc/btree.h	150;"	d
BTREE_AUTOVACUUM_FULL	sqlite3.c	12022;"	d	file:
BTREE_AUTOVACUUM_FULL	src/btree.h	33;"	d
BTREE_AUTOVACUUM_FULL	tsrc/btree.h	33;"	d
BTREE_AUTOVACUUM_INCR	sqlite3.c	12023;"	d	file:
BTREE_AUTOVACUUM_INCR	src/btree.h	34;"	d
BTREE_AUTOVACUUM_INCR	tsrc/btree.h	34;"	d
BTREE_AUTOVACUUM_NONE	sqlite3.c	12021;"	d	file:
BTREE_AUTOVACUUM_NONE	src/btree.h	32;"	d
BTREE_AUTOVACUUM_NONE	tsrc/btree.h	32;"	d
BTREE_AUXDELETE	sqlite3.c	12241;"	d	file:
BTREE_AUXDELETE	src/btree.h	252;"	d
BTREE_AUXDELETE	tsrc/btree.h	252;"	d
BTREE_BLOBKEY	sqlite3.c	12102;"	d	file:
BTREE_BLOBKEY	src/btree.h	113;"	d
BTREE_BLOBKEY	tsrc/btree.h	113;"	d
BTREE_BULKLOAD	sqlite3.c	12184;"	d	file:
BTREE_BULKLOAD	src/btree.h	195;"	d
BTREE_BULKLOAD	tsrc/btree.h	195;"	d
BTREE_DATA_VERSION	sqlite3.c	12140;"	d	file:
BTREE_DATA_VERSION	src/btree.h	151;"	d
BTREE_DATA_VERSION	tsrc/btree.h	151;"	d
BTREE_DEFAULT_CACHE_SIZE	sqlite3.c	12134;"	d	file:
BTREE_DEFAULT_CACHE_SIZE	src/btree.h	145;"	d
BTREE_DEFAULT_CACHE_SIZE	tsrc/btree.h	145;"	d
BTREE_FILE_FORMAT	sqlite3.c	12133;"	d	file:
BTREE_FILE_FORMAT	src/btree.h	144;"	d
BTREE_FILE_FORMAT	tsrc/btree.h	144;"	d
BTREE_FORDELETE	sqlite3.c	12211;"	d	file:
BTREE_FORDELETE	src/btree.h	222;"	d
BTREE_FORDELETE	tsrc/btree.h	222;"	d
BTREE_FREE_PAGE_COUNT	sqlite3.c	12131;"	d	file:
BTREE_FREE_PAGE_COUNT	src/btree.h	142;"	d
BTREE_FREE_PAGE_COUNT	tsrc/btree.h	142;"	d
BTREE_HINT_RANGE	sqlite3.c	12169;"	d	file:
BTREE_HINT_RANGE	src/btree.h	180;"	d
BTREE_HINT_RANGE	tsrc/btree.h	180;"	d
BTREE_INCR_VACUUM	sqlite3.c	12138;"	d	file:
BTREE_INCR_VACUUM	src/btree.h	149;"	d
BTREE_INCR_VACUUM	tsrc/btree.h	149;"	d
BTREE_INTKEY	sqlite3.c	12101;"	d	file:
BTREE_INTKEY	src/btree.h	112;"	d
BTREE_INTKEY	tsrc/btree.h	112;"	d
BTREE_LARGEST_ROOT_PAGE	sqlite3.c	12135;"	d	file:
BTREE_LARGEST_ROOT_PAGE	src/btree.h	146;"	d
BTREE_LARGEST_ROOT_PAGE	tsrc/btree.h	146;"	d
BTREE_MEMORY	sqlite3.c	12050;"	d	file:
BTREE_MEMORY	src/btree.h	61;"	d
BTREE_MEMORY	tsrc/btree.h	61;"	d
BTREE_OMIT_JOURNAL	sqlite3.c	12049;"	d	file:
BTREE_OMIT_JOURNAL	src/btree.h	60;"	d
BTREE_OMIT_JOURNAL	tsrc/btree.h	60;"	d
BTREE_SAVEPOSITION	sqlite3.c	12240;"	d	file:
BTREE_SAVEPOSITION	src/btree.h	251;"	d
BTREE_SAVEPOSITION	tsrc/btree.h	251;"	d
BTREE_SCHEMA_VERSION	sqlite3.c	12132;"	d	file:
BTREE_SCHEMA_VERSION	src/btree.h	143;"	d
BTREE_SCHEMA_VERSION	tsrc/btree.h	143;"	d
BTREE_SEEK_EQ	sqlite3.c	12185;"	d	file:
BTREE_SEEK_EQ	src/btree.h	196;"	d
BTREE_SEEK_EQ	tsrc/btree.h	196;"	d
BTREE_SINGLE	sqlite3.c	12051;"	d	file:
BTREE_SINGLE	src/btree.h	62;"	d
BTREE_SINGLE	tsrc/btree.h	62;"	d
BTREE_TEXT_ENCODING	sqlite3.c	12136;"	d	file:
BTREE_TEXT_ENCODING	src/btree.h	147;"	d
BTREE_TEXT_ENCODING	tsrc/btree.h	147;"	d
BTREE_UNORDERED	sqlite3.c	12052;"	d	file:
BTREE_UNORDERED	src/btree.h	63;"	d
BTREE_UNORDERED	tsrc/btree.h	63;"	d
BTREE_USER_VERSION	sqlite3.c	12137;"	d	file:
BTREE_USER_VERSION	src/btree.h	148;"	d
BTREE_USER_VERSION	tsrc/btree.h	148;"	d
BTREE_WRCSR	sqlite3.c	12210;"	d	file:
BTREE_WRCSR	src/btree.h	221;"	d
BTREE_WRCSR	tsrc/btree.h	221;"	d
BTS_EXCLUSIVE	sqlite3.c	57601;"	d	file:
BTS_EXCLUSIVE	src/btreeInt.h	459;"	d
BTS_EXCLUSIVE	tsrc/btreeInt.h	459;"	d
BTS_INITIALLY_EMPTY	sqlite3.c	57599;"	d	file:
BTS_INITIALLY_EMPTY	src/btreeInt.h	457;"	d
BTS_INITIALLY_EMPTY	tsrc/btreeInt.h	457;"	d
BTS_NO_WAL	sqlite3.c	57600;"	d	file:
BTS_NO_WAL	src/btreeInt.h	458;"	d
BTS_NO_WAL	tsrc/btreeInt.h	458;"	d
BTS_PAGESIZE_FIXED	sqlite3.c	57597;"	d	file:
BTS_PAGESIZE_FIXED	src/btreeInt.h	455;"	d
BTS_PAGESIZE_FIXED	tsrc/btreeInt.h	455;"	d
BTS_PENDING	sqlite3.c	57602;"	d	file:
BTS_PENDING	src/btreeInt.h	460;"	d
BTS_PENDING	tsrc/btreeInt.h	460;"	d
BTS_READ_ONLY	sqlite3.c	57596;"	d	file:
BTS_READ_ONLY	src/btreeInt.h	454;"	d
BTS_READ_ONLY	tsrc/btreeInt.h	454;"	d
BTS_SECURE_DELETE	sqlite3.c	57598;"	d	file:
BTS_SECURE_DELETE	src/btreeInt.h	456;"	d
BTS_SECURE_DELETE	tsrc/btreeInt.h	456;"	d
BYTESWAP32	sqlite3.c	54277;"	d	file:
BYTESWAP32	src/wal.c	601;"	d	file:
BYTESWAP32	tsrc/wal.c	601;"	d	file:
BadFileName	tool/GetFile.cs	/^        BadFileName = 4,$/;"	e	enum:GetFile.ExitCode	file:
BadMatchingOnlyFlag	tool/Replace.cs	/^        BadMatchingOnlyFlag = 3,$/;"	e	enum:Replace.ExitCode	file:
BadTempPath	tool/GetFile.cs	/^        BadTempPath = 5,$/;"	e	enum:GetFile.ExitCode	file:
BadUri	tool/GetFile.cs	/^        BadUri = 3,$/;"	e	enum:GetFile.ExitCode	file:
BenignMallocHooks	sqlite3.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	sqlite3.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
BenignMallocHooks	src/fault.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	src/fault.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
BenignMallocHooks	tsrc/fault.c	/^static SQLITE_WSD struct BenignMallocHooks {$/;"	s	file:
BenignMallocHooks	tsrc/fault.c	/^typedef struct BenignMallocHooks BenignMallocHooks;$/;"	t	typeref:struct:BenignMallocHooks	file:
BinaryOp	test/fuzz_common.tcl	/^proc BinaryOp {} {$/;"	p
BitFlagAllTest	ext/fts5/fts5_main.c	231;"	d	file:
BitFlagAllTest	fts5.c	14506;"	d	file:
BitFlagAllTest	sqlite3.c	191637;"	d	file:
BitFlagAllTest	tsrc/fts5.c	14506;"	d	file:
BitFlagTest	ext/fts5/fts5_main.c	232;"	d	file:
BitFlagTest	fts5.c	14507;"	d	file:
BitFlagTest	sqlite3.c	191638;"	d	file:
BitFlagTest	tsrc/fts5.c	14507;"	d	file:
Bitmask	sqlite3.c	/^  typedef SQLITE_BITMASK_TYPE Bitmask;$/;"	t	file:
Bitmask	sqlite3.c	/^  typedef u64 Bitmask;$/;"	t	file:
Bitmask	src/sqliteInt.h	/^  typedef SQLITE_BITMASK_TYPE Bitmask;$/;"	t
Bitmask	src/sqliteInt.h	/^  typedef u64 Bitmask;$/;"	t
Bitmask	tsrc/sqliteInt.h	/^  typedef SQLITE_BITMASK_TYPE Bitmask;$/;"	t
Bitmask	tsrc/sqliteInt.h	/^  typedef u64 Bitmask;$/;"	t
Bitvec	sqlite3.c	/^struct Bitvec {$/;"	s	file:
Bitvec	sqlite3.c	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec	file:
Bitvec	src/bitvec.c	/^struct Bitvec {$/;"	s	file:
Bitvec	src/sqliteInt.h	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec
Bitvec	tsrc/bitvec.c	/^struct Bitvec {$/;"	s	file:
Bitvec	tsrc/sqliteInt.h	/^typedef struct Bitvec Bitvec;$/;"	t	typeref:struct:Bitvec
Blob	ext/fts3/fts3_write.c	/^struct Blob {$/;"	s	file:
Blob	ext/fts3/fts3_write.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
Blob	sqlite3.c	/^struct Blob {$/;"	s	file:
Blob	sqlite3.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
Blob	test/fuzzcheck.c	/^struct Blob {$/;"	s	file:
Blob	test/fuzzcheck.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
Blob	tsrc/fts3_write.c	/^struct Blob {$/;"	s	file:
Blob	tsrc/fts3_write.c	/^typedef struct Blob Blob;$/;"	t	typeref:struct:Blob	file:
Bool	sqlite3.c	/^typedef unsigned Bool;$/;"	t	file:
Bool	src/vdbeInt.h	/^typedef unsigned Bool;$/;"	t
Bool	tsrc/vdbeInt.h	/^typedef unsigned Bool;$/;"	t
Boolean	tool/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	t	typeref:enum:__anon4	file:
Box	src/test_rtree.c	/^  struct Box {$/;"	s	struct:Circle	file:
BtCursor	sqlite3.c	/^struct BtCursor {$/;"	s	file:
BtCursor	sqlite3.c	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor	file:
BtCursor	src/btree.h	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor
BtCursor	src/btreeInt.h	/^struct BtCursor {$/;"	s
BtCursor	tsrc/btree.h	/^typedef struct BtCursor BtCursor;$/;"	t	typeref:struct:BtCursor
BtCursor	tsrc/btreeInt.h	/^struct BtCursor {$/;"	s
BtLock	sqlite3.c	/^struct BtLock {$/;"	s	file:
BtLock	sqlite3.c	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock	file:
BtLock	src/btreeInt.h	/^struct BtLock {$/;"	s
BtLock	src/btreeInt.h	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock
BtLock	tsrc/btreeInt.h	/^struct BtLock {$/;"	s
BtLock	tsrc/btreeInt.h	/^typedef struct BtLock BtLock;$/;"	t	typeref:struct:BtLock
BtShared	sqlite3.c	/^struct BtShared {$/;"	s	file:
BtShared	sqlite3.c	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared	file:
BtShared	src/btree.h	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared
BtShared	src/btreeInt.h	/^struct BtShared {$/;"	s
BtShared	tsrc/btree.h	/^typedef struct BtShared BtShared;$/;"	t	typeref:struct:BtShared
BtShared	tsrc/btreeInt.h	/^struct BtShared {$/;"	s
Btree	sqlite3.c	/^struct Btree {$/;"	s	file:
Btree	sqlite3.c	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree	file:
Btree	src/btree.h	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree
Btree	src/btreeInt.h	/^struct Btree {$/;"	s
Btree	tsrc/btree.h	/^typedef struct Btree Btree;$/;"	t	typeref:struct:Btree
Btree	tsrc/btreeInt.h	/^struct Btree {$/;"	s
BtreePayload	sqlite3.c	/^struct BtreePayload {$/;"	s	file:
BtreePayload	sqlite3.c	/^typedef struct BtreePayload BtreePayload;$/;"	t	typeref:struct:BtreePayload	file:
BtreePayload	src/btree.h	/^struct BtreePayload {$/;"	s
BtreePayload	src/btree.h	/^typedef struct BtreePayload BtreePayload;$/;"	t	typeref:struct:BtreePayload
BtreePayload	tsrc/btree.h	/^struct BtreePayload {$/;"	s
BtreePayload	tsrc/btree.h	/^typedef struct BtreePayload BtreePayload;$/;"	t	typeref:struct:BtreePayload
BusyHandler	sqlite3.c	/^struct BusyHandler {$/;"	s	file:
BusyHandler	sqlite3.c	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler	file:
BusyHandler	src/sqliteInt.h	/^struct BusyHandler {$/;"	s
BusyHandler	src/sqliteInt.h	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler
BusyHandler	tsrc/sqliteInt.h	/^struct BusyHandler {$/;"	s
BusyHandler	tsrc/sqliteInt.h	/^typedef struct BusyHandler BusyHandler;$/;"	t	typeref:struct:BusyHandler
ByteRangeLockPB2	sqlite3.c	/^struct ByteRangeLockPB2$/;"	s	file:
ByteRangeLockPB2	src/os_unix.c	/^struct ByteRangeLockPB2$/;"	s	file:
ByteRangeLockPB2	tsrc/os_unix.c	/^struct ByteRangeLockPB2$/;"	s	file:
CACHE_STALE	sqlite3.c	17803;"	d	file:
CACHE_STALE	src/vdbeInt.h	181;"	d
CACHE_STALE	tsrc/vdbeInt.h	181;"	d
CALLGRINDTEST1_NROW	test/threadtest3.c	1255;"	d	file:
CARRAY_COLUMN_COUNT	ext/misc/carray.c	107;"	d	file:
CARRAY_COLUMN_CTYPE	ext/misc/carray.c	108;"	d	file:
CARRAY_COLUMN_POINTER	ext/misc/carray.c	106;"	d	file:
CARRAY_COLUMN_VALUE	ext/misc/carray.c	105;"	d	file:
CARRAY_DOUBLE	ext/misc/carray.c	59;"	d	file:
CARRAY_INT32	ext/misc/carray.c	57;"	d	file:
CARRAY_INT64	ext/misc/carray.c	58;"	d	file:
CARRAY_TEXT	ext/misc/carray.c	60;"	d	file:
CASE	ext/fts5/fts5_tcl.c	269;"	d	file:
CASE	ext/fts5/fts5_tcl.c	508;"	d	file:
CAST	tool/mkkeywordhash.c	76;"	d	file:
CAST	tool/mkkeywordhash.c	78;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CCLASS_B	ext/misc/spellfix.c	53;"	d	file:
CCLASS_C	ext/misc/spellfix.c	54;"	d	file:
CCLASS_D	ext/misc/spellfix.c	55;"	d	file:
CCLASS_DIGIT	ext/misc/spellfix.c	61;"	d	file:
CCLASS_H	ext/misc/spellfix.c	56;"	d	file:
CCLASS_L	ext/misc/spellfix.c	57;"	d	file:
CCLASS_M	ext/misc/spellfix.c	59;"	d	file:
CCLASS_OTHER	ext/misc/spellfix.c	63;"	d	file:
CCLASS_R	ext/misc/spellfix.c	58;"	d	file:
CCLASS_SILENT	ext/misc/spellfix.c	51;"	d	file:
CCLASS_SPACE	ext/misc/spellfix.c	62;"	d	file:
CCLASS_VOWEL	ext/misc/spellfix.c	52;"	d	file:
CCLASS_Y	ext/misc/spellfix.c	60;"	d	file:
CC_AND	sqlite3.c	135270;"	d	file:
CC_AND	src/tokenize.c	53;"	d	file:
CC_AND	tsrc/tokenize.c	53;"	d	file:
CC_BANG	sqlite3.c	135261;"	d	file:
CC_BANG	src/tokenize.c	44;"	d	file:
CC_BANG	tsrc/tokenize.c	44;"	d	file:
CC_COMMA	sqlite3.c	135269;"	d	file:
CC_COMMA	src/tokenize.c	52;"	d	file:
CC_COMMA	tsrc/tokenize.c	52;"	d	file:
CC_DIGIT	sqlite3.c	135249;"	d	file:
CC_DIGIT	src/tokenize.c	32;"	d	file:
CC_DIGIT	tsrc/tokenize.c	32;"	d	file:
CC_DOLLAR	sqlite3.c	135250;"	d	file:
CC_DOLLAR	src/tokenize.c	33;"	d	file:
CC_DOLLAR	tsrc/tokenize.c	33;"	d	file:
CC_DOT	sqlite3.c	135272;"	d	file:
CC_DOT	src/tokenize.c	55;"	d	file:
CC_DOT	tsrc/tokenize.c	55;"	d	file:
CC_EQ	sqlite3.c	135260;"	d	file:
CC_EQ	src/tokenize.c	43;"	d	file:
CC_EQ	tsrc/tokenize.c	43;"	d	file:
CC_GT	sqlite3.c	135259;"	d	file:
CC_GT	src/tokenize.c	42;"	d	file:
CC_GT	tsrc/tokenize.c	42;"	d	file:
CC_ID	sqlite3.c	135248;"	d	file:
CC_ID	src/tokenize.c	31;"	d	file:
CC_ID	tsrc/tokenize.c	31;"	d	file:
CC_ILLEGAL	sqlite3.c	135273;"	d	file:
CC_ILLEGAL	src/tokenize.c	56;"	d	file:
CC_ILLEGAL	tsrc/tokenize.c	56;"	d	file:
CC_KYWD	sqlite3.c	135247;"	d	file:
CC_KYWD	src/tokenize.c	30;"	d	file:
CC_KYWD	tsrc/tokenize.c	30;"	d	file:
CC_LP	sqlite3.c	135263;"	d	file:
CC_LP	src/tokenize.c	46;"	d	file:
CC_LP	tsrc/tokenize.c	46;"	d	file:
CC_LT	sqlite3.c	135258;"	d	file:
CC_LT	src/tokenize.c	41;"	d	file:
CC_LT	tsrc/tokenize.c	41;"	d	file:
CC_MINUS	sqlite3.c	135257;"	d	file:
CC_MINUS	src/tokenize.c	40;"	d	file:
CC_MINUS	tsrc/tokenize.c	40;"	d	file:
CC_PERCENT	sqlite3.c	135268;"	d	file:
CC_PERCENT	src/tokenize.c	51;"	d	file:
CC_PERCENT	tsrc/tokenize.c	51;"	d	file:
CC_PIPE	sqlite3.c	135256;"	d	file:
CC_PIPE	src/tokenize.c	39;"	d	file:
CC_PIPE	tsrc/tokenize.c	39;"	d	file:
CC_PLUS	sqlite3.c	135266;"	d	file:
CC_PLUS	src/tokenize.c	49;"	d	file:
CC_PLUS	tsrc/tokenize.c	49;"	d	file:
CC_QUOTE	sqlite3.c	135254;"	d	file:
CC_QUOTE	src/tokenize.c	37;"	d	file:
CC_QUOTE	tsrc/tokenize.c	37;"	d	file:
CC_QUOTE2	sqlite3.c	135255;"	d	file:
CC_QUOTE2	src/tokenize.c	38;"	d	file:
CC_QUOTE2	tsrc/tokenize.c	38;"	d	file:
CC_RP	sqlite3.c	135264;"	d	file:
CC_RP	src/tokenize.c	47;"	d	file:
CC_RP	tsrc/tokenize.c	47;"	d	file:
CC_SEMI	sqlite3.c	135265;"	d	file:
CC_SEMI	src/tokenize.c	48;"	d	file:
CC_SEMI	tsrc/tokenize.c	48;"	d	file:
CC_SLASH	sqlite3.c	135262;"	d	file:
CC_SLASH	src/tokenize.c	45;"	d	file:
CC_SLASH	tsrc/tokenize.c	45;"	d	file:
CC_SPACE	sqlite3.c	135253;"	d	file:
CC_SPACE	src/tokenize.c	36;"	d	file:
CC_SPACE	tsrc/tokenize.c	36;"	d	file:
CC_STAR	sqlite3.c	135267;"	d	file:
CC_STAR	src/tokenize.c	50;"	d	file:
CC_STAR	tsrc/tokenize.c	50;"	d	file:
CC_TILDA	sqlite3.c	135271;"	d	file:
CC_TILDA	src/tokenize.c	54;"	d	file:
CC_TILDA	tsrc/tokenize.c	54;"	d	file:
CC_VARALPHA	sqlite3.c	135251;"	d	file:
CC_VARALPHA	src/tokenize.c	34;"	d	file:
CC_VARALPHA	tsrc/tokenize.c	34;"	d	file:
CC_VARNUM	sqlite3.c	135252;"	d	file:
CC_VARNUM	src/tokenize.c	35;"	d	file:
CC_VARNUM	tsrc/tokenize.c	35;"	d	file:
CC_X	sqlite3.c	135246;"	d	file:
CC_X	src/tokenize.c	29;"	d	file:
CC_X	tsrc/tokenize.c	29;"	d	file:
CCurHint	sqlite3.c	/^struct CCurHint {$/;"	s	file:
CCurHint	src/wherecode.c	/^struct CCurHint {$/;"	s	file:
CCurHint	tsrc/wherecode.c	/^struct CCurHint {$/;"	s	file:
CFLAGS	Makefile	/^CFLAGS =   -g -O2 -DSQLITE_OS_UNIX=1$/;"	m
CHECKPOINT_STARVATION_FRAMELIMIT	test/tt3_checkpoint.c	42;"	d	file:
CHECKPOINT_STARVATION_READMS	test/tt3_checkpoint.c	45;"	d	file:
CHECK_PAGE	sqlite3.c	47484;"	d	file:
CHECK_PAGE	sqlite3.c	47495;"	d	file:
CHECK_PAGE	src/pager.c	1207;"	d	file:
CHECK_PAGE	src/pager.c	1218;"	d	file:
CHECK_PAGE	tsrc/pager.c	1207;"	d	file:
CHECK_PAGE	tsrc/pager.c	1218;"	d	file:
CHUNK	autoconf/tea/win/nmakehlp.c	55;"	d	file:
CHUNK_MAX	ext/fts1/fts1.c	1038;"	d	file:
CHUNK_MAX	ext/fts1/fulltext.c	525;"	d	file:
CHUNK_MAX	tsrc/fts1.c	1038;"	d	file:
CInstIter	ext/fts5/fts5_aux.c	/^struct CInstIter {$/;"	s	file:
CInstIter	ext/fts5/fts5_aux.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CInstIter	fts5.c	/^struct CInstIter {$/;"	s	file:
CInstIter	fts5.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CInstIter	sqlite3.c	/^struct CInstIter {$/;"	s	file:
CInstIter	sqlite3.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CInstIter	tsrc/fts5.c	/^struct CInstIter {$/;"	s	file:
CInstIter	tsrc/fts5.c	/^typedef struct CInstIter CInstIter;$/;"	t	typeref:struct:CInstIter	file:
CKCNSTRNT_COLUMN	sqlite3.c	107552;"	d	file:
CKCNSTRNT_COLUMN	src/insert.c	1083;"	d	file:
CKCNSTRNT_COLUMN	tsrc/insert.c	1083;"	d	file:
CKCNSTRNT_ROWID	sqlite3.c	107553;"	d	file:
CKCNSTRNT_ROWID	src/insert.c	1084;"	d	file:
CKCNSTRNT_ROWID	tsrc/insert.c	1084;"	d	file:
CLEAR	ext/fts2/fts2.c	395;"	d	file:
CLEAR	tsrc/fts2.c	395;"	d	file:
CLEARBIT	sqlite3.c	43380;"	d	file:
CLEARBIT	src/bitvec.c	304;"	d	file:
CLEARBIT	tsrc/bitvec.c	304;"	d	file:
CLOSURE_COL_DEPTH	ext/misc/closure.c	560;"	d	file:
CLOSURE_COL_ID	ext/misc/closure.c	559;"	d	file:
CLOSURE_COL_IDCOLUMN	ext/misc/closure.c	563;"	d	file:
CLOSURE_COL_PARENTCOLUMN	ext/misc/closure.c	564;"	d	file:
CLOSURE_COL_ROOT	ext/misc/closure.c	561;"	d	file:
CLOSURE_COL_TABLENAME	ext/misc/closure.c	562;"	d	file:
CODEC1	sqlite3.c	46690;"	d	file:
CODEC1	sqlite3.c	46696;"	d	file:
CODEC1	src/pager.c	413;"	d	file:
CODEC1	src/pager.c	419;"	d	file:
CODEC1	tsrc/pager.c	413;"	d	file:
CODEC1	tsrc/pager.c	419;"	d	file:
CODEC2	sqlite3.c	46692;"	d	file:
CODEC2	sqlite3.c	46697;"	d	file:
CODEC2	src/pager.c	415;"	d	file:
CODEC2	src/pager.c	420;"	d	file:
CODEC2	tsrc/pager.c	415;"	d	file:
CODEC2	tsrc/pager.c	420;"	d	file:
COLFLAG_HASTYPE	sqlite3.c	14272;"	d	file:
COLFLAG_HASTYPE	src/sqliteInt.h	1673;"	d
COLFLAG_HASTYPE	tsrc/sqliteInt.h	1673;"	d
COLFLAG_HIDDEN	sqlite3.c	14271;"	d	file:
COLFLAG_HIDDEN	src/sqliteInt.h	1672;"	d
COLFLAG_HIDDEN	tsrc/sqliteInt.h	1672;"	d
COLFLAG_PRIMKEY	sqlite3.c	14270;"	d	file:
COLFLAG_PRIMKEY	src/sqliteInt.h	1671;"	d
COLFLAG_PRIMKEY	tsrc/sqliteInt.h	1671;"	d
COLNAME_COLUMN	sqlite3.c	12501;"	d	file:
COLNAME_COLUMN	src/vdbe.h	145;"	d
COLNAME_COLUMN	tsrc/vdbe.h	145;"	d
COLNAME_DATABASE	sqlite3.c	12499;"	d	file:
COLNAME_DATABASE	src/vdbe.h	143;"	d
COLNAME_DATABASE	tsrc/vdbe.h	143;"	d
COLNAME_DECLTYPE	sqlite3.c	12498;"	d	file:
COLNAME_DECLTYPE	src/vdbe.h	142;"	d
COLNAME_DECLTYPE	tsrc/vdbe.h	142;"	d
COLNAME_N	sqlite3.c	12503;"	d	file:
COLNAME_N	sqlite3.c	12506;"	d	file:
COLNAME_N	sqlite3.c	12508;"	d	file:
COLNAME_N	src/vdbe.h	147;"	d
COLNAME_N	src/vdbe.h	150;"	d
COLNAME_N	src/vdbe.h	152;"	d
COLNAME_N	tsrc/vdbe.h	147;"	d
COLNAME_N	tsrc/vdbe.h	150;"	d
COLNAME_N	tsrc/vdbe.h	152;"	d
COLNAME_NAME	sqlite3.c	12497;"	d	file:
COLNAME_NAME	src/vdbe.h	141;"	d
COLNAME_NAME	tsrc/vdbe.h	141;"	d
COLNAME_TABLE	sqlite3.c	12500;"	d	file:
COLNAME_TABLE	src/vdbe.h	144;"	d
COLNAME_TABLE	tsrc/vdbe.h	144;"	d
COLUMN_MASK	sqlite3.c	106105;"	d	file:
COLUMN_MASK	src/fkey.c	1047;"	d	file:
COLUMN_MASK	tsrc/fkey.c	1047;"	d	file:
COMPLETE	tool/lemon.c	/^  COMPLETE,$/;"	e	enum:cfgstatus	file:
COMPOUND	tool/mkkeywordhash.c	81;"	d	file:
COMPOUND	tool/mkkeywordhash.c	83;"	d	file:
CONFLICT	tool/mkkeywordhash.c	86;"	d	file:
CONFLICT	tool/mkkeywordhash.c	88;"	d	file:
CONTENT_DELETE_STMT	ext/fts1/fts1.c	/^  CONTENT_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_DELETE_STMT	ext/fts1/fulltext.c	/^  CONTENT_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_DELETE_STMT	ext/fts2/fts2.c	/^  CONTENT_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_DELETE_STMT	tsrc/fts1.c	/^  CONTENT_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_DELETE_STMT	tsrc/fts2.c	/^  CONTENT_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_EXISTS_STMT	ext/fts2/fts2.c	/^  CONTENT_EXISTS_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_EXISTS_STMT	tsrc/fts2.c	/^  CONTENT_EXISTS_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_INSERT_STMT	ext/fts1/fts1.c	/^  CONTENT_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_INSERT_STMT	ext/fts1/fulltext.c	/^  CONTENT_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_INSERT_STMT	ext/fts2/fts2.c	/^  CONTENT_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_INSERT_STMT	tsrc/fts1.c	/^  CONTENT_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_INSERT_STMT	tsrc/fts2.c	/^  CONTENT_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_SELECT_STMT	ext/fts1/fts1.c	/^  CONTENT_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_SELECT_STMT	ext/fts1/fulltext.c	/^  CONTENT_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_SELECT_STMT	ext/fts2/fts2.c	/^  CONTENT_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_SELECT_STMT	tsrc/fts1.c	/^  CONTENT_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_SELECT_STMT	tsrc/fts2.c	/^  CONTENT_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_UPDATE_STMT	ext/fts1/fts1.c	/^  CONTENT_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_UPDATE_STMT	ext/fts2/fts2.c	/^  CONTENT_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_UPDATE_STMT	tsrc/fts1.c	/^  CONTENT_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
CONTENT_UPDATE_STMT	tsrc/fts2.c	/^  CONTENT_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
CORRUPT_DB	sqlite3.c	15847;"	d	file:
CORRUPT_DB	src/sqliteInt.h	3248;"	d
CORRUPT_DB	tsrc/sqliteInt.h	3248;"	d
CR_OK	tool/checkSpacing.c	14;"	d	file:
CSVTEST_FIDX	ext/misc/csv.c	297;"	d	file:
CSV_DATA	ext/misc/csv.c	460;"	d	file:
CSV_FILENAME	ext/misc/csv.c	459;"	d	file:
CSV_INBUFSZ	ext/misc/csv.c	70;"	d	file:
CSV_MXERR	ext/misc/csv.c	67;"	d	file:
CSV_NOINLINE	ext/misc/csv.c	58;"	d	file:
CSV_SCHEMA	ext/misc/csv.c	461;"	d	file:
CTE	tool/mkkeywordhash.c	142;"	d	file:
CTE	tool/mkkeywordhash.c	144;"	d	file:
CTIMEOPT_VAL	sqlite3.c	17184;"	d	file:
CTIMEOPT_VAL	src/ctime.c	34;"	d	file:
CTIMEOPT_VAL	tsrc/ctime.c	34;"	d	file:
CTIMEOPT_VAL_	sqlite3.c	17183;"	d	file:
CTIMEOPT_VAL_	src/ctime.c	33;"	d	file:
CTIMEOPT_VAL_	tsrc/ctime.c	33;"	d	file:
CTRL_FREE	sqlite3.c	21864;"	d	file:
CTRL_FREE	src/mem5.c	84;"	d	file:
CTRL_FREE	tsrc/mem5.c	84;"	d	file:
CTRL_LOGSIZE	sqlite3.c	21863;"	d	file:
CTRL_LOGSIZE	src/mem5.c	83;"	d	file:
CTRL_LOGSIZE	tsrc/mem5.c	83;"	d	file:
CURSOR_FAULT	sqlite3.c	57718;"	d	file:
CURSOR_FAULT	src/btreeInt.h	576;"	d
CURSOR_FAULT	tsrc/btreeInt.h	576;"	d
CURSOR_INVALID	sqlite3.c	57714;"	d	file:
CURSOR_INVALID	src/btreeInt.h	572;"	d
CURSOR_INVALID	tsrc/btreeInt.h	572;"	d
CURSOR_REQUIRESEEK	sqlite3.c	57717;"	d	file:
CURSOR_REQUIRESEEK	src/btreeInt.h	575;"	d
CURSOR_REQUIRESEEK	tsrc/btreeInt.h	575;"	d
CURSOR_SKIPNEXT	sqlite3.c	57716;"	d	file:
CURSOR_SKIPNEXT	src/btreeInt.h	574;"	d
CURSOR_SKIPNEXT	tsrc/btreeInt.h	574;"	d
CURSOR_VALID	sqlite3.c	57715;"	d	file:
CURSOR_VALID	src/btreeInt.h	573;"	d
CURSOR_VALID	tsrc/btreeInt.h	573;"	d
CURTYPE_BTREE	sqlite3.c	17684;"	d	file:
CURTYPE_BTREE	src/vdbeInt.h	62;"	d
CURTYPE_BTREE	tsrc/vdbeInt.h	62;"	d
CURTYPE_PSEUDO	sqlite3.c	17687;"	d	file:
CURTYPE_PSEUDO	src/vdbeInt.h	65;"	d
CURTYPE_PSEUDO	tsrc/vdbeInt.h	65;"	d
CURTYPE_SORTER	sqlite3.c	17685;"	d	file:
CURTYPE_SORTER	src/vdbeInt.h	63;"	d
CURTYPE_SORTER	tsrc/vdbeInt.h	63;"	d
CURTYPE_VTAB	sqlite3.c	17686;"	d	file:
CURTYPE_VTAB	src/vdbeInt.h	64;"	d
CURTYPE_VTAB	tsrc/vdbeInt.h	64;"	d
CellArray	sqlite3.c	/^struct CellArray {$/;"	s	file:
CellArray	sqlite3.c	/^typedef struct CellArray CellArray;$/;"	t	typeref:struct:CellArray	file:
CellArray	src/btree.c	/^struct CellArray {$/;"	s	file:
CellArray	src/btree.c	/^typedef struct CellArray CellArray;$/;"	t	typeref:struct:CellArray	file:
CellArray	tsrc/btree.c	/^struct CellArray {$/;"	s	file:
CellArray	tsrc/btree.c	/^typedef struct CellArray CellArray;$/;"	t	typeref:struct:CellArray	file:
CellInfo	sqlite3.c	/^struct CellInfo {$/;"	s	file:
CellInfo	sqlite3.c	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo	file:
CellInfo	src/btreeInt.h	/^struct CellInfo {$/;"	s
CellInfo	src/btreeInt.h	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo
CellInfo	tsrc/btreeInt.h	/^struct CellInfo {$/;"	s
CellInfo	tsrc/btreeInt.h	/^typedef struct CellInfo CellInfo;$/;"	t	typeref:struct:CellInfo
Check	test/fuzz_common.tcl	/^proc Check {} {$/;"	p
CheckForCompilerFeature	autoconf/tea/win/nmakehlp.c	/^CheckForCompilerFeature($/;"	f	file:
CheckForLinkerFeature	autoconf/tea/win/nmakehlp.c	/^CheckForLinkerFeature($/;"	f	file:
CheckpointStarvationCtx	test/tt3_checkpoint.c	/^struct CheckpointStarvationCtx {$/;"	s	file:
CheckpointStarvationCtx	test/tt3_checkpoint.c	/^typedef struct CheckpointStarvationCtx CheckpointStarvationCtx;$/;"	t	typeref:struct:CheckpointStarvationCtx	file:
ChooseLeaf	ext/rtree/rtree.c	/^static int ChooseLeaf($/;"	f	file:
ChooseLeaf	sqlite3.c	/^static int ChooseLeaf($/;"	f	file:
ChooseLeaf	tsrc/rtree.c	/^static int ChooseLeaf($/;"	f	file:
Circle	src/test_rtree.c	/^struct Circle {$/;"	s	file:
Circle	src/test_rtree.c	/^typedef struct Circle Circle;$/;"	t	typeref:struct:Circle	file:
Cksum	tool/showwal.c	/^struct Cksum {$/;"	s	file:
Cksum	tool/showwal.c	/^typedef struct Cksum Cksum;$/;"	t	typeref:struct:Cksum	file:
Cleanup	sqlite3.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
Cleanup	src/vdbeaux.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
Cleanup	tsrc/vdbeaux.c	/^static void Cleanup(Vdbe *p){$/;"	f	file:
CollSeq	sqlite3.c	/^struct CollSeq {$/;"	s	file:
CollSeq	sqlite3.c	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq	file:
CollSeq	src/sqliteInt.h	/^struct CollSeq {$/;"	s
CollSeq	src/sqliteInt.h	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq
CollSeq	tsrc/sqliteInt.h	/^struct CollSeq {$/;"	s
CollSeq	tsrc/sqliteInt.h	/^typedef struct CollSeq CollSeq;$/;"	t	typeref:struct:CollSeq
Coltype	test/fuzz_common.tcl	/^proc Coltype {} {$/;"	p
Column	sqlite3.c	/^struct Column {$/;"	s	file:
Column	sqlite3.c	/^typedef struct Column Column;$/;"	t	typeref:struct:Column	file:
Column	src/sqliteInt.h	/^struct Column {$/;"	s
Column	src/sqliteInt.h	/^typedef struct Column Column;$/;"	t	typeref:struct:Column
Column	test/fuzz_common.tcl	/^proc Column {} {$/;"	p
Column	tsrc/sqliteInt.h	/^struct Column {$/;"	s
Column	tsrc/sqliteInt.h	/^typedef struct Column Column;$/;"	t	typeref:struct:Column
CompressTables	tool/lemon.c	/^void CompressTables(struct lemon *lemp)$/;"	f
ConfigPrint	tool/lemon.c	/^void ConfigPrint(FILE *fp, struct config *cfp){$/;"	f
Configcmp	tool/lemon.c	/^int Configcmp(const char *_a,const char *_b)$/;"	f
Configlist_add	tool/lemon.c	/^struct config *Configlist_add($/;"	f
Configlist_addbasis	tool/lemon.c	/^struct config *Configlist_addbasis(struct rule *rp, int dot)$/;"	f
Configlist_basis	tool/lemon.c	/^struct config *Configlist_basis(){$/;"	f
Configlist_closure	tool/lemon.c	/^void Configlist_closure(struct lemon *lemp)$/;"	f
Configlist_eat	tool/lemon.c	/^void Configlist_eat(struct config *cfp)$/;"	f
Configlist_init	tool/lemon.c	/^void Configlist_init(){$/;"	f
Configlist_reset	tool/lemon.c	/^void Configlist_reset(){$/;"	f
Configlist_return	tool/lemon.c	/^struct config *Configlist_return(){$/;"	f
Configlist_sort	tool/lemon.c	/^void Configlist_sort(){$/;"	f
Configlist_sortbasis	tool/lemon.c	/^void Configlist_sortbasis(){$/;"	f
Configtable_clear	tool/lemon.c	/^void Configtable_clear(int(*f)(struct config *))$/;"	f
Configtable_find	tool/lemon.c	/^struct config *Configtable_find(struct config *key)$/;"	f
Configtable_init	tool/lemon.c	/^void Configtable_init(){$/;"	f
Configtable_insert	tool/lemon.c	/^int Configtable_insert(struct config *data)$/;"	f
ConstFactorOk	sqlite3.c	14074;"	d	file:
ConstFactorOk	src/sqliteInt.h	1475;"	d
ConstFactorOk	tsrc/sqliteInt.h	1475;"	d
CountCtx	sqlite3.c	/^struct CountCtx {$/;"	s	file:
CountCtx	sqlite3.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
CountCtx	src/func.c	/^struct CountCtx {$/;"	s	file:
CountCtx	src/func.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
CountCtx	tsrc/func.c	/^struct CountCtx {$/;"	s	file:
CountCtx	tsrc/func.c	/^typedef struct CountCtx CountCtx;$/;"	t	typeref:struct:CountCtx	file:
CrashFile	src/test6.c	/^struct CrashFile {$/;"	s	file:
CrashFile	src/test6.c	/^typedef struct CrashFile CrashFile;$/;"	t	typeref:struct:CrashFile	file:
CrashFileVtab	src/test6.c	/^static const sqlite3_io_methods CrashFileVtab = {$/;"	v	file:
CrashGlobal	src/test6.c	/^struct CrashGlobal {$/;"	s	file:
CrashGlobal	src/test6.c	/^typedef struct CrashGlobal CrashGlobal;$/;"	t	typeref:struct:CrashGlobal	file:
CreateFunctionV2	src/test1.c	/^struct CreateFunctionV2 {$/;"	s	file:
CreateFunctionV2	src/test1.c	/^typedef struct CreateFunctionV2 CreateFunctionV2;$/;"	t	typeref:struct:CreateFunctionV2	file:
CreateOrDropTableOrView	test/fuzz_common.tcl	/^proc CreateOrDropTableOrView {} {$/;"	p
CreateTable	test/fuzz_common.tcl	/^proc CreateTable {} {$/;"	p
CreateView	test/fuzz_common.tcl	/^proc CreateView {} {$/;"	p
CsrFlagClear	ext/fts5/fts5_main.c	239;"	d	file:
CsrFlagClear	fts5.c	14514;"	d	file:
CsrFlagClear	sqlite3.c	191645;"	d	file:
CsrFlagClear	tsrc/fts5.c	14514;"	d	file:
CsrFlagSet	ext/fts5/fts5_main.c	238;"	d	file:
CsrFlagSet	fts5.c	14513;"	d	file:
CsrFlagSet	sqlite3.c	191644;"	d	file:
CsrFlagSet	tsrc/fts5.c	14513;"	d	file:
CsrFlagTest	ext/fts5/fts5_main.c	240;"	d	file:
CsrFlagTest	fts5.c	14515;"	d	file:
CsrFlagTest	sqlite3.c	191646;"	d	file:
CsrFlagTest	tsrc/fts5.c	14515;"	d	file:
CsvCursor	ext/misc/csv.c	/^typedef struct CsvCursor {$/;"	s	file:
CsvCursor	ext/misc/csv.c	/^} CsvCursor;$/;"	t	typeref:struct:CsvCursor	file:
CsvModule	ext/misc/csv.c	/^static sqlite3_module CsvModule = {$/;"	v	file:
CsvModuleFauxWrite	ext/misc/csv.c	/^static sqlite3_module CsvModuleFauxWrite = {$/;"	v	file:
CsvReader	ext/misc/csv.c	/^struct CsvReader {$/;"	s	file:
CsvReader	ext/misc/csv.c	/^typedef struct CsvReader CsvReader;$/;"	t	typeref:struct:CsvReader	file:
CsvTable	ext/misc/csv.c	/^typedef struct CsvTable {$/;"	s	file:
CsvTable	ext/misc/csv.c	/^} CsvTable;$/;"	t	typeref:struct:CsvTable	file:
Cte	sqlite3.c	/^  struct Cte {                    \/* For each CTE in the WITH clause.... *\/$/;"	s	struct:With	file:
Cte	src/sqliteInt.h	/^  struct Cte {                    \/* For each CTE in the WITH clause.... *\/$/;"	s	struct:With
Cte	tsrc/sqliteInt.h	/^  struct Cte {                    \/* For each CTE in the WITH clause.... *\/$/;"	s	struct:With
Cube	src/test_rtree.c	/^struct Cube {$/;"	s	file:
Cube	src/test_rtree.c	/^typedef struct Cube Cube;$/;"	t	typeref:struct:Cube	file:
D	sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
D	src/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
D	tsrc/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
DATABASE_FILE	src/test_onefile.c	125;"	d	file:
DB_Empty	sqlite3.c	13758;"	d	file:
DB_Empty	src/sqliteInt.h	1159;"	d
DB_Empty	tsrc/sqliteInt.h	1159;"	d
DB_FILE	test/threadtest2.c	28;"	d	file:
DB_SchemaLoaded	sqlite3.c	13756;"	d	file:
DB_SchemaLoaded	src/sqliteInt.h	1157;"	d
DB_SchemaLoaded	tsrc/sqliteInt.h	1157;"	d
DB_UnresetViews	sqlite3.c	13757;"	d	file:
DB_UnresetViews	src/sqliteInt.h	1158;"	d
DB_UnresetViews	tsrc/sqliteInt.h	1158;"	d
DCOORD	ext/rtree/rtree.c	258;"	d	file:
DCOORD	ext/rtree/rtree.c	260;"	d	file:
DCOORD	sqlite3.c	160221;"	d	file:
DCOORD	sqlite3.c	160223;"	d	file:
DCOORD	tsrc/rtree.c	258;"	d	file:
DCOORD	tsrc/rtree.c	260;"	d	file:
DEBUG_COLUMN_NAMES	tool/sqldiff.c	44;"	d	file:
DEBUG_DIFF_SQL	tool/sqldiff.c	45;"	d	file:
DEBUG_FULLTRACE	tool/dbhash.c	51;"	d	file:
DEFAULT_SECTOR_SIZE	src/test_multiplex.c	69;"	d	file:
DEFAULT_TIMEOUT	mptest/mptest.c	93;"	d	file:
DEVSYM_MAX_PATHNAME	src/test_devsym.c	25;"	d	file:
DEVSYM_VFS_NAME	src/test_devsym.c	30;"	d	file:
DFUNCTION	sqlite3.c	14200;"	d	file:
DFUNCTION	src/sqliteInt.h	1601;"	d
DFUNCTION	tsrc/sqliteInt.h	1601;"	d
DIR	src/test_windirent.h	/^struct DIR {$/;"	s
DIR	src/test_windirent.h	/^typedef struct DIR DIR;$/;"	t	typeref:struct:DIR
DIRECT_MODE	sqlite3.c	52330;"	d	file:
DIRECT_MODE	src/pager.c	6053;"	d	file:
DIRECT_MODE	tsrc/pager.c	6053;"	d	file:
DIRENT	src/test_fs.c	81;"	d	file:
DIRENT	src/test_windirent.h	/^struct DIRENT {$/;"	s
DIRENT	src/test_windirent.h	/^typedef struct DIRENT DIRENT;$/;"	t	typeref:struct:DIRENT
DLCollector	ext/fts2/fts2.c	/^typedef struct DLCollector {$/;"	s	file:
DLCollector	ext/fts2/fts2.c	/^} DLCollector;$/;"	t	typeref:struct:DLCollector	file:
DLCollector	tsrc/fts2.c	/^typedef struct DLCollector {$/;"	s	file:
DLCollector	tsrc/fts2.c	/^} DLCollector;$/;"	t	typeref:struct:DLCollector	file:
DLReader	ext/fts2/fts2.c	/^typedef struct DLReader {$/;"	s	file:
DLReader	ext/fts2/fts2.c	/^} DLReader;$/;"	t	typeref:struct:DLReader	file:
DLReader	tsrc/fts2.c	/^typedef struct DLReader {$/;"	s	file:
DLReader	tsrc/fts2.c	/^} DLReader;$/;"	t	typeref:struct:DLReader	file:
DLWriter	ext/fts2/fts2.c	/^typedef struct DLWriter {$/;"	s	file:
DLWriter	ext/fts2/fts2.c	/^} DLWriter;$/;"	t	typeref:struct:DLWriter	file:
DLWriter	tsrc/fts2.c	/^typedef struct DLWriter {$/;"	s	file:
DLWriter	tsrc/fts2.c	/^} DLWriter;$/;"	t	typeref:struct:DLWriter	file:
DL_DEFAULT	ext/fts1/fts1.c	231;"	d	file:
DL_DEFAULT	ext/fts2/fts2.c	371;"	d	file:
DL_DEFAULT	tsrc/fts1.c	231;"	d	file:
DL_DEFAULT	tsrc/fts2.c	371;"	d	file:
DL_DOCIDS	ext/fts1/fts1.c	/^  DL_DOCIDS,              \/* docids only *\/$/;"	e	enum:DocListType	file:
DL_DOCIDS	ext/fts1/fulltext.c	/^  DL_DOCIDS,              \/* docids only *\/$/;"	e	enum:DocListType	file:
DL_DOCIDS	ext/fts2/fts2.c	/^  DL_DOCIDS,              \/* docids only *\/$/;"	e	enum:DocListType	file:
DL_DOCIDS	tsrc/fts1.c	/^  DL_DOCIDS,              \/* docids only *\/$/;"	e	enum:DocListType	file:
DL_DOCIDS	tsrc/fts2.c	/^  DL_DOCIDS,              \/* docids only *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS	ext/fts1/fts1.c	/^  DL_POSITIONS,           \/* docids + positions *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS	ext/fts1/fulltext.c	/^  DL_POSITIONS,           \/* docids + positions *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS	ext/fts2/fts2.c	/^  DL_POSITIONS,           \/* docids + positions *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS	tsrc/fts1.c	/^  DL_POSITIONS,           \/* docids + positions *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS	tsrc/fts2.c	/^  DL_POSITIONS,           \/* docids + positions *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS_OFFSETS	ext/fts1/fts1.c	/^  DL_POSITIONS_OFFSETS    \/* docids + positions + offsets *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS_OFFSETS	ext/fts1/fulltext.c	/^  DL_POSITIONS_OFFSETS    \/* docids + positions + offsets *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS_OFFSETS	ext/fts2/fts2.c	/^  DL_POSITIONS_OFFSETS    \/* docids + positions + offsets *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS_OFFSETS	tsrc/fts1.c	/^  DL_POSITIONS_OFFSETS    \/* docids + positions + offsets *\/$/;"	e	enum:DocListType	file:
DL_POSITIONS_OFFSETS	tsrc/fts2.c	/^  DL_POSITIONS_OFFSETS    \/* docids + positions + offsets *\/$/;"	e	enum:DocListType	file:
DOCID_CMP	ext/fts3/fts3.c	2435;"	d	file:
DOCID_CMP	sqlite3.c	144188;"	d	file:
DOCID_CMP	tsrc/fts3.c	2435;"	d	file:
DOTLOCK_SUFFIX	sqlite3.c	31386;"	d	file:
DOTLOCK_SUFFIX	src/os_unix.c	2061;"	d	file:
DOTLOCK_SUFFIX	tsrc/os_unix.c	2061;"	d	file:
DO_OS_MALLOC_TEST	sqlite3.c	19756;"	d	file:
DO_OS_MALLOC_TEST	sqlite3.c	19763;"	d	file:
DO_OS_MALLOC_TEST	src/os.c	66;"	d	file:
DO_OS_MALLOC_TEST	src/os.c	73;"	d	file:
DO_OS_MALLOC_TEST	tsrc/os.c	66;"	d	file:
DO_OS_MALLOC_TEST	tsrc/os.c	73;"	d	file:
DataBuffer	ext/fts2/fts2.c	/^typedef struct DataBuffer {$/;"	s	file:
DataBuffer	ext/fts2/fts2.c	/^} DataBuffer;$/;"	t	typeref:struct:DataBuffer	file:
DataBuffer	tsrc/fts2.c	/^typedef struct DataBuffer {$/;"	s	file:
DataBuffer	tsrc/fts2.c	/^} DataBuffer;$/;"	t	typeref:struct:DataBuffer	file:
DateTime	sqlite3.c	/^struct DateTime {$/;"	s	file:
DateTime	sqlite3.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
DateTime	src/date.c	/^struct DateTime {$/;"	s	file:
DateTime	src/date.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
DateTime	tsrc/date.c	/^struct DateTime {$/;"	s	file:
DateTime	tsrc/date.c	/^typedef struct DateTime DateTime;$/;"	t	typeref:struct:DateTime	file:
Db	sqlite3.c	/^struct Db {$/;"	s	file:
Db	sqlite3.c	/^typedef struct Db Db;$/;"	t	typeref:struct:Db	file:
Db	src/sqliteInt.h	/^struct Db {$/;"	s
Db	src/sqliteInt.h	/^typedef struct Db Db;$/;"	t	typeref:struct:Db
Db	tsrc/sqliteInt.h	/^struct Db {$/;"	s
Db	tsrc/sqliteInt.h	/^typedef struct Db Db;$/;"	t	typeref:struct:Db
DbBusyHandler	src/tclsqlite.c	/^static int DbBusyHandler(void *cd, int nTries){$/;"	f	file:
DbBusyHandler	tsrc/tclsqlite.c	/^static int DbBusyHandler(void *cd, int nTries){$/;"	f	file:
DbClearProperty	sqlite3.c	13744;"	d	file:
DbClearProperty	src/sqliteInt.h	1145;"	d
DbClearProperty	tsrc/sqliteInt.h	1145;"	d
DbCommitHandler	src/tclsqlite.c	/^static int DbCommitHandler(void *cd){$/;"	f	file:
DbCommitHandler	tsrc/tclsqlite.c	/^static int DbCommitHandler(void *cd){$/;"	f	file:
DbDeleteCmd	src/tclsqlite.c	/^static void SQLITE_TCLAPI DbDeleteCmd(void *db){$/;"	f	file:
DbDeleteCmd	tsrc/tclsqlite.c	/^static void SQLITE_TCLAPI DbDeleteCmd(void *db){$/;"	f	file:
DbEvalContext	src/tclsqlite.c	/^struct DbEvalContext {$/;"	s	file:
DbEvalContext	src/tclsqlite.c	/^typedef struct DbEvalContext DbEvalContext;$/;"	t	typeref:struct:DbEvalContext	file:
DbEvalContext	tsrc/tclsqlite.c	/^struct DbEvalContext {$/;"	s	file:
DbEvalContext	tsrc/tclsqlite.c	/^typedef struct DbEvalContext DbEvalContext;$/;"	t	typeref:struct:DbEvalContext	file:
DbEvalNextCmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI DbEvalNextCmd($/;"	f	file:
DbEvalNextCmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI DbEvalNextCmd($/;"	f	file:
DbFixer	sqlite3.c	/^struct DbFixer {$/;"	s	file:
DbFixer	sqlite3.c	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer	file:
DbFixer	src/sqliteInt.h	/^struct DbFixer {$/;"	s
DbFixer	src/sqliteInt.h	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer
DbFixer	tsrc/sqliteInt.h	/^struct DbFixer {$/;"	s
DbFixer	tsrc/sqliteInt.h	/^typedef struct DbFixer DbFixer;$/;"	t	typeref:struct:DbFixer
DbHasAnyProperty	sqlite3.c	13742;"	d	file:
DbHasAnyProperty	src/sqliteInt.h	1143;"	d
DbHasAnyProperty	tsrc/sqliteInt.h	1143;"	d
DbHasProperty	sqlite3.c	13741;"	d	file:
DbHasProperty	src/sqliteInt.h	1142;"	d
DbHasProperty	tsrc/sqliteInt.h	1142;"	d
DbHookCmd	src/tclsqlite.c	/^static void DbHookCmd($/;"	f	file:
DbHookCmd	tsrc/tclsqlite.c	/^static void DbHookCmd($/;"	f	file:
DbMain	src/tclsqlite.c	/^static int SQLITE_TCLAPI DbMain($/;"	f	file:
DbMain	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI DbMain($/;"	f	file:
DbMaskAllZero	sqlite3.c	15446;"	d	file:
DbMaskAllZero	sqlite3.c	15453;"	d	file:
DbMaskAllZero	src/sqliteInt.h	2847;"	d
DbMaskAllZero	src/sqliteInt.h	2854;"	d
DbMaskAllZero	tsrc/sqliteInt.h	2847;"	d
DbMaskAllZero	tsrc/sqliteInt.h	2854;"	d
DbMaskNonZero	sqlite3.c	15447;"	d	file:
DbMaskNonZero	sqlite3.c	15454;"	d	file:
DbMaskNonZero	src/sqliteInt.h	2848;"	d
DbMaskNonZero	src/sqliteInt.h	2855;"	d
DbMaskNonZero	tsrc/sqliteInt.h	2848;"	d
DbMaskNonZero	tsrc/sqliteInt.h	2855;"	d
DbMaskSet	sqlite3.c	15445;"	d	file:
DbMaskSet	sqlite3.c	15452;"	d	file:
DbMaskSet	src/sqliteInt.h	2846;"	d
DbMaskSet	src/sqliteInt.h	2853;"	d
DbMaskSet	tsrc/sqliteInt.h	2846;"	d
DbMaskSet	tsrc/sqliteInt.h	2853;"	d
DbMaskTest	sqlite3.c	15443;"	d	file:
DbMaskTest	sqlite3.c	15450;"	d	file:
DbMaskTest	src/sqliteInt.h	2844;"	d
DbMaskTest	src/sqliteInt.h	2851;"	d
DbMaskTest	tsrc/sqliteInt.h	2844;"	d
DbMaskTest	tsrc/sqliteInt.h	2851;"	d
DbMaskZero	sqlite3.c	15444;"	d	file:
DbMaskZero	sqlite3.c	15451;"	d	file:
DbMaskZero	src/sqliteInt.h	2845;"	d
DbMaskZero	src/sqliteInt.h	2852;"	d
DbMaskZero	tsrc/sqliteInt.h	2845;"	d
DbMaskZero	tsrc/sqliteInt.h	2852;"	d
DbObjCmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI DbObjCmd($/;"	f	file:
DbObjCmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI DbObjCmd($/;"	f	file:
DbObjCmdAdaptor	src/tclsqlite.c	/^static int SQLITE_TCLAPI DbObjCmdAdaptor($/;"	f	file:
DbObjCmdAdaptor	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI DbObjCmdAdaptor($/;"	f	file:
DbPage	sqlite3.c	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr	file:
DbPage	src/pager.h	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr
DbPage	tsrc/pager.h	/^typedef struct PgHdr DbPage;$/;"	t	typeref:struct:PgHdr
DbPreUpdateHandler	src/tclsqlite.c	/^static void DbPreUpdateHandler($/;"	f	file:
DbPreUpdateHandler	tsrc/tclsqlite.c	/^static void DbPreUpdateHandler($/;"	f	file:
DbProfileHandler	src/tclsqlite.c	/^static void DbProfileHandler(void *cd, const char *zSql, sqlite_uint64 tm){$/;"	f	file:
DbProfileHandler	tsrc/tclsqlite.c	/^static void DbProfileHandler(void *cd, const char *zSql, sqlite_uint64 tm){$/;"	f	file:
DbProgressHandler	src/tclsqlite.c	/^static int DbProgressHandler(void *cd){$/;"	f	file:
DbProgressHandler	tsrc/tclsqlite.c	/^static int DbProgressHandler(void *cd){$/;"	f	file:
DbRollbackHandler	src/tclsqlite.c	/^static void DbRollbackHandler(void *clientData){$/;"	f	file:
DbRollbackHandler	tsrc/tclsqlite.c	/^static void DbRollbackHandler(void *clientData){$/;"	f	file:
DbSetProperty	sqlite3.c	13743;"	d	file:
DbSetProperty	src/sqliteInt.h	1144;"	d
DbSetProperty	tsrc/sqliteInt.h	1144;"	d
DbTraceHandler	src/tclsqlite.c	/^static void DbTraceHandler(void *cd, const char *zSql){$/;"	f	file:
DbTraceHandler	tsrc/tclsqlite.c	/^static void DbTraceHandler(void *cd, const char *zSql){$/;"	f	file:
DbTraceV2Handler	src/tclsqlite.c	/^static int DbTraceV2Handler($/;"	f	file:
DbTraceV2Handler	tsrc/tclsqlite.c	/^static int DbTraceV2Handler($/;"	f	file:
DbTransPostCmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI DbTransPostCmd($/;"	f	file:
DbTransPostCmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI DbTransPostCmd($/;"	f	file:
DbUnlockNotify	src/tclsqlite.c	/^static void DbUnlockNotify(void **apArg, int nArg){$/;"	f	file:
DbUnlockNotify	tsrc/tclsqlite.c	/^static void DbUnlockNotify(void **apArg, int nArg){$/;"	f	file:
DbUpdateHandler	src/tclsqlite.c	/^static void DbUpdateHandler($/;"	f	file:
DbUpdateHandler	tsrc/tclsqlite.c	/^static void DbUpdateHandler($/;"	f	file:
DbUseNre	src/tclsqlite.c	/^static int DbUseNre(void){$/;"	f	file:
DbUseNre	src/tclsqlite.c	1690;"	d	file:
DbUseNre	tsrc/tclsqlite.c	/^static int DbUseNre(void){$/;"	f	file:
DbUseNre	tsrc/tclsqlite.c	1690;"	d	file:
DbWalHandler	src/tclsqlite.c	/^static int DbWalHandler($/;"	f	file:
DbWalHandler	tsrc/tclsqlite.c	/^static int DbWalHandler($/;"	f	file:
Deephemeralize	sqlite3.c	77212;"	d	file:
Deephemeralize	src/vdbe.c	173;"	d	file:
Deephemeralize	tsrc/vdbe.c	173;"	d	file:
Delete	test/fuzz_common.tcl	/^proc Delete {} {$/;"	p
DemoFile	src/test_demovfs.c	/^struct DemoFile {$/;"	s	file:
DemoFile	src/test_demovfs.c	/^typedef struct DemoFile DemoFile;$/;"	t	typeref:struct:DemoFile	file:
DevsymGlobal	src/test_devsym.c	/^struct DevsymGlobal {$/;"	s	file:
DistinctCtx	sqlite3.c	/^struct DistinctCtx {$/;"	s	file:
DistinctCtx	sqlite3.c	/^typedef struct DistinctCtx DistinctCtx;$/;"	t	typeref:struct:DistinctCtx	file:
DistinctCtx	src/select.c	/^struct DistinctCtx {$/;"	s	file:
DistinctCtx	src/select.c	/^typedef struct DistinctCtx DistinctCtx;$/;"	t	typeref:struct:DistinctCtx	file:
DistinctCtx	tsrc/select.c	/^struct DistinctCtx {$/;"	s	file:
DistinctCtx	tsrc/select.c	/^typedef struct DistinctCtx DistinctCtx;$/;"	t	typeref:struct:DistinctCtx	file:
DocList	ext/fts1/fts1.c	/^typedef struct DocList {$/;"	s	file:
DocList	ext/fts1/fts1.c	/^} DocList;$/;"	t	typeref:struct:DocList	file:
DocList	ext/fts1/fulltext.c	/^typedef struct DocList {$/;"	s	file:
DocList	ext/fts1/fulltext.c	/^} DocList;$/;"	t	typeref:struct:DocList	file:
DocList	tsrc/fts1.c	/^typedef struct DocList {$/;"	s	file:
DocList	tsrc/fts1.c	/^} DocList;$/;"	t	typeref:struct:DocList	file:
DocListMerge	ext/fts1/fulltext.c	/^typedef struct DocListMerge {$/;"	s	file:
DocListMerge	ext/fts1/fulltext.c	/^} DocListMerge;$/;"	t	typeref:struct:DocListMerge	file:
DocListReader	ext/fts1/fts1.c	/^typedef struct DocListReader {$/;"	s	file:
DocListReader	ext/fts1/fts1.c	/^} DocListReader;$/;"	t	typeref:struct:DocListReader	file:
DocListReader	ext/fts1/fulltext.c	/^typedef struct DocListReader {$/;"	s	file:
DocListReader	ext/fts1/fulltext.c	/^} DocListReader;$/;"	t	typeref:struct:DocListReader	file:
DocListReader	tsrc/fts1.c	/^typedef struct DocListReader {$/;"	s	file:
DocListReader	tsrc/fts1.c	/^} DocListReader;$/;"	t	typeref:struct:DocListReader	file:
DocListType	ext/fts1/fts1.c	/^typedef enum DocListType {$/;"	g	file:
DocListType	ext/fts1/fts1.c	/^} DocListType;$/;"	t	typeref:enum:DocListType	file:
DocListType	ext/fts1/fulltext.c	/^typedef enum DocListType {$/;"	g	file:
DocListType	ext/fts1/fulltext.c	/^} DocListType;$/;"	t	typeref:enum:DocListType	file:
DocListType	ext/fts2/fts2.c	/^typedef enum DocListType {$/;"	g	file:
DocListType	ext/fts2/fts2.c	/^} DocListType;$/;"	t	typeref:enum:DocListType	file:
DocListType	tsrc/fts1.c	/^typedef enum DocListType {$/;"	g	file:
DocListType	tsrc/fts1.c	/^} DocListType;$/;"	t	typeref:enum:DocListType	file:
DocListType	tsrc/fts2.c	/^typedef enum DocListType {$/;"	g	file:
DocListType	tsrc/fts2.c	/^} DocListType;$/;"	t	typeref:enum:DocListType	file:
DownloadCanceled	tool/GetFile.cs	/^        DownloadCanceled = 7,$/;"	e	enum:GetFile.ExitCode	file:
DownloadError	tool/GetFile.cs	/^        DownloadError = 8$/;"	e	enum:GetFile.ExitCode	file:
DownloadFileCompleted	tool/GetFile.cs	/^        private static void DownloadFileCompleted($/;"	m	class:GetFile.Program	file:
DownloadProgressChanged	tool/GetFile.cs	/^        private static void DownloadProgressChanged($/;"	m	class:GetFile.Program	file:
DropTable	test/fuzz_common.tcl	/^proc DropTable {} {$/;"	p
DropView	test/fuzz_common.tcl	/^proc DropView {} {$/;"	p
EIGHT_BYTE_ALIGNMENT	sqlite3.c	11761;"	d	file:
EIGHT_BYTE_ALIGNMENT	sqlite3.c	11763;"	d	file:
EIGHT_BYTE_ALIGNMENT	src/sqliteInt.h	827;"	d
EIGHT_BYTE_ALIGNMENT	src/sqliteInt.h	829;"	d
EIGHT_BYTE_ALIGNMENT	tsrc/sqliteInt.h	827;"	d
EIGHT_BYTE_ALIGNMENT	tsrc/sqliteInt.h	829;"	d
ENC	sqlite3.c	13993;"	d	file:
ENC	src/sqliteInt.h	1394;"	d
ENC	tsrc/sqliteInt.h	1394;"	d
END_TIMER	shell.c	236;"	d	file:
END_TIMER	shell.c	313;"	d	file:
END_TIMER	shell.c	318;"	d	file:
END_TIMER	src/shell.c	236;"	d	file:
END_TIMER	src/shell.c	313;"	d	file:
END_TIMER	src/shell.c	318;"	d	file:
END_TIMER	tsrc/shell.c	236;"	d	file:
END_TIMER	tsrc/shell.c	313;"	d	file:
END_TIMER	tsrc/shell.c	318;"	d	file:
ENVIRONMENT_VARIABLE1_NAME	src/test_sqllog.c	95;"	d	file:
ENVIRONMENT_VARIABLE2_NAME	src/test_sqllog.c	96;"	d	file:
ENVIRONMENT_VARIABLE3_NAME	src/test_sqllog.c	97;"	d	file:
EP_Agg	sqlite3.c	14915;"	d	file:
EP_Agg	src/sqliteInt.h	2316;"	d
EP_Agg	tsrc/sqliteInt.h	2316;"	d
EP_Alias	sqlite3.c	14936;"	d	file:
EP_Alias	src/sqliteInt.h	2337;"	d
EP_Alias	tsrc/sqliteInt.h	2337;"	d
EP_CanBeNull	sqlite3.c	14934;"	d	file:
EP_CanBeNull	src/sqliteInt.h	2335;"	d
EP_CanBeNull	tsrc/sqliteInt.h	2335;"	d
EP_Collate	sqlite3.c	14922;"	d	file:
EP_Collate	src/sqliteInt.h	2323;"	d
EP_Collate	tsrc/sqliteInt.h	2323;"	d
EP_ConstFunc	sqlite3.c	14933;"	d	file:
EP_ConstFunc	src/sqliteInt.h	2334;"	d
EP_ConstFunc	tsrc/sqliteInt.h	2334;"	d
EP_DblQuoted	sqlite3.c	14920;"	d	file:
EP_DblQuoted	src/sqliteInt.h	2321;"	d
EP_DblQuoted	tsrc/sqliteInt.h	2321;"	d
EP_Distinct	sqlite3.c	14918;"	d	file:
EP_Distinct	src/sqliteInt.h	2319;"	d
EP_Distinct	tsrc/sqliteInt.h	2319;"	d
EP_Error	sqlite3.c	14917;"	d	file:
EP_Error	src/sqliteInt.h	2318;"	d
EP_Error	tsrc/sqliteInt.h	2318;"	d
EP_FromJoin	sqlite3.c	14914;"	d	file:
EP_FromJoin	src/sqliteInt.h	2315;"	d
EP_FromJoin	tsrc/sqliteInt.h	2315;"	d
EP_Generic	sqlite3.c	14923;"	d	file:
EP_Generic	src/sqliteInt.h	2324;"	d
EP_Generic	tsrc/sqliteInt.h	2324;"	d
EP_InfixFunc	sqlite3.c	14921;"	d	file:
EP_InfixFunc	src/sqliteInt.h	2322;"	d
EP_InfixFunc	tsrc/sqliteInt.h	2322;"	d
EP_IntValue	sqlite3.c	14924;"	d	file:
EP_IntValue	src/sqliteInt.h	2325;"	d
EP_IntValue	tsrc/sqliteInt.h	2325;"	d
EP_MemToken	sqlite3.c	14930;"	d	file:
EP_MemToken	src/sqliteInt.h	2331;"	d
EP_MemToken	tsrc/sqliteInt.h	2331;"	d
EP_NoReduce	sqlite3.c	14931;"	d	file:
EP_NoReduce	src/sqliteInt.h	2332;"	d
EP_NoReduce	tsrc/sqliteInt.h	2332;"	d
EP_Propagate	sqlite3.c	14941;"	d	file:
EP_Propagate	src/sqliteInt.h	2342;"	d
EP_Propagate	tsrc/sqliteInt.h	2342;"	d
EP_Reduced	sqlite3.c	14927;"	d	file:
EP_Reduced	src/sqliteInt.h	2328;"	d
EP_Reduced	tsrc/sqliteInt.h	2328;"	d
EP_Resolved	sqlite3.c	14916;"	d	file:
EP_Resolved	src/sqliteInt.h	2317;"	d
EP_Resolved	tsrc/sqliteInt.h	2317;"	d
EP_Skip	sqlite3.c	14926;"	d	file:
EP_Skip	src/sqliteInt.h	2327;"	d
EP_Skip	tsrc/sqliteInt.h	2327;"	d
EP_Static	sqlite3.c	14929;"	d	file:
EP_Static	src/sqliteInt.h	2330;"	d
EP_Static	tsrc/sqliteInt.h	2330;"	d
EP_Subquery	sqlite3.c	14935;"	d	file:
EP_Subquery	src/sqliteInt.h	2336;"	d
EP_Subquery	tsrc/sqliteInt.h	2336;"	d
EP_TokenOnly	sqlite3.c	14928;"	d	file:
EP_TokenOnly	src/sqliteInt.h	2329;"	d
EP_TokenOnly	tsrc/sqliteInt.h	2329;"	d
EP_Unlikely	sqlite3.c	14932;"	d	file:
EP_Unlikely	src/sqliteInt.h	2333;"	d
EP_Unlikely	tsrc/sqliteInt.h	2333;"	d
EP_VarSelect	sqlite3.c	14919;"	d	file:
EP_VarSelect	src/sqliteInt.h	2320;"	d
EP_VarSelect	tsrc/sqliteInt.h	2320;"	d
EP_xIsSelect	sqlite3.c	14925;"	d	file:
EP_xIsSelect	src/sqliteInt.h	2326;"	d
EP_xIsSelect	tsrc/sqliteInt.h	2326;"	d
ERROR	tool/lemon.c	/^  ERROR,$/;"	e	enum:e_action	file:
EXCLUSIVE_LOCK	sqlite3.c	13459;"	d	file:
EXCLUSIVE_LOCK	src/os.h	89;"	d
EXCLUSIVE_LOCK	tsrc/os.h	89;"	d
EXPLAIN	tool/mkkeywordhash.c	91;"	d	file:
EXPLAIN	tool/mkkeywordhash.c	93;"	d	file:
EXPRDUP_REDUCE	sqlite3.c	14975;"	d	file:
EXPRDUP_REDUCE	src/sqliteInt.h	2376;"	d
EXPRDUP_REDUCE	tsrc/sqliteInt.h	2376;"	d
EXPR_FULLSIZE	sqlite3.c	14967;"	d	file:
EXPR_FULLSIZE	src/sqliteInt.h	2368;"	d
EXPR_FULLSIZE	tsrc/sqliteInt.h	2368;"	d
EXPR_REDUCEDSIZE	sqlite3.c	14968;"	d	file:
EXPR_REDUCEDSIZE	src/sqliteInt.h	2369;"	d
EXPR_REDUCEDSIZE	tsrc/sqliteInt.h	2369;"	d
EXPR_TOKENONLYSIZE	sqlite3.c	14969;"	d	file:
EXPR_TOKENONLYSIZE	src/sqliteInt.h	2370;"	d
EXPR_TOKENONLYSIZE	tsrc/sqliteInt.h	2370;"	d
EXTRA_SIZE	sqlite3.c	57451;"	d	file:
EXTRA_SIZE	src/btreeInt.h	309;"	d
EXTRA_SIZE	tsrc/btreeInt.h	309;"	d
EchoModule	src/test8.c	/^struct EchoModule {$/;"	s	file:
EchoModule	src/test8.c	/^typedef struct EchoModule EchoModule;$/;"	t	typeref:struct:EchoModule	file:
EditDist3Config	ext/misc/spellfix.c	/^struct EditDist3Config {$/;"	s	file:
EditDist3Config	ext/misc/spellfix.c	/^typedef struct EditDist3Config EditDist3Config;$/;"	t	typeref:struct:EditDist3Config	file:
EditDist3Cost	ext/misc/spellfix.c	/^struct EditDist3Cost {$/;"	s	file:
EditDist3Cost	ext/misc/spellfix.c	/^typedef struct EditDist3Cost EditDist3Cost;$/;"	t	typeref:struct:EditDist3Cost	file:
EditDist3From	ext/misc/spellfix.c	/^struct EditDist3From {$/;"	s	file:
EditDist3From	ext/misc/spellfix.c	/^typedef struct EditDist3From EditDist3From;$/;"	t	typeref:struct:EditDist3From	file:
EditDist3FromString	ext/misc/spellfix.c	/^struct EditDist3FromString {$/;"	s	file:
EditDist3FromString	ext/misc/spellfix.c	/^typedef struct EditDist3FromString EditDist3FromString;$/;"	t	typeref:struct:EditDist3FromString	file:
EditDist3Lang	ext/misc/spellfix.c	/^struct EditDist3Lang {$/;"	s	file:
EditDist3Lang	ext/misc/spellfix.c	/^typedef struct EditDist3Lang EditDist3Lang;$/;"	t	typeref:struct:EditDist3Lang	file:
EditDist3Point	ext/misc/spellfix.c	/^typedef struct EditDist3Point EditDist3Point;$/;"	t	typeref:struct:EditDist3Point	file:
EditDist3To	ext/misc/spellfix.c	/^struct EditDist3To {$/;"	s	file:
EditDist3To	ext/misc/spellfix.c	/^typedef struct EditDist3To EditDist3To;$/;"	t	typeref:struct:EditDist3To	file:
EditDist3ToString	ext/misc/spellfix.c	/^struct EditDist3ToString {$/;"	s	file:
EditDist3ToString	ext/misc/spellfix.c	/^typedef struct EditDist3ToString EditDist3ToString;$/;"	t	typeref:struct:EditDist3ToString	file:
EntropyGatherer	sqlite3.c	/^struct EntropyGatherer {$/;"	s	file:
EntropyGatherer	sqlite3.c	/^typedef struct EntropyGatherer EntropyGatherer;$/;"	t	typeref:struct:EntropyGatherer	file:
EntropyGatherer	src/os_win.c	/^struct EntropyGatherer {$/;"	s	file:
EntropyGatherer	src/os_win.c	/^typedef struct EntropyGatherer EntropyGatherer;$/;"	t	typeref:struct:EntropyGatherer	file:
EntropyGatherer	tsrc/os_win.c	/^struct EntropyGatherer {$/;"	s	file:
EntropyGatherer	tsrc/os_win.c	/^typedef struct EntropyGatherer EntropyGatherer;$/;"	t	typeref:struct:EntropyGatherer	file:
Err	autoconf/tea/win/nmakehlp.c	/^pipeinfo Err = {INVALID_HANDLE_VALUE, '\\0'};$/;"	v
Error	test/threadtest3.c	/^struct Error {$/;"	s	file:
Error	test/threadtest3.c	/^typedef struct Error Error;$/;"	t	typeref:struct:Error	file:
Error	tool/GetFile.cs	/^        private static void Error($/;"	m	class:GetFile.Program	file:
Error	tool/Replace.cs	/^        private static void Error($/;"	m	class:Replace.Replace	file:
ErrorMsg	tool/lemon.c	/^void ErrorMsg(const char *filename, int lineno, const char *format, ...){$/;"	f
EvalEvent	src/test_thread.c	/^struct EvalEvent {$/;"	s	file:
EvalEvent	src/test_thread.c	/^typedef struct EvalEvent EvalEvent;$/;"	t	typeref:struct:EvalEvent	file:
EvalResult	ext/misc/eval.c	/^struct EvalResult {$/;"	s	file:
EvalResult	tool/fuzzershell.c	/^struct EvalResult {$/;"	s	file:
Exception	tool/GetFile.cs	/^        Exception = 6,$/;"	e	enum:GetFile.ExitCode	file:
Exception	tool/Replace.cs	/^        Exception = 4$/;"	e	enum:Replace.ExitCode	file:
Exit	test/threadtest1.c	/^static void Exit(int rc){$/;"	f	file:
ExitCode	tool/GetFile.cs	/^    internal enum ExitCode$/;"	g	namespace:GetFile
ExitCode	tool/Replace.cs	/^    internal enum ExitCode$/;"	g	namespace:Replace
ExpandBlob	sqlite3.c	18177;"	d	file:
ExpandBlob	sqlite3.c	18180;"	d	file:
ExpandBlob	src/vdbeInt.h	555;"	d
ExpandBlob	src/vdbeInt.h	558;"	d
ExpandBlob	tsrc/vdbeInt.h	555;"	d
ExpandBlob	tsrc/vdbeInt.h	558;"	d
Explain	sqlite3.c	/^struct Explain {$/;"	s	file:
Explain	sqlite3.c	/^typedef struct Explain Explain;$/;"	t	typeref:struct:Explain	file:
Explain	src/vdbeInt.h	/^struct Explain {$/;"	s
Explain	src/vdbeInt.h	/^typedef struct Explain Explain;$/;"	t	typeref:struct:Explain
Explain	tsrc/vdbeInt.h	/^struct Explain {$/;"	s
Explain	tsrc/vdbeInt.h	/^typedef struct Explain Explain;$/;"	t	typeref:struct:Explain
Expr	sqlite3.c	/^struct Expr {$/;"	s	file:
Expr	sqlite3.c	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr	file:
Expr	src/sqliteInt.h	/^struct Expr {$/;"	s
Expr	src/sqliteInt.h	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr
Expr	test/fuzz_common.tcl	/^proc Expr { {c {}} } {$/;"	p
Expr	tsrc/sqliteInt.h	/^struct Expr {$/;"	s
Expr	tsrc/sqliteInt.h	/^typedef struct Expr Expr;$/;"	t	typeref:struct:Expr
ExprClearProperty	sqlite3.c	14950;"	d	file:
ExprClearProperty	src/sqliteInt.h	2351;"	d
ExprClearProperty	tsrc/sqliteInt.h	2351;"	d
ExprHasAllProperty	sqlite3.c	14948;"	d	file:
ExprHasAllProperty	src/sqliteInt.h	2349;"	d
ExprHasAllProperty	tsrc/sqliteInt.h	2349;"	d
ExprHasProperty	sqlite3.c	14947;"	d	file:
ExprHasProperty	src/sqliteInt.h	2348;"	d
ExprHasProperty	tsrc/sqliteInt.h	2348;"	d
ExprList	sqlite3.c	/^struct ExprList {$/;"	s	file:
ExprList	sqlite3.c	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList	file:
ExprList	src/sqliteInt.h	/^struct ExprList {$/;"	s
ExprList	src/sqliteInt.h	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList
ExprList	tsrc/sqliteInt.h	/^struct ExprList {$/;"	s
ExprList	tsrc/sqliteInt.h	/^typedef struct ExprList ExprList;$/;"	t	typeref:struct:ExprList
ExprList_item	sqlite3.c	/^  struct ExprList_item { \/* For each expression in the list *\/$/;"	s	struct:ExprList	file:
ExprList_item	src/sqliteInt.h	/^  struct ExprList_item { \/* For each expression in the list *\/$/;"	s	struct:ExprList
ExprList_item	tsrc/sqliteInt.h	/^  struct ExprList_item { \/* For each expression in the list *\/$/;"	s	struct:ExprList
ExprSetProperty	sqlite3.c	14949;"	d	file:
ExprSetProperty	src/sqliteInt.h	2350;"	d
ExprSetProperty	tsrc/sqliteInt.h	2350;"	d
ExprSetVVAProperty	sqlite3.c	14957;"	d	file:
ExprSetVVAProperty	sqlite3.c	14959;"	d	file:
ExprSetVVAProperty	src/sqliteInt.h	2358;"	d
ExprSetVVAProperty	src/sqliteInt.h	2360;"	d
ExprSetVVAProperty	tsrc/sqliteInt.h	2358;"	d
ExprSetVVAProperty	tsrc/sqliteInt.h	2360;"	d
ExprSpan	sqlite3.c	/^struct ExprSpan {$/;"	s	file:
ExprSpan	sqlite3.c	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan	file:
ExprSpan	src/sqliteInt.h	/^struct ExprSpan {$/;"	s
ExprSpan	src/sqliteInt.h	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan
ExprSpan	tsrc/sqliteInt.h	/^struct ExprSpan {$/;"	s
ExprSpan	tsrc/sqliteInt.h	/^typedef struct ExprSpan ExprSpan;$/;"	t	typeref:struct:ExprSpan
F1	src/tclsqlite.c	3571;"	d	file:
F1	test/threadtest3.c	153;"	d	file:
F1	tsrc/tclsqlite.c	3571;"	d	file:
F2	src/tclsqlite.c	3572;"	d	file:
F2	test/threadtest3.c	154;"	d	file:
F2	tsrc/tclsqlite.c	3572;"	d	file:
F3	src/tclsqlite.c	3573;"	d	file:
F3	test/threadtest3.c	155;"	d	file:
F3	tsrc/tclsqlite.c	3573;"	d	file:
F4	src/tclsqlite.c	3574;"	d	file:
F4	test/threadtest3.c	156;"	d	file:
F4	tsrc/tclsqlite.c	3574;"	d	file:
F5tApi	ext/fts5/fts5_tcl.c	/^struct F5tApi {$/;"	s	file:
F5tApi	ext/fts5/fts5_tcl.c	/^typedef struct F5tApi F5tApi;$/;"	t	typeref:struct:F5tApi	file:
F5tAuxData	ext/fts5/fts5_tcl.c	/^struct F5tAuxData {$/;"	s	file:
F5tAuxData	ext/fts5/fts5_tcl.c	/^typedef struct F5tAuxData F5tAuxData;$/;"	t	typeref:struct:F5tAuxData	file:
F5tFunction	ext/fts5/fts5_tcl.c	/^struct F5tFunction {$/;"	s	file:
F5tFunction	ext/fts5/fts5_tcl.c	/^typedef struct F5tFunction F5tFunction;$/;"	t	typeref:struct:F5tFunction	file:
F5tTokenizeCtx	ext/fts5/fts5_tcl.c	/^struct F5tTokenizeCtx {$/;"	s	file:
F5tTokenizeCtx	ext/fts5/fts5_tcl.c	/^typedef struct F5tTokenizeCtx F5tTokenizeCtx;$/;"	t	typeref:struct:F5tTokenizeCtx	file:
F5tTokenizerCb	ext/fts5/fts5_tcl.c	/^typedef struct F5tTokenizerCb F5tTokenizerCb;$/;"	t	typeref:struct:F5tTokenizerCb	file:
F5tTokenizerContext	ext/fts5/fts5_tcl.c	/^struct F5tTokenizerContext {$/;"	s	file:
F5tTokenizerContext	ext/fts5/fts5_tcl.c	/^typedef struct F5tTokenizerContext F5tTokenizerContext;$/;"	t	typeref:struct:F5tTokenizerContext	file:
F5tTokenizerInstance	ext/fts5/fts5_tcl.c	/^struct F5tTokenizerInstance {$/;"	s	file:
F5tTokenizerInstance	ext/fts5/fts5_tcl.c	/^typedef struct F5tTokenizerInstance F5tTokenizerInstance;$/;"	t	typeref:struct:F5tTokenizerInstance	file:
F5tTokenizerModule	ext/fts5/fts5_tcl.c	/^struct F5tTokenizerModule {$/;"	s	file:
F5tTokenizerModule	ext/fts5/fts5_tcl.c	/^typedef struct F5tTokenizerModule F5tTokenizerModule;$/;"	t	typeref:struct:F5tTokenizerModule	file:
FAULT_INJECT_NONE	src/test_vfs.c	65;"	d	file:
FAULT_INJECT_PERSISTENT	src/test_vfs.c	67;"	d	file:
FAULT_INJECT_TRANSIENT	src/test_vfs.c	66;"	d	file:
FILEHANDLEID	sqlite3.c	46409;"	d	file:
FILEHANDLEID	src/pager.c	132;"	d	file:
FILEHANDLEID	tsrc/pager.c	132;"	d	file:
FILE_ATTRIBUTE_MASK	sqlite3.c	37352;"	d	file:
FILE_ATTRIBUTE_MASK	src/os_win.c	236;"	d	file:
FILE_ATTRIBUTE_MASK	tsrc/os_win.c	236;"	d	file:
FILE_FLAG_MASK	sqlite3.c	37348;"	d	file:
FILE_FLAG_MASK	src/os_win.c	232;"	d	file:
FILE_FLAG_MASK	tsrc/os_win.c	232;"	d	file:
FINAL_INS_COST_DIV	ext/misc/spellfix.c	305;"	d	file:
FKEY	tool/mkkeywordhash.c	96;"	d	file:
FKEY	tool/mkkeywordhash.c	98;"	d	file:
FKey	sqlite3.c	/^struct FKey {$/;"	s	file:
FKey	sqlite3.c	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey	file:
FKey	src/sqliteInt.h	/^struct FKey {$/;"	s
FKey	src/sqliteInt.h	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey
FKey	tsrc/sqliteInt.h	/^struct FKey {$/;"	s
FKey	tsrc/sqliteInt.h	/^typedef struct FKey FKey;$/;"	t	typeref:struct:FKey
FLAG_INTERN	sqlite3.c	24721;"	d	file:
FLAG_INTERN	src/printf.c	62;"	d	file:
FLAG_INTERN	tsrc/printf.c	62;"	d	file:
FLAG_SIGNED	sqlite3.c	24720;"	d	file:
FLAG_SIGNED	src/printf.c	61;"	d	file:
FLAG_SIGNED	tsrc/printf.c	61;"	d	file:
FLAG_STRING	sqlite3.c	24722;"	d	file:
FLAG_STRING	src/printf.c	63;"	d	file:
FLAG_STRING	tsrc/printf.c	63;"	d	file:
FOREGUARD	sqlite3.c	20627;"	d	file:
FOREGUARD	src/mem2.c	68;"	d	file:
FOREGUARD	tsrc/mem2.c	68;"	d	file:
FOUR_BYTE_INT	sqlite3.c	73671;"	d	file:
FOUR_BYTE_INT	src/vdbeaux.c	3313;"	d	file:
FOUR_BYTE_INT	tsrc/vdbeaux.c	3313;"	d	file:
FOUR_BYTE_UINT	sqlite3.c	73670;"	d	file:
FOUR_BYTE_UINT	src/vdbeaux.c	3312;"	d	file:
FOUR_BYTE_UINT	tsrc/vdbeaux.c	3312;"	d	file:
FS_VFS_NAME	src/test_onefile.c	95;"	d	file:
FTS1_HASH_BINARY	ext/fts1/fts1_hash.h	71;"	d
FTS1_HASH_BINARY	tsrc/fts1_hash.h	71;"	d
FTS1_HASH_STRING	ext/fts1/fts1_hash.h	70;"	d
FTS1_HASH_STRING	tsrc/fts1_hash.h	70;"	d
FTS1_ROTOR_MASK	ext/fts1/fts1.c	2205;"	d	file:
FTS1_ROTOR_MASK	tsrc/fts1.c	2205;"	d	file:
FTS1_ROTOR_SZ	ext/fts1/fts1.c	2204;"	d	file:
FTS1_ROTOR_SZ	tsrc/fts1.c	2204;"	d	file:
FTS2_HASH_BINARY	ext/fts2/fts2_hash.h	69;"	d
FTS2_HASH_BINARY	tsrc/fts2_hash.h	69;"	d
FTS2_HASH_STRING	ext/fts2/fts2_hash.h	68;"	d
FTS2_HASH_STRING	tsrc/fts2_hash.h	68;"	d
FTS2_ROTOR_MASK	ext/fts2/fts2.c	3071;"	d	file:
FTS2_ROTOR_MASK	tsrc/fts2.c	3071;"	d	file:
FTS2_ROTOR_SZ	ext/fts2/fts2.c	3070;"	d	file:
FTS2_ROTOR_SZ	tsrc/fts2.c	3070;"	d	file:
FTS3_AUX_SCHEMA	ext/fts3/fts3_aux.c	49;"	d	file:
FTS3_AUX_SCHEMA	sqlite3.c	147729;"	d	file:
FTS3_AUX_SCHEMA	tsrc/fts3_aux.c	49;"	d	file:
FTS3_DOCID_SEARCH	ext/fts3/fts3Int.h	341;"	d
FTS3_DOCID_SEARCH	sqlite3.c	141765;"	d	file:
FTS3_DOCID_SEARCH	tsrc/fts3Int.h	341;"	d
FTS3_EVAL_FILTER	ext/fts3/fts3Int.h	321;"	d
FTS3_EVAL_FILTER	sqlite3.c	141745;"	d	file:
FTS3_EVAL_FILTER	tsrc/fts3Int.h	321;"	d
FTS3_EVAL_MATCHINFO	ext/fts3/fts3Int.h	323;"	d
FTS3_EVAL_MATCHINFO	sqlite3.c	141747;"	d	file:
FTS3_EVAL_MATCHINFO	tsrc/fts3Int.h	323;"	d
FTS3_EVAL_NEXT	ext/fts3/fts3Int.h	322;"	d
FTS3_EVAL_NEXT	sqlite3.c	141746;"	d	file:
FTS3_EVAL_NEXT	tsrc/fts3Int.h	322;"	d
FTS3_FULLSCAN_SEARCH	ext/fts3/fts3Int.h	340;"	d
FTS3_FULLSCAN_SEARCH	sqlite3.c	141764;"	d	file:
FTS3_FULLSCAN_SEARCH	tsrc/fts3Int.h	340;"	d
FTS3_FULLTEXT_SEARCH	ext/fts3/fts3Int.h	342;"	d
FTS3_FULLTEXT_SEARCH	sqlite3.c	141766;"	d	file:
FTS3_FULLTEXT_SEARCH	tsrc/fts3Int.h	342;"	d
FTS3_HASH_BINARY	ext/fts3/fts3_hash.h	69;"	d
FTS3_HASH_BINARY	sqlite3.c	141424;"	d	file:
FTS3_HASH_BINARY	tsrc/fts3_hash.h	69;"	d
FTS3_HASH_STRING	ext/fts3/fts3_hash.h	68;"	d
FTS3_HASH_STRING	sqlite3.c	141423;"	d	file:
FTS3_HASH_STRING	tsrc/fts3_hash.h	68;"	d
FTS3_HAVE_DOCID_GE	ext/fts3/fts3Int.h	351;"	d
FTS3_HAVE_DOCID_GE	sqlite3.c	141775;"	d	file:
FTS3_HAVE_DOCID_GE	tsrc/fts3Int.h	351;"	d
FTS3_HAVE_DOCID_LE	ext/fts3/fts3Int.h	352;"	d
FTS3_HAVE_DOCID_LE	sqlite3.c	141776;"	d	file:
FTS3_HAVE_DOCID_LE	tsrc/fts3Int.h	352;"	d
FTS3_HAVE_LANGID	ext/fts3/fts3Int.h	350;"	d
FTS3_HAVE_LANGID	sqlite3.c	141774;"	d	file:
FTS3_HAVE_LANGID	tsrc/fts3Int.h	350;"	d
FTS3_MATCHINFO_AVGLENGTH	ext/fts3/fts3_snippet.c	26;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	sqlite3.c	157516;"	d	file:
FTS3_MATCHINFO_AVGLENGTH	tsrc/fts3_snippet.c	26;"	d	file:
FTS3_MATCHINFO_DEFAULT	ext/fts3/fts3_snippet.c	36;"	d	file:
FTS3_MATCHINFO_DEFAULT	sqlite3.c	157526;"	d	file:
FTS3_MATCHINFO_DEFAULT	tsrc/fts3_snippet.c	36;"	d	file:
FTS3_MATCHINFO_HITS	ext/fts3/fts3_snippet.c	29;"	d	file:
FTS3_MATCHINFO_HITS	sqlite3.c	157519;"	d	file:
FTS3_MATCHINFO_HITS	tsrc/fts3_snippet.c	29;"	d	file:
FTS3_MATCHINFO_LCS	ext/fts3/fts3_snippet.c	28;"	d	file:
FTS3_MATCHINFO_LCS	sqlite3.c	157518;"	d	file:
FTS3_MATCHINFO_LCS	tsrc/fts3_snippet.c	28;"	d	file:
FTS3_MATCHINFO_LENGTH	ext/fts3/fts3_snippet.c	27;"	d	file:
FTS3_MATCHINFO_LENGTH	sqlite3.c	157517;"	d	file:
FTS3_MATCHINFO_LENGTH	tsrc/fts3_snippet.c	27;"	d	file:
FTS3_MATCHINFO_LHITS	ext/fts3/fts3_snippet.c	30;"	d	file:
FTS3_MATCHINFO_LHITS	sqlite3.c	157520;"	d	file:
FTS3_MATCHINFO_LHITS	tsrc/fts3_snippet.c	30;"	d	file:
FTS3_MATCHINFO_LHITS_BM	ext/fts3/fts3_snippet.c	31;"	d	file:
FTS3_MATCHINFO_LHITS_BM	sqlite3.c	157521;"	d	file:
FTS3_MATCHINFO_LHITS_BM	tsrc/fts3_snippet.c	31;"	d	file:
FTS3_MATCHINFO_NCOL	ext/fts3/fts3_snippet.c	24;"	d	file:
FTS3_MATCHINFO_NCOL	sqlite3.c	157514;"	d	file:
FTS3_MATCHINFO_NCOL	tsrc/fts3_snippet.c	24;"	d	file:
FTS3_MATCHINFO_NDOC	ext/fts3/fts3_snippet.c	25;"	d	file:
FTS3_MATCHINFO_NDOC	sqlite3.c	157515;"	d	file:
FTS3_MATCHINFO_NDOC	tsrc/fts3_snippet.c	25;"	d	file:
FTS3_MATCHINFO_NPHRASE	ext/fts3/fts3_snippet.c	23;"	d	file:
FTS3_MATCHINFO_NPHRASE	sqlite3.c	157513;"	d	file:
FTS3_MATCHINFO_NPHRASE	tsrc/fts3_snippet.c	23;"	d	file:
FTS3_MAX_PENDING_DATA	ext/fts3/fts3Int.h	75;"	d
FTS3_MAX_PENDING_DATA	sqlite3.c	141499;"	d	file:
FTS3_MAX_PENDING_DATA	tsrc/fts3Int.h	75;"	d
FTS3_MERGE_COUNT	ext/fts3/fts3Int.h	65;"	d
FTS3_MERGE_COUNT	sqlite3.c	141489;"	d	file:
FTS3_MERGE_COUNT	tsrc/fts3Int.h	65;"	d
FTS3_NODE_CHUNKSIZE	ext/fts3/fts3_write.c	62;"	d	file:
FTS3_NODE_CHUNKSIZE	ext/fts3/fts3_write.c	65;"	d	file:
FTS3_NODE_CHUNKSIZE	sqlite3.c	151871;"	d	file:
FTS3_NODE_CHUNKSIZE	sqlite3.c	151874;"	d	file:
FTS3_NODE_CHUNKSIZE	tsrc/fts3_write.c	62;"	d	file:
FTS3_NODE_CHUNKSIZE	tsrc/fts3_write.c	65;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	ext/fts3/fts3_write.c	63;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	ext/fts3/fts3_write.c	66;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	sqlite3.c	151872;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	sqlite3.c	151875;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	tsrc/fts3_write.c	63;"	d	file:
FTS3_NODE_CHUNK_THRESHOLD	tsrc/fts3_write.c	66;"	d	file:
FTS3_NODE_PADDING	ext/fts3/fts3_write.c	40;"	d	file:
FTS3_NODE_PADDING	sqlite3.c	151849;"	d	file:
FTS3_NODE_PADDING	tsrc/fts3_write.c	40;"	d	file:
FTS3_SEGCURSOR_ALL	ext/fts3/fts3Int.h	496;"	d
FTS3_SEGCURSOR_ALL	sqlite3.c	141920;"	d	file:
FTS3_SEGCURSOR_ALL	tsrc/fts3Int.h	496;"	d
FTS3_SEGCURSOR_PENDING	ext/fts3/fts3Int.h	495;"	d
FTS3_SEGCURSOR_PENDING	sqlite3.c	141919;"	d	file:
FTS3_SEGCURSOR_PENDING	tsrc/fts3Int.h	495;"	d
FTS3_SEGDIR_MAXLEVEL	ext/fts3/fts3Int.h	113;"	d
FTS3_SEGDIR_MAXLEVEL	sqlite3.c	141537;"	d	file:
FTS3_SEGDIR_MAXLEVEL	tsrc/fts3Int.h	113;"	d
FTS3_SEGDIR_MAXLEVEL_STR	ext/fts3/fts3Int.h	114;"	d
FTS3_SEGDIR_MAXLEVEL_STR	sqlite3.c	141538;"	d	file:
FTS3_SEGDIR_MAXLEVEL_STR	tsrc/fts3Int.h	114;"	d
FTS3_SEGMENT_COLUMN_FILTER	ext/fts3/fts3Int.h	508;"	d
FTS3_SEGMENT_COLUMN_FILTER	sqlite3.c	141932;"	d	file:
FTS3_SEGMENT_COLUMN_FILTER	tsrc/fts3Int.h	508;"	d
FTS3_SEGMENT_FIRST	ext/fts3/fts3Int.h	511;"	d
FTS3_SEGMENT_FIRST	sqlite3.c	141935;"	d	file:
FTS3_SEGMENT_FIRST	tsrc/fts3Int.h	511;"	d
FTS3_SEGMENT_IGNORE_EMPTY	ext/fts3/fts3Int.h	507;"	d
FTS3_SEGMENT_IGNORE_EMPTY	sqlite3.c	141931;"	d	file:
FTS3_SEGMENT_IGNORE_EMPTY	tsrc/fts3Int.h	507;"	d
FTS3_SEGMENT_PREFIX	ext/fts3/fts3Int.h	509;"	d
FTS3_SEGMENT_PREFIX	sqlite3.c	141933;"	d	file:
FTS3_SEGMENT_PREFIX	tsrc/fts3Int.h	509;"	d
FTS3_SEGMENT_REQUIRE_POS	ext/fts3/fts3Int.h	506;"	d
FTS3_SEGMENT_REQUIRE_POS	sqlite3.c	141930;"	d	file:
FTS3_SEGMENT_REQUIRE_POS	tsrc/fts3Int.h	506;"	d
FTS3_SEGMENT_SCAN	ext/fts3/fts3Int.h	510;"	d
FTS3_SEGMENT_SCAN	sqlite3.c	141934;"	d	file:
FTS3_SEGMENT_SCAN	tsrc/fts3Int.h	510;"	d
FTS3_TERMS_SCHEMA	ext/fts3/fts3_term.c	52;"	d	file:
FTS3_TOK_SCHEMA	ext/fts3/fts3_tokenize_vtab.c	146;"	d	file:
FTS3_TOK_SCHEMA	ext/fts5/fts5_test_tok.c	161;"	d	file:
FTS3_TOK_SCHEMA	sqlite3.c	151498;"	d	file:
FTS3_TOK_SCHEMA	tsrc/fts3_tokenize_vtab.c	146;"	d	file:
FTS3_VARINT_MAX	ext/fts3/fts3Int.h	96;"	d
FTS3_VARINT_MAX	sqlite3.c	141520;"	d	file:
FTS3_VARINT_MAX	tsrc/fts3Int.h	96;"	d
FTS4AUX_EQ_CONSTRAINT	ext/fts3/fts3_aux.c	142;"	d	file:
FTS4AUX_EQ_CONSTRAINT	ext/fts3/fts3_term.c	137;"	d	file:
FTS4AUX_EQ_CONSTRAINT	sqlite3.c	147822;"	d	file:
FTS4AUX_EQ_CONSTRAINT	tsrc/fts3_aux.c	142;"	d	file:
FTS4AUX_GE_CONSTRAINT	ext/fts3/fts3_aux.c	143;"	d	file:
FTS4AUX_GE_CONSTRAINT	ext/fts3/fts3_term.c	138;"	d	file:
FTS4AUX_GE_CONSTRAINT	sqlite3.c	147823;"	d	file:
FTS4AUX_GE_CONSTRAINT	tsrc/fts3_aux.c	143;"	d	file:
FTS4AUX_LE_CONSTRAINT	ext/fts3/fts3_aux.c	144;"	d	file:
FTS4AUX_LE_CONSTRAINT	ext/fts3/fts3_term.c	139;"	d	file:
FTS4AUX_LE_CONSTRAINT	sqlite3.c	147824;"	d	file:
FTS4AUX_LE_CONSTRAINT	tsrc/fts3_aux.c	144;"	d	file:
FTS5CSR_EOF	ext/fts5/fts5_main.c	223;"	d	file:
FTS5CSR_EOF	fts5.c	14498;"	d	file:
FTS5CSR_EOF	sqlite3.c	191629;"	d	file:
FTS5CSR_EOF	tsrc/fts5.c	14498;"	d	file:
FTS5CSR_FREE_ZRANK	ext/fts5/fts5_main.c	227;"	d	file:
FTS5CSR_FREE_ZRANK	fts5.c	14502;"	d	file:
FTS5CSR_FREE_ZRANK	sqlite3.c	191633;"	d	file:
FTS5CSR_FREE_ZRANK	tsrc/fts5.c	14502;"	d	file:
FTS5CSR_REQUIRE_CONTENT	ext/fts5/fts5_main.c	224;"	d	file:
FTS5CSR_REQUIRE_CONTENT	fts5.c	14499;"	d	file:
FTS5CSR_REQUIRE_CONTENT	sqlite3.c	191630;"	d	file:
FTS5CSR_REQUIRE_CONTENT	tsrc/fts5.c	14499;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	ext/fts5/fts5_main.c	225;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	fts5.c	14500;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	sqlite3.c	191631;"	d	file:
FTS5CSR_REQUIRE_DOCSIZE	tsrc/fts5.c	14500;"	d	file:
FTS5CSR_REQUIRE_INST	ext/fts5/fts5_main.c	226;"	d	file:
FTS5CSR_REQUIRE_INST	fts5.c	14501;"	d	file:
FTS5CSR_REQUIRE_INST	sqlite3.c	191632;"	d	file:
FTS5CSR_REQUIRE_INST	tsrc/fts5.c	14501;"	d	file:
FTS5CSR_REQUIRE_POSLIST	ext/fts5/fts5_main.c	229;"	d	file:
FTS5CSR_REQUIRE_POSLIST	fts5.c	14504;"	d	file:
FTS5CSR_REQUIRE_POSLIST	sqlite3.c	191635;"	d	file:
FTS5CSR_REQUIRE_POSLIST	tsrc/fts5.c	14504;"	d	file:
FTS5CSR_REQUIRE_RESEEK	ext/fts5/fts5_main.c	228;"	d	file:
FTS5CSR_REQUIRE_RESEEK	fts5.c	14503;"	d	file:
FTS5CSR_REQUIRE_RESEEK	sqlite3.c	191634;"	d	file:
FTS5CSR_REQUIRE_RESEEK	tsrc/fts5.c	14503;"	d	file:
FTS5INDEX_QUERY_DESC	ext/fts5/fts5Int.h	348;"	d
FTS5INDEX_QUERY_DESC	fts5.c	941;"	d	file:
FTS5INDEX_QUERY_DESC	sqlite3.c	178143;"	d	file:
FTS5INDEX_QUERY_DESC	tsrc/fts5.c	941;"	d	file:
FTS5INDEX_QUERY_NOOUTPUT	ext/fts5/fts5Int.h	356;"	d
FTS5INDEX_QUERY_NOOUTPUT	fts5.c	949;"	d	file:
FTS5INDEX_QUERY_NOOUTPUT	sqlite3.c	178151;"	d	file:
FTS5INDEX_QUERY_NOOUTPUT	tsrc/fts5.c	949;"	d	file:
FTS5INDEX_QUERY_PREFIX	ext/fts5/fts5Int.h	347;"	d
FTS5INDEX_QUERY_PREFIX	fts5.c	940;"	d	file:
FTS5INDEX_QUERY_PREFIX	sqlite3.c	178142;"	d	file:
FTS5INDEX_QUERY_PREFIX	tsrc/fts5.c	940;"	d	file:
FTS5INDEX_QUERY_SCAN	ext/fts5/fts5Int.h	350;"	d
FTS5INDEX_QUERY_SCAN	fts5.c	943;"	d	file:
FTS5INDEX_QUERY_SCAN	sqlite3.c	178145;"	d	file:
FTS5INDEX_QUERY_SCAN	tsrc/fts5.c	943;"	d	file:
FTS5INDEX_QUERY_SKIPEMPTY	ext/fts5/fts5Int.h	355;"	d
FTS5INDEX_QUERY_SKIPEMPTY	fts5.c	948;"	d	file:
FTS5INDEX_QUERY_SKIPEMPTY	sqlite3.c	178150;"	d	file:
FTS5INDEX_QUERY_SKIPEMPTY	tsrc/fts5.c	948;"	d	file:
FTS5INDEX_QUERY_TEST_NOIDX	ext/fts5/fts5Int.h	349;"	d
FTS5INDEX_QUERY_TEST_NOIDX	fts5.c	942;"	d	file:
FTS5INDEX_QUERY_TEST_NOIDX	sqlite3.c	178144;"	d	file:
FTS5INDEX_QUERY_TEST_NOIDX	tsrc/fts5.c	942;"	d	file:
FTS5TOKEN	fts5.c	2491;"	d	file:
FTS5TOKEN	sqlite3.c	179631;"	d	file:
FTS5TOKEN	tsrc/fts5.c	2491;"	d	file:
FTS5_AND	fts5.c	1385;"	d	file:
FTS5_AND	fts5parse.h	2;"	d
FTS5_AND	sqlite3.c	178586;"	d	file:
FTS5_AND	tsrc/fts5.c	1385;"	d	file:
FTS5_AVERAGES_ROWID	ext/fts5/fts5_index.c	213;"	d	file:
FTS5_AVERAGES_ROWID	fts5.c	8025;"	d	file:
FTS5_AVERAGES_ROWID	sqlite3.c	185157;"	d	file:
FTS5_AVERAGES_ROWID	tsrc/fts5.c	8025;"	d	file:
FTS5_BEGIN	ext/fts5/fts5_main.c	250;"	d	file:
FTS5_BEGIN	fts5.c	14525;"	d	file:
FTS5_BEGIN	sqlite3.c	191656;"	d	file:
FTS5_BEGIN	tsrc/fts5.c	14525;"	d	file:
FTS5_BI_MATCH	ext/fts5/fts5_main.c	210;"	d	file:
FTS5_BI_MATCH	fts5.c	14485;"	d	file:
FTS5_BI_MATCH	sqlite3.c	191616;"	d	file:
FTS5_BI_MATCH	tsrc/fts5.c	14485;"	d	file:
FTS5_BI_ORDER_DESC	ext/fts5/fts5_main.c	218;"	d	file:
FTS5_BI_ORDER_DESC	fts5.c	14493;"	d	file:
FTS5_BI_ORDER_DESC	sqlite3.c	191624;"	d	file:
FTS5_BI_ORDER_DESC	tsrc/fts5.c	14493;"	d	file:
FTS5_BI_ORDER_RANK	ext/fts5/fts5_main.c	216;"	d	file:
FTS5_BI_ORDER_RANK	fts5.c	14491;"	d	file:
FTS5_BI_ORDER_RANK	sqlite3.c	191622;"	d	file:
FTS5_BI_ORDER_RANK	tsrc/fts5.c	14491;"	d	file:
FTS5_BI_ORDER_ROWID	ext/fts5/fts5_main.c	217;"	d	file:
FTS5_BI_ORDER_ROWID	fts5.c	14492;"	d	file:
FTS5_BI_ORDER_ROWID	sqlite3.c	191623;"	d	file:
FTS5_BI_ORDER_ROWID	tsrc/fts5.c	14492;"	d	file:
FTS5_BI_RANK	ext/fts5/fts5_main.c	211;"	d	file:
FTS5_BI_RANK	fts5.c	14486;"	d	file:
FTS5_BI_RANK	sqlite3.c	191617;"	d	file:
FTS5_BI_RANK	tsrc/fts5.c	14486;"	d	file:
FTS5_BI_ROWID_EQ	ext/fts5/fts5_main.c	212;"	d	file:
FTS5_BI_ROWID_EQ	fts5.c	14487;"	d	file:
FTS5_BI_ROWID_EQ	sqlite3.c	191618;"	d	file:
FTS5_BI_ROWID_EQ	tsrc/fts5.c	14487;"	d	file:
FTS5_BI_ROWID_GE	ext/fts5/fts5_main.c	214;"	d	file:
FTS5_BI_ROWID_GE	fts5.c	14489;"	d	file:
FTS5_BI_ROWID_GE	sqlite3.c	191620;"	d	file:
FTS5_BI_ROWID_GE	tsrc/fts5.c	14489;"	d	file:
FTS5_BI_ROWID_LE	ext/fts5/fts5_main.c	213;"	d	file:
FTS5_BI_ROWID_LE	fts5.c	14488;"	d	file:
FTS5_BI_ROWID_LE	sqlite3.c	191619;"	d	file:
FTS5_BI_ROWID_LE	tsrc/fts5.c	14488;"	d	file:
FTS5_COLON	fts5.c	1388;"	d	file:
FTS5_COLON	fts5parse.h	5;"	d
FTS5_COLON	sqlite3.c	178589;"	d	file:
FTS5_COLON	tsrc/fts5.c	1388;"	d	file:
FTS5_COMMA	fts5.c	1394;"	d	file:
FTS5_COMMA	fts5parse.h	11;"	d
FTS5_COMMA	sqlite3.c	178595;"	d	file:
FTS5_COMMA	tsrc/fts5.c	1394;"	d	file:
FTS5_COMMIT	ext/fts5/fts5_main.c	252;"	d	file:
FTS5_COMMIT	fts5.c	14527;"	d	file:
FTS5_COMMIT	sqlite3.c	191658;"	d	file:
FTS5_COMMIT	tsrc/fts5.c	14527;"	d	file:
FTS5_CONTENT_EXTERNAL	ext/fts5/fts5Int.h	197;"	d
FTS5_CONTENT_EXTERNAL	fts5.c	790;"	d	file:
FTS5_CONTENT_EXTERNAL	sqlite3.c	177992;"	d	file:
FTS5_CONTENT_EXTERNAL	tsrc/fts5.c	790;"	d	file:
FTS5_CONTENT_NONE	ext/fts5/fts5Int.h	196;"	d
FTS5_CONTENT_NONE	fts5.c	789;"	d	file:
FTS5_CONTENT_NONE	sqlite3.c	177991;"	d	file:
FTS5_CONTENT_NONE	tsrc/fts5.c	789;"	d	file:
FTS5_CONTENT_NORMAL	ext/fts5/fts5Int.h	195;"	d
FTS5_CONTENT_NORMAL	fts5.c	788;"	d	file:
FTS5_CONTENT_NORMAL	sqlite3.c	177990;"	d	file:
FTS5_CONTENT_NORMAL	tsrc/fts5.c	788;"	d	file:
FTS5_CORRUPT	ext/fts5/fts5Int.h	70;"	d
FTS5_CORRUPT	ext/fts5/fts5Int.h	73;"	d
FTS5_CORRUPT	fts5.c	663;"	d	file:
FTS5_CORRUPT	fts5.c	666;"	d	file:
FTS5_CORRUPT	sqlite3.c	177865;"	d	file:
FTS5_CORRUPT	sqlite3.c	177868;"	d	file:
FTS5_CORRUPT	tsrc/fts5.c	663;"	d	file:
FTS5_CORRUPT	tsrc/fts5.c	666;"	d	file:
FTS5_CURRENT_VERSION	ext/fts5/fts5Int.h	193;"	d
FTS5_CURRENT_VERSION	fts5.c	786;"	d	file:
FTS5_CURRENT_VERSION	sqlite3.c	177988;"	d	file:
FTS5_CURRENT_VERSION	tsrc/fts5.c	786;"	d	file:
FTS5_DATA_DLI_B	ext/fts5/fts5_index.c	228;"	d	file:
FTS5_DATA_DLI_B	fts5.c	8040;"	d	file:
FTS5_DATA_DLI_B	sqlite3.c	185172;"	d	file:
FTS5_DATA_DLI_B	tsrc/fts5.c	8040;"	d	file:
FTS5_DATA_HEIGHT_B	ext/fts5/fts5_index.c	229;"	d	file:
FTS5_DATA_HEIGHT_B	fts5.c	8041;"	d	file:
FTS5_DATA_HEIGHT_B	sqlite3.c	185173;"	d	file:
FTS5_DATA_HEIGHT_B	tsrc/fts5.c	8041;"	d	file:
FTS5_DATA_ID_B	ext/fts5/fts5_index.c	227;"	d	file:
FTS5_DATA_ID_B	fts5.c	8039;"	d	file:
FTS5_DATA_ID_B	sqlite3.c	185171;"	d	file:
FTS5_DATA_ID_B	tsrc/fts5.c	8039;"	d	file:
FTS5_DATA_PADDING	ext/fts5/fts5_index.c	258;"	d	file:
FTS5_DATA_PADDING	fts5.c	8070;"	d	file:
FTS5_DATA_PADDING	sqlite3.c	185202;"	d	file:
FTS5_DATA_PADDING	tsrc/fts5.c	8070;"	d	file:
FTS5_DATA_PAGE_B	ext/fts5/fts5_index.c	230;"	d	file:
FTS5_DATA_PAGE_B	fts5.c	8042;"	d	file:
FTS5_DATA_PAGE_B	sqlite3.c	185174;"	d	file:
FTS5_DATA_PAGE_B	tsrc/fts5.c	8042;"	d	file:
FTS5_DATA_ZERO_PADDING	ext/fts5/fts5_index.c	257;"	d	file:
FTS5_DATA_ZERO_PADDING	fts5.c	8069;"	d	file:
FTS5_DATA_ZERO_PADDING	sqlite3.c	185201;"	d	file:
FTS5_DATA_ZERO_PADDING	tsrc/fts5.c	8069;"	d	file:
FTS5_DEFAULT_AUTOMERGE	ext/fts5/fts5_config.c	20;"	d	file:
FTS5_DEFAULT_AUTOMERGE	fts5.c	3681;"	d	file:
FTS5_DEFAULT_AUTOMERGE	sqlite3.c	180816;"	d	file:
FTS5_DEFAULT_AUTOMERGE	tsrc/fts5.c	3681;"	d	file:
FTS5_DEFAULT_CRISISMERGE	ext/fts5/fts5_config.c	22;"	d	file:
FTS5_DEFAULT_CRISISMERGE	fts5.c	3683;"	d	file:
FTS5_DEFAULT_CRISISMERGE	sqlite3.c	180818;"	d	file:
FTS5_DEFAULT_CRISISMERGE	tsrc/fts5.c	3683;"	d	file:
FTS5_DEFAULT_HASHSIZE	ext/fts5/fts5_config.c	23;"	d	file:
FTS5_DEFAULT_HASHSIZE	fts5.c	3684;"	d	file:
FTS5_DEFAULT_HASHSIZE	sqlite3.c	180819;"	d	file:
FTS5_DEFAULT_HASHSIZE	tsrc/fts5.c	3684;"	d	file:
FTS5_DEFAULT_NEARDIST	ext/fts5/fts5Int.h	62;"	d
FTS5_DEFAULT_NEARDIST	fts5.c	655;"	d	file:
FTS5_DEFAULT_NEARDIST	sqlite3.c	177857;"	d	file:
FTS5_DEFAULT_NEARDIST	tsrc/fts5.c	655;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	ext/fts5/fts5_config.c	19;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	fts5.c	3680;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	sqlite3.c	180815;"	d	file:
FTS5_DEFAULT_PAGE_SIZE	tsrc/fts5.c	3680;"	d	file:
FTS5_DEFAULT_RANK	ext/fts5/fts5Int.h	63;"	d
FTS5_DEFAULT_RANK	fts5.c	656;"	d	file:
FTS5_DEFAULT_RANK	sqlite3.c	177858;"	d	file:
FTS5_DEFAULT_RANK	tsrc/fts5.c	656;"	d	file:
FTS5_DEFAULT_USERMERGE	ext/fts5/fts5_config.c	21;"	d	file:
FTS5_DEFAULT_USERMERGE	fts5.c	3682;"	d	file:
FTS5_DEFAULT_USERMERGE	sqlite3.c	180817;"	d	file:
FTS5_DEFAULT_USERMERGE	tsrc/fts5.c	3682;"	d	file:
FTS5_DETAIL_COLUMNS	ext/fts5/fts5Int.h	201;"	d
FTS5_DETAIL_COLUMNS	fts5.c	794;"	d	file:
FTS5_DETAIL_COLUMNS	sqlite3.c	177996;"	d	file:
FTS5_DETAIL_COLUMNS	tsrc/fts5.c	794;"	d	file:
FTS5_DETAIL_FULL	ext/fts5/fts5Int.h	199;"	d
FTS5_DETAIL_FULL	fts5.c	792;"	d	file:
FTS5_DETAIL_FULL	sqlite3.c	177994;"	d	file:
FTS5_DETAIL_FULL	tsrc/fts5.c	792;"	d	file:
FTS5_DETAIL_NONE	ext/fts5/fts5Int.h	200;"	d
FTS5_DETAIL_NONE	fts5.c	793;"	d	file:
FTS5_DETAIL_NONE	sqlite3.c	177995;"	d	file:
FTS5_DETAIL_NONE	tsrc/fts5.c	793;"	d	file:
FTS5_DLIDX_ROWID	ext/fts5/fts5_index.c	240;"	d	file:
FTS5_DLIDX_ROWID	fts5.c	8052;"	d	file:
FTS5_DLIDX_ROWID	sqlite3.c	185184;"	d	file:
FTS5_DLIDX_ROWID	tsrc/fts5.c	8052;"	d	file:
FTS5_EOF	ext/fts5/fts5_expr.c	23;"	d	file:
FTS5_EOF	fts5.c	4647;"	d	file:
FTS5_EOF	sqlite3.c	181781;"	d	file:
FTS5_EOF	tsrc/fts5.c	4647;"	d	file:
FTS5_HASHENTRYSIZE	ext/fts5/fts5_hash.c	77;"	d	file:
FTS5_HASHENTRYSIZE	fts5.c	7360;"	d	file:
FTS5_HASHENTRYSIZE	sqlite3.c	184493;"	d	file:
FTS5_HASHENTRYSIZE	tsrc/fts5.c	7360;"	d	file:
FTS5_HDR	main.mk	/^FTS5_HDR = \\$/;"	m
FTS5_LARGEST_INT64	ext/fts5/fts5_expr.c	25;"	d	file:
FTS5_LARGEST_INT64	fts5.c	4649;"	d	file:
FTS5_LARGEST_INT64	sqlite3.c	181783;"	d	file:
FTS5_LARGEST_INT64	tsrc/fts5.c	4649;"	d	file:
FTS5_LCP	fts5.c	1391;"	d	file:
FTS5_LCP	fts5parse.h	8;"	d
FTS5_LCP	sqlite3.c	178592;"	d	file:
FTS5_LCP	tsrc/fts5.c	1391;"	d	file:
FTS5_LOOKAHEAD_EOF	ext/fts5/fts5_expr.c	496;"	d	file:
FTS5_LOOKAHEAD_EOF	fts5.c	5120;"	d	file:
FTS5_LOOKAHEAD_EOF	sqlite3.c	182254;"	d	file:
FTS5_LOOKAHEAD_EOF	tsrc/fts5.c	5120;"	d	file:
FTS5_LP	fts5.c	1389;"	d	file:
FTS5_LP	fts5parse.h	6;"	d
FTS5_LP	sqlite3.c	178590;"	d	file:
FTS5_LP	tsrc/fts5.c	1389;"	d	file:
FTS5_MAIN_PREFIX	ext/fts5/fts5_index.c	51;"	d	file:
FTS5_MAIN_PREFIX	fts5.c	7863;"	d	file:
FTS5_MAIN_PREFIX	sqlite3.c	184995;"	d	file:
FTS5_MAIN_PREFIX	tsrc/fts5.c	7863;"	d	file:
FTS5_MAX_PAGE_SIZE	ext/fts5/fts5_config.c	26;"	d	file:
FTS5_MAX_PAGE_SIZE	fts5.c	3687;"	d	file:
FTS5_MAX_PAGE_SIZE	sqlite3.c	180822;"	d	file:
FTS5_MAX_PAGE_SIZE	tsrc/fts5.c	3687;"	d	file:
FTS5_MAX_PREFIX_INDEXES	ext/fts5/fts5Int.h	60;"	d
FTS5_MAX_PREFIX_INDEXES	fts5.c	653;"	d	file:
FTS5_MAX_PREFIX_INDEXES	sqlite3.c	177855;"	d	file:
FTS5_MAX_PREFIX_INDEXES	tsrc/fts5.c	653;"	d	file:
FTS5_MAX_SEGMENT	ext/fts5/fts5_index.c	245;"	d	file:
FTS5_MAX_SEGMENT	fts5.c	8057;"	d	file:
FTS5_MAX_SEGMENT	sqlite3.c	185189;"	d	file:
FTS5_MAX_SEGMENT	tsrc/fts5.c	8057;"	d	file:
FTS5_MAX_TOKEN_SIZE	ext/fts5/fts5Int.h	53;"	d
FTS5_MAX_TOKEN_SIZE	fts5.c	646;"	d	file:
FTS5_MAX_TOKEN_SIZE	sqlite3.c	177848;"	d	file:
FTS5_MAX_TOKEN_SIZE	tsrc/fts5.c	646;"	d	file:
FTS5_MIN_DLIDX_SIZE	ext/fts5/fts5_index.c	49;"	d	file:
FTS5_MIN_DLIDX_SIZE	fts5.c	7861;"	d	file:
FTS5_MIN_DLIDX_SIZE	sqlite3.c	184993;"	d	file:
FTS5_MIN_DLIDX_SIZE	tsrc/fts5.c	7861;"	d	file:
FTS5_NOINLINE	ext/fts5/fts5_varint.c	281;"	d	file:
FTS5_NOINLINE	ext/fts5/fts5_varint.c	283;"	d	file:
FTS5_NOINLINE	fts5.c	20031;"	d	file:
FTS5_NOINLINE	fts5.c	20033;"	d	file:
FTS5_NOINLINE	sqlite3.c	197158;"	d	file:
FTS5_NOINLINE	sqlite3.c	197160;"	d	file:
FTS5_NOINLINE	tsrc/fts5.c	20031;"	d	file:
FTS5_NOINLINE	tsrc/fts5.c	20033;"	d	file:
FTS5_NOT	fts5.c	1386;"	d	file:
FTS5_NOT	fts5parse.h	3;"	d
FTS5_NOT	sqlite3.c	178587;"	d	file:
FTS5_NOT	tsrc/fts5.c	1386;"	d	file:
FTS5_OPT_WORK_UNIT	ext/fts5/fts5_index.c	46;"	d	file:
FTS5_OPT_WORK_UNIT	fts5.c	7858;"	d	file:
FTS5_OPT_WORK_UNIT	sqlite3.c	184990;"	d	file:
FTS5_OPT_WORK_UNIT	tsrc/fts5.c	7858;"	d	file:
FTS5_OR	fts5.c	1384;"	d	file:
FTS5_OR	fts5parse.h	1;"	d
FTS5_OR	sqlite3.c	178585;"	d	file:
FTS5_OR	tsrc/fts5.c	1384;"	d	file:
FTS5_PLAN_MATCH	ext/fts5/fts5_main.c	446;"	d	file:
FTS5_PLAN_MATCH	fts5.c	14721;"	d	file:
FTS5_PLAN_MATCH	sqlite3.c	191852;"	d	file:
FTS5_PLAN_MATCH	tsrc/fts5.c	14721;"	d	file:
FTS5_PLAN_ROWID	ext/fts5/fts5_main.c	451;"	d	file:
FTS5_PLAN_ROWID	fts5.c	14726;"	d	file:
FTS5_PLAN_ROWID	sqlite3.c	191857;"	d	file:
FTS5_PLAN_ROWID	tsrc/fts5.c	14726;"	d	file:
FTS5_PLAN_SCAN	ext/fts5/fts5_main.c	450;"	d	file:
FTS5_PLAN_SCAN	fts5.c	14725;"	d	file:
FTS5_PLAN_SCAN	sqlite3.c	191856;"	d	file:
FTS5_PLAN_SCAN	tsrc/fts5.c	14725;"	d	file:
FTS5_PLAN_SORTED_MATCH	ext/fts5/fts5_main.c	449;"	d	file:
FTS5_PLAN_SORTED_MATCH	fts5.c	14724;"	d	file:
FTS5_PLAN_SORTED_MATCH	sqlite3.c	191855;"	d	file:
FTS5_PLAN_SORTED_MATCH	tsrc/fts5.c	14724;"	d	file:
FTS5_PLAN_SOURCE	ext/fts5/fts5_main.c	447;"	d	file:
FTS5_PLAN_SOURCE	fts5.c	14722;"	d	file:
FTS5_PLAN_SOURCE	sqlite3.c	191853;"	d	file:
FTS5_PLAN_SOURCE	tsrc/fts5.c	14722;"	d	file:
FTS5_PLAN_SPECIAL	ext/fts5/fts5_main.c	448;"	d	file:
FTS5_PLAN_SPECIAL	fts5.c	14723;"	d	file:
FTS5_PLAN_SPECIAL	sqlite3.c	191854;"	d	file:
FTS5_PLAN_SPECIAL	tsrc/fts5.c	14723;"	d	file:
FTS5_PLUS	fts5.c	1395;"	d	file:
FTS5_PLUS	fts5parse.h	12;"	d
FTS5_PLUS	sqlite3.c	178596;"	d	file:
FTS5_PLUS	tsrc/fts5.c	1395;"	d	file:
FTS5_PORTER_MAX_TOKEN	ext/fts5/fts5_tokenize.c	501;"	d	file:
FTS5_PORTER_MAX_TOKEN	fts5.c	18645;"	d	file:
FTS5_PORTER_MAX_TOKEN	sqlite3.c	195774;"	d	file:
FTS5_PORTER_MAX_TOKEN	tsrc/fts5.c	18645;"	d	file:
FTS5_POS2COLUMN	ext/fts5/fts5Int.h	274;"	d
FTS5_POS2COLUMN	fts5.c	867;"	d	file:
FTS5_POS2COLUMN	sqlite3.c	178069;"	d	file:
FTS5_POS2COLUMN	tsrc/fts5.c	867;"	d	file:
FTS5_POS2OFFSET	ext/fts5/fts5Int.h	275;"	d
FTS5_POS2OFFSET	fts5.c	868;"	d	file:
FTS5_POS2OFFSET	sqlite3.c	178070;"	d	file:
FTS5_POS2OFFSET	tsrc/fts5.c	868;"	d	file:
FTS5_RANK_NAME	ext/fts5/fts5Int.h	66;"	d
FTS5_RANK_NAME	fts5.c	659;"	d	file:
FTS5_RANK_NAME	sqlite3.c	177861;"	d	file:
FTS5_RANK_NAME	tsrc/fts5.c	659;"	d	file:
FTS5_RCP	fts5.c	1392;"	d	file:
FTS5_RCP	fts5parse.h	9;"	d
FTS5_RCP	sqlite3.c	178593;"	d	file:
FTS5_RCP	tsrc/fts5.c	1392;"	d	file:
FTS5_RELEASE	ext/fts5/fts5_main.c	255;"	d	file:
FTS5_RELEASE	fts5.c	14530;"	d	file:
FTS5_RELEASE	sqlite3.c	191661;"	d	file:
FTS5_RELEASE	tsrc/fts5.c	14530;"	d	file:
FTS5_ROLLBACK	ext/fts5/fts5_main.c	253;"	d	file:
FTS5_ROLLBACK	fts5.c	14528;"	d	file:
FTS5_ROLLBACK	sqlite3.c	191659;"	d	file:
FTS5_ROLLBACK	tsrc/fts5.c	14528;"	d	file:
FTS5_ROLLBACKTO	ext/fts5/fts5_main.c	256;"	d	file:
FTS5_ROLLBACKTO	fts5.c	14531;"	d	file:
FTS5_ROLLBACKTO	sqlite3.c	191662;"	d	file:
FTS5_ROLLBACKTO	tsrc/fts5.c	14531;"	d	file:
FTS5_ROWID_NAME	ext/fts5/fts5Int.h	67;"	d
FTS5_ROWID_NAME	fts5.c	660;"	d	file:
FTS5_ROWID_NAME	sqlite3.c	177862;"	d	file:
FTS5_ROWID_NAME	tsrc/fts5.c	660;"	d	file:
FTS5_RP	fts5.c	1390;"	d	file:
FTS5_RP	fts5parse.h	7;"	d
FTS5_RP	sqlite3.c	178591;"	d	file:
FTS5_RP	tsrc/fts5.c	1390;"	d	file:
FTS5_SAVEPOINT	ext/fts5/fts5_main.c	254;"	d	file:
FTS5_SAVEPOINT	fts5.c	14529;"	d	file:
FTS5_SAVEPOINT	sqlite3.c	191660;"	d	file:
FTS5_SAVEPOINT	tsrc/fts5.c	14529;"	d	file:
FTS5_SEGITER_ONETERM	ext/fts5/fts5_index.c	474;"	d	file:
FTS5_SEGITER_ONETERM	fts5.c	8286;"	d	file:
FTS5_SEGITER_ONETERM	sqlite3.c	185418;"	d	file:
FTS5_SEGITER_ONETERM	tsrc/fts5.c	8286;"	d	file:
FTS5_SEGITER_REVERSE	ext/fts5/fts5_index.c	475;"	d	file:
FTS5_SEGITER_REVERSE	fts5.c	8287;"	d	file:
FTS5_SEGITER_REVERSE	sqlite3.c	185419;"	d	file:
FTS5_SEGITER_REVERSE	tsrc/fts5.c	8287;"	d	file:
FTS5_SEGMENT_ROWID	ext/fts5/fts5_index.c	239;"	d	file:
FTS5_SEGMENT_ROWID	fts5.c	8051;"	d	file:
FTS5_SEGMENT_ROWID	sqlite3.c	185183;"	d	file:
FTS5_SEGMENT_ROWID	tsrc/fts5.c	8051;"	d	file:
FTS5_SRC	Makefile	/^FTS5_SRC = \\$/;"	m
FTS5_SRC	main.mk	/^FTS5_SRC = \\$/;"	m
FTS5_STAR	fts5.c	1396;"	d	file:
FTS5_STAR	fts5parse.h	13;"	d
FTS5_STAR	sqlite3.c	178597;"	d	file:
FTS5_STAR	tsrc/fts5.c	1396;"	d	file:
FTS5_STMT_DELETE_CONTENT	ext/fts5/fts5_storage.c	41;"	d	file:
FTS5_STMT_DELETE_CONTENT	fts5.c	17049;"	d	file:
FTS5_STMT_DELETE_CONTENT	sqlite3.c	194179;"	d	file:
FTS5_STMT_DELETE_CONTENT	tsrc/fts5.c	17049;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	ext/fts5/fts5_storage.c	43;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	fts5.c	17051;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	sqlite3.c	194181;"	d	file:
FTS5_STMT_DELETE_DOCSIZE	tsrc/fts5.c	17051;"	d	file:
FTS5_STMT_INSERT_CONTENT	ext/fts5/fts5_storage.c	39;"	d	file:
FTS5_STMT_INSERT_CONTENT	fts5.c	17047;"	d	file:
FTS5_STMT_INSERT_CONTENT	sqlite3.c	194177;"	d	file:
FTS5_STMT_INSERT_CONTENT	tsrc/fts5.c	17047;"	d	file:
FTS5_STMT_LOOKUP	ext/fts5/fts5Int.h	595;"	d
FTS5_STMT_LOOKUP	fts5.c	1188;"	d	file:
FTS5_STMT_LOOKUP	sqlite3.c	178390;"	d	file:
FTS5_STMT_LOOKUP	tsrc/fts5.c	1188;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	ext/fts5/fts5_storage.c	44;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	fts5.c	17052;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	sqlite3.c	194182;"	d	file:
FTS5_STMT_LOOKUP_DOCSIZE	tsrc/fts5.c	17052;"	d	file:
FTS5_STMT_REPLACE_CONFIG	ext/fts5/fts5_storage.c	45;"	d	file:
FTS5_STMT_REPLACE_CONFIG	fts5.c	17053;"	d	file:
FTS5_STMT_REPLACE_CONFIG	sqlite3.c	194183;"	d	file:
FTS5_STMT_REPLACE_CONFIG	tsrc/fts5.c	17053;"	d	file:
FTS5_STMT_REPLACE_CONTENT	ext/fts5/fts5_storage.c	40;"	d	file:
FTS5_STMT_REPLACE_CONTENT	fts5.c	17048;"	d	file:
FTS5_STMT_REPLACE_CONTENT	sqlite3.c	194178;"	d	file:
FTS5_STMT_REPLACE_CONTENT	tsrc/fts5.c	17048;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	ext/fts5/fts5_storage.c	42;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	fts5.c	17050;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	sqlite3.c	194180;"	d	file:
FTS5_STMT_REPLACE_DOCSIZE	tsrc/fts5.c	17050;"	d	file:
FTS5_STMT_SCAN	ext/fts5/fts5_storage.c	46;"	d	file:
FTS5_STMT_SCAN	fts5.c	17054;"	d	file:
FTS5_STMT_SCAN	sqlite3.c	194184;"	d	file:
FTS5_STMT_SCAN	tsrc/fts5.c	17054;"	d	file:
FTS5_STMT_SCAN_ASC	ext/fts5/fts5Int.h	593;"	d
FTS5_STMT_SCAN_ASC	fts5.c	1186;"	d	file:
FTS5_STMT_SCAN_ASC	sqlite3.c	178388;"	d	file:
FTS5_STMT_SCAN_ASC	tsrc/fts5.c	1186;"	d	file:
FTS5_STMT_SCAN_DESC	ext/fts5/fts5Int.h	594;"	d
FTS5_STMT_SCAN_DESC	fts5.c	1187;"	d	file:
FTS5_STMT_SCAN_DESC	sqlite3.c	178389;"	d	file:
FTS5_STMT_SCAN_DESC	tsrc/fts5.c	1187;"	d	file:
FTS5_STRING	fts5.c	1393;"	d	file:
FTS5_STRING	fts5parse.h	10;"	d
FTS5_STRING	sqlite3.c	178594;"	d	file:
FTS5_STRING	tsrc/fts5.c	1393;"	d	file:
FTS5_STRUCTURE_ROWID	ext/fts5/fts5_index.c	214;"	d	file:
FTS5_STRUCTURE_ROWID	fts5.c	8026;"	d	file:
FTS5_STRUCTURE_ROWID	sqlite3.c	185158;"	d	file:
FTS5_STRUCTURE_ROWID	tsrc/fts5.c	8026;"	d	file:
FTS5_SYNC	ext/fts5/fts5_main.c	251;"	d	file:
FTS5_SYNC	fts5.c	14526;"	d	file:
FTS5_SYNC	sqlite3.c	191657;"	d	file:
FTS5_SYNC	tsrc/fts5.c	14526;"	d	file:
FTS5_TERM	fts5.c	1387;"	d	file:
FTS5_TERM	fts5parse.h	4;"	d
FTS5_TERM	sqlite3.c	178588;"	d	file:
FTS5_TERM	tsrc/fts5.c	1387;"	d	file:
FTS5_TOKENIZE_AUX	ext/fts5/fts5.h	527;"	d
FTS5_TOKENIZE_AUX	fts5.c	539;"	d	file:
FTS5_TOKENIZE_AUX	fts5.h	527;"	d
FTS5_TOKENIZE_AUX	sqlite3.c	10548;"	d	file:
FTS5_TOKENIZE_AUX	sqlite3.c	177742;"	d	file:
FTS5_TOKENIZE_AUX	sqlite3.h	10288;"	d
FTS5_TOKENIZE_AUX	tsrc/fts5.c	539;"	d	file:
FTS5_TOKENIZE_AUX	tsrc/fts5.h	527;"	d
FTS5_TOKENIZE_AUX	tsrc/sqlite3.h	10288;"	d
FTS5_TOKENIZE_DOCUMENT	ext/fts5/fts5.h	526;"	d
FTS5_TOKENIZE_DOCUMENT	fts5.c	538;"	d	file:
FTS5_TOKENIZE_DOCUMENT	fts5.h	526;"	d
FTS5_TOKENIZE_DOCUMENT	sqlite3.c	10547;"	d	file:
FTS5_TOKENIZE_DOCUMENT	sqlite3.c	177741;"	d	file:
FTS5_TOKENIZE_DOCUMENT	sqlite3.h	10287;"	d
FTS5_TOKENIZE_DOCUMENT	tsrc/fts5.c	538;"	d	file:
FTS5_TOKENIZE_DOCUMENT	tsrc/fts5.h	526;"	d
FTS5_TOKENIZE_DOCUMENT	tsrc/sqlite3.h	10287;"	d
FTS5_TOKENIZE_PREFIX	ext/fts5/fts5.h	525;"	d
FTS5_TOKENIZE_PREFIX	fts5.c	537;"	d	file:
FTS5_TOKENIZE_PREFIX	fts5.h	525;"	d
FTS5_TOKENIZE_PREFIX	sqlite3.c	10546;"	d	file:
FTS5_TOKENIZE_PREFIX	sqlite3.c	177740;"	d	file:
FTS5_TOKENIZE_PREFIX	sqlite3.h	10286;"	d
FTS5_TOKENIZE_PREFIX	tsrc/fts5.c	537;"	d	file:
FTS5_TOKENIZE_PREFIX	tsrc/fts5.h	525;"	d
FTS5_TOKENIZE_PREFIX	tsrc/sqlite3.h	10286;"	d
FTS5_TOKENIZE_QUERY	ext/fts5/fts5.h	524;"	d
FTS5_TOKENIZE_QUERY	fts5.c	536;"	d	file:
FTS5_TOKENIZE_QUERY	fts5.h	524;"	d
FTS5_TOKENIZE_QUERY	sqlite3.c	10545;"	d	file:
FTS5_TOKENIZE_QUERY	sqlite3.c	177739;"	d	file:
FTS5_TOKENIZE_QUERY	sqlite3.h	10285;"	d
FTS5_TOKENIZE_QUERY	tsrc/fts5.c	536;"	d	file:
FTS5_TOKENIZE_QUERY	tsrc/fts5.h	524;"	d
FTS5_TOKENIZE_QUERY	tsrc/sqlite3.h	10285;"	d
FTS5_TOKEN_COLOCATED	ext/fts5/fts5.h	531;"	d
FTS5_TOKEN_COLOCATED	fts5.c	543;"	d	file:
FTS5_TOKEN_COLOCATED	fts5.h	531;"	d
FTS5_TOKEN_COLOCATED	sqlite3.c	10552;"	d	file:
FTS5_TOKEN_COLOCATED	sqlite3.c	177746;"	d	file:
FTS5_TOKEN_COLOCATED	sqlite3.h	10292;"	d
FTS5_TOKEN_COLOCATED	tsrc/fts5.c	543;"	d	file:
FTS5_TOKEN_COLOCATED	tsrc/fts5.h	531;"	d
FTS5_TOKEN_COLOCATED	tsrc/sqlite3.h	10292;"	d
FTS5_VOCAB_COL	ext/fts5/fts5_vocab.c	72;"	d	file:
FTS5_VOCAB_COL	fts5.c	20169;"	d	file:
FTS5_VOCAB_COL	sqlite3.c	197295;"	d	file:
FTS5_VOCAB_COL	tsrc/fts5.c	20169;"	d	file:
FTS5_VOCAB_COL_SCHEMA	ext/fts5/fts5_vocab.c	75;"	d	file:
FTS5_VOCAB_COL_SCHEMA	fts5.c	20172;"	d	file:
FTS5_VOCAB_COL_SCHEMA	sqlite3.c	197298;"	d	file:
FTS5_VOCAB_COL_SCHEMA	tsrc/fts5.c	20172;"	d	file:
FTS5_VOCAB_ROW	ext/fts5/fts5_vocab.c	73;"	d	file:
FTS5_VOCAB_ROW	fts5.c	20170;"	d	file:
FTS5_VOCAB_ROW	sqlite3.c	197296;"	d	file:
FTS5_VOCAB_ROW	tsrc/fts5.c	20170;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	ext/fts5/fts5_vocab.c	76;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	fts5.c	20173;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	sqlite3.c	197299;"	d	file:
FTS5_VOCAB_ROW_SCHEMA	tsrc/fts5.c	20173;"	d	file:
FTS5_VOCAB_TERM_EQ	ext/fts5/fts5_vocab.c	81;"	d	file:
FTS5_VOCAB_TERM_EQ	fts5.c	20178;"	d	file:
FTS5_VOCAB_TERM_EQ	sqlite3.c	197304;"	d	file:
FTS5_VOCAB_TERM_EQ	tsrc/fts5.c	20178;"	d	file:
FTS5_VOCAB_TERM_GE	ext/fts5/fts5_vocab.c	82;"	d	file:
FTS5_VOCAB_TERM_GE	fts5.c	20179;"	d	file:
FTS5_VOCAB_TERM_GE	sqlite3.c	197305;"	d	file:
FTS5_VOCAB_TERM_GE	tsrc/fts5.c	20179;"	d	file:
FTS5_VOCAB_TERM_LE	ext/fts5/fts5_vocab.c	83;"	d	file:
FTS5_VOCAB_TERM_LE	fts5.c	20180;"	d	file:
FTS5_VOCAB_TERM_LE	sqlite3.c	197306;"	d	file:
FTS5_VOCAB_TERM_LE	tsrc/fts5.c	20180;"	d	file:
FTS5_WORK_UNIT	ext/fts5/fts5_index.c	47;"	d	file:
FTS5_WORK_UNIT	fts5.c	7859;"	d	file:
FTS5_WORK_UNIT	sqlite3.c	184991;"	d	file:
FTS5_WORK_UNIT	tsrc/fts5.c	7859;"	d	file:
FTSQUERY_AND	ext/fts3/fts3Int.h	456;"	d
FTSQUERY_AND	sqlite3.c	141880;"	d	file:
FTSQUERY_AND	tsrc/fts3Int.h	456;"	d
FTSQUERY_NEAR	ext/fts3/fts3Int.h	454;"	d
FTSQUERY_NEAR	sqlite3.c	141878;"	d	file:
FTSQUERY_NEAR	tsrc/fts3Int.h	454;"	d
FTSQUERY_NOT	ext/fts3/fts3Int.h	455;"	d
FTSQUERY_NOT	sqlite3.c	141879;"	d	file:
FTSQUERY_NOT	tsrc/fts3Int.h	455;"	d
FTSQUERY_OR	ext/fts3/fts3Int.h	457;"	d
FTSQUERY_OR	sqlite3.c	141881;"	d	file:
FTSQUERY_OR	tsrc/fts3Int.h	457;"	d
FTSQUERY_PHRASE	ext/fts3/fts3Int.h	458;"	d
FTSQUERY_PHRASE	sqlite3.c	141882;"	d	file:
FTSQUERY_PHRASE	tsrc/fts3Int.h	458;"	d
FTS_CORRUPT_VTAB	ext/fts3/fts3Int.h	189;"	d
FTS_CORRUPT_VTAB	ext/fts3/fts3Int.h	191;"	d
FTS_CORRUPT_VTAB	sqlite3.c	141613;"	d	file:
FTS_CORRUPT_VTAB	sqlite3.c	141615;"	d	file:
FTS_CORRUPT_VTAB	tsrc/fts3Int.h	189;"	d
FTS_CORRUPT_VTAB	tsrc/fts3Int.h	191;"	d
FTS_MAX_APPENDABLE_HEIGHT	ext/fts3/fts3_write.c	28;"	d	file:
FTS_MAX_APPENDABLE_HEIGHT	sqlite3.c	151837;"	d	file:
FTS_MAX_APPENDABLE_HEIGHT	tsrc/fts3_write.c	28;"	d	file:
FTS_STAT_AUTOINCRMERGE	ext/fts3/fts3_write.c	75;"	d	file:
FTS_STAT_AUTOINCRMERGE	sqlite3.c	151884;"	d	file:
FTS_STAT_AUTOINCRMERGE	tsrc/fts3_write.c	75;"	d	file:
FTS_STAT_DOCTOTAL	ext/fts3/fts3_write.c	73;"	d	file:
FTS_STAT_DOCTOTAL	sqlite3.c	151882;"	d	file:
FTS_STAT_DOCTOTAL	tsrc/fts3_write.c	73;"	d	file:
FTS_STAT_INCRMERGEHINT	ext/fts3/fts3_write.c	74;"	d	file:
FTS_STAT_INCRMERGEHINT	sqlite3.c	151883;"	d	file:
FTS_STAT_INCRMERGEHINT	tsrc/fts3_write.c	74;"	d	file:
FULLY_WITHIN	ext/rtree/sqlite3rtree.h	110;"	d
FULLY_WITHIN	sqlite3.c	8733;"	d	file:
FULLY_WITHIN	sqlite3.h	8473;"	d
FULLY_WITHIN	tsrc/sqlite3.h	8473;"	d
FUNCTION	sqlite3.c	14194;"	d	file:
FUNCTION	src/sqliteInt.h	1595;"	d
FUNCTION	tsrc/sqliteInt.h	1595;"	d
FUNCTION2	sqlite3.c	14203;"	d	file:
FUNCTION2	src/sqliteInt.h	1604;"	d
FUNCTION2	tsrc/sqliteInt.h	1604;"	d
FUNC_PERFECT_MATCH	sqlite3.c	102070;"	d	file:
FUNC_PERFECT_MATCH	src/callback.c	250;"	d	file:
FUNC_PERFECT_MATCH	tsrc/callback.c	250;"	d	file:
FUZZCHECK_OPT	Makefile	/^FUZZCHECK_OPT = -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_MEMSYS5$/;"	m
FUZZCHECK_OPT	main.mk	/^FUZZCHECK_OPT = -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_MEMSYS5$/;"	m
FUZZDATA	Makefile	/^FUZZDATA = \\$/;"	m
FUZZDATA	main.mk	/^FUZZDATA = \\$/;"	m
FUZZERSHELL_OPT	Makefile	/^FUZZERSHELL_OPT = -DSQLITE_ENABLE_JSON1$/;"	m
FUZZERSHELL_OPT	main.mk	/^FUZZERSHELL_OPT = -DSQLITE_ENABLE_JSON1$/;"	m
FUZZER_HASH	ext/misc/fuzzer.c	235;"	d	file:
FUZZER_MX_COST	ext/misc/fuzzer.c	186;"	d	file:
FUZZER_MX_LENGTH	ext/misc/fuzzer.c	184;"	d	file:
FUZZER_MX_OUTPUT_LENGTH	ext/misc/fuzzer.c	187;"	d	file:
FUZZER_MX_RULEID	ext/misc/fuzzer.c	185;"	d	file:
FUZZER_NQUEUE	ext/misc/fuzzer.c	236;"	d	file:
F_OK	src/test_demovfs.c	483;"	d	file:
FileChunk	sqlite3.c	/^struct FileChunk {$/;"	s	file:
FileChunk	sqlite3.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FileChunk	src/memjournal.c	/^struct FileChunk {$/;"	s	file:
FileChunk	src/memjournal.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FileChunk	tsrc/memjournal.c	/^struct FileChunk {$/;"	s	file:
FileChunk	tsrc/memjournal.c	/^typedef struct FileChunk FileChunk;$/;"	t	typeref:struct:FileChunk	file:
FilePoint	sqlite3.c	/^struct FilePoint {$/;"	s	file:
FilePoint	sqlite3.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FilePoint	src/memjournal.c	/^struct FilePoint {$/;"	s	file:
FilePoint	src/memjournal.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FilePoint	tsrc/memjournal.c	/^struct FilePoint {$/;"	s	file:
FilePoint	tsrc/memjournal.c	/^typedef struct FilePoint FilePoint;$/;"	t	typeref:struct:FilePoint	file:
FindActions	tool/lemon.c	/^void FindActions(struct lemon *lemp)$/;"	f
FindFirstSets	tool/lemon.c	/^void FindFirstSets(struct lemon *lemp)$/;"	f
FindFollowSets	tool/lemon.c	/^void FindFollowSets(struct lemon *lemp)$/;"	f
FindLinks	tool/lemon.c	/^void FindLinks(struct lemon *lemp)$/;"	f
FindRulePrecedences	tool/lemon.c	/^void FindRulePrecedences(struct lemon *xp)$/;"	f
FindStates	tool/lemon.c	/^void FindStates(struct lemon *lemp)$/;"	f
FsdirCsr	src/test_fs.c	/^struct FsdirCsr {$/;"	s	file:
FsdirCsr	src/test_fs.c	/^typedef struct FsdirCsr FsdirCsr;$/;"	t	typeref:struct:FsdirCsr	file:
FsdirVtab	src/test_fs.c	/^struct FsdirVtab {$/;"	s	file:
FsdirVtab	src/test_fs.c	/^typedef struct FsdirVtab FsdirVtab;$/;"	t	typeref:struct:FsdirVtab	file:
FstreeCsr	src/test_fs.c	/^struct FstreeCsr {$/;"	s	file:
FstreeCsr	src/test_fs.c	/^typedef struct FstreeCsr FstreeCsr;$/;"	t	typeref:struct:FstreeCsr	file:
FstreeVtab	src/test_fs.c	/^struct FstreeVtab {$/;"	s	file:
FstreeVtab	src/test_fs.c	/^typedef struct FstreeVtab FstreeVtab;$/;"	t	typeref:struct:FstreeVtab	file:
Fts3Cursor	ext/fts3/fts3Int.h	/^struct Fts3Cursor {$/;"	s
Fts3Cursor	ext/fts3/fts3Int.h	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor
Fts3Cursor	sqlite3.c	/^struct Fts3Cursor {$/;"	s	file:
Fts3Cursor	sqlite3.c	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor	file:
Fts3Cursor	tsrc/fts3Int.h	/^struct Fts3Cursor {$/;"	s
Fts3Cursor	tsrc/fts3Int.h	/^typedef struct Fts3Cursor Fts3Cursor;$/;"	t	typeref:struct:Fts3Cursor
Fts3DeferredToken	ext/fts3/fts3Int.h	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken
Fts3DeferredToken	ext/fts3/fts3_write.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	sqlite3.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3DeferredToken	sqlite3.c	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken	file:
Fts3DeferredToken	tsrc/fts3Int.h	/^typedef struct Fts3DeferredToken Fts3DeferredToken;$/;"	t	typeref:struct:Fts3DeferredToken
Fts3DeferredToken	tsrc/fts3_write.c	/^struct Fts3DeferredToken {$/;"	s	file:
Fts3Doclist	ext/fts3/fts3Int.h	/^struct Fts3Doclist {$/;"	s
Fts3Doclist	ext/fts3/fts3Int.h	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist
Fts3Doclist	sqlite3.c	/^struct Fts3Doclist {$/;"	s	file:
Fts3Doclist	sqlite3.c	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist	file:
Fts3Doclist	tsrc/fts3Int.h	/^struct Fts3Doclist {$/;"	s
Fts3Doclist	tsrc/fts3Int.h	/^typedef struct Fts3Doclist Fts3Doclist;$/;"	t	typeref:struct:Fts3Doclist
Fts3Expr	ext/fts3/fts3Int.h	/^struct Fts3Expr {$/;"	s
Fts3Expr	ext/fts3/fts3Int.h	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr
Fts3Expr	sqlite3.c	/^struct Fts3Expr {$/;"	s	file:
Fts3Expr	sqlite3.c	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr	file:
Fts3Expr	tsrc/fts3Int.h	/^struct Fts3Expr {$/;"	s
Fts3Expr	tsrc/fts3Int.h	/^typedef struct Fts3Expr Fts3Expr;$/;"	t	typeref:struct:Fts3Expr
Fts3Hash	ext/fts3/fts3_hash.h	/^struct Fts3Hash {$/;"	s
Fts3Hash	ext/fts3/fts3_hash.h	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash
Fts3Hash	sqlite3.c	/^struct Fts3Hash {$/;"	s	file:
Fts3Hash	sqlite3.c	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash	file:
Fts3Hash	tsrc/fts3_hash.h	/^struct Fts3Hash {$/;"	s
Fts3Hash	tsrc/fts3_hash.h	/^typedef struct Fts3Hash Fts3Hash;$/;"	t	typeref:struct:Fts3Hash
Fts3HashElem	ext/fts3/fts3_hash.h	/^struct Fts3HashElem {$/;"	s
Fts3HashElem	ext/fts3/fts3_hash.h	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem
Fts3HashElem	sqlite3.c	/^struct Fts3HashElem {$/;"	s	file:
Fts3HashElem	sqlite3.c	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem	file:
Fts3HashElem	tsrc/fts3_hash.h	/^struct Fts3HashElem {$/;"	s
Fts3HashElem	tsrc/fts3_hash.h	/^typedef struct Fts3HashElem Fts3HashElem;$/;"	t	typeref:struct:Fts3HashElem
Fts3Index	ext/fts3/fts3Int.h	/^  struct Fts3Index {$/;"	s	struct:Fts3Table
Fts3Index	sqlite3.c	/^  struct Fts3Index {$/;"	s	struct:Fts3Table	file:
Fts3Index	tsrc/fts3Int.h	/^  struct Fts3Index {$/;"	s	struct:Fts3Table
Fts3MultiSegReader	ext/fts3/fts3Int.h	/^struct Fts3MultiSegReader {$/;"	s
Fts3MultiSegReader	ext/fts3/fts3Int.h	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader
Fts3MultiSegReader	sqlite3.c	/^struct Fts3MultiSegReader {$/;"	s	file:
Fts3MultiSegReader	sqlite3.c	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader	file:
Fts3MultiSegReader	tsrc/fts3Int.h	/^struct Fts3MultiSegReader {$/;"	s
Fts3MultiSegReader	tsrc/fts3Int.h	/^typedef struct Fts3MultiSegReader Fts3MultiSegReader;$/;"	t	typeref:struct:Fts3MultiSegReader
Fts3Phrase	ext/fts3/fts3Int.h	/^struct Fts3Phrase {$/;"	s
Fts3Phrase	ext/fts3/fts3Int.h	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase
Fts3Phrase	sqlite3.c	/^struct Fts3Phrase {$/;"	s	file:
Fts3Phrase	sqlite3.c	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase	file:
Fts3Phrase	tsrc/fts3Int.h	/^struct Fts3Phrase {$/;"	s
Fts3Phrase	tsrc/fts3Int.h	/^typedef struct Fts3Phrase Fts3Phrase;$/;"	t	typeref:struct:Fts3Phrase
Fts3PhraseToken	ext/fts3/fts3Int.h	/^struct Fts3PhraseToken {$/;"	s
Fts3PhraseToken	ext/fts3/fts3Int.h	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken
Fts3PhraseToken	sqlite3.c	/^struct Fts3PhraseToken {$/;"	s	file:
Fts3PhraseToken	sqlite3.c	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken	file:
Fts3PhraseToken	tsrc/fts3Int.h	/^struct Fts3PhraseToken {$/;"	s
Fts3PhraseToken	tsrc/fts3Int.h	/^typedef struct Fts3PhraseToken Fts3PhraseToken;$/;"	t	typeref:struct:Fts3PhraseToken
Fts3SegFilter	ext/fts3/fts3Int.h	/^struct Fts3SegFilter {$/;"	s
Fts3SegFilter	ext/fts3/fts3Int.h	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter
Fts3SegFilter	sqlite3.c	/^struct Fts3SegFilter {$/;"	s	file:
Fts3SegFilter	sqlite3.c	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter	file:
Fts3SegFilter	tsrc/fts3Int.h	/^struct Fts3SegFilter {$/;"	s
Fts3SegFilter	tsrc/fts3Int.h	/^typedef struct Fts3SegFilter Fts3SegFilter;$/;"	t	typeref:struct:Fts3SegFilter
Fts3SegReader	ext/fts3/fts3Int.h	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader
Fts3SegReader	ext/fts3/fts3_write.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	sqlite3.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3SegReader	sqlite3.c	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader	file:
Fts3SegReader	tsrc/fts3Int.h	/^typedef struct Fts3SegReader Fts3SegReader;$/;"	t	typeref:struct:Fts3SegReader
Fts3SegReader	tsrc/fts3_write.c	/^struct Fts3SegReader {$/;"	s	file:
Fts3Table	ext/fts3/fts3Int.h	/^struct Fts3Table {$/;"	s
Fts3Table	ext/fts3/fts3Int.h	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table
Fts3Table	sqlite3.c	/^struct Fts3Table {$/;"	s	file:
Fts3Table	sqlite3.c	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table	file:
Fts3Table	tsrc/fts3Int.h	/^struct Fts3Table {$/;"	s
Fts3Table	tsrc/fts3Int.h	/^typedef struct Fts3Table Fts3Table;$/;"	t	typeref:struct:Fts3Table
Fts3TokenAndCost	ext/fts3/fts3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	ext/fts3/fts3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3TokenAndCost	sqlite3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	sqlite3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3TokenAndCost	tsrc/fts3.c	/^struct Fts3TokenAndCost {$/;"	s	file:
Fts3TokenAndCost	tsrc/fts3.c	/^typedef struct Fts3TokenAndCost Fts3TokenAndCost;$/;"	t	typeref:struct:Fts3TokenAndCost	file:
Fts3auxColstats	ext/fts3/fts3_aux.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxColstats	sqlite3.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxColstats	tsrc/fts3_aux.c	/^  struct Fts3auxColstats {$/;"	s	struct:Fts3auxCursor	file:
Fts3auxCursor	ext/fts3/fts3_aux.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	ext/fts3/fts3_aux.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxCursor	sqlite3.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	sqlite3.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxCursor	tsrc/fts3_aux.c	/^struct Fts3auxCursor {$/;"	s	file:
Fts3auxCursor	tsrc/fts3_aux.c	/^typedef struct Fts3auxCursor Fts3auxCursor;$/;"	t	typeref:struct:Fts3auxCursor	file:
Fts3auxTable	ext/fts3/fts3_aux.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	ext/fts3/fts3_aux.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
Fts3auxTable	sqlite3.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	sqlite3.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
Fts3auxTable	tsrc/fts3_aux.c	/^struct Fts3auxTable {$/;"	s	file:
Fts3auxTable	tsrc/fts3_aux.c	/^typedef struct Fts3auxTable Fts3auxTable;$/;"	t	typeref:struct:Fts3auxTable	file:
Fts3termCursor	ext/fts3/fts3_term.c	/^struct Fts3termCursor {$/;"	s	file:
Fts3termCursor	ext/fts3/fts3_term.c	/^typedef struct Fts3termCursor Fts3termCursor;$/;"	t	typeref:struct:Fts3termCursor	file:
Fts3termTable	ext/fts3/fts3_term.c	/^struct Fts3termTable {$/;"	s	file:
Fts3termTable	ext/fts3/fts3_term.c	/^typedef struct Fts3termTable Fts3termTable;$/;"	t	typeref:struct:Fts3termTable	file:
Fts3tokCursor	ext/fts3/fts3_tokenize_vtab.c	/^struct Fts3tokCursor {$/;"	s	file:
Fts3tokCursor	ext/fts3/fts3_tokenize_vtab.c	/^typedef struct Fts3tokCursor Fts3tokCursor;$/;"	t	typeref:struct:Fts3tokCursor	file:
Fts3tokCursor	sqlite3.c	/^struct Fts3tokCursor {$/;"	s	file:
Fts3tokCursor	sqlite3.c	/^typedef struct Fts3tokCursor Fts3tokCursor;$/;"	t	typeref:struct:Fts3tokCursor	file:
Fts3tokCursor	tsrc/fts3_tokenize_vtab.c	/^struct Fts3tokCursor {$/;"	s	file:
Fts3tokCursor	tsrc/fts3_tokenize_vtab.c	/^typedef struct Fts3tokCursor Fts3tokCursor;$/;"	t	typeref:struct:Fts3tokCursor	file:
Fts3tokTable	ext/fts3/fts3_tokenize_vtab.c	/^struct Fts3tokTable {$/;"	s	file:
Fts3tokTable	ext/fts3/fts3_tokenize_vtab.c	/^typedef struct Fts3tokTable Fts3tokTable;$/;"	t	typeref:struct:Fts3tokTable	file:
Fts3tokTable	sqlite3.c	/^struct Fts3tokTable {$/;"	s	file:
Fts3tokTable	sqlite3.c	/^typedef struct Fts3tokTable Fts3tokTable;$/;"	t	typeref:struct:Fts3tokTable	file:
Fts3tokTable	tsrc/fts3_tokenize_vtab.c	/^struct Fts3tokTable {$/;"	s	file:
Fts3tokTable	tsrc/fts3_tokenize_vtab.c	/^typedef struct Fts3tokTable Fts3tokTable;$/;"	t	typeref:struct:Fts3tokTable	file:
Fts5Auxdata	ext/fts5/fts5_main.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	ext/fts5/fts5_main.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxdata	fts5.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	fts5.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxdata	sqlite3.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	sqlite3.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxdata	tsrc/fts5.c	/^struct Fts5Auxdata {$/;"	s	file:
Fts5Auxdata	tsrc/fts5.c	/^typedef struct Fts5Auxdata Fts5Auxdata;$/;"	t	typeref:struct:Fts5Auxdata	file:
Fts5Auxiliary	ext/fts5/fts5_main.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	ext/fts5/fts5_main.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Auxiliary	fts5.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	fts5.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Auxiliary	sqlite3.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	sqlite3.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Auxiliary	tsrc/fts5.c	/^struct Fts5Auxiliary {$/;"	s	file:
Fts5Auxiliary	tsrc/fts5.c	/^typedef struct Fts5Auxiliary Fts5Auxiliary;$/;"	t	typeref:struct:Fts5Auxiliary	file:
Fts5Bm25Data	ext/fts5/fts5_aux.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	ext/fts5/fts5_aux.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Bm25Data	fts5.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	fts5.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Bm25Data	sqlite3.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	sqlite3.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Bm25Data	tsrc/fts5.c	/^struct Fts5Bm25Data {$/;"	s	file:
Fts5Bm25Data	tsrc/fts5.c	/^typedef struct Fts5Bm25Data Fts5Bm25Data;$/;"	t	typeref:struct:Fts5Bm25Data	file:
Fts5Buffer	ext/fts5/fts5Int.h	/^struct Fts5Buffer {$/;"	s
Fts5Buffer	ext/fts5/fts5Int.h	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer
Fts5Buffer	fts5.c	/^struct Fts5Buffer {$/;"	s	file:
Fts5Buffer	fts5.c	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer	file:
Fts5Buffer	sqlite3.c	/^struct Fts5Buffer {$/;"	s	file:
Fts5Buffer	sqlite3.c	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer	file:
Fts5Buffer	tsrc/fts5.c	/^struct Fts5Buffer {$/;"	s	file:
Fts5Buffer	tsrc/fts5.c	/^typedef struct Fts5Buffer Fts5Buffer;$/;"	t	typeref:struct:Fts5Buffer	file:
Fts5CResult	ext/fts5/fts5_index.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	ext/fts5/fts5_index.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5CResult	fts5.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	fts5.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5CResult	sqlite3.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	sqlite3.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5CResult	tsrc/fts5.c	/^struct Fts5CResult {$/;"	s	file:
Fts5CResult	tsrc/fts5.c	/^typedef struct Fts5CResult Fts5CResult;$/;"	t	typeref:struct:Fts5CResult	file:
Fts5Colset	ext/fts5/fts5Int.h	/^struct Fts5Colset {$/;"	s
Fts5Colset	ext/fts5/fts5Int.h	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset
Fts5Colset	fts5.c	/^struct Fts5Colset {$/;"	s	file:
Fts5Colset	fts5.c	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset	file:
Fts5Colset	sqlite3.c	/^struct Fts5Colset {$/;"	s	file:
Fts5Colset	sqlite3.c	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset	file:
Fts5Colset	tsrc/fts5.c	/^struct Fts5Colset {$/;"	s	file:
Fts5Colset	tsrc/fts5.c	/^typedef struct Fts5Colset Fts5Colset;$/;"	t	typeref:struct:Fts5Colset	file:
Fts5Config	ext/fts5/fts5Int.h	/^struct Fts5Config {$/;"	s
Fts5Config	ext/fts5/fts5Int.h	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config
Fts5Config	fts5.c	/^struct Fts5Config {$/;"	s	file:
Fts5Config	fts5.c	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config	file:
Fts5Config	sqlite3.c	/^struct Fts5Config {$/;"	s	file:
Fts5Config	sqlite3.c	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config	file:
Fts5Config	tsrc/fts5.c	/^struct Fts5Config {$/;"	s	file:
Fts5Config	tsrc/fts5.c	/^typedef struct Fts5Config Fts5Config;$/;"	t	typeref:struct:Fts5Config	file:
Fts5Context	ext/fts5/fts5.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Context	fts5.c	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context	file:
Fts5Context	fts5.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Context	sqlite3.c	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context	file:
Fts5Context	sqlite3.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Context	tsrc/fts5.c	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context	file:
Fts5Context	tsrc/fts5.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Context	tsrc/sqlite3.h	/^typedef struct Fts5Context Fts5Context;$/;"	t	typeref:struct:Fts5Context
Fts5Cursor	ext/fts5/fts5_main.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	ext/fts5/fts5_main.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Cursor	fts5.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	fts5.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Cursor	sqlite3.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	sqlite3.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Cursor	tsrc/fts5.c	/^struct Fts5Cursor {$/;"	s	file:
Fts5Cursor	tsrc/fts5.c	/^typedef struct Fts5Cursor Fts5Cursor;$/;"	t	typeref:struct:Fts5Cursor	file:
Fts5Data	ext/fts5/fts5_index.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	ext/fts5/fts5_index.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5Data	fts5.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	fts5.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5Data	sqlite3.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	sqlite3.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5Data	tsrc/fts5.c	/^struct Fts5Data {$/;"	s	file:
Fts5Data	tsrc/fts5.c	/^typedef struct Fts5Data Fts5Data;$/;"	t	typeref:struct:Fts5Data	file:
Fts5DlidxIter	ext/fts5/fts5_index.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	ext/fts5/fts5_index.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxIter	fts5.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	fts5.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxIter	sqlite3.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	sqlite3.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxIter	tsrc/fts5.c	/^struct Fts5DlidxIter {$/;"	s	file:
Fts5DlidxIter	tsrc/fts5.c	/^typedef struct Fts5DlidxIter Fts5DlidxIter;$/;"	t	typeref:struct:Fts5DlidxIter	file:
Fts5DlidxLvl	ext/fts5/fts5_index.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	ext/fts5/fts5_index.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxLvl	fts5.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	fts5.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxLvl	sqlite3.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	sqlite3.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxLvl	tsrc/fts5.c	/^struct Fts5DlidxLvl {$/;"	s	file:
Fts5DlidxLvl	tsrc/fts5.c	/^typedef struct Fts5DlidxLvl Fts5DlidxLvl;$/;"	t	typeref:struct:Fts5DlidxLvl	file:
Fts5DlidxWriter	ext/fts5/fts5_index.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	ext/fts5/fts5_index.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DlidxWriter	fts5.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	fts5.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DlidxWriter	sqlite3.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	sqlite3.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DlidxWriter	tsrc/fts5.c	/^struct Fts5DlidxWriter {$/;"	s	file:
Fts5DlidxWriter	tsrc/fts5.c	/^typedef struct Fts5DlidxWriter Fts5DlidxWriter;$/;"	t	typeref:struct:Fts5DlidxWriter	file:
Fts5DoclistIter	ext/fts5/fts5_index.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	ext/fts5/fts5_index.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5DoclistIter	fts5.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	fts5.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5DoclistIter	sqlite3.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	sqlite3.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5DoclistIter	tsrc/fts5.c	/^struct Fts5DoclistIter {$/;"	s	file:
Fts5DoclistIter	tsrc/fts5.c	/^typedef struct Fts5DoclistIter Fts5DoclistIter;$/;"	t	typeref:struct:Fts5DoclistIter	file:
Fts5Enum	ext/fts5/fts5_config.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	ext/fts5/fts5_config.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Enum	fts5.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	fts5.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Enum	sqlite3.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	sqlite3.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Enum	tsrc/fts5.c	/^struct Fts5Enum {$/;"	s	file:
Fts5Enum	tsrc/fts5.c	/^typedef struct Fts5Enum Fts5Enum;$/;"	t	typeref:struct:Fts5Enum	file:
Fts5Expr	ext/fts5/fts5Int.h	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr
Fts5Expr	ext/fts5/fts5_expr.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	fts5.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	fts5.c	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr	file:
Fts5Expr	sqlite3.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	sqlite3.c	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr	file:
Fts5Expr	tsrc/fts5.c	/^struct Fts5Expr {$/;"	s	file:
Fts5Expr	tsrc/fts5.c	/^typedef struct Fts5Expr Fts5Expr;$/;"	t	typeref:struct:Fts5Expr	file:
Fts5ExprCtx	ext/fts5/fts5_expr.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	ext/fts5/fts5_expr.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprCtx	fts5.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	fts5.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprCtx	sqlite3.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	sqlite3.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprCtx	tsrc/fts5.c	/^struct Fts5ExprCtx {$/;"	s	file:
Fts5ExprCtx	tsrc/fts5.c	/^typedef struct Fts5ExprCtx Fts5ExprCtx;$/;"	t	typeref:struct:Fts5ExprCtx	file:
Fts5ExprNearset	ext/fts5/fts5Int.h	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset
Fts5ExprNearset	ext/fts5/fts5_expr.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	fts5.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	fts5.c	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset	file:
Fts5ExprNearset	sqlite3.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	sqlite3.c	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset	file:
Fts5ExprNearset	tsrc/fts5.c	/^struct Fts5ExprNearset {$/;"	s	file:
Fts5ExprNearset	tsrc/fts5.c	/^typedef struct Fts5ExprNearset Fts5ExprNearset;$/;"	t	typeref:struct:Fts5ExprNearset	file:
Fts5ExprNode	ext/fts5/fts5Int.h	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode
Fts5ExprNode	ext/fts5/fts5_expr.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	fts5.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	fts5.c	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode	file:
Fts5ExprNode	sqlite3.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	sqlite3.c	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode	file:
Fts5ExprNode	tsrc/fts5.c	/^struct Fts5ExprNode {$/;"	s	file:
Fts5ExprNode	tsrc/fts5.c	/^typedef struct Fts5ExprNode Fts5ExprNode;$/;"	t	typeref:struct:Fts5ExprNode	file:
Fts5ExprPhrase	ext/fts5/fts5Int.h	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase
Fts5ExprPhrase	ext/fts5/fts5_expr.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	fts5.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	fts5.c	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase	file:
Fts5ExprPhrase	sqlite3.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	sqlite3.c	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase	file:
Fts5ExprPhrase	tsrc/fts5.c	/^struct Fts5ExprPhrase {$/;"	s	file:
Fts5ExprPhrase	tsrc/fts5.c	/^typedef struct Fts5ExprPhrase Fts5ExprPhrase;$/;"	t	typeref:struct:Fts5ExprPhrase	file:
Fts5ExprTerm	ext/fts5/fts5_expr.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	ext/fts5/fts5_expr.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExprTerm	fts5.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	fts5.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExprTerm	sqlite3.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	sqlite3.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExprTerm	tsrc/fts5.c	/^struct Fts5ExprTerm {$/;"	s	file:
Fts5ExprTerm	tsrc/fts5.c	/^typedef struct Fts5ExprTerm Fts5ExprTerm;$/;"	t	typeref:struct:Fts5ExprTerm	file:
Fts5ExtensionApi	ext/fts5/fts5.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	ext/fts5/fts5.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5ExtensionApi	fts5.c	/^struct Fts5ExtensionApi {$/;"	s	file:
Fts5ExtensionApi	fts5.c	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi	file:
Fts5ExtensionApi	fts5.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	fts5.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5ExtensionApi	sqlite3.c	/^struct Fts5ExtensionApi {$/;"	s	file:
Fts5ExtensionApi	sqlite3.c	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi	file:
Fts5ExtensionApi	sqlite3.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	sqlite3.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5ExtensionApi	tsrc/fts5.c	/^struct Fts5ExtensionApi {$/;"	s	file:
Fts5ExtensionApi	tsrc/fts5.c	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi	file:
Fts5ExtensionApi	tsrc/fts5.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	tsrc/fts5.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5ExtensionApi	tsrc/sqlite3.h	/^struct Fts5ExtensionApi {$/;"	s
Fts5ExtensionApi	tsrc/sqlite3.h	/^typedef struct Fts5ExtensionApi Fts5ExtensionApi;$/;"	t	typeref:struct:Fts5ExtensionApi
Fts5FlushCtx	ext/fts5/fts5_index.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	ext/fts5/fts5_index.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5FlushCtx	fts5.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	fts5.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5FlushCtx	sqlite3.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	sqlite3.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5FlushCtx	tsrc/fts5.c	/^struct Fts5FlushCtx {$/;"	s	file:
Fts5FlushCtx	tsrc/fts5.c	/^typedef struct Fts5FlushCtx Fts5FlushCtx;$/;"	t	typeref:struct:Fts5FlushCtx	file:
Fts5Global	ext/fts5/fts5Int.h	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global
Fts5Global	ext/fts5/fts5_main.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	fts5.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	fts5.c	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global	file:
Fts5Global	sqlite3.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	sqlite3.c	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global	file:
Fts5Global	tsrc/fts5.c	/^struct Fts5Global {$/;"	s	file:
Fts5Global	tsrc/fts5.c	/^typedef struct Fts5Global Fts5Global;$/;"	t	typeref:struct:Fts5Global	file:
Fts5Hash	ext/fts5/fts5Int.h	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash
Fts5Hash	ext/fts5/fts5_hash.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	fts5.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	fts5.c	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash	file:
Fts5Hash	sqlite3.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	sqlite3.c	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash	file:
Fts5Hash	tsrc/fts5.c	/^struct Fts5Hash {$/;"	s	file:
Fts5Hash	tsrc/fts5.c	/^typedef struct Fts5Hash Fts5Hash;$/;"	t	typeref:struct:Fts5Hash	file:
Fts5HashEntry	ext/fts5/fts5_hash.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	ext/fts5/fts5_hash.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5HashEntry	fts5.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	fts5.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5HashEntry	sqlite3.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	sqlite3.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5HashEntry	tsrc/fts5.c	/^struct Fts5HashEntry {$/;"	s	file:
Fts5HashEntry	tsrc/fts5.c	/^typedef struct Fts5HashEntry Fts5HashEntry;$/;"	t	typeref:struct:Fts5HashEntry	file:
Fts5Index	ext/fts5/fts5Int.h	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index
Fts5Index	ext/fts5/fts5_index.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	fts5.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	fts5.c	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index	file:
Fts5Index	sqlite3.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	sqlite3.c	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index	file:
Fts5Index	tsrc/fts5.c	/^struct Fts5Index {$/;"	s	file:
Fts5Index	tsrc/fts5.c	/^typedef struct Fts5Index Fts5Index;$/;"	t	typeref:struct:Fts5Index	file:
Fts5IndexIter	ext/fts5/fts5Int.h	/^struct Fts5IndexIter {$/;"	s
Fts5IndexIter	ext/fts5/fts5Int.h	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter
Fts5IndexIter	fts5.c	/^struct Fts5IndexIter {$/;"	s	file:
Fts5IndexIter	fts5.c	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter	file:
Fts5IndexIter	sqlite3.c	/^struct Fts5IndexIter {$/;"	s	file:
Fts5IndexIter	sqlite3.c	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter	file:
Fts5IndexIter	tsrc/fts5.c	/^struct Fts5IndexIter {$/;"	s	file:
Fts5IndexIter	tsrc/fts5.c	/^typedef struct Fts5IndexIter Fts5IndexIter;$/;"	t	typeref:struct:Fts5IndexIter	file:
Fts5InsertCtx	ext/fts5/fts5_storage.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	ext/fts5/fts5_storage.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5InsertCtx	fts5.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	fts5.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5InsertCtx	sqlite3.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	sqlite3.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5InsertCtx	tsrc/fts5.c	/^struct Fts5InsertCtx {$/;"	s	file:
Fts5InsertCtx	tsrc/fts5.c	/^typedef struct Fts5InsertCtx Fts5InsertCtx;$/;"	t	typeref:struct:Fts5InsertCtx	file:
Fts5IntegrityCtx	ext/fts5/fts5_storage.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	ext/fts5/fts5_storage.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5IntegrityCtx	fts5.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	fts5.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5IntegrityCtx	sqlite3.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	sqlite3.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5IntegrityCtx	tsrc/fts5.c	/^struct Fts5IntegrityCtx {$/;"	s	file:
Fts5IntegrityCtx	tsrc/fts5.c	/^typedef struct Fts5IntegrityCtx Fts5IntegrityCtx;$/;"	t	typeref:struct:Fts5IntegrityCtx	file:
Fts5Iter	ext/fts5/fts5_index.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	ext/fts5/fts5_index.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5Iter	fts5.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	fts5.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5Iter	sqlite3.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	sqlite3.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5Iter	tsrc/fts5.c	/^struct Fts5Iter {$/;"	s	file:
Fts5Iter	tsrc/fts5.c	/^typedef struct Fts5Iter Fts5Iter;$/;"	t	typeref:struct:Fts5Iter	file:
Fts5LookaheadReader	ext/fts5/fts5_expr.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	ext/fts5/fts5_expr.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5LookaheadReader	fts5.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	fts5.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5LookaheadReader	sqlite3.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	sqlite3.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5LookaheadReader	tsrc/fts5.c	/^struct Fts5LookaheadReader {$/;"	s	file:
Fts5LookaheadReader	tsrc/fts5.c	/^typedef struct Fts5LookaheadReader Fts5LookaheadReader;$/;"	t	typeref:struct:Fts5LookaheadReader	file:
Fts5MatchPhrase	ext/fts5/fts5_main.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5MatchPhrase	fts5.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5MatchPhrase	sqlite3.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5MatchPhrase	tsrc/fts5.c	/^struct Fts5MatchPhrase {$/;"	s	file:
Fts5MatchinfoCtx	ext/fts5/fts5_test_mi.c	/^struct Fts5MatchinfoCtx {$/;"	s	file:
Fts5MatchinfoCtx	ext/fts5/fts5_test_mi.c	/^typedef struct Fts5MatchinfoCtx Fts5MatchinfoCtx;$/;"	t	typeref:struct:Fts5MatchinfoCtx	file:
Fts5NearTrimmer	ext/fts5/fts5_expr.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	ext/fts5/fts5_expr.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NearTrimmer	fts5.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	fts5.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NearTrimmer	sqlite3.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	sqlite3.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NearTrimmer	tsrc/fts5.c	/^struct Fts5NearTrimmer {$/;"	s	file:
Fts5NearTrimmer	tsrc/fts5.c	/^typedef struct Fts5NearTrimmer Fts5NearTrimmer;$/;"	t	typeref:struct:Fts5NearTrimmer	file:
Fts5NodeIsString	ext/fts5/fts5_expr.c	77;"	d	file:
Fts5NodeIsString	fts5.c	4701;"	d	file:
Fts5NodeIsString	sqlite3.c	181835;"	d	file:
Fts5NodeIsString	tsrc/fts5.c	4701;"	d	file:
Fts5PageWriter	ext/fts5/fts5_index.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	ext/fts5/fts5_index.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5PageWriter	fts5.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	fts5.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5PageWriter	sqlite3.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	sqlite3.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5PageWriter	tsrc/fts5.c	/^struct Fts5PageWriter {$/;"	s	file:
Fts5PageWriter	tsrc/fts5.c	/^typedef struct Fts5PageWriter Fts5PageWriter;$/;"	t	typeref:struct:Fts5PageWriter	file:
Fts5Parse	ext/fts5/fts5Int.h	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse
Fts5Parse	ext/fts5/fts5_expr.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	fts5.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	fts5.c	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse	file:
Fts5Parse	sqlite3.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	sqlite3.c	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse	file:
Fts5Parse	tsrc/fts5.c	/^struct Fts5Parse {$/;"	s	file:
Fts5Parse	tsrc/fts5.c	/^typedef struct Fts5Parse Fts5Parse;$/;"	t	typeref:struct:Fts5Parse	file:
Fts5PhraseIter	ext/fts5/fts5.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	ext/fts5/fts5.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PhraseIter	fts5.c	/^struct Fts5PhraseIter {$/;"	s	file:
Fts5PhraseIter	fts5.c	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter	file:
Fts5PhraseIter	fts5.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	fts5.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PhraseIter	sqlite3.c	/^struct Fts5PhraseIter {$/;"	s	file:
Fts5PhraseIter	sqlite3.c	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter	file:
Fts5PhraseIter	sqlite3.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	sqlite3.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PhraseIter	tsrc/fts5.c	/^struct Fts5PhraseIter {$/;"	s	file:
Fts5PhraseIter	tsrc/fts5.c	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter	file:
Fts5PhraseIter	tsrc/fts5.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	tsrc/fts5.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PhraseIter	tsrc/sqlite3.h	/^struct Fts5PhraseIter {$/;"	s
Fts5PhraseIter	tsrc/sqlite3.h	/^typedef struct Fts5PhraseIter Fts5PhraseIter;$/;"	t	typeref:struct:Fts5PhraseIter
Fts5PoslistPopulator	ext/fts5/fts5Int.h	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator
Fts5PoslistPopulator	ext/fts5/fts5_expr.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	fts5.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	fts5.c	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator	file:
Fts5PoslistPopulator	sqlite3.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	sqlite3.c	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator	file:
Fts5PoslistPopulator	tsrc/fts5.c	/^struct Fts5PoslistPopulator {$/;"	s	file:
Fts5PoslistPopulator	tsrc/fts5.c	/^typedef struct Fts5PoslistPopulator Fts5PoslistPopulator;$/;"	t	typeref:struct:Fts5PoslistPopulator	file:
Fts5PoslistReader	ext/fts5/fts5Int.h	/^struct Fts5PoslistReader {$/;"	s
Fts5PoslistReader	ext/fts5/fts5Int.h	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader
Fts5PoslistReader	fts5.c	/^struct Fts5PoslistReader {$/;"	s	file:
Fts5PoslistReader	fts5.c	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader	file:
Fts5PoslistReader	sqlite3.c	/^struct Fts5PoslistReader {$/;"	s	file:
Fts5PoslistReader	sqlite3.c	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader	file:
Fts5PoslistReader	tsrc/fts5.c	/^struct Fts5PoslistReader {$/;"	s	file:
Fts5PoslistReader	tsrc/fts5.c	/^typedef struct Fts5PoslistReader Fts5PoslistReader;$/;"	t	typeref:struct:Fts5PoslistReader	file:
Fts5PoslistWriter	ext/fts5/fts5Int.h	/^struct Fts5PoslistWriter {$/;"	s
Fts5PoslistWriter	ext/fts5/fts5Int.h	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter
Fts5PoslistWriter	fts5.c	/^struct Fts5PoslistWriter {$/;"	s	file:
Fts5PoslistWriter	fts5.c	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter	file:
Fts5PoslistWriter	sqlite3.c	/^struct Fts5PoslistWriter {$/;"	s	file:
Fts5PoslistWriter	sqlite3.c	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter	file:
Fts5PoslistWriter	tsrc/fts5.c	/^struct Fts5PoslistWriter {$/;"	s	file:
Fts5PoslistWriter	tsrc/fts5.c	/^typedef struct Fts5PoslistWriter Fts5PoslistWriter;$/;"	t	typeref:struct:Fts5PoslistWriter	file:
Fts5SegIter	ext/fts5/fts5_index.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	ext/fts5/fts5_index.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegIter	fts5.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	fts5.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegIter	sqlite3.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	sqlite3.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegIter	tsrc/fts5.c	/^struct Fts5SegIter {$/;"	s	file:
Fts5SegIter	tsrc/fts5.c	/^typedef struct Fts5SegIter Fts5SegIter;$/;"	t	typeref:struct:Fts5SegIter	file:
Fts5SegWriter	ext/fts5/fts5_index.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	ext/fts5/fts5_index.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5SegWriter	fts5.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	fts5.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5SegWriter	sqlite3.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	sqlite3.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5SegWriter	tsrc/fts5.c	/^struct Fts5SegWriter {$/;"	s	file:
Fts5SegWriter	tsrc/fts5.c	/^typedef struct Fts5SegWriter Fts5SegWriter;$/;"	t	typeref:struct:Fts5SegWriter	file:
Fts5Sorter	ext/fts5/fts5_main.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	ext/fts5/fts5_main.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Sorter	fts5.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	fts5.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Sorter	sqlite3.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	sqlite3.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Sorter	tsrc/fts5.c	/^struct Fts5Sorter {$/;"	s	file:
Fts5Sorter	tsrc/fts5.c	/^typedef struct Fts5Sorter Fts5Sorter;$/;"	t	typeref:struct:Fts5Sorter	file:
Fts5Storage	ext/fts5/fts5Int.h	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage
Fts5Storage	ext/fts5/fts5_storage.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	fts5.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	fts5.c	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage	file:
Fts5Storage	sqlite3.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	sqlite3.c	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage	file:
Fts5Storage	tsrc/fts5.c	/^struct Fts5Storage {$/;"	s	file:
Fts5Storage	tsrc/fts5.c	/^typedef struct Fts5Storage Fts5Storage;$/;"	t	typeref:struct:Fts5Storage	file:
Fts5Structure	ext/fts5/fts5_index.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	ext/fts5/fts5_index.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5Structure	fts5.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	fts5.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5Structure	sqlite3.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	sqlite3.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5Structure	tsrc/fts5.c	/^struct Fts5Structure {$/;"	s	file:
Fts5Structure	tsrc/fts5.c	/^typedef struct Fts5Structure Fts5Structure;$/;"	t	typeref:struct:Fts5Structure	file:
Fts5StructureLevel	ext/fts5/fts5_index.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	ext/fts5/fts5_index.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureLevel	fts5.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	fts5.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureLevel	sqlite3.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	sqlite3.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureLevel	tsrc/fts5.c	/^struct Fts5StructureLevel {$/;"	s	file:
Fts5StructureLevel	tsrc/fts5.c	/^typedef struct Fts5StructureLevel Fts5StructureLevel;$/;"	t	typeref:struct:Fts5StructureLevel	file:
Fts5StructureSegment	ext/fts5/fts5_index.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	ext/fts5/fts5_index.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5StructureSegment	fts5.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	fts5.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5StructureSegment	sqlite3.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	sqlite3.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5StructureSegment	tsrc/fts5.c	/^struct Fts5StructureSegment {$/;"	s	file:
Fts5StructureSegment	tsrc/fts5.c	/^typedef struct Fts5StructureSegment Fts5StructureSegment;$/;"	t	typeref:struct:Fts5StructureSegment	file:
Fts5Table	ext/fts5/fts5_main.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	ext/fts5/fts5_main.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Table	fts5.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	fts5.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Table	sqlite3.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	sqlite3.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Table	tsrc/fts5.c	/^struct Fts5Table {$/;"	s	file:
Fts5Table	tsrc/fts5.c	/^typedef struct Fts5Table Fts5Table;$/;"	t	typeref:struct:Fts5Table	file:
Fts5Termset	ext/fts5/fts5Int.h	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset
Fts5Termset	ext/fts5/fts5_buffer.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	fts5.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	fts5.c	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset	file:
Fts5Termset	sqlite3.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	sqlite3.c	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset	file:
Fts5Termset	tsrc/fts5.c	/^struct Fts5Termset {$/;"	s	file:
Fts5Termset	tsrc/fts5.c	/^typedef struct Fts5Termset Fts5Termset;$/;"	t	typeref:struct:Fts5Termset	file:
Fts5TermsetEntry	ext/fts5/fts5_buffer.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	ext/fts5/fts5_buffer.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5TermsetEntry	fts5.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	fts5.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5TermsetEntry	sqlite3.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	sqlite3.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5TermsetEntry	tsrc/fts5.c	/^struct Fts5TermsetEntry {$/;"	s	file:
Fts5TermsetEntry	tsrc/fts5.c	/^typedef struct Fts5TermsetEntry Fts5TermsetEntry;$/;"	t	typeref:struct:Fts5TermsetEntry	file:
Fts5Token	ext/fts5/fts5Int.h	/^struct Fts5Token {$/;"	s
Fts5Token	ext/fts5/fts5Int.h	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token
Fts5Token	fts5.c	/^struct Fts5Token {$/;"	s	file:
Fts5Token	fts5.c	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token	file:
Fts5Token	sqlite3.c	/^struct Fts5Token {$/;"	s	file:
Fts5Token	sqlite3.c	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token	file:
Fts5Token	tsrc/fts5.c	/^struct Fts5Token {$/;"	s	file:
Fts5Token	tsrc/fts5.c	/^typedef struct Fts5Token Fts5Token;$/;"	t	typeref:struct:Fts5Token	file:
Fts5Tokenizer	ext/fts5/fts5.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5Tokenizer	fts5.c	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer	file:
Fts5Tokenizer	fts5.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5Tokenizer	sqlite3.c	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer	file:
Fts5Tokenizer	sqlite3.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5Tokenizer	tsrc/fts5.c	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer	file:
Fts5Tokenizer	tsrc/fts5.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5Tokenizer	tsrc/sqlite3.h	/^typedef struct Fts5Tokenizer Fts5Tokenizer;$/;"	t	typeref:struct:Fts5Tokenizer
Fts5TokenizerModule	ext/fts5/fts5_main.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	ext/fts5/fts5_main.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TokenizerModule	fts5.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	fts5.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TokenizerModule	sqlite3.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	sqlite3.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TokenizerModule	tsrc/fts5.c	/^struct Fts5TokenizerModule {$/;"	s	file:
Fts5TokenizerModule	tsrc/fts5.c	/^typedef struct Fts5TokenizerModule Fts5TokenizerModule;$/;"	t	typeref:struct:Fts5TokenizerModule	file:
Fts5TransactionState	ext/fts5/fts5_main.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5TransactionState	fts5.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5TransactionState	sqlite3.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5TransactionState	tsrc/fts5.c	/^struct Fts5TransactionState {$/;"	s	file:
Fts5VocabCursor	ext/fts5/fts5_vocab.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	ext/fts5/fts5_vocab.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabCursor	fts5.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	fts5.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabCursor	sqlite3.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	sqlite3.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabCursor	tsrc/fts5.c	/^struct Fts5VocabCursor {$/;"	s	file:
Fts5VocabCursor	tsrc/fts5.c	/^typedef struct Fts5VocabCursor Fts5VocabCursor;$/;"	t	typeref:struct:Fts5VocabCursor	file:
Fts5VocabTable	ext/fts5/fts5_vocab.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	ext/fts5/fts5_vocab.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
Fts5VocabTable	fts5.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	fts5.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
Fts5VocabTable	sqlite3.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	sqlite3.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
Fts5VocabTable	tsrc/fts5.c	/^struct Fts5VocabTable {$/;"	s	file:
Fts5VocabTable	tsrc/fts5.c	/^typedef struct Fts5VocabTable Fts5VocabTable;$/;"	t	typeref:struct:Fts5VocabTable	file:
Fts5tcl_Init	ext/fts5/fts5_tcl.c	/^int Fts5tcl_Init(Tcl_Interp *interp){$/;"	f
Fts5tokCursor	ext/fts5/fts5_test_tok.c	/^struct Fts5tokCursor {$/;"	s	file:
Fts5tokCursor	ext/fts5/fts5_test_tok.c	/^typedef struct Fts5tokCursor Fts5tokCursor;$/;"	t	typeref:struct:Fts5tokCursor	file:
Fts5tokRow	ext/fts5/fts5_test_tok.c	/^struct Fts5tokRow {$/;"	s	file:
Fts5tokRow	ext/fts5/fts5_test_tok.c	/^typedef struct Fts5tokRow Fts5tokRow;$/;"	t	typeref:struct:Fts5tokRow	file:
Fts5tokTable	ext/fts5/fts5_test_tok.c	/^struct Fts5tokTable {$/;"	s	file:
Fts5tokTable	ext/fts5/fts5_test_tok.c	/^typedef struct Fts5tokTable Fts5tokTable;$/;"	t	typeref:struct:Fts5tokTable	file:
FuncDef	sqlite3.c	/^struct FuncDef {$/;"	s	file:
FuncDef	sqlite3.c	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef	file:
FuncDef	src/sqliteInt.h	/^struct FuncDef {$/;"	s
FuncDef	src/sqliteInt.h	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef
FuncDef	tsrc/sqliteInt.h	/^struct FuncDef {$/;"	s
FuncDef	tsrc/sqliteInt.h	/^typedef struct FuncDef FuncDef;$/;"	t	typeref:struct:FuncDef
FuncDefHash	sqlite3.c	/^struct FuncDefHash {$/;"	s	file:
FuncDefHash	sqlite3.c	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash	file:
FuncDefHash	src/sqliteInt.h	/^struct FuncDefHash {$/;"	s
FuncDefHash	src/sqliteInt.h	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash
FuncDefHash	tsrc/sqliteInt.h	/^struct FuncDefHash {$/;"	s
FuncDefHash	tsrc/sqliteInt.h	/^typedef struct FuncDefHash FuncDefHash;$/;"	t	typeref:struct:FuncDefHash
FuncDestructor	sqlite3.c	/^struct FuncDestructor {$/;"	s	file:
FuncDestructor	sqlite3.c	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor	file:
FuncDestructor	src/sqliteInt.h	/^struct FuncDestructor {$/;"	s
FuncDestructor	src/sqliteInt.h	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor
FuncDestructor	tsrc/sqliteInt.h	/^struct FuncDestructor {$/;"	s
FuncDestructor	tsrc/sqliteInt.h	/^typedef struct FuncDestructor FuncDestructor;$/;"	t	typeref:struct:FuncDestructor
GCC_VERSION	sqlite3.c	209;"	d	file:
GCC_VERSION	sqlite3.c	211;"	d	file:
GCC_VERSION	src/sqliteInt.h	108;"	d
GCC_VERSION	src/sqliteInt.h	110;"	d
GCC_VERSION	tsrc/sqliteInt.h	108;"	d
GCC_VERSION	tsrc/sqliteInt.h	110;"	d
GCOV_CFLAGS1	Makefile	/^GCOV_CFLAGS1 = -DSQLITE_COVERAGE_TEST=1 -fprofile-arcs -ftest-coverage$/;"	m
GCOV_LDFLAGS1	Makefile	/^GCOV_LDFLAGS1 = -lgcov$/;"	m
GETPID	mptest/mptest.c	55;"	d	file:
GETPID	mptest/mptest.c	57;"	d	file:
GETPID	src/tclsqlite.c	62;"	d	file:
GETPID	src/tclsqlite.c	68;"	d	file:
GETPID	tsrc/tclsqlite.c	62;"	d	file:
GETPID	tsrc/tclsqlite.c	68;"	d	file:
GETPROCTIMES	shell.c	/^typedef BOOL (WINAPI *GETPROCTIMES)(HANDLE, LPFILETIME, LPFILETIME,$/;"	t	file:
GETPROCTIMES	src/shell.c	/^typedef BOOL (WINAPI *GETPROCTIMES)(HANDLE, LPFILETIME, LPFILETIME,$/;"	t	file:
GETPROCTIMES	tsrc/shell.c	/^typedef BOOL (WINAPI *GETPROCTIMES)(HANDLE, LPFILETIME, LPFILETIME,$/;"	t	file:
GETVARINT_INIT	ext/fts3/fts3.c	343;"	d	file:
GETVARINT_INIT	sqlite3.c	142096;"	d	file:
GETVARINT_INIT	tsrc/fts3.c	343;"	d	file:
GETVARINT_STEP	ext/fts3/fts3.c	340;"	d	file:
GETVARINT_STEP	sqlite3.c	142093;"	d	file:
GETVARINT_STEP	tsrc/fts3.c	340;"	d	file:
GLOBAL	sqlite3.c	11903;"	d	file:
GLOBAL	sqlite3.c	11909;"	d	file:
GLOBAL	src/sqliteInt.h	969;"	d
GLOBAL	src/sqliteInt.h	975;"	d
GLOBAL	tsrc/sqliteInt.h	969;"	d
GLOBAL	tsrc/sqliteInt.h	975;"	d
GState	tool/offsets.c	/^struct GState {$/;"	s	file:
GState	tool/offsets.c	/^typedef struct GState GState;$/;"	t	typeref:struct:GState	file:
GetFile	tool/GetFile.cs	/^namespace GetFile$/;"	n
GetFileName	tool/GetFile.cs	/^        private static string GetFileName($/;"	m	class:GetFile.Program	file:
GetVersionFromFile	autoconf/tea/win/nmakehlp.c	/^GetVersionFromFile($/;"	f	file:
Global	mptest/mptest.c	/^static struct Global {$/;"	s	file:
Global	test/speedtest1.c	/^static struct Global {$/;"	s	file:
GlobalData	tool/showdb.c	/^static struct GlobalData {$/;"	s	file:
GlobalVars	test/fuzzcheck.c	/^static struct GlobalVars {$/;"	s	file:
GlobalVars	tool/dbhash.c	/^struct GlobalVars {$/;"	s	file:
GlobalVars	tool/fuzzershell.c	/^struct GlobalVars {$/;"	s	file:
GlobalVars	tool/sqldiff.c	/^struct GlobalVars {$/;"	s	file:
HANDLE_TO_WINFILE	sqlite3.c	39286;"	d	file:
HANDLE_TO_WINFILE	src/os_win.c	2170;"	d	file:
HANDLE_TO_WINFILE	tsrc/os_win.c	2170;"	d	file:
HASHSIZE	ext/rtree/rtree.c	99;"	d	file:
HASHSIZE	sqlite3.c	160062;"	d	file:
HASHSIZE	tsrc/rtree.c	99;"	d	file:
HASHTABLE_HASH_1	sqlite3.c	54191;"	d	file:
HASHTABLE_HASH_1	src/wal.c	515;"	d	file:
HASHTABLE_HASH_1	tsrc/wal.c	515;"	d	file:
HASHTABLE_NPAGE	sqlite3.c	54190;"	d	file:
HASHTABLE_NPAGE	src/wal.c	514;"	d	file:
HASHTABLE_NPAGE	tsrc/wal.c	514;"	d	file:
HASHTABLE_NPAGE_ONE	sqlite3.c	54199;"	d	file:
HASHTABLE_NPAGE_ONE	src/wal.c	523;"	d	file:
HASHTABLE_NPAGE_ONE	tsrc/wal.c	523;"	d	file:
HASHTABLE_NSLOT	sqlite3.c	54192;"	d	file:
HASHTABLE_NSLOT	src/wal.c	516;"	d	file:
HASHTABLE_NSLOT	tsrc/wal.c	516;"	d	file:
HASH_APPEND	ext/session/sqlite3session.c	411;"	d	file:
HASH_APPEND	sqlite3.c	170755;"	d	file:
HASH_APPEND	tsrc/sqlite3session.c	411;"	d	file:
HASH_BINARY	ext/fts1/ft_hash.h	78;"	d
HASH_STRING	ext/fts1/ft_hash.h	77;"	d
HAS_TIMER	shell.c	237;"	d	file:
HAS_TIMER	shell.c	314;"	d	file:
HAS_TIMER	shell.c	319;"	d	file:
HAS_TIMER	src/shell.c	237;"	d	file:
HAS_TIMER	src/shell.c	314;"	d	file:
HAS_TIMER	src/shell.c	319;"	d	file:
HAS_TIMER	tsrc/shell.c	237;"	d	file:
HAS_TIMER	tsrc/shell.c	314;"	d	file:
HAS_TIMER	tsrc/shell.c	319;"	d	file:
HAS_UPDATE_HOOK	sqlite3.c	77133;"	d	file:
HAS_UPDATE_HOOK	sqlite3.c	77135;"	d	file:
HAS_UPDATE_HOOK	src/vdbe.c	94;"	d	file:
HAS_UPDATE_HOOK	src/vdbe.c	96;"	d	file:
HAS_UPDATE_HOOK	tsrc/vdbe.c	94;"	d	file:
HAS_UPDATE_HOOK	tsrc/vdbe.c	96;"	d	file:
HAVE_DLFCN_H	config.h	5;"	d
HAVE_DLFCN_H	tsrc/config.h	5;"	d
HAVE_FCHOWN	sqlite3.c	167;"	d	file:
HAVE_FCHOWN	src/vxworks.h	29;"	d
HAVE_FCHOWN	tsrc/vxworks.h	29;"	d
HAVE_FDATASYNC	config.h	8;"	d
HAVE_FDATASYNC	tsrc/config.h	8;"	d
HAVE_FULLFSYNC	sqlite3.c	32708;"	d	file:
HAVE_FULLFSYNC	sqlite3.c	32710;"	d	file:
HAVE_FULLFSYNC	src/os_unix.c	3383;"	d	file:
HAVE_FULLFSYNC	src/os_unix.c	3385;"	d	file:
HAVE_FULLFSYNC	tsrc/os_unix.c	3383;"	d	file:
HAVE_FULLFSYNC	tsrc/os_unix.c	3385;"	d	file:
HAVE_GETHOSTUUID	sqlite3.c	29238;"	d	file:
HAVE_GETHOSTUUID	src/os_unix.c	111;"	d	file:
HAVE_GETHOSTUUID	tsrc/os_unix.c	111;"	d	file:
HAVE_GMTIME_R	config.h	11;"	d
HAVE_GMTIME_R	tsrc/config.h	11;"	d
HAVE_INT16_T	config.h	14;"	d
HAVE_INT16_T	tsrc/config.h	14;"	d
HAVE_INT32_T	config.h	17;"	d
HAVE_INT32_T	tsrc/config.h	17;"	d
HAVE_INT64_T	config.h	20;"	d
HAVE_INT64_T	tsrc/config.h	20;"	d
HAVE_INT8_T	config.h	23;"	d
HAVE_INT8_T	tsrc/config.h	23;"	d
HAVE_INTPTR_T	config.h	26;"	d
HAVE_INTPTR_T	tsrc/config.h	26;"	d
HAVE_INTTYPES_H	config.h	29;"	d
HAVE_INTTYPES_H	tsrc/config.h	29;"	d
HAVE_ISNAN	config.h	32;"	d
HAVE_ISNAN	tsrc/config.h	32;"	d
HAVE_LOCALTIME_R	config.h	35;"	d
HAVE_LOCALTIME_R	tsrc/config.h	35;"	d
HAVE_LOCALTIME_S	sqlite3.c	18968;"	d	file:
HAVE_LOCALTIME_S	sqlite3.c	18969;"	d	file:
HAVE_LOCALTIME_S	src/date.c	445;"	d	file:
HAVE_LOCALTIME_S	src/date.c	446;"	d	file:
HAVE_LOCALTIME_S	tsrc/date.c	445;"	d	file:
HAVE_LOCALTIME_S	tsrc/date.c	446;"	d	file:
HAVE_LSTAT	sqlite3.c	169;"	d	file:
HAVE_LSTAT	src/vxworks.h	31;"	d
HAVE_LSTAT	tsrc/vxworks.h	31;"	d
HAVE_MALLOC_H	config.h	41;"	d
HAVE_MALLOC_H	tsrc/config.h	41;"	d
HAVE_MALLOC_USABLE_SIZE	config.h	44;"	d
HAVE_MALLOC_USABLE_SIZE	tsrc/config.h	44;"	d
HAVE_MEMORY_H	config.h	47;"	d
HAVE_MEMORY_H	tsrc/config.h	47;"	d
HAVE_MREMAP	sqlite3.c	29642;"	d	file:
HAVE_MREMAP	sqlite3.c	29644;"	d	file:
HAVE_MREMAP	src/os_unix.c	317;"	d	file:
HAVE_MREMAP	src/os_unix.c	319;"	d	file:
HAVE_MREMAP	tsrc/os_unix.c	317;"	d	file:
HAVE_MREMAP	tsrc/os_unix.c	319;"	d	file:
HAVE_PREAD	config.h	50;"	d
HAVE_PREAD	sqlite3.c	29203;"	d	file:
HAVE_PREAD	src/os_unix.c	76;"	d	file:
HAVE_PREAD	tsrc/config.h	50;"	d
HAVE_PREAD	tsrc/os_unix.c	76;"	d	file:
HAVE_PREAD64	config.h	53;"	d
HAVE_PREAD64	tsrc/config.h	53;"	d
HAVE_PWRITE	config.h	56;"	d
HAVE_PWRITE	sqlite3.c	29204;"	d	file:
HAVE_PWRITE	src/os_unix.c	77;"	d	file:
HAVE_PWRITE	tsrc/config.h	56;"	d
HAVE_PWRITE	tsrc/os_unix.c	77;"	d	file:
HAVE_PWRITE64	config.h	59;"	d
HAVE_PWRITE64	tsrc/config.h	59;"	d
HAVE_READLINK	sqlite3.c	168;"	d	file:
HAVE_READLINK	src/vxworks.h	30;"	d
HAVE_READLINK	tsrc/vxworks.h	30;"	d
HAVE_STDINT_H	config.h	62;"	d
HAVE_STDINT_H	tsrc/config.h	62;"	d
HAVE_STDLIB_H	config.h	65;"	d
HAVE_STDLIB_H	tsrc/config.h	65;"	d
HAVE_STRCHRNUL	config.h	68;"	d
HAVE_STRCHRNUL	tsrc/config.h	68;"	d
HAVE_STRINGS_H	config.h	71;"	d
HAVE_STRINGS_H	tsrc/config.h	71;"	d
HAVE_STRING_H	config.h	74;"	d
HAVE_STRING_H	tsrc/config.h	74;"	d
HAVE_SYS_STAT_H	config.h	77;"	d
HAVE_SYS_STAT_H	tsrc/config.h	77;"	d
HAVE_SYS_TYPES_H	config.h	80;"	d
HAVE_SYS_TYPES_H	tsrc/config.h	80;"	d
HAVE_TCL	Makefile	/^HAVE_TCL = $/;"	m
HAVE_UINT16_T	config.h	83;"	d
HAVE_UINT16_T	tsrc/config.h	83;"	d
HAVE_UINT32_T	config.h	86;"	d
HAVE_UINT32_T	tsrc/config.h	86;"	d
HAVE_UINT64_T	config.h	89;"	d
HAVE_UINT64_T	tsrc/config.h	89;"	d
HAVE_UINT8_T	config.h	92;"	d
HAVE_UINT8_T	tsrc/config.h	92;"	d
HAVE_UINTPTR_T	config.h	95;"	d
HAVE_UINTPTR_T	tsrc/config.h	95;"	d
HAVE_UNISTD_H	config.h	98;"	d
HAVE_UNISTD_H	tsrc/config.h	98;"	d
HAVE_USLEEP	config.h	101;"	d
HAVE_USLEEP	tsrc/config.h	101;"	d
HAVE_UTIME	config.h	104;"	d
HAVE_UTIME	sqlite3.c	163;"	d	file:
HAVE_UTIME	src/vxworks.h	25;"	d
HAVE_UTIME	tsrc/config.h	104;"	d
HAVE_UTIME	tsrc/vxworks.h	25;"	d
HDR	Makefile	/^HDR = \\$/;"	m
HDR	main.mk	/^HDR = \\$/;"	m
HasRowid	sqlite3.c	14478;"	d	file:
HasRowid	src/sqliteInt.h	1879;"	d
HasRowid	tsrc/sqliteInt.h	1879;"	d
Hash	ext/fts1/ft_hash.h	/^struct Hash {$/;"	s
Hash	ext/fts1/ft_hash.h	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash
Hash	sqlite3.c	/^struct Hash {$/;"	s	file:
Hash	sqlite3.c	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash	file:
Hash	src/hash.h	/^struct Hash {$/;"	s
Hash	src/hash.h	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash
Hash	tsrc/hash.h	/^struct Hash {$/;"	s
Hash	tsrc/hash.h	/^typedef struct Hash Hash;$/;"	t	typeref:struct:Hash
HashClear	ext/fts1/ft_hash.c	/^void HashClear(Hash *pH){$/;"	f
HashCount	ext/fts1/ft_hash.h	109;"	d
HashData	ext/fts1/ft_hash.h	102;"	d
HashElem	ext/fts1/ft_hash.h	/^struct HashElem {$/;"	s
HashElem	ext/fts1/ft_hash.h	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem
HashElem	sqlite3.c	/^struct HashElem {$/;"	s	file:
HashElem	sqlite3.c	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem	file:
HashElem	src/hash.h	/^struct HashElem {$/;"	s
HashElem	src/hash.h	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem
HashElem	tsrc/hash.h	/^struct HashElem {$/;"	s
HashElem	tsrc/hash.h	/^typedef struct HashElem HashElem;$/;"	t	typeref:struct:HashElem
HashFind	ext/fts1/ft_hash.c	/^void *HashFind(const Hash *pH, const void *pKey, int nKey){$/;"	f
HashFirst	ext/fts1/ft_hash.h	100;"	d
HashInit	ext/fts1/ft_hash.c	/^void HashInit(Hash *pNew, int keyClass, int copyKey){$/;"	f
HashInsert	ext/fts1/ft_hash.c	/^void *HashInsert(Hash *pH, const void *pKey, int nKey, void *data){$/;"	f
HashKey	ext/fts1/ft_hash.h	103;"	d
HashKeysize	ext/fts1/ft_hash.h	104;"	d
HashNext	ext/fts1/ft_hash.h	101;"	d
HighlightContext	ext/fts5/fts5_aux.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	ext/fts5/fts5_aux.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
HighlightContext	fts5.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	fts5.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
HighlightContext	sqlite3.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	sqlite3.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
HighlightContext	tsrc/fts5.c	/^struct HighlightContext {$/;"	s	file:
HighlightContext	tsrc/fts5.c	/^typedef struct HighlightContext HighlightContext;$/;"	t	typeref:struct:HighlightContext	file:
INCOMPLETE	tool/lemon.c	/^  INCOMPLETE$/;"	e	enum:cfgstatus	file:
INCRINIT_NORMAL	sqlite3.c	86695;"	d	file:
INCRINIT_NORMAL	src/vdbesort.c	2082;"	d	file:
INCRINIT_NORMAL	tsrc/vdbesort.c	2082;"	d	file:
INCRINIT_ROOT	sqlite3.c	86697;"	d	file:
INCRINIT_ROOT	src/vdbesort.c	2084;"	d	file:
INCRINIT_ROOT	tsrc/vdbesort.c	2084;"	d	file:
INCRINIT_TASK	sqlite3.c	86696;"	d	file:
INCRINIT_TASK	src/vdbesort.c	2083;"	d	file:
INCRINIT_TASK	tsrc/vdbesort.c	2083;"	d	file:
INITIALIZE	tool/lemon.c	/^  INITIALIZE,$/;"	e	enum:e_state	file:
INO_T_DEFINED	src/test_windirent.h	46;"	d
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INST_MAX_PATHNAME	src/test_osinst.c	86;"	d	file:
INT16_TYPE	sqlite3.c	11585;"	d	file:
INT16_TYPE	sqlite3.c	11587;"	d	file:
INT16_TYPE	src/sqliteInt.h	651;"	d
INT16_TYPE	src/sqliteInt.h	653;"	d
INT16_TYPE	tsrc/sqliteInt.h	651;"	d
INT16_TYPE	tsrc/sqliteInt.h	653;"	d
INT2PTR	test/threadtest3.c	71;"	d	file:
INT8_TYPE	sqlite3.c	11599;"	d	file:
INT8_TYPE	sqlite3.c	11601;"	d	file:
INT8_TYPE	src/sqliteInt.h	665;"	d
INT8_TYPE	src/sqliteInt.h	667;"	d
INT8_TYPE	tsrc/sqliteInt.h	665;"	d
INT8_TYPE	tsrc/sqliteInt.h	667;"	d
INTERFACE	fts5.c	1509;"	d	file:
INTERFACE	fts5parse.c	111;"	d	file:
INTERFACE	lempar.c	84;"	d	file:
INTERFACE	parse.c	283;"	d	file:
INTERFACE	sqlite3.c	131799;"	d	file:
INTERFACE	sqlite3.c	178707;"	d	file:
INTERFACE	tool/lempar.c	84;"	d	file:
INTERFACE	tsrc/fts5.c	1509;"	d	file:
INTERFACE	tsrc/parse.c	283;"	d	file:
INTERIOR_MAX	ext/fts2/fts2.c	4043;"	d	file:
INTERIOR_MAX	tsrc/fts2.c	4043;"	d	file:
INTERIOR_MIN_TERMS	ext/fts2/fts2.c	4050;"	d	file:
INTERIOR_MIN_TERMS	tsrc/fts2.c	4050;"	d	file:
INVALID_FILE_ATTRIBUTES	sqlite3.c	37344;"	d	file:
INVALID_FILE_ATTRIBUTES	src/os_win.c	228;"	d	file:
INVALID_FILE_ATTRIBUTES	tsrc/os_win.c	228;"	d	file:
INVALID_SET_FILE_POINTER	sqlite3.c	39638;"	d	file:
INVALID_SET_FILE_POINTER	src/os_win.c	2522;"	d	file:
INVALID_SET_FILE_POINTER	tsrc/os_win.c	2522;"	d	file:
IN_DECLARE_VTAB	sqlite3.c	15585;"	d	file:
IN_DECLARE_VTAB	sqlite3.c	15587;"	d	file:
IN_DECLARE_VTAB	src/sqliteInt.h	2986;"	d
IN_DECLARE_VTAB	src/sqliteInt.h	2988;"	d
IN_DECLARE_VTAB	tsrc/sqliteInt.h	2986;"	d
IN_DECLARE_VTAB	tsrc/sqliteInt.h	2988;"	d
IN_INDEX_EPH	sqlite3.c	16748;"	d	file:
IN_INDEX_EPH	src/sqliteInt.h	4149;"	d
IN_INDEX_EPH	tsrc/sqliteInt.h	4149;"	d
IN_INDEX_INDEX_ASC	sqlite3.c	16749;"	d	file:
IN_INDEX_INDEX_ASC	src/sqliteInt.h	4150;"	d
IN_INDEX_INDEX_ASC	tsrc/sqliteInt.h	4150;"	d
IN_INDEX_INDEX_DESC	sqlite3.c	16750;"	d	file:
IN_INDEX_INDEX_DESC	src/sqliteInt.h	4151;"	d
IN_INDEX_INDEX_DESC	tsrc/sqliteInt.h	4151;"	d
IN_INDEX_LOOP	sqlite3.c	16757;"	d	file:
IN_INDEX_LOOP	src/sqliteInt.h	4158;"	d
IN_INDEX_LOOP	tsrc/sqliteInt.h	4158;"	d
IN_INDEX_MEMBERSHIP	sqlite3.c	16756;"	d	file:
IN_INDEX_MEMBERSHIP	src/sqliteInt.h	4157;"	d
IN_INDEX_MEMBERSHIP	tsrc/sqliteInt.h	4157;"	d
IN_INDEX_NOOP	sqlite3.c	16751;"	d	file:
IN_INDEX_NOOP	src/sqliteInt.h	4152;"	d
IN_INDEX_NOOP	tsrc/sqliteInt.h	4152;"	d
IN_INDEX_NOOP_OK	sqlite3.c	16755;"	d	file:
IN_INDEX_NOOP_OK	src/sqliteInt.h	4156;"	d
IN_INDEX_NOOP_OK	tsrc/sqliteInt.h	4156;"	d
IN_INDEX_ROWID	sqlite3.c	16747;"	d	file:
IN_INDEX_ROWID	src/sqliteInt.h	4148;"	d
IN_INDEX_ROWID	tsrc/sqliteInt.h	4148;"	d
IN_RHS	tool/lemon.c	/^  IN_RHS,$/;"	e	enum:e_state	file:
IOMETHODS	sqlite3.c	34282;"	d	file:
IOMETHODS	src/os_unix.c	4957;"	d	file:
IOMETHODS	tsrc/os_unix.c	4957;"	d	file:
IOTRACE	sqlite3.c	16801;"	d	file:
IOTRACE	sqlite3.c	16805;"	d	file:
IOTRACE	src/sqliteInt.h	4202;"	d
IOTRACE	src/sqliteInt.h	4206;"	d
IOTRACE	tsrc/sqliteInt.h	4202;"	d
IOTRACE	tsrc/sqliteInt.h	4206;"	d
ISALNUM	tool/lemon.c	18;"	d	file:
ISALPHA	test/wordcount.c	84;"	d	file:
ISALPHA	tool/lemon.c	19;"	d	file:
ISAUTOVACUUM	sqlite3.c	57797;"	d	file:
ISAUTOVACUUM	sqlite3.c	57799;"	d	file:
ISAUTOVACUUM	src/btreeInt.h	655;"	d
ISAUTOVACUUM	src/btreeInt.h	657;"	d
ISAUTOVACUUM	tsrc/btreeInt.h	655;"	d
ISAUTOVACUUM	tsrc/btreeInt.h	657;"	d
ISDIGIT	mptest/mptest.c	51;"	d	file:
ISDIGIT	test/fuzzcheck.c	75;"	d	file:
ISDIGIT	test/speedtest1.c	52;"	d	file:
ISDIGIT	tool/fuzzershell.c	70;"	d	file:
ISDIGIT	tool/lemon.c	17;"	d	file:
ISDIGIT	tool/showdb.c	6;"	d	file:
ISDIGIT	tool/showwal.c	10;"	d	file:
ISLOWER	tool/lemon.c	21;"	d	file:
ISOPT	tool/lemon.c	1857;"	d	file:
ISPRINT	tool/showdb.c	7;"	d	file:
ISPRINT	tool/showstat4.c	12;"	d	file:
ISPRINT	tool/showwal.c	11;"	d	file:
ISSPACE	mptest/mptest.c	50;"	d	file:
ISSPACE	test/fuzzcheck.c	74;"	d	file:
ISSPACE	test/speedtest1.c	51;"	d	file:
ISSPACE	tool/lemon.c	16;"	d	file:
ISSPACE	tool/speedtest16.c	32;"	d	file:
ISSPACE	tool/speedtest8inst1.c	32;"	d	file:
ISUPPER	tool/lemon.c	20;"	d	file:
IS_BIG_INT	sqlite3.c	11148;"	d	file:
IS_BIG_INT	src/sqliteInt.h	486;"	d
IS_BIG_INT	tsrc/sqliteInt.h	486;"	d
IS_LOCK_ERROR	sqlite3.c	29305;"	d	file:
IS_LOCK_ERROR	src/os_unix.c	178;"	d	file:
IS_LOCK_ERROR	tsrc/os_unix.c	178;"	d	file:
IcuCursor	ext/fts2/fts2_icu.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	ext/fts2/fts2_icu.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuCursor	ext/fts3/fts3_icu.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	ext/fts3/fts3_icu.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuCursor	sqlite3.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	sqlite3.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuCursor	tsrc/fts2_icu.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	tsrc/fts2_icu.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuCursor	tsrc/fts3_icu.c	/^struct IcuCursor {$/;"	s	file:
IcuCursor	tsrc/fts3_icu.c	/^typedef struct IcuCursor IcuCursor;$/;"	t	typeref:struct:IcuCursor	file:
IcuTokenizer	ext/fts2/fts2_icu.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	ext/fts2/fts2_icu.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IcuTokenizer	ext/fts3/fts3_icu.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	ext/fts3/fts3_icu.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IcuTokenizer	sqlite3.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	sqlite3.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IcuTokenizer	tsrc/fts2_icu.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	tsrc/fts2_icu.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IcuTokenizer	tsrc/fts3_icu.c	/^struct IcuTokenizer {$/;"	s	file:
IcuTokenizer	tsrc/fts3_icu.c	/^typedef struct IcuTokenizer IcuTokenizer;$/;"	t	typeref:struct:IcuTokenizer	file:
IdChar	ext/fts1/fts1.c	1559;"	d	file:
IdChar	ext/fts2/fts2.c	2427;"	d	file:
IdChar	sqlite3.c	135671;"	d	file:
IdChar	sqlite3.c	135689;"	d	file:
IdChar	sqlite3.c	136138;"	d	file:
IdChar	sqlite3.c	136142;"	d	file:
IdChar	src/complete.c	27;"	d	file:
IdChar	src/complete.c	31;"	d	file:
IdChar	src/tokenize.c	165;"	d	file:
IdChar	src/tokenize.c	183;"	d	file:
IdChar	tsrc/complete.c	27;"	d	file:
IdChar	tsrc/complete.c	31;"	d	file:
IdChar	tsrc/fts1.c	1559;"	d	file:
IdChar	tsrc/fts2.c	2427;"	d	file:
IdChar	tsrc/tokenize.c	165;"	d	file:
IdChar	tsrc/tokenize.c	183;"	d	file:
IdList	sqlite3.c	/^struct IdList {$/;"	s	file:
IdList	sqlite3.c	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList	file:
IdList	src/sqliteInt.h	/^struct IdList {$/;"	s
IdList	src/sqliteInt.h	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList
IdList	tsrc/sqliteInt.h	/^struct IdList {$/;"	s
IdList	tsrc/sqliteInt.h	/^typedef struct IdList IdList;$/;"	t	typeref:struct:IdList
IdList_item	sqlite3.c	/^  struct IdList_item {$/;"	s	struct:IdList	file:
IdList_item	src/sqliteInt.h	/^  struct IdList_item {$/;"	s	struct:IdList
IdList_item	tsrc/sqliteInt.h	/^  struct IdList_item {$/;"	s	struct:IdList
Identifier	test/fuzz_common.tcl	/^proc Identifier {} {$/;"	p
IdxCover	sqlite3.c	/^struct IdxCover {$/;"	s	file:
IdxCover	src/expr.c	/^struct IdxCover {$/;"	s	file:
IdxCover	tsrc/expr.c	/^struct IdxCover {$/;"	s	file:
IfNotOmitAV	sqlite3.c	58196;"	d	file:
IfNotOmitAV	sqlite3.c	58198;"	d	file:
IfNotOmitAV	src/btree.c	60;"	d	file:
IfNotOmitAV	src/btree.c	62;"	d	file:
IfNotOmitAV	tsrc/btree.c	60;"	d	file:
IfNotOmitAV	tsrc/btree.c	62;"	d	file:
IgnorableOrderby	sqlite3.c	15367;"	d	file:
IgnorableOrderby	src/sqliteInt.h	2768;"	d
IgnorableOrderby	tsrc/sqliteInt.h	2768;"	d
ImportCtx	shell.c	/^struct ImportCtx {$/;"	s	file:
ImportCtx	shell.c	/^typedef struct ImportCtx ImportCtx;$/;"	t	typeref:struct:ImportCtx	file:
ImportCtx	src/shell.c	/^struct ImportCtx {$/;"	s	file:
ImportCtx	src/shell.c	/^typedef struct ImportCtx ImportCtx;$/;"	t	typeref:struct:ImportCtx	file:
ImportCtx	tsrc/shell.c	/^struct ImportCtx {$/;"	s	file:
ImportCtx	tsrc/shell.c	/^typedef struct ImportCtx ImportCtx;$/;"	t	typeref:struct:ImportCtx	file:
InLoop	sqlite3.c	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon96::__anon97	file:
InLoop	src/whereInt.h	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon45::__anon46
InLoop	tsrc/whereInt.h	/^      struct InLoop {$/;"	s	struct:WhereLevel::__anon10::__anon11
IncrMerger	sqlite3.c	/^struct IncrMerger {$/;"	s	file:
IncrMerger	sqlite3.c	/^typedef struct IncrMerger IncrMerger;       \/* Read & merge multiple PMAs *\/$/;"	t	typeref:struct:IncrMerger	file:
IncrMerger	src/vdbesort.c	/^struct IncrMerger {$/;"	s	file:
IncrMerger	src/vdbesort.c	/^typedef struct IncrMerger IncrMerger;       \/* Read & merge multiple PMAs *\/$/;"	t	typeref:struct:IncrMerger	file:
IncrMerger	tsrc/vdbesort.c	/^struct IncrMerger {$/;"	s	file:
IncrMerger	tsrc/vdbesort.c	/^typedef struct IncrMerger IncrMerger;       \/* Read & merge multiple PMAs *\/$/;"	t	typeref:struct:IncrMerger	file:
Incrblob	sqlite3.c	/^struct Incrblob {$/;"	s	file:
Incrblob	sqlite3.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
Incrblob	src/vdbeblob.c	/^struct Incrblob {$/;"	s	file:
Incrblob	src/vdbeblob.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
Incrblob	tsrc/vdbeblob.c	/^struct Incrblob {$/;"	s	file:
Incrblob	tsrc/vdbeblob.c	/^typedef struct Incrblob Incrblob;$/;"	t	typeref:struct:Incrblob	file:
IncrblobChannel	src/tclsqlite.c	/^struct IncrblobChannel {$/;"	s	file:
IncrblobChannel	src/tclsqlite.c	/^typedef struct IncrblobChannel IncrblobChannel;$/;"	t	typeref:struct:IncrblobChannel	file:
IncrblobChannel	tsrc/tclsqlite.c	/^struct IncrblobChannel {$/;"	s	file:
IncrblobChannel	tsrc/tclsqlite.c	/^typedef struct IncrblobChannel IncrblobChannel;$/;"	t	typeref:struct:IncrblobChannel	file:
IncrblobChannelType	src/tclsqlite.c	/^static Tcl_ChannelType IncrblobChannelType = {$/;"	v	file:
IncrblobChannelType	tsrc/tclsqlite.c	/^static Tcl_ChannelType IncrblobChannelType = {$/;"	v	file:
IncrmergeWriter	ext/fts3/fts3_write.c	/^struct IncrmergeWriter {$/;"	s	file:
IncrmergeWriter	ext/fts3/fts3_write.c	/^typedef struct IncrmergeWriter IncrmergeWriter;$/;"	t	typeref:struct:IncrmergeWriter	file:
IncrmergeWriter	sqlite3.c	/^struct IncrmergeWriter {$/;"	s	file:
IncrmergeWriter	sqlite3.c	/^typedef struct IncrmergeWriter IncrmergeWriter;$/;"	t	typeref:struct:IncrmergeWriter	file:
IncrmergeWriter	tsrc/fts3_write.c	/^struct IncrmergeWriter {$/;"	s	file:
IncrmergeWriter	tsrc/fts3_write.c	/^typedef struct IncrmergeWriter IncrmergeWriter;$/;"	t	typeref:struct:IncrmergeWriter	file:
Index	sqlite3.c	/^struct Index {$/;"	s	file:
Index	sqlite3.c	/^typedef struct Index Index;$/;"	t	typeref:struct:Index	file:
Index	src/sqliteInt.h	/^struct Index {$/;"	s
Index	src/sqliteInt.h	/^typedef struct Index Index;$/;"	t	typeref:struct:Index
Index	tsrc/sqliteInt.h	/^struct Index {$/;"	s
Index	tsrc/sqliteInt.h	/^typedef struct Index Index;$/;"	t	typeref:struct:Index
IndexSample	sqlite3.c	/^struct IndexSample {$/;"	s	file:
IndexSample	sqlite3.c	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample	file:
IndexSample	src/sqliteInt.h	/^struct IndexSample {$/;"	s
IndexSample	src/sqliteInt.h	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample
IndexSample	tsrc/sqliteInt.h	/^struct IndexSample {$/;"	s
IndexSample	tsrc/sqliteInt.h	/^typedef struct IndexSample IndexSample;$/;"	t	typeref:struct:IndexSample
InitData	sqlite3.c	/^} InitData;$/;"	t	typeref:struct:__anon86	file:
InitData	src/sqliteInt.h	/^} InitData;$/;"	t	typeref:struct:__anon60
InitData	tsrc/sqliteInt.h	/^} InitData;$/;"	t	typeref:struct:__anon28
Insert	test/fuzz_common.tcl	/^proc Insert {} {$/;"	p
IntegrityCk	sqlite3.c	/^struct IntegrityCk {$/;"	s	file:
IntegrityCk	sqlite3.c	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk	file:
IntegrityCk	src/btreeInt.h	/^struct IntegrityCk {$/;"	s
IntegrityCk	src/btreeInt.h	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk
IntegrityCk	tsrc/btreeInt.h	/^struct IntegrityCk {$/;"	s
IntegrityCk	tsrc/btreeInt.h	/^typedef struct IntegrityCk IntegrityCk;$/;"	t	typeref:struct:IntegrityCk
InteriorBlock	ext/fts2/fts2.c	/^typedef struct InteriorBlock {$/;"	s	file:
InteriorBlock	ext/fts2/fts2.c	/^} InteriorBlock;$/;"	t	typeref:struct:InteriorBlock	file:
InteriorBlock	tsrc/fts2.c	/^typedef struct InteriorBlock {$/;"	s	file:
InteriorBlock	tsrc/fts2.c	/^} InteriorBlock;$/;"	t	typeref:struct:InteriorBlock	file:
InteriorReader	ext/fts2/fts2.c	/^typedef struct InteriorReader {$/;"	s	file:
InteriorReader	ext/fts2/fts2.c	/^} InteriorReader;$/;"	t	typeref:struct:InteriorReader	file:
InteriorReader	tsrc/fts2.c	/^typedef struct InteriorReader {$/;"	s	file:
InteriorReader	tsrc/fts2.c	/^} InteriorReader;$/;"	t	typeref:struct:InteriorReader	file:
InteriorWriter	ext/fts2/fts2.c	/^typedef struct InteriorWriter {$/;"	s	file:
InteriorWriter	ext/fts2/fts2.c	/^} InteriorWriter;$/;"	t	typeref:struct:InteriorWriter	file:
InteriorWriter	tsrc/fts2.c	/^typedef struct InteriorWriter {$/;"	s	file:
InteriorWriter	tsrc/fts2.c	/^} InteriorWriter;$/;"	t	typeref:struct:InteriorWriter	file:
InterpAndScript	src/test_superlock.c	/^struct InterpAndScript {$/;"	s	file:
InterpAndScript	src/test_superlock.c	/^typedef struct InterpAndScript InterpAndScript;$/;"	t	typeref:struct:InterpAndScript	file:
IsDigit	shell.c	136;"	d	file:
IsDigit	src/shell.c	136;"	d	file:
IsDigit	tsrc/shell.c	136;"	d	file:
IsHiddenColumn	sqlite3.c	14466;"	d	file:
IsHiddenColumn	sqlite3.c	14469;"	d	file:
IsHiddenColumn	sqlite3.c	14472;"	d	file:
IsHiddenColumn	src/sqliteInt.h	1867;"	d
IsHiddenColumn	src/sqliteInt.h	1870;"	d
IsHiddenColumn	src/sqliteInt.h	1873;"	d
IsHiddenColumn	tsrc/sqliteInt.h	1867;"	d
IsHiddenColumn	tsrc/sqliteInt.h	1870;"	d
IsHiddenColumn	tsrc/sqliteInt.h	1873;"	d
IsIn	autoconf/tea/win/nmakehlp.c	/^IsIn($/;"	f	file:
IsOrdinaryHiddenColumn	sqlite3.c	14467;"	d	file:
IsOrdinaryHiddenColumn	sqlite3.c	14470;"	d	file:
IsOrdinaryHiddenColumn	sqlite3.c	14473;"	d	file:
IsOrdinaryHiddenColumn	src/sqliteInt.h	1868;"	d
IsOrdinaryHiddenColumn	src/sqliteInt.h	1871;"	d
IsOrdinaryHiddenColumn	src/sqliteInt.h	1874;"	d
IsOrdinaryHiddenColumn	tsrc/sqliteInt.h	1868;"	d
IsOrdinaryHiddenColumn	tsrc/sqliteInt.h	1871;"	d
IsOrdinaryHiddenColumn	tsrc/sqliteInt.h	1874;"	d
IsPowerOfTwo	sqlite3.c	11875;"	d	file:
IsPowerOfTwo	src/sqliteInt.h	941;"	d
IsPowerOfTwo	tsrc/sqliteInt.h	941;"	d
IsPrimaryKeyIndex	sqlite3.c	14707;"	d	file:
IsPrimaryKeyIndex	src/sqliteInt.h	2108;"	d
IsPrimaryKeyIndex	tsrc/sqliteInt.h	2108;"	d
IsSpace	shell.c	135;"	d	file:
IsSpace	src/shell.c	135;"	d	file:
IsSpace	tsrc/shell.c	135;"	d	file:
IsStat3	sqlite3.c	94796;"	d	file:
IsStat3	sqlite3.c	94799;"	d	file:
IsStat3	sqlite3.c	94802;"	d	file:
IsStat3	src/analyze.c	147;"	d	file:
IsStat3	src/analyze.c	150;"	d	file:
IsStat3	src/analyze.c	153;"	d	file:
IsStat3	tsrc/analyze.c	147;"	d	file:
IsStat3	tsrc/analyze.c	150;"	d	file:
IsStat3	tsrc/analyze.c	153;"	d	file:
IsStat34	sqlite3.c	94806;"	d	file:
IsStat34	src/analyze.c	157;"	d	file:
IsStat34	tsrc/analyze.c	157;"	d	file:
IsStat4	sqlite3.c	94795;"	d	file:
IsStat4	sqlite3.c	94798;"	d	file:
IsStat4	sqlite3.c	94801;"	d	file:
IsStat4	src/analyze.c	146;"	d	file:
IsStat4	src/analyze.c	149;"	d	file:
IsStat4	src/analyze.c	152;"	d	file:
IsStat4	tsrc/analyze.c	146;"	d	file:
IsStat4	tsrc/analyze.c	149;"	d	file:
IsStat4	tsrc/analyze.c	152;"	d	file:
IsUniqueIndex	sqlite3.c	14710;"	d	file:
IsUniqueIndex	src/sqliteInt.h	2111;"	d
IsUniqueIndex	tsrc/sqliteInt.h	2111;"	d
IsVirtual	sqlite3.c	14454;"	d	file:
IsVirtual	sqlite3.c	14456;"	d	file:
IsVirtual	src/sqliteInt.h	1855;"	d
IsVirtual	src/sqliteInt.h	1857;"	d
IsVirtual	tsrc/sqliteInt.h	1855;"	d
IsVirtual	tsrc/sqliteInt.h	1857;"	d
JEACH_ATOM	ext/misc/json1.c	1695;"	d	file:
JEACH_ATOM	sqlite3.c	176683;"	d	file:
JEACH_ATOM	tsrc/json1.c	1695;"	d	file:
JEACH_FULLKEY	ext/misc/json1.c	1698;"	d	file:
JEACH_FULLKEY	sqlite3.c	176686;"	d	file:
JEACH_FULLKEY	tsrc/json1.c	1698;"	d	file:
JEACH_ID	ext/misc/json1.c	1696;"	d	file:
JEACH_ID	sqlite3.c	176684;"	d	file:
JEACH_ID	tsrc/json1.c	1696;"	d	file:
JEACH_JSON	ext/misc/json1.c	1700;"	d	file:
JEACH_JSON	sqlite3.c	176688;"	d	file:
JEACH_JSON	tsrc/json1.c	1700;"	d	file:
JEACH_KEY	ext/misc/json1.c	1692;"	d	file:
JEACH_KEY	sqlite3.c	176680;"	d	file:
JEACH_KEY	tsrc/json1.c	1692;"	d	file:
JEACH_PARENT	ext/misc/json1.c	1697;"	d	file:
JEACH_PARENT	sqlite3.c	176685;"	d	file:
JEACH_PARENT	tsrc/json1.c	1697;"	d	file:
JEACH_PATH	ext/misc/json1.c	1699;"	d	file:
JEACH_PATH	sqlite3.c	176687;"	d	file:
JEACH_PATH	tsrc/json1.c	1699;"	d	file:
JEACH_ROOT	ext/misc/json1.c	1701;"	d	file:
JEACH_ROOT	sqlite3.c	176689;"	d	file:
JEACH_ROOT	tsrc/json1.c	1701;"	d	file:
JEACH_TYPE	ext/misc/json1.c	1694;"	d	file:
JEACH_TYPE	sqlite3.c	176682;"	d	file:
JEACH_TYPE	tsrc/json1.c	1694;"	d	file:
JEACH_VALUE	ext/misc/json1.c	1693;"	d	file:
JEACH_VALUE	sqlite3.c	176681;"	d	file:
JEACH_VALUE	tsrc/json1.c	1693;"	d	file:
JNODE_APPEND	ext/misc/json1.c	140;"	d	file:
JNODE_APPEND	sqlite3.c	175128;"	d	file:
JNODE_APPEND	tsrc/json1.c	140;"	d	file:
JNODE_ESCAPE	ext/misc/json1.c	137;"	d	file:
JNODE_ESCAPE	sqlite3.c	175125;"	d	file:
JNODE_ESCAPE	tsrc/json1.c	137;"	d	file:
JNODE_LABEL	ext/misc/json1.c	141;"	d	file:
JNODE_LABEL	sqlite3.c	175129;"	d	file:
JNODE_LABEL	tsrc/json1.c	141;"	d	file:
JNODE_RAW	ext/misc/json1.c	136;"	d	file:
JNODE_RAW	sqlite3.c	175124;"	d	file:
JNODE_RAW	tsrc/json1.c	136;"	d	file:
JNODE_REMOVE	ext/misc/json1.c	138;"	d	file:
JNODE_REMOVE	sqlite3.c	175126;"	d	file:
JNODE_REMOVE	tsrc/json1.c	138;"	d	file:
JNODE_REPLACE	ext/misc/json1.c	139;"	d	file:
JNODE_REPLACE	sqlite3.c	175127;"	d	file:
JNODE_REPLACE	tsrc/json1.c	139;"	d	file:
JOURNAL_FILE	src/test_onefile.c	126;"	d	file:
JOURNAL_HDR_SZ	sqlite3.c	47049;"	d	file:
JOURNAL_HDR_SZ	src/pager.c	772;"	d	file:
JOURNAL_HDR_SZ	tsrc/pager.c	772;"	d	file:
JOURNAL_PG_SZ	sqlite3.c	47043;"	d	file:
JOURNAL_PG_SZ	src/pager.c	766;"	d	file:
JOURNAL_PG_SZ	tsrc/pager.c	766;"	d	file:
JSON_ARRAY	ext/misc/json1.c	121;"	d	file:
JSON_ARRAY	sqlite3.c	175109;"	d	file:
JSON_ARRAY	tsrc/json1.c	121;"	d	file:
JSON_FALSE	ext/misc/json1.c	117;"	d	file:
JSON_FALSE	sqlite3.c	175105;"	d	file:
JSON_FALSE	tsrc/json1.c	117;"	d	file:
JSON_INT	ext/misc/json1.c	118;"	d	file:
JSON_INT	sqlite3.c	175106;"	d	file:
JSON_INT	tsrc/json1.c	118;"	d	file:
JSON_NOINLINE	ext/misc/json1.c	651;"	d	file:
JSON_NOINLINE	ext/misc/json1.c	653;"	d	file:
JSON_NOINLINE	ext/misc/json1.c	655;"	d	file:
JSON_NOINLINE	sqlite3.c	175639;"	d	file:
JSON_NOINLINE	sqlite3.c	175641;"	d	file:
JSON_NOINLINE	sqlite3.c	175643;"	d	file:
JSON_NOINLINE	tsrc/json1.c	651;"	d	file:
JSON_NOINLINE	tsrc/json1.c	653;"	d	file:
JSON_NOINLINE	tsrc/json1.c	655;"	d	file:
JSON_NULL	ext/misc/json1.c	115;"	d	file:
JSON_NULL	sqlite3.c	175103;"	d	file:
JSON_NULL	tsrc/json1.c	115;"	d	file:
JSON_OBJECT	ext/misc/json1.c	122;"	d	file:
JSON_OBJECT	sqlite3.c	175110;"	d	file:
JSON_OBJECT	tsrc/json1.c	122;"	d	file:
JSON_REAL	ext/misc/json1.c	119;"	d	file:
JSON_REAL	sqlite3.c	175107;"	d	file:
JSON_REAL	tsrc/json1.c	119;"	d	file:
JSON_STRING	ext/misc/json1.c	120;"	d	file:
JSON_STRING	sqlite3.c	175108;"	d	file:
JSON_STRING	tsrc/json1.c	120;"	d	file:
JSON_SUBTYPE	ext/misc/json1.c	125;"	d	file:
JSON_SUBTYPE	sqlite3.c	175113;"	d	file:
JSON_SUBTYPE	tsrc/json1.c	125;"	d	file:
JSON_TRUE	ext/misc/json1.c	116;"	d	file:
JSON_TRUE	sqlite3.c	175104;"	d	file:
JSON_TRUE	tsrc/json1.c	116;"	d	file:
JT_CROSS	sqlite3.c	15132;"	d	file:
JT_CROSS	src/sqliteInt.h	2533;"	d
JT_CROSS	tsrc/sqliteInt.h	2533;"	d
JT_ERROR	sqlite3.c	15137;"	d	file:
JT_ERROR	src/sqliteInt.h	2538;"	d
JT_ERROR	tsrc/sqliteInt.h	2538;"	d
JT_INNER	sqlite3.c	15131;"	d	file:
JT_INNER	src/sqliteInt.h	2532;"	d
JT_INNER	tsrc/sqliteInt.h	2532;"	d
JT_LEFT	sqlite3.c	15134;"	d	file:
JT_LEFT	src/sqliteInt.h	2535;"	d
JT_LEFT	tsrc/sqliteInt.h	2535;"	d
JT_MAX_PATHNAME	src/test_journal.c	104;"	d	file:
JT_NATURAL	sqlite3.c	15133;"	d	file:
JT_NATURAL	src/sqliteInt.h	2534;"	d
JT_NATURAL	tsrc/sqliteInt.h	2534;"	d
JT_OUTER	sqlite3.c	15136;"	d	file:
JT_OUTER	src/sqliteInt.h	2537;"	d
JT_OUTER	tsrc/sqliteInt.h	2537;"	d
JT_RIGHT	sqlite3.c	15135;"	d	file:
JT_RIGHT	src/sqliteInt.h	2536;"	d
JT_RIGHT	tsrc/sqliteInt.h	2536;"	d
JT_VFS_NAME	src/test_journal.c	109;"	d	file:
JsonEachCursor	ext/misc/json1.c	/^struct JsonEachCursor {$/;"	s	file:
JsonEachCursor	ext/misc/json1.c	/^typedef struct JsonEachCursor JsonEachCursor;$/;"	t	typeref:struct:JsonEachCursor	file:
JsonEachCursor	sqlite3.c	/^struct JsonEachCursor {$/;"	s	file:
JsonEachCursor	sqlite3.c	/^typedef struct JsonEachCursor JsonEachCursor;$/;"	t	typeref:struct:JsonEachCursor	file:
JsonEachCursor	tsrc/json1.c	/^struct JsonEachCursor {$/;"	s	file:
JsonEachCursor	tsrc/json1.c	/^typedef struct JsonEachCursor JsonEachCursor;$/;"	t	typeref:struct:JsonEachCursor	file:
JsonNode	ext/misc/json1.c	/^struct JsonNode {$/;"	s	file:
JsonNode	ext/misc/json1.c	/^typedef struct JsonNode JsonNode;$/;"	t	typeref:struct:JsonNode	file:
JsonNode	sqlite3.c	/^struct JsonNode {$/;"	s	file:
JsonNode	sqlite3.c	/^typedef struct JsonNode JsonNode;$/;"	t	typeref:struct:JsonNode	file:
JsonNode	tsrc/json1.c	/^struct JsonNode {$/;"	s	file:
JsonNode	tsrc/json1.c	/^typedef struct JsonNode JsonNode;$/;"	t	typeref:struct:JsonNode	file:
JsonParse	ext/misc/json1.c	/^struct JsonParse {$/;"	s	file:
JsonParse	ext/misc/json1.c	/^typedef struct JsonParse JsonParse;$/;"	t	typeref:struct:JsonParse	file:
JsonParse	sqlite3.c	/^struct JsonParse {$/;"	s	file:
JsonParse	sqlite3.c	/^typedef struct JsonParse JsonParse;$/;"	t	typeref:struct:JsonParse	file:
JsonParse	tsrc/json1.c	/^struct JsonParse {$/;"	s	file:
JsonParse	tsrc/json1.c	/^typedef struct JsonParse JsonParse;$/;"	t	typeref:struct:JsonParse	file:
JsonString	ext/misc/json1.c	/^struct JsonString {$/;"	s	file:
JsonString	ext/misc/json1.c	/^typedef struct JsonString JsonString;$/;"	t	typeref:struct:JsonString	file:
JsonString	sqlite3.c	/^struct JsonString {$/;"	s	file:
JsonString	sqlite3.c	/^typedef struct JsonString JsonString;$/;"	t	typeref:struct:JsonString	file:
JsonString	tsrc/json1.c	/^struct JsonString {$/;"	s	file:
JsonString	tsrc/json1.c	/^typedef struct JsonString JsonString;$/;"	t	typeref:struct:JsonString	file:
JtGlobal	src/test_journal.c	/^struct JtGlobal {$/;"	s	file:
KeyClass	sqlite3.c	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass	file:
KeyClass	src/sqliteInt.h	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass
KeyClass	tsrc/sqliteInt.h	/^typedef struct KeyClass KeyClass;$/;"	t	typeref:struct:KeyClass
KeyInfo	sqlite3.c	/^struct KeyInfo {$/;"	s	file:
KeyInfo	sqlite3.c	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo	file:
KeyInfo	src/sqliteInt.h	/^struct KeyInfo {$/;"	s
KeyInfo	src/sqliteInt.h	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo
KeyInfo	tsrc/sqliteInt.h	/^struct KeyInfo {$/;"	s
KeyInfo	tsrc/sqliteInt.h	/^typedef struct KeyInfo KeyInfo;$/;"	t	typeref:struct:KeyInfo
Keyword	tool/mkkeywordhash.c	/^struct Keyword {$/;"	s	file:
Keyword	tool/mkkeywordhash.c	/^typedef struct Keyword Keyword;$/;"	t	typeref:struct:Keyword	file:
LARGEST_INT64	ext/fts3/fts3.c	3123;"	d	file:
LARGEST_INT64	ext/fts5/fts5Int.h	45;"	d
LARGEST_INT64	ext/misc/json1.c	41;"	d	file:
LARGEST_INT64	ext/misc/totype.c	60;"	d	file:
LARGEST_INT64	fts5.c	638;"	d	file:
LARGEST_INT64	sqlite3.c	11737;"	d	file:
LARGEST_INT64	sqlite3.c	144876;"	d	file:
LARGEST_INT64	sqlite3.c	175029;"	d	file:
LARGEST_INT64	sqlite3.c	177840;"	d	file:
LARGEST_INT64	src/sqliteInt.h	803;"	d
LARGEST_INT64	tsrc/fts3.c	3123;"	d	file:
LARGEST_INT64	tsrc/fts5.c	638;"	d	file:
LARGEST_INT64	tsrc/json1.c	41;"	d	file:
LARGEST_INT64	tsrc/sqliteInt.h	803;"	d
LCS_ITERATOR_FINISHED	ext/fts3/fts3_snippet.c	1070;"	d	file:
LCS_ITERATOR_FINISHED	sqlite3.c	158560;"	d	file:
LCS_ITERATOR_FINISHED	tsrc/fts3_snippet.c	1070;"	d	file:
LEAF_MAX	ext/fts2/fts2.c	4464;"	d	file:
LEAF_MAX	tsrc/fts2.c	4464;"	d	file:
LEAF_SELECT	ext/fts2/fts2.c	1862;"	d	file:
LEAF_SELECT	tsrc/fts2.c	1862;"	d	file:
LEFT	tool/lemon.c	/^    LEFT,$/;"	e	enum:e_assoc	file:
LEMON_FALSE	tool/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon4	file:
LEMON_TRUE	tool/lemon.c	/^typedef enum {LEMON_FALSE=0, LEMON_TRUE} Boolean;$/;"	e	enum:__anon4	file:
LHS_ALIAS_1	tool/lemon.c	/^  LHS_ALIAS_1,$/;"	e	enum:e_state	file:
LHS_ALIAS_2	tool/lemon.c	/^  LHS_ALIAS_2,$/;"	e	enum:e_state	file:
LHS_ALIAS_3	tool/lemon.c	/^  LHS_ALIAS_3,$/;"	e	enum:e_state	file:
LIBOBJ	Makefile	/^LIBOBJ = $(LIBOBJS$(USE_AMALGAMATION))$/;"	m
LIBOBJS0	Makefile	/^LIBOBJS0 = alter.lo analyze.lo attach.lo auth.lo \\$/;"	m
LIBOBJS1	Makefile	/^LIBOBJS1 = sqlite3.lo$/;"	m
LIBREADLINE	Makefile	/^LIBREADLINE = -lreadline -lncurses $/;"	m
LIBTCL	Makefile	/^LIBTCL = $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = .\/libtool$/;"	m
LIKEFUNC	sqlite3.c	14209;"	d	file:
LIKEFUNC	src/sqliteInt.h	1610;"	d
LIKEFUNC	tsrc/sqliteInt.h	1610;"	d
LINESIZE	tool/lemon.c	3308;"	d	file:
LINKVAR	src/test_config.c	717;"	d	file:
LISTSIZE	tool/lemon.c	1826;"	d	file:
LOCATE_NOERR	sqlite3.c	16297;"	d	file:
LOCATE_NOERR	src/sqliteInt.h	3698;"	d
LOCATE_NOERR	tsrc/sqliteInt.h	3698;"	d
LOCATE_VIEW	sqlite3.c	16296;"	d	file:
LOCATE_VIEW	src/sqliteInt.h	3697;"	d
LOCATE_VIEW	tsrc/sqliteInt.h	3697;"	d
LOCKFILE_EXCLUSIVE_LOCK	sqlite3.c	40156;"	d	file:
LOCKFILE_EXCLUSIVE_LOCK	src/os_win.c	3040;"	d	file:
LOCKFILE_EXCLUSIVE_LOCK	tsrc/os_win.c	3040;"	d	file:
LOCKFILE_FAIL_IMMEDIATELY	sqlite3.c	40152;"	d	file:
LOCKFILE_FAIL_IMMEDIATELY	src/os_win.c	3036;"	d	file:
LOCKFILE_FAIL_IMMEDIATELY	tsrc/os_win.c	3036;"	d	file:
LOGMAX	sqlite3.c	21858;"	d	file:
LOGMAX	src/mem5.c	78;"	d	file:
LOGMAX	tsrc/mem5.c	78;"	d	file:
LONGDOUBLE_TYPE	sqlite3.c	11447;"	d	file:
LONGDOUBLE_TYPE	sqlite3.c	11605;"	d	file:
LONGDOUBLE_TYPE	src/sqliteInt.h	513;"	d
LONGDOUBLE_TYPE	src/sqliteInt.h	671;"	d
LONGDOUBLE_TYPE	tsrc/sqliteInt.h	513;"	d
LONGDOUBLE_TYPE	tsrc/sqliteInt.h	671;"	d
LPDIR	src/test_windirent.h	/^typedef DIR *LPDIR;$/;"	t
LPDIRENT	src/test_windirent.h	/^typedef DIRENT *LPDIRENT;$/;"	t
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(TCC) $(LTCOMPILE_EXTRAS)$/;"	m
LTINSTALL	Makefile	/^LTINSTALL = $(LIBTOOL) --mode=install $(INSTALL)$/;"	m
LTLINK	Makefile	/^LTLINK = $(LIBTOOL) --mode=link $(TCC) $(LTCOMPILE_EXTRAS)  $(LTLINK_EXTRAS)$/;"	m
LT_OBJDIR	config.h	108;"	d
LT_OBJDIR	tsrc/config.h	108;"	d
LcsIterator	ext/fts3/fts3_snippet.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	ext/fts3/fts3_snippet.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
LcsIterator	sqlite3.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	sqlite3.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
LcsIterator	tsrc/fts3_snippet.c	/^struct LcsIterator {$/;"	s	file:
LcsIterator	tsrc/fts3_snippet.c	/^typedef struct LcsIterator LcsIterator;$/;"	t	typeref:struct:LcsIterator	file:
LeafReader	ext/fts2/fts2.c	/^typedef struct LeafReader {$/;"	s	file:
LeafReader	ext/fts2/fts2.c	/^} LeafReader;$/;"	t	typeref:struct:LeafReader	file:
LeafReader	tsrc/fts2.c	/^typedef struct LeafReader {$/;"	s	file:
LeafReader	tsrc/fts2.c	/^} LeafReader;$/;"	t	typeref:struct:LeafReader	file:
LeafWriter	ext/fts2/fts2.c	/^typedef struct LeafWriter {$/;"	s	file:
LeafWriter	ext/fts2/fts2.c	/^} LeafWriter;$/;"	t	typeref:struct:LeafWriter	file:
LeafWriter	tsrc/fts2.c	/^typedef struct LeafWriter {$/;"	s	file:
LeafWriter	tsrc/fts2.c	/^} LeafWriter;$/;"	t	typeref:struct:LeafWriter	file:
LeavesReader	ext/fts2/fts2.c	/^typedef struct LeavesReader {$/;"	s	file:
LeavesReader	ext/fts2/fts2.c	/^} LeavesReader;$/;"	t	typeref:struct:LeavesReader	file:
LeavesReader	tsrc/fts2.c	/^typedef struct LeavesReader {$/;"	s	file:
LeavesReader	tsrc/fts2.c	/^} LeavesReader;$/;"	t	typeref:struct:LeavesReader	file:
LikeOp	parse.c	/^struct LikeOp {$/;"	s	file:
LikeOp	sqlite3.c	/^struct LikeOp {$/;"	s	file:
LikeOp	tsrc/parse.c	/^struct LikeOp {$/;"	s	file:
LimitVal	parse.c	/^struct LimitVal {$/;"	s	file:
LimitVal	sqlite3.c	/^struct LimitVal {$/;"	s	file:
LimitVal	tsrc/parse.c	/^struct LimitVal {$/;"	s	file:
Literal	test/fuzz_common.tcl	/^proc Literal {} {$/;"	p
LoadDoclistCtx	ext/fts3/fts3_snippet.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	ext/fts3/fts3_snippet.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LoadDoclistCtx	sqlite3.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	sqlite3.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LoadDoclistCtx	tsrc/fts3_snippet.c	/^struct LoadDoclistCtx {$/;"	s	file:
LoadDoclistCtx	tsrc/fts3_snippet.c	/^typedef struct LoadDoclistCtx LoadDoclistCtx;$/;"	t	typeref:struct:LoadDoclistCtx	file:
LogCallback	src/test1.c	/^static struct LogCallback {$/;"	s	file:
LogEst	sqlite3.c	/^typedef INT16_TYPE LogEst;$/;"	t	file:
LogEst	src/sqliteInt.h	/^typedef INT16_TYPE LogEst;$/;"	t
LogEst	tool/logest.c	/^typedef short int LogEst;  \/* 10 times log2() *\/$/;"	t	file:
LogEst	tsrc/sqliteInt.h	/^typedef INT16_TYPE LogEst;$/;"	t
Lookaside	sqlite3.c	/^struct Lookaside {$/;"	s	file:
Lookaside	sqlite3.c	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside	file:
Lookaside	src/sqliteInt.h	/^struct Lookaside {$/;"	s
Lookaside	src/sqliteInt.h	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside
Lookaside	tsrc/sqliteInt.h	/^struct Lookaside {$/;"	s
Lookaside	tsrc/sqliteInt.h	/^typedef struct Lookaside Lookaside;$/;"	t	typeref:struct:Lookaside
LookasideSlot	sqlite3.c	/^struct LookasideSlot {$/;"	s	file:
LookasideSlot	sqlite3.c	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot	file:
LookasideSlot	src/sqliteInt.h	/^struct LookasideSlot {$/;"	s
LookasideSlot	src/sqliteInt.h	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot
LookasideSlot	tsrc/sqliteInt.h	/^struct LookasideSlot {$/;"	s
LookasideSlot	tsrc/sqliteInt.h	/^typedef struct LookasideSlot LookasideSlot;$/;"	t	typeref:struct:LookasideSlot
M	sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
M	src/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
M	tsrc/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
MALLOC_LOG_FRAMES	src/test_malloc.c	743;"	d	file:
MALLOC_LOG_KEYINTS	src/test_malloc.c	744;"	d	file:
MASKBIT	sqlite3.c	15068;"	d	file:
MASKBIT	src/sqliteInt.h	2469;"	d
MASKBIT	tsrc/sqliteInt.h	2469;"	d
MASKBIT32	sqlite3.c	15069;"	d	file:
MASKBIT32	src/sqliteInt.h	2470;"	d
MASKBIT32	tsrc/sqliteInt.h	2470;"	d
MASTER_NAME	sqlite3.c	11853;"	d	file:
MASTER_NAME	src/sqliteInt.h	919;"	d
MASTER_NAME	tsrc/sqliteInt.h	919;"	d
MASTER_ROOT	sqlite3.c	11859;"	d	file:
MASTER_ROOT	src/sqliteInt.h	925;"	d
MASTER_ROOT	tsrc/sqliteInt.h	925;"	d
MAX	ext/async/sqlite3async.c	29;"	d	file:
MAX	ext/fts3/fts3Int.h	89;"	d
MAX	ext/fts5/fts5Int.h	40;"	d
MAX	ext/rtree/rtree.c	359;"	d	file:
MAX	fts5.c	633;"	d	file:
MAX	sqlite3.c	11544;"	d	file:
MAX	sqlite3.c	141513;"	d	file:
MAX	sqlite3.c	160322;"	d	file:
MAX	sqlite3.c	177835;"	d	file:
MAX	src/sqliteInt.h	610;"	d
MAX	src/test_onefile.c	251;"	d	file:
MAX	tsrc/fts3Int.h	89;"	d
MAX	tsrc/fts5.c	633;"	d	file:
MAX	tsrc/rtree.c	359;"	d	file:
MAX	tsrc/sqliteInt.h	610;"	d
MAXPATHNAME	src/test_demovfs.c	141;"	d	file:
MAXRHS	tool/lemon.c	46;"	d	file:
MAXRHS	tool/lemon.c	48;"	d	file:
MAX_6BYTE	sqlite3.c	73487;"	d	file:
MAX_6BYTE	src/vdbeaux.c	3129;"	d	file:
MAX_6BYTE	tsrc/vdbeaux.c	3129;"	d	file:
MAX_CONNECTIONS	src/test_sqllog.c	106;"	d	file:
MAX_INCR_PHRASE_TOKENS	ext/fts3/fts3.c	4222;"	d	file:
MAX_INCR_PHRASE_TOKENS	sqlite3.c	145975;"	d	file:
MAX_INCR_PHRASE_TOKENS	tsrc/fts3.c	4222;"	d	file:
MAX_MUTEXES	src/test_mutex.c	26;"	d	file:
MAX_PAGE_SIZE	src/test_multiplex.c	68;"	d	file:
MAX_PATH	sqlite3.c	37228;"	d	file:
MAX_PATH	src/os_win.c	112;"	d	file:
MAX_PATH	tsrc/os_win.c	112;"	d	file:
MAX_PATHNAME	sqlite3.c	29290;"	d	file:
MAX_PATHNAME	src/os_unix.c	163;"	d	file:
MAX_PATHNAME	tsrc/os_unix.c	163;"	d	file:
MAX_PREPARED_STMTS	src/tclsqlite.c	81;"	d	file:
MAX_PREPARED_STMTS	tsrc/tclsqlite.c	81;"	d	file:
MAX_ROWID	sqlite3.c	81306;"	d	file:
MAX_ROWID	src/vdbe.c	4178;"	d	file:
MAX_ROWID	tsrc/vdbe.c	4178;"	d	file:
MAX_SECTOR_SIZE	sqlite3.c	46706;"	d	file:
MAX_SECTOR_SIZE	src/pager.c	429;"	d	file:
MAX_SECTOR_SIZE	tsrc/pager.c	429;"	d	file:
MAX_STMT	ext/fts1/fts1.c	/^  MAX_STMT                     \/* Always at end! *\/$/;"	e	enum:fulltext_statement	file:
MAX_STMT	ext/fts1/fulltext.c	/^  MAX_STMT                     \/* Always at end! *\/$/;"	e	enum:fulltext_statement	file:
MAX_STMT	ext/fts2/fts2.c	/^  MAX_STMT                     \/* Always at end! *\/$/;"	e	enum:fulltext_statement	file:
MAX_STMT	tsrc/fts1.c	/^  MAX_STMT                     \/* Always at end! *\/$/;"	e	enum:fulltext_statement	file:
MAX_STMT	tsrc/fts2.c	/^  MAX_STMT                     \/* Always at end! *\/$/;"	e	enum:fulltext_statement	file:
MD5Context	src/tclsqlite.c	/^struct MD5Context {$/;"	s	file:
MD5Context	src/tclsqlite.c	/^typedef struct MD5Context MD5Context;$/;"	t	typeref:struct:MD5Context	file:
MD5Context	test/threadtest3.c	/^struct MD5Context {$/;"	s	file:
MD5Context	test/threadtest3.c	/^typedef struct MD5Context MD5Context;$/;"	t	typeref:struct:MD5Context	file:
MD5Context	tsrc/tclsqlite.c	/^struct MD5Context {$/;"	s	file:
MD5Context	tsrc/tclsqlite.c	/^typedef struct MD5Context MD5Context;$/;"	t	typeref:struct:MD5Context	file:
MD5DigestToBase10x8	src/tclsqlite.c	/^static void MD5DigestToBase10x8(unsigned char digest[16], char zDigest[50]){$/;"	f	file:
MD5DigestToBase10x8	tsrc/tclsqlite.c	/^static void MD5DigestToBase10x8(unsigned char digest[16], char zDigest[50]){$/;"	f	file:
MD5DigestToBase16	src/tclsqlite.c	/^static void MD5DigestToBase16(unsigned char *digest, char *zBuf){$/;"	f	file:
MD5DigestToBase16	test/threadtest3.c	/^static void MD5DigestToBase16(unsigned char *digest, char *zBuf){$/;"	f	file:
MD5DigestToBase16	tsrc/tclsqlite.c	/^static void MD5DigestToBase16(unsigned char *digest, char *zBuf){$/;"	f	file:
MD5Final	src/tclsqlite.c	/^static void MD5Final(unsigned char digest[16], MD5Context *ctx){$/;"	f	file:
MD5Final	test/threadtest3.c	/^static void MD5Final(unsigned char digest[16], MD5Context *ctx){$/;"	f	file:
MD5Final	tsrc/tclsqlite.c	/^static void MD5Final(unsigned char digest[16], MD5Context *ctx){$/;"	f	file:
MD5Init	src/tclsqlite.c	/^static void MD5Init(MD5Context *ctx){$/;"	f	file:
MD5Init	test/threadtest3.c	/^static void MD5Init(MD5Context *ctx){$/;"	f	file:
MD5Init	tsrc/tclsqlite.c	/^static void MD5Init(MD5Context *ctx){$/;"	f	file:
MD5STEP	src/tclsqlite.c	3577;"	d	file:
MD5STEP	test/threadtest3.c	159;"	d	file:
MD5STEP	tsrc/tclsqlite.c	3577;"	d	file:
MD5Transform	src/tclsqlite.c	/^static void MD5Transform(uint32 buf[4], const uint32 in[16]){$/;"	f	file:
MD5Transform	test/threadtest3.c	/^static void MD5Transform(uint32 buf[4], const uint32 in[16]){$/;"	f	file:
MD5Transform	tsrc/tclsqlite.c	/^static void MD5Transform(uint32 buf[4], const uint32 in[16]){$/;"	f	file:
MD5Update	src/tclsqlite.c	/^void MD5Update(MD5Context *ctx, const unsigned char *buf, unsigned int len){$/;"	f	file:
MD5Update	test/threadtest3.c	/^void MD5Update(MD5Context *ctx, const unsigned char *buf, unsigned int len){$/;"	f	file:
MD5Update	tsrc/tclsqlite.c	/^void MD5Update(MD5Context *ctx, const unsigned char *buf, unsigned int len){$/;"	f	file:
MEM5LINK	sqlite3.c	21923;"	d	file:
MEM5LINK	src/mem5.c	143;"	d	file:
MEM5LINK	tsrc/mem5.c	143;"	d	file:
MEMCELLSIZE	sqlite3.c	17840;"	d	file:
MEMCELLSIZE	src/vdbeInt.h	218;"	d
MEMCELLSIZE	tsrc/vdbeInt.h	218;"	d
MEMDB	sqlite3.c	47058;"	d	file:
MEMDB	sqlite3.c	47060;"	d	file:
MEMDB	src/pager.c	781;"	d	file:
MEMDB	src/pager.c	783;"	d	file:
MEMDB	tsrc/pager.c	781;"	d	file:
MEMDB	tsrc/pager.c	783;"	d	file:
MEMJOURNAL_DFLT_FILECHUNKSIZE	sqlite3.c	87418;"	d	file:
MEMJOURNAL_DFLT_FILECHUNKSIZE	src/memjournal.c	47;"	d	file:
MEMJOURNAL_DFLT_FILECHUNKSIZE	tsrc/memjournal.c	47;"	d	file:
MEMTYPE_HEAP	sqlite3.c	16846;"	d	file:
MEMTYPE_HEAP	src/sqliteInt.h	4247;"	d
MEMTYPE_HEAP	tsrc/sqliteInt.h	4247;"	d
MEMTYPE_LOOKASIDE	sqlite3.c	16847;"	d	file:
MEMTYPE_LOOKASIDE	src/sqliteInt.h	4248;"	d
MEMTYPE_LOOKASIDE	tsrc/sqliteInt.h	4248;"	d
MEMTYPE_PCACHE	sqlite3.c	16849;"	d	file:
MEMTYPE_PCACHE	src/sqliteInt.h	4250;"	d
MEMTYPE_PCACHE	tsrc/sqliteInt.h	4250;"	d
MEMTYPE_SCRATCH	sqlite3.c	16848;"	d	file:
MEMTYPE_SCRATCH	src/sqliteInt.h	4249;"	d
MEMTYPE_SCRATCH	tsrc/sqliteInt.h	4249;"	d
MEM_AffMask	sqlite3.c	17859;"	d	file:
MEM_AffMask	src/vdbeInt.h	237;"	d
MEM_AffMask	tsrc/vdbeInt.h	237;"	d
MEM_Agg	sqlite3.c	17876;"	d	file:
MEM_Agg	src/vdbeInt.h	254;"	d
MEM_Agg	tsrc/vdbeInt.h	254;"	d
MEM_Blob	sqlite3.c	17858;"	d	file:
MEM_Blob	src/vdbeInt.h	236;"	d
MEM_Blob	tsrc/vdbeInt.h	236;"	d
MEM_Cleared	sqlite3.c	17863;"	d	file:
MEM_Cleared	src/vdbeInt.h	241;"	d
MEM_Cleared	tsrc/vdbeInt.h	241;"	d
MEM_Dyn	sqlite3.c	17873;"	d	file:
MEM_Dyn	src/vdbeInt.h	251;"	d
MEM_Dyn	tsrc/vdbeInt.h	251;"	d
MEM_Ephem	sqlite3.c	17875;"	d	file:
MEM_Ephem	src/vdbeInt.h	253;"	d
MEM_Ephem	tsrc/vdbeInt.h	253;"	d
MEM_Frame	sqlite3.c	17861;"	d	file:
MEM_Frame	src/vdbeInt.h	239;"	d
MEM_Frame	tsrc/vdbeInt.h	239;"	d
MEM_Int	sqlite3.c	17856;"	d	file:
MEM_Int	src/vdbeInt.h	234;"	d
MEM_Int	tsrc/vdbeInt.h	234;"	d
MEM_Null	sqlite3.c	17854;"	d	file:
MEM_Null	src/vdbeInt.h	232;"	d
MEM_Null	tsrc/vdbeInt.h	232;"	d
MEM_Real	sqlite3.c	17857;"	d	file:
MEM_Real	src/vdbeInt.h	235;"	d
MEM_Real	tsrc/vdbeInt.h	235;"	d
MEM_RowSet	sqlite3.c	17860;"	d	file:
MEM_RowSet	src/vdbeInt.h	238;"	d
MEM_RowSet	tsrc/vdbeInt.h	238;"	d
MEM_Static	sqlite3.c	17874;"	d	file:
MEM_Static	src/vdbeInt.h	252;"	d
MEM_Static	tsrc/vdbeInt.h	252;"	d
MEM_Str	sqlite3.c	17855;"	d	file:
MEM_Str	src/vdbeInt.h	233;"	d
MEM_Str	tsrc/vdbeInt.h	233;"	d
MEM_Subtype	sqlite3.c	17878;"	d	file:
MEM_Subtype	src/vdbeInt.h	256;"	d
MEM_Subtype	tsrc/vdbeInt.h	256;"	d
MEM_Term	sqlite3.c	17872;"	d	file:
MEM_Term	src/vdbeInt.h	250;"	d
MEM_Term	tsrc/vdbeInt.h	250;"	d
MEM_TypeMask	sqlite3.c	17864;"	d	file:
MEM_TypeMask	src/vdbeInt.h	242;"	d
MEM_TypeMask	tsrc/vdbeInt.h	242;"	d
MEM_Undefined	sqlite3.c	17862;"	d	file:
MEM_Undefined	src/vdbeInt.h	240;"	d
MEM_Undefined	tsrc/vdbeInt.h	240;"	d
MEM_Zero	sqlite3.c	17877;"	d	file:
MEM_Zero	sqlite3.c	17880;"	d	file:
MEM_Zero	sqlite3.c	17881;"	d	file:
MEM_Zero	src/vdbeInt.h	255;"	d
MEM_Zero	src/vdbeInt.h	258;"	d
MEM_Zero	src/vdbeInt.h	259;"	d
MEM_Zero	tsrc/vdbeInt.h	255;"	d
MEM_Zero	tsrc/vdbeInt.h	258;"	d
MEM_Zero	tsrc/vdbeInt.h	259;"	d
MERGE_COUNT	ext/fts2/fts2.c	383;"	d	file:
MERGE_COUNT	tsrc/fts2.c	383;"	d	file:
MIN	ext/async/sqlite3async.c	28;"	d	file:
MIN	ext/fts3/fts3Int.h	86;"	d
MIN	ext/fts5/fts5Int.h	39;"	d
MIN	ext/rtree/rtree.c	362;"	d	file:
MIN	fts5.c	632;"	d	file:
MIN	sqlite3.c	11541;"	d	file:
MIN	sqlite3.c	141510;"	d	file:
MIN	sqlite3.c	160325;"	d	file:
MIN	sqlite3.c	177834;"	d	file:
MIN	src/sqliteInt.h	607;"	d
MIN	src/test_onefile.c	250;"	d	file:
MIN	tsrc/fts3Int.h	86;"	d
MIN	tsrc/fts5.c	632;"	d	file:
MIN	tsrc/rtree.c	362;"	d	file:
MIN	tsrc/sqliteInt.h	607;"	d
MODE_Ascii	shell.c	671;"	d	file:
MODE_Ascii	src/shell.c	671;"	d	file:
MODE_Ascii	tsrc/shell.c	671;"	d	file:
MODE_Column	shell.c	663;"	d	file:
MODE_Column	src/shell.c	663;"	d	file:
MODE_Column	tsrc/shell.c	663;"	d	file:
MODE_Csv	shell.c	669;"	d	file:
MODE_Csv	src/shell.c	669;"	d	file:
MODE_Csv	tsrc/shell.c	669;"	d	file:
MODE_DELETE	test/wordcount.c	198;"	d	file:
MODE_Explain	shell.c	670;"	d	file:
MODE_Explain	src/shell.c	670;"	d	file:
MODE_Explain	tsrc/shell.c	670;"	d	file:
MODE_Html	shell.c	666;"	d	file:
MODE_Html	src/shell.c	666;"	d	file:
MODE_Html	tsrc/shell.c	666;"	d	file:
MODE_INSERT	test/wordcount.c	194;"	d	file:
MODE_Insert	shell.c	667;"	d	file:
MODE_Insert	src/shell.c	667;"	d	file:
MODE_Insert	tsrc/shell.c	667;"	d	file:
MODE_Line	shell.c	662;"	d	file:
MODE_Line	src/shell.c	662;"	d	file:
MODE_Line	tsrc/shell.c	662;"	d	file:
MODE_List	shell.c	664;"	d	file:
MODE_List	src/shell.c	664;"	d	file:
MODE_List	tsrc/shell.c	664;"	d	file:
MODE_Pretty	shell.c	672;"	d	file:
MODE_Pretty	src/shell.c	672;"	d	file:
MODE_Pretty	tsrc/shell.c	672;"	d	file:
MODE_QUERY	test/wordcount.c	199;"	d	file:
MODE_REPLACE	test/wordcount.c	195;"	d	file:
MODE_SELECT	test/wordcount.c	196;"	d	file:
MODE_Semi	shell.c	665;"	d	file:
MODE_Semi	src/shell.c	665;"	d	file:
MODE_Semi	tsrc/shell.c	665;"	d	file:
MODE_Tcl	shell.c	668;"	d	file:
MODE_Tcl	src/shell.c	668;"	d	file:
MODE_Tcl	tsrc/shell.c	668;"	d	file:
MODE_UPDATE	test/wordcount.c	197;"	d	file:
MPTEST1	Makefile	/^MPTEST1=.\/mptester$(TEXE) mptest.db $(TOP)\/mptest\/crash01.test --repeat 20$/;"	m
MPTEST1	main.mk	/^MPTEST1=.\/mptester$(EXE) mptest1.db $(TOP)\/mptest\/crash01.test --repeat 20$/;"	m
MPTEST2	Makefile	/^MPTEST2=.\/mptester$(TEXE) mptest.db $(TOP)\/mptest\/multiwrite01.test --repeat 20$/;"	m
MPTEST2	main.mk	/^MPTEST2=.\/mptester$(EXE) mptest2.db $(TOP)\/mptest\/multiwrite01.test --repeat 20$/;"	m
MSG_Close	src/test_server.c	244;"	d	file:
MSG_Done	src/test_server.c	245;"	d	file:
MSG_Finalize	src/test_server.c	243;"	d	file:
MSG_Open	src/test_server.c	239;"	d	file:
MSG_Prepare	src/test_server.c	240;"	d	file:
MSG_Reset	src/test_server.c	242;"	d	file:
MSG_Step	src/test_server.c	241;"	d	file:
MULTIPLEX_CTRL_ENABLE	src/test_multiplex.h	45;"	d
MULTIPLEX_CTRL_SET_CHUNK_SIZE	src/test_multiplex.h	46;"	d
MULTIPLEX_CTRL_SET_MAX_CHUNKS	src/test_multiplex.h	47;"	d
MULTITERMINAL	tool/lemon.c	/^  MULTITERMINAL$/;"	e	enum:symbol_type	file:
MUTEX_LOGIC	sqlite3.c	13652;"	d	file:
MUTEX_LOGIC	sqlite3.c	13654;"	d	file:
MUTEX_LOGIC	src/mutex.h	67;"	d
MUTEX_LOGIC	src/mutex.h	69;"	d
MUTEX_LOGIC	tsrc/mutex.h	67;"	d
MUTEX_LOGIC	tsrc/mutex.h	69;"	d
MX_ARG	mptest/mptest.c	867;"	d	file:
MX_CELL	sqlite3.c	57371;"	d	file:
MX_CELL	src/btreeInt.h	229;"	d
MX_CELL	tsrc/btreeInt.h	229;"	d
MX_CELL_SIZE	sqlite3.c	57364;"	d	file:
MX_CELL_SIZE	src/btreeInt.h	222;"	d
MX_CELL_SIZE	tsrc/btreeInt.h	222;"	d
MX_CHUNK_NUMBER	src/test_multiplex.c	85;"	d	file:
MX_CLOSE_ATTEMPT	sqlite3.c	39718;"	d	file:
MX_CLOSE_ATTEMPT	src/os_win.c	2602;"	d	file:
MX_CLOSE_ATTEMPT	tsrc/os_win.c	2602;"	d	file:
MX_FILE	test/fuzzcheck.c	114;"	d	file:
MX_FILE_SZ	test/fuzzcheck.c	119;"	d	file:
MX_LCK	tool/showlocks.c	18;"	d	file:
MX_SMALL	sqlite3.c	21130;"	d	file:
MX_SMALL	src/mem3.c	40;"	d	file:
MX_SMALL	tsrc/mem3.c	40;"	d	file:
Main	tool/GetFile.cs	/^        private static int Main($/;"	m	class:GetFile.Program	file:
Main	tool/Replace.cs	/^        private static int Main($/;"	m	class:Replace.Replace	file:
MainPage	vsixtest/MainPage.xaml.cpp	/^MainPage::MainPage()$/;"	f	class:MainPage
MallocLog	src/test_malloc.c	/^struct MallocLog {$/;"	s	file:
MallocLog	src/test_malloc.c	/^typedef struct MallocLog MallocLog;$/;"	t	typeref:struct:MallocLog	file:
MatchInfo	ext/fts3/fts3_snippet.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	ext/fts3/fts3_snippet.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatchInfo	sqlite3.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	sqlite3.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatchInfo	tsrc/fts3_snippet.c	/^struct MatchInfo {$/;"	s	file:
MatchInfo	tsrc/fts3_snippet.c	/^typedef struct MatchInfo MatchInfo;$/;"	t	typeref:struct:MatchInfo	file:
MatchQuery	ext/misc/spellfix.c	/^typedef struct MatchQuery {$/;"	s	file:
MatchQuery	ext/misc/spellfix.c	/^} MatchQuery;$/;"	t	typeref:struct:MatchQuery	file:
MatchinfoBuffer	ext/fts3/fts3Int.h	/^typedef struct MatchinfoBuffer MatchinfoBuffer;$/;"	t	typeref:struct:MatchinfoBuffer
MatchinfoBuffer	ext/fts3/fts3_snippet.c	/^struct MatchinfoBuffer {$/;"	s	file:
MatchinfoBuffer	sqlite3.c	/^struct MatchinfoBuffer {$/;"	s	file:
MatchinfoBuffer	sqlite3.c	/^typedef struct MatchinfoBuffer MatchinfoBuffer;$/;"	t	typeref:struct:MatchinfoBuffer	file:
MatchinfoBuffer	tsrc/fts3Int.h	/^typedef struct MatchinfoBuffer MatchinfoBuffer;$/;"	t	typeref:struct:MatchinfoBuffer
MatchinfoBuffer	tsrc/fts3_snippet.c	/^struct MatchinfoBuffer {$/;"	s	file:
Md5_Init	src/tclsqlite.c	/^int Md5_Init(Tcl_Interp *interp){$/;"	f
Md5_Init	tsrc/tclsqlite.c	/^int Md5_Init(Tcl_Interp *interp){$/;"	f
Md5_Register	src/tclsqlite.c	/^int Md5_Register($/;"	f
Md5_Register	tsrc/tclsqlite.c	/^int Md5_Register($/;"	f
Mem	sqlite3.c	/^struct Mem {$/;"	s	file:
Mem	sqlite3.c	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem	file:
Mem	src/vdbe.h	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem
Mem	src/vdbeInt.h	/^struct Mem {$/;"	s
Mem	tsrc/vdbe.h	/^typedef struct Mem Mem;$/;"	t	typeref:struct:Mem
Mem	tsrc/vdbeInt.h	/^struct Mem {$/;"	s
Mem0Global	sqlite3.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem0Global	src/malloc.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem0Global	tsrc/malloc.c	/^static SQLITE_WSD struct Mem0Global {$/;"	s	file:
Mem3Block	sqlite3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	sqlite3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Block	src/mem3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	src/mem3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Block	tsrc/mem3.c	/^struct Mem3Block {$/;"	s	file:
Mem3Block	tsrc/mem3.c	/^typedef struct Mem3Block Mem3Block;$/;"	t	typeref:struct:Mem3Block	file:
Mem3Global	sqlite3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem3Global	src/mem3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem3Global	tsrc/mem3.c	/^static SQLITE_WSD struct Mem3Global {$/;"	s	file:
Mem5Global	sqlite3.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Global	src/mem5.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Global	tsrc/mem5.c	/^static SQLITE_WSD struct Mem5Global {$/;"	s	file:
Mem5Link	sqlite3.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	sqlite3.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
Mem5Link	src/mem5.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	src/mem5.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
Mem5Link	tsrc/mem5.c	/^struct Mem5Link {$/;"	s	file:
Mem5Link	tsrc/mem5.c	/^typedef struct Mem5Link Mem5Link;$/;"	t	typeref:struct:Mem5Link	file:
MemBlockHdr	sqlite3.c	/^struct MemBlockHdr {$/;"	s	file:
MemBlockHdr	src/mem2.c	/^struct MemBlockHdr {$/;"	s	file:
MemBlockHdr	tsrc/mem2.c	/^struct MemBlockHdr {$/;"	s	file:
MemFault	src/test_malloc.c	/^static struct MemFault {$/;"	s	file:
MemJournal	sqlite3.c	/^struct MemJournal {$/;"	s	file:
MemJournal	sqlite3.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournal	src/memjournal.c	/^struct MemJournal {$/;"	s	file:
MemJournal	src/memjournal.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournal	tsrc/memjournal.c	/^struct MemJournal {$/;"	s	file:
MemJournal	tsrc/memjournal.c	/^typedef struct MemJournal MemJournal;$/;"	t	typeref:struct:MemJournal	file:
MemJournalMethods	sqlite3.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemJournalMethods	src/memjournal.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemJournalMethods	tsrc/memjournal.c	/^static const struct sqlite3_io_methods MemJournalMethods = {$/;"	v	typeref:struct:sqlite3_io_methods	file:
MemPage	sqlite3.c	/^struct MemPage {$/;"	s	file:
MemPage	sqlite3.c	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage	file:
MemPage	src/btreeInt.h	/^struct MemPage {$/;"	s
MemPage	src/btreeInt.h	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage
MemPage	tsrc/btreeInt.h	/^struct MemPage {$/;"	s
MemPage	tsrc/btreeInt.h	/^typedef struct MemPage MemPage;$/;"	t	typeref:struct:MemPage
MemSetTypeFlag	sqlite3.c	17893;"	d	file:
MemSetTypeFlag	src/vdbeInt.h	271;"	d
MemSetTypeFlag	tsrc/vdbeInt.h	271;"	d
MemValue	sqlite3.c	/^  union MemValue {$/;"	u	struct:Mem	file:
MemValue	src/vdbeInt.h	/^  union MemValue {$/;"	u	struct:Mem
MemValue	tsrc/vdbeInt.h	/^  union MemValue {$/;"	u	struct:Mem
MemoryCheck	tool/lemon.c	416;"	d	file:
MergeEngine	sqlite3.c	/^struct MergeEngine {$/;"	s	file:
MergeEngine	sqlite3.c	/^typedef struct MergeEngine MergeEngine;     \/* Merge PMAs together *\/$/;"	t	typeref:struct:MergeEngine	file:
MergeEngine	src/vdbesort.c	/^struct MergeEngine {$/;"	s	file:
MergeEngine	src/vdbesort.c	/^typedef struct MergeEngine MergeEngine;     \/* Merge PMAs together *\/$/;"	t	typeref:struct:MergeEngine	file:
MergeEngine	tsrc/vdbesort.c	/^struct MergeEngine {$/;"	s	file:
MergeEngine	tsrc/vdbesort.c	/^typedef struct MergeEngine MergeEngine;     \/* Merge PMAs together *\/$/;"	t	typeref:struct:MergeEngine	file:
MissingArgs	tool/GetFile.cs	/^        MissingArgs = 1,$/;"	e	enum:GetFile.ExitCode	file:
MissingArgs	tool/Replace.cs	/^        MissingArgs = 1,$/;"	e	enum:Replace.ExitCode	file:
Module	sqlite3.c	/^struct Module {$/;"	s	file:
Module	sqlite3.c	/^typedef struct Module Module;$/;"	t	typeref:struct:Module	file:
Module	src/sqliteInt.h	/^struct Module {$/;"	s
Module	src/sqliteInt.h	/^typedef struct Module Module;$/;"	t	typeref:struct:Module
Module	tsrc/sqliteInt.h	/^struct Module {$/;"	s
Module	tsrc/sqliteInt.h	/^typedef struct Module Module;$/;"	t	typeref:struct:Module
NAMEWIDTH	test/speedtest1.c	276;"	d	file:
NAME_MAX	src/test_windirent.h	56;"	d
NAME_MAX	src/test_windirent.h	58;"	d
NB	sqlite3.c	64860;"	d	file:
NB	src/btree.c	6724;"	d	file:
NB	tsrc/btree.c	6724;"	d	file:
NCELL	ext/rtree/rtree.c	304;"	d	file:
NCELL	sqlite3.c	160267;"	d	file:
NCELL	tsrc/rtree.c	304;"	d	file:
NCSIZE	sqlite3.c	20633;"	d	file:
NCSIZE	src/mem2.c	74;"	d	file:
NCSIZE	tsrc/mem2.c	74;"	d	file:
NC_AllowAgg	sqlite3.c	15213;"	d	file:
NC_AllowAgg	src/sqliteInt.h	2614;"	d
NC_AllowAgg	tsrc/sqliteInt.h	2614;"	d
NC_HasAgg	sqlite3.c	15217;"	d	file:
NC_HasAgg	src/sqliteInt.h	2618;"	d
NC_HasAgg	tsrc/sqliteInt.h	2618;"	d
NC_IdxExpr	sqlite3.c	15218;"	d	file:
NC_IdxExpr	src/sqliteInt.h	2619;"	d
NC_IdxExpr	tsrc/sqliteInt.h	2619;"	d
NC_InAggFunc	sqlite3.c	15216;"	d	file:
NC_InAggFunc	src/sqliteInt.h	2617;"	d
NC_InAggFunc	tsrc/sqliteInt.h	2617;"	d
NC_IsCheck	sqlite3.c	15215;"	d	file:
NC_IsCheck	src/sqliteInt.h	2616;"	d
NC_IsCheck	tsrc/sqliteInt.h	2616;"	d
NC_MinMaxAgg	sqlite3.c	15220;"	d	file:
NC_MinMaxAgg	src/sqliteInt.h	2621;"	d
NC_MinMaxAgg	tsrc/sqliteInt.h	2621;"	d
NC_PartIdx	sqlite3.c	15214;"	d	file:
NC_PartIdx	src/sqliteInt.h	2615;"	d
NC_PartIdx	tsrc/sqliteInt.h	2615;"	d
NC_VarSelect	sqlite3.c	15219;"	d	file:
NC_VarSelect	src/sqliteInt.h	2620;"	d
NC_VarSelect	tsrc/sqliteInt.h	2620;"	d
NDEBUG	ext/fts3/fts3Int.h	171;"	d
NDEBUG	ext/fts3/fts3Int.h	18;"	d
NDEBUG	ext/misc/fuzzer.c	149;"	d	file:
NDEBUG	fts5.c	6;"	d	file:
NDEBUG	fts5.c	9;"	d	file:
NDEBUG	sqlite3.c	11010;"	d	file:
NDEBUG	sqlite3.c	11013;"	d	file:
NDEBUG	sqlite3.c	141161;"	d	file:
NDEBUG	sqlite3.c	141595;"	d	file:
NDEBUG	sqlite3.c	177210;"	d	file:
NDEBUG	sqlite3.c	177213;"	d	file:
NDEBUG	src/sqliteInt.h	348;"	d
NDEBUG	src/sqliteInt.h	351;"	d
NDEBUG	tsrc/fts3Int.h	171;"	d
NDEBUG	tsrc/fts3Int.h	18;"	d
NDEBUG	tsrc/fts5.c	6;"	d	file:
NDEBUG	tsrc/fts5.c	9;"	d	file:
NDEBUG	tsrc/sqliteInt.h	348;"	d
NDEBUG	tsrc/sqliteInt.h	351;"	d
NDELAY	sqlite3.c	137935;"	d	file:
NDELAY	src/main.c	1440;"	d	file:
NDELAY	tsrc/main.c	1440;"	d	file:
NEVER	ext/fts3/fts3Int.h	142;"	d
NEVER	ext/fts5/fts5Int.h	37;"	d
NEVER	ext/misc/spellfix.c	26;"	d	file:
NEVER	fts5.c	630;"	d	file:
NEVER	sqlite3.c	11086;"	d	file:
NEVER	sqlite3.c	11089;"	d	file:
NEVER	sqlite3.c	11092;"	d	file:
NEVER	sqlite3.c	141566;"	d	file:
NEVER	sqlite3.c	141569;"	d	file:
NEVER	sqlite3.c	141574;"	d	file:
NEVER	sqlite3.c	177832;"	d	file:
NEVER	src/sqliteInt.h	424;"	d
NEVER	src/sqliteInt.h	427;"	d
NEVER	src/sqliteInt.h	430;"	d
NEVER	tsrc/fts3Int.h	142;"	d
NEVER	tsrc/fts5.c	630;"	d	file:
NEVER	tsrc/sqliteInt.h	424;"	d
NEVER	tsrc/sqliteInt.h	427;"	d
NEVER	tsrc/sqliteInt.h	430;"	d
NEXT	tool/lemon.c	1758;"	d	file:
NHASH	tool/sqldiff.c	786;"	d	file:
NM_MAX_TOKEN	ext/fts3/fts3_test.c	38;"	d	file:
NN	sqlite3.c	64859;"	d	file:
NN	src/btree.c	6723;"	d	file:
NN	tsrc/btree.c	6723;"	d	file:
NONE	tool/lemon.c	/^    NONE,$/;"	e	enum:e_assoc	file:
NONTERMINAL	tool/lemon.c	/^  NONTERMINAL,$/;"	e	enum:symbol_type	file:
NOT	ext/fts5/test/fts5_common.tcl	/^proc NOT {a b} {$/;"	p
NOT_USED	tool/lemon.c	/^  NOT_USED,                \/* Deleted by compression *\/$/;"	e	enum:e_action	file:
NOT_WITHIN	ext/rtree/sqlite3rtree.h	108;"	d
NOT_WITHIN	sqlite3.c	8731;"	d	file:
NOT_WITHIN	sqlite3.h	8471;"	d
NOT_WITHIN	tsrc/sqlite3.h	8471;"	d
NO_LOCK	sqlite3.c	13455;"	d	file:
NO_LOCK	src/os.h	85;"	d
NO_LOCK	tsrc/os.h	85;"	d
NO_OFFSET	tool/lemon.c	363;"	d	file:
NO_SHLWAPI_GDI	autoconf/tea/win/nmakehlp.c	17;"	d	file:
NO_SHLWAPI_REG	autoconf/tea/win/nmakehlp.c	19;"	d	file:
NO_SHLWAPI_STREAM	autoconf/tea/win/nmakehlp.c	18;"	d	file:
NTDDI_WIN8	sqlite3.c	37188;"	d	file:
NTDDI_WIN8	src/os_win.c	72;"	d	file:
NTDDI_WIN8	tsrc/os_win.c	72;"	d	file:
NTDDI_WINBLUE	sqlite3.c	37192;"	d	file:
NTDDI_WINBLUE	src/os_win.c	76;"	d	file:
NTDDI_WINBLUE	tsrc/os_win.c	76;"	d	file:
NTDDI_WINTHRESHOLD	sqlite3.c	37196;"	d	file:
NTDDI_WINTHRESHOLD	src/os_win.c	80;"	d	file:
NTDDI_WINTHRESHOLD	tsrc/os_win.c	80;"	d	file:
NULL_INTPTR_T	src/test_windirent.h	67;"	d
NUM_PREPARED_STMTS	src/tclsqlite.c	80;"	d	file:
NUM_PREPARED_STMTS	tsrc/tclsqlite.c	80;"	d	file:
N_HASH	sqlite3.c	21136;"	d	file:
N_HASH	src/mem3.c	46;"	d	file:
N_HASH	tsrc/mem3.c	46;"	d	file:
N_OR_COST	sqlite3.c	123124;"	d	file:
N_OR_COST	src/whereInt.h	160;"	d
N_OR_COST	tsrc/whereInt.h	160;"	d
N_SORT_BUCKET	sqlite3.c	44218;"	d	file:
N_SORT_BUCKET	src/pcache.c	728;"	d	file:
N_SORT_BUCKET	tsrc/pcache.c	728;"	d	file:
N_STATEMENT	ext/rtree/rtree.c	3080;"	d	file:
N_STATEMENT	sqlite3.c	163043;"	d	file:
N_STATEMENT	tsrc/rtree.c	3080;"	d	file:
N_THREAD	src/test4.c	60;"	d	file:
N_THREAD	src/test7.c	89;"	d	file:
NameContext	sqlite3.c	/^struct NameContext {$/;"	s	file:
NameContext	sqlite3.c	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext	file:
NameContext	src/sqliteInt.h	/^struct NameContext {$/;"	s
NameContext	src/sqliteInt.h	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext
NameContext	tsrc/sqliteInt.h	/^struct NameContext {$/;"	s
NameContext	tsrc/sqliteInt.h	/^typedef struct NameContext NameContext;$/;"	t	typeref:struct:NameContext
NearDocument	ext/fts3/fts3_test.c	/^struct NearDocument {$/;"	s	file:
NearDocument	ext/fts3/fts3_test.c	/^typedef struct NearDocument NearDocument;$/;"	t	typeref:struct:NearDocument	file:
NearPhrase	ext/fts3/fts3_test.c	/^struct NearPhrase {$/;"	s	file:
NearPhrase	ext/fts3/fts3_test.c	/^typedef struct NearPhrase NearPhrase;$/;"	t	typeref:struct:NearPhrase	file:
NearToken	ext/fts3/fts3_test.c	/^struct NearToken {$/;"	s	file:
NearToken	ext/fts3/fts3_test.c	/^typedef struct NearToken NearToken;$/;"	t	typeref:struct:NearToken	file:
NodeReader	ext/fts3/fts3_write.c	/^struct NodeReader {$/;"	s	file:
NodeReader	ext/fts3/fts3_write.c	/^typedef struct NodeReader NodeReader;$/;"	t	typeref:struct:NodeReader	file:
NodeReader	sqlite3.c	/^struct NodeReader {$/;"	s	file:
NodeReader	sqlite3.c	/^typedef struct NodeReader NodeReader;$/;"	t	typeref:struct:NodeReader	file:
NodeReader	tsrc/fts3_write.c	/^struct NodeReader {$/;"	s	file:
NodeReader	tsrc/fts3_write.c	/^typedef struct NodeReader NodeReader;$/;"	t	typeref:struct:NodeReader	file:
NodeWriter	ext/fts3/fts3_write.c	/^struct NodeWriter {$/;"	s	file:
NodeWriter	ext/fts3/fts3_write.c	/^typedef struct NodeWriter NodeWriter;$/;"	t	typeref:struct:NodeWriter	file:
NodeWriter	sqlite3.c	/^struct NodeWriter {$/;"	s	file:
NodeWriter	sqlite3.c	/^typedef struct NodeWriter NodeWriter;$/;"	t	typeref:struct:NodeWriter	file:
NodeWriter	tsrc/fts3_write.c	/^struct NodeWriter {$/;"	s	file:
NodeWriter	tsrc/fts3_write.c	/^typedef struct NodeWriter NodeWriter;$/;"	t	typeref:struct:NodeWriter	file:
OE_Abort	sqlite3.c	14553;"	d	file:
OE_Abort	src/sqliteInt.h	1954;"	d
OE_Abort	tsrc/sqliteInt.h	1954;"	d
OE_Cascade	sqlite3.c	14561;"	d	file:
OE_Cascade	src/sqliteInt.h	1962;"	d
OE_Cascade	tsrc/sqliteInt.h	1962;"	d
OE_Default	sqlite3.c	14563;"	d	file:
OE_Default	src/sqliteInt.h	1964;"	d
OE_Default	tsrc/sqliteInt.h	1964;"	d
OE_Fail	sqlite3.c	14554;"	d	file:
OE_Fail	src/sqliteInt.h	1955;"	d
OE_Fail	tsrc/sqliteInt.h	1955;"	d
OE_Ignore	sqlite3.c	14555;"	d	file:
OE_Ignore	src/sqliteInt.h	1956;"	d
OE_Ignore	tsrc/sqliteInt.h	1956;"	d
OE_None	sqlite3.c	14551;"	d	file:
OE_None	src/sqliteInt.h	1952;"	d
OE_None	tsrc/sqliteInt.h	1952;"	d
OE_Replace	sqlite3.c	14556;"	d	file:
OE_Replace	src/sqliteInt.h	1957;"	d
OE_Replace	tsrc/sqliteInt.h	1957;"	d
OE_Restrict	sqlite3.c	14558;"	d	file:
OE_Restrict	src/sqliteInt.h	1959;"	d
OE_Restrict	tsrc/sqliteInt.h	1959;"	d
OE_Rollback	sqlite3.c	14552;"	d	file:
OE_Rollback	src/sqliteInt.h	1953;"	d
OE_Rollback	tsrc/sqliteInt.h	1953;"	d
OE_SetDflt	sqlite3.c	14560;"	d	file:
OE_SetDflt	src/sqliteInt.h	1961;"	d
OE_SetDflt	tsrc/sqliteInt.h	1961;"	d
OE_SetNull	sqlite3.c	14559;"	d	file:
OE_SetNull	src/sqliteInt.h	1960;"	d
OE_SetNull	tsrc/sqliteInt.h	1960;"	d
OMIT_TEMPDB	sqlite3.c	11466;"	d	file:
OMIT_TEMPDB	sqlite3.c	11468;"	d	file:
OMIT_TEMPDB	src/sqliteInt.h	532;"	d
OMIT_TEMPDB	src/sqliteInt.h	534;"	d
OMIT_TEMPDB	tsrc/sqliteInt.h	532;"	d
OMIT_TEMPDB	tsrc/sqliteInt.h	534;"	d
ONEPASS_MULTI	sqlite3.c	16269;"	d	file:
ONEPASS_MULTI	src/sqliteInt.h	3670;"	d
ONEPASS_MULTI	tsrc/sqliteInt.h	3670;"	d
ONEPASS_OFF	sqlite3.c	16267;"	d	file:
ONEPASS_OFF	src/sqliteInt.h	3668;"	d
ONEPASS_OFF	tsrc/sqliteInt.h	3668;"	d
ONEPASS_SINGLE	sqlite3.c	16268;"	d	file:
ONEPASS_SINGLE	src/sqliteInt.h	3669;"	d
ONEPASS_SINGLE	tsrc/sqliteInt.h	3669;"	d
ONE_BYTE_INT	sqlite3.c	73667;"	d	file:
ONE_BYTE_INT	src/vdbeaux.c	3309;"	d	file:
ONE_BYTE_INT	tsrc/vdbeaux.c	3309;"	d	file:
ONLY_IF_REALLOC_STRESS	sqlite3.c	11103;"	d	file:
ONLY_IF_REALLOC_STRESS	sqlite3.c	11105;"	d	file:
ONLY_IF_REALLOC_STRESS	sqlite3.c	11107;"	d	file:
ONLY_IF_REALLOC_STRESS	src/sqliteInt.h	441;"	d
ONLY_IF_REALLOC_STRESS	src/sqliteInt.h	443;"	d
ONLY_IF_REALLOC_STRESS	src/sqliteInt.h	445;"	d
ONLY_IF_REALLOC_STRESS	tsrc/sqliteInt.h	441;"	d
ONLY_IF_REALLOC_STRESS	tsrc/sqliteInt.h	443;"	d
ONLY_IF_REALLOC_STRESS	tsrc/sqliteInt.h	445;"	d
OOM_MAX	tool/fuzzershell.c	91;"	d	file:
OPFLAG_APPEND	sqlite3.c	15616;"	d	file:
OPFLAG_APPEND	src/sqliteInt.h	3017;"	d
OPFLAG_APPEND	tsrc/sqliteInt.h	3017;"	d
OPFLAG_AUXDELETE	sqlite3.c	15629;"	d	file:
OPFLAG_AUXDELETE	src/sqliteInt.h	3030;"	d
OPFLAG_AUXDELETE	tsrc/sqliteInt.h	3030;"	d
OPFLAG_BULKCSR	sqlite3.c	15623;"	d	file:
OPFLAG_BULKCSR	src/sqliteInt.h	3024;"	d
OPFLAG_BULKCSR	tsrc/sqliteInt.h	3024;"	d
OPFLAG_EPHEM	sqlite3.c	15613;"	d	file:
OPFLAG_EPHEM	src/sqliteInt.h	3014;"	d
OPFLAG_EPHEM	tsrc/sqliteInt.h	3014;"	d
OPFLAG_FORDELETE	sqlite3.c	15625;"	d	file:
OPFLAG_FORDELETE	src/sqliteInt.h	3026;"	d
OPFLAG_FORDELETE	tsrc/sqliteInt.h	3026;"	d
OPFLAG_ISNOOP	sqlite3.c	15619;"	d	file:
OPFLAG_ISNOOP	src/sqliteInt.h	3020;"	d
OPFLAG_ISNOOP	tsrc/sqliteInt.h	3020;"	d
OPFLAG_ISUPDATE	sqlite3.c	15615;"	d	file:
OPFLAG_ISUPDATE	src/sqliteInt.h	3016;"	d
OPFLAG_ISUPDATE	tsrc/sqliteInt.h	3016;"	d
OPFLAG_LASTROWID	sqlite3.c	15614;"	d	file:
OPFLAG_LASTROWID	src/sqliteInt.h	3015;"	d
OPFLAG_LASTROWID	tsrc/sqliteInt.h	3015;"	d
OPFLAG_LENGTHARG	sqlite3.c	15621;"	d	file:
OPFLAG_LENGTHARG	src/sqliteInt.h	3022;"	d
OPFLAG_LENGTHARG	tsrc/sqliteInt.h	3022;"	d
OPFLAG_NCHANGE	sqlite3.c	15611;"	d	file:
OPFLAG_NCHANGE	src/sqliteInt.h	3012;"	d
OPFLAG_NCHANGE	tsrc/sqliteInt.h	3012;"	d
OPFLAG_P2ISREG	sqlite3.c	15626;"	d	file:
OPFLAG_P2ISREG	src/sqliteInt.h	3027;"	d
OPFLAG_P2ISREG	tsrc/sqliteInt.h	3027;"	d
OPFLAG_PERMUTE	sqlite3.c	15627;"	d	file:
OPFLAG_PERMUTE	src/sqliteInt.h	3028;"	d
OPFLAG_PERMUTE	tsrc/sqliteInt.h	3028;"	d
OPFLAG_SAVEPOSITION	sqlite3.c	15628;"	d	file:
OPFLAG_SAVEPOSITION	src/sqliteInt.h	3029;"	d
OPFLAG_SAVEPOSITION	tsrc/sqliteInt.h	3029;"	d
OPFLAG_SEEKEQ	sqlite3.c	15624;"	d	file:
OPFLAG_SEEKEQ	src/sqliteInt.h	3025;"	d
OPFLAG_SEEKEQ	tsrc/sqliteInt.h	3025;"	d
OPFLAG_TYPEOFARG	sqlite3.c	15622;"	d	file:
OPFLAG_TYPEOFARG	src/sqliteInt.h	3023;"	d
OPFLAG_TYPEOFARG	tsrc/sqliteInt.h	3023;"	d
OPFLAG_USESEEKRESULT	sqlite3.c	15617;"	d	file:
OPFLAG_USESEEKRESULT	src/sqliteInt.h	3018;"	d
OPFLAG_USESEEKRESULT	tsrc/sqliteInt.h	3018;"	d
OPFLG_IN1	opcodes.h	171;"	d
OPFLG_IN1	sqlite3.c	12696;"	d	file:
OPFLG_IN1	tsrc/opcodes.h	171;"	d
OPFLG_IN2	opcodes.h	172;"	d
OPFLG_IN2	sqlite3.c	12697;"	d	file:
OPFLG_IN2	tsrc/opcodes.h	172;"	d
OPFLG_IN3	opcodes.h	173;"	d
OPFLG_IN3	sqlite3.c	12698;"	d	file:
OPFLG_IN3	tsrc/opcodes.h	173;"	d
OPFLG_INITIALIZER	opcodes.h	176;"	d
OPFLG_INITIALIZER	sqlite3.c	12701;"	d	file:
OPFLG_INITIALIZER	tsrc/opcodes.h	176;"	d
OPFLG_JUMP	opcodes.h	170;"	d
OPFLG_JUMP	sqlite3.c	12695;"	d	file:
OPFLG_JUMP	tsrc/opcodes.h	170;"	d
OPFLG_OUT2	opcodes.h	174;"	d
OPFLG_OUT2	sqlite3.c	12699;"	d	file:
OPFLG_OUT2	tsrc/opcodes.h	174;"	d
OPFLG_OUT3	opcodes.h	175;"	d
OPFLG_OUT3	sqlite3.c	12700;"	d	file:
OPFLG_OUT3	tsrc/opcodes.h	175;"	d
OPT_DBL	tool/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_FDBL	tool/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FEATURE_FLAGS	Makefile	/^OPT_FEATURE_FLAGS = $/;"	m
OPT_FFLAG	tool/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FINT	tool/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_FLAG	tool/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_FSTR	tool/lemon.c	/^         OPT_FFLAG, OPT_FINT, OPT_FDBL, OPT_FSTR};$/;"	e	enum:option_type	file:
OPT_INT	tool/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OPT_STR	tool/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	e	enum:option_type	file:
OP_Add	opcodes.h	50;"	d
OP_Add	sqlite3.c	12575;"	d	file:
OP_Add	tsrc/opcodes.h	50;"	d
OP_AddImm	opcodes.h	93;"	d
OP_AddImm	sqlite3.c	12618;"	d	file:
OP_AddImm	tsrc/opcodes.h	93;"	d
OP_Affinity	opcodes.h	99;"	d
OP_Affinity	sqlite3.c	12624;"	d	file:
OP_Affinity	tsrc/opcodes.h	99;"	d
OP_AggFinal	opcodes.h	151;"	d
OP_AggFinal	sqlite3.c	12676;"	d	file:
OP_AggFinal	tsrc/opcodes.h	151;"	d
OP_AggStep	opcodes.h	150;"	d
OP_AggStep	sqlite3.c	12675;"	d	file:
OP_AggStep	tsrc/opcodes.h	150;"	d
OP_AggStep0	opcodes.h	149;"	d
OP_AggStep0	sqlite3.c	12674;"	d	file:
OP_AggStep0	tsrc/opcodes.h	149;"	d
OP_And	opcodes.h	31;"	d
OP_And	sqlite3.c	12556;"	d	file:
OP_And	tsrc/opcodes.h	31;"	d
OP_AutoCommit	opcodes.h	4;"	d
OP_AutoCommit	sqlite3.c	12529;"	d	file:
OP_AutoCommit	tsrc/opcodes.h	4;"	d
OP_BitAnd	opcodes.h	46;"	d
OP_BitAnd	sqlite3.c	12571;"	d	file:
OP_BitAnd	tsrc/opcodes.h	46;"	d
OP_BitNot	opcodes.h	57;"	d
OP_BitNot	sqlite3.c	12582;"	d	file:
OP_BitNot	tsrc/opcodes.h	57;"	d
OP_BitOr	opcodes.h	47;"	d
OP_BitOr	sqlite3.c	12572;"	d	file:
OP_BitOr	tsrc/opcodes.h	47;"	d
OP_Blob	opcodes.h	83;"	d
OP_Blob	sqlite3.c	12608;"	d	file:
OP_Blob	tsrc/opcodes.h	83;"	d
OP_Cast	opcodes.h	95;"	d
OP_Cast	sqlite3.c	12620;"	d	file:
OP_Cast	tsrc/opcodes.h	95;"	d
OP_Checkpoint	opcodes.h	11;"	d
OP_Checkpoint	sqlite3.c	12536;"	d	file:
OP_Checkpoint	tsrc/opcodes.h	11;"	d
OP_Clear	opcodes.h	133;"	d
OP_Clear	sqlite3.c	12658;"	d	file:
OP_Clear	tsrc/opcodes.h	133;"	d
OP_Close	opcodes.h	113;"	d
OP_Close	sqlite3.c	12638;"	d	file:
OP_Close	tsrc/opcodes.h	113;"	d
OP_CollSeq	opcodes.h	90;"	d
OP_CollSeq	sqlite3.c	12615;"	d	file:
OP_CollSeq	tsrc/opcodes.h	90;"	d
OP_Column	opcodes.h	98;"	d
OP_Column	sqlite3.c	12623;"	d	file:
OP_Column	tsrc/opcodes.h	98;"	d
OP_ColumnsUsed	opcodes.h	114;"	d
OP_ColumnsUsed	sqlite3.c	12639;"	d	file:
OP_ColumnsUsed	tsrc/opcodes.h	114;"	d
OP_Compare	opcodes.h	97;"	d
OP_Compare	sqlite3.c	12622;"	d	file:
OP_Compare	tsrc/opcodes.h	97;"	d
OP_Concat	opcodes.h	55;"	d
OP_Concat	sqlite3.c	12580;"	d	file:
OP_Concat	tsrc/opcodes.h	55;"	d
OP_Copy	opcodes.h	86;"	d
OP_Copy	sqlite3.c	12611;"	d	file:
OP_Copy	tsrc/opcodes.h	86;"	d
OP_Count	opcodes.h	102;"	d
OP_Count	sqlite3.c	12627;"	d	file:
OP_Count	tsrc/opcodes.h	102;"	d
OP_CreateIndex	opcodes.h	135;"	d
OP_CreateIndex	sqlite3.c	12660;"	d	file:
OP_CreateIndex	tsrc/opcodes.h	135;"	d
OP_CreateTable	opcodes.h	137;"	d
OP_CreateTable	sqlite3.c	12662;"	d	file:
OP_CreateTable	tsrc/opcodes.h	137;"	d
OP_CursorHint	opcodes.h	162;"	d
OP_CursorHint	sqlite3.c	12687;"	d	file:
OP_CursorHint	tsrc/opcodes.h	162;"	d
OP_DecrJumpZero	opcodes.h	70;"	d
OP_DecrJumpZero	sqlite3.c	12595;"	d	file:
OP_DecrJumpZero	tsrc/opcodes.h	70;"	d
OP_Delete	opcodes.h	119;"	d
OP_Delete	sqlite3.c	12644;"	d	file:
OP_Delete	tsrc/opcodes.h	119;"	d
OP_Destroy	opcodes.h	132;"	d
OP_Destroy	sqlite3.c	12657;"	d	file:
OP_Destroy	tsrc/opcodes.h	132;"	d
OP_Divide	opcodes.h	53;"	d
OP_Divide	sqlite3.c	12578;"	d	file:
OP_Divide	tsrc/opcodes.h	53;"	d
OP_DropIndex	opcodes.h	141;"	d
OP_DropIndex	sqlite3.c	12666;"	d	file:
OP_DropIndex	tsrc/opcodes.h	141;"	d
OP_DropTable	opcodes.h	140;"	d
OP_DropTable	sqlite3.c	12665;"	d	file:
OP_DropTable	tsrc/opcodes.h	140;"	d
OP_DropTrigger	opcodes.h	142;"	d
OP_DropTrigger	sqlite3.c	12667;"	d	file:
OP_DropTrigger	tsrc/opcodes.h	142;"	d
OP_EndCoroutine	opcodes.h	75;"	d
OP_EndCoroutine	sqlite3.c	12600;"	d	file:
OP_EndCoroutine	tsrc/opcodes.h	75;"	d
OP_Eq	opcodes.h	40;"	d
OP_Eq	sqlite3.c	12565;"	d	file:
OP_Eq	tsrc/opcodes.h	40;"	d
OP_Expire	opcodes.h	152;"	d
OP_Expire	sqlite3.c	12677;"	d	file:
OP_Expire	tsrc/opcodes.h	152;"	d
OP_Explain	opcodes.h	164;"	d
OP_Explain	sqlite3.c	12689;"	d	file:
OP_Explain	tsrc/opcodes.h	164;"	d
OP_FkCounter	opcodes.h	146;"	d
OP_FkCounter	sqlite3.c	12671;"	d	file:
OP_FkCounter	tsrc/opcodes.h	146;"	d
OP_FkIfZero	opcodes.h	67;"	d
OP_FkIfZero	sqlite3.c	12592;"	d	file:
OP_FkIfZero	tsrc/opcodes.h	67;"	d
OP_Found	opcodes.h	34;"	d
OP_Found	sqlite3.c	12559;"	d	file:
OP_Found	tsrc/opcodes.h	34;"	d
OP_Function	opcodes.h	92;"	d
OP_Function	sqlite3.c	12617;"	d	file:
OP_Function	tsrc/opcodes.h	92;"	d
OP_Function0	opcodes.h	91;"	d
OP_Function0	sqlite3.c	12616;"	d	file:
OP_Function0	tsrc/opcodes.h	91;"	d
OP_Ge	opcodes.h	44;"	d
OP_Ge	sqlite3.c	12569;"	d	file:
OP_Ge	tsrc/opcodes.h	44;"	d
OP_Gosub	opcodes.h	17;"	d
OP_Gosub	sqlite3.c	12542;"	d	file:
OP_Gosub	tsrc/opcodes.h	17;"	d
OP_Goto	opcodes.h	16;"	d
OP_Goto	sqlite3.c	12541;"	d	file:
OP_Goto	tsrc/opcodes.h	16;"	d
OP_Gt	opcodes.h	41;"	d
OP_Gt	sqlite3.c	12566;"	d	file:
OP_Gt	tsrc/opcodes.h	41;"	d
OP_Halt	opcodes.h	77;"	d
OP_Halt	sqlite3.c	12602;"	d	file:
OP_Halt	tsrc/opcodes.h	77;"	d
OP_HaltIfNull	opcodes.h	76;"	d
OP_HaltIfNull	sqlite3.c	12601;"	d	file:
OP_HaltIfNull	tsrc/opcodes.h	76;"	d
OP_IdxDelete	opcodes.h	129;"	d
OP_IdxDelete	sqlite3.c	12654;"	d	file:
OP_IdxDelete	tsrc/opcodes.h	129;"	d
OP_IdxGE	opcodes.h	63;"	d
OP_IdxGE	sqlite3.c	12588;"	d	file:
OP_IdxGE	tsrc/opcodes.h	63;"	d
OP_IdxGT	opcodes.h	61;"	d
OP_IdxGT	sqlite3.c	12586;"	d	file:
OP_IdxGT	tsrc/opcodes.h	61;"	d
OP_IdxInsert	opcodes.h	128;"	d
OP_IdxInsert	sqlite3.c	12653;"	d	file:
OP_IdxInsert	tsrc/opcodes.h	128;"	d
OP_IdxLE	opcodes.h	60;"	d
OP_IdxLE	sqlite3.c	12585;"	d	file:
OP_IdxLE	tsrc/opcodes.h	60;"	d
OP_IdxLT	opcodes.h	62;"	d
OP_IdxLT	sqlite3.c	12587;"	d	file:
OP_IdxLT	tsrc/opcodes.h	62;"	d
OP_IdxRowid	opcodes.h	131;"	d
OP_IdxRowid	sqlite3.c	12656;"	d	file:
OP_IdxRowid	tsrc/opcodes.h	131;"	d
OP_If	opcodes.h	24;"	d
OP_If	sqlite3.c	12549;"	d	file:
OP_If	tsrc/opcodes.h	24;"	d
OP_IfNot	opcodes.h	25;"	d
OP_IfNot	sqlite3.c	12550;"	d	file:
OP_IfNot	tsrc/opcodes.h	25;"	d
OP_IfNotZero	opcodes.h	69;"	d
OP_IfNotZero	sqlite3.c	12594;"	d	file:
OP_IfNotZero	tsrc/opcodes.h	69;"	d
OP_IfPos	opcodes.h	68;"	d
OP_IfPos	sqlite3.c	12593;"	d	file:
OP_IfPos	tsrc/opcodes.h	68;"	d
OP_IncrVacuum	opcodes.h	71;"	d
OP_IncrVacuum	sqlite3.c	12596;"	d	file:
OP_IncrVacuum	tsrc/opcodes.h	71;"	d
OP_Init	opcodes.h	73;"	d
OP_Init	sqlite3.c	12598;"	d	file:
OP_Init	tsrc/opcodes.h	73;"	d
OP_InitCoroutine	opcodes.h	18;"	d
OP_InitCoroutine	sqlite3.c	12543;"	d	file:
OP_InitCoroutine	tsrc/opcodes.h	18;"	d
OP_Insert	opcodes.h	117;"	d
OP_Insert	sqlite3.c	12642;"	d	file:
OP_Insert	tsrc/opcodes.h	117;"	d
OP_InsertInt	opcodes.h	118;"	d
OP_InsertInt	sqlite3.c	12643;"	d	file:
OP_InsertInt	tsrc/opcodes.h	118;"	d
OP_Int64	opcodes.h	79;"	d
OP_Int64	sqlite3.c	12604;"	d	file:
OP_Int64	tsrc/opcodes.h	79;"	d
OP_IntCopy	opcodes.h	88;"	d
OP_IntCopy	sqlite3.c	12613;"	d	file:
OP_IntCopy	tsrc/opcodes.h	88;"	d
OP_Integer	opcodes.h	78;"	d
OP_Integer	sqlite3.c	12603;"	d	file:
OP_Integer	tsrc/opcodes.h	78;"	d
OP_IntegrityCk	opcodes.h	143;"	d
OP_IntegrityCk	sqlite3.c	12668;"	d	file:
OP_IntegrityCk	tsrc/opcodes.h	143;"	d
OP_IsNull	opcodes.h	37;"	d
OP_IsNull	sqlite3.c	12562;"	d	file:
OP_IsNull	tsrc/opcodes.h	37;"	d
OP_JournalMode	opcodes.h	12;"	d
OP_JournalMode	sqlite3.c	12537;"	d	file:
OP_JournalMode	tsrc/opcodes.h	12;"	d
OP_Jump	opcodes.h	21;"	d
OP_Jump	sqlite3.c	12546;"	d	file:
OP_Jump	tsrc/opcodes.h	21;"	d
OP_Last	opcodes.h	45;"	d
OP_Last	sqlite3.c	12570;"	d	file:
OP_Last	tsrc/opcodes.h	45;"	d
OP_Le	opcodes.h	42;"	d
OP_Le	sqlite3.c	12567;"	d	file:
OP_Le	tsrc/opcodes.h	42;"	d
OP_LoadAnalysis	opcodes.h	139;"	d
OP_LoadAnalysis	sqlite3.c	12664;"	d	file:
OP_LoadAnalysis	tsrc/opcodes.h	139;"	d
OP_Lt	opcodes.h	43;"	d
OP_Lt	sqlite3.c	12568;"	d	file:
OP_Lt	tsrc/opcodes.h	43;"	d
OP_MakeRecord	opcodes.h	101;"	d
OP_MakeRecord	sqlite3.c	12626;"	d	file:
OP_MakeRecord	tsrc/opcodes.h	101;"	d
OP_MaxPgcnt	opcodes.h	161;"	d
OP_MaxPgcnt	sqlite3.c	12686;"	d	file:
OP_MaxPgcnt	tsrc/opcodes.h	161;"	d
OP_MemMax	opcodes.h	147;"	d
OP_MemMax	sqlite3.c	12672;"	d	file:
OP_MemMax	tsrc/opcodes.h	147;"	d
OP_Move	opcodes.h	85;"	d
OP_Move	sqlite3.c	12610;"	d	file:
OP_Move	tsrc/opcodes.h	85;"	d
OP_Multiply	opcodes.h	52;"	d
OP_Multiply	sqlite3.c	12577;"	d	file:
OP_Multiply	tsrc/opcodes.h	52;"	d
OP_MustBeInt	opcodes.h	20;"	d
OP_MustBeInt	sqlite3.c	12545;"	d	file:
OP_MustBeInt	tsrc/opcodes.h	20;"	d
OP_Ne	opcodes.h	39;"	d
OP_Ne	sqlite3.c	12564;"	d	file:
OP_Ne	tsrc/opcodes.h	39;"	d
OP_NewRowid	opcodes.h	116;"	d
OP_NewRowid	sqlite3.c	12641;"	d	file:
OP_NewRowid	tsrc/opcodes.h	116;"	d
OP_Next	opcodes.h	10;"	d
OP_Next	sqlite3.c	12535;"	d	file:
OP_Next	tsrc/opcodes.h	10;"	d
OP_NextIfOpen	opcodes.h	8;"	d
OP_NextIfOpen	sqlite3.c	12533;"	d	file:
OP_NextIfOpen	tsrc/opcodes.h	8;"	d
OP_NoConflict	opcodes.h	32;"	d
OP_NoConflict	sqlite3.c	12557;"	d	file:
OP_NoConflict	tsrc/opcodes.h	32;"	d
OP_Noop	opcodes.h	163;"	d
OP_Noop	sqlite3.c	12688;"	d	file:
OP_Noop	tsrc/opcodes.h	163;"	d
OP_Not	opcodes.h	22;"	d
OP_Not	sqlite3.c	12547;"	d	file:
OP_Not	tsrc/opcodes.h	22;"	d
OP_NotExists	opcodes.h	36;"	d
OP_NotExists	sqlite3.c	12561;"	d	file:
OP_NotExists	tsrc/opcodes.h	36;"	d
OP_NotFound	opcodes.h	33;"	d
OP_NotFound	sqlite3.c	12558;"	d	file:
OP_NotFound	tsrc/opcodes.h	33;"	d
OP_NotNull	opcodes.h	38;"	d
OP_NotNull	sqlite3.c	12563;"	d	file:
OP_NotNull	tsrc/opcodes.h	38;"	d
OP_Null	opcodes.h	81;"	d
OP_Null	sqlite3.c	12606;"	d	file:
OP_Null	tsrc/opcodes.h	81;"	d
OP_NullRow	opcodes.h	126;"	d
OP_NullRow	sqlite3.c	12651;"	d	file:
OP_NullRow	tsrc/opcodes.h	126;"	d
OP_OffsetLimit	opcodes.h	148;"	d
OP_OffsetLimit	sqlite3.c	12673;"	d	file:
OP_OffsetLimit	tsrc/opcodes.h	148;"	d
OP_Once	opcodes.h	23;"	d
OP_Once	sqlite3.c	12548;"	d	file:
OP_Once	tsrc/opcodes.h	23;"	d
OP_OpenAutoindex	opcodes.h	108;"	d
OP_OpenAutoindex	sqlite3.c	12633;"	d	file:
OP_OpenAutoindex	tsrc/opcodes.h	108;"	d
OP_OpenEphemeral	opcodes.h	109;"	d
OP_OpenEphemeral	sqlite3.c	12634;"	d	file:
OP_OpenEphemeral	tsrc/opcodes.h	109;"	d
OP_OpenPseudo	opcodes.h	112;"	d
OP_OpenPseudo	sqlite3.c	12637;"	d	file:
OP_OpenPseudo	tsrc/opcodes.h	112;"	d
OP_OpenRead	opcodes.h	106;"	d
OP_OpenRead	sqlite3.c	12631;"	d	file:
OP_OpenRead	tsrc/opcodes.h	106;"	d
OP_OpenWrite	opcodes.h	107;"	d
OP_OpenWrite	sqlite3.c	12632;"	d	file:
OP_OpenWrite	tsrc/opcodes.h	107;"	d
OP_Or	opcodes.h	30;"	d
OP_Or	sqlite3.c	12555;"	d	file:
OP_Or	tsrc/opcodes.h	30;"	d
OP_Pagecount	opcodes.h	160;"	d
OP_Pagecount	sqlite3.c	12685;"	d	file:
OP_Pagecount	tsrc/opcodes.h	160;"	d
OP_Param	opcodes.h	145;"	d
OP_Param	sqlite3.c	12670;"	d	file:
OP_Param	tsrc/opcodes.h	145;"	d
OP_ParseSchema	opcodes.h	138;"	d
OP_ParseSchema	sqlite3.c	12663;"	d	file:
OP_ParseSchema	tsrc/opcodes.h	138;"	d
OP_Permutation	opcodes.h	96;"	d
OP_Permutation	sqlite3.c	12621;"	d	file:
OP_Permutation	tsrc/opcodes.h	96;"	d
OP_Prev	opcodes.h	9;"	d
OP_Prev	sqlite3.c	12534;"	d	file:
OP_Prev	tsrc/opcodes.h	9;"	d
OP_PrevIfOpen	opcodes.h	7;"	d
OP_PrevIfOpen	sqlite3.c	12532;"	d	file:
OP_PrevIfOpen	tsrc/opcodes.h	7;"	d
OP_Program	opcodes.h	66;"	d
OP_Program	sqlite3.c	12591;"	d	file:
OP_Program	tsrc/opcodes.h	66;"	d
OP_ReadCookie	opcodes.h	103;"	d
OP_ReadCookie	sqlite3.c	12628;"	d	file:
OP_ReadCookie	tsrc/opcodes.h	103;"	d
OP_Real	opcodes.h	136;"	d
OP_Real	sqlite3.c	12661;"	d	file:
OP_Real	tsrc/opcodes.h	136;"	d
OP_RealAffinity	opcodes.h	94;"	d
OP_RealAffinity	sqlite3.c	12619;"	d	file:
OP_RealAffinity	tsrc/opcodes.h	94;"	d
OP_Remainder	opcodes.h	54;"	d
OP_Remainder	sqlite3.c	12579;"	d	file:
OP_Remainder	tsrc/opcodes.h	54;"	d
OP_ReopenIdx	opcodes.h	105;"	d
OP_ReopenIdx	sqlite3.c	12630;"	d	file:
OP_ReopenIdx	tsrc/opcodes.h	105;"	d
OP_ResetCount	opcodes.h	120;"	d
OP_ResetCount	sqlite3.c	12645;"	d	file:
OP_ResetCount	tsrc/opcodes.h	120;"	d
OP_ResetSorter	opcodes.h	134;"	d
OP_ResetSorter	sqlite3.c	12659;"	d	file:
OP_ResetSorter	tsrc/opcodes.h	134;"	d
OP_ResultRow	opcodes.h	89;"	d
OP_ResultRow	sqlite3.c	12614;"	d	file:
OP_ResultRow	tsrc/opcodes.h	89;"	d
OP_Return	opcodes.h	74;"	d
OP_Return	sqlite3.c	12599;"	d	file:
OP_Return	tsrc/opcodes.h	74;"	d
OP_Rewind	opcodes.h	59;"	d
OP_Rewind	sqlite3.c	12584;"	d	file:
OP_Rewind	tsrc/opcodes.h	59;"	d
OP_RowData	opcodes.h	124;"	d
OP_RowData	sqlite3.c	12649;"	d	file:
OP_RowData	tsrc/opcodes.h	124;"	d
OP_RowKey	opcodes.h	123;"	d
OP_RowKey	sqlite3.c	12648;"	d	file:
OP_RowKey	tsrc/opcodes.h	123;"	d
OP_RowSetAdd	opcodes.h	144;"	d
OP_RowSetAdd	sqlite3.c	12669;"	d	file:
OP_RowSetAdd	tsrc/opcodes.h	144;"	d
OP_RowSetRead	opcodes.h	64;"	d
OP_RowSetRead	sqlite3.c	12589;"	d	file:
OP_RowSetRead	tsrc/opcodes.h	64;"	d
OP_RowSetTest	opcodes.h	65;"	d
OP_RowSetTest	sqlite3.c	12590;"	d	file:
OP_RowSetTest	tsrc/opcodes.h	65;"	d
OP_Rowid	opcodes.h	125;"	d
OP_Rowid	sqlite3.c	12650;"	d	file:
OP_Rowid	tsrc/opcodes.h	125;"	d
OP_SCopy	opcodes.h	87;"	d
OP_SCopy	sqlite3.c	12612;"	d	file:
OP_SCopy	tsrc/opcodes.h	87;"	d
OP_Savepoint	opcodes.h	3;"	d
OP_Savepoint	sqlite3.c	12528;"	d	file:
OP_Savepoint	tsrc/opcodes.h	3;"	d
OP_Seek	opcodes.h	130;"	d
OP_Seek	sqlite3.c	12655;"	d	file:
OP_Seek	tsrc/opcodes.h	130;"	d
OP_SeekGE	opcodes.h	28;"	d
OP_SeekGE	sqlite3.c	12553;"	d	file:
OP_SeekGE	tsrc/opcodes.h	28;"	d
OP_SeekGT	opcodes.h	29;"	d
OP_SeekGT	sqlite3.c	12554;"	d	file:
OP_SeekGT	tsrc/opcodes.h	29;"	d
OP_SeekLE	opcodes.h	27;"	d
OP_SeekLE	sqlite3.c	12552;"	d	file:
OP_SeekLE	tsrc/opcodes.h	27;"	d
OP_SeekLT	opcodes.h	26;"	d
OP_SeekLT	sqlite3.c	12551;"	d	file:
OP_SeekLT	tsrc/opcodes.h	26;"	d
OP_SeekRowid	opcodes.h	35;"	d
OP_SeekRowid	sqlite3.c	12560;"	d	file:
OP_SeekRowid	tsrc/opcodes.h	35;"	d
OP_Sequence	opcodes.h	115;"	d
OP_Sequence	sqlite3.c	12640;"	d	file:
OP_Sequence	tsrc/opcodes.h	115;"	d
OP_SequenceTest	opcodes.h	111;"	d
OP_SequenceTest	sqlite3.c	12636;"	d	file:
OP_SequenceTest	tsrc/opcodes.h	111;"	d
OP_SetCookie	opcodes.h	104;"	d
OP_SetCookie	sqlite3.c	12629;"	d	file:
OP_SetCookie	tsrc/opcodes.h	104;"	d
OP_ShiftLeft	opcodes.h	48;"	d
OP_ShiftLeft	sqlite3.c	12573;"	d	file:
OP_ShiftLeft	tsrc/opcodes.h	48;"	d
OP_ShiftRight	opcodes.h	49;"	d
OP_ShiftRight	sqlite3.c	12574;"	d	file:
OP_ShiftRight	tsrc/opcodes.h	49;"	d
OP_SoftNull	opcodes.h	82;"	d
OP_SoftNull	sqlite3.c	12607;"	d	file:
OP_SoftNull	tsrc/opcodes.h	82;"	d
OP_Sort	opcodes.h	58;"	d
OP_Sort	sqlite3.c	12583;"	d	file:
OP_Sort	tsrc/opcodes.h	58;"	d
OP_SorterCompare	opcodes.h	121;"	d
OP_SorterCompare	sqlite3.c	12646;"	d	file:
OP_SorterCompare	tsrc/opcodes.h	121;"	d
OP_SorterData	opcodes.h	122;"	d
OP_SorterData	sqlite3.c	12647;"	d	file:
OP_SorterData	tsrc/opcodes.h	122;"	d
OP_SorterInsert	opcodes.h	127;"	d
OP_SorterInsert	sqlite3.c	12652;"	d	file:
OP_SorterInsert	tsrc/opcodes.h	127;"	d
OP_SorterNext	opcodes.h	6;"	d
OP_SorterNext	sqlite3.c	12531;"	d	file:
OP_SorterNext	tsrc/opcodes.h	6;"	d
OP_SorterOpen	opcodes.h	110;"	d
OP_SorterOpen	sqlite3.c	12635;"	d	file:
OP_SorterOpen	tsrc/opcodes.h	110;"	d
OP_SorterSort	opcodes.h	56;"	d
OP_SorterSort	sqlite3.c	12581;"	d	file:
OP_SorterSort	tsrc/opcodes.h	56;"	d
OP_String	opcodes.h	80;"	d
OP_String	sqlite3.c	12605;"	d	file:
OP_String	tsrc/opcodes.h	80;"	d
OP_String8	opcodes.h	100;"	d
OP_String8	sqlite3.c	12625;"	d	file:
OP_String8	tsrc/opcodes.h	100;"	d
OP_Subtract	opcodes.h	51;"	d
OP_Subtract	sqlite3.c	12576;"	d	file:
OP_Subtract	tsrc/opcodes.h	51;"	d
OP_TableLock	opcodes.h	153;"	d
OP_TableLock	sqlite3.c	12678;"	d	file:
OP_TableLock	tsrc/opcodes.h	153;"	d
OP_Transaction	opcodes.h	5;"	d
OP_Transaction	sqlite3.c	12530;"	d	file:
OP_Transaction	tsrc/opcodes.h	5;"	d
OP_VBegin	opcodes.h	154;"	d
OP_VBegin	sqlite3.c	12679;"	d	file:
OP_VBegin	tsrc/opcodes.h	154;"	d
OP_VColumn	opcodes.h	158;"	d
OP_VColumn	sqlite3.c	12683;"	d	file:
OP_VColumn	tsrc/opcodes.h	158;"	d
OP_VCreate	opcodes.h	155;"	d
OP_VCreate	sqlite3.c	12680;"	d	file:
OP_VCreate	tsrc/opcodes.h	155;"	d
OP_VDestroy	opcodes.h	156;"	d
OP_VDestroy	sqlite3.c	12681;"	d	file:
OP_VDestroy	tsrc/opcodes.h	156;"	d
OP_VFilter	opcodes.h	14;"	d
OP_VFilter	sqlite3.c	12539;"	d	file:
OP_VFilter	tsrc/opcodes.h	14;"	d
OP_VNext	opcodes.h	72;"	d
OP_VNext	sqlite3.c	12597;"	d	file:
OP_VNext	tsrc/opcodes.h	72;"	d
OP_VOpen	opcodes.h	157;"	d
OP_VOpen	sqlite3.c	12682;"	d	file:
OP_VOpen	tsrc/opcodes.h	157;"	d
OP_VRename	opcodes.h	159;"	d
OP_VRename	sqlite3.c	12684;"	d	file:
OP_VRename	tsrc/opcodes.h	159;"	d
OP_VUpdate	opcodes.h	15;"	d
OP_VUpdate	sqlite3.c	12540;"	d	file:
OP_VUpdate	tsrc/opcodes.h	15;"	d
OP_Vacuum	opcodes.h	13;"	d
OP_Vacuum	sqlite3.c	12538;"	d	file:
OP_Vacuum	tsrc/opcodes.h	13;"	d
OP_Variable	opcodes.h	84;"	d
OP_Variable	sqlite3.c	12609;"	d	file:
OP_Variable	tsrc/opcodes.h	84;"	d
OP_Yield	opcodes.h	19;"	d
OP_Yield	sqlite3.c	12544;"	d	file:
OP_Yield	tsrc/opcodes.h	19;"	d
OR	ext/fts5/test/fts5_common.tcl	/^proc OR {args} {$/;"	p
OSTRACE	sqlite3.c	11116;"	d	file:
OSTRACE	sqlite3.c	11119;"	d	file:
OSTRACE	src/sqliteInt.h	454;"	d
OSTRACE	src/sqliteInt.h	457;"	d
OSTRACE	tsrc/sqliteInt.h	454;"	d
OSTRACE	tsrc/sqliteInt.h	457;"	d
OS_ACCESS	src/test_osinst.c	88;"	d	file:
OS_ANNOTATE	src/test_osinst.c	111;"	d	file:
OS_CHECKRESERVEDLOCK	src/test_osinst.c	89;"	d	file:
OS_CLOSE	src/test_osinst.c	90;"	d	file:
OS_CURRENTTIME	src/test_osinst.c	91;"	d	file:
OS_DELETE	src/test_osinst.c	92;"	d	file:
OS_DEVCHAR	src/test_osinst.c	93;"	d	file:
OS_FILECONTROL	src/test_osinst.c	94;"	d	file:
OS_FILESIZE	src/test_osinst.c	95;"	d	file:
OS_FULLPATHNAME	src/test_osinst.c	96;"	d	file:
OS_LOCK	src/test_osinst.c	97;"	d	file:
OS_NUMEVENTS	src/test_osinst.c	113;"	d	file:
OS_OPEN	src/test_osinst.c	98;"	d	file:
OS_RANDOMNESS	src/test_osinst.c	99;"	d	file:
OS_READ	src/test_osinst.c	100;"	d	file:
OS_SECTORSIZE	src/test_osinst.c	101;"	d	file:
OS_SHMBARRIER	src/test_osinst.c	110;"	d	file:
OS_SHMLOCK	src/test_osinst.c	109;"	d	file:
OS_SHMMAP	src/test_osinst.c	108;"	d	file:
OS_SHMUNMAP	src/test_osinst.c	107;"	d	file:
OS_SLEEP	src/test_osinst.c	102;"	d	file:
OS_SYNC	src/test_osinst.c	103;"	d	file:
OS_TRUNCATE	src/test_osinst.c	104;"	d	file:
OS_UNLOCK	src/test_osinst.c	105;"	d	file:
OS_VXWORKS	sqlite3.c	158;"	d	file:
OS_VXWORKS	sqlite3.c	166;"	d	file:
OS_VXWORKS	src/vxworks.h	20;"	d
OS_VXWORKS	src/vxworks.h	28;"	d
OS_VXWORKS	tsrc/vxworks.h	20;"	d
OS_VXWORKS	tsrc/vxworks.h	28;"	d
OS_WRITE	src/test_osinst.c	106;"	d	file:
O_BINARY	sqlite3.c	29624;"	d	file:
O_BINARY	src/os_unix.c	299;"	d	file:
O_BINARY	tsrc/os_unix.c	299;"	d	file:
O_LARGEFILE	sqlite3.c	29614;"	d	file:
O_LARGEFILE	sqlite3.c	29617;"	d	file:
O_LARGEFILE	sqlite3.c	29618;"	d	file:
O_LARGEFILE	src/os_unix.c	289;"	d	file:
O_LARGEFILE	src/os_unix.c	292;"	d	file:
O_LARGEFILE	src/os_unix.c	293;"	d	file:
O_LARGEFILE	tsrc/os_unix.c	289;"	d	file:
O_LARGEFILE	tsrc/os_unix.c	292;"	d	file:
O_LARGEFILE	tsrc/os_unix.c	293;"	d	file:
O_NOFOLLOW	sqlite3.c	29621;"	d	file:
O_NOFOLLOW	src/os_unix.c	296;"	d	file:
O_NOFOLLOW	tsrc/os_unix.c	296;"	d	file:
Op	sqlite3.c	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp	file:
Op	src/vdbeInt.h	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp
Op	tsrc/vdbeInt.h	/^typedef struct VdbeOp Op;$/;"	t	typeref:struct:VdbeOp
OpHelp	opcodes.c	7;"	d	file:
OpHelp	opcodes.c	9;"	d	file:
OpHelp	sqlite3.c	28953;"	d	file:
OpHelp	sqlite3.c	28955;"	d	file:
OpHelp	tsrc/opcodes.c	7;"	d	file:
OpHelp	tsrc/opcodes.c	9;"	d	file:
OpenCounter	sqlite3.c	23349;"	d	file:
OpenCounter	sqlite3.c	23351;"	d	file:
OpenCounter	sqlite3.c	29600;"	d	file:
OpenCounter	sqlite3.c	29602;"	d	file:
OpenCounter	sqlite3.c	37129;"	d	file:
OpenCounter	sqlite3.c	37131;"	d	file:
OpenCounter	src/os_common.h	100;"	d
OpenCounter	src/os_common.h	102;"	d
OpenCounter	tsrc/os_common.h	100;"	d
OpenCounter	tsrc/os_common.h	102;"	d
OpenSession	shell.c	/^struct OpenSession {$/;"	s	file:
OpenSession	shell.c	/^typedef struct OpenSession OpenSession;$/;"	t	typeref:struct:OpenSession	file:
OpenSession	src/shell.c	/^struct OpenSession {$/;"	s	file:
OpenSession	src/shell.c	/^typedef struct OpenSession OpenSession;$/;"	t	typeref:struct:OpenSession	file:
OpenSession	tsrc/shell.c	/^struct OpenSession {$/;"	s	file:
OpenSession	tsrc/shell.c	/^typedef struct OpenSession OpenSession;$/;"	t	typeref:struct:OpenSession	file:
OptArg	tool/lemon.c	/^char *OptArg(int n)$/;"	f
OptErr	tool/lemon.c	/^void OptErr(int n)$/;"	f
OptInit	tool/lemon.c	/^int OptInit(char **a, struct s_options *o, FILE *err)$/;"	f
OptLeavesReader	ext/fts2/fts2.c	/^typedef struct OptLeavesReader {$/;"	s	file:
OptLeavesReader	ext/fts2/fts2.c	/^} OptLeavesReader;$/;"	t	typeref:struct:OptLeavesReader	file:
OptLeavesReader	tsrc/fts2.c	/^typedef struct OptLeavesReader {$/;"	s	file:
OptLeavesReader	tsrc/fts2.c	/^} OptLeavesReader;$/;"	t	typeref:struct:OptLeavesReader	file:
OptNArgs	tool/lemon.c	/^int OptNArgs(){$/;"	f
OptPrint	tool/lemon.c	/^void OptPrint(){$/;"	f
OptimizationDisabled	sqlite3.c	14063;"	d	file:
OptimizationDisabled	sqlite3.c	14066;"	d	file:
OptimizationDisabled	src/sqliteInt.h	1464;"	d
OptimizationDisabled	src/sqliteInt.h	1467;"	d
OptimizationDisabled	tsrc/sqliteInt.h	1464;"	d
OptimizationDisabled	tsrc/sqliteInt.h	1467;"	d
OptimizationEnabled	sqlite3.c	14064;"	d	file:
OptimizationEnabled	sqlite3.c	14067;"	d	file:
OptimizationEnabled	src/sqliteInt.h	1465;"	d
OptimizationEnabled	src/sqliteInt.h	1468;"	d
OptimizationEnabled	tsrc/sqliteInt.h	1465;"	d
OptimizationEnabled	tsrc/sqliteInt.h	1468;"	d
OrderedDLReader	ext/fts2/fts2.c	/^typedef struct OrderedDLReader {$/;"	s	file:
OrderedDLReader	ext/fts2/fts2.c	/^} OrderedDLReader;$/;"	t	typeref:struct:OrderedDLReader	file:
OrderedDLReader	tsrc/fts2.c	/^typedef struct OrderedDLReader {$/;"	s	file:
OrderedDLReader	tsrc/fts2.c	/^} OrderedDLReader;$/;"	t	typeref:struct:OrderedDLReader	file:
Out	autoconf/tea/win/nmakehlp.c	/^pipeinfo Out = {INVALID_HANDLE_VALUE, '\\0'};$/;"	v
P4_ADVANCE	sqlite3.c	12483;"	d	file:
P4_ADVANCE	src/vdbe.h	127;"	d
P4_ADVANCE	tsrc/vdbe.h	127;"	d
P4_COLLSEQ	sqlite3.c	12470;"	d	file:
P4_COLLSEQ	src/vdbe.h	114;"	d
P4_COLLSEQ	tsrc/vdbe.h	114;"	d
P4_DYNAMIC	sqlite3.c	12468;"	d	file:
P4_DYNAMIC	src/vdbe.h	112;"	d
P4_DYNAMIC	tsrc/vdbe.h	112;"	d
P4_EXPR	sqlite3.c	12473;"	d	file:
P4_EXPR	src/vdbe.h	117;"	d
P4_EXPR	tsrc/vdbe.h	117;"	d
P4_FUNCCTX	sqlite3.c	12485;"	d	file:
P4_FUNCCTX	src/vdbe.h	129;"	d
P4_FUNCCTX	tsrc/vdbe.h	129;"	d
P4_FUNCDEF	sqlite3.c	12471;"	d	file:
P4_FUNCDEF	src/vdbe.h	115;"	d
P4_FUNCDEF	tsrc/vdbe.h	115;"	d
P4_INT32	sqlite3.c	12480;"	d	file:
P4_INT32	src/vdbe.h	124;"	d
P4_INT32	tsrc/vdbe.h	124;"	d
P4_INT64	sqlite3.c	12479;"	d	file:
P4_INT64	src/vdbe.h	123;"	d
P4_INT64	tsrc/vdbe.h	123;"	d
P4_INTARRAY	sqlite3.c	12481;"	d	file:
P4_INTARRAY	src/vdbe.h	125;"	d
P4_INTARRAY	tsrc/vdbe.h	125;"	d
P4_KEYINFO	sqlite3.c	12472;"	d	file:
P4_KEYINFO	src/vdbe.h	116;"	d
P4_KEYINFO	tsrc/vdbe.h	116;"	d
P4_MEM	sqlite3.c	12474;"	d	file:
P4_MEM	src/vdbe.h	118;"	d
P4_MEM	tsrc/vdbe.h	118;"	d
P4_MPRINTF	sqlite3.c	12477;"	d	file:
P4_MPRINTF	src/vdbe.h	121;"	d
P4_MPRINTF	tsrc/vdbe.h	121;"	d
P4_NOTUSED	sqlite3.c	12467;"	d	file:
P4_NOTUSED	src/vdbe.h	111;"	d
P4_NOTUSED	tsrc/vdbe.h	111;"	d
P4_REAL	sqlite3.c	12478;"	d	file:
P4_REAL	src/vdbe.h	122;"	d
P4_REAL	tsrc/vdbe.h	122;"	d
P4_STATIC	sqlite3.c	12469;"	d	file:
P4_STATIC	src/vdbe.h	113;"	d
P4_STATIC	tsrc/vdbe.h	113;"	d
P4_SUBPROGRAM	sqlite3.c	12482;"	d	file:
P4_SUBPROGRAM	src/vdbe.h	126;"	d
P4_SUBPROGRAM	tsrc/vdbe.h	126;"	d
P4_TABLE	sqlite3.c	12484;"	d	file:
P4_TABLE	src/vdbe.h	128;"	d
P4_TABLE	tsrc/vdbe.h	128;"	d
P4_TRANSIENT	sqlite3.c	12475;"	d	file:
P4_TRANSIENT	src/vdbe.h	119;"	d
P4_TRANSIENT	tsrc/vdbe.h	119;"	d
P4_VTAB	sqlite3.c	12476;"	d	file:
P4_VTAB	src/vdbe.h	120;"	d
P4_VTAB	tsrc/vdbe.h	120;"	d
P5_ConstraintCheck	sqlite3.c	12490;"	d	file:
P5_ConstraintCheck	src/vdbe.h	134;"	d
P5_ConstraintCheck	tsrc/vdbe.h	134;"	d
P5_ConstraintFK	sqlite3.c	12491;"	d	file:
P5_ConstraintFK	src/vdbe.h	135;"	d
P5_ConstraintFK	tsrc/vdbe.h	135;"	d
P5_ConstraintNotNull	sqlite3.c	12488;"	d	file:
P5_ConstraintNotNull	src/vdbe.h	132;"	d
P5_ConstraintNotNull	tsrc/vdbe.h	132;"	d
P5_ConstraintUnique	sqlite3.c	12489;"	d	file:
P5_ConstraintUnique	src/vdbe.h	133;"	d
P5_ConstraintUnique	tsrc/vdbe.h	133;"	d
PACKAGE_BUGREPORT	config.h	111;"	d
PACKAGE_BUGREPORT	tsrc/config.h	111;"	d
PACKAGE_NAME	config.h	114;"	d
PACKAGE_NAME	tsrc/config.h	114;"	d
PACKAGE_STRING	config.h	117;"	d
PACKAGE_STRING	tsrc/config.h	117;"	d
PACKAGE_TARNAME	config.h	120;"	d
PACKAGE_TARNAME	tsrc/config.h	120;"	d
PACKAGE_VERSION	config.h	123;"	d
PACKAGE_VERSION	src/tclsqlite.c	3461;"	d	file:
PACKAGE_VERSION	tsrc/config.h	123;"	d
PACKAGE_VERSION	tsrc/tclsqlite.c	3461;"	d	file:
PAGERID	sqlite3.c	46408;"	d	file:
PAGERID	src/pager.c	131;"	d	file:
PAGERID	tsrc/pager.c	131;"	d	file:
PAGERTRACE	sqlite3.c	46397;"	d	file:
PAGERTRACE	src/pager.c	120;"	d	file:
PAGERTRACE	tsrc/pager.c	120;"	d	file:
PAGER_CACHESPILL	sqlite3.c	12988;"	d	file:
PAGER_CACHESPILL	src/pager.h	106;"	d
PAGER_CACHESPILL	tsrc/pager.h	106;"	d
PAGER_CKPT_FULLFSYNC	sqlite3.c	12987;"	d	file:
PAGER_CKPT_FULLFSYNC	src/pager.h	105;"	d
PAGER_CKPT_FULLFSYNC	tsrc/pager.h	105;"	d
PAGER_ERROR	sqlite3.c	46634;"	d	file:
PAGER_ERROR	src/pager.c	357;"	d	file:
PAGER_ERROR	tsrc/pager.c	357;"	d	file:
PAGER_FLAGS_MASK	sqlite3.c	12989;"	d	file:
PAGER_FLAGS_MASK	src/pager.h	107;"	d
PAGER_FLAGS_MASK	tsrc/pager.h	107;"	d
PAGER_FULLFSYNC	sqlite3.c	12986;"	d	file:
PAGER_FULLFSYNC	src/pager.h	104;"	d
PAGER_FULLFSYNC	tsrc/pager.h	104;"	d
PAGER_GET_NOCONTENT	sqlite3.c	12970;"	d	file:
PAGER_GET_NOCONTENT	src/pager.h	88;"	d
PAGER_GET_NOCONTENT	tsrc/pager.h	88;"	d
PAGER_GET_READONLY	sqlite3.c	12971;"	d	file:
PAGER_GET_READONLY	src/pager.h	89;"	d
PAGER_GET_READONLY	tsrc/pager.h	89;"	d
PAGER_INCR	sqlite3.c	47005;"	d	file:
PAGER_INCR	sqlite3.c	47007;"	d	file:
PAGER_INCR	src/pager.c	728;"	d	file:
PAGER_INCR	src/pager.c	730;"	d	file:
PAGER_INCR	tsrc/pager.c	728;"	d	file:
PAGER_INCR	tsrc/pager.c	730;"	d	file:
PAGER_JOURNALMODE_DELETE	sqlite3.c	12960;"	d	file:
PAGER_JOURNALMODE_DELETE	src/pager.h	78;"	d
PAGER_JOURNALMODE_DELETE	tsrc/pager.h	78;"	d
PAGER_JOURNALMODE_MEMORY	sqlite3.c	12964;"	d	file:
PAGER_JOURNALMODE_MEMORY	src/pager.h	82;"	d
PAGER_JOURNALMODE_MEMORY	tsrc/pager.h	82;"	d
PAGER_JOURNALMODE_OFF	sqlite3.c	12962;"	d	file:
PAGER_JOURNALMODE_OFF	src/pager.h	80;"	d
PAGER_JOURNALMODE_OFF	tsrc/pager.h	80;"	d
PAGER_JOURNALMODE_PERSIST	sqlite3.c	12961;"	d	file:
PAGER_JOURNALMODE_PERSIST	src/pager.h	79;"	d
PAGER_JOURNALMODE_PERSIST	tsrc/pager.h	79;"	d
PAGER_JOURNALMODE_QUERY	sqlite3.c	12959;"	d	file:
PAGER_JOURNALMODE_QUERY	src/pager.h	77;"	d
PAGER_JOURNALMODE_QUERY	tsrc/pager.h	77;"	d
PAGER_JOURNALMODE_TRUNCATE	sqlite3.c	12963;"	d	file:
PAGER_JOURNALMODE_TRUNCATE	src/pager.h	81;"	d
PAGER_JOURNALMODE_TRUNCATE	tsrc/pager.h	81;"	d
PAGER_JOURNALMODE_WAL	sqlite3.c	12965;"	d	file:
PAGER_JOURNALMODE_WAL	src/pager.h	83;"	d
PAGER_JOURNALMODE_WAL	tsrc/pager.h	83;"	d
PAGER_LOCKINGMODE_EXCLUSIVE	sqlite3.c	12950;"	d	file:
PAGER_LOCKINGMODE_EXCLUSIVE	src/pager.h	68;"	d
PAGER_LOCKINGMODE_EXCLUSIVE	tsrc/pager.h	68;"	d
PAGER_LOCKINGMODE_NORMAL	sqlite3.c	12949;"	d	file:
PAGER_LOCKINGMODE_NORMAL	src/pager.h	67;"	d
PAGER_LOCKINGMODE_NORMAL	tsrc/pager.h	67;"	d
PAGER_LOCKINGMODE_QUERY	sqlite3.c	12948;"	d	file:
PAGER_LOCKINGMODE_QUERY	src/pager.h	66;"	d
PAGER_LOCKINGMODE_QUERY	tsrc/pager.h	66;"	d
PAGER_MAX_PGNO	sqlite3.c	47076;"	d	file:
PAGER_MAX_PGNO	src/pager.c	799;"	d	file:
PAGER_MAX_PGNO	tsrc/pager.c	799;"	d	file:
PAGER_MEMORY	sqlite3.c	12943;"	d	file:
PAGER_MEMORY	src/pager.h	61;"	d
PAGER_MEMORY	tsrc/pager.h	61;"	d
PAGER_MJ_PGNO	sqlite3.c	12935;"	d	file:
PAGER_MJ_PGNO	src/pager.h	53;"	d
PAGER_MJ_PGNO	tsrc/pager.h	53;"	d
PAGER_OMIT_JOURNAL	sqlite3.c	12942;"	d	file:
PAGER_OMIT_JOURNAL	src/pager.h	60;"	d
PAGER_OMIT_JOURNAL	tsrc/pager.h	60;"	d
PAGER_OPEN	sqlite3.c	46628;"	d	file:
PAGER_OPEN	src/pager.c	351;"	d	file:
PAGER_OPEN	tsrc/pager.c	351;"	d	file:
PAGER_READER	sqlite3.c	46629;"	d	file:
PAGER_READER	src/pager.c	352;"	d	file:
PAGER_READER	tsrc/pager.c	352;"	d	file:
PAGER_STAT_HIT	sqlite3.c	46992;"	d	file:
PAGER_STAT_HIT	src/pager.c	715;"	d	file:
PAGER_STAT_HIT	tsrc/pager.c	715;"	d	file:
PAGER_STAT_MISS	sqlite3.c	46993;"	d	file:
PAGER_STAT_MISS	src/pager.c	716;"	d	file:
PAGER_STAT_MISS	tsrc/pager.c	716;"	d	file:
PAGER_STAT_WRITE	sqlite3.c	46994;"	d	file:
PAGER_STAT_WRITE	src/pager.c	717;"	d	file:
PAGER_STAT_WRITE	tsrc/pager.c	717;"	d	file:
PAGER_SYNCHRONOUS_EXTRA	sqlite3.c	12984;"	d	file:
PAGER_SYNCHRONOUS_EXTRA	src/pager.h	102;"	d
PAGER_SYNCHRONOUS_EXTRA	tsrc/pager.h	102;"	d
PAGER_SYNCHRONOUS_FULL	sqlite3.c	12983;"	d	file:
PAGER_SYNCHRONOUS_FULL	src/pager.h	101;"	d
PAGER_SYNCHRONOUS_FULL	tsrc/pager.h	101;"	d
PAGER_SYNCHRONOUS_MASK	sqlite3.c	12985;"	d	file:
PAGER_SYNCHRONOUS_MASK	src/pager.h	103;"	d
PAGER_SYNCHRONOUS_MASK	tsrc/pager.h	103;"	d
PAGER_SYNCHRONOUS_NORMAL	sqlite3.c	12982;"	d	file:
PAGER_SYNCHRONOUS_NORMAL	src/pager.h	100;"	d
PAGER_SYNCHRONOUS_NORMAL	tsrc/pager.h	100;"	d
PAGER_SYNCHRONOUS_OFF	sqlite3.c	12981;"	d	file:
PAGER_SYNCHRONOUS_OFF	src/pager.h	99;"	d
PAGER_SYNCHRONOUS_OFF	tsrc/pager.h	99;"	d
PAGER_WRITER_CACHEMOD	sqlite3.c	46631;"	d	file:
PAGER_WRITER_CACHEMOD	src/pager.c	354;"	d	file:
PAGER_WRITER_CACHEMOD	tsrc/pager.c	354;"	d	file:
PAGER_WRITER_DBMOD	sqlite3.c	46632;"	d	file:
PAGER_WRITER_DBMOD	src/pager.c	355;"	d	file:
PAGER_WRITER_DBMOD	tsrc/pager.c	355;"	d	file:
PAGER_WRITER_FINISHED	sqlite3.c	46633;"	d	file:
PAGER_WRITER_FINISHED	src/pager.c	356;"	d	file:
PAGER_WRITER_FINISHED	tsrc/pager.c	356;"	d	file:
PAGER_WRITER_LOCKED	sqlite3.c	46630;"	d	file:
PAGER_WRITER_LOCKED	src/pager.c	353;"	d	file:
PAGER_WRITER_LOCKED	tsrc/pager.c	353;"	d	file:
PARENTVFS	src/test_vfs.c	156;"	d	file:
PARTLY_WITHIN	ext/rtree/sqlite3rtree.h	109;"	d
PARTLY_WITHIN	sqlite3.c	8732;"	d	file:
PARTLY_WITHIN	sqlite3.h	8472;"	d
PARTLY_WITHIN	tsrc/sqlite3.h	8472;"	d
PCACHE1_MIGHT_USE_GROUP_MUTEX	sqlite3.c	44590;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	sqlite3.c	44594;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/pcache1.c	224;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	src/pcache1.c	228;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	tsrc/pcache1.c	224;"	d	file:
PCACHE1_MIGHT_USE_GROUP_MUTEX	tsrc/pcache1.c	228;"	d	file:
PCACHE_DIRTYLIST_ADD	sqlite3.c	43639;"	d	file:
PCACHE_DIRTYLIST_ADD	src/pcache.c	149;"	d	file:
PCACHE_DIRTYLIST_ADD	tsrc/pcache.c	149;"	d	file:
PCACHE_DIRTYLIST_FRONT	sqlite3.c	43640;"	d	file:
PCACHE_DIRTYLIST_FRONT	src/pcache.c	150;"	d	file:
PCACHE_DIRTYLIST_FRONT	tsrc/pcache.c	150;"	d	file:
PCACHE_DIRTYLIST_REMOVE	sqlite3.c	43638;"	d	file:
PCACHE_DIRTYLIST_REMOVE	src/pcache.c	148;"	d	file:
PCACHE_DIRTYLIST_REMOVE	tsrc/pcache.c	148;"	d	file:
PCache	sqlite3.c	/^struct PCache {$/;"	s	file:
PCache	sqlite3.c	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache	file:
PCache	src/pcache.c	/^struct PCache {$/;"	s	file:
PCache	src/pcache.h	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache
PCache	tsrc/pcache.c	/^struct PCache {$/;"	s	file:
PCache	tsrc/pcache.h	/^typedef struct PCache PCache;$/;"	t	typeref:struct:PCache
PCache1	sqlite3.c	/^struct PCache1 {$/;"	s	file:
PCache1	sqlite3.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCache1	src/pcache1.c	/^struct PCache1 {$/;"	s	file:
PCache1	src/pcache1.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCache1	tsrc/pcache1.c	/^struct PCache1 {$/;"	s	file:
PCache1	tsrc/pcache1.c	/^typedef struct PCache1 PCache1;$/;"	t	typeref:struct:PCache1	file:
PCacheGlobal	sqlite3.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PCacheGlobal	src/pcache1.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PCacheGlobal	tsrc/pcache1.c	/^static SQLITE_WSD struct PCacheGlobal {$/;"	s	file:
PENDING_BYTE	sqlite3.c	13517;"	d	file:
PENDING_BYTE	sqlite3.c	13519;"	d	file:
PENDING_BYTE	src/os.h	147;"	d
PENDING_BYTE	src/os.h	149;"	d
PENDING_BYTE	tool/getlock.c	53;"	d	file:
PENDING_BYTE	tsrc/os.h	147;"	d
PENDING_BYTE	tsrc/os.h	149;"	d
PENDING_BYTE_PAGE	sqlite3.c	57723;"	d	file:
PENDING_BYTE_PAGE	src/btreeInt.h	581;"	d
PENDING_BYTE_PAGE	tsrc/btreeInt.h	581;"	d
PENDING_LOCK	sqlite3.c	13458;"	d	file:
PENDING_LOCK	src/os.h	88;"	d
PENDING_LOCK	tsrc/os.h	88;"	d
PGHDR_CLEAN	sqlite3.c	13169;"	d	file:
PGHDR_CLEAN	src/pcache.h	49;"	d
PGHDR_CLEAN	tsrc/pcache.h	49;"	d
PGHDR_DIRTY	sqlite3.c	13170;"	d	file:
PGHDR_DIRTY	src/pcache.h	50;"	d
PGHDR_DIRTY	tsrc/pcache.h	50;"	d
PGHDR_DONT_WRITE	sqlite3.c	13174;"	d	file:
PGHDR_DONT_WRITE	src/pcache.h	54;"	d
PGHDR_DONT_WRITE	tsrc/pcache.h	54;"	d
PGHDR_MMAP	sqlite3.c	13175;"	d	file:
PGHDR_MMAP	src/pcache.h	55;"	d
PGHDR_MMAP	tsrc/pcache.h	55;"	d
PGHDR_NEED_SYNC	sqlite3.c	13172;"	d	file:
PGHDR_NEED_SYNC	src/pcache.h	52;"	d
PGHDR_NEED_SYNC	tsrc/pcache.h	52;"	d
PGHDR_WAL_APPEND	sqlite3.c	13177;"	d	file:
PGHDR_WAL_APPEND	src/pcache.h	57;"	d
PGHDR_WAL_APPEND	tsrc/pcache.h	57;"	d
PGHDR_WRITEABLE	sqlite3.c	13171;"	d	file:
PGHDR_WRITEABLE	src/pcache.h	51;"	d
PGHDR_WRITEABLE	tsrc/pcache.h	51;"	d
PGroup	sqlite3.c	/^struct PGroup {$/;"	s	file:
PGroup	sqlite3.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PGroup	src/pcache1.c	/^struct PGroup {$/;"	s	file:
PGroup	src/pcache1.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PGroup	tsrc/pcache1.c	/^struct PGroup {$/;"	s	file:
PGroup	tsrc/pcache1.c	/^typedef struct PGroup PGroup;$/;"	t	typeref:struct:PGroup	file:
PLReader	ext/fts2/fts2.c	/^typedef struct PLReader {$/;"	s	file:
PLReader	ext/fts2/fts2.c	/^} PLReader;$/;"	t	typeref:struct:PLReader	file:
PLReader	tsrc/fts2.c	/^typedef struct PLReader {$/;"	s	file:
PLReader	tsrc/fts2.c	/^} PLReader;$/;"	t	typeref:struct:PLReader	file:
PLS_HASHSIZE	src/test_wsd.c	22;"	d	file:
PLWriter	ext/fts2/fts2.c	/^typedef struct PLWriter {$/;"	s	file:
PLWriter	ext/fts2/fts2.c	/^} PLWriter;$/;"	t	typeref:struct:PLWriter	file:
PLWriter	tsrc/fts2.c	/^typedef struct PLWriter {$/;"	s	file:
PLWriter	tsrc/fts2.c	/^} PLWriter;$/;"	t	typeref:struct:PLWriter	file:
POSITION_LIST_END	ext/fts3/fts3.c	2040;"	d	file:
POSITION_LIST_END	sqlite3.c	143793;"	d	file:
POSITION_LIST_END	tsrc/fts3.c	2040;"	d	file:
POS_BASE	ext/fts1/fts1.c	/^  POS_BASE$/;"	e	enum:__anon75	file:
POS_BASE	ext/fts2/fts2.c	/^  POS_BASE$/;"	e	enum:__anon76	file:
POS_BASE	tsrc/fts1.c	/^  POS_BASE$/;"	e	enum:__anon33	file:
POS_BASE	tsrc/fts2.c	/^  POS_BASE$/;"	e	enum:__anon38	file:
POS_COLUMN	ext/fts1/fts1.c	/^  POS_COLUMN,         \/* followed by new column number *\/$/;"	e	enum:__anon75	file:
POS_COLUMN	ext/fts2/fts2.c	/^  POS_COLUMN,         \/* followed by new column number *\/$/;"	e	enum:__anon76	file:
POS_COLUMN	ext/fts3/fts3Int.h	127;"	d
POS_COLUMN	sqlite3.c	141551;"	d	file:
POS_COLUMN	tsrc/fts1.c	/^  POS_COLUMN,         \/* followed by new column number *\/$/;"	e	enum:__anon33	file:
POS_COLUMN	tsrc/fts2.c	/^  POS_COLUMN,         \/* followed by new column number *\/$/;"	e	enum:__anon38	file:
POS_COLUMN	tsrc/fts3Int.h	127;"	d
POS_END	ext/fts1/fts1.c	/^  POS_END = 0,        \/* end of this position list *\/$/;"	e	enum:__anon75	file:
POS_END	ext/fts2/fts2.c	/^  POS_END = 0,        \/* end of this position list *\/$/;"	e	enum:__anon76	file:
POS_END	ext/fts3/fts3Int.h	128;"	d
POS_END	sqlite3.c	141552;"	d	file:
POS_END	tsrc/fts1.c	/^  POS_END = 0,        \/* end of this position list *\/$/;"	e	enum:__anon33	file:
POS_END	tsrc/fts2.c	/^  POS_END = 0,        \/* end of this position list *\/$/;"	e	enum:__anon38	file:
POS_END	tsrc/fts3Int.h	128;"	d
PRAGMA	tool/mkkeywordhash.c	101;"	d	file:
PRAGMA	tool/mkkeywordhash.c	103;"	d	file:
PRECEDENCE_MARK_1	tool/lemon.c	/^  PRECEDENCE_MARK_1,$/;"	e	enum:e_state	file:
PRECEDENCE_MARK_2	tool/lemon.c	/^  PRECEDENCE_MARK_2,$/;"	e	enum:e_state	file:
PRIVATE	tool/lemon.c	43;"	d	file:
PROXY_CONCHVERSION	sqlite3.c	36003;"	d	file:
PROXY_CONCHVERSION	src/os_unix.c	6678;"	d	file:
PROXY_CONCHVERSION	tsrc/os_unix.c	6678;"	d	file:
PROXY_HEADERLEN	sqlite3.c	36004;"	d	file:
PROXY_HEADERLEN	src/os_unix.c	6679;"	d	file:
PROXY_HEADERLEN	tsrc/os_unix.c	6679;"	d	file:
PROXY_HOSTIDLEN	sqlite3.c	35964;"	d	file:
PROXY_HOSTIDLEN	src/os_unix.c	6639;"	d	file:
PROXY_HOSTIDLEN	tsrc/os_unix.c	6639;"	d	file:
PROXY_MAXCONCHLEN	sqlite3.c	36006;"	d	file:
PROXY_MAXCONCHLEN	src/os_unix.c	6681;"	d	file:
PROXY_MAXCONCHLEN	tsrc/os_unix.c	6681;"	d	file:
PROXY_PATHINDEX	sqlite3.c	36005;"	d	file:
PROXY_PATHINDEX	src/os_unix.c	6680;"	d	file:
PROXY_PATHINDEX	tsrc/os_unix.c	6680;"	d	file:
PTF_INTKEY	sqlite3.c	57398;"	d	file:
PTF_INTKEY	src/btreeInt.h	256;"	d
PTF_INTKEY	tsrc/btreeInt.h	256;"	d
PTF_LEAF	sqlite3.c	57401;"	d	file:
PTF_LEAF	src/btreeInt.h	259;"	d
PTF_LEAF	tsrc/btreeInt.h	259;"	d
PTF_LEAFDATA	sqlite3.c	57400;"	d	file:
PTF_LEAFDATA	src/btreeInt.h	258;"	d
PTF_LEAFDATA	tsrc/btreeInt.h	258;"	d
PTF_ZERODATA	sqlite3.c	57399;"	d	file:
PTF_ZERODATA	src/btreeInt.h	257;"	d
PTF_ZERODATA	tsrc/btreeInt.h	257;"	d
PTR2INT	test/threadtest3.c	70;"	d	file:
PTRMAP_BTREE	sqlite3.c	57779;"	d	file:
PTRMAP_BTREE	src/btreeInt.h	637;"	d
PTRMAP_BTREE	tsrc/btreeInt.h	637;"	d
PTRMAP_FREEPAGE	sqlite3.c	57776;"	d	file:
PTRMAP_FREEPAGE	src/btreeInt.h	634;"	d
PTRMAP_FREEPAGE	tsrc/btreeInt.h	634;"	d
PTRMAP_ISPAGE	sqlite3.c	57742;"	d	file:
PTRMAP_ISPAGE	src/btreeInt.h	600;"	d
PTRMAP_ISPAGE	tsrc/btreeInt.h	600;"	d
PTRMAP_OVERFLOW1	sqlite3.c	57777;"	d	file:
PTRMAP_OVERFLOW1	src/btreeInt.h	635;"	d
PTRMAP_OVERFLOW1	tsrc/btreeInt.h	635;"	d
PTRMAP_OVERFLOW2	sqlite3.c	57778;"	d	file:
PTRMAP_OVERFLOW2	src/btreeInt.h	636;"	d
PTRMAP_OVERFLOW2	tsrc/btreeInt.h	636;"	d
PTRMAP_PAGENO	sqlite3.c	57740;"	d	file:
PTRMAP_PAGENO	src/btreeInt.h	598;"	d
PTRMAP_PAGENO	tsrc/btreeInt.h	598;"	d
PTRMAP_PTROFFSET	sqlite3.c	57741;"	d	file:
PTRMAP_PTROFFSET	src/btreeInt.h	599;"	d
PTRMAP_PTROFFSET	tsrc/btreeInt.h	599;"	d
PTRMAP_ROOTPAGE	sqlite3.c	57775;"	d	file:
PTRMAP_ROOTPAGE	src/btreeInt.h	633;"	d
PTRMAP_ROOTPAGE	tsrc/btreeInt.h	633;"	d
PUTS	test/releasetest.tcl	/^  proc PUTS {txt} {$/;"	p
PUTSERR	test/releasetest.tcl	/^  proc PUTSERR {txt} {$/;"	p
PUTSNNL	test/releasetest.tcl	/^  proc PUTSNNL {txt} {$/;"	p
Pager	sqlite3.c	/^struct Pager {$/;"	s	file:
Pager	sqlite3.c	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager	file:
Pager	src/pager.c	/^struct Pager {$/;"	s	file:
Pager	src/pager.h	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager
Pager	tsrc/pager.c	/^struct Pager {$/;"	s	file:
Pager	tsrc/pager.h	/^typedef struct Pager Pager;$/;"	t	typeref:struct:Pager
PagerSavepoint	sqlite3.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	sqlite3.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
PagerSavepoint	src/pager.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	src/pager.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
PagerSavepoint	tsrc/pager.c	/^struct PagerSavepoint {$/;"	s	file:
PagerSavepoint	tsrc/pager.c	/^typedef struct PagerSavepoint PagerSavepoint;$/;"	t	typeref:struct:PagerSavepoint	file:
Parse	lempar.c	/^void Parse($/;"	f
Parse	sqlite3.c	/^struct Parse {$/;"	s	file:
Parse	sqlite3.c	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse	file:
Parse	src/sqliteInt.h	/^struct Parse {$/;"	s
Parse	src/sqliteInt.h	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse
Parse	tool/lemon.c	/^void Parse(struct lemon *gp)$/;"	f
Parse	tool/lempar.c	/^void Parse($/;"	f
Parse	tsrc/sqliteInt.h	/^struct Parse {$/;"	s
Parse	tsrc/sqliteInt.h	/^typedef struct Parse Parse;$/;"	t	typeref:struct:Parse
ParseAlloc	lempar.c	/^void *ParseAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
ParseAlloc	tool/lempar.c	/^void *ParseAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
ParseContext	ext/fts3/fts3_expr.c	/^struct ParseContext {$/;"	s	file:
ParseContext	ext/fts3/fts3_expr.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParseContext	sqlite3.c	/^struct ParseContext {$/;"	s	file:
ParseContext	sqlite3.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParseContext	tsrc/fts3_expr.c	/^struct ParseContext {$/;"	s	file:
ParseContext	tsrc/fts3_expr.c	/^typedef struct ParseContext ParseContext;$/;"	t	typeref:struct:ParseContext	file:
ParseFree	lempar.c	/^void ParseFree($/;"	f
ParseFree	tool/lempar.c	/^void ParseFree($/;"	f
ParseStackPeak	lempar.c	/^int ParseStackPeak(void *p){$/;"	f
ParseStackPeak	tool/lempar.c	/^int ParseStackPeak(void *p){$/;"	f
ParseTrace	lempar.c	/^void ParseTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
ParseTrace	tool/lempar.c	/^void ParseTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
PendingList	ext/fts3/fts3_write.c	/^struct PendingList {$/;"	s	file:
PendingList	ext/fts3/fts3_write.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
PendingList	sqlite3.c	/^struct PendingList {$/;"	s	file:
PendingList	sqlite3.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
PendingList	tsrc/fts3_write.c	/^struct PendingList {$/;"	s	file:
PendingList	tsrc/fts3_write.c	/^typedef struct PendingList PendingList;$/;"	t	typeref:struct:PendingList	file:
Percentile	ext/misc/percentile.c	/^struct Percentile {$/;"	s	file:
Percentile	ext/misc/percentile.c	/^typedef struct Percentile Percentile;$/;"	t	typeref:struct:Percentile	file:
PgFreeslot	sqlite3.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	sqlite3.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgFreeslot	src/pcache1.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	src/pcache1.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgFreeslot	tsrc/pcache1.c	/^struct PgFreeslot {$/;"	s	file:
PgFreeslot	tsrc/pcache1.c	/^typedef struct PgFreeslot PgFreeslot;$/;"	t	typeref:struct:PgFreeslot	file:
PgHdr	sqlite3.c	/^struct PgHdr {$/;"	s	file:
PgHdr	sqlite3.c	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr	file:
PgHdr	src/pcache.h	/^struct PgHdr {$/;"	s
PgHdr	src/pcache.h	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr
PgHdr	tsrc/pcache.h	/^struct PgHdr {$/;"	s
PgHdr	tsrc/pcache.h	/^typedef struct PgHdr PgHdr;$/;"	t	typeref:struct:PgHdr
PgHdr1	sqlite3.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	sqlite3.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
PgHdr1	src/pcache1.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	src/pcache1.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
PgHdr1	tsrc/pcache1.c	/^struct PgHdr1 {$/;"	s	file:
PgHdr1	tsrc/pcache1.c	/^typedef struct PgHdr1 PgHdr1;$/;"	t	typeref:struct:PgHdr1	file:
Pgno	sqlite3.c	/^typedef u32 Pgno;$/;"	t	file:
Pgno	src/pager.h	/^typedef u32 Pgno;$/;"	t
Pgno	tsrc/pager.h	/^typedef u32 Pgno;$/;"	t
Plink_add	tool/lemon.c	/^void Plink_add(struct plink **plpp, struct config *cfp)$/;"	f
Plink_copy	tool/lemon.c	/^void Plink_copy(struct plink **to, struct plink *from)$/;"	f
Plink_delete	tool/lemon.c	/^void Plink_delete(struct plink *plp)$/;"	f
Plink_new	tool/lemon.c	/^struct plink *Plink_new(){$/;"	f
PmaReader	sqlite3.c	/^struct PmaReader {$/;"	s	file:
PmaReader	sqlite3.c	/^typedef struct PmaReader PmaReader;         \/* Incrementally read one PMA *\/$/;"	t	typeref:struct:PmaReader	file:
PmaReader	src/vdbesort.c	/^struct PmaReader {$/;"	s	file:
PmaReader	src/vdbesort.c	/^typedef struct PmaReader PmaReader;         \/* Incrementally read one PMA *\/$/;"	t	typeref:struct:PmaReader	file:
PmaReader	tsrc/vdbesort.c	/^struct PmaReader {$/;"	s	file:
PmaReader	tsrc/vdbesort.c	/^typedef struct PmaReader PmaReader;         \/* Incrementally read one PMA *\/$/;"	t	typeref:struct:PmaReader	file:
PmaWriter	sqlite3.c	/^struct PmaWriter {$/;"	s	file:
PmaWriter	sqlite3.c	/^typedef struct PmaWriter PmaWriter;         \/* Incrementally write one PMA *\/$/;"	t	typeref:struct:PmaWriter	file:
PmaWriter	src/vdbesort.c	/^struct PmaWriter {$/;"	s	file:
PmaWriter	src/vdbesort.c	/^typedef struct PmaWriter PmaWriter;         \/* Incrementally write one PMA *\/$/;"	t	typeref:struct:PmaWriter	file:
PmaWriter	tsrc/vdbesort.c	/^struct PmaWriter {$/;"	s	file:
PmaWriter	tsrc/vdbesort.c	/^typedef struct PmaWriter PmaWriter;         \/* Incrementally write one PMA *\/$/;"	t	typeref:struct:PmaWriter	file:
PorterContext	ext/fts5/fts5_tokenize.c	/^struct PorterContext {$/;"	s	file:
PorterContext	ext/fts5/fts5_tokenize.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterContext	fts5.c	/^struct PorterContext {$/;"	s	file:
PorterContext	fts5.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterContext	sqlite3.c	/^struct PorterContext {$/;"	s	file:
PorterContext	sqlite3.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterContext	tsrc/fts5.c	/^struct PorterContext {$/;"	s	file:
PorterContext	tsrc/fts5.c	/^typedef struct PorterContext PorterContext;$/;"	t	typeref:struct:PorterContext	file:
PorterRule	ext/fts5/fts5_tokenize.c	/^struct PorterRule {$/;"	s	file:
PorterRule	ext/fts5/fts5_tokenize.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterRule	fts5.c	/^struct PorterRule {$/;"	s	file:
PorterRule	fts5.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterRule	sqlite3.c	/^struct PorterRule {$/;"	s	file:
PorterRule	sqlite3.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterRule	tsrc/fts5.c	/^struct PorterRule {$/;"	s	file:
PorterRule	tsrc/fts5.c	/^typedef struct PorterRule PorterRule;$/;"	t	typeref:struct:PorterRule	file:
PorterTokenizer	ext/fts5/fts5_tokenize.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	ext/fts5/fts5_tokenize.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PorterTokenizer	fts5.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	fts5.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PorterTokenizer	sqlite3.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	sqlite3.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PorterTokenizer	tsrc/fts5.c	/^struct PorterTokenizer {$/;"	s	file:
PorterTokenizer	tsrc/fts5.c	/^typedef struct PorterTokenizer PorterTokenizer;$/;"	t	typeref:struct:PorterTokenizer	file:
PoslistCallbackCtx	ext/fts5/fts5_index.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	ext/fts5/fts5_index.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistCallbackCtx	fts5.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	fts5.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistCallbackCtx	sqlite3.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	sqlite3.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistCallbackCtx	tsrc/fts5.c	/^struct PoslistCallbackCtx {$/;"	s	file:
PoslistCallbackCtx	tsrc/fts5.c	/^typedef struct PoslistCallbackCtx PoslistCallbackCtx;$/;"	t	typeref:struct:PoslistCallbackCtx	file:
PoslistOffsetsCtx	ext/fts5/fts5_index.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	ext/fts5/fts5_index.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PoslistOffsetsCtx	fts5.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	fts5.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PoslistOffsetsCtx	sqlite3.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	sqlite3.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PoslistOffsetsCtx	tsrc/fts5.c	/^struct PoslistOffsetsCtx {$/;"	s	file:
PoslistOffsetsCtx	tsrc/fts5.c	/^typedef struct PoslistOffsetsCtx PoslistOffsetsCtx;$/;"	t	typeref:struct:PoslistOffsetsCtx	file:
PragFlag_NeedSchema	sqlite3.c	110249;"	d	file:
PragFlag_NeedSchema	src/pragma.h	49;"	d
PragFlag_NeedSchema	tsrc/pragma.h	49;"	d
PragFlag_ReadOnly	sqlite3.c	110250;"	d	file:
PragFlag_ReadOnly	src/pragma.h	50;"	d
PragFlag_ReadOnly	tsrc/pragma.h	50;"	d
PragTyp_ACTIVATE_EXTENSIONS	sqlite3.c	110243;"	d	file:
PragTyp_ACTIVATE_EXTENSIONS	src/pragma.h	43;"	d
PragTyp_ACTIVATE_EXTENSIONS	tsrc/pragma.h	43;"	d
PragTyp_AUTO_VACUUM	sqlite3.c	110207;"	d	file:
PragTyp_AUTO_VACUUM	src/pragma.h	7;"	d
PragTyp_AUTO_VACUUM	tsrc/pragma.h	7;"	d
PragTyp_BUSY_TIMEOUT	sqlite3.c	110209;"	d	file:
PragTyp_BUSY_TIMEOUT	src/pragma.h	9;"	d
PragTyp_BUSY_TIMEOUT	tsrc/pragma.h	9;"	d
PragTyp_CACHE_SIZE	sqlite3.c	110210;"	d	file:
PragTyp_CACHE_SIZE	src/pragma.h	10;"	d
PragTyp_CACHE_SIZE	tsrc/pragma.h	10;"	d
PragTyp_CACHE_SPILL	sqlite3.c	110211;"	d	file:
PragTyp_CACHE_SPILL	src/pragma.h	11;"	d
PragTyp_CACHE_SPILL	tsrc/pragma.h	11;"	d
PragTyp_CASE_SENSITIVE_LIKE	sqlite3.c	110212;"	d	file:
PragTyp_CASE_SENSITIVE_LIKE	src/pragma.h	12;"	d
PragTyp_CASE_SENSITIVE_LIKE	tsrc/pragma.h	12;"	d
PragTyp_COLLATION_LIST	sqlite3.c	110213;"	d	file:
PragTyp_COLLATION_LIST	src/pragma.h	13;"	d
PragTyp_COLLATION_LIST	tsrc/pragma.h	13;"	d
PragTyp_COMPILE_OPTIONS	sqlite3.c	110214;"	d	file:
PragTyp_COMPILE_OPTIONS	src/pragma.h	14;"	d
PragTyp_COMPILE_OPTIONS	tsrc/pragma.h	14;"	d
PragTyp_DATABASE_LIST	sqlite3.c	110216;"	d	file:
PragTyp_DATABASE_LIST	src/pragma.h	16;"	d
PragTyp_DATABASE_LIST	tsrc/pragma.h	16;"	d
PragTyp_DATA_STORE_DIRECTORY	sqlite3.c	110215;"	d	file:
PragTyp_DATA_STORE_DIRECTORY	src/pragma.h	15;"	d
PragTyp_DATA_STORE_DIRECTORY	tsrc/pragma.h	15;"	d
PragTyp_DEFAULT_CACHE_SIZE	sqlite3.c	110217;"	d	file:
PragTyp_DEFAULT_CACHE_SIZE	src/pragma.h	17;"	d
PragTyp_DEFAULT_CACHE_SIZE	tsrc/pragma.h	17;"	d
PragTyp_ENCODING	sqlite3.c	110218;"	d	file:
PragTyp_ENCODING	src/pragma.h	18;"	d
PragTyp_ENCODING	tsrc/pragma.h	18;"	d
PragTyp_FLAG	sqlite3.c	110208;"	d	file:
PragTyp_FLAG	src/pragma.h	8;"	d
PragTyp_FLAG	tsrc/pragma.h	8;"	d
PragTyp_FOREIGN_KEY_CHECK	sqlite3.c	110219;"	d	file:
PragTyp_FOREIGN_KEY_CHECK	src/pragma.h	19;"	d
PragTyp_FOREIGN_KEY_CHECK	tsrc/pragma.h	19;"	d
PragTyp_FOREIGN_KEY_LIST	sqlite3.c	110220;"	d	file:
PragTyp_FOREIGN_KEY_LIST	src/pragma.h	20;"	d
PragTyp_FOREIGN_KEY_LIST	tsrc/pragma.h	20;"	d
PragTyp_HEADER_VALUE	sqlite3.c	110206;"	d	file:
PragTyp_HEADER_VALUE	src/pragma.h	6;"	d
PragTyp_HEADER_VALUE	tsrc/pragma.h	6;"	d
PragTyp_HEXKEY	sqlite3.c	110244;"	d	file:
PragTyp_HEXKEY	src/pragma.h	44;"	d
PragTyp_HEXKEY	tsrc/pragma.h	44;"	d
PragTyp_INCREMENTAL_VACUUM	sqlite3.c	110221;"	d	file:
PragTyp_INCREMENTAL_VACUUM	src/pragma.h	21;"	d
PragTyp_INCREMENTAL_VACUUM	tsrc/pragma.h	21;"	d
PragTyp_INDEX_INFO	sqlite3.c	110222;"	d	file:
PragTyp_INDEX_INFO	src/pragma.h	22;"	d
PragTyp_INDEX_INFO	tsrc/pragma.h	22;"	d
PragTyp_INDEX_LIST	sqlite3.c	110223;"	d	file:
PragTyp_INDEX_LIST	src/pragma.h	23;"	d
PragTyp_INDEX_LIST	tsrc/pragma.h	23;"	d
PragTyp_INTEGRITY_CHECK	sqlite3.c	110224;"	d	file:
PragTyp_INTEGRITY_CHECK	src/pragma.h	24;"	d
PragTyp_INTEGRITY_CHECK	tsrc/pragma.h	24;"	d
PragTyp_JOURNAL_MODE	sqlite3.c	110225;"	d	file:
PragTyp_JOURNAL_MODE	src/pragma.h	25;"	d
PragTyp_JOURNAL_MODE	tsrc/pragma.h	25;"	d
PragTyp_JOURNAL_SIZE_LIMIT	sqlite3.c	110226;"	d	file:
PragTyp_JOURNAL_SIZE_LIMIT	src/pragma.h	26;"	d
PragTyp_JOURNAL_SIZE_LIMIT	tsrc/pragma.h	26;"	d
PragTyp_KEY	sqlite3.c	110245;"	d	file:
PragTyp_KEY	src/pragma.h	45;"	d
PragTyp_KEY	tsrc/pragma.h	45;"	d
PragTyp_LOCKING_MODE	sqlite3.c	110228;"	d	file:
PragTyp_LOCKING_MODE	src/pragma.h	28;"	d
PragTyp_LOCKING_MODE	tsrc/pragma.h	28;"	d
PragTyp_LOCK_PROXY_FILE	sqlite3.c	110227;"	d	file:
PragTyp_LOCK_PROXY_FILE	src/pragma.h	27;"	d
PragTyp_LOCK_PROXY_FILE	tsrc/pragma.h	27;"	d
PragTyp_LOCK_STATUS	sqlite3.c	110247;"	d	file:
PragTyp_LOCK_STATUS	src/pragma.h	47;"	d
PragTyp_LOCK_STATUS	tsrc/pragma.h	47;"	d
PragTyp_MMAP_SIZE	sqlite3.c	110230;"	d	file:
PragTyp_MMAP_SIZE	src/pragma.h	30;"	d
PragTyp_MMAP_SIZE	tsrc/pragma.h	30;"	d
PragTyp_PAGE_COUNT	sqlite3.c	110229;"	d	file:
PragTyp_PAGE_COUNT	src/pragma.h	29;"	d
PragTyp_PAGE_COUNT	tsrc/pragma.h	29;"	d
PragTyp_PAGE_SIZE	sqlite3.c	110231;"	d	file:
PragTyp_PAGE_SIZE	src/pragma.h	31;"	d
PragTyp_PAGE_SIZE	tsrc/pragma.h	31;"	d
PragTyp_PARSER_TRACE	sqlite3.c	110248;"	d	file:
PragTyp_PARSER_TRACE	src/pragma.h	48;"	d
PragTyp_PARSER_TRACE	tsrc/pragma.h	48;"	d
PragTyp_REKEY	sqlite3.c	110246;"	d	file:
PragTyp_REKEY	src/pragma.h	46;"	d
PragTyp_REKEY	tsrc/pragma.h	46;"	d
PragTyp_SECURE_DELETE	sqlite3.c	110232;"	d	file:
PragTyp_SECURE_DELETE	src/pragma.h	32;"	d
PragTyp_SECURE_DELETE	tsrc/pragma.h	32;"	d
PragTyp_SHRINK_MEMORY	sqlite3.c	110233;"	d	file:
PragTyp_SHRINK_MEMORY	src/pragma.h	33;"	d
PragTyp_SHRINK_MEMORY	tsrc/pragma.h	33;"	d
PragTyp_SOFT_HEAP_LIMIT	sqlite3.c	110234;"	d	file:
PragTyp_SOFT_HEAP_LIMIT	src/pragma.h	34;"	d
PragTyp_SOFT_HEAP_LIMIT	tsrc/pragma.h	34;"	d
PragTyp_STATS	sqlite3.c	110235;"	d	file:
PragTyp_STATS	src/pragma.h	35;"	d
PragTyp_STATS	tsrc/pragma.h	35;"	d
PragTyp_SYNCHRONOUS	sqlite3.c	110236;"	d	file:
PragTyp_SYNCHRONOUS	src/pragma.h	36;"	d
PragTyp_SYNCHRONOUS	tsrc/pragma.h	36;"	d
PragTyp_TABLE_INFO	sqlite3.c	110237;"	d	file:
PragTyp_TABLE_INFO	src/pragma.h	37;"	d
PragTyp_TABLE_INFO	tsrc/pragma.h	37;"	d
PragTyp_TEMP_STORE	sqlite3.c	110238;"	d	file:
PragTyp_TEMP_STORE	src/pragma.h	38;"	d
PragTyp_TEMP_STORE	tsrc/pragma.h	38;"	d
PragTyp_TEMP_STORE_DIRECTORY	sqlite3.c	110239;"	d	file:
PragTyp_TEMP_STORE_DIRECTORY	src/pragma.h	39;"	d
PragTyp_TEMP_STORE_DIRECTORY	tsrc/pragma.h	39;"	d
PragTyp_THREADS	sqlite3.c	110240;"	d	file:
PragTyp_THREADS	src/pragma.h	40;"	d
PragTyp_THREADS	tsrc/pragma.h	40;"	d
PragTyp_WAL_AUTOCHECKPOINT	sqlite3.c	110241;"	d	file:
PragTyp_WAL_AUTOCHECKPOINT	src/pragma.h	41;"	d
PragTyp_WAL_AUTOCHECKPOINT	tsrc/pragma.h	41;"	d
PragTyp_WAL_CHECKPOINT	sqlite3.c	110242;"	d	file:
PragTyp_WAL_CHECKPOINT	src/pragma.h	42;"	d
PragTyp_WAL_CHECKPOINT	tsrc/pragma.h	42;"	d
PreUpdate	sqlite3.c	/^struct PreUpdate {$/;"	s	file:
PreUpdate	sqlite3.c	/^typedef struct PreUpdate PreUpdate;$/;"	t	typeref:struct:PreUpdate	file:
PreUpdate	src/sqliteInt.h	/^typedef struct PreUpdate PreUpdate;$/;"	t	typeref:struct:PreUpdate
PreUpdate	src/vdbeInt.h	/^struct PreUpdate {$/;"	s
PreUpdate	tsrc/sqliteInt.h	/^typedef struct PreUpdate PreUpdate;$/;"	t	typeref:struct:PreUpdate
PreUpdate	tsrc/vdbeInt.h	/^struct PreUpdate {$/;"	s
PrintAction	tool/lemon.c	/^int PrintAction($/;"	f
PrintfArguments	sqlite3.c	/^struct PrintfArguments {$/;"	s	file:
PrintfArguments	sqlite3.c	/^typedef struct PrintfArguments PrintfArguments;$/;"	t	typeref:struct:PrintfArguments	file:
PrintfArguments	src/sqliteInt.h	/^struct PrintfArguments {$/;"	s
PrintfArguments	src/sqliteInt.h	/^typedef struct PrintfArguments PrintfArguments;$/;"	t	typeref:struct:PrintfArguments
PrintfArguments	tsrc/sqliteInt.h	/^struct PrintfArguments {$/;"	s
PrintfArguments	tsrc/sqliteInt.h	/^typedef struct PrintfArguments PrintfArguments;$/;"	t	typeref:struct:PrintfArguments
ProcessLocalStorage	src/test_wsd.c	/^struct ProcessLocalStorage {$/;"	s	file:
ProcessLocalStorage	src/test_wsd.c	/^typedef struct ProcessLocalStorage ProcessLocalStorage;$/;"	t	typeref:struct:ProcessLocalStorage	file:
ProcessLocalVar	src/test_wsd.c	/^struct ProcessLocalVar {$/;"	s	file:
ProcessLocalVar	src/test_wsd.c	/^typedef struct ProcessLocalVar ProcessLocalVar;$/;"	t	typeref:struct:ProcessLocalVar	file:
Program	tool/GetFile.cs	/^    internal static class Program$/;"	c	namespace:GetFile
QUERY_FULLTEXT	ext/fts1/fts1.c	/^  QUERY_FULLTEXT   \/* QUERY_FULLTEXT + [i] is a full-text search for column i*\/$/;"	e	enum:QueryType	file:
QUERY_FULLTEXT	ext/fts1/fulltext.c	523;"	d	file:
QUERY_FULLTEXT	ext/fts2/fts2.c	/^  QUERY_FULLTEXT   \/* QUERY_FULLTEXT + [i] is a full-text search for column i*\/$/;"	e	enum:QueryType	file:
QUERY_FULLTEXT	tsrc/fts1.c	/^  QUERY_FULLTEXT   \/* QUERY_FULLTEXT + [i] is a full-text search for column i*\/$/;"	e	enum:QueryType	file:
QUERY_FULLTEXT	tsrc/fts2.c	/^  QUERY_FULLTEXT   \/* QUERY_FULLTEXT + [i] is a full-text search for column i*\/$/;"	e	enum:QueryType	file:
QUERY_GENERIC	ext/fts1/fts1.c	/^  QUERY_GENERIC,   \/* table scan *\/$/;"	e	enum:QueryType	file:
QUERY_GENERIC	ext/fts1/fulltext.c	522;"	d	file:
QUERY_GENERIC	ext/fts2/fts2.c	/^  QUERY_GENERIC,   \/* table scan *\/$/;"	e	enum:QueryType	file:
QUERY_GENERIC	tsrc/fts1.c	/^  QUERY_GENERIC,   \/* table scan *\/$/;"	e	enum:QueryType	file:
QUERY_GENERIC	tsrc/fts2.c	/^  QUERY_GENERIC,   \/* table scan *\/$/;"	e	enum:QueryType	file:
QUERY_ROWID	ext/fts1/fts1.c	/^  QUERY_ROWID,     \/* lookup by rowid *\/$/;"	e	enum:QueryType	file:
QUERY_ROWID	ext/fts2/fts2.c	/^  QUERY_ROWID,     \/* lookup by rowid *\/$/;"	e	enum:QueryType	file:
QUERY_ROWID	tsrc/fts1.c	/^  QUERY_ROWID,     \/* lookup by rowid *\/$/;"	e	enum:QueryType	file:
QUERY_ROWID	tsrc/fts2.c	/^  QUERY_ROWID,     \/* lookup by rowid *\/$/;"	e	enum:QueryType	file:
QualifyPath	autoconf/tea/win/nmakehlp.c	/^QualifyPath($/;"	f	file:
Query	ext/fts1/fts1.c	/^typedef struct Query {$/;"	s	file:
Query	ext/fts1/fts1.c	/^} Query;$/;"	t	typeref:struct:Query	file:
Query	ext/fts1/fulltext.c	/^typedef struct Query {$/;"	s	file:
Query	ext/fts1/fulltext.c	/^} Query;$/;"	t	typeref:struct:Query	file:
Query	ext/fts2/fts2.c	/^typedef struct Query {$/;"	s	file:
Query	ext/fts2/fts2.c	/^} Query;$/;"	t	typeref:struct:Query	file:
Query	tsrc/fts1.c	/^typedef struct Query {$/;"	s	file:
Query	tsrc/fts1.c	/^} Query;$/;"	t	typeref:struct:Query	file:
Query	tsrc/fts2.c	/^typedef struct Query {$/;"	s	file:
Query	tsrc/fts2.c	/^} Query;$/;"	t	typeref:struct:Query	file:
QueryResult	test/threadtest1.c	/^struct QueryResult {$/;"	s	file:
QueryTerm	ext/fts1/fts1.c	/^typedef struct QueryTerm {$/;"	s	file:
QueryTerm	ext/fts1/fts1.c	/^} QueryTerm;$/;"	t	typeref:struct:QueryTerm	file:
QueryTerm	ext/fts1/fulltext.c	/^typedef struct QueryTerm {$/;"	s	file:
QueryTerm	ext/fts1/fulltext.c	/^} QueryTerm;$/;"	t	typeref:struct:QueryTerm	file:
QueryTerm	ext/fts2/fts2.c	/^typedef struct QueryTerm {$/;"	s	file:
QueryTerm	ext/fts2/fts2.c	/^} QueryTerm;$/;"	t	typeref:struct:QueryTerm	file:
QueryTerm	tsrc/fts1.c	/^typedef struct QueryTerm {$/;"	s	file:
QueryTerm	tsrc/fts1.c	/^} QueryTerm;$/;"	t	typeref:struct:QueryTerm	file:
QueryTerm	tsrc/fts2.c	/^typedef struct QueryTerm {$/;"	s	file:
QueryTerm	tsrc/fts2.c	/^} QueryTerm;$/;"	t	typeref:struct:QueryTerm	file:
QueryType	ext/fts1/fts1.c	/^typedef enum QueryType {$/;"	g	file:
QueryType	ext/fts1/fts1.c	/^} QueryType;$/;"	t	typeref:enum:QueryType	file:
QueryType	ext/fts2/fts2.c	/^typedef enum QueryType {$/;"	g	file:
QueryType	ext/fts2/fts2.c	/^} QueryType;$/;"	t	typeref:enum:QueryType	file:
QueryType	tsrc/fts1.c	/^typedef enum QueryType {$/;"	g	file:
QueryType	tsrc/fts1.c	/^} QueryType;$/;"	t	typeref:enum:QueryType	file:
QueryType	tsrc/fts2.c	/^typedef enum QueryType {$/;"	g	file:
QueryType	tsrc/fts2.c	/^} QueryType;$/;"	t	typeref:enum:QueryType	file:
R1	tool/dbhash.c	100;"	d	file:
R2	tool/dbhash.c	102;"	d	file:
R3	tool/dbhash.c	104;"	d	file:
R4	tool/dbhash.c	106;"	d	file:
RBU_CREATE_STATE	ext/rbu/sqlite3rbu.c	167;"	d	file:
RBU_CREATE_STATE	sqlite3.c	165090;"	d	file:
RBU_CREATE_STATE	tsrc/sqlite3rbu.c	167;"	d	file:
RBU_DELETE	ext/rbu/sqlite3rbu.c	288;"	d	file:
RBU_DELETE	sqlite3.c	165211;"	d	file:
RBU_DELETE	tsrc/sqlite3rbu.c	288;"	d	file:
RBU_IDX_DELETE	ext/rbu/sqlite3rbu.c	290;"	d	file:
RBU_IDX_DELETE	sqlite3.c	165213;"	d	file:
RBU_IDX_DELETE	tsrc/sqlite3rbu.c	290;"	d	file:
RBU_IDX_INSERT	ext/rbu/sqlite3rbu.c	291;"	d	file:
RBU_IDX_INSERT	sqlite3.c	165214;"	d	file:
RBU_IDX_INSERT	tsrc/sqlite3rbu.c	291;"	d	file:
RBU_INSERT	ext/rbu/sqlite3rbu.c	287;"	d	file:
RBU_INSERT	sqlite3.c	165210;"	d	file:
RBU_INSERT	tsrc/sqlite3rbu.c	287;"	d	file:
RBU_PK_EXTERNAL	ext/rbu/sqlite3rbu.c	278;"	d	file:
RBU_PK_EXTERNAL	sqlite3.c	165201;"	d	file:
RBU_PK_EXTERNAL	tsrc/sqlite3rbu.c	278;"	d	file:
RBU_PK_IPK	ext/rbu/sqlite3rbu.c	277;"	d	file:
RBU_PK_IPK	sqlite3.c	165200;"	d	file:
RBU_PK_IPK	tsrc/sqlite3rbu.c	277;"	d	file:
RBU_PK_NONE	ext/rbu/sqlite3rbu.c	276;"	d	file:
RBU_PK_NONE	sqlite3.c	165199;"	d	file:
RBU_PK_NONE	tsrc/sqlite3rbu.c	276;"	d	file:
RBU_PK_NOTABLE	ext/rbu/sqlite3rbu.c	275;"	d	file:
RBU_PK_NOTABLE	sqlite3.c	165198;"	d	file:
RBU_PK_NOTABLE	tsrc/sqlite3rbu.c	275;"	d	file:
RBU_PK_VTAB	ext/rbu/sqlite3rbu.c	280;"	d	file:
RBU_PK_VTAB	sqlite3.c	165203;"	d	file:
RBU_PK_VTAB	tsrc/sqlite3rbu.c	280;"	d	file:
RBU_PK_WITHOUT_ROWID	ext/rbu/sqlite3rbu.c	279;"	d	file:
RBU_PK_WITHOUT_ROWID	sqlite3.c	165202;"	d	file:
RBU_PK_WITHOUT_ROWID	tsrc/sqlite3rbu.c	279;"	d	file:
RBU_REPLACE	ext/rbu/sqlite3rbu.c	289;"	d	file:
RBU_REPLACE	sqlite3.c	165212;"	d	file:
RBU_REPLACE	tsrc/sqlite3rbu.c	289;"	d	file:
RBU_STAGE_CAPTURE	ext/rbu/sqlite3rbu.c	162;"	d	file:
RBU_STAGE_CAPTURE	sqlite3.c	165085;"	d	file:
RBU_STAGE_CAPTURE	tsrc/sqlite3rbu.c	162;"	d	file:
RBU_STAGE_CKPT	ext/rbu/sqlite3rbu.c	163;"	d	file:
RBU_STAGE_CKPT	sqlite3.c	165086;"	d	file:
RBU_STAGE_CKPT	tsrc/sqlite3rbu.c	163;"	d	file:
RBU_STAGE_DONE	ext/rbu/sqlite3rbu.c	164;"	d	file:
RBU_STAGE_DONE	sqlite3.c	165087;"	d	file:
RBU_STAGE_DONE	tsrc/sqlite3rbu.c	164;"	d	file:
RBU_STAGE_MOVE	ext/rbu/sqlite3rbu.c	161;"	d	file:
RBU_STAGE_MOVE	sqlite3.c	165084;"	d	file:
RBU_STAGE_MOVE	tsrc/sqlite3rbu.c	161;"	d	file:
RBU_STAGE_OAL	ext/rbu/sqlite3rbu.c	160;"	d	file:
RBU_STAGE_OAL	sqlite3.c	165083;"	d	file:
RBU_STAGE_OAL	tsrc/sqlite3rbu.c	160;"	d	file:
RBU_STATE_CKPT	ext/rbu/sqlite3rbu.c	155;"	d	file:
RBU_STATE_CKPT	sqlite3.c	165078;"	d	file:
RBU_STATE_CKPT	tsrc/sqlite3rbu.c	155;"	d	file:
RBU_STATE_COOKIE	ext/rbu/sqlite3rbu.c	156;"	d	file:
RBU_STATE_COOKIE	sqlite3.c	165079;"	d	file:
RBU_STATE_COOKIE	tsrc/sqlite3rbu.c	156;"	d	file:
RBU_STATE_IDX	ext/rbu/sqlite3rbu.c	152;"	d	file:
RBU_STATE_IDX	sqlite3.c	165075;"	d	file:
RBU_STATE_IDX	tsrc/sqlite3rbu.c	152;"	d	file:
RBU_STATE_OALSZ	ext/rbu/sqlite3rbu.c	157;"	d	file:
RBU_STATE_OALSZ	sqlite3.c	165080;"	d	file:
RBU_STATE_OALSZ	tsrc/sqlite3rbu.c	157;"	d	file:
RBU_STATE_PHASEONESTEP	ext/rbu/sqlite3rbu.c	158;"	d	file:
RBU_STATE_PHASEONESTEP	sqlite3.c	165081;"	d	file:
RBU_STATE_PHASEONESTEP	tsrc/sqlite3rbu.c	158;"	d	file:
RBU_STATE_PROGRESS	ext/rbu/sqlite3rbu.c	154;"	d	file:
RBU_STATE_PROGRESS	sqlite3.c	165077;"	d	file:
RBU_STATE_PROGRESS	tsrc/sqlite3rbu.c	154;"	d	file:
RBU_STATE_ROW	ext/rbu/sqlite3rbu.c	153;"	d	file:
RBU_STATE_ROW	sqlite3.c	165076;"	d	file:
RBU_STATE_ROW	tsrc/sqlite3rbu.c	153;"	d	file:
RBU_STATE_STAGE	ext/rbu/sqlite3rbu.c	150;"	d	file:
RBU_STATE_STAGE	sqlite3.c	165073;"	d	file:
RBU_STATE_STAGE	tsrc/sqlite3rbu.c	150;"	d	file:
RBU_STATE_TBL	ext/rbu/sqlite3rbu.c	151;"	d	file:
RBU_STATE_TBL	sqlite3.c	165074;"	d	file:
RBU_STATE_TBL	tsrc/sqlite3rbu.c	151;"	d	file:
RBU_UPDATE	ext/rbu/sqlite3rbu.c	293;"	d	file:
RBU_UPDATE	sqlite3.c	165216;"	d	file:
RBU_UPDATE	tsrc/sqlite3rbu.c	293;"	d	file:
RD_RESOLVED	tool/lemon.c	/^  RD_RESOLVED,             \/* Was reduce.  Precedence resolved conflict *\/$/;"	e	enum:e_action	file:
READLINE_FLAGS	Makefile	/^READLINE_FLAGS = -DHAVE_READLINE=1 -I\/usr\/include\/readline$/;"	m
READMARK_NOT_USED	sqlite3.c	54061;"	d	file:
READMARK_NOT_USED	src/wal.c	385;"	d	file:
READMARK_NOT_USED	tsrc/wal.c	385;"	d	file:
READ_LOCK	sqlite3.c	57468;"	d	file:
READ_LOCK	src/btreeInt.h	326;"	d
READ_LOCK	tsrc/btreeInt.h	326;"	d
READ_UTF16BE	sqlite3.c	26788;"	d	file:
READ_UTF16BE	src/utf.c	118;"	d	file:
READ_UTF16BE	tsrc/utf.c	118;"	d	file:
READ_UTF16LE	sqlite3.c	26778;"	d	file:
READ_UTF16LE	src/utf.c	108;"	d	file:
READ_UTF16LE	tsrc/utf.c	108;"	d	file:
READ_UTF8	ext/fts3/fts3_unicode.c	46;"	d	file:
READ_UTF8	ext/fts5/fts5_tokenize.c	197;"	d	file:
READ_UTF8	fts5.c	18341;"	d	file:
READ_UTF8	sqlite3.c	159245;"	d	file:
READ_UTF8	sqlite3.c	195470;"	d	file:
READ_UTF8	sqlite3.c	26825;"	d	file:
READ_UTF8	src/utf.c	155;"	d	file:
READ_UTF8	tsrc/fts3_unicode.c	46;"	d	file:
READ_UTF8	tsrc/fts5.c	18341;"	d	file:
READ_UTF8	tsrc/utf.c	155;"	d	file:
REALVFS	ext/misc/vfslog.c	93;"	d	file:
REALVFS	ext/misc/vfsstat.c	143;"	d	file:
REALVFS	src/test_osinst.c	137;"	d	file:
REAL_LIBOBJ	Makefile	/^REAL_LIBOBJ = $(LIBOBJ:%.lo=.libs\/%.o)$/;"	m
REARGUARD	sqlite3.c	20628;"	d	file:
REARGUARD	src/mem2.c	69;"	d	file:
REARGUARD	tsrc/mem2.c	69;"	d	file:
REDUCE	tool/lemon.c	/^  REDUCE,$/;"	e	enum:e_action	file:
REGISTER_TRACE	sqlite3.c	77536;"	d	file:
REGISTER_TRACE	sqlite3.c	77538;"	d	file:
REGISTER_TRACE	src/vdbe.c	497;"	d	file:
REGISTER_TRACE	src/vdbe.c	499;"	d	file:
REGISTER_TRACE	tsrc/vdbe.c	497;"	d	file:
REGISTER_TRACE	tsrc/vdbe.c	499;"	d	file:
REINDEX	tool/mkkeywordhash.c	106;"	d	file:
REINDEX	tool/mkkeywordhash.c	108;"	d	file:
RELEASE	Makefile	/^RELEASE = 3.14.1$/;"	m
RESERVED_BYTE	sqlite3.c	13521;"	d	file:
RESERVED_BYTE	src/os.h	151;"	d
RESERVED_BYTE	tool/getlock.c	54;"	d	file:
RESERVED_BYTE	tsrc/os.h	151;"	d
RESERVED_LOCK	sqlite3.c	13457;"	d	file:
RESERVED_LOCK	src/os.h	87;"	d
RESERVED_LOCK	tsrc/os.h	87;"	d
RESYNC_AFTER_DECL_ERROR	tool/lemon.c	/^  RESYNC_AFTER_DECL_ERROR,$/;"	e	enum:e_state	file:
RESYNC_AFTER_RULE_ERROR	tool/lemon.c	/^  RESYNC_AFTER_RULE_ERROR,$/;"	e	enum:e_state	file:
RE_EOF	ext/misc/regexp.c	74;"	d	file:
RE_OP_ACCEPT	ext/misc/regexp.c	84;"	d	file:
RE_OP_ANY	ext/misc/regexp.c	80;"	d	file:
RE_OP_ANYSTAR	ext/misc/regexp.c	81;"	d	file:
RE_OP_BOUNDARY	ext/misc/regexp.c	95;"	d	file:
RE_OP_CC_EXC	ext/misc/regexp.c	86;"	d	file:
RE_OP_CC_INC	ext/misc/regexp.c	85;"	d	file:
RE_OP_CC_RANGE	ext/misc/regexp.c	88;"	d	file:
RE_OP_CC_VALUE	ext/misc/regexp.c	87;"	d	file:
RE_OP_DIGIT	ext/misc/regexp.c	91;"	d	file:
RE_OP_FORK	ext/misc/regexp.c	82;"	d	file:
RE_OP_GOTO	ext/misc/regexp.c	83;"	d	file:
RE_OP_MATCH	ext/misc/regexp.c	79;"	d	file:
RE_OP_NOTDIGIT	ext/misc/regexp.c	92;"	d	file:
RE_OP_NOTSPACE	ext/misc/regexp.c	94;"	d	file:
RE_OP_NOTWORD	ext/misc/regexp.c	90;"	d	file:
RE_OP_SPACE	ext/misc/regexp.c	93;"	d	file:
RE_OP_WORD	ext/misc/regexp.c	89;"	d	file:
RHS_ALIAS_1	tool/lemon.c	/^  RHS_ALIAS_1,$/;"	e	enum:e_state	file:
RHS_ALIAS_2	tool/lemon.c	/^  RHS_ALIAS_2,$/;"	e	enum:e_state	file:
RIGHT	tool/lemon.c	/^    RIGHT,$/;"	e	enum:e_assoc	file:
RNDAWAY	ext/rtree/rtree.c	2778;"	d	file:
RNDAWAY	sqlite3.c	162741;"	d	file:
RNDAWAY	tsrc/rtree.c	2778;"	d	file:
RNDTOWARDS	ext/rtree/rtree.c	2777;"	d	file:
RNDTOWARDS	sqlite3.c	162740;"	d	file:
RNDTOWARDS	tsrc/rtree.c	2777;"	d	file:
ROOT_MAX	ext/fts2/fts2.c	4063;"	d	file:
ROOT_MAX	tsrc/fts2.c	4063;"	d	file:
ROUND8	sqlite3.c	11744;"	d	file:
ROUND8	src/sqliteInt.h	810;"	d
ROUND8	tsrc/sqliteInt.h	810;"	d
ROUNDDOWN8	sqlite3.c	11749;"	d	file:
ROUNDDOWN8	src/sqliteInt.h	815;"	d
ROUNDDOWN8	tsrc/sqliteInt.h	815;"	d
ROWSET_ALLOCATION_SIZE	sqlite3.c	45696;"	d	file:
ROWSET_ALLOCATION_SIZE	src/rowset.c	70;"	d	file:
ROWSET_ALLOCATION_SIZE	tsrc/rowset.c	70;"	d	file:
ROWSET_ENTRY_PER_CHUNK	sqlite3.c	45701;"	d	file:
ROWSET_ENTRY_PER_CHUNK	src/rowset.c	75;"	d	file:
ROWSET_ENTRY_PER_CHUNK	tsrc/rowset.c	75;"	d	file:
ROWSET_NEXT	sqlite3.c	45750;"	d	file:
ROWSET_NEXT	src/rowset.c	124;"	d	file:
ROWSET_NEXT	tsrc/rowset.c	124;"	d	file:
ROWSET_SORTED	sqlite3.c	45749;"	d	file:
ROWSET_SORTED	src/rowset.c	123;"	d	file:
ROWSET_SORTED	tsrc/rowset.c	123;"	d	file:
RRCONFLICT	tool/lemon.c	/^  RRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:e_action	file:
RTREE_CACHE_SZ	ext/rtree/rtree.c	217;"	d	file:
RTREE_CACHE_SZ	sqlite3.c	160180;"	d	file:
RTREE_CACHE_SZ	tsrc/rtree.c	217;"	d	file:
RTREE_COORD_INT32	ext/rtree/rtree.c	155;"	d	file:
RTREE_COORD_INT32	sqlite3.c	160118;"	d	file:
RTREE_COORD_INT32	tsrc/rtree.c	155;"	d	file:
RTREE_COORD_REAL32	ext/rtree/rtree.c	154;"	d	file:
RTREE_COORD_REAL32	sqlite3.c	160117;"	d	file:
RTREE_COORD_REAL32	tsrc/rtree.c	154;"	d	file:
RTREE_DECODE_COORD	ext/rtree/rtree.c	923;"	d	file:
RTREE_DECODE_COORD	ext/rtree/rtree.c	931;"	d	file:
RTREE_DECODE_COORD	ext/rtree/rtree.c	937;"	d	file:
RTREE_DECODE_COORD	sqlite3.c	160886;"	d	file:
RTREE_DECODE_COORD	sqlite3.c	160894;"	d	file:
RTREE_DECODE_COORD	sqlite3.c	160900;"	d	file:
RTREE_DECODE_COORD	tsrc/rtree.c	923;"	d	file:
RTREE_DECODE_COORD	tsrc/rtree.c	931;"	d	file:
RTREE_DECODE_COORD	tsrc/rtree.c	937;"	d	file:
RTREE_DEFAULT_ROWEST	ext/rtree/rtree.c	108;"	d	file:
RTREE_DEFAULT_ROWEST	sqlite3.c	160071;"	d	file:
RTREE_DEFAULT_ROWEST	tsrc/rtree.c	108;"	d	file:
RTREE_EQ	ext/rtree/rtree.c	282;"	d	file:
RTREE_EQ	sqlite3.c	160245;"	d	file:
RTREE_EQ	tsrc/rtree.c	282;"	d	file:
RTREE_GE	ext/rtree/rtree.c	285;"	d	file:
RTREE_GE	sqlite3.c	160248;"	d	file:
RTREE_GE	tsrc/rtree.c	285;"	d	file:
RTREE_GEOMETRY_MAGIC	ext/rtree/rtree.c	342;"	d	file:
RTREE_GEOMETRY_MAGIC	sqlite3.c	160305;"	d	file:
RTREE_GEOMETRY_MAGIC	tsrc/rtree.c	342;"	d	file:
RTREE_GT	ext/rtree/rtree.c	286;"	d	file:
RTREE_GT	sqlite3.c	160249;"	d	file:
RTREE_GT	tsrc/rtree.c	286;"	d	file:
RTREE_LE	ext/rtree/rtree.c	283;"	d	file:
RTREE_LE	sqlite3.c	160246;"	d	file:
RTREE_LE	tsrc/rtree.c	283;"	d	file:
RTREE_LT	ext/rtree/rtree.c	284;"	d	file:
RTREE_LT	sqlite3.c	160247;"	d	file:
RTREE_LT	tsrc/rtree.c	284;"	d	file:
RTREE_MATCH	ext/rtree/rtree.c	287;"	d	file:
RTREE_MATCH	sqlite3.c	160250;"	d	file:
RTREE_MATCH	tsrc/rtree.c	287;"	d	file:
RTREE_MAXCELLS	ext/rtree/rtree.c	200;"	d	file:
RTREE_MAXCELLS	sqlite3.c	160163;"	d	file:
RTREE_MAXCELLS	tsrc/rtree.c	200;"	d	file:
RTREE_MAX_DEPTH	ext/rtree/rtree.c	209;"	d	file:
RTREE_MAX_DEPTH	sqlite3.c	160172;"	d	file:
RTREE_MAX_DEPTH	tsrc/rtree.c	209;"	d	file:
RTREE_MAX_DIMENSIONS	ext/rtree/rtree.c	93;"	d	file:
RTREE_MAX_DIMENSIONS	sqlite3.c	160056;"	d	file:
RTREE_MAX_DIMENSIONS	tsrc/rtree.c	93;"	d	file:
RTREE_MINCELLS	ext/rtree/rtree.c	198;"	d	file:
RTREE_MINCELLS	sqlite3.c	160161;"	d	file:
RTREE_MINCELLS	tsrc/rtree.c	198;"	d	file:
RTREE_MIN_ROWEST	ext/rtree/rtree.c	109;"	d	file:
RTREE_MIN_ROWEST	sqlite3.c	160072;"	d	file:
RTREE_MIN_ROWEST	tsrc/rtree.c	109;"	d	file:
RTREE_OF_CURSOR	ext/rtree/rtree.c	239;"	d	file:
RTREE_OF_CURSOR	sqlite3.c	160202;"	d	file:
RTREE_OF_CURSOR	tsrc/rtree.c	239;"	d	file:
RTREE_QUERY	ext/rtree/rtree.c	288;"	d	file:
RTREE_QUERY	sqlite3.c	160251;"	d	file:
RTREE_QUERY	tsrc/rtree.c	288;"	d	file:
RTREE_QUEUE_TRACE	ext/rtree/rtree.c	1263;"	d	file:
RTREE_QUEUE_TRACE	sqlite3.c	161226;"	d	file:
RTREE_QUEUE_TRACE	tsrc/rtree.c	1263;"	d	file:
RTREE_REINSERT	ext/rtree/rtree.c	199;"	d	file:
RTREE_REINSERT	sqlite3.c	160162;"	d	file:
RTREE_REINSERT	tsrc/rtree.c	199;"	d	file:
RTREE_ZERO	ext/rtree/rtree.c	165;"	d	file:
RTREE_ZERO	ext/rtree/rtree.c	169;"	d	file:
RTREE_ZERO	sqlite3.c	160128;"	d	file:
RTREE_ZERO	sqlite3.c	160132;"	d	file:
RTREE_ZERO	tsrc/rtree.c	165;"	d	file:
RTREE_ZERO	tsrc/rtree.c	169;"	d	file:
R_OK	src/test_demovfs.c	486;"	d	file:
Rb0	tool/dbhash.c	98;"	d	file:
RbuFrame	ext/rbu/sqlite3rbu.c	/^struct RbuFrame {$/;"	s	file:
RbuFrame	ext/rbu/sqlite3rbu.c	/^typedef struct RbuFrame RbuFrame;$/;"	t	typeref:struct:RbuFrame	file:
RbuFrame	sqlite3.c	/^struct RbuFrame {$/;"	s	file:
RbuFrame	sqlite3.c	/^typedef struct RbuFrame RbuFrame;$/;"	t	typeref:struct:RbuFrame	file:
RbuFrame	tsrc/sqlite3rbu.c	/^struct RbuFrame {$/;"	s	file:
RbuFrame	tsrc/sqlite3rbu.c	/^typedef struct RbuFrame RbuFrame;$/;"	t	typeref:struct:RbuFrame	file:
RbuObjIter	ext/rbu/sqlite3rbu.c	/^struct RbuObjIter {$/;"	s	file:
RbuObjIter	ext/rbu/sqlite3rbu.c	/^typedef struct RbuObjIter RbuObjIter;$/;"	t	typeref:struct:RbuObjIter	file:
RbuObjIter	sqlite3.c	/^struct RbuObjIter {$/;"	s	file:
RbuObjIter	sqlite3.c	/^typedef struct RbuObjIter RbuObjIter;$/;"	t	typeref:struct:RbuObjIter	file:
RbuObjIter	tsrc/sqlite3rbu.c	/^struct RbuObjIter {$/;"	s	file:
RbuObjIter	tsrc/sqlite3rbu.c	/^typedef struct RbuObjIter RbuObjIter;$/;"	t	typeref:struct:RbuObjIter	file:
RbuState	ext/rbu/sqlite3rbu.c	/^struct RbuState {$/;"	s	file:
RbuState	ext/rbu/sqlite3rbu.c	/^typedef struct RbuState RbuState;$/;"	t	typeref:struct:RbuState	file:
RbuState	sqlite3.c	/^struct RbuState {$/;"	s	file:
RbuState	sqlite3.c	/^typedef struct RbuState RbuState;$/;"	t	typeref:struct:RbuState	file:
RbuState	tsrc/sqlite3rbu.c	/^struct RbuState {$/;"	s	file:
RbuState	tsrc/sqlite3rbu.c	/^typedef struct RbuState RbuState;$/;"	t	typeref:struct:RbuState	file:
RbuUpdateStmt	ext/rbu/sqlite3rbu.c	/^struct RbuUpdateStmt {$/;"	s	file:
RbuUpdateStmt	ext/rbu/sqlite3rbu.c	/^typedef struct RbuUpdateStmt RbuUpdateStmt;$/;"	t	typeref:struct:RbuUpdateStmt	file:
RbuUpdateStmt	sqlite3.c	/^struct RbuUpdateStmt {$/;"	s	file:
RbuUpdateStmt	sqlite3.c	/^typedef struct RbuUpdateStmt RbuUpdateStmt;$/;"	t	typeref:struct:RbuUpdateStmt	file:
RbuUpdateStmt	tsrc/sqlite3rbu.c	/^struct RbuUpdateStmt {$/;"	s	file:
RbuUpdateStmt	tsrc/sqlite3rbu.c	/^typedef struct RbuUpdateStmt RbuUpdateStmt;$/;"	t	typeref:struct:RbuUpdateStmt	file:
ReCompiled	ext/misc/regexp.c	/^struct ReCompiled {$/;"	s	file:
ReCompiled	ext/misc/regexp.c	/^typedef struct ReCompiled ReCompiled;$/;"	t	typeref:struct:ReCompiled	file:
ReInput	ext/misc/regexp.c	/^struct ReInput {$/;"	s	file:
ReInput	ext/misc/regexp.c	/^typedef struct ReInput ReInput;$/;"	t	typeref:struct:ReInput	file:
ReStateNumber	ext/misc/regexp.c	/^typedef unsigned short ReStateNumber;$/;"	t	file:
ReStateSet	ext/misc/regexp.c	/^typedef struct ReStateSet {$/;"	s	file:
ReStateSet	ext/misc/regexp.c	/^} ReStateSet;$/;"	t	typeref:struct:ReStateSet	file:
ReadFromPipe	autoconf/tea/win/nmakehlp.c	/^ReadFromPipe($/;"	f	file:
RecordCompare	sqlite3.c	/^typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);$/;"	t	file:
RecordCompare	src/vdbe.h	/^typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);$/;"	t
RecordCompare	tsrc/vdbe.h	/^typedef int (*RecordCompare)(int,const void*,UnpackedRecord*);$/;"	t
Reinsert	ext/rtree/rtree.c	/^static int Reinsert($/;"	f	file:
Reinsert	sqlite3.c	/^static int Reinsert($/;"	f	file:
Reinsert	tsrc/rtree.c	/^static int Reinsert($/;"	f	file:
Replace	tool/Replace.cs	/^    internal static class Replace$/;"	c	namespace:Replace
Replace	tool/Replace.cs	/^namespace Replace$/;"	n
ReportHeader	tool/lemon.c	/^void ReportHeader(struct lemon *lemp)$/;"	f
ReportOutput	tool/lemon.c	/^void ReportOutput(struct lemon *lemp)$/;"	f
ReportTable	tool/lemon.c	/^void ReportTable($/;"	f
Reprint	tool/lemon.c	/^void Reprint(struct lemon *lemp)$/;"	f
ResortStates	tool/lemon.c	/^void ResortStates(struct lemon *lemp)$/;"	f
ResultSet	test/fuzz_common.tcl	/^proc ResultSet {{nRes 0} {c ""}} {$/;"	p
ReusableSpace	sqlite3.c	/^struct ReusableSpace {$/;"	s	file:
ReusableSpace	src/vdbeaux.c	/^struct ReusableSpace {$/;"	s	file:
ReusableSpace	tsrc/vdbeaux.c	/^struct ReusableSpace {$/;"	s	file:
Rl0	tool/dbhash.c	96;"	d	file:
RowSet	sqlite3.c	/^struct RowSet {$/;"	s	file:
RowSet	sqlite3.c	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet	file:
RowSet	src/rowset.c	/^struct RowSet {$/;"	s	file:
RowSet	src/sqliteInt.h	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet
RowSet	tsrc/rowset.c	/^struct RowSet {$/;"	s	file:
RowSet	tsrc/sqliteInt.h	/^typedef struct RowSet RowSet;$/;"	t	typeref:struct:RowSet
RowSetChunk	sqlite3.c	/^struct RowSetChunk {$/;"	s	file:
RowSetChunk	src/rowset.c	/^struct RowSetChunk {$/;"	s	file:
RowSetChunk	tsrc/rowset.c	/^struct RowSetChunk {$/;"	s	file:
RowSetEntry	sqlite3.c	/^struct RowSetEntry {            $/;"	s	file:
RowSetEntry	src/rowset.c	/^struct RowSetEntry {            $/;"	s	file:
RowSetEntry	tsrc/rowset.c	/^struct RowSetEntry {            $/;"	s	file:
Rtree	ext/rtree/rtree.c	/^struct Rtree {$/;"	s	file:
Rtree	ext/rtree/rtree.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
Rtree	sqlite3.c	/^struct Rtree {$/;"	s	file:
Rtree	sqlite3.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
Rtree	tsrc/rtree.c	/^struct Rtree {$/;"	s	file:
Rtree	tsrc/rtree.c	/^typedef struct Rtree Rtree;$/;"	t	typeref:struct:Rtree	file:
RtreeCell	ext/rtree/rtree.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	ext/rtree/rtree.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeCell	sqlite3.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	sqlite3.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeCell	tsrc/rtree.c	/^struct RtreeCell {$/;"	s	file:
RtreeCell	tsrc/rtree.c	/^typedef struct RtreeCell RtreeCell;$/;"	t	typeref:struct:RtreeCell	file:
RtreeConstraint	ext/rtree/rtree.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	ext/rtree/rtree.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeConstraint	sqlite3.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	sqlite3.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeConstraint	tsrc/rtree.c	/^struct RtreeConstraint {$/;"	s	file:
RtreeConstraint	tsrc/rtree.c	/^typedef struct RtreeConstraint RtreeConstraint;$/;"	t	typeref:struct:RtreeConstraint	file:
RtreeCoord	ext/rtree/rtree.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	ext/rtree/rtree.c	/^union RtreeCoord {$/;"	u	file:
RtreeCoord	sqlite3.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	sqlite3.c	/^union RtreeCoord {$/;"	u	file:
RtreeCoord	tsrc/rtree.c	/^typedef union RtreeCoord RtreeCoord;$/;"	t	typeref:union:RtreeCoord	file:
RtreeCoord	tsrc/rtree.c	/^union RtreeCoord {$/;"	u	file:
RtreeCursor	ext/rtree/rtree.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	ext/rtree/rtree.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeCursor	sqlite3.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	sqlite3.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeCursor	tsrc/rtree.c	/^struct RtreeCursor {$/;"	s	file:
RtreeCursor	tsrc/rtree.c	/^typedef struct RtreeCursor RtreeCursor;$/;"	t	typeref:struct:RtreeCursor	file:
RtreeDValue	ext/rtree/rtree.c	/^  typedef double RtreeDValue;              \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	ext/rtree/rtree.c	/^  typedef sqlite3_int64 RtreeDValue;       \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	sqlite3.c	/^  typedef double RtreeDValue;              \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	sqlite3.c	/^  typedef sqlite3_int64 RtreeDValue;       \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	tsrc/rtree.c	/^  typedef double RtreeDValue;              \/* High accuracy coordinate *\/$/;"	t	file:
RtreeDValue	tsrc/rtree.c	/^  typedef sqlite3_int64 RtreeDValue;       \/* High accuracy coordinate *\/$/;"	t	file:
RtreeGeomCallback	ext/rtree/rtree.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	ext/rtree/rtree.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeGeomCallback	sqlite3.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	sqlite3.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeGeomCallback	tsrc/rtree.c	/^struct RtreeGeomCallback {$/;"	s	file:
RtreeGeomCallback	tsrc/rtree.c	/^typedef struct RtreeGeomCallback RtreeGeomCallback;$/;"	t	typeref:struct:RtreeGeomCallback	file:
RtreeMatchArg	ext/rtree/rtree.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	ext/rtree/rtree.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeMatchArg	sqlite3.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	sqlite3.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeMatchArg	tsrc/rtree.c	/^struct RtreeMatchArg {$/;"	s	file:
RtreeMatchArg	tsrc/rtree.c	/^typedef struct RtreeMatchArg RtreeMatchArg;$/;"	t	typeref:struct:RtreeMatchArg	file:
RtreeNode	ext/rtree/rtree.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	ext/rtree/rtree.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RtreeNode	sqlite3.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	sqlite3.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RtreeNode	tsrc/rtree.c	/^struct RtreeNode {$/;"	s	file:
RtreeNode	tsrc/rtree.c	/^typedef struct RtreeNode RtreeNode;$/;"	t	typeref:struct:RtreeNode	file:
RtreeSearchPoint	ext/rtree/rtree.c	/^struct RtreeSearchPoint {$/;"	s	file:
RtreeSearchPoint	ext/rtree/rtree.c	/^typedef struct RtreeSearchPoint RtreeSearchPoint;$/;"	t	typeref:struct:RtreeSearchPoint	file:
RtreeSearchPoint	sqlite3.c	/^struct RtreeSearchPoint {$/;"	s	file:
RtreeSearchPoint	sqlite3.c	/^typedef struct RtreeSearchPoint RtreeSearchPoint;$/;"	t	typeref:struct:RtreeSearchPoint	file:
RtreeSearchPoint	tsrc/rtree.c	/^struct RtreeSearchPoint {$/;"	s	file:
RtreeSearchPoint	tsrc/rtree.c	/^typedef struct RtreeSearchPoint RtreeSearchPoint;$/;"	t	typeref:struct:RtreeSearchPoint	file:
RtreeValue	ext/rtree/rtree.c	/^  typedef float RtreeValue;                \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	ext/rtree/rtree.c	/^  typedef int RtreeValue;                  \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	sqlite3.c	/^  typedef float RtreeValue;                \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	sqlite3.c	/^  typedef int RtreeValue;                  \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	tsrc/rtree.c	/^  typedef float RtreeValue;                \/* Low accuracy coordinate *\/$/;"	t	file:
RtreeValue	tsrc/rtree.c	/^  typedef int RtreeValue;                  \/* Low accuracy coordinate *\/$/;"	t	file:
RulePrint	tool/lemon.c	/^void RulePrint(FILE *fp, struct rule *rp, int iCursor){$/;"	f
Rule_merge	tool/lemon.c	/^static struct rule *Rule_merge(struct rule *pA, struct rule *pB){$/;"	f	file:
Rule_sort	tool/lemon.c	/^static struct rule *Rule_sort(struct rule *rp){$/;"	f	file:
SAVEPOINT_BEGIN	sqlite3.c	14236;"	d	file:
SAVEPOINT_BEGIN	src/sqliteInt.h	1637;"	d
SAVEPOINT_BEGIN	tsrc/sqliteInt.h	1637;"	d
SAVEPOINT_RELEASE	sqlite3.c	14237;"	d	file:
SAVEPOINT_RELEASE	src/sqliteInt.h	1638;"	d
SAVEPOINT_RELEASE	tsrc/sqliteInt.h	1638;"	d
SAVEPOINT_ROLLBACK	sqlite3.c	14238;"	d	file:
SAVEPOINT_ROLLBACK	src/sqliteInt.h	1639;"	d
SAVEPOINT_ROLLBACK	tsrc/sqliteInt.h	1639;"	d
SAVE_SZ	sqlite3.c	97650;"	d	file:
SAVE_SZ	src/build.c	263;"	d	file:
SAVE_SZ	tsrc/build.c	263;"	d	file:
SCHEMA	src/test_schema.c	21;"	d	file:
SCHEMA_ENC	sqlite3.c	13992;"	d	file:
SCHEMA_ENC	src/sqliteInt.h	1393;"	d
SCHEMA_ENC	tsrc/sqliteInt.h	1393;"	d
SCHEMA_TABLE	sqlite3.c	11864;"	d	file:
SCHEMA_TABLE	src/sqliteInt.h	930;"	d
SCHEMA_TABLE	tsrc/sqliteInt.h	930;"	d
SCRAMBLE	ext/fts2/fts2.c	398;"	d	file:
SCRAMBLE	ext/fts2/fts2.c	400;"	d	file:
SCRAMBLE	tsrc/fts2.c	398;"	d	file:
SCRAMBLE	tsrc/fts2.c	400;"	d	file:
SCRIPT_ARABIC	ext/misc/spellfix.c	1742;"	d	file:
SCRIPT_CYRILLIC	ext/misc/spellfix.c	1739;"	d	file:
SCRIPT_GREEK	ext/misc/spellfix.c	1740;"	d	file:
SCRIPT_HEBREW	ext/misc/spellfix.c	1741;"	d	file:
SCRIPT_LATIN	ext/misc/spellfix.c	1738;"	d	file:
SEGDIR_COUNT_STMT	ext/fts2/fts2.c	/^  SEGDIR_COUNT_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_COUNT_STMT	tsrc/fts2.c	/^  SEGDIR_COUNT_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_DELETE_ALL_STMT	ext/fts2/fts2.c	/^  SEGDIR_DELETE_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_DELETE_ALL_STMT	tsrc/fts2.c	/^  SEGDIR_DELETE_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_DELETE_STMT	ext/fts2/fts2.c	/^  SEGDIR_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_DELETE_STMT	tsrc/fts2.c	/^  SEGDIR_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_MAX_INDEX_STMT	ext/fts2/fts2.c	/^  SEGDIR_MAX_INDEX_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_MAX_INDEX_STMT	tsrc/fts2.c	/^  SEGDIR_MAX_INDEX_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_ALL_STMT	ext/fts2/fts2.c	/^  SEGDIR_SELECT_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_ALL_STMT	tsrc/fts2.c	/^  SEGDIR_SELECT_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_LEVEL_STMT	ext/fts2/fts2.c	/^  SEGDIR_SELECT_LEVEL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_LEVEL_STMT	tsrc/fts2.c	/^  SEGDIR_SELECT_LEVEL_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_SEGMENT_STMT	ext/fts2/fts2.c	/^  SEGDIR_SELECT_SEGMENT_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SELECT_SEGMENT_STMT	tsrc/fts2.c	/^  SEGDIR_SELECT_SEGMENT_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SET_STMT	ext/fts2/fts2.c	/^  SEGDIR_SET_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SET_STMT	tsrc/fts2.c	/^  SEGDIR_SET_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SPAN_STMT	ext/fts2/fts2.c	/^  SEGDIR_SPAN_STMT,$/;"	e	enum:fulltext_statement	file:
SEGDIR_SPAN_STMT	tsrc/fts2.c	/^  SEGDIR_SPAN_STMT,$/;"	e	enum:fulltext_statement	file:
SEL	test/threadtest3.c	38;"	d	file:
SELECTTRACE	sqlite3.c	113510;"	d	file:
SELECTTRACE	sqlite3.c	113516;"	d	file:
SELECTTRACE	src/select.c	22;"	d	file:
SELECTTRACE	src/select.c	28;"	d	file:
SELECTTRACE	tsrc/select.c	22;"	d	file:
SELECTTRACE	tsrc/select.c	28;"	d	file:
SELECTTRACE_ENABLED	sqlite3.c	11827;"	d	file:
SELECTTRACE_ENABLED	sqlite3.c	11829;"	d	file:
SELECTTRACE_ENABLED	src/sqliteInt.h	893;"	d
SELECTTRACE_ENABLED	src/sqliteInt.h	895;"	d
SELECTTRACE_ENABLED	tsrc/sqliteInt.h	893;"	d
SELECTTRACE_ENABLED	tsrc/sqliteInt.h	895;"	d
SEP_Column	shell.c	692;"	d	file:
SEP_Column	src/shell.c	692;"	d	file:
SEP_Column	tsrc/shell.c	692;"	d	file:
SEP_Comma	shell.c	696;"	d	file:
SEP_Comma	src/shell.c	696;"	d	file:
SEP_Comma	tsrc/shell.c	696;"	d	file:
SEP_CrLf	shell.c	697;"	d	file:
SEP_CrLf	src/shell.c	697;"	d	file:
SEP_CrLf	tsrc/shell.c	697;"	d	file:
SEP_Record	shell.c	699;"	d	file:
SEP_Record	src/shell.c	699;"	d	file:
SEP_Record	tsrc/shell.c	699;"	d	file:
SEP_Row	shell.c	693;"	d	file:
SEP_Row	src/shell.c	693;"	d	file:
SEP_Row	tsrc/shell.c	693;"	d	file:
SEP_Space	shell.c	695;"	d	file:
SEP_Space	src/shell.c	695;"	d	file:
SEP_Space	tsrc/shell.c	695;"	d	file:
SEP_Tab	shell.c	694;"	d	file:
SEP_Tab	src/shell.c	694;"	d	file:
SEP_Tab	tsrc/shell.c	694;"	d	file:
SEP_Unit	shell.c	698;"	d	file:
SEP_Unit	src/shell.c	698;"	d	file:
SEP_Unit	tsrc/shell.c	698;"	d	file:
SERIES_COLUMN_START	ext/misc/series.c	119;"	d	file:
SERIES_COLUMN_STEP	ext/misc/series.c	121;"	d	file:
SERIES_COLUMN_STOP	ext/misc/series.c	120;"	d	file:
SERIES_COLUMN_VALUE	ext/misc/series.c	118;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	ext/session/sqlite3session.c	22;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	ext/session/sqlite3session.c	24;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	sqlite3.c	170366;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	sqlite3.c	170368;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	tsrc/sqlite3session.c	22;"	d	file:
SESSIONS_STRM_CHUNK_SIZE	tsrc/sqlite3session.c	24;"	d	file:
SESSION_STREAM_TCL_VAR	ext/session/test_session.c	32;"	d	file:
SESSION_UINT32	ext/session/sqlite3session.c	282;"	d	file:
SESSION_UINT32	sqlite3.c	170626;"	d	file:
SESSION_UINT32	tsrc/sqlite3session.c	282;"	d	file:
SETBIT	sqlite3.c	43379;"	d	file:
SETBIT	src/bitvec.c	303;"	d	file:
SETBIT	tsrc/bitvec.c	303;"	d	file:
SET_FULLSYNC	sqlite3.c	13403;"	d	file:
SET_FULLSYNC	src/os.h	33;"	d
SET_FULLSYNC	tsrc/os.h	33;"	d
SF_Aggregate	sqlite3.c	15276;"	d	file:
SF_Aggregate	src/sqliteInt.h	2677;"	d
SF_Aggregate	tsrc/sqliteInt.h	2677;"	d
SF_All	sqlite3.c	15274;"	d	file:
SF_All	src/sqliteInt.h	2675;"	d
SF_All	tsrc/sqliteInt.h	2675;"	d
SF_Compound	sqlite3.c	15281;"	d	file:
SF_Compound	src/sqliteInt.h	2682;"	d
SF_Compound	tsrc/sqliteInt.h	2682;"	d
SF_Converted	sqlite3.c	15289;"	d	file:
SF_Converted	src/sqliteInt.h	2690;"	d
SF_Converted	tsrc/sqliteInt.h	2690;"	d
SF_Distinct	sqlite3.c	15273;"	d	file:
SF_Distinct	src/sqliteInt.h	2674;"	d
SF_Distinct	tsrc/sqliteInt.h	2674;"	d
SF_Expanded	sqlite3.c	15279;"	d	file:
SF_Expanded	src/sqliteInt.h	2680;"	d
SF_Expanded	tsrc/sqliteInt.h	2680;"	d
SF_FixedLimit	sqlite3.c	15287;"	d	file:
SF_FixedLimit	src/sqliteInt.h	2688;"	d
SF_FixedLimit	tsrc/sqliteInt.h	2688;"	d
SF_HasAgg	sqlite3.c	15277;"	d	file:
SF_HasAgg	src/sqliteInt.h	2678;"	d
SF_HasAgg	tsrc/sqliteInt.h	2678;"	d
SF_HasTypeInfo	sqlite3.c	15280;"	d	file:
SF_HasTypeInfo	src/sqliteInt.h	2681;"	d
SF_HasTypeInfo	tsrc/sqliteInt.h	2681;"	d
SF_IncludeHidden	sqlite3.c	15290;"	d	file:
SF_IncludeHidden	src/sqliteInt.h	2691;"	d
SF_IncludeHidden	tsrc/sqliteInt.h	2691;"	d
SF_MaybeConvert	sqlite3.c	15288;"	d	file:
SF_MaybeConvert	src/sqliteInt.h	2689;"	d
SF_MaybeConvert	tsrc/sqliteInt.h	2689;"	d
SF_MinMaxAgg	sqlite3.c	15285;"	d	file:
SF_MinMaxAgg	src/sqliteInt.h	2686;"	d
SF_MinMaxAgg	tsrc/sqliteInt.h	2686;"	d
SF_MultiValue	sqlite3.c	15283;"	d	file:
SF_MultiValue	src/sqliteInt.h	2684;"	d
SF_MultiValue	tsrc/sqliteInt.h	2684;"	d
SF_NestedFrom	sqlite3.c	15284;"	d	file:
SF_NestedFrom	src/sqliteInt.h	2685;"	d
SF_NestedFrom	tsrc/sqliteInt.h	2685;"	d
SF_Recursive	sqlite3.c	15286;"	d	file:
SF_Recursive	src/sqliteInt.h	2687;"	d
SF_Recursive	tsrc/sqliteInt.h	2687;"	d
SF_Resolved	sqlite3.c	15275;"	d	file:
SF_Resolved	src/sqliteInt.h	2676;"	d
SF_Resolved	tsrc/sqliteInt.h	2676;"	d
SF_UsesEphemeral	sqlite3.c	15278;"	d	file:
SF_UsesEphemeral	src/sqliteInt.h	2679;"	d
SF_UsesEphemeral	tsrc/sqliteInt.h	2679;"	d
SF_Values	sqlite3.c	15282;"	d	file:
SF_Values	src/sqliteInt.h	2683;"	d
SF_Values	tsrc/sqliteInt.h	2683;"	d
SHA1Context	tool/dbhash.c	/^struct SHA1Context {$/;"	s	file:
SHA1Context	tool/dbhash.c	/^typedef struct SHA1Context SHA1Context;$/;"	t	typeref:struct:SHA1Context	file:
SHA1Transform	tool/dbhash.c	/^void SHA1Transform(unsigned int state[5], const unsigned char buffer[64]){$/;"	f
SHARED_FIRST	sqlite3.c	13522;"	d	file:
SHARED_FIRST	src/os.h	152;"	d
SHARED_FIRST	tool/getlock.c	55;"	d	file:
SHARED_FIRST	tsrc/os.h	152;"	d
SHARED_LOCK	sqlite3.c	13456;"	d	file:
SHARED_LOCK	src/os.h	86;"	d
SHARED_LOCK	tsrc/os.h	86;"	d
SHARED_SIZE	sqlite3.c	13523;"	d	file:
SHARED_SIZE	src/os.h	153;"	d
SHARED_SIZE	tool/getlock.c	56;"	d	file:
SHARED_SIZE	tsrc/os.h	153;"	d
SHA_ROT	tool/dbhash.c	71;"	d	file:
SHA_ROT	tool/dbhash.c	78;"	d	file:
SHELL_OPT	Makefile	/^SHELL_OPT = -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS4$/;"	m
SHELL_OPT	main.mk	/^SHELL_OPT = -DSQLITE_ENABLE_JSON1 -DSQLITE_ENABLE_FTS4 -DSQLITE_ENABLE_FTS5$/;"	m
SHELL_USE_LOCAL_GETLINE	shell.c	97;"	d	file:
SHELL_USE_LOCAL_GETLINE	src/shell.c	97;"	d	file:
SHELL_USE_LOCAL_GETLINE	tsrc/shell.c	97;"	d	file:
SHFLG_Lookaside	shell.c	657;"	d	file:
SHFLG_Lookaside	src/shell.c	657;"	d	file:
SHFLG_Lookaside	tsrc/shell.c	657;"	d	file:
SHFLG_Pagecache	shell.c	656;"	d	file:
SHFLG_Pagecache	src/shell.c	656;"	d	file:
SHFLG_Pagecache	tsrc/shell.c	656;"	d	file:
SHFLG_Scratch	shell.c	655;"	d	file:
SHFLG_Scratch	src/shell.c	655;"	d	file:
SHFLG_Scratch	tsrc/shell.c	655;"	d	file:
SHIFT	tool/lemon.c	/^  SHIFT,$/;"	e	enum:e_action	file:
SHIFTREDUCE	tool/lemon.c	/^  SHIFTREDUCE              \/* Shift first, then reduce *\/$/;"	e	enum:e_action	file:
SHLIB_SUFFIX	Makefile	/^SHLIB_SUFFIX = $/;"	m
SHM_BASE	tool/getlock.c	61;"	d	file:
SHM_CHECKPOINT	tool/getlock.c	63;"	d	file:
SHM_READ_FIRST	tool/getlock.c	65;"	d	file:
SHM_READ_SIZE	tool/getlock.c	66;"	d	file:
SHM_RECOVER	tool/getlock.c	64;"	d	file:
SHM_WRITE	tool/getlock.c	62;"	d	file:
SH_RESOLVED	tool/lemon.c	/^  SH_RESOLVED,             \/* Was a shift.  Precedence resolved conflict *\/$/;"	e	enum:e_action	file:
SLConn	src/test_sqllog.c	/^struct SLConn {$/;"	s	file:
SLGlobal	src/test_sqllog.c	/^static struct SLGlobal {$/;"	s	file:
SLOT_2_0	ext/fts5/fts5_varint.c	95;"	d	file:
SLOT_2_0	fts5.c	19845;"	d	file:
SLOT_2_0	sqlite3.c	196972;"	d	file:
SLOT_2_0	sqlite3.c	28029;"	d	file:
SLOT_2_0	src/util.c	826;"	d	file:
SLOT_2_0	tsrc/fts5.c	19845;"	d	file:
SLOT_2_0	tsrc/util.c	826;"	d	file:
SLOT_4_2_0	ext/fts5/fts5_varint.c	96;"	d	file:
SLOT_4_2_0	fts5.c	19846;"	d	file:
SLOT_4_2_0	sqlite3.c	196973;"	d	file:
SLOT_4_2_0	sqlite3.c	28030;"	d	file:
SLOT_4_2_0	src/util.c	827;"	d	file:
SLOT_4_2_0	tsrc/fts5.c	19846;"	d	file:
SLOT_4_2_0	tsrc/util.c	827;"	d	file:
SMALLEST_INT64	ext/fts3/fts3.c	3124;"	d	file:
SMALLEST_INT64	ext/fts5/fts5Int.h	46;"	d
SMALLEST_INT64	ext/misc/json1.c	42;"	d	file:
SMALLEST_INT64	ext/misc/totype.c	64;"	d	file:
SMALLEST_INT64	fts5.c	639;"	d	file:
SMALLEST_INT64	sqlite3.c	11738;"	d	file:
SMALLEST_INT64	sqlite3.c	144877;"	d	file:
SMALLEST_INT64	sqlite3.c	175030;"	d	file:
SMALLEST_INT64	sqlite3.c	177841;"	d	file:
SMALLEST_INT64	src/sqliteInt.h	804;"	d
SMALLEST_INT64	tsrc/fts3.c	3124;"	d	file:
SMALLEST_INT64	tsrc/fts5.c	639;"	d	file:
SMALLEST_INT64	tsrc/json1.c	42;"	d	file:
SMALLEST_INT64	tsrc/sqliteInt.h	804;"	d
SNIPPET_DESIRED	ext/fts1/fts1.c	2404;"	d	file:
SNIPPET_DESIRED	ext/fts2/fts2.c	3253;"	d	file:
SNIPPET_DESIRED	tsrc/fts1.c	2404;"	d	file:
SNIPPET_DESIRED	tsrc/fts2.c	3253;"	d	file:
SNIPPET_IGNORE	ext/fts1/fts1.c	2403;"	d	file:
SNIPPET_IGNORE	ext/fts2/fts2.c	3252;"	d	file:
SNIPPET_IGNORE	tsrc/fts1.c	2403;"	d	file:
SNIPPET_IGNORE	tsrc/fts2.c	3252;"	d	file:
SORTER_MAX_MERGE_COUNT	sqlite3.c	85073;"	d	file:
SORTER_MAX_MERGE_COUNT	src/vdbesort.c	460;"	d	file:
SORTER_MAX_MERGE_COUNT	tsrc/vdbesort.c	460;"	d	file:
SORTER_TYPE_INTEGER	sqlite3.c	84951;"	d	file:
SORTER_TYPE_INTEGER	src/vdbesort.c	338;"	d	file:
SORTER_TYPE_INTEGER	tsrc/vdbesort.c	338;"	d	file:
SORTER_TYPE_TEXT	sqlite3.c	84952;"	d	file:
SORTER_TYPE_TEXT	src/vdbesort.c	339;"	d	file:
SORTER_TYPE_TEXT	tsrc/vdbesort.c	339;"	d	file:
SORTFLAG_UseSorter	sqlite3.c	113549;"	d	file:
SORTFLAG_UseSorter	src/select.c	61;"	d	file:
SORTFLAG_UseSorter	tsrc/select.c	61;"	d	file:
SPELLFIX_COL_COMMAND	ext/misc/spellfix.c	1968;"	d	file:
SPELLFIX_COL_DISTANCE	ext/misc/spellfix.c	1959;"	d	file:
SPELLFIX_COL_LANGID	ext/misc/spellfix.c	1960;"	d	file:
SPELLFIX_COL_MATCHLEN	ext/misc/spellfix.c	1962;"	d	file:
SPELLFIX_COL_PHONEHASH	ext/misc/spellfix.c	1963;"	d	file:
SPELLFIX_COL_RANK	ext/misc/spellfix.c	1958;"	d	file:
SPELLFIX_COL_SCOPE	ext/misc/spellfix.c	1965;"	d	file:
SPELLFIX_COL_SCORE	ext/misc/spellfix.c	1961;"	d	file:
SPELLFIX_COL_SOUNDSLIKE	ext/misc/spellfix.c	1967;"	d	file:
SPELLFIX_COL_SRCHCNT	ext/misc/spellfix.c	1966;"	d	file:
SPELLFIX_COL_TOP	ext/misc/spellfix.c	1964;"	d	file:
SPELLFIX_COL_WORD	ext/misc/spellfix.c	1957;"	d	file:
SPELLFIX_IDXNUM_DIST	ext/misc/spellfix.c	2085;"	d	file:
SPELLFIX_IDXNUM_DISTLE	ext/misc/spellfix.c	2083;"	d	file:
SPELLFIX_IDXNUM_DISTLT	ext/misc/spellfix.c	2082;"	d	file:
SPELLFIX_IDXNUM_LANGID	ext/misc/spellfix.c	2079;"	d	file:
SPELLFIX_IDXNUM_MATCH	ext/misc/spellfix.c	2078;"	d	file:
SPELLFIX_IDXNUM_ROWID	ext/misc/spellfix.c	2084;"	d	file:
SPELLFIX_IDXNUM_SCOPE	ext/misc/spellfix.c	2081;"	d	file:
SPELLFIX_IDXNUM_TOP	ext/misc/spellfix.c	2080;"	d	file:
SPELLFIX_MX_HASH	ext/misc/spellfix.c	1784;"	d	file:
SPELLFIX_MX_RUN	ext/misc/spellfix.c	1787;"	d	file:
SPILLFLAG_NOSYNC	sqlite3.c	46739;"	d	file:
SPILLFLAG_NOSYNC	src/pager.c	462;"	d	file:
SPILLFLAG_NOSYNC	tsrc/pager.c	462;"	d	file:
SPILLFLAG_OFF	sqlite3.c	46737;"	d	file:
SPILLFLAG_OFF	src/pager.c	460;"	d	file:
SPILLFLAG_OFF	tsrc/pager.c	460;"	d	file:
SPILLFLAG_ROLLBACK	sqlite3.c	46738;"	d	file:
SPILLFLAG_ROLLBACK	src/pager.c	461;"	d	file:
SPILLFLAG_ROLLBACK	tsrc/pager.c	461;"	d	file:
SQLITE3EXT_H	sqlite3.c	108845;"	d	file:
SQLITE3EXT_H	sqlite3ext.h	19;"	d
SQLITE3EXT_H	src/sqlite3ext.h	19;"	d
SQLITE3EXT_H	tsrc/sqlite3ext.h	19;"	d
SQLITE3_H	sqlite3.c	294;"	d	file:
SQLITE3_H	sqlite3.h	34;"	d
SQLITE3_H	tsrc/sqlite3.h	34;"	d
SQLITE3_MUTEX_INITIALIZER	sqlite3.c	22802;"	d	file:
SQLITE3_MUTEX_INITIALIZER	sqlite3.c	22804;"	d	file:
SQLITE3_MUTEX_INITIALIZER	sqlite3.c	22806;"	d	file:
SQLITE3_MUTEX_INITIALIZER	sqlite3.c	23484;"	d	file:
SQLITE3_MUTEX_INITIALIZER	sqlite3.c	23487;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/mutex_unix.c	53;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/mutex_unix.c	55;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/mutex_unix.c	57;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/mutex_w32.c	55;"	d	file:
SQLITE3_MUTEX_INITIALIZER	src/mutex_w32.c	58;"	d	file:
SQLITE3_MUTEX_INITIALIZER	tsrc/mutex_unix.c	53;"	d	file:
SQLITE3_MUTEX_INITIALIZER	tsrc/mutex_unix.c	55;"	d	file:
SQLITE3_MUTEX_INITIALIZER	tsrc/mutex_unix.c	57;"	d	file:
SQLITE3_MUTEX_INITIALIZER	tsrc/mutex_w32.c	55;"	d	file:
SQLITE3_MUTEX_INITIALIZER	tsrc/mutex_w32.c	58;"	d	file:
SQLITE3_TEXT	sqlite3.c	4376;"	d	file:
SQLITE3_TEXT	sqlite3.h	4116;"	d
SQLITE3_TEXT	tsrc/sqlite3.h	4116;"	d
SQLITEASYNC_DELAY	ext/async/sqlite3async.h	206;"	d
SQLITEASYNC_GET_DELAY	ext/async/sqlite3async.h	207;"	d
SQLITEASYNC_GET_HALT	ext/async/sqlite3async.h	205;"	d
SQLITEASYNC_GET_LOCKFILES	ext/async/sqlite3async.h	209;"	d
SQLITEASYNC_HALT	ext/async/sqlite3async.h	204;"	d
SQLITEASYNC_HALT_IDLE	ext/async/sqlite3async.h	217;"	d
SQLITEASYNC_HALT_NEVER	ext/async/sqlite3async.h	215;"	d
SQLITEASYNC_HALT_NOW	ext/async/sqlite3async.h	216;"	d
SQLITEASYNC_LOCKFILES	ext/async/sqlite3async.h	208;"	d
SQLITEASYNC_VFSNAME	ext/async/sqlite3async.h	12;"	d
SQLITEINT_H	sqlite3.c	41;"	d	file:
SQLITEINT_H	src/sqliteInt.h	16;"	d
SQLITEINT_H	tsrc/sqliteInt.h	16;"	d
SQLITE_ABORT	sqlite3.c	678;"	d	file:
SQLITE_ABORT	sqlite3.h	418;"	d
SQLITE_ABORT	tsrc/sqlite3.h	418;"	d
SQLITE_ABORT_ROLLBACK	sqlite3.c	763;"	d	file:
SQLITE_ABORT_ROLLBACK	sqlite3.h	503;"	d
SQLITE_ABORT_ROLLBACK	tsrc/sqlite3.h	503;"	d
SQLITE_ACCESS_EXISTS	sqlite3.c	1536;"	d	file:
SQLITE_ACCESS_EXISTS	sqlite3.h	1276;"	d
SQLITE_ACCESS_EXISTS	tsrc/sqlite3.h	1276;"	d
SQLITE_ACCESS_READ	sqlite3.c	1538;"	d	file:
SQLITE_ACCESS_READ	sqlite3.h	1278;"	d
SQLITE_ACCESS_READ	tsrc/sqlite3.h	1278;"	d
SQLITE_ACCESS_READWRITE	sqlite3.c	1537;"	d	file:
SQLITE_ACCESS_READWRITE	sqlite3.h	1277;"	d
SQLITE_ACCESS_READWRITE	tsrc/sqlite3.h	1277;"	d
SQLITE_AFF_BLOB	sqlite3.c	14312;"	d	file:
SQLITE_AFF_BLOB	src/sqliteInt.h	1713;"	d
SQLITE_AFF_BLOB	tsrc/sqliteInt.h	1713;"	d
SQLITE_AFF_INTEGER	sqlite3.c	14315;"	d	file:
SQLITE_AFF_INTEGER	src/sqliteInt.h	1716;"	d
SQLITE_AFF_INTEGER	tsrc/sqliteInt.h	1716;"	d
SQLITE_AFF_MASK	sqlite3.c	14324;"	d	file:
SQLITE_AFF_MASK	src/sqliteInt.h	1725;"	d
SQLITE_AFF_MASK	tsrc/sqliteInt.h	1725;"	d
SQLITE_AFF_NUMERIC	sqlite3.c	14314;"	d	file:
SQLITE_AFF_NUMERIC	src/sqliteInt.h	1715;"	d
SQLITE_AFF_NUMERIC	tsrc/sqliteInt.h	1715;"	d
SQLITE_AFF_REAL	sqlite3.c	14316;"	d	file:
SQLITE_AFF_REAL	src/sqliteInt.h	1717;"	d
SQLITE_AFF_REAL	tsrc/sqliteInt.h	1717;"	d
SQLITE_AFF_TEXT	sqlite3.c	14313;"	d	file:
SQLITE_AFF_TEXT	src/sqliteInt.h	1714;"	d
SQLITE_AFF_TEXT	tsrc/sqliteInt.h	1714;"	d
SQLITE_ALLOW_COVERING_INDEX_SCAN	sqlite3.c	17019;"	d	file:
SQLITE_ALLOW_COVERING_INDEX_SCAN	src/global.c	153;"	d	file:
SQLITE_ALLOW_COVERING_INDEX_SCAN	tsrc/global.c	153;"	d	file:
SQLITE_ALTER_TABLE	sqlite3.c	3023;"	d	file:
SQLITE_ALTER_TABLE	sqlite3.h	2763;"	d
SQLITE_ALTER_TABLE	tsrc/sqlite3.h	2763;"	d
SQLITE_AMALGAMATION	sqlite3.c	21;"	d	file:
SQLITE_ANALYZE	sqlite3.c	3025;"	d	file:
SQLITE_ANALYZE	sqlite3.h	2765;"	d
SQLITE_ANALYZE	tsrc/sqlite3.h	2765;"	d
SQLITE_ANY	sqlite3.c	4740;"	d	file:
SQLITE_ANY	sqlite3.h	4480;"	d
SQLITE_ANY	tsrc/sqlite3.h	4480;"	d
SQLITE_API	sqlite3.c	312;"	d	file:
SQLITE_API	sqlite3.h	52;"	d
SQLITE_API	tsrc/sqlite3.h	52;"	d
SQLITE_APICALL	sqlite3.c	318;"	d	file:
SQLITE_APICALL	sqlite3.h	58;"	d
SQLITE_APICALL	tsrc/sqlite3.h	58;"	d
SQLITE_ASCII	sqlite3.c	11559;"	d	file:
SQLITE_ASCII	src/sqliteInt.h	625;"	d
SQLITE_ASCII	tsrc/sqliteInt.h	625;"	d
SQLITE_ASYNC_TWO_FILEHANDLES	ext/async/sqlite3async.c	376;"	d	file:
SQLITE_ATTACH	sqlite3.c	3021;"	d	file:
SQLITE_ATTACH	sqlite3.h	2761;"	d
SQLITE_ATTACH	tsrc/sqlite3.h	2761;"	d
SQLITE_AUTH	sqlite3.c	697;"	d	file:
SQLITE_AUTH	sqlite3.h	437;"	d
SQLITE_AUTH	tsrc/sqlite3.h	437;"	d
SQLITE_AUTH_USER	sqlite3.c	777;"	d	file:
SQLITE_AUTH_USER	sqlite3.h	517;"	d
SQLITE_AUTH_USER	tsrc/sqlite3.h	517;"	d
SQLITE_AllOpts	sqlite3.c	14057;"	d	file:
SQLITE_AllOpts	src/sqliteInt.h	1458;"	d
SQLITE_AllOpts	tsrc/sqliteInt.h	1458;"	d
SQLITE_AutoIndex	sqlite3.c	14026;"	d	file:
SQLITE_AutoIndex	src/sqliteInt.h	1427;"	d
SQLITE_AutoIndex	tsrc/sqliteInt.h	1427;"	d
SQLITE_BIGENDIAN	sqlite3.c	11709;"	d	file:
SQLITE_BIGENDIAN	sqlite3.c	11716;"	d	file:
SQLITE_BIGENDIAN	sqlite3.c	11727;"	d	file:
SQLITE_BIGENDIAN	src/sqliteInt.h	775;"	d
SQLITE_BIGENDIAN	src/sqliteInt.h	782;"	d
SQLITE_BIGENDIAN	src/sqliteInt.h	793;"	d
SQLITE_BIGENDIAN	tsrc/sqliteInt.h	775;"	d
SQLITE_BIGENDIAN	tsrc/sqliteInt.h	782;"	d
SQLITE_BIGENDIAN	tsrc/sqliteInt.h	793;"	d
SQLITE_BIG_DBL	sqlite3.c	11449;"	d	file:
SQLITE_BIG_DBL	sqlite3.c	11457;"	d	file:
SQLITE_BIG_DBL	src/sqliteInt.h	515;"	d
SQLITE_BIG_DBL	src/sqliteInt.h	523;"	d
SQLITE_BIG_DBL	tsrc/sqliteInt.h	515;"	d
SQLITE_BIG_DBL	tsrc/sqliteInt.h	523;"	d
SQLITE_BLOB	sqlite3.c	4369;"	d	file:
SQLITE_BLOB	sqlite3.h	4109;"	d
SQLITE_BLOB	tsrc/sqlite3.h	4109;"	d
SQLITE_BTREE_H	sqlite3.c	12006;"	d	file:
SQLITE_BTREE_H	src/btree.h	17;"	d
SQLITE_BTREE_H	tsrc/btree.h	17;"	d
SQLITE_BUSY	sqlite3.c	679;"	d	file:
SQLITE_BUSY	sqlite3.h	419;"	d
SQLITE_BUSY	tsrc/sqlite3.h	419;"	d
SQLITE_BUSY_RECOVERY	sqlite3.c	752;"	d	file:
SQLITE_BUSY_RECOVERY	sqlite3.h	492;"	d
SQLITE_BUSY_RECOVERY	tsrc/sqlite3.h	492;"	d
SQLITE_BUSY_SNAPSHOT	sqlite3.c	753;"	d	file:
SQLITE_BUSY_SNAPSHOT	sqlite3.h	493;"	d
SQLITE_BUSY_SNAPSHOT	tsrc/sqlite3.h	493;"	d
SQLITE_BYTEORDER	sqlite3.c	11708;"	d	file:
SQLITE_BYTEORDER	sqlite3.c	11715;"	d	file:
SQLITE_BYTEORDER	sqlite3.c	11726;"	d	file:
SQLITE_BYTEORDER	src/sqliteInt.h	774;"	d
SQLITE_BYTEORDER	src/sqliteInt.h	781;"	d
SQLITE_BYTEORDER	src/sqliteInt.h	792;"	d
SQLITE_BYTEORDER	tsrc/sqliteInt.h	774;"	d
SQLITE_BYTEORDER	tsrc/sqliteInt.h	781;"	d
SQLITE_BYTEORDER	tsrc/sqliteInt.h	792;"	d
SQLITE_CALLBACK	sqlite3.c	324;"	d	file:
SQLITE_CALLBACK	sqlite3.h	64;"	d
SQLITE_CALLBACK	tsrc/sqlite3.h	64;"	d
SQLITE_CANTOPEN	sqlite3.c	688;"	d	file:
SQLITE_CANTOPEN	sqlite3.h	428;"	d
SQLITE_CANTOPEN	tsrc/sqlite3.h	428;"	d
SQLITE_CANTOPEN_BKPT	sqlite3.c	15935;"	d	file:
SQLITE_CANTOPEN_BKPT	src/sqliteInt.h	3336;"	d
SQLITE_CANTOPEN_BKPT	tsrc/sqliteInt.h	3336;"	d
SQLITE_CANTOPEN_CONVPATH	sqlite3.c	757;"	d	file:
SQLITE_CANTOPEN_CONVPATH	sqlite3.h	497;"	d
SQLITE_CANTOPEN_CONVPATH	tsrc/sqlite3.h	497;"	d
SQLITE_CANTOPEN_FULLPATH	sqlite3.c	756;"	d	file:
SQLITE_CANTOPEN_FULLPATH	sqlite3.h	496;"	d
SQLITE_CANTOPEN_FULLPATH	tsrc/sqlite3.h	496;"	d
SQLITE_CANTOPEN_ISDIR	sqlite3.c	755;"	d	file:
SQLITE_CANTOPEN_ISDIR	sqlite3.h	495;"	d
SQLITE_CANTOPEN_ISDIR	tsrc/sqlite3.h	495;"	d
SQLITE_CANTOPEN_NOTEMPDIR	sqlite3.c	754;"	d	file:
SQLITE_CANTOPEN_NOTEMPDIR	sqlite3.h	494;"	d
SQLITE_CANTOPEN_NOTEMPDIR	tsrc/sqlite3.h	494;"	d
SQLITE_CDECL	sqlite3.c	315;"	d	file:
SQLITE_CDECL	sqlite3.h	55;"	d
SQLITE_CDECL	tsrc/sqlite3.h	55;"	d
SQLITE_CHANGESET_ABORT	ext/session/sqlite3session.h	1125;"	d
SQLITE_CHANGESET_ABORT	sqlite3.c	9867;"	d	file:
SQLITE_CHANGESET_ABORT	sqlite3.h	9607;"	d
SQLITE_CHANGESET_ABORT	sqlite3session.h	1125;"	d
SQLITE_CHANGESET_ABORT	tsrc/sqlite3.h	9607;"	d
SQLITE_CHANGESET_ABORT	tsrc/sqlite3session.h	1125;"	d
SQLITE_CHANGESET_CONFLICT	ext/session/sqlite3session.h	1088;"	d
SQLITE_CHANGESET_CONFLICT	sqlite3.c	9830;"	d	file:
SQLITE_CHANGESET_CONFLICT	sqlite3.h	9570;"	d
SQLITE_CHANGESET_CONFLICT	sqlite3session.h	1088;"	d
SQLITE_CHANGESET_CONFLICT	tsrc/sqlite3.h	9570;"	d
SQLITE_CHANGESET_CONFLICT	tsrc/sqlite3session.h	1088;"	d
SQLITE_CHANGESET_CONSTRAINT	ext/session/sqlite3session.h	1089;"	d
SQLITE_CHANGESET_CONSTRAINT	sqlite3.c	9831;"	d	file:
SQLITE_CHANGESET_CONSTRAINT	sqlite3.h	9571;"	d
SQLITE_CHANGESET_CONSTRAINT	sqlite3session.h	1089;"	d
SQLITE_CHANGESET_CONSTRAINT	tsrc/sqlite3.h	9571;"	d
SQLITE_CHANGESET_CONSTRAINT	tsrc/sqlite3session.h	1089;"	d
SQLITE_CHANGESET_DATA	ext/session/sqlite3session.h	1086;"	d
SQLITE_CHANGESET_DATA	sqlite3.c	9828;"	d	file:
SQLITE_CHANGESET_DATA	sqlite3.h	9568;"	d
SQLITE_CHANGESET_DATA	sqlite3session.h	1086;"	d
SQLITE_CHANGESET_DATA	tsrc/sqlite3.h	9568;"	d
SQLITE_CHANGESET_DATA	tsrc/sqlite3session.h	1086;"	d
SQLITE_CHANGESET_FOREIGN_KEY	ext/session/sqlite3session.h	1090;"	d
SQLITE_CHANGESET_FOREIGN_KEY	sqlite3.c	9832;"	d	file:
SQLITE_CHANGESET_FOREIGN_KEY	sqlite3.h	9572;"	d
SQLITE_CHANGESET_FOREIGN_KEY	sqlite3session.h	1090;"	d
SQLITE_CHANGESET_FOREIGN_KEY	tsrc/sqlite3.h	9572;"	d
SQLITE_CHANGESET_FOREIGN_KEY	tsrc/sqlite3session.h	1090;"	d
SQLITE_CHANGESET_NOTFOUND	ext/session/sqlite3session.h	1087;"	d
SQLITE_CHANGESET_NOTFOUND	sqlite3.c	9829;"	d	file:
SQLITE_CHANGESET_NOTFOUND	sqlite3.h	9569;"	d
SQLITE_CHANGESET_NOTFOUND	sqlite3session.h	1087;"	d
SQLITE_CHANGESET_NOTFOUND	tsrc/sqlite3.h	9569;"	d
SQLITE_CHANGESET_NOTFOUND	tsrc/sqlite3session.h	1087;"	d
SQLITE_CHANGESET_OMIT	ext/session/sqlite3session.h	1123;"	d
SQLITE_CHANGESET_OMIT	sqlite3.c	9865;"	d	file:
SQLITE_CHANGESET_OMIT	sqlite3.h	9605;"	d
SQLITE_CHANGESET_OMIT	sqlite3session.h	1123;"	d
SQLITE_CHANGESET_OMIT	tsrc/sqlite3.h	9605;"	d
SQLITE_CHANGESET_OMIT	tsrc/sqlite3session.h	1123;"	d
SQLITE_CHANGESET_REPLACE	ext/session/sqlite3session.h	1124;"	d
SQLITE_CHANGESET_REPLACE	sqlite3.c	9866;"	d	file:
SQLITE_CHANGESET_REPLACE	sqlite3.h	9606;"	d
SQLITE_CHANGESET_REPLACE	sqlite3session.h	1124;"	d
SQLITE_CHANGESET_REPLACE	tsrc/sqlite3.h	9606;"	d
SQLITE_CHANGESET_REPLACE	tsrc/sqlite3session.h	1124;"	d
SQLITE_CHECKPOINT_FULL	sqlite3.c	8145;"	d	file:
SQLITE_CHECKPOINT_FULL	sqlite3.h	7885;"	d
SQLITE_CHECKPOINT_FULL	tsrc/sqlite3.h	7885;"	d
SQLITE_CHECKPOINT_PASSIVE	sqlite3.c	8144;"	d	file:
SQLITE_CHECKPOINT_PASSIVE	sqlite3.h	7884;"	d
SQLITE_CHECKPOINT_PASSIVE	tsrc/sqlite3.h	7884;"	d
SQLITE_CHECKPOINT_RESTART	sqlite3.c	8146;"	d	file:
SQLITE_CHECKPOINT_RESTART	sqlite3.h	7886;"	d
SQLITE_CHECKPOINT_RESTART	tsrc/sqlite3.h	7886;"	d
SQLITE_CHECKPOINT_TRUNCATE	sqlite3.c	8147;"	d	file:
SQLITE_CHECKPOINT_TRUNCATE	sqlite3.h	7887;"	d
SQLITE_CHECKPOINT_TRUNCATE	tsrc/sqlite3.h	7887;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	sqlite3.c	2138;"	d	file:
SQLITE_CONFIG_COVERING_INDEX_SCAN	sqlite3.h	1878;"	d
SQLITE_CONFIG_COVERING_INDEX_SCAN	tsrc/sqlite3.h	1878;"	d
SQLITE_CONFIG_GETMALLOC	sqlite3.c	2123;"	d	file:
SQLITE_CONFIG_GETMALLOC	sqlite3.h	1863;"	d
SQLITE_CONFIG_GETMALLOC	tsrc/sqlite3.h	1863;"	d
SQLITE_CONFIG_GETMUTEX	sqlite3.c	2129;"	d	file:
SQLITE_CONFIG_GETMUTEX	sqlite3.h	1869;"	d
SQLITE_CONFIG_GETMUTEX	tsrc/sqlite3.h	1869;"	d
SQLITE_CONFIG_GETPCACHE	sqlite3.c	2133;"	d	file:
SQLITE_CONFIG_GETPCACHE	sqlite3.h	1873;"	d
SQLITE_CONFIG_GETPCACHE	tsrc/sqlite3.h	1873;"	d
SQLITE_CONFIG_GETPCACHE2	sqlite3.c	2137;"	d	file:
SQLITE_CONFIG_GETPCACHE2	sqlite3.h	1877;"	d
SQLITE_CONFIG_GETPCACHE2	tsrc/sqlite3.h	1877;"	d
SQLITE_CONFIG_HEAP	sqlite3.c	2126;"	d	file:
SQLITE_CONFIG_HEAP	sqlite3.h	1866;"	d
SQLITE_CONFIG_HEAP	tsrc/sqlite3.h	1866;"	d
SQLITE_CONFIG_LOG	sqlite3.c	2134;"	d	file:
SQLITE_CONFIG_LOG	sqlite3.h	1874;"	d
SQLITE_CONFIG_LOG	tsrc/sqlite3.h	1874;"	d
SQLITE_CONFIG_LOOKASIDE	sqlite3.c	2131;"	d	file:
SQLITE_CONFIG_LOOKASIDE	sqlite3.h	1871;"	d
SQLITE_CONFIG_LOOKASIDE	tsrc/sqlite3.h	1871;"	d
SQLITE_CONFIG_MALLOC	sqlite3.c	2122;"	d	file:
SQLITE_CONFIG_MALLOC	sqlite3.h	1862;"	d
SQLITE_CONFIG_MALLOC	tsrc/sqlite3.h	1862;"	d
SQLITE_CONFIG_MEMSTATUS	sqlite3.c	2127;"	d	file:
SQLITE_CONFIG_MEMSTATUS	sqlite3.h	1867;"	d
SQLITE_CONFIG_MEMSTATUS	tsrc/sqlite3.h	1867;"	d
SQLITE_CONFIG_MMAP_SIZE	sqlite3.c	2140;"	d	file:
SQLITE_CONFIG_MMAP_SIZE	sqlite3.h	1880;"	d
SQLITE_CONFIG_MMAP_SIZE	tsrc/sqlite3.h	1880;"	d
SQLITE_CONFIG_MULTITHREAD	sqlite3.c	2120;"	d	file:
SQLITE_CONFIG_MULTITHREAD	sqlite3.h	1860;"	d
SQLITE_CONFIG_MULTITHREAD	tsrc/sqlite3.h	1860;"	d
SQLITE_CONFIG_MUTEX	sqlite3.c	2128;"	d	file:
SQLITE_CONFIG_MUTEX	sqlite3.h	1868;"	d
SQLITE_CONFIG_MUTEX	tsrc/sqlite3.h	1868;"	d
SQLITE_CONFIG_PAGECACHE	sqlite3.c	2125;"	d	file:
SQLITE_CONFIG_PAGECACHE	sqlite3.h	1865;"	d
SQLITE_CONFIG_PAGECACHE	tsrc/sqlite3.h	1865;"	d
SQLITE_CONFIG_PCACHE	sqlite3.c	2132;"	d	file:
SQLITE_CONFIG_PCACHE	sqlite3.h	1872;"	d
SQLITE_CONFIG_PCACHE	tsrc/sqlite3.h	1872;"	d
SQLITE_CONFIG_PCACHE2	sqlite3.c	2136;"	d	file:
SQLITE_CONFIG_PCACHE2	sqlite3.h	1876;"	d
SQLITE_CONFIG_PCACHE2	tsrc/sqlite3.h	1876;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	sqlite3.c	2142;"	d	file:
SQLITE_CONFIG_PCACHE_HDRSZ	sqlite3.h	1882;"	d
SQLITE_CONFIG_PCACHE_HDRSZ	tsrc/sqlite3.h	1882;"	d
SQLITE_CONFIG_PMASZ	sqlite3.c	2143;"	d	file:
SQLITE_CONFIG_PMASZ	sqlite3.h	1883;"	d
SQLITE_CONFIG_PMASZ	tsrc/sqlite3.h	1883;"	d
SQLITE_CONFIG_SCRATCH	sqlite3.c	2124;"	d	file:
SQLITE_CONFIG_SCRATCH	sqlite3.h	1864;"	d
SQLITE_CONFIG_SCRATCH	tsrc/sqlite3.h	1864;"	d
SQLITE_CONFIG_SERIALIZED	sqlite3.c	2121;"	d	file:
SQLITE_CONFIG_SERIALIZED	sqlite3.h	1861;"	d
SQLITE_CONFIG_SERIALIZED	tsrc/sqlite3.h	1861;"	d
SQLITE_CONFIG_SINGLETHREAD	sqlite3.c	2119;"	d	file:
SQLITE_CONFIG_SINGLETHREAD	sqlite3.h	1859;"	d
SQLITE_CONFIG_SINGLETHREAD	tsrc/sqlite3.h	1859;"	d
SQLITE_CONFIG_SQLLOG	sqlite3.c	2139;"	d	file:
SQLITE_CONFIG_SQLLOG	sqlite3.h	1879;"	d
SQLITE_CONFIG_SQLLOG	tsrc/sqlite3.h	1879;"	d
SQLITE_CONFIG_STMTJRNL_SPILL	sqlite3.c	2144;"	d	file:
SQLITE_CONFIG_STMTJRNL_SPILL	sqlite3.h	1884;"	d
SQLITE_CONFIG_STMTJRNL_SPILL	tsrc/sqlite3.h	1884;"	d
SQLITE_CONFIG_URI	sqlite3.c	2135;"	d	file:
SQLITE_CONFIG_URI	sqlite3.h	1875;"	d
SQLITE_CONFIG_URI	tsrc/sqlite3.h	1875;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	sqlite3.c	2141;"	d	file:
SQLITE_CONFIG_WIN32_HEAPSIZE	sqlite3.h	1881;"	d
SQLITE_CONFIG_WIN32_HEAPSIZE	tsrc/sqlite3.h	1881;"	d
SQLITE_CONSTRAINT	sqlite3.c	693;"	d	file:
SQLITE_CONSTRAINT	sqlite3.h	433;"	d
SQLITE_CONSTRAINT	tsrc/sqlite3.h	433;"	d
SQLITE_CONSTRAINT_CHECK	sqlite3.c	764;"	d	file:
SQLITE_CONSTRAINT_CHECK	sqlite3.h	504;"	d
SQLITE_CONSTRAINT_CHECK	tsrc/sqlite3.h	504;"	d
SQLITE_CONSTRAINT_COMMITHOOK	sqlite3.c	765;"	d	file:
SQLITE_CONSTRAINT_COMMITHOOK	sqlite3.h	505;"	d
SQLITE_CONSTRAINT_COMMITHOOK	tsrc/sqlite3.h	505;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	sqlite3.c	766;"	d	file:
SQLITE_CONSTRAINT_FOREIGNKEY	sqlite3.h	506;"	d
SQLITE_CONSTRAINT_FOREIGNKEY	tsrc/sqlite3.h	506;"	d
SQLITE_CONSTRAINT_FUNCTION	sqlite3.c	767;"	d	file:
SQLITE_CONSTRAINT_FUNCTION	sqlite3.h	507;"	d
SQLITE_CONSTRAINT_FUNCTION	tsrc/sqlite3.h	507;"	d
SQLITE_CONSTRAINT_NOTNULL	sqlite3.c	768;"	d	file:
SQLITE_CONSTRAINT_NOTNULL	sqlite3.h	508;"	d
SQLITE_CONSTRAINT_NOTNULL	tsrc/sqlite3.h	508;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	sqlite3.c	769;"	d	file:
SQLITE_CONSTRAINT_PRIMARYKEY	sqlite3.h	509;"	d
SQLITE_CONSTRAINT_PRIMARYKEY	tsrc/sqlite3.h	509;"	d
SQLITE_CONSTRAINT_ROWID	sqlite3.c	773;"	d	file:
SQLITE_CONSTRAINT_ROWID	sqlite3.h	513;"	d
SQLITE_CONSTRAINT_ROWID	tsrc/sqlite3.h	513;"	d
SQLITE_CONSTRAINT_TRIGGER	sqlite3.c	770;"	d	file:
SQLITE_CONSTRAINT_TRIGGER	sqlite3.h	510;"	d
SQLITE_CONSTRAINT_TRIGGER	tsrc/sqlite3.h	510;"	d
SQLITE_CONSTRAINT_UNIQUE	sqlite3.c	771;"	d	file:
SQLITE_CONSTRAINT_UNIQUE	sqlite3.h	511;"	d
SQLITE_CONSTRAINT_UNIQUE	tsrc/sqlite3.h	511;"	d
SQLITE_CONSTRAINT_VTAB	sqlite3.c	772;"	d	file:
SQLITE_CONSTRAINT_VTAB	sqlite3.h	512;"	d
SQLITE_CONSTRAINT_VTAB	tsrc/sqlite3.h	512;"	d
SQLITE_COPY	sqlite3.c	3030;"	d	file:
SQLITE_COPY	sqlite3.h	2770;"	d
SQLITE_COPY	tsrc/sqlite3.h	2770;"	d
SQLITE_CORE	ext/fts1/fts1.c	40;"	d	file:
SQLITE_CORE	ext/fts2/fts2.c	302;"	d	file:
SQLITE_CORE	ext/fts3/fts3.c	295;"	d	file:
SQLITE_CORE	sqlite3.c	108823;"	d	file:
SQLITE_CORE	sqlite3.c	142048;"	d	file:
SQLITE_CORE	sqlite3.c	20;"	d	file:
SQLITE_CORE	src/loadext.c	17;"	d	file:
SQLITE_CORE	src/test_multiplex.c	57;"	d	file:
SQLITE_CORE	tsrc/fts1.c	40;"	d	file:
SQLITE_CORE	tsrc/fts2.c	302;"	d	file:
SQLITE_CORE	tsrc/fts3.c	295;"	d	file:
SQLITE_CORE	tsrc/loadext.c	17;"	d	file:
SQLITE_CORRUPT	sqlite3.c	685;"	d	file:
SQLITE_CORRUPT	sqlite3.h	425;"	d
SQLITE_CORRUPT	tsrc/sqlite3.h	425;"	d
SQLITE_CORRUPT_BKPT	sqlite3.c	15933;"	d	file:
SQLITE_CORRUPT_BKPT	src/sqliteInt.h	3334;"	d
SQLITE_CORRUPT_BKPT	tsrc/sqliteInt.h	3334;"	d
SQLITE_CORRUPT_VTAB	sqlite3.c	758;"	d	file:
SQLITE_CORRUPT_VTAB	sqlite3.h	498;"	d
SQLITE_CORRUPT_VTAB	tsrc/sqlite3.h	498;"	d
SQLITE_CREATE_INDEX	sqlite3.c	2998;"	d	file:
SQLITE_CREATE_INDEX	sqlite3.h	2738;"	d
SQLITE_CREATE_INDEX	tsrc/sqlite3.h	2738;"	d
SQLITE_CREATE_TABLE	sqlite3.c	2999;"	d	file:
SQLITE_CREATE_TABLE	sqlite3.h	2739;"	d
SQLITE_CREATE_TABLE	tsrc/sqlite3.h	2739;"	d
SQLITE_CREATE_TEMP_INDEX	sqlite3.c	3000;"	d	file:
SQLITE_CREATE_TEMP_INDEX	sqlite3.h	2740;"	d
SQLITE_CREATE_TEMP_INDEX	tsrc/sqlite3.h	2740;"	d
SQLITE_CREATE_TEMP_TABLE	sqlite3.c	3001;"	d	file:
SQLITE_CREATE_TEMP_TABLE	sqlite3.h	2741;"	d
SQLITE_CREATE_TEMP_TABLE	tsrc/sqlite3.h	2741;"	d
SQLITE_CREATE_TEMP_TRIGGER	sqlite3.c	3002;"	d	file:
SQLITE_CREATE_TEMP_TRIGGER	sqlite3.h	2742;"	d
SQLITE_CREATE_TEMP_TRIGGER	tsrc/sqlite3.h	2742;"	d
SQLITE_CREATE_TEMP_VIEW	sqlite3.c	3003;"	d	file:
SQLITE_CREATE_TEMP_VIEW	sqlite3.h	2743;"	d
SQLITE_CREATE_TEMP_VIEW	tsrc/sqlite3.h	2743;"	d
SQLITE_CREATE_TRIGGER	sqlite3.c	3004;"	d	file:
SQLITE_CREATE_TRIGGER	sqlite3.h	2744;"	d
SQLITE_CREATE_TRIGGER	tsrc/sqlite3.h	2744;"	d
SQLITE_CREATE_VIEW	sqlite3.c	3005;"	d	file:
SQLITE_CREATE_VIEW	sqlite3.h	2745;"	d
SQLITE_CREATE_VIEW	tsrc/sqlite3.h	2745;"	d
SQLITE_CREATE_VTABLE	sqlite3.c	3026;"	d	file:
SQLITE_CREATE_VTABLE	sqlite3.h	2766;"	d
SQLITE_CREATE_VTABLE	tsrc/sqlite3.h	2766;"	d
SQLITE_CacheSpill	sqlite3.c	14008;"	d	file:
SQLITE_CacheSpill	src/sqliteInt.h	1409;"	d
SQLITE_CacheSpill	tsrc/sqliteInt.h	1409;"	d
SQLITE_CellSizeCk	sqlite3.c	14035;"	d	file:
SQLITE_CellSizeCk	src/sqliteInt.h	1436;"	d
SQLITE_CellSizeCk	tsrc/sqliteInt.h	1436;"	d
SQLITE_CkptFullFSync	sqlite3.c	14007;"	d	file:
SQLITE_CkptFullFSync	src/sqliteInt.h	1408;"	d
SQLITE_CkptFullFSync	tsrc/sqliteInt.h	1408;"	d
SQLITE_ColumnCache	sqlite3.c	14045;"	d	file:
SQLITE_ColumnCache	src/sqliteInt.h	1446;"	d
SQLITE_ColumnCache	tsrc/sqliteInt.h	1446;"	d
SQLITE_CountRows	sqlite3.c	14010;"	d	file:
SQLITE_CountRows	src/sqliteInt.h	1411;"	d
SQLITE_CountRows	tsrc/sqliteInt.h	1411;"	d
SQLITE_CoverIdxScan	sqlite3.c	14050;"	d	file:
SQLITE_CoverIdxScan	src/sqliteInt.h	1451;"	d
SQLITE_CoverIdxScan	tsrc/sqliteInt.h	1451;"	d
SQLITE_CursorHints	sqlite3.c	14056;"	d	file:
SQLITE_CursorHints	src/sqliteInt.h	1457;"	d
SQLITE_CursorHints	tsrc/sqliteInt.h	1457;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	sqlite3.c	2235;"	d	file:
SQLITE_DBCONFIG_ENABLE_FKEY	sqlite3.h	1975;"	d
SQLITE_DBCONFIG_ENABLE_FKEY	tsrc/sqlite3.h	1975;"	d
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	sqlite3.c	2237;"	d	file:
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	sqlite3.h	1977;"	d
SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER	tsrc/sqlite3.h	1977;"	d
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	sqlite3.c	2238;"	d	file:
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	sqlite3.h	1978;"	d
SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION	tsrc/sqlite3.h	1978;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	sqlite3.c	2236;"	d	file:
SQLITE_DBCONFIG_ENABLE_TRIGGER	sqlite3.h	1976;"	d
SQLITE_DBCONFIG_ENABLE_TRIGGER	tsrc/sqlite3.h	1976;"	d
SQLITE_DBCONFIG_LOOKASIDE	sqlite3.c	2234;"	d	file:
SQLITE_DBCONFIG_LOOKASIDE	sqlite3.h	1974;"	d
SQLITE_DBCONFIG_LOOKASIDE	tsrc/sqlite3.h	1974;"	d
SQLITE_DBSTATUS_CACHE_HIT	sqlite3.c	7234;"	d	file:
SQLITE_DBSTATUS_CACHE_HIT	sqlite3.h	6974;"	d
SQLITE_DBSTATUS_CACHE_HIT	tsrc/sqlite3.h	6974;"	d
SQLITE_DBSTATUS_CACHE_MISS	sqlite3.c	7235;"	d	file:
SQLITE_DBSTATUS_CACHE_MISS	sqlite3.h	6975;"	d
SQLITE_DBSTATUS_CACHE_MISS	tsrc/sqlite3.h	6975;"	d
SQLITE_DBSTATUS_CACHE_USED	sqlite3.c	7228;"	d	file:
SQLITE_DBSTATUS_CACHE_USED	sqlite3.h	6968;"	d
SQLITE_DBSTATUS_CACHE_USED	tsrc/sqlite3.h	6968;"	d
SQLITE_DBSTATUS_CACHE_USED_SHARED	sqlite3.c	7238;"	d	file:
SQLITE_DBSTATUS_CACHE_USED_SHARED	sqlite3.h	6978;"	d
SQLITE_DBSTATUS_CACHE_USED_SHARED	tsrc/sqlite3.h	6978;"	d
SQLITE_DBSTATUS_CACHE_WRITE	sqlite3.c	7236;"	d	file:
SQLITE_DBSTATUS_CACHE_WRITE	sqlite3.h	6976;"	d
SQLITE_DBSTATUS_CACHE_WRITE	tsrc/sqlite3.h	6976;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	sqlite3.c	7237;"	d	file:
SQLITE_DBSTATUS_DEFERRED_FKS	sqlite3.h	6977;"	d
SQLITE_DBSTATUS_DEFERRED_FKS	tsrc/sqlite3.h	6977;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	sqlite3.c	7231;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_HIT	sqlite3.h	6971;"	d
SQLITE_DBSTATUS_LOOKASIDE_HIT	tsrc/sqlite3.h	6971;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	sqlite3.c	7233;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	sqlite3.h	6973;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL	tsrc/sqlite3.h	6973;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	sqlite3.c	7232;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	sqlite3.h	6972;"	d
SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE	tsrc/sqlite3.h	6972;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	sqlite3.c	7227;"	d	file:
SQLITE_DBSTATUS_LOOKASIDE_USED	sqlite3.h	6967;"	d
SQLITE_DBSTATUS_LOOKASIDE_USED	tsrc/sqlite3.h	6967;"	d
SQLITE_DBSTATUS_MAX	sqlite3.c	7239;"	d	file:
SQLITE_DBSTATUS_MAX	sqlite3.h	6979;"	d
SQLITE_DBSTATUS_MAX	tsrc/sqlite3.h	6979;"	d
SQLITE_DBSTATUS_SCHEMA_USED	sqlite3.c	7229;"	d	file:
SQLITE_DBSTATUS_SCHEMA_USED	sqlite3.h	6969;"	d
SQLITE_DBSTATUS_SCHEMA_USED	tsrc/sqlite3.h	6969;"	d
SQLITE_DBSTATUS_STMT_USED	sqlite3.c	7230;"	d	file:
SQLITE_DBSTATUS_STMT_USED	sqlite3.h	6970;"	d
SQLITE_DBSTATUS_STMT_USED	tsrc/sqlite3.h	6970;"	d
SQLITE_DEBUG_OS_TRACE	sqlite3.c	136566;"	d	file:
SQLITE_DEBUG_OS_TRACE	src/main.c	71;"	d	file:
SQLITE_DEBUG_OS_TRACE	tsrc/main.c	71;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	sqlite3.c	12018;"	d	file:
SQLITE_DEFAULT_AUTOVACUUM	src/btree.h	29;"	d
SQLITE_DEFAULT_AUTOVACUUM	tsrc/btree.h	29;"	d
SQLITE_DEFAULT_CACHE_SIZE	sqlite3.c	10726;"	d	file:
SQLITE_DEFAULT_CACHE_SIZE	src/sqliteLimit.h	110;"	d
SQLITE_DEFAULT_CACHE_SIZE	tsrc/sqliteLimit.h	110;"	d
SQLITE_DEFAULT_FILE_FORMAT	sqlite3.c	11479;"	d	file:
SQLITE_DEFAULT_FILE_FORMAT	src/sqliteInt.h	545;"	d
SQLITE_DEFAULT_FILE_FORMAT	tsrc/sqliteInt.h	545;"	d
SQLITE_DEFAULT_FILE_PERMISSIONS	sqlite3.c	29277;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	src/os_unix.c	150;"	d	file:
SQLITE_DEFAULT_FILE_PERMISSIONS	tsrc/os_unix.c	150;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	sqlite3.c	12908;"	d	file:
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	src/pager.h	26;"	d
SQLITE_DEFAULT_JOURNAL_SIZE_LIMIT	tsrc/pager.h	26;"	d
SQLITE_DEFAULT_MEMSTATUS	sqlite3.c	10944;"	d	file:
SQLITE_DEFAULT_MEMSTATUS	src/sqliteInt.h	282;"	d
SQLITE_DEFAULT_MEMSTATUS	tsrc/sqliteInt.h	282;"	d
SQLITE_DEFAULT_MMAP_SIZE	sqlite3.c	11800;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	sqlite3.c	11804;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	sqlite3.c	11805;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE	src/sqliteInt.h	866;"	d
SQLITE_DEFAULT_MMAP_SIZE	src/sqliteInt.h	870;"	d
SQLITE_DEFAULT_MMAP_SIZE	src/sqliteInt.h	871;"	d
SQLITE_DEFAULT_MMAP_SIZE	tsrc/sqliteInt.h	866;"	d
SQLITE_DEFAULT_MMAP_SIZE	tsrc/sqliteInt.h	870;"	d
SQLITE_DEFAULT_MMAP_SIZE	tsrc/sqliteInt.h	871;"	d
SQLITE_DEFAULT_MMAP_SIZE_xc	sqlite3.c	11801;"	d	file:
SQLITE_DEFAULT_MMAP_SIZE_xc	src/sqliteInt.h	867;"	d
SQLITE_DEFAULT_MMAP_SIZE_xc	tsrc/sqliteInt.h	867;"	d
SQLITE_DEFAULT_PAGE_SIZE	sqlite3.c	10776;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	sqlite3.c	10779;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	sqlite3.c	10780;"	d	file:
SQLITE_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	160;"	d
SQLITE_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	163;"	d
SQLITE_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	164;"	d
SQLITE_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	160;"	d
SQLITE_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	163;"	d
SQLITE_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	164;"	d
SQLITE_DEFAULT_PCACHE_INITSZ	sqlite3.c	11526;"	d	file:
SQLITE_DEFAULT_PCACHE_INITSZ	src/sqliteInt.h	592;"	d
SQLITE_DEFAULT_PCACHE_INITSZ	tsrc/sqliteInt.h	592;"	d
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	sqlite3.c	29284;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	src/os_unix.c	157;"	d	file:
SQLITE_DEFAULT_PROXYDIR_PERMISSIONS	tsrc/os_unix.c	157;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	sqlite3.c	11487;"	d	file:
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	src/sqliteInt.h	553;"	d
SQLITE_DEFAULT_RECURSIVE_TRIGGERS	tsrc/sqliteInt.h	553;"	d
SQLITE_DEFAULT_SECTOR_SIZE	sqlite3.c	13410;"	d	file:
SQLITE_DEFAULT_SECTOR_SIZE	src/os.h	40;"	d
SQLITE_DEFAULT_SECTOR_SIZE	tsrc/os.h	40;"	d
SQLITE_DEFAULT_SYNCHRONOUS	sqlite3.c	13665;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	sqlite3.c	13685;"	d	file:
SQLITE_DEFAULT_SYNCHRONOUS	src/sqliteInt.h	1066;"	d
SQLITE_DEFAULT_SYNCHRONOUS	src/sqliteInt.h	1086;"	d
SQLITE_DEFAULT_SYNCHRONOUS	tsrc/sqliteInt.h	1066;"	d
SQLITE_DEFAULT_SYNCHRONOUS	tsrc/sqliteInt.h	1086;"	d
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	sqlite3.c	10734;"	d	file:
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	src/sqliteLimit.h	118;"	d
SQLITE_DEFAULT_WAL_AUTOCHECKPOINT	tsrc/sqliteLimit.h	118;"	d
SQLITE_DEFAULT_WAL_SYNCHRONOUS	sqlite3.c	13688;"	d	file:
SQLITE_DEFAULT_WAL_SYNCHRONOUS	src/sqliteInt.h	1089;"	d
SQLITE_DEFAULT_WAL_SYNCHRONOUS	tsrc/sqliteInt.h	1089;"	d
SQLITE_DEFAULT_WORKER_THREADS	sqlite3.c	11512;"	d	file:
SQLITE_DEFAULT_WORKER_THREADS	src/sqliteInt.h	578;"	d
SQLITE_DEFAULT_WORKER_THREADS	tsrc/sqliteInt.h	578;"	d
SQLITE_DELETE	sqlite3.c	3006;"	d	file:
SQLITE_DELETE	sqlite3.h	2746;"	d
SQLITE_DELETE	tsrc/sqlite3.h	2746;"	d
SQLITE_DEMOVFS_BUFFERSZ	src/test_demovfs.c	135;"	d	file:
SQLITE_DENY	sqlite3.c	2975;"	d	file:
SQLITE_DENY	sqlite3.h	2715;"	d
SQLITE_DENY	tsrc/sqlite3.h	2715;"	d
SQLITE_DEPRECATED	sqlite3.c	343;"	d	file:
SQLITE_DEPRECATED	sqlite3.h	83;"	d
SQLITE_DEPRECATED	tsrc/sqlite3.h	83;"	d
SQLITE_DETACH	sqlite3.c	3022;"	d	file:
SQLITE_DETACH	sqlite3.h	2762;"	d
SQLITE_DETACH	tsrc/sqlite3.h	2762;"	d
SQLITE_DETERMINISTIC	sqlite3.c	4751;"	d	file:
SQLITE_DETERMINISTIC	sqlite3.h	4491;"	d
SQLITE_DETERMINISTIC	tsrc/sqlite3.h	4491;"	d
SQLITE_DONE	sqlite3.c	704;"	d	file:
SQLITE_DONE	sqlite3.h	444;"	d
SQLITE_DONE	tsrc/sqlite3.h	444;"	d
SQLITE_DROP_INDEX	sqlite3.c	3007;"	d	file:
SQLITE_DROP_INDEX	sqlite3.h	2747;"	d
SQLITE_DROP_INDEX	tsrc/sqlite3.h	2747;"	d
SQLITE_DROP_TABLE	sqlite3.c	3008;"	d	file:
SQLITE_DROP_TABLE	sqlite3.h	2748;"	d
SQLITE_DROP_TABLE	tsrc/sqlite3.h	2748;"	d
SQLITE_DROP_TEMP_INDEX	sqlite3.c	3009;"	d	file:
SQLITE_DROP_TEMP_INDEX	sqlite3.h	2749;"	d
SQLITE_DROP_TEMP_INDEX	tsrc/sqlite3.h	2749;"	d
SQLITE_DROP_TEMP_TABLE	sqlite3.c	3010;"	d	file:
SQLITE_DROP_TEMP_TABLE	sqlite3.h	2750;"	d
SQLITE_DROP_TEMP_TABLE	tsrc/sqlite3.h	2750;"	d
SQLITE_DROP_TEMP_TRIGGER	sqlite3.c	3011;"	d	file:
SQLITE_DROP_TEMP_TRIGGER	sqlite3.h	2751;"	d
SQLITE_DROP_TEMP_TRIGGER	tsrc/sqlite3.h	2751;"	d
SQLITE_DROP_TEMP_VIEW	sqlite3.c	3012;"	d	file:
SQLITE_DROP_TEMP_VIEW	sqlite3.h	2752;"	d
SQLITE_DROP_TEMP_VIEW	tsrc/sqlite3.h	2752;"	d
SQLITE_DROP_TRIGGER	sqlite3.c	3013;"	d	file:
SQLITE_DROP_TRIGGER	sqlite3.h	2753;"	d
SQLITE_DROP_TRIGGER	tsrc/sqlite3.h	2753;"	d
SQLITE_DROP_VIEW	sqlite3.c	3014;"	d	file:
SQLITE_DROP_VIEW	sqlite3.h	2754;"	d
SQLITE_DROP_VIEW	tsrc/sqlite3.h	2754;"	d
SQLITE_DROP_VTABLE	sqlite3.c	3027;"	d	file:
SQLITE_DROP_VTABLE	sqlite3.h	2767;"	d
SQLITE_DROP_VTABLE	tsrc/sqlite3.h	2767;"	d
SQLITE_DYNAMIC	sqlite3.c	11885;"	d	file:
SQLITE_DYNAMIC	src/sqliteInt.h	951;"	d
SQLITE_DYNAMIC	tsrc/sqliteInt.h	951;"	d
SQLITE_DeferFKs	sqlite3.c	14031;"	d	file:
SQLITE_DeferFKs	src/sqliteInt.h	1432;"	d
SQLITE_DeferFKs	tsrc/sqliteInt.h	1432;"	d
SQLITE_DistinctOpt	sqlite3.c	14049;"	d	file:
SQLITE_DistinctOpt	src/sqliteInt.h	1450;"	d
SQLITE_DistinctOpt	tsrc/sqliteInt.h	1450;"	d
SQLITE_EBCDIC	sqlite3.c	11557;"	d	file:
SQLITE_EBCDIC	src/sqliteInt.h	623;"	d
SQLITE_EBCDIC	tsrc/sqliteInt.h	623;"	d
SQLITE_ECEL_DUP	sqlite3.c	16289;"	d	file:
SQLITE_ECEL_DUP	src/sqliteInt.h	3690;"	d
SQLITE_ECEL_DUP	tsrc/sqliteInt.h	3690;"	d
SQLITE_ECEL_FACTOR	sqlite3.c	16290;"	d	file:
SQLITE_ECEL_FACTOR	src/sqliteInt.h	3691;"	d
SQLITE_ECEL_FACTOR	tsrc/sqliteInt.h	3691;"	d
SQLITE_ECEL_REF	sqlite3.c	16291;"	d	file:
SQLITE_ECEL_REF	src/sqliteInt.h	3692;"	d
SQLITE_ECEL_REF	tsrc/sqliteInt.h	3692;"	d
SQLITE_EMPTY	sqlite3.c	690;"	d	file:
SQLITE_EMPTY	sqlite3.h	430;"	d
SQLITE_EMPTY	tsrc/sqlite3.h	430;"	d
SQLITE_ENABLE_EXPLAIN_COMMENTS	sqlite3.c	11020;"	d	file:
SQLITE_ENABLE_EXPLAIN_COMMENTS	sqlite3.c	11140;"	d	file:
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/sqliteInt.h	358;"	d
SQLITE_ENABLE_EXPLAIN_COMMENTS	src/sqliteInt.h	478;"	d
SQLITE_ENABLE_EXPLAIN_COMMENTS	tsrc/sqliteInt.h	358;"	d
SQLITE_ENABLE_EXPLAIN_COMMENTS	tsrc/sqliteInt.h	478;"	d
SQLITE_ENABLE_FTS3	ext/fts3/fts3Int.h	23;"	d
SQLITE_ENABLE_FTS3	ext/fts3/fts3Int.h	33;"	d
SQLITE_ENABLE_FTS3	sqlite3.c	141166;"	d	file:
SQLITE_ENABLE_FTS3	sqlite3.c	141176;"	d	file:
SQLITE_ENABLE_FTS3	sqlite3.c	15950;"	d	file:
SQLITE_ENABLE_FTS3	sqlite3.c	15960;"	d	file:
SQLITE_ENABLE_FTS3	src/sqliteInt.h	3351;"	d
SQLITE_ENABLE_FTS3	src/sqliteInt.h	3361;"	d
SQLITE_ENABLE_FTS3	tsrc/fts3Int.h	23;"	d
SQLITE_ENABLE_FTS3	tsrc/fts3Int.h	33;"	d
SQLITE_ENABLE_FTS3	tsrc/sqliteInt.h	3351;"	d
SQLITE_ENABLE_FTS3	tsrc/sqliteInt.h	3361;"	d
SQLITE_ENABLE_FTS4	ext/fts3/fts3Int.h	24;"	d
SQLITE_ENABLE_FTS4	sqlite3.c	141167;"	d	file:
SQLITE_ENABLE_FTS4	sqlite3.c	15951;"	d	file:
SQLITE_ENABLE_FTS4	src/sqliteInt.h	3352;"	d
SQLITE_ENABLE_FTS4	tsrc/fts3Int.h	24;"	d
SQLITE_ENABLE_FTS4	tsrc/sqliteInt.h	3352;"	d
SQLITE_ENABLE_LOCKING_STYLE	sqlite3.c	110186;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	sqlite3.c	110188;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	sqlite3.c	162;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	sqlite3.c	29195;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	sqlite3.c	29197;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/os_unix.c	68;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/os_unix.c	70;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/pragma.c	18;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/pragma.c	20;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/test1.c	5579;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/test_config.c	572;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	src/vxworks.h	24;"	d
SQLITE_ENABLE_LOCKING_STYLE	tsrc/os_unix.c	68;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	tsrc/os_unix.c	70;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	tsrc/pragma.c	18;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	tsrc/pragma.c	20;"	d	file:
SQLITE_ENABLE_LOCKING_STYLE	tsrc/vxworks.h	24;"	d
SQLITE_ENABLE_MEMSYS3	sqlite3.c	16056;"	d	file:
SQLITE_ENABLE_MEMSYS3	src/sqliteInt.h	3457;"	d
SQLITE_ENABLE_MEMSYS3	tsrc/sqliteInt.h	3457;"	d
SQLITE_ENABLE_STAT3	sqlite3.c	11814;"	d	file:
SQLITE_ENABLE_STAT3	src/sqliteInt.h	880;"	d
SQLITE_ENABLE_STAT3	tsrc/sqliteInt.h	880;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	sqlite3.c	11815;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	sqlite3.c	11817;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	sqlite3.c	11819;"	d	file:
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqliteInt.h	881;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqliteInt.h	883;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	src/sqliteInt.h	885;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	tsrc/sqliteInt.h	881;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	tsrc/sqliteInt.h	883;"	d
SQLITE_ENABLE_STAT3_OR_STAT4	tsrc/sqliteInt.h	885;"	d
SQLITE_ERROR	sqlite3.c	675;"	d	file:
SQLITE_ERROR	sqlite3.h	415;"	d
SQLITE_ERROR	tsrc/sqlite3.h	415;"	d
SQLITE_EXPERIMENTAL	sqlite3.c	344;"	d	file:
SQLITE_EXPERIMENTAL	sqlite3.h	84;"	d
SQLITE_EXPERIMENTAL	tsrc/sqlite3.h	84;"	d
SQLITE_EXTENSION_INIT1	sqlite3.c	109374;"	d	file:
SQLITE_EXTENSION_INIT1	sqlite3.c	109381;"	d	file:
SQLITE_EXTENSION_INIT1	sqlite3ext.h	548;"	d
SQLITE_EXTENSION_INIT1	sqlite3ext.h	555;"	d
SQLITE_EXTENSION_INIT1	src/sqlite3ext.h	548;"	d
SQLITE_EXTENSION_INIT1	src/sqlite3ext.h	555;"	d
SQLITE_EXTENSION_INIT1	tsrc/sqlite3ext.h	548;"	d
SQLITE_EXTENSION_INIT1	tsrc/sqlite3ext.h	555;"	d
SQLITE_EXTENSION_INIT2	sqlite3.c	109375;"	d	file:
SQLITE_EXTENSION_INIT2	sqlite3.c	109382;"	d	file:
SQLITE_EXTENSION_INIT2	sqlite3ext.h	549;"	d
SQLITE_EXTENSION_INIT2	sqlite3ext.h	556;"	d
SQLITE_EXTENSION_INIT2	src/sqlite3ext.h	549;"	d
SQLITE_EXTENSION_INIT2	src/sqlite3ext.h	556;"	d
SQLITE_EXTENSION_INIT2	tsrc/sqlite3ext.h	549;"	d
SQLITE_EXTENSION_INIT2	tsrc/sqlite3ext.h	556;"	d
SQLITE_EXTENSION_INIT3	sqlite3.c	109376;"	d	file:
SQLITE_EXTENSION_INIT3	sqlite3.c	109383;"	d	file:
SQLITE_EXTENSION_INIT3	sqlite3ext.h	550;"	d
SQLITE_EXTENSION_INIT3	sqlite3ext.h	557;"	d
SQLITE_EXTENSION_INIT3	src/sqlite3ext.h	550;"	d
SQLITE_EXTENSION_INIT3	src/sqlite3ext.h	557;"	d
SQLITE_EXTENSION_INIT3	tsrc/sqlite3ext.h	550;"	d
SQLITE_EXTENSION_INIT3	tsrc/sqlite3ext.h	557;"	d
SQLITE_EXTERN	sqlite3.c	309;"	d	file:
SQLITE_EXTERN	sqlite3.h	49;"	d
SQLITE_EXTERN	tsrc/sqlite3.h	49;"	d
SQLITE_EnableTrigger	sqlite3.c	14030;"	d	file:
SQLITE_EnableTrigger	src/sqliteInt.h	1431;"	d
SQLITE_EnableTrigger	tsrc/sqliteInt.h	1431;"	d
SQLITE_FAIL	sqlite3.c	8232;"	d	file:
SQLITE_FAIL	sqlite3.h	7972;"	d
SQLITE_FAIL	tsrc/sqlite3.h	7972;"	d
SQLITE_FAULTINJECTOR_COUNT	sqlite3.c	16729;"	d	file:
SQLITE_FAULTINJECTOR_COUNT	src/sqliteInt.h	4130;"	d
SQLITE_FAULTINJECTOR_COUNT	tsrc/sqliteInt.h	4130;"	d
SQLITE_FAULTINJECTOR_MALLOC	sqlite3.c	16728;"	d	file:
SQLITE_FAULTINJECTOR_MALLOC	src/sqliteInt.h	4129;"	d
SQLITE_FAULTINJECTOR_MALLOC	tsrc/sqliteInt.h	4129;"	d
SQLITE_FCNTL_BUSYHANDLER	sqlite3.c	1276;"	d	file:
SQLITE_FCNTL_BUSYHANDLER	sqlite3.h	1016;"	d
SQLITE_FCNTL_BUSYHANDLER	tsrc/sqlite3.h	1016;"	d
SQLITE_FCNTL_CHUNK_SIZE	sqlite3.c	1267;"	d	file:
SQLITE_FCNTL_CHUNK_SIZE	sqlite3.h	1007;"	d
SQLITE_FCNTL_CHUNK_SIZE	tsrc/sqlite3.h	1007;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	sqlite3.c	1282;"	d	file:
SQLITE_FCNTL_COMMIT_PHASETWO	sqlite3.h	1022;"	d
SQLITE_FCNTL_COMMIT_PHASETWO	tsrc/sqlite3.h	1022;"	d
SQLITE_FCNTL_DB_UNCHANGED	sqlite3.c	13544;"	d	file:
SQLITE_FCNTL_DB_UNCHANGED	src/os.h	174;"	d
SQLITE_FCNTL_DB_UNCHANGED	tsrc/os.h	174;"	d
SQLITE_FCNTL_FILE_POINTER	sqlite3.c	1268;"	d	file:
SQLITE_FCNTL_FILE_POINTER	sqlite3.h	1008;"	d
SQLITE_FCNTL_FILE_POINTER	tsrc/sqlite3.h	1008;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	sqlite3.c	1263;"	d	file:
SQLITE_FCNTL_GET_LOCKPROXYFILE	sqlite3.h	1003;"	d
SQLITE_FCNTL_GET_LOCKPROXYFILE	tsrc/sqlite3.h	1003;"	d
SQLITE_FCNTL_HAS_MOVED	sqlite3.c	1280;"	d	file:
SQLITE_FCNTL_HAS_MOVED	sqlite3.h	1020;"	d
SQLITE_FCNTL_HAS_MOVED	tsrc/sqlite3.h	1020;"	d
SQLITE_FCNTL_JOURNAL_POINTER	sqlite3.c	1288;"	d	file:
SQLITE_FCNTL_JOURNAL_POINTER	sqlite3.h	1028;"	d
SQLITE_FCNTL_JOURNAL_POINTER	tsrc/sqlite3.h	1028;"	d
SQLITE_FCNTL_LAST_ERRNO	sqlite3.c	1265;"	d	file:
SQLITE_FCNTL_LAST_ERRNO	sqlite3.h	1005;"	d
SQLITE_FCNTL_LAST_ERRNO	tsrc/sqlite3.h	1005;"	d
SQLITE_FCNTL_LOCKSTATE	sqlite3.c	1262;"	d	file:
SQLITE_FCNTL_LOCKSTATE	sqlite3.h	1002;"	d
SQLITE_FCNTL_LOCKSTATE	tsrc/sqlite3.h	1002;"	d
SQLITE_FCNTL_MMAP_SIZE	sqlite3.c	1278;"	d	file:
SQLITE_FCNTL_MMAP_SIZE	sqlite3.h	1018;"	d
SQLITE_FCNTL_MMAP_SIZE	tsrc/sqlite3.h	1018;"	d
SQLITE_FCNTL_OVERWRITE	sqlite3.c	1272;"	d	file:
SQLITE_FCNTL_OVERWRITE	sqlite3.h	1012;"	d
SQLITE_FCNTL_OVERWRITE	tsrc/sqlite3.h	1012;"	d
SQLITE_FCNTL_PERSIST_WAL	sqlite3.c	1271;"	d	file:
SQLITE_FCNTL_PERSIST_WAL	sqlite3.h	1011;"	d
SQLITE_FCNTL_PERSIST_WAL	tsrc/sqlite3.h	1011;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	sqlite3.c	1274;"	d	file:
SQLITE_FCNTL_POWERSAFE_OVERWRITE	sqlite3.h	1014;"	d
SQLITE_FCNTL_POWERSAFE_OVERWRITE	tsrc/sqlite3.h	1014;"	d
SQLITE_FCNTL_PRAGMA	sqlite3.c	1275;"	d	file:
SQLITE_FCNTL_PRAGMA	sqlite3.h	1015;"	d
SQLITE_FCNTL_PRAGMA	tsrc/sqlite3.h	1015;"	d
SQLITE_FCNTL_RBU	sqlite3.c	1286;"	d	file:
SQLITE_FCNTL_RBU	sqlite3.h	1026;"	d
SQLITE_FCNTL_RBU	tsrc/sqlite3.h	1026;"	d
SQLITE_FCNTL_RBUCNT	ext/rbu/sqlite3rbu.c	193;"	d	file:
SQLITE_FCNTL_RBUCNT	sqlite3.c	165116;"	d	file:
SQLITE_FCNTL_RBUCNT	tsrc/sqlite3rbu.c	193;"	d	file:
SQLITE_FCNTL_SET_LOCKPROXYFILE	sqlite3.c	1264;"	d	file:
SQLITE_FCNTL_SET_LOCKPROXYFILE	sqlite3.h	1004;"	d
SQLITE_FCNTL_SET_LOCKPROXYFILE	tsrc/sqlite3.h	1004;"	d
SQLITE_FCNTL_SIZE_HINT	sqlite3.c	1266;"	d	file:
SQLITE_FCNTL_SIZE_HINT	sqlite3.h	1006;"	d
SQLITE_FCNTL_SIZE_HINT	tsrc/sqlite3.h	1006;"	d
SQLITE_FCNTL_SYNC	sqlite3.c	1281;"	d	file:
SQLITE_FCNTL_SYNC	sqlite3.h	1021;"	d
SQLITE_FCNTL_SYNC	tsrc/sqlite3.h	1021;"	d
SQLITE_FCNTL_SYNC_OMITTED	sqlite3.c	1269;"	d	file:
SQLITE_FCNTL_SYNC_OMITTED	sqlite3.h	1009;"	d
SQLITE_FCNTL_SYNC_OMITTED	tsrc/sqlite3.h	1009;"	d
SQLITE_FCNTL_TEMPFILENAME	sqlite3.c	1277;"	d	file:
SQLITE_FCNTL_TEMPFILENAME	sqlite3.h	1017;"	d
SQLITE_FCNTL_TEMPFILENAME	tsrc/sqlite3.h	1017;"	d
SQLITE_FCNTL_TRACE	sqlite3.c	1279;"	d	file:
SQLITE_FCNTL_TRACE	sqlite3.h	1019;"	d
SQLITE_FCNTL_TRACE	tsrc/sqlite3.h	1019;"	d
SQLITE_FCNTL_VFSNAME	sqlite3.c	1273;"	d	file:
SQLITE_FCNTL_VFSNAME	sqlite3.h	1013;"	d
SQLITE_FCNTL_VFSNAME	tsrc/sqlite3.h	1013;"	d
SQLITE_FCNTL_VFS_POINTER	sqlite3.c	1287;"	d	file:
SQLITE_FCNTL_VFS_POINTER	sqlite3.h	1027;"	d
SQLITE_FCNTL_VFS_POINTER	tsrc/sqlite3.h	1027;"	d
SQLITE_FCNTL_WAL_BLOCK	sqlite3.c	1284;"	d	file:
SQLITE_FCNTL_WAL_BLOCK	sqlite3.h	1024;"	d
SQLITE_FCNTL_WAL_BLOCK	tsrc/sqlite3.h	1024;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	sqlite3.c	1270;"	d	file:
SQLITE_FCNTL_WIN32_AV_RETRY	sqlite3.h	1010;"	d
SQLITE_FCNTL_WIN32_AV_RETRY	tsrc/sqlite3.h	1010;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	sqlite3.c	1283;"	d	file:
SQLITE_FCNTL_WIN32_SET_HANDLE	sqlite3.h	1023;"	d
SQLITE_FCNTL_WIN32_SET_HANDLE	tsrc/sqlite3.h	1023;"	d
SQLITE_FCNTL_ZIPVFS	sqlite3.c	1285;"	d	file:
SQLITE_FCNTL_ZIPVFS	sqlite3.h	1025;"	d
SQLITE_FCNTL_ZIPVFS	tsrc/sqlite3.h	1025;"	d
SQLITE_FILE_HEADER	sqlite3.c	57391;"	d	file:
SQLITE_FILE_HEADER	src/btreeInt.h	249;"	d
SQLITE_FILE_HEADER	tsrc/btreeInt.h	249;"	d
SQLITE_FLOAT	sqlite3.c	4368;"	d	file:
SQLITE_FLOAT	sqlite3.h	4108;"	d
SQLITE_FLOAT	tsrc/sqlite3.h	4108;"	d
SQLITE_FORMAT	sqlite3.c	698;"	d	file:
SQLITE_FORMAT	sqlite3.h	438;"	d
SQLITE_FORMAT	tsrc/sqlite3.h	438;"	d
SQLITE_FREE	sqlite3.c	20323;"	d	file:
SQLITE_FREE	sqlite3.c	20335;"	d	file:
SQLITE_FREE	src/mem1.c	63;"	d	file:
SQLITE_FREE	src/mem1.c	75;"	d	file:
SQLITE_FREE	tsrc/mem1.c	63;"	d	file:
SQLITE_FREE	tsrc/mem1.c	75;"	d	file:
SQLITE_FSFLAGS_IS_MSDOS	sqlite3.c	29262;"	d	file:
SQLITE_FSFLAGS_IS_MSDOS	src/os_unix.c	135;"	d	file:
SQLITE_FSFLAGS_IS_MSDOS	tsrc/os_unix.c	135;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	ext/fts3/fts3_expr.c	79;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	sqlite3.c	148312;"	d	file:
SQLITE_FTS3_DEFAULT_NEAR_PARAM	tsrc/fts3_expr.c	79;"	d	file:
SQLITE_FTS3_MAX_EXPR_DEPTH	ext/fts3/fts3Int.h	56;"	d
SQLITE_FTS3_MAX_EXPR_DEPTH	sqlite3.c	141480;"	d	file:
SQLITE_FTS3_MAX_EXPR_DEPTH	tsrc/fts3Int.h	56;"	d
SQLITE_FULL	sqlite3.c	687;"	d	file:
SQLITE_FULL	sqlite3.h	427;"	d
SQLITE_FULL	tsrc/sqlite3.h	427;"	d
SQLITE_FUNCTION	sqlite3.c	3028;"	d	file:
SQLITE_FUNCTION	sqlite3.h	2768;"	d
SQLITE_FUNCTION	tsrc/sqlite3.h	2768;"	d
SQLITE_FUNC_CASE	sqlite3.c	14147;"	d	file:
SQLITE_FUNC_CASE	src/sqliteInt.h	1548;"	d
SQLITE_FUNC_CASE	tsrc/sqliteInt.h	1548;"	d
SQLITE_FUNC_COALESCE	sqlite3.c	14153;"	d	file:
SQLITE_FUNC_COALESCE	src/sqliteInt.h	1554;"	d
SQLITE_FUNC_COALESCE	tsrc/sqliteInt.h	1554;"	d
SQLITE_FUNC_CONSTANT	sqlite3.c	14155;"	d	file:
SQLITE_FUNC_CONSTANT	src/sqliteInt.h	1556;"	d
SQLITE_FUNC_CONSTANT	tsrc/sqliteInt.h	1556;"	d
SQLITE_FUNC_COUNT	sqlite3.c	14152;"	d	file:
SQLITE_FUNC_COUNT	src/sqliteInt.h	1553;"	d
SQLITE_FUNC_COUNT	tsrc/sqliteInt.h	1553;"	d
SQLITE_FUNC_ENCMASK	sqlite3.c	14145;"	d	file:
SQLITE_FUNC_ENCMASK	src/sqliteInt.h	1546;"	d
SQLITE_FUNC_ENCMASK	tsrc/sqliteInt.h	1546;"	d
SQLITE_FUNC_EPHEM	sqlite3.c	14148;"	d	file:
SQLITE_FUNC_EPHEM	src/sqliteInt.h	1549;"	d
SQLITE_FUNC_EPHEM	tsrc/sqliteInt.h	1549;"	d
SQLITE_FUNC_HASH_SZ	sqlite3.c	13808;"	d	file:
SQLITE_FUNC_HASH_SZ	src/sqliteInt.h	1209;"	d
SQLITE_FUNC_HASH_SZ	tsrc/sqliteInt.h	1209;"	d
SQLITE_FUNC_LENGTH	sqlite3.c	14150;"	d	file:
SQLITE_FUNC_LENGTH	src/sqliteInt.h	1551;"	d
SQLITE_FUNC_LENGTH	tsrc/sqliteInt.h	1551;"	d
SQLITE_FUNC_LIKE	sqlite3.c	14146;"	d	file:
SQLITE_FUNC_LIKE	src/sqliteInt.h	1547;"	d
SQLITE_FUNC_LIKE	tsrc/sqliteInt.h	1547;"	d
SQLITE_FUNC_MINMAX	sqlite3.c	14156;"	d	file:
SQLITE_FUNC_MINMAX	src/sqliteInt.h	1557;"	d
SQLITE_FUNC_MINMAX	tsrc/sqliteInt.h	1557;"	d
SQLITE_FUNC_NEEDCOLL	sqlite3.c	14149;"	d	file:
SQLITE_FUNC_NEEDCOLL	src/sqliteInt.h	1550;"	d
SQLITE_FUNC_NEEDCOLL	tsrc/sqliteInt.h	1550;"	d
SQLITE_FUNC_SLOCHNG	sqlite3.c	14157;"	d	file:
SQLITE_FUNC_SLOCHNG	src/sqliteInt.h	1558;"	d
SQLITE_FUNC_SLOCHNG	tsrc/sqliteInt.h	1558;"	d
SQLITE_FUNC_TYPEOF	sqlite3.c	14151;"	d	file:
SQLITE_FUNC_TYPEOF	src/sqliteInt.h	1552;"	d
SQLITE_FUNC_TYPEOF	tsrc/sqliteInt.h	1552;"	d
SQLITE_FUNC_UNLIKELY	sqlite3.c	14154;"	d	file:
SQLITE_FUNC_UNLIKELY	src/sqliteInt.h	1555;"	d
SQLITE_FUNC_UNLIKELY	tsrc/sqliteInt.h	1555;"	d
SQLITE_FactorOutConst	sqlite3.c	14047;"	d	file:
SQLITE_FactorOutConst	src/sqliteInt.h	1448;"	d
SQLITE_FactorOutConst	tsrc/sqliteInt.h	1448;"	d
SQLITE_ForeignKeys	sqlite3.c	14025;"	d	file:
SQLITE_ForeignKeys	src/sqliteInt.h	1426;"	d
SQLITE_ForeignKeys	tsrc/sqliteInt.h	1426;"	d
SQLITE_Fts3Tokenizer	sqlite3.c	14036;"	d	file:
SQLITE_Fts3Tokenizer	src/sqliteInt.h	1437;"	d
SQLITE_Fts3Tokenizer	tsrc/sqliteInt.h	1437;"	d
SQLITE_FullColNames	sqlite3.c	14005;"	d	file:
SQLITE_FullColNames	src/sqliteInt.h	1406;"	d
SQLITE_FullColNames	tsrc/sqliteInt.h	1406;"	d
SQLITE_FullFSync	sqlite3.c	14006;"	d	file:
SQLITE_FullFSync	src/sqliteInt.h	1407;"	d
SQLITE_FullFSync	tsrc/sqliteInt.h	1407;"	d
SQLITE_GET_LOCKPROXYFILE	sqlite3.c	1291;"	d	file:
SQLITE_GET_LOCKPROXYFILE	sqlite3.h	1031;"	d
SQLITE_GET_LOCKPROXYFILE	tsrc/sqlite3.h	1031;"	d
SQLITE_GroupByOrder	sqlite3.c	14046;"	d	file:
SQLITE_GroupByOrder	src/sqliteInt.h	1447;"	d
SQLITE_GroupByOrder	tsrc/sqliteInt.h	1447;"	d
SQLITE_HASH_H	sqlite3.c	11177;"	d	file:
SQLITE_HASH_H	src/hash.h	16;"	d
SQLITE_HASH_H	tsrc/hash.h	16;"	d
SQLITE_HAVE_ISNAN	sqlite3.c	11454;"	d	file:
SQLITE_HAVE_ISNAN	src/sqliteInt.h	520;"	d
SQLITE_HAVE_ISNAN	tsrc/sqliteInt.h	520;"	d
SQLITE_HAVE_OS_TRACE	sqlite3.c	11117;"	d	file:
SQLITE_HAVE_OS_TRACE	sqlite3.c	11120;"	d	file:
SQLITE_HAVE_OS_TRACE	src/sqliteInt.h	455;"	d
SQLITE_HAVE_OS_TRACE	src/sqliteInt.h	458;"	d
SQLITE_HAVE_OS_TRACE	tsrc/sqliteInt.h	455;"	d
SQLITE_HAVE_OS_TRACE	tsrc/sqliteInt.h	458;"	d
SQLITE_HOMEGROWN_RECURSIVE_MUTEX	sqlite3.c	160;"	d	file:
SQLITE_HOMEGROWN_RECURSIVE_MUTEX	src/vxworks.h	22;"	d
SQLITE_HOMEGROWN_RECURSIVE_MUTEX	tsrc/vxworks.h	22;"	d
SQLITE_HWTIME_H	sqlite3.c	23220;"	d	file:
SQLITE_HWTIME_H	sqlite3.c	29471;"	d	file:
SQLITE_HWTIME_H	sqlite3.c	37000;"	d	file:
SQLITE_HWTIME_H	sqlite3.c	77566;"	d	file:
SQLITE_HWTIME_H	src/hwtime.h	17;"	d
SQLITE_HWTIME_H	tsrc/hwtime.h	17;"	d
SQLITE_ICU_READ_UTF8	ext/icu/icu.c	79;"	d	file:
SQLITE_ICU_READ_UTF8	sqlite3.c	163609;"	d	file:
SQLITE_ICU_READ_UTF8	tsrc/icu.c	79;"	d	file:
SQLITE_ICU_SKIP_UTF8	ext/icu/icu.c	88;"	d	file:
SQLITE_ICU_SKIP_UTF8	sqlite3.c	163618;"	d	file:
SQLITE_ICU_SKIP_UTF8	tsrc/icu.c	88;"	d	file:
SQLITE_IDXTYPE_APPDEF	sqlite3.c	14702;"	d	file:
SQLITE_IDXTYPE_APPDEF	src/sqliteInt.h	2103;"	d
SQLITE_IDXTYPE_APPDEF	tsrc/sqliteInt.h	2103;"	d
SQLITE_IDXTYPE_PRIMARYKEY	sqlite3.c	14704;"	d	file:
SQLITE_IDXTYPE_PRIMARYKEY	src/sqliteInt.h	2105;"	d
SQLITE_IDXTYPE_PRIMARYKEY	tsrc/sqliteInt.h	2105;"	d
SQLITE_IDXTYPE_UNIQUE	sqlite3.c	14703;"	d	file:
SQLITE_IDXTYPE_UNIQUE	src/sqliteInt.h	2104;"	d
SQLITE_IDXTYPE_UNIQUE	tsrc/sqliteInt.h	2104;"	d
SQLITE_IGNORE	sqlite3.c	2976;"	d	file:
SQLITE_IGNORE	sqlite3.h	2716;"	d
SQLITE_IGNORE	tsrc/sqlite3.h	2716;"	d
SQLITE_INDEX_CONSTRAINT_EQ	sqlite3.c	6210;"	d	file:
SQLITE_INDEX_CONSTRAINT_EQ	sqlite3.h	5950;"	d
SQLITE_INDEX_CONSTRAINT_EQ	tsrc/sqlite3.h	5950;"	d
SQLITE_INDEX_CONSTRAINT_GE	sqlite3.c	6214;"	d	file:
SQLITE_INDEX_CONSTRAINT_GE	sqlite3.h	5954;"	d
SQLITE_INDEX_CONSTRAINT_GE	tsrc/sqlite3.h	5954;"	d
SQLITE_INDEX_CONSTRAINT_GLOB	sqlite3.c	6217;"	d	file:
SQLITE_INDEX_CONSTRAINT_GLOB	sqlite3.h	5957;"	d
SQLITE_INDEX_CONSTRAINT_GLOB	tsrc/sqlite3.h	5957;"	d
SQLITE_INDEX_CONSTRAINT_GT	sqlite3.c	6211;"	d	file:
SQLITE_INDEX_CONSTRAINT_GT	sqlite3.h	5951;"	d
SQLITE_INDEX_CONSTRAINT_GT	tsrc/sqlite3.h	5951;"	d
SQLITE_INDEX_CONSTRAINT_LE	sqlite3.c	6212;"	d	file:
SQLITE_INDEX_CONSTRAINT_LE	sqlite3.h	5952;"	d
SQLITE_INDEX_CONSTRAINT_LE	tsrc/sqlite3.h	5952;"	d
SQLITE_INDEX_CONSTRAINT_LIKE	sqlite3.c	6216;"	d	file:
SQLITE_INDEX_CONSTRAINT_LIKE	sqlite3.h	5956;"	d
SQLITE_INDEX_CONSTRAINT_LIKE	tsrc/sqlite3.h	5956;"	d
SQLITE_INDEX_CONSTRAINT_LT	sqlite3.c	6213;"	d	file:
SQLITE_INDEX_CONSTRAINT_LT	sqlite3.h	5953;"	d
SQLITE_INDEX_CONSTRAINT_LT	tsrc/sqlite3.h	5953;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	sqlite3.c	6215;"	d	file:
SQLITE_INDEX_CONSTRAINT_MATCH	sqlite3.h	5955;"	d
SQLITE_INDEX_CONSTRAINT_MATCH	tsrc/sqlite3.h	5955;"	d
SQLITE_INDEX_CONSTRAINT_REGEXP	sqlite3.c	6218;"	d	file:
SQLITE_INDEX_CONSTRAINT_REGEXP	sqlite3.h	5958;"	d
SQLITE_INDEX_CONSTRAINT_REGEXP	tsrc/sqlite3.h	5958;"	d
SQLITE_INDEX_SCAN_UNIQUE	sqlite3.c	6200;"	d	file:
SQLITE_INDEX_SCAN_UNIQUE	sqlite3.h	5940;"	d
SQLITE_INDEX_SCAN_UNIQUE	tsrc/sqlite3.h	5940;"	d
SQLITE_INSERT	sqlite3.c	3015;"	d	file:
SQLITE_INSERT	sqlite3.h	2755;"	d
SQLITE_INSERT	tsrc/sqlite3.h	2755;"	d
SQLITE_INTARRAY_H	src/test_intarray.h	79;"	d
SQLITE_INTEGER	sqlite3.c	4367;"	d	file:
SQLITE_INTEGER	sqlite3.h	4107;"	d
SQLITE_INTEGER	tsrc/sqlite3.h	4107;"	d
SQLITE_INTEGRITY_CHECK_ERROR_MAX	sqlite3.c	112030;"	d	file:
SQLITE_INTEGRITY_CHECK_ERROR_MAX	src/pragma.c	1394;"	d	file:
SQLITE_INTEGRITY_CHECK_ERROR_MAX	tsrc/pragma.c	1394;"	d	file:
SQLITE_INTERNAL	sqlite3.c	676;"	d	file:
SQLITE_INTERNAL	sqlite3.h	416;"	d
SQLITE_INTERNAL	tsrc/sqlite3.h	416;"	d
SQLITE_INTERRUPT	sqlite3.c	683;"	d	file:
SQLITE_INTERRUPT	sqlite3.h	423;"	d
SQLITE_INTERRUPT	tsrc/sqlite3.h	423;"	d
SQLITE_INT_TO_PTR	sqlite3.c	10868;"	d	file:
SQLITE_INT_TO_PTR	sqlite3.c	10871;"	d	file:
SQLITE_INT_TO_PTR	sqlite3.c	10874;"	d	file:
SQLITE_INT_TO_PTR	sqlite3.c	10877;"	d	file:
SQLITE_INT_TO_PTR	src/sqliteInt.h	206;"	d
SQLITE_INT_TO_PTR	src/sqliteInt.h	209;"	d
SQLITE_INT_TO_PTR	src/sqliteInt.h	212;"	d
SQLITE_INT_TO_PTR	src/sqliteInt.h	215;"	d
SQLITE_INT_TO_PTR	tsrc/sqliteInt.h	206;"	d
SQLITE_INT_TO_PTR	tsrc/sqliteInt.h	209;"	d
SQLITE_INT_TO_PTR	tsrc/sqliteInt.h	212;"	d
SQLITE_INT_TO_PTR	tsrc/sqliteInt.h	215;"	d
SQLITE_IOCAP_ATOMIC	sqlite3.c	838;"	d	file:
SQLITE_IOCAP_ATOMIC	sqlite3.h	578;"	d
SQLITE_IOCAP_ATOMIC	tsrc/sqlite3.h	578;"	d
SQLITE_IOCAP_ATOMIC16K	sqlite3.c	844;"	d	file:
SQLITE_IOCAP_ATOMIC16K	sqlite3.h	584;"	d
SQLITE_IOCAP_ATOMIC16K	tsrc/sqlite3.h	584;"	d
SQLITE_IOCAP_ATOMIC1K	sqlite3.c	840;"	d	file:
SQLITE_IOCAP_ATOMIC1K	sqlite3.h	580;"	d
SQLITE_IOCAP_ATOMIC1K	tsrc/sqlite3.h	580;"	d
SQLITE_IOCAP_ATOMIC2K	sqlite3.c	841;"	d	file:
SQLITE_IOCAP_ATOMIC2K	sqlite3.h	581;"	d
SQLITE_IOCAP_ATOMIC2K	tsrc/sqlite3.h	581;"	d
SQLITE_IOCAP_ATOMIC32K	sqlite3.c	845;"	d	file:
SQLITE_IOCAP_ATOMIC32K	sqlite3.h	585;"	d
SQLITE_IOCAP_ATOMIC32K	tsrc/sqlite3.h	585;"	d
SQLITE_IOCAP_ATOMIC4K	sqlite3.c	842;"	d	file:
SQLITE_IOCAP_ATOMIC4K	sqlite3.h	582;"	d
SQLITE_IOCAP_ATOMIC4K	tsrc/sqlite3.h	582;"	d
SQLITE_IOCAP_ATOMIC512	sqlite3.c	839;"	d	file:
SQLITE_IOCAP_ATOMIC512	sqlite3.h	579;"	d
SQLITE_IOCAP_ATOMIC512	tsrc/sqlite3.h	579;"	d
SQLITE_IOCAP_ATOMIC64K	sqlite3.c	846;"	d	file:
SQLITE_IOCAP_ATOMIC64K	sqlite3.h	586;"	d
SQLITE_IOCAP_ATOMIC64K	tsrc/sqlite3.h	586;"	d
SQLITE_IOCAP_ATOMIC8K	sqlite3.c	843;"	d	file:
SQLITE_IOCAP_ATOMIC8K	sqlite3.h	583;"	d
SQLITE_IOCAP_ATOMIC8K	tsrc/sqlite3.h	583;"	d
SQLITE_IOCAP_IMMUTABLE	sqlite3.c	851;"	d	file:
SQLITE_IOCAP_IMMUTABLE	sqlite3.h	591;"	d
SQLITE_IOCAP_IMMUTABLE	tsrc/sqlite3.h	591;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	sqlite3.c	850;"	d	file:
SQLITE_IOCAP_POWERSAFE_OVERWRITE	sqlite3.h	590;"	d
SQLITE_IOCAP_POWERSAFE_OVERWRITE	tsrc/sqlite3.h	590;"	d
SQLITE_IOCAP_SAFE_APPEND	sqlite3.c	847;"	d	file:
SQLITE_IOCAP_SAFE_APPEND	sqlite3.h	587;"	d
SQLITE_IOCAP_SAFE_APPEND	tsrc/sqlite3.h	587;"	d
SQLITE_IOCAP_SEQUENTIAL	sqlite3.c	848;"	d	file:
SQLITE_IOCAP_SEQUENTIAL	sqlite3.h	588;"	d
SQLITE_IOCAP_SEQUENTIAL	tsrc/sqlite3.h	588;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	sqlite3.c	849;"	d	file:
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	sqlite3.h	589;"	d
SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN	tsrc/sqlite3.h	589;"	d
SQLITE_IOERR	sqlite3.c	684;"	d	file:
SQLITE_IOERR	sqlite3.h	424;"	d
SQLITE_IOERR	tsrc/sqlite3.h	424;"	d
SQLITE_IOERR_ACCESS	sqlite3.c	735;"	d	file:
SQLITE_IOERR_ACCESS	sqlite3.h	475;"	d
SQLITE_IOERR_ACCESS	tsrc/sqlite3.h	475;"	d
SQLITE_IOERR_AUTH	sqlite3.c	750;"	d	file:
SQLITE_IOERR_AUTH	sqlite3.h	490;"	d
SQLITE_IOERR_AUTH	tsrc/sqlite3.h	490;"	d
SQLITE_IOERR_BLOCKED	sqlite3.c	733;"	d	file:
SQLITE_IOERR_BLOCKED	sqlite3.h	473;"	d
SQLITE_IOERR_BLOCKED	tsrc/sqlite3.h	473;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	sqlite3.c	736;"	d	file:
SQLITE_IOERR_CHECKRESERVEDLOCK	sqlite3.h	476;"	d
SQLITE_IOERR_CHECKRESERVEDLOCK	tsrc/sqlite3.h	476;"	d
SQLITE_IOERR_CLOSE	sqlite3.c	738;"	d	file:
SQLITE_IOERR_CLOSE	sqlite3.h	478;"	d
SQLITE_IOERR_CLOSE	tsrc/sqlite3.h	478;"	d
SQLITE_IOERR_CONVPATH	sqlite3.c	748;"	d	file:
SQLITE_IOERR_CONVPATH	sqlite3.h	488;"	d
SQLITE_IOERR_CONVPATH	tsrc/sqlite3.h	488;"	d
SQLITE_IOERR_DELETE	sqlite3.c	732;"	d	file:
SQLITE_IOERR_DELETE	sqlite3.h	472;"	d
SQLITE_IOERR_DELETE	tsrc/sqlite3.h	472;"	d
SQLITE_IOERR_DELETE_NOENT	sqlite3.c	745;"	d	file:
SQLITE_IOERR_DELETE_NOENT	sqlite3.h	485;"	d
SQLITE_IOERR_DELETE_NOENT	tsrc/sqlite3.h	485;"	d
SQLITE_IOERR_DIR_CLOSE	sqlite3.c	739;"	d	file:
SQLITE_IOERR_DIR_CLOSE	sqlite3.h	479;"	d
SQLITE_IOERR_DIR_CLOSE	tsrc/sqlite3.h	479;"	d
SQLITE_IOERR_DIR_FSYNC	sqlite3.c	727;"	d	file:
SQLITE_IOERR_DIR_FSYNC	sqlite3.h	467;"	d
SQLITE_IOERR_DIR_FSYNC	tsrc/sqlite3.h	467;"	d
SQLITE_IOERR_FSTAT	sqlite3.c	729;"	d	file:
SQLITE_IOERR_FSTAT	sqlite3.h	469;"	d
SQLITE_IOERR_FSTAT	tsrc/sqlite3.h	469;"	d
SQLITE_IOERR_FSYNC	sqlite3.c	726;"	d	file:
SQLITE_IOERR_FSYNC	sqlite3.h	466;"	d
SQLITE_IOERR_FSYNC	tsrc/sqlite3.h	466;"	d
SQLITE_IOERR_GETTEMPPATH	sqlite3.c	747;"	d	file:
SQLITE_IOERR_GETTEMPPATH	sqlite3.h	487;"	d
SQLITE_IOERR_GETTEMPPATH	tsrc/sqlite3.h	487;"	d
SQLITE_IOERR_LOCK	sqlite3.c	737;"	d	file:
SQLITE_IOERR_LOCK	sqlite3.h	477;"	d
SQLITE_IOERR_LOCK	tsrc/sqlite3.h	477;"	d
SQLITE_IOERR_MMAP	sqlite3.c	746;"	d	file:
SQLITE_IOERR_MMAP	sqlite3.h	486;"	d
SQLITE_IOERR_MMAP	tsrc/sqlite3.h	486;"	d
SQLITE_IOERR_NOMEM	sqlite3.c	734;"	d	file:
SQLITE_IOERR_NOMEM	sqlite3.h	474;"	d
SQLITE_IOERR_NOMEM	tsrc/sqlite3.h	474;"	d
SQLITE_IOERR_NOMEM_BKPT	sqlite3.c	15940;"	d	file:
SQLITE_IOERR_NOMEM_BKPT	sqlite3.c	15943;"	d	file:
SQLITE_IOERR_NOMEM_BKPT	src/sqliteInt.h	3341;"	d
SQLITE_IOERR_NOMEM_BKPT	src/sqliteInt.h	3344;"	d
SQLITE_IOERR_NOMEM_BKPT	tsrc/sqliteInt.h	3341;"	d
SQLITE_IOERR_NOMEM_BKPT	tsrc/sqliteInt.h	3344;"	d
SQLITE_IOERR_RDLOCK	sqlite3.c	731;"	d	file:
SQLITE_IOERR_RDLOCK	sqlite3.h	471;"	d
SQLITE_IOERR_RDLOCK	tsrc/sqlite3.h	471;"	d
SQLITE_IOERR_READ	sqlite3.c	723;"	d	file:
SQLITE_IOERR_READ	sqlite3.h	463;"	d
SQLITE_IOERR_READ	tsrc/sqlite3.h	463;"	d
SQLITE_IOERR_SEEK	sqlite3.c	744;"	d	file:
SQLITE_IOERR_SEEK	sqlite3.h	484;"	d
SQLITE_IOERR_SEEK	tsrc/sqlite3.h	484;"	d
SQLITE_IOERR_SHMLOCK	sqlite3.c	742;"	d	file:
SQLITE_IOERR_SHMLOCK	sqlite3.h	482;"	d
SQLITE_IOERR_SHMLOCK	tsrc/sqlite3.h	482;"	d
SQLITE_IOERR_SHMMAP	sqlite3.c	743;"	d	file:
SQLITE_IOERR_SHMMAP	sqlite3.h	483;"	d
SQLITE_IOERR_SHMMAP	tsrc/sqlite3.h	483;"	d
SQLITE_IOERR_SHMOPEN	sqlite3.c	740;"	d	file:
SQLITE_IOERR_SHMOPEN	sqlite3.h	480;"	d
SQLITE_IOERR_SHMOPEN	tsrc/sqlite3.h	480;"	d
SQLITE_IOERR_SHMSIZE	sqlite3.c	741;"	d	file:
SQLITE_IOERR_SHMSIZE	sqlite3.h	481;"	d
SQLITE_IOERR_SHMSIZE	tsrc/sqlite3.h	481;"	d
SQLITE_IOERR_SHORT_READ	sqlite3.c	724;"	d	file:
SQLITE_IOERR_SHORT_READ	sqlite3.h	464;"	d
SQLITE_IOERR_SHORT_READ	tsrc/sqlite3.h	464;"	d
SQLITE_IOERR_TRUNCATE	sqlite3.c	728;"	d	file:
SQLITE_IOERR_TRUNCATE	sqlite3.h	468;"	d
SQLITE_IOERR_TRUNCATE	tsrc/sqlite3.h	468;"	d
SQLITE_IOERR_UNLOCK	sqlite3.c	730;"	d	file:
SQLITE_IOERR_UNLOCK	sqlite3.h	470;"	d
SQLITE_IOERR_UNLOCK	tsrc/sqlite3.h	470;"	d
SQLITE_IOERR_VNODE	sqlite3.c	749;"	d	file:
SQLITE_IOERR_VNODE	sqlite3.h	489;"	d
SQLITE_IOERR_VNODE	tsrc/sqlite3.h	489;"	d
SQLITE_IOERR_WRITE	sqlite3.c	725;"	d	file:
SQLITE_IOERR_WRITE	sqlite3.h	465;"	d
SQLITE_IOERR_WRITE	tsrc/sqlite3.h	465;"	d
SQLITE_IgnoreChecks	sqlite3.c	14019;"	d	file:
SQLITE_IgnoreChecks	src/sqliteInt.h	1420;"	d
SQLITE_IgnoreChecks	tsrc/sqliteInt.h	1420;"	d
SQLITE_InternChanges	sqlite3.c	14004;"	d	file:
SQLITE_InternChanges	src/sqliteInt.h	1405;"	d
SQLITE_InternChanges	tsrc/sqliteInt.h	1405;"	d
SQLITE_JUMPIFNULL	sqlite3.c	14335;"	d	file:
SQLITE_JUMPIFNULL	src/sqliteInt.h	1736;"	d
SQLITE_JUMPIFNULL	tsrc/sqliteInt.h	1736;"	d
SQLITE_LAST_ERRNO	sqlite3.c	1293;"	d	file:
SQLITE_LAST_ERRNO	sqlite3.h	1033;"	d
SQLITE_LAST_ERRNO	tsrc/sqlite3.h	1033;"	d
SQLITE_LIMIT_ATTACHED	sqlite3.c	3661;"	d	file:
SQLITE_LIMIT_ATTACHED	sqlite3.h	3401;"	d
SQLITE_LIMIT_ATTACHED	tsrc/sqlite3.h	3401;"	d
SQLITE_LIMIT_COLUMN	sqlite3.c	3656;"	d	file:
SQLITE_LIMIT_COLUMN	sqlite3.h	3396;"	d
SQLITE_LIMIT_COLUMN	tsrc/sqlite3.h	3396;"	d
SQLITE_LIMIT_COMPOUND_SELECT	sqlite3.c	3658;"	d	file:
SQLITE_LIMIT_COMPOUND_SELECT	sqlite3.h	3398;"	d
SQLITE_LIMIT_COMPOUND_SELECT	tsrc/sqlite3.h	3398;"	d
SQLITE_LIMIT_EXPR_DEPTH	sqlite3.c	3657;"	d	file:
SQLITE_LIMIT_EXPR_DEPTH	sqlite3.h	3397;"	d
SQLITE_LIMIT_EXPR_DEPTH	tsrc/sqlite3.h	3397;"	d
SQLITE_LIMIT_FUNCTION_ARG	sqlite3.c	3660;"	d	file:
SQLITE_LIMIT_FUNCTION_ARG	sqlite3.h	3400;"	d
SQLITE_LIMIT_FUNCTION_ARG	tsrc/sqlite3.h	3400;"	d
SQLITE_LIMIT_LENGTH	sqlite3.c	3654;"	d	file:
SQLITE_LIMIT_LENGTH	sqlite3.h	3394;"	d
SQLITE_LIMIT_LENGTH	tsrc/sqlite3.h	3394;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	sqlite3.c	3662;"	d	file:
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	sqlite3.h	3402;"	d
SQLITE_LIMIT_LIKE_PATTERN_LENGTH	tsrc/sqlite3.h	3402;"	d
SQLITE_LIMIT_SQL_LENGTH	sqlite3.c	3655;"	d	file:
SQLITE_LIMIT_SQL_LENGTH	sqlite3.h	3395;"	d
SQLITE_LIMIT_SQL_LENGTH	tsrc/sqlite3.h	3395;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	sqlite3.c	3664;"	d	file:
SQLITE_LIMIT_TRIGGER_DEPTH	sqlite3.h	3404;"	d
SQLITE_LIMIT_TRIGGER_DEPTH	tsrc/sqlite3.h	3404;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	sqlite3.c	3663;"	d	file:
SQLITE_LIMIT_VARIABLE_NUMBER	sqlite3.h	3403;"	d
SQLITE_LIMIT_VARIABLE_NUMBER	tsrc/sqlite3.h	3403;"	d
SQLITE_LIMIT_VDBE_OP	sqlite3.c	3659;"	d	file:
SQLITE_LIMIT_VDBE_OP	sqlite3.h	3399;"	d
SQLITE_LIMIT_VDBE_OP	tsrc/sqlite3.h	3399;"	d
SQLITE_LIMIT_WORKER_THREADS	sqlite3.c	3665;"	d	file:
SQLITE_LIMIT_WORKER_THREADS	sqlite3.h	3405;"	d
SQLITE_LIMIT_WORKER_THREADS	tsrc/sqlite3.h	3405;"	d
SQLITE_LITTLEENDIAN	sqlite3.c	11710;"	d	file:
SQLITE_LITTLEENDIAN	sqlite3.c	11717;"	d	file:
SQLITE_LITTLEENDIAN	sqlite3.c	11728;"	d	file:
SQLITE_LITTLEENDIAN	src/sqliteInt.h	776;"	d
SQLITE_LITTLEENDIAN	src/sqliteInt.h	783;"	d
SQLITE_LITTLEENDIAN	src/sqliteInt.h	794;"	d
SQLITE_LITTLEENDIAN	tsrc/sqliteInt.h	776;"	d
SQLITE_LITTLEENDIAN	tsrc/sqliteInt.h	783;"	d
SQLITE_LITTLEENDIAN	tsrc/sqliteInt.h	794;"	d
SQLITE_LOCKED	sqlite3.c	680;"	d	file:
SQLITE_LOCKED	sqlite3.h	420;"	d
SQLITE_LOCKED	tsrc/sqlite3.h	420;"	d
SQLITE_LOCKED_SHAREDCACHE	sqlite3.c	751;"	d	file:
SQLITE_LOCKED_SHAREDCACHE	sqlite3.h	491;"	d
SQLITE_LOCKED_SHAREDCACHE	tsrc/sqlite3.h	491;"	d
SQLITE_LOCKFILEEX_FLAGS	sqlite3.c	40176;"	d	file:
SQLITE_LOCKFILEEX_FLAGS	src/os_win.c	3060;"	d	file:
SQLITE_LOCKFILEEX_FLAGS	tsrc/os_win.c	3060;"	d	file:
SQLITE_LOCKFILE_FLAGS	sqlite3.c	40167;"	d	file:
SQLITE_LOCKFILE_FLAGS	src/os_win.c	3051;"	d	file:
SQLITE_LOCKFILE_FLAGS	tsrc/os_win.c	3051;"	d	file:
SQLITE_LOCK_EXCLUSIVE	sqlite3.c	864;"	d	file:
SQLITE_LOCK_EXCLUSIVE	sqlite3.h	604;"	d
SQLITE_LOCK_EXCLUSIVE	tsrc/sqlite3.h	604;"	d
SQLITE_LOCK_NONE	sqlite3.c	860;"	d	file:
SQLITE_LOCK_NONE	sqlite3.h	600;"	d
SQLITE_LOCK_NONE	tsrc/sqlite3.h	600;"	d
SQLITE_LOCK_PENDING	sqlite3.c	863;"	d	file:
SQLITE_LOCK_PENDING	sqlite3.h	603;"	d
SQLITE_LOCK_PENDING	tsrc/sqlite3.h	603;"	d
SQLITE_LOCK_RESERVED	sqlite3.c	862;"	d	file:
SQLITE_LOCK_RESERVED	sqlite3.h	602;"	d
SQLITE_LOCK_RESERVED	tsrc/sqlite3.h	602;"	d
SQLITE_LOCK_SHARED	sqlite3.c	861;"	d	file:
SQLITE_LOCK_SHARED	sqlite3.h	601;"	d
SQLITE_LOCK_SHARED	tsrc/sqlite3.h	601;"	d
SQLITE_LegacyFileFmt	sqlite3.c	14021;"	d	file:
SQLITE_LegacyFileFmt	src/sqliteInt.h	1422;"	d
SQLITE_LegacyFileFmt	tsrc/sqliteInt.h	1422;"	d
SQLITE_LoadExtFunc	sqlite3.c	14029;"	d	file:
SQLITE_LoadExtFunc	src/sqliteInt.h	1430;"	d
SQLITE_LoadExtFunc	tsrc/sqliteInt.h	1430;"	d
SQLITE_LoadExtension	sqlite3.c	14028;"	d	file:
SQLITE_LoadExtension	src/sqliteInt.h	1429;"	d
SQLITE_LoadExtension	tsrc/sqliteInt.h	1429;"	d
SQLITE_MAGIC_BUSY	sqlite3.c	14084;"	d	file:
SQLITE_MAGIC_BUSY	src/sqliteInt.h	1485;"	d
SQLITE_MAGIC_BUSY	tsrc/sqliteInt.h	1485;"	d
SQLITE_MAGIC_CLOSED	sqlite3.c	14082;"	d	file:
SQLITE_MAGIC_CLOSED	src/sqliteInt.h	1483;"	d
SQLITE_MAGIC_CLOSED	tsrc/sqliteInt.h	1483;"	d
SQLITE_MAGIC_ERROR	sqlite3.c	14085;"	d	file:
SQLITE_MAGIC_ERROR	src/sqliteInt.h	1486;"	d
SQLITE_MAGIC_ERROR	tsrc/sqliteInt.h	1486;"	d
SQLITE_MAGIC_OPEN	sqlite3.c	14081;"	d	file:
SQLITE_MAGIC_OPEN	src/sqliteInt.h	1482;"	d
SQLITE_MAGIC_OPEN	tsrc/sqliteInt.h	1482;"	d
SQLITE_MAGIC_SICK	sqlite3.c	14083;"	d	file:
SQLITE_MAGIC_SICK	src/sqliteInt.h	1484;"	d
SQLITE_MAGIC_SICK	tsrc/sqliteInt.h	1484;"	d
SQLITE_MAGIC_ZOMBIE	sqlite3.c	14086;"	d	file:
SQLITE_MAGIC_ZOMBIE	src/sqliteInt.h	1487;"	d
SQLITE_MAGIC_ZOMBIE	tsrc/sqliteInt.h	1487;"	d
SQLITE_MALLOC	sqlite3.c	20322;"	d	file:
SQLITE_MALLOC	sqlite3.c	20334;"	d	file:
SQLITE_MALLOC	src/mem1.c	62;"	d	file:
SQLITE_MALLOC	src/mem1.c	74;"	d	file:
SQLITE_MALLOC	tsrc/mem1.c	62;"	d	file:
SQLITE_MALLOC	tsrc/mem1.c	74;"	d	file:
SQLITE_MALLOCSIZE	sqlite3.c	20325;"	d	file:
SQLITE_MALLOCSIZE	sqlite3.c	20367;"	d	file:
SQLITE_MALLOCSIZE	sqlite3.c	20371;"	d	file:
SQLITE_MALLOCSIZE	src/mem1.c	107;"	d	file:
SQLITE_MALLOCSIZE	src/mem1.c	111;"	d	file:
SQLITE_MALLOCSIZE	src/mem1.c	65;"	d	file:
SQLITE_MALLOCSIZE	tsrc/mem1.c	107;"	d	file:
SQLITE_MALLOCSIZE	tsrc/mem1.c	111;"	d	file:
SQLITE_MALLOCSIZE	tsrc/mem1.c	65;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	sqlite3.c	10985;"	d	file:
SQLITE_MALLOC_SOFT_LIMIT	src/sqliteInt.h	323;"	d
SQLITE_MALLOC_SOFT_LIMIT	tsrc/sqliteInt.h	323;"	d
SQLITE_MAX_ATTACHED	sqlite3.c	10744;"	d	file:
SQLITE_MAX_ATTACHED	src/sqliteLimit.h	128;"	d
SQLITE_MAX_ATTACHED	tsrc/sqliteLimit.h	128;"	d
SQLITE_MAX_COLUMN	sqlite3.c	10661;"	d	file:
SQLITE_MAX_COLUMN	src/sqliteLimit.h	45;"	d
SQLITE_MAX_COLUMN	tsrc/sqliteLimit.h	45;"	d
SQLITE_MAX_COMPOUND_SELECT	sqlite3.c	10698;"	d	file:
SQLITE_MAX_COMPOUND_SELECT	src/sqliteLimit.h	82;"	d
SQLITE_MAX_COMPOUND_SELECT	tsrc/sqliteLimit.h	82;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	sqlite3.c	10791;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	sqlite3.c	10794;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	sqlite3.c	10795;"	d	file:
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	175;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	178;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	src/sqliteLimit.h	179;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	175;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	178;"	d
SQLITE_MAX_DEFAULT_PAGE_SIZE	tsrc/sqliteLimit.h	179;"	d
SQLITE_MAX_EXPR_DEPTH	sqlite3.c	10686;"	d	file:
SQLITE_MAX_EXPR_DEPTH	src/sqliteLimit.h	70;"	d
SQLITE_MAX_EXPR_DEPTH	tsrc/sqliteLimit.h	70;"	d
SQLITE_MAX_FILE_FORMAT	sqlite3.c	11477;"	d	file:
SQLITE_MAX_FILE_FORMAT	src/sqliteInt.h	543;"	d
SQLITE_MAX_FILE_FORMAT	tsrc/sqliteInt.h	543;"	d
SQLITE_MAX_FUNCTION_ARG	sqlite3.c	10713;"	d	file:
SQLITE_MAX_FUNCTION_ARG	src/sqliteLimit.h	97;"	d
SQLITE_MAX_FUNCTION_ARG	tsrc/sqliteLimit.h	97;"	d
SQLITE_MAX_LENGTH	sqlite3.c	10640;"	d	file:
SQLITE_MAX_LENGTH	src/sqliteLimit.h	24;"	d
SQLITE_MAX_LENGTH	tsrc/sqliteLimit.h	24;"	d
SQLITE_MAX_LIKE_PATTERN_LENGTH	ext/icu/icu.c	53;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	sqlite3.c	10815;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	sqlite3.c	163583;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	src/sqliteLimit.h	199;"	d
SQLITE_MAX_LIKE_PATTERN_LENGTH	tsrc/icu.c	53;"	d	file:
SQLITE_MAX_LIKE_PATTERN_LENGTH	tsrc/sqliteLimit.h	199;"	d
SQLITE_MAX_MMAP_SIZE	sqlite3.c	11770;"	d	file:
SQLITE_MAX_MMAP_SIZE	sqlite3.c	11771;"	d	file:
SQLITE_MAX_MMAP_SIZE	sqlite3.c	11787;"	d	file:
SQLITE_MAX_MMAP_SIZE	sqlite3.c	11789;"	d	file:
SQLITE_MAX_MMAP_SIZE	src/sqliteInt.h	836;"	d
SQLITE_MAX_MMAP_SIZE	src/sqliteInt.h	837;"	d
SQLITE_MAX_MMAP_SIZE	src/sqliteInt.h	853;"	d
SQLITE_MAX_MMAP_SIZE	src/sqliteInt.h	855;"	d
SQLITE_MAX_MMAP_SIZE	tsrc/sqliteInt.h	836;"	d
SQLITE_MAX_MMAP_SIZE	tsrc/sqliteInt.h	837;"	d
SQLITE_MAX_MMAP_SIZE	tsrc/sqliteInt.h	853;"	d
SQLITE_MAX_MMAP_SIZE	tsrc/sqliteInt.h	855;"	d
SQLITE_MAX_MMAP_SIZE_xc	sqlite3.c	11791;"	d	file:
SQLITE_MAX_MMAP_SIZE_xc	src/sqliteInt.h	857;"	d
SQLITE_MAX_MMAP_SIZE_xc	tsrc/sqliteInt.h	857;"	d
SQLITE_MAX_PAGE_COUNT	sqlite3.c	10807;"	d	file:
SQLITE_MAX_PAGE_COUNT	src/sqliteLimit.h	191;"	d
SQLITE_MAX_PAGE_COUNT	tsrc/sqliteLimit.h	191;"	d
SQLITE_MAX_PAGE_SIZE	sqlite3.c	10767;"	d	file:
SQLITE_MAX_PAGE_SIZE	sqlite3.c	10769;"	d	file:
SQLITE_MAX_PAGE_SIZE	src/sqliteLimit.h	151;"	d
SQLITE_MAX_PAGE_SIZE	src/sqliteLimit.h	153;"	d
SQLITE_MAX_PAGE_SIZE	tsrc/sqliteLimit.h	151;"	d
SQLITE_MAX_PAGE_SIZE	tsrc/sqliteLimit.h	153;"	d
SQLITE_MAX_PMASZ	sqlite3.c	84768;"	d	file:
SQLITE_MAX_PMASZ	src/vdbesort.c	155;"	d	file:
SQLITE_MAX_PMASZ	tsrc/vdbesort.c	155;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	sqlite3.c	17648;"	d	file:
SQLITE_MAX_SCHEMA_RETRY	src/vdbeInt.h	26;"	d
SQLITE_MAX_SCHEMA_RETRY	tsrc/vdbeInt.h	26;"	d
SQLITE_MAX_SQL_LENGTH	sqlite3.c	10672;"	d	file:
SQLITE_MAX_SQL_LENGTH	src/sqliteLimit.h	56;"	d
SQLITE_MAX_SQL_LENGTH	tsrc/sqliteLimit.h	56;"	d
SQLITE_MAX_SYMLINKS	sqlite3.c	29295;"	d	file:
SQLITE_MAX_SYMLINKS	src/os_unix.c	168;"	d	file:
SQLITE_MAX_SYMLINKS	tsrc/os_unix.c	168;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	sqlite3.c	10826;"	d	file:
SQLITE_MAX_TRIGGER_DEPTH	src/sqliteLimit.h	210;"	d
SQLITE_MAX_TRIGGER_DEPTH	tsrc/sqliteLimit.h	210;"	d
SQLITE_MAX_U32	sqlite3.c	11621;"	d	file:
SQLITE_MAX_U32	src/sqliteInt.h	687;"	d
SQLITE_MAX_U32	tsrc/sqliteInt.h	687;"	d
SQLITE_MAX_VARIABLE_NUMBER	sqlite3.c	10752;"	d	file:
SQLITE_MAX_VARIABLE_NUMBER	src/sqliteLimit.h	136;"	d
SQLITE_MAX_VARIABLE_NUMBER	tsrc/sqliteLimit.h	136;"	d
SQLITE_MAX_VDBE_OP	sqlite3.c	10706;"	d	file:
SQLITE_MAX_VDBE_OP	src/sqliteLimit.h	90;"	d
SQLITE_MAX_VDBE_OP	tsrc/sqliteLimit.h	90;"	d
SQLITE_MAX_WORKER_THREADS	sqlite3.c	11505;"	d	file:
SQLITE_MAX_WORKER_THREADS	sqlite3.c	11506;"	d	file:
SQLITE_MAX_WORKER_THREADS	sqlite3.c	11509;"	d	file:
SQLITE_MAX_WORKER_THREADS	sqlite3.c	11515;"	d	file:
SQLITE_MAX_WORKER_THREADS	sqlite3.c	11516;"	d	file:
SQLITE_MAX_WORKER_THREADS	src/sqliteInt.h	571;"	d
SQLITE_MAX_WORKER_THREADS	src/sqliteInt.h	572;"	d
SQLITE_MAX_WORKER_THREADS	src/sqliteInt.h	575;"	d
SQLITE_MAX_WORKER_THREADS	src/sqliteInt.h	581;"	d
SQLITE_MAX_WORKER_THREADS	src/sqliteInt.h	582;"	d
SQLITE_MAX_WORKER_THREADS	tsrc/sqliteInt.h	571;"	d
SQLITE_MAX_WORKER_THREADS	tsrc/sqliteInt.h	572;"	d
SQLITE_MAX_WORKER_THREADS	tsrc/sqliteInt.h	575;"	d
SQLITE_MAX_WORKER_THREADS	tsrc/sqliteInt.h	581;"	d
SQLITE_MAX_WORKER_THREADS	tsrc/sqliteInt.h	582;"	d
SQLITE_MINIMUM_FILE_DESCRIPTOR	sqlite3.c	29933;"	d	file:
SQLITE_MINIMUM_FILE_DESCRIPTOR	src/os_unix.c	608;"	d	file:
SQLITE_MINIMUM_FILE_DESCRIPTOR	tsrc/os_unix.c	608;"	d	file:
SQLITE_MISMATCH	sqlite3.c	694;"	d	file:
SQLITE_MISMATCH	sqlite3.h	434;"	d
SQLITE_MISMATCH	tsrc/sqlite3.h	434;"	d
SQLITE_MISUSE	sqlite3.c	695;"	d	file:
SQLITE_MISUSE	sqlite3.h	435;"	d
SQLITE_MISUSE	tsrc/sqlite3.h	435;"	d
SQLITE_MISUSE_BKPT	sqlite3.c	15934;"	d	file:
SQLITE_MISUSE_BKPT	src/sqliteInt.h	3335;"	d
SQLITE_MISUSE_BKPT	tsrc/sqliteInt.h	3335;"	d
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	sqlite3.c	11453;"	d	file:
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	src/sqliteInt.h	519;"	d
SQLITE_MIXED_ENDIAN_64BIT_FLOAT	tsrc/sqliteInt.h	519;"	d
SQLITE_MSVC_H	sqlite3.c	109;"	d	file:
SQLITE_MSVC_H	src/msvc.h	16;"	d
SQLITE_MSVC_H	tsrc/msvc.h	16;"	d
SQLITE_MULTIPLEX_CHUNK_SIZE	src/test_multiplex.c	103;"	d	file:
SQLITE_MULTIPLEX_JOURNAL_8_3_OFFSET	src/test_multiplex.c	88;"	d	file:
SQLITE_MULTIPLEX_MAX_CHUNKS	src/test_multiplex.c	113;"	d	file:
SQLITE_MULTIPLEX_VFS_NAME	src/test_multiplex.c	95;"	d	file:
SQLITE_MULTIPLEX_WAL_8_3_OFFSET	src/test_multiplex.c	89;"	d	file:
SQLITE_MUTEX_FAST	sqlite3.c	6853;"	d	file:
SQLITE_MUTEX_FAST	sqlite3.h	6593;"	d
SQLITE_MUTEX_FAST	tsrc/sqlite3.h	6593;"	d
SQLITE_MUTEX_NOOP	sqlite3.c	13634;"	d	file:
SQLITE_MUTEX_NOOP	src/mutex.h	49;"	d
SQLITE_MUTEX_NOOP	tsrc/mutex.h	49;"	d
SQLITE_MUTEX_NREF	sqlite3.c	22782;"	d	file:
SQLITE_MUTEX_NREF	sqlite3.c	22784;"	d	file:
SQLITE_MUTEX_NREF	src/mutex_unix.c	33;"	d	file:
SQLITE_MUTEX_NREF	src/mutex_unix.c	35;"	d	file:
SQLITE_MUTEX_NREF	tsrc/mutex_unix.c	33;"	d	file:
SQLITE_MUTEX_NREF	tsrc/mutex_unix.c	35;"	d	file:
SQLITE_MUTEX_OMIT	sqlite3.c	13626;"	d	file:
SQLITE_MUTEX_OMIT	src/mutex.h	41;"	d
SQLITE_MUTEX_OMIT	tsrc/mutex.h	41;"	d
SQLITE_MUTEX_PTHREADS	sqlite3.c	13630;"	d	file:
SQLITE_MUTEX_PTHREADS	src/mutex.h	45;"	d
SQLITE_MUTEX_PTHREADS	tsrc/mutex.h	45;"	d
SQLITE_MUTEX_RECURSIVE	sqlite3.c	6854;"	d	file:
SQLITE_MUTEX_RECURSIVE	sqlite3.h	6594;"	d
SQLITE_MUTEX_RECURSIVE	tsrc/sqlite3.h	6594;"	d
SQLITE_MUTEX_STATIC_APP1	sqlite3.c	6863;"	d	file:
SQLITE_MUTEX_STATIC_APP1	sqlite3.h	6603;"	d
SQLITE_MUTEX_STATIC_APP1	tsrc/sqlite3.h	6603;"	d
SQLITE_MUTEX_STATIC_APP2	sqlite3.c	6864;"	d	file:
SQLITE_MUTEX_STATIC_APP2	sqlite3.h	6604;"	d
SQLITE_MUTEX_STATIC_APP2	tsrc/sqlite3.h	6604;"	d
SQLITE_MUTEX_STATIC_APP3	sqlite3.c	6865;"	d	file:
SQLITE_MUTEX_STATIC_APP3	sqlite3.h	6605;"	d
SQLITE_MUTEX_STATIC_APP3	tsrc/sqlite3.h	6605;"	d
SQLITE_MUTEX_STATIC_LRU	sqlite3.c	6860;"	d	file:
SQLITE_MUTEX_STATIC_LRU	sqlite3.h	6600;"	d
SQLITE_MUTEX_STATIC_LRU	tsrc/sqlite3.h	6600;"	d
SQLITE_MUTEX_STATIC_LRU2	sqlite3.c	6861;"	d	file:
SQLITE_MUTEX_STATIC_LRU2	sqlite3.h	6601;"	d
SQLITE_MUTEX_STATIC_LRU2	tsrc/sqlite3.h	6601;"	d
SQLITE_MUTEX_STATIC_MASTER	sqlite3.c	6855;"	d	file:
SQLITE_MUTEX_STATIC_MASTER	sqlite3.h	6595;"	d
SQLITE_MUTEX_STATIC_MASTER	tsrc/sqlite3.h	6595;"	d
SQLITE_MUTEX_STATIC_MEM	sqlite3.c	6856;"	d	file:
SQLITE_MUTEX_STATIC_MEM	sqlite3.h	6596;"	d
SQLITE_MUTEX_STATIC_MEM	tsrc/sqlite3.h	6596;"	d
SQLITE_MUTEX_STATIC_MEM2	sqlite3.c	6857;"	d	file:
SQLITE_MUTEX_STATIC_MEM2	sqlite3.h	6597;"	d
SQLITE_MUTEX_STATIC_MEM2	tsrc/sqlite3.h	6597;"	d
SQLITE_MUTEX_STATIC_OPEN	sqlite3.c	6858;"	d	file:
SQLITE_MUTEX_STATIC_OPEN	sqlite3.h	6598;"	d
SQLITE_MUTEX_STATIC_OPEN	tsrc/sqlite3.h	6598;"	d
SQLITE_MUTEX_STATIC_PMEM	sqlite3.c	6862;"	d	file:
SQLITE_MUTEX_STATIC_PMEM	sqlite3.h	6602;"	d
SQLITE_MUTEX_STATIC_PMEM	tsrc/sqlite3.h	6602;"	d
SQLITE_MUTEX_STATIC_PRNG	sqlite3.c	6859;"	d	file:
SQLITE_MUTEX_STATIC_PRNG	sqlite3.h	6599;"	d
SQLITE_MUTEX_STATIC_PRNG	tsrc/sqlite3.h	6599;"	d
SQLITE_MUTEX_STATIC_VFS1	sqlite3.c	6866;"	d	file:
SQLITE_MUTEX_STATIC_VFS1	sqlite3.h	6606;"	d
SQLITE_MUTEX_STATIC_VFS1	tsrc/sqlite3.h	6606;"	d
SQLITE_MUTEX_STATIC_VFS2	sqlite3.c	6867;"	d	file:
SQLITE_MUTEX_STATIC_VFS2	sqlite3.h	6607;"	d
SQLITE_MUTEX_STATIC_VFS2	tsrc/sqlite3.h	6607;"	d
SQLITE_MUTEX_STATIC_VFS3	sqlite3.c	6868;"	d	file:
SQLITE_MUTEX_STATIC_VFS3	sqlite3.h	6608;"	d
SQLITE_MUTEX_STATIC_VFS3	tsrc/sqlite3.h	6608;"	d
SQLITE_MUTEX_W32	sqlite3.c	13632;"	d	file:
SQLITE_MUTEX_W32	src/mutex.h	47;"	d
SQLITE_MUTEX_W32	tsrc/mutex.h	47;"	d
SQLITE_MX_JUMP_OPCODE	opcodes.h	205;"	d
SQLITE_MX_JUMP_OPCODE	sqlite3.c	12730;"	d	file:
SQLITE_MX_JUMP_OPCODE	tsrc/opcodes.h	205;"	d
SQLITE_NEED_ERR_NAME	sqlite3.c	11131;"	d	file:
SQLITE_NEED_ERR_NAME	sqlite3.c	11133;"	d	file:
SQLITE_NEED_ERR_NAME	src/sqliteInt.h	469;"	d
SQLITE_NEED_ERR_NAME	src/sqliteInt.h	471;"	d
SQLITE_NEED_ERR_NAME	tsrc/sqliteInt.h	469;"	d
SQLITE_NEED_ERR_NAME	tsrc/sqliteInt.h	471;"	d
SQLITE_NOINLINE	sqlite3.c	10886;"	d	file:
SQLITE_NOINLINE	sqlite3.c	10888;"	d	file:
SQLITE_NOINLINE	sqlite3.c	10890;"	d	file:
SQLITE_NOINLINE	src/sqliteInt.h	224;"	d
SQLITE_NOINLINE	src/sqliteInt.h	226;"	d
SQLITE_NOINLINE	src/sqliteInt.h	228;"	d
SQLITE_NOINLINE	tsrc/sqliteInt.h	224;"	d
SQLITE_NOINLINE	tsrc/sqliteInt.h	226;"	d
SQLITE_NOINLINE	tsrc/sqliteInt.h	228;"	d
SQLITE_NOLFS	sqlite3.c	696;"	d	file:
SQLITE_NOLFS	sqlite3.h	436;"	d
SQLITE_NOLFS	tsrc/sqlite3.h	436;"	d
SQLITE_NOMEM	sqlite3.c	681;"	d	file:
SQLITE_NOMEM	sqlite3.h	421;"	d
SQLITE_NOMEM	tsrc/sqlite3.h	421;"	d
SQLITE_NOMEM_BKPT	sqlite3.c	15939;"	d	file:
SQLITE_NOMEM_BKPT	sqlite3.c	15942;"	d	file:
SQLITE_NOMEM_BKPT	src/sqliteInt.h	3340;"	d
SQLITE_NOMEM_BKPT	src/sqliteInt.h	3343;"	d
SQLITE_NOMEM_BKPT	tsrc/sqliteInt.h	3340;"	d
SQLITE_NOMEM_BKPT	tsrc/sqliteInt.h	3343;"	d
SQLITE_NOTADB	sqlite3.c	700;"	d	file:
SQLITE_NOTADB	sqlite3.h	440;"	d
SQLITE_NOTADB	tsrc/sqlite3.h	440;"	d
SQLITE_NOTFOUND	sqlite3.c	686;"	d	file:
SQLITE_NOTFOUND	sqlite3.h	426;"	d
SQLITE_NOTFOUND	tsrc/sqlite3.h	426;"	d
SQLITE_NOTICE	sqlite3.c	701;"	d	file:
SQLITE_NOTICE	sqlite3.h	441;"	d
SQLITE_NOTICE	tsrc/sqlite3.h	441;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	sqlite3.c	775;"	d	file:
SQLITE_NOTICE_RECOVER_ROLLBACK	sqlite3.h	515;"	d
SQLITE_NOTICE_RECOVER_ROLLBACK	tsrc/sqlite3.h	515;"	d
SQLITE_NOTICE_RECOVER_WAL	sqlite3.c	774;"	d	file:
SQLITE_NOTICE_RECOVER_WAL	sqlite3.h	514;"	d
SQLITE_NOTICE_RECOVER_WAL	tsrc/sqlite3.h	514;"	d
SQLITE_NOTNULL	sqlite3.c	14338;"	d	file:
SQLITE_NOTNULL	src/sqliteInt.h	1739;"	d
SQLITE_NOTNULL	tsrc/sqliteInt.h	1739;"	d
SQLITE_NULL	sqlite3.c	4370;"	d	file:
SQLITE_NULL	sqlite3.h	4110;"	d
SQLITE_NULL	tsrc/sqlite3.h	4110;"	d
SQLITE_NULLEQ	sqlite3.c	14337;"	d	file:
SQLITE_NULLEQ	src/sqliteInt.h	1738;"	d
SQLITE_NULLEQ	tsrc/sqliteInt.h	1738;"	d
SQLITE_N_BTREE_META	sqlite3.c	12011;"	d	file:
SQLITE_N_BTREE_META	src/btree.h	22;"	d
SQLITE_N_BTREE_META	tsrc/btree.h	22;"	d
SQLITE_N_COLCACHE	sqlite3.c	15409;"	d	file:
SQLITE_N_COLCACHE	src/sqliteInt.h	2810;"	d
SQLITE_N_COLCACHE	tsrc/sqliteInt.h	2810;"	d
SQLITE_N_KEYWORD	keywordhash.h	285;"	d
SQLITE_N_KEYWORD	sqlite3.c	135648;"	d	file:
SQLITE_N_KEYWORD	tsrc/keywordhash.h	285;"	d
SQLITE_N_LIMIT	sqlite3.c	13764;"	d	file:
SQLITE_N_LIMIT	src/sqliteInt.h	1165;"	d
SQLITE_N_LIMIT	tsrc/sqliteInt.h	1165;"	d
SQLITE_NullCallback	sqlite3.c	14013;"	d	file:
SQLITE_NullCallback	src/sqliteInt.h	1414;"	d
SQLITE_NullCallback	tsrc/sqliteInt.h	1414;"	d
SQLITE_OK	sqlite3.c	673;"	d	file:
SQLITE_OK	sqlite3.h	413;"	d
SQLITE_OK	tsrc/sqlite3.h	413;"	d
SQLITE_OK_LOAD_PERMANENTLY	sqlite3.c	778;"	d	file:
SQLITE_OK_LOAD_PERMANENTLY	sqlite3.h	518;"	d
SQLITE_OK_LOAD_PERMANENTLY	tsrc/sqlite3.h	518;"	d
SQLITE_OMIT_DATETIME_FUNCS	sqlite3.c	11451;"	d	file:
SQLITE_OMIT_DATETIME_FUNCS	src/sqliteInt.h	517;"	d
SQLITE_OMIT_DATETIME_FUNCS	tsrc/sqliteInt.h	517;"	d
SQLITE_OMIT_LOAD_EXTENSION	shell.c	31;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	sqlite3.c	161;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	src/shell.c	31;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	src/vxworks.h	23;"	d
SQLITE_OMIT_LOAD_EXTENSION	tsrc/shell.c	31;"	d	file:
SQLITE_OMIT_LOAD_EXTENSION	tsrc/vxworks.h	23;"	d
SQLITE_OMIT_POPEN	shell.c	122;"	d	file:
SQLITE_OMIT_POPEN	src/shell.c	122;"	d	file:
SQLITE_OMIT_POPEN	tsrc/shell.c	122;"	d	file:
SQLITE_OMIT_TRACE	sqlite3.c	11452;"	d	file:
SQLITE_OMIT_TRACE	src/sqliteInt.h	518;"	d
SQLITE_OMIT_TRACE	tsrc/sqliteInt.h	518;"	d
SQLITE_OPEN_AUTOPROXY	sqlite3.c	792;"	d	file:
SQLITE_OPEN_AUTOPROXY	sqlite3.h	532;"	d
SQLITE_OPEN_AUTOPROXY	tsrc/sqlite3.h	532;"	d
SQLITE_OPEN_CREATE	sqlite3.c	789;"	d	file:
SQLITE_OPEN_CREATE	sqlite3.h	529;"	d
SQLITE_OPEN_CREATE	tsrc/sqlite3.h	529;"	d
SQLITE_OPEN_DELETEONCLOSE	sqlite3.c	790;"	d	file:
SQLITE_OPEN_DELETEONCLOSE	sqlite3.h	530;"	d
SQLITE_OPEN_DELETEONCLOSE	tsrc/sqlite3.h	530;"	d
SQLITE_OPEN_EXCLUSIVE	sqlite3.c	791;"	d	file:
SQLITE_OPEN_EXCLUSIVE	sqlite3.h	531;"	d
SQLITE_OPEN_EXCLUSIVE	tsrc/sqlite3.h	531;"	d
SQLITE_OPEN_FULLMUTEX	sqlite3.c	803;"	d	file:
SQLITE_OPEN_FULLMUTEX	sqlite3.h	543;"	d
SQLITE_OPEN_FULLMUTEX	tsrc/sqlite3.h	543;"	d
SQLITE_OPEN_MAIN_DB	sqlite3.c	795;"	d	file:
SQLITE_OPEN_MAIN_DB	sqlite3.h	535;"	d
SQLITE_OPEN_MAIN_DB	tsrc/sqlite3.h	535;"	d
SQLITE_OPEN_MAIN_JOURNAL	sqlite3.c	798;"	d	file:
SQLITE_OPEN_MAIN_JOURNAL	sqlite3.h	538;"	d
SQLITE_OPEN_MAIN_JOURNAL	tsrc/sqlite3.h	538;"	d
SQLITE_OPEN_MASTER_JOURNAL	sqlite3.c	801;"	d	file:
SQLITE_OPEN_MASTER_JOURNAL	sqlite3.h	541;"	d
SQLITE_OPEN_MASTER_JOURNAL	tsrc/sqlite3.h	541;"	d
SQLITE_OPEN_MEMORY	sqlite3.c	794;"	d	file:
SQLITE_OPEN_MEMORY	sqlite3.h	534;"	d
SQLITE_OPEN_MEMORY	tsrc/sqlite3.h	534;"	d
SQLITE_OPEN_NOMUTEX	sqlite3.c	802;"	d	file:
SQLITE_OPEN_NOMUTEX	sqlite3.h	542;"	d
SQLITE_OPEN_NOMUTEX	tsrc/sqlite3.h	542;"	d
SQLITE_OPEN_PRIVATECACHE	sqlite3.c	805;"	d	file:
SQLITE_OPEN_PRIVATECACHE	sqlite3.h	545;"	d
SQLITE_OPEN_PRIVATECACHE	tsrc/sqlite3.h	545;"	d
SQLITE_OPEN_READONLY	sqlite3.c	787;"	d	file:
SQLITE_OPEN_READONLY	sqlite3.h	527;"	d
SQLITE_OPEN_READONLY	tsrc/sqlite3.h	527;"	d
SQLITE_OPEN_READWRITE	sqlite3.c	788;"	d	file:
SQLITE_OPEN_READWRITE	sqlite3.h	528;"	d
SQLITE_OPEN_READWRITE	tsrc/sqlite3.h	528;"	d
SQLITE_OPEN_SHAREDCACHE	sqlite3.c	804;"	d	file:
SQLITE_OPEN_SHAREDCACHE	sqlite3.h	544;"	d
SQLITE_OPEN_SHAREDCACHE	tsrc/sqlite3.h	544;"	d
SQLITE_OPEN_SUBJOURNAL	sqlite3.c	800;"	d	file:
SQLITE_OPEN_SUBJOURNAL	sqlite3.h	540;"	d
SQLITE_OPEN_SUBJOURNAL	tsrc/sqlite3.h	540;"	d
SQLITE_OPEN_TEMP_DB	sqlite3.c	796;"	d	file:
SQLITE_OPEN_TEMP_DB	sqlite3.h	536;"	d
SQLITE_OPEN_TEMP_DB	tsrc/sqlite3.h	536;"	d
SQLITE_OPEN_TEMP_JOURNAL	sqlite3.c	799;"	d	file:
SQLITE_OPEN_TEMP_JOURNAL	sqlite3.h	539;"	d
SQLITE_OPEN_TEMP_JOURNAL	tsrc/sqlite3.h	539;"	d
SQLITE_OPEN_TRANSIENT_DB	sqlite3.c	797;"	d	file:
SQLITE_OPEN_TRANSIENT_DB	sqlite3.h	537;"	d
SQLITE_OPEN_TRANSIENT_DB	tsrc/sqlite3.h	537;"	d
SQLITE_OPEN_URI	sqlite3.c	793;"	d	file:
SQLITE_OPEN_URI	sqlite3.h	533;"	d
SQLITE_OPEN_URI	tsrc/sqlite3.h	533;"	d
SQLITE_OPEN_WAL	sqlite3.c	806;"	d	file:
SQLITE_OPEN_WAL	sqlite3.h	546;"	d
SQLITE_OPEN_WAL	tsrc/sqlite3.h	546;"	d
SQLITE_OS_OTHER	sqlite3.c	13371;"	d	file:
SQLITE_OS_OTHER	sqlite3.c	13375;"	d	file:
SQLITE_OS_OTHER	sqlite3.c	159;"	d	file:
SQLITE_OS_OTHER	src/os_setup.h	34;"	d
SQLITE_OS_OTHER	src/os_setup.h	38;"	d
SQLITE_OS_OTHER	src/vxworks.h	21;"	d
SQLITE_OS_OTHER	tsrc/os_setup.h	34;"	d
SQLITE_OS_OTHER	tsrc/os_setup.h	38;"	d
SQLITE_OS_OTHER	tsrc/vxworks.h	21;"	d
SQLITE_OS_SETUP_H	sqlite3.c	13354;"	d	file:
SQLITE_OS_SETUP_H	src/os_setup.h	17;"	d
SQLITE_OS_SETUP_H	tsrc/os_setup.h	17;"	d
SQLITE_OS_UNIX	sqlite3.c	13366;"	d	file:
SQLITE_OS_UNIX	sqlite3.c	13367;"	d	file:
SQLITE_OS_UNIX	sqlite3.c	13380;"	d	file:
SQLITE_OS_UNIX	sqlite3.c	13383;"	d	file:
SQLITE_OS_UNIX	sqlite3.c	13386;"	d	file:
SQLITE_OS_UNIX	src/os_setup.h	29;"	d
SQLITE_OS_UNIX	src/os_setup.h	30;"	d
SQLITE_OS_UNIX	src/os_setup.h	43;"	d
SQLITE_OS_UNIX	src/os_setup.h	46;"	d
SQLITE_OS_UNIX	src/os_setup.h	49;"	d
SQLITE_OS_UNIX	tsrc/os_setup.h	29;"	d
SQLITE_OS_UNIX	tsrc/os_setup.h	30;"	d
SQLITE_OS_UNIX	tsrc/os_setup.h	43;"	d
SQLITE_OS_UNIX	tsrc/os_setup.h	46;"	d
SQLITE_OS_UNIX	tsrc/os_setup.h	49;"	d
SQLITE_OS_WIN	sqlite3.c	13368;"	d	file:
SQLITE_OS_WIN	sqlite3.c	13369;"	d	file:
SQLITE_OS_WIN	sqlite3.c	13379;"	d	file:
SQLITE_OS_WIN	sqlite3.c	13382;"	d	file:
SQLITE_OS_WIN	sqlite3.c	13390;"	d	file:
SQLITE_OS_WIN	src/os_setup.h	31;"	d
SQLITE_OS_WIN	src/os_setup.h	32;"	d
SQLITE_OS_WIN	src/os_setup.h	42;"	d
SQLITE_OS_WIN	src/os_setup.h	45;"	d
SQLITE_OS_WIN	src/os_setup.h	53;"	d
SQLITE_OS_WIN	tsrc/os_setup.h	31;"	d
SQLITE_OS_WIN	tsrc/os_setup.h	32;"	d
SQLITE_OS_WIN	tsrc/os_setup.h	42;"	d
SQLITE_OS_WIN	tsrc/os_setup.h	45;"	d
SQLITE_OS_WIN	tsrc/os_setup.h	53;"	d
SQLITE_OS_WINCE	sqlite3.c	23417;"	d	file:
SQLITE_OS_WINCE	sqlite3.c	23419;"	d	file:
SQLITE_OS_WINCE	src/os_win.h	54;"	d
SQLITE_OS_WINCE	src/os_win.h	56;"	d
SQLITE_OS_WINCE	tsrc/os_win.h	54;"	d
SQLITE_OS_WINCE	tsrc/os_win.h	56;"	d
SQLITE_OS_WINNT	sqlite3.c	23409;"	d	file:
SQLITE_OS_WINNT	src/os_win.h	46;"	d
SQLITE_OS_WINNT	tsrc/os_win.h	46;"	d
SQLITE_OS_WINRT	sqlite3.c	23427;"	d	file:
SQLITE_OS_WINRT	src/os_win.h	64;"	d
SQLITE_OS_WINRT	tsrc/os_win.h	64;"	d
SQLITE_OS_WIN_H	sqlite3.c	23379;"	d	file:
SQLITE_OS_WIN_H	src/os_win.h	16;"	d
SQLITE_OS_WIN_H	tsrc/os_win.h	16;"	d
SQLITE_OS_WIN_THREADS	sqlite3.c	23446;"	d	file:
SQLITE_OS_WIN_THREADS	sqlite3.c	23448;"	d	file:
SQLITE_OS_WIN_THREADS	src/os_win.h	83;"	d
SQLITE_OS_WIN_THREADS	src/os_win.h	85;"	d
SQLITE_OS_WIN_THREADS	tsrc/os_win.h	83;"	d
SQLITE_OS_WIN_THREADS	tsrc/os_win.h	85;"	d
SQLITE_OmitNoopJoin	sqlite3.c	14054;"	d	file:
SQLITE_OmitNoopJoin	src/sqliteInt.h	1455;"	d
SQLITE_OmitNoopJoin	tsrc/sqliteInt.h	1455;"	d
SQLITE_OrderByIdxJoin	sqlite3.c	14051;"	d	file:
SQLITE_OrderByIdxJoin	src/sqliteInt.h	1452;"	d
SQLITE_OrderByIdxJoin	tsrc/sqliteInt.h	1452;"	d
SQLITE_PAGER_H	sqlite3.c	12900;"	d	file:
SQLITE_PAGER_H	src/pager.h	18;"	d
SQLITE_PAGER_H	tsrc/pager.h	18;"	d
SQLITE_PERM	sqlite3.c	677;"	d	file:
SQLITE_PERM	sqlite3.h	417;"	d
SQLITE_PERM	tsrc/sqlite3.h	417;"	d
SQLITE_POWERSAFE_OVERWRITE	sqlite3.c	10935;"	d	file:
SQLITE_POWERSAFE_OVERWRITE	src/sqliteInt.h	273;"	d
SQLITE_POWERSAFE_OVERWRITE	tsrc/sqliteInt.h	273;"	d
SQLITE_PRAGMA	sqlite3.c	3016;"	d	file:
SQLITE_PRAGMA	sqlite3.h	2756;"	d
SQLITE_PRAGMA	tsrc/sqlite3.h	2756;"	d
SQLITE_PRINTF_INTERNAL	sqlite3.c	15752;"	d	file:
SQLITE_PRINTF_INTERNAL	src/sqliteInt.h	3153;"	d
SQLITE_PRINTF_INTERNAL	tsrc/sqliteInt.h	3153;"	d
SQLITE_PRINTF_MALLOCED	sqlite3.c	15754;"	d	file:
SQLITE_PRINTF_MALLOCED	src/sqliteInt.h	3155;"	d
SQLITE_PRINTF_MALLOCED	tsrc/sqliteInt.h	3155;"	d
SQLITE_PRINTF_SQLFUNC	sqlite3.c	15753;"	d	file:
SQLITE_PRINTF_SQLFUNC	src/sqliteInt.h	3154;"	d
SQLITE_PRINTF_SQLFUNC	tsrc/sqliteInt.h	3154;"	d
SQLITE_PRINT_BUF_SIZE	sqlite3.c	24824;"	d	file:
SQLITE_PRINT_BUF_SIZE	src/printf.c	165;"	d	file:
SQLITE_PRINT_BUF_SIZE	tsrc/printf.c	165;"	d	file:
SQLITE_PRIVATE	sqlite3.c	23;"	d	file:
SQLITE_PROTOCOL	sqlite3.c	689;"	d	file:
SQLITE_PROTOCOL	sqlite3.h	429;"	d
SQLITE_PROTOCOL	tsrc/sqlite3.h	429;"	d
SQLITE_PTRSIZE	sqlite3.c	11665;"	d	file:
SQLITE_PTRSIZE	sqlite3.c	11668;"	d	file:
SQLITE_PTRSIZE	sqlite3.c	11670;"	d	file:
SQLITE_PTRSIZE	src/sqliteInt.h	731;"	d
SQLITE_PTRSIZE	src/sqliteInt.h	734;"	d
SQLITE_PTRSIZE	src/sqliteInt.h	736;"	d
SQLITE_PTRSIZE	tsrc/sqliteInt.h	731;"	d
SQLITE_PTRSIZE	tsrc/sqliteInt.h	734;"	d
SQLITE_PTRSIZE	tsrc/sqliteInt.h	736;"	d
SQLITE_PTR_TO_INT	sqlite3.c	10869;"	d	file:
SQLITE_PTR_TO_INT	sqlite3.c	10872;"	d	file:
SQLITE_PTR_TO_INT	sqlite3.c	10875;"	d	file:
SQLITE_PTR_TO_INT	sqlite3.c	10878;"	d	file:
SQLITE_PTR_TO_INT	src/sqliteInt.h	207;"	d
SQLITE_PTR_TO_INT	src/sqliteInt.h	210;"	d
SQLITE_PTR_TO_INT	src/sqliteInt.h	213;"	d
SQLITE_PTR_TO_INT	src/sqliteInt.h	216;"	d
SQLITE_PTR_TO_INT	tsrc/sqliteInt.h	207;"	d
SQLITE_PTR_TO_INT	tsrc/sqliteInt.h	210;"	d
SQLITE_PTR_TO_INT	tsrc/sqliteInt.h	213;"	d
SQLITE_PTR_TO_INT	tsrc/sqliteInt.h	216;"	d
SQLITE_PreferBuiltin	sqlite3.c	14027;"	d	file:
SQLITE_PreferBuiltin	src/sqliteInt.h	1428;"	d
SQLITE_PreferBuiltin	tsrc/sqliteInt.h	1428;"	d
SQLITE_QueryFlattener	sqlite3.c	14044;"	d	file:
SQLITE_QueryFlattener	src/sqliteInt.h	1445;"	d
SQLITE_QueryFlattener	tsrc/sqliteInt.h	1445;"	d
SQLITE_QueryOnly	sqlite3.c	14032;"	d	file:
SQLITE_QueryOnly	src/sqliteInt.h	1433;"	d
SQLITE_QueryOnly	tsrc/sqliteInt.h	1433;"	d
SQLITE_RANGE	sqlite3.c	699;"	d	file:
SQLITE_RANGE	sqlite3.h	439;"	d
SQLITE_RANGE	tsrc/sqlite3.h	439;"	d
SQLITE_RBU_STATE_CHECKPOINT	ext/rbu/sqlite3rbu.h	509;"	d
SQLITE_RBU_STATE_CHECKPOINT	sqlite3.c	164946;"	d	file:
SQLITE_RBU_STATE_CHECKPOINT	tsrc/sqlite3rbu.h	509;"	d
SQLITE_RBU_STATE_DONE	ext/rbu/sqlite3rbu.h	510;"	d
SQLITE_RBU_STATE_DONE	sqlite3.c	164947;"	d	file:
SQLITE_RBU_STATE_DONE	tsrc/sqlite3rbu.h	510;"	d
SQLITE_RBU_STATE_ERROR	ext/rbu/sqlite3rbu.h	511;"	d
SQLITE_RBU_STATE_ERROR	sqlite3.c	164948;"	d	file:
SQLITE_RBU_STATE_ERROR	tsrc/sqlite3rbu.h	511;"	d
SQLITE_RBU_STATE_MOVE	ext/rbu/sqlite3rbu.h	508;"	d
SQLITE_RBU_STATE_MOVE	sqlite3.c	164945;"	d	file:
SQLITE_RBU_STATE_MOVE	tsrc/sqlite3rbu.h	508;"	d
SQLITE_RBU_STATE_OAL	ext/rbu/sqlite3rbu.h	507;"	d
SQLITE_RBU_STATE_OAL	sqlite3.c	164944;"	d	file:
SQLITE_RBU_STATE_OAL	tsrc/sqlite3rbu.h	507;"	d
SQLITE_RBU_UPDATE_CACHESIZE	ext/rbu/sqlite3rbu.c	97;"	d	file:
SQLITE_RBU_UPDATE_CACHESIZE	sqlite3.c	165020;"	d	file:
SQLITE_RBU_UPDATE_CACHESIZE	tsrc/sqlite3rbu.c	97;"	d	file:
SQLITE_READ	sqlite3.c	3017;"	d	file:
SQLITE_READ	sqlite3.h	2757;"	d
SQLITE_READ	tsrc/sqlite3.h	2757;"	d
SQLITE_READONLY	sqlite3.c	682;"	d	file:
SQLITE_READONLY	sqlite3.h	422;"	d
SQLITE_READONLY	tsrc/sqlite3.h	422;"	d
SQLITE_READONLY_CANTLOCK	sqlite3.c	760;"	d	file:
SQLITE_READONLY_CANTLOCK	sqlite3.h	500;"	d
SQLITE_READONLY_CANTLOCK	tsrc/sqlite3.h	500;"	d
SQLITE_READONLY_DBMOVED	sqlite3.c	762;"	d	file:
SQLITE_READONLY_DBMOVED	sqlite3.h	502;"	d
SQLITE_READONLY_DBMOVED	tsrc/sqlite3.h	502;"	d
SQLITE_READONLY_RECOVERY	sqlite3.c	759;"	d	file:
SQLITE_READONLY_RECOVERY	sqlite3.h	499;"	d
SQLITE_READONLY_RECOVERY	tsrc/sqlite3.h	499;"	d
SQLITE_READONLY_ROLLBACK	sqlite3.c	761;"	d	file:
SQLITE_READONLY_ROLLBACK	sqlite3.h	501;"	d
SQLITE_READONLY_ROLLBACK	tsrc/sqlite3.h	501;"	d
SQLITE_REALLOC	sqlite3.c	20324;"	d	file:
SQLITE_REALLOC	sqlite3.c	20336;"	d	file:
SQLITE_REALLOC	src/mem1.c	64;"	d	file:
SQLITE_REALLOC	src/mem1.c	76;"	d	file:
SQLITE_REALLOC	tsrc/mem1.c	64;"	d	file:
SQLITE_REALLOC	tsrc/mem1.c	76;"	d	file:
SQLITE_RECURSIVE	sqlite3.c	3031;"	d	file:
SQLITE_RECURSIVE	sqlite3.h	2771;"	d
SQLITE_RECURSIVE	tsrc/sqlite3.h	2771;"	d
SQLITE_REINDEX	sqlite3.c	3024;"	d	file:
SQLITE_REINDEX	sqlite3.h	2764;"	d
SQLITE_REINDEX	tsrc/sqlite3.h	2764;"	d
SQLITE_REPLACE	sqlite3.c	8234;"	d	file:
SQLITE_REPLACE	sqlite3.h	7974;"	d
SQLITE_REPLACE	tsrc/sqlite3.h	7974;"	d
SQLITE_ROLLBACK	sqlite3.c	8230;"	d	file:
SQLITE_ROLLBACK	sqlite3.h	7970;"	d
SQLITE_ROLLBACK	tsrc/sqlite3.h	7970;"	d
SQLITE_ROW	sqlite3.c	703;"	d	file:
SQLITE_ROW	sqlite3.h	443;"	d
SQLITE_ROW	tsrc/sqlite3.h	443;"	d
SQLITE_ReadUncommitted	sqlite3.c	14020;"	d	file:
SQLITE_ReadUncommitted	src/sqliteInt.h	1421;"	d
SQLITE_ReadUncommitted	tsrc/sqliteInt.h	1421;"	d
SQLITE_RecTriggers	sqlite3.c	14024;"	d	file:
SQLITE_RecTriggers	src/sqliteInt.h	1425;"	d
SQLITE_RecTriggers	tsrc/sqliteInt.h	1425;"	d
SQLITE_RecoveryMode	sqlite3.c	14022;"	d	file:
SQLITE_RecoveryMode	src/sqliteInt.h	1423;"	d
SQLITE_RecoveryMode	tsrc/sqliteInt.h	1423;"	d
SQLITE_ReverseOrder	sqlite3.c	14023;"	d	file:
SQLITE_ReverseOrder	src/sqliteInt.h	1424;"	d
SQLITE_ReverseOrder	tsrc/sqliteInt.h	1424;"	d
SQLITE_SAVEPOINT	sqlite3.c	3029;"	d	file:
SQLITE_SAVEPOINT	sqlite3.h	2769;"	d
SQLITE_SAVEPOINT	tsrc/sqlite3.h	2769;"	d
SQLITE_SCANSTAT_EST	sqlite3.c	8285;"	d	file:
SQLITE_SCANSTAT_EST	sqlite3.h	8025;"	d
SQLITE_SCANSTAT_EST	tsrc/sqlite3.h	8025;"	d
SQLITE_SCANSTAT_EXPLAIN	sqlite3.c	8287;"	d	file:
SQLITE_SCANSTAT_EXPLAIN	sqlite3.h	8027;"	d
SQLITE_SCANSTAT_EXPLAIN	tsrc/sqlite3.h	8027;"	d
SQLITE_SCANSTAT_NAME	sqlite3.c	8286;"	d	file:
SQLITE_SCANSTAT_NAME	sqlite3.h	8026;"	d
SQLITE_SCANSTAT_NAME	tsrc/sqlite3.h	8026;"	d
SQLITE_SCANSTAT_NLOOP	sqlite3.c	8283;"	d	file:
SQLITE_SCANSTAT_NLOOP	sqlite3.h	8023;"	d
SQLITE_SCANSTAT_NLOOP	tsrc/sqlite3.h	8023;"	d
SQLITE_SCANSTAT_NVISIT	sqlite3.c	8284;"	d	file:
SQLITE_SCANSTAT_NVISIT	sqlite3.h	8024;"	d
SQLITE_SCANSTAT_NVISIT	tsrc/sqlite3.h	8024;"	d
SQLITE_SCANSTAT_SELECTID	sqlite3.c	8288;"	d	file:
SQLITE_SCANSTAT_SELECTID	sqlite3.h	8028;"	d
SQLITE_SCANSTAT_SELECTID	tsrc/sqlite3.h	8028;"	d
SQLITE_SCHEMA	sqlite3.c	691;"	d	file:
SQLITE_SCHEMA	sqlite3.h	431;"	d
SQLITE_SCHEMA	tsrc/sqlite3.h	431;"	d
SQLITE_SELECT	sqlite3.c	3018;"	d	file:
SQLITE_SELECT	sqlite3.h	2758;"	d
SQLITE_SELECT	tsrc/sqlite3.h	2758;"	d
SQLITE_SERIES_CONSTRAINT_VERIFY	ext/misc/series.c	225;"	d	file:
SQLITE_SET_LOCKPROXYFILE	sqlite3.c	1292;"	d	file:
SQLITE_SET_LOCKPROXYFILE	sqlite3.h	1032;"	d
SQLITE_SET_LOCKPROXYFILE	tsrc/sqlite3.h	1032;"	d
SQLITE_SHELL_IS_UTF8	shell.c	5209;"	d	file:
SQLITE_SHELL_IS_UTF8	shell.c	5211;"	d	file:
SQLITE_SHELL_IS_UTF8	src/shell.c	5209;"	d	file:
SQLITE_SHELL_IS_UTF8	src/shell.c	5211;"	d	file:
SQLITE_SHELL_IS_UTF8	tsrc/shell.c	5209;"	d	file:
SQLITE_SHELL_IS_UTF8	tsrc/shell.c	5211;"	d	file:
SQLITE_SHM_EXCLUSIVE	sqlite3.c	1565;"	d	file:
SQLITE_SHM_EXCLUSIVE	sqlite3.h	1305;"	d
SQLITE_SHM_EXCLUSIVE	tsrc/sqlite3.h	1305;"	d
SQLITE_SHM_LOCK	sqlite3.c	1563;"	d	file:
SQLITE_SHM_LOCK	sqlite3.h	1303;"	d
SQLITE_SHM_LOCK	tsrc/sqlite3.h	1303;"	d
SQLITE_SHM_NLOCK	sqlite3.c	1575;"	d	file:
SQLITE_SHM_NLOCK	sqlite3.h	1315;"	d
SQLITE_SHM_NLOCK	tsrc/sqlite3.h	1315;"	d
SQLITE_SHM_SHARED	sqlite3.c	1564;"	d	file:
SQLITE_SHM_SHARED	sqlite3.h	1304;"	d
SQLITE_SHM_SHARED	tsrc/sqlite3.h	1304;"	d
SQLITE_SHM_UNLOCK	sqlite3.c	1562;"	d	file:
SQLITE_SHM_UNLOCK	sqlite3.h	1302;"	d
SQLITE_SHM_UNLOCK	tsrc/sqlite3.h	1302;"	d
SQLITE_SKIP_UTF8	sqlite3.c	15917;"	d	file:
SQLITE_SKIP_UTF8	src/sqliteInt.h	3318;"	d
SQLITE_SKIP_UTF8	tsrc/sqliteInt.h	3318;"	d
SQLITE_SORTER_PMASZ	sqlite3.c	17026;"	d	file:
SQLITE_SORTER_PMASZ	src/global.c	160;"	d	file:
SQLITE_SORTER_PMASZ	tsrc/global.c	160;"	d	file:
SQLITE_SOURCE_ID	sqlite3.c	385;"	d	file:
SQLITE_SOURCE_ID	sqlite3.h	125;"	d
SQLITE_SOURCE_ID	tsrc/sqlite3.h	125;"	d
SQLITE_SO_ASC	sqlite3.c	14294;"	d	file:
SQLITE_SO_ASC	src/sqliteInt.h	1695;"	d
SQLITE_SO_ASC	tsrc/sqliteInt.h	1695;"	d
SQLITE_SO_DESC	sqlite3.c	14295;"	d	file:
SQLITE_SO_DESC	src/sqliteInt.h	1696;"	d
SQLITE_SO_DESC	tsrc/sqliteInt.h	1696;"	d
SQLITE_SO_UNDEFINED	sqlite3.c	14296;"	d	file:
SQLITE_SO_UNDEFINED	src/sqliteInt.h	1697;"	d
SQLITE_SO_UNDEFINED	tsrc/sqliteInt.h	1697;"	d
SQLITE_SPELLFIX_STACKALLOC_SZ	ext/misc/spellfix.c	886;"	d	file:
SQLITE_STAT4_SAMPLES	sqlite3.c	94803;"	d	file:
SQLITE_STAT4_SAMPLES	sqlite3.c	94804;"	d	file:
SQLITE_STAT4_SAMPLES	sqlite3.c	94906;"	d	file:
SQLITE_STAT4_SAMPLES	src/analyze.c	154;"	d	file:
SQLITE_STAT4_SAMPLES	src/analyze.c	155;"	d	file:
SQLITE_STAT4_SAMPLES	src/analyze.c	257;"	d	file:
SQLITE_STAT4_SAMPLES	tsrc/analyze.c	154;"	d	file:
SQLITE_STAT4_SAMPLES	tsrc/analyze.c	155;"	d	file:
SQLITE_STAT4_SAMPLES	tsrc/analyze.c	257;"	d	file:
SQLITE_STATIC	sqlite3.c	5008;"	d	file:
SQLITE_STATIC	sqlite3.h	4748;"	d
SQLITE_STATIC	tsrc/sqlite3.h	4748;"	d
SQLITE_STATUS_MALLOC_COUNT	sqlite3.c	7098;"	d	file:
SQLITE_STATUS_MALLOC_COUNT	sqlite3.h	6838;"	d
SQLITE_STATUS_MALLOC_COUNT	tsrc/sqlite3.h	6838;"	d
SQLITE_STATUS_MALLOC_SIZE	sqlite3.c	7094;"	d	file:
SQLITE_STATUS_MALLOC_SIZE	sqlite3.h	6834;"	d
SQLITE_STATUS_MALLOC_SIZE	tsrc/sqlite3.h	6834;"	d
SQLITE_STATUS_MEMORY_USED	sqlite3.c	7089;"	d	file:
SQLITE_STATUS_MEMORY_USED	sqlite3.h	6829;"	d
SQLITE_STATUS_MEMORY_USED	tsrc/sqlite3.h	6829;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	sqlite3.c	7091;"	d	file:
SQLITE_STATUS_PAGECACHE_OVERFLOW	sqlite3.h	6831;"	d
SQLITE_STATUS_PAGECACHE_OVERFLOW	tsrc/sqlite3.h	6831;"	d
SQLITE_STATUS_PAGECACHE_SIZE	sqlite3.c	7096;"	d	file:
SQLITE_STATUS_PAGECACHE_SIZE	sqlite3.h	6836;"	d
SQLITE_STATUS_PAGECACHE_SIZE	tsrc/sqlite3.h	6836;"	d
SQLITE_STATUS_PAGECACHE_USED	sqlite3.c	7090;"	d	file:
SQLITE_STATUS_PAGECACHE_USED	sqlite3.h	6830;"	d
SQLITE_STATUS_PAGECACHE_USED	tsrc/sqlite3.h	6830;"	d
SQLITE_STATUS_PARSER_STACK	sqlite3.c	7095;"	d	file:
SQLITE_STATUS_PARSER_STACK	sqlite3.h	6835;"	d
SQLITE_STATUS_PARSER_STACK	tsrc/sqlite3.h	6835;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	sqlite3.c	7093;"	d	file:
SQLITE_STATUS_SCRATCH_OVERFLOW	sqlite3.h	6833;"	d
SQLITE_STATUS_SCRATCH_OVERFLOW	tsrc/sqlite3.h	6833;"	d
SQLITE_STATUS_SCRATCH_SIZE	sqlite3.c	7097;"	d	file:
SQLITE_STATUS_SCRATCH_SIZE	sqlite3.h	6837;"	d
SQLITE_STATUS_SCRATCH_SIZE	tsrc/sqlite3.h	6837;"	d
SQLITE_STATUS_SCRATCH_USED	sqlite3.c	7092;"	d	file:
SQLITE_STATUS_SCRATCH_USED	sqlite3.h	6832;"	d
SQLITE_STATUS_SCRATCH_USED	tsrc/sqlite3.h	6832;"	d
SQLITE_STDCALL	sqlite3.c	321;"	d	file:
SQLITE_STDCALL	sqlite3.h	61;"	d
SQLITE_STDCALL	tsrc/sqlite3.h	61;"	d
SQLITE_STMTJRNL_SPILL	sqlite3.c	17038;"	d	file:
SQLITE_STMTJRNL_SPILL	src/global.c	172;"	d	file:
SQLITE_STMTJRNL_SPILL	tsrc/global.c	172;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	sqlite3.c	7307;"	d	file:
SQLITE_STMTSTATUS_AUTOINDEX	sqlite3.h	7047;"	d
SQLITE_STMTSTATUS_AUTOINDEX	tsrc/sqlite3.h	7047;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	sqlite3.c	7305;"	d	file:
SQLITE_STMTSTATUS_FULLSCAN_STEP	sqlite3.h	7045;"	d
SQLITE_STMTSTATUS_FULLSCAN_STEP	tsrc/sqlite3.h	7045;"	d
SQLITE_STMTSTATUS_SORT	sqlite3.c	7306;"	d	file:
SQLITE_STMTSTATUS_SORT	sqlite3.h	7046;"	d
SQLITE_STMTSTATUS_SORT	tsrc/sqlite3.h	7046;"	d
SQLITE_STMTSTATUS_VM_STEP	sqlite3.c	7308;"	d	file:
SQLITE_STMTSTATUS_VM_STEP	sqlite3.h	7048;"	d
SQLITE_STMTSTATUS_VM_STEP	tsrc/sqlite3.h	7048;"	d
SQLITE_STOREP2	sqlite3.c	14336;"	d	file:
SQLITE_STOREP2	src/sqliteInt.h	1737;"	d
SQLITE_STOREP2	tsrc/sqliteInt.h	1737;"	d
SQLITE_SYNC_DATAONLY	sqlite3.c	894;"	d	file:
SQLITE_SYNC_DATAONLY	sqlite3.h	634;"	d
SQLITE_SYNC_DATAONLY	tsrc/sqlite3.h	634;"	d
SQLITE_SYNC_FULL	sqlite3.c	893;"	d	file:
SQLITE_SYNC_FULL	sqlite3.h	633;"	d
SQLITE_SYNC_FULL	tsrc/sqlite3.h	633;"	d
SQLITE_SYNC_MASK	sqlite3.c	46177;"	d	file:
SQLITE_SYNC_MASK	src/wal.h	26;"	d
SQLITE_SYNC_MASK	tsrc/wal.h	26;"	d
SQLITE_SYNC_NORMAL	sqlite3.c	892;"	d	file:
SQLITE_SYNC_NORMAL	sqlite3.h	632;"	d
SQLITE_SYNC_NORMAL	tsrc/sqlite3.h	632;"	d
SQLITE_SYSAPI	sqlite3.c	327;"	d	file:
SQLITE_SYSAPI	sqlite3.h	67;"	d
SQLITE_SYSAPI	tsrc/sqlite3.h	67;"	d
SQLITE_SYSTEM_MALLOC	sqlite3.c	10977;"	d	file:
SQLITE_SYSTEM_MALLOC	src/sqliteInt.h	315;"	d
SQLITE_SYSTEM_MALLOC	tsrc/sqliteInt.h	315;"	d
SQLITE_ShortColNames	sqlite3.c	14009;"	d	file:
SQLITE_ShortColNames	src/sqliteInt.h	1410;"	d
SQLITE_ShortColNames	tsrc/sqliteInt.h	1410;"	d
SQLITE_SqlTrace	sqlite3.c	14015;"	d	file:
SQLITE_SqlTrace	src/sqliteInt.h	1416;"	d
SQLITE_SqlTrace	tsrc/sqliteInt.h	1416;"	d
SQLITE_Stat34	sqlite3.c	14055;"	d	file:
SQLITE_Stat34	src/sqliteInt.h	1456;"	d
SQLITE_Stat34	tsrc/sqliteInt.h	1456;"	d
SQLITE_SubqCoroutine	sqlite3.c	14052;"	d	file:
SQLITE_SubqCoroutine	src/sqliteInt.h	1453;"	d
SQLITE_SubqCoroutine	tsrc/sqliteInt.h	1453;"	d
SQLITE_TCLAPI	ext/fts3/fts3_test.c	26;"	d	file:
SQLITE_TCLAPI	ext/fts5/fts5_tcl.c	22;"	d	file:
SQLITE_TCLAPI	ext/rbu/test_rbu.c	25;"	d	file:
SQLITE_TCLAPI	ext/session/test_session.c	13;"	d	file:
SQLITE_TCLAPI	sqlite3.c	75;"	d	file:
SQLITE_TCLAPI	src/sqliteInt.h	50;"	d
SQLITE_TCLAPI	src/tclsqlite.c	41;"	d	file:
SQLITE_TCLAPI	src/test_async.c	23;"	d	file:
SQLITE_TCLAPI	src/test_autoext.c	19;"	d	file:
SQLITE_TCLAPI	src/test_backup.c	21;"	d	file:
SQLITE_TCLAPI	src/test_demovfs.c	649;"	d	file:
SQLITE_TCLAPI	src/test_intarray.c	278;"	d	file:
SQLITE_TCLAPI	src/test_multiplex.c	1237;"	d	file:
SQLITE_TCLAPI	src/test_osinst.c	1112;"	d	file:
SQLITE_TCLAPI	src/test_quota.c	1286;"	d	file:
SQLITE_TCLAPI	src/test_superlock.c	264;"	d	file:
SQLITE_TCLAPI	tsrc/sqliteInt.h	50;"	d
SQLITE_TCLAPI	tsrc/tclsqlite.c	41;"	d	file:
SQLITE_TCL_NRE	src/tclsqlite.c	1673;"	d	file:
SQLITE_TCL_NRE	src/tclsqlite.c	1689;"	d	file:
SQLITE_TCL_NRE	tsrc/tclsqlite.c	1673;"	d	file:
SQLITE_TCL_NRE	tsrc/tclsqlite.c	1689;"	d	file:
SQLITE_TEMP_FILE_PREFIX	sqlite3.c	13435;"	d	file:
SQLITE_TEMP_FILE_PREFIX	src/os.h	65;"	d
SQLITE_TEMP_FILE_PREFIX	tsrc/os.h	65;"	d
SQLITE_TEMP_STORE	sqlite3.c	11495;"	d	file:
SQLITE_TEMP_STORE	src/sqliteInt.h	561;"	d
SQLITE_TEMP_STORE	tsrc/sqliteInt.h	561;"	d
SQLITE_TEMP_STORE_xc	sqlite3.c	11496;"	d	file:
SQLITE_TEMP_STORE_xc	src/sqliteInt.h	562;"	d
SQLITE_TEMP_STORE_xc	tsrc/sqliteInt.h	562;"	d
SQLITE_TESTCTRL_ALWAYS	sqlite3.c	6956;"	d	file:
SQLITE_TESTCTRL_ALWAYS	sqlite3.h	6696;"	d
SQLITE_TESTCTRL_ALWAYS	tsrc/sqlite3.h	6696;"	d
SQLITE_TESTCTRL_ASSERT	sqlite3.c	6955;"	d	file:
SQLITE_TESTCTRL_ASSERT	sqlite3.h	6695;"	d
SQLITE_TESTCTRL_ASSERT	tsrc/sqlite3.h	6695;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	sqlite3.c	6953;"	d	file:
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	sqlite3.h	6693;"	d
SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS	tsrc/sqlite3.h	6693;"	d
SQLITE_TESTCTRL_BITVEC_TEST	sqlite3.c	6951;"	d	file:
SQLITE_TESTCTRL_BITVEC_TEST	sqlite3.h	6691;"	d
SQLITE_TESTCTRL_BITVEC_TEST	tsrc/sqlite3.h	6691;"	d
SQLITE_TESTCTRL_BYTEORDER	sqlite3.c	6965;"	d	file:
SQLITE_TESTCTRL_BYTEORDER	sqlite3.h	6705;"	d
SQLITE_TESTCTRL_BYTEORDER	tsrc/sqlite3.h	6705;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	sqlite3.c	6962;"	d	file:
SQLITE_TESTCTRL_EXPLAIN_STMT	sqlite3.h	6702;"	d
SQLITE_TESTCTRL_EXPLAIN_STMT	tsrc/sqlite3.h	6702;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	sqlite3.c	6952;"	d	file:
SQLITE_TESTCTRL_FAULT_INSTALL	sqlite3.h	6692;"	d
SQLITE_TESTCTRL_FAULT_INSTALL	tsrc/sqlite3.h	6692;"	d
SQLITE_TESTCTRL_FIRST	sqlite3.c	6947;"	d	file:
SQLITE_TESTCTRL_FIRST	sqlite3.h	6687;"	d
SQLITE_TESTCTRL_FIRST	tsrc/sqlite3.h	6687;"	d
SQLITE_TESTCTRL_IMPOSTER	sqlite3.c	6968;"	d	file:
SQLITE_TESTCTRL_IMPOSTER	sqlite3.h	6708;"	d
SQLITE_TESTCTRL_IMPOSTER	tsrc/sqlite3.h	6708;"	d
SQLITE_TESTCTRL_ISINIT	sqlite3.c	6966;"	d	file:
SQLITE_TESTCTRL_ISINIT	sqlite3.h	6706;"	d
SQLITE_TESTCTRL_ISINIT	tsrc/sqlite3.h	6706;"	d
SQLITE_TESTCTRL_ISKEYWORD	sqlite3.c	6959;"	d	file:
SQLITE_TESTCTRL_ISKEYWORD	sqlite3.h	6699;"	d
SQLITE_TESTCTRL_ISKEYWORD	tsrc/sqlite3.h	6699;"	d
SQLITE_TESTCTRL_LAST	sqlite3.c	6969;"	d	file:
SQLITE_TESTCTRL_LAST	sqlite3.h	6709;"	d
SQLITE_TESTCTRL_LAST	tsrc/sqlite3.h	6709;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	sqlite3.c	6961;"	d	file:
SQLITE_TESTCTRL_LOCALTIME_FAULT	sqlite3.h	6701;"	d
SQLITE_TESTCTRL_LOCALTIME_FAULT	tsrc/sqlite3.h	6701;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	sqlite3.c	6963;"	d	file:
SQLITE_TESTCTRL_NEVER_CORRUPT	sqlite3.h	6703;"	d
SQLITE_TESTCTRL_NEVER_CORRUPT	tsrc/sqlite3.h	6703;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	sqlite3.c	6958;"	d	file:
SQLITE_TESTCTRL_OPTIMIZATIONS	sqlite3.h	6698;"	d
SQLITE_TESTCTRL_OPTIMIZATIONS	tsrc/sqlite3.h	6698;"	d
SQLITE_TESTCTRL_PENDING_BYTE	sqlite3.c	6954;"	d	file:
SQLITE_TESTCTRL_PENDING_BYTE	sqlite3.h	6694;"	d
SQLITE_TESTCTRL_PENDING_BYTE	tsrc/sqlite3.h	6694;"	d
SQLITE_TESTCTRL_PRNG_RESET	sqlite3.c	6950;"	d	file:
SQLITE_TESTCTRL_PRNG_RESET	sqlite3.h	6690;"	d
SQLITE_TESTCTRL_PRNG_RESET	tsrc/sqlite3.h	6690;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	sqlite3.c	6949;"	d	file:
SQLITE_TESTCTRL_PRNG_RESTORE	sqlite3.h	6689;"	d
SQLITE_TESTCTRL_PRNG_RESTORE	tsrc/sqlite3.h	6689;"	d
SQLITE_TESTCTRL_PRNG_SAVE	sqlite3.c	6948;"	d	file:
SQLITE_TESTCTRL_PRNG_SAVE	sqlite3.h	6688;"	d
SQLITE_TESTCTRL_PRNG_SAVE	tsrc/sqlite3.h	6688;"	d
SQLITE_TESTCTRL_RESERVE	sqlite3.c	6957;"	d	file:
SQLITE_TESTCTRL_RESERVE	sqlite3.h	6697;"	d
SQLITE_TESTCTRL_RESERVE	tsrc/sqlite3.h	6697;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	sqlite3.c	6960;"	d	file:
SQLITE_TESTCTRL_SCRATCHMALLOC	sqlite3.h	6700;"	d
SQLITE_TESTCTRL_SCRATCHMALLOC	tsrc/sqlite3.h	6700;"	d
SQLITE_TESTCTRL_SORTER_MMAP	sqlite3.c	6967;"	d	file:
SQLITE_TESTCTRL_SORTER_MMAP	sqlite3.h	6707;"	d
SQLITE_TESTCTRL_SORTER_MMAP	tsrc/sqlite3.h	6707;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	sqlite3.c	6964;"	d	file:
SQLITE_TESTCTRL_VDBE_COVERAGE	sqlite3.h	6704;"	d
SQLITE_TESTCTRL_VDBE_COVERAGE	tsrc/sqlite3.h	6704;"	d
SQLITE_TEST_MULTIPLEX_H	src/test_multiplex.h	24;"	d
SQLITE_TEXT	sqlite3.c	4372;"	d	file:
SQLITE_TEXT	sqlite3.c	4374;"	d	file:
SQLITE_TEXT	sqlite3.h	4112;"	d
SQLITE_TEXT	sqlite3.h	4114;"	d
SQLITE_TEXT	tsrc/sqlite3.h	4112;"	d
SQLITE_TEXT	tsrc/sqlite3.h	4114;"	d
SQLITE_THREADSAFE	sqlite3.c	10924;"	d	file:
SQLITE_THREADSAFE	sqlite3.c	10926;"	d	file:
SQLITE_THREADSAFE	src/sqliteInt.h	262;"	d
SQLITE_THREADSAFE	src/sqliteInt.h	264;"	d
SQLITE_THREADSAFE	tsrc/sqliteInt.h	262;"	d
SQLITE_THREADSAFE	tsrc/sqliteInt.h	264;"	d
SQLITE_THREADS_IMPLEMENTED	sqlite3.c	26431;"	d	file:
SQLITE_THREADS_IMPLEMENTED	sqlite3.c	26503;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/threads.c	110;"	d	file:
SQLITE_THREADS_IMPLEMENTED	src/threads.c	38;"	d	file:
SQLITE_THREADS_IMPLEMENTED	tsrc/threads.c	110;"	d	file:
SQLITE_THREADS_IMPLEMENTED	tsrc/threads.c	38;"	d	file:
SQLITE_TOOBIG	sqlite3.c	692;"	d	file:
SQLITE_TOOBIG	sqlite3.h	432;"	d
SQLITE_TOOBIG	tsrc/sqlite3.h	432;"	d
SQLITE_TRACE_CLOSE	sqlite3.c	3125;"	d	file:
SQLITE_TRACE_CLOSE	sqlite3.h	2865;"	d
SQLITE_TRACE_CLOSE	tsrc/sqlite3.h	2865;"	d
SQLITE_TRACE_LEGACY	sqlite3.c	13855;"	d	file:
SQLITE_TRACE_LEGACY	sqlite3.c	13857;"	d	file:
SQLITE_TRACE_LEGACY	src/sqliteInt.h	1256;"	d
SQLITE_TRACE_LEGACY	src/sqliteInt.h	1258;"	d
SQLITE_TRACE_LEGACY	tsrc/sqliteInt.h	1256;"	d
SQLITE_TRACE_LEGACY	tsrc/sqliteInt.h	1258;"	d
SQLITE_TRACE_PROFILE	sqlite3.c	3123;"	d	file:
SQLITE_TRACE_PROFILE	sqlite3.h	2863;"	d
SQLITE_TRACE_PROFILE	tsrc/sqlite3.h	2863;"	d
SQLITE_TRACE_ROW	sqlite3.c	3124;"	d	file:
SQLITE_TRACE_ROW	sqlite3.h	2864;"	d
SQLITE_TRACE_ROW	tsrc/sqlite3.h	2864;"	d
SQLITE_TRACE_STMT	sqlite3.c	3122;"	d	file:
SQLITE_TRACE_STMT	sqlite3.h	2862;"	d
SQLITE_TRACE_STMT	tsrc/sqlite3.h	2862;"	d
SQLITE_TRANSACTION	sqlite3.c	3019;"	d	file:
SQLITE_TRANSACTION	sqlite3.h	2759;"	d
SQLITE_TRANSACTION	tsrc/sqlite3.h	2759;"	d
SQLITE_TRANSIENT	sqlite3.c	5009;"	d	file:
SQLITE_TRANSIENT	sqlite3.h	4749;"	d
SQLITE_TRANSIENT	tsrc/sqlite3.h	4749;"	d
SQLITE_Transitive	sqlite3.c	14053;"	d	file:
SQLITE_Transitive	src/sqliteInt.h	1454;"	d
SQLITE_Transitive	tsrc/sqliteInt.h	1454;"	d
SQLITE_UNIX_THREADS	sqlite3.c	29270;"	d	file:
SQLITE_UNIX_THREADS	src/os_unix.c	143;"	d	file:
SQLITE_UNIX_THREADS	tsrc/os_unix.c	143;"	d	file:
SQLITE_UPDATE	sqlite3.c	3020;"	d	file:
SQLITE_UPDATE	sqlite3.h	2760;"	d
SQLITE_UPDATE	tsrc/sqlite3.h	2760;"	d
SQLITE_USE_MALLOC_H	sqlite3.c	20343;"	d	file:
SQLITE_USE_MALLOC_H	sqlite3.c	20352;"	d	file:
SQLITE_USE_MALLOC_H	src/mem1.c	83;"	d	file:
SQLITE_USE_MALLOC_H	src/mem1.c	92;"	d	file:
SQLITE_USE_MALLOC_H	tsrc/mem1.c	83;"	d	file:
SQLITE_USE_MALLOC_H	tsrc/mem1.c	92;"	d	file:
SQLITE_USE_MALLOC_USABLE_SIZE	sqlite3.c	20344;"	d	file:
SQLITE_USE_MALLOC_USABLE_SIZE	src/mem1.c	84;"	d	file:
SQLITE_USE_MALLOC_USABLE_SIZE	tsrc/mem1.c	84;"	d	file:
SQLITE_USE_MSIZE	sqlite3.c	20353;"	d	file:
SQLITE_USE_MSIZE	src/mem1.c	93;"	d	file:
SQLITE_USE_MSIZE	tsrc/mem1.c	93;"	d	file:
SQLITE_USE_URI	sqlite3.c	17011;"	d	file:
SQLITE_USE_URI	src/global.c	145;"	d	file:
SQLITE_USE_URI	tsrc/global.c	145;"	d	file:
SQLITE_UTF16	sqlite3.c	4739;"	d	file:
SQLITE_UTF16	sqlite3.h	4479;"	d
SQLITE_UTF16	tsrc/sqlite3.h	4479;"	d
SQLITE_UTF16BE	sqlite3.c	4738;"	d	file:
SQLITE_UTF16BE	sqlite3.h	4478;"	d
SQLITE_UTF16BE	tsrc/sqlite3.h	4478;"	d
SQLITE_UTF16LE	sqlite3.c	4737;"	d	file:
SQLITE_UTF16LE	sqlite3.h	4477;"	d
SQLITE_UTF16LE	tsrc/sqlite3.h	4477;"	d
SQLITE_UTF16NATIVE	sqlite3.c	11711;"	d	file:
SQLITE_UTF16NATIVE	sqlite3.c	11718;"	d	file:
SQLITE_UTF16NATIVE	sqlite3.c	11729;"	d	file:
SQLITE_UTF16NATIVE	src/sqliteInt.h	777;"	d
SQLITE_UTF16NATIVE	src/sqliteInt.h	784;"	d
SQLITE_UTF16NATIVE	src/sqliteInt.h	795;"	d
SQLITE_UTF16NATIVE	tsrc/sqliteInt.h	777;"	d
SQLITE_UTF16NATIVE	tsrc/sqliteInt.h	784;"	d
SQLITE_UTF16NATIVE	tsrc/sqliteInt.h	795;"	d
SQLITE_UTF16_ALIGNED	sqlite3.c	4741;"	d	file:
SQLITE_UTF16_ALIGNED	sqlite3.h	4481;"	d
SQLITE_UTF16_ALIGNED	tsrc/sqlite3.h	4481;"	d
SQLITE_UTF8	sqlite3.c	4736;"	d	file:
SQLITE_UTF8	sqlite3.h	4476;"	d
SQLITE_UTF8	tsrc/sqlite3.h	4476;"	d
SQLITE_VDBEINT_H	sqlite3.c	17641;"	d	file:
SQLITE_VDBEINT_H	src/vdbeInt.h	19;"	d
SQLITE_VDBEINT_H	tsrc/vdbeInt.h	19;"	d
SQLITE_VDBE_H	sqlite3.c	12375;"	d	file:
SQLITE_VDBE_H	src/vdbe.h	19;"	d
SQLITE_VDBE_H	tsrc/vdbe.h	19;"	d
SQLITE_VERSION	sqlite3.c	350;"	d	file:
SQLITE_VERSION	sqlite3.c	383;"	d	file:
SQLITE_VERSION	sqlite3.h	123;"	d
SQLITE_VERSION	sqlite3.h	90;"	d
SQLITE_VERSION	tsrc/sqlite3.h	123;"	d
SQLITE_VERSION	tsrc/sqlite3.h	90;"	d
SQLITE_VERSION_NUMBER	sqlite3.c	353;"	d	file:
SQLITE_VERSION_NUMBER	sqlite3.c	384;"	d	file:
SQLITE_VERSION_NUMBER	sqlite3.h	124;"	d
SQLITE_VERSION_NUMBER	sqlite3.h	93;"	d
SQLITE_VERSION_NUMBER	tsrc/sqlite3.h	124;"	d
SQLITE_VERSION_NUMBER	tsrc/sqlite3.h	93;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	sqlite3.c	8204;"	d	file:
SQLITE_VTAB_CONSTRAINT_SUPPORT	sqlite3.h	7944;"	d
SQLITE_VTAB_CONSTRAINT_SUPPORT	tsrc/sqlite3.h	7944;"	d
SQLITE_Vacuum	sqlite3.c	14034;"	d	file:
SQLITE_Vacuum	src/sqliteInt.h	1435;"	d
SQLITE_Vacuum	tsrc/sqliteInt.h	1435;"	d
SQLITE_VdbeAddopTrace	sqlite3.c	14018;"	d	file:
SQLITE_VdbeAddopTrace	src/sqliteInt.h	1419;"	d
SQLITE_VdbeAddopTrace	tsrc/sqliteInt.h	1419;"	d
SQLITE_VdbeEQP	sqlite3.c	14033;"	d	file:
SQLITE_VdbeEQP	src/sqliteInt.h	1434;"	d
SQLITE_VdbeEQP	tsrc/sqliteInt.h	1434;"	d
SQLITE_VdbeListing	sqlite3.c	14016;"	d	file:
SQLITE_VdbeListing	src/sqliteInt.h	1417;"	d
SQLITE_VdbeListing	tsrc/sqliteInt.h	1417;"	d
SQLITE_VdbeTrace	sqlite3.c	14003;"	d	file:
SQLITE_VdbeTrace	src/sqliteInt.h	1404;"	d
SQLITE_VdbeTrace	tsrc/sqliteInt.h	1404;"	d
SQLITE_W32_MUTEX_INITIALIZER	sqlite3.c	23481;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	src/mutex_w32.c	52;"	d	file:
SQLITE_W32_MUTEX_INITIALIZER	tsrc/mutex_w32.c	52;"	d	file:
SQLITE_WAL_H	sqlite3.c	46169;"	d	file:
SQLITE_WAL_H	src/wal.h	18;"	d
SQLITE_WAL_H	tsrc/wal.h	18;"	d
SQLITE_WARNING	sqlite3.c	702;"	d	file:
SQLITE_WARNING	sqlite3.h	442;"	d
SQLITE_WARNING	tsrc/sqlite3.h	442;"	d
SQLITE_WARNING_AUTOINDEX	sqlite3.c	776;"	d	file:
SQLITE_WARNING_AUTOINDEX	sqlite3.h	516;"	d
SQLITE_WARNING_AUTOINDEX	tsrc/sqlite3.h	516;"	d
SQLITE_WIN32_CACHE_SIZE	sqlite3.c	37480;"	d	file:
SQLITE_WIN32_CACHE_SIZE	sqlite3.c	37482;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/os_win.c	364;"	d	file:
SQLITE_WIN32_CACHE_SIZE	src/os_win.c	366;"	d	file:
SQLITE_WIN32_CACHE_SIZE	tsrc/os_win.c	364;"	d	file:
SQLITE_WIN32_CACHE_SIZE	tsrc/os_win.c	366;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	sqlite3.c	37218;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	sqlite3.c	37220;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/os_win.c	102;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	src/os_win.c	104;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	tsrc/os_win.c	102;"	d	file:
SQLITE_WIN32_CREATEFILEMAPPINGA	tsrc/os_win.c	104;"	d	file:
SQLITE_WIN32_DATA_DIRECTORY_TYPE	sqlite3.c	37439;"	d	file:
SQLITE_WIN32_DATA_DIRECTORY_TYPE	src/os_win.c	323;"	d	file:
SQLITE_WIN32_DATA_DIRECTORY_TYPE	tsrc/os_win.c	323;"	d	file:
SQLITE_WIN32_DBG_BUF_SIZE	sqlite3.c	37431;"	d	file:
SQLITE_WIN32_DBG_BUF_SIZE	src/os_win.c	315;"	d	file:
SQLITE_WIN32_DBG_BUF_SIZE	tsrc/os_win.c	315;"	d	file:
SQLITE_WIN32_GETVERSIONEX	sqlite3.c	37205;"	d	file:
SQLITE_WIN32_GETVERSIONEX	sqlite3.c	37207;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/os_win.c	89;"	d	file:
SQLITE_WIN32_GETVERSIONEX	src/os_win.c	91;"	d	file:
SQLITE_WIN32_GETVERSIONEX	tsrc/os_win.c	89;"	d	file:
SQLITE_WIN32_GETVERSIONEX	tsrc/os_win.c	91;"	d	file:
SQLITE_WIN32_HAS_ANSI	sqlite3.c	37163;"	d	file:
SQLITE_WIN32_HAS_ANSI	src/os_win.c	47;"	d	file:
SQLITE_WIN32_HAS_ANSI	tsrc/os_win.c	47;"	d	file:
SQLITE_WIN32_HAS_WIDE	sqlite3.c	37172;"	d	file:
SQLITE_WIN32_HAS_WIDE	src/os_win.c	56;"	d	file:
SQLITE_WIN32_HAS_WIDE	tsrc/os_win.c	56;"	d	file:
SQLITE_WIN32_HEAP_CREATE	sqlite3.c	37471;"	d	file:
SQLITE_WIN32_HEAP_CREATE	src/os_win.c	355;"	d	file:
SQLITE_WIN32_HEAP_CREATE	tsrc/os_win.c	355;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	sqlite3.c	37506;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	src/os_win.c	390;"	d	file:
SQLITE_WIN32_HEAP_FLAGS	tsrc/os_win.c	390;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	sqlite3.c	37490;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	src/os_win.c	374;"	d	file:
SQLITE_WIN32_HEAP_INIT_SIZE	tsrc/os_win.c	374;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	sqlite3.c	37498;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	src/os_win.c	382;"	d	file:
SQLITE_WIN32_HEAP_MAX_SIZE	tsrc/os_win.c	382;"	d	file:
SQLITE_WIN32_IOERR_RETRY	sqlite3.c	39171;"	d	file:
SQLITE_WIN32_IOERR_RETRY	src/os_win.c	2055;"	d	file:
SQLITE_WIN32_IOERR_RETRY	tsrc/os_win.c	2055;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	sqlite3.c	39174;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	src/os_win.c	2058;"	d	file:
SQLITE_WIN32_IOERR_RETRY_DELAY	tsrc/os_win.c	2058;"	d	file:
SQLITE_WIN32_MAX_ERRMSG_CHARS	sqlite3.c	37276;"	d	file:
SQLITE_WIN32_MAX_ERRMSG_CHARS	src/os_win.c	160;"	d	file:
SQLITE_WIN32_MAX_ERRMSG_CHARS	tsrc/os_win.c	160;"	d	file:
SQLITE_WIN32_MAX_PATH_BYTES	sqlite3.c	37260;"	d	file:
SQLITE_WIN32_MAX_PATH_BYTES	src/os_win.c	144;"	d	file:
SQLITE_WIN32_MAX_PATH_BYTES	tsrc/os_win.c	144;"	d	file:
SQLITE_WIN32_MAX_PATH_CHARS	sqlite3.c	37236;"	d	file:
SQLITE_WIN32_MAX_PATH_CHARS	src/os_win.c	120;"	d	file:
SQLITE_WIN32_MAX_PATH_CHARS	tsrc/os_win.c	120;"	d	file:
SQLITE_WIN32_TEMP_DIRECTORY_TYPE	sqlite3.c	37447;"	d	file:
SQLITE_WIN32_TEMP_DIRECTORY_TYPE	src/os_win.c	331;"	d	file:
SQLITE_WIN32_TEMP_DIRECTORY_TYPE	tsrc/os_win.c	331;"	d	file:
SQLITE_WIN32_VOLATILE	sqlite3.c	23435;"	d	file:
SQLITE_WIN32_VOLATILE	sqlite3.c	23437;"	d	file:
SQLITE_WIN32_VOLATILE	src/os_win.h	72;"	d
SQLITE_WIN32_VOLATILE	src/os_win.h	74;"	d
SQLITE_WIN32_VOLATILE	tsrc/os_win.h	72;"	d
SQLITE_WIN32_VOLATILE	tsrc/os_win.h	74;"	d
SQLITE_WINNT_MAX_PATH_BYTES	sqlite3.c	37268;"	d	file:
SQLITE_WINNT_MAX_PATH_BYTES	src/os_win.c	152;"	d	file:
SQLITE_WINNT_MAX_PATH_BYTES	tsrc/os_win.c	152;"	d	file:
SQLITE_WINNT_MAX_PATH_CHARS	sqlite3.c	37251;"	d	file:
SQLITE_WINNT_MAX_PATH_CHARS	src/os_win.c	135;"	d	file:
SQLITE_WINNT_MAX_PATH_CHARS	tsrc/os_win.c	135;"	d	file:
SQLITE_WITHIN	sqlite3.c	11692;"	d	file:
SQLITE_WITHIN	src/sqliteInt.h	758;"	d
SQLITE_WITHIN	tsrc/sqliteInt.h	758;"	d
SQLITE_WSD	sqlite3.c	11902;"	d	file:
SQLITE_WSD	sqlite3.c	11908;"	d	file:
SQLITE_WSD	src/sqliteInt.h	968;"	d
SQLITE_WSD	src/sqliteInt.h	974;"	d
SQLITE_WSD	tsrc/sqliteInt.h	968;"	d
SQLITE_WSD	tsrc/sqliteInt.h	974;"	d
SQLITE_WriteSchema	sqlite3.c	14017;"	d	file:
SQLITE_WriteSchema	src/sqliteInt.h	1418;"	d
SQLITE_WriteSchema	tsrc/sqliteInt.h	1418;"	d
SQLLOG_NAMESZ	src/test_sqllog.c	100;"	d	file:
SQL_CHOMP_SEGDIR	ext/fts3/fts3_write.c	267;"	d	file:
SQL_CHOMP_SEGDIR	sqlite3.c	152076;"	d	file:
SQL_CHOMP_SEGDIR	tsrc/fts3_write.c	267;"	d	file:
SQL_CONTENT_INSERT	ext/fts3/fts3_write.c	251;"	d	file:
SQL_CONTENT_INSERT	sqlite3.c	152060;"	d	file:
SQL_CONTENT_INSERT	tsrc/fts3_write.c	251;"	d	file:
SQL_DELETE_ALL_CONTENT	ext/fts3/fts3_write.c	235;"	d	file:
SQL_DELETE_ALL_CONTENT	sqlite3.c	152044;"	d	file:
SQL_DELETE_ALL_CONTENT	tsrc/fts3_write.c	235;"	d	file:
SQL_DELETE_ALL_DOCSIZE	ext/fts3/fts3_write.c	238;"	d	file:
SQL_DELETE_ALL_DOCSIZE	sqlite3.c	152047;"	d	file:
SQL_DELETE_ALL_DOCSIZE	tsrc/fts3_write.c	238;"	d	file:
SQL_DELETE_ALL_SEGDIR	ext/fts3/fts3_write.c	237;"	d	file:
SQL_DELETE_ALL_SEGDIR	sqlite3.c	152046;"	d	file:
SQL_DELETE_ALL_SEGDIR	tsrc/fts3_write.c	237;"	d	file:
SQL_DELETE_ALL_SEGMENTS	ext/fts3/fts3_write.c	236;"	d	file:
SQL_DELETE_ALL_SEGMENTS	sqlite3.c	152045;"	d	file:
SQL_DELETE_ALL_SEGMENTS	tsrc/fts3_write.c	236;"	d	file:
SQL_DELETE_ALL_STAT	ext/fts3/fts3_write.c	239;"	d	file:
SQL_DELETE_ALL_STAT	sqlite3.c	152048;"	d	file:
SQL_DELETE_ALL_STAT	tsrc/fts3_write.c	239;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	ext/fts3/fts3_write.c	259;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	sqlite3.c	152068;"	d	file:
SQL_DELETE_ALL_TERMS_SEGDIR	tsrc/fts3_write.c	259;"	d	file:
SQL_DELETE_CONTENT	ext/fts3/fts3_write.c	233;"	d	file:
SQL_DELETE_CONTENT	sqlite3.c	152042;"	d	file:
SQL_DELETE_CONTENT	tsrc/fts3_write.c	233;"	d	file:
SQL_DELETE_DOCSIZE	ext/fts3/fts3_write.c	252;"	d	file:
SQL_DELETE_DOCSIZE	sqlite3.c	152061;"	d	file:
SQL_DELETE_DOCSIZE	tsrc/fts3_write.c	252;"	d	file:
SQL_DELETE_SEGDIR_ENTRY	ext/fts3/fts3_write.c	264;"	d	file:
SQL_DELETE_SEGDIR_ENTRY	sqlite3.c	152073;"	d	file:
SQL_DELETE_SEGDIR_ENTRY	tsrc/fts3_write.c	264;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	ext/fts3/fts3_write.c	249;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	sqlite3.c	152058;"	d	file:
SQL_DELETE_SEGDIR_LEVEL	tsrc/fts3_write.c	249;"	d	file:
SQL_DELETE_SEGDIR_RANGE	ext/fts3/fts3_write.c	260;"	d	file:
SQL_DELETE_SEGDIR_RANGE	sqlite3.c	152069;"	d	file:
SQL_DELETE_SEGDIR_RANGE	tsrc/fts3_write.c	260;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	ext/fts3/fts3_write.c	250;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	sqlite3.c	152059;"	d	file:
SQL_DELETE_SEGMENTS_RANGE	tsrc/fts3_write.c	250;"	d	file:
SQL_FIND_MERGE_LEVEL	ext/fts3/fts3_write.c	262;"	d	file:
SQL_FIND_MERGE_LEVEL	sqlite3.c	152071;"	d	file:
SQL_FIND_MERGE_LEVEL	tsrc/fts3_write.c	262;"	d	file:
SQL_INSERT_SEGDIR	ext/fts3/fts3_write.c	244;"	d	file:
SQL_INSERT_SEGDIR	sqlite3.c	152053;"	d	file:
SQL_INSERT_SEGDIR	tsrc/fts3_write.c	244;"	d	file:
SQL_INSERT_SEGMENTS	ext/fts3/fts3_write.c	242;"	d	file:
SQL_INSERT_SEGMENTS	sqlite3.c	152051;"	d	file:
SQL_INSERT_SEGMENTS	tsrc/fts3_write.c	242;"	d	file:
SQL_IS_EMPTY	ext/fts3/fts3_write.c	234;"	d	file:
SQL_IS_EMPTY	sqlite3.c	152043;"	d	file:
SQL_IS_EMPTY	tsrc/fts3_write.c	234;"	d	file:
SQL_MAX_LEAF_NODE_ESTIMATE	ext/fts3/fts3_write.c	263;"	d	file:
SQL_MAX_LEAF_NODE_ESTIMATE	sqlite3.c	152072;"	d	file:
SQL_MAX_LEAF_NODE_ESTIMATE	tsrc/fts3_write.c	263;"	d	file:
SQL_NEXT_SEGMENTS_ID	ext/fts3/fts3_write.c	243;"	d	file:
SQL_NEXT_SEGMENTS_ID	sqlite3.c	152052;"	d	file:
SQL_NEXT_SEGMENTS_ID	tsrc/fts3_write.c	243;"	d	file:
SQL_NEXT_SEGMENT_INDEX	ext/fts3/fts3_write.c	241;"	d	file:
SQL_NEXT_SEGMENT_INDEX	sqlite3.c	152050;"	d	file:
SQL_NEXT_SEGMENT_INDEX	tsrc/fts3_write.c	241;"	d	file:
SQL_OUTPUT	test/fuzzcheck.c	617;"	d	file:
SQL_REPLACE_DOCSIZE	ext/fts3/fts3_write.c	253;"	d	file:
SQL_REPLACE_DOCSIZE	sqlite3.c	152062;"	d	file:
SQL_REPLACE_DOCSIZE	tsrc/fts3_write.c	253;"	d	file:
SQL_REPLACE_STAT	ext/fts3/fts3_write.c	256;"	d	file:
SQL_REPLACE_STAT	sqlite3.c	152065;"	d	file:
SQL_REPLACE_STAT	tsrc/fts3_write.c	256;"	d	file:
SQL_SEGMENT_IS_APPENDABLE	ext/fts3/fts3_write.c	268;"	d	file:
SQL_SEGMENT_IS_APPENDABLE	sqlite3.c	152077;"	d	file:
SQL_SEGMENT_IS_APPENDABLE	tsrc/fts3_write.c	268;"	d	file:
SQL_SELECT_ALL_LANGID	ext/fts3/fts3_write.c	261;"	d	file:
SQL_SELECT_ALL_LANGID	sqlite3.c	152070;"	d	file:
SQL_SELECT_ALL_LANGID	tsrc/fts3_write.c	261;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	ext/fts3/fts3_write.c	258;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	sqlite3.c	152067;"	d	file:
SQL_SELECT_ALL_PREFIX_LEVEL	tsrc/fts3_write.c	258;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	ext/fts3/fts3_write.c	240;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	sqlite3.c	152049;"	d	file:
SQL_SELECT_CONTENT_BY_ROWID	tsrc/fts3_write.c	240;"	d	file:
SQL_SELECT_DOCSIZE	ext/fts3/fts3_write.c	254;"	d	file:
SQL_SELECT_DOCSIZE	sqlite3.c	152063;"	d	file:
SQL_SELECT_DOCSIZE	tsrc/fts3_write.c	254;"	d	file:
SQL_SELECT_INDEXES	ext/fts3/fts3_write.c	269;"	d	file:
SQL_SELECT_INDEXES	sqlite3.c	152078;"	d	file:
SQL_SELECT_INDEXES	tsrc/fts3_write.c	269;"	d	file:
SQL_SELECT_LEVEL	ext/fts3/fts3_write.c	245;"	d	file:
SQL_SELECT_LEVEL	sqlite3.c	152054;"	d	file:
SQL_SELECT_LEVEL	tsrc/fts3_write.c	245;"	d	file:
SQL_SELECT_LEVEL_COUNT	ext/fts3/fts3_write.c	247;"	d	file:
SQL_SELECT_LEVEL_COUNT	sqlite3.c	152056;"	d	file:
SQL_SELECT_LEVEL_COUNT	tsrc/fts3_write.c	247;"	d	file:
SQL_SELECT_LEVEL_RANGE	ext/fts3/fts3_write.c	246;"	d	file:
SQL_SELECT_LEVEL_RANGE	sqlite3.c	152055;"	d	file:
SQL_SELECT_LEVEL_RANGE	tsrc/fts3_write.c	246;"	d	file:
SQL_SELECT_LEVEL_RANGE2	ext/fts3/fts3_write.c	272;"	d	file:
SQL_SELECT_LEVEL_RANGE2	sqlite3.c	152081;"	d	file:
SQL_SELECT_LEVEL_RANGE2	tsrc/fts3_write.c	272;"	d	file:
SQL_SELECT_MXLEVEL	ext/fts3/fts3_write.c	270;"	d	file:
SQL_SELECT_MXLEVEL	sqlite3.c	152079;"	d	file:
SQL_SELECT_MXLEVEL	tsrc/fts3_write.c	270;"	d	file:
SQL_SELECT_SEGDIR	ext/fts3/fts3_write.c	266;"	d	file:
SQL_SELECT_SEGDIR	sqlite3.c	152075;"	d	file:
SQL_SELECT_SEGDIR	tsrc/fts3_write.c	266;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	ext/fts3/fts3_write.c	248;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	sqlite3.c	152057;"	d	file:
SQL_SELECT_SEGDIR_MAX_LEVEL	tsrc/fts3_write.c	248;"	d	file:
SQL_SELECT_STAT	ext/fts3/fts3_write.c	255;"	d	file:
SQL_SELECT_STAT	sqlite3.c	152064;"	d	file:
SQL_SELECT_STAT	tsrc/fts3_write.c	255;"	d	file:
SQL_SHIFT_SEGDIR_ENTRY	ext/fts3/fts3_write.c	265;"	d	file:
SQL_SHIFT_SEGDIR_ENTRY	sqlite3.c	152074;"	d	file:
SQL_SHIFT_SEGDIR_ENTRY	tsrc/fts3_write.c	265;"	d	file:
SQL_TRACE	test/fuzzcheck.c	616;"	d	file:
SQL_UPDATE_LEVEL	ext/fts3/fts3_write.c	274;"	d	file:
SQL_UPDATE_LEVEL	sqlite3.c	152083;"	d	file:
SQL_UPDATE_LEVEL	tsrc/fts3_write.c	274;"	d	file:
SQL_UPDATE_LEVEL_IDX	ext/fts3/fts3_write.c	273;"	d	file:
SQL_UPDATE_LEVEL_IDX	sqlite3.c	152082;"	d	file:
SQL_UPDATE_LEVEL_IDX	tsrc/fts3_write.c	273;"	d	file:
SQLiteThread	sqlite3.c	/^struct SQLiteThread {$/;"	s	file:
SQLiteThread	sqlite3.c	/^typedef struct SQLiteThread SQLiteThread;$/;"	t	typeref:struct:SQLiteThread	file:
SQLiteThread	src/sqliteInt.h	/^typedef struct SQLiteThread SQLiteThread;$/;"	t	typeref:struct:SQLiteThread
SQLiteThread	src/threads.c	/^struct SQLiteThread {$/;"	s	file:
SQLiteThread	tsrc/sqliteInt.h	/^typedef struct SQLiteThread SQLiteThread;$/;"	t	typeref:struct:SQLiteThread
SQLiteThread	tsrc/threads.c	/^struct SQLiteThread {$/;"	s	file:
SRC	Makefile	/^SRC = \\$/;"	m
SRC	main.mk	/^SRC = \\$/;"	m
SRCONFLICT	tool/lemon.c	/^  SRCONFLICT,              \/* Was a reduce, but part of a conflict *\/$/;"	e	enum:e_action	file:
SRT_Coroutine	sqlite3.c	15373;"	d	file:
SRT_Coroutine	src/sqliteInt.h	2774;"	d
SRT_Coroutine	tsrc/sqliteInt.h	2774;"	d
SRT_Discard	sqlite3.c	15360;"	d	file:
SRT_Discard	src/sqliteInt.h	2761;"	d
SRT_Discard	tsrc/sqliteInt.h	2761;"	d
SRT_DistFifo	sqlite3.c	15362;"	d	file:
SRT_DistFifo	src/sqliteInt.h	2763;"	d
SRT_DistFifo	tsrc/sqliteInt.h	2763;"	d
SRT_DistQueue	sqlite3.c	15364;"	d	file:
SRT_DistQueue	src/sqliteInt.h	2765;"	d
SRT_DistQueue	tsrc/sqliteInt.h	2765;"	d
SRT_EphemTab	sqlite3.c	15372;"	d	file:
SRT_EphemTab	src/sqliteInt.h	2773;"	d
SRT_EphemTab	tsrc/sqliteInt.h	2773;"	d
SRT_Except	sqlite3.c	15358;"	d	file:
SRT_Except	src/sqliteInt.h	2759;"	d
SRT_Except	tsrc/sqliteInt.h	2759;"	d
SRT_Exists	sqlite3.c	15359;"	d	file:
SRT_Exists	src/sqliteInt.h	2760;"	d
SRT_Exists	tsrc/sqliteInt.h	2760;"	d
SRT_Fifo	sqlite3.c	15361;"	d	file:
SRT_Fifo	src/sqliteInt.h	2762;"	d
SRT_Fifo	tsrc/sqliteInt.h	2762;"	d
SRT_Mem	sqlite3.c	15370;"	d	file:
SRT_Mem	src/sqliteInt.h	2771;"	d
SRT_Mem	tsrc/sqliteInt.h	2771;"	d
SRT_Output	sqlite3.c	15369;"	d	file:
SRT_Output	src/sqliteInt.h	2770;"	d
SRT_Output	tsrc/sqliteInt.h	2770;"	d
SRT_Queue	sqlite3.c	15363;"	d	file:
SRT_Queue	src/sqliteInt.h	2764;"	d
SRT_Queue	tsrc/sqliteInt.h	2764;"	d
SRT_Set	sqlite3.c	15371;"	d	file:
SRT_Set	src/sqliteInt.h	2772;"	d
SRT_Set	tsrc/sqliteInt.h	2772;"	d
SRT_Table	sqlite3.c	15374;"	d	file:
SRT_Table	src/sqliteInt.h	2775;"	d
SRT_Table	tsrc/sqliteInt.h	2775;"	d
SRT_Union	sqlite3.c	15357;"	d	file:
SRT_Union	src/sqliteInt.h	2758;"	d
SRT_Union	tsrc/sqliteInt.h	2758;"	d
SRVAL	sqlite3.c	85069;"	d	file:
SRVAL	src/vdbesort.c	456;"	d	file:
SRVAL	tsrc/vdbesort.c	456;"	d	file:
SSCONFLICT	tool/lemon.c	/^  SSCONFLICT,              \/* A shift\/shift conflict *\/$/;"	e	enum:e_action	file:
STANDALONE_MIN	ext/fts2/fts2.c	4461;"	d	file:
STANDALONE_MIN	tsrc/fts2.c	4461;"	d	file:
STATCNT	ext/misc/vfsstat.c	122;"	d	file:
STATICBUFFERSIZE	autoconf/tea/win/nmakehlp.c	56;"	d	file:
STATIC_MUTEXES	src/test_mutex.c	27;"	d	file:
STAT_GET_NDLT	sqlite3.c	95439;"	d	file:
STAT_GET_NDLT	src/analyze.c	790;"	d	file:
STAT_GET_NDLT	tsrc/analyze.c	790;"	d	file:
STAT_GET_NEQ	sqlite3.c	95437;"	d	file:
STAT_GET_NEQ	src/analyze.c	788;"	d	file:
STAT_GET_NEQ	tsrc/analyze.c	788;"	d	file:
STAT_GET_NLT	sqlite3.c	95438;"	d	file:
STAT_GET_NLT	src/analyze.c	789;"	d	file:
STAT_GET_NLT	tsrc/analyze.c	789;"	d	file:
STAT_GET_ROWID	sqlite3.c	95436;"	d	file:
STAT_GET_ROWID	src/analyze.c	787;"	d	file:
STAT_GET_ROWID	tsrc/analyze.c	787;"	d	file:
STAT_GET_STAT1	sqlite3.c	95435;"	d	file:
STAT_GET_STAT1	src/analyze.c	786;"	d	file:
STAT_GET_STAT1	tsrc/analyze.c	786;"	d	file:
STDC_HEADERS	config.h	126;"	d
STDC_HEADERS	tsrc/config.h	126;"	d
STRACCUM_NOMEM	sqlite3.c	15750;"	d	file:
STRACCUM_NOMEM	src/sqliteInt.h	3151;"	d
STRACCUM_NOMEM	tsrc/sqliteInt.h	3151;"	d
STRACCUM_TOOBIG	sqlite3.c	15751;"	d	file:
STRACCUM_TOOBIG	src/sqliteInt.h	3152;"	d
STRACCUM_TOOBIG	tsrc/sqliteInt.h	3152;"	d
STRESS2_COUNT2	test/tt3_stress.c	188;"	d	file:
STRESS2_COUNT3	test/tt3_stress.c	189;"	d	file:
STRESS2_TABCNT	test/tt3_stress.c	186;"	d	file:
STRINGVALUE	src/test_config.c	40;"	d	file:
STRINGVALUE2	src/test_config.c	39;"	d	file:
STR_FUNCTION	sqlite3.c	14206;"	d	file:
STR_FUNCTION	src/sqliteInt.h	1607;"	d
STR_FUNCTION	tsrc/sqliteInt.h	1607;"	d
SUBQUERY	tool/mkkeywordhash.c	111;"	d	file:
SUBQUERY	tool/mkkeywordhash.c	113;"	d	file:
SWAP	ext/rbu/sqlite3rbu.c	103;"	d	file:
SWAP	sqlite3.c	11550;"	d	file:
SWAP	sqlite3.c	165026;"	d	file:
SWAP	src/sqliteInt.h	616;"	d
SWAP	tsrc/sqlite3rbu.c	103;"	d	file:
SWAP	tsrc/sqliteInt.h	616;"	d
SWAPVAL	ext/fts5/fts5_index.c	2074;"	d	file:
SWAPVAL	fts5.c	9886;"	d	file:
SWAPVAL	sqlite3.c	187018;"	d	file:
SWAPVAL	tsrc/fts5.c	9886;"	d	file:
SYSCALL	sqlite3.c	37583;"	d	file:
SYSCALL	src/os_win.c	467;"	d	file:
SYSCALL	tsrc/os_win.c	467;"	d	file:
S_ISREG	src/test_fs.c	90;"	d	file:
SavedModeInfo	shell.c	/^struct SavedModeInfo {$/;"	s	file:
SavedModeInfo	shell.c	/^typedef struct SavedModeInfo SavedModeInfo;$/;"	t	typeref:struct:SavedModeInfo	file:
SavedModeInfo	src/shell.c	/^struct SavedModeInfo {$/;"	s	file:
SavedModeInfo	src/shell.c	/^typedef struct SavedModeInfo SavedModeInfo;$/;"	t	typeref:struct:SavedModeInfo	file:
SavedModeInfo	tsrc/shell.c	/^struct SavedModeInfo {$/;"	s	file:
SavedModeInfo	tsrc/shell.c	/^typedef struct SavedModeInfo SavedModeInfo;$/;"	t	typeref:struct:SavedModeInfo	file:
Savepoint	sqlite3.c	/^struct Savepoint {$/;"	s	file:
Savepoint	sqlite3.c	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint	file:
Savepoint	src/sqliteInt.h	/^struct Savepoint {$/;"	s
Savepoint	src/sqliteInt.h	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint
Savepoint	tsrc/sqliteInt.h	/^struct Savepoint {$/;"	s
Savepoint	tsrc/sqliteInt.h	/^typedef struct Savepoint Savepoint;$/;"	t	typeref:struct:Savepoint
ScanStatus	sqlite3.c	/^struct ScanStatus {$/;"	s	file:
ScanStatus	sqlite3.c	/^typedef struct ScanStatus ScanStatus;$/;"	t	typeref:struct:ScanStatus	file:
ScanStatus	src/vdbeInt.h	/^struct ScanStatus {$/;"	s
ScanStatus	src/vdbeInt.h	/^typedef struct ScanStatus ScanStatus;$/;"	t	typeref:struct:ScanStatus
ScanStatus	tsrc/vdbeInt.h	/^struct ScanStatus {$/;"	s
ScanStatus	tsrc/vdbeInt.h	/^typedef struct ScanStatus ScanStatus;$/;"	t	typeref:struct:ScanStatus
Schema	sqlite3.c	/^struct Schema {$/;"	s	file:
Schema	sqlite3.c	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema	file:
Schema	src/sqliteInt.h	/^struct Schema {$/;"	s
Schema	src/sqliteInt.h	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema
Schema	tsrc/sqliteInt.h	/^struct Schema {$/;"	s
Schema	tsrc/sqliteInt.h	/^typedef struct Schema Schema;$/;"	t	typeref:struct:Schema
ScratchFreeslot	sqlite3.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	sqlite3.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
ScratchFreeslot	src/malloc.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	src/malloc.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
ScratchFreeslot	tsrc/malloc.c	/^typedef struct ScratchFreeslot {$/;"	s	file:
ScratchFreeslot	tsrc/malloc.c	/^} ScratchFreeslot;$/;"	t	typeref:struct:ScratchFreeslot	file:
ScrubState	ext/misc/scrub.c	/^struct ScrubState {$/;"	s	file:
ScrubState	ext/misc/scrub.c	/^typedef struct ScrubState ScrubState;$/;"	t	typeref:struct:ScrubState	file:
SegmentNode	ext/fts3/fts3_write.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	ext/fts3/fts3_write.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentNode	sqlite3.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	sqlite3.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentNode	tsrc/fts3_write.c	/^struct SegmentNode {$/;"	s	file:
SegmentNode	tsrc/fts3_write.c	/^typedef struct SegmentNode SegmentNode;$/;"	t	typeref:struct:SegmentNode	file:
SegmentWriter	ext/fts3/fts3_write.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	ext/fts3/fts3_write.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
SegmentWriter	sqlite3.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	sqlite3.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
SegmentWriter	tsrc/fts3_write.c	/^struct SegmentWriter {$/;"	s	file:
SegmentWriter	tsrc/fts3_write.c	/^typedef struct SegmentWriter SegmentWriter;$/;"	t	typeref:struct:SegmentWriter	file:
Select	sqlite3.c	/^struct Select {$/;"	s	file:
Select	sqlite3.c	/^typedef struct Select Select;$/;"	t	typeref:struct:Select	file:
Select	src/sqliteInt.h	/^struct Select {$/;"	s
Select	src/sqliteInt.h	/^typedef struct Select Select;$/;"	t	typeref:struct:Select
Select	test/fuzz_common.tcl	/^proc Select {{nMulti 0}} {$/;"	p
Select	tsrc/sqliteInt.h	/^struct Select {$/;"	s
Select	tsrc/sqliteInt.h	/^typedef struct Select Select;$/;"	t	typeref:struct:Select
SelectDest	sqlite3.c	/^struct SelectDest {$/;"	s	file:
SelectDest	sqlite3.c	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest	file:
SelectDest	src/sqliteInt.h	/^struct SelectDest {$/;"	s
SelectDest	src/sqliteInt.h	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest
SelectDest	tsrc/sqliteInt.h	/^struct SelectDest {$/;"	s
SelectDest	tsrc/sqliteInt.h	/^typedef struct SelectDest SelectDest;$/;"	t	typeref:struct:SelectDest
SelectKw	test/fuzz_common.tcl	/^proc SelectKw {} {$/;"	p
ServerState	src/test_server.c	/^static struct ServerState {$/;"	s	file:
SessionApplyCtx	ext/session/sqlite3session.c	/^struct SessionApplyCtx {$/;"	s	file:
SessionApplyCtx	ext/session/sqlite3session.c	/^typedef struct SessionApplyCtx SessionApplyCtx;$/;"	t	typeref:struct:SessionApplyCtx	file:
SessionApplyCtx	sqlite3.c	/^struct SessionApplyCtx {$/;"	s	file:
SessionApplyCtx	sqlite3.c	/^typedef struct SessionApplyCtx SessionApplyCtx;$/;"	t	typeref:struct:SessionApplyCtx	file:
SessionApplyCtx	tsrc/sqlite3session.c	/^struct SessionApplyCtx {$/;"	s	file:
SessionApplyCtx	tsrc/sqlite3session.c	/^typedef struct SessionApplyCtx SessionApplyCtx;$/;"	t	typeref:struct:SessionApplyCtx	file:
SessionBuffer	ext/session/sqlite3session.c	/^struct SessionBuffer {$/;"	s	file:
SessionBuffer	ext/session/sqlite3session.c	/^typedef struct SessionBuffer SessionBuffer;$/;"	t	typeref:struct:SessionBuffer	file:
SessionBuffer	sqlite3.c	/^struct SessionBuffer {$/;"	s	file:
SessionBuffer	sqlite3.c	/^typedef struct SessionBuffer SessionBuffer;$/;"	t	typeref:struct:SessionBuffer	file:
SessionBuffer	tsrc/sqlite3session.c	/^struct SessionBuffer {$/;"	s	file:
SessionBuffer	tsrc/sqlite3session.c	/^typedef struct SessionBuffer SessionBuffer;$/;"	t	typeref:struct:SessionBuffer	file:
SessionChange	ext/session/sqlite3session.c	/^struct SessionChange {$/;"	s	file:
SessionChange	ext/session/sqlite3session.c	/^typedef struct SessionChange SessionChange;$/;"	t	typeref:struct:SessionChange	file:
SessionChange	sqlite3.c	/^struct SessionChange {$/;"	s	file:
SessionChange	sqlite3.c	/^typedef struct SessionChange SessionChange;$/;"	t	typeref:struct:SessionChange	file:
SessionChange	tsrc/sqlite3session.c	/^struct SessionChange {$/;"	s	file:
SessionChange	tsrc/sqlite3session.c	/^typedef struct SessionChange SessionChange;$/;"	t	typeref:struct:SessionChange	file:
SessionDiffCtx	ext/session/sqlite3session.c	/^struct SessionDiffCtx {$/;"	s	file:
SessionDiffCtx	ext/session/sqlite3session.c	/^typedef struct SessionDiffCtx SessionDiffCtx;$/;"	t	typeref:struct:SessionDiffCtx	file:
SessionDiffCtx	sqlite3.c	/^struct SessionDiffCtx {$/;"	s	file:
SessionDiffCtx	sqlite3.c	/^typedef struct SessionDiffCtx SessionDiffCtx;$/;"	t	typeref:struct:SessionDiffCtx	file:
SessionDiffCtx	tsrc/sqlite3session.c	/^struct SessionDiffCtx {$/;"	s	file:
SessionDiffCtx	tsrc/sqlite3session.c	/^typedef struct SessionDiffCtx SessionDiffCtx;$/;"	t	typeref:struct:SessionDiffCtx	file:
SessionHook	ext/session/sqlite3session.c	/^struct SessionHook {$/;"	s	file:
SessionHook	ext/session/sqlite3session.c	/^typedef struct SessionHook SessionHook;$/;"	t	typeref:struct:SessionHook	file:
SessionHook	sqlite3.c	/^struct SessionHook {$/;"	s	file:
SessionHook	sqlite3.c	/^typedef struct SessionHook SessionHook;$/;"	t	typeref:struct:SessionHook	file:
SessionHook	tsrc/sqlite3session.c	/^struct SessionHook {$/;"	s	file:
SessionHook	tsrc/sqlite3session.c	/^typedef struct SessionHook SessionHook;$/;"	t	typeref:struct:SessionHook	file:
SessionInput	ext/session/sqlite3session.c	/^struct SessionInput {$/;"	s	file:
SessionInput	ext/session/sqlite3session.c	/^typedef struct SessionInput SessionInput;$/;"	t	typeref:struct:SessionInput	file:
SessionInput	sqlite3.c	/^struct SessionInput {$/;"	s	file:
SessionInput	sqlite3.c	/^typedef struct SessionInput SessionInput;$/;"	t	typeref:struct:SessionInput	file:
SessionInput	tsrc/sqlite3session.c	/^struct SessionInput {$/;"	s	file:
SessionInput	tsrc/sqlite3session.c	/^typedef struct SessionInput SessionInput;$/;"	t	typeref:struct:SessionInput	file:
SessionTable	ext/session/sqlite3session.c	/^struct SessionTable {$/;"	s	file:
SessionTable	ext/session/sqlite3session.c	/^typedef struct SessionTable SessionTable;$/;"	t	typeref:struct:SessionTable	file:
SessionTable	sqlite3.c	/^struct SessionTable {$/;"	s	file:
SessionTable	sqlite3.c	/^typedef struct SessionTable SessionTable;$/;"	t	typeref:struct:SessionTable	file:
SessionTable	tsrc/sqlite3session.c	/^struct SessionTable {$/;"	s	file:
SessionTable	tsrc/sqlite3session.c	/^typedef struct SessionTable SessionTable;$/;"	t	typeref:struct:SessionTable	file:
SetAdd	tool/lemon.c	/^int SetAdd(char *s, int e)$/;"	f
SetFind	tool/lemon.c	231;"	d	file:
SetFree	tool/lemon.c	/^void SetFree(char *s)$/;"	f
SetNew	tool/lemon.c	/^char *SetNew(){$/;"	f
SetSize	tool/lemon.c	/^void SetSize(int n)$/;"	f
SetUnion	tool/lemon.c	/^int SetUnion(char *s1, char *s2)$/;"	f
ShellState	shell.c	/^struct ShellState {$/;"	s	file:
ShellState	shell.c	/^typedef struct ShellState ShellState;$/;"	t	typeref:struct:ShellState	file:
ShellState	src/shell.c	/^struct ShellState {$/;"	s	file:
ShellState	src/shell.c	/^typedef struct ShellState ShellState;$/;"	t	typeref:struct:ShellState	file:
ShellState	tsrc/shell.c	/^struct ShellState {$/;"	s	file:
ShellState	tsrc/shell.c	/^typedef struct ShellState ShellState;$/;"	t	typeref:struct:ShellState	file:
ShmRegion	sqlite3.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
ShmRegion	src/os_win.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
ShmRegion	tsrc/os_win.c	/^  struct ShmRegion {$/;"	s	struct:winShmNode	file:
SimpleSelect	test/fuzz_common.tcl	/^proc SimpleSelect {{nRes 0}} {$/;"	p
SimulateDiskfullError	sqlite3.c	23327;"	d	file:
SimulateDiskfullError	sqlite3.c	23341;"	d	file:
SimulateDiskfullError	sqlite3.c	29578;"	d	file:
SimulateDiskfullError	sqlite3.c	29592;"	d	file:
SimulateDiskfullError	sqlite3.c	37107;"	d	file:
SimulateDiskfullError	sqlite3.c	37121;"	d	file:
SimulateDiskfullError	src/os_common.h	78;"	d
SimulateDiskfullError	src/os_common.h	92;"	d
SimulateDiskfullError	tsrc/os_common.h	78;"	d
SimulateDiskfullError	tsrc/os_common.h	92;"	d
SimulateIOError	sqlite3.c	23318;"	d	file:
SimulateIOError	sqlite3.c	23340;"	d	file:
SimulateIOError	sqlite3.c	29569;"	d	file:
SimulateIOError	sqlite3.c	29591;"	d	file:
SimulateIOError	sqlite3.c	37098;"	d	file:
SimulateIOError	sqlite3.c	37120;"	d	file:
SimulateIOError	src/os_common.h	69;"	d
SimulateIOError	src/os_common.h	91;"	d
SimulateIOError	tsrc/os_common.h	69;"	d
SimulateIOError	tsrc/os_common.h	91;"	d
SimulateIOErrorBenign	sqlite3.c	23317;"	d	file:
SimulateIOErrorBenign	sqlite3.c	23339;"	d	file:
SimulateIOErrorBenign	sqlite3.c	29568;"	d	file:
SimulateIOErrorBenign	sqlite3.c	29590;"	d	file:
SimulateIOErrorBenign	sqlite3.c	37097;"	d	file:
SimulateIOErrorBenign	sqlite3.c	37119;"	d	file:
SimulateIOErrorBenign	src/os_common.h	68;"	d
SimulateIOErrorBenign	src/os_common.h	90;"	d
SimulateIOErrorBenign	tsrc/os_common.h	68;"	d
SimulateIOErrorBenign	tsrc/os_common.h	90;"	d
SizeofArray	ext/fts3/fts3Int.h	82;"	d
SizeofArray	sqlite3.c	141506;"	d	file:
SizeofArray	tsrc/fts3Int.h	82;"	d
Snippet	ext/fts1/fts1.c	/^typedef struct Snippet {$/;"	s	file:
Snippet	ext/fts1/fts1.c	/^} Snippet;$/;"	t	typeref:struct:Snippet	file:
Snippet	ext/fts2/fts2.c	/^typedef struct Snippet {$/;"	s	file:
Snippet	ext/fts2/fts2.c	/^} Snippet;$/;"	t	typeref:struct:Snippet	file:
Snippet	tsrc/fts1.c	/^typedef struct Snippet {$/;"	s	file:
Snippet	tsrc/fts1.c	/^} Snippet;$/;"	t	typeref:struct:Snippet	file:
Snippet	tsrc/fts2.c	/^typedef struct Snippet {$/;"	s	file:
Snippet	tsrc/fts2.c	/^} Snippet;$/;"	t	typeref:struct:Snippet	file:
SnippetFragment	ext/fts3/fts3_snippet.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	ext/fts3/fts3_snippet.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetFragment	sqlite3.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	sqlite3.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetFragment	tsrc/fts3_snippet.c	/^struct SnippetFragment {$/;"	s	file:
SnippetFragment	tsrc/fts3_snippet.c	/^typedef struct SnippetFragment SnippetFragment;$/;"	t	typeref:struct:SnippetFragment	file:
SnippetIter	ext/fts3/fts3_snippet.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	ext/fts3/fts3_snippet.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetIter	sqlite3.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	sqlite3.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetIter	tsrc/fts3_snippet.c	/^struct SnippetIter {$/;"	s	file:
SnippetIter	tsrc/fts3_snippet.c	/^typedef struct SnippetIter SnippetIter;$/;"	t	typeref:struct:SnippetIter	file:
SnippetPhrase	ext/fts3/fts3_snippet.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	ext/fts3/fts3_snippet.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SnippetPhrase	sqlite3.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	sqlite3.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SnippetPhrase	tsrc/fts3_snippet.c	/^struct SnippetPhrase {$/;"	s	file:
SnippetPhrase	tsrc/fts3_snippet.c	/^typedef struct SnippetPhrase SnippetPhrase;$/;"	t	typeref:struct:SnippetPhrase	file:
SortByDimension	ext/rtree/rtree.c	/^static void SortByDimension($/;"	f	file:
SortByDimension	sqlite3.c	/^static void SortByDimension($/;"	f	file:
SortByDimension	tsrc/rtree.c	/^static void SortByDimension($/;"	f	file:
SortByDistance	ext/rtree/rtree.c	/^static void SortByDistance($/;"	f	file:
SortByDistance	sqlite3.c	/^static void SortByDistance($/;"	f	file:
SortByDistance	tsrc/rtree.c	/^static void SortByDistance($/;"	f	file:
SortCtx	sqlite3.c	/^struct SortCtx {$/;"	s	file:
SortCtx	sqlite3.c	/^typedef struct SortCtx SortCtx;$/;"	t	typeref:struct:SortCtx	file:
SortCtx	src/select.c	/^struct SortCtx {$/;"	s	file:
SortCtx	src/select.c	/^typedef struct SortCtx SortCtx;$/;"	t	typeref:struct:SortCtx	file:
SortCtx	tsrc/select.c	/^struct SortCtx {$/;"	s	file:
SortCtx	tsrc/select.c	/^typedef struct SortCtx SortCtx;$/;"	t	typeref:struct:SortCtx	file:
SortSubtask	sqlite3.c	/^struct SortSubtask {$/;"	s	file:
SortSubtask	sqlite3.c	/^typedef struct SortSubtask SortSubtask;     \/* A sub-task in the sort process *\/$/;"	t	typeref:struct:SortSubtask	file:
SortSubtask	src/vdbesort.c	/^struct SortSubtask {$/;"	s	file:
SortSubtask	src/vdbesort.c	/^typedef struct SortSubtask SortSubtask;     \/* A sub-task in the sort process *\/$/;"	t	typeref:struct:SortSubtask	file:
SortSubtask	tsrc/vdbesort.c	/^struct SortSubtask {$/;"	s	file:
SortSubtask	tsrc/vdbesort.c	/^typedef struct SortSubtask SortSubtask;     \/* A sub-task in the sort process *\/$/;"	t	typeref:struct:SortSubtask	file:
SorterCompare	sqlite3.c	/^typedef int (*SorterCompare)(SortSubtask*,int*,const void*,int,const void*,int);$/;"	t	file:
SorterCompare	src/vdbesort.c	/^typedef int (*SorterCompare)(SortSubtask*,int*,const void*,int,const void*,int);$/;"	t	file:
SorterCompare	tsrc/vdbesort.c	/^typedef int (*SorterCompare)(SortSubtask*,int*,const void*,int,const void*,int);$/;"	t	file:
SorterFile	sqlite3.c	/^struct SorterFile {$/;"	s	file:
SorterFile	sqlite3.c	/^typedef struct SorterFile SorterFile;       \/* Temporary file object wrapper *\/$/;"	t	typeref:struct:SorterFile	file:
SorterFile	src/vdbesort.c	/^struct SorterFile {$/;"	s	file:
SorterFile	src/vdbesort.c	/^typedef struct SorterFile SorterFile;       \/* Temporary file object wrapper *\/$/;"	t	typeref:struct:SorterFile	file:
SorterFile	tsrc/vdbesort.c	/^struct SorterFile {$/;"	s	file:
SorterFile	tsrc/vdbesort.c	/^typedef struct SorterFile SorterFile;       \/* Temporary file object wrapper *\/$/;"	t	typeref:struct:SorterFile	file:
SorterList	sqlite3.c	/^struct SorterList {$/;"	s	file:
SorterList	sqlite3.c	/^typedef struct SorterList SorterList;       \/* In-memory list of records *\/$/;"	t	typeref:struct:SorterList	file:
SorterList	src/vdbesort.c	/^struct SorterList {$/;"	s	file:
SorterList	src/vdbesort.c	/^typedef struct SorterList SorterList;       \/* In-memory list of records *\/$/;"	t	typeref:struct:SorterList	file:
SorterList	tsrc/vdbesort.c	/^struct SorterList {$/;"	s	file:
SorterList	tsrc/vdbesort.c	/^typedef struct SorterList SorterList;       \/* In-memory list of records *\/$/;"	t	typeref:struct:SorterList	file:
SorterRecord	sqlite3.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	sqlite3.c	/^typedef struct SorterRecord SorterRecord;   \/* A record being sorted *\/$/;"	t	typeref:struct:SorterRecord	file:
SorterRecord	src/vdbesort.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	src/vdbesort.c	/^typedef struct SorterRecord SorterRecord;   \/* A record being sorted *\/$/;"	t	typeref:struct:SorterRecord	file:
SorterRecord	tsrc/vdbesort.c	/^struct SorterRecord {$/;"	s	file:
SorterRecord	tsrc/vdbesort.c	/^typedef struct SorterRecord SorterRecord;   \/* A record being sorted *\/$/;"	t	typeref:struct:SorterRecord	file:
SplitNode	ext/rtree/rtree.c	/^static int SplitNode($/;"	f	file:
SplitNode	sqlite3.c	/^static int SplitNode($/;"	f	file:
SplitNode	tsrc/rtree.c	/^static int SplitNode($/;"	f	file:
SqlCollate	src/tclsqlite.c	/^struct SqlCollate {$/;"	s	file:
SqlCollate	src/tclsqlite.c	/^typedef struct SqlCollate SqlCollate;$/;"	t	typeref:struct:SqlCollate	file:
SqlCollate	tsrc/tclsqlite.c	/^struct SqlCollate {$/;"	s	file:
SqlCollate	tsrc/tclsqlite.c	/^typedef struct SqlCollate SqlCollate;$/;"	t	typeref:struct:SqlCollate	file:
SqlFunc	src/tclsqlite.c	/^struct SqlFunc {$/;"	s	file:
SqlFunc	src/tclsqlite.c	/^typedef struct SqlFunc SqlFunc;$/;"	t	typeref:struct:SqlFunc	file:
SqlFunc	tsrc/tclsqlite.c	/^struct SqlFunc {$/;"	s	file:
SqlFunc	tsrc/tclsqlite.c	/^typedef struct SqlFunc SqlFunc;$/;"	t	typeref:struct:SqlFunc	file:
SqlMessage	src/test_server.c	/^struct SqlMessage {$/;"	s	file:
SqlMessage	src/test_server.c	/^typedef struct SqlMessage SqlMessage;$/;"	t	typeref:struct:SqlMessage	file:
SqlPreparedStmt	src/tclsqlite.c	/^struct SqlPreparedStmt {$/;"	s	file:
SqlPreparedStmt	src/tclsqlite.c	/^typedef struct SqlPreparedStmt SqlPreparedStmt;$/;"	t	typeref:struct:SqlPreparedStmt	file:
SqlPreparedStmt	tsrc/tclsqlite.c	/^struct SqlPreparedStmt {$/;"	s	file:
SqlPreparedStmt	tsrc/tclsqlite.c	/^typedef struct SqlPreparedStmt SqlPreparedStmt;$/;"	t	typeref:struct:SqlPreparedStmt	file:
SqlThread	src/test_thread.c	/^struct SqlThread {$/;"	s	file:
SqlThread	src/test_thread.c	/^typedef struct SqlThread SqlThread;$/;"	t	typeref:struct:SqlThread	file:
Sqlite	test/threadtest3.c	/^struct Sqlite {$/;"	s	file:
Sqlite	test/threadtest3.c	/^typedef struct Sqlite Sqlite;$/;"	t	typeref:struct:Sqlite	file:
Sqlite3Config	sqlite3.c	/^struct Sqlite3Config {$/;"	s	file:
Sqlite3Config	src/sqliteInt.h	/^struct Sqlite3Config {$/;"	s
Sqlite3Config	tsrc/sqliteInt.h	/^struct Sqlite3Config {$/;"	s
Sqlite3_Init	src/tclsqlite.c	/^EXTERN int Sqlite3_Init(Tcl_Interp *interp){$/;"	f
Sqlite3_Init	tsrc/tclsqlite.c	/^EXTERN int Sqlite3_Init(Tcl_Interp *interp){$/;"	f
Sqlite3_SafeInit	src/tclsqlite.c	/^EXTERN int Sqlite3_SafeInit(Tcl_Interp *interp){ return TCL_ERROR; }$/;"	f
Sqlite3_SafeInit	tsrc/tclsqlite.c	/^EXTERN int Sqlite3_SafeInit(Tcl_Interp *interp){ return TCL_ERROR; }$/;"	f
Sqlite3_SafeUnload	src/tclsqlite.c	/^EXTERN int Sqlite3_SafeUnload(Tcl_Interp *interp, int flags){return TCL_ERROR;}$/;"	f
Sqlite3_SafeUnload	tsrc/tclsqlite.c	/^EXTERN int Sqlite3_SafeUnload(Tcl_Interp *interp, int flags){return TCL_ERROR;}$/;"	f
Sqlite3_Unload	src/tclsqlite.c	/^EXTERN int Sqlite3_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Sqlite3_Unload	tsrc/tclsqlite.c	/^EXTERN int Sqlite3_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
SqliteDb	ext/fts5/fts5_tcl.c	/^struct SqliteDb {$/;"	s	file:
SqliteDb	src/tclsqlite.c	/^struct SqliteDb {$/;"	s	file:
SqliteDb	src/tclsqlite.c	/^typedef struct SqliteDb SqliteDb;$/;"	t	typeref:struct:SqliteDb	file:
SqliteDb	src/test1.c	/^struct SqliteDb {$/;"	s	file:
SqliteDb	tsrc/tclsqlite.c	/^struct SqliteDb {$/;"	s	file:
SqliteDb	tsrc/tclsqlite.c	/^typedef struct SqliteDb SqliteDb;$/;"	t	typeref:struct:SqliteDb	file:
SqliteRbu_Init	ext/rbu/test_rbu.c	/^int SqliteRbu_Init(Tcl_Interp *interp){ $/;"	f
SqliteRbu_Init	ext/rbu/test_rbu.c	/^int SqliteRbu_Init(Tcl_Interp *interp){ return TCL_OK; }$/;"	f
SqliteSuperlock_Init	src/test_superlock.c	/^int SqliteSuperlock_Init(Tcl_Interp *interp){$/;"	f
Sqlite_Init	src/tclsqlite.c	/^int Sqlite_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Sqlite_Init	tsrc/tclsqlite.c	/^int Sqlite_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Sqlite_Unload	src/tclsqlite.c	/^int Sqlite_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Sqlite_Unload	tsrc/tclsqlite.c	/^int Sqlite_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Sqliteconfig_Init	src/test_config.c	/^int Sqliteconfig_Init(Tcl_Interp *interp){$/;"	f
Sqlitemultiplex_Init	src/test_multiplex.c	/^int Sqlitemultiplex_Init(Tcl_Interp *interp){$/;"	f
Sqlitequota_Init	src/test_quota.c	/^int Sqlitequota_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest1_Init	src/test1.c	/^int Sqlitetest1_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest2_Init	src/test2.c	/^int Sqlitetest2_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest3_Init	src/test3.c	/^int Sqlitetest3_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest4_Init	src/test4.c	/^int Sqlitetest4_Init(Tcl_Interp *interp){ return TCL_OK; }$/;"	f
Sqlitetest4_Init	src/test4.c	/^int Sqlitetest4_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest5_Init	src/test5.c	/^int Sqlitetest5_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest6_Init	src/test6.c	/^int Sqlitetest6_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest7_Init	src/test7.c	/^int Sqlitetest7_Init(Tcl_Interp *interp){ return TCL_OK; }$/;"	f
Sqlitetest7_Init	src/test7.c	/^int Sqlitetest7_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest8_Init	src/test8.c	/^int Sqlitetest8_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest9_Init	src/test9.c	/^int Sqlitetest9_Init(Tcl_Interp *interp){$/;"	f
SqlitetestOnefile_Init	src/test_onefile.c	/^  int SqlitetestOnefile_Init() {return fs_register();}$/;"	f
SqlitetestOsinst_Init	src/test_osinst.c	/^int SqlitetestOsinst_Init(Tcl_Interp *interp){$/;"	f
SqlitetestSyscall_Init	src/test_syscall.c	/^int SqlitetestSyscall_Init(Tcl_Interp *interp){$/;"	f
SqlitetestThread_Init	src/test_thread.c	/^int SqlitetestThread_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_autoext_Init	src/test_autoext.c	/^int Sqlitetest_autoext_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_blob_Init	src/test_blob.c	/^int Sqlitetest_blob_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_demovfs_Init	src/test_demovfs.c	/^int Sqlitetest_demovfs_Init(Tcl_Interp *interp){ return TCL_OK; }$/;"	f
Sqlitetest_demovfs_Init	src/test_demovfs.c	/^int Sqlitetest_demovfs_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_func_Init	src/test_func.c	/^int Sqlitetest_func_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_hexio_Init	src/test_hexio.c	/^int Sqlitetest_hexio_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_init_Init	src/test_init.c	/^int Sqlitetest_init_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_malloc_Init	src/test_malloc.c	/^int Sqlitetest_malloc_Init(Tcl_Interp *interp){$/;"	f
Sqlitetest_mutex_Init	src/test_mutex.c	/^int Sqlitetest_mutex_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestasync_Init	src/test_async.c	/^int Sqlitetestasync_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestbackup_Init	src/test_backup.c	/^int Sqlitetestbackup_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestfs_Init	src/test_fs.c	/^int Sqlitetestfs_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestfts3_Init	ext/fts3/fts3_test.c	/^int Sqlitetestfts3_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestintarray_Init	src/test_intarray.c	/^int Sqlitetestintarray_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestrtree_Init	src/test_rtree.c	/^int Sqlitetestrtree_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestschema_Init	src/test_schema.c	/^int Sqlitetestschema_Init(Tcl_Interp *interp){$/;"	f
Sqlitetesttcl_Init	src/test_bestindex.c	/^int Sqlitetesttcl_Init(Tcl_Interp *interp){$/;"	f
Sqlitetesttclvar_Init	src/test_tclvar.c	/^int Sqlitetesttclvar_Init(Tcl_Interp *interp){$/;"	f
Sqlitetestvfs_Init	src/test_vfs.c	/^int Sqlitetestvfs_Init(Tcl_Interp *interp){$/;"	f
SrcCount	sqlite3.c	/^struct SrcCount {$/;"	s	file:
SrcCount	src/expr.c	/^struct SrcCount {$/;"	s	file:
SrcCount	tsrc/expr.c	/^struct SrcCount {$/;"	s	file:
SrcList	sqlite3.c	/^struct SrcList {$/;"	s	file:
SrcList	sqlite3.c	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList	file:
SrcList	src/sqliteInt.h	/^struct SrcList {$/;"	s
SrcList	src/sqliteInt.h	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList
SrcList	tsrc/sqliteInt.h	/^struct SrcList {$/;"	s
SrcList	tsrc/sqliteInt.h	/^typedef struct SrcList SrcList;$/;"	t	typeref:struct:SrcList
SrcList_item	sqlite3.c	/^  struct SrcList_item {$/;"	s	struct:SrcList	file:
SrcList_item	src/sqliteInt.h	/^  struct SrcList_item {$/;"	s	struct:SrcList
SrcList_item	tsrc/sqliteInt.h	/^  struct SrcList_item {$/;"	s	struct:SrcList
Stat4Accum	sqlite3.c	/^struct Stat4Accum {$/;"	s	file:
Stat4Accum	sqlite3.c	/^typedef struct Stat4Accum Stat4Accum;$/;"	t	typeref:struct:Stat4Accum	file:
Stat4Accum	src/analyze.c	/^struct Stat4Accum {$/;"	s	file:
Stat4Accum	src/analyze.c	/^typedef struct Stat4Accum Stat4Accum;$/;"	t	typeref:struct:Stat4Accum	file:
Stat4Accum	tsrc/analyze.c	/^struct Stat4Accum {$/;"	s	file:
Stat4Accum	tsrc/analyze.c	/^typedef struct Stat4Accum Stat4Accum;$/;"	t	typeref:struct:Stat4Accum	file:
Stat4Sample	sqlite3.c	/^struct Stat4Sample {$/;"	s	file:
Stat4Sample	sqlite3.c	/^typedef struct Stat4Sample Stat4Sample;$/;"	t	typeref:struct:Stat4Sample	file:
Stat4Sample	src/analyze.c	/^struct Stat4Sample {$/;"	s	file:
Stat4Sample	src/analyze.c	/^typedef struct Stat4Sample Stat4Sample;$/;"	t	typeref:struct:Stat4Sample	file:
Stat4Sample	tsrc/analyze.c	/^struct Stat4Sample {$/;"	s	file:
Stat4Sample	tsrc/analyze.c	/^typedef struct Stat4Sample Stat4Sample;$/;"	t	typeref:struct:Stat4Sample	file:
StatCell	sqlite3.c	/^struct StatCell {$/;"	s	file:
StatCell	sqlite3.c	/^typedef struct StatCell StatCell;$/;"	t	typeref:struct:StatCell	file:
StatCell	src/dbstat.c	/^struct StatCell {$/;"	s	file:
StatCell	src/dbstat.c	/^typedef struct StatCell StatCell;$/;"	t	typeref:struct:StatCell	file:
StatCell	tsrc/dbstat.c	/^struct StatCell {$/;"	s	file:
StatCell	tsrc/dbstat.c	/^typedef struct StatCell StatCell;$/;"	t	typeref:struct:StatCell	file:
StatCursor	sqlite3.c	/^struct StatCursor {$/;"	s	file:
StatCursor	sqlite3.c	/^typedef struct StatCursor StatCursor;$/;"	t	typeref:struct:StatCursor	file:
StatCursor	src/dbstat.c	/^struct StatCursor {$/;"	s	file:
StatCursor	src/dbstat.c	/^typedef struct StatCursor StatCursor;$/;"	t	typeref:struct:StatCursor	file:
StatCursor	tsrc/dbstat.c	/^struct StatCursor {$/;"	s	file:
StatCursor	tsrc/dbstat.c	/^typedef struct StatCursor StatCursor;$/;"	t	typeref:struct:StatCursor	file:
StatPage	sqlite3.c	/^struct StatPage {$/;"	s	file:
StatPage	sqlite3.c	/^typedef struct StatPage StatPage;$/;"	t	typeref:struct:StatPage	file:
StatPage	src/dbstat.c	/^struct StatPage {$/;"	s	file:
StatPage	src/dbstat.c	/^typedef struct StatPage StatPage;$/;"	t	typeref:struct:StatPage	file:
StatPage	tsrc/dbstat.c	/^struct StatPage {$/;"	s	file:
StatPage	tsrc/dbstat.c	/^typedef struct StatPage StatPage;$/;"	t	typeref:struct:StatPage	file:
StatTable	sqlite3.c	/^struct StatTable {$/;"	s	file:
StatTable	sqlite3.c	/^typedef struct StatTable StatTable;$/;"	t	typeref:struct:StatTable	file:
StatTable	src/dbstat.c	/^struct StatTable {$/;"	s	file:
StatTable	src/dbstat.c	/^typedef struct StatTable StatTable;$/;"	t	typeref:struct:StatTable	file:
StatTable	tsrc/dbstat.c	/^struct StatTable {$/;"	s	file:
StatTable	tsrc/dbstat.c	/^typedef struct StatTable StatTable;$/;"	t	typeref:struct:StatTable	file:
State_arrayof	tool/lemon.c	/^struct state **State_arrayof()$/;"	f
State_find	tool/lemon.c	/^struct state *State_find(struct config *key)$/;"	f
State_init	tool/lemon.c	/^void State_init(){$/;"	f
State_insert	tool/lemon.c	/^int State_insert(struct state *data, struct config *key)$/;"	f
State_new	tool/lemon.c	/^struct state *State_new()$/;"	f
Statement	test/fuzz_common.tcl	/^proc Statement {} {$/;"	p
Statement	test/threadtest3.c	/^struct Statement {$/;"	s	file:
Statement	test/threadtest3.c	/^typedef struct Statement Statement;$/;"	t	typeref:struct:Statement	file:
StmtToDb	src/test1.c	138;"	d	file:
Str	tool/sqldiff.c	/^struct Str {$/;"	s	file:
Str	tool/sqldiff.c	/^typedef struct Str Str;$/;"	t	typeref:struct:Str	file:
StrAccum	sqlite3.c	/^struct StrAccum {$/;"	s	file:
StrAccum	sqlite3.c	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum	file:
StrAccum	src/sqliteInt.h	/^struct StrAccum {$/;"	s
StrAccum	src/sqliteInt.h	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum
StrAccum	tsrc/sqliteInt.h	/^struct StrAccum {$/;"	s
StrAccum	tsrc/sqliteInt.h	/^typedef struct StrAccum StrAccum;$/;"	t	typeref:struct:StrAccum
StrBuffer	ext/fts3/fts3_snippet.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	ext/fts3/fts3_snippet.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
StrBuffer	sqlite3.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	sqlite3.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
StrBuffer	tsrc/fts3_snippet.c	/^struct StrBuffer {$/;"	s	file:
StrBuffer	tsrc/fts3_snippet.c	/^typedef struct StrBuffer StrBuffer;$/;"	t	typeref:struct:StrBuffer	file:
Stress2Ctx	test/tt3_stress.c	/^struct Stress2Ctx {$/;"	s	file:
Stress2Ctx	test/tt3_stress.c	/^typedef struct Stress2Ctx Stress2Ctx;$/;"	t	typeref:struct:Stress2Ctx	file:
String	mptest/mptest.c	/^struct String {$/;"	s	file:
String	mptest/mptest.c	/^typedef struct String String;$/;"	t	typeref:struct:String	file:
StringBuffer	ext/fts1/fts1.c	/^typedef struct StringBuffer {$/;"	s	file:
StringBuffer	ext/fts1/fts1.c	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer	file:
StringBuffer	ext/fts2/fts2.c	/^typedef struct StringBuffer {$/;"	s	file:
StringBuffer	ext/fts2/fts2.c	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer	file:
StringBuffer	tsrc/fts1.c	/^typedef struct StringBuffer {$/;"	s	file:
StringBuffer	tsrc/fts1.c	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer	file:
StringBuffer	tsrc/fts2.c	/^typedef struct StringBuffer {$/;"	s	file:
StringBuffer	tsrc/fts2.c	/^} StringBuffer;$/;"	t	typeref:struct:StringBuffer	file:
Stringify	sqlite3.c	77197;"	d	file:
Stringify	src/vdbe.c	158;"	d	file:
Stringify	tsrc/vdbe.c	158;"	d	file:
Strsafe	tool/lemon.c	/^const char *Strsafe(const char *y)$/;"	f
Strsafe_find	tool/lemon.c	/^const char *Strsafe_find(const char *key)$/;"	f
Strsafe_init	tool/lemon.c	/^void Strsafe_init(){$/;"	f
Strsafe_insert	tool/lemon.c	/^int Strsafe_insert(const char *data)$/;"	f
SubProgram	sqlite3.c	/^struct SubProgram {$/;"	s	file:
SubProgram	sqlite3.c	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram	file:
SubProgram	src/vdbe.h	/^struct SubProgram {$/;"	s
SubProgram	src/vdbe.h	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram
SubProgram	tsrc/vdbe.h	/^struct SubProgram {$/;"	s
SubProgram	tsrc/vdbe.h	/^typedef struct SubProgram SubProgram;$/;"	t	typeref:struct:SubProgram
SubstituteFile	autoconf/tea/win/nmakehlp.c	/^SubstituteFile($/;"	f	file:
Success	tool/GetFile.cs	/^        Success = 0,$/;"	e	enum:GetFile.ExitCode	file:
Success	tool/Replace.cs	/^        Success = 0,$/;"	e	enum:Replace.ExitCode	file:
SumCtx	sqlite3.c	/^struct SumCtx {$/;"	s	file:
SumCtx	sqlite3.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
SumCtx	src/func.c	/^struct SumCtx {$/;"	s	file:
SumCtx	src/func.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
SumCtx	tsrc/func.c	/^struct SumCtx {$/;"	s	file:
SumCtx	tsrc/func.c	/^typedef struct SumCtx SumCtx;$/;"	t	typeref:struct:SumCtx	file:
Superlock	src/test_superlock.c	/^struct Superlock {$/;"	s	file:
Superlock	src/test_superlock.c	/^typedef struct Superlock Superlock;$/;"	t	typeref:struct:Superlock	file:
SuperlockBusy	src/test_superlock.c	/^struct SuperlockBusy {$/;"	s	file:
SuperlockBusy	src/test_superlock.c	/^typedef struct SuperlockBusy SuperlockBusy;$/;"	t	typeref:struct:SuperlockBusy	file:
Symbol_Nth	tool/lemon.c	/^struct symbol *Symbol_Nth(int n)$/;"	f
Symbol_arrayof	tool/lemon.c	/^struct symbol **Symbol_arrayof()$/;"	f
Symbol_count	tool/lemon.c	/^int Symbol_count()$/;"	f
Symbol_find	tool/lemon.c	/^struct symbol *Symbol_find(const char *key)$/;"	f
Symbol_init	tool/lemon.c	/^void Symbol_init(){$/;"	f
Symbol_insert	tool/lemon.c	/^int Symbol_insert(struct symbol *data, const char *key)$/;"	f
Symbol_new	tool/lemon.c	/^struct symbol *Symbol_new(const char *x)$/;"	f
Symbolcmpp	tool/lemon.c	/^int Symbolcmpp(const void *_a, const void *_b)$/;"	f
TCC	Makefile	/^TCC = ${CC} ${CFLAGS} -I. -I${TOP}\/src -I${TOP}\/ext\/rtree -I${TOP}\/ext\/icu$/;"	m
TCCX	main.mk	/^TCCX =  $(TCC) $(OPTS) -I. -I$(TOP)\/src -I$(TOP) $/;"	m
TCLLIBDIR	Makefile	/^TCLLIBDIR = \/usr\/share\/tcltk\/tcl8.6\/sqlite3$/;"	m
TCLSH_CMD	Makefile	/^TCLSH_CMD = tclsh8.6$/;"	m
TCLSH_MAIN	src/tclsqlite.c	/^int SQLITE_CDECL TCLSH_MAIN(int argc, char **argv){$/;"	f
TCLSH_MAIN	src/tclsqlite.c	4210;"	d	file:
TCLSH_MAIN	tsrc/tclsqlite.c	/^int SQLITE_CDECL TCLSH_MAIN(int argc, char **argv){$/;"	f
TCLSH_MAIN	tsrc/tclsqlite.c	4210;"	d	file:
TCLVAR_NAME_EQ	src/test_tclvar.c	33;"	d	file:
TCLVAR_NAME_MATCH	src/test_tclvar.c	34;"	d	file:
TCLVAR_VALUE_GLOB	src/test_tclvar.c	35;"	d	file:
TCLVAR_VALUE_LIKE	src/test_tclvar.c	37;"	d	file:
TCLVAR_VALUE_REGEXP	src/test_tclvar.c	36;"	d	file:
TCL_STORAGE_CLASS	src/tclsqlite.c	76;"	d	file:
TCL_STORAGE_CLASS	src/tclsqlite.c	77;"	d	file:
TCL_STORAGE_CLASS	tsrc/tclsqlite.c	76;"	d	file:
TCL_STORAGE_CLASS	tsrc/tclsqlite.c	77;"	d	file:
TCL_THREADS	src/test_async.c	17;"	d	file:
TEMP_MASTER_NAME	sqlite3.c	11854;"	d	file:
TEMP_MASTER_NAME	src/sqliteInt.h	920;"	d
TEMP_MASTER_NAME	tsrc/sqliteInt.h	920;"	d
TEMP_STORE	Makefile	/^TEMP_STORE = -DSQLITE_TEMP_STORE=1$/;"	m
TERMINAL	tool/lemon.c	/^  TERMINAL,$/;"	e	enum:symbol_type	file:
TERM_ANDINFO	sqlite3.c	123236;"	d	file:
TERM_ANDINFO	src/whereInt.h	272;"	d
TERM_ANDINFO	tsrc/whereInt.h	272;"	d
TERM_CHUNK_SELECT_STMT	ext/fts1/fulltext.c	/^  TERM_CHUNK_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_CODED	sqlite3.c	123233;"	d	file:
TERM_CODED	src/whereInt.h	269;"	d
TERM_CODED	tsrc/whereInt.h	269;"	d
TERM_COPIED	sqlite3.c	123234;"	d	file:
TERM_COPIED	src/whereInt.h	270;"	d
TERM_COPIED	tsrc/whereInt.h	270;"	d
TERM_DELETE_STMT	ext/fts1/fts1.c	/^  TERM_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_DELETE_STMT	ext/fts1/fulltext.c	/^  TERM_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_DELETE_STMT	tsrc/fts1.c	/^  TERM_DELETE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_DYNAMIC	sqlite3.c	123231;"	d	file:
TERM_DYNAMIC	src/whereInt.h	267;"	d
TERM_DYNAMIC	tsrc/whereInt.h	267;"	d
TERM_INSERT_STMT	ext/fts1/fts1.c	/^  TERM_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_INSERT_STMT	ext/fts1/fulltext.c	/^  TERM_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_INSERT_STMT	tsrc/fts1.c	/^  TERM_INSERT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_IS	sqlite3.c	123246;"	d	file:
TERM_IS	src/whereInt.h	282;"	d
TERM_IS	tsrc/whereInt.h	282;"	d
TERM_LIKE	sqlite3.c	123245;"	d	file:
TERM_LIKE	src/whereInt.h	281;"	d
TERM_LIKE	tsrc/whereInt.h	281;"	d
TERM_LIKECOND	sqlite3.c	123244;"	d	file:
TERM_LIKECOND	src/whereInt.h	280;"	d
TERM_LIKECOND	tsrc/whereInt.h	280;"	d
TERM_LIKEOPT	sqlite3.c	123243;"	d	file:
TERM_LIKEOPT	src/whereInt.h	279;"	d
TERM_LIKEOPT	tsrc/whereInt.h	279;"	d
TERM_ORINFO	sqlite3.c	123235;"	d	file:
TERM_ORINFO	src/whereInt.h	271;"	d
TERM_ORINFO	tsrc/whereInt.h	271;"	d
TERM_OR_OK	sqlite3.c	123237;"	d	file:
TERM_OR_OK	src/whereInt.h	273;"	d
TERM_OR_OK	tsrc/whereInt.h	273;"	d
TERM_SELECT_ALL_STMT	ext/fts1/fts1.c	/^  TERM_SELECT_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_SELECT_ALL_STMT	tsrc/fts1.c	/^  TERM_SELECT_ALL_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_SELECT_STMT	ext/fts1/fts1.c	/^  TERM_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_SELECT_STMT	ext/fts1/fulltext.c	/^  TERM_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_SELECT_STMT	tsrc/fts1.c	/^  TERM_SELECT_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_UPDATE_STMT	ext/fts1/fts1.c	/^  TERM_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_UPDATE_STMT	ext/fts1/fulltext.c	/^  TERM_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_UPDATE_STMT	tsrc/fts1.c	/^  TERM_UPDATE_STMT,$/;"	e	enum:fulltext_statement	file:
TERM_VIRTUAL	sqlite3.c	123232;"	d	file:
TERM_VIRTUAL	src/whereInt.h	268;"	d
TERM_VIRTUAL	tsrc/whereInt.h	268;"	d
TERM_VNULL	sqlite3.c	123239;"	d	file:
TERM_VNULL	sqlite3.c	123241;"	d	file:
TERM_VNULL	src/whereInt.h	275;"	d
TERM_VNULL	src/whereInt.h	277;"	d
TERM_VNULL	tsrc/whereInt.h	275;"	d
TERM_VNULL	tsrc/whereInt.h	277;"	d
TESTBIT	sqlite3.c	43381;"	d	file:
TESTBIT	src/bitvec.c	305;"	d	file:
TESTBIT	tsrc/bitvec.c	305;"	d	file:
TESTFIXTURE_FLAGS	Makefile	/^TESTFIXTURE_FLAGS  = -DTCLSH=1 -DSQLITE_TEST=1 -DSQLITE_CRASH_TEST=1$/;"	m
TESTFIXTURE_FLAGS	main.mk	/^TESTFIXTURE_FLAGS  = -DSQLITE_TEST=1 -DSQLITE_CRASH_TEST=1$/;"	m
TESTFIXTURE_SRC	Makefile	/^TESTFIXTURE_SRC = $(TESTSRC) $(TOP)\/src\/tclsqlite.c$/;"	m
TESTFIXTURE_SRC0	Makefile	/^TESTFIXTURE_SRC0 = $(TESTSRC2) libsqlite3.la$/;"	m
TESTFIXTURE_SRC1	Makefile	/^TESTFIXTURE_SRC1 = sqlite3.c$/;"	m
TESTONLY	ext/async/sqlite3async.c	167;"	d	file:
TESTONLY	ext/async/sqlite3async.c	169;"	d	file:
TESTONLY	ext/fts3/fts3Int.h	180;"	d
TESTONLY	ext/fts3/fts3Int.h	182;"	d
TESTONLY	sqlite3.c	11050;"	d	file:
TESTONLY	sqlite3.c	11052;"	d	file:
TESTONLY	sqlite3.c	141604;"	d	file:
TESTONLY	sqlite3.c	141606;"	d	file:
TESTONLY	src/sqliteInt.h	388;"	d
TESTONLY	src/sqliteInt.h	390;"	d
TESTONLY	tsrc/fts3Int.h	180;"	d
TESTONLY	tsrc/fts3Int.h	182;"	d
TESTONLY	tsrc/sqliteInt.h	388;"	d
TESTONLY	tsrc/sqliteInt.h	390;"	d
TESTOPTS	Makefile	/^TESTOPTS = --verbose=file --output=test-out.txt$/;"	m
TESTOPTS	main.mk	/^TESTOPTS = --verbose=file --output=test-out.txt$/;"	m
TESTPCACHE_CLEAR	src/test_pcache.c	95;"	d	file:
TESTPCACHE_NPAGE	src/test_pcache.c	85;"	d	file:
TESTPCACHE_NPAGE	src/test_pcache.c	87;"	d	file:
TESTPCACHE_RESERVE	src/test_pcache.c	89;"	d	file:
TESTPCACHE_VALID	src/test_pcache.c	94;"	d	file:
TESTPROGS	Makefile	/^TESTPROGS = \\$/;"	m
TESTPROGS	main.mk	/^TESTPROGS = \\$/;"	m
TESTSRC	Makefile	/^TESTSRC = \\$/;"	m
TESTSRC	main.mk	/^TESTSRC = \\$/;"	m
TESTSRC2	Makefile	/^TESTSRC2 = \\$/;"	m
TESTSRC2	main.mk	/^TESTSRC2 = \\$/;"	m
TESTVFS_ACCESS_MASK	src/test_vfs.c	130;"	d	file:
TESTVFS_ALL_MASK	src/test_vfs.c	137;"	d	file:
TESTVFS_CKLOCK_MASK	src/test_vfs.c	135;"	d	file:
TESTVFS_CLOSE_MASK	src/test_vfs.c	127;"	d	file:
TESTVFS_DELETE_MASK	src/test_vfs.c	126;"	d	file:
TESTVFS_FULLPATHNAME_MASK	src/test_vfs.c	131;"	d	file:
TESTVFS_LOCK_MASK	src/test_vfs.c	134;"	d	file:
TESTVFS_MAX_ARGS	src/test_vfs.c	158;"	d	file:
TESTVFS_MAX_PAGES	src/test_vfs.c	140;"	d	file:
TESTVFS_OPEN_MASK	src/test_vfs.c	124;"	d	file:
TESTVFS_READ_MASK	src/test_vfs.c	132;"	d	file:
TESTVFS_SHMBARRIER_MASK	src/test_vfs.c	121;"	d	file:
TESTVFS_SHMCLOSE_MASK	src/test_vfs.c	122;"	d	file:
TESTVFS_SHMLOCK_MASK	src/test_vfs.c	119;"	d	file:
TESTVFS_SHMMAP_MASK	src/test_vfs.c	120;"	d	file:
TESTVFS_SHMOPEN_MASK	src/test_vfs.c	118;"	d	file:
TESTVFS_SYNC_MASK	src/test_vfs.c	125;"	d	file:
TESTVFS_TRUNCATE_MASK	src/test_vfs.c	129;"	d	file:
TESTVFS_UNLOCK_MASK	src/test_vfs.c	133;"	d	file:
TESTVFS_WRITE_MASK	src/test_vfs.c	128;"	d	file:
TEST_EXTENSION	main.mk	/^TEST_EXTENSION = $(SHPREFIX)testloadext.$(SO)$/;"	m
TEXE	Makefile	/^TEXE = $/;"	m
TF_Autoincrement	sqlite3.c	14441;"	d	file:
TF_Autoincrement	src/sqliteInt.h	1842;"	d
TF_Autoincrement	tsrc/sqliteInt.h	1842;"	d
TF_Ephemeral	sqlite3.c	14439;"	d	file:
TF_Ephemeral	src/sqliteInt.h	1840;"	d
TF_Ephemeral	tsrc/sqliteInt.h	1840;"	d
TF_HasPrimaryKey	sqlite3.c	14440;"	d	file:
TF_HasPrimaryKey	src/sqliteInt.h	1841;"	d
TF_HasPrimaryKey	tsrc/sqliteInt.h	1841;"	d
TF_NoVisibleRowid	sqlite3.c	14444;"	d	file:
TF_NoVisibleRowid	src/sqliteInt.h	1845;"	d
TF_NoVisibleRowid	tsrc/sqliteInt.h	1845;"	d
TF_OOOHidden	sqlite3.c	14445;"	d	file:
TF_OOOHidden	src/sqliteInt.h	1846;"	d
TF_OOOHidden	tsrc/sqliteInt.h	1846;"	d
TF_Readonly	sqlite3.c	14438;"	d	file:
TF_Readonly	src/sqliteInt.h	1839;"	d
TF_Readonly	tsrc/sqliteInt.h	1839;"	d
TF_Virtual	sqlite3.c	14442;"	d	file:
TF_Virtual	src/sqliteInt.h	1843;"	d
TF_Virtual	tsrc/sqliteInt.h	1843;"	d
TF_WithoutRowid	sqlite3.c	14443;"	d	file:
TF_WithoutRowid	src/sqliteInt.h	1844;"	d
TF_WithoutRowid	tsrc/sqliteInt.h	1844;"	d
THREADTEST3_SRC	Makefile	/^THREADTEST3_SRC = $(TOP)\/test\/threadtest3.c    \\$/;"	m
THREADTEST3_SRC	main.mk	/^THREADTEST3_SRC = $(TOP)\/test\/threadtest3.c    \\$/;"	m
THREE_BYTE_INT	sqlite3.c	73669;"	d	file:
THREE_BYTE_INT	src/vdbeaux.c	3311;"	d	file:
THREE_BYTE_INT	tsrc/vdbeaux.c	3311;"	d	file:
TIMER_ELAPSED	sqlite3.c	23297;"	d	file:
TIMER_ELAPSED	sqlite3.c	23301;"	d	file:
TIMER_ELAPSED	sqlite3.c	29548;"	d	file:
TIMER_ELAPSED	sqlite3.c	29552;"	d	file:
TIMER_ELAPSED	sqlite3.c	37077;"	d	file:
TIMER_ELAPSED	sqlite3.c	37081;"	d	file:
TIMER_ELAPSED	src/os_common.h	48;"	d
TIMER_ELAPSED	src/os_common.h	52;"	d
TIMER_ELAPSED	tsrc/os_common.h	48;"	d
TIMER_ELAPSED	tsrc/os_common.h	52;"	d
TIMER_END	sqlite3.c	23296;"	d	file:
TIMER_END	sqlite3.c	23300;"	d	file:
TIMER_END	sqlite3.c	29547;"	d	file:
TIMER_END	sqlite3.c	29551;"	d	file:
TIMER_END	sqlite3.c	37076;"	d	file:
TIMER_END	sqlite3.c	37080;"	d	file:
TIMER_END	src/os_common.h	47;"	d
TIMER_END	src/os_common.h	51;"	d
TIMER_END	tsrc/os_common.h	47;"	d
TIMER_END	tsrc/os_common.h	51;"	d
TIMER_START	sqlite3.c	23295;"	d	file:
TIMER_START	sqlite3.c	23299;"	d	file:
TIMER_START	sqlite3.c	29546;"	d	file:
TIMER_START	sqlite3.c	29550;"	d	file:
TIMER_START	sqlite3.c	37075;"	d	file:
TIMER_START	sqlite3.c	37079;"	d	file:
TIMER_START	src/os_common.h	46;"	d
TIMER_START	src/os_common.h	50;"	d
TIMER_START	tsrc/os_common.h	46;"	d
TIMER_START	tsrc/os_common.h	50;"	d
TKFLG_DONTFOLD	parse.h	168;"	d
TKFLG_DONTFOLD	sqlite3.c	11430;"	d	file:
TKFLG_DONTFOLD	tsrc/parse.h	168;"	d
TKFLG_MASK	parse.h	164;"	d
TKFLG_MASK	sqlite3.c	11426;"	d	file:
TKFLG_MASK	tsrc/parse.h	164;"	d
TK_ABORT	parse.h	57;"	d
TK_ABORT	sqlite3.c	11319;"	d	file:
TK_ABORT	tsrc/parse.h	57;"	d
TK_ACTION	parse.h	58;"	d
TK_ACTION	sqlite3.c	11320;"	d	file:
TK_ACTION	tsrc/parse.h	58;"	d
TK_ADD	parse.h	142;"	d
TK_ADD	sqlite3.c	11404;"	d	file:
TK_ADD	tsrc/parse.h	142;"	d
TK_AFTER	parse.h	59;"	d
TK_AFTER	sqlite3.c	11321;"	d	file:
TK_AFTER	tsrc/parse.h	59;"	d
TK_AGG_COLUMN	parse.h	154;"	d
TK_AGG_COLUMN	sqlite3.c	11416;"	d	file:
TK_AGG_COLUMN	tsrc/parse.h	154;"	d
TK_AGG_FUNCTION	parse.h	153;"	d
TK_AGG_FUNCTION	sqlite3.c	11415;"	d	file:
TK_AGG_FUNCTION	tsrc/parse.h	153;"	d
TK_ALL	parse.h	116;"	d
TK_ALL	sqlite3.c	11378;"	d	file:
TK_ALL	tsrc/parse.h	116;"	d
TK_ALTER	parse.h	141;"	d
TK_ALTER	sqlite3.c	11403;"	d	file:
TK_ALTER	tsrc/parse.h	141;"	d
TK_ANALYZE	parse.h	60;"	d
TK_ANALYZE	sqlite3.c	11322;"	d	file:
TK_ANALYZE	tsrc/parse.h	60;"	d
TK_AND	parse.h	28;"	d
TK_AND	sqlite3.c	11290;"	d	file:
TK_AND	tsrc/parse.h	28;"	d
TK_ANY	parse.h	96;"	d
TK_ANY	sqlite3.c	11358;"	d	file:
TK_ANY	tsrc/parse.h	96;"	d
TK_AS	parse.h	24;"	d
TK_AS	sqlite3.c	11286;"	d	file:
TK_AS	tsrc/parse.h	24;"	d
TK_ASC	parse.h	61;"	d
TK_ASC	sqlite3.c	11323;"	d	file:
TK_ASC	tsrc/parse.h	61;"	d
TK_ASTERISK	parse.h	158;"	d
TK_ASTERISK	sqlite3.c	11420;"	d	file:
TK_ASTERISK	tsrc/parse.h	158;"	d
TK_ATTACH	parse.h	62;"	d
TK_ATTACH	sqlite3.c	11324;"	d	file:
TK_ATTACH	tsrc/parse.h	62;"	d
TK_AUTOINCR	parse.h	106;"	d
TK_AUTOINCR	sqlite3.c	11368;"	d	file:
TK_AUTOINCR	tsrc/parse.h	106;"	d
TK_BEFORE	parse.h	63;"	d
TK_BEFORE	sqlite3.c	11325;"	d	file:
TK_BEFORE	tsrc/parse.h	63;"	d
TK_BEGIN	parse.h	5;"	d
TK_BEGIN	sqlite3.c	11267;"	d	file:
TK_BEGIN	tsrc/parse.h	5;"	d
TK_BETWEEN	parse.h	32;"	d
TK_BETWEEN	sqlite3.c	11294;"	d	file:
TK_BETWEEN	tsrc/parse.h	32;"	d
TK_BITAND	parse.h	43;"	d
TK_BITAND	sqlite3.c	11305;"	d	file:
TK_BITAND	tsrc/parse.h	43;"	d
TK_BITNOT	parse.h	54;"	d
TK_BITNOT	sqlite3.c	11316;"	d	file:
TK_BITNOT	tsrc/parse.h	54;"	d
TK_BITOR	parse.h	44;"	d
TK_BITOR	sqlite3.c	11306;"	d	file:
TK_BITOR	tsrc/parse.h	44;"	d
TK_BLOB	parse.h	134;"	d
TK_BLOB	sqlite3.c	11396;"	d	file:
TK_BLOB	tsrc/parse.h	134;"	d
TK_BY	parse.h	64;"	d
TK_BY	sqlite3.c	11326;"	d	file:
TK_BY	tsrc/parse.h	64;"	d
TK_CASCADE	parse.h	65;"	d
TK_CASCADE	sqlite3.c	11327;"	d	file:
TK_CASCADE	tsrc/parse.h	65;"	d
TK_CASE	parse.h	136;"	d
TK_CASE	sqlite3.c	11398;"	d	file:
TK_CASE	tsrc/parse.h	136;"	d
TK_CAST	parse.h	66;"	d
TK_CAST	sqlite3.c	11328;"	d	file:
TK_CAST	tsrc/parse.h	66;"	d
TK_CHECK	parse.h	104;"	d
TK_CHECK	sqlite3.c	11366;"	d	file:
TK_CHECK	tsrc/parse.h	104;"	d
TK_COLLATE	parse.h	53;"	d
TK_COLLATE	sqlite3.c	11315;"	d	file:
TK_COLLATE	tsrc/parse.h	53;"	d
TK_COLUMN	parse.h	152;"	d
TK_COLUMN	sqlite3.c	11414;"	d	file:
TK_COLUMN	tsrc/parse.h	152;"	d
TK_COLUMNKW	parse.h	67;"	d
TK_COLUMNKW	sqlite3.c	11329;"	d	file:
TK_COLUMNKW	tsrc/parse.h	67;"	d
TK_COMMA	parse.h	26;"	d
TK_COMMA	sqlite3.c	11288;"	d	file:
TK_COMMA	tsrc/parse.h	26;"	d
TK_COMMIT	parse.h	10;"	d
TK_COMMIT	sqlite3.c	11272;"	d	file:
TK_COMMIT	tsrc/parse.h	10;"	d
TK_CONCAT	parse.h	52;"	d
TK_CONCAT	sqlite3.c	11314;"	d	file:
TK_CONCAT	tsrc/parse.h	52;"	d
TK_CONFLICT	parse.h	68;"	d
TK_CONFLICT	sqlite3.c	11330;"	d	file:
TK_CONFLICT	tsrc/parse.h	68;"	d
TK_CONSTRAINT	parse.h	99;"	d
TK_CONSTRAINT	sqlite3.c	11361;"	d	file:
TK_CONSTRAINT	tsrc/parse.h	99;"	d
TK_CREATE	parse.h	17;"	d
TK_CREATE	sqlite3.c	11279;"	d	file:
TK_CREATE	tsrc/parse.h	17;"	d
TK_CTIME_KW	parse.h	95;"	d
TK_CTIME_KW	sqlite3.c	11357;"	d	file:
TK_CTIME_KW	tsrc/parse.h	95;"	d
TK_DATABASE	parse.h	69;"	d
TK_DATABASE	sqlite3.c	11331;"	d	file:
TK_DATABASE	tsrc/parse.h	69;"	d
TK_DEFAULT	parse.h	100;"	d
TK_DEFAULT	sqlite3.c	11362;"	d	file:
TK_DEFAULT	tsrc/parse.h	100;"	d
TK_DEFERRABLE	parse.h	112;"	d
TK_DEFERRABLE	sqlite3.c	11374;"	d	file:
TK_DEFERRABLE	tsrc/parse.h	112;"	d
TK_DEFERRED	parse.h	7;"	d
TK_DEFERRED	sqlite3.c	11269;"	d	file:
TK_DEFERRED	tsrc/parse.h	7;"	d
TK_DELETE	parse.h	109;"	d
TK_DELETE	sqlite3.c	11371;"	d	file:
TK_DELETE	tsrc/parse.h	109;"	d
TK_DESC	parse.h	70;"	d
TK_DESC	sqlite3.c	11332;"	d	file:
TK_DESC	tsrc/parse.h	70;"	d
TK_DETACH	parse.h	71;"	d
TK_DETACH	sqlite3.c	11333;"	d	file:
TK_DETACH	tsrc/parse.h	71;"	d
TK_DISTINCT	parse.h	121;"	d
TK_DISTINCT	sqlite3.c	11383;"	d	file:
TK_DISTINCT	tsrc/parse.h	121;"	d
TK_DOT	parse.h	122;"	d
TK_DOT	sqlite3.c	11384;"	d	file:
TK_DOT	tsrc/parse.h	122;"	d
TK_DROP	parse.h	114;"	d
TK_DROP	sqlite3.c	11376;"	d	file:
TK_DROP	tsrc/parse.h	114;"	d
TK_EACH	parse.h	72;"	d
TK_EACH	sqlite3.c	11334;"	d	file:
TK_EACH	tsrc/parse.h	72;"	d
TK_ELSE	parse.h	139;"	d
TK_ELSE	sqlite3.c	11401;"	d	file:
TK_ELSE	tsrc/parse.h	139;"	d
TK_END	parse.h	11;"	d
TK_END	sqlite3.c	11273;"	d	file:
TK_END	tsrc/parse.h	11;"	d
TK_END_OF_FILE	parse.h	149;"	d
TK_END_OF_FILE	sqlite3.c	11411;"	d	file:
TK_END_OF_FILE	tsrc/parse.h	149;"	d
TK_EQ	parse.h	37;"	d
TK_EQ	sqlite3.c	11299;"	d	file:
TK_EQ	tsrc/parse.h	37;"	d
TK_ESCAPE	parse.h	42;"	d
TK_ESCAPE	sqlite3.c	11304;"	d	file:
TK_ESCAPE	tsrc/parse.h	42;"	d
TK_EXCEPT	parse.h	117;"	d
TK_EXCEPT	sqlite3.c	11379;"	d	file:
TK_EXCEPT	tsrc/parse.h	117;"	d
TK_EXCLUSIVE	parse.h	9;"	d
TK_EXCLUSIVE	sqlite3.c	11271;"	d	file:
TK_EXCLUSIVE	tsrc/parse.h	9;"	d
TK_EXISTS	parse.h	20;"	d
TK_EXISTS	sqlite3.c	11282;"	d	file:
TK_EXISTS	tsrc/parse.h	20;"	d
TK_EXPLAIN	parse.h	2;"	d
TK_EXPLAIN	sqlite3.c	11264;"	d	file:
TK_EXPLAIN	tsrc/parse.h	2;"	d
TK_FAIL	parse.h	73;"	d
TK_FAIL	sqlite3.c	11335;"	d	file:
TK_FAIL	tsrc/parse.h	73;"	d
TK_FLOAT	parse.h	133;"	d
TK_FLOAT	sqlite3.c	11395;"	d	file:
TK_FLOAT	tsrc/parse.h	133;"	d
TK_FOR	parse.h	74;"	d
TK_FOR	sqlite3.c	11336;"	d	file:
TK_FOR	tsrc/parse.h	74;"	d
TK_FOREIGN	parse.h	113;"	d
TK_FOREIGN	sqlite3.c	11375;"	d	file:
TK_FOREIGN	tsrc/parse.h	113;"	d
TK_FROM	parse.h	123;"	d
TK_FROM	sqlite3.c	11385;"	d	file:
TK_FROM	tsrc/parse.h	123;"	d
TK_FUNCTION	parse.h	151;"	d
TK_FUNCTION	sqlite3.c	11413;"	d	file:
TK_FUNCTION	tsrc/parse.h	151;"	d
TK_GE	parse.h	41;"	d
TK_GE	sqlite3.c	11303;"	d	file:
TK_GE	tsrc/parse.h	41;"	d
TK_GROUP	parse.h	127;"	d
TK_GROUP	sqlite3.c	11389;"	d	file:
TK_GROUP	tsrc/parse.h	127;"	d
TK_GT	parse.h	38;"	d
TK_GT	sqlite3.c	11300;"	d	file:
TK_GT	tsrc/parse.h	38;"	d
TK_HAVING	parse.h	128;"	d
TK_HAVING	sqlite3.c	11390;"	d	file:
TK_HAVING	tsrc/parse.h	128;"	d
TK_ID	parse.h	55;"	d
TK_ID	sqlite3.c	11317;"	d	file:
TK_ID	tsrc/parse.h	55;"	d
TK_IF	parse.h	18;"	d
TK_IF	sqlite3.c	11280;"	d	file:
TK_IF	tsrc/parse.h	18;"	d
TK_IGNORE	parse.h	75;"	d
TK_IGNORE	sqlite3.c	11337;"	d	file:
TK_IGNORE	tsrc/parse.h	75;"	d
TK_ILLEGAL	parse.h	161;"	d
TK_ILLEGAL	sqlite3.c	11423;"	d	file:
TK_ILLEGAL	tsrc/parse.h	161;"	d
TK_IMMEDIATE	parse.h	8;"	d
TK_IMMEDIATE	sqlite3.c	11270;"	d	file:
TK_IMMEDIATE	tsrc/parse.h	8;"	d
TK_IN	parse.h	33;"	d
TK_IN	sqlite3.c	11295;"	d	file:
TK_IN	tsrc/parse.h	33;"	d
TK_INDEX	parse.h	140;"	d
TK_INDEX	sqlite3.c	11402;"	d	file:
TK_INDEX	tsrc/parse.h	140;"	d
TK_INDEXED	parse.h	56;"	d
TK_INDEXED	sqlite3.c	11318;"	d	file:
TK_INDEXED	tsrc/parse.h	56;"	d
TK_INITIALLY	parse.h	76;"	d
TK_INITIALLY	sqlite3.c	11338;"	d	file:
TK_INITIALLY	tsrc/parse.h	76;"	d
TK_INSERT	parse.h	108;"	d
TK_INSERT	sqlite3.c	11370;"	d	file:
TK_INSERT	tsrc/parse.h	108;"	d
TK_INSTEAD	parse.h	77;"	d
TK_INSTEAD	sqlite3.c	11339;"	d	file:
TK_INSTEAD	tsrc/parse.h	77;"	d
TK_INTEGER	parse.h	132;"	d
TK_INTEGER	sqlite3.c	11394;"	d	file:
TK_INTEGER	tsrc/parse.h	132;"	d
TK_INTERSECT	parse.h	118;"	d
TK_INTERSECT	sqlite3.c	11380;"	d	file:
TK_INTERSECT	tsrc/parse.h	118;"	d
TK_INTO	parse.h	131;"	d
TK_INTO	sqlite3.c	11393;"	d	file:
TK_INTO	tsrc/parse.h	131;"	d
TK_IS	parse.h	29;"	d
TK_IS	sqlite3.c	11291;"	d	file:
TK_IS	tsrc/parse.h	29;"	d
TK_ISNOT	parse.h	148;"	d
TK_ISNOT	sqlite3.c	11410;"	d	file:
TK_ISNOT	tsrc/parse.h	148;"	d
TK_ISNULL	parse.h	34;"	d
TK_ISNULL	sqlite3.c	11296;"	d	file:
TK_ISNULL	tsrc/parse.h	34;"	d
TK_JOIN	parse.h	124;"	d
TK_JOIN	sqlite3.c	11386;"	d	file:
TK_JOIN	tsrc/parse.h	124;"	d
TK_JOIN_KW	parse.h	98;"	d
TK_JOIN_KW	sqlite3.c	11360;"	d	file:
TK_JOIN_KW	tsrc/parse.h	98;"	d
TK_KEY	parse.h	79;"	d
TK_KEY	sqlite3.c	11341;"	d	file:
TK_KEY	tsrc/parse.h	79;"	d
TK_LE	parse.h	39;"	d
TK_LE	sqlite3.c	11301;"	d	file:
TK_LE	tsrc/parse.h	39;"	d
TK_LIKE_KW	parse.h	31;"	d
TK_LIKE_KW	sqlite3.c	11293;"	d	file:
TK_LIKE_KW	tsrc/parse.h	31;"	d
TK_LIMIT	parse.h	129;"	d
TK_LIMIT	sqlite3.c	11391;"	d	file:
TK_LIMIT	tsrc/parse.h	129;"	d
TK_LP	parse.h	22;"	d
TK_LP	sqlite3.c	11284;"	d	file:
TK_LP	tsrc/parse.h	22;"	d
TK_LSHIFT	parse.h	45;"	d
TK_LSHIFT	sqlite3.c	11307;"	d	file:
TK_LSHIFT	tsrc/parse.h	45;"	d
TK_LT	parse.h	40;"	d
TK_LT	sqlite3.c	11302;"	d	file:
TK_LT	tsrc/parse.h	40;"	d
TK_MATCH	parse.h	30;"	d
TK_MATCH	sqlite3.c	11292;"	d	file:
TK_MATCH	tsrc/parse.h	30;"	d
TK_MINUS	parse.h	48;"	d
TK_MINUS	sqlite3.c	11310;"	d	file:
TK_MINUS	tsrc/parse.h	48;"	d
TK_NE	parse.h	36;"	d
TK_NE	sqlite3.c	11298;"	d	file:
TK_NE	tsrc/parse.h	36;"	d
TK_NO	parse.h	78;"	d
TK_NO	sqlite3.c	11340;"	d	file:
TK_NO	tsrc/parse.h	78;"	d
TK_NOT	parse.h	19;"	d
TK_NOT	sqlite3.c	11281;"	d	file:
TK_NOT	tsrc/parse.h	19;"	d
TK_NOTNULL	parse.h	35;"	d
TK_NOTNULL	sqlite3.c	11297;"	d	file:
TK_NOTNULL	tsrc/parse.h	35;"	d
TK_NULL	parse.h	101;"	d
TK_NULL	sqlite3.c	11363;"	d	file:
TK_NULL	tsrc/parse.h	101;"	d
TK_OF	parse.h	80;"	d
TK_OF	sqlite3.c	11342;"	d	file:
TK_OF	tsrc/parse.h	80;"	d
TK_OFFSET	parse.h	81;"	d
TK_OFFSET	sqlite3.c	11343;"	d	file:
TK_OFFSET	tsrc/parse.h	81;"	d
TK_ON	parse.h	107;"	d
TK_ON	sqlite3.c	11369;"	d	file:
TK_ON	tsrc/parse.h	107;"	d
TK_OR	parse.h	27;"	d
TK_OR	sqlite3.c	11289;"	d	file:
TK_OR	tsrc/parse.h	27;"	d
TK_ORDER	parse.h	126;"	d
TK_ORDER	sqlite3.c	11388;"	d	file:
TK_ORDER	tsrc/parse.h	126;"	d
TK_PLAN	parse.h	4;"	d
TK_PLAN	sqlite3.c	11266;"	d	file:
TK_PLAN	tsrc/parse.h	4;"	d
TK_PLUS	parse.h	47;"	d
TK_PLUS	sqlite3.c	11309;"	d	file:
TK_PLUS	tsrc/parse.h	47;"	d
TK_PRAGMA	parse.h	82;"	d
TK_PRAGMA	sqlite3.c	11344;"	d	file:
TK_PRAGMA	tsrc/parse.h	82;"	d
TK_PRIMARY	parse.h	102;"	d
TK_PRIMARY	sqlite3.c	11364;"	d	file:
TK_PRIMARY	tsrc/parse.h	102;"	d
TK_QUERY	parse.h	3;"	d
TK_QUERY	sqlite3.c	11265;"	d	file:
TK_QUERY	tsrc/parse.h	3;"	d
TK_RAISE	parse.h	83;"	d
TK_RAISE	sqlite3.c	11345;"	d	file:
TK_RAISE	tsrc/parse.h	83;"	d
TK_RECURSIVE	parse.h	84;"	d
TK_RECURSIVE	sqlite3.c	11346;"	d	file:
TK_RECURSIVE	tsrc/parse.h	84;"	d
TK_REFERENCES	parse.h	105;"	d
TK_REFERENCES	sqlite3.c	11367;"	d	file:
TK_REFERENCES	tsrc/parse.h	105;"	d
TK_REGISTER	parse.h	157;"	d
TK_REGISTER	sqlite3.c	11419;"	d	file:
TK_REGISTER	tsrc/parse.h	157;"	d
TK_REINDEX	parse.h	93;"	d
TK_REINDEX	sqlite3.c	11355;"	d	file:
TK_REINDEX	tsrc/parse.h	93;"	d
TK_RELEASE	parse.h	14;"	d
TK_RELEASE	sqlite3.c	11276;"	d	file:
TK_RELEASE	tsrc/parse.h	14;"	d
TK_REM	parse.h	51;"	d
TK_REM	sqlite3.c	11313;"	d	file:
TK_REM	tsrc/parse.h	51;"	d
TK_RENAME	parse.h	94;"	d
TK_RENAME	sqlite3.c	11356;"	d	file:
TK_RENAME	tsrc/parse.h	94;"	d
TK_REPLACE	parse.h	85;"	d
TK_REPLACE	sqlite3.c	11347;"	d	file:
TK_REPLACE	tsrc/parse.h	85;"	d
TK_RESTRICT	parse.h	86;"	d
TK_RESTRICT	sqlite3.c	11348;"	d	file:
TK_RESTRICT	tsrc/parse.h	86;"	d
TK_ROLLBACK	parse.h	12;"	d
TK_ROLLBACK	sqlite3.c	11274;"	d	file:
TK_ROLLBACK	tsrc/parse.h	12;"	d
TK_ROW	parse.h	87;"	d
TK_ROW	sqlite3.c	11349;"	d	file:
TK_ROW	tsrc/parse.h	87;"	d
TK_RP	parse.h	23;"	d
TK_RP	sqlite3.c	11285;"	d	file:
TK_RP	tsrc/parse.h	23;"	d
TK_RSHIFT	parse.h	46;"	d
TK_RSHIFT	sqlite3.c	11308;"	d	file:
TK_RSHIFT	tsrc/parse.h	46;"	d
TK_SAVEPOINT	parse.h	13;"	d
TK_SAVEPOINT	sqlite3.c	11275;"	d	file:
TK_SAVEPOINT	tsrc/parse.h	13;"	d
TK_SELECT	parse.h	119;"	d
TK_SELECT	sqlite3.c	11381;"	d	file:
TK_SELECT	tsrc/parse.h	119;"	d
TK_SEMI	parse.h	1;"	d
TK_SEMI	sqlite3.c	11263;"	d	file:
TK_SEMI	tsrc/parse.h	1;"	d
TK_SET	parse.h	111;"	d
TK_SET	sqlite3.c	11373;"	d	file:
TK_SET	tsrc/parse.h	111;"	d
TK_SLASH	parse.h	50;"	d
TK_SLASH	sqlite3.c	11312;"	d	file:
TK_SLASH	tsrc/parse.h	50;"	d
TK_SPACE	parse.h	160;"	d
TK_SPACE	sqlite3.c	11422;"	d	file:
TK_SPACE	tsrc/parse.h	160;"	d
TK_SPAN	parse.h	159;"	d
TK_SPAN	sqlite3.c	11421;"	d	file:
TK_SPAN	tsrc/parse.h	159;"	d
TK_STAR	parse.h	49;"	d
TK_STAR	sqlite3.c	11311;"	d	file:
TK_STAR	tsrc/parse.h	49;"	d
TK_STRING	parse.h	97;"	d
TK_STRING	sqlite3.c	11359;"	d	file:
TK_STRING	tsrc/parse.h	97;"	d
TK_TABLE	parse.h	16;"	d
TK_TABLE	sqlite3.c	11278;"	d	file:
TK_TABLE	tsrc/parse.h	16;"	d
TK_TEMP	parse.h	21;"	d
TK_TEMP	sqlite3.c	11283;"	d	file:
TK_TEMP	tsrc/parse.h	21;"	d
TK_THEN	parse.h	138;"	d
TK_THEN	sqlite3.c	11400;"	d	file:
TK_THEN	tsrc/parse.h	138;"	d
TK_TO	parse.h	15;"	d
TK_TO	sqlite3.c	11277;"	d	file:
TK_TO	tsrc/parse.h	15;"	d
TK_TO_BLOB	parse.h	144;"	d
TK_TO_BLOB	sqlite3.c	11406;"	d	file:
TK_TO_BLOB	tsrc/parse.h	144;"	d
TK_TO_INT	parse.h	146;"	d
TK_TO_INT	sqlite3.c	11408;"	d	file:
TK_TO_INT	tsrc/parse.h	146;"	d
TK_TO_NUMERIC	parse.h	145;"	d
TK_TO_NUMERIC	sqlite3.c	11407;"	d	file:
TK_TO_NUMERIC	tsrc/parse.h	145;"	d
TK_TO_REAL	parse.h	147;"	d
TK_TO_REAL	sqlite3.c	11409;"	d	file:
TK_TO_REAL	tsrc/parse.h	147;"	d
TK_TO_TEXT	parse.h	143;"	d
TK_TO_TEXT	sqlite3.c	11405;"	d	file:
TK_TO_TEXT	tsrc/parse.h	143;"	d
TK_TRANSACTION	parse.h	6;"	d
TK_TRANSACTION	sqlite3.c	11268;"	d	file:
TK_TRANSACTION	tsrc/parse.h	6;"	d
TK_TRIGGER	parse.h	88;"	d
TK_TRIGGER	sqlite3.c	11350;"	d	file:
TK_TRIGGER	tsrc/parse.h	88;"	d
TK_UMINUS	parse.h	155;"	d
TK_UMINUS	sqlite3.c	11417;"	d	file:
TK_UMINUS	tsrc/parse.h	155;"	d
TK_UNCLOSED_STRING	parse.h	150;"	d
TK_UNCLOSED_STRING	sqlite3.c	11412;"	d	file:
TK_UNCLOSED_STRING	tsrc/parse.h	150;"	d
TK_UNION	parse.h	115;"	d
TK_UNION	sqlite3.c	11377;"	d	file:
TK_UNION	tsrc/parse.h	115;"	d
TK_UNIQUE	parse.h	103;"	d
TK_UNIQUE	sqlite3.c	11365;"	d	file:
TK_UNIQUE	tsrc/parse.h	103;"	d
TK_UPDATE	parse.h	110;"	d
TK_UPDATE	sqlite3.c	11372;"	d	file:
TK_UPDATE	tsrc/parse.h	110;"	d
TK_UPLUS	parse.h	156;"	d
TK_UPLUS	sqlite3.c	11418;"	d	file:
TK_UPLUS	tsrc/parse.h	156;"	d
TK_USING	parse.h	125;"	d
TK_USING	sqlite3.c	11387;"	d	file:
TK_USING	tsrc/parse.h	125;"	d
TK_VACUUM	parse.h	89;"	d
TK_VACUUM	sqlite3.c	11351;"	d	file:
TK_VACUUM	tsrc/parse.h	89;"	d
TK_VALUES	parse.h	120;"	d
TK_VALUES	sqlite3.c	11382;"	d	file:
TK_VALUES	tsrc/parse.h	120;"	d
TK_VARIABLE	parse.h	135;"	d
TK_VARIABLE	sqlite3.c	11397;"	d	file:
TK_VARIABLE	tsrc/parse.h	135;"	d
TK_VIEW	parse.h	90;"	d
TK_VIEW	sqlite3.c	11352;"	d	file:
TK_VIEW	tsrc/parse.h	90;"	d
TK_VIRTUAL	parse.h	91;"	d
TK_VIRTUAL	sqlite3.c	11353;"	d	file:
TK_VIRTUAL	tsrc/parse.h	91;"	d
TK_WHEN	parse.h	137;"	d
TK_WHEN	sqlite3.c	11399;"	d	file:
TK_WHEN	tsrc/parse.h	137;"	d
TK_WHERE	parse.h	130;"	d
TK_WHERE	sqlite3.c	11392;"	d	file:
TK_WHERE	tsrc/parse.h	130;"	d
TK_WITH	parse.h	92;"	d
TK_WITH	sqlite3.c	11354;"	d	file:
TK_WITH	tsrc/parse.h	92;"	d
TK_WITHOUT	parse.h	25;"	d
TK_WITHOUT	sqlite3.c	11287;"	d	file:
TK_WITHOUT	tsrc/parse.h	25;"	d
TLIBS	Makefile	/^TLIBS = -ldl -lpthread  $(LIBS)$/;"	m
TOKEN	fts5parse.c	1093;"	d	file:
TOKEN	lempar.c	740;"	d	file:
TOKEN	parse.c	3929;"	d	file:
TOKEN	sqlite3.c	135007;"	d	file:
TOKEN	tool/lempar.c	740;"	d	file:
TOKEN	tsrc/parse.c	3929;"	d	file:
TOKEN_EOF	ext/fts1/fts1.c	1531;"	d	file:
TOKEN_EOF	ext/fts2/fts2.c	2399;"	d	file:
TOKEN_EOF	tsrc/fts1.c	1531;"	d	file:
TOKEN_EOF	tsrc/fts2.c	2399;"	d	file:
TOKEN_ID	ext/fts1/fts1.c	1533;"	d	file:
TOKEN_ID	ext/fts2/fts2.c	2401;"	d	file:
TOKEN_ID	tsrc/fts1.c	1533;"	d	file:
TOKEN_ID	tsrc/fts2.c	2401;"	d	file:
TOKEN_PUNCT	ext/fts1/fts1.c	1535;"	d	file:
TOKEN_PUNCT	ext/fts2/fts2.c	2403;"	d	file:
TOKEN_PUNCT	tsrc/fts1.c	1535;"	d	file:
TOKEN_PUNCT	tsrc/fts2.c	2403;"	d	file:
TOKEN_SPACE	ext/fts1/fts1.c	1532;"	d	file:
TOKEN_SPACE	ext/fts2/fts2.c	2400;"	d	file:
TOKEN_SPACE	tsrc/fts1.c	1532;"	d	file:
TOKEN_SPACE	tsrc/fts2.c	2400;"	d	file:
TOKEN_STRING	ext/fts1/fts1.c	1534;"	d	file:
TOKEN_STRING	ext/fts2/fts2.c	2402;"	d	file:
TOKEN_STRING	tsrc/fts1.c	1534;"	d	file:
TOKEN_STRING	tsrc/fts2.c	2402;"	d	file:
TOP	Makefile	/^	TOP=$(TOP) sh $(TOP)\/tool\/mkautoconfamal.sh --normal$/;"	m
TOP	Makefile	/^	TOP=$(TOP) sh $(TOP)\/tool\/mkautoconfamal.sh --snapshot$/;"	m
TOP	Makefile	/^TOP = \/home\/jeff\/others\/pure_sqlite$/;"	m
TOP	main.mk	/^	TOP=$(TOP) sh $(TOP)\/tool\/mkautoconfamal.sh --normal$/;"	m
TOP	main.mk	/^	TOP=$(TOP) sh $(TOP)\/tool\/mkautoconfamal.sh --snapshot$/;"	m
TOTYPE_BIGENDIAN	ext/misc/totype.c	46;"	d	file:
TOTYPE_LITTLEENDIAN	ext/misc/totype.c	47;"	d	file:
TRACE	ext/fts1/fts1.c	60;"	d	file:
TRACE	ext/fts2/fts2.c	333;"	d	file:
TRACE	sqlite3.c	58168;"	d	file:
TRACE	src/btree.c	32;"	d	file:
TRACE	tsrc/btree.c	32;"	d	file:
TRACE	tsrc/fts1.c	60;"	d	file:
TRACE	tsrc/fts2.c	333;"	d	file:
TRACE_IDX_INPUTS	sqlite3.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	sqlite3.c	127291;"	d	file:
TRACE_IDX_INPUTS	src/where.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	src/where.c	585;"	d	file:
TRACE_IDX_INPUTS	tsrc/where.c	/^static void TRACE_IDX_INPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_INPUTS	tsrc/where.c	585;"	d	file:
TRACE_IDX_OUTPUTS	sqlite3.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	sqlite3.c	127292;"	d	file:
TRACE_IDX_OUTPUTS	src/where.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	src/where.c	586;"	d	file:
TRACE_IDX_OUTPUTS	tsrc/where.c	/^static void TRACE_IDX_OUTPUTS(sqlite3_index_info *p){$/;"	f	file:
TRACE_IDX_OUTPUTS	tsrc/where.c	586;"	d	file:
TRANS_NONE	sqlite3.c	57516;"	d	file:
TRANS_NONE	src/btreeInt.h	374;"	d
TRANS_NONE	tsrc/btreeInt.h	374;"	d
TRANS_READ	sqlite3.c	57517;"	d	file:
TRANS_READ	src/btreeInt.h	375;"	d
TRANS_READ	tsrc/btreeInt.h	375;"	d
TRANS_WRITE	sqlite3.c	57518;"	d	file:
TRANS_WRITE	src/btreeInt.h	376;"	d
TRANS_WRITE	tsrc/btreeInt.h	376;"	d
TRIGGER	tool/mkkeywordhash.c	116;"	d	file:
TRIGGER	tool/mkkeywordhash.c	118;"	d	file:
TRIGGER_AFTER	sqlite3.c	15668;"	d	file:
TRIGGER_AFTER	src/sqliteInt.h	3069;"	d
TRIGGER_AFTER	tsrc/sqliteInt.h	3069;"	d
TRIGGER_BEFORE	sqlite3.c	15667;"	d	file:
TRIGGER_BEFORE	src/sqliteInt.h	3068;"	d
TRIGGER_BEFORE	tsrc/sqliteInt.h	3068;"	d
TT4_SERIALIZED	test/threadtest4.c	61;"	d	file:
TT4_TRACE	test/threadtest4.c	63;"	d	file:
TT4_WAL	test/threadtest4.c	62;"	d	file:
TWOPOWER31	sqlite3.c	28512;"	d	file:
TWOPOWER31	src/util.c	1309;"	d	file:
TWOPOWER31	tsrc/util.c	1309;"	d	file:
TWOPOWER32	sqlite3.c	28511;"	d	file:
TWOPOWER32	src/util.c	1308;"	d	file:
TWOPOWER32	tsrc/util.c	1308;"	d	file:
TWO_BYTE_INT	sqlite3.c	73668;"	d	file:
TWO_BYTE_INT	src/vdbeaux.c	3310;"	d	file:
TWO_BYTE_INT	tsrc/vdbeaux.c	3310;"	d	file:
TabResult	sqlite3.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	sqlite3.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
TabResult	src/table.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	src/table.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
TabResult	tsrc/table.c	/^typedef struct TabResult {$/;"	s	file:
TabResult	tsrc/table.c	/^} TabResult;$/;"	t	typeref:struct:TabResult	file:
Table	sqlite3.c	/^struct Table {$/;"	s	file:
Table	sqlite3.c	/^typedef struct Table Table;$/;"	t	typeref:struct:Table	file:
Table	src/sqliteInt.h	/^struct Table {$/;"	s
Table	src/sqliteInt.h	/^typedef struct Table Table;$/;"	t	typeref:struct:Table
Table	test/fuzz_common.tcl	/^proc Table {} {$/;"	p
Table	tsrc/sqliteInt.h	/^struct Table {$/;"	s
Table	tsrc/sqliteInt.h	/^typedef struct Table Table;$/;"	t	typeref:struct:Table
TableLock	sqlite3.c	/^struct TableLock {$/;"	s	file:
TableLock	sqlite3.c	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock	file:
TableLock	src/build.c	/^struct TableLock {$/;"	s	file:
TableLock	src/sqliteInt.h	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock
TableLock	tsrc/build.c	/^struct TableLock {$/;"	s	file:
TableLock	tsrc/sqliteInt.h	/^typedef struct TableLock TableLock;$/;"	t	typeref:struct:TableLock
TableSpec	ext/fts1/fts1.c	/^typedef struct TableSpec {$/;"	s	file:
TableSpec	ext/fts1/fts1.c	/^} TableSpec;$/;"	t	typeref:struct:TableSpec	file:
TableSpec	ext/fts2/fts2.c	/^typedef struct TableSpec {$/;"	s	file:
TableSpec	ext/fts2/fts2.c	/^} TableSpec;$/;"	t	typeref:struct:TableSpec	file:
TableSpec	tsrc/fts1.c	/^typedef struct TableSpec {$/;"	s	file:
TableSpec	tsrc/fts1.c	/^} TableSpec;$/;"	t	typeref:struct:TableSpec	file:
TableSpec	tsrc/fts2.c	/^typedef struct TableSpec {$/;"	s	file:
TableSpec	tsrc/fts2.c	/^} TableSpec;$/;"	t	typeref:struct:TableSpec	file:
TclQuotaCallback	src/test_quota.c	/^struct TclQuotaCallback {$/;"	s	file:
TclQuotaCallback	src/test_quota.c	/^typedef struct TclQuotaCallback TclQuotaCallback;$/;"	t	typeref:struct:TclQuotaCallback	file:
Tcl_InitStubs	src/tclsqlite.c	3451;"	d	file:
Tcl_InitStubs	src/tclsqlite.c	3452;"	d	file:
Tcl_InitStubs	tsrc/tclsqlite.c	3451;"	d	file:
Tcl_InitStubs	tsrc/tclsqlite.c	3452;"	d	file:
Tcl_NRAddCallback	src/tclsqlite.c	1691;"	d	file:
Tcl_NRAddCallback	tsrc/tclsqlite.c	1691;"	d	file:
Tcl_NRCreateCommand	src/tclsqlite.c	1693;"	d	file:
Tcl_NRCreateCommand	tsrc/tclsqlite.c	1693;"	d	file:
Tcl_NREvalObj	src/tclsqlite.c	1692;"	d	file:
Tcl_NREvalObj	tsrc/tclsqlite.c	1692;"	d	file:
Tclsqlite3_Init	src/tclsqlite.c	/^EXTERN int Tclsqlite3_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Tclsqlite3_Init	tsrc/tclsqlite.c	/^EXTERN int Tclsqlite3_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Tclsqlite3_Unload	src/tclsqlite.c	/^EXTERN int Tclsqlite3_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Tclsqlite3_Unload	tsrc/tclsqlite.c	/^EXTERN int Tclsqlite3_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Tclsqlite_Init	src/tclsqlite.c	/^int Tclsqlite_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Tclsqlite_Init	tsrc/tclsqlite.c	/^int Tclsqlite_Init(Tcl_Interp *interp){ return Sqlite3_Init(interp); }$/;"	f
Tclsqlite_Unload	src/tclsqlite.c	/^int Tclsqlite_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
Tclsqlite_Unload	tsrc/tclsqlite.c	/^int Tclsqlite_Unload(Tcl_Interp *interp, int flags){ return TCL_OK; }$/;"	f
TermData	ext/fts2/fts2.c	/^typedef struct TermData {$/;"	s	file:
TermData	ext/fts2/fts2.c	/^} TermData;$/;"	t	typeref:struct:TermData	file:
TermData	tsrc/fts2.c	/^typedef struct TermData {$/;"	s	file:
TermData	tsrc/fts2.c	/^} TermData;$/;"	t	typeref:struct:TermData	file:
TermOffset	ext/fts3/fts3_snippet.c	/^struct TermOffset {$/;"	s	file:
TermOffset	ext/fts3/fts3_snippet.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffset	sqlite3.c	/^struct TermOffset {$/;"	s	file:
TermOffset	sqlite3.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffset	tsrc/fts3_snippet.c	/^struct TermOffset {$/;"	s	file:
TermOffset	tsrc/fts3_snippet.c	/^typedef struct TermOffset TermOffset;$/;"	t	typeref:struct:TermOffset	file:
TermOffsetCtx	ext/fts3/fts3_snippet.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	ext/fts3/fts3_snippet.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermOffsetCtx	sqlite3.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	sqlite3.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermOffsetCtx	tsrc/fts3_snippet.c	/^struct TermOffsetCtx {$/;"	s	file:
TermOffsetCtx	tsrc/fts3_snippet.c	/^typedef struct TermOffsetCtx TermOffsetCtx;$/;"	t	typeref:struct:TermOffsetCtx	file:
TermSelect	ext/fts3/fts3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	ext/fts3/fts3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
TermSelect	sqlite3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	sqlite3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
TermSelect	tsrc/fts3.c	/^struct TermSelect {$/;"	s	file:
TermSelect	tsrc/fts3.c	/^typedef struct TermSelect TermSelect;$/;"	t	typeref:struct:TermSelect	file:
TestAsyncGlobal	src/test_async.c	/^struct TestAsyncGlobal {$/;"	s	file:
TestAsyncStaticData	ext/async/sqlite3async.c	/^static struct TestAsyncStaticData {$/;"	s	file:
TestCollationX	src/test1.c	/^struct TestCollationX {$/;"	s	file:
TestCollationX	src/test1.c	/^typedef struct TestCollationX TestCollationX;$/;"	t	typeref:struct:TestCollationX	file:
TestConflictHandler	ext/session/test_session.c	/^struct TestConflictHandler {$/;"	s	file:
TestConflictHandler	ext/session/test_session.c	/^typedef struct TestConflictHandler TestConflictHandler;$/;"	t	typeref:struct:TestConflictHandler	file:
TestFaultInject	src/test_vfs.c	/^struct TestFaultInject {$/;"	s	file:
TestFaultInject	src/test_vfs.c	/^typedef struct TestFaultInject TestFaultInject;$/;"	t	typeref:struct:TestFaultInject	file:
TestSession	ext/session/test_session.c	/^struct TestSession {$/;"	s	file:
TestSession	ext/session/test_session.c	/^typedef struct TestSession TestSession;$/;"	t	typeref:struct:TestSession	file:
TestSession_Init	ext/session/test_session.c	/^int TestSession_Init(Tcl_Interp *interp){$/;"	f
TestSessionsBlob	ext/session/test_session.c	/^struct TestSessionsBlob {$/;"	s	file:
TestSessionsBlob	ext/session/test_session.c	/^typedef struct TestSessionsBlob TestSessionsBlob;$/;"	t	typeref:struct:TestSessionsBlob	file:
TestStreamInput	ext/session/test_session.c	/^struct TestStreamInput {$/;"	s	file:
TestStreamInput	ext/session/test_session.c	/^typedef struct TestStreamInput TestStreamInput;$/;"	t	typeref:struct:TestStreamInput	file:
TestSyscallArray	src/test_syscall.c	/^struct TestSyscallArray {$/;"	s	file:
TestSyscallGlobal	src/test_syscall.c	/^static struct TestSyscallGlobal {$/;"	s	file:
Testvfs	src/test_vfs.c	/^struct Testvfs {$/;"	s	file:
Testvfs	src/test_vfs.c	/^typedef struct Testvfs Testvfs;$/;"	t	typeref:struct:Testvfs	file:
TestvfsBuffer	src/test_vfs.c	/^struct TestvfsBuffer {$/;"	s	file:
TestvfsBuffer	src/test_vfs.c	/^typedef struct TestvfsBuffer TestvfsBuffer;$/;"	t	typeref:struct:TestvfsBuffer	file:
TestvfsFd	src/test_vfs.c	/^struct TestvfsFd {$/;"	s	file:
TestvfsFd	src/test_vfs.c	/^typedef struct TestvfsFd TestvfsFd;$/;"	t	typeref:struct:TestvfsFd	file:
TestvfsFile	src/test_vfs.c	/^struct TestvfsFile {$/;"	s	file:
TestvfsFile	src/test_vfs.c	/^typedef struct TestvfsFile TestvfsFile;$/;"	t	typeref:struct:TestvfsFile	file:
TestvfsShm	src/test_vfs.c	/^typedef struct TestvfsShm TestvfsShm;$/;"	t	typeref:struct:TestvfsShm	file:
Thread	src/test4.c	/^struct Thread {$/;"	s	file:
Thread	src/test4.c	/^typedef struct Thread Thread;$/;"	t	typeref:struct:Thread	file:
Thread	src/test7.c	/^struct Thread {$/;"	s	file:
Thread	src/test7.c	/^typedef struct Thread Thread;$/;"	t	typeref:struct:Thread	file:
Thread	test/threadtest3.c	/^struct Thread {$/;"	s	file:
Thread	test/threadtest3.c	/^typedef struct Thread Thread;$/;"	t	typeref:struct:Thread	file:
Threadset	test/threadtest3.c	/^struct Threadset {$/;"	s	file:
Threadset	test/threadtest3.c	/^typedef struct Threadset Threadset;$/;"	t	typeref:struct:Threadset	file:
ToLower	shell.c	137;"	d	file:
ToLower	src/shell.c	137;"	d	file:
ToLower	tsrc/shell.c	137;"	d	file:
Token	ext/fts1/fts1.c	/^typedef struct Token {$/;"	s	file:
Token	ext/fts1/fts1.c	/^} Token;$/;"	t	typeref:struct:Token	file:
Token	ext/fts2/fts2.c	/^typedef struct Token {$/;"	s	file:
Token	ext/fts2/fts2.c	/^} Token;$/;"	t	typeref:struct:Token	file:
Token	sqlite3.c	/^struct Token {$/;"	s	file:
Token	sqlite3.c	/^typedef struct Token Token;$/;"	t	typeref:struct:Token	file:
Token	src/sqliteInt.h	/^struct Token {$/;"	s
Token	src/sqliteInt.h	/^typedef struct Token Token;$/;"	t	typeref:struct:Token
Token	tsrc/fts1.c	/^typedef struct Token {$/;"	s	file:
Token	tsrc/fts1.c	/^} Token;$/;"	t	typeref:struct:Token	file:
Token	tsrc/fts2.c	/^typedef struct Token {$/;"	s	file:
Token	tsrc/fts2.c	/^} Token;$/;"	t	typeref:struct:Token	file:
Token	tsrc/sqliteInt.h	/^struct Token {$/;"	s
Token	tsrc/sqliteInt.h	/^typedef struct Token Token;$/;"	t	typeref:struct:Token
TokenCtx	ext/fts5/fts5_expr.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	ext/fts5/fts5_expr.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenCtx	fts5.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	fts5.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenCtx	sqlite3.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	sqlite3.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenCtx	tsrc/fts5.c	/^struct TokenCtx {$/;"	s	file:
TokenCtx	tsrc/fts5.c	/^typedef struct TokenCtx TokenCtx;$/;"	t	typeref:struct:TokenCtx	file:
TokenDoclist	ext/fts3/fts3.c	/^struct TokenDoclist {$/;"	s	file:
TokenDoclist	ext/fts3/fts3.c	/^typedef struct TokenDoclist TokenDoclist;$/;"	t	typeref:struct:TokenDoclist	file:
TokenDoclist	sqlite3.c	/^struct TokenDoclist {$/;"	s	file:
TokenDoclist	sqlite3.c	/^typedef struct TokenDoclist TokenDoclist;$/;"	t	typeref:struct:TokenDoclist	file:
TokenDoclist	tsrc/fts3.c	/^struct TokenDoclist {$/;"	s	file:
TokenDoclist	tsrc/fts3.c	/^typedef struct TokenDoclist TokenDoclist;$/;"	t	typeref:struct:TokenDoclist	file:
TreeView	sqlite3.c	/^struct TreeView {$/;"	s	file:
TreeView	sqlite3.c	/^typedef struct TreeView TreeView;$/;"	t	typeref:struct:TreeView	file:
TreeView	src/sqliteInt.h	/^struct TreeView {$/;"	s
TreeView	src/sqliteInt.h	/^typedef struct TreeView TreeView;$/;"	t	typeref:struct:TreeView
TreeView	tsrc/sqliteInt.h	/^struct TreeView {$/;"	s
TreeView	tsrc/sqliteInt.h	/^typedef struct TreeView TreeView;$/;"	t	typeref:struct:TreeView
TrigEvent	parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
TrigEvent	sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
TrigEvent	tsrc/parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	s	file:
Trigger	sqlite3.c	/^struct Trigger {$/;"	s	file:
Trigger	sqlite3.c	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger	file:
Trigger	src/sqliteInt.h	/^struct Trigger {$/;"	s
Trigger	src/sqliteInt.h	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger
Trigger	tsrc/sqliteInt.h	/^struct Trigger {$/;"	s
Trigger	tsrc/sqliteInt.h	/^typedef struct Trigger Trigger;$/;"	t	typeref:struct:Trigger
TriggerPrg	sqlite3.c	/^struct TriggerPrg {$/;"	s	file:
TriggerPrg	sqlite3.c	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg	file:
TriggerPrg	src/sqliteInt.h	/^struct TriggerPrg {$/;"	s
TriggerPrg	src/sqliteInt.h	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg
TriggerPrg	tsrc/sqliteInt.h	/^struct TriggerPrg {$/;"	s
TriggerPrg	tsrc/sqliteInt.h	/^typedef struct TriggerPrg TriggerPrg;$/;"	t	typeref:struct:TriggerPrg
TriggerStep	sqlite3.c	/^struct TriggerStep {$/;"	s	file:
TriggerStep	sqlite3.c	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep	file:
TriggerStep	src/sqliteInt.h	/^struct TriggerStep {$/;"	s
TriggerStep	src/sqliteInt.h	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep
TriggerStep	tsrc/sqliteInt.h	/^struct TriggerStep {$/;"	s
TriggerStep	tsrc/sqliteInt.h	/^typedef struct TriggerStep TriggerStep;$/;"	t	typeref:struct:TriggerStep
UAUTH_Admin	sqlite3.c	13830;"	d	file:
UAUTH_Admin	src/sqliteInt.h	1231;"	d
UAUTH_Admin	tsrc/sqliteInt.h	1231;"	d
UAUTH_Fail	sqlite3.c	13828;"	d	file:
UAUTH_Fail	src/sqliteInt.h	1229;"	d
UAUTH_Fail	tsrc/sqliteInt.h	1229;"	d
UAUTH_Unknown	sqlite3.c	13827;"	d	file:
UAUTH_Unknown	src/sqliteInt.h	1228;"	d
UAUTH_Unknown	tsrc/sqliteInt.h	1228;"	d
UAUTH_User	sqlite3.c	13829;"	d	file:
UAUTH_User	src/sqliteInt.h	1230;"	d
UAUTH_User	tsrc/sqliteInt.h	1230;"	d
UINT16_TYPE	sqlite3.c	11578;"	d	file:
UINT16_TYPE	sqlite3.c	11580;"	d	file:
UINT16_TYPE	src/sqliteInt.h	644;"	d
UINT16_TYPE	src/sqliteInt.h	646;"	d
UINT16_TYPE	tsrc/sqliteInt.h	644;"	d
UINT16_TYPE	tsrc/sqliteInt.h	646;"	d
UINT32_TYPE	sqlite3.c	11571;"	d	file:
UINT32_TYPE	sqlite3.c	11573;"	d	file:
UINT32_TYPE	src/sqliteInt.h	637;"	d
UINT32_TYPE	src/sqliteInt.h	639;"	d
UINT32_TYPE	tsrc/sqliteInt.h	637;"	d
UINT32_TYPE	tsrc/sqliteInt.h	639;"	d
UINT8_TYPE	sqlite3.c	11592;"	d	file:
UINT8_TYPE	sqlite3.c	11594;"	d	file:
UINT8_TYPE	src/sqliteInt.h	658;"	d
UINT8_TYPE	src/sqliteInt.h	660;"	d
UINT8_TYPE	tsrc/sqliteInt.h	658;"	d
UINT8_TYPE	tsrc/sqliteInt.h	660;"	d
UNICODE_STRING_MAX_CHARS	sqlite3.c	37243;"	d	file:
UNICODE_STRING_MAX_CHARS	src/os_win.c	127;"	d	file:
UNICODE_STRING_MAX_CHARS	tsrc/os_win.c	127;"	d	file:
UNIXFILE_DELETE	sqlite3.c	29403;"	d	file:
UNIXFILE_DELETE	src/os_unix.c	276;"	d	file:
UNIXFILE_DELETE	tsrc/os_unix.c	276;"	d	file:
UNIXFILE_DIRSYNC	sqlite3.c	29398;"	d	file:
UNIXFILE_DIRSYNC	sqlite3.c	29400;"	d	file:
UNIXFILE_DIRSYNC	src/os_unix.c	271;"	d	file:
UNIXFILE_DIRSYNC	src/os_unix.c	273;"	d	file:
UNIXFILE_DIRSYNC	tsrc/os_unix.c	271;"	d	file:
UNIXFILE_DIRSYNC	tsrc/os_unix.c	273;"	d	file:
UNIXFILE_EXCL	sqlite3.c	29394;"	d	file:
UNIXFILE_EXCL	src/os_unix.c	267;"	d	file:
UNIXFILE_EXCL	tsrc/os_unix.c	267;"	d	file:
UNIXFILE_NOLOCK	sqlite3.c	29405;"	d	file:
UNIXFILE_NOLOCK	src/os_unix.c	278;"	d	file:
UNIXFILE_NOLOCK	tsrc/os_unix.c	278;"	d	file:
UNIXFILE_PERSIST_WAL	sqlite3.c	29396;"	d	file:
UNIXFILE_PERSIST_WAL	src/os_unix.c	269;"	d	file:
UNIXFILE_PERSIST_WAL	tsrc/os_unix.c	269;"	d	file:
UNIXFILE_PSOW	sqlite3.c	29402;"	d	file:
UNIXFILE_PSOW	src/os_unix.c	275;"	d	file:
UNIXFILE_PSOW	tsrc/os_unix.c	275;"	d	file:
UNIXFILE_RDONLY	sqlite3.c	29395;"	d	file:
UNIXFILE_RDONLY	src/os_unix.c	268;"	d	file:
UNIXFILE_RDONLY	tsrc/os_unix.c	268;"	d	file:
UNIXFILE_URI	sqlite3.c	29404;"	d	file:
UNIXFILE_URI	src/os_unix.c	277;"	d	file:
UNIXFILE_URI	tsrc/os_unix.c	277;"	d	file:
UNIXVFS	sqlite3.c	36833;"	d	file:
UNIXVFS	src/os_unix.c	7508;"	d	file:
UNIXVFS	tsrc/os_unix.c	7508;"	d	file:
UNIX_SHM_BASE	sqlite3.c	33396;"	d	file:
UNIX_SHM_BASE	src/os_unix.c	4071;"	d	file:
UNIX_SHM_BASE	tsrc/os_unix.c	4071;"	d	file:
UNIX_SHM_DMS	sqlite3.c	33397;"	d	file:
UNIX_SHM_DMS	src/os_unix.c	4072;"	d	file:
UNIX_SHM_DMS	tsrc/os_unix.c	4072;"	d	file:
UNK	tool/lemon.c	/^    UNK$/;"	e	enum:e_assoc	file:
UNKNOWN_LOCK	sqlite3.c	46684;"	d	file:
UNKNOWN_LOCK	src/pager.c	407;"	d	file:
UNKNOWN_LOCK	tsrc/pager.c	407;"	d	file:
UNUSED_PARAM	ext/fts5/fts5Int.h	91;"	d
UNUSED_PARAM	ext/misc/json1.c	37;"	d	file:
UNUSED_PARAM	fts5.c	684;"	d	file:
UNUSED_PARAM	sqlite3.c	175025;"	d	file:
UNUSED_PARAM	sqlite3.c	177886;"	d	file:
UNUSED_PARAM	tsrc/fts5.c	684;"	d	file:
UNUSED_PARAM	tsrc/json1.c	37;"	d	file:
UNUSED_PARAM2	ext/fts5/fts5Int.h	95;"	d
UNUSED_PARAM2	fts5.c	688;"	d	file:
UNUSED_PARAM2	sqlite3.c	177890;"	d	file:
UNUSED_PARAM2	tsrc/fts5.c	688;"	d	file:
UNUSED_PARAMETER	ext/async/sqlite3async.c	33;"	d	file:
UNUSED_PARAMETER	ext/fts3/fts3Int.h	165;"	d
UNUSED_PARAMETER	ext/rtree/rtree.c	79;"	d	file:
UNUSED_PARAMETER	mptest/mptest.c	68;"	d	file:
UNUSED_PARAMETER	shell.c	325;"	d	file:
UNUSED_PARAMETER	sqlite3.c	11929;"	d	file:
UNUSED_PARAMETER	sqlite3.c	141589;"	d	file:
UNUSED_PARAMETER	sqlite3.c	160042;"	d	file:
UNUSED_PARAMETER	src/shell.c	325;"	d	file:
UNUSED_PARAMETER	src/sqliteInt.h	995;"	d
UNUSED_PARAMETER	src/test_multiplex.c	67;"	d	file:
UNUSED_PARAMETER	tsrc/fts3Int.h	165;"	d
UNUSED_PARAMETER	tsrc/rtree.c	79;"	d	file:
UNUSED_PARAMETER	tsrc/shell.c	325;"	d	file:
UNUSED_PARAMETER	tsrc/sqliteInt.h	995;"	d
UNUSED_PARAMETER2	sqlite3.c	11930;"	d	file:
UNUSED_PARAMETER2	src/sqliteInt.h	996;"	d
UNUSED_PARAMETER2	tsrc/sqliteInt.h	996;"	d
UNUSED_VARIABLE_VALUE	sqlite3.c	37292;"	d	file:
UNUSED_VARIABLE_VALUE	src/os_win.c	176;"	d	file:
UNUSED_VARIABLE_VALUE	tsrc/os_win.c	176;"	d	file:
UPDATE_MAX_BLOBSIZE	sqlite3.c	77154;"	d	file:
UPDATE_MAX_BLOBSIZE	sqlite3.c	77156;"	d	file:
UPDATE_MAX_BLOBSIZE	src/vdbe.c	115;"	d	file:
UPDATE_MAX_BLOBSIZE	src/vdbe.c	117;"	d	file:
UPDATE_MAX_BLOBSIZE	tsrc/vdbe.c	115;"	d	file:
UPDATE_MAX_BLOBSIZE	tsrc/vdbe.c	117;"	d	file:
USEFETCH	sqlite3.c	47068;"	d	file:
USEFETCH	sqlite3.c	47070;"	d	file:
USEFETCH	src/pager.c	791;"	d	file:
USEFETCH	src/pager.c	793;"	d	file:
USEFETCH	tsrc/pager.c	791;"	d	file:
USEFETCH	tsrc/pager.c	793;"	d	file:
USE_AMALGAMATION	Makefile	/^USE_AMALGAMATION = 1$/;"	m
USE_GCOV	Makefile	/^USE_GCOV = 0$/;"	m
USE_PREAD	sqlite3.c	29207;"	d	file:
USE_PREAD	sqlite3.c	29211;"	d	file:
USE_PREAD	src/os_unix.c	80;"	d	file:
USE_PREAD	src/os_unix.c	84;"	d	file:
USE_PREAD	tsrc/os_unix.c	80;"	d	file:
USE_PREAD	tsrc/os_unix.c	84;"	d	file:
USE_PREAD64	sqlite3.c	29208;"	d	file:
USE_PREAD64	sqlite3.c	29210;"	d	file:
USE_PREAD64	src/os_unix.c	81;"	d	file:
USE_PREAD64	src/os_unix.c	83;"	d	file:
USE_PREAD64	tsrc/os_unix.c	81;"	d	file:
USE_PREAD64	tsrc/os_unix.c	83;"	d	file:
UnaryOp	test/fuzz_common.tcl	/^proc UnaryOp {} {$/;"	p
Unicode61Tokenizer	ext/fts5/fts5_tokenize.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	ext/fts5/fts5_tokenize.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
Unicode61Tokenizer	fts5.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	fts5.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
Unicode61Tokenizer	sqlite3.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	sqlite3.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
Unicode61Tokenizer	tsrc/fts5.c	/^struct Unicode61Tokenizer {$/;"	s	file:
Unicode61Tokenizer	tsrc/fts5.c	/^typedef struct Unicode61Tokenizer Unicode61Tokenizer;$/;"	t	typeref:struct:Unicode61Tokenizer	file:
UnixUnusedFd	sqlite3.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	sqlite3.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnixUnusedFd	src/os_unix.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	src/os_unix.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnixUnusedFd	tsrc/os_unix.c	/^struct UnixUnusedFd {$/;"	s	file:
UnixUnusedFd	tsrc/os_unix.c	/^typedef struct UnixUnusedFd UnixUnusedFd;     \/* An unused file descriptor *\/$/;"	t	typeref:struct:UnixUnusedFd	file:
UnlockNotification	src/test_thread.c	/^struct UnlockNotification {$/;"	s	file:
UnlockNotification	src/test_thread.c	/^typedef struct UnlockNotification UnlockNotification;$/;"	t	typeref:struct:UnlockNotification	file:
UnpackedRecord	sqlite3.c	/^struct UnpackedRecord {$/;"	s	file:
UnpackedRecord	sqlite3.c	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord	file:
UnpackedRecord	src/sqliteInt.h	/^struct UnpackedRecord {$/;"	s
UnpackedRecord	src/sqliteInt.h	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord
UnpackedRecord	tsrc/sqliteInt.h	/^struct UnpackedRecord {$/;"	s
UnpackedRecord	tsrc/sqliteInt.h	/^typedef struct UnpackedRecord UnpackedRecord;$/;"	t	typeref:struct:UnpackedRecord
Update	test/fuzz_common.tcl	/^proc Update {} {$/;"	p
UpperToLower	sqlite3.c	27480;"	d	file:
UpperToLower	src/util.c	277;"	d	file:
UpperToLower	tsrc/util.c	277;"	d	file:
UseSQLite	vsixtest/MainPage.xaml.cpp	/^void MainPage::UseSQLite(void)$/;"	f	class:MainPage
Utf8Read	sqlite3.c	103793;"	d	file:
Utf8Read	sqlite3.c	103795;"	d	file:
Utf8Read	src/func.c	585;"	d	file:
Utf8Read	src/func.c	587;"	d	file:
Utf8Read	tsrc/func.c	585;"	d	file:
Utf8Read	tsrc/func.c	587;"	d	file:
VACUUM	tool/mkkeywordhash.c	122;"	d	file:
VACUUM	tool/mkkeywordhash.c	124;"	d	file:
VALIDIDS	Makefile	/^VALIDIDS=' sqlite3(changeset|changegroup|session)?_'$/;"	m
VARINT_MAX	ext/fts1/fts1.c	109;"	d	file:
VARINT_MAX	ext/fts1/fulltext.c	39;"	d	file:
VARINT_MAX	ext/fts2/fts2.c	404;"	d	file:
VARINT_MAX	tsrc/fts1.c	109;"	d	file:
VARINT_MAX	tsrc/fts2.c	404;"	d	file:
VDBE_DISPLAY_P4	sqlite3.c	17657;"	d	file:
VDBE_DISPLAY_P4	sqlite3.c	17659;"	d	file:
VDBE_DISPLAY_P4	src/vdbeInt.h	35;"	d
VDBE_DISPLAY_P4	src/vdbeInt.h	37;"	d
VDBE_DISPLAY_P4	tsrc/vdbeInt.h	35;"	d
VDBE_DISPLAY_P4	tsrc/vdbeInt.h	37;"	d
VDBE_MAGIC_DEAD	sqlite3.c	18051;"	d	file:
VDBE_MAGIC_DEAD	src/vdbeInt.h	429;"	d
VDBE_MAGIC_DEAD	tsrc/vdbeInt.h	429;"	d
VDBE_MAGIC_HALT	sqlite3.c	18050;"	d	file:
VDBE_MAGIC_HALT	src/vdbeInt.h	428;"	d
VDBE_MAGIC_HALT	tsrc/vdbeInt.h	428;"	d
VDBE_MAGIC_INIT	sqlite3.c	18048;"	d	file:
VDBE_MAGIC_INIT	src/vdbeInt.h	426;"	d
VDBE_MAGIC_INIT	tsrc/vdbeInt.h	426;"	d
VDBE_MAGIC_RUN	sqlite3.c	18049;"	d	file:
VDBE_MAGIC_RUN	src/vdbeInt.h	427;"	d
VDBE_MAGIC_RUN	tsrc/vdbeInt.h	427;"	d
VDBE_OFFSET_LINENO	sqlite3.c	12862;"	d	file:
VDBE_OFFSET_LINENO	sqlite3.c	12868;"	d	file:
VDBE_OFFSET_LINENO	src/vdbe.h	297;"	d
VDBE_OFFSET_LINENO	src/vdbe.h	303;"	d
VDBE_OFFSET_LINENO	tsrc/vdbe.h	297;"	d
VDBE_OFFSET_LINENO	tsrc/vdbe.h	303;"	d
VERSION	Makefile	/^VERSION = 3.14$/;"	m
VERSION_NUMBER	Makefile	/^VERSION_NUMBER = 3014001$/;"	m
VFSLOG_BUFFERSIZE	src/test_osinst.c	115;"	d	file:
VFSSTAT_ACCESS	ext/misc/vfsstat.c	91;"	d	file:
VFSSTAT_ANY	ext/misc/vfsstat.c	70;"	d	file:
VFSSTAT_BYTESIN	ext/misc/vfsstat.c	84;"	d	file:
VFSSTAT_BYTESOUT	ext/misc/vfsstat.c	85;"	d	file:
VFSSTAT_CURTIME	ext/misc/vfsstat.c	96;"	d	file:
VFSSTAT_DELETE	ext/misc/vfsstat.c	92;"	d	file:
VFSSTAT_FULLPATH	ext/misc/vfsstat.c	93;"	d	file:
VFSSTAT_JOURNAL	ext/misc/vfsstat.c	63;"	d	file:
VFSSTAT_LOCK	ext/misc/vfsstat.c	90;"	d	file:
VFSSTAT_MAIN	ext/misc/vfsstat.c	62;"	d	file:
VFSSTAT_MASTERJRNL	ext/misc/vfsstat.c	65;"	d	file:
VFSSTAT_MXCNT	ext/misc/vfsstat.c	111;"	d	file:
VFSSTAT_OPEN	ext/misc/vfsstat.c	89;"	d	file:
VFSSTAT_RANDOM	ext/misc/vfsstat.c	94;"	d	file:
VFSSTAT_READ	ext/misc/vfsstat.c	86;"	d	file:
VFSSTAT_SLEEP	ext/misc/vfsstat.c	95;"	d	file:
VFSSTAT_SUBJRNL	ext/misc/vfsstat.c	66;"	d	file:
VFSSTAT_SYNC	ext/misc/vfsstat.c	88;"	d	file:
VFSSTAT_TEMPDB	ext/misc/vfsstat.c	67;"	d	file:
VFSSTAT_TEMPJRNL	ext/misc/vfsstat.c	68;"	d	file:
VFSSTAT_TRANSIENT	ext/misc/vfsstat.c	69;"	d	file:
VFSSTAT_WAL	ext/misc/vfsstat.c	64;"	d	file:
VFSSTAT_WRITE	ext/misc/vfsstat.c	87;"	d	file:
VFSSTAT_nFile	ext/misc/vfsstat.c	71;"	d	file:
VFSSTAT_nStat	ext/misc/vfsstat.c	97;"	d	file:
VFUNCTION	sqlite3.c	14197;"	d	file:
VFUNCTION	src/sqliteInt.h	1598;"	d
VFUNCTION	tsrc/sqliteInt.h	1598;"	d
VFile	test/fuzzcheck.c	/^struct VFile {$/;"	s	file:
VFile	test/fuzzcheck.c	/^typedef struct VFile VFile;$/;"	t	typeref:struct:VFile	file:
VHandle	test/fuzzcheck.c	/^struct VHandle {$/;"	s	file:
VHandle	test/fuzzcheck.c	/^typedef struct VHandle VHandle;$/;"	t	typeref:struct:VHandle	file:
VHandleMethods	test/fuzzcheck.c	/^static sqlite3_io_methods VHandleMethods = {$/;"	v	file:
VIEW	tool/mkkeywordhash.c	127;"	d	file:
VIEW	tool/mkkeywordhash.c	129;"	d	file:
VLogFile	ext/misc/vfslog.c	/^struct VLogFile {$/;"	s	file:
VLogFile	ext/misc/vfslog.c	/^typedef struct VLogFile VLogFile;$/;"	t	typeref:struct:VLogFile	file:
VLogLog	ext/misc/vfslog.c	/^struct VLogLog {$/;"	s	file:
VLogLog	ext/misc/vfslog.c	/^typedef struct VLogLog VLogLog;$/;"	t	typeref:struct:VLogLog	file:
VLogVfs	ext/misc/vfslog.c	/^struct VLogVfs {$/;"	s	file:
VLogVfs	ext/misc/vfslog.c	/^typedef struct VLogVfs VLogVfs;$/;"	t	typeref:struct:VLogVfs	file:
VSTAT_COLUMN_COUNT	ext/misc/vfsstat.c	612;"	d	file:
VSTAT_COLUMN_FILE	ext/misc/vfsstat.c	610;"	d	file:
VSTAT_COLUMN_STAT	ext/misc/vfsstat.c	611;"	d	file:
VStatFile	ext/misc/vfsstat.c	/^struct VStatFile {$/;"	s	file:
VStatFile	ext/misc/vfsstat.c	/^typedef struct VStatFile VStatFile;$/;"	t	typeref:struct:VStatFile	file:
VStatVfs	ext/misc/vfsstat.c	/^struct VStatVfs {$/;"	s	file:
VStatVfs	ext/misc/vfsstat.c	/^typedef struct VStatVfs VStatVfs;$/;"	t	typeref:struct:VStatVfs	file:
VTAB	tool/mkkeywordhash.c	132;"	d	file:
VTAB	tool/mkkeywordhash.c	134;"	d	file:
VTAB_SCHEMA	sqlite3.c	169698;"	d	file:
VTAB_SCHEMA	src/dbstat.c	59;"	d	file:
VTAB_SCHEMA	tsrc/dbstat.c	59;"	d	file:
VTSHIM_COPY_ERRMSG	ext/misc/vtshim.c	62;"	d	file:
VTable	sqlite3.c	/^struct VTable {$/;"	s	file:
VTable	sqlite3.c	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable	file:
VTable	src/sqliteInt.h	/^struct VTable {$/;"	s
VTable	src/sqliteInt.h	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable
VTable	tsrc/sqliteInt.h	/^struct VTable {$/;"	s
VTable	tsrc/sqliteInt.h	/^typedef struct VTable VTable;$/;"	t	typeref:struct:VTable
VVA_ONLY	sqlite3.c	11064;"	d	file:
VVA_ONLY	sqlite3.c	11066;"	d	file:
VVA_ONLY	src/sqliteInt.h	402;"	d
VVA_ONLY	src/sqliteInt.h	404;"	d
VVA_ONLY	tsrc/sqliteInt.h	402;"	d
VVA_ONLY	tsrc/sqliteInt.h	404;"	d
ValueNewStat4Ctx	sqlite3.c	/^struct ValueNewStat4Ctx {$/;"	s	file:
ValueNewStat4Ctx	src/vdbemem.c	/^struct ValueNewStat4Ctx {$/;"	s	file:
ValueNewStat4Ctx	tsrc/vdbemem.c	/^struct ValueNewStat4Ctx {$/;"	s	file:
Vdbe	sqlite3.c	/^struct Vdbe {$/;"	s	file:
Vdbe	sqlite3.c	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe	file:
Vdbe	src/vdbe.h	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe
Vdbe	src/vdbeInt.h	/^struct Vdbe {$/;"	s
Vdbe	tsrc/vdbe.h	/^typedef struct Vdbe Vdbe;$/;"	t	typeref:struct:Vdbe
Vdbe	tsrc/vdbeInt.h	/^struct Vdbe {$/;"	s
VdbeBranchTaken	sqlite3.c	77176;"	d	file:
VdbeBranchTaken	sqlite3.c	77178;"	d	file:
VdbeBranchTaken	src/vdbe.c	137;"	d	file:
VdbeBranchTaken	src/vdbe.c	139;"	d	file:
VdbeBranchTaken	tsrc/vdbe.c	137;"	d	file:
VdbeBranchTaken	tsrc/vdbe.c	139;"	d	file:
VdbeComment	sqlite3.c	12820;"	d	file:
VdbeComment	sqlite3.c	12829;"	d	file:
VdbeComment	src/vdbe.h	255;"	d
VdbeComment	src/vdbe.h	264;"	d
VdbeComment	tsrc/vdbe.h	255;"	d
VdbeComment	tsrc/vdbe.h	264;"	d
VdbeCoverage	sqlite3.c	12858;"	d	file:
VdbeCoverage	sqlite3.c	12864;"	d	file:
VdbeCoverage	src/vdbe.h	293;"	d
VdbeCoverage	src/vdbe.h	299;"	d
VdbeCoverage	tsrc/vdbe.h	293;"	d
VdbeCoverage	tsrc/vdbe.h	299;"	d
VdbeCoverageAlwaysTaken	sqlite3.c	12860;"	d	file:
VdbeCoverageAlwaysTaken	sqlite3.c	12866;"	d	file:
VdbeCoverageAlwaysTaken	src/vdbe.h	295;"	d
VdbeCoverageAlwaysTaken	src/vdbe.h	301;"	d
VdbeCoverageAlwaysTaken	tsrc/vdbe.h	295;"	d
VdbeCoverageAlwaysTaken	tsrc/vdbe.h	301;"	d
VdbeCoverageIf	sqlite3.c	12859;"	d	file:
VdbeCoverageIf	sqlite3.c	12865;"	d	file:
VdbeCoverageIf	src/vdbe.h	294;"	d
VdbeCoverageIf	src/vdbe.h	300;"	d
VdbeCoverageIf	tsrc/vdbe.h	294;"	d
VdbeCoverageIf	tsrc/vdbe.h	300;"	d
VdbeCoverageNeverTaken	sqlite3.c	12861;"	d	file:
VdbeCoverageNeverTaken	sqlite3.c	12867;"	d	file:
VdbeCoverageNeverTaken	src/vdbe.h	296;"	d
VdbeCoverageNeverTaken	src/vdbe.h	302;"	d
VdbeCoverageNeverTaken	tsrc/vdbe.h	296;"	d
VdbeCoverageNeverTaken	tsrc/vdbe.h	302;"	d
VdbeCursor	sqlite3.c	/^struct VdbeCursor {$/;"	s	file:
VdbeCursor	sqlite3.c	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor	file:
VdbeCursor	src/vdbeInt.h	/^struct VdbeCursor {$/;"	s
VdbeCursor	src/vdbeInt.h	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor
VdbeCursor	tsrc/vdbeInt.h	/^struct VdbeCursor {$/;"	s
VdbeCursor	tsrc/vdbeInt.h	/^typedef struct VdbeCursor VdbeCursor;$/;"	t	typeref:struct:VdbeCursor
VdbeFrame	sqlite3.c	/^struct VdbeFrame {$/;"	s	file:
VdbeFrame	sqlite3.c	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame	file:
VdbeFrame	src/vdbeInt.h	/^struct VdbeFrame {$/;"	s
VdbeFrame	src/vdbeInt.h	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame
VdbeFrame	tsrc/vdbeInt.h	/^struct VdbeFrame {$/;"	s
VdbeFrame	tsrc/vdbeInt.h	/^typedef struct VdbeFrame VdbeFrame;$/;"	t	typeref:struct:VdbeFrame
VdbeFrameMem	sqlite3.c	17798;"	d	file:
VdbeFrameMem	src/vdbeInt.h	176;"	d
VdbeFrameMem	tsrc/vdbeInt.h	176;"	d
VdbeMemDynamic	sqlite3.c	17887;"	d	file:
VdbeMemDynamic	src/vdbeInt.h	265;"	d
VdbeMemDynamic	tsrc/vdbeInt.h	265;"	d
VdbeModuleComment	sqlite3.c	12824;"	d	file:
VdbeModuleComment	sqlite3.c	12826;"	d	file:
VdbeModuleComment	sqlite3.c	12831;"	d	file:
VdbeModuleComment	src/vdbe.h	259;"	d
VdbeModuleComment	src/vdbe.h	261;"	d
VdbeModuleComment	src/vdbe.h	266;"	d
VdbeModuleComment	tsrc/vdbe.h	259;"	d
VdbeModuleComment	tsrc/vdbe.h	261;"	d
VdbeModuleComment	tsrc/vdbe.h	266;"	d
VdbeNoopComment	sqlite3.c	12822;"	d	file:
VdbeNoopComment	sqlite3.c	12830;"	d	file:
VdbeNoopComment	src/vdbe.h	257;"	d
VdbeNoopComment	src/vdbe.h	265;"	d
VdbeNoopComment	tsrc/vdbe.h	257;"	d
VdbeNoopComment	tsrc/vdbe.h	265;"	d
VdbeOp	sqlite3.c	/^struct VdbeOp {$/;"	s	file:
VdbeOp	sqlite3.c	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp	file:
VdbeOp	src/vdbe.h	/^struct VdbeOp {$/;"	s
VdbeOp	src/vdbe.h	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp
VdbeOp	tsrc/vdbe.h	/^struct VdbeOp {$/;"	s
VdbeOp	tsrc/vdbe.h	/^typedef struct VdbeOp VdbeOp;$/;"	t	typeref:struct:VdbeOp
VdbeOpIter	sqlite3.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	sqlite3.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpIter	src/vdbeaux.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	src/vdbeaux.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpIter	tsrc/vdbeaux.c	/^struct VdbeOpIter {$/;"	s	file:
VdbeOpIter	tsrc/vdbeaux.c	/^typedef struct VdbeOpIter VdbeOpIter;$/;"	t	typeref:struct:VdbeOpIter	file:
VdbeOpList	sqlite3.c	/^struct VdbeOpList {$/;"	s	file:
VdbeOpList	sqlite3.c	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList	file:
VdbeOpList	src/vdbe.h	/^struct VdbeOpList {$/;"	s
VdbeOpList	src/vdbe.h	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList
VdbeOpList	tsrc/vdbe.h	/^struct VdbeOpList {$/;"	s
VdbeOpList	tsrc/vdbe.h	/^typedef struct VdbeOpList VdbeOpList;$/;"	t	typeref:struct:VdbeOpList
VdbeSorter	sqlite3.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	sqlite3.c	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter	file:
VdbeSorter	src/vdbeInt.h	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter
VdbeSorter	src/vdbesort.c	/^struct VdbeSorter {$/;"	s	file:
VdbeSorter	tsrc/vdbeInt.h	/^typedef struct VdbeSorter VdbeSorter;$/;"	t	typeref:struct:VdbeSorter
VdbeSorter	tsrc/vdbesort.c	/^struct VdbeSorter {$/;"	s	file:
VfsStatCursor	ext/misc/vfsstat.c	/^typedef struct VfsStatCursor {$/;"	s	file:
VfsStatCursor	ext/misc/vfsstat.c	/^} VfsStatCursor;$/;"	t	typeref:struct:VfsStatCursor	file:
VfsStatModule	ext/misc/vfsstat.c	/^static sqlite3_module VfsStatModule = {$/;"	v	file:
VfslogCsr	src/test_osinst.c	/^struct VfslogCsr {$/;"	s	file:
VfslogCsr	src/test_osinst.c	/^typedef struct VfslogCsr VfslogCsr;$/;"	t	typeref:struct:VfslogCsr	file:
VfslogFile	src/test_osinst.c	/^struct VfslogFile {$/;"	s	file:
VfslogFile	src/test_osinst.c	/^typedef struct VfslogFile VfslogFile;$/;"	t	typeref:struct:VfslogFile	file:
VfslogVfs	src/test_osinst.c	/^struct VfslogVfs {$/;"	s	file:
VfslogVfs	src/test_osinst.c	/^typedef struct VfslogVfs VfslogVfs;$/;"	t	typeref:struct:VfslogVfs	file:
VfslogVtab	src/test_osinst.c	/^struct VfslogVtab {$/;"	s	file:
VfslogVtab	src/test_osinst.c	/^typedef struct VfslogVtab VfslogVtab;$/;"	t	typeref:struct:VfslogVtab	file:
VisibleRowid	sqlite3.c	14479;"	d	file:
VisibleRowid	src/sqliteInt.h	1880;"	d
VisibleRowid	tsrc/sqliteInt.h	1880;"	d
VisitContext	tool/loadfts.c	/^struct VisitContext {$/;"	s	file:
VisitContext	tool/loadfts.c	/^typedef struct VisitContext VisitContext;$/;"	t	typeref:struct:VisitContext	file:
VtabCtx	sqlite3.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	sqlite3.c	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx	file:
VtabCtx	src/sqliteInt.h	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx
VtabCtx	src/vtab.c	/^struct VtabCtx {$/;"	s	file:
VtabCtx	tsrc/sqliteInt.h	/^typedef struct VtabCtx VtabCtx;$/;"	t	typeref:struct:VtabCtx
VtabCtx	tsrc/vtab.c	/^struct VtabCtx {$/;"	s	file:
WAITING_FOR_ARROW	tool/lemon.c	/^  WAITING_FOR_ARROW,$/;"	e	enum:e_state	file:
WAITING_FOR_CLASS_ID	tool/lemon.c	/^  WAITING_FOR_CLASS_ID,$/;"	e	enum:e_state	file:
WAITING_FOR_CLASS_TOKEN	tool/lemon.c	/^  WAITING_FOR_CLASS_TOKEN$/;"	e	enum:e_state	file:
WAITING_FOR_DATATYPE_SYMBOL	tool/lemon.c	/^  WAITING_FOR_DATATYPE_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_ARG	tool/lemon.c	/^  WAITING_FOR_DECL_ARG,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_KEYWORD	tool/lemon.c	/^  WAITING_FOR_DECL_KEYWORD,$/;"	e	enum:e_state	file:
WAITING_FOR_DECL_OR_RULE	tool/lemon.c	/^  WAITING_FOR_DECL_OR_RULE,$/;"	e	enum:e_state	file:
WAITING_FOR_DESTRUCTOR_SYMBOL	tool/lemon.c	/^  WAITING_FOR_DESTRUCTOR_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_FALLBACK_ID	tool/lemon.c	/^  WAITING_FOR_FALLBACK_ID,$/;"	e	enum:e_state	file:
WAITING_FOR_PRECEDENCE_SYMBOL	tool/lemon.c	/^  WAITING_FOR_PRECEDENCE_SYMBOL,$/;"	e	enum:e_state	file:
WAITING_FOR_WILDCARD_ID	tool/lemon.c	/^  WAITING_FOR_WILDCARD_ID,$/;"	e	enum:e_state	file:
WALINDEX_HDR_SIZE	sqlite3.c	54070;"	d	file:
WALINDEX_HDR_SIZE	src/wal.c	394;"	d	file:
WALINDEX_HDR_SIZE	tsrc/wal.c	394;"	d	file:
WALINDEX_LOCK_OFFSET	sqlite3.c	54069;"	d	file:
WALINDEX_LOCK_OFFSET	src/wal.c	393;"	d	file:
WALINDEX_LOCK_OFFSET	tsrc/wal.c	393;"	d	file:
WALINDEX_MAX_VERSION	sqlite3.c	53947;"	d	file:
WALINDEX_MAX_VERSION	src/wal.c	271;"	d	file:
WALINDEX_MAX_VERSION	tsrc/wal.c	271;"	d	file:
WALINDEX_PGSZ	sqlite3.c	54202;"	d	file:
WALINDEX_PGSZ	src/wal.c	526;"	d	file:
WALINDEX_PGSZ	tsrc/wal.c	526;"	d	file:
WALTHREAD1_NTHREAD	test/threadtest3.c	921;"	d	file:
WALTHREAD3_NTHREAD	test/threadtest3.c	922;"	d	file:
WALTRACE	sqlite3.c	53928;"	d	file:
WALTRACE	sqlite3.c	53930;"	d	file:
WALTRACE	src/wal.c	252;"	d	file:
WALTRACE	src/wal.c	254;"	d	file:
WALTRACE	tsrc/wal.c	252;"	d	file:
WALTRACE	tsrc/wal.c	254;"	d	file:
WAL_ALL_BUT_WRITE	sqlite3.c	53955;"	d	file:
WAL_ALL_BUT_WRITE	src/wal.c	279;"	d	file:
WAL_ALL_BUT_WRITE	tsrc/wal.c	279;"	d	file:
WAL_CKPT_LOCK	sqlite3.c	53956;"	d	file:
WAL_CKPT_LOCK	src/wal.c	280;"	d	file:
WAL_CKPT_LOCK	tsrc/wal.c	280;"	d	file:
WAL_EXCLUSIVE_MODE	sqlite3.c	54139;"	d	file:
WAL_EXCLUSIVE_MODE	src/wal.c	463;"	d	file:
WAL_EXCLUSIVE_MODE	tsrc/wal.c	463;"	d	file:
WAL_FRAME_HDRSIZE	sqlite3.c	54073;"	d	file:
WAL_FRAME_HDRSIZE	src/wal.c	397;"	d	file:
WAL_FRAME_HDRSIZE	tsrc/wal.c	397;"	d	file:
WAL_HDRSIZE	sqlite3.c	54077;"	d	file:
WAL_HDRSIZE	src/wal.c	401;"	d	file:
WAL_HDRSIZE	tsrc/wal.c	401;"	d	file:
WAL_HEAPMEMORY_MODE	sqlite3.c	54140;"	d	file:
WAL_HEAPMEMORY_MODE	src/wal.c	464;"	d	file:
WAL_HEAPMEMORY_MODE	tsrc/wal.c	464;"	d	file:
WAL_LOCK_CKPT	ext/rbu/sqlite3rbu.c	190;"	d	file:
WAL_LOCK_CKPT	sqlite3.c	165113;"	d	file:
WAL_LOCK_CKPT	tsrc/sqlite3rbu.c	190;"	d	file:
WAL_LOCK_READ0	ext/rbu/sqlite3rbu.c	191;"	d	file:
WAL_LOCK_READ0	sqlite3.c	165114;"	d	file:
WAL_LOCK_READ0	tsrc/sqlite3rbu.c	191;"	d	file:
WAL_LOCK_WRITE	ext/rbu/sqlite3rbu.c	189;"	d	file:
WAL_LOCK_WRITE	sqlite3.c	165112;"	d	file:
WAL_LOCK_WRITE	tsrc/sqlite3rbu.c	189;"	d	file:
WAL_MAGIC	sqlite3.c	54088;"	d	file:
WAL_MAGIC	src/wal.c	412;"	d	file:
WAL_MAGIC	tsrc/wal.c	412;"	d	file:
WAL_MAX_VERSION	sqlite3.c	53946;"	d	file:
WAL_MAX_VERSION	src/wal.c	270;"	d	file:
WAL_MAX_VERSION	tsrc/wal.c	270;"	d	file:
WAL_NORMAL_MODE	sqlite3.c	54138;"	d	file:
WAL_NORMAL_MODE	src/wal.c	462;"	d	file:
WAL_NORMAL_MODE	tsrc/wal.c	462;"	d	file:
WAL_NREADER	sqlite3.c	53959;"	d	file:
WAL_NREADER	src/wal.c	283;"	d	file:
WAL_NREADER	tsrc/wal.c	283;"	d	file:
WAL_RDONLY	sqlite3.c	54146;"	d	file:
WAL_RDONLY	src/wal.c	470;"	d	file:
WAL_RDONLY	tsrc/wal.c	470;"	d	file:
WAL_RDWR	sqlite3.c	54145;"	d	file:
WAL_RDWR	src/wal.c	469;"	d	file:
WAL_RDWR	tsrc/wal.c	469;"	d	file:
WAL_READ_LOCK	sqlite3.c	53958;"	d	file:
WAL_READ_LOCK	src/wal.c	282;"	d	file:
WAL_READ_LOCK	tsrc/wal.c	282;"	d	file:
WAL_RECOVER_LOCK	sqlite3.c	53957;"	d	file:
WAL_RECOVER_LOCK	src/wal.c	281;"	d	file:
WAL_RECOVER_LOCK	tsrc/wal.c	281;"	d	file:
WAL_RETRY	sqlite3.c	55800;"	d	file:
WAL_RETRY	src/wal.c	2124;"	d	file:
WAL_RETRY	tsrc/wal.c	2124;"	d	file:
WAL_SAVEPOINT_NDATA	sqlite3.c	46201;"	d	file:
WAL_SAVEPOINT_NDATA	src/wal.h	50;"	d
WAL_SAVEPOINT_NDATA	tsrc/wal.h	50;"	d
WAL_SHM_RDONLY	sqlite3.c	54147;"	d	file:
WAL_SHM_RDONLY	src/wal.c	471;"	d	file:
WAL_SHM_RDONLY	tsrc/wal.c	471;"	d	file:
WAL_SYNC_TRANSACTIONS	sqlite3.c	46176;"	d	file:
WAL_SYNC_TRANSACTIONS	src/wal.h	25;"	d
WAL_SYNC_TRANSACTIONS	tsrc/wal.h	25;"	d
WAL_WRITE_LOCK	sqlite3.c	53954;"	d	file:
WAL_WRITE_LOCK	src/wal.c	278;"	d	file:
WAL_WRITE_LOCK	tsrc/wal.c	278;"	d	file:
WHERETRACE	sqlite3.c	122990;"	d	file:
WHERETRACE	sqlite3.c	122993;"	d	file:
WHERETRACE	src/whereInt.h	26;"	d
WHERETRACE	src/whereInt.h	29;"	d
WHERETRACE	tsrc/whereInt.h	26;"	d
WHERETRACE	tsrc/whereInt.h	29;"	d
WHERETRACE_ENABLED	sqlite3.c	122991;"	d	file:
WHERETRACE_ENABLED	src/whereInt.h	27;"	d
WHERETRACE_ENABLED	tsrc/whereInt.h	27;"	d
WHERE_AUTO_INDEX	sqlite3.c	123509;"	d	file:
WHERE_AUTO_INDEX	src/whereInt.h	545;"	d
WHERE_AUTO_INDEX	tsrc/whereInt.h	545;"	d
WHERE_BOTH_LIMIT	sqlite3.c	123501;"	d	file:
WHERE_BOTH_LIMIT	src/whereInt.h	537;"	d
WHERE_BOTH_LIMIT	tsrc/whereInt.h	537;"	d
WHERE_BTM_LIMIT	sqlite3.c	123500;"	d	file:
WHERE_BTM_LIMIT	src/whereInt.h	536;"	d
WHERE_BTM_LIMIT	tsrc/whereInt.h	536;"	d
WHERE_COLUMN_EQ	sqlite3.c	123494;"	d	file:
WHERE_COLUMN_EQ	src/whereInt.h	530;"	d
WHERE_COLUMN_EQ	tsrc/whereInt.h	530;"	d
WHERE_COLUMN_IN	sqlite3.c	123496;"	d	file:
WHERE_COLUMN_IN	src/whereInt.h	532;"	d
WHERE_COLUMN_IN	tsrc/whereInt.h	532;"	d
WHERE_COLUMN_NULL	sqlite3.c	123497;"	d	file:
WHERE_COLUMN_NULL	src/whereInt.h	533;"	d
WHERE_COLUMN_NULL	tsrc/whereInt.h	533;"	d
WHERE_COLUMN_RANGE	sqlite3.c	123495;"	d	file:
WHERE_COLUMN_RANGE	src/whereInt.h	531;"	d
WHERE_COLUMN_RANGE	tsrc/whereInt.h	531;"	d
WHERE_CONSTRAINT	sqlite3.c	123498;"	d	file:
WHERE_CONSTRAINT	src/whereInt.h	534;"	d
WHERE_CONSTRAINT	tsrc/whereInt.h	534;"	d
WHERE_DISTINCTBY	sqlite3.c	15156;"	d	file:
WHERE_DISTINCTBY	src/sqliteInt.h	2557;"	d
WHERE_DISTINCTBY	tsrc/sqliteInt.h	2557;"	d
WHERE_DISTINCT_NOOP	sqlite3.c	15168;"	d	file:
WHERE_DISTINCT_NOOP	src/sqliteInt.h	2569;"	d
WHERE_DISTINCT_NOOP	tsrc/sqliteInt.h	2569;"	d
WHERE_DISTINCT_ORDERED	sqlite3.c	15170;"	d	file:
WHERE_DISTINCT_ORDERED	src/sqliteInt.h	2571;"	d
WHERE_DISTINCT_ORDERED	tsrc/sqliteInt.h	2571;"	d
WHERE_DISTINCT_UNIQUE	sqlite3.c	15169;"	d	file:
WHERE_DISTINCT_UNIQUE	src/sqliteInt.h	2570;"	d
WHERE_DISTINCT_UNIQUE	tsrc/sqliteInt.h	2570;"	d
WHERE_DISTINCT_UNORDERED	sqlite3.c	15171;"	d	file:
WHERE_DISTINCT_UNORDERED	src/sqliteInt.h	2572;"	d
WHERE_DISTINCT_UNORDERED	tsrc/sqliteInt.h	2572;"	d
WHERE_DUPLICATES_OK	sqlite3.c	15152;"	d	file:
WHERE_DUPLICATES_OK	src/sqliteInt.h	2553;"	d
WHERE_DUPLICATES_OK	tsrc/sqliteInt.h	2553;"	d
WHERE_GROUPBY	sqlite3.c	15155;"	d	file:
WHERE_GROUPBY	src/sqliteInt.h	2556;"	d
WHERE_GROUPBY	tsrc/sqliteInt.h	2556;"	d
WHERE_IDX_ONLY	sqlite3.c	123502;"	d	file:
WHERE_IDX_ONLY	src/whereInt.h	538;"	d
WHERE_IDX_ONLY	tsrc/whereInt.h	538;"	d
WHERE_INDEXED	sqlite3.c	123504;"	d	file:
WHERE_INDEXED	src/whereInt.h	540;"	d
WHERE_INDEXED	tsrc/whereInt.h	540;"	d
WHERE_IN_ABLE	sqlite3.c	123506;"	d	file:
WHERE_IN_ABLE	src/whereInt.h	542;"	d
WHERE_IN_ABLE	tsrc/whereInt.h	542;"	d
WHERE_IPK	sqlite3.c	123503;"	d	file:
WHERE_IPK	src/whereInt.h	539;"	d
WHERE_IPK	tsrc/whereInt.h	539;"	d
WHERE_LOOP_XFER_SZ	sqlite3.c	123103;"	d	file:
WHERE_LOOP_XFER_SZ	src/whereInt.h	139;"	d
WHERE_LOOP_XFER_SZ	tsrc/whereInt.h	139;"	d
WHERE_MULTI_OR	sqlite3.c	123508;"	d	file:
WHERE_MULTI_OR	src/whereInt.h	544;"	d
WHERE_MULTI_OR	tsrc/whereInt.h	544;"	d
WHERE_ONEPASS_DESIRED	sqlite3.c	15150;"	d	file:
WHERE_ONEPASS_DESIRED	src/sqliteInt.h	2551;"	d
WHERE_ONEPASS_DESIRED	tsrc/sqliteInt.h	2551;"	d
WHERE_ONEPASS_MULTIROW	sqlite3.c	15151;"	d	file:
WHERE_ONEPASS_MULTIROW	src/sqliteInt.h	2552;"	d
WHERE_ONEPASS_MULTIROW	tsrc/sqliteInt.h	2552;"	d
WHERE_ONEROW	sqlite3.c	123507;"	d	file:
WHERE_ONEROW	src/whereInt.h	543;"	d
WHERE_ONEROW	tsrc/whereInt.h	543;"	d
WHERE_ORDERBY_LIMIT	sqlite3.c	15160;"	d	file:
WHERE_ORDERBY_LIMIT	src/sqliteInt.h	2561;"	d
WHERE_ORDERBY_LIMIT	tsrc/sqliteInt.h	2561;"	d
WHERE_ORDERBY_MAX	sqlite3.c	15149;"	d	file:
WHERE_ORDERBY_MAX	src/sqliteInt.h	2550;"	d
WHERE_ORDERBY_MAX	tsrc/sqliteInt.h	2550;"	d
WHERE_ORDERBY_MIN	sqlite3.c	15148;"	d	file:
WHERE_ORDERBY_MIN	src/sqliteInt.h	2549;"	d
WHERE_ORDERBY_MIN	tsrc/sqliteInt.h	2549;"	d
WHERE_ORDERBY_NORMAL	sqlite3.c	15147;"	d	file:
WHERE_ORDERBY_NORMAL	src/sqliteInt.h	2548;"	d
WHERE_ORDERBY_NORMAL	tsrc/sqliteInt.h	2548;"	d
WHERE_OR_SUBCLAUSE	sqlite3.c	15153;"	d	file:
WHERE_OR_SUBCLAUSE	src/sqliteInt.h	2554;"	d
WHERE_OR_SUBCLAUSE	tsrc/sqliteInt.h	2554;"	d
WHERE_PARTIALIDX	sqlite3.c	123512;"	d	file:
WHERE_PARTIALIDX	src/whereInt.h	548;"	d
WHERE_PARTIALIDX	tsrc/whereInt.h	548;"	d
WHERE_SEEK_TABLE	sqlite3.c	15159;"	d	file:
WHERE_SEEK_TABLE	src/sqliteInt.h	2560;"	d
WHERE_SEEK_TABLE	tsrc/sqliteInt.h	2560;"	d
WHERE_SKIPSCAN	sqlite3.c	123510;"	d	file:
WHERE_SKIPSCAN	src/whereInt.h	546;"	d
WHERE_SKIPSCAN	tsrc/whereInt.h	546;"	d
WHERE_SORTBYGROUP	sqlite3.c	15158;"	d	file:
WHERE_SORTBYGROUP	src/sqliteInt.h	2559;"	d
WHERE_SORTBYGROUP	tsrc/sqliteInt.h	2559;"	d
WHERE_TOP_LIMIT	sqlite3.c	123499;"	d	file:
WHERE_TOP_LIMIT	src/whereInt.h	535;"	d
WHERE_TOP_LIMIT	tsrc/whereInt.h	535;"	d
WHERE_UNQ_WANTED	sqlite3.c	123511;"	d	file:
WHERE_UNQ_WANTED	src/whereInt.h	547;"	d
WHERE_UNQ_WANTED	tsrc/whereInt.h	547;"	d
WHERE_USE_LIMIT	sqlite3.c	15163;"	d	file:
WHERE_USE_LIMIT	src/sqliteInt.h	2564;"	d
WHERE_USE_LIMIT	tsrc/sqliteInt.h	2564;"	d
WHERE_VIRTUALTABLE	sqlite3.c	123505;"	d	file:
WHERE_VIRTUALTABLE	src/whereInt.h	541;"	d
WHERE_VIRTUALTABLE	tsrc/whereInt.h	541;"	d
WHERE_WANT_DISTINCT	sqlite3.c	15157;"	d	file:
WHERE_WANT_DISTINCT	src/sqliteInt.h	2558;"	d
WHERE_WANT_DISTINCT	tsrc/sqliteInt.h	2558;"	d
WIN32_LEAN_AND_MEAN	mptest/mptest.c	39;"	d	file:
WIN32_LEAN_AND_MEAN	src/tclsqlite.c	65;"	d	file:
WIN32_LEAN_AND_MEAN	src/test_windirent.h	22;"	d
WIN32_LEAN_AND_MEAN	tsrc/tclsqlite.c	65;"	d	file:
WINCE_DELETION_ATTEMPTS	sqlite3.c	39740;"	d	file:
WINCE_DELETION_ATTEMPTS	src/os_win.c	2624;"	d	file:
WINCE_DELETION_ATTEMPTS	tsrc/os_win.c	2624;"	d	file:
WINFILE_PERSIST_WAL	sqlite3.c	37424;"	d	file:
WINFILE_PERSIST_WAL	src/os_win.c	308;"	d	file:
WINFILE_PERSIST_WAL	tsrc/os_win.c	308;"	d	file:
WINFILE_PSOW	sqlite3.c	37425;"	d	file:
WINFILE_PSOW	src/os_win.c	309;"	d	file:
WINFILE_PSOW	tsrc/os_win.c	309;"	d	file:
WINFILE_RDONLY	sqlite3.c	37423;"	d	file:
WINFILE_RDONLY	src/os_win.c	307;"	d	file:
WINFILE_RDONLY	tsrc/os_win.c	307;"	d	file:
WINMEM_MAGIC1	sqlite3.c	37527;"	d	file:
WINMEM_MAGIC1	src/os_win.c	411;"	d	file:
WINMEM_MAGIC1	tsrc/os_win.c	411;"	d	file:
WINMEM_MAGIC2	sqlite3.c	37528;"	d	file:
WINMEM_MAGIC2	src/os_win.c	412;"	d	file:
WINMEM_MAGIC2	tsrc/os_win.c	412;"	d	file:
WINSHM_RDLCK	sqlite3.c	40795;"	d	file:
WINSHM_RDLCK	src/os_win.c	3679;"	d	file:
WINSHM_RDLCK	tsrc/os_win.c	3679;"	d	file:
WINSHM_UNLCK	sqlite3.c	40794;"	d	file:
WINSHM_UNLCK	src/os_win.c	3678;"	d	file:
WINSHM_UNLCK	tsrc/os_win.c	3678;"	d	file:
WINSHM_WRLCK	sqlite3.c	40796;"	d	file:
WINSHM_WRLCK	src/os_win.c	3680;"	d	file:
WINSHM_WRLCK	tsrc/os_win.c	3680;"	d	file:
WIN_SHM_BASE	sqlite3.c	40788;"	d	file:
WIN_SHM_BASE	src/os_win.c	3672;"	d	file:
WIN_SHM_BASE	tsrc/os_win.c	3672;"	d	file:
WIN_SHM_DMS	sqlite3.c	40789;"	d	file:
WIN_SHM_DMS	src/os_win.c	3673;"	d	file:
WIN_SHM_DMS	tsrc/os_win.c	3673;"	d	file:
WO_ALL	sqlite3.c	123486;"	d	file:
WO_ALL	src/whereInt.h	522;"	d
WO_ALL	tsrc/whereInt.h	522;"	d
WO_AND	sqlite3.c	123482;"	d	file:
WO_AND	src/whereInt.h	518;"	d
WO_AND	tsrc/whereInt.h	518;"	d
WO_EQ	sqlite3.c	123473;"	d	file:
WO_EQ	src/whereInt.h	509;"	d
WO_EQ	tsrc/whereInt.h	509;"	d
WO_EQUIV	sqlite3.c	123483;"	d	file:
WO_EQUIV	src/whereInt.h	519;"	d
WO_EQUIV	tsrc/whereInt.h	519;"	d
WO_GE	sqlite3.c	123477;"	d	file:
WO_GE	src/whereInt.h	513;"	d
WO_GE	tsrc/whereInt.h	513;"	d
WO_GT	sqlite3.c	123476;"	d	file:
WO_GT	src/whereInt.h	512;"	d
WO_GT	tsrc/whereInt.h	512;"	d
WO_IN	sqlite3.c	123472;"	d	file:
WO_IN	src/whereInt.h	508;"	d
WO_IN	tsrc/whereInt.h	508;"	d
WO_IS	sqlite3.c	123479;"	d	file:
WO_IS	src/whereInt.h	515;"	d
WO_IS	tsrc/whereInt.h	515;"	d
WO_ISNULL	sqlite3.c	123480;"	d	file:
WO_ISNULL	src/whereInt.h	516;"	d
WO_ISNULL	tsrc/whereInt.h	516;"	d
WO_LE	sqlite3.c	123475;"	d	file:
WO_LE	src/whereInt.h	511;"	d
WO_LE	tsrc/whereInt.h	511;"	d
WO_LT	sqlite3.c	123474;"	d	file:
WO_LT	src/whereInt.h	510;"	d
WO_LT	tsrc/whereInt.h	510;"	d
WO_MATCH	sqlite3.c	123478;"	d	file:
WO_MATCH	src/whereInt.h	514;"	d
WO_MATCH	tsrc/whereInt.h	514;"	d
WO_NOOP	sqlite3.c	123484;"	d	file:
WO_NOOP	src/whereInt.h	520;"	d
WO_NOOP	tsrc/whereInt.h	520;"	d
WO_OR	sqlite3.c	123481;"	d	file:
WO_OR	src/whereInt.h	517;"	d
WO_OR	tsrc/whereInt.h	517;"	d
WO_SINGLE	sqlite3.c	123487;"	d	file:
WO_SINGLE	src/whereInt.h	523;"	d
WO_SINGLE	tsrc/whereInt.h	523;"	d
WRC_Abort	sqlite3.c	15885;"	d	file:
WRC_Abort	src/sqliteInt.h	3286;"	d
WRC_Abort	tsrc/sqliteInt.h	3286;"	d
WRC_Continue	sqlite3.c	15883;"	d	file:
WRC_Continue	src/sqliteInt.h	3284;"	d
WRC_Continue	tsrc/sqliteInt.h	3284;"	d
WRC_Prune	sqlite3.c	15884;"	d	file:
WRC_Prune	src/sqliteInt.h	3285;"	d
WRC_Prune	tsrc/sqliteInt.h	3285;"	d
WRITE_LOCK	sqlite3.c	57469;"	d	file:
WRITE_LOCK	src/btreeInt.h	327;"	d
WRITE_LOCK	tsrc/btreeInt.h	327;"	d
WRITE_UTF16BE	sqlite3.c	26766;"	d	file:
WRITE_UTF16BE	src/utf.c	96;"	d	file:
WRITE_UTF16BE	tsrc/utf.c	96;"	d	file:
WRITE_UTF16LE	sqlite3.c	26754;"	d	file:
WRITE_UTF16LE	src/utf.c	84;"	d	file:
WRITE_UTF16LE	tsrc/utf.c	84;"	d	file:
WRITE_UTF8	ext/fts3/fts3_unicode.c	58;"	d	file:
WRITE_UTF8	ext/fts5/fts5_tokenize.c	210;"	d	file:
WRITE_UTF8	fts5.c	18354;"	d	file:
WRITE_UTF8	sqlite3.c	159257;"	d	file:
WRITE_UTF8	sqlite3.c	195483;"	d	file:
WRITE_UTF8	sqlite3.c	26734;"	d	file:
WRITE_UTF8	src/utf.c	64;"	d	file:
WRITE_UTF8	tsrc/fts3_unicode.c	58;"	d	file:
WRITE_UTF8	tsrc/fts5.c	18354;"	d	file:
WRITE_UTF8	tsrc/utf.c	64;"	d	file:
WSEOL_OK	tool/checkSpacing.c	15;"	d	file:
W_OK	src/test_demovfs.c	489;"	d	file:
Wal	sqlite3.c	/^struct Wal {$/;"	s	file:
Wal	sqlite3.c	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal	file:
Wal	src/wal.c	/^struct Wal {$/;"	s	file:
Wal	src/wal.h	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal
Wal	tsrc/wal.c	/^struct Wal {$/;"	s	file:
Wal	tsrc/wal.h	/^typedef struct Wal Wal;$/;"	t	typeref:struct:Wal
WalCkptInfo	sqlite3.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	sqlite3.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalCkptInfo	src/wal.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	src/wal.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalCkptInfo	tsrc/wal.c	/^struct WalCkptInfo {$/;"	s	file:
WalCkptInfo	tsrc/wal.c	/^typedef struct WalCkptInfo WalCkptInfo;$/;"	t	typeref:struct:WalCkptInfo	file:
WalIndexHdr	sqlite3.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	sqlite3.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIndexHdr	src/wal.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	src/wal.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIndexHdr	tsrc/wal.c	/^struct WalIndexHdr {$/;"	s	file:
WalIndexHdr	tsrc/wal.c	/^typedef struct WalIndexHdr WalIndexHdr;$/;"	t	typeref:struct:WalIndexHdr	file:
WalIterator	sqlite3.c	/^struct WalIterator {$/;"	s	file:
WalIterator	sqlite3.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalIterator	src/wal.c	/^struct WalIterator {$/;"	s	file:
WalIterator	src/wal.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalIterator	tsrc/wal.c	/^struct WalIterator {$/;"	s	file:
WalIterator	tsrc/wal.c	/^typedef struct WalIterator WalIterator;$/;"	t	typeref:struct:WalIterator	file:
WalSegment	sqlite3.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
WalSegment	src/wal.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
WalSegment	tsrc/wal.c	/^  struct WalSegment {$/;"	s	struct:WalIterator	file:
WalWriter	sqlite3.c	/^typedef struct WalWriter {$/;"	s	file:
WalWriter	sqlite3.c	/^} WalWriter;$/;"	t	typeref:struct:WalWriter	file:
WalWriter	src/wal.c	/^typedef struct WalWriter {$/;"	s	file:
WalWriter	src/wal.c	/^} WalWriter;$/;"	t	typeref:struct:WalWriter	file:
WalWriter	tsrc/wal.c	/^typedef struct WalWriter {$/;"	s	file:
WalWriter	tsrc/wal.c	/^} WalWriter;$/;"	t	typeref:struct:WalWriter	file:
Walker	sqlite3.c	/^struct Walker {$/;"	s	file:
Walker	sqlite3.c	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker	file:
Walker	src/sqliteInt.h	/^struct Walker {$/;"	s
Walker	src/sqliteInt.h	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker
Walker	tsrc/sqliteInt.h	/^struct Walker {$/;"	s
Walker	tsrc/sqliteInt.h	/^typedef struct Walker Walker;$/;"	t	typeref:struct:Walker
WhereAndInfo	sqlite3.c	/^struct WhereAndInfo {$/;"	s	file:
WhereAndInfo	sqlite3.c	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo	file:
WhereAndInfo	src/whereInt.h	/^struct WhereAndInfo {$/;"	s
WhereAndInfo	src/whereInt.h	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo
WhereAndInfo	tsrc/whereInt.h	/^struct WhereAndInfo {$/;"	s
WhereAndInfo	tsrc/whereInt.h	/^typedef struct WhereAndInfo WhereAndInfo;$/;"	t	typeref:struct:WhereAndInfo
WhereClause	sqlite3.c	/^struct WhereClause {$/;"	s	file:
WhereClause	sqlite3.c	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause	file:
WhereClause	src/whereInt.h	/^struct WhereClause {$/;"	s
WhereClause	src/whereInt.h	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause
WhereClause	tsrc/whereInt.h	/^struct WhereClause {$/;"	s
WhereClause	tsrc/whereInt.h	/^typedef struct WhereClause WhereClause;$/;"	t	typeref:struct:WhereClause
WhereInfo	sqlite3.c	/^struct WhereInfo {$/;"	s	file:
WhereInfo	sqlite3.c	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo	file:
WhereInfo	src/sqliteInt.h	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo
WhereInfo	src/whereInt.h	/^struct WhereInfo {$/;"	s
WhereInfo	tsrc/sqliteInt.h	/^typedef struct WhereInfo WhereInfo;$/;"	t	typeref:struct:WhereInfo
WhereInfo	tsrc/whereInt.h	/^struct WhereInfo {$/;"	s
WhereLevel	sqlite3.c	/^struct WhereLevel {$/;"	s	file:
WhereLevel	sqlite3.c	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel	file:
WhereLevel	src/whereInt.h	/^struct WhereLevel {$/;"	s
WhereLevel	src/whereInt.h	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel
WhereLevel	tsrc/whereInt.h	/^struct WhereLevel {$/;"	s
WhereLevel	tsrc/whereInt.h	/^typedef struct WhereLevel WhereLevel;$/;"	t	typeref:struct:WhereLevel
WhereLoop	sqlite3.c	/^struct WhereLoop {$/;"	s	file:
WhereLoop	sqlite3.c	/^typedef struct WhereLoop WhereLoop;$/;"	t	typeref:struct:WhereLoop	file:
WhereLoop	src/whereInt.h	/^struct WhereLoop {$/;"	s
WhereLoop	src/whereInt.h	/^typedef struct WhereLoop WhereLoop;$/;"	t	typeref:struct:WhereLoop
WhereLoop	tsrc/whereInt.h	/^struct WhereLoop {$/;"	s
WhereLoop	tsrc/whereInt.h	/^typedef struct WhereLoop WhereLoop;$/;"	t	typeref:struct:WhereLoop
WhereLoopBuilder	sqlite3.c	/^struct WhereLoopBuilder {$/;"	s	file:
WhereLoopBuilder	sqlite3.c	/^typedef struct WhereLoopBuilder WhereLoopBuilder;$/;"	t	typeref:struct:WhereLoopBuilder	file:
WhereLoopBuilder	src/whereInt.h	/^struct WhereLoopBuilder {$/;"	s
WhereLoopBuilder	src/whereInt.h	/^typedef struct WhereLoopBuilder WhereLoopBuilder;$/;"	t	typeref:struct:WhereLoopBuilder
WhereLoopBuilder	tsrc/whereInt.h	/^struct WhereLoopBuilder {$/;"	s
WhereLoopBuilder	tsrc/whereInt.h	/^typedef struct WhereLoopBuilder WhereLoopBuilder;$/;"	t	typeref:struct:WhereLoopBuilder
WhereMaskSet	sqlite3.c	/^struct WhereMaskSet {$/;"	s	file:
WhereMaskSet	sqlite3.c	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet	file:
WhereMaskSet	src/whereInt.h	/^struct WhereMaskSet {$/;"	s
WhereMaskSet	src/whereInt.h	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet
WhereMaskSet	tsrc/whereInt.h	/^struct WhereMaskSet {$/;"	s
WhereMaskSet	tsrc/whereInt.h	/^typedef struct WhereMaskSet WhereMaskSet;$/;"	t	typeref:struct:WhereMaskSet
WhereOrCost	sqlite3.c	/^struct WhereOrCost {$/;"	s	file:
WhereOrCost	sqlite3.c	/^typedef struct WhereOrCost WhereOrCost;$/;"	t	typeref:struct:WhereOrCost	file:
WhereOrCost	src/whereInt.h	/^struct WhereOrCost {$/;"	s
WhereOrCost	src/whereInt.h	/^typedef struct WhereOrCost WhereOrCost;$/;"	t	typeref:struct:WhereOrCost
WhereOrCost	tsrc/whereInt.h	/^struct WhereOrCost {$/;"	s
WhereOrCost	tsrc/whereInt.h	/^typedef struct WhereOrCost WhereOrCost;$/;"	t	typeref:struct:WhereOrCost
WhereOrInfo	sqlite3.c	/^struct WhereOrInfo {$/;"	s	file:
WhereOrInfo	sqlite3.c	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo	file:
WhereOrInfo	src/whereInt.h	/^struct WhereOrInfo {$/;"	s
WhereOrInfo	src/whereInt.h	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo
WhereOrInfo	tsrc/whereInt.h	/^struct WhereOrInfo {$/;"	s
WhereOrInfo	tsrc/whereInt.h	/^typedef struct WhereOrInfo WhereOrInfo;$/;"	t	typeref:struct:WhereOrInfo
WhereOrSet	sqlite3.c	/^struct WhereOrSet {$/;"	s	file:
WhereOrSet	sqlite3.c	/^typedef struct WhereOrSet WhereOrSet;$/;"	t	typeref:struct:WhereOrSet	file:
WhereOrSet	src/whereInt.h	/^struct WhereOrSet {$/;"	s
WhereOrSet	src/whereInt.h	/^typedef struct WhereOrSet WhereOrSet;$/;"	t	typeref:struct:WhereOrSet
WhereOrSet	tsrc/whereInt.h	/^struct WhereOrSet {$/;"	s
WhereOrSet	tsrc/whereInt.h	/^typedef struct WhereOrSet WhereOrSet;$/;"	t	typeref:struct:WhereOrSet
WherePath	sqlite3.c	/^struct WherePath {$/;"	s	file:
WherePath	sqlite3.c	/^typedef struct WherePath WherePath;$/;"	t	typeref:struct:WherePath	file:
WherePath	src/whereInt.h	/^struct WherePath {$/;"	s
WherePath	src/whereInt.h	/^typedef struct WherePath WherePath;$/;"	t	typeref:struct:WherePath
WherePath	tsrc/whereInt.h	/^struct WherePath {$/;"	s
WherePath	tsrc/whereInt.h	/^typedef struct WherePath WherePath;$/;"	t	typeref:struct:WherePath
WhereScan	sqlite3.c	/^struct WhereScan {$/;"	s	file:
WhereScan	sqlite3.c	/^typedef struct WhereScan WhereScan;$/;"	t	typeref:struct:WhereScan	file:
WhereScan	src/whereInt.h	/^struct WhereScan {$/;"	s
WhereScan	src/whereInt.h	/^typedef struct WhereScan WhereScan;$/;"	t	typeref:struct:WhereScan
WhereScan	tsrc/whereInt.h	/^struct WhereScan {$/;"	s
WhereScan	tsrc/whereInt.h	/^typedef struct WhereScan WhereScan;$/;"	t	typeref:struct:WhereScan
WhereTerm	sqlite3.c	/^struct WhereTerm {$/;"	s	file:
WhereTerm	sqlite3.c	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm	file:
WhereTerm	src/whereInt.h	/^struct WhereTerm {$/;"	s
WhereTerm	src/whereInt.h	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm
WhereTerm	tsrc/whereInt.h	/^struct WhereTerm {$/;"	s
WhereTerm	tsrc/whereInt.h	/^typedef struct WhereTerm WhereTerm;$/;"	t	typeref:struct:WhereTerm
With	sqlite3.c	/^struct With {$/;"	s	file:
With	sqlite3.c	/^typedef struct With With;$/;"	t	typeref:struct:With	file:
With	src/sqliteInt.h	/^struct With {$/;"	s
With	src/sqliteInt.h	/^typedef struct With With;$/;"	t	typeref:struct:With
With	tsrc/sqliteInt.h	/^struct With {$/;"	s
With	tsrc/sqliteInt.h	/^typedef struct With With;$/;"	t	typeref:struct:With
WorkerInfo	test/threadtest4.c	/^struct WorkerInfo {$/;"	s	file:
WorkerInfo	test/threadtest4.c	/^typedef struct WorkerInfo WorkerInfo;$/;"	t	typeref:struct:WorkerInfo	file:
Wrapped	src/test_init.c	/^static struct Wrapped {$/;"	s	file:
WriteBuffer	src/test6.c	/^struct WriteBuffer {$/;"	s	file:
WriteBuffer	src/test6.c	/^typedef struct WriteBuffer WriteBuffer;$/;"	t	typeref:struct:WriteBuffer	file:
WrongNumArgs	tool/GetFile.cs	/^        WrongNumArgs = 2,$/;"	e	enum:GetFile.ExitCode	file:
WrongNumArgs	tool/Replace.cs	/^        WrongNumArgs = 2,$/;"	e	enum:Replace.ExitCode	file:
XN_EXPR	sqlite3.c	14716;"	d	file:
XN_EXPR	src/sqliteInt.h	2117;"	d
XN_EXPR	tsrc/sqliteInt.h	2117;"	d
XN_ROWID	sqlite3.c	14715;"	d	file:
XN_ROWID	src/sqliteInt.h	2116;"	d
XN_ROWID	tsrc/sqliteInt.h	2116;"	d
Y	sqlite3.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
Y	src/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
Y	tsrc/date.c	/^  int Y, M, D;       \/* Year, month, and day *\/$/;"	m	struct:DateTime	file:
YYACTIONTYPE	fts5parse.c	116;"	d	file:
YYACTIONTYPE	parse.c	288;"	d	file:
YYACTIONTYPE	sqlite3.c	131804;"	d	file:
YYACTIONTYPE	tsrc/parse.c	288;"	d	file:
YYCODETYPE	fts5parse.c	114;"	d	file:
YYCODETYPE	parse.c	286;"	d	file:
YYCODETYPE	sqlite3.c	131802;"	d	file:
YYCODETYPE	tsrc/parse.c	286;"	d	file:
YYFALLBACK	parse.c	315;"	d	file:
YYFALLBACK	sqlite3.c	131831;"	d	file:
YYFALLBACK	tsrc/parse.c	315;"	d	file:
YYMALLOCARGTYPE	fts5parse.c	438;"	d	file:
YYMALLOCARGTYPE	fts5parse.c	53;"	d	file:
YYMALLOCARGTYPE	lempar.c	312;"	d	file:
YYMALLOCARGTYPE	parse.c	1476;"	d	file:
YYMALLOCARGTYPE	parse.c	52;"	d	file:
YYMALLOCARGTYPE	sqlite3.c	131576;"	d	file:
YYMALLOCARGTYPE	sqlite3.c	132992;"	d	file:
YYMALLOCARGTYPE	tool/lempar.c	312;"	d	file:
YYMALLOCARGTYPE	tsrc/parse.c	1476;"	d	file:
YYMALLOCARGTYPE	tsrc/parse.c	52;"	d	file:
YYMINORTYPE	fts5parse.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon69	file:
YYMINORTYPE	parse.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon40	file:
YYMINORTYPE	sqlite3.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon102	file:
YYMINORTYPE	tsrc/parse.c	/^} YYMINORTYPE;$/;"	t	typeref:union:__anon17	file:
YYNOCODE	fts5parse.c	115;"	d	file:
YYNOCODE	parse.c	287;"	d	file:
YYNOCODE	sqlite3.c	131803;"	d	file:
YYNOCODE	tsrc/parse.c	287;"	d	file:
YYNOERRORRECOVERY	fts5parse.c	36;"	d	file:
YYNOERRORRECOVERY	parse.c	35;"	d	file:
YYNOERRORRECOVERY	sqlite3.c	131559;"	d	file:
YYNOERRORRECOVERY	tsrc/parse.c	35;"	d	file:
YYNRULE	fts5parse.c	135;"	d	file:
YYNRULE	parse.c	317;"	d	file:
YYNRULE	sqlite3.c	131833;"	d	file:
YYNRULE	tsrc/parse.c	317;"	d	file:
YYNSTATE	fts5parse.c	134;"	d	file:
YYNSTATE	parse.c	316;"	d	file:
YYNSTATE	sqlite3.c	131832;"	d	file:
YYNSTATE	tsrc/parse.c	316;"	d	file:
YYPARSEFREENEVERNULL	parse.c	46;"	d	file:
YYPARSEFREENEVERNULL	sqlite3.c	131570;"	d	file:
YYPARSEFREENEVERNULL	tsrc/parse.c	46;"	d	file:
YYPARSEFREENOTNULL	fts5parse.c	47;"	d	file:
YYSTACKDEPTH	fts5parse.c	128;"	d	file:
YYSTACKDEPTH	parse.c	309;"	d	file:
YYSTACKDEPTH	sqlite3.c	131825;"	d	file:
YYSTACKDEPTH	tsrc/parse.c	309;"	d	file:
YYWILDCARD	parse.c	289;"	d	file:
YYWILDCARD	sqlite3.c	131805;"	d	file:
YYWILDCARD	tsrc/parse.c	289;"	d	file:
YY_ACCEPT_ACTION	fts5parse.c	142;"	d	file:
YY_ACCEPT_ACTION	parse.c	324;"	d	file:
YY_ACCEPT_ACTION	sqlite3.c	131840;"	d	file:
YY_ACCEPT_ACTION	tsrc/parse.c	324;"	d	file:
YY_ACTTAB_COUNT	fts5parse.c	211;"	d	file:
YY_ACTTAB_COUNT	parse.c	393;"	d	file:
YY_ACTTAB_COUNT	sqlite3.c	131909;"	d	file:
YY_ACTTAB_COUNT	tsrc/parse.c	393;"	d	file:
YY_ERROR_ACTION	fts5parse.c	141;"	d	file:
YY_ERROR_ACTION	parse.c	323;"	d	file:
YY_ERROR_ACTION	sqlite3.c	131839;"	d	file:
YY_ERROR_ACTION	tsrc/parse.c	323;"	d	file:
YY_MAX_REDUCE	fts5parse.c	140;"	d	file:
YY_MAX_REDUCE	parse.c	322;"	d	file:
YY_MAX_REDUCE	sqlite3.c	131838;"	d	file:
YY_MAX_REDUCE	tsrc/parse.c	322;"	d	file:
YY_MAX_SHIFT	fts5parse.c	136;"	d	file:
YY_MAX_SHIFT	parse.c	318;"	d	file:
YY_MAX_SHIFT	sqlite3.c	131834;"	d	file:
YY_MAX_SHIFT	tsrc/parse.c	318;"	d	file:
YY_MAX_SHIFTREDUCE	fts5parse.c	138;"	d	file:
YY_MAX_SHIFTREDUCE	parse.c	320;"	d	file:
YY_MAX_SHIFTREDUCE	sqlite3.c	131836;"	d	file:
YY_MAX_SHIFTREDUCE	tsrc/parse.c	320;"	d	file:
YY_MIN_REDUCE	fts5parse.c	139;"	d	file:
YY_MIN_REDUCE	parse.c	321;"	d	file:
YY_MIN_REDUCE	sqlite3.c	131837;"	d	file:
YY_MIN_REDUCE	tsrc/parse.c	321;"	d	file:
YY_MIN_SHIFTREDUCE	fts5parse.c	137;"	d	file:
YY_MIN_SHIFTREDUCE	parse.c	319;"	d	file:
YY_MIN_SHIFTREDUCE	sqlite3.c	131835;"	d	file:
YY_MIN_SHIFTREDUCE	tsrc/parse.c	319;"	d	file:
YY_NO_ACTION	fts5parse.c	143;"	d	file:
YY_NO_ACTION	parse.c	325;"	d	file:
YY_NO_ACTION	sqlite3.c	131841;"	d	file:
YY_NO_ACTION	tsrc/parse.c	325;"	d	file:
YY_REDUCE_COUNT	fts5parse.c	242;"	d	file:
YY_REDUCE_COUNT	parse.c	752;"	d	file:
YY_REDUCE_COUNT	sqlite3.c	132268;"	d	file:
YY_REDUCE_COUNT	tsrc/parse.c	752;"	d	file:
YY_REDUCE_MAX	fts5parse.c	244;"	d	file:
YY_REDUCE_MAX	parse.c	754;"	d	file:
YY_REDUCE_MAX	sqlite3.c	132270;"	d	file:
YY_REDUCE_MAX	tsrc/parse.c	754;"	d	file:
YY_REDUCE_MIN	fts5parse.c	243;"	d	file:
YY_REDUCE_MIN	parse.c	753;"	d	file:
YY_REDUCE_MIN	sqlite3.c	132269;"	d	file:
YY_REDUCE_MIN	tsrc/parse.c	753;"	d	file:
YY_REDUCE_USE_DFLT	fts5parse.c	241;"	d	file:
YY_REDUCE_USE_DFLT	parse.c	751;"	d	file:
YY_REDUCE_USE_DFLT	sqlite3.c	132267;"	d	file:
YY_REDUCE_USE_DFLT	tsrc/parse.c	751;"	d	file:
YY_SHIFT_COUNT	fts5parse.c	233;"	d	file:
YY_SHIFT_COUNT	parse.c	701;"	d	file:
YY_SHIFT_COUNT	sqlite3.c	132217;"	d	file:
YY_SHIFT_COUNT	tsrc/parse.c	701;"	d	file:
YY_SHIFT_MAX	fts5parse.c	235;"	d	file:
YY_SHIFT_MAX	parse.c	703;"	d	file:
YY_SHIFT_MAX	sqlite3.c	132219;"	d	file:
YY_SHIFT_MAX	tsrc/parse.c	703;"	d	file:
YY_SHIFT_MIN	fts5parse.c	234;"	d	file:
YY_SHIFT_MIN	parse.c	702;"	d	file:
YY_SHIFT_MIN	sqlite3.c	132218;"	d	file:
YY_SHIFT_MIN	tsrc/parse.c	702;"	d	file:
YY_SHIFT_USE_DFLT	fts5parse.c	232;"	d	file:
YY_SHIFT_USE_DFLT	parse.c	700;"	d	file:
YY_SHIFT_USE_DFLT	sqlite3.c	132216;"	d	file:
YY_SHIFT_USE_DFLT	tsrc/parse.c	700;"	d	file:
_BSD_SOURCE	sqlite3.c	220;"	d	file:
_BSD_SOURCE	src/sqliteInt.h	119;"	d
_BSD_SOURCE	tsrc/sqliteInt.h	119;"	d
_CRT_RAND_S	sqlite3.c	83;"	d	file:
_CRT_RAND_S	src/sqliteInt.h	58;"	d
_CRT_RAND_S	tsrc/sqliteInt.h	58;"	d
_CRT_SECURE_NO_DEPRECATE	autoconf/tea/win/nmakehlp.c	15;"	d	file:
_CRT_SECURE_NO_WARNINGS	shell.c	17;"	d	file:
_CRT_SECURE_NO_WARNINGS	src/shell.c	17;"	d	file:
_CRT_SECURE_NO_WARNINGS	tsrc/shell.c	17;"	d	file:
_FILE_OFFSET_BITS	shell.c	40;"	d	file:
_FILE_OFFSET_BITS	sqlite3.c	202;"	d	file:
_FILE_OFFSET_BITS	src/shell.c	40;"	d	file:
_FILE_OFFSET_BITS	src/sqliteInt.h	101;"	d
_FILE_OFFSET_BITS	tsrc/shell.c	40;"	d	file:
_FILE_OFFSET_BITS	tsrc/sqliteInt.h	101;"	d
_FTS1_HASH_H_	ext/fts1/fts1_hash.h	18;"	d
_FTS1_HASH_H_	tsrc/fts1_hash.h	18;"	d
_FTS1_TOKENIZER_H_	ext/fts1/fts1_tokenizer.h	21;"	d
_FTS1_TOKENIZER_H_	tsrc/fts1_tokenizer.h	21;"	d
_FTS2_HASH_H_	ext/fts2/fts2_hash.h	18;"	d
_FTS2_HASH_H_	tsrc/fts2_hash.h	18;"	d
_FTS2_TOKENIZER_H_	ext/fts2/fts2_tokenizer.h	21;"	d
_FTS2_TOKENIZER_H_	tsrc/fts2_tokenizer.h	21;"	d
_FTS3_HASH_H_	ext/fts3/fts3_hash.h	18;"	d
_FTS3_HASH_H_	sqlite3.c	141373;"	d	file:
_FTS3_HASH_H_	tsrc/fts3_hash.h	18;"	d
_FTS3_TOKENIZER_H_	ext/fts3/fts3_tokenizer.h	21;"	d
_FTS3_TOKENIZER_H_	sqlite3.c	141210;"	d	file:
_FTS3_TOKENIZER_H_	tsrc/fts3_tokenizer.h	21;"	d
_FTS5INT_H	ext/fts5/fts5Int.h	15;"	d
_FTS5INT_H	fts5.c	608;"	d	file:
_FTS5INT_H	sqlite3.c	177810;"	d	file:
_FTS5INT_H	tsrc/fts5.c	608;"	d	file:
_FTS5_H	ext/fts5/fts5.h	22;"	d
_FTS5_H	fts5.c	34;"	d	file:
_FTS5_H	fts5.h	22;"	d
_FTS5_H	sqlite3.c	10044;"	d	file:
_FTS5_H	sqlite3.c	177237;"	d	file:
_FTS5_H	sqlite3.h	9784;"	d
_FTS5_H	tsrc/fts5.c	34;"	d	file:
_FTS5_H	tsrc/fts5.h	22;"	d
_FTS5_H	tsrc/sqlite3.h	9784;"	d
_FTSINT_H	ext/fts3/fts3Int.h	15;"	d
_FTSINT_H	sqlite3.c	141158;"	d	file:
_FTSINT_H	tsrc/fts3Int.h	15;"	d
_GNU_SOURCE	sqlite3.c	216;"	d	file:
_GNU_SOURCE	src/sqliteInt.h	115;"	d
_GNU_SOURCE	tsrc/sqliteInt.h	115;"	d
_HASH_H_	ext/fts1/ft_hash.h	18;"	d
_LARGEFILE_SOURCE	shell.c	42;"	d	file:
_LARGEFILE_SOURCE	sqlite3.c	204;"	d	file:
_LARGEFILE_SOURCE	src/shell.c	42;"	d	file:
_LARGEFILE_SOURCE	src/sqliteInt.h	103;"	d
_LARGEFILE_SOURCE	tsrc/shell.c	42;"	d	file:
_LARGEFILE_SOURCE	tsrc/sqliteInt.h	103;"	d
_LARGE_FILE	shell.c	38;"	d	file:
_LARGE_FILE	sqlite3.c	200;"	d	file:
_LARGE_FILE	src/shell.c	38;"	d	file:
_LARGE_FILE	src/sqliteInt.h	99;"	d
_LARGE_FILE	tsrc/shell.c	38;"	d	file:
_LARGE_FILE	tsrc/sqliteInt.h	99;"	d
_OS_COMMON_H_	sqlite3.c	23181;"	d	file:
_OS_COMMON_H_	sqlite3.c	29432;"	d	file:
_OS_COMMON_H_	sqlite3.c	36961;"	d	file:
_OS_COMMON_H_	src/os_common.h	21;"	d
_OS_COMMON_H_	tsrc/os_common.h	21;"	d
_SQLITE3RBU_H	ext/rbu/sqlite3rbu.h	268;"	d
_SQLITE3RBU_H	sqlite3.c	164705;"	d	file:
_SQLITE3RBU_H	tsrc/sqlite3rbu.h	268;"	d
_SQLITE3RTREE_H_	ext/rtree/sqlite3rtree.h	15;"	d
_SQLITE3RTREE_H_	sqlite3.c	8639;"	d	file:
_SQLITE3RTREE_H_	sqlite3.h	8379;"	d
_SQLITE3RTREE_H_	tsrc/sqlite3.h	8379;"	d
_SQLITE_OS_H_	sqlite3.c	13330;"	d	file:
_SQLITE_OS_H_	src/os.h	21;"	d
_SQLITE_OS_H_	tsrc/os.h	21;"	d
_TOKENIZER_H_	ext/fts1/tokenizer.h	21;"	d
_USE_32BIT_TIME_T	sqlite3.c	252;"	d	file:
_USE_32BIT_TIME_T	src/sqliteInt.h	151;"	d
_USE_32BIT_TIME_T	tsrc/sqliteInt.h	151;"	d
_XOPEN_SOURCE	sqlite3.c	10995;"	d	file:
_XOPEN_SOURCE	src/sqliteInt.h	333;"	d
_XOPEN_SOURCE	tsrc/sqliteInt.h	333;"	d
__SQLITEASYNC_H_	ext/async/sqlite3async.h	3;"	d
__SQLITESESSION_H_	ext/session/sqlite3session.h	3;"	d
__SQLITESESSION_H_	sqlite3.c	8746;"	d	file:
__SQLITESESSION_H_	sqlite3.h	8486;"	d
__SQLITESESSION_H_	sqlite3session.h	3;"	d
__SQLITESESSION_H_	tsrc/sqlite3.h	8486;"	d
__SQLITESESSION_H_	tsrc/sqlite3session.h	3;"	d
__WIN32__	tool/lemon.c	26;"	d	file:
__declspec	ext/fts1/fts1.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/fts1/fulltext.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/fts2/fts2.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/fts3/fts3.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/fts5/fts5_main.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/icu/icu.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/amatch.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/carray.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/closure.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/compress.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/csv.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/eval.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/fileio.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/fuzzer.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/ieee754.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/json1.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/nextchar.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/percentile.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/regexp.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/rot13.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/series.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/showauth.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/spellfix.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/totype.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/vfsstat.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/vtshim.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/misc/wholenumber.c	/^__declspec(dllexport)$/;"	f
__declspec	ext/rtree/rtree.c	/^__declspec(dllexport)$/;"	f
__declspec	fts5.c	/^__declspec(dllexport)$/;"	f
__declspec	sqlite3.c	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
__declspec	sqlite3.c	/^__declspec(dllexport)$/;"	f
__declspec	src/test_loadext.c	/^__declspec(dllexport)$/;"	f
__declspec	src/test_schema.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/fts1.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/fts2.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/fts3.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/fts5.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/icu.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/json1.c	/^__declspec(dllexport)$/;"	f
__declspec	tsrc/rtree.c	/^__declspec(dllexport)$/;"	f
_all_whitespace	shell.c	/^static int _all_whitespace(const char *z){$/;"	f	file:
_all_whitespace	src/shell.c	/^static int _all_whitespace(const char *z){$/;"	f	file:
_all_whitespace	tsrc/shell.c	/^static int _all_whitespace(const char *z){$/;"	f	file:
_fts1ht	ext/fts1/fts1_hash.h	/^  struct _fts1ht {        \/* the hash table *\/$/;"	s	struct:fts1Hash
_fts1ht	tsrc/fts1_hash.h	/^  struct _fts1ht {        \/* the hash table *\/$/;"	s	struct:fts1Hash
_fts2ht	ext/fts2/fts2_hash.h	/^  struct _fts2ht {        \/* the hash table *\/$/;"	s	struct:fts2Hash
_fts2ht	tsrc/fts2_hash.h	/^  struct _fts2ht {        \/* the hash table *\/$/;"	s	struct:fts2Hash
_fts3ht	ext/fts3/fts3_hash.h	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash
_fts3ht	sqlite3.c	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash	file:
_fts3ht	tsrc/fts3_hash.h	/^  struct _fts3ht {        \/* the hash table *\/$/;"	s	struct:Fts3Hash
_ht	ext/fts1/ft_hash.h	/^  struct _ht {            \/* the hash table *\/$/;"	s	struct:Hash
_ht	sqlite3.c	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash	file:
_ht	src/hash.h	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash
_ht	tsrc/hash.h	/^  struct _ht {              \/* the hash table *\/$/;"	s	struct:Hash
_sqliteZone_	sqlite3.c	/^static malloc_zone_t* _sqliteZone_;$/;"	v	file:
_sqliteZone_	src/mem1.c	/^static malloc_zone_t* _sqliteZone_;$/;"	v	file:
_sqliteZone_	tsrc/mem1.c	/^static malloc_zone_t* _sqliteZone_;$/;"	v	file:
a	ext/fts3/fts3_write.c	/^  char *a;                        \/* Pointer to allocation *\/$/;"	m	struct:Blob	file:
a	ext/fts5/fts5.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	ext/fts5/fts5Int.h	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader
a	ext/fts5/fts5_expr.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	ext/misc/percentile.c	/^  double *a;           \/* Array of Y values *\/$/;"	m	struct:Percentile	file:
a	ext/misc/spellfix.c	/^  EditDist3From *a;        \/* Extra info about each char of the FROM string *\/$/;"	m	struct:EditDist3FromString	file:
a	ext/misc/spellfix.c	/^  EditDist3Lang *a;      \/* One for each distinct language ID *\/$/;"	m	struct:EditDist3Config	file:
a	ext/misc/spellfix.c	/^  EditDist3To *a;          \/* Extra info about each char of the TO string *\/$/;"	m	struct:EditDist3ToString	file:
a	ext/misc/spellfix.c	/^  char a[4]    ;            \/* FROM string followed by TO string *\/$/;"	m	struct:EditDist3Cost	file:
a	ext/misc/spellfix.c	/^  } *a; $/;"	m	struct:spellfix1_cursor	typeref:struct:spellfix1_cursor::spellfix1_row	file:
a	fts5.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	fts5.c	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader	file:
a	fts5.c	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter	file:
a	fts5.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
a	sqlite3.c	/^  FuncDef *a[SQLITE_FUNC_HASH_SZ];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash	file:
a	sqlite3.c	/^  Stat4Sample *a;           \/* Array of mxSample Stat4Sample objects *\/$/;"	m	struct:Stat4Accum	file:
a	sqlite3.c	/^  WhereLevel a[1];          \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo	file:
a	sqlite3.c	/^  WhereOrCost a[N_OR_COST];   \/* Set of best costs *\/$/;"	m	struct:WhereOrSet	file:
a	sqlite3.c	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause	file:
a	sqlite3.c	/^  char *a;                        \/* Pointer to allocation *\/$/;"	m	struct:Blob	file:
a	sqlite3.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	sqlite3.c	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader	file:
a	sqlite3.c	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter	file:
a	sqlite3.c	/^  unsigned char *a;   \/* Gather entropy into this buffer *\/$/;"	m	struct:EntropyGatherer	file:
a	sqlite3.c	/^  } *a;                  \/* Alloc a power of two greater or equal to nExpr *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item	file:
a	sqlite3.c	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item	file:
a	sqlite3.c	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item	file:
a	sqlite3.c	/^  } a[1];$/;"	m	struct:With	typeref:struct:With::Cte	file:
a	sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
a	sqlite3.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	src/analyze.c	/^  Stat4Sample *a;           \/* Array of mxSample Stat4Sample objects *\/$/;"	m	struct:Stat4Accum	file:
a	src/os_win.c	/^  unsigned char *a;   \/* Gather entropy into this buffer *\/$/;"	m	struct:EntropyGatherer	file:
a	src/sqliteInt.h	/^  FuncDef *a[SQLITE_FUNC_HASH_SZ];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash
a	src/sqliteInt.h	/^  } *a;                  \/* Alloc a power of two greater or equal to nExpr *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item
a	src/sqliteInt.h	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item
a	src/sqliteInt.h	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item
a	src/sqliteInt.h	/^  } a[1];$/;"	m	struct:With	typeref:struct:With::Cte
a	src/test_intarray.c	/^  sqlite3_int64 *a;         \/* Contents of the array *\/$/;"	m	struct:sqlite3_intarray	file:
a	src/test_pcache.c	/^  } a[TESTPCACHE_NPAGE];    \/* All pages in the cache *\/$/;"	m	struct:testpcache	typeref:struct:testpcache::testpcachePage	file:
a	src/whereInt.h	/^  WhereLevel a[1];          \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo
a	src/whereInt.h	/^  WhereOrCost a[N_OR_COST];   \/* Set of best costs *\/$/;"	m	struct:WhereOrSet
a	src/whereInt.h	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause
a	test/fuzzcheck.c	/^  unsigned char *a;       \/* Content of the file.  From malloc() *\/$/;"	m	struct:VFile	file:
a	test/fuzzcheck.c	/^  unsigned char a[1];     \/* Blob content.  Extra space allocated as needed. *\/$/;"	m	struct:Blob	file:
a	tool/dbhash.c	112;"	d	file:
a	tool/sqldiff.c	/^  u16 a, b;         \/* Hash values *\/$/;"	m	struct:hash	file:
a	tsrc/analyze.c	/^  Stat4Sample *a;           \/* Array of mxSample Stat4Sample objects *\/$/;"	m	struct:Stat4Accum	file:
a	tsrc/fts3_write.c	/^  char *a;                        \/* Pointer to allocation *\/$/;"	m	struct:Blob	file:
a	tsrc/fts5.c	/^  const u8 *a;                    \/* Buffer containing position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
a	tsrc/fts5.c	/^  const u8 *a;                    \/* Position list to iterate through *\/$/;"	m	struct:Fts5PoslistReader	file:
a	tsrc/fts5.c	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter	file:
a	tsrc/fts5.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	tsrc/os_win.c	/^  unsigned char *a;   \/* Gather entropy into this buffer *\/$/;"	m	struct:EntropyGatherer	file:
a	tsrc/parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
a	tsrc/sqlite3.h	/^  const unsigned char *a;$/;"	m	struct:Fts5PhraseIter
a	tsrc/sqliteInt.h	/^  FuncDef *a[SQLITE_FUNC_HASH_SZ];       \/* Hash table for functions *\/$/;"	m	struct:FuncDefHash
a	tsrc/sqliteInt.h	/^  } *a;                  \/* Alloc a power of two greater or equal to nExpr *\/$/;"	m	struct:ExprList	typeref:struct:ExprList::ExprList_item
a	tsrc/sqliteInt.h	/^  } *a;$/;"	m	struct:IdList	typeref:struct:IdList::IdList_item
a	tsrc/sqliteInt.h	/^  } a[1];             \/* One entry for each identifier on the list *\/$/;"	m	struct:SrcList	typeref:struct:SrcList::SrcList_item
a	tsrc/sqliteInt.h	/^  } a[1];$/;"	m	struct:With	typeref:struct:With::Cte
a	tsrc/whereInt.h	/^  WhereLevel a[1];          \/* Information about each nest loop in WHERE *\/$/;"	m	struct:WhereInfo
a	tsrc/whereInt.h	/^  WhereOrCost a[N_OR_COST];   \/* Set of best costs *\/$/;"	m	struct:WhereOrSet
a	tsrc/whereInt.h	/^  WhereTerm *a;            \/* Each a[] describes a term of the WHERE cluase *\/$/;"	m	struct:WhereClause
aAction	sqlite3.c	/^  u8 aAction[2];        \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey	file:
aAction	src/sqliteInt.h	/^  u8 aAction[2];        \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey
aAction	tool/lemon.c	/^    *aAction,                  \/* The yy_action[] table under construction *\/$/;"	m	struct:acttab	typeref:struct:acttab::lookahead_action	file:
aAction	tsrc/sqliteInt.h	/^  u8 aAction[2];        \/* ON DELETE and ON UPDATE actions, respectively *\/$/;"	m	struct:FKey
aAll	ext/fts3/fts3Int.h	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist
aAll	sqlite3.c	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist	file:
aAll	tsrc/fts3Int.h	/^  char *aAll;                    \/* Array containing doclist (or NULL) *\/$/;"	m	struct:Fts3Doclist
aAlloc	sqlite3.c	/^  u8 *aAlloc;                 \/* Space for aKey if aBuffer and pMap wont work *\/$/;"	m	struct:PmaReader	file:
aAlloc	src/vdbesort.c	/^  u8 *aAlloc;                 \/* Space for aKey if aBuffer and pMap wont work *\/$/;"	m	struct:PmaReader	file:
aAlloc	tsrc/vdbesort.c	/^  u8 *aAlloc;                 \/* Space for aKey if aBuffer and pMap wont work *\/$/;"	m	struct:PmaReader	file:
aAltMap	sqlite3.c	/^  int *aAltMap;           \/* Mapping from table to index column numbers *\/$/;"	m	struct:VdbeCursor	file:
aAltMap	src/vdbeInt.h	/^  int *aAltMap;           \/* Mapping from table to index column numbers *\/$/;"	m	struct:VdbeCursor
aAltMap	tsrc/vdbeInt.h	/^  int *aAltMap;           \/* Mapping from table to index column numbers *\/$/;"	m	struct:VdbeCursor
aArg	ext/misc/regexp.c	/^  int *aArg;                  \/* Arguments to each operator *\/$/;"	m	struct:ReCompiled	file:
aAsciiTokenChar	ext/fts5/fts5_tokenize.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAsciiTokenChar	fts5.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAsciiTokenChar	sqlite3.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAsciiTokenChar	tsrc/fts5.c	/^static unsigned char aAsciiTokenChar[128] = {$/;"	v	file:
aAvgEq	sqlite3.c	/^  tRowcnt *aAvgEq;         \/* Average nEq values for keys not in aSample *\/$/;"	m	struct:Index	file:
aAvgEq	src/sqliteInt.h	/^  tRowcnt *aAvgEq;         \/* Average nEq values for keys not in aSample *\/$/;"	m	struct:Index
aAvgEq	tsrc/sqliteInt.h	/^  tRowcnt *aAvgEq;         \/* Average nEq values for keys not in aSample *\/$/;"	m	struct:Index
aBest	sqlite3.c	/^  Stat4Sample *aBest;       \/* Array of nCol best samples *\/$/;"	m	struct:Stat4Accum	file:
aBest	src/analyze.c	/^  Stat4Sample *aBest;       \/* Array of nCol best samples *\/$/;"	m	struct:Stat4Accum	file:
aBest	tsrc/analyze.c	/^  Stat4Sample *aBest;       \/* Array of nCol best samples *\/$/;"	m	struct:Stat4Accum	file:
aBitmap	sqlite3.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon93	file:
aBitmap	src/bitvec.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon68	file:
aBitmap	tsrc/bitvec.c	/^    BITVEC_TELEM aBitmap[BITVEC_NELEM];    \/* Bitmap representation *\/$/;"	m	union:Bitvec::__anon39	file:
aBox	src/test_rtree.c	/^  } aBox[2];$/;"	m	struct:Circle	typeref:struct:Circle::Box	file:
aBuf	ext/fts5/fts5_tokenize.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	ext/fts5/fts5_tokenize.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	ext/rbu/sqlite3rbu.c	/^  u8 *aBuf;$/;"	m	struct:sqlite3rbu	file:
aBuf	ext/session/sqlite3session.c	/^  u8 *aBuf;                       \/* Pointer to changeset buffer *\/$/;"	m	struct:SessionBuffer	file:
aBuf	fts5.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	fts5.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	sqlite3.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	sqlite3.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	sqlite3.c	/^  u8 *aBuf;                       \/* Pointer to changeset buffer *\/$/;"	m	struct:SessionBuffer	file:
aBuf	sqlite3.c	/^  u8 *aBuf;$/;"	m	struct:sqlite3rbu	file:
aBuf	src/test_osinst.c	/^  char aBuf[VFSLOG_BUFFERSIZE];   \/* Write buffer *\/$/;"	m	struct:VfslogVfs	file:
aBuf	src/test_osinst.c	/^  unsigned char aBuf[1024];       \/* Current vfs log entry (read from file) *\/$/;"	m	struct:VfslogCsr	file:
aBuf	tsrc/fts5.c	/^  char *aBuf;$/;"	m	struct:PorterContext	file:
aBuf	tsrc/fts5.c	/^  char aBuf[FTS5_PORTER_MAX_TOKEN + 64];$/;"	m	struct:PorterTokenizer	file:
aBuf	tsrc/sqlite3rbu.c	/^  u8 *aBuf;$/;"	m	struct:sqlite3rbu	file:
aBuf	tsrc/sqlite3session.c	/^  u8 *aBuf;                       \/* Pointer to changeset buffer *\/$/;"	m	struct:SessionBuffer	file:
aBuffer	ext/fts3/fts3Int.h	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader
aBuffer	ext/fts3/fts3_test.c	/^  char *aBuffer;               \/* Buffer containing current token *\/$/;"	m	struct:test_tokenizer_cursor	file:
aBuffer	sqlite3.c	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader	file:
aBuffer	sqlite3.c	/^  u8 *aBuffer;                    \/* Pointer to write buffer *\/$/;"	m	struct:PmaWriter	file:
aBuffer	sqlite3.c	/^  u8 *aBuffer;                \/* Current read buffer *\/$/;"	m	struct:PmaReader	file:
aBuffer	src/test_demovfs.c	/^  char *aBuffer;                  \/* Pointer to malloc'd buffer *\/$/;"	m	struct:DemoFile	file:
aBuffer	src/vdbesort.c	/^  u8 *aBuffer;                    \/* Pointer to write buffer *\/$/;"	m	struct:PmaWriter	file:
aBuffer	src/vdbesort.c	/^  u8 *aBuffer;                \/* Current read buffer *\/$/;"	m	struct:PmaReader	file:
aBuffer	tsrc/fts3Int.h	/^  char *aBuffer;                  \/* Buffer to merge doclists in *\/$/;"	m	struct:Fts3MultiSegReader
aBuffer	tsrc/vdbesort.c	/^  u8 *aBuffer;                    \/* Pointer to write buffer *\/$/;"	m	struct:PmaWriter	file:
aBuffer	tsrc/vdbesort.c	/^  u8 *aBuffer;                \/* Current read buffer *\/$/;"	m	struct:PmaReader	file:
aCell	sqlite3.c	/^  StatCell *aCell;                \/* Array of parsed cells *\/$/;"	m	struct:StatPage	file:
aCell	src/dbstat.c	/^  StatCell *aCell;                \/* Array of parsed cells *\/$/;"	m	struct:StatPage	file:
aCell	tsrc/dbstat.c	/^  StatCell *aCell;                \/* Array of parsed cells *\/$/;"	m	struct:StatPage	file:
aCellIdx	sqlite3.c	/^  u8 *aCellIdx;        \/* The cell index area *\/$/;"	m	struct:MemPage	file:
aCellIdx	src/btreeInt.h	/^  u8 *aCellIdx;        \/* The cell index area *\/$/;"	m	struct:MemPage
aCellIdx	tsrc/btreeInt.h	/^  u8 *aCellIdx;        \/* The cell index area *\/$/;"	m	struct:MemPage
aChar	ext/fts2/fts2_icu.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aChar	ext/fts3/fts3_icu.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aChar	sqlite3.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aChar	tsrc/fts2_icu.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aChar	tsrc/fts3_icu.c	/^  UChar *aChar;               \/* Copy of input using utf-16 encoding *\/$/;"	m	struct:IcuCursor	file:
aCksum	sqlite3.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCksum	src/test_journal.c	/^  u32 *aCksum;             \/* Checksum for first nPage pages *\/$/;"	m	struct:jt_file	file:
aCksum	src/wal.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCksum	tsrc/wal.c	/^  u32 aCksum[2];                  \/* Checksum over all prior fields *\/$/;"	m	struct:WalIndexHdr	file:
aCnt	ext/fts5/fts5_vocab.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCnt	fts5.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCnt	sqlite3.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCnt	tsrc/fts5.c	/^  i64 *aCnt;$/;"	m	struct:Fts5VocabCursor	file:
aCol	sqlite3.c	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table	file:
aCol	sqlite3.c	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col	file:
aCol	sqlite3.c	/^  } aCol[1];            \/* One entry for each of nCol columns *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap	file:
aCol	src/sqliteInt.h	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table
aCol	src/sqliteInt.h	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col
aCol	src/sqliteInt.h	/^  } aCol[1];            \/* One entry for each of nCol columns *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap
aCol	src/test8.c	/^  char **aCol;            \/* Array of size nCol. Column names *\/$/;"	m	struct:echo_vtab	file:
aCol	tsrc/sqliteInt.h	/^  Column *aCol;        \/* Information about each column *\/$/;"	m	struct:Table
aCol	tsrc/sqliteInt.h	/^  } *aCol;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_col
aCol	tsrc/sqliteInt.h	/^  } aCol[1];            \/* One entry for each of nCol columns *\/$/;"	m	struct:FKey	typeref:struct:FKey::sColMap
aColCache	sqlite3.c	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache	file:
aColCache	src/sqliteInt.h	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache
aColCache	tsrc/sqliteInt.h	/^  } aColCache[SQLITE_N_COLCACHE];  \/* One for each column cache entry *\/$/;"	m	struct:Parse	typeref:struct:Parse::yColCache
aColExpr	sqlite3.c	/^  ExprList *aColExpr;      \/* Column expressions *\/$/;"	m	struct:Index	file:
aColExpr	src/sqliteInt.h	/^  ExprList *aColExpr;      \/* Column expressions *\/$/;"	m	struct:Index
aColExpr	tsrc/sqliteInt.h	/^  ExprList *aColExpr;      \/* Column expressions *\/$/;"	m	struct:Index
aColName	sqlite3.c	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe	file:
aColName	src/vdbeInt.h	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe
aColName	tsrc/vdbeInt.h	/^  Mem *aColName;          \/* Column names to return *\/$/;"	m	struct:Vdbe
aColl	sqlite3.c	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo	file:
aColl	src/sqliteInt.h	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo
aColl	tsrc/sqliteInt.h	/^  CollSeq *aColl[1];  \/* Collating sequence for each term of the key *\/$/;"	m	struct:KeyInfo
aCollSeq	sqlite3.c	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3	file:
aCollSeq	src/sqliteInt.h	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3
aCollSeq	tsrc/sqliteInt.h	/^  Hash aCollSeq;                \/* All collating sequences *\/$/;"	m	struct:sqlite3
aColmask	sqlite3.c	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg	file:
aColmask	src/sqliteInt.h	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg
aColmask	tsrc/sqliteInt.h	/^  u32 aColmask[2];        \/* Masks of old.*, new.* columns accessed *\/$/;"	m	struct:TriggerPrg
aColumnSize	ext/fts5/fts5_main.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aColumnSize	fts5.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aColumnSize	sqlite3.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aColumnSize	tsrc/fts5.c	/^  int *aColumnSize;               \/* Values for xColumnSize() *\/$/;"	m	struct:Fts5Cursor	file:
aCond	ext/async/sqlite3async.c	/^  HANDLE aCond[1];$/;"	m	struct:AsyncPrimitives	file:
aCond	ext/async/sqlite3async.c	/^  pthread_cond_t aCond[1];$/;"	m	struct:AsyncPrimitives	file:
aConn	src/test_sqllog.c	/^  struct SLConn aConn[MAX_CONNECTIONS];$/;"	m	struct:SLGlobal	typeref:struct:SLGlobal::SLConn	file:
aConstraint	ext/rtree/rtree.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	sqlite3.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	sqlite3.c	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint	file:
aConstraint	sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraint	tsrc/rtree.c	/^  RtreeConstraint *aConstraint;     \/* Search constraints. *\/$/;"	m	struct:RtreeCursor	file:
aConstraint	tsrc/sqlite3.h	/^  } *aConstraint;            \/* Table of WHERE clause constraints *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint
aConstraintUsage	sqlite3.c	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
aConstraintUsage	sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aConstraintUsage	tsrc/sqlite3.h	/^  } *aConstraintUsage;$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_constraint_usage
aCoord	ext/rtree/rtree.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];  \/* Bounding box coordinates *\/$/;"	m	struct:RtreeCell	file:
aCoord	ext/rtree/sqlite3rtree.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aCoord	sqlite3.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];  \/* Bounding box coordinates *\/$/;"	m	struct:RtreeCell	file:
aCoord	sqlite3.c	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aCoord	sqlite3.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aCoord	tsrc/rtree.c	/^  RtreeCoord aCoord[RTREE_MAX_DIMENSIONS*2];  \/* Bounding box coordinates *\/$/;"	m	struct:RtreeCell	file:
aCoord	tsrc/sqlite3.h	/^  sqlite3_rtree_dbl *aCoord;        \/* Coordinates of node or entry to check *\/$/;"	m	struct:sqlite3_rtree_query_info
aCounter	sqlite3.c	/^  u32 aCounter[5];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe	file:
aCounter	src/test_mutex.c	/^  int aCounter[MAX_MUTEXES]; \/* Number of grabs of each type of mutex *\/$/;"	m	struct:test_mutex_globals	file:
aCounter	src/vdbeInt.h	/^  u32 aCounter[5];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe
aCounter	tsrc/vdbeInt.h	/^  u32 aCounter[5];        \/* Counters used by sqlite3_stmt_status() *\/$/;"	m	struct:Vdbe
aCtrl	sqlite3.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aCtrl	src/mem5.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aCtrl	tsrc/mem5.c	/^  u8 *aCtrl;$/;"	m	struct:Mem5Global	file:
aData	ext/fts3/fts3_write.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	ext/fts3/fts3_write.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	ext/fts3/fts3_write.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	ext/session/sqlite3session.c	/^  u8 *aData;                      \/* Pointer to buffer containing changeset *\/$/;"	m	struct:SessionInput	file:
aData	ext/session/test_session.c	/^  unsigned char *aData;           \/* Pointer to buffer containing data *\/$/;"	m	struct:TestStreamInput	file:
aData	sqlite3.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	sqlite3.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	sqlite3.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	sqlite3.c	/^  u8 *aData;                      \/* Pointer to buffer containing changeset *\/$/;"	m	struct:SessionInput	file:
aData	sqlite3.c	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage	file:
aData	src/btreeInt.h	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage
aData	src/test_wsd.c	/^  ProcessLocalVar *aData[PLS_HASHSIZE];$/;"	m	struct:ProcessLocalStorage	file:
aData	tsrc/btreeInt.h	/^  u8 *aData;           \/* Pointer to disk image of the page data *\/$/;"	m	struct:MemPage
aData	tsrc/fts3_write.c	/^  char *aData;                    \/* Node data *\/$/;"	m	struct:SegmentNode	file:
aData	tsrc/fts3_write.c	/^  char *aData;                    \/* Pointer to block from malloc() *\/$/;"	m	struct:SegmentWriter	file:
aData	tsrc/fts3_write.c	/^  char *aData;$/;"	m	struct:PendingList	file:
aData	tsrc/sqlite3session.c	/^  u8 *aData;                      \/* Pointer to buffer containing changeset *\/$/;"	m	struct:SessionInput	file:
aDataEnd	sqlite3.c	/^  u8 *aDataEnd;        \/* One byte past the end of usable data *\/$/;"	m	struct:MemPage	file:
aDataEnd	src/btreeInt.h	/^  u8 *aDataEnd;        \/* One byte past the end of usable data *\/$/;"	m	struct:MemPage
aDataEnd	tsrc/btreeInt.h	/^  u8 *aDataEnd;        \/* One byte past the end of usable data *\/$/;"	m	struct:MemPage
aDataOfst	sqlite3.c	/^  u8 *aDataOfst;       \/* Same as aData for leaves.  aData+4 for interior *\/$/;"	m	struct:MemPage	file:
aDataOfst	src/btreeInt.h	/^  u8 *aDataOfst;       \/* Same as aData for leaves.  aData+4 for interior *\/$/;"	m	struct:MemPage
aDataOfst	tsrc/btreeInt.h	/^  u8 *aDataOfst;       \/* Same as aData for leaves.  aData+4 for interior *\/$/;"	m	struct:MemPage
aDb	sqlite3.c	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3	file:
aDb	src/sqliteInt.h	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3
aDb	tsrc/sqliteInt.h	/^  Db *aDb;                      \/* All backends *\/$/;"	m	struct:sqlite3
aDbStatic	sqlite3.c	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3	file:
aDbStatic	src/sqliteInt.h	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3
aDbStatic	tsrc/sqliteInt.h	/^  Db aDbStatic[2];              \/* Static space for the 2 default backends *\/$/;"	m	struct:sqlite3
aDigits	sqlite3.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDigits	src/printf.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDigits	tsrc/printf.c	/^static const char aDigits[] = "0123456789ABCDEF0123456789abcdef";$/;"	v	file:
aDlidx	ext/fts5/fts5_index.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDlidx	fts5.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDlidx	sqlite3.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDlidx	tsrc/fts5.c	/^  Fts5DlidxWriter *aDlidx;        \/* Array of Fts5DlidxWriter objects *\/$/;"	m	struct:Fts5SegWriter	file:
aDoc	ext/fts5/fts5_vocab.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoc	fts5.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoc	sqlite3.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoc	tsrc/fts5.c	/^  i64 *aDoc;$/;"	m	struct:Fts5VocabCursor	file:
aDoclist	ext/fts3/fts3Int.h	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor
aDoclist	ext/fts3/fts3Int.h	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader
aDoclist	ext/fts3/fts3_write.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aDoclist	ext/fts3/fts3_write.c	/^  const char *aDoclist;           \/* Pointer to doclist *\/$/;"	m	struct:NodeReader	file:
aDoclist	sqlite3.c	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor	file:
aDoclist	sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
aDoclist	sqlite3.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aDoclist	sqlite3.c	/^  const char *aDoclist;           \/* Pointer to doclist *\/$/;"	m	struct:NodeReader	file:
aDoclist	tsrc/fts3Int.h	/^  char *aDoclist;                 \/* List of docids for full-text queries *\/$/;"	m	struct:Fts3Cursor
aDoclist	tsrc/fts3Int.h	/^  char *aDoclist;                 \/* Pointer to doclist buffer *\/$/;"	m	struct:Fts3MultiSegReader
aDoclist	tsrc/fts3_write.c	/^  char *aDoclist;                 \/* Pointer to doclist of current entry *\/$/;"	m	struct:Fts3SegReader	file:
aDoclist	tsrc/fts3_write.c	/^  const char *aDoclist;           \/* Pointer to doclist *\/$/;"	m	struct:NodeReader	file:
aEntry	sqlite3.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aEntry	src/rowset.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aEntry	tsrc/rowset.c	/^  struct RowSetEntry aEntry[ROWSET_ENTRY_PER_CHUNK]; \/* Allocated entries *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetEntry	file:
aEof	ext/fts5/fts5_index.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aEof	fts5.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aEof	sqlite3.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aEof	tsrc/fts5.c	/^  u8 *aEof;                       \/* Pointer to 1 byte past end of doclist *\/$/;"	m	struct:Fts5DoclistIter	file:
aExt	sqlite3.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExt	src/loadext.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExt	tsrc/loadext.c	/^  void (**aExt)(void);   \/* Pointers to the extension init functions *\/$/;"	m	struct:sqlite3AutoExtList	file:
aExtension	sqlite3.c	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3	file:
aExtension	src/sqliteInt.h	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3
aExtension	tsrc/sqliteInt.h	/^  void **aExtension;            \/* Array of shared library handles *\/$/;"	m	struct:sqlite3
aFile	sqlite3.c	/^  SorterFile aFile[2];            \/* aFile[0] for reading, [1] for writing *\/$/;"	m	struct:IncrMerger	file:
aFile	src/vdbesort.c	/^  SorterFile aFile[2];            \/* aFile[0] for reading, [1] for writing *\/$/;"	m	struct:IncrMerger	file:
aFile	test/fuzzcheck.c	/^  VFile aFile[MX_FILE];            \/* The virtual filesystem *\/$/;"	m	struct:GlobalVars	file:
aFile	tsrc/vdbesort.c	/^  SorterFile aFile[2];            \/* aFile[0] for reading, [1] for writing *\/$/;"	m	struct:IncrMerger	file:
aFirst	ext/fts5/fts5_index.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFirst	fts5.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFirst	sqlite3.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFirst	tsrc/fts5.c	/^  Fts5CResult *aFirst;            \/* Current merge state (see above) *\/$/;"	m	struct:Fts5Iter	file:
aFold	ext/fts5/fts5_tokenize.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFold	fts5.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFold	sqlite3.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFold	tsrc/fts5.c	/^  char *aFold;                    \/* Buffer to fold text into *\/$/;"	m	struct:Unicode61Tokenizer	file:
aFrame	ext/rbu/sqlite3rbu.c	/^  RbuFrame *aFrame;$/;"	m	struct:sqlite3rbu	file:
aFrame	sqlite3.c	/^  RbuFrame *aFrame;$/;"	m	struct:sqlite3rbu	file:
aFrame	tsrc/sqlite3rbu.c	/^  RbuFrame *aFrame;$/;"	m	struct:sqlite3rbu	file:
aFrameCksum	sqlite3.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFrameCksum	src/wal.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFrameCksum	tsrc/wal.c	/^  u32 aFrameCksum[2];             \/* Checksum of last frame in log *\/$/;"	m	struct:WalIndexHdr	file:
aFreq	ext/fts5/fts5_aux.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFreq	fts5.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFreq	sqlite3.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFreq	tsrc/fts5.c	/^  double *aFreq;                  \/* Array used to calculate phrase freq. *\/$/;"	m	struct:Fts5Bm25Data	file:
aFunc	sqlite3.c	/^  Hash aFunc;                   \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3	file:
aFunc	sqlite3.c	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func	file:
aFunc	src/sqliteInt.h	/^  Hash aFunc;                   \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3
aFunc	src/sqliteInt.h	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func
aFunc	tsrc/sqliteInt.h	/^  Hash aFunc;                   \/* Hash table of connection functions *\/$/;"	m	struct:sqlite3
aFunc	tsrc/sqliteInt.h	/^  } *aFunc;$/;"	m	struct:AggInfo	typeref:struct:AggInfo::AggInfo_func
aHardLimit	sqlite3.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHardLimit	src/main.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHardLimit	tsrc/main.c	/^static const int aHardLimit[] = {$/;"	v	file:
aHash	ext/rtree/rtree.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aHash	sqlite3.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon93	file:
aHash	sqlite3.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aHash	src/bitvec.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon68	file:
aHash	tsrc/bitvec.c	/^    u32 aHash[BITVEC_NINT];      \/* Hash table representation *\/$/;"	m	union:Bitvec::__anon39	file:
aHash	tsrc/rtree.c	/^  RtreeNode *aHash[HASHSIZE]; \/* Hash table of in-memory nodes. *\/ $/;"	m	struct:Rtree	file:
aHolder	ext/async/sqlite3async.c	/^  DWORD aHolder[3];$/;"	m	struct:AsyncPrimitives	file:
aHolder	ext/async/sqlite3async.c	/^  pthread_t aHolder[3];$/;"	m	struct:AsyncPrimitives	file:
aIDF	ext/fts5/fts5_aux.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIDF	fts5.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIDF	sqlite3.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIDF	tsrc/fts5.c	/^  double *aIDF;                   \/* IDF for each phrase *\/$/;"	m	struct:Fts5Bm25Data	file:
aIdx	ext/fts5/fts5_main.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aIdx	fts5.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aIdx	sqlite3.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aIdx	tsrc/fts5.c	/^  int aIdx[1];                    \/* Offsets into aPoslist for current row *\/$/;"	m	struct:Fts5Sorter	file:
aInLoop	sqlite3.c	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon96::__anon97	typeref:struct:WhereLevel::__anon96::__anon97::InLoop	file:
aInLoop	src/whereInt.h	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon45::__anon46	typeref:struct:WhereLevel::__anon45::__anon46::InLoop
aInLoop	tsrc/whereInt.h	/^      } *aInLoop;           \/* Information about each nested IN operator *\/$/;"	m	struct:WhereLevel::__anon10::__anon11	typeref:struct:WhereLevel::__anon10::__anon11::InLoop
aIndent	sqlite3.c	/^  u16 aIndent[100];  \/* Levels of indentation *\/$/;"	m	struct:Explain	file:
aIndent	src/vdbeInt.h	/^  u16 aIndent[100];  \/* Levels of indentation *\/$/;"	m	struct:Explain
aIndent	tsrc/vdbeInt.h	/^  u16 aIndent[100];  \/* Levels of indentation *\/$/;"	m	struct:Explain
aIndex	ext/fts3/fts3Int.h	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index
aIndex	sqlite3.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	sqlite3.c	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index	file:
aIndex	src/test8.c	/^  int *aIndex;            \/* Array of size nCol. True if column has an index *\/$/;"	m	struct:echo_vtab	file:
aIndex	src/wal.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aIndex	tsrc/fts3Int.h	/^  } *aIndex;$/;"	m	struct:Fts3Table	typeref:struct:Fts3Table::Fts3Index
aIndex	tsrc/wal.c	/^    ht_slot *aIndex;              \/* i0, i1, i2... such that aPgno[iN] ascend *\/$/;"	m	struct:WalIterator::WalSegment	file:
aInput	ext/fts3/fts3_test.c	/^  const char *aInput;          \/* Input being tokenized *\/$/;"	m	struct:test_tokenizer_cursor	file:
aInput	ext/fts3/fts3_unicode.c	/^  const unsigned char *aInput;    \/* Input text being tokenized *\/$/;"	m	struct:unicode_cursor	file:
aInput	sqlite3.c	/^  const unsigned char *aInput;    \/* Input text being tokenized *\/$/;"	m	struct:unicode_cursor	file:
aInput	tsrc/fts3_unicode.c	/^  const unsigned char *aInput;    \/* Input text being tokenized *\/$/;"	m	struct:unicode_cursor	file:
aInst	ext/fts5/fts5_main.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInst	fts5.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInst	sqlite3.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInst	tsrc/fts5.c	/^  int *aInst;                     \/* 3 integers per phrase instance *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	ext/fts5/fts5_main.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	fts5.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	sqlite3.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aInstIter	tsrc/fts5.c	/^  Fts5PoslistReader *aInstIter;   \/* One for each phrase *\/$/;"	m	struct:Fts5Cursor	file:
aJournalMagic	sqlite3.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aJournalMagic	src/pager.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aJournalMagic	tsrc/pager.c	/^static const unsigned char aJournalMagic[] = {$/;"	v	file:
aKey	sqlite3.c	/^  u8 *aKey;                   \/* Pointer to current key *\/$/;"	m	struct:PmaReader	file:
aKey	src/vdbesort.c	/^  u8 *aKey;                   \/* Pointer to current key *\/$/;"	m	struct:PmaReader	file:
aKey	tsrc/vdbesort.c	/^  u8 *aKey;                   \/* Pointer to current key *\/$/;"	m	struct:PmaReader	file:
aKeywordTable	tool/mkkeywordhash.c	/^static Keyword aKeywordTable[] = {$/;"	v	file:
aLTerm	sqlite3.c	/^  WhereTerm **aLTerm;   \/* WhereTerms used *\/$/;"	m	struct:WhereLoop	file:
aLTerm	src/whereInt.h	/^  WhereTerm **aLTerm;   \/* WhereTerms used *\/$/;"	m	struct:WhereLoop
aLTerm	tsrc/whereInt.h	/^  WhereTerm **aLTerm;   \/* WhereTerms used *\/$/;"	m	struct:WhereLoop
aLTermSpace	sqlite3.c	/^  WhereTerm *aLTermSpace[3];  \/* Initial aLTerm[] space *\/$/;"	m	struct:WhereLoop	file:
aLTermSpace	src/whereInt.h	/^  WhereTerm *aLTermSpace[3];  \/* Initial aLTerm[] space *\/$/;"	m	struct:WhereLoop
aLTermSpace	tsrc/whereInt.h	/^  WhereTerm *aLTermSpace[3];  \/* Initial aLTerm[] space *\/$/;"	m	struct:WhereLoop
aLabel	sqlite3.c	/^  int *aLabel;         \/* Space to hold the labels *\/$/;"	m	struct:Parse	file:
aLabel	src/sqliteInt.h	/^  int *aLabel;         \/* Space to hold the labels *\/$/;"	m	struct:Parse
aLabel	tsrc/sqliteInt.h	/^  int *aLabel;         \/* Space to hold the labels *\/$/;"	m	struct:Parse
aLen	ext/misc/csv.c	/^  int *aLen;                      \/* Length of each entry *\/$/;"	m	struct:CsvCursor	file:
aLevel	ext/fts5/fts5_index.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLevel	fts5.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLevel	sqlite3.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLevel	tsrc/fts5.c	/^  Fts5StructureLevel aLevel[1];   \/* Array of nLevel level objects *\/$/;"	m	struct:Fts5Structure	file:
aLimit	sqlite3.c	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3	file:
aLimit	src/sqliteInt.h	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3
aLimit	tsrc/sqliteInt.h	/^  int aLimit[SQLITE_N_LIMIT];   \/* Limits *\/$/;"	m	struct:sqlite3
aLock	sqlite3.c	/^  u8 aLock[SQLITE_SHM_NLOCK];     \/* Reserved space for locks *\/$/;"	m	struct:WalCkptInfo	file:
aLock	src/wal.c	/^  u8 aLock[SQLITE_SHM_NLOCK];     \/* Reserved space for locks *\/$/;"	m	struct:WalCkptInfo	file:
aLock	tsrc/wal.c	/^  u8 aLock[SQLITE_SHM_NLOCK];     \/* Reserved space for locks *\/$/;"	m	struct:WalCkptInfo	file:
aLookahead	tool/lemon.c	/^    *aLookahead;               \/* A single new transaction set *\/$/;"	m	struct:acttab	typeref:struct:acttab::	file:
aLoop	sqlite3.c	/^  WhereLoop **aLoop;    \/* Array of WhereLoop objects implementing this path *\/$/;"	m	struct:WherePath	file:
aLoop	src/whereInt.h	/^  WhereLoop **aLoop;    \/* Array of WhereLoop objects implementing this path *\/$/;"	m	struct:WherePath
aLoop	tsrc/whereInt.h	/^  WhereLoop **aLoop;    \/* Array of WhereLoop objects implementing this path *\/$/;"	m	struct:WherePath
aLvl	ext/fts5/fts5_index.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aLvl	fts5.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aLvl	sqlite3.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aLvl	tsrc/fts5.c	/^  Fts5DlidxLvl aLvl[1];$/;"	m	struct:Fts5DlidxIter	file:
aMI	ext/fts3/fts3Int.h	/^  u32 *aMI;                  \/* See above *\/$/;"	m	struct:Fts3Expr
aMI	sqlite3.c	/^  u32 *aMI;                  \/* See above *\/$/;"	m	struct:Fts3Expr	file:
aMI	tsrc/fts3Int.h	/^  u32 *aMI;                  \/* See above *\/$/;"	m	struct:Fts3Expr
aMallocLog	src/test_malloc.c	/^static Tcl_HashTable aMallocLog;$/;"	v	file:
aMap	sqlite3.c	/^  u8 *aMap;                   \/* Pointer to mapping of entire file *\/$/;"	m	struct:PmaReader	file:
aMap	src/vdbesort.c	/^  u8 *aMap;                   \/* Pointer to mapping of entire file *\/$/;"	m	struct:PmaReader	file:
aMap	tsrc/vdbesort.c	/^  u8 *aMap;                   \/* Pointer to mapping of entire file *\/$/;"	m	struct:PmaReader	file:
aMatch	ext/fts1/fts1.c	/^  } *aMatch;      \/* Points to space obtained from malloc *\/$/;"	m	struct:Snippet	typeref:struct:Snippet::snippetMatch	file:
aMatch	ext/fts2/fts2.c	/^  } *aMatch;      \/* Points to space obtained from malloc *\/$/;"	m	struct:Snippet	typeref:struct:Snippet::snippetMatch	file:
aMatch	tsrc/fts1.c	/^  } *aMatch;      \/* Points to space obtained from malloc *\/$/;"	m	struct:Snippet	typeref:struct:Snippet::snippetMatch	file:
aMatch	tsrc/fts2.c	/^  } *aMatch;      \/* Points to space obtained from malloc *\/$/;"	m	struct:Snippet	typeref:struct:Snippet::snippetMatch	file:
aMatchinfo	ext/fts3/fts3_snippet.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMatchinfo	ext/fts3/fts3_snippet.c	/^  u32 aMatchinfo[1];$/;"	m	struct:MatchinfoBuffer	file:
aMatchinfo	sqlite3.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMatchinfo	sqlite3.c	/^  u32 aMatchinfo[1];$/;"	m	struct:MatchinfoBuffer	file:
aMatchinfo	tsrc/fts3_snippet.c	/^  u32 *aMatchinfo;                \/* Pre-allocated buffer *\/$/;"	m	struct:MatchInfo	file:
aMatchinfo	tsrc/fts3_snippet.c	/^  u32 aMatchinfo[1];$/;"	m	struct:MatchinfoBuffer	file:
aMem	sqlite3.c	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aMem	sqlite3.c	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe	file:
aMem	sqlite3.c	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord	file:
aMem	src/sqliteInt.h	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord
aMem	src/vdbeInt.h	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame
aMem	src/vdbeInt.h	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe
aMem	tsrc/sqliteInt.h	/^  Mem *aMem;          \/* Values *\/$/;"	m	struct:UnpackedRecord
aMem	tsrc/vdbeInt.h	/^  Mem *aMem;              \/* Array of memory cells for parent frame *\/$/;"	m	struct:VdbeFrame
aMem	tsrc/vdbeInt.h	/^  Mem *aMem;              \/* The memory locations *\/$/;"	m	struct:Vdbe
aMemory	sqlite3.c	/^  u8 *aMemory;                    \/* If non-NULL, bulk memory to hold pList *\/$/;"	m	struct:SorterList	file:
aMemory	src/vdbesort.c	/^  u8 *aMemory;                    \/* If non-NULL, bulk memory to hold pList *\/$/;"	m	struct:SorterList	file:
aMemory	tsrc/vdbesort.c	/^  u8 *aMemory;                    \/* If non-NULL, bulk memory to hold pList *\/$/;"	m	struct:SorterList	file:
aModule	sqlite3.c	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3	file:
aModule	src/sqliteInt.h	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3
aModule	tsrc/sqliteInt.h	/^  Hash aModule;                 \/* populated by sqlite3_create_module() *\/$/;"	m	struct:sqlite3
aMutex	ext/async/sqlite3async.c	/^  CRITICAL_SECTION aMutex[3];$/;"	m	struct:AsyncPrimitives	file:
aMutex	ext/async/sqlite3async.c	/^  pthread_mutex_t aMutex[3];$/;"	m	struct:AsyncPrimitives	file:
aName	src/test_mutex.c	/^static const char *aName[MAX_MUTEXES+1] = {$/;"	v	file:
aNew	sqlite3.c	/^  Mem *aNew;                      \/* Array of new.* values *\/$/;"	m	struct:PreUpdate	file:
aNew	src/vdbeInt.h	/^  Mem *aNew;                      \/* Array of new.* values *\/$/;"	m	struct:PreUpdate
aNew	tsrc/vdbeInt.h	/^  Mem *aNew;                      \/* Array of new.* values *\/$/;"	m	struct:PreUpdate
aNode	ext/fts3/fts3_write.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aNode	ext/fts3/fts3_write.c	/^  const char *aNode;$/;"	m	struct:NodeReader	file:
aNode	ext/misc/json1.c	/^  JsonNode *aNode;   \/* Array of nodes containing the parse *\/$/;"	m	struct:JsonParse	file:
aNode	ext/rtree/rtree.c	/^  RtreeNode *aNode[RTREE_CACHE_SZ]; \/* Rtree node cache *\/$/;"	m	struct:RtreeCursor	file:
aNode	sqlite3.c	/^  JsonNode *aNode;   \/* Array of nodes containing the parse *\/$/;"	m	struct:JsonParse	file:
aNode	sqlite3.c	/^  RtreeNode *aNode[RTREE_CACHE_SZ]; \/* Rtree node cache *\/$/;"	m	struct:RtreeCursor	file:
aNode	sqlite3.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aNode	sqlite3.c	/^  const char *aNode;$/;"	m	struct:NodeReader	file:
aNode	tsrc/fts3_write.c	/^  char *aNode;                    \/* Pointer to node data (or NULL) *\/$/;"	m	struct:Fts3SegReader	file:
aNode	tsrc/fts3_write.c	/^  const char *aNode;$/;"	m	struct:NodeReader	file:
aNode	tsrc/json1.c	/^  JsonNode *aNode;   \/* Array of nodes containing the parse *\/$/;"	m	struct:JsonParse	file:
aNode	tsrc/rtree.c	/^  RtreeNode *aNode[RTREE_CACHE_SZ]; \/* Rtree node cache *\/$/;"	m	struct:RtreeCursor	file:
aNodeWriter	ext/fts3/fts3_write.c	/^  NodeWriter aNodeWriter[FTS_MAX_APPENDABLE_HEIGHT];$/;"	m	struct:IncrmergeWriter	file:
aNodeWriter	sqlite3.c	/^  NodeWriter aNodeWriter[FTS_MAX_APPENDABLE_HEIGHT];$/;"	m	struct:IncrmergeWriter	file:
aNodeWriter	tsrc/fts3_write.c	/^  NodeWriter aNodeWriter[FTS_MAX_APPENDABLE_HEIGHT];$/;"	m	struct:IncrmergeWriter	file:
aOffset	ext/fts2/fts2_icu.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	ext/fts3/fts3_icu.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	sqlite3.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	sqlite3.c	/^  u32 *aOffset;         \/* Pointer to aType[nField] *\/$/;"	m	struct:VdbeCursor	file:
aOffset	src/vdbeInt.h	/^  u32 *aOffset;         \/* Pointer to aType[nField] *\/$/;"	m	struct:VdbeCursor
aOffset	tsrc/fts2_icu.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	tsrc/fts3_icu.c	/^  int *aOffset;               \/* Offsets of each character in utf-8 input *\/$/;"	m	struct:IcuCursor	file:
aOffset	tsrc/vdbeInt.h	/^  u32 *aOffset;         \/* Pointer to aType[nField] *\/$/;"	m	struct:VdbeCursor
aOnceFlag	sqlite3.c	/^  u8 *aOnceFlag;          \/* Array of OP_Once flags for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOnceFlag	sqlite3.c	/^  u8 *aOnceFlag;          \/* Flags for OP_Once *\/$/;"	m	struct:Vdbe	file:
aOnceFlag	src/vdbeInt.h	/^  u8 *aOnceFlag;          \/* Array of OP_Once flags for parent frame *\/$/;"	m	struct:VdbeFrame
aOnceFlag	src/vdbeInt.h	/^  u8 *aOnceFlag;          \/* Flags for OP_Once *\/$/;"	m	struct:Vdbe
aOnceFlag	tsrc/vdbeInt.h	/^  u8 *aOnceFlag;          \/* Array of OP_Once flags for parent frame *\/$/;"	m	struct:VdbeFrame
aOnceFlag	tsrc/vdbeInt.h	/^  u8 *aOnceFlag;          \/* Flags for OP_Once *\/$/;"	m	struct:Vdbe
aOp	ext/misc/regexp.c	/^  char *aOp;                  \/* Operators for the virtual machine *\/$/;"	m	struct:ReCompiled	file:
aOp	sqlite3.c	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame	file:
aOp	sqlite3.c	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe	file:
aOp	sqlite3.c	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram	file:
aOp	src/vdbe.h	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram
aOp	src/vdbeInt.h	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame
aOp	src/vdbeInt.h	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe
aOp	tsrc/vdbe.h	/^  VdbeOp *aOp;                  \/* Array of opcodes for sub-program *\/$/;"	m	struct:SubProgram
aOp	tsrc/vdbeInt.h	/^  Op *aOp;                \/* Program instructions for parent frame *\/$/;"	m	struct:VdbeFrame
aOp	tsrc/vdbeInt.h	/^  Op *aOp;                \/* Space to hold the virtual machine's program *\/$/;"	m	struct:Vdbe
aOrderBy	sqlite3.c	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby	file:
aOrderBy	sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOrderBy	tsrc/sqlite3.h	/^  } *aOrderBy;               \/* The ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	typeref:struct:sqlite3_index_info::sqlite3_index_orderby
aOverflow	sqlite3.c	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor	file:
aOverflow	src/btreeInt.h	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor
aOverflow	tsrc/btreeInt.h	/^  Pgno *aOverflow;          \/* Cache of overflow page locations *\/$/;"	m	struct:BtCursor
aOvfl	sqlite3.c	/^  u32 *aOvfl;                     \/* Array of overflow page numbers *\/$/;"	m	struct:StatCell	file:
aOvfl	src/dbstat.c	/^  u32 *aOvfl;                     \/* Array of overflow page numbers *\/$/;"	m	struct:StatCell	file:
aOvfl	tsrc/dbstat.c	/^  u32 *aOvfl;                     \/* Array of overflow page numbers *\/$/;"	m	struct:StatCell	file:
aPadding	sqlite3.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aPadding	src/os_unix.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aPadding	tsrc/os_unix.c	/^  char aPadding[32];$/;"	m	struct:unixFile	file:
aPage	sqlite3.c	/^  StatPage aPage[32];$/;"	m	struct:StatCursor	file:
aPage	src/dbstat.c	/^  StatPage aPage[32];$/;"	m	struct:StatCursor	file:
aPage	src/test_vfs.c	/^  u8 *aPage[TESTVFS_MAX_PAGES];   \/* Array of ckalloc'd pages *\/$/;"	m	struct:TestvfsBuffer	file:
aPage	tool/offsets.c	/^  u8 *aPage;            \/* Current page content *\/$/;"	m	struct:GState	file:
aPage	tsrc/dbstat.c	/^  StatPage aPage[32];$/;"	m	struct:StatCursor	file:
aParam	ext/rtree/rtree.c	/^  RtreeDValue aParam[1];      \/* Values for parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
aParam	ext/rtree/sqlite3rtree.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	ext/rtree/sqlite3rtree.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aParam	sqlite3.c	/^  RtreeDValue aParam[1];      \/* Values for parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
aParam	sqlite3.c	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
aParam	sqlite3.c	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
aParam	sqlite3.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	sqlite3.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aParam	tsrc/rtree.c	/^  RtreeDValue aParam[1];      \/* Values for parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
aParam	tsrc/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;        \/* value of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
aParam	tsrc/sqlite3.h	/^  sqlite3_rtree_dbl *aParam;      \/* Parameters passed to SQL geom function *\/$/;"	m	struct:sqlite3_rtree_geometry
aPgRef	sqlite3.c	/^  u8 *aPgRef;       \/* 1 bit per page in the db (see above) *\/$/;"	m	struct:IntegrityCk	file:
aPgRef	src/btreeInt.h	/^  u8 *aPgRef;       \/* 1 bit per page in the db (see above) *\/$/;"	m	struct:IntegrityCk
aPgRef	tsrc/btreeInt.h	/^  u8 *aPgRef;       \/* 1 bit per page in the db (see above) *\/$/;"	m	struct:IntegrityCk
aPgno	sqlite3.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPgno	src/wal.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPgno	tool/offsets.c	/^  int aPgno[20];        \/* Page number stack *\/$/;"	m	struct:GState	file:
aPgno	tsrc/wal.c	/^    u32 *aPgno;                   \/* Array of page numbers. *\/$/;"	m	struct:WalIterator::WalSegment	file:
aPhrase	ext/fts3/fts3_snippet.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPhrase	sqlite3.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPhrase	tsrc/fts3_snippet.c	/^  SnippetPhrase *aPhrase;         \/* Array of size nPhrase *\/$/;"	m	struct:SnippetIter	file:
aPoint	ext/rtree/rtree.c	/^  RtreeSearchPoint *aPoint;         \/* Priority queue for search points *\/$/;"	m	struct:RtreeCursor	file:
aPoint	sqlite3.c	/^  RtreeSearchPoint *aPoint;         \/* Priority queue for search points *\/$/;"	m	struct:RtreeCursor	file:
aPoint	tsrc/rtree.c	/^  RtreeSearchPoint *aPoint;         \/* Priority queue for search points *\/$/;"	m	struct:RtreeCursor	file:
aPool	sqlite3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPool	src/mem3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPool	tsrc/mem3.c	/^  Mem3Block *aPool;$/;"	m	struct:Mem3Global	file:
aPopulator	ext/fts5/fts5_expr.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPopulator	fts5.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPopulator	sqlite3.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPopulator	tsrc/fts5.c	/^  Fts5PoslistPopulator *aPopulator;$/;"	m	struct:Fts5ExprCtx	file:
aPoslist	ext/fts5/fts5_index.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPoslist	ext/fts5/fts5_main.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	fts5.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	fts5.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPoslist	sqlite3.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	sqlite3.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPoslist	tsrc/fts5.c	/^  const u8 *aPoslist;             \/* Position lists for current row *\/$/;"	m	struct:Fts5Sorter	file:
aPoslist	tsrc/fts5.c	/^  u8 *aPoslist;$/;"	m	struct:Fts5DoclistIter	file:
aPragmaNames	sqlite3.c	/^} aPragmaNames[] = {$/;"	v	typeref:struct:sPragmaNames	file:
aPragmaNames	src/pragma.h	/^} aPragmaNames[] = {$/;"	v	typeref:struct:sPragmaNames
aPragmaNames	tsrc/pragma.h	/^} aPragmaNames[] = {$/;"	v	typeref:struct:sPragmaNames
aPrefix	ext/fts5/fts5Int.h	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config
aPrefix	fts5.c	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config	file:
aPrefix	sqlite3.c	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config	file:
aPrefix	sqlite3.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aPrefix	src/printf.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aPrefix	tsrc/fts5.c	/^  int *aPrefix;                   \/* Sizes in bytes of nPrefix prefix indexes *\/$/;"	m	struct:Fts5Config	file:
aPrefix	tsrc/printf.c	/^static const char aPrefix[] = "-x0\\000X0";$/;"	v	file:
aQueue	ext/misc/fuzzer.c	/^  fuzzer_stem *aQueue[FUZZER_NQUEUE];  \/* Queue of stems with higher rCostX *\/$/;"	m	struct:fuzzer_cursor	file:
aReadMark	sqlite3.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aReadMark	src/wal.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aReadMark	tsrc/wal.c	/^  u32 aReadMark[WAL_NREADER];     \/* Reader marks *\/$/;"	m	struct:WalCkptInfo	file:
aReadr	sqlite3.c	/^  PmaReader *aReadr;         \/* Array of PmaReaders to merge data from *\/$/;"	m	struct:MergeEngine	file:
aReadr	src/vdbesort.c	/^  PmaReader *aReadr;         \/* Array of PmaReaders to merge data from *\/$/;"	m	struct:MergeEngine	file:
aReadr	tsrc/vdbesort.c	/^  PmaReader *aReadr;         \/* Array of PmaReaders to merge data from *\/$/;"	m	struct:MergeEngine	file:
aReal	src/test_multiplex.c	/^  } *aReal;                        \/* list of all chunks *\/$/;"	m	struct:multiplexGroup	typeref:struct:multiplexGroup::multiplexReal	file:
aRecord	ext/session/sqlite3session.c	/^  u8 *aRecord;                    \/* Buffer containing old.* record *\/$/;"	m	struct:SessionChange	file:
aRecord	sqlite3.c	/^  u8 *aRecord;                    \/* Buffer containing old.* record *\/$/;"	m	struct:SessionChange	file:
aRecord	sqlite3.c	/^  u8 *aRecord;                    \/* old.* database record *\/$/;"	m	struct:PreUpdate	file:
aRecord	src/vdbeInt.h	/^  u8 *aRecord;                    \/* old.* database record *\/$/;"	m	struct:PreUpdate
aRecord	tsrc/sqlite3session.c	/^  u8 *aRecord;                    \/* Buffer containing old.* record *\/$/;"	m	struct:SessionChange	file:
aRecord	tsrc/vdbeInt.h	/^  u8 *aRecord;                    \/* old.* database record *\/$/;"	m	struct:PreUpdate
aRef	ext/fts3/fts3_snippet.c	/^  u8 aRef[3];$/;"	m	struct:MatchinfoBuffer	file:
aRef	sqlite3.c	/^  u8 aRef[3];$/;"	m	struct:MatchinfoBuffer	file:
aRef	tsrc/fts3_snippet.c	/^  u8 aRef[3];$/;"	m	struct:MatchinfoBuffer	file:
aRegion	sqlite3.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRegion	src/os_win.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aRegion	tsrc/os_win.c	/^  } *aRegion;$/;"	m	struct:winShmNode	typeref:struct:winShmNode::ShmRegion	file:
aResult	ext/misc/nextchar.c	/^  unsigned int *aResult;            \/* Array of next characters *\/$/;"	m	struct:nextCharContext	file:
aRet	ext/fts5/fts5_test_mi.c	/^  u32 *aRet;                      \/* Array of 32-bit unsigned ints to return *\/$/;"	m	struct:Fts5MatchinfoCtx	file:
aRow	ext/fts5/fts5_test_tok.c	/^  Fts5tokRow *aRow;               \/* Array of rows to return *\/$/;"	m	struct:Fts5tokCursor	file:
aRow	sqlite3.c	/^  const u8 *aRow;       \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor	file:
aRow	src/vdbeInt.h	/^  const u8 *aRow;       \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor
aRow	tsrc/vdbeInt.h	/^  const u8 *aRow;       \/* Data for the current row, if all on one page *\/$/;"	m	struct:VdbeCursor
aRowid	sqlite3.c	/^    u8 *aRowid;                     \/* Key for WITHOUT ROWID tables *\/$/;"	m	union:Stat4Sample::__anon95	file:
aRowid	src/analyze.c	/^    u8 *aRowid;                     \/* Key for WITHOUT ROWID tables *\/$/;"	m	union:Stat4Sample::__anon51	file:
aRowid	tsrc/analyze.c	/^    u8 *aRowid;                     \/* Key for WITHOUT ROWID tables *\/$/;"	m	union:Stat4Sample::__anon16	file:
aRowidOffset	ext/fts5/fts5_index.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aRowidOffset	fts5.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aRowidOffset	sqlite3.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aRowidOffset	tsrc/fts5.c	/^  int *aRowidOffset;              \/* Array of offset to rowid fields *\/$/;"	m	struct:Fts5SegIter	file:
aSalt	sqlite3.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSalt	src/wal.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSalt	tsrc/wal.c	/^  u32 aSalt[2];                   \/* Two salt values copied from WAL header *\/$/;"	m	struct:WalIndexHdr	file:
aSample	sqlite3.c	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index	file:
aSample	src/sqliteInt.h	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index
aSample	tsrc/sqliteInt.h	/^  IndexSample *aSample;    \/* Samples of the left-most key *\/$/;"	m	struct:Index
aSavepoint	sqlite3.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aSavepoint	src/pager.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aSavepoint	tsrc/pager.c	/^  PagerSavepoint *aSavepoint; \/* Array of active savepoints *\/$/;"	m	struct:Pager	file:
aScan	sqlite3.c	/^  ScanStatus *aScan;      \/* Scan definitions for sqlite3_stmt_scanstatus() *\/$/;"	m	struct:Vdbe	file:
aScan	src/vdbeInt.h	/^  ScanStatus *aScan;      \/* Scan definitions for sqlite3_stmt_scanstatus() *\/$/;"	m	struct:Vdbe
aScan	tsrc/vdbeInt.h	/^  ScanStatus *aScan;      \/* Scan definitions for sqlite3_stmt_scanstatus() *\/$/;"	m	struct:Vdbe
aSeg	ext/fts5/fts5_index.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	ext/fts5/fts5_index.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSeg	fts5.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	fts5.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSeg	sqlite3.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	sqlite3.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSeg	tsrc/fts5.c	/^  Fts5SegIter aSeg[1];            \/* Array of segment iterators *\/$/;"	m	struct:Fts5Iter	file:
aSeg	tsrc/fts5.c	/^  Fts5StructureSegment *aSeg;     \/* Array of segments. aSeg[0] is oldest. *\/$/;"	m	struct:Fts5StructureLevel	file:
aSegment	sqlite3.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSegment	src/wal.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSegment	tsrc/wal.c	/^  } aSegment[1];                  \/* One for every 32KB page in the wal-index *\/$/;"	m	struct:WalIterator	typeref:struct:WalIterator::WalSegment	file:
aSemName	sqlite3.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSemName	src/os_unix.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSemName	tsrc/os_unix.c	/^  char aSemName[MAX_PATHNAME+2];  \/* Name of that semaphore *\/$/;"	m	struct:unixInodeInfo	file:
aSession	shell.c	/^  OpenSession aSession[4];  \/* Array of sessions.  [0] is in focus. *\/$/;"	m	struct:ShellState	file:
aSession	src/shell.c	/^  OpenSession aSession[4];  \/* Array of sessions.  [0] is in focus. *\/$/;"	m	struct:ShellState	file:
aSession	tsrc/shell.c	/^  OpenSession aSession[4];  \/* Array of sessions.  [0] is in focus. *\/$/;"	m	struct:ShellState	file:
aSlot	ext/fts5/fts5_hash.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSlot	fts5.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSlot	sqlite3.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSlot	tsrc/fts5.c	/^  Fts5HashEntry **aSlot;          \/* Array of hash slots *\/$/;"	m	struct:Fts5Hash	file:
aSortOrder	sqlite3.c	/^  u8 *aSortOrder;          \/* for each column: True==DESC, False==ASC *\/$/;"	m	struct:Index	file:
aSortOrder	sqlite3.c	/^  u8 *aSortOrder;     \/* Sort order for each column. *\/$/;"	m	struct:KeyInfo	file:
aSortOrder	src/sqliteInt.h	/^  u8 *aSortOrder;          \/* for each column: True==DESC, False==ASC *\/$/;"	m	struct:Index
aSortOrder	src/sqliteInt.h	/^  u8 *aSortOrder;     \/* Sort order for each column. *\/$/;"	m	struct:KeyInfo
aSortOrder	tsrc/sqliteInt.h	/^  u8 *aSortOrder;          \/* for each column: True==DESC, False==ASC *\/$/;"	m	struct:Index
aSortOrder	tsrc/sqliteInt.h	/^  u8 *aSortOrder;     \/* Sort order for each column. *\/$/;"	m	struct:KeyInfo
aStack	tool/offsets.c	/^  u8 *aStack[20];       \/* Page stack *\/$/;"	m	struct:GState	file:
aStat	ext/fts3/fts3_aux.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStat	sqlite3.c	/^  int aStat[3];               \/* Total cache hits, misses and writes *\/$/;"	m	struct:Pager	file:
aStat	sqlite3.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStat	src/pager.c	/^  int aStat[3];               \/* Total cache hits, misses and writes *\/$/;"	m	struct:Pager	file:
aStat	tsrc/fts3_aux.c	/^  } *aStat;$/;"	m	struct:Fts3auxCursor	typeref:struct:Fts3auxCursor::Fts3auxColstats	file:
aStat	tsrc/pager.c	/^  int aStat[3];               \/* Total cache hits, misses and writes *\/$/;"	m	struct:Pager	file:
aState	ext/misc/regexp.c	/^  ReStateNumber *aState;      \/* Current states *\/$/;"	m	struct:ReStateSet	file:
aStatic	sqlite3.c	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	sqlite3.c	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause	file:
aStatic	src/test_mutex.c	/^  sqlite3_mutex aStatic[STATIC_MUTEXES]; \/* The static mutexes *\/$/;"	m	struct:test_mutex_globals	file:
aStatic	src/whereInt.h	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause
aStatic	src/whereInt.h	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause
aStatic	tsrc/whereInt.h	/^  WhereTerm aStatic[1];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause
aStatic	tsrc/whereInt.h	/^  WhereTerm aStatic[8];    \/* Initial static space for a[] *\/$/;"	m	struct:WhereClause
aStmt	ext/fts3/fts3Int.h	/^  sqlite3_stmt *aStmt[40];$/;"	m	struct:Fts3Table
aStmt	ext/fts5/fts5_storage.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aStmt	fts5.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aStmt	sqlite3.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aStmt	sqlite3.c	/^  sqlite3_stmt *aStmt[40];$/;"	m	struct:Fts3Table	file:
aStmt	tsrc/fts3Int.h	/^  sqlite3_stmt *aStmt[40];$/;"	m	struct:Fts3Table
aStmt	tsrc/fts5.c	/^  sqlite3_stmt *aStmt[11];$/;"	m	struct:Fts5Storage	file:
aSyscall	sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aSyscall	sqlite3.c	/^} aSyscall[] = {$/;"	v	typeref:struct:win_syscall	file:
aSyscall	src/os_unix.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aSyscall	src/os_win.c	/^} aSyscall[] = {$/;"	v	typeref:struct:win_syscall	file:
aSyscall	src/test_syscall.c	/^} aSyscall[] = {$/;"	v	typeref:struct:TestSyscallArray
aSyscall	tsrc/os_unix.c	/^} aSyscall[] = {$/;"	v	typeref:struct:unix_syscall	file:
aSyscall	tsrc/os_win.c	/^} aSyscall[] = {$/;"	v	typeref:struct:win_syscall	file:
aTableLock	sqlite3.c	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse	file:
aTableLock	src/sqliteInt.h	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse
aTableLock	tsrc/sqliteInt.h	/^  TableLock *aTableLock; \/* Required table locks for shared-cache mode *\/$/;"	m	struct:Parse
aTask	sqlite3.c	/^  SortSubtask aTask[1];           \/* One or more subtasks *\/$/;"	m	struct:VdbeSorter	file:
aTask	src/vdbesort.c	/^  SortSubtask aTask[1];           \/* One or more subtasks *\/$/;"	m	struct:VdbeSorter	file:
aTask	tsrc/vdbesort.c	/^  SortSubtask aTask[1];           \/* One or more subtasks *\/$/;"	m	struct:VdbeSorter	file:
aTempReg	sqlite3.c	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse	file:
aTempReg	src/sqliteInt.h	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse
aTempReg	tsrc/sqliteInt.h	/^  int aTempReg[8];     \/* Holding area for temporary registers *\/$/;"	m	struct:Parse
aTerm	ext/fts3/fts3_snippet.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aTerm	ext/fts5/fts5_expr.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aTerm	fts5.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aTerm	sqlite3.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aTerm	sqlite3.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aTerm	tsrc/fts3_snippet.c	/^  TermOffset *aTerm;$/;"	m	struct:TermOffsetCtx	file:
aTerm	tsrc/fts5.c	/^  Fts5ExprTerm aTerm[1];          \/* Terms that make up this phrase *\/$/;"	m	struct:Fts5ExprPhrase	file:
aText	test/threadtest3.c	/^  char **aText;                   \/* Stored text results *\/$/;"	m	struct:Sqlite	file:
aToken	ext/fts3/fts3Int.h	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase
aToken	ext/fts3/fts3_test.c	/^  NearToken *aToken;              \/* Token array *\/$/;"	m	struct:NearDocument	file:
aToken	ext/fts3/fts3_test.c	/^  NearToken aToken[NM_MAX_TOKEN]; \/* Array of tokens in this phrase *\/$/;"	m	struct:NearPhrase	file:
aToken	sqlite3.c	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
aToken	tsrc/fts3Int.h	/^  Fts3PhraseToken aToken[1]; \/* One entry for each token in the phrase *\/$/;"	m	struct:Fts3Phrase
aTokenChar	ext/fts5/fts5_tokenize.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	ext/fts5/fts5_tokenize.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTokenChar	fts5.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	fts5.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTokenChar	sqlite3.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	sqlite3.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTokenChar	tsrc/fts5.c	/^  unsigned char aTokenChar[128];  \/* ASCII range token characters *\/$/;"	m	struct:Unicode61Tokenizer	file:
aTokenChar	tsrc/fts5.c	/^  unsigned char aTokenChar[128];$/;"	m	struct:AsciiTokenizer	file:
aTotalSize	ext/fts5/fts5_storage.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/ $/;"	m	struct:Fts5Storage	file:
aTotalSize	fts5.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/ $/;"	m	struct:Fts5Storage	file:
aTotalSize	sqlite3.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/ $/;"	m	struct:Fts5Storage	file:
aTotalSize	tsrc/fts5.c	/^  i64 *aTotalSize;                \/* Total sizes of each column *\/ $/;"	m	struct:Fts5Storage	file:
aTree	sqlite3.c	/^  int *aTree;                \/* Current state of incremental merge *\/$/;"	m	struct:MergeEngine	file:
aTree	src/vdbesort.c	/^  int *aTree;                \/* Current state of incremental merge *\/$/;"	m	struct:MergeEngine	file:
aTree	tsrc/vdbesort.c	/^  int *aTree;                \/* Current state of incremental merge *\/$/;"	m	struct:MergeEngine	file:
aType	sqlite3.c	/^  u32 aType[1];         \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor	file:
aType	src/vdbeInt.h	/^  u32 aType[1];         \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor
aType	tsrc/vdbeInt.h	/^  u32 aType[1];         \/* Type values for all entries in the record *\/$/;"	m	struct:VdbeCursor
aUp	ext/misc/json1.c	/^  u32 *aUp;          \/* Index of parent of each node *\/$/;"	m	struct:JsonParse	file:
aUp	sqlite3.c	/^  u32 *aUp;          \/* Index of parent of each node *\/$/;"	m	struct:JsonParse	file:
aUp	tsrc/json1.c	/^  u32 *aUp;          \/* Index of parent of each node *\/$/;"	m	struct:JsonParse	file:
aVTrans	sqlite3.c	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3	file:
aVTrans	src/sqliteInt.h	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3
aVTrans	tsrc/sqliteInt.h	/^  VTable **aVTrans;             \/* Virtual tables with open transactions *\/$/;"	m	struct:sqlite3
aVar	sqlite3.c	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe	file:
aVar	src/vdbeInt.h	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe
aVar	tsrc/vdbeInt.h	/^  Mem *aVar;              \/* Values for the OP_Variable opcode. *\/$/;"	m	struct:Vdbe
aVfsCnt	ext/misc/vfsstat.c	/^static sqlite3_uint64 aVfsCnt[VFSSTAT_MXCNT];$/;"	v	file:
aWalData	sqlite3.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aWalData	src/pager.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aWalData	tsrc/pager.c	/^  u32 aWalData[WAL_SAVEPOINT_NDATA];        \/* WAL savepoint context *\/$/;"	m	struct:PagerSavepoint	file:
aaOutput	ext/fts3/fts3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
aaOutput	sqlite3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
aaOutput	tsrc/fts3.c	/^  char *aaOutput[16];             \/* Malloc'd output buffers *\/$/;"	m	struct:TermSelect	file:
abIndexed	ext/rbu/sqlite3rbu.c	/^  u8 *abIndexed;                  \/* Array of flags, set on indexed & PK cols *\/$/;"	m	struct:RbuObjIter	file:
abIndexed	sqlite3.c	/^  u8 *abIndexed;                  \/* Array of flags, set on indexed & PK cols *\/$/;"	m	struct:RbuObjIter	file:
abIndexed	tsrc/sqlite3rbu.c	/^  u8 *abIndexed;                  \/* Array of flags, set on indexed & PK cols *\/$/;"	m	struct:RbuObjIter	file:
abNotNull	ext/rbu/sqlite3rbu.c	/^  u8 *abNotNull;                  \/* Array of flags, set on NOT NULL columns *\/$/;"	m	struct:RbuObjIter	file:
abNotNull	sqlite3.c	/^  u8 *abNotNull;                  \/* Array of flags, set on NOT NULL columns *\/$/;"	m	struct:RbuObjIter	file:
abNotNull	tsrc/sqlite3rbu.c	/^  u8 *abNotNull;                  \/* Array of flags, set on NOT NULL columns *\/$/;"	m	struct:RbuObjIter	file:
abNotindexed	ext/fts3/fts3Int.h	/^  u8 *abNotindexed;               \/* True for 'notindexed' columns *\/$/;"	m	struct:Fts3Table
abNotindexed	sqlite3.c	/^  u8 *abNotindexed;               \/* True for 'notindexed' columns *\/$/;"	m	struct:Fts3Table	file:
abNotindexed	tsrc/fts3Int.h	/^  u8 *abNotindexed;               \/* True for 'notindexed' columns *\/$/;"	m	struct:Fts3Table
abPK	ext/session/sqlite3session.c	/^  u8 *abPK;                       \/* Array of primary key flags *\/$/;"	m	struct:SessionTable	file:
abPK	ext/session/sqlite3session.c	/^  u8 *abPK;                       \/* Boolean array - true if column is in PK *\/$/;"	m	struct:SessionApplyCtx	file:
abPK	ext/session/sqlite3session.c	/^  u8 *abPK;                       \/* Primary key array *\/$/;"	m	struct:sqlite3_changeset_iter	file:
abPK	sqlite3.c	/^  u8 *abPK;                       \/* Array of primary key flags *\/$/;"	m	struct:SessionTable	file:
abPK	sqlite3.c	/^  u8 *abPK;                       \/* Boolean array - true if column is in PK *\/$/;"	m	struct:SessionApplyCtx	file:
abPK	sqlite3.c	/^  u8 *abPK;                       \/* Primary key array *\/$/;"	m	struct:sqlite3_changeset_iter	file:
abPK	tsrc/sqlite3session.c	/^  u8 *abPK;                       \/* Array of primary key flags *\/$/;"	m	struct:SessionTable	file:
abPK	tsrc/sqlite3session.c	/^  u8 *abPK;                       \/* Boolean array - true if column is in PK *\/$/;"	m	struct:SessionApplyCtx	file:
abPK	tsrc/sqlite3session.c	/^  u8 *abPK;                       \/* Primary key array *\/$/;"	m	struct:sqlite3_changeset_iter	file:
abTblPk	ext/rbu/sqlite3rbu.c	/^  u8 *abTblPk;                    \/* Array of flags, set on target PK columns *\/$/;"	m	struct:RbuObjIter	file:
abTblPk	sqlite3.c	/^  u8 *abTblPk;                    \/* Array of flags, set on target PK columns *\/$/;"	m	struct:RbuObjIter	file:
abTblPk	tsrc/sqlite3rbu.c	/^  u8 *abTblPk;                    \/* Array of flags, set on target PK columns *\/$/;"	m	struct:RbuObjIter	file:
abUnindexed	ext/fts5/fts5Int.h	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config
abUnindexed	fts5.c	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config	file:
abUnindexed	sqlite3.c	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config	file:
abUnindexed	tsrc/fts5.c	/^  u8 *abUnindexed;                \/* True for unindexed columns *\/$/;"	m	struct:Fts5Config	file:
abendError	tool/fuzzershell.c	/^static void abendError(const char *zFormat, ...){$/;"	f	file:
absFunc	sqlite3.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
absFunc	src/func.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
absFunc	tsrc/func.c	/^static void absFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
abuse_create_function	src/test_func.c	/^static int SQLITE_TCLAPI abuse_create_function($/;"	f	file:
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
accError	sqlite3.c	/^  u8   accError;       \/* STRACCUM_NOMEM or STRACCUM_TOOBIG *\/$/;"	m	struct:StrAccum	file:
accError	src/sqliteInt.h	/^  u8   accError;       \/* STRACCUM_NOMEM or STRACCUM_TOOBIG *\/$/;"	m	struct:StrAccum
accError	tsrc/sqliteInt.h	/^  u8   accError;       \/* STRACCUM_NOMEM or STRACCUM_TOOBIG *\/$/;"	m	struct:StrAccum
accept	tool/lemon.c	/^  char *accept;            \/* Code to execute when the parser excepts *\/$/;"	m	struct:lemon	file:
access	shell.c	106;"	d	file:
access	src/shell.c	106;"	d	file:
access	tsrc/shell.c	106;"	d	file:
accessPayload	sqlite3.c	/^static int accessPayload($/;"	f	file:
accessPayload	src/btree.c	/^static int accessPayload($/;"	f	file:
accessPayload	tsrc/btree.c	/^static int accessPayload($/;"	f	file:
action	tool/lemon.c	/^  int action;                \/* Action to take on the given lookahead *\/$/;"	m	struct:lookahead_action	file:
action	tool/lemon.c	/^struct action {$/;"	s	file:
actionName	sqlite3.c	/^static const char *actionName(u8 action){$/;"	f	file:
actionName	src/pragma.c	/^static const char *actionName(u8 action){$/;"	f	file:
actionName	tsrc/pragma.c	/^static const char *actionName(u8 action){$/;"	f	file:
actioncmp	tool/lemon.c	/^static int actioncmp($/;"	f	file:
acttab	tool/lemon.c	/^struct acttab {$/;"	s	file:
acttab	tool/lemon.c	/^typedef struct acttab acttab;$/;"	t	typeref:struct:acttab	file:
acttab_action	tool/lemon.c	/^void acttab_action(acttab *p, int lookahead, int action){$/;"	f
acttab_alloc	tool/lemon.c	/^acttab *acttab_alloc(void){$/;"	f
acttab_free	tool/lemon.c	/^void acttab_free(acttab *p){$/;"	f
acttab_insert	tool/lemon.c	/^int acttab_insert(acttab *p){$/;"	f
acttab_size	tool/lemon.c	588;"	d	file:
acttab_yyaction	tool/lemon.c	591;"	d	file:
acttab_yylookahead	tool/lemon.c	594;"	d	file:
actualWidth	shell.c	/^  int actualWidth[100];  \/* Actual width of each column *\/$/;"	m	struct:ShellState	file:
actualWidth	src/shell.c	/^  int actualWidth[100];  \/* Actual width of each column *\/$/;"	m	struct:ShellState	file:
actualWidth	tsrc/shell.c	/^  int actualWidth[100];  \/* Actual width of each column *\/$/;"	m	struct:ShellState	file:
addAggInfoColumn	sqlite3.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoColumn	src/expr.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoColumn	tsrc/expr.c	/^static int addAggInfoColumn(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	sqlite3.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	src/expr.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addAggInfoFunc	tsrc/expr.c	/^static int addAggInfoFunc(sqlite3 *db, AggInfo *pInfo){$/;"	f	file:
addArgumentToVtab	sqlite3.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addArgumentToVtab	src/vtab.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addArgumentToVtab	tsrc/vtab.c	/^static void addArgumentToVtab(Parse *pParse){$/;"	f	file:
addAsyncWrite	ext/async/sqlite3async.c	/^static void addAsyncWrite(AsyncWrite *pWrite){$/;"	f	file:
addCharToHash	test/wordcount.c	/^static void addCharToHash(unsigned int *a, unsigned char x){$/;"	f	file:
addColOffset	sqlite3.c	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table	file:
addColOffset	src/sqliteInt.h	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table
addColOffset	tsrc/sqliteInt.h	/^  int addColOffset;    \/* Offset in CREATE TABLE stmt to add a new column *\/$/;"	m	struct:Table
addModuleArgument	sqlite3.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addModuleArgument	src/vtab.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addModuleArgument	tsrc/vtab.c	/^static void addModuleArgument(sqlite3 *db, Table *pTable, char *zArg){$/;"	f	file:
addNewAsyncWrite	ext/async/sqlite3async.c	/^static int addNewAsyncWrite($/;"	f	file:
addPos	ext/fts1/fts1.c	/^static void addPos(DocList *d, int iColumn, int iPos){$/;"	f	file:
addPos	tsrc/fts1.c	/^static void addPos(DocList *d, int iColumn, int iPos){$/;"	f	file:
addToBlockedList	sqlite3.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToBlockedList	src/notify.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToBlockedList	tsrc/notify.c	/^static void addToBlockedList(sqlite3 *db){$/;"	f	file:
addToSavepointBitvecs	sqlite3.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToSavepointBitvecs	src/pager.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToSavepointBitvecs	tsrc/pager.c	/^static int addToSavepointBitvecs(Pager *pPager, Pgno pgno){$/;"	f	file:
addToVTrans	sqlite3.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addToVTrans	src/vtab.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addToVTrans	tsrc/vtab.c	/^static void addToVTrans(sqlite3 *db, VTable *pVTab){$/;"	f	file:
addWhereTerm	sqlite3.c	/^static void addWhereTerm($/;"	f	file:
addWhereTerm	src/select.c	/^static void addWhereTerm($/;"	f	file:
addWhereTerm	tsrc/select.c	/^static void addWhereTerm($/;"	f	file:
add_alignment_test_collations	src/test1.c	/^static int SQLITE_TCLAPI add_alignment_test_collations($/;"	f	file:
add_column_fullname	parse.y	/^add_column_fullname ::= fullname(X). {$/;"	l
add_column_fullname	src/parse.y	/^add_column_fullname ::= fullname(X). {$/;"	l
add_test_suite	test/releasetest.tcl	/^proc add_test_suite {listvar name testtarget config} {$/;"	p
addrBody	sqlite3.c	/^  int addrBody;         \/* Beginning of the body of this loop *\/$/;"	m	struct:WhereLevel	file:
addrBody	src/whereInt.h	/^  int addrBody;         \/* Beginning of the body of this loop *\/$/;"	m	struct:WhereLevel
addrBody	tsrc/whereInt.h	/^  int addrBody;         \/* Beginning of the body of this loop *\/$/;"	m	struct:WhereLevel
addrBrk	sqlite3.c	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel	file:
addrBrk	src/whereInt.h	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel
addrBrk	tsrc/whereInt.h	/^  int addrBrk;          \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereLevel
addrCont	sqlite3.c	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel	file:
addrCont	src/whereInt.h	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel
addrCont	tsrc/whereInt.h	/^  int addrCont;         \/* Jump here to continue with the next loop cycle *\/$/;"	m	struct:WhereLevel
addrCrTab	sqlite3.c	/^  int addrCrTab;       \/* Address of OP_CreateTable opcode on CREATE TABLE *\/$/;"	m	struct:Parse	file:
addrCrTab	src/sqliteInt.h	/^  int addrCrTab;       \/* Address of OP_CreateTable opcode on CREATE TABLE *\/$/;"	m	struct:Parse
addrCrTab	tsrc/sqliteInt.h	/^  int addrCrTab;       \/* Address of OP_CreateTable opcode on CREATE TABLE *\/$/;"	m	struct:Parse
addrExplain	sqlite3.c	/^  int addrExplain;                \/* OP_Explain for loop *\/$/;"	m	struct:ScanStatus	file:
addrExplain	src/vdbeInt.h	/^  int addrExplain;                \/* OP_Explain for loop *\/$/;"	m	struct:ScanStatus
addrExplain	tsrc/vdbeInt.h	/^  int addrExplain;                \/* OP_Explain for loop *\/$/;"	m	struct:ScanStatus
addrFillSub	sqlite3.c	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item	file:
addrFillSub	src/sqliteInt.h	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item
addrFillSub	tsrc/sqliteInt.h	/^    int addrFillSub;  \/* Address of subroutine to manifest a subquery *\/$/;"	m	struct:SrcList::SrcList_item
addrFirst	sqlite3.c	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel	file:
addrFirst	src/whereInt.h	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel
addrFirst	tsrc/whereInt.h	/^  int addrFirst;        \/* First instruction of interior of the loop *\/$/;"	m	struct:WhereLevel
addrInTop	sqlite3.c	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon96::__anon97::InLoop	file:
addrInTop	src/whereInt.h	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon45::__anon46::InLoop
addrInTop	tsrc/whereInt.h	/^        int addrInTop;         \/* Top of the IN loop *\/$/;"	m	struct:WhereLevel::__anon10::__anon11::InLoop
addrLikeRep	sqlite3.c	/^  int addrLikeRep;      \/* LIKE range processing address *\/$/;"	m	struct:WhereLevel	file:
addrLikeRep	src/whereInt.h	/^  int addrLikeRep;      \/* LIKE range processing address *\/$/;"	m	struct:WhereLevel
addrLikeRep	tsrc/whereInt.h	/^  int addrLikeRep;      \/* LIKE range processing address *\/$/;"	m	struct:WhereLevel
addrLoop	sqlite3.c	/^  int addrLoop;                   \/* Address of "loops" counter *\/$/;"	m	struct:ScanStatus	file:
addrLoop	src/vdbeInt.h	/^  int addrLoop;                   \/* Address of "loops" counter *\/$/;"	m	struct:ScanStatus
addrLoop	tsrc/vdbeInt.h	/^  int addrLoop;                   \/* Address of "loops" counter *\/$/;"	m	struct:ScanStatus
addrNxt	sqlite3.c	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel	file:
addrNxt	src/whereInt.h	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel
addrNxt	tsrc/whereInt.h	/^  int addrNxt;          \/* Jump here to start the next IN combination *\/$/;"	m	struct:WhereLevel
addrOpenEphm	sqlite3.c	/^  int addrOpenEphm[2];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select	file:
addrOpenEphm	src/sqliteInt.h	/^  int addrOpenEphm[2];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select
addrOpenEphm	tsrc/sqliteInt.h	/^  int addrOpenEphm[2];   \/* OP_OpenEphem opcodes related to this select *\/$/;"	m	struct:Select
addrSkip	sqlite3.c	/^  int addrSkip;         \/* Jump here for next iteration of skip-scan *\/$/;"	m	struct:WhereLevel	file:
addrSkip	src/whereInt.h	/^  int addrSkip;         \/* Jump here for next iteration of skip-scan *\/$/;"	m	struct:WhereLevel
addrSkip	tsrc/whereInt.h	/^  int addrSkip;         \/* Jump here for next iteration of skip-scan *\/$/;"	m	struct:WhereLevel
addrSortIndex	sqlite3.c	/^  int addrSortIndex;    \/* Address of the OP_SorterOpen or OP_OpenEphemeral *\/$/;"	m	struct:SortCtx	file:
addrSortIndex	src/select.c	/^  int addrSortIndex;    \/* Address of the OP_SorterOpen or OP_OpenEphemeral *\/$/;"	m	struct:SortCtx	file:
addrSortIndex	tsrc/select.c	/^  int addrSortIndex;    \/* Address of the OP_SorterOpen or OP_OpenEphemeral *\/$/;"	m	struct:SortCtx	file:
addrTnct	sqlite3.c	/^  int addrTnct;   \/* Address of OP_OpenEphemeral opcode for tabTnct *\/$/;"	m	struct:DistinctCtx	file:
addrTnct	src/select.c	/^  int addrTnct;   \/* Address of OP_OpenEphemeral opcode for tabTnct *\/$/;"	m	struct:DistinctCtx	file:
addrTnct	tsrc/select.c	/^  int addrTnct;   \/* Address of OP_OpenEphemeral opcode for tabTnct *\/$/;"	m	struct:DistinctCtx	file:
addrVisit	sqlite3.c	/^  int addrVisit;                  \/* Address of "rows visited" counter *\/$/;"	m	struct:ScanStatus	file:
addrVisit	sqlite3.c	/^  int addrVisit;        \/* Address at which row is visited *\/$/;"	m	struct:WhereLevel	file:
addrVisit	src/vdbeInt.h	/^  int addrVisit;                  \/* Address of "rows visited" counter *\/$/;"	m	struct:ScanStatus
addrVisit	src/whereInt.h	/^  int addrVisit;        \/* Address at which row is visited *\/$/;"	m	struct:WhereLevel
addrVisit	tsrc/vdbeInt.h	/^  int addrVisit;                  \/* Address of "rows visited" counter *\/$/;"	m	struct:ScanStatus
addrVisit	tsrc/whereInt.h	/^  int addrVisit;        \/* Address at which row is visited *\/$/;"	m	struct:WhereLevel
adjustStats	sqlite3.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
adjustStats	src/mem2.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
adjustStats	tsrc/mem2.c	/^static void adjustStats(int iSize, int increment){$/;"	f	file:
affSdst	sqlite3.c	/^  char affSdst;        \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest	file:
affSdst	src/sqliteInt.h	/^  char affSdst;        \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest
affSdst	tsrc/sqliteInt.h	/^  char affSdst;        \/* Affinity used when eDest==SRT_Set *\/$/;"	m	struct:SelectDest
affinity	sqlite3.c	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr	file:
affinity	sqlite3.c	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column	file:
affinity	src/sqliteInt.h	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr
affinity	src/sqliteInt.h	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column
affinity	tsrc/sqliteInt.h	/^  char affinity;         \/* The affinity of the column or 0 if not a column *\/$/;"	m	struct:Expr
affinity	tsrc/sqliteInt.h	/^  char affinity;   \/* One of the SQLITE_AFF_... values *\/$/;"	m	struct:Column
afpCheckReservedLock	sqlite3.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpCheckReservedLock	src/os_unix.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpCheckReservedLock	tsrc/os_unix.c	/^static int afpCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
afpClose	sqlite3.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpClose	src/os_unix.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpClose	tsrc/os_unix.c	/^static int afpClose(sqlite3_file *id) {$/;"	f	file:
afpLock	sqlite3.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLock	src/os_unix.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLock	tsrc/os_unix.c	/^static int afpLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
afpLockingContext	sqlite3.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	sqlite3.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpLockingContext	src/os_unix.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	src/os_unix.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpLockingContext	tsrc/os_unix.c	/^struct afpLockingContext {$/;"	s	file:
afpLockingContext	tsrc/os_unix.c	/^typedef struct afpLockingContext afpLockingContext;$/;"	t	typeref:struct:afpLockingContext	file:
afpSetLock	sqlite3.c	/^static int afpSetLock($/;"	f	file:
afpSetLock	src/os_unix.c	/^static int afpSetLock($/;"	f	file:
afpSetLock	tsrc/os_unix.c	/^static int afpSetLock($/;"	f	file:
afpUnlock	sqlite3.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpUnlock	src/os_unix.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpUnlock	tsrc/os_unix.c	/^static int afpUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
afpfsByteRangeLock2FSCTL	sqlite3.c	31953;"	d	file:
afpfsByteRangeLock2FSCTL	src/os_unix.c	2628;"	d	file:
afpfsByteRangeLock2FSCTL	tsrc/os_unix.c	2628;"	d	file:
aggregate_context	sqlite3.c	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_context	sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_context	src/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_context	tsrc/sqlite3ext.h	/^  void * (*aggregate_context)(sqlite3_context*,int nBytes);$/;"	m	struct:sqlite3_api_routines
aggregate_count	sqlite3.c	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
aggregate_count	sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
aggregate_count	src/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
aggregate_count	tsrc/sqlite3ext.h	/^  int  (*aggregate_count)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
ai	sqlite3.c	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::p4union	file:
ai	src/vdbe.h	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::p4union
ai	tsrc/vdbe.h	/^    int *ai;               \/* Used when p4type is P4_INTARRAY *\/$/;"	m	union:VdbeOp::p4union
aiClass	sqlite3.c	/^static const unsigned char aiClass[] = {$/;"	v	file:
aiClass	src/tokenize.c	/^static const unsigned char aiClass[] = {$/;"	v	file:
aiClass	tsrc/tokenize.c	/^static const unsigned char aiClass[] = {$/;"	v	file:
aiCol	ext/fts5/fts5Int.h	/^  int aiCol[1];$/;"	m	struct:Fts5Colset
aiCol	fts5.c	/^  int aiCol[1];$/;"	m	struct:Fts5Colset	file:
aiCol	sqlite3.c	/^    int *aiCol;                                \/* array of column indexes *\/$/;"	m	union:Walker::__anon87	file:
aiCol	sqlite3.c	/^  int aiCol[1];$/;"	m	struct:Fts5Colset	file:
aiCol	src/sqliteInt.h	/^    int *aiCol;                                \/* array of column indexes *\/$/;"	m	union:Walker::__anon61
aiCol	tsrc/fts5.c	/^  int aiCol[1];$/;"	m	struct:Fts5Colset	file:
aiCol	tsrc/sqliteInt.h	/^    int *aiCol;                                \/* array of column indexes *\/$/;"	m	union:Walker::__anon29
aiColumn	sqlite3.c	/^  i16 *aiColumn;           \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index	file:
aiColumn	sqlite3.c	/^  i16 aiColumn[11];          \/* Corresponding column number in the eq-class *\/$/;"	m	struct:WhereScan	file:
aiColumn	src/sqliteInt.h	/^  i16 *aiColumn;           \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index
aiColumn	src/whereInt.h	/^  i16 aiColumn[11];          \/* Corresponding column number in the eq-class *\/$/;"	m	struct:WhereScan
aiColumn	tsrc/sqliteInt.h	/^  i16 *aiColumn;           \/* Which columns are used by this index.  1st is 0 *\/$/;"	m	struct:Index
aiColumn	tsrc/whereInt.h	/^  i16 aiColumn[11];          \/* Corresponding column number in the eq-class *\/$/;"	m	struct:WhereScan
aiCur	sqlite3.c	/^  int aiCur[11];             \/* Cursors in the equivalence class *\/$/;"	m	struct:WhereScan	file:
aiCur	src/whereInt.h	/^  int aiCur[11];             \/* Cursors in the equivalence class *\/$/;"	m	struct:WhereScan
aiCur	tsrc/whereInt.h	/^  int aiCur[11];             \/* Cursors in the equivalence class *\/$/;"	m	struct:WhereScan
aiCurOnePass	sqlite3.c	/^  int aiCurOnePass[2];      \/* OP_OpenWrite cursors for the ONEPASS opt *\/$/;"	m	struct:WhereInfo	file:
aiCurOnePass	src/whereInt.h	/^  int aiCurOnePass[2];      \/* OP_OpenWrite cursors for the ONEPASS opt *\/$/;"	m	struct:WhereInfo
aiCurOnePass	tsrc/whereInt.h	/^  int aiCurOnePass[2];      \/* OP_OpenWrite cursors for the ONEPASS opt *\/$/;"	m	struct:WhereInfo
aiException	ext/fts3/fts3_unicode.c	/^  int *aiException;$/;"	m	struct:unicode_tokenizer	file:
aiException	ext/fts5/fts5_tokenize.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiException	fts5.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiException	sqlite3.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiException	sqlite3.c	/^  int *aiException;$/;"	m	struct:unicode_tokenizer	file:
aiException	tsrc/fts3_unicode.c	/^  int *aiException;$/;"	m	struct:unicode_tokenizer	file:
aiException	tsrc/fts5.c	/^  int *aiException;$/;"	m	struct:Unicode61Tokenizer	file:
aiFreelist	sqlite3.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiFreelist	src/mem5.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiFreelist	tsrc/mem5.c	/^  int aiFreelist[LOGMAX+1];$/;"	m	struct:Mem5Global	file:
aiHash	sqlite3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiHash	src/mem3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiHash	tsrc/mem3.c	/^  u32 aiHash[N_HASH];        \/* For sizes MX_SMALL+1 and larger *\/$/;"	m	struct:Mem3Global	file:
aiIdx	sqlite3.c	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor	file:
aiIdx	src/btreeInt.h	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor
aiIdx	tsrc/btreeInt.h	/^  u16 aiIdx[BTCURSOR_MAX_DEPTH];        \/* Current index in apPage[i] *\/$/;"	m	struct:BtCursor
aiIndent	shell.c	/^  int *aiIndent;         \/* Array of indents used in MODE_Explain *\/$/;"	m	struct:ShellState	file:
aiIndent	src/shell.c	/^  int *aiIndent;         \/* Array of indents used in MODE_Explain *\/$/;"	m	struct:ShellState	file:
aiIndent	tsrc/shell.c	/^  int *aiIndent;         \/* Array of indents used in MODE_Explain *\/$/;"	m	struct:ShellState	file:
aiOvfl	sqlite3.c	/^  u16 aiOvfl[5];       \/* Insert the i-th overflow cell before the aiOvfl-th$/;"	m	struct:MemPage	file:
aiOvfl	src/btreeInt.h	/^  u16 aiOvfl[5];       \/* Insert the i-th overflow cell before the aiOvfl-th$/;"	m	struct:MemPage
aiOvfl	tsrc/btreeInt.h	/^  u16 aiOvfl[5];       \/* Insert the i-th overflow cell before the aiOvfl-th$/;"	m	struct:MemPage
aiRowEst	sqlite3.c	/^  tRowcnt *aiRowEst;       \/* Non-logarithmic stat1 data for this index *\/$/;"	m	struct:Index	file:
aiRowEst	src/sqliteInt.h	/^  tRowcnt *aiRowEst;       \/* Non-logarithmic stat1 data for this index *\/$/;"	m	struct:Index
aiRowEst	tsrc/sqliteInt.h	/^  tRowcnt *aiRowEst;       \/* Non-logarithmic stat1 data for this index *\/$/;"	m	struct:Index
aiRowLogEst	sqlite3.c	/^  LogEst *aiRowLogEst;     \/* From ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index	file:
aiRowLogEst	src/sqliteInt.h	/^  LogEst *aiRowLogEst;     \/* From ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index
aiRowLogEst	tsrc/sqliteInt.h	/^  LogEst *aiRowLogEst;     \/* From ANALYZE: Est. rows selected by each column *\/$/;"	m	struct:Index
aiSmall	sqlite3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
aiSmall	src/mem3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
aiSmall	tsrc/mem3.c	/^  u32 aiSmall[MX_SMALL-1];   \/* For sizes 2 through MX_SMALL, inclusive *\/$/;"	m	struct:Mem3Global	file:
aiSrcOrder	ext/rbu/sqlite3rbu.c	/^  int *aiSrcOrder;                \/* src table col -> target table col *\/$/;"	m	struct:RbuObjIter	file:
aiSrcOrder	sqlite3.c	/^  int *aiSrcOrder;                \/* src table col -> target table col *\/$/;"	m	struct:RbuObjIter	file:
aiSrcOrder	tsrc/sqlite3rbu.c	/^  int *aiSrcOrder;                \/* src table col -> target table col *\/$/;"	m	struct:RbuObjIter	file:
alarmBusy	sqlite3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmBusy	src/mem3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmBusy	tsrc/mem3.c	/^  int alarmBusy;$/;"	m	struct:Mem3Global	file:
alarmThreshold	sqlite3.c	/^  sqlite3_int64 alarmThreshold; \/* The soft heap limit *\/$/;"	m	struct:Mem0Global	file:
alarmThreshold	src/malloc.c	/^  sqlite3_int64 alarmThreshold; \/* The soft heap limit *\/$/;"	m	struct:Mem0Global	file:
alarmThreshold	tsrc/malloc.c	/^  sqlite3_int64 alarmThreshold; \/* The soft heap limit *\/$/;"	m	struct:Mem0Global	file:
alias	tool/lemon.c	/^  const char *alias[MAXRHS]; \/* Aliases for each RHS symbol (or NULL) *\/$/;"	m	struct:pstate	file:
alignmentCollFunc	src/test1.c	/^static int alignmentCollFunc($/;"	f	file:
allLogs	ext/misc/vfslog.c	/^static VLogLog *allLogs = 0;$/;"	v	file:
allSpaces	sqlite3.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
allSpaces	src/main.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
allSpaces	tsrc/main.c	/^static int allSpaces(const char *z, int n){$/;"	f	file:
all_descendents	tool/stack_usage.tcl	/^proc all_descendents {root} {$/;"	p
all_stop	test/threadtest2.c	/^volatile int all_stop = 0;$/;"	v
all_tables_sql	tool/sqldiff.c	/^const char *all_tables_sql(){$/;"	f
allcksum	test/tester.tcl	/^proc allcksum {{db db}} {$/;"	p
allocSpace	sqlite3.c	/^static void *allocSpace($/;"	f	file:
allocSpace	src/vdbeaux.c	/^static void *allocSpace($/;"	f	file:
allocSpace	tsrc/vdbeaux.c	/^static void *allocSpace($/;"	f	file:
allocVdbe	sqlite3.c	/^static SQLITE_NOINLINE Vdbe *allocVdbe(Parse *pParse){$/;"	f	file:
allocVdbe	src/select.c	/^static SQLITE_NOINLINE Vdbe *allocVdbe(Parse *pParse){$/;"	f	file:
allocVdbe	tsrc/select.c	/^static SQLITE_NOINLINE Vdbe *allocVdbe(Parse *pParse){$/;"	f	file:
allocateBtreePage	sqlite3.c	/^static int allocateBtreePage($/;"	f	file:
allocateBtreePage	src/btree.c	/^static int allocateBtreePage($/;"	f	file:
allocateBtreePage	tsrc/btree.c	/^static int allocateBtreePage($/;"	f	file:
allocateCursor	sqlite3.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateCursor	src/vdbe.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateCursor	tsrc/vdbe.c	/^static VdbeCursor *allocateCursor($/;"	f	file:
allocateIndexInfo	sqlite3.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateIndexInfo	src/where.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateIndexInfo	tsrc/where.c	/^static sqlite3_index_info *allocateIndexInfo($/;"	f	file:
allocateSpace	sqlite3.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateSpace	src/btree.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateSpace	tsrc/btree.c	/^static int allocateSpace(MemPage *pPage, int nByte, int *pIdx){$/;"	f	file:
allocateTempSpace	sqlite3.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allocateTempSpace	src/btree.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
allocateTempSpace	tsrc/btree.c	/^static void allocateTempSpace(BtShared *pBt){$/;"	f	file:
alloced	ext/fts1/fts1.c	/^  int alloced;  \/* Space allocated for s[] *\/ $/;"	m	struct:StringBuffer	file:
alloced	tsrc/fts1.c	/^  int alloced;  \/* Space allocated for s[] *\/ $/;"	m	struct:StringBuffer	file:
allowedOp	sqlite3.c	/^static int allowedOp(int op){$/;"	f	file:
allowedOp	src/whereexpr.c	/^static int allowedOp(int op){$/;"	f	file:
allowedOp	tsrc/whereexpr.c	/^static int allowedOp(int op){$/;"	f	file:
amatchAddWord	ext/misc/amatch.c	/^static void amatchAddWord($/;"	f	file:
amatchAvlBalance	ext/misc/amatch.c	/^static amatch_avl *amatchAvlBalance(amatch_avl *p){$/;"	f	file:
amatchAvlFirst	ext/misc/amatch.c	/^static amatch_avl *amatchAvlFirst(amatch_avl *p){$/;"	f	file:
amatchAvlFromPtr	ext/misc/amatch.c	/^static amatch_avl **amatchAvlFromPtr(amatch_avl *p, amatch_avl **pp){$/;"	f	file:
amatchAvlInsert	ext/misc/amatch.c	/^static amatch_avl *amatchAvlInsert(amatch_avl **ppHead, amatch_avl *pNew){$/;"	f	file:
amatchAvlRecomputeHeight	ext/misc/amatch.c	/^static void amatchAvlRecomputeHeight(amatch_avl *p){$/;"	f	file:
amatchAvlRemove	ext/misc/amatch.c	/^static void amatchAvlRemove(amatch_avl **ppHead, amatch_avl *pOld){$/;"	f	file:
amatchAvlRotateAfter	ext/misc/amatch.c	/^static amatch_avl *amatchAvlRotateAfter(amatch_avl *pP){$/;"	f	file:
amatchAvlRotateBefore	ext/misc/amatch.c	/^static amatch_avl *amatchAvlRotateBefore(amatch_avl *pP){$/;"	f	file:
amatchAvlSearch	ext/misc/amatch.c	/^static amatch_avl *amatchAvlSearch(amatch_avl *p, const char *zKey){$/;"	f	file:
amatchBestIndex	ext/misc/amatch.c	/^static int amatchBestIndex($/;"	f	file:
amatchClearCursor	ext/misc/amatch.c	/^static void amatchClearCursor(amatch_cursor *pCur){$/;"	f	file:
amatchClose	ext/misc/amatch.c	/^static int amatchClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
amatchColumn	ext/misc/amatch.c	/^static int amatchColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
amatchConnect	ext/misc/amatch.c	/^static int amatchConnect($/;"	f	file:
amatchDequote	ext/misc/amatch.c	/^static char *amatchDequote(const char *zIn){$/;"	f	file:
amatchDisconnect	ext/misc/amatch.c	/^static int amatchDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
amatchEncodeInt	ext/misc/amatch.c	/^static void amatchEncodeInt(int x, char *z){$/;"	f	file:
amatchEof	ext/misc/amatch.c	/^static int amatchEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
amatchFilter	ext/misc/amatch.c	/^static int amatchFilter($/;"	f	file:
amatchFree	ext/misc/amatch.c	/^static void amatchFree(amatch_vtab *p){$/;"	f	file:
amatchFreeRules	ext/misc/amatch.c	/^static void amatchFreeRules(amatch_vtab *p){$/;"	f	file:
amatchLoadOneRule	ext/misc/amatch.c	/^static int amatchLoadOneRule($/;"	f	file:
amatchLoadRules	ext/misc/amatch.c	/^static int amatchLoadRules($/;"	f	file:
amatchMergeRules	ext/misc/amatch.c	/^static amatch_rule *amatchMergeRules(amatch_rule *pA, amatch_rule *pB){$/;"	f	file:
amatchModule	ext/misc/amatch.c	/^static sqlite3_module amatchModule = {$/;"	v	file:
amatchNext	ext/misc/amatch.c	/^static int amatchNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
amatchOpen	ext/misc/amatch.c	/^static int amatchOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
amatchRowid	ext/misc/amatch.c	/^static int amatchRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
amatchStrcat	ext/misc/amatch.c	/^static void amatchStrcat(char *dest, const char *src){$/;"	f	file:
amatchStrcat	ext/misc/amatch.c	1014;"	d	file:
amatchStrcpy	ext/misc/amatch.c	/^static void amatchStrcpy(char *dest, const char *src){$/;"	f	file:
amatchStrcpy	ext/misc/amatch.c	1013;"	d	file:
amatchUpdate	ext/misc/amatch.c	/^static int amatchUpdate($/;"	f	file:
amatchVCheckClear	ext/misc/amatch.c	/^static void amatchVCheckClear(amatch_vtab *p){$/;"	f	file:
amatchValueOfKey	ext/misc/amatch.c	/^static const char *amatchValueOfKey(const char *zKey, const char *zStr){$/;"	f	file:
amatchWriteCost	ext/misc/amatch.c	/^static void amatchWriteCost(amatch_word *pWord){$/;"	f	file:
amatch_avl	ext/misc/amatch.c	/^struct amatch_avl {$/;"	s	file:
amatch_avl	ext/misc/amatch.c	/^typedef struct amatch_avl amatch_avl;$/;"	t	typeref:struct:amatch_avl	file:
amatch_cost	ext/misc/amatch.c	/^typedef int amatch_cost;$/;"	t	file:
amatch_cursor	ext/misc/amatch.c	/^struct amatch_cursor {$/;"	s	file:
amatch_cursor	ext/misc/amatch.c	/^typedef struct amatch_cursor amatch_cursor;$/;"	t	typeref:struct:amatch_cursor	file:
amatch_langid	ext/misc/amatch.c	/^typedef int amatch_langid;$/;"	t	file:
amatch_len	ext/misc/amatch.c	/^typedef signed char amatch_len;$/;"	t	file:
amatch_rule	ext/misc/amatch.c	/^struct amatch_rule {$/;"	s	file:
amatch_rule	ext/misc/amatch.c	/^typedef struct amatch_rule amatch_rule;$/;"	t	typeref:struct:amatch_rule	file:
amatch_vtab	ext/misc/amatch.c	/^struct amatch_vtab {$/;"	s	file:
amatch_vtab	ext/misc/amatch.c	/^typedef struct amatch_vtab amatch_vtab;$/;"	t	typeref:struct:amatch_vtab	file:
amatch_word	ext/misc/amatch.c	/^struct amatch_word {$/;"	s	file:
amatch_word	ext/misc/amatch.c	/^typedef struct amatch_word amatch_word;$/;"	t	typeref:struct:amatch_word	file:
anDLt	sqlite3.c	/^  tRowcnt *anDLt;                 \/* sqlite_stat4.nDLt *\/$/;"	m	struct:Stat4Sample	file:
anDLt	sqlite3.c	/^  tRowcnt *anDLt;   \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample	file:
anDLt	src/analyze.c	/^  tRowcnt *anDLt;                 \/* sqlite_stat4.nDLt *\/$/;"	m	struct:Stat4Sample	file:
anDLt	src/sqliteInt.h	/^  tRowcnt *anDLt;   \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample
anDLt	tsrc/analyze.c	/^  tRowcnt *anDLt;                 \/* sqlite_stat4.nDLt *\/$/;"	m	struct:Stat4Sample	file:
anDLt	tsrc/sqliteInt.h	/^  tRowcnt *anDLt;   \/* Est. number of distinct keys less than this sample *\/$/;"	m	struct:IndexSample
anEq	sqlite3.c	/^  tRowcnt *anEq;                  \/* sqlite_stat4.nEq *\/$/;"	m	struct:Stat4Sample	file:
anEq	sqlite3.c	/^  tRowcnt *anEq;    \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample	file:
anEq	src/analyze.c	/^  tRowcnt *anEq;                  \/* sqlite_stat4.nEq *\/$/;"	m	struct:Stat4Sample	file:
anEq	src/sqliteInt.h	/^  tRowcnt *anEq;    \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample
anEq	tsrc/analyze.c	/^  tRowcnt *anEq;                  \/* sqlite_stat4.nEq *\/$/;"	m	struct:Stat4Sample	file:
anEq	tsrc/sqliteInt.h	/^  tRowcnt *anEq;    \/* Est. number of rows where the key equals this sample *\/$/;"	m	struct:IndexSample
anExec	sqlite3.c	/^  i64 *anExec;            \/* Event counters from parent frame *\/$/;"	m	struct:VdbeFrame	file:
anExec	sqlite3.c	/^  i64 *anExec;            \/* Number of times each op has been executed *\/$/;"	m	struct:Vdbe	file:
anExec	src/vdbeInt.h	/^  i64 *anExec;            \/* Event counters from parent frame *\/$/;"	m	struct:VdbeFrame
anExec	src/vdbeInt.h	/^  i64 *anExec;            \/* Number of times each op has been executed *\/$/;"	m	struct:Vdbe
anExec	tsrc/vdbeInt.h	/^  i64 *anExec;            \/* Event counters from parent frame *\/$/;"	m	struct:VdbeFrame
anExec	tsrc/vdbeInt.h	/^  i64 *anExec;            \/* Number of times each op has been executed *\/$/;"	m	struct:Vdbe
anLt	sqlite3.c	/^  tRowcnt *anLt;                  \/* sqlite_stat4.nLt *\/$/;"	m	struct:Stat4Sample	file:
anLt	sqlite3.c	/^  tRowcnt *anLt;    \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample	file:
anLt	src/analyze.c	/^  tRowcnt *anLt;                  \/* sqlite_stat4.nLt *\/$/;"	m	struct:Stat4Sample	file:
anLt	src/sqliteInt.h	/^  tRowcnt *anLt;    \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample
anLt	tsrc/analyze.c	/^  tRowcnt *anLt;                  \/* sqlite_stat4.nLt *\/$/;"	m	struct:Stat4Sample	file:
anLt	tsrc/sqliteInt.h	/^  tRowcnt *anLt;    \/* Est. number of rows where key is less than this sample *\/$/;"	m	struct:IndexSample
anOutput	ext/fts3/fts3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anOutput	sqlite3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anOutput	tsrc/fts3.c	/^  int anOutput[16];               \/* Size each output buffer in bytes *\/$/;"	m	struct:TermSelect	file:
anQueue	ext/rtree/rtree.c	/^  u32 anQueue[RTREE_MAX_DEPTH+1];   \/* Number of queued entries by iLevel *\/$/;"	m	struct:RtreeCursor	file:
anQueue	ext/rtree/sqlite3rtree.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
anQueue	sqlite3.c	/^  u32 anQueue[RTREE_MAX_DEPTH+1];   \/* Number of queued entries by iLevel *\/$/;"	m	struct:RtreeCursor	file:
anQueue	sqlite3.c	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
anQueue	sqlite3.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
anQueue	tsrc/rtree.c	/^  u32 anQueue[RTREE_MAX_DEPTH+1];   \/* Number of queued entries by iLevel *\/$/;"	m	struct:RtreeCursor	file:
anQueue	tsrc/sqlite3.h	/^  unsigned int *anQueue;            \/* Number of pending entries in the queue *\/$/;"	m	struct:sqlite3_rtree_query_info
anStat	sqlite3.c	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside	file:
anStat	src/sqliteInt.h	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside
anStat	tsrc/sqliteInt.h	/^  int anStat[3];          \/* 0: hits.  1: size misses.  2: full misses *\/$/;"	m	struct:Lookaside
an_load_separator_ranges	ext/fts3/unicode/mkunicode.tcl	/^proc an_load_separator_ranges {} {$/;"	p
an_load_unicodedata_text	ext/fts3/unicode/parseunicode.tcl	/^proc an_load_unicodedata_text {zName} {$/;"	p
an_print_ascii_bitmap	ext/fts3/unicode/mkunicode.tcl	/^proc an_print_ascii_bitmap {lRange} {$/;"	p
an_print_range_array	ext/fts3/unicode/mkunicode.tcl	/^proc an_print_range_array {lRange} {$/;"	p
analysisInfo	sqlite3.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	sqlite3.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisInfo	src/analyze.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	src/analyze.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisInfo	tsrc/analyze.c	/^struct analysisInfo {$/;"	s	file:
analysisInfo	tsrc/analyze.c	/^typedef struct analysisInfo analysisInfo;$/;"	t	typeref:struct:analysisInfo	file:
analysisLoader	sqlite3.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analysisLoader	src/analyze.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analysisLoader	tsrc/analyze.c	/^static int analysisLoader(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
analyzeAggregate	sqlite3.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregate	src/expr.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregate	tsrc/expr.c	/^static int analyzeAggregate(Walker *pWalker, Expr *pExpr){$/;"	f	file:
analyzeAggregatesInSelect	sqlite3.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeAggregatesInSelect	src/expr.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeAggregatesInSelect	tsrc/expr.c	/^static int analyzeAggregatesInSelect(Walker *pWalker, Select *pSelect){$/;"	f	file:
analyzeDatabase	sqlite3.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeDatabase	src/analyze.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeDatabase	tsrc/analyze.c	/^static void analyzeDatabase(Parse *pParse, int iDb){$/;"	f	file:
analyzeOneTable	sqlite3.c	/^static void analyzeOneTable($/;"	f	file:
analyzeOneTable	src/analyze.c	/^static void analyzeOneTable($/;"	f	file:
analyzeOneTable	tsrc/analyze.c	/^static void analyzeOneTable($/;"	f	file:
analyzeTable	sqlite3.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
analyzeTable	src/analyze.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
analyzeTable	tsrc/analyze.c	/^static void analyzeTable(Parse *pParse, Table *pTab, Index *pOnlyIdx){$/;"	f	file:
anylist	parse.y	/^anylist ::= .$/;"	l
anylist	parse.y	/^anylist ::= anylist ANY.$/;"	l
anylist	parse.y	/^anylist ::= anylist LP anylist RP.$/;"	l
anylist	src/parse.y	/^anylist ::= .$/;"	l
anylist	src/parse.y	/^anylist ::= anylist ANY.$/;"	l
anylist	src/parse.y	/^anylist ::= anylist LP anylist RP.$/;"	l
ap	tool/lemon.c	/^  struct action *ap;       \/* List of actions for this state *\/$/;"	m	struct:state	typeref:struct:state::action	file:
apArg	sqlite3.c	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe	file:
apArg	sqlite3.c	/^  sqlite3_value **apArg;   \/* The argument values *\/$/;"	m	struct:PrintfArguments	file:
apArg	src/sqliteInt.h	/^  sqlite3_value **apArg;   \/* The argument values *\/$/;"	m	struct:PrintfArguments
apArg	src/vdbeInt.h	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe
apArg	tsrc/sqliteInt.h	/^  sqlite3_value **apArg;   \/* The argument values *\/$/;"	m	struct:PrintfArguments
apArg	tsrc/vdbeInt.h	/^  Mem **apArg;            \/* Arguments to currently executing user function *\/$/;"	m	struct:Vdbe
apCell	sqlite3.c	/^  u8 **apCell;            \/* All cells begin balanced *\/$/;"	m	struct:CellArray	file:
apCell	src/btree.c	/^  u8 **apCell;            \/* All cells begin balanced *\/$/;"	m	struct:CellArray	file:
apCell	tsrc/btree.c	/^  u8 **apCell;            \/* All cells begin balanced *\/$/;"	m	struct:CellArray	file:
apChange	ext/session/sqlite3session.c	/^  SessionChange **apChange;       \/* Hash table buckets *\/$/;"	m	struct:SessionTable	file:
apChange	sqlite3.c	/^  SessionChange **apChange;       \/* Hash table buckets *\/$/;"	m	struct:SessionTable	file:
apChange	tsrc/sqlite3session.c	/^  SessionChange **apChange;       \/* Hash table buckets *\/$/;"	m	struct:SessionTable	file:
apChild	ext/fts5/fts5_expr.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apChild	fts5.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apChild	sqlite3.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apChild	tsrc/fts5.c	/^  Fts5ExprNode *apChild[1];       \/* Array of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
apColName	src/tclsqlite.c	/^  Tcl_Obj **apColName;            \/* Array of column names *\/$/;"	m	struct:DbEvalContext	file:
apColName	tsrc/tclsqlite.c	/^  Tcl_Obj **apColName;            \/* Array of column names *\/$/;"	m	struct:DbEvalContext	file:
apCsr	sqlite3.c	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame	file:
apCsr	sqlite3.c	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe	file:
apCsr	src/vdbeInt.h	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame
apCsr	src/vdbeInt.h	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe
apCsr	tsrc/vdbeInt.h	/^  VdbeCursor **apCsr;     \/* Array of Vdbe cursors for parent frame *\/$/;"	m	struct:VdbeFrame
apCsr	tsrc/vdbeInt.h	/^  VdbeCursor **apCsr;     \/* One element of this array for each open cursor *\/$/;"	m	struct:Vdbe
apDel	ext/misc/spellfix.c	/^  EditDist3Cost **apDel;   \/* Array of deletion cost entries *\/$/;"	m	struct:EditDist3From	file:
apExprPhrase	ext/fts5/fts5_expr.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apExprPhrase	fts5.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apExprPhrase	sqlite3.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apExprPhrase	tsrc/fts5.c	/^  Fts5ExprPhrase **apExprPhrase;  \/* Pointers to phrase objects *\/$/;"	m	struct:Fts5Expr	file:
apHash	ext/fts5/fts5_buffer.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	ext/misc/fuzzer.c	/^  fuzzer_stem *apHash[FUZZER_HASH]; \/* Hash of previously generated terms *\/$/;"	m	struct:fuzzer_cursor	file:
apHash	fts5.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	sqlite3.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	sqlite3.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apHash	src/pcache1.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apHash	tsrc/fts5.c	/^  Fts5TermsetEntry *apHash[512];$/;"	m	struct:Fts5Termset	file:
apHash	tsrc/pcache1.c	/^  PgHdr1 **apHash;                    \/* Hash table for fast lookup by key *\/$/;"	m	struct:PCache1	file:
apIns	ext/misc/spellfix.c	/^  EditDist3Cost **apIns;   \/* Array of deletion cost entries *\/$/;"	m	struct:EditDist3To	file:
apOvfl	sqlite3.c	/^  u8 *apOvfl[5];       \/* Pointers to the body of overflow cells *\/$/;"	m	struct:MemPage	file:
apOvfl	src/btreeInt.h	/^  u8 *apOvfl[5];       \/* Pointers to the body of overflow cells *\/$/;"	m	struct:MemPage
apOvfl	tsrc/btreeInt.h	/^  u8 *apOvfl[5];       \/* Pointers to the body of overflow cells *\/$/;"	m	struct:MemPage
apPage	sqlite3.c	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor	file:
apPage	src/btreeInt.h	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor
apPage	tsrc/btreeInt.h	/^  MemPage *apPage[BTCURSOR_MAX_DEPTH];  \/* Pages from root to current page *\/$/;"	m	struct:BtCursor
apParm	src/tclsqlite.c	/^  Tcl_Obj **apParm;        \/* Array of referenced object pointers *\/$/;"	m	struct:SqlPreparedStmt	file:
apParm	tsrc/tclsqlite.c	/^  Tcl_Obj **apParm;        \/* Array of referenced object pointers *\/$/;"	m	struct:SqlPreparedStmt	file:
apPhrase	ext/fts5/fts5_expr.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	ext/fts5/fts5_expr.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apPhrase	fts5.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	fts5.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apPhrase	sqlite3.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	sqlite3.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apPhrase	tsrc/fts5.c	/^  Fts5ExprPhrase **apPhrase;      \/* Array of all phrases *\/$/;"	m	struct:Fts5Parse	file:
apPhrase	tsrc/fts5.c	/^  Fts5ExprPhrase *apPhrase[1];    \/* Array of phrase pointers *\/$/;"	m	struct:Fts5ExprNearset	file:
apRankArg	ext/fts5/fts5_main.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRankArg	fts5.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRankArg	sqlite3.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRankArg	tsrc/fts5.c	/^  sqlite3_value **apRankArg;      \/* Array of trailing arguments *\/$/;"	m	struct:Fts5Cursor	file:
apRegion	sqlite3.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apRegion	src/os_unix.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apRegion	tsrc/os_unix.c	/^  char **apRegion;           \/* Array of mapped shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
apSegment	ext/fts3/fts3Int.h	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader
apSegment	sqlite3.c	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader	file:
apSegment	tsrc/fts3Int.h	/^  Fts3SegReader **apSegment;      \/* Array of Fts3SegReader objects *\/$/;"	m	struct:Fts3MultiSegReader
apShm	ext/rbu/sqlite3rbu.c	/^  char **apShm;                   \/* Array of mmap'd *-shm regions *\/$/;"	m	struct:rbu_file	file:
apShm	sqlite3.c	/^  char **apShm;                   \/* Array of mmap'd *-shm regions *\/$/;"	m	struct:rbu_file	file:
apShm	tsrc/sqlite3rbu.c	/^  char **apShm;                   \/* Array of mmap'd *-shm regions *\/$/;"	m	struct:rbu_file	file:
apSqlParam	ext/rtree/rtree.c	/^  sqlite3_value **apSqlParam; \/* Original SQL parameter values *\/$/;"	m	struct:RtreeMatchArg	file:
apSqlParam	ext/rtree/sqlite3rtree.h	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
apSqlParam	sqlite3.c	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
apSqlParam	sqlite3.c	/^  sqlite3_value **apSqlParam; \/* Original SQL parameter values *\/$/;"	m	struct:RtreeMatchArg	file:
apSqlParam	sqlite3.h	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
apSqlParam	tsrc/rtree.c	/^  sqlite3_value **apSqlParam; \/* Original SQL parameter values *\/$/;"	m	struct:RtreeMatchArg	file:
apSqlParam	tsrc/sqlite3.h	/^  sqlite3_value **apSqlParam;       \/* Original SQL values of parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
apSub	sqlite3.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon93	file:
apSub	sqlite3.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apSub	src/bitvec.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon68	file:
apSub	src/vdbeaux.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apSub	tsrc/bitvec.c	/^    Bitvec *apSub[BITVEC_NPTR];  \/* Recursive representation *\/$/;"	m	union:Bitvec::__anon39	file:
apSub	tsrc/vdbeaux.c	/^  SubProgram **apSub;        \/* Array of subprograms *\/$/;"	m	struct:VdbeOpIter	file:
apSubst	ext/misc/spellfix.c	/^  EditDist3Cost **apSubst; \/* Array of substitution costs for this element *\/$/;"	m	struct:EditDist3From	file:
apTrigger	sqlite3.c	/^  Trigger *apTrigger[2];\/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey	file:
apTrigger	src/sqliteInt.h	/^  Trigger *apTrigger[2];\/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey
apTrigger	tsrc/sqliteInt.h	/^  Trigger *apTrigger[2];\/* Triggers for aAction[] actions *\/$/;"	m	struct:FKey
apValue	ext/session/sqlite3session.c	/^  sqlite3_value **apValue;        \/* old.* and new.* values *\/$/;"	m	struct:sqlite3_changeset_iter	file:
apValue	sqlite3.c	/^  sqlite3_value **apValue;        \/* old.* and new.* values *\/$/;"	m	struct:sqlite3_changeset_iter	file:
apValue	tsrc/sqlite3session.c	/^  sqlite3_value **apValue;        \/* old.* and new.* values *\/$/;"	m	struct:sqlite3_changeset_iter	file:
apVfs	src/test1.c	/^static sqlite3_vfs *apVfs[20];$/;"	v	file:
apVtabLock	sqlite3.c	/^  Table **apVtabLock;       \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse	file:
apVtabLock	src/sqliteInt.h	/^  Table **apVtabLock;       \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse
apVtabLock	tsrc/sqliteInt.h	/^  Table **apVtabLock;       \/* Pointer to virtual tables needing locking *\/$/;"	m	struct:Parse
apWiData	sqlite3.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
apWiData	src/wal.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
apWiData	tsrc/wal.c	/^  volatile u32 **apWiData;   \/* Pointer to wal-index content in memory *\/$/;"	m	struct:Wal	file:
api	ext/fts5/fts5_main.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
api	fts5.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
api	sqlite3.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
api	tsrc/fts5.c	/^  fts5_api api;                   \/* User visible part of object (see fts5.h) *\/$/;"	m	struct:Fts5Global	file:
apiOomError	sqlite3.c	/^static SQLITE_NOINLINE int apiOomError(sqlite3 *db){$/;"	f	file:
apiOomError	src/malloc.c	/^static SQLITE_NOINLINE int apiOomError(sqlite3 *db){$/;"	f	file:
apiOomError	tsrc/malloc.c	/^static SQLITE_NOINLINE int apiOomError(sqlite3 *db){$/;"	f	file:
append	ext/fts1/fts1.c	/^static void append(StringBuffer *sb, const char *zFrom){$/;"	f	file:
append	ext/fts2/fts2.c	/^static void append(StringBuffer *sb, const char *zFrom){$/;"	f	file:
append	tsrc/fts1.c	/^static void append(StringBuffer *sb, const char *zFrom){$/;"	f	file:
append	tsrc/fts2.c	/^static void append(StringBuffer *sb, const char *zFrom){$/;"	f	file:
appendArgs	tool/mkvsix.tcl	/^proc appendArgs { args } {$/;"	p
appendArgs	vsixtest/vsixtest.tcl	/^proc appendArgs { args } {$/;"	p
appendList	ext/fts1/fts1.c	/^static void appendList(StringBuffer *sb, int nString, char **azString){$/;"	f	file:
appendList	ext/fts2/fts2.c	/^static void appendList(StringBuffer *sb, int nString, char **azString){$/;"	f	file:
appendList	tsrc/fts1.c	/^static void appendList(StringBuffer *sb, int nString, char **azString){$/;"	f	file:
appendList	tsrc/fts2.c	/^static void appendList(StringBuffer *sb, int nString, char **azString){$/;"	f	file:
appendText	shell.c	/^static char *appendText(char *zIn, char const *zAppend, char quote){$/;"	f	file:
appendText	src/shell.c	/^static char *appendText(char *zIn, char const *zAppend, char quote){$/;"	f	file:
appendText	tsrc/shell.c	/^static char *appendText(char *zIn, char const *zAppend, char quote){$/;"	f	file:
appendToEchoModule	src/test8.c	/^static void appendToEchoModule(Tcl_Interp *interp, const char *zArg){$/;"	f	file:
appendVarint	ext/fts1/fts1.c	/^static void appendVarint(DocList *d, sqlite_int64 i){$/;"	f	file:
appendVarint	ext/fts1/fulltext.c	/^static void appendVarint(DocList *d, sqlite_int64 i){$/;"	f	file:
appendVarint	tsrc/fts1.c	/^static void appendVarint(DocList *d, sqlite_int64 i){$/;"	f	file:
appendWhiteSpace	ext/fts1/fts1.c	/^static void appendWhiteSpace(StringBuffer *p){$/;"	f	file:
appendWhiteSpace	ext/fts2/fts2.c	/^static void appendWhiteSpace(StringBuffer *p){$/;"	f	file:
appendWhiteSpace	tsrc/fts1.c	/^static void appendWhiteSpace(StringBuffer *p){$/;"	f	file:
appendWhiteSpace	tsrc/fts2.c	/^static void appendWhiteSpace(StringBuffer *p){$/;"	f	file:
append_str	tool/lemon.c	/^PRIVATE char *append_str(const char *zText, int n, int p1, int p2){$/;"	f
applyAffinity	sqlite3.c	/^static void applyAffinity($/;"	f	file:
applyAffinity	src/vdbe.c	/^static void applyAffinity($/;"	f	file:
applyAffinity	tsrc/vdbe.c	/^static void applyAffinity($/;"	f	file:
applyNumericAffinity	sqlite3.c	/^static void applyNumericAffinity(Mem *pRec, int bTryForInt){$/;"	f	file:
applyNumericAffinity	src/vdbe.c	/^static void applyNumericAffinity(Mem *pRec, int bTryForInt){$/;"	f	file:
applyNumericAffinity	tsrc/vdbe.c	/^static void applyNumericAffinity(Mem *pRec, int bTryForInt){$/;"	f	file:
approx	sqlite3.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
approx	src/func.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
approx	tsrc/func.c	/^  u8 approx;        \/* True if non-integer value was input to the sum *\/$/;"	m	struct:SumCtx	file:
arg	tool/lemon.c	/^  char *arg;               \/* Declaration of the 3th argument to parser *\/$/;"	m	struct:lemon	file:
arg	tool/lemon.c	/^  char *arg;$/;"	m	struct:s_options	file:
argc	sqlite3.c	/^  u8 argc;                \/* Number of arguments *\/$/;"	m	struct:sqlite3_context	file:
argc	src/test4.c	/^  int argc;             \/* number of columns in result *\/$/;"	m	struct:Thread	file:
argc	src/test7.c	/^  int argc;                \/* number of columns in result *\/$/;"	m	struct:Thread	file:
argc	src/vdbeInt.h	/^  u8 argc;                \/* Number of arguments *\/$/;"	m	struct:sqlite3_context
argc	tsrc/vdbeInt.h	/^  u8 argc;                \/* Number of arguments *\/$/;"	m	struct:sqlite3_context
argindex	tool/lemon.c	/^static int argindex(int n)$/;"	f	file:
argv	sqlite3.c	/^  sqlite3_value *argv[1]; \/* Argument set *\/$/;"	m	struct:sqlite3_context	file:
argv	src/test4.c	/^  const char *argv[100];    \/* result columns *\/$/;"	m	struct:Thread	file:
argv	src/test7.c	/^  const char *argv[100];   \/* result columns *\/$/;"	m	struct:Thread	file:
argv	src/vdbeInt.h	/^  sqlite3_value *argv[1]; \/* Argument set *\/$/;"	m	struct:sqlite3_context
argv	tool/lemon.c	/^static char **argv;$/;"	v	file:
argv	tsrc/vdbeInt.h	/^  sqlite3_value *argv[1]; \/* Argument set *\/$/;"	m	struct:sqlite3_context
argv0	mptest/mptest.c	/^  char *argv0;           \/* Name of the executable *\/$/;"	m	struct:Global	file:
argv0	tool/lemon.c	/^  char *argv0;             \/* Name of the program *\/$/;"	m	struct:lemon	file:
argvIndex	sqlite3.c	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
argvIndex	sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
argvIndex	tsrc/sqlite3.h	/^    int argvIndex;           \/* if >0, constraint is part of argv to xFilter *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
asciiFold	ext/fts5/fts5_tokenize.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
asciiFold	fts5.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
asciiFold	sqlite3.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
asciiFold	tsrc/fts5.c	/^static void asciiFold(char *aOut, const char *aIn, int nByte){$/;"	f	file:
asciiToUtf16le	tool/speedtest16.c	/^static void *asciiToUtf16le(const char *z){$/;"	f	file:
ascii_read_one_field	shell.c	/^static char *SQLITE_CDECL ascii_read_one_field(ImportCtx *p){$/;"	f	file:
ascii_read_one_field	src/shell.c	/^static char *SQLITE_CDECL ascii_read_one_field(ImportCtx *p){$/;"	f	file:
ascii_read_one_field	tsrc/shell.c	/^static char *SQLITE_CDECL ascii_read_one_field(ImportCtx *p){$/;"	f	file:
assertCellInfo	sqlite3.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	sqlite3.c	62385;"	d	file:
assertCellInfo	src/btree.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	src/btree.c	4249;"	d	file:
assertCellInfo	tsrc/btree.c	/^  static void assertCellInfo(BtCursor *pCur){$/;"	f	file:
assertCellInfo	tsrc/btree.c	4249;"	d	file:
assertColumnName	ext/rbu/sqlite3rbu.c	/^static void assertColumnName(sqlite3_stmt *pStmt, int iCol, const char *zName){$/;"	f	file:
assertColumnName	ext/rbu/sqlite3rbu.c	2857;"	d	file:
assertColumnName	sqlite3.c	/^static void assertColumnName(sqlite3_stmt *pStmt, int iCol, const char *zName){$/;"	f	file:
assertColumnName	sqlite3.c	167780;"	d	file:
assertColumnName	tsrc/sqlite3rbu.c	/^static void assertColumnName(sqlite3_stmt *pStmt, int iCol, const char *zName){$/;"	f	file:
assertColumnName	tsrc/sqlite3rbu.c	2857;"	d	file:
assertMutexHeld	sqlite3.c	140547;"	d	file:
assertMutexHeld	src/notify.c	31;"	d	file:
assertMutexHeld	tsrc/notify.c	31;"	d	file:
assertParentIndex	sqlite3.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	sqlite3.c	62928;"	d	file:
assertParentIndex	src/btree.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	src/btree.c	4792;"	d	file:
assertParentIndex	tsrc/btree.c	/^static void assertParentIndex(MemPage *pParent, int iIdx, Pgno iChild){$/;"	f	file:
assertParentIndex	tsrc/btree.c	4792;"	d	file:
assertTruncateConstraint	sqlite3.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	sqlite3.c	50156;"	d	file:
assertTruncateConstraint	src/pager.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	src/pager.c	3879;"	d	file:
assertTruncateConstraint	tsrc/pager.c	/^static void assertTruncateConstraint(Pager *pPager){$/;"	f	file:
assertTruncateConstraint	tsrc/pager.c	3879;"	d	file:
assertTruncateConstraintCb	sqlite3.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assertTruncateConstraintCb	src/pager.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assertTruncateConstraintCb	tsrc/pager.c	/^static void assertTruncateConstraintCb(PgHdr *pPg){$/;"	f	file:
assert_mutex_is_held	ext/async/sqlite3async.c	371;"	d	file:
assert_nc	ext/fts5/fts5Int.h	83;"	d
assert_nc	ext/fts5/fts5Int.h	85;"	d
assert_nc	fts5.c	676;"	d	file:
assert_nc	fts5.c	678;"	d	file:
assert_nc	sqlite3.c	177878;"	d	file:
assert_nc	sqlite3.c	177880;"	d	file:
assert_nc	tsrc/fts5.c	676;"	d	file:
assert_nc	tsrc/fts5.c	678;"	d	file:
assert_pager_state	sqlite3.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
assert_pager_state	src/pager.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
assert_pager_state	tsrc/pager.c	/^static int assert_pager_state(Pager *p){$/;"	f	file:
assoc	tool/lemon.c	/^  enum e_assoc assoc;      \/* Associativity if precedence is defined *\/$/;"	m	struct:symbol	typeref:enum:symbol::e_assoc	file:
async	ext/async/sqlite3async.c	/^} async = { 0,0,0,0,0,1,0,0 };$/;"	v	typeref:struct:TestAsyncStaticData	file:
asyncAccess	ext/async/sqlite3async.c	/^static int asyncAccess($/;"	f	file:
asyncCheckReservedLock	ext/async/sqlite3async.c	/^static int asyncCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
asyncClose	ext/async/sqlite3async.c	/^static int asyncClose(sqlite3_file *pFile){$/;"	f	file:
asyncCurrentTime	ext/async/sqlite3async.c	/^static int asyncCurrentTime(sqlite3_vfs *pAsyncVfs, double *pTimeOut){$/;"	f	file:
asyncDelete	ext/async/sqlite3async.c	/^static int asyncDelete(sqlite3_vfs *pAsyncVfs, const char *z, int syncDir){$/;"	f	file:
asyncDeviceCharacteristics	ext/async/sqlite3async.c	/^static int asyncDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
asyncDlClose	ext/async/sqlite3async.c	/^static void asyncDlClose(sqlite3_vfs *pAsyncVfs, void *pHandle){$/;"	f	file:
asyncDlError	ext/async/sqlite3async.c	/^static void asyncDlError(sqlite3_vfs *pAsyncVfs, int nByte, char *zErrMsg){$/;"	f	file:
asyncDlOpen	ext/async/sqlite3async.c	/^static void *asyncDlOpen(sqlite3_vfs *pAsyncVfs, const char *zPath){$/;"	f	file:
asyncDlSym	ext/async/sqlite3async.c	/^static void (*asyncDlSym($/;"	f	file:
asyncFileControl	ext/async/sqlite3async.c	/^static int asyncFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
asyncFileSize	ext/async/sqlite3async.c	/^int asyncFileSize(sqlite3_file *pFile, sqlite3_int64 *piSize){$/;"	f
asyncFullPathname	ext/async/sqlite3async.c	/^static int asyncFullPathname($/;"	f	file:
asyncLock	ext/async/sqlite3async.c	/^static int asyncLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
asyncOpen	ext/async/sqlite3async.c	/^static int asyncOpen($/;"	f	file:
asyncRandomness	ext/async/sqlite3async.c	/^static int asyncRandomness(sqlite3_vfs *pAsyncVfs, int nByte, char *zBufOut){$/;"	f	file:
asyncRead	ext/async/sqlite3async.c	/^static int asyncRead($/;"	f	file:
asyncSectorSize	ext/async/sqlite3async.c	/^static int asyncSectorSize(sqlite3_file *pFile){$/;"	f	file:
asyncSleep	ext/async/sqlite3async.c	/^static int asyncSleep(sqlite3_vfs *pAsyncVfs, int nMicro){$/;"	f	file:
asyncSync	ext/async/sqlite3async.c	/^static int asyncSync(sqlite3_file *pFile, int flags){$/;"	f	file:
asyncTrace	ext/async/sqlite3async.c	/^static void asyncTrace(const char *zFormat, ...){$/;"	f	file:
asyncTruncate	ext/async/sqlite3async.c	/^static int asyncTruncate(sqlite3_file *pFile, sqlite3_int64 nByte){$/;"	f	file:
asyncUnlock	ext/async/sqlite3async.c	/^static int asyncUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
asyncWrite	ext/async/sqlite3async.c	/^static int asyncWrite($/;"	f	file:
asyncWriterThread	ext/async/sqlite3async.c	/^static void asyncWriterThread(void){$/;"	f	file:
async_cond_signal	ext/async/sqlite3async.c	/^static void async_cond_signal(int eCond){$/;"	f	file:
async_cond_wait	ext/async/sqlite3async.c	/^static void async_cond_wait(int eCond, int eMutex){$/;"	f	file:
async_mutex_enter	ext/async/sqlite3async.c	/^static void async_mutex_enter(int eMutex){$/;"	f	file:
async_mutex_leave	ext/async/sqlite3async.c	/^static void async_mutex_leave(int eMutex){$/;"	f	file:
async_os_initialize	ext/async/sqlite3async.c	/^static int  async_os_initialize(void) {return 0;}$/;"	f	file:
async_os_initialize	ext/async/sqlite3async.c	/^static int async_os_initialize(void){$/;"	f	file:
async_os_shutdown	ext/async/sqlite3async.c	/^static void async_os_shutdown(void) {}$/;"	f	file:
async_os_shutdown	ext/async/sqlite3async.c	/^static void async_os_shutdown(void){$/;"	f	file:
async_sched_yield	ext/async/sqlite3async.c	/^static void async_sched_yield(void){$/;"	f	file:
async_vfs	ext/async/sqlite3async.c	/^static sqlite3_vfs async_vfs = {$/;"	v	file:
atEOF	ext/rtree/rtree.c	/^  u8 atEOF;                         \/* True if at end of search *\/$/;"	m	struct:RtreeCursor	file:
atEOF	sqlite3.c	/^  u8 atEOF;                         \/* True if at end of search *\/$/;"	m	struct:RtreeCursor	file:
atEOF	tsrc/rtree.c	/^  u8 atEOF;                         \/* True if at end of search *\/$/;"	m	struct:RtreeCursor	file:
atEnd	ext/fts1/fts1.c	/^static int atEnd(DocListReader *pReader){$/;"	f	file:
atEnd	tsrc/fts1.c	/^static int atEnd(DocListReader *pReader){$/;"	f	file:
atoi64	ext/fts3/tool/fts3view.c	/^static sqlite3_int64 atoi64(const char *z){$/;"	f	file:
attachBackupObject	sqlite3.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachBackupObject	src/backup.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachBackupObject	tsrc/backup.c	/^static void attachBackupObject(sqlite3_backup *p){$/;"	f	file:
attachFunc	sqlite3.c	/^static void attachFunc($/;"	f	file:
attachFunc	src/attach.c	/^static void attachFunc($/;"	f	file:
attachFunc	tsrc/attach.c	/^static void attachFunc($/;"	f	file:
auth	sqlite3.c	/^  sqlite3_userauth auth;        \/* User authentication information *\/$/;"	m	struct:sqlite3	file:
auth	src/sqliteInt.h	/^  sqlite3_userauth auth;        \/* User authentication information *\/$/;"	m	struct:sqlite3
auth	tsrc/sqliteInt.h	/^  sqlite3_userauth auth;        \/* User authentication information *\/$/;"	m	struct:sqlite3
authCallback	ext/misc/showauth.c	/^static int authCallback($/;"	f	file:
authLevel	sqlite3.c	/^  u8 authLevel;                 \/* Current authentication level *\/$/;"	m	struct:sqlite3_userauth	file:
authLevel	src/sqliteInt.h	/^  u8 authLevel;                 \/* Current authentication level *\/$/;"	m	struct:sqlite3_userauth
authLevel	tsrc/sqliteInt.h	/^  u8 authLevel;                 \/* Current authentication level *\/$/;"	m	struct:sqlite3_userauth
auth_callback	src/tclsqlite.c	/^static int auth_callback($/;"	f	file:
auth_callback	tsrc/tclsqlite.c	/^static int auth_callback($/;"	f	file:
autoCommit	sqlite3.c	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3	file:
autoCommit	src/sqliteInt.h	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3
autoCommit	tsrc/sqliteInt.h	/^  u8 autoCommit;                \/* The auto-commit flag. *\/$/;"	m	struct:sqlite3
autoEQP	shell.c	/^  int autoEQP;           \/* Run EXPLAIN QUERY PLAN prior to seach SQL stmt *\/$/;"	m	struct:ShellState	file:
autoEQP	src/shell.c	/^  int autoEQP;           \/* Run EXPLAIN QUERY PLAN prior to seach SQL stmt *\/$/;"	m	struct:ShellState	file:
autoEQP	tsrc/shell.c	/^  int autoEQP;           \/* Run EXPLAIN QUERY PLAN prior to seach SQL stmt *\/$/;"	m	struct:ShellState	file:
autoExplain	shell.c	/^  int autoExplain;       \/* Automatically turn on .explain mode *\/$/;"	m	struct:ShellState	file:
autoExplain	src/shell.c	/^  int autoExplain;       \/* Automatically turn on .explain mode *\/$/;"	m	struct:ShellState	file:
autoExplain	tsrc/shell.c	/^  int autoExplain;       \/* Automatically turn on .explain mode *\/$/;"	m	struct:ShellState	file:
autoExtBrokenObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI autoExtBrokenObjCmd($/;"	f	file:
autoExtCubeObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI autoExtCubeObjCmd($/;"	f	file:
autoExtSqrObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI autoExtSqrObjCmd($/;"	f	file:
autoIncBegin	sqlite3.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	sqlite3.c	106832;"	d	file:
autoIncBegin	src/insert.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	src/insert.c	363;"	d	file:
autoIncBegin	tsrc/insert.c	/^static int autoIncBegin($/;"	f	file:
autoIncBegin	tsrc/insert.c	363;"	d	file:
autoIncStep	sqlite3.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	sqlite3.c	106833;"	d	file:
autoIncStep	src/insert.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	src/insert.c	364;"	d	file:
autoIncStep	tsrc/insert.c	/^static void autoIncStep(Parse *pParse, int memId, int regRowid){$/;"	f	file:
autoIncStep	tsrc/insert.c	364;"	d	file:
autoIncrementEnd	sqlite3.c	/^static SQLITE_NOINLINE void autoIncrementEnd(Parse *pParse){$/;"	f	file:
autoIncrementEnd	src/insert.c	/^static SQLITE_NOINLINE void autoIncrementEnd(Parse *pParse){$/;"	f	file:
autoIncrementEnd	tsrc/insert.c	/^static SQLITE_NOINLINE void autoIncrementEnd(Parse *pParse){$/;"	f	file:
autoReduce	tool/lemon.c	/^  int autoReduce;          \/* True if this is an auto-reduce state *\/$/;"	m	struct:state	file:
autoVacuum	sqlite3.c	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
autoVacuum	src/btreeInt.h	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared
autoVacuum	tsrc/btreeInt.h	/^  u8 autoVacuum;        \/* True if auto-vacuum is enabled *\/$/;"	m	struct:BtShared
autoVacuumCommit	sqlite3.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
autoVacuumCommit	src/btree.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
autoVacuumCommit	tsrc/btree.c	/^static int autoVacuumCommit(BtShared *pBt){$/;"	f	file:
auto_extension	sqlite3.c	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
auto_extension	sqlite3ext.h	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
auto_extension	src/sqlite3ext.h	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
auto_extension	tsrc/sqlite3ext.h	/^  int (*auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
autoinstall_test_funcs	src/test_func.c	/^static int SQLITE_TCLAPI autoinstall_test_funcs($/;"	f	file:
autolockIoFinder	sqlite3.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinder	src/os_unix.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinder	tsrc/os_unix.c	/^  *(*const autolockIoFinder)(const char*,unixFile*) = autolockIoFinderImpl;$/;"	v	file:
autolockIoFinderImpl	sqlite3.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
autolockIoFinderImpl	src/os_unix.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
autolockIoFinderImpl	tsrc/os_unix.c	/^static const sqlite3_io_methods *autolockIoFinderImpl($/;"	f	file:
autovacuum_overhead	tool/spaceanal.tcl	/^proc autovacuum_overhead {filePages pageSize} {$/;"	p
avgFinalize	sqlite3.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgFinalize	src/func.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgFinalize	tsrc/func.c	/^static void avgFinalize(sqlite3_context *context){$/;"	f	file:
avgdl	ext/fts5/fts5_aux.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
avgdl	fts5.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
avgdl	sqlite3.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
avgdl	tsrc/fts5.c	/^  double avgdl;                   \/* Average number of tokens in each row *\/$/;"	m	struct:Fts5Bm25Data	file:
axset	tool/lemon.c	/^struct axset {$/;"	s	file:
axset_compare	tool/lemon.c	/^static int axset_compare(const void *a, const void *b){$/;"	f	file:
azCol	ext/fts3/fts3_expr.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azCol	ext/fts5/fts5Int.h	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config
azCol	ext/session/sqlite3session.c	/^  const char **azCol;             \/* Array of column names *\/$/;"	m	struct:SessionApplyCtx	file:
azCol	ext/session/sqlite3session.c	/^  const char **azCol;             \/* Column names *\/$/;"	m	struct:SessionTable	file:
azCol	fts5.c	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config	file:
azCol	sqlite3.c	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config	file:
azCol	sqlite3.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azCol	sqlite3.c	/^  const char **azCol;             \/* Array of column names *\/$/;"	m	struct:SessionApplyCtx	file:
azCol	sqlite3.c	/^  const char **azCol;             \/* Column names *\/$/;"	m	struct:SessionTable	file:
azCol	tsrc/fts3_expr.c	/^  const char **azCol;                 \/* Array of column names for fts3 table *\/$/;"	m	struct:ParseContext	file:
azCol	tsrc/fts5.c	/^  char **azCol;                   \/* Column names *\/$/;"	m	struct:Fts5Config	file:
azCol	tsrc/sqlite3session.c	/^  const char **azCol;             \/* Array of column names *\/$/;"	m	struct:SessionApplyCtx	file:
azCol	tsrc/sqlite3session.c	/^  const char **azCol;             \/* Column names *\/$/;"	m	struct:SessionTable	file:
azColl	sqlite3.c	/^  const char **azColl;     \/* Array of collation sequence names for index *\/$/;"	m	struct:Index	file:
azColl	src/sqliteInt.h	/^  const char **azColl;     \/* Array of collation sequence names for index *\/$/;"	m	struct:Index
azColl	tsrc/sqliteInt.h	/^  const char **azColl;     \/* Array of collation sequence names for index *\/$/;"	m	struct:Index
azColumn	ext/fts1/fts1.c	/^  char **azColumn;                 \/* column names.  malloced *\/$/;"	m	struct:fulltext_vtab	file:
azColumn	ext/fts1/fts1.c	/^  char **azColumn;         \/* Original names of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
azColumn	ext/fts2/fts2.c	/^  char **azColumn;                 \/* column names.  malloced *\/$/;"	m	struct:fulltext_vtab	file:
azColumn	ext/fts2/fts2.c	/^  char **azColumn;         \/* Original names of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
azColumn	ext/fts3/fts3Int.h	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table
azColumn	sqlite3.c	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table	file:
azColumn	tsrc/fts1.c	/^  char **azColumn;                 \/* column names.  malloced *\/$/;"	m	struct:fulltext_vtab	file:
azColumn	tsrc/fts1.c	/^  char **azColumn;         \/* Original names of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
azColumn	tsrc/fts2.c	/^  char **azColumn;                 \/* column names.  malloced *\/$/;"	m	struct:fulltext_vtab	file:
azColumn	tsrc/fts2.c	/^  char **azColumn;         \/* Original names of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
azColumn	tsrc/fts3Int.h	/^  char **azColumn;                \/* column names.  malloced *\/$/;"	m	struct:Fts3Table
azCompileOpt	sqlite3.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azCompileOpt	src/ctime.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azCompileOpt	tsrc/ctime.c	/^static const char * const azCompileOpt[] = {$/;"	v	file:
azContentColumn	ext/fts1/fts1.c	/^  char **azContentColumn;          \/* column names in content table; malloced *\/$/;"	m	struct:fulltext_vtab	file:
azContentColumn	ext/fts1/fts1.c	/^  char **azContentColumn;  \/* Column names for %_content *\/$/;"	m	struct:TableSpec	file:
azContentColumn	ext/fts2/fts2.c	/^  char **azContentColumn;          \/* column names in content table; malloced *\/$/;"	m	struct:fulltext_vtab	file:
azContentColumn	ext/fts2/fts2.c	/^  char **azContentColumn;  \/* Column names for %_content *\/$/;"	m	struct:TableSpec	file:
azContentColumn	tsrc/fts1.c	/^  char **azContentColumn;          \/* column names in content table; malloced *\/$/;"	m	struct:fulltext_vtab	file:
azContentColumn	tsrc/fts1.c	/^  char **azContentColumn;  \/* Column names for %_content *\/$/;"	m	struct:TableSpec	file:
azContentColumn	tsrc/fts2.c	/^  char **azContentColumn;          \/* column names in content table; malloced *\/$/;"	m	struct:fulltext_vtab	file:
azContentColumn	tsrc/fts2.c	/^  char **azContentColumn;  \/* Column names for %_content *\/$/;"	m	struct:TableSpec	file:
azDefine	tool/lemon.c	/^static char **azDefine = 0;  \/* Name of the -D macros *\/$/;"	v	file:
azElem	test/threadtest1.c	/^  char **azElem;      \/* The result of the query *\/$/;"	m	struct:QueryResult	file:
azExtra	ext/fts3/tool/fts3view.c	/^char **azExtra;$/;"	v
azFile	ext/misc/vfsstat.c	/^static const char *azFile[] = {$/;"	v	file:
azFile	src/test_osinst.c	/^  char **azFile;                  \/* File strings *\/$/;"	m	struct:VfslogCsr	file:
azFileLock	sqlite3.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azFileLock	src/os_unix.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azFileLock	tsrc/os_unix.c	/^static const char *azFileLock(int eFileLock){$/;"	f	file:
azFilter	shell.c	/^  char **azFilter;         \/* Array of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
azFilter	src/shell.c	/^  char **azFilter;         \/* Array of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
azFilter	tsrc/shell.c	/^  char **azFilter;         \/* Array of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
azModuleArg	sqlite3.c	/^  char **azModuleArg;  \/* 0: module 1: schema 2: vtab name 3...: args *\/$/;"	m	struct:Table	file:
azModuleArg	src/sqliteInt.h	/^  char **azModuleArg;  \/* 0: module 1: schema 2: vtab name 3...: args *\/$/;"	m	struct:Table
azModuleArg	tsrc/sqliteInt.h	/^  char **azModuleArg;  \/* 0: module 1: schema 2: vtab name 3...: args *\/$/;"	m	struct:Table
azOpcodeName	ext/async/sqlite3async.c	/^static const char *azOpcodeName[] = {$/;"	v	file:
azPrior	ext/misc/spellfix.c	/^  char azPrior[SPELLFIX_MX_RUN][SPELLFIX_MX_HASH];  \/* Prior hashes *\/$/;"	m	struct:MatchQuery	file:
azResult	sqlite3.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azResult	src/table.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azResult	tsrc/table.c	/^  char **azResult;   \/* Accumulated output *\/$/;"	m	struct:TabResult	file:
azStat	ext/misc/vfsstat.c	/^static const char *azStat[] = {$/;"	v	file:
azStatAny	ext/misc/vfsstat.c	/^static const char *azStatAny[] = {$/;"	v	file:
azTblCol	ext/rbu/sqlite3rbu.c	/^  char **azTblCol;                \/* Array of unquoted target column names *\/$/;"	m	struct:RbuObjIter	file:
azTblCol	sqlite3.c	/^  char **azTblCol;                \/* Array of unquoted target column names *\/$/;"	m	struct:RbuObjIter	file:
azTblCol	tsrc/sqlite3rbu.c	/^  char **azTblCol;                \/* Array of unquoted target column names *\/$/;"	m	struct:RbuObjIter	file:
azTblType	ext/rbu/sqlite3rbu.c	/^  char **azTblType;               \/* Array of target column types *\/$/;"	m	struct:RbuObjIter	file:
azTblType	sqlite3.c	/^  char **azTblType;               \/* Array of target column types *\/$/;"	m	struct:RbuObjIter	file:
azTblType	tsrc/sqlite3rbu.c	/^  char **azTblType;               \/* Array of target column types *\/$/;"	m	struct:RbuObjIter	file:
azTokenizer	ext/fts1/fts1.c	/^  char **azTokenizer;      \/* Name of tokenizer and its arguments *\/$/;"	m	struct:TableSpec	file:
azTokenizer	ext/fts2/fts2.c	/^  char **azTokenizer;      \/* Name of tokenizer and its arguments *\/$/;"	m	struct:TableSpec	file:
azTokenizer	tsrc/fts1.c	/^  char **azTokenizer;      \/* Name of tokenizer and its arguments *\/$/;"	m	struct:TableSpec	file:
azTokenizer	tsrc/fts2.c	/^  char **azTokenizer;      \/* Name of tokenizer and its arguments *\/$/;"	m	struct:TableSpec	file:
azType	ext/misc/carray.c	/^static const char *azType[] = { "int32", "int64", "double", "char*" };$/;"	v	file:
azVal	ext/misc/csv.c	/^  char **azVal;                   \/* Value of the current row *\/$/;"	m	struct:CsvCursor	file:
azVar	sqlite3.c	/^  char **azVar;             \/* Pointers to names of parameters *\/$/;"	m	struct:Parse	file:
azVar	sqlite3.c	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe	file:
azVar	src/sqliteInt.h	/^  char **azVar;             \/* Pointers to names of parameters *\/$/;"	m	struct:Parse
azVar	src/vdbeInt.h	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe
azVar	tsrc/sqliteInt.h	/^  char **azVar;             \/* Pointers to names of parameters *\/$/;"	m	struct:Parse
azVar	tsrc/vdbeInt.h	/^  char **azVar;           \/* Name of variables *\/$/;"	m	struct:Vdbe
b	ext/fts2/fts2.c	/^  DataBuffer *b;$/;"	m	struct:DLWriter	file:
b	ext/fts2/fts2.c	/^  DataBuffer b;            \/* Includes null terminator. *\/$/;"	m	struct:StringBuffer	file:
b	ext/fts2/fts2.c	/^  DataBuffer b;$/;"	m	struct:DLCollector	file:
b	ext/fts5/fts5.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	fts5.c	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter	file:
b	fts5.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
b	sqlite3.c	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter	file:
b	sqlite3.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
b	sqlite3.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	tool/dbhash.c	113;"	d	file:
b	tool/sqldiff.c	/^  u16 a, b;         \/* Hash values *\/$/;"	m	struct:hash	file:
b	tsrc/fts2.c	/^  DataBuffer *b;$/;"	m	struct:DLWriter	file:
b	tsrc/fts2.c	/^  DataBuffer b;            \/* Includes null terminator. *\/$/;"	m	struct:StringBuffer	file:
b	tsrc/fts2.c	/^  DataBuffer b;$/;"	m	struct:DLCollector	file:
b	tsrc/fts5.c	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter	file:
b	tsrc/fts5.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
b	tsrc/parse.c	/^struct TrigEvent { int a; IdList * b; };$/;"	m	struct:TrigEvent	file:
b	tsrc/sqlite3.h	/^  const unsigned char *b;$/;"	m	struct:Fts5PhraseIter
bAutoAttach	ext/session/sqlite3session.c	/^  int bAutoAttach;                \/* True to auto-attach tables *\/$/;"	m	struct:sqlite3_session	file:
bAutoAttach	sqlite3.c	/^  int bAutoAttach;                \/* True to auto-attach tables *\/$/;"	m	struct:sqlite3_session	file:
bAutoAttach	tsrc/sqlite3session.c	/^  int bAutoAttach;                \/* True to auto-attach tables *\/$/;"	m	struct:sqlite3_session	file:
bBenignMalloc	sqlite3.c	/^  u8 bBenignMalloc;             \/* Do not require OOMs if true *\/$/;"	m	struct:sqlite3	file:
bBenignMalloc	src/sqliteInt.h	/^  u8 bBenignMalloc;             \/* Do not require OOMs if true *\/$/;"	m	struct:sqlite3
bBenignMalloc	tsrc/sqliteInt.h	/^  u8 bBenignMalloc;             \/* Do not require OOMs if true *\/$/;"	m	struct:sqlite3
bBusy	sqlite3.c	/^  u8 bBusy;            \/* Prevent endless loops on corrupt database files *\/$/;"	m	struct:MemPage	file:
bBusy	src/btreeInt.h	/^  u8 bBusy;            \/* Prevent endless loops on corrupt database files *\/$/;"	m	struct:MemPage
bBusy	tsrc/btreeInt.h	/^  u8 bBusy;            \/* Prevent endless loops on corrupt database files *\/$/;"	m	struct:MemPage
bCleanup	ext/rbu/sqlite3rbu.c	/^  int bCleanup;                   \/* True in "cleanup" state *\/$/;"	m	struct:RbuObjIter	file:
bCleanup	sqlite3.c	/^  int bCleanup;                   \/* True in "cleanup" state *\/$/;"	m	struct:RbuObjIter	file:
bCleanup	tsrc/sqlite3rbu.c	/^  int bCleanup;                   \/* True in "cleanup" state *\/$/;"	m	struct:RbuObjIter	file:
bColumnsize	ext/fts5/fts5Int.h	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config
bColumnsize	fts5.c	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config	file:
bColumnsize	sqlite3.c	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config	file:
bColumnsize	tsrc/fts5.c	/^  int bColumnsize;                \/* "columnsize=" option value (dflt==1) *\/$/;"	m	struct:Fts5Config	file:
bConditional	src/test_sqllog.c	/^  int bConditional;               \/* Only trace if *-sqllog file is present *\/$/;"	m	struct:SLGlobal	file:
bConstraint	sqlite3.c	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable	file:
bConstraint	src/sqliteInt.h	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable
bConstraint	tsrc/sqliteInt.h	/^  u8 bConstraint;           \/* True if constraints are supported *\/$/;"	m	struct:VTable
bContent	ext/fts5/fts5_hash.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bContent	fts5.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bContent	sqlite3.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bContent	tsrc/fts5.c	/^  u8 bContent;                    \/* Set content-flag (detail=none mode) *\/$/;"	m	struct:Fts5HashEntry	file:
bCoreMutex	sqlite3.c	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bCoreMutex	src/sqliteInt.h	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config
bCoreMutex	tsrc/sqliteInt.h	/^  int bCoreMutex;                   \/* True to enable core mutexing *\/$/;"	m	struct:Sqlite3Config
bDeclared	sqlite3.c	/^  int bDeclared;      \/* True after sqlite3_declare_vtab() is called *\/$/;"	m	struct:VtabCtx	file:
bDeclared	src/vtab.c	/^  int bDeclared;      \/* True after sqlite3_declare_vtab() is called *\/$/;"	m	struct:VtabCtx	file:
bDeclared	tsrc/vtab.c	/^  int bDeclared;      \/* True after sqlite3_declare_vtab() is called *\/$/;"	m	struct:VtabCtx	file:
bDeferConstraints	ext/session/sqlite3session.c	/^  int bDeferConstraints;          \/* True to defer constraints *\/$/;"	m	struct:SessionApplyCtx	file:
bDeferConstraints	sqlite3.c	/^  int bDeferConstraints;          \/* True to defer constraints *\/$/;"	m	struct:SessionApplyCtx	file:
bDeferConstraints	tsrc/sqlite3session.c	/^  int bDeferConstraints;          \/* True to defer constraints *\/$/;"	m	struct:SessionApplyCtx	file:
bDeferred	ext/fts3/fts3Int.h	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr
bDeferred	sqlite3.c	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr	file:
bDeferred	tsrc/fts3Int.h	/^  u8 bDeferred;              \/* True if this expression is entirely deferred *\/$/;"	m	struct:Fts3Expr
bDel	ext/fts5/fts5_hash.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	ext/fts5/fts5_index.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDel	fts5.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	fts5.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDel	sqlite3.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	sqlite3.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDel	tsrc/fts5.c	/^  u8 bDel;                        \/* Set delete-flag @ iSzPoslist *\/$/;"	m	struct:Fts5HashEntry	file:
bDel	tsrc/fts5.c	/^  u8 bDel;                        \/* True if the delete flag is set *\/$/;"	m	struct:Fts5SegIter	file:
bDelete	ext/fts5/fts5_index.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDelete	fts5.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDelete	sqlite3.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDelete	tsrc/fts5.c	/^  int bDelete;                    \/* Current write is a delete *\/$/;"	m	struct:Fts5Index	file:
bDesc	ext/fts3/fts3Int.h	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor
bDesc	ext/fts5/fts5_expr.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	ext/fts5/fts5_main.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDesc	fts5.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	fts5.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDesc	sqlite3.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	sqlite3.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDesc	sqlite3.c	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor	file:
bDesc	tsrc/fts3Int.h	/^  u8 bDesc;                       \/* True to sort in descending order *\/$/;"	m	struct:Fts3Cursor
bDesc	tsrc/fts5.c	/^  int bDesc;                      \/* Iterate in descending rowid order *\/$/;"	m	struct:Fts5Expr	file:
bDesc	tsrc/fts5.c	/^  int bDesc;                      \/* True for "ORDER BY rowid DESC" queries *\/$/;"	m	struct:Fts5Cursor	file:
bDescIdx	ext/fts3/fts3Int.h	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table
bDescIdx	sqlite3.c	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table	file:
bDescIdx	tsrc/fts3Int.h	/^  u8 bDescIdx;                    \/* True if doclists are in reverse order *\/$/;"	m	struct:Fts3Table
bDestLocked	sqlite3.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bDestLocked	src/backup.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bDestLocked	tsrc/backup.c	/^  int bDestLocked;         \/* True once a write-transaction is open on pDest *\/$/;"	m	struct:sqlite3_backup	file:
bDisable	sqlite3.c	/^  u32 bDisable;           \/* Only operate the lookaside when zero *\/$/;"	m	struct:Lookaside	file:
bDisable	src/sqliteInt.h	/^  u32 bDisable;           \/* Only operate the lookaside when zero *\/$/;"	m	struct:Lookaside
bDisable	tsrc/sqliteInt.h	/^  u32 bDisable;           \/* Only operate the lookaside when zero *\/$/;"	m	struct:Lookaside
bDisposed	ext/misc/vtshim.c	/^  int bDisposed;                \/* True if disposed *\/$/;"	m	struct:vtshim_aux	file:
bDoTruncate	sqlite3.c	/^  u8 bDoTruncate;       \/* True to truncate db on commit *\/$/;"	m	struct:BtShared	file:
bDoTruncate	src/btreeInt.h	/^  u8 bDoTruncate;       \/* True to truncate db on commit *\/$/;"	m	struct:BtShared
bDoTruncate	tsrc/btreeInt.h	/^  u8 bDoTruncate;       \/* True to truncate db on commit *\/$/;"	m	struct:BtShared
bDone	sqlite3.c	/^  int bDone;                      \/* Set if thread is finished but not joined *\/$/;"	m	struct:SortSubtask	file:
bDone	src/vdbesort.c	/^  int bDone;                      \/* Set if thread is finished but not joined *\/$/;"	m	struct:SortSubtask	file:
bDone	tsrc/vdbesort.c	/^  int bDone;                      \/* Set if thread is finished but not joined *\/$/;"	m	struct:SortSubtask	file:
bEnable	ext/session/sqlite3session.c	/^  int bEnable;                    \/* True if currently recording *\/$/;"	m	struct:sqlite3_session	file:
bEnable	sqlite3.c	/^  int bEnable;                    \/* True if currently recording *\/$/;"	m	struct:sqlite3_session	file:
bEnable	tsrc/sqlite3session.c	/^  int bEnable;                    \/* True if currently recording *\/$/;"	m	struct:sqlite3_session	file:
bEnabled	src/test_multiplex.c	/^  unsigned char bEnabled;          \/* TRUE to use Multiplex VFS for this file *\/$/;"	m	struct:multiplexGroup	file:
bEof	ext/fts3/fts3Int.h	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr
bEof	ext/fts5/fts5Int.h	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader
bEof	ext/fts5/fts5Int.h	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter
bEof	ext/fts5/fts5_expr.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	ext/fts5/fts5_index.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	ext/fts5/fts5_vocab.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	ext/session/sqlite3session.c	/^  int bEof;                       \/* Set to true after xInput finished *\/$/;"	m	struct:SessionInput	file:
bEof	fts5.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	fts5.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	fts5.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	fts5.c	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader	file:
bEof	fts5.c	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter	file:
bEof	sqlite3.c	/^  int bEof;                       \/* Set to true after xInput finished *\/$/;"	m	struct:SessionInput	file:
bEof	sqlite3.c	/^  int bEof;                       \/* Set to true when merge is finished *\/$/;"	m	struct:IncrMerger	file:
bEof	sqlite3.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	sqlite3.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	sqlite3.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	sqlite3.c	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader	file:
bEof	sqlite3.c	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr	file:
bEof	sqlite3.c	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter	file:
bEof	src/vdbesort.c	/^  int bEof;                       \/* Set to true when merge is finished *\/$/;"	m	struct:IncrMerger	file:
bEof	tsrc/fts3Int.h	/^  u8 bEof;                   \/* True this expression is at EOF already *\/$/;"	m	struct:Fts3Expr
bEof	tsrc/fts5.c	/^  int bEof;                       \/* True at EOF *\/$/;"	m	struct:Fts5ExprNode	file:
bEof	tsrc/fts5.c	/^  int bEof;                       \/* True if this cursor is at EOF *\/$/;"	m	struct:Fts5VocabCursor	file:
bEof	tsrc/fts5.c	/^  int bEof;                     \/* At EOF already *\/$/;"	m	struct:Fts5DlidxLvl	file:
bEof	tsrc/fts5.c	/^  u8 bEof;                        \/* Set to true at EOF *\/$/;"	m	struct:Fts5PoslistReader	file:
bEof	tsrc/fts5.c	/^  u8 bEof;$/;"	m	struct:Fts5IndexIter	file:
bEof	tsrc/sqlite3session.c	/^  int bEof;                       \/* Set to true after xInput finished *\/$/;"	m	struct:SessionInput	file:
bEof	tsrc/vdbesort.c	/^  int bEof;                       \/* Set to true when merge is finished *\/$/;"	m	struct:IncrMerger	file:
bErr	ext/misc/json1.c	/^  u8 bErr;                 \/* True if an error has been encountered *\/$/;"	m	struct:JsonString	file:
bErr	sqlite3.c	/^  u8 bErr;                 \/* True if an error has been encountered *\/$/;"	m	struct:JsonString	file:
bErr	tsrc/json1.c	/^  u8 bErr;                 \/* True if an error has been encountered *\/$/;"	m	struct:JsonString	file:
bExclusive	sqlite3.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bExclusive	src/os_win.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bExclusive	tsrc/os_win.c	/^  BOOL bExclusive;    \/* Indicates an exclusive lock has been obtained *\/$/;"	m	struct:winceLock	file:
bExplain	test/speedtest1.c	/^  int bExplain;              \/* Print SQL with EXPLAIN prefix *\/$/;"	m	struct:Global	file:
bFirst	ext/fts3/fts3Int.h	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken
bFirst	sqlite3.c	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken	file:
bFirst	tsrc/fts3Int.h	/^  int bFirst;                     \/* True if token must appear at position 0 *\/$/;"	m	struct:Fts3PhraseToken
bFirstRowidInDoclist	ext/fts5/fts5_index.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInDoclist	fts5.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInDoclist	sqlite3.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInDoclist	tsrc/fts5.c	/^  u8 bFirstRowidInDoclist;        \/* True if next rowid is first in doclist *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	ext/fts5/fts5_index.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	fts5.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	sqlite3.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstRowidInPage	tsrc/fts5.c	/^  u8 bFirstRowidInPage;           \/* True if next rowid is first in page *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	ext/fts5/fts5_index.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	fts5.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	sqlite3.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFirstTermInPage	tsrc/fts5.c	/^  u8 bFirstTermInPage;            \/* True if next term will be first in leaf *\/$/;"	m	struct:Fts5SegWriter	file:
bFlag	ext/fts5/fts5Int.h	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader
bFlag	fts5.c	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader	file:
bFlag	sqlite3.c	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader	file:
bFlag	tsrc/fts5.c	/^  u8 bFlag;                       \/* For client use (any custom purpose) *\/$/;"	m	struct:Fts5PoslistReader	file:
bFreeList	ext/fts3/fts3Int.h	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist
bFreeList	sqlite3.c	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist	file:
bFreeList	tsrc/fts3Int.h	/^  int bFreeList;                 \/* True if pList should be sqlite3_free()d *\/$/;"	m	struct:Fts3Doclist
bFts4	ext/fts3/fts3Int.h	/^  u8 bFts4;                       \/* True for FTS4, false for FTS3 *\/$/;"	m	struct:Fts3Table
bFts4	ext/fts3/fts3_expr.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFts4	sqlite3.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFts4	sqlite3.c	/^  u8 bFts4;                       \/* True for FTS4, false for FTS3 *\/$/;"	m	struct:Fts3Table	file:
bFts4	tsrc/fts3Int.h	/^  u8 bFts4;                       \/* True for FTS4, false for FTS3 *\/$/;"	m	struct:Fts3Table
bFts4	tsrc/fts3_expr.c	/^  int bFts4;                          \/* True to allow FTS4-only syntax *\/$/;"	m	struct:ParseContext	file:
bFullMutex	sqlite3.c	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config	file:
bFullMutex	src/sqliteInt.h	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config
bFullMutex	tsrc/sqliteInt.h	/^  int bFullMutex;                   \/* True to enable full mutexing *\/$/;"	m	struct:Sqlite3Config
bGlobal	ext/fts3/fts3_snippet.c	/^  int bGlobal;                    \/* Set if global data is loaded *\/$/;"	m	struct:MatchinfoBuffer	file:
bGlobal	sqlite3.c	/^  int bGlobal;                    \/* Set if global data is loaded *\/$/;"	m	struct:MatchinfoBuffer	file:
bGlobal	tsrc/fts3_snippet.c	/^  int bGlobal;                    \/* Set if global data is loaded *\/$/;"	m	struct:MatchinfoBuffer	file:
bHandleVtab	tool/sqldiff.c	/^  int bHandleVtab;          \/* Handle fts3, fts4, fts5 and rtree vtabs *\/$/;"	m	struct:GlobalVars	file:
bHasDocsize	ext/fts3/fts3Int.h	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table
bHasDocsize	sqlite3.c	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table	file:
bHasDocsize	tsrc/fts3Int.h	/^  u8 bHasDocsize;                 \/* True if %_docsize table exists *\/$/;"	m	struct:Fts3Table
bHasStat	ext/fts3/fts3Int.h	/^  u8 bHasStat;                    \/* True if %_stat table exists (2==unknown) *\/$/;"	m	struct:Fts3Table
bHasStat	sqlite3.c	/^  u8 bHasStat;                    \/* True if %_stat table exists (2==unknown) *\/$/;"	m	struct:Fts3Table	file:
bHasStat	tsrc/fts3Int.h	/^  u8 bHasStat;                    \/* True if %_stat table exists (2==unknown) *\/$/;"	m	struct:Fts3Table
bIgnore	ext/fts3/fts3.c	/^  int bIgnore;$/;"	m	struct:TokenDoclist	file:
bIgnore	sqlite3.c	/^  int bIgnore;$/;"	m	struct:TokenDoclist	file:
bIgnore	tsrc/fts3.c	/^  int bIgnore;$/;"	m	struct:TokenDoclist	file:
bIgnoreSavepoint	ext/fts3/fts3Int.h	/^  u8 bIgnoreSavepoint;            \/* True to ignore xSavepoint invocations *\/$/;"	m	struct:Fts3Table
bIgnoreSavepoint	sqlite3.c	/^  u8 bIgnoreSavepoint;            \/* True to ignore xSavepoint invocations *\/$/;"	m	struct:Fts3Table	file:
bIgnoreSavepoint	tsrc/fts3Int.h	/^  u8 bIgnoreSavepoint;            \/* True to ignore xSavepoint invocations *\/$/;"	m	struct:Fts3Table
bIgnoreSqlErrors	mptest/mptest.c	/^  int bIgnoreSqlErrors;  \/* Ignore errors in SQL statements *\/$/;"	m	struct:Global	file:
bIncr	ext/fts3/fts3Int.h	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase
bIncr	sqlite3.c	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase	file:
bIncr	tsrc/fts3Int.h	/^  int bIncr;                 \/* True if doclist is loaded incrementally *\/$/;"	m	struct:Fts3Phrase
bIndirect	ext/session/sqlite3session.c	/^  int bIndirect;                  \/* True if all changes are indirect *\/$/;"	m	struct:sqlite3_session	file:
bIndirect	ext/session/sqlite3session.c	/^  int bIndirect;                  \/* True if current change was indirect *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bIndirect	ext/session/sqlite3session.c	/^  int bIndirect;                  \/* True if this change is "indirect" *\/$/;"	m	struct:SessionChange	file:
bIndirect	sqlite3.c	/^  int bIndirect;                  \/* True if all changes are indirect *\/$/;"	m	struct:sqlite3_session	file:
bIndirect	sqlite3.c	/^  int bIndirect;                  \/* True if current change was indirect *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bIndirect	sqlite3.c	/^  int bIndirect;                  \/* True if this change is "indirect" *\/$/;"	m	struct:SessionChange	file:
bIndirect	tsrc/sqlite3session.c	/^  int bIndirect;                  \/* True if all changes are indirect *\/$/;"	m	struct:sqlite3_session	file:
bIndirect	tsrc/sqlite3session.c	/^  int bIndirect;                  \/* True if current change was indirect *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bIndirect	tsrc/sqlite3session.c	/^  int bIndirect;                  \/* True if this change is "indirect" *\/$/;"	m	struct:SessionChange	file:
bIsReader	sqlite3.c	/^  bft bIsReader:1;        \/* True for statements that read *\/$/;"	m	struct:Vdbe	file:
bIsReader	src/vdbeInt.h	/^  bft bIsReader:1;        \/* True for statements that read *\/$/;"	m	struct:Vdbe
bIsReader	tsrc/vdbeInt.h	/^  bft bIsReader:1;        \/* True for statements that read *\/$/;"	m	struct:Vdbe
bLegacyPrepare	src/tclsqlite.c	/^  int bLegacyPrepare;        \/* True to use sqlite3_prepare() *\/$/;"	m	struct:SqliteDb	file:
bLegacyPrepare	tsrc/tclsqlite.c	/^  int bLegacyPrepare;        \/* True to use sqlite3_prepare() *\/$/;"	m	struct:SqliteDb	file:
bLine	sqlite3.c	/^  u8  bLine[100];         \/* Draw vertical in column i if bLine[i] is true *\/$/;"	m	struct:TreeView	file:
bLine	src/sqliteInt.h	/^  u8  bLine[100];         \/* Draw vertical in column i if bLine[i] is true *\/$/;"	m	struct:TreeView
bLine	tsrc/sqliteInt.h	/^  u8  bLine[100];         \/* Draw vertical in column i if bLine[i] is true *\/$/;"	m	struct:TreeView
bLocaltimeFault	sqlite3.c	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config	file:
bLocaltimeFault	src/sqliteInt.h	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config
bLocaltimeFault	tsrc/sqliteInt.h	/^  int bLocaltimeFault;              \/* True to fail localtime() calls *\/$/;"	m	struct:Sqlite3Config
bLockFiles	ext/async/sqlite3async.c	/^  volatile int bLockFiles;     \/* Current value of "lockfiles" parameter *\/$/;"	m	struct:TestAsyncStaticData	file:
bLookup	ext/fts3/fts3Int.h	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader
bLookup	ext/fts3/fts3_write.c	/^  u8 bLookup;                     \/* True for a lookup only *\/$/;"	m	struct:Fts3SegReader	file:
bLookup	sqlite3.c	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader	file:
bLookup	sqlite3.c	/^  u8 bLookup;                     \/* True for a lookup only *\/$/;"	m	struct:Fts3SegReader	file:
bLookup	tsrc/fts3Int.h	/^  int bLookup;                    \/* True if a lookup of a single entry. *\/$/;"	m	struct:Fts3MultiSegReader
bLookup	tsrc/fts3_write.c	/^  u8 bLookup;                     \/* True for a lookup only *\/$/;"	m	struct:Fts3SegReader	file:
bMalloced	sqlite3.c	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside	file:
bMalloced	src/sqliteInt.h	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside
bMalloced	tsrc/sqliteInt.h	/^  u8 bMalloced;           \/* True if pStart obtained from sqlite3_malloc() *\/$/;"	m	struct:Lookaside
bMemShrink	test/speedtest1.c	/^  int bMemShrink;            \/* Call sqlite3_db_release_memory() often *\/$/;"	m	struct:Global	file:
bMemstat	sqlite3.c	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config	file:
bMemstat	src/sqliteInt.h	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config
bMemstat	tsrc/sqliteInt.h	/^  int bMemstat;                     \/* True to enable memory status *\/$/;"	m	struct:Sqlite3Config
bMiss	ext/fts5/fts5_expr.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bMiss	fts5.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bMiss	sqlite3.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bMiss	tsrc/fts5.c	/^  int bMiss;$/;"	m	struct:Fts5PoslistPopulator	file:
bNoDiscard	ext/session/sqlite3session.c	/^  int bNoDiscard;                 \/* If true, discard no data *\/$/;"	m	struct:SessionInput	file:
bNoDiscard	sqlite3.c	/^  int bNoDiscard;                 \/* If true, discard no data *\/$/;"	m	struct:SessionInput	file:
bNoDiscard	tsrc/sqlite3session.c	/^  int bNoDiscard;                 \/* If true, discard no data *\/$/;"	m	struct:SessionInput	file:
bNoIncrDoclist	ext/fts3/fts3Int.h	/^  int bNoIncrDoclist;$/;"	m	struct:Fts3Table
bNoIncrDoclist	sqlite3.c	/^  int bNoIncrDoclist;$/;"	m	struct:Fts3Table	file:
bNoIncrDoclist	tsrc/fts3Int.h	/^  int bNoIncrDoclist;$/;"	m	struct:Fts3Table
bNoLeafData	ext/fts3/fts3_write.c	/^  u8 bNoLeafData;                 \/* If true, store 0 for segment size *\/$/;"	m	struct:IncrmergeWriter	file:
bNoLeafData	sqlite3.c	/^  u8 bNoLeafData;                 \/* If true, store 0 for segment size *\/$/;"	m	struct:IncrmergeWriter	file:
bNoLeafData	tsrc/fts3_write.c	/^  u8 bNoLeafData;                 \/* If true, store 0 for segment size *\/$/;"	m	struct:IncrmergeWriter	file:
bNoLock	sqlite3.c	/^  BOOL bNoLock;                      \/* Non-zero if locking is disabled. *\/$/;"	m	struct:winVfsAppData	file:
bNoLock	src/os_win.c	/^  BOOL bNoLock;                      \/* Non-zero if locking is disabled. *\/$/;"	m	struct:winVfsAppData	file:
bNoLock	tsrc/os_win.c	/^  BOOL bNoLock;                      \/* Non-zero if locking is disabled. *\/$/;"	m	struct:winVfsAppData	file:
bNolock	ext/rbu/sqlite3rbu.c	/^  u8 bNolock;                     \/* True to fail EXCLUSIVE locks *\/$/;"	m	struct:rbu_file	file:
bNolock	sqlite3.c	/^  u8 bNolock;                     \/* True to fail EXCLUSIVE locks *\/$/;"	m	struct:rbu_file	file:
bNolock	tsrc/sqlite3rbu.c	/^  u8 bNolock;                     \/* True to fail EXCLUSIVE locks *\/$/;"	m	struct:rbu_file	file:
bNomatch	ext/fts5/fts5_expr.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNomatch	fts5.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNomatch	sqlite3.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNomatch	tsrc/fts5.c	/^  int bNomatch;                   \/* True if entry is not a match *\/$/;"	m	struct:Fts5ExprNode	file:
bNot	parse.c	/^  int bNot;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
bNot	sqlite3.c	/^  int bNot;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
bNot	tsrc/parse.c	/^  int bNot;         \/* True if the NOT keyword is present *\/$/;"	m	struct:LikeOp	file:
bOk	ext/fts5/fts5_expr.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOk	fts5.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOk	sqlite3.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOk	tsrc/fts5.c	/^  int bOk;                        \/* True if ok to populate *\/$/;"	m	struct:Fts5PoslistPopulator	file:
bOomEnable	tool/fuzzershell.c	/^  int bOomEnable;                  \/* True to enable OOM simulation *\/$/;"	m	struct:GlobalVars	file:
bOomOnce	tool/fuzzershell.c	/^  int bOomOnce;                    \/* Fail just once if true *\/$/;"	m	struct:GlobalVars	file:
bOpenUri	sqlite3.c	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config	file:
bOpenUri	src/sqliteInt.h	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config
bOpenUri	tsrc/sqliteInt.h	/^  int bOpenUri;                     \/* True to interpret filenames as URIs *\/$/;"	m	struct:Sqlite3Config
bOrderedInnerLoop	sqlite3.c	/^  u8 bOrderedInnerLoop;     \/* True if only the inner-most loop is ordered *\/$/;"	m	struct:WhereInfo	file:
bOrderedInnerLoop	sqlite3.c	/^  u8 bOrderedInnerLoop; \/* ORDER BY correctly sorts the inner loop *\/$/;"	m	struct:SortCtx	file:
bOrderedInnerLoop	src/select.c	/^  u8 bOrderedInnerLoop; \/* ORDER BY correctly sorts the inner loop *\/$/;"	m	struct:SortCtx	file:
bOrderedInnerLoop	src/whereInt.h	/^  u8 bOrderedInnerLoop;     \/* True if only the inner-most loop is ordered *\/$/;"	m	struct:WhereInfo
bOrderedInnerLoop	tsrc/select.c	/^  u8 bOrderedInnerLoop; \/* ORDER BY correctly sorts the inner loop *\/$/;"	m	struct:SortCtx	file:
bOrderedInnerLoop	tsrc/whereInt.h	/^  u8 bOrderedInnerLoop;     \/* True if only the inner-most loop is ordered *\/$/;"	m	struct:WhereInfo
bOwned	sqlite3.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bOwned	src/os_win.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bOwned	tsrc/os_win.c	/^  BOOL bOwned;  \/* Do we own the heap (i.e. destroy it on shutdown)? *\/$/;"	m	struct:winMemData	file:
bPatch	ext/session/sqlite3session.c	/^  int bPatch;                     \/* True to accumulate patchsets *\/$/;"	m	struct:sqlite3_changegroup	file:
bPatch	sqlite3.c	/^  int bPatch;                     \/* True to accumulate patchsets *\/$/;"	m	struct:sqlite3_changegroup	file:
bPatch	tsrc/sqlite3session.c	/^  int bPatch;                     \/* True to accumulate patchsets *\/$/;"	m	struct:sqlite3_changegroup	file:
bPatchset	ext/session/sqlite3session.c	/^  int bPatchset;                  \/* True if this is a patchset *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bPatchset	sqlite3.c	/^  int bPatchset;                  \/* True if this is a patchset *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bPatchset	tsrc/sqlite3session.c	/^  int bPatchset;                  \/* True if this is a patchset *\/$/;"	m	struct:sqlite3_changeset_iter	file:
bPending	sqlite3.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPending	src/os_win.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPending	tsrc/os_win.c	/^  BOOL bPending;      \/* Indicates a pending lock has been obtained *\/$/;"	m	struct:winceLock	file:
bPersist	src/test_syscall.c	/^  int bPersist;                   \/* 1 for persistent errors, 0 for transient *\/$/;"	m	struct:TestSyscallGlobal	file:
bPoint	ext/rtree/rtree.c	/^  u8 bPoint;                        \/* True if sPoint is valid *\/$/;"	m	struct:RtreeCursor	file:
bPoint	sqlite3.c	/^  u8 bPoint;                        \/* True if sPoint is valid *\/$/;"	m	struct:RtreeCursor	file:
bPoint	tsrc/rtree.c	/^  u8 bPoint;                        \/* True if sPoint is valid *\/$/;"	m	struct:RtreeCursor	file:
bPrefix	ext/fts5/fts5_expr.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefix	fts5.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefix	sqlite3.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefix	tsrc/fts5.c	/^  int bPrefix;                    \/* True for a prefix term *\/$/;"	m	struct:Fts5ExprTerm	file:
bPrefixIndex	ext/fts5/fts5Int.h	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config
bPrefixIndex	fts5.c	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config	file:
bPrefixIndex	sqlite3.c	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config	file:
bPrefixIndex	tsrc/fts5.c	/^  int bPrefixIndex;               \/* True to use prefix-indexes *\/$/;"	m	struct:Fts5Config	file:
bPrevDelete	ext/fts3/fts3Int.h	/^  int bPrevDelete;                \/* True if last operation was a delete *\/$/;"	m	struct:Fts3Table
bPrevDelete	sqlite3.c	/^  int bPrevDelete;                \/* True if last operation was a delete *\/$/;"	m	struct:Fts3Table	file:
bPrevDelete	tsrc/fts3Int.h	/^  int bPrevDelete;                \/* True if last operation was a delete *\/$/;"	m	struct:Fts3Table
bPrevValid	ext/fts5/fts5_index.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bPrevValid	fts5.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bPrevValid	sqlite3.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bPrevValid	tsrc/fts5.c	/^  int bPrevValid;                 \/* True if iPrev is valid *\/$/;"	m	struct:Fts5DlidxWriter	file:
bProcessLock	sqlite3.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bProcessLock	src/os_unix.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bProcessLock	tsrc/os_unix.c	/^  unsigned char bProcessLock;     \/* An exclusive process lock is held *\/$/;"	m	struct:unixInodeInfo	file:
bPurgeable	sqlite3.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	sqlite3.c	/^  u8 bPurgeable;                      \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bPurgeable	src/pcache.c	/^  u8 bPurgeable;                      \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bPurgeable	src/pcache1.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bPurgeable	src/test_pcache.c	/^  int bPurgeable;           \/* True if the page cache is purgeable *\/$/;"	m	struct:testpcache	file:
bPurgeable	tsrc/pcache.c	/^  u8 bPurgeable;                      \/* True if pages are on backing store *\/$/;"	m	struct:PCache	file:
bPurgeable	tsrc/pcache1.c	/^  int bPurgeable;                     \/* True if cache is purgeable *\/$/;"	m	struct:PCache1	file:
bRaw	tool/showdb.c	/^  int bRaw;                       \/* True to access db file via OS APIs *\/$/;"	m	struct:GlobalData	file:
bRec	src/test_sqllog.c	/^  int bRec;                       \/* True if testSqllog() is called rec. *\/$/;"	m	struct:SLGlobal	file:
bRecursive	ext/misc/json1.c	/^  u8 bRecursive;             \/* True for json_tree().  False for json_each() *\/$/;"	m	struct:JsonEachCursor	file:
bRecursive	sqlite3.c	/^  u8 bRecursive;             \/* True for json_tree().  False for json_each() *\/$/;"	m	struct:JsonEachCursor	file:
bRecursive	tsrc/json1.c	/^  u8 bRecursive;             \/* True for json_tree().  False for json_each() *\/$/;"	m	struct:JsonEachCursor	file:
bRemoveDiacritic	ext/fts3/fts3_unicode.c	/^  int bRemoveDiacritic;$/;"	m	struct:unicode_tokenizer	file:
bRemoveDiacritic	ext/fts5/fts5_tokenize.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bRemoveDiacritic	fts5.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bRemoveDiacritic	sqlite3.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bRemoveDiacritic	sqlite3.c	/^  int bRemoveDiacritic;$/;"	m	struct:unicode_tokenizer	file:
bRemoveDiacritic	tsrc/fts3_unicode.c	/^  int bRemoveDiacritic;$/;"	m	struct:unicode_tokenizer	file:
bRemoveDiacritic	tsrc/fts5.c	/^  int bRemoveDiacritic;           \/* True if remove_diacritics=1 is set *\/$/;"	m	struct:Unicode61Tokenizer	file:
bReprepare	test/speedtest1.c	/^  int bReprepare;            \/* True to reprepare the SQL on each rerun *\/$/;"	m	struct:Global	file:
bReserved	sqlite3.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bReserved	src/os_win.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bReserved	tsrc/os_win.c	/^  BOOL bReserved;     \/* Indicates a reserved lock has been obtained *\/$/;"	m	struct:winceLock	file:
bRestart	ext/fts3/fts3Int.h	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader
bRestart	sqlite3.c	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader	file:
bRestart	tsrc/fts3Int.h	/^  int bRestart;$/;"	m	struct:Fts3MultiSegReader
bReuse	src/test_sqllog.c	/^  int bReuse;                     \/* True to avoid extra copies of db files *\/$/;"	m	struct:SLGlobal	file:
bRev	ext/fts5/fts5_index.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bRev	fts5.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bRev	sqlite3.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bRev	tsrc/fts5.c	/^  int bRev;                       \/* True to iterate in reverse order *\/$/;"	m	struct:Fts5Iter	file:
bSchemaOnly	tool/sqldiff.c	/^  int bSchemaOnly;          \/* Only show schema differences *\/$/;"	m	struct:GlobalVars	file:
bSchemaPK	tool/sqldiff.c	/^  int bSchemaPK;            \/* Use the schema-defined PK, not the true PK *\/$/;"	m	struct:GlobalVars	file:
bSkipEmpty	ext/fts5/fts5_index.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSkipEmpty	fts5.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSkipEmpty	sqlite3.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSkipEmpty	tsrc/fts5.c	/^  u8 bSkipEmpty;                  \/* True to skip deleted entries *\/$/;"	m	struct:Fts5Iter	file:
bSpanIsTab	sqlite3.c	/^    unsigned bSpanIsTab :1; \/* zSpan holds DB.TABLE.COLUMN *\/$/;"	m	struct:ExprList::ExprList_item	file:
bSpanIsTab	src/sqliteInt.h	/^    unsigned bSpanIsTab :1; \/* zSpan holds DB.TABLE.COLUMN *\/$/;"	m	struct:ExprList::ExprList_item
bSpanIsTab	tsrc/sqliteInt.h	/^    unsigned bSpanIsTab :1; \/* zSpan holds DB.TABLE.COLUMN *\/$/;"	m	struct:ExprList::ExprList_item
bSqlOnly	test/speedtest1.c	/^  int bSqlOnly;              \/* True to print the SQL once only *\/$/;"	m	struct:Global	file:
bSqlTrace	mptest/mptest.c	/^  int bSqlTrace;         \/* True to trace SQL commands *\/$/;"	m	struct:Global	file:
bStart	ext/fts3/fts3Int.h	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr
bStart	sqlite3.c	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr	file:
bStart	tsrc/fts3Int.h	/^  u8 bStart;                 \/* True if iDocid is valid *\/$/;"	m	struct:Fts3Expr
bStatic	ext/misc/json1.c	/^  u8 bStatic;              \/* True if zBuf is static space *\/$/;"	m	struct:JsonString	file:
bStatic	sqlite3.c	/^  u8 bStatic;              \/* True if zBuf is static space *\/$/;"	m	struct:JsonString	file:
bStatic	tsrc/json1.c	/^  u8 bStatic;              \/* True if zBuf is static space *\/$/;"	m	struct:JsonString	file:
bSubst	ext/fts5/fts5_tcl.c	/^  int bSubst;$/;"	m	struct:F5tTokenizeCtx	file:
bSwap	tool/showwal.c	/^  int bSwap;           \/* True to do byte swapping on 32-bit words *\/$/;"	m	struct:Cksum	file:
bSync	mptest/mptest.c	/^  int bSync;             \/* Call fsync() *\/$/;"	m	struct:Global	file:
bSyncSet	sqlite3.c	/^  u8 bSyncSet;         \/* True if "PRAGMA synchronous=N" has been run *\/$/;"	m	struct:Db	file:
bSyncSet	src/sqliteInt.h	/^  u8 bSyncSet;         \/* True if "PRAGMA synchronous=N" has been run *\/$/;"	m	struct:Db
bSyncSet	tsrc/sqliteInt.h	/^  u8 bSyncSet;         \/* True if "PRAGMA synchronous=N" has been run *\/$/;"	m	struct:Db
bTermEq	ext/fts5/fts5_index.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTermEq	fts5.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTermEq	sqlite3.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTermEq	tsrc/fts5.c	/^  u8 bTermEq;                     \/* True if the terms are equal *\/$/;"	m	struct:Fts5CResult	file:
bTotalsValid	ext/fts5/fts5_storage.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bTotalsValid	fts5.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bTotalsValid	sqlite3.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bTotalsValid	tsrc/fts5.c	/^  int bTotalsValid;               \/* True if nTotalRow\/aTotalSize[] are valid *\/$/;"	m	struct:Fts5Storage	file:
bTrace	tool/offsets.c	/^  int bTrace;           \/* True for tracing output *\/$/;"	m	struct:GState	file:
bTruncate	src/test_multiplex.c	/^  unsigned char bTruncate;         \/* TRUE to enable truncation of databases *\/$/;"	m	struct:multiplexGroup	file:
bUnderPressure	sqlite3.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnderPressure	src/pcache1.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnderPressure	tsrc/pcache1.c	/^  int bUnderPressure;            \/* True if low on PAGECACHE memory *\/$/;"	m	struct:PCacheGlobal	file:
bUnique	ext/rbu/sqlite3rbu.c	/^  int bUnique;                    \/* Current index is unique *\/$/;"	m	struct:RbuObjIter	file:
bUnique	sqlite3.c	/^  int bUnique;                    \/* Current index is unique *\/$/;"	m	struct:RbuObjIter	file:
bUnique	tsrc/sqlite3rbu.c	/^  int bUnique;                    \/* Current index is unique *\/$/;"	m	struct:RbuObjIter	file:
bUnordered	sqlite3.c	/^  unsigned bUnordered:1;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index	file:
bUnordered	src/sqliteInt.h	/^  unsigned bUnordered:1;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index
bUnordered	tsrc/sqliteInt.h	/^  unsigned bUnordered:1;   \/* Use this index for == or IN queries only *\/$/;"	m	struct:Index
bUseCis	sqlite3.c	/^  int bUseCis;                      \/* Use covering indices for full-scans *\/$/;"	m	struct:Sqlite3Config	file:
bUseCis	src/sqliteInt.h	/^  int bUseCis;                      \/* Use covering indices for full-scans *\/$/;"	m	struct:Sqlite3Config
bUseCis	tsrc/sqliteInt.h	/^  int bUseCis;                      \/* Use covering indices for full-scans *\/$/;"	m	struct:Sqlite3Config
bUseFetch	sqlite3.c	/^  u8 bUseFetch;               \/* True to use xFetch() *\/$/;"	m	struct:Pager	file:
bUseFetch	src/pager.c	/^  u8 bUseFetch;               \/* True to use xFetch() *\/$/;"	m	struct:Pager	file:
bUseFetch	tsrc/pager.c	/^  u8 bUseFetch;               \/* True to use xFetch() *\/$/;"	m	struct:Pager	file:
bUsePMA	sqlite3.c	/^  u8 bUsePMA;                     \/* True if one or more PMAs created *\/$/;"	m	struct:VdbeSorter	file:
bUsePMA	src/vdbesort.c	/^  u8 bUsePMA;                     \/* True if one or more PMAs created *\/$/;"	m	struct:VdbeSorter	file:
bUsePMA	tsrc/vdbesort.c	/^  u8 bUsePMA;                     \/* True if one or more PMAs created *\/$/;"	m	struct:VdbeSorter	file:
bUseThread	sqlite3.c	/^  int bUseThread;                 \/* True to use a bg thread for this object *\/$/;"	m	struct:IncrMerger	file:
bUseThread	src/vdbesort.c	/^  int bUseThread;                 \/* True to use a bg thread for this object *\/$/;"	m	struct:IncrMerger	file:
bUseThread	tsrc/vdbesort.c	/^  int bUseThread;                 \/* True to use a bg thread for this object *\/$/;"	m	struct:IncrMerger	file:
bUseThreads	sqlite3.c	/^  u8 bUseThreads;                 \/* True to use background threads *\/$/;"	m	struct:VdbeSorter	file:
bUseThreads	src/vdbesort.c	/^  u8 bUseThreads;                 \/* True to use background threads *\/$/;"	m	struct:VdbeSorter	file:
bUseThreads	tsrc/vdbesort.c	/^  u8 bUseThreads;                 \/* True to use background threads *\/$/;"	m	struct:VdbeSorter	file:
bVarOnly	sqlite3.c	/^  int bVarOnly;       \/* Check for variable references only *\/$/;"	m	struct:DbFixer	file:
bVarOnly	src/sqliteInt.h	/^  int bVarOnly;       \/* Check for variable references only *\/$/;"	m	struct:DbFixer
bVarOnly	tsrc/sqliteInt.h	/^  int bVarOnly;       \/* Check for variable references only *\/$/;"	m	struct:DbFixer
bVerify	test/speedtest1.c	/^  int bVerify;               \/* Try to verify that results are correct *\/$/;"	m	struct:Global	file:
bWal	src/test_superlock.c	/^  int bWal;                       \/* True if db is a WAL database *\/$/;"	m	struct:Superlock	file:
bWithoutRowid	test/speedtest1.c	/^  int bWithoutRowid;         \/* True for --without-rowid *\/$/;"	m	struct:Global	file:
backslashOn	shell.c	/^  int backslashOn;       \/* Resolve C-style \\x escapes in SQL input text *\/$/;"	m	struct:ShellState	file:
backslashOn	src/shell.c	/^  int backslashOn;       \/* Resolve C-style \\x escapes in SQL input text *\/$/;"	m	struct:ShellState	file:
backslashOn	tsrc/shell.c	/^  int backslashOn;       \/* Resolve C-style \\x escapes in SQL input text *\/$/;"	m	struct:ShellState	file:
backtrace	sqlite3.c	20596;"	d	file:
backtrace	src/mem2.c	37;"	d	file:
backtrace	tsrc/mem2.c	37;"	d	file:
backtrace_symbols_fd	sqlite3.c	20597;"	d	file:
backtrace_symbols_fd	src/mem2.c	38;"	d	file:
backtrace_symbols_fd	tsrc/mem2.c	38;"	d	file:
backupOnePage	sqlite3.c	/^static int backupOnePage($/;"	f	file:
backupOnePage	src/backup.c	/^static int backupOnePage($/;"	f	file:
backupOnePage	tsrc/backup.c	/^static int backupOnePage($/;"	f	file:
backupTestCmd	src/test_backup.c	/^static int SQLITE_TCLAPI backupTestCmd($/;"	f	file:
backupTestFinish	src/test_backup.c	/^static void SQLITE_TCLAPI backupTestFinish(ClientData clientData){$/;"	f	file:
backupTestInit	src/test_backup.c	/^static int SQLITE_TCLAPI backupTestInit($/;"	f	file:
backupTruncateFile	sqlite3.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backupTruncateFile	src/backup.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backupTruncateFile	tsrc/backup.c	/^static int backupTruncateFile(sqlite3_file *pFile, i64 iSize){$/;"	f	file:
backupUpdate	sqlite3.c	/^static SQLITE_NOINLINE void backupUpdate($/;"	f	file:
backupUpdate	src/backup.c	/^static SQLITE_NOINLINE void backupUpdate($/;"	f	file:
backupUpdate	tsrc/backup.c	/^static SQLITE_NOINLINE void backupUpdate($/;"	f	file:
backup_finish	sqlite3.c	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_finish	sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_finish	src/sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_finish	tsrc/sqlite3ext.h	/^  int (*backup_finish)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_init	sqlite3.c	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
backup_init	sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_init	src/sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_init	tsrc/sqlite3ext.h	/^  sqlite3_backup *(*backup_init)(sqlite3*,const char*,sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	sqlite3.c	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_pagecount	sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	src/sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_pagecount	tsrc/sqlite3ext.h	/^  int (*backup_pagecount)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	sqlite3.c	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines	file:
backup_remaining	sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	src/sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_remaining	tsrc/sqlite3ext.h	/^  int (*backup_remaining)(sqlite3_backup*);$/;"	m	struct:sqlite3_api_routines
backup_step	sqlite3.c	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines	file:
backup_step	sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
backup_step	src/sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
backup_step	tsrc/sqlite3ext.h	/^  int (*backup_step)(sqlite3_backup*,int);$/;"	m	struct:sqlite3_api_routines
bail_on_error	shell.c	/^static int bail_on_error = 0;$/;"	v	file:
bail_on_error	src/shell.c	/^static int bail_on_error = 0;$/;"	v	file:
bail_on_error	tsrc/shell.c	/^static int bail_on_error = 0;$/;"	v	file:
balance	sqlite3.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance	src/btree.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance	tsrc/btree.c	/^static int balance(BtCursor *pCur){$/;"	f	file:
balance_deeper	sqlite3.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_deeper	src/btree.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_deeper	tsrc/btree.c	/^static int balance_deeper(MemPage *pRoot, MemPage **ppChild){$/;"	f	file:
balance_nonroot	sqlite3.c	/^static int balance_nonroot($/;"	f	file:
balance_nonroot	src/btree.c	/^static int balance_nonroot($/;"	f	file:
balance_nonroot	tsrc/btree.c	/^static int balance_nonroot($/;"	f	file:
balance_quick	sqlite3.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
balance_quick	src/btree.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
balance_quick	tsrc/btree.c	/^static int balance_quick(MemPage *pParent, MemPage *pPage, u8 *pSpace){$/;"	f	file:
base	ext/fts1/fts1.c	/^  sqlite3_vtab base;               \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_vtab	file:
base	ext/fts1/fts1.c	/^  sqlite3_vtab_cursor base;        \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_cursor	file:
base	ext/fts1/fts1_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	ext/fts1/fts1_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	ext/fts1/fts1_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	ext/fts1/fts1_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	ext/fts1/fulltext.c	/^  sqlite3_vtab base;$/;"	m	struct:fulltext_vtab	file:
base	ext/fts1/fulltext.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:fulltext_cursor	file:
base	ext/fts1/simple_tokenizer.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	ext/fts1/simple_tokenizer.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	ext/fts2/fts2.c	/^  sqlite3_vtab base;               \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_vtab	file:
base	ext/fts2/fts2.c	/^  sqlite3_vtab_cursor base;        \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_cursor	file:
base	ext/fts2/fts2_icu.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	ext/fts2/fts2_icu.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	ext/fts2/fts2_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	ext/fts2/fts2_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	ext/fts2/fts2_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	ext/fts2/fts2_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	ext/fts3/fts3Int.h	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table
base	ext/fts3/fts3Int.h	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor
base	ext/fts3/fts3_aux.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	ext/fts3/fts3_aux.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	ext/fts3/fts3_icu.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	ext/fts3/fts3_icu.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	ext/fts3/fts3_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	ext/fts3/fts3_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	ext/fts3/fts3_term.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3termTable	file:
base	ext/fts3/fts3_term.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3termCursor	file:
base	ext/fts3/fts3_test.c	/^  sqlite3_tokenizer base;$/;"	m	struct:test_tokenizer	file:
base	ext/fts3/fts3_test.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:test_tokenizer_cursor	file:
base	ext/fts3/fts3_tokenize_vtab.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokTable	file:
base	ext/fts3/fts3_tokenize_vtab.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokCursor	file:
base	ext/fts3/fts3_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	ext/fts3/fts3_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	ext/fts3/fts3_unicode.c	/^  sqlite3_tokenizer base;$/;"	m	struct:unicode_tokenizer	file:
base	ext/fts3/fts3_unicode.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:unicode_cursor	file:
base	ext/fts5/fts5_index.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	ext/fts5/fts5_main.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	ext/fts5/fts5_main.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	ext/fts5/fts5_test_tok.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5tokTable	file:
base	ext/fts5/fts5_test_tok.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5tokCursor	file:
base	ext/fts5/fts5_vocab.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	ext/fts5/fts5_vocab.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	ext/misc/amatch.c	/^  sqlite3_vtab base;         \/* Base class - must be first *\/$/;"	m	struct:amatch_vtab	file:
base	ext/misc/amatch.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:amatch_cursor	file:
base	ext/misc/carray.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:carray_cursor	file:
base	ext/misc/closure.c	/^  sqlite3_vtab base;         \/* Base class - must be first *\/$/;"	m	struct:closure_vtab	file:
base	ext/misc/closure.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:closure_cursor	file:
base	ext/misc/csv.c	/^  sqlite3_vtab base;              \/* Base class.  Must be first *\/$/;"	m	struct:CsvTable	file:
base	ext/misc/csv.c	/^  sqlite3_vtab_cursor base;       \/* Base class.  Must be first *\/$/;"	m	struct:CsvCursor	file:
base	ext/misc/fuzzer.c	/^  sqlite3_vtab base;         \/* Base class - must be first *\/$/;"	m	struct:fuzzer_vtab	file:
base	ext/misc/fuzzer.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:fuzzer_cursor	file:
base	ext/misc/json1.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:JsonEachCursor	file:
base	ext/misc/series.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:series_cursor	file:
base	ext/misc/spellfix.c	/^  sqlite3_vtab base;         \/* Base class - must be first *\/$/;"	m	struct:spellfix1_vtab	file:
base	ext/misc/spellfix.c	/^  sqlite3_vtab_cursor base;    \/* Base class - must be first *\/$/;"	m	struct:spellfix1_cursor	file:
base	ext/misc/vfslog.c	/^  sqlite3_file base;              \/* IO methods *\/$/;"	m	struct:VLogFile	file:
base	ext/misc/vfslog.c	/^  sqlite3_vfs base;               \/* VFS methods *\/$/;"	m	struct:VLogVfs	file:
base	ext/misc/vfsstat.c	/^  sqlite3_file base;              \/* IO methods *\/$/;"	m	struct:VStatFile	file:
base	ext/misc/vfsstat.c	/^  sqlite3_vfs base;               \/* VFS methods *\/$/;"	m	struct:VStatVfs	file:
base	ext/misc/vfsstat.c	/^  sqlite3_vtab_cursor base;       \/* Base class.  Must be first *\/$/;"	m	struct:VfsStatCursor	file:
base	ext/misc/vtshim.c	/^  sqlite3_vtab base;       \/* Base class - must be first *\/$/;"	m	struct:vtshim_vtab	file:
base	ext/misc/vtshim.c	/^  sqlite3_vtab_cursor base;    \/* Base class - must be first *\/$/;"	m	struct:vtshim_cursor	file:
base	ext/misc/wholenumber.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:wholenumber_cursor	file:
base	ext/rbu/sqlite3rbu.c	/^  sqlite3_file base;              \/* sqlite3_file methods *\/$/;"	m	struct:rbu_file	file:
base	ext/rbu/sqlite3rbu.c	/^  sqlite3_vfs base;               \/* rbu VFS shim methods *\/$/;"	m	struct:rbu_vfs	file:
base	ext/rtree/rtree.c	/^  sqlite3_vtab base;          \/* Base class.  Must be first *\/$/;"	m	struct:Rtree	file:
base	ext/rtree/rtree.c	/^  sqlite3_vtab_cursor base;         \/* Base class.  Must be first *\/$/;"	m	struct:RtreeCursor	file:
base	fts5.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	fts5.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	fts5.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	fts5.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	fts5.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	sqlite3.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	sqlite3.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	sqlite3.c	/^  sqlite3_file base;              \/* sqlite3_file methods *\/$/;"	m	struct:rbu_file	file:
base	sqlite3.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	sqlite3.c	/^  sqlite3_tokenizer base;$/;"	m	struct:unicode_tokenizer	file:
base	sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	sqlite3.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:unicode_cursor	file:
base	sqlite3.c	/^  sqlite3_vfs base;               \/* rbu VFS shim methods *\/$/;"	m	struct:rbu_vfs	file:
base	sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table	file:
base	sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokTable	file:
base	sqlite3.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	sqlite3.c	/^  sqlite3_vtab base;          \/* Base class.  Must be first *\/$/;"	m	struct:Rtree	file:
base	sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	sqlite3.c	/^  sqlite3_vtab base;$/;"	m	struct:StatTable	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;         \/* Base class.  Must be first *\/$/;"	m	struct:RtreeCursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokCursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:JsonEachCursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	sqlite3.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:StatCursor	file:
base	src/dbstat.c	/^  sqlite3_vtab base;$/;"	m	struct:StatTable	file:
base	src/dbstat.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:StatCursor	file:
base	src/printf.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	src/test8.c	/^  sqlite3_vtab base;$/;"	m	struct:echo_vtab	file:
base	src/test8.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:echo_cursor	file:
base	src/test_bestindex.c	/^  sqlite3_vtab base;$/;"	m	struct:tcl_vtab	file:
base	src/test_bestindex.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:tcl_cursor	file:
base	src/test_demovfs.c	/^  sqlite3_file base;              \/* Base class. Must be first. *\/$/;"	m	struct:DemoFile	file:
base	src/test_devsym.c	/^  sqlite3_file base;$/;"	m	struct:devsym_file	file:
base	src/test_fs.c	/^  sqlite3_vtab base;$/;"	m	struct:FsdirVtab	file:
base	src/test_fs.c	/^  sqlite3_vtab base;$/;"	m	struct:FstreeVtab	file:
base	src/test_fs.c	/^  sqlite3_vtab base;$/;"	m	struct:fs_vtab	file:
base	src/test_fs.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:FsdirCsr	file:
base	src/test_fs.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:FstreeCsr	file:
base	src/test_fs.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:fs_cursor	file:
base	src/test_intarray.c	/^  sqlite3_vtab base;            \/* Base class *\/$/;"	m	struct:intarray_vtab	file:
base	src/test_intarray.c	/^  sqlite3_vtab_cursor base;    \/* Base class *\/$/;"	m	struct:intarray_cursor	file:
base	src/test_journal.c	/^  sqlite3_file base;$/;"	m	struct:jt_file	file:
base	src/test_multiplex.c	/^  sqlite3_file base;              \/* Base class - must be first *\/$/;"	m	struct:multiplexConn	file:
base	src/test_onefile.c	/^  sqlite3_file base;$/;"	m	struct:fs_file	file:
base	src/test_onefile.c	/^  sqlite3_file base;$/;"	m	struct:tmp_file	file:
base	src/test_onefile.c	/^  sqlite3_vfs base;$/;"	m	struct:fs_vfs_t	file:
base	src/test_osinst.c	/^  sqlite3_file base;              \/* IO methods *\/$/;"	m	struct:VfslogFile	file:
base	src/test_osinst.c	/^  sqlite3_vfs base;               \/* VFS methods *\/$/;"	m	struct:VfslogVfs	file:
base	src/test_osinst.c	/^  sqlite3_vtab base;              \/* Base class *\/$/;"	m	struct:VfslogVtab	file:
base	src/test_osinst.c	/^  sqlite3_vtab_cursor base;       \/* Base class *\/$/;"	m	struct:VfslogCsr	file:
base	src/test_quota.c	/^  sqlite3_file base;              \/* Base class - must be first *\/$/;"	m	struct:quotaConn	file:
base	src/test_schema.c	/^  sqlite3_vtab base;$/;"	m	struct:schema_vtab	file:
base	src/test_schema.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:schema_cursor	file:
base	src/test_tclvar.c	/^  sqlite3_vtab base;$/;"	m	struct:tclvar_vtab	file:
base	src/test_tclvar.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:tclvar_cursor	file:
base	src/test_thread.c	/^  Tcl_Event base;          \/* Base class of type Tcl_Event *\/$/;"	m	struct:EvalEvent	file:
base	src/test_vfs.c	/^  sqlite3_file base;              \/* Base class.  Must be first *\/$/;"	m	struct:TestvfsFile	file:
base	src/test_vfstrace.c	/^  sqlite3_file base;        \/* Base class.  Must be first *\/$/;"	m	struct:vfstrace_file	file:
base	test/fuzzcheck.c	/^  sqlite3_file base;      \/* Base class.  Must be first *\/$/;"	m	struct:VHandle	file:
base	tsrc/dbstat.c	/^  sqlite3_vtab base;$/;"	m	struct:StatTable	file:
base	tsrc/dbstat.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:StatCursor	file:
base	tsrc/fts1.c	/^  sqlite3_vtab base;               \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_vtab	file:
base	tsrc/fts1.c	/^  sqlite3_vtab_cursor base;        \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_cursor	file:
base	tsrc/fts1_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	tsrc/fts1_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	tsrc/fts1_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	tsrc/fts1_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	tsrc/fts2.c	/^  sqlite3_vtab base;               \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_vtab	file:
base	tsrc/fts2.c	/^  sqlite3_vtab_cursor base;        \/* Base class used by SQLite core *\/$/;"	m	struct:fulltext_cursor	file:
base	tsrc/fts2_icu.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	tsrc/fts2_icu.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	tsrc/fts2_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	tsrc/fts2_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	tsrc/fts2_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	tsrc/fts2_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	tsrc/fts3Int.h	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Table
base	tsrc/fts3Int.h	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3Cursor
base	tsrc/fts3_aux.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxTable	file:
base	tsrc/fts3_aux.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3auxCursor	file:
base	tsrc/fts3_icu.c	/^  sqlite3_tokenizer base;$/;"	m	struct:IcuTokenizer	file:
base	tsrc/fts3_icu.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:IcuCursor	file:
base	tsrc/fts3_porter.c	/^  sqlite3_tokenizer base;      \/* Base class *\/$/;"	m	struct:porter_tokenizer	file:
base	tsrc/fts3_porter.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:porter_tokenizer_cursor	file:
base	tsrc/fts3_tokenize_vtab.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokTable	file:
base	tsrc/fts3_tokenize_vtab.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts3tokCursor	file:
base	tsrc/fts3_tokenizer1.c	/^  sqlite3_tokenizer base;$/;"	m	struct:simple_tokenizer	file:
base	tsrc/fts3_tokenizer1.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:simple_tokenizer_cursor	file:
base	tsrc/fts3_unicode.c	/^  sqlite3_tokenizer base;$/;"	m	struct:unicode_tokenizer	file:
base	tsrc/fts3_unicode.c	/^  sqlite3_tokenizer_cursor base;$/;"	m	struct:unicode_cursor	file:
base	tsrc/fts5.c	/^  Fts5IndexIter base;             \/* Base class containing output vars *\/$/;"	m	struct:Fts5Iter	file:
base	tsrc/fts5.c	/^  sqlite3_vtab base;              \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Table	file:
base	tsrc/fts5.c	/^  sqlite3_vtab base;$/;"	m	struct:Fts5VocabTable	file:
base	tsrc/fts5.c	/^  sqlite3_vtab_cursor base;       \/* Base class used by SQLite core *\/$/;"	m	struct:Fts5Cursor	file:
base	tsrc/fts5.c	/^  sqlite3_vtab_cursor base;$/;"	m	struct:Fts5VocabCursor	file:
base	tsrc/json1.c	/^  sqlite3_vtab_cursor base;  \/* Base class - must be first *\/$/;"	m	struct:JsonEachCursor	file:
base	tsrc/printf.c	/^  etByte base;             \/* The base for radix conversion *\/$/;"	m	struct:et_info	file:
base	tsrc/rtree.c	/^  sqlite3_vtab base;          \/* Base class.  Must be first *\/$/;"	m	struct:Rtree	file:
base	tsrc/rtree.c	/^  sqlite3_vtab_cursor base;         \/* Base class.  Must be first *\/$/;"	m	struct:RtreeCursor	file:
base	tsrc/sqlite3rbu.c	/^  sqlite3_file base;              \/* sqlite3_file methods *\/$/;"	m	struct:rbu_file	file:
base	tsrc/sqlite3rbu.c	/^  sqlite3_vfs base;               \/* rbu VFS shim methods *\/$/;"	m	struct:rbu_vfs	file:
basis	tool/lemon.c	/^static struct config *basis = 0;         \/* Top of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisend	tool/lemon.c	/^static struct config **basisend = 0;     \/* End of list of basis configs *\/$/;"	v	typeref:struct:config	file:
basisflag	tool/lemon.c	/^  int basisflag;           \/* Print only basis configurations *\/$/;"	m	struct:lemon	file:
bc_find_binaries	test/bc_common.tcl	/^proc bc_find_binaries {zCaption} {$/;"	p
beginTimer	shell.c	/^static void beginTimer(void){$/;"	f	file:
beginTimer	src/shell.c	/^static void beginTimer(void){$/;"	f	file:
beginTimer	tsrc/shell.c	/^static void beginTimer(void){$/;"	f	file:
betweenop	test/randexpr1.tcl	/^proc betweenop {lhs first second} {$/;"	p
bfs_query_func	src/test_rtree.c	/^static int bfs_query_func(sqlite3_rtree_query_info *p){$/;"	f	file:
bft	sqlite3.c	/^typedef unsigned bft;  \/* Bit Field Type *\/$/;"	t	file:
bft	src/vdbeInt.h	/^typedef unsigned bft;  \/* Bit Field Type *\/$/;"	t
bft	tsrc/vdbeInt.h	/^typedef unsigned bft;  \/* Bit Field Type *\/$/;"	t
bgerror	ext/session/session_common.tcl	/^  proc bgerror {args} { set ::background_error $args }$/;"	p
bigEndCksum	sqlite3.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigEndCksum	src/wal.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigEndCksum	tsrc/wal.c	/^  u8 bigEndCksum;                 \/* True if checksums in WAL are big-endian *\/$/;"	m	struct:WalIndexHdr	file:
bigToNative	ext/misc/vfslog.c	/^static int bigToNative(const unsigned char *x){$/;"	f	file:
binCollFunc	sqlite3.c	/^static int binCollFunc($/;"	f	file:
binCollFunc	src/main.c	/^static int binCollFunc($/;"	f	file:
binCollFunc	tsrc/main.c	/^static int binCollFunc($/;"	f	file:
binCompare	ext/fts1/ft_hash.c	/^static int binCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
binCompare	ext/fts1/fts1_hash.c	/^static int binCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
binCompare	ext/fts2/fts2_hash.c	/^static int binCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
binCompare	tsrc/fts1_hash.c	/^static int binCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
binCompare	tsrc/fts2_hash.c	/^static int binCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
binHash	ext/fts1/ft_hash.c	/^static int binHash(const void *pKey, int nKey){$/;"	f	file:
binHash	ext/fts1/fts1_hash.c	/^static int binHash(const void *pKey, int nKey){$/;"	f	file:
binHash	ext/fts2/fts2_hash.c	/^static int binHash(const void *pKey, int nKey){$/;"	f	file:
binHash	tsrc/fts1_hash.c	/^static int binHash(const void *pKey, int nKey){$/;"	f	file:
binHash	tsrc/fts2_hash.c	/^static int binHash(const void *pKey, int nKey){$/;"	f	file:
binarize	src/test5.c	/^static int SQLITE_TCLAPI binarize($/;"	f	file:
binaryCompareP5	sqlite3.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryCompareP5	src/expr.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryCompareP5	tsrc/expr.c	/^static u8 binaryCompareP5(Expr *pExpr1, Expr *pExpr2, int jumpIfNull){$/;"	f	file:
binaryToUnaryIfNull	parse.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
binaryToUnaryIfNull	sqlite3.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
binaryToUnaryIfNull	tsrc/parse.c	/^  static void binaryToUnaryIfNull(Parse *pParse, Expr *pY, Expr *pA, int op){$/;"	f	file:
bindText	sqlite3.c	/^static int bindText($/;"	f	file:
bindText	src/vdbeapi.c	/^static int bindText($/;"	f	file:
bindText	tsrc/vdbeapi.c	/^static int bindText($/;"	f	file:
bind_blob	sqlite3.c	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_blob	sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_blob	src/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_blob	tsrc/sqlite3ext.h	/^  int  (*bind_blob)(sqlite3_stmt*,int,const void*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_blob64	sqlite3.c	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_blob64	sqlite3ext.h	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_blob64	src/sqlite3ext.h	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_blob64	tsrc/sqlite3ext.h	/^  int (*bind_blob64)(sqlite3_stmt*,int,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_double	sqlite3.c	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines	file:
bind_double	sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_double	src/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_double	tsrc/sqlite3ext.h	/^  int  (*bind_double)(sqlite3_stmt*,int,double);$/;"	m	struct:sqlite3_api_routines
bind_int	sqlite3.c	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_int	sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int	src/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int	tsrc/sqlite3ext.h	/^  int  (*bind_int)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_int64	sqlite3.c	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
bind_int64	sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_int64	src/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_int64	tsrc/sqlite3ext.h	/^  int  (*bind_int64)(sqlite3_stmt*,int,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
bind_null	sqlite3.c	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_null	sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_null	src/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_null	tsrc/sqlite3ext.h	/^  int  (*bind_null)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	sqlite3.c	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_count	sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	src/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_count	tsrc/sqlite3ext.h	/^  int  (*bind_parameter_count)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	sqlite3.c	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_index	sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	src/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_index	tsrc/sqlite3ext.h	/^  int  (*bind_parameter_index)(sqlite3_stmt*,const char*zName);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	sqlite3.c	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_parameter_name	sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	src/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_parameter_name	tsrc/sqlite3ext.h	/^  const char * (*bind_parameter_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
bind_text	sqlite3.c	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text	sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text	src/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text	tsrc/sqlite3ext.h	/^  int  (*bind_text)(sqlite3_stmt*,int,const char*,int n,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	sqlite3.c	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
bind_text16	sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	src/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text16	tsrc/sqlite3ext.h	/^  int  (*bind_text16)(sqlite3_stmt*,int,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
bind_text64	sqlite3.c	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
bind_text64	sqlite3ext.h	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_text64	src/sqlite3ext.h	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_text64	tsrc/sqlite3ext.h	/^  int (*bind_text64)(sqlite3_stmt*,int,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
bind_value	sqlite3.c	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
bind_value	sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_value	src/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_value	tsrc/sqlite3ext.h	/^  int  (*bind_value)(sqlite3_stmt*,int,const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	sqlite3.c	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob	sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	src/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob	tsrc/sqlite3ext.h	/^  int (*bind_zeroblob)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob64	sqlite3.c	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
bind_zeroblob64	sqlite3ext.h	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob64	src/sqlite3ext.h	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
bind_zeroblob64	tsrc/sqlite3ext.h	/^  int (*bind_zeroblob64)(sqlite3_stmt*, int, sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bits	src/tclsqlite.c	/^  uint32 bits[2];$/;"	m	struct:MD5Context	file:
bits	test/threadtest3.c	/^  uint32 bits[2];$/;"	m	struct:MD5Context	file:
bits	tsrc/tclsqlite.c	/^  uint32 bits[2];$/;"	m	struct:MD5Context	file:
blk	tool/dbhash.c	87;"	d	file:
blk0be	tool/dbhash.c	86;"	d	file:
blk0le	tool/dbhash.c	84;"	d	file:
blobGrowBuffer	ext/fts3/fts3_write.c	/^static void blobGrowBuffer(Blob *pBlob, int nMin, int *pRc){$/;"	f	file:
blobGrowBuffer	sqlite3.c	/^static void blobGrowBuffer(Blob *pBlob, int nMin, int *pRc){$/;"	f	file:
blobGrowBuffer	tsrc/fts3_write.c	/^static void blobGrowBuffer(Blob *pBlob, int nMin, int *pRc){$/;"	f	file:
blobHandleFromObj	src/test1.c	/^static int SQLITE_TCLAPI blobHandleFromObj($/;"	f	file:
blobHandleFromObj	src/test_blob.c	/^static int blobHandleFromObj($/;"	f	file:
blobListFree	test/fuzzcheck.c	/^static void blobListFree(Blob *p){$/;"	f	file:
blobListLoadFromDb	test/fuzzcheck.c	/^static void blobListLoadFromDb($/;"	f	file:
blobReadWrite	sqlite3.c	/^static int blobReadWrite($/;"	f	file:
blobReadWrite	src/vdbeblob.c	/^static int blobReadWrite($/;"	f	file:
blobReadWrite	tsrc/vdbeblob.c	/^static int blobReadWrite($/;"	f	file:
blobSeekToRow	sqlite3.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blobSeekToRow	src/vdbeblob.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blobSeekToRow	tsrc/vdbeblob.c	/^static int blobSeekToRow(Incrblob *p, sqlite3_int64 iRow, char **pzErr){$/;"	f	file:
blobStringFromObj	src/test_blob.c	/^static char *blobStringFromObj(Tcl_Obj *pObj){$/;"	f	file:
blob_bytes	sqlite3.c	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_bytes	sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_bytes	src/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_bytes	tsrc/sqlite3ext.h	/^  int (*blob_bytes)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	sqlite3.c	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines	file:
blob_close	sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	src/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_close	tsrc/sqlite3ext.h	/^  int (*blob_close)(sqlite3_blob*);$/;"	m	struct:sqlite3_api_routines
blob_open	sqlite3.c	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines	file:
blob_open	sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_open	src/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_open	tsrc/sqlite3ext.h	/^  int (*blob_open)(sqlite3*,const char*,const char*,const char*,sqlite3_int64,$/;"	m	struct:sqlite3_api_routines
blob_read	sqlite3.c	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_read	sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_read	src/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_read	tsrc/sqlite3ext.h	/^  int (*blob_read)(sqlite3_blob*,void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_reopen	sqlite3.c	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
blob_reopen	sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_reopen	src/sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_reopen	tsrc/sqlite3ext.h	/^  int (*blob_reopen)(sqlite3_blob*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
blob_write	sqlite3.c	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
blob_write	sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_write	src/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
blob_write	tsrc/sqlite3ext.h	/^  int (*blob_write)(sqlite3_blob*,const void*,int,int);$/;"	m	struct:sqlite3_api_routines
block	ext/fts3/fts3_write.c	/^  Blob block;                     \/* Current block image *\/$/;"	m	struct:NodeWriter	file:
block	sqlite3.c	/^  Blob block;                     \/* Current block image *\/$/;"	m	struct:NodeWriter	file:
block	tsrc/fts3_write.c	/^  Blob block;                     \/* Current block image *\/$/;"	m	struct:NodeWriter	file:
block_delete	ext/fts2/fts2.c	/^static int block_delete(fulltext_vtab *v,$/;"	f	file:
block_delete	tsrc/fts2.c	/^static int block_delete(fulltext_vtab *v,$/;"	f	file:
block_insert	ext/fts2/fts2.c	/^static int block_insert(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
block_insert	tsrc/fts2.c	/^static int block_insert(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
blocking_prepare_v2_proc	src/test_thread.c	/^static Tcl_ObjCmdProc blocking_prepare_v2_proc;$/;"	v	file:
blocking_prepare_v2_proc	src/test_thread.c	/^static int SQLITE_TCLAPI blocking_prepare_v2_proc($/;"	f	file:
blocking_step_proc	src/test_thread.c	/^static Tcl_ObjCmdProc blocking_step_proc;$/;"	v	file:
blocking_step_proc	src/test_thread.c	/^static int SQLITE_TCLAPI blocking_step_proc($/;"	f	file:
booleanValue	mptest/mptest.c	/^static int booleanValue(char *zArg){$/;"	f	file:
booleanValue	shell.c	/^static int booleanValue(char *zArg){$/;"	f	file:
booleanValue	src/shell.c	/^static int booleanValue(char *zArg){$/;"	f	file:
booleanValue	tsrc/shell.c	/^static int booleanValue(char *zArg){$/;"	f	file:
bp	tool/lemon.c	/^  struct config *bp;       \/* The basis configurations for this state *\/$/;"	m	struct:state	typeref:struct:state::config	file:
bp	tool/lemon.c	/^  struct config *bp;       \/* The next basis configuration *\/$/;"	m	struct:config	typeref:struct:config::config	file:
bplp	tool/lemon.c	/^  struct plink *bplp;      \/* Follow-set backwards propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
broken_init	src/test_autoext.c	/^static int broken_init($/;"	f	file:
btree	sqlite3.c	/^    } btree;$/;"	m	union:WhereLoop::__anon98	typeref:struct:WhereLoop::__anon98::__anon99	file:
btree	src/whereInt.h	/^    } btree;$/;"	m	union:WhereLoop::__anon47	typeref:struct:WhereLoop::__anon47::__anon48
btree	tsrc/whereInt.h	/^    } btree;$/;"	m	union:WhereLoop::__anon12	typeref:struct:WhereLoop::__anon12::__anon13
btreeClearHasContent	sqlite3.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeClearHasContent	src/btree.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeClearHasContent	tsrc/btree.c	/^static void btreeClearHasContent(BtShared *pBt){$/;"	f	file:
btreeCreateTable	sqlite3.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCreateTable	src/btree.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCreateTable	tsrc/btree.c	/^static int btreeCreateTable(Btree *p, int *piTable, int createTabFlags){$/;"	f	file:
btreeCursor	sqlite3.c	/^static int btreeCursor($/;"	f	file:
btreeCursor	src/btree.c	/^static int btreeCursor($/;"	f	file:
btreeCursor	tsrc/btree.c	/^static int btreeCursor($/;"	f	file:
btreeDropTable	sqlite3.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeDropTable	src/btree.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeDropTable	tsrc/btree.c	/^static int btreeDropTable(Btree *p, Pgno iTable, int *piMoved){$/;"	f	file:
btreeEndTransaction	sqlite3.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeEndTransaction	src/btree.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeEndTransaction	tsrc/btree.c	/^static void btreeEndTransaction(Btree *p){$/;"	f	file:
btreeGetHasContent	sqlite3.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetHasContent	src/btree.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetHasContent	tsrc/btree.c	/^static int btreeGetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeGetPage	sqlite3.c	/^static int btreeGetPage($/;"	f	file:
btreeGetPage	src/btree.c	/^static int btreeGetPage($/;"	f	file:
btreeGetPage	tsrc/btree.c	/^static int btreeGetPage($/;"	f	file:
btreeGetUnusedPage	sqlite3.c	/^static int btreeGetUnusedPage($/;"	f	file:
btreeGetUnusedPage	src/btree.c	/^static int btreeGetUnusedPage($/;"	f	file:
btreeGetUnusedPage	tsrc/btree.c	/^static int btreeGetUnusedPage($/;"	f	file:
btreeHeapInsert	sqlite3.c	/^static void btreeHeapInsert(u32 *aHeap, u32 x){$/;"	f	file:
btreeHeapInsert	src/btree.c	/^static void btreeHeapInsert(u32 *aHeap, u32 x){$/;"	f	file:
btreeHeapInsert	tsrc/btree.c	/^static void btreeHeapInsert(u32 *aHeap, u32 x){$/;"	f	file:
btreeHeapPull	sqlite3.c	/^static int btreeHeapPull(u32 *aHeap, u32 *pOut){$/;"	f	file:
btreeHeapPull	src/btree.c	/^static int btreeHeapPull(u32 *aHeap, u32 *pOut){$/;"	f	file:
btreeHeapPull	tsrc/btree.c	/^static int btreeHeapPull(u32 *aHeap, u32 *pOut){$/;"	f	file:
btreeInitPage	sqlite3.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeInitPage	src/btree.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeInitPage	tsrc/btree.c	/^static int btreeInitPage(MemPage *pPage){$/;"	f	file:
btreeIntegrity	sqlite3.c	57784;"	d	file:
btreeIntegrity	src/btreeInt.h	642;"	d
btreeIntegrity	tsrc/btreeInt.h	642;"	d
btreeInvokeBusyHandler	sqlite3.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeInvokeBusyHandler	src/btree.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeInvokeBusyHandler	tsrc/btree.c	/^static int btreeInvokeBusyHandler(void *pArg){$/;"	f	file:
btreeLockCarefully	sqlite3.c	/^static void SQLITE_NOINLINE btreeLockCarefully(Btree *p){$/;"	f	file:
btreeLockCarefully	src/btmutex.c	/^static void SQLITE_NOINLINE btreeLockCarefully(Btree *p){$/;"	f	file:
btreeLockCarefully	tsrc/btmutex.c	/^static void SQLITE_NOINLINE btreeLockCarefully(Btree *p){$/;"	f	file:
btreeMask	sqlite3.c	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe	file:
btreeMask	src/vdbeInt.h	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe
btreeMask	tsrc/vdbeInt.h	/^  yDbMask btreeMask;      \/* Bitmask of db->aDb[] entries referenced *\/$/;"	m	struct:Vdbe
btreeMoveto	sqlite3.c	/^static int btreeMoveto($/;"	f	file:
btreeMoveto	src/btree.c	/^static int btreeMoveto($/;"	f	file:
btreeMoveto	tsrc/btree.c	/^static int btreeMoveto($/;"	f	file:
btreeNext	sqlite3.c	/^static SQLITE_NOINLINE int btreeNext(BtCursor *pCur, int *pRes){$/;"	f	file:
btreeNext	src/btree.c	/^static SQLITE_NOINLINE int btreeNext(BtCursor *pCur, int *pRes){$/;"	f	file:
btreeNext	tsrc/btree.c	/^static SQLITE_NOINLINE int btreeNext(BtCursor *pCur, int *pRes){$/;"	f	file:
btreePageFromDbPage	sqlite3.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageFromDbPage	src/btree.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageFromDbPage	tsrc/btree.c	/^static MemPage *btreePageFromDbPage(DbPage *pDbPage, Pgno pgno, BtShared *pBt){$/;"	f	file:
btreePageLookup	sqlite3.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePageLookup	src/btree.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePageLookup	tsrc/btree.c	/^static MemPage *btreePageLookup(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreePagecount	sqlite3.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreePagecount	src/btree.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreePagecount	tsrc/btree.c	/^static Pgno btreePagecount(BtShared *pBt){$/;"	f	file:
btreeParseCell	sqlite3.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCell	src/btree.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCell	tsrc/btree.c	/^static void btreeParseCell($/;"	f	file:
btreeParseCellAdjustSizeForOverflow	sqlite3.c	/^static SQLITE_NOINLINE void btreeParseCellAdjustSizeForOverflow($/;"	f	file:
btreeParseCellAdjustSizeForOverflow	src/btree.c	/^static SQLITE_NOINLINE void btreeParseCellAdjustSizeForOverflow($/;"	f	file:
btreeParseCellAdjustSizeForOverflow	tsrc/btree.c	/^static SQLITE_NOINLINE void btreeParseCellAdjustSizeForOverflow($/;"	f	file:
btreeParseCellPtr	sqlite3.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeParseCellPtr	src/btree.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeParseCellPtr	tsrc/btree.c	/^static void btreeParseCellPtr($/;"	f	file:
btreeParseCellPtrIndex	sqlite3.c	/^static void btreeParseCellPtrIndex($/;"	f	file:
btreeParseCellPtrIndex	src/btree.c	/^static void btreeParseCellPtrIndex($/;"	f	file:
btreeParseCellPtrIndex	tsrc/btree.c	/^static void btreeParseCellPtrIndex($/;"	f	file:
btreeParseCellPtrNoPayload	sqlite3.c	/^static void btreeParseCellPtrNoPayload($/;"	f	file:
btreeParseCellPtrNoPayload	src/btree.c	/^static void btreeParseCellPtrNoPayload($/;"	f	file:
btreeParseCellPtrNoPayload	tsrc/btree.c	/^static void btreeParseCellPtrNoPayload($/;"	f	file:
btreePrevious	sqlite3.c	/^static SQLITE_NOINLINE int btreePrevious(BtCursor *pCur, int *pRes){$/;"	f	file:
btreePrevious	src/btree.c	/^static SQLITE_NOINLINE int btreePrevious(BtCursor *pCur, int *pRes){$/;"	f	file:
btreePrevious	tsrc/btree.c	/^static SQLITE_NOINLINE int btreePrevious(BtCursor *pCur, int *pRes){$/;"	f	file:
btreeReleaseAllCursorPages	sqlite3.c	/^static void btreeReleaseAllCursorPages(BtCursor *pCur){$/;"	f	file:
btreeReleaseAllCursorPages	src/btree.c	/^static void btreeReleaseAllCursorPages(BtCursor *pCur){$/;"	f	file:
btreeReleaseAllCursorPages	tsrc/btree.c	/^static void btreeReleaseAllCursorPages(BtCursor *pCur){$/;"	f	file:
btreeRestoreCursorPosition	sqlite3.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeRestoreCursorPosition	src/btree.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeRestoreCursorPosition	tsrc/btree.c	/^static int btreeRestoreCursorPosition(BtCursor *pCur){$/;"	f	file:
btreeSetHasContent	sqlite3.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeSetHasContent	src/btree.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btreeSetHasContent	tsrc/btree.c	/^static int btreeSetHasContent(BtShared *pBt, Pgno pgno){$/;"	f	file:
btree_begin_transaction	src/test3.c	/^static int SQLITE_TCLAPI btree_begin_transaction($/;"	f	file:
btree_close	src/test3.c	/^static int SQLITE_TCLAPI btree_close($/;"	f	file:
btree_close_cursor	src/test3.c	/^static int SQLITE_TCLAPI btree_close_cursor($/;"	f	file:
btree_cursor	src/test3.c	/^static int SQLITE_TCLAPI btree_cursor($/;"	f	file:
btree_eof	src/test3.c	/^static int SQLITE_TCLAPI btree_eof($/;"	f	file:
btree_first	src/test3.c	/^static int SQLITE_TCLAPI btree_first($/;"	f	file:
btree_from_db	src/test3.c	/^static int SQLITE_TCLAPI btree_from_db($/;"	f	file:
btree_insert	src/test3.c	/^static int SQLITE_TCLAPI btree_insert($/;"	f	file:
btree_ismemdb	src/test3.c	/^static int SQLITE_TCLAPI btree_ismemdb($/;"	f	file:
btree_next	src/test3.c	/^static int SQLITE_TCLAPI btree_next($/;"	f	file:
btree_open	src/test3.c	/^static int SQLITE_TCLAPI btree_open($/;"	f	file:
btree_pager_stats	src/test3.c	/^static int SQLITE_TCLAPI btree_pager_stats($/;"	f	file:
btree_payload_size	src/test3.c	/^static int SQLITE_TCLAPI btree_payload_size($/;"	f	file:
btree_set_cache_size	src/test3.c	/^static int SQLITE_TCLAPI btree_set_cache_size($/;"	f	file:
btree_varint_test	src/test3.c	/^static int SQLITE_TCLAPI btree_varint_test($/;"	f	file:
btsFlags	sqlite3.c	/^  u16 btsFlags;         \/* Boolean parameters.  See BTS_* macros below *\/$/;"	m	struct:BtShared	file:
btsFlags	src/btreeInt.h	/^  u16 btsFlags;         \/* Boolean parameters.  See BTS_* macros below *\/$/;"	m	struct:BtShared
btsFlags	tsrc/btreeInt.h	/^  u16 btsFlags;         \/* Boolean parameters.  See BTS_* macros below *\/$/;"	m	struct:BtShared
btterm	ext/fts5/fts5_index.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
btterm	fts5.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
btterm	sqlite3.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
btterm	tsrc/fts5.c	/^  Fts5Buffer btterm;              \/* Next term to insert into %_idx table *\/$/;"	m	struct:Fts5SegWriter	file:
buf	ext/fts5/fts5_index.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	ext/fts5/fts5_index.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	ext/session/sqlite3session.c	/^  SessionBuffer buf;              \/* Current read buffer *\/$/;"	m	struct:SessionInput	file:
buf	fts5.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	fts5.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	sqlite3.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	sqlite3.c	/^  SessionBuffer buf;              \/* Current read buffer *\/$/;"	m	struct:SessionInput	file:
buf	src/tclsqlite.c	/^  uint32 buf[4];$/;"	m	struct:MD5Context	file:
buf	test/threadtest3.c	/^  uint32 buf[4];$/;"	m	struct:MD5Context	file:
buf	tsrc/fts5.c	/^  Fts5Buffer buf;                 \/* Buffer containing leaf data *\/$/;"	m	struct:Fts5PageWriter	file:
buf	tsrc/fts5.c	/^  Fts5Buffer buf;                 \/* Buffer containing page data *\/$/;"	m	struct:Fts5DlidxWriter	file:
buf	tsrc/sqlite3session.c	/^  SessionBuffer buf;              \/* Current read buffer *\/$/;"	m	struct:SessionInput	file:
buf	tsrc/tclsqlite.c	/^  uint32 buf[4];$/;"	m	struct:MD5Context	file:
buffer	autoconf/tea/win/nmakehlp.c	/^    char buffer[STATICBUFFERSIZE];$/;"	m	struct:__anon1	file:
buffer	tool/dbhash.c	/^  unsigned char buffer[64];$/;"	m	struct:SHA1Context	file:
buildTerms	ext/fts1/fts1.c	/^static int buildTerms(fulltext_vtab *v, fts1Hash *terms, sqlite_int64 iDocid,$/;"	f	file:
buildTerms	ext/fts2/fts2.c	/^static int buildTerms(fulltext_vtab *v, sqlite_int64 iDocid,$/;"	f	file:
buildTerms	tsrc/fts1.c	/^static int buildTerms(fulltext_vtab *v, fts1Hash *terms, sqlite_int64 iDocid,$/;"	f	file:
buildTerms	tsrc/fts2.c	/^static int buildTerms(fulltext_vtab *v, sqlite_int64 iDocid,$/;"	f	file:
build_terms	ext/fts1/fulltext.c	/^static int build_terms(Hash *terms, sqlite3_tokenizer *pTokenizer,$/;"	f	file:
build_vocab	ext/fts3/fts3speed.tcl	/^proc build_vocab {nWord} {$/;"	p
buildshifts	tool/lemon.c	/^PRIVATE void buildshifts(struct lemon *lemp, struct state *stp)$/;"	f
busy	sqlite3.c	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
busy	src/sqliteInt.h	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
busy	src/test4.c	/^  int busy;              \/* True if this thread is in use *\/$/;"	m	struct:Thread	file:
busy	src/test7.c	/^  volatile int busy;       \/* True if this thread is in use *\/$/;"	m	struct:Thread	file:
busy	tsrc/sqliteInt.h	/^    u8 busy;                    \/* TRUE if currently initializing *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
busyHandler	mptest/mptest.c	/^static int busyHandler(void *pCD, int count){$/;"	f	file:
busyHandler	sqlite3.c	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3	file:
busyHandler	src/sqliteInt.h	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3
busyHandler	tsrc/sqliteInt.h	/^  BusyHandler busyHandler;      \/* Busy callback *\/$/;"	m	struct:sqlite3
busyTimeout	sqlite3.c	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3	file:
busyTimeout	src/sqliteInt.h	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3
busyTimeout	tsrc/sqliteInt.h	/^  int busyTimeout;              \/* Busy handler timeout, in msec *\/$/;"	m	struct:sqlite3
busy_handler	sqlite3.c	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
busy_handler	sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_handler	src/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_handler	tsrc/sqlite3ext.h	/^  int  (*busy_handler)(sqlite3*,int(*)(void*,int),void*);$/;"	m	struct:sqlite3_api_routines
busy_timeout	sqlite3.c	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines	file:
busy_timeout	sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
busy_timeout	src/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
busy_timeout	tsrc/sqlite3ext.h	/^  int  (*busy_timeout)(sqlite3*,int ms);$/;"	m	struct:sqlite3_api_routines
busyhandler	test/threadtest3.c	/^static int busyhandler(void *pArg, int n){$/;"	f	file:
byteReverse	src/tclsqlite.c	/^static void byteReverse (unsigned char *buf, unsigned longs){$/;"	f	file:
byteReverse	test/threadtest3.c	/^static void byteReverse (unsigned char *buf, unsigned longs){$/;"	f	file:
byteReverse	tsrc/tclsqlite.c	/^static void byteReverse (unsigned char *buf, unsigned longs){$/;"	f	file:
c	tool/dbhash.c	114;"	d	file:
cColSep	shell.c	/^  int cColSep;        \/* The column separator character.  (Usually ",") *\/$/;"	m	struct:ImportCtx	file:
cColSep	src/shell.c	/^  int cColSep;        \/* The column separator character.  (Usually ",") *\/$/;"	m	struct:ImportCtx	file:
cColSep	tsrc/shell.c	/^  int cColSep;        \/* The column separator character.  (Usually ",") *\/$/;"	m	struct:ImportCtx	file:
cFrom	ext/misc/spellfix.c	/^ unsigned short int cFrom;$/;"	m	struct:__anon73	file:
cId	sqlite3.c	/^  char cId;             \/* Symbolic ID of this loop for debugging use *\/$/;"	m	struct:WhereLoop	file:
cId	src/whereInt.h	/^  char cId;             \/* Symbolic ID of this loop for debugging use *\/$/;"	m	struct:WhereLoop
cId	tsrc/whereInt.h	/^  char cId;             \/* Symbolic ID of this loop for debugging use *\/$/;"	m	struct:WhereLoop
cMode	shell.c	/^  int cMode;             \/* temporary output mode for the current query *\/$/;"	m	struct:ShellState	file:
cMode	src/shell.c	/^  int cMode;             \/* temporary output mode for the current query *\/$/;"	m	struct:ShellState	file:
cMode	tsrc/shell.c	/^  int cMode;             \/* temporary output mode for the current query *\/$/;"	m	struct:ShellState	file:
cRowSep	shell.c	/^  int cRowSep;        \/* The row separator character.  (Usually "\\n") *\/$/;"	m	struct:ImportCtx	file:
cRowSep	src/shell.c	/^  int cRowSep;        \/* The row separator character.  (Usually "\\n") *\/$/;"	m	struct:ImportCtx	file:
cRowSep	tsrc/shell.c	/^  int cRowSep;        \/* The row separator character.  (Usually "\\n") *\/$/;"	m	struct:ImportCtx	file:
cTerm	ext/misc/csv.c	/^  char cTerm;            \/* Character that terminated the most recent field *\/$/;"	m	struct:CsvReader	file:
cTerm	shell.c	/^  int cTerm;          \/* Character that terminated the most recent field *\/$/;"	m	struct:ImportCtx	file:
cTerm	src/shell.c	/^  int cTerm;          \/* Character that terminated the most recent field *\/$/;"	m	struct:ImportCtx	file:
cTerm	tsrc/shell.c	/^  int cTerm;          \/* Character that terminated the most recent field *\/$/;"	m	struct:ImportCtx	file:
cTo0	ext/misc/spellfix.c	/^ unsigned char cTo0, cTo1;$/;"	m	struct:__anon73	file:
cTo1	ext/misc/spellfix.c	/^ unsigned char cTo0, cTo1;$/;"	m	struct:__anon73	file:
cType	ext/fts1/fts1_porter.c	/^static const char cType[] = {$/;"	v	file:
cType	ext/fts2/fts2_porter.c	/^static const char cType[] = {$/;"	v	file:
cType	ext/fts3/fts3_porter.c	/^static const char cType[] = {$/;"	v	file:
cType	sqlite3.c	/^static const char cType[] = {$/;"	v	file:
cType	tsrc/fts1_porter.c	/^static const char cType[] = {$/;"	v	file:
cType	tsrc/fts2_porter.c	/^static const char cType[] = {$/;"	v	file:
cType	tsrc/fts3_porter.c	/^static const char cType[] = {$/;"	v	file:
c_collation_test	src/test9.c	/^static int SQLITE_TCLAPI c_collation_test($/;"	f	file:
c_misuse_test	src/test9.c	/^static int SQLITE_TCLAPI c_misuse_test($/;"	f	file:
c_realloc_test	src/test9.c	/^static int SQLITE_TCLAPI c_realloc_test($/;"	f	file:
cacheCtr	sqlite3.c	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe	file:
cacheCtr	src/vdbeInt.h	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe
cacheCtr	tsrc/vdbeInt.h	/^  u32 cacheCtr;           \/* VdbeCursor row cache generation counter *\/$/;"	m	struct:Vdbe
cacheEntryClear	sqlite3.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheEntryClear	src/expr.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheEntryClear	tsrc/expr.c	/^static void cacheEntryClear(Parse *pParse, struct yColCache *p){$/;"	f	file:
cacheIsValid	sqlite3.c	/^static int cacheIsValid(Parse *pParse){$/;"	f	file:
cacheIsValid	src/expr.c	/^static int cacheIsValid(Parse *pParse){$/;"	f	file:
cacheIsValid	tsrc/expr.c	/^static int cacheIsValid(Parse *pParse){$/;"	f	file:
cacheStatus	sqlite3.c	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor	file:
cacheStatus	src/vdbeInt.h	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor
cacheStatus	tsrc/vdbeInt.h	/^  u32 cacheStatus;      \/* Cache is valid if this matches Vdbe.cacheCtr *\/$/;"	m	struct:VdbeCursor
cache_size	sqlite3.c	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema	file:
cache_size	src/sqliteInt.h	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema
cache_size	tsrc/sqliteInt.h	/^  int cache_size;      \/* Number of pages to use in the cache *\/$/;"	m	struct:Schema
cachedCellSize	sqlite3.c	/^static u16 cachedCellSize(CellArray *p, int N){$/;"	f	file:
cachedCellSize	src/btree.c	/^static u16 cachedCellSize(CellArray *p, int N){$/;"	f	file:
cachedCellSize	tsrc/btree.c	/^static u16 cachedCellSize(CellArray *p, int N){$/;"	f	file:
calc_chksum	tool/restore_jrnl.tcl	/^proc calc_chksum {jrnl_pgno} {$/;"	p
calc_nonce	tool/restore_jrnl.tcl	/^proc calc_nonce {jrnl_pgno} {$/;"	p
callCollNeeded	sqlite3.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callCollNeeded	src/callback.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callCollNeeded	tsrc/callback.c	/^static void callCollNeeded(sqlite3 *db, int enc, const char *zName){$/;"	f	file:
callFinaliser	sqlite3.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callFinaliser	src/vtab.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callFinaliser	tsrc/vtab.c	/^static void callFinaliser(sqlite3 *db, int offset){$/;"	f	file:
callStatGet	sqlite3.c	/^static void callStatGet(Vdbe *v, int regStat4, int iParam, int regOut){$/;"	f	file:
callStatGet	src/analyze.c	/^static void callStatGet(Vdbe *v, int regStat4, int iParam, int regOut){$/;"	f	file:
callStatGet	tsrc/analyze.c	/^static void callStatGet(Vdbe *v, int regStat4, int iParam, int regOut){$/;"	f	file:
callback	ext/misc/eval.c	/^static int callback(void *pCtx, int argc, char **argv, char **colnames){$/;"	f	file:
callback	shell.c	/^static int callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
callback	src/shell.c	/^static int callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
callback	tool/fuzzershell.c	/^static int callback(void *pCtx, int argc, char **argv, char **colnames){$/;"	f	file:
callback	tsrc/shell.c	/^static int callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
canReduce	tool/lemon.c	/^  Boolean canReduce;       \/* True if this rule is ever reduced *\/$/;"	m	struct:rule	file:
cancelAutoExtBrokenObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI cancelAutoExtBrokenObjCmd($/;"	f	file:
cancelAutoExtCubeObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI cancelAutoExtCubeObjCmd($/;"	f	file:
cancelAutoExtSqrObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI cancelAutoExtSqrObjCmd($/;"	f	file:
cancel_auto_extension	sqlite3.c	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines	file:
cancel_auto_extension	sqlite3ext.h	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
cancel_auto_extension	src/sqlite3ext.h	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
cancel_auto_extension	tsrc/sqlite3ext.h	/^  int (*cancel_auto_extension)(void(*)(void));$/;"	m	struct:sqlite3_api_routines
cannotBeFunction	sqlite3.c	/^static int cannotBeFunction(Parse *pParse, struct SrcList_item *pFrom){$/;"	f	file:
cannotBeFunction	src/select.c	/^static int cannotBeFunction(Parse *pParse, struct SrcList_item *pFrom){$/;"	f	file:
cannotBeFunction	tsrc/select.c	/^static int cannotBeFunction(Parse *pParse, struct SrcList_item *pFrom){$/;"	f	file:
cantopen_err	src/test_vfs.c	/^  TestFaultInject cantopen_err;$/;"	m	struct:Testvfs	file:
cantopen_injectinstall	test/malloc_common.tcl	/^proc cantopen_injectinstall {} {$/;"	p
cantopen_injectstart	test/malloc_common.tcl	/^proc cantopen_injectstart {persist iFail} {$/;"	p
cantopen_injectstop	test/malloc_common.tcl	/^proc cantopen_injectstop {} {$/;"	p
cantopen_injectuninstall	test/malloc_common.tcl	/^proc cantopen_injectuninstall {} {$/;"	p
capable	test/tester.tcl	/^proc capable {expr} {$/;"	p
carglist	parse.y	/^carglist ::= .$/;"	l
carglist	parse.y	/^carglist ::= carglist ccons.$/;"	l
carglist	src/parse.y	/^carglist ::= .$/;"	l
carglist	src/parse.y	/^carglist ::= carglist ccons.$/;"	l
carrayBestIndex	ext/misc/carray.c	/^static int carrayBestIndex($/;"	f	file:
carrayClose	ext/misc/carray.c	/^static int carrayClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
carrayColumn	ext/misc/carray.c	/^static int carrayColumn($/;"	f	file:
carrayConnect	ext/misc/carray.c	/^static int carrayConnect($/;"	f	file:
carrayDisconnect	ext/misc/carray.c	/^static int carrayDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
carrayEof	ext/misc/carray.c	/^static int carrayEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
carrayFilter	ext/misc/carray.c	/^static int carrayFilter($/;"	f	file:
carrayModule	ext/misc/carray.c	/^static sqlite3_module carrayModule = {$/;"	v	file:
carrayNext	ext/misc/carray.c	/^static int carrayNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
carrayOpen	ext/misc/carray.c	/^static int carrayOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
carrayRowid	ext/misc/carray.c	/^static int carrayRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
carray_cursor	ext/misc/carray.c	/^struct carray_cursor {$/;"	s	file:
carray_cursor	ext/misc/carray.c	/^typedef struct carray_cursor carray_cursor;$/;"	t	typeref:struct:carray_cursor	file:
catchcmd	test/tester.tcl	/^proc catchcmd {db {cmd ""}} {$/;"	p
catchcmdex	test/tester.tcl	/^proc catchcmdex {db {cmd ""}} {$/;"	p
catchsql	test/tester.tcl	/^proc catchsql {sql {db db}} {$/;"	p
catchsql	tool/restore_jrnl.tcl	/^proc catchsql {sql} {$/;"	p
cb	ext/rtree/rtree.c	/^  RtreeGeomCallback cb;       \/* Info about the callback functions *\/$/;"	m	struct:RtreeMatchArg	file:
cb	sqlite3.c	/^  RtreeGeomCallback cb;       \/* Info about the callback functions *\/$/;"	m	struct:RtreeMatchArg	file:
cb	tsrc/rtree.c	/^  RtreeGeomCallback cb;       \/* Info about the callback functions *\/$/;"	m	struct:RtreeMatchArg	file:
ccons	parse.y	/^ccons ::= CHECK LP expr(X) RP.   {sqlite3AddCheckConstraint(pParse,X.pExpr);}$/;"	l
ccons	parse.y	/^ccons ::= COLLATE ids(C).        {sqlite3AddCollateType(pParse, &C);}$/;"	l
ccons	parse.y	/^ccons ::= CONSTRAINT nm(X).           {pParse->constraintName = X;}$/;"	l
ccons	parse.y	/^ccons ::= DEFAULT LP expr(X) RP.      {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	parse.y	/^ccons ::= DEFAULT MINUS(A) term(X).      {$/;"	l
ccons	parse.y	/^ccons ::= DEFAULT PLUS term(X).       {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	parse.y	/^ccons ::= DEFAULT id(X).              {$/;"	l
ccons	parse.y	/^ccons ::= DEFAULT term(X).            {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	parse.y	/^ccons ::= NOT NULL onconf(R).    {sqlite3AddNotNull(pParse, R);}$/;"	l
ccons	parse.y	/^ccons ::= NULL onconf.$/;"	l
ccons	parse.y	/^ccons ::= PRIMARY KEY sortorder(Z) onconf(R) autoinc(I).$/;"	l
ccons	parse.y	/^ccons ::= REFERENCES nm(T) eidlist_opt(TA) refargs(R).$/;"	l
ccons	parse.y	/^ccons ::= UNIQUE onconf(R).      {sqlite3CreateIndex(pParse,0,0,0,0,R,0,0,0,0,$/;"	l
ccons	parse.y	/^ccons ::= defer_subclause(D).    {sqlite3DeferForeignKey(pParse,D);}$/;"	l
ccons	src/parse.y	/^ccons ::= CHECK LP expr(X) RP.   {sqlite3AddCheckConstraint(pParse,X.pExpr);}$/;"	l
ccons	src/parse.y	/^ccons ::= COLLATE ids(C).        {sqlite3AddCollateType(pParse, &C);}$/;"	l
ccons	src/parse.y	/^ccons ::= CONSTRAINT nm(X).           {pParse->constraintName = X;}$/;"	l
ccons	src/parse.y	/^ccons ::= DEFAULT LP expr(X) RP.      {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	src/parse.y	/^ccons ::= DEFAULT MINUS(A) term(X).      {$/;"	l
ccons	src/parse.y	/^ccons ::= DEFAULT PLUS term(X).       {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	src/parse.y	/^ccons ::= DEFAULT id(X).              {$/;"	l
ccons	src/parse.y	/^ccons ::= DEFAULT term(X).            {sqlite3AddDefaultValue(pParse,&X);}$/;"	l
ccons	src/parse.y	/^ccons ::= NOT NULL onconf(R).    {sqlite3AddNotNull(pParse, R);}$/;"	l
ccons	src/parse.y	/^ccons ::= NULL onconf.$/;"	l
ccons	src/parse.y	/^ccons ::= PRIMARY KEY sortorder(Z) onconf(R) autoinc(I).$/;"	l
ccons	src/parse.y	/^ccons ::= REFERENCES nm(T) eidlist_opt(TA) refargs(R).$/;"	l
ccons	src/parse.y	/^ccons ::= UNIQUE onconf(R).      {sqlite3CreateIndex(pParse,0,0,0,0,R,0,0,0,0,$/;"	l
ccons	src/parse.y	/^ccons ::= defer_subclause(D).    {sqlite3DeferForeignKey(pParse,D);}$/;"	l
cdateFunc	sqlite3.c	/^static void cdateFunc($/;"	f	file:
cdateFunc	src/date.c	/^static void cdateFunc($/;"	f	file:
cdateFunc	tsrc/date.c	/^static void cdateFunc($/;"	f	file:
cellArea	ext/rtree/rtree.c	/^static RtreeDValue cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellArea	sqlite3.c	/^static RtreeDValue cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellArea	tsrc/rtree.c	/^static RtreeDValue cellArea(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellContains	ext/rtree/rtree.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellContains	sqlite3.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellContains	tsrc/rtree.c	/^static int cellContains(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellGrowth	ext/rtree/rtree.c	/^static RtreeDValue cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellGrowth	sqlite3.c	/^static RtreeDValue cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellGrowth	tsrc/rtree.c	/^static RtreeDValue cellGrowth(Rtree *pRtree, RtreeCell *p, RtreeCell *pCell){$/;"	f	file:
cellMargin	ext/rtree/rtree.c	/^static RtreeDValue cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellMargin	sqlite3.c	/^static RtreeDValue cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellMargin	tsrc/rtree.c	/^static RtreeDValue cellMargin(Rtree *pRtree, RtreeCell *p){$/;"	f	file:
cellOffset	sqlite3.c	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage	file:
cellOffset	src/btreeInt.h	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage
cellOffset	tsrc/btreeInt.h	/^  u16 cellOffset;      \/* Index in aData of first cell pointer *\/$/;"	m	struct:MemPage
cellOverlap	ext/rtree/rtree.c	/^static RtreeDValue cellOverlap($/;"	f	file:
cellOverlap	sqlite3.c	/^static RtreeDValue cellOverlap($/;"	f	file:
cellOverlap	tsrc/rtree.c	/^static RtreeDValue cellOverlap($/;"	f	file:
cellSize	sqlite3.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSize	src/btree.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSize	tsrc/btree.c	/^static u16 cellSize(MemPage *pPage, int iCell){$/;"	f	file:
cellSizePtr	sqlite3.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtr	src/btree.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtr	tsrc/btree.c	/^static u16 cellSizePtr(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtrNoPayload	sqlite3.c	/^static u16 cellSizePtrNoPayload(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtrNoPayload	src/btree.c	/^static u16 cellSizePtrNoPayload(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellSizePtrNoPayload	tsrc/btree.c	/^static u16 cellSizePtrNoPayload(MemPage *pPage, u8 *pCell){$/;"	f	file:
cellUnion	ext/rtree/rtree.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellUnion	sqlite3.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cellUnion	tsrc/rtree.c	/^static void cellUnion(Rtree *pRtree, RtreeCell *p1, RtreeCell *p2){$/;"	f	file:
cell_report	ext/rtree/viewrtree.tcl	/^proc cell_report {db zTab iParent iCell} {$/;"	p
centerx	src/test_rtree.c	/^  double centerx;$/;"	m	struct:Circle	file:
centery	src/test_rtree.c	/^  double centery;$/;"	m	struct:Circle	file:
cf2Destroy	src/test1.c	/^static void cf2Destroy(void *pUser){$/;"	f	file:
cf2Final	src/test1.c	/^static void cf2Final(sqlite3_context *ctx){$/;"	f	file:
cf2Func	src/test1.c	/^static void cf2Func(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
cf2Step	src/test1.c	/^static void cf2Step(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
cfAccess	src/test6.c	/^static int cfAccess($/;"	f	file:
cfCheckReservedLock	src/test6.c	/^static int cfCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
cfClose	src/test6.c	/^static int cfClose(sqlite3_file *pFile){$/;"	f	file:
cfCurrentTime	src/test6.c	/^static int cfCurrentTime(sqlite3_vfs *pCfVfs, double *pTimeOut){$/;"	f	file:
cfDelete	src/test6.c	/^static int cfDelete(sqlite3_vfs *pCfVfs, const char *zPath, int dirSync){$/;"	f	file:
cfDeviceCharacteristics	src/test6.c	/^static int cfDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
cfDlClose	src/test6.c	/^static void cfDlClose(sqlite3_vfs *pCfVfs, void *pHandle){$/;"	f	file:
cfDlError	src/test6.c	/^static void cfDlError(sqlite3_vfs *pCfVfs, int nByte, char *zErrMsg){$/;"	f	file:
cfDlOpen	src/test6.c	/^static void *cfDlOpen(sqlite3_vfs *pCfVfs, const char *zPath){$/;"	f	file:
cfDlSym	src/test6.c	/^static void (*cfDlSym(sqlite3_vfs *pCfVfs, void *pH, const char *zSym))(void){$/;"	f	file:
cfFileControl	src/test6.c	/^static int cfFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
cfFileSize	src/test6.c	/^static int cfFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
cfFullPathname	src/test6.c	/^static int cfFullPathname($/;"	f	file:
cfGetLastError	src/test6.c	/^static int cfGetLastError(sqlite3_vfs *pCfVfs, int n, char *z){$/;"	f	file:
cfLock	src/test6.c	/^static int cfLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
cfOpen	src/test6.c	/^static int cfOpen($/;"	f	file:
cfRandomness	src/test6.c	/^static int cfRandomness(sqlite3_vfs *pCfVfs, int nByte, char *zBufOut){$/;"	f	file:
cfRead	src/test6.c	/^static int cfRead($/;"	f	file:
cfSectorSize	src/test6.c	/^static int cfSectorSize(sqlite3_file *pFile){$/;"	f	file:
cfShmBarrier	src/test6.c	/^static void cfShmBarrier(sqlite3_file *pFile){$/;"	f	file:
cfShmLock	src/test6.c	/^static int cfShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
cfShmMap	src/test6.c	/^static int cfShmMap($/;"	f	file:
cfShmUnmap	src/test6.c	/^static int cfShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
cfSleep	src/test6.c	/^static int cfSleep(sqlite3_vfs *pCfVfs, int nMicro){$/;"	f	file:
cfSync	src/test6.c	/^static int cfSync(sqlite3_file *pFile, int flags){$/;"	f	file:
cfTruncate	src/test6.c	/^static int cfTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
cfUnlock	src/test6.c	/^static int cfUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
cfWrite	src/test6.c	/^static int cfWrite($/;"	f	file:
cfgstatus	tool/lemon.c	/^enum cfgstatus {$/;"	g	file:
cfp	tool/lemon.c	/^  struct config *cfp;      \/* All configurations in this set *\/$/;"	m	struct:state	typeref:struct:state::config	file:
cfp	tool/lemon.c	/^  struct config *cfp;      \/* The configuration to which linked *\/$/;"	m	struct:plink	typeref:struct:plink::config	file:
cgt_pager_1	test/threadtest3.c	/^static void cgt_pager_1(int nMs){$/;"	f	file:
cgt_pager_1_populate	test/threadtest3.c	/^static void cgt_pager_1_populate(Error *pErr, Sqlite *pDb){$/;"	f	file:
cgt_pager_1_read	test/threadtest3.c	/^static void cgt_pager_1_read(Error *pErr, Sqlite *pDb){$/;"	f	file:
cgt_pager_1_update	test/threadtest3.c	/^static void cgt_pager_1_update(Error *pErr, Sqlite *pDb){$/;"	f	file:
chain	ext/fts1/ft_hash.h	/^    HashElem *chain;         \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht
chain	ext/fts1/fts1_hash.h	/^    fts1HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:fts1Hash::_fts1ht
chain	ext/fts2/fts2_hash.h	/^    fts2HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:fts2Hash::_fts2ht
chain	ext/fts3/fts3_hash.h	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht
chain	sqlite3.c	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
chain	sqlite3.c	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht	file:
chain	src/hash.h	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht
chain	tsrc/fts1_hash.h	/^    fts1HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:fts1Hash::_fts1ht
chain	tsrc/fts2_hash.h	/^    fts2HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:fts2Hash::_fts2ht
chain	tsrc/fts3_hash.h	/^    Fts3HashElem *chain;     \/* Pointer to first entry with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht
chain	tsrc/hash.h	/^    HashElem *chain;           \/* Pointer to first entry with this hash *\/$/;"	m	struct:Hash::_ht
changeCntOn	sqlite3.c	/^  bft changeCntOn:1;      \/* True to update the change-counter *\/$/;"	m	struct:Vdbe	file:
changeCntOn	src/vdbeInt.h	/^  bft changeCntOn:1;      \/* True to update the change-counter *\/$/;"	m	struct:Vdbe
changeCntOn	tsrc/vdbeInt.h	/^  bft changeCntOn:1;      \/* True to update the change-counter *\/$/;"	m	struct:Vdbe
changeCountDone	sqlite3.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeCountDone	src/pager.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeCountDone	tsrc/pager.c	/^  u8 changeCountDone;         \/* Set after incrementing the change-counter *\/$/;"	m	struct:Pager	file:
changeTempStorage	sqlite3.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changeTempStorage	src/pragma.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changeTempStorage	tsrc/pragma.c	/^static int changeTempStorage(Parse *pParse, const char *zStorageType){$/;"	f	file:
changes	sqlite3.c	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
changes	sqlite3.c	/^static void changes($/;"	f	file:
changes	sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
changes	src/func.c	/^static void changes($/;"	f	file:
changes	src/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
changes	tsrc/func.c	/^static void changes($/;"	f	file:
changes	tsrc/sqlite3ext.h	/^  int  (*changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
changeset_from_sql	ext/session/session_common.tcl	/^proc changeset_from_sql {sql {dbname main}} {$/;"	p
changeset_one_table	tool/sqldiff.c	/^static void changeset_one_table(const char *zTab, FILE *out){$/;"	f	file:
changeset_to_list	ext/session/session_common.tcl	/^proc changeset_to_list {c} {$/;"	p
channel	src/tclsqlite.c	/^  Tcl_Channel channel;      \/* Channel identifier *\/$/;"	m	struct:IncrblobChannel	file:
channel	tsrc/tclsqlite.c	/^  Tcl_Channel channel;      \/* Channel identifier *\/$/;"	m	struct:IncrblobChannel	file:
charFunc	sqlite3.c	/^static void charFunc($/;"	f	file:
charFunc	src/func.c	/^static void charFunc($/;"	f	file:
charFunc	tsrc/func.c	/^static void charFunc($/;"	f	file:
charMap	sqlite3.c	135326;"	d	file:
charMap	sqlite3.c	135329;"	d	file:
charMap	src/tokenize.c	109;"	d	file:
charMap	src/tokenize.c	112;"	d	file:
charMap	tool/mkkeywordhash.c	284;"	d	file:
charMap	tsrc/tokenize.c	109;"	d	file:
charMap	tsrc/tokenize.c	112;"	d	file:
characterClass	ext/misc/spellfix.c	/^static char characterClass(char cPrev, char c){$/;"	f	file:
charset	sqlite3.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
charset	src/printf.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
charset	tsrc/printf.c	/^  etByte charset;          \/* Offset into aDigits[] of the digits string *\/$/;"	m	struct:et_info	file:
checkActiveVdbeCnt	sqlite3.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	sqlite3.c	72795;"	d	file:
checkActiveVdbeCnt	src/vdbeaux.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	src/vdbeaux.c	2437;"	d	file:
checkActiveVdbeCnt	tsrc/vdbeaux.c	/^static void checkActiveVdbeCnt(sqlite3 *db){$/;"	f	file:
checkActiveVdbeCnt	tsrc/vdbeaux.c	2437;"	d	file:
checkAppendMsg	sqlite3.c	/^static void checkAppendMsg($/;"	f	file:
checkAppendMsg	src/btree.c	/^static void checkAppendMsg($/;"	f	file:
checkAppendMsg	tsrc/btree.c	/^static void checkAppendMsg($/;"	f	file:
checkColumnOverlap	sqlite3.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkColumnOverlap	src/trigger.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkColumnOverlap	tsrc/trigger.c	/^static int checkColumnOverlap(IdList *pIdList, ExprList *pEList){$/;"	f	file:
checkColumnSpecifier	ext/fts1/fts1.c	/^static int checkColumnSpecifier($/;"	f	file:
checkColumnSpecifier	ext/fts2/fts2.c	/^static int checkColumnSpecifier($/;"	f	file:
checkColumnSpecifier	tsrc/fts1.c	/^static int checkColumnSpecifier($/;"	f	file:
checkColumnSpecifier	tsrc/fts2.c	/^static int checkColumnSpecifier($/;"	f	file:
checkConstraintExprNode	sqlite3.c	/^static int checkConstraintExprNode(Walker *pWalker, Expr *pExpr){$/;"	f	file:
checkConstraintExprNode	src/insert.c	/^static int checkConstraintExprNode(Walker *pWalker, Expr *pExpr){$/;"	f	file:
checkConstraintExprNode	tsrc/insert.c	/^static int checkConstraintExprNode(Walker *pWalker, Expr *pExpr){$/;"	f	file:
checkConstraintUnchanged	sqlite3.c	/^static int checkConstraintUnchanged(Expr *pExpr, int *aiChng, int chngRowid){$/;"	f	file:
checkConstraintUnchanged	src/insert.c	/^static int checkConstraintUnchanged(Expr *pExpr, int *aiChng, int chngRowid){$/;"	f	file:
checkConstraintUnchanged	tsrc/insert.c	/^static int checkConstraintUnchanged(Expr *pExpr, int *aiChng, int chngRowid){$/;"	f	file:
checkForMultiColumnSelectError	sqlite3.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkForMultiColumnSelectError	src/select.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkForMultiColumnSelectError	tsrc/select.c	/^static int checkForMultiColumnSelectError($/;"	f	file:
checkList	sqlite3.c	/^static void checkList($/;"	f	file:
checkList	src/btree.c	/^static void checkList($/;"	f	file:
checkList	tsrc/btree.c	/^static void checkList($/;"	f	file:
checkListProperties	sqlite3.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	sqlite3.c	140592;"	d	file:
checkListProperties	src/notify.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	src/notify.c	76;"	d	file:
checkListProperties	tsrc/notify.c	/^static void checkListProperties(sqlite3 *db){$/;"	f	file:
checkListProperties	tsrc/notify.c	76;"	d	file:
checkPage	sqlite3.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkPage	src/pager.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkPage	tsrc/pager.c	/^static void checkPage(PgHdr *pPg){$/;"	f	file:
checkProfileCallback	sqlite3.c	75026;"	d	file:
checkProfileCallback	sqlite3.c	75029;"	d	file:
checkProfileCallback	src/vdbeapi.c	82;"	d	file:
checkProfileCallback	src/vdbeapi.c	85;"	d	file:
checkProfileCallback	tsrc/vdbeapi.c	82;"	d	file:
checkProfileCallback	tsrc/vdbeapi.c	85;"	d	file:
checkPtrmap	sqlite3.c	/^static void checkPtrmap($/;"	f	file:
checkPtrmap	src/btree.c	/^static void checkPtrmap($/;"	f	file:
checkPtrmap	tsrc/btree.c	/^static void checkPtrmap($/;"	f	file:
checkReadTransaction	sqlite3.c	/^static int checkReadTransaction(sqlite3 *db, Btree *p){$/;"	f	file:
checkReadTransaction	src/backup.c	/^static int checkReadTransaction(sqlite3 *db, Btree *p){$/;"	f	file:
checkReadTransaction	tsrc/backup.c	/^static int checkReadTransaction(sqlite3 *db, Btree *p){$/;"	f	file:
checkRef	sqlite3.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage){$/;"	f	file:
checkRef	src/btree.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage){$/;"	f	file:
checkRef	tsrc/btree.c	/^static int checkRef(IntegrityCk *pCheck, Pgno iPage){$/;"	f	file:
checkSavepointCount	sqlite3.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSavepointCount	src/vdbe.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSavepointCount	tsrc/vdbe.c	/^static int checkSavepointCount(sqlite3 *db){$/;"	f	file:
checkSchema	sqlite3.c	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse	file:
checkSchema	src/sqliteInt.h	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse
checkSchema	tsrc/sqliteInt.h	/^  u8 checkSchema;      \/* Causes schema cookie check after an error *\/$/;"	m	struct:Parse
checkSchemasMatch	tool/sqldiff.c	/^static void checkSchemasMatch(const char *zTab){$/;"	f	file:
checkSpacing	tool/checkSpacing.c	/^static void checkSpacing(const char *zFile, unsigned flags){$/;"	f	file:
checkTreePage	sqlite3.c	/^static int checkTreePage($/;"	f	file:
checkTreePage	src/btree.c	/^static int checkTreePage($/;"	f	file:
checkTreePage	tsrc/btree.c	/^static int checkTreePage($/;"	f	file:
check_callback	test/threadtest2.c	/^int check_callback(void *pid, int argc, char **argv, char **notUsed2){$/;"	f
check_oom	test/threadtest4.c	/^static void check_oom(void *x){$/;"	f	file:
check_poststep_state	ext/rbu/rbu_common.tcl	/^proc check_poststep_state {rc target state} {$/;"	p
check_prestep_state	ext/rbu/rbu_common.tcl	/^proc check_prestep_state {target state} {$/;"	p
checkpoint_starvation_1	test/tt3_checkpoint.c	/^static void checkpoint_starvation_1(int nMs){$/;"	f	file:
checkpoint_starvation_2	test/tt3_checkpoint.c	/^static void checkpoint_starvation_2(int nMs){$/;"	f	file:
checkpoint_starvation_main	test/tt3_checkpoint.c	/^static void checkpoint_starvation_main(int nMs, CheckpointStarvationCtx *p){$/;"	f	file:
checkpoint_starvation_reader	test/tt3_checkpoint.c	/^static char *checkpoint_starvation_reader(int iTid, void *pArg){$/;"	f	file:
checkpoint_starvation_walhook	test/tt3_checkpoint.c	/^static int checkpoint_starvation_walhook($/;"	f	file:
checksum	tool/sqldiff.c	/^static unsigned int checksum(const char *zIn, size_t N){$/;"	f	file:
checksumFinalize	test/wordcount.c	/^static void checksumFinalize(sqlite3_context *context){$/;"	f	file:
checksumStep	test/wordcount.c	/^static void checksumStep($/;"	f	file:
childPtrSize	sqlite3.c	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage	file:
childPtrSize	src/btreeInt.h	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage
childPtrSize	tsrc/btreeInt.h	/^  u8 childPtrSize;     \/* 0 if leaf==1.  4 if leaf==0 *\/$/;"	m	struct:MemPage
circle_del	src/test_rtree.c	/^static void circle_del(void *p){$/;"	f	file:
circle_geom	src/test_rtree.c	/^static int circle_geom($/;"	f	file:
circle_query_func	src/test_rtree.c	/^static int circle_query_func(sqlite3_rtree_query_info *p){$/;"	f	file:
ckBase	sqlite3.c	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse	file:
ckBase	src/sqliteInt.h	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse
ckBase	tsrc/sqliteInt.h	/^  int ckBase;          \/* Base register of data during check constraints *\/$/;"	m	struct:Parse
ckptLock	sqlite3.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptLock	src/wal.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptLock	tsrc/wal.c	/^  u8 ckptLock;               \/* True if holding a checkpoint lock *\/$/;"	m	struct:Wal	file:
ckptSyncFlags	sqlite3.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
ckptSyncFlags	src/pager.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
ckptSyncFlags	tsrc/pager.c	/^  u8 ckptSyncFlags;           \/* SYNC_NORMAL or SYNC_FULL for checkpoint *\/$/;"	m	struct:Pager	file:
cksum	ext/fts5/fts5_storage.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksum	fts5.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksum	sqlite3.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksum	test/tester.tcl	/^proc cksum {{db db}} {$/;"	p
cksum	tsrc/fts5.c	/^  u64 cksum;$/;"	m	struct:Fts5IntegrityCtx	file:
cksumInit	sqlite3.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
cksumInit	src/pager.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
cksumInit	tsrc/pager.c	/^  u32 cksumInit;              \/* Quasi-random value added to every checksum *\/$/;"	m	struct:Pager	file:
cksumNonce	tool/showjournal.c	/^static unsigned cksumNonce = 0;$/;"	v	file:
clang_sanitize_address	src/test1.c	/^static int SQLITE_TCLAPI clang_sanitize_address($/;"	f	file:
className	ext/misc/spellfix.c	/^static const unsigned char className[] = ".ABCDHLRMY9 ?";$/;"	v	file:
clearAllSharedCacheTableLocks	sqlite3.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	sqlite3.c	58245;"	d	file:
clearAllSharedCacheTableLocks	src/btree.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	src/btree.c	109;"	d	file:
clearAllSharedCacheTableLocks	tsrc/btree.c	/^static void clearAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
clearAllSharedCacheTableLocks	tsrc/btree.c	109;"	d	file:
clearCell	sqlite3.c	/^static int clearCell($/;"	f	file:
clearCell	src/btree.c	/^static int clearCell($/;"	f	file:
clearCell	tsrc/btree.c	/^static int clearCell($/;"	f	file:
clearDatabasePage	sqlite3.c	/^static int clearDatabasePage($/;"	f	file:
clearDatabasePage	src/btree.c	/^static int clearDatabasePage($/;"	f	file:
clearDatabasePage	tsrc/btree.c	/^static int clearDatabasePage($/;"	f	file:
clearPendingTerms	ext/fts2/fts2.c	/^static int clearPendingTerms(fulltext_vtab *v){$/;"	f	file:
clearPendingTerms	tsrc/fts2.c	/^static int clearPendingTerms(fulltext_vtab *v){$/;"	f	file:
clearSelect	sqlite3.c	/^static void clearSelect(sqlite3 *db, Select *p, int bFree){$/;"	f	file:
clearSelect	src/select.c	/^static void clearSelect(sqlite3 *db, Select *p, int bFree){$/;"	f	file:
clearSelect	tsrc/select.c	/^static void clearSelect(sqlite3 *db, Select *p, int bFree){$/;"	f	file:
clearTableSpec	ext/fts1/fts1.c	/^static void clearTableSpec(TableSpec *p) {$/;"	f	file:
clearTableSpec	ext/fts2/fts2.c	/^static void clearTableSpec(TableSpec *p) {$/;"	f	file:
clearTableSpec	tsrc/fts1.c	/^static void clearTableSpec(TableSpec *p) {$/;"	f	file:
clearTableSpec	tsrc/fts2.c	/^static void clearTableSpec(TableSpec *p) {$/;"	f	file:
clearYMD_HMS_TZ	sqlite3.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clearYMD_HMS_TZ	src/date.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clearYMD_HMS_TZ	tsrc/date.c	/^static void clearYMD_HMS_TZ(DateTime *p){$/;"	f	file:
clear_bindings	sqlite3.c	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
clear_bindings	sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
clear_bindings	src/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
clear_bindings	tsrc/sqlite3ext.h	/^  int (*clear_bindings)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
clear_error	test/threadtest3.c	64;"	d	file:
clear_error_x	test/threadtest3.c	/^static void clear_error_x($/;"	f	file:
clientMutex	src/test_server.c	/^  pthread_mutex_t clientMutex; \/* Hold this mutex to access the message *\/$/;"	m	struct:SqlMessage	file:
clientWakeup	src/test_server.c	/^  pthread_cond_t clientWakeup; \/* Signal to wake up the client *\/$/;"	m	struct:SqlMessage	file:
client_main	src/test7.c	/^static void *client_main(void *pArg){$/;"	f	file:
client_wait	src/test7.c	/^static void client_wait(Thread *p){$/;"	f	file:
clipLength	mptest/mptest.c	/^static int clipLength(const char *z){$/;"	f	file:
clock_seconds_proc	src/test_thread.c	/^static Tcl_ObjCmdProc clock_seconds_proc;$/;"	v	file:
clock_seconds_proc	src/test_thread.c	/^static int SQLITE_TCLAPI clock_seconds_proc($/;"	f	file:
close	sqlite3.c	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
close	sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close	src/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close	tsrc/sqlite3ext.h	/^  int  (*close)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
closeAllCursors	sqlite3.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeAllCursors	src/vdbeaux.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeAllCursors	tsrc/vdbeaux.c	/^static void closeAllCursors(Vdbe *p){$/;"	f	file:
closeCursorsInFrame	sqlite3.c	/^static void closeCursorsInFrame(Vdbe *p){$/;"	f	file:
closeCursorsInFrame	src/vdbeaux.c	/^static void closeCursorsInFrame(Vdbe *p){$/;"	f	file:
closeCursorsInFrame	tsrc/vdbeaux.c	/^static void closeCursorsInFrame(Vdbe *p){$/;"	f	file:
closeIncrblobChannels	src/tclsqlite.c	/^static void closeIncrblobChannels(SqliteDb *pDb){$/;"	f	file:
closeIncrblobChannels	src/tclsqlite.c	418;"	d	file:
closeIncrblobChannels	tsrc/tclsqlite.c	/^static void closeIncrblobChannels(SqliteDb *pDb){$/;"	f	file:
closeIncrblobChannels	tsrc/tclsqlite.c	418;"	d	file:
closeOp	ext/async/sqlite3async.c	/^  AsyncWrite closeOp;        \/* Preallocated close operation *\/$/;"	m	struct:AsyncFileData	file:
closePendingFds	sqlite3.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closePendingFds	src/os_unix.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closePendingFds	tsrc/os_unix.c	/^static void closePendingFds(unixFile *pFile){$/;"	f	file:
closeTransaction	src/test_journal.c	/^static void closeTransaction(jt_file *p){$/;"	f	file:
closeUnixFile	sqlite3.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
closeUnixFile	src/os_unix.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
closeUnixFile	tsrc/os_unix.c	/^static int closeUnixFile(sqlite3_file *id){$/;"	f	file:
close_v2	sqlite3.c	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
close_v2	sqlite3ext.h	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close_v2	src/sqlite3ext.h	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
close_v2	tsrc/sqlite3ext.h	/^  int (*close_v2)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
closedb	test/threadtest3.c	42;"	d	file:
closedb_x	test/threadtest3.c	/^static void closedb_x($/;"	f	file:
closedir	src/test_windirent.c	/^INT closedir($/;"	f
closureAvlBalance	ext/misc/closure.c	/^static closure_avl *closureAvlBalance(closure_avl *p){$/;"	f	file:
closureAvlDestroy	ext/misc/closure.c	/^static void closureAvlDestroy(closure_avl *p, void (*xDestroy)(closure_avl*)){$/;"	f	file:
closureAvlFirst	ext/misc/closure.c	/^static closure_avl *closureAvlFirst(closure_avl *p){$/;"	f	file:
closureAvlFromPtr	ext/misc/closure.c	/^static closure_avl **closureAvlFromPtr(closure_avl *p, closure_avl **pp){$/;"	f	file:
closureAvlInsert	ext/misc/closure.c	/^static closure_avl *closureAvlInsert($/;"	f	file:
closureAvlNext	ext/misc/closure.c	/^closure_avl *closureAvlNext(closure_avl *p){$/;"	f
closureAvlRecomputeHeight	ext/misc/closure.c	/^static void closureAvlRecomputeHeight(closure_avl *p){$/;"	f	file:
closureAvlRotateAfter	ext/misc/closure.c	/^static closure_avl *closureAvlRotateAfter(closure_avl *pP){$/;"	f	file:
closureAvlRotateBefore	ext/misc/closure.c	/^static closure_avl *closureAvlRotateBefore(closure_avl *pP){$/;"	f	file:
closureAvlSearch	ext/misc/closure.c	/^static closure_avl *closureAvlSearch(closure_avl *p, sqlite3_int64 id){$/;"	f	file:
closureBestIndex	ext/misc/closure.c	/^static int closureBestIndex($/;"	f	file:
closureClearCursor	ext/misc/closure.c	/^static void closureClearCursor(closure_cursor *pCur){$/;"	f	file:
closureClose	ext/misc/closure.c	/^static int closureClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
closureColumn	ext/misc/closure.c	/^static int closureColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
closureConnect	ext/misc/closure.c	/^static int closureConnect($/;"	f	file:
closureDequote	ext/misc/closure.c	/^static char *closureDequote(const char *zIn){$/;"	f	file:
closureDisconnect	ext/misc/closure.c	/^static int closureDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
closureEof	ext/misc/closure.c	/^static int closureEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
closureFilter	ext/misc/closure.c	/^static int closureFilter($/;"	f	file:
closureFree	ext/misc/closure.c	/^static void closureFree(closure_vtab *p){$/;"	f	file:
closureInsertNode	ext/misc/closure.c	/^static int closureInsertNode($/;"	f	file:
closureModule	ext/misc/closure.c	/^static sqlite3_module closureModule = {$/;"	v	file:
closureNext	ext/misc/closure.c	/^static int closureNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
closureOpen	ext/misc/closure.c	/^static int closureOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
closureRowid	ext/misc/closure.c	/^static int closureRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
closureValueOfKey	ext/misc/closure.c	/^static const char *closureValueOfKey(const char *zKey, const char *zStr){$/;"	f	file:
closure_avl	ext/misc/closure.c	/^struct closure_avl {$/;"	s	file:
closure_avl	ext/misc/closure.c	/^typedef struct closure_avl closure_avl;$/;"	t	typeref:struct:closure_avl	file:
closure_cursor	ext/misc/closure.c	/^struct closure_cursor {$/;"	s	file:
closure_cursor	ext/misc/closure.c	/^typedef struct closure_cursor closure_cursor;$/;"	t	typeref:struct:closure_cursor	file:
closure_queue	ext/misc/closure.c	/^struct closure_queue {$/;"	s	file:
closure_queue	ext/misc/closure.c	/^typedef struct closure_queue closure_queue;$/;"	t	typeref:struct:closure_queue	file:
closure_vtab	ext/misc/closure.c	/^struct closure_vtab {$/;"	s	file:
closure_vtab	ext/misc/closure.c	/^typedef struct closure_vtab closure_vtab;$/;"	t	typeref:struct:closure_vtab	file:
cmd	parse.y	/^cmd ::= ALTER TABLE add_column_fullname$/;"	l
cmd	parse.y	/^cmd ::= ALTER TABLE fullname(X) RENAME TO nm(Z). {$/;"	l
cmd	parse.y	/^cmd ::= ANALYZE nm(X) dbnm(Y).  {sqlite3Analyze(pParse, &X, &Y);}$/;"	l
cmd	parse.y	/^cmd ::= ANALYZE.                {sqlite3Analyze(pParse, 0, 0);}$/;"	l
cmd	parse.y	/^cmd ::= ATTACH database_kw_opt expr(F) AS expr(D) key_opt(K). {$/;"	l
cmd	parse.y	/^cmd ::= BEGIN transtype(Y) trans_opt.  {sqlite3BeginTransaction(pParse, Y);}$/;"	l
cmd	parse.y	/^cmd ::= COMMIT trans_opt.      {sqlite3CommitTransaction(pParse);}$/;"	l
cmd	parse.y	/^cmd ::= DETACH database_kw_opt expr(D). {$/;"	l
cmd	parse.y	/^cmd ::= DROP INDEX ifexists(E) fullname(X).   {sqlite3DropIndex(pParse, X, E);}$/;"	l
cmd	parse.y	/^cmd ::= DROP TABLE ifexists(E) fullname(X). {$/;"	l
cmd	parse.y	/^cmd ::= DROP TRIGGER ifexists(NOERR) fullname(X). {$/;"	l
cmd	parse.y	/^cmd ::= DROP VIEW ifexists(E) fullname(X). {$/;"	l
cmd	parse.y	/^cmd ::= END trans_opt.         {sqlite3CommitTransaction(pParse);}$/;"	l
cmd	parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) EQ minus_num(Y). $/;"	l
cmd	parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) EQ nmnum(Y).    {sqlite3Pragma(pParse,&X,&Z,&Y,0);}$/;"	l
cmd	parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) LP minus_num(Y) RP.$/;"	l
cmd	parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) LP nmnum(Y) RP. {sqlite3Pragma(pParse,&X,&Z,&Y,0);}$/;"	l
cmd	parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z).                {sqlite3Pragma(pParse,&X,&Z,0,0);}$/;"	l
cmd	parse.y	/^cmd ::= REINDEX nm(X) dbnm(Y).  {sqlite3Reindex(pParse, &X, &Y);}$/;"	l
cmd	parse.y	/^cmd ::= REINDEX.                {sqlite3Reindex(pParse, 0, 0);}$/;"	l
cmd	parse.y	/^cmd ::= RELEASE savepoint_opt nm(X). {$/;"	l
cmd	parse.y	/^cmd ::= ROLLBACK trans_opt TO savepoint_opt nm(X). {$/;"	l
cmd	parse.y	/^cmd ::= ROLLBACK trans_opt.    {sqlite3RollbackTransaction(pParse);}$/;"	l
cmd	parse.y	/^cmd ::= SAVEPOINT nm(X). {$/;"	l
cmd	parse.y	/^cmd ::= VACUUM nm.             {sqlite3Vacuum(pParse);}$/;"	l
cmd	parse.y	/^cmd ::= VACUUM.                {sqlite3Vacuum(pParse);}$/;"	l
cmd	parse.y	/^cmd ::= create_table create_table_args.$/;"	l
cmd	parse.y	/^cmd ::= create_vtab LP vtabarglist RP(X).  {sqlite3VtabFinishParse(pParse,&X);}$/;"	l
cmd	parse.y	/^cmd ::= create_vtab.                       {sqlite3VtabFinishParse(pParse,0);}$/;"	l
cmd	parse.y	/^cmd ::= createkw trigger_decl(A) BEGIN trigger_cmd_list(S) END(Z). {$/;"	l
cmd	parse.y	/^cmd ::= createkw(S) uniqueflag(U) INDEX ifnotexists(NE) nm(X) dbnm(D)$/;"	l
cmd	parse.y	/^cmd ::= createkw(X) temp(T) VIEW ifnotexists(E) nm(Y) dbnm(Z) eidlist_opt(C)$/;"	l
cmd	parse.y	/^cmd ::= select(X).  {$/;"	l
cmd	parse.y	/^cmd ::= with(C) DELETE FROM fullname(X) indexed_opt(I) where_opt(W) $/;"	l
cmd	parse.y	/^cmd ::= with(C) DELETE FROM fullname(X) indexed_opt(I) where_opt(W). {$/;"	l
cmd	parse.y	/^cmd ::= with(C) UPDATE orconf(R) fullname(X) indexed_opt(I) SET setlist(Y)$/;"	l
cmd	parse.y	/^cmd ::= with(W) insert_cmd(R) INTO fullname(X) idlist_opt(F) DEFAULT VALUES.$/;"	l
cmd	parse.y	/^cmd ::= with(W) insert_cmd(R) INTO fullname(X) idlist_opt(F) select(S). {$/;"	l
cmd	src/parse.y	/^cmd ::= ALTER TABLE add_column_fullname$/;"	l
cmd	src/parse.y	/^cmd ::= ALTER TABLE fullname(X) RENAME TO nm(Z). {$/;"	l
cmd	src/parse.y	/^cmd ::= ANALYZE nm(X) dbnm(Y).  {sqlite3Analyze(pParse, &X, &Y);}$/;"	l
cmd	src/parse.y	/^cmd ::= ANALYZE.                {sqlite3Analyze(pParse, 0, 0);}$/;"	l
cmd	src/parse.y	/^cmd ::= ATTACH database_kw_opt expr(F) AS expr(D) key_opt(K). {$/;"	l
cmd	src/parse.y	/^cmd ::= BEGIN transtype(Y) trans_opt.  {sqlite3BeginTransaction(pParse, Y);}$/;"	l
cmd	src/parse.y	/^cmd ::= COMMIT trans_opt.      {sqlite3CommitTransaction(pParse);}$/;"	l
cmd	src/parse.y	/^cmd ::= DETACH database_kw_opt expr(D). {$/;"	l
cmd	src/parse.y	/^cmd ::= DROP INDEX ifexists(E) fullname(X).   {sqlite3DropIndex(pParse, X, E);}$/;"	l
cmd	src/parse.y	/^cmd ::= DROP TABLE ifexists(E) fullname(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= DROP TRIGGER ifexists(NOERR) fullname(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= DROP VIEW ifexists(E) fullname(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= END trans_opt.         {sqlite3CommitTransaction(pParse);}$/;"	l
cmd	src/parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) EQ minus_num(Y). $/;"	l
cmd	src/parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) EQ nmnum(Y).    {sqlite3Pragma(pParse,&X,&Z,&Y,0);}$/;"	l
cmd	src/parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) LP minus_num(Y) RP.$/;"	l
cmd	src/parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z) LP nmnum(Y) RP. {sqlite3Pragma(pParse,&X,&Z,&Y,0);}$/;"	l
cmd	src/parse.y	/^cmd ::= PRAGMA nm(X) dbnm(Z).                {sqlite3Pragma(pParse,&X,&Z,0,0);}$/;"	l
cmd	src/parse.y	/^cmd ::= REINDEX nm(X) dbnm(Y).  {sqlite3Reindex(pParse, &X, &Y);}$/;"	l
cmd	src/parse.y	/^cmd ::= REINDEX.                {sqlite3Reindex(pParse, 0, 0);}$/;"	l
cmd	src/parse.y	/^cmd ::= RELEASE savepoint_opt nm(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= ROLLBACK trans_opt TO savepoint_opt nm(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= ROLLBACK trans_opt.    {sqlite3RollbackTransaction(pParse);}$/;"	l
cmd	src/parse.y	/^cmd ::= SAVEPOINT nm(X). {$/;"	l
cmd	src/parse.y	/^cmd ::= VACUUM nm.             {sqlite3Vacuum(pParse);}$/;"	l
cmd	src/parse.y	/^cmd ::= VACUUM.                {sqlite3Vacuum(pParse);}$/;"	l
cmd	src/parse.y	/^cmd ::= create_table create_table_args.$/;"	l
cmd	src/parse.y	/^cmd ::= create_vtab LP vtabarglist RP(X).  {sqlite3VtabFinishParse(pParse,&X);}$/;"	l
cmd	src/parse.y	/^cmd ::= create_vtab.                       {sqlite3VtabFinishParse(pParse,0);}$/;"	l
cmd	src/parse.y	/^cmd ::= createkw trigger_decl(A) BEGIN trigger_cmd_list(S) END(Z). {$/;"	l
cmd	src/parse.y	/^cmd ::= createkw(S) uniqueflag(U) INDEX ifnotexists(NE) nm(X) dbnm(D)$/;"	l
cmd	src/parse.y	/^cmd ::= createkw(X) temp(T) VIEW ifnotexists(E) nm(Y) dbnm(Z) eidlist_opt(C)$/;"	l
cmd	src/parse.y	/^cmd ::= select(X).  {$/;"	l
cmd	src/parse.y	/^cmd ::= with(C) DELETE FROM fullname(X) indexed_opt(I) where_opt(W) $/;"	l
cmd	src/parse.y	/^cmd ::= with(C) DELETE FROM fullname(X) indexed_opt(I) where_opt(W). {$/;"	l
cmd	src/parse.y	/^cmd ::= with(C) UPDATE orconf(R) fullname(X) indexed_opt(I) SET setlist(Y)$/;"	l
cmd	src/parse.y	/^cmd ::= with(W) insert_cmd(R) INTO fullname(X) idlist_opt(F) DEFAULT VALUES.$/;"	l
cmd	src/parse.y	/^cmd ::= with(W) insert_cmd(R) INTO fullname(X) idlist_opt(F) select(S). {$/;"	l
cmdlineError	tool/dbhash.c	/^static void cmdlineError(const char *zFormat, ...){$/;"	f	file:
cmdlineError	tool/sqldiff.c	/^static void cmdlineError(const char *zFormat, ...){$/;"	f	file:
cmdline_error	ext/fts5/tool/fts5txt2db.tcl	/^  proc cmdline_error {O E {msg ""}} {$/;"	p
cmdline_option_value	shell.c	/^static char *cmdline_option_value(int argc, char **argv, int i){$/;"	f	file:
cmdline_option_value	src/shell.c	/^static char *cmdline_option_value(int argc, char **argv, int i){$/;"	f	file:
cmdline_option_value	tsrc/shell.c	/^static char *cmdline_option_value(int argc, char **argv, int i){$/;"	f	file:
cmdlist	parse.y	/^cmdlist ::= cmdlist ecmd.$/;"	l
cmdlist	parse.y	/^cmdlist ::= ecmd.$/;"	l
cmdlist	src/parse.y	/^cmdlist ::= cmdlist ecmd.$/;"	l
cmdlist	src/parse.y	/^cmdlist ::= ecmd.$/;"	l
cmdx	parse.y	/^cmdx ::= cmd.           { sqlite3FinishCoding(pParse); }$/;"	l
cmdx	src/parse.y	/^cmdx ::= cmd.           { sqlite3FinishCoding(pParse); }$/;"	l
cnt	shell.c	/^  int cnt;               \/* Number of records displayed so far *\/$/;"	m	struct:ShellState	file:
cnt	sqlite3.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	sqlite3.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
cnt	sqlite3.c	/^  u32 cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp	file:
cnt	src/func.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	src/mutex_noop.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
cnt	src/shell.c	/^  int cnt;               \/* Number of records displayed so far *\/$/;"	m	struct:ShellState	file:
cnt	src/vdbe.h	/^  u32 cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp
cnt	tsrc/func.c	/^  i64 cnt;          \/* Number of elements summed *\/$/;"	m	struct:SumCtx	file:
cnt	tsrc/mutex_noop.c	/^  int cnt;    \/* Number of entries without a matching leave *\/$/;"	m	struct:sqlite3_debug_mutex	file:
cnt	tsrc/shell.c	/^  int cnt;               \/* Number of records displayed so far *\/$/;"	m	struct:ShellState	file:
cnt	tsrc/vdbe.h	/^  u32 cnt;                 \/* Number of times this instruction was executed *\/$/;"	m	struct:VdbeOp
coalesce_subquery	test/randexpr1.tcl	/^proc coalesce_subquery {a b e} {$/;"	p
code	tool/lemon.c	/^  const char *code;        \/* The code executed when this rule is reduced *\/$/;"	m	struct:rule	file:
code1	test/bc_common.tcl	/^  proc code1 {tcl} { uplevel #0 $tcl }$/;"	p
code1	test/lock_common.tcl	/^    proc code1 {tcl} { uplevel #0 $tcl }$/;"	p
code2	test/bc_common.tcl	/^  proc code2 {tcl} { testfixture $::bc_chan $tcl }$/;"	p
code2	test/lock_common.tcl	/^    proc code2 {tcl} { testfixture $::code2_chan $tcl }$/;"	p
code2	test/lock_common.tcl	/^    proc code2 {tcl} { uplevel #0 $tcl }$/;"	p
code3	test/lock_common.tcl	/^    proc code3 {tcl} { testfixture $::code3_chan $tcl }$/;"	p
code3	test/lock_common.tcl	/^    proc code3 {tcl} { uplevel #0 $tcl }$/;"	p
codeAllEqualityTerms	sqlite3.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeAllEqualityTerms	src/wherecode.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeAllEqualityTerms	tsrc/wherecode.c	/^static int codeAllEqualityTerms($/;"	f	file:
codeApplyAffinity	sqlite3.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeApplyAffinity	src/wherecode.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeApplyAffinity	tsrc/wherecode.c	/^static void codeApplyAffinity(Parse *pParse, int base, int n, char *zAff){$/;"	f	file:
codeAttach	sqlite3.c	/^static void codeAttach($/;"	f	file:
codeAttach	src/attach.c	/^static void codeAttach($/;"	f	file:
codeAttach	tsrc/attach.c	/^static void codeAttach($/;"	f	file:
codeCompare	sqlite3.c	/^static int codeCompare($/;"	f	file:
codeCompare	src/expr.c	/^static int codeCompare($/;"	f	file:
codeCompare	tsrc/expr.c	/^static int codeCompare($/;"	f	file:
codeCursorHint	sqlite3.c	/^static void codeCursorHint($/;"	f	file:
codeCursorHint	sqlite3.c	124307;"	d	file:
codeCursorHint	src/wherecode.c	/^static void codeCursorHint($/;"	f	file:
codeCursorHint	src/wherecode.c	813;"	d	file:
codeCursorHint	tsrc/wherecode.c	/^static void codeCursorHint($/;"	f	file:
codeCursorHint	tsrc/wherecode.c	813;"	d	file:
codeCursorHintCheckExpr	sqlite3.c	/^static int codeCursorHintCheckExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintCheckExpr	src/wherecode.c	/^static int codeCursorHintCheckExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintCheckExpr	tsrc/wherecode.c	/^static int codeCursorHintCheckExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintFixExpr	sqlite3.c	/^static int codeCursorHintFixExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintFixExpr	src/wherecode.c	/^static int codeCursorHintFixExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintFixExpr	tsrc/wherecode.c	/^static int codeCursorHintFixExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintIsOrFunction	sqlite3.c	/^static int codeCursorHintIsOrFunction(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintIsOrFunction	src/wherecode.c	/^static int codeCursorHintIsOrFunction(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeCursorHintIsOrFunction	tsrc/wherecode.c	/^static int codeCursorHintIsOrFunction(Walker *pWalker, Expr *pExpr){$/;"	f	file:
codeDeferredSeek	sqlite3.c	/^static void codeDeferredSeek($/;"	f	file:
codeDeferredSeek	src/wherecode.c	/^static void codeDeferredSeek($/;"	f	file:
codeDeferredSeek	tsrc/wherecode.c	/^static void codeDeferredSeek($/;"	f	file:
codeDistinct	sqlite3.c	/^static void codeDistinct($/;"	f	file:
codeDistinct	src/select.c	/^static void codeDistinct($/;"	f	file:
codeDistinct	tsrc/select.c	/^static void codeDistinct($/;"	f	file:
codeEmitted	tool/lemon.c	/^  int codeEmitted;         \/* True if the code has been emitted already *\/$/;"	m	struct:rule	file:
codeEqualityTerm	sqlite3.c	/^static int codeEqualityTerm($/;"	f	file:
codeEqualityTerm	src/wherecode.c	/^static int codeEqualityTerm($/;"	f	file:
codeEqualityTerm	tsrc/wherecode.c	/^static int codeEqualityTerm($/;"	f	file:
codeInteger	sqlite3.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeInteger	src/expr.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeInteger	tsrc/expr.c	/^static void codeInteger(Parse *pParse, Expr *pExpr, int negFlag, int iMem){$/;"	f	file:
codeOffset	sqlite3.c	/^static void codeOffset($/;"	f	file:
codeOffset	src/select.c	/^static void codeOffset($/;"	f	file:
codeOffset	tsrc/select.c	/^static void codeOffset($/;"	f	file:
codePrefix	tool/lemon.c	/^  const char *codePrefix;  \/* Setup code before code[] above *\/$/;"	m	struct:rule	file:
codeReal	sqlite3.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeReal	src/expr.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeReal	tsrc/expr.c	/^static void codeReal(Vdbe *v, const char *z, int negateFlag, int iMem){$/;"	f	file:
codeRowTrigger	sqlite3.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeRowTrigger	src/trigger.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeRowTrigger	tsrc/trigger.c	/^static TriggerPrg *codeRowTrigger($/;"	f	file:
codeSuffix	tool/lemon.c	/^  const char *codeSuffix;  \/* Breakdown code after code[] above *\/$/;"	m	struct:rule	file:
codeTableLocks	sqlite3.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	sqlite3.c	97491;"	d	file:
codeTableLocks	src/build.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	src/build.c	104;"	d	file:
codeTableLocks	tsrc/build.c	/^static void codeTableLocks(Parse *pParse){$/;"	f	file:
codeTableLocks	tsrc/build.c	104;"	d	file:
codeTriggerProgram	sqlite3.c	/^static int codeTriggerProgram($/;"	f	file:
codeTriggerProgram	src/trigger.c	/^static int codeTriggerProgram($/;"	f	file:
codeTriggerProgram	tsrc/trigger.c	/^static int codeTriggerProgram($/;"	f	file:
colFlags	sqlite3.c	/^  u8 colFlags;     \/* Boolean properties.  See COLFLAG_ defines below *\/$/;"	m	struct:Column	file:
colFlags	src/sqliteInt.h	/^  u8 colFlags;     \/* Boolean properties.  See COLFLAG_ defines below *\/$/;"	m	struct:Column
colFlags	tsrc/sqliteInt.h	/^  u8 colFlags;     \/* Boolean properties.  See COLFLAG_ defines below *\/$/;"	m	struct:Column
colNamesSet	sqlite3.c	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse	file:
colNamesSet	src/sqliteInt.h	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse
colNamesSet	tsrc/sqliteInt.h	/^  u8 colNamesSet;      \/* TRUE after OP_ColumnName has been issued to pVdbe *\/$/;"	m	struct:Parse
colSeparator	shell.c	/^  char colSeparator[20]; \/* Column separator character for several modes *\/$/;"	m	struct:ShellState	file:
colSeparator	src/shell.c	/^  char colSeparator[20]; \/* Column separator character for several modes *\/$/;"	m	struct:ShellState	file:
colSeparator	tsrc/shell.c	/^  char colSeparator[20]; \/* Column separator character for several modes *\/$/;"	m	struct:ShellState	file:
colUsed	sqlite3.c	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item	file:
colUsed	sqlite3.c	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info	file:
colUsed	sqlite3.h	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info
colUsed	src/sqliteInt.h	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item
colUsed	tsrc/sqlite3.h	/^  sqlite3_uint64 colUsed;    \/* Input: Mask of columns used by statement *\/$/;"	m	struct:sqlite3_index_info
colUsed	tsrc/sqliteInt.h	/^    Bitmask colUsed;  \/* Bit N (1<<N) set if column N of pTab is used *\/$/;"	m	struct:SrcList::SrcList_item
colWidth	shell.c	/^  int colWidth[100];     \/* Requested width of each column when in column mode*\/$/;"	m	struct:ShellState	file:
colWidth	shell.c	/^  int colWidth[100];  \/* Column widths prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
colWidth	src/shell.c	/^  int colWidth[100];     \/* Requested width of each column when in column mode*\/$/;"	m	struct:ShellState	file:
colWidth	src/shell.c	/^  int colWidth[100];  \/* Column widths prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
colWidth	tsrc/shell.c	/^  int colWidth[100];     \/* Requested width of each column when in column mode*\/$/;"	m	struct:ShellState	file:
colWidth	tsrc/shell.c	/^  int colWidth[100];  \/* Column widths prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
collationMatch	sqlite3.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collationMatch	src/build.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collationMatch	tsrc/build.c	/^static int collationMatch(const char *zColl, Index *pIndex){$/;"	f	file:
collation_needed	sqlite3.c	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed	sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed	src/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed	tsrc/sqlite3ext.h	/^  int  (*collation_needed)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	sqlite3.c	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines	file:
collation_needed16	sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	src/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collation_needed16	tsrc/sqlite3ext.h	/^  int  (*collation_needed16)(sqlite3*,void*,void(*)(void*,sqlite3*,$/;"	m	struct:sqlite3_api_routines
collectSegmentTerms	ext/fts2/fts2.c	/^static int collectSegmentTerms(fulltext_vtab *v, sqlite3_stmt *s,$/;"	f	file:
collectSegmentTerms	tsrc/fts2.c	/^static int collectSegmentTerms(fulltext_vtab *v, sqlite3_stmt *s,$/;"	f	file:
collide	tool/lemon.c	/^  struct action *collide;  \/* Next action with the same hash *\/$/;"	m	struct:action	typeref:struct:action::action	file:
columnIndex	sqlite3.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnIndex	src/select.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnIndex	tsrc/select.c	/^static int columnIndex(Table *pTab, const char *zCol){$/;"	f	file:
columnMallocFailure	sqlite3.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMallocFailure	src/vdbeapi.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMallocFailure	tsrc/vdbeapi.c	/^static void columnMallocFailure(sqlite3_stmt *pStmt)$/;"	f	file:
columnMem	sqlite3.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnMem	src/vdbeapi.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnMem	tsrc/vdbeapi.c	/^static Mem *columnMem(sqlite3_stmt *pStmt, int i){$/;"	f	file:
columnName	sqlite3.c	/^static const void *columnName($/;"	f	file:
columnName	src/vdbeapi.c	/^static const void *columnName($/;"	f	file:
columnName	tsrc/vdbeapi.c	/^static const void *columnName($/;"	f	file:
columnNames	tool/sqldiff.c	/^static char **columnNames($/;"	f	file:
columnNullValue	sqlite3.c	/^static const Mem *columnNullValue(void){$/;"	f	file:
columnNullValue	src/vdbeapi.c	/^static const Mem *columnNullValue(void){$/;"	f	file:
columnNullValue	tsrc/vdbeapi.c	/^static const Mem *columnNullValue(void){$/;"	f	file:
columnType	sqlite3.c	114842;"	d	file:
columnType	sqlite3.c	114844;"	d	file:
columnType	src/select.c	1354;"	d	file:
columnType	src/select.c	1356;"	d	file:
columnType	tsrc/select.c	1354;"	d	file:
columnType	tsrc/select.c	1356;"	d	file:
columnTypeImpl	sqlite3.c	/^static const char *columnTypeImpl($/;"	f	file:
columnTypeImpl	src/select.c	/^static const char *columnTypeImpl($/;"	f	file:
columnTypeImpl	tsrc/select.c	/^static const char *columnTypeImpl($/;"	f	file:
column_blob	sqlite3.c	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_blob	sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_blob	src/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_blob	tsrc/sqlite3ext.h	/^  const void * (*column_blob)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	sqlite3.c	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes	sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	src/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes	tsrc/sqlite3ext.h	/^  int  (*column_bytes)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	sqlite3.c	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_bytes16	sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	src/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_bytes16	tsrc/sqlite3ext.h	/^  int  (*column_bytes16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_count	sqlite3.c	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
column_count	sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_count	src/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_count	tsrc/sqlite3ext.h	/^  int  (*column_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
column_database_name	sqlite3.c	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name	sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name	src/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name	tsrc/sqlite3ext.h	/^  const char * (*column_database_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	sqlite3.c	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_database_name16	sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	src/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_database_name16	tsrc/sqlite3ext.h	/^  const void * (*column_database_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype	sqlite3.c	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype	sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype	src/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype	tsrc/sqlite3ext.h	/^  const char * (*column_decltype)(sqlite3_stmt*,int i);$/;"	m	struct:sqlite3_api_routines
column_decltype16	sqlite3.c	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_decltype16	sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype16	src/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_decltype16	tsrc/sqlite3ext.h	/^  const void * (*column_decltype16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_double	sqlite3.c	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_double	sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_double	src/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_double	tsrc/sqlite3ext.h	/^  double  (*column_double)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	sqlite3.c	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int	sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	src/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int	tsrc/sqlite3ext.h	/^  int  (*column_int)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	sqlite3.c	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_int64	sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	src/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_int64	tsrc/sqlite3ext.h	/^  sqlite_int64  (*column_int64)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_name	sqlite3.c	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name	sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name	src/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name	tsrc/sqlite3ext.h	/^  const char * (*column_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	sqlite3.c	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_name16	sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	src/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_name16	tsrc/sqlite3ext.h	/^  const void * (*column_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	sqlite3.c	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name	sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	src/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name	tsrc/sqlite3ext.h	/^  const char * (*column_origin_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	sqlite3.c	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_origin_name16	sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	src/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_origin_name16	tsrc/sqlite3ext.h	/^  const void * (*column_origin_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	sqlite3.c	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name	sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	src/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name	tsrc/sqlite3ext.h	/^  const char * (*column_table_name)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	sqlite3.c	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines	file:
column_table_name16	sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	src/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_table_name16	tsrc/sqlite3ext.h	/^  const void * (*column_table_name16)(sqlite3_stmt*,int);$/;"	m	struct:sqlite3_api_routines
column_text	sqlite3.c	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text	sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text	src/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text	tsrc/sqlite3ext.h	/^  const unsigned char * (*column_text)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	sqlite3.c	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_text16	sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	src/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_text16	tsrc/sqlite3ext.h	/^  const void * (*column_text16)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	sqlite3.c	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_type	sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	src/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_type	tsrc/sqlite3ext.h	/^  int  (*column_type)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	sqlite3.c	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines	file:
column_value	sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	src/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
column_value	tsrc/sqlite3ext.h	/^  sqlite3_value* (*column_value)(sqlite3_stmt*,int iCol);$/;"	m	struct:sqlite3_api_routines
columnlist	parse.y	/^columnlist ::= columnlist COMMA columnname carglist.$/;"	l
columnlist	parse.y	/^columnlist ::= columnname carglist.$/;"	l
columnlist	src/parse.y	/^columnlist ::= columnlist COMMA columnname carglist.$/;"	l
columnlist	src/parse.y	/^columnlist ::= columnname carglist.$/;"	l
columnsInIndex	sqlite3.c	/^static Bitmask columnsInIndex(Index *pIdx){$/;"	f	file:
columnsInIndex	src/where.c	/^static Bitmask columnsInIndex(Index *pIdx){$/;"	f	file:
columnsInIndex	tsrc/where.c	/^static Bitmask columnsInIndex(Index *pIdx){$/;"	f	file:
colv	src/test4.c	/^  const char *colv[100];    \/* result column names *\/$/;"	m	struct:Thread	file:
colv	src/test7.c	/^  const char *colv[100];   \/* result column names *\/$/;"	m	struct:Thread	file:
commit_hook	sqlite3.c	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
commit_hook	sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
commit_hook	src/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
commit_hook	tsrc/sqlite3ext.h	/^  void * (*commit_hook)(sqlite3*,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
compare2pow63	sqlite3.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compare2pow63	src/util.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compare2pow63	tsrc/util.c	/^static int compare2pow63(const char *zNum, int incr){$/;"	f	file:
compareFunction	ext/fts1/ft_hash.c	/^static int (*compareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
compareFunction	ext/fts1/fts1_hash.c	/^static int (*compareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
compareFunction	ext/fts2/fts2_hash.c	/^static int (*compareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
compareFunction	tsrc/fts1_hash.c	/^static int (*compareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
compareFunction	tsrc/fts2_hash.c	/^static int (*compareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
compareInfo	sqlite3.c	/^struct compareInfo {$/;"	s	file:
compareInfo	src/func.c	/^struct compareInfo {$/;"	s	file:
compareInfo	tsrc/func.c	/^struct compareInfo {$/;"	s	file:
compare_db	ext/session/session_common.tcl	/^proc compare_db {db1 db2} {$/;"	p
comparisonAffinity	sqlite3.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
comparisonAffinity	src/expr.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
comparisonAffinity	tsrc/expr.c	/^static char comparisonAffinity(Expr *pExpr){$/;"	f	file:
compileoption_get	sqlite3.c	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_get	sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_get	src/sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_get	tsrc/sqlite3ext.h	/^  const char *(*compileoption_get)(int);$/;"	m	struct:sqlite3_api_routines
compileoption_used	sqlite3.c	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
compileoption_used	sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
compileoption_used	src/sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
compileoption_used	tsrc/sqlite3ext.h	/^  int (*compileoption_used)(const char*);$/;"	m	struct:sqlite3_api_routines
compileoptiongetFunc	sqlite3.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptiongetFunc	src/func.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptiongetFunc	tsrc/func.c	/^static void compileoptiongetFunc($/;"	f	file:
compileoptionusedFunc	sqlite3.c	/^static void compileoptionusedFunc($/;"	f	file:
compileoptionusedFunc	src/func.c	/^static void compileoptionusedFunc($/;"	f	file:
compileoptionusedFunc	tsrc/func.c	/^static void compileoptionusedFunc($/;"	f	file:
complete	sqlite3.c	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete	sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete	src/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete	tsrc/sqlite3ext.h	/^  int  (*complete)(const char*sql);$/;"	m	struct:sqlite3_api_routines
complete16	sqlite3.c	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines	file:
complete16	sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
complete16	src/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
complete16	tsrc/sqlite3ext.h	/^  int  (*complete16)(const void*sql);$/;"	m	struct:sqlite3_api_routines
completed	src/test4.c	/^  int completed;        \/* Number of operations completed *\/$/;"	m	struct:Thread	file:
completed	src/test7.c	/^  volatile int completed;  \/* Number of operations completed *\/$/;"	m	struct:Thread	file:
compressFunc	ext/misc/compress.c	/^static void compressFunc($/;"	f	file:
computeCellSize	sqlite3.c	/^static SQLITE_NOINLINE u16 computeCellSize(CellArray *p, int N){$/;"	f	file:
computeCellSize	src/btree.c	/^static SQLITE_NOINLINE u16 computeCellSize(CellArray *p, int N){$/;"	f	file:
computeCellSize	tsrc/btree.c	/^static SQLITE_NOINLINE u16 computeCellSize(CellArray *p, int N){$/;"	f	file:
computeHMS	sqlite3.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeHMS	src/date.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeHMS	tsrc/date.c	/^static void computeHMS(DateTime *p){$/;"	f	file:
computeJD	sqlite3.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeJD	src/date.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeJD	tsrc/date.c	/^static void computeJD(DateTime *p){$/;"	f	file:
computeLimitRegisters	sqlite3.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeLimitRegisters	src/select.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeLimitRegisters	tsrc/select.c	/^static void computeLimitRegisters(Parse *pParse, Select *p, int iBreak){$/;"	f	file:
computeNumericType	sqlite3.c	/^static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){$/;"	f	file:
computeNumericType	src/vdbe.c	/^static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){$/;"	f	file:
computeNumericType	tsrc/vdbe.c	/^static u16 SQLITE_NOINLINE computeNumericType(Mem *pMem){$/;"	f	file:
computeSigs	tool/pagesig.c	/^static void computeSigs(const char *zFilename){$/;"	f	file:
computeYMD	sqlite3.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD	src/date.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD	tsrc/date.c	/^static void computeYMD(DateTime *p){$/;"	f	file:
computeYMD_HMS	sqlite3.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
computeYMD_HMS	src/date.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
computeYMD_HMS	tsrc/date.c	/^static void computeYMD_HMS(DateTime *p){$/;"	f	file:
compute_action	tool/lemon.c	/^PRIVATE int compute_action(struct lemon *lemp, struct action *ap)$/;"	f
conchFile	sqlite3.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFile	src/os_unix.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFile	tsrc/os_unix.c	/^  unixFile *conchFile;         \/* Open conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	sqlite3.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	src/os_unix.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchFilePath	tsrc/os_unix.c	/^  char *conchFilePath;         \/* Name of the conch file *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	sqlite3.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	src/os_unix.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
conchHeld	tsrc/os_unix.c	/^  int conchHeld;               \/* 1 if the conch is held, -1 if lockless *\/$/;"	m	struct:proxyLockingContext	file:
cond	src/test_thread.c	/^  pthread_cond_t cond;               \/* Condition variable to wait on *\/$/;"	m	struct:UnlockNotification	file:
config	tool/lemon.c	/^struct config {$/;"	s	file:
confighash	tool/lemon.c	/^PRIVATE unsigned confighash(struct config *a)$/;"	f
configureCommand	test/releasetest.tcl	/^proc configureCommand {opts} {$/;"	p
conflictCallback	ext/session/changeset.c	/^static int conflictCallback($/;"	f	file:
connectionIsBusy	sqlite3.c	/^static int connectionIsBusy(sqlite3 *db){$/;"	f	file:
connectionIsBusy	src/main.c	/^static int connectionIsBusy(sqlite3 *db){$/;"	f	file:
connectionIsBusy	tsrc/main.c	/^static int connectionIsBusy(sqlite3 *db){$/;"	f	file:
conslist	parse.y	/^conslist ::= conslist tconscomma tcons.$/;"	l
conslist	parse.y	/^conslist ::= tcons.$/;"	l
conslist	src/parse.y	/^conslist ::= conslist tconscomma tcons.$/;"	l
conslist	src/parse.y	/^conslist ::= tcons.$/;"	l
constraintName	sqlite3.c	/^  Token constraintName;\/* Name of the constraint currently being parsed *\/$/;"	m	struct:Parse	file:
constraintName	src/sqliteInt.h	/^  Token constraintName;\/* Name of the constraint currently being parsed *\/$/;"	m	struct:Parse
constraintName	tsrc/sqliteInt.h	/^  Token constraintName;\/* Name of the constraint currently being parsed *\/$/;"	m	struct:Parse
constraints	ext/session/sqlite3session.c	/^  SessionBuffer constraints;      \/* Deferred constraints are stored here *\/$/;"	m	struct:SessionApplyCtx	file:
constraints	sqlite3.c	/^  SessionBuffer constraints;      \/* Deferred constraints are stored here *\/$/;"	m	struct:SessionApplyCtx	file:
constraints	tsrc/sqlite3session.c	/^  SessionBuffer constraints;      \/* Deferred constraints are stored here *\/$/;"	m	struct:SessionApplyCtx	file:
constructAutomaticIndex	sqlite3.c	/^static void constructAutomaticIndex($/;"	f	file:
constructAutomaticIndex	src/where.c	/^static void constructAutomaticIndex($/;"	f	file:
constructAutomaticIndex	tsrc/where.c	/^static void constructAutomaticIndex($/;"	f	file:
constructVtab	ext/fts1/fts1.c	/^static int constructVtab($/;"	f	file:
constructVtab	ext/fts2/fts2.c	/^static int constructVtab($/;"	f	file:
constructVtab	tsrc/fts1.c	/^static int constructVtab($/;"	f	file:
constructVtab	tsrc/fts2.c	/^static int constructVtab($/;"	f	file:
contentInsertStatement	ext/fts1/fts1.c	/^static const char *contentInsertStatement(fulltext_vtab *v){$/;"	f	file:
contentInsertStatement	ext/fts2/fts2.c	/^static const char *contentInsertStatement(fulltext_vtab *v){$/;"	f	file:
contentInsertStatement	tsrc/fts1.c	/^static const char *contentInsertStatement(fulltext_vtab *v){$/;"	f	file:
contentInsertStatement	tsrc/fts2.c	/^static const char *contentInsertStatement(fulltext_vtab *v){$/;"	f	file:
contentUpdateStatement	ext/fts1/fts1.c	/^static const char *contentUpdateStatement(fulltext_vtab *v){$/;"	f	file:
contentUpdateStatement	ext/fts2/fts2.c	/^static const char *contentUpdateStatement(fulltext_vtab *v){$/;"	f	file:
contentUpdateStatement	tsrc/fts1.c	/^static const char *contentUpdateStatement(fulltext_vtab *v){$/;"	f	file:
contentUpdateStatement	tsrc/fts2.c	/^static const char *contentUpdateStatement(fulltext_vtab *v){$/;"	f	file:
content_delete	ext/fts1/fts1.c	/^static int content_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
content_delete	ext/fts1/fulltext.c	/^static int content_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
content_delete	ext/fts2/fts2.c	/^static int content_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
content_delete	tsrc/fts1.c	/^static int content_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
content_delete	tsrc/fts2.c	/^static int content_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
content_exists	ext/fts2/fts2.c	/^static int content_exists(fulltext_vtab *v){$/;"	f	file:
content_exists	tsrc/fts2.c	/^static int content_exists(fulltext_vtab *v){$/;"	f	file:
content_insert	ext/fts1/fts1.c	/^static int content_insert(fulltext_vtab *v, sqlite3_value *rowid,$/;"	f	file:
content_insert	ext/fts1/fulltext.c	/^static int content_insert(fulltext_vtab *v, sqlite3_value *rowid,$/;"	f	file:
content_insert	ext/fts2/fts2.c	/^static int content_insert(fulltext_vtab *v, sqlite3_value *rowid,$/;"	f	file:
content_insert	tsrc/fts1.c	/^static int content_insert(fulltext_vtab *v, sqlite3_value *rowid,$/;"	f	file:
content_insert	tsrc/fts2.c	/^static int content_insert(fulltext_vtab *v, sqlite3_value *rowid,$/;"	f	file:
content_select	ext/fts1/fts1.c	/^static int content_select(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
content_select	ext/fts1/fulltext.c	/^static int content_select(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
content_select	ext/fts2/fts2.c	/^static int content_select(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
content_select	tsrc/fts1.c	/^static int content_select(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
content_select	tsrc/fts2.c	/^static int content_select(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
content_update	ext/fts1/fts1.c	/^static int content_update(fulltext_vtab *v, sqlite3_value **pValues,$/;"	f	file:
content_update	ext/fts2/fts2.c	/^static int content_update(fulltext_vtab *v, sqlite3_value **pValues,$/;"	f	file:
content_update	tsrc/fts1.c	/^static int content_update(fulltext_vtab *v, sqlite3_value **pValues,$/;"	f	file:
content_update	tsrc/fts2.c	/^static int content_update(fulltext_vtab *v, sqlite3_value **pValues,$/;"	f	file:
contextMalloc	sqlite3.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
contextMalloc	src/func.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
contextMalloc	tsrc/func.c	/^static void *contextMalloc(sqlite3_context *context, i64 nByte){$/;"	f	file:
context_db_handle	sqlite3.c	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
context_db_handle	sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
context_db_handle	src/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
context_db_handle	tsrc/sqlite3ext.h	/^  sqlite3 *(*context_db_handle)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
continuePrompt	shell.c	/^static char continuePrompt[20]; \/* Continuation prompt. default: "   ...> " *\/$/;"	v	file:
continuePrompt	src/shell.c	/^static char continuePrompt[20]; \/* Continuation prompt. default: "   ...> " *\/$/;"	v	file:
continuePrompt	tsrc/shell.c	/^static char continuePrompt[20]; \/* Continuation prompt. default: "   ...> " *\/$/;"	v	file:
convertCompoundSelectToSubquery	sqlite3.c	/^static int convertCompoundSelectToSubquery(Walker *pWalker, Select *p){$/;"	f	file:
convertCompoundSelectToSubquery	src/select.c	/^static int convertCompoundSelectToSubquery(Walker *pWalker, Select *p){$/;"	f	file:
convertCompoundSelectToSubquery	tsrc/select.c	/^static int convertCompoundSelectToSubquery(Walker *pWalker, Select *p){$/;"	f	file:
convertToWithoutRowidTable	sqlite3.c	/^static void convertToWithoutRowidTable(Parse *pParse, Table *pTab){$/;"	f	file:
convertToWithoutRowidTable	src/build.c	/^static void convertToWithoutRowidTable(Parse *pParse, Table *pTab){$/;"	f	file:
convertToWithoutRowidTable	tsrc/build.c	/^static void convertToWithoutRowidTable(Parse *pParse, Table *pTab){$/;"	f	file:
cookieMask	sqlite3.c	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse	file:
cookieMask	src/sqliteInt.h	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse
cookieMask	tsrc/sqliteInt.h	/^  yDbMask cookieMask;  \/* Bitmask of schema verified databases *\/$/;"	m	struct:Parse
cookieValue	sqlite3.c	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse	file:
cookieValue	src/sqliteInt.h	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse
cookieValue	tsrc/sqliteInt.h	/^  int cookieValue[SQLITE_MAX_ATTACHED+2];  \/* Values of cookies to verify *\/$/;"	m	struct:Parse
copyKey	ext/fts1/ft_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Hash
copyKey	ext/fts1/fts1_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:fts1Hash
copyKey	ext/fts2/fts2_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:fts2Hash
copyKey	ext/fts3/fts3_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash
copyKey	sqlite3.c	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash	file:
copyKey	tsrc/fts1_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:fts1Hash
copyKey	tsrc/fts2_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:fts2Hash
copyKey	tsrc/fts3_hash.h	/^  char copyKey;           \/* True if copy of key made on insert *\/$/;"	m	struct:Fts3Hash
copyNodeContent	sqlite3.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyNodeContent	src/btree.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyNodeContent	tsrc/btree.c	/^static void copyNodeContent(MemPage *pFrom, MemPage *pTo, int *pRC){$/;"	f	file:
copyPayload	sqlite3.c	/^static int copyPayload($/;"	f	file:
copyPayload	src/btree.c	/^static int copyPayload($/;"	f	file:
copyPayload	tsrc/btree.c	/^static int copyPayload($/;"	f	file:
copy_file	ext/fts2/mkfts2amal.tcl	/^proc copy_file {filename} {$/;"	p
copy_file	ext/fts3/mkfts3amal.tcl	/^proc copy_file {filename} {$/;"	p
copy_file	test/tester.tcl	/^proc copy_file {from to} {$/;"	p
copy_file	tool/mksqlite3c-noext.tcl	/^proc copy_file {filename} {$/;"	p
copy_file	tool/mksqlite3c.tcl	/^proc copy_file {filename} {$/;"	p
copy_file	tool/mksqlite3internalh.tcl	/^proc copy_file {filename} {$/;"	p
copy_file	tool/restore_jrnl.tcl	/^proc copy_file {from to} {$/;"	p
copy_stemmer	ext/fts1/fts1_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	ext/fts2/fts2_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	ext/fts3/fts3_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	sqlite3.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	tsrc/fts1_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	tsrc/fts2_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
copy_stemmer	tsrc/fts3_porter.c	/^static void copy_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
corruptSchema	sqlite3.c	/^static void corruptSchema($/;"	f	file:
corruptSchema	src/prepare.c	/^static void corruptSchema($/;"	f	file:
corruptSchema	tsrc/prepare.c	/^static void corruptSchema($/;"	f	file:
costMult	sqlite3.c	/^  LogEst costMult;     \/* Cost multiplier for using this table *\/$/;"	m	struct:Table	file:
costMult	src/sqliteInt.h	/^  LogEst costMult;     \/* Cost multiplier for using this table *\/$/;"	m	struct:Table
costMult	tsrc/sqliteInt.h	/^  LogEst costMult;     \/* Cost multiplier for using this table *\/$/;"	m	struct:Table
count	ext/fts1/ft_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht
count	ext/fts1/ft_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Hash
count	ext/fts1/fts1_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:fts1Hash::_fts1ht
count	ext/fts1/fts1_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:fts1Hash
count	ext/fts2/fts2_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:fts2Hash::_fts2ht
count	ext/fts2/fts2_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:fts2Hash
count	ext/fts3/fts3_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht
count	ext/fts3/fts3_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash
count	sqlite3.c	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht	file:
count	sqlite3.c	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht	file:
count	sqlite3.c	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash	file:
count	sqlite3.c	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash	file:
count	src/hash.h	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht
count	src/hash.h	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash
count	tool/dbhash.c	/^  unsigned int count[2];$/;"	m	struct:SHA1Context	file:
count	tool/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x1	file:
count	tool/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x2	file:
count	tool/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x3	file:
count	tool/lemon.c	/^  int count;              \/* Number of currently slots filled *\/$/;"	m	struct:s_x4	file:
count	tsrc/fts1_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:fts1Hash::_fts1ht
count	tsrc/fts1_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:fts1Hash
count	tsrc/fts2_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:fts2Hash::_fts2ht
count	tsrc/fts2_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:fts2Hash
count	tsrc/fts3_hash.h	/^    int count;               \/* Number of entries with this hash *\/$/;"	m	struct:Fts3Hash::_fts3ht
count	tsrc/fts3_hash.h	/^  int count;              \/* Number of entries in this table *\/$/;"	m	struct:Fts3Hash
count	tsrc/hash.h	/^    int count;                 \/* Number of entries with this hash *\/$/;"	m	struct:Hash::_ht
count	tsrc/hash.h	/^  unsigned int count;       \/* Number of entries in this table *\/$/;"	m	struct:Hash
countChanges	shell.c	/^  int countChanges;      \/* True to display change counts *\/$/;"	m	struct:ShellState	file:
countChanges	src/shell.c	/^  int countChanges;      \/* True to display change counts *\/$/;"	m	struct:ShellState	file:
countChanges	tsrc/shell.c	/^  int countChanges;      \/* True to display change counts *\/$/;"	m	struct:ShellState	file:
countFinalize	sqlite3.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countFinalize	src/func.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countFinalize	tsrc/func.c	/^static void countFinalize(sqlite3_context *context){$/;"	f	file:
countStep	sqlite3.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countStep	src/func.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countStep	tsrc/func.c	/^static void countStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
countValidCursors	sqlite3.c	/^static int countValidCursors(BtShared *pBt, int wrOnly){$/;"	f	file:
countValidCursors	src/btree.c	/^static int countValidCursors(BtShared *pBt, int wrOnly){$/;"	f	file:
countValidCursors	tsrc/btree.c	/^static int countValidCursors(BtShared *pBt, int wrOnly){$/;"	f	file:
count_terms	ext/fts5/tool/showfts5.tcl	/^proc count_terms {tbl arrayname} {$/;"	p
count_tests_and_errors	test/releasetest.tcl	/^proc count_tests_and_errors {logfile rcVar errmsgVar} {$/;"	p
counterFunc	src/test_func.c	/^static void counterFunc($/;"	f	file:
counterMutexAlloc	src/test_mutex.c	/^static sqlite3_mutex *counterMutexAlloc(int eType){$/;"	f	file:
counterMutexEnd	src/test_mutex.c	/^static int counterMutexEnd(void){ $/;"	f	file:
counterMutexEnter	src/test_mutex.c	/^static void counterMutexEnter(sqlite3_mutex *p){$/;"	f	file:
counterMutexFree	src/test_mutex.c	/^static void counterMutexFree(sqlite3_mutex *p){$/;"	f	file:
counterMutexHeld	src/test_mutex.c	/^static int counterMutexHeld(sqlite3_mutex *p){$/;"	f	file:
counterMutexInit	src/test_mutex.c	/^static int counterMutexInit(void){ $/;"	f	file:
counterMutexLeave	src/test_mutex.c	/^static void counterMutexLeave(sqlite3_mutex *p){$/;"	f	file:
counterMutexNotheld	src/test_mutex.c	/^static int counterMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
counterMutexTry	src/test_mutex.c	/^static int counterMutexTry(sqlite3_mutex *p){$/;"	f	file:
covered	ext/fts3/fts3_snippet.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
covered	sqlite3.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
covered	tsrc/fts3_snippet.c	/^  u64 covered;                    \/* Mask of query phrases covered *\/$/;"	m	struct:SnippetFragment	file:
crashAppData	src/test6.c	/^struct crashAppData {$/;"	s	file:
crashEnableCmd	src/test6.c	/^static int SQLITE_TCLAPI crashEnableCmd($/;"	f	file:
crashNowCmd	src/test6.c	/^static int SQLITE_TCLAPI crashNowCmd($/;"	f	file:
crashParamsObjCmd	src/test6.c	/^static int SQLITE_TCLAPI crashParamsObjCmd($/;"	f	file:
crash_free	src/test6.c	/^static void crash_free(void *p){$/;"	f	file:
crash_malloc	src/test6.c	/^static void *crash_malloc(int nByte){$/;"	f	file:
crash_realloc	src/test6.c	/^static void *crash_realloc(void *p, int n){$/;"	f	file:
crashsql	test/tester.tcl	/^proc crashsql {args} {$/;"	p
createAggContext	sqlite3.c	/^static SQLITE_NOINLINE void *createAggContext(sqlite3_context *p, int nByte){$/;"	f	file:
createAggContext	src/vdbeapi.c	/^static SQLITE_NOINLINE void *createAggContext(sqlite3_context *p, int nByte){$/;"	f	file:
createAggContext	tsrc/vdbeapi.c	/^static SQLITE_NOINLINE void *createAggContext(sqlite3_context *p, int nByte){$/;"	f	file:
createCollation	sqlite3.c	/^static int createCollation($/;"	f	file:
createCollation	src/main.c	/^static int createCollation($/;"	f	file:
createCollation	tsrc/main.c	/^static int createCollation($/;"	f	file:
createDoclistResult	ext/fts2/fts2.c	/^static void createDoclistResult(sqlite3_context *pContext,$/;"	f	file:
createDoclistResult	tsrc/fts2.c	/^static void createDoclistResult(sqlite3_context *pContext,$/;"	f	file:
createIncrblobChannel	src/tclsqlite.c	/^static int createIncrblobChannel($/;"	f	file:
createIncrblobChannel	tsrc/tclsqlite.c	/^static int createIncrblobChannel($/;"	f	file:
createMask	sqlite3.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createMask	src/where.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createMask	tsrc/where.c	/^static void createMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f	file:
createModule	sqlite3.c	/^static int createModule($/;"	f	file:
createModule	src/vtab.c	/^static int createModule($/;"	f	file:
createModule	tsrc/vtab.c	/^static int createModule($/;"	f	file:
createTableStmt	sqlite3.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
createTableStmt	src/build.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
createTableStmt	tsrc/build.c	/^static char *createTableStmt(sqlite3 *db, Table *p){$/;"	f	file:
createVFile	test/fuzzcheck.c	/^static VFile *createVFile(const char *zName, int sz, unsigned char *pData){$/;"	f	file:
create_collation	sqlite3.c	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation	sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation	src/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation	tsrc/sqlite3ext.h	/^  int  (*create_collation)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	sqlite3.c	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation16	sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	src/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation16	tsrc/sqlite3ext.h	/^  int  (*create_collation16)(sqlite3*,const void*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	sqlite3.c	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_collation_v2	sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	src/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_collation_v2	tsrc/sqlite3ext.h	/^  int (*create_collation_v2)(sqlite3*,const char*,int,void*,$/;"	m	struct:sqlite3_api_routines
create_drop_index_1	test/tt3_index.c	/^static void create_drop_index_1(int nMs){$/;"	f	file:
create_drop_index_thread	test/tt3_index.c	/^static char *create_drop_index_thread(int iTid, void *pArg){$/;"	f	file:
create_function	sqlite3.c	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function	sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function	src/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function	tsrc/sqlite3ext.h	/^  int  (*create_function)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	sqlite3.c	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function16	sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	src/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function16	tsrc/sqlite3ext.h	/^  int  (*create_function16)(sqlite3*,const void*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	sqlite3.c	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_function_v2	sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	src/sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_function_v2	tsrc/sqlite3ext.h	/^  int (*create_function_v2)(sqlite3*,const char*,int,int,void*,$/;"	m	struct:sqlite3_api_routines
create_module	sqlite3.c	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines	file:
create_module	sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module	src/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module	tsrc/sqlite3ext.h	/^  int (*create_module)(sqlite3*,const char*,const sqlite3_module*,void*);$/;"	m	struct:sqlite3_api_routines
create_module_v2	sqlite3.c	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines	file:
create_module_v2	sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_module_v2	src/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_module_v2	tsrc/sqlite3ext.h	/^  int (*create_module_v2)(sqlite3*,const char*,const sqlite3_module*,void*,$/;"	m	struct:sqlite3_api_routines
create_step_function	ext/fts5/mkportersteps.tcl	/^proc create_step_function {name data} {$/;"	p
create_table	ext/fts5/tool/fts5txt2db.tcl	/^proc create_table {} {$/;"	p
create_table	parse.y	/^create_table ::= createkw temp(T) TABLE ifnotexists(E) nm(Y) dbnm(Z). {$/;"	l
create_table	src/parse.y	/^create_table ::= createkw temp(T) TABLE ifnotexists(E) nm(Y) dbnm(Z). {$/;"	l
create_table_args	parse.y	/^create_table_args ::= AS select(S). {$/;"	l
create_table_args	parse.y	/^create_table_args ::= LP columnlist conslist_opt(X) RP(E) table_options(F). {$/;"	l
create_table_args	src/parse.y	/^create_table_args ::= AS select(S). {$/;"	l
create_table_args	src/parse.y	/^create_table_args ::= LP columnlist conslist_opt(X) RP(E) table_options(F). {$/;"	l
create_vtab	parse.y	/^create_vtab ::= createkw VIRTUAL TABLE ifnotexists(E)$/;"	l
create_vtab	src/parse.y	/^create_vtab ::= createkw VIRTUAL TABLE ifnotexists(E)$/;"	l
csql1	test/lock_common.tcl	/^    proc csql1 {sql} { list [catch { sql1 $sql } msg] $msg }$/;"	p
csql2	test/lock_common.tcl	/^    proc csql2 {sql} { list [catch { sql2 $sql } msg] $msg }$/;"	p
csql3	test/lock_common.tcl	/^    proc csql3 {sql} { list [catch { sql3 $sql } msg] $msg }$/;"	p
csr	ext/fts3/fts3_aux.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csr	ext/fts3/fts3_term.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3termCursor	file:
csr	sqlite3.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csr	tsrc/fts3_aux.c	/^  Fts3MultiSegReader csr;        \/* Must be right after "base" *\/$/;"	m	struct:Fts3auxCursor	file:
csrflags	ext/fts5/fts5_main.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
csrflags	fts5.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
csrflags	sqlite3.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
csrflags	tsrc/fts5.c	/^  int csrflags;                   \/* Mask of cursor flags (see below) *\/$/;"	m	struct:Fts5Cursor	file:
csv_append	ext/misc/csv.c	/^static int csv_append(CsvReader *p, char c){$/;"	f	file:
csv_boolean	ext/misc/csv.c	/^static int csv_boolean(const char *z){$/;"	f	file:
csv_dequote	ext/misc/csv.c	/^static void csv_dequote(char *z){$/;"	f	file:
csv_errmsg	ext/misc/csv.c	/^static void csv_errmsg(CsvReader *p, const char *zFormat, ...){$/;"	f	file:
csv_getc	ext/misc/csv.c	/^static int csv_getc(CsvReader *p){$/;"	f	file:
csv_getc_refill	ext/misc/csv.c	/^static CSV_NOINLINE int csv_getc_refill(CsvReader *p){$/;"	f	file:
csv_parameter	ext/misc/csv.c	/^static const char *csv_parameter(const char *zTag, int nTag, const char *z){$/;"	f	file:
csv_read_one_field	ext/misc/csv.c	/^static char *csv_read_one_field(CsvReader *p){$/;"	f	file:
csv_read_one_field	shell.c	/^static char *SQLITE_CDECL csv_read_one_field(ImportCtx *p){$/;"	f	file:
csv_read_one_field	src/shell.c	/^static char *SQLITE_CDECL csv_read_one_field(ImportCtx *p){$/;"	f	file:
csv_read_one_field	tsrc/shell.c	/^static char *SQLITE_CDECL csv_read_one_field(ImportCtx *p){$/;"	f	file:
csv_reader_init	ext/misc/csv.c	/^static void csv_reader_init(CsvReader *p){$/;"	f	file:
csv_reader_open	ext/misc/csv.c	/^static int csv_reader_open($/;"	f	file:
csv_reader_reset	ext/misc/csv.c	/^static void csv_reader_reset(CsvReader *p){$/;"	f	file:
csv_resize_and_append	ext/misc/csv.c	/^static CSV_NOINLINE int csv_resize_and_append(CsvReader *p, char c){$/;"	f	file:
csv_skip_whitespace	ext/misc/csv.c	/^static const char *csv_skip_whitespace(const char *z){$/;"	f	file:
csv_string_parameter	ext/misc/csv.c	/^static int csv_string_parameter($/;"	f	file:
csv_trim_whitespace	ext/misc/csv.c	/^static void csv_trim_whitespace(char *z){$/;"	f	file:
csv_xfer_error	ext/misc/csv.c	/^static void csv_xfer_error(CsvTable *pTab, CsvReader *pRdr){$/;"	f	file:
csvtabBestIndex	ext/misc/csv.c	/^static int csvtabBestIndex($/;"	f	file:
csvtabClose	ext/misc/csv.c	/^static int csvtabClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
csvtabColumn	ext/misc/csv.c	/^static int csvtabColumn($/;"	f	file:
csvtabConnect	ext/misc/csv.c	/^static int csvtabConnect($/;"	f	file:
csvtabCreate	ext/misc/csv.c	/^static int csvtabCreate($/;"	f	file:
csvtabCursorRowReset	ext/misc/csv.c	/^static void csvtabCursorRowReset(CsvCursor *pCur){$/;"	f	file:
csvtabDisconnect	ext/misc/csv.c	/^static int csvtabDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
csvtabEof	ext/misc/csv.c	/^static int csvtabEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
csvtabFilter	ext/misc/csv.c	/^static int csvtabFilter($/;"	f	file:
csvtabNext	ext/misc/csv.c	/^static int csvtabNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
csvtabOpen	ext/misc/csv.c	/^static int csvtabOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
csvtabRowid	ext/misc/csv.c	/^static int csvtabRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
csvtabUpdate	ext/misc/csv.c	/^static int csvtabUpdate(sqlite3_vtab *p,int n,sqlite3_value**v,sqlite3_int64*x){$/;"	f	file:
ctimeFunc	sqlite3.c	/^static void ctimeFunc($/;"	f	file:
ctimeFunc	src/date.c	/^static void ctimeFunc($/;"	f	file:
ctimeFunc	tsrc/date.c	/^static void ctimeFunc($/;"	f	file:
ctimestampFunc	sqlite3.c	/^static void ctimestampFunc($/;"	f	file:
ctimestampFunc	src/date.c	/^static void ctimestampFunc($/;"	f	file:
ctimestampFunc	tsrc/date.c	/^static void ctimestampFunc($/;"	f	file:
ctrlFlags	sqlite3.c	/^  u8 ctrlFlags;           \/* Flags.  See WINFILE_* below *\/$/;"	m	struct:winFile	file:
ctrlFlags	sqlite3.c	/^  unsigned short int ctrlFlags;       \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
ctrlFlags	src/os_unix.c	/^  unsigned short int ctrlFlags;       \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
ctrlFlags	src/os_win.c	/^  u8 ctrlFlags;           \/* Flags.  See WINFILE_* below *\/$/;"	m	struct:winFile	file:
ctrlFlags	tsrc/os_unix.c	/^  unsigned short int ctrlFlags;       \/* Behavioral bits.  UNIXFILE_* flags *\/$/;"	m	struct:unixFile	file:
ctrlFlags	tsrc/os_win.c	/^  u8 ctrlFlags;           \/* Flags.  See WINFILE_* below *\/$/;"	m	struct:winFile	file:
cubeFunc	src/test_autoext.c	/^static void cubeFunc($/;"	f	file:
cube_context_free	src/test_rtree.c	/^static void cube_context_free(void *p){$/;"	f	file:
cube_geom	src/test_rtree.c	/^static int cube_geom($/;"	f	file:
cube_init	src/test_autoext.c	/^static int cube_init($/;"	f	file:
curFlags	sqlite3.c	/^  u8 curFlags;              \/* zero or more BTCF_* flags defined below *\/$/;"	m	struct:BtCursor	file:
curFlags	src/btreeInt.h	/^  u8 curFlags;              \/* zero or more BTCF_* flags defined below *\/$/;"	m	struct:BtCursor
curFlags	tsrc/btreeInt.h	/^  u8 curFlags;              \/* zero or more BTCF_* flags defined below *\/$/;"	m	struct:BtCursor
curIntKey	sqlite3.c	/^  u8 curIntKey;             \/* Value of apPage[0]->intKey *\/$/;"	m	struct:BtCursor	file:
curIntKey	src/btreeInt.h	/^  u8 curIntKey;             \/* Value of apPage[0]->intKey *\/$/;"	m	struct:BtCursor
curIntKey	tsrc/btreeInt.h	/^  u8 curIntKey;             \/* Value of apPage[0]->intKey *\/$/;"	m	struct:BtCursor
curPagerFlags	sqlite3.c	/^  u8 curPagerFlags;         \/* Flags to send to sqlite3PagerGet() *\/$/;"	m	struct:BtCursor	file:
curPagerFlags	src/btreeInt.h	/^  u8 curPagerFlags;         \/* Flags to send to sqlite3PagerGet() *\/$/;"	m	struct:BtCursor
curPagerFlags	tsrc/btreeInt.h	/^  u8 curPagerFlags;         \/* Flags to send to sqlite3PagerGet() *\/$/;"	m	struct:BtCursor
current	sqlite3.c	/^  Stat4Sample current;      \/* Current row as a Stat4Sample *\/$/;"	m	struct:Stat4Accum	file:
current	src/analyze.c	/^  Stat4Sample current;      \/* Current row as a Stat4Sample *\/$/;"	m	struct:Stat4Accum	file:
current	tool/lemon.c	/^static struct config *current = 0;       \/* Top of list of configurations *\/$/;"	v	typeref:struct:config	file:
current	tsrc/analyze.c	/^  Stat4Sample current;      \/* Current row as a Stat4Sample *\/$/;"	m	struct:Stat4Accum	file:
currentCount	sqlite3.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentCount	src/mem5.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentCount	tsrc/mem5.c	/^  u32 currentCount;   \/* Current number of distinct checkouts *\/$/;"	m	struct:Mem5Global	file:
currentOut	sqlite3.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentOut	src/mem5.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentOut	tsrc/mem5.c	/^  u32 currentOut;     \/* Current checkout, including internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
currentTime	test/threadtest3.c	/^static double currentTime(void){$/;"	f	file:
currentTimeFunc	sqlite3.c	/^static void currentTimeFunc($/;"	f	file:
currentTimeFunc	src/date.c	/^static void currentTimeFunc($/;"	f	file:
currentTimeFunc	tsrc/date.c	/^static void currentTimeFunc($/;"	f	file:
currentend	tool/lemon.c	/^static struct config **currentend = 0;   \/* Last on list of configs *\/$/;"	v	typeref:struct:config	file:
cursorHoldsMutex	sqlite3.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorHoldsMutex	src/btree.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorHoldsMutex	tsrc/btree.c	/^static int cursorHoldsMutex(BtCursor *p){$/;"	f	file:
cursorOwnsBtShared	sqlite3.c	/^static int cursorOwnsBtShared(BtCursor *p){$/;"	f	file:
cursorOwnsBtShared	src/btree.c	/^static int cursorOwnsBtShared(BtCursor *p){$/;"	f	file:
cursorOwnsBtShared	tsrc/btree.c	/^static int cursorOwnsBtShared(BtCursor *p){$/;"	f	file:
cursor_info	tool/fragck.tcl	/^proc cursor_info {arrayvar csr {up 0}} {$/;"	p
cursor_vtab	ext/fts1/fts1.c	/^static struct fulltext_vtab *cursor_vtab(fulltext_cursor *c){$/;"	f	file:
cursor_vtab	ext/fts1/fulltext.c	/^static struct fulltext_vtab *cursor_vtab(fulltext_cursor *c){$/;"	f	file:
cursor_vtab	ext/fts2/fts2.c	/^static struct fulltext_vtab *cursor_vtab(fulltext_cursor *c){$/;"	f	file:
cursor_vtab	tsrc/fts1.c	/^static struct fulltext_vtab *cursor_vtab(fulltext_cursor *c){$/;"	f	file:
cursor_vtab	tsrc/fts2.c	/^static struct fulltext_vtab *cursor_vtab(fulltext_cursor *c){$/;"	f	file:
custom_errno	src/test_syscall.c	/^  int custom_errno;               \/* Current value for errno if error *\/$/;"	m	struct:TestSyscallArray	file:
cx	tool/dbhash.c	/^  SHA1Context cx;           \/* SHA1 hash context *\/$/;"	m	struct:GlobalVars	file:
cycles	sqlite3.c	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp	file:
cycles	src/vdbe.h	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp
cycles	tsrc/vdbe.h	/^  u64 cycles;              \/* Total time spent executing this instruction *\/$/;"	m	struct:VdbeOp
d	tool/dbhash.c	115;"	d	file:
d_attributes	src/test_windirent.h	/^  unsigned d_attributes;     \/* Win32 file attributes. *\/$/;"	m	struct:DIRENT
d_first	src/test_windirent.h	/^  DIRENT d_first;    \/* DIRENT constructed based on "_findfirst". *\/$/;"	m	struct:DIR
d_handle	src/test_windirent.h	/^  intptr_t d_handle; \/* Value returned by "_findfirst". *\/$/;"	m	struct:DIR
d_ino	src/test_windirent.h	/^  ino_t d_ino;               \/* Sequence number, do not use. *\/$/;"	m	struct:DIRENT
d_name	src/test_windirent.h	/^  char d_name[NAME_MAX + 1]; \/* Name within the directory. *\/$/;"	m	struct:DIRENT
d_next	src/test_windirent.h	/^  DIRENT d_next;     \/* DIRENT constructed based on "_findnext". *\/$/;"	m	struct:DIR
data	ext/fts1/ft_hash.h	/^  void *data;              \/* Data associated with this element *\/$/;"	m	struct:HashElem
data	ext/fts1/fts1_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:fts1HashElem
data	ext/fts2/fts2.c	/^  DataBuffer data;                \/* encoding buffer *\/$/;"	m	struct:LeafWriter	file:
data	ext/fts2/fts2.c	/^  DataBuffer data;           \/* Accumulated data for the block. *\/$/;"	m	struct:InteriorBlock	file:
data	ext/fts2/fts2_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:fts2HashElem
data	ext/fts3/fts3_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem
data	sqlite3.c	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem	file:
data	sqlite3.c	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
data	src/hash.h	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem
data	tool/lemon.c	/^  const char *data;        \/* The data *\/$/;"	m	struct:s_x1node	file:
data	tool/lemon.c	/^  struct config *data;                  \/* The data *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::config	file:
data	tool/lemon.c	/^  struct state *data;                  \/* The data *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::state	file:
data	tool/lemon.c	/^  struct symbol *data;     \/* The data *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::symbol	file:
data	tsrc/fts1_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:fts1HashElem
data	tsrc/fts2.c	/^  DataBuffer data;                \/* encoding buffer *\/$/;"	m	struct:LeafWriter	file:
data	tsrc/fts2.c	/^  DataBuffer data;           \/* Accumulated data for the block. *\/$/;"	m	struct:InteriorBlock	file:
data	tsrc/fts2_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:fts2HashElem
data	tsrc/fts3_hash.h	/^  void *data;                \/* Data associated with this element *\/$/;"	m	struct:Fts3HashElem
data	tsrc/hash.h	/^  void *data;                  \/* Data associated with this element *\/$/;"	m	struct:HashElem
dataBufferAppend	ext/fts2/fts2.c	/^static void dataBufferAppend(DataBuffer *pBuffer,$/;"	f	file:
dataBufferAppend	tsrc/fts2.c	/^static void dataBufferAppend(DataBuffer *pBuffer,$/;"	f	file:
dataBufferAppend2	ext/fts2/fts2.c	/^static void dataBufferAppend2(DataBuffer *pBuffer,$/;"	f	file:
dataBufferAppend2	tsrc/fts2.c	/^static void dataBufferAppend2(DataBuffer *pBuffer,$/;"	f	file:
dataBufferDestroy	ext/fts2/fts2.c	/^static void dataBufferDestroy(DataBuffer *pBuffer){$/;"	f	file:
dataBufferDestroy	tsrc/fts2.c	/^static void dataBufferDestroy(DataBuffer *pBuffer){$/;"	f	file:
dataBufferExpand	ext/fts2/fts2.c	/^static void dataBufferExpand(DataBuffer *pBuffer, int nAddCapacity){$/;"	f	file:
dataBufferExpand	tsrc/fts2.c	/^static void dataBufferExpand(DataBuffer *pBuffer, int nAddCapacity){$/;"	f	file:
dataBufferInit	ext/fts2/fts2.c	/^static void dataBufferInit(DataBuffer *pBuffer, int nCapacity){$/;"	f	file:
dataBufferInit	tsrc/fts2.c	/^static void dataBufferInit(DataBuffer *pBuffer, int nCapacity){$/;"	f	file:
dataBufferReplace	ext/fts2/fts2.c	/^static void dataBufferReplace(DataBuffer *pBuffer,$/;"	f	file:
dataBufferReplace	tsrc/fts2.c	/^static void dataBufferReplace(DataBuffer *pBuffer,$/;"	f	file:
dataBufferReset	ext/fts2/fts2.c	/^static void dataBufferReset(DataBuffer *pBuffer){$/;"	f	file:
dataBufferReset	tsrc/fts2.c	/^static void dataBufferReset(DataBuffer *pBuffer){$/;"	f	file:
dataBufferSwap	ext/fts2/fts2.c	/^static void dataBufferSwap(DataBuffer *pBuffer1, DataBuffer *pBuffer2){$/;"	f	file:
dataBufferSwap	tsrc/fts2.c	/^static void dataBufferSwap(DataBuffer *pBuffer1, DataBuffer *pBuffer2){$/;"	f	file:
data_count	sqlite3.c	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
data_count	sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
data_count	src/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
data_count	tsrc/sqlite3ext.h	/^  int  (*data_count)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
databaseIsUnmoved	sqlite3.c	/^static int databaseIsUnmoved(Pager *pPager){$/;"	f	file:
databaseIsUnmoved	src/pager.c	/^static int databaseIsUnmoved(Pager *pPager){$/;"	f	file:
databaseIsUnmoved	tsrc/pager.c	/^static int databaseIsUnmoved(Pager *pPager){$/;"	f	file:
database_kw_opt	parse.y	/^database_kw_opt ::= .$/;"	l
database_kw_opt	parse.y	/^database_kw_opt ::= DATABASE.$/;"	l
database_kw_opt	src/parse.y	/^database_kw_opt ::= .$/;"	l
database_kw_opt	src/parse.y	/^database_kw_opt ::= DATABASE.$/;"	l
database_may_be_corrupt	src/test1.c	/^static int SQLITE_TCLAPI database_may_be_corrupt($/;"	f	file:
database_never_corrupt	src/test1.c	/^static int SQLITE_TCLAPI database_never_corrupt($/;"	f	file:
datatype	tool/lemon.c	/^  char *datatype;          \/* The data type of information held by this$/;"	m	struct:symbol	file:
dateFunc	sqlite3.c	/^static void dateFunc($/;"	f	file:
dateFunc	src/date.c	/^static void dateFunc($/;"	f	file:
dateFunc	tsrc/date.c	/^static void dateFunc($/;"	f	file:
datetimeFunc	sqlite3.c	/^static void datetimeFunc($/;"	f	file:
datetimeFunc	src/date.c	/^static void datetimeFunc($/;"	f	file:
datetimeFunc	tsrc/date.c	/^static void datetimeFunc($/;"	f	file:
db	ext/fts1/fts1.c	/^  sqlite3 *db;                     \/* The database connection *\/$/;"	m	struct:fulltext_vtab	file:
db	ext/fts1/fulltext.c	/^  sqlite3 *db;$/;"	m	struct:fulltext_vtab	file:
db	ext/fts2/fts2.c	/^  sqlite3 *db;                     \/* The database connection *\/$/;"	m	struct:fulltext_vtab	file:
db	ext/fts3/fts3Int.h	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table
db	ext/fts5/fts5Int.h	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config
db	ext/fts5/fts5_main.c	/^  sqlite3 *db;                    \/* Associated database connection *\/ $/;"	m	struct:Fts5Global	file:
db	ext/fts5/fts5_tcl.c	/^  sqlite3 *db;$/;"	m	struct:SqliteDb	file:
db	ext/fts5/fts5_vocab.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	ext/misc/amatch.c	/^  sqlite3 *db;               \/* The database connection *\/$/;"	m	struct:amatch_vtab	file:
db	ext/misc/closure.c	/^  sqlite3 *db;               \/* The database connection *\/$/;"	m	struct:closure_vtab	file:
db	ext/misc/nextchar.c	/^  sqlite3 *db;                      \/* Database connection *\/$/;"	m	struct:nextCharContext	file:
db	ext/misc/spellfix.c	/^  sqlite3 *db;               \/* Database connection *\/$/;"	m	struct:spellfix1_vtab	file:
db	ext/misc/vtshim.c	/^  sqlite3 *db;                  \/* The database to which we are attached *\/$/;"	m	struct:vtshim_aux	file:
db	ext/rtree/rtree.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	ext/session/sqlite3session.c	/^  sqlite3 *db;                    \/* Database handle session is attached to *\/$/;"	m	struct:sqlite3_session	file:
db	ext/session/sqlite3session.c	/^  sqlite3 *db;$/;"	m	struct:SessionApplyCtx	file:
db	fts5.c	/^  sqlite3 *db;                    \/* Associated database connection *\/ $/;"	m	struct:Fts5Global	file:
db	fts5.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config	file:
db	fts5.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	mptest/mptest.c	/^  sqlite3 *db;           \/* Open connection to database *\/$/;"	m	struct:Global	file:
db	shell.c	/^  sqlite3 *db;           \/* The database *\/$/;"	m	struct:ShellState	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* Associated database connection *\/ $/;"	m	struct:Fts5Global	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* Database connection *\/$/;"	m	struct:VdbeSorter	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* Database handle session is attached to *\/$/;"	m	struct:sqlite3_session	file:
db	sqlite3.c	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table	file:
db	sqlite3.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	sqlite3.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	sqlite3.c	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable	file:
db	sqlite3.c	/^  sqlite3 *db;              \/* Database connection, for malloc() *\/$/;"	m	struct:Stat4Accum	file:
db	sqlite3.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	sqlite3.c	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe	file:
db	sqlite3.c	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared	file:
db	sqlite3.c	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum	file:
db	sqlite3.c	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse	file:
db	sqlite3.c	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem	file:
db	sqlite3.c	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon86	file:
db	sqlite3.c	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo	file:
db	sqlite3.c	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree	file:
db	sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:SessionApplyCtx	file:
db	sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:StatTable	file:
db	sqlite3.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
db	src/analyze.c	/^  sqlite3 *db;              \/* Database connection, for malloc() *\/$/;"	m	struct:Stat4Accum	file:
db	src/analyze.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
db	src/btreeInt.h	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared
db	src/btreeInt.h	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree
db	src/dbstat.c	/^  sqlite3 *db;$/;"	m	struct:StatTable	file:
db	src/rowset.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	src/shell.c	/^  sqlite3 *db;           \/* The database *\/$/;"	m	struct:ShellState	file:
db	src/sqliteInt.h	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable
db	src/sqliteInt.h	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum
db	src/sqliteInt.h	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse
db	src/sqliteInt.h	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon60
db	src/sqliteInt.h	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo
db	src/tclsqlite.c	/^  sqlite3 *db;               \/* The "real" database structure. MUST BE FIRST *\/$/;"	m	struct:SqliteDb	file:
db	src/test1.c	/^  sqlite3 *db;$/;"	m	struct:SqliteDb	file:
db	src/test4.c	/^  sqlite3 *db;           \/* Open database *\/$/;"	m	struct:Thread	file:
db	src/test7.c	/^  sqlite3 *db;             \/* Open database *\/$/;"	m	struct:Thread	file:
db	src/test8.c	/^  sqlite3 *db;            \/* Database connection *\/$/;"	m	struct:echo_vtab	file:
db	src/test_bestindex.c	/^  sqlite3 *db;$/;"	m	struct:tcl_vtab	file:
db	src/test_fs.c	/^  sqlite3 *db;$/;"	m	struct:FstreeVtab	file:
db	src/test_fs.c	/^  sqlite3 *db;$/;"	m	struct:fs_vtab	file:
db	src/test_schema.c	/^  sqlite3 *db;$/;"	m	struct:schema_vtab	file:
db	src/test_sqllog.c	/^  sqlite3 *db;                    \/* Connection handle *\/$/;"	m	struct:SLConn	file:
db	src/test_superlock.c	/^  sqlite3 *db;                    \/* Database handle used to lock db *\/$/;"	m	struct:Superlock	file:
db	src/vdbeInt.h	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe
db	src/vdbeInt.h	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem
db	src/vdbeblob.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	src/vdbesort.c	/^  sqlite3 *db;                    \/* Database connection *\/$/;"	m	struct:VdbeSorter	file:
db	test/speedtest1.c	/^  sqlite3 *db;               \/* The open database connection *\/$/;"	m	struct:Global	file:
db	test/threadtest3.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Sqlite	file:
db	test/threadtest4.c	/^  sqlite3 *db;                \/* Database connection of this thread *\/$/;"	m	struct:WorkerInfo	file:
db	tool/dbhash.c	/^  sqlite3 *db;              \/* The database connection *\/$/;"	m	struct:GlobalVars	file:
db	tool/loadfts.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:VisitContext	file:
db	tool/showjournal.c	/^static FILE *db = 0;$/;"	v	file:
db	tool/sqldiff.c	/^  sqlite3 *db;              \/* The database connection *\/$/;"	m	struct:GlobalVars	file:
db	tsrc/analyze.c	/^  sqlite3 *db;              \/* Database connection, for malloc() *\/$/;"	m	struct:Stat4Accum	file:
db	tsrc/analyze.c	/^  sqlite3 *db;$/;"	m	struct:analysisInfo	file:
db	tsrc/btreeInt.h	/^  sqlite3 *db;          \/* Database connection currently using this Btree *\/$/;"	m	struct:BtShared
db	tsrc/btreeInt.h	/^  sqlite3 *db;       \/* The database connection holding this btree *\/$/;"	m	struct:Btree
db	tsrc/dbstat.c	/^  sqlite3 *db;$/;"	m	struct:StatTable	file:
db	tsrc/fts1.c	/^  sqlite3 *db;                     \/* The database connection *\/$/;"	m	struct:fulltext_vtab	file:
db	tsrc/fts2.c	/^  sqlite3 *db;                     \/* The database connection *\/$/;"	m	struct:fulltext_vtab	file:
db	tsrc/fts3Int.h	/^  sqlite3 *db;                    \/* The database connection *\/$/;"	m	struct:Fts3Table
db	tsrc/fts5.c	/^  sqlite3 *db;                    \/* Associated database connection *\/ $/;"	m	struct:Fts5Global	file:
db	tsrc/fts5.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5Config	file:
db	tsrc/fts5.c	/^  sqlite3 *db;                    \/* Database handle *\/$/;"	m	struct:Fts5VocabTable	file:
db	tsrc/rowset.c	/^  sqlite3 *db;                   \/* The database connection *\/$/;"	m	struct:RowSet	file:
db	tsrc/rtree.c	/^  sqlite3 *db;                \/* Host database connection *\/$/;"	m	struct:Rtree	file:
db	tsrc/shell.c	/^  sqlite3 *db;           \/* The database *\/$/;"	m	struct:ShellState	file:
db	tsrc/sqlite3session.c	/^  sqlite3 *db;                    \/* Database handle session is attached to *\/$/;"	m	struct:sqlite3_session	file:
db	tsrc/sqlite3session.c	/^  sqlite3 *db;$/;"	m	struct:SessionApplyCtx	file:
db	tsrc/sqliteInt.h	/^  sqlite3 *db;              \/* Database connection associated with this table *\/$/;"	m	struct:VTable
db	tsrc/sqliteInt.h	/^  sqlite3 *db;         \/* Optional database for lookaside.  Can be NULL *\/$/;"	m	struct:StrAccum
db	tsrc/sqliteInt.h	/^  sqlite3 *db;         \/* The main database structure *\/$/;"	m	struct:Parse
db	tsrc/sqliteInt.h	/^  sqlite3 *db;        \/* The database being initialized *\/$/;"	m	struct:__anon28
db	tsrc/sqliteInt.h	/^  sqlite3 *db;        \/* The database connection *\/$/;"	m	struct:KeyInfo
db	tsrc/tclsqlite.c	/^  sqlite3 *db;               \/* The "real" database structure. MUST BE FIRST *\/$/;"	m	struct:SqliteDb	file:
db	tsrc/vdbeInt.h	/^  sqlite3 *db;            \/* The database connection that owns this statement *\/$/;"	m	struct:Vdbe
db	tsrc/vdbeInt.h	/^  sqlite3 *db;        \/* The associated database connection *\/$/;"	m	struct:Mem
db	tsrc/vdbeblob.c	/^  sqlite3 *db;            \/* The associated database *\/$/;"	m	struct:Incrblob	file:
db	tsrc/vdbesort.c	/^  sqlite3 *db;                    \/* Database connection *\/$/;"	m	struct:VdbeSorter	file:
dbDest	ext/misc/scrub.c	/^  sqlite3 *dbDest;         \/* Destination database connection *\/$/;"	m	struct:ScrubState	file:
dbEvalColumnValue	src/tclsqlite.c	/^static Tcl_Obj *dbEvalColumnValue(DbEvalContext *p, int iCol){$/;"	f	file:
dbEvalColumnValue	tsrc/tclsqlite.c	/^static Tcl_Obj *dbEvalColumnValue(DbEvalContext *p, int iCol){$/;"	f	file:
dbEvalFinalize	src/tclsqlite.c	/^static void dbEvalFinalize(DbEvalContext *p){$/;"	f	file:
dbEvalFinalize	tsrc/tclsqlite.c	/^static void dbEvalFinalize(DbEvalContext *p){$/;"	f	file:
dbEvalInit	src/tclsqlite.c	/^static void dbEvalInit($/;"	f	file:
dbEvalInit	tsrc/tclsqlite.c	/^static void dbEvalInit($/;"	f	file:
dbEvalRowInfo	src/tclsqlite.c	/^static void dbEvalRowInfo($/;"	f	file:
dbEvalRowInfo	tsrc/tclsqlite.c	/^static void dbEvalRowInfo($/;"	f	file:
dbEvalStep	src/tclsqlite.c	/^static int dbEvalStep(DbEvalContext *p){$/;"	f	file:
dbEvalStep	tsrc/tclsqlite.c	/^static int dbEvalStep(DbEvalContext *p){$/;"	f	file:
dbFileSize	sqlite3.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileSize	src/pager.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileSize	tsrc/pager.c	/^  Pgno dbFileSize;            \/* Number of pages in the database file *\/$/;"	m	struct:Pager	file:
dbFileVers	sqlite3.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbFileVers	src/pager.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbFileVers	tsrc/pager.c	/^  char dbFileVers[16];        \/* Changes whenever database file changes *\/$/;"	m	struct:Pager	file:
dbFreeStmt	src/tclsqlite.c	/^static void dbFreeStmt(SqlPreparedStmt *pStmt){$/;"	f	file:
dbFreeStmt	tsrc/tclsqlite.c	/^static void dbFreeStmt(SqlPreparedStmt *pStmt){$/;"	f	file:
dbHintSize	sqlite3.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbHintSize	src/pager.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbHintSize	tsrc/pager.c	/^  Pgno dbHintSize;            \/* Value passed to FCNTL_SIZE_HINT call *\/$/;"	m	struct:Pager	file:
dbMain	ext/rbu/sqlite3rbu.c	/^  sqlite3 *dbMain;                \/* target database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbMain	sqlite3.c	/^  sqlite3 *dbMain;                \/* target database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbMain	tsrc/sqlite3rbu.c	/^  sqlite3 *dbMain;                \/* target database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbMallocRawFinish	sqlite3.c	/^static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n){$/;"	f	file:
dbMallocRawFinish	src/malloc.c	/^static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n){$/;"	f	file:
dbMallocRawFinish	tsrc/malloc.c	/^static SQLITE_NOINLINE void *dbMallocRawFinish(sqlite3 *db, u64 n){$/;"	f	file:
dbOptFlags	sqlite3.c	/^  u16 dbOptFlags;               \/* Flags to enable\/disable optimizations *\/$/;"	m	struct:sqlite3	file:
dbOptFlags	src/sqliteInt.h	/^  u16 dbOptFlags;               \/* Flags to enable\/disable optimizations *\/$/;"	m	struct:sqlite3
dbOptFlags	tsrc/sqliteInt.h	/^  u16 dbOptFlags;               \/* Flags to enable\/disable optimizations *\/$/;"	m	struct:sqlite3
dbOrigSize	sqlite3.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbOrigSize	src/pager.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbOrigSize	tsrc/pager.c	/^  Pgno dbOrigSize;            \/* dbSize before the current transaction *\/$/;"	m	struct:Pager	file:
dbPath	sqlite3.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	sqlite3.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbPath	src/os_unix.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	src/os_unix.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbPath	tsrc/os_unix.c	/^  char *dbPath;                \/* Name of the open file *\/$/;"	m	struct:proxyLockingContext	file:
dbPath	tsrc/os_unix.c	/^  const char *dbPath;             \/* Name of the open file *\/$/;"	m	struct:afpLockingContext	file:
dbPrepare	src/tclsqlite.c	/^static int dbPrepare($/;"	f	file:
dbPrepare	tsrc/tclsqlite.c	/^static int dbPrepare($/;"	f	file:
dbPrepareAndBind	src/tclsqlite.c	/^static int dbPrepareAndBind($/;"	f	file:
dbPrepareAndBind	tsrc/tclsqlite.c	/^static int dbPrepareAndBind($/;"	f	file:
dbRbu	ext/rbu/sqlite3rbu.c	/^  sqlite3 *dbRbu;                 \/* rbu database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbRbu	sqlite3.c	/^  sqlite3 *dbRbu;                 \/* rbu database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbRbu	tsrc/sqlite3rbu.c	/^  sqlite3 *dbRbu;                 \/* rbu database handle *\/$/;"	m	struct:sqlite3rbu	file:
dbReallocFinish	sqlite3.c	/^static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n){$/;"	f	file:
dbReallocFinish	src/malloc.c	/^static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n){$/;"	f	file:
dbReallocFinish	tsrc/malloc.c	/^static SQLITE_NOINLINE void *dbReallocFinish(sqlite3 *db, void *p, u64 n){$/;"	f	file:
dbReleaseColumnNames	src/tclsqlite.c	/^static void dbReleaseColumnNames(DbEvalContext *p){$/;"	f	file:
dbReleaseColumnNames	tsrc/tclsqlite.c	/^static void dbReleaseColumnNames(DbEvalContext *p){$/;"	f	file:
dbReleaseStmt	src/tclsqlite.c	/^static void dbReleaseStmt($/;"	f	file:
dbReleaseStmt	tsrc/tclsqlite.c	/^static void dbReleaseStmt($/;"	f	file:
dbSize	sqlite3.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbSize	src/pager.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbSize	tsrc/pager.c	/^  Pgno dbSize;                \/* Number of pages in the database *\/$/;"	m	struct:Pager	file:
dbSrc	ext/misc/scrub.c	/^  sqlite3 *dbSrc;          \/* Source database connection *\/$/;"	m	struct:ScrubState	file:
dbUpdate	sqlite3.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
dbUpdate	src/os_unix.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
dbUpdate	tsrc/os_unix.c	/^  unsigned char dbUpdate;        \/* True if any part of database file changed *\/$/;"	m	struct:unixFile	file:
db_cacheflush	sqlite3.c	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_cacheflush	sqlite3ext.h	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_cacheflush	src/sqlite3ext.h	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_cacheflush	tsrc/sqlite3ext.h	/^  int (*db_cacheflush)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_check	test/threadtest1.c	/^void db_check(const char *zFile, const char *zMsg, char **az, ...){$/;"	f
db_config	sqlite3.c	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines	file:
db_config	sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_config	src/sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_config	tsrc/sqlite3ext.h	/^  int (*db_config)(sqlite3*,int,...);$/;"	m	struct:sqlite3_api_routines
db_delete_and_reopen	test/tester.tcl	/^proc db_delete_and_reopen {{file test.db}} {$/;"	p
db_enter	src/test1.c	/^static int SQLITE_TCLAPI db_enter($/;"	f	file:
db_execute	test/threadtest1.c	/^void db_execute(sqlite *db, const char *zFile, const char *zFormat, ...){$/;"	f
db_filename	sqlite3.c	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_filename	sqlite3ext.h	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_filename	src/sqlite3ext.h	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_filename	tsrc/sqlite3ext.h	/^  const char *(*db_filename)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_handle	sqlite3.c	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
db_handle	sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_handle	src/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_handle	tsrc/sqlite3ext.h	/^  sqlite3 * (*db_handle)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
db_int	shell.c	/^static int db_int(ShellState *p, const char *zSql){$/;"	f	file:
db_int	src/shell.c	/^static int db_int(ShellState *p, const char *zSql){$/;"	f	file:
db_int	tsrc/shell.c	/^static int db_int(ShellState *p, const char *zSql){$/;"	f	file:
db_is_locked	test/threadtest1.c	/^static int db_is_locked(void *NotUsed, int iCount){$/;"	f	file:
db_last_stmt_ptr	src/tclsqlite.c	/^static int SQLITE_TCLAPI db_last_stmt_ptr($/;"	f	file:
db_last_stmt_ptr	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI db_last_stmt_ptr($/;"	f	file:
db_leave	src/test1.c	/^static int SQLITE_TCLAPI db_leave($/;"	f	file:
db_mutex	sqlite3.c	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_mutex	sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_mutex	src/sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_mutex	tsrc/sqlite3ext.h	/^  sqlite3_mutex *(*db_mutex)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_prepare	tool/dbhash.c	/^static sqlite3_stmt *db_prepare(const char *zFormat, ...){$/;"	f	file:
db_prepare	tool/sqldiff.c	/^static sqlite3_stmt *db_prepare(const char *zFormat, ...){$/;"	f	file:
db_query	test/threadtest1.c	/^char **db_query(sqlite *db, const char *zFile, const char *zFormat, ...){$/;"	f
db_query_callback	test/threadtest1.c	/^static int db_query_callback($/;"	f	file:
db_query_free	test/threadtest1.c	/^void db_query_free(char **az){$/;"	f
db_readonly	sqlite3.c	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
db_readonly	sqlite3ext.h	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_readonly	src/sqlite3ext.h	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_readonly	tsrc/sqlite3ext.h	/^  int (*db_readonly)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
db_release_memory	sqlite3.c	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
db_release_memory	sqlite3ext.h	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_release_memory	src/sqlite3ext.h	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_release_memory	tsrc/sqlite3ext.h	/^  int (*db_release_memory)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
db_restore	test/tester.tcl	/^proc db_restore {} {$/;"	p
db_restore_and_reopen	test/tester.tcl	/^proc db_restore_and_reopen {{dbfile test.db}} {$/;"	p
db_save	test/tester.tcl	/^proc db_save {} {$/;"	p
db_save_and_close	test/tester.tcl	/^proc db_save_and_close {} {$/;"	p
db_status	sqlite3.c	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
db_status	sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
db_status	src/sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
db_status	tsrc/sqlite3ext.h	/^  int (*db_status)(sqlite3*,int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
db_use_legacy_prepare_cmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI db_use_legacy_prepare_cmd($/;"	f	file:
db_use_legacy_prepare_cmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI db_use_legacy_prepare_cmd($/;"	f	file:
db_vprepare	tool/dbhash.c	/^static sqlite3_stmt *db_vprepare(const char *zFormat, va_list ap){$/;"	f	file:
db_vprepare	tool/sqldiff.c	/^static sqlite3_stmt *db_vprepare(const char *zFormat, va_list ap){$/;"	f	file:
dbcksum	test/tester.tcl	/^proc dbcksum {db dbname} {$/;"	p
dbfd	tool/showdb.c	/^  int dbfd;                       \/* File descriptor for reading the DB *\/$/;"	m	struct:GlobalData	file:
debugMutexAlloc	sqlite3.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexAlloc	src/mutex_noop.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexAlloc	tsrc/mutex_noop.c	/^static sqlite3_mutex *debugMutexAlloc(int id){$/;"	f	file:
debugMutexEnd	sqlite3.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnd	src/mutex_noop.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnd	tsrc/mutex_noop.c	/^static int debugMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexEnter	sqlite3.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexEnter	src/mutex_noop.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexEnter	tsrc/mutex_noop.c	/^static void debugMutexEnter(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	sqlite3.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	src/mutex_noop.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexFree	tsrc/mutex_noop.c	/^static void debugMutexFree(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	sqlite3.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	src/mutex_noop.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexHeld	tsrc/mutex_noop.c	/^static int debugMutexHeld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexInit	sqlite3.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexInit	src/mutex_noop.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexInit	tsrc/mutex_noop.c	/^static int debugMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
debugMutexLeave	sqlite3.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexLeave	src/mutex_noop.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexLeave	tsrc/mutex_noop.c	/^static void debugMutexLeave(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	sqlite3.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	src/mutex_noop.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexNotheld	tsrc/mutex_noop.c	/^static int debugMutexNotheld(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	sqlite3.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	src/mutex_noop.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
debugMutexTry	tsrc/mutex_noop.c	/^static int debugMutexTry(sqlite3_mutex *pX){$/;"	f	file:
declareVtab	sqlite3.c	/^  u8 declareVtab;           \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse	file:
declareVtab	src/sqliteInt.h	/^  u8 declareVtab;           \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse
declareVtab	tsrc/sqliteInt.h	/^  u8 declareVtab;           \/* True if inside sqlite3_declare_vtab() *\/$/;"	m	struct:Parse
declare_vtab	sqlite3.c	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
declare_vtab	sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
declare_vtab	src/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
declare_vtab	src/test8.c	/^static int SQLITE_TCLAPI declare_vtab($/;"	f	file:
declare_vtab	tsrc/sqlite3ext.h	/^  int (*declare_vtab)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
declargslot	tool/lemon.c	/^  char **declargslot;        \/* Where the declaration argument should be put *\/$/;"	m	struct:pstate	file:
declassoc	tool/lemon.c	/^  enum e_assoc declassoc;    \/* Assign this association to decl arguments *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_assoc	file:
declkeyword	tool/lemon.c	/^  const char *declkeyword;   \/* Keyword of a declaration *\/$/;"	m	struct:pstate	file:
decllinenoslot	tool/lemon.c	/^  int *decllinenoslot;       \/* Where to write declaration line number *\/$/;"	m	struct:pstate	file:
decodeCell	tool/showdb.c	/^static void decodeCell($/;"	f	file:
decodeDoclist	ext/fts3/tool/fts3view.c	/^static void decodeDoclist($/;"	f	file:
decodeFlags	sqlite3.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeFlags	src/btree.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeFlags	tsrc/btree.c	/^static int decodeFlags(MemPage *pPage, int flagByte){$/;"	f	file:
decodeInt32	tool/showdb.c	/^static unsigned int decodeInt32(const unsigned char *z){$/;"	f	file:
decodeIntArray	sqlite3.c	/^static void decodeIntArray($/;"	f	file:
decodeIntArray	src/analyze.c	/^static void decodeIntArray($/;"	f	file:
decodeIntArray	tsrc/analyze.c	/^static void decodeIntArray($/;"	f	file:
decodeJournalHdr	src/test_journal.c	/^static int decodeJournalHdr($/;"	f	file:
decodeSegment	ext/fts3/tool/fts3view.c	/^static void decodeSegment($/;"	f	file:
decodeUint32	src/test_journal.c	/^static u32 decodeUint32(const unsigned char *z){$/;"	f	file:
decodeVarint	tool/showdb.c	/^static int decodeVarint(const unsigned char *z, i64 *pVal){$/;"	f	file:
decodeVarint	tool/showstat4.c	/^static int decodeVarint(const unsigned char *z, i64 *pVal){$/;"	f	file:
decodeVarint	tool/showwal.c	/^static int decodeVarint(const unsigned char *z, i64 *pVal){$/;"	f	file:
decode_btree_page	tool/showdb.c	/^static void decode_btree_page($/;"	f	file:
decode_btree_page	tool/showwal.c	/^static void decode_btree_page($/;"	f	file:
decode_journal_header	tool/showjournal.c	/^static unsigned decode_journal_header(int iOfst){$/;"	f	file:
decode_trunk_page	tool/showdb.c	/^static void decode_trunk_page($/;"	f	file:
default_errno	src/test_syscall.c	/^  int default_errno;              \/* Default value for errno following errors *\/$/;"	m	struct:TestSyscallArray	file:
default_rc	sqlite3.c	/^  i8 default_rc;      \/* Comparison result if keys are equal *\/$/;"	m	struct:UnpackedRecord	file:
default_rc	src/sqliteInt.h	/^  i8 default_rc;      \/* Comparison result if keys are equal *\/$/;"	m	struct:UnpackedRecord
default_rc	tsrc/sqliteInt.h	/^  i8 default_rc;      \/* Comparison result if keys are equal *\/$/;"	m	struct:UnpackedRecord
deferredMoveto	sqlite3.c	/^  u8 deferredMoveto;    \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor	file:
deferredMoveto	src/vdbeInt.h	/^  u8 deferredMoveto;    \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor
deferredMoveto	tsrc/vdbeInt.h	/^  u8 deferredMoveto;    \/* A call to sqlite3BtreeMoveto() is needed *\/$/;"	m	struct:VdbeCursor
defragmentPage	sqlite3.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
defragmentPage	src/btree.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
defragmentPage	tsrc/btree.c	/^static int defragmentPage(MemPage *pPage){$/;"	f	file:
delay1	src/test1.c	/^  int delay1;         \/* Delay before locking *\/$/;"	m	struct:win32FileLocker	file:
delay2	src/test1.c	/^  int delay2;         \/* Delay before unlocking *\/$/;"	m	struct:win32FileLocker	file:
deleteCell	ext/rtree/rtree.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleteCell	sqlite3.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleteCell	tsrc/rtree.c	/^static int deleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell, int iHeight){$/;"	f	file:
deleteOnClose	src/test_quota.c	/^  int deleteOnClose;              \/* True to delete this file when it closes *\/$/;"	m	struct:quotaFile	file:
deleteTable	sqlite3.c	/^static void SQLITE_NOINLINE deleteTable(sqlite3 *db, Table *pTable){$/;"	f	file:
deleteTable	src/build.c	/^static void SQLITE_NOINLINE deleteTable(sqlite3 *db, Table *pTable){$/;"	f	file:
deleteTable	tsrc/build.c	/^static void SQLITE_NOINLINE deleteTable(sqlite3 *db, Table *pTable){$/;"	f	file:
deleteTerms	ext/fts1/fts1.c	/^static int deleteTerms(fulltext_vtab *v, fts1Hash *pTerms, sqlite_int64 iRowid){$/;"	f	file:
deleteTerms	ext/fts2/fts2.c	/^static int deleteTerms(fulltext_vtab *v, sqlite_int64 iRowid){$/;"	f	file:
deleteTerms	tsrc/fts1.c	/^static int deleteTerms(fulltext_vtab *v, fts1Hash *pTerms, sqlite_int64 iRowid){$/;"	f	file:
deleteTerms	tsrc/fts2.c	/^static int deleteTerms(fulltext_vtab *v, sqlite_int64 iRowid){$/;"	f	file:
delete_all_data	test/tester.tcl	/^proc delete_all_data {} {$/;"	p
delete_collation	src/test1.c	/^static int SQLITE_TCLAPI delete_collation($/;"	f	file:
delete_file	test/tester.tcl	/^proc delete_file {args} {$/;"	p
delete_function	src/test1.c	/^static int SQLITE_TCLAPI delete_function($/;"	f	file:
deleteconfig	tool/lemon.c	/^PRIVATE void deleteconfig(struct config *old)$/;"	f
delim	ext/fts1/fts1_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	ext/fts2/fts2_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	ext/fts3/fts3_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	sqlite3.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	tsrc/fts1_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	tsrc/fts2_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
delim	tsrc/fts3_tokenizer1.c	/^  char delim[128];             \/* flag ASCII delimiters *\/$/;"	m	struct:simple_tokenizer	file:
demoAccess	src/test_demovfs.c	/^static int demoAccess($/;"	f	file:
demoCheckReservedLock	src/test_demovfs.c	/^static int demoCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
demoClose	src/test_demovfs.c	/^static int demoClose(sqlite3_file *pFile){$/;"	f	file:
demoCurrentTime	src/test_demovfs.c	/^static int demoCurrentTime(sqlite3_vfs *pVfs, double *pTime){$/;"	f	file:
demoDelete	src/test_demovfs.c	/^static int demoDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
demoDeviceCharacteristics	src/test_demovfs.c	/^static int demoDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
demoDirectWrite	src/test_demovfs.c	/^static int demoDirectWrite($/;"	f	file:
demoDlClose	src/test_demovfs.c	/^static void demoDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
demoDlError	src/test_demovfs.c	/^static void demoDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
demoDlOpen	src/test_demovfs.c	/^static void *demoDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
demoDlSym	src/test_demovfs.c	/^static void (*demoDlSym(sqlite3_vfs *pVfs, void *pH, const char *z))(void){$/;"	f	file:
demoFileControl	src/test_demovfs.c	/^static int demoFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
demoFileSize	src/test_demovfs.c	/^static int demoFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
demoFlushBuffer	src/test_demovfs.c	/^static int demoFlushBuffer(DemoFile *p){$/;"	f	file:
demoFullPathname	src/test_demovfs.c	/^static int demoFullPathname($/;"	f	file:
demoLock	src/test_demovfs.c	/^static int demoLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
demoOpen	src/test_demovfs.c	/^static int demoOpen($/;"	f	file:
demoRandomness	src/test_demovfs.c	/^static int demoRandomness(sqlite3_vfs *pVfs, int nByte, char *zByte){$/;"	f	file:
demoRead	src/test_demovfs.c	/^static int demoRead($/;"	f	file:
demoSectorSize	src/test_demovfs.c	/^static int demoSectorSize(sqlite3_file *pFile){$/;"	f	file:
demoSleep	src/test_demovfs.c	/^static int demoSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
demoSync	src/test_demovfs.c	/^static int demoSync(sqlite3_file *pFile, int flags){$/;"	f	file:
demoTruncate	src/test_demovfs.c	/^static int demoTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
demoUnlock	src/test_demovfs.c	/^static int demoUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
demoWrite	src/test_demovfs.c	/^static int demoWrite($/;"	f	file:
depth	src/test_rtree.c	/^  double depth;$/;"	m	struct:Cube	file:
dequote	src/test_osinst.c	/^static void dequote(char *z){$/;"	f	file:
dequoteString	ext/fts1/fts1.c	/^static void dequoteString(char *z){$/;"	f	file:
dequoteString	ext/fts2/fts2.c	/^static void dequoteString(char *z){$/;"	f	file:
dequoteString	src/test8.c	/^static void dequoteString(char *z){$/;"	f	file:
dequoteString	tsrc/fts1.c	/^static void dequoteString(char *z){$/;"	f	file:
dequoteString	tsrc/fts2.c	/^static void dequoteString(char *z){$/;"	f	file:
desc	sqlite3.c	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
desc	sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
desc	tsrc/sqlite3.h	/^     unsigned char desc;       \/* True for DESC.  False for ASC. *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
describeCell	tool/showdb.c	/^static i64 describeCell($/;"	f	file:
describeCell	tool/showwal.c	/^static i64 describeCell($/;"	f	file:
describeContent	tool/showdb.c	/^static i64 describeContent($/;"	f	file:
describeContent	tool/showwal.c	/^static i64 describeContent($/;"	f	file:
deserializeGeometry	ext/rtree/rtree.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
deserializeGeometry	sqlite3.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
deserializeGeometry	tsrc/rtree.c	/^static int deserializeGeometry(sqlite3_value *pValue, RtreeConstraint *pCons){$/;"	f	file:
destLineno	tool/lemon.c	/^  int destLineno;          \/* Line number for start of destructor *\/$/;"	m	struct:symbol	file:
destroyRootPage	sqlite3.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyRootPage	src/build.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyRootPage	tsrc/build.c	/^static void destroyRootPage(Parse *pParse, int iTable, int iDb){$/;"	f	file:
destroyTable	sqlite3.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
destroyTable	src/build.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
destroyTable	tsrc/build.c	/^static void destroyTable(Parse *pParse, Table *pTab){$/;"	f	file:
destructor	src/test_func.c	/^static void destructor(void *p){$/;"	f	file:
destructor	tool/lemon.c	/^  char *destructor;        \/* Code which executes whenever this symbol is$/;"	m	struct:symbol	file:
detachFunc	sqlite3.c	/^static void detachFunc($/;"	f	file:
detachFunc	src/attach.c	/^static void detachFunc($/;"	f	file:
detachFunc	tsrc/attach.c	/^static void detachFunc($/;"	f	file:
detail_check	ext/fts5/test/fts5_common.tcl	/^proc detail_check {} {$/;"	p
detail_is_col	ext/fts5/test/fts5_common.tcl	/^proc detail_is_col {}  { detail_check ; expr {$::detail == "col" } }$/;"	p
detail_is_full	ext/fts5/test/fts5_common.tcl	/^proc detail_is_full {} { detail_check ; expr {$::detail == "full"} }$/;"	p
detail_is_none	ext/fts5/test/fts5_common.tcl	/^proc detail_is_none {} { detail_check ; expr {$::detail == "none"} }$/;"	p
dev	sqlite3.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
dev	src/os_unix.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
dev	tsrc/os_unix.c	/^  dev_t dev;                  \/* Device number *\/$/;"	m	struct:unixFileId	file:
devSymObjCmd	src/test6.c	/^static int SQLITE_TCLAPI devSymObjCmd($/;"	f	file:
deviceCharacteristics	sqlite3.c	/^  int deviceCharacteristics;          \/* Precomputed device characteristics *\/$/;"	m	struct:unixFile	file:
deviceCharacteristics	src/os_unix.c	/^  int deviceCharacteristics;          \/* Precomputed device characteristics *\/$/;"	m	struct:unixFile	file:
deviceCharacteristics	tsrc/os_unix.c	/^  int deviceCharacteristics;          \/* Precomputed device characteristics *\/$/;"	m	struct:unixFile	file:
devsymAccess	src/test_devsym.c	/^static int devsymAccess($/;"	f	file:
devsymCheckReservedLock	src/test_devsym.c	/^static int devsymCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
devsymClose	src/test_devsym.c	/^static int devsymClose(sqlite3_file *pFile){$/;"	f	file:
devsymCurrentTime	src/test_devsym.c	/^static int devsymCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
devsymDelete	src/test_devsym.c	/^static int devsymDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
devsymDeviceCharacteristics	src/test_devsym.c	/^static int devsymDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
devsymDlClose	src/test_devsym.c	/^static void devsymDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
devsymDlError	src/test_devsym.c	/^static void devsymDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
devsymDlOpen	src/test_devsym.c	/^static void *devsymDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
devsymDlSym	src/test_devsym.c	/^static void (*devsymDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
devsymFileControl	src/test_devsym.c	/^static int devsymFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
devsymFileSize	src/test_devsym.c	/^static int devsymFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
devsymFullPathname	src/test_devsym.c	/^static int devsymFullPathname($/;"	f	file:
devsymLock	src/test_devsym.c	/^static int devsymLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
devsymOpen	src/test_devsym.c	/^static int devsymOpen($/;"	f	file:
devsymRandomness	src/test_devsym.c	/^static int devsymRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
devsymRead	src/test_devsym.c	/^static int devsymRead($/;"	f	file:
devsymSectorSize	src/test_devsym.c	/^static int devsymSectorSize(sqlite3_file *pFile){$/;"	f	file:
devsymShmBarrier	src/test_devsym.c	/^static void devsymShmBarrier(sqlite3_file *pFile){$/;"	f	file:
devsymShmLock	src/test_devsym.c	/^static int devsymShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
devsymShmMap	src/test_devsym.c	/^static int devsymShmMap($/;"	f	file:
devsymShmUnmap	src/test_devsym.c	/^static int devsymShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
devsymSleep	src/test_devsym.c	/^static int devsymSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
devsymSync	src/test_devsym.c	/^static int devsymSync(sqlite3_file *pFile, int flags){$/;"	f	file:
devsymTruncate	src/test_devsym.c	/^static int devsymTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
devsymUnlock	src/test_devsym.c	/^static int devsymUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
devsymWrite	src/test_devsym.c	/^static int devsymWrite($/;"	f	file:
devsym_file	src/test_devsym.c	/^struct devsym_file {$/;"	s	file:
devsym_file	src/test_devsym.c	/^typedef struct devsym_file devsym_file;$/;"	t	typeref:struct:devsym_file	file:
devsym_io_methods	src/test_devsym.c	/^static sqlite3_io_methods devsym_io_methods = {$/;"	v	file:
devsym_register	src/test_devsym.c	/^void devsym_register(int iDeviceChar, int iSectorSize){$/;"	f
devsym_unregister	src/test_devsym.c	/^void devsym_unregister(){$/;"	f
devsym_vfs	src/test_devsym.c	/^static sqlite3_vfs devsym_vfs = {$/;"	v	file:
dfltColumn	ext/fts1/fts1.c	/^  int dfltColumn;       \/* The default column *\/$/;"	m	struct:Query	file:
dfltColumn	ext/fts2/fts2.c	/^  int dfltColumn;       \/* The default column *\/$/;"	m	struct:Query	file:
dfltColumn	tsrc/fts1.c	/^  int dfltColumn;       \/* The default column *\/$/;"	m	struct:Query	file:
dfltColumn	tsrc/fts2.c	/^  int dfltColumn;       \/* The default column *\/$/;"	m	struct:Query	file:
dfltLockMode	sqlite3.c	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3	file:
dfltLockMode	src/sqliteInt.h	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3
dfltLockMode	tsrc/sqliteInt.h	/^  u8 dfltLockMode;              \/* Default locking-mode for attached dbs *\/$/;"	m	struct:sqlite3
diff_one_table	tool/sqldiff.c	/^static void diff_one_table(const char *zTab, FILE *out){$/;"	f	file:
digit_count	tool/sqldiff.c	/^static int digit_count(int v){$/;"	f	file:
directMode	sqlite3.c	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo	file:
directMode	src/sqliteInt.h	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo
directMode	tsrc/sqliteInt.h	/^  u8 directMode;          \/* Direct rendering mode means take data directly$/;"	m	struct:AggInfo
disableAuth	src/tclsqlite.c	/^  int disableAuth;           \/* Disable the authorizer if it exists *\/$/;"	m	struct:SqliteDb	file:
disableAuth	tsrc/tclsqlite.c	/^  int disableAuth;           \/* Disable the authorizer if it exists *\/$/;"	m	struct:SqliteDb	file:
disableInit	src/test_mutex.c	/^  int disableInit;           \/* True to cause sqlite3_initalize() to fail *\/$/;"	m	struct:test_mutex_globals	file:
disableLookaside	parse.c	/^static void disableLookaside(Parse *pParse){$/;"	f	file:
disableLookaside	sqlite3.c	/^  u8 disableLookaside; \/* Number of times lookaside has been disabled *\/$/;"	m	struct:Parse	file:
disableLookaside	sqlite3.c	/^static void disableLookaside(Parse *pParse){$/;"	f	file:
disableLookaside	src/sqliteInt.h	/^  u8 disableLookaside; \/* Number of times lookaside has been disabled *\/$/;"	m	struct:Parse
disableLookaside	tsrc/parse.c	/^static void disableLookaside(Parse *pParse){$/;"	f	file:
disableLookaside	tsrc/sqliteInt.h	/^  u8 disableLookaside; \/* Number of times lookaside has been disabled *\/$/;"	m	struct:Parse
disableTerm	sqlite3.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTerm	src/wherecode.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTerm	tsrc/wherecode.c	/^static void disableTerm(WhereLevel *pLevel, WhereTerm *pTerm){$/;"	f	file:
disableTriggers	sqlite3.c	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse	file:
disableTriggers	src/sqliteInt.h	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse
disableTriggers	tsrc/sqliteInt.h	/^  u8 disableTriggers;  \/* True to disable triggers *\/$/;"	m	struct:Parse
disableTry	src/test_mutex.c	/^  int disableTry;            \/* True to force sqlite3_mutex_try() to fail *\/$/;"	m	struct:test_mutex_globals	file:
disable_debug_trace_modes	shell.c	/^static void disable_debug_trace_modes(void){$/;"	f	file:
disable_debug_trace_modes	src/shell.c	/^static void disable_debug_trace_modes(void){$/;"	f	file:
disable_debug_trace_modes	tsrc/shell.c	/^static void disable_debug_trace_modes(void){$/;"	f	file:
disable_simulated_io_errors	sqlite3.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	sqlite3.c	13111;"	d	file:
disable_simulated_io_errors	sqlite3.c	50039;"	d	file:
disable_simulated_io_errors	src/pager.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	src/pager.c	3762;"	d	file:
disable_simulated_io_errors	src/pager.h	229;"	d
disable_simulated_io_errors	tsrc/pager.c	/^void disable_simulated_io_errors(void){$/;"	f
disable_simulated_io_errors	tsrc/pager.c	3762;"	d	file:
disable_simulated_io_errors	tsrc/pager.h	229;"	d
disallow	sqlite3.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon89	file:
disallow	src/mem2.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon63	file:
disallow	tsrc/mem2.c	/^  int disallow; \/* Do not allow memory allocation *\/$/;"	m	struct:__anon30	file:
discardChance	src/test_pcache.c	/^  unsigned discardChance;   \/* Chance of discarding on an unpin (0-100) *\/$/;"	m	struct:testpcacheGlobalType	file:
disconnectAllVtab	sqlite3.c	/^static void disconnectAllVtab(sqlite3 *db){$/;"	f	file:
disconnectAllVtab	src/main.c	/^static void disconnectAllVtab(sqlite3 *db){$/;"	f	file:
disconnectAllVtab	tsrc/main.c	/^static void disconnectAllVtab(sqlite3 *db){$/;"	f	file:
displayComment	sqlite3.c	/^static int displayComment($/;"	f	file:
displayComment	src/vdbeaux.c	/^static int displayComment($/;"	f	file:
displayComment	tsrc/vdbeaux.c	/^static int displayComment($/;"	f	file:
displayLinuxIoStats	shell.c	/^static void displayLinuxIoStats(FILE *out){$/;"	f	file:
displayLinuxIoStats	src/shell.c	/^static void displayLinuxIoStats(FILE *out){$/;"	f	file:
displayLinuxIoStats	test/speedtest1.c	/^static void displayLinuxIoStats(FILE *out){$/;"	f	file:
displayLinuxIoStats	tsrc/shell.c	/^static void displayLinuxIoStats(FILE *out){$/;"	f	file:
displayP4	sqlite3.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
displayP4	src/vdbeaux.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
displayP4	tsrc/vdbeaux.c	/^static char *displayP4(Op *pOp, char *zTemp, int nTemp){$/;"	f	file:
displayP4Expr	sqlite3.c	/^static void displayP4Expr(StrAccum *p, Expr *pExpr){$/;"	f	file:
displayP4Expr	src/vdbeaux.c	/^static void displayP4Expr(StrAccum *p, Expr *pExpr){$/;"	f	file:
displayP4Expr	tsrc/vdbeaux.c	/^static void displayP4Expr(StrAccum *p, Expr *pExpr){$/;"	f	file:
display_scanstats	shell.c	/^static void display_scanstats($/;"	f	file:
display_scanstats	src/shell.c	/^static void display_scanstats($/;"	f	file:
display_scanstats	tsrc/shell.c	/^static void display_scanstats($/;"	f	file:
display_stats	shell.c	/^static int display_stats($/;"	f	file:
display_stats	src/shell.c	/^static int display_stats($/;"	f	file:
display_stats	tsrc/shell.c	/^static int display_stats($/;"	f	file:
divide	tool/spaceanal.tcl	/^proc divide {num denom} {$/;"	p
dlcAddDoclist	ext/fts2/fts2.c	/^static void dlcAddDoclist(DLCollector *pCollector, DataBuffer *b){$/;"	f	file:
dlcAddDoclist	tsrc/fts2.c	/^static void dlcAddDoclist(DLCollector *pCollector, DataBuffer *b){$/;"	f	file:
dlcAddPos	ext/fts2/fts2.c	/^static void dlcAddPos(DLCollector *pCollector, int iColumn, int iPos,$/;"	f	file:
dlcAddPos	tsrc/fts2.c	/^static void dlcAddPos(DLCollector *pCollector, int iColumn, int iPos,$/;"	f	file:
dlcDelete	ext/fts2/fts2.c	/^static void dlcDelete(DLCollector *pCollector){$/;"	f	file:
dlcDelete	tsrc/fts2.c	/^static void dlcDelete(DLCollector *pCollector){$/;"	f	file:
dlcNew	ext/fts2/fts2.c	/^static DLCollector *dlcNew(sqlite_int64 iDocid, DocListType iType){$/;"	f	file:
dlcNew	tsrc/fts2.c	/^static DLCollector *dlcNew(sqlite_int64 iDocid, DocListType iType){$/;"	f	file:
dlcNext	ext/fts2/fts2.c	/^static void dlcNext(DLCollector *pCollector, sqlite_int64 iDocid){$/;"	f	file:
dlcNext	tsrc/fts2.c	/^static void dlcNext(DLCollector *pCollector, sqlite_int64 iDocid){$/;"	f	file:
dlrAllDataBytes	ext/fts2/fts2.c	/^static int dlrAllDataBytes(DLReader *pReader){$/;"	f	file:
dlrAllDataBytes	tsrc/fts2.c	/^static int dlrAllDataBytes(DLReader *pReader){$/;"	f	file:
dlrAtEnd	ext/fts2/fts2.c	/^static int dlrAtEnd(DLReader *pReader){$/;"	f	file:
dlrAtEnd	tsrc/fts2.c	/^static int dlrAtEnd(DLReader *pReader){$/;"	f	file:
dlrDestroy	ext/fts2/fts2.c	/^static void dlrDestroy(DLReader *pReader){$/;"	f	file:
dlrDestroy	tsrc/fts2.c	/^static void dlrDestroy(DLReader *pReader){$/;"	f	file:
dlrDocData	ext/fts2/fts2.c	/^static const char *dlrDocData(DLReader *pReader){$/;"	f	file:
dlrDocData	tsrc/fts2.c	/^static const char *dlrDocData(DLReader *pReader){$/;"	f	file:
dlrDocDataBytes	ext/fts2/fts2.c	/^static int dlrDocDataBytes(DLReader *pReader){$/;"	f	file:
dlrDocDataBytes	tsrc/fts2.c	/^static int dlrDocDataBytes(DLReader *pReader){$/;"	f	file:
dlrDocid	ext/fts2/fts2.c	/^static sqlite_int64 dlrDocid(DLReader *pReader){$/;"	f	file:
dlrDocid	tsrc/fts2.c	/^static sqlite_int64 dlrDocid(DLReader *pReader){$/;"	f	file:
dlrInit	ext/fts2/fts2.c	/^static void dlrInit(DLReader *pReader, DocListType iType,$/;"	f	file:
dlrInit	tsrc/fts2.c	/^static void dlrInit(DLReader *pReader, DocListType iType,$/;"	f	file:
dlrPosData	ext/fts2/fts2.c	/^static const char *dlrPosData(DLReader *pReader){$/;"	f	file:
dlrPosData	tsrc/fts2.c	/^static const char *dlrPosData(DLReader *pReader){$/;"	f	file:
dlrPosDataLen	ext/fts2/fts2.c	/^static int dlrPosDataLen(DLReader *pReader){$/;"	f	file:
dlrPosDataLen	tsrc/fts2.c	/^static int dlrPosDataLen(DLReader *pReader){$/;"	f	file:
dlrStep	ext/fts2/fts2.c	/^static void dlrStep(DLReader *pReader){$/;"	f	file:
dlrStep	tsrc/fts2.c	/^static void dlrStep(DLReader *pReader){$/;"	f	file:
dlw	ext/fts2/fts2.c	/^  DLWriter *dlw;$/;"	m	struct:PLWriter	file:
dlw	ext/fts2/fts2.c	/^  DLWriter dlw;$/;"	m	struct:DLCollector	file:
dlw	tsrc/fts2.c	/^  DLWriter *dlw;$/;"	m	struct:PLWriter	file:
dlw	tsrc/fts2.c	/^  DLWriter dlw;$/;"	m	struct:DLCollector	file:
dlwAdd	ext/fts2/fts2.c	/^static void dlwAdd(DLWriter *pWriter, sqlite_int64 iDocid){$/;"	f	file:
dlwAdd	tsrc/fts2.c	/^static void dlwAdd(DLWriter *pWriter, sqlite_int64 iDocid){$/;"	f	file:
dlwAppend	ext/fts2/fts2.c	/^static void dlwAppend(DLWriter *pWriter,$/;"	f	file:
dlwAppend	tsrc/fts2.c	/^static void dlwAppend(DLWriter *pWriter,$/;"	f	file:
dlwCopy	ext/fts2/fts2.c	/^static void dlwCopy(DLWriter *pWriter, DLReader *pReader){$/;"	f	file:
dlwCopy	tsrc/fts2.c	/^static void dlwCopy(DLWriter *pWriter, DLReader *pReader){$/;"	f	file:
dlwDestroy	ext/fts2/fts2.c	/^static void dlwDestroy(DLWriter *pWriter){$/;"	f	file:
dlwDestroy	tsrc/fts2.c	/^static void dlwDestroy(DLWriter *pWriter){$/;"	f	file:
dlwInit	ext/fts2/fts2.c	/^static void dlwInit(DLWriter *pWriter, DocListType iType, DataBuffer *b){$/;"	f	file:
dlwInit	tsrc/fts2.c	/^static void dlwInit(DLWriter *pWriter, DocListType iType, DataBuffer *b){$/;"	f	file:
doAsynchronousOpen	ext/async/sqlite3async.c	/^static int doAsynchronousOpen(int flags){$/;"	f	file:
doNotSpill	sqlite3.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doNotSpill	src/pager.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doNotSpill	tsrc/pager.c	/^  u8 doNotSpill;              \/* Do not spill the cache when non-zero *\/$/;"	m	struct:Pager	file:
doPassiveTest	test/malloc_common.tcl	/^proc doPassiveTest {isRestart name sql catchres} {$/;"	p
doWalCallbacks	sqlite3.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
doWalCallbacks	src/vdbeapi.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
doWalCallbacks	tsrc/vdbeapi.c	/^static int doWalCallbacks(sqlite3 *db){$/;"	f	file:
do_all_bc_test	test/bc_common.tcl	/^proc do_all_bc_test {script} {$/;"	p
do_bc_test	test/bc_common.tcl	/^proc do_bc_test {bin script} {$/;"	p
do_catchsql_test	test/tester.tcl	/^proc do_catchsql_test {testname sql result} {$/;"	p
do_changeset_invert_test	ext/session/session_common.tcl	/^proc do_changeset_invert_test {tn session res} {$/;"	p
do_changeset_test	ext/session/session_common.tcl	/^proc do_changeset_test {tn session res} {$/;"	p
do_common_sql	ext/session/session_common.tcl	/^proc do_common_sql {sql} {$/;"	p
do_compile	src/test4.c	/^static void do_compile(Thread *p){$/;"	f	file:
do_compile	src/test7.c	/^static void do_compile(Thread *p){$/;"	f	file:
do_conflict_test	ext/session/session_common.tcl	/^proc do_conflict_test {tn args} {$/;"	p
do_copy_file	test/tester.tcl	/^proc do_copy_file {force from to} {$/;"	p
do_delete_file	test/tester.tcl	/^proc do_delete_file {force args} {$/;"	p
do_delete_win32_file	test/tester.tcl	/^  proc do_delete_win32_file {args} {$/;"	p
do_eqp_test	test/tester.tcl	/^proc do_eqp_test {name sql res} {$/;"	p
do_error_test	test/malloc_common.tcl	/^proc do_error_test {name sql error} {$/;"	p
do_execsql_test	test/tester.tcl	/^proc do_execsql_test {testname sql {result {}}} {$/;"	p
do_faultsim_test	test/malloc_common.tcl	/^proc do_faultsim_test {name args} {$/;"	p
do_filepath_test	test/tester.tcl	/^proc do_filepath_test {name cmd expected} {$/;"	p
do_finalize	src/test4.c	/^static void do_finalize(Thread *p){$/;"	f	file:
do_finalize	src/test7.c	/^static void do_finalize(Thread *p){$/;"	f	file:
do_fuzzy_test	test/fuzz_common.tcl	/^proc do_fuzzy_test {testname args} {$/;"	p
do_ioerr_test	test/tester.tcl	/^proc do_ioerr_test {testname args} {$/;"	p
do_iterator_test	ext/session/session_common.tcl	/^proc do_iterator_test {tn tbl_list sql res} {$/;"	p
do_malloc_test	test/malloc_common.tcl	/^proc do_malloc_test {tn args} {$/;"	p
do_meta_command	shell.c	/^static int do_meta_command(char *zLine, ShellState *p){$/;"	f	file:
do_meta_command	src/shell.c	/^static int do_meta_command(char *zLine, ShellState *p){$/;"	f	file:
do_meta_command	tsrc/shell.c	/^static int do_meta_command(char *zLine, ShellState *p){$/;"	f	file:
do_multiclient_test	test/lock_common.tcl	/^proc do_multiclient_test {varname script} {$/;"	p
do_not_use_codec	test/tester.tcl	/^proc do_not_use_codec {} {$/;"	p
do_one_faultsim_test	test/malloc_common.tcl	/^proc do_one_faultsim_test {testname args} {$/;"	p
do_patchset_test	ext/session/session_common.tcl	/^proc do_patchset_test {tn session res} {$/;"	p
do_rbu_vacuum_test	ext/rbu/rbu_common.tcl	/^proc do_rbu_vacuum_test {tn step} {$/;"	p
do_realnum_test	test/tester.tcl	/^proc do_realnum_test {name cmd expected} {$/;"	p
do_remove_win32_dir	test/tester.tcl	/^  proc do_remove_win32_dir {args} {$/;"	p
do_reset	src/test7.c	/^static void do_reset(Thread *p){$/;"	f	file:
do_restart_select_test	test/malloc_common.tcl	/^proc do_restart_select_test {name sql result} {$/;"	p
do_select_test	test/malloc_common.tcl	/^proc do_select_test {name sql result} {$/;"	p
do_select_tests	test/tester.tcl	/^proc do_select_tests {prefix args} {$/;"	p
do_some_sql	test/crashtest1.c	/^static void do_some_sql(int parent){$/;"	f	file:
do_step	src/test4.c	/^static void do_step(Thread *p){$/;"	f	file:
do_step	src/test7.c	/^static void do_step(Thread *p){$/;"	f	file:
do_test	test/tester.tcl	/^proc do_test {name cmd expected} {$/;"	p
do_test	test/thread_common.tcl	/^  proc do_test {name script result} {$/;"	p
do_test	tool/restore_jrnl.tcl	/^proc do_test {name cmd expected} {$/;"	p
do_then_apply_sql	ext/session/session_common.tcl	/^proc do_then_apply_sql {sql {dbname main}} {$/;"	p
do_timed_execsql_test	test/tester.tcl	/^proc do_timed_execsql_test {testname sql {result {}}} {$/;"	p
do_write_test	test/malloc_common.tcl	/^proc do_write_test {name tbl sql} {$/;"	p
docListAccumulate	ext/fts1/fts1.c	/^static void docListAccumulate(DocList *pAcc, DocList *pUpdate){$/;"	f	file:
docListAccumulate	tsrc/fts1.c	/^static void docListAccumulate(DocList *pAcc, DocList *pUpdate){$/;"	f	file:
docListAccumulateUnion	ext/fts2/fts2.c	/^static void docListAccumulateUnion(DataBuffer *acc,$/;"	f	file:
docListAccumulateUnion	tsrc/fts2.c	/^static void docListAccumulateUnion(DataBuffer *acc,$/;"	f	file:
docListAddDocid	ext/fts1/fts1.c	/^static void docListAddDocid(DocList *d, sqlite_int64 iDocid){$/;"	f	file:
docListAddDocid	ext/fts1/fulltext.c	/^static void docListAddDocid(DocList *d, sqlite_int64 iDocid){$/;"	f	file:
docListAddDocid	tsrc/fts1.c	/^static void docListAddDocid(DocList *d, sqlite_int64 iDocid){$/;"	f	file:
docListAddEndPos	ext/fts1/fulltext.c	/^static void docListAddEndPos(DocList *d){$/;"	f	file:
docListAddPos	ext/fts1/fts1.c	/^static void docListAddPos(DocList *d, int iColumn, int iPos){$/;"	f	file:
docListAddPos	ext/fts1/fulltext.c	/^static void docListAddPos(DocList *d, int iPos){$/;"	f	file:
docListAddPos	tsrc/fts1.c	/^static void docListAddPos(DocList *d, int iColumn, int iPos){$/;"	f	file:
docListAddPosOffset	ext/fts1/fts1.c	/^static void docListAddPosOffset($/;"	f	file:
docListAddPosOffset	ext/fts1/fulltext.c	/^static void docListAddPosOffset(DocList *d, int iPos,$/;"	f	file:
docListAddPosOffset	tsrc/fts1.c	/^static void docListAddPosOffset($/;"	f	file:
docListAndMerge	ext/fts1/fts1.c	/^static void docListAndMerge($/;"	f	file:
docListAndMerge	ext/fts2/fts2.c	/^static void docListAndMerge($/;"	f	file:
docListAndMerge	tsrc/fts1.c	/^static void docListAndMerge($/;"	f	file:
docListAndMerge	tsrc/fts2.c	/^static void docListAndMerge($/;"	f	file:
docListDelete	ext/fts1/fts1.c	/^static void docListDelete(DocList *d){$/;"	f	file:
docListDelete	ext/fts1/fulltext.c	/^static void docListDelete(DocList *d){$/;"	f	file:
docListDelete	tsrc/fts1.c	/^static void docListDelete(DocList *d){$/;"	f	file:
docListDestroy	ext/fts1/fts1.c	/^static void docListDestroy(DocList *d){$/;"	f	file:
docListDestroy	ext/fts1/fulltext.c	/^static void docListDestroy(DocList *d){$/;"	f	file:
docListDestroy	tsrc/fts1.c	/^static void docListDestroy(DocList *d){$/;"	f	file:
docListDiscardEmpty	ext/fts1/fts1.c	/^static void docListDiscardEmpty(DocList *in) {$/;"	f	file:
docListDiscardEmpty	tsrc/fts1.c	/^static void docListDiscardEmpty(DocList *in) {$/;"	f	file:
docListEnd	ext/fts1/fts1.c	/^static char *docListEnd(DocList *d){$/;"	f	file:
docListEnd	ext/fts1/fulltext.c	/^static char *docListEnd(DocList *d){$/;"	f	file:
docListEnd	tsrc/fts1.c	/^static char *docListEnd(DocList *d){$/;"	f	file:
docListExceptMerge	ext/fts1/fts1.c	/^static void docListExceptMerge($/;"	f	file:
docListExceptMerge	ext/fts2/fts2.c	/^static void docListExceptMerge($/;"	f	file:
docListExceptMerge	tsrc/fts1.c	/^static void docListExceptMerge($/;"	f	file:
docListExceptMerge	tsrc/fts2.c	/^static void docListExceptMerge($/;"	f	file:
docListInit	ext/fts1/fts1.c	/^static void docListInit(DocList *d, DocListType iType,$/;"	f	file:
docListInit	ext/fts1/fulltext.c	/^static void docListInit(DocList *d, DocListType iType,$/;"	f	file:
docListInit	tsrc/fts1.c	/^static void docListInit(DocList *d, DocListType iType,$/;"	f	file:
docListMerge	ext/fts2/fts2.c	/^static void docListMerge(DataBuffer *out,$/;"	f	file:
docListMerge	tsrc/fts2.c	/^static void docListMerge(DataBuffer *out,$/;"	f	file:
docListNew	ext/fts1/fts1.c	/^static DocList *docListNew(DocListType iType){$/;"	f	file:
docListNew	ext/fts1/fulltext.c	/^static DocList *docListNew(DocListType iType){$/;"	f	file:
docListNew	tsrc/fts1.c	/^static DocList *docListNew(DocListType iType){$/;"	f	file:
docListOfTerm	ext/fts1/fts1.c	/^static int docListOfTerm($/;"	f	file:
docListOfTerm	ext/fts2/fts2.c	/^static int docListOfTerm($/;"	f	file:
docListOfTerm	tsrc/fts1.c	/^static int docListOfTerm($/;"	f	file:
docListOfTerm	tsrc/fts2.c	/^static int docListOfTerm($/;"	f	file:
docListOrMerge	ext/fts1/fts1.c	/^static void docListOrMerge($/;"	f	file:
docListOrMerge	ext/fts2/fts2.c	/^static void docListOrMerge($/;"	f	file:
docListOrMerge	tsrc/fts1.c	/^static void docListOrMerge($/;"	f	file:
docListOrMerge	tsrc/fts2.c	/^static void docListOrMerge($/;"	f	file:
docListPhraseMerge	ext/fts1/fts1.c	/^static void docListPhraseMerge($/;"	f	file:
docListPhraseMerge	ext/fts2/fts2.c	/^static void docListPhraseMerge($/;"	f	file:
docListPhraseMerge	tsrc/fts1.c	/^static void docListPhraseMerge($/;"	f	file:
docListPhraseMerge	tsrc/fts2.c	/^static void docListPhraseMerge($/;"	f	file:
docListRestrictColumn	ext/fts1/fts1.c	/^static void docListRestrictColumn(DocList *in, int iRestrictColumn){$/;"	f	file:
docListRestrictColumn	tsrc/fts1.c	/^static void docListRestrictColumn(DocList *in, int iRestrictColumn){$/;"	f	file:
docListSpliceElement	ext/fts1/fts1.c	/^static void docListSpliceElement(DocListReader *r, sqlite_int64 iDocid,$/;"	f	file:
docListSpliceElement	tsrc/fts1.c	/^static void docListSpliceElement(DocListReader *r, sqlite_int64 iDocid,$/;"	f	file:
docListSplit	ext/fts1/fulltext.c	/^static int docListSplit(DocList *d, DocList *d2){$/;"	f	file:
docListTrim	ext/fts2/fts2.c	/^static void docListTrim(DocListType iType, const char *pData, int nData,$/;"	f	file:
docListTrim	tsrc/fts2.c	/^static void docListTrim(DocListType iType, const char *pData, int nData,$/;"	f	file:
docListUnion	ext/fts2/fts2.c	/^static void docListUnion($/;"	f	file:
docListUnion	tsrc/fts2.c	/^static void docListUnion($/;"	f	file:
docListUpdate	ext/fts1/fts1.c	/^static void docListUpdate(DocList *d, DocList *pUpdate){$/;"	f	file:
docListUpdate	ext/fts1/fulltext.c	/^static int docListUpdate(DocList *d, sqlite_int64 iDocid, DocList *pUpdate){$/;"	f	file:
docListUpdate	tsrc/fts1.c	/^static void docListUpdate(DocList *d, DocList *pUpdate){$/;"	f	file:
docListValidate	ext/fts2/fts2.c	/^static void docListValidate(DocListType iType, const char *pData, int nData,$/;"	f	file:
docListValidate	tsrc/fts2.c	/^static void docListValidate(DocListType iType, const char *pData, int nData,$/;"	f	file:
doclist	ext/fts3/fts3Int.h	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase
doclist	sqlite3.c	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase	file:
doclist	tsrc/fts3Int.h	/^  Fts3Doclist doclist;$/;"	m	struct:Fts3Phrase
doesReduce	tool/lemon.c	/^  Boolean doesReduce;      \/* Reduce actions occur after optimization *\/$/;"	m	struct:rule	file:
doingRerun	sqlite3.c	/^  bft doingRerun:1;       \/* True if rerunning after an auto-reprepare *\/$/;"	m	struct:Vdbe	file:
doingRerun	src/vdbeInt.h	/^  bft doingRerun:1;       \/* True if rerunning after an auto-reprepare *\/$/;"	m	struct:Vdbe
doingRerun	tsrc/vdbeInt.h	/^  bft doingRerun:1;       \/* True if rerunning after an auto-reprepare *\/$/;"	m	struct:Vdbe
done	sqlite3.c	/^    unsigned done :1;       \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item	file:
done	sqlite3.c	/^  int done;                      \/* Set to true when thread finishes *\/$/;"	m	struct:SQLiteThread	file:
done	src/sqliteInt.h	/^    unsigned done :1;       \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item
done	src/threads.c	/^  int done;                      \/* Set to true when thread finishes *\/$/;"	m	struct:SQLiteThread	file:
done	tsrc/sqliteInt.h	/^    unsigned done :1;       \/* A flag to indicate when processing is finished *\/$/;"	m	struct:ExprList::ExprList_item
done	tsrc/threads.c	/^  int done;                      \/* Set to true when thread finishes *\/$/;"	m	struct:SQLiteThread	file:
doneEvent	tool/GetFile.cs	/^        private static EventWaitHandle doneEvent;$/;"	f	class:GetFile.Program	file:
dot	tool/lemon.c	/^  int dot;                 \/* The parse point *\/$/;"	m	struct:config	file:
dotlockCheckReservedLock	sqlite3.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockCheckReservedLock	src/os_unix.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockCheckReservedLock	tsrc/os_unix.c	/^static int dotlockCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
dotlockClose	sqlite3.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockClose	src/os_unix.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockClose	tsrc/os_unix.c	/^static int dotlockClose(sqlite3_file *id) {$/;"	f	file:
dotlockLock	sqlite3.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockLock	src/os_unix.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockLock	tsrc/os_unix.c	/^static int dotlockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	sqlite3.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	src/os_unix.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
dotlockUnlock	tsrc/os_unix.c	/^static int dotlockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
double	sqlite3.c	11445;"	d	file:
double	sqlite3.c	537;"	d	file:
double	sqlite3.c	8616;"	d	file:
double	sqlite3.h	277;"	d
double	sqlite3.h	8356;"	d
double	src/sqliteInt.h	511;"	d
double	tsrc/sqlite3.h	277;"	d
double	tsrc/sqlite3.h	8356;"	d
double	tsrc/sqliteInt.h	511;"	d
doubleCmp	ext/misc/percentile.c	/^static int SQLITE_CDECL doubleCmp(const void *pA, const void *pB){$/;"	f	file:
doubleConsonant	ext/fts1/fts1_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	ext/fts2/fts2_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	ext/fts3/fts3_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	sqlite3.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	tsrc/fts1_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	tsrc/fts2_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleConsonant	tsrc/fts3_porter.c	/^static int doubleConsonant(const char *z){$/;"	f	file:
doubleToInt64	sqlite3.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
doubleToInt64	src/vdbemem.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
doubleToInt64	tsrc/vdbemem.c	/^static i64 doubleToInt64(double r){$/;"	f	file:
downgradeAllSharedCacheTableLocks	sqlite3.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	sqlite3.c	58246;"	d	file:
downgradeAllSharedCacheTableLocks	src/btree.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	src/btree.c	110;"	d	file:
downgradeAllSharedCacheTableLocks	tsrc/btree.c	/^static void downgradeAllSharedCacheTableLocks(Btree *p){$/;"	f	file:
downgradeAllSharedCacheTableLocks	tsrc/btree.c	110;"	d	file:
dropCell	sqlite3.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dropCell	src/btree.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
dropCell	tsrc/btree.c	/^static void dropCell(MemPage *pPage, int idx, int sz, int *pRC){$/;"	f	file:
drop_all_tables	test/tester.tcl	/^proc drop_all_tables {{db db}} {$/;"	p
dsUnregisterObjCmd	src/test6.c	/^static int SQLITE_TCLAPI dsUnregisterObjCmd($/;"	f	file:
dstr	src/test1.c	/^struct dstr {$/;"	s	file:
dstrAppend	src/test1.c	/^static void dstrAppend(struct dstr *p, const char *z, int divider){$/;"	f	file:
dtnum	tool/lemon.c	/^  int dtnum;               \/* The data type number.  In the parser, the value$/;"	m	struct:symbol	file:
dumpDoclistFunc	ext/fts2/fts2.c	/^static void dumpDoclistFunc($/;"	f	file:
dumpDoclistFunc	tsrc/fts2.c	/^static void dumpDoclistFunc($/;"	f	file:
dumpTermsFunc	ext/fts2/fts2.c	/^static void dumpTermsFunc($/;"	f	file:
dumpTermsFunc	tsrc/fts2.c	/^static void dumpTermsFunc($/;"	f	file:
dump_callback	shell.c	/^static int dump_callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
dump_callback	src/shell.c	/^static int dump_callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
dump_callback	tsrc/shell.c	/^static int dump_callback(void *pArg, int nArg, char **azArg, char **azCol){$/;"	f	file:
dump_jrnl_page	tool/restore_jrnl.tcl	/^proc dump_jrnl_page {jrnl_pgno} {$/;"	p
dump_table	tool/sqldiff.c	/^static void dump_table(const char *zTab, FILE *out){$/;"	f	file:
dumpbytes	test/tester.tcl	/^proc dumpbytes {s} {$/;"	p
dupedExprNodeSize	sqlite3.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprNodeSize	src/expr.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprNodeSize	tsrc/expr.c	/^static int dupedExprNodeSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	sqlite3.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	src/expr.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprSize	tsrc/expr.c	/^static int dupedExprSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	sqlite3.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	src/expr.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
dupedExprStructSize	tsrc/expr.c	/^static int dupedExprStructSize(Expr *p, int flags){$/;"	f	file:
dynamic_triggers	test/threadtest3.c	/^static void dynamic_triggers(int nMs){$/;"	f	file:
dynamic_triggers_1	test/threadtest3.c	/^static char *dynamic_triggers_1(int iTid, void *pArg){$/;"	f	file:
dynamic_triggers_2	test/threadtest3.c	/^static char *dynamic_triggers_2(int iTid, void *pArg){$/;"	f	file:
e	tool/dbhash.c	116;"	d	file:
eAsyncLock	ext/async/sqlite3async.c	/^  int eAsyncLock;           \/* Lock-state with write-queue unlock *\/$/;"	m	struct:AsyncFileLock	file:
eCode	sqlite3.c	/^  u8 eCode;                                 \/* A small processing code *\/$/;"	m	struct:Walker	file:
eCode	src/sqliteInt.h	/^  u8 eCode;                                 \/* A small processing code *\/$/;"	m	struct:Walker
eCode	tsrc/sqliteInt.h	/^  u8 eCode;                                 \/* A small processing code *\/$/;"	m	struct:Walker
eContent	ext/fts5/fts5Int.h	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config
eContent	fts5.c	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config	file:
eContent	sqlite3.c	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config	file:
eContent	tsrc/fts5.c	/^  int eContent;                   \/* An FTS5_CONTENT value *\/$/;"	m	struct:Fts5Config	file:
eCoordType	ext/rtree/rtree.c	/^  u8 eCoordType;              \/* RTREE_COORD_REAL32 or RTREE_COORD_INT32 *\/$/;"	m	struct:Rtree	file:
eCoordType	sqlite3.c	/^  u8 eCoordType;              \/* RTREE_COORD_REAL32 or RTREE_COORD_INT32 *\/$/;"	m	struct:Rtree	file:
eCoordType	tsrc/rtree.c	/^  u8 eCoordType;              \/* RTREE_COORD_REAL32 or RTREE_COORD_INT32 *\/$/;"	m	struct:Rtree	file:
eCreate	sqlite3.c	/^  u8 eCreate;                         \/* eCreate value for for xFetch() *\/$/;"	m	struct:PCache	file:
eCreate	src/pcache.c	/^  u8 eCreate;                         \/* eCreate value for for xFetch() *\/$/;"	m	struct:PCache	file:
eCreate	tsrc/pcache.c	/^  u8 eCreate;                         \/* eCreate value for for xFetch() *\/$/;"	m	struct:PCache	file:
eCurType	sqlite3.c	/^  u8 eCurType;          \/* One of the CURTYPE_* values above *\/$/;"	m	struct:VdbeCursor	file:
eCurType	src/vdbeInt.h	/^  u8 eCurType;          \/* One of the CURTYPE_* values above *\/$/;"	m	struct:VdbeCursor
eCurType	tsrc/vdbeInt.h	/^  u8 eCurType;          \/* One of the CURTYPE_* values above *\/$/;"	m	struct:VdbeCursor
eDest	sqlite3.c	/^  u8 eDest;            \/* How to dispose of the results.  On of SRT_* above. *\/$/;"	m	struct:SelectDest	file:
eDest	src/sqliteInt.h	/^  u8 eDest;            \/* How to dispose of the results.  On of SRT_* above. *\/$/;"	m	struct:SelectDest
eDest	tsrc/sqliteInt.h	/^  u8 eDest;            \/* How to dispose of the results.  On of SRT_* above. *\/$/;"	m	struct:SelectDest
eDetail	ext/fts5/fts5Int.h	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config
eDetail	ext/fts5/fts5_hash.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	fts5.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	fts5.c	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config	file:
eDetail	sqlite3.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	sqlite3.c	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config	file:
eDetail	tsrc/fts5.c	/^  int eDetail;                    \/* Copy of Fts5Config.eDetail *\/$/;"	m	struct:Fts5Hash	file:
eDetail	tsrc/fts5.c	/^  int eDetail;                    \/* FTS5_DETAIL_XXX value *\/$/;"	m	struct:Fts5Config	file:
eDistinct	sqlite3.c	/^  u8 eDistinct;             \/* One of the WHERE_DISTINCT_* values *\/$/;"	m	struct:WhereInfo	file:
eDistinct	src/whereInt.h	/^  u8 eDistinct;             \/* One of the WHERE_DISTINCT_* values *\/$/;"	m	struct:WhereInfo
eDistinct	tsrc/whereInt.h	/^  u8 eDistinct;             \/* One of the WHERE_DISTINCT_* values *\/$/;"	m	struct:WhereInfo
eEndLoopOp	sqlite3.c	/^        u8 eEndLoopOp;         \/* IN Loop terminator. OP_Next or OP_Prev *\/$/;"	m	struct:WhereLevel::__anon96::__anon97::InLoop	file:
eEndLoopOp	src/whereInt.h	/^        u8 eEndLoopOp;         \/* IN Loop terminator. OP_Next or OP_Prev *\/$/;"	m	struct:WhereLevel::__anon45::__anon46::InLoop
eEndLoopOp	tsrc/whereInt.h	/^        u8 eEndLoopOp;         \/* IN Loop terminator. OP_Next or OP_Prev *\/$/;"	m	struct:WhereLevel::__anon10::__anon11::InLoop
eEvalmode	ext/fts3/fts3Int.h	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor
eEvalmode	sqlite3.c	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor	file:
eEvalmode	tsrc/fts3Int.h	/^  int eEvalmode;                  \/* An FTS3_EVAL_XX constant *\/$/;"	m	struct:Fts3Cursor
eFWErr	sqlite3.c	/^  int eFWErr;                     \/* Non-zero if in an error state *\/$/;"	m	struct:PmaWriter	file:
eFWErr	src/vdbesort.c	/^  int eFWErr;                     \/* Non-zero if in an error state *\/$/;"	m	struct:PmaWriter	file:
eFWErr	tsrc/vdbesort.c	/^  int eFWErr;                     \/* Non-zero if in an error state *\/$/;"	m	struct:PmaWriter	file:
eFault	src/test_vfs.c	/^  int eFault;                     \/* A FAULT_INJECT_* value *\/$/;"	m	struct:TestFaultInject	file:
eFileLock	sqlite3.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	sqlite3.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eFileLock	src/os_unix.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	src/os_unix.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eFileLock	tsrc/os_unix.c	/^  unsigned char eFileLock;            \/* The type of lock held on this fd *\/$/;"	m	struct:unixFile	file:
eFileLock	tsrc/os_unix.c	/^  unsigned char eFileLock;        \/* One of SHARED_LOCK, RESERVED_LOCK etc. *\/$/;"	m	struct:unixInodeInfo	file:
eFiletype	ext/misc/vfsstat.c	/^  unsigned char eFiletype;        \/* What type of file is this *\/$/;"	m	struct:VStatFile	file:
eHalt	ext/async/sqlite3async.c	/^  volatile int eHalt;          \/* One of the SQLITEASYNC_HALT_XXX values *\/$/;"	m	struct:TestAsyncStaticData	file:
eLock	ext/async/sqlite3async.c	/^  int eLock;                \/* Internally visible lock state (sqlite pov) *\/$/;"	m	struct:AsyncFileLock	file:
eLock	ext/async/sqlite3async.c	/^  int eLock;$/;"	m	struct:AsyncLock	file:
eLock	sqlite3.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	sqlite3.c	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock	file:
eLock	src/btreeInt.h	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock
eLock	src/pager.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eLock	src/test_journal.c	/^  int eLock;               \/* Current lock held on the file *\/$/;"	m	struct:jt_file	file:
eLock	tsrc/btreeInt.h	/^  u8 eLock;             \/* READ_LOCK or WRITE_LOCK *\/$/;"	m	struct:BtLock
eLock	tsrc/pager.c	/^  u8 eLock;                   \/* Current lock held on database file *\/$/;"	m	struct:Pager	file:
eMatchOp	sqlite3.c	/^  u8 eMatchOp;            \/* Op for vtab MATCH\/LIKE\/GLOB\/REGEXP terms *\/$/;"	m	struct:WhereTerm	file:
eMatchOp	src/whereInt.h	/^  u8 eMatchOp;            \/* Op for vtab MATCH\/LIKE\/GLOB\/REGEXP terms *\/$/;"	m	struct:WhereTerm
eMatchOp	tsrc/whereInt.h	/^  u8 eMatchOp;            \/* Op for vtab MATCH\/LIKE\/GLOB\/REGEXP terms *\/$/;"	m	struct:WhereTerm
eMode	test/tt3_checkpoint.c	/^  int eMode;$/;"	m	struct:CheckpointStarvationCtx	file:
eOnePass	sqlite3.c	/^  u8 eOnePass;              \/* ONEPASS_OFF, or _SINGLE, or _MULTI *\/$/;"	m	struct:WhereInfo	file:
eOnePass	src/whereInt.h	/^  u8 eOnePass;              \/* ONEPASS_OFF, or _SINGLE, or _MULTI *\/$/;"	m	struct:WhereInfo
eOnePass	tsrc/whereInt.h	/^  u8 eOnePass;              \/* ONEPASS_OFF, or _SINGLE, or _MULTI *\/$/;"	m	struct:WhereInfo
eOperator	parse.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	sqlite3.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	sqlite3.c	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm	file:
eOperator	src/whereInt.h	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm
eOperator	tsrc/parse.c	/^  Token eOperator;  \/* "like" or "glob" or "regexp" *\/$/;"	m	struct:LikeOp	file:
eOperator	tsrc/whereInt.h	/^  u16 eOperator;          \/* A WO_xx value describing <op> *\/$/;"	m	struct:WhereTerm
eOrconf	sqlite3.c	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse	file:
eOrconf	src/sqliteInt.h	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse
eOrconf	tsrc/sqliteInt.h	/^  u8 eOrconf;          \/* Default ON CONFLICT policy for trigger steps *\/$/;"	m	struct:Parse
eParentWithin	ext/rtree/sqlite3rtree.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
eParentWithin	sqlite3.c	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
eParentWithin	sqlite3.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
eParentWithin	tsrc/sqlite3.h	/^  int eParentWithin;                \/* Visibility of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
ePlan	ext/fts5/fts5_main.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePlan	fts5.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePlan	sqlite3.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePlan	tsrc/fts5.c	/^  int ePlan;                      \/* FTS5_PLAN_XXX value *\/$/;"	m	struct:Fts5Cursor	file:
ePragTyp	sqlite3.c	/^  u8 ePragTyp;              \/* PragTyp_XXX value *\/$/;"	m	struct:sPragmaNames	file:
ePragTyp	src/pragma.h	/^  u8 ePragTyp;              \/* PragTyp_XXX value *\/$/;"	m	struct:sPragmaNames
ePragTyp	tsrc/pragma.h	/^  u8 ePragTyp;              \/* PragTyp_XXX value *\/$/;"	m	struct:sPragmaNames
eScoreType	src/test_rtree.c	/^  int eScoreType;$/;"	m	struct:Circle	file:
eSearch	ext/fts3/fts3Int.h	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor
eSearch	sqlite3.c	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor	file:
eSearch	tsrc/fts3Int.h	/^  i16 eSearch;                    \/* Search strategy (see below) *\/$/;"	m	struct:Fts3Cursor
eStage	ext/rbu/sqlite3rbu.c	/^  int eStage;                     \/* Value of RBU_STATE_STAGE field *\/$/;"	m	struct:sqlite3rbu	file:
eStage	ext/rbu/sqlite3rbu.c	/^  int eStage;$/;"	m	struct:RbuState	file:
eStage	sqlite3.c	/^  int eStage;                     \/* Value of RBU_STATE_STAGE field *\/$/;"	m	struct:sqlite3rbu	file:
eStage	sqlite3.c	/^  int eStage;$/;"	m	struct:RbuState	file:
eStage	tsrc/sqlite3rbu.c	/^  int eStage;                     \/* Value of RBU_STATE_STAGE field *\/$/;"	m	struct:sqlite3rbu	file:
eStage	tsrc/sqlite3rbu.c	/^  int eStage;$/;"	m	struct:RbuState	file:
eState	ext/fts5/fts5_index.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	ext/fts5/fts5_main.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	fts5.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	fts5.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	sqlite3.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	sqlite3.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	sqlite3.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	sqlite3.c	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor	file:
eState	src/btreeInt.h	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor
eState	src/pager.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eState	tsrc/btreeInt.h	/^  u8 eState;                \/* One of the CURSOR_XXX constants (see below) *\/$/;"	m	struct:BtCursor
eState	tsrc/fts5.c	/^  int eState;                     \/* 0==closed, 1==open, 2==synced *\/$/;"	m	struct:Fts5TransactionState	file:
eState	tsrc/fts5.c	/^  int eState;                     \/* See above *\/$/;"	m	struct:PoslistCallbackCtx	file:
eState	tsrc/pager.c	/^  u8 eState;                  \/* Pager state (OPEN, READER, WRITER_LOCKED..) *\/$/;"	m	struct:Pager	file:
eSubtype	sqlite3.c	/^  u8  eSubtype;       \/* Subtype for this value *\/$/;"	m	struct:Mem	file:
eSubtype	src/vdbeInt.h	/^  u8  eSubtype;       \/* Subtype for this value *\/$/;"	m	struct:Mem
eSubtype	tsrc/vdbeInt.h	/^  u8  eSubtype;       \/* Subtype for this value *\/$/;"	m	struct:Mem
eTemp	test/speedtest1.c	/^  int eTemp;                 \/* 0: no TEMP.  9: always TEMP. *\/$/;"	m	struct:Global	file:
eTnctType	sqlite3.c	/^  u8 eTnctType;   \/* One of the WHERE_DISTINCT_* operators *\/$/;"	m	struct:DistinctCtx	file:
eTnctType	src/select.c	/^  u8 eTnctType;   \/* One of the WHERE_DISTINCT_* operators *\/$/;"	m	struct:DistinctCtx	file:
eTnctType	tsrc/select.c	/^  u8 eTnctType;   \/* One of the WHERE_DISTINCT_* operators *\/$/;"	m	struct:DistinctCtx	file:
eTriggerOp	sqlite3.c	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse	file:
eTriggerOp	src/sqliteInt.h	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse
eTriggerOp	tsrc/sqliteInt.h	/^  u8 eTriggerOp;       \/* TK_UPDATE, TK_INSERT or TK_DELETE *\/$/;"	m	struct:Parse
eType	ext/fts3/fts3Int.h	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr
eType	ext/fts5/fts5_expr.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	ext/fts5/fts5_vocab.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	ext/misc/carray.c	/^  unsigned char eType;       \/* One of the CARRAY_type values *\/$/;"	m	struct:carray_cursor	file:
eType	ext/misc/json1.c	/^  u8 eType;                  \/* Type of top-level element *\/$/;"	m	struct:JsonEachCursor	file:
eType	ext/misc/json1.c	/^  u8 eType;              \/* One of the JSON_ type values *\/$/;"	m	struct:JsonNode	file:
eType	ext/rbu/sqlite3rbu.c	/^  int eType;                      \/* Table type - an RBU_PK_XXX value *\/$/;"	m	struct:RbuObjIter	file:
eType	fts5.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	fts5.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	sqlite3.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	sqlite3.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	sqlite3.c	/^  int eType;                      \/* Table type - an RBU_PK_XXX value *\/$/;"	m	struct:RbuObjIter	file:
eType	sqlite3.c	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr	file:
eType	sqlite3.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	sqlite3.c	/^  u8 eType;                  \/* Type of top-level element *\/$/;"	m	struct:JsonEachCursor	file:
eType	sqlite3.c	/^  u8 eType;              \/* One of the JSON_ type values *\/$/;"	m	struct:JsonNode	file:
eType	src/mem2.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	src/test_mutex.c	/^  int eType;$/;"	m	struct:sqlite3_mutex	file:
eType	src/test_onefile.c	/^  int eType;$/;"	m	struct:fs_file	file:
eType	tsrc/fts3Int.h	/^  int eType;                 \/* One of the FTSQUERY_XXX values defined below *\/$/;"	m	struct:Fts3Expr
eType	tsrc/fts5.c	/^  int eType;                      \/* FTS5_VOCAB_COL or ROW *\/$/;"	m	struct:Fts5VocabTable	file:
eType	tsrc/fts5.c	/^  int eType;                      \/* Node type *\/$/;"	m	struct:Fts5ExprNode	file:
eType	tsrc/json1.c	/^  u8 eType;                  \/* Type of top-level element *\/$/;"	m	struct:JsonEachCursor	file:
eType	tsrc/json1.c	/^  u8 eType;              \/* One of the JSON_ type values *\/$/;"	m	struct:JsonNode	file:
eType	tsrc/mem2.c	/^  u8 eType;                           \/* Allocation type code *\/$/;"	m	struct:MemBlockHdr	file:
eType	tsrc/sqlite3rbu.c	/^  int eType;                      \/* Table type - an RBU_PK_XXX value *\/$/;"	m	struct:RbuObjIter	file:
eVal	ext/fts5/fts5_config.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eVal	fts5.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eVal	sqlite3.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eVal	tsrc/fts5.c	/^  int eVal;$/;"	m	struct:Fts5Enum	file:
eWithin	ext/rtree/rtree.c	/^  u8 eWithin;            \/* PARTLY_WITHIN or FULLY_WITHIN *\/$/;"	m	struct:RtreeSearchPoint	file:
eWithin	ext/rtree/sqlite3rtree.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
eWithin	sqlite3.c	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
eWithin	sqlite3.c	/^  u8 eWithin;            \/* PARTLY_WITHIN or FULLY_WITHIN *\/$/;"	m	struct:RtreeSearchPoint	file:
eWithin	sqlite3.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
eWithin	tsrc/rtree.c	/^  u8 eWithin;            \/* PARTLY_WITHIN or FULLY_WITHIN *\/$/;"	m	struct:RtreeSearchPoint	file:
eWithin	tsrc/sqlite3.h	/^  int eWithin;                      \/* OUT: Visiblity *\/$/;"	m	struct:sqlite3_rtree_query_info
e_action	tool/lemon.c	/^enum e_action {$/;"	g	file:
e_assoc	tool/lemon.c	/^enum e_assoc {$/;"	g	file:
e_state	tool/lemon.c	/^enum e_state {$/;"	g	file:
ebcdicToAscii	sqlite3.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
ebcdicToAscii	src/tokenize.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
ebcdicToAscii	tsrc/tokenize.c	/^const unsigned char ebcdicToAscii[] = {$/;"	v
echoBegin	src/test8.c	/^static int echoBegin(sqlite3_vtab *tab){$/;"	f	file:
echoBestIndex	src/test8.c	/^static int echoBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
echoClose	src/test8.c	/^static int echoClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
echoColumn	src/test8.c	/^static int echoColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
echoCommit	src/test8.c	/^static int echoCommit(sqlite3_vtab *tab){$/;"	f	file:
echoConnect	src/test8.c	/^static int echoConnect($/;"	f	file:
echoConstructor	src/test8.c	/^static int echoConstructor($/;"	f	file:
echoCreate	src/test8.c	/^static int echoCreate($/;"	f	file:
echoDeclareVtab	src/test8.c	/^static int echoDeclareVtab($/;"	f	file:
echoDestroy	src/test8.c	/^static int echoDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
echoDestructor	src/test8.c	/^static int echoDestructor(sqlite3_vtab *pVtab){$/;"	f	file:
echoDisconnect	src/test8.c	/^static int echoDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
echoEof	src/test8.c	/^static int echoEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
echoFilter	src/test8.c	/^static int echoFilter($/;"	f	file:
echoFindFunction	src/test8.c	/^static int echoFindFunction($/;"	f	file:
echoModule	src/test8.c	/^static sqlite3_module echoModule = {$/;"	v	file:
echoModuleV2	src/test8.c	/^static sqlite3_module echoModuleV2 = {$/;"	v	file:
echoNext	src/test8.c	/^static int echoNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
echoOn	shell.c	/^  int echoOn;            \/* True to echo input commands *\/$/;"	m	struct:ShellState	file:
echoOn	src/shell.c	/^  int echoOn;            \/* True to echo input commands *\/$/;"	m	struct:ShellState	file:
echoOn	tsrc/shell.c	/^  int echoOn;            \/* True to echo input commands *\/$/;"	m	struct:ShellState	file:
echoOpen	src/test8.c	/^static int echoOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
echoRelease	src/test8.c	/^static int echoRelease(sqlite3_vtab *pVTab, int iSavepoint){$/;"	f	file:
echoRename	src/test8.c	/^static int echoRename(sqlite3_vtab *vtab, const char *zNewName){$/;"	f	file:
echoRollback	src/test8.c	/^static int echoRollback(sqlite3_vtab *tab){$/;"	f	file:
echoRollbackTo	src/test8.c	/^static int echoRollbackTo(sqlite3_vtab *pVTab, int iSavepoint){$/;"	f	file:
echoRowid	src/test8.c	/^static int echoRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
echoSavepoint	src/test8.c	/^static int echoSavepoint(sqlite3_vtab *pVTab, int iSavepoint){$/;"	f	file:
echoSelectList	src/test8.c	/^static char *echoSelectList(echo_vtab *pTab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
echoSync	src/test8.c	/^static int echoSync(sqlite3_vtab *tab){$/;"	f	file:
echoTransactionCall	src/test8.c	/^static int echoTransactionCall(sqlite3_vtab *tab, const char *zCall){$/;"	f	file:
echoUpdate	src/test8.c	/^int echoUpdate($/;"	f
echo_cursor	src/test8.c	/^struct echo_cursor {$/;"	s	file:
echo_cursor	src/test8.c	/^typedef struct echo_cursor echo_cursor;$/;"	t	typeref:struct:echo_cursor	file:
echo_vtab	src/test8.c	/^struct echo_vtab {$/;"	s	file:
echo_vtab	src/test8.c	/^typedef struct echo_vtab echo_vtab;$/;"	t	typeref:struct:echo_vtab	file:
ecmd	parse.y	/^ecmd ::= SEMI.$/;"	l
ecmd	parse.y	/^ecmd ::= explain cmdx SEMI.$/;"	l
ecmd	src/parse.y	/^ecmd ::= SEMI.$/;"	l
ecmd	src/parse.y	/^ecmd ::= explain cmdx SEMI.$/;"	l
editDist3ConfigClear	ext/misc/spellfix.c	/^static void editDist3ConfigClear(EditDist3Config *p){$/;"	f	file:
editDist3ConfigDelete	ext/misc/spellfix.c	/^static void editDist3ConfigDelete(void *pIn){$/;"	f	file:
editDist3ConfigLoad	ext/misc/spellfix.c	/^static int editDist3ConfigLoad($/;"	f	file:
editDist3Core	ext/misc/spellfix.c	/^static int editDist3Core($/;"	f	file:
editDist3FindLang	ext/misc/spellfix.c	/^static const EditDist3Lang *editDist3FindLang($/;"	f	file:
editDist3FromStringDelete	ext/misc/spellfix.c	/^static void editDist3FromStringDelete(EditDist3FromString *p){$/;"	f	file:
editDist3FromStringNew	ext/misc/spellfix.c	/^static EditDist3FromString *editDist3FromStringNew($/;"	f	file:
editDist3Install	ext/misc/spellfix.c	/^static int editDist3Install(sqlite3 *db){$/;"	f	file:
editDist3Lang	ext/misc/spellfix.c	/^static const EditDist3Lang editDist3Lang = { 0, 100, 100, 150, 0 };$/;"	v	file:
editDist3SqlFunc	ext/misc/spellfix.c	/^static void editDist3SqlFunc($/;"	f	file:
editPage	sqlite3.c	/^static int editPage($/;"	f	file:
editPage	src/btree.c	/^static int editPage($/;"	f	file:
editPage	tsrc/btree.c	/^static int editPage($/;"	f	file:
editdist1	ext/misc/spellfix.c	/^static int editdist1(const char *zA, const char *zB, int *pnMatch){$/;"	f	file:
editdistSqlFunc	ext/misc/spellfix.c	/^static void editdistSqlFunc($/;"	f	file:
emit_code	tool/lemon.c	/^PRIVATE void emit_code($/;"	f
emit_destructor_code	tool/lemon.c	/^void emit_destructor_code($/;"	f
emsg	tool/lemon.c	/^static char emsg[] = "Command line syntax error: ";$/;"	v	file:
enable	src/test_malloc.c	/^  u8 enable;              \/* True if enabled *\/$/;"	m	struct:MemFault	file:
enableTimer	shell.c	/^static int enableTimer = 0;$/;"	v	file:
enableTimer	src/shell.c	/^static int enableTimer = 0;$/;"	v	file:
enableTimer	tsrc/shell.c	/^static int enableTimer = 0;$/;"	v	file:
enable_shared_cache	sqlite3.c	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines	file:
enable_shared_cache	sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
enable_shared_cache	src/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
enable_shared_cache	tsrc/sqlite3ext.h	/^  int  (*enable_shared_cache)(int);$/;"	m	struct:sqlite3_api_routines
enable_simulated_io_errors	sqlite3.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	sqlite3.c	13112;"	d	file:
enable_simulated_io_errors	sqlite3.c	50040;"	d	file:
enable_simulated_io_errors	src/pager.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	src/pager.c	3763;"	d	file:
enable_simulated_io_errors	src/pager.h	230;"	d
enable_simulated_io_errors	tsrc/pager.c	/^void enable_simulated_io_errors(void){$/;"	f
enable_simulated_io_errors	tsrc/pager.c	3763;"	d	file:
enable_simulated_io_errors	tsrc/pager.h	230;"	d
enc	sqlite3.c	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem	file:
enc	sqlite3.c	/^  u8 enc;                       \/* Text encoding *\/$/;"	m	struct:sqlite3	file:
enc	sqlite3.c	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq	file:
enc	sqlite3.c	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema	file:
enc	sqlite3.c	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo	file:
enc	src/sqliteInt.h	/^  u8 enc;                       \/* Text encoding *\/$/;"	m	struct:sqlite3
enc	src/sqliteInt.h	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq
enc	src/sqliteInt.h	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema
enc	src/sqliteInt.h	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo
enc	src/vdbeInt.h	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem
enc	tsrc/sqliteInt.h	/^  u8 enc;                       \/* Text encoding *\/$/;"	m	struct:sqlite3
enc	tsrc/sqliteInt.h	/^  u8 enc;               \/* Text encoding handled by xCmp() *\/$/;"	m	struct:CollSeq
enc	tsrc/sqliteInt.h	/^  u8 enc;              \/* Text encoding used by this database *\/$/;"	m	struct:Schema
enc	tsrc/sqliteInt.h	/^  u8 enc;             \/* Text encoding - one of the SQLITE_UTF* values *\/$/;"	m	struct:KeyInfo
enc	tsrc/vdbeInt.h	/^  u8  enc;            \/* SQLITE_UTF8, SQLITE_UTF16BE, SQLITE_UTF16LE *\/$/;"	m	struct:Mem
endTimer	shell.c	/^static void endTimer(void){$/;"	f	file:
endTimer	src/shell.c	/^static void endTimer(void){$/;"	f	file:
endTimer	tsrc/shell.c	/^static void endTimer(void){$/;"	f	file:
end_of_file	tool/GetTclKit.bat	/^:end_of_file$/;"	l
end_of_file	tool/build-all-msvc.bat	/^:end_of_file$/;"	l
endpoint	sqlite3.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
endpoint	src/memjournal.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
endpoint	tsrc/memjournal.c	/^  FilePoint endpoint;             \/* Pointer to the end of the file *\/$/;"	m	struct:MemJournal	file:
endsInWhiteSpace	ext/fts2/fts2.c	/^static int endsInWhiteSpace(StringBuffer *p){$/;"	f	file:
endsInWhiteSpace	tsrc/fts2.c	/^static int endsInWhiteSpace(StringBuffer *p){$/;"	f	file:
enlargeAndAppend	sqlite3.c	/^static void SQLITE_NOINLINE enlargeAndAppend(StrAccum *p, const char *z, int N){$/;"	f	file:
enlargeAndAppend	src/printf.c	/^static void SQLITE_NOINLINE enlargeAndAppend(StrAccum *p, const char *z, int N){$/;"	f	file:
enlargeAndAppend	tsrc/printf.c	/^static void SQLITE_NOINLINE enlargeAndAppend(StrAccum *p, const char *z, int N){$/;"	f	file:
enterJtMutex	src/test_journal.c	/^static void enterJtMutex(void){$/;"	f	file:
enterMutex	sqlite3.c	/^static void enterMutex(void){$/;"	f	file:
enterMutex	src/notify.c	/^static void enterMutex(void){$/;"	f	file:
enterMutex	tsrc/notify.c	/^static void enterMutex(void){$/;"	f	file:
entry	src/test_fs.c	/^  struct DIRENT entry;            \/* Current entry *\/$/;"	m	struct:FsdirCsr	typeref:struct:FsdirCsr::DIRENT	file:
eof	ext/fts1/fts1.c	/^  int eof;                         \/* True if at End Of Results *\/$/;"	m	struct:fulltext_cursor	file:
eof	ext/fts1/fulltext.c	/^  int eof;$/;"	m	struct:fulltext_cursor	file:
eof	ext/fts2/fts2.c	/^  int eof;                         \/* True if at End Of Results *\/$/;"	m	struct:fulltext_cursor	file:
eof	ext/fts2/fts2.c	/^  int eof;                  \/* we've seen SQLITE_DONE from pStmt. *\/$/;"	m	struct:LeavesReader	file:
eof	tsrc/fts1.c	/^  int eof;                         \/* True if at End Of Results *\/$/;"	m	struct:fulltext_cursor	file:
eof	tsrc/fts2.c	/^  int eof;                         \/* True if at End Of Results *\/$/;"	m	struct:fulltext_cursor	file:
eof	tsrc/fts2.c	/^  int eof;                  \/* we've seen SQLITE_DONE from pStmt. *\/$/;"	m	struct:LeavesReader	file:
eqSeen	sqlite3.c	/^  u8 eqSeen;          \/* True if an equality comparison has been seen *\/$/;"	m	struct:UnpackedRecord	file:
eqSeen	src/sqliteInt.h	/^  u8 eqSeen;          \/* True if an equality comparison has been seen *\/$/;"	m	struct:UnpackedRecord
eqSeen	tsrc/sqliteInt.h	/^  u8 eqSeen;          \/* True if an equality comparison has been seen *\/$/;"	m	struct:UnpackedRecord
err	src/test1.c	/^  int err;            \/* True if an error occurs *\/$/;"	m	struct:win32FileLocker	file:
errCode	sqlite3.c	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3	file:
errCode	sqlite3.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errCode	sqlite3.c	/^  u8 errCode;         \/* Error detected by xRecordCompare (CORRUPT or NOMEM) *\/$/;"	m	struct:UnpackedRecord	file:
errCode	src/pager.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errCode	src/sqliteInt.h	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3
errCode	src/sqliteInt.h	/^  u8 errCode;         \/* Error detected by xRecordCompare (CORRUPT or NOMEM) *\/$/;"	m	struct:UnpackedRecord
errCode	src/test_server.c	/^  int errCode;                 \/* Error code returned *\/$/;"	m	struct:SqlMessage	file:
errCode	tsrc/pager.c	/^  int errCode;                \/* One of several kinds of errors *\/$/;"	m	struct:Pager	file:
errCode	tsrc/sqliteInt.h	/^  int errCode;                  \/* Most recent error code (SQLITE_*) *\/$/;"	m	struct:sqlite3
errCode	tsrc/sqliteInt.h	/^  u8 errCode;         \/* Error detected by xRecordCompare (CORRUPT or NOMEM) *\/$/;"	m	struct:UnpackedRecord
errMask	sqlite3.c	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3	file:
errMask	src/sqliteInt.h	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3
errMask	tsrc/sqliteInt.h	/^  int errMask;                  \/* & result codes with this before returning *\/$/;"	m	struct:sqlite3
errMsg	sqlite3.c	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk	file:
errMsg	src/btreeInt.h	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk
errMsg	tsrc/btreeInt.h	/^  StrAccum errMsg;  \/* Accumulate the error message text here *\/$/;"	m	struct:IntegrityCk
errcode	sqlite3.c	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines	file:
errcode	sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errcode	src/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errcode	tsrc/sqlite3ext.h	/^  int  (*errcode)(sqlite3*db);$/;"	m	struct:sqlite3_api_routines
errline	tool/lemon.c	/^static void errline(int n, int k, FILE *err)$/;"	f	file:
errlogFunc	sqlite3.c	/^static void errlogFunc($/;"	f	file:
errlogFunc	src/func.c	/^static void errlogFunc($/;"	f	file:
errlogFunc	tsrc/func.c	/^static void errlogFunc($/;"	f	file:
errmsg	sqlite3.c	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg	sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg	src/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg	tsrc/sqlite3ext.h	/^  const char * (*errmsg)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	sqlite3.c	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
errmsg16	sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	src/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
errmsg16	tsrc/sqlite3ext.h	/^  const void * (*errmsg16)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
error	tool/lemon.c	/^  char *error;             \/* Code to execute when an error is seen *\/$/;"	m	struct:lemon	file:
errorAction	sqlite3.c	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe	file:
errorAction	src/vdbeInt.h	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe
errorAction	tsrc/vdbeInt.h	/^  u8 errorAction;         \/* Recovery action to do in case of an error *\/$/;"	m	struct:Vdbe
errorLogCallback	ext/misc/scrub.c	/^static void errorLogCallback(void *pNotUsed, int iErr, const char *zMsg){$/;"	f	file:
errorMessage	mptest/mptest.c	/^static void errorMessage(const char *zFormat, ...){$/;"	f	file:
error_out	tool/loadfts.c	/^static void error_out(const char *zText){$/;"	f	file:
errorcnt	tool/lemon.c	/^  int errorcnt;            \/* Number of errors *\/$/;"	m	struct:lemon	file:
errorcnt	tool/lemon.c	/^  int errorcnt;         \/* Number of errors so far *\/$/;"	m	struct:pstate	file:
errors	tool/GetTclKit.bat	/^:errors$/;"	l
errors	tool/build-all-msvc.bat	/^:errors$/;"	l
errstr	sqlite3.c	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines	file:
errstr	sqlite3ext.h	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines
errstr	src/sqlite3ext.h	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines
errstr	tsrc/sqlite3ext.h	/^  const char *(*errstr)(int);$/;"	m	struct:sqlite3_api_routines
errstream	tool/lemon.c	/^static FILE *errstream;$/;"	v	file:
errsym	tool/lemon.c	/^  struct symbol *errsym;   \/* The error symbol *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
escapeSubSpec	tool/mkmsvcmin.tcl	/^proc escapeSubSpec { data } {$/;"	p
estLog	sqlite3.c	/^static LogEst estLog(LogEst N){$/;"	f	file:
estLog	src/where.c	/^static LogEst estLog(LogEst N){$/;"	f	file:
estLog	tsrc/where.c	/^static LogEst estLog(LogEst N){$/;"	f	file:
est_square_root	test/speedtest1.c	/^static int est_square_root(int x){$/;"	f	file:
estimateIndexWidth	sqlite3.c	/^static void estimateIndexWidth(Index *pIdx){$/;"	f	file:
estimateIndexWidth	src/build.c	/^static void estimateIndexWidth(Index *pIdx){$/;"	f	file:
estimateIndexWidth	tsrc/build.c	/^static void estimateIndexWidth(Index *pIdx){$/;"	f	file:
estimateTableWidth	sqlite3.c	/^static void estimateTableWidth(Table *pTab){$/;"	f	file:
estimateTableWidth	src/build.c	/^static void estimateTableWidth(Table *pTab){$/;"	f	file:
estimateTableWidth	tsrc/build.c	/^static void estimateTableWidth(Table *pTab){$/;"	f	file:
estimatedCost	sqlite3.c	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedCost	sqlite3.h	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedCost	tsrc/sqlite3.h	/^  double estimatedCost;           \/* Estimated cost of using this index *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	sqlite3.c	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info	file:
estimatedRows	sqlite3.h	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
estimatedRows	tsrc/sqlite3.h	/^  sqlite3_int64 estimatedRows;    \/* Estimated number of rows returned *\/$/;"	m	struct:sqlite3_index_info
etBUFSIZE	sqlite3.c	24826;"	d	file:
etBUFSIZE	src/printf.c	167;"	d	file:
etBUFSIZE	tsrc/printf.c	167;"	d	file:
etByte	sqlite3.c	/^typedef unsigned char etByte;$/;"	t	file:
etByte	src/printf.c	/^typedef unsigned char etByte;$/;"	t	file:
etByte	tsrc/printf.c	/^typedef unsigned char etByte;$/;"	t	file:
etCHARX	sqlite3.c	24685;"	d	file:
etCHARX	src/printf.c	26;"	d	file:
etCHARX	tsrc/printf.c	26;"	d	file:
etDYNSTRING	sqlite3.c	24683;"	d	file:
etDYNSTRING	src/printf.c	24;"	d	file:
etDYNSTRING	tsrc/printf.c	24;"	d	file:
etEXP	sqlite3.c	24679;"	d	file:
etEXP	src/printf.c	20;"	d	file:
etEXP	tsrc/printf.c	20;"	d	file:
etFLOAT	sqlite3.c	24678;"	d	file:
etFLOAT	src/printf.c	19;"	d	file:
etFLOAT	tsrc/printf.c	19;"	d	file:
etGENERIC	sqlite3.c	24680;"	d	file:
etGENERIC	src/printf.c	21;"	d	file:
etGENERIC	tsrc/printf.c	21;"	d	file:
etINVALID	sqlite3.c	24696;"	d	file:
etINVALID	src/printf.c	37;"	d	file:
etINVALID	tsrc/printf.c	37;"	d	file:
etORDINAL	sqlite3.c	24694;"	d	file:
etORDINAL	src/printf.c	35;"	d	file:
etORDINAL	tsrc/printf.c	35;"	d	file:
etPERCENT	sqlite3.c	24684;"	d	file:
etPERCENT	src/printf.c	25;"	d	file:
etPERCENT	tsrc/printf.c	25;"	d	file:
etPOINTER	sqlite3.c	24692;"	d	file:
etPOINTER	src/printf.c	33;"	d	file:
etPOINTER	tsrc/printf.c	33;"	d	file:
etRADIX	sqlite3.c	24677;"	d	file:
etRADIX	src/printf.c	18;"	d	file:
etRADIX	tsrc/printf.c	18;"	d	file:
etSIZE	sqlite3.c	24681;"	d	file:
etSIZE	src/printf.c	22;"	d	file:
etSIZE	tsrc/printf.c	22;"	d	file:
etSQLESCAPE	sqlite3.c	24687;"	d	file:
etSQLESCAPE	src/printf.c	28;"	d	file:
etSQLESCAPE	tsrc/printf.c	28;"	d	file:
etSQLESCAPE2	sqlite3.c	24688;"	d	file:
etSQLESCAPE2	src/printf.c	29;"	d	file:
etSQLESCAPE2	tsrc/printf.c	29;"	d	file:
etSQLESCAPE3	sqlite3.c	24693;"	d	file:
etSQLESCAPE3	src/printf.c	34;"	d	file:
etSQLESCAPE3	tsrc/printf.c	34;"	d	file:
etSRCLIST	sqlite3.c	24691;"	d	file:
etSRCLIST	src/printf.c	32;"	d	file:
etSRCLIST	tsrc/printf.c	32;"	d	file:
etSTRING	sqlite3.c	24682;"	d	file:
etSTRING	src/printf.c	23;"	d	file:
etSTRING	tsrc/printf.c	23;"	d	file:
etTOKEN	sqlite3.c	24690;"	d	file:
etTOKEN	src/printf.c	31;"	d	file:
etTOKEN	tsrc/printf.c	31;"	d	file:
et_getdigit	sqlite3.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_getdigit	src/printf.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_getdigit	tsrc/printf.c	/^static char et_getdigit(LONGDOUBLE_TYPE *val, int *cnt){$/;"	f	file:
et_info	sqlite3.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	sqlite3.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
et_info	src/printf.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	src/printf.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
et_info	tsrc/printf.c	/^typedef struct et_info {   \/* Information about each format field *\/$/;"	s	file:
et_info	tsrc/printf.c	/^} et_info;$/;"	t	typeref:struct:et_info	file:
evName	src/test1.c	/^  char *evName;       \/* Name of event to signal thread startup *\/$/;"	m	struct:win32FileLocker	file:
evalCallback	mptest/mptest.c	/^static int evalCallback(void *pCData, int argc, char **argv, char **azCol){$/;"	f	file:
evalFunc	mptest/mptest.c	/^static void evalFunc($/;"	f	file:
evalSql	mptest/mptest.c	/^static int evalSql(String *p, const char *zFormat, ...){$/;"	f	file:
exclMask	sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	sqlite3.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	sqlite3.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclMask	src/os_unix.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	src/os_unix.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclMask	src/os_win.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
exclMask	tsrc/os_unix.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShm	file:
exclMask	tsrc/os_unix.c	/^  u8 exclMask;               \/* Mask of exclusive locks held *\/$/;"	m	struct:unixShmNode	file:
exclMask	tsrc/os_win.c	/^  u16 exclMask;              \/* Mask of exclusive locks held *\/$/;"	m	struct:winShm	file:
excllock	src/test_vfs.c	/^  u32 excllock;                   \/* Mask of exclusive locks *\/$/;"	m	struct:TestvfsFd	file:
exclusiveMode	sqlite3.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	sqlite3.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exclusiveMode	src/pager.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	src/wal.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exclusiveMode	tsrc/pager.c	/^  u8 exclusiveMode;           \/* Boolean. True if locking_mode==EXCLUSIVE *\/$/;"	m	struct:Pager	file:
exclusiveMode	tsrc/wal.c	/^  u8 exclusiveMode;          \/* Non-zero if connection is in exclusive mode *\/$/;"	m	struct:Wal	file:
exec	sqlite3.c	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines	file:
exec	sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
exec	src/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
exec	tsrc/sqlite3ext.h	/^  int  (*exec)(sqlite3*,const char*,sqlite3_callback,void*,char**);$/;"	m	struct:sqlite3_api_routines
execCallback	tool/fuzzershell.c	/^static int execCallback(void *NotUsed, int argc, char **argv, char **colv){$/;"	f	file:
execCallback	tool/rollback-test.c	/^static int execCallback(void *NotUsed, int nArg, char **azArg, char **azCol){$/;"	f	file:
execExecSql	sqlite3.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execExecSql	src/vacuum.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execExecSql	tool/fast_vacuum.c	/^static void execExecSql(sqlite3 *db, const char *zSql){$/;"	f	file:
execExecSql	tsrc/vacuum.c	/^static int execExecSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execFuncCallback	src/test1.c	/^static int execFuncCallback(void *pData, int argc, char **argv, char **NotUsed){$/;"	f	file:
execNoop	tool/fuzzershell.c	/^static int execNoop(void *NotUsed, int argc, char **argv, char **colv){$/;"	f	file:
execSql	sqlite3.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSql	src/vacuum.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
execSql	tool/fast_vacuum.c	/^static void execSql(sqlite3 *db, const char *zSql){$/;"	f	file:
execSql	tsrc/vacuum.c	/^static int execSql(sqlite3 *db, char **pzErrMsg, const char *zSql){$/;"	f	file:
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prepared_stmt	shell.c	/^static void exec_prepared_stmt($/;"	f	file:
exec_prepared_stmt	src/shell.c	/^static void exec_prepared_stmt($/;"	f	file:
exec_prepared_stmt	tsrc/shell.c	/^static void exec_prepared_stmt($/;"	f	file:
exec_printf_cb	src/test1.c	/^static int exec_printf_cb(void *pArg, int argc, char **argv, char **name){$/;"	f	file:
execpresql	test/tester.tcl	/^proc execpresql {handle args} {$/;"	p
execsql	test/tester.tcl	/^proc execsql {sql {db db}} {$/;"	p
execsql	test/thread_common.tcl	/^  proc execsql {sql} {$/;"	p
execsql	test/threadtest3.c	49;"	d	file:
execsql2	test/tester.tcl	/^proc execsql2 {sql} {$/;"	p
execsql_i64	test/threadtest3.c	47;"	d	file:
execsql_i64_x	test/threadtest3.c	/^static i64 execsql_i64_x($/;"	f	file:
execsql_text	test/threadtest3.c	48;"	d	file:
execsql_text_x	test/threadtest3.c	/^static char * execsql_text_x($/;"	f	file:
execsql_timed	test/tester.tcl	/^proc execsql_timed {sql {db db}} {$/;"	p
exitCode	tool/GetFile.cs	/^        private static ExitCode exitCode = ExitCode.Success;$/;"	f	class:GetFile.Program	file:
expanded_sql	sqlite3.c	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expanded_sql	sqlite3ext.h	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expanded_sql	src/sqlite3ext.h	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expanded_sql	tsrc/sqlite3ext.h	/^  char *(*expanded_sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expired	sqlite3.c	/^  bft expired:1;          \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe	file:
expired	sqlite3.c	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
expired	sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expired	src/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expired	src/vdbeInt.h	/^  bft expired:1;          \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe
expired	tsrc/sqlite3ext.h	/^  int  (*expired)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
expired	tsrc/vdbeInt.h	/^  bft expired:1;          \/* True if the VM needs to be recompiled *\/$/;"	m	struct:Vdbe
explain	parse.y	/^explain ::= .$/;"	l
explain	parse.y	/^explain ::= EXPLAIN QUERY PLAN.   { pParse->explain = 2; }$/;"	l
explain	parse.y	/^explain ::= EXPLAIN.              { pParse->explain = 1; }$/;"	l
explain	sqlite3.c	/^  bft explain:2;          \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe	file:
explain	sqlite3.c	/^  u8 explain;               \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse	file:
explain	src/parse.y	/^explain ::= .$/;"	l
explain	src/parse.y	/^explain ::= EXPLAIN QUERY PLAN.   { pParse->explain = 2; }$/;"	l
explain	src/parse.y	/^explain ::= EXPLAIN.              { pParse->explain = 1; }$/;"	l
explain	src/sqliteInt.h	/^  u8 explain;               \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse
explain	src/vdbeInt.h	/^  bft explain:2;          \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe
explain	test/tester.tcl	/^proc explain {sql {db db}} {$/;"	p
explain	tsrc/sqliteInt.h	/^  u8 explain;               \/* True if the EXPLAIN flag is found on the query *\/$/;"	m	struct:Parse
explain	tsrc/vdbeInt.h	/^  bft explain:2;          \/* True if EXPLAIN present on SQL command *\/$/;"	m	struct:Vdbe
explainAppendTerm	sqlite3.c	/^static void explainAppendTerm($/;"	f	file:
explainAppendTerm	src/wherecode.c	/^static void explainAppendTerm($/;"	f	file:
explainAppendTerm	tsrc/wherecode.c	/^static void explainAppendTerm($/;"	f	file:
explainComposite	sqlite3.c	/^static void explainComposite($/;"	f	file:
explainComposite	sqlite3.c	114689;"	d	file:
explainComposite	src/select.c	/^static void explainComposite($/;"	f	file:
explainComposite	src/select.c	1201;"	d	file:
explainComposite	tsrc/select.c	/^static void explainComposite($/;"	f	file:
explainComposite	tsrc/select.c	1201;"	d	file:
explainIndexColumnName	sqlite3.c	/^static const char *explainIndexColumnName(Index *pIdx, int i){$/;"	f	file:
explainIndexColumnName	src/wherecode.c	/^static const char *explainIndexColumnName(Index *pIdx, int i){$/;"	f	file:
explainIndexColumnName	tsrc/wherecode.c	/^static const char *explainIndexColumnName(Index *pIdx, int i){$/;"	f	file:
explainIndexRange	sqlite3.c	/^static void explainIndexRange(StrAccum *pStr, WhereLoop *pLoop){$/;"	f	file:
explainIndexRange	src/wherecode.c	/^static void explainIndexRange(StrAccum *pStr, WhereLoop *pLoop){$/;"	f	file:
explainIndexRange	tsrc/wherecode.c	/^static void explainIndexRange(StrAccum *pStr, WhereLoop *pLoop){$/;"	f	file:
explainSetInteger	sqlite3.c	114647;"	d	file:
explainSetInteger	sqlite3.c	114652;"	d	file:
explainSetInteger	src/select.c	1159;"	d	file:
explainSetInteger	src/select.c	1164;"	d	file:
explainSetInteger	tsrc/select.c	1159;"	d	file:
explainSetInteger	tsrc/select.c	1164;"	d	file:
explainSimpleCount	sqlite3.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	sqlite3.c	118301;"	d	file:
explainSimpleCount	src/select.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	src/select.c	4813;"	d	file:
explainSimpleCount	tsrc/select.c	/^static void explainSimpleCount($/;"	f	file:
explainSimpleCount	tsrc/select.c	4813;"	d	file:
explainTempTable	sqlite3.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	sqlite3.c	114651;"	d	file:
explainTempTable	src/select.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	src/select.c	1163;"	d	file:
explainTempTable	tsrc/select.c	/^static void explainTempTable(Parse *pParse, const char *zUsage){$/;"	f	file:
explainTempTable	tsrc/select.c	1163;"	d	file:
explain_data_delete	shell.c	/^static void explain_data_delete(ShellState *p){$/;"	f	file:
explain_data_delete	src/shell.c	/^static void explain_data_delete(ShellState *p){$/;"	f	file:
explain_data_delete	tsrc/shell.c	/^static void explain_data_delete(ShellState *p){$/;"	f	file:
explain_data_prepare	shell.c	/^static void explain_data_prepare(ShellState *p, sqlite3_stmt *pSql){$/;"	f	file:
explain_data_prepare	src/shell.c	/^static void explain_data_prepare(ShellState *p, sqlite3_stmt *pSql){$/;"	f	file:
explain_data_prepare	tsrc/shell.c	/^static void explain_data_prepare(ShellState *p, sqlite3_stmt *pSql){$/;"	f	file:
explain_i	test/tester.tcl	/^proc explain_i {sql {db db}} {$/;"	p
explain_no_trace	test/tester.tcl	/^proc explain_no_trace {sql} {$/;"	p
expmask	sqlite3.c	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe	file:
expmask	src/vdbeInt.h	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe
expmask	tsrc/vdbeInt.h	/^  u32 expmask;            \/* Binding to these vars invalidates VM *\/$/;"	m	struct:Vdbe
exprAlwaysFalse	sqlite3.c	/^static int exprAlwaysFalse(Expr *p){$/;"	f	file:
exprAlwaysFalse	src/expr.c	/^static int exprAlwaysFalse(Expr *p){$/;"	f	file:
exprAlwaysFalse	tsrc/expr.c	/^static int exprAlwaysFalse(Expr *p){$/;"	f	file:
exprAlwaysTrue	sqlite3.c	/^static int exprAlwaysTrue(Expr *p){$/;"	f	file:
exprAlwaysTrue	src/expr.c	/^static int exprAlwaysTrue(Expr *p){$/;"	f	file:
exprAlwaysTrue	tsrc/expr.c	/^static int exprAlwaysTrue(Expr *p){$/;"	f	file:
exprAnalyze	sqlite3.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyze	src/whereexpr.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyze	tsrc/whereexpr.c	/^static void exprAnalyze($/;"	f	file:
exprAnalyzeOrTerm	sqlite3.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprAnalyzeOrTerm	src/whereexpr.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprAnalyzeOrTerm	tsrc/whereexpr.c	/^static void exprAnalyzeOrTerm($/;"	f	file:
exprCodeBetween	sqlite3.c	/^static void exprCodeBetween($/;"	f	file:
exprCodeBetween	src/expr.c	/^static void exprCodeBetween($/;"	f	file:
exprCodeBetween	tsrc/expr.c	/^static void exprCodeBetween($/;"	f	file:
exprCommute	sqlite3.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprCommute	src/whereexpr.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprCommute	tsrc/whereexpr.c	/^static void exprCommute(Parse *pParse, Expr *pExpr){$/;"	f	file:
exprDup	sqlite3.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int dupFlags, u8 **pzBuffer){$/;"	f	file:
exprDup	src/expr.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int dupFlags, u8 **pzBuffer){$/;"	f	file:
exprDup	tsrc/expr.c	/^static Expr *exprDup(sqlite3 *db, Expr *p, int dupFlags, u8 **pzBuffer){$/;"	f	file:
exprIdxCover	sqlite3.c	/^static int exprIdxCover(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprIdxCover	src/expr.c	/^static int exprIdxCover(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprIdxCover	tsrc/expr.c	/^static int exprIdxCover(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprIsConst	sqlite3.c	/^static int exprIsConst(Expr *p, int initFlag, int iCur){$/;"	f	file:
exprIsConst	src/expr.c	/^static int exprIsConst(Expr *p, int initFlag, int iCur){$/;"	f	file:
exprIsConst	tsrc/expr.c	/^static int exprIsConst(Expr *p, int initFlag, int iCur){$/;"	f	file:
exprListDeleteNN	sqlite3.c	/^static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList){$/;"	f	file:
exprListDeleteNN	src/expr.c	/^static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList){$/;"	f	file:
exprListDeleteNN	tsrc/expr.c	/^static SQLITE_NOINLINE void exprListDeleteNN(sqlite3 *db, ExprList *pList){$/;"	f	file:
exprMightBeIndexed	sqlite3.c	/^static int exprMightBeIndexed($/;"	f	file:
exprMightBeIndexed	src/whereexpr.c	/^static int exprMightBeIndexed($/;"	f	file:
exprMightBeIndexed	tsrc/whereexpr.c	/^static int exprMightBeIndexed($/;"	f	file:
exprNodeIsConstant	sqlite3.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNodeIsConstant	src/expr.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNodeIsConstant	tsrc/expr.c	/^static int exprNodeIsConstant(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprNot	parse.c	/^  static void exprNot(Parse *pParse, int doNot, ExprSpan *pSpan){$/;"	f	file:
exprNot	sqlite3.c	/^  static void exprNot(Parse *pParse, int doNot, ExprSpan *pSpan){$/;"	f	file:
exprNot	tsrc/parse.c	/^  static void exprNot(Parse *pParse, int doNot, ExprSpan *pSpan){$/;"	f	file:
exprProbability	sqlite3.c	/^static int exprProbability(Expr *p){$/;"	f	file:
exprProbability	src/resolve.c	/^static int exprProbability(Expr *p){$/;"	f	file:
exprProbability	tsrc/resolve.c	/^static int exprProbability(Expr *p){$/;"	f	file:
exprSelectUsage	sqlite3.c	/^static Bitmask exprSelectUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSelectUsage	src/whereexpr.c	/^static Bitmask exprSelectUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSelectUsage	tsrc/whereexpr.c	/^static Bitmask exprSelectUsage(WhereMaskSet *pMaskSet, Select *pS){$/;"	f	file:
exprSetHeight	sqlite3.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	sqlite3.c	89883;"	d	file:
exprSetHeight	src/expr.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	src/expr.c	423;"	d	file:
exprSetHeight	tsrc/expr.c	/^static void exprSetHeight(Expr *p){$/;"	f	file:
exprSetHeight	tsrc/expr.c	423;"	d	file:
exprSrcCount	sqlite3.c	/^static int exprSrcCount(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprSrcCount	src/expr.c	/^static int exprSrcCount(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprSrcCount	tsrc/expr.c	/^static int exprSrcCount(Walker *pWalker, Expr *pExpr){$/;"	f	file:
exprStructSize	sqlite3.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprStructSize	src/expr.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprStructSize	tsrc/expr.c	/^static int exprStructSize(Expr *p){$/;"	f	file:
exprTableColumn	sqlite3.c	/^static Expr *exprTableColumn($/;"	f	file:
exprTableColumn	src/fkey.c	/^static Expr *exprTableColumn($/;"	f	file:
exprTableColumn	tsrc/fkey.c	/^static Expr *exprTableColumn($/;"	f	file:
exprTableRegister	sqlite3.c	/^static Expr *exprTableRegister($/;"	f	file:
exprTableRegister	src/fkey.c	/^static Expr *exprTableRegister($/;"	f	file:
exprTableRegister	tsrc/fkey.c	/^static Expr *exprTableRegister($/;"	f	file:
exprToRegister	sqlite3.c	/^static void exprToRegister(Expr *p, int iReg){$/;"	f	file:
exprToRegister	src/expr.c	/^static void exprToRegister(Expr *p, int iReg){$/;"	f	file:
exprToRegister	tsrc/expr.c	/^static void exprToRegister(Expr *p, int iReg){$/;"	f	file:
exprToString	ext/fts3/fts3_expr.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprToString	sqlite3.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
exprToString	tsrc/fts3_expr.c	/^static char *exprToString(Fts3Expr *pExpr, char *zBuf){$/;"	f	file:
extendCksum	tool/showwal.c	/^static void extendCksum($/;"	f	file:
extended_errcode	sqlite3.c	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
extended_errcode	sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_errcode	src/sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_errcode	tsrc/sqlite3ext.h	/^  int (*extended_errcode)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	sqlite3.c	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
extended_result_codes	sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	src/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
extended_result_codes	tsrc/sqlite3ext.h	/^  int (*extended_result_codes)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
extraSync	sqlite3.c	/^  u8 extraSync;               \/* sync directory after journal delete *\/$/;"	m	struct:Pager	file:
extraSync	src/pager.c	/^  u8 extraSync;               \/* sync directory after journal delete *\/$/;"	m	struct:Pager	file:
extraSync	tsrc/pager.c	/^  u8 extraSync;               \/* sync directory after journal delete *\/$/;"	m	struct:Pager	file:
extraarg	doc/lemon.html	/^<a name="extraarg"><\/a>$/;"	a
extracode	tool/lemon.c	/^  char *extracode;         \/* Code appended to the generated file *\/$/;"	m	struct:lemon	file:
extractToken	mptest/mptest.c	/^static int extractToken(const char *zIn, int nIn, char *zOut, int nOut){$/;"	f	file:
extract_vars	test/randexpr1.tcl	/^proc extract_vars {a} {$/;"	p
f	ext/rtree/rtree.c	/^  RtreeValue f;      \/* Floating point value *\/$/;"	m	union:RtreeCoord	file:
f	sqlite3.c	/^  RtreeValue f;      \/* Floating point value *\/$/;"	m	union:RtreeCoord	file:
f	src/test_quota.c	/^  FILE *f;                \/* Open stdio file pointer *\/$/;"	m	struct:quota_FILE	file:
f	tool/offsets.c	/^  FILE *f;              \/* Open database file *\/$/;"	m	struct:GState	file:
f	tsrc/rtree.c	/^  RtreeValue f;      \/* Floating point value *\/$/;"	m	union:RtreeCoord	file:
f5tCreateFunction	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tCreateFunction($/;"	f	file:
f5tCreateTokenizer	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tCreateTokenizer($/;"	f	file:
f5tDbAndApi	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tDbAndApi($/;"	f	file:
f5tDbPointer	ext/fts5/fts5_tcl.c	/^static int f5tDbPointer(Tcl_Interp *interp, Tcl_Obj *pObj, sqlite3 **ppDb){$/;"	f	file:
f5tDelTokenizer	ext/fts5/fts5_tcl.c	/^static void f5tDelTokenizer(void *pCtx){$/;"	f	file:
f5tMayBeCorrupt	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tMayBeCorrupt($/;"	f	file:
f5tRegisterMatchinfo	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tRegisterMatchinfo($/;"	f	file:
f5tRegisterTok	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tRegisterTok($/;"	f	file:
f5tResultToErrorCode	ext/fts5/fts5_tcl.c	/^static int f5tResultToErrorCode(const char *zRes){$/;"	f	file:
f5tTokenHash	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tTokenHash($/;"	f	file:
f5tTokenize	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tTokenize($/;"	f	file:
f5tTokenizerCreate	ext/fts5/fts5_tcl.c	/^static int f5tTokenizerCreate($/;"	f	file:
f5tTokenizerDelete	ext/fts5/fts5_tcl.c	/^static void f5tTokenizerDelete(Fts5Tokenizer *p){$/;"	f	file:
f5tTokenizerReturn	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI f5tTokenizerReturn($/;"	f	file:
f5tTokenizerTokenize	ext/fts5/fts5_tcl.c	/^static int f5tTokenizerTokenize($/;"	f	file:
f5t_fts5HashKey	ext/fts5/fts5_tcl.c	/^static unsigned int f5t_fts5HashKey(int nSlot, const char *p, int n){$/;"	f	file:
fDebug	tool/dbhash.c	/^  unsigned fDebug;          \/* Debug flags *\/$/;"	m	struct:GlobalVars	file:
fDebug	tool/sqldiff.c	/^  unsigned fDebug;          \/* Debug flags *\/$/;"	m	struct:GlobalVars	file:
fErrorOrAux	sqlite3.c	/^  u8 fErrorOrAux;         \/* isError!=0 or pVdbe->pAuxData modified *\/$/;"	m	struct:sqlite3_context	file:
fErrorOrAux	src/vdbeInt.h	/^  u8 fErrorOrAux;         \/* isError!=0 or pVdbe->pAuxData modified *\/$/;"	m	struct:sqlite3_context
fErrorOrAux	tsrc/vdbeInt.h	/^  u8 fErrorOrAux;         \/* isError!=0 or pVdbe->pAuxData modified *\/$/;"	m	struct:sqlite3_context
fail	tool/mkvsix.tcl	/^proc fail { {error ""} {usage false} } {$/;"	p
fail	vsixtest/vsixtest.tcl	/^proc fail { {error ""} {usage false} } {$/;"	p
fail_test	test/tester.tcl	/^proc fail_test {name} {$/;"	p
failure	tool/lemon.c	/^  char *failure;           \/* Code to execute on parser failure *\/$/;"	m	struct:lemon	file:
fake_big_file	src/test2.c	/^static int SQLITE_TCLAPI fake_big_file($/;"	f	file:
fallback	tool/lemon.c	/^  struct symbol *fallback;   \/* The fallback token *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
fallback	tool/lemon.c	/^  struct symbol *fallback; \/* fallback token in case this token doesn't parse *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
fatalError	mptest/mptest.c	/^static void fatalError(const char *zFormat, ...){$/;"	f	file:
fatalError	test/fuzzcheck.c	/^static void fatalError(const char *zFormat, ...){$/;"	f	file:
fatalError	tool/fuzzershell.c	/^static void fatalError(const char *zFormat, ...){$/;"	f	file:
fatal_error	test/speedtest1.c	/^static void fatal_error(const char *zMsg, ...){$/;"	f	file:
fatal_error	test/wordcount.c	/^static void fatal_error(const char *zMsg, ...){$/;"	f	file:
faultInstallCmd	src/test2.c	/^static int SQLITE_TCLAPI faultInstallCmd($/;"	f	file:
faultSimCallback	src/test2.c	/^static int faultSimCallback(int x){$/;"	f	file:
faultSimInterp	src/test2.c	/^static Tcl_Interp *faultSimInterp = 0;$/;"	v	file:
faultSimScript	src/test2.c	/^static char *faultSimScript;$/;"	v	file:
faultSimScriptSize	src/test2.c	/^static int faultSimScriptSize = 0;$/;"	v	file:
faultsimBeginBenign	src/test_malloc.c	/^static void faultsimBeginBenign(void){$/;"	f	file:
faultsimBenignFailures	src/test_malloc.c	/^static int faultsimBenignFailures(void){$/;"	f	file:
faultsimConfig	src/test_malloc.c	/^static void faultsimConfig(int nDelay, int nRepeat){$/;"	f	file:
faultsimEndBenign	src/test_malloc.c	/^static void faultsimEndBenign(void){$/;"	f	file:
faultsimFailures	src/test_malloc.c	/^static int faultsimFailures(void){$/;"	f	file:
faultsimFree	src/test_malloc.c	/^static void faultsimFree(void *p){$/;"	f	file:
faultsimInit	src/test_malloc.c	/^static int faultsimInit(void *p){$/;"	f	file:
faultsimInstall	src/test_malloc.c	/^static int faultsimInstall(int install){$/;"	f	file:
faultsimMalloc	src/test_malloc.c	/^static void *faultsimMalloc(int n){$/;"	f	file:
faultsimPending	src/test_malloc.c	/^static int faultsimPending(void){$/;"	f	file:
faultsimRealloc	src/test_malloc.c	/^static void *faultsimRealloc(void *pOld, int n){$/;"	f	file:
faultsimRoundup	src/test_malloc.c	/^static int faultsimRoundup(int n){$/;"	f	file:
faultsimShutdown	src/test_malloc.c	/^static void faultsimShutdown(void *p){$/;"	f	file:
faultsimSize	src/test_malloc.c	/^static int faultsimSize(void *p){$/;"	f	file:
faultsimStep	src/test_malloc.c	/^static int faultsimStep(void){$/;"	f	file:
faultsim_delete_and_reopen	test/malloc_common.tcl	/^proc faultsim_delete_and_reopen {args} {$/;"	p
faultsim_integrity_check	test/malloc_common.tcl	/^proc faultsim_integrity_check {{db db}} {$/;"	p
faultsim_restore	test/malloc_common.tcl	/^proc faultsim_restore {args} { uplevel db_restore $args }$/;"	p
faultsim_restore_and_reopen	test/malloc_common.tcl	/^proc faultsim_restore_and_reopen {args} { $/;"	p
faultsim_save	test/malloc_common.tcl	/^proc faultsim_save {args} { uplevel db_save $args }$/;"	p
faultsim_save_and_close	test/malloc_common.tcl	/^proc faultsim_save_and_close {args} { uplevel db_save_and_close $args }$/;"	p
faultsim_test_proc	test/malloc_common.tcl	/^  proc faultsim_test_proc {testrc testresult testnfail} $O(-test)$/;"	p
faultsim_test_result	test/malloc_common.tcl	/^  proc faultsim_test_result {args} "$/;"	p
faultsim_test_result_int	test/malloc_common.tcl	/^proc faultsim_test_result_int {args} {$/;"	p
fcntlSizeHint	sqlite3.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fcntlSizeHint	src/os_unix.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fcntlSizeHint	tsrc/os_unix.c	/^static int fcntlSizeHint(unixFile *pFile, i64 nByte){$/;"	f	file:
fd	sqlite3.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	sqlite3.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	sqlite3.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fd	src/os_unix.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	src/os_unix.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	src/pager.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fd	src/test_demovfs.c	/^  int fd;                         \/* File descriptor *\/$/;"	m	struct:DemoFile	file:
fd	src/test_fs.c	/^  int fd;                         \/* File descriptor open on current path *\/$/;"	m	struct:FstreeCsr	file:
fd	src/test_sqllog.c	/^  FILE *fd;                       \/* File descriptor for log file *\/$/;"	m	struct:SLConn	file:
fd	tool/showwal.c	/^static int fd = -1;             \/* File descriptor for reading the WAL file *\/$/;"	v	file:
fd	tsrc/os_unix.c	/^  int fd;                           \/* file desc to assoc this lock with *\/$/;"	m	struct:ByteRangeLockPB2	file:
fd	tsrc/os_unix.c	/^  int fd;                   \/* File descriptor to close *\/$/;"	m	struct:UnixUnusedFd	file:
fd	tsrc/pager.c	/^  sqlite3_file *fd;           \/* File descriptor for database *\/$/;"	m	struct:Pager	file:
fdatasync	sqlite3.c	32699;"	d	file:
fdatasync	src/os_unix.c	3374;"	d	file:
fdatasync	tsrc/os_unix.c	3374;"	d	file:
fetchPayload	sqlite3.c	/^static const void *fetchPayload($/;"	f	file:
fetchPayload	src/btree.c	/^static const void *fetchPayload($/;"	f	file:
fetchPayload	tsrc/btree.c	/^static const void *fetchPayload($/;"	f	file:
fg	sqlite3.c	/^    } fg;$/;"	m	struct:SrcList::SrcList_item	typeref:struct:SrcList::SrcList_item::__anon84	file:
fg	src/sqliteInt.h	/^    } fg;$/;"	m	struct:SrcList::SrcList_item	typeref:struct:SrcList::SrcList_item::__anon58
fg	tsrc/sqliteInt.h	/^    } fg;$/;"	m	struct:SrcList::SrcList_item	typeref:struct:SrcList::SrcList_item::__anon26
file	sqlite3.c	/^  SorterFile file;                \/* Temp file for level-0 PMAs *\/$/;"	m	struct:SortSubtask	file:
file	src/vdbesort.c	/^  SorterFile file;                \/* Temp file for level-0 PMAs *\/$/;"	m	struct:SortSubtask	file:
file	tsrc/vdbesort.c	/^  SorterFile file;                \/* Temp file for level-0 PMAs *\/$/;"	m	struct:SortSubtask	file:
file2	sqlite3.c	/^  SorterFile file2;               \/* Space for other PMAs *\/$/;"	m	struct:SortSubtask	file:
file2	src/vdbesort.c	/^  SorterFile file2;               \/* Space for other PMAs *\/$/;"	m	struct:SortSubtask	file:
file2	tsrc/vdbesort.c	/^  SorterFile file2;               \/* Space for other PMAs *\/$/;"	m	struct:SortSubtask	file:
fileChunkSize	sqlite3.c	87424;"	d	file:
fileChunkSize	src/memjournal.c	53;"	d	file:
fileChunkSize	tsrc/memjournal.c	53;"	d	file:
fileClose	tool/showdb.c	/^static void fileClose(){$/;"	f	file:
fileGetsize	tool/showdb.c	/^static sqlite3_int64 fileGetsize(void){$/;"	f	file:
fileHasMoved	sqlite3.c	/^static int fileHasMoved(unixFile *pFile){$/;"	f	file:
fileHasMoved	src/os_unix.c	/^static int fileHasMoved(unixFile *pFile){$/;"	f	file:
fileHasMoved	tsrc/os_unix.c	/^static int fileHasMoved(unixFile *pFile){$/;"	f	file:
fileId	sqlite3.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
fileId	src/os_unix.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
fileId	tsrc/os_unix.c	/^  struct unixFileId fileId;       \/* The lookup key *\/$/;"	m	struct:unixInodeInfo	typeref:struct:unixInodeInfo::unixFileId	file:
fileOpen	tool/showdb.c	/^static void fileOpen(const char *zPrg, const char *zName){$/;"	f	file:
fileRead	tool/showdb.c	/^static unsigned char *fileRead(sqlite3_int64 ofst, int nByte){$/;"	f	file:
fileSize	tool/showjournal.c	/^static int fileSize = 0;$/;"	v	file:
fileTail	src/test_vfstrace.c	/^static const char *fileTail(const char *z){$/;"	f	file:
file_control	sqlite3.c	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines	file:
file_control	sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
file_control	src/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
file_control	tsrc/sqlite3ext.h	/^  int (*file_control)(sqlite3*,const char*,int,void*);$/;"	m	struct:sqlite3_api_routines
file_control_chunksize_test	src/test1.c	/^static int SQLITE_TCLAPI file_control_chunksize_test($/;"	f	file:
file_control_lasterrno_test	src/test1.c	/^static int SQLITE_TCLAPI file_control_lasterrno_test($/;"	f	file:
file_control_lockproxy_test	src/test1.c	/^static int SQLITE_TCLAPI file_control_lockproxy_test($/;"	f	file:
file_control_persist_wal	src/test1.c	/^static int SQLITE_TCLAPI file_control_persist_wal($/;"	f	file:
file_control_powersafe_overwrite	src/test1.c	/^static int SQLITE_TCLAPI file_control_powersafe_overwrite($/;"	f	file:
file_control_sizehint_test	src/test1.c	/^static int SQLITE_TCLAPI file_control_sizehint_test($/;"	f	file:
file_control_tempfilename	src/test1.c	/^static int SQLITE_TCLAPI file_control_tempfilename($/;"	f	file:
file_control_test	src/test1.c	/^static int SQLITE_TCLAPI file_control_test($/;"	f	file:
file_control_vfsname	src/test1.c	/^static int SQLITE_TCLAPI file_control_vfsname($/;"	f	file:
file_control_win32_av_retry	src/test1.c	/^static int SQLITE_TCLAPI file_control_win32_av_retry($/;"	f	file:
file_control_win32_set_handle	src/test1.c	/^static int SQLITE_TCLAPI file_control_win32_set_handle($/;"	f	file:
file_format	sqlite3.c	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema	file:
file_format	src/sqliteInt.h	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema
file_format	tsrc/sqliteInt.h	/^  u8 file_format;      \/* Schema format version for this file *\/$/;"	m	struct:Schema
file_makename	tool/lemon.c	/^PRIVATE char *file_makename(struct lemon *lemp, const char *suffix)$/;"	f
file_open	tool/lemon.c	/^PRIVATE FILE *file_open($/;"	f
filecopy	test/threadtest3.c	68;"	d	file:
filecopy_x	test/threadtest3.c	/^static void filecopy_x($/;"	f	file:
filename	tool/lemon.c	/^  char *filename;          \/* Name of the input file *\/$/;"	m	struct:lemon	file:
filename	tool/lemon.c	/^  char *filename;       \/* Name of the input file *\/$/;"	m	struct:pstate	file:
filenameTail	mptest/mptest.c	/^static char *filenameTail(char *z){$/;"	f	file:
filepath_normalize	test/tester.tcl	/^proc filepath_normalize {p} {$/;"	p
filesize	test/threadtest3.c	67;"	d	file:
filesize_x	test/threadtest3.c	/^static i64 filesize_x($/;"	f	file:
fillInCell	sqlite3.c	/^static int fillInCell($/;"	f	file:
fillInCell	src/btree.c	/^static int fillInCell($/;"	f	file:
fillInCell	tsrc/btree.c	/^static int fillInCell($/;"	f	file:
fillInUnixFile	sqlite3.c	/^static int fillInUnixFile($/;"	f	file:
fillInUnixFile	src/os_unix.c	/^static int fillInUnixFile($/;"	f	file:
fillInUnixFile	tsrc/os_unix.c	/^static int fillInUnixFile($/;"	f	file:
filter	ext/fts3/fts3_aux.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
filter	ext/fts3/fts3_term.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3termCursor	file:
filter	sqlite3.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
filter	tsrc/fts3_aux.c	/^  Fts3SegFilter filter;$/;"	m	struct:Fts3auxCursor	file:
finalDbSize	sqlite3.c	/^static Pgno finalDbSize(BtShared *pBt, Pgno nOrig, Pgno nFree){$/;"	f	file:
finalDbSize	src/btree.c	/^static Pgno finalDbSize(BtShared *pBt, Pgno nOrig, Pgno nFree){$/;"	f	file:
finalDbSize	tsrc/btree.c	/^static Pgno finalDbSize(BtShared *pBt, Pgno nOrig, Pgno nFree){$/;"	f	file:
finalHash	test/wordcount.c	/^static void finalHash(unsigned int *a, char *z){$/;"	f	file:
finalize	sqlite3.c	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
finalize	sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
finalize	src/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
finalize	src/test_schema.c	/^static int finalize(sqlite3_stmt **ppStmt){$/;"	f	file:
finalize	tool/mkopts.tcl	/^proc finalize {} {$/;"	p
finalize	tsrc/sqlite3ext.h	/^  int  (*finalize)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
finalizeAggFunctions	sqlite3.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
finalizeAggFunctions	src/select.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
finalizeAggFunctions	tsrc/select.c	/^static void finalizeAggFunctions(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
finalizeTime	tool/speedtest16.c	/^static sqlite_uint64 finalizeTime = 0;$/;"	v	file:
finalizeTime	tool/speedtest8.c	/^static sqlite_uint64 finalizeTime = 0;$/;"	v	file:
finalize_testing	test/tester.tcl	/^proc finalize_testing {} {$/;"	p
findAllSideEffects	tool/srcck1.c	/^static unsigned int findAllSideEffects(const char *z){$/;"	f	file:
findBtree	sqlite3.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findBtree	src/backup.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findBtree	tsrc/backup.c	/^static Btree *findBtree(sqlite3 *pErrorDb, sqlite3 *pDb, const char *zDb){$/;"	f	file:
findById	tool/mkkeywordhash.c	/^static Keyword *findById(int id){$/;"	f	file:
findCell	sqlite3.c	59161;"	d	file:
findCell	src/btree.c	1025;"	d	file:
findCell	tsrc/btree.c	1025;"	d	file:
findCellPastPtr	sqlite3.c	59163;"	d	file:
findCellPastPtr	src/btree.c	1027;"	d	file:
findCellPastPtr	tsrc/btree.c	1027;"	d	file:
findCloseParen	tool/srcck1.c	/^static unsigned int findCloseParen(const char *z){$/;"	f	file:
findCollSeqEntry	sqlite3.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCollSeqEntry	src/callback.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCollSeqEntry	tsrc/callback.c	/^static CollSeq *findCollSeqEntry($/;"	f	file:
findCreateFileMode	sqlite3.c	/^static int findCreateFileMode($/;"	f	file:
findCreateFileMode	src/os_unix.c	/^static int findCreateFileMode($/;"	f	file:
findCreateFileMode	tsrc/os_unix.c	/^static int findCreateFileMode($/;"	f	file:
findElementGivenHash	ext/fts1/ft_hash.c	/^static HashElem *findElementGivenHash($/;"	f	file:
findElementGivenHash	ext/fts1/fts1_hash.c	/^static fts1HashElem *findElementGivenHash($/;"	f	file:
findElementGivenHash	ext/fts2/fts2_hash.c	/^static fts2HashElem *findElementGivenHash($/;"	f	file:
findElementGivenHash	tsrc/fts1_hash.c	/^static fts1HashElem *findElementGivenHash($/;"	f	file:
findElementGivenHash	tsrc/fts2_hash.c	/^static fts2HashElem *findElementGivenHash($/;"	f	file:
findElementWithHash	sqlite3.c	/^static HashElem *findElementWithHash($/;"	f	file:
findElementWithHash	src/hash.c	/^static HashElem *findElementWithHash($/;"	f	file:
findElementWithHash	tsrc/hash.c	/^static HashElem *findElementWithHash($/;"	f	file:
findEnd	mptest/mptest.c	/^static int findEnd(const char *z, int *pnLine){$/;"	f	file:
findEndif	mptest/mptest.c	/^static int findEndif(const char *z, int stopAtElse, int *pnLine){$/;"	f	file:
findIndexCol	sqlite3.c	/^static int findIndexCol($/;"	f	file:
findIndexCol	src/where.c	/^static int findIndexCol($/;"	f	file:
findIndexCol	tsrc/where.c	/^static int findIndexCol($/;"	f	file:
findIndexOrPrimaryKey	sqlite3.c	/^static Index *findIndexOrPrimaryKey($/;"	f	file:
findIndexOrPrimaryKey	src/analyze.c	/^static Index *findIndexOrPrimaryKey($/;"	f	file:
findIndexOrPrimaryKey	tsrc/analyze.c	/^static Index *findIndexOrPrimaryKey($/;"	f	file:
findInodeInfo	sqlite3.c	/^static int findInodeInfo($/;"	f	file:
findInodeInfo	src/os_unix.c	/^static int findInodeInfo($/;"	f	file:
findInodeInfo	tsrc/os_unix.c	/^static int findInodeInfo($/;"	f	file:
findLeafNode	ext/rtree/rtree.c	/^static int findLeafNode($/;"	f	file:
findLeafNode	sqlite3.c	/^static int findLeafNode($/;"	f	file:
findLeafNode	tsrc/rtree.c	/^static int findLeafNode($/;"	f	file:
findLock	ext/async/sqlite3async.c	/^static AsyncLock *findLock(const char *zName, int nName){$/;"	f	file:
findNextChars	ext/misc/nextchar.c	/^static void findNextChars(nextCharContext *p){$/;"	f	file:
findNextHostParameter	sqlite3.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findNextHostParameter	src/vdbetrace.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findNextHostParameter	tsrc/vdbetrace.c	/^static int findNextHostParameter(const char *zSql, int *pnToken){$/;"	f	file:
findOption	ext/fts3/tool/fts3view.c	/^const char *findOption(const char *zName, int hasArg, const char *zDefault){$/;"	f
findOption	mptest/mptest.c	/^static char *findOption($/;"	f	file:
findReusableFd	sqlite3.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findReusableFd	src/os_unix.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findReusableFd	tsrc/os_unix.c	/^static UnixUnusedFd *findReusableFd(const char *zPath, int flags){$/;"	f	file:
findRightmost	sqlite3.c	/^static Select *findRightmost(Select *p){$/;"	f	file:
findRightmost	src/select.c	/^static Select *findRightmost(Select *p){$/;"	f	file:
findRightmost	tsrc/select.c	/^static Select *findRightmost(Select *p){$/;"	f	file:
findSqlFunc	src/tclsqlite.c	/^static SqlFunc *findSqlFunc(SqliteDb *pDb, const char *zName){$/;"	f	file:
findSqlFunc	tsrc/tclsqlite.c	/^static SqlFunc *findSqlFunc(SqliteDb *pDb, const char *zName){$/;"	f	file:
findVFile	test/fuzzcheck.c	/^static VFile *findVFile(const char *zName){$/;"	f	file:
find_home_dir	shell.c	/^static char *find_home_dir(void){$/;"	f	file:
find_home_dir	src/shell.c	/^static char *find_home_dir(void){$/;"	f	file:
find_home_dir	tsrc/shell.c	/^static char *find_home_dir(void){$/;"	f	file:
finder_type	sqlite3.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
finder_type	src/os_unix.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
finder_type	tsrc/os_unix.c	/^typedef const sqlite3_io_methods *(*finder_type)(const char*,unixFile*);$/;"	t	file:
finishScript	mptest/mptest.c	/^static int finishScript(int iClient, int taskId, int bShutdown){$/;"	f	file:
finish_test	test/tester.tcl	/^proc finish_test {} {$/;"	p
fired	src/test_thread.c	/^  int fired;                         \/* True after unlock event has occurred *\/$/;"	m	struct:UnlockNotification	file:
first	ext/fts1/ft_hash.h	/^  HashElem *first;        \/* The first element of the array *\/$/;"	m	struct:Hash
first	ext/fts1/fts1_hash.h	/^  fts1HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:fts1Hash
first	ext/fts2/fts2.c	/^  InteriorBlock *first, *last;$/;"	m	struct:InteriorWriter	file:
first	ext/fts2/fts2_hash.h	/^  fts2HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:fts2Hash
first	ext/fts3/fts3_hash.h	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash
first	sqlite3.c	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash	file:
first	sqlite3.c	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash	file:
first	src/hash.h	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash
first	tsrc/fts1_hash.h	/^  fts1HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:fts1Hash
first	tsrc/fts2.c	/^  InteriorBlock *first, *last;$/;"	m	struct:InteriorWriter	file:
first	tsrc/fts2_hash.h	/^  fts2HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:fts2Hash
first	tsrc/fts3_hash.h	/^  Fts3HashElem *first;    \/* The first element of the array *\/$/;"	m	struct:Fts3Hash
first	tsrc/hash.h	/^  HashElem *first;          \/* The first element of the array *\/$/;"	m	struct:Hash
firstDocid	ext/fts1/fts1.c	/^static sqlite_int64 firstDocid(DocList *d){$/;"	f	file:
firstDocid	ext/fts1/fulltext.c	/^static sqlite_int64 firstDocid(DocList *d){$/;"	f	file:
firstDocid	tsrc/fts1.c	/^static sqlite_int64 firstDocid(DocList *d){$/;"	f	file:
firstToken	ext/fts1/fts1.c	/^static char *firstToken(char *zIn, char **pzTail){$/;"	f	file:
firstToken	ext/fts2/fts2.c	/^static char *firstToken(char *zIn, char **pzTail){$/;"	f	file:
firstToken	tsrc/fts1.c	/^static char *firstToken(char *zIn, char **pzTail){$/;"	f	file:
firstToken	tsrc/fts2.c	/^static char *firstToken(char *zIn, char **pzTail){$/;"	f	file:
firstrule	tool/lemon.c	/^  struct rule *firstrule;    \/* Pointer to first rule in the grammar *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
firstset	tool/lemon.c	/^  char *firstset;          \/* First-set for all rules of this symbol *\/$/;"	m	struct:symbol	file:
fixBoundingBox	ext/rtree/rtree.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixBoundingBox	sqlite3.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixBoundingBox	tsrc/rtree.c	/^static int fixBoundingBox(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
fixLeafParent	ext/rtree/rtree.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fixLeafParent	sqlite3.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fixLeafParent	tsrc/rtree.c	/^static int fixLeafParent(Rtree *pRtree, RtreeNode *pLeaf){$/;"	f	file:
fix_ifcapable_expr	test/tester.tcl	/^proc fix_ifcapable_expr {expr} {$/;"	p
fix_testname	test/tester.tcl	/^proc fix_testname {varname} {$/;"	p
fkActionTrigger	sqlite3.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkActionTrigger	src/fkey.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkActionTrigger	tsrc/fkey.c	/^static Trigger *fkActionTrigger($/;"	f	file:
fkChildIsModified	sqlite3.c	/^static int fkChildIsModified($/;"	f	file:
fkChildIsModified	src/fkey.c	/^static int fkChildIsModified($/;"	f	file:
fkChildIsModified	tsrc/fkey.c	/^static int fkChildIsModified($/;"	f	file:
fkLookupParent	sqlite3.c	/^static void fkLookupParent($/;"	f	file:
fkLookupParent	src/fkey.c	/^static void fkLookupParent($/;"	f	file:
fkLookupParent	tsrc/fkey.c	/^static void fkLookupParent($/;"	f	file:
fkParentIsModified	sqlite3.c	/^static int fkParentIsModified($/;"	f	file:
fkParentIsModified	src/fkey.c	/^static int fkParentIsModified($/;"	f	file:
fkParentIsModified	tsrc/fkey.c	/^static int fkParentIsModified($/;"	f	file:
fkScanChildren	sqlite3.c	/^static void fkScanChildren($/;"	f	file:
fkScanChildren	src/fkey.c	/^static void fkScanChildren($/;"	f	file:
fkScanChildren	tsrc/fkey.c	/^static void fkScanChildren($/;"	f	file:
fkTriggerDelete	sqlite3.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkTriggerDelete	src/fkey.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkTriggerDelete	tsrc/fkey.c	/^static void fkTriggerDelete(sqlite3 *dbMem, Trigger *p){$/;"	f	file:
fkeyHash	sqlite3.c	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema	file:
fkeyHash	src/sqliteInt.h	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema
fkeyHash	tsrc/sqliteInt.h	/^  Hash fkeyHash;       \/* All foreign keys by referenced table name *\/$/;"	m	struct:Schema
flag	ext/fts3/fts3_snippet.c	/^  char flag;$/;"	m	struct:MatchInfo	file:
flag	sqlite3.c	/^  char flag;$/;"	m	struct:MatchInfo	file:
flag	tsrc/fts3_snippet.c	/^  char flag;$/;"	m	struct:MatchInfo	file:
flags	ext/fts3/fts3Int.h	/^  int flags;$/;"	m	struct:Fts3SegFilter
flags	ext/fts5/fts5_index.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	fts5.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	sqlite3.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	sqlite3.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	sqlite3.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:MemJournal	file:
flags	sqlite3.c	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3	file:
flags	sqlite3.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	sqlite3.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flags	sqlite3.c	/^  int flags;$/;"	m	struct:Fts3SegFilter	file:
flags	sqlite3.c	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr	file:
flags	sqlite3.c	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem	file:
flags	sqlite3.c	/^  u32 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr	file:
flags	sqlite3.c	/^  u8 flags;                       \/* Copy of flags byte *\/$/;"	m	struct:StatPage	file:
flags	src/dbstat.c	/^  u8 flags;                       \/* Copy of flags byte *\/$/;"	m	struct:StatPage	file:
flags	src/memjournal.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:MemJournal	file:
flags	src/os_unix.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	src/pcache.h	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr
flags	src/printf.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	src/sqliteInt.h	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3
flags	src/sqliteInt.h	/^  u32 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr
flags	src/test6.c	/^  int flags;                           \/* Flags the file was opened with *\/$/;"	m	struct:CrashFile	file:
flags	src/test_journal.c	/^  int flags;               \/* Flags the file was opened with *\/$/;"	m	struct:jt_file	file:
flags	src/test_multiplex.c	/^  int flags;                       \/* Flags used for original opening *\/$/;"	m	struct:multiplexGroup	file:
flags	src/vdbeInt.h	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem
flags	src/vdbeblob.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flags	tsrc/dbstat.c	/^  u8 flags;                       \/* Copy of flags byte *\/$/;"	m	struct:StatPage	file:
flags	tsrc/fts3Int.h	/^  int flags;$/;"	m	struct:Fts3SegFilter
flags	tsrc/fts5.c	/^  int flags;                      \/* Mask of configuration flags *\/$/;"	m	struct:Fts5SegIter	file:
flags	tsrc/memjournal.c	/^  int flags;                      \/* xOpen flags *\/$/;"	m	struct:MemJournal	file:
flags	tsrc/os_unix.c	/^  int flags;                \/* Flags this file descriptor was opened with *\/$/;"	m	struct:UnixUnusedFd	file:
flags	tsrc/pcache.h	/^  u16 flags;                     \/* PGHDR flags defined below *\/$/;"	m	struct:PgHdr
flags	tsrc/printf.c	/^  etByte flags;            \/* One or more of FLAG_ constants below *\/$/;"	m	struct:et_info	file:
flags	tsrc/sqliteInt.h	/^  int flags;                    \/* Miscellaneous flags. See below *\/$/;"	m	struct:sqlite3
flags	tsrc/sqliteInt.h	/^  u32 flags;             \/* Various flags.  EP_* See below *\/$/;"	m	struct:Expr
flags	tsrc/vdbeInt.h	/^  u16 flags;          \/* Some combination of MEM_Null, MEM_Str, MEM_Dyn, etc. *\/$/;"	m	struct:Mem
flags	tsrc/vdbeblob.c	/^  int flags;              \/* Copy of "flags" passed to sqlite3_blob_open() *\/$/;"	m	struct:Incrblob	file:
flattenSubquery	sqlite3.c	/^static int flattenSubquery($/;"	f	file:
flattenSubquery	src/select.c	/^static int flattenSubquery($/;"	f	file:
flattenSubquery	tsrc/select.c	/^static int flattenSubquery($/;"	f	file:
float	sqlite3.c	11446;"	d	file:
float	src/sqliteInt.h	512;"	d
float	tsrc/sqliteInt.h	512;"	d
floatSwap	sqlite3.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
floatSwap	src/vdbeaux.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
floatSwap	tsrc/vdbeaux.c	/^static u64 floatSwap(u64 in){$/;"	f	file:
flockCheckReservedLock	sqlite3.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockCheckReservedLock	src/os_unix.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockCheckReservedLock	tsrc/os_unix.c	/^static int flockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
flockClose	sqlite3.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockClose	src/os_unix.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockClose	tsrc/os_unix.c	/^static int flockClose(sqlite3_file *id) {$/;"	f	file:
flockLock	sqlite3.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockLock	src/os_unix.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockLock	tsrc/os_unix.c	/^static int flockLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	sqlite3.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	src/os_unix.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flockUnlock	tsrc/os_unix.c	/^static int flockUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
flushPendingTerms	ext/fts2/fts2.c	/^static int flushPendingTerms(fulltext_vtab *v){$/;"	f	file:
flushPendingTerms	tsrc/fts2.c	/^static int flushPendingTerms(fulltext_vtab *v){$/;"	f	file:
flushStmtCache	src/tclsqlite.c	/^static void flushStmtCache(SqliteDb *pDb){$/;"	f	file:
flushStmtCache	tsrc/tclsqlite.c	/^static void flushStmtCache(SqliteDb *pDb){$/;"	f	file:
fmtinfo	sqlite3.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmtinfo	src/printf.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmtinfo	tsrc/printf.c	/^static const et_info fmtinfo[] = {$/;"	v	file:
fmttype	sqlite3.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
fmttype	src/printf.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
fmttype	tsrc/printf.c	/^  char fmttype;            \/* The format field code letter *\/$/;"	m	struct:et_info	file:
fn_AppendVariable	tool/build-all-msvc.bat	/^:fn_AppendVariable$/;"	l
fn_CopyVariable	tool/build-all-msvc.bat	/^:fn_CopyVariable$/;"	l
fn_MakeClean	tool/build-all-msvc.bat	/^:fn_MakeClean$/;"	l
fn_MakeDll	tool/build-all-msvc.bat	/^:fn_MakeDll$/;"	l
fn_MakeExe	tool/build-all-msvc.bat	/^:fn_MakeExe$/;"	l
fn_ResetErrorLevel	tool/GetTclKit.bat	/^:fn_ResetErrorLevel$/;"	l
fn_ResetErrorLevel	tool/build-all-msvc.bat	/^:fn_ResetErrorLevel$/;"	l
fn_SetErrorLevel	tool/GetTclKit.bat	/^:fn_SetErrorLevel$/;"	l
fn_SetErrorLevel	tool/build-all-msvc.bat	/^:fn_SetErrorLevel$/;"	l
fn_ShowVariable	tool/build-all-msvc.bat	/^:fn_ShowVariable$/;"	l
fn_TclKitX64Variables	tool/GetTclKit.bat	/^:fn_TclKitX64Variables$/;"	l
fn_TclKitX86Variables	tool/GetTclKit.bat	/^:fn_TclKitX86Variables$/;"	l
fn_UnquoteVariable	tool/GetTclKit.bat	/^:fn_UnquoteVariable$/;"	l
fn_UnsetVariable	tool/build-all-msvc.bat	/^:fn_UnsetVariable$/;"	l
forcecopy	test/tester.tcl	/^proc forcecopy {from to} {$/;"	p
forcedelete	test/tester.tcl	/^proc forcedelete {args} {$/;"	p
foreach_clause	parse.y	/^foreach_clause ::= .$/;"	l
foreach_clause	parse.y	/^foreach_clause ::= FOR EACH ROW.$/;"	l
foreach_clause	src/parse.y	/^foreach_clause ::= .$/;"	l
foreach_clause	src/parse.y	/^foreach_clause ::= FOR EACH ROW.$/;"	l
foreach_detail_mode	ext/fts5/test/fts5_common.tcl	/^proc foreach_detail_mode {prefix script} {$/;"	p
formatVfs	test/fuzzcheck.c	/^static void formatVfs(void){$/;"	f	file:
fplp	tool/lemon.c	/^  struct plink *fplp;      \/* Follow-set forward propagation links *\/$/;"	m	struct:config	typeref:struct:config::plink	file:
free	sqlite3.c	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines	file:
free	sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
free	src/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
free	tsrc/sqlite3ext.h	/^  void  (*free)(void*);$/;"	m	struct:sqlite3_api_routines
freeCursorConstraints	ext/rtree/rtree.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeCursorConstraints	sqlite3.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeCursorConstraints	tsrc/rtree.c	/^static void freeCursorConstraints(RtreeCursor *pCsr){$/;"	f	file:
freeEphemeralFunction	sqlite3.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeEphemeralFunction	src/vdbeaux.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeEphemeralFunction	tsrc/vdbeaux.c	/^static void freeEphemeralFunction(sqlite3 *db, FuncDef *pDef){$/;"	f	file:
freeIndex	sqlite3.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeIndex	src/build.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeIndex	tsrc/build.c	/^static void freeIndex(sqlite3 *db, Index *p){$/;"	f	file:
freeP4	sqlite3.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freeP4	src/vdbeaux.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freeP4	tsrc/vdbeaux.c	/^static void freeP4(sqlite3 *db, int p4type, void *p4){$/;"	f	file:
freeP4FuncCtx	sqlite3.c	/^static SQLITE_NOINLINE void freeP4FuncCtx(sqlite3 *db, sqlite3_context *p){$/;"	f	file:
freeP4FuncCtx	src/vdbeaux.c	/^static SQLITE_NOINLINE void freeP4FuncCtx(sqlite3 *db, sqlite3_context *p){$/;"	f	file:
freeP4FuncCtx	tsrc/vdbeaux.c	/^static SQLITE_NOINLINE void freeP4FuncCtx(sqlite3 *db, sqlite3_context *p){$/;"	f	file:
freeP4Mem	sqlite3.c	/^static SQLITE_NOINLINE void freeP4Mem(sqlite3 *db, Mem *p){$/;"	f	file:
freeP4Mem	src/vdbeaux.c	/^static SQLITE_NOINLINE void freeP4Mem(sqlite3 *db, Mem *p){$/;"	f	file:
freeP4Mem	tsrc/vdbeaux.c	/^static SQLITE_NOINLINE void freeP4Mem(sqlite3 *db, Mem *p){$/;"	f	file:
freePage	sqlite3.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage	src/btree.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage	tsrc/btree.c	/^static void freePage(MemPage *pPage, int *pRC){$/;"	f	file:
freePage2	sqlite3.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freePage2	src/btree.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freePage2	tsrc/btree.c	/^static int freePage2(BtShared *pBt, MemPage *pMemPage, Pgno iPage){$/;"	f	file:
freeSpace	sqlite3.c	/^static int freeSpace(MemPage *pPage, u16 iStart, u16 iSize){$/;"	f	file:
freeSpace	src/btree.c	/^static int freeSpace(MemPage *pPage, u16 iStart, u16 iSize){$/;"	f	file:
freeSpace	tsrc/btree.c	/^static int freeSpace(MemPage *pPage, u16 iStart, u16 iSize){$/;"	f	file:
freeStringArray	ext/fts1/fts1.c	/^static void freeStringArray(int nString, const char **pString){$/;"	f	file:
freeStringArray	ext/fts2/fts2.c	/^static void freeStringArray(int nString, const char **pString){$/;"	f	file:
freeStringArray	tsrc/fts1.c	/^static void freeStringArray(int nString, const char **pString){$/;"	f	file:
freeStringArray	tsrc/fts2.c	/^static void freeStringArray(int nString, const char **pString){$/;"	f	file:
freeTempSpace	sqlite3.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
freeTempSpace	src/btree.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
freeTempSpace	tsrc/btree.c	/^static void freeTempSpace(BtShared *pBt){$/;"	f	file:
free_err	test/threadtest3.c	/^static void free_err(Error *p){$/;"	f	file:
free_table	sqlite3.c	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines	file:
free_table	sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
free_table	src/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
free_table	tsrc/sqlite3ext.h	/^  void  (*free_table)(char**result);$/;"	m	struct:sqlite3_api_routines
free_test_auxdata	src/test_func.c	/^static void free_test_auxdata(void *p) {sqlite3_free(p);}$/;"	f	file:
freelist	tool/lemon.c	/^static struct config *freelist = 0;      \/* List of free configurations *\/$/;"	v	typeref:struct:config	file:
from	tool/lemon.c	/^  struct s_x1node **from;  \/* Previous link *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
from	tool/lemon.c	/^  struct s_x2node **from;  \/* Previous link *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
from	tool/lemon.c	/^  struct s_x3node **from;  \/* Previous link *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
from	tool/lemon.c	/^  struct s_x4node **from;  \/* Previous link *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
fsAccess	src/test_onefile.c	/^static int fsAccess($/;"	f	file:
fsBestIndex	src/test_fs.c	/^static int fsBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
fsCheckReservedLock	src/test_onefile.c	/^static int fsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
fsClose	src/test_fs.c	/^static int fsClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsClose	src/test_onefile.c	/^static int fsClose(sqlite3_file *pFile){$/;"	f	file:
fsColumn	src/test_fs.c	/^static int fsColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
fsConnect	src/test_fs.c	/^static int fsConnect($/;"	f	file:
fsCurrentTime	src/test_onefile.c	/^static int fsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
fsDelete	src/test_onefile.c	/^static int fsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
fsDeviceCharacteristics	src/test_onefile.c	/^static int fsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
fsDisconnect	src/test_fs.c	/^static int fsDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
fsDlClose	src/test_onefile.c	/^static void fsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
fsDlError	src/test_onefile.c	/^static void fsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
fsDlOpen	src/test_onefile.c	/^static void *fsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
fsDlSym	src/test_onefile.c	/^static void (*fsDlSym(sqlite3_vfs *pVfs, void *pH, const char *zSym))(void){$/;"	f	file:
fsEof	src/test_fs.c	/^static int fsEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsFileControl	src/test_onefile.c	/^static int fsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
fsFileSize	src/test_onefile.c	/^static int fsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
fsFilter	src/test_fs.c	/^static int fsFilter($/;"	f	file:
fsFlags	sqlite3.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
fsFlags	src/os_unix.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
fsFlags	tsrc/os_unix.c	/^  unsigned fsFlags;                   \/* cached details from statfs() *\/$/;"	m	struct:unixFile	file:
fsFullPathname	src/test_onefile.c	/^static int fsFullPathname($/;"	f	file:
fsLock	src/test_onefile.c	/^static int fsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
fsModule	src/test_fs.c	/^static sqlite3_module fsModule = {$/;"	v	file:
fsNext	src/test_fs.c	/^static int fsNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsOpen	src/test_fs.c	/^static int fsOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fsOpen	src/test_onefile.c	/^static int fsOpen($/;"	f	file:
fsRandomness	src/test_onefile.c	/^static int fsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
fsRead	src/test_onefile.c	/^static int fsRead($/;"	f	file:
fsRowid	src/test_fs.c	/^static int fsRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
fsSectorSize	src/test_onefile.c	/^static int fsSectorSize(sqlite3_file *pFile){$/;"	f	file:
fsSleep	src/test_onefile.c	/^static int fsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
fsSync	src/test_onefile.c	/^static int fsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
fsTruncate	src/test_onefile.c	/^static int fsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
fsUnlock	src/test_onefile.c	/^static int fsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
fsWrite	src/test_onefile.c	/^static int fsWrite($/;"	f	file:
fs_cursor	src/test_fs.c	/^struct fs_cursor {$/;"	s	file:
fs_cursor	src/test_fs.c	/^typedef struct fs_cursor fs_cursor;$/;"	t	typeref:struct:fs_cursor	file:
fs_file	src/test_onefile.c	/^struct fs_file {$/;"	s	file:
fs_file	src/test_onefile.c	/^typedef struct fs_file fs_file;$/;"	t	typeref:struct:fs_file	file:
fs_io_methods	src/test_onefile.c	/^static sqlite3_io_methods fs_io_methods = {$/;"	v	file:
fs_real_file	src/test_onefile.c	/^struct fs_real_file {$/;"	s	file:
fs_real_file	src/test_onefile.c	/^typedef struct fs_real_file fs_real_file;$/;"	t	typeref:struct:fs_real_file	file:
fs_register	src/test_onefile.c	/^int fs_register(void){$/;"	f
fs_vfs	src/test_onefile.c	/^static fs_vfs_t fs_vfs = {$/;"	v	file:
fs_vfs_t	src/test_onefile.c	/^struct fs_vfs_t {$/;"	s	file:
fs_vfs_t	src/test_onefile.c	/^typedef struct fs_vfs_t fs_vfs_t;$/;"	t	typeref:struct:fs_vfs_t	file:
fs_vtab	src/test_fs.c	/^struct fs_vtab {$/;"	s	file:
fs_vtab	src/test_fs.c	/^typedef struct fs_vtab fs_vtab;$/;"	t	typeref:struct:fs_vtab	file:
fsdirBestIndex	src/test_fs.c	/^static int fsdirBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
fsdirClose	src/test_fs.c	/^static int fsdirClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsdirColumn	src/test_fs.c	/^static int fsdirColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
fsdirConnect	src/test_fs.c	/^static int fsdirConnect($/;"	f	file:
fsdirDisconnect	src/test_fs.c	/^static int fsdirDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
fsdirEof	src/test_fs.c	/^static int fsdirEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsdirFilter	src/test_fs.c	/^static int fsdirFilter($/;"	f	file:
fsdirModule	src/test_fs.c	/^static sqlite3_module fsdirModule = {$/;"	v	file:
fsdirNext	src/test_fs.c	/^static int fsdirNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
fsdirOpen	src/test_fs.c	/^static int fsdirOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fsdirRowid	src/test_fs.c	/^static int fsdirRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
fstreeBestIndex	src/test_fs.c	/^static int fstreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
fstreeClose	src/test_fs.c	/^static int fstreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
fstreeCloseFd	src/test_fs.c	/^static void fstreeCloseFd(FstreeCsr *pCsr){$/;"	f	file:
fstreeColumn	src/test_fs.c	/^static int fstreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
fstreeConnect	src/test_fs.c	/^static int fstreeConnect($/;"	f	file:
fstreeDisconnect	src/test_fs.c	/^static int fstreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
fstreeEof	src/test_fs.c	/^static int fstreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
fstreeFilter	src/test_fs.c	/^static int fstreeFilter($/;"	f	file:
fstreeModule	src/test_fs.c	/^static sqlite3_module fstreeModule = {$/;"	v	file:
fstreeNext	src/test_fs.c	/^static int fstreeNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
fstreeOpen	src/test_fs.c	/^static int fstreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fstreeRowid	src/test_fs.c	/^static int fstreeRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
ftKernelBegin	shell.c	/^static FILETIME ftKernelBegin;$/;"	v	file:
ftKernelBegin	src/shell.c	/^static FILETIME ftKernelBegin;$/;"	v	file:
ftKernelBegin	tsrc/shell.c	/^static FILETIME ftKernelBegin;$/;"	v	file:
ftUserBegin	shell.c	/^static FILETIME ftUserBegin;$/;"	v	file:
ftUserBegin	src/shell.c	/^static FILETIME ftUserBegin;$/;"	v	file:
ftUserBegin	tsrc/shell.c	/^static FILETIME ftUserBegin;$/;"	v	file:
ftWallBegin	shell.c	/^static sqlite3_int64 ftWallBegin;$/;"	v	file:
ftWallBegin	src/shell.c	/^static sqlite3_int64 ftWallBegin;$/;"	v	file:
ftWallBegin	tsrc/shell.c	/^static sqlite3_int64 ftWallBegin;$/;"	v	file:
fts1Hash	ext/fts1/fts1_hash.h	/^struct fts1Hash {$/;"	s
fts1Hash	ext/fts1/fts1_hash.h	/^typedef struct fts1Hash fts1Hash;$/;"	t	typeref:struct:fts1Hash
fts1Hash	tsrc/fts1_hash.h	/^struct fts1Hash {$/;"	s
fts1Hash	tsrc/fts1_hash.h	/^typedef struct fts1Hash fts1Hash;$/;"	t	typeref:struct:fts1Hash
fts1HashClear	ext/fts1/fts1_hash.h	87;"	d
fts1HashClear	tsrc/fts1_hash.h	87;"	d
fts1HashCount	ext/fts1/fts1_hash.h	110;"	d
fts1HashCount	tsrc/fts1_hash.h	110;"	d
fts1HashData	ext/fts1/fts1_hash.h	103;"	d
fts1HashData	tsrc/fts1_hash.h	103;"	d
fts1HashElem	ext/fts1/fts1_hash.h	/^struct fts1HashElem {$/;"	s
fts1HashElem	ext/fts1/fts1_hash.h	/^typedef struct fts1HashElem fts1HashElem;$/;"	t	typeref:struct:fts1HashElem
fts1HashElem	tsrc/fts1_hash.h	/^struct fts1HashElem {$/;"	s
fts1HashElem	tsrc/fts1_hash.h	/^typedef struct fts1HashElem fts1HashElem;$/;"	t	typeref:struct:fts1HashElem
fts1HashFind	ext/fts1/fts1_hash.h	86;"	d
fts1HashFind	tsrc/fts1_hash.h	86;"	d
fts1HashFirst	ext/fts1/fts1_hash.h	101;"	d
fts1HashFirst	tsrc/fts1_hash.h	101;"	d
fts1HashInit	ext/fts1/fts1_hash.h	84;"	d
fts1HashInit	tsrc/fts1_hash.h	84;"	d
fts1HashInsert	ext/fts1/fts1_hash.h	85;"	d
fts1HashInsert	tsrc/fts1_hash.h	85;"	d
fts1HashKey	ext/fts1/fts1_hash.h	104;"	d
fts1HashKey	tsrc/fts1_hash.h	104;"	d
fts1HashKeysize	ext/fts1/fts1_hash.h	105;"	d
fts1HashKeysize	tsrc/fts1_hash.h	105;"	d
fts1HashNext	ext/fts1/fts1_hash.h	102;"	d
fts1HashNext	tsrc/fts1_hash.h	102;"	d
fts2Hash	ext/fts2/fts2_hash.h	/^struct fts2Hash {$/;"	s
fts2Hash	ext/fts2/fts2_hash.h	/^typedef struct fts2Hash fts2Hash;$/;"	t	typeref:struct:fts2Hash
fts2Hash	tsrc/fts2_hash.h	/^struct fts2Hash {$/;"	s
fts2Hash	tsrc/fts2_hash.h	/^typedef struct fts2Hash fts2Hash;$/;"	t	typeref:struct:fts2Hash
fts2HashClear	ext/fts2/fts2_hash.h	85;"	d
fts2HashClear	tsrc/fts2_hash.h	85;"	d
fts2HashCount	ext/fts2/fts2_hash.h	108;"	d
fts2HashCount	tsrc/fts2_hash.h	108;"	d
fts2HashData	ext/fts2/fts2_hash.h	101;"	d
fts2HashData	tsrc/fts2_hash.h	101;"	d
fts2HashElem	ext/fts2/fts2_hash.h	/^struct fts2HashElem {$/;"	s
fts2HashElem	ext/fts2/fts2_hash.h	/^typedef struct fts2HashElem fts2HashElem;$/;"	t	typeref:struct:fts2HashElem
fts2HashElem	tsrc/fts2_hash.h	/^struct fts2HashElem {$/;"	s
fts2HashElem	tsrc/fts2_hash.h	/^typedef struct fts2HashElem fts2HashElem;$/;"	t	typeref:struct:fts2HashElem
fts2HashFind	ext/fts2/fts2_hash.h	84;"	d
fts2HashFind	tsrc/fts2_hash.h	84;"	d
fts2HashFirst	ext/fts2/fts2_hash.h	99;"	d
fts2HashFirst	tsrc/fts2_hash.h	99;"	d
fts2HashFree	ext/fts2/fts2_hash.c	/^static void fts2HashFree(void *p){$/;"	f	file:
fts2HashFree	tsrc/fts2_hash.c	/^static void fts2HashFree(void *p){$/;"	f	file:
fts2HashInit	ext/fts2/fts2_hash.h	82;"	d
fts2HashInit	tsrc/fts2_hash.h	82;"	d
fts2HashInsert	ext/fts2/fts2_hash.h	83;"	d
fts2HashInsert	tsrc/fts2_hash.h	83;"	d
fts2HashKey	ext/fts2/fts2_hash.h	102;"	d
fts2HashKey	tsrc/fts2_hash.h	102;"	d
fts2HashKeysize	ext/fts2/fts2_hash.h	103;"	d
fts2HashKeysize	tsrc/fts2_hash.h	103;"	d
fts2HashMalloc	ext/fts2/fts2_hash.c	/^static void *fts2HashMalloc(int n){$/;"	f	file:
fts2HashMalloc	tsrc/fts2_hash.c	/^static void *fts2HashMalloc(int n){$/;"	f	file:
fts2HashNext	ext/fts2/fts2_hash.h	100;"	d
fts2HashNext	tsrc/fts2_hash.h	100;"	d
fts2Module	ext/fts2/fts2.c	/^static const sqlite3_module fts2Module = {$/;"	v	file:
fts2Module	ext/fts2/fts2.c	/^static const sqlite3_module fts2Module;   \/* forward declaration *\/$/;"	v	file:
fts2Module	tsrc/fts2.c	/^static const sqlite3_module fts2Module = {$/;"	v	file:
fts2Module	tsrc/fts2.c	/^static const sqlite3_module fts2Module;   \/* forward declaration *\/$/;"	v	file:
fts3AllocateSegdirIdx	ext/fts3/fts3_write.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3AllocateSegdirIdx	sqlite3.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3AllocateSegdirIdx	tsrc/fts3_write.c	/^static int fts3AllocateSegdirIdx($/;"	f	file:
fts3AppendToNode	ext/fts3/fts3_write.c	/^static int fts3AppendToNode($/;"	f	file:
fts3AppendToNode	sqlite3.c	/^static int fts3AppendToNode($/;"	f	file:
fts3AppendToNode	tsrc/fts3_write.c	/^static int fts3AppendToNode($/;"	f	file:
fts3Appendf	ext/fts3/fts3.c	/^static void fts3Appendf($/;"	f	file:
fts3Appendf	sqlite3.c	/^static void fts3Appendf($/;"	f	file:
fts3Appendf	tsrc/fts3.c	/^static void fts3Appendf($/;"	f	file:
fts3BeginMethod	ext/fts3/fts3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BeginMethod	sqlite3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BeginMethod	tsrc/fts3.c	/^static int fts3BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3BestIndexMethod	ext/fts3/fts3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestIndexMethod	sqlite3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestIndexMethod	tsrc/fts3.c	/^static int fts3BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts3BestSnippet	ext/fts3/fts3_snippet.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BestSnippet	sqlite3.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BestSnippet	tsrc/fts3_snippet.c	/^static int fts3BestSnippet($/;"	f	file:
fts3BinCompare	ext/fts3/fts3_hash.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinCompare	sqlite3.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinCompare	tsrc/fts3_hash.c	/^static int fts3BinCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3BinHash	ext/fts3/fts3_hash.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3BinHash	sqlite3.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3BinHash	tsrc/fts3_hash.c	/^static int fts3BinHash(const void *pKey, int nKey){$/;"	f	file:
fts3ChecksumEntry	ext/fts3/fts3_write.c	/^static u64 fts3ChecksumEntry($/;"	f	file:
fts3ChecksumEntry	sqlite3.c	/^static u64 fts3ChecksumEntry($/;"	f	file:
fts3ChecksumEntry	tsrc/fts3_write.c	/^static u64 fts3ChecksumEntry($/;"	f	file:
fts3ChecksumIndex	ext/fts3/fts3_write.c	/^static u64 fts3ChecksumIndex($/;"	f	file:
fts3ChecksumIndex	sqlite3.c	/^static u64 fts3ChecksumIndex($/;"	f	file:
fts3ChecksumIndex	tsrc/fts3_write.c	/^static u64 fts3ChecksumIndex($/;"	f	file:
fts3CloseMethod	ext/fts3/fts3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3CloseMethod	sqlite3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3CloseMethod	tsrc/fts3.c	/^static int fts3CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3ColumnFilter	ext/fts3/fts3_write.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnFilter	sqlite3.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnFilter	tsrc/fts3_write.c	/^static void fts3ColumnFilter($/;"	f	file:
fts3ColumnMethod	ext/fts3/fts3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnMethod	sqlite3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnMethod	tsrc/fts3.c	/^static int fts3ColumnMethod($/;"	f	file:
fts3ColumnlistCopy	ext/fts3/fts3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCopy	sqlite3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCopy	tsrc/fts3.c	/^static void fts3ColumnlistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3ColumnlistCount	ext/fts3/fts3_snippet.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3ColumnlistCount	sqlite3.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3ColumnlistCount	tsrc/fts3_snippet.c	/^static int fts3ColumnlistCount(char **ppCollist){$/;"	f	file:
fts3CommitMethod	ext/fts3/fts3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CommitMethod	sqlite3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CommitMethod	tsrc/fts3.c	/^static int fts3CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3CompareElemByTerm	ext/fts3/fts3_write.c	/^static int SQLITE_CDECL fts3CompareElemByTerm($/;"	f	file:
fts3CompareElemByTerm	sqlite3.c	/^static int SQLITE_CDECL fts3CompareElemByTerm($/;"	f	file:
fts3CompareElemByTerm	tsrc/fts3_write.c	/^static int SQLITE_CDECL fts3CompareElemByTerm($/;"	f	file:
fts3ConnectMethod	ext/fts3/fts3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ConnectMethod	sqlite3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ConnectMethod	tsrc/fts3.c	/^static int fts3ConnectMethod($/;"	f	file:
fts3ContentColumns	ext/fts3/fts3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3ContentColumns	sqlite3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3ContentColumns	tsrc/fts3.c	/^static int fts3ContentColumns($/;"	f	file:
fts3CreateMethod	ext/fts3/fts3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateMethod	sqlite3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateMethod	tsrc/fts3.c	/^static int fts3CreateMethod($/;"	f	file:
fts3CreateTables	ext/fts3/fts3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CreateTables	sqlite3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CreateTables	tsrc/fts3.c	/^static int fts3CreateTables(Fts3Table *p){$/;"	f	file:
fts3CursorSeek	ext/fts3/fts3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeek	sqlite3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeek	tsrc/fts3.c	/^static int fts3CursorSeek(sqlite3_context *pContext, Fts3Cursor *pCsr){$/;"	f	file:
fts3CursorSeekStmt	ext/fts3/fts3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr, sqlite3_stmt **ppStmt){$/;"	f	file:
fts3CursorSeekStmt	sqlite3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr, sqlite3_stmt **ppStmt){$/;"	f	file:
fts3CursorSeekStmt	tsrc/fts3.c	/^static int fts3CursorSeekStmt(Fts3Cursor *pCsr, sqlite3_stmt **ppStmt){$/;"	f	file:
fts3DatabasePageSize	ext/fts3/fts3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DatabasePageSize	sqlite3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DatabasePageSize	tsrc/fts3.c	/^static void fts3DatabasePageSize(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DbExec	ext/fts3/fts3.c	/^static void fts3DbExec($/;"	f	file:
fts3DbExec	sqlite3.c	/^static void fts3DbExec($/;"	f	file:
fts3DbExec	tsrc/fts3.c	/^static void fts3DbExec($/;"	f	file:
fts3DeclareVtab	ext/fts3/fts3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DeclareVtab	sqlite3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DeclareVtab	tsrc/fts3.c	/^static void fts3DeclareVtab(int *pRc, Fts3Table *p){$/;"	f	file:
fts3DecodeIntArray	ext/fts3/fts3_write.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DecodeIntArray	sqlite3.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DecodeIntArray	tsrc/fts3_write.c	/^static void fts3DecodeIntArray($/;"	f	file:
fts3DeleteAll	ext/fts3/fts3_write.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteAll	sqlite3.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteAll	tsrc/fts3_write.c	/^static int fts3DeleteAll(Fts3Table *p, int bContent){$/;"	f	file:
fts3DeleteByRowid	ext/fts3/fts3_write.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteByRowid	sqlite3.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteByRowid	tsrc/fts3_write.c	/^static int fts3DeleteByRowid($/;"	f	file:
fts3DeleteSegdir	ext/fts3/fts3_write.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteSegdir	sqlite3.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteSegdir	tsrc/fts3_write.c	/^static int fts3DeleteSegdir($/;"	f	file:
fts3DeleteSegment	ext/fts3/fts3_write.c	/^static int fts3DeleteSegment($/;"	f	file:
fts3DeleteSegment	sqlite3.c	/^static int fts3DeleteSegment($/;"	f	file:
fts3DeleteSegment	tsrc/fts3_write.c	/^static int fts3DeleteSegment($/;"	f	file:
fts3DeleteTerms	ext/fts3/fts3_write.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DeleteTerms	sqlite3.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DeleteTerms	tsrc/fts3_write.c	/^static void fts3DeleteTerms( $/;"	f	file:
fts3DestroyMethod	ext/fts3/fts3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DestroyMethod	sqlite3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DestroyMethod	tsrc/fts3.c	/^static int fts3DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	ext/fts3/fts3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	sqlite3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DisconnectMethod	tsrc/fts3.c	/^static int fts3DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3DoAutoincrmerge	ext/fts3/fts3_write.c	/^static int fts3DoAutoincrmerge($/;"	f	file:
fts3DoAutoincrmerge	sqlite3.c	/^static int fts3DoAutoincrmerge($/;"	f	file:
fts3DoAutoincrmerge	tsrc/fts3_write.c	/^static int fts3DoAutoincrmerge($/;"	f	file:
fts3DoIncrmerge	ext/fts3/fts3_write.c	/^static int fts3DoIncrmerge($/;"	f	file:
fts3DoIncrmerge	sqlite3.c	/^static int fts3DoIncrmerge($/;"	f	file:
fts3DoIncrmerge	tsrc/fts3_write.c	/^static int fts3DoIncrmerge($/;"	f	file:
fts3DoIntegrityCheck	ext/fts3/fts3_write.c	/^static int fts3DoIntegrityCheck($/;"	f	file:
fts3DoIntegrityCheck	sqlite3.c	/^static int fts3DoIntegrityCheck($/;"	f	file:
fts3DoIntegrityCheck	tsrc/fts3_write.c	/^static int fts3DoIntegrityCheck($/;"	f	file:
fts3DoOptimize	ext/fts3/fts3_write.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoOptimize	sqlite3.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoOptimize	tsrc/fts3_write.c	/^static int fts3DoOptimize(Fts3Table *p, int bReturnDone){$/;"	f	file:
fts3DoRebuild	ext/fts3/fts3_write.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DoRebuild	sqlite3.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DoRebuild	tsrc/fts3_write.c	/^static int fts3DoRebuild(Fts3Table *p){$/;"	f	file:
fts3DocidRange	ext/fts3/fts3.c	/^static sqlite3_int64 fts3DocidRange(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts3DocidRange	sqlite3.c	/^static sqlite3_int64 fts3DocidRange(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts3DocidRange	tsrc/fts3.c	/^static sqlite3_int64 fts3DocidRange(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts3DoclistCountDocids	ext/fts3/fts3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistCountDocids	sqlite3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistCountDocids	tsrc/fts3.c	/^static int fts3DoclistCountDocids(char *aList, int nList){$/;"	f	file:
fts3DoclistOrMerge	ext/fts3/fts3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistOrMerge	sqlite3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistOrMerge	tsrc/fts3.c	/^static int fts3DoclistOrMerge($/;"	f	file:
fts3DoclistPhraseMerge	ext/fts3/fts3.c	/^static int fts3DoclistPhraseMerge($/;"	f	file:
fts3DoclistPhraseMerge	sqlite3.c	/^static int fts3DoclistPhraseMerge($/;"	f	file:
fts3DoclistPhraseMerge	tsrc/fts3.c	/^static int fts3DoclistPhraseMerge($/;"	f	file:
fts3EncodeIntArray	ext/fts3/fts3_write.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EncodeIntArray	sqlite3.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EncodeIntArray	tsrc/fts3_write.c	/^static void fts3EncodeIntArray($/;"	f	file:
fts3EofMethod	ext/fts3/fts3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EofMethod	sqlite3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EofMethod	tsrc/fts3.c	/^static int fts3EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3EvalAllocateReaders	ext/fts3/fts3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAllocateReaders	sqlite3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAllocateReaders	tsrc/fts3.c	/^static void fts3EvalAllocateReaders($/;"	f	file:
fts3EvalAverageDocsize	ext/fts3/fts3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalAverageDocsize	sqlite3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalAverageDocsize	tsrc/fts3.c	/^static int fts3EvalAverageDocsize(Fts3Cursor *pCsr, int *pnPage){$/;"	f	file:
fts3EvalDeferredPhrase	ext/fts3/fts3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalDeferredPhrase	sqlite3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalDeferredPhrase	tsrc/fts3.c	/^static int fts3EvalDeferredPhrase(Fts3Cursor *pCsr, Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalDlPhraseNext	ext/fts3/fts3.c	/^static void fts3EvalDlPhraseNext($/;"	f	file:
fts3EvalDlPhraseNext	sqlite3.c	/^static void fts3EvalDlPhraseNext($/;"	f	file:
fts3EvalDlPhraseNext	tsrc/fts3.c	/^static void fts3EvalDlPhraseNext($/;"	f	file:
fts3EvalGatherStats	ext/fts3/fts3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalGatherStats	sqlite3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalGatherStats	tsrc/fts3.c	/^static int fts3EvalGatherStats($/;"	f	file:
fts3EvalIncrPhraseNext	ext/fts3/fts3.c	/^static int fts3EvalIncrPhraseNext($/;"	f	file:
fts3EvalIncrPhraseNext	sqlite3.c	/^static int fts3EvalIncrPhraseNext($/;"	f	file:
fts3EvalIncrPhraseNext	tsrc/fts3.c	/^static int fts3EvalIncrPhraseNext($/;"	f	file:
fts3EvalInvalidatePoslist	ext/fts3/fts3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalInvalidatePoslist	sqlite3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalInvalidatePoslist	tsrc/fts3.c	/^static void fts3EvalInvalidatePoslist(Fts3Phrase *pPhrase){$/;"	f	file:
fts3EvalNearTest	ext/fts3/fts3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTest	sqlite3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTest	tsrc/fts3.c	/^static int fts3EvalNearTest(Fts3Expr *pExpr, int *pRc){$/;"	f	file:
fts3EvalNearTrim	ext/fts3/fts3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNearTrim	sqlite3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNearTrim	tsrc/fts3.c	/^static int fts3EvalNearTrim($/;"	f	file:
fts3EvalNext	ext/fts3/fts3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNext	sqlite3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNext	tsrc/fts3.c	/^static int fts3EvalNext(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalNextRow	ext/fts3/fts3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalNextRow	sqlite3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalNextRow	tsrc/fts3.c	/^static void fts3EvalNextRow($/;"	f	file:
fts3EvalPhraseLoad	ext/fts3/fts3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseLoad	sqlite3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseLoad	tsrc/fts3.c	/^static int fts3EvalPhraseLoad($/;"	f	file:
fts3EvalPhraseMergeToken	ext/fts3/fts3.c	/^static int fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseMergeToken	sqlite3.c	/^static int fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseMergeToken	tsrc/fts3.c	/^static int fts3EvalPhraseMergeToken($/;"	f	file:
fts3EvalPhraseNext	ext/fts3/fts3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseNext	sqlite3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseNext	tsrc/fts3.c	/^static int fts3EvalPhraseNext($/;"	f	file:
fts3EvalPhraseStart	ext/fts3/fts3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalPhraseStart	sqlite3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalPhraseStart	tsrc/fts3.c	/^static int fts3EvalPhraseStart(Fts3Cursor *pCsr, int bOptOk, Fts3Phrase *p){$/;"	f	file:
fts3EvalRestart	ext/fts3/fts3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalRestart	sqlite3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalRestart	tsrc/fts3.c	/^static void fts3EvalRestart($/;"	f	file:
fts3EvalSelectDeferred	ext/fts3/fts3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalSelectDeferred	sqlite3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalSelectDeferred	tsrc/fts3.c	/^static int fts3EvalSelectDeferred($/;"	f	file:
fts3EvalStart	ext/fts3/fts3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStart	sqlite3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStart	tsrc/fts3.c	/^static int fts3EvalStart(Fts3Cursor *pCsr){$/;"	f	file:
fts3EvalStartReaders	ext/fts3/fts3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalStartReaders	sqlite3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalStartReaders	tsrc/fts3.c	/^static void fts3EvalStartReaders($/;"	f	file:
fts3EvalTestExpr	ext/fts3/fts3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTestExpr	sqlite3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTestExpr	tsrc/fts3.c	/^static int fts3EvalTestExpr($/;"	f	file:
fts3EvalTokenCosts	ext/fts3/fts3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalTokenCosts	sqlite3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalTokenCosts	tsrc/fts3.c	/^static void fts3EvalTokenCosts($/;"	f	file:
fts3EvalUpdateCounts	ext/fts3/fts3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3EvalUpdateCounts	sqlite3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3EvalUpdateCounts	tsrc/fts3.c	/^static void fts3EvalUpdateCounts(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprBalance	ext/fts3/fts3_expr.c	/^static int fts3ExprBalance(Fts3Expr **pp, int nMaxDepth){$/;"	f	file:
fts3ExprBalance	sqlite3.c	/^static int fts3ExprBalance(Fts3Expr **pp, int nMaxDepth){$/;"	f	file:
fts3ExprBalance	tsrc/fts3_expr.c	/^static int fts3ExprBalance(Fts3Expr **pp, int nMaxDepth){$/;"	f	file:
fts3ExprCheckDepth	ext/fts3/fts3_expr.c	/^static int fts3ExprCheckDepth(Fts3Expr *p, int nMaxDepth){$/;"	f	file:
fts3ExprCheckDepth	sqlite3.c	/^static int fts3ExprCheckDepth(Fts3Expr *p, int nMaxDepth){$/;"	f	file:
fts3ExprCheckDepth	tsrc/fts3_expr.c	/^static int fts3ExprCheckDepth(Fts3Expr *p, int nMaxDepth){$/;"	f	file:
fts3ExprGlobalHitsCb	ext/fts3/fts3_snippet.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprGlobalHitsCb	sqlite3.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprGlobalHitsCb	tsrc/fts3_snippet.c	/^static int fts3ExprGlobalHitsCb($/;"	f	file:
fts3ExprIterate	ext/fts3/fts3_snippet.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate	sqlite3.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate	tsrc/fts3_snippet.c	/^static int fts3ExprIterate($/;"	f	file:
fts3ExprIterate2	ext/fts3/fts3_snippet.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprIterate2	sqlite3.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprIterate2	tsrc/fts3_snippet.c	/^static int fts3ExprIterate2($/;"	f	file:
fts3ExprLHitGather	ext/fts3/fts3_snippet.c	/^static void fts3ExprLHitGather($/;"	f	file:
fts3ExprLHitGather	sqlite3.c	/^static void fts3ExprLHitGather($/;"	f	file:
fts3ExprLHitGather	tsrc/fts3_snippet.c	/^static void fts3ExprLHitGather($/;"	f	file:
fts3ExprLHits	ext/fts3/fts3_snippet.c	/^static void fts3ExprLHits($/;"	f	file:
fts3ExprLHits	sqlite3.c	/^static void fts3ExprLHits($/;"	f	file:
fts3ExprLHits	tsrc/fts3_snippet.c	/^static void fts3ExprLHits($/;"	f	file:
fts3ExprLoadDoclists	ext/fts3/fts3_snippet.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclists	sqlite3.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclists	tsrc/fts3_snippet.c	/^static int fts3ExprLoadDoclists($/;"	f	file:
fts3ExprLoadDoclistsCb	ext/fts3/fts3_snippet.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLoadDoclistsCb	sqlite3.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLoadDoclistsCb	tsrc/fts3_snippet.c	/^static int fts3ExprLoadDoclistsCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprLocalHitsCb	ext/fts3/fts3_snippet.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprLocalHitsCb	sqlite3.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprLocalHitsCb	tsrc/fts3_snippet.c	/^static int fts3ExprLocalHitsCb($/;"	f	file:
fts3ExprParse	ext/fts3/fts3_expr.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprParse	sqlite3.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprParse	tsrc/fts3_expr.c	/^static int fts3ExprParse($/;"	f	file:
fts3ExprParseUnbalanced	ext/fts3/fts3_expr.c	/^static int fts3ExprParseUnbalanced($/;"	f	file:
fts3ExprParseUnbalanced	sqlite3.c	/^static int fts3ExprParseUnbalanced($/;"	f	file:
fts3ExprParseUnbalanced	tsrc/fts3_expr.c	/^static int fts3ExprParseUnbalanced($/;"	f	file:
fts3ExprPhraseCount	ext/fts3/fts3_snippet.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCount	sqlite3.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCount	tsrc/fts3_snippet.c	/^static int fts3ExprPhraseCount(Fts3Expr *pExpr){$/;"	f	file:
fts3ExprPhraseCountCb	ext/fts3/fts3_snippet.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprPhraseCountCb	sqlite3.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprPhraseCountCb	tsrc/fts3_snippet.c	/^static int fts3ExprPhraseCountCb(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	ext/fts3/fts3_snippet.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	sqlite3.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTermOffsetInit	tsrc/fts3_snippet.c	/^static int fts3ExprTermOffsetInit(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3ExprTest	ext/fts3/fts3_expr.c	/^static void fts3ExprTest($/;"	f	file:
fts3ExprTest	sqlite3.c	/^static void fts3ExprTest($/;"	f	file:
fts3ExprTest	tsrc/fts3_expr.c	/^static void fts3ExprTest($/;"	f	file:
fts3FilterMethod	ext/fts3/fts3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FilterMethod	sqlite3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FilterMethod	tsrc/fts3.c	/^static int fts3FilterMethod($/;"	f	file:
fts3FindElementByHash	ext/fts3/fts3_hash.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindElementByHash	sqlite3.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindElementByHash	tsrc/fts3_hash.c	/^static Fts3HashElem *fts3FindElementByHash($/;"	f	file:
fts3FindFunctionMethod	ext/fts3/fts3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FindFunctionMethod	sqlite3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FindFunctionMethod	tsrc/fts3.c	/^static int fts3FindFunctionMethod($/;"	f	file:
fts3FreeExprNode	ext/fts3/fts3_expr.c	/^static void fts3FreeExprNode(Fts3Expr *p){$/;"	f	file:
fts3FreeExprNode	sqlite3.c	/^static void fts3FreeExprNode(Fts3Expr *p){$/;"	f	file:
fts3FreeExprNode	tsrc/fts3_expr.c	/^static void fts3FreeExprNode(Fts3Expr *p){$/;"	f	file:
fts3FunctionArg	ext/fts3/fts3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3FunctionArg	sqlite3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3FunctionArg	tsrc/fts3.c	/^static int fts3FunctionArg($/;"	f	file:
fts3GetDeltaPosition	ext/fts3/fts3_snippet.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaPosition	sqlite3.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaPosition	tsrc/fts3_snippet.c	/^static void fts3GetDeltaPosition(char **pp, int *piPos){$/;"	f	file:
fts3GetDeltaVarint	ext/fts3/fts3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint	sqlite3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint	tsrc/fts3.c	/^static void fts3GetDeltaVarint(char **pp, sqlite3_int64 *pVal){$/;"	f	file:
fts3GetDeltaVarint3	ext/fts3/fts3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetDeltaVarint3	sqlite3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetDeltaVarint3	tsrc/fts3.c	/^static void fts3GetDeltaVarint3($/;"	f	file:
fts3GetMatchinfo	ext/fts3/fts3_snippet.c	/^static void fts3GetMatchinfo($/;"	f	file:
fts3GetMatchinfo	sqlite3.c	/^static void fts3GetMatchinfo($/;"	f	file:
fts3GetMatchinfo	tsrc/fts3_snippet.c	/^static void fts3GetMatchinfo($/;"	f	file:
fts3GetReverseVarint	ext/fts3/fts3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GetReverseVarint	sqlite3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GetReverseVarint	tsrc/fts3.c	/^static void fts3GetReverseVarint($/;"	f	file:
fts3GetVarint32	ext/fts3/fts3Int.h	546;"	d
fts3GetVarint32	sqlite3.c	141970;"	d	file:
fts3GetVarint32	tsrc/fts3Int.h	546;"	d
fts3Getint	ext/fts3/fts3_write.c	/^static int fts3Getint(const char **pz){$/;"	f	file:
fts3Getint	sqlite3.c	/^static int fts3Getint(const char **pz){$/;"	f	file:
fts3Getint	tsrc/fts3_write.c	/^static int fts3Getint(const char **pz){$/;"	f	file:
fts3GobbleInt	ext/fts3/fts3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3GobbleInt	sqlite3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3GobbleInt	tsrc/fts3.c	/^static int fts3GobbleInt(const char **pp, int *pnOut){$/;"	f	file:
fts3HashClear	ext/fts3/fts3_hash.h	86;"	d
fts3HashClear	sqlite3.c	141441;"	d	file:
fts3HashClear	tsrc/fts3_hash.h	86;"	d
fts3HashCount	ext/fts3/fts3_hash.h	110;"	d
fts3HashCount	sqlite3.c	141465;"	d	file:
fts3HashCount	tsrc/fts3_hash.h	110;"	d
fts3HashData	ext/fts3/fts3_hash.h	103;"	d
fts3HashData	sqlite3.c	141458;"	d	file:
fts3HashData	tsrc/fts3_hash.h	103;"	d
fts3HashFind	ext/fts3/fts3_hash.h	85;"	d
fts3HashFind	sqlite3.c	141440;"	d	file:
fts3HashFind	tsrc/fts3_hash.h	85;"	d
fts3HashFindElem	ext/fts3/fts3_hash.h	87;"	d
fts3HashFindElem	sqlite3.c	141442;"	d	file:
fts3HashFindElem	tsrc/fts3_hash.h	87;"	d
fts3HashFirst	ext/fts3/fts3_hash.h	101;"	d
fts3HashFirst	sqlite3.c	141456;"	d	file:
fts3HashFirst	tsrc/fts3_hash.h	101;"	d
fts3HashFree	ext/fts3/fts3_hash.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashFree	sqlite3.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashFree	tsrc/fts3_hash.c	/^static void fts3HashFree(void *p){$/;"	f	file:
fts3HashInit	ext/fts3/fts3_hash.h	83;"	d
fts3HashInit	sqlite3.c	141438;"	d	file:
fts3HashInit	tsrc/fts3_hash.h	83;"	d
fts3HashInsert	ext/fts3/fts3_hash.h	84;"	d
fts3HashInsert	sqlite3.c	141439;"	d	file:
fts3HashInsert	tsrc/fts3_hash.h	84;"	d
fts3HashInsertElement	ext/fts3/fts3_hash.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashInsertElement	sqlite3.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashInsertElement	tsrc/fts3_hash.c	/^static void fts3HashInsertElement($/;"	f	file:
fts3HashKey	ext/fts3/fts3_hash.h	104;"	d
fts3HashKey	sqlite3.c	141459;"	d	file:
fts3HashKey	tsrc/fts3_hash.h	104;"	d
fts3HashKeysize	ext/fts3/fts3_hash.h	105;"	d
fts3HashKeysize	sqlite3.c	141460;"	d	file:
fts3HashKeysize	tsrc/fts3_hash.h	105;"	d
fts3HashMalloc	ext/fts3/fts3_hash.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashMalloc	sqlite3.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashMalloc	tsrc/fts3_hash.c	/^static void *fts3HashMalloc(int n){$/;"	f	file:
fts3HashNext	ext/fts3/fts3_hash.h	102;"	d
fts3HashNext	sqlite3.c	141457;"	d	file:
fts3HashNext	tsrc/fts3_hash.h	102;"	d
fts3IncrmergeAppend	ext/fts3/fts3_write.c	/^static int fts3IncrmergeAppend($/;"	f	file:
fts3IncrmergeAppend	sqlite3.c	/^static int fts3IncrmergeAppend($/;"	f	file:
fts3IncrmergeAppend	tsrc/fts3_write.c	/^static int fts3IncrmergeAppend($/;"	f	file:
fts3IncrmergeChomp	ext/fts3/fts3_write.c	/^static int fts3IncrmergeChomp($/;"	f	file:
fts3IncrmergeChomp	sqlite3.c	/^static int fts3IncrmergeChomp($/;"	f	file:
fts3IncrmergeChomp	tsrc/fts3_write.c	/^static int fts3IncrmergeChomp($/;"	f	file:
fts3IncrmergeCsr	ext/fts3/fts3_write.c	/^static int fts3IncrmergeCsr($/;"	f	file:
fts3IncrmergeCsr	sqlite3.c	/^static int fts3IncrmergeCsr($/;"	f	file:
fts3IncrmergeCsr	tsrc/fts3_write.c	/^static int fts3IncrmergeCsr($/;"	f	file:
fts3IncrmergeHintLoad	ext/fts3/fts3_write.c	/^static int fts3IncrmergeHintLoad(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintLoad	sqlite3.c	/^static int fts3IncrmergeHintLoad(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintLoad	tsrc/fts3_write.c	/^static int fts3IncrmergeHintLoad(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintPop	ext/fts3/fts3_write.c	/^static int fts3IncrmergeHintPop(Blob *pHint, i64 *piAbsLevel, int *pnInput){$/;"	f	file:
fts3IncrmergeHintPop	sqlite3.c	/^static int fts3IncrmergeHintPop(Blob *pHint, i64 *piAbsLevel, int *pnInput){$/;"	f	file:
fts3IncrmergeHintPop	tsrc/fts3_write.c	/^static int fts3IncrmergeHintPop(Blob *pHint, i64 *piAbsLevel, int *pnInput){$/;"	f	file:
fts3IncrmergeHintPush	ext/fts3/fts3_write.c	/^static void fts3IncrmergeHintPush($/;"	f	file:
fts3IncrmergeHintPush	sqlite3.c	/^static void fts3IncrmergeHintPush($/;"	f	file:
fts3IncrmergeHintPush	tsrc/fts3_write.c	/^static void fts3IncrmergeHintPush($/;"	f	file:
fts3IncrmergeHintStore	ext/fts3/fts3_write.c	/^static int fts3IncrmergeHintStore(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintStore	sqlite3.c	/^static int fts3IncrmergeHintStore(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeHintStore	tsrc/fts3_write.c	/^static int fts3IncrmergeHintStore(Fts3Table *p, Blob *pHint){$/;"	f	file:
fts3IncrmergeLoad	ext/fts3/fts3_write.c	/^static int fts3IncrmergeLoad($/;"	f	file:
fts3IncrmergeLoad	sqlite3.c	/^static int fts3IncrmergeLoad($/;"	f	file:
fts3IncrmergeLoad	tsrc/fts3_write.c	/^static int fts3IncrmergeLoad($/;"	f	file:
fts3IncrmergeOutputIdx	ext/fts3/fts3_write.c	/^static int fts3IncrmergeOutputIdx( $/;"	f	file:
fts3IncrmergeOutputIdx	sqlite3.c	/^static int fts3IncrmergeOutputIdx( $/;"	f	file:
fts3IncrmergeOutputIdx	tsrc/fts3_write.c	/^static int fts3IncrmergeOutputIdx( $/;"	f	file:
fts3IncrmergePush	ext/fts3/fts3_write.c	/^static int fts3IncrmergePush($/;"	f	file:
fts3IncrmergePush	sqlite3.c	/^static int fts3IncrmergePush($/;"	f	file:
fts3IncrmergePush	tsrc/fts3_write.c	/^static int fts3IncrmergePush($/;"	f	file:
fts3IncrmergeRelease	ext/fts3/fts3_write.c	/^static void fts3IncrmergeRelease($/;"	f	file:
fts3IncrmergeRelease	sqlite3.c	/^static void fts3IncrmergeRelease($/;"	f	file:
fts3IncrmergeRelease	tsrc/fts3_write.c	/^static void fts3IncrmergeRelease($/;"	f	file:
fts3IncrmergeWriter	ext/fts3/fts3_write.c	/^static int fts3IncrmergeWriter( $/;"	f	file:
fts3IncrmergeWriter	sqlite3.c	/^static int fts3IncrmergeWriter( $/;"	f	file:
fts3IncrmergeWriter	tsrc/fts3_write.c	/^static int fts3IncrmergeWriter( $/;"	f	file:
fts3InitVtab	ext/fts3/fts3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InitVtab	sqlite3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InitVtab	tsrc/fts3.c	/^static int fts3InitVtab($/;"	f	file:
fts3InsertData	ext/fts3/fts3_write.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertData	sqlite3.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertData	tsrc/fts3_write.c	/^static int fts3InsertData($/;"	f	file:
fts3InsertDocsize	ext/fts3/fts3_write.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertDocsize	sqlite3.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertDocsize	tsrc/fts3_write.c	/^static void fts3InsertDocsize($/;"	f	file:
fts3InsertTerms	ext/fts3/fts3_write.c	/^static int fts3InsertTerms($/;"	f	file:
fts3InsertTerms	sqlite3.c	/^static int fts3InsertTerms($/;"	f	file:
fts3InsertTerms	tsrc/fts3_write.c	/^static int fts3InsertTerms($/;"	f	file:
fts3IntegrityCheck	ext/fts3/fts3_write.c	/^static int fts3IntegrityCheck(Fts3Table *p, int *pbOk){$/;"	f	file:
fts3IntegrityCheck	sqlite3.c	/^static int fts3IntegrityCheck(Fts3Table *p, int *pbOk){$/;"	f	file:
fts3IntegrityCheck	tsrc/fts3_write.c	/^static int fts3IntegrityCheck(Fts3Table *p, int *pbOk){$/;"	f	file:
fts3IsAppendable	ext/fts3/fts3_write.c	/^static int fts3IsAppendable(Fts3Table *p, sqlite3_int64 iEnd, int *pbRes){$/;"	f	file:
fts3IsAppendable	sqlite3.c	/^static int fts3IsAppendable(Fts3Table *p, sqlite3_int64 iEnd, int *pbRes){$/;"	f	file:
fts3IsAppendable	tsrc/fts3_write.c	/^static int fts3IsAppendable(Fts3Table *p, sqlite3_int64 iEnd, int *pbRes){$/;"	f	file:
fts3IsEmpty	ext/fts3/fts3_write.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsEmpty	sqlite3.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsEmpty	tsrc/fts3_write.c	/^static int fts3IsEmpty(Fts3Table *p, sqlite3_value *pRowid, int *pisEmpty){$/;"	f	file:
fts3IsSpecialColumn	ext/fts3/fts3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3IsSpecialColumn	sqlite3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3IsSpecialColumn	tsrc/fts3.c	/^static int fts3IsSpecialColumn($/;"	f	file:
fts3LcsIteratorAdvance	ext/fts3/fts3_snippet.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3LcsIteratorAdvance	sqlite3.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3LcsIteratorAdvance	tsrc/fts3_snippet.c	/^static int fts3LcsIteratorAdvance(LcsIterator *pIter){$/;"	f	file:
fts3LogMerge	ext/fts3/fts3_write.c	/^static void fts3LogMerge(int nMerge, sqlite3_int64 iAbsLevel){$/;"	f	file:
fts3LogMerge	ext/fts3/fts3_write.c	88;"	d	file:
fts3LogMerge	sqlite3.c	/^static void fts3LogMerge(int nMerge, sqlite3_int64 iAbsLevel){$/;"	f	file:
fts3LogMerge	sqlite3.c	151897;"	d	file:
fts3LogMerge	tsrc/fts3_write.c	/^static void fts3LogMerge(int nMerge, sqlite3_int64 iAbsLevel){$/;"	f	file:
fts3LogMerge	tsrc/fts3_write.c	88;"	d	file:
fts3MIBufferAlloc	ext/fts3/fts3_snippet.c	/^static void (*fts3MIBufferAlloc(MatchinfoBuffer *p, u32 **paOut))(void*){$/;"	f	file:
fts3MIBufferAlloc	sqlite3.c	/^static void (*fts3MIBufferAlloc(MatchinfoBuffer *p, u32 **paOut))(void*){$/;"	f	file:
fts3MIBufferAlloc	tsrc/fts3_snippet.c	/^static void (*fts3MIBufferAlloc(MatchinfoBuffer *p, u32 **paOut))(void*){$/;"	f	file:
fts3MIBufferFree	ext/fts3/fts3_snippet.c	/^static void fts3MIBufferFree(void *p){$/;"	f	file:
fts3MIBufferFree	sqlite3.c	/^static void fts3MIBufferFree(void *p){$/;"	f	file:
fts3MIBufferFree	tsrc/fts3_snippet.c	/^static void fts3MIBufferFree(void *p){$/;"	f	file:
fts3MIBufferNew	ext/fts3/fts3_snippet.c	/^static MatchinfoBuffer *fts3MIBufferNew(int nElem, const char *zMatchinfo){$/;"	f	file:
fts3MIBufferNew	sqlite3.c	/^static MatchinfoBuffer *fts3MIBufferNew(int nElem, const char *zMatchinfo){$/;"	f	file:
fts3MIBufferNew	tsrc/fts3_snippet.c	/^static MatchinfoBuffer *fts3MIBufferNew(int nElem, const char *zMatchinfo){$/;"	f	file:
fts3MIBufferSetGlobal	ext/fts3/fts3_snippet.c	/^static void fts3MIBufferSetGlobal(MatchinfoBuffer *p){$/;"	f	file:
fts3MIBufferSetGlobal	sqlite3.c	/^static void fts3MIBufferSetGlobal(MatchinfoBuffer *p){$/;"	f	file:
fts3MIBufferSetGlobal	tsrc/fts3_snippet.c	/^static void fts3MIBufferSetGlobal(MatchinfoBuffer *p){$/;"	f	file:
fts3MallocZero	ext/fts3/fts3_expr.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MallocZero	sqlite3.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MallocZero	tsrc/fts3_expr.c	/^static void *fts3MallocZero(int nByte){$/;"	f	file:
fts3MatchinfoCheck	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoCheck	sqlite3.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoCheck	tsrc/fts3_snippet.c	/^static int fts3MatchinfoCheck($/;"	f	file:
fts3MatchinfoFunc	ext/fts3/fts3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoFunc	sqlite3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoFunc	tsrc/fts3.c	/^static void fts3MatchinfoFunc($/;"	f	file:
fts3MatchinfoLcs	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcs	sqlite3.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcs	tsrc/fts3_snippet.c	/^static int fts3MatchinfoLcs(Fts3Cursor *pCsr, MatchInfo *pInfo){$/;"	f	file:
fts3MatchinfoLcsCb	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoLcsCb	sqlite3.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoLcsCb	tsrc/fts3_snippet.c	/^static int fts3MatchinfoLcsCb($/;"	f	file:
fts3MatchinfoSelectDoctotal	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSelectDoctotal	sqlite3.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSelectDoctotal	tsrc/fts3_snippet.c	/^static int fts3MatchinfoSelectDoctotal($/;"	f	file:
fts3MatchinfoSize	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoSize	sqlite3.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoSize	tsrc/fts3_snippet.c	/^static int fts3MatchinfoSize(MatchInfo *pInfo, char cArg){$/;"	f	file:
fts3MatchinfoValues	ext/fts3/fts3_snippet.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3MatchinfoValues	sqlite3.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3MatchinfoValues	tsrc/fts3_snippet.c	/^static int fts3MatchinfoValues($/;"	f	file:
fts3Module	ext/fts3/fts3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3Module	sqlite3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3Module	tsrc/fts3.c	/^static const sqlite3_module fts3Module = {$/;"	v	file:
fts3MsrBufferData	ext/fts3/fts3_write.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3MsrBufferData	sqlite3.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3MsrBufferData	tsrc/fts3_write.c	/^static int fts3MsrBufferData($/;"	f	file:
fts3NextMethod	ext/fts3/fts3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NextMethod	sqlite3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NextMethod	tsrc/fts3.c	/^static int fts3NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3NodeAddTerm	ext/fts3/fts3_write.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeAddTerm	sqlite3.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeAddTerm	tsrc/fts3_write.c	/^static int fts3NodeAddTerm($/;"	f	file:
fts3NodeFree	ext/fts3/fts3_write.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeFree	sqlite3.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeFree	tsrc/fts3_write.c	/^static void fts3NodeFree(SegmentNode *pTree){$/;"	f	file:
fts3NodeWrite	ext/fts3/fts3_write.c	/^static int fts3NodeWrite($/;"	f	file:
fts3NodeWrite	sqlite3.c	/^static int fts3NodeWrite($/;"	f	file:
fts3NodeWrite	tsrc/fts3_write.c	/^static int fts3NodeWrite($/;"	f	file:
fts3OffsetsFunc	ext/fts3/fts3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OffsetsFunc	sqlite3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OffsetsFunc	tsrc/fts3.c	/^static void fts3OffsetsFunc($/;"	f	file:
fts3OpenMethod	ext/fts3/fts3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OpenMethod	sqlite3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OpenMethod	tsrc/fts3.c	/^static int fts3OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3OptimizeFunc	ext/fts3/fts3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3OptimizeFunc	sqlite3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3OptimizeFunc	tsrc/fts3.c	/^static void fts3OptimizeFunc($/;"	f	file:
fts3PendingListAppend	ext/fts3/fts3_write.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppend	sqlite3.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppend	tsrc/fts3_write.c	/^static int fts3PendingListAppend($/;"	f	file:
fts3PendingListAppendVarint	ext/fts3/fts3_write.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListAppendVarint	sqlite3.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListAppendVarint	tsrc/fts3_write.c	/^static int fts3PendingListAppendVarint($/;"	f	file:
fts3PendingListDelete	ext/fts3/fts3_write.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingListDelete	sqlite3.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingListDelete	tsrc/fts3_write.c	/^static void fts3PendingListDelete(PendingList *pList){$/;"	f	file:
fts3PendingTermsAdd	ext/fts3/fts3_write.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAdd	sqlite3.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAdd	tsrc/fts3_write.c	/^static int fts3PendingTermsAdd($/;"	f	file:
fts3PendingTermsAddOne	ext/fts3/fts3_write.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsAddOne	sqlite3.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsAddOne	tsrc/fts3_write.c	/^static int fts3PendingTermsAddOne($/;"	f	file:
fts3PendingTermsDocid	ext/fts3/fts3_write.c	/^static int fts3PendingTermsDocid($/;"	f	file:
fts3PendingTermsDocid	sqlite3.c	/^static int fts3PendingTermsDocid($/;"	f	file:
fts3PendingTermsDocid	tsrc/fts3_write.c	/^static int fts3PendingTermsDocid($/;"	f	file:
fts3PoslistCopy	ext/fts3/fts3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistCopy	sqlite3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistCopy	tsrc/fts3.c	/^static void fts3PoslistCopy(char **pp, char **ppPoslist){$/;"	f	file:
fts3PoslistMerge	ext/fts3/fts3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistMerge	sqlite3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistMerge	tsrc/fts3.c	/^static void fts3PoslistMerge($/;"	f	file:
fts3PoslistNearMerge	ext/fts3/fts3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistNearMerge	sqlite3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistNearMerge	tsrc/fts3.c	/^static int fts3PoslistNearMerge($/;"	f	file:
fts3PoslistPhraseMerge	ext/fts3/fts3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PoslistPhraseMerge	sqlite3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PoslistPhraseMerge	tsrc/fts3.c	/^static int fts3PoslistPhraseMerge($/;"	f	file:
fts3PrefixCompress	ext/fts3/fts3_write.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixCompress	sqlite3.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixCompress	tsrc/fts3_write.c	/^static int fts3PrefixCompress($/;"	f	file:
fts3PrefixParameter	ext/fts3/fts3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PrefixParameter	sqlite3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PrefixParameter	tsrc/fts3.c	/^static int fts3PrefixParameter($/;"	f	file:
fts3PromoteSegments	ext/fts3/fts3_write.c	/^static int fts3PromoteSegments($/;"	f	file:
fts3PromoteSegments	sqlite3.c	/^static int fts3PromoteSegments($/;"	f	file:
fts3PromoteSegments	tsrc/fts3_write.c	/^static int fts3PromoteSegments($/;"	f	file:
fts3PutColNumber	ext/fts3/fts3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutColNumber	sqlite3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutColNumber	tsrc/fts3.c	/^static int fts3PutColNumber(char **pp, int iCol){$/;"	f	file:
fts3PutDeltaVarint	ext/fts3/fts3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint	sqlite3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint	tsrc/fts3.c	/^static void fts3PutDeltaVarint($/;"	f	file:
fts3PutDeltaVarint3	ext/fts3/fts3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3PutDeltaVarint3	sqlite3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3PutDeltaVarint3	tsrc/fts3.c	/^static void fts3PutDeltaVarint3($/;"	f	file:
fts3QuoteId	ext/fts3/fts3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3QuoteId	sqlite3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3QuoteId	tsrc/fts3.c	/^static char *fts3QuoteId(char const *zInput){$/;"	f	file:
fts3ReadEndBlockField	ext/fts3/fts3_write.c	/^static void fts3ReadEndBlockField($/;"	f	file:
fts3ReadEndBlockField	sqlite3.c	/^static void fts3ReadEndBlockField($/;"	f	file:
fts3ReadEndBlockField	tsrc/fts3_write.c	/^static void fts3ReadEndBlockField($/;"	f	file:
fts3ReadExprList	ext/fts3/fts3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadExprList	sqlite3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadExprList	tsrc/fts3.c	/^static char *fts3ReadExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3ReadNextPos	ext/fts3/fts3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReadNextPos	sqlite3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReadNextPos	tsrc/fts3.c	/^static void fts3ReadNextPos($/;"	f	file:
fts3ReallocOrFree	ext/fts3/fts3_expr.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3ReallocOrFree	sqlite3.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3ReallocOrFree	tsrc/fts3_expr.c	/^static void *fts3ReallocOrFree(void *pOrig, int nNew){$/;"	f	file:
fts3Rehash	ext/fts3/fts3_hash.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3Rehash	sqlite3.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3Rehash	tsrc/fts3_hash.c	/^static int fts3Rehash(Fts3Hash *pH, int new_size){$/;"	f	file:
fts3ReleaseMethod	ext/fts3/fts3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ReleaseMethod	sqlite3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ReleaseMethod	tsrc/fts3.c	/^static int fts3ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RemoveElementByHash	ext/fts3/fts3_hash.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RemoveElementByHash	sqlite3.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RemoveElementByHash	tsrc/fts3_hash.c	/^static void fts3RemoveElementByHash($/;"	f	file:
fts3RemoveSegdirEntry	ext/fts3/fts3_write.c	/^static int fts3RemoveSegdirEntry($/;"	f	file:
fts3RemoveSegdirEntry	sqlite3.c	/^static int fts3RemoveSegdirEntry($/;"	f	file:
fts3RemoveSegdirEntry	tsrc/fts3_write.c	/^static int fts3RemoveSegdirEntry($/;"	f	file:
fts3RenameMethod	ext/fts3/fts3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3RenameMethod	sqlite3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3RenameMethod	tsrc/fts3.c	/^static int fts3RenameMethod($/;"	f	file:
fts3RepackSegdirLevel	ext/fts3/fts3_write.c	/^static int fts3RepackSegdirLevel($/;"	f	file:
fts3RepackSegdirLevel	sqlite3.c	/^static int fts3RepackSegdirLevel($/;"	f	file:
fts3RepackSegdirLevel	tsrc/fts3_write.c	/^static int fts3RepackSegdirLevel($/;"	f	file:
fts3ReversePoslist	ext/fts3/fts3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3ReversePoslist	sqlite3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3ReversePoslist	tsrc/fts3.c	/^static void fts3ReversePoslist(char *pStart, char **ppPoslist){$/;"	f	file:
fts3RollbackMethod	ext/fts3/fts3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackMethod	sqlite3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackMethod	tsrc/fts3.c	/^static int fts3RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3RollbackToMethod	ext/fts3/fts3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RollbackToMethod	sqlite3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RollbackToMethod	tsrc/fts3.c	/^static int fts3RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3RowidMethod	ext/fts3/fts3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3RowidMethod	sqlite3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3RowidMethod	tsrc/fts3.c	/^static int fts3RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts3SavepointMethod	ext/fts3/fts3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3SavepointMethod	sqlite3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3SavepointMethod	tsrc/fts3.c	/^static int fts3SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts3ScanInteriorNode	ext/fts3/fts3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3ScanInteriorNode	sqlite3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3ScanInteriorNode	tsrc/fts3.c	/^static int fts3ScanInteriorNode($/;"	f	file:
fts3SegReaderCmp	ext/fts3/fts3_write.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCmp	sqlite3.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCmp	tsrc/fts3_write.c	/^static int fts3SegReaderCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderCursor	ext/fts3/fts3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursor	sqlite3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursor	tsrc/fts3.c	/^static int fts3SegReaderCursor($/;"	f	file:
fts3SegReaderCursorAddZero	ext/fts3/fts3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAddZero	sqlite3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAddZero	tsrc/fts3.c	/^static int fts3SegReaderCursorAddZero($/;"	f	file:
fts3SegReaderCursorAppend	ext/fts3/fts3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorAppend	sqlite3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorAppend	tsrc/fts3.c	/^static int fts3SegReaderCursorAppend($/;"	f	file:
fts3SegReaderCursorFree	ext/fts3/fts3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderCursorFree	sqlite3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderCursorFree	tsrc/fts3.c	/^static void fts3SegReaderCursorFree(Fts3MultiSegReader *pSegcsr){$/;"	f	file:
fts3SegReaderDoclistCmp	ext/fts3/fts3_write.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmp	sqlite3.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmp	tsrc/fts3_write.c	/^static int fts3SegReaderDoclistCmp(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	ext/fts3/fts3_write.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	sqlite3.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderDoclistCmpRev	tsrc/fts3_write.c	/^static int fts3SegReaderDoclistCmpRev(Fts3SegReader *pLhs, Fts3SegReader *pRhs){$/;"	f	file:
fts3SegReaderFirstDocid	ext/fts3/fts3_write.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderFirstDocid	sqlite3.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderFirstDocid	tsrc/fts3_write.c	/^static int fts3SegReaderFirstDocid(Fts3Table *pTab, Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	ext/fts3/fts3_write.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	sqlite3.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIncrRead	tsrc/fts3_write.c	/^static int fts3SegReaderIncrRead(Fts3SegReader *pReader){$/;"	f	file:
fts3SegReaderIsPending	ext/fts3/fts3_write.c	173;"	d	file:
fts3SegReaderIsPending	sqlite3.c	151982;"	d	file:
fts3SegReaderIsPending	tsrc/fts3_write.c	173;"	d	file:
fts3SegReaderIsRootOnly	ext/fts3/fts3_write.c	174;"	d	file:
fts3SegReaderIsRootOnly	sqlite3.c	151983;"	d	file:
fts3SegReaderIsRootOnly	tsrc/fts3_write.c	174;"	d	file:
fts3SegReaderNext	ext/fts3/fts3_write.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNext	sqlite3.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNext	tsrc/fts3_write.c	/^static int fts3SegReaderNext($/;"	f	file:
fts3SegReaderNextDocid	ext/fts3/fts3_write.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderNextDocid	sqlite3.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderNextDocid	tsrc/fts3_write.c	/^static int fts3SegReaderNextDocid($/;"	f	file:
fts3SegReaderRequire	ext/fts3/fts3_write.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderRequire	sqlite3.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderRequire	tsrc/fts3_write.c	/^static int fts3SegReaderRequire(Fts3SegReader *pReader, char *pFrom, int nByte){$/;"	f	file:
fts3SegReaderSetEof	ext/fts3/fts3_write.c	/^static void fts3SegReaderSetEof(Fts3SegReader *pSeg){$/;"	f	file:
fts3SegReaderSetEof	sqlite3.c	/^static void fts3SegReaderSetEof(Fts3SegReader *pSeg){$/;"	f	file:
fts3SegReaderSetEof	tsrc/fts3_write.c	/^static void fts3SegReaderSetEof(Fts3SegReader *pSeg){$/;"	f	file:
fts3SegReaderSort	ext/fts3/fts3_write.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderSort	sqlite3.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderSort	tsrc/fts3_write.c	/^static void fts3SegReaderSort($/;"	f	file:
fts3SegReaderStart	ext/fts3/fts3_write.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderStart	sqlite3.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderStart	tsrc/fts3_write.c	/^static int fts3SegReaderStart($/;"	f	file:
fts3SegReaderTermCmp	ext/fts3/fts3_write.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegReaderTermCmp	sqlite3.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegReaderTermCmp	tsrc/fts3_write.c	/^static int fts3SegReaderTermCmp($/;"	f	file:
fts3SegWriterAdd	ext/fts3/fts3_write.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterAdd	sqlite3.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterAdd	tsrc/fts3_write.c	/^static int fts3SegWriterAdd($/;"	f	file:
fts3SegWriterFlush	ext/fts3/fts3_write.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFlush	sqlite3.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFlush	tsrc/fts3_write.c	/^static int fts3SegWriterFlush($/;"	f	file:
fts3SegWriterFree	ext/fts3/fts3_write.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegWriterFree	sqlite3.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegWriterFree	tsrc/fts3_write.c	/^static void fts3SegWriterFree(SegmentWriter *pWriter){$/;"	f	file:
fts3SegmentIsMaxLevel	ext/fts3/fts3_write.c	/^static int fts3SegmentIsMaxLevel(Fts3Table *p, i64 iAbsLevel, int *pbMax){$/;"	f	file:
fts3SegmentIsMaxLevel	sqlite3.c	/^static int fts3SegmentIsMaxLevel(Fts3Table *p, i64 iAbsLevel, int *pbMax){$/;"	f	file:
fts3SegmentIsMaxLevel	tsrc/fts3_write.c	/^static int fts3SegmentIsMaxLevel(Fts3Table *p, i64 iAbsLevel, int *pbMax){$/;"	f	file:
fts3SegmentMaxLevel	ext/fts3/fts3_write.c	/^static int fts3SegmentMaxLevel($/;"	f	file:
fts3SegmentMaxLevel	sqlite3.c	/^static int fts3SegmentMaxLevel($/;"	f	file:
fts3SegmentMaxLevel	tsrc/fts3_write.c	/^static int fts3SegmentMaxLevel($/;"	f	file:
fts3SegmentMerge	ext/fts3/fts3_write.c	/^static int fts3SegmentMerge($/;"	f	file:
fts3SegmentMerge	sqlite3.c	/^static int fts3SegmentMerge($/;"	f	file:
fts3SegmentMerge	tsrc/fts3_write.c	/^static int fts3SegmentMerge($/;"	f	file:
fts3SelectDocsize	ext/fts3/fts3_write.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectDocsize	sqlite3.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectDocsize	tsrc/fts3_write.c	/^static int fts3SelectDocsize($/;"	f	file:
fts3SelectLeaf	ext/fts3/fts3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SelectLeaf	sqlite3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SelectLeaf	tsrc/fts3.c	/^static int fts3SelectLeaf($/;"	f	file:
fts3SetEstimatedRows	ext/fts3/fts3.c	/^static void fts3SetEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
fts3SetEstimatedRows	sqlite3.c	/^static void fts3SetEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
fts3SetEstimatedRows	tsrc/fts3.c	/^static void fts3SetEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
fts3SetHasStat	ext/fts3/fts3.c	/^static int fts3SetHasStat(Fts3Table *p){$/;"	f	file:
fts3SetHasStat	sqlite3.c	/^static int fts3SetHasStat(Fts3Table *p){$/;"	f	file:
fts3SetHasStat	tsrc/fts3.c	/^static int fts3SetHasStat(Fts3Table *p){$/;"	f	file:
fts3SetUniqueFlag	ext/fts3/fts3.c	/^static void fts3SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts3SetUniqueFlag	sqlite3.c	/^static void fts3SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts3SetUniqueFlag	tsrc/fts3.c	/^static void fts3SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts3SnippetAdvance	ext/fts3/fts3_snippet.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetAdvance	sqlite3.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetAdvance	tsrc/fts3_snippet.c	/^static void fts3SnippetAdvance(char **ppIter, int *piIter, int iNext){$/;"	f	file:
fts3SnippetDetails	ext/fts3/fts3_snippet.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetDetails	sqlite3.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetDetails	tsrc/fts3_snippet.c	/^static void fts3SnippetDetails($/;"	f	file:
fts3SnippetFindPositions	ext/fts3/fts3_snippet.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFindPositions	sqlite3.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFindPositions	tsrc/fts3_snippet.c	/^static int fts3SnippetFindPositions(Fts3Expr *pExpr, int iPhrase, void *ctx){$/;"	f	file:
fts3SnippetFunc	ext/fts3/fts3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetFunc	sqlite3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetFunc	tsrc/fts3.c	/^static void fts3SnippetFunc($/;"	f	file:
fts3SnippetNextCandidate	ext/fts3/fts3_snippet.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetNextCandidate	sqlite3.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetNextCandidate	tsrc/fts3_snippet.c	/^static int fts3SnippetNextCandidate(SnippetIter *pIter){$/;"	f	file:
fts3SnippetShift	ext/fts3/fts3_snippet.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetShift	sqlite3.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetShift	tsrc/fts3_snippet.c	/^static int fts3SnippetShift($/;"	f	file:
fts3SnippetText	ext/fts3/fts3_snippet.c	/^static int fts3SnippetText($/;"	f	file:
fts3SnippetText	sqlite3.c	/^static int fts3SnippetText($/;"	f	file:
fts3SnippetText	tsrc/fts3_snippet.c	/^static int fts3SnippetText($/;"	f	file:
fts3SpecialInsert	ext/fts3/fts3_write.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SpecialInsert	sqlite3.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SpecialInsert	tsrc/fts3_write.c	/^static int fts3SpecialInsert(Fts3Table *p, sqlite3_value *pVal){$/;"	f	file:
fts3SqlExec	ext/fts3/fts3_write.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlExec	sqlite3.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlExec	tsrc/fts3_write.c	/^static void fts3SqlExec($/;"	f	file:
fts3SqlStmt	ext/fts3/fts3_write.c	/^static int fts3SqlStmt($/;"	f	file:
fts3SqlStmt	sqlite3.c	/^static int fts3SqlStmt($/;"	f	file:
fts3SqlStmt	tsrc/fts3_write.c	/^static int fts3SqlStmt($/;"	f	file:
fts3StartNode	ext/fts3/fts3_write.c	/^static void fts3StartNode(Blob *pNode, int iHeight, sqlite3_int64 iChild){$/;"	f	file:
fts3StartNode	sqlite3.c	/^static void fts3StartNode(Blob *pNode, int iHeight, sqlite3_int64 iChild){$/;"	f	file:
fts3StartNode	tsrc/fts3_write.c	/^static void fts3StartNode(Blob *pNode, int iHeight, sqlite3_int64 iChild){$/;"	f	file:
fts3StrCompare	ext/fts3/fts3_hash.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrCompare	sqlite3.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrCompare	tsrc/fts3_hash.c	/^static int fts3StrCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
fts3StrHash	ext/fts3/fts3_hash.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StrHash	sqlite3.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StrHash	tsrc/fts3_hash.c	/^static int fts3StrHash(const void *pKey, int nKey){$/;"	f	file:
fts3StringAppend	ext/fts3/fts3_snippet.c	/^static int fts3StringAppend($/;"	f	file:
fts3StringAppend	sqlite3.c	/^static int fts3StringAppend($/;"	f	file:
fts3StringAppend	tsrc/fts3_snippet.c	/^static int fts3StringAppend($/;"	f	file:
fts3SyncMethod	ext/fts3/fts3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3SyncMethod	sqlite3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3SyncMethod	tsrc/fts3.c	/^static int fts3SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3TermCmp	ext/fts3/fts3_write.c	/^static int fts3TermCmp($/;"	f	file:
fts3TermCmp	sqlite3.c	/^static int fts3TermCmp($/;"	f	file:
fts3TermCmp	tsrc/fts3_write.c	/^static int fts3TermCmp($/;"	f	file:
fts3TermSegReaderCursor	ext/fts3/fts3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSegReaderCursor	sqlite3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSegReaderCursor	tsrc/fts3.c	/^static int fts3TermSegReaderCursor($/;"	f	file:
fts3TermSelect	ext/fts3/fts3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelect	sqlite3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelect	tsrc/fts3.c	/^static int fts3TermSelect($/;"	f	file:
fts3TermSelectFinishMerge	ext/fts3/fts3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectFinishMerge	sqlite3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectFinishMerge	tsrc/fts3.c	/^static int fts3TermSelectFinishMerge(Fts3Table *p, TermSelect *pTS){$/;"	f	file:
fts3TermSelectMerge	ext/fts3/fts3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TermSelectMerge	sqlite3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TermSelectMerge	tsrc/fts3.c	/^static int fts3TermSelectMerge($/;"	f	file:
fts3TokenizerEnabled	ext/fts3/fts3_tokenizer.c	/^static int fts3TokenizerEnabled(sqlite3_context *context){$/;"	f	file:
fts3TokenizerEnabled	sqlite3.c	/^static int fts3TokenizerEnabled(sqlite3_context *context){$/;"	f	file:
fts3TokenizerEnabled	tsrc/fts3_tokenizer.c	/^static int fts3TokenizerEnabled(sqlite3_context *context){$/;"	f	file:
fts3TokenizerFunc	ext/fts3/fts3_tokenizer.c	/^static void fts3TokenizerFunc($/;"	f	file:
fts3TokenizerFunc	sqlite3.c	/^static void fts3TokenizerFunc($/;"	f	file:
fts3TokenizerFunc	tsrc/fts3_tokenizer.c	/^static void fts3TokenizerFunc($/;"	f	file:
fts3TreeFinishNode	ext/fts3/fts3_write.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3TreeFinishNode	sqlite3.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3TreeFinishNode	tsrc/fts3_write.c	/^static int fts3TreeFinishNode($/;"	f	file:
fts3TruncateNode	ext/fts3/fts3_write.c	/^static int fts3TruncateNode($/;"	f	file:
fts3TruncateNode	sqlite3.c	/^static int fts3TruncateNode($/;"	f	file:
fts3TruncateNode	tsrc/fts3_write.c	/^static int fts3TruncateNode($/;"	f	file:
fts3TruncateSegment	ext/fts3/fts3_write.c	/^static int fts3TruncateSegment($/;"	f	file:
fts3TruncateSegment	sqlite3.c	/^static int fts3TruncateSegment($/;"	f	file:
fts3TruncateSegment	tsrc/fts3_write.c	/^static int fts3TruncateSegment($/;"	f	file:
fts3UpdateDocTotals	ext/fts3/fts3_write.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateDocTotals	sqlite3.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateDocTotals	tsrc/fts3_write.c	/^static void fts3UpdateDocTotals($/;"	f	file:
fts3UpdateMethod	ext/fts3/fts3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3UpdateMethod	sqlite3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3UpdateMethod	tsrc/fts3.c	/^static int fts3UpdateMethod($/;"	f	file:
fts3WriteExprList	ext/fts3/fts3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteExprList	sqlite3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteExprList	tsrc/fts3.c	/^static char *fts3WriteExprList(Fts3Table *p, const char *zFunc, int *pRc){$/;"	f	file:
fts3WriteSegdir	ext/fts3/fts3_write.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegdir	sqlite3.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegdir	tsrc/fts3_write.c	/^static int fts3WriteSegdir($/;"	f	file:
fts3WriteSegment	ext/fts3/fts3_write.c	/^static int fts3WriteSegment($/;"	f	file:
fts3WriteSegment	sqlite3.c	/^static int fts3WriteSegment($/;"	f	file:
fts3WriteSegment	tsrc/fts3_write.c	/^static int fts3WriteSegment($/;"	f	file:
fts3Writelock	ext/fts3/fts3_write.c	/^static int fts3Writelock(Fts3Table *p){$/;"	f	file:
fts3Writelock	sqlite3.c	/^static int fts3Writelock(Fts3Table *p){$/;"	f	file:
fts3Writelock	tsrc/fts3_write.c	/^static int fts3Writelock(Fts3Table *p){$/;"	f	file:
fts3_build_db_1	test/fts3_common.tcl	/^proc fts3_build_db_1 {args} {$/;"	p
fts3_build_db_2	test/fts3_common.tcl	/^proc fts3_build_db_2 {args} {$/;"	p
fts3_configure_incr_load_cmd	ext/fts3/fts3_test.c	/^static int SQLITE_TCLAPI fts3_configure_incr_load_cmd($/;"	f	file:
fts3_doclist	test/fts3_common.tcl	/^proc fts3_doclist {tbl term where} {$/;"	p
fts3_integrity_check	test/fts3_common.tcl	/^proc fts3_integrity_check {tbl} {$/;"	p
fts3_isalnum	ext/fts3/fts3_tokenizer1.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3_isalnum	sqlite3.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3_isalnum	tsrc/fts3_tokenizer1.c	/^static int fts3_isalnum(int x){$/;"	f	file:
fts3_near_match_cmd	ext/fts3/fts3_test.c	/^static int SQLITE_TCLAPI fts3_near_match_cmd($/;"	f	file:
fts3_read	test/fts3_common.tcl	/^proc fts3_read {tbl where varname} {$/;"	p
fts3_read2	test/fts3_common.tcl	/^proc fts3_read2 {tbl where varname} {$/;"	p
fts3_readleaf	test/fts3_common.tcl	/^proc fts3_readleaf {blob} {$/;"	p
fts3_terms	test/fts3_common.tcl	/^proc fts3_terms {tbl where} {$/;"	p
fts3_test_tokenizer_cmd	ext/fts3/fts3_test.c	/^static int SQLITE_TCLAPI fts3_test_tokenizer_cmd($/;"	f	file:
fts3_test_varint_cmd	ext/fts3/fts3_test.c	/^static int SQLITE_TCLAPI fts3_test_varint_cmd($/;"	f	file:
fts3auxBestIndexMethod	ext/fts3/fts3_aux.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxBestIndexMethod	sqlite3.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxBestIndexMethod	tsrc/fts3_aux.c	/^static int fts3auxBestIndexMethod($/;"	f	file:
fts3auxCloseMethod	ext/fts3/fts3_aux.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxCloseMethod	sqlite3.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxCloseMethod	tsrc/fts3_aux.c	/^static int fts3auxCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxColumnMethod	ext/fts3/fts3_aux.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxColumnMethod	sqlite3.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxColumnMethod	tsrc/fts3_aux.c	/^static int fts3auxColumnMethod($/;"	f	file:
fts3auxConnectMethod	ext/fts3/fts3_aux.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxConnectMethod	sqlite3.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxConnectMethod	tsrc/fts3_aux.c	/^static int fts3auxConnectMethod($/;"	f	file:
fts3auxDisconnectMethod	ext/fts3/fts3_aux.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxDisconnectMethod	sqlite3.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxDisconnectMethod	tsrc/fts3_aux.c	/^static int fts3auxDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3auxEofMethod	ext/fts3/fts3_aux.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxEofMethod	sqlite3.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxEofMethod	tsrc/fts3_aux.c	/^static int fts3auxEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxFilterMethod	ext/fts3/fts3_aux.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxFilterMethod	sqlite3.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxFilterMethod	tsrc/fts3_aux.c	/^static int fts3auxFilterMethod($/;"	f	file:
fts3auxGrowStatArray	ext/fts3/fts3_aux.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxGrowStatArray	sqlite3.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxGrowStatArray	tsrc/fts3_aux.c	/^static int fts3auxGrowStatArray(Fts3auxCursor *pCsr, int nSize){$/;"	f	file:
fts3auxNextMethod	ext/fts3/fts3_aux.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxNextMethod	sqlite3.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxNextMethod	tsrc/fts3_aux.c	/^static int fts3auxNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3auxOpenMethod	ext/fts3/fts3_aux.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxOpenMethod	sqlite3.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxOpenMethod	tsrc/fts3_aux.c	/^static int fts3auxOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3auxRowidMethod	ext/fts3/fts3_aux.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3auxRowidMethod	sqlite3.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3auxRowidMethod	tsrc/fts3_aux.c	/^static int fts3auxRowidMethod($/;"	f	file:
fts3isspace	ext/fts3/fts3_expr.c	/^static int fts3isspace(char c){$/;"	f	file:
fts3isspace	sqlite3.c	/^static int fts3isspace(char c){$/;"	f	file:
fts3isspace	tsrc/fts3_expr.c	/^static int fts3isspace(char c){$/;"	f	file:
fts3termBestIndexMethod	ext/fts3/fts3_term.c	/^static int fts3termBestIndexMethod($/;"	f	file:
fts3termCloseMethod	ext/fts3/fts3_term.c	/^static int fts3termCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3termColumnMethod	ext/fts3/fts3_term.c	/^static int fts3termColumnMethod($/;"	f	file:
fts3termConnectMethod	ext/fts3/fts3_term.c	/^static int fts3termConnectMethod($/;"	f	file:
fts3termDisconnectMethod	ext/fts3/fts3_term.c	/^static int fts3termDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3termEofMethod	ext/fts3/fts3_term.c	/^static int fts3termEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3termFilterMethod	ext/fts3/fts3_term.c	/^static int fts3termFilterMethod($/;"	f	file:
fts3termNextMethod	ext/fts3/fts3_term.c	/^static int fts3termNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3termOpenMethod	ext/fts3/fts3_term.c	/^static int fts3termOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3termRowidMethod	ext/fts3/fts3_term.c	/^static int fts3termRowidMethod($/;"	f	file:
fts3tokBestIndexMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokBestIndexMethod($/;"	f	file:
fts3tokBestIndexMethod	sqlite3.c	/^static int fts3tokBestIndexMethod($/;"	f	file:
fts3tokBestIndexMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokBestIndexMethod($/;"	f	file:
fts3tokCloseMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokCloseMethod	sqlite3.c	/^static int fts3tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokCloseMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokColumnMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokColumnMethod($/;"	f	file:
fts3tokColumnMethod	sqlite3.c	/^static int fts3tokColumnMethod($/;"	f	file:
fts3tokColumnMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokColumnMethod($/;"	f	file:
fts3tokConnectMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokConnectMethod($/;"	f	file:
fts3tokConnectMethod	sqlite3.c	/^static int fts3tokConnectMethod($/;"	f	file:
fts3tokConnectMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokConnectMethod($/;"	f	file:
fts3tokDequoteArray	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokDequoteArray($/;"	f	file:
fts3tokDequoteArray	sqlite3.c	/^static int fts3tokDequoteArray($/;"	f	file:
fts3tokDequoteArray	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokDequoteArray($/;"	f	file:
fts3tokDisconnectMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3tokDisconnectMethod	sqlite3.c	/^static int fts3tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3tokDisconnectMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts3tokEofMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokEofMethod	sqlite3.c	/^static int fts3tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokEofMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokFilterMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokFilterMethod($/;"	f	file:
fts3tokFilterMethod	sqlite3.c	/^static int fts3tokFilterMethod($/;"	f	file:
fts3tokFilterMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokFilterMethod($/;"	f	file:
fts3tokNextMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokNextMethod	sqlite3.c	/^static int fts3tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokNextMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts3tokOpenMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3tokOpenMethod	sqlite3.c	/^static int fts3tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3tokOpenMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts3tokQueryTokenizer	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokQueryTokenizer($/;"	f	file:
fts3tokQueryTokenizer	sqlite3.c	/^static int fts3tokQueryTokenizer($/;"	f	file:
fts3tokQueryTokenizer	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokQueryTokenizer($/;"	f	file:
fts3tokResetCursor	ext/fts3/fts3_tokenize_vtab.c	/^static void fts3tokResetCursor(Fts3tokCursor *pCsr){$/;"	f	file:
fts3tokResetCursor	sqlite3.c	/^static void fts3tokResetCursor(Fts3tokCursor *pCsr){$/;"	f	file:
fts3tokResetCursor	tsrc/fts3_tokenize_vtab.c	/^static void fts3tokResetCursor(Fts3tokCursor *pCsr){$/;"	f	file:
fts3tokRowidMethod	ext/fts3/fts3_tokenize_vtab.c	/^static int fts3tokRowidMethod($/;"	f	file:
fts3tokRowidMethod	sqlite3.c	/^static int fts3tokRowidMethod($/;"	f	file:
fts3tokRowidMethod	tsrc/fts3_tokenize_vtab.c	/^static int fts3tokRowidMethod($/;"	f	file:
fts5AllocateSegid	ext/fts5/fts5_index.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5AllocateSegid	fts5.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5AllocateSegid	sqlite3.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5AllocateSegid	tsrc/fts5.c	/^static int fts5AllocateSegid(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5ApiCallback	ext/fts5/fts5_main.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiCallback	fts5.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiCallback	sqlite3.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiCallback	tsrc/fts5.c	/^static void fts5ApiCallback($/;"	f	file:
fts5ApiColumnCount	ext/fts5/fts5_main.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnCount	fts5.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnCount	sqlite3.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnCount	tsrc/fts5.c	/^static int fts5ApiColumnCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiColumnSize	ext/fts5/fts5_main.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnSize	fts5.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnSize	sqlite3.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnSize	tsrc/fts5.c	/^static int fts5ApiColumnSize(Fts5Context *pCtx, int iCol, int *pnToken){$/;"	f	file:
fts5ApiColumnText	ext/fts5/fts5_main.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnText	fts5.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnText	sqlite3.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnText	tsrc/fts5.c	/^static int fts5ApiColumnText($/;"	f	file:
fts5ApiColumnTotalSize	ext/fts5/fts5_main.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiColumnTotalSize	fts5.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiColumnTotalSize	sqlite3.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiColumnTotalSize	tsrc/fts5.c	/^static int fts5ApiColumnTotalSize($/;"	f	file:
fts5ApiGetAuxdata	ext/fts5/fts5_main.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiGetAuxdata	fts5.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiGetAuxdata	sqlite3.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiGetAuxdata	tsrc/fts5.c	/^static void *fts5ApiGetAuxdata(Fts5Context *pCtx, int bClear){$/;"	f	file:
fts5ApiInst	ext/fts5/fts5_main.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInst	fts5.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInst	sqlite3.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInst	tsrc/fts5.c	/^static int fts5ApiInst($/;"	f	file:
fts5ApiInstCount	ext/fts5/fts5_main.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInstCount	fts5.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInstCount	sqlite3.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInstCount	tsrc/fts5.c	/^static int fts5ApiInstCount(Fts5Context *pCtx, int *pnInst){$/;"	f	file:
fts5ApiInvoke	ext/fts5/fts5_main.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiInvoke	fts5.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiInvoke	sqlite3.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiInvoke	tsrc/fts5.c	/^static void fts5ApiInvoke($/;"	f	file:
fts5ApiPhraseCount	ext/fts5/fts5_main.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseCount	fts5.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseCount	sqlite3.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseCount	tsrc/fts5.c	/^static int fts5ApiPhraseCount(Fts5Context *pCtx){$/;"	f	file:
fts5ApiPhraseFirst	ext/fts5/fts5_main.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirst	fts5.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirst	sqlite3.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirst	tsrc/fts5.c	/^static int fts5ApiPhraseFirst($/;"	f	file:
fts5ApiPhraseFirstColumn	ext/fts5/fts5_main.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseFirstColumn	fts5.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseFirstColumn	sqlite3.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseFirstColumn	tsrc/fts5.c	/^static int fts5ApiPhraseFirstColumn($/;"	f	file:
fts5ApiPhraseNext	ext/fts5/fts5_main.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNext	fts5.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNext	sqlite3.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNext	tsrc/fts5.c	/^static void fts5ApiPhraseNext($/;"	f	file:
fts5ApiPhraseNextColumn	ext/fts5/fts5_main.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseNextColumn	fts5.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseNextColumn	sqlite3.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseNextColumn	tsrc/fts5.c	/^static void fts5ApiPhraseNextColumn($/;"	f	file:
fts5ApiPhraseSize	ext/fts5/fts5_main.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiPhraseSize	fts5.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiPhraseSize	sqlite3.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiPhraseSize	tsrc/fts5.c	/^static int fts5ApiPhraseSize(Fts5Context *pCtx, int iPhrase){$/;"	f	file:
fts5ApiQueryPhrase	ext/fts5/fts5_main.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiQueryPhrase	fts5.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiQueryPhrase	sqlite3.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiQueryPhrase	tsrc/fts5.c	/^static int fts5ApiQueryPhrase($/;"	f	file:
fts5ApiRowCount	ext/fts5/fts5_main.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowCount	fts5.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowCount	sqlite3.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowCount	tsrc/fts5.c	/^static int fts5ApiRowCount(Fts5Context *pCtx, i64 *pnRow){$/;"	f	file:
fts5ApiRowid	ext/fts5/fts5_main.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiRowid	fts5.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiRowid	sqlite3.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiRowid	tsrc/fts5.c	/^static sqlite3_int64 fts5ApiRowid(Fts5Context *pCtx){$/;"	f	file:
fts5ApiSetAuxdata	ext/fts5/fts5_main.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiSetAuxdata	fts5.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiSetAuxdata	sqlite3.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiSetAuxdata	tsrc/fts5.c	/^static int fts5ApiSetAuxdata($/;"	f	file:
fts5ApiTokenize	ext/fts5/fts5_main.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiTokenize	fts5.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiTokenize	sqlite3.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiTokenize	tsrc/fts5.c	/^static int fts5ApiTokenize($/;"	f	file:
fts5ApiUserData	ext/fts5/fts5_main.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5ApiUserData	fts5.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5ApiUserData	sqlite3.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5ApiUserData	tsrc/fts5.c	/^static void *fts5ApiUserData(Fts5Context *pCtx){$/;"	f	file:
fts5AppendPoslist	ext/fts5/fts5_index.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendPoslist	fts5.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendPoslist	sqlite3.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendPoslist	tsrc/fts5.c	/^static void fts5AppendPoslist($/;"	f	file:
fts5AppendRowid	ext/fts5/fts5_index.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AppendRowid	fts5.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AppendRowid	sqlite3.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AppendRowid	tsrc/fts5.c	/^static void fts5AppendRowid($/;"	f	file:
fts5AsciiAddExceptions	ext/fts5/fts5_tokenize.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiAddExceptions	fts5.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiAddExceptions	sqlite3.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiAddExceptions	tsrc/fts5.c	/^static void fts5AsciiAddExceptions($/;"	f	file:
fts5AsciiCreate	ext/fts5/fts5_tokenize.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiCreate	fts5.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiCreate	sqlite3.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiCreate	tsrc/fts5.c	/^static int fts5AsciiCreate($/;"	f	file:
fts5AsciiDelete	ext/fts5/fts5_tokenize.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiDelete	fts5.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiDelete	sqlite3.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiDelete	tsrc/fts5.c	/^static void fts5AsciiDelete(Fts5Tokenizer *p){$/;"	f	file:
fts5AsciiTokenize	ext/fts5/fts5_tokenize.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AsciiTokenize	fts5.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AsciiTokenize	sqlite3.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AsciiTokenize	tsrc/fts5.c	/^static int fts5AsciiTokenize($/;"	f	file:
fts5AssertComparisonResult	ext/fts5/fts5_index.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertComparisonResult	fts5.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertComparisonResult	sqlite3.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertComparisonResult	tsrc/fts5.c	/^static void fts5AssertComparisonResult($/;"	f	file:
fts5AssertMultiIterSetup	ext/fts5/fts5_index.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	ext/fts5/fts5_index.c	2568;"	d	file:
fts5AssertMultiIterSetup	fts5.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	fts5.c	10380;"	d	file:
fts5AssertMultiIterSetup	sqlite3.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	sqlite3.c	187512;"	d	file:
fts5AssertMultiIterSetup	tsrc/fts5.c	/^static void fts5AssertMultiIterSetup(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5AssertMultiIterSetup	tsrc/fts5.c	10380;"	d	file:
fts5BeginMethod	ext/fts5/fts5_main.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BeginMethod	fts5.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BeginMethod	sqlite3.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BeginMethod	tsrc/fts5.c	/^static int fts5BeginMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5BestIndexMethod	ext/fts5/fts5_main.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5BestIndexMethod	fts5.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5BestIndexMethod	sqlite3.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5BestIndexMethod	tsrc/fts5.c	/^static int fts5BestIndexMethod(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fts5Bm25Function	ext/fts5/fts5_aux.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25Function	fts5.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25Function	sqlite3.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25Function	tsrc/fts5.c	/^static void fts5Bm25Function($/;"	f	file:
fts5Bm25GetData	ext/fts5/fts5_aux.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5Bm25GetData	fts5.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5Bm25GetData	sqlite3.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5Bm25GetData	tsrc/fts5.c	/^static int fts5Bm25GetData($/;"	f	file:
fts5BufferAppendBlob	ext/fts5/fts5Int.h	262;"	d
fts5BufferAppendBlob	fts5.c	855;"	d	file:
fts5BufferAppendBlob	sqlite3.c	178057;"	d	file:
fts5BufferAppendBlob	tsrc/fts5.c	855;"	d	file:
fts5BufferAppendVarint	ext/fts5/fts5Int.h	260;"	d
fts5BufferAppendVarint	fts5.c	853;"	d	file:
fts5BufferAppendVarint	sqlite3.c	178055;"	d	file:
fts5BufferAppendVarint	tsrc/fts5.c	853;"	d	file:
fts5BufferCompare	ext/fts5/fts5_index.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompare	fts5.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompare	sqlite3.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompare	tsrc/fts5.c	/^static int fts5BufferCompare(Fts5Buffer *pLeft, Fts5Buffer *pRight){$/;"	f	file:
fts5BufferCompareBlob	ext/fts5/fts5_index.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferCompareBlob	fts5.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferCompareBlob	sqlite3.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferCompareBlob	tsrc/fts5.c	/^static int fts5BufferCompareBlob($/;"	f	file:
fts5BufferFree	ext/fts5/fts5Int.h	261;"	d
fts5BufferFree	fts5.c	854;"	d	file:
fts5BufferFree	sqlite3.c	178056;"	d	file:
fts5BufferFree	tsrc/fts5.c	854;"	d	file:
fts5BufferGrow	ext/fts5/fts5Int.h	265;"	d
fts5BufferGrow	fts5.c	858;"	d	file:
fts5BufferGrow	sqlite3.c	178060;"	d	file:
fts5BufferGrow	tsrc/fts5.c	858;"	d	file:
fts5BufferSafeAppendBlob	ext/fts5/fts5_index.c	1085;"	d	file:
fts5BufferSafeAppendBlob	fts5.c	8897;"	d	file:
fts5BufferSafeAppendBlob	sqlite3.c	186029;"	d	file:
fts5BufferSafeAppendBlob	tsrc/fts5.c	8897;"	d	file:
fts5BufferSafeAppendVarint	ext/fts5/fts5_index.c	1091;"	d	file:
fts5BufferSafeAppendVarint	fts5.c	8903;"	d	file:
fts5BufferSafeAppendVarint	sqlite3.c	186035;"	d	file:
fts5BufferSafeAppendVarint	tsrc/fts5.c	8903;"	d	file:
fts5BufferSet	ext/fts5/fts5Int.h	263;"	d
fts5BufferSet	fts5.c	856;"	d	file:
fts5BufferSet	sqlite3.c	178058;"	d	file:
fts5BufferSet	tsrc/fts5.c	856;"	d	file:
fts5BufferSwap	ext/fts5/fts5_index.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferSwap	fts5.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferSwap	sqlite3.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferSwap	tsrc/fts5.c	/^static void fts5BufferSwap(Fts5Buffer *p1, Fts5Buffer *p2){$/;"	f	file:
fts5BufferZero	ext/fts5/fts5Int.h	259;"	d
fts5BufferZero	fts5.c	852;"	d	file:
fts5BufferZero	sqlite3.c	178054;"	d	file:
fts5BufferZero	tsrc/fts5.c	852;"	d	file:
fts5CInstIterInit	ext/fts5/fts5_aux.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterInit	fts5.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterInit	sqlite3.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterInit	tsrc/fts5.c	/^static int fts5CInstIterInit($/;"	f	file:
fts5CInstIterNext	ext/fts5/fts5_aux.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CInstIterNext	fts5.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CInstIterNext	sqlite3.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CInstIterNext	tsrc/fts5.c	/^static int fts5CInstIterNext(CInstIter *pIter){$/;"	f	file:
fts5CacheInstArray	ext/fts5/fts5_main.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CacheInstArray	fts5.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CacheInstArray	sqlite3.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CacheInstArray	tsrc/fts5.c	/^static int fts5CacheInstArray(Fts5Cursor *pCsr){$/;"	f	file:
fts5CheckTransactionState	ext/fts5/fts5_main.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	ext/fts5/fts5_main.c	303;"	d	file:
fts5CheckTransactionState	fts5.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	fts5.c	14578;"	d	file:
fts5CheckTransactionState	sqlite3.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	sqlite3.c	191709;"	d	file:
fts5CheckTransactionState	tsrc/fts5.c	/^static void fts5CheckTransactionState(Fts5Table *p, int op, int iSavepoint){$/;"	f	file:
fts5CheckTransactionState	tsrc/fts5.c	14578;"	d	file:
fts5ChunkIterate	ext/fts5/fts5_index.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5ChunkIterate	fts5.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5ChunkIterate	sqlite3.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5ChunkIterate	tsrc/fts5.c	/^static void fts5ChunkIterate($/;"	f	file:
fts5CloseMethod	ext/fts5/fts5_main.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseMethod	fts5.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseMethod	sqlite3.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseMethod	tsrc/fts5.c	/^static int fts5CloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5CloseReader	ext/fts5/fts5_index.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5CloseReader	fts5.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5CloseReader	sqlite3.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5CloseReader	tsrc/fts5.c	/^static void fts5CloseReader(Fts5Index *p){$/;"	f	file:
fts5ColumnMethod	ext/fts5/fts5_main.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnMethod	fts5.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnMethod	sqlite3.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnMethod	tsrc/fts5.c	/^static int fts5ColumnMethod($/;"	f	file:
fts5ColumnSizeCb	ext/fts5/fts5_main.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5ColumnSizeCb	fts5.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5ColumnSizeCb	sqlite3.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5ColumnSizeCb	tsrc/fts5.c	/^static int fts5ColumnSizeCb($/;"	f	file:
fts5CommitMethod	ext/fts5/fts5_main.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5CommitMethod	fts5.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5CommitMethod	sqlite3.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5CommitMethod	tsrc/fts5.c	/^static int fts5CommitMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5ConfigDefaultTokenizer	ext/fts5/fts5_config.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigDefaultTokenizer	fts5.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigDefaultTokenizer	sqlite3.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigDefaultTokenizer	tsrc/fts5.c	/^static int fts5ConfigDefaultTokenizer(Fts5Global *pGlobal, Fts5Config *pConfig){$/;"	f	file:
fts5ConfigGobbleWord	ext/fts5/fts5_config.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigGobbleWord	fts5.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigGobbleWord	sqlite3.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigGobbleWord	tsrc/fts5.c	/^static const char *fts5ConfigGobbleWord($/;"	f	file:
fts5ConfigMakeExprlist	ext/fts5/fts5_config.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigMakeExprlist	fts5.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigMakeExprlist	sqlite3.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigMakeExprlist	tsrc/fts5.c	/^static int fts5ConfigMakeExprlist(Fts5Config *p){$/;"	f	file:
fts5ConfigParseColumn	ext/fts5/fts5_config.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseColumn	fts5.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseColumn	sqlite3.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseColumn	tsrc/fts5.c	/^static int fts5ConfigParseColumn($/;"	f	file:
fts5ConfigParseSpecial	ext/fts5/fts5_config.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigParseSpecial	fts5.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigParseSpecial	sqlite3.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigParseSpecial	tsrc/fts5.c	/^static int fts5ConfigParseSpecial($/;"	f	file:
fts5ConfigSetEnum	ext/fts5/fts5_config.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSetEnum	fts5.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSetEnum	sqlite3.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSetEnum	tsrc/fts5.c	/^static int fts5ConfigSetEnum($/;"	f	file:
fts5ConfigSkipArgs	ext/fts5/fts5_config.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipArgs	fts5.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipArgs	sqlite3.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipArgs	tsrc/fts5.c	/^static const char *fts5ConfigSkipArgs(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	ext/fts5/fts5_config.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	fts5.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	sqlite3.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipBareword	tsrc/fts5.c	/^static const char *fts5ConfigSkipBareword(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	ext/fts5/fts5_config.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	fts5.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	sqlite3.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipLiteral	tsrc/fts5.c	/^static const char *fts5ConfigSkipLiteral(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	ext/fts5/fts5_config.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	fts5.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	sqlite3.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConfigSkipWhitespace	tsrc/fts5.c	/^static const char *fts5ConfigSkipWhitespace(const char *pIn){$/;"	f	file:
fts5ConnectMethod	ext/fts5/fts5_main.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5ConnectMethod	fts5.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5ConnectMethod	sqlite3.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5ConnectMethod	tsrc/fts5.c	/^static int fts5ConnectMethod($/;"	f	file:
fts5CountCb	ext/fts5/fts5_aux.c	/^static int fts5CountCb($/;"	f	file:
fts5CountCb	fts5.c	/^static int fts5CountCb($/;"	f	file:
fts5CountCb	sqlite3.c	/^static int fts5CountCb($/;"	f	file:
fts5CountCb	tsrc/fts5.c	/^static int fts5CountCb($/;"	f	file:
fts5CreateAux	ext/fts5/fts5_main.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateAux	fts5.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateAux	sqlite3.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateAux	tsrc/fts5.c	/^static int fts5CreateAux($/;"	f	file:
fts5CreateMethod	ext/fts5/fts5_main.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateMethod	fts5.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateMethod	sqlite3.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateMethod	tsrc/fts5.c	/^static int fts5CreateMethod($/;"	f	file:
fts5CreateTokenizer	ext/fts5/fts5_main.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CreateTokenizer	fts5.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CreateTokenizer	sqlite3.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CreateTokenizer	tsrc/fts5.c	/^static int fts5CreateTokenizer($/;"	f	file:
fts5CsrNewrow	ext/fts5/fts5_main.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrNewrow	fts5.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrNewrow	sqlite3.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrNewrow	tsrc/fts5.c	/^static void fts5CsrNewrow(Fts5Cursor *pCsr){$/;"	f	file:
fts5CsrPoslist	ext/fts5/fts5_main.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CsrPoslist	fts5.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CsrPoslist	sqlite3.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CsrPoslist	tsrc/fts5.c	/^static int fts5CsrPoslist($/;"	f	file:
fts5CursorFirst	ext/fts5/fts5_main.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirst	fts5.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirst	sqlite3.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirst	tsrc/fts5.c	/^static int fts5CursorFirst(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	ext/fts5/fts5_main.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	fts5.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	sqlite3.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFirstSorted	tsrc/fts5.c	/^static int fts5CursorFirstSorted(Fts5Table *pTab, Fts5Cursor *pCsr, int bDesc){$/;"	f	file:
fts5CursorFromCsrid	ext/fts5/fts5_main.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorFromCsrid	fts5.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorFromCsrid	sqlite3.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorFromCsrid	tsrc/fts5.c	/^static Fts5Cursor *fts5CursorFromCsrid(Fts5Global *pGlobal, i64 iCsrId){$/;"	f	file:
fts5CursorParseRank	ext/fts5/fts5_main.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorParseRank	fts5.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorParseRank	sqlite3.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorParseRank	tsrc/fts5.c	/^static int fts5CursorParseRank($/;"	f	file:
fts5CursorReseek	ext/fts5/fts5_main.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorReseek	fts5.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorReseek	sqlite3.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorReseek	tsrc/fts5.c	/^static int fts5CursorReseek(Fts5Cursor *pCsr, int *pbSkip){$/;"	f	file:
fts5CursorRowid	ext/fts5/fts5_main.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5CursorRowid	fts5.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5CursorRowid	sqlite3.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5CursorRowid	tsrc/fts5.c	/^static i64 fts5CursorRowid(Fts5Cursor *pCsr){$/;"	f	file:
fts5DataDelete	ext/fts5/fts5_index.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataDelete	fts5.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataDelete	sqlite3.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataDelete	tsrc/fts5.c	/^static void fts5DataDelete(Fts5Index *p, i64 iFirst, i64 iLast){$/;"	f	file:
fts5DataRead	ext/fts5/fts5_index.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRead	fts5.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRead	sqlite3.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRead	tsrc/fts5.c	/^static Fts5Data *fts5DataRead(Fts5Index *p, i64 iRowid){$/;"	f	file:
fts5DataRelease	ext/fts5/fts5_index.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRelease	fts5.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRelease	sqlite3.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRelease	tsrc/fts5.c	/^static void fts5DataRelease(Fts5Data *pData){$/;"	f	file:
fts5DataRemoveSegment	ext/fts5/fts5_index.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataRemoveSegment	fts5.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataRemoveSegment	sqlite3.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataRemoveSegment	tsrc/fts5.c	/^static void fts5DataRemoveSegment(Fts5Index *p, int iSegid){$/;"	f	file:
fts5DataWrite	ext/fts5/fts5_index.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DataWrite	fts5.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DataWrite	sqlite3.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DataWrite	tsrc/fts5.c	/^static void fts5DataWrite(Fts5Index *p, i64 iRowid, const u8 *pData, int nData){$/;"	f	file:
fts5DebugRowid	ext/fts5/fts5_index.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugRowid	fts5.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugRowid	sqlite3.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugRowid	tsrc/fts5.c	/^static void fts5DebugRowid(int *pRc, Fts5Buffer *pBuf, i64 iKey){$/;"	f	file:
fts5DebugStructure	ext/fts5/fts5_index.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DebugStructure	fts5.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DebugStructure	sqlite3.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DebugStructure	tsrc/fts5.c	/^static void fts5DebugStructure($/;"	f	file:
fts5DecodeAverages	ext/fts5/fts5_index.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeAverages	fts5.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeAverages	sqlite3.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeAverages	tsrc/fts5.c	/^static void fts5DecodeAverages($/;"	f	file:
fts5DecodeDoclist	ext/fts5/fts5_index.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeDoclist	fts5.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeDoclist	sqlite3.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeDoclist	tsrc/fts5.c	/^static int fts5DecodeDoclist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeFunction	ext/fts5/fts5_index.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodeFunction	fts5.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodeFunction	sqlite3.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodeFunction	tsrc/fts5.c	/^static void fts5DecodeFunction($/;"	f	file:
fts5DecodePoslist	ext/fts5/fts5_index.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodePoslist	fts5.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodePoslist	sqlite3.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodePoslist	tsrc/fts5.c	/^static int fts5DecodePoslist(int *pRc, Fts5Buffer *pBuf, const u8 *a, int n){$/;"	f	file:
fts5DecodeRowid	ext/fts5/fts5_index.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowid	fts5.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowid	sqlite3.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowid	tsrc/fts5.c	/^static void fts5DecodeRowid($/;"	f	file:
fts5DecodeRowidList	ext/fts5/fts5_index.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeRowidList	fts5.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeRowidList	sqlite3.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeRowidList	tsrc/fts5.c	/^static void fts5DecodeRowidList($/;"	f	file:
fts5DecodeStructure	ext/fts5/fts5_index.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5DecodeStructure	fts5.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5DecodeStructure	sqlite3.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5DecodeStructure	tsrc/fts5.c	/^static void fts5DecodeStructure($/;"	f	file:
fts5Dequote	ext/fts5/fts5_config.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5Dequote	fts5.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5Dequote	sqlite3.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5Dequote	tsrc/fts5.c	/^static int fts5Dequote(char *z){$/;"	f	file:
fts5DestroyMethod	ext/fts5/fts5_main.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DestroyMethod	fts5.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DestroyMethod	sqlite3.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DestroyMethod	tsrc/fts5.c	/^static int fts5DestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	ext/fts5/fts5_main.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	fts5.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	sqlite3.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DisconnectMethod	tsrc/fts5.c	/^static int fts5DisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5DlidxExtractFirstRowid	ext/fts5/fts5_index.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxExtractFirstRowid	fts5.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxExtractFirstRowid	sqlite3.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxExtractFirstRowid	tsrc/fts5.c	/^static i64 fts5DlidxExtractFirstRowid(Fts5Buffer *pBuf){$/;"	f	file:
fts5DlidxIterEof	ext/fts5/fts5_index.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterEof	fts5.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterEof	sqlite3.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterEof	tsrc/fts5.c	/^static int fts5DlidxIterEof(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	ext/fts5/fts5_index.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	fts5.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	sqlite3.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFirst	tsrc/fts5.c	/^static int fts5DlidxIterFirst(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	ext/fts5/fts5_index.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	fts5.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	sqlite3.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterFree	tsrc/fts5.c	/^static void fts5DlidxIterFree(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterInit	ext/fts5/fts5_index.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterInit	fts5.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterInit	sqlite3.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterInit	tsrc/fts5.c	/^static Fts5DlidxIter *fts5DlidxIterInit($/;"	f	file:
fts5DlidxIterLast	ext/fts5/fts5_index.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterLast	fts5.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterLast	sqlite3.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterLast	tsrc/fts5.c	/^static void fts5DlidxIterLast(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	ext/fts5/fts5_index.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	fts5.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	sqlite3.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNext	tsrc/fts5.c	/^static int fts5DlidxIterNext(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterNextR	ext/fts5/fts5_index.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterNextR	fts5.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterNextR	sqlite3.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterNextR	tsrc/fts5.c	/^static int fts5DlidxIterNextR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPgno	ext/fts5/fts5_index.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPgno	fts5.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPgno	sqlite3.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPgno	tsrc/fts5.c	/^static int fts5DlidxIterPgno(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	ext/fts5/fts5_index.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	fts5.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	sqlite3.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrev	tsrc/fts5.c	/^static int fts5DlidxIterPrev(Fts5Index *p, Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterPrevR	ext/fts5/fts5_index.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPrevR	fts5.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPrevR	sqlite3.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterPrevR	tsrc/fts5.c	/^static int fts5DlidxIterPrevR(Fts5Index *p, Fts5DlidxIter *pIter, int iLvl){$/;"	f	file:
fts5DlidxIterRowid	ext/fts5/fts5_index.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterRowid	fts5.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterRowid	sqlite3.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxIterRowid	tsrc/fts5.c	/^static i64 fts5DlidxIterRowid(Fts5DlidxIter *pIter){$/;"	f	file:
fts5DlidxLvlNext	ext/fts5/fts5_index.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlNext	fts5.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlNext	sqlite3.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlNext	tsrc/fts5.c	/^static int fts5DlidxLvlNext(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	ext/fts5/fts5_index.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	fts5.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	sqlite3.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DlidxLvlPrev	tsrc/fts5.c	/^static int fts5DlidxLvlPrev(Fts5DlidxLvl *pLvl){$/;"	f	file:
fts5DoclistIterInit	ext/fts5/fts5_index.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterInit	fts5.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterInit	sqlite3.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterInit	tsrc/fts5.c	/^static void fts5DoclistIterInit($/;"	f	file:
fts5DoclistIterNext	ext/fts5/fts5_index.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5DoclistIterNext	fts5.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5DoclistIterNext	sqlite3.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5DoclistIterNext	tsrc/fts5.c	/^static void fts5DoclistIterNext(Fts5DoclistIter *pIter){$/;"	f	file:
fts5EofMethod	ext/fts5/fts5_main.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5EofMethod	fts5.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5EofMethod	sqlite3.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5EofMethod	tsrc/fts5.c	/^static int fts5EofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5ExecPrintf	ext/fts5/fts5_storage.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExecPrintf	fts5.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExecPrintf	sqlite3.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExecPrintf	tsrc/fts5.c	/^static int fts5ExecPrintf($/;"	f	file:
fts5ExprAddChildren	ext/fts5/fts5_expr.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAddChildren	fts5.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAddChildren	sqlite3.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAddChildren	tsrc/fts5.c	/^static void fts5ExprAddChildren(Fts5ExprNode *p, Fts5ExprNode *pSub){$/;"	f	file:
fts5ExprAdvanceto	ext/fts5/fts5_expr.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAdvanceto	fts5.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAdvanceto	sqlite3.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAdvanceto	tsrc/fts5.c	/^static int fts5ExprAdvanceto($/;"	f	file:
fts5ExprAssignXNext	ext/fts5/fts5_expr.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprAssignXNext	fts5.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprAssignXNext	sqlite3.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprAssignXNext	tsrc/fts5.c	/^static void fts5ExprAssignXNext(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprCheckPoslists	ext/fts5/fts5_expr.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprCheckPoslists	fts5.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprCheckPoslists	sqlite3.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprCheckPoslists	tsrc/fts5.c	/^static int fts5ExprCheckPoslists(Fts5ExprNode *pNode, i64 iRowid){$/;"	f	file:
fts5ExprClearPoslists	ext/fts5/fts5_expr.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprClearPoslists	fts5.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprClearPoslists	sqlite3.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprClearPoslists	tsrc/fts5.c	/^static void fts5ExprClearPoslists(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprColsetTest	ext/fts5/fts5_expr.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprColsetTest	fts5.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprColsetTest	sqlite3.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprColsetTest	tsrc/fts5.c	/^static int fts5ExprColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5ExprFold	ext/fts5/fts5_expr.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFold	fts5.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFold	sqlite3.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFold	tsrc/fts5.c	/^static void fts5ExprFold($/;"	f	file:
fts5ExprFunction	ext/fts5/fts5_expr.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunction	fts5.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunction	sqlite3.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunction	tsrc/fts5.c	/^static void fts5ExprFunction($/;"	f	file:
fts5ExprFunctionHr	ext/fts5/fts5_expr.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionHr	fts5.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionHr	sqlite3.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionHr	tsrc/fts5.c	/^static void fts5ExprFunctionHr($/;"	f	file:
fts5ExprFunctionTcl	ext/fts5/fts5_expr.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprFunctionTcl	fts5.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprFunctionTcl	sqlite3.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprFunctionTcl	tsrc/fts5.c	/^static void fts5ExprFunctionTcl($/;"	f	file:
fts5ExprGetToken	ext/fts5/fts5_expr.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprGetToken	fts5.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprGetToken	sqlite3.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprGetToken	tsrc/fts5.c	/^static int fts5ExprGetToken($/;"	f	file:
fts5ExprIsAlnum	ext/fts5/fts5_expr.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsAlnum	fts5.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsAlnum	sqlite3.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsAlnum	tsrc/fts5.c	/^static void fts5ExprIsAlnum($/;"	f	file:
fts5ExprIsspace	ext/fts5/fts5_expr.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprIsspace	fts5.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprIsspace	sqlite3.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprIsspace	tsrc/fts5.c	/^static int fts5ExprIsspace(char t){$/;"	f	file:
fts5ExprNearInitAll	ext/fts5/fts5_expr.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearInitAll	fts5.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearInitAll	sqlite3.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearInitAll	tsrc/fts5.c	/^static int fts5ExprNearInitAll($/;"	f	file:
fts5ExprNearIsMatch	ext/fts5/fts5_expr.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearIsMatch	fts5.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearIsMatch	sqlite3.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearIsMatch	tsrc/fts5.c	/^static int fts5ExprNearIsMatch(int *pRc, Fts5ExprNearset *pNear){$/;"	f	file:
fts5ExprNearTest	ext/fts5/fts5_expr.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNearTest	fts5.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNearTest	sqlite3.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNearTest	tsrc/fts5.c	/^static int fts5ExprNearTest($/;"	f	file:
fts5ExprNodeFirst	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeFirst	fts5.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeFirst	sqlite3.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeFirst	tsrc/fts5.c	/^static int fts5ExprNodeFirst(Fts5Expr *pExpr, Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeNext	ext/fts5/fts5_expr.c	83;"	d	file:
fts5ExprNodeNext	fts5.c	4707;"	d	file:
fts5ExprNodeNext	sqlite3.c	181841;"	d	file:
fts5ExprNodeNext	tsrc/fts5.c	4707;"	d	file:
fts5ExprNodeNext_AND	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_AND	fts5.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_AND	sqlite3.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_AND	tsrc/fts5.c	/^static int fts5ExprNodeNext_AND($/;"	f	file:
fts5ExprNodeNext_NOT	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_NOT	fts5.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_NOT	sqlite3.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_NOT	tsrc/fts5.c	/^static int fts5ExprNodeNext_NOT($/;"	f	file:
fts5ExprNodeNext_OR	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_OR	fts5.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_OR	sqlite3.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_OR	tsrc/fts5.c	/^static int fts5ExprNodeNext_OR($/;"	f	file:
fts5ExprNodeNext_STRING	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_STRING	fts5.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_STRING	sqlite3.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_STRING	tsrc/fts5.c	/^static int fts5ExprNodeNext_STRING($/;"	f	file:
fts5ExprNodeNext_TERM	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeNext_TERM	fts5.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeNext_TERM	sqlite3.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeNext_TERM	tsrc/fts5.c	/^static int fts5ExprNodeNext_TERM($/;"	f	file:
fts5ExprNodeTest	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest	fts5.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest	sqlite3.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest	tsrc/fts5.c	/^static int fts5ExprNodeTest($/;"	f	file:
fts5ExprNodeTest_AND	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_AND	fts5.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_AND	sqlite3.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_AND	tsrc/fts5.c	/^static int fts5ExprNodeTest_AND($/;"	f	file:
fts5ExprNodeTest_NOT	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_NOT	fts5.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_NOT	sqlite3.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_NOT	tsrc/fts5.c	/^static int fts5ExprNodeTest_NOT($/;"	f	file:
fts5ExprNodeTest_OR	ext/fts5/fts5_expr.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_OR	fts5.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_OR	sqlite3.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_OR	tsrc/fts5.c	/^static void fts5ExprNodeTest_OR($/;"	f	file:
fts5ExprNodeTest_STRING	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_STRING	fts5.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_STRING	sqlite3.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_STRING	tsrc/fts5.c	/^static int fts5ExprNodeTest_STRING($/;"	f	file:
fts5ExprNodeTest_TERM	ext/fts5/fts5_expr.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeTest_TERM	fts5.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeTest_TERM	sqlite3.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeTest_TERM	tsrc/fts5.c	/^static int fts5ExprNodeTest_TERM($/;"	f	file:
fts5ExprNodeZeroPoslist	ext/fts5/fts5_expr.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeZeroPoslist	fts5.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeZeroPoslist	sqlite3.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprNodeZeroPoslist	tsrc/fts5.c	/^static void fts5ExprNodeZeroPoslist(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprPhraseFree	ext/fts5/fts5_expr.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseFree	fts5.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseFree	sqlite3.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseFree	tsrc/fts5.c	/^static void fts5ExprPhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
fts5ExprPhraseIsMatch	ext/fts5/fts5_expr.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPhraseIsMatch	fts5.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPhraseIsMatch	sqlite3.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPhraseIsMatch	tsrc/fts5.c	/^static int fts5ExprPhraseIsMatch($/;"	f	file:
fts5ExprPopulatePoslistsCb	ext/fts5/fts5_expr.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPopulatePoslistsCb	fts5.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPopulatePoslistsCb	sqlite3.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPopulatePoslistsCb	tsrc/fts5.c	/^static int fts5ExprPopulatePoslistsCb($/;"	f	file:
fts5ExprPrint	ext/fts5/fts5_expr.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrint	fts5.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrint	sqlite3.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrint	tsrc/fts5.c	/^static char *fts5ExprPrint(Fts5Config *pConfig, Fts5ExprNode *pExpr){$/;"	f	file:
fts5ExprPrintTcl	ext/fts5/fts5_expr.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprPrintTcl	fts5.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprPrintTcl	sqlite3.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprPrintTcl	tsrc/fts5.c	/^static char *fts5ExprPrintTcl($/;"	f	file:
fts5ExprSetEof	ext/fts5/fts5_expr.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSetEof	fts5.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSetEof	sqlite3.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSetEof	tsrc/fts5.c	/^static void fts5ExprSetEof(Fts5ExprNode *pNode){$/;"	f	file:
fts5ExprSynonymAdvanceto	ext/fts5/fts5_expr.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymAdvanceto	fts5.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymAdvanceto	sqlite3.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymAdvanceto	tsrc/fts5.c	/^static int fts5ExprSynonymAdvanceto($/;"	f	file:
fts5ExprSynonymList	ext/fts5/fts5_expr.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymList	fts5.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymList	sqlite3.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymList	tsrc/fts5.c	/^static int fts5ExprSynonymList($/;"	f	file:
fts5ExprSynonymRowid	ext/fts5/fts5_expr.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprSynonymRowid	fts5.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprSynonymRowid	sqlite3.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprSynonymRowid	tsrc/fts5.c	/^static i64 fts5ExprSynonymRowid(Fts5ExprTerm *pTerm, int bDesc, int *pbEof){$/;"	f	file:
fts5ExprTermPrint	ext/fts5/fts5_expr.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5ExprTermPrint	fts5.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5ExprTermPrint	sqlite3.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5ExprTermPrint	tsrc/fts5.c	/^static char *fts5ExprTermPrint(Fts5ExprTerm *pTerm){$/;"	f	file:
fts5FastGetVarint32	ext/fts5/fts5Int.h	506;"	d
fts5FastGetVarint32	fts5.c	1099;"	d	file:
fts5FastGetVarint32	sqlite3.c	178301;"	d	file:
fts5FastGetVarint32	tsrc/fts5.c	1099;"	d	file:
fts5FilterMethod	ext/fts5/fts5_main.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FilterMethod	fts5.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FilterMethod	sqlite3.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FilterMethod	tsrc/fts5.c	/^static int fts5FilterMethod($/;"	f	file:
fts5FindAuxiliary	ext/fts5/fts5_main.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindAuxiliary	fts5.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindAuxiliary	sqlite3.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindAuxiliary	tsrc/fts5.c	/^static Fts5Auxiliary *fts5FindAuxiliary(Fts5Table *pTab, const char *zName){$/;"	f	file:
fts5FindFunctionMethod	ext/fts5/fts5_main.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindFunctionMethod	fts5.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindFunctionMethod	sqlite3.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindFunctionMethod	tsrc/fts5.c	/^static int fts5FindFunctionMethod($/;"	f	file:
fts5FindRankFunction	ext/fts5/fts5_main.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindRankFunction	fts5.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindRankFunction	sqlite3.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindRankFunction	tsrc/fts5.c	/^static int fts5FindRankFunction(Fts5Cursor *pCsr){$/;"	f	file:
fts5FindTokenizer	ext/fts5/fts5_main.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FindTokenizer	fts5.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FindTokenizer	sqlite3.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FindTokenizer	tsrc/fts5.c	/^static int fts5FindTokenizer($/;"	f	file:
fts5FlushOneHash	ext/fts5/fts5_index.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FlushOneHash	fts5.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FlushOneHash	sqlite3.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FlushOneHash	tsrc/fts5.c	/^static void fts5FlushOneHash(Fts5Index *p){$/;"	f	file:
fts5FreeCursorComponents	ext/fts5/fts5_main.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeCursorComponents	fts5.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeCursorComponents	sqlite3.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeCursorComponents	tsrc/fts5.c	/^static void fts5FreeCursorComponents(Fts5Cursor *pCsr){$/;"	f	file:
fts5FreeVtab	ext/fts5/fts5_main.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5FreeVtab	fts5.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5FreeVtab	sqlite3.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5FreeVtab	tsrc/fts5.c	/^static void fts5FreeVtab(Fts5Table *pTab){$/;"	f	file:
fts5Fts5Func	ext/fts5/fts5_main.c	/^static void fts5Fts5Func($/;"	f	file:
fts5Fts5Func	fts5.c	/^static void fts5Fts5Func($/;"	f	file:
fts5Fts5Func	sqlite3.c	/^static void fts5Fts5Func($/;"	f	file:
fts5Fts5Func	tsrc/fts5.c	/^static void fts5Fts5Func($/;"	f	file:
fts5GetPoslistSize	ext/fts5/fts5_index.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetPoslistSize	fts5.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetPoslistSize	sqlite3.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetPoslistSize	tsrc/fts5.c	/^static int fts5GetPoslistSize(const u8 *p, int *pnSz, int *pbDel){$/;"	f	file:
fts5GetRowidLimit	ext/fts5/fts5_main.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetRowidLimit	fts5.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetRowidLimit	sqlite3.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetRowidLimit	tsrc/fts5.c	/^static i64 fts5GetRowidLimit(sqlite3_value *pVal, i64 iDefault){$/;"	f	file:
fts5GetU16	ext/fts5/fts5_index.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetU16	fts5.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetU16	sqlite3.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetU16	tsrc/fts5.c	/^static u16 fts5GetU16(const u8 *aIn){$/;"	f	file:
fts5GetVarint	ext/fts5/fts5Int.h	504;"	d
fts5GetVarint	fts5.c	1097;"	d	file:
fts5GetVarint	sqlite3.c	178299;"	d	file:
fts5GetVarint	tsrc/fts5.c	1097;"	d	file:
fts5GetVarint32	ext/fts5/fts5Int.h	503;"	d
fts5GetVarint32	fts5.c	1096;"	d	file:
fts5GetVarint32	sqlite3.c	178298;"	d	file:
fts5GetVarint32	tsrc/fts5.c	1096;"	d	file:
fts5HashAddPoslistSize	ext/fts5/fts5_hash.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashAddPoslistSize	fts5.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashAddPoslistSize	sqlite3.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashAddPoslistSize	tsrc/fts5.c	/^static void fts5HashAddPoslistSize(Fts5Hash *pHash, Fts5HashEntry *p){$/;"	f	file:
fts5HashEntryMerge	ext/fts5/fts5_hash.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntryMerge	fts5.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntryMerge	sqlite3.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntryMerge	tsrc/fts5.c	/^static Fts5HashEntry *fts5HashEntryMerge($/;"	f	file:
fts5HashEntrySort	ext/fts5/fts5_hash.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashEntrySort	fts5.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashEntrySort	sqlite3.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashEntrySort	tsrc/fts5.c	/^static int fts5HashEntrySort($/;"	f	file:
fts5HashKey	ext/fts5/fts5_hash.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey	fts5.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey	sqlite3.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey	tsrc/fts5.c	/^static unsigned int fts5HashKey(int nSlot, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	ext/fts5/fts5_hash.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	fts5.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	sqlite3.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashKey2	tsrc/fts5.c	/^static unsigned int fts5HashKey2(int nSlot, u8 b, const u8 *p, int n){$/;"	f	file:
fts5HashResize	ext/fts5/fts5_hash.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HashResize	fts5.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HashResize	sqlite3.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HashResize	tsrc/fts5.c	/^static int fts5HashResize(Fts5Hash *pHash){$/;"	f	file:
fts5HighlightAppend	ext/fts5/fts5_aux.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightAppend	fts5.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightAppend	sqlite3.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightAppend	tsrc/fts5.c	/^static void fts5HighlightAppend($/;"	f	file:
fts5HighlightCb	ext/fts5/fts5_aux.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightCb	fts5.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightCb	sqlite3.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightCb	tsrc/fts5.c	/^static int fts5HighlightCb($/;"	f	file:
fts5HighlightFunction	ext/fts5/fts5_aux.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5HighlightFunction	fts5.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5HighlightFunction	sqlite3.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5HighlightFunction	tsrc/fts5.c	/^static void fts5HighlightFunction($/;"	f	file:
fts5IdxMalloc	ext/fts5/fts5_index.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxMalloc	fts5.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxMalloc	sqlite3.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxMalloc	tsrc/fts5.c	/^static void *fts5IdxMalloc(Fts5Index *p, int nByte){$/;"	f	file:
fts5IdxSelectStmt	ext/fts5/fts5_index.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IdxSelectStmt	fts5.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IdxSelectStmt	sqlite3.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IdxSelectStmt	tsrc/fts5.c	/^static sqlite3_stmt *fts5IdxSelectStmt(Fts5Index *p){$/;"	f	file:
fts5IndexAutomerge	ext/fts5/fts5_index.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexAutomerge	fts5.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexAutomerge	sqlite3.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexAutomerge	tsrc/fts5.c	/^static void fts5IndexAutomerge($/;"	f	file:
fts5IndexCharlen	ext/fts5/fts5_index.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexCharlen	fts5.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexCharlen	sqlite3.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexCharlen	tsrc/fts5.c	/^static int fts5IndexCharlen(const char *pIn, int nIn){$/;"	f	file:
fts5IndexColsetTest	ext/fts5/fts5_index.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexColsetTest	fts5.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexColsetTest	sqlite3.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexColsetTest	tsrc/fts5.c	/^static int fts5IndexColsetTest(Fts5Colset *pColset, int iCol){$/;"	f	file:
fts5IndexCrisismerge	ext/fts5/fts5_index.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexCrisismerge	fts5.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexCrisismerge	sqlite3.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexCrisismerge	tsrc/fts5.c	/^static void fts5IndexCrisismerge($/;"	f	file:
fts5IndexDataVersion	ext/fts5/fts5_index.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDataVersion	fts5.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDataVersion	sqlite3.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDataVersion	tsrc/fts5.c	/^static i64 fts5IndexDataVersion(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	ext/fts5/fts5_index.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	fts5.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	sqlite3.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexDiscardData	tsrc/fts5.c	/^static void fts5IndexDiscardData(Fts5Index *p){$/;"	f	file:
fts5IndexExtractCol	ext/fts5/fts5_index.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractCol	fts5.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractCol	sqlite3.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractCol	tsrc/fts5.c	/^static int fts5IndexExtractCol($/;"	f	file:
fts5IndexExtractColset	ext/fts5/fts5_index.c	/^static int fts5IndexExtractColset ($/;"	f	file:
fts5IndexExtractColset	fts5.c	/^static int fts5IndexExtractColset ($/;"	f	file:
fts5IndexExtractColset	sqlite3.c	/^static int fts5IndexExtractColset ($/;"	f	file:
fts5IndexExtractColset	tsrc/fts5.c	/^static int fts5IndexExtractColset ($/;"	f	file:
fts5IndexFlush	ext/fts5/fts5_index.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexFlush	fts5.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexFlush	sqlite3.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexFlush	tsrc/fts5.c	/^static void fts5IndexFlush(Fts5Index *p){$/;"	f	file:
fts5IndexIntegrityCheckEmpty	ext/fts5/fts5_index.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckEmpty	fts5.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckEmpty	sqlite3.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckEmpty	tsrc/fts5.c	/^static void fts5IndexIntegrityCheckEmpty($/;"	f	file:
fts5IndexIntegrityCheckSegment	ext/fts5/fts5_index.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexIntegrityCheckSegment	fts5.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexIntegrityCheckSegment	sqlite3.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexIntegrityCheckSegment	tsrc/fts5.c	/^static void fts5IndexIntegrityCheckSegment($/;"	f	file:
fts5IndexMerge	ext/fts5/fts5_index.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMerge	fts5.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMerge	sqlite3.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMerge	tsrc/fts5.c	/^static int fts5IndexMerge($/;"	f	file:
fts5IndexMergeLevel	ext/fts5/fts5_index.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexMergeLevel	fts5.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexMergeLevel	sqlite3.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexMergeLevel	tsrc/fts5.c	/^static void fts5IndexMergeLevel($/;"	f	file:
fts5IndexOptimizeStruct	ext/fts5/fts5_index.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexOptimizeStruct	fts5.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexOptimizeStruct	sqlite3.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexOptimizeStruct	tsrc/fts5.c	/^static Fts5Structure *fts5IndexOptimizeStruct($/;"	f	file:
fts5IndexPrepareStmt	ext/fts5/fts5_index.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexPrepareStmt	fts5.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexPrepareStmt	sqlite3.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexPrepareStmt	tsrc/fts5.c	/^static int fts5IndexPrepareStmt($/;"	f	file:
fts5IndexReturn	ext/fts5/fts5_index.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexReturn	fts5.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexReturn	sqlite3.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexReturn	tsrc/fts5.c	/^static int fts5IndexReturn(Fts5Index *p){$/;"	f	file:
fts5IndexSkipVarint	ext/fts5/fts5_index.c	2076;"	d	file:
fts5IndexSkipVarint	fts5.c	9888;"	d	file:
fts5IndexSkipVarint	sqlite3.c	187020;"	d	file:
fts5IndexSkipVarint	tsrc/fts5.c	9888;"	d	file:
fts5Init	ext/fts5/fts5_main.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5Init	fts5.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5Init	sqlite3.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5Init	tsrc/fts5.c	/^static int fts5Init(sqlite3 *db){$/;"	f	file:
fts5InitVtab	ext/fts5/fts5_main.c	/^static int fts5InitVtab($/;"	f	file:
fts5InitVtab	fts5.c	/^static int fts5InitVtab($/;"	f	file:
fts5InitVtab	sqlite3.c	/^static int fts5InitVtab($/;"	f	file:
fts5InitVtab	tsrc/fts5.c	/^static int fts5InitVtab($/;"	f	file:
fts5IntegrityCheckPgidx	ext/fts5/fts5_index.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IntegrityCheckPgidx	fts5.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IntegrityCheckPgidx	sqlite3.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IntegrityCheckPgidx	tsrc/fts5.c	/^static void fts5IntegrityCheckPgidx(Fts5Index *p, Fts5Data *pLeaf){$/;"	f	file:
fts5IsContentless	ext/fts5/fts5_main.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IsContentless	fts5.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IsContentless	sqlite3.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IsContentless	tsrc/fts5.c	/^static int fts5IsContentless(Fts5Table *pTab){$/;"	f	file:
fts5IterSetOutputCb	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputCb	fts5.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputCb	sqlite3.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputCb	tsrc/fts5.c	/^static void fts5IterSetOutputCb(int *pRc, Fts5Iter *pIter){$/;"	f	file:
fts5IterSetOutputs_Col	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col	fts5.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col	sqlite3.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col	tsrc/fts5.c	/^static void fts5IterSetOutputs_Col(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	fts5.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	sqlite3.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Col100	tsrc/fts5.c	/^static void fts5IterSetOutputs_Col100(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	fts5.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	sqlite3.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Full	tsrc/fts5.c	/^static void fts5IterSetOutputs_Full(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	fts5.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	sqlite3.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Nocolset	tsrc/fts5.c	/^static void fts5IterSetOutputs_Nocolset(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	fts5.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	sqlite3.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_None	tsrc/fts5.c	/^static void fts5IterSetOutputs_None(Fts5Iter *pIter, Fts5SegIter *pSeg){$/;"	f	file:
fts5IterSetOutputs_Noop	ext/fts5/fts5_index.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5IterSetOutputs_Noop	fts5.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5IterSetOutputs_Noop	sqlite3.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5IterSetOutputs_Noop	tsrc/fts5.c	/^static void fts5IterSetOutputs_Noop(Fts5Iter *pUnused1, Fts5SegIter *pUnused2){$/;"	f	file:
fts5LeafFirstRowidOff	ext/fts5/fts5_index.c	486;"	d	file:
fts5LeafFirstRowidOff	fts5.c	8298;"	d	file:
fts5LeafFirstRowidOff	sqlite3.c	185430;"	d	file:
fts5LeafFirstRowidOff	tsrc/fts5.c	8298;"	d	file:
fts5LeafFirstTermOff	ext/fts5/fts5_index.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafFirstTermOff	fts5.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafFirstTermOff	sqlite3.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafFirstTermOff	tsrc/fts5.c	/^static int fts5LeafFirstTermOff(Fts5Data *pLeaf){$/;"	f	file:
fts5LeafIsTermless	ext/fts5/fts5_index.c	482;"	d	file:
fts5LeafIsTermless	fts5.c	8294;"	d	file:
fts5LeafIsTermless	sqlite3.c	185426;"	d	file:
fts5LeafIsTermless	tsrc/fts5.c	8294;"	d	file:
fts5LeafSeek	ext/fts5/fts5_index.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafSeek	fts5.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafSeek	sqlite3.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafSeek	tsrc/fts5.c	/^static void fts5LeafSeek($/;"	f	file:
fts5LeafTermOff	ext/fts5/fts5_index.c	484;"	d	file:
fts5LeafTermOff	fts5.c	8296;"	d	file:
fts5LeafTermOff	sqlite3.c	185428;"	d	file:
fts5LeafTermOff	tsrc/fts5.c	8296;"	d	file:
fts5LocateTokenizer	ext/fts5/fts5_main.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LocateTokenizer	fts5.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LocateTokenizer	sqlite3.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LocateTokenizer	tsrc/fts5.c	/^static Fts5TokenizerModule *fts5LocateTokenizer($/;"	f	file:
fts5LookaheadReaderInit	ext/fts5/fts5_expr.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderInit	fts5.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderInit	sqlite3.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderInit	tsrc/fts5.c	/^static int fts5LookaheadReaderInit($/;"	f	file:
fts5LookaheadReaderNext	ext/fts5/fts5_expr.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5LookaheadReaderNext	fts5.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5LookaheadReaderNext	sqlite3.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5LookaheadReaderNext	tsrc/fts5.c	/^static int fts5LookaheadReaderNext(Fts5LookaheadReader *p){$/;"	f	file:
fts5MatchinfoFlagsize	ext/fts5/fts5_test_mi.c	/^static int fts5MatchinfoFlagsize(int nCol, int nPhrase, char f){$/;"	f	file:
fts5MatchinfoFunc	ext/fts5/fts5_test_mi.c	/^static void fts5MatchinfoFunc($/;"	f	file:
fts5MatchinfoGlobalCb	ext/fts5/fts5_test_mi.c	/^static int fts5MatchinfoGlobalCb($/;"	f	file:
fts5MatchinfoIter	ext/fts5/fts5_test_mi.c	/^static int fts5MatchinfoIter($/;"	f	file:
fts5MatchinfoLocalCb	ext/fts5/fts5_test_mi.c	/^static int fts5MatchinfoLocalCb($/;"	f	file:
fts5MatchinfoNew	ext/fts5/fts5_test_mi.c	/^static Fts5MatchinfoCtx *fts5MatchinfoNew($/;"	f	file:
fts5MatchinfoXCb	ext/fts5/fts5_test_mi.c	/^static int fts5MatchinfoXCb($/;"	f	file:
fts5MergeAppendDocid	ext/fts5/fts5_index.c	4790;"	d	file:
fts5MergeAppendDocid	fts5.c	12602;"	d	file:
fts5MergeAppendDocid	sqlite3.c	189734;"	d	file:
fts5MergeAppendDocid	tsrc/fts5.c	12602;"	d	file:
fts5MergeChunkCallback	ext/fts5/fts5_index.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergeChunkCallback	fts5.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergeChunkCallback	sqlite3.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergeChunkCallback	tsrc/fts5.c	/^static void fts5MergeChunkCallback($/;"	f	file:
fts5MergePrefixLists	ext/fts5/fts5_index.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergePrefixLists	fts5.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergePrefixLists	sqlite3.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergePrefixLists	tsrc/fts5.c	/^static void fts5MergePrefixLists($/;"	f	file:
fts5MergeRowidLists	ext/fts5/fts5_index.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5MergeRowidLists	fts5.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5MergeRowidLists	sqlite3.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5MergeRowidLists	tsrc/fts5.c	/^static void fts5MergeRowidLists($/;"	f	file:
fts5ModuleDestroy	ext/fts5/fts5_main.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5ModuleDestroy	fts5.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5ModuleDestroy	sqlite3.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5ModuleDestroy	tsrc/fts5.c	/^static void fts5ModuleDestroy(void *pCtx){$/;"	f	file:
fts5MultiIterAdvanceRowid	ext/fts5/fts5_index.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanceRowid	fts5.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanceRowid	sqlite3.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanceRowid	tsrc/fts5.c	/^static int fts5MultiIterAdvanceRowid($/;"	f	file:
fts5MultiIterAdvanced	ext/fts5/fts5_index.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAdvanced	fts5.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAdvanced	sqlite3.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAdvanced	tsrc/fts5.c	/^static void fts5MultiIterAdvanced($/;"	f	file:
fts5MultiIterAlloc	ext/fts5/fts5_index.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterAlloc	fts5.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterAlloc	sqlite3.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterAlloc	tsrc/fts5.c	/^static Fts5Iter *fts5MultiIterAlloc($/;"	f	file:
fts5MultiIterDoCompare	ext/fts5/fts5_index.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterDoCompare	fts5.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterDoCompare	sqlite3.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterDoCompare	tsrc/fts5.c	/^static int fts5MultiIterDoCompare(Fts5Iter *pIter, int iOut){$/;"	f	file:
fts5MultiIterEof	ext/fts5/fts5_index.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterEof	fts5.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterEof	sqlite3.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterEof	tsrc/fts5.c	/^static int fts5MultiIterEof(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	ext/fts5/fts5_index.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	fts5.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	sqlite3.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterFree	tsrc/fts5.c	/^static void fts5MultiIterFree(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	ext/fts5/fts5_index.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	fts5.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	sqlite3.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterIsEmpty	tsrc/fts5.c	/^static int fts5MultiIterIsEmpty(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterNew	ext/fts5/fts5_index.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew	fts5.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew	sqlite3.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew	tsrc/fts5.c	/^static void fts5MultiIterNew($/;"	f	file:
fts5MultiIterNew2	ext/fts5/fts5_index.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNew2	fts5.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNew2	sqlite3.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNew2	tsrc/fts5.c	/^static void fts5MultiIterNew2($/;"	f	file:
fts5MultiIterNext	ext/fts5/fts5_index.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext	fts5.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext	sqlite3.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext	tsrc/fts5.c	/^static void fts5MultiIterNext($/;"	f	file:
fts5MultiIterNext2	ext/fts5/fts5_index.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNext2	fts5.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNext2	sqlite3.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNext2	tsrc/fts5.c	/^static void fts5MultiIterNext2($/;"	f	file:
fts5MultiIterNextFrom	ext/fts5/fts5_index.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterNextFrom	fts5.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterNextFrom	sqlite3.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterNextFrom	tsrc/fts5.c	/^static void fts5MultiIterNextFrom($/;"	f	file:
fts5MultiIterRowid	ext/fts5/fts5_index.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterRowid	fts5.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterRowid	sqlite3.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterRowid	tsrc/fts5.c	/^static i64 fts5MultiIterRowid(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	ext/fts5/fts5_index.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	fts5.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	sqlite3.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterSetEof	tsrc/fts5.c	/^static void fts5MultiIterSetEof(Fts5Iter *pIter){$/;"	f	file:
fts5MultiIterTerm	ext/fts5/fts5_index.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5MultiIterTerm	fts5.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5MultiIterTerm	sqlite3.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5MultiIterTerm	tsrc/fts5.c	/^static const u8 *fts5MultiIterTerm(Fts5Iter *pIter, int *pn){$/;"	f	file:
fts5NewTransaction	ext/fts5/fts5_main.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NewTransaction	fts5.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NewTransaction	sqlite3.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NewTransaction	tsrc/fts5.c	/^static int fts5NewTransaction(Fts5Table *pTab){$/;"	f	file:
fts5NextMethod	ext/fts5/fts5_main.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextMethod	fts5.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextMethod	sqlite3.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextMethod	tsrc/fts5.c	/^static int fts5NextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5NextRowid	ext/fts5/fts5_index.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NextRowid	fts5.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NextRowid	sqlite3.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NextRowid	tsrc/fts5.c	/^static void fts5NextRowid(Fts5Buffer *pBuf, int *piOff, i64 *piRowid){$/;"	f	file:
fts5NodeCompare	ext/fts5/fts5_expr.c	/^static int fts5NodeCompare($/;"	f	file:
fts5NodeCompare	fts5.c	/^static int fts5NodeCompare($/;"	f	file:
fts5NodeCompare	sqlite3.c	/^static int fts5NodeCompare($/;"	f	file:
fts5NodeCompare	tsrc/fts5.c	/^static int fts5NodeCompare($/;"	f	file:
fts5OpenMethod	ext/fts5/fts5_main.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5OpenMethod	fts5.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5OpenMethod	sqlite3.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5OpenMethod	tsrc/fts5.c	/^static int fts5OpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5ParseAlloc	ext/fts5/fts5_expr.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseAlloc	fts5.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseAlloc	sqlite3.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseAlloc	tsrc/fts5.c	/^static void *fts5ParseAlloc(u64 t){ return sqlite3_malloc((int)t); }$/;"	f	file:
fts5ParseColset	ext/fts5/fts5_expr.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseColset	fts5.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseColset	sqlite3.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseColset	tsrc/fts5.c	/^static Fts5Colset *fts5ParseColset($/;"	f	file:
fts5ParseFree	ext/fts5/fts5_expr.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseFree	fts5.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseFree	sqlite3.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseFree	tsrc/fts5.c	/^static void fts5ParseFree(void *p){ sqlite3_free(p); }$/;"	f	file:
fts5ParseStringFromToken	ext/fts5/fts5_expr.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseStringFromToken	fts5.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseStringFromToken	sqlite3.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseStringFromToken	tsrc/fts5.c	/^static int fts5ParseStringFromToken(Fts5Token *pToken, char **pz){$/;"	f	file:
fts5ParseTokenize	ext/fts5/fts5_expr.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5ParseTokenize	fts5.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5ParseTokenize	sqlite3.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5ParseTokenize	tsrc/fts5.c	/^static int fts5ParseTokenize($/;"	f	file:
fts5PorterCb	ext/fts5/fts5_tokenize.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCb	fts5.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCb	sqlite3.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCb	tsrc/fts5.c	/^static int fts5PorterCb($/;"	f	file:
fts5PorterCreate	ext/fts5/fts5_tokenize.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterCreate	fts5.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterCreate	sqlite3.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterCreate	tsrc/fts5.c	/^static int fts5PorterCreate($/;"	f	file:
fts5PorterDelete	ext/fts5/fts5_tokenize.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterDelete	fts5.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterDelete	sqlite3.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterDelete	tsrc/fts5.c	/^static void fts5PorterDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5PorterGobbleVC	ext/fts5/fts5_tokenize.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterGobbleVC	fts5.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterGobbleVC	sqlite3.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterGobbleVC	tsrc/fts5.c	/^static int fts5PorterGobbleVC(char *zStem, int nStem, int bPrevCons){$/;"	f	file:
fts5PorterIsVowel	ext/fts5/fts5_tokenize.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterIsVowel	fts5.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterIsVowel	sqlite3.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterIsVowel	tsrc/fts5.c	/^static int fts5PorterIsVowel(char c, int bYIsVowel){$/;"	f	file:
fts5PorterStep1A	ext/fts5/fts5_tokenize.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1A	fts5.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1A	sqlite3.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1A	tsrc/fts5.c	/^static void fts5PorterStep1A(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	ext/fts5/fts5_tokenize.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	fts5.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	sqlite3.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B	tsrc/fts5.c	/^static int fts5PorterStep1B(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	ext/fts5/fts5_tokenize.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	fts5.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	sqlite3.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep1B2	tsrc/fts5.c	/^static int fts5PorterStep1B2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	ext/fts5/fts5_tokenize.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	fts5.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	sqlite3.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep2	tsrc/fts5.c	/^static int fts5PorterStep2(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	ext/fts5/fts5_tokenize.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	fts5.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	sqlite3.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep3	tsrc/fts5.c	/^static int fts5PorterStep3(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	ext/fts5/fts5_tokenize.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	fts5.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	sqlite3.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterStep4	tsrc/fts5.c	/^static int fts5PorterStep4(char *aBuf, int *pnBuf){$/;"	f	file:
fts5PorterTokenize	ext/fts5/fts5_tokenize.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5PorterTokenize	fts5.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5PorterTokenize	sqlite3.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5PorterTokenize	tsrc/fts5.c	/^static int fts5PorterTokenize($/;"	f	file:
fts5Porter_MEq1	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MEq1	fts5.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MEq1	sqlite3.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MEq1	tsrc/fts5.c	/^static int fts5Porter_MEq1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	fts5.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	sqlite3.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt0	tsrc/fts5.c	/^static int fts5Porter_MGt0(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	fts5.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	sqlite3.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1	tsrc/fts5.c	/^static int fts5Porter_MGt1(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	fts5.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	sqlite3.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_MGt1_and_S_or_T	tsrc/fts5.c	/^static int fts5Porter_MGt1_and_S_or_T(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	fts5.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	sqlite3.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Ostar	tsrc/fts5.c	/^static int fts5Porter_Ostar(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	ext/fts5/fts5_tokenize.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	fts5.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	sqlite3.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5Porter_Vowel	tsrc/fts5.c	/^static int fts5Porter_Vowel(char *zStem, int nStem){$/;"	f	file:
fts5PoslistBlob	ext/fts5/fts5_main.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistBlob	fts5.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistBlob	sqlite3.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistBlob	tsrc/fts5.c	/^static int fts5PoslistBlob(sqlite3_context *pCtx, Fts5Cursor *pCsr){$/;"	f	file:
fts5PoslistCallback	ext/fts5/fts5_index.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistCallback	fts5.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistCallback	sqlite3.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistCallback	tsrc/fts5.c	/^static void fts5PoslistCallback($/;"	f	file:
fts5PoslistFilterCallback	ext/fts5/fts5_index.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistFilterCallback	fts5.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistFilterCallback	sqlite3.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistFilterCallback	tsrc/fts5.c	/^static void fts5PoslistFilterCallback($/;"	f	file:
fts5PoslistOffsetsCallback	ext/fts5/fts5_index.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistOffsetsCallback	fts5.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistOffsetsCallback	sqlite3.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistOffsetsCallback	tsrc/fts5.c	/^static void fts5PoslistOffsetsCallback($/;"	f	file:
fts5PoslistPrefix	ext/fts5/fts5_index.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PoslistPrefix	fts5.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PoslistPrefix	sqlite3.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PoslistPrefix	tsrc/fts5.c	/^static int fts5PoslistPrefix(const u8 *aBuf, int nMax){$/;"	f	file:
fts5PrefixCompress	ext/fts5/fts5_index.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrefixCompress	fts5.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrefixCompress	sqlite3.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrefixCompress	tsrc/fts5.c	/^static int fts5PrefixCompress(int nOld, const u8 *pOld, const u8 *pNew){$/;"	f	file:
fts5PrepareStatement	ext/fts5/fts5_main.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrepareStatement	fts5.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrepareStatement	sqlite3.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrepareStatement	tsrc/fts5.c	/^static int fts5PrepareStatement($/;"	f	file:
fts5PrintStructure	ext/fts5/fts5_index.c	1155;"	d	file:
fts5PrintStructure	fts5.c	8967;"	d	file:
fts5PrintStructure	sqlite3.c	186099;"	d	file:
fts5PrintStructure	tsrc/fts5.c	8967;"	d	file:
fts5PrintfAppend	ext/fts5/fts5_expr.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PrintfAppend	fts5.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PrintfAppend	sqlite3.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PrintfAppend	tsrc/fts5.c	/^static char *fts5PrintfAppend(char *zApp, const char *zFmt, ...){$/;"	f	file:
fts5PutU16	ext/fts5/fts5_index.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutU16	fts5.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutU16	sqlite3.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutU16	tsrc/fts5.c	/^static void fts5PutU16(u8 *aOut, u16 iVal){$/;"	f	file:
fts5PutVarint64	ext/fts5/fts5_varint.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5PutVarint64	fts5.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5PutVarint64	sqlite3.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5PutVarint64	tsrc/fts5.c	/^static int FTS5_NOINLINE fts5PutVarint64(unsigned char *p, u64 v){$/;"	f	file:
fts5QueryCksum	ext/fts5/fts5_index.c	/^static int fts5QueryCksum($/;"	f	file:
fts5QueryCksum	fts5.c	/^static int fts5QueryCksum($/;"	f	file:
fts5QueryCksum	sqlite3.c	/^static int fts5QueryCksum($/;"	f	file:
fts5QueryCksum	tsrc/fts5.c	/^static int fts5QueryCksum($/;"	f	file:
fts5ReleaseMethod	ext/fts5/fts5_main.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5ReleaseMethod	fts5.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5ReleaseMethod	sqlite3.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5ReleaseMethod	tsrc/fts5.c	/^static int fts5ReleaseMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RenameMethod	ext/fts5/fts5_main.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RenameMethod	fts5.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RenameMethod	sqlite3.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RenameMethod	tsrc/fts5.c	/^static int fts5RenameMethod($/;"	f	file:
fts5RollbackMethod	ext/fts5/fts5_main.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackMethod	fts5.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackMethod	sqlite3.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackMethod	tsrc/fts5.c	/^static int fts5RollbackMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5RollbackToMethod	ext/fts5/fts5_main.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RollbackToMethod	fts5.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RollbackToMethod	sqlite3.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RollbackToMethod	tsrc/fts5.c	/^static int fts5RollbackToMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5RowidCmp	ext/fts5/fts5_expr.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidCmp	fts5.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidCmp	sqlite3.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidCmp	tsrc/fts5.c	/^static int fts5RowidCmp($/;"	f	file:
fts5RowidFunction	ext/fts5/fts5_index.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidFunction	fts5.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidFunction	sqlite3.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidFunction	tsrc/fts5.c	/^static void fts5RowidFunction($/;"	f	file:
fts5RowidMethod	ext/fts5/fts5_main.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5RowidMethod	fts5.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5RowidMethod	sqlite3.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5RowidMethod	tsrc/fts5.c	/^static int fts5RowidMethod(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fts5SavepointMethod	ext/fts5/fts5_main.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SavepointMethod	fts5.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SavepointMethod	sqlite3.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SavepointMethod	tsrc/fts5.c	/^static int fts5SavepointMethod(sqlite3_vtab *pVtab, int iSavepoint){$/;"	f	file:
fts5SeekCursor	ext/fts5/fts5_main.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SeekCursor	fts5.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SeekCursor	sqlite3.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SeekCursor	tsrc/fts5.c	/^static int fts5SeekCursor(Fts5Cursor *pCsr, int bErrormsg){$/;"	f	file:
fts5SegIterClear	ext/fts5/fts5_index.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterClear	fts5.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterClear	sqlite3.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterClear	tsrc/fts5.c	/^static void fts5SegIterClear(Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterGotoPage	ext/fts5/fts5_index.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterGotoPage	fts5.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterGotoPage	sqlite3.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterGotoPage	tsrc/fts5.c	/^static void fts5SegIterGotoPage($/;"	f	file:
fts5SegIterHashInit	ext/fts5/fts5_index.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterHashInit	fts5.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterHashInit	sqlite3.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterHashInit	tsrc/fts5.c	/^static void fts5SegIterHashInit($/;"	f	file:
fts5SegIterInit	ext/fts5/fts5_index.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterInit	fts5.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterInit	sqlite3.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterInit	tsrc/fts5.c	/^static void fts5SegIterInit($/;"	f	file:
fts5SegIterLoadDlidx	ext/fts5/fts5_index.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadDlidx	fts5.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadDlidx	sqlite3.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadDlidx	tsrc/fts5.c	/^static void fts5SegIterLoadDlidx(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	ext/fts5/fts5_index.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	fts5.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	sqlite3.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadNPos	tsrc/fts5.c	/^static void fts5SegIterLoadNPos(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	ext/fts5/fts5_index.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	fts5.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	sqlite3.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadRowid	tsrc/fts5.c	/^static void fts5SegIterLoadRowid(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterLoadTerm	ext/fts5/fts5_index.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterLoadTerm	fts5.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterLoadTerm	sqlite3.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterLoadTerm	tsrc/fts5.c	/^static void fts5SegIterLoadTerm(Fts5Index *p, Fts5SegIter *pIter, int nKeep){$/;"	f	file:
fts5SegIterNext	ext/fts5/fts5_index.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNext	fts5.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNext	sqlite3.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNext	tsrc/fts5.c	/^static void fts5SegIterNext($/;"	f	file:
fts5SegIterNextFrom	ext/fts5/fts5_index.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextFrom	fts5.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextFrom	sqlite3.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextFrom	tsrc/fts5.c	/^static void fts5SegIterNextFrom($/;"	f	file:
fts5SegIterNextPage	ext/fts5/fts5_index.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNextPage	fts5.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNextPage	sqlite3.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNextPage	tsrc/fts5.c	/^static void fts5SegIterNextPage($/;"	f	file:
fts5SegIterNext_None	ext/fts5/fts5_index.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_None	fts5.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_None	sqlite3.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_None	tsrc/fts5.c	/^static void fts5SegIterNext_None($/;"	f	file:
fts5SegIterNext_Reverse	ext/fts5/fts5_index.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterNext_Reverse	fts5.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterNext_Reverse	sqlite3.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterNext_Reverse	tsrc/fts5.c	/^static void fts5SegIterNext_Reverse($/;"	f	file:
fts5SegIterReverse	ext/fts5/fts5_index.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverse	fts5.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverse	sqlite3.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverse	tsrc/fts5.c	/^static void fts5SegIterReverse(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	ext/fts5/fts5_index.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	fts5.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	sqlite3.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseInitPage	tsrc/fts5.c	/^static void fts5SegIterReverseInitPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	ext/fts5/fts5_index.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	fts5.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	sqlite3.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterReverseNewPage	tsrc/fts5.c	/^static void fts5SegIterReverseNewPage(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSeekInit	ext/fts5/fts5_index.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSeekInit	fts5.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSeekInit	sqlite3.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSeekInit	tsrc/fts5.c	/^static void fts5SegIterSeekInit($/;"	f	file:
fts5SegIterSetNext	ext/fts5/fts5_index.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSetNext	fts5.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSetNext	sqlite3.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegIterSetNext	tsrc/fts5.c	/^static void fts5SegIterSetNext(Fts5Index *p, Fts5SegIter *pIter){$/;"	f	file:
fts5SegiterPoslist	ext/fts5/fts5_index.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegiterPoslist	fts5.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegiterPoslist	sqlite3.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegiterPoslist	tsrc/fts5.c	/^static void fts5SegiterPoslist($/;"	f	file:
fts5SegmentSize	ext/fts5/fts5_index.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SegmentSize	fts5.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SegmentSize	sqlite3.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SegmentSize	tsrc/fts5.c	/^static int fts5SegmentSize(Fts5StructureSegment *pSeg){$/;"	f	file:
fts5SetUniqueFlag	ext/fts5/fts5_main.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetUniqueFlag	fts5.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetUniqueFlag	sqlite3.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetUniqueFlag	tsrc/fts5.c	/^static void fts5SetUniqueFlag(sqlite3_index_info *pIdxInfo){$/;"	f	file:
fts5SetVtabError	ext/fts5/fts5_main.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetVtabError	fts5.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetVtabError	sqlite3.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetVtabError	tsrc/fts5.c	/^static void fts5SetVtabError(Fts5Table *p, const char *zFormat, ...){$/;"	f	file:
fts5SetupPrefixIter	ext/fts5/fts5_index.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SetupPrefixIter	fts5.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SetupPrefixIter	sqlite3.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SetupPrefixIter	tsrc/fts5.c	/^static void fts5SetupPrefixIter($/;"	f	file:
fts5SnippetFunction	ext/fts5/fts5_aux.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SnippetFunction	fts5.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SnippetFunction	sqlite3.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SnippetFunction	tsrc/fts5.c	/^static void fts5SnippetFunction($/;"	f	file:
fts5SorterNext	ext/fts5/fts5_main.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SorterNext	fts5.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SorterNext	sqlite3.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SorterNext	tsrc/fts5.c	/^static int fts5SorterNext(Fts5Cursor *pCsr){$/;"	f	file:
fts5SourceIdFunc	ext/fts5/fts5_main.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SourceIdFunc	fts5.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SourceIdFunc	sqlite3.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SourceIdFunc	tsrc/fts5.c	/^static void fts5SourceIdFunc($/;"	f	file:
fts5SpecialDelete	ext/fts5/fts5_main.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialDelete	fts5.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialDelete	sqlite3.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialDelete	tsrc/fts5.c	/^static int fts5SpecialDelete($/;"	f	file:
fts5SpecialInsert	ext/fts5/fts5_main.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialInsert	fts5.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialInsert	sqlite3.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialInsert	tsrc/fts5.c	/^static int fts5SpecialInsert($/;"	f	file:
fts5SpecialMatch	ext/fts5/fts5_main.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5SpecialMatch	fts5.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5SpecialMatch	sqlite3.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5SpecialMatch	tsrc/fts5.c	/^static int fts5SpecialMatch($/;"	f	file:
fts5StmtType	ext/fts5/fts5_main.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StmtType	fts5.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StmtType	sqlite3.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StmtType	tsrc/fts5.c	/^static int fts5StmtType(Fts5Cursor *pCsr){$/;"	f	file:
fts5StorageCount	ext/fts5/fts5_storage.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageCount	fts5.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageCount	sqlite3.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageCount	tsrc/fts5.c	/^static int fts5StorageCount(Fts5Storage *p, const char *zSuffix, i64 *pnRow){$/;"	f	file:
fts5StorageDecodeSizeArray	ext/fts5/fts5_storage.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDecodeSizeArray	fts5.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDecodeSizeArray	sqlite3.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDecodeSizeArray	tsrc/fts5.c	/^static int fts5StorageDecodeSizeArray($/;"	f	file:
fts5StorageDeleteFromIndex	ext/fts5/fts5_storage.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageDeleteFromIndex	fts5.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageDeleteFromIndex	sqlite3.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageDeleteFromIndex	tsrc/fts5.c	/^static int fts5StorageDeleteFromIndex($/;"	f	file:
fts5StorageGetStmt	ext/fts5/fts5_storage.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageGetStmt	fts5.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageGetStmt	sqlite3.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageGetStmt	tsrc/fts5.c	/^static int fts5StorageGetStmt($/;"	f	file:
fts5StorageInsert	ext/fts5/fts5_main.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsert	fts5.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsert	sqlite3.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsert	tsrc/fts5.c	/^static void fts5StorageInsert($/;"	f	file:
fts5StorageInsertCallback	ext/fts5/fts5_storage.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertCallback	fts5.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertCallback	sqlite3.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertCallback	tsrc/fts5.c	/^static int fts5StorageInsertCallback($/;"	f	file:
fts5StorageInsertDocsize	ext/fts5/fts5_storage.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageInsertDocsize	fts5.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageInsertDocsize	sqlite3.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageInsertDocsize	tsrc/fts5.c	/^static int fts5StorageInsertDocsize($/;"	f	file:
fts5StorageIntegrityCallback	ext/fts5/fts5_storage.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageIntegrityCallback	fts5.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageIntegrityCallback	sqlite3.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageIntegrityCallback	tsrc/fts5.c	/^static int fts5StorageIntegrityCallback($/;"	f	file:
fts5StorageLoadTotals	ext/fts5/fts5_storage.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageLoadTotals	fts5.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageLoadTotals	sqlite3.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageLoadTotals	tsrc/fts5.c	/^static int fts5StorageLoadTotals(Fts5Storage *p, int bCache){$/;"	f	file:
fts5StorageNewRowid	ext/fts5/fts5_storage.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageNewRowid	fts5.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageNewRowid	sqlite3.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageNewRowid	tsrc/fts5.c	/^static int fts5StorageNewRowid(Fts5Storage *p, i64 *piRowid){$/;"	f	file:
fts5StorageRenameOne	ext/fts5/fts5_storage.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageRenameOne	fts5.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageRenameOne	sqlite3.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageRenameOne	tsrc/fts5.c	/^static void fts5StorageRenameOne($/;"	f	file:
fts5StorageSaveTotals	ext/fts5/fts5_storage.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StorageSaveTotals	fts5.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StorageSaveTotals	sqlite3.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StorageSaveTotals	tsrc/fts5.c	/^static int fts5StorageSaveTotals(Fts5Storage *p){$/;"	f	file:
fts5StructureAddLevel	ext/fts5/fts5_index.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureAddLevel	fts5.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureAddLevel	sqlite3.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureAddLevel	tsrc/fts5.c	/^static void fts5StructureAddLevel(int *pRc, Fts5Structure **ppStruct){$/;"	f	file:
fts5StructureCountSegments	ext/fts5/fts5_index.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureCountSegments	fts5.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureCountSegments	sqlite3.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureCountSegments	tsrc/fts5.c	/^static int fts5StructureCountSegments(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureDecode	ext/fts5/fts5_index.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureDecode	fts5.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureDecode	sqlite3.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureDecode	tsrc/fts5.c	/^static int fts5StructureDecode($/;"	f	file:
fts5StructureExtendLevel	ext/fts5/fts5_index.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureExtendLevel	fts5.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureExtendLevel	sqlite3.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureExtendLevel	tsrc/fts5.c	/^static void fts5StructureExtendLevel($/;"	f	file:
fts5StructureInvalidate	ext/fts5/fts5_index.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructureInvalidate	fts5.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructureInvalidate	sqlite3.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructureInvalidate	tsrc/fts5.c	/^static void fts5StructureInvalidate(Fts5Index *p){$/;"	f	file:
fts5StructurePromote	ext/fts5/fts5_index.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromote	fts5.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromote	sqlite3.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromote	tsrc/fts5.c	/^static void fts5StructurePromote($/;"	f	file:
fts5StructurePromoteTo	ext/fts5/fts5_index.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructurePromoteTo	fts5.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructurePromoteTo	sqlite3.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructurePromoteTo	tsrc/fts5.c	/^static void fts5StructurePromoteTo($/;"	f	file:
fts5StructureRead	ext/fts5/fts5_index.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureRead	fts5.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureRead	sqlite3.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureRead	tsrc/fts5.c	/^static Fts5Structure *fts5StructureRead(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	ext/fts5/fts5_index.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	fts5.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	sqlite3.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureReadUncached	tsrc/fts5.c	/^static Fts5Structure *fts5StructureReadUncached(Fts5Index *p){$/;"	f	file:
fts5StructureRef	ext/fts5/fts5_index.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRef	fts5.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRef	sqlite3.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRef	tsrc/fts5.c	/^static void fts5StructureRef(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	ext/fts5/fts5_index.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	fts5.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	sqlite3.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureRelease	tsrc/fts5.c	/^static void fts5StructureRelease(Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	ext/fts5/fts5_index.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	fts5.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	sqlite3.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5StructureWrite	tsrc/fts5.c	/^static void fts5StructureWrite(Fts5Index *p, Fts5Structure *pStruct){$/;"	f	file:
fts5SyncMethod	ext/fts5/fts5_main.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5SyncMethod	fts5.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5SyncMethod	sqlite3.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5SyncMethod	tsrc/fts5.c	/^static int fts5SyncMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5TestDlidxReverse	ext/fts5/fts5_index.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	ext/fts5/fts5_index.c	5689;"	d	file:
fts5TestDlidxReverse	fts5.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	fts5.c	13501;"	d	file:
fts5TestDlidxReverse	sqlite3.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	sqlite3.c	190633;"	d	file:
fts5TestDlidxReverse	tsrc/fts5.c	/^static void fts5TestDlidxReverse($/;"	f	file:
fts5TestDlidxReverse	tsrc/fts5.c	13501;"	d	file:
fts5TestTerm	ext/fts5/fts5_index.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	ext/fts5/fts5_index.c	5690;"	d	file:
fts5TestTerm	fts5.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	fts5.c	13502;"	d	file:
fts5TestTerm	sqlite3.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	sqlite3.c	190634;"	d	file:
fts5TestTerm	tsrc/fts5.c	/^static void fts5TestTerm($/;"	f	file:
fts5TestTerm	tsrc/fts5.c	13502;"	d	file:
fts5TrimSegments	ext/fts5/fts5_index.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TrimSegments	fts5.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TrimSegments	sqlite3.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TrimSegments	tsrc/fts5.c	/^static void fts5TrimSegments(Fts5Index *p, Fts5Iter *pIter){$/;"	f	file:
fts5TripCursors	ext/fts5/fts5_main.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5TripCursors	fts5.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5TripCursors	sqlite3.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5TripCursors	tsrc/fts5.c	/^static void fts5TripCursors(Fts5Table *pTab){$/;"	f	file:
fts5UnicodeAddExceptions	ext/fts5/fts5_tokenize.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeAddExceptions	fts5.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeAddExceptions	sqlite3.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeAddExceptions	tsrc/fts5.c	/^static int fts5UnicodeAddExceptions($/;"	f	file:
fts5UnicodeCreate	ext/fts5/fts5_tokenize.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeCreate	fts5.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeCreate	sqlite3.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeCreate	tsrc/fts5.c	/^static int fts5UnicodeCreate($/;"	f	file:
fts5UnicodeDelete	ext/fts5/fts5_tokenize.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeDelete	fts5.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeDelete	sqlite3.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeDelete	tsrc/fts5.c	/^static void fts5UnicodeDelete(Fts5Tokenizer *pTok){$/;"	f	file:
fts5UnicodeIsAlnum	ext/fts5/fts5_tokenize.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsAlnum	fts5.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsAlnum	sqlite3.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsAlnum	tsrc/fts5.c	/^static int fts5UnicodeIsAlnum(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	ext/fts5/fts5_tokenize.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	fts5.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	sqlite3.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeIsException	tsrc/fts5.c	/^static int fts5UnicodeIsException(Unicode61Tokenizer *p, int iCode){$/;"	f	file:
fts5UnicodeTokenize	ext/fts5/fts5_tokenize.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UnicodeTokenize	fts5.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UnicodeTokenize	sqlite3.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UnicodeTokenize	tsrc/fts5.c	/^static int fts5UnicodeTokenize($/;"	f	file:
fts5UpdateMethod	ext/fts5/fts5_main.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5UpdateMethod	fts5.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5UpdateMethod	sqlite3.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5UpdateMethod	tsrc/fts5.c	/^static int fts5UpdateMethod($/;"	f	file:
fts5VocabBestIndexMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabBestIndexMethod	fts5.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabBestIndexMethod	sqlite3.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabBestIndexMethod	tsrc/fts5.c	/^static int fts5VocabBestIndexMethod($/;"	f	file:
fts5VocabCloseMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabCloseMethod	fts5.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabCloseMethod	sqlite3.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabCloseMethod	tsrc/fts5.c	/^static int fts5VocabCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabColumnMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabColumnMethod	fts5.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabColumnMethod	sqlite3.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabColumnMethod	tsrc/fts5.c	/^static int fts5VocabColumnMethod($/;"	f	file:
fts5VocabConnectMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabConnectMethod	fts5.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabConnectMethod	sqlite3.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabConnectMethod	tsrc/fts5.c	/^static int fts5VocabConnectMethod($/;"	f	file:
fts5VocabCreateMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabCreateMethod	fts5.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabCreateMethod	sqlite3.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabCreateMethod	tsrc/fts5.c	/^static int fts5VocabCreateMethod($/;"	f	file:
fts5VocabDestroyMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDestroyMethod	fts5.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDestroyMethod	sqlite3.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDestroyMethod	tsrc/fts5.c	/^static int fts5VocabDestroyMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	fts5.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	sqlite3.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabDisconnectMethod	tsrc/fts5.c	/^static int fts5VocabDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5VocabEofMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabEofMethod	fts5.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabEofMethod	sqlite3.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabEofMethod	tsrc/fts5.c	/^static int fts5VocabEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabFilterMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabFilterMethod	fts5.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabFilterMethod	sqlite3.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabFilterMethod	tsrc/fts5.c	/^static int fts5VocabFilterMethod($/;"	f	file:
fts5VocabInitVtab	ext/fts5/fts5_vocab.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabInitVtab	fts5.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabInitVtab	sqlite3.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabInitVtab	tsrc/fts5.c	/^static int fts5VocabInitVtab($/;"	f	file:
fts5VocabNextMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabNextMethod	fts5.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabNextMethod	sqlite3.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabNextMethod	tsrc/fts5.c	/^static int fts5VocabNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5VocabOpenMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabOpenMethod	fts5.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabOpenMethod	sqlite3.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabOpenMethod	tsrc/fts5.c	/^static int fts5VocabOpenMethod($/;"	f	file:
fts5VocabResetCursor	ext/fts5/fts5_vocab.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabResetCursor	fts5.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabResetCursor	sqlite3.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabResetCursor	tsrc/fts5.c	/^static void fts5VocabResetCursor(Fts5VocabCursor *pCsr){$/;"	f	file:
fts5VocabRowidMethod	ext/fts5/fts5_vocab.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabRowidMethod	fts5.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabRowidMethod	sqlite3.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabRowidMethod	tsrc/fts5.c	/^static int fts5VocabRowidMethod($/;"	f	file:
fts5VocabTableType	ext/fts5/fts5_vocab.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5VocabTableType	fts5.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5VocabTableType	sqlite3.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5VocabTableType	tsrc/fts5.c	/^static int fts5VocabTableType(const char *zType, char **pzErr, int *peType){$/;"	f	file:
fts5WriteAppendPoslistData	ext/fts5/fts5_index.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendPoslistData	fts5.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendPoslistData	sqlite3.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendPoslistData	tsrc/fts5.c	/^static void fts5WriteAppendPoslistData($/;"	f	file:
fts5WriteAppendRowid	ext/fts5/fts5_index.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendRowid	fts5.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendRowid	sqlite3.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendRowid	tsrc/fts5.c	/^static void fts5WriteAppendRowid($/;"	f	file:
fts5WriteAppendTerm	ext/fts5/fts5_index.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteAppendTerm	fts5.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteAppendTerm	sqlite3.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteAppendTerm	tsrc/fts5.c	/^static void fts5WriteAppendTerm($/;"	f	file:
fts5WriteBtreeNoTerm	ext/fts5/fts5_index.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeNoTerm	fts5.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeNoTerm	sqlite3.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeNoTerm	tsrc/fts5.c	/^static void fts5WriteBtreeNoTerm($/;"	f	file:
fts5WriteBtreeTerm	ext/fts5/fts5_index.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteBtreeTerm	fts5.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteBtreeTerm	sqlite3.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteBtreeTerm	tsrc/fts5.c	/^static void fts5WriteBtreeTerm($/;"	f	file:
fts5WriteDlidxAppend	ext/fts5/fts5_index.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxAppend	fts5.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxAppend	sqlite3.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxAppend	tsrc/fts5.c	/^static void fts5WriteDlidxAppend($/;"	f	file:
fts5WriteDlidxClear	ext/fts5/fts5_index.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxClear	fts5.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxClear	sqlite3.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxClear	tsrc/fts5.c	/^static void fts5WriteDlidxClear($/;"	f	file:
fts5WriteDlidxGrow	ext/fts5/fts5_index.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteDlidxGrow	fts5.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteDlidxGrow	sqlite3.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteDlidxGrow	tsrc/fts5.c	/^static int fts5WriteDlidxGrow($/;"	f	file:
fts5WriteFinish	ext/fts5/fts5_index.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFinish	fts5.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFinish	sqlite3.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFinish	tsrc/fts5.c	/^static void fts5WriteFinish($/;"	f	file:
fts5WriteFlushBtree	ext/fts5/fts5_index.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushBtree	fts5.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushBtree	sqlite3.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushBtree	tsrc/fts5.c	/^static void fts5WriteFlushBtree(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	ext/fts5/fts5_index.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	fts5.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	sqlite3.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushDlidx	tsrc/fts5.c	/^static int fts5WriteFlushDlidx(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	ext/fts5/fts5_index.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	fts5.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	sqlite3.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteFlushLeaf	tsrc/fts5.c	/^static void fts5WriteFlushLeaf(Fts5Index *p, Fts5SegWriter *pWriter){$/;"	f	file:
fts5WriteInit	ext/fts5/fts5_index.c	/^static void fts5WriteInit($/;"	f	file:
fts5WriteInit	fts5.c	/^static void fts5WriteInit($/;"	f	file:
fts5WriteInit	sqlite3.c	/^static void fts5WriteInit($/;"	f	file:
fts5WriteInit	tsrc/fts5.c	/^static void fts5WriteInit($/;"	f	file:
fts5YYACTIONTYPE	fts5.c	1514;"	d	file:
fts5YYACTIONTYPE	sqlite3.c	178712;"	d	file:
fts5YYACTIONTYPE	tsrc/fts5.c	1514;"	d	file:
fts5YYCODETYPE	fts5.c	1512;"	d	file:
fts5YYCODETYPE	sqlite3.c	178710;"	d	file:
fts5YYCODETYPE	tsrc/fts5.c	1512;"	d	file:
fts5YYMALLOCARGTYPE	fts5.c	1451;"	d	file:
fts5YYMALLOCARGTYPE	fts5.c	1836;"	d	file:
fts5YYMALLOCARGTYPE	sqlite3.c	178650;"	d	file:
fts5YYMALLOCARGTYPE	sqlite3.c	179034;"	d	file:
fts5YYMALLOCARGTYPE	tsrc/fts5.c	1451;"	d	file:
fts5YYMALLOCARGTYPE	tsrc/fts5.c	1836;"	d	file:
fts5YYMINORTYPE	fts5.c	/^} fts5YYMINORTYPE;$/;"	t	typeref:union:__anon71	file:
fts5YYMINORTYPE	sqlite3.c	/^} fts5YYMINORTYPE;$/;"	t	typeref:union:__anon107	file:
fts5YYMINORTYPE	tsrc/fts5.c	/^} fts5YYMINORTYPE;$/;"	t	typeref:union:__anon31	file:
fts5YYNOCODE	fts5.c	1513;"	d	file:
fts5YYNOCODE	sqlite3.c	178711;"	d	file:
fts5YYNOCODE	tsrc/fts5.c	1513;"	d	file:
fts5YYNOERRORRECOVERY	fts5.c	1434;"	d	file:
fts5YYNOERRORRECOVERY	sqlite3.c	178633;"	d	file:
fts5YYNOERRORRECOVERY	tsrc/fts5.c	1434;"	d	file:
fts5YYNRULE	fts5.c	1533;"	d	file:
fts5YYNRULE	sqlite3.c	178731;"	d	file:
fts5YYNRULE	tsrc/fts5.c	1533;"	d	file:
fts5YYNSTATE	fts5.c	1532;"	d	file:
fts5YYNSTATE	sqlite3.c	178730;"	d	file:
fts5YYNSTATE	tsrc/fts5.c	1532;"	d	file:
fts5YYPARSEFREENOTNULL	fts5.c	1445;"	d	file:
fts5YYPARSEFREENOTNULL	sqlite3.c	178644;"	d	file:
fts5YYPARSEFREENOTNULL	tsrc/fts5.c	1445;"	d	file:
fts5YYSTACKDEPTH	fts5.c	1526;"	d	file:
fts5YYSTACKDEPTH	sqlite3.c	178724;"	d	file:
fts5YYSTACKDEPTH	tsrc/fts5.c	1526;"	d	file:
fts5YY_ACCEPT_ACTION	fts5.c	1540;"	d	file:
fts5YY_ACCEPT_ACTION	sqlite3.c	178738;"	d	file:
fts5YY_ACCEPT_ACTION	tsrc/fts5.c	1540;"	d	file:
fts5YY_ACTTAB_COUNT	fts5.c	1609;"	d	file:
fts5YY_ACTTAB_COUNT	sqlite3.c	178807;"	d	file:
fts5YY_ACTTAB_COUNT	tsrc/fts5.c	1609;"	d	file:
fts5YY_ERROR_ACTION	fts5.c	1539;"	d	file:
fts5YY_ERROR_ACTION	sqlite3.c	178737;"	d	file:
fts5YY_ERROR_ACTION	tsrc/fts5.c	1539;"	d	file:
fts5YY_MAX_REDUCE	fts5.c	1538;"	d	file:
fts5YY_MAX_REDUCE	sqlite3.c	178736;"	d	file:
fts5YY_MAX_REDUCE	tsrc/fts5.c	1538;"	d	file:
fts5YY_MAX_SHIFT	fts5.c	1534;"	d	file:
fts5YY_MAX_SHIFT	sqlite3.c	178732;"	d	file:
fts5YY_MAX_SHIFT	tsrc/fts5.c	1534;"	d	file:
fts5YY_MAX_SHIFTREDUCE	fts5.c	1536;"	d	file:
fts5YY_MAX_SHIFTREDUCE	sqlite3.c	178734;"	d	file:
fts5YY_MAX_SHIFTREDUCE	tsrc/fts5.c	1536;"	d	file:
fts5YY_MIN_REDUCE	fts5.c	1537;"	d	file:
fts5YY_MIN_REDUCE	sqlite3.c	178735;"	d	file:
fts5YY_MIN_REDUCE	tsrc/fts5.c	1537;"	d	file:
fts5YY_MIN_SHIFTREDUCE	fts5.c	1535;"	d	file:
fts5YY_MIN_SHIFTREDUCE	sqlite3.c	178733;"	d	file:
fts5YY_MIN_SHIFTREDUCE	tsrc/fts5.c	1535;"	d	file:
fts5YY_NO_ACTION	fts5.c	1541;"	d	file:
fts5YY_NO_ACTION	sqlite3.c	178739;"	d	file:
fts5YY_NO_ACTION	tsrc/fts5.c	1541;"	d	file:
fts5YY_REDUCE_COUNT	fts5.c	1640;"	d	file:
fts5YY_REDUCE_COUNT	sqlite3.c	178838;"	d	file:
fts5YY_REDUCE_COUNT	tsrc/fts5.c	1640;"	d	file:
fts5YY_REDUCE_MAX	fts5.c	1642;"	d	file:
fts5YY_REDUCE_MAX	sqlite3.c	178840;"	d	file:
fts5YY_REDUCE_MAX	tsrc/fts5.c	1642;"	d	file:
fts5YY_REDUCE_MIN	fts5.c	1641;"	d	file:
fts5YY_REDUCE_MIN	sqlite3.c	178839;"	d	file:
fts5YY_REDUCE_MIN	tsrc/fts5.c	1641;"	d	file:
fts5YY_REDUCE_USE_DFLT	fts5.c	1639;"	d	file:
fts5YY_REDUCE_USE_DFLT	sqlite3.c	178837;"	d	file:
fts5YY_REDUCE_USE_DFLT	tsrc/fts5.c	1639;"	d	file:
fts5YY_SHIFT_COUNT	fts5.c	1631;"	d	file:
fts5YY_SHIFT_COUNT	sqlite3.c	178829;"	d	file:
fts5YY_SHIFT_COUNT	tsrc/fts5.c	1631;"	d	file:
fts5YY_SHIFT_MAX	fts5.c	1633;"	d	file:
fts5YY_SHIFT_MAX	sqlite3.c	178831;"	d	file:
fts5YY_SHIFT_MAX	tsrc/fts5.c	1633;"	d	file:
fts5YY_SHIFT_MIN	fts5.c	1632;"	d	file:
fts5YY_SHIFT_MIN	sqlite3.c	178830;"	d	file:
fts5YY_SHIFT_MIN	tsrc/fts5.c	1632;"	d	file:
fts5YY_SHIFT_USE_DFLT	fts5.c	1630;"	d	file:
fts5YY_SHIFT_USE_DFLT	sqlite3.c	178828;"	d	file:
fts5YY_SHIFT_USE_DFLT	tsrc/fts5.c	1630;"	d	file:
fts5_api	ext/fts5/fts5.h	/^struct fts5_api {$/;"	s
fts5_api	ext/fts5/fts5.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api	fts5.c	/^struct fts5_api {$/;"	s	file:
fts5_api	fts5.c	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api	file:
fts5_api	fts5.h	/^struct fts5_api {$/;"	s
fts5_api	fts5.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api	sqlite3.c	/^struct fts5_api {$/;"	s	file:
fts5_api	sqlite3.c	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api	file:
fts5_api	sqlite3.h	/^struct fts5_api {$/;"	s
fts5_api	sqlite3.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api	tsrc/fts5.c	/^struct fts5_api {$/;"	s	file:
fts5_api	tsrc/fts5.c	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api	file:
fts5_api	tsrc/fts5.h	/^struct fts5_api {$/;"	s
fts5_api	tsrc/fts5.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api	tsrc/sqlite3.h	/^struct fts5_api {$/;"	s
fts5_api	tsrc/sqlite3.h	/^typedef struct fts5_api fts5_api;$/;"	t	typeref:struct:fts5_api
fts5_api_from_db	ext/fts5/fts5_test_mi.c	/^static int fts5_api_from_db(sqlite3 *db, fts5_api **ppApi){$/;"	f	file:
fts5_aux_test_functions	ext/fts5/test/fts5_common.tcl	/^proc fts5_aux_test_functions {db} {$/;"	p
fts5_collist_data	ext/fts5/test/fts5_common.tcl	/^proc fts5_collist_data {expr tbl {order ASC} {aDictVar ""}} {$/;"	p
fts5_collist_elem_compare	ext/fts5/test/fts5_common.tcl	/^proc fts5_collist_elem_compare {a b} {$/;"	p
fts5_dri	ext/fts5/fts5_index.c	232;"	d	file:
fts5_dri	fts5.c	8044;"	d	file:
fts5_dri	sqlite3.c	185176;"	d	file:
fts5_dri	tsrc/fts5.c	8044;"	d	file:
fts5_expr_ok	ext/fts5/test/fts5_common.tcl	/^proc fts5_expr_ok {expr tbl} {$/;"	p
fts5_extension_function	ext/fts5/fts5.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_extension_function	fts5.c	/^typedef void (*fts5_extension_function)($/;"	t	file:
fts5_extension_function	fts5.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_extension_function	sqlite3.c	/^typedef void (*fts5_extension_function)($/;"	t	file:
fts5_extension_function	sqlite3.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_extension_function	tsrc/fts5.c	/^typedef void (*fts5_extension_function)($/;"	t	file:
fts5_extension_function	tsrc/fts5.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_extension_function	tsrc/sqlite3.h	/^typedef void (*fts5_extension_function)($/;"	t
fts5_isdigit	ext/fts5/fts5_config.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isdigit	fts5.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isdigit	sqlite3.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isdigit	tsrc/fts5.c	/^static int fts5_isdigit(char a){$/;"	f	file:
fts5_isopenquote	ext/fts5/fts5_config.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_isopenquote	fts5.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_isopenquote	sqlite3.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_isopenquote	tsrc/fts5.c	/^static int fts5_isopenquote(char x){$/;"	f	file:
fts5_iswhitespace	ext/fts5/fts5_config.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_iswhitespace	fts5.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_iswhitespace	sqlite3.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_iswhitespace	tsrc/fts5.c	/^static int fts5_iswhitespace(char x){$/;"	f	file:
fts5_level_segids	ext/fts5/test/fts5_common.tcl	/^proc fts5_level_segids {tbl} {$/;"	p
fts5_level_segs	ext/fts5/test/fts5_common.tcl	/^proc fts5_level_segs {tbl} {$/;"	p
fts5_poslist2collist	ext/fts5/test/fts5_common.tcl	/^proc fts5_poslist2collist {poslist} {$/;"	p
fts5_poslist_data	ext/fts5/test/fts5_common.tcl	/^proc fts5_poslist_data {expr tbl {order ASC} {aDictVar ""}} {$/;"	p
fts5_query_data	ext/fts5/test/fts5_common.tcl	/^proc fts5_query_data {expr tbl {order ASC} {aDictVar ""}} {$/;"	p
fts5_remove_diacritic	ext/fts5/fts5_unicode2.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_remove_diacritic	fts5.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_remove_diacritic	sqlite3.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_remove_diacritic	tsrc/fts5.c	/^static int fts5_remove_diacritic(int c){$/;"	f	file:
fts5_rnddoc	ext/fts5/test/fts5_common.tcl	/^proc fts5_rnddoc {n} {$/;"	p
fts5_segcount	ext/fts5/test/fts5_common.tcl	/^proc fts5_segcount {tbl} {$/;"	p
fts5_source_id	ext/fts5/tool/mkfts5c.tcl	/^proc fts5_source_id {zDir} {$/;"	p
fts5_tclnum_register	ext/fts5/test/fts5_common.tcl	/^proc fts5_tclnum_register {db} {$/;"	p
fts5_test_all	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_all {cmd} {$/;"	p
fts5_test_collist	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_collist {cmd} {$/;"	p
fts5_test_columnsize	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_columnsize {cmd} {$/;"	p
fts5_test_columntext	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_columntext {cmd} {$/;"	p
fts5_test_columntotalsize	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_columntotalsize {cmd} {$/;"	p
fts5_test_phrasecount	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_phrasecount {cmd} {$/;"	p
fts5_test_poslist	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_poslist {cmd} {$/;"	p
fts5_test_poslist2	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_poslist2 {cmd} {$/;"	p
fts5_test_queryphrase	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_queryphrase {cmd} {$/;"	p
fts5_test_rowcount	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_rowcount {cmd} {$/;"	p
fts5_test_tokenize	ext/fts5/test/fts5_common.tcl	/^proc fts5_test_tokenize {cmd} {$/;"	p
fts5_tokenize_split	ext/fts5/test/fts5_common.tcl	/^proc fts5_tokenize_split {text} {$/;"	p
fts5_tokenizer	ext/fts5/fts5.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	ext/fts5/fts5.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5_tokenizer	fts5.c	/^struct fts5_tokenizer {$/;"	s	file:
fts5_tokenizer	fts5.c	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer	file:
fts5_tokenizer	fts5.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	fts5.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5_tokenizer	sqlite3.c	/^struct fts5_tokenizer {$/;"	s	file:
fts5_tokenizer	sqlite3.c	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer	file:
fts5_tokenizer	sqlite3.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	sqlite3.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5_tokenizer	tsrc/fts5.c	/^struct fts5_tokenizer {$/;"	s	file:
fts5_tokenizer	tsrc/fts5.c	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer	file:
fts5_tokenizer	tsrc/fts5.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	tsrc/fts5.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5_tokenizer	tsrc/sqlite3.h	/^struct fts5_tokenizer {$/;"	s
fts5_tokenizer	tsrc/sqlite3.h	/^typedef struct fts5_tokenizer fts5_tokenizer;$/;"	t	typeref:struct:fts5_tokenizer
fts5c_close	ext/fts5/tool/mkfts5c.tcl	/^proc fts5c_close {} {$/;"	p
fts5c_init	ext/fts5/tool/mkfts5c.tcl	/^proc fts5c_init {zOut} {$/;"	p
fts5c_printfile	ext/fts5/tool/mkfts5c.tcl	/^proc fts5c_printfile {zIn} {$/;"	p
fts5tokBestIndexMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokBestIndexMethod($/;"	f	file:
fts5tokCb	ext/fts5/fts5_test_tok.c	/^static int fts5tokCb($/;"	f	file:
fts5tokCloseMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokCloseMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5tokColumnMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokColumnMethod($/;"	f	file:
fts5tokConnectMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokConnectMethod($/;"	f	file:
fts5tokDequote	ext/fts5/fts5_test_tok.c	/^static void fts5tokDequote(char *z){$/;"	f	file:
fts5tokDequoteArray	ext/fts5/fts5_test_tok.c	/^static int fts5tokDequoteArray($/;"	f	file:
fts5tokDisconnectMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokDisconnectMethod(sqlite3_vtab *pVtab){$/;"	f	file:
fts5tokEofMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokEofMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5tokFilterMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokFilterMethod($/;"	f	file:
fts5tokNextMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokNextMethod(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fts5tokOpenMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokOpenMethod(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCsr){$/;"	f	file:
fts5tokResetCursor	ext/fts5/fts5_test_tok.c	/^static void fts5tokResetCursor(Fts5tokCursor *pCsr){$/;"	f	file:
fts5tokRowidMethod	ext/fts5/fts5_test_tok.c	/^static int fts5tokRowidMethod($/;"	f	file:
fts5yy0	fts5.c	/^  sqlite3Fts5ParserFTS5TOKENTYPE fts5yy0;$/;"	m	union:__anon71	file:
fts5yy0	sqlite3.c	/^  sqlite3Fts5ParserFTS5TOKENTYPE fts5yy0;$/;"	m	union:__anon107	file:
fts5yy0	tsrc/fts5.c	/^  sqlite3Fts5ParserFTS5TOKENTYPE fts5yy0;$/;"	m	union:__anon31	file:
fts5yy11	fts5.c	/^  Fts5ExprPhrase* fts5yy11;$/;"	m	union:__anon71	file:
fts5yy11	sqlite3.c	/^  Fts5ExprPhrase* fts5yy11;$/;"	m	union:__anon107	file:
fts5yy11	tsrc/fts5.c	/^  Fts5ExprPhrase* fts5yy11;$/;"	m	union:__anon31	file:
fts5yy18	fts5.c	/^  Fts5ExprNode* fts5yy18;$/;"	m	union:__anon71	file:
fts5yy18	sqlite3.c	/^  Fts5ExprNode* fts5yy18;$/;"	m	union:__anon107	file:
fts5yy18	tsrc/fts5.c	/^  Fts5ExprNode* fts5yy18;$/;"	m	union:__anon31	file:
fts5yy20	fts5.c	/^  int fts5yy20;$/;"	m	union:__anon71	file:
fts5yy20	sqlite3.c	/^  int fts5yy20;$/;"	m	union:__anon107	file:
fts5yy20	tsrc/fts5.c	/^  int fts5yy20;$/;"	m	union:__anon31	file:
fts5yy26	fts5.c	/^  Fts5ExprNearset* fts5yy26;$/;"	m	union:__anon71	file:
fts5yy26	sqlite3.c	/^  Fts5ExprNearset* fts5yy26;$/;"	m	union:__anon107	file:
fts5yy26	tsrc/fts5.c	/^  Fts5ExprNearset* fts5yy26;$/;"	m	union:__anon31	file:
fts5yy3	fts5.c	/^  Fts5Colset* fts5yy3;$/;"	m	union:__anon71	file:
fts5yy3	sqlite3.c	/^  Fts5Colset* fts5yy3;$/;"	m	union:__anon107	file:
fts5yy3	tsrc/fts5.c	/^  Fts5Colset* fts5yy3;$/;"	m	union:__anon31	file:
fts5yyFallback	fts5.c	/^static const fts5YYCODETYPE fts5yyFallback[] = {$/;"	v	file:
fts5yyFallback	sqlite3.c	/^static const fts5YYCODETYPE fts5yyFallback[] = {$/;"	v	file:
fts5yyFallback	tsrc/fts5.c	/^static const fts5YYCODETYPE fts5yyFallback[] = {$/;"	v	file:
fts5yyGrowStack	fts5.c	/^static int fts5yyGrowStack(fts5yyParser *p){$/;"	f	file:
fts5yyGrowStack	sqlite3.c	/^static int fts5yyGrowStack(fts5yyParser *p){$/;"	f	file:
fts5yyGrowStack	tsrc/fts5.c	/^static int fts5yyGrowStack(fts5yyParser *p){$/;"	f	file:
fts5yyParser	fts5.c	/^struct fts5yyParser {$/;"	s	file:
fts5yyParser	fts5.c	/^typedef struct fts5yyParser fts5yyParser;$/;"	t	typeref:struct:fts5yyParser	file:
fts5yyParser	sqlite3.c	/^struct fts5yyParser {$/;"	s	file:
fts5yyParser	sqlite3.c	/^typedef struct fts5yyParser fts5yyParser;$/;"	t	typeref:struct:fts5yyParser	file:
fts5yyParser	tsrc/fts5.c	/^struct fts5yyParser {$/;"	s	file:
fts5yyParser	tsrc/fts5.c	/^typedef struct fts5yyParser fts5yyParser;$/;"	t	typeref:struct:fts5yyParser	file:
fts5yyRuleInfo	fts5.c	/^} fts5yyRuleInfo[] = {$/;"	v	typeref:struct:__anon72	file:
fts5yyRuleInfo	sqlite3.c	/^} fts5yyRuleInfo[] = {$/;"	v	typeref:struct:__anon108	file:
fts5yyRuleInfo	tsrc/fts5.c	/^} fts5yyRuleInfo[] = {$/;"	v	typeref:struct:__anon32	file:
fts5yyRuleName	fts5.c	/^static const char *const fts5yyRuleName[] = {$/;"	v	file:
fts5yyRuleName	sqlite3.c	/^static const char *const fts5yyRuleName[] = {$/;"	v	file:
fts5yyRuleName	tsrc/fts5.c	/^static const char *const fts5yyRuleName[] = {$/;"	v	file:
fts5yyStackEntry	fts5.c	/^struct fts5yyStackEntry {$/;"	s	file:
fts5yyStackEntry	fts5.c	/^typedef struct fts5yyStackEntry fts5yyStackEntry;$/;"	t	typeref:struct:fts5yyStackEntry	file:
fts5yyStackEntry	sqlite3.c	/^struct fts5yyStackEntry {$/;"	s	file:
fts5yyStackEntry	sqlite3.c	/^typedef struct fts5yyStackEntry fts5yyStackEntry;$/;"	t	typeref:struct:fts5yyStackEntry	file:
fts5yyStackEntry	tsrc/fts5.c	/^struct fts5yyStackEntry {$/;"	s	file:
fts5yyStackEntry	tsrc/fts5.c	/^typedef struct fts5yyStackEntry fts5yyStackEntry;$/;"	t	typeref:struct:fts5yyStackEntry	file:
fts5yyStackOverflow	fts5.c	/^static void fts5yyStackOverflow(fts5yyParser *fts5yypParser){$/;"	f	file:
fts5yyStackOverflow	sqlite3.c	/^static void fts5yyStackOverflow(fts5yyParser *fts5yypParser){$/;"	f	file:
fts5yyStackOverflow	tsrc/fts5.c	/^static void fts5yyStackOverflow(fts5yyParser *fts5yypParser){$/;"	f	file:
fts5yyTokenName	fts5.c	/^static const char *const fts5yyTokenName[] = { $/;"	v	file:
fts5yyTokenName	sqlite3.c	/^static const char *const fts5yyTokenName[] = { $/;"	v	file:
fts5yyTokenName	tsrc/fts5.c	/^static const char *const fts5yyTokenName[] = { $/;"	v	file:
fts5yyTraceFILE	fts5.c	/^static FILE *fts5yyTraceFILE = 0;$/;"	v	file:
fts5yyTraceFILE	sqlite3.c	/^static FILE *fts5yyTraceFILE = 0;$/;"	v	file:
fts5yyTraceFILE	tsrc/fts5.c	/^static FILE *fts5yyTraceFILE = 0;$/;"	v	file:
fts5yyTracePrompt	fts5.c	/^static char *fts5yyTracePrompt = 0;$/;"	v	file:
fts5yyTracePrompt	sqlite3.c	/^static char *fts5yyTracePrompt = 0;$/;"	v	file:
fts5yyTracePrompt	tsrc/fts5.c	/^static char *fts5yyTracePrompt = 0;$/;"	v	file:
fts5yyTraceShift	fts5.c	/^static void fts5yyTraceShift(fts5yyParser *fts5yypParser, int fts5yyNewState){$/;"	f	file:
fts5yyTraceShift	fts5.c	2137;"	d	file:
fts5yyTraceShift	sqlite3.c	/^static void fts5yyTraceShift(fts5yyParser *fts5yypParser, int fts5yyNewState){$/;"	f	file:
fts5yyTraceShift	sqlite3.c	179323;"	d	file:
fts5yyTraceShift	tsrc/fts5.c	/^static void fts5yyTraceShift(fts5yyParser *fts5yypParser, int fts5yyNewState){$/;"	f	file:
fts5yyTraceShift	tsrc/fts5.c	2137;"	d	file:
fts5yy_accept	fts5.c	/^static void fts5yy_accept($/;"	f	file:
fts5yy_accept	sqlite3.c	/^static void fts5yy_accept($/;"	f	file:
fts5yy_accept	tsrc/fts5.c	/^static void fts5yy_accept($/;"	f	file:
fts5yy_action	fts5.c	/^static const fts5YYACTIONTYPE fts5yy_action[] = {$/;"	v	file:
fts5yy_action	sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_action[] = {$/;"	v	file:
fts5yy_action	tsrc/fts5.c	/^static const fts5YYACTIONTYPE fts5yy_action[] = {$/;"	v	file:
fts5yy_default	fts5.c	/^static const fts5YYACTIONTYPE fts5yy_default[] = {$/;"	v	file:
fts5yy_default	sqlite3.c	/^static const fts5YYACTIONTYPE fts5yy_default[] = {$/;"	v	file:
fts5yy_default	tsrc/fts5.c	/^static const fts5YYACTIONTYPE fts5yy_default[] = {$/;"	v	file:
fts5yy_destructor	fts5.c	/^static void fts5yy_destructor($/;"	f	file:
fts5yy_destructor	sqlite3.c	/^static void fts5yy_destructor($/;"	f	file:
fts5yy_destructor	tsrc/fts5.c	/^static void fts5yy_destructor($/;"	f	file:
fts5yy_find_reduce_action	fts5.c	/^static int fts5yy_find_reduce_action($/;"	f	file:
fts5yy_find_reduce_action	sqlite3.c	/^static int fts5yy_find_reduce_action($/;"	f	file:
fts5yy_find_reduce_action	tsrc/fts5.c	/^static int fts5yy_find_reduce_action($/;"	f	file:
fts5yy_find_shift_action	fts5.c	/^static unsigned int fts5yy_find_shift_action($/;"	f	file:
fts5yy_find_shift_action	sqlite3.c	/^static unsigned int fts5yy_find_shift_action($/;"	f	file:
fts5yy_find_shift_action	tsrc/fts5.c	/^static unsigned int fts5yy_find_shift_action($/;"	f	file:
fts5yy_lookahead	fts5.c	/^static const fts5YYCODETYPE fts5yy_lookahead[] = {$/;"	v	file:
fts5yy_lookahead	sqlite3.c	/^static const fts5YYCODETYPE fts5yy_lookahead[] = {$/;"	v	file:
fts5yy_lookahead	tsrc/fts5.c	/^static const fts5YYCODETYPE fts5yy_lookahead[] = {$/;"	v	file:
fts5yy_parse_failed	fts5.c	/^static void fts5yy_parse_failed($/;"	f	file:
fts5yy_parse_failed	sqlite3.c	/^static void fts5yy_parse_failed($/;"	f	file:
fts5yy_parse_failed	tsrc/fts5.c	/^static void fts5yy_parse_failed($/;"	f	file:
fts5yy_pop_parser_stack	fts5.c	/^static void fts5yy_pop_parser_stack(fts5yyParser *pParser){$/;"	f	file:
fts5yy_pop_parser_stack	sqlite3.c	/^static void fts5yy_pop_parser_stack(fts5yyParser *pParser){$/;"	f	file:
fts5yy_pop_parser_stack	tsrc/fts5.c	/^static void fts5yy_pop_parser_stack(fts5yyParser *pParser){$/;"	f	file:
fts5yy_reduce	fts5.c	/^static void fts5yy_reduce($/;"	f	file:
fts5yy_reduce	sqlite3.c	/^static void fts5yy_reduce($/;"	f	file:
fts5yy_reduce	tsrc/fts5.c	/^static void fts5yy_reduce($/;"	f	file:
fts5yy_reduce_ofst	fts5.c	/^static const signed char fts5yy_reduce_ofst[] = {$/;"	v	file:
fts5yy_reduce_ofst	sqlite3.c	/^static const signed char fts5yy_reduce_ofst[] = {$/;"	v	file:
fts5yy_reduce_ofst	tsrc/fts5.c	/^static const signed char fts5yy_reduce_ofst[] = {$/;"	v	file:
fts5yy_shift	fts5.c	/^static void fts5yy_shift($/;"	f	file:
fts5yy_shift	sqlite3.c	/^static void fts5yy_shift($/;"	f	file:
fts5yy_shift	tsrc/fts5.c	/^static void fts5yy_shift($/;"	f	file:
fts5yy_shift_ofst	fts5.c	/^static const signed char fts5yy_shift_ofst[] = {$/;"	v	file:
fts5yy_shift_ofst	sqlite3.c	/^static const signed char fts5yy_shift_ofst[] = {$/;"	v	file:
fts5yy_shift_ofst	tsrc/fts5.c	/^static const signed char fts5yy_shift_ofst[] = {$/;"	v	file:
fts5yy_syntax_error	fts5.c	/^static void fts5yy_syntax_error($/;"	f	file:
fts5yy_syntax_error	sqlite3.c	/^static void fts5yy_syntax_error($/;"	f	file:
fts5yy_syntax_error	tsrc/fts5.c	/^static void fts5yy_syntax_error($/;"	f	file:
fts5yyerrcnt	fts5.c	/^  int fts5yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:fts5yyParser	file:
fts5yyerrcnt	sqlite3.c	/^  int fts5yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:fts5yyParser	file:
fts5yyerrcnt	tsrc/fts5.c	/^  int fts5yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:fts5yyParser	file:
fts5yyhwm	fts5.c	/^  int fts5yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yyhwm	sqlite3.c	/^  int fts5yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yyhwm	tsrc/fts5.c	/^  int fts5yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yyinit	fts5.c	/^  int fts5yyinit;$/;"	m	union:__anon71	file:
fts5yyinit	sqlite3.c	/^  int fts5yyinit;$/;"	m	union:__anon107	file:
fts5yyinit	tsrc/fts5.c	/^  int fts5yyinit;$/;"	m	union:__anon31	file:
fts5yystack	fts5.c	/^  fts5yyStackEntry *fts5yystack;        \/* The parser's stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystack	sqlite3.c	/^  fts5yyStackEntry *fts5yystack;        \/* The parser's stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystack	tsrc/fts5.c	/^  fts5yyStackEntry *fts5yystack;        \/* The parser's stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystk0	fts5.c	/^  fts5yyStackEntry fts5yystk0;          \/* First stack entry *\/$/;"	m	struct:fts5yyParser	file:
fts5yystk0	sqlite3.c	/^  fts5yyStackEntry fts5yystk0;          \/* First stack entry *\/$/;"	m	struct:fts5yyParser	file:
fts5yystk0	tsrc/fts5.c	/^  fts5yyStackEntry fts5yystk0;          \/* First stack entry *\/$/;"	m	struct:fts5yyParser	file:
fts5yystksz	fts5.c	/^  int fts5yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystksz	sqlite3.c	/^  int fts5yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yystksz	tsrc/fts5.c	/^  int fts5yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yytestcase	fts5.c	1439;"	d	file:
fts5yytestcase	fts5.c	1553;"	d	file:
fts5yytestcase	sqlite3.c	178638;"	d	file:
fts5yytestcase	sqlite3.c	178751;"	d	file:
fts5yytestcase	tsrc/fts5.c	1439;"	d	file:
fts5yytestcase	tsrc/fts5.c	1553;"	d	file:
fts5yytos	fts5.c	/^  fts5yyStackEntry *fts5yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yytos	sqlite3.c	/^  fts5yyStackEntry *fts5yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:fts5yyParser	file:
fts5yytos	tsrc/fts5.c	/^  fts5yyStackEntry *fts5yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:fts5yyParser	file:
ftsCompareFunction	ext/fts3/fts3_hash.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsCompareFunction	sqlite3.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsCompareFunction	tsrc/fts3_hash.c	/^static int (*ftsCompareFunction(int keyClass))(const void*,int,const void*,int){$/;"	f	file:
ftsHashFunction	ext/fts3/fts3_hash.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
ftsHashFunction	sqlite3.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
ftsHashFunction	tsrc/fts3_hash.c	/^static int (*ftsHashFunction(int keyClass))(const void*,int){$/;"	f	file:
fts_kjv_genesis	test/genesis.tcl	/^proc fts_kjv_genesis {} {$/;"	p
fullSync	sqlite3.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
fullSync	src/pager.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
fullSync	tsrc/pager.c	/^  u8 fullSync;                \/* Do extra syncs of the journal for robustness *\/$/;"	m	struct:Pager	file:
full_err	src/test_vfs.c	/^  TestFaultInject full_err;$/;"	m	struct:Testvfs	file:
full_fsync	sqlite3.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
full_fsync	src/os_unix.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
full_fsync	tsrc/os_unix.c	/^static int full_fsync(int fd, int fullSync, int dataOnly){$/;"	f	file:
fullerr_injectinstall	test/malloc_common.tcl	/^proc fullerr_injectinstall {} {$/;"	p
fullerr_injectstart	test/malloc_common.tcl	/^proc fullerr_injectstart {iFail} {$/;"	p
fullerr_injectstop	test/malloc_common.tcl	/^proc fullerr_injectstop {} {$/;"	p
fullerr_injectuninstall	test/malloc_common.tcl	/^proc fullerr_injectuninstall {} {$/;"	p
fulltextBegin	ext/fts2/fts2.c	/^static int fulltextBegin(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextBegin	tsrc/fts2.c	/^static int fulltextBegin(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextBestIndex	ext/fts1/fts1.c	/^static int fulltextBestIndex(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fulltextBestIndex	ext/fts1/fulltext.c	/^static int fulltextBestIndex(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fulltextBestIndex	ext/fts2/fts2.c	/^static int fulltextBestIndex(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fulltextBestIndex	tsrc/fts1.c	/^static int fulltextBestIndex(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fulltextBestIndex	tsrc/fts2.c	/^static int fulltextBestIndex(sqlite3_vtab *pVTab, sqlite3_index_info *pInfo){$/;"	f	file:
fulltextClose	ext/fts1/fts1.c	/^static int fulltextClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextClose	ext/fts1/fulltext.c	/^static int fulltextClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextClose	ext/fts2/fts2.c	/^static int fulltextClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextClose	tsrc/fts1.c	/^static int fulltextClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextClose	tsrc/fts2.c	/^static int fulltextClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextColumn	ext/fts1/fts1.c	/^static int fulltextColumn(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextColumn	ext/fts1/fulltext.c	/^static int fulltextColumn(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextColumn	ext/fts2/fts2.c	/^static int fulltextColumn(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextColumn	tsrc/fts1.c	/^static int fulltextColumn(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextColumn	tsrc/fts2.c	/^static int fulltextColumn(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextCommit	ext/fts2/fts2.c	/^static int fulltextCommit(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextCommit	tsrc/fts2.c	/^static int fulltextCommit(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextConnect	ext/fts1/fts1.c	/^static int fulltextConnect($/;"	f	file:
fulltextConnect	ext/fts1/fulltext.c	/^static int fulltextConnect($/;"	f	file:
fulltextConnect	ext/fts2/fts2.c	/^static int fulltextConnect($/;"	f	file:
fulltextConnect	tsrc/fts1.c	/^static int fulltextConnect($/;"	f	file:
fulltextConnect	tsrc/fts2.c	/^static int fulltextConnect($/;"	f	file:
fulltextCreate	ext/fts1/fts1.c	/^static int fulltextCreate(sqlite3 *db, void *pAux,$/;"	f	file:
fulltextCreate	ext/fts1/fulltext.c	/^static int fulltextCreate($/;"	f	file:
fulltextCreate	ext/fts2/fts2.c	/^static int fulltextCreate(sqlite3 *db, void *pAux,$/;"	f	file:
fulltextCreate	tsrc/fts1.c	/^static int fulltextCreate(sqlite3 *db, void *pAux,$/;"	f	file:
fulltextCreate	tsrc/fts2.c	/^static int fulltextCreate(sqlite3 *db, void *pAux,$/;"	f	file:
fulltextDestroy	ext/fts1/fts1.c	/^static int fulltextDestroy(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDestroy	ext/fts1/fulltext.c	/^static int fulltextDestroy(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDestroy	ext/fts2/fts2.c	/^static int fulltextDestroy(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDestroy	tsrc/fts1.c	/^static int fulltextDestroy(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDestroy	tsrc/fts2.c	/^static int fulltextDestroy(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDisconnect	ext/fts1/fts1.c	/^static int fulltextDisconnect(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDisconnect	ext/fts1/fulltext.c	/^static int fulltextDisconnect(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDisconnect	ext/fts2/fts2.c	/^static int fulltextDisconnect(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDisconnect	tsrc/fts1.c	/^static int fulltextDisconnect(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextDisconnect	tsrc/fts2.c	/^static int fulltextDisconnect(sqlite3_vtab *pVTab){$/;"	f	file:
fulltextEof	ext/fts1/fts1.c	/^static int fulltextEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextEof	ext/fts1/fulltext.c	/^static int fulltextEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextEof	ext/fts2/fts2.c	/^static int fulltextEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextEof	tsrc/fts1.c	/^static int fulltextEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextEof	tsrc/fts2.c	/^static int fulltextEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextFilter	ext/fts1/fts1.c	/^static int fulltextFilter($/;"	f	file:
fulltextFilter	ext/fts1/fulltext.c	/^static int fulltextFilter(sqlite3_vtab_cursor *pCursor,$/;"	f	file:
fulltextFilter	ext/fts2/fts2.c	/^static int fulltextFilter($/;"	f	file:
fulltextFilter	tsrc/fts1.c	/^static int fulltextFilter($/;"	f	file:
fulltextFilter	tsrc/fts2.c	/^static int fulltextFilter($/;"	f	file:
fulltextFindFunction	ext/fts1/fts1.c	/^static int fulltextFindFunction($/;"	f	file:
fulltextFindFunction	ext/fts2/fts2.c	/^static int fulltextFindFunction($/;"	f	file:
fulltextFindFunction	tsrc/fts1.c	/^static int fulltextFindFunction($/;"	f	file:
fulltextFindFunction	tsrc/fts2.c	/^static int fulltextFindFunction($/;"	f	file:
fulltextModule	ext/fts1/fts1.c	/^static const sqlite3_module fulltextModule = {$/;"	v	file:
fulltextModule	ext/fts1/fts1.c	/^static const sqlite3_module fulltextModule;   \/* forward declaration *\/$/;"	v	file:
fulltextModule	ext/fts1/fulltext.c	/^static sqlite3_module fulltextModule = {$/;"	v	file:
fulltextModule	ext/fts1/fulltext.c	/^static sqlite3_module fulltextModule;   \/* forward declaration *\/$/;"	v	file:
fulltextModule	tsrc/fts1.c	/^static const sqlite3_module fulltextModule = {$/;"	v	file:
fulltextModule	tsrc/fts1.c	/^static const sqlite3_module fulltextModule;   \/* forward declaration *\/$/;"	v	file:
fulltextNext	ext/fts1/fts1.c	/^static int fulltextNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextNext	ext/fts1/fulltext.c	/^static int fulltextNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextNext	ext/fts2/fts2.c	/^static int fulltextNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextNext	tsrc/fts1.c	/^static int fulltextNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextNext	tsrc/fts2.c	/^static int fulltextNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
fulltextOpen	ext/fts1/fts1.c	/^static int fulltextOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fulltextOpen	ext/fts1/fulltext.c	/^static int fulltextOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fulltextOpen	ext/fts2/fts2.c	/^static int fulltextOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fulltextOpen	tsrc/fts1.c	/^static int fulltextOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fulltextOpen	tsrc/fts2.c	/^static int fulltextOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fulltextQuery	ext/fts1/fts1.c	/^static int fulltextQuery($/;"	f	file:
fulltextQuery	ext/fts2/fts2.c	/^static int fulltextQuery($/;"	f	file:
fulltextQuery	tsrc/fts1.c	/^static int fulltextQuery($/;"	f	file:
fulltextQuery	tsrc/fts2.c	/^static int fulltextQuery($/;"	f	file:
fulltextRename	ext/fts1/fts1.c	/^static int fulltextRename($/;"	f	file:
fulltextRename	ext/fts2/fts2.c	/^static int fulltextRename($/;"	f	file:
fulltextRename	tsrc/fts1.c	/^static int fulltextRename($/;"	f	file:
fulltextRename	tsrc/fts2.c	/^static int fulltextRename($/;"	f	file:
fulltextRollback	ext/fts2/fts2.c	/^static int fulltextRollback(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextRollback	tsrc/fts2.c	/^static int fulltextRollback(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextRowid	ext/fts1/fts1.c	/^static int fulltextRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fulltextRowid	ext/fts1/fulltext.c	/^static int fulltextRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fulltextRowid	ext/fts2/fts2.c	/^static int fulltextRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fulltextRowid	tsrc/fts1.c	/^static int fulltextRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fulltextRowid	tsrc/fts2.c	/^static int fulltextRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
fulltextSchema	ext/fts1/fts1.c	/^static char *fulltextSchema($/;"	f	file:
fulltextSchema	ext/fts2/fts2.c	/^static char *fulltextSchema($/;"	f	file:
fulltextSchema	tsrc/fts1.c	/^static char *fulltextSchema($/;"	f	file:
fulltextSchema	tsrc/fts2.c	/^static char *fulltextSchema($/;"	f	file:
fulltextSync	ext/fts2/fts2.c	/^static int fulltextSync(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextSync	tsrc/fts2.c	/^static int fulltextSync(sqlite3_vtab *pVtab){$/;"	f	file:
fulltextUpdate	ext/fts1/fts1.c	/^static int fulltextUpdate(sqlite3_vtab *pVtab, int nArg, sqlite3_value **ppArg,$/;"	f	file:
fulltextUpdate	ext/fts1/fulltext.c	/^static int fulltextUpdate(sqlite3_vtab *pVtab, int nArg, sqlite3_value **ppArg,$/;"	f	file:
fulltextUpdate	ext/fts2/fts2.c	/^static int fulltextUpdate(sqlite3_vtab *pVtab, int nArg, sqlite3_value **ppArg,$/;"	f	file:
fulltextUpdate	tsrc/fts1.c	/^static int fulltextUpdate(sqlite3_vtab *pVtab, int nArg, sqlite3_value **ppArg,$/;"	f	file:
fulltextUpdate	tsrc/fts2.c	/^static int fulltextUpdate(sqlite3_vtab *pVtab, int nArg, sqlite3_value **ppArg,$/;"	f	file:
fulltext_cursor	ext/fts1/fts1.c	/^typedef struct fulltext_cursor {$/;"	s	file:
fulltext_cursor	ext/fts1/fts1.c	/^} fulltext_cursor;$/;"	t	typeref:struct:fulltext_cursor	file:
fulltext_cursor	ext/fts1/fulltext.c	/^typedef struct fulltext_cursor {$/;"	s	file:
fulltext_cursor	ext/fts1/fulltext.c	/^} fulltext_cursor;$/;"	t	typeref:struct:fulltext_cursor	file:
fulltext_cursor	ext/fts2/fts2.c	/^typedef struct fulltext_cursor {$/;"	s	file:
fulltext_cursor	ext/fts2/fts2.c	/^} fulltext_cursor;$/;"	t	typeref:struct:fulltext_cursor	file:
fulltext_cursor	tsrc/fts1.c	/^typedef struct fulltext_cursor {$/;"	s	file:
fulltext_cursor	tsrc/fts1.c	/^} fulltext_cursor;$/;"	t	typeref:struct:fulltext_cursor	file:
fulltext_cursor	tsrc/fts2.c	/^typedef struct fulltext_cursor {$/;"	s	file:
fulltext_cursor	tsrc/fts2.c	/^} fulltext_cursor;$/;"	t	typeref:struct:fulltext_cursor	file:
fulltext_init	ext/fts1/fulltext.c	/^int fulltext_init(sqlite3 *db){$/;"	f
fulltext_query	ext/fts1/fulltext.c	/^static int fulltext_query(fulltext_vtab *v, const char *zQuery,$/;"	f	file:
fulltext_statement	ext/fts1/fts1.c	/^typedef enum fulltext_statement {$/;"	g	file:
fulltext_statement	ext/fts1/fts1.c	/^} fulltext_statement;$/;"	t	typeref:enum:fulltext_statement	file:
fulltext_statement	ext/fts1/fulltext.c	/^typedef enum fulltext_statement {$/;"	g	file:
fulltext_statement	ext/fts1/fulltext.c	/^} fulltext_statement;$/;"	t	typeref:enum:fulltext_statement	file:
fulltext_statement	ext/fts2/fts2.c	/^typedef enum fulltext_statement {$/;"	g	file:
fulltext_statement	ext/fts2/fts2.c	/^} fulltext_statement;$/;"	t	typeref:enum:fulltext_statement	file:
fulltext_statement	tsrc/fts1.c	/^typedef enum fulltext_statement {$/;"	g	file:
fulltext_statement	tsrc/fts1.c	/^} fulltext_statement;$/;"	t	typeref:enum:fulltext_statement	file:
fulltext_statement	tsrc/fts2.c	/^typedef enum fulltext_statement {$/;"	g	file:
fulltext_statement	tsrc/fts2.c	/^} fulltext_statement;$/;"	t	typeref:enum:fulltext_statement	file:
fulltext_vtab	ext/fts1/fts1.c	/^struct fulltext_vtab {$/;"	s	file:
fulltext_vtab	ext/fts1/fts1.c	/^typedef struct fulltext_vtab fulltext_vtab;$/;"	t	typeref:struct:fulltext_vtab	file:
fulltext_vtab	ext/fts1/fulltext.c	/^typedef struct fulltext_vtab {$/;"	s	file:
fulltext_vtab	ext/fts1/fulltext.c	/^} fulltext_vtab;$/;"	t	typeref:struct:fulltext_vtab	file:
fulltext_vtab	ext/fts2/fts2.c	/^struct fulltext_vtab {$/;"	s	file:
fulltext_vtab	ext/fts2/fts2.c	/^typedef struct fulltext_vtab fulltext_vtab;$/;"	t	typeref:struct:fulltext_vtab	file:
fulltext_vtab	tsrc/fts1.c	/^struct fulltext_vtab {$/;"	s	file:
fulltext_vtab	tsrc/fts1.c	/^typedef struct fulltext_vtab fulltext_vtab;$/;"	t	typeref:struct:fulltext_vtab	file:
fulltext_vtab	tsrc/fts2.c	/^struct fulltext_vtab {$/;"	s	file:
fulltext_vtab	tsrc/fts2.c	/^typedef struct fulltext_vtab fulltext_vtab;$/;"	t	typeref:struct:fulltext_vtab	file:
fulltext_vtab_destroy	ext/fts1/fts1.c	/^static void fulltext_vtab_destroy(fulltext_vtab *v){$/;"	f	file:
fulltext_vtab_destroy	ext/fts1/fulltext.c	/^static void fulltext_vtab_destroy(fulltext_vtab *v){$/;"	f	file:
fulltext_vtab_destroy	ext/fts2/fts2.c	/^static void fulltext_vtab_destroy(fulltext_vtab *v){$/;"	f	file:
fulltext_vtab_destroy	tsrc/fts1.c	/^static void fulltext_vtab_destroy(fulltext_vtab *v){$/;"	f	file:
fulltext_vtab_destroy	tsrc/fts2.c	/^static void fulltext_vtab_destroy(fulltext_vtab *v){$/;"	f	file:
fulltext_zStatement	ext/fts1/fts1.c	/^static const char *const fulltext_zStatement[MAX_STMT] = {$/;"	v	file:
fulltext_zStatement	ext/fts1/fulltext.c	/^static const char *fulltext_zStatement[MAX_STMT] = {$/;"	v	file:
fulltext_zStatement	ext/fts2/fts2.c	/^static const char *const fulltext_zStatement[MAX_STMT] = {$/;"	v	file:
fulltext_zStatement	tsrc/fts1.c	/^static const char *const fulltext_zStatement[MAX_STMT] = {$/;"	v	file:
fulltext_zStatement	tsrc/fts2.c	/^static const char *const fulltext_zStatement[MAX_STMT] = {$/;"	v	file:
funcFlags	sqlite3.c	/^  u16 funcFlags;       \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef	file:
funcFlags	src/sqliteInt.h	/^  u16 funcFlags;       \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef
funcFlags	tsrc/sqliteInt.h	/^  u16 funcFlags;       \/* Some combination of SQLITE_FUNC_* *\/$/;"	m	struct:FuncDef
func_append	config.status	/^func_append ()$/;"	f
func_append	configure	/^func_append ()$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_arith	config.status	/^func_arith ()$/;"	f
func_arith	configure	/^func_arith ()$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()$/;"	f
func_basename	configure	/^func_basename ()$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_dirname	config.status	/^func_dirname ()$/;"	f
func_dirname	configure	/^func_dirname ()$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper_part1	libtool	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part1	ltmain.sh	/^func_emit_wrapper_part1 ()$/;"	f
func_emit_wrapper_part2	libtool	/^func_emit_wrapper_part2 ()$/;"	f
func_emit_wrapper_part2	ltmain.sh	/^func_emit_wrapper_part2 ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()$/;"	f
func_len	configure	/^func_len ()$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()$/;"	f
func_lo2o	configure	/^func_lo2o ()$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_opt_split	config.status	/^func_opt_split ()$/;"	f
func_opt_split	configure	/^func_opt_split ()$/;"	f
func_opt_split	libtool	/^func_opt_split ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_stripname	config.status	/^func_stripname ()$/;"	f
func_stripname	configure	/^func_stripname ()$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_pathlist	libtool	/^func_to_host_pathlist ()$/;"	f
func_to_host_pathlist	ltmain.sh	/^func_to_host_pathlist ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()$/;"	f
func_xform	configure	/^func_xform ()$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
functionDestroy	sqlite3.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionDestroy	src/main.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionDestroy	tsrc/main.c	/^static void functionDestroy(sqlite3 *db, FuncDef *p){$/;"	f	file:
functionSearch	sqlite3.c	/^static FuncDef *functionSearch($/;"	f	file:
functionSearch	src/callback.c	/^static FuncDef *functionSearch($/;"	f	file:
functionSearch	tsrc/callback.c	/^static FuncDef *functionSearch($/;"	f	file:
fuzz	test/fuzz_common.tcl	/^proc fuzz {TemplateList} {$/;"	p
fuzzerAdvance	ext/misc/fuzzer.c	/^static int fuzzerAdvance(fuzzer_cursor *pCur, fuzzer_stem *pStem){$/;"	f	file:
fuzzerBestIndex	ext/misc/fuzzer.c	/^static int fuzzerBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
fuzzerClearCursor	ext/misc/fuzzer.c	/^static void fuzzerClearCursor(fuzzer_cursor *pCur, int clearHash){$/;"	f	file:
fuzzerClearStemList	ext/misc/fuzzer.c	/^static void fuzzerClearStemList(fuzzer_stem *pStem){$/;"	f	file:
fuzzerClose	ext/misc/fuzzer.c	/^static int fuzzerClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
fuzzerColumn	ext/misc/fuzzer.c	/^static int fuzzerColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
fuzzerConnect	ext/misc/fuzzer.c	/^static int fuzzerConnect($/;"	f	file:
fuzzerCost	ext/misc/fuzzer.c	/^static fuzzer_cost fuzzerCost(fuzzer_stem *pStem){$/;"	f	file:
fuzzerDequote	ext/misc/fuzzer.c	/^static char *fuzzerDequote(const char *zIn){$/;"	f	file:
fuzzerDisconnect	ext/misc/fuzzer.c	/^static int fuzzerDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
fuzzerEof	ext/misc/fuzzer.c	/^static int fuzzerEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
fuzzerFilter	ext/misc/fuzzer.c	/^static int fuzzerFilter($/;"	f	file:
fuzzerHash	ext/misc/fuzzer.c	/^static unsigned int fuzzerHash(const char *z){$/;"	f	file:
fuzzerInsert	ext/misc/fuzzer.c	/^static fuzzer_stem *fuzzerInsert(fuzzer_cursor *pCur, fuzzer_stem *pNew){$/;"	f	file:
fuzzerLoadOneRule	ext/misc/fuzzer.c	/^static int fuzzerLoadOneRule($/;"	f	file:
fuzzerLoadRules	ext/misc/fuzzer.c	/^static int fuzzerLoadRules($/;"	f	file:
fuzzerLowestCostStem	ext/misc/fuzzer.c	/^static fuzzer_stem *fuzzerLowestCostStem(fuzzer_cursor *pCur){$/;"	f	file:
fuzzerMergeRules	ext/misc/fuzzer.c	/^static fuzzer_rule *fuzzerMergeRules(fuzzer_rule *pA, fuzzer_rule *pB){$/;"	f	file:
fuzzerMergeStems	ext/misc/fuzzer.c	/^static fuzzer_stem *fuzzerMergeStems(fuzzer_stem *pA, fuzzer_stem *pB){$/;"	f	file:
fuzzerModule	ext/misc/fuzzer.c	/^static sqlite3_module fuzzerModule = {$/;"	v	file:
fuzzerNewStem	ext/misc/fuzzer.c	/^static fuzzer_stem *fuzzerNewStem($/;"	f	file:
fuzzerNext	ext/misc/fuzzer.c	/^static int fuzzerNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
fuzzerOpen	ext/misc/fuzzer.c	/^static int fuzzerOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
fuzzerRender	ext/misc/fuzzer.c	/^static int fuzzerRender($/;"	f	file:
fuzzerRowid	ext/misc/fuzzer.c	/^static int fuzzerRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
fuzzerSeen	ext/misc/fuzzer.c	/^static int fuzzerSeen(fuzzer_cursor *pCur, fuzzer_stem *pStem){$/;"	f	file:
fuzzerSkipRule	ext/misc/fuzzer.c	/^static int fuzzerSkipRule($/;"	f	file:
fuzzer_cost	ext/misc/fuzzer.c	/^typedef int fuzzer_cost;$/;"	t	file:
fuzzer_cursor	ext/misc/fuzzer.c	/^struct fuzzer_cursor {$/;"	s	file:
fuzzer_cursor	ext/misc/fuzzer.c	/^typedef struct fuzzer_cursor fuzzer_cursor;$/;"	t	typeref:struct:fuzzer_cursor	file:
fuzzer_len	ext/misc/fuzzer.c	/^typedef signed char fuzzer_len;$/;"	t	file:
fuzzer_rule	ext/misc/fuzzer.c	/^struct fuzzer_rule {$/;"	s	file:
fuzzer_rule	ext/misc/fuzzer.c	/^typedef struct fuzzer_rule fuzzer_rule;$/;"	t	typeref:struct:fuzzer_rule	file:
fuzzer_ruleid	ext/misc/fuzzer.c	/^typedef int fuzzer_ruleid;$/;"	t	file:
fuzzer_seen	ext/misc/fuzzer.c	/^typedef struct fuzzer_seen fuzzer_seen;$/;"	t	typeref:struct:fuzzer_seen	file:
fuzzer_stem	ext/misc/fuzzer.c	/^struct fuzzer_stem {$/;"	s	file:
fuzzer_stem	ext/misc/fuzzer.c	/^typedef struct fuzzer_stem fuzzer_stem;$/;"	t	typeref:struct:fuzzer_stem	file:
fuzzer_vtab	ext/misc/fuzzer.c	/^struct fuzzer_vtab {$/;"	s	file:
fuzzer_vtab	ext/misc/fuzzer.c	/^typedef struct fuzzer_vtab fuzzer_vtab;$/;"	t	typeref:struct:fuzzer_vtab	file:
fws	tool/lemon.c	/^  char *fws;               \/* Follow-set for this configuration only *\/$/;"	m	struct:config	file:
g	mptest/mptest.c	/^} g;$/;"	v	typeref:struct:Global	file:
g	src/test6.c	/^static CrashGlobal g = {0, 0, SQLITE_DEFAULT_SECTOR_SIZE, 0, 0};$/;"	v	file:
g	src/test_devsym.c	/^struct DevsymGlobal g = {0, 0, 512};$/;"	v	typeref:struct:DevsymGlobal
g	src/test_journal.c	/^static struct JtGlobal g = {0, 0};$/;"	v	typeref:struct:JtGlobal	file:
g	src/test_mutex.c	/^} g = {0};$/;"	v	typeref:struct:test_mutex_globals	file:
g	src/test_server.c	/^} g = {$/;"	v	typeref:struct:ServerState	file:
g	test/fuzzcheck.c	/^} g;$/;"	v	typeref:struct:GlobalVars	file:
g	test/speedtest1.c	/^} g;$/;"	v	typeref:struct:Global	file:
g	tool/dbhash.c	/^} g;$/;"	v	typeref:struct:GlobalVars
g	tool/fuzzershell.c	/^} g;$/;"	v	typeref:struct:GlobalVars
g	tool/showdb.c	/^} g = {1024, -1, 0, 16,   0, 0, 0};$/;"	v	typeref:struct:GlobalData	file:
g	tool/sqldiff.c	/^} g;$/;"	v	typeref:struct:GlobalVars
gHere	src/test_rtree.c	/^static int gHere = 42;$/;"	v	file:
gMultiplex	src/test_multiplex.c	/^} gMultiplex;$/;"	v	typeref:struct:__anon62	file:
gQuota	src/test_quota.c	/^} gQuota;$/;"	v	typeref:struct:__anon67	file:
gSyscall	src/test_syscall.c	/^} gSyscall = { 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:TestSyscallGlobal	file:
g_elapsed	sqlite3.c	/^static sqlite_uint64 g_elapsed;$/;"	v	file:
g_elapsed	src/os_common.h	/^static sqlite_uint64 g_elapsed;$/;"	v
g_elapsed	tsrc/os_common.h	/^static sqlite_uint64 g_elapsed;$/;"	v
g_start	sqlite3.c	/^static sqlite_uint64 g_start;$/;"	v	file:
g_start	src/os_common.h	/^static sqlite_uint64 g_start;$/;"	v
g_start	tsrc/os_common.h	/^static sqlite_uint64 g_start;$/;"	v
gather_one_file	tool/split-sqlite3c.tcl	/^proc gather_one_file {firstline bufout nout} {$/;"	p
genCksum	src/test_journal.c	/^static u32 genCksum(const unsigned char *z, int n){$/;"	f	file:
generateColumnNames	sqlite3.c	/^static void generateColumnNames($/;"	f	file:
generateColumnNames	src/select.c	/^static void generateColumnNames($/;"	f	file:
generateColumnNames	tsrc/select.c	/^static void generateColumnNames($/;"	f	file:
generateColumnTypes	sqlite3.c	/^static void generateColumnTypes($/;"	f	file:
generateColumnTypes	src/select.c	/^static void generateColumnTypes($/;"	f	file:
generateColumnTypes	tsrc/select.c	/^static void generateColumnTypes($/;"	f	file:
generateError	ext/fts2/fts2.c	/^static void generateError(sqlite3_context *pContext,$/;"	f	file:
generateError	tsrc/fts2.c	/^static void generateError(sqlite3_context *pContext,$/;"	f	file:
generateOutputSubroutine	sqlite3.c	/^static int generateOutputSubroutine($/;"	f	file:
generateOutputSubroutine	src/select.c	/^static int generateOutputSubroutine($/;"	f	file:
generateOutputSubroutine	tsrc/select.c	/^static int generateOutputSubroutine($/;"	f	file:
generateSortTail	sqlite3.c	/^static void generateSortTail($/;"	f	file:
generateSortTail	src/select.c	/^static void generateSortTail($/;"	f	file:
generateSortTail	tsrc/select.c	/^static void generateSortTail($/;"	f	file:
generateTermsResult	ext/fts2/fts2.c	/^static int generateTermsResult(sqlite3_context *pContext, fts2Hash *pTerms){$/;"	f	file:
generateTermsResult	tsrc/fts2.c	/^static int generateTermsResult(sqlite3_context *pContext, fts2Hash *pTerms){$/;"	f	file:
generateWithRecursiveQuery	sqlite3.c	/^static void generateWithRecursiveQuery($/;"	f	file:
generateWithRecursiveQuery	src/select.c	/^static void generateWithRecursiveQuery($/;"	f	file:
generateWithRecursiveQuery	tsrc/select.c	/^static void generateWithRecursiveQuery($/;"	f	file:
generate_expr	test/randexpr1.tcl	/^proc generate_expr {{e EXPR}} {$/;"	p
generate_makefile	tool/soak1.tcl	/^proc generate_makefile {pattern} {$/;"	p
geomCallback	ext/rtree/rtree.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
geomCallback	sqlite3.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
geomCallback	tsrc/rtree.c	/^static void geomCallback(sqlite3_context *ctx, int nArg, sqlite3_value **aArg){$/;"	f	file:
get2byte	sqlite3.c	169773;"	d	file:
get2byte	sqlite3.c	57831;"	d	file:
get2byte	src/btreeInt.h	689;"	d
get2byte	src/dbstat.c	134;"	d	file:
get2byte	tsrc/btreeInt.h	689;"	d
get2byte	tsrc/dbstat.c	134;"	d	file:
get2byteAligned	sqlite3.c	57842;"	d	file:
get2byteAligned	sqlite3.c	57845;"	d	file:
get2byteAligned	sqlite3.c	57848;"	d	file:
get2byteAligned	sqlite3.c	57850;"	d	file:
get2byteAligned	src/btreeInt.h	700;"	d
get2byteAligned	src/btreeInt.h	703;"	d
get2byteAligned	src/btreeInt.h	706;"	d
get2byteAligned	src/btreeInt.h	708;"	d
get2byteAligned	tsrc/btreeInt.h	700;"	d
get2byteAligned	tsrc/btreeInt.h	703;"	d
get2byteAligned	tsrc/btreeInt.h	706;"	d
get2byteAligned	tsrc/btreeInt.h	708;"	d
get2byteInt	shell.c	/^static unsigned int get2byteInt(unsigned char *a){$/;"	f	file:
get2byteInt	src/shell.c	/^static unsigned int get2byteInt(unsigned char *a){$/;"	f	file:
get2byteInt	tsrc/shell.c	/^static unsigned int get2byteInt(unsigned char *a){$/;"	f	file:
get2byteNotZero	sqlite3.c	58180;"	d	file:
get2byteNotZero	src/btree.c	44;"	d	file:
get2byteNotZero	tsrc/btree.c	44;"	d	file:
get32bits	src/test_osinst.c	/^static unsigned int get32bits(unsigned char *p){$/;"	f	file:
get4byte	sqlite3.c	57833;"	d	file:
get4byte	src/btreeInt.h	691;"	d
get4byte	tsrc/btreeInt.h	691;"	d
get4byteInt	shell.c	/^static unsigned int get4byteInt(unsigned char *a){$/;"	f	file:
get4byteInt	src/shell.c	/^static unsigned int get4byteInt(unsigned char *a){$/;"	f	file:
get4byteInt	tsrc/shell.c	/^static unsigned int get4byteInt(unsigned char *a){$/;"	f	file:
getAbsoluteLevel	ext/fts3/fts3_write.c	/^static sqlite3_int64 getAbsoluteLevel($/;"	f	file:
getAbsoluteLevel	sqlite3.c	/^static sqlite3_int64 getAbsoluteLevel($/;"	f	file:
getAbsoluteLevel	tsrc/fts3_write.c	/^static sqlite3_int64 getAbsoluteLevel($/;"	f	file:
getAndBindSqlStatement	test/threadtest3.c	/^static sqlite3_stmt *getAndBindSqlStatement($/;"	f	file:
getAndInitPage	sqlite3.c	/^static int getAndInitPage($/;"	f	file:
getAndInitPage	src/btree.c	/^static int getAndInitPage($/;"	f	file:
getAndInitPage	tsrc/btree.c	/^static int getAndInitPage($/;"	f	file:
getAutoVacuum	sqlite3.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getAutoVacuum	src/pragma.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getAutoVacuum	tsrc/pragma.c	/^static int getAutoVacuum(const char *z){$/;"	f	file:
getCellInfo	sqlite3.c	/^static SQLITE_NOINLINE void getCellInfo(BtCursor *pCur){$/;"	f	file:
getCellInfo	src/btree.c	/^static SQLITE_NOINLINE void getCellInfo(BtCursor *pCur){$/;"	f	file:
getCellInfo	tsrc/btree.c	/^static SQLITE_NOINLINE void getCellInfo(BtCursor *pCur){$/;"	f	file:
getChildrenContaining	ext/fts2/fts2.c	/^static void getChildrenContaining(const char *pData, int nData,$/;"	f	file:
getChildrenContaining	tsrc/fts2.c	/^static void getChildrenContaining(const char *pData, int nData,$/;"	f	file:
getColumnNames	src/test8.c	/^static int getColumnNames($/;"	f	file:
getContent	tool/showwal.c	/^static unsigned char *getContent(int ofst, int nByte){$/;"	f	file:
getDbPointer	src/test1.c	/^int getDbPointer(Tcl_Interp *interp, const char *zA, sqlite3 **ppDb){$/;"	f
getDbPointer	src/test_mutex.c	/^static sqlite3 *getDbPointer(Tcl_Interp *pInterp, Tcl_Obj *pObj){$/;"	f	file:
getDigits	sqlite3.c	/^static int getDigits(const char *zDate, const char *zFormat, ...){$/;"	f	file:
getDigits	src/date.c	/^static int getDigits(const char *zDate, const char *zFormat, ...){$/;"	f	file:
getDigits	tsrc/date.c	/^static int getDigits(const char *zDate, const char *zFormat, ...){$/;"	f	file:
getDoubleArg	sqlite3.c	/^static double getDoubleArg(PrintfArguments *p){$/;"	f	file:
getDoubleArg	src/printf.c	/^static double getDoubleArg(PrintfArguments *p){$/;"	f	file:
getDoubleArg	tsrc/printf.c	/^static double getDoubleArg(PrintfArguments *p){$/;"	f	file:
getEnvironmentVariable	tool/mkvsix.tcl	/^proc getEnvironmentVariable { name } {$/;"	p
getEnvironmentVariable	vsixtest/vsixtest.tcl	/^proc getEnvironmentVariable { name } {$/;"	p
getExtraFileListXmlChunk	tool/mkvsix.tcl	/^proc getExtraFileListXmlChunk { packageFlavor vsVersion } {$/;"	p
getFileLock	ext/async/sqlite3async.c	/^static int getFileLock(AsyncLock *pLock){$/;"	f	file:
getFileRetries	test/tester.tcl	/^proc getFileRetries {} {$/;"	p
getFileRetryDelay	test/tester.tcl	/^proc getFileRetryDelay {} {$/;"	p
getFts3Varint	src/test_hexio.c	/^static int getFts3Varint(const char *p, sqlite_int64 *v){$/;"	f	file:
getIndexArray	src/test8.c	/^static int getIndexArray($/;"	f	file:
getInt32	tool/showwal.c	/^static unsigned int getInt32(const unsigned char *a){$/;"	f	file:
getIntArg	sqlite3.c	/^static sqlite3_int64 getIntArg(PrintfArguments *p){$/;"	f	file:
getIntArg	src/printf.c	/^static sqlite3_int64 getIntArg(PrintfArguments *p){$/;"	f	file:
getIntArg	tsrc/printf.c	/^static sqlite3_int64 getIntArg(PrintfArguments *p){$/;"	f	file:
getIntFromStmt	ext/rtree/rtree.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getIntFromStmt	sqlite3.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getIntFromStmt	tsrc/rtree.c	/^static int getIntFromStmt(sqlite3 *db, const char *zSql, int *piVal){$/;"	f	file:
getLocalPayload	sqlite3.c	/^static void getLocalPayload($/;"	f	file:
getLocalPayload	src/dbstat.c	/^static void getLocalPayload($/;"	f	file:
getLocalPayload	tsrc/dbstat.c	/^static void getLocalPayload($/;"	f	file:
getLockingMode	sqlite3.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getLockingMode	src/pragma.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getLockingMode	tsrc/pragma.c	/^static int getLockingMode(const char *z){$/;"	f	file:
getMaxPlatformVersionXmlChunk	tool/mkvsix.tcl	/^proc getMaxPlatformVersionXmlChunk { packageFlavor vsVersion } {$/;"	p
getMinVsVersionXmlChunk	tool/mkvsix.tcl	/^proc getMinVsVersionXmlChunk { vsVersion } {$/;"	p
getNextNode	ext/fts3/fts3_expr.c	/^static int getNextNode($/;"	f	file:
getNextNode	sqlite3.c	/^static int getNextNode($/;"	f	file:
getNextNode	tsrc/fts3_expr.c	/^static int getNextNode($/;"	f	file:
getNextString	ext/fts3/fts3_expr.c	/^static int getNextString($/;"	f	file:
getNextString	sqlite3.c	/^static int getNextString($/;"	f	file:
getNextString	tsrc/fts3_expr.c	/^static int getNextString($/;"	f	file:
getNextToken	ext/fts3/fts3_expr.c	/^static int getNextToken($/;"	f	file:
getNextToken	sqlite3.c	/^static int getNextToken($/;"	f	file:
getNextToken	tsrc/fts3_expr.c	/^static int getNextToken($/;"	f	file:
getNodeSize	ext/rtree/rtree.c	/^static int getNodeSize($/;"	f	file:
getNodeSize	sqlite3.c	/^static int getNodeSize($/;"	f	file:
getNodeSize	tsrc/rtree.c	/^static int getNodeSize($/;"	f	file:
getOverflowPage	sqlite3.c	/^static int getOverflowPage($/;"	f	file:
getOverflowPage	src/btree.c	/^static int getOverflowPage($/;"	f	file:
getOverflowPage	tsrc/btree.c	/^static int getOverflowPage($/;"	f	file:
getPageReferenced	sqlite3.c	/^static int getPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
getPageReferenced	src/btree.c	/^static int getPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
getPageReferenced	tsrc/btree.c	/^static int getPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
getProcessId	src/test_sqllog.c	/^static int getProcessId(void){$/;"	f	file:
getProcessTimesAddr	shell.c	/^static GETPROCTIMES getProcessTimesAddr = NULL;$/;"	v	file:
getProcessTimesAddr	src/shell.c	/^static GETPROCTIMES getProcessTimesAddr = NULL;$/;"	v	file:
getProcessTimesAddr	tsrc/shell.c	/^static GETPROCTIMES getProcessTimesAddr = NULL;$/;"	v	file:
getRbudiffQuery	tool/sqldiff.c	/^static void getRbudiffQuery($/;"	f	file:
getRowTrigger	sqlite3.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getRowTrigger	src/trigger.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getRowTrigger	tsrc/trigger.c	/^static TriggerPrg *getRowTrigger($/;"	f	file:
getSafetyLevel	sqlite3.c	/^static u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){$/;"	f	file:
getSafetyLevel	src/pragma.c	/^static u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){$/;"	f	file:
getSafetyLevel	tsrc/pragma.c	/^static u8 getSafetyLevel(const char *z, int omitFull, u8 dflt){$/;"	f	file:
getSqlStatement	test/threadtest3.c	/^static Statement *getSqlStatement($/;"	f	file:
getStaticMutexPointer	src/test_mutex.c	/^static sqlite3_mutex *getStaticMutexPointer($/;"	f	file:
getStmtPointer	src/test1.c	/^static int getStmtPointer($/;"	f	file:
getTempStore	sqlite3.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTempStore	src/pragma.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTempStore	tsrc/pragma.c	/^static int getTempStore(const char *z){$/;"	f	file:
getTemporaryPath	tool/mkvsix.tcl	/^proc getTemporaryPath {} {$/;"	p
getTemporaryPath	vsixtest/vsixtest.tcl	/^proc getTemporaryPath {} {$/;"	p
getTextArg	sqlite3.c	/^static char *getTextArg(PrintfArguments *p){$/;"	f	file:
getTextArg	src/printf.c	/^static char *getTextArg(PrintfArguments *p){$/;"	f	file:
getTextArg	tsrc/printf.c	/^static char *getTextArg(PrintfArguments *p){$/;"	f	file:
getToken	ext/fts1/fts1.c	/^static int getToken(const char *z, int *tokenType){$/;"	f	file:
getToken	ext/fts2/fts2.c	/^static int getToken(const char *z, int *tokenType){$/;"	f	file:
getToken	tsrc/fts1.c	/^static int getToken(const char *z, int *tokenType){$/;"	f	file:
getToken	tsrc/fts2.c	/^static int getToken(const char *z, int *tokenType){$/;"	f	file:
getVarint	ext/fts1/fts1.c	/^static int getVarint(const char *p, sqlite_int64 *v){$/;"	f	file:
getVarint	ext/fts1/fulltext.c	/^static int getVarint(const char *p, sqlite_int64 *v){$/;"	f	file:
getVarint	ext/fts2/fts2.c	/^static int getVarint(const char *p, sqlite_int64 *v){$/;"	f	file:
getVarint	ext/fts3/tool/fts3view.c	/^int getVarint(const unsigned char *p, sqlite_int64 *v){$/;"	f
getVarint	sqlite3.c	16472;"	d	file:
getVarint	src/sqliteInt.h	3873;"	d
getVarint	tsrc/fts1.c	/^static int getVarint(const char *p, sqlite_int64 *v){$/;"	f	file:
getVarint	tsrc/fts2.c	/^static int getVarint(const char *p, sqlite_int64 *v){$/;"	f	file:
getVarint	tsrc/sqliteInt.h	3873;"	d
getVarint32	ext/fts1/fts1.c	/^static int getVarint32(const char *p, int *pi){$/;"	f	file:
getVarint32	ext/fts1/fulltext.c	/^static int getVarint32(const char *p, int *pi){$/;"	f	file:
getVarint32	ext/fts2/fts2.c	/^static int getVarint32(const char *p, int *pi){$/;"	f	file:
getVarint32	sqlite3.c	16467;"	d	file:
getVarint32	src/sqliteInt.h	3868;"	d
getVarint32	tsrc/fts1.c	/^static int getVarint32(const char *p, int *pi){$/;"	f	file:
getVarint32	tsrc/fts2.c	/^static int getVarint32(const char *p, int *pi){$/;"	f	file:
getVarint32	tsrc/sqliteInt.h	3868;"	d
getWin32Handle	src/test1.c	/^int getWin32Handle(Tcl_Interp *interp, const char *zA, LPHANDLE phFile){$/;"	f
get_api_docs	ext/fts5/extract_api_docs.tcl	/^proc get_api_docs {data} {$/;"	p
get_autocommit	sqlite3.c	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
get_autocommit	sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_autocommit	src/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_autocommit	src/test1.c	/^static int SQLITE_TCLAPI get_autocommit($/;"	f	file:
get_autocommit	tsrc/sqlite3ext.h	/^  int  (*get_autocommit)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
get_auxdata	sqlite3.c	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
get_auxdata	sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_auxdata	src/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_auxdata	tsrc/sqlite3ext.h	/^  void * (*get_auxdata)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
get_fts5_struct	ext/fts5/extract_api_docs.tcl	/^proc get_fts5_struct {data start end} {$/;"	p
get_pwd	test/tester.tcl	/^proc get_pwd {} {$/;"	p
get_simple_tokenizer_module	ext/fts1/simple_tokenizer.c	/^void get_simple_tokenizer_module($/;"	f
get_sqlite_pointer	src/test1.c	/^static int SQLITE_TCLAPI get_sqlite_pointer($/;"	f	file:
get_struct_docs	ext/fts5/extract_api_docs.tcl	/^proc get_struct_docs {data names} {$/;"	p
get_struct_members	ext/fts5/extract_api_docs.tcl	/^proc get_struct_members {data} {$/;"	p
get_table	sqlite3.c	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines	file:
get_table	sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
get_table	src/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
get_table	tsrc/sqlite3ext.h	/^  int  (*get_table)(sqlite3*,const char*,char***,int*,int*,char**);$/;"	m	struct:sqlite3_api_routines
get_tokenizer_docs	ext/fts5/extract_api_docs.tcl	/^proc get_tokenizer_docs {data} {$/;"	p
get_version	test/bc_common.tcl	/^proc get_version {binary} {$/;"	p
getrusage	shell.c	197;"	d	file:
getrusage	src/shell.c	197;"	d	file:
getrusage	tsrc/shell.c	197;"	d	file:
getstate	tool/lemon.c	/^PRIVATE struct state *getstate(struct lemon *lemp)$/;"	f
globInfo	sqlite3.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
globInfo	src/func.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
globInfo	tsrc/func.c	/^static const struct compareInfo globInfo = { '*', '?', '[', 0 };$/;"	v	typeref:struct:compareInfo	file:
globalDb	shell.c	/^static sqlite3 *globalDb = 0;$/;"	v	file:
globalDb	src/shell.c	/^static sqlite3 *globalDb = 0;$/;"	v	file:
globalDb	tsrc/shell.c	/^static sqlite3 *globalDb = 0;$/;"	v	file:
global_recover	sqlite3.c	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines	file:
global_recover	sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
global_recover	src/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
global_recover	tsrc/sqlite3ext.h	/^  int  (*global_recover)(void);$/;"	m	struct:sqlite3_api_routines
gobble_string	test/fts3_common.tcl	/^proc gobble_string {varname nLength} {$/;"	p
gobble_text	ext/fts5/test/fts5_common.tcl	/^proc gobble_text {textvar wordvar} {$/;"	p
gobble_token	tool/sqldiff.c	/^const char *gobble_token(const char *zIn, char *zBuf, int nBuf){$/;"	f
gobble_varint	test/fts3_common.tcl	/^proc gobble_varint {varname} {$/;"	p
gobble_whitespace	ext/fts5/test/fts5_common.tcl	/^proc gobble_whitespace {textvar} {$/;"	p
gp	tool/lemon.c	/^  struct lemon *gp;     \/* Global state vector *\/$/;"	m	struct:pstate	typeref:struct:pstate::lemon	file:
groupConcatFinalize	sqlite3.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatFinalize	src/func.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatFinalize	tsrc/func.c	/^static void groupConcatFinalize(sqlite3_context *context){$/;"	f	file:
groupConcatStep	sqlite3.c	/^static void groupConcatStep($/;"	f	file:
groupConcatStep	src/func.c	/^static void groupConcatStep($/;"	f	file:
groupConcatStep	tsrc/func.c	/^static void groupConcatStep($/;"	f	file:
growOp3	sqlite3.c	/^static SQLITE_NOINLINE int growOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f	file:
growOp3	src/vdbeaux.c	/^static SQLITE_NOINLINE int growOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f	file:
growOp3	tsrc/vdbeaux.c	/^static SQLITE_NOINLINE int growOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f	file:
growOpArray	sqlite3.c	/^static int growOpArray(Vdbe *v, int nOp){$/;"	f	file:
growOpArray	src/vdbeaux.c	/^static int growOpArray(Vdbe *v, int nOp){$/;"	f	file:
growOpArray	tsrc/vdbeaux.c	/^static int growOpArray(Vdbe *v, int nOp){$/;"	f	file:
growVTrans	sqlite3.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
growVTrans	src/vtab.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
growVTrans	tsrc/vtab.c	/^static int growVTrans(sqlite3 *db){$/;"	f	file:
grp	sqlite3.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
grp	src/pcache1.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
grp	tsrc/pcache1.c	/^  PGroup grp;                    \/* The global PGroup for mode (2) *\/$/;"	m	struct:PCacheGlobal	file:
h	sqlite3.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	sqlite3.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	sqlite3.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
h	src/date.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	src/os_unix.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	src/os_unix.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
h	src/os_win.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
h	src/test1.c	/^  HANDLE h;           \/* Handle of the file to be locked *\/$/;"	m	struct:win32FileLocker	file:
h	tsrc/date.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
h	tsrc/os_unix.c	/^  int h;                              \/* The file descriptor *\/$/;"	m	struct:unixFile	file:
h	tsrc/os_unix.c	/^  int h;                     \/* Open file descriptor *\/$/;"	m	struct:unixShmNode	file:
h	tsrc/os_win.c	/^  HANDLE h;               \/* Handle for accessing the file *\/$/;"	m	struct:winFile	file:
hFile	sqlite3.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hFile	src/os_win.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hFile	tsrc/os_win.c	/^  winFile hFile;             \/* File handle from winOpen *\/$/;"	m	struct:winShmNode	file:
hHeap	sqlite3.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hHeap	src/os_win.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hHeap	tsrc/os_win.c	/^  HANDLE hHeap; \/* The handle to our heap. *\/$/;"	m	struct:winMemData	file:
hMap	sqlite3.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMap	sqlite3.c	/^  HANDLE hMap;                  \/* Handle for accessing memory mapping *\/$/;"	m	struct:winFile	file:
hMap	src/os_win.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMap	src/os_win.c	/^  HANDLE hMap;                  \/* Handle for accessing memory mapping *\/$/;"	m	struct:winFile	file:
hMap	tsrc/os_win.c	/^    HANDLE hMap;             \/* File handle from CreateFileMapping *\/$/;"	m	struct:winShmNode::ShmRegion	file:
hMap	tsrc/os_win.c	/^  HANDLE hMap;                  \/* Handle for accessing memory mapping *\/$/;"	m	struct:winFile	file:
hMutex	sqlite3.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/$/;"	m	struct:winFile	file:
hMutex	src/os_win.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/$/;"	m	struct:winFile	file:
hMutex	tsrc/os_win.c	/^  HANDLE hMutex;          \/* Mutex used to control access to shared lock *\/$/;"	m	struct:winFile	file:
hPending	ext/fts3/fts3Int.h	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index
hPending	sqlite3.c	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
hPending	tsrc/fts3Int.h	/^    Fts3Hash hPending;            \/* Pending terms table for this index *\/$/;"	m	struct:Fts3Table::Fts3Index
hProcess	shell.c	/^static HANDLE hProcess;$/;"	v	file:
hProcess	src/shell.c	/^static HANDLE hProcess;$/;"	v	file:
hProcess	tsrc/shell.c	/^static HANDLE hProcess;$/;"	v	file:
hShared	sqlite3.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
hShared	src/os_win.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
hShared	tsrc/os_win.c	/^  HANDLE hShared;         \/* Shared memory segment used for locking *\/$/;"	m	struct:winFile	file:
halfFunc	src/test_loadext.c	/^static void halfFunc($/;"	f	file:
handleDeferredMoveto	sqlite3.c	/^static int SQLITE_NOINLINE handleDeferredMoveto(VdbeCursor *p){$/;"	f	file:
handleDeferredMoveto	src/vdbeaux.c	/^static int SQLITE_NOINLINE handleDeferredMoveto(VdbeCursor *p){$/;"	f	file:
handleDeferredMoveto	tsrc/vdbeaux.c	/^static int SQLITE_NOINLINE handleDeferredMoveto(VdbeCursor *p){$/;"	f	file:
handleMovedCursor	sqlite3.c	/^static int SQLITE_NOINLINE handleMovedCursor(VdbeCursor *p){$/;"	f	file:
handleMovedCursor	src/vdbeaux.c	/^static int SQLITE_NOINLINE handleMovedCursor(VdbeCursor *p){$/;"	f	file:
handleMovedCursor	tsrc/vdbeaux.c	/^static int SQLITE_NOINLINE handleMovedCursor(VdbeCursor *p){$/;"	f	file:
handle_D_option	tool/lemon.c	/^static void handle_D_option(char *z){$/;"	f	file:
handle_T_option	tool/lemon.c	/^static void handle_T_option(char *z){$/;"	f	file:
handleflags	tool/lemon.c	/^static int handleflags(int i, FILE *err)$/;"	f	file:
handleswitch	tool/lemon.c	/^static int handleswitch(int i, FILE *err)$/;"	f	file:
hasColumn	sqlite3.c	/^static int hasColumn(const i16 *aiCol, int nCol, int x){$/;"	f	file:
hasColumn	src/build.c	/^static int hasColumn(const i16 *aiCol, int nCol, int x){$/;"	f	file:
hasColumn	tsrc/build.c	/^static int hasColumn(const i16 *aiCol, int nCol, int x){$/;"	f	file:
hasCompound	sqlite3.c	/^  u8 hasCompound;      \/* Need to invoke convertCompoundSelectToSubquery() *\/$/;"	m	struct:Parse	file:
hasCompound	src/sqliteInt.h	/^  u8 hasCompound;      \/* Need to invoke convertCompoundSelectToSubquery() *\/$/;"	m	struct:Parse
hasCompound	tsrc/sqliteInt.h	/^  u8 hasCompound;      \/* Need to invoke convertCompoundSelectToSubquery() *\/$/;"	m	struct:Parse
hasHeldSharedLock	sqlite3.c	/^  u8 hasHeldSharedLock;       \/* True if a shared lock has ever been held *\/$/;"	m	struct:Pager	file:
hasHeldSharedLock	src/pager.c	/^  u8 hasHeldSharedLock;       \/* True if a shared lock has ever been held *\/$/;"	m	struct:Pager	file:
hasHeldSharedLock	tsrc/pager.c	/^  u8 hasHeldSharedLock;       \/* True if a shared lock has ever been held *\/$/;"	m	struct:Pager	file:
hasHotJournal	sqlite3.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasHotJournal	src/pager.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasHotJournal	tsrc/pager.c	/^static int hasHotJournal(Pager *pPager, int *pExists){$/;"	f	file:
hasIncrblobCur	sqlite3.c	/^  u8 hasIncrblobCur; \/* True if there are one or more Incrblob cursors *\/$/;"	m	struct:Btree	file:
hasIncrblobCur	src/btreeInt.h	/^  u8 hasIncrblobCur; \/* True if there are one or more Incrblob cursors *\/$/;"	m	struct:Btree
hasIncrblobCur	tsrc/btreeInt.h	/^  u8 hasIncrblobCur; \/* True if there are one or more Incrblob cursors *\/$/;"	m	struct:Btree
hasMutex	sqlite3.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	sqlite3.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasMutex	src/os_unix.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	src/os_win.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasMutex	tsrc/os_unix.c	/^  u8 hasMutex;               \/* True if holding the unixShmNode mutex *\/$/;"	m	struct:unixShm	file:
hasMutex	tsrc/os_win.c	/^  u8 hasMutex;               \/* True if holding the winShmNode mutex *\/$/;"	m	struct:winShm	file:
hasReadConflicts	sqlite3.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	sqlite3.c	58248;"	d	file:
hasReadConflicts	src/btree.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	src/btree.c	112;"	d	file:
hasReadConflicts	tsrc/btree.c	/^static int hasReadConflicts(Btree *pBtree, Pgno iRoot){$/;"	f	file:
hasReadConflicts	tsrc/btree.c	112;"	d	file:
hasSharedCacheTableLock	sqlite3.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	sqlite3.c	58247;"	d	file:
hasSharedCacheTableLock	src/btree.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	src/btree.c	111;"	d	file:
hasSharedCacheTableLock	tsrc/btree.c	/^static int hasSharedCacheTableLock($/;"	f	file:
hasSharedCacheTableLock	tsrc/btree.c	111;"	d	file:
hasSideEffect	tool/srcck1.c	/^static int hasSideEffect(const char *z, unsigned int n){$/;"	f	file:
hasTimer	shell.c	/^static int hasTimer(void){$/;"	f	file:
hasTimer	src/shell.c	/^static int hasTimer(void){$/;"	f	file:
hasTimer	tsrc/shell.c	/^static int hasTimer(void){$/;"	f	file:
hasVowel	ext/fts1/fts1_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	ext/fts2/fts2_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	ext/fts3/fts3_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	sqlite3.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	tsrc/fts1_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	tsrc/fts2_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
hasVowel	tsrc/fts3_porter.c	/^static int hasVowel(const char *z){$/;"	f	file:
has_destructor	tool/lemon.c	/^int has_destructor(struct symbol *sp, struct lemon *lemp)$/;"	f
has_fallback	tool/lemon.c	/^  int has_fallback;        \/* True if any %fallback is seen in the grammar *\/$/;"	m	struct:lemon	file:
has_iPrevDocid	ext/fts2/fts2.c	/^  int has_iPrevDocid;$/;"	m	struct:DLWriter	file:
has_iPrevDocid	tsrc/fts2.c	/^  int has_iPrevDocid;$/;"	m	struct:DLWriter	file:
has_parent	ext/fts2/fts2.c	/^  int has_parent;$/;"	m	struct:LeafWriter	file:
has_parent	tsrc/fts2.c	/^  int has_parent;$/;"	m	struct:LeafWriter	file:
hash	tool/mkkeywordhash.c	/^  int hash;            \/* Hash on the keyword *\/$/;"	m	struct:Keyword	file:
hash	tool/sqldiff.c	/^struct hash {$/;"	s	file:
hash	tool/sqldiff.c	/^typedef struct hash hash;$/;"	t	typeref:struct:hash	file:
hashDestroy	ext/fts2/fts2.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashDestroy	ext/fts3/fts3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashDestroy	sqlite3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashDestroy	tsrc/fts2.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashDestroy	tsrc/fts3.c	/^static void hashDestroy(void *p){$/;"	f	file:
hashFunction	ext/fts1/ft_hash.c	/^static int (*hashFunction(int keyClass))(const void*,int){$/;"	f	file:
hashFunction	ext/fts1/fts1_hash.c	/^static int (*hashFunction(int keyClass))(const void*,int){$/;"	f	file:
hashFunction	ext/fts2/fts2_hash.c	/^static int (*hashFunction(int keyClass))(const void*,int){$/;"	f	file:
hashFunction	tsrc/fts1_hash.c	/^static int (*hashFunction(int keyClass))(const void*,int){$/;"	f	file:
hashFunction	tsrc/fts2_hash.c	/^static int (*hashFunction(int keyClass))(const void*,int){$/;"	f	file:
hashString	src/test8.c	/^static int hashString(const char *zString){$/;"	f	file:
hash_32bit	tool/sqldiff.c	/^static u32 hash_32bit(hash *pHash){$/;"	f	file:
hash_finish	tool/dbhash.c	/^static void hash_finish(const char *zName){$/;"	f	file:
hash_init	tool/dbhash.c	/^static void hash_init(void){$/;"	f	file:
hash_init	tool/sqldiff.c	/^static void hash_init(hash *pHash, const char *z){$/;"	f	file:
hash_next	tool/sqldiff.c	/^static void hash_next(hash *pHash, int c){$/;"	f	file:
hash_one_query	tool/dbhash.c	/^static void hash_one_query(const char *zFormat, ...){$/;"	f	file:
hash_step	tool/dbhash.c	/^static void hash_step(const unsigned char *data,  unsigned int len){$/;"	f	file:
hdr	sqlite3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon90	typeref:struct:Mem3Block::__anon90::__anon91	file:
hdr	sqlite3.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdr	src/mem3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon64	typeref:struct:Mem3Block::__anon64::__anon65	file:
hdr	src/wal.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdr	tsrc/mem3.c	/^    } hdr;$/;"	m	union:Mem3Block::__anon34	typeref:struct:Mem3Block::__anon34::__anon35	file:
hdr	tsrc/wal.c	/^  WalIndexHdr hdr;           \/* Wal-index header for current transaction *\/$/;"	m	struct:Wal	file:
hdrOffset	sqlite3.c	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage	file:
hdrOffset	src/btreeInt.h	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage
hdrOffset	tsrc/btreeInt.h	/^  u8 hdrOffset;        \/* 100 for page 1.  0 otherwise *\/$/;"	m	struct:MemPage
heap	sqlite3.c	/^  u32 *heap;        \/* Min-heap used for analyzing cell coverage *\/$/;"	m	struct:IntegrityCk	file:
heap	src/btreeInt.h	/^  u32 *heap;        \/* Min-heap used for analyzing cell coverage *\/$/;"	m	struct:IntegrityCk
heap	tsrc/btreeInt.h	/^  u32 *heap;        \/* Min-heap used for analyzing cell coverage *\/$/;"	m	struct:IntegrityCk
height	ext/misc/amatch.c	/^  short int height;     \/* Height of this node.  Leaf==1 *\/$/;"	m	struct:amatch_avl	file:
height	ext/misc/closure.c	/^  short int height;     \/* Height of this node.  Leaf==1 *\/$/;"	m	struct:closure_avl	file:
height	src/test_rtree.c	/^  double height;$/;"	m	struct:Cube	file:
heightOfExpr	sqlite3.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExpr	src/expr.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExpr	tsrc/expr.c	/^static void heightOfExpr(Expr *p, int *pnHeight){$/;"	f	file:
heightOfExprList	sqlite3.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfExprList	src/expr.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfExprList	tsrc/expr.c	/^static void heightOfExprList(ExprList *p, int *pnHeight){$/;"	f	file:
heightOfSelect	sqlite3.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
heightOfSelect	src/expr.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
heightOfSelect	tsrc/expr.c	/^static void heightOfSelect(Select *p, int *pnHeight){$/;"	f	file:
hex16Func	src/test1.c	/^static void hex16Func(sqlite3_context *p, int argc, sqlite3_value **argv){$/;"	f	file:
hex8Func	src/test1.c	/^static void hex8Func(sqlite3_context *p, int argc, sqlite3_value **argv){$/;"	f	file:
hexDigitValue	shell.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexDigitValue	src/shell.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexDigitValue	test/fuzzcheck.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexDigitValue	test/speedtest1.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexDigitValue	tool/fuzzershell.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexDigitValue	tsrc/shell.c	/^static int hexDigitValue(char c){$/;"	f	file:
hexFunc	sqlite3.c	/^static void hexFunc($/;"	f	file:
hexFunc	src/func.c	/^static void hexFunc($/;"	f	file:
hexFunc	tsrc/func.c	/^static void hexFunc($/;"	f	file:
hexToInt	src/test_malloc.c	/^static int hexToInt(int h){$/;"	f	file:
hexValue	tool/varint.c	/^static int hexValue(char c){$/;"	f	file:
hexdigits	ext/session/changeset.c	/^static const char hexdigits[] = {$/;"	v	file:
hexdigits	sqlite3.c	/^static const char hexdigits[] = {$/;"	v	file:
hexdigits	src/func.c	/^static const char hexdigits[] = {$/;"	v	file:
hexdigits	tsrc/func.c	/^static const char hexdigits[] = {$/;"	v	file:
hexio_get_int	src/test_hexio.c	/^static int SQLITE_TCLAPI hexio_get_int($/;"	f	file:
hexio_read	src/test_hexio.c	/^static int SQLITE_TCLAPI hexio_read($/;"	f	file:
hexio_render_int16	src/test_hexio.c	/^static int SQLITE_TCLAPI hexio_render_int16($/;"	f	file:
hexio_render_int32	src/test_hexio.c	/^static int SQLITE_TCLAPI hexio_render_int32($/;"	f	file:
hexio_write	src/test_hexio.c	/^static int SQLITE_TCLAPI hexio_write($/;"	f	file:
highStress	src/test_pcache.c	/^  unsigned highStress;      \/* Call xStress agressively *\/$/;"	m	struct:testpcacheGlobalType	file:
hints	sqlite3.c	/^  u8 hints;                 \/* As configured by CursorSetHints() *\/$/;"	m	struct:BtCursor	file:
hints	src/btreeInt.h	/^  u8 hints;                 \/* As configured by CursorSetHints() *\/$/;"	m	struct:BtCursor
hints	tsrc/btreeInt.h	/^  u8 hints;                 \/* As configured by CursorSetHints() *\/$/;"	m	struct:BtCursor
hlmask	ext/fts3/fts3_snippet.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
hlmask	sqlite3.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
hlmask	tsrc/fts3_snippet.c	/^  u64 hlmask;                     \/* Mask of snippet terms to highlight *\/$/;"	m	struct:SnippetFragment	file:
hook	ext/session/sqlite3session.c	/^  SessionHook hook;               \/* APIs to grab new and old data with *\/$/;"	m	struct:sqlite3_session	file:
hook	sqlite3.c	/^  SessionHook hook;               \/* APIs to grab new and old data with *\/$/;"	m	struct:sqlite3_session	file:
hook	tsrc/sqlite3session.c	/^  SessionHook hook;               \/* APIs to grab new and old data with *\/$/;"	m	struct:sqlite3_session	file:
ht	ext/fts1/ft_hash.h	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht
ht	ext/fts1/fts1_hash.h	/^  } *ht;$/;"	m	struct:fts1Hash	typeref:struct:fts1Hash::_fts1ht
ht	ext/fts2/fts2_hash.h	/^  } *ht;$/;"	m	struct:fts2Hash	typeref:struct:fts2Hash::_fts2ht
ht	ext/fts3/fts3_hash.h	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht
ht	sqlite3.c	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht	file:
ht	sqlite3.c	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht	file:
ht	src/hash.h	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht
ht	tool/lemon.c	/^  struct s_x1node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
ht	tool/lemon.c	/^  struct s_x2node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
ht	tool/lemon.c	/^  struct s_x3node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
ht	tool/lemon.c	/^  struct s_x4node **ht;  \/* Hash table for lookups *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
ht	tsrc/fts1_hash.h	/^  } *ht;$/;"	m	struct:fts1Hash	typeref:struct:fts1Hash::_fts1ht
ht	tsrc/fts2_hash.h	/^  } *ht;$/;"	m	struct:fts2Hash	typeref:struct:fts2Hash::_fts2ht
ht	tsrc/fts3_hash.h	/^  } *ht;$/;"	m	struct:Fts3Hash	typeref:struct:Fts3Hash::_fts3ht
ht	tsrc/hash.h	/^  } *ht;$/;"	m	struct:Hash	typeref:struct:Hash::_ht
ht_slot	sqlite3.c	/^typedef u16 ht_slot;$/;"	t	file:
ht_slot	src/wal.c	/^typedef u16 ht_slot;$/;"	t	file:
ht_slot	tsrc/wal.c	/^typedef u16 ht_slot;$/;"	t	file:
htsize	ext/fts1/ft_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash
htsize	ext/fts1/fts1_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:fts1Hash
htsize	ext/fts2/fts2_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:fts2Hash
htsize	ext/fts3/fts3_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash
htsize	sqlite3.c	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash	file:
htsize	sqlite3.c	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash	file:
htsize	src/hash.h	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash
htsize	tsrc/fts1_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:fts1Hash
htsize	tsrc/fts2_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:fts2Hash
htsize	tsrc/fts3_hash.h	/^  int htsize;             \/* Number of buckets in the hash table *\/$/;"	m	struct:Fts3Hash
htsize	tsrc/hash.h	/^  unsigned int htsize;      \/* Number of buckets in the hash table *\/$/;"	m	struct:Hash
i	ext/fts5/fts5Int.h	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader
i	ext/fts5/fts5_expr.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	ext/misc/json1.c	/^  u32 i;                     \/* Index in sParse.aNode[] of current row *\/$/;"	m	struct:JsonEachCursor	file:
i	ext/misc/regexp.c	/^  int i;                   \/* Next byte to read *\/$/;"	m	struct:ReInput	file:
i	ext/misc/vfsstat.c	/^  int i;                          \/* Pointing to this aVfsCnt[] value *\/$/;"	m	struct:VfsStatCursor	file:
i	ext/rtree/rtree.c	/^  int i;             \/* Integer value *\/$/;"	m	union:RtreeCoord	file:
i	fts5.c	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader	file:
i	fts5.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	sqlite3.c	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::MemValue	file:
i	sqlite3.c	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::p4union	file:
i	sqlite3.c	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader	file:
i	sqlite3.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	sqlite3.c	/^  int i;              \/* XOR next input into a[i] *\/$/;"	m	struct:EntropyGatherer	file:
i	sqlite3.c	/^  int i;             \/* Integer value *\/$/;"	m	union:RtreeCoord	file:
i	sqlite3.c	/^  u32 i;                     \/* Index in sParse.aNode[] of current row *\/$/;"	m	struct:JsonEachCursor	file:
i	sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i	src/os_win.c	/^  int i;              \/* XOR next input into a[i] *\/$/;"	m	struct:EntropyGatherer	file:
i	src/random.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i	src/test_intarray.c	/^  int i;                       \/* Current cursor position *\/$/;"	m	struct:intarray_cursor	file:
i	src/vdbe.h	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::p4union
i	src/vdbeInt.h	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::MemValue
i	tool/sqldiff.c	/^  u16 i;            \/* Start of the hash window *\/$/;"	m	struct:hash	file:
i	tsrc/fts5.c	/^  int i;                          \/* Current offset in a[] *\/$/;"	m	struct:Fts5PoslistReader	file:
i	tsrc/fts5.c	/^  int i;                          \/* Current offset in position list *\/$/;"	m	struct:Fts5LookaheadReader	file:
i	tsrc/json1.c	/^  u32 i;                     \/* Index in sParse.aNode[] of current row *\/$/;"	m	struct:JsonEachCursor	file:
i	tsrc/os_win.c	/^  int i;              \/* XOR next input into a[i] *\/$/;"	m	struct:EntropyGatherer	file:
i	tsrc/random.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
i	tsrc/rtree.c	/^  int i;             \/* Integer value *\/$/;"	m	union:RtreeCoord	file:
i	tsrc/vdbe.h	/^    int i;                 \/* Integer value if p4type==P4_INT32 *\/$/;"	m	union:VdbeOp::p4union
i	tsrc/vdbeInt.h	/^    i64 i;              \/* Integer value used when MEM_Int is set in flags *\/$/;"	m	union:Mem::MemValue
i1	src/test_tclvar.c	/^  int i1;              \/* Current item in pList1 *\/$/;"	m	struct:tclvar_cursor	file:
i16	ext/fts3/fts3Int.h	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t
i16	ext/fts5/fts5Int.h	/^typedef short i16;$/;"	t
i16	fts5.c	/^typedef short i16;$/;"	t	file:
i16	sqlite3.c	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t	file:
i16	sqlite3.c	/^typedef short i16;$/;"	t	file:
i16	sqlite3.c	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t	file:
i16	src/sqliteInt.h	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t
i16	tsrc/fts3Int.h	/^typedef short int i16;            \/* 2-byte (or larger) signed integer *\/$/;"	t
i16	tsrc/fts5.c	/^typedef short i16;$/;"	t	file:
i16	tsrc/sqliteInt.h	/^typedef INT16_TYPE i16;            \/* 2-byte signed integer *\/$/;"	t
i2	src/test_tclvar.c	/^  int i2;              \/* Current item (if any) in pList2 *\/$/;"	m	struct:tclvar_cursor	file:
i64	ext/fts3/fts3Int.h	/^typedef sqlite3_int64 i64;        \/* 8-byte signed integer *\/$/;"	t
i64	ext/fts5/fts5Int.h	/^typedef sqlite3_int64 i64;$/;"	t
i64	ext/rbu/sqlite3rbu.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	ext/rtree/rtree.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	fts5.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	sqlite3.c	/^typedef sqlite3_int64 i64;        \/* 8-byte signed integer *\/$/;"	t	file:
i64	sqlite3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	sqlite3.c	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t	file:
i64	src/sqliteInt.h	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t
i64	test/threadtest3.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	tool/showdb.c	/^typedef long long int i64;      \/* Datatype for 64-bit integers *\/$/;"	t	file:
i64	tool/showstat4.c	/^typedef sqlite3_int64 i64;   \/* 64-bit signed integer type *\/$/;"	t	file:
i64	tool/showwal.c	/^typedef long long int i64;      \/* Datatype for 64-bit integers *\/$/;"	t	file:
i64	tool/varint.c	/^  typedef __int64 i64;$/;"	t	file:
i64	tool/varint.c	/^  typedef long long int i64;$/;"	t	file:
i64	tsrc/fts3Int.h	/^typedef sqlite3_int64 i64;        \/* 8-byte signed integer *\/$/;"	t
i64	tsrc/fts5.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	tsrc/rtree.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	tsrc/sqlite3rbu.c	/^typedef sqlite3_int64 i64;$/;"	t	file:
i64	tsrc/sqliteInt.h	/^typedef sqlite_int64 i64;          \/* 8-byte signed integer *\/$/;"	t
i8	sqlite3.c	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t	file:
i8	src/sqliteInt.h	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t
i8	tsrc/sqliteInt.h	/^typedef INT8_TYPE i8;              \/* 1-byte signed integer *\/$/;"	t
iAbsLevel	ext/fts3/fts3_write.c	/^  sqlite3_int64 iAbsLevel;        \/* Absolute level of input segments *\/$/;"	m	struct:IncrmergeWriter	file:
iAbsLevel	sqlite3.c	/^  sqlite3_int64 iAbsLevel;        \/* Absolute level of input segments *\/$/;"	m	struct:IncrmergeWriter	file:
iAbsLevel	tsrc/fts3_write.c	/^  sqlite3_int64 iAbsLevel;        \/* Absolute level of input segments *\/$/;"	m	struct:IncrmergeWriter	file:
iAddr	sqlite3.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAddr	src/vdbeaux.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAddr	tsrc/vdbeaux.c	/^  int iAddr;                 \/* Address of next instruction to return *\/$/;"	m	struct:VdbeOpIter	file:
iAgg	sqlite3.c	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr	file:
iAgg	src/sqliteInt.h	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr
iAgg	tsrc/sqliteInt.h	/^  i16 iAgg;              \/* Which entry in pAggInfo->aCol[] or ->aFunc[] *\/$/;"	m	struct:Expr
iAlias	sqlite3.c	/^        u16 iAlias;           \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item::__anon82::__anon83	file:
iAlias	src/sqliteInt.h	/^        u16 iAlias;           \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item::__anon56::__anon57
iAlias	tsrc/sqliteInt.h	/^        u16 iAlias;           \/* Index into Parse.aAlias[] for zName *\/$/;"	m	struct:ExprList::ExprList_item::__anon24::__anon25
iAppend	ext/misc/json1.c	/^    u32 iAppend;           \/* More terms for ARRAY and OBJECT *\/$/;"	m	union:JsonNode::__anon74	file:
iAppend	sqlite3.c	/^    u32 iAppend;           \/* More terms for ARRAY and OBJECT *\/$/;"	m	union:JsonNode::__anon106	file:
iAppend	tsrc/json1.c	/^    u32 iAppend;           \/* More terms for ARRAY and OBJECT *\/$/;"	m	union:JsonNode::__anon37	file:
iArg	sqlite3.c	/^  int iArg;                       \/* Index of function argument. *\/$/;"	m	struct:AuxData	file:
iArg	sqlite3.c	/^  u32 iArg;                 \/* Extra argument *\/$/;"	m	struct:sPragmaNames	file:
iArg	src/pragma.h	/^  u32 iArg;                 \/* Extra argument *\/$/;"	m	struct:sPragmaNames
iArg	src/vdbeInt.h	/^  int iArg;                       \/* Index of function argument. *\/$/;"	m	struct:AuxData
iArg	tsrc/pragma.h	/^  u32 iArg;                 \/* Extra argument *\/$/;"	m	struct:sPragmaNames
iArg	tsrc/vdbeInt.h	/^  int iArg;                       \/* Index of function argument. *\/$/;"	m	struct:AuxData
iBatch	sqlite3.c	/^  int iBatch;                    \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBatch	src/rowset.c	/^  int iBatch;                    \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBatch	tsrc/rowset.c	/^  int iBatch;                    \/* Current insert batch *\/$/;"	m	struct:RowSet	file:
iBegin	ext/misc/json1.c	/^  u32 iBegin;                \/* The first node of the scan *\/$/;"	m	struct:JsonEachCursor	file:
iBegin	shell.c	/^static sqlite3_int64 iBegin;  \/* Wall-clock time at start *\/$/;"	v	file:
iBegin	sqlite3.c	/^  u32 iBegin;                \/* The first node of the scan *\/$/;"	m	struct:JsonEachCursor	file:
iBegin	src/shell.c	/^static sqlite3_int64 iBegin;  \/* Wall-clock time at start *\/$/;"	v	file:
iBegin	tsrc/json1.c	/^  u32 iBegin;                \/* The first node of the scan *\/$/;"	m	struct:JsonEachCursor	file:
iBegin	tsrc/shell.c	/^static sqlite3_int64 iBegin;  \/* Wall-clock time at start *\/$/;"	v	file:
iBlock	ext/fts3/fts3_write.c	/^  sqlite3_int64 iBlock;           \/* Current block id *\/$/;"	m	struct:NodeWriter	file:
iBlock	sqlite3.c	/^  sqlite3_int64 iBlock;           \/* Current block id *\/$/;"	m	struct:NodeWriter	file:
iBlock	tsrc/fts3_write.c	/^  sqlite3_int64 iBlock;           \/* Current block id *\/$/;"	m	struct:NodeWriter	file:
iBlockid	ext/fts2/fts2.c	/^  sqlite_int64 iBlockid;$/;"	m	struct:InteriorReader	file:
iBlockid	tsrc/fts2.c	/^  sqlite_int64 iBlockid;$/;"	m	struct:InteriorReader	file:
iBreak	sqlite3.c	/^  int iBreak;               \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo	file:
iBreak	src/whereInt.h	/^  int iBreak;               \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo
iBreak	tsrc/whereInt.h	/^  int iBreak;               \/* Jump here to break out of the loop *\/$/;"	m	struct:WhereInfo
iBtPage	ext/fts5/fts5_index.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBtPage	fts5.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBtPage	sqlite3.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBtPage	tsrc/fts5.c	/^  int iBtPage;                    \/* Page number corresponding to btterm *\/$/;"	m	struct:Fts5SegWriter	file:
iBufEnd	sqlite3.c	/^  int iBufEnd;                    \/* Last byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufEnd	src/vdbesort.c	/^  int iBufEnd;                    \/* Last byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufEnd	tsrc/vdbesort.c	/^  int iBufEnd;                    \/* Last byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufStart	sqlite3.c	/^  int iBufStart;                  \/* First byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufStart	src/vdbesort.c	/^  int iBufStart;                  \/* First byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufStart	tsrc/vdbesort.c	/^  int iBufStart;                  \/* First byte of buffer to write *\/$/;"	m	struct:PmaWriter	file:
iBufferOfst	src/test_demovfs.c	/^  sqlite3_int64 iBufferOfst;      \/* Offset in file of zBuffer[0] *\/$/;"	m	struct:DemoFile	file:
iCacheCnt	sqlite3.c	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse	file:
iCacheCnt	src/sqliteInt.h	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse
iCacheCnt	tsrc/sqliteInt.h	/^  int iCacheCnt;       \/* Counter used to generate aColCache[].lru values *\/$/;"	m	struct:Parse
iCacheLevel	sqlite3.c	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse	file:
iCacheLevel	src/sqliteInt.h	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse
iCacheLevel	tsrc/sqliteInt.h	/^  int iCacheLevel;     \/* ColCache valid when aColCache[].iLevel<=iCacheLevel *\/$/;"	m	struct:Parse
iCallback	sqlite3.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCallback	src/wal.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCallback	tsrc/wal.c	/^  u32 iCallback;             \/* Value to pass to log callback (or 0) *\/$/;"	m	struct:Wal	file:
iCell	ext/rtree/rtree.c	/^  u8 iCell;              \/* Cell index within the node *\/$/;"	m	struct:RtreeSearchPoint	file:
iCell	sqlite3.c	/^  int iCell;$/;"	m	struct:StatPage	file:
iCell	sqlite3.c	/^  u8 iCell;              \/* Cell index within the node *\/$/;"	m	struct:RtreeSearchPoint	file:
iCell	src/dbstat.c	/^  int iCell;$/;"	m	struct:StatPage	file:
iCell	tsrc/dbstat.c	/^  int iCell;$/;"	m	struct:StatPage	file:
iCell	tsrc/rtree.c	/^  u8 iCell;              \/* Cell index within the node *\/$/;"	m	struct:RtreeSearchPoint	file:
iChange	sqlite3.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iChange	src/wal.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iChange	tsrc/wal.c	/^  u32 iChange;                    \/* Counter incremented each transaction *\/$/;"	m	struct:WalIndexHdr	file:
iChild	ext/fts3/fts3_write.c	/^  sqlite3_int64 iChild;           \/* Pointer to child node *\/$/;"	m	struct:NodeReader	file:
iChild	sqlite3.c	/^  sqlite3_int64 iChild;           \/* Pointer to child node *\/$/;"	m	struct:NodeReader	file:
iChild	tsrc/fts3_write.c	/^  sqlite3_int64 iChild;           \/* Pointer to child node *\/$/;"	m	struct:NodeReader	file:
iChildPg	sqlite3.c	/^  u32 iChildPg;                   \/* Child node (or 0 if this is a leaf) *\/$/;"	m	struct:StatCell	file:
iChildPg	src/dbstat.c	/^  u32 iChildPg;                   \/* Child node (or 0 if this is a leaf) *\/$/;"	m	struct:StatCell	file:
iChildPg	tsrc/dbstat.c	/^  u32 iChildPg;                   \/* Child node (or 0 if this is a leaf) *\/$/;"	m	struct:StatCell	file:
iClock	src/test_sqllog.c	/^  int iClock;                     \/* Clock value *\/$/;"	m	struct:SLGlobal	file:
iCnt	ext/misc/carray.c	/^  sqlite3_int64 iCnt;        \/* Number of integers in the array *\/$/;"	m	struct:carray_cursor	file:
iCnt	src/test_vfs.c	/^  int iCnt;                       \/* Remaining calls before fault injection *\/$/;"	m	struct:TestFaultInject	file:
iCol	ext/fts1/fts1.c	/^    short int iCol;      \/* The column that contains the match *\/$/;"	m	struct:Snippet::snippetMatch	file:
iCol	ext/fts2/fts2.c	/^    short int iCol;      \/* The column that contains the match *\/$/;"	m	struct:Snippet::snippetMatch	file:
iCol	ext/fts3/fts3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	ext/fts3/fts3Int.h	/^  int iCol;$/;"	m	struct:Fts3SegFilter
iCol	ext/fts3/fts3_aux.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	ext/fts3/fts3_snippet.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	ext/fts3/fts3_snippet.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	ext/fts3/fts3_snippet.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	ext/fts3/fts3_term.c	/^  int iCol;                       \/* Current 'col' value *\/$/;"	m	struct:Fts3termCursor	file:
iCol	ext/fts3/fts3_write.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	ext/fts5/fts5_aux.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	ext/fts5/fts5_hash.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	ext/fts5/fts5_storage.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	ext/fts5/fts5_storage.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	ext/fts5/fts5_vocab.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iCol	fts5.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	fts5.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	fts5.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	fts5.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	fts5.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iCol	sqlite3.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	sqlite3.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	sqlite3.c	/^  int iCol;                       \/* If !isPSample, the reason for inclusion *\/$/;"	m	struct:Stat4Sample	file:
iCol	sqlite3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	sqlite3.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iCol	sqlite3.c	/^  int iCol;$/;"	m	struct:Fts3SegFilter	file:
iCol	sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	sqlite3.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iCol	src/analyze.c	/^  int iCol;                       \/* If !isPSample, the reason for inclusion *\/$/;"	m	struct:Stat4Sample	file:
iCol	src/vdbeblob.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iCol	tool/offsets.c	/^  int iCol;             \/* Column number for the column *\/$/;"	m	struct:GState	file:
iCol	tsrc/analyze.c	/^  int iCol;                       \/* If !isPSample, the reason for inclusion *\/$/;"	m	struct:Stat4Sample	file:
iCol	tsrc/fts1.c	/^    short int iCol;      \/* The column that contains the match *\/$/;"	m	struct:Snippet::snippetMatch	file:
iCol	tsrc/fts2.c	/^    short int iCol;      \/* The column that contains the match *\/$/;"	m	struct:Snippet::snippetMatch	file:
iCol	tsrc/fts3.c	/^  int iCol;                       \/* The column the token must match *\/$/;"	m	struct:Fts3TokenAndCost	file:
iCol	tsrc/fts3Int.h	/^  int iCol;$/;"	m	struct:Fts3SegFilter
iCol	tsrc/fts3_aux.c	/^  int iCol;                       \/* Current value of 'col' column *\/$/;"	m	struct:Fts3auxCursor	file:
iCol	tsrc/fts3_snippet.c	/^  int iCol;                       \/* Column of table to populate aTerm for *\/$/;"	m	struct:TermOffsetCtx	file:
iCol	tsrc/fts3_snippet.c	/^  int iCol;                       \/* Column snippet is extracted from *\/$/;"	m	struct:SnippetFragment	file:
iCol	tsrc/fts3_snippet.c	/^  int iCol;                       \/* Extract snippet from this column *\/$/;"	m	struct:SnippetIter	file:
iCol	tsrc/fts3_write.c	/^  int iCol;                       \/* Column token must occur in *\/$/;"	m	struct:Fts3DeferredToken	file:
iCol	tsrc/fts5.c	/^  i16 iCol;                       \/* Column of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iCol	tsrc/fts5.c	/^  int iCol;                       \/* Column to search *\/$/;"	m	struct:CInstIter	file:
iCol	tsrc/fts5.c	/^  int iCol;$/;"	m	struct:Fts5InsertCtx	file:
iCol	tsrc/fts5.c	/^  int iCol;$/;"	m	struct:Fts5IntegrityCtx	file:
iCol	tsrc/fts5.c	/^  int iCol;$/;"	m	struct:Fts5VocabCursor	file:
iCol	tsrc/vdbeblob.c	/^  int iCol;               \/* Table column this handle is open on *\/$/;"	m	struct:Incrblob	file:
iColFilter	ext/fts3/fts3Int.h	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader
iColFilter	sqlite3.c	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader	file:
iColFilter	tsrc/fts3Int.h	/^  int iColFilter;                 \/* If >=0, filter for this column *\/$/;"	m	struct:Fts3MultiSegReader
iColumn	ext/fts1/fts1.c	/^  int iColumn;                     \/* Column being searched *\/$/;"	m	struct:fulltext_cursor	file:
iColumn	ext/fts1/fts1.c	/^  short int iColumn; \/* Column of the index that must match this term *\/$/;"	m	struct:QueryTerm	file:
iColumn	ext/fts2/fts2.c	/^  int iColumn;                     \/* Column being searched *\/$/;"	m	struct:fulltext_cursor	file:
iColumn	ext/fts2/fts2.c	/^  int iColumn;         \/* the last column read *\/$/;"	m	struct:PLReader	file:
iColumn	ext/fts2/fts2.c	/^  int iColumn;    \/* the last column written *\/$/;"	m	struct:PLWriter	file:
iColumn	ext/fts2/fts2.c	/^  short int iColumn; \/* Column of the index that must match this term *\/$/;"	m	struct:QueryTerm	file:
iColumn	ext/fts3/fts3Int.h	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase
iColumn	sqlite3.c	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iColumn	sqlite3.c	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby	file:
iColumn	sqlite3.c	/^    i16 iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache	file:
iColumn	sqlite3.c	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iColumn	sqlite3.c	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase	file:
iColumn	sqlite3.c	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr	file:
iColumn	sqlite3.h	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iColumn	sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	src/sqliteInt.h	/^    i16 iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache
iColumn	src/sqliteInt.h	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col
iColumn	src/sqliteInt.h	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr
iColumn	tsrc/fts1.c	/^  int iColumn;                     \/* Column being searched *\/$/;"	m	struct:fulltext_cursor	file:
iColumn	tsrc/fts1.c	/^  short int iColumn; \/* Column of the index that must match this term *\/$/;"	m	struct:QueryTerm	file:
iColumn	tsrc/fts2.c	/^  int iColumn;                     \/* Column being searched *\/$/;"	m	struct:fulltext_cursor	file:
iColumn	tsrc/fts2.c	/^  int iColumn;         \/* the last column read *\/$/;"	m	struct:PLReader	file:
iColumn	tsrc/fts2.c	/^  int iColumn;    \/* the last column written *\/$/;"	m	struct:PLWriter	file:
iColumn	tsrc/fts2.c	/^  short int iColumn; \/* Column of the index that must match this term *\/$/;"	m	struct:QueryTerm	file:
iColumn	tsrc/fts3Int.h	/^  int iColumn;               \/* Index of column this phrase must match *\/$/;"	m	struct:Fts3Phrase
iColumn	tsrc/sqlite3.h	/^     int iColumn;              \/* Column constrained.  -1 for ROWID *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iColumn	tsrc/sqlite3.h	/^     int iColumn;              \/* Column number *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_orderby
iColumn	tsrc/sqliteInt.h	/^    i16 iColumn;          \/* Table column number *\/$/;"	m	struct:Parse::yColCache
iColumn	tsrc/sqliteInt.h	/^    int iColumn;             \/* Column number within the source table *\/$/;"	m	struct:AggInfo::AggInfo_col
iColumn	tsrc/sqliteInt.h	/^  ynVar iColumn;         \/* TK_COLUMN: column index.  -1 for rowid.$/;"	m	struct:Expr
iConstExprReg	sqlite3.c	/^      int iConstExprReg;      \/* Register in which Expr value is cached *\/$/;"	m	union:ExprList::ExprList_item::__anon82	file:
iConstExprReg	src/sqliteInt.h	/^      int iConstExprReg;      \/* Register in which Expr value is cached *\/$/;"	m	union:ExprList::ExprList_item::__anon56
iConstExprReg	tsrc/sqliteInt.h	/^      int iConstExprReg;      \/* Register in which Expr value is cached *\/$/;"	m	union:ExprList::ExprList_item::__anon24
iContinue	sqlite3.c	/^  int iContinue;            \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo	file:
iContinue	src/whereInt.h	/^  int iContinue;            \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo
iContinue	tsrc/whereInt.h	/^  int iContinue;            \/* Jump here to continue with next record *\/$/;"	m	struct:WhereInfo
iCookie	ext/fts5/fts5Int.h	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config
iCookie	ext/rbu/sqlite3rbu.c	/^  u32 iCookie;                    \/* Cookie value for main db files *\/$/;"	m	struct:rbu_file	file:
iCookie	ext/rbu/sqlite3rbu.c	/^  u32 iCookie;$/;"	m	struct:RbuState	file:
iCookie	fts5.c	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config	file:
iCookie	sqlite3.c	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config	file:
iCookie	sqlite3.c	/^  u32 iCookie;                    \/* Cookie value for main db files *\/$/;"	m	struct:rbu_file	file:
iCookie	sqlite3.c	/^  u32 iCookie;$/;"	m	struct:RbuState	file:
iCookie	tsrc/fts5.c	/^  int iCookie;                    \/* Incremented when %_config is modified *\/$/;"	m	struct:Fts5Config	file:
iCookie	tsrc/sqlite3rbu.c	/^  u32 iCookie;                    \/* Cookie value for main db files *\/$/;"	m	struct:rbu_file	file:
iCookie	tsrc/sqlite3rbu.c	/^  u32 iCookie;$/;"	m	struct:RbuState	file:
iCoord	ext/rtree/rtree.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCoord	sqlite3.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCoord	tsrc/rtree.c	/^  int iCoord;                     \/* Index of constrained coordinate *\/$/;"	m	struct:RtreeConstraint	file:
iCost	ext/misc/spellfix.c	/^  u16 iCost;                \/* Cost of this transformation *\/$/;"	m	struct:EditDist3Cost	file:
iCountdown	src/test_malloc.c	/^  int iCountdown;         \/* Number of pending successes before a failure *\/$/;"	m	struct:MemFault	file:
iCrash	src/test6.c	/^  int iCrash;                  \/* Crash on the iCrash'th call to xSync() *\/$/;"	m	struct:CrashGlobal	file:
iCsrId	ext/fts5/fts5_main.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCsrId	fts5.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCsrId	sqlite3.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCsrId	tsrc/fts5.c	/^  i64 iCsrId;                     \/* Cursor id *\/$/;"	m	struct:Fts5Cursor	file:
iCur	sqlite3.c	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon96::__anon97::InLoop	file:
iCur	sqlite3.c	/^    int iCur;                                  \/* A cursor number *\/$/;"	m	union:Walker::__anon87	file:
iCur	sqlite3.c	/^  int iCur;        \/* Cursor number for the table corresponding to the index *\/$/;"	m	struct:IdxCover	file:
iCur	src/expr.c	/^  int iCur;        \/* Cursor number for the table corresponding to the index *\/$/;"	m	struct:IdxCover	file:
iCur	src/sqliteInt.h	/^    int iCur;                                  \/* A cursor number *\/$/;"	m	union:Walker::__anon61
iCur	src/whereInt.h	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon45::__anon46::InLoop
iCur	tsrc/expr.c	/^  int iCur;        \/* Cursor number for the table corresponding to the index *\/$/;"	m	struct:IdxCover	file:
iCur	tsrc/sqliteInt.h	/^    int iCur;                                  \/* A cursor number *\/$/;"	m	union:Walker::__anon29
iCur	tsrc/whereInt.h	/^        int iCur;              \/* The VDBE cursor used by this IN operator *\/$/;"	m	struct:WhereLevel::__anon10::__anon11::InLoop
iCurrent	ext/fts3/fts3_snippet.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrent	ext/session/sqlite3session.c	/^  int iCurrent;                   \/* Offset in aData[] of current change *\/$/;"	m	struct:SessionInput	file:
iCurrent	sqlite3.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrent	sqlite3.c	/^  int iCurrent;                   \/* Offset in aData[] of current change *\/$/;"	m	struct:SessionInput	file:
iCurrent	tsrc/fts3_snippet.c	/^  int iCurrent;                   \/* First token of current snippet *\/$/;"	m	struct:SnippetIter	file:
iCurrent	tsrc/sqlite3session.c	/^  int iCurrent;                   \/* Offset in aData[] of current change *\/$/;"	m	struct:SessionInput	file:
iCurrentBlock	ext/fts3/fts3_write.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCurrentBlock	sqlite3.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCurrentBlock	tsrc/fts3_write.c	/^  sqlite3_int64 iCurrentBlock;    \/* Current leaf block (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iCurrentTime	sqlite3.c	/^  i64 iCurrentTime;       \/* Value of julianday('now') for this statement *\/$/;"	m	struct:Vdbe	file:
iCurrentTime	src/vdbeInt.h	/^  i64 iCurrentTime;       \/* Value of julianday('now') for this statement *\/$/;"	m	struct:Vdbe
iCurrentTime	tsrc/vdbeInt.h	/^  i64 iCurrentTime;       \/* Value of julianday('now') for this statement *\/$/;"	m	struct:Vdbe
iCursor	sqlite3.c	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
iCursor	src/sqliteInt.h	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item
iCursor	tsrc/sqliteInt.h	/^    int iCursor;      \/* The VDBE cursor number used to access this table *\/$/;"	m	struct:SrcList::SrcList_item
iCursorType	ext/fts1/fts1.c	/^  QueryType iCursorType;           \/* Copy of sqlite3_index_info.idxNum *\/$/;"	m	struct:fulltext_cursor	file:
iCursorType	ext/fts1/fulltext.c	/^  int iCursorType;  \/* QUERY_GENERIC or QUERY_FULLTEXT *\/$/;"	m	struct:fulltext_cursor	file:
iCursorType	ext/fts2/fts2.c	/^  QueryType iCursorType;           \/* Copy of sqlite3_index_info.idxNum *\/$/;"	m	struct:fulltext_cursor	file:
iCursorType	tsrc/fts1.c	/^  QueryType iCursorType;           \/* Copy of sqlite3_index_info.idxNum *\/$/;"	m	struct:fulltext_cursor	file:
iCursorType	tsrc/fts2.c	/^  QueryType iCursorType;           \/* Copy of sqlite3_index_info.idxNum *\/$/;"	m	struct:fulltext_cursor	file:
iData	ext/session/test_session.c	/^  int iData;                      \/* Bytes of data already read by sessions *\/$/;"	m	struct:TestStreamInput	file:
iDataVersion	sqlite3.c	/^  u32 iDataVersion;           \/* Changes whenever database content changes *\/$/;"	m	struct:Pager	file:
iDataVersion	sqlite3.c	/^  u32 iDataVersion;  \/* Combines with pBt->pPager->iDataVersion *\/$/;"	m	struct:Btree	file:
iDataVersion	src/btreeInt.h	/^  u32 iDataVersion;  \/* Combines with pBt->pPager->iDataVersion *\/$/;"	m	struct:Btree
iDataVersion	src/pager.c	/^  u32 iDataVersion;           \/* Changes whenever database content changes *\/$/;"	m	struct:Pager	file:
iDataVersion	tsrc/btreeInt.h	/^  u32 iDataVersion;  \/* Combines with pBt->pPager->iDataVersion *\/$/;"	m	struct:Btree
iDataVersion	tsrc/pager.c	/^  u32 iDataVersion;           \/* Changes whenever database content changes *\/$/;"	m	struct:Pager	file:
iDb	sqlite3.c	/^    u8 iDb;                     \/* Which db file is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
iDb	sqlite3.c	/^  i8 iDb;               \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor	file:
iDb	sqlite3.c	/^  int iDb;                        \/* Index of database to analyze *\/$/;"	m	struct:StatTable	file:
iDb	sqlite3.c	/^  int iDb;                        \/* Schema used for this query *\/$/;"	m	struct:StatCursor	file:
iDb	sqlite3.c	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo	file:
iDb	sqlite3.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	sqlite3.c	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon86	file:
iDb	src/build.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	src/dbstat.c	/^  int iDb;                        \/* Index of database to analyze *\/$/;"	m	struct:StatTable	file:
iDb	src/dbstat.c	/^  int iDb;                        \/* Schema used for this query *\/$/;"	m	struct:StatCursor	file:
iDb	src/sqliteInt.h	/^    u8 iDb;                     \/* Which db file is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
iDb	src/sqliteInt.h	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo
iDb	src/sqliteInt.h	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon60
iDb	src/vdbeInt.h	/^  i8 iDb;               \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor
iDb	tsrc/build.c	/^  int iDb;             \/* The database containing the table to be locked *\/$/;"	m	struct:TableLock	file:
iDb	tsrc/dbstat.c	/^  int iDb;                        \/* Index of database to analyze *\/$/;"	m	struct:StatTable	file:
iDb	tsrc/dbstat.c	/^  int iDb;                        \/* Schema used for this query *\/$/;"	m	struct:StatCursor	file:
iDb	tsrc/sqliteInt.h	/^    u8 iDb;                     \/* Which db file is being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
iDb	tsrc/sqliteInt.h	/^  int iDb;              \/* Index in sqlite3.aDb[] of database holding pTab *\/$/;"	m	struct:AutoincInfo
iDb	tsrc/sqliteInt.h	/^  int iDb;            \/* 0 for main database.  1 for TEMP, 2.. for ATTACHed *\/$/;"	m	struct:__anon28
iDb	tsrc/vdbeInt.h	/^  i8 iDb;               \/* Index of cursor database in db->aDb[] (or -1) *\/$/;"	m	struct:VdbeCursor
iDbPage	ext/rbu/sqlite3rbu.c	/^  u32 iDbPage;$/;"	m	struct:RbuFrame	file:
iDbPage	sqlite3.c	/^  u32 iDbPage;$/;"	m	struct:RbuFrame	file:
iDbPage	tsrc/sqlite3rbu.c	/^  u32 iDbPage;$/;"	m	struct:RbuFrame	file:
iDefaultCol	ext/fts3/fts3_expr.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDefaultCol	sqlite3.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDefaultCol	tsrc/fts3_expr.c	/^  int iDefaultCol;                    \/* Default column to query *\/$/;"	m	struct:ParseContext	file:
iDelCost	ext/misc/spellfix.c	/^  int iDelCost;          \/* Default deletion cost *\/$/;"	m	struct:EditDist3Lang	file:
iDepth	ext/rtree/rtree.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDepth	sqlite3.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDepth	tsrc/rtree.c	/^  int iDepth;                 \/* Current depth of the r-tree structure *\/$/;"	m	struct:Rtree	file:
iDestSchema	sqlite3.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDestSchema	src/backup.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDestSchema	tsrc/backup.c	/^  u32 iDestSchema;         \/* Original schema cookie in destination *\/$/;"	m	struct:sqlite3_backup	file:
iDevchar	src/test_vfs.c	/^  int iDevchar;$/;"	m	struct:Testvfs	file:
iDeviceChar	src/test_devsym.c	/^  int iDeviceChar;$/;"	m	struct:DevsymGlobal	file:
iDeviceCharacteristics	src/test6.c	/^  int iDeviceCharacteristics;  \/* Value of simulated device characteristics *\/$/;"	m	struct:CrashGlobal	file:
iDfltReduce	tool/lemon.c	/^  int iDfltReduce;         \/* Default action is to REDUCE by this rule *\/$/;"	m	struct:state	file:
iDistance	ext/misc/spellfix.c	/^    int iDistance;                \/* Distance from pattern for this row *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
iDistinct	sqlite3.c	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iDistinct	src/sqliteInt.h	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func
iDistinct	tsrc/sqliteInt.h	/^    int iDistinct;           \/* Ephemeral table used to enforce DISTINCT *\/$/;"	m	struct:AggInfo::AggInfo_func
iDivisor	sqlite3.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDivisor	src/bitvec.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDivisor	tsrc/bitvec.c	/^  u32 iDivisor;   \/* Number of bits handled by each apSub[] entry. *\/$/;"	m	struct:Bitvec	file:
iDocid	ext/fts2/fts2.c	/^  sqlite_int64 iDocid;$/;"	m	struct:DLReader	file:
iDocid	ext/fts3/fts3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TokenDoclist	file:
iDocid	ext/fts3/fts3Int.h	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist
iDocid	ext/fts3/fts3Int.h	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr
iDocid	ext/fts3/fts3_snippet.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDocid	ext/fts3/fts3_term.c	/^  sqlite3_int64 iDocid;           \/* Current 'docid' value *\/$/;"	m	struct:Fts3termCursor	file:
iDocid	ext/fts3/fts3_write.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	sqlite3.c	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist	file:
iDocid	sqlite3.c	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr	file:
iDocid	sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDocid	sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDocid	sqlite3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TokenDoclist	file:
iDocid	tsrc/fts2.c	/^  sqlite_int64 iDocid;$/;"	m	struct:DLReader	file:
iDocid	tsrc/fts3.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TokenDoclist	file:
iDocid	tsrc/fts3Int.h	/^  sqlite3_int64 iDocid;          \/* Current docid (if pList!=0) *\/$/;"	m	struct:Fts3Doclist
iDocid	tsrc/fts3Int.h	/^  sqlite3_int64 iDocid;      \/* Current docid *\/$/;"	m	struct:Fts3Expr
iDocid	tsrc/fts3_snippet.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:TermOffsetCtx	file:
iDocid	tsrc/fts3_write.c	/^  sqlite3_int64 iDocid;$/;"	m	struct:Fts3SegReader	file:
iDoclistToken	ext/fts3/fts3Int.h	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase
iDoclistToken	sqlite3.c	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase	file:
iDoclistToken	tsrc/fts3Int.h	/^  int iDoclistToken;$/;"	m	struct:Fts3Phrase
iECursor	sqlite3.c	/^  int iECursor;         \/* Cursor number for the sorter *\/$/;"	m	struct:SortCtx	file:
iECursor	src/select.c	/^  int iECursor;         \/* Cursor number for the sorter *\/$/;"	m	struct:SortCtx	file:
iECursor	tsrc/select.c	/^  int iECursor;         \/* Cursor number for the sorter *\/$/;"	m	struct:SortCtx	file:
iEnd	ext/fts3/fts3_tokenize_vtab.c	/^  int iEnd;                       \/* Current 'end' value *\/$/;"	m	struct:Fts3tokCursor	file:
iEnd	ext/fts3/fts3_write.c	/^  sqlite3_int64 iEnd;             \/* Block number of last allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iEnd	ext/fts5/fts5_aux.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	ext/fts5/fts5_test_tok.c	/^  int iEnd;$/;"	m	struct:Fts5tokRow	file:
iEnd	ext/misc/json1.c	/^  u32 iEnd;                  \/* EOF when i equals or exceeds this value *\/$/;"	m	struct:JsonEachCursor	file:
iEnd	fts5.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	sqlite3.c	/^  int iEnd;                       \/* Current 'end' value *\/$/;"	m	struct:Fts3tokCursor	file:
iEnd	sqlite3.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	sqlite3.c	/^  sqlite3_int64 iEnd;             \/* Block number of last allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iEnd	sqlite3.c	/^  u32 iEnd;                  \/* EOF when i equals or exceeds this value *\/$/;"	m	struct:JsonEachCursor	file:
iEnd	tsrc/fts3_tokenize_vtab.c	/^  int iEnd;                       \/* Current 'end' value *\/$/;"	m	struct:Fts3tokCursor	file:
iEnd	tsrc/fts3_write.c	/^  sqlite3_int64 iEnd;             \/* Block number of last allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iEnd	tsrc/fts5.c	/^  int iEnd;                       \/* Last token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iEnd	tsrc/json1.c	/^  u32 iEnd;                  \/* EOF when i equals or exceeds this value *\/$/;"	m	struct:JsonEachCursor	file:
iEndBlock	ext/fts3/fts3_write.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEndBlock	sqlite3.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEndBlock	tsrc/fts3_write.c	/^  sqlite3_int64 iEndBlock;        \/* Rowid of final block in segment (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
iEndBlockid	ext/fts2/fts2.c	/^  sqlite_int64 iEndBlockid;       \/* when we're done writing. *\/$/;"	m	struct:LeafWriter	file:
iEndBlockid	tsrc/fts2.c	/^  sqlite_int64 iEndBlockid;       \/* when we're done writing. *\/$/;"	m	struct:LeafWriter	file:
iEndOffset	ext/fts2/fts2.c	/^  int iEndOffset;      \/* the last end offset read *\/$/;"	m	struct:PLReader	file:
iEndOffset	tsrc/fts2.c	/^  int iEndOffset;      \/* the last end offset read *\/$/;"	m	struct:PLReader	file:
iEndofDoclist	ext/fts5/fts5_index.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEndofDoclist	fts5.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEndofDoclist	sqlite3.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEndofDoclist	tsrc/fts5.c	/^  int iEndofDoclist;$/;"	m	struct:Fts5SegIter	file:
iEof	sqlite3.c	/^  i64 iEof;                       \/* Bytes of data stored in pFd *\/$/;"	m	struct:SorterFile	file:
iEof	sqlite3.c	/^  i64 iEof;                   \/* 1 byte past EOF for this PmaReader *\/$/;"	m	struct:PmaReader	file:
iEof	src/vdbesort.c	/^  i64 iEof;                       \/* Bytes of data stored in pFd *\/$/;"	m	struct:SorterFile	file:
iEof	src/vdbesort.c	/^  i64 iEof;                   \/* 1 byte past EOF for this PmaReader *\/$/;"	m	struct:PmaReader	file:
iEof	tsrc/vdbesort.c	/^  i64 iEof;                       \/* Bytes of data stored in pFd *\/$/;"	m	struct:SorterFile	file:
iEof	tsrc/vdbesort.c	/^  i64 iEof;                   \/* 1 byte past EOF for this PmaReader *\/$/;"	m	struct:PmaReader	file:
iEquiv	sqlite3.c	/^  unsigned char iEquiv;      \/* Next unused slot in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
iEquiv	src/whereInt.h	/^  unsigned char iEquiv;      \/* Next unused slot in aEquiv[] *\/$/;"	m	struct:WhereScan
iEquiv	tsrc/whereInt.h	/^  unsigned char iEquiv;      \/* Next unused slot in aEquiv[] *\/$/;"	m	struct:WhereScan
iFileId	src/test_osinst.c	/^  int iFileId;                    \/* File id number *\/$/;"	m	struct:VfslogFile	file:
iFirst	ext/fts3/fts3_write.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iFirst	ext/fts5/fts5_index.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirst	fts5.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirst	sqlite3.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iFirst	sqlite3.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirst	tsrc/fts3_write.c	/^  sqlite3_int64 iFirst;           \/* First slot in %_segments written *\/$/;"	m	struct:SegmentWriter	file:
iFirst	tsrc/fts5.c	/^  u16 iFirst;                     \/* aSeg[] index of firstest iterator *\/$/;"	m	struct:Fts5CResult	file:
iFirstOff	ext/fts5/fts5_index.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstOff	fts5.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstOff	sqlite3.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstOff	tsrc/fts5.c	/^  int iFirstOff;                \/* Used by reverse iterators *\/$/;"	m	struct:Fts5DlidxLvl	file:
iFirstRowid	ext/fts5/fts5_main.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iFirstRowid	fts5.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iFirstRowid	sqlite3.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iFirstRowid	tsrc/fts5.c	/^  i64 iFirstRowid;                \/* Return no rowids earlier than this *\/$/;"	m	struct:Fts5Cursor	file:
iFixedOp	sqlite3.c	/^  int iFixedOp;        \/* Never back out opcodes iFixedOp-1 or earlier *\/$/;"	m	struct:Parse	file:
iFixedOp	src/sqliteInt.h	/^  int iFixedOp;        \/* Never back out opcodes iFixedOp-1 or earlier *\/$/;"	m	struct:Parse
iFixedOp	tsrc/sqliteInt.h	/^  int iFixedOp;        \/* Never back out opcodes iFixedOp-1 or earlier *\/$/;"	m	struct:Parse
iForeGuard	sqlite3.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iForeGuard	src/mem2.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iForeGuard	tsrc/mem2.c	/^  int iForeGuard;                     \/* Guard word for sanity *\/$/;"	m	struct:MemBlockHdr	file:
iFree	ext/fts3/fts3_write.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFree	sqlite3.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFree	tsrc/fts3_write.c	/^  sqlite3_int64 iFree;            \/* Next free slot in %_segments *\/$/;"	m	struct:SegmentWriter	file:
iFrom	sqlite3.c	/^    int iFrom;            \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap	file:
iFrom	sqlite3.c	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel	file:
iFrom	src/sqliteInt.h	/^    int iFrom;            \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap
iFrom	src/whereInt.h	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel
iFrom	tsrc/sqliteInt.h	/^    int iFrom;            \/* Index of column in pFrom *\/$/;"	m	struct:FKey::sColMap
iFrom	tsrc/whereInt.h	/^  u8 iFrom;             \/* Which entry in the FROM clause *\/$/;"	m	struct:WhereLevel
iGeneration	ext/misc/closure.c	/^  int iGeneration;      \/* Which generation is this entry part of *\/$/;"	m	struct:closure_avl	file:
iGeneration	sqlite3.c	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema	file:
iGeneration	src/sqliteInt.h	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema
iGeneration	tsrc/sqliteInt.h	/^  int iGeneration;     \/* Generation counter.  Incremented with each change *\/$/;"	m	struct:Schema
iGet	sqlite3.c	/^  int iGet;                 \/* Index of current sample accessed by stat_get() *\/$/;"	m	struct:Stat4Accum	file:
iGet	src/analyze.c	/^  int iGet;                 \/* Index of current sample accessed by stat_get() *\/$/;"	m	struct:Stat4Accum	file:
iGet	tsrc/analyze.c	/^  int iGet;                 \/* Index of current sample accessed by stat_get() *\/$/;"	m	struct:Stat4Accum	file:
iHash	sqlite3.c	/^  u32 iHash;                      \/* Tiebreaker hash *\/$/;"	m	struct:Stat4Sample	file:
iHash	src/analyze.c	/^  u32 iHash;                      \/* Tiebreaker hash *\/$/;"	m	struct:Stat4Sample	file:
iHash	tsrc/analyze.c	/^  u32 iHash;                      \/* Tiebreaker hash *\/$/;"	m	struct:Stat4Sample	file:
iHdrOffset	sqlite3.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHdrOffset	sqlite3.c	/^  u32 iHdrOffset;       \/* Offset to next unparsed byte of the header *\/$/;"	m	struct:VdbeCursor	file:
iHdrOffset	src/pager.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHdrOffset	src/vdbeInt.h	/^  u32 iHdrOffset;       \/* Offset to next unparsed byte of the header *\/$/;"	m	struct:VdbeCursor
iHdrOffset	tsrc/pager.c	/^  i64 iHdrOffset;              \/* See above *\/$/;"	m	struct:PagerSavepoint	file:
iHdrOffset	tsrc/vdbeInt.h	/^  u32 iHdrOffset;       \/* Offset to next unparsed byte of the header *\/$/;"	m	struct:VdbeCursor
iHead	ext/fts3/fts3_snippet.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iHead	sqlite3.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iHead	tsrc/fts3_snippet.c	/^  int iHead;                      \/* Next value in position list *\/$/;"	m	struct:SnippetPhrase	file:
iHeight	ext/fts2/fts2.c	/^  int iHeight;                   \/* from 0 at leaves. *\/$/;"	m	struct:InteriorWriter	file:
iHeight	tsrc/fts2.c	/^  int iHeight;                   \/* from 0 at leaves. *\/$/;"	m	struct:InteriorWriter	file:
iIdx	ext/fts3/fts3_write.c	/^  int iIdx;                       \/* Index of *output* segment in iAbsLevel+1 *\/$/;"	m	struct:IncrmergeWriter	file:
iIdx	ext/fts3/fts3_write.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdx	ext/fts5/fts5_buffer.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdx	fts5.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdx	sqlite3.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdx	sqlite3.c	/^  int iIdx;                       \/* Index of *output* segment in iAbsLevel+1 *\/$/;"	m	struct:IncrmergeWriter	file:
iIdx	sqlite3.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdx	tsrc/fts3_write.c	/^  int iIdx;                       \/* Index of *output* segment in iAbsLevel+1 *\/$/;"	m	struct:IncrmergeWriter	file:
iIdx	tsrc/fts3_write.c	/^  int iIdx;                       \/* Index within level, or 0x7FFFFFFF for PT *\/$/;"	m	struct:Fts3SegReader	file:
iIdx	tsrc/fts5.c	/^  int iIdx;                       \/* Index (main or aPrefix[] entry) *\/$/;"	m	struct:Fts5TermsetEntry	file:
iIdxCur	sqlite3.c	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel	file:
iIdxCur	sqlite3.c	/^  int iIdxCur;    \/* Cursor for the index, if pIdx!=0.  Unused otherwise *\/$/;"	m	struct:CCurHint	file:
iIdxCur	src/whereInt.h	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel
iIdxCur	src/wherecode.c	/^  int iIdxCur;    \/* Cursor for the index, if pIdx!=0.  Unused otherwise *\/$/;"	m	struct:CCurHint	file:
iIdxCur	tsrc/whereInt.h	/^  int iIdxCur;          \/* The VDBE cursor used to access pIdx *\/$/;"	m	struct:WhereLevel
iIdxCur	tsrc/wherecode.c	/^  int iIdxCur;    \/* Cursor for the index, if pIdx!=0.  Unused otherwise *\/$/;"	m	struct:CCurHint	file:
iIn	ext/misc/csv.c	/^  size_t iIn;            \/* Next unread character in the input buffer *\/$/;"	m	struct:CsvReader	file:
iIndent	shell.c	/^  int iIndent;           \/* Index of current op in aiIndent[] *\/$/;"	m	struct:ShellState	file:
iIndent	src/shell.c	/^  int iIndent;           \/* Index of current op in aiIndent[] *\/$/;"	m	struct:ShellState	file:
iIndent	tsrc/shell.c	/^  int iIndent;           \/* Index of current op in aiIndent[] *\/$/;"	m	struct:ShellState	file:
iIndex	ext/fts3/fts3_term.c	/^  int iIndex;                     \/* Index for Fts3Table.aIndex[] *\/$/;"	m	struct:Fts3termTable	file:
iInput	ext/fts3/fts3_test.c	/^  int iInput;                  \/* Current offset in aInput *\/$/;"	m	struct:test_tokenizer_cursor	file:
iInsCost	ext/misc/spellfix.c	/^  int iInsCost;          \/* Default insertion cost *\/$/;"	m	struct:EditDist3Lang	file:
iInst	ext/fts5/fts5_aux.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iInst	fts5.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iInst	sqlite3.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iInst	tsrc/fts5.c	/^  int iInst;                      \/* Next phrase instance index *\/$/;"	m	struct:CInstIter	file:
iJD	sqlite3.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iJD	src/date.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iJD	tsrc/date.c	/^  sqlite3_int64 iJD; \/* The julian day number times 86400000 *\/$/;"	m	struct:DateTime	file:
iKey	ext/misc/json1.c	/^    u32 iKey;              \/* Key for ARRAY objects in json_tree() *\/$/;"	m	union:JsonNode::__anon74	file:
iKey	sqlite3.c	/^    u32 iKey;              \/* Key for ARRAY objects in json_tree() *\/$/;"	m	union:JsonNode::__anon106	file:
iKey	sqlite3.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iKey	src/pcache1.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iKey	tsrc/json1.c	/^    u32 iKey;              \/* Key for ARRAY objects in json_tree() *\/$/;"	m	union:JsonNode::__anon37	file:
iKey	tsrc/pcache1.c	/^  unsigned int iKey;             \/* Key value (page number) *\/$/;"	m	struct:PgHdr1	file:
iKey1	sqlite3.c	/^  i64 iKey1;                      \/* First key value passed to hook *\/$/;"	m	struct:PreUpdate	file:
iKey1	src/vdbeInt.h	/^  i64 iKey1;                      \/* First key value passed to hook *\/$/;"	m	struct:PreUpdate
iKey1	tsrc/vdbeInt.h	/^  i64 iKey1;                      \/* First key value passed to hook *\/$/;"	m	struct:PreUpdate
iKey2	sqlite3.c	/^  i64 iKey2;                      \/* Second key value passed to hook *\/$/;"	m	struct:PreUpdate	file:
iKey2	src/vdbeInt.h	/^  i64 iKey2;                      \/* Second key value passed to hook *\/$/;"	m	struct:PreUpdate
iKey2	tsrc/vdbeInt.h	/^  i64 iKey2;                      \/* Second key value passed to hook *\/$/;"	m	struct:PreUpdate
iLang	ext/misc/amatch.c	/^  amatch_langid iLang;       \/* Use this language ID *\/$/;"	m	struct:amatch_cursor	file:
iLang	ext/misc/amatch.c	/^  amatch_langid iLang;     \/* The langauge to which this rule belongs *\/$/;"	m	struct:amatch_rule	file:
iLang	ext/misc/spellfix.c	/^  int iLang;                       \/* The language id *\/$/;"	m	struct:MatchQuery	file:
iLang	ext/misc/spellfix.c	/^  int iLang;                   \/* Value of the langid= constraint *\/$/;"	m	struct:spellfix1_cursor	file:
iLang	ext/misc/spellfix.c	/^  int iLang;             \/* Language ID *\/$/;"	m	struct:EditDist3Lang	file:
iLangid	ext/fts3/fts3Int.h	/^  int iLangid;                    \/* Language being queried for *\/$/;"	m	struct:Fts3Cursor
iLangid	ext/fts3/fts3_aux.c	/^  int iLangid;                    \/* Language id to query *\/$/;"	m	struct:Fts3auxCursor	file:
iLangid	ext/fts3/fts3_expr.c	/^  int iLangid;                        \/* Language id used with tokenizer *\/$/;"	m	struct:ParseContext	file:
iLangid	ext/fts3/fts3_test.c	/^  int iLangid;                 \/* Configured language id *\/$/;"	m	struct:test_tokenizer_cursor	file:
iLangid	sqlite3.c	/^  int iLangid;                        \/* Language id used with tokenizer *\/$/;"	m	struct:ParseContext	file:
iLangid	sqlite3.c	/^  int iLangid;                    \/* Language being queried for *\/$/;"	m	struct:Fts3Cursor	file:
iLangid	sqlite3.c	/^  int iLangid;                    \/* Language id to query *\/$/;"	m	struct:Fts3auxCursor	file:
iLangid	tsrc/fts3Int.h	/^  int iLangid;                    \/* Language being queried for *\/$/;"	m	struct:Fts3Cursor
iLangid	tsrc/fts3_aux.c	/^  int iLangid;                    \/* Language id to query *\/$/;"	m	struct:Fts3auxCursor	file:
iLangid	tsrc/fts3_expr.c	/^  int iLangid;                        \/* Language id used with tokenizer *\/$/;"	m	struct:ParseContext	file:
iLastChildBlock	ext/fts2/fts2.c	/^  sqlite_int64 iLastChildBlock;  \/* for consistency checks. *\/$/;"	m	struct:InteriorWriter	file:
iLastChildBlock	tsrc/fts2.c	/^  sqlite_int64 iLastChildBlock;  \/* for consistency checks. *\/$/;"	m	struct:InteriorWriter	file:
iLastCol	ext/fts3/fts3_write.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastCol	sqlite3.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastCol	tsrc/fts3_write.c	/^  sqlite3_int64 iLastCol;$/;"	m	struct:PendingList	file:
iLastColumn	ext/fts1/fts1.c	/^  int iLastColumn;    \/* the last column written *\/$/;"	m	struct:DocList	file:
iLastColumn	ext/fts1/fts1.c	/^  int iLastColumn;$/;"	m	struct:DocListReader	file:
iLastColumn	tsrc/fts1.c	/^  int iLastColumn;    \/* the last column written *\/$/;"	m	struct:DocList	file:
iLastColumn	tsrc/fts1.c	/^  int iLastColumn;$/;"	m	struct:DocListReader	file:
iLastDocid	ext/fts3/fts3_write.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastDocid	sqlite3.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastDocid	tsrc/fts3_write.c	/^  sqlite3_int64 iLastDocid;$/;"	m	struct:PendingList	file:
iLastOffset	ext/fts1/fts1.c	/^  int iLastOffset;    \/* the last start offset written *\/$/;"	m	struct:DocList	file:
iLastOffset	ext/fts1/fulltext.c	/^  int iLastOffset;    \/* the last start offset written *\/$/;"	m	struct:DocList	file:
iLastOffset	tsrc/fts1.c	/^  int iLastOffset;    \/* the last start offset written *\/$/;"	m	struct:DocList	file:
iLastPage	ext/misc/scrub.c	/^  u32 iLastPage;           \/* Page number of last page written so far*\/$/;"	m	struct:ScrubState	file:
iLastPos	ext/fts1/fts1.c	/^  int iLastPos;       \/* the last position written *\/$/;"	m	struct:DocList	file:
iLastPos	ext/fts1/fts1.c	/^  int iLastPos;  \/* the last position read, or -1 when not in a position list *\/$/;"	m	struct:DocListReader	file:
iLastPos	ext/fts1/fulltext.c	/^  int iLastPos;       \/* the last position written *\/$/;"	m	struct:DocList	file:
iLastPos	ext/fts1/fulltext.c	/^  int iLastPos;    \/* the last position read *\/$/;"	m	struct:DocListReader	file:
iLastPos	ext/fts3/fts3_write.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLastPos	sqlite3.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLastPos	tsrc/fts1.c	/^  int iLastPos;       \/* the last position written *\/$/;"	m	struct:DocList	file:
iLastPos	tsrc/fts1.c	/^  int iLastPos;  \/* the last position read, or -1 when not in a position list *\/$/;"	m	struct:DocListReader	file:
iLastPos	tsrc/fts3_write.c	/^  sqlite3_int64 iLastPos;$/;"	m	struct:PendingList	file:
iLastRowid	ext/fts5/fts5_main.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLastRowid	fts5.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLastRowid	sqlite3.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLastRowid	tsrc/fts5.c	/^  i64 iLastRowid;                 \/* Return no rowids later than this *\/$/;"	m	struct:Fts5Cursor	file:
iLeafEndBlock	ext/fts3/fts3_write.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeafEndBlock	sqlite3.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeafEndBlock	tsrc/fts3_write.c	/^  sqlite3_int64 iLeafEndBlock;    \/* Rowid of final leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iLeafOffset	ext/fts5/fts5_index.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafOffset	fts5.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafOffset	sqlite3.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafOffset	tsrc/fts5.c	/^  int iLeafOffset;                \/* Byte offset within current leaf *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	ext/fts5/fts5_index.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	ext/fts5/fts5_index.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeafPgno	fts5.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	fts5.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeafPgno	sqlite3.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	sqlite3.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeafPgno	tsrc/fts5.c	/^  int iLeafPgno;                  \/* Current leaf page number *\/$/;"	m	struct:Fts5SegIter	file:
iLeafPgno	tsrc/fts5.c	/^  int iLeafPgno;                \/* Page number of current leaf page *\/$/;"	m	struct:Fts5DlidxLvl	file:
iLeftJoin	sqlite3.c	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel	file:
iLeftJoin	src/whereInt.h	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel
iLeftJoin	tsrc/whereInt.h	/^  int iLeftJoin;        \/* Memory cell used to implement LEFT OUTER JOIN *\/$/;"	m	struct:WhereLevel
iLevel	ext/fts2/fts2.c	/^  int iLevel;$/;"	m	struct:LeafWriter	file:
iLevel	ext/rtree/rtree.c	/^  u8 iLevel;             \/* 0=entries.  1=leaf node.  2+ for higher *\/$/;"	m	struct:RtreeSearchPoint	file:
iLevel	ext/rtree/sqlite3rtree.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iLevel	sqlite3.c	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache	file:
iLevel	sqlite3.c	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iLevel	sqlite3.c	/^  int iLevel;             \/* Which level of the tree we are on *\/$/;"	m	struct:TreeView	file:
iLevel	sqlite3.c	/^  u8 iLevel;             \/* 0=entries.  1=leaf node.  2+ for higher *\/$/;"	m	struct:RtreeSearchPoint	file:
iLevel	sqlite3.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iLevel	src/sqliteInt.h	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache
iLevel	src/sqliteInt.h	/^  int iLevel;             \/* Which level of the tree we are on *\/$/;"	m	struct:TreeView
iLevel	tsrc/fts2.c	/^  int iLevel;$/;"	m	struct:LeafWriter	file:
iLevel	tsrc/rtree.c	/^  u8 iLevel;             \/* 0=entries.  1=leaf node.  2+ for higher *\/$/;"	m	struct:RtreeSearchPoint	file:
iLevel	tsrc/sqlite3.h	/^  int iLevel;                       \/* Level of current node or entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iLevel	tsrc/sqliteInt.h	/^    int iLevel;           \/* Nesting level *\/$/;"	m	struct:Parse::yColCache
iLevel	tsrc/sqliteInt.h	/^  int iLevel;             \/* Which level of the tree we are on *\/$/;"	m	struct:TreeView
iLikeRepCntr	sqlite3.c	/^  u32 iLikeRepCntr;     \/* LIKE range processing counter register (times 2) *\/$/;"	m	struct:WhereLevel	file:
iLikeRepCntr	src/whereInt.h	/^  u32 iLikeRepCntr;     \/* LIKE range processing counter register (times 2) *\/$/;"	m	struct:WhereLevel
iLikeRepCntr	tsrc/whereInt.h	/^  u32 iLikeRepCntr;     \/* LIKE range processing counter register (times 2) *\/$/;"	m	struct:WhereLevel
iLimit	sqlite3.c	/^  LogEst iLimit;            \/* LIMIT if wctrlFlags has WHERE_USE_LIMIT *\/$/;"	m	struct:WhereInfo	file:
iLimit	sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iLimit	src/sqliteInt.h	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select
iLimit	src/test_quota.c	/^  sqlite3_int64 iLimit;          \/* Upper bound on total file size *\/$/;"	m	struct:quotaGroup	file:
iLimit	src/whereInt.h	/^  LogEst iLimit;            \/* LIMIT if wctrlFlags has WHERE_USE_LIMIT *\/$/;"	m	struct:WhereInfo
iLimit	tsrc/sqliteInt.h	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select
iLimit	tsrc/whereInt.h	/^  LogEst iLimit;            \/* LIMIT if wctrlFlags has WHERE_USE_LIMIT *\/$/;"	m	struct:WhereInfo
iLine	test/threadtest3.c	/^  int iLine;$/;"	m	struct:Error	file:
iLog	src/test_sqllog.c	/^  int iLog;                       \/* First integer value used in file names *\/$/;"	m	struct:SLConn	file:
iLookahead	ext/fts5/fts5_expr.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iLookahead	fts5.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iLookahead	sqlite3.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iLookahead	tsrc/fts5.c	/^  i64 iLookahead;                 \/* Next position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iMagic	src/test_pcache.c	/^  unsigned iMagic;          \/* Magic number for sanity checking *\/$/;"	m	struct:testpcache	file:
iMaster	sqlite3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaster	src/mem3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMaster	tsrc/mem3.c	/^  u32 iMaster;$/;"	m	struct:Mem3Global	file:
iMatchlen	ext/misc/spellfix.c	/^    int iMatchlen;                \/* Value of matchlen column (or -1) *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
iMaxDist	ext/misc/spellfix.c	/^  int iMaxDist;                    \/* Maximum allowed edit distance, or -1 *\/$/;"	m	struct:MatchQuery	file:
iMaxDocid	ext/fts3/fts3Int.h	/^  i64 iMaxDocid;                  \/* Maximum docid to return *\/$/;"	m	struct:Fts3Cursor
iMaxDocid	sqlite3.c	/^  i64 iMaxDocid;                  \/* Maximum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iMaxDocid	tsrc/fts3Int.h	/^  i64 iMaxDocid;                  \/* Maximum docid to return *\/$/;"	m	struct:Fts3Cursor
iMaxFrame	ext/rbu/sqlite3rbu.c	/^  u32 iMaxFrame;                  \/* Largest iWalFrame value in aFrame[] *\/$/;"	m	struct:sqlite3rbu	file:
iMaxFrame	sqlite3.c	/^  u32 iMaxFrame;                  \/* Largest iWalFrame value in aFrame[] *\/$/;"	m	struct:sqlite3rbu	file:
iMaxFrame	tsrc/sqlite3rbu.c	/^  u32 iMaxFrame;                  \/* Largest iWalFrame value in aFrame[] *\/$/;"	m	struct:sqlite3rbu	file:
iMaxKey	sqlite3.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMaxKey	src/pcache1.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMaxKey	tsrc/pcache1.c	/^  unsigned int iMaxKey;               \/* Largest key seen since xTruncate() *\/$/;"	m	struct:PCache1	file:
iMaxOff	src/test_journal.c	/^  sqlite3_int64 iMaxOff;   \/* Maximum offset written to this transaction *\/$/;"	m	struct:jt_file	file:
iMaxTid	test/threadtest3.c	/^  int iMaxTid;                    \/* Largest iTid value allocated so far *\/$/;"	m	struct:Threadset	file:
iMem	sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iMem	sqlite3.c	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
iMem	src/sqliteInt.h	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col
iMem	src/sqliteInt.h	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func
iMem	tsrc/sqliteInt.h	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_col
iMem	tsrc/sqliteInt.h	/^    int iMem;                \/* Memory location that acts as accumulator *\/$/;"	m	struct:AggInfo::AggInfo_func
iMemory	sqlite3.c	/^  int iMemory;                    \/* Offset of free space in list.aMemory *\/$/;"	m	struct:VdbeSorter	file:
iMemory	src/vdbesort.c	/^  int iMemory;                    \/* Offset of free space in list.aMemory *\/$/;"	m	struct:VdbeSorter	file:
iMemory	tsrc/vdbesort.c	/^  int iMemory;                    \/* Offset of free space in list.aMemory *\/$/;"	m	struct:VdbeSorter	file:
iMin	sqlite3.c	/^  int iMin;                 \/* Index in a[] of entry with minimum score *\/$/;"	m	struct:Stat4Accum	file:
iMin	src/analyze.c	/^  int iMin;                 \/* Index in a[] of entry with minimum score *\/$/;"	m	struct:Stat4Accum	file:
iMin	tsrc/analyze.c	/^  int iMin;                 \/* Index in a[] of entry with minimum score *\/$/;"	m	struct:Stat4Accum	file:
iMinDocid	ext/fts3/fts3Int.h	/^  i64 iMinDocid;                  \/* Minimum docid to return *\/$/;"	m	struct:Fts3Cursor
iMinDocid	sqlite3.c	/^  i64 iMinDocid;                  \/* Minimum docid to return *\/$/;"	m	struct:Fts3Cursor	file:
iMinDocid	tsrc/fts3Int.h	/^  i64 iMinDocid;                  \/* Minimum docid to return *\/$/;"	m	struct:Fts3Cursor
iNewReg	sqlite3.c	/^  int iNewReg;                    \/* Register for new.* values *\/$/;"	m	struct:PreUpdate	file:
iNewReg	src/vdbeInt.h	/^  int iNewReg;                    \/* Register for new.* values *\/$/;"	m	struct:PreUpdate
iNewReg	tsrc/vdbeInt.h	/^  int iNewReg;                    \/* Register for new.* values *\/$/;"	m	struct:PreUpdate
iNext	ext/session/sqlite3session.c	/^  int iNext;                      \/* Offset in aData[] of next change *\/$/;"	m	struct:SessionInput	file:
iNext	sqlite3.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	sqlite3.c	/^    int iNext;                    \/* Offset within aMemory of next record *\/$/;"	m	union:SorterRecord::__anon94	file:
iNext	sqlite3.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNext	sqlite3.c	/^  int iNext;                      \/* Offset in aData[] of next change *\/$/;"	m	struct:SessionInput	file:
iNext	src/backup.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNext	src/vdbesort.c	/^    int iNext;                    \/* Offset within aMemory of next record *\/$/;"	m	union:SorterRecord::__anon44	file:
iNext	src/wal.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNext	tool/mkkeywordhash.c	/^  int iNext;           \/* Index in aKeywordTable[] of next with same hash *\/$/;"	m	struct:Keyword	file:
iNext	tsrc/backup.c	/^  Pgno iNext;              \/* Page number of the next source page to copy *\/$/;"	m	struct:sqlite3_backup	file:
iNext	tsrc/sqlite3session.c	/^  int iNext;                      \/* Offset in aData[] of next change *\/$/;"	m	struct:SessionInput	file:
iNext	tsrc/vdbesort.c	/^    int iNext;                    \/* Offset within aMemory of next record *\/$/;"	m	union:SorterRecord::__anon8	file:
iNext	tsrc/wal.c	/^    int iNext;                    \/* Next slot in aIndex[] not yet returned *\/$/;"	m	struct:WalIterator::WalSegment	file:
iNextDb	src/test_sqllog.c	/^  int iNextDb;                    \/* Used to allocate database file names *\/$/;"	m	struct:SLGlobal	file:
iNextFileId	src/test_osinst.c	/^  int iNextFileId;                \/* Next file id *\/$/;"	m	struct:VfslogVfs	file:
iNextId	ext/fts5/fts5_main.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextId	fts5.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextId	sqlite3.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextId	tsrc/fts5.c	/^  i64 iNextId;                    \/* Used to allocate unique cursor ids *\/$/;"	m	struct:Fts5Global	file:
iNextLog	src/test_sqllog.c	/^  int iNextLog;                   \/* Used to allocate file names *\/$/;"	m	struct:SLGlobal	file:
iNextSelectId	sqlite3.c	/^  int iNextSelectId;        \/* Next available select ID for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iNextSelectId	src/sqliteInt.h	/^  int iNextSelectId;        \/* Next available select ID for EXPLAIN output *\/$/;"	m	struct:Parse
iNextSelectId	tsrc/sqliteInt.h	/^  int iNextSelectId;        \/* Next available select ID for EXPLAIN output *\/$/;"	m	struct:Parse
iNode	ext/rtree/rtree.c	/^  i64 iNode;                  \/* The node number *\/$/;"	m	struct:RtreeNode	file:
iNode	sqlite3.c	/^  i64 iNode;                  \/* The node number *\/$/;"	m	struct:RtreeNode	file:
iNode	tsrc/rtree.c	/^  i64 iNode;                  \/* The node number *\/$/;"	m	struct:RtreeNode	file:
iNodeSize	ext/rtree/rtree.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iNodeSize	sqlite3.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iNodeSize	tsrc/rtree.c	/^  int iNodeSize;              \/* Size in bytes of each node in the node table *\/$/;"	m	struct:Rtree	file:
iNtOfst	tool/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
iOalSz	ext/rbu/sqlite3rbu.c	/^  i64 iOalSz;$/;"	m	struct:RbuState	file:
iOalSz	ext/rbu/sqlite3rbu.c	/^  i64 iOalSz;$/;"	m	struct:sqlite3rbu	file:
iOalSz	sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:RbuState	file:
iOalSz	sqlite3.c	/^  i64 iOalSz;$/;"	m	struct:sqlite3rbu	file:
iOalSz	tsrc/sqlite3rbu.c	/^  i64 iOalSz;$/;"	m	struct:RbuState	file:
iOalSz	tsrc/sqlite3rbu.c	/^  i64 iOalSz;$/;"	m	struct:sqlite3rbu	file:
iOff	ext/fts3/fts3_snippet.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOff	ext/fts3/fts3_unicode.c	/^  int iOff;                       \/* Current offset within aInput[] *\/$/;"	m	struct:unicode_cursor	file:
iOff	ext/fts3/fts3_write.c	/^  int iOff;                       \/* Current offset within aNode[] *\/$/;"	m	struct:NodeReader	file:
iOff	ext/fts5/fts5_aux.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	ext/fts5/fts5_expr.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	ext/fts5/fts5_index.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOff	fts5.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	fts5.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	fts5.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOff	sqlite3.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	sqlite3.c	/^  int iOff;                       \/* Current offset within aInput[] *\/$/;"	m	struct:unicode_cursor	file:
iOff	sqlite3.c	/^  int iOff;                       \/* Current offset within aNode[] *\/$/;"	m	struct:NodeReader	file:
iOff	sqlite3.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	sqlite3.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOff	sqlite3.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOff	tsrc/fts3_snippet.c	/^  int iOff;                       \/* Offset of this term from read positions *\/$/;"	m	struct:TermOffset	file:
iOff	tsrc/fts3_unicode.c	/^  int iOff;                       \/* Current offset within aInput[] *\/$/;"	m	struct:unicode_cursor	file:
iOff	tsrc/fts3_write.c	/^  int iOff;                       \/* Current offset within aNode[] *\/$/;"	m	struct:NodeReader	file:
iOff	tsrc/fts5.c	/^  i64 iOff;$/;"	m	struct:Fts5ExprCtx	file:
iOff	tsrc/fts5.c	/^  int iOff;                       \/* Current offset within zIn[] *\/$/;"	m	struct:HighlightContext	file:
iOff	tsrc/fts5.c	/^  int iOff;                     \/* Current offset into pData *\/$/;"	m	struct:Fts5DlidxLvl	file:
iOffset	ext/async/sqlite3async.c	/^  sqlite_int64 iOffset;        \/* See above *\/$/;"	m	struct:AsyncWrite	file:
iOffset	ext/fts1/fts1_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	ext/fts1/fts1_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	ext/fts1/fulltext.c	/^  int iOffset;$/;"	m	struct:DocListMerge	file:
iOffset	ext/fts2/fts2.c	/^  int iOffset;    \/* the last start offset written *\/$/;"	m	struct:PLWriter	file:
iOffset	ext/fts2/fts2_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	ext/fts2/fts2_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	ext/fts3/fts3_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	ext/fts3/fts3_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	sqlite3.c	/^  i64 iOffset;                    \/* Value of 'pgOffset' column *\/$/;"	m	struct:StatCursor	file:
iOffset	sqlite3.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	sqlite3.c	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select	file:
iOffset	sqlite3.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	sqlite3.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	sqlite3.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	sqlite3.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOffset	src/dbstat.c	/^  i64 iOffset;                    \/* Value of 'pgOffset' column *\/$/;"	m	struct:StatCursor	file:
iOffset	src/memjournal.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOffset	src/pager.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	src/sqliteInt.h	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select
iOffset	src/test6.c	/^  i64 iOffset;                 \/* Byte offset of the start of this write() *\/$/;"	m	struct:WriteBuffer	file:
iOffset	src/test_osinst.c	/^  sqlite3_int64 iOffset;          \/* Log file offset of start of write buffer *\/$/;"	m	struct:VfslogVfs	file:
iOffset	src/test_osinst.c	/^  sqlite3_int64 iOffset;          \/* Offset of next record in file *\/$/;"	m	struct:VfslogCsr	file:
iOffset	src/vdbeblob.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOffset	tsrc/dbstat.c	/^  i64 iOffset;                    \/* Value of 'pgOffset' column *\/$/;"	m	struct:StatCursor	file:
iOffset	tsrc/fts1_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	tsrc/fts1_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	tsrc/fts2.c	/^  int iOffset;    \/* the last start offset written *\/$/;"	m	struct:PLWriter	file:
iOffset	tsrc/fts2_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	tsrc/fts2_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	tsrc/fts3_porter.c	/^  int iOffset;                 \/* current position in zInput *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iOffset	tsrc/fts3_tokenizer1.c	/^  int iOffset;                 \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iOffset	tsrc/memjournal.c	/^  sqlite3_int64 iOffset;          \/* Offset from the beginning of the file *\/$/;"	m	struct:FilePoint	file:
iOffset	tsrc/pager.c	/^  i64 iOffset;                 \/* Starting offset in main journal *\/$/;"	m	struct:PagerSavepoint	file:
iOffset	tsrc/sqliteInt.h	/^  int iLimit, iOffset;   \/* Memory registers holding LIMIT & OFFSET counters *\/$/;"	m	struct:Select
iOffset	tsrc/vdbeblob.c	/^  int iOffset;            \/* Byte offset of blob in cursor data *\/$/;"	m	struct:Incrblob	file:
iOfst	src/test_quota.c	/^  sqlite3_int64 iOfst;    \/* Current offset into the file *\/$/;"	m	struct:quota_FILE	file:
iOomCntdown	tool/fuzzershell.c	/^  int iOomCntdown;                 \/* Memory fails on 1 to 0 transition *\/$/;"	m	struct:GlobalVars	file:
iOp	sqlite3.c	/^  int iOp;                        \/* Instruction number of OP_Function opcode *\/$/;"	m	struct:AuxData	file:
iOp	sqlite3.c	/^  int iOp;                \/* Instruction number of OP_Function *\/$/;"	m	struct:sqlite3_context	file:
iOp	src/vdbeInt.h	/^  int iOp;                        \/* Instruction number of OP_Function opcode *\/$/;"	m	struct:AuxData
iOp	src/vdbeInt.h	/^  int iOp;                \/* Instruction number of OP_Function *\/$/;"	m	struct:sqlite3_context
iOp	tsrc/vdbeInt.h	/^  int iOp;                        \/* Instruction number of OP_Function opcode *\/$/;"	m	struct:AuxData
iOp	tsrc/vdbeInt.h	/^  int iOp;                \/* Instruction number of OP_Function *\/$/;"	m	struct:sqlite3_context
iOpeningChildBlock	ext/fts2/fts2.c	/^  sqlite_int64 iOpeningChildBlock; \/* First child block in block "last". *\/$/;"	m	struct:InteriorWriter	file:
iOpeningChildBlock	tsrc/fts2.c	/^  sqlite_int64 iOpeningChildBlock; \/* First child block in block "last". *\/$/;"	m	struct:InteriorWriter	file:
iOrDocid	ext/fts3/fts3Int.h	/^  i64 iOrDocid;$/;"	m	struct:Fts3Phrase
iOrDocid	sqlite3.c	/^  i64 iOrDocid;$/;"	m	struct:Fts3Phrase	file:
iOrDocid	tsrc/fts3Int.h	/^  i64 iOrDocid;$/;"	m	struct:Fts3Phrase
iOrder	tool/lemon.c	/^  int iOrder;          \/* Original order of action sets *\/$/;"	m	struct:axset	file:
iOrderByCol	sqlite3.c	/^        u16 iOrderByCol;      \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item::__anon82::__anon83	file:
iOrderByCol	src/sqliteInt.h	/^        u16 iOrderByCol;      \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item::__anon56::__anon57
iOrderByCol	tsrc/sqliteInt.h	/^        u16 iOrderByCol;      \/* For ORDER BY, column number in result set *\/$/;"	m	struct:ExprList::ExprList_item::__anon24::__anon25
iOvfl	sqlite3.c	/^  int iOvfl;                      \/* Iterates through aOvfl[] *\/$/;"	m	struct:StatCell	file:
iOvfl	src/dbstat.c	/^  int iOvfl;                      \/* Iterates through aOvfl[] *\/$/;"	m	struct:StatCell	file:
iOvfl	tsrc/dbstat.c	/^  int iOvfl;                      \/* Iterates through aOvfl[] *\/$/;"	m	struct:StatCell	file:
iPKey	sqlite3.c	/^  i16 iPKey;           \/* If not negative, use aCol[iPKey] as the rowid *\/$/;"	m	struct:Table	file:
iPKey	sqlite3.c	/^  int iPKey;                      \/* If not negative index of IPK column *\/$/;"	m	struct:PreUpdate	file:
iPKey	src/sqliteInt.h	/^  i16 iPKey;           \/* If not negative, use aCol[iPKey] as the rowid *\/$/;"	m	struct:Table
iPKey	src/vdbeInt.h	/^  int iPKey;                      \/* If not negative index of IPK column *\/$/;"	m	struct:PreUpdate
iPKey	tsrc/sqliteInt.h	/^  i16 iPKey;           \/* If not negative, use aCol[iPKey] as the rowid *\/$/;"	m	struct:Table
iPKey	tsrc/vdbeInt.h	/^  int iPKey;                      \/* If not negative index of IPK column *\/$/;"	m	struct:PreUpdate
iPage	sqlite3.c	/^  i8 iPage;                 \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor	file:
iPage	sqlite3.c	/^  int iPage;                      \/* Current entry in aPage[] *\/$/;"	m	struct:StatCursor	file:
iPage	src/btreeInt.h	/^  i8 iPage;                 \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor
iPage	src/dbstat.c	/^  int iPage;                      \/* Current entry in aPage[] *\/$/;"	m	struct:StatCursor	file:
iPage	tsrc/btreeInt.h	/^  i8 iPage;                 \/* Index of current page in apPage *\/$/;"	m	struct:BtCursor
iPage	tsrc/dbstat.c	/^  int iPage;                      \/* Current entry in aPage[] *\/$/;"	m	struct:StatCursor	file:
iPageno	sqlite3.c	/^  u32 iPageno;                    \/* Value of 'pageno' column *\/$/;"	m	struct:StatCursor	file:
iPageno	src/dbstat.c	/^  u32 iPageno;                    \/* Value of 'pageno' column *\/$/;"	m	struct:StatCursor	file:
iPageno	tsrc/dbstat.c	/^  u32 iPageno;                    \/* Value of 'pageno' column *\/$/;"	m	struct:StatCursor	file:
iParent	sqlite3.c	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm	file:
iParent	src/whereInt.h	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm
iParent	tsrc/whereInt.h	/^  int iParent;            \/* Disable pWC->a[iParent] when this term disabled *\/$/;"	m	struct:WhereTerm
iPgidxOff	ext/fts5/fts5_index.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgidxOff	fts5.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgidxOff	sqlite3.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgidxOff	tsrc/fts5.c	/^  int iPgidxOff;                  \/* Next offset in pgidx *\/$/;"	m	struct:Fts5SegIter	file:
iPgno	sqlite3.c	/^  u32 iPgno;$/;"	m	struct:StatPage	file:
iPgno	src/dbstat.c	/^  u32 iPgno;$/;"	m	struct:StatPage	file:
iPgno	tsrc/dbstat.c	/^  u32 iPgno;$/;"	m	struct:StatPage	file:
iPhrase	ext/fts1/fts1.c	/^  short int iPhrase; \/* This is the i-th term of a phrase. *\/$/;"	m	struct:QueryTerm	file:
iPhrase	ext/fts2/fts2.c	/^  short int iPhrase; \/* This is the i-th term of a phrase. *\/$/;"	m	struct:QueryTerm	file:
iPhrase	ext/fts3/fts3Int.h	/^  int iPhrase;               \/* Index of this phrase in matchinfo() results *\/$/;"	m	struct:Fts3Expr
iPhrase	sqlite3.c	/^  int iPhrase;               \/* Index of this phrase in matchinfo() results *\/$/;"	m	struct:Fts3Expr	file:
iPhrase	tsrc/fts1.c	/^  short int iPhrase; \/* This is the i-th term of a phrase. *\/$/;"	m	struct:QueryTerm	file:
iPhrase	tsrc/fts2.c	/^  short int iPhrase; \/* This is the i-th term of a phrase. *\/$/;"	m	struct:QueryTerm	file:
iPhrase	tsrc/fts3Int.h	/^  int iPhrase;               \/* Index of this phrase in matchinfo() results *\/$/;"	m	struct:Fts3Expr
iPkSortOrder	sqlite3.c	/^  u8 iPkSortOrder;          \/* ASC or DESC for INTEGER PRIMARY KEY *\/$/;"	m	struct:Parse	file:
iPkSortOrder	src/sqliteInt.h	/^  u8 iPkSortOrder;          \/* ASC or DESC for INTEGER PRIMARY KEY *\/$/;"	m	struct:Parse
iPkSortOrder	tsrc/sqliteInt.h	/^  u8 iPkSortOrder;          \/* ASC or DESC for INTEGER PRIMARY KEY *\/$/;"	m	struct:Parse
iPkTnum	ext/rbu/sqlite3rbu.c	/^  int iPkTnum;                    \/* If eType==EXTERNAL, root of PK index *\/$/;"	m	struct:RbuObjIter	file:
iPkTnum	sqlite3.c	/^  int iPkTnum;                    \/* If eType==EXTERNAL, root of PK index *\/$/;"	m	struct:RbuObjIter	file:
iPkTnum	tsrc/sqlite3rbu.c	/^  int iPkTnum;                    \/* If eType==EXTERNAL, root of PK index *\/$/;"	m	struct:RbuObjIter	file:
iPos	ext/fts2/fts2.c	/^  int iPos;       \/* the last position written *\/$/;"	m	struct:PLWriter	file:
iPos	ext/fts3/fts3_snippet.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	ext/fts3/fts3_snippet.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	ext/fts3/fts3_snippet.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPos	ext/fts3/fts3_term.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3termCursor	file:
iPos	ext/fts3/fts3_tokenize_vtab.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3tokCursor	file:
iPos	ext/fts5/fts5Int.h	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader
iPos	ext/fts5/fts5_aux.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	ext/fts5/fts5_expr.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	ext/fts5/fts5_hash.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPos	ext/fts5/fts5_test_tok.c	/^  int iPos;$/;"	m	struct:Fts5tokRow	file:
iPos	fts5.c	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader	file:
iPos	fts5.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	fts5.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	fts5.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPos	sqlite3.c	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader	file:
iPos	sqlite3.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3tokCursor	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPos	sqlite3.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPos	tsrc/fts2.c	/^  int iPos;       \/* the last position written *\/$/;"	m	struct:PLWriter	file:
iPos	tsrc/fts3_snippet.c	/^  int iPos;                       \/* Current position *\/$/;"	m	struct:LcsIterator	file:
iPos	tsrc/fts3_snippet.c	/^  int iPos;                       \/* Index of first token in snippet *\/$/;"	m	struct:SnippetFragment	file:
iPos	tsrc/fts3_snippet.c	/^  int iPos;                       \/* Position just read from pList *\/$/;"	m	struct:TermOffset	file:
iPos	tsrc/fts3_tokenize_vtab.c	/^  int iPos;                       \/* Current 'pos' value *\/$/;"	m	struct:Fts3tokCursor	file:
iPos	tsrc/fts5.c	/^  i64 iPos;                       \/* (iCol<<32) + iPos *\/$/;"	m	struct:Fts5PoslistReader	file:
iPos	tsrc/fts5.c	/^  i64 iPos;                       \/* Current position *\/$/;"	m	struct:Fts5LookaheadReader	file:
iPos	tsrc/fts5.c	/^  int iPos;                       \/* Current token offset in zIn[] *\/$/;"	m	struct:HighlightContext	file:
iPos	tsrc/fts5.c	/^  int iPos;                       \/* Position of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iPosOffset	ext/fts3/fts3_snippet.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPosOffset	sqlite3.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPosOffset	tsrc/fts3_snippet.c	/^  int iPosOffset;                 \/* Tokens count up to end of this phrase *\/$/;"	m	struct:LcsIterator	file:
iPosition	ext/fts2/fts2.c	/^  int iPosition;       \/* the last position read *\/$/;"	m	struct:PLReader	file:
iPosition	tsrc/fts2.c	/^  int iPosition;       \/* the last position read *\/$/;"	m	struct:PLReader	file:
iPrev	ext/fts5/fts5Int.h	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter
iPrev	ext/fts5/fts5_index.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	fts5.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	fts5.c	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter	file:
iPrev	sqlite3.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	sqlite3.c	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter	file:
iPrev	sqlite3.c	/^  u8 iPrev;                       \/* Previous thread used to flush PMA *\/$/;"	m	struct:VdbeSorter	file:
iPrev	src/vdbesort.c	/^  u8 iPrev;                       \/* Previous thread used to flush PMA *\/$/;"	m	struct:VdbeSorter	file:
iPrev	tsrc/fts5.c	/^  i64 iPrev;                      \/* Previous rowid value written to page *\/$/;"	m	struct:Fts5DlidxWriter	file:
iPrev	tsrc/fts5.c	/^  i64 iPrev;$/;"	m	struct:Fts5PoslistWriter	file:
iPrev	tsrc/vdbesort.c	/^  u8 iPrev;                       \/* Previous thread used to flush PMA *\/$/;"	m	struct:VdbeSorter	file:
iPrevDocid	ext/fts2/fts2.c	/^  sqlite_int64 iPrevDocid;$/;"	m	struct:DLWriter	file:
iPrevDocid	ext/fts2/fts2.c	/^  sqlite_int64 iPrevDocid;$/;"	m	struct:fulltext_vtab	file:
iPrevDocid	ext/fts3/fts3Int.h	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table
iPrevDocid	sqlite3.c	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevDocid	tsrc/fts2.c	/^  sqlite_int64 iPrevDocid;$/;"	m	struct:DLWriter	file:
iPrevDocid	tsrc/fts2.c	/^  sqlite_int64 iPrevDocid;$/;"	m	struct:fulltext_vtab	file:
iPrevDocid	tsrc/fts3Int.h	/^  sqlite_int64 iPrevDocid;        \/* Docid of most recently inserted document *\/$/;"	m	struct:Fts3Table
iPrevId	ext/fts3/fts3Int.h	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor
iPrevId	sqlite3.c	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
iPrevId	tsrc/fts3Int.h	/^  sqlite3_int64 iPrevId;          \/* Previous id read from aDoclist *\/$/;"	m	struct:Fts3Cursor
iPrevLangid	ext/fts3/fts3Int.h	/^  int iPrevLangid;                \/* Langid of recently inserted document *\/$/;"	m	struct:Fts3Table
iPrevLangid	sqlite3.c	/^  int iPrevLangid;                \/* Langid of recently inserted document *\/$/;"	m	struct:Fts3Table	file:
iPrevLangid	tsrc/fts3Int.h	/^  int iPrevLangid;                \/* Langid of recently inserted document *\/$/;"	m	struct:Fts3Table
iPrevPgidx	ext/fts5/fts5_index.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevPgidx	fts5.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevPgidx	sqlite3.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevPgidx	tsrc/fts5.c	/^  int iPrevPgidx;                 \/* Previous value written into pgidx *\/$/;"	m	struct:Fts5PageWriter	file:
iPrevRowid	ext/fts5/fts5_index.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrevRowid	fts5.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrevRowid	sqlite3.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrevRowid	tsrc/fts5.c	/^  i64 iPrevRowid;                 \/* Previous rowid written to current leaf *\/$/;"	m	struct:Fts5SegWriter	file:
iPrior	sqlite3.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrior	src/wal.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrior	tsrc/wal.c	/^  int iPrior;                     \/* Last result returned from the iterator *\/$/;"	m	struct:WalIterator	file:
iPrn	sqlite3.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat4Accum	file:
iPrn	src/analyze.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat4Accum	file:
iPrn	tsrc/analyze.c	/^  u32 iPrn;                 \/* Pseudo-random number used for sampling *\/$/;"	m	struct:Stat4Accum	file:
iPtr	ext/misc/carray.c	/^  sqlite3_int64 iPtr;        \/* Pointer to array of values *\/$/;"	m	struct:carray_cursor	file:
iRand	src/test_pcache.c	/^  unsigned iRand;           \/* State of the PRNG *\/$/;"	m	struct:testpcache	file:
iRangeEnd	ext/fts5/fts5_aux.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeEnd	fts5.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeEnd	sqlite3.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeEnd	tsrc/fts5.c	/^  int iRangeEnd;                  \/* If non-zero, last token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeReg	sqlite3.c	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse	file:
iRangeReg	src/sqliteInt.h	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse
iRangeReg	tsrc/sqliteInt.h	/^  int iRangeReg;       \/* First register in temporary register block *\/$/;"	m	struct:Parse
iRangeStart	ext/fts5/fts5_aux.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeStart	fts5.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeStart	sqlite3.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iRangeStart	tsrc/fts5.c	/^  int iRangeStart;                \/* First token to include *\/$/;"	m	struct:HighlightContext	file:
iRank	ext/misc/spellfix.c	/^    int iRank;                    \/* Rank for this row *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
iReCksum	sqlite3.c	/^  u32 iReCksum;              \/* On commit, recalculate checksums from here *\/$/;"	m	struct:Wal	file:
iReCksum	src/wal.c	/^  u32 iReCksum;              \/* On commit, recalculate checksums from here *\/$/;"	m	struct:Wal	file:
iReCksum	tsrc/wal.c	/^  u32 iReCksum;              \/* On commit, recalculate checksums from here *\/$/;"	m	struct:Wal	file:
iRead	ext/fts5/fts5_index.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iRead	fts5.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iRead	sqlite3.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iRead	tsrc/fts5.c	/^  int iRead;$/;"	m	struct:PoslistOffsetsCtx	file:
iReadOff	sqlite3.c	/^  i64 iReadOff;               \/* Current read offset *\/$/;"	m	struct:PmaReader	file:
iReadOff	src/vdbesort.c	/^  i64 iReadOff;               \/* Current read offset *\/$/;"	m	struct:PmaReader	file:
iReadOff	tsrc/vdbesort.c	/^  i64 iReadOff;               \/* Current read offset *\/$/;"	m	struct:PmaReader	file:
iReg	sqlite3.c	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache	file:
iReg	src/sqliteInt.h	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache
iReg	tsrc/sqliteInt.h	/^    int iReg;             \/* Reg with value of this column. 0 means none. *\/$/;"	m	struct:Parse::yColCache
iReinsertHeight	ext/rtree/rtree.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iReinsertHeight	sqlite3.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iReinsertHeight	tsrc/rtree.c	/^  int iReinsertHeight;        \/* Height of sub-trees Reinsert() has run on *\/$/;"	m	struct:Rtree	file:
iRightChildPg	sqlite3.c	/^  u32 iRightChildPg;              \/* Right-child page number (or 0) *\/$/;"	m	struct:StatPage	file:
iRightChildPg	src/dbstat.c	/^  u32 iRightChildPg;              \/* Right-child page number (or 0) *\/$/;"	m	struct:StatPage	file:
iRightChildPg	tsrc/dbstat.c	/^  u32 iRightChildPg;              \/* Right-child page number (or 0) *\/$/;"	m	struct:StatPage	file:
iRightJoinTable	sqlite3.c	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr	file:
iRightJoinTable	src/sqliteInt.h	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr
iRightJoinTable	tsrc/sqliteInt.h	/^  i16 iRightJoinTable;   \/* If EP_FromJoin, the right table of the join *\/$/;"	m	struct:Expr
iRoot	tool/offsets.c	/^  int iRoot;            \/* Root page of the table *\/$/;"	m	struct:GState	file:
iRow	ext/misc/spellfix.c	/^  int iRow;                    \/* Current row of content *\/$/;"	m	struct:spellfix1_cursor	file:
iRowid	ext/fts3/fts3_aux.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iRowid	ext/fts3/fts3_term.c	/^  sqlite3_int64 iRowid;           \/* Current 'rowid' value *\/$/;"	m	struct:Fts3termCursor	file:
iRowid	ext/fts3/fts3_tokenize_vtab.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts3tokCursor	file:
iRowid	ext/fts5/fts5Int.h	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter
iRowid	ext/fts5/fts5_expr.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	ext/fts5/fts5_hash.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	ext/fts5/fts5_index.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	ext/fts5/fts5_index.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	ext/fts5/fts5_index.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	ext/fts5/fts5_main.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	ext/fts5/fts5_storage.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	ext/fts5/fts5_test_tok.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts5tokCursor	file:
iRowid	ext/misc/amatch.c	/^  sqlite3_int64 iRowid;      \/* The rowid of the current word *\/$/;"	m	struct:amatch_cursor	file:
iRowid	ext/misc/carray.c	/^  sqlite3_int64 iRowid;      \/* The rowid *\/$/;"	m	struct:carray_cursor	file:
iRowid	ext/misc/csv.c	/^  sqlite3_int64 iRowid;           \/* The current rowid.  Negative for EOF *\/$/;"	m	struct:CsvCursor	file:
iRowid	ext/misc/fuzzer.c	/^  sqlite3_int64 iRowid;      \/* The rowid of the current word *\/$/;"	m	struct:fuzzer_cursor	file:
iRowid	ext/misc/json1.c	/^  u32 iRowid;                \/* The rowid *\/$/;"	m	struct:JsonEachCursor	file:
iRowid	ext/misc/series.c	/^  sqlite3_int64 iRowid;      \/* The rowid *\/$/;"	m	struct:series_cursor	file:
iRowid	ext/misc/spellfix.c	/^    sqlite3_int64 iRowid;         \/* Rowid for this row *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
iRowid	ext/rtree/rtree.c	/^  i64 iRowid;                                 \/* Node or entry ID *\/$/;"	m	struct:RtreeCell	file:
iRowid	ext/rtree/sqlite3rtree.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowid	fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	fts5.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	fts5.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter	file:
iRowid	fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	sqlite3.c	/^    i64 iRowid;                     \/* Rowid in main table of the key *\/$/;"	m	union:Stat4Sample::__anon95	file:
iRowid	sqlite3.c	/^  i64 iRowid;                                 \/* Node or entry ID *\/$/;"	m	struct:RtreeCell	file:
iRowid	sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	sqlite3.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	sqlite3.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	sqlite3.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter	file:
iRowid	sqlite3.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	sqlite3.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts3tokCursor	file:
iRowid	sqlite3.c	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
iRowid	sqlite3.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iRowid	sqlite3.c	/^  u32 iRowid;                \/* The rowid *\/$/;"	m	struct:JsonEachCursor	file:
iRowid	sqlite3.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowid	src/analyze.c	/^    i64 iRowid;                     \/* Rowid in main table of the key *\/$/;"	m	union:Stat4Sample::__anon51	file:
iRowid	src/test_fs.c	/^  sqlite3_int64 iRowid;$/;"	m	struct:FsdirCsr	file:
iRowid	src/test_osinst.c	/^  sqlite3_int64 iRowid;           \/* Current rowid. *\/$/;"	m	struct:VfslogCsr	file:
iRowid	tsrc/analyze.c	/^    i64 iRowid;                     \/* Rowid in main table of the key *\/$/;"	m	union:Stat4Sample::__anon16	file:
iRowid	tsrc/fts3_aux.c	/^  sqlite3_int64 iRowid;           \/* Current rowid *\/$/;"	m	struct:Fts3auxCursor	file:
iRowid	tsrc/fts3_tokenize_vtab.c	/^  int iRowid;                     \/* Current 'rowid' value *\/$/;"	m	struct:Fts3tokCursor	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5ExprNode	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5SegIter	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;                     \/* Current rowid *\/$/;"	m	struct:Fts5Sorter	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;                     \/* Rowid of last value written *\/$/;"	m	struct:Fts5HashEntry	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;                   \/* First rowid on leaf iLeafPgno *\/$/;"	m	struct:Fts5DlidxLvl	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5DoclistIter	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5IndexIter	file:
iRowid	tsrc/fts5.c	/^  i64 iRowid;$/;"	m	struct:Fts5IntegrityCtx	file:
iRowid	tsrc/json1.c	/^  u32 iRowid;                \/* The rowid *\/$/;"	m	struct:JsonEachCursor	file:
iRowid	tsrc/rtree.c	/^  i64 iRowid;                                 \/* Node or entry ID *\/$/;"	m	struct:RtreeCell	file:
iRowid	tsrc/sqlite3.h	/^  sqlite3_int64 iRowid;             \/* Rowid for current entry *\/$/;"	m	struct:sqlite3_rtree_query_info
iRowidOffset	ext/fts5/fts5_index.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iRowidOffset	fts5.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iRowidOffset	sqlite3.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iRowidOffset	tsrc/fts5.c	/^  int iRowidOffset;               \/* Current entry in aRowidOffset[] *\/$/;"	m	struct:Fts5SegIter	file:
iRule	tool/lemon.c	/^  int iRule;               \/* Rule number as used in the generated tables *\/$/;"	m	struct:rule	file:
iRuleset	ext/misc/fuzzer.c	/^  fuzzer_ruleid iRuleset;     \/* The rule set to which this rule belongs *\/$/;"	m	struct:fuzzer_rule	file:
iRuleset	ext/misc/fuzzer.c	/^  int iRuleset;              \/* Only process rules from this ruleset *\/$/;"	m	struct:fuzzer_cursor	file:
iSDParm	sqlite3.c	/^  int iSDParm;         \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest	file:
iSDParm	src/sqliteInt.h	/^  int iSDParm;         \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest
iSDParm	tsrc/sqliteInt.h	/^  int iSDParm;         \/* A parameter used by the eDest disposal method *\/$/;"	m	struct:SelectDest
iSavepoint	ext/fts5/fts5_main.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	fts5.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	sqlite3.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	sqlite3.c	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable	file:
iSavepoint	src/sqliteInt.h	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable
iSavepoint	tsrc/fts5.c	/^  int iSavepoint;                 \/* Number of open savepoints (0 -> none) *\/$/;"	m	struct:Fts5TransactionState	file:
iSavepoint	tsrc/sqliteInt.h	/^  int iSavepoint;           \/* Depth of the SAVEPOINT stack *\/$/;"	m	struct:VTable
iScope	ext/misc/spellfix.c	/^  int iScope;                      \/* Default scope *\/$/;"	m	struct:MatchQuery	file:
iScope	ext/misc/spellfix.c	/^  int iScope;                  \/* Value of the scope= constraint *\/$/;"	m	struct:spellfix1_cursor	file:
iScore	ext/misc/spellfix.c	/^    int iScore;                   \/* Score for sorting *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
iSdst	sqlite3.c	/^  int iSdst;           \/* Base register where results are written *\/$/;"	m	struct:SelectDest	file:
iSdst	src/sqliteInt.h	/^  int iSdst;           \/* Base register where results are written *\/$/;"	m	struct:SelectDest
iSdst	tsrc/sqliteInt.h	/^  int iSdst;           \/* Base register where results are written *\/$/;"	m	struct:SelectDest
iSectorSize	src/test6.c	/^  int iSectorSize;             \/* Value of simulated sector size *\/$/;"	m	struct:CrashGlobal	file:
iSectorSize	src/test_devsym.c	/^  int iSectorSize;$/;"	m	struct:DevsymGlobal	file:
iSectorsize	src/test_vfs.c	/^  int iSectorsize;$/;"	m	struct:Testvfs	file:
iSeek	src/tclsqlite.c	/^  int iSeek;                \/* Current seek offset *\/$/;"	m	struct:IncrblobChannel	file:
iSeek	tsrc/tclsqlite.c	/^  int iSeek;                \/* Current seek offset *\/$/;"	m	struct:IncrblobChannel	file:
iSegid	ext/fts5/fts5_index.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	ext/fts5/fts5_index.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	ext/fts5/fts5_index.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSegid	fts5.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	fts5.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	fts5.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSegid	sqlite3.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	sqlite3.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	sqlite3.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSegid	tsrc/fts5.c	/^  int iSegid;                     \/* Segid to write to *\/$/;"	m	struct:Fts5SegWriter	file:
iSegid	tsrc/fts5.c	/^  int iSegid;                     \/* Segment id *\/$/;"	m	struct:Fts5StructureSegment	file:
iSegid	tsrc/fts5.c	/^  int iSegid;$/;"	m	struct:Fts5DlidxIter	file:
iSelectID	sqlite3.c	/^  int iSelectID;                  \/* The "Select-ID" for this loop *\/$/;"	m	struct:ScanStatus	file:
iSelectID	src/vdbeInt.h	/^  int iSelectID;                  \/* The "Select-ID" for this loop *\/$/;"	m	struct:ScanStatus
iSelectID	tsrc/vdbeInt.h	/^  int iSelectID;                  \/* The "Select-ID" for this loop *\/$/;"	m	struct:ScanStatus
iSelectId	sqlite3.c	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item	file:
iSelectId	sqlite3.c	/^  int iSelectId;            \/* ID of current select for EXPLAIN output *\/$/;"	m	struct:Parse	file:
iSelectId	src/sqliteInt.h	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item
iSelectId	src/sqliteInt.h	/^  int iSelectId;            \/* ID of current select for EXPLAIN output *\/$/;"	m	struct:Parse
iSelectId	tsrc/sqliteInt.h	/^    u8 iSelectId;     \/* If pSelect!=0, the id of the sub-select in EQP *\/$/;"	m	struct:SrcList::SrcList_item
iSelectId	tsrc/sqliteInt.h	/^  int iSelectId;            \/* ID of current select for EXPLAIN output *\/$/;"	m	struct:Parse
iSelfTab	sqlite3.c	/^  int iSelfTab;        \/* Table of an index whose exprs are being coded *\/$/;"	m	struct:Parse	file:
iSelfTab	src/sqliteInt.h	/^  int iSelfTab;        \/* Table of an index whose exprs are being coded *\/$/;"	m	struct:Parse
iSelfTab	tsrc/sqliteInt.h	/^  int iSelfTab;        \/* Table of an index whose exprs are being coded *\/$/;"	m	struct:Parse
iSeq	ext/misc/amatch.c	/^  int iSeq;             \/* Sequence number *\/$/;"	m	struct:amatch_word	file:
iSize	sqlite3.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	sqlite3.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSize	src/bitvec.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSize	src/mem2.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSize	src/test6.c	/^  i64 iSize;                           \/* Size of file in bytes *\/$/;"	m	struct:CrashFile	file:
iSize	src/test_quota.c	/^  sqlite3_int64 iSize;            \/* Current size of this file *\/$/;"	m	struct:quotaFile	file:
iSize	src/test_quota.c	/^  sqlite3_int64 iSize;           \/* Current size of all files *\/$/;"	m	struct:quotaGroup	file:
iSize	tsrc/bitvec.c	/^  u32 iSize;      \/* Maximum bit index.  Max iSize is 4,294,967,296. *\/$/;"	m	struct:Bitvec	file:
iSize	tsrc/mem2.c	/^  i64 iSize;                          \/* Size of this allocation *\/$/;"	m	struct:MemBlockHdr	file:
iSortIdx	sqlite3.c	/^  u8 iSortIdx;          \/* Sorting index number.  0==None *\/$/;"	m	struct:WhereLoop	file:
iSortIdx	src/whereInt.h	/^  u8 iSortIdx;          \/* Sorting index number.  0==None *\/$/;"	m	struct:WhereLoop
iSortIdx	tsrc/whereInt.h	/^  u8 iSortIdx;          \/* Sorting index number.  0==None *\/$/;"	m	struct:WhereLoop
iSorterColumn	sqlite3.c	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iSorterColumn	src/sqliteInt.h	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col
iSorterColumn	tsrc/sqliteInt.h	/^    int iSorterColumn;       \/* Column number in the sorting index *\/$/;"	m	struct:AggInfo::AggInfo_col
iSpecial	ext/fts5/fts5_main.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSpecial	fts5.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSpecial	sqlite3.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSpecial	tsrc/fts5.c	/^  i64 iSpecial;                   \/* Result of special query *\/$/;"	m	struct:Fts5Cursor	file:
iSrcLine	sqlite3.c	/^  int iSrcLine;            \/* Source-code line that generated this opcode *\/$/;"	m	struct:VdbeOp	file:
iSrcLine	src/vdbe.h	/^  int iSrcLine;            \/* Source-code line that generated this opcode *\/$/;"	m	struct:VdbeOp
iSrcLine	tsrc/vdbe.h	/^  int iSrcLine;            \/* Source-code line that generated this opcode *\/$/;"	m	struct:VdbeOp
iStart	ext/fts1/fts1.c	/^    int iStart;          \/* The offset to the first character of the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iStart	ext/fts2/fts2.c	/^    int iStart;          \/* The offset to the first character of the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iStart	ext/fts3/fts3_tokenize_vtab.c	/^  int iStart;                     \/* Current 'start' value *\/$/;"	m	struct:Fts3tokCursor	file:
iStart	ext/fts3/fts3_write.c	/^  sqlite3_int64 iStart;           \/* Block number of first allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iStart	ext/fts5/fts5_aux.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStart	ext/fts5/fts5_test_tok.c	/^  int iStart;$/;"	m	struct:Fts5tokRow	file:
iStart	ext/misc/csv.c	/^  long iStart;                    \/* Offset to start of data in zFilename *\/$/;"	m	struct:CsvTable	file:
iStart	fts5.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStart	sqlite3.c	/^  int iStart;                     \/* Current 'start' value *\/$/;"	m	struct:Fts3tokCursor	file:
iStart	sqlite3.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStart	sqlite3.c	/^  sqlite3_int64 iStart;           \/* Block number of first allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iStart	test/speedtest1.c	/^  sqlite3_int64 iStart;      \/* Start-time for the current test *\/$/;"	m	struct:Global	file:
iStart	tsrc/fts1.c	/^    int iStart;          \/* The offset to the first character of the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iStart	tsrc/fts2.c	/^    int iStart;          \/* The offset to the first character of the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iStart	tsrc/fts3_tokenize_vtab.c	/^  int iStart;                     \/* Current 'start' value *\/$/;"	m	struct:Fts3tokCursor	file:
iStart	tsrc/fts3_write.c	/^  sqlite3_int64 iStart;           \/* Block number of first allocated block *\/$/;"	m	struct:IncrmergeWriter	file:
iStart	tsrc/fts5.c	/^  int iStart;                     \/* First token in coalesced phrase instance *\/$/;"	m	struct:CInstIter	file:
iStartBlock	ext/fts3/fts3_write.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStartBlock	sqlite3.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStartBlock	tsrc/fts3_write.c	/^  sqlite3_int64 iStartBlock;      \/* Rowid of first leaf block to traverse *\/$/;"	m	struct:Fts3SegReader	file:
iStartBlockid	ext/fts2/fts2.c	/^  sqlite_int64 iStartBlockid;     \/* needed to create the root info *\/$/;"	m	struct:LeafWriter	file:
iStartBlockid	tsrc/fts2.c	/^  sqlite_int64 iStartBlockid;     \/* needed to create the root info *\/$/;"	m	struct:LeafWriter	file:
iStartOff	sqlite3.c	/^  i64 iStartOff;                  \/* Offset to start writing file at *\/$/;"	m	struct:IncrMerger	file:
iStartOff	src/vdbesort.c	/^  i64 iStartOff;                  \/* Offset to start writing file at *\/$/;"	m	struct:IncrMerger	file:
iStartOff	tsrc/vdbesort.c	/^  i64 iStartOff;                  \/* Offset to start writing file at *\/$/;"	m	struct:IncrMerger	file:
iStartOffset	ext/fts2/fts2.c	/^  int iStartOffset;    \/* the last start offset read *\/$/;"	m	struct:PLReader	file:
iStartOffset	tsrc/fts2.c	/^  int iStartOffset;    \/* the last start offset read *\/$/;"	m	struct:PLReader	file:
iStatement	sqlite3.c	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe	file:
iStatement	src/vdbeInt.h	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe
iStatement	tsrc/vdbeInt.h	/^  int iStatement;         \/* Statement number (or 0 if has not opened stmt) *\/$/;"	m	struct:Vdbe
iStep	ext/misc/series.c	/^  sqlite3_int64 iStep;       \/* Increment ("step") *\/$/;"	m	struct:series_cursor	file:
iStrategy	ext/rtree/rtree.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iStrategy	sqlite3.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iStrategy	tsrc/rtree.c	/^  int iStrategy;                    \/* Copy of idxNum search parameter *\/$/;"	m	struct:RtreeCursor	file:
iStructVersion	ext/fts5/fts5_index.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iStructVersion	fts5.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iStructVersion	sqlite3.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iStructVersion	tsrc/fts5.c	/^  i64 iStructVersion;             \/* data_version when pStruct read *\/$/;"	m	struct:Fts5Index	file:
iSub	sqlite3.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSub	src/vdbeaux.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSub	tsrc/vdbeaux.c	/^  int iSub;                  \/* 0 = main program, 1 = first sub-program etc. *\/$/;"	m	struct:VdbeOpIter	file:
iSubCost	ext/misc/spellfix.c	/^  int iSubCost;          \/* Default substitution cost *\/$/;"	m	struct:EditDist3Lang	file:
iSubRec	sqlite3.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSubRec	src/pager.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSubRec	tsrc/pager.c	/^  Pgno iSubRec;                \/* Index of first record in sub-journal *\/$/;"	m	struct:PagerSavepoint	file:
iSum	sqlite3.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iSum	src/func.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iSum	tsrc/func.c	/^  i64 iSum;         \/* Integer sum *\/   $/;"	m	struct:SumCtx	file:
iSwitchRowid	ext/fts5/fts5_index.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSwitchRowid	fts5.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSwitchRowid	sqlite3.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSwitchRowid	tsrc/fts5.c	/^  i64 iSwitchRowid;               \/* Firstest rowid of other than aFirst[1] *\/$/;"	m	struct:Fts5Iter	file:
iSyncPoint	sqlite3.c	/^  sqlite3_int64 iSyncPoint;    \/* Fsync at this offset *\/$/;"	m	struct:WalWriter	file:
iSyncPoint	src/wal.c	/^  sqlite3_int64 iSyncPoint;    \/* Fsync at this offset *\/$/;"	m	struct:WalWriter	file:
iSyncPoint	tsrc/wal.c	/^  sqlite3_int64 iSyncPoint;    \/* Fsync at this offset *\/$/;"	m	struct:WalWriter	file:
iSysErrno	sqlite3.c	/^  int iSysErrno;                \/* Errno value from last system error *\/$/;"	m	struct:sqlite3	file:
iSysErrno	src/sqliteInt.h	/^  int iSysErrno;                \/* Errno value from last system error *\/$/;"	m	struct:sqlite3
iSysErrno	tsrc/sqliteInt.h	/^  int iSysErrno;                \/* Errno value from last system error *\/$/;"	m	struct:sqlite3
iSzPoslist	ext/fts5/fts5_hash.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iSzPoslist	fts5.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iSzPoslist	sqlite3.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iSzPoslist	tsrc/fts5.c	/^  int iSzPoslist;                 \/* Offset of space for 4-byte poslist size *\/$/;"	m	struct:Fts5HashEntry	file:
iTab	sqlite3.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTab	sqlite3.c	/^  u8 iTab;              \/* Position in FROM clause of table for this loop *\/$/;"	m	struct:WhereLoop	file:
iTab	src/build.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTab	src/whereInt.h	/^  u8 iTab;              \/* Position in FROM clause of table for this loop *\/$/;"	m	struct:WhereLoop
iTab	tsrc/build.c	/^  int iTab;            \/* The root page of the table to be locked *\/$/;"	m	struct:TableLock	file:
iTab	tsrc/whereInt.h	/^  u8 iTab;              \/* Position in FROM clause of table for this loop *\/$/;"	m	struct:WhereLoop
iTabCur	sqlite3.c	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel	file:
iTabCur	sqlite3.c	/^  int iTabCur;    \/* Cursor for the main table *\/$/;"	m	struct:CCurHint	file:
iTabCur	src/whereInt.h	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel
iTabCur	src/wherecode.c	/^  int iTabCur;    \/* Cursor for the main table *\/$/;"	m	struct:CCurHint	file:
iTabCur	tsrc/whereInt.h	/^  int iTabCur;          \/* The VDBE cursor used to access the table *\/$/;"	m	struct:WhereLevel
iTabCur	tsrc/wherecode.c	/^  int iTabCur;    \/* Cursor for the main table *\/$/;"	m	struct:CCurHint	file:
iTable	sqlite3.c	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
iTable	sqlite3.c	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache	file:
iTable	sqlite3.c	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock	file:
iTable	sqlite3.c	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr	file:
iTable	src/btreeInt.h	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock
iTable	src/sqliteInt.h	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col
iTable	src/sqliteInt.h	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache
iTable	src/sqliteInt.h	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr
iTable	tsrc/btreeInt.h	/^  Pgno iTable;          \/* Root page of table *\/$/;"	m	struct:BtLock
iTable	tsrc/sqliteInt.h	/^    int iTable;              \/* Cursor number of the source table *\/$/;"	m	struct:AggInfo::AggInfo_col
iTable	tsrc/sqliteInt.h	/^    int iTable;           \/* Table cursor number *\/$/;"	m	struct:Parse::yColCache
iTable	tsrc/sqliteInt.h	/^  int iTable;            \/* TK_COLUMN: cursor number of table holding column$/;"	m	struct:Expr
iTail	ext/fts3/fts3_snippet.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTail	sqlite3.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTail	tsrc/fts3_snippet.c	/^  int iTail;                      \/* Next value in trailing position list *\/$/;"	m	struct:SnippetPhrase	file:
iTerm	ext/fts1/fts1.c	/^    short int iTerm;     \/* The index in Query.pTerms[] of the matching term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iTerm	ext/fts2/fts2.c	/^    short int iTerm;     \/* The index in Query.pTerms[] of the matching term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iTerm	ext/fts3/fts3_snippet.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTerm	sqlite3.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTerm	tsrc/fts1.c	/^    short int iTerm;     \/* The index in Query.pTerms[] of the matching term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iTerm	tsrc/fts2.c	/^    short int iTerm;     \/* The index in Query.pTerms[] of the matching term *\/$/;"	m	struct:Snippet::snippetMatch	file:
iTerm	tsrc/fts3_snippet.c	/^  int iTerm;$/;"	m	struct:TermOffsetCtx	file:
iTermLeafOffset	ext/fts5/fts5_index.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafOffset	fts5.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafOffset	sqlite3.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafOffset	tsrc/fts5.c	/^  int iTermLeafOffset;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	ext/fts5/fts5_index.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	fts5.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	sqlite3.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermLeafPgno	tsrc/fts5.c	/^  int iTermLeafPgno;$/;"	m	struct:Fts5SegIter	file:
iTermOffset	sqlite3.c	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
iTermOffset	sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iTermOffset	tsrc/sqlite3.h	/^     int iTermOffset;          \/* Used internally - xBestIndex should ignore *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
iTid	test/threadtest3.c	/^  int iTid;                       \/* Thread number within test *\/$/;"	m	struct:Thread	file:
iTimeout	mptest/mptest.c	/^  int iTimeout;          \/* Milliseconds until a busy timeout *\/$/;"	m	struct:Global	file:
iTknOfst	tool/lemon.c	/^  int iTknOfst, iNtOfst;   \/* yy_action[] offset for terminals and nonterms *\/$/;"	m	struct:state	file:
iTnum	ext/rbu/sqlite3rbu.c	/^  int iTnum;                      \/* Root page of current object *\/$/;"	m	struct:RbuObjIter	file:
iTnum	sqlite3.c	/^  int iTnum;                      \/* Root page of current object *\/$/;"	m	struct:RbuObjIter	file:
iTnum	tsrc/sqlite3rbu.c	/^  int iTnum;                      \/* Root page of current object *\/$/;"	m	struct:RbuObjIter	file:
iToken	ext/fts1/fts1_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	ext/fts1/fts1_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	ext/fts1/simple_tokenizer.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	ext/fts2/fts2_icu.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iToken	ext/fts2/fts2_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	ext/fts2/fts2_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	ext/fts3/fts3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	ext/fts3/fts3_icu.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iToken	ext/fts3/fts3_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	ext/fts3/fts3_test.c	/^  int iToken;                  \/* Index of next token to be returned *\/$/;"	m	struct:test_tokenizer_cursor	file:
iToken	ext/fts3/fts3_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	ext/fts3/fts3_unicode.c	/^  int iToken;                     \/* Index of next token to be returned *\/$/;"	m	struct:unicode_cursor	file:
iToken	sqlite3.c	/^  int iToken;                     \/* Index of next token to be returned *\/$/;"	m	struct:unicode_cursor	file:
iToken	sqlite3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	sqlite3.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	sqlite3.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iToken	tsrc/fts1_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	tsrc/fts1_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	tsrc/fts2_icu.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iToken	tsrc/fts2_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	tsrc/fts2_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	tsrc/fts3.c	/^  int iToken;                     \/* Position of token in phrase *\/$/;"	m	struct:Fts3TokenAndCost	file:
iToken	tsrc/fts3_icu.c	/^  int iToken;$/;"	m	struct:IcuCursor	file:
iToken	tsrc/fts3_porter.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:porter_tokenizer_cursor	file:
iToken	tsrc/fts3_tokenizer1.c	/^  int iToken;                  \/* index of next token to be returned *\/$/;"	m	struct:simple_tokenizer_cursor	file:
iToken	tsrc/fts3_unicode.c	/^  int iToken;                     \/* Index of next token to be returned *\/$/;"	m	struct:unicode_cursor	file:
iTop	ext/misc/spellfix.c	/^  int iTop;                    \/* Value of the top= constraint *\/$/;"	m	struct:spellfix1_cursor	file:
iTop	sqlite3.c	/^  int iTop;                 \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
iTop	src/whereInt.h	/^  int iTop;                 \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo
iTop	tsrc/whereInt.h	/^  int iTop;                 \/* The very beginning of the WHERE loop *\/$/;"	m	struct:WhereInfo
iTotal	test/speedtest1.c	/^  sqlite3_int64 iTotal;      \/* Total time *\/$/;"	m	struct:Global	file:
iTrace	mptest/mptest.c	/^  int iTrace;            \/* Tracing level *\/$/;"	m	struct:Global	file:
iType	ext/fts1/fts1.c	/^  DocListType iType;$/;"	m	struct:DocList	file:
iType	ext/fts1/fulltext.c	/^  DocListType iType;$/;"	m	struct:DocList	file:
iType	ext/fts2/fts2.c	/^  DocListType iType;$/;"	m	struct:DLReader	file:
iType	ext/fts2/fts2.c	/^  DocListType iType;$/;"	m	struct:DLWriter	file:
iType	ext/fts2/fts2.c	/^  DocListType iType;$/;"	m	struct:PLReader	file:
iType	tsrc/fts1.c	/^  DocListType iType;$/;"	m	struct:DocList	file:
iType	tsrc/fts2.c	/^  DocListType iType;$/;"	m	struct:DLReader	file:
iType	tsrc/fts2.c	/^  DocListType iType;$/;"	m	struct:DLWriter	file:
iType	tsrc/fts2.c	/^  DocListType iType;$/;"	m	struct:PLReader	file:
iVal	ext/misc/json1.c	/^  u8 iVal;               \/* Replacement value when JNODE_REPLACE *\/$/;"	m	struct:JsonNode	file:
iVal	sqlite3.c	/^  int iVal;$/;"	m	struct:ValueNewStat4Ctx	file:
iVal	sqlite3.c	/^  u8 iVal;               \/* Replacement value when JNODE_REPLACE *\/$/;"	m	struct:JsonNode	file:
iVal	src/vdbemem.c	/^  int iVal;$/;"	m	struct:ValueNewStat4Ctx	file:
iVal	tsrc/json1.c	/^  u8 iVal;               \/* Replacement value when JNODE_REPLACE *\/$/;"	m	struct:JsonNode	file:
iVal	tsrc/vdbemem.c	/^  int iVal;$/;"	m	struct:ValueNewStat4Ctx	file:
iValue	ext/misc/series.c	/^  sqlite3_int64 iValue;      \/* Current value ("value") *\/$/;"	m	struct:series_cursor	file:
iValue	ext/misc/wholenumber.c	/^  sqlite3_int64 iValue;      \/* Current value *\/$/;"	m	struct:wholenumber_cursor	file:
iValue	sqlite3.c	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon80	file:
iValue	src/sqliteInt.h	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon54
iValue	tsrc/sqliteInt.h	/^    int iValue;            \/* Non-negative integer value if EP_IntValue *\/$/;"	m	union:Expr::__anon22
iVersion	ext/fts1/fts1_tokenizer.h	/^  int iVersion;                  \/* currently 0 *\/$/;"	m	struct:sqlite3_tokenizer_module
iVersion	ext/fts1/tokenizer.h	/^  int iVersion;                  \/* currently 0 *\/$/;"	m	struct:sqlite3_tokenizer_module
iVersion	ext/fts2/fts2_tokenizer.h	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module
iVersion	ext/fts3/fts3_tokenizer.h	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module
iVersion	ext/fts5/fts5.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	ext/fts5/fts5.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	fts5.c	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api	file:
iVersion	fts5.c	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi	file:
iVersion	fts5.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	fts5.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	sqlite3.c	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api	file:
iVersion	sqlite3.c	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi	file:
iVersion	sqlite3.c	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs	file:
iVersion	sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods	file:
iVersion	sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_module	file:
iVersion	sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2	file:
iVersion	sqlite3.c	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module	file:
iVersion	sqlite3.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iVersion	sqlite3.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	sqlite3.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iVersion	sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
iVersion	src/wal.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iVersion	tsrc/fts1_tokenizer.h	/^  int iVersion;                  \/* currently 0 *\/$/;"	m	struct:sqlite3_tokenizer_module
iVersion	tsrc/fts2_tokenizer.h	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module
iVersion	tsrc/fts3_tokenizer.h	/^  int iVersion;$/;"	m	struct:sqlite3_tokenizer_module
iVersion	tsrc/fts5.c	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api	file:
iVersion	tsrc/fts5.c	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi	file:
iVersion	tsrc/fts5.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	tsrc/fts5.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	tsrc/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 2 *\/$/;"	m	struct:fts5_api
iVersion	tsrc/sqlite3.h	/^  int iVersion;                   \/* Currently always set to 3 *\/$/;"	m	struct:Fts5ExtensionApi
iVersion	tsrc/sqlite3.h	/^  int iVersion;            \/* Structure version number (currently 3) *\/$/;"	m	struct:sqlite3_vfs
iVersion	tsrc/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_io_methods
iVersion	tsrc/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_module
iVersion	tsrc/sqlite3.h	/^  int iVersion;$/;"	m	struct:sqlite3_pcache_methods2
iVersion	tsrc/wal.c	/^  u32 iVersion;                   \/* Wal-index version *\/$/;"	m	struct:WalIndexHdr	file:
iWalCksum	ext/rbu/sqlite3rbu.c	/^  i64 iWalCksum;$/;"	m	struct:RbuState	file:
iWalCksum	ext/rbu/sqlite3rbu.c	/^  i64 iWalCksum;$/;"	m	struct:sqlite3rbu	file:
iWalCksum	sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:RbuState	file:
iWalCksum	sqlite3.c	/^  i64 iWalCksum;$/;"	m	struct:sqlite3rbu	file:
iWalCksum	tsrc/sqlite3rbu.c	/^  i64 iWalCksum;$/;"	m	struct:RbuState	file:
iWalCksum	tsrc/sqlite3rbu.c	/^  i64 iWalCksum;$/;"	m	struct:sqlite3rbu	file:
iWalFrame	ext/rbu/sqlite3rbu.c	/^  u32 iWalFrame;$/;"	m	struct:RbuFrame	file:
iWalFrame	sqlite3.c	/^  u32 iWalFrame;$/;"	m	struct:RbuFrame	file:
iWalFrame	tsrc/sqlite3rbu.c	/^  u32 iWalFrame;$/;"	m	struct:RbuFrame	file:
iWrite	ext/fts5/fts5_index.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWrite	fts5.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWrite	sqlite3.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWrite	tsrc/fts5.c	/^  int iWrite;$/;"	m	struct:PoslistOffsetsCtx	file:
iWriteOff	sqlite3.c	/^  i64 iWriteOff;                  \/* Offset of start of buffer in file *\/$/;"	m	struct:PmaWriter	file:
iWriteOff	src/vdbesort.c	/^  i64 iWriteOff;                  \/* Offset of start of buffer in file *\/$/;"	m	struct:PmaWriter	file:
iWriteOff	tsrc/vdbesort.c	/^  i64 iWriteOff;                  \/* Offset of start of buffer in file *\/$/;"	m	struct:PmaWriter	file:
iWriteRowid	ext/fts5/fts5_index.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteRowid	fts5.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteRowid	sqlite3.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteRowid	tsrc/fts5.c	/^  i64 iWriteRowid;                \/* Rowid for current doc being written *\/$/;"	m	struct:Fts5Index	file:
iWriteVer	ext/rbu/sqlite3rbu.c	/^  u8 iWriteVer;                   \/* "write-version" value for main db files *\/$/;"	m	struct:rbu_file	file:
iWriteVer	sqlite3.c	/^  u8 iWriteVer;                   \/* "write-version" value for main db files *\/$/;"	m	struct:rbu_file	file:
iWriteVer	tsrc/sqlite3rbu.c	/^  u8 iWriteVer;                   \/* "write-version" value for main db files *\/$/;"	m	struct:rbu_file	file:
iZero	sqlite3.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
iZero	src/wal.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
iZero	tsrc/wal.c	/^    int iZero;                    \/* Frame number associated with aPgno[0] *\/$/;"	m	struct:WalIterator::WalSegment	file:
icuCaseFunc16	ext/icu/icu.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuCaseFunc16	sqlite3.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuCaseFunc16	tsrc/icu.c	/^static void icuCaseFunc16(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuClose	ext/fts2/fts2_icu.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuClose	ext/fts3/fts3_icu.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuClose	sqlite3.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuClose	tsrc/fts2_icu.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuClose	tsrc/fts3_icu.c	/^static int icuClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
icuCollationColl	ext/icu/icu.c	/^static int icuCollationColl($/;"	f	file:
icuCollationColl	sqlite3.c	/^static int icuCollationColl($/;"	f	file:
icuCollationColl	tsrc/icu.c	/^static int icuCollationColl($/;"	f	file:
icuCollationDel	ext/icu/icu.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCollationDel	sqlite3.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCollationDel	tsrc/icu.c	/^static void icuCollationDel(void *pCtx){$/;"	f	file:
icuCreate	ext/fts2/fts2_icu.c	/^static int icuCreate($/;"	f	file:
icuCreate	ext/fts3/fts3_icu.c	/^static int icuCreate($/;"	f	file:
icuCreate	sqlite3.c	/^static int icuCreate($/;"	f	file:
icuCreate	tsrc/fts2_icu.c	/^static int icuCreate($/;"	f	file:
icuCreate	tsrc/fts3_icu.c	/^static int icuCreate($/;"	f	file:
icuDestroy	ext/fts2/fts2_icu.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuDestroy	ext/fts3/fts3_icu.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuDestroy	sqlite3.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuDestroy	tsrc/fts2_icu.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuDestroy	tsrc/fts3_icu.c	/^static int icuDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
icuFunctionError	ext/icu/icu.c	/^static void icuFunctionError($/;"	f	file:
icuFunctionError	sqlite3.c	/^static void icuFunctionError($/;"	f	file:
icuFunctionError	tsrc/icu.c	/^static void icuFunctionError($/;"	f	file:
icuLikeCompare	ext/icu/icu.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeCompare	sqlite3.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeCompare	tsrc/icu.c	/^static int icuLikeCompare($/;"	f	file:
icuLikeFunc	ext/icu/icu.c	/^static void icuLikeFunc($/;"	f	file:
icuLikeFunc	sqlite3.c	/^static void icuLikeFunc($/;"	f	file:
icuLikeFunc	tsrc/icu.c	/^static void icuLikeFunc($/;"	f	file:
icuLoadCollation	ext/icu/icu.c	/^static void icuLoadCollation($/;"	f	file:
icuLoadCollation	sqlite3.c	/^static void icuLoadCollation($/;"	f	file:
icuLoadCollation	tsrc/icu.c	/^static void icuLoadCollation($/;"	f	file:
icuNext	ext/fts2/fts2_icu.c	/^static int icuNext($/;"	f	file:
icuNext	ext/fts3/fts3_icu.c	/^static int icuNext($/;"	f	file:
icuNext	sqlite3.c	/^static int icuNext($/;"	f	file:
icuNext	tsrc/fts2_icu.c	/^static int icuNext($/;"	f	file:
icuNext	tsrc/fts3_icu.c	/^static int icuNext($/;"	f	file:
icuOpen	ext/fts2/fts2_icu.c	/^static int icuOpen($/;"	f	file:
icuOpen	ext/fts3/fts3_icu.c	/^static int icuOpen($/;"	f	file:
icuOpen	sqlite3.c	/^static int icuOpen($/;"	f	file:
icuOpen	tsrc/fts2_icu.c	/^static int icuOpen($/;"	f	file:
icuOpen	tsrc/fts3_icu.c	/^static int icuOpen($/;"	f	file:
icuRegexpDelete	ext/icu/icu.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpDelete	sqlite3.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpDelete	tsrc/icu.c	/^static void icuRegexpDelete(void *p){$/;"	f	file:
icuRegexpFunc	ext/icu/icu.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuRegexpFunc	sqlite3.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuRegexpFunc	tsrc/icu.c	/^static void icuRegexpFunc(sqlite3_context *p, int nArg, sqlite3_value **apArg){$/;"	f	file:
icuTokenizerModule	ext/fts2/fts2_icu.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuTokenizerModule	ext/fts3/fts3_icu.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuTokenizerModule	sqlite3.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuTokenizerModule	tsrc/fts2_icu.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuTokenizerModule	tsrc/fts3_icu.c	/^static const sqlite3_tokenizer_module icuTokenizerModule = {$/;"	v	file:
icuUtf8Trans1	ext/icu/icu.c	/^static const unsigned char icuUtf8Trans1[] = {$/;"	v	file:
icuUtf8Trans1	sqlite3.c	/^static const unsigned char icuUtf8Trans1[] = {$/;"	v	file:
icuUtf8Trans1	tsrc/icu.c	/^static const unsigned char icuUtf8Trans1[] = {$/;"	v	file:
id	ext/misc/closure.c	/^  sqlite3_int64 id;     \/* Id of this entry in the table *\/$/;"	m	struct:closure_avl	file:
id	ext/rtree/rtree.c	/^  sqlite3_int64 id;      \/* Node ID *\/$/;"	m	struct:RtreeSearchPoint	file:
id	sqlite3.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	sqlite3.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	sqlite3.c	/^  sqlite3_int64 id;      \/* Node ID *\/$/;"	m	struct:RtreeSearchPoint	file:
id	sqlite3.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	sqlite3.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	sqlite3.c	/^  unsigned id;             \/* The thread identifier *\/$/;"	m	struct:SQLiteThread	file:
id	src/mutex_noop.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	src/mutex_unix.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	src/mutex_w32.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	src/os_unix.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	src/os_win.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	src/threads.c	/^  unsigned id;             \/* The thread identifier *\/$/;"	m	struct:SQLiteThread	file:
id	test/fuzzcheck.c	/^  int id;                 \/* Id of this Blob *\/$/;"	m	struct:Blob	file:
id	test/threadtest4.c	/^  pthread_t id;               \/* Thread id *\/$/;"	m	struct:WorkerInfo	file:
id	tool/mkkeywordhash.c	/^  int id;              \/* Unique ID for this record *\/$/;"	m	struct:Keyword	file:
id	tsrc/mutex_noop.c	/^  int id;     \/* The mutex type *\/$/;"	m	struct:sqlite3_debug_mutex	file:
id	tsrc/mutex_unix.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	tsrc/mutex_w32.c	/^  int id;                    \/* Mutex type *\/$/;"	m	struct:sqlite3_mutex	file:
id	tsrc/os_unix.c	/^  u8 id;                     \/* Id of this connection within its unixShmNode *\/$/;"	m	struct:unixShm	file:
id	tsrc/os_win.c	/^  u8 id;                     \/* Id of this connection with its winShmNode *\/$/;"	m	struct:winShm	file:
id	tsrc/rtree.c	/^  sqlite3_int64 id;      \/* Node ID *\/$/;"	m	struct:RtreeSearchPoint	file:
id	tsrc/threads.c	/^  unsigned id;             \/* The thread identifier *\/$/;"	m	struct:SQLiteThread	file:
idChar	ext/fts1/fts1_porter.c	571;"	d	file:
idChar	tsrc/fts1_porter.c	571;"	d	file:
identLength	sqlite3.c	/^static int identLength(const char *z){$/;"	f	file:
identLength	src/build.c	/^static int identLength(const char *z){$/;"	f	file:
identLength	tsrc/build.c	/^static int identLength(const char *z){$/;"	f	file:
identPut	sqlite3.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
identPut	src/build.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
identPut	tsrc/build.c	/^static void identPut(char *z, int *pIdx, char *zSignedIdent){$/;"	f	file:
idx	ext/fts2/fts2.c	/^  int idx;                  \/* Index within the segment. *\/$/;"	m	struct:LeavesReader	file:
idx	ext/fts2/fts2.c	/^  int idx;$/;"	m	struct:LeafWriter	file:
idx	ext/fts2/fts2.c	/^  int idx;$/;"	m	struct:OrderedDLReader	file:
idx	sqlite3.c	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item	file:
idx	src/sqliteInt.h	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item
idx	tsrc/fts2.c	/^  int idx;                  \/* Index within the segment. *\/$/;"	m	struct:LeavesReader	file:
idx	tsrc/fts2.c	/^  int idx;$/;"	m	struct:LeafWriter	file:
idx	tsrc/fts2.c	/^  int idx;$/;"	m	struct:OrderedDLReader	file:
idx	tsrc/sqliteInt.h	/^    int idx;          \/* Index in some Table.aCol[] of a column named zName *\/$/;"	m	struct:IdList::IdList_item
idxFlags	sqlite3.c	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info	file:
idxFlags	sqlite3.h	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info
idxFlags	tsrc/sqlite3.h	/^  int idxFlags;              \/* Mask of SQLITE_INDEX_SCAN_* flags *\/$/;"	m	struct:sqlite3_index_info
idxHash	sqlite3.c	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema	file:
idxHash	src/sqliteInt.h	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema
idxHash	tsrc/sqliteInt.h	/^  Hash idxHash;        \/* All (named) indices indexed by name *\/$/;"	m	struct:Schema
idxNum	ext/misc/spellfix.c	/^  int idxNum;                  \/* idxNum value passed to xFilter() *\/$/;"	m	struct:spellfix1_cursor	file:
idxNum	sqlite3.c	/^      int idxNum;            \/* Index number *\/$/;"	m	struct:WhereLoop::__anon98::__anon100	file:
idxNum	sqlite3.c	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info	file:
idxNum	sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxNum	src/whereInt.h	/^      int idxNum;            \/* Index number *\/$/;"	m	struct:WhereLoop::__anon47::__anon49
idxNum	tsrc/sqlite3.h	/^  int idxNum;                \/* Number used to identify the index *\/$/;"	m	struct:sqlite3_index_info
idxNum	tsrc/whereInt.h	/^      int idxNum;            \/* Index number *\/$/;"	m	struct:WhereLoop::__anon12::__anon14
idxStr	sqlite3.c	/^      char *idxStr;          \/* Index identifier string *\/$/;"	m	struct:WhereLoop::__anon98::__anon100	file:
idxStr	sqlite3.c	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info	file:
idxStr	sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
idxStr	src/whereInt.h	/^      char *idxStr;          \/* Index identifier string *\/$/;"	m	struct:WhereLoop::__anon47::__anon49
idxStr	tsrc/sqlite3.h	/^  char *idxStr;              \/* String, possibly obtained from sqlite3_malloc *\/$/;"	m	struct:sqlite3_index_info
idxStr	tsrc/whereInt.h	/^      char *idxStr;          \/* Index identifier string *\/$/;"	m	struct:WhereLoop::__anon12::__anon14
idxType	sqlite3.c	/^  unsigned idxType:2;      \/* 1==UNIQUE, 2==PRIMARY KEY, 0==CREATE INDEX *\/$/;"	m	struct:Index	file:
idxType	src/sqliteInt.h	/^  unsigned idxType:2;      \/* 1==UNIQUE, 2==PRIMARY KEY, 0==CREATE INDEX *\/$/;"	m	struct:Index
idxType	tsrc/sqliteInt.h	/^  unsigned idxType:2;      \/* 1==UNIQUE, 2==PRIMARY KEY, 0==CREATE INDEX *\/$/;"	m	struct:Index
idxaff	sqlite3.c	/^  char idxaff;               \/* Must match this affinity, if zCollName!=NULL *\/$/;"	m	struct:WhereScan	file:
idxaff	src/whereInt.h	/^  char idxaff;               \/* Must match this affinity, if zCollName!=NULL *\/$/;"	m	struct:WhereScan
idxaff	tsrc/whereInt.h	/^  char idxaff;               \/* Must match this affinity, if zCollName!=NULL *\/$/;"	m	struct:WhereScan
ieee754func	ext/misc/ieee754.c	/^static void ieee754func($/;"	f	file:
ifcapable	test/tester.tcl	/^proc ifcapable {expr code {else ""} {elsecode ""}} {$/;"	p
imbalance	ext/misc/amatch.c	/^  short int imbalance;  \/* Height difference between pBefore and pAfter *\/$/;"	m	struct:amatch_avl	file:
imbalance	ext/misc/closure.c	/^  short int imbalance;  \/* Height difference between pBefore and pAfter *\/$/;"	m	struct:closure_avl	file:
import_append_char	shell.c	/^static void import_append_char(ImportCtx *p, int c){$/;"	f	file:
import_append_char	src/shell.c	/^static void import_append_char(ImportCtx *p, int c){$/;"	f	file:
import_append_char	tsrc/shell.c	/^static void import_append_char(ImportCtx *p, int c){$/;"	f	file:
imposterTable	sqlite3.c	/^    u8 imposterTable;           \/* Building an imposter table *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
imposterTable	src/sqliteInt.h	/^    u8 imposterTable;           \/* Building an imposter table *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
imposterTable	tsrc/sqliteInt.h	/^    u8 imposterTable;           \/* Building an imposter table *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
in	ext/fts1/fulltext.c	/^  DocListReader in;$/;"	m	struct:DocListMerge	file:
in	ext/misc/csv.c	/^  FILE *in;              \/* Read the CSV text from this input stream *\/$/;"	m	struct:CsvReader	file:
in	ext/session/sqlite3session.c	/^  SessionInput in;                \/* Input buffer or stream *\/$/;"	m	struct:sqlite3_changeset_iter	file:
in	shell.c	/^  FILE *in;           \/* Read the CSV text from this input stream *\/$/;"	m	struct:ImportCtx	file:
in	sqlite3.c	/^    } in;                 \/* Used when pWLoop->wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon96	typeref:struct:WhereLevel::__anon96::__anon97	file:
in	sqlite3.c	/^  SessionInput in;                \/* Input buffer or stream *\/$/;"	m	struct:sqlite3_changeset_iter	file:
in	src/shell.c	/^  FILE *in;           \/* Read the CSV text from this input stream *\/$/;"	m	struct:ImportCtx	file:
in	src/tclsqlite.c	/^  unsigned char in[64];$/;"	m	struct:MD5Context	file:
in	src/whereInt.h	/^    } in;                 \/* Used when pWLoop->wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon45	typeref:struct:WhereLevel::__anon45::__anon46
in	test/threadtest3.c	/^    unsigned char in[64];$/;"	m	union:MD5Context::__anon2	file:
in	tsrc/shell.c	/^  FILE *in;           \/* Read the CSV text from this input stream *\/$/;"	m	struct:ImportCtx	file:
in	tsrc/sqlite3session.c	/^  SessionInput in;                \/* Input buffer or stream *\/$/;"	m	struct:sqlite3_changeset_iter	file:
in	tsrc/tclsqlite.c	/^  unsigned char in[64];$/;"	m	struct:MD5Context	file:
in	tsrc/whereInt.h	/^    } in;                 \/* Used when pWLoop->wsFlags&WHERE_IN_ABLE *\/$/;"	m	union:WhereLevel::__anon10	typeref:struct:WhereLevel::__anon10::__anon11
in32	test/threadtest3.c	/^    uint32 in32[16];$/;"	m	union:MD5Context::__anon2	file:
inNormalWrite	sqlite3.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inNormalWrite	src/os_unix.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inNormalWrite	tsrc/os_unix.c	/^  unsigned char inNormalWrite;   \/* True if in a normal write operation *\/$/;"	m	struct:unixFile	file:
inProgress	sqlite3.c	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config	file:
inProgress	src/sqliteInt.h	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config
inProgress	tsrc/sqliteInt.h	/^  int inProgress;                   \/* True while initialization in progress *\/$/;"	m	struct:Sqlite3Config
inTrans	sqlite3.c	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree	file:
inTrans	src/btreeInt.h	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree
inTrans	tsrc/btreeInt.h	/^  u8 inTrans;        \/* TRANS_NONE, TRANS_READ or TRANS_WRITE *\/$/;"	m	struct:Btree
inTransaction	ext/fts3/fts3Int.h	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table
inTransaction	sqlite3.c	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table	file:
inTransaction	sqlite3.c	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared	file:
inTransaction	src/btreeInt.h	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared
inTransaction	src/test8.c	/^  int inTransaction;      \/* True if within a transaction *\/$/;"	m	struct:echo_vtab	file:
inTransaction	tsrc/btreeInt.h	/^  u8 inTransaction;     \/* Transaction state *\/$/;"	m	struct:BtShared
inTransaction	tsrc/fts3Int.h	/^  int inTransaction;     \/* True after xBegin but before xCommit\/xRollback *\/$/;"	m	struct:Fts3Table
include	tool/lemon.c	/^  char *include;           \/* Code to put at the start of the C file *\/$/;"	m	struct:lemon	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
incrAggDepth	sqlite3.c	/^static int incrAggDepth(Walker *pWalker, Expr *pExpr){$/;"	f	file:
incrAggDepth	src/resolve.c	/^static int incrAggDepth(Walker *pWalker, Expr *pExpr){$/;"	f	file:
incrAggDepth	tsrc/resolve.c	/^static int incrAggDepth(Walker *pWalker, Expr *pExpr){$/;"	f	file:
incrAggFunctionDepth	sqlite3.c	/^static void incrAggFunctionDepth(Expr *pExpr, int N){$/;"	f	file:
incrAggFunctionDepth	src/resolve.c	/^static void incrAggFunctionDepth(Expr *pExpr, int N){$/;"	f	file:
incrAggFunctionDepth	tsrc/resolve.c	/^static void incrAggFunctionDepth(Expr *pExpr, int N){$/;"	f	file:
incrOpenFileCount	ext/async/sqlite3async.c	/^static void incrOpenFileCount(void){$/;"	f	file:
incrPhraseTokenNext	ext/fts3/fts3.c	/^static int incrPhraseTokenNext($/;"	f	file:
incrPhraseTokenNext	sqlite3.c	/^static int incrPhraseTokenNext($/;"	f	file:
incrPhraseTokenNext	tsrc/fts3.c	/^static int incrPhraseTokenNext($/;"	f	file:
incrVacuum	sqlite3.c	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared	file:
incrVacuum	src/btreeInt.h	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared
incrVacuum	tsrc/btreeInt.h	/^  u8 incrVacuum;        \/* True if incr-vacuum is enabled *\/$/;"	m	struct:BtShared
incrVacuumStep	sqlite3.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg, int bCommit){$/;"	f	file:
incrVacuumStep	src/btree.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg, int bCommit){$/;"	f	file:
incrVacuumStep	tsrc/btree.c	/^static int incrVacuumStep(BtShared *pBt, Pgno nFin, Pgno iLastPg, int bCommit){$/;"	f	file:
incr_ntest	test/tester.tcl	/^proc incr_ntest {} {$/;"	p
incrblobClose	src/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobClose($/;"	f	file:
incrblobClose	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobClose($/;"	f	file:
incrblobHandle	src/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobHandle($/;"	f	file:
incrblobHandle	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobHandle($/;"	f	file:
incrblobInput	src/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobInput($/;"	f	file:
incrblobInput	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobInput($/;"	f	file:
incrblobOutput	src/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobOutput($/;"	f	file:
incrblobOutput	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobOutput($/;"	f	file:
incrblobSeek	src/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobSeek($/;"	f	file:
incrblobSeek	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI incrblobSeek($/;"	f	file:
incrblobWatch	src/tclsqlite.c	/^static void SQLITE_TCLAPI incrblobWatch($/;"	f	file:
incrblobWatch	tsrc/tclsqlite.c	/^static void SQLITE_TCLAPI incrblobWatch($/;"	f	file:
index	tool/lemon.c	/^  int index;               \/* An index number for this rule *\/$/;"	m	struct:rule	file:
index	tool/lemon.c	/^  int index;               \/* Index number for this symbol *\/$/;"	m	struct:symbol	file:
indexColumnNotNull	sqlite3.c	/^static int indexColumnNotNull(Index *pIdx, int iCol){$/;"	f	file:
indexColumnNotNull	src/where.c	/^static int indexColumnNotNull(Index *pIdx, int iCol){$/;"	f	file:
indexColumnNotNull	tsrc/where.c	/^static int indexColumnNotNull(Index *pIdx, int iCol){$/;"	f	file:
indexMightHelpWithOrderBy	sqlite3.c	/^static int indexMightHelpWithOrderBy($/;"	f	file:
indexMightHelpWithOrderBy	src/where.c	/^static int indexMightHelpWithOrderBy($/;"	f	file:
indexMightHelpWithOrderBy	tsrc/where.c	/^static int indexMightHelpWithOrderBy($/;"	f	file:
index_delete	ext/fts1/fts1.c	/^static int index_delete(fulltext_vtab *v, sqlite_int64 iRow, fts1Hash *pTerms){$/;"	f	file:
index_delete	ext/fts1/fulltext.c	/^static int index_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
index_delete	ext/fts2/fts2.c	/^static int index_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
index_delete	tsrc/fts1.c	/^static int index_delete(fulltext_vtab *v, sqlite_int64 iRow, fts1Hash *pTerms){$/;"	f	file:
index_delete	tsrc/fts2.c	/^static int index_delete(fulltext_vtab *v, sqlite_int64 iRow){$/;"	f	file:
index_delete_term	ext/fts1/fulltext.c	/^static int index_delete_term(fulltext_vtab *v, const char *zTerm, int nTerm,$/;"	f	file:
index_insert	ext/fts1/fts1.c	/^static int index_insert(fulltext_vtab *v, sqlite3_value *pRequestRowid,$/;"	f	file:
index_insert	ext/fts1/fulltext.c	/^static int index_insert(fulltext_vtab *v,$/;"	f	file:
index_insert	ext/fts2/fts2.c	/^static int index_insert(fulltext_vtab *v, sqlite3_value *pRequestRowid,$/;"	f	file:
index_insert	tsrc/fts1.c	/^static int index_insert(fulltext_vtab *v, sqlite3_value *pRequestRowid,$/;"	f	file:
index_insert	tsrc/fts2.c	/^static int index_insert(fulltext_vtab *v, sqlite3_value *pRequestRowid,$/;"	f	file:
index_insert_term	ext/fts1/fts1.c	/^static int index_insert_term(fulltext_vtab *v, const char *pTerm, int nTerm,$/;"	f	file:
index_insert_term	ext/fts1/fulltext.c	/^static int index_insert_term(fulltext_vtab *v, const char *zTerm, int nTerm,$/;"	f	file:
index_insert_term	tsrc/fts1.c	/^static int index_insert_term(fulltext_vtab *v, const char *pTerm, int nTerm,$/;"	f	file:
index_update	ext/fts1/fts1.c	/^static int index_update(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
index_update	ext/fts2/fts2.c	/^static int index_update(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
index_update	tsrc/fts1.c	/^static int index_update(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
index_update	tsrc/fts2.c	/^static int index_update(fulltext_vtab *v, sqlite_int64 iRow,$/;"	f	file:
indexable	sqlite3.c	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo	file:
indexable	src/whereInt.h	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo
indexable	tsrc/whereInt.h	/^  Bitmask indexable;       \/* Bitmask of all indexable tables in the clause *\/$/;"	m	struct:WhereOrInfo
info	sqlite3.c	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor	file:
info	src/btreeInt.h	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor
info	tsrc/btreeInt.h	/^  CellInfo info;            \/* A parse of the cell we are pointing at *\/$/;"	m	struct:BtCursor
init	sqlite3.c	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo	file:
init	src/sqliteInt.h	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo
init	tsrc/sqliteInt.h	/^  } init;$/;"	m	struct:sqlite3	typeref:struct:sqlite3::sqlite3InitInfo
initAvgEq	sqlite3.c	/^static void initAvgEq(Index *pIdx){$/;"	f	file:
initAvgEq	src/analyze.c	/^static void initAvgEq(Index *pIdx){$/;"	f	file:
initAvgEq	tsrc/analyze.c	/^static void initAvgEq(Index *pIdx){$/;"	f	file:
initClass	ext/misc/spellfix.c	/^static const unsigned char initClass[] = {$/;"	v	file:
initMaskSet	sqlite3.c	123343;"	d	file:
initMaskSet	src/whereInt.h	379;"	d
initMaskSet	tsrc/whereInt.h	379;"	d
initPendingTerms	ext/fts2/fts2.c	/^static int initPendingTerms(fulltext_vtab *v, sqlite_int64 iDocid){$/;"	f	file:
initPendingTerms	tsrc/fts2.c	/^static int initPendingTerms(fulltext_vtab *v, sqlite_int64 iDocid){$/;"	f	file:
initStringBuffer	ext/fts1/fts1.c	/^static void initStringBuffer(StringBuffer *sb){$/;"	f	file:
initStringBuffer	ext/fts2/fts2.c	/^static void initStringBuffer(StringBuffer *sb){$/;"	f	file:
initStringBuffer	tsrc/fts1.c	/^static void initStringBuffer(StringBuffer *sb){$/;"	f	file:
initStringBuffer	tsrc/fts2.c	/^static void initStringBuffer(StringBuffer *sb){$/;"	f	file:
init_all	src/tclsqlite.c	/^static void init_all(Tcl_Interp *interp){$/;"	f	file:
init_all	tsrc/tclsqlite.c	/^static void init_all(Tcl_Interp *interp){$/;"	f	file:
init_all_cmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI init_all_cmd($/;"	f	file:
init_all_cmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI init_all_cmd($/;"	f	file:
init_wrapper_clear	src/test_init.c	/^static int SQLITE_TCLAPI init_wrapper_clear($/;"	f	file:
init_wrapper_install	src/test_init.c	/^static int SQLITE_TCLAPI init_wrapper_install($/;"	f	file:
init_wrapper_query	src/test_init.c	/^static int SQLITE_TCLAPI init_wrapper_query($/;"	f	file:
init_wrapper_uninstall	src/test_init.c	/^static int SQLITE_TCLAPI init_wrapper_uninstall($/;"	f	file:
inmemAccess	test/fuzzcheck.c	/^static int inmemAccess($/;"	f	file:
inmemCheckReservedLock	test/fuzzcheck.c	/^static int inmemCheckReservedLock(sqlite3_file *pFile, int *pOut){$/;"	f	file:
inmemClose	test/fuzzcheck.c	/^static int inmemClose(sqlite3_file *pFile){$/;"	f	file:
inmemDelete	test/fuzzcheck.c	/^static int inmemDelete($/;"	f	file:
inmemDeviceCharacteristics	test/fuzzcheck.c	/^static int inmemDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
inmemFileControl	test/fuzzcheck.c	/^static int inmemFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
inmemFileSize	test/fuzzcheck.c	/^static int inmemFileSize(sqlite3_file *pFile, sqlite3_int64 *pSize){$/;"	f	file:
inmemFullPathname	test/fuzzcheck.c	/^static int inmemFullPathname($/;"	f	file:
inmemLock	test/fuzzcheck.c	/^static int inmemLock(sqlite3_file *pFile, int type){$/;"	f	file:
inmemOpen	test/fuzzcheck.c	/^static int inmemOpen($/;"	f	file:
inmemRead	test/fuzzcheck.c	/^static int inmemRead($/;"	f	file:
inmemSectorSize	test/fuzzcheck.c	/^static int inmemSectorSize(sqlite3_file *pFile){$/;"	f	file:
inmemSync	test/fuzzcheck.c	/^static int inmemSync(sqlite3_file *pFile, int flags){$/;"	f	file:
inmemTruncate	test/fuzzcheck.c	/^static int inmemTruncate(sqlite3_file *pFile, sqlite3_int64 iSize){$/;"	f	file:
inmemUnlock	test/fuzzcheck.c	/^static int inmemUnlock(sqlite3_file *pFile, int type){$/;"	f	file:
inmemVfsRegister	test/fuzzcheck.c	/^static void inmemVfsRegister(void){$/;"	f	file:
inmemWrite	test/fuzzcheck.c	/^static int inmemWrite($/;"	f	file:
ino	sqlite3.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
ino	src/os_unix.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
ino	tsrc/os_unix.c	/^  ino_t ino;                  \/* Inode number *\/$/;"	m	struct:unixFileId	file:
ino_t	src/test_windirent.h	/^  typedef unsigned short ino_t;$/;"	t
inodeList	sqlite3.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
inodeList	src/os_unix.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
inodeList	tsrc/os_unix.c	/^static unixInodeInfo *inodeList = 0;$/;"	v	file:
inop	test/randexpr1.tcl	/^proc inop {lhs args} {$/;"	p
input	ext/fts5/fts5parse.y	/^input ::= expr(X). { sqlite3Fts5ParseFinished(pParse, X); }$/;"	l
input	fts5parse.y	/^input ::= expr(X). { sqlite3Fts5ParseFinished(pParse, X); }$/;"	l
input	parse.y	/^input ::= cmdlist.$/;"	l
input	src/parse.y	/^input ::= cmdlist.$/;"	l
insertBinaryOperator	ext/fts3/fts3_expr.c	/^static void insertBinaryOperator($/;"	f	file:
insertBinaryOperator	sqlite3.c	/^static void insertBinaryOperator($/;"	f	file:
insertBinaryOperator	tsrc/fts3_expr.c	/^static void insertBinaryOperator($/;"	f	file:
insertCell	sqlite3.c	/^static void insertCell($/;"	f	file:
insertCell	src/btree.c	/^static void insertCell($/;"	f	file:
insertCell	tsrc/btree.c	/^static void insertCell($/;"	f	file:
insertElement	ext/fts1/ft_hash.c	/^static void insertElement($/;"	f	file:
insertElement	ext/fts1/fts1_hash.c	/^static void insertElement($/;"	f	file:
insertElement	ext/fts2/fts2_hash.c	/^static void insertElement($/;"	f	file:
insertElement	sqlite3.c	/^static void insertElement($/;"	f	file:
insertElement	src/hash.c	/^static void insertElement($/;"	f	file:
insertElement	tsrc/fts1_hash.c	/^static void insertElement($/;"	f	file:
insertElement	tsrc/fts2_hash.c	/^static void insertElement($/;"	f	file:
insertElement	tsrc/hash.c	/^static void insertElement($/;"	f	file:
insertLineMacro	tool/lemon.c	/^  int insertLineMacro;       \/* Add #line before declaration insert *\/$/;"	m	struct:pstate	file:
insertOrDeleteCost	ext/misc/spellfix.c	/^static int insertOrDeleteCost(char cPrev, char c, char cNext){$/;"	f	file:
insertTerms	ext/fts1/fts1.c	/^static int insertTerms(fulltext_vtab *v, fts1Hash *terms, sqlite_int64 iRowid,$/;"	f	file:
insertTerms	ext/fts2/fts2.c	/^static int insertTerms(fulltext_vtab *v, sqlite_int64 iRowid,$/;"	f	file:
insertTerms	tsrc/fts1.c	/^static int insertTerms(fulltext_vtab *v, fts1Hash *terms, sqlite_int64 iRowid,$/;"	f	file:
insertTerms	tsrc/fts2.c	/^static int insertTerms(fulltext_vtab *v, sqlite_int64 iRowid,$/;"	f	file:
installInitWrappers	src/test_init.c	/^static void installInitWrappers(void){$/;"	f	file:
installTestPCache	src/test_pcache.c	/^void installTestPCache($/;"	f
instcompare	ext/fts5/test/fts5_common.tcl	/^proc instcompare {lhs rhs} {$/;"	p
instrFunc	sqlite3.c	/^static void instrFunc($/;"	f	file:
instrFunc	src/func.c	/^static void instrFunc($/;"	f	file:
instrFunc	tsrc/func.c	/^static void instrFunc($/;"	f	file:
intKey	sqlite3.c	/^  u8 intKey;           \/* True if table b-trees.  False for index b-trees *\/$/;"	m	struct:MemPage	file:
intKey	src/btreeInt.h	/^  u8 intKey;           \/* True if table b-trees.  False for index b-trees *\/$/;"	m	struct:MemPage
intKey	tsrc/btreeInt.h	/^  u8 intKey;           \/* True if table b-trees.  False for index b-trees *\/$/;"	m	struct:MemPage
intKeyLeaf	sqlite3.c	/^  u8 intKeyLeaf;       \/* True if the leaf of an intKey table *\/$/;"	m	struct:MemPage	file:
intKeyLeaf	src/btreeInt.h	/^  u8 intKeyLeaf;       \/* True if the leaf of an intKey table *\/$/;"	m	struct:MemPage
intKeyLeaf	tsrc/btreeInt.h	/^  u8 intKeyLeaf;       \/* True if the leaf of an intKey table *\/$/;"	m	struct:MemPage
intTestFunc	ext/fts2/fts2_tokenizer.c	/^static void intTestFunc($/;"	f	file:
intTestFunc	ext/fts3/fts3_tokenizer.c	/^static void intTestFunc($/;"	f	file:
intTestFunc	sqlite3.c	/^static void intTestFunc($/;"	f	file:
intTestFunc	tsrc/fts2_tokenizer.c	/^static void intTestFunc($/;"	f	file:
intTestFunc	tsrc/fts3_tokenizer.c	/^static void intTestFunc($/;"	f	file:
intarrayBestIndex	src/test_intarray.c	/^static int intarrayBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
intarrayClose	src/test_intarray.c	/^static int intarrayClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
intarrayColumn	src/test_intarray.c	/^static int intarrayColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
intarrayCreate	src/test_intarray.c	/^static int intarrayCreate($/;"	f	file:
intarrayDestroy	src/test_intarray.c	/^static int intarrayDestroy(sqlite3_vtab *p){$/;"	f	file:
intarrayEof	src/test_intarray.c	/^static int intarrayEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
intarrayFilter	src/test_intarray.c	/^static int intarrayFilter($/;"	f	file:
intarrayFree	src/test_intarray.c	/^static void intarrayFree(sqlite3_intarray *p){$/;"	f	file:
intarrayModule	src/test_intarray.c	/^static sqlite3_module intarrayModule = {$/;"	v	file:
intarrayNext	src/test_intarray.c	/^static int intarrayNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
intarrayOpen	src/test_intarray.c	/^static int intarrayOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
intarrayRowid	src/test_intarray.c	/^static int intarrayRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
intarray_cursor	src/test_intarray.c	/^struct intarray_cursor {$/;"	s	file:
intarray_cursor	src/test_intarray.c	/^typedef struct intarray_cursor intarray_cursor;$/;"	t	typeref:struct:intarray_cursor	file:
intarray_vtab	src/test_intarray.c	/^struct intarray_vtab {$/;"	s	file:
intarray_vtab	src/test_intarray.c	/^typedef struct intarray_vtab intarray_vtab;$/;"	t	typeref:struct:intarray_vtab	file:
integerValue	shell.c	/^static sqlite3_int64 integerValue(const char *zArg){$/;"	f	file:
integerValue	src/shell.c	/^static sqlite3_int64 integerValue(const char *zArg){$/;"	f	file:
integerValue	test/fuzzcheck.c	/^static int integerValue(const char *zArg){$/;"	f	file:
integerValue	test/speedtest1.c	/^static int integerValue(const char *zArg){$/;"	f	file:
integerValue	tool/fuzzershell.c	/^static int integerValue(const char *zArg){$/;"	f	file:
integerValue	tsrc/shell.c	/^static sqlite3_int64 integerValue(const char *zArg){$/;"	f	file:
integerify	tool/spaceanal.tcl	/^proc integerify {real} {$/;"	p
integrity_check	test/tester.tcl	/^proc integrity_check {name {db db}} {$/;"	p
integrity_check	test/threadtest2.c	/^int integrity_check(sqlite *db, int id){$/;"	f
integrity_check	test/threadtest3.c	46;"	d	file:
integrity_check_x	test/threadtest3.c	/^static void integrity_check_x($/;"	f	file:
interiorBlockNew	ext/fts2/fts2.c	/^static InteriorBlock *interiorBlockNew(int iHeight, sqlite_int64 iChildBlock,$/;"	f	file:
interiorBlockNew	tsrc/fts2.c	/^static InteriorBlock *interiorBlockNew(int iHeight, sqlite_int64 iChildBlock,$/;"	f	file:
interiorBlockValidate	ext/fts2/fts2.c	/^static void interiorBlockValidate(InteriorBlock *pBlock){$/;"	f	file:
interiorBlockValidate	tsrc/fts2.c	/^static void interiorBlockValidate(InteriorBlock *pBlock){$/;"	f	file:
interiorReaderAtEnd	ext/fts2/fts2.c	/^static int interiorReaderAtEnd(InteriorReader *pReader){$/;"	f	file:
interiorReaderAtEnd	tsrc/fts2.c	/^static int interiorReaderAtEnd(InteriorReader *pReader){$/;"	f	file:
interiorReaderCurrentBlockid	ext/fts2/fts2.c	/^static sqlite_int64 interiorReaderCurrentBlockid(InteriorReader *pReader){$/;"	f	file:
interiorReaderCurrentBlockid	tsrc/fts2.c	/^static sqlite_int64 interiorReaderCurrentBlockid(InteriorReader *pReader){$/;"	f	file:
interiorReaderDestroy	ext/fts2/fts2.c	/^static void interiorReaderDestroy(InteriorReader *pReader){$/;"	f	file:
interiorReaderDestroy	tsrc/fts2.c	/^static void interiorReaderDestroy(InteriorReader *pReader){$/;"	f	file:
interiorReaderInit	ext/fts2/fts2.c	/^static void interiorReaderInit(const char *pData, int nData,$/;"	f	file:
interiorReaderInit	tsrc/fts2.c	/^static void interiorReaderInit(const char *pData, int nData,$/;"	f	file:
interiorReaderStep	ext/fts2/fts2.c	/^static void interiorReaderStep(InteriorReader *pReader){$/;"	f	file:
interiorReaderStep	tsrc/fts2.c	/^static void interiorReaderStep(InteriorReader *pReader){$/;"	f	file:
interiorReaderTerm	ext/fts2/fts2.c	/^static const char *interiorReaderTerm(InteriorReader *pReader){$/;"	f	file:
interiorReaderTerm	tsrc/fts2.c	/^static const char *interiorReaderTerm(InteriorReader *pReader){$/;"	f	file:
interiorReaderTermBytes	ext/fts2/fts2.c	/^static int interiorReaderTermBytes(InteriorReader *pReader){$/;"	f	file:
interiorReaderTermBytes	tsrc/fts2.c	/^static int interiorReaderTermBytes(InteriorReader *pReader){$/;"	f	file:
interiorReaderTermCmp	ext/fts2/fts2.c	/^static int interiorReaderTermCmp(InteriorReader *pReader,$/;"	f	file:
interiorReaderTermCmp	tsrc/fts2.c	/^static int interiorReaderTermCmp(InteriorReader *pReader,$/;"	f	file:
interiorWriterAppend	ext/fts2/fts2.c	/^static void interiorWriterAppend(InteriorWriter *pWriter,$/;"	f	file:
interiorWriterAppend	tsrc/fts2.c	/^static void interiorWriterAppend(InteriorWriter *pWriter,$/;"	f	file:
interiorWriterDestroy	ext/fts2/fts2.c	/^static int interiorWriterDestroy(InteriorWriter *pWriter){$/;"	f	file:
interiorWriterDestroy	tsrc/fts2.c	/^static int interiorWriterDestroy(InteriorWriter *pWriter){$/;"	f	file:
interiorWriterInit	ext/fts2/fts2.c	/^static void interiorWriterInit(int iHeight, const char *pTerm, int nTerm,$/;"	f	file:
interiorWriterInit	tsrc/fts2.c	/^static void interiorWriterInit(int iHeight, const char *pTerm, int nTerm,$/;"	f	file:
interiorWriterRootInfo	ext/fts2/fts2.c	/^static int interiorWriterRootInfo(fulltext_vtab *v, InteriorWriter *pWriter,$/;"	f	file:
interiorWriterRootInfo	tsrc/fts2.c	/^static int interiorWriterRootInfo(fulltext_vtab *v, InteriorWriter *pWriter,$/;"	f	file:
interp	ext/fts5/fts5_tcl.c	/^  Tcl_Interp *interp;$/;"	m	struct:F5tFunction	file:
interp	ext/fts5/fts5_tcl.c	/^  Tcl_Interp *interp;$/;"	m	struct:F5tTokenizerInstance	file:
interp	ext/fts5/fts5_tcl.c	/^  Tcl_Interp *interp;$/;"	m	struct:F5tTokenizerModule	file:
interp	ext/session/test_session.c	/^  Tcl_Interp *interp;$/;"	m	struct:TestConflictHandler	file:
interp	ext/session/test_session.c	/^  Tcl_Interp *interp;$/;"	m	struct:TestSession	file:
interp	src/tclsqlite.c	/^  Tcl_Interp *interp;        \/* The interpreter used for this database *\/$/;"	m	struct:SqliteDb	file:
interp	src/tclsqlite.c	/^  Tcl_Interp *interp;   \/* The TCL interpret to execute the function *\/$/;"	m	struct:SqlCollate	file:
interp	src/tclsqlite.c	/^  Tcl_Interp *interp;   \/* The TCL interpret to execute the function *\/$/;"	m	struct:SqlFunc	file:
interp	src/test1.c	/^  Tcl_Interp *interp;$/;"	m	struct:CreateFunctionV2	file:
interp	src/test1.c	/^  Tcl_Interp *interp;$/;"	m	struct:TestCollationX	file:
interp	src/test8.c	/^  Tcl_Interp *interp;     \/* Tcl interpreter containing debug variables *\/$/;"	m	struct:echo_vtab	file:
interp	src/test8.c	/^  Tcl_Interp *interp;$/;"	m	struct:EchoModule	file:
interp	src/test_bestindex.c	/^  Tcl_Interp *interp;$/;"	m	struct:tcl_vtab	file:
interp	src/test_quota.c	/^  Tcl_Interp *interp;    \/* Interpreter in which to run the script *\/$/;"	m	struct:TclQuotaCallback	file:
interp	src/test_superlock.c	/^  Tcl_Interp *interp;$/;"	m	struct:InterpAndScript	file:
interp	src/test_tclvar.c	/^  Tcl_Interp *interp;$/;"	m	struct:tclvar_vtab	file:
interp	src/test_thread.c	/^  Tcl_Interp *interp;      \/* Parent interpreter *\/$/;"	m	struct:SqlThread	file:
interp	src/test_thread.c	/^  Tcl_Interp *interp;      \/* The interpreter to execute it in. *\/$/;"	m	struct:EvalEvent	file:
interp	src/test_vfs.c	/^  Tcl_Interp *interp;             \/* Interpreter to run script in *\/$/;"	m	struct:Testvfs	file:
interp	tsrc/tclsqlite.c	/^  Tcl_Interp *interp;        \/* The interpreter used for this database *\/$/;"	m	struct:SqliteDb	file:
interp	tsrc/tclsqlite.c	/^  Tcl_Interp *interp;   \/* The TCL interpret to execute the function *\/$/;"	m	struct:SqlCollate	file:
interp	tsrc/tclsqlite.c	/^  Tcl_Interp *interp;   \/* The TCL interpret to execute the function *\/$/;"	m	struct:SqlFunc	file:
interrupt_handler	shell.c	/^static void interrupt_handler(int NotUsed){$/;"	f	file:
interrupt_handler	src/shell.c	/^static void interrupt_handler(int NotUsed){$/;"	f	file:
interrupt_handler	tsrc/shell.c	/^static void interrupt_handler(int NotUsed){$/;"	f	file:
interrupt_injectinstall	test/malloc_common.tcl	/^proc interrupt_injectinstall {} {$/;"	p
interrupt_injectstart	test/malloc_common.tcl	/^proc interrupt_injectstart {iFail} {$/;"	p
interrupt_injectstop	test/malloc_common.tcl	/^proc interrupt_injectstop {} {$/;"	p
interrupt_injectuninstall	test/malloc_common.tcl	/^proc interrupt_injectuninstall {} {$/;"	p
interruptx	sqlite3.c	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
interruptx	sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
interruptx	src/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
interruptx	tsrc/sqlite3ext.h	/^  void  (*interruptx)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
invalidateAllOverflowCache	sqlite3.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateAllOverflowCache	src/btree.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateAllOverflowCache	tsrc/btree.c	/^static void invalidateAllOverflowCache(BtShared *pBt){$/;"	f	file:
invalidateIncrblobCursors	sqlite3.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	sqlite3.c	58657;"	d	file:
invalidateIncrblobCursors	src/btree.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	src/btree.c	521;"	d	file:
invalidateIncrblobCursors	tsrc/btree.c	/^static void invalidateIncrblobCursors($/;"	f	file:
invalidateIncrblobCursors	tsrc/btree.c	521;"	d	file:
invalidateOverflowCache	sqlite3.c	58608;"	d	file:
invalidateOverflowCache	src/btree.c	472;"	d	file:
invalidateOverflowCache	tsrc/btree.c	472;"	d	file:
invalidateTempStorage	sqlite3.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
invalidateTempStorage	src/pragma.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
invalidateTempStorage	tsrc/pragma.c	/^static int invalidateTempStorage(Parse *pParse){$/;"	f	file:
invokeProfileCallback	sqlite3.c	/^static SQLITE_NOINLINE void invokeProfileCallback(sqlite3 *db, Vdbe *p){$/;"	f	file:
invokeProfileCallback	src/vdbeapi.c	/^static SQLITE_NOINLINE void invokeProfileCallback(sqlite3 *db, Vdbe *p){$/;"	f	file:
invokeProfileCallback	tsrc/vdbeapi.c	/^static SQLITE_NOINLINE void invokeProfileCallback(sqlite3 *db, Vdbe *p){$/;"	f	file:
invokeValueDestructor	sqlite3.c	/^static int invokeValueDestructor($/;"	f	file:
invokeValueDestructor	src/vdbeapi.c	/^static int invokeValueDestructor($/;"	f	file:
invokeValueDestructor	tsrc/vdbeapi.c	/^static int invokeValueDestructor($/;"	f	file:
ioDelay	ext/async/sqlite3async.c	/^  volatile int ioDelay;        \/* Extra delay between write operations *\/$/;"	m	struct:TestAsyncStaticData	file:
ioError	ext/async/sqlite3async.c	/^  int ioError;                 \/* True if an IO error has occurred *\/$/;"	m	struct:TestAsyncStaticData	file:
io_trace_callback	src/test1.c	/^static void io_trace_callback(const char *zFormat, ...){$/;"	f	file:
ioerr_err	src/test_vfs.c	/^  TestFaultInject ioerr_err;$/;"	m	struct:Testvfs	file:
ioerr_injectstart	test/malloc_common.tcl	/^proc ioerr_injectstart {persist iFail} {$/;"	p
ioerr_injectstop	test/malloc_common.tcl	/^proc ioerr_injectstop {} {$/;"	p
iotrace	shell.c	/^static FILE *iotrace = 0;$/;"	v	file:
iotrace	src/shell.c	/^static FILE *iotrace = 0;$/;"	v	file:
iotrace	tsrc/shell.c	/^static FILE *iotrace = 0;$/;"	v	file:
iotracePrintf	shell.c	/^static void SQLITE_CDECL iotracePrintf(const char *zFormat, ...){$/;"	f	file:
iotracePrintf	src/shell.c	/^static void SQLITE_CDECL iotracePrintf(const char *zFormat, ...){$/;"	f	file:
iotracePrintf	tsrc/shell.c	/^static void SQLITE_CDECL iotracePrintf(const char *zFormat, ...){$/;"	f	file:
iotrace_file	src/test1.c	/^static FILE *iotrace_file = 0;$/;"	v	file:
isAdministrator	vsixtest/vsixtest.tcl	/^proc isAdministrator {} {$/;"	p
isAnchor	sqlite3.c	/^  u8 isAnchor;                   \/* This is the PGroup.lru element *\/$/;"	m	struct:PgHdr1	file:
isAnchor	src/pcache1.c	/^  u8 isAnchor;                   \/* This is the PGroup.lru element *\/$/;"	m	struct:PgHdr1	file:
isAnchor	tsrc/pcache1.c	/^  u8 isAnchor;                   \/* This is the PGroup.lru element *\/$/;"	m	struct:PgHdr1	file:
isAttached	sqlite3.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isAttached	src/backup.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isAttached	tsrc/backup.c	/^  int isAttached;          \/* True once backup has been registered with pager *\/$/;"	m	struct:sqlite3_backup	file:
isBadDirectory	vsixtest/vsixtest.tcl	/^proc isBadDirectory { directory } {$/;"	p
isBadFile	vsixtest/vsixtest.tcl	/^proc isBadFile { fileName } {$/;"	p
isBenignMode	src/test_malloc.c	/^  int isBenignMode;       \/* True if malloc failures are considered benign *\/$/;"	m	struct:MemFault	file:
isBulkLocal	sqlite3.c	/^  u8 isBulkLocal;                \/* This page from bulk local storage *\/$/;"	m	struct:PgHdr1	file:
isBulkLocal	src/pcache1.c	/^  u8 isBulkLocal;                \/* This page from bulk local storage *\/$/;"	m	struct:PgHdr1	file:
isBulkLocal	tsrc/pcache1.c	/^  u8 isBulkLocal;                \/* This page from bulk local storage *\/$/;"	m	struct:PgHdr1	file:
isCandidateForInOpt	sqlite3.c	/^static Select *isCandidateForInOpt(Expr *pX){$/;"	f	file:
isCandidateForInOpt	src/expr.c	/^static Select *isCandidateForInOpt(Expr *pX){$/;"	f	file:
isCandidateForInOpt	tsrc/expr.c	/^static Select *isCandidateForInOpt(Expr *pX){$/;"	f	file:
isConsonant	ext/fts1/fts1_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	ext/fts2/fts2_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	ext/fts3/fts3_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	sqlite3.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	tsrc/fts1_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	tsrc/fts2_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isConsonant	tsrc/fts3_porter.c	/^static int isConsonant(const char *z){$/;"	f	file:
isCorrelated	sqlite3.c	/^      unsigned isCorrelated :1;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
isCorrelated	src/sqliteInt.h	/^      unsigned isCorrelated :1;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
isCorrelated	tsrc/sqliteInt.h	/^      unsigned isCorrelated :1;  \/* True if sub-query is correlated *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
isCovering	sqlite3.c	/^  unsigned isCovering:1;   \/* True if this is a covering index *\/$/;"	m	struct:Index	file:
isCovering	src/sqliteInt.h	/^  unsigned isCovering:1;   \/* True if this is a covering index *\/$/;"	m	struct:Index
isCovering	tsrc/sqliteInt.h	/^  unsigned isCovering:1;   \/* True if this is a covering index *\/$/;"	m	struct:Index
isDate	sqlite3.c	/^static int isDate($/;"	f	file:
isDate	src/date.c	/^static int isDate($/;"	f	file:
isDate	tsrc/date.c	/^static int isDate($/;"	f	file:
isDeferred	sqlite3.c	/^  u8 isDeferred;       \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey	file:
isDeferred	src/sqliteInt.h	/^  u8 isDeferred;       \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey
isDeferred	tsrc/sqliteInt.h	/^  u8 isDeferred;       \/* True if constraint checking is deferred till COMMIT *\/$/;"	m	struct:FKey
isDelim	ext/fts1/fts1_porter.c	572;"	d	file:
isDelim	ext/fts1/fts1_tokenizer1.c	/^static int isDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
isDelim	ext/fts2/fts2_porter.c	573;"	d	file:
isDelim	ext/fts3/fts3_porter.c	588;"	d	file:
isDelim	sqlite3.c	150519;"	d	file:
isDelim	tsrc/fts1_porter.c	572;"	d	file:
isDelim	tsrc/fts1_tokenizer1.c	/^static int isDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
isDelim	tsrc/fts2_porter.c	573;"	d	file:
isDelim	tsrc/fts3_porter.c	588;"	d	file:
isDesc	ext/misc/series.c	/^  int isDesc;                \/* True to count down rather than up *\/$/;"	m	struct:series_cursor	file:
isDirSep	mptest/mptest.c	62;"	d	file:
isDirSep	mptest/mptest.c	64;"	d	file:
isDirty	ext/rtree/rtree.c	/^  int isDirty;                \/* True if the node needs to be written to disk *\/$/;"	m	struct:RtreeNode	file:
isDirty	sqlite3.c	/^  int isDirty;                \/* True if the node needs to be written to disk *\/$/;"	m	struct:RtreeNode	file:
isDirty	tsrc/rtree.c	/^  int isDirty;                \/* True if the node needs to be written to disk *\/$/;"	m	struct:RtreeNode	file:
isDistinctRedundant	sqlite3.c	/^static int isDistinctRedundant($/;"	f	file:
isDistinctRedundant	src/where.c	/^static int isDistinctRedundant($/;"	f	file:
isDistinctRedundant	tsrc/where.c	/^static int isDistinctRedundant($/;"	f	file:
isEof	ext/fts3/fts3Int.h	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor
isEof	ext/fts3/fts3_aux.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	ext/fts3/fts3_term.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3termCursor	file:
isEof	sqlite3.c	/^  int isEof;                      \/* After pStmt has returned SQLITE_DONE *\/$/;"	m	struct:StatCursor	file:
isEof	sqlite3.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEof	sqlite3.c	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor	file:
isEof	src/dbstat.c	/^  int isEof;                      \/* After pStmt has returned SQLITE_DONE *\/$/;"	m	struct:StatCursor	file:
isEof	tsrc/dbstat.c	/^  int isEof;                      \/* After pStmt has returned SQLITE_DONE *\/$/;"	m	struct:StatCursor	file:
isEof	tsrc/fts3Int.h	/^  u8 isEof;                       \/* True if at End Of Results *\/$/;"	m	struct:Fts3Cursor
isEof	tsrc/fts3_aux.c	/^  int isEof;                      \/* True if cursor is at EOF *\/$/;"	m	struct:Fts3auxCursor	file:
isEphemeral	sqlite3.c	/^  Bool isEphemeral:1;   \/* True for an ephemeral table *\/$/;"	m	struct:VdbeCursor	file:
isEphemeral	src/vdbeInt.h	/^  Bool isEphemeral:1;   \/* True for an ephemeral table *\/$/;"	m	struct:VdbeCursor
isEphemeral	tsrc/vdbeInt.h	/^  Bool isEphemeral:1;   \/* True for an ephemeral table *\/$/;"	m	struct:VdbeCursor
isErr	src/test_sqllog.c	/^  int isErr;                      \/* True if an error has occurred *\/$/;"	m	struct:SLConn	file:
isError	sqlite3.c	/^  int isError;            \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context	file:
isError	src/vdbeInt.h	/^  int isError;            \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context
isError	tsrc/vdbeInt.h	/^  int isError;            \/* Error code returned by the function. *\/$/;"	m	struct:sqlite3_context
isFatalError	sqlite3.c	/^static int isFatalError(int rc){$/;"	f	file:
isFatalError	src/backup.c	/^static int isFatalError(int rc){$/;"	f	file:
isFatalError	tsrc/backup.c	/^static int isFatalError(int rc){$/;"	f	file:
isFloat	tool/logest.c	/^int isFloat(const char *z){$/;"	f
isFullshm	src/test_vfs.c	/^  int isFullshm;$/;"	m	struct:Testvfs	file:
isIdChar	ext/fts1/fts1.c	/^static const char isIdChar[] = {$/;"	v	file:
isIdChar	ext/fts1/fts1_porter.c	/^static const char isIdChar[] = {$/;"	v	file:
isIdChar	ext/fts2/fts2.c	/^static const char isIdChar[] = {$/;"	v	file:
isIdChar	tsrc/fts1.c	/^static const char isIdChar[] = {$/;"	v	file:
isIdChar	tsrc/fts1_porter.c	/^static const char isIdChar[] = {$/;"	v	file:
isIdChar	tsrc/fts2.c	/^static const char isIdChar[] = {$/;"	v	file:
isIndexedBy	sqlite3.c	/^      unsigned isIndexedBy :1;   \/* True if there is an INDEXED BY clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
isIndexedBy	src/sqliteInt.h	/^      unsigned isIndexedBy :1;   \/* True if there is an INDEXED BY clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
isIndexedBy	tsrc/sqliteInt.h	/^      unsigned isIndexedBy :1;   \/* True if there is an INDEXED BY clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
isInfinity	ext/misc/percentile.c	/^static int isInfinity(double r){$/;"	f	file:
isInit	ext/async/sqlite3async.c	/^  int isInit;$/;"	m	struct:AsyncPrimitives	file:
isInit	sqlite3.c	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config	file:
isInit	sqlite3.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	sqlite3.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	sqlite3.c	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage	file:
isInit	sqlite3.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInit	src/btreeInt.h	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage
isInit	src/pcache1.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	src/random.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInit	src/sqliteInt.h	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config
isInit	src/tclsqlite.c	/^  int isInit;$/;"	m	struct:MD5Context	file:
isInit	src/test_mutex.c	/^  int isInit;                \/* True if initialized *\/$/;"	m	struct:test_mutex_globals	file:
isInit	src/wal.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInit	test/threadtest3.c	/^  int isInit;$/;"	m	struct:MD5Context	file:
isInit	tsrc/btreeInt.h	/^  u8 isInit;           \/* True if previously initialized. MUST BE FIRST! *\/$/;"	m	struct:MemPage
isInit	tsrc/pcache1.c	/^  int isInit;                    \/* True if initialized *\/$/;"	m	struct:PCacheGlobal	file:
isInit	tsrc/random.c	/^  unsigned char isInit;          \/* True if initialized *\/$/;"	m	struct:sqlite3PrngType	file:
isInit	tsrc/sqliteInt.h	/^  int isInit;                       \/* True after initialization has finished *\/$/;"	m	struct:Sqlite3Config
isInit	tsrc/tclsqlite.c	/^  int isInit;$/;"	m	struct:MD5Context	file:
isInit	tsrc/wal.c	/^  u8 isInit;                      \/* 1 when initialized *\/$/;"	m	struct:WalIndexHdr	file:
isInitialized	src/test_multiplex.c	/^  int isInitialized;$/;"	m	struct:__anon62	file:
isInitialized	src/test_quota.c	/^  int isInitialized;$/;"	m	struct:__anon67	file:
isInstalled	src/test_async.c	/^  int isInstalled;                     \/* True when async VFS is installed *\/$/;"	m	struct:TestAsyncGlobal	file:
isInstalled	src/test_malloc.c	/^  int isInstalled;        \/* True if the fault simulation layer is installed *\/$/;"	m	struct:MemFault	file:
isInstalled	src/test_mutex.c	/^  int isInstalled;           \/* True if installed *\/$/;"	m	struct:test_mutex_globals	file:
isInteger	tool/logest.c	/^int isInteger(const char *z){$/;"	f
isInterrupted	sqlite3.c	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon78	file:
isInterrupted	src/sqliteInt.h	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon52
isInterrupted	tsrc/sqliteInt.h	/^    volatile int isInterrupted; \/* True if sqlite3_interrupt has been called *\/$/;"	m	union:sqlite3::__anon20
isLikeOrGlob	sqlite3.c	/^static int isLikeOrGlob($/;"	f	file:
isLikeOrGlob	src/whereexpr.c	/^static int isLikeOrGlob($/;"	f	file:
isLikeOrGlob	tsrc/whereexpr.c	/^static int isLikeOrGlob($/;"	f	file:
isLocked	tool/getlock.c	/^static int isLocked($/;"	f	file:
isLookaside	sqlite3.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	sqlite3.c	24232;"	d	file:
isLookaside	src/malloc.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	src/malloc.c	400;"	d	file:
isLookaside	tsrc/malloc.c	/^static int isLookaside(sqlite3 *db, void *p){$/;"	f	file:
isLookaside	tsrc/malloc.c	400;"	d	file:
isMallocInit	sqlite3.c	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMallocInit	src/sqliteInt.h	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config
isMallocInit	tsrc/sqliteInt.h	/^  int isMallocInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config
isMalloced	sqlite3.c	15756;"	d	file:
isMalloced	src/sqliteInt.h	3157;"	d
isMalloced	tsrc/sqliteInt.h	3157;"	d
isMatchOfColumn	sqlite3.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchOfColumn	src/whereexpr.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchOfColumn	tsrc/whereexpr.c	/^static int isMatchOfColumn($/;"	f	file:
isMatchinfoNeeded	ext/fts3/fts3Int.h	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor
isMatchinfoNeeded	sqlite3.c	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor	file:
isMatchinfoNeeded	tsrc/fts3Int.h	/^  int isMatchinfoNeeded;          \/* True when aMatchinfo[] needs filling in *\/$/;"	m	struct:Fts3Cursor
isMultiWrite	sqlite3.c	/^  u8 isMultiWrite;     \/* True if statement may modify\/insert multiple rows *\/$/;"	m	struct:Parse	file:
isMultiWrite	src/sqliteInt.h	/^  u8 isMultiWrite;     \/* True if statement may modify\/insert multiple rows *\/$/;"	m	struct:Parse
isMultiWrite	tsrc/sqliteInt.h	/^  u8 isMultiWrite;     \/* True if statement may modify\/insert multiple rows *\/$/;"	m	struct:Parse
isMutexInit	sqlite3.c	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config	file:
isMutexInit	src/sqliteInt.h	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config
isMutexInit	tsrc/sqliteInt.h	/^  int isMutexInit;                  \/* True after mutexes are initialized *\/$/;"	m	struct:Sqlite3Config
isNoshm	src/test_vfs.c	/^  int isNoshm;$/;"	m	struct:Testvfs	file:
isNot	ext/fts1/fts1.c	/^  signed char isNot; \/* this term is preceded by "-" *\/$/;"	m	struct:QueryTerm	file:
isNot	ext/fts2/fts2.c	/^  signed char isNot; \/* this term is preceded by "-" *\/$/;"	m	struct:QueryTerm	file:
isNot	ext/fts3/fts3_expr.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isNot	sqlite3.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isNot	tsrc/fts1.c	/^  signed char isNot; \/* this term is preceded by "-" *\/$/;"	m	struct:QueryTerm	file:
isNot	tsrc/fts2.c	/^  signed char isNot; \/* this term is preceded by "-" *\/$/;"	m	struct:QueryTerm	file:
isNot	tsrc/fts3_expr.c	/^  int isNot;                          \/* True if getNextNode() sees a unary - *\/$/;"	m	struct:ParseContext	file:
isNullSegment	ext/fts3/tool/fts3view.c	/^static int isNullSegment(sqlite3 *db, const char *zTab, sqlite3_int64 iBlockId){$/;"	f	file:
isNumber	shell.c	/^static int isNumber(const char *z, int *realnum){$/;"	f	file:
isNumber	src/shell.c	/^static int isNumber(const char *z, int *realnum){$/;"	f	file:
isNumber	tsrc/shell.c	/^static int isNumber(const char *z, int *realnum){$/;"	f	file:
isOpen	sqlite3.c	47090;"	d	file:
isOpen	src/pager.c	813;"	d	file:
isOpen	tsrc/pager.c	813;"	d	file:
isOr	ext/fts1/fts1.c	/^  signed char isOr;  \/* this term is preceded by "OR" *\/$/;"	m	struct:QueryTerm	file:
isOr	ext/fts2/fts2.c	/^  signed char isOr;  \/* this term is preceded by "OR" *\/$/;"	m	struct:QueryTerm	file:
isOr	tsrc/fts1.c	/^  signed char isOr;  \/* this term is preceded by "OR" *\/$/;"	m	struct:QueryTerm	file:
isOr	tsrc/fts2.c	/^  signed char isOr;  \/* this term is preceded by "OR" *\/$/;"	m	struct:QueryTerm	file:
isOrdered	sqlite3.c	/^      i8 isOrdered;          \/* True if satisfies ORDER BY *\/$/;"	m	struct:WhereLoop::__anon98::__anon100	file:
isOrdered	sqlite3.c	/^  Bool isOrdered:1;     \/* True if the table is not BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor	file:
isOrdered	sqlite3.c	/^  i8 isOrdered;         \/* No. of ORDER BY terms satisfied. -1 for unknown *\/$/;"	m	struct:WherePath	file:
isOrdered	src/vdbeInt.h	/^  Bool isOrdered:1;     \/* True if the table is not BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor
isOrdered	src/whereInt.h	/^      i8 isOrdered;          \/* True if satisfies ORDER BY *\/$/;"	m	struct:WhereLoop::__anon47::__anon49
isOrdered	src/whereInt.h	/^  i8 isOrdered;         \/* No. of ORDER BY terms satisfied. -1 for unknown *\/$/;"	m	struct:WherePath
isOrdered	tsrc/vdbeInt.h	/^  Bool isOrdered:1;     \/* True if the table is not BTREE_UNORDERED *\/$/;"	m	struct:VdbeCursor
isOrdered	tsrc/whereInt.h	/^      i8 isOrdered;          \/* True if satisfies ORDER BY *\/$/;"	m	struct:WhereLoop::__anon12::__anon14
isOrdered	tsrc/whereInt.h	/^  i8 isOrdered;         \/* No. of ORDER BY terms satisfied. -1 for unknown *\/$/;"	m	struct:WherePath
isPCacheInit	sqlite3.c	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config	file:
isPCacheInit	src/sqliteInt.h	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config
isPCacheInit	tsrc/sqliteInt.h	/^  int isPCacheInit;                 \/* True after malloc is initialized *\/$/;"	m	struct:Sqlite3Config
isPSample	sqlite3.c	/^  u8 isPSample;                   \/* True if a periodic sample *\/$/;"	m	struct:Stat4Sample	file:
isPSample	src/analyze.c	/^  u8 isPSample;                   \/* True if a periodic sample *\/$/;"	m	struct:Stat4Sample	file:
isPSample	tsrc/analyze.c	/^  u8 isPSample;                   \/* True if a periodic sample *\/$/;"	m	struct:Stat4Sample	file:
isPattern	src/test8.c	/^  int isPattern;$/;"	m	struct:echo_vtab	file:
isPinned	sqlite3.c	/^  u8 isPinned;                   \/* Page in use, not on the LRU list *\/$/;"	m	struct:PgHdr1	file:
isPinned	src/pcache1.c	/^  u8 isPinned;                   \/* Page in use, not on the LRU list *\/$/;"	m	struct:PgHdr1	file:
isPinned	src/test_pcache.c	/^    int isPinned;              \/* True if the page is pinned *\/$/;"	m	struct:testpcache::testpcachePage	file:
isPinned	tsrc/pcache1.c	/^  u8 isPinned;                   \/* Page in use, not on the LRU list *\/$/;"	m	struct:PgHdr1	file:
isPrefix	ext/fts2/fts2.c	/^  signed char isPrefix; \/* this term is followed by "*" *\/$/;"	m	struct:QueryTerm	file:
isPrefix	ext/fts3/fts3Int.h	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken
isPrefix	ext/misc/spellfix.c	/^  int isPrefix;            \/* True if ends with '*' character *\/$/;"	m	struct:EditDist3FromString	file:
isPrefix	sqlite3.c	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken	file:
isPrefix	tsrc/fts2.c	/^  signed char isPrefix; \/* this term is followed by "*" *\/$/;"	m	struct:QueryTerm	file:
isPrefix	tsrc/fts3Int.h	/^  int isPrefix;                   \/* True if token ends with a "*" character *\/$/;"	m	struct:Fts3PhraseToken
isPrepareV2	sqlite3.c	/^  bft isPrepareV2:1;      \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe	file:
isPrepareV2	src/vdbeInt.h	/^  bft isPrepareV2:1;      \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe
isPrepareV2	tsrc/vdbeInt.h	/^  bft isPrepareV2:1;      \/* True if prepared with prepare_v2() *\/$/;"	m	struct:Vdbe
isReadonly	sqlite3.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isReadonly	src/os_unix.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isReadonly	tsrc/os_unix.c	/^  u8 isReadonly;             \/* True if read-only *\/$/;"	m	struct:unixShmNode	file:
isRecursive	sqlite3.c	/^      unsigned isRecursive :1;   \/* True for recursive reference in WITH *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
isRecursive	src/sqliteInt.h	/^      unsigned isRecursive :1;   \/* True for recursive reference in WITH *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
isRecursive	tsrc/sqliteInt.h	/^      unsigned isRecursive :1;   \/* True for recursive reference in WITH *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
isRequireSeek	ext/fts3/fts3Int.h	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor
isRequireSeek	sqlite3.c	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor	file:
isRequireSeek	tsrc/fts3Int.h	/^  u8 isRequireSeek;               \/* True if must seek pStmt to %_content row *\/$/;"	m	struct:Fts3Cursor
isResized	sqlite3.c	/^  unsigned isResized:1;    \/* True if resizeIndexObject() has been called *\/$/;"	m	struct:Index	file:
isResized	src/sqliteInt.h	/^  unsigned isResized:1;    \/* True if resizeIndexObject() has been called *\/$/;"	m	struct:Index
isResized	tsrc/sqliteInt.h	/^  unsigned isResized:1;    \/* True if resizeIndexObject() has been called *\/$/;"	m	struct:Index
isSetNullAction	sqlite3.c	/^static int isSetNullAction(Parse *pParse, FKey *pFKey){$/;"	f	file:
isSetNullAction	src/fkey.c	/^static int isSetNullAction(Parse *pParse, FKey *pFKey){$/;"	f	file:
isSetNullAction	tsrc/fkey.c	/^static int isSetNullAction(Parse *pParse, FKey *pFKey){$/;"	f	file:
isSimpleCount	sqlite3.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSimpleCount	src/select.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSimpleCount	tsrc/select.c	/^static Table *isSimpleCount(Select *p, AggInfo *pAggInfo){$/;"	f	file:
isSorter	sqlite3.c	77217;"	d	file:
isSorter	src/vdbe.c	178;"	d	file:
isSorter	tsrc/vdbe.c	178;"	d	file:
isSystemTable	sqlite3.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isSystemTable	src/alter.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isSystemTable	tsrc/alter.c	/^static int isSystemTable(Parse *pParse, const char *zName){$/;"	f	file:
isTabFunc	sqlite3.c	/^      unsigned isTabFunc :1;     \/* True if table-valued-function syntax *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
isTabFunc	src/sqliteInt.h	/^      unsigned isTabFunc :1;     \/* True if table-valued-function syntax *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
isTabFunc	tsrc/sqliteInt.h	/^      unsigned isTabFunc :1;     \/* True if table-valued-function syntax *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
isTable	sqlite3.c	/^  u8 isTable;           \/* True for rowid tables.  False for indexes *\/$/;"	m	struct:VdbeCursor	file:
isTable	src/vdbeInt.h	/^  u8 isTable;           \/* True for rowid tables.  False for indexes *\/$/;"	m	struct:VdbeCursor
isTable	tsrc/vdbeInt.h	/^  u8 isTable;           \/* True for rowid tables.  False for indexes *\/$/;"	m	struct:VdbeCursor
isTemp	test/speedtest1.c	/^static const char *isTemp(int N){$/;"	f	file:
isTkn	tool/lemon.c	/^  int isTkn;           \/* True to use tokens.  False for non-terminals *\/$/;"	m	struct:axset	file:
isTnct	sqlite3.c	/^  u8 isTnct;      \/* True if the DISTINCT keyword is present *\/$/;"	m	struct:DistinctCtx	file:
isTnct	src/select.c	/^  u8 isTnct;      \/* True if the DISTINCT keyword is present *\/$/;"	m	struct:DistinctCtx	file:
isTnct	tsrc/select.c	/^  u8 isTnct;      \/* True if the DISTINCT keyword is present *\/$/;"	m	struct:DistinctCtx	file:
isTransactionSavepoint	sqlite3.c	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3	file:
isTransactionSavepoint	src/sqliteInt.h	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3
isTransactionSavepoint	tsrc/sqliteInt.h	/^  u8 isTransactionSavepoint;    \/* True if the outermost savepoint is a TS *\/$/;"	m	struct:sqlite3
isView	sqlite3.c	102585;"	d	file:
isView	sqlite3.c	102586;"	d	file:
isView	sqlite3.c	102889;"	d	file:
isView	sqlite3.c	107037;"	d	file:
isView	sqlite3.c	107038;"	d	file:
isView	sqlite3.c	107540;"	d	file:
isView	sqlite3.c	120672;"	d	file:
isView	sqlite3.c	120673;"	d	file:
isView	sqlite3.c	121202;"	d	file:
isView	src/delete.c	277;"	d	file:
isView	src/delete.c	278;"	d	file:
isView	src/delete.c	581;"	d	file:
isView	src/insert.c	1071;"	d	file:
isView	src/insert.c	568;"	d	file:
isView	src/insert.c	569;"	d	file:
isView	src/update.c	170;"	d	file:
isView	src/update.c	171;"	d	file:
isView	src/update.c	700;"	d	file:
isView	tsrc/delete.c	277;"	d	file:
isView	tsrc/delete.c	278;"	d	file:
isView	tsrc/delete.c	581;"	d	file:
isView	tsrc/insert.c	1071;"	d	file:
isView	tsrc/insert.c	568;"	d	file:
isView	tsrc/insert.c	569;"	d	file:
isView	tsrc/update.c	170;"	d	file:
isView	tsrc/update.c	171;"	d	file:
isView	tsrc/update.c	700;"	d	file:
isVowel	ext/fts1/fts1_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	ext/fts2/fts2_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	ext/fts3/fts3_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	sqlite3.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	tsrc/fts1_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	tsrc/fts2_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isVowel	tsrc/fts3_porter.c	/^static int isVowel(const char *z){$/;"	f	file:
isWindows	vsixtest/vsixtest.tcl	/^proc isWindows {} {$/;"	p
isWriteLock	sqlite3.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
isWriteLock	src/build.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
isWriteLock	tsrc/build.c	/^  u8 isWriteLock;      \/* True for write lock.  False for a read lock *\/$/;"	m	struct:TableLock	file:
is_phrase	ext/fts1/fulltext.c	/^  int is_phrase;    \/* true if this term begins a new phrase *\/$/;"	m	struct:QueryTerm	file:
is_relative_file	test/tester.tcl	/^proc is_relative_file { file } {$/;"	p
is_without_rowid	tool/spaceanal.tcl	/^proc is_without_rowid {tname} {$/;"	p
isatty	shell.c	104;"	d	file:
isatty	shell.c	131;"	d	file:
isatty	src/shell.c	104;"	d	file:
isatty	src/shell.c	131;"	d	file:
isatty	tsrc/shell.c	104;"	d	file:
isatty	tsrc/shell.c	131;"	d	file:
isquick	test/tester.tcl	/^proc isquick {} {$/;"	p
iter	ext/fts5/fts5_aux.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
iter	fts5.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
iter	sqlite3.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
iter	tsrc/fts5.c	/^  CInstIter iter;                 \/* Coalesced Instance Iterator *\/$/;"	m	struct:HighlightContext	file:
ix	sqlite3.c	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet	file:
ix	src/whereInt.h	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet
ix	tsrc/whereInt.h	/^  int ix[BMS];                  \/* Cursor assigned to each bit *\/$/;"	m	struct:WhereMaskSet
j	sqlite3.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
j	src/random.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
j	tsrc/random.c	/^  unsigned char i, j;            \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
jfd	sqlite3.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jfd	src/pager.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jfd	tsrc/pager.c	/^  sqlite3_file *jfd;          \/* File descriptor for main journal *\/$/;"	m	struct:Pager	file:
jnFlags	ext/misc/json1.c	/^  u8 jnFlags;            \/* JNODE flags *\/$/;"	m	struct:JsonNode	file:
jnFlags	sqlite3.c	/^  u8 jnFlags;            \/* JNODE flags *\/$/;"	m	struct:JsonNode	file:
jnFlags	tsrc/json1.c	/^  u8 jnFlags;            \/* JNODE flags *\/$/;"	m	struct:JsonNode	file:
join_all_threads	test/threadtest3.c	56;"	d	file:
join_all_threads_x	test/threadtest3.c	/^static void join_all_threads_x($/;"	f	file:
jointype	sqlite3.c	/^      u8 jointype;      \/* Type of join between this table and the previous *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
jointype	src/sqliteInt.h	/^      u8 jointype;      \/* Type of join between this table and the previous *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
jointype	tsrc/sqliteInt.h	/^      u8 jointype;      \/* Type of join between this table and the previous *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
journalHdr	sqlite3.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdr	src/pager.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdr	tsrc/pager.c	/^  i64 journalHdr;             \/* Byte offset to previous journal header *\/$/;"	m	struct:Pager	file:
journalHdrOffset	sqlite3.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalHdrOffset	src/pager.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalHdrOffset	tsrc/pager.c	/^static i64 journalHdrOffset(Pager *pPager){$/;"	f	file:
journalMode	sqlite3.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalMode	src/pager.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalMode	tsrc/pager.c	/^  u8 journalMode;             \/* One of the PAGER_JOURNALMODE_* values *\/$/;"	m	struct:Pager	file:
journalOff	sqlite3.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalOff	src/pager.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalOff	tsrc/pager.c	/^  i64 journalOff;             \/* Current write offset in the journal file *\/$/;"	m	struct:Pager	file:
journalSizeLimit	sqlite3.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
journalSizeLimit	src/pager.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
journalSizeLimit	tsrc/pager.c	/^  i64 journalSizeLimit;       \/* Size limit for persistent journal files *\/$/;"	m	struct:Pager	file:
jrnlBufferSize	sqlite3.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlBufferSize	sqlite3.c	47452;"	d	file:
jrnlBufferSize	src/pager.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlBufferSize	src/pager.c	1175;"	d	file:
jrnlBufferSize	tsrc/pager.c	/^static int jrnlBufferSize(Pager *pPager){$/;"	f	file:
jrnlBufferSize	tsrc/pager.c	1175;"	d	file:
jsonAppendChar	ext/misc/json1.c	/^static void jsonAppendChar(JsonString *p, char c){$/;"	f	file:
jsonAppendChar	sqlite3.c	/^static void jsonAppendChar(JsonString *p, char c){$/;"	f	file:
jsonAppendChar	tsrc/json1.c	/^static void jsonAppendChar(JsonString *p, char c){$/;"	f	file:
jsonAppendRaw	ext/misc/json1.c	/^static void jsonAppendRaw(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendRaw	sqlite3.c	/^static void jsonAppendRaw(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendRaw	tsrc/json1.c	/^static void jsonAppendRaw(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendSeparator	ext/misc/json1.c	/^static void jsonAppendSeparator(JsonString *p){$/;"	f	file:
jsonAppendSeparator	sqlite3.c	/^static void jsonAppendSeparator(JsonString *p){$/;"	f	file:
jsonAppendSeparator	tsrc/json1.c	/^static void jsonAppendSeparator(JsonString *p){$/;"	f	file:
jsonAppendString	ext/misc/json1.c	/^static void jsonAppendString(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendString	sqlite3.c	/^static void jsonAppendString(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendString	tsrc/json1.c	/^static void jsonAppendString(JsonString *p, const char *zIn, u32 N){$/;"	f	file:
jsonAppendValue	ext/misc/json1.c	/^static void jsonAppendValue($/;"	f	file:
jsonAppendValue	sqlite3.c	/^static void jsonAppendValue($/;"	f	file:
jsonAppendValue	tsrc/json1.c	/^static void jsonAppendValue($/;"	f	file:
jsonArrayFinal	ext/misc/json1.c	/^static void jsonArrayFinal(sqlite3_context *ctx){$/;"	f	file:
jsonArrayFinal	sqlite3.c	/^static void jsonArrayFinal(sqlite3_context *ctx){$/;"	f	file:
jsonArrayFinal	tsrc/json1.c	/^static void jsonArrayFinal(sqlite3_context *ctx){$/;"	f	file:
jsonArrayFunc	ext/misc/json1.c	/^static void jsonArrayFunc($/;"	f	file:
jsonArrayFunc	sqlite3.c	/^static void jsonArrayFunc($/;"	f	file:
jsonArrayFunc	tsrc/json1.c	/^static void jsonArrayFunc($/;"	f	file:
jsonArrayLengthFunc	ext/misc/json1.c	/^static void jsonArrayLengthFunc($/;"	f	file:
jsonArrayLengthFunc	sqlite3.c	/^static void jsonArrayLengthFunc($/;"	f	file:
jsonArrayLengthFunc	tsrc/json1.c	/^static void jsonArrayLengthFunc($/;"	f	file:
jsonArrayStep	ext/misc/json1.c	/^static void jsonArrayStep($/;"	f	file:
jsonArrayStep	sqlite3.c	/^static void jsonArrayStep($/;"	f	file:
jsonArrayStep	tsrc/json1.c	/^static void jsonArrayStep($/;"	f	file:
jsonEachBestIndex	ext/misc/json1.c	/^static int jsonEachBestIndex($/;"	f	file:
jsonEachBestIndex	sqlite3.c	/^static int jsonEachBestIndex($/;"	f	file:
jsonEachBestIndex	tsrc/json1.c	/^static int jsonEachBestIndex($/;"	f	file:
jsonEachClose	ext/misc/json1.c	/^static int jsonEachClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachClose	sqlite3.c	/^static int jsonEachClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachClose	tsrc/json1.c	/^static int jsonEachClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachColumn	ext/misc/json1.c	/^static int jsonEachColumn($/;"	f	file:
jsonEachColumn	sqlite3.c	/^static int jsonEachColumn($/;"	f	file:
jsonEachColumn	tsrc/json1.c	/^static int jsonEachColumn($/;"	f	file:
jsonEachComputePath	ext/misc/json1.c	/^static void jsonEachComputePath($/;"	f	file:
jsonEachComputePath	sqlite3.c	/^static void jsonEachComputePath($/;"	f	file:
jsonEachComputePath	tsrc/json1.c	/^static void jsonEachComputePath($/;"	f	file:
jsonEachConnect	ext/misc/json1.c	/^static int jsonEachConnect($/;"	f	file:
jsonEachConnect	sqlite3.c	/^static int jsonEachConnect($/;"	f	file:
jsonEachConnect	tsrc/json1.c	/^static int jsonEachConnect($/;"	f	file:
jsonEachCursorReset	ext/misc/json1.c	/^static void jsonEachCursorReset(JsonEachCursor *p){$/;"	f	file:
jsonEachCursorReset	sqlite3.c	/^static void jsonEachCursorReset(JsonEachCursor *p){$/;"	f	file:
jsonEachCursorReset	tsrc/json1.c	/^static void jsonEachCursorReset(JsonEachCursor *p){$/;"	f	file:
jsonEachDisconnect	ext/misc/json1.c	/^static int jsonEachDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
jsonEachDisconnect	sqlite3.c	/^static int jsonEachDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
jsonEachDisconnect	tsrc/json1.c	/^static int jsonEachDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
jsonEachEof	ext/misc/json1.c	/^static int jsonEachEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachEof	sqlite3.c	/^static int jsonEachEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachEof	tsrc/json1.c	/^static int jsonEachEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachFilter	ext/misc/json1.c	/^static int jsonEachFilter($/;"	f	file:
jsonEachFilter	sqlite3.c	/^static int jsonEachFilter($/;"	f	file:
jsonEachFilter	tsrc/json1.c	/^static int jsonEachFilter($/;"	f	file:
jsonEachModule	ext/misc/json1.c	/^static sqlite3_module jsonEachModule = {$/;"	v	file:
jsonEachModule	sqlite3.c	/^static sqlite3_module jsonEachModule = {$/;"	v	file:
jsonEachModule	tsrc/json1.c	/^static sqlite3_module jsonEachModule = {$/;"	v	file:
jsonEachNext	ext/misc/json1.c	/^static int jsonEachNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachNext	sqlite3.c	/^static int jsonEachNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachNext	tsrc/json1.c	/^static int jsonEachNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
jsonEachOpenEach	ext/misc/json1.c	/^static int jsonEachOpenEach(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenEach	sqlite3.c	/^static int jsonEachOpenEach(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenEach	tsrc/json1.c	/^static int jsonEachOpenEach(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenTree	ext/misc/json1.c	/^static int jsonEachOpenTree(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenTree	sqlite3.c	/^static int jsonEachOpenTree(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachOpenTree	tsrc/json1.c	/^static int jsonEachOpenTree(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
jsonEachRowid	ext/misc/json1.c	/^static int jsonEachRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
jsonEachRowid	sqlite3.c	/^static int jsonEachRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
jsonEachRowid	tsrc/json1.c	/^static int jsonEachRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
jsonExtractFunc	ext/misc/json1.c	/^static void jsonExtractFunc($/;"	f	file:
jsonExtractFunc	sqlite3.c	/^static void jsonExtractFunc($/;"	f	file:
jsonExtractFunc	tsrc/json1.c	/^static void jsonExtractFunc($/;"	f	file:
jsonGrow	ext/misc/json1.c	/^static int jsonGrow(JsonString *p, u32 N){$/;"	f	file:
jsonGrow	sqlite3.c	/^static int jsonGrow(JsonString *p, u32 N){$/;"	f	file:
jsonGrow	tsrc/json1.c	/^static int jsonGrow(JsonString *p, u32 N){$/;"	f	file:
jsonInit	ext/misc/json1.c	/^static void jsonInit(JsonString *p, sqlite3_context *pCtx){$/;"	f	file:
jsonInit	sqlite3.c	/^static void jsonInit(JsonString *p, sqlite3_context *pCtx){$/;"	f	file:
jsonInit	tsrc/json1.c	/^static void jsonInit(JsonString *p, sqlite3_context *pCtx){$/;"	f	file:
jsonIsSpace	ext/misc/json1.c	/^static const char jsonIsSpace[] = {$/;"	v	file:
jsonIsSpace	sqlite3.c	/^static const char jsonIsSpace[] = {$/;"	v	file:
jsonIsSpace	tsrc/json1.c	/^static const char jsonIsSpace[] = {$/;"	v	file:
jsonLabelCompare	ext/misc/json1.c	/^static int jsonLabelCompare(JsonNode *pNode, const char *zKey, u32 nKey){$/;"	f	file:
jsonLabelCompare	sqlite3.c	/^static int jsonLabelCompare(JsonNode *pNode, const char *zKey, u32 nKey){$/;"	f	file:
jsonLabelCompare	tsrc/json1.c	/^static int jsonLabelCompare(JsonNode *pNode, const char *zKey, u32 nKey){$/;"	f	file:
jsonLookup	ext/misc/json1.c	/^static JsonNode *jsonLookup($/;"	f	file:
jsonLookup	sqlite3.c	/^static JsonNode *jsonLookup($/;"	f	file:
jsonLookup	tsrc/json1.c	/^static JsonNode *jsonLookup($/;"	f	file:
jsonLookupAppend	ext/misc/json1.c	/^static JsonNode *jsonLookupAppend($/;"	f	file:
jsonLookupAppend	sqlite3.c	/^static JsonNode *jsonLookupAppend($/;"	f	file:
jsonLookupAppend	tsrc/json1.c	/^static JsonNode *jsonLookupAppend($/;"	f	file:
jsonLookupStep	ext/misc/json1.c	/^static JsonNode *jsonLookupStep($/;"	f	file:
jsonLookupStep	sqlite3.c	/^static JsonNode *jsonLookupStep($/;"	f	file:
jsonLookupStep	tsrc/json1.c	/^static JsonNode *jsonLookupStep($/;"	f	file:
jsonNodeSize	ext/misc/json1.c	/^static u32 jsonNodeSize(JsonNode *pNode){$/;"	f	file:
jsonNodeSize	sqlite3.c	/^static u32 jsonNodeSize(JsonNode *pNode){$/;"	f	file:
jsonNodeSize	tsrc/json1.c	/^static u32 jsonNodeSize(JsonNode *pNode){$/;"	f	file:
jsonObjectFinal	ext/misc/json1.c	/^static void jsonObjectFinal(sqlite3_context *ctx){$/;"	f	file:
jsonObjectFinal	sqlite3.c	/^static void jsonObjectFinal(sqlite3_context *ctx){$/;"	f	file:
jsonObjectFinal	tsrc/json1.c	/^static void jsonObjectFinal(sqlite3_context *ctx){$/;"	f	file:
jsonObjectFunc	ext/misc/json1.c	/^static void jsonObjectFunc($/;"	f	file:
jsonObjectFunc	sqlite3.c	/^static void jsonObjectFunc($/;"	f	file:
jsonObjectFunc	tsrc/json1.c	/^static void jsonObjectFunc($/;"	f	file:
jsonObjectStep	ext/misc/json1.c	/^static void jsonObjectStep($/;"	f	file:
jsonObjectStep	sqlite3.c	/^static void jsonObjectStep($/;"	f	file:
jsonObjectStep	tsrc/json1.c	/^static void jsonObjectStep($/;"	f	file:
jsonOom	ext/misc/json1.c	/^static void jsonOom(JsonString *p){$/;"	f	file:
jsonOom	sqlite3.c	/^static void jsonOom(JsonString *p){$/;"	f	file:
jsonOom	tsrc/json1.c	/^static void jsonOom(JsonString *p){$/;"	f	file:
jsonParse	ext/misc/json1.c	/^static int jsonParse($/;"	f	file:
jsonParse	sqlite3.c	/^static int jsonParse($/;"	f	file:
jsonParse	tsrc/json1.c	/^static int jsonParse($/;"	f	file:
jsonParseAddNode	ext/misc/json1.c	/^static int jsonParseAddNode($/;"	f	file:
jsonParseAddNode	sqlite3.c	/^static int jsonParseAddNode($/;"	f	file:
jsonParseAddNode	tsrc/json1.c	/^static int jsonParseAddNode($/;"	f	file:
jsonParseAddNodeExpand	ext/misc/json1.c	/^static JSON_NOINLINE int jsonParseAddNodeExpand($/;"	f	file:
jsonParseAddNodeExpand	sqlite3.c	/^static JSON_NOINLINE int jsonParseAddNodeExpand($/;"	f	file:
jsonParseAddNodeExpand	tsrc/json1.c	/^static JSON_NOINLINE int jsonParseAddNodeExpand($/;"	f	file:
jsonParseFillInParentage	ext/misc/json1.c	/^static void jsonParseFillInParentage(JsonParse *pParse, u32 i, u32 iParent){$/;"	f	file:
jsonParseFillInParentage	sqlite3.c	/^static void jsonParseFillInParentage(JsonParse *pParse, u32 i, u32 iParent){$/;"	f	file:
jsonParseFillInParentage	tsrc/json1.c	/^static void jsonParseFillInParentage(JsonParse *pParse, u32 i, u32 iParent){$/;"	f	file:
jsonParseFindParents	ext/misc/json1.c	/^static int jsonParseFindParents(JsonParse *pParse){$/;"	f	file:
jsonParseFindParents	sqlite3.c	/^static int jsonParseFindParents(JsonParse *pParse){$/;"	f	file:
jsonParseFindParents	tsrc/json1.c	/^static int jsonParseFindParents(JsonParse *pParse){$/;"	f	file:
jsonParseFunc	ext/misc/json1.c	/^static void jsonParseFunc($/;"	f	file:
jsonParseFunc	sqlite3.c	/^static void jsonParseFunc($/;"	f	file:
jsonParseFunc	tsrc/json1.c	/^static void jsonParseFunc($/;"	f	file:
jsonParseReset	ext/misc/json1.c	/^static void jsonParseReset(JsonParse *pParse){$/;"	f	file:
jsonParseReset	sqlite3.c	/^static void jsonParseReset(JsonParse *pParse){$/;"	f	file:
jsonParseReset	tsrc/json1.c	/^static void jsonParseReset(JsonParse *pParse){$/;"	f	file:
jsonParseValue	ext/misc/json1.c	/^static int jsonParseValue(JsonParse *pParse, u32 i){$/;"	f	file:
jsonParseValue	sqlite3.c	/^static int jsonParseValue(JsonParse *pParse, u32 i){$/;"	f	file:
jsonParseValue	tsrc/json1.c	/^static int jsonParseValue(JsonParse *pParse, u32 i){$/;"	f	file:
jsonPathSyntaxError	ext/misc/json1.c	/^static char *jsonPathSyntaxError(const char *zErr){$/;"	f	file:
jsonPathSyntaxError	sqlite3.c	/^static char *jsonPathSyntaxError(const char *zErr){$/;"	f	file:
jsonPathSyntaxError	tsrc/json1.c	/^static char *jsonPathSyntaxError(const char *zErr){$/;"	f	file:
jsonPrintf	ext/misc/json1.c	/^static void jsonPrintf(int N, JsonString *p, const char *zFormat, ...){$/;"	f	file:
jsonPrintf	sqlite3.c	/^static void jsonPrintf(int N, JsonString *p, const char *zFormat, ...){$/;"	f	file:
jsonPrintf	tsrc/json1.c	/^static void jsonPrintf(int N, JsonString *p, const char *zFormat, ...){$/;"	f	file:
jsonQuoteFunc	ext/misc/json1.c	/^static void jsonQuoteFunc($/;"	f	file:
jsonQuoteFunc	sqlite3.c	/^static void jsonQuoteFunc($/;"	f	file:
jsonQuoteFunc	tsrc/json1.c	/^static void jsonQuoteFunc($/;"	f	file:
jsonRemoveFunc	ext/misc/json1.c	/^static void jsonRemoveFunc($/;"	f	file:
jsonRemoveFunc	sqlite3.c	/^static void jsonRemoveFunc($/;"	f	file:
jsonRemoveFunc	tsrc/json1.c	/^static void jsonRemoveFunc($/;"	f	file:
jsonRenderNode	ext/misc/json1.c	/^static void jsonRenderNode($/;"	f	file:
jsonRenderNode	sqlite3.c	/^static void jsonRenderNode($/;"	f	file:
jsonRenderNode	tsrc/json1.c	/^static void jsonRenderNode($/;"	f	file:
jsonReplaceFunc	ext/misc/json1.c	/^static void jsonReplaceFunc($/;"	f	file:
jsonReplaceFunc	sqlite3.c	/^static void jsonReplaceFunc($/;"	f	file:
jsonReplaceFunc	tsrc/json1.c	/^static void jsonReplaceFunc($/;"	f	file:
jsonReset	ext/misc/json1.c	/^static void jsonReset(JsonString *p){$/;"	f	file:
jsonReset	sqlite3.c	/^static void jsonReset(JsonString *p){$/;"	f	file:
jsonReset	tsrc/json1.c	/^static void jsonReset(JsonString *p){$/;"	f	file:
jsonResult	ext/misc/json1.c	/^static void jsonResult(JsonString *p){$/;"	f	file:
jsonResult	sqlite3.c	/^static void jsonResult(JsonString *p){$/;"	f	file:
jsonResult	tsrc/json1.c	/^static void jsonResult(JsonString *p){$/;"	f	file:
jsonReturn	ext/misc/json1.c	/^static void jsonReturn($/;"	f	file:
jsonReturn	sqlite3.c	/^static void jsonReturn($/;"	f	file:
jsonReturn	tsrc/json1.c	/^static void jsonReturn($/;"	f	file:
jsonReturnJson	ext/misc/json1.c	/^static void jsonReturnJson($/;"	f	file:
jsonReturnJson	sqlite3.c	/^static void jsonReturnJson($/;"	f	file:
jsonReturnJson	tsrc/json1.c	/^static void jsonReturnJson($/;"	f	file:
jsonSetFunc	ext/misc/json1.c	/^static void jsonSetFunc($/;"	f	file:
jsonSetFunc	sqlite3.c	/^static void jsonSetFunc($/;"	f	file:
jsonSetFunc	tsrc/json1.c	/^static void jsonSetFunc($/;"	f	file:
jsonTest1Func	ext/misc/json1.c	/^static void jsonTest1Func($/;"	f	file:
jsonTest1Func	sqlite3.c	/^static void jsonTest1Func($/;"	f	file:
jsonTest1Func	tsrc/json1.c	/^static void jsonTest1Func($/;"	f	file:
jsonTreeModule	ext/misc/json1.c	/^static sqlite3_module jsonTreeModule = {$/;"	v	file:
jsonTreeModule	sqlite3.c	/^static sqlite3_module jsonTreeModule = {$/;"	v	file:
jsonTreeModule	tsrc/json1.c	/^static sqlite3_module jsonTreeModule = {$/;"	v	file:
jsonType	ext/misc/json1.c	/^static const char * const jsonType[] = {$/;"	v	file:
jsonType	sqlite3.c	/^static const char * const jsonType[] = {$/;"	v	file:
jsonType	tsrc/json1.c	/^static const char * const jsonType[] = {$/;"	v	file:
jsonTypeFunc	ext/misc/json1.c	/^static void jsonTypeFunc($/;"	f	file:
jsonTypeFunc	sqlite3.c	/^static void jsonTypeFunc($/;"	f	file:
jsonTypeFunc	tsrc/json1.c	/^static void jsonTypeFunc($/;"	f	file:
jsonValidFunc	ext/misc/json1.c	/^static void jsonValidFunc($/;"	f	file:
jsonValidFunc	sqlite3.c	/^static void jsonValidFunc($/;"	f	file:
jsonValidFunc	tsrc/json1.c	/^static void jsonValidFunc($/;"	f	file:
jsonWrongNumArgs	ext/misc/json1.c	/^static void jsonWrongNumArgs($/;"	f	file:
jsonWrongNumArgs	sqlite3.c	/^static void jsonWrongNumArgs($/;"	f	file:
jsonWrongNumArgs	tsrc/json1.c	/^static void jsonWrongNumArgs($/;"	f	file:
jsonZero	ext/misc/json1.c	/^static void jsonZero(JsonString *p){$/;"	f	file:
jsonZero	sqlite3.c	/^static void jsonZero(JsonString *p){$/;"	f	file:
jsonZero	tsrc/json1.c	/^static void jsonZero(JsonString *p){$/;"	f	file:
jtAccess	src/test_journal.c	/^static int jtAccess($/;"	f	file:
jtCheckReservedLock	src/test_journal.c	/^static int jtCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
jtClose	src/test_journal.c	/^static int jtClose(sqlite3_file *pFile){$/;"	f	file:
jtCurrentTime	src/test_journal.c	/^static int jtCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
jtCurrentTimeInt64	src/test_journal.c	/^static int jtCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f	file:
jtDelete	src/test_journal.c	/^static int jtDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
jtDeviceCharacteristics	src/test_journal.c	/^static int jtDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
jtDlClose	src/test_journal.c	/^static void jtDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
jtDlError	src/test_journal.c	/^static void jtDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
jtDlOpen	src/test_journal.c	/^static void *jtDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
jtDlSym	src/test_journal.c	/^static void (*jtDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
jtFileControl	src/test_journal.c	/^static int jtFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
jtFileSize	src/test_journal.c	/^static int jtFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
jtFullPathname	src/test_journal.c	/^static int jtFullPathname($/;"	f	file:
jtGetLastError	src/test_journal.c	/^static int jtGetLastError(sqlite3_vfs *pVfs, int n, char *z){$/;"	f	file:
jtLock	src/test_journal.c	/^static int jtLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
jtObjCmd	src/test6.c	/^static int SQLITE_TCLAPI jtObjCmd($/;"	f	file:
jtOpen	src/test_journal.c	/^static int jtOpen($/;"	f	file:
jtRandomness	src/test_journal.c	/^static int jtRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
jtRead	src/test_journal.c	/^static int jtRead($/;"	f	file:
jtSectorSize	src/test_journal.c	/^static int jtSectorSize(sqlite3_file *pFile){$/;"	f	file:
jtSleep	src/test_journal.c	/^static int jtSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
jtSync	src/test_journal.c	/^static int jtSync(sqlite3_file *pFile, int flags){$/;"	f	file:
jtTruncate	src/test_journal.c	/^static int jtTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
jtUnlock	src/test_journal.c	/^static int jtUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
jtUnregisterObjCmd	src/test6.c	/^static int SQLITE_TCLAPI jtUnregisterObjCmd($/;"	f	file:
jtWrite	src/test_journal.c	/^static int jtWrite($/;"	f	file:
jt_file	src/test_journal.c	/^struct jt_file {$/;"	s	file:
jt_file	src/test_journal.c	/^typedef struct jt_file jt_file;$/;"	t	typeref:struct:jt_file	file:
jt_io_methods	src/test_journal.c	/^static sqlite3_io_methods jt_io_methods = {$/;"	v	file:
jt_register	src/test_journal.c	/^int jt_register(char *zWrap, int isDefault){$/;"	f
jt_unregister	src/test_journal.c	/^void jt_unregister(void){$/;"	f
jt_vfs	src/test_journal.c	/^static sqlite3_vfs jt_vfs = {$/;"	v	file:
juliandayFunc	sqlite3.c	/^static void juliandayFunc($/;"	f	file:
juliandayFunc	src/date.c	/^static void juliandayFunc($/;"	f	file:
juliandayFunc	tsrc/date.c	/^static void juliandayFunc($/;"	f	file:
k	sqlite3.c	/^  int k;                     \/* Resume scanning at this->pWC->a[this->k] *\/$/;"	m	struct:WhereScan	file:
k	src/whereInt.h	/^  int k;                     \/* Resume scanning at this->pWC->a[this->k] *\/$/;"	m	struct:WhereScan
k	tsrc/whereInt.h	/^  int k;                     \/* Resume scanning at this->pWC->a[this->k] *\/$/;"	m	struct:WhereScan
kPendingThreshold	ext/fts2/fts2.c	1876;"	d	file:
kPendingThreshold	tsrc/fts2.c	1876;"	d	file:
key	autoconf/tea/win/nmakehlp.c	/^    char * key;$/;"	m	struct:list_item_t	file:
key	ext/fts3/fts3_write.c	/^  Blob key;                       \/* Last key written to the current block *\/$/;"	m	struct:NodeWriter	file:
key	parse.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
key	sqlite3.c	/^  Blob key;                       \/* Last key written to the current block *\/$/;"	m	struct:NodeWriter	file:
key	sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
key	src/test_pcache.c	/^    unsigned key;              \/* The key for this page. 0 means unallocated *\/$/;"	m	struct:testpcache::testpcachePage	file:
key	tool/lemon.c	/^  const char *key;         \/* The key *\/$/;"	m	struct:s_x2node	file:
key	tool/lemon.c	/^  struct config *key;                   \/* The key *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::config	file:
key	tsrc/fts3_write.c	/^  Blob key;                       \/* Last key written to the current block *\/$/;"	m	struct:NodeWriter	file:
key	tsrc/parse.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
keyClass	ext/fts1/ft_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Hash
keyClass	ext/fts1/fts1_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:fts1Hash
keyClass	ext/fts2/fts2_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:fts2Hash
keyClass	ext/fts3/fts3_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash
keyClass	sqlite3.c	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash	file:
keyClass	tsrc/fts1_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:fts1Hash
keyClass	tsrc/fts2_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:fts2Hash
keyClass	tsrc/fts3_hash.h	/^  char keyClass;          \/* HASH_INT, _POINTER, _STRING, _BINARY *\/$/;"	m	struct:Fts3Hash
keyConf	sqlite3.c	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table	file:
keyConf	src/sqliteInt.h	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table
keyConf	tsrc/sqliteInt.h	/^  u8 keyConf;          \/* What to do in case of uniqueness conflict on iPKey *\/$/;"	m	struct:Table
keyInfoFromExprList	sqlite3.c	/^static KeyInfo *keyInfoFromExprList($/;"	f	file:
keyInfoFromExprList	src/select.c	/^static KeyInfo *keyInfoFromExprList($/;"	f	file:
keyInfoFromExprList	tsrc/select.c	/^static KeyInfo *keyInfoFromExprList($/;"	f	file:
keyinfo	sqlite3.c	/^  KeyInfo keyinfo;$/;"	m	struct:PreUpdate	file:
keyinfo	src/vdbeInt.h	/^  KeyInfo keyinfo;$/;"	m	struct:PreUpdate
keyinfo	tsrc/vdbeInt.h	/^  KeyInfo keyinfo;$/;"	m	struct:PreUpdate
keywordCode	keywordhash.h	/^static int keywordCode(const char *z, int n, int *pType){$/;"	f
keywordCode	sqlite3.c	/^static int keywordCode(const char *z, int n, int *pType){$/;"	f	file:
keywordCode	tsrc/keywordhash.h	/^static int keywordCode(const char *z, int n, int *pType){$/;"	f
keywordCompare1	tool/mkkeywordhash.c	/^static int keywordCompare1(const void *a, const void *b){$/;"	f	file:
keywordCompare2	tool/mkkeywordhash.c	/^static int keywordCompare2(const void *a, const void *b){$/;"	f	file:
keywordCompare3	tool/mkkeywordhash.c	/^static int keywordCompare3(const void *a, const void *b){$/;"	f	file:
kwcolumn_opt	parse.y	/^kwcolumn_opt ::= .$/;"	l
kwcolumn_opt	parse.y	/^kwcolumn_opt ::= COLUMNKW.$/;"	l
kwcolumn_opt	src/parse.y	/^kwcolumn_opt ::= .$/;"	l
kwcolumn_opt	src/parse.y	/^kwcolumn_opt ::= COLUMNKW.$/;"	l
label	tool/lemon.c	/^  const char *label;$/;"	m	struct:s_options	file:
labelBkOut	sqlite3.c	/^  int labelBkOut;       \/* Start label for the block-output subroutine *\/$/;"	m	struct:SortCtx	file:
labelBkOut	src/select.c	/^  int labelBkOut;       \/* Start label for the block-output subroutine *\/$/;"	m	struct:SortCtx	file:
labelBkOut	tsrc/select.c	/^  int labelBkOut;       \/* Start label for the block-output subroutine *\/$/;"	m	struct:SortCtx	file:
labelDone	sqlite3.c	/^  int labelDone;        \/* Jump here when done, ex: LIMIT reached *\/$/;"	m	struct:SortCtx	file:
labelDone	src/select.c	/^  int labelDone;        \/* Jump here when done, ex: LIMIT reached *\/$/;"	m	struct:SortCtx	file:
labelDone	tsrc/select.c	/^  int labelDone;        \/* Jump here when done, ex: LIMIT reached *\/$/;"	m	struct:SortCtx	file:
lambda	tool/lemon.c	/^  Boolean lambda;          \/* True if NT and can generate an empty string *\/$/;"	m	struct:symbol	file:
langidFromSelect	ext/fts3/fts3_write.c	/^static int langidFromSelect(Fts3Table *p, sqlite3_stmt *pSelect){$/;"	f	file:
langidFromSelect	sqlite3.c	/^static int langidFromSelect(Fts3Table *p, sqlite3_stmt *pSelect){$/;"	f	file:
langidFromSelect	tsrc/fts3_write.c	/^static int langidFromSelect(Fts3Table *p, sqlite3_stmt *pSelect){$/;"	f	file:
last	ext/fts2/fts2.c	/^  InteriorBlock *first, *last;$/;"	m	struct:InteriorWriter	file:
last	tsrc/fts2.c	/^  InteriorBlock *first, *last;$/;"	m	struct:InteriorWriter	file:
lastErrno	sqlite3.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	sqlite3.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	sqlite3.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastErrno	src/os_unix.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastErrno	src/os_win.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	src/os_win.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastErrno	tsrc/os_unix.c	/^  int lastErrno;                      \/* The unix errno from last I\/O error *\/$/;"	m	struct:unixFile	file:
lastErrno	tsrc/os_win.c	/^  DWORD lastErrno;           \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winShmNode	file:
lastErrno	tsrc/os_win.c	/^  DWORD lastErrno;        \/* The Windows errno from the last I\/O error *\/$/;"	m	struct:winFile	file:
lastRowid	sqlite3.c	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3	file:
lastRowid	sqlite3.c	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame	file:
lastRowid	src/sqliteInt.h	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3
lastRowid	src/vdbeInt.h	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame
lastRowid	tsrc/sqliteInt.h	/^  i64 lastRowid;                \/* ROWID of most recent insert (see above) *\/$/;"	m	struct:sqlite3
lastRowid	tsrc/vdbeInt.h	/^  i64 lastRowid;          \/* Last insert rowid (sqlite3.lastRowid) *\/$/;"	m	struct:VdbeFrame
last_insert_rowid	sqlite3.c	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
last_insert_rowid	sqlite3.c	/^static void last_insert_rowid($/;"	f	file:
last_insert_rowid	sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
last_insert_rowid	src/func.c	/^static void last_insert_rowid($/;"	f	file:
last_insert_rowid	src/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
last_insert_rowid	tsrc/func.c	/^static void last_insert_rowid($/;"	f	file:
last_insert_rowid	tsrc/sqlite3ext.h	/^  sqlite_int64  (*last_insert_rowid)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
lastrule	tool/lemon.c	/^  struct rule *lastrule;     \/* Pointer to the most recently parsed rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
launch_testfixture	test/lock_common.tcl	/^proc launch_testfixture {{prg ""}} {$/;"	p
launch_thread	test/threadtest3.c	55;"	d	file:
launch_thread_main	test/threadtest3.c	/^static void *launch_thread_main(void *pArg){$/;"	f	file:
launch_thread_x	test/threadtest3.c	/^static void launch_thread_x($/;"	f	file:
leaf	sqlite3.c	/^  u8 leaf;             \/* True if a leaf page *\/$/;"	m	struct:MemPage	file:
leaf	src/btreeInt.h	/^  u8 leaf;             \/* True if a leaf page *\/$/;"	m	struct:MemPage
leaf	tsrc/btreeInt.h	/^  u8 leaf;             \/* True if a leaf page *\/$/;"	m	struct:MemPage
leafNodeValidate	ext/fts2/fts2.c	/^static void leafNodeValidate(const char *pData, int nData){$/;"	f	file:
leafNodeValidate	tsrc/fts2.c	/^static void leafNodeValidate(const char *pData, int nData){$/;"	f	file:
leafReader	ext/fts2/fts2.c	/^  LeafReader leafReader;    \/* reader for the current leaf. *\/$/;"	m	struct:LeavesReader	file:
leafReader	tsrc/fts2.c	/^  LeafReader leafReader;    \/* reader for the current leaf. *\/$/;"	m	struct:LeavesReader	file:
leafReaderAtEnd	ext/fts2/fts2.c	/^static int leafReaderAtEnd(LeafReader *pReader){$/;"	f	file:
leafReaderAtEnd	tsrc/fts2.c	/^static int leafReaderAtEnd(LeafReader *pReader){$/;"	f	file:
leafReaderData	ext/fts2/fts2.c	/^static const char *leafReaderData(LeafReader *pReader){$/;"	f	file:
leafReaderData	tsrc/fts2.c	/^static const char *leafReaderData(LeafReader *pReader){$/;"	f	file:
leafReaderDataBytes	ext/fts2/fts2.c	/^static int leafReaderDataBytes(LeafReader *pReader){$/;"	f	file:
leafReaderDataBytes	tsrc/fts2.c	/^static int leafReaderDataBytes(LeafReader *pReader){$/;"	f	file:
leafReaderDestroy	ext/fts2/fts2.c	/^static void leafReaderDestroy(LeafReader *pReader){$/;"	f	file:
leafReaderDestroy	tsrc/fts2.c	/^static void leafReaderDestroy(LeafReader *pReader){$/;"	f	file:
leafReaderInit	ext/fts2/fts2.c	/^static void leafReaderInit(const char *pData, int nData,$/;"	f	file:
leafReaderInit	tsrc/fts2.c	/^static void leafReaderInit(const char *pData, int nData,$/;"	f	file:
leafReaderStep	ext/fts2/fts2.c	/^static void leafReaderStep(LeafReader *pReader){$/;"	f	file:
leafReaderStep	tsrc/fts2.c	/^static void leafReaderStep(LeafReader *pReader){$/;"	f	file:
leafReaderTerm	ext/fts2/fts2.c	/^static const char *leafReaderTerm(LeafReader *pReader){$/;"	f	file:
leafReaderTerm	tsrc/fts2.c	/^static const char *leafReaderTerm(LeafReader *pReader){$/;"	f	file:
leafReaderTermBytes	ext/fts2/fts2.c	/^static int leafReaderTermBytes(LeafReader *pReader){$/;"	f	file:
leafReaderTermBytes	tsrc/fts2.c	/^static int leafReaderTermBytes(LeafReader *pReader){$/;"	f	file:
leafReaderTermCmp	ext/fts2/fts2.c	/^static int leafReaderTermCmp(LeafReader *pReader,$/;"	f	file:
leafReaderTermCmp	tsrc/fts2.c	/^static int leafReaderTermCmp(LeafReader *pReader,$/;"	f	file:
leafWriterDestroy	ext/fts2/fts2.c	/^static void leafWriterDestroy(LeafWriter *pWriter){$/;"	f	file:
leafWriterDestroy	tsrc/fts2.c	/^static void leafWriterDestroy(LeafWriter *pWriter){$/;"	f	file:
leafWriterEncodeTerm	ext/fts2/fts2.c	/^static int leafWriterEncodeTerm(LeafWriter *pWriter,$/;"	f	file:
leafWriterEncodeTerm	tsrc/fts2.c	/^static int leafWriterEncodeTerm(LeafWriter *pWriter,$/;"	f	file:
leafWriterFinalize	ext/fts2/fts2.c	/^static int leafWriterFinalize(fulltext_vtab *v, LeafWriter *pWriter){$/;"	f	file:
leafWriterFinalize	tsrc/fts2.c	/^static int leafWriterFinalize(fulltext_vtab *v, LeafWriter *pWriter){$/;"	f	file:
leafWriterFlush	ext/fts2/fts2.c	/^static int leafWriterFlush(fulltext_vtab *v, LeafWriter *pWriter){$/;"	f	file:
leafWriterFlush	tsrc/fts2.c	/^static int leafWriterFlush(fulltext_vtab *v, LeafWriter *pWriter){$/;"	f	file:
leafWriterInit	ext/fts2/fts2.c	/^static void leafWriterInit(int iLevel, int idx, LeafWriter *pWriter){$/;"	f	file:
leafWriterInit	tsrc/fts2.c	/^static void leafWriterInit(int iLevel, int idx, LeafWriter *pWriter){$/;"	f	file:
leafWriterInlineFlush	ext/fts2/fts2.c	/^static int leafWriterInlineFlush(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterInlineFlush	tsrc/fts2.c	/^static int leafWriterInlineFlush(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterInternalFlush	ext/fts2/fts2.c	/^static int leafWriterInternalFlush(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterInternalFlush	tsrc/fts2.c	/^static int leafWriterInternalFlush(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterRootInfo	ext/fts2/fts2.c	/^static int leafWriterRootInfo(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterRootInfo	tsrc/fts2.c	/^static int leafWriterRootInfo(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterStep	ext/fts2/fts2.c	/^static int leafWriterStep(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterStep	tsrc/fts2.c	/^static int leafWriterStep(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterStepMerge	ext/fts2/fts2.c	/^static int leafWriterStepMerge(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leafWriterStepMerge	tsrc/fts2.c	/^static int leafWriterStepMerge(fulltext_vtab *v, LeafWriter *pWriter,$/;"	f	file:
leaveJtMutex	src/test_journal.c	/^static void leaveJtMutex(void){$/;"	f	file:
leaveMutex	sqlite3.c	/^static void leaveMutex(void){$/;"	f	file:
leaveMutex	src/notify.c	/^static void leaveMutex(void){$/;"	f	file:
leaveMutex	tsrc/notify.c	/^static void leaveMutex(void){$/;"	f	file:
leavesReaderAtEnd	ext/fts2/fts2.c	/^static int leavesReaderAtEnd(LeavesReader *pReader){$/;"	f	file:
leavesReaderAtEnd	tsrc/fts2.c	/^static int leavesReaderAtEnd(LeavesReader *pReader){$/;"	f	file:
leavesReaderCmp	ext/fts2/fts2.c	/^static int leavesReaderCmp(LeavesReader *lr1, LeavesReader *lr2){$/;"	f	file:
leavesReaderCmp	tsrc/fts2.c	/^static int leavesReaderCmp(LeavesReader *lr1, LeavesReader *lr2){$/;"	f	file:
leavesReaderData	ext/fts2/fts2.c	/^static const char *leavesReaderData(LeavesReader *pReader){$/;"	f	file:
leavesReaderData	tsrc/fts2.c	/^static const char *leavesReaderData(LeavesReader *pReader){$/;"	f	file:
leavesReaderDataBytes	ext/fts2/fts2.c	/^static int leavesReaderDataBytes(LeavesReader *pReader){$/;"	f	file:
leavesReaderDataBytes	tsrc/fts2.c	/^static int leavesReaderDataBytes(LeavesReader *pReader){$/;"	f	file:
leavesReaderDestroy	ext/fts2/fts2.c	/^static void leavesReaderDestroy(LeavesReader *pReader){$/;"	f	file:
leavesReaderDestroy	tsrc/fts2.c	/^static void leavesReaderDestroy(LeavesReader *pReader){$/;"	f	file:
leavesReaderInit	ext/fts2/fts2.c	/^static int leavesReaderInit(fulltext_vtab *v,$/;"	f	file:
leavesReaderInit	tsrc/fts2.c	/^static int leavesReaderInit(fulltext_vtab *v,$/;"	f	file:
leavesReaderReorder	ext/fts2/fts2.c	/^static void leavesReaderReorder(LeavesReader *pLr, int nLr){$/;"	f	file:
leavesReaderReorder	tsrc/fts2.c	/^static void leavesReaderReorder(LeavesReader *pLr, int nLr){$/;"	f	file:
leavesReaderReset	ext/fts2/fts2.c	/^static int leavesReaderReset(LeavesReader *pReader){$/;"	f	file:
leavesReaderReset	tsrc/fts2.c	/^static int leavesReaderReset(LeavesReader *pReader){$/;"	f	file:
leavesReaderStep	ext/fts2/fts2.c	/^static int leavesReaderStep(fulltext_vtab *v, LeavesReader *pReader){$/;"	f	file:
leavesReaderStep	tsrc/fts2.c	/^static int leavesReaderStep(fulltext_vtab *v, LeavesReader *pReader){$/;"	f	file:
leavesReaderTerm	ext/fts2/fts2.c	/^static const char *leavesReaderTerm(LeavesReader *pReader){$/;"	f	file:
leavesReaderTerm	tsrc/fts2.c	/^static const char *leavesReaderTerm(LeavesReader *pReader){$/;"	f	file:
leavesReaderTermBytes	ext/fts2/fts2.c	/^static int leavesReaderTermBytes(LeavesReader *pReader){$/;"	f	file:
leavesReaderTermBytes	tsrc/fts2.c	/^static int leavesReaderTermBytes(LeavesReader *pReader){$/;"	f	file:
leavesReaderTermCmp	ext/fts2/fts2.c	/^static int leavesReaderTermCmp(LeavesReader *lr1, LeavesReader *lr2){$/;"	f	file:
leavesReaderTermCmp	tsrc/fts2.c	/^static int leavesReaderTermCmp(LeavesReader *lr1, LeavesReader *lr2){$/;"	f	file:
leavesReadersInit	ext/fts2/fts2.c	/^static int leavesReadersInit(fulltext_vtab *v, int iLevel,$/;"	f	file:
leavesReadersInit	tsrc/fts2.c	/^static int leavesReadersInit(fulltext_vtab *v, int iLevel,$/;"	f	file:
leavesReadersMerge	ext/fts2/fts2.c	/^static int leavesReadersMerge(fulltext_vtab *v,$/;"	f	file:
leavesReadersMerge	tsrc/fts2.c	/^static int leavesReadersMerge(fulltext_vtab *v,$/;"	f	file:
leftColumn	sqlite3.c	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon101	file:
leftColumn	src/whereInt.h	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon50
leftColumn	tsrc/whereInt.h	/^    int leftColumn;         \/* Column number of X in "X <op> <expr>" *\/$/;"	m	union:WhereTerm::__anon15
leftCursor	sqlite3.c	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm	file:
leftCursor	src/whereInt.h	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm
leftCursor	tsrc/whereInt.h	/^  int leftCursor;         \/* Cursor number of X in "X <op> <expr>" *\/$/;"	m	struct:WhereTerm
legacyCountFinalize	src/test1.c	/^static void legacyCountFinalize(sqlite3_context *context){$/;"	f	file:
legacyCountStep	src/test1.c	/^static void legacyCountStep($/;"	f	file:
lemon	tool/lemon.c	/^struct lemon {$/;"	s	file:
lemonStrlen	tool/lemon.c	59;"	d	file:
lemon_addtext	tool/lemon.c	/^static void lemon_addtext($/;"	f	file:
lemon_sprintf	tool/lemon.c	/^static int lemon_sprintf(char *str, const char *format, ...){$/;"	f	file:
lemon_strcat	tool/lemon.c	/^static void lemon_strcat(char *dest, const char *src){$/;"	f	file:
lemon_strcpy	tool/lemon.c	/^static void lemon_strcpy(char *dest, const char *src){$/;"	f	file:
lemon_vsprintf	tool/lemon.c	/^static int lemon_vsprintf(char *str, const char *zFormat, va_list ap){$/;"	f	file:
len	ext/fts1/fts1.c	/^  int len;      \/* length, not including null terminator *\/$/;"	m	struct:StringBuffer	file:
len	tool/mkkeywordhash.c	/^  int len;             \/* Length of this keyword, not counting final \\000 *\/$/;"	m	struct:Keyword	file:
len	tsrc/fts1.c	/^  int len;      \/* length, not including null terminator *\/$/;"	m	struct:StringBuffer	file:
length	sqlite3.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
length	src/os_unix.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
length	tsrc/os_unix.c	/^  unsigned long long length;        \/* nbr of bytes to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
lengthFunc	sqlite3.c	/^static void lengthFunc($/;"	f	file:
lengthFunc	src/func.c	/^static void lengthFunc($/;"	f	file:
lengthFunc	tsrc/func.c	/^static void lengthFunc($/;"	f	file:
lhs	fts5.c	/^  fts5YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon72	file:
lhs	fts5parse.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon70	file:
lhs	lempar.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon6	file:
lhs	parse.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon42	file:
lhs	sqlite3.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon104	file:
lhs	sqlite3.c	/^  fts5YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon108	file:
lhs	tool/lemon.c	/^  struct symbol *lhs;        \/* Left-hand side of current rule *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
lhs	tool/lemon.c	/^  struct symbol *lhs;      \/* Left-hand side of the rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
lhs	tool/lempar.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon3	file:
lhs	tsrc/fts5.c	/^  fts5YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon32	file:
lhs	tsrc/parse.c	/^  YYCODETYPE lhs;         \/* Symbol on the left-hand side of the rule *\/$/;"	m	struct:__anon19	file:
lhsStart	tool/lemon.c	/^  int lhsStart;            \/* True if left-hand side is the start symbol *\/$/;"	m	struct:rule	file:
lhsalias	tool/lemon.c	/^  const char *lhsalias;      \/* Alias for the LHS *\/$/;"	m	struct:pstate	file:
lhsalias	tool/lemon.c	/^  const char *lhsalias;    \/* Alias for the LHS (NULL if none) *\/$/;"	m	struct:rule	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libversion	sqlite3.c	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion	sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion	src/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion	tsrc/sqlite3ext.h	/^  const char * (*libversion)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	sqlite3.c	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines	file:
libversion_number	sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	src/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
libversion_number	tsrc/sqlite3ext.h	/^  int  (*libversion_number)(void);$/;"	m	struct:sqlite3_api_routines
likeFunc	sqlite3.c	/^static void likeFunc($/;"	f	file:
likeFunc	src/func.c	/^static void likeFunc($/;"	f	file:
likeFunc	tsrc/func.c	/^static void likeFunc($/;"	f	file:
likeInfoAlt	sqlite3.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoAlt	src/func.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoAlt	tsrc/func.c	/^static const struct compareInfo likeInfoAlt = { '%', '_',   0, 0 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	sqlite3.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	src/func.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likeInfoNorm	tsrc/func.c	/^static const struct compareInfo likeInfoNorm = { '%', '_',   0, 1 };$/;"	v	typeref:struct:compareInfo	file:
likely	sqlite3.c	11157;"	d	file:
likely	src/sqliteInt.h	495;"	d
likely	tsrc/sqliteInt.h	495;"	d
limit	sqlite3.c	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
limit	sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
limit	src/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
limit	tsrc/sqlite3ext.h	/^  int (*limit)(sqlite3*,int,int);$/;"	m	struct:sqlite3_api_routines
line	tool/lemon.c	/^  int line;                \/* Line number at which code begins *\/$/;"	m	struct:rule	file:
line_contains_semicolon	shell.c	/^static int line_contains_semicolon(const char *z, int N){$/;"	f	file:
line_contains_semicolon	src/shell.c	/^static int line_contains_semicolon(const char *z, int N){$/;"	f	file:
line_contains_semicolon	tsrc/shell.c	/^static int line_contains_semicolon(const char *z, int N){$/;"	f	file:
line_is_command_terminator	shell.c	/^static int line_is_command_terminator(const char *zLine){$/;"	f	file:
line_is_command_terminator	src/shell.c	/^static int line_is_command_terminator(const char *zLine){$/;"	f	file:
line_is_command_terminator	tsrc/shell.c	/^static int line_is_command_terminator(const char *zLine){$/;"	f	file:
line_is_complete	shell.c	/^static int line_is_complete(char *zSql, int nSql){$/;"	f	file:
line_is_complete	src/shell.c	/^static int line_is_complete(char *zSql, int nSql){$/;"	f	file:
line_is_complete	tsrc/shell.c	/^static int line_is_complete(char *zSql, int nSql){$/;"	f	file:
list	sqlite3.c	/^    } list;$/;"	m	union:Mem3Block::__anon90	typeref:struct:Mem3Block::__anon90::__anon92	file:
list	sqlite3.c	/^  SorterList list;                \/* List for thread to write to a PMA *\/$/;"	m	struct:SortSubtask	file:
list	sqlite3.c	/^  SorterList list;                \/* List of in-memory records *\/$/;"	m	struct:VdbeSorter	file:
list	src/mem3.c	/^    } list;$/;"	m	union:Mem3Block::__anon64	typeref:struct:Mem3Block::__anon64::__anon66	file:
list	src/vdbesort.c	/^  SorterList list;                \/* List for thread to write to a PMA *\/$/;"	m	struct:SortSubtask	file:
list	src/vdbesort.c	/^  SorterList list;                \/* List of in-memory records *\/$/;"	m	struct:VdbeSorter	file:
list	tsrc/mem3.c	/^    } list;$/;"	m	union:Mem3Block::__anon34	typeref:struct:Mem3Block::__anon34::__anon36	file:
list	tsrc/vdbesort.c	/^  SorterList list;                \/* List for thread to write to a PMA *\/$/;"	m	struct:SortSubtask	file:
list	tsrc/vdbesort.c	/^  SorterList list;                \/* List of in-memory records *\/$/;"	m	struct:VdbeSorter	file:
listBigSegments	ext/fts3/tool/fts3view.c	/^static void listBigSegments(sqlite3 *db, const char *zTab){$/;"	f	file:
list_free	autoconf/tea/win/nmakehlp.c	/^list_free(list_item_t **listPtrPtr)$/;"	f	file:
list_insert	autoconf/tea/win/nmakehlp.c	/^list_insert(list_item_t **listPtrPtr, const char *key, const char *value)$/;"	f	file:
list_item_t	autoconf/tea/win/nmakehlp.c	/^typedef struct list_item_t {$/;"	s	file:
list_item_t	autoconf/tea/win/nmakehlp.c	/^} list_item_t;$/;"	t	typeref:struct:list_item_t	file:
listbox_click	ext/rtree/viewrtree.tcl	/^proc listbox_click {sel} {$/;"	p
listbox_mouseover	ext/rtree/viewrtree.tcl	/^proc listbox_mouseover {i} {$/;"	p
loadAnalysis	sqlite3.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadAnalysis	src/analyze.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadAnalysis	tsrc/analyze.c	/^static void loadAnalysis(Parse *pParse, int iDb){$/;"	f	file:
loadAndGetChildrenContaining	ext/fts2/fts2.c	/^static int loadAndGetChildrenContaining($/;"	f	file:
loadAndGetChildrenContaining	tsrc/fts2.c	/^static int loadAndGetChildrenContaining($/;"	f	file:
loadExt	sqlite3.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadExt	src/func.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadExt	tsrc/func.c	/^static void loadExt(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
loadSegment	ext/fts2/fts2.c	/^static int loadSegment(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegment	tsrc/fts2.c	/^static int loadSegment(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegmentInt	ext/fts2/fts2.c	/^static int loadSegmentInt(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegmentInt	tsrc/fts2.c	/^static int loadSegmentInt(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegmentLeaf	ext/fts2/fts2.c	/^static int loadSegmentLeaf(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegmentLeaf	tsrc/fts2.c	/^static int loadSegmentLeaf(fulltext_vtab *v, const char *pData, int nData,$/;"	f	file:
loadSegmentLeaves	ext/fts2/fts2.c	/^static int loadSegmentLeaves(fulltext_vtab *v,$/;"	f	file:
loadSegmentLeaves	tsrc/fts2.c	/^static int loadSegmentLeaves(fulltext_vtab *v,$/;"	f	file:
loadSegmentLeavesInt	ext/fts2/fts2.c	/^static int loadSegmentLeavesInt(fulltext_vtab *v, LeavesReader *pReader,$/;"	f	file:
loadSegmentLeavesInt	tsrc/fts2.c	/^static int loadSegmentLeavesInt(fulltext_vtab *v, LeavesReader *pReader,$/;"	f	file:
loadStat4	sqlite3.c	/^static int loadStat4(sqlite3 *db, const char *zDb){$/;"	f	file:
loadStat4	src/analyze.c	/^static int loadStat4(sqlite3 *db, const char *zDb){$/;"	f	file:
loadStat4	tsrc/analyze.c	/^static int loadStat4(sqlite3 *db, const char *zDb){$/;"	f	file:
loadStatTbl	sqlite3.c	/^static int loadStatTbl($/;"	f	file:
loadStatTbl	src/analyze.c	/^static int loadStatTbl($/;"	f	file:
loadStatTbl	tsrc/analyze.c	/^static int loadStatTbl($/;"	f	file:
load_extension	sqlite3.c	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines	file:
load_extension	sqlite3ext.h	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines
load_extension	src/sqlite3ext.h	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines
load_extension	tsrc/sqlite3ext.h	/^  int (*load_extension)(sqlite3*,const char*,const char*,char**);$/;"	m	struct:sqlite3_api_routines
load_hierachy	ext/fts5/tool/loadfts5.tcl	/^proc load_hierachy {dir} {$/;"	p
loadfile	ext/fts5/tool/loadfts5.tcl	/^proc loadfile {f} {$/;"	p
local	sqlite3.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
local	src/os_win.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
local	tsrc/os_win.c	/^  winceLock local;        \/* Locks obtained by this instance of winFile *\/$/;"	m	struct:winFile	file:
localPayload	tool/showdb.c	/^static i64 localPayload(i64 nPayload, char cType){$/;"	f	file:
localPayload	tool/showwal.c	/^static i64 localPayload(i64 nPayload, char cType){$/;"	f	file:
local_getline	shell.c	/^static char *local_getline(char *zLine, FILE *in){$/;"	f	file:
local_getline	src/shell.c	/^static char *local_getline(char *zLine, FILE *in){$/;"	f	file:
local_getline	src/tclsqlite.c	/^static char *local_getline(char *zPrompt, FILE *in){$/;"	f	file:
local_getline	tsrc/shell.c	/^static char *local_getline(char *zLine, FILE *in){$/;"	f	file:
local_getline	tsrc/tclsqlite.c	/^static char *local_getline(char *zPrompt, FILE *in){$/;"	f	file:
local_ioerr	sqlite3.c	/^static void local_ioerr(){$/;"	f	file:
local_ioerr	src/os_common.h	/^static void local_ioerr(){$/;"	f
local_ioerr	tsrc/os_common.h	/^static void local_ioerr(){$/;"	f
localtime	sqlite3.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtime	src/os_win.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtime	tsrc/os_win.c	/^struct tm *__cdecl localtime(const time_t *t)$/;"	f
localtimeOffset	sqlite3.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
localtimeOffset	src/date.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
localtimeOffset	tsrc/date.c	/^static sqlite3_int64 localtimeOffset($/;"	f	file:
locateDatabaseHandle	src/test_journal.c	/^static jt_file *locateDatabaseHandle(const char *zJournal, int noLock){$/;"	f	file:
lock	ext/async/sqlite3async.c	/^  AsyncFileLock lock;        \/* Lock state for this handle *\/$/;"	m	struct:AsyncFileData	file:
lock	sqlite3.c	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree	file:
lock	src/btreeInt.h	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree
lock	test/threadtest1.c	/^pthread_mutex_t lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v
lock	tsrc/btreeInt.h	/^  BtLock lock;       \/* Object used to lock page 1 *\/$/;"	m	struct:Btree
lockBtree	sqlite3.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtree	src/btree.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtree	tsrc/btree.c	/^static int lockBtree(BtShared *pBt){$/;"	f	file:
lockBtreeMutex	sqlite3.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockBtreeMutex	src/btmutex.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockBtreeMutex	tsrc/btmutex.c	/^static void lockBtreeMutex(Btree *p){$/;"	f	file:
lockError	sqlite3.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockError	src/wal.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockError	tsrc/wal.c	/^  u8 lockError;              \/* True if a locking error has occurred *\/$/;"	m	struct:Wal	file:
lockMask	sqlite3.c	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe	file:
lockMask	src/vdbeInt.h	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe
lockMask	tsrc/vdbeInt.h	/^  yDbMask lockMask;       \/* Subset of btreeMask that requires a lock *\/$/;"	m	struct:Vdbe
lockName	src/test_vfstrace.c	/^static const char *lockName(int eLock){$/;"	f	file:
lockProxy	sqlite3.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxy	src/os_unix.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxy	tsrc/os_unix.c	/^  unixFile *lockProxy;         \/* Open proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	sqlite3.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	src/os_unix.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockProxyPath	tsrc/os_unix.c	/^  char *lockProxyPath;         \/* Name of the proxy lock file *\/$/;"	m	struct:proxyLockingContext	file:
lockTrace	sqlite3.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
lockTrace	src/os_unix.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
lockTrace	tsrc/os_unix.c	/^static int lockTrace(int fd, int op, struct flock *p){$/;"	f	file:
locked	sqlite3.c	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree	file:
locked	src/btreeInt.h	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree
locked	tsrc/btreeInt.h	/^  u8 locked;         \/* True if db currently has pBt locked *\/$/;"	m	struct:Btree
lockingContext	sqlite3.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
lockingContext	src/os_unix.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
lockingContext	tsrc/os_unix.c	/^  void *lockingContext;               \/* Locking style specific state *\/$/;"	m	struct:unixFile	file:
locktype	sqlite3.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
locktype	src/os_win.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
locktype	tsrc/os_win.c	/^  u8 locktype;            \/* Type of lock currently held on this file *\/$/;"	m	struct:winFile	file:
log	sqlite3.c	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
log	sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
log	src/sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
log	tsrc/sqlite3ext.h	/^  void (*log)(int,const char*,...);$/;"	m	struct:sqlite3_api_routines
logBadConnection	sqlite3.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logBadConnection	src/util.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logBadConnection	tsrc/util.c	/^static void logBadConnection(const char *zType){$/;"	f	file:
logEstAdd	tool/logest.c	/^LogEst logEstAdd(LogEst a, LogEst b){$/;"	f
logEstFromDouble	tool/logest.c	/^static LogEst logEstFromDouble(double x){$/;"	f	file:
logEstFromInteger	tool/logest.c	/^LogEst logEstFromInteger(sqlite3_uint64 x){$/;"	f
logEstMultiply	tool/logest.c	/^LogEst logEstMultiply(LogEst a, LogEst b){ return a+b; }$/;"	f
logEstToInt	tool/logest.c	/^static sqlite3_uint64 logEstToInt(LogEst x){$/;"	f	file:
logMessage	mptest/mptest.c	/^static void logMessage(const char *zFormat, ...){$/;"	f	file:
logcallback	src/test1.c	/^} logcallback = {0, 0};$/;"	v	typeref:struct:LogCallback	file:
longestSuffix	tool/mkkeywordhash.c	/^  int longestSuffix;   \/* Longest suffix that is a prefix on another word *\/$/;"	m	struct:Keyword	file:
lookahead	tool/lemon.c	/^  int lookahead;             \/* Value of the lookahead token *\/$/;"	m	struct:lookahead_action	file:
lookahead_action	tool/lemon.c	/^struct lookahead_action {$/;"	s	file:
lookaside	sqlite3.c	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3	file:
lookaside	src/sqliteInt.h	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3
lookaside	tsrc/sqliteInt.h	/^  Lookaside lookaside;          \/* Lookaside malloc configuration *\/$/;"	m	struct:sqlite3
lookaside1	test/tt3_lookaside1.c	/^static void lookaside1(int nMs){$/;"	f	file:
lookaside1_thread_reader	test/tt3_lookaside1.c	/^static char *lookaside1_thread_reader(int iTid, void *pArg){$/;"	f	file:
lookaside1_thread_writer	test/tt3_lookaside1.c	/^static char *lookaside1_thread_writer(int iTid, void *pArg){$/;"	f	file:
lookupName	sqlite3.c	/^static int lookupName($/;"	f	file:
lookupName	src/resolve.c	/^static int lookupName($/;"	f	file:
lookupName	tsrc/resolve.c	/^static int lookupName($/;"	f	file:
lowerFunc	sqlite3.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lowerFunc	src/func.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lowerFunc	tsrc/func.c	/^static void lowerFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
lp	parse.y	/^lp ::= LP(X).                       {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
lp	src/parse.y	/^lp ::= LP(X).                       {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
lru	sqlite3.c	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache	file:
lru	sqlite3.c	/^  PgHdr1 lru;                    \/* The beginning and end of the LRU list *\/$/;"	m	struct:PGroup	file:
lru	src/pcache1.c	/^  PgHdr1 lru;                    \/* The beginning and end of the LRU list *\/$/;"	m	struct:PGroup	file:
lru	src/sqliteInt.h	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache
lru	tsrc/pcache1.c	/^  PgHdr1 lru;                    \/* The beginning and end of the LRU list *\/$/;"	m	struct:PGroup	file:
lru	tsrc/sqliteInt.h	/^    int lru;              \/* Least recently used entry has the smallest value *\/$/;"	m	struct:Parse::yColCache
lseek	sqlite3.c	29653;"	d	file:
lseek	src/os_unix.c	328;"	d	file:
lseek	tsrc/os_unix.c	328;"	d	file:
m	sqlite3.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	sqlite3.c	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config	file:
m	src/date.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	src/sqliteInt.h	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config
m	src/test_malloc.c	/^  sqlite3_mem_methods m;  \/* 'Real' malloc implementation *\/$/;"	m	struct:MemFault	file:
m	src/test_mutex.c	/^  sqlite3_mutex_methods m;   \/* Interface to "real" mutex system *\/$/;"	m	struct:test_mutex_globals	file:
m	tsrc/date.c	/^  int h, m;          \/* Hour and minutes *\/$/;"	m	struct:DateTime	file:
m	tsrc/sqliteInt.h	/^  sqlite3_mem_methods m;            \/* Low-level memory allocation interface *\/$/;"	m	struct:Sqlite3Config
mLock	ext/rbu/sqlite3rbu.c	/^  u32 mLock;$/;"	m	struct:sqlite3rbu	file:
mLock	sqlite3.c	/^  u32 mLock;$/;"	m	struct:sqlite3rbu	file:
mLock	tsrc/sqlite3rbu.c	/^  u32 mLock;$/;"	m	struct:sqlite3rbu	file:
mPragFlag	sqlite3.c	/^  u8 mPragFlag;             \/* Zero or more PragFlag_XXX values *\/$/;"	m	struct:sPragmaNames	file:
mPragFlag	src/pragma.h	/^  u8 mPragFlag;             \/* Zero or more PragFlag_XXX values *\/$/;"	m	struct:sPragmaNames
mPragFlag	tsrc/pragma.h	/^  u8 mPragFlag;             \/* Zero or more PragFlag_XXX values *\/$/;"	m	struct:sPragmaNames
mTrace	sqlite3.c	/^  u8 mTrace;                    \/* zero or more SQLITE_TRACE flags *\/$/;"	m	struct:sqlite3	file:
mTrace	src/sqliteInt.h	/^  u8 mTrace;                    \/* zero or more SQLITE_TRACE flags *\/$/;"	m	struct:sqlite3
mTrace	tsrc/sqliteInt.h	/^  u8 mTrace;                    \/* zero or more SQLITE_TRACE flags *\/$/;"	m	struct:sqlite3
m_eq_1	ext/fts1/fts1_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	ext/fts2/fts2_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	ext/fts3/fts3_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	sqlite3.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	tsrc/fts1_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	tsrc/fts2_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_eq_1	tsrc/fts3_porter.c	/^static int m_eq_1(const char *z){$/;"	f	file:
m_gt_0	ext/fts1/fts1_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	ext/fts2/fts2_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	ext/fts3/fts3_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	sqlite3.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	tsrc/fts1_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	tsrc/fts2_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_0	tsrc/fts3_porter.c	/^static int m_gt_0(const char *z){$/;"	f	file:
m_gt_1	ext/fts1/fts1_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	ext/fts2/fts2_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	ext/fts3/fts3_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	sqlite3.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	tsrc/fts1_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	tsrc/fts2_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
m_gt_1	tsrc/fts3_porter.c	/^static int m_gt_1(const char *z){$/;"	f	file:
magic	ext/rtree/rtree.c	/^  u32 magic;                  \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	sqlite3.c	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3	file:
magic	sqlite3.c	/^  u32 magic;                  \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	sqlite3.c	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe	file:
magic	src/sqliteInt.h	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3
magic	src/vdbeInt.h	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe
magic	tsrc/rtree.c	/^  u32 magic;                  \/* Always RTREE_GEOMETRY_MAGIC *\/$/;"	m	struct:RtreeMatchArg	file:
magic	tsrc/sqliteInt.h	/^  u32 magic;                    \/* Magic number for detect library misuse *\/$/;"	m	struct:sqlite3
magic	tsrc/vdbeInt.h	/^  u32 magic;              \/* Magic number for sanity checking *\/$/;"	m	struct:Vdbe
magic1	sqlite3.c	/^  u32 magic1;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic1	src/os_win.c	/^  u32 magic1;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic1	tsrc/os_win.c	/^  u32 magic1;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic2	sqlite3.c	/^  u32 magic2;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic2	src/os_win.c	/^  u32 magic2;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
magic2	tsrc/os_win.c	/^  u32 magic2;   \/* Magic number to detect structure corruption. *\/$/;"	m	struct:winMemData	file:
main	autoconf/tea/win/nmakehlp.c	/^main($/;"	f
main	ext/fts3/tool/fts3view.c	/^int main(int argc, char **argv){$/;"	f
main	ext/fts5/extract_api_docs.tcl	/^proc main {data} {$/;"	p
main	ext/misc/scrub.c	/^int main(int argc, char **argv){$/;"	f
main	ext/rbu/rbu.c	/^int main(int argc, char **argv){$/;"	f
main	ext/session/changeset.c	/^int main(int argc, char **argv){$/;"	f
main	mptest/mptest.c	/^int SQLITE_CDECL main(int argc, char **argv){$/;"	f
main	shell.c	/^int SQLITE_CDECL main(int argc, char **argv){$/;"	f
main	src/shell.c	/^int SQLITE_CDECL main(int argc, char **argv){$/;"	f
main	test/crashtest1.c	/^int main(int argc, char **argv){$/;"	f
main	test/fuzzcheck.c	/^int main(int argc, char **argv){$/;"	f
main	test/releasetest.tcl	/^proc main {argv} {$/;"	p
main	test/speedtest1.c	/^int main(int argc, char **argv){$/;"	f
main	test/threadtest1.c	/^int main(int argc, char **argv){$/;"	f
main	test/threadtest2.c	/^int main(int argc, char **argv){$/;"	f
main	test/threadtest3.c	/^int main(int argc, char **argv){$/;"	f
main	test/threadtest4.c	/^int main(int argc, char **argv){$/;"	f
main	test/wordcount.c	/^int main(int argc, char **argv){$/;"	f
main	tool/checkSpacing.c	/^int main(int argc, char **argv){$/;"	f
main	tool/dbhash.c	/^int main(int argc, char **argv){$/;"	f
main	tool/extract.c	/^int main(int argc, char **argv){$/;"	f
main	tool/fast_vacuum.c	/^int main(int argc, char **argv){$/;"	f
main	tool/fuzzershell.c	/^int main(int argc, char **argv){$/;"	f
main	tool/getlock.c	/^int main(int argc, char **argv){$/;"	f
main	tool/lemon.c	/^int main(int argc, char **argv)$/;"	f
main	tool/libvers.c	/^int main(int argc, char **argv){$/;"	f
main	tool/loadfts.c	/^int main(int argc, char **argv){$/;"	f
main	tool/logest.c	/^int main(int argc, char **argv){$/;"	f
main	tool/mkkeywordhash.c	/^int main(int argc, char **argv){$/;"	f
main	tool/offsets.c	/^int main(int argc, char **argv){$/;"	f
main	tool/omittest.tcl	/^proc main {argv} {$/;"	p
main	tool/pagesig.c	/^int main(int argc, char **argv){$/;"	f
main	tool/rollback-test.c	/^int main(int argc, char **argv){$/;"	f
main	tool/showdb.c	/^int main(int argc, char **argv){$/;"	f
main	tool/showjournal.c	/^int main(int argc, char **argv){$/;"	f
main	tool/showlocks.c	/^int main(int argc, char **argv){$/;"	f
main	tool/showstat4.c	/^int main(int argc, char **argv){$/;"	f
main	tool/showwal.c	/^int main(int argc, char **argv){$/;"	f
main	tool/speedtest16.c	/^int main(int argc, char **argv){$/;"	f
main	tool/speedtest8.c	/^int main(int argc, char **argv){$/;"	f
main	tool/speedtest8inst1.c	/^int main(int argc, char **argv){$/;"	f
main	tool/sqldiff.c	/^int main(int argc, char **argv){$/;"	f
main	tool/srcck1.c	/^int main(int argc, char **argv){$/;"	f
main	tool/varint.c	/^int main(int argc, char **argv){$/;"	f
main	tsrc/shell.c	/^int SQLITE_CDECL main(int argc, char **argv){$/;"	f
mainDb	test/threadtest4.c	/^  sqlite3 *mainDb;            \/* Database connection of the main thread *\/$/;"	m	struct:WorkerInfo	file:
mainPrompt	shell.c	/^static char mainPrompt[20];     \/* First line prompt. default: "sqlite> "*\/$/;"	v	file:
mainPrompt	src/shell.c	/^static char mainPrompt[20];     \/* First line prompt. default: "sqlite> "*\/$/;"	v	file:
mainPrompt	tsrc/shell.c	/^static char mainPrompt[20];     \/* First line prompt. default: "sqlite> "*\/$/;"	v	file:
main_init	shell.c	/^static void main_init(ShellState *data) {$/;"	f	file:
main_init	src/shell.c	/^static void main_init(ShellState *data) {$/;"	f	file:
main_init	tsrc/shell.c	/^static void main_init(ShellState *data) {$/;"	f	file:
major	fts5.c	/^  fts5YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:fts5yyStackEntry	file:
major	fts5parse.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	lempar.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	parse.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	sqlite3.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	sqlite3.c	/^  fts5YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:fts5yyStackEntry	file:
major	tool/lempar.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
major	tsrc/fts5.c	/^  fts5YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:fts5yyStackEntry	file:
major	tsrc/parse.c	/^  YYCODETYPE major;      \/* The major token value.  This is the code$/;"	m	struct:yyStackEntry	file:
makeCommand	test/releasetest.tcl	/^proc makeCommand { targets makeOpts cflags opts } {$/;"	p
make_test_case	test/randexpr1.tcl	/^proc make_test_case {sql result} {$/;"	p
maketest	test/boundary4.tcl	/^proc maketest {tnum sql answer} {$/;"	p
malloc	sqlite3.c	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
malloc	sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
malloc	src/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
malloc	tsrc/sqlite3ext.h	/^  void *(*malloc)(int);$/;"	m	struct:sqlite3_api_routines
malloc64	sqlite3.c	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
malloc64	sqlite3ext.h	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
malloc64	src/sqlite3ext.h	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
malloc64	tsrc/sqlite3ext.h	/^  void *(*malloc64)(sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
mallocFailed	ext/misc/nextchar.c	/^  int mallocFailed;                 \/* True if malloc fails *\/$/;"	m	struct:nextCharContext	file:
mallocFailed	sqlite3.c	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk	file:
mallocFailed	sqlite3.c	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3	file:
mallocFailed	src/btreeInt.h	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk
mallocFailed	src/sqliteInt.h	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3
mallocFailed	tsrc/btreeInt.h	/^  int mallocFailed; \/* A memory allocation error has occurred *\/$/;"	m	struct:IntegrityCk
mallocFailed	tsrc/sqliteInt.h	/^  u8 mallocFailed;              \/* True if we have seen a malloc failure *\/$/;"	m	struct:sqlite3
mallocLogEnabled	src/test_malloc.c	/^static int mallocLogEnabled = 0;$/;"	v	file:
mallocWithAlarm	sqlite3.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
mallocWithAlarm	src/malloc.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
mallocWithAlarm	tsrc/malloc.c	/^static int mallocWithAlarm(int n, void **pp){$/;"	f	file:
malloc_and_zero	ext/fts1/ft_hash.c	/^void *malloc_and_zero(int n){$/;"	f
malloc_and_zero	ext/fts1/fts1_hash.c	/^static void *malloc_and_zero(int n){$/;"	f	file:
malloc_and_zero	tsrc/fts1_hash.c	/^static void *malloc_and_zero(int n){$/;"	f	file:
markTermAsChild	sqlite3.c	/^static void markTermAsChild(WhereClause *pWC, int iChild, int iParent){$/;"	f	file:
markTermAsChild	src/whereexpr.c	/^static void markTermAsChild(WhereClause *pWC, int iChild, int iParent){$/;"	f	file:
markTermAsChild	tsrc/whereexpr.c	/^static void markTermAsChild(WhereClause *pWC, int iChild, int iParent){$/;"	f	file:
mask	parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon40::__anon41	file:
mask	sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon102::__anon103	file:
mask	src/test_vfs.c	/^  int mask;                       \/* Mask controlling [script] and [ioerr] *\/$/;"	m	struct:Testvfs	file:
mask	tool/mkkeywordhash.c	/^  int mask;            \/* Code this keyword if non-zero *\/$/;"	m	struct:Keyword	file:
mask	tsrc/parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon17::__anon18	file:
maskLoop	sqlite3.c	/^  Bitmask maskLoop;     \/* Bitmask of all WhereLoop objects in this path *\/$/;"	m	struct:WherePath	file:
maskLoop	src/whereInt.h	/^  Bitmask maskLoop;     \/* Bitmask of all WhereLoop objects in this path *\/$/;"	m	struct:WherePath
maskLoop	tsrc/whereInt.h	/^  Bitmask maskLoop;     \/* Bitmask of all WhereLoop objects in this path *\/$/;"	m	struct:WherePath
maskPage	sqlite3.c	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage	file:
maskPage	src/btreeInt.h	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage
maskPage	tsrc/btreeInt.h	/^  u16 maskPage;        \/* Mask for page offset *\/$/;"	m	struct:MemPage
maskSelf	sqlite3.c	/^  Bitmask maskSelf;     \/* Bitmask identifying table iTab *\/$/;"	m	struct:WhereLoop	file:
maskSelf	src/whereInt.h	/^  Bitmask maskSelf;     \/* Bitmask identifying table iTab *\/$/;"	m	struct:WhereLoop
maskSelf	tsrc/whereInt.h	/^  Bitmask maskSelf;     \/* Bitmask identifying table iTab *\/$/;"	m	struct:WhereLoop
maskUsed	sqlite3.c	/^  u64 maskUsed;         \/* Mask of columns used by this cursor *\/$/;"	m	struct:VdbeCursor	file:
maskUsed	src/vdbeInt.h	/^  u64 maskUsed;         \/* Mask of columns used by this cursor *\/$/;"	m	struct:VdbeCursor
maskUsed	tsrc/vdbeInt.h	/^  u64 maskUsed;         \/* Mask of columns used by this cursor *\/$/;"	m	struct:VdbeCursor
matchAll	sqlite3.c	/^  u8 matchAll;          \/* "*" or "%" *\/$/;"	m	struct:compareInfo	file:
matchAll	src/func.c	/^  u8 matchAll;          \/* "*" or "%" *\/$/;"	m	struct:compareInfo	file:
matchAll	tsrc/func.c	/^  u8 matchAll;          \/* "*" or "%" *\/$/;"	m	struct:compareInfo	file:
matchFrom	ext/misc/spellfix.c	/^static int matchFrom(EditDist3Cost *p, const char *z, int n){$/;"	f	file:
matchFromTo	ext/misc/spellfix.c	/^static int matchFromTo($/;"	f	file:
matchOne	sqlite3.c	/^  u8 matchOne;          \/* "?" or "_" *\/$/;"	m	struct:compareInfo	file:
matchOne	src/func.c	/^  u8 matchOne;          \/* "?" or "_" *\/$/;"	m	struct:compareInfo	file:
matchOne	tsrc/func.c	/^  u8 matchOne;          \/* "?" or "_" *\/$/;"	m	struct:compareInfo	file:
matchQuality	sqlite3.c	/^static int matchQuality($/;"	f	file:
matchQuality	src/callback.c	/^static int matchQuality($/;"	f	file:
matchQuality	tsrc/callback.c	/^static int matchQuality($/;"	f	file:
matchSet	sqlite3.c	/^  u8 matchSet;          \/* "[" or 0 *\/$/;"	m	struct:compareInfo	file:
matchSet	src/func.c	/^  u8 matchSet;          \/* "[" or 0 *\/$/;"	m	struct:compareInfo	file:
matchSet	tsrc/func.c	/^  u8 matchSet;          \/* "[" or 0 *\/$/;"	m	struct:compareInfo	file:
matchTo	ext/misc/spellfix.c	/^static int matchTo(EditDist3Cost *p, const char *z, int n){$/;"	f	file:
max1bytePayload	sqlite3.c	/^  u8 max1bytePayload;   \/* Maximum first byte of cell for a 1-byte payload *\/$/;"	m	struct:BtShared	file:
max1bytePayload	sqlite3.c	/^  u8 max1bytePayload;  \/* min(maxLocal,127) *\/$/;"	m	struct:MemPage	file:
max1bytePayload	src/btreeInt.h	/^  u8 max1bytePayload;   \/* Maximum first byte of cell for a 1-byte payload *\/$/;"	m	struct:BtShared
max1bytePayload	src/btreeInt.h	/^  u8 max1bytePayload;  \/* min(maxLocal,127) *\/$/;"	m	struct:MemPage
max1bytePayload	tsrc/btreeInt.h	/^  u8 max1bytePayload;   \/* Maximum first byte of cell for a 1-byte payload *\/$/;"	m	struct:BtShared
max1bytePayload	tsrc/btreeInt.h	/^  u8 max1bytePayload;  \/* min(maxLocal,127) *\/$/;"	m	struct:MemPage
maxCount	sqlite3.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxCount	src/mem5.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxCount	tsrc/mem5.c	/^  u32 maxCount;       \/* Maximum instantaneous currentCount *\/$/;"	m	struct:Mem5Global	file:
maxLeaf	sqlite3.c	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
maxLeaf	src/btreeInt.h	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared
maxLeaf	tsrc/btreeInt.h	/^  u16 maxLeaf;          \/* Maximum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared
maxLocal	sqlite3.c	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
maxLocal	sqlite3.c	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage	file:
maxLocal	src/btreeInt.h	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared
maxLocal	src/btreeInt.h	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage
maxLocal	tsrc/btreeInt.h	/^  u16 maxLocal;         \/* Maximum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared
maxLocal	tsrc/btreeInt.h	/^  u16 maxLocal;        \/* Copy of BtShared.maxLocal or BtShared.maxLeaf *\/$/;"	m	struct:MemPage
maxOut	sqlite3.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxOut	src/mem5.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxOut	tsrc/mem5.c	/^  u32 maxOut;         \/* Maximum instantaneous currentOut *\/$/;"	m	struct:Mem5Global	file:
maxRequest	sqlite3.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
maxRequest	src/mem5.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
maxRequest	tsrc/mem5.c	/^  u32 maxRequest;     \/* Largest allocation (exclusive of internal frag) *\/$/;"	m	struct:Mem5Global	file:
maxStmt	src/tclsqlite.c	/^  int maxStmt;               \/* The next maximum number of stmtList *\/$/;"	m	struct:SqliteDb	file:
maxStmt	tsrc/tclsqlite.c	/^  int maxStmt;               \/* The next maximum number of stmtList *\/$/;"	m	struct:SqliteDb	file:
mayAbort	sqlite3.c	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse	file:
mayAbort	src/sqliteInt.h	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse
mayAbort	tsrc/sqliteInt.h	/^  u8 mayAbort;         \/* True if statement may throw an ABORT exception *\/$/;"	m	struct:Parse
maybeClose	mptest/mptest.c	/^static void maybeClose(FILE *pOut){$/;"	f	file:
md5_cmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI md5_cmd($/;"	f	file:
md5_cmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI md5_cmd($/;"	f	file:
md5file_cmd	src/tclsqlite.c	/^static int SQLITE_TCLAPI md5file_cmd($/;"	f	file:
md5file_cmd	tsrc/tclsqlite.c	/^static int SQLITE_TCLAPI md5file_cmd($/;"	f	file:
md5finalize	src/tclsqlite.c	/^static void md5finalize(sqlite3_context *context){$/;"	f	file:
md5finalize	test/threadtest3.c	/^static void md5finalize(sqlite3_context *context){$/;"	f	file:
md5finalize	tsrc/tclsqlite.c	/^static void md5finalize(sqlite3_context *context){$/;"	f	file:
md5step	src/tclsqlite.c	/^static void md5step(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
md5step	test/threadtest3.c	/^static void md5step(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
md5step	tsrc/tclsqlite.c	/^static void md5step(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
measureAllocationSize	sqlite3.c	/^static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p){$/;"	f	file:
measureAllocationSize	src/malloc.c	/^static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p){$/;"	f	file:
measureAllocationSize	tsrc/malloc.c	/^static SQLITE_NOINLINE void measureAllocationSize(sqlite3 *db, void *p){$/;"	f	file:
mem	sqlite3.c	/^} mem;$/;"	v	typeref:struct:__anon89	file:
mem	src/mem2.c	/^} mem;$/;"	v	typeref:struct:__anon63	file:
mem	src/test_init.c	/^  sqlite3_mem_methods     mem;$/;"	m	struct:Wrapped	file:
mem	tsrc/mem2.c	/^} mem;$/;"	v	typeref:struct:__anon30	file:
mem0	sqlite3.c	/^} mem0 = { 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	sqlite3.c	23899;"	d	file:
mem0	src/malloc.c	/^} mem0 = { 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	src/malloc.c	67;"	d	file:
mem0	tsrc/malloc.c	/^} mem0 = { 0, 0, 0, 0, 0, 0 };$/;"	v	typeref:struct:Mem0Global	file:
mem0	tsrc/malloc.c	67;"	d	file:
mem3	sqlite3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	sqlite3.c	21231;"	d	file:
mem3	src/mem3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	src/mem3.c	141;"	d	file:
mem3	tsrc/mem3.c	/^} mem3 = { 97535575 };$/;"	v	typeref:struct:Mem3Global	file:
mem3	tsrc/mem3.c	141;"	d	file:
mem5	sqlite3.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	sqlite3.c	21917;"	d	file:
mem5	src/mem5.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	src/mem5.c	137;"	d	file:
mem5	tsrc/mem5.c	/^} mem5;$/;"	v	typeref:struct:Mem5Global	file:
mem5	tsrc/mem5.c	137;"	d	file:
memAboutToChange	sqlite3.c	77073;"	d	file:
memAboutToChange	sqlite3.c	77075;"	d	file:
memAboutToChange	src/vdbe.c	34;"	d	file:
memAboutToChange	src/vdbe.c	36;"	d	file:
memAboutToChange	tsrc/vdbe.c	34;"	d	file:
memAboutToChange	tsrc/vdbe.c	36;"	d	file:
memDb	sqlite3.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memDb	src/pager.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memDb	tsrc/pager.c	/^  u8 memDb;                   \/* True to inhibit all file I\/O *\/$/;"	m	struct:Pager	file:
memIsValid	sqlite3.c	17901;"	d	file:
memIsValid	src/vdbeInt.h	279;"	d
memIsValid	tsrc/vdbeInt.h	279;"	d
memTracePrint	sqlite3.c	/^static void memTracePrint(Mem *p){$/;"	f	file:
memTracePrint	src/vdbe.c	/^static void memTracePrint(Mem *p){$/;"	f	file:
memTracePrint	tsrc/vdbe.c	/^static void memTracePrint(Mem *p){$/;"	f	file:
mem_fail	src/test_init.c	/^  int mem_fail;                \/* True to fail mem subsystem inialization *\/$/;"	m	struct:Wrapped	file:
mem_init	src/test_init.c	/^  int mem_init;                \/* True if mem subsystem is initalized *\/$/;"	m	struct:Wrapped	file:
memdbsql	test/tester.tcl	/^proc memdbsql {sql} {$/;"	p
memdebug_log_sql	test/tester.tcl	/^proc memdebug_log_sql {{filename mallocs.sql}} {$/;"	p
memfault	src/test_malloc.c	/^} memfault;$/;"	v	typeref:struct:MemFault	file:
memjrnlClose	sqlite3.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlClose	src/memjournal.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlClose	tsrc/memjournal.c	/^static int memjrnlClose(sqlite3_file *pJfd){$/;"	f	file:
memjrnlCreateFile	sqlite3.c	/^static int memjrnlCreateFile(MemJournal *p){$/;"	f	file:
memjrnlCreateFile	src/memjournal.c	/^static int memjrnlCreateFile(MemJournal *p){$/;"	f	file:
memjrnlCreateFile	tsrc/memjournal.c	/^static int memjrnlCreateFile(MemJournal *p){$/;"	f	file:
memjrnlFileSize	sqlite3.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlFileSize	src/memjournal.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlFileSize	tsrc/memjournal.c	/^static int memjrnlFileSize(sqlite3_file *pJfd, sqlite_int64 *pSize){$/;"	f	file:
memjrnlFreeChunks	sqlite3.c	/^static void memjrnlFreeChunks(MemJournal *p){$/;"	f	file:
memjrnlFreeChunks	src/memjournal.c	/^static void memjrnlFreeChunks(MemJournal *p){$/;"	f	file:
memjrnlFreeChunks	tsrc/memjournal.c	/^static void memjrnlFreeChunks(MemJournal *p){$/;"	f	file:
memjrnlRead	sqlite3.c	/^static int memjrnlRead($/;"	f	file:
memjrnlRead	src/memjournal.c	/^static int memjrnlRead($/;"	f	file:
memjrnlRead	tsrc/memjournal.c	/^static int memjrnlRead($/;"	f	file:
memjrnlSync	sqlite3.c	/^static int memjrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
memjrnlSync	src/memjournal.c	/^static int memjrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
memjrnlSync	tsrc/memjournal.c	/^static int memjrnlSync(sqlite3_file *pJfd, int flags){$/;"	f	file:
memjrnlTruncate	sqlite3.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlTruncate	src/memjournal.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlTruncate	tsrc/memjournal.c	/^static int memjrnlTruncate(sqlite3_file *pJfd, sqlite_int64 size){$/;"	f	file:
memjrnlWrite	sqlite3.c	/^static int memjrnlWrite($/;"	f	file:
memjrnlWrite	src/memjournal.c	/^static int memjrnlWrite($/;"	f	file:
memjrnlWrite	tsrc/memjournal.c	/^static int memjrnlWrite($/;"	f	file:
memory_error	tool/lemon.c	/^void memory_error(){$/;"	f
memory_highwater	sqlite3.c	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines	file:
memory_highwater	sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_highwater	src/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_highwater	tsrc/sqlite3ext.h	/^  sqlite3_int64 (*memory_highwater)(int);$/;"	m	struct:sqlite3_api_routines
memory_used	sqlite3.c	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines	file:
memory_used	sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
memory_used	src/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
memory_used	tsrc/sqlite3ext.h	/^  sqlite3_int64 (*memory_used)(void);$/;"	m	struct:sqlite3_api_routines
memsys3Checkout	sqlite3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Checkout	src/mem3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Checkout	tsrc/mem3.c	/^static void *memsys3Checkout(u32 i, u32 nBlock){$/;"	f	file:
memsys3Enter	sqlite3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Enter	src/mem3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Enter	tsrc/mem3.c	/^static void memsys3Enter(void){$/;"	f	file:
memsys3Free	sqlite3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3Free	src/mem3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3Free	tsrc/mem3.c	/^static void memsys3Free(void *pPrior){$/;"	f	file:
memsys3FreeUnsafe	sqlite3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FreeUnsafe	src/mem3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FreeUnsafe	tsrc/mem3.c	/^static void memsys3FreeUnsafe(void *pOld){$/;"	f	file:
memsys3FromMaster	sqlite3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3FromMaster	src/mem3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3FromMaster	tsrc/mem3.c	/^static void *memsys3FromMaster(u32 nBlock){$/;"	f	file:
memsys3Init	sqlite3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Init	src/mem3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Init	tsrc/mem3.c	/^static int memsys3Init(void *NotUsed){$/;"	f	file:
memsys3Leave	sqlite3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Leave	src/mem3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Leave	tsrc/mem3.c	/^static void memsys3Leave(void){$/;"	f	file:
memsys3Link	sqlite3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3Link	src/mem3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3Link	tsrc/mem3.c	/^static void memsys3Link(u32 i){$/;"	f	file:
memsys3LinkIntoList	sqlite3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3LinkIntoList	src/mem3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3LinkIntoList	tsrc/mem3.c	/^static void memsys3LinkIntoList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3Malloc	sqlite3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3Malloc	src/mem3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3Malloc	tsrc/mem3.c	/^static void *memsys3Malloc(int nBytes){$/;"	f	file:
memsys3MallocUnsafe	sqlite3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3MallocUnsafe	src/mem3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3MallocUnsafe	tsrc/mem3.c	/^static void *memsys3MallocUnsafe(int nByte){$/;"	f	file:
memsys3Merge	sqlite3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3Merge	src/mem3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3Merge	tsrc/mem3.c	/^static void memsys3Merge(u32 *pRoot){$/;"	f	file:
memsys3OutOfMemory	sqlite3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3OutOfMemory	src/mem3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3OutOfMemory	tsrc/mem3.c	/^static void memsys3OutOfMemory(int nByte){$/;"	f	file:
memsys3Realloc	sqlite3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Realloc	src/mem3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Realloc	tsrc/mem3.c	/^static void *memsys3Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys3Roundup	sqlite3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Roundup	src/mem3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Roundup	tsrc/mem3.c	/^static int memsys3Roundup(int n){$/;"	f	file:
memsys3Shutdown	sqlite3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Shutdown	src/mem3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Shutdown	tsrc/mem3.c	/^static void memsys3Shutdown(void *NotUsed){$/;"	f	file:
memsys3Size	sqlite3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Size	src/mem3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Size	tsrc/mem3.c	/^static int memsys3Size(void *p){$/;"	f	file:
memsys3Unlink	sqlite3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3Unlink	src/mem3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3Unlink	tsrc/mem3.c	/^static void memsys3Unlink(u32 i){$/;"	f	file:
memsys3UnlinkFromList	sqlite3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3UnlinkFromList	src/mem3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys3UnlinkFromList	tsrc/mem3.c	/^static void memsys3UnlinkFromList(u32 i, u32 *pRoot){$/;"	f	file:
memsys5Enter	sqlite3.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Enter	src/mem5.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Enter	tsrc/mem5.c	/^static void memsys5Enter(void){$/;"	f	file:
memsys5Free	sqlite3.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5Free	src/mem5.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5Free	tsrc/mem5.c	/^static void memsys5Free(void *pPrior){$/;"	f	file:
memsys5FreeUnsafe	sqlite3.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5FreeUnsafe	src/mem5.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5FreeUnsafe	tsrc/mem5.c	/^static void memsys5FreeUnsafe(void *pOld){$/;"	f	file:
memsys5Init	sqlite3.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Init	src/mem5.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Init	tsrc/mem5.c	/^static int memsys5Init(void *NotUsed){$/;"	f	file:
memsys5Leave	sqlite3.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Leave	src/mem5.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Leave	tsrc/mem5.c	/^static void memsys5Leave(void){$/;"	f	file:
memsys5Link	sqlite3.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Link	src/mem5.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Link	tsrc/mem5.c	/^static void memsys5Link(int i, int iLogsize){$/;"	f	file:
memsys5Log	sqlite3.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Log	src/mem5.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Log	tsrc/mem5.c	/^static int memsys5Log(int iValue){$/;"	f	file:
memsys5Malloc	sqlite3.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5Malloc	src/mem5.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5Malloc	tsrc/mem5.c	/^static void *memsys5Malloc(int nBytes){$/;"	f	file:
memsys5MallocUnsafe	sqlite3.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5MallocUnsafe	src/mem5.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5MallocUnsafe	tsrc/mem5.c	/^static void *memsys5MallocUnsafe(int nByte){$/;"	f	file:
memsys5Realloc	sqlite3.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Realloc	src/mem5.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Realloc	tsrc/mem5.c	/^static void *memsys5Realloc(void *pPrior, int nBytes){$/;"	f	file:
memsys5Roundup	sqlite3.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Roundup	src/mem5.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Roundup	tsrc/mem5.c	/^static int memsys5Roundup(int n){$/;"	f	file:
memsys5Shutdown	sqlite3.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Shutdown	src/mem5.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Shutdown	tsrc/mem5.c	/^static void memsys5Shutdown(void *NotUsed){$/;"	f	file:
memsys5Size	sqlite3.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Size	src/mem5.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Size	tsrc/mem5.c	/^static int memsys5Size(void *p){$/;"	f	file:
memsys5Unlink	sqlite3.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
memsys5Unlink	src/mem5.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
memsys5Unlink	tsrc/mem5.c	/^static void memsys5Unlink(int i, int iLogsize){$/;"	f	file:
merge	tool/lemon.c	/^static char *merge($/;"	f	file:
mergeBlock	ext/fts1/fulltext.c	/^static void mergeBlock(DocListMerge *m, DocList *pBlock){$/;"	f	file:
mergeInit	ext/fts1/fulltext.c	/^static void mergeInit(DocListMerge *m,$/;"	f	file:
mergePosList	ext/fts1/fts1.c	/^static void mergePosList($/;"	f	file:
mergePosList	ext/fts1/fulltext.c	/^static void mergePosList(DocListMerge *m, sqlite_int64 iDocid,$/;"	f	file:
mergePosList	tsrc/fts1.c	/^static void mergePosList($/;"	f	file:
message	tool/lemon.c	/^  const char *message;$/;"	m	struct:s_options	file:
midClass	ext/misc/spellfix.c	/^static const unsigned char midClass[] = {$/;"	v	file:
minFrame	sqlite3.c	/^  u32 minFrame;              \/* Ignore wal frames before this one *\/$/;"	m	struct:Wal	file:
minFrame	src/wal.c	/^  u32 minFrame;              \/* Ignore wal frames before this one *\/$/;"	m	struct:Wal	file:
minFrame	tsrc/wal.c	/^  u32 minFrame;              \/* Ignore wal frames before this one *\/$/;"	m	struct:Wal	file:
minLeaf	sqlite3.c	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared	file:
minLeaf	src/btreeInt.h	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared
minLeaf	tsrc/btreeInt.h	/^  u16 minLeaf;          \/* Minimum local payload in a LEAFDATA table *\/$/;"	m	struct:BtShared
minLocal	sqlite3.c	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared	file:
minLocal	sqlite3.c	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage	file:
minLocal	src/btreeInt.h	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared
minLocal	src/btreeInt.h	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage
minLocal	tsrc/btreeInt.h	/^  u16 minLocal;         \/* Minimum local payload in non-LEAFDATA tables *\/$/;"	m	struct:BtShared
minLocal	tsrc/btreeInt.h	/^  u16 minLocal;        \/* Copy of BtShared.minLocal or BtShared.minLeaf *\/$/;"	m	struct:MemPage
minMaxFinalize	sqlite3.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxFinalize	src/func.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxFinalize	tsrc/func.c	/^static void minMaxFinalize(sqlite3_context *context){$/;"	f	file:
minMaxQuery	sqlite3.c	/^static u8 minMaxQuery(AggInfo *pAggInfo, ExprList **ppMinMax){$/;"	f	file:
minMaxQuery	src/select.c	/^static u8 minMaxQuery(AggInfo *pAggInfo, ExprList **ppMinMax){$/;"	f	file:
minMaxQuery	tsrc/select.c	/^static u8 minMaxQuery(AggInfo *pAggInfo, ExprList **ppMinMax){$/;"	f	file:
minWriteFileFormat	sqlite3.c	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe	file:
minWriteFileFormat	src/vdbeInt.h	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe
minWriteFileFormat	tsrc/vdbeInt.h	/^  u8 minWriteFileFormat;  \/* Minimum file format for writable database files *\/$/;"	m	struct:Vdbe
minimum_size_type	tool/lemon.c	/^static const char *minimum_size_type(int lwr, int upr, int *pnByte){$/;"	f	file:
minmaxFunc	sqlite3.c	/^static void minmaxFunc($/;"	f	file:
minmaxFunc	src/func.c	/^static void minmaxFunc($/;"	f	file:
minmaxFunc	tsrc/func.c	/^static void minmaxFunc($/;"	f	file:
minmaxStep	sqlite3.c	/^static void minmaxStep($/;"	f	file:
minmaxStep	src/func.c	/^static void minmaxStep($/;"	f	file:
minmaxStep	tsrc/func.c	/^static void minmaxStep($/;"	f	file:
minor	fts5.c	/^  fts5YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:fts5yyStackEntry	file:
minor	fts5parse.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	lempar.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	parse.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	sqlite3.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	sqlite3.c	/^  fts5YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:fts5yyStackEntry	file:
minor	tool/lempar.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
minor	tsrc/fts5.c	/^  fts5YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:fts5yyStackEntry	file:
minor	tsrc/parse.c	/^  YYMINORTYPE minor;     \/* The user-supplied minor token value.  This$/;"	m	struct:yyStackEntry	file:
mkFullPathname	sqlite3.c	/^static int mkFullPathname($/;"	f	file:
mkFullPathname	src/os_unix.c	/^static int mkFullPathname($/;"	f	file:
mkFullPathname	tsrc/os_unix.c	/^static int mkFullPathname($/;"	f	file:
mmapSize	sqlite3.c	/^  sqlite3_int64 mmapSize;             \/* Usable size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSize	sqlite3.c	/^  sqlite3_int64 mmapSize;       \/* Usable size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSize	src/os_unix.c	/^  sqlite3_int64 mmapSize;             \/* Usable size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSize	src/os_win.c	/^  sqlite3_int64 mmapSize;       \/* Usable size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSize	tsrc/os_unix.c	/^  sqlite3_int64 mmapSize;             \/* Usable size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSize	tsrc/os_win.c	/^  sqlite3_int64 mmapSize;       \/* Usable size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeActual	sqlite3.c	/^  sqlite3_int64 mmapSizeActual;       \/* Actual size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSizeActual	sqlite3.c	/^  sqlite3_int64 mmapSizeActual; \/* Actual size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeActual	src/os_unix.c	/^  sqlite3_int64 mmapSizeActual;       \/* Actual size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSizeActual	src/os_win.c	/^  sqlite3_int64 mmapSizeActual; \/* Actual size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeActual	tsrc/os_unix.c	/^  sqlite3_int64 mmapSizeActual;       \/* Actual size of mapping at pMapRegion *\/$/;"	m	struct:unixFile	file:
mmapSizeActual	tsrc/os_win.c	/^  sqlite3_int64 mmapSizeActual; \/* Actual size of mapped region *\/$/;"	m	struct:winFile	file:
mmapSizeMax	sqlite3.c	/^  sqlite3_int64 mmapSizeMax;          \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:unixFile	file:
mmapSizeMax	sqlite3.c	/^  sqlite3_int64 mmapSizeMax;    \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:winFile	file:
mmapSizeMax	src/os_unix.c	/^  sqlite3_int64 mmapSizeMax;          \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:unixFile	file:
mmapSizeMax	src/os_win.c	/^  sqlite3_int64 mmapSizeMax;    \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:winFile	file:
mmapSizeMax	tsrc/os_unix.c	/^  sqlite3_int64 mmapSizeMax;          \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:unixFile	file:
mmapSizeMax	tsrc/os_win.c	/^  sqlite3_int64 mmapSizeMax;    \/* Configured FCNTL_MMAP_SIZE value *\/$/;"	m	struct:winFile	file:
mnAction	tool/lemon.c	/^  int mnAction;                \/* Action associated with mnLookahead *\/$/;"	m	struct:acttab	file:
mnLookahead	tool/lemon.c	/^  int mnLookahead;             \/* Minimum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
mnMaster	sqlite3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnMaster	src/mem3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnMaster	tsrc/mem3.c	/^  u32 mnMaster;$/;"	m	struct:Mem3Global	file:
mnPmaSize	sqlite3.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnPmaSize	src/vdbesort.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnPmaSize	tsrc/vdbesort.c	/^  int mnPmaSize;                  \/* Minimum PMA size, in bytes *\/$/;"	m	struct:VdbeSorter	file:
mnReg	sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mnReg	src/sqliteInt.h	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo
mnReg	tsrc/sqliteInt.h	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo
mnReq	sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mnReq	src/sqliteInt.h	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config
mnReq	tsrc/sqliteInt.h	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config
mnValue	ext/misc/series.c	/^  sqlite3_int64 mnValue;     \/* Mimimum value ("start") *\/$/;"	m	struct:series_cursor	file:
mode	shell.c	/^  int mode;              \/* An output mode setting *\/$/;"	m	struct:ShellState	file:
mode	shell.c	/^  int mode;           \/* Mode prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
mode	src/shell.c	/^  int mode;              \/* An output mode setting *\/$/;"	m	struct:ShellState	file:
mode	src/shell.c	/^  int mode;           \/* Mode prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
mode	tsrc/shell.c	/^  int mode;              \/* An output mode setting *\/$/;"	m	struct:ShellState	file:
mode	tsrc/shell.c	/^  int mode;           \/* Mode prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
modeDescr	shell.c	/^static const char *modeDescr[] = {$/;"	v	file:
modeDescr	src/shell.c	/^static const char *modeDescr[] = {$/;"	v	file:
modeDescr	tsrc/shell.c	/^static const char *modeDescr[] = {$/;"	v	file:
modifyPagePointer	sqlite3.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
modifyPagePointer	src/btree.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
modifyPagePointer	tsrc/btree.c	/^static int modifyPagePointer(MemPage *pPage, Pgno iFrom, Pgno iTo, u8 eType){$/;"	f	file:
moduleDestroy	src/test8.c	/^static void moduleDestroy(void *p){$/;"	f	file:
module_name_func	tool/sqldiff.c	/^static void module_name_func($/;"	f	file:
moveToChild	sqlite3.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToChild	src/btree.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToChild	tsrc/btree.c	/^static int moveToChild(BtCursor *pCur, u32 newPgno){$/;"	f	file:
moveToLeftmost	sqlite3.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToLeftmost	src/btree.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToLeftmost	tsrc/btree.c	/^static int moveToLeftmost(BtCursor *pCur){$/;"	f	file:
moveToParent	sqlite3.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToParent	src/btree.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToParent	tsrc/btree.c	/^static void moveToParent(BtCursor *pCur){$/;"	f	file:
moveToRightmost	sqlite3.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRightmost	src/btree.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRightmost	tsrc/btree.c	/^static int moveToRightmost(BtCursor *pCur){$/;"	f	file:
moveToRoot	sqlite3.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
moveToRoot	src/btree.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
moveToRoot	tsrc/btree.c	/^static int moveToRoot(BtCursor *pCur){$/;"	f	file:
movetoTarget	sqlite3.c	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
movetoTarget	src/vdbeInt.h	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor
movetoTarget	tsrc/vdbeInt.h	/^  i64 movetoTarget;     \/* Argument to the deferred sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor
mprintf	sqlite3.c	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
mprintf	sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
mprintf	src/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
mprintf	tsrc/sqlite3ext.h	/^  char * (*mprintf)(const char*,...);$/;"	m	struct:sqlite3_api_routines
msize	sqlite3.c	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines	file:
msize	sqlite3ext.h	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines
msize	src/sqlite3ext.h	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines
msize	tsrc/sqlite3ext.h	/^  sqlite3_uint64 (*msize)(void*);$/;"	m	struct:sqlite3_api_routines
msort	tool/lemon.c	/^static char *msort($/;"	f	file:
multiSelect	sqlite3.c	/^static int multiSelect($/;"	f	file:
multiSelect	src/select.c	/^static int multiSelect($/;"	f	file:
multiSelect	tsrc/select.c	/^static int multiSelect($/;"	f	file:
multiSelectCollSeq	sqlite3.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectCollSeq	src/select.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectCollSeq	tsrc/select.c	/^static CollSeq *multiSelectCollSeq(Parse *pParse, Select *p, int iCol){$/;"	f	file:
multiSelectOrderBy	sqlite3.c	/^static int multiSelectOrderBy($/;"	f	file:
multiSelectOrderBy	src/select.c	/^static int multiSelectOrderBy($/;"	f	file:
multiSelectOrderBy	tsrc/select.c	/^static int multiSelectOrderBy($/;"	f	file:
multiSelectOrderByKeyInfo	sqlite3.c	/^static KeyInfo *multiSelectOrderByKeyInfo(Parse *pParse, Select *p, int nExtra){$/;"	f	file:
multiSelectOrderByKeyInfo	src/select.c	/^static KeyInfo *multiSelectOrderByKeyInfo(Parse *pParse, Select *p, int nExtra){$/;"	f	file:
multiSelectOrderByKeyInfo	tsrc/select.c	/^static KeyInfo *multiSelectOrderByKeyInfo(Parse *pParse, Select *p, int nExtra){$/;"	f	file:
multiSelectValues	sqlite3.c	/^static int multiSelectValues($/;"	f	file:
multiSelectValues	src/select.c	/^static int multiSelectValues($/;"	f	file:
multiSelectValues	tsrc/select.c	/^static int multiSelectValues($/;"	f	file:
multiplexAccess	src/test_multiplex.c	/^static int multiplexAccess(sqlite3_vfs *a, const char *b, int c, int *d){$/;"	f	file:
multiplexCheckReservedLock	src/test_multiplex.c	/^static int multiplexCheckReservedLock(sqlite3_file *pConn, int *pResOut){$/;"	f	file:
multiplexClose	src/test_multiplex.c	/^static int multiplexClose(sqlite3_file *pConn){$/;"	f	file:
multiplexConn	src/test_multiplex.c	/^struct multiplexConn {$/;"	s	file:
multiplexConn	src/test_multiplex.c	/^typedef struct multiplexConn multiplexConn;$/;"	t	typeref:struct:multiplexConn	file:
multiplexControlFunc	src/test_multiplex.c	/^static void multiplexControlFunc($/;"	f	file:
multiplexCurrentTime	src/test_multiplex.c	/^static int multiplexCurrentTime(sqlite3_vfs *a, double *b){$/;"	f	file:
multiplexCurrentTimeInt64	src/test_multiplex.c	/^static int multiplexCurrentTimeInt64(sqlite3_vfs *a, sqlite3_int64 *b){$/;"	f	file:
multiplexDelete	src/test_multiplex.c	/^static int multiplexDelete($/;"	f	file:
multiplexDeviceCharacteristics	src/test_multiplex.c	/^static int multiplexDeviceCharacteristics(sqlite3_file *pConn){$/;"	f	file:
multiplexDlClose	src/test_multiplex.c	/^static void multiplexDlClose(sqlite3_vfs *a, void *b){$/;"	f	file:
multiplexDlError	src/test_multiplex.c	/^static void multiplexDlError(sqlite3_vfs *a, int b, char *c){$/;"	f	file:
multiplexDlOpen	src/test_multiplex.c	/^static void *multiplexDlOpen(sqlite3_vfs *a, const char *b){$/;"	f	file:
multiplexDlSym	src/test_multiplex.c	/^static void (*multiplexDlSym(sqlite3_vfs *a, void *b, const char *c))(void){$/;"	f	file:
multiplexEnter	src/test_multiplex.c	/^static void multiplexEnter(void){ sqlite3_mutex_enter(gMultiplex.pMutex); }$/;"	f	file:
multiplexFileControl	src/test_multiplex.c	/^static int multiplexFileControl(sqlite3_file *pConn, int op, void *pArg){$/;"	f	file:
multiplexFileSize	src/test_multiplex.c	/^static int multiplexFileSize(sqlite3_file *pConn, sqlite3_int64 *pSize){$/;"	f	file:
multiplexFilename	src/test_multiplex.c	/^static void multiplexFilename($/;"	f	file:
multiplexFreeComponents	src/test_multiplex.c	/^static void multiplexFreeComponents(multiplexGroup *pGroup){$/;"	f	file:
multiplexFullPathname	src/test_multiplex.c	/^static int multiplexFullPathname(sqlite3_vfs *a, const char *b, int c, char *d){$/;"	f	file:
multiplexFuncInit	src/test_multiplex.c	/^static int multiplexFuncInit($/;"	f	file:
multiplexGetLastError	src/test_multiplex.c	/^static int multiplexGetLastError(sqlite3_vfs *a, int b, char *c){$/;"	f	file:
multiplexGroup	src/test_multiplex.c	/^struct multiplexGroup {$/;"	s	file:
multiplexGroup	src/test_multiplex.c	/^typedef struct multiplexGroup multiplexGroup;$/;"	t	typeref:struct:multiplexGroup	file:
multiplexLeave	src/test_multiplex.c	/^static void multiplexLeave(void){ sqlite3_mutex_leave(gMultiplex.pMutex); }$/;"	f	file:
multiplexLock	src/test_multiplex.c	/^static int multiplexLock(sqlite3_file *pConn, int lock){$/;"	f	file:
multiplexOpen	src/test_multiplex.c	/^static int multiplexOpen($/;"	f	file:
multiplexRandomness	src/test_multiplex.c	/^static int multiplexRandomness(sqlite3_vfs *a, int b, char *c){$/;"	f	file:
multiplexRead	src/test_multiplex.c	/^static int multiplexRead($/;"	f	file:
multiplexReal	src/test_multiplex.c	/^  struct multiplexReal {           \/* For each chunk *\/$/;"	s	struct:multiplexGroup	file:
multiplexSectorSize	src/test_multiplex.c	/^static int multiplexSectorSize(sqlite3_file *pConn){$/;"	f	file:
multiplexShmBarrier	src/test_multiplex.c	/^static void multiplexShmBarrier(sqlite3_file *pConn){$/;"	f	file:
multiplexShmLock	src/test_multiplex.c	/^static int multiplexShmLock($/;"	f	file:
multiplexShmMap	src/test_multiplex.c	/^static int multiplexShmMap($/;"	f	file:
multiplexShmUnmap	src/test_multiplex.c	/^static int multiplexShmUnmap(sqlite3_file *pConn, int deleteFlag){$/;"	f	file:
multiplexSleep	src/test_multiplex.c	/^static int multiplexSleep(sqlite3_vfs *a, int b){$/;"	f	file:
multiplexStrlen30	src/test_multiplex.c	/^static int multiplexStrlen30(const char *z){$/;"	f	file:
multiplexSubClose	src/test_multiplex.c	/^static void multiplexSubClose($/;"	f	file:
multiplexSubFilename	src/test_multiplex.c	/^static int multiplexSubFilename(multiplexGroup *pGroup, int iChunk){$/;"	f	file:
multiplexSubOpen	src/test_multiplex.c	/^static sqlite3_file *multiplexSubOpen($/;"	f	file:
multiplexSubSize	src/test_multiplex.c	/^static sqlite3_int64 multiplexSubSize($/;"	f	file:
multiplexSync	src/test_multiplex.c	/^static int multiplexSync(sqlite3_file *pConn, int flags){$/;"	f	file:
multiplexTruncate	src/test_multiplex.c	/^static int multiplexTruncate(sqlite3_file *pConn, sqlite3_int64 size){$/;"	f	file:
multiplexUnlock	src/test_multiplex.c	/^static int multiplexUnlock(sqlite3_file *pConn, int lock){$/;"	f	file:
multiplexWrite	src/test_multiplex.c	/^static int multiplexWrite($/;"	f	file:
mutex	ext/rbu/sqlite3rbu.c	/^  sqlite3_mutex *mutex;           \/* Mutex to protect pMain *\/$/;"	m	struct:rbu_vfs	file:
mutex	sqlite3.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	sqlite3.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;           \/* Mutex to protect pMain *\/$/;"	m	struct:rbu_vfs	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	sqlite3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon89	file:
mutex	sqlite3.c	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config	file:
mutex	src/btreeInt.h	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared
mutex	src/malloc.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	src/mem2.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon63	file:
mutex	src/mem3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	src/mem5.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	src/mutex_unix.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/mutex_w32.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	src/os_unix.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	src/os_win.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	src/pcache1.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	src/pcache1.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	src/sqliteInt.h	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3
mutex	src/sqliteInt.h	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config
mutex	src/test_init.c	/^  sqlite3_mutex_methods   mutex;$/;"	m	struct:Wrapped	file:
mutex	src/test_sqllog.c	/^  sqlite3_mutex *mutex;           \/* Recursive mutex *\/$/;"	m	struct:SLGlobal	file:
mutex	src/test_thread.c	/^  pthread_mutex_t mutex;             \/* Mutex to protect structure *\/$/;"	m	struct:UnlockNotification	file:
mutex	tsrc/btreeInt.h	/^  sqlite3_mutex *mutex; \/* Non-recursive mutex required to access this object *\/$/;"	m	struct:BtShared
mutex	tsrc/malloc.c	/^  sqlite3_mutex *mutex;         \/* Mutex to serialize access *\/$/;"	m	struct:Mem0Global	file:
mutex	tsrc/mem2.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:__anon30	file:
mutex	tsrc/mem3.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem3Global	file:
mutex	tsrc/mem5.c	/^  sqlite3_mutex *mutex;$/;"	m	struct:Mem5Global	file:
mutex	tsrc/mutex_unix.c	/^  pthread_mutex_t mutex;     \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	tsrc/mutex_w32.c	/^  CRITICAL_SECTION mutex;    \/* Mutex controlling the lock *\/$/;"	m	struct:sqlite3_mutex	file:
mutex	tsrc/os_unix.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:unixShmNode	file:
mutex	tsrc/os_win.c	/^  sqlite3_mutex *mutex;      \/* Mutex to access this object *\/$/;"	m	struct:winShmNode	file:
mutex	tsrc/pcache1.c	/^  sqlite3_mutex *mutex;          \/* MUTEX_STATIC_LRU or NULL *\/$/;"	m	struct:PGroup	file:
mutex	tsrc/pcache1.c	/^  sqlite3_mutex *mutex;          \/* Mutex for accessing the following: *\/$/;"	m	struct:PCacheGlobal	file:
mutex	tsrc/sqlite3rbu.c	/^  sqlite3_mutex *mutex;           \/* Mutex to protect pMain *\/$/;"	m	struct:rbu_vfs	file:
mutex	tsrc/sqliteInt.h	/^  sqlite3_mutex *mutex;         \/* Connection mutex *\/$/;"	m	struct:sqlite3
mutex	tsrc/sqliteInt.h	/^  sqlite3_mutex_methods mutex;      \/* Low-level mutex interface *\/$/;"	m	struct:Sqlite3Config
mutexIsInit	sqlite3.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutexIsInit	src/mutex.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutexIsInit	tsrc/mutex.c	/^static SQLITE_WSD int mutexIsInit = 0;$/;"	v	file:
mutex_alloc	sqlite3.c	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines	file:
mutex_alloc	sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_alloc	src/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_alloc	tsrc/sqlite3ext.h	/^  sqlite3_mutex *(*mutex_alloc)(int);$/;"	m	struct:sqlite3_api_routines
mutex_enter	sqlite3.c	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_enter	sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_enter	src/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_enter	tsrc/sqlite3ext.h	/^  void (*mutex_enter)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_fail	src/test_init.c	/^  int mutex_fail;              \/* True to fail mutex subsystem inialization *\/$/;"	m	struct:Wrapped	file:
mutex_free	sqlite3.c	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_free	sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_free	src/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_free	tsrc/sqlite3ext.h	/^  void (*mutex_free)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_held	ext/async/sqlite3async.c	254;"	d	file:
mutex_held	ext/async/sqlite3async.c	320;"	d	file:
mutex_init	src/test_init.c	/^  int mutex_init;              \/* True if mutex subsystem is initalized *\/$/;"	m	struct:Wrapped	file:
mutex_leave	sqlite3.c	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_leave	sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_leave	src/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_leave	tsrc/sqlite3ext.h	/^  void (*mutex_leave)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	sqlite3.c	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines	file:
mutex_try	sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	src/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mutex_try	tsrc/sqlite3ext.h	/^  int (*mutex_try)(sqlite3_mutex*);$/;"	m	struct:sqlite3_api_routines
mx	ext/misc/regexp.c	/^  int mx;                  \/* EOF when i>=mx *\/$/;"	m	struct:ReInput	file:
mxAlloc	sqlite3.c	/^  u32  mxAlloc;        \/* Maximum allowed allocation.  0 for no malloc usage *\/$/;"	m	struct:StrAccum	file:
mxAlloc	src/sqliteInt.h	/^  u32  mxAlloc;        \/* Maximum allowed allocation.  0 for no malloc usage *\/$/;"	m	struct:StrAccum
mxAlloc	tsrc/sqliteInt.h	/^  u32  mxAlloc;        \/* Maximum allowed allocation.  0 for no malloc usage *\/$/;"	m	struct:StrAccum
mxArea	src/test_rtree.c	/^  double mxArea;$/;"	m	struct:Circle	file:
mxCurrent	sqlite3.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon89	file:
mxCurrent	src/mem2.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon63	file:
mxCurrent	tsrc/mem2.c	/^  int mxCurrent[NCSIZE];   \/* Highwater mark for nCurrent *\/$/;"	m	struct:__anon30	file:
mxErr	sqlite3.c	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk	file:
mxErr	src/btreeInt.h	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk
mxErr	tsrc/btreeInt.h	/^  int mxErr;        \/* Stop accumulating errors when this reaches zero *\/$/;"	m	struct:IntegrityCk
mxFrame	sqlite3.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxFrame	src/wal.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxFrame	tool/showwal.c	/^static int mxFrame = 0;         \/* Last frame *\/$/;"	v	file:
mxFrame	tsrc/wal.c	/^  u32 mxFrame;                    \/* Index of last valid frame in the WAL *\/$/;"	m	struct:WalIndexHdr	file:
mxKeysize	sqlite3.c	/^  int mxKeysize;                  \/* Largest serialized key seen so far *\/$/;"	m	struct:VdbeSorter	file:
mxKeysize	src/vdbesort.c	/^  int mxKeysize;                  \/* Largest serialized key seen so far *\/$/;"	m	struct:VdbeSorter	file:
mxKeysize	tsrc/vdbesort.c	/^  int mxKeysize;                  \/* Largest serialized key seen so far *\/$/;"	m	struct:VdbeSorter	file:
mxLevel	ext/rtree/rtree.c	/^  int mxLevel;                      \/* iLevel value for root of the tree *\/$/;"	m	struct:RtreeCursor	file:
mxLevel	ext/rtree/sqlite3rtree.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxLevel	sqlite3.c	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
mxLevel	sqlite3.c	/^  int mxLevel;                      \/* iLevel value for root of the tree *\/$/;"	m	struct:RtreeCursor	file:
mxLevel	sqlite3.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxLevel	tsrc/rtree.c	/^  int mxLevel;                      \/* iLevel value for root of the tree *\/$/;"	m	struct:RtreeCursor	file:
mxLevel	tsrc/sqlite3.h	/^  int mxLevel;                      \/* The largest iLevel value in the tree *\/$/;"	m	struct:sqlite3_rtree_query_info
mxLookahead	tool/lemon.c	/^  int mxLookahead;             \/* Maximum aLookahead[].lookahead *\/$/;"	m	struct:acttab	file:
mxMmap	sqlite3.c	/^  sqlite3_int64 mxMmap;             \/* Maximum value for szMmap *\/$/;"	m	struct:Sqlite3Config	file:
mxMmap	src/sqliteInt.h	/^  sqlite3_int64 mxMmap;             \/* Maximum value for szMmap *\/$/;"	m	struct:Sqlite3Config
mxMmap	tsrc/sqliteInt.h	/^  sqlite3_int64 mxMmap;             \/* Maximum value for szMmap *\/$/;"	m	struct:Sqlite3Config
mxOut	sqlite3.c	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside	file:
mxOut	src/sqliteInt.h	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside
mxOut	tsrc/sqliteInt.h	/^  int mxOut;              \/* Highwater mark for nOut *\/$/;"	m	struct:Lookaside
mxPage	tool/showdb.c	/^  int mxPage;                     \/* Last page number *\/$/;"	m	struct:GlobalData	file:
mxParserStack	sqlite3.c	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config	file:
mxParserStack	src/sqliteInt.h	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config
mxParserStack	tsrc/sqliteInt.h	/^  int mxParserStack;                \/* maximum depth of the parser stack *\/$/;"	m	struct:Sqlite3Config
mxPathname	sqlite3.c	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs	file:
mxPathname	sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPathname	tsrc/sqlite3.h	/^  int mxPathname;          \/* Maximum file pathname length *\/$/;"	m	struct:sqlite3_vfs
mxPgno	sqlite3.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPgno	src/pager.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPgno	tsrc/pager.c	/^  Pgno mxPgno;                \/* Maximum allowed size of the database *\/$/;"	m	struct:Pager	file:
mxPinned	sqlite3.c	/^  unsigned int mxPinned;         \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPinned	src/pcache1.c	/^  unsigned int mxPinned;         \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPinned	tsrc/pcache1.c	/^  unsigned int mxPinned;         \/* nMaxpage + 10 - nMinPage *\/$/;"	m	struct:PGroup	file:
mxPmaSize	sqlite3.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxPmaSize	src/vdbesort.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxPmaSize	tsrc/vdbesort.c	/^  int mxPmaSize;                  \/* Maximum PMA size, in bytes.  0==no limit *\/$/;"	m	struct:VdbeSorter	file:
mxQueue	ext/misc/fuzzer.c	/^  int mxQueue;               \/* Largest used index in aQueue[] *\/$/;"	m	struct:fuzzer_cursor	file:
mxReg	sqlite3.c	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo	file:
mxReg	src/sqliteInt.h	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo
mxReg	tsrc/sqliteInt.h	/^  int mnReg, mxReg;       \/* Range of registers allocated for aCol and aFunc *\/$/;"	m	struct:AggInfo
mxReq	sqlite3.c	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config	file:
mxReq	src/sqliteInt.h	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config
mxReq	tsrc/sqliteInt.h	/^  int mnReq, mxReq;                 \/* Min and max heap requests sizes *\/$/;"	m	struct:Sqlite3Config
mxSample	sqlite3.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat4Accum	file:
mxSample	src/analyze.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat4Accum	file:
mxSample	tsrc/analyze.c	/^  int mxSample;             \/* Maximum number of samples to accumulate *\/$/;"	m	struct:Stat4Accum	file:
mxSavepoint	ext/fts3/fts3Int.h	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table
mxSavepoint	sqlite3.c	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table	file:
mxSavepoint	tsrc/fts3Int.h	/^  int mxSavepoint;       \/* Largest valid xSavepoint integer *\/$/;"	m	struct:Fts3Table
mxStrlen	sqlite3.c	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config	file:
mxStrlen	src/sqliteInt.h	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config
mxStrlen	tsrc/sqliteInt.h	/^  int mxStrlen;                     \/* Maximum string length *\/$/;"	m	struct:Sqlite3Config
mxSz	sqlite3.c	/^  int mxSz;                       \/* Maximum bytes of data to store *\/$/;"	m	struct:IncrMerger	file:
mxSz	src/vdbesort.c	/^  int mxSz;                       \/* Maximum bytes of data to store *\/$/;"	m	struct:IncrMerger	file:
mxSz	tsrc/vdbesort.c	/^  int mxSz;                       \/* Maximum bytes of data to store *\/$/;"	m	struct:IncrMerger	file:
mxValue	ext/misc/series.c	/^  sqlite3_int64 mxValue;     \/* Maximum value ("stop") *\/$/;"	m	struct:series_cursor	file:
mxValue	ext/misc/wholenumber.c	/^  sqlite3_int64 mxValue;     \/* Maximum value *\/$/;"	m	struct:wholenumber_cursor	file:
mxValue	sqlite3.c	/^  sqlite3StatValueType mxValue[10];   \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxValue	src/status.c	/^  sqlite3StatValueType mxValue[10];   \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxValue	tsrc/status.c	/^  sqlite3StatValueType mxValue[10];   \/* Maximum value *\/$/;"	m	struct:sqlite3StatType	file:
mxWalSize	sqlite3.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
mxWalSize	src/wal.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
mxWalSize	tsrc/wal.c	/^  i64 mxWalSize;             \/* Truncate WAL to this size upon reset *\/$/;"	m	struct:Wal	file:
n	ext/fts1/fts1.c	/^  short int n;         \/* Length of the token text in bytes. *\/$/;"	m	struct:Token	file:
n	ext/fts2/fts2.c	/^  short int n;         \/* Length of the token text in bytes. *\/$/;"	m	struct:Token	file:
n	ext/fts3/fts3Int.h	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken
n	ext/fts3/fts3_snippet.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	ext/fts3/fts3_test.c	/^  int n;                          \/* Length of token in bytes *\/$/;"	m	struct:NearToken	file:
n	ext/fts3/fts3_write.c	/^  int n;                          \/* Number of valid bytes of data in a[] *\/$/;"	m	struct:Blob	file:
n	ext/fts5/fts5Int.h	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader
n	ext/fts5/fts5Int.h	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token
n	ext/fts5/fts5Int.h	/^  int n;$/;"	m	struct:Fts5Buffer
n	ext/fts5/fts5_expr.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	ext/misc/csv.c	/^  int n;                 \/* Number of bytes in z *\/$/;"	m	struct:CsvReader	file:
n	ext/misc/fuzzer.c	/^  fuzzer_len n;              \/* Apply pRule at this character offset *\/$/;"	m	struct:fuzzer_stem	file:
n	ext/misc/json1.c	/^  u32 n;                 \/* Bytes of content, or number of sub-nodes *\/$/;"	m	struct:JsonNode	file:
n	ext/misc/spellfix.c	/^  int n;                   \/* Number of characters in the FROM string *\/$/;"	m	struct:EditDist3FromString	file:
n	ext/misc/spellfix.c	/^  int n;                   \/* Number of characters in the TO string *\/$/;"	m	struct:EditDist3ToString	file:
n	ext/session/test_session.c	/^  int n;$/;"	m	struct:TestSessionsBlob	file:
n	fts5.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	fts5.c	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader	file:
n	fts5.c	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token	file:
n	fts5.c	/^  int n;$/;"	m	struct:Fts5Buffer	file:
n	mptest/mptest.c	/^  int n;           \/* Slots of z[] used *\/$/;"	m	struct:String	file:
n	shell.c	/^  int n;              \/* Number of bytes in z *\/$/;"	m	struct:ImportCtx	file:
n	sqlite3.c	/^    int n;                                     \/* A counter *\/$/;"	m	union:Walker::__anon87	file:
n	sqlite3.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	sqlite3.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	sqlite3.c	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken	file:
n	sqlite3.c	/^  int n;                          \/* Number of valid bytes of data in a[] *\/$/;"	m	struct:Blob	file:
n	sqlite3.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	sqlite3.c	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader	file:
n	sqlite3.c	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token	file:
n	sqlite3.c	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet	file:
n	sqlite3.c	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem	file:
n	sqlite3.c	/^  int n;            \/* Size of record in bytes *\/$/;"	m	struct:IndexSample	file:
n	sqlite3.c	/^  int n;$/;"	m	struct:Fts5Buffer	file:
n	sqlite3.c	/^  u16 n;                      \/* Number of valid a[] entries *\/$/;"	m	struct:WhereOrSet	file:
n	sqlite3.c	/^  u32 n;                 \/* Bytes of content, or number of sub-nodes *\/$/;"	m	struct:JsonNode	file:
n	sqlite3.c	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token	file:
n	src/func.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	src/shell.c	/^  int n;              \/* Number of bytes in z *\/$/;"	m	struct:ImportCtx	file:
n	src/sqliteInt.h	/^    int n;                                     \/* A counter *\/$/;"	m	union:Walker::__anon61
n	src/sqliteInt.h	/^  int n;            \/* Size of record in bytes *\/$/;"	m	struct:IndexSample
n	src/sqliteInt.h	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token
n	src/test1.c	/^  int n;$/;"	m	struct:t1CountCtx	file:
n	src/test_intarray.c	/^  int n;                    \/* Number of elements in the array *\/$/;"	m	struct:sqlite3_intarray	file:
n	src/vdbeInt.h	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem
n	src/whereInt.h	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet
n	src/whereInt.h	/^  u16 n;                      \/* Number of valid a[] entries *\/$/;"	m	struct:WhereOrSet
n	tsrc/fts1.c	/^  short int n;         \/* Length of the token text in bytes. *\/$/;"	m	struct:Token	file:
n	tsrc/fts2.c	/^  short int n;         \/* Length of the token text in bytes. *\/$/;"	m	struct:Token	file:
n	tsrc/fts3Int.h	/^  int n;                          \/* Number of bytes in buffer z *\/$/;"	m	struct:Fts3PhraseToken
n	tsrc/fts3_snippet.c	/^  int n;                          \/* Length of z in bytes (excl. nul-term) *\/$/;"	m	struct:StrBuffer	file:
n	tsrc/fts3_write.c	/^  int n;                          \/* Number of valid bytes of data in a[] *\/$/;"	m	struct:Blob	file:
n	tsrc/fts5.c	/^  int n;                          \/* Size of buffer a[] in bytes *\/$/;"	m	struct:Fts5LookaheadReader	file:
n	tsrc/fts5.c	/^  int n;                          \/* Size of buffer at a[] in bytes *\/$/;"	m	struct:Fts5PoslistReader	file:
n	tsrc/fts5.c	/^  int n;                          \/* Size of buffer p in bytes *\/$/;"	m	struct:Fts5Token	file:
n	tsrc/fts5.c	/^  int n;$/;"	m	struct:Fts5Buffer	file:
n	tsrc/func.c	/^  i64 n;$/;"	m	struct:CountCtx	file:
n	tsrc/json1.c	/^  u32 n;                 \/* Bytes of content, or number of sub-nodes *\/$/;"	m	struct:JsonNode	file:
n	tsrc/shell.c	/^  int n;              \/* Number of bytes in z *\/$/;"	m	struct:ImportCtx	file:
n	tsrc/sqliteInt.h	/^    int n;                                     \/* A counter *\/$/;"	m	union:Walker::__anon29
n	tsrc/sqliteInt.h	/^  int n;            \/* Size of record in bytes *\/$/;"	m	struct:IndexSample
n	tsrc/sqliteInt.h	/^  unsigned int n;    \/* Number of characters in this token *\/$/;"	m	struct:Token
n	tsrc/vdbeInt.h	/^  int n;              \/* Number of characters in string value, excluding '\\0' *\/$/;"	m	struct:Mem
n	tsrc/whereInt.h	/^  int n;                        \/* Number of assigned cursor values *\/$/;"	m	struct:WhereMaskSet
n	tsrc/whereInt.h	/^  u16 n;                      \/* Number of valid a[] entries *\/$/;"	m	struct:WhereOrSet
n90pct	sqlite3.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
n90pct	src/pcache1.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
n90pct	tsrc/pcache1.c	/^  unsigned int n90pct;                \/* nMax*9\/10 *\/$/;"	m	struct:PCache1	file:
nAccumulator	sqlite3.c	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo	file:
nAccumulator	src/sqliteInt.h	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo
nAccumulator	tsrc/sqliteInt.h	/^  int nAccumulator;       \/* Number of columns that show through to the output.$/;"	m	struct:AggInfo
nAction	tool/lemon.c	/^  int nAction;                 \/* Number of used slots in aAction[] *\/$/;"	m	struct:acttab	file:
nAction	tool/lemon.c	/^  int nAction;         \/* Number of actions *\/$/;"	m	struct:axset	file:
nActionAlloc	tool/lemon.c	/^  int nActionAlloc;            \/* Slots allocated for aAction[] *\/$/;"	m	struct:acttab	file:
nAdvance	ext/fts3/fts3Int.h	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader
nAdvance	sqlite3.c	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader	file:
nAdvance	tsrc/fts3Int.h	/^  int nAdvance;                   \/* How many seg-readers to advance *\/$/;"	m	struct:Fts3MultiSegReader
nAlias	sqlite3.c	/^  int nAlias;               \/* Number of aliased result set columns *\/$/;"	m	struct:Parse	file:
nAlias	src/sqliteInt.h	/^  int nAlias;               \/* Number of aliased result set columns *\/$/;"	m	struct:Parse
nAlias	tsrc/sqliteInt.h	/^  int nAlias;               \/* Number of aliased result set columns *\/$/;"	m	struct:Parse
nAll	ext/fts3/fts3Int.h	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist
nAll	sqlite3.c	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist	file:
nAll	tsrc/fts3Int.h	/^  int nAll;                      \/* Size of a[] in bytes *\/$/;"	m	struct:Fts3Doclist
nAlloc	ext/fts1/fts1.c	/^  int nAlloc;     \/* Space allocated for aMatch[] *\/$/;"	m	struct:Snippet	file:
nAlloc	ext/fts2/fts2.c	/^  int nAlloc;     \/* Space allocated for aMatch[] *\/$/;"	m	struct:Snippet	file:
nAlloc	ext/fts3/fts3_snippet.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	ext/fts3/fts3_unicode.c	/^  int nAlloc;                     \/* space allocated at zToken *\/$/;"	m	struct:unicode_cursor	file:
nAlloc	ext/fts3/fts3_write.c	/^  int nAlloc;                     \/* Allocated size of a[] (nAlloc>=n) *\/$/;"	m	struct:Blob	file:
nAlloc	ext/fts5/fts5_hash.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	ext/misc/csv.c	/^  int nAlloc;            \/* Space allocated for z[] *\/$/;"	m	struct:CsvReader	file:
nAlloc	ext/misc/eval.c	/^  sqlite3_int64 nAlloc;  \/* Number of bytes allocated for z[] *\/$/;"	m	struct:EvalResult	file:
nAlloc	ext/misc/json1.c	/^  u32 nAlloc;        \/* Number of slots of aNode[] allocated *\/$/;"	m	struct:JsonParse	file:
nAlloc	ext/misc/json1.c	/^  u64 nAlloc;              \/* Bytes of storage available in zBuf[] *\/$/;"	m	struct:JsonString	file:
nAlloc	ext/misc/nextchar.c	/^  int nAlloc;                       \/* Space allocated to aResult *\/$/;"	m	struct:nextCharContext	file:
nAlloc	ext/misc/percentile.c	/^  unsigned nAlloc;     \/* Number of slots allocated for a[] *\/$/;"	m	struct:Percentile	file:
nAlloc	ext/misc/regexp.c	/^  unsigned nAlloc;            \/* Slots allocated for aOp[] and aArg[] *\/$/;"	m	struct:ReCompiled	file:
nAlloc	ext/misc/spellfix.c	/^  int nAlloc;                  \/* Number of allocated rows *\/$/;"	m	struct:spellfix1_cursor	file:
nAlloc	ext/session/sqlite3session.c	/^  int nAlloc;                     \/* Size of allocation containing aBuf *\/$/;"	m	struct:SessionBuffer	file:
nAlloc	fts5.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	mptest/mptest.c	/^  int nAlloc;      \/* Slots of z[] allocated *\/$/;"	m	struct:String	file:
nAlloc	shell.c	/^  int nAlloc;         \/* Space allocated for z[] *\/$/;"	m	struct:ImportCtx	file:
nAlloc	sqlite3.c	/^  int nAlloc;                     \/* Allocated size of a[] (nAlloc>=n) *\/$/;"	m	struct:Blob	file:
nAlloc	sqlite3.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	sqlite3.c	/^  int nAlloc;                     \/* Size of allocation containing aBuf *\/$/;"	m	struct:SessionBuffer	file:
nAlloc	sqlite3.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	sqlite3.c	/^  int nAlloc;                     \/* space allocated at zToken *\/$/;"	m	struct:unicode_cursor	file:
nAlloc	sqlite3.c	/^  int nAlloc;                 \/* Bytes of space at aAlloc *\/$/;"	m	struct:PmaReader	file:
nAlloc	sqlite3.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon89	file:
nAlloc	sqlite3.c	/^  u32  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum	file:
nAlloc	sqlite3.c	/^  u32 nAlloc;        \/* Number of slots of aNode[] allocated *\/$/;"	m	struct:JsonParse	file:
nAlloc	sqlite3.c	/^  u32 nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	sqlite3.c	/^  u32 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList	file:
nAlloc	sqlite3.c	/^  u64 nAlloc;              \/* Bytes of storage available in zBuf[] *\/$/;"	m	struct:JsonString	file:
nAlloc	sqlite3.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAlloc	src/mem2.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon63	file:
nAlloc	src/mem5.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAlloc	src/shell.c	/^  int nAlloc;         \/* Space allocated for z[] *\/$/;"	m	struct:ImportCtx	file:
nAlloc	src/sqliteInt.h	/^  u32  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum
nAlloc	src/sqliteInt.h	/^  u32 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList
nAlloc	src/table.c	/^  u32 nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	src/test1.c	/^  int nAlloc;  \/* Space allocated *\/$/;"	m	struct:dstr	file:
nAlloc	src/test_fs.c	/^  int nAlloc;$/;"	m	struct:fs_cursor	file:
nAlloc	src/test_onefile.c	/^  int nAlloc;$/;"	m	struct:tmp_file	file:
nAlloc	src/vdbesort.c	/^  int nAlloc;                 \/* Bytes of space at aAlloc *\/$/;"	m	struct:PmaReader	file:
nAlloc	test/threadtest1.c	/^  int nAlloc;         \/* Number of slots allocated for azElem[] *\/$/;"	m	struct:QueryResult	file:
nAlloc	tool/fuzzershell.c	/^  sqlite3_int64 nAlloc;  \/* Number of bytes allocated for z[] *\/$/;"	m	struct:EvalResult	file:
nAlloc	tool/sqldiff.c	/^  int nAlloc;     \/* Bytes allocated in z[] *\/$/;"	m	struct:Str	file:
nAlloc	tsrc/fts1.c	/^  int nAlloc;     \/* Space allocated for aMatch[] *\/$/;"	m	struct:Snippet	file:
nAlloc	tsrc/fts2.c	/^  int nAlloc;     \/* Space allocated for aMatch[] *\/$/;"	m	struct:Snippet	file:
nAlloc	tsrc/fts3_snippet.c	/^  int nAlloc;                     \/* Allocated size of buffer z in bytes *\/$/;"	m	struct:StrBuffer	file:
nAlloc	tsrc/fts3_unicode.c	/^  int nAlloc;                     \/* space allocated at zToken *\/$/;"	m	struct:unicode_cursor	file:
nAlloc	tsrc/fts3_write.c	/^  int nAlloc;                     \/* Allocated size of a[] (nAlloc>=n) *\/$/;"	m	struct:Blob	file:
nAlloc	tsrc/fts5.c	/^  int nAlloc;                     \/* Total size of allocation *\/$/;"	m	struct:Fts5HashEntry	file:
nAlloc	tsrc/json1.c	/^  u32 nAlloc;        \/* Number of slots of aNode[] allocated *\/$/;"	m	struct:JsonParse	file:
nAlloc	tsrc/json1.c	/^  u64 nAlloc;              \/* Bytes of storage available in zBuf[] *\/$/;"	m	struct:JsonString	file:
nAlloc	tsrc/mem2.c	/^  int nAlloc[NCSIZE];      \/* Total number of allocations *\/$/;"	m	struct:__anon30	file:
nAlloc	tsrc/mem5.c	/^  u64 nAlloc;         \/* Total number of calls to malloc *\/$/;"	m	struct:Mem5Global	file:
nAlloc	tsrc/shell.c	/^  int nAlloc;         \/* Space allocated for z[] *\/$/;"	m	struct:ImportCtx	file:
nAlloc	tsrc/sqlite3session.c	/^  int nAlloc;                     \/* Size of allocation containing aBuf *\/$/;"	m	struct:SessionBuffer	file:
nAlloc	tsrc/sqliteInt.h	/^  u32  nAlloc;         \/* Amount of space allocated in zText *\/$/;"	m	struct:StrAccum
nAlloc	tsrc/sqliteInt.h	/^  u32 nAlloc;      \/* Number of entries allocated in a[] below *\/$/;"	m	struct:SrcList
nAlloc	tsrc/table.c	/^  u32 nAlloc;        \/* Slots allocated for azResult[] *\/$/;"	m	struct:TabResult	file:
nAlloc	tsrc/vdbesort.c	/^  int nAlloc;                 \/* Bytes of space at aAlloc *\/$/;"	m	struct:PmaReader	file:
nAllocated	ext/fts1/fts1_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	ext/fts2/fts2_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	ext/fts3/fts3_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	sqlite3.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	tsrc/fts1_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	tsrc/fts2_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nAllocated	tsrc/fts3_porter.c	/^  int nAllocated;              \/* space allocated to zToken buffer *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nArg	sqlite3.c	/^  i8 nArg;             \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef	file:
nArg	sqlite3.c	/^  int nArg;                \/* Total number of arguments *\/$/;"	m	struct:PrintfArguments	file:
nArg	src/sqliteInt.h	/^  i8 nArg;             \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef
nArg	src/sqliteInt.h	/^  int nArg;                \/* Total number of arguments *\/$/;"	m	struct:PrintfArguments
nArg	tsrc/sqliteInt.h	/^  i8 nArg;             \/* Number of arguments.  -1 means unlimited *\/$/;"	m	struct:FuncDef
nArg	tsrc/sqliteInt.h	/^  int nArg;                \/* Total number of arguments *\/$/;"	m	struct:PrintfArguments
nAuthPW	sqlite3.c	/^  int nAuthPW;                  \/* Size of the zAuthPW in bytes *\/$/;"	m	struct:sqlite3_userauth	file:
nAuthPW	src/sqliteInt.h	/^  int nAuthPW;                  \/* Size of the zAuthPW in bytes *\/$/;"	m	struct:sqlite3_userauth
nAuthPW	tsrc/sqliteInt.h	/^  int nAuthPW;                  \/* Size of the zAuthPW in bytes *\/$/;"	m	struct:sqlite3_userauth
nAutoincrmerge	ext/fts3/fts3Int.h	/^  int nAutoincrmerge;             \/* Value configured by 'automerge' *\/$/;"	m	struct:Fts3Table
nAutoincrmerge	sqlite3.c	/^  int nAutoincrmerge;             \/* Value configured by 'automerge' *\/$/;"	m	struct:Fts3Table	file:
nAutoincrmerge	tsrc/fts3Int.h	/^  int nAutoincrmerge;             \/* Value configured by 'automerge' *\/$/;"	m	struct:Fts3Table
nAutomerge	ext/fts5/fts5Int.h	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config
nAutomerge	fts5.c	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config	file:
nAutomerge	sqlite3.c	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config	file:
nAutomerge	tsrc/fts5.c	/^  int nAutomerge;                 \/* 'automerge' setting *\/$/;"	m	struct:Fts5Config	file:
nBackfill	sqlite3.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBackfill	src/wal.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBackfill	tsrc/wal.c	/^  u32 nBackfill;                  \/* Number of WAL frames backfilled into DB *\/$/;"	m	struct:WalCkptInfo	file:
nBackfillAttempted	sqlite3.c	/^  u32 nBackfillAttempted;         \/* WAL frames perhaps written, or maybe not *\/$/;"	m	struct:WalCkptInfo	file:
nBackfillAttempted	src/wal.c	/^  u32 nBackfillAttempted;         \/* WAL frames perhaps written, or maybe not *\/$/;"	m	struct:WalCkptInfo	file:
nBackfillAttempted	tsrc/wal.c	/^  u32 nBackfillAttempted;         \/* WAL frames perhaps written, or maybe not *\/$/;"	m	struct:WalCkptInfo	file:
nBacktrace	sqlite3.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	sqlite3.c	/^  int nBacktrace;$/;"	m	struct:__anon89	file:
nBacktrace	src/mem2.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	src/mem2.c	/^  int nBacktrace;$/;"	m	struct:__anon63	file:
nBacktrace	tsrc/mem2.c	/^  char nBacktrace;                    \/* Number of backtraces on this alloc *\/$/;"	m	struct:MemBlockHdr	file:
nBacktrace	tsrc/mem2.c	/^  int nBacktrace;$/;"	m	struct:__anon30	file:
nBacktraceSlots	sqlite3.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBacktraceSlots	src/mem2.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBacktraceSlots	tsrc/mem2.c	/^  char nBacktraceSlots;               \/* Available backtrace slots *\/$/;"	m	struct:MemBlockHdr	file:
nBackup	sqlite3.c	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree	file:
nBackup	src/btreeInt.h	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree
nBackup	tsrc/btreeInt.h	/^  int nBackup;       \/* Number of backup operations reading this btree *\/$/;"	m	struct:Btree
nBasis	ext/misc/fuzzer.c	/^  fuzzer_len nBasis;         \/* Length of the zBasis string *\/$/;"	m	struct:fuzzer_stem	file:
nBenign	src/test_malloc.c	/^  int nBenign;            \/* Number of benign failures seen since last config *\/$/;"	m	struct:MemFault	file:
nBlob	src/test_onefile.c	/^  int nBlob;                  \/* Total size of allocated blob *\/$/;"	m	struct:fs_real_file	file:
nBlock	sqlite3.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBlock	src/mem5.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBlock	tsrc/mem5.c	/^  int nBlock;      \/* Number of szAtom sized blocks in zPool *\/$/;"	m	struct:Mem5Global	file:
nBuf	ext/misc/amatch.c	/^  int nBuf;                  \/* Space allocated for zBuf *\/$/;"	m	struct:amatch_cursor	file:
nBuf	ext/misc/fuzzer.c	/^  int nBuf;                  \/* Bytes allocated for zBuf *\/$/;"	m	struct:fuzzer_cursor	file:
nBuf	ext/session/sqlite3session.c	/^  int nBuf;                       \/* Size of buffer aBuf *\/$/;"	m	struct:SessionBuffer	file:
nBuf	sqlite3.c	/^  int nBuf;                       \/* Size of buffer aBuf *\/$/;"	m	struct:SessionBuffer	file:
nBuf	src/test6.c	/^  int nBuf;                    \/* Number of bytes written *\/$/;"	m	struct:WriteBuffer	file:
nBuf	src/test_fs.c	/^  int nBuf;$/;"	m	struct:fs_cursor	file:
nBuf	src/test_osinst.c	/^  int nBuf;                       \/* Number of valid bytes in aBuf[] *\/$/;"	m	struct:VfslogVfs	file:
nBuf	tsrc/sqlite3session.c	/^  int nBuf;                       \/* Size of buffer aBuf *\/$/;"	m	struct:SessionBuffer	file:
nBuffer	ext/fts2/fts2_icu.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBuffer	ext/fts3/fts3Int.h	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nBuffer	ext/fts3/fts3_icu.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBuffer	ext/fts3/fts3_test.c	/^  int nBuffer;                 \/* Number of bytes allocated at pToken *\/$/;"	m	struct:test_tokenizer_cursor	file:
nBuffer	sqlite3.c	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nBuffer	sqlite3.c	/^  int nBuffer;                    \/* Size of write buffer in bytes *\/$/;"	m	struct:PmaWriter	file:
nBuffer	sqlite3.c	/^  int nBuffer;                \/* Size of read buffer in bytes *\/$/;"	m	struct:PmaReader	file:
nBuffer	sqlite3.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBuffer	src/test_demovfs.c	/^  int nBuffer;                    \/* Valid bytes of data in zBuffer *\/$/;"	m	struct:DemoFile	file:
nBuffer	src/vdbesort.c	/^  int nBuffer;                    \/* Size of write buffer in bytes *\/$/;"	m	struct:PmaWriter	file:
nBuffer	src/vdbesort.c	/^  int nBuffer;                \/* Size of read buffer in bytes *\/$/;"	m	struct:PmaReader	file:
nBuffer	tsrc/fts2_icu.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBuffer	tsrc/fts3Int.h	/^  int nBuffer;                    \/* Allocated size of aBuffer[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nBuffer	tsrc/fts3_icu.c	/^  int nBuffer;$/;"	m	struct:IcuCursor	file:
nBuffer	tsrc/vdbesort.c	/^  int nBuffer;                    \/* Size of write buffer in bytes *\/$/;"	m	struct:PmaWriter	file:
nBuffer	tsrc/vdbesort.c	/^  int nBuffer;                \/* Size of read buffer in bytes *\/$/;"	m	struct:PmaReader	file:
nBusy	ext/rtree/rtree.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	sqlite3.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	sqlite3.c	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler	file:
nBusy	src/sqliteInt.h	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler
nBusy	src/test_superlock.c	/^  int nBusy;                      \/* Number of times xBusy has been invoked *\/$/;"	m	struct:SuperlockBusy	file:
nBusy	tsrc/rtree.c	/^  int nBusy;                  \/* Current number of users of this structure *\/$/;"	m	struct:Rtree	file:
nBusy	tsrc/sqliteInt.h	/^  int nBusy;                 \/* Incremented with each busy call *\/$/;"	m	struct:BusyHandler
nByte	ext/async/sqlite3async.c	/^  int nByte;          \/* See above *\/$/;"	m	struct:AsyncWrite	file:
nByte	ext/fts1/fts1.c	/^    short int nByte;     \/* Number of bytes in the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
nByte	ext/fts2/fts2.c	/^    short int nByte;     \/* Number of bytes in the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
nByte	ext/misc/spellfix.c	/^  int nByte;               \/* Number of bytes in this character *\/$/;"	m	struct:EditDist3From	file:
nByte	ext/misc/spellfix.c	/^  int nByte;               \/* Number of bytes in this character *\/$/;"	m	struct:EditDist3To	file:
nByte	sqlite3.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nByte	src/test_malloc.c	/^  int nByte;$/;"	m	struct:MallocLog	file:
nByte	src/test_osinst.c	/^  sqlite3_int64 nByte;            \/* Size of file in bytes *\/$/;"	m	struct:VfslogVtab	file:
nByte	src/test_server.c	/^  int nByte;                   \/* Size of the zIn parameter for prepare() *\/$/;"	m	struct:SqlMessage	file:
nByte	src/vdbeblob.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nByte	tsrc/fts1.c	/^    short int nByte;     \/* Number of bytes in the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
nByte	tsrc/fts2.c	/^    short int nByte;     \/* Number of bytes in the term *\/$/;"	m	struct:Snippet::snippetMatch	file:
nByte	tsrc/vdbeblob.c	/^  int nByte;              \/* Size of open blob, in bytes *\/$/;"	m	struct:Incrblob	file:
nBytes	ext/fts1/fts1_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	ext/fts1/simple_tokenizer.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	ext/fts2/fts2_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	ext/fts3/fts3_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	sqlite3.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	tsrc/fts1_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	tsrc/fts2_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytes	tsrc/fts3_tokenizer1.c	/^  int nBytes;                  \/* size of the input *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nBytesPerCell	ext/rtree/rtree.c	/^  u8 nBytesPerCell;           \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nBytesPerCell	sqlite3.c	/^  u8 nBytesPerCell;           \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nBytesPerCell	tsrc/rtree.c	/^  u8 nBytesPerCell;           \/* Bytes consumed per cell *\/$/;"	m	struct:Rtree	file:
nCall	src/test_malloc.c	/^  int nCall;$/;"	m	struct:MallocLog	file:
nCapacity	ext/fts2/fts2.c	/^  int nCapacity;        \/* Size of pData buffer. *\/$/;"	m	struct:DataBuffer	file:
nCapacity	tsrc/fts2.c	/^  int nCapacity;        \/* Size of pData buffer. *\/$/;"	m	struct:DataBuffer	file:
nCell	sqlite3.c	/^  int nCell;                      \/* Number of cells on page *\/$/;"	m	struct:StatPage	file:
nCell	sqlite3.c	/^  int nCell;                      \/* Value of 'ncell' column *\/$/;"	m	struct:StatCursor	file:
nCell	sqlite3.c	/^  int nCell;              \/* Number of cells in apCell[] *\/$/;"	m	struct:CellArray	file:
nCell	sqlite3.c	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage	file:
nCell	src/btree.c	/^  int nCell;              \/* Number of cells in apCell[] *\/$/;"	m	struct:CellArray	file:
nCell	src/btreeInt.h	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage
nCell	src/dbstat.c	/^  int nCell;                      \/* Number of cells on page *\/$/;"	m	struct:StatPage	file:
nCell	src/dbstat.c	/^  int nCell;                      \/* Value of 'ncell' column *\/$/;"	m	struct:StatCursor	file:
nCell	tsrc/btree.c	/^  int nCell;              \/* Number of cells in apCell[] *\/$/;"	m	struct:CellArray	file:
nCell	tsrc/btreeInt.h	/^  u16 nCell;           \/* Number of cells on this page, local and ovfl *\/$/;"	m	struct:MemPage
nCell	tsrc/dbstat.c	/^  int nCell;                      \/* Number of cells on page *\/$/;"	m	struct:StatPage	file:
nCell	tsrc/dbstat.c	/^  int nCell;                      \/* Value of 'ncell' column *\/$/;"	m	struct:StatCursor	file:
nChange	ext/session/sqlite3session.c	/^  int nChange;                    \/* Size of apChange[] array *\/$/;"	m	struct:SessionTable	file:
nChange	sqlite3.c	/^  int nChange;                    \/* Size of apChange[] array *\/$/;"	m	struct:SessionTable	file:
nChange	sqlite3.c	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3	file:
nChange	sqlite3.c	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe	file:
nChange	sqlite3.c	/^  int nChange;            \/* Statement changes (Vdbe.nChange)     *\/$/;"	m	struct:VdbeFrame	file:
nChange	src/sqliteInt.h	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3
nChange	src/vdbeInt.h	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe
nChange	src/vdbeInt.h	/^  int nChange;            \/* Statement changes (Vdbe.nChange)     *\/$/;"	m	struct:VdbeFrame
nChange	tsrc/sqlite3session.c	/^  int nChange;                    \/* Size of apChange[] array *\/$/;"	m	struct:SessionTable	file:
nChange	tsrc/sqliteInt.h	/^  int nChange;                  \/* Value returned by sqlite3_changes() *\/$/;"	m	struct:sqlite3
nChange	tsrc/vdbeInt.h	/^  int nChange;            \/* Number of db changes made since last reset *\/$/;"	m	struct:Vdbe
nChange	tsrc/vdbeInt.h	/^  int nChange;            \/* Statement changes (Vdbe.nChange)     *\/$/;"	m	struct:VdbeFrame
nChar	ext/fts2/fts2_icu.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	ext/fts3/fts3_icu.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	sqlite3.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	sqlite3.c	/^  u32  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum	file:
nChar	src/sqliteInt.h	/^  u32  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum
nChar	tsrc/fts2_icu.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	tsrc/fts3_icu.c	/^  int nChar;                  \/* Number of UChar elements in pInput *\/$/;"	m	struct:IcuCursor	file:
nChar	tsrc/sqliteInt.h	/^  u32  nChar;          \/* Length of the string so far *\/$/;"	m	struct:StrAccum
nChild	ext/fts5/fts5_expr.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	fts5.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	sqlite3.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	sqlite3.c	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm	file:
nChild	src/whereInt.h	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm
nChild	tsrc/fts5.c	/^  int nChild;                     \/* Number of child nodes *\/$/;"	m	struct:Fts5ExprNode	file:
nChild	tsrc/whereInt.h	/^  u8 nChild;              \/* Number of children that must disable us *\/$/;"	m	struct:WhereTerm
nChildCsr	sqlite3.c	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildCsr	src/vdbeInt.h	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame
nChildCsr	tsrc/vdbeInt.h	/^  int nChildCsr;          \/* Number of cursors for child frame *\/$/;"	m	struct:VdbeFrame
nChildMem	sqlite3.c	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame	file:
nChildMem	src/vdbeInt.h	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame
nChildMem	tsrc/vdbeInt.h	/^  int nChildMem;          \/* Number of memory cells for child frame *\/$/;"	m	struct:VdbeFrame
nChunkSize	sqlite3.c	/^  int nChunkSize;                 \/* In-memory chunk-size *\/$/;"	m	struct:MemJournal	file:
nChunkSize	src/memjournal.c	/^  int nChunkSize;                 \/* In-memory chunk-size *\/$/;"	m	struct:MemJournal	file:
nChunkSize	tsrc/memjournal.c	/^  int nChunkSize;                 \/* In-memory chunk-size *\/$/;"	m	struct:MemJournal	file:
nCkpt	sqlite3.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCkpt	src/wal.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCkpt	tsrc/wal.c	/^  u32 nCkpt;                 \/* Checkpoint sequence counter in the wal-header *\/$/;"	m	struct:Wal	file:
nCol	ext/fts3/fts3_expr.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	ext/fts3/fts3_snippet.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	ext/fts5/fts5Int.h	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config
nCol	ext/fts5/fts5Int.h	/^  int nCol;$/;"	m	struct:Fts5Colset
nCol	ext/fts5/fts5_test_mi.c	/^  int nCol;                       \/* Number of cols in FTS5 table *\/$/;"	m	struct:Fts5MatchinfoCtx	file:
nCol	ext/misc/csv.c	/^  int nCol;                       \/* Number of columns in the CSV file *\/$/;"	m	struct:CsvTable	file:
nCol	ext/rbu/sqlite3rbu.c	/^  int nCol;                       \/* Number of columns in current object *\/$/;"	m	struct:RbuObjIter	file:
nCol	ext/session/sqlite3session.c	/^  int nCol;                       \/* Number of columns in table zName *\/$/;"	m	struct:SessionTable	file:
nCol	ext/session/sqlite3session.c	/^  int nCol;                       \/* Number of columns in zTab *\/$/;"	m	struct:sqlite3_changeset_iter	file:
nCol	ext/session/sqlite3session.c	/^  int nCol;                       \/* Size of azCol[] and abPK[] arrays *\/$/;"	m	struct:SessionApplyCtx	file:
nCol	fts5.c	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config	file:
nCol	fts5.c	/^  int nCol;$/;"	m	struct:Fts5Colset	file:
nCol	sqlite3.c	/^  i16 nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table	file:
nCol	sqlite3.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Number of columns in current object *\/$/;"	m	struct:RbuObjIter	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Number of columns in table zName *\/$/;"	m	struct:SessionTable	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Number of columns in zTab *\/$/;"	m	struct:sqlite3_changeset_iter	file:
nCol	sqlite3.c	/^  int nCol;                       \/* Size of azCol[] and abPK[] arrays *\/$/;"	m	struct:SessionApplyCtx	file:
nCol	sqlite3.c	/^  int nCol;                 \/* Number of columns in index + pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nCol	sqlite3.c	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey	file:
nCol	sqlite3.c	/^  int nCol;$/;"	m	struct:Fts5Colset	file:
nCol	src/analyze.c	/^  int nCol;                 \/* Number of columns in index + pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nCol	src/sqliteInt.h	/^  i16 nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table
nCol	src/sqliteInt.h	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey
nCol	src/tclsqlite.c	/^  int nCol;                       \/* Number of columns returned by pStmt *\/$/;"	m	struct:DbEvalContext	file:
nCol	src/test8.c	/^  int nCol;               \/* Number of columns in the real table *\/$/;"	m	struct:echo_vtab	file:
nCol	tsrc/analyze.c	/^  int nCol;                 \/* Number of columns in index + pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nCol	tsrc/fts3_expr.c	/^  int nCol;                           \/* Number of entries in azCol[] *\/$/;"	m	struct:ParseContext	file:
nCol	tsrc/fts3_snippet.c	/^  int nCol;                       \/* Number of columns in table *\/$/;"	m	struct:MatchInfo	file:
nCol	tsrc/fts5.c	/^  int nCol;                       \/* Number of columns *\/$/;"	m	struct:Fts5Config	file:
nCol	tsrc/fts5.c	/^  int nCol;$/;"	m	struct:Fts5Colset	file:
nCol	tsrc/sqlite3rbu.c	/^  int nCol;                       \/* Number of columns in current object *\/$/;"	m	struct:RbuObjIter	file:
nCol	tsrc/sqlite3session.c	/^  int nCol;                       \/* Number of columns in table zName *\/$/;"	m	struct:SessionTable	file:
nCol	tsrc/sqlite3session.c	/^  int nCol;                       \/* Number of columns in zTab *\/$/;"	m	struct:sqlite3_changeset_iter	file:
nCol	tsrc/sqlite3session.c	/^  int nCol;                       \/* Size of azCol[] and abPK[] arrays *\/$/;"	m	struct:SessionApplyCtx	file:
nCol	tsrc/sqliteInt.h	/^  i16 nCol;            \/* Number of columns in this table *\/$/;"	m	struct:Table
nCol	tsrc/sqliteInt.h	/^  int nCol;         \/* Number of columns in this key *\/$/;"	m	struct:FKey
nCol	tsrc/tclsqlite.c	/^  int nCol;                       \/* Number of columns returned by pStmt *\/$/;"	m	struct:DbEvalContext	file:
nColCache	sqlite3.c	/^  u8 nColCache;        \/* Number of entries in aColCache[] *\/$/;"	m	struct:Parse	file:
nColCache	src/sqliteInt.h	/^  u8 nColCache;        \/* Number of entries in aColCache[] *\/$/;"	m	struct:Parse
nColCache	tsrc/sqliteInt.h	/^  u8 nColCache;        \/* Number of entries in aColCache[] *\/$/;"	m	struct:Parse
nColumn	ext/fts1/fts1.c	/^  int nColumn;                     \/* number of columns in virtual table *\/$/;"	m	struct:fulltext_vtab	file:
nColumn	ext/fts1/fts1.c	/^  int nColumn;             \/* Number of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
nColumn	ext/fts2/fts2.c	/^  int nColumn;                     \/* number of columns in virtual table *\/$/;"	m	struct:fulltext_vtab	file:
nColumn	ext/fts2/fts2.c	/^  int nColumn;             \/* Number of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
nColumn	ext/fts3/fts3Int.h	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table
nColumn	sqlite3.c	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table	file:
nColumn	sqlite3.c	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo	file:
nColumn	sqlite3.c	/^  u16 nColumn;             \/* Number of columns stored in the index *\/$/;"	m	struct:Index	file:
nColumn	sqlite3.c	/^  u32 nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nColumn	src/sqliteInt.h	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo
nColumn	src/sqliteInt.h	/^  u16 nColumn;             \/* Number of columns stored in the index *\/$/;"	m	struct:Index
nColumn	src/table.c	/^  u32 nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nColumn	tsrc/fts1.c	/^  int nColumn;                     \/* number of columns in virtual table *\/$/;"	m	struct:fulltext_vtab	file:
nColumn	tsrc/fts1.c	/^  int nColumn;             \/* Number of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
nColumn	tsrc/fts2.c	/^  int nColumn;                     \/* number of columns in virtual table *\/$/;"	m	struct:fulltext_vtab	file:
nColumn	tsrc/fts2.c	/^  int nColumn;             \/* Number of columns to be indexed *\/$/;"	m	struct:TableSpec	file:
nColumn	tsrc/fts3Int.h	/^  int nColumn;                    \/* number of named columns in virtual table *\/$/;"	m	struct:Fts3Table
nColumn	tsrc/sqliteInt.h	/^  int nColumn;            \/* Number of used entries in aCol[] *\/$/;"	m	struct:AggInfo
nColumn	tsrc/sqliteInt.h	/^  u16 nColumn;             \/* Number of columns stored in the index *\/$/;"	m	struct:Index
nColumn	tsrc/table.c	/^  u32 nColumn;       \/* Number of columns in the result *\/$/;"	m	struct:TabResult	file:
nConflict	ext/session/changeset.c	/^static int nConflict = 0;$/;"	v	file:
nConn	src/test_sqllog.c	/^  int nConn;                      \/* Size of aConn[] array *\/$/;"	m	struct:SLGlobal	file:
nConstraint	ext/rtree/rtree.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	sqlite3.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	sqlite3.c	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info	file:
nConstraint	sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nConstraint	tsrc/rtree.c	/^  int nConstraint;                  \/* Number of entries in aConstraint *\/$/;"	m	struct:RtreeCursor	file:
nConstraint	tsrc/sqlite3.h	/^  int nConstraint;           \/* Number of entries in aConstraint *\/$/;"	m	struct:sqlite3_index_info
nCoord	ext/rtree/sqlite3rtree.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nCoord	sqlite3.c	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nCoord	sqlite3.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nCoord	tsrc/sqlite3.h	/^  int nCoord;                       \/* Number of coordinates *\/$/;"	m	struct:sqlite3_rtree_query_info
nCost	ext/fts3/fts3Int.h	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader
nCost	sqlite3.c	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader	file:
nCost	tsrc/fts3Int.h	/^  int nCost;                      \/* Cost of running iterator *\/$/;"	m	struct:Fts3MultiSegReader
nCount	src/test_syscall.c	/^  int nCount;                     \/* Fail after this many more calls *\/$/;"	m	struct:TestSyscallGlobal	file:
nCrisisMerge	ext/fts5/fts5Int.h	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config
nCrisisMerge	fts5.c	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config	file:
nCrisisMerge	sqlite3.c	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config	file:
nCrisisMerge	tsrc/fts5.c	/^  int nCrisisMerge;               \/* Maximum allowed segments per level *\/$/;"	m	struct:Fts5Config	file:
nCsr	sqlite3.c	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram	file:
nCsr	src/vdbe.h	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram
nCsr	tsrc/vdbe.h	/^  int nCsr;                     \/* Number of cursors required *\/$/;"	m	struct:SubProgram
nCte	sqlite3.c	/^  int nCte;                       \/* Number of CTEs in the WITH clause *\/$/;"	m	struct:With	file:
nCte	src/sqliteInt.h	/^  int nCte;                       \/* Number of CTEs in the WITH clause *\/$/;"	m	struct:With
nCte	tsrc/sqliteInt.h	/^  int nCte;                       \/* Number of CTEs in the WITH clause *\/$/;"	m	struct:With
nCurrent	sqlite3.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon89	file:
nCurrent	src/mem2.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon63	file:
nCurrent	tsrc/mem2.c	/^  int nCurrent[NCSIZE];    \/* Current number of allocations *\/$/;"	m	struct:__anon30	file:
nCurrentPage	sqlite3.c	/^  unsigned int nCurrentPage;     \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCurrentPage	src/pcache1.c	/^  unsigned int nCurrentPage;     \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCurrentPage	tsrc/pcache1.c	/^  unsigned int nCurrentPage;     \/* Number of purgeable pages allocated *\/$/;"	m	struct:PGroup	file:
nCursor	ext/misc/amatch.c	/^  int nCursor;               \/* Number of active cursors *\/$/;"	m	struct:amatch_vtab	file:
nCursor	ext/misc/closure.c	/^  int nCursor;               \/* Number of pending cursors *\/$/;"	m	struct:closure_vtab	file:
nCursor	ext/misc/fuzzer.c	/^  int nCursor;               \/* Number of active cursors *\/$/;"	m	struct:fuzzer_vtab	file:
nCursor	sqlite3.c	/^  int nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame	file:
nCursor	sqlite3.c	/^  int nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe	file:
nCursor	src/vdbeInt.h	/^  int nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame
nCursor	src/vdbeInt.h	/^  int nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe
nCursor	tsrc/vdbeInt.h	/^  int nCursor;            \/* Number of entries in apCsr *\/$/;"	m	struct:VdbeFrame
nCursor	tsrc/vdbeInt.h	/^  int nCursor;            \/* Number of slots in apCsr[] *\/$/;"	m	struct:Vdbe
nData	ext/fts1/fts1.c	/^  int nData;$/;"	m	struct:DocList	file:
nData	ext/fts1/fulltext.c	/^  int nData;$/;"	m	struct:DocList	file:
nData	ext/fts2/fts2.c	/^  int nData;            \/* End of data loaded into pData. *\/$/;"	m	struct:DataBuffer	file:
nData	ext/fts2/fts2.c	/^  int nData;$/;"	m	struct:DLReader	file:
nData	ext/fts2/fts2.c	/^  int nData;$/;"	m	struct:InteriorReader	file:
nData	ext/fts2/fts2.c	/^  int nData;$/;"	m	struct:LeafReader	file:
nData	ext/fts2/fts2.c	/^  int nData;$/;"	m	struct:PLReader	file:
nData	ext/fts3/fts3_write.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	ext/fts3/fts3_write.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	ext/fts3/fts3_write.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	ext/fts5/fts5Int.h	/^  int nData;$/;"	m	struct:Fts5IndexIter
nData	ext/fts5/fts5_hash.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	ext/session/sqlite3session.c	/^  int nData;                      \/* Number of bytes in aData *\/$/;"	m	struct:SessionInput	file:
nData	ext/session/test_session.c	/^  int nData;                      \/* Size of buffer aData in bytes *\/$/;"	m	struct:TestStreamInput	file:
nData	fts5.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	fts5.c	/^  int nData;$/;"	m	struct:Fts5IndexIter	file:
nData	sqlite3.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	sqlite3.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	sqlite3.c	/^  int nData;                      \/* Number of bytes in aData *\/$/;"	m	struct:SessionInput	file:
nData	sqlite3.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	sqlite3.c	/^  int nData;              \/* Size of pData.  0 if none. *\/$/;"	m	struct:BtreePayload	file:
nData	sqlite3.c	/^  int nData;$/;"	m	struct:Fts5IndexIter	file:
nData	sqlite3.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	sqlite3.c	/^  u32 nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nData	src/btree.h	/^  int nData;              \/* Size of pData.  0 if none. *\/$/;"	m	struct:BtreePayload
nData	src/table.c	/^  u32 nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nData	src/test6.c	/^  int nData;                           \/* Size of buffer allocated at zData *\/$/;"	m	struct:CrashFile	file:
nData	tsrc/btree.h	/^  int nData;              \/* Size of pData.  0 if none. *\/$/;"	m	struct:BtreePayload
nData	tsrc/fts1.c	/^  int nData;$/;"	m	struct:DocList	file:
nData	tsrc/fts2.c	/^  int nData;            \/* End of data loaded into pData. *\/$/;"	m	struct:DataBuffer	file:
nData	tsrc/fts2.c	/^  int nData;$/;"	m	struct:DLReader	file:
nData	tsrc/fts2.c	/^  int nData;$/;"	m	struct:InteriorReader	file:
nData	tsrc/fts2.c	/^  int nData;$/;"	m	struct:LeafReader	file:
nData	tsrc/fts2.c	/^  int nData;$/;"	m	struct:PLReader	file:
nData	tsrc/fts3_write.c	/^  int nData;                      \/* Bytes of data in aData *\/$/;"	m	struct:SegmentWriter	file:
nData	tsrc/fts3_write.c	/^  int nData;                      \/* Bytes of valid data so far *\/$/;"	m	struct:SegmentNode	file:
nData	tsrc/fts3_write.c	/^  int nData;$/;"	m	struct:PendingList	file:
nData	tsrc/fts5.c	/^  int nData;                      \/* Total bytes of data (incl. structure) *\/$/;"	m	struct:Fts5HashEntry	file:
nData	tsrc/fts5.c	/^  int nData;$/;"	m	struct:Fts5IndexIter	file:
nData	tsrc/sqlite3session.c	/^  int nData;                      \/* Number of bytes in aData *\/$/;"	m	struct:SessionInput	file:
nData	tsrc/table.c	/^  u32 nData;         \/* Slots used in azResult[].  (nRow+1)*nColumn *\/$/;"	m	struct:TabResult	file:
nDatabase	src/test_onefile.c	/^  int nDatabase;              \/* Current size of database region *\/$/;"	m	struct:fs_real_file	file:
nDb	sqlite3.c	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3	file:
nDb	src/sqliteInt.h	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3
nDb	test/fuzzcheck.c	/^  int nDb;                         \/* Number of template databases *\/$/;"	m	struct:GlobalVars	file:
nDb	tsrc/sqliteInt.h	/^  int nDb;                      \/* Number of backends currently in use *\/$/;"	m	struct:sqlite3
nDbChange	sqlite3.c	/^  int nDbChange;          \/* Value of db->nChange *\/$/;"	m	struct:VdbeFrame	file:
nDbChange	src/vdbeInt.h	/^  int nDbChange;          \/* Value of db->nChange *\/$/;"	m	struct:VdbeFrame
nDbChange	tsrc/vdbeInt.h	/^  int nDbChange;          \/* Value of db->nChange *\/$/;"	m	struct:VdbeFrame
nDeferredCons	sqlite3.c	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint	file:
nDeferredCons	sqlite3.c	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3	file:
nDeferredCons	src/sqliteInt.h	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint
nDeferredCons	src/sqliteInt.h	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3
nDeferredCons	tsrc/sqliteInt.h	/^  i64 nDeferredCons;                  \/* Number of deferred fk violations *\/$/;"	m	struct:Savepoint
nDeferredCons	tsrc/sqliteInt.h	/^  i64 nDeferredCons;            \/* Net deferred constraints this transaction. *\/$/;"	m	struct:sqlite3
nDeferredImmCons	sqlite3.c	/^  i64 nDeferredImmCons;               \/* Number of deferred imm fk. *\/$/;"	m	struct:Savepoint	file:
nDeferredImmCons	sqlite3.c	/^  i64 nDeferredImmCons;         \/* Net deferred immediate constraints *\/$/;"	m	struct:sqlite3	file:
nDeferredImmCons	src/sqliteInt.h	/^  i64 nDeferredImmCons;               \/* Number of deferred imm fk. *\/$/;"	m	struct:Savepoint
nDeferredImmCons	src/sqliteInt.h	/^  i64 nDeferredImmCons;         \/* Net deferred immediate constraints *\/$/;"	m	struct:sqlite3
nDeferredImmCons	tsrc/sqliteInt.h	/^  i64 nDeferredImmCons;               \/* Number of deferred imm fk. *\/$/;"	m	struct:Savepoint
nDeferredImmCons	tsrc/sqliteInt.h	/^  i64 nDeferredImmCons;         \/* Net deferred immediate constraints *\/$/;"	m	struct:sqlite3
nDefine	tool/lemon.c	/^static int nDefine = 0;      \/* Number of -D options on the command line *\/$/;"	v	file:
nDel	ext/misc/spellfix.c	/^  int nDel;                \/* Number of deletion cost entries *\/$/;"	m	struct:EditDist3From	file:
nDim	ext/rtree/rtree.c	/^  u8 nDim;                    \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDim	sqlite3.c	/^  u8 nDim;                    \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDim	tsrc/rtree.c	/^  u8 nDim;                    \/* Number of dimensions *\/$/;"	m	struct:Rtree	file:
nDlidx	ext/fts5/fts5_index.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDlidx	fts5.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDlidx	sqlite3.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDlidx	tsrc/fts5.c	/^  int nDlidx;                     \/* Allocated size of aDlidx[] array *\/$/;"	m	struct:Fts5SegWriter	file:
nDoc	ext/fts3/fts3Int.h	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor
nDoc	ext/fts3/fts3_aux.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	ext/fts3/fts3_snippet.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoc	sqlite3.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor	file:
nDoc	sqlite3.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoc	tsrc/fts3Int.h	/^  sqlite3_int64 nDoc;             \/* Documents in table *\/$/;"	m	struct:Fts3Cursor
nDoc	tsrc/fts3_aux.c	/^    sqlite3_int64 nDoc;           \/* 'documents' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nDoc	tsrc/fts3_snippet.c	/^  sqlite3_int64 nDoc;             \/* Number of docs in database *\/$/;"	m	struct:MatchInfo	file:
nDoclist	ext/fts3/fts3Int.h	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nDoclist	ext/fts3/fts3Int.h	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor
nDoclist	ext/fts3/fts3_write.c	/^  int nDoclist;                   \/* Size of doclist in bytes *\/$/;"	m	struct:NodeReader	file:
nDoclist	ext/fts3/fts3_write.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nDoclist	sqlite3.c	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nDoclist	sqlite3.c	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
nDoclist	sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in bytes *\/$/;"	m	struct:NodeReader	file:
nDoclist	sqlite3.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nDoclist	tsrc/fts3Int.h	/^  int nDoclist;                   \/* Size of aDoclist[] in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nDoclist	tsrc/fts3Int.h	/^  int nDoclist;                   \/* Size of buffer at aDoclist *\/$/;"	m	struct:Fts3Cursor
nDoclist	tsrc/fts3_write.c	/^  int nDoclist;                   \/* Size of doclist in bytes *\/$/;"	m	struct:NodeReader	file:
nDoclist	tsrc/fts3_write.c	/^  int nDoclist;                   \/* Size of doclist in current entry *\/$/;"	m	struct:Fts3SegReader	file:
nElem	ext/fts3/fts3_snippet.c	/^  int nElem;$/;"	m	struct:MatchinfoBuffer	file:
nElem	sqlite3.c	/^  int nElem;$/;"	m	struct:MatchinfoBuffer	file:
nElem	test/threadtest1.c	/^  int nElem;          \/* Number of used entries in azElem[] *\/$/;"	m	struct:QueryResult	file:
nElem	tsrc/fts3_snippet.c	/^  int nElem;$/;"	m	struct:MatchinfoBuffer	file:
nElement	ext/fts2/fts2.c	/^  int nElement;$/;"	m	struct:DLReader	file:
nElement	tsrc/fts2.c	/^  int nElement;$/;"	m	struct:DLReader	file:
nEmpty	ext/fts5/fts5_index.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEmpty	fts5.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEmpty	sqlite3.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEmpty	tsrc/fts5.c	/^  int nEmpty;                     \/* Number of contiguous term-less nodes *\/$/;"	m	struct:Fts5SegWriter	file:
nEntry	ext/fts3/fts3_write.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEntry	ext/fts5/fts5_hash.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	ext/session/sqlite3session.c	/^  int nEntry;                     \/* Total number of entries in hash table *\/$/;"	m	struct:SessionTable	file:
nEntry	fts5.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	sqlite3.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	sqlite3.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	sqlite3.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEntry	sqlite3.c	/^  int nEntry;                     \/* Total number of entries in hash table *\/$/;"	m	struct:SessionTable	file:
nEntry	src/wal.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEntry	tsrc/fts3_write.c	/^  int nEntry;                     \/* Number of terms written to node so far *\/$/;"	m	struct:SegmentNode	file:
nEntry	tsrc/fts5.c	/^  int nEntry;                     \/* Number of entries currently in hash *\/$/;"	m	struct:Fts5Hash	file:
nEntry	tsrc/sqlite3session.c	/^  int nEntry;                     \/* Total number of entries in hash table *\/$/;"	m	struct:SessionTable	file:
nEntry	tsrc/wal.c	/^    int nEntry;                   \/* Nr. of entries in aPgno[] and aIndex[] *\/$/;"	m	struct:WalIterator::WalSegment	file:
nEq	sqlite3.c	/^      u16 nEq;               \/* Number of equality constraints *\/$/;"	m	struct:WhereLoop::__anon98::__anon99	file:
nEq	src/whereInt.h	/^      u16 nEq;               \/* Number of equality constraints *\/$/;"	m	struct:WhereLoop::__anon47::__anon48
nEq	tsrc/whereInt.h	/^      u16 nEq;               \/* Number of equality constraints *\/$/;"	m	struct:WhereLoop::__anon12::__anon13
nEquiv	sqlite3.c	/^  unsigned char nEquiv;      \/* Number of entries in aEquiv[] *\/$/;"	m	struct:WhereScan	file:
nEquiv	src/whereInt.h	/^  unsigned char nEquiv;      \/* Number of entries in aEquiv[] *\/$/;"	m	struct:WhereScan
nEquiv	tsrc/whereInt.h	/^  unsigned char nEquiv;      \/* Number of entries in aEquiv[] *\/$/;"	m	struct:WhereScan
nErr	ext/misc/json1.c	/^  u8 nErr;           \/* Number of errors seen *\/$/;"	m	struct:JsonParse	file:
nErr	shell.c	/^  int nErr;              \/* Number of errors seen *\/$/;"	m	struct:ShellState	file:
nErr	sqlite3.c	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext	file:
nErr	sqlite3.c	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse	file:
nErr	sqlite3.c	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk	file:
nErr	sqlite3.c	/^  u8 nErr;           \/* Number of errors seen *\/$/;"	m	struct:JsonParse	file:
nErr	src/btreeInt.h	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk
nErr	src/shell.c	/^  int nErr;              \/* Number of errors seen *\/$/;"	m	struct:ShellState	file:
nErr	src/sqliteInt.h	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext
nErr	src/sqliteInt.h	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse
nErr	test/threadtest4.c	/^  int nErr;                   \/* Number of errors seen by this thread *\/$/;"	m	struct:WorkerInfo	file:
nErr	tsrc/btreeInt.h	/^  int nErr;         \/* Number of messages written to zErrMsg so far *\/$/;"	m	struct:IntegrityCk
nErr	tsrc/json1.c	/^  u8 nErr;           \/* Number of errors seen *\/$/;"	m	struct:JsonParse	file:
nErr	tsrc/shell.c	/^  int nErr;              \/* Number of errors seen *\/$/;"	m	struct:ShellState	file:
nErr	tsrc/sqliteInt.h	/^  int nErr;            \/* Number of errors encountered while resolving names *\/$/;"	m	struct:NameContext
nErr	tsrc/sqliteInt.h	/^  int nErr;            \/* Number of errors seen *\/$/;"	m	struct:Parse
nError	mptest/mptest.c	/^  int nError;            \/* Number of errors *\/$/;"	m	struct:Global	file:
nEst	sqlite3.c	/^  LogEst nEst;                    \/* Estimated output rows per loop *\/$/;"	m	struct:ScanStatus	file:
nEst	src/vdbeInt.h	/^  LogEst nEst;                    \/* Estimated output rows per loop *\/$/;"	m	struct:ScanStatus
nEst	tsrc/vdbeInt.h	/^  LogEst nEst;                    \/* Estimated output rows per loop *\/$/;"	m	struct:ScanStatus
nException	ext/fts3/fts3_unicode.c	/^  int nException;$/;"	m	struct:unicode_tokenizer	file:
nException	ext/fts5/fts5_tokenize.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nException	fts5.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nException	sqlite3.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nException	sqlite3.c	/^  int nException;$/;"	m	struct:unicode_tokenizer	file:
nException	tsrc/fts3_unicode.c	/^  int nException;$/;"	m	struct:unicode_tokenizer	file:
nException	tsrc/fts5.c	/^  int nException;$/;"	m	struct:Unicode61Tokenizer	file:
nExpr	sqlite3.c	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList	file:
nExpr	src/sqliteInt.h	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList
nExpr	tsrc/sqliteInt.h	/^  int nExpr;             \/* Number of expressions on the list *\/$/;"	m	struct:ExprList
nExt	sqlite3.c	/^  u32 nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExt	src/loadext.c	/^  u32 nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExt	tsrc/loadext.c	/^  u32 nExt;              \/* Number of entries in aExt[] *\/          $/;"	m	struct:sqlite3AutoExtList	file:
nExtension	sqlite3.c	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3	file:
nExtension	src/sqliteInt.h	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3
nExtension	tsrc/sqliteInt.h	/^  int nExtension;               \/* Number of loaded extensions *\/$/;"	m	struct:sqlite3
nExtra	ext/fts3/tool/fts3view.c	/^int nExtra;$/;"	v
nExtra	sqlite3.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nExtra	src/pager.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nExtra	tsrc/pager.c	/^  u16 nExtra;                 \/* Add this many bytes to each in-memory page *\/$/;"	m	struct:Pager	file:
nFail	src/test_malloc.c	/^  int nFail;              \/* Number of failures seen since last config *\/$/;"	m	struct:MemFault	file:
nFail	src/test_syscall.c	/^  int nFail;                      \/* Number of failures that have occurred *\/$/;"	m	struct:TestSyscallGlobal	file:
nFail	src/test_vfs.c	/^  int nFail;                      \/* Number of faults injected *\/$/;"	m	struct:TestFaultInject	file:
nFails	sqlite3.c	/^  int nFails;                  \/* Number of conch taking failures *\/$/;"	m	struct:proxyLockingContext	file:
nFails	src/os_unix.c	/^  int nFails;                  \/* Number of conch taking failures *\/$/;"	m	struct:proxyLockingContext	file:
nFails	tsrc/os_unix.c	/^  int nFails;                  \/* Number of conch taking failures *\/$/;"	m	struct:proxyLockingContext	file:
nFetchOut	sqlite3.c	/^  int nFetchOut;                      \/* Number of outstanding xFetch refs *\/$/;"	m	struct:unixFile	file:
nFetchOut	sqlite3.c	/^  int nFetchOut;                \/* Number of outstanding xFetch references *\/$/;"	m	struct:winFile	file:
nFetchOut	src/os_unix.c	/^  int nFetchOut;                      \/* Number of outstanding xFetch refs *\/$/;"	m	struct:unixFile	file:
nFetchOut	src/os_win.c	/^  int nFetchOut;                \/* Number of outstanding xFetch references *\/$/;"	m	struct:winFile	file:
nFetchOut	tsrc/os_unix.c	/^  int nFetchOut;                      \/* Number of outstanding xFetch refs *\/$/;"	m	struct:unixFile	file:
nFetchOut	tsrc/os_win.c	/^  int nFetchOut;                \/* Number of outstanding xFetch references *\/$/;"	m	struct:winFile	file:
nField	sqlite3.c	/^  i16 nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor	file:
nField	sqlite3.c	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord	file:
nField	sqlite3.c	/^  u16 nField;         \/* Number of key columns in the index *\/$/;"	m	struct:KeyInfo	file:
nField	src/sqliteInt.h	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord
nField	src/sqliteInt.h	/^  u16 nField;         \/* Number of key columns in the index *\/$/;"	m	struct:KeyInfo
nField	src/vdbeInt.h	/^  i16 nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor
nField	tsrc/sqliteInt.h	/^  u16 nField;         \/* Number of entries in apMem[] *\/$/;"	m	struct:UnpackedRecord
nField	tsrc/sqliteInt.h	/^  u16 nField;         \/* Number of key columns in the index *\/$/;"	m	struct:KeyInfo
nField	tsrc/vdbeInt.h	/^  i16 nField;           \/* Number of fields in the header *\/$/;"	m	struct:VdbeCursor
nFile	ext/async/sqlite3async.c	/^  int nFile;                   \/* Number of open files (from sqlite pov) *\/$/;"	m	struct:TestAsyncStaticData	file:
nFile	ext/async/sqlite3async.c	/^  int nFile;$/;"	m	struct:AsyncLock	file:
nFile	src/test_osinst.c	/^  int nFile;                      \/* Size of array azFile[] *\/$/;"	m	struct:VfslogCsr	file:
nFilename	ext/misc/vfslog.c	/^  int nFilename;                  \/* Length of zFilename in bytes *\/$/;"	m	struct:VLogLog	file:
nFilter	shell.c	/^  int nFilter;             \/* Number of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
nFilter	src/shell.c	/^  int nFilter;             \/* Number of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
nFilter	tsrc/shell.c	/^  int nFilter;             \/* Number of xFilter rejection GLOB patterns *\/$/;"	m	struct:OpenSession	file:
nFkConstraint	sqlite3.c	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe	file:
nFkConstraint	src/vdbeInt.h	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe
nFkConstraint	tsrc/vdbeInt.h	/^  i64 nFkConstraint;      \/* Number of imm. FK constraints this VM *\/$/;"	m	struct:Vdbe
nFold	ext/fts5/fts5_tokenize.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFold	fts5.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFold	sqlite3.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFold	tsrc/fts5.c	/^  int nFold;                      \/* Size of aFold[] in bytes *\/$/;"	m	struct:Unicode61Tokenizer	file:
nFrame	ext/rbu/sqlite3rbu.c	/^  int nFrame;                     \/* Entries in aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrame	sqlite3.c	/^  int nFrame;                     \/* Entries in aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrame	sqlite3.c	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe	file:
nFrame	src/vdbeInt.h	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe
nFrame	tsrc/sqlite3rbu.c	/^  int nFrame;                     \/* Entries in aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrame	tsrc/vdbeInt.h	/^  int nFrame;             \/* Number of frames in pFrame list *\/$/;"	m	struct:Vdbe
nFrameAlloc	ext/rbu/sqlite3rbu.c	/^  int nFrameAlloc;                \/* Allocated size of aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrameAlloc	sqlite3.c	/^  int nFrameAlloc;                \/* Allocated size of aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFrameAlloc	tsrc/sqlite3rbu.c	/^  int nFrameAlloc;                \/* Allocated size of aFrame[] array *\/$/;"	m	struct:sqlite3rbu	file:
nFree	sqlite3.c	/^  int nFree;           \/* Bytes of available memory *\/$/;"	m	struct:ReusableSpace	file:
nFree	sqlite3.c	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage	file:
nFree	src/btreeInt.h	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage
nFree	src/test_pcache.c	/^  int nFree;                \/* Number of unused slots in a[] *\/$/;"	m	struct:testpcache	file:
nFree	src/test_wsd.c	/^  int nFree;$/;"	m	struct:ProcessLocalStorage	file:
nFree	src/vdbeaux.c	/^  int nFree;           \/* Bytes of available memory *\/$/;"	m	struct:ReusableSpace	file:
nFree	tsrc/btreeInt.h	/^  u16 nFree;           \/* Number of free bytes on the page *\/$/;"	m	struct:MemPage
nFree	tsrc/vdbeaux.c	/^  int nFree;           \/* Bytes of available memory *\/$/;"	m	struct:ReusableSpace	file:
nFreeSlot	sqlite3.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFreeSlot	src/pcache1.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFreeSlot	tsrc/pcache1.c	/^  int nFreeSlot;                 \/* Number of unused pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nFresh	sqlite3.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFresh	src/rowset.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFresh	tsrc/rowset.c	/^  u16 nFresh;                    \/* Number of objects on pFresh *\/$/;"	m	struct:RowSet	file:
nFrom	ext/misc/amatch.c	/^  amatch_len nFrom, nTo;   \/* Length of the zFrom and zTo strings *\/$/;"	m	struct:amatch_rule	file:
nFrom	ext/misc/fuzzer.c	/^  fuzzer_len nFrom, nTo;      \/* Length of the zFrom and zTo strings *\/$/;"	m	struct:fuzzer_rule	file:
nFrom	ext/misc/spellfix.c	/^  u8 nFrom;                 \/* Number of bytes in aFrom *\/$/;"	m	struct:EditDist3Cost	file:
nFunc	sqlite3.c	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo	file:
nFunc	src/sqliteInt.h	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo
nFunc	tsrc/sqliteInt.h	/^  int nFunc;              \/* Number of entries in aFunc[] *\/$/;"	m	struct:AggInfo
nGlobalErr	test/threadtest3.c	/^static int nGlobalErr = 0;$/;"	v	file:
nHash	sqlite3.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHash	src/pcache1.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHash	tsrc/pcache1.c	/^  unsigned int nHash;                 \/* Number of slots in apHash[] *\/$/;"	m	struct:PCache1	file:
nHashSize	ext/fts5/fts5Int.h	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config
nHashSize	fts5.c	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config	file:
nHashSize	sqlite3.c	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config	file:
nHashSize	tsrc/fts5.c	/^  int nHashSize;                  \/* Bytes of memory for in-memory hash *\/$/;"	m	struct:Fts5Config	file:
nHdrParsed	sqlite3.c	/^  u16 nHdrParsed;       \/* Number of header fields parsed so far *\/$/;"	m	struct:VdbeCursor	file:
nHdrParsed	src/vdbeInt.h	/^  u16 nHdrParsed;       \/* Number of header fields parsed so far *\/$/;"	m	struct:VdbeCursor
nHdrParsed	tsrc/vdbeInt.h	/^  u16 nHdrParsed;       \/* Number of header fields parsed so far *\/$/;"	m	struct:VdbeCursor
nHeap	sqlite3.c	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config	file:
nHeap	src/sqliteInt.h	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config
nHeap	tsrc/sqliteInt.h	/^  int nHeap;                        \/* Size of pHeap[] *\/$/;"	m	struct:Sqlite3Config
nHeight	sqlite3.c	/^  int nHeight;              \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse	file:
nHeight	sqlite3.c	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr	file:
nHeight	src/sqliteInt.h	/^  int nHeight;              \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse
nHeight	src/sqliteInt.h	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr
nHeight	tsrc/sqliteInt.h	/^  int nHeight;              \/* Expression tree height of current sub-select *\/$/;"	m	struct:Parse
nHeight	tsrc/sqliteInt.h	/^  int nHeight;           \/* Height of the tree headed by this node *\/$/;"	m	struct:Expr
nId	sqlite3.c	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList	file:
nId	src/sqliteInt.h	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList
nId	tsrc/sqliteInt.h	/^  int nId;         \/* Number of identifiers on the list *\/$/;"	m	struct:IdList
nIdx	ext/fts5/fts5_main.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIdx	fts5.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIdx	sqlite3.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIdx	tsrc/fts5.c	/^  int nIdx;                       \/* Number of entries in aIdx[] *\/$/;"	m	struct:Fts5Sorter	file:
nIn	ext/fts5/fts5_aux.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIn	ext/misc/csv.c	/^  size_t nIn;            \/* Number of characters in the input buffer *\/$/;"	m	struct:CsvReader	file:
nIn	fts5.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIn	sqlite3.c	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon96::__anon97	file:
nIn	sqlite3.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIn	src/whereInt.h	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon45::__anon46
nIn	tsrc/fts5.c	/^  int nIn;                        \/* Size of input text in bytes *\/$/;"	m	struct:HighlightContext	file:
nIn	tsrc/whereInt.h	/^      int nIn;              \/* Number of entries in aInLoop[] *\/$/;"	m	struct:WhereLevel::__anon10::__anon11
nIndent	shell.c	/^  int nIndent;           \/* Size of array aiIndent[] *\/$/;"	m	struct:ShellState	file:
nIndent	sqlite3.c	/^  int nIndent;       \/* Number of elements in aIndent *\/$/;"	m	struct:Explain	file:
nIndent	src/shell.c	/^  int nIndent;           \/* Size of array aiIndent[] *\/$/;"	m	struct:ShellState	file:
nIndent	src/vdbeInt.h	/^  int nIndent;       \/* Number of elements in aIndent *\/$/;"	m	struct:Explain
nIndent	tsrc/shell.c	/^  int nIndent;           \/* Size of array aiIndent[] *\/$/;"	m	struct:ShellState	file:
nIndent	tsrc/vdbeInt.h	/^  int nIndent;       \/* Number of elements in aIndent *\/$/;"	m	struct:Explain
nIndex	ext/fts3/fts3Int.h	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table
nIndex	ext/rbu/sqlite3rbu.c	/^  int nIndex;                     \/* Number of aux. indexes on table zTbl *\/$/;"	m	struct:RbuObjIter	file:
nIndex	sqlite3.c	/^  int nIndex;                     \/* Number of aux. indexes on table zTbl *\/$/;"	m	struct:RbuObjIter	file:
nIndex	sqlite3.c	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table	file:
nIndex	src/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nIndex	tsrc/fts3Int.h	/^  int nIndex;                     \/* Size of aIndex[] *\/$/;"	m	struct:Fts3Table
nIndex	tsrc/sqlite3rbu.c	/^  int nIndex;                     \/* Number of aux. indexes on table zTbl *\/$/;"	m	struct:RbuObjIter	file:
nIndex	tsrc/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nInit	ext/misc/regexp.c	/^  int nInit;                  \/* Number of characters in zInit *\/$/;"	m	struct:ReCompiled	file:
nInitPage	sqlite3.c	/^  int nInitPage;                 \/* Initial bulk allocation size *\/   $/;"	m	struct:PCacheGlobal	file:
nInitPage	src/pcache1.c	/^  int nInitPage;                 \/* Initial bulk allocation size *\/   $/;"	m	struct:PCacheGlobal	file:
nInitPage	tsrc/pcache1.c	/^  int nInitPage;                 \/* Initial bulk allocation size *\/   $/;"	m	struct:PCacheGlobal	file:
nInput	ext/fts1/fts1_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	ext/fts2/fts2_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	ext/fts3/fts3_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	ext/fts3/fts3_test.c	/^  int nInput;                  \/* Size of the input in bytes *\/$/;"	m	struct:test_tokenizer_cursor	file:
nInput	ext/fts3/fts3_unicode.c	/^  int nInput;                     \/* Size of aInput[] in bytes *\/$/;"	m	struct:unicode_cursor	file:
nInput	sqlite3.c	/^  int nInput;                     \/* Size of aInput[] in bytes *\/$/;"	m	struct:unicode_cursor	file:
nInput	sqlite3.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	tsrc/fts1_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	tsrc/fts2_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	tsrc/fts3_porter.c	/^  int nInput;                  \/* size of the input *\/$/;"	m	struct:porter_tokenizer_cursor	file:
nInput	tsrc/fts3_unicode.c	/^  int nInput;                     \/* Size of aInput[] in bytes *\/$/;"	m	struct:unicode_cursor	file:
nIns	ext/misc/spellfix.c	/^  int nIns;                \/* Number of insertion cost entries *\/$/;"	m	struct:EditDist3To	file:
nInst	ext/fts5/fts5_aux.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInst	fts5.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInst	sqlite3.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInst	tsrc/fts5.c	/^  int nInst;                      \/* Total number of phrase instances *\/$/;"	m	struct:CInstIter	file:
nInstAlloc	ext/fts5/fts5_main.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstAlloc	fts5.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstAlloc	sqlite3.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstAlloc	tsrc/fts5.c	/^  int nInstAlloc;                 \/* Size of aInst[] array (entries \/ 3) *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	ext/fts5/fts5_main.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	fts5.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	sqlite3.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nInstCount	tsrc/fts5.c	/^  int nInstCount;                 \/* Number of phrase instances *\/$/;"	m	struct:Fts5Cursor	file:
nInstance	src/test_pcache.c	/^  int nInstance;            \/* Number of current instances *\/$/;"	m	struct:testpcacheGlobalType	file:
nJournal	src/test_onefile.c	/^  int nJournal;               \/* Current size of journal region *\/$/;"	m	struct:fs_real_file	file:
nKey	ext/fts1/ft_hash.h	/^  void *pKey; int nKey;    \/* Key associated with this element *\/$/;"	m	struct:HashElem
nKey	ext/fts1/fts1_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts1HashElem
nKey	ext/fts2/fts2_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts2HashElem
nKey	ext/fts3/fts3_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem
nKey	ext/fts5/fts5_hash.c	/^  int nKey;                       \/* Length of zKey[] in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	fts5.c	/^  int nKey;                       \/* Length of zKey[] in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	sqlite3.c	/^  i64 nKey;                 \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor	file:
nKey	sqlite3.c	/^  i64 nKey;      \/* The key for INTKEY tables, or nPayload otherwise *\/$/;"	m	struct:CellInfo	file:
nKey	sqlite3.c	/^  int nKey;                       \/* Length of zKey[] in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	sqlite3.c	/^  int nKey;                   \/* Number of bytes in key *\/$/;"	m	struct:PmaReader	file:
nKey	sqlite3.c	/^  sqlite3_int64 nKey;     \/* Size of pKey for indexes.  PRIMARY KEY for tabs *\/$/;"	m	struct:BtreePayload	file:
nKey	sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
nKey	src/btree.h	/^  sqlite3_int64 nKey;     \/* Size of pKey for indexes.  PRIMARY KEY for tabs *\/$/;"	m	struct:BtreePayload
nKey	src/btreeInt.h	/^  i64 nKey;                 \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor
nKey	src/btreeInt.h	/^  i64 nKey;      \/* The key for INTKEY tables, or nPayload otherwise *\/$/;"	m	struct:CellInfo
nKey	src/vdbesort.c	/^  int nKey;                   \/* Number of bytes in key *\/$/;"	m	struct:PmaReader	file:
nKey	tsrc/btree.h	/^  sqlite3_int64 nKey;     \/* Size of pKey for indexes.  PRIMARY KEY for tabs *\/$/;"	m	struct:BtreePayload
nKey	tsrc/btreeInt.h	/^  i64 nKey;                 \/* Size of pKey, or last integer key *\/$/;"	m	struct:BtCursor
nKey	tsrc/btreeInt.h	/^  i64 nKey;      \/* The key for INTKEY tables, or nPayload otherwise *\/$/;"	m	struct:CellInfo
nKey	tsrc/fts1_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts1HashElem
nKey	tsrc/fts2_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts2HashElem
nKey	tsrc/fts3_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem
nKey	tsrc/fts5.c	/^  int nKey;                       \/* Length of zKey[] in bytes *\/$/;"	m	struct:Fts5HashEntry	file:
nKey	tsrc/vdbesort.c	/^  int nKey;                   \/* Number of bytes in key *\/$/;"	m	struct:PmaReader	file:
nKeyCol	sqlite3.c	/^  int nKeyCol;              \/* Number of index columns w\/o the pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nKeyCol	sqlite3.c	/^  u16 nKeyCol;             \/* Number of columns forming the key *\/$/;"	m	struct:Index	file:
nKeyCol	src/analyze.c	/^  int nKeyCol;              \/* Number of index columns w\/o the pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nKeyCol	src/sqliteInt.h	/^  u16 nKeyCol;             \/* Number of columns forming the key *\/$/;"	m	struct:Index
nKeyCol	tsrc/analyze.c	/^  int nKeyCol;              \/* Number of index columns w\/o the pk\/rowid *\/$/;"	m	struct:Stat4Accum	file:
nKeyCol	tsrc/sqliteInt.h	/^  u16 nKeyCol;             \/* Number of columns forming the key *\/$/;"	m	struct:Index
nKeyword	tool/mkkeywordhash.c	/^static int nKeyword = (sizeof(aKeywordTable)\/sizeof(aKeywordTable[0]));$/;"	v	file:
nLSlot	sqlite3.c	/^  u16 nLSlot;           \/* Number of slots allocated for aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLSlot	src/whereInt.h	/^  u16 nLSlot;           \/* Number of slots allocated for aLTerm[] *\/$/;"	m	struct:WhereLoop
nLSlot	tsrc/whereInt.h	/^  u16 nLSlot;           \/* Number of slots allocated for aLTerm[] *\/$/;"	m	struct:WhereLoop
nLTerm	sqlite3.c	/^  u16 nLTerm;           \/* Number of entries in aLTerm[] *\/$/;"	m	struct:WhereLoop	file:
nLTerm	src/whereInt.h	/^  u16 nLTerm;           \/* Number of entries in aLTerm[] *\/$/;"	m	struct:WhereLoop
nLTerm	tsrc/whereInt.h	/^  u16 nLTerm;           \/* Number of entries in aLTerm[] *\/$/;"	m	struct:WhereLoop
nLabel	sqlite3.c	/^  int nLabel;          \/* Number of labels used *\/$/;"	m	struct:Parse	file:
nLabel	src/sqliteInt.h	/^  int nLabel;          \/* Number of labels used *\/$/;"	m	struct:Parse
nLabel	tsrc/sqliteInt.h	/^  int nLabel;          \/* Number of labels used *\/$/;"	m	struct:Parse
nLang	ext/misc/spellfix.c	/^  int nLang;             \/* Number of language IDs.  Size of a[] *\/$/;"	m	struct:EditDist3Config	file:
nLastOvfl	sqlite3.c	/^  int nLastOvfl;                  \/* Bytes of payload on final overflow page *\/$/;"	m	struct:StatCell	file:
nLastOvfl	src/dbstat.c	/^  int nLastOvfl;                  \/* Bytes of payload on final overflow page *\/$/;"	m	struct:StatCell	file:
nLastOvfl	tsrc/dbstat.c	/^  int nLastOvfl;                  \/* Bytes of payload on final overflow page *\/$/;"	m	struct:StatCell	file:
nLeTerm	ext/fts5/fts5_vocab.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeTerm	fts5.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeTerm	sqlite3.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeTerm	tsrc/fts5.c	/^  int nLeTerm;                    \/* Size of zLeTerm in bytes *\/$/;"	m	struct:Fts5VocabCursor	file:
nLeafAdd	ext/fts3/fts3Int.h	/^  u32 nLeafAdd;                   \/* Number of leaf blocks added this trans *\/$/;"	m	struct:Fts3Table
nLeafAdd	sqlite3.c	/^  u32 nLeafAdd;                   \/* Number of leaf blocks added this trans *\/$/;"	m	struct:Fts3Table	file:
nLeafAdd	tsrc/fts3Int.h	/^  u32 nLeafAdd;                   \/* Number of leaf blocks added this trans *\/$/;"	m	struct:Fts3Table
nLeafData	ext/fts3/fts3_write.c	/^  i64 nLeafData;                  \/* Number of bytes of leaf data written *\/$/;"	m	struct:SegmentWriter	file:
nLeafData	ext/fts3/fts3_write.c	/^  sqlite3_int64 nLeafData;        \/* Bytes of leaf page data so far *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafData	sqlite3.c	/^  i64 nLeafData;                  \/* Number of bytes of leaf data written *\/$/;"	m	struct:SegmentWriter	file:
nLeafData	sqlite3.c	/^  sqlite3_int64 nLeafData;        \/* Bytes of leaf page data so far *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafData	tsrc/fts3_write.c	/^  i64 nLeafData;                  \/* Number of bytes of leaf data written *\/$/;"	m	struct:SegmentWriter	file:
nLeafData	tsrc/fts3_write.c	/^  sqlite3_int64 nLeafData;        \/* Bytes of leaf page data so far *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafEst	ext/fts3/fts3_write.c	/^  int nLeafEst;                   \/* Space allocated for leaf blocks *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafEst	sqlite3.c	/^  int nLeafEst;                   \/* Space allocated for leaf blocks *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafEst	tsrc/fts3_write.c	/^  int nLeafEst;                   \/* Space allocated for leaf blocks *\/$/;"	m	struct:IncrmergeWriter	file:
nLeafWritten	ext/fts5/fts5_index.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLeafWritten	fts5.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLeafWritten	sqlite3.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLeafWritten	tsrc/fts5.c	/^  int nLeafWritten;               \/* Number of leaf pages written *\/$/;"	m	struct:Fts5SegWriter	file:
nLevel	ext/fts5/fts5_index.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	fts5.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	sqlite3.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	sqlite3.c	/^  u8 nLevel;                \/* Number of nested loop *\/$/;"	m	struct:WhereInfo	file:
nLevel	src/whereInt.h	/^  u8 nLevel;                \/* Number of nested loop *\/$/;"	m	struct:WhereInfo
nLevel	tsrc/fts5.c	/^  int nLevel;                     \/* Number of levels in this index *\/$/;"	m	struct:Fts5Structure	file:
nLevel	tsrc/whereInt.h	/^  u8 nLevel;                \/* Number of nested loop *\/$/;"	m	struct:WhereInfo
nLine	ext/misc/csv.c	/^  int nLine;             \/* Current line number *\/$/;"	m	struct:CsvReader	file:
nLine	shell.c	/^  int nLine;          \/* Current line number *\/$/;"	m	struct:ImportCtx	file:
nLine	src/shell.c	/^  int nLine;          \/* Current line number *\/$/;"	m	struct:ImportCtx	file:
nLine	tsrc/shell.c	/^  int nLine;          \/* Current line number *\/$/;"	m	struct:ImportCtx	file:
nList	ext/fts3/fts3.c	/^  int nList;$/;"	m	struct:TokenDoclist	file:
nList	ext/fts3/fts3Int.h	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist
nList	sqlite3.c	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist	file:
nList	sqlite3.c	/^  int nList;$/;"	m	struct:TokenDoclist	file:
nList	tsrc/fts3.c	/^  int nList;$/;"	m	struct:TokenDoclist	file:
nList	tsrc/fts3Int.h	/^  int nList;                     \/* Length of position list *\/$/;"	m	struct:Fts3Doclist
nLocal	sqlite3.c	/^  int nLocal;                     \/* Bytes of local payload *\/$/;"	m	struct:StatCell	file:
nLocal	sqlite3.c	/^  u16 nLocal;    \/* Amount of payload held locally, not on overflow *\/$/;"	m	struct:CellInfo	file:
nLocal	src/btreeInt.h	/^  u16 nLocal;    \/* Amount of payload held locally, not on overflow *\/$/;"	m	struct:CellInfo
nLocal	src/dbstat.c	/^  int nLocal;                     \/* Bytes of local payload *\/$/;"	m	struct:StatCell	file:
nLocal	tsrc/btreeInt.h	/^  u16 nLocal;    \/* Amount of payload held locally, not on overflow *\/$/;"	m	struct:CellInfo
nLocal	tsrc/dbstat.c	/^  int nLocal;                     \/* Bytes of local payload *\/$/;"	m	struct:StatCell	file:
nLock	sqlite3.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLock	src/os_unix.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLock	tsrc/os_unix.c	/^  int nLock;                      \/* Number of outstanding file locks *\/$/;"	m	struct:unixInodeInfo	file:
nLookahead	tool/lemon.c	/^  int nLookahead;              \/* Used slots in aLookahead[] *\/$/;"	m	struct:acttab	file:
nLookaheadAlloc	tool/lemon.c	/^  int nLookaheadAlloc;         \/* Slots allocated in aLookahead[] *\/$/;"	m	struct:acttab	file:
nLookaside	sqlite3.c	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config	file:
nLookaside	src/sqliteInt.h	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config
nLookaside	tsrc/sqliteInt.h	/^  int nLookaside;                   \/* Default lookaside buffer count *\/$/;"	m	struct:Sqlite3Config
nLvl	ext/fts5/fts5_index.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nLvl	fts5.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nLvl	sqlite3.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nLvl	tsrc/fts5.c	/^  int nLvl;$/;"	m	struct:Fts5DlidxIter	file:
nMalloc	ext/fts3/fts3_write.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	ext/fts3/fts3_write.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMalloc	sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	sqlite3.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMalloc	tsrc/fts3_write.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentNode	file:
nMalloc	tsrc/fts3_write.c	/^  int nMalloc;                    \/* Size of malloc'd buffer at zMalloc *\/$/;"	m	struct:SegmentWriter	file:
nMatch	ext/fts1/fts1.c	/^  int nMatch;     \/* Total number of matches *\/$/;"	m	struct:Snippet	file:
nMatch	ext/fts2/fts2.c	/^  int nMatch;     \/* Total number of matches *\/$/;"	m	struct:Snippet	file:
nMatch	ext/misc/amatch.c	/^  short int nMatch;     \/* Input characters matched *\/$/;"	m	struct:amatch_word	file:
nMatch	tsrc/fts1.c	/^  int nMatch;     \/* Total number of matches *\/$/;"	m	struct:Snippet	file:
nMatch	tsrc/fts2.c	/^  int nMatch;     \/* Total number of matches *\/$/;"	m	struct:Snippet	file:
nMax	sqlite3.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMax	src/pcache1.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMax	tsrc/pcache1.c	/^  unsigned int nMax;                  \/* Configured "cache_size" value *\/$/;"	m	struct:PCache1	file:
nMaxArg	sqlite3.c	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse	file:
nMaxArg	src/sqliteInt.h	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse
nMaxArg	tsrc/sqliteInt.h	/^  int nMaxArg;         \/* Max args passed to user function by sub-program *\/$/;"	m	struct:Parse
nMaxFrame	test/tt3_checkpoint.c	/^  int nMaxFrame;$/;"	m	struct:CheckpointStarvationCtx	file:
nMaxPage	sqlite3.c	/^  unsigned int nMaxPage;         \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPage	src/pcache1.c	/^  unsigned int nMaxPage;         \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPage	tsrc/pcache1.c	/^  unsigned int nMaxPage;         \/* Sum of nMax for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMaxPendingData	ext/fts3/fts3Int.h	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table
nMaxPendingData	sqlite3.c	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table	file:
nMaxPendingData	tsrc/fts3Int.h	/^  int nMaxPendingData;            \/* Max pending data before flush to disk *\/$/;"	m	struct:Fts3Table
nMaxSorterMmap	sqlite3.c	/^  int nMaxSorterMmap;           \/* Maximum size of regions mapped by sorter *\/$/;"	m	struct:sqlite3	file:
nMaxSorterMmap	src/sqliteInt.h	/^  int nMaxSorterMmap;           \/* Maximum size of regions mapped by sorter *\/$/;"	m	struct:sqlite3
nMaxSorterMmap	tsrc/sqliteInt.h	/^  int nMaxSorterMmap;           \/* Maximum size of regions mapped by sorter *\/$/;"	m	struct:sqlite3
nMem	sqlite3.c	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram	file:
nMem	sqlite3.c	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame	file:
nMem	sqlite3.c	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe	file:
nMem	sqlite3.c	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse	file:
nMem	src/sqliteInt.h	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse
nMem	src/vdbe.h	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram
nMem	src/vdbeInt.h	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame
nMem	src/vdbeInt.h	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe
nMem	tsrc/sqliteInt.h	/^  int nMem;            \/* Number of memory cells used so far *\/$/;"	m	struct:Parse
nMem	tsrc/vdbe.h	/^  int nMem;                     \/* Number of memory cells required *\/$/;"	m	struct:SubProgram
nMem	tsrc/vdbeInt.h	/^  int nMem;               \/* Number of entries in aMem *\/$/;"	m	struct:VdbeFrame
nMem	tsrc/vdbeInt.h	/^  int nMem;               \/* Number of memory locations currently allocated *\/$/;"	m	struct:Vdbe
nMemory	sqlite3.c	/^  int nMemory;                    \/* Size of list.aMemory allocation in bytes *\/$/;"	m	struct:VdbeSorter	file:
nMemory	src/vdbesort.c	/^  int nMemory;                    \/* Size of list.aMemory allocation in bytes *\/$/;"	m	struct:VdbeSorter	file:
nMemory	tsrc/vdbesort.c	/^  int nMemory;                    \/* Size of list.aMemory allocation in bytes *\/$/;"	m	struct:VdbeSorter	file:
nMerge	ext/fts5/fts5_index.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMerge	fts5.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMerge	sqlite3.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMerge	tsrc/fts5.c	/^  int nMerge;                     \/* Number of segments in incr-merge *\/$/;"	m	struct:Fts5StructureLevel	file:
nMin	sqlite3.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMin	src/pcache1.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMin	tsrc/pcache1.c	/^  unsigned int nMin;                  \/* Minimum number of pages reserved *\/$/;"	m	struct:PCache1	file:
nMinPage	sqlite3.c	/^  unsigned int nMinPage;         \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMinPage	src/pcache1.c	/^  unsigned int nMinPage;         \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMinPage	tsrc/pcache1.c	/^  unsigned int nMinPage;         \/* Sum of nMin for purgeable caches *\/$/;"	m	struct:PGroup	file:
nMmapOut	sqlite3.c	/^  int nMmapOut;               \/* Number of mmap pages currently outstanding *\/$/;"	m	struct:Pager	file:
nMmapOut	src/pager.c	/^  int nMmapOut;               \/* Number of mmap pages currently outstanding *\/$/;"	m	struct:Pager	file:
nMmapOut	tsrc/pager.c	/^  int nMmapOut;               \/* Number of mmap pages currently outstanding *\/$/;"	m	struct:Pager	file:
nModuleArg	sqlite3.c	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table	file:
nModuleArg	src/sqliteInt.h	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table
nModuleArg	tsrc/sqliteInt.h	/^  int nModuleArg;      \/* Number of arguments to the module *\/$/;"	m	struct:Table
nMxPayload	sqlite3.c	/^  int nMxPayload;                 \/* Largest payload of any cell on this page *\/$/;"	m	struct:StatPage	file:
nMxPayload	sqlite3.c	/^  int nMxPayload;                 \/* Value of 'mx_payload' column *\/$/;"	m	struct:StatCursor	file:
nMxPayload	src/dbstat.c	/^  int nMxPayload;                 \/* Largest payload of any cell on this page *\/$/;"	m	struct:StatPage	file:
nMxPayload	src/dbstat.c	/^  int nMxPayload;                 \/* Value of 'mx_payload' column *\/$/;"	m	struct:StatCursor	file:
nMxPayload	tsrc/dbstat.c	/^  int nMxPayload;                 \/* Largest payload of any cell on this page *\/$/;"	m	struct:StatPage	file:
nMxPayload	tsrc/dbstat.c	/^  int nMxPayload;                 \/* Value of 'mx_payload' column *\/$/;"	m	struct:StatCursor	file:
nName	ext/async/sqlite3async.c	/^  int nName;                 \/* Number of characters in zName *\/$/;"	m	struct:AsyncFileData	file:
nName	sqlite3.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nName	src/os_unix.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nName	src/test_multiplex.c	/^  int nName;                       \/* Length of base filename *\/$/;"	m	struct:multiplexGroup	file:
nName	tsrc/os_unix.c	/^  int nName;                    \/* Length of the zCanonicalName[] string *\/$/;"	m	struct:vxworksFileId	file:
nNear	ext/fts3/fts3Int.h	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr
nNear	ext/fts3/fts3_test.c	/^  int nNear;                      \/* Preceding NEAR value *\/$/;"	m	struct:NearPhrase	file:
nNear	ext/fts5/fts5_expr.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNear	fts5.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNear	sqlite3.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNear	sqlite3.c	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr	file:
nNear	tsrc/fts3Int.h	/^  int nNear;                 \/* Valid if eType==FTSQUERY_NEAR *\/$/;"	m	struct:Fts3Expr
nNear	tsrc/fts5.c	/^  int nNear;                      \/* NEAR parameter *\/$/;"	m	struct:Fts5ExprNearset	file:
nNeeded	sqlite3.c	/^  int nNeeded;         \/* Total bytes that could not be allocated *\/$/;"	m	struct:ReusableSpace	file:
nNeeded	src/vdbeaux.c	/^  int nNeeded;         \/* Total bytes that could not be allocated *\/$/;"	m	struct:ReusableSpace	file:
nNeeded	tsrc/vdbeaux.c	/^  int nNeeded;         \/* Total bytes that could not be allocated *\/$/;"	m	struct:ReusableSpace	file:
nNest	ext/fts3/fts3_expr.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNest	sqlite3.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNest	tsrc/fts3_expr.c	/^  int nNest;                          \/* Number of nested brackets *\/$/;"	m	struct:ParseContext	file:
nNode	ext/fts3/fts3_write.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNode	ext/fts3/fts3_write.c	/^  int nNode;$/;"	m	struct:NodeReader	file:
nNode	ext/misc/json1.c	/^  u32 nNode;         \/* Number of slots of aNode[] used *\/$/;"	m	struct:JsonParse	file:
nNode	sqlite3.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNode	sqlite3.c	/^  int nNode;$/;"	m	struct:NodeReader	file:
nNode	sqlite3.c	/^  u32 nNode;         \/* Number of slots of aNode[] used *\/$/;"	m	struct:JsonParse	file:
nNode	tsrc/fts3_write.c	/^  int nNode;                      \/* Size of buffer at aNode (or 0) *\/$/;"	m	struct:Fts3SegReader	file:
nNode	tsrc/fts3_write.c	/^  int nNode;$/;"	m	struct:NodeReader	file:
nNode	tsrc/json1.c	/^  u32 nNode;         \/* Number of slots of aNode[] used *\/$/;"	m	struct:JsonParse	file:
nNodeSize	ext/fts3/fts3Int.h	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table
nNodeSize	sqlite3.c	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table	file:
nNodeSize	tsrc/fts3Int.h	/^  int nNodeSize;                  \/* Soft limit for node size *\/$/;"	m	struct:Fts3Table
nNtAct	tool/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
nOBSat	sqlite3.c	/^  i8 nOBSat;                \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:WhereInfo	file:
nOBSat	sqlite3.c	/^  int nOBSat;           \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:SortCtx	file:
nOBSat	src/select.c	/^  int nOBSat;           \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:SortCtx	file:
nOBSat	src/whereInt.h	/^  i8 nOBSat;                \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:WhereInfo
nOBSat	tsrc/select.c	/^  int nOBSat;           \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:SortCtx	file:
nOBSat	tsrc/whereInt.h	/^  i8 nOBSat;                \/* Number of ORDER BY terms satisfied by indices *\/$/;"	m	struct:WhereInfo
nOcc	ext/fts3/fts3_aux.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOcc	sqlite3.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOcc	tsrc/fts3_aux.c	/^    sqlite3_int64 nOcc;           \/* 'occurrences' values for current csr row *\/$/;"	m	struct:Fts3auxCursor::Fts3auxColstats	file:
nOffset	ext/fts1/fts1.c	/^  int nOffset;    \/* strlen(zOffset) *\/$/;"	m	struct:Snippet	file:
nOffset	ext/fts2/fts2.c	/^  int nOffset;    \/* strlen(zOffset) *\/$/;"	m	struct:Snippet	file:
nOffset	tsrc/fts1.c	/^  int nOffset;    \/* strlen(zOffset) *\/$/;"	m	struct:Snippet	file:
nOffset	tsrc/fts2.c	/^  int nOffset;    \/* strlen(zOffset) *\/$/;"	m	struct:Snippet	file:
nOffsetList	ext/fts3/fts3_write.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOffsetList	sqlite3.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOffsetList	tsrc/fts3_write.c	/^  int nOffsetList;                \/* For descending pending seg-readers only *\/$/;"	m	struct:Fts3SegReader	file:
nOldOff	ext/session/sqlite3session.c	/^  int nOldOff;$/;"	m	struct:SessionDiffCtx	file:
nOldOff	sqlite3.c	/^  int nOldOff;$/;"	m	struct:SessionDiffCtx	file:
nOldOff	tsrc/sqlite3session.c	/^  int nOldOff;$/;"	m	struct:SessionDiffCtx	file:
nOnce	sqlite3.c	/^  int nOnce;                    \/* Number of OP_Once instructions *\/$/;"	m	struct:SubProgram	file:
nOnce	sqlite3.c	/^  int nOnce;           \/* Number of OP_Once instructions so far *\/$/;"	m	struct:Parse	file:
nOnce	src/sqliteInt.h	/^  int nOnce;           \/* Number of OP_Once instructions so far *\/$/;"	m	struct:Parse
nOnce	src/vdbe.h	/^  int nOnce;                    \/* Number of OP_Once instructions *\/$/;"	m	struct:SubProgram
nOnce	tsrc/sqliteInt.h	/^  int nOnce;           \/* Number of OP_Once instructions so far *\/$/;"	m	struct:Parse
nOnce	tsrc/vdbe.h	/^  int nOnce;                    \/* Number of OP_Once instructions *\/$/;"	m	struct:SubProgram
nOnceFlag	sqlite3.c	/^  int nOnceFlag;          \/* Number of entries in aOnceFlag *\/$/;"	m	struct:VdbeFrame	file:
nOnceFlag	sqlite3.c	/^  int nOnceFlag;          \/* Size of array aOnceFlag[] *\/$/;"	m	struct:Vdbe	file:
nOnceFlag	src/vdbeInt.h	/^  int nOnceFlag;          \/* Number of entries in aOnceFlag *\/$/;"	m	struct:VdbeFrame
nOnceFlag	src/vdbeInt.h	/^  int nOnceFlag;          \/* Size of array aOnceFlag[] *\/$/;"	m	struct:Vdbe
nOnceFlag	tsrc/vdbeInt.h	/^  int nOnceFlag;          \/* Number of entries in aOnceFlag *\/$/;"	m	struct:VdbeFrame
nOnceFlag	tsrc/vdbeInt.h	/^  int nOnceFlag;          \/* Size of array aOnceFlag[] *\/$/;"	m	struct:Vdbe
nOomBrkpt	tool/fuzzershell.c	/^  int nOomBrkpt;                   \/* Number of calls to oomFault() *\/$/;"	m	struct:GlobalVars	file:
nOomFault	tool/fuzzershell.c	/^  int nOomFault;                   \/* Increments for each OOM fault *\/$/;"	m	struct:GlobalVars	file:
nOp	sqlite3.c	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram	file:
nOp	sqlite3.c	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe	file:
nOp	sqlite3.c	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame	file:
nOp	src/vdbe.h	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram
nOp	src/vdbeInt.h	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe
nOp	src/vdbeInt.h	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame
nOp	tsrc/vdbe.h	/^  int nOp;                      \/* Elements in aOp[] *\/$/;"	m	struct:SubProgram
nOp	tsrc/vdbeInt.h	/^  int nOp;                \/* Number of instructions in the program *\/$/;"	m	struct:Vdbe
nOp	tsrc/vdbeInt.h	/^  int nOp;                \/* Size of aOp array *\/$/;"	m	struct:VdbeFrame
nOpAlloc	sqlite3.c	/^  int nOpAlloc;        \/* Number of slots allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
nOpAlloc	src/sqliteInt.h	/^  int nOpAlloc;        \/* Number of slots allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse
nOpAlloc	tsrc/sqliteInt.h	/^  int nOpAlloc;        \/* Number of slots allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse
nOrderBy	sqlite3.c	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info	file:
nOrderBy	sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrderBy	tsrc/sqlite3.h	/^  int nOrderBy;              \/* Number of terms in the ORDER BY clause *\/$/;"	m	struct:sqlite3_index_info
nOrig	sqlite3.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOrig	src/pager.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOrig	tsrc/pager.c	/^  Pgno nOrig;                  \/* Original number of pages in file *\/$/;"	m	struct:PagerSavepoint	file:
nOther	sqlite3.c	/^  int nOther;      \/* Number of references to columns in other FROM clauses *\/$/;"	m	struct:SrcCount	file:
nOther	src/expr.c	/^  int nOther;      \/* Number of references to columns in other FROM clauses *\/$/;"	m	struct:SrcCount	file:
nOther	tsrc/expr.c	/^  int nOther;      \/* Number of references to columns in other FROM clauses *\/$/;"	m	struct:SrcCount	file:
nOut	sqlite3.c	/^  LogEst nOut;          \/* Estimated number of output rows *\/$/;"	m	struct:WhereLoop	file:
nOut	sqlite3.c	/^  LogEst nOut;        \/* Number of outputs for this subquery *\/$/;"	m	struct:WhereOrCost	file:
nOut	sqlite3.c	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside	file:
nOut	src/sqliteInt.h	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside
nOut	src/whereInt.h	/^  LogEst nOut;          \/* Estimated number of output rows *\/$/;"	m	struct:WhereLoop
nOut	src/whereInt.h	/^  LogEst nOut;        \/* Number of outputs for this subquery *\/$/;"	m	struct:WhereOrCost
nOut	tsrc/sqliteInt.h	/^  int nOut;               \/* Number of buffers currently checked out *\/$/;"	m	struct:Lookaside
nOut	tsrc/whereInt.h	/^  LogEst nOut;          \/* Estimated number of output rows *\/$/;"	m	struct:WhereLoop
nOut	tsrc/whereInt.h	/^  LogEst nOut;        \/* Number of outputs for this subquery *\/$/;"	m	struct:WhereOrCost
nOutput	ext/fts5/fts5_tokenize.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOutput	fts5.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOutput	sqlite3.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOutput	tsrc/fts5.c	/^  int nOutput;$/;"	m	struct:PorterRule	file:
nOverflow	sqlite3.c	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage	file:
nOverflow	src/btreeInt.h	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage
nOverflow	tsrc/btreeInt.h	/^  u8 nOverflow;        \/* Number of overflow cell bodies in aCell[] *\/$/;"	m	struct:MemPage
nOvfl	ext/fts3/fts3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nOvfl	sqlite3.c	/^  int nOvfl;                      \/* Entries in aOvfl[] *\/$/;"	m	struct:StatCell	file:
nOvfl	sqlite3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nOvfl	src/dbstat.c	/^  int nOvfl;                      \/* Entries in aOvfl[] *\/$/;"	m	struct:StatCell	file:
nOvfl	tsrc/dbstat.c	/^  int nOvfl;                      \/* Entries in aOvfl[] *\/$/;"	m	struct:StatCell	file:
nOvfl	tsrc/fts3.c	/^  int nOvfl;                      \/* Number of overflow pages to load doclist *\/$/;"	m	struct:Fts3TokenAndCost	file:
nOvflAlloc	sqlite3.c	/^  int nOvflAlloc;           \/* Allocated size of aOverflow[] array *\/$/;"	m	struct:BtCursor	file:
nOvflAlloc	src/btreeInt.h	/^  int nOvflAlloc;           \/* Allocated size of aOverflow[] array *\/$/;"	m	struct:BtCursor
nOvflAlloc	tsrc/btreeInt.h	/^  int nOvflAlloc;           \/* Allocated size of aOverflow[] array *\/$/;"	m	struct:BtCursor
nPMA	sqlite3.c	/^  int nPMA;                       \/* Number of PMAs currently in file *\/$/;"	m	struct:SortSubtask	file:
nPMA	src/vdbesort.c	/^  int nPMA;                       \/* Number of PMAs currently in file *\/$/;"	m	struct:SortSubtask	file:
nPMA	tsrc/vdbesort.c	/^  int nPMA;                       \/* Number of PMAs currently in file *\/$/;"	m	struct:SortSubtask	file:
nPSample	sqlite3.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat4Accum	file:
nPSample	src/analyze.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat4Accum	file:
nPSample	tsrc/analyze.c	/^  tRowcnt nPSample;         \/* How often to do a periodic sample *\/$/;"	m	struct:Stat4Accum	file:
nPage	ext/misc/scrub.c	/^  u32 nPage;               \/* Number of pages *\/$/;"	m	struct:ScrubState	file:
nPage	sqlite3.c	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk	file:
nPage	sqlite3.c	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
nPage	sqlite3.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	sqlite3.c	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared	file:
nPage	sqlite3.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPage	src/btreeInt.h	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk
nPage	src/btreeInt.h	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared
nPage	src/pcache1.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPage	src/sqliteInt.h	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config
nPage	src/test_journal.c	/^  u32 nPage;               \/* Size of file in pages when transaction started *\/$/;"	m	struct:jt_file	file:
nPage	src/wal.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPage	tsrc/btreeInt.h	/^  Pgno nPage;       \/* Number of pages in the database *\/$/;"	m	struct:IntegrityCk
nPage	tsrc/btreeInt.h	/^  u32 nPage;            \/* Number of pages in the database *\/$/;"	m	struct:BtShared
nPage	tsrc/pcache1.c	/^  unsigned int nPage;                 \/* Total number of pages in apHash *\/$/;"	m	struct:PCache1	file:
nPage	tsrc/sqliteInt.h	/^  int nPage;                        \/* Number of pages in pPage[] *\/$/;"	m	struct:Sqlite3Config
nPage	tsrc/wal.c	/^  u32 nPage;                      \/* Size of database in pages *\/$/;"	m	struct:WalIndexHdr	file:
nPagecount	sqlite3.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nPagecount	src/backup.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nPagecount	tsrc/backup.c	/^  Pgno nPagecount;         \/* Total number of pages to copy *\/$/;"	m	struct:sqlite3_backup	file:
nPagesize	src/test_journal.c	/^  u32 nPagesize;           \/* Page size when transaction started *\/$/;"	m	struct:jt_file	file:
nParam	ext/rtree/rtree.c	/^  int nParam;                 \/* Number of parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
nParam	ext/rtree/sqlite3rtree.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	ext/rtree/sqlite3rtree.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nParam	sqlite3.c	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
nParam	sqlite3.c	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
nParam	sqlite3.c	/^  int nParam;                 \/* Number of parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
nParam	sqlite3.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nParam	tsrc/rtree.c	/^  int nParam;                 \/* Number of parameters to the SQL function *\/$/;"	m	struct:RtreeMatchArg	file:
nParam	tsrc/sqlite3.h	/^  int nParam;                       \/* Number of function parameters *\/$/;"	m	struct:sqlite3_rtree_query_info
nParam	tsrc/sqlite3.h	/^  int nParam;                     \/* Size of array aParam[] *\/$/;"	m	struct:sqlite3_rtree_geometry
nParm	src/tclsqlite.c	/^  int nParm;               \/* Size of apParm array *\/$/;"	m	struct:SqlPreparedStmt	file:
nParm	tsrc/tclsqlite.c	/^  int nParm;               \/* Size of apParm array *\/$/;"	m	struct:SqlPreparedStmt	file:
nPattern	ext/misc/spellfix.c	/^  int nPattern;                    \/* Length of zPattern *\/$/;"	m	struct:MatchQuery	file:
nPayload	sqlite3.c	/^  int nPayload;                   \/* Value of 'payload' column *\/$/;"	m	struct:StatCursor	file:
nPayload	sqlite3.c	/^  u32 nPayload;  \/* Bytes of payload *\/$/;"	m	struct:CellInfo	file:
nPayload	src/btreeInt.h	/^  u32 nPayload;  \/* Bytes of payload *\/$/;"	m	struct:CellInfo
nPayload	src/dbstat.c	/^  int nPayload;                   \/* Value of 'payload' column *\/$/;"	m	struct:StatCursor	file:
nPayload	tsrc/btreeInt.h	/^  u32 nPayload;  \/* Bytes of payload *\/$/;"	m	struct:CellInfo
nPayload	tsrc/dbstat.c	/^  int nPayload;                   \/* Value of 'payload' column *\/$/;"	m	struct:StatCursor	file:
nPendingData	ext/fts2/fts2.c	/^  int nPendingData;$/;"	m	struct:fulltext_vtab	file:
nPendingData	ext/fts3/fts3Int.h	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table
nPendingData	ext/fts5/fts5_index.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPendingData	fts5.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPendingData	sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table	file:
nPendingData	sqlite3.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPendingData	tsrc/fts2.c	/^  int nPendingData;$/;"	m	struct:fulltext_vtab	file:
nPendingData	tsrc/fts3Int.h	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts3Table
nPendingData	tsrc/fts5.c	/^  int nPendingData;               \/* Current bytes of pending data *\/$/;"	m	struct:Fts5Index	file:
nPgsz	ext/fts3/fts3Int.h	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table
nPgsz	sqlite3.c	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table	file:
nPgsz	tsrc/fts3Int.h	/^  int nPgsz;                      \/* Page size for host database *\/$/;"	m	struct:Fts3Table
nPhaseOneStep	ext/rbu/sqlite3rbu.c	/^  i64 nPhaseOneStep;$/;"	m	struct:RbuState	file:
nPhaseOneStep	ext/rbu/sqlite3rbu.c	/^  i64 nPhaseOneStep;$/;"	m	struct:sqlite3rbu	file:
nPhaseOneStep	sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:RbuState	file:
nPhaseOneStep	sqlite3.c	/^  i64 nPhaseOneStep;$/;"	m	struct:sqlite3rbu	file:
nPhaseOneStep	tsrc/sqlite3rbu.c	/^  i64 nPhaseOneStep;$/;"	m	struct:RbuState	file:
nPhaseOneStep	tsrc/sqlite3rbu.c	/^  i64 nPhaseOneStep;$/;"	m	struct:sqlite3rbu	file:
nPhrase	ext/fts1/fts1.c	/^  short int nPhrase; \/* How many following terms are part of the same phrase *\/$/;"	m	struct:QueryTerm	file:
nPhrase	ext/fts2/fts2.c	/^  short int nPhrase; \/* How many following terms are part of the same phrase *\/$/;"	m	struct:QueryTerm	file:
nPhrase	ext/fts3/fts3Int.h	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor
nPhrase	ext/fts3/fts3_snippet.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	ext/fts3/fts3_snippet.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	ext/fts3/fts3_snippet.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPhrase	ext/fts5/fts5_aux.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	ext/fts5/fts5_expr.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	ext/fts5/fts5_expr.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	ext/fts5/fts5_expr.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPhrase	ext/fts5/fts5_test_mi.c	/^  int nPhrase;                    \/* Number of phrases in FTS5 query *\/$/;"	m	struct:Fts5MatchinfoCtx	file:
nPhrase	fts5.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	fts5.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	fts5.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	fts5.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPhrase	sqlite3.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPhrase	tsrc/fts1.c	/^  short int nPhrase; \/* How many following terms are part of the same phrase *\/$/;"	m	struct:QueryTerm	file:
nPhrase	tsrc/fts2.c	/^  short int nPhrase; \/* How many following terms are part of the same phrase *\/$/;"	m	struct:QueryTerm	file:
nPhrase	tsrc/fts3Int.h	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:Fts3Cursor
nPhrase	tsrc/fts3_snippet.c	/^  int nPhrase;                    \/* Number of matchable phrases in query *\/$/;"	m	struct:MatchInfo	file:
nPhrase	tsrc/fts3_snippet.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:SnippetIter	file:
nPhrase	tsrc/fts3_snippet.c	/^  int nPhrase;                    \/* Number of phrases seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nPhrase	tsrc/fts5.c	/^  int nPhrase;                    \/* Number of entries in aPhrase[] array *\/$/;"	m	struct:Fts5ExprNearset	file:
nPhrase	tsrc/fts5.c	/^  int nPhrase;                    \/* Number of phrases in expression *\/$/;"	m	struct:Fts5Expr	file:
nPhrase	tsrc/fts5.c	/^  int nPhrase;                    \/* Number of phrases in query *\/$/;"	m	struct:Fts5Bm25Data	file:
nPhrase	tsrc/fts5.c	/^  int nPhrase;                    \/* Size of apPhrase array *\/$/;"	m	struct:Fts5Parse	file:
nPinned	src/test_pcache.c	/^  int nPinned;              \/* Number of pinned slots in a[] *\/$/;"	m	struct:testpcache	file:
nPoint	ext/rtree/rtree.c	/^  int nPoint;                       \/* Number of slots used in aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPoint	sqlite3.c	/^  int nPoint;                       \/* Number of slots used in aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPoint	tsrc/rtree.c	/^  int nPoint;                       \/* Number of slots used in aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPointAlloc	ext/rtree/rtree.c	/^  int nPointAlloc;                  \/* Number of slots allocated for aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPointAlloc	sqlite3.c	/^  int nPointAlloc;                  \/* Number of slots allocated for aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPointAlloc	tsrc/rtree.c	/^  int nPointAlloc;                  \/* Number of slots allocated for aPoint[] *\/$/;"	m	struct:RtreeCursor	file:
nPool	sqlite3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPool	src/mem3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPool	tsrc/mem3.c	/^  u32 nPool;$/;"	m	struct:Mem3Global	file:
nPopulate	ext/fts3/fts3_write.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPopulate	sqlite3.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPopulate	tsrc/fts3_write.c	/^  int nPopulate;                  \/* If >0, bytes of buffer aNode[] loaded *\/$/;"	m	struct:Fts3SegReader	file:
nPos	ext/fts5/fts5_index.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPos	fts5.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPos	sqlite3.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPos	tsrc/fts5.c	/^  int nPos;                       \/* Number of bytes in current position list *\/$/;"	m	struct:Fts5SegIter	file:
nPoslist	ext/fts5/fts5_index.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPoslist	fts5.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPoslist	sqlite3.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPoslist	tsrc/fts5.c	/^  int nPoslist;$/;"	m	struct:Fts5DoclistIter	file:
nPrefix	ext/fts3/fts3Int.h	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index
nPrefix	ext/fts5/fts5Int.h	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config
nPrefix	ext/misc/nextchar.c	/^  int nPrefix;                      \/* Size of zPrefix in bytes *\/$/;"	m	struct:nextCharContext	file:
nPrefix	fts5.c	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config	file:
nPrefix	sqlite3.c	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index	file:
nPrefix	sqlite3.c	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config	file:
nPrefix	tsrc/fts3Int.h	/^    int nPrefix;                  \/* Prefix length (0 for main terms index) *\/$/;"	m	struct:Fts3Table::Fts3Index
nPrefix	tsrc/fts5.c	/^  int nPrefix;                    \/* Number of prefix indexes *\/$/;"	m	struct:Fts5Config	file:
nProgress	ext/rbu/sqlite3rbu.c	/^  i64 nProgress;$/;"	m	struct:RbuState	file:
nProgress	ext/rbu/sqlite3rbu.c	/^  int nProgress;                  \/* Rows processed for all objects *\/$/;"	m	struct:sqlite3rbu	file:
nProgress	sqlite3.c	/^  i64 nProgress;$/;"	m	struct:RbuState	file:
nProgress	sqlite3.c	/^  int nProgress;                  \/* Rows processed for all objects *\/$/;"	m	struct:sqlite3rbu	file:
nProgress	tsrc/sqlite3rbu.c	/^  i64 nProgress;$/;"	m	struct:RbuState	file:
nProgress	tsrc/sqlite3rbu.c	/^  int nProgress;                  \/* Rows processed for all objects *\/$/;"	m	struct:sqlite3rbu	file:
nProgressOps	sqlite3.c	/^  unsigned nProgressOps;        \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3	file:
nProgressOps	src/sqliteInt.h	/^  unsigned nProgressOps;        \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3
nProgressOps	tsrc/sqliteInt.h	/^  unsigned nProgressOps;        \/* Number of opcodes for progress callback *\/$/;"	m	struct:sqlite3
nQueryLoop	sqlite3.c	/^  u32 nQueryLoop;      \/* Est number of iterations of a query (10*log2(N)) *\/$/;"	m	struct:Parse	file:
nQueryLoop	src/sqliteInt.h	/^  u32 nQueryLoop;      \/* Est number of iterations of a query (10*log2(N)) *\/$/;"	m	struct:Parse
nQueryLoop	tsrc/sqliteInt.h	/^  u32 nQueryLoop;      \/* Est number of iterations of a query (10*log2(N)) *\/$/;"	m	struct:Parse
nRangeReg	sqlite3.c	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse	file:
nRangeReg	src/sqliteInt.h	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse
nRangeReg	tsrc/sqliteInt.h	/^  int nRangeReg;       \/* Size of the temporary register block *\/$/;"	m	struct:Parse
nRankArg	ext/fts5/fts5_main.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRankArg	fts5.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRankArg	sqlite3.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRankArg	tsrc/fts5.c	/^  int nRankArg;                   \/* Number of trailing arguments for rank() *\/$/;"	m	struct:Fts5Cursor	file:
nRbu	ext/rbu/sqlite3rbu.c	/^  int nRbu;                       \/* Number of RBU VFS in the stack *\/$/;"	m	struct:sqlite3rbu	file:
nRbu	sqlite3.c	/^  int nRbu;                       \/* Number of RBU VFS in the stack *\/$/;"	m	struct:sqlite3rbu	file:
nRbu	tsrc/sqlite3rbu.c	/^  int nRbu;                       \/* Number of RBU VFS in the stack *\/$/;"	m	struct:sqlite3rbu	file:
nRead	ext/fts5/fts5_index.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	fts5.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	sqlite3.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	sqlite3.c	/^  int nRead;                  \/* Database pages read *\/$/;"	m	struct:Pager	file:
nRead	src/pager.c	/^  int nRead;                  \/* Database pages read *\/$/;"	m	struct:Pager	file:
nRead	tsrc/fts5.c	/^  int nRead;                      \/* Total number of blocks read *\/$/;"	m	struct:Fts5Index	file:
nRead	tsrc/pager.c	/^  int nRead;                  \/* Database pages read *\/$/;"	m	struct:Pager	file:
nReaders	sqlite3.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nReaders	src/os_win.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nReaders	tsrc/os_win.c	/^  int nReaders;       \/* Number of reader locks obtained *\/$/;"	m	struct:winceLock	file:
nReal	src/test_multiplex.c	/^  int nReal;                       \/* Number of chunks *\/$/;"	m	struct:multiplexGroup	file:
nRec	sqlite3.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRec	src/pager.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRec	tsrc/pager.c	/^  int nRec;                   \/* Pages journalled since last j-header written *\/$/;"	m	struct:Pager	file:
nRecValid	sqlite3.c	/^  int nRecValid;            \/* Number of valid fields currently in pRec *\/$/;"	m	struct:WhereLoopBuilder	file:
nRecValid	src/whereInt.h	/^  int nRecValid;            \/* Number of valid fields currently in pRec *\/$/;"	m	struct:WhereLoopBuilder
nRecValid	tsrc/whereInt.h	/^  int nRecValid;            \/* Number of valid fields currently in pRec *\/$/;"	m	struct:WhereLoopBuilder
nRecord	ext/session/sqlite3session.c	/^  int nRecord;                    \/* Number of bytes in buffer aRecord[] *\/$/;"	m	struct:SessionChange	file:
nRecord	sqlite3.c	/^  int nRecord;                    \/* Number of bytes in buffer aRecord[] *\/$/;"	m	struct:SessionChange	file:
nRecord	tsrc/sqlite3session.c	/^  int nRecord;                    \/* Number of bytes in buffer aRecord[] *\/$/;"	m	struct:SessionChange	file:
nRecyclable	sqlite3.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRecyclable	src/pcache1.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRecyclable	tsrc/pcache1.c	/^  unsigned int nRecyclable;           \/* Number of pages in the LRU list *\/$/;"	m	struct:PCache1	file:
nRef	ext/fts5/fts5_index.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	ext/misc/vfslog.c	/^  int nRef;                       \/* Number of references to this object *\/$/;"	m	struct:VLogLog	file:
nRef	ext/rtree/rtree.c	/^  int nRef;                   \/* Number of references to this node *\/$/;"	m	struct:RtreeNode	file:
nRef	fts5.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	sqlite3.c	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr	file:
nRef	sqlite3.c	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab	file:
nRef	sqlite3.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	sqlite3.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	sqlite3.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	sqlite3.c	/^  int nRef;                   \/* Number of references to this node *\/$/;"	m	struct:RtreeNode	file:
nRef	sqlite3.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	sqlite3.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	sqlite3.c	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable	file:
nRef	sqlite3.c	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared	file:
nRef	sqlite3.c	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext	file:
nRef	sqlite3.c	/^  int nRef;$/;"	m	struct:FuncDestructor	file:
nRef	sqlite3.c	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table	file:
nRef	sqlite3.c	/^  u32 nRef;           \/* Number of references to this KeyInfo object *\/$/;"	m	struct:KeyInfo	file:
nRef	sqlite3.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	sqlite3.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	sqlite3.h	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
nRef	src/btreeInt.h	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared
nRef	src/mutex_unix.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	src/mutex_w32.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	src/os_unix.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	src/os_unix.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	src/os_unix.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	src/os_win.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	src/pcache.h	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr
nRef	src/sqliteInt.h	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable
nRef	src/sqliteInt.h	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext
nRef	src/sqliteInt.h	/^  int nRef;$/;"	m	struct:FuncDestructor
nRef	src/sqliteInt.h	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table
nRef	src/sqliteInt.h	/^  u32 nRef;           \/* Number of references to this KeyInfo object *\/$/;"	m	struct:KeyInfo
nRef	src/test_onefile.c	/^  int nRef;                   \/* Number of pointers to this structure *\/$/;"	m	struct:fs_real_file	file:
nRef	src/test_quota.c	/^  int nRef;                       \/* Number of times this file is open *\/$/;"	m	struct:quotaFile	file:
nRef	test/fuzzcheck.c	/^  int nRef;               \/* Number of references to this file *\/$/;"	m	struct:VFile	file:
nRef	tsrc/btreeInt.h	/^  int nRef;             \/* Number of references to this structure *\/$/;"	m	struct:BtShared
nRef	tsrc/fts5.c	/^  int nRef;                       \/* Object reference count *\/$/;"	m	struct:Fts5Structure	file:
nRef	tsrc/mutex_unix.c	/^  volatile int nRef;         \/* Number of entrances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	tsrc/mutex_w32.c	/^  volatile int nRef;         \/* Number of enterances *\/$/;"	m	struct:sqlite3_mutex	file:
nRef	tsrc/os_unix.c	/^  int nRef;                       \/* Number of pointers to this structure *\/$/;"	m	struct:unixInodeInfo	file:
nRef	tsrc/os_unix.c	/^  int nRef;                     \/* Number of references to this one *\/$/;"	m	struct:vxworksFileId	file:
nRef	tsrc/os_unix.c	/^  int nRef;                  \/* Number of unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
nRef	tsrc/os_win.c	/^  int nRef;                  \/* Number of winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
nRef	tsrc/pcache.h	/^  i16 nRef;                      \/* Number of users of this page *\/$/;"	m	struct:PgHdr
nRef	tsrc/rtree.c	/^  int nRef;                   \/* Number of references to this node *\/$/;"	m	struct:RtreeNode	file:
nRef	tsrc/sqlite3.h	/^  int nRef;                       \/* Number of open cursors *\/$/;"	m	struct:sqlite3_vtab
nRef	tsrc/sqliteInt.h	/^  int nRef;                 \/* Number of pointers to this structure *\/$/;"	m	struct:VTable
nRef	tsrc/sqliteInt.h	/^  int nRef;            \/* Number of names resolved by this context *\/$/;"	m	struct:NameContext
nRef	tsrc/sqliteInt.h	/^  int nRef;$/;"	m	struct:FuncDestructor
nRef	tsrc/sqliteInt.h	/^  u16 nRef;            \/* Number of pointers to this Table *\/$/;"	m	struct:Table
nRef	tsrc/sqliteInt.h	/^  u32 nRef;           \/* Number of references to this KeyInfo object *\/$/;"	m	struct:KeyInfo
nRefInitMutex	sqlite3.c	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config	file:
nRefInitMutex	src/sqliteInt.h	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config
nRefInitMutex	tsrc/sqliteInt.h	/^  int nRefInitMutex;                \/* Number of users of pInitMutex *\/$/;"	m	struct:Sqlite3Config
nRefSqlite3	src/test3.c	/^static int nRefSqlite3 = 0;$/;"	v	file:
nRefSum	sqlite3.c	/^  int nRefSum;                        \/* Sum of ref counts over all pages *\/$/;"	m	struct:PCache	file:
nRefSum	src/pcache.c	/^  int nRefSum;                        \/* Sum of ref counts over all pages *\/$/;"	m	struct:PCache	file:
nRefSum	tsrc/pcache.c	/^  int nRefSum;                        \/* Sum of ref counts over all pages *\/$/;"	m	struct:PCache	file:
nRegion	sqlite3.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	sqlite3.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRegion	src/os_unix.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRegion	src/os_win.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRegion	tsrc/os_unix.c	/^  u16 nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:unixShmNode	file:
nRegion	tsrc/os_win.c	/^  int nRegion;               \/* Size of array apRegion *\/$/;"	m	struct:winShmNode	file:
nRemaining	sqlite3.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nRemaining	src/backup.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nRemaining	tsrc/backup.c	/^  Pgno nRemaining;         \/* Number of pages left to copy *\/$/;"	m	struct:sqlite3_backup	file:
nRepeat	src/test_malloc.c	/^  int nRepeat;            \/* Number of times to repeat the failure *\/$/;"	m	struct:MemFault	file:
nReply	tool/rollback-test.c	/^static int nReply = 0;$/;"	v	file:
nResColumn	sqlite3.c	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe	file:
nResColumn	src/vdbeInt.h	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe
nResColumn	tsrc/vdbeInt.h	/^  u16 nResColumn;         \/* Number of columns in one row of the result set *\/$/;"	m	struct:Vdbe
nReserve	sqlite3.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	sqlite3.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nReserve	src/pager.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	src/pcache1.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nReserve	tsrc/pager.c	/^  i16 nReserve;               \/* Number of unused bytes at end of each page *\/$/;"	m	struct:Pager	file:
nReserve	tsrc/pcache1.c	/^  int nReserve;                  \/* Try to keep nFreeSlot above this *\/$/;"	m	struct:PCacheGlobal	file:
nResult	test/speedtest1.c	/^  int nResult;               \/* Size of the current result *\/$/;"	m	struct:Global	file:
nRet	ext/fts5/fts5_test_mi.c	/^  int nRet;                       \/* Number of elements in aRet[] *\/$/;"	m	struct:Fts5MatchinfoCtx	file:
nRow	ext/fts5/fts5_test_tok.c	/^  int nRow;                       \/* Number of entries in aRow[] *\/$/;"	m	struct:Fts5tokCursor	file:
nRow	ext/misc/spellfix.c	/^  int nRow;                    \/* Number of rows of content *\/$/;"	m	struct:spellfix1_cursor	file:
nRow	ext/rbu/sqlite3rbu.c	/^  int nRow;$/;"	m	struct:RbuState	file:
nRow	sqlite3.c	/^  LogEst nRow;          \/* Estimated number of rows generated by this path *\/$/;"	m	struct:WherePath	file:
nRow	sqlite3.c	/^  int nRow;$/;"	m	struct:RbuState	file:
nRow	sqlite3.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat4Accum	file:
nRow	sqlite3.c	/^  u32 nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRow	src/analyze.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat4Accum	file:
nRow	src/table.c	/^  u32 nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRow	src/whereInt.h	/^  LogEst nRow;          \/* Estimated number of rows generated by this path *\/$/;"	m	struct:WherePath
nRow	tsrc/analyze.c	/^  tRowcnt nRow;             \/* Number of rows in the entire table *\/$/;"	m	struct:Stat4Accum	file:
nRow	tsrc/sqlite3rbu.c	/^  int nRow;$/;"	m	struct:RbuState	file:
nRow	tsrc/table.c	/^  u32 nRow;          \/* Number of rows in the result *\/$/;"	m	struct:TabResult	file:
nRow	tsrc/whereInt.h	/^  LogEst nRow;          \/* Estimated number of rows generated by this path *\/$/;"	m	struct:WherePath
nRowAvg	ext/fts3/fts3Int.h	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor
nRowAvg	sqlite3.c	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor	file:
nRowAvg	tsrc/fts3Int.h	/^  int nRowAvg;                    \/* Average size of database rows, in pages *\/$/;"	m	struct:Fts3Cursor
nRowEst	ext/rtree/rtree.c	/^  i64 nRowEst;                \/* Estimated number of rows in this table *\/$/;"	m	struct:Rtree	file:
nRowEst	sqlite3.c	/^  i64 nRowEst;                \/* Estimated number of rows in this table *\/$/;"	m	struct:Rtree	file:
nRowEst	tsrc/rtree.c	/^  i64 nRowEst;                \/* Estimated number of rows in this table *\/$/;"	m	struct:Rtree	file:
nRowEst0	sqlite3.c	/^  tRowcnt nRowEst0;        \/* Non-logarithmic number of rows in the index *\/$/;"	m	struct:Index	file:
nRowEst0	src/sqliteInt.h	/^  tRowcnt nRowEst0;        \/* Non-logarithmic number of rows in the index *\/$/;"	m	struct:Index
nRowEst0	tsrc/sqliteInt.h	/^  tRowcnt nRowEst0;        \/* Non-logarithmic number of rows in the index *\/$/;"	m	struct:Index
nRowLogEst	sqlite3.c	/^  LogEst nRowLogEst;   \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table	file:
nRowLogEst	src/sqliteInt.h	/^  LogEst nRowLogEst;   \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table
nRowLogEst	tsrc/sqliteInt.h	/^  LogEst nRowLogEst;   \/* Estimated rows in table - from sqlite_stat1 table *\/$/;"	m	struct:Table
nRowOut	sqlite3.c	/^  LogEst nRowOut;           \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo	file:
nRowOut	src/whereInt.h	/^  LogEst nRowOut;           \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo
nRowOut	tsrc/whereInt.h	/^  LogEst nRowOut;           \/* Estimated number of output rows *\/$/;"	m	struct:WhereInfo
nRowPerTrans	tool/loadfts.c	/^  int nRowPerTrans;$/;"	m	struct:VisitContext	file:
nRowid	sqlite3.c	/^  u32 nRowid;                     \/* Sizeof aRowid[] *\/$/;"	m	struct:Stat4Sample	file:
nRowid	src/analyze.c	/^  u32 nRowid;                     \/* Sizeof aRowid[] *\/$/;"	m	struct:Stat4Sample	file:
nRowid	tsrc/analyze.c	/^  u32 nRowid;                     \/* Sizeof aRowid[] *\/$/;"	m	struct:Stat4Sample	file:
nRowidOffset	ext/fts5/fts5_index.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nRowidOffset	fts5.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nRowidOffset	sqlite3.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nRowidOffset	tsrc/fts5.c	/^  int nRowidOffset;               \/* Allocated size of aRowidOffset[] array *\/$/;"	m	struct:Fts5SegIter	file:
nRun	ext/misc/spellfix.c	/^  int nRun;                  \/* Number of prior runs for the same zPattern *\/$/;"	m	struct:MatchQuery	file:
nSample	sqlite3.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat4Accum	file:
nSample	sqlite3.c	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index	file:
nSample	src/analyze.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat4Accum	file:
nSample	src/sqliteInt.h	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index
nSample	tsrc/analyze.c	/^  int nSample;              \/* Current number of samples *\/$/;"	m	struct:Stat4Accum	file:
nSample	tsrc/sqliteInt.h	/^  int nSample;             \/* Number of elements in aSample[] *\/$/;"	m	struct:Index
nSampleCol	sqlite3.c	/^  int nSampleCol;          \/* Size of IndexSample.anEq[] and so on *\/$/;"	m	struct:Index	file:
nSampleCol	src/sqliteInt.h	/^  int nSampleCol;          \/* Size of IndexSample.anEq[] and so on *\/$/;"	m	struct:Index
nSampleCol	tsrc/sqliteInt.h	/^  int nSampleCol;          \/* Size of IndexSample.anEq[] and so on *\/$/;"	m	struct:Index
nSavepoint	sqlite3.c	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3	file:
nSavepoint	sqlite3.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nSavepoint	src/pager.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nSavepoint	src/sqliteInt.h	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3
nSavepoint	tsrc/pager.c	/^  int nSavepoint;             \/* Number of elements in aSavepoint[] *\/$/;"	m	struct:Pager	file:
nSavepoint	tsrc/sqliteInt.h	/^  int nSavepoint;               \/* Number of non-transaction savepoints *\/$/;"	m	struct:sqlite3
nScan	sqlite3.c	/^  int nScan;              \/* Entries in aScan[] *\/$/;"	m	struct:Vdbe	file:
nScan	src/vdbeInt.h	/^  int nScan;              \/* Entries in aScan[] *\/$/;"	m	struct:Vdbe
nScan	tsrc/vdbeInt.h	/^  int nScan;              \/* Entries in aScan[] *\/$/;"	m	struct:Vdbe
nScratch	sqlite3.c	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config	file:
nScratch	src/sqliteInt.h	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config
nScratch	tsrc/sqliteInt.h	/^  int nScratch;                     \/* Number of scratch buffers *\/$/;"	m	struct:Sqlite3Config
nScratchFree	sqlite3.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nScratchFree	src/malloc.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nScratchFree	tsrc/malloc.c	/^  u32 nScratchFree;$/;"	m	struct:Mem0Global	file:
nSdst	sqlite3.c	/^  int nSdst;           \/* Number of registers allocated *\/$/;"	m	struct:SelectDest	file:
nSdst	src/sqliteInt.h	/^  int nSdst;           \/* Number of registers allocated *\/$/;"	m	struct:SelectDest
nSdst	tsrc/sqliteInt.h	/^  int nSdst;           \/* Number of registers allocated *\/$/;"	m	struct:SelectDest
nSearch	ext/misc/spellfix.c	/^  int nSearch;                 \/* Number of vocabulary items checked *\/$/;"	m	struct:spellfix1_cursor	file:
nSeg	ext/fts5/fts5_index.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	ext/fts5/fts5_index.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSeg	fts5.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	fts5.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSeg	sqlite3.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	sqlite3.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSeg	tsrc/fts5.c	/^  int nSeg;                       \/* Size of aSeg[] array *\/$/;"	m	struct:Fts5Iter	file:
nSeg	tsrc/fts5.c	/^  int nSeg;                       \/* Total number of segments on level *\/$/;"	m	struct:Fts5StructureLevel	file:
nSegment	ext/fts3/fts3Int.h	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader
nSegment	ext/fts5/fts5_index.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSegment	fts5.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSegment	sqlite3.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	sqlite3.c	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader	file:
nSegment	sqlite3.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSegment	src/wal.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSegment	tsrc/fts3Int.h	/^  int nSegment;                   \/* Size of apSegment array *\/$/;"	m	struct:Fts3MultiSegReader
nSegment	tsrc/fts5.c	/^  int nSegment;                   \/* Total segments in this structure *\/$/;"	m	struct:Fts5Structure	file:
nSegment	tsrc/wal.c	/^  int nSegment;                   \/* Number of entries in aSegment[] *\/$/;"	m	struct:WalIterator	file:
nSelect	sqlite3.c	/^  int nSelect;         \/* Number of SELECT statements seen *\/$/;"	m	struct:Parse	file:
nSelect	src/sqliteInt.h	/^  int nSelect;         \/* Number of SELECT statements seen *\/$/;"	m	struct:Parse
nSelect	tsrc/sqliteInt.h	/^  int nSelect;         \/* Number of SELECT statements seen *\/$/;"	m	struct:Parse
nSelectIndent	sqlite3.c	/^  int nSelectIndent;   \/* How far to indent SELECTTRACE() output *\/$/;"	m	struct:Parse	file:
nSelectIndent	src/sqliteInt.h	/^  int nSelectIndent;   \/* How far to indent SELECTTRACE() output *\/$/;"	m	struct:Parse
nSelectIndent	tsrc/sqliteInt.h	/^  int nSelectIndent;   \/* How far to indent SELECTTRACE() output *\/$/;"	m	struct:Parse
nSelectRow	sqlite3.c	/^  LogEst nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select	file:
nSelectRow	src/sqliteInt.h	/^  LogEst nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select
nSelectRow	tsrc/sqliteInt.h	/^  LogEst nSelectRow;     \/* Estimated number of result rows *\/$/;"	m	struct:Select
nServer	src/test7.c	/^  int nServer;             \/* Number of server threads running *\/$/;"	m	struct:Thread	file:
nSession	shell.c	/^  int nSession;             \/* Number of active sessions *\/$/;"	m	struct:ShellState	file:
nSession	src/shell.c	/^  int nSession;             \/* Number of active sessions *\/$/;"	m	struct:ShellState	file:
nSession	tsrc/shell.c	/^  int nSession;             \/* Number of active sessions *\/$/;"	m	struct:ShellState	file:
nSet	sqlite3.c	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse	file:
nSet	sqlite3.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nSet	src/bitvec.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nSet	src/sqliteInt.h	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse
nSet	tsrc/bitvec.c	/^  u32 nSet;       \/* Number of bits that are set - only valid for aHash$/;"	m	struct:Bitvec	file:
nSet	tsrc/sqliteInt.h	/^  int nSet;            \/* Number of sets used so far *\/$/;"	m	struct:Parse
nShared	sqlite3.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nShared	src/os_unix.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nShared	tsrc/os_unix.c	/^  int nShared;                    \/* Number of SHARED locks held *\/$/;"	m	struct:unixInodeInfo	file:
nShm	ext/rbu/sqlite3rbu.c	/^  int nShm;                       \/* Number of entries in apShm[] array *\/$/;"	m	struct:rbu_file	file:
nShm	sqlite3.c	/^  int nShm;                       \/* Number of entries in apShm[] array *\/$/;"	m	struct:rbu_file	file:
nShm	tsrc/sqlite3rbu.c	/^  int nShm;                       \/* Number of entries in apShm[] array *\/$/;"	m	struct:rbu_file	file:
nSize	ext/fts3/fts3_write.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	ext/fts5/fts5_index.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	fts5.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	sqlite3.c	/^  int nSize;                      \/* Bytes of data currently in memory *\/$/;"	m	struct:MemJournal	file:
nSize	sqlite3.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	sqlite3.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	sqlite3.c	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo	file:
nSize	src/btreeInt.h	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo
nSize	src/memjournal.c	/^  int nSize;                      \/* Bytes of data currently in memory *\/$/;"	m	struct:MemJournal	file:
nSize	src/test_onefile.c	/^  int nSize;$/;"	m	struct:tmp_file	file:
nSize	tsrc/btreeInt.h	/^  u16 nSize;     \/* Size of the cell content on the main b-tree page *\/$/;"	m	struct:CellInfo
nSize	tsrc/fts3_write.c	/^  int nSize;                      \/* Size of allocation at aData *\/$/;"	m	struct:SegmentWriter	file:
nSize	tsrc/fts5.c	/^  int nSize;$/;"	m	struct:Fts5DoclistIter	file:
nSize	tsrc/memjournal.c	/^  int nSize;                      \/* Bytes of data currently in memory *\/$/;"	m	struct:MemJournal	file:
nSkip	sqlite3.c	/^  u16 nSkip;            \/* Number of NULL aLTerm[] entries *\/$/;"	m	struct:WhereLoop	file:
nSkip	src/whereInt.h	/^  u16 nSkip;            \/* Number of NULL aLTerm[] entries *\/$/;"	m	struct:WhereLoop
nSkip	tsrc/whereInt.h	/^  u16 nSkip;            \/* Number of NULL aLTerm[] entries *\/$/;"	m	struct:WhereLoop
nSlot	ext/fts5/fts5_hash.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	fts5.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	sqlite3.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	sqlite3.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	sqlite3.c	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause	file:
nSlot	src/pcache1.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	src/whereInt.h	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause
nSlot	tsrc/fts5.c	/^  int nSlot;                      \/* Size of aSlot[] array *\/$/;"	m	struct:Fts5Hash	file:
nSlot	tsrc/pcache1.c	/^  int nSlot;                     \/* The number of pcache slots *\/$/;"	m	struct:PCacheGlobal	file:
nSlot	tsrc/whereInt.h	/^  int nSlot;               \/* Number of entries in a[] *\/$/;"	m	struct:WhereClause
nSnippet	ext/fts1/fts1.c	/^  int nSnippet;   \/* strlen(zSnippet) *\/$/;"	m	struct:Snippet	file:
nSnippet	ext/fts2/fts2.c	/^  int nSnippet;   \/* strlen(zSnippet) *\/$/;"	m	struct:Snippet	file:
nSnippet	ext/fts3/fts3_snippet.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSnippet	sqlite3.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSnippet	tsrc/fts1.c	/^  int nSnippet;   \/* strlen(zSnippet) *\/$/;"	m	struct:Snippet	file:
nSnippet	tsrc/fts2.c	/^  int nSnippet;   \/* strlen(zSnippet) *\/$/;"	m	struct:Snippet	file:
nSnippet	tsrc/fts3_snippet.c	/^  int nSnippet;                   \/* Requested snippet length (in tokens) *\/$/;"	m	struct:SnippetIter	file:
nSort	src/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nSort	tsrc/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nSortingColumn	sqlite3.c	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo	file:
nSortingColumn	src/sqliteInt.h	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo
nSortingColumn	tsrc/sqliteInt.h	/^  int nSortingColumn;     \/* Number of columns in the sorting index *\/$/;"	m	struct:AggInfo
nSpace	ext/fts3/fts3_write.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSpace	ext/fts5/fts5Int.h	/^  int nSpace;$/;"	m	struct:Fts5Buffer
nSpace	fts5.c	/^  int nSpace;$/;"	m	struct:Fts5Buffer	file:
nSpace	sqlite3.c	/^  int nSpace;$/;"	m	struct:Fts5Buffer	file:
nSpace	sqlite3.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSpace	tsrc/fts3_write.c	/^  int nSpace;$/;"	m	struct:PendingList	file:
nSpace	tsrc/fts5.c	/^  int nSpace;$/;"	m	struct:Fts5Buffer	file:
nSpill	sqlite3.c	/^  int nSpill;                     \/* Bytes of data before flushing *\/$/;"	m	struct:MemJournal	file:
nSpill	src/memjournal.c	/^  int nSpill;                     \/* Bytes of data before flushing *\/$/;"	m	struct:MemJournal	file:
nSpill	tsrc/memjournal.c	/^  int nSpill;                     \/* Bytes of data before flushing *\/$/;"	m	struct:MemJournal	file:
nSql	src/tclsqlite.c	/^  int nSql;                \/* chars in zSql[] *\/$/;"	m	struct:SqlPreparedStmt	file:
nSql	test/fuzzcheck.c	/^  int nSql;                        \/* Number of SQL scripts *\/$/;"	m	struct:GlobalVars	file:
nSql	tsrc/tclsqlite.c	/^  int nSql;                \/* chars in zSql[] *\/$/;"	m	struct:SqlPreparedStmt	file:
nSrc	sqlite3.c	/^  int nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList	file:
nSrc	src/sqliteInt.h	/^  int nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList
nSrc	tsrc/sqliteInt.h	/^  int nSrc;        \/* Number of tables or subqueries in the FROM clause *\/$/;"	m	struct:SrcList
nStack	tool/offsets.c	/^  int nStack;           \/* Depth of stack *\/$/;"	m	struct:GState	file:
nStat	ext/fts3/fts3_aux.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStat	sqlite3.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nStat	tsrc/fts3_aux.c	/^  int nStat;                      \/* Size of aStat[] array *\/$/;"	m	struct:Fts3auxCursor	file:
nState	ext/misc/regexp.c	/^  unsigned nState;            \/* Number of current states *\/$/;"	m	struct:ReStateSet	file:
nState	ext/misc/regexp.c	/^  unsigned nState;            \/* Number of entries in aOp[] and aArg[] *\/$/;"	m	struct:ReCompiled	file:
nStatement	sqlite3.c	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3	file:
nStatement	src/sqliteInt.h	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3
nStatement	tsrc/sqliteInt.h	/^  int nStatement;               \/* Number of nested statement-transactions  *\/$/;"	m	struct:sqlite3
nStem	ext/misc/fuzzer.c	/^  int nStem;                 \/* Number of stems allocated *\/$/;"	m	struct:fuzzer_cursor	file:
nStep	ext/rbu/sqlite3rbu.c	/^  int nStep;                      \/* Rows processed for current object *\/$/;"	m	struct:sqlite3rbu	file:
nStep	sqlite3.c	/^  int nStep;                      \/* Rows processed for current object *\/$/;"	m	struct:sqlite3rbu	file:
nStep	src/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nStep	tsrc/sqlite3rbu.c	/^  int nStep;                      \/* Rows processed for current object *\/$/;"	m	struct:sqlite3rbu	file:
nStep	tsrc/tclsqlite.c	/^  int nStep, nSort, nIndex;  \/* Statistics for most recent operation *\/$/;"	m	struct:SqliteDb	file:
nStmt	src/tclsqlite.c	/^  int nStmt;                 \/* Number of statements in stmtList *\/$/;"	m	struct:SqliteDb	file:
nStmt	tsrc/tclsqlite.c	/^  int nStmt;                 \/* Number of statements in stmtList *\/$/;"	m	struct:SqliteDb	file:
nStmtDefCons	sqlite3.c	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtDefCons	src/vdbeInt.h	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe
nStmtDefCons	tsrc/vdbeInt.h	/^  i64 nStmtDefCons;       \/* Number of def. constraints when stmt started *\/$/;"	m	struct:Vdbe
nStmtDefImmCons	sqlite3.c	/^  i64 nStmtDefImmCons;    \/* Number of def. imm constraints when stmt started *\/$/;"	m	struct:Vdbe	file:
nStmtDefImmCons	src/vdbeInt.h	/^  i64 nStmtDefImmCons;    \/* Number of def. imm constraints when stmt started *\/$/;"	m	struct:Vdbe
nStmtDefImmCons	tsrc/vdbeInt.h	/^  i64 nStmtDefImmCons;    \/* Number of def. imm constraints when stmt started *\/$/;"	m	struct:Vdbe
nStmtSpill	sqlite3.c	/^  int nStmtSpill;                   \/* Stmt-journal spill-to-disk threshold *\/$/;"	m	struct:Sqlite3Config	file:
nStmtSpill	src/sqliteInt.h	/^  int nStmtSpill;                   \/* Stmt-journal spill-to-disk threshold *\/$/;"	m	struct:Sqlite3Config
nStmtSpill	tsrc/sqliteInt.h	/^  int nStmtSpill;                   \/* Stmt-journal spill-to-disk threshold *\/$/;"	m	struct:Sqlite3Config
nStop	ext/fts3/fts3_aux.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nStop	sqlite3.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nStop	tsrc/fts3_aux.c	/^  int nStop;                      \/* Byte-length of string zStop *\/$/;"	m	struct:Fts3auxCursor	file:
nStream	ext/session/test_session.c	/^  int nStream;                    \/* Maximum chunk size *\/$/;"	m	struct:TestStreamInput	file:
nSub	sqlite3.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSub	src/vdbeaux.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSub	tsrc/vdbeaux.c	/^  int nSub;                  \/* Number of entries in apSub *\/$/;"	m	struct:VdbeOpIter	file:
nSubRec	sqlite3.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nSubRec	src/pager.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nSubRec	tsrc/pager.c	/^  u32 nSubRec;                \/* Number of records written to sub-journal *\/$/;"	m	struct:Pager	file:
nSubst	ext/misc/spellfix.c	/^  int nSubst;              \/* Number of substitution cost entries *\/$/;"	m	struct:EditDist3From	file:
nSuffix	ext/fts5/fts5_tokenize.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nSuffix	fts5.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nSuffix	sqlite3.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nSuffix	tsrc/fts5.c	/^  int nSuffix;$/;"	m	struct:PorterRule	file:
nSync	src/test_journal.c	/^  int nSync;               \/* Number of times journal file has been synced *\/$/;"	m	struct:jt_file	file:
nTab	sqlite3.c	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse	file:
nTab	src/sqliteInt.h	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse
nTab	tsrc/sqliteInt.h	/^  int nTab;            \/* Number of previously allocated VDBE cursors *\/$/;"	m	struct:Parse
nTableLock	sqlite3.c	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse	file:
nTableLock	src/sqliteInt.h	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse
nTableLock	tsrc/sqliteInt.h	/^  int nTableLock;        \/* Number of locks in aTableLock *\/$/;"	m	struct:Parse
nTask	sqlite3.c	/^  u8 nTask;                       \/* Size of aTask[] array *\/$/;"	m	struct:VdbeSorter	file:
nTask	src/vdbesort.c	/^  u8 nTask;                       \/* Size of aTask[] array *\/$/;"	m	struct:VdbeSorter	file:
nTask	tsrc/vdbesort.c	/^  u8 nTask;                       \/* Size of aTask[] array *\/$/;"	m	struct:VdbeSorter	file:
nTblCol	ext/rbu/sqlite3rbu.c	/^  int nTblCol;                    \/* Size of azTblCol[] array *\/$/;"	m	struct:RbuObjIter	file:
nTblCol	sqlite3.c	/^  int nTblCol;                    \/* Size of azTblCol[] array *\/$/;"	m	struct:RbuObjIter	file:
nTblCol	tsrc/sqlite3rbu.c	/^  int nTblCol;                    \/* Size of azTblCol[] array *\/$/;"	m	struct:RbuObjIter	file:
nTempReg	sqlite3.c	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse	file:
nTempReg	src/sqliteInt.h	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse
nTempReg	tsrc/sqliteInt.h	/^  u8 nTempReg;         \/* Number of temporary registers in aTempReg[] *\/$/;"	m	struct:Parse
nTerm	ext/fts1/fts1.c	/^  int nTerm;         \/* Number of bytes in pTerm[] *\/$/;"	m	struct:QueryTerm	file:
nTerm	ext/fts2/fts2.c	/^  int nTerm;         \/* Number of bytes in pTerm[] *\/$/;"	m	struct:QueryTerm	file:
nTerm	ext/fts2/fts2.c	/^  int nTerm;$/;"	m	struct:TermData	file:
nTerm	ext/fts3/fts3Int.h	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nTerm	ext/fts3/fts3Int.h	/^  int nTerm;$/;"	m	struct:Fts3SegFilter
nTerm	ext/fts3/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	ext/fts3/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	ext/fts3/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	ext/fts5/fts5_buffer.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTerm	ext/fts5/fts5_expr.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	ext/fts5/fts5_main.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	fts5.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	fts5.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	fts5.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	sqlite3.c	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader	file:
nTerm	sqlite3.c	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause	file:
nTerm	sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts3SegFilter	file:
nTerm	sqlite3.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTerm	src/whereInt.h	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause
nTerm	tsrc/fts1.c	/^  int nTerm;         \/* Number of bytes in pTerm[] *\/$/;"	m	struct:QueryTerm	file:
nTerm	tsrc/fts2.c	/^  int nTerm;         \/* Number of bytes in pTerm[] *\/$/;"	m	struct:QueryTerm	file:
nTerm	tsrc/fts2.c	/^  int nTerm;$/;"	m	struct:TermData	file:
nTerm	tsrc/fts3Int.h	/^  int nTerm;                      \/* Size of zTerm in bytes *\/$/;"	m	struct:Fts3MultiSegReader
nTerm	tsrc/fts3Int.h	/^  int nTerm;$/;"	m	struct:Fts3SegFilter
nTerm	tsrc/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in current term *\/$/;"	m	struct:Fts3SegReader	file:
nTerm	tsrc/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentNode	file:
nTerm	tsrc/fts3_write.c	/^  int nTerm;                      \/* Number of bytes in zTerm *\/$/;"	m	struct:SegmentWriter	file:
nTerm	tsrc/fts5.c	/^  int nTerm;                      \/* Number of entries in aTerm[] *\/$/;"	m	struct:Fts5ExprPhrase	file:
nTerm	tsrc/fts5.c	/^  int nTerm;                      \/* Size of phrase in terms *\/$/;"	m	struct:Fts5MatchPhrase	file:
nTerm	tsrc/fts5.c	/^  int nTerm;$/;"	m	struct:Fts5TermsetEntry	file:
nTerm	tsrc/whereInt.h	/^  int nTerm;               \/* Number of terms *\/$/;"	m	struct:WhereClause
nTermAlloc	ext/fts3/fts3_write.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nTermAlloc	sqlite3.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nTermAlloc	tsrc/fts3_write.c	/^  int nTermAlloc;                 \/* Allocated size of zTerm buffer *\/$/;"	m	struct:Fts3SegReader	file:
nTermDistinct	ext/fts2/fts2.c	/^  int nTermDistinct;$/;"	m	struct:LeafWriter	file:
nTermDistinct	tsrc/fts2.c	/^  int nTermDistinct;$/;"	m	struct:LeafWriter	file:
nTerms	ext/fts1/fts1.c	/^  int nTerms;           \/* Number of terms in the query *\/$/;"	m	struct:Query	file:
nTerms	ext/fts1/fulltext.c	/^  int nTerms;$/;"	m	struct:Query	file:
nTerms	ext/fts2/fts2.c	/^  int nTerms;           \/* Number of terms in the query *\/$/;"	m	struct:Query	file:
nTerms	tsrc/fts1.c	/^  int nTerms;           \/* Number of terms in the query *\/$/;"	m	struct:Query	file:
nTerms	tsrc/fts2.c	/^  int nTerms;           \/* Number of terms in the query *\/$/;"	m	struct:Query	file:
nTest	mptest/mptest.c	/^  int nTest;             \/* Number of --match operators *\/$/;"	m	struct:Global	file:
nTest	test/threadtest4.c	/^  int nTest;                  \/* Number of tests run by this thread *\/$/;"	m	struct:WorkerInfo	file:
nText	test/threadtest3.c	/^  int nText;                      \/* Size of array at aText[] *\/$/;"	m	struct:Sqlite	file:
nThis	sqlite3.c	/^  int nThis;       \/* Number of references to columns in pSrcList *\/$/;"	m	struct:SrcCount	file:
nThis	src/expr.c	/^  int nThis;       \/* Number of references to columns in pSrcList *\/$/;"	m	struct:SrcCount	file:
nThis	tsrc/expr.c	/^  int nThis;       \/* Number of references to columns in pSrcList *\/$/;"	m	struct:SrcCount	file:
nTitle	sqlite3.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon89	file:
nTitle	sqlite3.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nTitle	src/mem2.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon63	file:
nTitle	src/mem2.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nTitle	tsrc/mem2.c	/^  int nTitle;        \/* Bytes of zTitle to save.  Includes '\\0' and padding *\/$/;"	m	struct:__anon30	file:
nTitle	tsrc/mem2.c	/^  u8 nTitle;                          \/* Bytes of title; includes '\\0' *\/$/;"	m	struct:MemBlockHdr	file:
nTknAct	tool/lemon.c	/^  int nTknAct, nNtAct;     \/* Number of actions on terminals and nonterminals *\/$/;"	m	struct:state	file:
nTo	ext/misc/amatch.c	/^  amatch_len nFrom, nTo;   \/* Length of the zFrom and zTo strings *\/$/;"	m	struct:amatch_rule	file:
nTo	ext/misc/fuzzer.c	/^  fuzzer_len nFrom, nTo;      \/* Length of the zFrom and zTo strings *\/$/;"	m	struct:fuzzer_rule	file:
nTo	ext/misc/spellfix.c	/^  u8 nTo;                   \/* Number of bytes in aTo *\/$/;"	m	struct:EditDist3Cost	file:
nToken	ext/fts3/fts3Int.h	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase
nToken	ext/fts3/fts3_snippet.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	ext/fts3/fts3_snippet.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	ext/fts3/fts3_test.c	/^  int nToken;                     \/* Length of token in bytes *\/$/;"	m	struct:NearDocument	file:
nToken	ext/fts3/fts3_test.c	/^  int nToken;                     \/* Number of tokens in this phrase *\/$/;"	m	struct:NearPhrase	file:
nToken	ext/fts3/fts3_tokenize_vtab.c	/^  int nToken;                     \/* Size of zToken in bytes *\/$/;"	m	struct:Fts3tokCursor	file:
nToken	sqlite3.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	sqlite3.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	sqlite3.c	/^  int nToken;                     \/* Size of zToken in bytes *\/$/;"	m	struct:Fts3tokCursor	file:
nToken	sqlite3.c	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase	file:
nToken	tsrc/fts3Int.h	/^  int nToken;                \/* Number of tokens in the phrase *\/$/;"	m	struct:Fts3Phrase
nToken	tsrc/fts3_snippet.c	/^  int nToken;                     \/* Number of tokens in phrase *\/$/;"	m	struct:SnippetPhrase	file:
nToken	tsrc/fts3_snippet.c	/^  int nToken;                     \/* Number of tokens seen so far *\/$/;"	m	struct:LoadDoclistCtx	file:
nToken	tsrc/fts3_tokenize_vtab.c	/^  int nToken;                     \/* Size of zToken in bytes *\/$/;"	m	struct:Fts3tokCursor	file:
nTokenAllocated	ext/fts1/fts1_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	ext/fts1/simple_tokenizer.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	ext/fts2/fts2_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	ext/fts3/fts3_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	sqlite3.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	tsrc/fts1_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	tsrc/fts2_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenAllocated	tsrc/fts3_tokenizer1.c	/^  int nTokenAllocated;         \/* space allocated to zToken buffer *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTokenBytes	ext/fts1/simple_tokenizer.c	/^  int nTokenBytes;             \/* actual size of current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
nTotalChange	sqlite3.c	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3	file:
nTotalChange	src/sqliteInt.h	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3
nTotalChange	tsrc/sqliteInt.h	/^  int nTotalChange;             \/* Value returned by sqlite3_total_changes() *\/$/;"	m	struct:sqlite3
nTotalRow	ext/fts5/fts5_storage.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTotalRow	fts5.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTotalRow	sqlite3.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTotalRow	tsrc/fts5.c	/^  i64 nTotalRow;                  \/* Total number of rows in FTS table *\/$/;"	m	struct:Fts5Storage	file:
nTransaction	sqlite3.c	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared	file:
nTransaction	src/btreeInt.h	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared
nTransaction	src/tclsqlite.c	/^  int nTransaction;          \/* Number of nested [transaction] methods *\/$/;"	m	struct:SqliteDb	file:
nTransaction	tsrc/btreeInt.h	/^  int nTransaction;     \/* Number of open transactions (read + write) *\/$/;"	m	struct:BtShared
nTransaction	tsrc/tclsqlite.c	/^  int nTransaction;          \/* Number of nested [transaction] methods *\/$/;"	m	struct:SqliteDb	file:
nTree	sqlite3.c	/^  int nTree;                 \/* Used size of aTree\/aReadr (power of 2) *\/$/;"	m	struct:MergeEngine	file:
nTree	src/vdbesort.c	/^  int nTree;                 \/* Used size of aTree\/aReadr (power of 2) *\/$/;"	m	struct:MergeEngine	file:
nTree	tsrc/vdbesort.c	/^  int nTree;                 \/* Used size of aTree\/aReadr (power of 2) *\/$/;"	m	struct:MergeEngine	file:
nUnused	sqlite3.c	/^  int nUnused;                    \/* Number of unused bytes on page *\/$/;"	m	struct:StatPage	file:
nUnused	sqlite3.c	/^  int nUnused;                    \/* Value of 'unused' column *\/$/;"	m	struct:StatCursor	file:
nUnused	src/dbstat.c	/^  int nUnused;                    \/* Number of unused bytes on page *\/$/;"	m	struct:StatPage	file:
nUnused	src/dbstat.c	/^  int nUnused;                    \/* Value of 'unused' column *\/$/;"	m	struct:StatCursor	file:
nUnused	tsrc/dbstat.c	/^  int nUnused;                    \/* Number of unused bytes on page *\/$/;"	m	struct:StatPage	file:
nUnused	tsrc/dbstat.c	/^  int nUnused;                    \/* Value of 'unused' column *\/$/;"	m	struct:StatCursor	file:
nUsed	ext/misc/eval.c	/^  sqlite3_int64 nUsed;   \/* Number of bytes of z[] actually used *\/$/;"	m	struct:EvalResult	file:
nUsed	ext/misc/json1.c	/^  u64 nUsed;               \/* Bytes of zBuf[] currently used *\/$/;"	m	struct:JsonString	file:
nUsed	ext/misc/nextchar.c	/^  int nUsed;                        \/* Space used in aResult *\/$/;"	m	struct:nextCharContext	file:
nUsed	ext/misc/percentile.c	/^  unsigned nUsed;      \/* Number of slots actually used in a[] *\/$/;"	m	struct:Percentile	file:
nUsed	sqlite3.c	/^  int nUsed;               \/* Number of arguments used so far *\/$/;"	m	struct:PrintfArguments	file:
nUsed	sqlite3.c	/^  u64 nUsed;               \/* Bytes of zBuf[] currently used *\/$/;"	m	struct:JsonString	file:
nUsed	src/sqliteInt.h	/^  int nUsed;               \/* Number of arguments used so far *\/$/;"	m	struct:PrintfArguments
nUsed	src/test1.c	/^  int nUsed;   \/* Space used *\/$/;"	m	struct:dstr	file:
nUsed	tool/fuzzershell.c	/^  sqlite3_int64 nUsed;   \/* Number of bytes of z[] actually used *\/$/;"	m	struct:EvalResult	file:
nUsed	tool/sqldiff.c	/^  int nUsed;      \/* Bytes actually used in z[] *\/$/;"	m	struct:Str	file:
nUsed	tsrc/json1.c	/^  u64 nUsed;               \/* Bytes of zBuf[] currently used *\/$/;"	m	struct:JsonString	file:
nUsed	tsrc/sqliteInt.h	/^  int nUsed;               \/* Number of arguments used so far *\/$/;"	m	struct:PrintfArguments
nUsermerge	ext/fts5/fts5Int.h	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config
nUsermerge	fts5.c	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config	file:
nUsermerge	sqlite3.c	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config	file:
nUsermerge	tsrc/fts5.c	/^  int nUsermerge;                 \/* 'usermerge' setting *\/$/;"	m	struct:Fts5Config	file:
nVDestroy	sqlite3.c	/^  int nVDestroy;                \/* Number of active OP_VDestroy operations *\/$/;"	m	struct:sqlite3	file:
nVDestroy	src/sqliteInt.h	/^  int nVDestroy;                \/* Number of active OP_VDestroy operations *\/$/;"	m	struct:sqlite3
nVDestroy	tsrc/sqliteInt.h	/^  int nVDestroy;                \/* Number of active OP_VDestroy operations *\/$/;"	m	struct:sqlite3
nVTrans	sqlite3.c	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3	file:
nVTrans	src/sqliteInt.h	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3
nVTrans	tsrc/sqliteInt.h	/^  int nVTrans;                  \/* Allocated size of aVTrans *\/$/;"	m	struct:sqlite3
nVal	sqlite3.c	/^  int nVal;                       \/* Size of the record in bytes *\/$/;"	m	struct:SorterRecord	file:
nVal	src/vdbesort.c	/^  int nVal;                       \/* Size of the record in bytes *\/$/;"	m	struct:SorterRecord	file:
nVal	tsrc/vdbesort.c	/^  int nVal;                       \/* Size of the record in bytes *\/$/;"	m	struct:SorterRecord	file:
nVar	sqlite3.c	/^  ynVar nVar;               \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse	file:
nVar	sqlite3.c	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe	file:
nVar	src/sqliteInt.h	/^  ynVar nVar;               \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse
nVar	src/vdbeInt.h	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe
nVar	tsrc/sqliteInt.h	/^  ynVar nVar;               \/* Number of '?' variables seen in the SQL so far *\/$/;"	m	struct:Parse
nVar	tsrc/vdbeInt.h	/^  ynVar nVar;             \/* Number of entries in aVar[] *\/$/;"	m	struct:Vdbe
nVdbeActive	sqlite3.c	/^  int nVdbeActive;              \/* Number of VDBEs currently running *\/$/;"	m	struct:sqlite3	file:
nVdbeActive	src/sqliteInt.h	/^  int nVdbeActive;              \/* Number of VDBEs currently running *\/$/;"	m	struct:sqlite3
nVdbeActive	tsrc/sqliteInt.h	/^  int nVdbeActive;              \/* Number of VDBEs currently running *\/$/;"	m	struct:sqlite3
nVdbeExec	sqlite3.c	/^  int nVdbeExec;                \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3	file:
nVdbeExec	src/sqliteInt.h	/^  int nVdbeExec;                \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3
nVdbeExec	tsrc/sqliteInt.h	/^  int nVdbeExec;                \/* Number of nested calls to VdbeExec() *\/$/;"	m	struct:sqlite3
nVdbeRead	sqlite3.c	/^  int nVdbeRead;                \/* Number of active VDBEs that read or write *\/$/;"	m	struct:sqlite3	file:
nVdbeRead	src/sqliteInt.h	/^  int nVdbeRead;                \/* Number of active VDBEs that read or write *\/$/;"	m	struct:sqlite3
nVdbeRead	tsrc/sqliteInt.h	/^  int nVdbeRead;                \/* Number of active VDBEs that read or write *\/$/;"	m	struct:sqlite3
nVdbeWrite	sqlite3.c	/^  int nVdbeWrite;               \/* Number of active VDBEs that read and write *\/$/;"	m	struct:sqlite3	file:
nVdbeWrite	src/sqliteInt.h	/^  int nVdbeWrite;               \/* Number of active VDBEs that read and write *\/$/;"	m	struct:sqlite3
nVdbeWrite	tsrc/sqliteInt.h	/^  int nVdbeWrite;               \/* Number of active VDBEs that read and write *\/$/;"	m	struct:sqlite3
nVfs	src/test1.c	/^static int nVfs = 0;$/;"	v	file:
nVtabLock	sqlite3.c	/^  int nVtabLock;            \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse	file:
nVtabLock	src/sqliteInt.h	/^  int nVtabLock;            \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse
nVtabLock	tsrc/sqliteInt.h	/^  int nVtabLock;            \/* Number of virtual tables to lock *\/$/;"	m	struct:Parse
nWiData	sqlite3.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWiData	src/wal.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWiData	tsrc/wal.c	/^  int nWiData;               \/* Size of array apWiData *\/$/;"	m	struct:Wal	file:
nWord	ext/misc/amatch.c	/^  int nWord;                 \/* Number of amatch_word objects *\/$/;"	m	struct:amatch_cursor	file:
nWork	ext/fts3/fts3_write.c	/^  int nWork;                      \/* Number of leaf pages flushed *\/$/;"	m	struct:IncrmergeWriter	file:
nWork	sqlite3.c	/^  int nWork;                      \/* Number of leaf pages flushed *\/$/;"	m	struct:IncrmergeWriter	file:
nWork	tsrc/fts3_write.c	/^  int nWork;                      \/* Number of leaf pages flushed *\/$/;"	m	struct:IncrmergeWriter	file:
nWorkUnit	ext/fts5/fts5_index.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorkUnit	fts5.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorkUnit	sqlite3.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorkUnit	tsrc/fts5.c	/^  int nWorkUnit;                  \/* Leaf pages in a "unit" of work *\/$/;"	m	struct:Fts5Index	file:
nWorker	sqlite3.c	85553;"	d	file:
nWorker	sqlite3.c	85639;"	d	file:
nWorker	src/vdbesort.c	1026;"	d	file:
nWorker	src/vdbesort.c	940;"	d	file:
nWorker	test/threadtest4.c	/^  int nWorker;                \/* Total number of workers *\/$/;"	m	struct:WorkerInfo	file:
nWorker	tsrc/vdbesort.c	1026;"	d	file:
nWorker	tsrc/vdbesort.c	940;"	d	file:
nWriteCounter	ext/fts5/fts5_index.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nWriteCounter	fts5.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nWriteCounter	sqlite3.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nWriteCounter	tsrc/fts5.c	/^  u64 nWriteCounter;              \/* Total leaves written to level 0 *\/$/;"	m	struct:Fts5Structure	file:
nXField	sqlite3.c	/^  u16 nXField;        \/* Number of columns beyond the key columns *\/$/;"	m	struct:KeyInfo	file:
nXField	src/sqliteInt.h	/^  u16 nXField;        \/* Number of columns beyond the key columns *\/$/;"	m	struct:KeyInfo
nXField	tsrc/sqliteInt.h	/^  u16 nXField;        \/* Number of columns beyond the key columns *\/$/;"	m	struct:KeyInfo
nXor	sqlite3.c	/^  int nXor;           \/* Number of XOR operations done *\/$/;"	m	struct:EntropyGatherer	file:
nXor	src/os_win.c	/^  int nXor;           \/* Number of XOR operations done *\/$/;"	m	struct:EntropyGatherer	file:
nXor	tsrc/os_win.c	/^  int nXor;           \/* Number of XOR operations done *\/$/;"	m	struct:EntropyGatherer	file:
nZero	sqlite3.c	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::MemValue	file:
nZero	sqlite3.c	/^  int nZero;              \/* Extra zero data appended after pData,nData *\/$/;"	m	struct:BtreePayload	file:
nZero	src/btree.h	/^  int nZero;              \/* Extra zero data appended after pData,nData *\/$/;"	m	struct:BtreePayload
nZero	src/vdbeInt.h	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::MemValue
nZero	tsrc/btree.h	/^  int nZero;              \/* Extra zero data appended after pData,nData *\/$/;"	m	struct:BtreePayload
nZero	tsrc/vdbeInt.h	/^    int nZero;          \/* Used when bit MEM_Zero is set in flags *\/$/;"	m	union:Mem::MemValue
na	sqlite3.c	/^  int na;             \/* Size of a[] in bytes *\/$/;"	m	struct:EntropyGatherer	file:
na	src/os_win.c	/^  int na;             \/* Size of a[] in bytes *\/$/;"	m	struct:EntropyGatherer	file:
na	tsrc/os_win.c	/^  int na;             \/* Size of a[] in bytes *\/$/;"	m	struct:EntropyGatherer	file:
nactiontab	tool/lemon.c	/^  int nactiontab;          \/* Number of entries in the yy_action[] table *\/$/;"	m	struct:lemon	file:
name	tool/lemon.c	/^  char *name;              \/* Name of the generated parser *\/$/;"	m	struct:lemon	file:
name	tool/lemon.c	/^  const char *name;        \/* Name of the symbol *\/$/;"	m	struct:symbol	file:
nameInUsingClause	sqlite3.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
nameInUsingClause	src/resolve.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
nameInUsingClause	tsrc/resolve.c	/^static int nameInUsingClause(IdList *pUsing, const char *zCol){$/;"	f	file:
name_to_enc	src/test5.c	/^static u8 name_to_enc(Tcl_Interp *interp, Tcl_Obj *pObj){$/;"	f	file:
namelistFree	tool/sqldiff.c	/^static void namelistFree(char **az){$/;"	f	file:
nappend	ext/fts1/fts1.c	/^static void nappend(StringBuffer *sb, const char *zFrom, int nFrom){$/;"	f	file:
nappend	ext/fts2/fts2.c	/^static void nappend(StringBuffer *sb, const char *zFrom, int nFrom){$/;"	f	file:
nappend	tsrc/fts1.c	/^static void nappend(StringBuffer *sb, const char *zFrom, int nFrom){$/;"	f	file:
nappend	tsrc/fts2.c	/^static void nappend(StringBuffer *sb, const char *zFrom, int nFrom){$/;"	f	file:
ncFlags	sqlite3.c	/^  u16 ncFlags;         \/* Zero or more NC_* flags defined below *\/$/;"	m	struct:NameContext	file:
ncFlags	src/sqliteInt.h	/^  u16 ncFlags;         \/* Zero or more NC_* flags defined below *\/$/;"	m	struct:NameContext
ncFlags	tsrc/sqliteInt.h	/^  u16 ncFlags;         \/* Zero or more NC_* flags defined below *\/$/;"	m	struct:NameContext
nconflict	tool/lemon.c	/^  int nconflict;           \/* Number of parsing conflicts *\/$/;"	m	struct:lemon	file:
nearlyFull	sqlite3.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
nearlyFull	src/malloc.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
nearlyFull	tsrc/malloc.c	/^  int nearlyFull;$/;"	m	struct:Mem0Global	file:
nearset	ext/fts5/test/fts5_common.tcl	/^proc nearset {aCol args} {$/;"	p
nearset_match	ext/fts5/test/fts5_common.tcl	/^proc nearset_match {aDictVar tok term} {$/;"	p
nearset_rc	ext/fts5/test/fts5_common.tcl	/^proc nearset_rc {aCol args} {$/;"	p
nearset_rf	ext/fts5/test/fts5_common.tcl	/^proc nearset_rf {aCol args} {$/;"	p
needCsvQuote	shell.c	/^static const char needCsvQuote[] = {$/;"	v	file:
needCsvQuote	src/shell.c	/^static const char needCsvQuote[] = {$/;"	v	file:
needCsvQuote	tsrc/shell.c	/^static const char needCsvQuote[] = {$/;"	v	file:
needFree	sqlite3.c	/^      u8 needFree;           \/* True if sqlite3_free(idxStr) is needed *\/$/;"	m	struct:WhereLoop::__anon98::__anon100	file:
needFree	src/whereInt.h	/^      u8 needFree;           \/* True if sqlite3_free(idxStr) is needed *\/$/;"	m	struct:WhereLoop::__anon47::__anon49
needFree	tsrc/whereInt.h	/^      u8 needFree;           \/* True if sqlite3_free(idxStr) is needed *\/$/;"	m	struct:WhereLoop::__anon12::__anon14
needToFreeIdxStr	sqlite3.c	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info	file:
needToFreeIdxStr	sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
needToFreeIdxStr	tsrc/sqlite3.h	/^  int needToFreeIdxStr;      \/* Free idxStr using sqlite3_free() if true *\/$/;"	m	struct:sqlite3_index_info
nested	sqlite3.c	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse	file:
nested	src/sqliteInt.h	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse
nested	tsrc/sqliteInt.h	/^  u8 nested;           \/* Number of nested calls to the parser\/code generator *\/$/;"	m	struct:Parse
neverCorrupt	sqlite3.c	/^  int neverCorrupt;                 \/* Database is always well-formed *\/$/;"	m	struct:Sqlite3Config	file:
neverCorrupt	src/sqliteInt.h	/^  int neverCorrupt;                 \/* Database is always well-formed *\/$/;"	m	struct:Sqlite3Config
neverCorrupt	tsrc/sqliteInt.h	/^  int neverCorrupt;                 \/* Database is always well-formed *\/$/;"	m	struct:Sqlite3Config
newDatabase	sqlite3.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newDatabase	src/btree.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newDatabase	tsrc/btree.c	/^static int newDatabase(BtShared *pBt){$/;"	f	file:
newRowid	ext/rtree/rtree.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newRowid	sqlite3.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newRowid	tsrc/rtree.c	/^static int newRowid(Rtree *pRtree, i64 *piRowid){$/;"	f	file:
newTnum	sqlite3.c	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
newTnum	src/sqliteInt.h	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
newTnum	tsrc/sqliteInt.h	/^    int newTnum;                \/* Rootpage of table being initialized *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
newconfig	tool/lemon.c	/^PRIVATE struct config *newconfig(){$/;"	f
newmask	sqlite3.c	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse	file:
newmask	src/sqliteInt.h	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse
newmask	tsrc/sqliteInt.h	/^  u32 newmask;         \/* Mask of new.* columns referenced *\/$/;"	m	struct:Parse
next	ext/fts1/ft_hash.h	/^  HashElem *next, *prev;   \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
next	ext/fts1/fts1_hash.h	/^  fts1HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts1HashElem
next	ext/fts2/fts2.c	/^  struct InteriorBlock *next;$/;"	m	struct:InteriorBlock	typeref:struct:InteriorBlock::InteriorBlock	file:
next	ext/fts2/fts2_hash.h	/^  fts2HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts2HashElem
next	ext/fts3/fts3_hash.h	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem
next	sqlite3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon90::__anon92	file:
next	sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
next	sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
next	sqlite3.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
next	src/hash.h	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
next	src/mem3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon64::__anon66	file:
next	src/mem5.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
next	tool/lemon.c	/^  struct action *next;     \/* Next action for this state *\/$/;"	m	struct:action	typeref:struct:action::action	file:
next	tool/lemon.c	/^  struct config *next;     \/* Next configuration in the state *\/$/;"	m	struct:config	typeref:struct:config::config	file:
next	tool/lemon.c	/^  struct plink *next;      \/* The next propagate link *\/$/;"	m	struct:plink	typeref:struct:plink::plink	file:
next	tool/lemon.c	/^  struct rule *next;       \/* Next rule in the global list *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
next	tool/lemon.c	/^  struct s_x1node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x1node	typeref:struct:s_x1node::s_x1node	file:
next	tool/lemon.c	/^  struct s_x2node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x2node	typeref:struct:s_x2node::s_x2node	file:
next	tool/lemon.c	/^  struct s_x3node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x3node	typeref:struct:s_x3node::s_x3node	file:
next	tool/lemon.c	/^  struct s_x4node *next;   \/* Next entry with the same hash *\/$/;"	m	struct:s_x4node	typeref:struct:s_x4node::s_x4node	file:
next	tsrc/fts1_hash.h	/^  fts1HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts1HashElem
next	tsrc/fts2.c	/^  struct InteriorBlock *next;$/;"	m	struct:InteriorBlock	typeref:struct:InteriorBlock::InteriorBlock	file:
next	tsrc/fts2_hash.h	/^  fts2HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts2HashElem
next	tsrc/fts3_hash.h	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem
next	tsrc/hash.h	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
next	tsrc/mem3.c	/^      u32 next;       \/* Index in mem3.aPool[] of next free chunk *\/$/;"	m	struct:Mem3Block::__anon34::__anon36	file:
next	tsrc/mem5.c	/^  int next;       \/* Index of next free chunk *\/$/;"	m	struct:Mem5Link	file:
next2	src/test_tclvar.c	/^static int next2(Tcl_Interp *interp, tclvar_cursor *pCur, Tcl_Obj *pObj){$/;"	f	file:
nextAutovac	sqlite3.c	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3	file:
nextAutovac	src/sqliteInt.h	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3
nextAutovac	tsrc/sqliteInt.h	/^  signed char nextAutovac;      \/* Autovac setting after VACUUM if >=0 *\/$/;"	m	struct:sqlite3
nextCharAppend	ext/misc/nextchar.c	/^static void nextCharAppend(nextCharContext *p, unsigned c){$/;"	f	file:
nextCharContext	ext/misc/nextchar.c	/^struct nextCharContext {$/;"	s	file:
nextCharContext	ext/misc/nextchar.c	/^typedef struct nextCharContext nextCharContext;$/;"	t	typeref:struct:nextCharContext	file:
nextCharFunc	ext/misc/nextchar.c	/^static void nextCharFunc($/;"	f	file:
nextColumn	ext/fts1/fts1.c	/^  int nextColumn;       \/* Next word parsed must be in this column *\/$/;"	m	struct:Query	file:
nextColumn	ext/fts2/fts2.c	/^  int nextColumn;       \/* Next word parsed must be in this column *\/$/;"	m	struct:Query	file:
nextColumn	tsrc/fts1.c	/^  int nextColumn;       \/* Next word parsed must be in this column *\/$/;"	m	struct:Query	file:
nextColumn	tsrc/fts2.c	/^  int nextColumn;       \/* Next word parsed must be in this column *\/$/;"	m	struct:Query	file:
nextDocid	ext/fts1/fts1.c	/^static sqlite_int64 nextDocid(DocListReader *pIn){$/;"	f	file:
nextDocid	tsrc/fts1.c	/^static sqlite_int64 nextDocid(DocListReader *pIn){$/;"	f	file:
nextIsOr	ext/fts1/fts1.c	/^  int nextIsOr;         \/* Set the isOr flag on the next inserted term *\/$/;"	m	struct:Query	file:
nextIsOr	ext/fts2/fts2.c	/^  int nextIsOr;         \/* Set the isOr flag on the next inserted term *\/$/;"	m	struct:Query	file:
nextIsOr	tsrc/fts1.c	/^  int nextIsOr;         \/* Set the isOr flag on the next inserted term *\/$/;"	m	struct:Query	file:
nextIsOr	tsrc/fts2.c	/^  int nextIsOr;         \/* Set the isOr flag on the next inserted term *\/$/;"	m	struct:Query	file:
nextPagesize	sqlite3.c	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3	file:
nextPagesize	src/sqliteInt.h	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3
nextPagesize	tsrc/sqliteInt.h	/^  int nextPagesize;             \/* Pagesize after VACUUM if >0 *\/$/;"	m	struct:sqlite3
nextPtr	autoconf/tea/win/nmakehlp.c	/^    struct list_item_t *nextPtr;$/;"	m	struct:list_item_t	typeref:struct:list_item_t::list_item_t	file:
nextShmId	sqlite3.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	sqlite3.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
nextShmId	src/os_unix.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	src/os_win.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
nextShmId	tsrc/os_unix.c	/^  u8 nextShmId;              \/* Next available unixShm.id value *\/$/;"	m	struct:unixShmNode	file:
nextShmId	tsrc/os_win.c	/^  u8 nextShmId;              \/* Next available winShm.id value *\/$/;"	m	struct:winShmNode	file:
next_stmt	sqlite3.c	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
next_stmt	sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
next_stmt	src/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
next_stmt	tsrc/sqlite3ext.h	/^  sqlite3_stmt *(*next_stmt)(sqlite3*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
nextlhs	tool/lemon.c	/^  struct rule *nextlhs;    \/* Next rule with the same LHS *\/$/;"	m	struct:rule	typeref:struct:rule::rule	file:
nfsUnlock	sqlite3.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
nfsUnlock	src/os_unix.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
nfsUnlock	tsrc/os_unix.c	/^static int nfsUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
nm_match_count	ext/fts3/fts3_test.c	/^static int nm_match_count($/;"	f	file:
nm_near_chain	ext/fts3/fts3_test.c	/^static int nm_near_chain($/;"	f	file:
nm_phrase_match	ext/fts3/fts3_test.c	/^static int nm_phrase_match($/;"	f	file:
nn	ext/fts5/fts5_index.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
nn	fts5.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
nn	sqlite3.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
nn	tsrc/fts5.c	/^  int nn;                         \/* Size of record in bytes *\/$/;"	m	struct:Fts5Data	file:
noCase	sqlite3.c	/^  u8 noCase;            \/* true to ignore case differences *\/$/;"	m	struct:compareInfo	file:
noCase	src/func.c	/^  u8 noCase;            \/* true to ignore case differences *\/$/;"	m	struct:compareInfo	file:
noCase	tsrc/func.c	/^  u8 noCase;            \/* true to ignore case differences *\/$/;"	m	struct:compareInfo	file:
noCode	tool/lemon.c	/^  int noCode;              \/* True if this rule has no associated C code *\/$/;"	m	struct:rule	file:
noLock	sqlite3.c	/^  u8 noLock;                  \/* Do not lock (except in WAL mode) *\/$/;"	m	struct:Pager	file:
noLock	src/pager.c	/^  u8 noLock;                  \/* Do not lock (except in WAL mode) *\/$/;"	m	struct:Pager	file:
noLock	tsrc/pager.c	/^  u8 noLock;                  \/* Do not lock (except in WAL mode) *\/$/;"	m	struct:Pager	file:
noSkipScan	sqlite3.c	/^  unsigned noSkipScan:1;   \/* Do not try to use skip-scan if true *\/$/;"	m	struct:Index	file:
noSkipScan	src/sqliteInt.h	/^  unsigned noSkipScan:1;   \/* Do not try to use skip-scan if true *\/$/;"	m	struct:Index
noSkipScan	tsrc/sqliteInt.h	/^  unsigned noSkipScan:1;   \/* Do not try to use skip-scan if true *\/$/;"	m	struct:Index
noSync	sqlite3.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
noSync	src/pager.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
noSync	tsrc/pager.c	/^  u8 noSync;                  \/* Do not sync the journal if true *\/$/;"	m	struct:Pager	file:
no_errors	tool/GetTclKit.bat	/^:no_errors$/;"	l
no_errors	tool/build-all-msvc.bat	/^:no_errors$/;"	l
nocaseCollatingFunc	sqlite3.c	/^static int nocaseCollatingFunc($/;"	f	file:
nocaseCollatingFunc	src/main.c	/^static int nocaseCollatingFunc($/;"	f	file:
nocaseCollatingFunc	tsrc/main.c	/^static int nocaseCollatingFunc($/;"	f	file:
nodeAcquire	ext/rtree/rtree.c	/^static int nodeAcquire($/;"	f	file:
nodeAcquire	sqlite3.c	/^static int nodeAcquire($/;"	f	file:
nodeAcquire	tsrc/rtree.c	/^static int nodeAcquire($/;"	f	file:
nodeDeleteCell	ext/rtree/rtree.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeDeleteCell	sqlite3.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeDeleteCell	tsrc/rtree.c	/^static void nodeDeleteCell(Rtree *pRtree, RtreeNode *pNode, int iCell){$/;"	f	file:
nodeGetCell	ext/rtree/rtree.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCell	sqlite3.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCell	tsrc/rtree.c	/^static void nodeGetCell($/;"	f	file:
nodeGetCoord	ext/rtree/rtree.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetCoord	sqlite3.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetCoord	tsrc/rtree.c	/^static void nodeGetCoord($/;"	f	file:
nodeGetRowid	ext/rtree/rtree.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeGetRowid	sqlite3.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeGetRowid	tsrc/rtree.c	/^static i64 nodeGetRowid($/;"	f	file:
nodeHash	ext/rtree/rtree.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHash	sqlite3.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHash	tsrc/rtree.c	/^static int nodeHash(i64 iNode){$/;"	f	file:
nodeHashDelete	ext/rtree/rtree.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashDelete	sqlite3.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashDelete	tsrc/rtree.c	/^static void nodeHashDelete(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	ext/rtree/rtree.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	sqlite3.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashInsert	tsrc/rtree.c	/^static void nodeHashInsert(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeHashLookup	ext/rtree/rtree.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeHashLookup	sqlite3.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeHashLookup	tsrc/rtree.c	/^static RtreeNode *nodeHashLookup(Rtree *pRtree, i64 iNode){$/;"	f	file:
nodeInsertCell	ext/rtree/rtree.c	/^static int nodeInsertCell($/;"	f	file:
nodeInsertCell	sqlite3.c	/^static int nodeInsertCell($/;"	f	file:
nodeInsertCell	tsrc/rtree.c	/^static int nodeInsertCell($/;"	f	file:
nodeNew	ext/rtree/rtree.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeNew	sqlite3.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeNew	tsrc/rtree.c	/^static RtreeNode *nodeNew(Rtree *pRtree, RtreeNode *pParent){$/;"	f	file:
nodeOverwriteCell	ext/rtree/rtree.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeOverwriteCell	sqlite3.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeOverwriteCell	tsrc/rtree.c	/^static void nodeOverwriteCell($/;"	f	file:
nodeParentIndex	ext/rtree/rtree.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodeParentIndex	sqlite3.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodeParentIndex	tsrc/rtree.c	/^static int nodeParentIndex(Rtree *pRtree, RtreeNode *pNode, int *piIndex){$/;"	f	file:
nodeReaderInit	ext/fts3/fts3_write.c	/^static int nodeReaderInit(NodeReader *p, const char *aNode, int nNode){$/;"	f	file:
nodeReaderInit	sqlite3.c	/^static int nodeReaderInit(NodeReader *p, const char *aNode, int nNode){$/;"	f	file:
nodeReaderInit	tsrc/fts3_write.c	/^static int nodeReaderInit(NodeReader *p, const char *aNode, int nNode){$/;"	f	file:
nodeReaderNext	ext/fts3/fts3_write.c	/^static int nodeReaderNext(NodeReader *p){$/;"	f	file:
nodeReaderNext	sqlite3.c	/^static int nodeReaderNext(NodeReader *p){$/;"	f	file:
nodeReaderNext	tsrc/fts3_write.c	/^static int nodeReaderNext(NodeReader *p){$/;"	f	file:
nodeReaderRelease	ext/fts3/fts3_write.c	/^static void nodeReaderRelease(NodeReader *p){$/;"	f	file:
nodeReaderRelease	sqlite3.c	/^static void nodeReaderRelease(NodeReader *p){$/;"	f	file:
nodeReaderRelease	tsrc/fts3_write.c	/^static void nodeReaderRelease(NodeReader *p){$/;"	f	file:
nodeReference	ext/rtree/rtree.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeReference	sqlite3.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeReference	tsrc/rtree.c	/^static void nodeReference(RtreeNode *p){$/;"	f	file:
nodeRelease	ext/rtree/rtree.c	/^static int nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRelease	sqlite3.c	/^static int nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRelease	tsrc/rtree.c	/^static int nodeRelease(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeRowidIndex	ext/rtree/rtree.c	/^static int nodeRowidIndex($/;"	f	file:
nodeRowidIndex	sqlite3.c	/^static int nodeRowidIndex($/;"	f	file:
nodeRowidIndex	tsrc/rtree.c	/^static int nodeRowidIndex($/;"	f	file:
nodeWrite	ext/rtree/rtree.c	/^static int nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeWrite	sqlite3.c	/^static int nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeWrite	tsrc/rtree.c	/^static int nodeWrite(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
nodeZero	ext/rtree/rtree.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
nodeZero	sqlite3.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
nodeZero	tsrc/rtree.c	/^static void nodeZero(Rtree *pRtree, RtreeNode *p){$/;"	f	file:
node_bbox	ext/rtree/viewrtree.tcl	/^proc node_bbox {data} {$/;"	p
nolinenosflag	tool/lemon.c	/^  int nolinenosflag;       \/* True if #line statements should not be printed *\/$/;"	m	struct:lemon	file:
nolockCheckReservedLock	sqlite3.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockCheckReservedLock	src/os_unix.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockCheckReservedLock	tsrc/os_unix.c	/^static int nolockCheckReservedLock(sqlite3_file *NotUsed, int *pResOut){$/;"	f	file:
nolockClose	sqlite3.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockClose	src/os_unix.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockClose	tsrc/os_unix.c	/^static int nolockClose(sqlite3_file *id) {$/;"	f	file:
nolockLock	sqlite3.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockLock	src/os_unix.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockLock	tsrc/os_unix.c	/^static int nolockLock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	sqlite3.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	src/os_unix.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nolockUnlock	tsrc/os_unix.c	/^static int nolockUnlock(sqlite3_file *NotUsed, int NotUsed2){$/;"	f	file:
nondeterministicFunction	src/test1.c	/^static void nondeterministicFunction($/;"	f	file:
nonzero_reserved_bytes	test/tester.tcl	/^proc nonzero_reserved_bytes {} {$/;"	p
noopFunc	sqlite3.c	103674;"	d	file:
noopFunc	src/func.c	466;"	d	file:
noopFunc	tsrc/func.c	466;"	d	file:
noopMutexAlloc	sqlite3.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexAlloc	src/mutex_noop.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexAlloc	tsrc/mutex_noop.c	/^static sqlite3_mutex *noopMutexAlloc(int id){ $/;"	f	file:
noopMutexEnd	sqlite3.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnd	src/mutex_noop.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnd	tsrc/mutex_noop.c	/^static int noopMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexEnter	sqlite3.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexEnter	src/mutex_noop.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexEnter	tsrc/mutex_noop.c	/^static void noopMutexEnter(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	sqlite3.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	src/mutex_noop.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexFree	tsrc/mutex_noop.c	/^static void noopMutexFree(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexInit	sqlite3.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexInit	src/mutex_noop.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexInit	tsrc/mutex_noop.c	/^static int noopMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
noopMutexLeave	sqlite3.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexLeave	src/mutex_noop.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexLeave	tsrc/mutex_noop.c	/^static void noopMutexLeave(sqlite3_mutex *p){ UNUSED_PARAMETER(p); return; }$/;"	f	file:
noopMutexTry	sqlite3.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
noopMutexTry	src/mutex_noop.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
noopMutexTry	tsrc/mutex_noop.c	/^static int noopMutexTry(sqlite3_mutex *p){$/;"	f	file:
normalMode	shell.c	/^  int normalMode;        \/* Output mode before ".explain on" *\/$/;"	m	struct:ShellState	file:
normalMode	src/shell.c	/^  int normalMode;        \/* Output mode before ".explain on" *\/$/;"	m	struct:ShellState	file:
normalMode	tsrc/shell.c	/^  int normalMode;        \/* Output mode before ".explain on" *\/$/;"	m	struct:ShellState	file:
normalize_list	test/tester.tcl	/^proc normalize_list {L} {$/;"	p
notIndexed	sqlite3.c	/^      unsigned notIndexed :1;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
notIndexed	src/sqliteInt.h	/^      unsigned notIndexed :1;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
notIndexed	tsrc/sqliteInt.h	/^      unsigned notIndexed :1;    \/* True if there is a NOT INDEXED clause *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
notNull	sqlite3.c	/^  u8 notNull;      \/* An OE_ code for handling a NOT NULL constraint *\/$/;"	m	struct:Column	file:
notNull	src/sqliteInt.h	/^  u8 notNull;      \/* An OE_ code for handling a NOT NULL constraint *\/$/;"	m	struct:Column
notNull	tsrc/sqliteInt.h	/^  u8 notNull;      \/* An OE_ code for handling a NOT NULL constraint *\/$/;"	m	struct:Column
notReady	sqlite3.c	/^  Bitmask notReady;          \/* FROM entries not usable at this level *\/$/;"	m	struct:WhereLevel	file:
notReady	src/whereInt.h	/^  Bitmask notReady;          \/* FROM entries not usable at this level *\/$/;"	m	struct:WhereLevel
notReady	tsrc/whereInt.h	/^  Bitmask notReady;          \/* FROM entries not usable at this level *\/$/;"	m	struct:WhereLevel
notUsed0	sqlite3.c	/^  u32 notUsed0;                   \/* Available for future enhancements *\/$/;"	m	struct:WalCkptInfo	file:
notUsed0	src/wal.c	/^  u32 notUsed0;                   \/* Available for future enhancements *\/$/;"	m	struct:WalCkptInfo	file:
notUsed0	tsrc/wal.c	/^  u32 notUsed0;                   \/* Available for future enhancements *\/$/;"	m	struct:WalCkptInfo	file:
notUsed1	sqlite3.c	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon78	file:
notUsed1	sqlite3.c	/^  u8 notUsed1;$/;"	m	struct:VdbeOp	file:
notUsed1	src/sqliteInt.h	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon52
notUsed1	src/vdbe.h	/^  u8 notUsed1;$/;"	m	struct:VdbeOp
notUsed1	tsrc/sqliteInt.h	/^    double notUsed1;            \/* Spacer *\/$/;"	m	union:sqlite3::__anon20
notUsed1	tsrc/vdbe.h	/^  u8 notUsed1;$/;"	m	struct:VdbeOp
notValid	sqlite3.c	/^static void notValid($/;"	f	file:
notValid	src/resolve.c	/^static void notValid($/;"	f	file:
notValid	tsrc/resolve.c	/^static void notValid($/;"	f	file:
now	test/releasetest.tcl	/^proc now {} {$/;"	p
nowValue	sqlite3.c	/^  sqlite3StatValueType nowValue[10];  \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
nowValue	src/status.c	/^  sqlite3StatValueType nowValue[10];  \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
nowValue	tsrc/status.c	/^  sqlite3StatValueType nowValue[10];  \/* Current value *\/$/;"	m	struct:sqlite3StatType	file:
nrhs	fts5.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon72	file:
nrhs	fts5parse.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon70	file:
nrhs	lempar.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon6	file:
nrhs	parse.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon42	file:
nrhs	sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon104	file:
nrhs	sqlite3.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon108	file:
nrhs	tool/lemon.c	/^  int nrhs;                  \/* Number of right-hand side symbols seen *\/$/;"	m	struct:pstate	file:
nrhs	tool/lemon.c	/^  int nrhs;                \/* Number of RHS symbols *\/$/;"	m	struct:rule	file:
nrhs	tool/lempar.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon3	file:
nrhs	tsrc/fts5.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon32	file:
nrhs	tsrc/parse.c	/^  unsigned char nrhs;     \/* Number of right-hand side symbols in the rule *\/$/;"	m	struct:__anon19	file:
nrule	tool/lemon.c	/^  int nrule;               \/* Number of rules *\/$/;"	m	struct:lemon	file:
nstate	tool/lemon.c	/^  int nstate;              \/* Number of states *\/$/;"	m	struct:lemon	file:
nsubsym	tool/lemon.c	/^  int nsubsym;             \/* Number of constituent symbols in the MULTI *\/$/;"	m	struct:symbol	file:
nsymbol	tool/lemon.c	/^  int nsymbol;             \/* Number of terminal and nonterminal symbols *\/$/;"	m	struct:lemon	file:
nterminal	tool/lemon.c	/^  int nterminal;           \/* Number of terminal symbols *\/$/;"	m	struct:lemon	file:
nullRow	sqlite3.c	/^  u8 nullRow;           \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor	file:
nullRow	src/vdbeInt.h	/^  u8 nullRow;           \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor
nullRow	tsrc/vdbeInt.h	/^  u8 nullRow;           \/* True if pointing to a row with no data *\/$/;"	m	struct:VdbeCursor
nullRule	ext/misc/fuzzer.c	/^  fuzzer_rule nullRule;      \/* Null rule used first *\/$/;"	m	struct:fuzzer_cursor	file:
nullValue	shell.c	/^  char nullValue[20];    \/* The text to print when a NULL comes back from$/;"	m	struct:ShellState	file:
nullValue	src/shell.c	/^  char nullValue[20];    \/* The text to print when a NULL comes back from$/;"	m	struct:ShellState	file:
nullValue	tsrc/shell.c	/^  char nullValue[20];    \/* The text to print when a NULL comes back from$/;"	m	struct:ShellState	file:
nullifFunc	sqlite3.c	/^static void nullifFunc($/;"	f	file:
nullifFunc	src/func.c	/^static void nullifFunc($/;"	f	file:
nullifFunc	tsrc/func.c	/^static void nullifFunc($/;"	f	file:
numberOfCachePages	sqlite3.c	/^static int numberOfCachePages(PCache *p){$/;"	f	file:
numberOfCachePages	src/pcache.c	/^static int numberOfCachePages(PCache *p){$/;"	f	file:
numberOfCachePages	tsrc/pcache.c	/^static int numberOfCachePages(PCache *p){$/;"	f	file:
number_name	tool/mkspeedsql.tcl	/^proc number_name {n} {$/;"	p
number_name	tool/speedtest.tcl	/^proc number_name {n} {$/;"	p
number_name	tool/speedtest2.tcl	/^proc number_name {n} {$/;"	p
numericType	sqlite3.c	/^static u16 numericType(Mem *pMem){$/;"	f	file:
numericType	src/vdbe.c	/^static u16 numericType(Mem *pMem){$/;"	f	file:
numericType	tsrc/vdbe.c	/^static u16 numericType(Mem *pMem){$/;"	f	file:
nxstate	tool/lemon.c	/^  int nxstate;             \/* nstate with tail degenerate states removed *\/$/;"	m	struct:lemon	file:
nzVar	sqlite3.c	/^  int nzVar;                \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse	file:
nzVar	sqlite3.c	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe	file:
nzVar	src/sqliteInt.h	/^  int nzVar;                \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse
nzVar	src/vdbeInt.h	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe
nzVar	tsrc/sqliteInt.h	/^  int nzVar;                \/* Number of available slots in azVar[] *\/$/;"	m	struct:Parse
nzVar	tsrc/vdbeInt.h	/^  ynVar nzVar;            \/* Number of entries in azVar[] *\/$/;"	m	struct:Vdbe
objiter	ext/rbu/sqlite3rbu.c	/^  RbuObjIter objiter;             \/* Iterator for skipping through tbl\/idx *\/$/;"	m	struct:sqlite3rbu	file:
objiter	sqlite3.c	/^  RbuObjIter objiter;             \/* Iterator for skipping through tbl\/idx *\/$/;"	m	struct:sqlite3rbu	file:
objiter	tsrc/sqlite3rbu.c	/^  RbuObjIter objiter;             \/* Iterator for skipping through tbl\/idx *\/$/;"	m	struct:sqlite3rbu	file:
offset	sqlite3.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offset	src/os_unix.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offset	tool/mkkeywordhash.c	/^  int offset;          \/* Offset to start of name string *\/$/;"	m	struct:Keyword	file:
offset	tsrc/os_unix.c	/^  unsigned long long offset;        \/* offset to first byte to lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
offsetof	sqlite3.c	11534;"	d	file:
offsetof	src/sqliteInt.h	600;"	d
offsetof	tsrc/sqliteInt.h	600;"	d
ofst2byte	tool/offsets.c	/^static int ofst2byte(GState *p, int ofst){$/;"	f	file:
ofst4byte	tool/offsets.c	/^static int ofst4byte(GState *p, int ofst){$/;"	f	file:
ofstError	tool/offsets.c	/^static void ofstError(GState *p, const char *zFormat, ...){$/;"	f	file:
ofstInFile	tool/offsets.c	/^static int ofstInFile(GState *p, int ofst){$/;"	f	file:
ofstPopPage	tool/offsets.c	/^static void ofstPopPage(GState *p){$/;"	f	file:
ofstPushPage	tool/offsets.c	/^static void ofstPushPage(GState *p, int pgno){$/;"	f	file:
ofstRootAndColumn	tool/offsets.c	/^static void ofstRootAndColumn($/;"	f	file:
ofstSerialSize	tool/offsets.c	/^static int ofstSerialSize(int scode){$/;"	f	file:
ofstTrace	tool/offsets.c	/^static void ofstTrace(GState *p, const char *zFormat, ...){$/;"	f	file:
ofstVarint	tool/offsets.c	/^static sqlite3_int64 ofstVarint(GState *p, int *pOfst){$/;"	f	file:
ofstWalkInteriorPage	tool/offsets.c	/^static void ofstWalkInteriorPage(GState *p){$/;"	f	file:
ofstWalkLeafPage	tool/offsets.c	/^static void ofstWalkLeafPage(GState *p){$/;"	f	file:
ofstWalkPage	tool/offsets.c	/^static void ofstWalkPage(GState *p, int pgno){$/;"	f	file:
ok	src/test1.c	/^  int ok;             \/* Finished ok *\/$/;"	m	struct:win32FileLocker	file:
okConstFactor	sqlite3.c	/^  u8 okConstFactor;    \/* OK to factor out constants *\/$/;"	m	struct:Parse	file:
okConstFactor	src/sqliteInt.h	/^  u8 okConstFactor;    \/* OK to factor out constants *\/$/;"	m	struct:Parse
okConstFactor	tsrc/sqliteInt.h	/^  u8 okConstFactor;    \/* OK to factor out constants *\/$/;"	m	struct:Parse
oldLockingContext	sqlite3.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
oldLockingContext	src/os_unix.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
oldLockingContext	tsrc/os_unix.c	/^  void *oldLockingContext;     \/* Original lockingcontext to restore on close *\/$/;"	m	struct:proxyLockingContext	file:
oldmask	sqlite3.c	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse	file:
oldmask	src/sqliteInt.h	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse
oldmask	tsrc/sqliteInt.h	/^  u32 oldmask;         \/* Mask of old.* columns referenced *\/$/;"	m	struct:Parse
omit	sqlite3.c	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage	file:
omit	sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
omit	tsrc/sqlite3.h	/^    unsigned char omit;      \/* Do not code a test for this constraint *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint_usage
omitMask	sqlite3.c	/^      u16 omitMask;          \/* Terms that may be omitted *\/$/;"	m	struct:WhereLoop::__anon98::__anon100	file:
omitMask	src/whereInt.h	/^      u16 omitMask;          \/* Terms that may be omitted *\/$/;"	m	struct:WhereLoop::__anon47::__anon49
omitMask	tsrc/whereInt.h	/^      u16 omitMask;          \/* Terms that may be omitted *\/$/;"	m	struct:WhereLoop::__anon12::__anon14
omit_test	test/tester.tcl	/^proc omit_test {name reason {append 1}} {$/;"	p
onError	sqlite3.c	/^  u8 onError;              \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index	file:
onError	src/sqliteInt.h	/^  u8 onError;              \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index
onError	tsrc/sqliteInt.h	/^  u8 onError;              \/* OE_Abort, OE_Ignore, OE_Replace, or OE_None *\/$/;"	m	struct:Index
onErrorText	sqlite3.c	/^static const char *onErrorText(int onError){$/;"	f	file:
onErrorText	src/trigger.c	/^static const char *onErrorText(int onError){$/;"	f	file:
onErrorText	tsrc/trigger.c	/^static const char *onErrorText(int onError){$/;"	f	file:
one	test/randexpr1.tcl	/^proc one {args} {$/;"	p
one_input_line	shell.c	/^static char *one_input_line(FILE *in, char *zPrior, int isContinuation){$/;"	f	file:
one_input_line	src/shell.c	/^static char *one_input_line(FILE *in, char *zPrior, int isContinuation){$/;"	f	file:
one_input_line	tsrc/shell.c	/^static char *one_input_line(FILE *in, char *zPrior, int isContinuation){$/;"	f	file:
oom	ext/misc/json1.c	/^  u8 oom;            \/* Set to true if out of memory *\/$/;"	m	struct:JsonParse	file:
oom	sqlite3.c	/^  u8 oom;            \/* Set to true if out of memory *\/$/;"	m	struct:JsonParse	file:
oom	tsrc/json1.c	/^  u8 oom;            \/* Set to true if out of memory *\/$/;"	m	struct:JsonParse	file:
oomErr	ext/misc/amatch.c	/^  int oomErr;                \/* True following an OOM error *\/$/;"	m	struct:amatch_cursor	file:
oomFault	tool/fuzzershell.c	/^static void oomFault(void){$/;"	f	file:
oomMalloc	tool/fuzzershell.c	/^static void *oomMalloc(int nByte){$/;"	f	file:
oomRealloc	tool/fuzzershell.c	/^static void *oomRealloc(void *pOld, int nByte){$/;"	f	file:
oom_injectstart	test/malloc_common.tcl	/^proc oom_injectstart {nRepeat iFail} {$/;"	p
oom_injectstop	test/malloc_common.tcl	/^proc oom_injectstop {} {$/;"	p
op	ext/async/sqlite3async.c	/^  int op;                      \/* One of ASYNC_xxx etc. *\/$/;"	m	struct:AsyncWrite	file:
op	ext/rtree/rtree.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	ext/session/sqlite3session.c	/^  int op;                         \/* Current operation *\/$/;"	m	struct:sqlite3_changeset_iter	file:
op	ext/session/sqlite3session.c	/^  int op;                         \/* One of UPDATE, DELETE, INSERT *\/$/;"	m	struct:SessionChange	file:
op	sqlite3.c	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
op	sqlite3.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	sqlite3.c	/^  int op;                         \/* Current operation *\/$/;"	m	struct:sqlite3_changeset_iter	file:
op	sqlite3.c	/^  int op;                         \/* One of SQLITE_INSERT, UPDATE, DELETE *\/$/;"	m	struct:PreUpdate	file:
op	sqlite3.c	/^  int op;                         \/* One of UPDATE, DELETE, INSERT *\/$/;"	m	struct:SessionChange	file:
op	sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
op	sqlite3.c	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause	file:
op	sqlite3.c	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger	file:
op	sqlite3.c	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select	file:
op	sqlite3.c	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr	file:
op	sqlite3.c	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep	file:
op	sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op	src/sqliteInt.h	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger
op	src/sqliteInt.h	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select
op	src/sqliteInt.h	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr
op	src/sqliteInt.h	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep
op	src/test_server.c	/^  int op;                      \/* Opcode for the message *\/$/;"	m	struct:SqlMessage	file:
op	src/vdbeInt.h	/^  int op;                         \/* One of SQLITE_INSERT, UPDATE, DELETE *\/$/;"	m	struct:PreUpdate
op	src/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
op	src/whereInt.h	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause
op	tool/lemon.c	/^static struct s_options *op;$/;"	v	typeref:struct:s_options	file:
op	tsrc/rtree.c	/^  int op;                         \/* Constraining operation *\/$/;"	m	struct:RtreeConstraint	file:
op	tsrc/sqlite3.h	/^     unsigned char op;         \/* Constraint operator *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
op	tsrc/sqlite3session.c	/^  int op;                         \/* Current operation *\/$/;"	m	struct:sqlite3_changeset_iter	file:
op	tsrc/sqlite3session.c	/^  int op;                         \/* One of UPDATE, DELETE, INSERT *\/$/;"	m	struct:SessionChange	file:
op	tsrc/sqliteInt.h	/^  u8 op;                  \/* One of TK_DELETE, TK_UPDATE, TK_INSERT         *\/$/;"	m	struct:Trigger
op	tsrc/sqliteInt.h	/^  u8 op;                 \/* One of: TK_UNION TK_ALL TK_INTERSECT TK_EXCEPT *\/$/;"	m	struct:Select
op	tsrc/sqliteInt.h	/^  u8 op;                 \/* Operation performed by this node *\/$/;"	m	struct:Expr
op	tsrc/sqliteInt.h	/^  u8 op;               \/* One of TK_DELETE, TK_UPDATE, TK_INSERT, TK_SELECT *\/$/;"	m	struct:TriggerStep
op	tsrc/vdbeInt.h	/^  int op;                         \/* One of SQLITE_INSERT, UPDATE, DELETE *\/$/;"	m	struct:PreUpdate
op	tsrc/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
op	tsrc/whereInt.h	/^  u8 op;                   \/* Split operator.  TK_AND or TK_OR *\/$/;"	m	struct:WhereClause
op2	sqlite3.c	/^  u8 op2;                \/* TK_REGISTER: original value of Expr.op$/;"	m	struct:Expr	file:
op2	src/sqliteInt.h	/^  u8 op2;                \/* TK_REGISTER: original value of Expr.op$/;"	m	struct:Expr
op2	tsrc/sqliteInt.h	/^  u8 op2;                \/* TK_REGISTER: original value of Expr.op$/;"	m	struct:Expr
opIterNext	sqlite3.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opIterNext	src/vdbeaux.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opIterNext	tsrc/vdbeaux.c	/^static Op *opIterNext(VdbeOpIter *p){$/;"	f	file:
opMask	sqlite3.c	/^  u32 opMask;                \/* Acceptable operators *\/$/;"	m	struct:WhereScan	file:
opMask	src/whereInt.h	/^  u32 opMask;                \/* Acceptable operators *\/$/;"	m	struct:WhereScan
opMask	tsrc/whereInt.h	/^  u32 opMask;                \/* Acceptable operators *\/$/;"	m	struct:WhereScan
opPrecedence	ext/fts3/fts3_expr.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opPrecedence	sqlite3.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opPrecedence	tsrc/fts3_expr.c	/^static int opPrecedence(Fts3Expr *p){$/;"	f	file:
opcode	sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp	file:
opcode	sqlite3.c	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList	file:
opcode	src/vdbe.h	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp
opcode	src/vdbe.h	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList
opcode	tsrc/vdbe.h	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOp
opcode	tsrc/vdbe.h	/^  u8 opcode;          \/* What operation to perform *\/$/;"	m	struct:VdbeOpList
open	sqlite3.c	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open	sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open	src/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open	tsrc/sqlite3ext.h	/^  int  (*open)(const char*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	sqlite3.c	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines	file:
open16	sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	src/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
open16	tsrc/sqlite3ext.h	/^  int  (*open16)(const void*,sqlite3**);$/;"	m	struct:sqlite3_api_routines
openDatabase	sqlite3.c	/^static int openDatabase($/;"	f	file:
openDatabase	src/main.c	/^static int openDatabase($/;"	f	file:
openDatabase	tool/showdb.c	/^static sqlite3 *openDatabase(const char *zPrg, const char *zName){$/;"	f	file:
openDatabase	tsrc/main.c	/^static int openDatabase($/;"	f	file:
openDb	tool/rollback-test.c	/^static sqlite3 *openDb(const char *zFilename){$/;"	f	file:
openDirectory	sqlite3.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openDirectory	src/os_unix.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openDirectory	tsrc/os_unix.c	/^static int openDirectory(const char *zFilename, int *pFd){$/;"	f	file:
openFlags	ext/rbu/sqlite3rbu.c	/^  int openFlags;                  \/* Flags this file was opened with *\/$/;"	m	struct:rbu_file	file:
openFlags	sqlite3.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	sqlite3.c	/^  int openFlags;                  \/* Flags this file was opened with *\/$/;"	m	struct:rbu_file	file:
openFlags	sqlite3.c	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared	file:
openFlags	sqlite3.c	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3	file:
openFlags	src/btreeInt.h	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared
openFlags	src/os_unix.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	src/sqliteInt.h	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3
openFlags	src/tclsqlite.c	/^  int openFlags;             \/* Flags used to open.  (SQLITE_OPEN_URI) *\/$/;"	m	struct:SqliteDb	file:
openFlags	tsrc/btreeInt.h	/^  u8 openFlags;         \/* Flags to sqlite3BtreeOpen() *\/$/;"	m	struct:BtShared
openFlags	tsrc/os_unix.c	/^  int openFlags;                      \/* The flags specified at open() *\/$/;"	m	struct:unixFile	file:
openFlags	tsrc/sqlite3rbu.c	/^  int openFlags;                  \/* Flags this file was opened with *\/$/;"	m	struct:rbu_file	file:
openFlags	tsrc/sqliteInt.h	/^  unsigned int openFlags;       \/* Flags passed to sqlite3_vfs.xOpen() *\/$/;"	m	struct:sqlite3
openFlags	tsrc/tclsqlite.c	/^  int openFlags;             \/* Flags used to open.  (SQLITE_OPEN_URI) *\/$/;"	m	struct:SqliteDb	file:
openRbuHandle	ext/rbu/sqlite3rbu.c	/^static sqlite3rbu *openRbuHandle($/;"	f	file:
openRbuHandle	sqlite3.c	/^static sqlite3rbu *openRbuHandle($/;"	f	file:
openRbuHandle	tsrc/sqlite3rbu.c	/^static sqlite3rbu *openRbuHandle($/;"	f	file:
openStatTable	sqlite3.c	/^static void openStatTable($/;"	f	file:
openStatTable	src/analyze.c	/^static void openStatTable($/;"	f	file:
openStatTable	tsrc/analyze.c	/^static void openStatTable($/;"	f	file:
openSubJournal	sqlite3.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
openSubJournal	src/pager.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
openSubJournal	tsrc/pager.c	/^static int openSubJournal(Pager *pPager){$/;"	f	file:
openTransaction	src/test_journal.c	/^static int openTransaction(jt_file *pMain, jt_file *pJournal){$/;"	f	file:
open_db	shell.c	/^static void open_db(ShellState *p, int keepAlive){$/;"	f	file:
open_db	src/shell.c	/^static void open_db(ShellState *p, int keepAlive){$/;"	f	file:
open_db	tsrc/shell.c	/^static void open_db(ShellState *p, int keepAlive){$/;"	f	file:
open_v2	sqlite3.c	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines	file:
open_v2	sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
open_v2	src/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
open_v2	tsrc/sqlite3ext.h	/^  int (*open_v2)(const char*,sqlite3**,int,const char*);$/;"	m	struct:sqlite3_api_routines
opendb	test/threadtest3.c	41;"	d	file:
opendb_x	test/threadtest3.c	/^static void opendb_x($/;"	f	file:
opendir	src/test_windirent.c	/^LPDIR opendir($/;"	f
operatorMask	sqlite3.c	/^static u16 operatorMask(int op){$/;"	f	file:
operatorMask	src/whereexpr.c	/^static u16 operatorMask(int op){$/;"	f	file:
operatorMask	tsrc/whereexpr.c	/^static u16 operatorMask(int op){$/;"	f	file:
opnum	src/test4.c	/^  int opnum;             \/* Operation number *\/$/;"	m	struct:Thread	file:
opnum	src/test7.c	/^  volatile int opnum;      \/* Operation number *\/$/;"	m	struct:Thread	file:
optLeavesReaderAtEnd	ext/fts2/fts2.c	/^static int optLeavesReaderAtEnd(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderAtEnd	tsrc/fts2.c	/^static int optLeavesReaderAtEnd(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderCmp	ext/fts2/fts2.c	/^static int optLeavesReaderCmp(OptLeavesReader *lr1, OptLeavesReader *lr2){$/;"	f	file:
optLeavesReaderCmp	tsrc/fts2.c	/^static int optLeavesReaderCmp(OptLeavesReader *lr1, OptLeavesReader *lr2){$/;"	f	file:
optLeavesReaderData	ext/fts2/fts2.c	/^static const char *optLeavesReaderData(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderData	tsrc/fts2.c	/^static const char *optLeavesReaderData(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderDataBytes	ext/fts2/fts2.c	/^static int optLeavesReaderDataBytes(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderDataBytes	tsrc/fts2.c	/^static int optLeavesReaderDataBytes(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderReorder	ext/fts2/fts2.c	/^static void optLeavesReaderReorder(OptLeavesReader *pLr, int nLr){$/;"	f	file:
optLeavesReaderReorder	tsrc/fts2.c	/^static void optLeavesReaderReorder(OptLeavesReader *pLr, int nLr){$/;"	f	file:
optLeavesReaderStep	ext/fts2/fts2.c	/^static int optLeavesReaderStep(fulltext_vtab *v, OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderStep	tsrc/fts2.c	/^static int optLeavesReaderStep(fulltext_vtab *v, OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderTerm	ext/fts2/fts2.c	/^static const char *optLeavesReaderTerm(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderTerm	tsrc/fts2.c	/^static const char *optLeavesReaderTerm(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderTermBytes	ext/fts2/fts2.c	/^static int optLeavesReaderTermBytes(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderTermBytes	tsrc/fts2.c	/^static int optLeavesReaderTermBytes(OptLeavesReader *pReader){$/;"	f	file:
optLeavesReaderTermCmp	ext/fts2/fts2.c	/^static int optLeavesReaderTermCmp(OptLeavesReader *lr1, OptLeavesReader *lr2){$/;"	f	file:
optLeavesReaderTermCmp	tsrc/fts2.c	/^static int optLeavesReaderTermCmp(OptLeavesReader *lr1, OptLeavesReader *lr2){$/;"	f	file:
optimalReserve	sqlite3.c	/^  u8 optimalReserve;    \/* Desired amount of reserved space per page *\/$/;"	m	struct:BtShared	file:
optimalReserve	src/btreeInt.h	/^  u8 optimalReserve;    \/* Desired amount of reserved space per page *\/$/;"	m	struct:BtShared
optimalReserve	tsrc/btreeInt.h	/^  u8 optimalReserve;    \/* Desired amount of reserved space per page *\/$/;"	m	struct:BtShared
optimization_control	src/test1.c	/^static int SQLITE_TCLAPI optimization_control($/;"	f	file:
optimizeFunc	ext/fts2/fts2.c	/^static void optimizeFunc(sqlite3_context *pContext,$/;"	f	file:
optimizeFunc	tsrc/fts2.c	/^static void optimizeFunc(sqlite3_context *pContext,$/;"	f	file:
optimizeInternal	ext/fts2/fts2.c	/^static int optimizeInternal(fulltext_vtab *v,$/;"	f	file:
optimizeInternal	tsrc/fts2.c	/^static int optimizeInternal(fulltext_vtab *v,$/;"	f	file:
optionMatch	shell.c	/^static int optionMatch(const char *zStr, const char *zOpt){$/;"	f	file:
optionMatch	src/shell.c	/^static int optionMatch(const char *zStr, const char *zOpt){$/;"	f	file:
optionMatch	tsrc/shell.c	/^static int optionMatch(const char *zStr, const char *zOpt){$/;"	f	file:
option_type	tool/lemon.c	/^enum option_type { OPT_FLAG=1,  OPT_INT,  OPT_DBL,  OPT_STR,$/;"	g	file:
orconf	sqlite3.c	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg	file:
orconf	sqlite3.c	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep	file:
orconf	src/sqliteInt.h	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg
orconf	src/sqliteInt.h	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep
orconf	tsrc/sqliteInt.h	/^  int orconf;             \/* Default ON CONFLICT policy *\/$/;"	m	struct:TriggerPrg
orconf	tsrc/sqliteInt.h	/^  u8 orconf;           \/* OE_Rollback etc. *\/$/;"	m	struct:TriggerStep
orderByConsumed	sqlite3.c	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info	file:
orderByConsumed	sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orderByConsumed	tsrc/sqlite3.h	/^  int orderByConsumed;       \/* True if output is already ordered *\/$/;"	m	struct:sqlite3_index_info
orderedDLReaderCmp	ext/fts2/fts2.c	/^static int orderedDLReaderCmp(OrderedDLReader *r1, OrderedDLReader *r2){$/;"	f	file:
orderedDLReaderCmp	tsrc/fts2.c	/^static int orderedDLReaderCmp(OrderedDLReader *r1, OrderedDLReader *r2){$/;"	f	file:
orderedDLReaderReorder	ext/fts2/fts2.c	/^static void orderedDLReaderReorder(OrderedDLReader *p, int n){$/;"	f	file:
orderedDLReaderReorder	tsrc/fts2.c	/^static void orderedDLReaderReorder(OrderedDLReader *p, int n){$/;"	f	file:
orig_access	src/test_syscall.c	157;"	d	file:
orig_close	src/test_syscall.c	156;"	d	file:
orig_fallocate	src/test_syscall.c	172;"	d	file:
orig_fchmod	src/test_syscall.c	171;"	d	file:
orig_fcntl	src/test_syscall.c	162;"	d	file:
orig_fstat	src/test_syscall.c	160;"	d	file:
orig_ftruncate	src/test_syscall.c	161;"	d	file:
orig_getcwd	src/test_syscall.c	158;"	d	file:
orig_getpagesize	src/test_syscall.c	/^  sqlite3_syscall_ptr orig_getpagesize;$/;"	m	struct:TestSyscallGlobal	file:
orig_mmap	src/test_syscall.c	173;"	d	file:
orig_mremap	src/test_syscall.c	174;"	d	file:
orig_open	src/test_syscall.c	155;"	d	file:
orig_pread	src/test_syscall.c	164;"	d	file:
orig_pread64	src/test_syscall.c	165;"	d	file:
orig_pwrite	src/test_syscall.c	167;"	d	file:
orig_pwrite64	src/test_syscall.c	169;"	d	file:
orig_read	src/test_syscall.c	163;"	d	file:
orig_stat	src/test_syscall.c	159;"	d	file:
orig_write	src/test_syscall.c	166;"	d	file:
orphanTrigger	sqlite3.c	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo	file:
orphanTrigger	src/sqliteInt.h	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
orphanTrigger	tsrc/sqliteInt.h	/^    u8 orphanTrigger;           \/* Last statement is orphaned TEMP trigger *\/$/;"	m	struct:sqlite3::sqlite3InitInfo
osAccess	sqlite3.c	29690;"	d	file:
osAccess	src/os_unix.c	365;"	d	file:
osAccess	tsrc/os_unix.c	365;"	d	file:
osAreFileApisANSI	sqlite3.c	37591;"	d	file:
osAreFileApisANSI	sqlite3.c	37612;"	d	file:
osAreFileApisANSI	src/os_win.c	475;"	d	file:
osAreFileApisANSI	src/os_win.c	496;"	d	file:
osAreFileApisANSI	tsrc/os_win.c	475;"	d	file:
osAreFileApisANSI	tsrc/os_win.c	496;"	d	file:
osCharLowerW	sqlite3.c	37621;"	d	file:
osCharLowerW	src/os_win.c	505;"	d	file:
osCharLowerW	tsrc/os_win.c	505;"	d	file:
osCharUpperW	sqlite3.c	37629;"	d	file:
osCharUpperW	src/os_win.c	513;"	d	file:
osCharUpperW	tsrc/os_win.c	513;"	d	file:
osClose	sqlite3.c	29687;"	d	file:
osClose	src/os_unix.c	362;"	d	file:
osClose	tsrc/os_unix.c	362;"	d	file:
osCloseHandle	sqlite3.c	37633;"	d	file:
osCloseHandle	src/os_win.c	517;"	d	file:
osCloseHandle	tsrc/os_win.c	517;"	d	file:
osCreateEventExW	sqlite3.c	38099;"	d	file:
osCreateEventExW	src/os_win.c	983;"	d	file:
osCreateEventExW	tsrc/os_win.c	983;"	d	file:
osCreateFile2	sqlite3.c	38153;"	d	file:
osCreateFile2	src/os_win.c	1037;"	d	file:
osCreateFile2	tsrc/os_win.c	1037;"	d	file:
osCreateFileA	sqlite3.c	37641;"	d	file:
osCreateFileA	src/os_win.c	525;"	d	file:
osCreateFileA	tsrc/os_win.c	525;"	d	file:
osCreateFileMappingA	sqlite3.c	37661;"	d	file:
osCreateFileMappingA	src/os_win.c	545;"	d	file:
osCreateFileMappingA	tsrc/os_win.c	545;"	d	file:
osCreateFileMappingFromApp	sqlite3.c	38208;"	d	file:
osCreateFileMappingFromApp	src/os_win.c	1092;"	d	file:
osCreateFileMappingFromApp	tsrc/os_win.c	1092;"	d	file:
osCreateFileMappingW	sqlite3.c	37671;"	d	file:
osCreateFileMappingW	src/os_win.c	555;"	d	file:
osCreateFileMappingW	tsrc/os_win.c	555;"	d	file:
osCreateFileW	sqlite3.c	37650;"	d	file:
osCreateFileW	src/os_win.c	534;"	d	file:
osCreateFileW	tsrc/os_win.c	534;"	d	file:
osCreateMutexW	sqlite3.c	37680;"	d	file:
osCreateMutexW	src/os_win.c	564;"	d	file:
osCreateMutexW	tsrc/os_win.c	564;"	d	file:
osDeleteFileA	sqlite3.c	37689;"	d	file:
osDeleteFileA	src/os_win.c	573;"	d	file:
osDeleteFileA	tsrc/os_win.c	573;"	d	file:
osDeleteFileW	sqlite3.c	37697;"	d	file:
osDeleteFileW	src/os_win.c	581;"	d	file:
osDeleteFileW	tsrc/os_win.c	581;"	d	file:
osFallocate	sqlite3.c	29762;"	d	file:
osFallocate	src/os_unix.c	437;"	d	file:
osFallocate	tsrc/os_unix.c	437;"	d	file:
osFchmod	sqlite3.c	29755;"	d	file:
osFchmod	src/os_unix.c	430;"	d	file:
osFchmod	tsrc/os_unix.c	430;"	d	file:
osFchown	sqlite3.c	29781;"	d	file:
osFchown	src/os_unix.c	456;"	d	file:
osFchown	tsrc/os_unix.c	456;"	d	file:
osFcntl	sqlite3.c	29716;"	d	file:
osFcntl	sqlite3.c	30091;"	d	file:
osFcntl	sqlite3.c	30092;"	d	file:
osFcntl	src/os_unix.c	391;"	d	file:
osFcntl	src/os_unix.c	766;"	d	file:
osFcntl	src/os_unix.c	767;"	d	file:
osFcntl	tsrc/os_unix.c	391;"	d	file:
osFcntl	tsrc/os_unix.c	766;"	d	file:
osFcntl	tsrc/os_unix.c	767;"	d	file:
osFileTimeToLocalFileTime	sqlite3.c	37705;"	d	file:
osFileTimeToLocalFileTime	src/os_win.c	589;"	d	file:
osFileTimeToLocalFileTime	tsrc/os_win.c	589;"	d	file:
osFileTimeToSystemTime	sqlite3.c	37714;"	d	file:
osFileTimeToSystemTime	src/os_win.c	598;"	d	file:
osFileTimeToSystemTime	tsrc/os_win.c	598;"	d	file:
osFlushFileBuffers	sqlite3.c	37719;"	d	file:
osFlushFileBuffers	src/os_win.c	603;"	d	file:
osFlushFileBuffers	tsrc/os_win.c	603;"	d	file:
osFlushViewOfFile	sqlite3.c	38250;"	d	file:
osFlushViewOfFile	src/os_win.c	1134;"	d	file:
osFlushViewOfFile	tsrc/os_win.c	1134;"	d	file:
osFormatMessageA	sqlite3.c	37727;"	d	file:
osFormatMessageA	src/os_win.c	611;"	d	file:
osFormatMessageA	tsrc/os_win.c	611;"	d	file:
osFormatMessageW	sqlite3.c	37736;"	d	file:
osFormatMessageW	src/os_win.c	620;"	d	file:
osFormatMessageW	tsrc/os_win.c	620;"	d	file:
osFreeLibrary	sqlite3.c	37745;"	d	file:
osFreeLibrary	src/os_win.c	629;"	d	file:
osFreeLibrary	tsrc/os_win.c	629;"	d	file:
osFstat	sqlite3.c	29706;"	d	file:
osFstat	src/os_unix.c	381;"	d	file:
osFstat	tsrc/os_unix.c	381;"	d	file:
osFtruncate	sqlite3.c	29713;"	d	file:
osFtruncate	src/os_unix.c	388;"	d	file:
osFtruncate	tsrc/os_unix.c	388;"	d	file:
osGetCurrentProcessId	sqlite3.c	37749;"	d	file:
osGetCurrentProcessId	src/os_win.c	633;"	d	file:
osGetCurrentProcessId	tsrc/os_win.c	633;"	d	file:
osGetDiskFreeSpaceA	sqlite3.c	37757;"	d	file:
osGetDiskFreeSpaceA	src/os_win.c	641;"	d	file:
osGetDiskFreeSpaceA	tsrc/os_win.c	641;"	d	file:
osGetDiskFreeSpaceW	sqlite3.c	37766;"	d	file:
osGetDiskFreeSpaceW	src/os_win.c	650;"	d	file:
osGetDiskFreeSpaceW	tsrc/os_win.c	650;"	d	file:
osGetFileAttributesA	sqlite3.c	37775;"	d	file:
osGetFileAttributesA	src/os_win.c	659;"	d	file:
osGetFileAttributesA	tsrc/os_win.c	659;"	d	file:
osGetFileAttributesExW	sqlite3.c	37791;"	d	file:
osGetFileAttributesExW	src/os_win.c	675;"	d	file:
osGetFileAttributesExW	tsrc/os_win.c	675;"	d	file:
osGetFileAttributesW	sqlite3.c	37783;"	d	file:
osGetFileAttributesW	src/os_win.c	667;"	d	file:
osGetFileAttributesW	tsrc/os_win.c	667;"	d	file:
osGetFileInformationByHandleEx	sqlite3.c	38135;"	d	file:
osGetFileInformationByHandleEx	src/os_win.c	1019;"	d	file:
osGetFileInformationByHandleEx	tsrc/os_win.c	1019;"	d	file:
osGetFileSize	sqlite3.c	37800;"	d	file:
osGetFileSize	src/os_win.c	684;"	d	file:
osGetFileSize	tsrc/os_win.c	684;"	d	file:
osGetFullPathNameA	sqlite3.c	37808;"	d	file:
osGetFullPathNameA	src/os_win.c	692;"	d	file:
osGetFullPathNameA	tsrc/os_win.c	692;"	d	file:
osGetFullPathNameW	sqlite3.c	37817;"	d	file:
osGetFullPathNameW	src/os_win.c	701;"	d	file:
osGetFullPathNameW	tsrc/os_win.c	701;"	d	file:
osGetLastError	sqlite3.c	37822;"	d	file:
osGetLastError	src/os_win.c	706;"	d	file:
osGetLastError	tsrc/os_win.c	706;"	d	file:
osGetNativeSystemInfo	sqlite3.c	38179;"	d	file:
osGetNativeSystemInfo	src/os_win.c	1063;"	d	file:
osGetNativeSystemInfo	tsrc/os_win.c	1063;"	d	file:
osGetProcAddressA	sqlite3.c	37837;"	d	file:
osGetProcAddressA	src/os_win.c	721;"	d	file:
osGetProcAddressA	tsrc/os_win.c	721;"	d	file:
osGetProcessHeap	sqlite3.c	38200;"	d	file:
osGetProcessHeap	src/os_win.c	1084;"	d	file:
osGetProcessHeap	tsrc/os_win.c	1084;"	d	file:
osGetSystemInfo	sqlite3.c	37846;"	d	file:
osGetSystemInfo	src/os_win.c	730;"	d	file:
osGetSystemInfo	tsrc/os_win.c	730;"	d	file:
osGetSystemTime	sqlite3.c	37850;"	d	file:
osGetSystemTime	src/os_win.c	734;"	d	file:
osGetSystemTime	tsrc/os_win.c	734;"	d	file:
osGetSystemTimeAsFileTime	sqlite3.c	37858;"	d	file:
osGetSystemTimeAsFileTime	src/os_win.c	742;"	d	file:
osGetSystemTimeAsFileTime	tsrc/os_win.c	742;"	d	file:
osGetTempPathA	sqlite3.c	37867;"	d	file:
osGetTempPathA	src/os_win.c	751;"	d	file:
osGetTempPathA	tsrc/os_win.c	751;"	d	file:
osGetTempPathW	sqlite3.c	37875;"	d	file:
osGetTempPathW	src/os_win.c	759;"	d	file:
osGetTempPathW	tsrc/os_win.c	759;"	d	file:
osGetTickCount	sqlite3.c	37883;"	d	file:
osGetTickCount	src/os_win.c	767;"	d	file:
osGetTickCount	tsrc/os_win.c	767;"	d	file:
osGetTickCount64	sqlite3.c	38171;"	d	file:
osGetTickCount64	src/os_win.c	1055;"	d	file:
osGetTickCount64	tsrc/os_win.c	1055;"	d	file:
osGetVersionExA	sqlite3.c	37891;"	d	file:
osGetVersionExA	src/os_win.c	775;"	d	file:
osGetVersionExA	tsrc/os_win.c	775;"	d	file:
osGetVersionExW	sqlite3.c	37901;"	d	file:
osGetVersionExW	src/os_win.c	785;"	d	file:
osGetVersionExW	tsrc/os_win.c	785;"	d	file:
osGetcwd	sqlite3.c	29693;"	d	file:
osGetcwd	src/os_unix.c	368;"	d	file:
osGetcwd	tsrc/os_unix.c	368;"	d	file:
osGeteuid	sqlite3.c	29784;"	d	file:
osGeteuid	src/os_unix.c	459;"	d	file:
osGeteuid	tsrc/os_unix.c	459;"	d	file:
osGetpagesize	sqlite3.c	29812;"	d	file:
osGetpagesize	src/os_unix.c	487;"	d	file:
osGetpagesize	tsrc/os_unix.c	487;"	d	file:
osGetpid	sqlite3.c	29299;"	d	file:
osGetpid	src/os_unix.c	172;"	d	file:
osGetpid	tsrc/os_unix.c	172;"	d	file:
osHeapAlloc	sqlite3.c	37906;"	d	file:
osHeapAlloc	src/os_win.c	790;"	d	file:
osHeapAlloc	tsrc/os_win.c	790;"	d	file:
osHeapCompact	sqlite3.c	37955;"	d	file:
osHeapCompact	src/os_win.c	839;"	d	file:
osHeapCompact	tsrc/os_win.c	839;"	d	file:
osHeapCreate	sqlite3.c	37915;"	d	file:
osHeapCreate	src/os_win.c	799;"	d	file:
osHeapCreate	tsrc/os_win.c	799;"	d	file:
osHeapDestroy	sqlite3.c	37924;"	d	file:
osHeapDestroy	src/os_win.c	808;"	d	file:
osHeapDestroy	tsrc/os_win.c	808;"	d	file:
osHeapFree	sqlite3.c	37928;"	d	file:
osHeapFree	src/os_win.c	812;"	d	file:
osHeapFree	tsrc/os_win.c	812;"	d	file:
osHeapReAlloc	sqlite3.c	37932;"	d	file:
osHeapReAlloc	src/os_win.c	816;"	d	file:
osHeapReAlloc	tsrc/os_win.c	816;"	d	file:
osHeapSize	sqlite3.c	37937;"	d	file:
osHeapSize	src/os_win.c	821;"	d	file:
osHeapSize	tsrc/os_win.c	821;"	d	file:
osHeapValidate	sqlite3.c	37946;"	d	file:
osHeapValidate	src/os_win.c	830;"	d	file:
osHeapValidate	tsrc/os_win.c	830;"	d	file:
osInterlockedCompareExchange	sqlite3.c	38219;"	d	file:
osInterlockedCompareExchange	src/os_win.c	1103;"	d	file:
osInterlockedCompareExchange	tsrc/os_win.c	1103;"	d	file:
osIsNT	sqlite3.c	38513;"	d	file:
osIsNT	sqlite3.c	38515;"	d	file:
osIsNT	sqlite3.c	38517;"	d	file:
osIsNT	sqlite3.c	38519;"	d	file:
osIsNT	src/os_win.c	1397;"	d	file:
osIsNT	src/os_win.c	1399;"	d	file:
osIsNT	src/os_win.c	1401;"	d	file:
osIsNT	src/os_win.c	1403;"	d	file:
osIsNT	tsrc/os_win.c	1397;"	d	file:
osIsNT	tsrc/os_win.c	1399;"	d	file:
osIsNT	tsrc/os_win.c	1401;"	d	file:
osIsNT	tsrc/os_win.c	1403;"	d	file:
osLoadLibraryA	sqlite3.c	37963;"	d	file:
osLoadLibraryA	src/os_win.c	847;"	d	file:
osLoadLibraryA	tsrc/os_win.c	847;"	d	file:
osLoadLibraryW	sqlite3.c	37972;"	d	file:
osLoadLibraryW	src/os_win.c	856;"	d	file:
osLoadLibraryW	tsrc/os_win.c	856;"	d	file:
osLoadPackagedLibrary	sqlite3.c	38162;"	d	file:
osLoadPackagedLibrary	src/os_win.c	1046;"	d	file:
osLoadPackagedLibrary	tsrc/os_win.c	1046;"	d	file:
osLocalFree	sqlite3.c	37980;"	d	file:
osLocalFree	src/os_win.c	864;"	d	file:
osLocalFree	tsrc/os_win.c	864;"	d	file:
osLocaltime	sqlite3.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osLocaltime	src/date.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osLocaltime	tsrc/date.c	/^static int osLocaltime(time_t *t, struct tm *pTm){$/;"	f	file:
osLockFile	sqlite3.c	37989;"	d	file:
osLockFile	src/os_win.c	873;"	d	file:
osLockFile	tsrc/os_win.c	873;"	d	file:
osLockFileEx	sqlite3.c	38000;"	d	file:
osLockFileEx	src/os_win.c	884;"	d	file:
osLockFileEx	tsrc/os_win.c	884;"	d	file:
osLstat	sqlite3.c	29826;"	d	file:
osLstat	src/os_unix.c	501;"	d	file:
osLstat	tsrc/os_unix.c	501;"	d	file:
osMapViewOfFile	sqlite3.c	38011;"	d	file:
osMapViewOfFile	src/os_win.c	895;"	d	file:
osMapViewOfFile	tsrc/os_win.c	895;"	d	file:
osMapViewOfFileFromApp	sqlite3.c	38144;"	d	file:
osMapViewOfFileFromApp	src/os_win.c	1028;"	d	file:
osMapViewOfFileFromApp	tsrc/os_win.c	1028;"	d	file:
osMkdir	sqlite3.c	29771;"	d	file:
osMkdir	src/os_unix.c	446;"	d	file:
osMkdir	tsrc/os_unix.c	446;"	d	file:
osMmap	sqlite3.c	29791;"	d	file:
osMmap	src/os_unix.c	466;"	d	file:
osMmap	tsrc/os_unix.c	466;"	d	file:
osMremap	sqlite3.c	29805;"	d	file:
osMremap	src/os_unix.c	480;"	d	file:
osMremap	tsrc/os_unix.c	480;"	d	file:
osMultiByteToWideChar	sqlite3.c	38016;"	d	file:
osMultiByteToWideChar	src/os_win.c	900;"	d	file:
osMultiByteToWideChar	tsrc/os_win.c	900;"	d	file:
osMunmap	sqlite3.c	29798;"	d	file:
osMunmap	src/os_unix.c	473;"	d	file:
osMunmap	tsrc/os_unix.c	473;"	d	file:
osOpen	sqlite3.c	29684;"	d	file:
osOpen	src/os_unix.c	359;"	d	file:
osOpen	tsrc/os_unix.c	359;"	d	file:
osOpenDirectory	sqlite3.c	29768;"	d	file:
osOpenDirectory	src/os_unix.c	443;"	d	file:
osOpenDirectory	tsrc/os_unix.c	443;"	d	file:
osOutputDebugStringA	sqlite3.c	38188;"	d	file:
osOutputDebugStringA	src/os_win.c	1072;"	d	file:
osOutputDebugStringA	tsrc/os_win.c	1072;"	d	file:
osOutputDebugStringW	sqlite3.c	38196;"	d	file:
osOutputDebugStringW	src/os_win.c	1080;"	d	file:
osOutputDebugStringW	tsrc/os_win.c	1080;"	d	file:
osPread	sqlite3.c	29726;"	d	file:
osPread	src/os_unix.c	401;"	d	file:
osPread	tsrc/os_unix.c	401;"	d	file:
osPread64	sqlite3.c	29733;"	d	file:
osPread64	src/os_unix.c	408;"	d	file:
osPread64	tsrc/os_unix.c	408;"	d	file:
osPwrite	sqlite3.c	29743;"	d	file:
osPwrite	src/os_unix.c	418;"	d	file:
osPwrite	tsrc/os_unix.c	418;"	d	file:
osPwrite64	sqlite3.c	29751;"	d	file:
osPwrite64	src/os_unix.c	426;"	d	file:
osPwrite64	tsrc/os_unix.c	426;"	d	file:
osQueryPerformanceCounter	sqlite3.c	38021;"	d	file:
osQueryPerformanceCounter	src/os_win.c	905;"	d	file:
osQueryPerformanceCounter	tsrc/os_win.c	905;"	d	file:
osRead	sqlite3.c	29719;"	d	file:
osRead	src/os_unix.c	394;"	d	file:
osRead	tsrc/os_unix.c	394;"	d	file:
osReadFile	sqlite3.c	38026;"	d	file:
osReadFile	src/os_win.c	910;"	d	file:
osReadFile	tsrc/os_win.c	910;"	d	file:
osReadlink	sqlite3.c	29819;"	d	file:
osReadlink	src/os_unix.c	494;"	d	file:
osReadlink	tsrc/os_unix.c	494;"	d	file:
osRmdir	sqlite3.c	29774;"	d	file:
osRmdir	src/os_unix.c	449;"	d	file:
osRmdir	tsrc/os_unix.c	449;"	d	file:
osSetEndOfFile	sqlite3.c	38031;"	d	file:
osSetEndOfFile	src/os_win.c	915;"	d	file:
osSetEndOfFile	tsrc/os_win.c	915;"	d	file:
osSetFilePointer	sqlite3.c	38039;"	d	file:
osSetFilePointer	src/os_win.c	923;"	d	file:
osSetFilePointer	tsrc/os_win.c	923;"	d	file:
osSetFilePointerEx	sqlite3.c	38126;"	d	file:
osSetFilePointerEx	src/os_win.c	1010;"	d	file:
osSetFilePointerEx	tsrc/os_win.c	1010;"	d	file:
osSleep	sqlite3.c	38048;"	d	file:
osSleep	src/os_win.c	932;"	d	file:
osSleep	tsrc/os_win.c	932;"	d	file:
osStat	sqlite3.c	29696;"	d	file:
osStat	src/os_unix.c	371;"	d	file:
osStat	tsrc/os_unix.c	371;"	d	file:
osSystemTimeToFileTime	sqlite3.c	38052;"	d	file:
osSystemTimeToFileTime	src/os_win.c	936;"	d	file:
osSystemTimeToFileTime	tsrc/os_win.c	936;"	d	file:
osUnlink	sqlite3.c	29765;"	d	file:
osUnlink	src/os_unix.c	440;"	d	file:
osUnlink	tsrc/os_unix.c	440;"	d	file:
osUnlockFile	sqlite3.c	38062;"	d	file:
osUnlockFile	src/os_win.c	946;"	d	file:
osUnlockFile	tsrc/os_win.c	946;"	d	file:
osUnlockFileEx	sqlite3.c	38072;"	d	file:
osUnlockFileEx	src/os_win.c	956;"	d	file:
osUnlockFileEx	tsrc/os_win.c	956;"	d	file:
osUnmapViewOfFile	sqlite3.c	38081;"	d	file:
osUnmapViewOfFile	src/os_win.c	965;"	d	file:
osUnmapViewOfFile	tsrc/os_win.c	965;"	d	file:
osUuidCreate	sqlite3.c	38233;"	d	file:
osUuidCreate	src/os_win.c	1117;"	d	file:
osUuidCreate	tsrc/os_win.c	1117;"	d	file:
osUuidCreateSequential	sqlite3.c	38241;"	d	file:
osUuidCreateSequential	src/os_win.c	1125;"	d	file:
osUuidCreateSequential	tsrc/os_win.c	1125;"	d	file:
osWaitForSingleObject	sqlite3.c	38108;"	d	file:
osWaitForSingleObject	src/os_win.c	992;"	d	file:
osWaitForSingleObject	tsrc/os_win.c	992;"	d	file:
osWaitForSingleObjectEx	sqlite3.c	38117;"	d	file:
osWaitForSingleObjectEx	src/os_win.c	1001;"	d	file:
osWaitForSingleObjectEx	tsrc/os_win.c	1001;"	d	file:
osWideCharToMultiByte	sqlite3.c	38085;"	d	file:
osWideCharToMultiByte	src/os_win.c	969;"	d	file:
osWideCharToMultiByte	tsrc/os_win.c	969;"	d	file:
osWrite	sqlite3.c	29736;"	d	file:
osWrite	src/os_unix.c	411;"	d	file:
osWrite	tsrc/os_unix.c	411;"	d	file:
osWriteFile	sqlite3.c	38090;"	d	file:
osWriteFile	src/os_win.c	974;"	d	file:
osWriteFile	tsrc/os_win.c	974;"	d	file:
otherError	ext/misc/nextchar.c	/^  int otherError;                   \/* True for any other failure *\/$/;"	m	struct:nextCharContext	file:
out	ext/misc/vfslog.c	/^  FILE *out;                      \/* Write information here *\/$/;"	m	struct:VLogLog	file:
out	shell.c	/^  FILE *out;             \/* Write results here *\/$/;"	m	struct:ShellState	file:
out	src/shell.c	/^  FILE *out;             \/* Write results here *\/$/;"	m	struct:ShellState	file:
out	tsrc/shell.c	/^  FILE *out;             \/* Write results here *\/$/;"	m	struct:ShellState	file:
out2Prerelease	sqlite3.c	/^static Mem *out2Prerelease(Vdbe *p, VdbeOp *pOp){$/;"	f	file:
out2Prerelease	src/vdbe.c	/^static Mem *out2Prerelease(Vdbe *p, VdbeOp *pOp){$/;"	f	file:
out2Prerelease	tsrc/vdbe.c	/^static Mem *out2Prerelease(Vdbe *p, VdbeOp *pOp){$/;"	f	file:
out2PrereleaseWithClear	sqlite3.c	/^static SQLITE_NOINLINE Mem *out2PrereleaseWithClear(Mem *pOut){$/;"	f	file:
out2PrereleaseWithClear	src/vdbe.c	/^static SQLITE_NOINLINE Mem *out2PrereleaseWithClear(Mem *pOut){$/;"	f	file:
out2PrereleaseWithClear	tsrc/vdbe.c	/^static SQLITE_NOINLINE Mem *out2PrereleaseWithClear(Mem *pOut){$/;"	f	file:
outCount	shell.c	/^  int outCount;          \/* Revert to stdout when reaching zero *\/$/;"	m	struct:ShellState	file:
outCount	src/shell.c	/^  int outCount;          \/* Revert to stdout when reaching zero *\/$/;"	m	struct:ShellState	file:
outCount	tsrc/shell.c	/^  int outCount;          \/* Revert to stdout when reaching zero *\/$/;"	m	struct:ShellState	file:
out_of_memory	tool/showdb.c	/^static void out_of_memory(void){$/;"	f	file:
out_of_memory	tool/showjournal.c	/^static void out_of_memory(void){$/;"	f	file:
out_of_memory	tool/showwal.c	/^static void out_of_memory(void){$/;"	f	file:
outfile	shell.c	/^  char outfile[FILENAME_MAX]; \/* Filename for *out *\/$/;"	m	struct:ShellState	file:
outfile	src/shell.c	/^  char outfile[FILENAME_MAX]; \/* Filename for *out *\/$/;"	m	struct:ShellState	file:
outfile	tsrc/shell.c	/^  char outfile[FILENAME_MAX]; \/* Filename for *out *\/$/;"	m	struct:ShellState	file:
outname	tool/lemon.c	/^  char *outname;           \/* Name of the current output file *\/$/;"	m	struct:lemon	file:
output	ext/fts5/extract_api_docs.tcl	/^  proc output {text} {$/;"	p
output1	test/tester.tcl	/^proc output1 {args} {$/;"	p
output2	test/tester.tcl	/^proc output2 {args} {$/;"	p
output2_if_no_verbose	test/tester.tcl	/^proc output2_if_no_verbose {args} {$/;"	p
output_c_string	shell.c	/^static void output_c_string(FILE *out, const char *z){$/;"	f	file:
output_c_string	src/shell.c	/^static void output_c_string(FILE *out, const char *z){$/;"	f	file:
output_c_string	tsrc/shell.c	/^static void output_c_string(FILE *out, const char *z){$/;"	f	file:
output_csv	shell.c	/^static void output_csv(ShellState *p, const char *z, int bSep){$/;"	f	file:
output_csv	src/shell.c	/^static void output_csv(ShellState *p, const char *z, int bSep){$/;"	f	file:
output_csv	tsrc/shell.c	/^static void output_csv(ShellState *p, const char *z, int bSep){$/;"	f	file:
output_file_close	shell.c	/^static void output_file_close(FILE *f){$/;"	f	file:
output_file_close	src/shell.c	/^static void output_file_close(FILE *f){$/;"	f	file:
output_file_close	tsrc/shell.c	/^static void output_file_close(FILE *f){$/;"	f	file:
output_file_open	shell.c	/^static FILE *output_file_open(const char *zFile){$/;"	f	file:
output_file_open	src/shell.c	/^static FILE *output_file_open(const char *zFile){$/;"	f	file:
output_file_open	tsrc/shell.c	/^static FILE *output_file_open(const char *zFile){$/;"	f	file:
output_hex_blob	shell.c	/^static void output_hex_blob(FILE *out, const void *pBlob, int nBlob){$/;"	f	file:
output_hex_blob	src/shell.c	/^static void output_hex_blob(FILE *out, const void *pBlob, int nBlob){$/;"	f	file:
output_hex_blob	tsrc/shell.c	/^static void output_hex_blob(FILE *out, const void *pBlob, int nBlob){$/;"	f	file:
output_html_string	shell.c	/^static void output_html_string(FILE *out, const char *z){$/;"	f	file:
output_html_string	src/shell.c	/^static void output_html_string(FILE *out, const char *z){$/;"	f	file:
output_html_string	tsrc/shell.c	/^static void output_html_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_string	shell.c	/^static void output_quoted_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_string	src/shell.c	/^static void output_quoted_string(FILE *out, const char *z){$/;"	f	file:
output_quoted_string	tsrc/shell.c	/^static void output_quoted_string(FILE *out, const char *z){$/;"	f	file:
output_reset	shell.c	/^static void output_reset(ShellState *p){$/;"	f	file:
output_reset	src/shell.c	/^static void output_reset(ShellState *p){$/;"	f	file:
output_reset	tsrc/shell.c	/^static void output_reset(ShellState *p){$/;"	f	file:
overflow	sqlite3.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overflow	src/func.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overflow	tool/lemon.c	/^  char *overflow;          \/* Code to execute on a stack overflow *\/$/;"	m	struct:lemon	file:
overflow	tsrc/func.c	/^  u8 overflow;      \/* True if integer overflow seen *\/$/;"	m	struct:SumCtx	file:
overload_function	sqlite3.c	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines	file:
overload_function	sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
overload_function	src/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
overload_function	tsrc/sqlite3ext.h	/^  int (*overload_function)(sqlite3*, const char *zFuncName, int nArg);$/;"	m	struct:sqlite3_api_routines
overloadedGlobFunction	src/test8.c	/^static void overloadedGlobFunction($/;"	f	file:
override	vsixtest/App.xaml.h	/^		virtual void OnLaunched(Windows::ApplicationModel::Activation::LaunchActivatedEventArgs^ e) override;$/;"	m	class:vsixtest::sealed
owner	sqlite3.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	sqlite3.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	src/mutex_unix.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	src/mutex_w32.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	tsrc/mutex_unix.c	/^  volatile pthread_t owner;  \/* Thread that is within this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
owner	tsrc/mutex_w32.c	/^  volatile DWORD owner;      \/* Thread holding this mutex *\/$/;"	m	struct:sqlite3_mutex	file:
p	ext/fts1/fts1.c	/^  char *p;            \/* Pointer to next unread byte in the doclist *\/$/;"	m	struct:DocListReader	file:
p	ext/fts1/fulltext.c	/^  char *p;$/;"	m	struct:DocListReader	file:
p	ext/fts5/fts5Int.h	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token
p	ext/fts5/fts5Int.h	/^  u8 *p;$/;"	m	struct:Fts5Buffer
p	ext/fts5/fts5_index.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	ext/session/test_session.c	/^  void *p;$/;"	m	struct:TestSessionsBlob	file:
p	fts5.c	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token	file:
p	fts5.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	fts5.c	/^  u8 *p;$/;"	m	struct:Fts5Buffer	file:
p	shell.c	/^  sqlite3_session *p;      \/* The open session *\/$/;"	m	struct:OpenSession	file:
p	sqlite3.c	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::p4union	file:
p	sqlite3.c	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token	file:
p	sqlite3.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	sqlite3.c	/^  u8 *p;$/;"	m	struct:Fts5Buffer	file:
p	sqlite3.c	/^  void *p;          \/* Pointer to sampled record *\/$/;"	m	struct:IndexSample	file:
p	src/shell.c	/^  sqlite3_session *p;      \/* The open session *\/$/;"	m	struct:OpenSession	file:
p	src/sqliteInt.h	/^  void *p;          \/* Pointer to sampled record *\/$/;"	m	struct:IndexSample
p	src/test_multiplex.c	/^    sqlite3_file *p;                  \/* Handle for the chunk *\/$/;"	m	struct:multiplexGroup::multiplexReal	file:
p	src/vdbe.h	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::p4union
p	tsrc/fts1.c	/^  char *p;            \/* Pointer to next unread byte in the doclist *\/$/;"	m	struct:DocListReader	file:
p	tsrc/fts5.c	/^  const char *p;                  \/* Token text (not NULL terminated) *\/$/;"	m	struct:Fts5Token	file:
p	tsrc/fts5.c	/^  u8 *p;                          \/* Pointer to buffer containing record *\/$/;"	m	struct:Fts5Data	file:
p	tsrc/fts5.c	/^  u8 *p;$/;"	m	struct:Fts5Buffer	file:
p	tsrc/shell.c	/^  sqlite3_session *p;      \/* The open session *\/$/;"	m	struct:OpenSession	file:
p	tsrc/sqliteInt.h	/^  void *p;          \/* Pointer to sampled record *\/$/;"	m	struct:IndexSample
p	tsrc/vdbe.h	/^    void *p;               \/* Generic pointer *\/$/;"	m	union:VdbeOp::p4union
p1	sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p1	sqlite3.c	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp	file:
p1	sqlite3.c	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList	file:
p1	src/vdbe.h	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp
p1	src/vdbe.h	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList
p1	src/whereInt.h	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel
p1	tsrc/vdbe.h	/^  int p1;             \/* First operand *\/$/;"	m	struct:VdbeOp
p1	tsrc/vdbe.h	/^  signed char p1;     \/* First operand *\/$/;"	m	struct:VdbeOpList
p1	tsrc/whereInt.h	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel
p2	sqlite3.c	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel	file:
p2	sqlite3.c	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp	file:
p2	sqlite3.c	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList	file:
p2	src/vdbe.h	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp
p2	src/vdbe.h	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList
p2	src/whereInt.h	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel
p2	tsrc/vdbe.h	/^  int p2;             \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOp
p2	tsrc/vdbe.h	/^  signed char p2;     \/* Second parameter (often the jump destination) *\/$/;"	m	struct:VdbeOpList
p2	tsrc/whereInt.h	/^  int p1, p2;           \/* Operands of the opcode used to ends the loop *\/$/;"	m	struct:WhereLevel
p3	sqlite3.c	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp	file:
p3	sqlite3.c	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList	file:
p3	sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p3	src/vdbe.h	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp
p3	src/vdbe.h	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList
p3	src/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
p3	tsrc/vdbe.h	/^  int p3;             \/* The third parameter *\/$/;"	m	struct:VdbeOp
p3	tsrc/vdbe.h	/^  signed char p3;     \/* Third parameter *\/$/;"	m	struct:VdbeOpList
p3	tsrc/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
p4	sqlite3.c	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::p4union	file:
p4	src/vdbe.h	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::p4union
p4	tsrc/vdbe.h	/^  } p4;$/;"	m	struct:VdbeOp	typeref:union:VdbeOp::p4union
p4type	sqlite3.c	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp	file:
p4type	src/vdbe.h	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp
p4type	tsrc/vdbe.h	/^  signed char p4type; \/* One of the P4_xxx constants for p4 *\/$/;"	m	struct:VdbeOp
p4union	sqlite3.c	/^  union p4union {     \/* fourth parameter *\/$/;"	u	struct:VdbeOp	file:
p4union	src/vdbe.h	/^  union p4union {     \/* fourth parameter *\/$/;"	u	struct:VdbeOp
p4union	tsrc/vdbe.h	/^  union p4union {     \/* fourth parameter *\/$/;"	u	struct:VdbeOp
p5	sqlite3.c	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel	file:
p5	sqlite3.c	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp	file:
p5	src/vdbe.h	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp
p5	src/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
p5	tsrc/vdbe.h	/^  u8 p5;              \/* Fifth parameter is an unsigned character *\/$/;"	m	struct:VdbeOp
p5	tsrc/whereInt.h	/^  u8 op, p3, p5;        \/* Opcode, P3 & P5 of the opcode that ends the loop *\/$/;"	m	struct:WhereLevel
pAfter	ext/misc/amatch.c	/^  amatch_avl *pAfter;   \/* Other elements greater than zKey *\/$/;"	m	struct:amatch_avl	file:
pAfter	ext/misc/closure.c	/^  closure_avl *pAfter;  \/* Other elements greater than id *\/$/;"	m	struct:closure_avl	file:
pAggInfo	sqlite3.c	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr	file:
pAggInfo	sqlite3.c	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext	file:
pAggInfo	src/sqliteInt.h	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr
pAggInfo	src/sqliteInt.h	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext
pAggInfo	tsrc/sqliteInt.h	/^  AggInfo *pAggInfo;     \/* Used by TK_AGG_COLUMN and TK_AGG_FUNCTION *\/$/;"	m	struct:Expr
pAggInfo	tsrc/sqliteInt.h	/^  AggInfo *pAggInfo;   \/* Information about aggregates at this level *\/$/;"	m	struct:NameContext
pAinc	sqlite3.c	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse	file:
pAinc	src/sqliteInt.h	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse
pAinc	tsrc/sqliteInt.h	/^  AutoincInfo *pAinc;  \/* Information about AUTOINCREMENT counters *\/$/;"	m	struct:Parse
pAllCur	ext/misc/vtshim.c	/^  vtshim_cursor *pAllCur;  \/* List of all cursors *\/$/;"	m	struct:vtshim_vtab	file:
pAllVtab	ext/misc/vtshim.c	/^  vtshim_vtab *pAllVtab;        \/* List of all vtshim_vtab objects *\/$/;"	m	struct:vtshim_aux	file:
pAllWords	ext/misc/amatch.c	/^  amatch_word *pAllWords;    \/* List of all amatch_word objects *\/$/;"	m	struct:amatch_cursor	file:
pAltCursor	sqlite3.c	/^  VdbeCursor *pAltCursor; \/* Associated index cursor from which to read *\/$/;"	m	struct:VdbeCursor	file:
pAltCursor	src/vdbeInt.h	/^  VdbeCursor *pAltCursor; \/* Associated index cursor from which to read *\/$/;"	m	struct:VdbeCursor
pAltCursor	tsrc/vdbeInt.h	/^  VdbeCursor *pAltCursor; \/* Associated index cursor from which to read *\/$/;"	m	struct:VdbeCursor
pAndInfo	sqlite3.c	/^    WhereAndInfo *pAndInfo; \/* Extra information if (eOperator& WO_AND)!=0 *\/$/;"	m	union:WhereTerm::__anon101	file:
pAndInfo	src/whereInt.h	/^    WhereAndInfo *pAndInfo; \/* Extra information if (eOperator& WO_AND)!=0 *\/$/;"	m	union:WhereTerm::__anon50
pAndInfo	tsrc/whereInt.h	/^    WhereAndInfo *pAndInfo; \/* Extra information if (eOperator& WO_AND)!=0 *\/$/;"	m	union:WhereTerm::__anon15
pApi	ext/fts5/fts5_aux.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pApi	ext/fts5/fts5_tcl.c	/^  const Fts5ExtensionApi *pApi;$/;"	m	struct:F5tApi	file:
pApi	fts5.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pApi	sqlite3.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pApi	tsrc/fts5.c	/^  const Fts5ExtensionApi *pApi;   \/* API offered by current FTS version *\/$/;"	m	struct:CInstIter	file:
pAppData	sqlite3.c	/^  void *pAppData;                    \/* The extra pAppData, if any. *\/$/;"	m	struct:winVfsAppData	file:
pAppData	sqlite3.c	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods	file:
pAppData	sqlite3.c	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs	file:
pAppData	sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pAppData	src/os_win.c	/^  void *pAppData;                    \/* The extra pAppData, if any. *\/$/;"	m	struct:winVfsAppData	file:
pAppData	tsrc/os_win.c	/^  void *pAppData;                    \/* The extra pAppData, if any. *\/$/;"	m	struct:winVfsAppData	file:
pAppData	tsrc/sqlite3.h	/^  void *pAppData;                \/* Argument to xInit() and xShutdown() *\/$/;"	m	struct:sqlite3_mem_methods
pAppData	tsrc/sqlite3.h	/^  void *pAppData;          \/* Pointer to application-specific data *\/$/;"	m	struct:sqlite3_vfs
pArg	sqlite3.c	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler	file:
pArg	sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods	file:
pArg	sqlite3.c	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2	file:
pArg	sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pArg	src/sqliteInt.h	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler
pArg	src/test_quota.c	/^  void *pArg;                    \/* Third argument to the xCallback() *\/$/;"	m	struct:quotaGroup	file:
pArg	test/threadtest3.c	/^  void* pArg;                     \/* Pointer argument passed by caller *\/$/;"	m	struct:Thread	file:
pArg	tsrc/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods
pArg	tsrc/sqlite3.h	/^  void *pArg;$/;"	m	struct:sqlite3_pcache_methods2
pArg	tsrc/sqliteInt.h	/^  void *pArg;                \/* First arg to busy callback *\/$/;"	m	struct:BusyHandler
pArray	src/tclsqlite.c	/^  Tcl_Obj *pArray;                \/* Name of array variable *\/$/;"	m	struct:DbEvalContext	file:
pArray	tsrc/tclsqlite.c	/^  Tcl_Obj *pArray;                \/* Name of array variable *\/$/;"	m	struct:DbEvalContext	file:
pAuthArg	sqlite3.c	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3	file:
pAuthArg	src/sqliteInt.h	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3
pAuthArg	tsrc/sqliteInt.h	/^  void *pAuthArg;               \/* 1st argument to the access auth function *\/$/;"	m	struct:sqlite3
pAux	ext/fts5/fts5_main.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	ext/fts5/fts5_main.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	ext/fts5/fts5_main.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	ext/misc/vtshim.c	/^  vtshim_aux *pAux;        \/* Pointer to vtshim_aux object *\/$/;"	m	struct:vtshim_vtab	file:
pAux	fts5.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	fts5.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	fts5.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	sqlite3.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	sqlite3.c	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module	file:
pAux	sqlite3.c	/^  void *pAux;                     \/* Aux data pointer *\/$/;"	m	struct:AuxData	file:
pAux	src/sqliteInt.h	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module
pAux	src/vdbeInt.h	/^  void *pAux;                     \/* Aux data pointer *\/$/;"	m	struct:AuxData
pAux	tsrc/fts5.c	/^  Fts5Auxiliary *pAux;            \/* Currently executing extension function *\/$/;"	m	struct:Fts5Cursor	file:
pAux	tsrc/fts5.c	/^  Fts5Auxiliary *pAux;            \/* Extension to which this belongs *\/$/;"	m	struct:Fts5Auxdata	file:
pAux	tsrc/fts5.c	/^  Fts5Auxiliary *pAux;            \/* First in list of all aux. functions *\/$/;"	m	struct:Fts5Global	file:
pAux	tsrc/sqliteInt.h	/^  void *pAux;                          \/* pAux passed to create_module() *\/$/;"	m	struct:Module
pAux	tsrc/vdbeInt.h	/^  void *pAux;                     \/* Aux data pointer *\/$/;"	m	struct:AuxData
pAuxData	sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:Vdbe	file:
pAuxData	sqlite3.c	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:VdbeFrame	file:
pAuxData	src/vdbeInt.h	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:Vdbe
pAuxData	src/vdbeInt.h	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:VdbeFrame
pAuxData	tsrc/vdbeInt.h	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:Vdbe
pAuxData	tsrc/vdbeInt.h	/^  AuxData *pAuxData;      \/* Linked list of auxdata allocations *\/$/;"	m	struct:VdbeFrame
pAuxdata	ext/fts5/fts5_main.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pAuxdata	fts5.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pAuxdata	sqlite3.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pAuxdata	tsrc/fts5.c	/^  Fts5Auxdata *pAuxdata;          \/* First in linked list of saved aux-data *\/$/;"	m	struct:Fts5Cursor	file:
pBackup	sqlite3.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBackup	src/pager.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBackup	tsrc/pager.c	/^  sqlite3_backup *pBackup;    \/* Pointer to list of ongoing backup processes *\/$/;"	m	struct:Pager	file:
pBaseRead	ext/async/sqlite3async.c	/^  sqlite3_file *pBaseRead;   \/* Read handle to the underlying Os file *\/$/;"	m	struct:AsyncFileData	file:
pBaseWrite	ext/async/sqlite3async.c	/^  sqlite3_file *pBaseWrite;  \/* Write handle to the underlying Os file *\/$/;"	m	struct:AsyncFileData	file:
pBefore	ext/misc/amatch.c	/^  amatch_avl *pBefore;  \/* Other elements less than zKey *\/$/;"	m	struct:amatch_avl	file:
pBefore	ext/misc/closure.c	/^  closure_avl *pBefore; \/* Other elements less than id *\/$/;"	m	struct:closure_avl	file:
pBlob	ext/fts3/fts3_write.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlob	sqlite3.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlob	src/tclsqlite.c	/^  sqlite3_blob *pBlob;      \/* sqlite3 blob handle *\/$/;"	m	struct:IncrblobChannel	file:
pBlob	tsrc/fts3_write.c	/^  sqlite3_blob *pBlob;            \/* If not NULL, blob handle to read node *\/$/;"	m	struct:Fts3SegReader	file:
pBlob	tsrc/tclsqlite.c	/^  sqlite3_blob *pBlob;      \/* sqlite3 blob handle *\/$/;"	m	struct:IncrblobChannel	file:
pBlockingConnection	sqlite3.c	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3	file:
pBlockingConnection	src/sqliteInt.h	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3
pBlockingConnection	tsrc/sqliteInt.h	/^  sqlite3 *pBlockingConnection; \/* Connection that caused SQLITE_LOCKED *\/$/;"	m	struct:sqlite3
pBt	sqlite3.c	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor	file:
pBt	sqlite3.c	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage	file:
pBt	sqlite3.c	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree	file:
pBt	sqlite3.c	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk	file:
pBt	sqlite3.c	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor	file:
pBt	sqlite3.c	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db	file:
pBt	src/btreeInt.h	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor
pBt	src/btreeInt.h	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage
pBt	src/btreeInt.h	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree
pBt	src/btreeInt.h	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk
pBt	src/sqliteInt.h	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db
pBt	src/vdbeInt.h	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor
pBt	tsrc/btreeInt.h	/^  BtShared *pBt;            \/* The BtShared this cursor points to *\/$/;"	m	struct:BtCursor
pBt	tsrc/btreeInt.h	/^  BtShared *pBt;       \/* Pointer to BtShared that this page is part of *\/$/;"	m	struct:MemPage
pBt	tsrc/btreeInt.h	/^  BtShared *pBt;     \/* Sharable content of this btree *\/$/;"	m	struct:Btree
pBt	tsrc/btreeInt.h	/^  BtShared *pBt;    \/* The tree being checked out *\/$/;"	m	struct:IntegrityCk
pBt	tsrc/sqliteInt.h	/^  Btree *pBt;          \/* The B*Tree structure for this database file *\/$/;"	m	struct:Db
pBt	tsrc/vdbeInt.h	/^  Btree *pBt;           \/* Separate file holding temporary table *\/$/;"	m	struct:VdbeCursor
pBtree	sqlite3.c	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor	file:
pBtree	sqlite3.c	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock	file:
pBtree	src/btreeInt.h	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor
pBtree	src/btreeInt.h	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock
pBtree	tsrc/btreeInt.h	/^  Btree *pBtree;            \/* The Btree to which this cursor belongs *\/$/;"	m	struct:BtCursor
pBtree	tsrc/btreeInt.h	/^  Btree *pBtree;        \/* Btree handle holding this lock *\/$/;"	m	struct:BtLock
pBuf	ext/fts5/fts5_index.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	ext/fts5/fts5_index.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	fts5.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	fts5.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	sqlite3.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	sqlite3.c	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pBuf	sqlite3.h	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pBuf	tsrc/fts5.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistCallbackCtx	file:
pBuf	tsrc/fts5.c	/^  Fts5Buffer *pBuf;               \/* Append to this buffer *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pBuf	tsrc/sqlite3.h	/^  void *pBuf;        \/* The content of the page *\/$/;"	m	struct:sqlite3_pcache_page
pBuffer	src/test_vfs.c	/^  TestvfsBuffer *pBuffer;         \/* List of shared buffers *\/$/;"	m	struct:Testvfs	file:
pBulk	sqlite3.c	/^  void *pBulk;                        \/* Bulk memory used by pcache-local *\/$/;"	m	struct:PCache1	file:
pBulk	src/pcache1.c	/^  void *pBulk;                        \/* Bulk memory used by pcache-local *\/$/;"	m	struct:PCache1	file:
pBulk	tsrc/pcache1.c	/^  void *pBulk;                        \/* Bulk memory used by pcache-local *\/$/;"	m	struct:PCache1	file:
pBusyArg	src/test_superlock.c	/^  void *pBusyArg;                 \/* First arg to pass to xBusy *\/$/;"	m	struct:SuperlockBusy	file:
pBusyHandlerArg	sqlite3.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pBusyHandlerArg	src/pager.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pBusyHandlerArg	tsrc/pager.c	/^  void *pBusyHandlerArg;      \/* Context argument for xBusyHandler *\/$/;"	m	struct:Pager	file:
pCCurHint	sqlite3.c	/^    struct CCurHint *pCCurHint;                \/* Used by codeCursorHint() *\/$/;"	m	union:Walker::__anon87	typeref:struct:Walker::__anon87::CCurHint	file:
pCCurHint	src/sqliteInt.h	/^    struct CCurHint *pCCurHint;                \/* Used by codeCursorHint() *\/$/;"	m	union:Walker::__anon61	typeref:struct:Walker::__anon61::CCurHint
pCCurHint	tsrc/sqliteInt.h	/^    struct CCurHint *pCCurHint;                \/* Used by codeCursorHint() *\/$/;"	m	union:Walker::__anon29	typeref:struct:Walker::__anon29::CCurHint
pCache	sqlite3.c	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr	file:
pCache	sqlite3.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	sqlite3.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCache	src/pcache.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCache	src/pcache.h	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr
pCache	src/pcache1.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCache	test/threadtest3.c	/^  Statement *pCache;              \/* Linked list of cached statements *\/$/;"	m	struct:Sqlite	file:
pCache	tsrc/pcache.c	/^  sqlite3_pcache *pCache;             \/* Pluggable cache module *\/$/;"	m	struct:PCache	file:
pCache	tsrc/pcache.h	/^  PCache *pCache;                \/* Cache that owns this page *\/$/;"	m	struct:PgHdr
pCache	tsrc/pcache1.c	/^  PCache1 *pCache;               \/* Cache that currently owns this page *\/$/;"	m	struct:PgHdr1	file:
pCheck	sqlite3.c	/^  ExprList *pCheck;    \/* All CHECK constraints *\/$/;"	m	struct:Table	file:
pCheck	src/sqliteInt.h	/^  ExprList *pCheck;    \/* All CHECK constraints *\/$/;"	m	struct:Table
pCheck	tsrc/sqliteInt.h	/^  ExprList *pCheck;    \/* All CHECK constraints *\/$/;"	m	struct:Table
pChild	ext/misc/vtshim.c	/^  sqlite3_vtab *pChild;    \/* Child virtual table *\/$/;"	m	struct:vtshim_vtab	file:
pChild	ext/misc/vtshim.c	/^  sqlite3_vtab_cursor *pChild; \/* Cursor generated by the managed subclass *\/$/;"	m	struct:vtshim_cursor	file:
pChildAux	ext/misc/vtshim.c	/^  void *pChildAux;              \/* pAux for child virtual tables *\/$/;"	m	struct:vtshim_aux	file:
pChunk	sqlite3.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	sqlite3.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pChunk	src/memjournal.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	src/rowset.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pChunk	tsrc/memjournal.c	/^  FileChunk *pChunk;              \/* Specific chunk into which cursor points *\/$/;"	m	struct:FilePoint	file:
pChunk	tsrc/rowset.c	/^  struct RowSetChunk *pChunk;    \/* List of all chunk allocations *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetChunk	file:
pClosure	ext/misc/closure.c	/^  closure_avl *pClosure;     \/* The complete closure tree *\/$/;"	m	struct:closure_cursor	file:
pCmd	src/test_bestindex.c	/^  Tcl_Obj *pCmd;$/;"	m	struct:tcl_vtab	file:
pCmp	src/test1.c	/^  Tcl_Obj *pCmp;$/;"	m	struct:TestCollationX	file:
pCodec	sqlite3.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pCodec	src/pager.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pCodec	tsrc/pager.c	/^  void *pCodec;               \/* First argument to xCodec... methods *\/$/;"	m	struct:Pager	file:
pColl	sqlite3.c	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::p4union	file:
pColl	src/vdbe.h	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::p4union
pColl	tsrc/vdbe.h	/^    CollSeq *pColl;        \/* Used when p4type is P4_COLLSEQ *\/$/;"	m	union:VdbeOp::p4union
pCollNeededArg	sqlite3.c	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3	file:
pCollNeededArg	src/sqliteInt.h	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3
pCollNeededArg	tsrc/sqliteInt.h	/^  void *pCollNeededArg;$/;"	m	struct:sqlite3
pCollate	src/tclsqlite.c	/^  SqlCollate *pCollate;      \/* List of SQL collation functions *\/$/;"	m	struct:SqliteDb	file:
pCollate	tsrc/tclsqlite.c	/^  SqlCollate *pCollate;      \/* List of SQL collation functions *\/$/;"	m	struct:SqliteDb	file:
pCollateNeeded	src/tclsqlite.c	/^  Tcl_Obj *pCollateNeeded;   \/* Collation needed script *\/$/;"	m	struct:SqliteDb	file:
pCollateNeeded	tsrc/tclsqlite.c	/^  Tcl_Obj *pCollateNeeded;   \/* Collation needed script *\/$/;"	m	struct:SqliteDb	file:
pCollector	ext/fts2/fts2.c	/^  DLCollector *pCollector;$/;"	m	struct:TermData	file:
pCollector	tsrc/fts2.c	/^  DLCollector *pCollector;$/;"	m	struct:TermData	file:
pCols	sqlite3.c	/^    ExprList *pCols;                \/* List of explicit column names, or NULL *\/$/;"	m	struct:With::Cte	file:
pCols	src/sqliteInt.h	/^    ExprList *pCols;                \/* List of explicit column names, or NULL *\/$/;"	m	struct:With::Cte
pCols	tsrc/sqliteInt.h	/^    ExprList *pCols;                \/* List of explicit column names, or NULL *\/$/;"	m	struct:With::Cte
pColset	ext/fts5/fts5_expr.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	ext/fts5/fts5_index.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	ext/fts5/fts5_index.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	ext/fts5/fts5_index.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColset	fts5.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColset	sqlite3.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	sqlite3.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColset	tsrc/fts5.c	/^  Fts5Colset *pColset;            \/* Columns to search (NULL -> all columns) *\/$/;"	m	struct:Fts5ExprNearset	file:
pColset	tsrc/fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to these columns *\/$/;"	m	struct:Fts5Iter	file:
pColset	tsrc/fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistCallbackCtx	file:
pColset	tsrc/fts5.c	/^  Fts5Colset *pColset;            \/* Restrict matches to this column *\/$/;"	m	struct:PoslistOffsetsCtx	file:
pColumnList	src/test_schema.c	/^  sqlite3_stmt *pColumnList;$/;"	m	struct:schema_cursor	file:
pColumns	sqlite3.c	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger	file:
pColumns	src/sqliteInt.h	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger
pColumns	tsrc/sqliteInt.h	/^  IdList *pColumns;       \/* If this is an UPDATE OF <column-list> trigger,$/;"	m	struct:Trigger
pCommitArg	sqlite3.c	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/$/;"	m	struct:sqlite3	file:
pCommitArg	src/sqliteInt.h	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/$/;"	m	struct:sqlite3
pCommitArg	tsrc/sqliteInt.h	/^  void *pCommitArg;                 \/* Argument to xCommitCallback() *\/$/;"	m	struct:sqlite3
pConfig	ext/fts5/fts5_expr.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	ext/fts5/fts5_expr.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	ext/fts5/fts5_index.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	ext/fts5/fts5_main.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	ext/fts5/fts5_storage.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	ext/fts5/fts5_storage.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConfig	ext/fts5/fts5_vocab.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	sqlite3.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;            \/* Fts5 table configuration *\/$/;"	m	struct:Fts5VocabCursor	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Index	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;            \/* Virtual table configuration *\/$/;"	m	struct:Fts5Table	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Expr	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5IntegrityCtx	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Parse	file:
pConfig	tsrc/fts5.c	/^  Fts5Config *pConfig;$/;"	m	struct:Fts5Storage	file:
pConfig3	ext/misc/spellfix.c	/^  EditDist3Config *pConfig3;       \/* Edit-distance cost coefficients *\/$/;"	m	struct:MatchQuery	file:
pConfig3	ext/misc/spellfix.c	/^  EditDist3Config *pConfig3; \/* Parsed edit distance costs *\/$/;"	m	struct:spellfix1_vtab	file:
pConflict	ext/session/sqlite3session.c	/^  sqlite3_stmt *pConflict;        \/* Points to conflicting row, if any *\/$/;"	m	struct:sqlite3_changeset_iter	file:
pConflict	sqlite3.c	/^  sqlite3_stmt *pConflict;        \/* Points to conflicting row, if any *\/$/;"	m	struct:sqlite3_changeset_iter	file:
pConflict	tsrc/sqlite3session.c	/^  sqlite3_stmt *pConflict;        \/* Points to conflicting row, if any *\/$/;"	m	struct:sqlite3_changeset_iter	file:
pConflictScript	ext/session/test_session.c	/^  Tcl_Obj *pConflictScript;$/;"	m	struct:TestConflictHandler	file:
pConstExpr	sqlite3.c	/^  ExprList *pConstExpr;\/* Constant expressions *\/$/;"	m	struct:Parse	file:
pConstExpr	src/sqliteInt.h	/^  ExprList *pConstExpr;\/* Constant expressions *\/$/;"	m	struct:Parse
pConstExpr	tsrc/sqliteInt.h	/^  ExprList *pConstExpr;\/* Constant expressions *\/$/;"	m	struct:Parse
pContent	src/test_intarray.c	/^  sqlite3_intarray *pContent;   \/* Content of the integer array *\/$/;"	m	struct:intarray_vtab	file:
pContext	ext/fts5/fts5_tcl.c	/^  F5tTokenizerContext *pContext;$/;"	m	struct:F5tTokenizerInstance	file:
pContext	ext/fts5/fts5_tcl.c	/^  F5tTokenizerContext *pContext;$/;"	m	struct:F5tTokenizerModule	file:
pContext	ext/rtree/rtree.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	ext/rtree/sqlite3rtree.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	ext/rtree/sqlite3rtree.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pContext	sqlite3.c	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pContext	sqlite3.c	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pContext	sqlite3.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	sqlite3.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pContext	tsrc/rtree.c	/^  void *pContext;$/;"	m	struct:RtreeGeomCallback	file:
pContext	tsrc/sqlite3.h	/^  void *pContext;                   \/* pContext from when function registered *\/$/;"	m	struct:sqlite3_rtree_query_info
pContext	tsrc/sqlite3.h	/^  void *pContext;                 \/* Copy of pContext passed to s_r_g_c() *\/$/;"	m	struct:sqlite3_rtree_geometry
pCost	ext/misc/amatch.c	/^  amatch_avl *pCost;         \/* amatch_word objects keyed by iCost *\/$/;"	m	struct:amatch_cursor	file:
pCost	ext/misc/spellfix.c	/^  EditDist3Cost *pCost;  \/* Costs *\/$/;"	m	struct:EditDist3Lang	file:
pCovidx	sqlite3.c	/^    Index *pCovidx;       \/* Possible covering index for WHERE_MULTI_OR *\/$/;"	m	union:WhereLevel::__anon96	file:
pCovidx	src/whereInt.h	/^    Index *pCovidx;       \/* Possible covering index for WHERE_MULTI_OR *\/$/;"	m	union:WhereLevel::__anon45
pCovidx	tsrc/whereInt.h	/^    Index *pCovidx;       \/* Possible covering index for WHERE_MULTI_OR *\/$/;"	m	union:WhereLevel::__anon10
pCsr	ext/fts3/fts3_snippet.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	ext/fts3/fts3_snippet.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	ext/fts3/fts3_snippet.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCsr	ext/fts3/fts3_tokenize_vtab.c	/^  sqlite3_tokenizer_cursor *pCsr; \/* Cursor to iterate through zInput *\/$/;"	m	struct:Fts3tokCursor	file:
pCsr	ext/fts5/fts5_main.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	fts5.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	sqlite3.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	sqlite3.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	sqlite3.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	sqlite3.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCsr	sqlite3.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	sqlite3.c	/^  VdbeCursor *pCsr;               \/* Cursor to read old values from *\/$/;"	m	struct:PreUpdate	file:
pCsr	sqlite3.c	/^  sqlite3_tokenizer_cursor *pCsr; \/* Cursor to iterate through zInput *\/$/;"	m	struct:Fts3tokCursor	file:
pCsr	src/vdbeInt.h	/^  VdbeCursor *pCsr;               \/* Cursor to read old values from *\/$/;"	m	struct:PreUpdate
pCsr	src/vdbeblob.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCsr	tsrc/fts3_snippet.c	/^  Fts3Cursor *pCsr;               \/* Cursor snippet is being generated from *\/$/;"	m	struct:SnippetIter	file:
pCsr	tsrc/fts3_snippet.c	/^  Fts3Cursor *pCsr;               \/* FTS3 Cursor *\/$/;"	m	struct:LoadDoclistCtx	file:
pCsr	tsrc/fts3_snippet.c	/^  Fts3Cursor *pCsr;$/;"	m	struct:TermOffsetCtx	file:
pCsr	tsrc/fts3_tokenize_vtab.c	/^  sqlite3_tokenizer_cursor *pCsr; \/* Cursor to iterate through zInput *\/$/;"	m	struct:Fts3tokCursor	file:
pCsr	tsrc/fts5.c	/^  Fts5Cursor *pCsr;               \/* First in list of all open cursors *\/$/;"	m	struct:Fts5Global	file:
pCsr	tsrc/vdbeInt.h	/^  VdbeCursor *pCsr;               \/* Cursor to read old values from *\/$/;"	m	struct:PreUpdate
pCsr	tsrc/vdbeblob.c	/^  BtCursor *pCsr;         \/* Cursor pointing at blob row *\/$/;"	m	struct:Incrblob	file:
pCtx	ext/fts3/fts3_expr.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCtx	ext/fts5/fts5_tcl.c	/^  void *pCtx;$/;"	m	struct:F5tTokenizerContext	file:
pCtx	ext/fts5/fts5_tokenize.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCtx	ext/misc/json1.c	/^  sqlite3_context *pCtx;   \/* Function context - put error messages here *\/$/;"	m	struct:JsonString	file:
pCtx	ext/session/sqlite3session.c	/^  void *pCtx;$/;"	m	struct:SessionHook	file:
pCtx	fts5.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCtx	sqlite3.c	/^    sqlite3_context *pCtx; \/* Used when p4type is P4_FUNCCTX *\/$/;"	m	union:VdbeOp::p4union	file:
pCtx	sqlite3.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCtx	sqlite3.c	/^  sqlite3_context *pCtx;   \/* Function context - put error messages here *\/$/;"	m	struct:JsonString	file:
pCtx	sqlite3.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCtx	sqlite3.c	/^  void *pCtx;$/;"	m	struct:SessionHook	file:
pCtx	src/vdbe.h	/^    sqlite3_context *pCtx; \/* Used when p4type is P4_FUNCCTX *\/$/;"	m	union:VdbeOp::p4union
pCtx	tsrc/fts3_expr.c	/^  sqlite3_context *pCtx;              \/* Write error message here *\/$/;"	m	struct:ParseContext	file:
pCtx	tsrc/fts5.c	/^  void *pCtx;$/;"	m	struct:PorterContext	file:
pCtx	tsrc/json1.c	/^  sqlite3_context *pCtx;   \/* Function context - put error messages here *\/$/;"	m	struct:JsonString	file:
pCtx	tsrc/sqlite3session.c	/^  void *pCtx;$/;"	m	struct:SessionHook	file:
pCtx	tsrc/vdbe.h	/^    sqlite3_context *pCtx; \/* Used when p4type is P4_FUNCCTX *\/$/;"	m	union:VdbeOp::p4union
pCur	ext/misc/spellfix.c	/^  spellfix1_cursor *pCur;          \/* The cursor being queried *\/$/;"	m	struct:MatchQuery	file:
pCurrent	ext/fts1/simple_tokenizer.c	/^  const char *pCurrent;        \/* current position in pInput *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pCurrent	ext/misc/amatch.c	/^  amatch_word *pCurrent;     \/* Most recent solution *\/$/;"	m	struct:amatch_cursor	file:
pCurrent	ext/misc/closure.c	/^  closure_avl *pCurrent;     \/* Current element of output *\/$/;"	m	struct:closure_cursor	file:
pCurrent	sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCurrent	sqlite3.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:win_syscall	file:
pCurrent	src/os_unix.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCurrent	src/os_win.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:win_syscall	file:
pCurrent	tsrc/os_unix.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:unix_syscall	file:
pCurrent	tsrc/os_win.c	/^  sqlite3_syscall_ptr pCurrent; \/* Current value of the system call *\/$/;"	m	struct:win_syscall	file:
pCursor	ext/fts3/fts3_snippet.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pCursor	sqlite3.c	/^    BtCursor *pCursor;          \/* CURTYPE_BTREE.  Btree cursor *\/$/;"	m	union:VdbeCursor::__anon88	file:
pCursor	sqlite3.c	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared	file:
pCursor	sqlite3.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pCursor	src/btreeInt.h	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared
pCursor	src/vdbeInt.h	/^    BtCursor *pCursor;          \/* CURTYPE_BTREE.  Btree cursor *\/$/;"	m	union:VdbeCursor::__anon43
pCursor	tsrc/btreeInt.h	/^  BtCursor *pCursor;    \/* A list of all open cursors *\/$/;"	m	struct:BtShared
pCursor	tsrc/fts3_snippet.c	/^  Fts3Cursor *pCursor;            \/* FTS3 Cursor *\/$/;"	m	struct:MatchInfo	file:
pCursor	tsrc/vdbeInt.h	/^    BtCursor *pCursor;          \/* CURTYPE_BTREE.  Btree cursor *\/$/;"	m	union:VdbeCursor::__anon7
pData	ext/async/sqlite3async.c	/^  AsyncFileData *pData;$/;"	m	struct:AsyncFile	file:
pData	ext/fts1/fts1.c	/^  char *pData;$/;"	m	struct:DocList	file:
pData	ext/fts1/fulltext.c	/^  char *pData;$/;"	m	struct:DocList	file:
pData	ext/fts2/fts2.c	/^  char *pData;          \/* Pointer to malloc'ed buffer. *\/$/;"	m	struct:DataBuffer	file:
pData	ext/fts2/fts2.c	/^  const char *pData;        \/* data for current term. *\/$/;"	m	struct:LeafReader	file:
pData	ext/fts2/fts2.c	/^  const char *pData;$/;"	m	struct:DLReader	file:
pData	ext/fts2/fts2.c	/^  const char *pData;$/;"	m	struct:InteriorReader	file:
pData	ext/fts2/fts2.c	/^  const char *pData;$/;"	m	struct:PLReader	file:
pData	ext/fts5/fts5Int.h	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter
pData	ext/fts5/fts5_index.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	fts5.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	fts5.c	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter	file:
pData	sqlite3.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	sqlite3.c	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter	file:
pData	sqlite3.c	/^  const void *pData;      \/* Data for tables.  NULL for indexes *\/$/;"	m	struct:BtreePayload	file:
pData	sqlite3.c	/^  void *pData;                   \/* Page data *\/$/;"	m	struct:PgHdr	file:
pData	src/btree.h	/^  const void *pData;      \/* Data for tables.  NULL for indexes *\/$/;"	m	struct:BtreePayload
pData	src/pcache.h	/^  void *pData;                   \/* Page data *\/$/;"	m	struct:PgHdr
pData	tsrc/btree.h	/^  const void *pData;      \/* Data for tables.  NULL for indexes *\/$/;"	m	struct:BtreePayload
pData	tsrc/fts1.c	/^  char *pData;$/;"	m	struct:DocList	file:
pData	tsrc/fts2.c	/^  char *pData;          \/* Pointer to malloc'ed buffer. *\/$/;"	m	struct:DataBuffer	file:
pData	tsrc/fts2.c	/^  const char *pData;        \/* data for current term. *\/$/;"	m	struct:LeafReader	file:
pData	tsrc/fts2.c	/^  const char *pData;$/;"	m	struct:DLReader	file:
pData	tsrc/fts2.c	/^  const char *pData;$/;"	m	struct:InteriorReader	file:
pData	tsrc/fts2.c	/^  const char *pData;$/;"	m	struct:PLReader	file:
pData	tsrc/fts5.c	/^  Fts5Data *pData;              \/* Data for current page of this level *\/$/;"	m	struct:Fts5DlidxLvl	file:
pData	tsrc/fts5.c	/^  const u8 *pData;$/;"	m	struct:Fts5IndexIter	file:
pData	tsrc/pcache.h	/^  void *pData;                   \/* Page data *\/$/;"	m	struct:PgHdr
pDataVersion	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDataVersion	fts5.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDataVersion	sqlite3.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDataVersion	tsrc/fts5.c	/^  sqlite3_stmt *pDataVersion;$/;"	m	struct:Fts5Index	file:
pDb	src/tclsqlite.c	/^  SqliteDb *pDb;                  \/* Database handle *\/$/;"	m	struct:DbEvalContext	file:
pDb	src/tclsqlite.c	/^  SqliteDb *pDb;            \/* Associated database connection *\/$/;"	m	struct:IncrblobChannel	file:
pDb	src/tclsqlite.c	/^  SqliteDb *pDb;        \/* Database connection that owns this function *\/$/;"	m	struct:SqlFunc	file:
pDb	src/test_server.c	/^  sqlite3 *pDb;                \/* The SQLite connection *\/$/;"	m	struct:SqlMessage	file:
pDb	tool/showdb.c	/^  sqlite3 *pDb;                   \/* Database handle that owns pFd *\/$/;"	m	struct:GlobalData	file:
pDb	tsrc/tclsqlite.c	/^  SqliteDb *pDb;                  \/* Database handle *\/$/;"	m	struct:DbEvalContext	file:
pDb	tsrc/tclsqlite.c	/^  SqliteDb *pDb;            \/* Associated database connection *\/$/;"	m	struct:IncrblobChannel	file:
pDb	tsrc/tclsqlite.c	/^  SqliteDb *pDb;        \/* Database connection that owns this function *\/$/;"	m	struct:SqlFunc	file:
pDbFd	sqlite3.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbFd	src/wal.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbFd	tsrc/wal.c	/^  sqlite3_file *pDbFd;       \/* File handle for the database file *\/$/;"	m	struct:Wal	file:
pDbList	src/test_schema.c	/^  sqlite3_stmt *pDbList;$/;"	m	struct:schema_cursor	file:
pDbPage	sqlite3.c	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage	file:
pDbPage	src/btreeInt.h	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage
pDbPage	tsrc/btreeInt.h	/^  DbPage *pDbPage;     \/* Pager page handle *\/$/;"	m	struct:MemPage
pDef	sqlite3.c	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::MemValue	file:
pDef	src/vdbeInt.h	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::MemValue
pDef	tsrc/vdbeInt.h	/^    FuncDef *pDef;      \/* Used only when flags==MEM_Agg *\/$/;"	m	union:Mem::MemValue
pDefault	sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDefault	sqlite3.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:win_syscall	file:
pDefault	src/os_unix.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDefault	src/os_win.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:win_syscall	file:
pDefault	tsrc/os_unix.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:unix_syscall	file:
pDefault	tsrc/os_win.c	/^  sqlite3_syscall_ptr pDefault; \/* Default value *\/$/;"	m	struct:win_syscall	file:
pDeferred	ext/fts3/fts3Int.h	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor
pDeferred	ext/fts3/fts3Int.h	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken
pDeferred	sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor	file:
pDeferred	sqlite3.c	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pDeferred	tsrc/fts3Int.h	/^  Fts3DeferredToken *pDeferred;   \/* Deferred search tokens, if any *\/$/;"	m	struct:Fts3Cursor
pDeferred	tsrc/fts3Int.h	/^  Fts3DeferredToken *pDeferred;   \/* Deferred token object for this token *\/$/;"	m	struct:Fts3PhraseToken
pDel	src/test1.c	/^  Tcl_Obj *pDel;$/;"	m	struct:TestCollationX	file:
pDelFrame	sqlite3.c	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe	file:
pDelFrame	src/vdbeInt.h	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe
pDelFrame	tsrc/vdbeInt.h	/^  VdbeFrame *pDelFrame;   \/* List of frame objects to free on VM reset *\/$/;"	m	struct:Vdbe
pDelete	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pDelete;          \/* Statement for DELETE ops *\/$/;"	m	struct:RbuObjIter	file:
pDelete	ext/session/sqlite3session.c	/^  sqlite3_stmt *pDelete;          \/* DELETE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pDelete	sqlite3.c	/^  sqlite3_stmt *pDelete;          \/* DELETE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pDelete	sqlite3.c	/^  sqlite3_stmt *pDelete;          \/* Statement for DELETE ops *\/$/;"	m	struct:RbuObjIter	file:
pDelete	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pDelete;          \/* Statement for DELETE ops *\/$/;"	m	struct:RbuObjIter	file:
pDelete	tsrc/sqlite3session.c	/^  sqlite3_stmt *pDelete;          \/* DELETE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pDeleteNode	ext/rtree/rtree.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteNode	sqlite3.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteNode	tsrc/rtree.c	/^  sqlite3_stmt *pDeleteNode;$/;"	m	struct:Rtree	file:
pDeleteParent	ext/rtree/rtree.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteParent	sqlite3.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteParent	tsrc/rtree.c	/^  sqlite3_stmt *pDeleteParent;$/;"	m	struct:Rtree	file:
pDeleteRowid	ext/rtree/rtree.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleteRowid	sqlite3.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleteRowid	tsrc/rtree.c	/^  sqlite3_stmt *pDeleteRowid;$/;"	m	struct:Rtree	file:
pDeleted	ext/rtree/rtree.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDeleted	sqlite3.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDeleted	tsrc/rtree.c	/^  RtreeNode *pDeleted;$/;"	m	struct:Rtree	file:
pDeleter	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDeleter	fts5.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDeleter	sqlite3.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDeleter	tsrc/fts5.c	/^  sqlite3_stmt *pDeleter;         \/* "DELETE FROM %_data ... id>=? AND id<=?" *\/$/;"	m	struct:Fts5Index	file:
pDest	ext/misc/scrub.c	/^  sqlite3_file *pDest;     \/* Destination file handle *\/$/;"	m	struct:ScrubState	file:
pDest	sqlite3.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDest	src/backup.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDest	tsrc/backup.c	/^  Btree *pDest;            \/* Destination b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	sqlite3.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	src/backup.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestDb	tsrc/backup.c	/^  sqlite3* pDestDb;        \/* Destination database handle *\/$/;"	m	struct:sqlite3_backup	file:
pDestroy	src/test1.c	/^  Tcl_Obj *pDestroy;              \/* Destructor script *\/$/;"	m	struct:CreateFunctionV2	file:
pDestructor	sqlite3.c	/^    FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	union:FuncDef::__anon79	file:
pDestructor	src/sqliteInt.h	/^    FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	union:FuncDef::__anon53
pDestructor	tsrc/sqliteInt.h	/^    FuncDestructor *pDestructor;   \/* Reference counted destructor function *\/$/;"	m	union:FuncDef::__anon21
pDflt	sqlite3.c	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column	file:
pDflt	src/sqliteInt.h	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column
pDflt	tsrc/sqliteInt.h	/^  Expr *pDflt;     \/* Default value of this column *\/$/;"	m	struct:Column
pDfltColl	sqlite3.c	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3	file:
pDfltColl	src/sqliteInt.h	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3
pDfltColl	tsrc/sqliteInt.h	/^  CollSeq *pDfltColl;           \/* The default collating sequence (BINARY) *\/$/;"	m	struct:sqlite3
pDfltReduce	tool/lemon.c	/^  struct rule *pDfltReduce;\/* The default REDUCE rule. *\/$/;"	m	struct:state	typeref:struct:state::rule	file:
pDfltTok	ext/fts5/fts5_main.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDfltTok	fts5.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDfltTok	sqlite3.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDfltTok	tsrc/fts5.c	/^  Fts5TokenizerModule *pDfltTok;  \/* Default tokenizer module *\/$/;"	m	struct:Fts5Global	file:
pDir	src/test_fs.c	/^  DIR *pDir;                      \/* Open directory *\/$/;"	m	struct:FsdirCsr	file:
pDirty	sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	sqlite3.c	/^  PgHdr *pDirty;                 \/* Transient list of dirty sorted by pgno *\/$/;"	m	struct:PgHdr	file:
pDirty	src/pcache.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	src/pcache.h	/^  PgHdr *pDirty;                 \/* Transient list of dirty sorted by pgno *\/$/;"	m	struct:PgHdr
pDirty	tsrc/pcache.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirty	tsrc/pcache.h	/^  PgHdr *pDirty;                 \/* Transient list of dirty sorted by pgno *\/$/;"	m	struct:PgHdr
pDirtyNext	sqlite3.c	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyNext	src/pcache.h	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr
pDirtyNext	tsrc/pcache.h	/^  PgHdr *pDirtyNext;             \/* Next element in list of dirty pages *\/$/;"	m	struct:PgHdr
pDirtyPrev	sqlite3.c	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr	file:
pDirtyPrev	src/pcache.h	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr
pDirtyPrev	tsrc/pcache.h	/^  PgHdr *pDirtyPrev;             \/* Previous element in list of dirty pages *\/$/;"	m	struct:PgHdr
pDirtyTail	sqlite3.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirtyTail	src/pcache.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDirtyTail	tsrc/pcache.c	/^  PgHdr *pDirty, *pDirtyTail;         \/* List of dirty pages in LRU order *\/$/;"	m	struct:PCache	file:
pDisconnect	sqlite3.c	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3	file:
pDisconnect	src/sqliteInt.h	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3
pDisconnect	tsrc/sqliteInt.h	/^  VTable *pDisconnect;    \/* Disconnect these in next sqlite3_prepare() *\/$/;"	m	struct:sqlite3
pDistinctSet	sqlite3.c	/^  ExprList *pDistinctSet;   \/* DISTINCT over all these values *\/$/;"	m	struct:WhereInfo	file:
pDistinctSet	src/whereInt.h	/^  ExprList *pDistinctSet;   \/* DISTINCT over all these values *\/$/;"	m	struct:WhereInfo
pDistinctSet	tsrc/whereInt.h	/^  ExprList *pDistinctSet;   \/* DISTINCT over all these values *\/$/;"	m	struct:WhereInfo
pDlidx	ext/fts5/fts5_index.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pDlidx	fts5.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pDlidx	sqlite3.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pDlidx	tsrc/fts5.c	/^  Fts5DlidxIter *pDlidx;          \/* If there is a doclist-index *\/$/;"	m	struct:Fts5SegIter	file:
pDoclist	ext/fts1/fts1.c	/^  DocList *pDoclist;  \/* The document list we are stepping through *\/$/;"	m	struct:DocListReader	file:
pDoclist	ext/fts1/fulltext.c	/^  DocList *pDoclist;$/;"	m	struct:DocListReader	file:
pDoclist	tsrc/fts1.c	/^  DocList *pDoclist;  \/* The document list we are stepping through *\/$/;"	m	struct:DocListReader	file:
pDone	ext/misc/fuzzer.c	/^  fuzzer_stem *pDone;        \/* Stems already processed to completion *\/$/;"	m	struct:fuzzer_cursor	file:
pDummy	src/test_pcache.c	/^  void *pDummy;             \/* Dummy allocation to simulate failures *\/$/;"	m	struct:testpcacheGlobalType	file:
pEList	sqlite3.c	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select	file:
pEList	sqlite3.c	/^  ExprList *pEList;    \/* Optional list of result-set columns *\/$/;"	m	struct:NameContext	file:
pEList	src/sqliteInt.h	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select
pEList	src/sqliteInt.h	/^  ExprList *pEList;    \/* Optional list of result-set columns *\/$/;"	m	struct:NameContext
pEList	tsrc/sqliteInt.h	/^  ExprList *pEList;      \/* The fields of the result *\/$/;"	m	struct:Select
pEList	tsrc/sqliteInt.h	/^  ExprList *pEList;    \/* Optional list of result-set columns *\/$/;"	m	struct:NameContext
pEnd	sqlite3.c	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside	file:
pEnd	sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pEnd	src/pcache1.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pEnd	src/sqliteInt.h	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside
pEnd	tsrc/pcache1.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pEnd	tsrc/sqliteInt.h	/^  void *pEnd;             \/* First byte past end of available space *\/$/;"	m	struct:Lookaside
pEntry	sqlite3.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pEntry	src/rowset.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pEntry	tsrc/rowset.c	/^  struct RowSetEntry *pEntry;    \/* List of entries using pRight *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pEpoTab	sqlite3.c	/^  Table *pEpoTab;                      \/* Eponymous table for this module *\/$/;"	m	struct:Module	file:
pEpoTab	src/sqliteInt.h	/^  Table *pEpoTab;                      \/* Eponymous table for this module *\/$/;"	m	struct:Module
pEpoTab	tsrc/sqliteInt.h	/^  Table *pEpoTab;                      \/* Eponymous table for this module *\/$/;"	m	struct:Module
pErr	sqlite3.c	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3	file:
pErr	src/sqliteInt.h	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3
pErr	tsrc/sqliteInt.h	/^  sqlite3_value *pErr;          \/* Most recent error message *\/$/;"	m	struct:sqlite3
pErrLog	mptest/mptest.c	/^  FILE *pErrLog;         \/* Where to write errors *\/$/;"	m	struct:Global	file:
pExpr	ext/fts3/fts3Int.h	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor
pExpr	ext/fts3/fts3_snippet.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExpr	ext/fts5/fts5_expr.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	ext/fts5/fts5_expr.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExpr	ext/fts5/fts5_main.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	fts5.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	fts5.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	fts5.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExpr	sqlite3.c	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pExpr	sqlite3.c	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pExpr	sqlite3.c	/^    Expr *pExpr;            \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item	file:
pExpr	sqlite3.c	/^    Expr *pExpr;           \/* Used when p4type is P4_EXPR *\/$/;"	m	union:VdbeOp::p4union	file:
pExpr	sqlite3.c	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm	file:
pExpr	sqlite3.c	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan	file:
pExpr	sqlite3.c	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor	file:
pExpr	sqlite3.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExpr	sqlite3.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	sqlite3.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	sqlite3.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExpr	src/sqliteInt.h	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func
pExpr	src/sqliteInt.h	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col
pExpr	src/sqliteInt.h	/^    Expr *pExpr;            \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item
pExpr	src/sqliteInt.h	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan
pExpr	src/vdbe.h	/^    Expr *pExpr;           \/* Used when p4type is P4_EXPR *\/$/;"	m	union:VdbeOp::p4union
pExpr	src/whereInt.h	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm
pExpr	tsrc/fts3Int.h	/^  Fts3Expr *pExpr;                \/* Parsed MATCH query string *\/$/;"	m	struct:Fts3Cursor
pExpr	tsrc/fts3_snippet.c	/^  Fts3Expr *pExpr;                \/* Pointer to phrase expression *\/$/;"	m	struct:LcsIterator	file:
pExpr	tsrc/fts5.c	/^  Fts5Expr *pExpr;                \/* Expression for MATCH queries *\/$/;"	m	struct:Fts5Cursor	file:
pExpr	tsrc/fts5.c	/^  Fts5Expr *pExpr;$/;"	m	struct:Fts5ExprCtx	file:
pExpr	tsrc/fts5.c	/^  Fts5ExprNode *pExpr;            \/* Result of a successful parse *\/$/;"	m	struct:Fts5Parse	file:
pExpr	tsrc/sqliteInt.h	/^    Expr *pExpr;             \/* Expression encoding the function *\/$/;"	m	struct:AggInfo::AggInfo_func
pExpr	tsrc/sqliteInt.h	/^    Expr *pExpr;             \/* The original expression *\/$/;"	m	struct:AggInfo::AggInfo_col
pExpr	tsrc/sqliteInt.h	/^    Expr *pExpr;            \/* The list of expressions *\/$/;"	m	struct:ExprList::ExprList_item
pExpr	tsrc/sqliteInt.h	/^  Expr *pExpr;          \/* The expression parse tree *\/$/;"	m	struct:ExprSpan
pExpr	tsrc/vdbe.h	/^    Expr *pExpr;           \/* Used when p4type is P4_EXPR *\/$/;"	m	union:VdbeOp::p4union
pExpr	tsrc/whereInt.h	/^  Expr *pExpr;            \/* Pointer to the subexpression that is this term *\/$/;"	m	struct:WhereTerm
pExprList	sqlite3.c	/^  ExprList *pExprList; \/* SET clause for UPDATE. *\/$/;"	m	struct:TriggerStep	file:
pExprList	src/sqliteInt.h	/^  ExprList *pExprList; \/* SET clause for UPDATE. *\/$/;"	m	struct:TriggerStep
pExprList	tsrc/sqliteInt.h	/^  ExprList *pExprList; \/* SET clause for UPDATE. *\/$/;"	m	struct:TriggerStep
pExtra	sqlite3.c	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr	file:
pExtra	sqlite3.c	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page	file:
pExtra	sqlite3.h	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pExtra	src/pcache.h	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr
pExtra	tsrc/pcache.h	/^  void *pExtra;                  \/* Extra content *\/$/;"	m	struct:PgHdr
pExtra	tsrc/sqlite3.h	/^  void *pExtra;      \/* Extra information associated with the page *\/$/;"	m	struct:sqlite3_pcache_page
pFKey	sqlite3.c	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table	file:
pFKey	src/sqliteInt.h	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table
pFKey	tsrc/sqliteInt.h	/^  FKey *pFKey;         \/* Linked list of all foreign keys in this table *\/$/;"	m	struct:Table
pFd	sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle *\/$/;"	m	struct:SorterFile	file:
pFd	sqlite3.c	/^  sqlite3_file *pFd;              \/* File handle to write to *\/$/;"	m	struct:PmaWriter	file:
pFd	sqlite3.c	/^  sqlite3_file *pFd;           \/* The WAL file to which we write *\/$/;"	m	struct:WalWriter	file:
pFd	sqlite3.c	/^  sqlite3_file *pFd;          \/* File handle we are reading from *\/$/;"	m	struct:PmaReader	file:
pFd	src/test_osinst.c	/^  sqlite3_file *pFd;              \/* File descriptor open on vfslog file *\/$/;"	m	struct:VfslogVtab	file:
pFd	src/test_vfs.c	/^  TestvfsFd *pFd;                 \/* File data *\/$/;"	m	struct:TestvfsFile	file:
pFd	src/vdbesort.c	/^  sqlite3_file *pFd;              \/* File handle *\/$/;"	m	struct:SorterFile	file:
pFd	src/vdbesort.c	/^  sqlite3_file *pFd;              \/* File handle to write to *\/$/;"	m	struct:PmaWriter	file:
pFd	src/vdbesort.c	/^  sqlite3_file *pFd;          \/* File handle we are reading from *\/$/;"	m	struct:PmaReader	file:
pFd	src/wal.c	/^  sqlite3_file *pFd;           \/* The WAL file to which we write *\/$/;"	m	struct:WalWriter	file:
pFd	tool/showdb.c	/^  sqlite3_file *pFd;              \/* File descriptor for non-raw mode *\/$/;"	m	struct:GlobalData	file:
pFd	tsrc/vdbesort.c	/^  sqlite3_file *pFd;              \/* File handle *\/$/;"	m	struct:SorterFile	file:
pFd	tsrc/vdbesort.c	/^  sqlite3_file *pFd;              \/* File handle to write to *\/$/;"	m	struct:PmaWriter	file:
pFd	tsrc/vdbesort.c	/^  sqlite3_file *pFd;          \/* File handle we are reading from *\/$/;"	m	struct:PmaReader	file:
pFd	tsrc/wal.c	/^  sqlite3_file *pFd;           \/* The WAL file to which we write *\/$/;"	m	struct:WalWriter	file:
pFile	ext/async/sqlite3async.c	/^  sqlite3_file *pFile;$/;"	m	struct:AsyncLock	file:
pFile	src/test6.c	/^  CrashFile *pFile;            \/* File this write() applies to *\/$/;"	m	struct:WriteBuffer	file:
pFile	src/test_onefile.c	/^  sqlite3_file *pFile;$/;"	m	struct:fs_real_file	file:
pFile	src/test_quota.c	/^  quotaFile *pFile;               \/* The underlying file *\/$/;"	m	struct:quotaConn	file:
pFile	src/test_quota.c	/^  quotaFile *pFile;       \/* The file record in the quota system *\/$/;"	m	struct:quota_FILE	file:
pFile	src/test_vfs.c	/^  TestvfsFd *pFile;               \/* List of open handles *\/$/;"	m	struct:TestvfsBuffer	file:
pFileData	ext/async/sqlite3async.c	/^  AsyncFileData *pFileData;    \/* File to write data to or sync *\/$/;"	m	struct:AsyncWrite	file:
pFileList	src/test_onefile.c	/^  fs_real_file *pFileList;$/;"	m	struct:fs_vfs_t	file:
pFiles	src/test_quota.c	/^  quotaFile *pFiles;             \/* Files within this group *\/$/;"	m	struct:quotaGroup	file:
pFiller	sqlite3.c	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem	file:
pFiller	src/vdbeInt.h	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem
pFiller	tsrc/vdbeInt.h	/^  void *pFiller;      \/* So that sizeof(Mem) is a multiple of 8 *\/$/;"	m	struct:Mem
pFilter	ext/fts3/fts3Int.h	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader
pFilter	sqlite3.c	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader	file:
pFilter	tsrc/fts3Int.h	/^  Fts3SegFilter *pFilter;         \/* Pointer to filter object *\/$/;"	m	struct:Fts3MultiSegReader
pFilterCtx	ext/session/sqlite3session.c	/^  void *pFilterCtx;               \/* First argument to pass to xTableFilter *\/$/;"	m	struct:sqlite3_session	file:
pFilterCtx	sqlite3.c	/^  void *pFilterCtx;               \/* First argument to pass to xTableFilter *\/$/;"	m	struct:sqlite3_session	file:
pFilterCtx	tsrc/sqlite3session.c	/^  void *pFilterCtx;               \/* First argument to pass to xTableFilter *\/$/;"	m	struct:sqlite3_session	file:
pFilterScript	ext/session/test_session.c	/^  Tcl_Obj *pFilterScript;$/;"	m	struct:TestConflictHandler	file:
pFilterScript	ext/session/test_session.c	/^  Tcl_Obj *pFilterScript;$/;"	m	struct:TestSession	file:
pFinal	src/test1.c	/^  Tcl_Obj *pFinal;                \/* Script for agg. finalization invocation *\/$/;"	m	struct:CreateFunctionV2	file:
pFirst	ext/misc/closure.c	/^  closure_avl *pFirst;       \/* Oldest node on the queue *\/$/;"	m	struct:closure_queue	file:
pFirst	sqlite3.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	sqlite3.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon89	typeref:struct:__anon89::MemBlockHdr	file:
pFirst	sqlite3.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	sqlite3.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pFirst	src/mem2.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon63	typeref:struct:__anon63::MemBlockHdr	file:
pFirst	src/memjournal.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	src/os_unix.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	src/os_win.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pFirst	tsrc/mem2.c	/^  struct MemBlockHdr *pFirst;$/;"	m	struct:__anon30	typeref:struct:__anon30::MemBlockHdr	file:
pFirst	tsrc/memjournal.c	/^  FileChunk *pFirst;              \/* Head of in-memory chunk-list *\/$/;"	m	struct:MemJournal	file:
pFirst	tsrc/os_unix.c	/^  unixShm *pFirst;           \/* All unixShm objects pointing to this *\/$/;"	m	struct:unixShmNode	file:
pFirst	tsrc/os_win.c	/^  winShm *pFirst;            \/* All winShm objects pointing to this *\/$/;"	m	struct:winShmNode	file:
pFirstDb	test/fuzzcheck.c	/^  Blob *pFirstDb;                  \/* Content of first template database *\/$/;"	m	struct:GlobalVars	file:
pFirstSql	test/fuzzcheck.c	/^  Blob *pFirstSql;                 \/* First SQL script *\/$/;"	m	struct:GlobalVars	file:
pForest	sqlite3.c	/^  struct RowSetEntry *pForest;   \/* List of binary trees of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pForest	src/rowset.c	/^  struct RowSetEntry *pForest;   \/* List of binary trees of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pForest	tsrc/rowset.c	/^  struct RowSetEntry *pForest;   \/* List of binary trees of entries *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrame	sqlite3.c	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::MemValue	file:
pFrame	sqlite3.c	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe	file:
pFrame	src/vdbeInt.h	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::MemValue
pFrame	src/vdbeInt.h	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe
pFrame	tsrc/vdbeInt.h	/^    VdbeFrame *pFrame;  \/* Used when flags==MEM_Frame *\/$/;"	m	union:Mem::MemValue
pFrame	tsrc/vdbeInt.h	/^  VdbeFrame *pFrame;      \/* Parent frame *\/$/;"	m	struct:Vdbe
pFree	sqlite3.c	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside	file:
pFree	sqlite3.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	sqlite3.c	/^  PgHdr1 *pFree;                      \/* List of unused pcache-local pages *\/$/;"	m	struct:PCache1	file:
pFree	sqlite3.c	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe	file:
pFree	src/pcache1.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	src/pcache1.c	/^  PgHdr1 *pFree;                      \/* List of unused pcache-local pages *\/$/;"	m	struct:PCache1	file:
pFree	src/sqliteInt.h	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside
pFree	src/test_wsd.c	/^  u8 *pFree;$/;"	m	struct:ProcessLocalStorage	file:
pFree	src/vdbeInt.h	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe
pFree	tsrc/pcache1.c	/^  PgFreeslot *pFree;             \/* Free page blocks *\/$/;"	m	struct:PCacheGlobal	file:
pFree	tsrc/pcache1.c	/^  PgHdr1 *pFree;                      \/* List of unused pcache-local pages *\/$/;"	m	struct:PCache1	file:
pFree	tsrc/sqliteInt.h	/^  LookasideSlot *pFree;   \/* List of available buffers *\/$/;"	m	struct:Lookaside
pFree	tsrc/vdbeInt.h	/^  void *pFree;            \/* Free this when deleting the vdbe *\/$/;"	m	struct:Vdbe
pFresh	sqlite3.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFresh	src/rowset.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFresh	tsrc/rowset.c	/^  struct RowSetEntry *pFresh;    \/* Source of new entry objects *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pFrom	sqlite3.c	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey	file:
pFrom	src/sqliteInt.h	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey
pFrom	tsrc/sqliteInt.h	/^  Table *pFrom;     \/* Table containing the REFERENCES clause (aka: Child) *\/$/;"	m	struct:FKey
pFts	ext/fts1/fts1.c	/^  fulltext_vtab *pFts;  \/* The full text index *\/$/;"	m	struct:Query	file:
pFts	ext/fts2/fts2.c	/^  fulltext_vtab *pFts;  \/* The full text index *\/$/;"	m	struct:Query	file:
pFts	ext/fts5/fts5_aux.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts	ext/fts5/fts5_tcl.c	/^  Fts5Context *pFts;$/;"	m	struct:F5tApi	file:
pFts	fts5.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts	sqlite3.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts	tsrc/fts1.c	/^  fulltext_vtab *pFts;  \/* The full text index *\/$/;"	m	struct:Query	file:
pFts	tsrc/fts2.c	/^  fulltext_vtab *pFts;  \/* The full text index *\/$/;"	m	struct:Query	file:
pFts	tsrc/fts5.c	/^  Fts5Context *pFts;              \/* First arg to pass to pApi functions *\/$/;"	m	struct:CInstIter	file:
pFts3Tab	ext/fts3/fts3_aux.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFts3Tab	ext/fts3/fts3_term.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3termTable	file:
pFts3Tab	sqlite3.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFts3Tab	tsrc/fts3_aux.c	/^  Fts3Table *pFts3Tab;$/;"	m	struct:Fts3auxTable	file:
pFullScan	ext/misc/spellfix.c	/^  sqlite3_stmt *pFullScan;     \/* Shadow query for a full table scan *\/$/;"	m	struct:spellfix1_cursor	file:
pFulltextStatements	ext/fts1/fts1.c	/^  sqlite3_stmt *pFulltextStatements[MAX_STMT];$/;"	m	struct:fulltext_vtab	file:
pFulltextStatements	ext/fts1/fulltext.c	/^  sqlite3_stmt *pFulltextStatements[MAX_STMT];$/;"	m	struct:fulltext_vtab	file:
pFulltextStatements	ext/fts2/fts2.c	/^  sqlite3_stmt *pFulltextStatements[MAX_STMT];$/;"	m	struct:fulltext_vtab	file:
pFulltextStatements	tsrc/fts1.c	/^  sqlite3_stmt *pFulltextStatements[MAX_STMT];$/;"	m	struct:fulltext_vtab	file:
pFulltextStatements	tsrc/fts2.c	/^  sqlite3_stmt *pFulltextStatements[MAX_STMT];$/;"	m	struct:fulltext_vtab	file:
pFunc	sqlite3.c	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func	file:
pFunc	sqlite3.c	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::p4union	file:
pFunc	sqlite3.c	/^  FuncDef *pFunc;         \/* Pointer to function information *\/$/;"	m	struct:sqlite3_context	file:
pFunc	src/sqliteInt.h	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func
pFunc	src/tclsqlite.c	/^  SqlFunc *pFunc;            \/* List of SQL functions *\/$/;"	m	struct:SqliteDb	file:
pFunc	src/test1.c	/^  Tcl_Obj *pFunc;                 \/* Script for function invocation *\/$/;"	m	struct:CreateFunctionV2	file:
pFunc	src/vdbe.h	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::p4union
pFunc	src/vdbeInt.h	/^  FuncDef *pFunc;         \/* Pointer to function information *\/$/;"	m	struct:sqlite3_context
pFunc	tsrc/sqliteInt.h	/^    FuncDef *pFunc;          \/* The aggregate function implementation *\/$/;"	m	struct:AggInfo::AggInfo_func
pFunc	tsrc/tclsqlite.c	/^  SqlFunc *pFunc;            \/* List of SQL functions *\/$/;"	m	struct:SqliteDb	file:
pFunc	tsrc/vdbe.h	/^    FuncDef *pFunc;        \/* Used when p4type is P4_FUNCDEF *\/$/;"	m	union:VdbeOp::p4union
pFunc	tsrc/vdbeInt.h	/^  FuncDef *pFunc;         \/* Pointer to function information *\/$/;"	m	struct:sqlite3_context
pFuncArg	sqlite3.c	/^      ExprList *pFuncArg;  \/* Arguments to table-valued-function *\/$/;"	m	union:SrcList::SrcList_item::__anon85	file:
pFuncArg	src/sqliteInt.h	/^      ExprList *pFuncArg;  \/* Arguments to table-valued-function *\/$/;"	m	union:SrcList::SrcList_item::__anon59
pFuncArg	tsrc/sqliteInt.h	/^      ExprList *pFuncArg;  \/* Arguments to table-valued-function *\/$/;"	m	union:SrcList::SrcList_item::__anon27
pGlobal	ext/fts5/fts5_main.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	ext/fts5/fts5_main.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGlobal	ext/fts5/fts5_vocab.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	fts5.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	fts5.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	fts5.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGlobal	sqlite3.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	sqlite3.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGlobal	src/test_wsd.c	/^static ProcessLocalStorage *pGlobal = 0;$/;"	v	file:
pGlobal	tsrc/fts5.c	/^  Fts5Global *pGlobal;            \/* FTS5 global object for this database *\/$/;"	m	struct:Fts5VocabTable	file:
pGlobal	tsrc/fts5.c	/^  Fts5Global *pGlobal;            \/* Global (connection wide) data *\/$/;"	m	struct:Fts5Table	file:
pGlobal	tsrc/fts5.c	/^  Fts5Global *pGlobal;            \/* Global context for this function *\/$/;"	m	struct:Fts5Auxiliary	file:
pGroup	sqlite3.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroup	src/pcache1.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroup	src/test_multiplex.c	/^  multiplexGroup *pGroup;         \/* The underlying group of files *\/$/;"	m	struct:multiplexConn	file:
pGroup	src/test_quota.c	/^  quotaGroup *pGroup;             \/* Quota group to which this file belongs *\/$/;"	m	struct:quotaFile	file:
pGroup	src/test_quota.c	/^  quotaGroup *pGroup;$/;"	m	struct:__anon67	file:
pGroup	tsrc/pcache1.c	/^  PGroup *pGroup;                     \/* PGroup this cache belongs to *\/$/;"	m	struct:PCache1	file:
pGroupBy	sqlite3.c	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo	file:
pGroupBy	sqlite3.c	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select	file:
pGroupBy	src/sqliteInt.h	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo
pGroupBy	src/sqliteInt.h	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select
pGroupBy	tsrc/sqliteInt.h	/^  ExprList *pGroupBy;     \/* The group by clause *\/$/;"	m	struct:AggInfo
pGroupBy	tsrc/sqliteInt.h	/^  ExprList *pGroupBy;    \/* The GROUP BY clause *\/$/;"	m	struct:Select
pGroups	src/test_multiplex.c	/^  multiplexGroup *pGroups;$/;"	m	struct:__anon62	file:
pHasContent	sqlite3.c	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared	file:
pHasContent	src/btreeInt.h	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared
pHasContent	tsrc/btreeInt.h	/^  Bitvec *pHasContent;  \/* Set of pages moved to free-list this transaction *\/$/;"	m	struct:BtShared
pHash	ext/fts5/fts5_index.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHash	ext/misc/fuzzer.c	/^  fuzzer_stem *pHash;        \/* Next stem with same hash on zBasis *\/$/;"	m	struct:fuzzer_stem	file:
pHash	fts5.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHash	sqlite3.c	/^    FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	union:FuncDef::__anon79	file:
pHash	sqlite3.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHash	src/sqliteInt.h	/^    FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	union:FuncDef::__anon53
pHash	tsrc/fts5.c	/^  Fts5Hash *pHash;                \/* Hash table for in-memory data *\/$/;"	m	struct:Fts5Index	file:
pHash	tsrc/sqliteInt.h	/^    FuncDef *pHash;      \/* Next with a different name but the same hash *\/$/;"	m	union:FuncDef::__anon21
pHashNext	ext/fts5/fts5_hash.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHashNext	fts5.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHashNext	sqlite3.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHashNext	tsrc/fts5.c	/^  Fts5HashEntry *pHashNext;       \/* Next hash entry with same hash-key *\/$/;"	m	struct:Fts5HashEntry	file:
pHaving	sqlite3.c	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select	file:
pHaving	src/sqliteInt.h	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select
pHaving	tsrc/sqliteInt.h	/^  Expr *pHaving;         \/* The HAVING clause *\/$/;"	m	struct:Select
pHead	ext/fts3/fts3_snippet.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHead	sqlite3.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHead	tsrc/fts3_snippet.c	/^  char *pHead;                    \/* Position list data following iHead *\/$/;"	m	struct:SnippetPhrase	file:
pHeap	sqlite3.c	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config	file:
pHeap	src/sqliteInt.h	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config
pHeap	tsrc/sqliteInt.h	/^  void *pHeap;                      \/* Heap storage space *\/$/;"	m	struct:Sqlite3Config
pI64	sqlite3.c	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::p4union	file:
pI64	src/vdbe.h	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::p4union
pI64	tsrc/vdbe.h	/^    i64 *pI64;             \/* Used when p4type is P4_INT64 *\/$/;"	m	union:VdbeOp::p4union
pIBIndex	sqlite3.c	/^    Index *pIBIndex;  \/* Index structure corresponding to u1.zIndexedBy *\/$/;"	m	struct:SrcList::SrcList_item	file:
pIBIndex	src/sqliteInt.h	/^    Index *pIBIndex;  \/* Index structure corresponding to u1.zIndexedBy *\/$/;"	m	struct:SrcList::SrcList_item
pIBIndex	tsrc/sqliteInt.h	/^    Index *pIBIndex;  \/* Index structure corresponding to u1.zIndexedBy *\/$/;"	m	struct:SrcList::SrcList_item
pId	sqlite3.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	sqlite3.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pId	src/os_unix.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	src/os_unix.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pId	tsrc/os_unix.c	/^  struct vxworksFileId *pId;          \/* Unique file ID *\/$/;"	m	struct:unixFile	typeref:struct:unixFile::vxworksFileId	file:
pId	tsrc/os_unix.c	/^  struct vxworksFileId *pId;  \/* Unique file ID for vxworks. *\/$/;"	m	struct:unixFileId	typeref:struct:unixFileId::vxworksFileId	file:
pIdList	sqlite3.c	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep	file:
pIdList	src/sqliteInt.h	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep
pIdList	tsrc/sqliteInt.h	/^  IdList *pIdList;     \/* Column names for INSERT *\/$/;"	m	struct:TriggerStep
pIdx	ext/fts5/fts5_index.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	fts5.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	sqlite3.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	sqlite3.c	/^  Index *pIdx;     \/* The index to be tested for coverage *\/$/;"	m	struct:IdxCover	file:
pIdx	sqlite3.c	/^  Index *pIdx;    \/* The index used to access the table *\/$/;"	m	struct:CCurHint	file:
pIdx	sqlite3.c	/^  Index *pIdx;$/;"	m	struct:ValueNewStat4Ctx	file:
pIdx	src/expr.c	/^  Index *pIdx;     \/* The index to be tested for coverage *\/$/;"	m	struct:IdxCover	file:
pIdx	src/vdbemem.c	/^  Index *pIdx;$/;"	m	struct:ValueNewStat4Ctx	file:
pIdx	src/wherecode.c	/^  Index *pIdx;    \/* The index used to access the table *\/$/;"	m	struct:CCurHint	file:
pIdx	tsrc/expr.c	/^  Index *pIdx;     \/* The index to be tested for coverage *\/$/;"	m	struct:IdxCover	file:
pIdx	tsrc/fts5.c	/^  Fts5Index *pIdx;$/;"	m	struct:Fts5FlushCtx	file:
pIdx	tsrc/vdbemem.c	/^  Index *pIdx;$/;"	m	struct:ValueNewStat4Ctx	file:
pIdx	tsrc/wherecode.c	/^  Index *pIdx;    \/* The index used to access the table *\/$/;"	m	struct:CCurHint	file:
pIdxCover	sqlite3.c	/^    struct IdxCover *pIdxCover;                \/* Check for index coverage *\/$/;"	m	union:Walker::__anon87	typeref:struct:Walker::__anon87::IdxCover	file:
pIdxCover	src/sqliteInt.h	/^    struct IdxCover *pIdxCover;                \/* Check for index coverage *\/$/;"	m	union:Walker::__anon61	typeref:struct:Walker::__anon61::IdxCover
pIdxCover	tsrc/sqliteInt.h	/^    struct IdxCover *pIdxCover;                \/* Check for index coverage *\/$/;"	m	union:Walker::__anon29	typeref:struct:Walker::__anon29::IdxCover
pIdxDeleter	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxDeleter	fts5.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxDeleter	sqlite3.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxDeleter	tsrc/fts5.c	/^  sqlite3_stmt *pIdxDeleter;      \/* "DELETE FROM %_idx WHERE segid=? *\/$/;"	m	struct:Fts5Index	file:
pIdxExpr	sqlite3.c	/^  Expr *pIdxExpr;            \/* Search for this index expression *\/$/;"	m	struct:WhereScan	file:
pIdxExpr	src/whereInt.h	/^  Expr *pIdxExpr;            \/* Search for this index expression *\/$/;"	m	struct:WhereScan
pIdxExpr	tsrc/whereInt.h	/^  Expr *pIdxExpr;            \/* Search for this index expression *\/$/;"	m	struct:WhereScan
pIdxIter	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pIdxIter;         \/* Index iterator *\/$/;"	m	struct:RbuObjIter	file:
pIdxIter	sqlite3.c	/^  sqlite3_stmt *pIdxIter;         \/* Index iterator *\/$/;"	m	struct:RbuObjIter	file:
pIdxIter	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pIdxIter;         \/* Index iterator *\/$/;"	m	struct:RbuObjIter	file:
pIdxSelect	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxSelect	fts5.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxSelect	sqlite3.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxSelect	tsrc/fts5.c	/^  sqlite3_stmt *pIdxSelect;$/;"	m	struct:Fts5Index	file:
pIdxWriter	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIdxWriter	fts5.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIdxWriter	sqlite3.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIdxWriter	tsrc/fts5.c	/^  sqlite3_stmt *pIdxWriter;       \/* "INSERT ... %_idx VALUES(?,?,?,?)" *\/$/;"	m	struct:Fts5Index	file:
pIn	ext/session/sqlite3session.c	/^  void *pIn;                                \/* First argument to xInput *\/$/;"	m	struct:SessionInput	file:
pIn	sqlite3.c	/^  void *pIn;                                \/* First argument to xInput *\/$/;"	m	struct:SessionInput	file:
pIn	sqlite3.c	/^  void *pIn;                     \/* Argument to the thread *\/$/;"	m	struct:SQLiteThread	file:
pIn	sqlite3.c	/^  void *pIn;               \/* Argument to xTask *\/$/;"	m	struct:SQLiteThread	file:
pIn	src/threads.c	/^  void *pIn;                     \/* Argument to the thread *\/$/;"	m	struct:SQLiteThread	file:
pIn	src/threads.c	/^  void *pIn;               \/* Argument to xTask *\/$/;"	m	struct:SQLiteThread	file:
pIn	tsrc/sqlite3session.c	/^  void *pIn;                                \/* First argument to xInput *\/$/;"	m	struct:SessionInput	file:
pIn	tsrc/threads.c	/^  void *pIn;                     \/* Argument to the thread *\/$/;"	m	struct:SQLiteThread	file:
pIn	tsrc/threads.c	/^  void *pIn;               \/* Argument to xTask *\/$/;"	m	struct:SQLiteThread	file:
pInJournal	sqlite3.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInJournal	src/pager.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInJournal	tsrc/pager.c	/^  Bitvec *pInJournal;         \/* One bit for each page in the database file *\/$/;"	m	struct:Pager	file:
pInSavepoint	sqlite3.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pInSavepoint	src/pager.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pInSavepoint	tsrc/pager.c	/^  Bitvec *pInSavepoint;        \/* Set of pages in this savepoint *\/$/;"	m	struct:PagerSavepoint	file:
pIncr	sqlite3.c	/^  IncrMerger *pIncr;          \/* Incremental merger *\/$/;"	m	struct:PmaReader	file:
pIncr	src/vdbesort.c	/^  IncrMerger *pIncr;          \/* Incremental merger *\/$/;"	m	struct:PmaReader	file:
pIncr	tsrc/vdbesort.c	/^  IncrMerger *pIncr;          \/* Incremental merger *\/$/;"	m	struct:PmaReader	file:
pIncrblob	src/tclsqlite.c	/^  IncrblobChannel *pIncrblob;\/* Linked list of open incrblob channels *\/$/;"	m	struct:SqliteDb	file:
pIncrblob	tsrc/tclsqlite.c	/^  IncrblobChannel *pIncrblob;\/* Linked list of open incrblob channels *\/$/;"	m	struct:SqliteDb	file:
pIndex	ext/fts5/fts5_expr.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	ext/fts5/fts5_index.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	ext/fts5/fts5_main.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	ext/fts5/fts5_storage.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	ext/fts5/fts5_vocab.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	fts5.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	fts5.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	fts5.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	fts5.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	fts5.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	sqlite3.c	/^      Index *pIndex;         \/* Index used, or NULL *\/$/;"	m	struct:WhereLoop::__anon98::__anon99	file:
pIndex	sqlite3.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	sqlite3.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	sqlite3.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	sqlite3.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	sqlite3.c	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table	file:
pIndex	src/sqliteInt.h	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table
pIndex	src/whereInt.h	/^      Index *pIndex;         \/* Index used, or NULL *\/$/;"	m	struct:WhereLoop::__anon47::__anon48
pIndex	tsrc/fts5.c	/^  Fts5Index *pIndex;              \/* Associated FTS5 index *\/$/;"	m	struct:Fts5VocabCursor	file:
pIndex	tsrc/fts5.c	/^  Fts5Index *pIndex;              \/* Full-text index *\/$/;"	m	struct:Fts5Table	file:
pIndex	tsrc/fts5.c	/^  Fts5Index *pIndex;              \/* Index that owns this iterator *\/$/;"	m	struct:Fts5Iter	file:
pIndex	tsrc/fts5.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Expr	file:
pIndex	tsrc/fts5.c	/^  Fts5Index *pIndex;$/;"	m	struct:Fts5Storage	file:
pIndex	tsrc/sqliteInt.h	/^  Index *pIndex;       \/* List of SQL indexes on this table. *\/$/;"	m	struct:Table
pIndex	tsrc/whereInt.h	/^      Index *pIndex;         \/* Index used, or NULL *\/$/;"	m	struct:WhereLoop::__anon12::__anon13
pInfo	ext/rtree/rtree.c	/^  sqlite3_rtree_query_info *pInfo;  \/* xGeom and xQueryFunc argument *\/$/;"	m	struct:RtreeConstraint	file:
pInfo	sqlite3.c	/^  sqlite3_rtree_query_info *pInfo;  \/* xGeom and xQueryFunc argument *\/$/;"	m	struct:RtreeConstraint	file:
pInfo	src/test_vfstrace.c	/^  vfstrace_info *pInfo;     \/* The trace-VFS to which this file belongs *\/$/;"	m	struct:vfstrace_file	file:
pInfo	tsrc/rtree.c	/^  sqlite3_rtree_query_info *pInfo;  \/* xGeom and xQueryFunc argument *\/$/;"	m	struct:RtreeConstraint	file:
pInitMutex	sqlite3.c	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config	file:
pInitMutex	src/sqliteInt.h	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config
pInitMutex	tsrc/sqliteInt.h	/^  sqlite3_mutex *pInitMutex;        \/* Mutex used by sqlite3_initialize() *\/$/;"	m	struct:Sqlite3Config
pInode	sqlite3.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	sqlite3.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInode	src/os_unix.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	src/os_unix.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInode	tsrc/os_unix.c	/^  unixInodeInfo *pInode;              \/* Info about locks on this inode *\/$/;"	m	struct:unixFile	file:
pInode	tsrc/os_unix.c	/^  unixInodeInfo *pInode;     \/* unixInodeInfo that owns this SHM node *\/$/;"	m	struct:unixShmNode	file:
pInput	ext/fts1/fts1_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	ext/fts1/simple_tokenizer.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	ext/fts2/fts2_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	ext/fts3/fts3_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	sqlite3.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	tsrc/fts1_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	tsrc/fts2_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInput	tsrc/fts3_tokenizer1.c	/^  const char *pInput;          \/* input we are tokenizing *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pInsert	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pInsert;          \/* Statement for INSERT operations *\/$/;"	m	struct:RbuObjIter	file:
pInsert	ext/session/sqlite3session.c	/^  sqlite3_stmt *pInsert;          \/* INSERT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pInsert	sqlite3.c	/^  sqlite3_stmt *pInsert;          \/* INSERT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pInsert	sqlite3.c	/^  sqlite3_stmt *pInsert;          \/* Statement for INSERT operations *\/$/;"	m	struct:RbuObjIter	file:
pInsert	tool/loadfts.c	/^  sqlite3_stmt *pInsert;          \/* INSERT INTO fts VALUES(readtext(:1)) *\/$/;"	m	struct:VisitContext	file:
pInsert	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pInsert;          \/* Statement for INSERT operations *\/$/;"	m	struct:RbuObjIter	file:
pInsert	tsrc/sqlite3session.c	/^  sqlite3_stmt *pInsert;          \/* INSERT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pInterp	src/test1.c	/^  Tcl_Interp *pInterp;$/;"	m	struct:LogCallback	file:
pIter	ext/fts2/fts2_icu.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pIter	ext/fts3/fts3_icu.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pIter	ext/fts5/fts5_expr.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	ext/fts5/fts5_vocab.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pIter	fts5.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	fts5.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pIter	sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	sqlite3.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pIter	sqlite3.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pIter	tsrc/fts2_icu.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pIter	tsrc/fts3_icu.c	/^  UBreakIterator *pIter;      \/* ICU break-iterator object *\/$/;"	m	struct:IcuCursor	file:
pIter	tsrc/fts5.c	/^  Fts5IndexIter *pIter;           \/* Iterator for this term *\/$/;"	m	struct:Fts5ExprTerm	file:
pIter	tsrc/fts5.c	/^  Fts5IndexIter *pIter;           \/* Term\/rowid iterator object *\/$/;"	m	struct:Fts5VocabCursor	file:
pKey	ext/fts1/ft_hash.h	/^  void *pKey; int nKey;    \/* Key associated with this element *\/$/;"	m	struct:HashElem
pKey	ext/fts1/fts1_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts1HashElem
pKey	ext/fts2/fts2_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts2HashElem
pKey	ext/fts3/fts3_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem
pKey	sqlite3.c	/^  const char *pKey;            \/* Key associated with this element *\/$/;"	m	struct:HashElem	file:
pKey	sqlite3.c	/^  const void *pKey;       \/* Key content for indexes.  NULL for tables *\/$/;"	m	struct:BtreePayload	file:
pKey	sqlite3.c	/^  void *pKey;               \/* Saved key that was cursor last known position *\/$/;"	m	struct:BtCursor	file:
pKey	sqlite3.c	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem	file:
pKey	src/btree.h	/^  const void *pKey;       \/* Key content for indexes.  NULL for tables *\/$/;"	m	struct:BtreePayload
pKey	src/btreeInt.h	/^  void *pKey;               \/* Saved key that was cursor last known position *\/$/;"	m	struct:BtCursor
pKey	src/hash.h	/^  const char *pKey;            \/* Key associated with this element *\/$/;"	m	struct:HashElem
pKey	src/test_wsd.c	/^  void *pKey;$/;"	m	struct:ProcessLocalVar	file:
pKey	tsrc/btree.h	/^  const void *pKey;       \/* Key content for indexes.  NULL for tables *\/$/;"	m	struct:BtreePayload
pKey	tsrc/btreeInt.h	/^  void *pKey;               \/* Saved key that was cursor last known position *\/$/;"	m	struct:BtCursor
pKey	tsrc/fts1_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts1HashElem
pKey	tsrc/fts2_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:fts2HashElem
pKey	tsrc/fts3_hash.h	/^  void *pKey; int nKey;      \/* Key associated with this element *\/$/;"	m	struct:Fts3HashElem
pKey	tsrc/hash.h	/^  const char *pKey;            \/* Key associated with this element *\/$/;"	m	struct:HashElem
pKeyInfo	sqlite3.c	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::p4union	file:
pKeyInfo	sqlite3.c	/^  KeyInfo *pKeyInfo;              \/* How to compare records *\/$/;"	m	struct:VdbeSorter	file:
pKeyInfo	sqlite3.c	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor	file:
pKeyInfo	sqlite3.c	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord	file:
pKeyInfo	sqlite3.c	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo	file:
pKeyInfo	src/btreeInt.h	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo
pKeyInfo	src/sqliteInt.h	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord
pKeyInfo	src/vdbe.h	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::p4union
pKeyInfo	src/vdbeInt.h	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor
pKeyInfo	src/vdbesort.c	/^  KeyInfo *pKeyInfo;              \/* How to compare records *\/$/;"	m	struct:VdbeSorter	file:
pKeyInfo	tsrc/btreeInt.h	/^  struct KeyInfo *pKeyInfo; \/* Argument passed to comparison function *\/$/;"	m	struct:BtCursor	typeref:struct:BtCursor::KeyInfo
pKeyInfo	tsrc/sqliteInt.h	/^  KeyInfo *pKeyInfo;  \/* Collation and sort-order information *\/$/;"	m	struct:UnpackedRecord
pKeyInfo	tsrc/vdbe.h	/^    KeyInfo *pKeyInfo;     \/* Used when p4type is P4_KEYINFO *\/$/;"	m	union:VdbeOp::p4union
pKeyInfo	tsrc/vdbeInt.h	/^  KeyInfo *pKeyInfo;    \/* Info about index keys needed by index cursors *\/$/;"	m	struct:VdbeCursor
pKeyInfo	tsrc/vdbesort.c	/^  KeyInfo *pKeyInfo;              \/* How to compare records *\/$/;"	m	struct:VdbeSorter	file:
pLang	ext/misc/spellfix.c	/^  const EditDist3Lang *pLang;      \/* The selected language coefficients *\/$/;"	m	struct:MatchQuery	file:
pLast	ext/misc/closure.c	/^  closure_avl *pLast;        \/* Youngest node on the queue *\/$/;"	m	struct:closure_queue	file:
pLast	sqlite3.c	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep	file:
pLast	sqlite3.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon89	typeref:struct:__anon89::MemBlockHdr	file:
pLast	sqlite3.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLast	src/mem2.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon63	typeref:struct:__anon63::MemBlockHdr	file:
pLast	src/rowset.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLast	src/sqliteInt.h	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep
pLast	tsrc/mem2.c	/^  struct MemBlockHdr *pLast;$/;"	m	struct:__anon30	typeref:struct:__anon30::MemBlockHdr	file:
pLast	tsrc/rowset.c	/^  struct RowSetEntry *pLast;     \/* Last entry on the pEntry list *\/$/;"	m	struct:RowSet	typeref:struct:RowSet::RowSetEntry	file:
pLast	tsrc/sqliteInt.h	/^  TriggerStep *pLast;  \/* Last element in link-list. Valid for 1st elem only *\/$/;"	m	struct:TriggerStep
pLeaf	ext/fts5/fts5_index.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeaf	fts5.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeaf	sqlite3.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeaf	tsrc/fts5.c	/^  Fts5Data *pLeaf;                \/* Current leaf data *\/$/;"	m	struct:Fts5SegIter	file:
pLeafSelectStmts	ext/fts2/fts2.c	/^  sqlite3_stmt *pLeafSelectStmts[MERGE_COUNT];$/;"	m	struct:fulltext_vtab	file:
pLeafSelectStmts	tsrc/fts2.c	/^  sqlite3_stmt *pLeafSelectStmts[MERGE_COUNT];$/;"	m	struct:fulltext_vtab	file:
pLeft	ext/fts3/fts3Int.h	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr
pLeft	sqlite3.c	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr	file:
pLeft	sqlite3.c	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr	file:
pLeft	sqlite3.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeft	src/rowset.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeft	src/sqliteInt.h	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr
pLeft	tsrc/fts3Int.h	/^  Fts3Expr *pLeft;           \/* Left operand *\/$/;"	m	struct:Fts3Expr
pLeft	tsrc/rowset.c	/^  struct RowSetEntry *pLeft;    \/* Left subtree (smaller entries) *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pLeft	tsrc/sqliteInt.h	/^  Expr *pLeft;           \/* Left subnode *\/$/;"	m	struct:Expr
pLeftmost	ext/fts3/fts3_write.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLeftmost	sqlite3.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLeftmost	tsrc/fts3_write.c	/^  SegmentNode *pLeftmost;         \/* Pointer to left-most node of this depth *\/$/;"	m	struct:SegmentNode	file:
pLimit	parse.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pLimit	sqlite3.c	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pLimit	sqlite3.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pLimit	src/sqliteInt.h	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select
pLimit	tsrc/parse.c	/^  Expr *pLimit;    \/* The LIMIT expression.  NULL if there is no limit *\/$/;"	m	struct:LimitVal	file:
pLimit	tsrc/sqliteInt.h	/^  Expr *pLimit;          \/* LIMIT expression. NULL means not used. *\/$/;"	m	struct:Select
pList	ext/async/sqlite3async.c	/^  AsyncFileLock *pList;$/;"	m	struct:AsyncLock	file:
pList	ext/fts3/fts3.c	/^  char *pList;$/;"	m	struct:TokenDoclist	file:
pList	ext/fts3/fts3Int.h	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist
pList	ext/fts3/fts3_snippet.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	ext/fts3/fts3_snippet.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	ext/fts3/fts3_write.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	ext/misc/closure.c	/^  closure_avl *pList;   \/* A linked list of nodes *\/$/;"	m	struct:closure_avl	file:
pList	ext/session/sqlite3session.c	/^  SessionTable *pList;            \/* List of tables in current patch *\/$/;"	m	struct:sqlite3_changegroup	file:
pList	sqlite3.c	/^    ExprList *pList;     \/* op = IN, EXISTS, SELECT, CASE, FUNCTION, BETWEEN *\/$/;"	m	union:Expr::__anon81	file:
pList	sqlite3.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	sqlite3.c	/^  SessionTable *pList;            \/* List of tables in current patch *\/$/;"	m	struct:sqlite3_changegroup	file:
pList	sqlite3.c	/^  SorterRecord *pList;            \/* Linked list of records *\/$/;"	m	struct:SorterList	file:
pList	sqlite3.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	sqlite3.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	sqlite3.c	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist	file:
pList	sqlite3.c	/^  char *pList;$/;"	m	struct:TokenDoclist	file:
pList	src/sqliteInt.h	/^    ExprList *pList;     \/* op = IN, EXISTS, SELECT, CASE, FUNCTION, BETWEEN *\/$/;"	m	union:Expr::__anon55
pList	src/test_journal.c	/^  jt_file *pList;                \/* List of all open files *\/$/;"	m	struct:JtGlobal	file:
pList	src/vdbesort.c	/^  SorterRecord *pList;            \/* Linked list of records *\/$/;"	m	struct:SorterList	file:
pList	tsrc/fts3.c	/^  char *pList;$/;"	m	struct:TokenDoclist	file:
pList	tsrc/fts3Int.h	/^  char *pList;                   \/* Pointer to position list following iDocid *\/$/;"	m	struct:Fts3Doclist
pList	tsrc/fts3_snippet.c	/^  char *pList;                    \/* Pointer to start of phrase position list *\/$/;"	m	struct:SnippetPhrase	file:
pList	tsrc/fts3_snippet.c	/^  char *pList;                    \/* Position-list *\/$/;"	m	struct:TermOffset	file:
pList	tsrc/fts3_write.c	/^  PendingList *pList;             \/* Doclist is assembled here *\/$/;"	m	struct:Fts3DeferredToken	file:
pList	tsrc/sqlite3session.c	/^  SessionTable *pList;            \/* List of tables in current patch *\/$/;"	m	struct:sqlite3_changegroup	file:
pList	tsrc/sqliteInt.h	/^    ExprList *pList;     \/* op = IN, EXISTS, SELECT, CASE, FUNCTION, BETWEEN *\/$/;"	m	union:Expr::__anon23
pList	tsrc/vdbesort.c	/^  SorterRecord *pList;            \/* Linked list of records *\/$/;"	m	struct:SorterList	file:
pList1	src/test_tclvar.c	/^  Tcl_Obj *pList1;     \/* Result of [info vars ?pattern?] *\/$/;"	m	struct:tclvar_cursor	file:
pList2	src/test_tclvar.c	/^  Tcl_Obj *pList2;     \/* Result of [array names [lindex $pList1 $i1]] *\/$/;"	m	struct:tclvar_cursor	file:
pLock	ext/async/sqlite3async.c	/^  AsyncLock *pLock;            \/* Linked list of all AsyncLock structures *\/$/;"	m	struct:TestAsyncStaticData	file:
pLock	ext/async/sqlite3async.c	/^  AsyncLock *pLock;          \/* AsyncLock object for this file system entry *\/$/;"	m	struct:AsyncFileData	file:
pLock	sqlite3.c	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared	file:
pLock	src/btreeInt.h	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared
pLock	tsrc/btreeInt.h	/^  BtLock *pLock;        \/* List of locks held on this shared-btree struct *\/$/;"	m	struct:BtShared
pLog	ext/misc/vfslog.c	/^  VLogLog *pLog;                  \/* The log file for this file *\/$/;"	m	struct:VLogFile	file:
pLog	mptest/mptest.c	/^  FILE *pLog;            \/* Where to write log messages *\/$/;"	m	struct:Global	file:
pLog	shell.c	/^  FILE *pLog;            \/* Write log output here *\/$/;"	m	struct:ShellState	file:
pLog	src/shell.c	/^  FILE *pLog;            \/* Write log output here *\/$/;"	m	struct:ShellState	file:
pLog	src/test_osinst.c	/^  sqlite3_file *pLog;             \/* Log file handle *\/$/;"	m	struct:VfslogVfs	file:
pLog	tsrc/shell.c	/^  FILE *pLog;            \/* Write log output here *\/$/;"	m	struct:ShellState	file:
pLogArg	sqlite3.c	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config	file:
pLogArg	src/sqliteInt.h	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config
pLogArg	tsrc/sqliteInt.h	/^  void *pLogArg;                       \/* First argument to xLog() *\/$/;"	m	struct:Sqlite3Config
pLoops	sqlite3.c	/^  WhereLoop *pLoops;        \/* List of all WhereLoop objects *\/$/;"	m	struct:WhereInfo	file:
pLoops	src/whereInt.h	/^  WhereLoop *pLoops;        \/* List of all WhereLoop objects *\/$/;"	m	struct:WhereInfo
pLoops	tsrc/whereInt.h	/^  WhereLoop *pLoops;        \/* List of all WhereLoop objects *\/$/;"	m	struct:WhereInfo
pLruNext	sqlite3.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruNext	src/pcache1.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruNext	tsrc/pcache1.c	/^  PgHdr1 *pLruNext;              \/* Next in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	sqlite3.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	src/pcache1.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pLruPrev	tsrc/pcache1.c	/^  PgHdr1 *pLruPrev;              \/* Previous in LRU list of unpinned pages *\/$/;"	m	struct:PgHdr1	file:
pMIBuffer	ext/fts3/fts3Int.h	/^  MatchinfoBuffer *pMIBuffer;     \/* Buffer for matchinfo data *\/$/;"	m	struct:Fts3Cursor
pMIBuffer	sqlite3.c	/^  MatchinfoBuffer *pMIBuffer;     \/* Buffer for matchinfo data *\/$/;"	m	struct:Fts3Cursor	file:
pMIBuffer	tsrc/fts3Int.h	/^  MatchinfoBuffer *pMIBuffer;     \/* Buffer for matchinfo data *\/$/;"	m	struct:Fts3Cursor
pMain	ext/rbu/sqlite3rbu.c	/^  rbu_file *pMain;                \/* Linked list of main db files *\/$/;"	m	struct:rbu_vfs	file:
pMain	sqlite3.c	/^  rbu_file *pMain;                \/* Linked list of main db files *\/$/;"	m	struct:rbu_vfs	file:
pMain	tsrc/sqlite3rbu.c	/^  rbu_file *pMain;                \/* Linked list of main db files *\/$/;"	m	struct:rbu_vfs	file:
pMainNext	ext/rbu/sqlite3rbu.c	/^  rbu_file *pMainNext;            \/* Next MAIN_DB file *\/$/;"	m	struct:rbu_file	file:
pMainNext	sqlite3.c	/^  rbu_file *pMainNext;            \/* Next MAIN_DB file *\/$/;"	m	struct:rbu_file	file:
pMainNext	tsrc/sqlite3rbu.c	/^  rbu_file *pMainNext;            \/* Next MAIN_DB file *\/$/;"	m	struct:rbu_file	file:
pMap	sqlite3.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMap	src/os_win.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMap	tsrc/os_win.c	/^    void *pMap;$/;"	m	struct:winShmNode::ShmRegion	file:
pMapRegion	sqlite3.c	/^  void *pMapRegion;                   \/* Memory mapped region *\/$/;"	m	struct:unixFile	file:
pMapRegion	sqlite3.c	/^  void *pMapRegion;             \/* Area memory mapped *\/$/;"	m	struct:winFile	file:
pMapRegion	src/os_unix.c	/^  void *pMapRegion;                   \/* Memory mapped region *\/$/;"	m	struct:unixFile	file:
pMapRegion	src/os_win.c	/^  void *pMapRegion;             \/* Area memory mapped *\/$/;"	m	struct:winFile	file:
pMapRegion	tsrc/os_unix.c	/^  void *pMapRegion;                   \/* Memory mapped region *\/$/;"	m	struct:unixFile	file:
pMapRegion	tsrc/os_win.c	/^  void *pMapRegion;             \/* Area memory mapped *\/$/;"	m	struct:winFile	file:
pMatchStr3	ext/misc/spellfix.c	/^  EditDist3FromString *pMatchStr3; \/* Original unicode string *\/$/;"	m	struct:MatchQuery	file:
pMem	sqlite3.c	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::p4union	file:
pMem	sqlite3.c	/^  Mem *pMem;              \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context	file:
pMem	src/vdbe.h	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::p4union
pMem	src/vdbeInt.h	/^  Mem *pMem;              \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context
pMem	tsrc/vdbe.h	/^    Mem *pMem;             \/* Used when p4type is P4_MEM *\/$/;"	m	union:VdbeOp::p4union
pMem	tsrc/vdbeInt.h	/^  Mem *pMem;              \/* Memory cell used to store aggregate context *\/$/;"	m	struct:sqlite3_context
pMerger	sqlite3.c	/^  MergeEngine *pMerger;           \/* Merge engine thread reads data from *\/$/;"	m	struct:IncrMerger	file:
pMerger	sqlite3.c	/^  MergeEngine *pMerger;           \/* Or here, if bUseThreads==0 *\/$/;"	m	struct:VdbeSorter	file:
pMerger	src/vdbesort.c	/^  MergeEngine *pMerger;           \/* Merge engine thread reads data from *\/$/;"	m	struct:IncrMerger	file:
pMerger	src/vdbesort.c	/^  MergeEngine *pMerger;           \/* Or here, if bUseThreads==0 *\/$/;"	m	struct:VdbeSorter	file:
pMerger	tsrc/vdbesort.c	/^  MergeEngine *pMerger;           \/* Merge engine thread reads data from *\/$/;"	m	struct:IncrMerger	file:
pMerger	tsrc/vdbesort.c	/^  MergeEngine *pMerger;           \/* Or here, if bUseThreads==0 *\/$/;"	m	struct:VdbeSorter	file:
pMethod	ext/async/sqlite3async.c	/^  sqlite3_io_methods *pMethod;$/;"	m	struct:AsyncFile	file:
pMethod	sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/* The file I\/O methods to use. *\/$/;"	m	struct:winVfsAppData	file:
pMethod	sqlite3.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	sqlite3.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethod	src/memjournal.c	/^  const sqlite3_io_methods *pMethod; \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	src/os_unix.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethod	src/os_win.c	/^  const sqlite3_io_methods *pMethod; \/* The file I\/O methods to use. *\/$/;"	m	struct:winVfsAppData	file:
pMethod	src/os_win.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethod	src/test6.c	/^  const sqlite3_io_methods *pMethod;   \/* Must be first *\/$/;"	m	struct:CrashFile	file:
pMethod	tsrc/memjournal.c	/^  const sqlite3_io_methods *pMethod; \/* Parent class. MUST BE FIRST *\/$/;"	m	struct:MemJournal	file:
pMethod	tsrc/os_unix.c	/^  sqlite3_io_methods const *pMethod;  \/* Always the first entry *\/$/;"	m	struct:unixFile	file:
pMethod	tsrc/os_win.c	/^  const sqlite3_io_methods *pMethod; \/* The file I\/O methods to use. *\/$/;"	m	struct:winVfsAppData	file:
pMethod	tsrc/os_win.c	/^  const sqlite3_io_methods *pMethod; \/*** Must be first ***\/$/;"	m	struct:winFile	file:
pMethods	sqlite3.c	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods	file:
pMethods	sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMethods	tsrc/sqlite3.h	/^  const struct sqlite3_io_methods *pMethods;  \/* Methods for an open file *\/$/;"	m	struct:sqlite3_file	typeref:struct:sqlite3_file::sqlite3_io_methods
pMmapFreelist	sqlite3.c	/^  PgHdr *pMmapFreelist;       \/* List of free mmap page headers (pDirty) *\/$/;"	m	struct:Pager	file:
pMmapFreelist	src/pager.c	/^  PgHdr *pMmapFreelist;       \/* List of free mmap page headers (pDirty) *\/$/;"	m	struct:Pager	file:
pMmapFreelist	tsrc/pager.c	/^  PgHdr *pMmapFreelist;       \/* List of free mmap page headers (pDirty) *\/$/;"	m	struct:Pager	file:
pMod	ext/fts3/fts3_tokenize_vtab.c	/^  const sqlite3_tokenizer_module *pMod;$/;"	m	struct:Fts3tokTable	file:
pMod	ext/misc/vtshim.c	/^  sqlite3_module *pMod;         \/* Methods for child virtual tables *\/$/;"	m	struct:vtshim_aux	file:
pMod	sqlite3.c	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable	file:
pMod	sqlite3.c	/^  const sqlite3_tokenizer_module *pMod;$/;"	m	struct:Fts3tokTable	file:
pMod	src/sqliteInt.h	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable
pMod	tsrc/fts3_tokenize_vtab.c	/^  const sqlite3_tokenizer_module *pMod;$/;"	m	struct:Fts3tokTable	file:
pMod	tsrc/sqliteInt.h	/^  Module *pMod;             \/* Pointer to module implementation *\/$/;"	m	struct:VTable
pModule	ext/fts1/fts1_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	ext/fts1/tokenizer.h	/^  sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	ext/fts2/fts2_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	ext/fts3/fts3_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	sqlite3.c	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module	file:
pModule	sqlite3.c	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab	file:
pModule	sqlite3.c	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer	file:
pModule	sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pModule	src/sqliteInt.h	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module
pModule	tsrc/fts1_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	tsrc/fts2_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	tsrc/fts3_tokenizer.h	/^  const sqlite3_tokenizer_module *pModule;  \/* The module for this tokenizer *\/$/;"	m	struct:sqlite3_tokenizer
pModule	tsrc/sqlite3.h	/^  const sqlite3_module *pModule;  \/* The module for this virtual table *\/$/;"	m	struct:sqlite3_vtab
pModule	tsrc/sqliteInt.h	/^  const sqlite3_module *pModule;       \/* Callback pointers *\/$/;"	m	struct:Module
pMutex	src/test_multiplex.c	/^  sqlite3_mutex *pMutex;$/;"	m	struct:__anon62	file:
pMutex	src/test_quota.c	/^  sqlite3_mutex *pMutex;$/;"	m	struct:__anon67	file:
pNC	sqlite3.c	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon87	file:
pNC	src/sqliteInt.h	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon61
pNC	tsrc/sqliteInt.h	/^    NameContext *pNC;                          \/* Naming context *\/$/;"	m	union:Walker::__anon29
pName	sqlite3.c	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
pName	src/sqliteInt.h	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer
pName	tsrc/sqliteInt.h	/^  const Token *pName; \/* Name of the container - used for error messages *\/$/;"	m	struct:DbFixer
pNear	ext/fts5/fts5_expr.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNear	fts5.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNear	sqlite3.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNear	tsrc/fts5.c	/^  Fts5ExprNearset *pNear;         \/* For FTS5_STRING - cluster of phrases *\/$/;"	m	struct:Fts5ExprNode	file:
pNew	sqlite3.c	/^  WhereLoop *pNew;          \/* Template WhereLoop *\/$/;"	m	struct:WhereLoopBuilder	file:
pNew	src/whereInt.h	/^  WhereLoop *pNew;          \/* Template WhereLoop *\/$/;"	m	struct:WhereLoopBuilder
pNew	tsrc/whereInt.h	/^  WhereLoop *pNew;          \/* Template WhereLoop *\/$/;"	m	struct:WhereLoopBuilder
pNewTable	sqlite3.c	/^  Table *pNewTable;         \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse	file:
pNewTable	src/sqliteInt.h	/^  Table *pNewTable;         \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse
pNewTable	tsrc/sqliteInt.h	/^  Table *pNewTable;         \/* A table being constructed by CREATE TABLE *\/$/;"	m	struct:Parse
pNewTrigger	sqlite3.c	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse	file:
pNewTrigger	src/sqliteInt.h	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse
pNewTrigger	tsrc/sqliteInt.h	/^  Trigger *pNewTrigger;     \/* Trigger under construct by a CREATE TRIGGER *\/$/;"	m	struct:Parse
pNewUnpacked	sqlite3.c	/^  UnpackedRecord *pNewUnpacked;   \/* Unpacked version of new.* record *\/$/;"	m	struct:PreUpdate	file:
pNewUnpacked	src/vdbeInt.h	/^  UnpackedRecord *pNewUnpacked;   \/* Unpacked version of new.* record *\/$/;"	m	struct:PreUpdate
pNewUnpacked	tsrc/vdbeInt.h	/^  UnpackedRecord *pNewUnpacked;   \/* Unpacked version of new.* record *\/$/;"	m	struct:PreUpdate
pNext	ext/async/sqlite3async.c	/^  AsyncFileLock *pNext;$/;"	m	struct:AsyncFileLock	file:
pNext	ext/async/sqlite3async.c	/^  AsyncLock *pNext;           \/* Next in linked list headed by async.pLock *\/$/;"	m	struct:AsyncLock	file:
pNext	ext/async/sqlite3async.c	/^  AsyncWrite *pNext;  \/* Next write operation (to any file) *\/$/;"	m	struct:AsyncWrite	file:
pNext	ext/fts3/fts3_term.c	/^  char *pNext;$/;"	m	struct:Fts3termCursor	file:
pNext	ext/fts3/fts3_write.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	ext/fts5/fts5_buffer.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	ext/fts5/fts5_main.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	ext/fts5/fts5_main.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	ext/fts5/fts5_main.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	ext/fts5/fts5_main.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	ext/misc/amatch.c	/^  amatch_rule *pNext;      \/* Next rule in order of increasing rCost *\/$/;"	m	struct:amatch_rule	file:
pNext	ext/misc/amatch.c	/^  amatch_word *pNext;   \/* Next on a list of all amatch_words *\/$/;"	m	struct:amatch_word	file:
pNext	ext/misc/fuzzer.c	/^  fuzzer_rule *pNext;         \/* Next rule in order of increasing rCost *\/$/;"	m	struct:fuzzer_rule	file:
pNext	ext/misc/fuzzer.c	/^  fuzzer_stem *pNext;        \/* Next stem in rCost order *\/$/;"	m	struct:fuzzer_stem	file:
pNext	ext/misc/spellfix.c	/^  EditDist3Cost *pNext;     \/* Next cost element *\/$/;"	m	struct:EditDist3Cost	file:
pNext	ext/misc/vfslog.c	/^  VLogLog *pNext;                 \/* Next in a list of all active logs *\/$/;"	m	struct:VLogLog	file:
pNext	ext/misc/vtshim.c	/^  vtshim_cursor *pNext;        \/* Next on list of all cursors *\/$/;"	m	struct:vtshim_cursor	file:
pNext	ext/misc/vtshim.c	/^  vtshim_vtab *pNext;      \/* Next on list *\/$/;"	m	struct:vtshim_vtab	file:
pNext	ext/rbu/sqlite3rbu.c	/^  RbuUpdateStmt *pNext;$/;"	m	struct:RbuUpdateStmt	file:
pNext	ext/rtree/rtree.c	/^  RtreeNode *pNext;           \/* Next node in this hash collision chain *\/$/;"	m	struct:RtreeNode	file:
pNext	ext/session/sqlite3session.c	/^  SessionChange *pNext;           \/* For hash-table collisions *\/$/;"	m	struct:SessionChange	file:
pNext	ext/session/sqlite3session.c	/^  SessionTable *pNext;$/;"	m	struct:SessionTable	file:
pNext	ext/session/sqlite3session.c	/^  sqlite3_session *pNext;         \/* Next session object on same db. *\/$/;"	m	struct:sqlite3_session	file:
pNext	fts5.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	fts5.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	fts5.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	fts5.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	fts5.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	sqlite3.c	/^    SorterRecord *pNext;          \/* Pointer to next record in list *\/$/;"	m	union:SorterRecord::__anon94	file:
pNext	sqlite3.c	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo	file:
pNext	sqlite3.c	/^  AuxData *pNext;                 \/* Next element in list *\/$/;"	m	struct:AuxData	file:
pNext	sqlite3.c	/^  BtCursor *pNext;          \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor	file:
pNext	sqlite3.c	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock	file:
pNext	sqlite3.c	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared	file:
pNext	sqlite3.c	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree	file:
pNext	sqlite3.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	sqlite3.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	sqlite3.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	sqlite3.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	sqlite3.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	sqlite3.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	sqlite3.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	sqlite3.c	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef	file:
pNext	sqlite3.c	/^  Index *pNext;            \/* The next index associated with the same table *\/$/;"	m	struct:Index	file:
pNext	sqlite3.c	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot	file:
pNext	sqlite3.c	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext	file:
pNext	sqlite3.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	sqlite3.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	sqlite3.c	/^  RbuUpdateStmt *pNext;$/;"	m	struct:RbuUpdateStmt	file:
pNext	sqlite3.c	/^  RtreeNode *pNext;           \/* Next node in this hash collision chain *\/$/;"	m	struct:RtreeNode	file:
pNext	sqlite3.c	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint	file:
pNext	sqlite3.c	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select	file:
pNext	sqlite3.c	/^  SessionChange *pNext;           \/* For hash-table collisions *\/$/;"	m	struct:SessionChange	file:
pNext	sqlite3.c	/^  SessionTable *pNext;$/;"	m	struct:SessionTable	file:
pNext	sqlite3.c	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram	file:
pNext	sqlite3.c	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger	file:
pNext	sqlite3.c	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg	file:
pNext	sqlite3.c	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep	file:
pNext	sqlite3.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	sqlite3.c	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable	file:
pNext	sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pNext	sqlite3.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	sqlite3.c	/^  sqlite3_session *pNext;         \/* Next session object on same db. *\/$/;"	m	struct:sqlite3_session	file:
pNext	sqlite3.c	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs	file:
pNext	sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	sqlite3.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	sqlite3.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	sqlite3.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	sqlite3.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	sqlite3.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	sqlite3.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNext	src/backup.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	src/btreeInt.h	/^  BtCursor *pNext;          \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor
pNext	src/btreeInt.h	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock
pNext	src/btreeInt.h	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared
pNext	src/btreeInt.h	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree
pNext	src/malloc.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	src/mem2.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	src/memjournal.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	src/os_unix.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	src/os_unix.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	src/os_unix.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	src/os_unix.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	src/os_win.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	src/os_win.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	src/pcache1.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	src/pcache1.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	src/sqliteInt.h	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo
pNext	src/sqliteInt.h	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef
pNext	src/sqliteInt.h	/^  Index *pNext;            \/* The next index associated with the same table *\/$/;"	m	struct:Index
pNext	src/sqliteInt.h	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot
pNext	src/sqliteInt.h	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext
pNext	src/sqliteInt.h	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint
pNext	src/sqliteInt.h	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select
pNext	src/sqliteInt.h	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger
pNext	src/sqliteInt.h	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg
pNext	src/sqliteInt.h	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep
pNext	src/sqliteInt.h	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable
pNext	src/tclsqlite.c	/^  IncrblobChannel *pNext;   \/* Linked list of all open incrblob channels *\/$/;"	m	struct:IncrblobChannel	file:
pNext	src/tclsqlite.c	/^  SqlCollate *pNext;    \/* Next function on the list of them all *\/$/;"	m	struct:SqlCollate	file:
pNext	src/tclsqlite.c	/^  SqlFunc *pNext;       \/* Next function on the list of them all *\/$/;"	m	struct:SqlFunc	file:
pNext	src/tclsqlite.c	/^  SqlPreparedStmt *pNext;  \/* Next in linked list *\/$/;"	m	struct:SqlPreparedStmt	file:
pNext	src/test6.c	/^  WriteBuffer *pNext;          \/* Next in CrashGlobal.pWriteList *\/$/;"	m	struct:WriteBuffer	file:
pNext	src/test_journal.c	/^  jt_file *pNext;          \/* All files are stored in a linked list *\/$/;"	m	struct:jt_file	file:
pNext	src/test_multiplex.c	/^  multiplexGroup *pNext, *pPrev;   \/* Doubly linked list of all group objects *\/$/;"	m	struct:multiplexGroup	file:
pNext	src/test_onefile.c	/^  fs_real_file *pNext;$/;"	m	struct:fs_real_file	file:
pNext	src/test_quota.c	/^  quotaFile *pNext, **ppPrev;     \/* Linked list of files in the same group *\/$/;"	m	struct:quotaFile	file:
pNext	src/test_quota.c	/^  quotaGroup *pNext, **ppPrev;   \/* Doubly linked list of all quota objects *\/$/;"	m	struct:quotaGroup	file:
pNext	src/test_server.c	/^  SqlMessage *pNext;           \/* Next message in the queue *\/$/;"	m	struct:SqlMessage	file:
pNext	src/test_vfs.c	/^  TestvfsBuffer *pNext;           \/* Next in linked list of all buffers *\/$/;"	m	struct:TestvfsBuffer	file:
pNext	src/test_vfs.c	/^  TestvfsFd *pNext;               \/* Next handle opened on the same file *\/$/;"	m	struct:TestvfsFd	file:
pNext	src/test_wsd.c	/^  ProcessLocalVar *pNext;$/;"	m	struct:ProcessLocalVar	file:
pNext	src/vdbe.h	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram
pNext	src/vdbeInt.h	/^  AuxData *pNext;                 \/* Next element in list *\/$/;"	m	struct:AuxData
pNext	src/vdbeInt.h	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe
pNext	src/vdbesort.c	/^    SorterRecord *pNext;          \/* Pointer to next record in list *\/$/;"	m	union:SorterRecord::__anon44	file:
pNext	test/fuzzcheck.c	/^  Blob *pNext;            \/* Next in a list *\/$/;"	m	struct:Blob	file:
pNext	test/threadtest3.c	/^  Statement *pNext;               \/* Next statement in linked-list *\/$/;"	m	struct:Statement	file:
pNext	test/threadtest3.c	/^  Thread *pNext;                  \/* Next in this list of threads *\/$/;"	m	struct:Thread	file:
pNext	tsrc/backup.c	/^  sqlite3_backup *pNext;   \/* Next backup associated with source pager *\/$/;"	m	struct:sqlite3_backup	file:
pNext	tsrc/btreeInt.h	/^  BtCursor *pNext;          \/* Forms a linked list of all cursors *\/$/;"	m	struct:BtCursor
pNext	tsrc/btreeInt.h	/^  BtLock *pNext;        \/* Next in BtShared.pLock list *\/$/;"	m	struct:BtLock
pNext	tsrc/btreeInt.h	/^  BtShared *pNext;      \/* Next on a list of sharable BtShared structs *\/$/;"	m	struct:BtShared
pNext	tsrc/btreeInt.h	/^  Btree *pNext;      \/* List of other sharable Btrees from the same db *\/$/;"	m	struct:Btree
pNext	tsrc/fts3_write.c	/^  Fts3DeferredToken *pNext;       \/* Next in list of deferred tokens *\/$/;"	m	struct:Fts3DeferredToken	file:
pNext	tsrc/fts5.c	/^  Fts5Auxdata *pNext;             \/* Next object in linked list *\/$/;"	m	struct:Fts5Auxdata	file:
pNext	tsrc/fts5.c	/^  Fts5Auxiliary *pNext;           \/* Next registered auxiliary function *\/$/;"	m	struct:Fts5Auxiliary	file:
pNext	tsrc/fts5.c	/^  Fts5Cursor *pNext;              \/* Next cursor in Fts5Cursor.pCsr list *\/$/;"	m	struct:Fts5Cursor	file:
pNext	tsrc/fts5.c	/^  Fts5TermsetEntry *pNext;$/;"	m	struct:Fts5TermsetEntry	file:
pNext	tsrc/fts5.c	/^  Fts5TokenizerModule *pNext;     \/* Next registered tokenizer module *\/$/;"	m	struct:Fts5TokenizerModule	file:
pNext	tsrc/malloc.c	/^  struct ScratchFreeslot *pNext;   \/* Next unused scratch buffer *\/$/;"	m	struct:ScratchFreeslot	typeref:struct:ScratchFreeslot::ScratchFreeslot	file:
pNext	tsrc/mem2.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::MemBlockHdr	file:
pNext	tsrc/memjournal.c	/^  FileChunk *pNext;               \/* Next chunk in the journal *\/$/;"	m	struct:FileChunk	file:
pNext	tsrc/os_unix.c	/^  UnixUnusedFd *pNext;      \/* Next unused file descriptor on same file *\/$/;"	m	struct:UnixUnusedFd	file:
pNext	tsrc/os_unix.c	/^  struct vxworksFileId *pNext;  \/* Next in a list of them all *\/$/;"	m	struct:vxworksFileId	typeref:struct:vxworksFileId::vxworksFileId	file:
pNext	tsrc/os_unix.c	/^  unixInodeInfo *pNext;           \/* List of all unixInodeInfo objects *\/$/;"	m	struct:unixInodeInfo	file:
pNext	tsrc/os_unix.c	/^  unixShm *pNext;            \/* Next unixShm with the same unixShmNode *\/$/;"	m	struct:unixShm	file:
pNext	tsrc/os_win.c	/^  winShm *pNext;             \/* Next winShm with the same winShmNode *\/$/;"	m	struct:winShm	file:
pNext	tsrc/os_win.c	/^  winShmNode *pNext;         \/* Next in list of all winShmNode objects *\/$/;"	m	struct:winShmNode	file:
pNext	tsrc/pcache1.c	/^  PgFreeslot *pNext;  \/* Next free slot *\/$/;"	m	struct:PgFreeslot	file:
pNext	tsrc/pcache1.c	/^  PgHdr1 *pNext;                 \/* Next in hash table chain *\/$/;"	m	struct:PgHdr1	file:
pNext	tsrc/rtree.c	/^  RtreeNode *pNext;           \/* Next node in this hash collision chain *\/$/;"	m	struct:RtreeNode	file:
pNext	tsrc/sqlite3.h	/^  sqlite3_vfs *pNext;      \/* Next registered VFS *\/$/;"	m	struct:sqlite3_vfs
pNext	tsrc/sqlite3rbu.c	/^  RbuUpdateStmt *pNext;$/;"	m	struct:RbuUpdateStmt	file:
pNext	tsrc/sqlite3session.c	/^  SessionChange *pNext;           \/* For hash-table collisions *\/$/;"	m	struct:SessionChange	file:
pNext	tsrc/sqlite3session.c	/^  SessionTable *pNext;$/;"	m	struct:SessionTable	file:
pNext	tsrc/sqlite3session.c	/^  sqlite3_session *pNext;         \/* Next session object on same db. *\/$/;"	m	struct:sqlite3_session	file:
pNext	tsrc/sqliteInt.h	/^  AutoincInfo *pNext;   \/* Next info block in a list of them all *\/$/;"	m	struct:AutoincInfo
pNext	tsrc/sqliteInt.h	/^  FuncDef *pNext;      \/* Next function with same name *\/$/;"	m	struct:FuncDef
pNext	tsrc/sqliteInt.h	/^  Index *pNext;            \/* The next index associated with the same table *\/$/;"	m	struct:Index
pNext	tsrc/sqliteInt.h	/^  LookasideSlot *pNext;    \/* Next buffer in the list of free buffers *\/$/;"	m	struct:LookasideSlot
pNext	tsrc/sqliteInt.h	/^  NameContext *pNext;  \/* Next outer name context.  NULL for outermost *\/$/;"	m	struct:NameContext
pNext	tsrc/sqliteInt.h	/^  Savepoint *pNext;                   \/* Parent savepoint (if any) *\/$/;"	m	struct:Savepoint
pNext	tsrc/sqliteInt.h	/^  Select *pNext;         \/* Next select to the left in a compound *\/$/;"	m	struct:Select
pNext	tsrc/sqliteInt.h	/^  Trigger *pNext;         \/* Next trigger associated with the table *\/$/;"	m	struct:Trigger
pNext	tsrc/sqliteInt.h	/^  TriggerPrg *pNext;      \/* Next entry in Parse.pTriggerPrg list *\/$/;"	m	struct:TriggerPrg
pNext	tsrc/sqliteInt.h	/^  TriggerStep *pNext;  \/* Next in the link-list *\/$/;"	m	struct:TriggerStep
pNext	tsrc/sqliteInt.h	/^  VTable *pNext;            \/* Next in linked list (see above) *\/$/;"	m	struct:VTable
pNext	tsrc/tclsqlite.c	/^  IncrblobChannel *pNext;   \/* Linked list of all open incrblob channels *\/$/;"	m	struct:IncrblobChannel	file:
pNext	tsrc/tclsqlite.c	/^  SqlCollate *pNext;    \/* Next function on the list of them all *\/$/;"	m	struct:SqlCollate	file:
pNext	tsrc/tclsqlite.c	/^  SqlFunc *pNext;       \/* Next function on the list of them all *\/$/;"	m	struct:SqlFunc	file:
pNext	tsrc/tclsqlite.c	/^  SqlPreparedStmt *pNext;  \/* Next in linked list *\/$/;"	m	struct:SqlPreparedStmt	file:
pNext	tsrc/vdbe.h	/^  SubProgram *pNext;            \/* Next sub-program already visited *\/$/;"	m	struct:SubProgram
pNext	tsrc/vdbeInt.h	/^  AuxData *pNext;                 \/* Next element in list *\/$/;"	m	struct:AuxData
pNext	tsrc/vdbeInt.h	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe
pNext	tsrc/vdbesort.c	/^    SorterRecord *pNext;          \/* Pointer to next record in list *\/$/;"	m	union:SorterRecord::__anon8	file:
pNextBlocked	sqlite3.c	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3	file:
pNextBlocked	src/sqliteInt.h	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3
pNextBlocked	tsrc/sqliteInt.h	/^  sqlite3 *pNextBlocked;        \/* Next in list of all blocked connections *\/$/;"	m	struct:sqlite3
pNextChunk	sqlite3.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextChunk	src/rowset.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextChunk	tsrc/rowset.c	/^  struct RowSetChunk *pNextChunk;        \/* Next chunk on list of them all *\/$/;"	m	struct:RowSetChunk	typeref:struct:RowSetChunk::RowSetChunk	file:
pNextDocid	ext/fts3/fts3Int.h	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist
pNextDocid	sqlite3.c	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist	file:
pNextDocid	tsrc/fts3Int.h	/^  char *pNextDocid;              \/* Pointer to next docid *\/$/;"	m	struct:Fts3Doclist
pNextFrom	sqlite3.c	/^  FKey *pNextFrom;  \/* Next FKey with the same in pFrom. Next parent of pFrom *\/$/;"	m	struct:FKey	file:
pNextFrom	src/sqliteInt.h	/^  FKey *pNextFrom;  \/* Next FKey with the same in pFrom. Next parent of pFrom *\/$/;"	m	struct:FKey
pNextFrom	tsrc/sqliteInt.h	/^  FKey *pNextFrom;  \/* Next FKey with the same in pFrom. Next parent of pFrom *\/$/;"	m	struct:FKey
pNextId	ext/fts3/fts3Int.h	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor
pNextId	sqlite3.c	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor	file:
pNextId	tsrc/fts3Int.h	/^  char *pNextId;                  \/* Pointer into the body of aDoclist *\/$/;"	m	struct:Fts3Cursor
pNextLeaf	ext/fts5/fts5_index.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLeaf	fts5.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLeaf	sqlite3.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLeaf	tsrc/fts5.c	/^  Fts5Data *pNextLeaf;            \/* Leaf page (iLeafPgno+1) *\/$/;"	m	struct:Fts5SegIter	file:
pNextLoop	sqlite3.c	/^  WhereLoop *pNextLoop; \/* Next WhereLoop object in the WhereClause *\/$/;"	m	struct:WhereLoop	file:
pNextLoop	src/whereInt.h	/^  WhereLoop *pNextLoop; \/* Next WhereLoop object in the WhereClause *\/$/;"	m	struct:WhereLoop
pNextLoop	tsrc/whereInt.h	/^  WhereLoop *pNextLoop; \/* Next WhereLoop object in the WhereClause *\/$/;"	m	struct:WhereLoop
pNextTo	sqlite3.c	/^  FKey *pNextTo;    \/* Next with the same zTo. Next child of zTo. *\/$/;"	m	struct:FKey	file:
pNextTo	src/sqliteInt.h	/^  FKey *pNextTo;    \/* Next with the same zTo. Next child of zTo. *\/$/;"	m	struct:FKey
pNextTo	tsrc/sqliteInt.h	/^  FKey *pNextTo;    \/* Next with the same zTo. Next child of zTo. *\/$/;"	m	struct:FKey
pNextZombie	sqlite3.c	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table	file:
pNextZombie	src/sqliteInt.h	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table
pNextZombie	tsrc/sqliteInt.h	/^  Table *pNextZombie;  \/* Next on the Parse.pZombieTab list *\/$/;"	m	struct:Table
pNode	ext/fts5/fts5_expr.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pNode	fts5.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pNode	sqlite3.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pNode	tsrc/fts5.c	/^  Fts5ExprNode *pNode;            \/* FTS5_STRING node this phrase is part of *\/$/;"	m	struct:Fts5ExprPhrase	file:
pObj	ext/fts5/fts5_tcl.c	/^  Tcl_Obj *pObj;$/;"	m	struct:F5tAuxData	file:
pObj	src/test1.c	/^  Tcl_Obj *pObj;$/;"	m	struct:LogCallback	file:
pOffset	parse.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffset	sqlite3.c	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select	file:
pOffset	sqlite3.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffset	src/sqliteInt.h	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select
pOffset	tsrc/parse.c	/^  Expr *pOffset;   \/* The OFFSET expression.  NULL if there is none *\/$/;"	m	struct:LimitVal	file:
pOffset	tsrc/sqliteInt.h	/^  Expr *pOffset;         \/* OFFSET expression. NULL means not used. *\/$/;"	m	struct:Select
pOffsetList	ext/fts3/fts3_write.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOffsetList	sqlite3.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOffsetList	tsrc/fts3_write.c	/^  char *pOffsetList;$/;"	m	struct:Fts3SegReader	file:
pOldMethod	sqlite3.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOldMethod	src/os_unix.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOldMethod	tsrc/os_unix.c	/^  sqlite3_io_methods const *pOldMethod;     \/* Original I\/O methods for close *\/$/;"	m	struct:proxyLockingContext	file:
pOn	sqlite3.c	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pOn	src/sqliteInt.h	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item
pOn	tsrc/sqliteInt.h	/^    Expr *pOn;        \/* The ON clause of a join *\/$/;"	m	struct:SrcList::SrcList_item
pOrInfo	sqlite3.c	/^    WhereOrInfo *pOrInfo;   \/* Extra information if (eOperator & WO_OR)!=0 *\/$/;"	m	union:WhereTerm::__anon101	file:
pOrInfo	src/whereInt.h	/^    WhereOrInfo *pOrInfo;   \/* Extra information if (eOperator & WO_OR)!=0 *\/$/;"	m	union:WhereTerm::__anon50
pOrInfo	tsrc/whereInt.h	/^    WhereOrInfo *pOrInfo;   \/* Extra information if (eOperator & WO_OR)!=0 *\/$/;"	m	union:WhereTerm::__anon15
pOrPoslist	ext/fts3/fts3Int.h	/^  char *pOrPoslist;$/;"	m	struct:Fts3Phrase
pOrPoslist	sqlite3.c	/^  char *pOrPoslist;$/;"	m	struct:Fts3Phrase	file:
pOrPoslist	tsrc/fts3Int.h	/^  char *pOrPoslist;$/;"	m	struct:Fts3Phrase
pOrSet	sqlite3.c	/^  WhereOrSet *pOrSet;       \/* Record best loops here, if not NULL *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrSet	src/whereInt.h	/^  WhereOrSet *pOrSet;       \/* Record best loops here, if not NULL *\/$/;"	m	struct:WhereLoopBuilder
pOrSet	tsrc/whereInt.h	/^  WhereOrSet *pOrSet;       \/* Record best loops here, if not NULL *\/$/;"	m	struct:WhereLoopBuilder
pOrderBy	sqlite3.c	/^  ExprList *pOrderBy;       \/* ORDER BY clause *\/$/;"	m	struct:WhereLoopBuilder	file:
pOrderBy	sqlite3.c	/^  ExprList *pOrderBy;       \/* The ORDER BY clause or NULL *\/$/;"	m	struct:WhereInfo	file:
pOrderBy	sqlite3.c	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select	file:
pOrderBy	sqlite3.c	/^  ExprList *pOrderBy;   \/* The ORDER BY (or GROUP BY clause) *\/$/;"	m	struct:SortCtx	file:
pOrderBy	sqlite3.c	/^  ExprList *pOrderBy;  \/* Key columns for SRT_Queue and SRT_DistQueue *\/$/;"	m	struct:SelectDest	file:
pOrderBy	src/select.c	/^  ExprList *pOrderBy;   \/* The ORDER BY (or GROUP BY clause) *\/$/;"	m	struct:SortCtx	file:
pOrderBy	src/sqliteInt.h	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select
pOrderBy	src/sqliteInt.h	/^  ExprList *pOrderBy;  \/* Key columns for SRT_Queue and SRT_DistQueue *\/$/;"	m	struct:SelectDest
pOrderBy	src/whereInt.h	/^  ExprList *pOrderBy;       \/* ORDER BY clause *\/$/;"	m	struct:WhereLoopBuilder
pOrderBy	src/whereInt.h	/^  ExprList *pOrderBy;       \/* The ORDER BY clause or NULL *\/$/;"	m	struct:WhereInfo
pOrderBy	tsrc/select.c	/^  ExprList *pOrderBy;   \/* The ORDER BY (or GROUP BY clause) *\/$/;"	m	struct:SortCtx	file:
pOrderBy	tsrc/sqliteInt.h	/^  ExprList *pOrderBy;    \/* The ORDER BY clause *\/$/;"	m	struct:Select
pOrderBy	tsrc/sqliteInt.h	/^  ExprList *pOrderBy;  \/* Key columns for SRT_Queue and SRT_DistQueue *\/$/;"	m	struct:SelectDest
pOrderBy	tsrc/whereInt.h	/^  ExprList *pOrderBy;       \/* ORDER BY clause *\/$/;"	m	struct:WhereLoopBuilder
pOrderBy	tsrc/whereInt.h	/^  ExprList *pOrderBy;       \/* The ORDER BY clause or NULL *\/$/;"	m	struct:WhereInfo
pOrig	src/test6.c	/^  sqlite3_vfs *pOrig;                   \/* Wrapped vfs structure *\/$/;"	m	struct:crashAppData	file:
pOrigVfs	src/test_multiplex.c	/^  sqlite3_vfs *pOrigVfs;$/;"	m	struct:__anon62	file:
pOrigVfs	src/test_quota.c	/^  sqlite3_vfs *pOrigVfs;$/;"	m	struct:__anon67	file:
pOrigWC	sqlite3.c	/^  WhereClause *pOrigWC;      \/* Original, innermost WhereClause *\/$/;"	m	struct:WhereScan	file:
pOrigWC	src/whereInt.h	/^  WhereClause *pOrigWC;      \/* Original, innermost WhereClause *\/$/;"	m	struct:WhereScan
pOrigWC	tsrc/whereInt.h	/^  WhereClause *pOrigWC;      \/* Original, innermost WhereClause *\/$/;"	m	struct:WhereScan
pOut	ext/fts1/fulltext.c	/^  DocList *pOut;$/;"	m	struct:DocListMerge	file:
pOut	ext/fts5/fts5_expr.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	fts5.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	sqlite3.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	sqlite3.c	/^  Mem *pOut;              \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context	file:
pOut	sqlite3.c	/^  void *pOut;                    \/* Result returned by the thread *\/$/;"	m	struct:SQLiteThread	file:
pOut	src/threads.c	/^  void *pOut;                    \/* Result returned by the thread *\/$/;"	m	struct:SQLiteThread	file:
pOut	src/vdbeInt.h	/^  Mem *pOut;              \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context
pOut	tsrc/fts5.c	/^  Fts5Buffer *pOut;               \/* Output poslist *\/$/;"	m	struct:Fts5NearTrimmer	file:
pOut	tsrc/threads.c	/^  void *pOut;                    \/* Result returned by the thread *\/$/;"	m	struct:SQLiteThread	file:
pOut	tsrc/vdbeInt.h	/^  Mem *pOut;              \/* The return value is stored here *\/$/;"	m	struct:sqlite3_context
pOutArg	src/test_vfstrace.c	/^  void *pOutArg;                      \/* First argument to xOut *\/$/;"	m	struct:vfstrace_info	file:
pOuter	sqlite3.c	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause	file:
pOuter	sqlite3.c	/^  With *pOuter;                   \/* Containing WITH clause, or NULL *\/$/;"	m	struct:With	file:
pOuter	src/sqliteInt.h	/^  With *pOuter;                   \/* Containing WITH clause, or NULL *\/$/;"	m	struct:With
pOuter	src/whereInt.h	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause
pOuter	tsrc/sqliteInt.h	/^  With *pOuter;                   \/* Containing WITH clause, or NULL *\/$/;"	m	struct:With
pOuter	tsrc/whereInt.h	/^  WhereClause *pOuter;     \/* Outer conjunction *\/$/;"	m	struct:WhereClause
pPCache	sqlite3.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPCache	src/pager.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPCache	tsrc/pager.c	/^  PCache *pPCache;            \/* Pointer to page cache object *\/$/;"	m	struct:Pager	file:
pPage	sqlite3.c	/^  sqlite3_pcache_page *pPage;    \/* Pcache object page handle *\/$/;"	m	struct:PgHdr	file:
pPage	sqlite3.c	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config	file:
pPage	src/pcache.h	/^  sqlite3_pcache_page *pPage;    \/* Pcache object page handle *\/$/;"	m	struct:PgHdr
pPage	src/sqliteInt.h	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config
pPage	tsrc/pcache.h	/^  sqlite3_pcache_page *pPage;    \/* Pcache object page handle *\/$/;"	m	struct:PgHdr
pPage	tsrc/sqliteInt.h	/^  void *pPage;                      \/* Page cache memory *\/$/;"	m	struct:Sqlite3Config
pPage1	sqlite3.c	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared	file:
pPage1	src/btreeInt.h	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared
pPage1	tsrc/btreeInt.h	/^  MemPage *pPage1;      \/* First page of the database *\/$/;"	m	struct:BtShared
pPager	sqlite3.c	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr	file:
pPager	sqlite3.c	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared	file:
pPager	sqlite3.c	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk	file:
pPager	src/btreeInt.h	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared
pPager	src/btreeInt.h	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk
pPager	src/pcache.h	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr
pPager	tsrc/btreeInt.h	/^  Pager *pPager;        \/* The page cache *\/$/;"	m	struct:BtShared
pPager	tsrc/btreeInt.h	/^  Pager *pPager;    \/* The associated pager.  Also accessible by pBt->pPager *\/$/;"	m	struct:IntegrityCk
pPager	tsrc/pcache.h	/^  Pager *pPager;                 \/* The pager this page is part of *\/$/;"	m	struct:PgHdr
pParent	ext/fts3/fts3Int.h	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr
pParent	ext/fts3/fts3_write.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	ext/rtree/rtree.c	/^  RtreeNode *pParent;         \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	sqlite3.c	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr	file:
pParent	sqlite3.c	/^  RtreeNode *pParent;         \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	sqlite3.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	sqlite3.c	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame	file:
pParent	src/test_onefile.c	/^  sqlite3_vfs *pParent;$/;"	m	struct:fs_vfs_t	file:
pParent	src/test_vfs.c	/^  sqlite3_vfs *pParent;           \/* The VFS to use for file IO *\/$/;"	m	struct:Testvfs	file:
pParent	src/vdbeInt.h	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame
pParent	tsrc/fts3Int.h	/^  Fts3Expr *pParent;         \/* pParent->pLeft==this or pParent->pRight==this *\/$/;"	m	struct:Fts3Expr
pParent	tsrc/fts3_write.c	/^  SegmentNode *pParent;           \/* Parent node (or NULL for root node) *\/$/;"	m	struct:SegmentNode	file:
pParent	tsrc/rtree.c	/^  RtreeNode *pParent;         \/* Parent node *\/$/;"	m	struct:RtreeNode	file:
pParent	tsrc/vdbeInt.h	/^  VdbeFrame *pParent;     \/* Parent of this frame, or NULL if parent is main *\/$/;"	m	struct:VdbeFrame
pParse	sqlite3.c	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker	file:
pParse	sqlite3.c	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext	file:
pParse	sqlite3.c	/^  Parse *pParse;            \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo	file:
pParse	sqlite3.c	/^  Parse *pParse;          \/* Parsing context used to create this Vdbe *\/$/;"	m	struct:Vdbe	file:
pParse	sqlite3.c	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext	file:
pParse	sqlite3.c	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer	file:
pParse	sqlite3.c	/^  Parse *pParse;$/;"	m	struct:ValueNewStat4Ctx	file:
pParse	src/sqliteInt.h	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker
pParse	src/sqliteInt.h	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext
pParse	src/sqliteInt.h	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext
pParse	src/sqliteInt.h	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer
pParse	src/vdbeInt.h	/^  Parse *pParse;          \/* Parsing context used to create this Vdbe *\/$/;"	m	struct:Vdbe
pParse	src/vdbemem.c	/^  Parse *pParse;$/;"	m	struct:ValueNewStat4Ctx	file:
pParse	src/whereInt.h	/^  Parse *pParse;            \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo
pParse	tsrc/sqliteInt.h	/^  Parse *pParse;                            \/* Parser context.  *\/$/;"	m	struct:Walker
pParse	tsrc/sqliteInt.h	/^  Parse *pParse;              \/* The Parse structure *\/$/;"	m	struct:AuthContext
pParse	tsrc/sqliteInt.h	/^  Parse *pParse;       \/* The parser *\/$/;"	m	struct:NameContext
pParse	tsrc/sqliteInt.h	/^  Parse *pParse;      \/* The parsing context.  Error messages written here *\/$/;"	m	struct:DbFixer
pParse	tsrc/vdbeInt.h	/^  Parse *pParse;          \/* Parsing context used to create this Vdbe *\/$/;"	m	struct:Vdbe
pParse	tsrc/vdbemem.c	/^  Parse *pParse;$/;"	m	struct:ValueNewStat4Ctx	file:
pParse	tsrc/whereInt.h	/^  Parse *pParse;            \/* Parsing and code generating context *\/$/;"	m	struct:WhereInfo
pPartIdxWhere	sqlite3.c	/^  Expr *pPartIdxWhere;     \/* WHERE clause for partial indices *\/$/;"	m	struct:Index	file:
pPartIdxWhere	src/sqliteInt.h	/^  Expr *pPartIdxWhere;     \/* WHERE clause for partial indices *\/$/;"	m	struct:Index
pPartIdxWhere	tsrc/sqliteInt.h	/^  Expr *pPartIdxWhere;     \/* WHERE clause for partial indices *\/$/;"	m	struct:Index
pPayload	sqlite3.c	/^  u8 *pPayload;  \/* Pointer to the start of payload *\/$/;"	m	struct:CellInfo	file:
pPayload	src/btreeInt.h	/^  u8 *pPayload;  \/* Pointer to the start of payload *\/$/;"	m	struct:CellInfo
pPayload	tsrc/btreeInt.h	/^  u8 *pPayload;  \/* Pointer to the start of payload *\/$/;"	m	struct:CellInfo
pPg	sqlite3.c	/^  DbPage *pPg;$/;"	m	struct:StatPage	file:
pPg	src/dbstat.c	/^  DbPage *pPg;$/;"	m	struct:StatPage	file:
pPg	tsrc/dbstat.c	/^  DbPage *pPg;$/;"	m	struct:StatPage	file:
pPhrase	ext/fts3/fts3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	ext/fts3/fts3Int.h	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr
pPhrase	ext/fts5/fts5_expr.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPhrase	fts5.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPhrase	sqlite3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	sqlite3.c	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr	file:
pPhrase	sqlite3.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPhrase	tsrc/fts3.c	/^  Fts3Phrase *pPhrase;            \/* The phrase the token belongs to *\/$/;"	m	struct:Fts3TokenAndCost	file:
pPhrase	tsrc/fts3Int.h	/^  Fts3Phrase *pPhrase;       \/* Valid if eType==FTSQUERY_PHRASE *\/$/;"	m	struct:Fts3Expr
pPhrase	tsrc/fts5.c	/^  Fts5ExprPhrase *pPhrase;$/;"	m	struct:TokenCtx	file:
pPoslist	ext/fts5/fts5_main.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPoslist	fts5.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPoslist	sqlite3.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPoslist	tsrc/fts5.c	/^  Fts5Buffer *pPoslist;           \/* Pointer to current poslist *\/$/;"	m	struct:Fts5MatchPhrase	file:
pPreStmt	src/tclsqlite.c	/^  SqlPreparedStmt *pPreStmt;      \/* Current statement *\/$/;"	m	struct:DbEvalContext	file:
pPreStmt	tsrc/tclsqlite.c	/^  SqlPreparedStmt *pPreStmt;      \/* Current statement *\/$/;"	m	struct:DbEvalContext	file:
pPreUpdate	sqlite3.c	/^  PreUpdate *pPreUpdate;        \/* Context for active pre-update callback *\/$/;"	m	struct:sqlite3	file:
pPreUpdate	src/sqliteInt.h	/^  PreUpdate *pPreUpdate;        \/* Context for active pre-update callback *\/$/;"	m	struct:sqlite3
pPreUpdate	tsrc/sqliteInt.h	/^  PreUpdate *pPreUpdate;        \/* Context for active pre-update callback *\/$/;"	m	struct:sqlite3
pPreUpdateArg	sqlite3.c	/^  void *pPreUpdateArg;          \/* First argument to xPreUpdateCallback *\/$/;"	m	struct:sqlite3	file:
pPreUpdateArg	src/sqliteInt.h	/^  void *pPreUpdateArg;          \/* First argument to xPreUpdateCallback *\/$/;"	m	struct:sqlite3
pPreUpdateArg	tsrc/sqliteInt.h	/^  void *pPreUpdateArg;          \/* First argument to xPreUpdateCallback *\/$/;"	m	struct:sqlite3
pPreUpdateHook	src/tclsqlite.c	/^  Tcl_Obj *pPreUpdateHook;   \/* Pre-update hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pPreUpdateHook	tsrc/tclsqlite.c	/^  Tcl_Obj *pPreUpdateHook;   \/* Pre-update hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pPrev	sqlite3.c	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree	file:
pPrev	sqlite3.c	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe	file:
pPrev	sqlite3.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	sqlite3.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrev	src/btreeInt.h	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree
pPrev	src/mem2.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	src/os_unix.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrev	src/tclsqlite.c	/^  IncrblobChannel *pPrev;   \/* Linked list of all open incrblob channels *\/$/;"	m	struct:IncrblobChannel	file:
pPrev	src/tclsqlite.c	/^  SqlPreparedStmt *pPrev;  \/* Previous on the list *\/$/;"	m	struct:SqlPreparedStmt	file:
pPrev	src/test_multiplex.c	/^  multiplexGroup *pNext, *pPrev;   \/* Doubly linked list of all group objects *\/$/;"	m	struct:multiplexGroup	file:
pPrev	src/test_server.c	/^  SqlMessage *pPrev;           \/* Previous message in the queue *\/$/;"	m	struct:SqlMessage	file:
pPrev	src/vdbeInt.h	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe
pPrev	tsrc/btreeInt.h	/^  Btree *pPrev;      \/* Back pointer of the same list *\/$/;"	m	struct:Btree
pPrev	tsrc/mem2.c	/^  struct MemBlockHdr *pNext, *pPrev;  \/* Linked list of all unfreed memory *\/$/;"	m	struct:MemBlockHdr	typeref:struct:MemBlockHdr::	file:
pPrev	tsrc/os_unix.c	/^  unixInodeInfo *pPrev;           \/*    .... doubly linked *\/$/;"	m	struct:unixInodeInfo	file:
pPrev	tsrc/tclsqlite.c	/^  IncrblobChannel *pPrev;   \/* Linked list of all open incrblob channels *\/$/;"	m	struct:IncrblobChannel	file:
pPrev	tsrc/tclsqlite.c	/^  SqlPreparedStmt *pPrev;  \/* Previous on the list *\/$/;"	m	struct:SqlPreparedStmt	file:
pPrev	tsrc/vdbeInt.h	/^  Vdbe *pPrev,*pNext;     \/* Linked list of VDBEs with the same Vdbe.db *\/$/;"	m	struct:Vdbe
pPrevTo	sqlite3.c	/^  FKey *pPrevTo;    \/* Previous with the same zTo *\/$/;"	m	struct:FKey	file:
pPrevTo	src/sqliteInt.h	/^  FKey *pPrevTo;    \/* Previous with the same zTo *\/$/;"	m	struct:FKey
pPrevTo	tsrc/sqliteInt.h	/^  FKey *pPrevTo;    \/* Previous with the same zTo *\/$/;"	m	struct:FKey
pPrior	sqlite3.c	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select	file:
pPrior	sqlite3.c	/^  VtabCtx *pPrior;    \/* Parent context (if any) *\/$/;"	m	struct:VtabCtx	file:
pPrior	src/sqliteInt.h	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select
pPrior	src/vtab.c	/^  VtabCtx *pPrior;    \/* Parent context (if any) *\/$/;"	m	struct:VtabCtx	file:
pPrior	tsrc/sqliteInt.h	/^  Select *pPrior;        \/* Prior select in a compound select statement *\/$/;"	m	struct:Select
pPrior	tsrc/vtab.c	/^  VtabCtx *pPrior;    \/* Parent context (if any) *\/$/;"	m	struct:VtabCtx	file:
pProfileArg	sqlite3.c	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3	file:
pProfileArg	src/sqliteInt.h	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3
pProfileArg	tsrc/sqliteInt.h	/^  void *pProfileArg;                        \/* Argument to profile function *\/$/;"	m	struct:sqlite3
pProgram	sqlite3.c	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::p4union	file:
pProgram	sqlite3.c	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe	file:
pProgram	sqlite3.c	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg	file:
pProgram	src/sqliteInt.h	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg
pProgram	src/vdbe.h	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::p4union
pProgram	src/vdbeInt.h	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe
pProgram	tsrc/sqliteInt.h	/^  SubProgram *pProgram;   \/* Program implementing pTrigger\/orconf *\/$/;"	m	struct:TriggerPrg
pProgram	tsrc/vdbe.h	/^    SubProgram *pProgram;  \/* Used when p4type is P4_SUBPROGRAM *\/$/;"	m	union:VdbeOp::p4union
pProgram	tsrc/vdbeInt.h	/^  SubProgram *pProgram;   \/* Linked list of all sub-programs used by VM *\/$/;"	m	struct:Vdbe
pProgressArg	sqlite3.c	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3	file:
pProgressArg	src/sqliteInt.h	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3
pProgressArg	tsrc/sqliteInt.h	/^  void *pProgressArg;           \/* Argument to the progress callback *\/$/;"	m	struct:sqlite3
pPtr	ext/fts5/fts5_main.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pPtr	fts5.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pPtr	sqlite3.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pPtr	tsrc/fts5.c	/^  void *pPtr;                     \/* Pointer value *\/$/;"	m	struct:Fts5Auxdata	file:
pQueueFirst	ext/async/sqlite3async.c	/^  AsyncWrite *pQueueFirst;     \/* Next write operation to be processed *\/$/;"	m	struct:TestAsyncStaticData	file:
pQueueHead	src/test_server.c	/^  SqlMessage *pQueueHead;       \/* Head of the message queue *\/$/;"	m	struct:ServerState	file:
pQueueLast	ext/async/sqlite3async.c	/^  AsyncWrite *pQueueLast;      \/* Last write operation on the list *\/$/;"	m	struct:TestAsyncStaticData	file:
pQueueTail	src/test_server.c	/^  SqlMessage *pQueueTail;       \/* Tail of the message queue *\/$/;"	m	struct:ServerState	file:
pRank	ext/fts5/fts5_main.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRank	fts5.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRank	sqlite3.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRank	tsrc/fts5.c	/^  Fts5Auxiliary *pRank;           \/* Rank callback (or NULL) *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	ext/fts5/fts5_main.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	fts5.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	sqlite3.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRankArgStmt	tsrc/fts5.c	/^  sqlite3_stmt *pRankArgStmt;     \/* Origin of objects in apRankArg[] *\/$/;"	m	struct:Fts5Cursor	file:
pRbu	ext/rbu/sqlite3rbu.c	/^  sqlite3rbu *pRbu;               \/* Pointer to rbu object (rbu target only) *\/$/;"	m	struct:rbu_file	file:
pRbu	sqlite3.c	/^  sqlite3rbu *pRbu;               \/* Pointer to rbu object (rbu target only) *\/$/;"	m	struct:rbu_file	file:
pRbu	tsrc/sqlite3rbu.c	/^  sqlite3rbu *pRbu;               \/* Pointer to rbu object (rbu target only) *\/$/;"	m	struct:rbu_file	file:
pRbuFd	ext/rbu/sqlite3rbu.c	/^  rbu_file *pRbuFd;               \/* Fd for main db of dbRbu *\/$/;"	m	struct:sqlite3rbu	file:
pRbuFd	sqlite3.c	/^  rbu_file *pRbuFd;               \/* Fd for main db of dbRbu *\/$/;"	m	struct:sqlite3rbu	file:
pRbuFd	tsrc/sqlite3rbu.c	/^  rbu_file *pRbuFd;               \/* Fd for main db of dbRbu *\/$/;"	m	struct:sqlite3rbu	file:
pRbuUpdate	ext/rbu/sqlite3rbu.c	/^  RbuUpdateStmt *pRbuUpdate;$/;"	m	struct:RbuObjIter	file:
pRbuUpdate	sqlite3.c	/^  RbuUpdateStmt *pRbuUpdate;$/;"	m	struct:RbuObjIter	file:
pRbuUpdate	tsrc/sqlite3rbu.c	/^  RbuUpdateStmt *pRbuUpdate;$/;"	m	struct:RbuObjIter	file:
pRbuVfs	ext/rbu/sqlite3rbu.c	/^  rbu_vfs *pRbuVfs;               \/* Pointer to the rbu_vfs object *\/$/;"	m	struct:rbu_file	file:
pRbuVfs	sqlite3.c	/^  rbu_vfs *pRbuVfs;               \/* Pointer to the rbu_vfs object *\/$/;"	m	struct:rbu_file	file:
pRbuVfs	tsrc/sqlite3rbu.c	/^  rbu_vfs *pRbuVfs;               \/* Pointer to the rbu_vfs object *\/$/;"	m	struct:rbu_file	file:
pRead	ext/fts3/fts3_snippet.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pRead	sqlite3.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pRead	tsrc/fts3_snippet.c	/^  char *pRead;                    \/* Cursor used to iterate through aDoclist *\/$/;"	m	struct:LcsIterator	file:
pReadNode	ext/rtree/rtree.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadNode	sqlite3.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadNode	tsrc/rtree.c	/^  sqlite3_stmt *pReadNode;$/;"	m	struct:Rtree	file:
pReadParent	ext/rtree/rtree.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadParent	sqlite3.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadParent	tsrc/rtree.c	/^  sqlite3_stmt *pReadParent;$/;"	m	struct:Rtree	file:
pReadRowid	ext/rtree/rtree.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReadRowid	sqlite3.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReadRowid	tsrc/rtree.c	/^  sqlite3_stmt *pReadRowid;$/;"	m	struct:Rtree	file:
pReader	ext/fts2/fts2.c	/^  DLReader *pReader;$/;"	m	struct:OrderedDLReader	file:
pReader	ext/fts5/fts5_index.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReader	fts5.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReader	sqlite3.c	/^  PmaReader *pReader;             \/* Readr data from here after Rewind() *\/$/;"	m	struct:VdbeSorter	file:
pReader	sqlite3.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReader	src/vdbesort.c	/^  PmaReader *pReader;             \/* Readr data from here after Rewind() *\/$/;"	m	struct:VdbeSorter	file:
pReader	tsrc/fts2.c	/^  DLReader *pReader;$/;"	m	struct:OrderedDLReader	file:
pReader	tsrc/fts5.c	/^  sqlite3_blob *pReader;          \/* RO incr-blob open on %_data table *\/$/;"	m	struct:Fts5Index	file:
pReader	tsrc/vdbesort.c	/^  PmaReader *pReader;             \/* Readr data from here after Rewind() *\/$/;"	m	struct:VdbeSorter	file:
pReal	ext/misc/vfslog.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:VLogFile	file:
pReal	ext/misc/vfsstat.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:VStatFile	file:
pReal	ext/rbu/sqlite3rbu.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:rbu_file	file:
pReal	sqlite3.c	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::p4union	file:
pReal	sqlite3.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:rbu_file	file:
pReal	src/test_devsym.c	/^  sqlite3_file *pReal;$/;"	m	struct:devsym_file	file:
pReal	src/test_journal.c	/^  sqlite3_file *pReal;     \/* The file handle for the underlying vfs *\/$/;"	m	struct:jt_file	file:
pReal	src/test_mutex.c	/^  sqlite3_mutex *pReal;$/;"	m	struct:sqlite3_mutex	file:
pReal	src/test_onefile.c	/^  fs_real_file *pReal;$/;"	m	struct:fs_file	file:
pReal	src/test_osinst.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:VfslogFile	file:
pReal	src/test_vfs.c	/^  sqlite3_file *pReal;            \/* The real, underlying file descriptor *\/$/;"	m	struct:TestvfsFd	file:
pReal	src/test_vfstrace.c	/^  sqlite3_file *pReal;      \/* The real underlying file *\/$/;"	m	struct:vfstrace_file	file:
pReal	src/vdbe.h	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::p4union
pReal	tsrc/sqlite3rbu.c	/^  sqlite3_file *pReal;            \/* Underlying file handle *\/$/;"	m	struct:rbu_file	file:
pReal	tsrc/vdbe.h	/^    double *pReal;         \/* Used when p4type is P4_REAL *\/$/;"	m	union:VdbeOp::p4union
pRealFile	src/test6.c	/^  sqlite3_file *pRealFile;             \/* Underlying "real" file handle *\/$/;"	m	struct:CrashFile	file:
pRealVfs	ext/rbu/sqlite3rbu.c	/^  sqlite3_vfs *pRealVfs;          \/* Underlying VFS *\/$/;"	m	struct:rbu_vfs	file:
pRealVfs	sqlite3.c	/^  sqlite3_vfs *pRealVfs;          \/* Underlying VFS *\/$/;"	m	struct:rbu_vfs	file:
pRealVfs	tsrc/sqlite3rbu.c	/^  sqlite3_vfs *pRealVfs;          \/* Underlying VFS *\/$/;"	m	struct:rbu_vfs	file:
pRec	sqlite3.c	/^  UnpackedRecord *pRec;     \/* Probe for stat4 (if required) *\/$/;"	m	struct:WhereLoopBuilder	file:
pRec	src/whereInt.h	/^  UnpackedRecord *pRec;     \/* Probe for stat4 (if required) *\/$/;"	m	struct:WhereLoopBuilder
pRec	tsrc/whereInt.h	/^  UnpackedRecord *pRec;     \/* Probe for stat4 (if required) *\/$/;"	m	struct:WhereLoopBuilder
pRef	sqlite3.c	/^  MemPage *pRef;          \/* Reference page *\/$/;"	m	struct:CellArray	file:
pRef	src/btree.c	/^  MemPage *pRef;          \/* Reference page *\/$/;"	m	struct:CellArray	file:
pRef	tsrc/btree.c	/^  MemPage *pRef;          \/* Reference page *\/$/;"	m	struct:CellArray	file:
pReprepare	sqlite3.c	/^  Vdbe *pReprepare;         \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse	file:
pReprepare	src/sqliteInt.h	/^  Vdbe *pReprepare;         \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse
pReprepare	tsrc/sqliteInt.h	/^  Vdbe *pReprepare;         \/* VM being reprepared (sqlite3Reprepare()) *\/$/;"	m	struct:Parse
pResult	sqlite3.c	/^  void *pResult;           \/* Result of xTask *\/$/;"	m	struct:SQLiteThread	file:
pResult	src/threads.c	/^  void *pResult;           \/* Result of xTask *\/$/;"	m	struct:SQLiteThread	file:
pResult	tsrc/threads.c	/^  void *pResult;           \/* Result of xTask *\/$/;"	m	struct:SQLiteThread	file:
pResultSet	sqlite3.c	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe	file:
pResultSet	src/vdbeInt.h	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe
pResultSet	tsrc/vdbeInt.h	/^  Mem *pResultSet;        \/* Pointer to an array of results *\/$/;"	m	struct:Vdbe
pRet	ext/fts5/fts5_tcl.c	/^  Tcl_Obj *pRet;$/;"	m	struct:F5tTokenizeCtx	file:
pRight	ext/fts3/fts3Int.h	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr
pRight	ext/fts3/fts3_write.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	sqlite3.c	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr	file:
pRight	sqlite3.c	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr	file:
pRight	sqlite3.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	sqlite3.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRight	src/rowset.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRight	src/sqliteInt.h	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr
pRight	tsrc/fts3Int.h	/^  Fts3Expr *pRight;          \/* Right operand *\/$/;"	m	struct:Fts3Expr
pRight	tsrc/fts3_write.c	/^  SegmentNode *pRight;            \/* Pointer to right-sibling *\/$/;"	m	struct:SegmentNode	file:
pRight	tsrc/rowset.c	/^  struct RowSetEntry *pRight;   \/* Right subtree (larger entries) or list *\/$/;"	m	struct:RowSetEntry	typeref:struct:RowSetEntry::RowSetEntry	file:
pRight	tsrc/sqliteInt.h	/^  Expr *pRight;          \/* Right subnode *\/$/;"	m	struct:Expr
pRollbackArg	sqlite3.c	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/$/;"	m	struct:sqlite3	file:
pRollbackArg	src/sqliteInt.h	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/$/;"	m	struct:sqlite3
pRollbackArg	tsrc/sqliteInt.h	/^  void *pRollbackArg;               \/* Argument to xRollbackCallback() *\/$/;"	m	struct:sqlite3
pRollbackHook	src/tclsqlite.c	/^  Tcl_Obj *pRollbackHook;    \/* Rollback hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pRollbackHook	tsrc/tclsqlite.c	/^  Tcl_Obj *pRollbackHook;    \/* Rollback hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pRoot	ext/fts3/fts3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRoot	ext/fts5/fts5_expr.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRoot	fts5.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRoot	sqlite3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRoot	sqlite3.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRoot	tsrc/fts3.c	/^  Fts3Expr *pRoot;                \/* Root of NEAR\/AND cluster *\/$/;"	m	struct:Fts3TokenAndCost	file:
pRoot	tsrc/fts5.c	/^  Fts5ExprNode *pRoot;$/;"	m	struct:Fts5Expr	file:
pRootVfs	src/test_vfstrace.c	/^  sqlite3_vfs *pRootVfs;              \/* The underlying real VFS *\/$/;"	m	struct:vfstrace_info	file:
pRowSet	sqlite3.c	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::MemValue	file:
pRowSet	src/vdbeInt.h	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::MemValue
pRowSet	tsrc/vdbeInt.h	/^    RowSet *pRowSet;    \/* Used only when flags==MEM_RowSet *\/$/;"	m	union:Mem::MemValue
pRule	ext/misc/amatch.c	/^  amatch_rule *pRule;        \/* All active rules in this amatch *\/$/;"	m	struct:amatch_vtab	file:
pRule	ext/misc/fuzzer.c	/^  const fuzzer_rule *pRule;  \/* Current rule to apply *\/$/;"	m	struct:fuzzer_stem	file:
pRule	ext/misc/fuzzer.c	/^  fuzzer_rule *pRule;        \/* All active rules in this fuzzer *\/$/;"	m	struct:fuzzer_vtab	file:
pSavepoint	sqlite3.c	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3	file:
pSavepoint	src/sqliteInt.h	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3
pSavepoint	tsrc/sqliteInt.h	/^  Savepoint *pSavepoint;        \/* List of active savepoints *\/$/;"	m	struct:sqlite3
pScan	ext/fts5/fts5_hash.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScan	fts5.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScan	sqlite3.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScan	tsrc/fts5.c	/^  Fts5HashEntry *pScan;           \/* Current ordered scan item *\/$/;"	m	struct:Fts5Hash	file:
pScanNext	ext/fts5/fts5_hash.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pScanNext	fts5.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pScanNext	sqlite3.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pScanNext	tsrc/fts5.c	/^  Fts5HashEntry *pScanNext;       \/* Next entry in sorted order *\/$/;"	m	struct:Fts5HashEntry	file:
pSchema	sqlite3.c	/^    Schema *pSchema;  \/* Schema to which this item is fixed *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSchema	sqlite3.c	/^  Schema *pSchema;         \/* Schema containing this index *\/$/;"	m	struct:Index	file:
pSchema	sqlite3.c	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger	file:
pSchema	sqlite3.c	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db	file:
pSchema	sqlite3.c	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table	file:
pSchema	sqlite3.c	/^  Schema *pSchema;    \/* Fix items to this schema *\/$/;"	m	struct:DbFixer	file:
pSchema	sqlite3.c	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared	file:
pSchema	src/btreeInt.h	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared
pSchema	src/sqliteInt.h	/^    Schema *pSchema;  \/* Schema to which this item is fixed *\/$/;"	m	struct:SrcList::SrcList_item
pSchema	src/sqliteInt.h	/^  Schema *pSchema;         \/* Schema containing this index *\/$/;"	m	struct:Index
pSchema	src/sqliteInt.h	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger
pSchema	src/sqliteInt.h	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db
pSchema	src/sqliteInt.h	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table
pSchema	src/sqliteInt.h	/^  Schema *pSchema;    \/* Fix items to this schema *\/$/;"	m	struct:DbFixer
pSchema	tsrc/btreeInt.h	/^  void *pSchema;        \/* Pointer to space allocated by sqlite3BtreeSchema() *\/$/;"	m	struct:BtShared
pSchema	tsrc/sqliteInt.h	/^    Schema *pSchema;  \/* Schema to which this item is fixed *\/$/;"	m	struct:SrcList::SrcList_item
pSchema	tsrc/sqliteInt.h	/^  Schema *pSchema;         \/* Schema containing this index *\/$/;"	m	struct:Index
pSchema	tsrc/sqliteInt.h	/^  Schema *pSchema;        \/* Schema containing the trigger *\/$/;"	m	struct:Trigger
pSchema	tsrc/sqliteInt.h	/^  Schema *pSchema;     \/* Pointer to database schema (possibly shared) *\/$/;"	m	struct:Db
pSchema	tsrc/sqliteInt.h	/^  Schema *pSchema;     \/* Schema that contains this table *\/$/;"	m	struct:Table
pSchema	tsrc/sqliteInt.h	/^  Schema *pSchema;    \/* Fix items to this schema *\/$/;"	m	struct:DbFixer
pScopyFrom	sqlite3.c	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem	file:
pScopyFrom	src/vdbeInt.h	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem
pScopyFrom	tsrc/vdbeInt.h	/^  Mem *pScopyFrom;    \/* This Mem is a shallow copy of pScopyFrom *\/$/;"	m	struct:Mem
pScratch	sqlite3.c	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config	file:
pScratch	src/sqliteInt.h	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config
pScratch	tsrc/sqliteInt.h	/^  void *pScratch;                   \/* Scratch memory *\/$/;"	m	struct:Sqlite3Config
pScratchEnd	sqlite3.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchEnd	src/malloc.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchEnd	tsrc/malloc.c	/^  void *pScratchEnd;$/;"	m	struct:Mem0Global	file:
pScratchFree	sqlite3.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pScratchFree	src/malloc.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pScratchFree	tsrc/malloc.c	/^  ScratchFreeslot *pScratchFree;$/;"	m	struct:Mem0Global	file:
pScript	ext/fts5/fts5_tcl.c	/^  Tcl_Obj *pScript;$/;"	m	struct:F5tFunction	file:
pScript	ext/fts5/fts5_tcl.c	/^  Tcl_Obj *pScript;$/;"	m	struct:F5tTokenizerInstance	file:
pScript	ext/fts5/fts5_tcl.c	/^  Tcl_Obj *pScript;$/;"	m	struct:F5tTokenizerModule	file:
pScript	src/tclsqlite.c	/^  Tcl_Obj *pScript;     \/* The Tcl_Obj representation of the script *\/$/;"	m	struct:SqlFunc	file:
pScript	src/test_quota.c	/^  Tcl_Obj *pScript;      \/* Script to be run *\/$/;"	m	struct:TclQuotaCallback	file:
pScript	src/test_superlock.c	/^  Tcl_Obj *pScript;$/;"	m	struct:InterpAndScript	file:
pScript	src/test_vfs.c	/^  Tcl_Obj *pScript;               \/* Script to execute *\/$/;"	m	struct:Testvfs	file:
pScript	tsrc/tclsqlite.c	/^  Tcl_Obj *pScript;     \/* The Tcl_Obj representation of the script *\/$/;"	m	struct:SqlFunc	file:
pSeg	ext/fts5/fts5_index.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSeg	fts5.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSeg	sqlite3.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSeg	tsrc/fts5.c	/^  Fts5StructureSegment *pSeg;     \/* Segment to iterate through *\/$/;"	m	struct:Fts5SegIter	file:
pSegcsr	ext/fts3/fts3Int.h	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken
pSegcsr	sqlite3.c	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken	file:
pSegcsr	tsrc/fts3Int.h	/^  Fts3MultiSegReader *pSegcsr;    \/* Segment-reader for this token *\/$/;"	m	struct:Fts3PhraseToken
pSegments	ext/fts3/fts3Int.h	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table
pSegments	sqlite3.c	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table	file:
pSegments	tsrc/fts3Int.h	/^  sqlite3_blob *pSegments;        \/* Blob handle open on %_segments table *\/$/;"	m	struct:Fts3Table
pSelect	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pSelect;          \/* Source data *\/$/;"	m	struct:RbuObjIter	file:
pSelect	ext/session/sqlite3session.c	/^  sqlite3_stmt *pSelect;          \/* SELECT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pSelect	sqlite3.c	/^    Select *pSelect;                \/* The definition of this CTE *\/$/;"	m	struct:With::Cte	file:
pSelect	sqlite3.c	/^    Select *pSelect;     \/* EP_xIsSelect and op = IN, EXISTS, SELECT *\/$/;"	m	union:Expr::__anon81	file:
pSelect	sqlite3.c	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item	file:
pSelect	sqlite3.c	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table	file:
pSelect	sqlite3.c	/^  Select *pSelect;     \/* SELECT statement or RHS of INSERT INTO SELECT ... *\/$/;"	m	struct:TriggerStep	file:
pSelect	sqlite3.c	/^  sqlite3_stmt *pSelect;          \/* SELECT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pSelect	sqlite3.c	/^  sqlite3_stmt *pSelect;          \/* Source data *\/$/;"	m	struct:RbuObjIter	file:
pSelect	src/sqliteInt.h	/^    Select *pSelect;                \/* The definition of this CTE *\/$/;"	m	struct:With::Cte
pSelect	src/sqliteInt.h	/^    Select *pSelect;     \/* EP_xIsSelect and op = IN, EXISTS, SELECT *\/$/;"	m	union:Expr::__anon55
pSelect	src/sqliteInt.h	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item
pSelect	src/sqliteInt.h	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table
pSelect	src/sqliteInt.h	/^  Select *pSelect;     \/* SELECT statement or RHS of INSERT INTO SELECT ... *\/$/;"	m	struct:TriggerStep
pSelect	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pSelect;          \/* Source data *\/$/;"	m	struct:RbuObjIter	file:
pSelect	tsrc/sqlite3session.c	/^  sqlite3_stmt *pSelect;          \/* SELECT statement *\/$/;"	m	struct:SessionApplyCtx	file:
pSelect	tsrc/sqliteInt.h	/^    Select *pSelect;                \/* The definition of this CTE *\/$/;"	m	struct:With::Cte
pSelect	tsrc/sqliteInt.h	/^    Select *pSelect;     \/* EP_xIsSelect and op = IN, EXISTS, SELECT *\/$/;"	m	union:Expr::__anon23
pSelect	tsrc/sqliteInt.h	/^    Select *pSelect;  \/* A SELECT statement used in place of a table name *\/$/;"	m	struct:SrcList::SrcList_item
pSelect	tsrc/sqliteInt.h	/^  Select *pSelect;     \/* NULL for tables.  Points to definition if a view. *\/$/;"	m	struct:Table
pSelect	tsrc/sqliteInt.h	/^  Select *pSelect;     \/* SELECT statement or RHS of INSERT INTO SELECT ... *\/$/;"	m	struct:TriggerStep
pSem	sqlite3.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSem	src/os_unix.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSem	tsrc/os_unix.c	/^  sem_t *pSem;                    \/* Named POSIX semaphore *\/$/;"	m	struct:unixInodeInfo	file:
pSeqTab	sqlite3.c	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema	file:
pSeqTab	src/sqliteInt.h	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema
pSeqTab	tsrc/sqliteInt.h	/^  Table *pSeqTab;      \/* The sqlite_sequence table used by AUTOINCREMENT *\/$/;"	m	struct:Schema
pSession	ext/session/test_session.c	/^  sqlite3_session *pSession;$/;"	m	struct:TestSession	file:
pShm	sqlite3.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	sqlite3.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShm	src/os_unix.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	src/os_win.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShm	src/test_vfs.c	/^  TestvfsBuffer *pShm;            \/* Shared memory buffer *\/$/;"	m	struct:TestvfsFd	file:
pShm	tsrc/os_unix.c	/^  unixShm *pShm;                      \/* Shared memory segment information *\/$/;"	m	struct:unixFile	file:
pShm	tsrc/os_win.c	/^  winShm *pShm;           \/* Instance of shared memory on this file *\/$/;"	m	struct:winFile	file:
pShmId	src/test_vfs.c	/^  Tcl_Obj *pShmId;                \/* Shared memory id for Tcl callbacks *\/$/;"	m	struct:TestvfsFd	file:
pShmNode	sqlite3.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	sqlite3.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	sqlite3.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pShmNode	src/os_unix.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	src/os_unix.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	src/os_win.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pShmNode	tsrc/os_unix.c	/^  unixShmNode *pShmNode;          \/* Shared memory associated with this inode *\/$/;"	m	struct:unixInodeInfo	file:
pShmNode	tsrc/os_unix.c	/^  unixShmNode *pShmNode;     \/* The underlying unixShmNode object *\/$/;"	m	struct:unixShm	file:
pShmNode	tsrc/os_win.c	/^  winShmNode *pShmNode;      \/* The underlying winShmNode object *\/$/;"	m	struct:winShm	file:
pSnapshot	sqlite3.c	/^  WalIndexHdr *pSnapshot;    \/* Start transaction here if not NULL *\/$/;"	m	struct:Wal	file:
pSnapshot	src/wal.c	/^  WalIndexHdr *pSnapshot;    \/* Start transaction here if not NULL *\/$/;"	m	struct:Wal	file:
pSnapshot	tsrc/wal.c	/^  WalIndexHdr *pSnapshot;    \/* Start transaction here if not NULL *\/$/;"	m	struct:Wal	file:
pSortCsr	ext/fts5/fts5_main.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSortCsr	fts5.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSortCsr	sqlite3.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSortCsr	tsrc/fts5.c	/^  Fts5Cursor *pSortCsr;           \/* Sort data from this cursor *\/$/;"	m	struct:Fts5Table	file:
pSorter	ext/fts5/fts5_main.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	fts5.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	sqlite3.c	/^    VdbeSorter *pSorter;        \/* CURTYPE_SORTER. Sorter object *\/$/;"	m	union:VdbeCursor::__anon88	file:
pSorter	sqlite3.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	sqlite3.c	/^  VdbeSorter *pSorter;            \/* Sorter that owns this sub-task *\/$/;"	m	struct:SortSubtask	file:
pSorter	src/vdbeInt.h	/^    VdbeSorter *pSorter;        \/* CURTYPE_SORTER. Sorter object *\/$/;"	m	union:VdbeCursor::__anon43
pSorter	src/vdbesort.c	/^  VdbeSorter *pSorter;            \/* Sorter that owns this sub-task *\/$/;"	m	struct:SortSubtask	file:
pSorter	tsrc/fts5.c	/^  Fts5Sorter *pSorter;            \/* Sorter for "ORDER BY rank" queries *\/$/;"	m	struct:Fts5Cursor	file:
pSorter	tsrc/vdbeInt.h	/^    VdbeSorter *pSorter;        \/* CURTYPE_SORTER. Sorter object *\/$/;"	m	union:VdbeCursor::__anon7
pSorter	tsrc/vdbesort.c	/^  VdbeSorter *pSorter;            \/* Sorter that owns this sub-task *\/$/;"	m	struct:SortSubtask	file:
pSpace	sqlite3.c	/^  u8 *pSpace;          \/* Available memory *\/$/;"	m	struct:ReusableSpace	file:
pSpace	src/vdbeaux.c	/^  u8 *pSpace;          \/* Available memory *\/$/;"	m	struct:ReusableSpace	file:
pSpace	tsrc/vdbeaux.c	/^  u8 *pSpace;          \/* Available memory *\/$/;"	m	struct:ReusableSpace	file:
pSql	src/tclsqlite.c	/^  Tcl_Obj *pSql;                  \/* Object holding string zSql *\/$/;"	m	struct:DbEvalContext	file:
pSql	tsrc/tclsqlite.c	/^  Tcl_Obj *pSql;                  \/* Object holding string zSql *\/$/;"	m	struct:DbEvalContext	file:
pSqllogArg	sqlite3.c	/^  void *pSqllogArg;$/;"	m	struct:Sqlite3Config	file:
pSqllogArg	src/sqliteInt.h	/^  void *pSqllogArg;$/;"	m	struct:Sqlite3Config
pSqllogArg	tsrc/sqliteInt.h	/^  void *pSqllogArg;$/;"	m	struct:Sqlite3Config
pSrc	ext/misc/scrub.c	/^  sqlite3_file *pSrc;      \/* Source file handle *\/$/;"	m	struct:ScrubState	file:
pSrc	sqlite3.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	sqlite3.c	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select	file:
pSrc	sqlite3.c	/^  SrcList *pSrc;   \/* One particular FROM clause in a nested query *\/$/;"	m	struct:SrcCount	file:
pSrc	src/backup.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	src/expr.c	/^  SrcList *pSrc;   \/* One particular FROM clause in a nested query *\/$/;"	m	struct:SrcCount	file:
pSrc	src/sqliteInt.h	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select
pSrc	tsrc/backup.c	/^  Btree *pSrc;             \/* Source b-tree file *\/$/;"	m	struct:sqlite3_backup	file:
pSrc	tsrc/expr.c	/^  SrcList *pSrc;   \/* One particular FROM clause in a nested query *\/$/;"	m	struct:SrcCount	file:
pSrc	tsrc/sqliteInt.h	/^  SrcList *pSrc;         \/* The FROM clause *\/$/;"	m	struct:Select
pSrcCount	sqlite3.c	/^    struct SrcCount *pSrcCount;                \/* Counting column references *\/$/;"	m	union:Walker::__anon87	typeref:struct:Walker::__anon87::SrcCount	file:
pSrcCount	src/sqliteInt.h	/^    struct SrcCount *pSrcCount;                \/* Counting column references *\/$/;"	m	union:Walker::__anon61	typeref:struct:Walker::__anon61::SrcCount
pSrcCount	tsrc/sqliteInt.h	/^    struct SrcCount *pSrcCount;                \/* Counting column references *\/$/;"	m	union:Walker::__anon29	typeref:struct:Walker::__anon29::SrcCount
pSrcDb	sqlite3.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcDb	src/backup.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcDb	tsrc/backup.c	/^  sqlite3* pSrcDb;         \/* Source database handle *\/$/;"	m	struct:sqlite3_backup	file:
pSrcList	sqlite3.c	/^    SrcList *pSrcList;                         \/* FROM clause *\/$/;"	m	union:Walker::__anon87	file:
pSrcList	sqlite3.c	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext	file:
pSrcList	src/sqliteInt.h	/^    SrcList *pSrcList;                         \/* FROM clause *\/$/;"	m	union:Walker::__anon61
pSrcList	src/sqliteInt.h	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext
pSrcList	tsrc/sqliteInt.h	/^    SrcList *pSrcList;                         \/* FROM clause *\/$/;"	m	union:Walker::__anon29
pSrcList	tsrc/sqliteInt.h	/^  SrcList *pSrcList;   \/* One or more tables used to resolve names *\/$/;"	m	struct:NameContext
pStart	sqlite3.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pStart	sqlite3.c	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside	file:
pStart	src/pcache1.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pStart	src/sqliteInt.h	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside
pStart	tsrc/pcache1.c	/^  void *pStart, *pEnd;           \/* Bounds of global page cache memory *\/$/;"	m	struct:PCacheGlobal	file:
pStart	tsrc/sqliteInt.h	/^  void *pStart;           \/* First byte of available memory space *\/$/;"	m	struct:Lookaside
pStem	ext/misc/fuzzer.c	/^  fuzzer_stem *pStem;        \/* Stem with smallest rCostX *\/$/;"	m	struct:fuzzer_cursor	file:
pStep	src/test1.c	/^  Tcl_Obj *pStep;                 \/* Script for agg. step invocation *\/$/;"	m	struct:CreateFunctionV2	file:
pStmt	ext/fts1/fts1.c	/^  sqlite3_stmt *pStmt;             \/* Prepared statement in use by the cursor *\/$/;"	m	struct:fulltext_cursor	file:
pStmt	ext/fts1/fulltext.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:fulltext_cursor	file:
pStmt	ext/fts2/fts2.c	/^  sqlite3_stmt *pStmt;             \/* Prepared statement in use by the cursor *\/$/;"	m	struct:fulltext_cursor	file:
pStmt	ext/fts2/fts2.c	/^  sqlite3_stmt *pStmt;      \/* Statement we're streaming leaves from. *\/$/;"	m	struct:LeavesReader	file:
pStmt	ext/fts3/fts3Int.h	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor
pStmt	ext/fts5/fts5_main.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	ext/fts5/fts5_main.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStmt	ext/fts5/fts5_vocab.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	ext/misc/nextchar.c	/^  sqlite3_stmt *pStmt;              \/* Prepared statement used to query *\/$/;"	m	struct:nextCharContext	file:
pStmt	ext/misc/spellfix.c	/^  sqlite3_stmt *pStmt;             \/* shadow table query statment *\/$/;"	m	struct:MatchQuery	file:
pStmt	ext/session/sqlite3session.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:SessionDiffCtx	file:
pStmt	fts5.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	fts5.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	fts5.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStmt	shell.c	/^  sqlite3_stmt *pStmt;   \/* Current statement if any. *\/$/;"	m	struct:ShellState	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Iterates through set of root pages *\/$/;"	m	struct:StatCursor	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStmt	sqlite3.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:SessionDiffCtx	file:
pStmt	src/dbstat.c	/^  sqlite3_stmt *pStmt;            \/* Iterates through set of root pages *\/$/;"	m	struct:StatCursor	file:
pStmt	src/shell.c	/^  sqlite3_stmt *pStmt;   \/* Current statement if any. *\/$/;"	m	struct:ShellState	file:
pStmt	src/tclsqlite.c	/^  sqlite3_stmt *pStmt;     \/* The prepared statement *\/$/;"	m	struct:SqlPreparedStmt	file:
pStmt	src/test4.c	/^  sqlite3_stmt *pStmt;     \/* Pending operation *\/$/;"	m	struct:Thread	file:
pStmt	src/test7.c	/^  sqlite3_stmt *pStmt;     \/* Pending operation *\/$/;"	m	struct:Thread	file:
pStmt	src/test8.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:echo_cursor	file:
pStmt	src/test_bestindex.c	/^  sqlite3_stmt *pStmt;            \/* Read data from here *\/$/;"	m	struct:tcl_cursor	file:
pStmt	src/test_fs.c	/^  sqlite3_stmt *pStmt;            \/* Statement to list paths *\/$/;"	m	struct:FstreeCsr	file:
pStmt	src/test_fs.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:fs_cursor	file:
pStmt	src/test_server.c	/^  sqlite3_stmt *pStmt;         \/* A specific statement *\/$/;"	m	struct:SqlMessage	file:
pStmt	src/vdbeblob.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStmt	test/speedtest1.c	/^  sqlite3_stmt *pStmt;       \/* Current SQL statement *\/$/;"	m	struct:Global	file:
pStmt	test/threadtest3.c	/^  sqlite3_stmt *pStmt;            \/* Pre-compiled statement handle *\/$/;"	m	struct:Statement	file:
pStmt	tsrc/dbstat.c	/^  sqlite3_stmt *pStmt;            \/* Iterates through set of root pages *\/$/;"	m	struct:StatCursor	file:
pStmt	tsrc/fts1.c	/^  sqlite3_stmt *pStmt;             \/* Prepared statement in use by the cursor *\/$/;"	m	struct:fulltext_cursor	file:
pStmt	tsrc/fts2.c	/^  sqlite3_stmt *pStmt;             \/* Prepared statement in use by the cursor *\/$/;"	m	struct:fulltext_cursor	file:
pStmt	tsrc/fts2.c	/^  sqlite3_stmt *pStmt;      \/* Statement we're streaming leaves from. *\/$/;"	m	struct:LeavesReader	file:
pStmt	tsrc/fts3Int.h	/^  sqlite3_stmt *pStmt;            \/* Prepared statement in use by the cursor *\/$/;"	m	struct:Fts3Cursor
pStmt	tsrc/fts5.c	/^  sqlite3_stmt *pStmt;            \/* Statement holding lock on pIndex *\/$/;"	m	struct:Fts5VocabCursor	file:
pStmt	tsrc/fts5.c	/^  sqlite3_stmt *pStmt;            \/* Statement used to read %_content *\/$/;"	m	struct:Fts5Cursor	file:
pStmt	tsrc/fts5.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:Fts5Sorter	file:
pStmt	tsrc/shell.c	/^  sqlite3_stmt *pStmt;   \/* Current statement if any. *\/$/;"	m	struct:ShellState	file:
pStmt	tsrc/sqlite3session.c	/^  sqlite3_stmt *pStmt;$/;"	m	struct:SessionDiffCtx	file:
pStmt	tsrc/tclsqlite.c	/^  sqlite3_stmt *pStmt;     \/* The prepared statement *\/$/;"	m	struct:SqlPreparedStmt	file:
pStmt	tsrc/vdbeblob.c	/^  sqlite3_stmt *pStmt;    \/* Statement holding cursor open *\/$/;"	m	struct:Incrblob	file:
pStorage	ext/fts5/fts5_main.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	ext/fts5/fts5_storage.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStorage	fts5.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	fts5.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStorage	sqlite3.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	sqlite3.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStorage	tsrc/fts5.c	/^  Fts5Storage *pStorage;          \/* Document store *\/$/;"	m	struct:Fts5Table	file:
pStorage	tsrc/fts5.c	/^  Fts5Storage *pStorage;$/;"	m	struct:Fts5InsertCtx	file:
pStress	sqlite3.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pStress	src/pcache.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pStress	tsrc/pcache.c	/^  void *pStress;                      \/* Argument to xStress *\/$/;"	m	struct:PCache	file:
pStruct	ext/fts5/fts5_index.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	ext/fts5/fts5_index.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pStruct	fts5.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	fts5.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pStruct	sqlite3.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	sqlite3.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pStruct	tsrc/fts5.c	/^  Fts5Structure *pStruct;         \/* Current db structure (or NULL) *\/$/;"	m	struct:Fts5Index	file:
pStruct	tsrc/fts5.c	/^  Fts5Structure *pStruct;         \/* Database structure for this iterator *\/$/;"	m	struct:Fts5Iter	file:
pSynced	sqlite3.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pSynced	src/pcache.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pSynced	tsrc/pcache.c	/^  PgHdr *pSynced;                     \/* Last synced page in dirty page list *\/$/;"	m	struct:PCache	file:
pSynonym	ext/fts5/fts5_expr.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pSynonym	fts5.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pSynonym	sqlite3.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pSynonym	tsrc/fts5.c	/^  Fts5ExprTerm *pSynonym;         \/* Pointer to first in list of synonyms *\/$/;"	m	struct:Fts5ExprTerm	file:
pTab	sqlite3.c	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col	file:
pTab	sqlite3.c	/^    Table *pTab;           \/* Used when p4type is P4_TABLE *\/$/;"	m	union:VdbeOp::p4union	file:
pTab	sqlite3.c	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item	file:
pTab	sqlite3.c	/^  Table *pTab;            \/* Table object *\/$/;"	m	struct:Incrblob	file:
pTab	sqlite3.c	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr	file:
pTab	sqlite3.c	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo	file:
pTab	sqlite3.c	/^  Table *pTab;        \/* The Table object to which the virtual table belongs *\/$/;"	m	struct:VtabCtx	file:
pTab	src/sqliteInt.h	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col
pTab	src/sqliteInt.h	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item
pTab	src/sqliteInt.h	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr
pTab	src/sqliteInt.h	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo
pTab	src/vdbe.h	/^    Table *pTab;           \/* Used when p4type is P4_TABLE *\/$/;"	m	union:VdbeOp::p4union
pTab	src/vdbeblob.c	/^  Table *pTab;            \/* Table object *\/$/;"	m	struct:Incrblob	file:
pTab	src/vtab.c	/^  Table *pTab;        \/* The Table object to which the virtual table belongs *\/$/;"	m	struct:VtabCtx	file:
pTab	tsrc/sqliteInt.h	/^    Table *pTab;             \/* Source table *\/$/;"	m	struct:AggInfo::AggInfo_col
pTab	tsrc/sqliteInt.h	/^    Table *pTab;      \/* An SQL table corresponding to zName *\/$/;"	m	struct:SrcList::SrcList_item
pTab	tsrc/sqliteInt.h	/^  Table *pTab;           \/* Table for TK_COLUMN expressions. *\/$/;"	m	struct:Expr
pTab	tsrc/sqliteInt.h	/^  Table *pTab;          \/* Table this info block refers to *\/$/;"	m	struct:AutoincInfo
pTab	tsrc/vdbe.h	/^    Table *pTab;           \/* Used when p4type is P4_TABLE *\/$/;"	m	union:VdbeOp::p4union
pTab	tsrc/vdbeblob.c	/^  Table *pTab;            \/* Table object *\/$/;"	m	struct:Incrblob	file:
pTab	tsrc/vtab.c	/^  Table *pTab;        \/* The Table object to which the virtual table belongs *\/$/;"	m	struct:VtabCtx	file:
pTabList	sqlite3.c	/^  SrcList *pTabList;        \/* List of tables in the join *\/$/;"	m	struct:WhereInfo	file:
pTabList	src/whereInt.h	/^  SrcList *pTabList;        \/* List of tables in the join *\/$/;"	m	struct:WhereInfo
pTabList	tsrc/whereInt.h	/^  SrcList *pTabList;        \/* List of tables in the join *\/$/;"	m	struct:WhereInfo
pTabSchema	sqlite3.c	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger	file:
pTabSchema	src/sqliteInt.h	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger
pTabSchema	tsrc/sqliteInt.h	/^  Schema *pTabSchema;     \/* Schema containing the table *\/$/;"	m	struct:Trigger
pTable	ext/session/sqlite3session.c	/^  SessionTable *pTable;           \/* List of attached tables *\/$/;"	m	struct:sqlite3_session	file:
pTable	sqlite3.c	/^  SessionTable *pTable;           \/* List of attached tables *\/$/;"	m	struct:sqlite3_session	file:
pTable	sqlite3.c	/^  Table *pTable;           \/* The SQL table being indexed *\/$/;"	m	struct:Index	file:
pTable	src/sqliteInt.h	/^  Table *pTable;           \/* The SQL table being indexed *\/$/;"	m	struct:Index
pTable	tsrc/sqlite3session.c	/^  SessionTable *pTable;           \/* List of attached tables *\/$/;"	m	struct:sqlite3_session	file:
pTable	tsrc/sqliteInt.h	/^  Table *pTable;           \/* The SQL table being indexed *\/$/;"	m	struct:Index
pTableList	src/test_schema.c	/^  sqlite3_stmt *pTableList;$/;"	m	struct:schema_cursor	file:
pTail	ext/fts3/fts3_snippet.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTail	sqlite3.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTail	tsrc/fts3_snippet.c	/^  char *pTail;                    \/* Position list data following iTail *\/$/;"	m	struct:SnippetPhrase	file:
pTargetFd	ext/rbu/sqlite3rbu.c	/^  rbu_file *pTargetFd;            \/* File handle open on target db *\/$/;"	m	struct:sqlite3rbu	file:
pTargetFd	sqlite3.c	/^  rbu_file *pTargetFd;            \/* File handle open on target db *\/$/;"	m	struct:sqlite3rbu	file:
pTargetFd	tsrc/sqlite3rbu.c	/^  rbu_file *pTargetFd;            \/* File handle open on target db *\/$/;"	m	struct:sqlite3rbu	file:
pTask	sqlite3.c	/^  SortSubtask *pTask;             \/* Task that owns this merger *\/$/;"	m	struct:IncrMerger	file:
pTask	sqlite3.c	/^  SortSubtask *pTask;        \/* Used by this thread only *\/$/;"	m	struct:MergeEngine	file:
pTask	src/vdbesort.c	/^  SortSubtask *pTask;             \/* Task that owns this merger *\/$/;"	m	struct:IncrMerger	file:
pTask	src/vdbesort.c	/^  SortSubtask *pTask;        \/* Used by this thread only *\/$/;"	m	struct:MergeEngine	file:
pTask	tsrc/vdbesort.c	/^  SortSubtask *pTask;             \/* Task that owns this merger *\/$/;"	m	struct:IncrMerger	file:
pTask	tsrc/vdbesort.c	/^  SortSubtask *pTask;        \/* Used by this thread only *\/$/;"	m	struct:MergeEngine	file:
pTblIter	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pTblIter;         \/* Iterate through tables *\/$/;"	m	struct:RbuObjIter	file:
pTblIter	sqlite3.c	/^  sqlite3_stmt *pTblIter;         \/* Iterate through tables *\/$/;"	m	struct:RbuObjIter	file:
pTblIter	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pTblIter;         \/* Iterate through tables *\/$/;"	m	struct:RbuObjIter	file:
pTerm	ext/fts1/fts1.c	/^  char *pTerm;       \/* text of the term.  '\\000' terminated.  malloced *\/$/;"	m	struct:QueryTerm	file:
pTerm	ext/fts1/fulltext.c	/^  QueryTerm *pTerm;$/;"	m	struct:Query	file:
pTerm	ext/fts2/fts2.c	/^  char *pTerm;       \/* text of the term.  '\\000' terminated.  malloced *\/$/;"	m	struct:QueryTerm	file:
pTerm	ext/fts2/fts2.c	/^  const char *pTerm;$/;"	m	struct:TermData	file:
pTerm	ext/fts5/fts5_buffer.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTerm	fts5.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTerm	sqlite3.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTerm	tsrc/fts1.c	/^  char *pTerm;       \/* text of the term.  '\\000' terminated.  malloced *\/$/;"	m	struct:QueryTerm	file:
pTerm	tsrc/fts2.c	/^  char *pTerm;       \/* text of the term.  '\\000' terminated.  malloced *\/$/;"	m	struct:QueryTerm	file:
pTerm	tsrc/fts2.c	/^  const char *pTerm;$/;"	m	struct:TermData	file:
pTerm	tsrc/fts5.c	/^  char *pTerm;$/;"	m	struct:Fts5TermsetEntry	file:
pTerms	ext/fts1/fts1.c	/^  QueryTerm *pTerms;    \/* Array of terms.  Space obtained from malloc() *\/$/;"	m	struct:Query	file:
pTerms	ext/fts2/fts2.c	/^  QueryTerm *pTerms;    \/* Array of terms.  Space obtained from malloc() *\/$/;"	m	struct:Query	file:
pTerms	tsrc/fts1.c	/^  QueryTerm *pTerms;    \/* Array of terms.  Space obtained from malloc() *\/$/;"	m	struct:Query	file:
pTerms	tsrc/fts2.c	/^  QueryTerm *pTerms;    \/* Array of terms.  Space obtained from malloc() *\/$/;"	m	struct:Query	file:
pTermset	ext/fts5/fts5_storage.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pTermset	fts5.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pTermset	sqlite3.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pTermset	tsrc/fts5.c	/^  Fts5Termset *pTermset;$/;"	m	struct:Fts5IntegrityCtx	file:
pTestCollateInterp	src/test1.c	/^static Tcl_Interp* pTestCollateInterp;$/;"	v	file:
pThread	sqlite3.c	/^  SQLiteThread *pThread;          \/* Background thread, if any *\/$/;"	m	struct:SortSubtask	file:
pThread	src/vdbesort.c	/^  SQLiteThread *pThread;          \/* Background thread, if any *\/$/;"	m	struct:SortSubtask	file:
pThread	test/threadtest3.c	/^  Thread *pThread;                \/* Linked list of threads *\/$/;"	m	struct:Threadset	file:
pThread	tsrc/vdbesort.c	/^  SQLiteThread *pThread;          \/* Background thread, if any *\/$/;"	m	struct:SortSubtask	file:
pTmpInsert	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pTmpInsert;       \/* Insert into rbu_tmp_$zDataTbl *\/$/;"	m	struct:RbuObjIter	file:
pTmpInsert	sqlite3.c	/^  sqlite3_stmt *pTmpInsert;       \/* Insert into rbu_tmp_$zDataTbl *\/$/;"	m	struct:RbuObjIter	file:
pTmpInsert	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pTmpInsert;       \/* Insert into rbu_tmp_$zDataTbl *\/$/;"	m	struct:RbuObjIter	file:
pTmpSpace	sqlite3.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	sqlite3.c	/^  u8 *pTmpSpace;        \/* Temp space sufficient to hold a single cell *\/$/;"	m	struct:BtShared	file:
pTmpSpace	src/btreeInt.h	/^  u8 *pTmpSpace;        \/* Temp space sufficient to hold a single cell *\/$/;"	m	struct:BtShared
pTmpSpace	src/pager.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTmpSpace	tsrc/btreeInt.h	/^  u8 *pTmpSpace;        \/* Temp space sufficient to hold a single cell *\/$/;"	m	struct:BtShared
pTmpSpace	tsrc/pager.c	/^  char *pTmpSpace;            \/* Pager.pageSize bytes of space for tmp use *\/$/;"	m	struct:Pager	file:
pTok	ext/fts3/fts3_tokenize_vtab.c	/^  sqlite3_tokenizer *pTok;$/;"	m	struct:Fts3tokTable	file:
pTok	ext/fts5/fts5Int.h	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config
pTok	ext/fts5/fts5_main.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTok	ext/fts5/fts5_test_tok.c	/^  Fts5Tokenizer *pTok;            \/* Tokenizer instance *\/$/;"	m	struct:Fts5tokTable	file:
pTok	fts5.c	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config	file:
pTok	fts5.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTok	sqlite3.c	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config	file:
pTok	sqlite3.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTok	sqlite3.c	/^  sqlite3_tokenizer *pTok;$/;"	m	struct:Fts3tokTable	file:
pTok	tsrc/fts3_tokenize_vtab.c	/^  sqlite3_tokenizer *pTok;$/;"	m	struct:Fts3tokTable	file:
pTok	tsrc/fts5.c	/^  Fts5Tokenizer *pTok;$/;"	m	struct:Fts5Config	file:
pTok	tsrc/fts5.c	/^  Fts5TokenizerModule *pTok;      \/* First in list of all tokenizer modules *\/$/;"	m	struct:Fts5Global	file:
pTokApi	ext/fts5/fts5Int.h	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config
pTokApi	fts5.c	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config	file:
pTokApi	sqlite3.c	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config	file:
pTokApi	tsrc/fts5.c	/^  fts5_tokenizer *pTokApi;$/;"	m	struct:Fts5Config	file:
pToken	ext/fts1/fts1_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	ext/fts2/fts2_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	ext/fts3/fts3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	ext/fts3/fts3_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	ext/fts3/fts3_write.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pToken	sqlite3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	sqlite3.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	tsrc/fts1_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	tsrc/fts2_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	tsrc/fts3.c	/^  Fts3PhraseToken *pToken;        \/* The token itself *\/$/;"	m	struct:Fts3TokenAndCost	file:
pToken	tsrc/fts3_tokenizer1.c	/^  char *pToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
pToken	tsrc/fts3_write.c	/^  Fts3PhraseToken *pToken;        \/* Pointer to corresponding expr token *\/$/;"	m	struct:Fts3DeferredToken	file:
pTokenizer	ext/fts1/fts1.c	/^  sqlite3_tokenizer *pTokenizer;   \/* tokenizer for inserts and queries *\/$/;"	m	struct:fulltext_vtab	file:
pTokenizer	ext/fts1/fts1_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	ext/fts1/fulltext.c	/^  sqlite3_tokenizer *pTokenizer;   \/* tokenizer for inserts and queries *\/$/;"	m	struct:fulltext_vtab	file:
pTokenizer	ext/fts1/tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	ext/fts2/fts2.c	/^  sqlite3_tokenizer *pTokenizer;   \/* tokenizer for inserts and queries *\/$/;"	m	struct:fulltext_vtab	file:
pTokenizer	ext/fts2/fts2_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	ext/fts3/fts3Int.h	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table
pTokenizer	ext/fts3/fts3_expr.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	ext/fts3/fts3_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	ext/fts5/fts5_tokenize.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pTokenizer	fts5.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pTokenizer	sqlite3.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pTokenizer	sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor	file:
pTokenizer	sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	sqlite3.c	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table	file:
pTokenizer	tsrc/fts1.c	/^  sqlite3_tokenizer *pTokenizer;   \/* tokenizer for inserts and queries *\/$/;"	m	struct:fulltext_vtab	file:
pTokenizer	tsrc/fts1_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	tsrc/fts2.c	/^  sqlite3_tokenizer *pTokenizer;   \/* tokenizer for inserts and queries *\/$/;"	m	struct:fulltext_vtab	file:
pTokenizer	tsrc/fts2_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	tsrc/fts3Int.h	/^  sqlite3_tokenizer *pTokenizer;  \/* tokenizer for inserts and queries *\/$/;"	m	struct:Fts3Table
pTokenizer	tsrc/fts3_expr.c	/^  sqlite3_tokenizer *pTokenizer;      \/* Tokenizer module *\/$/;"	m	struct:ParseContext	file:
pTokenizer	tsrc/fts3_tokenizer.h	/^  sqlite3_tokenizer *pTokenizer;       \/* Tokenizer for this cursor. *\/$/;"	m	struct:sqlite3_tokenizer_cursor
pTokenizer	tsrc/fts5.c	/^  Fts5Tokenizer *pTokenizer;      \/* Parent tokenizer instance *\/$/;"	m	struct:PorterTokenizer	file:
pToplevel	sqlite3.c	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse	file:
pToplevel	src/sqliteInt.h	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse
pToplevel	tsrc/sqliteInt.h	/^  Parse *pToplevel;    \/* Parse structure for main program (or NULL) *\/$/;"	m	struct:Parse
pTraceArg	sqlite3.c	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3	file:
pTraceArg	src/sqliteInt.h	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3
pTraceArg	tsrc/sqliteInt.h	/^  void *pTraceArg;                          \/* Argument to the trace function *\/$/;"	m	struct:sqlite3
pTraceVfs	src/test_vfstrace.c	/^  sqlite3_vfs *pTraceVfs;             \/* Pointer back to the trace VFS *\/$/;"	m	struct:vfstrace_info	file:
pTree	ext/fts3/fts3_write.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTree	sqlite3.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTree	tsrc/fts3_write.c	/^  SegmentNode *pTree;             \/* Pointer to interior tree structure *\/$/;"	m	struct:SegmentWriter	file:
pTrig	sqlite3.c	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep	file:
pTrig	src/sqliteInt.h	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep
pTrig	tsrc/sqliteInt.h	/^  Trigger *pTrig;      \/* The trigger that this step is a part of *\/$/;"	m	struct:TriggerStep
pTrigger	sqlite3.c	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg	file:
pTrigger	sqlite3.c	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table	file:
pTrigger	sqlite3.c	102892;"	d	file:
pTrigger	sqlite3.c	107543;"	d	file:
pTrigger	sqlite3.c	121205;"	d	file:
pTrigger	src/delete.c	584;"	d	file:
pTrigger	src/insert.c	1074;"	d	file:
pTrigger	src/sqliteInt.h	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg
pTrigger	src/sqliteInt.h	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table
pTrigger	src/update.c	703;"	d	file:
pTrigger	tsrc/delete.c	584;"	d	file:
pTrigger	tsrc/insert.c	1074;"	d	file:
pTrigger	tsrc/sqliteInt.h	/^  Trigger *pTrigger;      \/* Trigger this program was coded from *\/$/;"	m	struct:TriggerPrg
pTrigger	tsrc/sqliteInt.h	/^  Trigger *pTrigger;   \/* List of triggers stored in pSchema *\/$/;"	m	struct:Table
pTrigger	tsrc/update.c	703;"	d	file:
pTriggerPrg	sqlite3.c	/^  TriggerPrg *pTriggerPrg;  \/* Linked list of coded triggers *\/$/;"	m	struct:Parse	file:
pTriggerPrg	src/sqliteInt.h	/^  TriggerPrg *pTriggerPrg;  \/* Linked list of coded triggers *\/$/;"	m	struct:Parse
pTriggerPrg	tsrc/sqliteInt.h	/^  TriggerPrg *pTriggerPrg;  \/* Linked list of coded triggers *\/$/;"	m	struct:Parse
pTriggerTab	sqlite3.c	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse	file:
pTriggerTab	src/sqliteInt.h	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse
pTriggerTab	tsrc/sqliteInt.h	/^  Table *pTriggerTab;  \/* Table triggers are being coded for *\/$/;"	m	struct:Parse
pUnlockArg	sqlite3.c	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3	file:
pUnlockArg	src/sqliteInt.h	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3
pUnlockArg	tsrc/sqliteInt.h	/^  void *pUnlockArg;                     \/* Argument to xUnlockNotify *\/$/;"	m	struct:sqlite3
pUnlockConnection	sqlite3.c	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3	file:
pUnlockConnection	src/sqliteInt.h	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3
pUnlockConnection	tsrc/sqliteInt.h	/^  sqlite3 *pUnlockConnection;           \/* Connection to watch for unlock *\/$/;"	m	struct:sqlite3
pUnlockNotify	src/tclsqlite.c	/^  Tcl_Obj *pUnlockNotify;    \/* Unlock notify script (if any) *\/$/;"	m	struct:SqliteDb	file:
pUnlockNotify	tsrc/tclsqlite.c	/^  Tcl_Obj *pUnlockNotify;    \/* Unlock notify script (if any) *\/$/;"	m	struct:SqliteDb	file:
pUnpacked	sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Space to unpack a record *\/$/;"	m	struct:SortSubtask	file:
pUnpacked	sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Unpacked version of aRecord[] *\/$/;"	m	struct:PreUpdate	file:
pUnpacked	sqlite3.c	/^  UnpackedRecord *pUnpacked;      \/* Used by VdbeSorterCompare() *\/$/;"	m	struct:VdbeSorter	file:
pUnpacked	src/vdbeInt.h	/^  UnpackedRecord *pUnpacked;      \/* Unpacked version of aRecord[] *\/$/;"	m	struct:PreUpdate
pUnpacked	src/vdbesort.c	/^  UnpackedRecord *pUnpacked;      \/* Space to unpack a record *\/$/;"	m	struct:SortSubtask	file:
pUnpacked	src/vdbesort.c	/^  UnpackedRecord *pUnpacked;      \/* Used by VdbeSorterCompare() *\/$/;"	m	struct:VdbeSorter	file:
pUnpacked	tsrc/vdbeInt.h	/^  UnpackedRecord *pUnpacked;      \/* Unpacked version of aRecord[] *\/$/;"	m	struct:PreUpdate
pUnpacked	tsrc/vdbesort.c	/^  UnpackedRecord *pUnpacked;      \/* Space to unpack a record *\/$/;"	m	struct:SortSubtask	file:
pUnpacked	tsrc/vdbesort.c	/^  UnpackedRecord *pUnpacked;      \/* Used by VdbeSorterCompare() *\/$/;"	m	struct:VdbeSorter	file:
pUnused	sqlite3.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	sqlite3.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUnused	src/os_unix.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	src/os_unix.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUnused	tsrc/os_unix.c	/^  UnixUnusedFd *pUnused;              \/* Pre-allocated UnixUnusedFd *\/$/;"	m	struct:unixFile	file:
pUnused	tsrc/os_unix.c	/^  UnixUnusedFd *pUnused;          \/* Unused file descriptors to close *\/$/;"	m	struct:unixInodeInfo	file:
pUp	ext/misc/amatch.c	/^  amatch_avl *pUp;      \/* Parent element *\/$/;"	m	struct:amatch_avl	file:
pUp	ext/misc/closure.c	/^  closure_avl *pUp;     \/* Parent element *\/$/;"	m	struct:closure_avl	file:
pUpdate	ext/rbu/sqlite3rbu.c	/^  sqlite3_stmt *pUpdate;          \/* Last update statement (or NULL) *\/$/;"	m	struct:RbuUpdateStmt	file:
pUpdate	ext/session/sqlite3session.c	/^  sqlite3_stmt *pUpdate;          \/* UPDATE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pUpdate	sqlite3.c	/^  sqlite3_stmt *pUpdate;          \/* Last update statement (or NULL) *\/$/;"	m	struct:RbuUpdateStmt	file:
pUpdate	sqlite3.c	/^  sqlite3_stmt *pUpdate;          \/* UPDATE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pUpdate	tsrc/sqlite3rbu.c	/^  sqlite3_stmt *pUpdate;          \/* Last update statement (or NULL) *\/$/;"	m	struct:RbuUpdateStmt	file:
pUpdate	tsrc/sqlite3session.c	/^  sqlite3_stmt *pUpdate;          \/* UPDATE statement *\/$/;"	m	struct:SessionApplyCtx	file:
pUpdateArg	sqlite3.c	/^  void *pUpdateArg;$/;"	m	struct:sqlite3	file:
pUpdateArg	src/sqliteInt.h	/^  void *pUpdateArg;$/;"	m	struct:sqlite3
pUpdateArg	tsrc/sqliteInt.h	/^  void *pUpdateArg;$/;"	m	struct:sqlite3
pUpdateHook	src/tclsqlite.c	/^  Tcl_Obj *pUpdateHook;      \/* Update hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pUpdateHook	tsrc/tclsqlite.c	/^  Tcl_Obj *pUpdateHook;      \/* Update hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pUser	ext/rtree/sqlite3rtree.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	ext/rtree/sqlite3rtree.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUser	sqlite3.c	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
pUser	sqlite3.c	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
pUser	sqlite3.c	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq	file:
pUser	sqlite3.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUser	src/sqliteInt.h	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq
pUser	tsrc/sqlite3.h	/^  void *pUser;                      \/* callback can use this, if desired *\/$/;"	m	struct:sqlite3_rtree_query_info
pUser	tsrc/sqlite3.h	/^  void *pUser;                    \/* Callback implementation user data *\/$/;"	m	struct:sqlite3_rtree_geometry
pUser	tsrc/sqliteInt.h	/^  void *pUser;          \/* First argument to xCmp() *\/$/;"	m	struct:CollSeq
pUserData	ext/fts5/fts5_main.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	ext/fts5/fts5_main.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	fts5.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	fts5.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	sqlite3.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	sqlite3.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	sqlite3.c	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef	file:
pUserData	sqlite3.c	/^  void *pUserData;$/;"	m	struct:FuncDestructor	file:
pUserData	src/sqliteInt.h	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef
pUserData	src/sqliteInt.h	/^  void *pUserData;$/;"	m	struct:FuncDestructor
pUserData	tsrc/fts5.c	/^  void *pUserData;                \/* User pointer passed to xCreate() *\/$/;"	m	struct:Fts5TokenizerModule	file:
pUserData	tsrc/fts5.c	/^  void *pUserData;                \/* User-data pointer *\/$/;"	m	struct:Fts5Auxiliary	file:
pUserData	tsrc/sqliteInt.h	/^  void *pUserData;     \/* User data parameter *\/$/;"	m	struct:FuncDef
pUserData	tsrc/sqliteInt.h	/^  void *pUserData;$/;"	m	struct:FuncDestructor
pUsing	sqlite3.c	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item	file:
pUsing	src/sqliteInt.h	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item
pUsing	tsrc/sqliteInt.h	/^    IdList *pUsing;   \/* The USING clause of a join *\/$/;"	m	struct:SrcList::SrcList_item
pVCheck	ext/misc/amatch.c	/^  sqlite3_stmt *pVCheck;     \/* Query to check zVocabTab *\/$/;"	m	struct:amatch_vtab	file:
pVCur	sqlite3.c	/^    sqlite3_vtab_cursor *pVCur; \/* CURTYPE_VTAB.   Vtab cursor *\/$/;"	m	union:VdbeCursor::__anon88	file:
pVCur	src/vdbeInt.h	/^    sqlite3_vtab_cursor *pVCur; \/* CURTYPE_VTAB.   Vtab cursor *\/$/;"	m	union:VdbeCursor::__anon43
pVCur	tsrc/vdbeInt.h	/^    sqlite3_vtab_cursor *pVCur; \/* CURTYPE_VTAB.   Vtab cursor *\/$/;"	m	union:VdbeCursor::__anon7
pVFile	test/fuzzcheck.c	/^  VFile *pVFile;          \/* The underlying file *\/$/;"	m	struct:VHandle	file:
pVTab	ext/misc/spellfix.c	/^  spellfix1_vtab *pVTab;       \/* The table to which this cursor belongs *\/$/;"	m	struct:spellfix1_cursor	file:
pVTable	sqlite3.c	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table	file:
pVTable	sqlite3.c	/^  VTable *pVTable;    \/* The virtual table being constructed *\/$/;"	m	struct:VtabCtx	file:
pVTable	src/sqliteInt.h	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table
pVTable	src/vtab.c	/^  VTable *pVTable;    \/* The virtual table being constructed *\/$/;"	m	struct:VtabCtx	file:
pVTable	tsrc/sqliteInt.h	/^  VTable *pVTable;     \/* List of VTable objects. *\/$/;"	m	struct:Table
pVTable	tsrc/vtab.c	/^  VTable *pVTable;    \/* The virtual table being constructed *\/$/;"	m	struct:VtabCtx	file:
pVdbe	sqlite3.c	/^  Vdbe *pVdbe;            \/* The VM that owns this context *\/$/;"	m	struct:sqlite3_context	file:
pVdbe	sqlite3.c	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse	file:
pVdbe	sqlite3.c	/^  Vdbe *pVdbe;       \/* Attach the explanation to this Vdbe *\/$/;"	m	struct:Explain	file:
pVdbe	sqlite3.c	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe	file:
pVdbe	src/sqliteInt.h	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse
pVdbe	src/sqliteInt.h	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe
pVdbe	src/vdbeInt.h	/^  Vdbe *pVdbe;            \/* The VM that owns this context *\/$/;"	m	struct:sqlite3_context
pVdbe	src/vdbeInt.h	/^  Vdbe *pVdbe;       \/* Attach the explanation to this Vdbe *\/$/;"	m	struct:Explain
pVdbe	tsrc/sqliteInt.h	/^  Vdbe *pVdbe;         \/* An engine for executing database bytecode *\/$/;"	m	struct:Parse
pVdbe	tsrc/sqliteInt.h	/^  struct Vdbe *pVdbe;           \/* List of active virtual machines *\/$/;"	m	struct:sqlite3	typeref:struct:sqlite3::Vdbe
pVdbe	tsrc/vdbeInt.h	/^  Vdbe *pVdbe;            \/* The VM that owns this context *\/$/;"	m	struct:sqlite3_context
pVdbe	tsrc/vdbeInt.h	/^  Vdbe *pVdbe;       \/* Attach the explanation to this Vdbe *\/$/;"	m	struct:Explain
pVdbeBranchArg	sqlite3.c	/^  void *pVdbeBranchArg;                                     \/* 1st argument *\/$/;"	m	struct:Sqlite3Config	file:
pVdbeBranchArg	src/sqliteInt.h	/^  void *pVdbeBranchArg;                                     \/* 1st argument *\/$/;"	m	struct:Sqlite3Config
pVdbeBranchArg	tsrc/sqliteInt.h	/^  void *pVdbeBranchArg;                                     \/* 1st argument *\/$/;"	m	struct:Sqlite3Config
pVfs	ext/misc/vfslog.c	/^  sqlite3_vfs *pVfs;              \/* Parent VFS *\/$/;"	m	struct:VLogVfs	file:
pVfs	ext/misc/vfsstat.c	/^  sqlite3_vfs *pVfs;              \/* Parent VFS *\/$/;"	m	struct:VStatVfs	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;                  \/* The VFS that created this unixFile *\/$/;"	m	struct:unixFile	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:MemJournal	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	sqlite3.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVfs	src/memjournal.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:MemJournal	file:
pVfs	src/os_unix.c	/^  sqlite3_vfs *pVfs;                  \/* The VFS that created this unixFile *\/$/;"	m	struct:unixFile	file:
pVfs	src/os_win.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVfs	src/pager.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	src/sqliteInt.h	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3
pVfs	src/test_devsym.c	/^  sqlite3_vfs *pVfs;$/;"	m	struct:DevsymGlobal	file:
pVfs	src/test_journal.c	/^  sqlite3_vfs *pVfs;             \/* Parent VFS *\/$/;"	m	struct:JtGlobal	file:
pVfs	src/test_osinst.c	/^  sqlite3_vfs *pVfs;              \/* Parent VFS *\/$/;"	m	struct:VfslogVfs	file:
pVfs	src/test_vfs.c	/^  sqlite3_vfs *pVfs;              \/* The VFS *\/$/;"	m	struct:TestvfsFd	file:
pVfs	src/test_vfs.c	/^  sqlite3_vfs *pVfs;              \/* The testvfs registered with SQLite *\/$/;"	m	struct:Testvfs	file:
pVfs	src/wal.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfs	tsrc/memjournal.c	/^  sqlite3_vfs *pVfs;              \/* The "real" underlying VFS *\/$/;"	m	struct:MemJournal	file:
pVfs	tsrc/os_unix.c	/^  sqlite3_vfs *pVfs;                  \/* The VFS that created this unixFile *\/$/;"	m	struct:unixFile	file:
pVfs	tsrc/os_win.c	/^  sqlite3_vfs *pVfs;      \/* The VFS used to open this file *\/$/;"	m	struct:winFile	file:
pVfs	tsrc/pager.c	/^  sqlite3_vfs *pVfs;          \/* OS functions to use for IO *\/$/;"	m	struct:Pager	file:
pVfs	tsrc/sqliteInt.h	/^  sqlite3_vfs *pVfs;            \/* OS Interface *\/$/;"	m	struct:sqlite3
pVfs	tsrc/wal.c	/^  sqlite3_vfs *pVfs;         \/* The VFS used to create pDbFd *\/$/;"	m	struct:Wal	file:
pVfslog	src/test_osinst.c	/^  sqlite3_vfs *pVfslog;           \/* Associated VsflogVfs object *\/$/;"	m	struct:VfslogFile	file:
pVtab	ext/misc/amatch.c	/^  amatch_vtab *pVtab;        \/* The virtual table this cursor belongs to *\/$/;"	m	struct:amatch_cursor	file:
pVtab	ext/misc/closure.c	/^  closure_vtab *pVtab;       \/* The virtual table this cursor belongs to *\/$/;"	m	struct:closure_cursor	file:
pVtab	ext/misc/fuzzer.c	/^  fuzzer_vtab *pVtab;        \/* The virtual table this cursor belongs to *\/$/;"	m	struct:fuzzer_cursor	file:
pVtab	sqlite3.c	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::p4union	file:
pVtab	sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable	file:
pVtab	sqlite3.c	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor	file:
pVtab	sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtab	src/sqliteInt.h	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable
pVtab	src/vdbe.h	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::p4union
pVtab	tsrc/sqlite3.h	/^  sqlite3_vtab *pVtab;      \/* Virtual table of this cursor *\/$/;"	m	struct:sqlite3_vtab_cursor
pVtab	tsrc/sqliteInt.h	/^  sqlite3_vtab *pVtab;      \/* Pointer to vtab instance *\/$/;"	m	struct:VTable
pVtab	tsrc/vdbe.h	/^    VTable *pVtab;         \/* Used when p4type is P4_VTAB *\/$/;"	m	union:VdbeOp::p4union
pVtabCtx	sqlite3.c	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3	file:
pVtabCtx	src/sqliteInt.h	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3
pVtabCtx	tsrc/sqliteInt.h	/^  VtabCtx *pVtabCtx;            \/* Context for active vtab connect\/create *\/$/;"	m	struct:sqlite3
pWC	sqlite3.c	/^  WhereClause *pWC;          \/* WhereClause currently being scanned *\/$/;"	m	struct:WhereScan	file:
pWC	sqlite3.c	/^  WhereClause *pWC;         \/* WHERE clause terms *\/$/;"	m	struct:WhereLoopBuilder	file:
pWC	sqlite3.c	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm	file:
pWC	src/whereInt.h	/^  WhereClause *pWC;          \/* WhereClause currently being scanned *\/$/;"	m	struct:WhereScan
pWC	src/whereInt.h	/^  WhereClause *pWC;         \/* WHERE clause terms *\/$/;"	m	struct:WhereLoopBuilder
pWC	src/whereInt.h	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm
pWC	tsrc/whereInt.h	/^  WhereClause *pWC;          \/* WhereClause currently being scanned *\/$/;"	m	struct:WhereScan
pWC	tsrc/whereInt.h	/^  WhereClause *pWC;         \/* WHERE clause terms *\/$/;"	m	struct:WhereLoopBuilder
pWC	tsrc/whereInt.h	/^  WhereClause *pWC;       \/* The clause this term is part of *\/$/;"	m	struct:WhereTerm
pWInfo	sqlite3.c	/^  WhereInfo *pWInfo;        \/* Information about this WHERE *\/$/;"	m	struct:WhereLoopBuilder	file:
pWInfo	sqlite3.c	/^  WhereInfo *pWInfo;       \/* WHERE clause processing context *\/$/;"	m	struct:WhereClause	file:
pWInfo	src/whereInt.h	/^  WhereInfo *pWInfo;        \/* Information about this WHERE *\/$/;"	m	struct:WhereLoopBuilder
pWInfo	src/whereInt.h	/^  WhereInfo *pWInfo;       \/* WHERE clause processing context *\/$/;"	m	struct:WhereClause
pWInfo	tsrc/whereInt.h	/^  WhereInfo *pWInfo;        \/* Information about this WHERE *\/$/;"	m	struct:WhereLoopBuilder
pWInfo	tsrc/whereInt.h	/^  WhereInfo *pWInfo;       \/* WHERE clause processing context *\/$/;"	m	struct:WhereClause
pWLoop	sqlite3.c	/^  struct WhereLoop *pWLoop;  \/* The selected WhereLoop object *\/$/;"	m	struct:WhereLevel	typeref:struct:WhereLevel::WhereLoop	file:
pWLoop	src/whereInt.h	/^  struct WhereLoop *pWLoop;  \/* The selected WhereLoop object *\/$/;"	m	struct:WhereLevel	typeref:struct:WhereLevel::WhereLoop
pWLoop	tsrc/whereInt.h	/^  struct WhereLoop *pWLoop;  \/* The selected WhereLoop object *\/$/;"	m	struct:WhereLevel	typeref:struct:WhereLevel::WhereLoop
pWal	sqlite3.c	/^  Wal *pWal;                   \/* The complete WAL information *\/$/;"	m	struct:WalWriter	file:
pWal	sqlite3.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWal	src/pager.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWal	src/wal.c	/^  Wal *pWal;                   \/* The complete WAL information *\/$/;"	m	struct:WalWriter	file:
pWal	tsrc/pager.c	/^  Wal *pWal;                  \/* Write-ahead log used by "journal_mode=wal" *\/$/;"	m	struct:Pager	file:
pWal	tsrc/wal.c	/^  Wal *pWal;                   \/* The complete WAL information *\/$/;"	m	struct:WalWriter	file:
pWalArg	sqlite3.c	/^  void *pWalArg;$/;"	m	struct:sqlite3	file:
pWalArg	src/sqliteInt.h	/^  void *pWalArg;$/;"	m	struct:sqlite3
pWalArg	tsrc/sqliteInt.h	/^  void *pWalArg;$/;"	m	struct:sqlite3
pWalFd	ext/rbu/sqlite3rbu.c	/^  rbu_file *pWalFd;               \/* Wal file descriptor for this main db *\/$/;"	m	struct:rbu_file	file:
pWalFd	sqlite3.c	/^  rbu_file *pWalFd;               \/* Wal file descriptor for this main db *\/$/;"	m	struct:rbu_file	file:
pWalFd	sqlite3.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWalFd	src/wal.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWalFd	tsrc/sqlite3rbu.c	/^  rbu_file *pWalFd;               \/* Wal file descriptor for this main db *\/$/;"	m	struct:rbu_file	file:
pWalFd	tsrc/wal.c	/^  sqlite3_file *pWalFd;      \/* File handle for WAL file *\/$/;"	m	struct:Wal	file:
pWalHook	src/tclsqlite.c	/^  Tcl_Obj *pWalHook;         \/* WAL hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pWalHook	tsrc/tclsqlite.c	/^  Tcl_Obj *pWalHook;         \/* WAL hook script (if any) *\/$/;"	m	struct:SqliteDb	file:
pWhen	sqlite3.c	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger	file:
pWhen	src/sqliteInt.h	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger
pWhen	tsrc/sqliteInt.h	/^  Expr *pWhen;            \/* The WHEN clause of the expression (may be NULL) *\/$/;"	m	struct:Trigger
pWhere	sqlite3.c	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select	file:
pWhere	sqlite3.c	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep	file:
pWhere	src/sqliteInt.h	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select
pWhere	src/sqliteInt.h	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep
pWhere	tsrc/sqliteInt.h	/^  Expr *pWhere;          \/* The WHERE clause *\/$/;"	m	struct:Select
pWhere	tsrc/sqliteInt.h	/^  Expr *pWhere;        \/* The WHERE clause for DELETE or UPDATE steps *\/$/;"	m	struct:TriggerStep
pWith	sqlite3.c	/^  With *pWith;              \/* Current WITH clause, or NULL *\/$/;"	m	struct:Parse	file:
pWith	sqlite3.c	/^  With *pWith;           \/* WITH clause attached to this select. Or NULL. *\/$/;"	m	struct:Select	file:
pWith	src/sqliteInt.h	/^  With *pWith;              \/* Current WITH clause, or NULL *\/$/;"	m	struct:Parse
pWith	src/sqliteInt.h	/^  With *pWith;           \/* WITH clause attached to this select. Or NULL. *\/$/;"	m	struct:Select
pWith	tsrc/sqliteInt.h	/^  With *pWith;              \/* Current WITH clause, or NULL *\/$/;"	m	struct:Parse
pWith	tsrc/sqliteInt.h	/^  With *pWith;           \/* WITH clause attached to this select. Or NULL. *\/$/;"	m	struct:Select
pWithToFree	sqlite3.c	/^  With *pWithToFree;        \/* Free this WITH object at the end of the parse *\/$/;"	m	struct:Parse	file:
pWithToFree	src/sqliteInt.h	/^  With *pWithToFree;        \/* Free this WITH object at the end of the parse *\/$/;"	m	struct:Parse
pWithToFree	tsrc/sqliteInt.h	/^  With *pWithToFree;        \/* Free this WITH object at the end of the parse *\/$/;"	m	struct:Parse
pWord	ext/misc/amatch.c	/^  amatch_avl *pWord;         \/* amatch_word objects keyed by zWord *\/$/;"	m	struct:amatch_cursor	file:
pWord	ext/misc/amatch.c	/^  amatch_word *pWord;   \/* Points to the object being stored in the tree *\/$/;"	m	struct:amatch_avl	file:
pWrMutex	test/threadtest4.c	/^  pthread_mutex_t *pWrMutex;  \/* Hold this mutex while writing *\/$/;"	m	struct:WorkerInfo	file:
pWritable	src/test_journal.c	/^  Bitvec *pWritable;       \/* Bitvec of pages that may be written to the file *\/$/;"	m	struct:jt_file	file:
pWriteList	src/test6.c	/^  WriteBuffer *pWriteList;     \/* Head of write-list *\/$/;"	m	struct:CrashGlobal	file:
pWriteListEnd	src/test6.c	/^  WriteBuffer *pWriteListEnd;  \/* End of write-list *\/$/;"	m	struct:CrashGlobal	file:
pWriteNode	ext/rtree/rtree.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteNode	sqlite3.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteNode	tsrc/rtree.c	/^  sqlite3_stmt *pWriteNode;$/;"	m	struct:Rtree	file:
pWriteParent	ext/rtree/rtree.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteParent	sqlite3.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteParent	tsrc/rtree.c	/^  sqlite3_stmt *pWriteParent;$/;"	m	struct:Rtree	file:
pWriteRowid	ext/rtree/rtree.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriteRowid	sqlite3.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriteRowid	tsrc/rtree.c	/^  sqlite3_stmt *pWriteRowid;$/;"	m	struct:Rtree	file:
pWriter	ext/fts5/fts5_index.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pWriter	fts5.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pWriter	sqlite3.c	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared	file:
pWriter	sqlite3.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pWriter	src/btreeInt.h	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared
pWriter	tsrc/btreeInt.h	/^  Btree *pWriter;       \/* Btree with currently open write transaction *\/$/;"	m	struct:BtShared
pWriter	tsrc/fts5.c	/^  sqlite3_stmt *pWriter;          \/* "INSERT ... %_data VALUES(?,?)" *\/$/;"	m	struct:Fts5Index	file:
pZombieTab	sqlite3.c	/^  Table *pZombieTab;        \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse	file:
pZombieTab	src/sqliteInt.h	/^  Table *pZombieTab;        \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse
pZombieTab	tsrc/sqliteInt.h	/^  Table *pZombieTab;        \/* List of Table objects to delete after code gen *\/$/;"	m	struct:Parse
padToSectorBoundary	sqlite3.c	/^  u8 padToSectorBoundary;    \/* Pad transactions out to the next sector *\/$/;"	m	struct:Wal	file:
padToSectorBoundary	src/wal.c	/^  u8 padToSectorBoundary;    \/* Pad transactions out to the next sector *\/$/;"	m	struct:Wal	file:
padToSectorBoundary	tsrc/wal.c	/^  u8 padToSectorBoundary;    \/* Pad transactions out to the next sector *\/$/;"	m	struct:Wal	file:
padding1	sqlite3.c	/^  void *padding1;           \/* Make object size a multiple of 16 *\/$/;"	m	struct:BtCursor	file:
padding1	src/btreeInt.h	/^  void *padding1;           \/* Make object size a multiple of 16 *\/$/;"	m	struct:BtCursor
padding1	tsrc/btreeInt.h	/^  void *padding1;           \/* Make object size a multiple of 16 *\/$/;"	m	struct:BtCursor
page	sqlite3.c	/^  sqlite3_pcache_page page;      \/* Base class. Must be first. pBuf & pExtra *\/$/;"	m	struct:PgHdr1	file:
page	src/pcache1.c	/^  sqlite3_pcache_page page;      \/* Base class. Must be first. pBuf & pExtra *\/$/;"	m	struct:PgHdr1	file:
page	src/test_pcache.c	/^    sqlite3_pcache_page page;  \/* Base class *\/$/;"	m	struct:testpcache::testpcachePage	file:
page	tsrc/pcache1.c	/^  sqlite3_pcache_page page;      \/* Base class. Must be first. pBuf & pExtra *\/$/;"	m	struct:PgHdr1	file:
page1	ext/misc/scrub.c	/^  u8 *page1;               \/* Content of page 1 *\/$/;"	m	struct:ScrubState	file:
pageFindSlot	sqlite3.c	/^static u8 *pageFindSlot(MemPage *pPg, int nByte, int *pRc){$/;"	f	file:
pageFindSlot	src/btree.c	/^static u8 *pageFindSlot(MemPage *pPg, int nByte, int *pRc){$/;"	f	file:
pageFindSlot	tsrc/btree.c	/^static u8 *pageFindSlot(MemPage *pPg, int nByte, int *pRc){$/;"	f	file:
pageFreeArray	sqlite3.c	/^static int pageFreeArray($/;"	f	file:
pageFreeArray	src/btree.c	/^static int pageFreeArray($/;"	f	file:
pageFreeArray	tsrc/btree.c	/^static int pageFreeArray($/;"	f	file:
pageHash	sqlite3.c	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr	file:
pageHash	src/pcache.h	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr
pageHash	tsrc/pcache.h	/^  u32 pageHash;                  \/* Hash of page content *\/$/;"	m	struct:PgHdr
pageInJournal	sqlite3.c	/^static int pageInJournal(Pager *pPager, PgHdr *pPg){$/;"	f	file:
pageInJournal	src/pager.c	/^static int pageInJournal(Pager *pPager, PgHdr *pPg){$/;"	f	file:
pageInJournal	tsrc/pager.c	/^static int pageInJournal(Pager *pPager, PgHdr *pPg){$/;"	f	file:
pageInsertArray	sqlite3.c	/^static int pageInsertArray($/;"	f	file:
pageInsertArray	src/btree.c	/^static int pageInsertArray($/;"	f	file:
pageInsertArray	tsrc/btree.c	/^static int pageInsertArray($/;"	f	file:
pageReinit	sqlite3.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageReinit	src/btree.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageReinit	tsrc/btree.c	/^static void pageReinit(DbPage *pData){$/;"	f	file:
pageSize	sqlite3.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	sqlite3.c	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared	file:
pageSize	src/btreeInt.h	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared
pageSize	src/pager.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
pageSize	tool/showjournal.c	/^static int pageSize = 1024;$/;"	v	file:
pageSize	tsrc/btreeInt.h	/^  u32 pageSize;         \/* Total number of bytes on a page *\/$/;"	m	struct:BtShared
pageSize	tsrc/pager.c	/^  int pageSize;               \/* Number of bytes in a page *\/$/;"	m	struct:Pager	file:
page_get	src/test2.c	/^static int SQLITE_TCLAPI page_get($/;"	f	file:
page_info	tool/fragck.tcl	/^proc page_info {csr up} {$/;"	p
page_lookup	src/test2.c	/^static int SQLITE_TCLAPI page_lookup($/;"	f	file:
page_number	src/test2.c	/^static int SQLITE_TCLAPI page_number($/;"	f	file:
page_read	src/test2.c	/^static int SQLITE_TCLAPI page_read($/;"	f	file:
page_unref	src/test2.c	/^static int SQLITE_TCLAPI page_unref($/;"	f	file:
page_usage_btree	tool/showdb.c	/^static void page_usage_btree($/;"	f	file:
page_usage_cell	tool/showdb.c	/^static void page_usage_cell($/;"	f	file:
page_usage_freelist	tool/showdb.c	/^static void page_usage_freelist(int pgno){$/;"	f	file:
page_usage_msg	tool/showdb.c	/^static void page_usage_msg(int pgno, const char *zFormat, ...){$/;"	f	file:
page_usage_ptrmap	tool/showdb.c	/^static void page_usage_ptrmap(unsigned char *a){$/;"	f	file:
page_usage_report	tool/showdb.c	/^static void page_usage_report(const char *zPrg, const char *zDbName){$/;"	f	file:
page_write	src/test2.c	/^static int SQLITE_TCLAPI page_write($/;"	f	file:
pagerAcquireMapPage	sqlite3.c	/^static int pagerAcquireMapPage($/;"	f	file:
pagerAcquireMapPage	src/pager.c	/^static int pagerAcquireMapPage($/;"	f	file:
pagerAcquireMapPage	tsrc/pager.c	/^static int pagerAcquireMapPage($/;"	f	file:
pagerAddPageToRollbackJournal	sqlite3.c	/^static SQLITE_NOINLINE int pagerAddPageToRollbackJournal(PgHdr *pPg){$/;"	f	file:
pagerAddPageToRollbackJournal	src/pager.c	/^static SQLITE_NOINLINE int pagerAddPageToRollbackJournal(PgHdr *pPg){$/;"	f	file:
pagerAddPageToRollbackJournal	tsrc/pager.c	/^static SQLITE_NOINLINE int pagerAddPageToRollbackJournal(PgHdr *pPg){$/;"	f	file:
pagerBeginReadTransaction	sqlite3.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	sqlite3.c	47105;"	d	file:
pagerBeginReadTransaction	src/pager.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	src/pager.c	828;"	d	file:
pagerBeginReadTransaction	tsrc/pager.c	/^static int pagerBeginReadTransaction(Pager *pPager){$/;"	f	file:
pagerBeginReadTransaction	tsrc/pager.c	828;"	d	file:
pagerExclusiveLock	sqlite3.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerExclusiveLock	src/pager.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerExclusiveLock	tsrc/pager.c	/^static int pagerExclusiveLock(Pager *pPager){$/;"	f	file:
pagerFixMaplimit	sqlite3.c	/^static void pagerFixMaplimit(Pager *pPager){$/;"	f	file:
pagerFixMaplimit	src/pager.c	/^static void pagerFixMaplimit(Pager *pPager){$/;"	f	file:
pagerFixMaplimit	tsrc/pager.c	/^static void pagerFixMaplimit(Pager *pPager){$/;"	f	file:
pagerFlushOnCommit	sqlite3.c	/^static int pagerFlushOnCommit(Pager *pPager, int bCommit){$/;"	f	file:
pagerFlushOnCommit	src/pager.c	/^static int pagerFlushOnCommit(Pager *pPager, int bCommit){$/;"	f	file:
pagerFlushOnCommit	tsrc/pager.c	/^static int pagerFlushOnCommit(Pager *pPager, int bCommit){$/;"	f	file:
pagerFreeMapHdrs	sqlite3.c	/^static void pagerFreeMapHdrs(Pager *pPager){$/;"	f	file:
pagerFreeMapHdrs	src/pager.c	/^static void pagerFreeMapHdrs(Pager *pPager){$/;"	f	file:
pagerFreeMapHdrs	tsrc/pager.c	/^static void pagerFreeMapHdrs(Pager *pPager){$/;"	f	file:
pagerLockDb	sqlite3.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerLockDb	src/pager.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerLockDb	tsrc/pager.c	/^static int pagerLockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerOpenSavepoint	sqlite3.c	/^static SQLITE_NOINLINE int pagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f	file:
pagerOpenSavepoint	src/pager.c	/^static SQLITE_NOINLINE int pagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f	file:
pagerOpenSavepoint	tsrc/pager.c	/^static SQLITE_NOINLINE int pagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f	file:
pagerOpenWal	sqlite3.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWal	src/pager.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWal	tsrc/pager.c	/^static int pagerOpenWal(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	sqlite3.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	sqlite3.c	47104;"	d	file:
pagerOpenWalIfPresent	src/pager.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	src/pager.c	827;"	d	file:
pagerOpenWalIfPresent	tsrc/pager.c	/^static int pagerOpenWalIfPresent(Pager *pPager){$/;"	f	file:
pagerOpenWalIfPresent	tsrc/pager.c	827;"	d	file:
pagerOpentemp	sqlite3.c	/^static int pagerOpentemp($/;"	f	file:
pagerOpentemp	src/pager.c	/^static int pagerOpentemp($/;"	f	file:
pagerOpentemp	tsrc/pager.c	/^static int pagerOpentemp($/;"	f	file:
pagerPagecount	sqlite3.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPagecount	src/pager.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPagecount	tsrc/pager.c	/^static int pagerPagecount(Pager *pPager, Pgno *pnPage){$/;"	f	file:
pagerPlaybackSavepoint	sqlite3.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerPlaybackSavepoint	src/pager.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerPlaybackSavepoint	tsrc/pager.c	/^static int pagerPlaybackSavepoint(Pager *pPager, PagerSavepoint *pSavepoint){$/;"	f	file:
pagerReleaseMapPage	sqlite3.c	/^static void pagerReleaseMapPage(PgHdr *pPg){$/;"	f	file:
pagerReleaseMapPage	src/pager.c	/^static void pagerReleaseMapPage(PgHdr *pPg){$/;"	f	file:
pagerReleaseMapPage	tsrc/pager.c	/^static void pagerReleaseMapPage(PgHdr *pPg){$/;"	f	file:
pagerReportSize	sqlite3.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	sqlite3.c	48433;"	d	file:
pagerReportSize	src/pager.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	src/pager.c	2156;"	d	file:
pagerReportSize	tsrc/pager.c	/^static void pagerReportSize(Pager *pPager){$/;"	f	file:
pagerReportSize	tsrc/pager.c	2156;"	d	file:
pagerRollbackWal	sqlite3.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	sqlite3.c	47102;"	d	file:
pagerRollbackWal	src/pager.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	src/pager.c	825;"	d	file:
pagerRollbackWal	tsrc/pager.c	/^static int pagerRollbackWal(Pager *pPager){$/;"	f	file:
pagerRollbackWal	tsrc/pager.c	825;"	d	file:
pagerStress	sqlite3.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerStress	src/pager.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerStress	tsrc/pager.c	/^static int pagerStress(void *p, PgHdr *pPg){$/;"	f	file:
pagerSyncHotJournal	sqlite3.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerSyncHotJournal	src/pager.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerSyncHotJournal	tsrc/pager.c	/^static int pagerSyncHotJournal(Pager *pPager){$/;"	f	file:
pagerUndoCallback	sqlite3.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUndoCallback	src/pager.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUndoCallback	tsrc/pager.c	/^static int pagerUndoCallback(void *pCtx, Pgno iPg){$/;"	f	file:
pagerUnlockAndRollback	sqlite3.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockAndRollback	src/pager.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockAndRollback	tsrc/pager.c	/^static void pagerUnlockAndRollback(Pager *pPager){$/;"	f	file:
pagerUnlockDb	sqlite3.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockDb	src/pager.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockDb	tsrc/pager.c	/^static int pagerUnlockDb(Pager *pPager, int eLock){$/;"	f	file:
pagerUnlockIfUnused	sqlite3.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUnlockIfUnused	src/pager.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUnlockIfUnused	tsrc/pager.c	/^static void pagerUnlockIfUnused(Pager *pPager){$/;"	f	file:
pagerUseWal	sqlite3.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	sqlite3.c	47101;"	d	file:
pagerUseWal	src/pager.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	src/pager.c	824;"	d	file:
pagerUseWal	tsrc/pager.c	/^static int pagerUseWal(Pager *pPager){$/;"	f	file:
pagerUseWal	tsrc/pager.c	824;"	d	file:
pagerWalFrames	sqlite3.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	sqlite3.c	47103;"	d	file:
pagerWalFrames	src/pager.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	src/pager.c	826;"	d	file:
pagerWalFrames	tsrc/pager.c	/^static int pagerWalFrames($/;"	f	file:
pagerWalFrames	tsrc/pager.c	826;"	d	file:
pagerWriteLargeSector	sqlite3.c	/^static SQLITE_NOINLINE int pagerWriteLargeSector(PgHdr *pPg){$/;"	f	file:
pagerWriteLargeSector	src/pager.c	/^static SQLITE_NOINLINE int pagerWriteLargeSector(PgHdr *pPg){$/;"	f	file:
pagerWriteLargeSector	tsrc/pager.c	/^static SQLITE_NOINLINE int pagerWriteLargeSector(PgHdr *pPg){$/;"	f	file:
pager_cksum	sqlite3.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_cksum	src/pager.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_cksum	tsrc/pager.c	/^static u32 pager_cksum(Pager *pPager, const u8 *aData){$/;"	f	file:
pager_close	src/test2.c	/^static int SQLITE_TCLAPI pager_close($/;"	f	file:
pager_commit	src/test2.c	/^static int SQLITE_TCLAPI pager_commit($/;"	f	file:
pager_datahash	sqlite3.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	sqlite3.c	47492;"	d	file:
pager_datahash	src/pager.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	src/pager.c	1215;"	d	file:
pager_datahash	tsrc/pager.c	/^static u32 pager_datahash(int nByte, unsigned char *pData){$/;"	f	file:
pager_datahash	tsrc/pager.c	1215;"	d	file:
pager_delmaster	sqlite3.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_delmaster	src/pager.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_delmaster	tsrc/pager.c	/^static int pager_delmaster(Pager *pPager, const char *zMaster){$/;"	f	file:
pager_end_transaction	sqlite3.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster, int bCommit){$/;"	f	file:
pager_end_transaction	src/pager.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster, int bCommit){$/;"	f	file:
pager_end_transaction	tsrc/pager.c	/^static int pager_end_transaction(Pager *pPager, int hasMaster, int bCommit){$/;"	f	file:
pager_error	sqlite3.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_error	src/pager.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_error	tsrc/pager.c	/^static int pager_error(Pager *pPager, int rc){$/;"	f	file:
pager_incr_changecounter	sqlite3.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_incr_changecounter	src/pager.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_incr_changecounter	tsrc/pager.c	/^static int pager_incr_changecounter(Pager *pPager, int isDirectMode){$/;"	f	file:
pager_open	src/test2.c	/^static int SQLITE_TCLAPI pager_open($/;"	f	file:
pager_open_journal	sqlite3.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_open_journal	src/pager.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_open_journal	tsrc/pager.c	/^static int pager_open_journal(Pager *pPager){$/;"	f	file:
pager_pagecount	src/test2.c	/^static int SQLITE_TCLAPI pager_pagecount($/;"	f	file:
pager_pagehash	sqlite3.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	sqlite3.c	47493;"	d	file:
pager_pagehash	src/pager.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	src/pager.c	1216;"	d	file:
pager_pagehash	tsrc/pager.c	/^static u32 pager_pagehash(PgHdr *pPage){$/;"	f	file:
pager_pagehash	tsrc/pager.c	1216;"	d	file:
pager_playback	sqlite3.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback	src/pager.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback	tsrc/pager.c	/^static int pager_playback(Pager *pPager, int isHot){$/;"	f	file:
pager_playback_one_page	sqlite3.c	/^static int pager_playback_one_page($/;"	f	file:
pager_playback_one_page	src/pager.c	/^static int pager_playback_one_page($/;"	f	file:
pager_playback_one_page	tsrc/pager.c	/^static int pager_playback_one_page($/;"	f	file:
pager_reset	sqlite3.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_reset	src/pager.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_reset	tsrc/pager.c	/^static void pager_reset(Pager *pPager){$/;"	f	file:
pager_rollback	src/test2.c	/^static int SQLITE_TCLAPI pager_rollback($/;"	f	file:
pager_set_pagehash	sqlite3.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	sqlite3.c	47494;"	d	file:
pager_set_pagehash	src/pager.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	src/pager.c	1217;"	d	file:
pager_set_pagehash	tsrc/pager.c	/^static void pager_set_pagehash(PgHdr *pPage){$/;"	f	file:
pager_set_pagehash	tsrc/pager.c	1217;"	d	file:
pager_stats	src/test2.c	/^static int SQLITE_TCLAPI pager_stats($/;"	f	file:
pager_stmt_begin	src/test2.c	/^static int SQLITE_TCLAPI pager_stmt_begin($/;"	f	file:
pager_stmt_commit	src/test2.c	/^static int SQLITE_TCLAPI pager_stmt_commit($/;"	f	file:
pager_stmt_rollback	src/test2.c	/^static int SQLITE_TCLAPI pager_stmt_rollback($/;"	f	file:
pager_test_reiniter	src/test2.c	/^static void pager_test_reiniter(DbPage *pNotUsed){$/;"	f	file:
pager_truncate	sqlite3.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_truncate	src/pager.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_truncate	src/test2.c	/^static int SQLITE_TCLAPI pager_truncate($/;"	f	file:
pager_truncate	tsrc/pager.c	/^static int pager_truncate(Pager *pPager, Pgno nPage){$/;"	f	file:
pager_unlock	sqlite3.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_unlock	src/pager.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_unlock	tsrc/pager.c	/^static void pager_unlock(Pager *pPager){$/;"	f	file:
pager_wait_on_lock	sqlite3.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_wait_on_lock	src/pager.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_wait_on_lock	tsrc/pager.c	/^static int pager_wait_on_lock(Pager *pPager, int locktype){$/;"	f	file:
pager_write	sqlite3.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write	src/pager.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write	tsrc/pager.c	/^static int pager_write(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	sqlite3.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	src/pager.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_changecounter	tsrc/pager.c	/^static void pager_write_changecounter(PgHdr *pPg){$/;"	f	file:
pager_write_pagelist	sqlite3.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pager_write_pagelist	src/pager.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pager_write_pagelist	tsrc/pager.c	/^static int pager_write_pagelist(Pager *pPager, PgHdr *pList){$/;"	f	file:
pagesize	tool/showdb.c	/^  int pagesize;                   \/* Size of a database page *\/$/;"	m	struct:GlobalData	file:
pagesize	tool/showwal.c	/^static int pagesize = 1024;     \/* Size of a database page *\/$/;"	v	file:
parent	src/test_thread.c	/^  Tcl_ThreadId parent;     \/* Thread id of parent thread *\/$/;"	m	struct:SqlThread	file:
parentWrite	ext/rtree/rtree.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parentWrite	sqlite3.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parentWrite	tsrc/rtree.c	/^static int parentWrite(Rtree *pRtree, sqlite3_int64 iNode, sqlite3_int64 iPar){$/;"	f	file:
parentWriter	ext/fts2/fts2.c	/^  InteriorWriter parentWriter;    \/* if we overflow *\/$/;"	m	struct:LeafWriter	file:
parentWriter	ext/fts2/fts2.c	/^  struct InteriorWriter *parentWriter;$/;"	m	struct:InteriorWriter	typeref:struct:InteriorWriter::InteriorWriter	file:
parentWriter	tsrc/fts2.c	/^  InteriorWriter parentWriter;    \/* if we overflow *\/$/;"	m	struct:LeafWriter	file:
parentWriter	tsrc/fts2.c	/^  struct InteriorWriter *parentWriter;$/;"	m	struct:InteriorWriter	typeref:struct:InteriorWriter::InteriorWriter	file:
parseDateOrTime	sqlite3.c	/^static int parseDateOrTime($/;"	f	file:
parseDateOrTime	src/date.c	/^static int parseDateOrTime($/;"	f	file:
parseDateOrTime	tsrc/date.c	/^static int parseDateOrTime($/;"	f	file:
parseHhMmSs	sqlite3.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseHhMmSs	src/date.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseHhMmSs	tsrc/date.c	/^static int parseHhMmSs(const char *zDate, DateTime *p){$/;"	f	file:
parseModifier	sqlite3.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseModifier	src/date.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseModifier	tsrc/date.c	/^static int parseModifier(sqlite3_context *pCtx, const char *zMod, DateTime *p){$/;"	f	file:
parseQuery	ext/fts1/fts1.c	/^static int parseQuery($/;"	f	file:
parseQuery	ext/fts2/fts2.c	/^static int parseQuery($/;"	f	file:
parseQuery	tsrc/fts1.c	/^static int parseQuery($/;"	f	file:
parseQuery	tsrc/fts2.c	/^static int parseQuery($/;"	f	file:
parseSpec	ext/fts1/fts1.c	/^static int parseSpec(TableSpec *pSpec, int argc, const char *const*argv,$/;"	f	file:
parseSpec	ext/fts2/fts2.c	/^static int parseSpec(TableSpec *pSpec, int argc, const char *const*argv,$/;"	f	file:
parseSpec	tsrc/fts1.c	/^static int parseSpec(TableSpec *pSpec, int argc, const char *const*argv,$/;"	f	file:
parseSpec	tsrc/fts2.c	/^static int parseSpec(TableSpec *pSpec, int argc, const char *const*argv,$/;"	f	file:
parseTimezone	sqlite3.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseTimezone	src/date.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseTimezone	tsrc/date.c	/^static int parseTimezone(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	sqlite3.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	src/date.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parseYyyyMmDd	tsrc/date.c	/^static int parseYyyyMmDd(const char *zDate, DateTime *p){$/;"	f	file:
parse_client_id	src/test7.c	/^static int parse_client_id(Tcl_Interp *interp, const char *zArg){$/;"	f	file:
parse_query	ext/fts1/fulltext.c	/^static int parse_query(fulltext_vtab *v, const char *zQuery, Query *pQuery){$/;"	f	file:
parse_thread_id	src/test4.c	/^static int parse_thread_id(Tcl_Interp *interp, const char *zArg){$/;"	f	file:
parseonetoken	tool/lemon.c	/^static void parseonetoken(struct pstate *psp)$/;"	f	file:
parserAddExprIdListTerm	parse.c	/^  static ExprList *parserAddExprIdListTerm($/;"	f	file:
parserAddExprIdListTerm	sqlite3.c	/^  static ExprList *parserAddExprIdListTerm($/;"	f	file:
parserAddExprIdListTerm	tsrc/parse.c	/^  static ExprList *parserAddExprIdListTerm($/;"	f	file:
parserDoubleLinkSelect	parse.c	/^  static void parserDoubleLinkSelect(Parse *pParse, Select *p){$/;"	f	file:
parserDoubleLinkSelect	sqlite3.c	/^  static void parserDoubleLinkSelect(Parse *pParse, Select *p){$/;"	f	file:
parserDoubleLinkSelect	tsrc/parse.c	/^  static void parserDoubleLinkSelect(Parse *pParse, Select *p){$/;"	f	file:
pathsearch	tool/lemon.c	/^PRIVATE char *pathsearch(char *argv0, char *name, int modemask)$/;"	f
patternCompare	sqlite3.c	/^static int patternCompare($/;"	f	file:
patternCompare	src/func.c	/^static int patternCompare($/;"	f	file:
patternCompare	tsrc/func.c	/^static int patternCompare($/;"	f	file:
payloadSize	sqlite3.c	/^  u32 payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor	file:
payloadSize	src/vdbeInt.h	/^  u32 payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor
payloadSize	tsrc/vdbeInt.h	/^  u32 payloadSize;      \/* Total number of bytes in the record *\/$/;"	m	struct:VdbeCursor
pc	sqlite3.c	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame	file:
pc	sqlite3.c	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe	file:
pc	src/vdbeInt.h	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame
pc	src/vdbeInt.h	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe
pc	tsrc/vdbeInt.h	/^  int pc;                 \/* Program Counter in parent (calling) frame *\/$/;"	m	struct:VdbeFrame
pc	tsrc/vdbeInt.h	/^  int pc;                 \/* The program counter *\/$/;"	m	struct:Vdbe
pcache	src/test_init.c	/^  sqlite3_pcache_methods2 pcache;$/;"	m	struct:Wrapped	file:
pcache1	sqlite3.c	44582;"	d	file:
pcache1	src/pcache1.c	216;"	d	file:
pcache1	tsrc/pcache1.c	216;"	d	file:
pcache1Alloc	sqlite3.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1Alloc	src/pcache1.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1Alloc	tsrc/pcache1.c	/^static void *pcache1Alloc(int nByte){$/;"	f	file:
pcache1AllocPage	sqlite3.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache, int benignMalloc){$/;"	f	file:
pcache1AllocPage	src/pcache1.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache, int benignMalloc){$/;"	f	file:
pcache1AllocPage	tsrc/pcache1.c	/^static PgHdr1 *pcache1AllocPage(PCache1 *pCache, int benignMalloc){$/;"	f	file:
pcache1Cachesize	sqlite3.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Cachesize	src/pcache1.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Cachesize	tsrc/pcache1.c	/^static void pcache1Cachesize(sqlite3_pcache *p, int nMax){$/;"	f	file:
pcache1Create	sqlite3.c	/^static sqlite3_pcache *pcache1Create(int szPage, int szExtra, int bPurgeable){$/;"	f	file:
pcache1Create	src/pcache1.c	/^static sqlite3_pcache *pcache1Create(int szPage, int szExtra, int bPurgeable){$/;"	f	file:
pcache1Create	tsrc/pcache1.c	/^static sqlite3_pcache *pcache1Create(int szPage, int szExtra, int bPurgeable){$/;"	f	file:
pcache1Destroy	sqlite3.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1Destroy	src/pcache1.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1Destroy	tsrc/pcache1.c	/^static void pcache1Destroy(sqlite3_pcache *p){$/;"	f	file:
pcache1EnforceMaxPage	sqlite3.c	/^static void pcache1EnforceMaxPage(PCache1 *pCache){$/;"	f	file:
pcache1EnforceMaxPage	src/pcache1.c	/^static void pcache1EnforceMaxPage(PCache1 *pCache){$/;"	f	file:
pcache1EnforceMaxPage	tsrc/pcache1.c	/^static void pcache1EnforceMaxPage(PCache1 *pCache){$/;"	f	file:
pcache1EnterMutex	sqlite3.c	44588;"	d	file:
pcache1EnterMutex	sqlite3.c	44592;"	d	file:
pcache1EnterMutex	src/pcache1.c	222;"	d	file:
pcache1EnterMutex	src/pcache1.c	226;"	d	file:
pcache1EnterMutex	tsrc/pcache1.c	222;"	d	file:
pcache1EnterMutex	tsrc/pcache1.c	226;"	d	file:
pcache1Fetch	sqlite3.c	/^static sqlite3_pcache_page *pcache1Fetch($/;"	f	file:
pcache1Fetch	src/pcache1.c	/^static sqlite3_pcache_page *pcache1Fetch($/;"	f	file:
pcache1Fetch	tsrc/pcache1.c	/^static sqlite3_pcache_page *pcache1Fetch($/;"	f	file:
pcache1FetchNoMutex	sqlite3.c	/^static PgHdr1 *pcache1FetchNoMutex($/;"	f	file:
pcache1FetchNoMutex	src/pcache1.c	/^static PgHdr1 *pcache1FetchNoMutex($/;"	f	file:
pcache1FetchNoMutex	tsrc/pcache1.c	/^static PgHdr1 *pcache1FetchNoMutex($/;"	f	file:
pcache1FetchStage2	sqlite3.c	/^static SQLITE_NOINLINE PgHdr1 *pcache1FetchStage2($/;"	f	file:
pcache1FetchStage2	src/pcache1.c	/^static SQLITE_NOINLINE PgHdr1 *pcache1FetchStage2($/;"	f	file:
pcache1FetchStage2	tsrc/pcache1.c	/^static SQLITE_NOINLINE PgHdr1 *pcache1FetchStage2($/;"	f	file:
pcache1FetchWithMutex	sqlite3.c	/^static PgHdr1 *pcache1FetchWithMutex($/;"	f	file:
pcache1FetchWithMutex	src/pcache1.c	/^static PgHdr1 *pcache1FetchWithMutex($/;"	f	file:
pcache1FetchWithMutex	tsrc/pcache1.c	/^static PgHdr1 *pcache1FetchWithMutex($/;"	f	file:
pcache1Free	sqlite3.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1Free	src/pcache1.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1Free	tsrc/pcache1.c	/^static void pcache1Free(void *p){$/;"	f	file:
pcache1FreePage	sqlite3.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1FreePage	src/pcache1.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1FreePage	tsrc/pcache1.c	/^static void pcache1FreePage(PgHdr1 *p){$/;"	f	file:
pcache1Init	sqlite3.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1Init	src/pcache1.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1Init	tsrc/pcache1.c	/^static int pcache1Init(void *NotUsed){$/;"	f	file:
pcache1InitBulk	sqlite3.c	/^static int pcache1InitBulk(PCache1 *pCache){$/;"	f	file:
pcache1InitBulk	src/pcache1.c	/^static int pcache1InitBulk(PCache1 *pCache){$/;"	f	file:
pcache1InitBulk	tsrc/pcache1.c	/^static int pcache1InitBulk(PCache1 *pCache){$/;"	f	file:
pcache1LeaveMutex	sqlite3.c	44589;"	d	file:
pcache1LeaveMutex	sqlite3.c	44593;"	d	file:
pcache1LeaveMutex	src/pcache1.c	223;"	d	file:
pcache1LeaveMutex	src/pcache1.c	227;"	d	file:
pcache1LeaveMutex	tsrc/pcache1.c	223;"	d	file:
pcache1LeaveMutex	tsrc/pcache1.c	227;"	d	file:
pcache1MemSize	sqlite3.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1MemSize	src/pcache1.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1MemSize	tsrc/pcache1.c	/^static int pcache1MemSize(void *p){$/;"	f	file:
pcache1Pagecount	sqlite3.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1Pagecount	src/pcache1.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1Pagecount	tsrc/pcache1.c	/^static int pcache1Pagecount(sqlite3_pcache *p){$/;"	f	file:
pcache1PinPage	sqlite3.c	/^static PgHdr1 *pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1PinPage	src/pcache1.c	/^static PgHdr1 *pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1PinPage	tsrc/pcache1.c	/^static PgHdr1 *pcache1PinPage(PgHdr1 *pPage){$/;"	f	file:
pcache1Rekey	sqlite3.c	/^static void pcache1Rekey($/;"	f	file:
pcache1Rekey	src/pcache1.c	/^static void pcache1Rekey($/;"	f	file:
pcache1Rekey	tsrc/pcache1.c	/^static void pcache1Rekey($/;"	f	file:
pcache1RemoveFromHash	sqlite3.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage, int freeFlag){$/;"	f	file:
pcache1RemoveFromHash	src/pcache1.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage, int freeFlag){$/;"	f	file:
pcache1RemoveFromHash	tsrc/pcache1.c	/^static void pcache1RemoveFromHash(PgHdr1 *pPage, int freeFlag){$/;"	f	file:
pcache1ResizeHash	sqlite3.c	/^static void pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1ResizeHash	src/pcache1.c	/^static void pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1ResizeHash	tsrc/pcache1.c	/^static void pcache1ResizeHash(PCache1 *p){$/;"	f	file:
pcache1Shrink	sqlite3.c	/^static void pcache1Shrink(sqlite3_pcache *p){$/;"	f	file:
pcache1Shrink	src/pcache1.c	/^static void pcache1Shrink(sqlite3_pcache *p){$/;"	f	file:
pcache1Shrink	tsrc/pcache1.c	/^static void pcache1Shrink(sqlite3_pcache *p){$/;"	f	file:
pcache1Shutdown	sqlite3.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Shutdown	src/pcache1.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Shutdown	tsrc/pcache1.c	/^static void pcache1Shutdown(void *NotUsed){$/;"	f	file:
pcache1Truncate	sqlite3.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1Truncate	src/pcache1.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1Truncate	tsrc/pcache1.c	/^static void pcache1Truncate(sqlite3_pcache *p, unsigned int iLimit){$/;"	f	file:
pcache1TruncateUnsafe	sqlite3.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1TruncateUnsafe	src/pcache1.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1TruncateUnsafe	tsrc/pcache1.c	/^static void pcache1TruncateUnsafe($/;"	f	file:
pcache1UnderMemoryPressure	sqlite3.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1UnderMemoryPressure	src/pcache1.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1UnderMemoryPressure	tsrc/pcache1.c	/^static int pcache1UnderMemoryPressure(PCache1 *pCache){$/;"	f	file:
pcache1Unpin	sqlite3.c	/^static void pcache1Unpin($/;"	f	file:
pcache1Unpin	src/pcache1.c	/^static void pcache1Unpin($/;"	f	file:
pcache1Unpin	tsrc/pcache1.c	/^static void pcache1Unpin($/;"	f	file:
pcache1_g	sqlite3.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcache1_g	src/pcache1.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcache1_g	tsrc/pcache1.c	/^} pcache1_g;$/;"	v	typeref:struct:PCacheGlobal	file:
pcache2	sqlite3.c	/^  sqlite3_pcache_methods2 pcache2;  \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config	file:
pcache2	src/sqliteInt.h	/^  sqlite3_pcache_methods2 pcache2;  \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config
pcache2	tsrc/sqliteInt.h	/^  sqlite3_pcache_methods2 pcache2;  \/* Low-level page-cache interface *\/$/;"	m	struct:Sqlite3Config
pcacheDump	sqlite3.c	/^  void pcacheDump(PCache *pCache){$/;"	f
pcacheDump	sqlite3.c	43585;"	d	file:
pcacheDump	src/pcache.c	/^  void pcacheDump(PCache *pCache){$/;"	f
pcacheDump	src/pcache.c	95;"	d	file:
pcacheDump	tsrc/pcache.c	/^  void pcacheDump(PCache *pCache){$/;"	f
pcacheDump	tsrc/pcache.c	95;"	d	file:
pcacheFetchFinishWithInit	sqlite3.c	/^static SQLITE_NOINLINE PgHdr *pcacheFetchFinishWithInit($/;"	f	file:
pcacheFetchFinishWithInit	src/pcache.c	/^static SQLITE_NOINLINE PgHdr *pcacheFetchFinishWithInit($/;"	f	file:
pcacheFetchFinishWithInit	tsrc/pcache.c	/^static SQLITE_NOINLINE PgHdr *pcacheFetchFinishWithInit($/;"	f	file:
pcacheManageDirtyList	sqlite3.c	/^static void pcacheManageDirtyList(PgHdr *pPage, u8 addRemove){$/;"	f	file:
pcacheManageDirtyList	src/pcache.c	/^static void pcacheManageDirtyList(PgHdr *pPage, u8 addRemove){$/;"	f	file:
pcacheManageDirtyList	tsrc/pcache.c	/^static void pcacheManageDirtyList(PgHdr *pPage, u8 addRemove){$/;"	f	file:
pcacheMergeDirtyList	sqlite3.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheMergeDirtyList	src/pcache.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheMergeDirtyList	tsrc/pcache.c	/^static PgHdr *pcacheMergeDirtyList(PgHdr *pA, PgHdr *pB){$/;"	f	file:
pcacheSortDirtyList	sqlite3.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheSortDirtyList	src/pcache.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheSortDirtyList	tsrc/pcache.c	/^static PgHdr *pcacheSortDirtyList(PgHdr *pIn){$/;"	f	file:
pcacheTrace	sqlite3.c	43558;"	d	file:
pcacheTrace	sqlite3.c	43584;"	d	file:
pcacheTrace	src/pcache.c	68;"	d	file:
pcacheTrace	src/pcache.c	94;"	d	file:
pcacheTrace	tsrc/pcache.c	68;"	d	file:
pcacheTrace	tsrc/pcache.c	94;"	d	file:
pcacheUnpin	sqlite3.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pcacheUnpin	src/pcache.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pcacheUnpin	tsrc/pcache.c	/^static void pcacheUnpin(PgHdr *p){$/;"	f	file:
pcache_fail	src/test_init.c	/^  int pcache_fail;             \/* True to fail pcache subsystem inialization *\/$/;"	m	struct:Wrapped	file:
pcache_init	src/test_init.c	/^  int pcache_init;             \/* True if pcache subsystem is initalized *\/$/;"	m	struct:Wrapped	file:
pclose	shell.c	110;"	d	file:
pclose	shell.c	111;"	d	file:
pclose	src/shell.c	110;"	d	file:
pclose	src/shell.c	111;"	d	file:
pclose	tsrc/shell.c	110;"	d	file:
pclose	tsrc/shell.c	111;"	d	file:
peekDocid	ext/fts1/fts1.c	/^static sqlite_int64 peekDocid(DocListReader *pReader){$/;"	f	file:
peekDocid	ext/fts1/fulltext.c	/^static sqlite_int64 peekDocid(DocListReader *pReader){$/;"	f	file:
peekDocid	tsrc/fts1.c	/^static sqlite_int64 peekDocid(DocListReader *pReader){$/;"	f	file:
pendingTerms	ext/fts2/fts2.c	/^  fts2Hash pendingTerms;$/;"	m	struct:fulltext_vtab	file:
pendingTerms	tsrc/fts2.c	/^  fts2Hash pendingTerms;$/;"	m	struct:fulltext_vtab	file:
perLine	tool/showdb.c	/^  int perLine;                    \/* HEX elements to print per line *\/$/;"	m	struct:GlobalData	file:
perLine	tool/showwal.c	/^static int perLine = 16;        \/* HEX elements to print per line *\/$/;"	v	file:
percent	tool/spaceanal.tcl	/^proc percent {num denom {of {}}} {$/;"	p
percentFinal	ext/misc/percentile.c	/^static void percentFinal(sqlite3_context *pCtx){$/;"	f	file:
percentStep	ext/misc/percentile.c	/^static void percentStep(sqlite3_context *pCtx, int argc, sqlite3_value **argv){$/;"	f	file:
permutation	test/tester.tcl	/^proc permutation {} {$/;"	p
pgidx	ext/fts5/fts5_index.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgidx	fts5.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgidx	sqlite3.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgidx	tsrc/fts5.c	/^  Fts5Buffer pgidx;               \/* Buffer containing page-index *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	ext/fts5/fts5_index.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	ext/fts5/fts5_index.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	fts5.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	fts5.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	sqlite3.c	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr	file:
pgno	sqlite3.c	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage	file:
pgno	sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	sqlite3.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	src/btreeInt.h	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage
pgno	src/pcache.h	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr
pgno	tool/offsets.c	/^  int pgno;             \/* Current page number *\/$/;"	m	struct:GState	file:
pgno	tsrc/btreeInt.h	/^  Pgno pgno;           \/* Page number for this page *\/$/;"	m	struct:MemPage
pgno	tsrc/fts5.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5DlidxWriter	file:
pgno	tsrc/fts5.c	/^  int pgno;                       \/* Page number for this page *\/$/;"	m	struct:Fts5PageWriter	file:
pgno	tsrc/pcache.h	/^  Pgno pgno;                     \/* Page number for this page *\/$/;"	m	struct:PgHdr
pgnoFirst	ext/fts5/fts5_index.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoFirst	fts5.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoFirst	sqlite3.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoFirst	tsrc/fts5.c	/^  int pgnoFirst;                  \/* First leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	ext/fts5/fts5_index.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	fts5.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	sqlite3.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoLast	tsrc/fts5.c	/^  int pgnoLast;                   \/* Last leaf page number in segment *\/$/;"	m	struct:Fts5StructureSegment	file:
pgnoRoot	sqlite3.c	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor	file:
pgnoRoot	sqlite3.c	/^  Pgno pgnoRoot;        \/* Root page of the open btree cursor *\/$/;"	m	struct:VdbeCursor	file:
pgnoRoot	src/btreeInt.h	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor
pgnoRoot	src/vdbeInt.h	/^  Pgno pgnoRoot;        \/* Root page of the open btree cursor *\/$/;"	m	struct:VdbeCursor
pgnoRoot	tsrc/btreeInt.h	/^  Pgno pgnoRoot;            \/* The root page of this tree *\/$/;"	m	struct:BtCursor
pgnoRoot	tsrc/vdbeInt.h	/^  Pgno pgnoRoot;        \/* Root page of the open btree cursor *\/$/;"	m	struct:VdbeCursor
pgsz	ext/fts5/fts5Int.h	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config
pgsz	ext/rbu/sqlite3rbu.c	/^  int pgsz;$/;"	m	struct:sqlite3rbu	file:
pgsz	fts5.c	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config	file:
pgsz	sqlite3.c	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config	file:
pgsz	sqlite3.c	/^  int pgsz;                       \/* Main database page size *\/$/;"	m	struct:VdbeSorter	file:
pgsz	sqlite3.c	/^  int pgsz;$/;"	m	struct:sqlite3rbu	file:
pgsz	src/test_syscall.c	/^  int pgsz;$/;"	m	struct:TestSyscallGlobal	file:
pgsz	src/test_vfs.c	/^  int pgsz;                       \/* Page size *\/$/;"	m	struct:TestvfsBuffer	file:
pgsz	src/vdbesort.c	/^  int pgsz;                       \/* Main database page size *\/$/;"	m	struct:VdbeSorter	file:
pgsz	tsrc/fts5.c	/^  int pgsz;                       \/* Approximate page size used in %_data *\/$/;"	m	struct:Fts5Config	file:
pgsz	tsrc/sqlite3rbu.c	/^  int pgsz;$/;"	m	struct:sqlite3rbu	file:
pgsz	tsrc/vdbesort.c	/^  int pgsz;                       \/* Main database page size *\/$/;"	m	struct:VdbeSorter	file:
phoneticHash	ext/misc/spellfix.c	/^static unsigned char *phoneticHash(const unsigned char *zIn, int nIn){$/;"	f	file:
phoneticHashSqlFunc	ext/misc/spellfix.c	/^static void phoneticHashSqlFunc($/;"	f	file:
pipe	autoconf/tea/win/nmakehlp.c	/^    HANDLE pipe;$/;"	m	struct:__anon1	file:
pipeinfo	autoconf/tea/win/nmakehlp.c	/^} pipeinfo;$/;"	t	typeref:struct:__anon1	file:
pkgconfigdir	Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
plink	tool/lemon.c	/^struct plink {$/;"	s	file:
plink_freelist	tool/lemon.c	/^static struct plink *plink_freelist = 0;$/;"	v	typeref:struct:plink	file:
plrAtEnd	ext/fts2/fts2.c	/^static int plrAtEnd(PLReader *pReader){$/;"	f	file:
plrAtEnd	tsrc/fts2.c	/^static int plrAtEnd(PLReader *pReader){$/;"	f	file:
plrColumn	ext/fts2/fts2.c	/^static int plrColumn(PLReader *pReader){$/;"	f	file:
plrColumn	tsrc/fts2.c	/^static int plrColumn(PLReader *pReader){$/;"	f	file:
plrDestroy	ext/fts2/fts2.c	/^static void plrDestroy(PLReader *pReader){$/;"	f	file:
plrDestroy	tsrc/fts2.c	/^static void plrDestroy(PLReader *pReader){$/;"	f	file:
plrEndOffset	ext/fts2/fts2.c	/^static int plrEndOffset(PLReader *pReader){$/;"	f	file:
plrEndOffset	tsrc/fts2.c	/^static int plrEndOffset(PLReader *pReader){$/;"	f	file:
plrInit	ext/fts2/fts2.c	/^static void plrInit(PLReader *pReader, DLReader *pDLReader){$/;"	f	file:
plrInit	tsrc/fts2.c	/^static void plrInit(PLReader *pReader, DLReader *pDLReader){$/;"	f	file:
plrPosition	ext/fts2/fts2.c	/^static int plrPosition(PLReader *pReader){$/;"	f	file:
plrPosition	tsrc/fts2.c	/^static int plrPosition(PLReader *pReader){$/;"	f	file:
plrStartOffset	ext/fts2/fts2.c	/^static int plrStartOffset(PLReader *pReader){$/;"	f	file:
plrStartOffset	tsrc/fts2.c	/^static int plrStartOffset(PLReader *pReader){$/;"	f	file:
plrStep	ext/fts2/fts2.c	/^static void plrStep(PLReader *pReader){$/;"	f	file:
plrStep	tsrc/fts2.c	/^static void plrStep(PLReader *pReader){$/;"	f	file:
plw	ext/fts2/fts2.c	/^  PLWriter plw;$/;"	m	struct:DLCollector	file:
plw	tsrc/fts2.c	/^  PLWriter plw;$/;"	m	struct:DLCollector	file:
plwAdd	ext/fts2/fts2.c	/^static void plwAdd(PLWriter *pWriter, int iColumn, int iPos,$/;"	f	file:
plwAdd	tsrc/fts2.c	/^static void plwAdd(PLWriter *pWriter, int iColumn, int iPos,$/;"	f	file:
plwCopy	ext/fts2/fts2.c	/^static void plwCopy(PLWriter *pWriter, PLReader *pReader){$/;"	f	file:
plwCopy	tsrc/fts2.c	/^static void plwCopy(PLWriter *pWriter, PLReader *pReader){$/;"	f	file:
plwDestroy	ext/fts2/fts2.c	/^static void plwDestroy(PLWriter *pWriter){$/;"	f	file:
plwDestroy	tsrc/fts2.c	/^static void plwDestroy(PLWriter *pWriter){$/;"	f	file:
plwInit	ext/fts2/fts2.c	/^static void plwInit(PLWriter *pWriter, DLWriter *dlw, sqlite_int64 iDocid){$/;"	f	file:
plwInit	tsrc/fts2.c	/^static void plwInit(PLWriter *pWriter, DLWriter *dlw, sqlite_int64 iDocid){$/;"	f	file:
plwTerminate	ext/fts2/fts2.c	/^static void plwTerminate(PLWriter *pWriter){$/;"	f	file:
plwTerminate	tsrc/fts2.c	/^static void plwTerminate(PLWriter *pWriter){$/;"	f	file:
pnByte	ext/fts5/fts5_hash.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnByte	fts5.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnByte	sqlite3.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnByte	tsrc/fts5.c	/^  int *pnByte;                    \/* Pointer to bytes counter *\/$/;"	m	struct:Fts5Hash	file:
pnBytesFreed	sqlite3.c	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3	file:
pnBytesFreed	src/sqliteInt.h	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3
pnBytesFreed	tsrc/sqliteInt.h	/^  int *pnBytesFreed;            \/* If not NULL, increment this in DbFree() *\/$/;"	m	struct:sqlite3
pointerToText	src/test_malloc.c	/^static void pointerToText(void *p, char *z){$/;"	f	file:
popen	shell.c	108;"	d	file:
popen	shell.c	109;"	d	file:
popen	src/shell.c	108;"	d	file:
popen	src/shell.c	109;"	d	file:
popen	tsrc/shell.c	108;"	d	file:
popen	tsrc/shell.c	109;"	d	file:
populateCellCache	sqlite3.c	/^static void populateCellCache(CellArray *p, int idx, int N){$/;"	f	file:
populateCellCache	src/btree.c	/^static void populateCellCache(CellArray *p, int idx, int N){$/;"	f	file:
populateCellCache	tsrc/btree.c	/^static void populateCellCache(CellArray *p, int idx, int N){$/;"	f	file:
porterClose	ext/fts1/fts1_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	ext/fts2/fts2_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	ext/fts3/fts3_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	sqlite3.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	tsrc/fts1_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	tsrc/fts2_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterClose	tsrc/fts3_porter.c	/^static int porterClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
porterCreate	ext/fts1/fts1_porter.c	/^static int porterCreate($/;"	f	file:
porterCreate	ext/fts2/fts2_porter.c	/^static int porterCreate($/;"	f	file:
porterCreate	ext/fts3/fts3_porter.c	/^static int porterCreate($/;"	f	file:
porterCreate	sqlite3.c	/^static int porterCreate($/;"	f	file:
porterCreate	tsrc/fts1_porter.c	/^static int porterCreate($/;"	f	file:
porterCreate	tsrc/fts2_porter.c	/^static int porterCreate($/;"	f	file:
porterCreate	tsrc/fts3_porter.c	/^static int porterCreate($/;"	f	file:
porterDestroy	ext/fts1/fts1_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	ext/fts2/fts2_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	ext/fts3/fts3_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	sqlite3.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	tsrc/fts1_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	tsrc/fts2_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterDestroy	tsrc/fts3_porter.c	/^static int porterDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
porterIdChar	ext/fts2/fts2_porter.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterIdChar	ext/fts3/fts3_porter.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterIdChar	sqlite3.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterIdChar	tsrc/fts2_porter.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterIdChar	tsrc/fts3_porter.c	/^static const char porterIdChar[] = {$/;"	v	file:
porterNext	ext/fts1/fts1_porter.c	/^static int porterNext($/;"	f	file:
porterNext	ext/fts2/fts2_porter.c	/^static int porterNext($/;"	f	file:
porterNext	ext/fts3/fts3_porter.c	/^static int porterNext($/;"	f	file:
porterNext	sqlite3.c	/^static int porterNext($/;"	f	file:
porterNext	tsrc/fts1_porter.c	/^static int porterNext($/;"	f	file:
porterNext	tsrc/fts2_porter.c	/^static int porterNext($/;"	f	file:
porterNext	tsrc/fts3_porter.c	/^static int porterNext($/;"	f	file:
porterOpen	ext/fts1/fts1_porter.c	/^static int porterOpen($/;"	f	file:
porterOpen	ext/fts2/fts2_porter.c	/^static int porterOpen($/;"	f	file:
porterOpen	ext/fts3/fts3_porter.c	/^static int porterOpen($/;"	f	file:
porterOpen	sqlite3.c	/^static int porterOpen($/;"	f	file:
porterOpen	tsrc/fts1_porter.c	/^static int porterOpen($/;"	f	file:
porterOpen	tsrc/fts2_porter.c	/^static int porterOpen($/;"	f	file:
porterOpen	tsrc/fts3_porter.c	/^static int porterOpen($/;"	f	file:
porterTokenizerModule	ext/fts1/fts1_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	ext/fts1/fts1_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule;$/;"	v	file:
porterTokenizerModule	ext/fts2/fts2_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	ext/fts2/fts2_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule;$/;"	v	file:
porterTokenizerModule	ext/fts3/fts3_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	sqlite3.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	tsrc/fts1_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	tsrc/fts1_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule;$/;"	v	file:
porterTokenizerModule	tsrc/fts2_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porterTokenizerModule	tsrc/fts2_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule;$/;"	v	file:
porterTokenizerModule	tsrc/fts3_porter.c	/^static const sqlite3_tokenizer_module porterTokenizerModule = {$/;"	v	file:
porter_stemmer	ext/fts1/fts1_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	ext/fts2/fts2_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	ext/fts3/fts3_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	sqlite3.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	tsrc/fts1_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	tsrc/fts2_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_stemmer	tsrc/fts3_porter.c	/^static void porter_stemmer(const char *zIn, int nIn, char *zOut, int *pnOut){$/;"	f	file:
porter_tokenizer	ext/fts1/fts1_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	ext/fts1/fts1_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	ext/fts2/fts2_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	ext/fts2/fts2_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	ext/fts3/fts3_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	ext/fts3/fts3_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	sqlite3.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	sqlite3.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	tsrc/fts1_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	tsrc/fts1_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	tsrc/fts2_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	tsrc/fts2_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer	tsrc/fts3_porter.c	/^typedef struct porter_tokenizer {$/;"	s	file:
porter_tokenizer	tsrc/fts3_porter.c	/^} porter_tokenizer;$/;"	t	typeref:struct:porter_tokenizer	file:
porter_tokenizer_cursor	ext/fts1/fts1_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	ext/fts1/fts1_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	ext/fts2/fts2_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	ext/fts2/fts2_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	ext/fts3/fts3_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	ext/fts3/fts3_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	sqlite3.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	sqlite3.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	tsrc/fts1_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	tsrc/fts1_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	tsrc/fts2_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	tsrc/fts2_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
porter_tokenizer_cursor	tsrc/fts3_porter.c	/^typedef struct porter_tokenizer_cursor {$/;"	s	file:
porter_tokenizer_cursor	tsrc/fts3_porter.c	/^} porter_tokenizer_cursor;$/;"	t	typeref:struct:porter_tokenizer_cursor	file:
posListCmp	ext/fts2/fts2.c	/^static int posListCmp(PLReader *pLeft, PLReader *pRight){$/;"	f	file:
posListCmp	tsrc/fts2.c	/^static int posListCmp(PLReader *pLeft, PLReader *pRight){$/;"	f	file:
posListPhraseMerge	ext/fts2/fts2.c	/^static void posListPhraseMerge(DLReader *pLeft, DLReader *pRight,$/;"	f	file:
posListPhraseMerge	tsrc/fts2.c	/^static void posListPhraseMerge(DLReader *pLeft, DLReader *pRight,$/;"	f	file:
posListUnion	ext/fts2/fts2.c	/^static void posListUnion(DLReader *pLeft, DLReader *pRight, DLWriter *pOut){$/;"	f	file:
posListUnion	tsrc/fts2.c	/^static void posListUnion(DLReader *pLeft, DLReader *pRight, DLWriter *pOut){$/;"	f	file:
posixOpen	sqlite3.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixOpen	src/os_unix.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixOpen	tsrc/os_unix.c	/^static int posixOpen(const char *zFile, int flags, int mode){$/;"	f	file:
posixUnlock	sqlite3.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
posixUnlock	src/os_unix.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
posixUnlock	tsrc/os_unix.c	/^static int posixUnlock(sqlite3_file *id, int eFileLock, int handleNFSUnlock){$/;"	f	file:
poslist	ext/fts5/fts5_expr.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
poslist	ext/fts5/fts5_index.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	fts5.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	fts5.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
poslist	sqlite3.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	sqlite3.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
poslist	tsrc/fts5.c	/^  Fts5Buffer poslist;             \/* Buffer containing current poslist *\/$/;"	m	struct:Fts5Iter	file:
poslist	tsrc/fts5.c	/^  Fts5Buffer poslist;             \/* Current position list *\/$/;"	m	struct:Fts5ExprPhrase	file:
postToParent	src/test_thread.c	/^static void postToParent(SqlThread *p, Tcl_Obj *pScript){$/;"	f	file:
ppNextElem	ext/fts3/fts3_write.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
ppNextElem	sqlite3.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
ppNextElem	tsrc/fts3_write.c	/^  Fts3HashElem **ppNextElem;$/;"	m	struct:Fts3SegReader	file:
ppPrev	ext/misc/vfslog.c	/^  VLogLog **ppPrev;               \/* Pointer to this in the list *\/$/;"	m	struct:VLogLog	file:
ppPrev	ext/misc/vtshim.c	/^  vtshim_cursor **ppPrev;      \/* Previous on list of all cursors *\/$/;"	m	struct:vtshim_cursor	file:
ppPrev	ext/misc/vtshim.c	/^  vtshim_vtab **ppPrev;    \/* Previous on list *\/$/;"	m	struct:vtshim_vtab	file:
ppPrev	src/test_quota.c	/^  quotaFile *pNext, **ppPrev;     \/* Linked list of files in the same group *\/$/;"	m	struct:quotaFile	file:
ppPrev	src/test_quota.c	/^  quotaGroup *pNext, **ppPrev;   \/* Doubly linked list of all quota objects *\/$/;"	m	struct:quotaGroup	file:
ppRec	sqlite3.c	/^  UnpackedRecord **ppRec;$/;"	m	struct:ValueNewStat4Ctx	file:
ppRec	src/vdbemem.c	/^  UnpackedRecord **ppRec;$/;"	m	struct:ValueNewStat4Ctx	file:
ppRec	tsrc/vdbemem.c	/^  UnpackedRecord **ppRec;$/;"	m	struct:ValueNewStat4Ctx	file:
ppThis	src/test_onefile.c	/^  fs_real_file **ppThis;$/;"	m	struct:fs_real_file	file:
prec	tool/lemon.c	/^  int prec;                \/* Precedence if defined (-1 otherwise) *\/$/;"	m	struct:symbol	file:
preccounter	tool/lemon.c	/^  int preccounter;           \/* Assign this precedence to decl arguments *\/$/;"	m	struct:pstate	file:
precsym	tool/lemon.c	/^  struct symbol *precsym;  \/* Precedence symbol for this rule *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	sqlite3.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prefix	src/printf.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prefix	tool/mkkeywordhash.c	/^  int prefix;          \/* Number of characters in prefix *\/$/;"	m	struct:Keyword	file:
prefix	tsrc/printf.c	/^  etByte prefix;           \/* Offset into aPrefix[] of the prefix string *\/$/;"	m	struct:et_info	file:
prepStack	src/test1.c	/^static void prepStack(void){$/;"	f	file:
prepTime	tool/speedtest16.c	/^static sqlite_uint64 prepTime = 0;$/;"	v	file:
prepTime	tool/speedtest8.c	/^static sqlite_uint64 prepTime = 0;$/;"	v	file:
prep_sql	test/threadtest4.c	/^static sqlite3_stmt *prep_sql(sqlite3 *db, const char *zFormat, ...){$/;"	f	file:
prepare	ext/fts3/tool/fts3view.c	/^static sqlite3_stmt *prepare(sqlite3 *db, const char *zFormat, ...){$/;"	f	file:
prepare	sqlite3.c	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare	sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare	src/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare	tsrc/sqlite3ext.h	/^  int  (*prepare)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare16	sqlite3.c	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16	sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16	src/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16	tsrc/sqlite3ext.h	/^  int  (*prepare16)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	sqlite3.c	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines	file:
prepare16_v2	sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	src/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepare16_v2	tsrc/sqlite3ext.h	/^  int (*prepare16_v2)(sqlite3*,const void*,int,sqlite3_stmt**,const void**);$/;"	m	struct:sqlite3_api_routines
prepareAndCollectError	ext/rbu/sqlite3rbu.c	/^static int prepareAndCollectError($/;"	f	file:
prepareAndCollectError	sqlite3.c	/^static int prepareAndCollectError($/;"	f	file:
prepareAndCollectError	tsrc/sqlite3rbu.c	/^static int prepareAndCollectError($/;"	f	file:
prepareAndRun	tool/speedtest16.c	/^static void prepareAndRun(sqlite3 *db, const char *zSql){$/;"	f	file:
prepareAndRun	tool/speedtest8.c	/^static void prepareAndRun(sqlite3 *db, const char *zSql, int bQuiet){$/;"	f	file:
prepareAndRun	tool/speedtest8inst1.c	/^static void prepareAndRun(sqlite3_vfs *pInstVfs, sqlite3 *db, const char *zSql){$/;"	f	file:
prepareFreeAndCollectError	ext/rbu/sqlite3rbu.c	/^static int prepareFreeAndCollectError($/;"	f	file:
prepareFreeAndCollectError	sqlite3.c	/^static int prepareFreeAndCollectError($/;"	f	file:
prepareFreeAndCollectError	tsrc/sqlite3rbu.c	/^static int prepareFreeAndCollectError($/;"	f	file:
prepareSql	mptest/mptest.c	/^static sqlite3_stmt *prepareSql(const char *zFormat, ...){$/;"	f	file:
prepareToGetSegment	ext/fts3/tool/fts3view.c	/^static sqlite3_stmt *prepareToGetSegment($/;"	f	file:
prepare_v2	sqlite3.c	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines	file:
prepare_v2	sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare_v2	src/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
prepare_v2	tsrc/sqlite3ext.h	/^  int (*prepare_v2)(sqlite3*,const char*,int,sqlite3_stmt**,const char**);$/;"	m	struct:sqlite3_api_routines
preprocess_input	tool/lemon.c	/^static void preprocess_input(char *z){$/;"	f	file:
prereq	sqlite3.c	/^  Bitmask prereq;       \/* Bitmask of other loops that must run first *\/$/;"	m	struct:WhereLoop	file:
prereq	sqlite3.c	/^  Bitmask prereq;     \/* Prerequisites *\/$/;"	m	struct:WhereOrCost	file:
prereq	src/whereInt.h	/^  Bitmask prereq;       \/* Bitmask of other loops that must run first *\/$/;"	m	struct:WhereLoop
prereq	src/whereInt.h	/^  Bitmask prereq;     \/* Prerequisites *\/$/;"	m	struct:WhereOrCost
prereq	tsrc/whereInt.h	/^  Bitmask prereq;       \/* Bitmask of other loops that must run first *\/$/;"	m	struct:WhereLoop
prereq	tsrc/whereInt.h	/^  Bitmask prereq;     \/* Prerequisites *\/$/;"	m	struct:WhereOrCost
prereqAll	sqlite3.c	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm	file:
prereqAll	src/whereInt.h	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm
prereqAll	tsrc/whereInt.h	/^  Bitmask prereqAll;      \/* Bitmask of tables referenced by pExpr *\/$/;"	m	struct:WhereTerm
prereqRight	sqlite3.c	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm	file:
prereqRight	src/whereInt.h	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm
prereqRight	tsrc/whereInt.h	/^  Bitmask prereqRight;    \/* Bitmask of tables used by pExpr->pRight *\/$/;"	m	struct:WhereTerm
presql	test/tester.tcl	/^proc presql {} {$/;"	p
prev	ext/fts1/ft_hash.h	/^  HashElem *next, *prev;   \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
prev	ext/fts1/fts1_hash.h	/^  fts1HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts1HashElem
prev	ext/fts2/fts2_hash.h	/^  fts2HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts2HashElem
prev	ext/fts3/fts3_hash.h	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem
prev	sqlite3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon90::__anon92	file:
prev	sqlite3.c	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem	file:
prev	sqlite3.c	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem	file:
prev	sqlite3.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prev	src/hash.h	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
prev	src/mem3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon64::__anon66	file:
prev	src/mem5.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prev	tsrc/fts1_hash.h	/^  fts1HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts1HashElem
prev	tsrc/fts2_hash.h	/^  fts2HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:fts2HashElem
prev	tsrc/fts3_hash.h	/^  Fts3HashElem *next, *prev; \/* Next and previous elements in the table *\/$/;"	m	struct:Fts3HashElem
prev	tsrc/hash.h	/^  HashElem *next, *prev;       \/* Next and previous elements in the table *\/$/;"	m	struct:HashElem
prev	tsrc/mem3.c	/^      u32 prev;       \/* Index in mem3.aPool[] of previous free chunk *\/$/;"	m	struct:Mem3Block::__anon34::__anon36	file:
prev	tsrc/mem5.c	/^  int prev;       \/* Index of previous free chunk *\/$/;"	m	struct:Mem5Link	file:
prevSize	sqlite3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon90::__anon91	file:
prevSize	src/mem3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon64::__anon65	file:
prevSize	tsrc/mem3.c	/^      u32 prevSize;   \/* Size of previous chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon34::__anon35	file:
previousPercent	tool/GetFile.cs	/^        private static int previousPercent = 0;$/;"	f	class:GetFile.Program	file:
prevrule	tool/lemon.c	/^  struct rule *prevrule;     \/* Previous rule parsed *\/$/;"	m	struct:pstate	typeref:struct:pstate::rule	file:
primitives	ext/async/sqlite3async.c	/^} primitives = { 0 };$/;"	v	typeref:struct:AsyncPrimitives	file:
primitives	ext/async/sqlite3async.c	/^} primitives = {$/;"	v	typeref:struct:AsyncPrimitives	file:
printBlob	ext/fts3/tool/fts3view.c	/^static void printBlob($/;"	f	file:
printBold	shell.c	/^static void printBold(const char *zText){$/;"	f	file:
printBold	src/shell.c	/^static void printBold(const char *zText){$/;"	f	file:
printBold	tsrc/shell.c	/^static void printBold(const char *zText){$/;"	f	file:
printBytes	tool/showdb.c	/^static void printBytes($/;"	f	file:
printDoclist	ext/fts1/fts1.c	/^static void printDoclist(DocList *p){$/;"	f	file:
printDoclist	tsrc/fts1.c	/^static void printDoclist(DocList *p){$/;"	f	file:
printExplainQueryPlan	src/test1.c	/^int printExplainQueryPlan(sqlite3_stmt *pStmt){$/;"	f
printQuoted	tool/sqldiff.c	/^static void printQuoted(FILE *out, sqlite3_value *X){$/;"	f	file:
printResult	test/wordcount.c	/^static int printResult(void *NotUsed, int nArg, char **azArg, char **azNm){$/;"	f	file:
printSql	test/speedtest1.c	/^static void printSql(const char *zSql){$/;"	f	file:
printTreeLine	ext/fts3/tool/fts3view.c	/^static void printTreeLine(sqlite3_int64 iLower, sqlite3_int64 iUpper){$/;"	f	file:
printWithPrefix	mptest/mptest.c	/^static void printWithPrefix(FILE *pOut, const char *zPrefix, const char *zMsg){$/;"	f	file:
print_and_free_err	test/threadtest3.c	/^static void print_and_free_err(Error *p){$/;"	f	file:
print_byte_range	tool/showdb.c	/^static unsigned char *print_byte_range($/;"	f	file:
print_byte_range	tool/showwal.c	/^static void print_byte_range($/;"	f	file:
print_db_header	tool/showdb.c	/^static void print_db_header(void){$/;"	f	file:
print_decode_line	tool/showdb.c	/^static void print_decode_line($/;"	f	file:
print_decode_line	tool/showjournal.c	/^static unsigned print_decode_line($/;"	f	file:
print_decode_line	tool/showwal.c	/^static void print_decode_line($/;"	f	file:
print_err	test/threadtest3.c	/^static void print_err(Error *p){$/;"	f	file:
print_fileheader	ext/fts3/unicode/mkunicode.tcl	/^proc print_fileheader {} {$/;"	p
print_fold	ext/fts3/unicode/mkunicode.tcl	/^proc print_fold {zFunc} {$/;"	p
print_fold_test	ext/fts3/unicode/mkunicode.tcl	/^proc print_fold_test {zFunc mappings} {$/;"	p
print_frame	tool/showwal.c	/^static void print_frame(int iFrame){$/;"	f	file:
print_help_and_quit	test/tester.tcl	/^proc print_help_and_quit {} {$/;"	p
print_isalnum	ext/fts3/unicode/mkunicode.tcl	/^proc print_isalnum {zFunc lRange} {$/;"	p
print_isdiacritic	ext/fts3/unicode/mkunicode.tcl	/^proc print_isdiacritic {zFunc map} {$/;"	p
print_oneline_frame	tool/showwal.c	/^static void print_oneline_frame(int iFrame, Cksum *pCksum){$/;"	f	file:
print_page	tool/showdb.c	/^static void print_page(int iPg){$/;"	f	file:
print_page	tool/showjournal.c	/^static void print_page(int iOfst){$/;"	f	file:
print_pager_state	sqlite3.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
print_pager_state	src/pager.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
print_pager_state	tsrc/pager.c	/^static char *print_pager_state(Pager *p){$/;"	f	file:
print_rd	ext/fts3/unicode/mkunicode.tcl	/^proc print_rd {map} {$/;"	p
print_stack_union	tool/lemon.c	/^void print_stack_union($/;"	f
print_test_isalnum	ext/fts3/unicode/mkunicode.tcl	/^proc print_test_isalnum {zFunc lRange} {$/;"	p
print_test_main	ext/fts3/unicode/mkunicode.tcl	/^proc print_test_main {} {$/;"	p
print_wal_header	tool/showwal.c	/^static void print_wal_header(Cksum *pCksum){$/;"	f	file:
printfFlags	sqlite3.c	/^  u8   printfFlags;    \/* SQLITE_PRINTF flags below *\/$/;"	m	struct:StrAccum	file:
printfFlags	src/sqliteInt.h	/^  u8   printfFlags;    \/* SQLITE_PRINTF flags below *\/$/;"	m	struct:StrAccum
printfFlags	tsrc/sqliteInt.h	/^  u8   printfFlags;    \/* SQLITE_PRINTF flags below *\/$/;"	m	struct:StrAccum
printfFunc	sqlite3.c	/^static void printfFunc($/;"	f	file:
printfFunc	src/func.c	/^static void printfFunc($/;"	f	file:
printfFunc	tsrc/func.c	/^static void printfFunc($/;"	f	file:
prngSeed	src/test_pcache.c	/^  unsigned prngSeed;        \/* Seed for the PRNG *\/$/;"	m	struct:testpcacheGlobalType	file:
process	ext/fts5/tool/fts5txt2db.tcl	/^  proc process {avar lArgs O E} {$/;"	p
processDevSymArgs	src/test6.c	/^static int processDevSymArgs($/;"	f	file:
process_cmdline	ext/fts5/tool/fts5txt2db.tcl	/^proc process_cmdline {} { $/;"	p
process_input	shell.c	/^static int process_input(ShellState *p, FILE *in){$/;"	f	file:
process_input	src/shell.c	/^static int process_input(ShellState *p, FILE *in){$/;"	f	file:
process_input	tsrc/shell.c	/^static int process_input(ShellState *p, FILE *in){$/;"	f	file:
process_options	test/releasetest.tcl	/^proc process_options {argv} {$/;"	p
process_options	tool/omittest.tcl	/^proc process_options {argv} {$/;"	p
process_sqliterc	shell.c	/^static void process_sqliterc($/;"	f	file:
process_sqliterc	src/shell.c	/^static void process_sqliterc($/;"	f	file:
process_sqliterc	tsrc/shell.c	/^static void process_sqliterc($/;"	f	file:
profile	sqlite3.c	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines	file:
profile	sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
profile	src/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
profile	tsrc/sqlite3ext.h	/^  void * (*profile)(sqlite3*,void(*)(void*,const char*,sqlite_uint64),void*);$/;"	m	struct:sqlite3_api_routines
progressHandler	test/fuzzcheck.c	/^static int progressHandler(void *pVdbeLimitFlag){$/;"	f	file:
progress_handler	sqlite3.c	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
progress_handler	sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
progress_handler	src/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
progress_handler	tsrc/sqlite3ext.h	/^  void  (*progress_handler)(sqlite3*,int,int(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxyBreakConchLock	sqlite3.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyBreakConchLock	src/os_unix.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyBreakConchLock	tsrc/os_unix.c	/^static int proxyBreakConchLock(unixFile *pFile, uuid_t myHostID){$/;"	f	file:
proxyCheckReservedLock	sqlite3.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyCheckReservedLock	src/os_unix.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyCheckReservedLock	tsrc/os_unix.c	/^static int proxyCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
proxyClose	sqlite3.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyClose	src/os_unix.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyClose	tsrc/os_unix.c	/^static int proxyClose(sqlite3_file *id) {$/;"	f	file:
proxyConchLock	sqlite3.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyConchLock	src/os_unix.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyConchLock	tsrc/os_unix.c	/^static int proxyConchLock(unixFile *pFile, uuid_t myHostID, int lockType){$/;"	f	file:
proxyCreateConchPathname	sqlite3.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateConchPathname	src/os_unix.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateConchPathname	tsrc/os_unix.c	/^static int proxyCreateConchPathname(char *dbPath, char **pConchPath){$/;"	f	file:
proxyCreateLockPath	sqlite3.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateLockPath	src/os_unix.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateLockPath	tsrc/os_unix.c	/^static int proxyCreateLockPath(const char *lockPath){$/;"	f	file:
proxyCreateUnixFile	sqlite3.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyCreateUnixFile	src/os_unix.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyCreateUnixFile	tsrc/os_unix.c	/^static int proxyCreateUnixFile($/;"	f	file:
proxyFileControl	sqlite3.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyFileControl	src/os_unix.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyFileControl	tsrc/os_unix.c	/^static int proxyFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
proxyGetDbPathForUnixFile	sqlite3.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetDbPathForUnixFile	src/os_unix.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetDbPathForUnixFile	tsrc/os_unix.c	/^static int proxyGetDbPathForUnixFile(unixFile *pFile, char *dbPath){$/;"	f	file:
proxyGetHostID	sqlite3.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetHostID	src/os_unix.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetHostID	tsrc/os_unix.c	/^static int proxyGetHostID(unsigned char *pHostID, int *pError){$/;"	f	file:
proxyGetLockPath	sqlite3.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyGetLockPath	src/os_unix.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyGetLockPath	tsrc/os_unix.c	/^static int proxyGetLockPath(const char *dbPath, char *lPath, size_t maxLen){$/;"	f	file:
proxyLock	sqlite3.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLock	src/os_unix.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLock	tsrc/os_unix.c	/^static int proxyLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyLockingContext	sqlite3.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	sqlite3.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyLockingContext	src/os_unix.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	src/os_unix.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyLockingContext	tsrc/os_unix.c	/^struct proxyLockingContext {$/;"	s	file:
proxyLockingContext	tsrc/os_unix.c	/^typedef struct proxyLockingContext proxyLockingContext;$/;"	t	typeref:struct:proxyLockingContext	file:
proxyReleaseConch	sqlite3.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyReleaseConch	src/os_unix.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyReleaseConch	tsrc/os_unix.c	/^static int proxyReleaseConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	sqlite3.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	src/os_unix.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTakeConch	tsrc/os_unix.c	/^static int proxyTakeConch(unixFile *pFile){$/;"	f	file:
proxyTransformUnixFile	sqlite3.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyTransformUnixFile	src/os_unix.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyTransformUnixFile	tsrc/os_unix.c	/^static int proxyTransformUnixFile(unixFile *pFile, const char *path) {$/;"	f	file:
proxyUnlock	sqlite3.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyUnlock	src/os_unix.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
proxyUnlock	tsrc/os_unix.c	/^static int proxyUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
pseudoTableReg	sqlite3.c	/^    int pseudoTableReg;         \/* CURTYPE_PSEUDO. Reg holding content. *\/$/;"	m	union:VdbeCursor::__anon88	file:
pseudoTableReg	src/vdbeInt.h	/^    int pseudoTableReg;         \/* CURTYPE_PSEUDO. Reg holding content. *\/$/;"	m	union:VdbeCursor::__anon43
pseudoTableReg	tsrc/vdbeInt.h	/^    int pseudoTableReg;         \/* CURTYPE_PSEUDO. Reg holding content. *\/$/;"	m	union:VdbeCursor::__anon7
pstate	tool/lemon.c	/^struct pstate {$/;"	s	file:
pthreadMutexAlloc	sqlite3.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexAlloc	src/mutex_unix.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexAlloc	tsrc/mutex_unix.c	/^static sqlite3_mutex *pthreadMutexAlloc(int iType){$/;"	f	file:
pthreadMutexEnd	sqlite3.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnd	src/mutex_unix.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnd	tsrc/mutex_unix.c	/^static int pthreadMutexEnd(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexEnter	sqlite3.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexEnter	src/mutex_unix.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexEnter	tsrc/mutex_unix.c	/^static void pthreadMutexEnter(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	sqlite3.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	src/mutex_unix.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexFree	tsrc/mutex_unix.c	/^static void pthreadMutexFree(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	sqlite3.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	src/mutex_unix.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexHeld	tsrc/mutex_unix.c	/^static int pthreadMutexHeld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexInit	sqlite3.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexInit	src/mutex_unix.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexInit	tsrc/mutex_unix.c	/^static int pthreadMutexInit(void){ return SQLITE_OK; }$/;"	f	file:
pthreadMutexLeave	sqlite3.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexLeave	src/mutex_unix.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexLeave	tsrc/mutex_unix.c	/^static void pthreadMutexLeave(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	sqlite3.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	src/mutex_unix.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexNotheld	tsrc/mutex_unix.c	/^static int pthreadMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	sqlite3.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	src/mutex_unix.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
pthreadMutexTry	tsrc/mutex_unix.c	/^static int pthreadMutexTry(sqlite3_mutex *p){$/;"	f	file:
ptrChngFunction	src/test1.c	/^static void ptrChngFunction($/;"	f	file:
ptrToText	src/test_blob.c	/^static char *ptrToText(void *p){$/;"	f	file:
ptrmapGet	sqlite3.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	sqlite3.c	59147;"	d	file:
ptrmapGet	src/btree.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	src/btree.c	1011;"	d	file:
ptrmapGet	tsrc/btree.c	/^static int ptrmapGet(BtShared *pBt, Pgno key, u8 *pEType, Pgno *pPgno){$/;"	f	file:
ptrmapGet	tsrc/btree.c	1011;"	d	file:
ptrmapPageno	sqlite3.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPageno	src/btree.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPageno	tsrc/btree.c	/^static Pgno ptrmapPageno(BtShared *pBt, Pgno pgno){$/;"	f	file:
ptrmapPut	sqlite3.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	sqlite3.c	59146;"	d	file:
ptrmapPut	src/btree.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	src/btree.c	1010;"	d	file:
ptrmapPut	tsrc/btree.c	/^static void ptrmapPut(BtShared *pBt, Pgno key, u8 eType, Pgno parent, int *pRC){$/;"	f	file:
ptrmapPut	tsrc/btree.c	1010;"	d	file:
ptrmapPutOvflPtr	sqlite3.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	sqlite3.c	59148;"	d	file:
ptrmapPutOvflPtr	src/btree.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	src/btree.c	1012;"	d	file:
ptrmapPutOvflPtr	tsrc/btree.c	/^static void ptrmapPutOvflPtr(MemPage *pPage, u8 *pCell, int *pRC){$/;"	f	file:
ptrmapPutOvflPtr	tsrc/btree.c	1012;"	d	file:
ptrmap_coverage_report	tool/showdb.c	/^static void ptrmap_coverage_report(const char *zDbName){$/;"	f	file:
pushDownWhereTerms	sqlite3.c	/^static int pushDownWhereTerms($/;"	f	file:
pushDownWhereTerms	src/select.c	/^static int pushDownWhereTerms($/;"	f	file:
pushDownWhereTerms	tsrc/select.c	/^static int pushDownWhereTerms($/;"	f	file:
pushOntoSorter	sqlite3.c	/^static void pushOntoSorter($/;"	f	file:
pushOntoSorter	src/select.c	/^static void pushOntoSorter($/;"	f	file:
pushOntoSorter	tsrc/select.c	/^static void pushOntoSorter($/;"	f	file:
put2byte	sqlite3.c	57832;"	d	file:
put2byte	src/btreeInt.h	690;"	d
put2byte	tsrc/btreeInt.h	690;"	d
put32bits	sqlite3.c	47349;"	d	file:
put32bits	src/pager.c	1072;"	d	file:
put32bits	src/test_osinst.c	/^static void put32bits(unsigned char *p, unsigned int v){$/;"	f	file:
put32bits	tsrc/pager.c	1072;"	d	file:
put4byte	sqlite3.c	57834;"	d	file:
put4byte	src/btreeInt.h	692;"	d
put4byte	tsrc/btreeInt.h	692;"	d
putInt	tool/sqldiff.c	/^static void putInt(unsigned int v, char **pz){$/;"	f	file:
putValue	tool/sqldiff.c	/^static void putValue(FILE *out, sqlite3_value *pVal){$/;"	f	file:
putVarint	ext/fts1/fts1.c	/^static int putVarint(char *p, sqlite_int64 v){$/;"	f	file:
putVarint	ext/fts1/fulltext.c	/^static int putVarint(char *p, sqlite_int64 v){$/;"	f	file:
putVarint	ext/fts2/fts2.c	/^static int putVarint(char *p, sqlite_int64 v){$/;"	f	file:
putVarint	sqlite3.c	16473;"	d	file:
putVarint	src/sqliteInt.h	3874;"	d
putVarint	tool/varint.c	/^static int putVarint(unsigned char *p, u64 v){$/;"	f	file:
putVarint	tsrc/fts1.c	/^static int putVarint(char *p, sqlite_int64 v){$/;"	f	file:
putVarint	tsrc/fts2.c	/^static int putVarint(char *p, sqlite_int64 v){$/;"	f	file:
putVarint	tsrc/sqliteInt.h	3874;"	d
putVarint32	sqlite3.c	16469;"	d	file:
putVarint32	src/sqliteInt.h	3870;"	d
putVarint32	tsrc/sqliteInt.h	3870;"	d
putVarint64	sqlite3.c	/^static int SQLITE_NOINLINE putVarint64(unsigned char *p, u64 v){$/;"	f	file:
putVarint64	src/util.c	/^static int SQLITE_NOINLINE putVarint64(unsigned char *p, u64 v){$/;"	f	file:
putVarint64	tsrc/util.c	/^static int SQLITE_NOINLINE putVarint64(unsigned char *p, u64 v){$/;"	f	file:
put_item	tool/mkopts.tcl	/^proc put_item x {$/;"	p
puts	test/tester.tcl	/^proc puts {args} { uplevel puts_override $args }$/;"	p
putsAndEval	vsixtest/vsixtest.tcl	/^proc putsAndEval { command } {$/;"	p
putsVarint	tool/sqldiff.c	/^static void putsVarint(FILE *out, sqlite3_uint64 v){$/;"	f	file:
puts_override	test/tester.tcl	/^proc puts_override {args} {$/;"	p
pzErrMsg	sqlite3.c	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon86	file:
pzErrMsg	src/sqliteInt.h	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon60
pzErrMsg	tsrc/sqliteInt.h	/^  char **pzErrMsg;    \/* Error message stored here *\/$/;"	m	struct:__anon28
pzErrmsg	ext/fts5/fts5Int.h	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config
pzErrmsg	fts5.c	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config	file:
pzErrmsg	sqlite3.c	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config	file:
pzErrmsg	tsrc/fts5.c	/^  char **pzErrmsg;$/;"	m	struct:Fts5Config	file:
pzNeededCollation	src/test1.c	/^static char *pzNeededCollation = zNeededCollation;$/;"	v	file:
q	ext/fts1/fts1.c	/^  Query q;                         \/* Parsed query string *\/$/;"	m	struct:fulltext_cursor	file:
q	ext/fts2/fts2.c	/^  Query q;                         \/* Parsed query string *\/$/;"	m	struct:fulltext_cursor	file:
q	tsrc/fts1.c	/^  Query q;                         \/* Parsed query string *\/$/;"	m	struct:fulltext_cursor	file:
q	tsrc/fts2.c	/^  Query q;                         \/* Parsed query string *\/$/;"	m	struct:fulltext_cursor	file:
queryAdd	ext/fts1/fts1.c	/^static void queryAdd(Query *q, const char *pTerm, int nTerm){$/;"	f	file:
queryAdd	ext/fts2/fts2.c	/^static void queryAdd(Query *q, const char *pTerm, int nTerm){$/;"	f	file:
queryAdd	tsrc/fts1.c	/^static void queryAdd(Query *q, const char *pTerm, int nTerm){$/;"	f	file:
queryAdd	tsrc/fts2.c	/^static void queryAdd(Query *q, const char *pTerm, int nTerm){$/;"	f	file:
queryClear	ext/fts1/fts1.c	/^static void queryClear(Query *q){$/;"	f	file:
queryClear	ext/fts2/fts2.c	/^static void queryClear(Query *q){$/;"	f	file:
queryClear	tsrc/fts1.c	/^static void queryClear(Query *q){$/;"	f	file:
queryClear	tsrc/fts2.c	/^static void queryClear(Query *q){$/;"	f	file:
queryFts2Tokenizer	ext/fts2/fts2_tokenizer.c	/^int queryFts2Tokenizer($/;"	f	file:
queryFts2Tokenizer	tsrc/fts2_tokenizer.c	/^int queryFts2Tokenizer($/;"	f	file:
querySharedCacheTableLock	sqlite3.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	sqlite3.c	58243;"	d	file:
querySharedCacheTableLock	src/btree.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	src/btree.c	107;"	d	file:
querySharedCacheTableLock	tsrc/btree.c	/^static int querySharedCacheTableLock(Btree *p, Pgno iTab, u8 eLock){$/;"	f	file:
querySharedCacheTableLock	tsrc/btree.c	107;"	d	file:
queryTestTokenizer	ext/fts3/fts3_expr.c	/^static int queryTestTokenizer($/;"	f	file:
queryTestTokenizer	sqlite3.c	/^static int queryTestTokenizer($/;"	f	file:
queryTestTokenizer	tsrc/fts3_expr.c	/^static int queryTestTokenizer($/;"	f	file:
queryTokenizer	ext/fts3/fts3_tokenizer.c	/^int queryTokenizer($/;"	f	file:
queryTokenizer	sqlite3.c	/^int queryTokenizer($/;"	f	file:
queryTokenizer	tsrc/fts3_tokenizer.c	/^int queryTokenizer($/;"	f	file:
query_add	ext/fts1/fulltext.c	/^static void query_add(Query *q, int is_phrase, const char *zTerm){$/;"	f	file:
query_free	ext/fts1/fulltext.c	/^static void query_free(Query *q){$/;"	f	file:
query_merge	ext/fts1/fulltext.c	/^static int query_merge(fulltext_vtab *v, sqlite3_stmt **pSelect,$/;"	f	file:
queueMutex	src/test_server.c	/^  pthread_mutex_t queueMutex;   \/* Hold this mutex to access the msg queue *\/$/;"	m	struct:ServerState	file:
queuePull	ext/misc/closure.c	/^static closure_avl *queuePull(closure_queue *pQueue){$/;"	f	file:
queuePush	ext/misc/closure.c	/^static void queuePush(closure_queue *pQueue, closure_avl *pNode){$/;"	f	file:
quotaCheckReservedLock	src/test_quota.c	/^static int quotaCheckReservedLock(sqlite3_file *pConn, int *pResOut){$/;"	f	file:
quotaClose	src/test_quota.c	/^static int quotaClose(sqlite3_file *pConn){$/;"	f	file:
quotaConn	src/test_quota.c	/^struct quotaConn {$/;"	s	file:
quotaConn	src/test_quota.c	/^typedef struct quotaConn quotaConn;$/;"	t	typeref:struct:quotaConn	file:
quotaDelete	src/test_quota.c	/^static int quotaDelete($/;"	f	file:
quotaDeviceCharacteristics	src/test_quota.c	/^static int quotaDeviceCharacteristics(sqlite3_file *pConn){$/;"	f	file:
quotaEnter	src/test_quota.c	/^static void quotaEnter(void){ sqlite3_mutex_enter(gQuota.pMutex); }$/;"	f	file:
quotaFile	src/test_quota.c	/^struct quotaFile {$/;"	s	file:
quotaFile	src/test_quota.c	/^typedef struct quotaFile quotaFile;$/;"	t	typeref:struct:quotaFile	file:
quotaFileControl	src/test_quota.c	/^static int quotaFileControl(sqlite3_file *pConn, int op, void *pArg){$/;"	f	file:
quotaFileSize	src/test_quota.c	/^static int quotaFileSize(sqlite3_file *pConn, sqlite3_int64 *pSize){$/;"	f	file:
quotaFindFile	src/test_quota.c	/^static quotaFile *quotaFindFile($/;"	f	file:
quotaGroup	src/test_quota.c	/^struct quotaGroup {$/;"	s	file:
quotaGroup	src/test_quota.c	/^typedef struct quotaGroup quotaGroup;$/;"	t	typeref:struct:quotaGroup	file:
quotaGroupDeref	src/test_quota.c	/^static void quotaGroupDeref(quotaGroup *pGroup){$/;"	f	file:
quotaGroupFind	src/test_quota.c	/^static quotaGroup *quotaGroupFind(const char *zFilename){$/;"	f	file:
quotaGroupOpenFileCount	src/test_quota.c	/^static int quotaGroupOpenFileCount(quotaGroup *pGroup){$/;"	f	file:
quotaLeave	src/test_quota.c	/^static void quotaLeave(void){ sqlite3_mutex_leave(gQuota.pMutex); }$/;"	f	file:
quotaLock	src/test_quota.c	/^static int quotaLock(sqlite3_file *pConn, int lock){$/;"	f	file:
quotaOpen	src/test_quota.c	/^static int quotaOpen($/;"	f	file:
quotaRead	src/test_quota.c	/^static int quotaRead($/;"	f	file:
quotaRemoveAllFiles	src/test_quota.c	/^static void quotaRemoveAllFiles(quotaGroup *pGroup){$/;"	f	file:
quotaRemoveFile	src/test_quota.c	/^static void quotaRemoveFile(quotaFile *pFile){$/;"	f	file:
quotaSectorSize	src/test_quota.c	/^static int quotaSectorSize(sqlite3_file *pConn){$/;"	f	file:
quotaShmBarrier	src/test_quota.c	/^static void quotaShmBarrier(sqlite3_file *pConn){$/;"	f	file:
quotaShmLock	src/test_quota.c	/^static int quotaShmLock($/;"	f	file:
quotaShmMap	src/test_quota.c	/^static int quotaShmMap($/;"	f	file:
quotaShmUnmap	src/test_quota.c	/^static int quotaShmUnmap(sqlite3_file *pConn, int deleteFlag){$/;"	f	file:
quotaStrglob	src/test_quota.c	/^static int quotaStrglob(const char *zGlob, const char *z){$/;"	f	file:
quotaSubOpen	src/test_quota.c	/^static sqlite3_file *quotaSubOpen(sqlite3_file *pConn){$/;"	f	file:
quotaSync	src/test_quota.c	/^static int quotaSync(sqlite3_file *pConn, int flags){$/;"	f	file:
quotaTruncate	src/test_quota.c	/^static int quotaTruncate(sqlite3_file *pConn, sqlite3_int64 size){$/;"	f	file:
quotaUnlock	src/test_quota.c	/^static int quotaUnlock(sqlite3_file *pConn, int lock){$/;"	f	file:
quotaWrite	src/test_quota.c	/^static int quotaWrite($/;"	f	file:
quota_FILE	src/test_quota.c	/^struct quota_FILE {$/;"	s	file:
quota_FILE	src/test_quota.h	/^typedef struct quota_FILE quota_FILE;$/;"	t	typeref:struct:quota_FILE
quota_mbcs_free	src/test_quota.c	/^static void quota_mbcs_free(char *zOld){$/;"	f	file:
quota_utf8_to_mbcs	src/test_quota.c	/^static char *quota_utf8_to_mbcs(const char *zUtf8){$/;"	f	file:
quote	tool/spaceanal.tcl	/^proc quote {txt} {$/;"	p
quoteFunc	sqlite3.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
quoteFunc	src/func.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
quoteFunc	tsrc/func.c	/^static void quoteFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
r	sqlite3.c	/^    double r;           \/* Real value used when MEM_Real is set in flags *\/$/;"	m	union:Mem::MemValue	file:
r	src/vdbeInt.h	/^    double r;           \/* Real value used when MEM_Real is set in flags *\/$/;"	m	union:Mem::MemValue
r	tsrc/vdbeInt.h	/^    double r;           \/* Real value used when MEM_Real is set in flags *\/$/;"	m	union:Mem::MemValue
r1	sqlite3.c	/^  i8 r1;              \/* Value to return if (lhs > rhs) *\/$/;"	m	struct:UnpackedRecord	file:
r1	src/sqliteInt.h	/^  i8 r1;              \/* Value to return if (lhs > rhs) *\/$/;"	m	struct:UnpackedRecord
r1	tsrc/sqliteInt.h	/^  i8 r1;              \/* Value to return if (lhs > rhs) *\/$/;"	m	struct:UnpackedRecord
r2	sqlite3.c	/^  i8 r2;              \/* Value to return if (rhs < lhs) *\/$/;"	m	struct:UnpackedRecord	file:
r2	src/sqliteInt.h	/^  i8 r2;              \/* Value to return if (rhs < lhs) *\/$/;"	m	struct:UnpackedRecord
r2	tsrc/sqliteInt.h	/^  i8 r2;              \/* Value to return if (rhs < lhs) *\/$/;"	m	struct:UnpackedRecord
rBaseCost	ext/misc/fuzzer.c	/^  fuzzer_cost rBaseCost;     \/* Base cost of getting to zBasis *\/$/;"	m	struct:fuzzer_stem	file:
rCost	ext/misc/amatch.c	/^  amatch_cost rCost;       \/* Cost of this transformation *\/$/;"	m	struct:amatch_rule	file:
rCost	ext/misc/amatch.c	/^  amatch_cost rCost;    \/* Cost of the match so far *\/$/;"	m	struct:amatch_word	file:
rCost	ext/misc/fuzzer.c	/^  fuzzer_cost rCost;          \/* Cost of this transformation *\/$/;"	m	struct:fuzzer_rule	file:
rCost	sqlite3.c	/^  LogEst rCost;         \/* Total cost of this path *\/$/;"	m	struct:WherePath	file:
rCost	src/whereInt.h	/^  LogEst rCost;         \/* Total cost of this path *\/$/;"	m	struct:WherePath
rCost	tsrc/whereInt.h	/^  LogEst rCost;         \/* Total cost of this path *\/$/;"	m	struct:WherePath
rCostX	ext/misc/fuzzer.c	/^  fuzzer_cost rCostX;        \/* Precomputed rBaseCost + pRule->rCost *\/$/;"	m	struct:fuzzer_stem	file:
rDel	ext/misc/amatch.c	/^  amatch_cost rDel;          \/* Generic deletion cost  ? -> '' *\/$/;"	m	struct:amatch_vtab	file:
rIns	ext/misc/amatch.c	/^  amatch_cost rIns;          \/* Generic insertion cost  '' -> ? *\/$/;"	m	struct:amatch_vtab	file:
rLimit	ext/misc/amatch.c	/^  amatch_cost rLimit;        \/* Maximum cost of any term *\/$/;"	m	struct:amatch_cursor	file:
rLimit	ext/misc/fuzzer.c	/^  fuzzer_cost rLimit;        \/* Maximum cost of any term *\/$/;"	m	struct:fuzzer_cursor	file:
rParentScore	ext/rtree/sqlite3rtree.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rParentScore	sqlite3.c	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rParentScore	sqlite3.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rParentScore	tsrc/sqlite3.h	/^  sqlite3_rtree_dbl rParentScore;   \/* Score of parent node *\/$/;"	m	struct:sqlite3_rtree_query_info
rPct	ext/misc/percentile.c	/^  double rPct;         \/* 1.0 more than the value for P *\/$/;"	m	struct:Percentile	file:
rRun	sqlite3.c	/^  LogEst rRun;          \/* Cost of running each loop *\/$/;"	m	struct:WhereLoop	file:
rRun	sqlite3.c	/^  LogEst rRun;        \/* Cost of running this subquery *\/$/;"	m	struct:WhereOrCost	file:
rRun	src/whereInt.h	/^  LogEst rRun;          \/* Cost of running each loop *\/$/;"	m	struct:WhereLoop
rRun	src/whereInt.h	/^  LogEst rRun;        \/* Cost of running this subquery *\/$/;"	m	struct:WhereOrCost
rRun	tsrc/whereInt.h	/^  LogEst rRun;          \/* Cost of running each loop *\/$/;"	m	struct:WhereLoop
rRun	tsrc/whereInt.h	/^  LogEst rRun;        \/* Cost of running this subquery *\/$/;"	m	struct:WhereOrCost
rScore	ext/rtree/rtree.c	/^  RtreeDValue rScore;    \/* The score for this node.  Smallest goes first. *\/$/;"	m	struct:RtreeSearchPoint	file:
rScore	ext/rtree/sqlite3rtree.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
rScore	sqlite3.c	/^  RtreeDValue rScore;    \/* The score for this node.  Smallest goes first. *\/$/;"	m	struct:RtreeSearchPoint	file:
rScore	sqlite3.c	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
rScore	sqlite3.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
rScore	tsrc/rtree.c	/^  RtreeDValue rScore;    \/* The score for this node.  Smallest goes first. *\/$/;"	m	struct:RtreeSearchPoint	file:
rScore	tsrc/sqlite3.h	/^  sqlite3_rtree_dbl rScore;         \/* OUT: Write the score here *\/$/;"	m	struct:sqlite3_rtree_query_info
rSetup	sqlite3.c	/^  LogEst rSetup;        \/* One-time setup cost (ex: create transient index) *\/$/;"	m	struct:WhereLoop	file:
rSetup	src/whereInt.h	/^  LogEst rSetup;        \/* One-time setup cost (ex: create transient index) *\/$/;"	m	struct:WhereLoop
rSetup	tsrc/whereInt.h	/^  LogEst rSetup;        \/* One-time setup cost (ex: create transient index) *\/$/;"	m	struct:WhereLoop
rSub	ext/misc/amatch.c	/^  amatch_cost rSub;          \/* Generic substitution cost ? -> ? *\/$/;"	m	struct:amatch_vtab	file:
rSum	sqlite3.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rSum	src/func.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rSum	tsrc/func.c	/^  double rSum;      \/* Floating point sum *\/$/;"	m	struct:SumCtx	file:
rUnsorted	sqlite3.c	/^  LogEst rUnsorted;     \/* Total cost of this path ignoring sorting costs *\/$/;"	m	struct:WherePath	file:
rUnsorted	src/whereInt.h	/^  LogEst rUnsorted;     \/* Total cost of this path ignoring sorting costs *\/$/;"	m	struct:WherePath
rUnsorted	tsrc/whereInt.h	/^  LogEst rUnsorted;     \/* Total cost of this path ignoring sorting costs *\/$/;"	m	struct:WherePath
rValue	ext/rtree/rtree.c	/^    RtreeDValue rValue;             \/* Constraint value. *\/$/;"	m	union:RtreeConstraint::__anon77	file:
rValue	sqlite3.c	/^    RtreeDValue rValue;             \/* Constraint value. *\/$/;"	m	union:RtreeConstraint::__anon105	file:
rValue	tsrc/rtree.c	/^    RtreeDValue rValue;             \/* Constraint value. *\/$/;"	m	union:RtreeConstraint::__anon9	file:
radius	src/test_rtree.c	/^  double radius;$/;"	m	struct:Circle	file:
randStr	src/test_func.c	/^static void randStr(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
randomBlob	sqlite3.c	/^static void randomBlob($/;"	f	file:
randomBlob	src/func.c	/^static void randomBlob($/;"	f	file:
randomBlob	tsrc/func.c	/^static void randomBlob($/;"	f	file:
randomFill	sqlite3.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFill	src/mem2.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFill	tsrc/mem2.c	/^static void randomFill(char *pBuf, int nByte){$/;"	f	file:
randomFunc	sqlite3.c	/^static void randomFunc($/;"	f	file:
randomFunc	src/func.c	/^static void randomFunc($/;"	f	file:
randomFunc	test/speedtest1.c	/^static void randomFunc($/;"	f	file:
randomFunc	tsrc/func.c	/^static void randomFunc($/;"	f	file:
randomness	sqlite3.c	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines	file:
randomness	sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
randomness	src/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
randomness	tsrc/sqlite3ext.h	/^  void (*randomness)(int,void*);$/;"	m	struct:sqlite3_api_routines
randomnessPid	sqlite3.c	/^static pid_t randomnessPid = 0;$/;"	v	file:
randomnessPid	src/os_unix.c	/^static pid_t randomnessPid = 0;$/;"	v	file:
randomnessPid	tsrc/os_unix.c	/^static pid_t randomnessPid = 0;$/;"	v	file:
raw_printf	shell.c	400;"	d	file:
raw_printf	src/shell.c	400;"	d	file:
raw_printf	tsrc/shell.c	400;"	d	file:
rbuAllocateIterArrays	ext/rbu/sqlite3rbu.c	/^static void rbuAllocateIterArrays(sqlite3rbu *p, RbuObjIter *pIter, int nCol){$/;"	f	file:
rbuAllocateIterArrays	sqlite3.c	/^static void rbuAllocateIterArrays(sqlite3rbu *p, RbuObjIter *pIter, int nCol){$/;"	f	file:
rbuAllocateIterArrays	tsrc/sqlite3rbu.c	/^static void rbuAllocateIterArrays(sqlite3rbu *p, RbuObjIter *pIter, int nCol){$/;"	f	file:
rbuBadControlError	ext/rbu/sqlite3rbu.c	/^static void rbuBadControlError(sqlite3rbu *p){$/;"	f	file:
rbuBadControlError	sqlite3.c	/^static void rbuBadControlError(sqlite3rbu *p){$/;"	f	file:
rbuBadControlError	tsrc/sqlite3rbu.c	/^static void rbuBadControlError(sqlite3rbu *p){$/;"	f	file:
rbuCaptureDbWrite	ext/rbu/sqlite3rbu.c	/^static int rbuCaptureDbWrite(sqlite3rbu *pRbu, i64 iOff){$/;"	f	file:
rbuCaptureDbWrite	sqlite3.c	/^static int rbuCaptureDbWrite(sqlite3rbu *pRbu, i64 iOff){$/;"	f	file:
rbuCaptureDbWrite	tsrc/sqlite3rbu.c	/^static int rbuCaptureDbWrite(sqlite3rbu *pRbu, i64 iOff){$/;"	f	file:
rbuCaptureWalRead	ext/rbu/sqlite3rbu.c	/^static int rbuCaptureWalRead(sqlite3rbu *pRbu, i64 iOff, int iAmt){$/;"	f	file:
rbuCaptureWalRead	sqlite3.c	/^static int rbuCaptureWalRead(sqlite3rbu *pRbu, i64 iOff, int iAmt){$/;"	f	file:
rbuCaptureWalRead	tsrc/sqlite3rbu.c	/^static int rbuCaptureWalRead(sqlite3rbu *pRbu, i64 iOff, int iAmt){$/;"	f	file:
rbuCheckpointFrame	ext/rbu/sqlite3rbu.c	/^static void rbuCheckpointFrame(sqlite3rbu *p, RbuFrame *pFrame){$/;"	f	file:
rbuCheckpointFrame	sqlite3.c	/^static void rbuCheckpointFrame(sqlite3rbu *p, RbuFrame *pFrame){$/;"	f	file:
rbuCheckpointFrame	tsrc/sqlite3rbu.c	/^static void rbuCheckpointFrame(sqlite3rbu *p, RbuFrame *pFrame){$/;"	f	file:
rbuCopyPragma	ext/rbu/sqlite3rbu.c	/^static void rbuCopyPragma(sqlite3rbu *p, const char *zPragma){$/;"	f	file:
rbuCopyPragma	sqlite3.c	/^static void rbuCopyPragma(sqlite3rbu *p, const char *zPragma){$/;"	f	file:
rbuCopyPragma	tsrc/sqlite3rbu.c	/^static void rbuCopyPragma(sqlite3rbu *p, const char *zPragma){$/;"	f	file:
rbuCreateImposterTable	ext/rbu/sqlite3rbu.c	/^static void rbuCreateImposterTable(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable	sqlite3.c	/^static void rbuCreateImposterTable(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable	tsrc/sqlite3rbu.c	/^static void rbuCreateImposterTable(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable2	ext/rbu/sqlite3rbu.c	/^static void rbuCreateImposterTable2(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable2	sqlite3.c	/^static void rbuCreateImposterTable2(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateImposterTable2	tsrc/sqlite3rbu.c	/^static void rbuCreateImposterTable2(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuCreateTargetSchema	ext/rbu/sqlite3rbu.c	/^static void rbuCreateTargetSchema(sqlite3rbu *p){$/;"	f	file:
rbuCreateTargetSchema	sqlite3.c	/^static void rbuCreateTargetSchema(sqlite3rbu *p){$/;"	f	file:
rbuCreateTargetSchema	tsrc/sqlite3rbu.c	/^static void rbuCreateTargetSchema(sqlite3rbu *p){$/;"	f	file:
rbuCreateVfs	ext/rbu/sqlite3rbu.c	/^static void rbuCreateVfs(sqlite3rbu *p){$/;"	f	file:
rbuCreateVfs	sqlite3.c	/^static void rbuCreateVfs(sqlite3rbu *p){$/;"	f	file:
rbuCreateVfs	tsrc/sqlite3rbu.c	/^static void rbuCreateVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeleteOalFile	ext/rbu/sqlite3rbu.c	/^static void rbuDeleteOalFile(sqlite3rbu *p){$/;"	f	file:
rbuDeleteOalFile	sqlite3.c	/^static void rbuDeleteOalFile(sqlite3rbu *p){$/;"	f	file:
rbuDeleteOalFile	tsrc/sqlite3rbu.c	/^static void rbuDeleteOalFile(sqlite3rbu *p){$/;"	f	file:
rbuDeleteVfs	ext/rbu/sqlite3rbu.c	/^static void rbuDeleteVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeleteVfs	sqlite3.c	/^static void rbuDeleteVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeleteVfs	tsrc/sqlite3rbu.c	/^static void rbuDeleteVfs(sqlite3rbu *p){$/;"	f	file:
rbuDeltaApply	ext/rbu/sqlite3rbu.c	/^static int rbuDeltaApply($/;"	f	file:
rbuDeltaApply	sqlite3.c	/^static int rbuDeltaApply($/;"	f	file:
rbuDeltaApply	tsrc/sqlite3rbu.c	/^static int rbuDeltaApply($/;"	f	file:
rbuDeltaChecksum	ext/rbu/sqlite3rbu.c	/^static unsigned int rbuDeltaChecksum(const char *zIn, size_t N){$/;"	f	file:
rbuDeltaChecksum	sqlite3.c	/^static unsigned int rbuDeltaChecksum(const char *zIn, size_t N){$/;"	f	file:
rbuDeltaChecksum	tsrc/sqlite3rbu.c	/^static unsigned int rbuDeltaChecksum(const char *zIn, size_t N){$/;"	f	file:
rbuDeltaCreate	tool/sqldiff.c	/^static int rbuDeltaCreate($/;"	f	file:
rbuDeltaGetInt	ext/rbu/sqlite3rbu.c	/^static unsigned int rbuDeltaGetInt(const char **pz, int *pLen){$/;"	f	file:
rbuDeltaGetInt	sqlite3.c	/^static unsigned int rbuDeltaGetInt(const char **pz, int *pLen){$/;"	f	file:
rbuDeltaGetInt	tsrc/sqlite3rbu.c	/^static unsigned int rbuDeltaGetInt(const char **pz, int *pLen){$/;"	f	file:
rbuDeltaOutputSize	ext/rbu/sqlite3rbu.c	/^static int rbuDeltaOutputSize(const char *zDelta, int lenDelta){$/;"	f	file:
rbuDeltaOutputSize	sqlite3.c	/^static int rbuDeltaOutputSize(const char *zDelta, int lenDelta){$/;"	f	file:
rbuDeltaOutputSize	tsrc/sqlite3rbu.c	/^static int rbuDeltaOutputSize(const char *zDelta, int lenDelta){$/;"	f	file:
rbuEditErrmsg	ext/rbu/sqlite3rbu.c	/^static void rbuEditErrmsg(sqlite3rbu *p){$/;"	f	file:
rbuEditErrmsg	sqlite3.c	/^static void rbuEditErrmsg(sqlite3rbu *p){$/;"	f	file:
rbuEditErrmsg	tsrc/sqlite3rbu.c	/^static void rbuEditErrmsg(sqlite3rbu *p){$/;"	f	file:
rbuFileSuffix3	ext/rbu/sqlite3rbu.c	/^static void rbuFileSuffix3(const char *zBase, char *z){$/;"	f	file:
rbuFileSuffix3	sqlite3.c	/^static void rbuFileSuffix3(const char *zBase, char *z){$/;"	f	file:
rbuFileSuffix3	tsrc/sqlite3rbu.c	/^static void rbuFileSuffix3(const char *zBase, char *z){$/;"	f	file:
rbuFinalize	ext/rbu/sqlite3rbu.c	/^static void rbuFinalize(sqlite3rbu *p, sqlite3_stmt *pStmt){$/;"	f	file:
rbuFinalize	sqlite3.c	/^static void rbuFinalize(sqlite3rbu *p, sqlite3_stmt *pStmt){$/;"	f	file:
rbuFinalize	tsrc/sqlite3rbu.c	/^static void rbuFinalize(sqlite3rbu *p, sqlite3_stmt *pStmt){$/;"	f	file:
rbuFindMaindb	ext/rbu/sqlite3rbu.c	/^static rbu_file *rbuFindMaindb(rbu_vfs *pRbuVfs, const char *zWal){$/;"	f	file:
rbuFindMaindb	sqlite3.c	/^static rbu_file *rbuFindMaindb(rbu_vfs *pRbuVfs, const char *zWal){$/;"	f	file:
rbuFindMaindb	tsrc/sqlite3rbu.c	/^static rbu_file *rbuFindMaindb(rbu_vfs *pRbuVfs, const char *zWal){$/;"	f	file:
rbuFossilDeltaFunc	ext/rbu/sqlite3rbu.c	/^static void rbuFossilDeltaFunc($/;"	f	file:
rbuFossilDeltaFunc	sqlite3.c	/^static void rbuFossilDeltaFunc($/;"	f	file:
rbuFossilDeltaFunc	tsrc/sqlite3rbu.c	/^static void rbuFossilDeltaFunc($/;"	f	file:
rbuFreeState	ext/rbu/sqlite3rbu.c	/^static void rbuFreeState(RbuState *p){$/;"	f	file:
rbuFreeState	sqlite3.c	/^static void rbuFreeState(RbuState *p){$/;"	f	file:
rbuFreeState	tsrc/sqlite3rbu.c	/^static void rbuFreeState(RbuState *p){$/;"	f	file:
rbuGetU32	ext/rbu/sqlite3rbu.c	/^static u32 rbuGetU32(u8 *aBuf){$/;"	f	file:
rbuGetU32	sqlite3.c	/^static u32 rbuGetU32(u8 *aBuf){$/;"	f	file:
rbuGetU32	tsrc/sqlite3rbu.c	/^static u32 rbuGetU32(u8 *aBuf){$/;"	f	file:
rbuGetUpdateStmt	ext/rbu/sqlite3rbu.c	/^static int rbuGetUpdateStmt($/;"	f	file:
rbuGetUpdateStmt	sqlite3.c	/^static int rbuGetUpdateStmt($/;"	f	file:
rbuGetUpdateStmt	tsrc/sqlite3rbu.c	/^static int rbuGetUpdateStmt($/;"	f	file:
rbuIncrSchemaCookie	ext/rbu/sqlite3rbu.c	/^static void rbuIncrSchemaCookie(sqlite3rbu *p){$/;"	f	file:
rbuIncrSchemaCookie	sqlite3.c	/^static void rbuIncrSchemaCookie(sqlite3rbu *p){$/;"	f	file:
rbuIncrSchemaCookie	tsrc/sqlite3rbu.c	/^static void rbuIncrSchemaCookie(sqlite3rbu *p){$/;"	f	file:
rbuIndexCntFunc	ext/rbu/sqlite3rbu.c	/^static void rbuIndexCntFunc($/;"	f	file:
rbuIndexCntFunc	sqlite3.c	/^static void rbuIndexCntFunc($/;"	f	file:
rbuIndexCntFunc	tsrc/sqlite3rbu.c	/^static void rbuIndexCntFunc($/;"	f	file:
rbuInitPhaseOneSteps	ext/rbu/sqlite3rbu.c	/^static void rbuInitPhaseOneSteps(sqlite3rbu *p){$/;"	f	file:
rbuInitPhaseOneSteps	sqlite3.c	/^static void rbuInitPhaseOneSteps(sqlite3rbu *p){$/;"	f	file:
rbuInitPhaseOneSteps	tsrc/sqlite3rbu.c	/^static void rbuInitPhaseOneSteps(sqlite3rbu *p){$/;"	f	file:
rbuIsVacuum	ext/rbu/sqlite3rbu.c	416;"	d	file:
rbuIsVacuum	sqlite3.c	165339;"	d	file:
rbuIsVacuum	tsrc/sqlite3rbu.c	416;"	d	file:
rbuLoadState	ext/rbu/sqlite3rbu.c	/^static RbuState *rbuLoadState(sqlite3rbu *p){$/;"	f	file:
rbuLoadState	sqlite3.c	/^static RbuState *rbuLoadState(sqlite3rbu *p){$/;"	f	file:
rbuLoadState	tsrc/sqlite3rbu.c	/^static RbuState *rbuLoadState(sqlite3rbu *p){$/;"	f	file:
rbuLockDatabase	ext/rbu/sqlite3rbu.c	/^static void rbuLockDatabase(sqlite3rbu *p){$/;"	f	file:
rbuLockDatabase	sqlite3.c	/^static void rbuLockDatabase(sqlite3rbu *p){$/;"	f	file:
rbuLockDatabase	tsrc/sqlite3rbu.c	/^static void rbuLockDatabase(sqlite3rbu *p){$/;"	f	file:
rbuMPrintf	ext/rbu/sqlite3rbu.c	/^static char *rbuMPrintf(sqlite3rbu *p, const char *zFmt, ...){$/;"	f	file:
rbuMPrintf	sqlite3.c	/^static char *rbuMPrintf(sqlite3rbu *p, const char *zFmt, ...){$/;"	f	file:
rbuMPrintf	tsrc/sqlite3rbu.c	/^static char *rbuMPrintf(sqlite3rbu *p, const char *zFmt, ...){$/;"	f	file:
rbuMPrintfExec	ext/rbu/sqlite3rbu.c	/^static int rbuMPrintfExec(sqlite3rbu *p, sqlite3 *db, const char *zFmt, ...){$/;"	f	file:
rbuMPrintfExec	sqlite3.c	/^static int rbuMPrintfExec(sqlite3rbu *p, sqlite3 *db, const char *zFmt, ...){$/;"	f	file:
rbuMPrintfExec	tsrc/sqlite3rbu.c	/^static int rbuMPrintfExec(sqlite3rbu *p, sqlite3 *db, const char *zFmt, ...){$/;"	f	file:
rbuMainToWal	ext/rbu/sqlite3rbu.c	/^static const char *rbuMainToWal(const char *zName, int flags){$/;"	f	file:
rbuMainToWal	sqlite3.c	/^static const char *rbuMainToWal(const char *zName, int flags){$/;"	f	file:
rbuMainToWal	tsrc/sqlite3rbu.c	/^static const char *rbuMainToWal(const char *zName, int flags){$/;"	f	file:
rbuMalloc	ext/rbu/sqlite3rbu.c	/^static void *rbuMalloc(sqlite3rbu *p, int nByte){$/;"	f	file:
rbuMalloc	sqlite3.c	/^static void *rbuMalloc(sqlite3rbu *p, int nByte){$/;"	f	file:
rbuMalloc	tsrc/sqlite3rbu.c	/^static void *rbuMalloc(sqlite3rbu *p, int nByte){$/;"	f	file:
rbuMoveOalFile	ext/rbu/sqlite3rbu.c	/^static void rbuMoveOalFile(sqlite3rbu *p){$/;"	f	file:
rbuMoveOalFile	sqlite3.c	/^static void rbuMoveOalFile(sqlite3rbu *p){$/;"	f	file:
rbuMoveOalFile	tsrc/sqlite3rbu.c	/^static void rbuMoveOalFile(sqlite3rbu *p){$/;"	f	file:
rbuObjIterCacheIndexedCols	ext/rbu/sqlite3rbu.c	/^static void rbuObjIterCacheIndexedCols(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheIndexedCols	sqlite3.c	/^static void rbuObjIterCacheIndexedCols(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheIndexedCols	tsrc/sqlite3rbu.c	/^static void rbuObjIterCacheIndexedCols(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheTableInfo	ext/rbu/sqlite3rbu.c	/^static int rbuObjIterCacheTableInfo(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheTableInfo	sqlite3.c	/^static int rbuObjIterCacheTableInfo(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterCacheTableInfo	tsrc/sqlite3rbu.c	/^static int rbuObjIterCacheTableInfo(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterClearStatements	ext/rbu/sqlite3rbu.c	/^static void rbuObjIterClearStatements(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterClearStatements	sqlite3.c	/^static void rbuObjIterClearStatements(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterClearStatements	tsrc/sqlite3rbu.c	/^static void rbuObjIterClearStatements(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFinalize	ext/rbu/sqlite3rbu.c	/^static void rbuObjIterFinalize(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFinalize	sqlite3.c	/^static void rbuObjIterFinalize(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFinalize	tsrc/sqlite3rbu.c	/^static void rbuObjIterFinalize(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFirst	ext/rbu/sqlite3rbu.c	/^static int rbuObjIterFirst(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFirst	sqlite3.c	/^static int rbuObjIterFirst(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFirst	tsrc/sqlite3rbu.c	/^static int rbuObjIterFirst(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFreeCols	ext/rbu/sqlite3rbu.c	/^static void rbuObjIterFreeCols(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFreeCols	sqlite3.c	/^static void rbuObjIterFreeCols(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterFreeCols	tsrc/sqlite3rbu.c	/^static void rbuObjIterFreeCols(RbuObjIter *pIter){$/;"	f	file:
rbuObjIterGetBindlist	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetBindlist(sqlite3rbu *p, int nBind){$/;"	f	file:
rbuObjIterGetBindlist	sqlite3.c	/^static char *rbuObjIterGetBindlist(sqlite3rbu *p, int nBind){$/;"	f	file:
rbuObjIterGetBindlist	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetBindlist(sqlite3rbu *p, int nBind){$/;"	f	file:
rbuObjIterGetCollist	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetCollist($/;"	f	file:
rbuObjIterGetCollist	sqlite3.c	/^static char *rbuObjIterGetCollist($/;"	f	file:
rbuObjIterGetCollist	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetCollist($/;"	f	file:
rbuObjIterGetIndexCols	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetIndexCols($/;"	f	file:
rbuObjIterGetIndexCols	sqlite3.c	/^static char *rbuObjIterGetIndexCols($/;"	f	file:
rbuObjIterGetIndexCols	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetIndexCols($/;"	f	file:
rbuObjIterGetOldlist	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetOldlist($/;"	f	file:
rbuObjIterGetOldlist	sqlite3.c	/^static char *rbuObjIterGetOldlist($/;"	f	file:
rbuObjIterGetOldlist	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetOldlist($/;"	f	file:
rbuObjIterGetSetlist	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetSetlist($/;"	f	file:
rbuObjIterGetSetlist	sqlite3.c	/^static char *rbuObjIterGetSetlist($/;"	f	file:
rbuObjIterGetSetlist	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetSetlist($/;"	f	file:
rbuObjIterGetWhere	ext/rbu/sqlite3rbu.c	/^static char *rbuObjIterGetWhere($/;"	f	file:
rbuObjIterGetWhere	sqlite3.c	/^static char *rbuObjIterGetWhere($/;"	f	file:
rbuObjIterGetWhere	tsrc/sqlite3rbu.c	/^static char *rbuObjIterGetWhere($/;"	f	file:
rbuObjIterNext	ext/rbu/sqlite3rbu.c	/^static int rbuObjIterNext(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterNext	sqlite3.c	/^static int rbuObjIterNext(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterNext	tsrc/sqlite3rbu.c	/^static int rbuObjIterNext(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuObjIterPrepareAll	ext/rbu/sqlite3rbu.c	/^static int rbuObjIterPrepareAll($/;"	f	file:
rbuObjIterPrepareAll	sqlite3.c	/^static int rbuObjIterPrepareAll($/;"	f	file:
rbuObjIterPrepareAll	tsrc/sqlite3rbu.c	/^static int rbuObjIterPrepareAll($/;"	f	file:
rbuObjIterPrepareTmpInsert	ext/rbu/sqlite3rbu.c	/^static void rbuObjIterPrepareTmpInsert($/;"	f	file:
rbuObjIterPrepareTmpInsert	sqlite3.c	/^static void rbuObjIterPrepareTmpInsert($/;"	f	file:
rbuObjIterPrepareTmpInsert	tsrc/sqlite3rbu.c	/^static void rbuObjIterPrepareTmpInsert($/;"	f	file:
rbuOpenDatabase	ext/rbu/sqlite3rbu.c	/^static void rbuOpenDatabase(sqlite3rbu *p){$/;"	f	file:
rbuOpenDatabase	sqlite3.c	/^static void rbuOpenDatabase(sqlite3rbu *p){$/;"	f	file:
rbuOpenDatabase	tsrc/sqlite3rbu.c	/^static void rbuOpenDatabase(sqlite3rbu *p){$/;"	f	file:
rbuOpenDbhandle	ext/rbu/sqlite3rbu.c	/^static sqlite3 *rbuOpenDbhandle($/;"	f	file:
rbuOpenDbhandle	sqlite3.c	/^static sqlite3 *rbuOpenDbhandle($/;"	f	file:
rbuOpenDbhandle	tsrc/sqlite3rbu.c	/^static sqlite3 *rbuOpenDbhandle($/;"	f	file:
rbuPutU16	ext/rbu/sqlite3rbu.c	/^static void rbuPutU16(u8 *aBuf, u16 iVal){$/;"	f	file:
rbuPutU16	sqlite3.c	/^static void rbuPutU16(u8 *aBuf, u16 iVal){$/;"	f	file:
rbuPutU16	tsrc/sqlite3rbu.c	/^static void rbuPutU16(u8 *aBuf, u16 iVal){$/;"	f	file:
rbuPutU32	ext/rbu/sqlite3rbu.c	/^static void rbuPutU32(u8 *aBuf, u32 iVal){$/;"	f	file:
rbuPutU32	sqlite3.c	/^static void rbuPutU32(u8 *aBuf, u32 iVal){$/;"	f	file:
rbuPutU32	tsrc/sqlite3rbu.c	/^static void rbuPutU32(u8 *aBuf, u32 iVal){$/;"	f	file:
rbuSaveState	ext/rbu/sqlite3rbu.c	/^static void rbuSaveState(sqlite3rbu *p, int eStage){$/;"	f	file:
rbuSaveState	sqlite3.c	/^static void rbuSaveState(sqlite3rbu *p, int eStage){$/;"	f	file:
rbuSaveState	tsrc/sqlite3rbu.c	/^static void rbuSaveState(sqlite3rbu *p, int eStage){$/;"	f	file:
rbuSetupCheckpoint	ext/rbu/sqlite3rbu.c	/^static void rbuSetupCheckpoint(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupCheckpoint	sqlite3.c	/^static void rbuSetupCheckpoint(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupCheckpoint	tsrc/sqlite3rbu.c	/^static void rbuSetupCheckpoint(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupOal	ext/rbu/sqlite3rbu.c	/^static void rbuSetupOal(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupOal	sqlite3.c	/^static void rbuSetupOal(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuSetupOal	tsrc/sqlite3rbu.c	/^static void rbuSetupOal(sqlite3rbu *p, RbuState *pState){$/;"	f	file:
rbuShmChecksum	ext/rbu/sqlite3rbu.c	/^static i64 rbuShmChecksum(sqlite3rbu *p){$/;"	f	file:
rbuShmChecksum	sqlite3.c	/^static i64 rbuShmChecksum(sqlite3rbu *p){$/;"	f	file:
rbuShmChecksum	tsrc/sqlite3rbu.c	/^static i64 rbuShmChecksum(sqlite3rbu *p){$/;"	f	file:
rbuStep	ext/rbu/sqlite3rbu.c	/^static int rbuStep(sqlite3rbu *p){$/;"	f	file:
rbuStep	sqlite3.c	/^static int rbuStep(sqlite3rbu *p){$/;"	f	file:
rbuStep	tsrc/sqlite3rbu.c	/^static int rbuStep(sqlite3rbu *p){$/;"	f	file:
rbuStepOneOp	ext/rbu/sqlite3rbu.c	/^static void rbuStepOneOp(sqlite3rbu *p, int eType){$/;"	f	file:
rbuStepOneOp	sqlite3.c	/^static void rbuStepOneOp(sqlite3rbu *p, int eType){$/;"	f	file:
rbuStepOneOp	tsrc/sqlite3rbu.c	/^static void rbuStepOneOp(sqlite3rbu *p, int eType){$/;"	f	file:
rbuStepType	ext/rbu/sqlite3rbu.c	/^static int rbuStepType(sqlite3rbu *p, const char **pzMask){$/;"	f	file:
rbuStepType	sqlite3.c	/^static int rbuStepType(sqlite3rbu *p, const char **pzMask){$/;"	f	file:
rbuStepType	tsrc/sqlite3rbu.c	/^static int rbuStepType(sqlite3rbu *p, const char **pzMask){$/;"	f	file:
rbuStrCompare	ext/rbu/sqlite3rbu.c	/^static int rbuStrCompare(const char *z1, const char *z2){$/;"	f	file:
rbuStrCompare	sqlite3.c	/^static int rbuStrCompare(const char *z1, const char *z2){$/;"	f	file:
rbuStrCompare	tsrc/sqlite3rbu.c	/^static int rbuStrCompare(const char *z1, const char *z2){$/;"	f	file:
rbuStrndup	ext/rbu/sqlite3rbu.c	/^static char *rbuStrndup(const char *zStr, int *pRc){$/;"	f	file:
rbuStrndup	sqlite3.c	/^static char *rbuStrndup(const char *zStr, int *pRc){$/;"	f	file:
rbuStrndup	tsrc/sqlite3rbu.c	/^static char *rbuStrndup(const char *zStr, int *pRc){$/;"	f	file:
rbuTableType	ext/rbu/sqlite3rbu.c	/^static void rbuTableType($/;"	f	file:
rbuTableType	sqlite3.c	/^static void rbuTableType($/;"	f	file:
rbuTableType	tsrc/sqlite3rbu.c	/^static void rbuTableType($/;"	f	file:
rbuTargetNameFunc	ext/rbu/sqlite3rbu.c	/^static void rbuTargetNameFunc($/;"	f	file:
rbuTargetNameFunc	sqlite3.c	/^static void rbuTargetNameFunc($/;"	f	file:
rbuTargetNameFunc	tsrc/sqlite3rbu.c	/^static void rbuTargetNameFunc($/;"	f	file:
rbuTmpInsertFunc	ext/rbu/sqlite3rbu.c	/^static void rbuTmpInsertFunc($/;"	f	file:
rbuTmpInsertFunc	sqlite3.c	/^static void rbuTmpInsertFunc($/;"	f	file:
rbuTmpInsertFunc	tsrc/sqlite3rbu.c	/^static void rbuTmpInsertFunc($/;"	f	file:
rbuUnlockShm	ext/rbu/sqlite3rbu.c	/^static void rbuUnlockShm(rbu_file *p){$/;"	f	file:
rbuUnlockShm	sqlite3.c	/^static void rbuUnlockShm(rbu_file *p){$/;"	f	file:
rbuUnlockShm	tsrc/sqlite3rbu.c	/^static void rbuUnlockShm(rbu_file *p){$/;"	f	file:
rbuVfsAccess	ext/rbu/sqlite3rbu.c	/^static int rbuVfsAccess($/;"	f	file:
rbuVfsAccess	sqlite3.c	/^static int rbuVfsAccess($/;"	f	file:
rbuVfsAccess	tsrc/sqlite3rbu.c	/^static int rbuVfsAccess($/;"	f	file:
rbuVfsCheckReservedLock	ext/rbu/sqlite3rbu.c	/^static int rbuVfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
rbuVfsCheckReservedLock	sqlite3.c	/^static int rbuVfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
rbuVfsCheckReservedLock	tsrc/sqlite3rbu.c	/^static int rbuVfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
rbuVfsClose	ext/rbu/sqlite3rbu.c	/^static int rbuVfsClose(sqlite3_file *pFile){$/;"	f	file:
rbuVfsClose	sqlite3.c	/^static int rbuVfsClose(sqlite3_file *pFile){$/;"	f	file:
rbuVfsClose	tsrc/sqlite3rbu.c	/^static int rbuVfsClose(sqlite3_file *pFile){$/;"	f	file:
rbuVfsCurrentTime	ext/rbu/sqlite3rbu.c	/^static int rbuVfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
rbuVfsCurrentTime	sqlite3.c	/^static int rbuVfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
rbuVfsCurrentTime	tsrc/sqlite3rbu.c	/^static int rbuVfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
rbuVfsDelete	ext/rbu/sqlite3rbu.c	/^static int rbuVfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
rbuVfsDelete	sqlite3.c	/^static int rbuVfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
rbuVfsDelete	tsrc/sqlite3rbu.c	/^static int rbuVfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
rbuVfsDeviceCharacteristics	ext/rbu/sqlite3rbu.c	/^static int rbuVfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
rbuVfsDeviceCharacteristics	sqlite3.c	/^static int rbuVfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
rbuVfsDeviceCharacteristics	tsrc/sqlite3rbu.c	/^static int rbuVfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
rbuVfsDlClose	ext/rbu/sqlite3rbu.c	/^static void rbuVfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
rbuVfsDlClose	sqlite3.c	/^static void rbuVfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
rbuVfsDlClose	tsrc/sqlite3rbu.c	/^static void rbuVfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
rbuVfsDlError	ext/rbu/sqlite3rbu.c	/^static void rbuVfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
rbuVfsDlError	sqlite3.c	/^static void rbuVfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
rbuVfsDlError	tsrc/sqlite3rbu.c	/^static void rbuVfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
rbuVfsDlOpen	ext/rbu/sqlite3rbu.c	/^static void *rbuVfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
rbuVfsDlOpen	sqlite3.c	/^static void *rbuVfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
rbuVfsDlOpen	tsrc/sqlite3rbu.c	/^static void *rbuVfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
rbuVfsDlSym	ext/rbu/sqlite3rbu.c	/^static void (*rbuVfsDlSym($/;"	f	file:
rbuVfsDlSym	sqlite3.c	/^static void (*rbuVfsDlSym($/;"	f	file:
rbuVfsDlSym	tsrc/sqlite3rbu.c	/^static void (*rbuVfsDlSym($/;"	f	file:
rbuVfsFileControl	ext/rbu/sqlite3rbu.c	/^static int rbuVfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
rbuVfsFileControl	sqlite3.c	/^static int rbuVfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
rbuVfsFileControl	tsrc/sqlite3rbu.c	/^static int rbuVfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
rbuVfsFileSize	ext/rbu/sqlite3rbu.c	/^static int rbuVfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
rbuVfsFileSize	sqlite3.c	/^static int rbuVfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
rbuVfsFileSize	tsrc/sqlite3rbu.c	/^static int rbuVfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
rbuVfsFullPathname	ext/rbu/sqlite3rbu.c	/^static int rbuVfsFullPathname($/;"	f	file:
rbuVfsFullPathname	sqlite3.c	/^static int rbuVfsFullPathname($/;"	f	file:
rbuVfsFullPathname	tsrc/sqlite3rbu.c	/^static int rbuVfsFullPathname($/;"	f	file:
rbuVfsGetLastError	ext/rbu/sqlite3rbu.c	/^static int rbuVfsGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
rbuVfsGetLastError	sqlite3.c	/^static int rbuVfsGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
rbuVfsGetLastError	tsrc/sqlite3rbu.c	/^static int rbuVfsGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
rbuVfsLock	ext/rbu/sqlite3rbu.c	/^static int rbuVfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsLock	sqlite3.c	/^static int rbuVfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsLock	tsrc/sqlite3rbu.c	/^static int rbuVfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsOpen	ext/rbu/sqlite3rbu.c	/^static int rbuVfsOpen($/;"	f	file:
rbuVfsOpen	sqlite3.c	/^static int rbuVfsOpen($/;"	f	file:
rbuVfsOpen	tsrc/sqlite3rbu.c	/^static int rbuVfsOpen($/;"	f	file:
rbuVfsRandomness	ext/rbu/sqlite3rbu.c	/^static int rbuVfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
rbuVfsRandomness	sqlite3.c	/^static int rbuVfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
rbuVfsRandomness	tsrc/sqlite3rbu.c	/^static int rbuVfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
rbuVfsRead	ext/rbu/sqlite3rbu.c	/^static int rbuVfsRead($/;"	f	file:
rbuVfsRead	sqlite3.c	/^static int rbuVfsRead($/;"	f	file:
rbuVfsRead	tsrc/sqlite3rbu.c	/^static int rbuVfsRead($/;"	f	file:
rbuVfsSectorSize	ext/rbu/sqlite3rbu.c	/^static int rbuVfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
rbuVfsSectorSize	sqlite3.c	/^static int rbuVfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
rbuVfsSectorSize	tsrc/sqlite3rbu.c	/^static int rbuVfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmBarrier	ext/rbu/sqlite3rbu.c	/^static void rbuVfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmBarrier	sqlite3.c	/^static void rbuVfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmBarrier	tsrc/sqlite3rbu.c	/^static void rbuVfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
rbuVfsShmLock	ext/rbu/sqlite3rbu.c	/^static int rbuVfsShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
rbuVfsShmLock	sqlite3.c	/^static int rbuVfsShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
rbuVfsShmLock	tsrc/sqlite3rbu.c	/^static int rbuVfsShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
rbuVfsShmMap	ext/rbu/sqlite3rbu.c	/^static int rbuVfsShmMap($/;"	f	file:
rbuVfsShmMap	sqlite3.c	/^static int rbuVfsShmMap($/;"	f	file:
rbuVfsShmMap	tsrc/sqlite3rbu.c	/^static int rbuVfsShmMap($/;"	f	file:
rbuVfsShmUnmap	ext/rbu/sqlite3rbu.c	/^static int rbuVfsShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
rbuVfsShmUnmap	sqlite3.c	/^static int rbuVfsShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
rbuVfsShmUnmap	tsrc/sqlite3rbu.c	/^static int rbuVfsShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
rbuVfsSleep	ext/rbu/sqlite3rbu.c	/^static int rbuVfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
rbuVfsSleep	sqlite3.c	/^static int rbuVfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
rbuVfsSleep	tsrc/sqlite3rbu.c	/^static int rbuVfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
rbuVfsSync	ext/rbu/sqlite3rbu.c	/^static int rbuVfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
rbuVfsSync	sqlite3.c	/^static int rbuVfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
rbuVfsSync	tsrc/sqlite3rbu.c	/^static int rbuVfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
rbuVfsTruncate	ext/rbu/sqlite3rbu.c	/^static int rbuVfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
rbuVfsTruncate	sqlite3.c	/^static int rbuVfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
rbuVfsTruncate	tsrc/sqlite3rbu.c	/^static int rbuVfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
rbuVfsUnlock	ext/rbu/sqlite3rbu.c	/^static int rbuVfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsUnlock	sqlite3.c	/^static int rbuVfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsUnlock	tsrc/sqlite3rbu.c	/^static int rbuVfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
rbuVfsWrite	ext/rbu/sqlite3rbu.c	/^static int rbuVfsWrite($/;"	f	file:
rbuVfsWrite	sqlite3.c	/^static int rbuVfsWrite($/;"	f	file:
rbuVfsWrite	tsrc/sqlite3rbu.c	/^static int rbuVfsWrite($/;"	f	file:
rbuWinUtf8ToUnicode	ext/rbu/sqlite3rbu.c	/^static LPWSTR rbuWinUtf8ToUnicode(const char *zFilename){$/;"	f	file:
rbuWinUtf8ToUnicode	sqlite3.c	/^static LPWSTR rbuWinUtf8ToUnicode(const char *zFilename){$/;"	f	file:
rbuWinUtf8ToUnicode	tsrc/sqlite3rbu.c	/^static LPWSTR rbuWinUtf8ToUnicode(const char *zFilename){$/;"	f	file:
rbuWithoutRowidPK	ext/rbu/sqlite3rbu.c	/^static char *rbuWithoutRowidPK(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuWithoutRowidPK	sqlite3.c	/^static char *rbuWithoutRowidPK(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbuWithoutRowidPK	tsrc/sqlite3rbu.c	/^static char *rbuWithoutRowidPK(sqlite3rbu *p, RbuObjIter *pIter){$/;"	f	file:
rbu_file	ext/rbu/sqlite3rbu.c	/^struct rbu_file {$/;"	s	file:
rbu_file	ext/rbu/sqlite3rbu.c	/^typedef struct rbu_file rbu_file;$/;"	t	typeref:struct:rbu_file	file:
rbu_file	sqlite3.c	/^struct rbu_file {$/;"	s	file:
rbu_file	sqlite3.c	/^typedef struct rbu_file rbu_file;$/;"	t	typeref:struct:rbu_file	file:
rbu_file	tsrc/sqlite3rbu.c	/^struct rbu_file {$/;"	s	file:
rbu_file	tsrc/sqlite3rbu.c	/^typedef struct rbu_file rbu_file;$/;"	t	typeref:struct:rbu_file	file:
rbu_vfs	ext/rbu/sqlite3rbu.c	/^struct rbu_vfs {$/;"	s	file:
rbu_vfs	ext/rbu/sqlite3rbu.c	/^typedef struct rbu_vfs rbu_vfs;$/;"	t	typeref:struct:rbu_vfs	file:
rbu_vfs	sqlite3.c	/^struct rbu_vfs {$/;"	s	file:
rbu_vfs	sqlite3.c	/^typedef struct rbu_vfs rbu_vfs;$/;"	t	typeref:struct:rbu_vfs	file:
rbu_vfs	tsrc/sqlite3rbu.c	/^struct rbu_vfs {$/;"	s	file:
rbu_vfs	tsrc/sqlite3rbu.c	/^typedef struct rbu_vfs rbu_vfs;$/;"	t	typeref:struct:rbu_vfs	file:
rbudiff_one_table	tool/sqldiff.c	/^static void rbudiff_one_table(const char *zTab, FILE *out){$/;"	f	file:
rc	ext/fts5/fts5_expr.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	ext/fts5/fts5_expr.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rc	ext/fts5/fts5_index.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	ext/misc/spellfix.c	/^  int rc;                          \/* Error code *\/$/;"	m	struct:MatchQuery	file:
rc	ext/rbu/sqlite3rbu.c	/^  int rc;                         \/* Value returned by last rbu_step() call *\/$/;"	m	struct:sqlite3rbu	file:
rc	ext/session/sqlite3session.c	/^  int rc;                         \/* Error code *\/$/;"	m	struct:sqlite3_changegroup	file:
rc	ext/session/sqlite3session.c	/^  int rc;                         \/* Iterator error code *\/$/;"	m	struct:sqlite3_changeset_iter	file:
rc	ext/session/sqlite3session.c	/^  int rc;                         \/* Non-zero if an error has occurred *\/$/;"	m	struct:sqlite3_session	file:
rc	fts5.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	fts5.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	fts5.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rc	sqlite3.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	sqlite3.c	/^  int rc;                         \/* Error code *\/$/;"	m	struct:sqlite3_changegroup	file:
rc	sqlite3.c	/^  int rc;                         \/* Iterator error code *\/$/;"	m	struct:sqlite3_changeset_iter	file:
rc	sqlite3.c	/^  int rc;                         \/* Non-zero if an error has occurred *\/$/;"	m	struct:sqlite3_session	file:
rc	sqlite3.c	/^  int rc;                         \/* Value returned by last rbu_step() call *\/$/;"	m	struct:sqlite3rbu	file:
rc	sqlite3.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	sqlite3.c	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe	file:
rc	sqlite3.c	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse	file:
rc	sqlite3.c	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon86	file:
rc	sqlite3.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rc	sqlite3.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	sqlite3.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rc	src/backup.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	src/sqliteInt.h	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse
rc	src/sqliteInt.h	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon60
rc	src/table.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rc	src/tclsqlite.c	/^  int rc;                    \/* Return code of most recent sqlite3_exec() *\/$/;"	m	struct:SqliteDb	file:
rc	src/test4.c	/^  int rc;               \/* operation return code *\/$/;"	m	struct:Thread	file:
rc	src/test7.c	/^  int rc;                  \/* operation return code *\/$/;"	m	struct:Thread	file:
rc	src/vdbeInt.h	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe
rc	test/threadtest3.c	/^  int rc;$/;"	m	struct:Error	file:
rc	tsrc/backup.c	/^  int rc;                  \/* Backup process error code *\/$/;"	m	struct:sqlite3_backup	file:
rc	tsrc/fts5.c	/^  int rc;                         \/* Current error code *\/$/;"	m	struct:Fts5Index	file:
rc	tsrc/fts5.c	/^  int rc;$/;"	m	struct:Fts5Parse	file:
rc	tsrc/fts5.c	/^  int rc;$/;"	m	struct:TokenCtx	file:
rc	tsrc/sqlite3rbu.c	/^  int rc;                         \/* Value returned by last rbu_step() call *\/$/;"	m	struct:sqlite3rbu	file:
rc	tsrc/sqlite3session.c	/^  int rc;                         \/* Error code *\/$/;"	m	struct:sqlite3_changegroup	file:
rc	tsrc/sqlite3session.c	/^  int rc;                         \/* Iterator error code *\/$/;"	m	struct:sqlite3_changeset_iter	file:
rc	tsrc/sqlite3session.c	/^  int rc;                         \/* Non-zero if an error has occurred *\/$/;"	m	struct:sqlite3_session	file:
rc	tsrc/sqliteInt.h	/^  int rc;              \/* Return code from execution *\/$/;"	m	struct:Parse
rc	tsrc/sqliteInt.h	/^  int rc;             \/* Result code stored here *\/$/;"	m	struct:__anon28
rc	tsrc/table.c	/^  int rc;            \/* Return code from sqlite3_exec() *\/$/;"	m	struct:TabResult	file:
rc	tsrc/tclsqlite.c	/^  int rc;                    \/* Return code of most recent sqlite3_exec() *\/$/;"	m	struct:SqliteDb	file:
rc	tsrc/vdbeInt.h	/^  int rc;                 \/* Value to return *\/$/;"	m	struct:Vdbe
rcApp	sqlite3.c	/^  int rcApp;              \/* errcode set by sqlite3_result_error_code() *\/$/;"	m	struct:Vdbe	file:
rcApp	src/vdbeInt.h	/^  int rcApp;              \/* errcode set by sqlite3_result_error_code() *\/$/;"	m	struct:Vdbe
rcApp	tsrc/vdbeInt.h	/^  int rcApp;              \/* errcode set by sqlite3_result_error_code() *\/$/;"	m	struct:Vdbe
rcErr	ext/misc/scrub.c	/^  int rcErr;               \/* Error code *\/$/;"	m	struct:ScrubState	file:
rd_load_unicodedata_text	ext/fts3/unicode/parseunicode.tcl	/^proc rd_load_unicodedata_text {zName} {$/;"	p
rdr	ext/misc/csv.c	/^  CsvReader rdr;                  \/* The CsvReader object *\/$/;"	m	struct:CsvCursor	file:
rePeek	ext/misc/regexp.c	/^static unsigned char rePeek(ReCompiled *p){$/;"	f	file:
re_add_state	ext/misc/regexp.c	/^static void re_add_state(ReStateSet *pSet, int newState){$/;"	f	file:
re_append	ext/misc/regexp.c	/^static int re_append(ReCompiled *p, int op, int arg){$/;"	f	file:
re_compile	ext/misc/regexp.c	/^const char *re_compile(ReCompiled **ppRe, const char *zIn, int noCase){$/;"	f
re_compile	ext/misc/regexp.c	70;"	d	file:
re_copy	ext/misc/regexp.c	/^static void re_copy(ReCompiled *p, int iStart, int N){$/;"	f	file:
re_digit_char	ext/misc/regexp.c	/^static int re_digit_char(int c){$/;"	f	file:
re_esc_char	ext/misc/regexp.c	/^static unsigned re_esc_char(ReCompiled *p){$/;"	f	file:
re_free	ext/misc/regexp.c	/^void re_free(ReCompiled *pRe){$/;"	f
re_free	ext/misc/regexp.c	71;"	d	file:
re_hex	ext/misc/regexp.c	/^static int re_hex(int c, int *pV){$/;"	f	file:
re_insert	ext/misc/regexp.c	/^static int re_insert(ReCompiled *p, int iBefore, int op, int arg){$/;"	f	file:
re_match	ext/misc/regexp.c	/^static int re_match(ReCompiled *pRe, const unsigned char *zIn, int nIn){$/;"	f	file:
re_match	ext/misc/regexp.c	69;"	d	file:
re_next_char	ext/misc/regexp.c	/^static unsigned re_next_char(ReInput *p){$/;"	f	file:
re_next_char_nocase	ext/misc/regexp.c	/^static unsigned re_next_char_nocase(ReInput *p){$/;"	f	file:
re_resize	ext/misc/regexp.c	/^static int re_resize(ReCompiled *p, int N){$/;"	f	file:
re_space_char	ext/misc/regexp.c	/^static int re_space_char(int c){$/;"	f	file:
re_sql_func	ext/misc/regexp.c	/^static void re_sql_func($/;"	f	file:
re_subcompile_re	ext/misc/regexp.c	/^static const char *re_subcompile_re(ReCompiled *p){$/;"	f	file:
re_subcompile_string	ext/misc/regexp.c	/^static const char *re_subcompile_string(ReCompiled *p){$/;"	f	file:
re_word_char	ext/misc/regexp.c	/^static int re_word_char(int c){$/;"	f	file:
read32bits	sqlite3.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
read32bits	src/pager.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
read32bits	tsrc/pager.c	/^static int read32bits(sqlite3_file *fd, i64 offset, u32 *pRes){$/;"	f	file:
readCoord	ext/rtree/rtree.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readCoord	sqlite3.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readCoord	tsrc/rtree.c	/^static void readCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
readDbPage	sqlite3.c	/^static int readDbPage(PgHdr *pPg, u32 iFrame){$/;"	f	file:
readDbPage	src/pager.c	/^static int readDbPage(PgHdr *pPg, u32 iFrame){$/;"	f	file:
readDbPage	tsrc/pager.c	/^static int readDbPage(PgHdr *pPg, u32 iFrame){$/;"	f	file:
readDocid	ext/fts1/fts1.c	/^static sqlite_int64 readDocid(DocListReader *pReader){$/;"	f	file:
readDocid	ext/fts1/fulltext.c	/^static sqlite_int64 readDocid(DocListReader *pReader){$/;"	f	file:
readDocid	tsrc/fts1.c	/^static sqlite_int64 readDocid(DocListReader *pReader){$/;"	f	file:
readFile	ext/session/changeset.c	/^static void readFile(const char *zFilename, int *pSz, void **ppBuf){$/;"	f	file:
readFile	mptest/mptest.c	/^static char *readFile(const char *zFilename){$/;"	f	file:
readFile	tool/mkmsvcmin.tcl	/^proc readFile { fileName } {$/;"	p
readFile	tool/mkvsix.tcl	/^proc readFile { fileName } {$/;"	p
readFile	tool/srcck1.c	/^static char *readFile(const char *zFilename){$/;"	f	file:
readFile	vsixtest/vsixtest.tcl	/^proc readFile { fileName } {$/;"	p
readInt16	ext/rtree/rtree.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt16	sqlite3.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt16	tsrc/rtree.c	/^static int readInt16(u8 *p){$/;"	f	file:
readInt64	ext/rtree/rtree.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readInt64	sqlite3.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readInt64	tsrc/rtree.c	/^static i64 readInt64(u8 *p){$/;"	f	file:
readJournalFile	src/test_journal.c	/^static int readJournalFile(jt_file *p, jt_file *pMain){$/;"	f	file:
readJournalHdr	sqlite3.c	/^static int readJournalHdr($/;"	f	file:
readJournalHdr	src/pager.c	/^static int readJournalHdr($/;"	f	file:
readJournalHdr	tsrc/pager.c	/^static int readJournalHdr($/;"	f	file:
readLock	sqlite3.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readLock	src/wal.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readLock	tsrc/wal.c	/^  i16 readLock;              \/* Which read lock is being held.  -1 for none *\/$/;"	m	struct:Wal	file:
readMasterJournal	sqlite3.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readMasterJournal	src/pager.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readMasterJournal	tsrc/pager.c	/^static int readMasterJournal(sqlite3_file *pJrnl, char *zMaster, u32 nMaster){$/;"	f	file:
readOnly	sqlite3.c	/^  bft readOnly:1;         \/* True for statements that do not write *\/$/;"	m	struct:Vdbe	file:
readOnly	sqlite3.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	sqlite3.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readOnly	src/pager.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	src/vdbeInt.h	/^  bft readOnly:1;         \/* True for statements that do not write *\/$/;"	m	struct:Vdbe
readOnly	src/wal.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readOnly	tsrc/pager.c	/^  u8 readOnly;                \/* True for a read-only database *\/$/;"	m	struct:Pager	file:
readOnly	tsrc/vdbeInt.h	/^  bft readOnly:1;         \/* True for statements that do not write *\/$/;"	m	struct:Vdbe
readOnly	tsrc/wal.c	/^  u8 readOnly;               \/* WAL_RDWR, WAL_RDONLY, or WAL_SHM_RDONLY *\/$/;"	m	struct:Wal	file:
readPosition	ext/fts1/fts1.c	/^static int readPosition(DocListReader *pReader, int *iColumn){$/;"	f	file:
readPosition	ext/fts1/fulltext.c	/^static int readPosition(DocListReader *pReader){$/;"	f	file:
readPosition	tsrc/fts1.c	/^static int readPosition(DocListReader *pReader, int *iColumn){$/;"	f	file:
readScriptFile	tool/speedtest8inst1.c	/^static char *readScriptFile(const char *zFile, int *pnScript){$/;"	f	file:
readUtf8	ext/misc/nextchar.c	/^static int readUtf8(const unsigned char *z, unsigned *pOut){$/;"	f	file:
read_content	tool/showjournal.c	/^static unsigned char *read_content(int N, int iOfst){$/;"	f	file:
read_fts3varint	src/test_hexio.c	/^static int SQLITE_TCLAPI read_fts3varint($/;"	f	file:
readdir	src/test_windirent.c	/^LPDIRENT readdir($/;"	f
readdir_r	src/test_windirent.c	/^INT readdir_r($/;"	f
reader	ext/fts2/fts2.c	/^  DLReader reader;                 \/* Result reader if result not empty *\/$/;"	m	struct:fulltext_cursor	file:
reader	ext/fts2/fts2.c	/^  LeavesReader reader;$/;"	m	struct:OptLeavesReader	file:
reader	ext/fts5/fts5_expr.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
reader	fts5.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
reader	sqlite3.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
reader	tsrc/fts2.c	/^  DLReader reader;                 \/* Result reader if result not empty *\/$/;"	m	struct:fulltext_cursor	file:
reader	tsrc/fts2.c	/^  LeavesReader reader;$/;"	m	struct:OptLeavesReader	file:
reader	tsrc/fts5.c	/^  Fts5LookaheadReader reader;     \/* Input iterator *\/$/;"	m	struct:Fts5NearTrimmer	file:
readerAtEnd	ext/fts1/fulltext.c	/^static int readerAtEnd(DocListReader *pReader){$/;"	f	file:
readerInit	ext/fts1/fts1.c	/^static void readerInit(DocListReader *r, DocList *pDoclist){$/;"	f	file:
readerInit	ext/fts1/fulltext.c	/^static void readerInit(DocListReader *r, DocList *pDoclist){$/;"	f	file:
readerInit	tsrc/fts1.c	/^static void readerInit(DocListReader *r, DocList *pDoclist){$/;"	f	file:
readfile	ext/fts5/tool/fts5txt2db.tcl	/^proc readfile {file} {$/;"	p
readfile	ext/fts5/tool/mkfts5c.tcl	/^proc readfile {zFile} {$/;"	p
readfileFunc	ext/misc/fileio.c	/^static void readfileFunc($/;"	f	file:
readfileFunc	shell.c	/^static void readfileFunc($/;"	f	file:
readfileFunc	src/shell.c	/^static void readfileFunc($/;"	f	file:
readfileFunc	test/fuzzcheck.c	/^static void readfileFunc($/;"	f	file:
readfileFunc	tool/loadfts.c	/^static void readfileFunc($/;"	f	file:
readfileFunc	tsrc/shell.c	/^static void readfileFunc($/;"	f	file:
readpoint	sqlite3.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readpoint	src/memjournal.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readpoint	tsrc/memjournal.c	/^  FilePoint readpoint;            \/* Pointer to the end of the last xRead() *\/$/;"	m	struct:MemJournal	file:
readsTable	sqlite3.c	/^static int readsTable(Parse *p, int iDb, Table *pTab){$/;"	f	file:
readsTable	src/insert.c	/^static int readsTable(Parse *p, int iDb, Table *pTab){$/;"	f	file:
readsTable	tsrc/insert.c	/^static int readsTable(Parse *p, int iDb, Table *pTab){$/;"	f	file:
real2hex	src/test_func.c	/^static void real2hex($/;"	f	file:
realTime	test/wordcount.c	/^static sqlite3_int64 realTime(void){$/;"	f	file:
realloc	sqlite3.c	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines	file:
realloc	sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
realloc	src/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
realloc	tsrc/sqlite3ext.h	/^  void *(*realloc)(void*,int);$/;"	m	struct:sqlite3_api_routines
realloc64	sqlite3.c	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
realloc64	sqlite3ext.h	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
realloc64	src/sqlite3ext.h	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
realloc64	tsrc/sqlite3ext.h	/^  void *(*realloc64)(void*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
realnum_normalize	test/tester.tcl	/^proc realnum_normalize {r} {$/;"	p
rebuildPage	sqlite3.c	/^static int rebuildPage($/;"	f	file:
rebuildPage	src/btree.c	/^static int rebuildPage($/;"	f	file:
rebuildPage	tsrc/btree.c	/^static int rebuildPage($/;"	f	file:
rebuild_database	test/fuzzcheck.c	/^static void rebuild_database(sqlite3 *db){$/;"	f	file:
recordFunc	sqlite3.c	/^static void recordFunc($/;"	f	file:
recordFunc	src/vdbemem.c	/^static void recordFunc($/;"	f	file:
recordFunc	tsrc/vdbemem.c	/^static void recordFunc($/;"	f	file:
record_one	tool/mkpragmatab.tcl	/^proc record_one {} {$/;"	p
refill-xy	test/show_speedtest1_rtree.tcl	/^proc refill-xy {} {$/;"	p
refill-xz	test/show_speedtest1_rtree.tcl	/^proc refill-xz {} {$/;"	p
refill-yz	test/show_speedtest1_rtree.tcl	/^proc refill-yz {} {$/;"	p
reformatVfs	test/fuzzcheck.c	/^static void reformatVfs(void){$/;"	f	file:
regCtr	sqlite3.c	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo	file:
regCtr	src/sqliteInt.h	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo
regCtr	tsrc/sqliteInt.h	/^  int regCtr;           \/* Memory register holding the rowid counter *\/$/;"	m	struct:AutoincInfo
regResult	sqlite3.c	/^    int regResult;    \/* Registers holding results of a co-routine *\/$/;"	m	struct:SrcList::SrcList_item	file:
regResult	src/sqliteInt.h	/^    int regResult;    \/* Registers holding results of a co-routine *\/$/;"	m	struct:SrcList::SrcList_item
regResult	tsrc/sqliteInt.h	/^    int regResult;    \/* Registers holding results of a co-routine *\/$/;"	m	struct:SrcList::SrcList_item
regReturn	sqlite3.c	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item	file:
regReturn	sqlite3.c	/^  int regReturn;        \/* Register holding block-output return address *\/$/;"	m	struct:SortCtx	file:
regReturn	src/select.c	/^  int regReturn;        \/* Register holding block-output return address *\/$/;"	m	struct:SortCtx	file:
regReturn	src/sqliteInt.h	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item
regReturn	tsrc/select.c	/^  int regReturn;        \/* Register holding block-output return address *\/$/;"	m	struct:SortCtx	file:
regReturn	tsrc/sqliteInt.h	/^    int regReturn;    \/* Register holding return address of addrFillSub *\/$/;"	m	struct:SrcList::SrcList_item
regRoot	sqlite3.c	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse	file:
regRoot	src/sqliteInt.h	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse
regRoot	tsrc/sqliteInt.h	/^  int regRoot;         \/* Register holding root page number for new objects *\/$/;"	m	struct:Parse
regRowid	sqlite3.c	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse	file:
regRowid	src/sqliteInt.h	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse
regRowid	tsrc/sqliteInt.h	/^  int regRowid;        \/* Register holding rowid of CREATE TABLE entry *\/$/;"	m	struct:Parse
registerTestFunctions	src/test_func.c	/^static int registerTestFunctions($/;"	f	file:
registerTokenizer	ext/fts2/fts2_tokenizer.c	/^int registerTokenizer($/;"	f	file:
registerTokenizer	ext/fts3/fts3_tokenizer.c	/^int registerTokenizer($/;"	f	file:
registerTokenizer	sqlite3.c	/^int registerTokenizer($/;"	f	file:
registerTokenizer	tsrc/fts2_tokenizer.c	/^int registerTokenizer($/;"	f	file:
registerTokenizer	tsrc/fts3_tokenizer.c	/^int registerTokenizer($/;"	f	file:
registerTrace	sqlite3.c	/^static void registerTrace(int iReg, Mem *p){$/;"	f	file:
registerTrace	src/vdbe.c	/^static void registerTrace(int iReg, Mem *p){$/;"	f	file:
registerTrace	tsrc/vdbe.c	/^static void registerTrace(int iReg, Mem *p){$/;"	f	file:
register_circle_geom	src/test_rtree.c	/^static int SQLITE_TCLAPI register_circle_geom($/;"	f	file:
register_cube_geom	src/test_rtree.c	/^static int SQLITE_TCLAPI register_cube_geom($/;"	f	file:
register_demovfs	src/test_demovfs.c	/^static int SQLITE_TCLAPI register_demovfs($/;"	f	file:
register_echo_module	src/test8.c	/^static int SQLITE_TCLAPI register_echo_module($/;"	f	file:
register_fs_module	src/test_fs.c	/^static int SQLITE_TCLAPI register_fs_module($/;"	f	file:
register_schema_module	src/test_schema.c	/^static int SQLITE_TCLAPI register_schema_module($/;"	f	file:
register_tcl_module	src/test_bestindex.c	/^static int SQLITE_TCLAPI register_tcl_module($/;"	f	file:
register_tclvar_module	src/test_tclvar.c	/^static int SQLITE_TCLAPI register_tclvar_module($/;"	f	file:
rehash	ext/fts1/ft_hash.c	/^static void rehash(Hash *pH, int new_size){$/;"	f	file:
rehash	ext/fts1/fts1_hash.c	/^static void rehash(fts1Hash *pH, int new_size){$/;"	f	file:
rehash	ext/fts2/fts2_hash.c	/^static void rehash(fts2Hash *pH, int new_size){$/;"	f	file:
rehash	sqlite3.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
rehash	src/hash.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
rehash	tsrc/fts1_hash.c	/^static void rehash(fts1Hash *pH, int new_size){$/;"	f	file:
rehash	tsrc/fts2_hash.c	/^static void rehash(fts2Hash *pH, int new_size){$/;"	f	file:
rehash	tsrc/hash.c	/^static int rehash(Hash *pH, unsigned int new_size){$/;"	f	file:
reindexDatabases	sqlite3.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexDatabases	src/build.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexDatabases	tsrc/build.c	/^static void reindexDatabases(Parse *pParse, char const *zColl){$/;"	f	file:
reindexTable	sqlite3.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reindexTable	src/build.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reindexTable	tsrc/build.c	/^static void reindexTable(Parse *pParse, Table *pTab, char const *zColl){$/;"	f	file:
reinsertNodeContent	ext/rtree/rtree.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
reinsertNodeContent	sqlite3.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
reinsertNodeContent	tsrc/rtree.c	/^static int reinsertNodeContent(Rtree *pRtree, RtreeNode *pNode){$/;"	f	file:
releaseAllSavepoints	sqlite3.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseAllSavepoints	src/pager.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseAllSavepoints	tsrc/pager.c	/^static void releaseAllSavepoints(Pager *pPager){$/;"	f	file:
releaseInodeInfo	sqlite3.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseInodeInfo	src/os_unix.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseInodeInfo	tsrc/os_unix.c	/^static void releaseInodeInfo(unixFile *pFile){$/;"	f	file:
releaseMemArray	sqlite3.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releaseMemArray	src/vdbeaux.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releaseMemArray	tsrc/vdbeaux.c	/^static void releaseMemArray(Mem *p, int N){$/;"	f	file:
releasePage	sqlite3.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
releasePage	src/btree.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
releasePage	tsrc/btree.c	/^static void releasePage(MemPage *pPage){$/;"	f	file:
releasePageNotNull	sqlite3.c	/^static void releasePageNotNull(MemPage *pPage){$/;"	f	file:
releasePageNotNull	src/btree.c	/^static void releasePageNotNull(MemPage *pPage){$/;"	f	file:
releasePageNotNull	tsrc/btree.c	/^static void releasePageNotNull(MemPage *pPage){$/;"	f	file:
release_memory	sqlite3.c	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines	file:
release_memory	sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
release_memory	src/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
release_memory	tsrc/sqlite3ext.h	/^  int (*release_memory)(int);$/;"	m	struct:sqlite3_api_routines
reloadTableSchema	sqlite3.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
reloadTableSchema	src/alter.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
reloadTableSchema	tsrc/alter.c	/^static void reloadTableSchema(Parse *pParse, Table *pTab, const char *zName){$/;"	f	file:
relocatePage	sqlite3.c	/^static int relocatePage($/;"	f	file:
relocatePage	src/btree.c	/^static int relocatePage($/;"	f	file:
relocatePage	tsrc/btree.c	/^static int relocatePage($/;"	f	file:
removeElementGivenHash	ext/fts1/ft_hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	ext/fts1/fts1_hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	ext/fts2/fts2_hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	sqlite3.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	src/hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	tsrc/fts1_hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	tsrc/fts2_hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeElementGivenHash	tsrc/hash.c	/^static void removeElementGivenHash($/;"	f	file:
removeFromBlockedList	sqlite3.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromBlockedList	src/notify.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromBlockedList	tsrc/notify.c	/^static void removeFromBlockedList(sqlite3 *db){$/;"	f	file:
removeFromSharingList	sqlite3.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeFromSharingList	src/btree.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeFromSharingList	tsrc/btree.c	/^static int removeFromSharingList(BtShared *pBt){$/;"	f	file:
removeNode	ext/rtree/rtree.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
removeNode	sqlite3.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
removeNode	tsrc/rtree.c	/^static int removeNode(Rtree *pRtree, RtreeNode *pNode, int iHeight){$/;"	f	file:
remove_diacritic	ext/fts3/fts3_unicode2.c	/^static int remove_diacritic(int c){$/;"	f	file:
remove_diacritic	sqlite3.c	/^static int remove_diacritic(int c){$/;"	f	file:
remove_diacritic	tsrc/fts3_unicode2.c	/^static int remove_diacritic(int c){$/;"	f	file:
renameParentFunc	sqlite3.c	/^static void renameParentFunc($/;"	f	file:
renameParentFunc	src/alter.c	/^static void renameParentFunc($/;"	f	file:
renameParentFunc	tsrc/alter.c	/^static void renameParentFunc($/;"	f	file:
renameTableFunc	sqlite3.c	/^static void renameTableFunc($/;"	f	file:
renameTableFunc	src/alter.c	/^static void renameTableFunc($/;"	f	file:
renameTableFunc	tsrc/alter.c	/^static void renameTableFunc($/;"	f	file:
renameTriggerFunc	sqlite3.c	/^static void renameTriggerFunc($/;"	f	file:
renameTriggerFunc	src/alter.c	/^static void renameTriggerFunc($/;"	f	file:
renameTriggerFunc	tsrc/alter.c	/^static void renameTriggerFunc($/;"	f	file:
renderLogMsg	sqlite3.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
renderLogMsg	src/printf.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
renderLogMsg	tsrc/printf.c	/^static void renderLogMsg(int iErrCode, const char *zFormat, va_list ap){$/;"	f	file:
renderValue	ext/session/changeset.c	/^static void renderValue(sqlite3_value *pVal){$/;"	f	file:
repeat	ext/fts5/tool/fts5txt2db.tcl	/^proc repeat {L n} {$/;"	p
replaceFileNameTokens	tool/mkvsix.tcl	/^proc replaceFileNameTokens { fileName name buildName platformName } {$/;"	p
replaceFunc	sqlite3.c	/^static void replaceFunc($/;"	f	file:
replaceFunc	src/func.c	/^static void replaceFunc($/;"	f	file:
replaceFunc	tsrc/func.c	/^static void replaceFunc($/;"	f	file:
replace_handler	ext/session/test_session.c	/^static int replace_handler($/;"	f	file:
reportError	sqlite3.c	/^static int reportError(int iErr, int lineno, const char *zType){$/;"	f	file:
reportError	src/main.c	/^static int reportError(int iErr, int lineno, const char *zType){$/;"	f	file:
reportError	tsrc/main.c	/^static int reportError(int iErr, int lineno, const char *zType){$/;"	f	file:
report_default_vfs	ext/rbu/rbu.c	/^void report_default_vfs(){$/;"	f
report_rbu_vfs	ext/rbu/rbu.c	/^void report_rbu_vfs(sqlite3rbu *pRbu){$/;"	f
reserved	sqlite3.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reserved	src/os_unix.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reserved	tsrc/os_unix.c	/^  int reserved;$/;"	m	struct:afpLockingContext	file:
reset	sqlite3.c	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines	file:
reset	sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
reset	src/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
reset	tsrc/sqlite3ext.h	/^  int  (*reset)(sqlite3_stmt*pStmt);$/;"	m	struct:sqlite3_api_routines
resetAccumulator	sqlite3.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAccumulator	src/select.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAccumulator	tsrc/select.c	/^static void resetAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
resetAndCollectError	ext/rbu/sqlite3rbu.c	/^static int resetAndCollectError(sqlite3_stmt *pStmt, char **pzErrmsg){$/;"	f	file:
resetAndCollectError	sqlite3.c	/^static int resetAndCollectError(sqlite3_stmt *pStmt, char **pzErrmsg){$/;"	f	file:
resetAndCollectError	tsrc/sqlite3rbu.c	/^static int resetAndCollectError(sqlite3_stmt *pStmt, char **pzErrmsg){$/;"	f	file:
resetAutoExtObjCmd	src/test_autoext.c	/^static int SQLITE_TCLAPI resetAutoExtObjCmd($/;"	f	file:
reset_auto_extension	sqlite3.c	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines	file:
reset_auto_extension	sqlite3ext.h	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines
reset_auto_extension	src/sqlite3ext.h	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines
reset_auto_extension	tsrc/sqlite3ext.h	/^  void (*reset_auto_extension)(void);$/;"	m	struct:sqlite3_api_routines
reset_db	test/tester.tcl	/^proc reset_db {} {$/;"	p
reset_prng_state	src/test1.c	/^static int SQLITE_TCLAPI reset_prng_state($/;"	f	file:
resizeIndexObject	sqlite3.c	/^static int resizeIndexObject(sqlite3 *db, Index *pIdx, int N){$/;"	f	file:
resizeIndexObject	src/build.c	/^static int resizeIndexObject(sqlite3 *db, Index *pIdx, int N){$/;"	f	file:
resizeIndexObject	tsrc/build.c	/^static int resizeIndexObject(sqlite3 *db, Index *pIdx, int N){$/;"	f	file:
resize_canvas_to_fit	test/show_speedtest1_rtree.tcl	/^proc resize_canvas_to_fit {} {$/;"	p
resolveAlias	sqlite3.c	/^static void resolveAlias($/;"	f	file:
resolveAlias	src/resolve.c	/^static void resolveAlias($/;"	f	file:
resolveAlias	tsrc/resolve.c	/^static void resolveAlias($/;"	f	file:
resolveAsName	sqlite3.c	/^static int resolveAsName($/;"	f	file:
resolveAsName	src/resolve.c	/^static int resolveAsName($/;"	f	file:
resolveAsName	tsrc/resolve.c	/^static int resolveAsName($/;"	f	file:
resolveAttachExpr	sqlite3.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveAttachExpr	src/attach.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveAttachExpr	tsrc/attach.c	/^static int resolveAttachExpr(NameContext *pName, Expr *pExpr)$/;"	f	file:
resolveCompoundOrderBy	sqlite3.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveCompoundOrderBy	src/resolve.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveCompoundOrderBy	tsrc/resolve.c	/^static int resolveCompoundOrderBy($/;"	f	file:
resolveExprStep	sqlite3.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveExprStep	src/resolve.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveExprStep	tsrc/resolve.c	/^static int resolveExprStep(Walker *pWalker, Expr *pExpr){$/;"	f	file:
resolveOrderByTermToExprList	sqlite3.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderByTermToExprList	src/resolve.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderByTermToExprList	tsrc/resolve.c	/^static int resolveOrderByTermToExprList($/;"	f	file:
resolveOrderGroupBy	sqlite3.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOrderGroupBy	src/resolve.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOrderGroupBy	tsrc/resolve.c	/^static int resolveOrderGroupBy($/;"	f	file:
resolveOutOfRangeError	sqlite3.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveOutOfRangeError	src/resolve.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveOutOfRangeError	tsrc/resolve.c	/^static void resolveOutOfRangeError($/;"	f	file:
resolveP2Values	sqlite3.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveP2Values	src/vdbeaux.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveP2Values	tsrc/vdbeaux.c	/^static void resolveP2Values(Vdbe *p, int *pMaxFuncArgs){$/;"	f	file:
resolveSelectStep	sqlite3.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
resolveSelectStep	src/resolve.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
resolveSelectStep	tsrc/resolve.c	/^static int resolveSelectStep(Walker *pWalker, Select *p){$/;"	f	file:
resolve_backslashes	shell.c	/^static void resolve_backslashes(char *z){$/;"	f	file:
resolve_backslashes	src/shell.c	/^static void resolve_backslashes(char *z){$/;"	f	file:
resolve_backslashes	tsrc/shell.c	/^static void resolve_backslashes(char *z){$/;"	f	file:
resolve_conflict	tool/lemon.c	/^static int resolve_conflict($/;"	f	file:
restoreCursorPosition	sqlite3.c	58955;"	d	file:
restoreCursorPosition	src/btree.c	819;"	d	file:
restoreCursorPosition	tsrc/btree.c	819;"	d	file:
restore_debug_trace_modes	shell.c	/^static void restore_debug_trace_modes(void){$/;"	f	file:
restore_debug_trace_modes	src/shell.c	/^static void restore_debug_trace_modes(void){$/;"	f	file:
restore_debug_trace_modes	tsrc/shell.c	/^static void restore_debug_trace_modes(void){$/;"	f	file:
restore_prng_state	src/test1.c	/^static int SQLITE_TCLAPI restore_prng_state($/;"	f	file:
result	ext/fts1/fts1.c	/^  DocListReader result;  \/* used when iCursorType == QUERY_FULLTEXT *\/ $/;"	m	struct:fulltext_cursor	file:
result	ext/fts1/fulltext.c	/^  DocListReader result;$/;"	m	struct:fulltext_cursor	file:
result	ext/fts2/fts2.c	/^  DataBuffer result;               \/* Doclist results from fulltextQuery *\/$/;"	m	struct:fulltext_cursor	file:
result	tsrc/fts1.c	/^  DocListReader result;  \/* used when iCursorType == QUERY_FULLTEXT *\/ $/;"	m	struct:fulltext_cursor	file:
result	tsrc/fts2.c	/^  DataBuffer result;               \/* Doclist results from fulltextQuery *\/$/;"	m	struct:fulltext_cursor	file:
result_blob	sqlite3.c	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_blob	sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_blob	src/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_blob	tsrc/sqlite3ext.h	/^  void  (*result_blob)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_blob64	sqlite3.c	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_blob64	sqlite3ext.h	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_blob64	src/sqlite3ext.h	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_blob64	tsrc/sqlite3ext.h	/^  void (*result_blob64)(sqlite3_context*,const void*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_double	sqlite3.c	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines	file:
result_double	sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_double	src/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_double	tsrc/sqlite3ext.h	/^  void  (*result_double)(sqlite3_context*,double);$/;"	m	struct:sqlite3_api_routines
result_error	sqlite3.c	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error	sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error	src/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error	tsrc/sqlite3ext.h	/^  void  (*result_error)(sqlite3_context*,const char*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	sqlite3.c	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error16	sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	src/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error16	tsrc/sqlite3ext.h	/^  void  (*result_error16)(sqlite3_context*,const void*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	sqlite3.c	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_error_code	sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	src/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_code	tsrc/sqlite3ext.h	/^  void (*result_error_code)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	sqlite3.c	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_nomem	sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	src/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_nomem	tsrc/sqlite3ext.h	/^  void (*result_error_nomem)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	sqlite3.c	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_error_toobig	sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	src/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_error_toobig	tsrc/sqlite3ext.h	/^  void (*result_error_toobig)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_int	sqlite3.c	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_int	sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int	src/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int	tsrc/sqlite3ext.h	/^  void  (*result_int)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_int64	sqlite3.c	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines	file:
result_int64	sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_int64	src/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_int64	tsrc/sqlite3ext.h	/^  void  (*result_int64)(sqlite3_context*,sqlite_int64);$/;"	m	struct:sqlite3_api_routines
result_null	sqlite3.c	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
result_null	sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_null	src/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_null	tsrc/sqlite3ext.h	/^  void  (*result_null)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
result_subtype	sqlite3.c	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
result_subtype	sqlite3ext.h	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines
result_subtype	src/sqlite3ext.h	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines
result_subtype	tsrc/sqlite3ext.h	/^  void (*result_subtype)(sqlite3_context*,unsigned int);$/;"	m	struct:sqlite3_api_routines
result_text	sqlite3.c	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text	sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text	src/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text	tsrc/sqlite3ext.h	/^  void  (*result_text)(sqlite3_context*,const char*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	sqlite3.c	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16	sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	src/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16	tsrc/sqlite3ext.h	/^  void  (*result_text16)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	sqlite3.c	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16be	sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	src/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16be	tsrc/sqlite3ext.h	/^  void  (*result_text16be)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	sqlite3.c	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
result_text16le	sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	src/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text16le	tsrc/sqlite3ext.h	/^  void  (*result_text16le)(sqlite3_context*,const void*,int,void(*)(void*));$/;"	m	struct:sqlite3_api_routines
result_text64	sqlite3.c	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines	file:
result_text64	sqlite3ext.h	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_text64	src/sqlite3ext.h	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_text64	tsrc/sqlite3ext.h	/^  void (*result_text64)(sqlite3_context*,const char*,sqlite3_uint64,$/;"	m	struct:sqlite3_api_routines
result_value	sqlite3.c	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
result_value	sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_value	src/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_value	tsrc/sqlite3ext.h	/^  void  (*result_value)(sqlite3_context*,sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	sqlite3.c	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob	sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	src/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_zeroblob	tsrc/sqlite3ext.h	/^  void (*result_zeroblob)(sqlite3_context*,int);$/;"	m	struct:sqlite3_api_routines
result_zeroblob64	sqlite3.c	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines	file:
result_zeroblob64	sqlite3ext.h	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
result_zeroblob64	src/sqlite3ext.h	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
result_zeroblob64	tsrc/sqlite3ext.h	/^  int (*result_zeroblob64)(sqlite3_context*,sqlite3_uint64);$/;"	m	struct:sqlite3_api_routines
retRangeStart	sqlite3.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retRangeStart	src/os_unix.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
retRangeStart	tsrc/os_unix.c	/^  unsigned long long retRangeStart; \/* nbr of 1st byte locked if successful *\/$/;"	m	struct:ByteRangeLockPB2	file:
returnSingleInt	sqlite3.c	/^static void returnSingleInt(Vdbe *v, const char *zLabel, i64 value){$/;"	f	file:
returnSingleInt	src/pragma.c	/^static void returnSingleInt(Vdbe *v, const char *zLabel, i64 value){$/;"	f	file:
returnSingleInt	tsrc/pragma.c	/^static void returnSingleInt(Vdbe *v, const char *zLabel, i64 value){$/;"	f	file:
returnSingleText	sqlite3.c	/^static void returnSingleText($/;"	f	file:
returnSingleText	src/pragma.c	/^static void returnSingleText($/;"	f	file:
returnSingleText	tsrc/pragma.c	/^static void returnSingleText($/;"	f	file:
return_if_no_fts5	ext/fts5/test/fts5_common.tcl	/^  proc return_if_no_fts5 {} {$/;"	p
return_if_no_fts5	ext/fts5/test/fts5_common.tcl	/^  proc return_if_no_fts5 {} {}$/;"	p
reusable	sqlite3.c	/^    unsigned reusable :1;   \/* Constant expression is reusable *\/$/;"	m	struct:ExprList::ExprList_item	file:
reusable	src/sqliteInt.h	/^    unsigned reusable :1;   \/* Constant expression is reusable *\/$/;"	m	struct:ExprList::ExprList_item
reusable	tsrc/sqliteInt.h	/^    unsigned reusable :1;   \/* Constant expression is reusable *\/$/;"	m	struct:ExprList::ExprList_item
revLoop	sqlite3.c	/^  Bitmask revLoop;      \/* aLoop[]s that should be reversed for ORDER BY *\/$/;"	m	struct:WherePath	file:
revLoop	src/whereInt.h	/^  Bitmask revLoop;      \/* aLoop[]s that should be reversed for ORDER BY *\/$/;"	m	struct:WherePath
revLoop	tsrc/whereInt.h	/^  Bitmask revLoop;      \/* aLoop[]s that should be reversed for ORDER BY *\/$/;"	m	struct:WherePath
revMask	sqlite3.c	/^  Bitmask revMask;          \/* Mask of ORDER BY terms that need reversing *\/$/;"	m	struct:WhereInfo	file:
revMask	src/whereInt.h	/^  Bitmask revMask;          \/* Mask of ORDER BY terms that need reversing *\/$/;"	m	struct:WhereInfo
revMask	tsrc/whereInt.h	/^  Bitmask revMask;          \/* Mask of ORDER BY terms that need reversing *\/$/;"	m	struct:WhereInfo
reverse	test/boundary1.tcl	/^proc reverse {inlist} {$/;"	p
reverse	test/boundary2.tcl	/^proc reverse {inlist} {$/;"	p
reverse	test/boundary3.tcl	/^proc reverse {inlist} {$/;"	p
reverse	test/boundary4.tcl	/^proc reverse {inlist} {$/;"	p
rhs	tool/lemon.c	/^  struct symbol **rhs;     \/* The RHS symbols *\/$/;"	m	struct:rule	typeref:struct:rule::symbol	file:
rhs	tool/lemon.c	/^  struct symbol *rhs[MAXRHS];  \/* RHS symbols *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
rhsalias	tool/lemon.c	/^  const char **rhsalias;   \/* An alias for each RHS symbol (NULL if none) *\/$/;"	m	struct:rule	file:
robustFchown	sqlite3.c	/^static int robustFchown(int fd, uid_t uid, gid_t gid){$/;"	f	file:
robustFchown	src/os_unix.c	/^static int robustFchown(int fd, uid_t uid, gid_t gid){$/;"	f	file:
robustFchown	tsrc/os_unix.c	/^static int robustFchown(int fd, uid_t uid, gid_t gid){$/;"	f	file:
robust_close	sqlite3.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_close	src/os_unix.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_close	tsrc/os_unix.c	/^static void robust_close(unixFile *pFile, int h, int lineno){$/;"	f	file:
robust_flock	sqlite3.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	sqlite3.c	31568;"	d	file:
robust_flock	src/os_unix.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	src/os_unix.c	2243;"	d	file:
robust_flock	tsrc/os_unix.c	/^static int robust_flock(int fd, int op){$/;"	f	file:
robust_flock	tsrc/os_unix.c	2243;"	d	file:
robust_ftruncate	sqlite3.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_ftruncate	src/os_unix.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_ftruncate	tsrc/os_unix.c	/^static int robust_ftruncate(int h, sqlite3_int64 sz){$/;"	f	file:
robust_open	sqlite3.c	/^static int robust_open(const char *z, int f, mode_t m){$/;"	f	file:
robust_open	src/os_unix.c	/^static int robust_open(const char *z, int f, mode_t m){$/;"	f	file:
robust_open	tsrc/os_unix.c	/^static int robust_open(const char *z, int f, mode_t m){$/;"	f	file:
rol	tool/dbhash.c	73;"	d	file:
rol	tool/dbhash.c	79;"	d	file:
rollback_hook	sqlite3.c	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
rollback_hook	sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
rollback_hook	src/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
rollback_hook	tsrc/sqlite3ext.h	/^  void * (*rollback_hook)(sqlite3*,void(*)(void*),void*);$/;"	m	struct:sqlite3_api_routines
rootData	ext/fts2/fts2.c	/^  DataBuffer rootData;      \/* root data for inline. *\/$/;"	m	struct:LeavesReader	file:
rootData	tsrc/fts2.c	/^  DataBuffer rootData;      \/* root data for inline. *\/$/;"	m	struct:LeavesReader	file:
rootOnly	ext/fts3/fts3_write.c	/^  u8 rootOnly;                    \/* True for a root-only reader *\/$/;"	m	struct:Fts3SegReader	file:
rootOnly	sqlite3.c	/^  u8 rootOnly;                    \/* True for a root-only reader *\/$/;"	m	struct:Fts3SegReader	file:
rootOnly	tsrc/fts3_write.c	/^  u8 rootOnly;                    \/* True for a root-only reader *\/$/;"	m	struct:Fts3SegReader	file:
ror	tool/dbhash.c	74;"	d	file:
ror	tool/dbhash.c	80;"	d	file:
rot13	ext/misc/rot13.c	/^static unsigned char rot13(unsigned char c){$/;"	f	file:
rot13CollFunc	ext/misc/rot13.c	/^static int rot13CollFunc($/;"	f	file:
rot13func	ext/misc/rot13.c	/^static void rot13func($/;"	f	file:
roundFunc	sqlite3.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
roundFunc	src/func.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
roundFunc	tsrc/func.c	/^static void roundFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
roundup_allones	test/speedtest1.c	/^unsigned roundup_allones(unsigned limit){$/;"	f
rowSeparator	shell.c	/^  char rowSeparator[20]; \/* Row separator character for MODE_Ascii *\/$/;"	m	struct:ShellState	file:
rowSeparator	src/shell.c	/^  char rowSeparator[20]; \/* Row separator character for MODE_Ascii *\/$/;"	m	struct:ShellState	file:
rowSeparator	tsrc/shell.c	/^  char rowSeparator[20]; \/* Row separator character for MODE_Ascii *\/$/;"	m	struct:ShellState	file:
rowSetEntryAlloc	sqlite3.c	/^static struct RowSetEntry *rowSetEntryAlloc(RowSet *p){$/;"	f	file:
rowSetEntryAlloc	src/rowset.c	/^static struct RowSetEntry *rowSetEntryAlloc(RowSet *p){$/;"	f	file:
rowSetEntryAlloc	tsrc/rowset.c	/^static struct RowSetEntry *rowSetEntryAlloc(RowSet *p){$/;"	f	file:
rowSetEntryMerge	sqlite3.c	/^static struct RowSetEntry *rowSetEntryMerge($/;"	f	file:
rowSetEntryMerge	src/rowset.c	/^static struct RowSetEntry *rowSetEntryMerge($/;"	f	file:
rowSetEntryMerge	tsrc/rowset.c	/^static struct RowSetEntry *rowSetEntryMerge($/;"	f	file:
rowSetEntrySort	sqlite3.c	/^static struct RowSetEntry *rowSetEntrySort(struct RowSetEntry *pIn){$/;"	f	file:
rowSetEntrySort	src/rowset.c	/^static struct RowSetEntry *rowSetEntrySort(struct RowSetEntry *pIn){$/;"	f	file:
rowSetEntrySort	tsrc/rowset.c	/^static struct RowSetEntry *rowSetEntrySort(struct RowSetEntry *pIn){$/;"	f	file:
rowSetListToTree	sqlite3.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetListToTree	src/rowset.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetListToTree	tsrc/rowset.c	/^static struct RowSetEntry *rowSetListToTree(struct RowSetEntry *pList){$/;"	f	file:
rowSetNDeepTree	sqlite3.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetNDeepTree	src/rowset.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetNDeepTree	tsrc/rowset.c	/^static struct RowSetEntry *rowSetNDeepTree($/;"	f	file:
rowSetTreeToList	sqlite3.c	/^static void rowSetTreeToList($/;"	f	file:
rowSetTreeToList	src/rowset.c	/^static void rowSetTreeToList($/;"	f	file:
rowSetTreeToList	tsrc/rowset.c	/^static void rowSetTreeToList($/;"	f	file:
rowid	ext/fts5/fts5_vocab.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowid	fts5.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowid	sqlite3.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowid	src/test_schema.c	/^  int rowid;$/;"	m	struct:schema_cursor	file:
rowid	tsrc/fts5.c	/^  i64 rowid;                      \/* This table's current rowid value *\/$/;"	m	struct:Fts5VocabCursor	file:
rowidWrite	ext/rtree/rtree.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rowidWrite	sqlite3.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rowidWrite	tsrc/rtree.c	/^static int rowidWrite(Rtree *pRtree, sqlite3_int64 iRowid, sqlite3_int64 iNode){$/;"	f	file:
rp	tool/lemon.c	/^    struct rule *rp;       \/* The rule, if a reduce *\/$/;"	m	union:action::__anon5	typeref:struct:action::__anon5::rule	file:
rp	tool/lemon.c	/^  struct rule *rp;         \/* The rule upon which the configuration is based *\/$/;"	m	struct:config	typeref:struct:config::rule	file:
rsFlags	sqlite3.c	/^  u16 rsFlags;                   \/* Various flags *\/$/;"	m	struct:RowSet	file:
rsFlags	src/rowset.c	/^  u16 rsFlags;                   \/* Various flags *\/$/;"	m	struct:RowSet	file:
rsFlags	tsrc/rowset.c	/^  u16 rsFlags;                   \/* Various flags *\/$/;"	m	struct:RowSet	file:
rtreeBestIndex	ext/rtree/rtree.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeBestIndex	sqlite3.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeBestIndex	tsrc/rtree.c	/^static int rtreeBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
rtreeCallbackConstraint	ext/rtree/rtree.c	/^static int rtreeCallbackConstraint($/;"	f	file:
rtreeCallbackConstraint	sqlite3.c	/^static int rtreeCallbackConstraint($/;"	f	file:
rtreeCallbackConstraint	tsrc/rtree.c	/^static int rtreeCallbackConstraint($/;"	f	file:
rtreeClose	ext/rtree/rtree.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeClose	sqlite3.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeClose	tsrc/rtree.c	/^static int rtreeClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeColumn	ext/rtree/rtree.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeColumn	sqlite3.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeColumn	tsrc/rtree.c	/^static int rtreeColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
rtreeConnect	ext/rtree/rtree.c	/^static int rtreeConnect($/;"	f	file:
rtreeConnect	sqlite3.c	/^static int rtreeConnect($/;"	f	file:
rtreeConnect	tsrc/rtree.c	/^static int rtreeConnect($/;"	f	file:
rtreeConstraintError	ext/rtree/rtree.c	/^static int rtreeConstraintError(Rtree *pRtree, int iCol){$/;"	f	file:
rtreeConstraintError	sqlite3.c	/^static int rtreeConstraintError(Rtree *pRtree, int iCol){$/;"	f	file:
rtreeConstraintError	tsrc/rtree.c	/^static int rtreeConstraintError(Rtree *pRtree, int iCol){$/;"	f	file:
rtreeCreate	ext/rtree/rtree.c	/^static int rtreeCreate($/;"	f	file:
rtreeCreate	sqlite3.c	/^static int rtreeCreate($/;"	f	file:
rtreeCreate	tsrc/rtree.c	/^static int rtreeCreate($/;"	f	file:
rtreeDeleteRowid	ext/rtree/rtree.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDeleteRowid	sqlite3.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDeleteRowid	tsrc/rtree.c	/^static int rtreeDeleteRowid(Rtree *pRtree, sqlite3_int64 iDelete){$/;"	f	file:
rtreeDestroy	ext/rtree/rtree.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDestroy	sqlite3.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDestroy	tsrc/rtree.c	/^static int rtreeDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	ext/rtree/rtree.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	sqlite3.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeDisconnect	tsrc/rtree.c	/^static int rtreeDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
rtreeEnqueue	ext/rtree/rtree.c	/^static RtreeSearchPoint *rtreeEnqueue($/;"	f	file:
rtreeEnqueue	sqlite3.c	/^static RtreeSearchPoint *rtreeEnqueue($/;"	f	file:
rtreeEnqueue	tsrc/rtree.c	/^static RtreeSearchPoint *rtreeEnqueue($/;"	f	file:
rtreeEof	ext/rtree/rtree.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeEof	sqlite3.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeEof	tsrc/rtree.c	/^static int rtreeEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
rtreeFilter	ext/rtree/rtree.c	/^static int rtreeFilter($/;"	f	file:
rtreeFilter	sqlite3.c	/^static int rtreeFilter($/;"	f	file:
rtreeFilter	tsrc/rtree.c	/^static int rtreeFilter($/;"	f	file:
rtreeFreeCallback	ext/rtree/rtree.c	/^static void rtreeFreeCallback(void *p){$/;"	f	file:
rtreeFreeCallback	sqlite3.c	/^static void rtreeFreeCallback(void *p){$/;"	f	file:
rtreeFreeCallback	tsrc/rtree.c	/^static void rtreeFreeCallback(void *p){$/;"	f	file:
rtreeInit	ext/rtree/rtree.c	/^static int rtreeInit($/;"	f	file:
rtreeInit	sqlite3.c	/^static int rtreeInit($/;"	f	file:
rtreeInit	tsrc/rtree.c	/^static int rtreeInit($/;"	f	file:
rtreeInsertCell	ext/rtree/rtree.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeInsertCell	sqlite3.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeInsertCell	tsrc/rtree.c	/^static int rtreeInsertCell($/;"	f	file:
rtreeLeafConstraint	ext/rtree/rtree.c	/^static void rtreeLeafConstraint($/;"	f	file:
rtreeLeafConstraint	sqlite3.c	/^static void rtreeLeafConstraint($/;"	f	file:
rtreeLeafConstraint	tsrc/rtree.c	/^static void rtreeLeafConstraint($/;"	f	file:
rtreeMatchArgFree	ext/rtree/rtree.c	/^static void rtreeMatchArgFree(void *pArg){$/;"	f	file:
rtreeMatchArgFree	sqlite3.c	/^static void rtreeMatchArgFree(void *pArg){$/;"	f	file:
rtreeMatchArgFree	tsrc/rtree.c	/^static void rtreeMatchArgFree(void *pArg){$/;"	f	file:
rtreeModule	ext/rtree/rtree.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeModule	sqlite3.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeModule	tsrc/rtree.c	/^static sqlite3_module rtreeModule = {$/;"	v	file:
rtreeNext	ext/rtree/rtree.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeNext	sqlite3.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeNext	tsrc/rtree.c	/^static int rtreeNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
rtreeNodeOfFirstSearchPoint	ext/rtree/rtree.c	/^static RtreeNode *rtreeNodeOfFirstSearchPoint(RtreeCursor *pCur, int *pRC){$/;"	f	file:
rtreeNodeOfFirstSearchPoint	sqlite3.c	/^static RtreeNode *rtreeNodeOfFirstSearchPoint(RtreeCursor *pCur, int *pRC){$/;"	f	file:
rtreeNodeOfFirstSearchPoint	tsrc/rtree.c	/^static RtreeNode *rtreeNodeOfFirstSearchPoint(RtreeCursor *pCur, int *pRC){$/;"	f	file:
rtreeNonleafConstraint	ext/rtree/rtree.c	/^static void rtreeNonleafConstraint($/;"	f	file:
rtreeNonleafConstraint	sqlite3.c	/^static void rtreeNonleafConstraint($/;"	f	file:
rtreeNonleafConstraint	tsrc/rtree.c	/^static void rtreeNonleafConstraint($/;"	f	file:
rtreeOpen	ext/rtree/rtree.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeOpen	sqlite3.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeOpen	tsrc/rtree.c	/^static int rtreeOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
rtreeQueryStat1	ext/rtree/rtree.c	/^static int rtreeQueryStat1(sqlite3 *db, Rtree *pRtree){$/;"	f	file:
rtreeQueryStat1	sqlite3.c	/^static int rtreeQueryStat1(sqlite3 *db, Rtree *pRtree){$/;"	f	file:
rtreeQueryStat1	tsrc/rtree.c	/^static int rtreeQueryStat1(sqlite3 *db, Rtree *pRtree){$/;"	f	file:
rtreeReference	ext/rtree/rtree.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeReference	sqlite3.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeReference	tsrc/rtree.c	/^static void rtreeReference(Rtree *pRtree){$/;"	f	file:
rtreeRelease	ext/rtree/rtree.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRelease	sqlite3.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRelease	tsrc/rtree.c	/^static void rtreeRelease(Rtree *pRtree){$/;"	f	file:
rtreeRename	ext/rtree/rtree.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRename	sqlite3.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRename	tsrc/rtree.c	/^static int rtreeRename(sqlite3_vtab *pVtab, const char *zNewName){$/;"	f	file:
rtreeRowid	ext/rtree/rtree.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeRowid	sqlite3.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeRowid	tsrc/rtree.c	/^static int rtreeRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
rtreeSearchPointCompare	ext/rtree/rtree.c	/^static int rtreeSearchPointCompare($/;"	f	file:
rtreeSearchPointCompare	sqlite3.c	/^static int rtreeSearchPointCompare($/;"	f	file:
rtreeSearchPointCompare	tsrc/rtree.c	/^static int rtreeSearchPointCompare($/;"	f	file:
rtreeSearchPointFirst	ext/rtree/rtree.c	/^static RtreeSearchPoint *rtreeSearchPointFirst(RtreeCursor *pCur){$/;"	f	file:
rtreeSearchPointFirst	sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointFirst(RtreeCursor *pCur){$/;"	f	file:
rtreeSearchPointFirst	tsrc/rtree.c	/^static RtreeSearchPoint *rtreeSearchPointFirst(RtreeCursor *pCur){$/;"	f	file:
rtreeSearchPointNew	ext/rtree/rtree.c	/^static RtreeSearchPoint *rtreeSearchPointNew($/;"	f	file:
rtreeSearchPointNew	sqlite3.c	/^static RtreeSearchPoint *rtreeSearchPointNew($/;"	f	file:
rtreeSearchPointNew	tsrc/rtree.c	/^static RtreeSearchPoint *rtreeSearchPointNew($/;"	f	file:
rtreeSearchPointPop	ext/rtree/rtree.c	/^static void rtreeSearchPointPop(RtreeCursor *p){$/;"	f	file:
rtreeSearchPointPop	sqlite3.c	/^static void rtreeSearchPointPop(RtreeCursor *p){$/;"	f	file:
rtreeSearchPointPop	tsrc/rtree.c	/^static void rtreeSearchPointPop(RtreeCursor *p){$/;"	f	file:
rtreeSearchPointSwap	ext/rtree/rtree.c	/^static void rtreeSearchPointSwap(RtreeCursor *p, int i, int j){$/;"	f	file:
rtreeSearchPointSwap	sqlite3.c	/^static void rtreeSearchPointSwap(RtreeCursor *p, int i, int j){$/;"	f	file:
rtreeSearchPointSwap	tsrc/rtree.c	/^static void rtreeSearchPointSwap(RtreeCursor *p, int i, int j){$/;"	f	file:
rtreeSqlInit	ext/rtree/rtree.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeSqlInit	sqlite3.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeSqlInit	tsrc/rtree.c	/^static int rtreeSqlInit($/;"	f	file:
rtreeStepToLeaf	ext/rtree/rtree.c	/^static int rtreeStepToLeaf(RtreeCursor *pCur){$/;"	f	file:
rtreeStepToLeaf	sqlite3.c	/^static int rtreeStepToLeaf(RtreeCursor *pCur){$/;"	f	file:
rtreeStepToLeaf	tsrc/rtree.c	/^static int rtreeStepToLeaf(RtreeCursor *pCur){$/;"	f	file:
rtreeUpdate	ext/rtree/rtree.c	/^static int rtreeUpdate($/;"	f	file:
rtreeUpdate	sqlite3.c	/^static int rtreeUpdate($/;"	f	file:
rtreeUpdate	tsrc/rtree.c	/^static int rtreeUpdate($/;"	f	file:
rtreeValueDown	ext/rtree/rtree.c	/^static RtreeValue rtreeValueDown(sqlite3_value *v){$/;"	f	file:
rtreeValueDown	sqlite3.c	/^static RtreeValue rtreeValueDown(sqlite3_value *v){$/;"	f	file:
rtreeValueDown	tsrc/rtree.c	/^static RtreeValue rtreeValueDown(sqlite3_value *v){$/;"	f	file:
rtreeValueUp	ext/rtree/rtree.c	/^static RtreeValue rtreeValueUp(sqlite3_value *v){$/;"	f	file:
rtreeValueUp	sqlite3.c	/^static RtreeValue rtreeValueUp(sqlite3_value *v){$/;"	f	file:
rtreeValueUp	tsrc/rtree.c	/^static RtreeValue rtreeValueUp(sqlite3_value *v){$/;"	f	file:
rtree_check	ext/rtree/rtree_util.tcl	/^proc rtree_check {db zTab} {$/;"	p
rtree_depth	ext/rtree/rtree_util.tcl	/^proc rtree_depth {db zTab} {$/;"	p
rtree_dump	ext/rtree/rtree_util.tcl	/^proc rtree_dump {db zTab} {$/;"	p
rtree_mincells	ext/rtree/rtree_util.tcl	/^proc rtree_mincells {db zTab} {$/;"	p
rtree_ndim	ext/rtree/rtree_util.tcl	/^proc rtree_ndim {db zTab} {$/;"	p
rtree_node	ext/rtree/rtree_util.tcl	/^proc rtree_node {db zTab iNode {iPrec 6}} {$/;"	p
rtree_node_check	ext/rtree/rtree_util.tcl	/^proc rtree_node_check {db zTab iNode iDepth} {$/;"	p
rtree_nodedepth	ext/rtree/rtree_util.tcl	/^proc rtree_nodedepth {db zTab iNode} {$/;"	p
rtree_nodetreedump	ext/rtree/rtree_util.tcl	/^proc rtree_nodetreedump {db zTab zIndent iDepth iNode} {$/;"	p
rtree_treedump	ext/rtree/rtree_util.tcl	/^proc rtree_treedump {db zTab} {$/;"	p
rtreedepth	ext/rtree/rtree.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreedepth	sqlite3.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreedepth	tsrc/rtree.c	/^static void rtreedepth(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	ext/rtree/rtree.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	sqlite3.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
rtreenode	tsrc/rtree.c	/^static void rtreenode(sqlite3_context *ctx, int nArg, sqlite3_value **apArg){$/;"	f	file:
ru_stime	shell.c	/^  struct timeval ru_stime; \/* system CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_stime	src/shell.c	/^  struct timeval ru_stime; \/* system CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_stime	tsrc/shell.c	/^  struct timeval ru_stime; \/* system CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_utime	shell.c	/^  struct timeval ru_utime; \/* user CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_utime	src/shell.c	/^  struct timeval ru_utime; \/* user CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
ru_utime	tsrc/shell.c	/^  struct timeval ru_utime; \/* user CPU time used *\/$/;"	m	struct:rusage	typeref:struct:rusage::timeval	file:
rule	tool/lemon.c	/^  struct rule *rule;       \/* Linked list of rules of this (if an NT) *\/$/;"	m	struct:symbol	typeref:struct:symbol::rule	file:
rule	tool/lemon.c	/^  struct rule *rule;       \/* List of all rules *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
rule	tool/lemon.c	/^struct rule {$/;"	s	file:
ruleline	tool/lemon.c	/^  int ruleline;            \/* Line number for the rule *\/$/;"	m	struct:rule	file:
runAsObjProc	src/test1.c	/^static int SQLITE_TCLAPI runAsObjProc($/;"	f	file:
runOnlyOnce	sqlite3.c	/^  bft runOnlyOnce:1;      \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe	file:
runOnlyOnce	src/vdbeInt.h	/^  bft runOnlyOnce:1;      \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe
runOnlyOnce	tsrc/vdbeInt.h	/^  bft runOnlyOnce:1;      \/* Automatically expire on reset *\/$/;"	m	struct:Vdbe
runScript	mptest/mptest.c	/^static void runScript($/;"	f	file:
runSql	ext/fts3/tool/fts3view.c	/^static int runSql(sqlite3 *db, const char *zFormat, ...){$/;"	f	file:
runSql	mptest/mptest.c	/^static void runSql(const char *zFormat, ...){$/;"	f	file:
runSql	test/fuzzcheck.c	/^static void runSql(sqlite3 *db, const char *zSql, unsigned  runFlags){$/;"	f	file:
runSql	tool/rollback-test.c	/^static void runSql(sqlite3 *db, const char *zSql){$/;"	f	file:
runTime	tool/speedtest16.c	/^static sqlite_uint64 runTime = 0;$/;"	v	file:
runTime	tool/speedtest8.c	/^static sqlite_uint64 runTime = 0;$/;"	v	file:
run_all_test_suites	test/releasetest.tcl	/^proc run_all_test_suites {alltests} {$/;"	p
run_ioerr_prep	test/tester.tcl	/^proc run_ioerr_prep {} {$/;"	p
run_quick_test	tool/omittest.tcl	/^proc run_quick_test {dir omit_symbol_list} {$/;"	p
run_rbu	ext/rbu/rbu_common.tcl	/^proc run_rbu {target rbu} {$/;"	p
run_schema_dump_query	shell.c	/^static int run_schema_dump_query($/;"	f	file:
run_schema_dump_query	src/shell.c	/^static int run_schema_dump_query($/;"	f	file:
run_schema_dump_query	tsrc/shell.c	/^static int run_schema_dump_query($/;"	f	file:
run_slave_test	test/releasetest.tcl	/^proc run_slave_test {} {$/;"	p
run_sql	test/threadtest4.c	/^static void run_sql(WorkerInfo *p, const char *zFormat, ...){$/;"	f	file:
run_table_dump_query	shell.c	/^static int run_table_dump_query($/;"	f	file:
run_table_dump_query	src/shell.c	/^static int run_table_dump_query($/;"	f	file:
run_table_dump_query	tsrc/shell.c	/^static int run_table_dump_query($/;"	f	file:
run_thread_tests	test/thread_common.tcl	/^proc run_thread_tests {{print_warning 0}} {$/;"	p
runtest	tool/speedtest.tcl	/^proc runtest {title} {$/;"	p
runtest	tool/speedtest2.tcl	/^proc runtest {title} {$/;"	p
runtimeError	tool/dbhash.c	/^static void runtimeError(const char *zFormat, ...){$/;"	f	file:
runtimeError	tool/sqldiff.c	/^static void runtimeError(const char *zFormat, ...){$/;"	f	file:
rusage	shell.c	/^struct rusage {$/;"	s	file:
rusage	src/shell.c	/^struct rusage {$/;"	s	file:
rusage	tsrc/shell.c	/^struct rusage {$/;"	s	file:
s	ext/fts1/fts1.c	/^  char *s;      \/* Content of the string *\/$/;"	m	struct:StringBuffer	file:
s	sqlite3.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	sqlite3.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
s	src/date.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	src/random.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
s	tsrc/date.c	/^  double s;          \/* Seconds *\/$/;"	m	struct:DateTime	file:
s	tsrc/fts1.c	/^  char *s;      \/* Content of the string *\/$/;"	m	struct:StringBuffer	file:
s	tsrc/random.c	/^  unsigned char s[256];          \/* State variables *\/$/;"	m	struct:sqlite3PrngType	file:
s0	tool/showwal.c	/^  unsigned s0, s1;     \/* Current checksum value *\/$/;"	m	struct:Cksum	file:
s1	tool/showwal.c	/^  unsigned s0, s1;     \/* Current checksum value *\/$/;"	m	struct:Cksum	file:
sArg	sqlite3.c	/^  Token sArg;               \/* Complete text of a module argument *\/$/;"	m	struct:Parse	file:
sArg	src/sqliteInt.h	/^  Token sArg;               \/* Complete text of a module argument *\/$/;"	m	struct:Parse
sArg	tsrc/sqliteInt.h	/^  Token sArg;               \/* Complete text of a module argument *\/$/;"	m	struct:Parse
sBegin	shell.c	/^static struct rusage sBegin;  \/* CPU time at start *\/$/;"	v	typeref:struct:rusage	file:
sBegin	src/shell.c	/^static struct rusage sBegin;  \/* CPU time at start *\/$/;"	v	typeref:struct:rusage	file:
sBegin	tsrc/shell.c	/^static struct rusage sBegin;  \/* CPU time at start *\/$/;"	v	typeref:struct:rusage	file:
sColMap	sqlite3.c	/^  struct sColMap {      \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey	file:
sColMap	src/sqliteInt.h	/^  struct sColMap {      \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey
sColMap	tsrc/sqliteInt.h	/^  struct sColMap {      \/* Mapping of columns in pFrom to columns in zTo *\/$/;"	s	struct:FKey
sCost	ext/misc/amatch.c	/^  amatch_avl sCost;     \/* Linkage of this node into the cost tree *\/$/;"	m	struct:amatch_word	file:
sDb	src/test3.c	/^static sqlite3 sDb;$/;"	v	file:
sFts5Api	ext/fts5/fts5_main.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sFts5Api	fts5.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sFts5Api	sqlite3.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sFts5Api	tsrc/fts5.c	/^static const Fts5ExtensionApi sFts5Api = {$/;"	v	file:
sIn	ext/misc/regexp.c	/^  ReInput sIn;                \/* Regular expression text *\/$/;"	m	struct:ReCompiled	file:
sIoMethodsV1	src/test_multiplex.c	/^  sqlite3_io_methods sIoMethodsV1;$/;"	m	struct:__anon62	file:
sIoMethodsV1	src/test_quota.c	/^  sqlite3_io_methods sIoMethodsV1;$/;"	m	struct:__anon67	file:
sIoMethodsV2	src/test_multiplex.c	/^  sqlite3_io_methods sIoMethodsV2;$/;"	m	struct:__anon62	file:
sIoMethodsV2	src/test_quota.c	/^  sqlite3_io_methods sIoMethodsV2;$/;"	m	struct:__anon67	file:
sLastToken	sqlite3.c	/^  Token sLastToken;         \/* The last token parsed *\/$/;"	m	struct:Parse	file:
sLastToken	src/sqliteInt.h	/^  Token sLastToken;         \/* The last token parsed *\/$/;"	m	struct:Parse
sLastToken	tsrc/sqliteInt.h	/^  Token sLastToken;         \/* The last token parsed *\/$/;"	m	struct:Parse
sMaskSet	sqlite3.c	/^  WhereMaskSet sMaskSet;    \/* Map cursor numbers to bitmasks *\/$/;"	m	struct:WhereInfo	file:
sMaskSet	src/whereInt.h	/^  WhereMaskSet sMaskSet;    \/* Map cursor numbers to bitmasks *\/$/;"	m	struct:WhereInfo
sMaskSet	tsrc/whereInt.h	/^  WhereMaskSet sMaskSet;    \/* Map cursor numbers to bitmasks *\/$/;"	m	struct:WhereInfo
sNameToken	sqlite3.c	/^  Token sNameToken;         \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse	file:
sNameToken	src/sqliteInt.h	/^  Token sNameToken;         \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse
sNameToken	tsrc/sqliteInt.h	/^  Token sNameToken;         \/* Token with unqualified schema object name *\/$/;"	m	struct:Parse
sOomMem	tool/fuzzershell.c	/^  sqlite3_mem_methods sOomMem;     \/* Memory methods with OOM simulator *\/$/;"	m	struct:GlobalVars	file:
sOrigMem	tool/fuzzershell.c	/^  sqlite3_mem_methods sOrigMem;    \/* Original memory methods *\/$/;"	m	struct:GlobalVars	file:
sParse	ext/misc/json1.c	/^  JsonParse sParse;          \/* Parse of the input JSON *\/$/;"	m	struct:JsonEachCursor	file:
sParse	sqlite3.c	/^  JsonParse sParse;          \/* Parse of the input JSON *\/$/;"	m	struct:JsonEachCursor	file:
sParse	tsrc/json1.c	/^  JsonParse sParse;          \/* Parse of the input JSON *\/$/;"	m	struct:JsonEachCursor	file:
sPoint	ext/rtree/rtree.c	/^  RtreeSearchPoint sPoint;          \/* Cached next search point *\/$/;"	m	struct:RtreeCursor	file:
sPoint	sqlite3.c	/^  RtreeSearchPoint sPoint;          \/* Cached next search point *\/$/;"	m	struct:RtreeCursor	file:
sPoint	tsrc/rtree.c	/^  RtreeSearchPoint sPoint;          \/* Cached next search point *\/$/;"	m	struct:RtreeCursor	file:
sPragmaNames	sqlite3.c	/^static const struct sPragmaNames {$/;"	s	file:
sPragmaNames	src/pragma.h	/^static const struct sPragmaNames {$/;"	s
sPragmaNames	tsrc/pragma.h	/^static const struct sPragmaNames {$/;"	s
sSelf	ext/misc/vtshim.c	/^  sqlite3_module sSelf;         \/* Methods used by this shim *\/$/;"	m	struct:vtshim_aux	file:
sThisVfs	src/test_multiplex.c	/^  sqlite3_vfs sThisVfs;$/;"	m	struct:__anon62	file:
sThisVfs	src/test_quota.c	/^  sqlite3_vfs sThisVfs;$/;"	m	struct:__anon67	file:
sWC	sqlite3.c	/^  WhereClause sWC;          \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo	file:
sWC	src/whereInt.h	/^  WhereClause sWC;          \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo
sWC	tsrc/whereInt.h	/^  WhereClause sWC;          \/* Decomposition of the WHERE clause *\/$/;"	m	struct:WhereInfo
sWord	ext/misc/amatch.c	/^  amatch_avl sWord;     \/* Linkage of this node into the word tree *\/$/;"	m	struct:amatch_word	file:
s_options	tool/lemon.c	/^struct s_options {$/;"	s	file:
s_x1	tool/lemon.c	/^struct s_x1 {$/;"	s	file:
s_x1node	tool/lemon.c	/^typedef struct s_x1node {$/;"	s	file:
s_x2	tool/lemon.c	/^struct s_x2 {$/;"	s	file:
s_x2node	tool/lemon.c	/^typedef struct s_x2node {$/;"	s	file:
s_x3	tool/lemon.c	/^struct s_x3 {$/;"	s	file:
s_x3node	tool/lemon.c	/^typedef struct s_x3node {$/;"	s	file:
s_x4	tool/lemon.c	/^struct s_x4 {$/;"	s	file:
s_x4node	tool/lemon.c	/^typedef struct s_x4node {$/;"	s	file:
safeId	tool/sqldiff.c	/^static char *safeId(const char *zId){$/;"	f	file:
safeToUseEvalObjv	src/tclsqlite.c	/^static int safeToUseEvalObjv(Tcl_Interp *interp, Tcl_Obj *pCmd){$/;"	f	file:
safeToUseEvalObjv	tsrc/tclsqlite.c	/^static int safeToUseEvalObjv(Tcl_Interp *interp, Tcl_Obj *pCmd){$/;"	f	file:
safe_isalnum	ext/fts1/fts1.c	/^static int safe_isalnum(char c){$/;"	f	file:
safe_isalnum	ext/fts2/fts2.c	/^static int safe_isalnum(char c){$/;"	f	file:
safe_isalnum	ext/misc/json1.c	53;"	d	file:
safe_isalnum	sqlite3.c	175041;"	d	file:
safe_isalnum	tsrc/fts1.c	/^static int safe_isalnum(char c){$/;"	f	file:
safe_isalnum	tsrc/fts2.c	/^static int safe_isalnum(char c){$/;"	f	file:
safe_isalnum	tsrc/json1.c	53;"	d	file:
safe_isdigit	ext/misc/json1.c	52;"	d	file:
safe_isdigit	sqlite3.c	175040;"	d	file:
safe_isdigit	tsrc/json1.c	52;"	d	file:
safe_isspace	ext/fts1/fts1.c	/^static int safe_isspace(char c){$/;"	f	file:
safe_isspace	ext/fts2/fts2.c	/^static int safe_isspace(char c){$/;"	f	file:
safe_isspace	ext/misc/json1.c	84;"	d	file:
safe_isspace	sqlite3.c	175072;"	d	file:
safe_isspace	tsrc/fts1.c	/^static int safe_isspace(char c){$/;"	f	file:
safe_isspace	tsrc/fts2.c	/^static int safe_isspace(char c){$/;"	f	file:
safe_isspace	tsrc/json1.c	84;"	d	file:
safe_malloc	test/threadtest4.c	/^static void *safe_malloc(int sz){$/;"	f	file:
safe_realloc	test/fuzzcheck.c	/^static void *safe_realloc(void *pOld, int szNew){$/;"	f	file:
safe_strcmp	mptest/mptest.c	/^static int safe_strcmp(const char *a, const char *b){$/;"	f	file:
safe_tolower	ext/fts1/fts1.c	/^static int safe_tolower(char c){$/;"	f	file:
safe_tolower	ext/fts2/fts2.c	/^static int safe_tolower(char c){$/;"	f	file:
safe_tolower	tsrc/fts1.c	/^static int safe_tolower(char c){$/;"	f	file:
safe_tolower	tsrc/fts2.c	/^static int safe_tolower(char c){$/;"	f	file:
safety_level	sqlite3.c	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db	file:
safety_level	src/sqliteInt.h	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db
safety_level	tsrc/sqliteInt.h	/^  u8 safety_level;     \/* How aggressive at syncing data to disk *\/$/;"	m	struct:Db
sameValue	ext/misc/percentile.c	/^static int sameValue(double a, double b){$/;"	f	file:
same_symbol	tool/lemon.c	/^int same_symbol(struct symbol *a, struct symbol *b)$/;"	f
sampleClear	sqlite3.c	/^static void sampleClear(sqlite3 *db, Stat4Sample *p){$/;"	f	file:
sampleClear	src/analyze.c	/^static void sampleClear(sqlite3 *db, Stat4Sample *p){$/;"	f	file:
sampleClear	tsrc/analyze.c	/^static void sampleClear(sqlite3 *db, Stat4Sample *p){$/;"	f	file:
sampleCopy	sqlite3.c	/^static void sampleCopy(Stat4Accum *p, Stat4Sample *pTo, Stat4Sample *pFrom){$/;"	f	file:
sampleCopy	src/analyze.c	/^static void sampleCopy(Stat4Accum *p, Stat4Sample *pTo, Stat4Sample *pFrom){$/;"	f	file:
sampleCopy	tsrc/analyze.c	/^static void sampleCopy(Stat4Accum *p, Stat4Sample *pTo, Stat4Sample *pFrom){$/;"	f	file:
sampleInsert	sqlite3.c	/^static void sampleInsert(Stat4Accum *p, Stat4Sample *pNew, int nEqZero){$/;"	f	file:
sampleInsert	src/analyze.c	/^static void sampleInsert(Stat4Accum *p, Stat4Sample *pNew, int nEqZero){$/;"	f	file:
sampleInsert	tsrc/analyze.c	/^static void sampleInsert(Stat4Accum *p, Stat4Sample *pNew, int nEqZero){$/;"	f	file:
sampleIsBetter	sqlite3.c	/^static int sampleIsBetter($/;"	f	file:
sampleIsBetter	src/analyze.c	/^static int sampleIsBetter($/;"	f	file:
sampleIsBetter	tsrc/analyze.c	/^static int sampleIsBetter($/;"	f	file:
sampleIsBetterPost	sqlite3.c	/^static int sampleIsBetterPost($/;"	f	file:
sampleIsBetterPost	src/analyze.c	/^static int sampleIsBetterPost($/;"	f	file:
sampleIsBetterPost	tsrc/analyze.c	/^static int sampleIsBetterPost($/;"	f	file:
samplePushPrevious	sqlite3.c	/^static void samplePushPrevious(Stat4Accum *p, int iChng){$/;"	f	file:
samplePushPrevious	src/analyze.c	/^static void samplePushPrevious(Stat4Accum *p, int iChng){$/;"	f	file:
samplePushPrevious	tsrc/analyze.c	/^static void samplePushPrevious(Stat4Accum *p, int iChng){$/;"	f	file:
sampleSetRowid	sqlite3.c	/^static void sampleSetRowid(sqlite3 *db, Stat4Sample *p, int n, const u8 *pData){$/;"	f	file:
sampleSetRowid	src/analyze.c	/^static void sampleSetRowid(sqlite3 *db, Stat4Sample *p, int n, const u8 *pData){$/;"	f	file:
sampleSetRowid	tsrc/analyze.c	/^static void sampleSetRowid(sqlite3 *db, Stat4Sample *p, int n, const u8 *pData){$/;"	f	file:
sampleSetRowidInt64	sqlite3.c	/^static void sampleSetRowidInt64(sqlite3 *db, Stat4Sample *p, i64 iRowid){$/;"	f	file:
sampleSetRowidInt64	src/analyze.c	/^static void sampleSetRowidInt64(sqlite3 *db, Stat4Sample *p, i64 iRowid){$/;"	f	file:
sampleSetRowidInt64	tsrc/analyze.c	/^static void sampleSetRowidInt64(sqlite3 *db, Stat4Sample *p, i64 iRowid){$/;"	f	file:
saveAllCursors	sqlite3.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveAllCursors	src/btree.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveAllCursors	tsrc/btree.c	/^static int saveAllCursors(BtShared *pBt, Pgno iRoot, BtCursor *pExcept){$/;"	f	file:
saveCursorKey	sqlite3.c	/^static int saveCursorKey(BtCursor *pCur){$/;"	f	file:
saveCursorKey	src/btree.c	/^static int saveCursorKey(BtCursor *pCur){$/;"	f	file:
saveCursorKey	tsrc/btree.c	/^static int saveCursorKey(BtCursor *pCur){$/;"	f	file:
saveCursorPosition	sqlite3.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveCursorPosition	src/btree.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveCursorPosition	tsrc/btree.c	/^static int saveCursorPosition(BtCursor *pCur){$/;"	f	file:
saveCursorsOnList	sqlite3.c	/^static int SQLITE_NOINLINE saveCursorsOnList($/;"	f	file:
saveCursorsOnList	src/btree.c	/^static int SQLITE_NOINLINE saveCursorsOnList($/;"	f	file:
saveCursorsOnList	tsrc/btree.c	/^static int SQLITE_NOINLINE saveCursorsOnList($/;"	f	file:
save_err_msg	shell.c	/^static char *save_err_msg($/;"	f	file:
save_err_msg	src/shell.c	/^static char *save_err_msg($/;"	f	file:
save_err_msg	tsrc/shell.c	/^static char *save_err_msg($/;"	f	file:
save_prng_state	src/test1.c	/^static int SQLITE_TCLAPI save_prng_state($/;"	f	file:
savedNQueryLoop	sqlite3.c	/^  int savedNQueryLoop;      \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo	file:
savedNQueryLoop	src/whereInt.h	/^  int savedNQueryLoop;      \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo
savedNQueryLoop	tsrc/whereInt.h	/^  int savedNQueryLoop;      \/* pParse->nQueryLoop outside the WHERE loop *\/$/;"	m	struct:WhereInfo
savedSelectTrace	shell.c	/^static int savedSelectTrace;$/;"	v	file:
savedSelectTrace	src/shell.c	/^static int savedSelectTrace;$/;"	v	file:
savedSelectTrace	tsrc/shell.c	/^static int savedSelectTrace;$/;"	v	file:
savedWhereTrace	shell.c	/^static int savedWhereTrace;$/;"	v	file:
savedWhereTrace	src/shell.c	/^static int savedWhereTrace;$/;"	v	file:
savedWhereTrace	tsrc/shell.c	/^static int savedWhereTrace;$/;"	v	file:
saved_cnt	sqlite3.c	/^static int saved_cnt;$/;"	v	file:
saved_cnt	src/pager.c	/^static int saved_cnt;$/;"	v	file:
saved_cnt	tsrc/pager.c	/^static int saved_cnt;$/;"	v	file:
savepoint_opt	parse.y	/^savepoint_opt ::= .$/;"	l
savepoint_opt	parse.y	/^savepoint_opt ::= SAVEPOINT.$/;"	l
savepoint_opt	src/parse.y	/^savepoint_opt ::= .$/;"	l
savepoint_opt	src/parse.y	/^savepoint_opt ::= SAVEPOINT.$/;"	l
scalarFunc	ext/fts2/fts2_tokenizer.c	/^static void scalarFunc($/;"	f	file:
scalarFunc	tsrc/fts2_tokenizer.c	/^static void scalarFunc($/;"	f	file:
scanstatsOn	shell.c	/^  int scanstatsOn;       \/* True to display scan stats before each finalize *\/$/;"	m	struct:ShellState	file:
scanstatsOn	src/shell.c	/^  int scanstatsOn;       \/* True to display scan stats before each finalize *\/$/;"	m	struct:ShellState	file:
scanstatsOn	tsrc/shell.c	/^  int scanstatsOn;       \/* True to display scan stats before each finalize *\/$/;"	m	struct:ShellState	file:
scenario	tool/soak1.tcl	/^proc scenario {id title pattern} {$/;"	p
schemaBestIndex	src/test_schema.c	/^static int schemaBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
schemaClose	src/test_schema.c	/^static int schemaClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
schemaColumn	src/test_schema.c	/^static int schemaColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
schemaCreate	src/test_schema.c	/^static int schemaCreate($/;"	f	file:
schemaDestroy	src/test_schema.c	/^static int schemaDestroy(sqlite3_vtab *pVtab){$/;"	f	file:
schemaEof	src/test_schema.c	/^static int schemaEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
schemaFilter	src/test_schema.c	/^static int schemaFilter($/;"	f	file:
schemaFlags	sqlite3.c	/^  u16 schemaFlags;     \/* Flags associated with this schema *\/$/;"	m	struct:Schema	file:
schemaFlags	src/sqliteInt.h	/^  u16 schemaFlags;     \/* Flags associated with this schema *\/$/;"	m	struct:Schema
schemaFlags	tsrc/sqliteInt.h	/^  u16 schemaFlags;     \/* Flags associated with this schema *\/$/;"	m	struct:Schema
schemaIsValid	sqlite3.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schemaIsValid	src/prepare.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schemaIsValid	tsrc/prepare.c	/^static void schemaIsValid(Parse *pParse){$/;"	f	file:
schemaModule	src/test_schema.c	/^static sqlite3_module schemaModule = {$/;"	v	file:
schemaNext	src/test_schema.c	/^static int schemaNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
schemaOpen	src/test_schema.c	/^static int schemaOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
schemaRowid	src/test_schema.c	/^static int schemaRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
schema_cookie	sqlite3.c	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema	file:
schema_cookie	src/sqliteInt.h	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema
schema_cookie	tsrc/sqliteInt.h	/^  int schema_cookie;   \/* Database schema version number for this file *\/$/;"	m	struct:Schema
schema_cursor	src/test_schema.c	/^struct schema_cursor {$/;"	s	file:
schema_cursor	src/test_schema.c	/^typedef struct schema_cursor schema_cursor;$/;"	t	typeref:struct:schema_cursor	file:
schema_vtab	src/test_schema.c	/^struct schema_vtab {$/;"	s	file:
schema_vtab	src/test_schema.c	/^typedef struct schema_vtab schema_vtab;$/;"	t	typeref:struct:schema_vtab	file:
scramble	test/boundary1.tcl	/^proc scramble {inlist} {$/;"	p
scramble	test/boundary2.tcl	/^proc scramble {inlist} {$/;"	p
scramble	test/boundary3.tcl	/^proc scramble {inlist} {$/;"	p
scramble	test/boundary4.tcl	/^proc scramble {inlist} {$/;"	p
scratchAllocOut	sqlite3.c	/^static int scratchAllocOut = 0;$/;"	v	file:
scratchAllocOut	src/malloc.c	/^static int scratchAllocOut = 0;$/;"	v	file:
scratchAllocOut	tsrc/malloc.c	/^static int scratchAllocOut = 0;$/;"	v	file:
scriptCodeSqlFunc	ext/misc/spellfix.c	/^static void scriptCodeSqlFunc($/;"	f	file:
scrubBackupAllocPage	ext/misc/scrub.c	/^static u8 *scrubBackupAllocPage(ScrubState *p){$/;"	f	file:
scrubBackupBtree	ext/misc/scrub.c	/^static void scrubBackupBtree(ScrubState *p, int pgno, int iDepth){$/;"	f	file:
scrubBackupErr	ext/misc/scrub.c	/^static void scrubBackupErr(ScrubState *p, const char *zFormat, ...){$/;"	f	file:
scrubBackupFreelist	ext/misc/scrub.c	/^static void scrubBackupFreelist(ScrubState *p, int pgno, u32 nFree){$/;"	f	file:
scrubBackupInt16	ext/misc/scrub.c	/^static u32 scrubBackupInt16(const u8 *a){$/;"	f	file:
scrubBackupInt32	ext/misc/scrub.c	/^static u32 scrubBackupInt32(const u8 *a){$/;"	f	file:
scrubBackupOpenDest	ext/misc/scrub.c	/^static void scrubBackupOpenDest(ScrubState *p){$/;"	f	file:
scrubBackupOpenSrc	ext/misc/scrub.c	/^static void scrubBackupOpenSrc(ScrubState *p){$/;"	f	file:
scrubBackupOverflow	ext/misc/scrub.c	/^static void scrubBackupOverflow(ScrubState *p, int pgno, u32 nByte){$/;"	f	file:
scrubBackupPrepare	ext/misc/scrub.c	/^static sqlite3_stmt *scrubBackupPrepare($/;"	f	file:
scrubBackupPtrmap	ext/misc/scrub.c	/^static void scrubBackupPtrmap(ScrubState *p){$/;"	f	file:
scrubBackupRead	ext/misc/scrub.c	/^static u8 *scrubBackupRead(ScrubState *p, int pgno, u8 *pBuf){$/;"	f	file:
scrubBackupVarint	ext/misc/scrub.c	/^static int scrubBackupVarint(const u8 *z, sqlite3_int64 *pVal){$/;"	f	file:
scrubBackupVarintSize	ext/misc/scrub.c	/^static int scrubBackupVarintSize(const u8 *z){$/;"	f	file:
scrubBackupWrite	ext/misc/scrub.c	/^static void scrubBackupWrite(ScrubState *p, int pgno, const u8 *pData){$/;"	f	file:
sealed	vsixtest/App.xaml.h	/^	ref class App sealed$/;"	c	namespace:vsixtest
sealed	vsixtest/MainPage.xaml.h	/^	public ref class MainPage sealed$/;"	c	namespace:vsixtest
searchWith	sqlite3.c	/^static struct Cte *searchWith($/;"	f	file:
searchWith	src/select.c	/^static struct Cte *searchWith($/;"	f	file:
searchWith	tsrc/select.c	/^static struct Cte *searchWith($/;"	f	file:
section_comment	ext/fts2/mkfts2amal.tcl	/^proc section_comment {text} {$/;"	p
section_comment	ext/fts3/mkfts3amal.tcl	/^proc section_comment {text} {$/;"	p
section_comment	tool/mksqlite3c-noext.tcl	/^proc section_comment {text} {$/;"	p
section_comment	tool/mksqlite3c.tcl	/^proc section_comment {text} {$/;"	p
section_comment	tool/mksqlite3internalh.tcl	/^proc section_comment {text} {$/;"	p
sectorSize	sqlite3.c	/^  int sectorSize;                     \/* Device sector size *\/$/;"	m	struct:unixFile	file:
sectorSize	sqlite3.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
sectorSize	src/os_unix.c	/^  int sectorSize;                     \/* Device sector size *\/$/;"	m	struct:unixFile	file:
sectorSize	src/pager.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
sectorSize	tool/showjournal.c	/^static int sectorSize = 512;$/;"	v	file:
sectorSize	tsrc/os_unix.c	/^  int sectorSize;                     \/* Device sector size *\/$/;"	m	struct:unixFile	file:
sectorSize	tsrc/pager.c	/^  u32 sectorSize;             \/* Assumed sector size during rollback *\/$/;"	m	struct:Pager	file:
seekAndRead	sqlite3.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndRead	src/os_unix.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndRead	tsrc/os_unix.c	/^static int seekAndRead(unixFile *id, sqlite3_int64 offset, void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	sqlite3.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	src/os_unix.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekAndWrite	tsrc/os_unix.c	/^static int seekAndWrite(unixFile *id, i64 offset, const void *pBuf, int cnt){$/;"	f	file:
seekAndWriteFd	sqlite3.c	/^static int seekAndWriteFd($/;"	f	file:
seekAndWriteFd	src/os_unix.c	/^static int seekAndWriteFd($/;"	f	file:
seekAndWriteFd	tsrc/os_unix.c	/^static int seekAndWriteFd($/;"	f	file:
seekOp	sqlite3.c	/^  u8 seekOp;            \/* Most recent seek operation on this cursor *\/$/;"	m	struct:VdbeCursor	file:
seekOp	src/vdbeInt.h	/^  u8 seekOp;            \/* Most recent seek operation on this cursor *\/$/;"	m	struct:VdbeCursor
seekOp	tsrc/vdbeInt.h	/^  u8 seekOp;            \/* Most recent seek operation on this cursor *\/$/;"	m	struct:VdbeCursor
seekResult	sqlite3.c	/^  int seekResult;       \/* Result of previous sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor	file:
seekResult	src/vdbeInt.h	/^  int seekResult;       \/* Result of previous sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor
seekResult	tsrc/vdbeInt.h	/^  int seekResult;       \/* Result of previous sqlite3BtreeMoveto() *\/$/;"	m	struct:VdbeCursor
seenInterrupt	shell.c	/^static volatile int seenInterrupt = 0;$/;"	v	file:
seenInterrupt	src/shell.c	/^static volatile int seenInterrupt = 0;$/;"	v	file:
seenInterrupt	tsrc/shell.c	/^static volatile int seenInterrupt = 0;$/;"	v	file:
segdirNextIndex	ext/fts2/fts2.c	/^static int segdirNextIndex(fulltext_vtab *v, int iLevel, int *pidx){$/;"	f	file:
segdirNextIndex	tsrc/fts2.c	/^static int segdirNextIndex(fulltext_vtab *v, int iLevel, int *pidx){$/;"	f	file:
segdir_count	ext/fts2/fts2.c	/^static int segdir_count(fulltext_vtab *v, int *pnSegments, int *piMaxLevel){$/;"	f	file:
segdir_count	tsrc/fts2.c	/^static int segdir_count(fulltext_vtab *v, int *pnSegments, int *piMaxLevel){$/;"	f	file:
segdir_delete	ext/fts2/fts2.c	/^static int segdir_delete(fulltext_vtab *v, int iLevel){$/;"	f	file:
segdir_delete	tsrc/fts2.c	/^static int segdir_delete(fulltext_vtab *v, int iLevel){$/;"	f	file:
segdir_delete_all	ext/fts2/fts2.c	/^static int segdir_delete_all(fulltext_vtab *v){$/;"	f	file:
segdir_delete_all	tsrc/fts2.c	/^static int segdir_delete_all(fulltext_vtab *v){$/;"	f	file:
segdir_max_index	ext/fts2/fts2.c	/^static int segdir_max_index(fulltext_vtab *v, int iLevel, int *pidx){$/;"	f	file:
segdir_max_index	tsrc/fts2.c	/^static int segdir_max_index(fulltext_vtab *v, int iLevel, int *pidx){$/;"	f	file:
segdir_set	ext/fts2/fts2.c	/^static int segdir_set(fulltext_vtab *v, int iLevel, int idx,$/;"	f	file:
segdir_set	tsrc/fts2.c	/^static int segdir_set(fulltext_vtab *v, int iLevel, int idx,$/;"	f	file:
segdir_span	ext/fts2/fts2.c	/^static int segdir_span(fulltext_vtab *v, int iLevel,$/;"	f	file:
segdir_span	tsrc/fts2.c	/^static int segdir_span(fulltext_vtab *v, int iLevel,$/;"	f	file:
segment	ext/fts2/fts2.c	/^  int segment;$/;"	m	struct:OptLeavesReader	file:
segment	tsrc/fts2.c	/^  int segment;$/;"	m	struct:OptLeavesReader	file:
segmentMerge	ext/fts2/fts2.c	/^static int segmentMerge(fulltext_vtab *v, int iLevel){$/;"	f	file:
segmentMerge	tsrc/fts2.c	/^static int segmentMerge(fulltext_vtab *v, int iLevel){$/;"	f	file:
selFlags	sqlite3.c	/^  u32 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select	file:
selFlags	src/sqliteInt.h	/^  u32 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select
selFlags	tsrc/sqliteInt.h	/^  u32 selFlags;          \/* Various SF_* values *\/$/;"	m	struct:Select
selectAddSubqueryTypeInfo	sqlite3.c	/^static void selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectAddSubqueryTypeInfo	src/select.c	/^static void selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectAddSubqueryTypeInfo	tsrc/select.c	/^static void selectAddSubqueryTypeInfo(Walker *pWalker, Select *p){$/;"	f	file:
selectExpander	sqlite3.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectExpander	src/select.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectExpander	tsrc/select.c	/^static int selectExpander(Walker *pWalker, Select *p){$/;"	f	file:
selectInnerLoop	sqlite3.c	/^static void selectInnerLoop($/;"	f	file:
selectInnerLoop	src/select.c	/^static void selectInnerLoop($/;"	f	file:
selectInnerLoop	tsrc/select.c	/^static void selectInnerLoop($/;"	f	file:
selectNodeIsConstant	sqlite3.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectNodeIsConstant	src/expr.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectNodeIsConstant	tsrc/expr.c	/^static int selectNodeIsConstant(Walker *pWalker, Select *NotUsed){$/;"	f	file:
selectOpName	sqlite3.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectOpName	src/select.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectOpName	tsrc/select.c	/^static const char *selectOpName(int id){$/;"	f	file:
selectPopWith	sqlite3.c	/^static void selectPopWith(Walker *pWalker, Select *p){$/;"	f	file:
selectPopWith	sqlite3.c	117705;"	d	file:
selectPopWith	src/select.c	/^static void selectPopWith(Walker *pWalker, Select *p){$/;"	f	file:
selectPopWith	src/select.c	4217;"	d	file:
selectPopWith	tsrc/select.c	/^static void selectPopWith(Walker *pWalker, Select *p){$/;"	f	file:
selectPopWith	tsrc/select.c	4217;"	d	file:
select_doc	ext/fts3/fts3speed.tcl	/^proc select_doc {nTerm} {$/;"	p
select_term	ext/fts3/fts3speed.tcl	/^proc select_term {} {$/;"	p
semXCheckReservedLock	sqlite3.c	/^static int semXCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semXCheckReservedLock	src/os_unix.c	/^static int semXCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semXCheckReservedLock	tsrc/os_unix.c	/^static int semXCheckReservedLock(sqlite3_file *id, int *pResOut) {$/;"	f	file:
semXClose	sqlite3.c	/^static int semXClose(sqlite3_file *id) {$/;"	f	file:
semXClose	src/os_unix.c	/^static int semXClose(sqlite3_file *id) {$/;"	f	file:
semXClose	tsrc/os_unix.c	/^static int semXClose(sqlite3_file *id) {$/;"	f	file:
semXLock	sqlite3.c	/^static int semXLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXLock	src/os_unix.c	/^static int semXLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXLock	tsrc/os_unix.c	/^static int semXLock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXUnlock	sqlite3.c	/^static int semXUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXUnlock	src/os_unix.c	/^static int semXUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
semXUnlock	tsrc/os_unix.c	/^static int semXUnlock(sqlite3_file *id, int eFileLock) {$/;"	f	file:
sendToServer	src/test_server.c	/^static void sendToServer(SqlMessage *pMsg){$/;"	f	file:
separateCache	sqlite3.c	/^  int separateCache;             \/* Use a new PGroup for each PCache *\/$/;"	m	struct:PCacheGlobal	file:
separateCache	src/pcache1.c	/^  int separateCache;             \/* Use a new PGroup for each PCache *\/$/;"	m	struct:PCacheGlobal	file:
separateCache	tsrc/pcache1.c	/^  int separateCache;             \/* Use a new PGroup for each PCache *\/$/;"	m	struct:PCacheGlobal	file:
seq	test/fuzzcheck.c	/^  int seq;                \/* Sequence number *\/$/;"	m	struct:Blob	file:
seqCount	sqlite3.c	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor	file:
seqCount	src/vdbeInt.h	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor
seqCount	tsrc/vdbeInt.h	/^  i64 seqCount;         \/* Sequence counter *\/$/;"	m	struct:VdbeCursor
serialGet	sqlite3.c	/^static u32 SQLITE_NOINLINE serialGet($/;"	f	file:
serialGet	src/vdbeaux.c	/^static u32 SQLITE_NOINLINE serialGet($/;"	f	file:
serialGet	tsrc/vdbeaux.c	/^static u32 SQLITE_NOINLINE serialGet($/;"	f	file:
seriesBestIndex	ext/misc/series.c	/^static int seriesBestIndex($/;"	f	file:
seriesClose	ext/misc/series.c	/^static int seriesClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
seriesColumn	ext/misc/series.c	/^static int seriesColumn($/;"	f	file:
seriesConnect	ext/misc/series.c	/^static int seriesConnect($/;"	f	file:
seriesDisconnect	ext/misc/series.c	/^static int seriesDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
seriesEof	ext/misc/series.c	/^static int seriesEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
seriesFilter	ext/misc/series.c	/^static int seriesFilter($/;"	f	file:
seriesModule	ext/misc/series.c	/^static sqlite3_module seriesModule = {$/;"	v	file:
seriesNext	ext/misc/series.c	/^static int seriesNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
seriesOpen	ext/misc/series.c	/^static int seriesOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
seriesRowid	ext/misc/series.c	/^static int seriesRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
series_cursor	ext/misc/series.c	/^struct series_cursor {$/;"	s	file:
series_cursor	ext/misc/series.c	/^typedef struct series_cursor series_cursor;$/;"	t	typeref:struct:series_cursor	file:
serverHalt	src/test_server.c	/^  volatile int serverHalt;      \/* Server halts itself when true *\/$/;"	m	struct:ServerState	file:
serverMutex	src/test_server.c	/^  pthread_mutex_t serverMutex;  \/* Held by the server while it is running *\/$/;"	m	struct:ServerState	file:
serverWakeup	src/test_server.c	/^  pthread_cond_t serverWakeup;  \/* Signal this condvar to wake up the server *\/$/;"	m	struct:ServerState	file:
serverWrapper	src/test_server.c	/^static void *serverWrapper(void *pnDecr){$/;"	f	file:
sessionAppendBlob	ext/session/sqlite3session.c	/^static void sessionAppendBlob($/;"	f	file:
sessionAppendBlob	sqlite3.c	/^static void sessionAppendBlob($/;"	f	file:
sessionAppendBlob	tsrc/sqlite3session.c	/^static void sessionAppendBlob($/;"	f	file:
sessionAppendByte	ext/session/sqlite3session.c	/^static void sessionAppendByte(SessionBuffer *p, u8 v, int *pRc){$/;"	f	file:
sessionAppendByte	sqlite3.c	/^static void sessionAppendByte(SessionBuffer *p, u8 v, int *pRc){$/;"	f	file:
sessionAppendByte	tsrc/sqlite3session.c	/^static void sessionAppendByte(SessionBuffer *p, u8 v, int *pRc){$/;"	f	file:
sessionAppendCol	ext/session/sqlite3session.c	/^static void sessionAppendCol($/;"	f	file:
sessionAppendCol	sqlite3.c	/^static void sessionAppendCol($/;"	f	file:
sessionAppendCol	tsrc/sqlite3session.c	/^static void sessionAppendCol($/;"	f	file:
sessionAppendDelete	ext/session/sqlite3session.c	/^static int sessionAppendDelete($/;"	f	file:
sessionAppendDelete	sqlite3.c	/^static int sessionAppendDelete($/;"	f	file:
sessionAppendDelete	tsrc/sqlite3session.c	/^static int sessionAppendDelete($/;"	f	file:
sessionAppendIdent	ext/session/sqlite3session.c	/^static void sessionAppendIdent($/;"	f	file:
sessionAppendIdent	sqlite3.c	/^static void sessionAppendIdent($/;"	f	file:
sessionAppendIdent	tsrc/sqlite3session.c	/^static void sessionAppendIdent($/;"	f	file:
sessionAppendInteger	ext/session/sqlite3session.c	/^static void sessionAppendInteger($/;"	f	file:
sessionAppendInteger	sqlite3.c	/^static void sessionAppendInteger($/;"	f	file:
sessionAppendInteger	tsrc/sqlite3session.c	/^static void sessionAppendInteger($/;"	f	file:
sessionAppendStr	ext/session/sqlite3session.c	/^static void sessionAppendStr($/;"	f	file:
sessionAppendStr	sqlite3.c	/^static void sessionAppendStr($/;"	f	file:
sessionAppendStr	tsrc/sqlite3session.c	/^static void sessionAppendStr($/;"	f	file:
sessionAppendTableHdr	ext/session/sqlite3session.c	/^static void sessionAppendTableHdr($/;"	f	file:
sessionAppendTableHdr	sqlite3.c	/^static void sessionAppendTableHdr($/;"	f	file:
sessionAppendTableHdr	tsrc/sqlite3session.c	/^static void sessionAppendTableHdr($/;"	f	file:
sessionAppendUpdate	ext/session/sqlite3session.c	/^static int sessionAppendUpdate($/;"	f	file:
sessionAppendUpdate	sqlite3.c	/^static int sessionAppendUpdate($/;"	f	file:
sessionAppendUpdate	tsrc/sqlite3session.c	/^static int sessionAppendUpdate($/;"	f	file:
sessionAppendValue	ext/session/sqlite3session.c	/^static void sessionAppendValue(SessionBuffer *p, sqlite3_value *pVal, int *pRc){$/;"	f	file:
sessionAppendValue	sqlite3.c	/^static void sessionAppendValue(SessionBuffer *p, sqlite3_value *pVal, int *pRc){$/;"	f	file:
sessionAppendValue	tsrc/sqlite3session.c	/^static void sessionAppendValue(SessionBuffer *p, sqlite3_value *pVal, int *pRc){$/;"	f	file:
sessionAppendVarint	ext/session/sqlite3session.c	/^static void sessionAppendVarint(SessionBuffer *p, int v, int *pRc){$/;"	f	file:
sessionAppendVarint	sqlite3.c	/^static void sessionAppendVarint(SessionBuffer *p, int v, int *pRc){$/;"	f	file:
sessionAppendVarint	tsrc/sqlite3session.c	/^static void sessionAppendVarint(SessionBuffer *p, int v, int *pRc){$/;"	f	file:
sessionApplyOneOp	ext/session/sqlite3session.c	/^static int sessionApplyOneOp($/;"	f	file:
sessionApplyOneOp	sqlite3.c	/^static int sessionApplyOneOp($/;"	f	file:
sessionApplyOneOp	tsrc/sqlite3session.c	/^static int sessionApplyOneOp($/;"	f	file:
sessionApplyOneWithRetry	ext/session/sqlite3session.c	/^static int sessionApplyOneWithRetry($/;"	f	file:
sessionApplyOneWithRetry	sqlite3.c	/^static int sessionApplyOneWithRetry($/;"	f	file:
sessionApplyOneWithRetry	tsrc/sqlite3session.c	/^static int sessionApplyOneWithRetry($/;"	f	file:
sessionBindRow	ext/session/sqlite3session.c	/^static int sessionBindRow($/;"	f	file:
sessionBindRow	sqlite3.c	/^static int sessionBindRow($/;"	f	file:
sessionBindRow	tsrc/sqlite3session.c	/^static int sessionBindRow($/;"	f	file:
sessionBindValue	ext/session/sqlite3session.c	/^static int sessionBindValue($/;"	f	file:
sessionBindValue	sqlite3.c	/^static int sessionBindValue($/;"	f	file:
sessionBindValue	tsrc/sqlite3session.c	/^static int sessionBindValue($/;"	f	file:
sessionBufferGrow	ext/session/sqlite3session.c	/^static int sessionBufferGrow(SessionBuffer *p, int nByte, int *pRc){$/;"	f	file:
sessionBufferGrow	sqlite3.c	/^static int sessionBufferGrow(SessionBuffer *p, int nByte, int *pRc){$/;"	f	file:
sessionBufferGrow	tsrc/sqlite3session.c	/^static int sessionBufferGrow(SessionBuffer *p, int nByte, int *pRc){$/;"	f	file:
sessionChangeEqual	ext/session/sqlite3session.c	/^static int sessionChangeEqual($/;"	f	file:
sessionChangeEqual	sqlite3.c	/^static int sessionChangeEqual($/;"	f	file:
sessionChangeEqual	tsrc/sqlite3session.c	/^static int sessionChangeEqual($/;"	f	file:
sessionChangeHash	ext/session/sqlite3session.c	/^static unsigned int sessionChangeHash($/;"	f	file:
sessionChangeHash	sqlite3.c	/^static unsigned int sessionChangeHash($/;"	f	file:
sessionChangeHash	tsrc/sqlite3session.c	/^static unsigned int sessionChangeHash($/;"	f	file:
sessionChangeMerge	ext/session/sqlite3session.c	/^static int sessionChangeMerge($/;"	f	file:
sessionChangeMerge	sqlite3.c	/^static int sessionChangeMerge($/;"	f	file:
sessionChangeMerge	tsrc/sqlite3session.c	/^static int sessionChangeMerge($/;"	f	file:
sessionChangegroupOutput	ext/session/sqlite3session.c	/^static int sessionChangegroupOutput($/;"	f	file:
sessionChangegroupOutput	sqlite3.c	/^static int sessionChangegroupOutput($/;"	f	file:
sessionChangegroupOutput	tsrc/sqlite3session.c	/^static int sessionChangegroupOutput($/;"	f	file:
sessionChangesetApply	ext/session/sqlite3session.c	/^static int sessionChangesetApply($/;"	f	file:
sessionChangesetApply	sqlite3.c	/^static int sessionChangesetApply($/;"	f	file:
sessionChangesetApply	tsrc/sqlite3session.c	/^static int sessionChangesetApply($/;"	f	file:
sessionChangesetBufferRecord	ext/session/sqlite3session.c	/^static int sessionChangesetBufferRecord($/;"	f	file:
sessionChangesetBufferRecord	sqlite3.c	/^static int sessionChangesetBufferRecord($/;"	f	file:
sessionChangesetBufferRecord	tsrc/sqlite3session.c	/^static int sessionChangesetBufferRecord($/;"	f	file:
sessionChangesetBufferTblhdr	ext/session/sqlite3session.c	/^static int sessionChangesetBufferTblhdr(SessionInput *pIn, int *pnByte){$/;"	f	file:
sessionChangesetBufferTblhdr	sqlite3.c	/^static int sessionChangesetBufferTblhdr(SessionInput *pIn, int *pnByte){$/;"	f	file:
sessionChangesetBufferTblhdr	tsrc/sqlite3session.c	/^static int sessionChangesetBufferTblhdr(SessionInput *pIn, int *pnByte){$/;"	f	file:
sessionChangesetInvert	ext/session/sqlite3session.c	/^static int sessionChangesetInvert($/;"	f	file:
sessionChangesetInvert	sqlite3.c	/^static int sessionChangesetInvert($/;"	f	file:
sessionChangesetInvert	tsrc/sqlite3session.c	/^static int sessionChangesetInvert($/;"	f	file:
sessionChangesetNew	ext/session/sqlite3session.c	3011;"	d	file:
sessionChangesetNew	sqlite3.c	173355;"	d	file:
sessionChangesetNew	tsrc/sqlite3session.c	3011;"	d	file:
sessionChangesetNext	ext/session/sqlite3session.c	/^static int sessionChangesetNext($/;"	f	file:
sessionChangesetNext	sqlite3.c	/^static int sessionChangesetNext($/;"	f	file:
sessionChangesetNext	tsrc/sqlite3session.c	/^static int sessionChangesetNext($/;"	f	file:
sessionChangesetOld	ext/session/sqlite3session.c	3012;"	d	file:
sessionChangesetOld	sqlite3.c	173356;"	d	file:
sessionChangesetOld	tsrc/sqlite3session.c	3012;"	d	file:
sessionChangesetReadTblhdr	ext/session/sqlite3session.c	/^static int sessionChangesetReadTblhdr(sqlite3_changeset_iter *p){$/;"	f	file:
sessionChangesetReadTblhdr	sqlite3.c	/^static int sessionChangesetReadTblhdr(sqlite3_changeset_iter *p){$/;"	f	file:
sessionChangesetReadTblhdr	tsrc/sqlite3session.c	/^static int sessionChangesetReadTblhdr(sqlite3_changeset_iter *p){$/;"	f	file:
sessionChangesetStart	ext/session/sqlite3session.c	/^static int sessionChangesetStart($/;"	f	file:
sessionChangesetStart	sqlite3.c	/^static int sessionChangesetStart($/;"	f	file:
sessionChangesetStart	tsrc/sqlite3session.c	/^static int sessionChangesetStart($/;"	f	file:
sessionChangesetToHash	ext/session/sqlite3session.c	/^static int sessionChangesetToHash($/;"	f	file:
sessionChangesetToHash	sqlite3.c	/^static int sessionChangesetToHash($/;"	f	file:
sessionChangesetToHash	tsrc/sqlite3session.c	/^static int sessionChangesetToHash($/;"	f	file:
sessionConflictHandler	ext/session/sqlite3session.c	/^static int sessionConflictHandler($/;"	f	file:
sessionConflictHandler	sqlite3.c	/^static int sessionConflictHandler($/;"	f	file:
sessionConflictHandler	tsrc/sqlite3session.c	/^static int sessionConflictHandler($/;"	f	file:
sessionDeleteRow	ext/session/sqlite3session.c	/^static int sessionDeleteRow($/;"	f	file:
sessionDeleteRow	sqlite3.c	/^static int sessionDeleteRow($/;"	f	file:
sessionDeleteRow	tsrc/sqlite3session.c	/^static int sessionDeleteRow($/;"	f	file:
sessionDeleteTable	ext/session/sqlite3session.c	/^static void sessionDeleteTable(SessionTable *pList){$/;"	f	file:
sessionDeleteTable	sqlite3.c	/^static void sessionDeleteTable(SessionTable *pList){$/;"	f	file:
sessionDeleteTable	tsrc/sqlite3session.c	/^static void sessionDeleteTable(SessionTable *pList){$/;"	f	file:
sessionDiffCount	ext/session/sqlite3session.c	/^static int sessionDiffCount(void *pCtx){$/;"	f	file:
sessionDiffCount	sqlite3.c	/^static int sessionDiffCount(void *pCtx){$/;"	f	file:
sessionDiffCount	tsrc/sqlite3session.c	/^static int sessionDiffCount(void *pCtx){$/;"	f	file:
sessionDiffDepth	ext/session/sqlite3session.c	/^static int sessionDiffDepth(void *pCtx){$/;"	f	file:
sessionDiffDepth	sqlite3.c	/^static int sessionDiffDepth(void *pCtx){$/;"	f	file:
sessionDiffDepth	tsrc/sqlite3session.c	/^static int sessionDiffDepth(void *pCtx){$/;"	f	file:
sessionDiffFindModified	ext/session/sqlite3session.c	/^static int sessionDiffFindModified($/;"	f	file:
sessionDiffFindModified	sqlite3.c	/^static int sessionDiffFindModified($/;"	f	file:
sessionDiffFindModified	tsrc/sqlite3session.c	/^static int sessionDiffFindModified($/;"	f	file:
sessionDiffFindNew	ext/session/sqlite3session.c	/^static int sessionDiffFindNew($/;"	f	file:
sessionDiffFindNew	sqlite3.c	/^static int sessionDiffFindNew($/;"	f	file:
sessionDiffFindNew	tsrc/sqlite3session.c	/^static int sessionDiffFindNew($/;"	f	file:
sessionDiffHooks	ext/session/sqlite3session.c	/^static void sessionDiffHooks($/;"	f	file:
sessionDiffHooks	sqlite3.c	/^static void sessionDiffHooks($/;"	f	file:
sessionDiffHooks	tsrc/sqlite3session.c	/^static void sessionDiffHooks($/;"	f	file:
sessionDiffNew	ext/session/sqlite3session.c	/^static int sessionDiffNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffNew	sqlite3.c	/^static int sessionDiffNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffNew	tsrc/sqlite3session.c	/^static int sessionDiffNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffOld	ext/session/sqlite3session.c	/^static int sessionDiffOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffOld	sqlite3.c	/^static int sessionDiffOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiffOld	tsrc/sqlite3session.c	/^static int sessionDiffOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionDiscardData	ext/session/sqlite3session.c	/^static void sessionDiscardData(SessionInput *pIn){$/;"	f	file:
sessionDiscardData	sqlite3.c	/^static void sessionDiscardData(SessionInput *pIn){$/;"	f	file:
sessionDiscardData	tsrc/sqlite3session.c	/^static void sessionDiscardData(SessionInput *pIn){$/;"	f	file:
sessionExprCompareOther	ext/session/sqlite3session.c	/^static char *sessionExprCompareOther($/;"	f	file:
sessionExprCompareOther	sqlite3.c	/^static char *sessionExprCompareOther($/;"	f	file:
sessionExprCompareOther	tsrc/sqlite3session.c	/^static char *sessionExprCompareOther($/;"	f	file:
sessionExprComparePK	ext/session/sqlite3session.c	/^static char *sessionExprComparePK($/;"	f	file:
sessionExprComparePK	sqlite3.c	/^static char *sessionExprComparePK($/;"	f	file:
sessionExprComparePK	tsrc/sqlite3session.c	/^static char *sessionExprComparePK($/;"	f	file:
sessionFindTable	ext/session/sqlite3session.c	/^static int sessionFindTable($/;"	f	file:
sessionFindTable	sqlite3.c	/^static int sessionFindTable($/;"	f	file:
sessionFindTable	tsrc/sqlite3session.c	/^static int sessionFindTable($/;"	f	file:
sessionGenerateChangeset	ext/session/sqlite3session.c	/^static int sessionGenerateChangeset($/;"	f	file:
sessionGenerateChangeset	sqlite3.c	/^static int sessionGenerateChangeset($/;"	f	file:
sessionGenerateChangeset	tsrc/sqlite3session.c	/^static int sessionGenerateChangeset($/;"	f	file:
sessionGetI64	ext/session/sqlite3session.c	/^static sqlite3_int64 sessionGetI64(u8 *aRec){$/;"	f	file:
sessionGetI64	sqlite3.c	/^static sqlite3_int64 sessionGetI64(u8 *aRec){$/;"	f	file:
sessionGetI64	tsrc/sqlite3session.c	/^static sqlite3_int64 sessionGetI64(u8 *aRec){$/;"	f	file:
sessionGrowHash	ext/session/sqlite3session.c	/^static int sessionGrowHash(int bPatchset, SessionTable *pTab){$/;"	f	file:
sessionGrowHash	sqlite3.c	/^static int sessionGrowHash(int bPatchset, SessionTable *pTab){$/;"	f	file:
sessionGrowHash	tsrc/sqlite3session.c	/^static int sessionGrowHash(int bPatchset, SessionTable *pTab){$/;"	f	file:
sessionHashAppendBlob	ext/session/sqlite3session.c	/^static unsigned int sessionHashAppendBlob(unsigned int h, int n, const u8 *z){$/;"	f	file:
sessionHashAppendBlob	sqlite3.c	/^static unsigned int sessionHashAppendBlob(unsigned int h, int n, const u8 *z){$/;"	f	file:
sessionHashAppendBlob	tsrc/sqlite3session.c	/^static unsigned int sessionHashAppendBlob(unsigned int h, int n, const u8 *z){$/;"	f	file:
sessionHashAppendI64	ext/session/sqlite3session.c	/^static unsigned int sessionHashAppendI64(unsigned int h, i64 i){$/;"	f	file:
sessionHashAppendI64	sqlite3.c	/^static unsigned int sessionHashAppendI64(unsigned int h, i64 i){$/;"	f	file:
sessionHashAppendI64	tsrc/sqlite3session.c	/^static unsigned int sessionHashAppendI64(unsigned int h, i64 i){$/;"	f	file:
sessionHashAppendType	ext/session/sqlite3session.c	/^static unsigned int sessionHashAppendType(unsigned int h, int eType){$/;"	f	file:
sessionHashAppendType	sqlite3.c	/^static unsigned int sessionHashAppendType(unsigned int h, int eType){$/;"	f	file:
sessionHashAppendType	tsrc/sqlite3session.c	/^static unsigned int sessionHashAppendType(unsigned int h, int eType){$/;"	f	file:
sessionInitTable	ext/session/sqlite3session.c	/^static int sessionInitTable(sqlite3_session *pSession, SessionTable *pTab){$/;"	f	file:
sessionInitTable	sqlite3.c	/^static int sessionInitTable(sqlite3_session *pSession, SessionTable *pTab){$/;"	f	file:
sessionInitTable	tsrc/sqlite3session.c	/^static int sessionInitTable(sqlite3_session *pSession, SessionTable *pTab){$/;"	f	file:
sessionInputBuffer	ext/session/sqlite3session.c	/^static int sessionInputBuffer(SessionInput *pIn, int nByte){$/;"	f	file:
sessionInputBuffer	sqlite3.c	/^static int sessionInputBuffer(SessionInput *pIn, int nByte){$/;"	f	file:
sessionInputBuffer	tsrc/sqlite3session.c	/^static int sessionInputBuffer(SessionInput *pIn, int nByte){$/;"	f	file:
sessionInsertRow	ext/session/sqlite3session.c	/^static int sessionInsertRow($/;"	f	file:
sessionInsertRow	sqlite3.c	/^static int sessionInsertRow($/;"	f	file:
sessionInsertRow	tsrc/sqlite3session.c	/^static int sessionInsertRow($/;"	f	file:
sessionMergeRecord	ext/session/sqlite3session.c	/^static void sessionMergeRecord($/;"	f	file:
sessionMergeRecord	sqlite3.c	/^static void sessionMergeRecord($/;"	f	file:
sessionMergeRecord	tsrc/sqlite3session.c	/^static void sessionMergeRecord($/;"	f	file:
sessionMergeUpdate	ext/session/sqlite3session.c	/^static int sessionMergeUpdate($/;"	f	file:
sessionMergeUpdate	sqlite3.c	/^static int sessionMergeUpdate($/;"	f	file:
sessionMergeUpdate	tsrc/sqlite3session.c	/^static int sessionMergeUpdate($/;"	f	file:
sessionMergeValue	ext/session/sqlite3session.c	/^static u8 *sessionMergeValue($/;"	f	file:
sessionMergeValue	sqlite3.c	/^static u8 *sessionMergeValue($/;"	f	file:
sessionMergeValue	tsrc/sqlite3session.c	/^static u8 *sessionMergeValue($/;"	f	file:
sessionPreupdateCount	ext/session/sqlite3session.c	/^static int sessionPreupdateCount(void *pCtx){$/;"	f	file:
sessionPreupdateCount	sqlite3.c	/^static int sessionPreupdateCount(void *pCtx){$/;"	f	file:
sessionPreupdateCount	tsrc/sqlite3session.c	/^static int sessionPreupdateCount(void *pCtx){$/;"	f	file:
sessionPreupdateDepth	ext/session/sqlite3session.c	/^static int sessionPreupdateDepth(void *pCtx){$/;"	f	file:
sessionPreupdateDepth	sqlite3.c	/^static int sessionPreupdateDepth(void *pCtx){$/;"	f	file:
sessionPreupdateDepth	tsrc/sqlite3session.c	/^static int sessionPreupdateDepth(void *pCtx){$/;"	f	file:
sessionPreupdateEqual	ext/session/sqlite3session.c	/^static int sessionPreupdateEqual($/;"	f	file:
sessionPreupdateEqual	sqlite3.c	/^static int sessionPreupdateEqual($/;"	f	file:
sessionPreupdateEqual	tsrc/sqlite3session.c	/^static int sessionPreupdateEqual($/;"	f	file:
sessionPreupdateHash	ext/session/sqlite3session.c	/^static int sessionPreupdateHash($/;"	f	file:
sessionPreupdateHash	sqlite3.c	/^static int sessionPreupdateHash($/;"	f	file:
sessionPreupdateHash	tsrc/sqlite3session.c	/^static int sessionPreupdateHash($/;"	f	file:
sessionPreupdateHooks	ext/session/sqlite3session.c	/^static void sessionPreupdateHooks($/;"	f	file:
sessionPreupdateHooks	sqlite3.c	/^static void sessionPreupdateHooks($/;"	f	file:
sessionPreupdateHooks	tsrc/sqlite3session.c	/^static void sessionPreupdateHooks($/;"	f	file:
sessionPreupdateNew	ext/session/sqlite3session.c	/^static int sessionPreupdateNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateNew	sqlite3.c	/^static int sessionPreupdateNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateNew	tsrc/sqlite3session.c	/^static int sessionPreupdateNew(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOld	ext/session/sqlite3session.c	/^static int sessionPreupdateOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOld	sqlite3.c	/^static int sessionPreupdateOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOld	tsrc/sqlite3session.c	/^static int sessionPreupdateOld(void *pCtx, int iVal, sqlite3_value **ppVal){$/;"	f	file:
sessionPreupdateOneChange	ext/session/sqlite3session.c	/^static void sessionPreupdateOneChange($/;"	f	file:
sessionPreupdateOneChange	sqlite3.c	/^static void sessionPreupdateOneChange($/;"	f	file:
sessionPreupdateOneChange	tsrc/sqlite3session.c	/^static void sessionPreupdateOneChange($/;"	f	file:
sessionPutI64	ext/session/sqlite3session.c	/^static void sessionPutI64(u8 *aBuf, sqlite3_int64 i){$/;"	f	file:
sessionPutI64	sqlite3.c	/^static void sessionPutI64(u8 *aBuf, sqlite3_int64 i){$/;"	f	file:
sessionPutI64	tsrc/sqlite3session.c	/^static void sessionPutI64(u8 *aBuf, sqlite3_int64 i){$/;"	f	file:
sessionReadRecord	ext/session/sqlite3session.c	/^static int sessionReadRecord($/;"	f	file:
sessionReadRecord	sqlite3.c	/^static int sessionReadRecord($/;"	f	file:
sessionReadRecord	tsrc/sqlite3session.c	/^static int sessionReadRecord($/;"	f	file:
sessionRetryConstraints	ext/session/sqlite3session.c	/^static int sessionRetryConstraints($/;"	f	file:
sessionRetryConstraints	sqlite3.c	/^static int sessionRetryConstraints($/;"	f	file:
sessionRetryConstraints	tsrc/sqlite3session.c	/^static int sessionRetryConstraints($/;"	f	file:
sessionSeekToRow	ext/session/sqlite3session.c	/^static int sessionSeekToRow($/;"	f	file:
sessionSeekToRow	sqlite3.c	/^static int sessionSeekToRow($/;"	f	file:
sessionSeekToRow	tsrc/sqlite3session.c	/^static int sessionSeekToRow($/;"	f	file:
sessionSelectBind	ext/session/sqlite3session.c	/^static int sessionSelectBind($/;"	f	file:
sessionSelectBind	sqlite3.c	/^static int sessionSelectBind($/;"	f	file:
sessionSelectBind	tsrc/sqlite3session.c	/^static int sessionSelectBind($/;"	f	file:
sessionSelectFindNew	ext/session/sqlite3session.c	/^static char *sessionSelectFindNew($/;"	f	file:
sessionSelectFindNew	sqlite3.c	/^static char *sessionSelectFindNew($/;"	f	file:
sessionSelectFindNew	tsrc/sqlite3session.c	/^static char *sessionSelectFindNew($/;"	f	file:
sessionSelectRow	ext/session/sqlite3session.c	/^static int sessionSelectRow($/;"	f	file:
sessionSelectRow	sqlite3.c	/^static int sessionSelectRow($/;"	f	file:
sessionSelectRow	tsrc/sqlite3session.c	/^static int sessionSelectRow($/;"	f	file:
sessionSelectStmt	ext/session/sqlite3session.c	/^static int sessionSelectStmt($/;"	f	file:
sessionSelectStmt	sqlite3.c	/^static int sessionSelectStmt($/;"	f	file:
sessionSelectStmt	tsrc/sqlite3session.c	/^static int sessionSelectStmt($/;"	f	file:
sessionSerialLen	ext/session/sqlite3session.c	/^static int sessionSerialLen(u8 *a){$/;"	f	file:
sessionSerialLen	sqlite3.c	/^static int sessionSerialLen(u8 *a){$/;"	f	file:
sessionSerialLen	tsrc/sqlite3session.c	/^static int sessionSerialLen(u8 *a){$/;"	f	file:
sessionSerializeValue	ext/session/sqlite3session.c	/^static int sessionSerializeValue($/;"	f	file:
sessionSerializeValue	sqlite3.c	/^static int sessionSerializeValue($/;"	f	file:
sessionSerializeValue	tsrc/sqlite3session.c	/^static int sessionSerializeValue($/;"	f	file:
sessionSkipRecord	ext/session/sqlite3session.c	/^static void sessionSkipRecord($/;"	f	file:
sessionSkipRecord	sqlite3.c	/^static void sessionSkipRecord($/;"	f	file:
sessionSkipRecord	tsrc/sqlite3session.c	/^static void sessionSkipRecord($/;"	f	file:
sessionTableInfo	ext/session/sqlite3session.c	/^static int sessionTableInfo($/;"	f	file:
sessionTableInfo	sqlite3.c	/^static int sessionTableInfo($/;"	f	file:
sessionTableInfo	tsrc/sqlite3session.c	/^static int sessionTableInfo($/;"	f	file:
sessionUpdateRow	ext/session/sqlite3session.c	/^static int sessionUpdateRow($/;"	f	file:
sessionUpdateRow	sqlite3.c	/^static int sessionUpdateRow($/;"	f	file:
sessionUpdateRow	tsrc/sqlite3session.c	/^static int sessionUpdateRow($/;"	f	file:
sessionValueSetStr	ext/session/sqlite3session.c	/^static int sessionValueSetStr($/;"	f	file:
sessionValueSetStr	sqlite3.c	/^static int sessionValueSetStr($/;"	f	file:
sessionValueSetStr	tsrc/sqlite3session.c	/^static int sessionValueSetStr($/;"	f	file:
sessionVarintGet	ext/session/sqlite3session.c	/^static int sessionVarintGet(u8 *aBuf, int *piVal){$/;"	f	file:
sessionVarintGet	sqlite3.c	/^static int sessionVarintGet(u8 *aBuf, int *piVal){$/;"	f	file:
sessionVarintGet	tsrc/sqlite3session.c	/^static int sessionVarintGet(u8 *aBuf, int *piVal){$/;"	f	file:
sessionVarintLen	ext/session/sqlite3session.c	/^static int sessionVarintLen(int iVal){$/;"	f	file:
sessionVarintLen	sqlite3.c	/^static int sessionVarintLen(int iVal){$/;"	f	file:
sessionVarintLen	tsrc/sqlite3session.c	/^static int sessionVarintLen(int iVal){$/;"	f	file:
sessionVarintPut	ext/session/sqlite3session.c	/^static int sessionVarintPut(u8 *aBuf, int iVal){$/;"	f	file:
sessionVarintPut	sqlite3.c	/^static int sessionVarintPut(u8 *aBuf, int iVal){$/;"	f	file:
sessionVarintPut	tsrc/sqlite3session.c	/^static int sessionVarintPut(u8 *aBuf, int iVal){$/;"	f	file:
session_close	shell.c	/^static void session_close(OpenSession *pSession){$/;"	f	file:
session_close	src/shell.c	/^static void session_close(OpenSession *pSession){$/;"	f	file:
session_close	tsrc/shell.c	/^static void session_close(OpenSession *pSession){$/;"	f	file:
session_close_all	shell.c	/^static void session_close_all(ShellState *p){$/;"	f	file:
session_close_all	shell.c	2327;"	d	file:
session_close_all	src/shell.c	/^static void session_close_all(ShellState *p){$/;"	f	file:
session_close_all	src/shell.c	2327;"	d	file:
session_close_all	tsrc/shell.c	/^static void session_close_all(ShellState *p){$/;"	f	file:
session_close_all	tsrc/shell.c	2327;"	d	file:
session_filter	shell.c	/^static int session_filter(void *pCtx, const char *zTab){$/;"	f	file:
session_filter	src/shell.c	/^static int session_filter(void *pCtx, const char *zTab){$/;"	f	file:
session_filter	tsrc/shell.c	/^static int session_filter(void *pCtx, const char *zTab){$/;"	f	file:
session_help	shell.c	/^void session_help(ShellState *p){$/;"	f
session_help	src/shell.c	/^void session_help(ShellState *p){$/;"	f
session_help	tsrc/shell.c	/^void session_help(ShellState *p){$/;"	f
setAlarm	test/fuzzcheck.c	/^static void setAlarm(int N){$/;"	f	file:
setAllColumnNames	sqlite3.c	/^static void setAllColumnNames($/;"	f	file:
setAllColumnNames	src/pragma.c	/^static void setAllColumnNames($/;"	f	file:
setAllColumnNames	tsrc/pragma.c	/^static void setAllColumnNames($/;"	f	file:
setAllPagerFlags	sqlite3.c	/^static void setAllPagerFlags(sqlite3 *db){$/;"	f	file:
setAllPagerFlags	sqlite3.c	110869;"	d	file:
setAllPagerFlags	src/pragma.c	/^static void setAllPagerFlags(sqlite3 *db){$/;"	f	file:
setAllPagerFlags	src/pragma.c	233;"	d	file:
setAllPagerFlags	tsrc/pragma.c	/^static void setAllPagerFlags(sqlite3 *db){$/;"	f	file:
setAllPagerFlags	tsrc/pragma.c	233;"	d	file:
setBinaryMode	shell.c	/^static void setBinaryMode(FILE *file, int isOutput){$/;"	f	file:
setBinaryMode	shell.c	164;"	d	file:
setBinaryMode	src/shell.c	/^static void setBinaryMode(FILE *file, int isOutput){$/;"	f	file:
setBinaryMode	src/shell.c	164;"	d	file:
setBinaryMode	tsrc/shell.c	/^static void setBinaryMode(FILE *file, int isOutput){$/;"	f	file:
setBinaryMode	tsrc/shell.c	164;"	d	file:
setChildPtrmaps	sqlite3.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	sqlite3.c	61834;"	d	file:
setChildPtrmaps	src/btree.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	src/btree.c	3698;"	d	file:
setChildPtrmaps	tsrc/btree.c	/^static int setChildPtrmaps(MemPage *pPage){$/;"	f	file:
setChildPtrmaps	tsrc/btree.c	3698;"	d	file:
setDateTimeToCurrent	sqlite3.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDateTimeToCurrent	src/date.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDateTimeToCurrent	tsrc/date.c	/^static int setDateTimeToCurrent(sqlite3_context *context, DateTime *p){$/;"	f	file:
setDestPgsz	sqlite3.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setDestPgsz	src/backup.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setDestPgsz	tsrc/backup.c	/^static int setDestPgsz(sqlite3_backup *p){$/;"	f	file:
setEstimatedRows	ext/rtree/rtree.c	/^static void setEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
setEstimatedRows	sqlite3.c	/^static void setEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
setEstimatedRows	tsrc/rtree.c	/^static void setEstimatedRows(sqlite3_index_info *pIdxInfo, i64 nRow){$/;"	f	file:
setJoinExpr	sqlite3.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setJoinExpr	src/select.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setJoinExpr	tsrc/select.c	/^static void setJoinExpr(Expr *p, int iTable){$/;"	f	file:
setLikeOptFlag	sqlite3.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setLikeOptFlag	src/func.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setLikeOptFlag	tsrc/func.c	/^static void setLikeOptFlag(sqlite3 *db, const char *zName, u8 flagVal){$/;"	f	file:
setMaster	sqlite3.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setMaster	src/pager.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setMaster	tsrc/pager.c	/^  u8 setMaster;               \/* True if a m-j name has been written to jrnl *\/$/;"	m	struct:Pager	file:
setOneColumnName	sqlite3.c	/^static void setOneColumnName(Vdbe *v, const char *z){$/;"	f	file:
setOneColumnName	src/pragma.c	/^static void setOneColumnName(Vdbe *v, const char *z){$/;"	f	file:
setOneColumnName	tsrc/pragma.c	/^static void setOneColumnName(Vdbe *v, const char *z){$/;"	f	file:
setPageReferenced	sqlite3.c	/^static void setPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
setPageReferenced	src/btree.c	/^static void setPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
setPageReferenced	tsrc/btree.c	/^static void setPageReferenced(IntegrityCk *pCheck, Pgno iPg){$/;"	f	file:
setPendingFd	sqlite3.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setPendingFd	src/os_unix.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setPendingFd	tsrc/os_unix.c	/^static void setPendingFd(unixFile *pFile){$/;"	f	file:
setResultStrOrError	sqlite3.c	/^static void setResultStrOrError($/;"	f	file:
setResultStrOrError	src/vdbeapi.c	/^static void setResultStrOrError($/;"	f	file:
setResultStrOrError	tsrc/vdbeapi.c	/^static void setResultStrOrError($/;"	f	file:
setSectorSize	sqlite3.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSectorSize	src/pager.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSectorSize	tsrc/pager.c	/^static void setSectorSize(Pager *pPager){$/;"	f	file:
setSharedCacheTableLock	sqlite3.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	sqlite3.c	58244;"	d	file:
setSharedCacheTableLock	src/btree.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	src/btree.c	108;"	d	file:
setSharedCacheTableLock	tsrc/btree.c	/^static int setSharedCacheTableLock(Btree *p, Pgno iTable, u8 eLock){$/;"	f	file:
setSharedCacheTableLock	tsrc/btree.c	108;"	d	file:
setStrAccumError	sqlite3.c	/^static void setStrAccumError(StrAccum *p, u8 eError){$/;"	f	file:
setStrAccumError	src/printf.c	/^static void setStrAccumError(StrAccum *p, u8 eError){$/;"	f	file:
setStrAccumError	tsrc/printf.c	/^static void setStrAccumError(StrAccum *p, u8 eError){$/;"	f	file:
setTestUnlockNotifyVars	src/tclsqlite.c	/^static void setTestUnlockNotifyVars(Tcl_Interp *interp, int iArg, int nArg){$/;"	f	file:
setTestUnlockNotifyVars	src/tclsqlite.c	772;"	d	file:
setTestUnlockNotifyVars	tsrc/tclsqlite.c	/^static void setTestUnlockNotifyVars(Tcl_Interp *interp, int iArg, int nArg){$/;"	f	file:
setTestUnlockNotifyVars	tsrc/tclsqlite.c	772;"	d	file:
setTextMode	shell.c	/^static void setTextMode(FILE *file, int isOutput){$/;"	f	file:
setTextMode	shell.c	165;"	d	file:
setTextMode	src/shell.c	/^static void setTextMode(FILE *file, int isOutput){$/;"	f	file:
setTextMode	src/shell.c	165;"	d	file:
setTextMode	tsrc/shell.c	/^static void setTextMode(FILE *file, int isOutput){$/;"	f	file:
setTextMode	tsrc/shell.c	165;"	d	file:
set_authorizer	sqlite3.c	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
set_authorizer	sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_authorizer	src/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_authorizer	tsrc/sqlite3ext.h	/^  int  (*set_authorizer)(sqlite3*,int(*)(void*,int,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
set_auxdata	sqlite3.c	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines	file:
set_auxdata	sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
set_auxdata	src/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
set_auxdata	tsrc/sqlite3ext.h	/^  void  (*set_auxdata)(sqlite3_context*,int,void*,void (*)(void*));$/;"	m	struct:sqlite3_api_routines
set_option_var	ext/rtree/viewrtree.tcl	/^proc set_option_var {args} {$/;"	p
set_options	src/test_config.c	/^static void set_options(Tcl_Interp *interp){$/;"	f	file:
set_table_name	shell.c	/^static void set_table_name(ShellState *p, const char *zName){$/;"	f	file:
set_table_name	src/shell.c	/^static void set_table_name(ShellState *p, const char *zName){$/;"	f	file:
set_table_name	tsrc/shell.c	/^static void set_table_name(ShellState *p, const char *zName){$/;"	f	file:
set_test_counter	test/tester.tcl	/^  proc set_test_counter {counter args} {$/;"	p
set_vcvarsall_done	tool/build-all-msvc.bat	/^:set_vcvarsall_done$/;"	l
set_vcvarsall_phone	tool/build-all-msvc.bat	/^:set_vcvarsall_phone$/;"	l
setstoptime	test/threadtest3.c	59;"	d	file:
setstoptime_x	test/threadtest3.c	/^static void setstoptime_x($/;"	f	file:
setupLookaside	sqlite3.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
setupLookaside	src/main.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
setupLookaside	tsrc/main.c	/^static int setupLookaside(sqlite3 *db, void *pBuf, int sz, int cnt){$/;"	f	file:
sharable	sqlite3.c	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree	file:
sharable	src/btreeInt.h	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree
sharable	tsrc/btreeInt.h	/^  u8 sharable;       \/* True if we can share pBt with another db *\/$/;"	m	struct:Btree
shared	sqlite3.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
shared	src/os_win.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
shared	tsrc/os_win.c	/^  winceLock *shared;      \/* Global shared lock memory for the file  *\/$/;"	m	struct:winFile	file:
sharedByte	sqlite3.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedByte	src/os_unix.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedByte	tsrc/os_unix.c	/^  unsigned long long sharedByte;  \/* for AFP simulated shared lock *\/$/;"	m	struct:unixInodeInfo	file:
sharedCacheEnabled	sqlite3.c	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config	file:
sharedCacheEnabled	src/sqliteInt.h	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config
sharedCacheEnabled	tsrc/sqliteInt.h	/^  int sharedCacheEnabled;           \/* true if shared-cache mode enabled *\/$/;"	m	struct:Sqlite3Config
sharedLockByte	sqlite3.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedLockByte	src/os_win.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedLockByte	tsrc/os_win.c	/^  short sharedLockByte;   \/* Randomly chosen byte used as a shared lock *\/$/;"	m	struct:winFile	file:
sharedMask	sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	sqlite3.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	sqlite3.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
sharedMask	src/os_unix.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	src/os_unix.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
sharedMask	src/os_win.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedMask	tsrc/os_unix.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:unixShm	file:
sharedMask	tsrc/os_unix.c	/^  u8 sharedMask;             \/* Mask of shared locks held *\/$/;"	m	struct:unixShmNode	file:
sharedMask	tsrc/os_win.c	/^  u16 sharedMask;            \/* Mask of shared locks held *\/$/;"	m	struct:winShm	file:
sharedlock	src/test_vfs.c	/^  u32 sharedlock;                 \/* Mask of shared locks *\/$/;"	m	struct:TestvfsFd	file:
shellAuth	shell.c	/^static int shellAuth($/;"	f	file:
shellAuth	src/shell.c	/^static int shellAuth($/;"	f	file:
shellAuth	tsrc/shell.c	/^static int shellAuth($/;"	f	file:
shellDatabaseError	shell.c	/^static int shellDatabaseError(sqlite3 *db){$/;"	f	file:
shellDatabaseError	src/shell.c	/^static int shellDatabaseError(sqlite3 *db){$/;"	f	file:
shellDatabaseError	tsrc/shell.c	/^static int shellDatabaseError(sqlite3 *db){$/;"	f	file:
shellFlgs	shell.c	/^  unsigned shellFlgs;    \/* Various flags *\/$/;"	m	struct:ShellState	file:
shellFlgs	src/shell.c	/^  unsigned shellFlgs;    \/* Various flags *\/$/;"	m	struct:ShellState	file:
shellFlgs	tsrc/shell.c	/^  unsigned shellFlgs;    \/* Various flags *\/$/;"	m	struct:ShellState	file:
shellLog	shell.c	/^static void shellLog(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
shellLog	src/shell.c	/^static void shellLog(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
shellLog	tool/fuzzershell.c	/^static void shellLog(void *pNotUsed, int iErrCode, const char *zMsg){$/;"	f	file:
shellLog	tsrc/shell.c	/^static void shellLog(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
shellLogNoop	tool/fuzzershell.c	/^static void shellLogNoop(void *pNotUsed, int iErrCode, const char *zMsg){$/;"	f	file:
shellNomemError	shell.c	/^static int shellNomemError(void){$/;"	f	file:
shellNomemError	src/shell.c	/^static int shellNomemError(void){$/;"	f	file:
shellNomemError	tsrc/shell.c	/^static int shellNomemError(void){$/;"	f	file:
shell_add_history	shell.c	76;"	d	file:
shell_add_history	shell.c	85;"	d	file:
shell_add_history	src/shell.c	76;"	d	file:
shell_add_history	src/shell.c	85;"	d	file:
shell_add_history	tsrc/shell.c	76;"	d	file:
shell_add_history	tsrc/shell.c	85;"	d	file:
shell_callback	shell.c	/^static int shell_callback($/;"	f	file:
shell_callback	src/shell.c	/^static int shell_callback($/;"	f	file:
shell_callback	tsrc/shell.c	/^static int shell_callback($/;"	f	file:
shell_dbinfo_command	shell.c	/^static int shell_dbinfo_command(ShellState *p, int nArg, char **azArg){$/;"	f	file:
shell_dbinfo_command	src/shell.c	/^static int shell_dbinfo_command(ShellState *p, int nArg, char **azArg){$/;"	f	file:
shell_dbinfo_command	tsrc/shell.c	/^static int shell_dbinfo_command(ShellState *p, int nArg, char **azArg){$/;"	f	file:
shell_exec	shell.c	/^static int shell_exec($/;"	f	file:
shell_exec	src/shell.c	/^static int shell_exec($/;"	f	file:
shell_exec	tsrc/shell.c	/^static int shell_exec($/;"	f	file:
shell_read_history	shell.c	77;"	d	file:
shell_read_history	shell.c	86;"	d	file:
shell_read_history	shell.c	93;"	d	file:
shell_read_history	src/shell.c	77;"	d	file:
shell_read_history	src/shell.c	86;"	d	file:
shell_read_history	src/shell.c	93;"	d	file:
shell_read_history	tsrc/shell.c	77;"	d	file:
shell_read_history	tsrc/shell.c	86;"	d	file:
shell_read_history	tsrc/shell.c	93;"	d	file:
shell_readline	shell.c	80;"	d	file:
shell_readline	shell.c	89;"	d	file:
shell_readline	src/shell.c	80;"	d	file:
shell_readline	src/shell.c	89;"	d	file:
shell_readline	tsrc/shell.c	80;"	d	file:
shell_readline	tsrc/shell.c	89;"	d	file:
shell_stifle_history	shell.c	79;"	d	file:
shell_stifle_history	shell.c	88;"	d	file:
shell_stifle_history	shell.c	95;"	d	file:
shell_stifle_history	src/shell.c	79;"	d	file:
shell_stifle_history	src/shell.c	88;"	d	file:
shell_stifle_history	src/shell.c	95;"	d	file:
shell_stifle_history	tsrc/shell.c	79;"	d	file:
shell_stifle_history	tsrc/shell.c	88;"	d	file:
shell_stifle_history	tsrc/shell.c	95;"	d	file:
shell_write_history	shell.c	78;"	d	file:
shell_write_history	shell.c	87;"	d	file:
shell_write_history	shell.c	94;"	d	file:
shell_write_history	src/shell.c	78;"	d	file:
shell_write_history	src/shell.c	87;"	d	file:
shell_write_history	src/shell.c	94;"	d	file:
shell_write_history	tsrc/shell.c	78;"	d	file:
shell_write_history	tsrc/shell.c	87;"	d	file:
shell_write_history	tsrc/shell.c	94;"	d	file:
shellstaticFunc	shell.c	/^static void shellstaticFunc($/;"	f	file:
shellstaticFunc	src/shell.c	/^static void shellstaticFunc($/;"	f	file:
shellstaticFunc	tsrc/shell.c	/^static void shellstaticFunc($/;"	f	file:
shmerr_injectinstall	test/malloc_common.tcl	/^proc shmerr_injectinstall {} {$/;"	p
shmerr_injectstart	test/malloc_common.tcl	/^proc shmerr_injectstart {persist iFail} {$/;"	p
shmerr_injectstop	test/malloc_common.tcl	/^proc shmerr_injectstop {} {$/;"	p
shmerr_injectuninstall	test/malloc_common.tcl	/^proc shmerr_injectuninstall {} {$/;"	p
showDoclist	ext/fts3/tool/fts3view.c	/^static void showDoclist(sqlite3 *db, const char *zTab){$/;"	f	file:
showHeader	shell.c	/^  int showHeader;        \/* True to show column names in List or Column mode *\/$/;"	m	struct:ShellState	file:
showHeader	shell.c	/^  int showHeader;     \/* The ".header" setting prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
showHeader	src/shell.c	/^  int showHeader;        \/* True to show column names in List or Column mode *\/$/;"	m	struct:ShellState	file:
showHeader	src/shell.c	/^  int showHeader;     \/* The ".header" setting prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
showHeader	tsrc/shell.c	/^  int showHeader;        \/* True to show column names in List or Column mode *\/$/;"	m	struct:ShellState	file:
showHeader	tsrc/shell.c	/^  int showHeader;     \/* The ".header" setting prior to ".explain on" *\/$/;"	m	struct:SavedModeInfo	file:
showHelp	test/fuzzcheck.c	/^static void showHelp(void){$/;"	f	file:
showHelp	tool/dbhash.c	/^static void showHelp(void){$/;"	f	file:
showHelp	tool/fuzzershell.c	/^static void showHelp(void){$/;"	f	file:
showHelp	tool/loadfts.c	/^static void showHelp(const char *zArgv0){$/;"	f	file:
showHelp	tool/logest.c	/^static void showHelp(const char *zArgv0){$/;"	f	file:
showHelp	tool/sqldiff.c	/^static void showHelp(void){$/;"	f	file:
showLocksInRange	tool/showlocks.c	/^static int showLocksInRange(int fd, off_t lwr, off_t upr){$/;"	f	file:
showPrecedenceConflict	tool/lemon.c	/^static int showPrecedenceConflict = 0;$/;"	v	file:
showSchema	ext/fts3/tool/fts3view.c	/^static void showSchema(sqlite3 *db, const char *zTab){$/;"	f	file:
showSegdirMap	ext/fts3/tool/fts3view.c	/^static void showSegdirMap(sqlite3 *db, const char *zTab){$/;"	f	file:
showSegment	ext/fts3/tool/fts3view.c	/^static void showSegment(sqlite3 *db, const char *zTab){$/;"	f	file:
showSegmentStats	ext/fts3/tool/fts3view.c	/^static void showSegmentStats(sqlite3 *db, const char *zTab){$/;"	f	file:
showStat	ext/fts3/tool/fts3view.c	/^static void showStat(sqlite3 *db, const char *zTab){$/;"	f	file:
showVocabulary	ext/fts3/tool/fts3view.c	/^static void showVocabulary(sqlite3 *db, const char *zTab){$/;"	f	file:
show_memstats	test/tester.tcl	/^proc show_memstats {} {$/;"	p
sig	test/threadtest1.c	/^pthread_cond_t sig = PTHREAD_COND_INITIALIZER;$/;"	v
signed	parse.y	/^signed ::= minus_num.$/;"	l
signed	parse.y	/^signed ::= plus_num.$/;"	l
signed	src/parse.y	/^signed ::= minus_num.$/;"	l
signed	src/parse.y	/^signed ::= plus_num.$/;"	l
simpleClose	ext/fts1/fts1_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	ext/fts1/simple_tokenizer.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	ext/fts2/fts2_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	ext/fts3/fts3_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	sqlite3.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	tsrc/fts1_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	tsrc/fts2_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleClose	tsrc/fts3_tokenizer1.c	/^static int simpleClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
simpleCreate	ext/fts1/fts1_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	ext/fts1/simple_tokenizer.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	ext/fts2/fts2_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	ext/fts3/fts3_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	sqlite3.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	tsrc/fts1_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	tsrc/fts2_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleCreate	tsrc/fts3_tokenizer1.c	/^static int simpleCreate($/;"	f	file:
simpleDelim	ext/fts2/fts2_tokenizer1.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDelim	ext/fts3/fts3_tokenizer1.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDelim	sqlite3.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDelim	tsrc/fts2_tokenizer1.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDelim	tsrc/fts3_tokenizer1.c	/^static int simpleDelim(simple_tokenizer *t, unsigned char c){$/;"	f	file:
simpleDestroy	ext/fts1/fts1_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	ext/fts1/simple_tokenizer.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	ext/fts2/fts2_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	ext/fts3/fts3_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	sqlite3.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	tsrc/fts1_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	tsrc/fts2_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleDestroy	tsrc/fts3_tokenizer1.c	/^static int simpleDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
simpleNext	ext/fts1/fts1_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleNext	ext/fts1/simple_tokenizer.c	/^static int simpleNext($/;"	f	file:
simpleNext	ext/fts2/fts2_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleNext	ext/fts3/fts3_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleNext	sqlite3.c	/^static int simpleNext($/;"	f	file:
simpleNext	tsrc/fts1_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleNext	tsrc/fts2_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleNext	tsrc/fts3_tokenizer1.c	/^static int simpleNext($/;"	f	file:
simpleOpen	ext/fts1/fts1_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	ext/fts1/simple_tokenizer.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	ext/fts2/fts2_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	ext/fts3/fts3_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	sqlite3.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	tsrc/fts1_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	tsrc/fts2_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleOpen	tsrc/fts3_tokenizer1.c	/^static int simpleOpen($/;"	f	file:
simpleTokenizerModule	ext/fts1/fts1_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	ext/fts1/fts1_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule;$/;"	v	file:
simpleTokenizerModule	ext/fts1/simple_tokenizer.c	/^static sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	ext/fts1/simple_tokenizer.c	/^static sqlite3_tokenizer_module simpleTokenizerModule;\/* forward declaration *\/$/;"	v	file:
simpleTokenizerModule	ext/fts2/fts2_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	ext/fts2/fts2_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule;$/;"	v	file:
simpleTokenizerModule	ext/fts3/fts3_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	sqlite3.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	tsrc/fts1_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	tsrc/fts1_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule;$/;"	v	file:
simpleTokenizerModule	tsrc/fts2_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simpleTokenizerModule	tsrc/fts2_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule;$/;"	v	file:
simpleTokenizerModule	tsrc/fts3_tokenizer1.c	/^static const sqlite3_tokenizer_module simpleTokenizerModule = {$/;"	v	file:
simple_tokenizer	ext/fts1/fts1_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	ext/fts1/fts1_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	ext/fts1/simple_tokenizer.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	ext/fts1/simple_tokenizer.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	ext/fts2/fts2_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	ext/fts2/fts2_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	ext/fts3/fts3_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	ext/fts3/fts3_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	sqlite3.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	sqlite3.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	tsrc/fts1_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	tsrc/fts1_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	tsrc/fts2_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	tsrc/fts2_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer	tsrc/fts3_tokenizer1.c	/^typedef struct simple_tokenizer {$/;"	s	file:
simple_tokenizer	tsrc/fts3_tokenizer1.c	/^} simple_tokenizer;$/;"	t	typeref:struct:simple_tokenizer	file:
simple_tokenizer_cursor	ext/fts1/fts1_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	ext/fts1/fts1_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	ext/fts1/simple_tokenizer.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	ext/fts1/simple_tokenizer.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	ext/fts2/fts2_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	ext/fts2/fts2_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	ext/fts3/fts3_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	ext/fts3/fts3_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	sqlite3.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	sqlite3.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	tsrc/fts1_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	tsrc/fts1_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	tsrc/fts2_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	tsrc/fts2_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simple_tokenizer_cursor	tsrc/fts3_tokenizer1.c	/^typedef struct simple_tokenizer_cursor {$/;"	s	file:
simple_tokenizer_cursor	tsrc/fts3_tokenizer1.c	/^} simple_tokenizer_cursor;$/;"	t	typeref:struct:simple_tokenizer_cursor	file:
simulateVtabError	src/test8.c	/^static int simulateVtabError(echo_vtab *p, const char *zMethod){$/;"	f	file:
size	tool/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x1	file:
size	tool/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x2	file:
size	tool/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x3	file:
size	tool/lemon.c	/^  int size;               \/* The number of available slots. *\/$/;"	m	struct:s_x4	file:
size	tool/lemon.c	/^static int size = 0;$/;"	v	file:
size4x	sqlite3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon90::__anon91	file:
size4x	src/mem3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon64::__anon65	file:
size4x	tsrc/mem3.c	/^      u32 size4x;     \/* 4x the size of current chunk in Mem3Block elements *\/$/;"	m	struct:Mem3Block::__anon34::__anon35	file:
sjfd	sqlite3.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
sjfd	src/pager.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
sjfd	tsrc/pager.c	/^  sqlite3_file *sjfd;         \/* File descriptor for sub-journal *\/$/;"	m	struct:Pager	file:
skipDocument	ext/fts1/fts1.c	/^static void skipDocument(DocListReader *pReader){$/;"	f	file:
skipDocument	ext/fts1/fulltext.c	/^static void skipDocument(DocListReader *pReader){$/;"	f	file:
skipDocument	tsrc/fts1.c	/^static void skipDocument(DocListReader *pReader){$/;"	f	file:
skipFlag	sqlite3.c	/^  u8 skipFlag;            \/* Skip accumulator loading if true *\/$/;"	m	struct:sqlite3_context	file:
skipFlag	src/vdbeInt.h	/^  u8 skipFlag;            \/* Skip accumulator loading if true *\/$/;"	m	struct:sqlite3_context
skipFlag	tsrc/vdbeInt.h	/^  u8 skipFlag;            \/* Skip accumulator loading if true *\/$/;"	m	struct:sqlite3_context
skipNext	sqlite3.c	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive.$/;"	m	struct:BtCursor	file:
skipNext	src/btreeInt.h	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive.$/;"	m	struct:BtCursor
skipNext	tsrc/btreeInt.h	/^  int skipNext;    \/* Prev() is noop if negative. Next() is noop if positive.$/;"	m	struct:BtCursor
skipPositionList	ext/fts1/fts1.c	/^static void skipPositionList(DocListReader *pReader){$/;"	f	file:
skipPositionList	ext/fts1/fulltext.c	/^static void skipPositionList(DocListReader *pReader){$/;"	f	file:
skipPositionList	tsrc/fts1.c	/^static void skipPositionList(DocListReader *pReader){$/;"	f	file:
skipToDocid	ext/fts1/fts1.c	/^static int skipToDocid(DocListReader *pReader, sqlite_int64 iDocid){$/;"	f	file:
skipToDocid	tsrc/fts1.c	/^static int skipToDocid(DocListReader *pReader, sqlite_int64 iDocid){$/;"	f	file:
skip_addToPath	tool/GetTclKit.bat	/^:skip_addToPath$/;"	l
skip_sdkUnZip	tool/GetTclKit.bat	/^:skip_sdkUnZip$/;"	l
skip_sdkVariables	tool/GetTclKit.bat	/^:skip_sdkVariables$/;"	l
slave_fileevent	test/releasetest.tcl	/^proc slave_fileevent {fd T tm1} {$/;"	p
slave_test_file	test/tester.tcl	/^proc slave_test_file {zFile} {$/;"	p
slave_test_script	test/tester.tcl	/^proc slave_test_script {script} {$/;"	p
sleep	sqlite3.c	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines	file:
sleep	sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
sleep	src/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
sleep	tsrc/sqlite3ext.h	/^  int (*sleep)(int);$/;"	m	struct:sqlite3_api_routines
sleepObj	sqlite3.c	/^static HANDLE sleepObj = NULL;$/;"	v	file:
sleepObj	src/os_win.c	/^static HANDLE sleepObj = NULL;$/;"	v	file:
sleepObj	tsrc/os_win.c	/^static HANDLE sleepObj = NULL;$/;"	v	file:
snStatus	ext/fts1/fts1.c	/^    char snStatus;       \/* Status flag for use while constructing snippets *\/$/;"	m	struct:Snippet::snippetMatch	file:
snStatus	ext/fts2/fts2.c	/^    char snStatus;       \/* Status flag for use while constructing snippets *\/$/;"	m	struct:Snippet::snippetMatch	file:
snStatus	tsrc/fts1.c	/^    char snStatus;       \/* Status flag for use while constructing snippets *\/$/;"	m	struct:Snippet::snippetMatch	file:
snStatus	tsrc/fts2.c	/^    char snStatus;       \/* Status flag for use while constructing snippets *\/$/;"	m	struct:Snippet::snippetMatch	file:
snippet	ext/fts1/fts1.c	/^  Snippet snippet;                 \/* Cached snippet for the current row *\/$/;"	m	struct:fulltext_cursor	file:
snippet	ext/fts2/fts2.c	/^  Snippet snippet;                 \/* Cached snippet for the current row *\/$/;"	m	struct:fulltext_cursor	file:
snippet	tsrc/fts1.c	/^  Snippet snippet;                 \/* Cached snippet for the current row *\/$/;"	m	struct:fulltext_cursor	file:
snippet	tsrc/fts2.c	/^  Snippet snippet;                 \/* Cached snippet for the current row *\/$/;"	m	struct:fulltext_cursor	file:
snippetAllOffsets	ext/fts1/fts1.c	/^static void snippetAllOffsets(fulltext_cursor *p){$/;"	f	file:
snippetAllOffsets	ext/fts2/fts2.c	/^static void snippetAllOffsets(fulltext_cursor *p){$/;"	f	file:
snippetAllOffsets	tsrc/fts1.c	/^static void snippetAllOffsets(fulltext_cursor *p){$/;"	f	file:
snippetAllOffsets	tsrc/fts2.c	/^static void snippetAllOffsets(fulltext_cursor *p){$/;"	f	file:
snippetAppendMatch	ext/fts1/fts1.c	/^static void snippetAppendMatch($/;"	f	file:
snippetAppendMatch	ext/fts2/fts2.c	/^static void snippetAppendMatch($/;"	f	file:
snippetAppendMatch	tsrc/fts1.c	/^static void snippetAppendMatch($/;"	f	file:
snippetAppendMatch	tsrc/fts2.c	/^static void snippetAppendMatch($/;"	f	file:
snippetClear	ext/fts1/fts1.c	/^static void snippetClear(Snippet *p){$/;"	f	file:
snippetClear	ext/fts2/fts2.c	/^static void snippetClear(Snippet *p){$/;"	f	file:
snippetClear	tsrc/fts1.c	/^static void snippetClear(Snippet *p){$/;"	f	file:
snippetClear	tsrc/fts2.c	/^static void snippetClear(Snippet *p){$/;"	f	file:
snippetFunc	ext/fts1/fts1.c	/^static void snippetFunc($/;"	f	file:
snippetFunc	ext/fts2/fts2.c	/^static void snippetFunc($/;"	f	file:
snippetFunc	tsrc/fts1.c	/^static void snippetFunc($/;"	f	file:
snippetFunc	tsrc/fts2.c	/^static void snippetFunc($/;"	f	file:
snippetMatch	ext/fts1/fts1.c	/^  struct snippetMatch { \/* One entry for each matching term *\/$/;"	s	struct:Snippet	file:
snippetMatch	ext/fts2/fts2.c	/^  struct snippetMatch { \/* One entry for each matching term *\/$/;"	s	struct:Snippet	file:
snippetMatch	tsrc/fts1.c	/^  struct snippetMatch { \/* One entry for each matching term *\/$/;"	s	struct:Snippet	file:
snippetMatch	tsrc/fts2.c	/^  struct snippetMatch { \/* One entry for each matching term *\/$/;"	s	struct:Snippet	file:
snippetOffsetText	ext/fts1/fts1.c	/^static void snippetOffsetText(Snippet *p){$/;"	f	file:
snippetOffsetText	ext/fts2/fts2.c	/^static void snippetOffsetText(Snippet *p){$/;"	f	file:
snippetOffsetText	tsrc/fts1.c	/^static void snippetOffsetText(Snippet *p){$/;"	f	file:
snippetOffsetText	tsrc/fts2.c	/^static void snippetOffsetText(Snippet *p){$/;"	f	file:
snippetOffsetsFunc	ext/fts1/fts1.c	/^static void snippetOffsetsFunc($/;"	f	file:
snippetOffsetsFunc	ext/fts2/fts2.c	/^static void snippetOffsetsFunc($/;"	f	file:
snippetOffsetsFunc	tsrc/fts1.c	/^static void snippetOffsetsFunc($/;"	f	file:
snippetOffsetsFunc	tsrc/fts2.c	/^static void snippetOffsetsFunc($/;"	f	file:
snippetOffsetsOfColumn	ext/fts1/fts1.c	/^static void snippetOffsetsOfColumn($/;"	f	file:
snippetOffsetsOfColumn	ext/fts2/fts2.c	/^static void snippetOffsetsOfColumn($/;"	f	file:
snippetOffsetsOfColumn	tsrc/fts1.c	/^static void snippetOffsetsOfColumn($/;"	f	file:
snippetOffsetsOfColumn	tsrc/fts2.c	/^static void snippetOffsetsOfColumn($/;"	f	file:
snippetText	ext/fts1/fts1.c	/^static void snippetText($/;"	f	file:
snippetText	ext/fts2/fts2.c	/^static void snippetText($/;"	f	file:
snippetText	tsrc/fts1.c	/^static void snippetText($/;"	f	file:
snippetText	tsrc/fts2.c	/^static void snippetText($/;"	f	file:
snprintf	autoconf/tea/win/nmakehlp.c	38;"	d	file:
snprintf	sqlite3.c	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines	file:
snprintf	sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
snprintf	src/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
snprintf	tsrc/sqlite3ext.h	/^  char * (*snprintf)(int,char*,const char*,...);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit	sqlite3.c	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit	sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit	src/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit	tsrc/sqlite3ext.h	/^  void (*soft_heap_limit)(int);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	sqlite3.c	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
soft_heap_limit64	sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	src/sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
soft_heap_limit64	tsrc/sqlite3ext.h	/^  sqlite3_int64 (*soft_heap_limit64)(sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
sort	test/boundary1.tcl	/^proc sort {inlist} {$/;"	p
sort	test/boundary2.tcl	/^proc sort {inlist} {$/;"	p
sort	test/boundary3.tcl	/^proc sort {inlist} {$/;"	p
sort	test/boundary4.tcl	/^proc sort {inlist} {$/;"	p
sortFlags	sqlite3.c	/^  u8 sortFlags;         \/* Zero or more SORTFLAG_* bits *\/$/;"	m	struct:SortCtx	file:
sortFlags	src/select.c	/^  u8 sortFlags;         \/* Zero or more SORTFLAG_* bits *\/$/;"	m	struct:SortCtx	file:
sortFlags	tsrc/select.c	/^  u8 sortFlags;         \/* Zero or more SORTFLAG_* bits *\/$/;"	m	struct:SortCtx	file:
sortOrder	sqlite3.c	/^    u8 sortOrder;           \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item	file:
sortOrder	src/sqliteInt.h	/^    u8 sortOrder;           \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item
sortOrder	tsrc/sqliteInt.h	/^    u8 sortOrder;           \/* 1 for DESC or 0 for ASC *\/$/;"	m	struct:ExprList::ExprList_item
sort_cb	ext/fts5/mkportersteps.tcl	/^proc sort_cb {lhs rhs} {$/;"	p
sort_poslist	ext/fts5/test/fts5_common.tcl	/^proc sort_poslist {L} {$/;"	p
sorted	sqlite3.c	/^  u8 sorted;                \/* True if really sorted (not just grouped) *\/$/;"	m	struct:WhereInfo	file:
sorted	src/whereInt.h	/^  u8 sorted;                \/* True if really sorted (not just grouped) *\/$/;"	m	struct:WhereInfo
sorted	tool/lemon.c	/^  struct state **sorted;   \/* Table of states sorted by state number *\/$/;"	m	struct:lemon	typeref:struct:lemon::state	file:
sorted	tsrc/whereInt.h	/^  u8 sorted;                \/* True if really sorted (not just grouped) *\/$/;"	m	struct:WhereInfo
sorter_test_fakeheap	src/test1.c	/^static int SQLITE_TCLAPI sorter_test_fakeheap($/;"	f	file:
sorter_test_sort4_helper	src/test1.c	/^static int SQLITE_TCLAPI sorter_test_sort4_helper($/;"	f	file:
sortingIdx	sqlite3.c	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo	file:
sortingIdx	src/sqliteInt.h	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo
sortingIdx	tsrc/sqliteInt.h	/^  int sortingIdx;         \/* Cursor number of the sorting index *\/$/;"	m	struct:AggInfo
sortingIdxPTab	sqlite3.c	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo	file:
sortingIdxPTab	src/sqliteInt.h	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo
sortingIdxPTab	tsrc/sqliteInt.h	/^  int sortingIdxPTab;     \/* Cursor number of pseudo-table *\/$/;"	m	struct:AggInfo
soundexFunc	sqlite3.c	/^static void soundexFunc($/;"	f	file:
soundexFunc	src/func.c	/^static void soundexFunc($/;"	f	file:
soundexFunc	tsrc/func.c	/^static void soundexFunc($/;"	f	file:
sourceid	sqlite3.c	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines	file:
sourceid	sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
sourceid	src/sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
sourceid	tsrc/sqlite3ext.h	/^  const char *(*sourceid)(void);$/;"	m	struct:sqlite3_api_routines
sourceidFunc	sqlite3.c	/^static void sourceidFunc($/;"	f	file:
sourceidFunc	src/func.c	/^static void sourceidFunc($/;"	f	file:
sourceidFunc	tsrc/func.c	/^static void sourceidFunc($/;"	f	file:
sp	tool/lemon.c	/^  struct symbol *sp;       \/* The look-ahead symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
spOpt	tool/lemon.c	/^  struct symbol *spOpt;    \/* SHIFTREDUCE optimization to this symbol *\/$/;"	m	struct:action	typeref:struct:action::symbol	file:
spanBinaryExpr	parse.c	/^  static void spanBinaryExpr($/;"	f	file:
spanBinaryExpr	sqlite3.c	/^  static void spanBinaryExpr($/;"	f	file:
spanBinaryExpr	tsrc/parse.c	/^  static void spanBinaryExpr($/;"	f	file:
spanExpr	parse.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token t){$/;"	f	file:
spanExpr	sqlite3.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token t){$/;"	f	file:
spanExpr	tsrc/parse.c	/^  static void spanExpr(ExprSpan *pOut, Parse *pParse, int op, Token t){$/;"	f	file:
spanSet	parse.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanSet	sqlite3.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanSet	tsrc/parse.c	/^  static void spanSet(ExprSpan *pOut, Token *pStart, Token *pEnd){$/;"	f	file:
spanUnaryPostfix	parse.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPostfix	sqlite3.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPostfix	tsrc/parse.c	/^  static void spanUnaryPostfix($/;"	f	file:
spanUnaryPrefix	parse.c	/^  static void spanUnaryPrefix($/;"	f	file:
spanUnaryPrefix	sqlite3.c	/^  static void spanUnaryPrefix($/;"	f	file:
spanUnaryPrefix	tsrc/parse.c	/^  static void spanUnaryPrefix($/;"	f	file:
speed_trial	test/tester.tcl	/^proc speed_trial {name numstmt units sql} {$/;"	p
speed_trial_init	test/tester.tcl	/^proc speed_trial_init {name} {$/;"	p
speed_trial_summary	test/tester.tcl	/^proc speed_trial_summary {name} {$/;"	p
speed_trial_tcl	test/tester.tcl	/^proc speed_trial_tcl {name numstmt units script} {$/;"	p
speedtest1_begin_test	test/speedtest1.c	/^void speedtest1_begin_test(int iTestNum, const char *zTestName, ...){$/;"	f
speedtest1_end_test	test/speedtest1.c	/^void speedtest1_end_test(void){$/;"	f
speedtest1_exec	test/speedtest1.c	/^void speedtest1_exec(const char *zFormat, ...){$/;"	f
speedtest1_final	test/speedtest1.c	/^void speedtest1_final(void){$/;"	f
speedtest1_numbername	test/speedtest1.c	/^int speedtest1_numbername(unsigned int n, char *zOut, int nOut){$/;"	f
speedtest1_prepare	test/speedtest1.c	/^void speedtest1_prepare(const char *zFormat, ...){$/;"	f
speedtest1_random	test/speedtest1.c	/^unsigned int speedtest1_random(void){$/;"	f
speedtest1_run	test/speedtest1.c	/^void speedtest1_run(void){$/;"	f
speedtest1_shrink_memory	test/speedtest1.c	/^void speedtest1_shrink_memory(void){$/;"	f
speedtest1_timestamp	test/speedtest1.c	/^sqlite3_int64 speedtest1_timestamp(void){$/;"	f
spellfix1BestIndex	ext/misc/spellfix.c	/^static int spellfix1BestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
spellfix1Close	ext/misc/spellfix.c	/^static int spellfix1Close(sqlite3_vtab_cursor *cur){$/;"	f	file:
spellfix1Column	ext/misc/spellfix.c	/^static int spellfix1Column($/;"	f	file:
spellfix1Connect	ext/misc/spellfix.c	/^static int spellfix1Connect($/;"	f	file:
spellfix1Create	ext/misc/spellfix.c	/^static int spellfix1Create($/;"	f	file:
spellfix1DbExec	ext/misc/spellfix.c	/^static void spellfix1DbExec($/;"	f	file:
spellfix1Dequote	ext/misc/spellfix.c	/^static char *spellfix1Dequote(const char *zIn){$/;"	f	file:
spellfix1Destroy	ext/misc/spellfix.c	/^static int spellfix1Destroy(sqlite3_vtab *pVTab){$/;"	f	file:
spellfix1Disconnect	ext/misc/spellfix.c	/^static int spellfix1Disconnect(sqlite3_vtab *pVTab){$/;"	f	file:
spellfix1Eof	ext/misc/spellfix.c	/^static int spellfix1Eof(sqlite3_vtab_cursor *cur){$/;"	f	file:
spellfix1Filter	ext/misc/spellfix.c	/^static int spellfix1Filter($/;"	f	file:
spellfix1FilterForFullScan	ext/misc/spellfix.c	/^static int spellfix1FilterForFullScan($/;"	f	file:
spellfix1FilterForMatch	ext/misc/spellfix.c	/^static int spellfix1FilterForMatch($/;"	f	file:
spellfix1GetConflict	ext/misc/spellfix.c	/^static const char *spellfix1GetConflict(sqlite3 *db){$/;"	f	file:
spellfix1Init	ext/misc/spellfix.c	/^static int spellfix1Init($/;"	f	file:
spellfix1Module	ext/misc/spellfix.c	/^static sqlite3_module spellfix1Module = {$/;"	v	file:
spellfix1Next	ext/misc/spellfix.c	/^static int spellfix1Next(sqlite3_vtab_cursor *cur){$/;"	f	file:
spellfix1Open	ext/misc/spellfix.c	/^static int spellfix1Open(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
spellfix1Register	ext/misc/spellfix.c	/^static int spellfix1Register(sqlite3 *db){$/;"	f	file:
spellfix1Rename	ext/misc/spellfix.c	/^static int spellfix1Rename(sqlite3_vtab *pVTab, const char *zNew){$/;"	f	file:
spellfix1ResetCursor	ext/misc/spellfix.c	/^static void spellfix1ResetCursor(spellfix1_cursor *pCur){$/;"	f	file:
spellfix1ResizeCursor	ext/misc/spellfix.c	/^static void spellfix1ResizeCursor(spellfix1_cursor *pCur, int N){$/;"	f	file:
spellfix1RowCompare	ext/misc/spellfix.c	/^static int SQLITE_CDECL spellfix1RowCompare(const void *A, const void *B){$/;"	f	file:
spellfix1Rowid	ext/misc/spellfix.c	/^static int spellfix1Rowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
spellfix1RunQuery	ext/misc/spellfix.c	/^static void spellfix1RunQuery(MatchQuery *p, const char *zQuery, int nQuery){$/;"	f	file:
spellfix1Score	ext/misc/spellfix.c	/^static int spellfix1Score(int iDistance, int iRank){$/;"	f	file:
spellfix1Uninit	ext/misc/spellfix.c	/^static int spellfix1Uninit(int isDestroy, sqlite3_vtab *pVTab){$/;"	f	file:
spellfix1Update	ext/misc/spellfix.c	/^static int spellfix1Update($/;"	f	file:
spellfix1_cursor	ext/misc/spellfix.c	/^struct spellfix1_cursor {$/;"	s	file:
spellfix1_cursor	ext/misc/spellfix.c	/^typedef struct spellfix1_cursor spellfix1_cursor;$/;"	t	typeref:struct:spellfix1_cursor	file:
spellfix1_row	ext/misc/spellfix.c	/^  struct spellfix1_row {       \/* For each row of content *\/$/;"	s	struct:spellfix1_cursor	file:
spellfix1_vtab	ext/misc/spellfix.c	/^struct spellfix1_vtab {$/;"	s	file:
spellfix1_vtab	ext/misc/spellfix.c	/^typedef struct spellfix1_vtab spellfix1_vtab;$/;"	t	typeref:struct:spellfix1_vtab	file:
splitNodeStartree	ext/rtree/rtree.c	/^static int splitNodeStartree($/;"	f	file:
splitNodeStartree	sqlite3.c	/^static int splitNodeStartree($/;"	f	file:
splitNodeStartree	tsrc/rtree.c	/^static int splitNodeStartree($/;"	f	file:
sql	ext/fts3/fts3speed.tcl	/^proc sql {sql} {$/;"	p
sql	sqlite3.c	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
sql	sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sql	src/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sql	tsrc/sqlite3ext.h	/^  const char *(*sql)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
sql1	test/bc_common.tcl	/^  proc sql1 sql { code1 [list db eval $sql] }$/;"	p
sql1	test/lock_common.tcl	/^    proc sql1 {sql} { db eval $sql }$/;"	p
sql2	test/bc_common.tcl	/^  proc sql2 sql { code2 [list db eval $sql] }$/;"	p
sql2	test/lock_common.tcl	/^    proc sql2 {sql} { code2 [list db2 eval $sql] }$/;"	p
sql3	test/lock_common.tcl	/^    proc sql3 {sql} { code3 [list db3 eval $sql] }$/;"	p
sql36231	test/tester.tcl	/^proc sql36231 {sql} {$/;"	p
sqlErrorCallback	mptest/mptest.c	/^static void sqlErrorCallback(void *pArg, int iErrCode, const char *zMsg){$/;"	f	file:
sqlEvalFunc	ext/misc/eval.c	/^static void sqlEvalFunc($/;"	f	file:
sqlEvalFunc	tool/fuzzershell.c	/^static void sqlEvalFunc($/;"	f	file:
sqlTraceCallback	mptest/mptest.c	/^static void sqlTraceCallback(void *NotUsed1, const char *zSql){$/;"	f	file:
sql_exec	ext/fts1/fts1.c	/^static int sql_exec(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_exec	ext/fts1/fulltext.c	/^static int sql_exec(sqlite3 *db, const char *zName, const char *zFormat){$/;"	f	file:
sql_exec	ext/fts2/fts2.c	/^static int sql_exec(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_exec	tsrc/fts1.c	/^static int sql_exec(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_exec	tsrc/fts2.c	/^static int sql_exec(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_get_leaf_statement	ext/fts2/fts2.c	/^static int sql_get_leaf_statement(fulltext_vtab *v, int idx,$/;"	f	file:
sql_get_leaf_statement	tsrc/fts2.c	/^static int sql_get_leaf_statement(fulltext_vtab *v, int idx,$/;"	f	file:
sql_get_statement	ext/fts1/fts1.c	/^static int sql_get_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_get_statement	ext/fts1/fulltext.c	/^static int sql_get_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_get_statement	ext/fts2/fts2.c	/^static int sql_get_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_get_statement	tsrc/fts1.c	/^static int sql_get_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_get_statement	tsrc/fts2.c	/^static int sql_get_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_prepare	ext/fts1/fts1.c	/^static int sql_prepare(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_prepare	ext/fts1/fulltext.c	/^static int sql_prepare(sqlite3 *db, const char *zName, sqlite3_stmt **ppStmt,$/;"	f	file:
sql_prepare	ext/fts2/fts2.c	/^static int sql_prepare(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_prepare	tsrc/fts1.c	/^static int sql_prepare(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_prepare	tsrc/fts2.c	/^static int sql_prepare(sqlite3 *db, const char *zDb, const char *zName,$/;"	f	file:
sql_script	test/threadtest3.c	45;"	d	file:
sql_script_printf	test/threadtest3.c	50;"	d	file:
sql_script_printf_x	test/threadtest3.c	/^static void sql_script_printf_x($/;"	f	file:
sql_script_x	test/threadtest3.c	/^static void sql_script_x($/;"	f	file:
sql_single_step	ext/fts2/fts2.c	/^static int sql_single_step(sqlite3_stmt *s){$/;"	f	file:
sql_single_step	tsrc/fts2.c	/^static int sql_single_step(sqlite3_stmt *s){$/;"	f	file:
sql_single_step_statement	ext/fts1/fts1.c	/^static int sql_single_step_statement(fulltext_vtab *v,$/;"	f	file:
sql_single_step_statement	ext/fts1/fulltext.c	/^static int sql_single_step_statement(fulltext_vtab *v,$/;"	f	file:
sql_single_step_statement	tsrc/fts1.c	/^static int sql_single_step_statement(fulltext_vtab *v,$/;"	f	file:
sql_step_statement	ext/fts1/fts1.c	/^static int sql_step_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_step_statement	ext/fts1/fulltext.c	/^static int sql_step_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_step_statement	tsrc/fts1.c	/^static int sql_step_statement(fulltext_vtab *v, fulltext_statement iStmt,$/;"	f	file:
sql_trace_callback	shell.c	/^static int sql_trace_callback($/;"	f	file:
sql_trace_callback	src/shell.c	/^static int sql_trace_callback($/;"	f	file:
sql_trace_callback	tsrc/shell.c	/^static int sql_trace_callback($/;"	f	file:
sql_uses_stmt	test/tester.tcl	/^proc sql_uses_stmt {db sql} {$/;"	p
sqlexec	tool/fuzzershell.c	/^static void sqlexec(sqlite3 *db, const char *zFormat, ...){$/;"	f	file:
sqlite3	sqlite3.c	/^struct sqlite3 {$/;"	s	file:
sqlite3	sqlite3.c	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3	file:
sqlite3	sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3	src/sqliteInt.h	/^struct sqlite3 {$/;"	s
sqlite3	test/lock_common.tcl	/^      proc sqlite3 {args} {[info body sqlite3]}$/;"	p
sqlite3	test/tester.tcl	/^  proc sqlite3 {args} {$/;"	p
sqlite3	tsrc/sqlite3.h	/^typedef struct sqlite3 sqlite3;$/;"	t	typeref:struct:sqlite3
sqlite3	tsrc/sqliteInt.h	/^struct sqlite3 {$/;"	s
sqlite3AbsInt32	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AbsInt32(int x){$/;"	f
sqlite3AbsInt32	src/util.c	/^int sqlite3AbsInt32(int x){$/;"	f
sqlite3AbsInt32	tsrc/util.c	/^int sqlite3AbsInt32(int x){$/;"	f
sqlite3AddCheckConstraint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCheckConstraint	src/build.c	/^void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCheckConstraint	tsrc/build.c	/^void sqlite3AddCheckConstraint($/;"	f
sqlite3AddCollateType	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddCollateType	src/build.c	/^void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddCollateType	tsrc/build.c	/^void sqlite3AddCollateType(Parse *pParse, Token *pToken){$/;"	f
sqlite3AddColumn	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddColumn(Parse *pParse, Token *pName, Token *pType){$/;"	f
sqlite3AddColumn	src/build.c	/^void sqlite3AddColumn(Parse *pParse, Token *pName, Token *pType){$/;"	f
sqlite3AddColumn	tsrc/build.c	/^void sqlite3AddColumn(Parse *pParse, Token *pName, Token *pType){$/;"	f
sqlite3AddDefaultValue	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddDefaultValue	src/build.c	/^void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddDefaultValue	tsrc/build.c	/^void sqlite3AddDefaultValue(Parse *pParse, ExprSpan *pSpan){$/;"	f
sqlite3AddInt64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddInt64	src/util.c	/^int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddInt64	tsrc/util.c	/^int sqlite3AddInt64(i64 *pA, i64 iB){$/;"	f
sqlite3AddNotNull	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddNotNull	src/build.c	/^void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddNotNull	tsrc/build.c	/^void sqlite3AddNotNull(Parse *pParse, int onError){$/;"	f
sqlite3AddPrimaryKey	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AddPrimaryKey($/;"	f
sqlite3AddPrimaryKey	src/build.c	/^void sqlite3AddPrimaryKey($/;"	f
sqlite3AddPrimaryKey	tsrc/build.c	/^void sqlite3AddPrimaryKey($/;"	f
sqlite3AffinityType	sqlite3.c	/^SQLITE_PRIVATE char sqlite3AffinityType(const char *zIn, u8 *pszEst){$/;"	f
sqlite3AffinityType	src/build.c	/^char sqlite3AffinityType(const char *zIn, u8 *pszEst){$/;"	f
sqlite3AffinityType	tsrc/build.c	/^char sqlite3AffinityType(const char *zIn, u8 *pszEst){$/;"	f
sqlite3AllocateIndexObject	sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3AllocateIndexObject($/;"	f
sqlite3AllocateIndexObject	src/build.c	/^Index *sqlite3AllocateIndexObject($/;"	f
sqlite3AllocateIndexObject	tsrc/build.c	/^Index *sqlite3AllocateIndexObject($/;"	f
sqlite3AlterBeginAddColumn	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterBeginAddColumn	src/alter.c	/^void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterBeginAddColumn	tsrc/alter.c	/^void sqlite3AlterBeginAddColumn(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3AlterFinishAddColumn	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFinishAddColumn	src/alter.c	/^void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFinishAddColumn	tsrc/alter.c	/^void sqlite3AlterFinishAddColumn(Parse *pParse, Token *pColDef){$/;"	f
sqlite3AlterFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterFunctions	src/alter.c	/^void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterFunctions	tsrc/alter.c	/^void sqlite3AlterFunctions(void){$/;"	f
sqlite3AlterRenameTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AlterRenameTable($/;"	f
sqlite3AlterRenameTable	src/alter.c	/^void sqlite3AlterRenameTable($/;"	f
sqlite3AlterRenameTable	tsrc/alter.c	/^void sqlite3AlterRenameTable($/;"	f
sqlite3AnalysisLoad	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3AnalysisLoad	src/analyze.c	/^int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3AnalysisLoad	tsrc/analyze.c	/^int sqlite3AnalysisLoad(sqlite3 *db, int iDb){$/;"	f
sqlite3Analyze	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3Analyze	src/analyze.c	/^void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3Analyze	tsrc/analyze.c	/^void sqlite3Analyze(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3AnalyzeFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AnalyzeFunctions(void){$/;"	f
sqlite3AnalyzeFunctions	src/vdbemem.c	/^void sqlite3AnalyzeFunctions(void){$/;"	f
sqlite3AnalyzeFunctions	tsrc/vdbemem.c	/^void sqlite3AnalyzeFunctions(void){$/;"	f
sqlite3ApiExit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3ApiExit	src/malloc.c	/^int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3ApiExit	tsrc/malloc.c	/^int sqlite3ApiExit(sqlite3* db, int rc){$/;"	f
sqlite3Apis	sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	sqlite3.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3Apis	src/loadext.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	src/loadext.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3Apis	tsrc/loadext.c	/^static const sqlite3_api_routines sqlite3Apis = { 0 };$/;"	v	file:
sqlite3Apis	tsrc/loadext.c	/^static const sqlite3_api_routines sqlite3Apis = {$/;"	v	file:
sqlite3AppendChar	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AppendChar(StrAccum *p, int N, char c){$/;"	f
sqlite3AppendChar	src/printf.c	/^void sqlite3AppendChar(StrAccum *p, int N, char c){$/;"	f
sqlite3AppendChar	tsrc/printf.c	/^void sqlite3AppendChar(StrAccum *p, int N, char c){$/;"	f
sqlite3ArrayAllocate	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ArrayAllocate($/;"	f
sqlite3ArrayAllocate	src/build.c	/^void *sqlite3ArrayAllocate($/;"	f
sqlite3ArrayAllocate	tsrc/build.c	/^void *sqlite3ArrayAllocate($/;"	f
sqlite3AtoF	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3AtoF	src/util.c	/^int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3AtoF	tsrc/util.c	/^int sqlite3AtoF(const char *z, double *pResult, int length, u8 enc){$/;"	f
sqlite3Atoi	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi	src/util.c	/^int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi	tsrc/util.c	/^int sqlite3Atoi(const char *z){$/;"	f
sqlite3Atoi64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Atoi64	src/util.c	/^int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Atoi64	tsrc/util.c	/^int sqlite3Atoi64(const char *zNum, i64 *pNum, int length, u8 enc){$/;"	f
sqlite3Attach	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3Attach	src/attach.c	/^void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3Attach	tsrc/attach.c	/^void sqlite3Attach(Parse *pParse, Expr *p, Expr *pDbname, Expr *pKey){$/;"	f
sqlite3AuthCheck	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	sqlite3.c	16423;"	d	file:
sqlite3AuthCheck	src/auth.c	/^int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	src/sqliteInt.h	3824;"	d
sqlite3AuthCheck	tsrc/auth.c	/^int sqlite3AuthCheck($/;"	f
sqlite3AuthCheck	tsrc/sqliteInt.h	3824;"	d
sqlite3AuthContextPop	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	sqlite3.c	16425;"	d	file:
sqlite3AuthContextPop	src/auth.c	/^void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	src/sqliteInt.h	3826;"	d
sqlite3AuthContextPop	tsrc/auth.c	/^void sqlite3AuthContextPop(AuthContext *pContext){$/;"	f
sqlite3AuthContextPop	tsrc/sqliteInt.h	3826;"	d
sqlite3AuthContextPush	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	sqlite3.c	16424;"	d	file:
sqlite3AuthContextPush	src/auth.c	/^void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	src/sqliteInt.h	3825;"	d
sqlite3AuthContextPush	tsrc/auth.c	/^void sqlite3AuthContextPush($/;"	f
sqlite3AuthContextPush	tsrc/sqliteInt.h	3825;"	d
sqlite3AuthRead	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AuthRead($/;"	f
sqlite3AuthRead	sqlite3.c	16422;"	d	file:
sqlite3AuthRead	src/auth.c	/^void sqlite3AuthRead($/;"	f
sqlite3AuthRead	src/sqliteInt.h	3823;"	d
sqlite3AuthRead	tsrc/auth.c	/^void sqlite3AuthRead($/;"	f
sqlite3AuthRead	tsrc/sqliteInt.h	3823;"	d
sqlite3AuthReadCol	sqlite3.c	/^SQLITE_PRIVATE int sqlite3AuthReadCol($/;"	f
sqlite3AuthReadCol	src/auth.c	/^int sqlite3AuthReadCol($/;"	f
sqlite3AuthReadCol	tsrc/auth.c	/^int sqlite3AuthReadCol($/;"	f
sqlite3AutoExtList	sqlite3.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	sqlite3.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoExtList	src/loadext.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	src/loadext.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoExtList	tsrc/loadext.c	/^static SQLITE_WSD struct sqlite3AutoExtList {$/;"	s	file:
sqlite3AutoExtList	tsrc/loadext.c	/^typedef struct sqlite3AutoExtList sqlite3AutoExtList;$/;"	t	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoLoadExtensions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3AutoLoadExtensions	src/loadext.c	/^void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3AutoLoadExtensions	tsrc/loadext.c	/^void sqlite3AutoLoadExtensions(sqlite3 *db){$/;"	f
sqlite3Autoext	sqlite3.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3Autoext	src/loadext.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3Autoext	tsrc/loadext.c	/^} sqlite3Autoext = { 0, 0 };$/;"	v	typeref:struct:sqlite3AutoExtList	file:
sqlite3AutoincrementBegin	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	sqlite3.c	16223;"	d	file:
sqlite3AutoincrementBegin	src/insert.c	/^void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	src/sqliteInt.h	3624;"	d
sqlite3AutoincrementBegin	tsrc/insert.c	/^void sqlite3AutoincrementBegin(Parse *pParse){$/;"	f
sqlite3AutoincrementBegin	tsrc/sqliteInt.h	3624;"	d
sqlite3AutoincrementEnd	sqlite3.c	/^SQLITE_PRIVATE void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	sqlite3.c	16224;"	d	file:
sqlite3AutoincrementEnd	src/insert.c	/^void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	src/sqliteInt.h	3625;"	d
sqlite3AutoincrementEnd	tsrc/insert.c	/^void sqlite3AutoincrementEnd(Parse *pParse){$/;"	f
sqlite3AutoincrementEnd	tsrc/sqliteInt.h	3625;"	d
sqlite3BackupRestart	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupRestart	src/backup.c	/^void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupRestart	tsrc/backup.c	/^void sqlite3BackupRestart(sqlite3_backup *pBackup){$/;"	f
sqlite3BackupUpdate	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BackupUpdate	src/backup.c	/^void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BackupUpdate	tsrc/backup.c	/^void sqlite3BackupUpdate(sqlite3_backup *pBackup, Pgno iPage, const u8 *aData){$/;"	f
sqlite3BeginBenignMalloc	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	sqlite3.c	16740;"	d	file:
sqlite3BeginBenignMalloc	src/fault.c	/^void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	src/sqliteInt.h	4141;"	d
sqlite3BeginBenignMalloc	src/test_func.c	162;"	d	file:
sqlite3BeginBenignMalloc	tsrc/fault.c	/^void sqlite3BeginBenignMalloc(void){$/;"	f
sqlite3BeginBenignMalloc	tsrc/sqliteInt.h	4141;"	d
sqlite3BeginTransaction	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTransaction	src/build.c	/^void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTransaction	tsrc/build.c	/^void sqlite3BeginTransaction(Parse *pParse, int type){$/;"	f
sqlite3BeginTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginTrigger($/;"	f
sqlite3BeginTrigger	src/trigger.c	/^void sqlite3BeginTrigger($/;"	f
sqlite3BeginTrigger	tsrc/trigger.c	/^void sqlite3BeginTrigger($/;"	f
sqlite3BeginWriteOperation	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BeginWriteOperation	src/build.c	/^void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BeginWriteOperation	tsrc/build.c	/^void sqlite3BeginWriteOperation(Parse *pParse, int setStatement, int iDb){$/;"	f
sqlite3BenignMallocHooks	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BenignMallocHooks($/;"	f
sqlite3BenignMallocHooks	src/fault.c	/^void sqlite3BenignMallocHooks($/;"	f
sqlite3BenignMallocHooks	tsrc/fault.c	/^void sqlite3BenignMallocHooks($/;"	f
sqlite3BinaryCompareCollSeq	sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BinaryCompareCollSeq	src/expr.c	/^CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BinaryCompareCollSeq	tsrc/expr.c	/^CollSeq *sqlite3BinaryCompareCollSeq($/;"	f
sqlite3BitvecBuiltinTest	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecBuiltinTest	src/bitvec.c	/^int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecBuiltinTest	tsrc/bitvec.c	/^int sqlite3BitvecBuiltinTest(int sz, int *aOp){$/;"	f
sqlite3BitvecClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecClear	src/bitvec.c	/^void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecClear	tsrc/bitvec.c	/^void sqlite3BitvecClear(Bitvec *p, u32 i, void *pBuf){$/;"	f
sqlite3BitvecCreate	sqlite3.c	/^SQLITE_PRIVATE Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecCreate	src/bitvec.c	/^Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecCreate	tsrc/bitvec.c	/^Bitvec *sqlite3BitvecCreate(u32 iSize){$/;"	f
sqlite3BitvecDestroy	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecDestroy	src/bitvec.c	/^void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecDestroy	tsrc/bitvec.c	/^void sqlite3BitvecDestroy(Bitvec *p){$/;"	f
sqlite3BitvecSet	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSet	src/bitvec.c	/^int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSet	tsrc/bitvec.c	/^int sqlite3BitvecSet(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecSize	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecSize	src/bitvec.c	/^u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecSize	tsrc/bitvec.c	/^u32 sqlite3BitvecSize(Bitvec *p){$/;"	f
sqlite3BitvecTest	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTest	src/bitvec.c	/^int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTest	tsrc/bitvec.c	/^int sqlite3BitvecTest(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTestNotNull	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BitvecTestNotNull(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTestNotNull	src/bitvec.c	/^int sqlite3BitvecTestNotNull(Bitvec *p, u32 i){$/;"	f
sqlite3BitvecTestNotNull	tsrc/bitvec.c	/^int sqlite3BitvecTestNotNull(Bitvec *p, u32 i){$/;"	f
sqlite3BlobCompare	sqlite3.c	/^static SQLITE_NOINLINE int sqlite3BlobCompare(const Mem *pB1, const Mem *pB2){$/;"	f	file:
sqlite3BlobCompare	src/vdbeaux.c	/^static SQLITE_NOINLINE int sqlite3BlobCompare(const Mem *pB1, const Mem *pB2){$/;"	f	file:
sqlite3BlobCompare	tsrc/vdbeaux.c	/^static SQLITE_NOINLINE int sqlite3BlobCompare(const Mem *pB1, const Mem *pB2){$/;"	f	file:
sqlite3BlockedList	sqlite3.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BlockedList	src/notify.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BlockedList	tsrc/notify.c	/^static sqlite3 *SQLITE_WSD sqlite3BlockedList = 0;$/;"	v	file:
sqlite3BtreeBeginStmt	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginStmt	src/btree.c	/^int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginStmt	tsrc/btree.c	/^int sqlite3BtreeBeginStmt(Btree *p, int iStatement){$/;"	f
sqlite3BtreeBeginTrans	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeBeginTrans	src/btree.c	/^int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeBeginTrans	tsrc/btree.c	/^int sqlite3BtreeBeginTrans(Btree *p, int wrflag){$/;"	f
sqlite3BtreeCheckpoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeCheckpoint	src/btree.c	/^int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeCheckpoint	tsrc/btree.c	/^int sqlite3BtreeCheckpoint(Btree *p, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3BtreeClearCursor	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearCursor	src/btree.c	/^void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearCursor	tsrc/btree.c	/^void sqlite3BtreeClearCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClearTable	src/btree.c	/^int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClearTable	tsrc/btree.c	/^int sqlite3BtreeClearTable(Btree *p, int iTable, int *pnChange){$/;"	f
sqlite3BtreeClearTableOfCursor	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTableOfCursor	src/btree.c	/^int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClearTableOfCursor	tsrc/btree.c	/^int sqlite3BtreeClearTableOfCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeClose	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeClose	src/btree.c	/^int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeClose	tsrc/btree.c	/^int sqlite3BtreeClose(Btree *p){$/;"	f
sqlite3BtreeCloseCursor	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCloseCursor	src/btree.c	/^int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCloseCursor	tsrc/btree.c	/^int sqlite3BtreeCloseCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeCommit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommit	src/btree.c	/^int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommit	tsrc/btree.c	/^int sqlite3BtreeCommit(Btree *p){$/;"	f
sqlite3BtreeCommitPhaseOne	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseOne	src/btree.c	/^int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseOne	tsrc/btree.c	/^int sqlite3BtreeCommitPhaseOne(Btree *p, const char *zMaster){$/;"	f
sqlite3BtreeCommitPhaseTwo	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeCommitPhaseTwo	src/btree.c	/^int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeCommitPhaseTwo	tsrc/btree.c	/^int sqlite3BtreeCommitPhaseTwo(Btree *p, int bCleanup){$/;"	f
sqlite3BtreeConnectionCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeConnectionCount(Btree *p){$/;"	f
sqlite3BtreeConnectionCount	sqlite3.c	12326;"	d	file:
sqlite3BtreeConnectionCount	src/btree.c	/^int sqlite3BtreeConnectionCount(Btree *p){$/;"	f
sqlite3BtreeConnectionCount	src/btree.h	337;"	d
sqlite3BtreeConnectionCount	tsrc/btree.c	/^int sqlite3BtreeConnectionCount(Btree *p){$/;"	f
sqlite3BtreeConnectionCount	tsrc/btree.h	337;"	d
sqlite3BtreeCopyFile	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCopyFile	src/backup.c	/^int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCopyFile	tsrc/backup.c	/^int sqlite3BtreeCopyFile(Btree *pTo, Btree *pFrom){$/;"	f
sqlite3BtreeCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCount	src/btree.c	/^int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCount	tsrc/btree.c	/^int sqlite3BtreeCount(BtCursor *pCur, i64 *pnEntry){$/;"	f
sqlite3BtreeCreateTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCreateTable	src/btree.c	/^int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCreateTable	tsrc/btree.c	/^int sqlite3BtreeCreateTable(Btree *p, int *piTable, int flags){$/;"	f
sqlite3BtreeCursor	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursor	src/btree.c	/^int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursor	tsrc/btree.c	/^int sqlite3BtreeCursor($/;"	f
sqlite3BtreeCursorHasHint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasHint(BtCursor *pCsr, unsigned int mask){$/;"	f
sqlite3BtreeCursorHasHint	src/btree.c	/^int sqlite3BtreeCursorHasHint(BtCursor *pCsr, unsigned int mask){$/;"	f
sqlite3BtreeCursorHasHint	tsrc/btree.c	/^int sqlite3BtreeCursorHasHint(BtCursor *pCsr, unsigned int mask){$/;"	f
sqlite3BtreeCursorHasMoved	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorHasMoved(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorHasMoved	src/btree.c	/^int sqlite3BtreeCursorHasMoved(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorHasMoved	tsrc/btree.c	/^int sqlite3BtreeCursorHasMoved(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorHint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHint(BtCursor *pCur, int eHintType, ...){$/;"	f
sqlite3BtreeCursorHint	src/btree.c	/^void sqlite3BtreeCursorHint(BtCursor *pCur, int eHintType, ...){$/;"	f
sqlite3BtreeCursorHint	tsrc/btree.c	/^void sqlite3BtreeCursorHint(BtCursor *pCur, int eHintType, ...){$/;"	f
sqlite3BtreeCursorHintFlags	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorHintFlags(BtCursor *pCur, unsigned x){$/;"	f
sqlite3BtreeCursorHintFlags	src/btree.c	/^void sqlite3BtreeCursorHintFlags(BtCursor *pCur, unsigned x){$/;"	f
sqlite3BtreeCursorHintFlags	tsrc/btree.c	/^void sqlite3BtreeCursorHintFlags(BtCursor *pCur, unsigned x){$/;"	f
sqlite3BtreeCursorIsValid	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorIsValid	src/btree.c	/^int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorIsValid	tsrc/btree.c	/^int sqlite3BtreeCursorIsValid(BtCursor *pCur){$/;"	f
sqlite3BtreeCursorList	src/test_btree.c	/^void sqlite3BtreeCursorList(Btree *p){$/;"	f
sqlite3BtreeCursorRestore	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorRestore(BtCursor *pCur, int *pDifferentRow){$/;"	f
sqlite3BtreeCursorRestore	src/btree.c	/^int sqlite3BtreeCursorRestore(BtCursor *pCur, int *pDifferentRow){$/;"	f
sqlite3BtreeCursorRestore	tsrc/btree.c	/^int sqlite3BtreeCursorRestore(BtCursor *pCur, int *pDifferentRow){$/;"	f
sqlite3BtreeCursorSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorSize	src/btree.c	/^int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorSize	tsrc/btree.c	/^int sqlite3BtreeCursorSize(void){$/;"	f
sqlite3BtreeCursorZero	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeCursorZero	src/btree.c	/^void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeCursorZero	tsrc/btree.c	/^void sqlite3BtreeCursorZero(BtCursor *p){$/;"	f
sqlite3BtreeData	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeData	src/btree.c	/^int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeData	tsrc/btree.c	/^int sqlite3BtreeData(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeDelete	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDelete(BtCursor *pCur, u8 flags){$/;"	f
sqlite3BtreeDelete	src/btree.c	/^int sqlite3BtreeDelete(BtCursor *pCur, u8 flags){$/;"	f
sqlite3BtreeDelete	tsrc/btree.c	/^int sqlite3BtreeDelete(BtCursor *pCur, u8 flags){$/;"	f
sqlite3BtreeDropTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeDropTable	src/btree.c	/^int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeDropTable	tsrc/btree.c	/^int sqlite3BtreeDropTable(Btree *p, int iTable, int *piMoved){$/;"	f
sqlite3BtreeEnter	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	sqlite3.c	12322;"	d	file:
sqlite3BtreeEnter	src/btmutex.c	/^void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	src/btree.h	333;"	d
sqlite3BtreeEnter	tsrc/btmutex.c	/^void sqlite3BtreeEnter(Btree *p){$/;"	f
sqlite3BtreeEnter	tsrc/btree.h	333;"	d
sqlite3BtreeEnterAll	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	sqlite3.c	12323;"	d	file:
sqlite3BtreeEnterAll	src/btmutex.c	/^void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	src/btree.h	334;"	d
sqlite3BtreeEnterAll	tsrc/btmutex.c	/^void sqlite3BtreeEnterAll(sqlite3 *db){$/;"	f
sqlite3BtreeEnterAll	tsrc/btree.h	334;"	d
sqlite3BtreeEnterCursor	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	sqlite3.c	12325;"	d	file:
sqlite3BtreeEnterCursor	src/btmutex.c	/^void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	src/btree.h	336;"	d
sqlite3BtreeEnterCursor	tsrc/btmutex.c	/^void sqlite3BtreeEnterCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeEnterCursor	tsrc/btree.h	336;"	d
sqlite3BtreeEof	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeEof	src/btree.c	/^int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeEof	tsrc/btree.c	/^int sqlite3BtreeEof(BtCursor *pCur){$/;"	f
sqlite3BtreeFirst	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeFirst	src/btree.c	/^int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeFirst	tsrc/btree.c	/^int sqlite3BtreeFirst(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeGetAutoVacuum	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetAutoVacuum	src/btree.c	/^int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetAutoVacuum	tsrc/btree.c	/^int sqlite3BtreeGetAutoVacuum(Btree *p){$/;"	f
sqlite3BtreeGetFilename	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetFilename	src/btree.c	/^const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetFilename	tsrc/btree.c	/^const char *sqlite3BtreeGetFilename(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	src/btree.c	/^const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetJournalname	tsrc/btree.c	/^const char *sqlite3BtreeGetJournalname(Btree *p){$/;"	f
sqlite3BtreeGetMeta	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetMeta	src/btree.c	/^void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetMeta	tsrc/btree.c	/^void sqlite3BtreeGetMeta(Btree *p, int idx, u32 *pMeta){$/;"	f
sqlite3BtreeGetOptimalReserve	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetOptimalReserve(Btree *p){$/;"	f
sqlite3BtreeGetOptimalReserve	src/btree.c	/^int sqlite3BtreeGetOptimalReserve(Btree *p){$/;"	f
sqlite3BtreeGetOptimalReserve	tsrc/btree.c	/^int sqlite3BtreeGetOptimalReserve(Btree *p){$/;"	f
sqlite3BtreeGetPageSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetPageSize	src/btree.c	/^int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetPageSize	tsrc/btree.c	/^int sqlite3BtreeGetPageSize(Btree *p){$/;"	f
sqlite3BtreeGetReserveNoMutex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeGetReserveNoMutex(Btree *p){$/;"	f
sqlite3BtreeGetReserveNoMutex	src/btree.c	/^int sqlite3BtreeGetReserveNoMutex(Btree *p){$/;"	f
sqlite3BtreeGetReserveNoMutex	tsrc/btree.c	/^int sqlite3BtreeGetReserveNoMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsAllMutexes	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	sqlite3.c	12346;"	d	file:
sqlite3BtreeHoldsAllMutexes	src/btmutex.c	/^int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	src/btree.h	357;"	d
sqlite3BtreeHoldsAllMutexes	tsrc/btmutex.c	/^int sqlite3BtreeHoldsAllMutexes(sqlite3 *db){$/;"	f
sqlite3BtreeHoldsAllMutexes	tsrc/btree.h	357;"	d
sqlite3BtreeHoldsMutex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	sqlite3.c	12345;"	d	file:
sqlite3BtreeHoldsMutex	src/btmutex.c	/^int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	src/btree.h	356;"	d
sqlite3BtreeHoldsMutex	tsrc/btmutex.c	/^int sqlite3BtreeHoldsMutex(Btree *p){$/;"	f
sqlite3BtreeHoldsMutex	tsrc/btree.h	356;"	d
sqlite3BtreeIncrVacuum	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeIncrVacuum	src/btree.c	/^int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeIncrVacuum	tsrc/btree.c	/^int sqlite3BtreeIncrVacuum(Btree *p){$/;"	f
sqlite3BtreeIncrblobCursor	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeIncrblobCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeIncrblobCursor	src/btree.c	/^void sqlite3BtreeIncrblobCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeIncrblobCursor	tsrc/btree.c	/^void sqlite3BtreeIncrblobCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeInsert	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeInsert($/;"	f
sqlite3BtreeInsert	src/btree.c	/^int sqlite3BtreeInsert($/;"	f
sqlite3BtreeInsert	tsrc/btree.c	/^int sqlite3BtreeInsert($/;"	f
sqlite3BtreeIntegerKey	sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3BtreeIntegerKey(BtCursor *pCur){$/;"	f
sqlite3BtreeIntegerKey	src/btree.c	/^i64 sqlite3BtreeIntegerKey(BtCursor *pCur){$/;"	f
sqlite3BtreeIntegerKey	tsrc/btree.c	/^i64 sqlite3BtreeIntegerKey(BtCursor *pCur){$/;"	f
sqlite3BtreeIntegrityCheck	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIntegrityCheck	src/btree.c	/^char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIntegrityCheck	tsrc/btree.c	/^char *sqlite3BtreeIntegrityCheck($/;"	f
sqlite3BtreeIsInBackup	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInBackup	src/btree.c	/^int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInBackup	tsrc/btree.c	/^int sqlite3BtreeIsInBackup(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	src/btree.c	/^int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInReadTrans	tsrc/btree.c	/^int sqlite3BtreeIsInReadTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	src/btree.c	/^int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeIsInTrans	tsrc/btree.c	/^int sqlite3BtreeIsInTrans(Btree *p){$/;"	f
sqlite3BtreeIsReadonly	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeIsReadonly(Btree *p){$/;"	f
sqlite3BtreeIsReadonly	src/btree.c	/^int sqlite3BtreeIsReadonly(Btree *p){$/;"	f
sqlite3BtreeIsReadonly	tsrc/btree.c	/^int sqlite3BtreeIsReadonly(Btree *p){$/;"	f
sqlite3BtreeKey	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeKey	src/btree.c	/^int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeKey	tsrc/btree.c	/^int sqlite3BtreeKey(BtCursor *pCur, u32 offset, u32 amt, void *pBuf){$/;"	f
sqlite3BtreeLast	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLast	src/btree.c	/^int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLast	tsrc/btree.c	/^int sqlite3BtreeLast(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeLastPage	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLastPage	src/btree.c	/^u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLastPage	tsrc/btree.c	/^u32 sqlite3BtreeLastPage(Btree *p){$/;"	f
sqlite3BtreeLeave	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	sqlite3.c	12341;"	d	file:
sqlite3BtreeLeave	src/btmutex.c	/^void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	src/btree.h	352;"	d
sqlite3BtreeLeave	tsrc/btmutex.c	/^void sqlite3BtreeLeave(Btree *p){$/;"	f
sqlite3BtreeLeave	tsrc/btree.h	352;"	d
sqlite3BtreeLeaveAll	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	sqlite3.c	12343;"	d	file:
sqlite3BtreeLeaveAll	src/btmutex.c	/^void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	src/btree.h	354;"	d
sqlite3BtreeLeaveAll	tsrc/btmutex.c	/^void sqlite3BtreeLeaveAll(sqlite3 *db){$/;"	f
sqlite3BtreeLeaveAll	tsrc/btree.h	354;"	d
sqlite3BtreeLeaveCursor	sqlite3.c	/^SQLITE_PRIVATE void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	sqlite3.c	12342;"	d	file:
sqlite3BtreeLeaveCursor	src/btmutex.c	/^void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	src/btree.h	353;"	d
sqlite3BtreeLeaveCursor	tsrc/btmutex.c	/^void sqlite3BtreeLeaveCursor(BtCursor *pCur){$/;"	f
sqlite3BtreeLeaveCursor	tsrc/btree.h	353;"	d
sqlite3BtreeLockTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeLockTable	src/btree.c	/^int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeLockTable	tsrc/btree.c	/^int sqlite3BtreeLockTable(Btree *p, int iTab, u8 isWriteLock){$/;"	f
sqlite3BtreeMaxPageCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMaxPageCount	src/btree.c	/^int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMaxPageCount	tsrc/btree.c	/^int sqlite3BtreeMaxPageCount(Btree *p, int mxPage){$/;"	f
sqlite3BtreeMovetoUnpacked	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeMovetoUnpacked	src/btree.c	/^int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeMovetoUnpacked	tsrc/btree.c	/^int sqlite3BtreeMovetoUnpacked($/;"	f
sqlite3BtreeNewDb	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNewDb(Btree *p){$/;"	f
sqlite3BtreeNewDb	src/btree.c	/^int sqlite3BtreeNewDb(Btree *p){$/;"	f
sqlite3BtreeNewDb	tsrc/btree.c	/^int sqlite3BtreeNewDb(Btree *p){$/;"	f
sqlite3BtreeNext	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeNext	src/btree.c	/^int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeNext	tsrc/btree.c	/^int sqlite3BtreeNext(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreeOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeOpen($/;"	f
sqlite3BtreeOpen	src/btree.c	/^int sqlite3BtreeOpen($/;"	f
sqlite3BtreeOpen	tsrc/btree.c	/^int sqlite3BtreeOpen($/;"	f
sqlite3BtreePager	sqlite3.c	/^SQLITE_PRIVATE Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePager	src/btree.c	/^Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePager	tsrc/btree.c	/^Pager *sqlite3BtreePager(Btree *p){$/;"	f
sqlite3BtreePayloadFetch	sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3BtreePayloadFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreePayloadFetch	src/btree.c	/^const void *sqlite3BtreePayloadFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreePayloadFetch	tsrc/btree.c	/^const void *sqlite3BtreePayloadFetch(BtCursor *pCur, u32 *pAmt){$/;"	f
sqlite3BtreePayloadSize	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3BtreePayloadSize(BtCursor *pCur){$/;"	f
sqlite3BtreePayloadSize	src/btree.c	/^u32 sqlite3BtreePayloadSize(BtCursor *pCur){$/;"	f
sqlite3BtreePayloadSize	tsrc/btree.c	/^u32 sqlite3BtreePayloadSize(BtCursor *pCur){$/;"	f
sqlite3BtreePrevious	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePrevious	src/btree.c	/^int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePrevious	tsrc/btree.c	/^int sqlite3BtreePrevious(BtCursor *pCur, int *pRes){$/;"	f
sqlite3BtreePutData	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreePutData	src/btree.c	/^int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreePutData	tsrc/btree.c	/^int sqlite3BtreePutData(BtCursor *pCsr, u32 offset, u32 amt, void *z){$/;"	f
sqlite3BtreeRollback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeRollback(Btree *p, int tripCode, int writeOnly){$/;"	f
sqlite3BtreeRollback	src/btree.c	/^int sqlite3BtreeRollback(Btree *p, int tripCode, int writeOnly){$/;"	f
sqlite3BtreeRollback	tsrc/btree.c	/^int sqlite3BtreeRollback(Btree *p, int tripCode, int writeOnly){$/;"	f
sqlite3BtreeSavepoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSavepoint	src/btree.c	/^int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSavepoint	tsrc/btree.c	/^int sqlite3BtreeSavepoint(Btree *p, int op, int iSavepoint){$/;"	f
sqlite3BtreeSchema	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchema	src/btree.c	/^void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchema	tsrc/btree.c	/^void *sqlite3BtreeSchema(Btree *p, int nBytes, void(*xFree)(void *)){$/;"	f
sqlite3BtreeSchemaLocked	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSchemaLocked	src/btree.c	/^int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSchemaLocked	tsrc/btree.c	/^int sqlite3BtreeSchemaLocked(Btree *p){$/;"	f
sqlite3BtreeSecureDelete	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSecureDelete	src/btree.c	/^int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSecureDelete	tsrc/btree.c	/^int sqlite3BtreeSecureDelete(Btree *p, int newFlag){$/;"	f
sqlite3BtreeSetAutoVacuum	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetAutoVacuum	src/btree.c	/^int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetAutoVacuum	tsrc/btree.c	/^int sqlite3BtreeSetAutoVacuum(Btree *p, int autoVacuum){$/;"	f
sqlite3BtreeSetCacheSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetCacheSize	src/btree.c	/^int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetCacheSize	tsrc/btree.c	/^int sqlite3BtreeSetCacheSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetMmapLimit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetMmapLimit(Btree *p, sqlite3_int64 szMmap){$/;"	f
sqlite3BtreeSetMmapLimit	src/btree.c	/^int sqlite3BtreeSetMmapLimit(Btree *p, sqlite3_int64 szMmap){$/;"	f
sqlite3BtreeSetMmapLimit	tsrc/btree.c	/^int sqlite3BtreeSetMmapLimit(Btree *p, sqlite3_int64 szMmap){$/;"	f
sqlite3BtreeSetPageSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetPageSize	src/btree.c	/^int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetPageSize	tsrc/btree.c	/^int sqlite3BtreeSetPageSize(Btree *p, int pageSize, int nReserve, int iFix){$/;"	f
sqlite3BtreeSetPagerFlags	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetPagerFlags($/;"	f
sqlite3BtreeSetPagerFlags	src/btree.c	/^int sqlite3BtreeSetPagerFlags($/;"	f
sqlite3BtreeSetPagerFlags	tsrc/btree.c	/^int sqlite3BtreeSetPagerFlags($/;"	f
sqlite3BtreeSetSpillSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetSpillSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetSpillSize	src/btree.c	/^int sqlite3BtreeSetSpillSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetSpillSize	tsrc/btree.c	/^int sqlite3BtreeSetSpillSize(Btree *p, int mxPage){$/;"	f
sqlite3BtreeSetVersion	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSetVersion	src/btree.c	/^int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSetVersion	tsrc/btree.c	/^int sqlite3BtreeSetVersion(Btree *pBtree, int iVersion){$/;"	f
sqlite3BtreeSharable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	sqlite3.c	12324;"	d	file:
sqlite3BtreeSharable	src/btree.c	/^int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	src/btree.h	335;"	d
sqlite3BtreeSharable	tsrc/btree.c	/^int sqlite3BtreeSharable(Btree *p){$/;"	f
sqlite3BtreeSharable	tsrc/btree.h	335;"	d
sqlite3BtreeSharedCacheReport	src/test_btree.c	/^int SQLITE_TCLAPI sqlite3BtreeSharedCacheReport($/;"	f
sqlite3BtreeTripAllCursors	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode, int writeOnly){$/;"	f
sqlite3BtreeTripAllCursors	src/btree.c	/^int sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode, int writeOnly){$/;"	f
sqlite3BtreeTripAllCursors	tsrc/btree.c	/^int sqlite3BtreeTripAllCursors(Btree *pBtree, int errCode, int writeOnly){$/;"	f
sqlite3BtreeUpdateMeta	sqlite3.c	/^SQLITE_PRIVATE int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3BtreeUpdateMeta	src/btree.c	/^int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3BtreeUpdateMeta	tsrc/btree.c	/^int sqlite3BtreeUpdateMeta(Btree *p, int idx, u32 iMeta){$/;"	f
sqlite3BuiltinFunctions	sqlite3.c	/^SQLITE_PRIVATE FuncDefHash sqlite3BuiltinFunctions;$/;"	v
sqlite3BuiltinFunctions	src/global.c	/^FuncDefHash sqlite3BuiltinFunctions;$/;"	v
sqlite3BuiltinFunctions	tsrc/global.c	/^FuncDefHash sqlite3BuiltinFunctions;$/;"	v
sqlite3CantopenError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CantopenError(int lineno){$/;"	f
sqlite3CantopenError	src/main.c	/^int sqlite3CantopenError(int lineno){$/;"	f
sqlite3CantopenError	tsrc/main.c	/^int sqlite3CantopenError(int lineno){$/;"	f
sqlite3ChangeCookie	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3ChangeCookie	src/build.c	/^void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3ChangeCookie	tsrc/build.c	/^void sqlite3ChangeCookie(Parse *pParse, int iDb){$/;"	f
sqlite3CheckCollSeq	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckCollSeq	src/callback.c	/^int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckCollSeq	tsrc/callback.c	/^int sqlite3CheckCollSeq(Parse *pParse, CollSeq *pColl){$/;"	f
sqlite3CheckObjectName	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3CheckObjectName	src/build.c	/^int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3CheckObjectName	tsrc/build.c	/^int sqlite3CheckObjectName(Parse *pParse, const char *zName){$/;"	f
sqlite3Checkpoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3Checkpoint	src/main.c	/^int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3Checkpoint	tsrc/main.c	/^int sqlite3Checkpoint(sqlite3 *db, int iDb, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3ClearStatTables	sqlite3.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3ClearStatTables	src/build.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3ClearStatTables	tsrc/build.c	/^static void sqlite3ClearStatTables($/;"	f	file:
sqlite3ClearTempRegCache	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ClearTempRegCache(Parse *pParse){$/;"	f
sqlite3ClearTempRegCache	src/expr.c	/^void sqlite3ClearTempRegCache(Parse *pParse){$/;"	f
sqlite3ClearTempRegCache	tsrc/expr.c	/^void sqlite3ClearTempRegCache(Parse *pParse){$/;"	f
sqlite3Close	sqlite3.c	/^static int sqlite3Close(sqlite3 *db, int forceZombie){$/;"	f	file:
sqlite3Close	src/main.c	/^static int sqlite3Close(sqlite3 *db, int forceZombie){$/;"	f	file:
sqlite3Close	tsrc/main.c	/^static int sqlite3Close(sqlite3 *db, int forceZombie){$/;"	f	file:
sqlite3CloseExtensions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	sqlite3.c	16622;"	d	file:
sqlite3CloseExtensions	src/loadext.c	/^void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	src/sqliteInt.h	4023;"	d
sqlite3CloseExtensions	tsrc/loadext.c	/^void sqlite3CloseExtensions(sqlite3 *db){$/;"	f
sqlite3CloseExtensions	tsrc/sqliteInt.h	4023;"	d
sqlite3CloseSavepoints	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CloseSavepoints	src/main.c	/^void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CloseSavepoints	tsrc/main.c	/^void sqlite3CloseSavepoints(sqlite3 *db){$/;"	f
sqlite3CodeDropTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeDropTable	src/build.c	/^void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeDropTable	tsrc/build.c	/^void sqlite3CodeDropTable(Parse *pParse, Table *pTab, int iDb, int isView){$/;"	f
sqlite3CodeOnce	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeOnce(Parse *pParse){$/;"	f
sqlite3CodeOnce	src/expr.c	/^int sqlite3CodeOnce(Parse *pParse){$/;"	f
sqlite3CodeOnce	tsrc/expr.c	/^int sqlite3CodeOnce(Parse *pParse){$/;"	f
sqlite3CodeRowTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	sqlite3.c	16404;"	d	file:
sqlite3CodeRowTrigger	src/sqliteInt.h	3805;"	d
sqlite3CodeRowTrigger	src/trigger.c	/^void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTrigger	tsrc/sqliteInt.h	3805;"	d
sqlite3CodeRowTrigger	tsrc/trigger.c	/^void sqlite3CodeRowTrigger($/;"	f
sqlite3CodeRowTriggerDirect	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	sqlite3.c	16405;"	d	file:
sqlite3CodeRowTriggerDirect	src/sqliteInt.h	3806;"	d
sqlite3CodeRowTriggerDirect	src/trigger.c	/^void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeRowTriggerDirect	tsrc/sqliteInt.h	3806;"	d
sqlite3CodeRowTriggerDirect	tsrc/trigger.c	/^void sqlite3CodeRowTriggerDirect($/;"	f
sqlite3CodeSubselect	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CodeSubselect($/;"	f
sqlite3CodeSubselect	src/expr.c	/^int sqlite3CodeSubselect($/;"	f
sqlite3CodeSubselect	tsrc/expr.c	/^int sqlite3CodeSubselect($/;"	f
sqlite3CodeVerifyNamedSchema	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifyNamedSchema	src/build.c	/^void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifyNamedSchema	tsrc/build.c	/^void sqlite3CodeVerifyNamedSchema(Parse *pParse, const char *zDb){$/;"	f
sqlite3CodeVerifySchema	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3CodeVerifySchema	src/build.c	/^void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3CodeVerifySchema	tsrc/build.c	/^void sqlite3CodeVerifySchema(Parse *pParse, int iDb){$/;"	f
sqlite3CollapseDatabaseArray	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CollapseDatabaseArray(sqlite3 *db){$/;"	f
sqlite3CollapseDatabaseArray	src/build.c	/^void sqlite3CollapseDatabaseArray(sqlite3 *db){$/;"	f
sqlite3CollapseDatabaseArray	tsrc/build.c	/^void sqlite3CollapseDatabaseArray(sqlite3 *db){$/;"	f
sqlite3ColumnDefault	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3ColumnDefault	src/update.c	/^void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3ColumnDefault	tsrc/update.c	/^void sqlite3ColumnDefault(Vdbe *v, Table *pTab, int i, int iReg){$/;"	f
sqlite3ColumnOfIndex	sqlite3.c	/^SQLITE_PRIVATE i16 sqlite3ColumnOfIndex(Index *pIdx, i16 iCol){$/;"	f
sqlite3ColumnOfIndex	src/build.c	/^i16 sqlite3ColumnOfIndex(Index *pIdx, i16 iCol){$/;"	f
sqlite3ColumnOfIndex	tsrc/build.c	/^i16 sqlite3ColumnOfIndex(Index *pIdx, i16 iCol){$/;"	f
sqlite3ColumnPropertiesFromName	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ColumnPropertiesFromName(Table *pTab, Column *pCol){$/;"	f
sqlite3ColumnPropertiesFromName	sqlite3.c	16168;"	d	file:
sqlite3ColumnPropertiesFromName	src/build.c	/^void sqlite3ColumnPropertiesFromName(Table *pTab, Column *pCol){$/;"	f
sqlite3ColumnPropertiesFromName	src/sqliteInt.h	3569;"	d
sqlite3ColumnPropertiesFromName	tsrc/build.c	/^void sqlite3ColumnPropertiesFromName(Table *pTab, Column *pCol){$/;"	f
sqlite3ColumnPropertiesFromName	tsrc/sqliteInt.h	3569;"	d
sqlite3ColumnType	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3ColumnType(Column *pCol, char *zDflt){$/;"	f
sqlite3ColumnType	src/util.c	/^char *sqlite3ColumnType(Column *pCol, char *zDflt){$/;"	f
sqlite3ColumnType	tsrc/util.c	/^char *sqlite3ColumnType(Column *pCol, char *zDflt){$/;"	f
sqlite3ColumnsFromExprList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ColumnsFromExprList($/;"	f
sqlite3ColumnsFromExprList	src/select.c	/^int sqlite3ColumnsFromExprList($/;"	f
sqlite3ColumnsFromExprList	tsrc/select.c	/^int sqlite3ColumnsFromExprList($/;"	f
sqlite3CommitInternalChanges	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitInternalChanges	src/build.c	/^void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitInternalChanges	tsrc/build.c	/^void sqlite3CommitInternalChanges(sqlite3 *db){$/;"	f
sqlite3CommitTransaction	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CommitTransaction	src/build.c	/^void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CommitTransaction	tsrc/build.c	/^void sqlite3CommitTransaction(Parse *pParse){$/;"	f
sqlite3CompareAffinity	sqlite3.c	/^SQLITE_PRIVATE char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompareAffinity	src/expr.c	/^char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompareAffinity	tsrc/expr.c	/^char sqlite3CompareAffinity(Expr *pExpr, char aff2){$/;"	f
sqlite3CompleteInsertion	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CompleteInsertion($/;"	f
sqlite3CompleteInsertion	src/insert.c	/^void sqlite3CompleteInsertion($/;"	f
sqlite3CompleteInsertion	tsrc/insert.c	/^void sqlite3CompleteInsertion($/;"	f
sqlite3Config	sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	sqlite3.c	/^SQLITE_PRIVATE SQLITE_WSD struct Sqlite3Config sqlite3Config;$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	src/global.c	/^SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3Config	tsrc/global.c	/^SQLITE_WSD struct Sqlite3Config sqlite3Config = {$/;"	v	typeref:struct:Sqlite3Config
sqlite3ConnectionBlocked	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	sqlite3.c	16786;"	d	file:
sqlite3ConnectionBlocked	src/notify.c	/^void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	src/sqliteInt.h	4187;"	d
sqlite3ConnectionBlocked	tsrc/notify.c	/^void sqlite3ConnectionBlocked(sqlite3 *db, sqlite3 *pBlocker){$/;"	f
sqlite3ConnectionBlocked	tsrc/sqliteInt.h	4187;"	d
sqlite3ConnectionClosed	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	sqlite3.c	16788;"	d	file:
sqlite3ConnectionClosed	src/notify.c	/^void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	src/sqliteInt.h	4189;"	d
sqlite3ConnectionClosed	tsrc/notify.c	/^void sqlite3ConnectionClosed(sqlite3 *db){$/;"	f
sqlite3ConnectionClosed	tsrc/sqliteInt.h	4189;"	d
sqlite3ConnectionUnlocked	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	sqlite3.c	16787;"	d	file:
sqlite3ConnectionUnlocked	src/notify.c	/^void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	src/sqliteInt.h	4188;"	d
sqlite3ConnectionUnlocked	tsrc/notify.c	/^void sqlite3ConnectionUnlocked(sqlite3 *db){$/;"	f
sqlite3ConnectionUnlocked	tsrc/sqliteInt.h	4188;"	d
sqlite3CorruptError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CorruptError(int lineno){$/;"	f
sqlite3CorruptError	src/main.c	/^int sqlite3CorruptError(int lineno){$/;"	f
sqlite3CorruptError	tsrc/main.c	/^int sqlite3CorruptError(int lineno){$/;"	f
sqlite3Coverage	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Coverage(int x){$/;"	f
sqlite3Coverage	src/util.c	/^void sqlite3Coverage(int x){$/;"	f
sqlite3Coverage	tsrc/util.c	/^void sqlite3Coverage(int x){$/;"	f
sqlite3CrashTestEnable	src/test6.c	/^static int sqlite3CrashTestEnable = 0;$/;"	v	file:
sqlite3CreateColumnExpr	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateColumnExpr	src/resolve.c	/^Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateColumnExpr	tsrc/resolve.c	/^Expr *sqlite3CreateColumnExpr(sqlite3 *db, SrcList *pSrc, int iSrc, int iCol){$/;"	f
sqlite3CreateForeignKey	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateForeignKey($/;"	f
sqlite3CreateForeignKey	src/build.c	/^void sqlite3CreateForeignKey($/;"	f
sqlite3CreateForeignKey	tsrc/build.c	/^void sqlite3CreateForeignKey($/;"	f
sqlite3CreateFunc	sqlite3.c	/^SQLITE_PRIVATE int sqlite3CreateFunc($/;"	f
sqlite3CreateFunc	src/main.c	/^int sqlite3CreateFunc($/;"	f
sqlite3CreateFunc	tsrc/main.c	/^int sqlite3CreateFunc($/;"	f
sqlite3CreateIndex	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateIndex($/;"	f
sqlite3CreateIndex	src/build.c	/^void sqlite3CreateIndex($/;"	f
sqlite3CreateIndex	tsrc/build.c	/^void sqlite3CreateIndex($/;"	f
sqlite3CreateView	sqlite3.c	/^SQLITE_PRIVATE void sqlite3CreateView($/;"	f
sqlite3CreateView	src/build.c	/^void sqlite3CreateView($/;"	f
sqlite3CreateView	tsrc/build.c	/^void sqlite3CreateView($/;"	f
sqlite3CryptFunc	ext/userauth/userauth.c	/^void sqlite3CryptFunc($/;"	f
sqlite3CtypeMap	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3CtypeMap[];$/;"	v
sqlite3CtypeMap	src/global.c	/^const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3CtypeMap	tsrc/global.c	/^const unsigned char sqlite3CtypeMap[256] = {$/;"	v
sqlite3DbFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbFree	src/malloc.c	/^void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbFree	tsrc/malloc.c	/^void sqlite3DbFree(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocRaw	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRaw(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRaw	src/malloc.c	/^void *sqlite3DbMallocRaw(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRaw	tsrc/malloc.c	/^void *sqlite3DbMallocRaw(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRawNN	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRawNN	src/malloc.c	/^void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocRawNN	tsrc/malloc.c	/^void *sqlite3DbMallocRawNN(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocSize	src/malloc.c	/^int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocSize	tsrc/malloc.c	/^int sqlite3DbMallocSize(sqlite3 *db, void *p){$/;"	f
sqlite3DbMallocZero	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbMallocZero(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocZero	src/malloc.c	/^void *sqlite3DbMallocZero(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMallocZero	tsrc/malloc.c	/^void *sqlite3DbMallocZero(sqlite3 *db, u64 n){$/;"	f
sqlite3DbMaskAllZero	sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbMaskAllZero(yDbMask m){$/;"	f
sqlite3DbMaskAllZero	src/build.c	/^int sqlite3DbMaskAllZero(yDbMask m){$/;"	f
sqlite3DbMaskAllZero	tsrc/build.c	/^int sqlite3DbMaskAllZero(yDbMask m){$/;"	f
sqlite3DbNameToBtree	sqlite3.c	/^SQLITE_PRIVATE Btree *sqlite3DbNameToBtree(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3DbNameToBtree	src/main.c	/^Btree *sqlite3DbNameToBtree(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3DbNameToBtree	tsrc/main.c	/^Btree *sqlite3DbNameToBtree(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3DbRealloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbRealloc	src/malloc.c	/^void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbRealloc	tsrc/malloc.c	/^void *sqlite3DbRealloc(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbReallocOrFree	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbReallocOrFree	src/malloc.c	/^void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbReallocOrFree	tsrc/malloc.c	/^void *sqlite3DbReallocOrFree(sqlite3 *db, void *p, u64 n){$/;"	f
sqlite3DbStrDup	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrDup	src/malloc.c	/^char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrDup	tsrc/malloc.c	/^char *sqlite3DbStrDup(sqlite3 *db, const char *z){$/;"	f
sqlite3DbStrNDup	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n){$/;"	f
sqlite3DbStrNDup	src/malloc.c	/^char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n){$/;"	f
sqlite3DbStrNDup	tsrc/malloc.c	/^char *sqlite3DbStrNDup(sqlite3 *db, const char *z, u64 n){$/;"	f
sqlite3DbstatRegister	sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){ return SQLITE_OK; }$/;"	f
sqlite3DbstatRegister	sqlite3.c	/^SQLITE_PRIVATE int sqlite3DbstatRegister(sqlite3 *db){$/;"	f
sqlite3DbstatRegister	src/dbstat.c	/^int sqlite3DbstatRegister(sqlite3 *db){ return SQLITE_OK; }$/;"	f
sqlite3DbstatRegister	src/dbstat.c	/^int sqlite3DbstatRegister(sqlite3 *db){$/;"	f
sqlite3DbstatRegister	tsrc/dbstat.c	/^int sqlite3DbstatRegister(sqlite3 *db){ return SQLITE_OK; }$/;"	f
sqlite3DbstatRegister	tsrc/dbstat.c	/^int sqlite3DbstatRegister(sqlite3 *db){$/;"	f
sqlite3DebugPrintf	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DebugPrintf	src/printf.c	/^void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DebugPrintf	tsrc/printf.c	/^void sqlite3DebugPrintf(const char *zFormat, ...){$/;"	f
sqlite3DecOrHexToI64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3DecOrHexToI64(const char *z, i64 *pOut){$/;"	f
sqlite3DecOrHexToI64	src/util.c	/^int sqlite3DecOrHexToI64(const char *z, i64 *pOut){$/;"	f
sqlite3DecOrHexToI64	tsrc/util.c	/^int sqlite3DecOrHexToI64(const char *z, i64 *pOut){$/;"	f
sqlite3DefaultMutex	sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	src/mutex_noop.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	src/mutex_unix.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	src/mutex_w32.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	tsrc/mutex_noop.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	tsrc/mutex_unix.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultMutex	tsrc/mutex_w32.c	/^sqlite3_mutex_methods const *sqlite3DefaultMutex(void){$/;"	f
sqlite3DefaultRowEst	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DefaultRowEst	src/build.c	/^void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DefaultRowEst	tsrc/build.c	/^void sqlite3DefaultRowEst(Index *pIdx){$/;"	f
sqlite3DeferForeignKey	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeferForeignKey	src/build.c	/^void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeferForeignKey	tsrc/build.c	/^void sqlite3DeferForeignKey(Parse *pParse, int isDeferred){$/;"	f
sqlite3DeleteColumnNames	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteColumnNames	src/build.c	/^void sqlite3DeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteColumnNames	tsrc/build.c	/^void sqlite3DeleteColumnNames(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteFrom	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteFrom($/;"	f
sqlite3DeleteFrom	src/delete.c	/^void sqlite3DeleteFrom($/;"	f
sqlite3DeleteFrom	tsrc/delete.c	/^void sqlite3DeleteFrom($/;"	f
sqlite3DeleteIndexSamples	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteIndexSamples	src/analyze.c	/^void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteIndexSamples	tsrc/analyze.c	/^void sqlite3DeleteIndexSamples(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3DeleteTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTable	src/build.c	/^void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTable	tsrc/build.c	/^void sqlite3DeleteTable(sqlite3 *db, Table *pTable){$/;"	f
sqlite3DeleteTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	sqlite3.c	16401;"	d	file:
sqlite3DeleteTrigger	src/sqliteInt.h	3802;"	d
sqlite3DeleteTrigger	src/trigger.c	/^void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTrigger	tsrc/sqliteInt.h	3802;"	d
sqlite3DeleteTrigger	tsrc/trigger.c	/^void sqlite3DeleteTrigger(sqlite3 *db, Trigger *pTrigger){$/;"	f
sqlite3DeleteTriggerStep	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3DeleteTriggerStep	src/trigger.c	/^void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3DeleteTriggerStep	tsrc/trigger.c	/^void sqlite3DeleteTriggerStep(sqlite3 *db, TriggerStep *pTriggerStep){$/;"	f
sqlite3Dequote	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Dequote(char *z){$/;"	f
sqlite3Dequote	src/util.c	/^void sqlite3Dequote(char *z){$/;"	f
sqlite3Dequote	tsrc/util.c	/^void sqlite3Dequote(char *z){$/;"	f
sqlite3Detach	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3Detach	src/attach.c	/^void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3Detach	tsrc/attach.c	/^void sqlite3Detach(Parse *pParse, Expr *pDbname){$/;"	f
sqlite3DropIndex	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropIndex	src/build.c	/^void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropIndex	tsrc/build.c	/^void sqlite3DropIndex(Parse *pParse, SrcList *pName, int ifExists){$/;"	f
sqlite3DropTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTable	src/build.c	/^void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTable	tsrc/build.c	/^void sqlite3DropTable(Parse *pParse, SrcList *pName, int isView, int noErr){$/;"	f
sqlite3DropTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTrigger	src/trigger.c	/^void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTrigger	tsrc/trigger.c	/^void sqlite3DropTrigger(Parse *pParse, SrcList *pName, int noErr){$/;"	f
sqlite3DropTriggerPtr	sqlite3.c	/^SQLITE_PRIVATE void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	sqlite3.c	16402;"	d	file:
sqlite3DropTriggerPtr	src/sqliteInt.h	3803;"	d
sqlite3DropTriggerPtr	src/trigger.c	/^void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3DropTriggerPtr	tsrc/sqliteInt.h	3803;"	d
sqlite3DropTriggerPtr	tsrc/trigger.c	/^void sqlite3DropTriggerPtr(Parse *pParse, Trigger *pTrigger){$/;"	f
sqlite3EndBenignMalloc	sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	sqlite3.c	16741;"	d	file:
sqlite3EndBenignMalloc	src/fault.c	/^void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	src/sqliteInt.h	4142;"	d
sqlite3EndBenignMalloc	src/test_func.c	163;"	d	file:
sqlite3EndBenignMalloc	tsrc/fault.c	/^void sqlite3EndBenignMalloc(void){$/;"	f
sqlite3EndBenignMalloc	tsrc/sqliteInt.h	4142;"	d
sqlite3EndTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3EndTable($/;"	f
sqlite3EndTable	src/build.c	/^void sqlite3EndTable($/;"	f
sqlite3EndTable	tsrc/build.c	/^void sqlite3EndTable($/;"	f
sqlite3ErrName	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrName(int rc){$/;"	f
sqlite3ErrName	src/main.c	/^const char *sqlite3ErrName(int rc){$/;"	f
sqlite3ErrName	tsrc/main.c	/^const char *sqlite3ErrName(int rc){$/;"	f
sqlite3ErrStr	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3ErrStr	src/main.c	/^const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3ErrStr	tsrc/main.c	/^const char *sqlite3ErrStr(int rc){$/;"	f
sqlite3Error	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Error(sqlite3 *db, int err_code){$/;"	f
sqlite3Error	src/util.c	/^void sqlite3Error(sqlite3 *db, int err_code){$/;"	f
sqlite3Error	tsrc/util.c	/^void sqlite3Error(sqlite3 *db, int err_code){$/;"	f
sqlite3ErrorFinish	sqlite3.c	/^static SQLITE_NOINLINE void  sqlite3ErrorFinish(sqlite3 *db, int err_code){$/;"	f	file:
sqlite3ErrorFinish	src/util.c	/^static SQLITE_NOINLINE void  sqlite3ErrorFinish(sqlite3 *db, int err_code){$/;"	f	file:
sqlite3ErrorFinish	tsrc/util.c	/^static SQLITE_NOINLINE void  sqlite3ErrorFinish(sqlite3 *db, int err_code){$/;"	f	file:
sqlite3ErrorMsg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ErrorMsg	src/util.c	/^void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ErrorMsg	tsrc/util.c	/^void sqlite3ErrorMsg(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3ErrorWithMsg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ErrorWithMsg(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ErrorWithMsg	src/util.c	/^void sqlite3ErrorWithMsg(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ErrorWithMsg	tsrc/util.c	/^void sqlite3ErrorWithMsg(sqlite3 *db, int err_code, const char *zFormat, ...){$/;"	f
sqlite3ExecFunc	src/test1.c	/^static void sqlite3ExecFunc($/;"	f	file:
sqlite3ExpirePreparedStatements	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3ExpirePreparedStatements	src/vdbeaux.c	/^void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3ExpirePreparedStatements	tsrc/vdbeaux.c	/^void sqlite3ExpirePreparedStatements(sqlite3 *db){$/;"	f
sqlite3Expr	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3Expr($/;"	f
sqlite3Expr	src/expr.c	/^Expr *sqlite3Expr($/;"	f
sqlite3Expr	tsrc/expr.c	/^Expr *sqlite3Expr($/;"	f
sqlite3ExprAddCollateString	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateString(Parse *pParse, Expr *pExpr, const char *zC){$/;"	f
sqlite3ExprAddCollateString	src/expr.c	/^Expr *sqlite3ExprAddCollateString(Parse *pParse, Expr *pExpr, const char *zC){$/;"	f
sqlite3ExprAddCollateString	tsrc/expr.c	/^Expr *sqlite3ExprAddCollateString(Parse *pParse, Expr *pExpr, const char *zC){$/;"	f
sqlite3ExprAddCollateToken	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAddCollateToken($/;"	f
sqlite3ExprAddCollateToken	src/expr.c	/^Expr *sqlite3ExprAddCollateToken($/;"	f
sqlite3ExprAddCollateToken	tsrc/expr.c	/^Expr *sqlite3ExprAddCollateToken($/;"	f
sqlite3ExprAffinity	sqlite3.c	/^SQLITE_PRIVATE char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAffinity	src/expr.c	/^char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAffinity	tsrc/expr.c	/^char sqlite3ExprAffinity(Expr *pExpr){$/;"	f
sqlite3ExprAlloc	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAlloc	src/expr.c	/^Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAlloc	tsrc/expr.c	/^Expr *sqlite3ExprAlloc($/;"	f
sqlite3ExprAnalyzeAggList	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggList	src/expr.c	/^void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggList	tsrc/expr.c	/^void sqlite3ExprAnalyzeAggList(NameContext *pNC, ExprList *pList){$/;"	f
sqlite3ExprAnalyzeAggregates	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnalyzeAggregates	src/expr.c	/^void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnalyzeAggregates	tsrc/expr.c	/^void sqlite3ExprAnalyzeAggregates(NameContext *pNC, Expr *pExpr){$/;"	f
sqlite3ExprAnd	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAnd	src/expr.c	/^Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAnd	tsrc/expr.c	/^Expr *sqlite3ExprAnd(sqlite3 *db, Expr *pLeft, Expr *pRight){$/;"	f
sqlite3ExprAssignVarNumber	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAssignVarNumber	src/expr.c	/^void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAssignVarNumber	tsrc/expr.c	/^void sqlite3ExprAssignVarNumber(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprAttachSubtrees	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprAttachSubtrees	src/expr.c	/^void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprAttachSubtrees	tsrc/expr.c	/^void sqlite3ExprAttachSubtrees($/;"	f
sqlite3ExprCacheAffinityChange	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheAffinityChange	src/expr.c	/^void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheAffinityChange	tsrc/expr.c	/^void sqlite3ExprCacheAffinityChange(Parse *pParse, int iStart, int iCount){$/;"	f
sqlite3ExprCacheClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCacheClear	src/expr.c	/^void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCacheClear	tsrc/expr.c	/^void sqlite3ExprCacheClear(Parse *pParse){$/;"	f
sqlite3ExprCachePinRegister	sqlite3.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePinRegister	src/expr.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePinRegister	tsrc/expr.c	/^static void sqlite3ExprCachePinRegister(Parse *pParse, int iReg){$/;"	f	file:
sqlite3ExprCachePop	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePop(Parse *pParse){$/;"	f
sqlite3ExprCachePop	src/expr.c	/^void sqlite3ExprCachePop(Parse *pParse){$/;"	f
sqlite3ExprCachePop	tsrc/expr.c	/^void sqlite3ExprCachePop(Parse *pParse){$/;"	f
sqlite3ExprCachePush	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCachePush	src/expr.c	/^void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCachePush	tsrc/expr.c	/^void sqlite3ExprCachePush(Parse *pParse){$/;"	f
sqlite3ExprCacheRemove	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheRemove	src/expr.c	/^void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheRemove	tsrc/expr.c	/^void sqlite3ExprCacheRemove(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ExprCacheStore	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCacheStore	src/expr.c	/^void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCacheStore	tsrc/expr.c	/^void sqlite3ExprCacheStore(Parse *pParse, int iTab, int iCol, int iReg){$/;"	f
sqlite3ExprCanBeNull	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCanBeNull	src/expr.c	/^int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCanBeNull	tsrc/expr.c	/^int sqlite3ExprCanBeNull(const Expr *p){$/;"	f
sqlite3ExprCheckHeight	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	sqlite3.c	16775;"	d	file:
sqlite3ExprCheckHeight	src/expr.c	/^int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	src/sqliteInt.h	4176;"	d
sqlite3ExprCheckHeight	tsrc/expr.c	/^int sqlite3ExprCheckHeight(Parse *pParse, int nHeight){$/;"	f
sqlite3ExprCheckHeight	tsrc/sqliteInt.h	4176;"	d
sqlite3ExprCode	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCode	src/expr.c	/^void sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCode	tsrc/expr.c	/^void sqlite3ExprCode(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	src/expr.c	/^void sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAndCache	tsrc/expr.c	/^void sqlite3ExprCodeAndCache(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeAtInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeAtInit($/;"	f
sqlite3ExprCodeAtInit	src/expr.c	/^void sqlite3ExprCodeAtInit($/;"	f
sqlite3ExprCodeAtInit	tsrc/expr.c	/^void sqlite3ExprCodeAtInit($/;"	f
sqlite3ExprCodeCopy	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeCopy(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeCopy	src/expr.c	/^void sqlite3ExprCodeCopy(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeCopy	tsrc/expr.c	/^void sqlite3ExprCodeCopy(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeExprList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeExprList	src/expr.c	/^int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeExprList	tsrc/expr.c	/^int sqlite3ExprCodeExprList($/;"	f
sqlite3ExprCodeFactorable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeFactorable(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeFactorable	src/expr.c	/^void sqlite3ExprCodeFactorable(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeFactorable	tsrc/expr.c	/^void sqlite3ExprCodeFactorable(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeGetColumn	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumn	src/expr.c	/^int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumn	tsrc/expr.c	/^int sqlite3ExprCodeGetColumn($/;"	f
sqlite3ExprCodeGetColumnOfTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeGetColumnOfTable	src/expr.c	/^void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeGetColumnOfTable	tsrc/expr.c	/^void sqlite3ExprCodeGetColumnOfTable($/;"	f
sqlite3ExprCodeGetColumnToReg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeGetColumnToReg($/;"	f
sqlite3ExprCodeGetColumnToReg	src/expr.c	/^void sqlite3ExprCodeGetColumnToReg($/;"	f
sqlite3ExprCodeGetColumnToReg	tsrc/expr.c	/^void sqlite3ExprCodeGetColumnToReg($/;"	f
sqlite3ExprCodeIN	sqlite3.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeIN	src/expr.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeIN	tsrc/expr.c	/^static void sqlite3ExprCodeIN($/;"	f	file:
sqlite3ExprCodeLoadIndexColumn	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeLoadIndexColumn($/;"	f
sqlite3ExprCodeLoadIndexColumn	src/expr.c	/^void sqlite3ExprCodeLoadIndexColumn($/;"	f
sqlite3ExprCodeLoadIndexColumn	tsrc/expr.c	/^void sqlite3ExprCodeLoadIndexColumn($/;"	f
sqlite3ExprCodeMove	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeMove	src/expr.c	/^void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeMove	tsrc/expr.c	/^void sqlite3ExprCodeMove(Parse *pParse, int iFrom, int iTo, int nReg){$/;"	f
sqlite3ExprCodeTarget	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTarget	src/expr.c	/^int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTarget	tsrc/expr.c	/^int sqlite3ExprCodeTarget(Parse *pParse, Expr *pExpr, int target){$/;"	f
sqlite3ExprCodeTemp	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCodeTemp	src/expr.c	/^int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCodeTemp	tsrc/expr.c	/^int sqlite3ExprCodeTemp(Parse *pParse, Expr *pExpr, int *pReg){$/;"	f
sqlite3ExprCollSeq	sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCollSeq	src/expr.c	/^CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCollSeq	tsrc/expr.c	/^CollSeq *sqlite3ExprCollSeq(Parse *pParse, Expr *pExpr){$/;"	f
sqlite3ExprCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCompare(Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprCompare	src/expr.c	/^int sqlite3ExprCompare(Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprCompare	tsrc/expr.c	/^int sqlite3ExprCompare(Expr *pA, Expr *pB, int iTab){$/;"	f
sqlite3ExprContainsSubquery	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprContainsSubquery(Expr *p){$/;"	f
sqlite3ExprContainsSubquery	src/expr.c	/^int sqlite3ExprContainsSubquery(Expr *p){$/;"	f
sqlite3ExprContainsSubquery	tsrc/expr.c	/^int sqlite3ExprContainsSubquery(Expr *p){$/;"	f
sqlite3ExprCoveredByIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprCoveredByIndex($/;"	f
sqlite3ExprCoveredByIndex	src/expr.c	/^int sqlite3ExprCoveredByIndex($/;"	f
sqlite3ExprCoveredByIndex	tsrc/expr.c	/^int sqlite3ExprCoveredByIndex($/;"	f
sqlite3ExprDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDelete	src/expr.c	/^void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDelete	tsrc/expr.c	/^void sqlite3ExprDelete(sqlite3 *db, Expr *p){$/;"	f
sqlite3ExprDeleteNN	sqlite3.c	/^static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p){$/;"	f	file:
sqlite3ExprDeleteNN	src/expr.c	/^static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p){$/;"	f	file:
sqlite3ExprDeleteNN	tsrc/expr.c	/^static SQLITE_NOINLINE void sqlite3ExprDeleteNN(sqlite3 *db, Expr *p){$/;"	f	file:
sqlite3ExprDup	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprDup	src/expr.c	/^Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprDup	tsrc/expr.c	/^Expr *sqlite3ExprDup(sqlite3 *db, Expr *p, int flags){$/;"	f
sqlite3ExprFunction	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprFunction	src/expr.c	/^Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprFunction	tsrc/expr.c	/^Expr *sqlite3ExprFunction(Parse *pParse, ExprList *pList, Token *pToken){$/;"	f
sqlite3ExprIfFalse	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfFalse	src/expr.c	/^void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfFalse	tsrc/expr.c	/^void sqlite3ExprIfFalse(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfFalseDup	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfFalseDup(Parse *pParse, Expr *pExpr, int dest,int jumpIfNull){$/;"	f
sqlite3ExprIfFalseDup	src/expr.c	/^void sqlite3ExprIfFalseDup(Parse *pParse, Expr *pExpr, int dest,int jumpIfNull){$/;"	f
sqlite3ExprIfFalseDup	tsrc/expr.c	/^void sqlite3ExprIfFalseDup(Parse *pParse, Expr *pExpr, int dest,int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	src/expr.c	/^void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprIfTrue	tsrc/expr.c	/^void sqlite3ExprIfTrue(Parse *pParse, Expr *pExpr, int dest, int jumpIfNull){$/;"	f
sqlite3ExprImpliesExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprImpliesExpr(Expr *pE1, Expr *pE2, int iTab){$/;"	f
sqlite3ExprImpliesExpr	src/expr.c	/^int sqlite3ExprImpliesExpr(Expr *pE1, Expr *pE2, int iTab){$/;"	f
sqlite3ExprImpliesExpr	tsrc/expr.c	/^int sqlite3ExprImpliesExpr(Expr *pE1, Expr *pE2, int iTab){$/;"	f
sqlite3ExprIsConstant	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstant	src/expr.c	/^int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstant	tsrc/expr.c	/^int sqlite3ExprIsConstant(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	src/expr.c	/^int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantNotJoin	tsrc/expr.c	/^int sqlite3ExprIsConstantNotJoin(Expr *p){$/;"	f
sqlite3ExprIsConstantOrFunction	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsConstantOrFunction(Expr *p, u8 isInit){$/;"	f
sqlite3ExprIsConstantOrFunction	src/expr.c	/^int sqlite3ExprIsConstantOrFunction(Expr *p, u8 isInit){$/;"	f
sqlite3ExprIsConstantOrFunction	tsrc/expr.c	/^int sqlite3ExprIsConstantOrFunction(Expr *p, u8 isInit){$/;"	f
sqlite3ExprIsInteger	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprIsInteger	src/expr.c	/^int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprIsInteger	tsrc/expr.c	/^int sqlite3ExprIsInteger(Expr *p, int *pValue){$/;"	f
sqlite3ExprIsTableConstant	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprIsTableConstant(Expr *p, int iCur){$/;"	f
sqlite3ExprIsTableConstant	src/expr.c	/^int sqlite3ExprIsTableConstant(Expr *p, int iCur){$/;"	f
sqlite3ExprIsTableConstant	tsrc/expr.c	/^int sqlite3ExprIsTableConstant(Expr *p, int iCur){$/;"	f
sqlite3ExprListAppend	sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListAppend	src/expr.c	/^ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListAppend	tsrc/expr.c	/^ExprList *sqlite3ExprListAppend($/;"	f
sqlite3ExprListCheckLength	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCheckLength	src/expr.c	/^void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCheckLength	tsrc/expr.c	/^void sqlite3ExprListCheckLength($/;"	f
sqlite3ExprListCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprListCompare(ExprList *pA, ExprList *pB, int iTab){$/;"	f
sqlite3ExprListCompare	src/expr.c	/^int sqlite3ExprListCompare(ExprList *pA, ExprList *pB, int iTab){$/;"	f
sqlite3ExprListCompare	tsrc/expr.c	/^int sqlite3ExprListCompare(ExprList *pA, ExprList *pB, int iTab){$/;"	f
sqlite3ExprListDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDelete	src/expr.c	/^void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDelete	tsrc/expr.c	/^void sqlite3ExprListDelete(sqlite3 *db, ExprList *pList){$/;"	f
sqlite3ExprListDup	sqlite3.c	/^SQLITE_PRIVATE ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListDup	src/expr.c	/^ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListDup	tsrc/expr.c	/^ExprList *sqlite3ExprListDup(sqlite3 *db, ExprList *p, int flags){$/;"	f
sqlite3ExprListFlags	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3ExprListFlags(const ExprList *pList){$/;"	f
sqlite3ExprListFlags	src/expr.c	/^u32 sqlite3ExprListFlags(const ExprList *pList){$/;"	f
sqlite3ExprListFlags	tsrc/expr.c	/^u32 sqlite3ExprListFlags(const ExprList *pList){$/;"	f
sqlite3ExprListSetName	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetName	src/expr.c	/^void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetName	tsrc/expr.c	/^void sqlite3ExprListSetName($/;"	f
sqlite3ExprListSetSortOrder	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSortOrder(ExprList *p, int iSortOrder){$/;"	f
sqlite3ExprListSetSortOrder	src/expr.c	/^void sqlite3ExprListSetSortOrder(ExprList *p, int iSortOrder){$/;"	f
sqlite3ExprListSetSortOrder	tsrc/expr.c	/^void sqlite3ExprListSetSortOrder(ExprList *p, int iSortOrder){$/;"	f
sqlite3ExprListSetSpan	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprListSetSpan	src/expr.c	/^void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprListSetSpan	tsrc/expr.c	/^void sqlite3ExprListSetSpan($/;"	f
sqlite3ExprNeedsNoAffinityChange	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprNeedsNoAffinityChange	src/expr.c	/^int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprNeedsNoAffinityChange	tsrc/expr.c	/^int sqlite3ExprNeedsNoAffinityChange(const Expr *p, char aff){$/;"	f
sqlite3ExprSetHeightAndFlags	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ExprSetHeightAndFlags(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSetHeightAndFlags	src/expr.c	/^void sqlite3ExprSetHeightAndFlags(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSetHeightAndFlags	tsrc/expr.c	/^void sqlite3ExprSetHeightAndFlags(Parse *pParse, Expr *p){$/;"	f
sqlite3ExprSkipCollate	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3ExprSkipCollate(Expr *pExpr){$/;"	f
sqlite3ExprSkipCollate	src/expr.c	/^Expr *sqlite3ExprSkipCollate(Expr *pExpr){$/;"	f
sqlite3ExprSkipCollate	tsrc/expr.c	/^Expr *sqlite3ExprSkipCollate(Expr *pExpr){$/;"	f
sqlite3ExprWalkNoop	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f
sqlite3ExprWalkNoop	src/select.c	/^int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f
sqlite3ExprWalkNoop	tsrc/select.c	/^int sqlite3ExprWalkNoop(Walker *NotUsed, Expr *NotUsed2){$/;"	f
sqlite3Fault	src/test_malloc.c	/^static void sqlite3Fault(void){$/;"	f	file:
sqlite3FaultSim	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FaultSim(int iTest){$/;"	f
sqlite3FaultSim	sqlite3.c	16183;"	d	file:
sqlite3FaultSim	src/sqliteInt.h	3584;"	d
sqlite3FaultSim	src/util.c	/^int sqlite3FaultSim(int iTest){$/;"	f
sqlite3FaultSim	tsrc/sqliteInt.h	3584;"	d
sqlite3FaultSim	tsrc/util.c	/^int sqlite3FaultSim(int iTest){$/;"	f
sqlite3FileSuffix3	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	sqlite3.c	16512;"	d	file:
sqlite3FileSuffix3	src/sqliteInt.h	3913;"	d
sqlite3FileSuffix3	src/util.c	/^void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FileSuffix3	tsrc/sqliteInt.h	3913;"	d
sqlite3FileSuffix3	tsrc/util.c	/^void sqlite3FileSuffix3(const char *zBaseFilename, char *z){$/;"	f
sqlite3FindCollSeq	sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindCollSeq	src/callback.c	/^CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindCollSeq	tsrc/callback.c	/^CollSeq *sqlite3FindCollSeq($/;"	f
sqlite3FindDb	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDb	src/build.c	/^int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDb	tsrc/build.c	/^int sqlite3FindDb(sqlite3 *db, Token *pName){$/;"	f
sqlite3FindDbName	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindDbName	src/build.c	/^int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindDbName	tsrc/build.c	/^int sqlite3FindDbName(sqlite3 *db, const char *zName){$/;"	f
sqlite3FindFunction	sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindFunction	src/callback.c	/^FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindFunction	tsrc/callback.c	/^FuncDef *sqlite3FindFunction($/;"	f
sqlite3FindInIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FindInIndex(Parse *pParse, Expr *pX, u32 inFlags, int *prRhsHasNull){$/;"	f
sqlite3FindInIndex	src/expr.c	/^int sqlite3FindInIndex(Parse *pParse, Expr *pX, u32 inFlags, int *prRhsHasNull){$/;"	f
sqlite3FindInIndex	tsrc/expr.c	/^int sqlite3FindInIndex(Parse *pParse, Expr *pX, u32 inFlags, int *prRhsHasNull){$/;"	f
sqlite3FindIndex	sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindIndex	src/build.c	/^Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindIndex	tsrc/build.c	/^Index *sqlite3FindIndex(sqlite3 *db, const char *zName, const char *zDb){$/;"	f
sqlite3FindTable	sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FindTable	src/build.c	/^Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FindTable	tsrc/build.c	/^Table *sqlite3FindTable(sqlite3 *db, const char *zName, const char *zDatabase){$/;"	f
sqlite3FinishCoding	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishCoding	src/build.c	/^void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishCoding	tsrc/build.c	/^void sqlite3FinishCoding(Parse *pParse){$/;"	f
sqlite3FinishTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FinishTrigger($/;"	f
sqlite3FinishTrigger	src/trigger.c	/^void sqlite3FinishTrigger($/;"	f
sqlite3FinishTrigger	tsrc/trigger.c	/^void sqlite3FinishTrigger($/;"	f
sqlite3FixExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExpr($/;"	f
sqlite3FixExpr	src/attach.c	/^int sqlite3FixExpr($/;"	f
sqlite3FixExpr	tsrc/attach.c	/^int sqlite3FixExpr($/;"	f
sqlite3FixExprList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixExprList($/;"	f
sqlite3FixExprList	src/attach.c	/^int sqlite3FixExprList($/;"	f
sqlite3FixExprList	tsrc/attach.c	/^int sqlite3FixExprList($/;"	f
sqlite3FixInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FixInit($/;"	f
sqlite3FixInit	src/attach.c	/^void sqlite3FixInit($/;"	f
sqlite3FixInit	tsrc/attach.c	/^void sqlite3FixInit($/;"	f
sqlite3FixSelect	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSelect($/;"	f
sqlite3FixSelect	src/attach.c	/^int sqlite3FixSelect($/;"	f
sqlite3FixSelect	tsrc/attach.c	/^int sqlite3FixSelect($/;"	f
sqlite3FixSrcList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixSrcList($/;"	f
sqlite3FixSrcList	src/attach.c	/^int sqlite3FixSrcList($/;"	f
sqlite3FixSrcList	tsrc/attach.c	/^int sqlite3FixSrcList($/;"	f
sqlite3FixTriggerStep	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FixTriggerStep($/;"	f
sqlite3FixTriggerStep	src/attach.c	/^int sqlite3FixTriggerStep($/;"	f
sqlite3FixTriggerStep	tsrc/attach.c	/^int sqlite3FixTriggerStep($/;"	f
sqlite3FkActions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkActions($/;"	f
sqlite3FkActions	sqlite3.c	16710;"	d	file:
sqlite3FkActions	src/fkey.c	/^void sqlite3FkActions($/;"	f
sqlite3FkActions	src/sqliteInt.h	4111;"	d
sqlite3FkActions	tsrc/fkey.c	/^void sqlite3FkActions($/;"	f
sqlite3FkActions	tsrc/sqliteInt.h	4111;"	d
sqlite3FkCheck	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkCheck($/;"	f
sqlite3FkCheck	sqlite3.c	16711;"	d	file:
sqlite3FkCheck	src/fkey.c	/^void sqlite3FkCheck($/;"	f
sqlite3FkCheck	src/sqliteInt.h	4112;"	d
sqlite3FkCheck	tsrc/fkey.c	/^void sqlite3FkCheck($/;"	f
sqlite3FkCheck	tsrc/sqliteInt.h	4112;"	d
sqlite3FkDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	sqlite3.c	16720;"	d	file:
sqlite3FkDelete	src/fkey.c	/^void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	src/sqliteInt.h	4121;"	d
sqlite3FkDelete	tsrc/fkey.c	/^void sqlite3FkDelete(sqlite3 *db, Table *pTab){$/;"	f
sqlite3FkDelete	tsrc/sqliteInt.h	4121;"	d
sqlite3FkDropTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	sqlite3.c	16712;"	d	file:
sqlite3FkDropTable	src/fkey.c	/^void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	src/sqliteInt.h	4113;"	d
sqlite3FkDropTable	tsrc/fkey.c	/^void sqlite3FkDropTable(Parse *pParse, SrcList *pName, Table *pTab){$/;"	f
sqlite3FkDropTable	tsrc/sqliteInt.h	4113;"	d
sqlite3FkLocateIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkLocateIndex($/;"	f
sqlite3FkLocateIndex	sqlite3.c	16721;"	d	file:
sqlite3FkLocateIndex	src/fkey.c	/^int sqlite3FkLocateIndex($/;"	f
sqlite3FkLocateIndex	src/sqliteInt.h	4122;"	d
sqlite3FkLocateIndex	tsrc/fkey.c	/^int sqlite3FkLocateIndex($/;"	f
sqlite3FkLocateIndex	tsrc/sqliteInt.h	4122;"	d
sqlite3FkOldmask	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	sqlite3.c	16713;"	d	file:
sqlite3FkOldmask	src/fkey.c	/^u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	src/sqliteInt.h	4114;"	d
sqlite3FkOldmask	tsrc/fkey.c	/^u32 sqlite3FkOldmask($/;"	f
sqlite3FkOldmask	tsrc/sqliteInt.h	4114;"	d
sqlite3FkReferences	sqlite3.c	/^SQLITE_PRIVATE FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkReferences	src/fkey.c	/^FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkReferences	tsrc/fkey.c	/^FKey *sqlite3FkReferences(Table *pTab){$/;"	f
sqlite3FkRequired	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FkRequired($/;"	f
sqlite3FkRequired	sqlite3.c	16714;"	d	file:
sqlite3FkRequired	src/fkey.c	/^int sqlite3FkRequired($/;"	f
sqlite3FkRequired	src/sqliteInt.h	4115;"	d
sqlite3FkRequired	tsrc/fkey.c	/^int sqlite3FkRequired($/;"	f
sqlite3FkRequired	tsrc/sqliteInt.h	4115;"	d
sqlite3Fts1HashClear	ext/fts1/fts1_hash.c	/^void sqlite3Fts1HashClear(fts1Hash *pH){$/;"	f
sqlite3Fts1HashClear	tsrc/fts1_hash.c	/^void sqlite3Fts1HashClear(fts1Hash *pH){$/;"	f
sqlite3Fts1HashFind	ext/fts1/fts1_hash.c	/^void *sqlite3Fts1HashFind(const fts1Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts1HashFind	tsrc/fts1_hash.c	/^void *sqlite3Fts1HashFind(const fts1Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts1HashInit	ext/fts1/fts1_hash.c	/^void sqlite3Fts1HashInit(fts1Hash *pNew, int keyClass, int copyKey){$/;"	f
sqlite3Fts1HashInit	tsrc/fts1_hash.c	/^void sqlite3Fts1HashInit(fts1Hash *pNew, int keyClass, int copyKey){$/;"	f
sqlite3Fts1HashInsert	ext/fts1/fts1_hash.c	/^void *sqlite3Fts1HashInsert($/;"	f
sqlite3Fts1HashInsert	tsrc/fts1_hash.c	/^void *sqlite3Fts1HashInsert($/;"	f
sqlite3Fts1Init	ext/fts1/fts1.c	/^int sqlite3Fts1Init(sqlite3 *db){$/;"	f
sqlite3Fts1Init	tsrc/fts1.c	/^int sqlite3Fts1Init(sqlite3 *db){$/;"	f
sqlite3Fts1PorterTokenizerModule	ext/fts1/fts1_porter.c	/^void sqlite3Fts1PorterTokenizerModule($/;"	f
sqlite3Fts1PorterTokenizerModule	tsrc/fts1_porter.c	/^void sqlite3Fts1PorterTokenizerModule($/;"	f
sqlite3Fts1SimpleTokenizerModule	ext/fts1/fts1_tokenizer1.c	/^void sqlite3Fts1SimpleTokenizerModule($/;"	f
sqlite3Fts1SimpleTokenizerModule	tsrc/fts1_tokenizer1.c	/^void sqlite3Fts1SimpleTokenizerModule($/;"	f
sqlite3Fts2HashClear	ext/fts2/fts2_hash.c	/^void sqlite3Fts2HashClear(fts2Hash *pH){$/;"	f
sqlite3Fts2HashClear	tsrc/fts2_hash.c	/^void sqlite3Fts2HashClear(fts2Hash *pH){$/;"	f
sqlite3Fts2HashFind	ext/fts2/fts2_hash.c	/^void *sqlite3Fts2HashFind(const fts2Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts2HashFind	tsrc/fts2_hash.c	/^void *sqlite3Fts2HashFind(const fts2Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts2HashInit	ext/fts2/fts2_hash.c	/^void sqlite3Fts2HashInit(fts2Hash *pNew, int keyClass, int copyKey){$/;"	f
sqlite3Fts2HashInit	tsrc/fts2_hash.c	/^void sqlite3Fts2HashInit(fts2Hash *pNew, int keyClass, int copyKey){$/;"	f
sqlite3Fts2HashInsert	ext/fts2/fts2_hash.c	/^void *sqlite3Fts2HashInsert($/;"	f
sqlite3Fts2HashInsert	tsrc/fts2_hash.c	/^void *sqlite3Fts2HashInsert($/;"	f
sqlite3Fts2IcuTokenizerModule	ext/fts2/fts2_icu.c	/^void sqlite3Fts2IcuTokenizerModule($/;"	f
sqlite3Fts2IcuTokenizerModule	tsrc/fts2_icu.c	/^void sqlite3Fts2IcuTokenizerModule($/;"	f
sqlite3Fts2Init	ext/fts2/fts2.c	/^int sqlite3Fts2Init(sqlite3 *db){$/;"	f
sqlite3Fts2Init	tsrc/fts2.c	/^int sqlite3Fts2Init(sqlite3 *db){$/;"	f
sqlite3Fts2InitHashTable	ext/fts2/fts2_tokenizer.c	/^int sqlite3Fts2InitHashTable($/;"	f
sqlite3Fts2InitHashTable	tsrc/fts2_tokenizer.c	/^int sqlite3Fts2InitHashTable($/;"	f
sqlite3Fts2PorterTokenizerModule	ext/fts2/fts2_porter.c	/^void sqlite3Fts2PorterTokenizerModule($/;"	f
sqlite3Fts2PorterTokenizerModule	tsrc/fts2_porter.c	/^void sqlite3Fts2PorterTokenizerModule($/;"	f
sqlite3Fts2SimpleTokenizerModule	ext/fts2/fts2_tokenizer1.c	/^void sqlite3Fts2SimpleTokenizerModule($/;"	f
sqlite3Fts2SimpleTokenizerModule	tsrc/fts2_tokenizer1.c	/^void sqlite3Fts2SimpleTokenizerModule($/;"	f
sqlite3Fts3AllSegdirs	ext/fts3/fts3_write.c	/^int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3AllSegdirs	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3AllSegdirs	tsrc/fts3_write.c	/^int sqlite3Fts3AllSegdirs($/;"	f
sqlite3Fts3Always	ext/fts3/fts3.c	/^int sqlite3Fts3Always(int b) { assert( b ); return b; }$/;"	f
sqlite3Fts3Always	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Always(int b) { assert( b ); return b; }$/;"	f
sqlite3Fts3Always	tsrc/fts3.c	/^int sqlite3Fts3Always(int b) { assert( b ); return b; }$/;"	f
sqlite3Fts3CacheDeferredDoclists	ext/fts3/fts3Int.h	486;"	d
sqlite3Fts3CacheDeferredDoclists	ext/fts3/fts3_write.c	/^int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3CacheDeferredDoclists	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3CacheDeferredDoclists	sqlite3.c	141910;"	d	file:
sqlite3Fts3CacheDeferredDoclists	tsrc/fts3Int.h	486;"	d
sqlite3Fts3CacheDeferredDoclists	tsrc/fts3_write.c	/^int sqlite3Fts3CacheDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3Corrupt	ext/fts3/fts3.c	/^int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3Corrupt	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3Corrupt	tsrc/fts3.c	/^int sqlite3Fts3Corrupt(){$/;"	f
sqlite3Fts3CreateStatTable	ext/fts3/fts3.c	/^void sqlite3Fts3CreateStatTable(int *pRc, Fts3Table *p){$/;"	f
sqlite3Fts3CreateStatTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3CreateStatTable(int *pRc, Fts3Table *p){$/;"	f
sqlite3Fts3CreateStatTable	tsrc/fts3.c	/^void sqlite3Fts3CreateStatTable(int *pRc, Fts3Table *p){$/;"	f
sqlite3Fts3DeferToken	ext/fts3/fts3Int.h	485;"	d
sqlite3Fts3DeferToken	ext/fts3/fts3_write.c	/^int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferToken	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferToken	sqlite3.c	141909;"	d	file:
sqlite3Fts3DeferToken	tsrc/fts3Int.h	485;"	d
sqlite3Fts3DeferToken	tsrc/fts3_write.c	/^int sqlite3Fts3DeferToken($/;"	f
sqlite3Fts3DeferredTokenList	ext/fts3/fts3Int.h	488;"	d
sqlite3Fts3DeferredTokenList	ext/fts3/fts3_write.c	/^int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3DeferredTokenList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3DeferredTokenList	sqlite3.c	141912;"	d	file:
sqlite3Fts3DeferredTokenList	tsrc/fts3Int.h	488;"	d
sqlite3Fts3DeferredTokenList	tsrc/fts3_write.c	/^int sqlite3Fts3DeferredTokenList($/;"	f
sqlite3Fts3Dequote	ext/fts3/fts3.c	/^void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3Dequote	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3Dequote	tsrc/fts3.c	/^void sqlite3Fts3Dequote(char *z){$/;"	f
sqlite3Fts3DoclistNext	ext/fts3/fts3.c	/^void sqlite3Fts3DoclistNext($/;"	f
sqlite3Fts3DoclistNext	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistNext($/;"	f
sqlite3Fts3DoclistNext	tsrc/fts3.c	/^void sqlite3Fts3DoclistNext($/;"	f
sqlite3Fts3DoclistPrev	ext/fts3/fts3.c	/^void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3DoclistPrev	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3DoclistPrev	tsrc/fts3.c	/^void sqlite3Fts3DoclistPrev($/;"	f
sqlite3Fts3ErrMsg	ext/fts3/fts3.c	/^void sqlite3Fts3ErrMsg(char **pzErr, const char *zFormat, ...){$/;"	f
sqlite3Fts3ErrMsg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ErrMsg(char **pzErr, const char *zFormat, ...){$/;"	f
sqlite3Fts3ErrMsg	tsrc/fts3.c	/^void sqlite3Fts3ErrMsg(char **pzErr, const char *zFormat, ...){$/;"	f
sqlite3Fts3EvalPhraseCleanup	ext/fts3/fts3.c	/^void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhraseCleanup	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhraseCleanup	tsrc/fts3.c	/^void sqlite3Fts3EvalPhraseCleanup(Fts3Phrase *pPhrase){$/;"	f
sqlite3Fts3EvalPhrasePoslist	ext/fts3/fts3.c	/^int sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhrasePoslist	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhrasePoslist	tsrc/fts3.c	/^int sqlite3Fts3EvalPhrasePoslist($/;"	f
sqlite3Fts3EvalPhraseStats	ext/fts3/fts3.c	/^int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3EvalPhraseStats	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3EvalPhraseStats	tsrc/fts3.c	/^int sqlite3Fts3EvalPhraseStats($/;"	f
sqlite3Fts3EvalTestDeferred	ext/fts3/fts3.c	/^int sqlite3Fts3EvalTestDeferred(Fts3Cursor *pCsr, int *pRc){$/;"	f
sqlite3Fts3EvalTestDeferred	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3EvalTestDeferred(Fts3Cursor *pCsr, int *pRc){$/;"	f
sqlite3Fts3EvalTestDeferred	tsrc/fts3.c	/^int sqlite3Fts3EvalTestDeferred(Fts3Cursor *pCsr, int *pRc){$/;"	f
sqlite3Fts3ExprFree	ext/fts3/fts3_expr.c	/^void sqlite3Fts3ExprFree(Fts3Expr *pDel){$/;"	f
sqlite3Fts3ExprFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3ExprFree(Fts3Expr *pDel){$/;"	f
sqlite3Fts3ExprFree	tsrc/fts3_expr.c	/^void sqlite3Fts3ExprFree(Fts3Expr *pDel){$/;"	f
sqlite3Fts3ExprInitTestInterface	ext/fts3/fts3_expr.c	/^int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprInitTestInterface	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprInitTestInterface	tsrc/fts3_expr.c	/^int sqlite3Fts3ExprInitTestInterface(sqlite3* db){$/;"	f
sqlite3Fts3ExprParse	ext/fts3/fts3_expr.c	/^int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3ExprParse	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3ExprParse	tsrc/fts3_expr.c	/^int sqlite3Fts3ExprParse($/;"	f
sqlite3Fts3FirstFilter	ext/fts3/fts3.c	/^int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FirstFilter	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FirstFilter	tsrc/fts3.c	/^int sqlite3Fts3FirstFilter($/;"	f
sqlite3Fts3FreeDeferredDoclists	ext/fts3/fts3Int.h	487;"	d
sqlite3Fts3FreeDeferredDoclists	ext/fts3/fts3_write.c	/^void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredDoclists	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredDoclists	sqlite3.c	141911;"	d	file:
sqlite3Fts3FreeDeferredDoclists	tsrc/fts3Int.h	487;"	d
sqlite3Fts3FreeDeferredDoclists	tsrc/fts3_write.c	/^void sqlite3Fts3FreeDeferredDoclists(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	ext/fts3/fts3Int.h	484;"	d
sqlite3Fts3FreeDeferredTokens	ext/fts3/fts3_write.c	/^void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3FreeDeferredTokens	sqlite3.c	141908;"	d	file:
sqlite3Fts3FreeDeferredTokens	tsrc/fts3Int.h	484;"	d
sqlite3Fts3FreeDeferredTokens	tsrc/fts3_write.c	/^void sqlite3Fts3FreeDeferredTokens(Fts3Cursor *pCsr){$/;"	f
sqlite3Fts3GetVarint	ext/fts3/fts3.c	/^int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint	tsrc/fts3.c	/^int sqlite3Fts3GetVarint(const char *p, sqlite_int64 *v){$/;"	f
sqlite3Fts3GetVarint32	ext/fts3/fts3.c	/^int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3GetVarint32	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3GetVarint32	tsrc/fts3.c	/^int sqlite3Fts3GetVarint32(const char *p, int *pi){$/;"	f
sqlite3Fts3HashClear	ext/fts3/fts3_hash.c	/^void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashClear	tsrc/fts3_hash.c	/^void sqlite3Fts3HashClear(Fts3Hash *pH){$/;"	f
sqlite3Fts3HashFind	ext/fts3/fts3_hash.c	/^void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFind	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFind	tsrc/fts3_hash.c	/^void *sqlite3Fts3HashFind(const Fts3Hash *pH, const void *pKey, int nKey){$/;"	f
sqlite3Fts3HashFindElem	ext/fts3/fts3_hash.c	/^Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashFindElem	sqlite3.c	/^SQLITE_PRIVATE Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashFindElem	tsrc/fts3_hash.c	/^Fts3HashElem *sqlite3Fts3HashFindElem($/;"	f
sqlite3Fts3HashInit	ext/fts3/fts3_hash.c	/^void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInit	tsrc/fts3_hash.c	/^void sqlite3Fts3HashInit(Fts3Hash *pNew, char keyClass, char copyKey){$/;"	f
sqlite3Fts3HashInsert	ext/fts3/fts3_hash.c	/^void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3HashInsert	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3HashInsert	tsrc/fts3_hash.c	/^void *sqlite3Fts3HashInsert($/;"	f
sqlite3Fts3IcuTokenizerModule	ext/fts3/fts3_icu.c	/^void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3IcuTokenizerModule	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3IcuTokenizerModule	tsrc/fts3_icu.c	/^void sqlite3Fts3IcuTokenizerModule($/;"	f
sqlite3Fts3Incrmerge	ext/fts3/fts3_write.c	/^int sqlite3Fts3Incrmerge(Fts3Table *p, int nMerge, int nMin){$/;"	f
sqlite3Fts3Incrmerge	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Incrmerge(Fts3Table *p, int nMerge, int nMin){$/;"	f
sqlite3Fts3Incrmerge	tsrc/fts3_write.c	/^int sqlite3Fts3Incrmerge(Fts3Table *p, int nMerge, int nMin){$/;"	f
sqlite3Fts3Init	ext/fts3/fts3.c	/^int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3Init	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3Init	tsrc/fts3.c	/^int sqlite3Fts3Init(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	ext/fts3/fts3_aux.c	/^int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitAux	tsrc/fts3_aux.c	/^int sqlite3Fts3InitAux(sqlite3 *db){$/;"	f
sqlite3Fts3InitHashTable	ext/fts3/fts3_tokenizer.c	/^int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitHashTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitHashTable	tsrc/fts3_tokenizer.c	/^int sqlite3Fts3InitHashTable($/;"	f
sqlite3Fts3InitTerm	ext/fts3/fts3_term.c	/^int sqlite3Fts3InitTerm(sqlite3 *db){$/;"	f
sqlite3Fts3InitTok	ext/fts3/fts3_tokenize_vtab.c	/^int sqlite3Fts3InitTok(sqlite3 *db, Fts3Hash *pHash){$/;"	f
sqlite3Fts3InitTok	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTok(sqlite3 *db, Fts3Hash *pHash){$/;"	f
sqlite3Fts3InitTok	tsrc/fts3_tokenize_vtab.c	/^int sqlite3Fts3InitTok(sqlite3 *db, Fts3Hash *pHash){$/;"	f
sqlite3Fts3InitTokenizer	ext/fts3/fts3_tokenizer.c	/^int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3InitTokenizer	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3InitTokenizer	tsrc/fts3_tokenizer.c	/^int sqlite3Fts3InitTokenizer($/;"	f
sqlite3Fts3IsIdChar	ext/fts3/fts3_tokenizer.c	/^int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3IsIdChar	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3IsIdChar	tsrc/fts3_tokenizer.c	/^int sqlite3Fts3IsIdChar(char c){$/;"	f
sqlite3Fts3MIBufferFree	ext/fts3/fts3_snippet.c	/^void sqlite3Fts3MIBufferFree(MatchinfoBuffer *p){$/;"	f
sqlite3Fts3MIBufferFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3MIBufferFree(MatchinfoBuffer *p){$/;"	f
sqlite3Fts3MIBufferFree	tsrc/fts3_snippet.c	/^void sqlite3Fts3MIBufferFree(MatchinfoBuffer *p){$/;"	f
sqlite3Fts3Matchinfo	ext/fts3/fts3_snippet.c	/^void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3Matchinfo	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3Matchinfo	tsrc/fts3_snippet.c	/^void sqlite3Fts3Matchinfo($/;"	f
sqlite3Fts3MaxLevel	ext/fts3/fts3_write.c	/^int sqlite3Fts3MaxLevel(Fts3Table *p, int *pnMax){$/;"	f
sqlite3Fts3MaxLevel	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MaxLevel(Fts3Table *p, int *pnMax){$/;"	f
sqlite3Fts3MaxLevel	tsrc/fts3_write.c	/^int sqlite3Fts3MaxLevel(Fts3Table *p, int *pnMax){$/;"	f
sqlite3Fts3MsrIncrNext	ext/fts3/fts3_write.c	/^int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrNext	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrNext	tsrc/fts3_write.c	/^int sqlite3Fts3MsrIncrNext($/;"	f
sqlite3Fts3MsrIncrRestart	ext/fts3/fts3_write.c	/^int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrRestart	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrRestart	tsrc/fts3_write.c	/^int sqlite3Fts3MsrIncrRestart(Fts3MultiSegReader *pCsr){$/;"	f
sqlite3Fts3MsrIncrStart	ext/fts3/fts3_write.c	/^int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrIncrStart	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrIncrStart	tsrc/fts3_write.c	/^int sqlite3Fts3MsrIncrStart($/;"	f
sqlite3Fts3MsrOvfl	ext/fts3/fts3_write.c	/^int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3MsrOvfl	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3MsrOvfl	tsrc/fts3_write.c	/^int sqlite3Fts3MsrOvfl($/;"	f
sqlite3Fts3Never	ext/fts3/fts3.c	/^int sqlite3Fts3Never(int b)  { assert( !b ); return b; }$/;"	f
sqlite3Fts3Never	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Never(int b)  { assert( !b ); return b; }$/;"	f
sqlite3Fts3Never	tsrc/fts3.c	/^int sqlite3Fts3Never(int b)  { assert( !b ); return b; }$/;"	f
sqlite3Fts3NextToken	ext/fts3/fts3_tokenizer.c	/^const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3NextToken	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3NextToken	tsrc/fts3_tokenizer.c	/^const char *sqlite3Fts3NextToken(const char *zStr, int *pn){$/;"	f
sqlite3Fts3Offsets	ext/fts3/fts3_snippet.c	/^void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3Offsets	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3Offsets	tsrc/fts3_snippet.c	/^void sqlite3Fts3Offsets($/;"	f
sqlite3Fts3OpenTokenizer	ext/fts3/fts3_expr.c	/^int sqlite3Fts3OpenTokenizer($/;"	f
sqlite3Fts3OpenTokenizer	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3OpenTokenizer($/;"	f
sqlite3Fts3OpenTokenizer	tsrc/fts3_expr.c	/^int sqlite3Fts3OpenTokenizer($/;"	f
sqlite3Fts3Optimize	ext/fts3/fts3_write.c	/^int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3Optimize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3Optimize	tsrc/fts3_write.c	/^int sqlite3Fts3Optimize(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	ext/fts3/fts3_write.c	/^void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsClear	tsrc/fts3_write.c	/^void sqlite3Fts3PendingTermsClear(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	ext/fts3/fts3_write.c	/^int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PendingTermsFlush	tsrc/fts3_write.c	/^int sqlite3Fts3PendingTermsFlush(Fts3Table *p){$/;"	f
sqlite3Fts3PorterTokenizerModule	ext/fts3/fts3_porter.c	/^void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PorterTokenizerModule	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PorterTokenizerModule	tsrc/fts3_porter.c	/^void sqlite3Fts3PorterTokenizerModule($/;"	f
sqlite3Fts3PutVarint	ext/fts3/fts3.c	/^int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3PutVarint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3PutVarint	tsrc/fts3.c	/^int sqlite3Fts3PutVarint(char *p, sqlite_int64 v){$/;"	f
sqlite3Fts3ReadBlock	ext/fts3/fts3_write.c	/^int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3ReadBlock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3ReadBlock	tsrc/fts3_write.c	/^int sqlite3Fts3ReadBlock($/;"	f
sqlite3Fts3SegReaderCursor	ext/fts3/fts3.c	/^int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderCursor	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderCursor	tsrc/fts3.c	/^int sqlite3Fts3SegReaderCursor($/;"	f
sqlite3Fts3SegReaderFinish	ext/fts3/fts3_write.c	/^void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFinish	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFinish	tsrc/fts3_write.c	/^void sqlite3Fts3SegReaderFinish($/;"	f
sqlite3Fts3SegReaderFree	ext/fts3/fts3_write.c	/^void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderFree	tsrc/fts3_write.c	/^void sqlite3Fts3SegReaderFree(Fts3SegReader *pReader){$/;"	f
sqlite3Fts3SegReaderNew	ext/fts3/fts3_write.c	/^int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderNew	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderNew	tsrc/fts3_write.c	/^int sqlite3Fts3SegReaderNew($/;"	f
sqlite3Fts3SegReaderPending	ext/fts3/fts3_write.c	/^int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderPending	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderPending	tsrc/fts3_write.c	/^int sqlite3Fts3SegReaderPending($/;"	f
sqlite3Fts3SegReaderStart	ext/fts3/fts3_write.c	/^int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStart	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStart	tsrc/fts3_write.c	/^int sqlite3Fts3SegReaderStart($/;"	f
sqlite3Fts3SegReaderStep	ext/fts3/fts3_write.c	/^int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegReaderStep	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegReaderStep	tsrc/fts3_write.c	/^int sqlite3Fts3SegReaderStep($/;"	f
sqlite3Fts3SegmentsClose	ext/fts3/fts3_write.c	/^void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SegmentsClose	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SegmentsClose	tsrc/fts3_write.c	/^void sqlite3Fts3SegmentsClose(Fts3Table *p){$/;"	f
sqlite3Fts3SelectDocsize	ext/fts3/fts3_write.c	/^int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDocsize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDocsize	tsrc/fts3_write.c	/^int sqlite3Fts3SelectDocsize($/;"	f
sqlite3Fts3SelectDoctotal	ext/fts3/fts3_write.c	/^int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SelectDoctotal	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SelectDoctotal	tsrc/fts3_write.c	/^int sqlite3Fts3SelectDoctotal($/;"	f
sqlite3Fts3SimpleTokenizerModule	ext/fts3/fts3_tokenizer1.c	/^void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3SimpleTokenizerModule	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3SimpleTokenizerModule	tsrc/fts3_tokenizer1.c	/^void sqlite3Fts3SimpleTokenizerModule($/;"	f
sqlite3Fts3Snippet	ext/fts3/fts3_snippet.c	/^void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3Snippet	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3Snippet	tsrc/fts3_snippet.c	/^void sqlite3Fts3Snippet($/;"	f
sqlite3Fts3UnicodeTokenizer	ext/fts3/fts3_unicode.c	/^void sqlite3Fts3UnicodeTokenizer(sqlite3_tokenizer_module const **ppModule){$/;"	f
sqlite3Fts3UnicodeTokenizer	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Fts3UnicodeTokenizer(sqlite3_tokenizer_module const **ppModule){$/;"	f
sqlite3Fts3UnicodeTokenizer	tsrc/fts3_unicode.c	/^void sqlite3Fts3UnicodeTokenizer(sqlite3_tokenizer_module const **ppModule){$/;"	f
sqlite3Fts3UpdateMethod	ext/fts3/fts3_write.c	/^int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3UpdateMethod	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3UpdateMethod	tsrc/fts3_write.c	/^int sqlite3Fts3UpdateMethod($/;"	f
sqlite3Fts3VarintLen	ext/fts3/fts3.c	/^int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3Fts3VarintLen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3Fts3VarintLen	tsrc/fts3.c	/^int sqlite3Fts3VarintLen(sqlite3_uint64 v){$/;"	f
sqlite3Fts5AuxInit	ext/fts5/fts5_aux.c	/^int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f
sqlite3Fts5AuxInit	fts5.c	/^static int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5AuxInit	sqlite3.c	/^static int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5AuxInit	tsrc/fts5.c	/^static int sqlite3Fts5AuxInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5BufferAppendBlob	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferAppendBlob($/;"	f
sqlite3Fts5BufferAppendBlob	fts5.c	/^static void sqlite3Fts5BufferAppendBlob($/;"	f	file:
sqlite3Fts5BufferAppendBlob	sqlite3.c	/^static void sqlite3Fts5BufferAppendBlob($/;"	f	file:
sqlite3Fts5BufferAppendBlob	tsrc/fts5.c	/^static void sqlite3Fts5BufferAppendBlob($/;"	f	file:
sqlite3Fts5BufferAppendPrintf	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferAppendPrintf($/;"	f
sqlite3Fts5BufferAppendPrintf	fts5.c	/^static void sqlite3Fts5BufferAppendPrintf($/;"	f	file:
sqlite3Fts5BufferAppendPrintf	sqlite3.c	/^static void sqlite3Fts5BufferAppendPrintf($/;"	f	file:
sqlite3Fts5BufferAppendPrintf	tsrc/fts5.c	/^static void sqlite3Fts5BufferAppendPrintf($/;"	f	file:
sqlite3Fts5BufferAppendString	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferAppendString($/;"	f
sqlite3Fts5BufferAppendString	fts5.c	/^static void sqlite3Fts5BufferAppendString($/;"	f	file:
sqlite3Fts5BufferAppendString	sqlite3.c	/^static void sqlite3Fts5BufferAppendString($/;"	f	file:
sqlite3Fts5BufferAppendString	tsrc/fts5.c	/^static void sqlite3Fts5BufferAppendString($/;"	f	file:
sqlite3Fts5BufferAppendVarint	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f
sqlite3Fts5BufferAppendVarint	fts5.c	/^static void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f	file:
sqlite3Fts5BufferAppendVarint	sqlite3.c	/^static void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f	file:
sqlite3Fts5BufferAppendVarint	tsrc/fts5.c	/^static void sqlite3Fts5BufferAppendVarint(int *pRc, Fts5Buffer *pBuf, i64 iVal){$/;"	f	file:
sqlite3Fts5BufferFree	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f
sqlite3Fts5BufferFree	fts5.c	/^static void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferFree	sqlite3.c	/^static void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferFree	tsrc/fts5.c	/^static void sqlite3Fts5BufferFree(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferSet	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferSet($/;"	f
sqlite3Fts5BufferSet	fts5.c	/^static void sqlite3Fts5BufferSet($/;"	f	file:
sqlite3Fts5BufferSet	sqlite3.c	/^static void sqlite3Fts5BufferSet($/;"	f	file:
sqlite3Fts5BufferSet	tsrc/fts5.c	/^static void sqlite3Fts5BufferSet($/;"	f	file:
sqlite3Fts5BufferSize	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f
sqlite3Fts5BufferSize	fts5.c	/^static int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f	file:
sqlite3Fts5BufferSize	sqlite3.c	/^static int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f	file:
sqlite3Fts5BufferSize	tsrc/fts5.c	/^static int sqlite3Fts5BufferSize(int *pRc, Fts5Buffer *pBuf, u32 nByte){$/;"	f	file:
sqlite3Fts5BufferZero	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f
sqlite3Fts5BufferZero	fts5.c	/^static void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferZero	sqlite3.c	/^static void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5BufferZero	tsrc/fts5.c	/^static void sqlite3Fts5BufferZero(Fts5Buffer *pBuf){$/;"	f	file:
sqlite3Fts5ConfigDeclareVtab	ext/fts5/fts5_config.c	/^int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f
sqlite3Fts5ConfigDeclareVtab	fts5.c	/^static int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigDeclareVtab	sqlite3.c	/^static int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigDeclareVtab	tsrc/fts5.c	/^static int sqlite3Fts5ConfigDeclareVtab(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigFree	ext/fts5/fts5_config.c	/^void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f
sqlite3Fts5ConfigFree	fts5.c	/^static void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigFree	sqlite3.c	/^static void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigFree	tsrc/fts5.c	/^static void sqlite3Fts5ConfigFree(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ConfigLoad	ext/fts5/fts5_config.c	/^int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f
sqlite3Fts5ConfigLoad	fts5.c	/^static int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f	file:
sqlite3Fts5ConfigLoad	sqlite3.c	/^static int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f	file:
sqlite3Fts5ConfigLoad	tsrc/fts5.c	/^static int sqlite3Fts5ConfigLoad(Fts5Config *pConfig, int iCookie){$/;"	f	file:
sqlite3Fts5ConfigParse	ext/fts5/fts5_config.c	/^int sqlite3Fts5ConfigParse($/;"	f
sqlite3Fts5ConfigParse	fts5.c	/^static int sqlite3Fts5ConfigParse($/;"	f	file:
sqlite3Fts5ConfigParse	sqlite3.c	/^static int sqlite3Fts5ConfigParse($/;"	f	file:
sqlite3Fts5ConfigParse	tsrc/fts5.c	/^static int sqlite3Fts5ConfigParse($/;"	f	file:
sqlite3Fts5ConfigParseRank	ext/fts5/fts5_config.c	/^int sqlite3Fts5ConfigParseRank($/;"	f
sqlite3Fts5ConfigParseRank	fts5.c	/^static int sqlite3Fts5ConfigParseRank($/;"	f	file:
sqlite3Fts5ConfigParseRank	sqlite3.c	/^static int sqlite3Fts5ConfigParseRank($/;"	f	file:
sqlite3Fts5ConfigParseRank	tsrc/fts5.c	/^static int sqlite3Fts5ConfigParseRank($/;"	f	file:
sqlite3Fts5ConfigSetValue	ext/fts5/fts5_config.c	/^int sqlite3Fts5ConfigSetValue($/;"	f
sqlite3Fts5ConfigSetValue	fts5.c	/^static int sqlite3Fts5ConfigSetValue($/;"	f	file:
sqlite3Fts5ConfigSetValue	sqlite3.c	/^static int sqlite3Fts5ConfigSetValue($/;"	f	file:
sqlite3Fts5ConfigSetValue	tsrc/fts5.c	/^static int sqlite3Fts5ConfigSetValue($/;"	f	file:
sqlite3Fts5Corrupt	ext/fts5/fts5_index.c	/^int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f
sqlite3Fts5Corrupt	fts5.c	/^static int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f	file:
sqlite3Fts5Corrupt	sqlite3.c	/^static int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f	file:
sqlite3Fts5Corrupt	tsrc/fts5.c	/^static int sqlite3Fts5Corrupt() { return SQLITE_CORRUPT_VTAB; }$/;"	f	file:
sqlite3Fts5CreateTable	ext/fts5/fts5_storage.c	/^int sqlite3Fts5CreateTable($/;"	f
sqlite3Fts5CreateTable	fts5.c	/^static int sqlite3Fts5CreateTable($/;"	f	file:
sqlite3Fts5CreateTable	sqlite3.c	/^static int sqlite3Fts5CreateTable($/;"	f	file:
sqlite3Fts5CreateTable	tsrc/fts5.c	/^static int sqlite3Fts5CreateTable($/;"	f	file:
sqlite3Fts5Dequote	ext/fts5/fts5_config.c	/^void sqlite3Fts5Dequote(char *z){$/;"	f
sqlite3Fts5Dequote	fts5.c	/^static void sqlite3Fts5Dequote(char *z){$/;"	f	file:
sqlite3Fts5Dequote	sqlite3.c	/^static void sqlite3Fts5Dequote(char *z){$/;"	f	file:
sqlite3Fts5Dequote	tsrc/fts5.c	/^static void sqlite3Fts5Dequote(char *z){$/;"	f	file:
sqlite3Fts5DropAll	ext/fts5/fts5_storage.c	/^int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f
sqlite3Fts5DropAll	fts5.c	/^static int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5DropAll	sqlite3.c	/^static int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5DropAll	tsrc/fts5.c	/^static int sqlite3Fts5DropAll(Fts5Config *pConfig){$/;"	f	file:
sqlite3Fts5ExprCheckPoslists	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f
sqlite3Fts5ExprCheckPoslists	fts5.c	/^static void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f	file:
sqlite3Fts5ExprCheckPoslists	sqlite3.c	/^static void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f	file:
sqlite3Fts5ExprCheckPoslists	tsrc/fts5.c	/^static void sqlite3Fts5ExprCheckPoslists(Fts5Expr *pExpr, i64 iRowid){$/;"	f	file:
sqlite3Fts5ExprClearPoslists	ext/fts5/fts5_expr.c	/^Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f
sqlite3Fts5ExprClearPoslists	fts5.c	/^static Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f	file:
sqlite3Fts5ExprClearPoslists	sqlite3.c	/^static Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f	file:
sqlite3Fts5ExprClearPoslists	tsrc/fts5.c	/^static Fts5PoslistPopulator *sqlite3Fts5ExprClearPoslists(Fts5Expr *pExpr, int bLive){$/;"	f	file:
sqlite3Fts5ExprClonePhrase	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprClonePhrase($/;"	f
sqlite3Fts5ExprClonePhrase	fts5.c	/^static int sqlite3Fts5ExprClonePhrase($/;"	f	file:
sqlite3Fts5ExprClonePhrase	sqlite3.c	/^static int sqlite3Fts5ExprClonePhrase($/;"	f	file:
sqlite3Fts5ExprClonePhrase	tsrc/fts5.c	/^static int sqlite3Fts5ExprClonePhrase($/;"	f	file:
sqlite3Fts5ExprEof	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f
sqlite3Fts5ExprEof	fts5.c	/^static int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprEof	sqlite3.c	/^static int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprEof	tsrc/fts5.c	/^static int sqlite3Fts5ExprEof(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprFirst	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f
sqlite3Fts5ExprFirst	fts5.c	/^static int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f	file:
sqlite3Fts5ExprFirst	sqlite3.c	/^static int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f	file:
sqlite3Fts5ExprFirst	tsrc/fts5.c	/^static int sqlite3Fts5ExprFirst(Fts5Expr *p, Fts5Index *pIdx, i64 iFirst, int bDesc){$/;"	f	file:
sqlite3Fts5ExprFree	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f
sqlite3Fts5ExprFree	fts5.c	/^static void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprFree	sqlite3.c	/^static void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprFree	tsrc/fts5.c	/^static void sqlite3Fts5ExprFree(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprInit	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f
sqlite3Fts5ExprInit	fts5.c	/^static int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5ExprInit	sqlite3.c	/^static int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5ExprInit	tsrc/fts5.c	/^static int sqlite3Fts5ExprInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5ExprNew	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprNew($/;"	f
sqlite3Fts5ExprNew	fts5.c	/^static int sqlite3Fts5ExprNew($/;"	f	file:
sqlite3Fts5ExprNew	sqlite3.c	/^static int sqlite3Fts5ExprNew($/;"	f	file:
sqlite3Fts5ExprNew	tsrc/fts5.c	/^static int sqlite3Fts5ExprNew($/;"	f	file:
sqlite3Fts5ExprNext	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f
sqlite3Fts5ExprNext	fts5.c	/^static int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f	file:
sqlite3Fts5ExprNext	sqlite3.c	/^static int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f	file:
sqlite3Fts5ExprNext	tsrc/fts5.c	/^static int sqlite3Fts5ExprNext(Fts5Expr *p, i64 iLast){$/;"	f	file:
sqlite3Fts5ExprPhraseCollist	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprPhraseCollist($/;"	f
sqlite3Fts5ExprPhraseCollist	fts5.c	/^static int sqlite3Fts5ExprPhraseCollist($/;"	f	file:
sqlite3Fts5ExprPhraseCollist	sqlite3.c	/^static int sqlite3Fts5ExprPhraseCollist($/;"	f	file:
sqlite3Fts5ExprPhraseCollist	tsrc/fts5.c	/^static int sqlite3Fts5ExprPhraseCollist($/;"	f	file:
sqlite3Fts5ExprPhraseCount	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f
sqlite3Fts5ExprPhraseCount	fts5.c	/^static int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprPhraseCount	sqlite3.c	/^static int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprPhraseCount	tsrc/fts5.c	/^static int sqlite3Fts5ExprPhraseCount(Fts5Expr *pExpr){$/;"	f	file:
sqlite3Fts5ExprPhraseSize	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f
sqlite3Fts5ExprPhraseSize	fts5.c	/^static int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f	file:
sqlite3Fts5ExprPhraseSize	sqlite3.c	/^static int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f	file:
sqlite3Fts5ExprPhraseSize	tsrc/fts5.c	/^static int sqlite3Fts5ExprPhraseSize(Fts5Expr *pExpr, int iPhrase){$/;"	f	file:
sqlite3Fts5ExprPopulatePoslists	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprPopulatePoslists($/;"	f
sqlite3Fts5ExprPopulatePoslists	fts5.c	/^static int sqlite3Fts5ExprPopulatePoslists($/;"	f	file:
sqlite3Fts5ExprPopulatePoslists	sqlite3.c	/^static int sqlite3Fts5ExprPopulatePoslists($/;"	f	file:
sqlite3Fts5ExprPopulatePoslists	tsrc/fts5.c	/^static int sqlite3Fts5ExprPopulatePoslists($/;"	f	file:
sqlite3Fts5ExprPoslist	ext/fts5/fts5_expr.c	/^int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f
sqlite3Fts5ExprPoslist	fts5.c	/^static int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f	file:
sqlite3Fts5ExprPoslist	sqlite3.c	/^static int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f	file:
sqlite3Fts5ExprPoslist	tsrc/fts5.c	/^static int sqlite3Fts5ExprPoslist(Fts5Expr *pExpr, int iPhrase, const u8 **pa){$/;"	f	file:
sqlite3Fts5ExprRowid	ext/fts5/fts5_expr.c	/^i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f
sqlite3Fts5ExprRowid	fts5.c	/^static i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprRowid	sqlite3.c	/^static i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5ExprRowid	tsrc/fts5.c	/^static i64 sqlite3Fts5ExprRowid(Fts5Expr *p){$/;"	f	file:
sqlite3Fts5Get32	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f
sqlite3Fts5Get32	fts5.c	/^static int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f	file:
sqlite3Fts5Get32	sqlite3.c	/^static int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f	file:
sqlite3Fts5Get32	tsrc/fts5.c	/^static int sqlite3Fts5Get32(const u8 *aBuf){$/;"	f	file:
sqlite3Fts5GetTokenizer	ext/fts5/fts5_main.c	/^int sqlite3Fts5GetTokenizer($/;"	f
sqlite3Fts5GetTokenizer	fts5.c	/^static int sqlite3Fts5GetTokenizer($/;"	f	file:
sqlite3Fts5GetTokenizer	sqlite3.c	/^static int sqlite3Fts5GetTokenizer($/;"	f	file:
sqlite3Fts5GetTokenizer	tsrc/fts5.c	/^static int sqlite3Fts5GetTokenizer($/;"	f	file:
sqlite3Fts5GetVarint	ext/fts5/fts5_varint.c	/^u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3Fts5GetVarint	fts5.c	/^static u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f	file:
sqlite3Fts5GetVarint	sqlite3.c	/^static u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f	file:
sqlite3Fts5GetVarint	tsrc/fts5.c	/^static u8 sqlite3Fts5GetVarint(const unsigned char *p, u64 *v){$/;"	f	file:
sqlite3Fts5GetVarint32	ext/fts5/fts5_varint.c	/^int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3Fts5GetVarint32	fts5.c	/^static int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f	file:
sqlite3Fts5GetVarint32	sqlite3.c	/^static int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f	file:
sqlite3Fts5GetVarint32	tsrc/fts5.c	/^static int sqlite3Fts5GetVarint32(const unsigned char *p, u32 *v){$/;"	f	file:
sqlite3Fts5GetVarintLen	ext/fts5/fts5_varint.c	/^int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f
sqlite3Fts5GetVarintLen	fts5.c	/^static int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f	file:
sqlite3Fts5GetVarintLen	sqlite3.c	/^static int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f	file:
sqlite3Fts5GetVarintLen	tsrc/fts5.c	/^static int sqlite3Fts5GetVarintLen(u32 iVal){$/;"	f	file:
sqlite3Fts5HashClear	ext/fts5/fts5_hash.c	/^void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f
sqlite3Fts5HashClear	fts5.c	/^static void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashClear	sqlite3.c	/^static void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashClear	tsrc/fts5.c	/^static void sqlite3Fts5HashClear(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashFree	ext/fts5/fts5_hash.c	/^void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f
sqlite3Fts5HashFree	fts5.c	/^static void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashFree	sqlite3.c	/^static void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashFree	tsrc/fts5.c	/^static void sqlite3Fts5HashFree(Fts5Hash *pHash){$/;"	f	file:
sqlite3Fts5HashNew	ext/fts5/fts5_hash.c	/^int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f
sqlite3Fts5HashNew	fts5.c	/^static int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f	file:
sqlite3Fts5HashNew	sqlite3.c	/^static int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f	file:
sqlite3Fts5HashNew	tsrc/fts5.c	/^static int sqlite3Fts5HashNew(Fts5Config *pConfig, Fts5Hash **ppNew, int *pnByte){$/;"	f	file:
sqlite3Fts5HashQuery	ext/fts5/fts5_hash.c	/^int sqlite3Fts5HashQuery($/;"	f
sqlite3Fts5HashQuery	fts5.c	/^static int sqlite3Fts5HashQuery($/;"	f	file:
sqlite3Fts5HashQuery	sqlite3.c	/^static int sqlite3Fts5HashQuery($/;"	f	file:
sqlite3Fts5HashQuery	tsrc/fts5.c	/^static int sqlite3Fts5HashQuery($/;"	f	file:
sqlite3Fts5HashScanEntry	ext/fts5/fts5_hash.c	/^void sqlite3Fts5HashScanEntry($/;"	f
sqlite3Fts5HashScanEntry	fts5.c	/^static void sqlite3Fts5HashScanEntry($/;"	f	file:
sqlite3Fts5HashScanEntry	sqlite3.c	/^static void sqlite3Fts5HashScanEntry($/;"	f	file:
sqlite3Fts5HashScanEntry	tsrc/fts5.c	/^static void sqlite3Fts5HashScanEntry($/;"	f	file:
sqlite3Fts5HashScanEof	ext/fts5/fts5_hash.c	/^int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f
sqlite3Fts5HashScanEof	fts5.c	/^static int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanEof	sqlite3.c	/^static int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanEof	tsrc/fts5.c	/^static int sqlite3Fts5HashScanEof(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanInit	ext/fts5/fts5_hash.c	/^int sqlite3Fts5HashScanInit($/;"	f
sqlite3Fts5HashScanInit	fts5.c	/^static int sqlite3Fts5HashScanInit($/;"	f	file:
sqlite3Fts5HashScanInit	sqlite3.c	/^static int sqlite3Fts5HashScanInit($/;"	f	file:
sqlite3Fts5HashScanInit	tsrc/fts5.c	/^static int sqlite3Fts5HashScanInit($/;"	f	file:
sqlite3Fts5HashScanNext	ext/fts5/fts5_hash.c	/^void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f
sqlite3Fts5HashScanNext	fts5.c	/^static void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanNext	sqlite3.c	/^static void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashScanNext	tsrc/fts5.c	/^static void sqlite3Fts5HashScanNext(Fts5Hash *p){$/;"	f	file:
sqlite3Fts5HashWrite	ext/fts5/fts5_hash.c	/^int sqlite3Fts5HashWrite($/;"	f
sqlite3Fts5HashWrite	fts5.c	/^static int sqlite3Fts5HashWrite($/;"	f	file:
sqlite3Fts5HashWrite	sqlite3.c	/^static int sqlite3Fts5HashWrite($/;"	f	file:
sqlite3Fts5HashWrite	tsrc/fts5.c	/^static int sqlite3Fts5HashWrite($/;"	f	file:
sqlite3Fts5IndexBeginWrite	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f
sqlite3Fts5IndexBeginWrite	fts5.c	/^static int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f	file:
sqlite3Fts5IndexBeginWrite	sqlite3.c	/^static int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f	file:
sqlite3Fts5IndexBeginWrite	tsrc/fts5.c	/^static int sqlite3Fts5IndexBeginWrite(Fts5Index *p, int bDelete, i64 iRowid){$/;"	f	file:
sqlite3Fts5IndexCharlenToBytelen	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexCharlenToBytelen($/;"	f
sqlite3Fts5IndexCharlenToBytelen	fts5.c	/^static int sqlite3Fts5IndexCharlenToBytelen($/;"	f	file:
sqlite3Fts5IndexCharlenToBytelen	sqlite3.c	/^static int sqlite3Fts5IndexCharlenToBytelen($/;"	f	file:
sqlite3Fts5IndexCharlenToBytelen	tsrc/fts5.c	/^static int sqlite3Fts5IndexCharlenToBytelen($/;"	f	file:
sqlite3Fts5IndexClose	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f
sqlite3Fts5IndexClose	fts5.c	/^static int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexClose	sqlite3.c	/^static int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexClose	tsrc/fts5.c	/^static int sqlite3Fts5IndexClose(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexEntryCksum	ext/fts5/fts5_index.c	/^u64 sqlite3Fts5IndexEntryCksum($/;"	f
sqlite3Fts5IndexEntryCksum	fts5.c	/^static u64 sqlite3Fts5IndexEntryCksum($/;"	f	file:
sqlite3Fts5IndexEntryCksum	sqlite3.c	/^static u64 sqlite3Fts5IndexEntryCksum($/;"	f	file:
sqlite3Fts5IndexEntryCksum	tsrc/fts5.c	/^static u64 sqlite3Fts5IndexEntryCksum($/;"	f	file:
sqlite3Fts5IndexFromCsrid	ext/fts5/fts5_main.c	/^Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f
sqlite3Fts5IndexFromCsrid	fts5.c	/^static Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f	file:
sqlite3Fts5IndexFromCsrid	sqlite3.c	/^static Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f	file:
sqlite3Fts5IndexFromCsrid	tsrc/fts5.c	/^static Fts5Index *sqlite3Fts5IndexFromCsrid($/;"	f	file:
sqlite3Fts5IndexGetAverages	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f
sqlite3Fts5IndexGetAverages	fts5.c	/^static int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f	file:
sqlite3Fts5IndexGetAverages	sqlite3.c	/^static int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f	file:
sqlite3Fts5IndexGetAverages	tsrc/fts5.c	/^static int sqlite3Fts5IndexGetAverages(Fts5Index *p, i64 *pnRow, i64 *anSize){$/;"	f	file:
sqlite3Fts5IndexInit	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f
sqlite3Fts5IndexInit	fts5.c	/^static int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f	file:
sqlite3Fts5IndexInit	sqlite3.c	/^static int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f	file:
sqlite3Fts5IndexInit	tsrc/fts5.c	/^static int sqlite3Fts5IndexInit(sqlite3 *db){$/;"	f	file:
sqlite3Fts5IndexIntegrityCheck	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f
sqlite3Fts5IndexIntegrityCheck	fts5.c	/^static int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f	file:
sqlite3Fts5IndexIntegrityCheck	sqlite3.c	/^static int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f	file:
sqlite3Fts5IndexIntegrityCheck	tsrc/fts5.c	/^static int sqlite3Fts5IndexIntegrityCheck(Fts5Index *p, u64 cksum){$/;"	f	file:
sqlite3Fts5IndexLoadConfig	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f
sqlite3Fts5IndexLoadConfig	fts5.c	/^static int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexLoadConfig	sqlite3.c	/^static int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexLoadConfig	tsrc/fts5.c	/^static int sqlite3Fts5IndexLoadConfig(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexMerge	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f
sqlite3Fts5IndexMerge	fts5.c	/^static int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f	file:
sqlite3Fts5IndexMerge	sqlite3.c	/^static int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f	file:
sqlite3Fts5IndexMerge	tsrc/fts5.c	/^static int sqlite3Fts5IndexMerge(Fts5Index *p, int nMerge){$/;"	f	file:
sqlite3Fts5IndexOpen	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexOpen($/;"	f
sqlite3Fts5IndexOpen	fts5.c	/^static int sqlite3Fts5IndexOpen($/;"	f	file:
sqlite3Fts5IndexOpen	sqlite3.c	/^static int sqlite3Fts5IndexOpen($/;"	f	file:
sqlite3Fts5IndexOpen	tsrc/fts5.c	/^static int sqlite3Fts5IndexOpen($/;"	f	file:
sqlite3Fts5IndexOptimize	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f
sqlite3Fts5IndexOptimize	fts5.c	/^static int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexOptimize	sqlite3.c	/^static int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexOptimize	tsrc/fts5.c	/^static int sqlite3Fts5IndexOptimize(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexQuery	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexQuery($/;"	f
sqlite3Fts5IndexQuery	fts5.c	/^static int sqlite3Fts5IndexQuery($/;"	f	file:
sqlite3Fts5IndexQuery	sqlite3.c	/^static int sqlite3Fts5IndexQuery($/;"	f	file:
sqlite3Fts5IndexQuery	tsrc/fts5.c	/^static int sqlite3Fts5IndexQuery($/;"	f	file:
sqlite3Fts5IndexReads	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f
sqlite3Fts5IndexReads	fts5.c	/^static int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReads	sqlite3.c	/^static int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReads	tsrc/fts5.c	/^static int sqlite3Fts5IndexReads(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReinit	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f
sqlite3Fts5IndexReinit	fts5.c	/^static int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReinit	sqlite3.c	/^static int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReinit	tsrc/fts5.c	/^static int sqlite3Fts5IndexReinit(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReset	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f
sqlite3Fts5IndexReset	fts5.c	/^static int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReset	sqlite3.c	/^static int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexReset	tsrc/fts5.c	/^static int sqlite3Fts5IndexReset(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexRollback	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f
sqlite3Fts5IndexRollback	fts5.c	/^static int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexRollback	sqlite3.c	/^static int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexRollback	tsrc/fts5.c	/^static int sqlite3Fts5IndexRollback(Fts5Index *p){$/;"	f	file:
sqlite3Fts5IndexSetAverages	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f
sqlite3Fts5IndexSetAverages	fts5.c	/^static int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f	file:
sqlite3Fts5IndexSetAverages	sqlite3.c	/^static int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f	file:
sqlite3Fts5IndexSetAverages	tsrc/fts5.c	/^static int sqlite3Fts5IndexSetAverages(Fts5Index *p, const u8 *pData, int nData){$/;"	f	file:
sqlite3Fts5IndexSetCookie	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f
sqlite3Fts5IndexSetCookie	fts5.c	/^static int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f	file:
sqlite3Fts5IndexSetCookie	sqlite3.c	/^static int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f	file:
sqlite3Fts5IndexSetCookie	tsrc/fts5.c	/^static int sqlite3Fts5IndexSetCookie(Fts5Index *p, int iNew){$/;"	f	file:
sqlite3Fts5IndexSync	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexSync(Fts5Index *p, int bCommit){$/;"	f
sqlite3Fts5IndexSync	fts5.c	/^static int sqlite3Fts5IndexSync(Fts5Index *p, int bCommit){$/;"	f	file:
sqlite3Fts5IndexSync	sqlite3.c	/^static int sqlite3Fts5IndexSync(Fts5Index *p, int bCommit){$/;"	f	file:
sqlite3Fts5IndexSync	tsrc/fts5.c	/^static int sqlite3Fts5IndexSync(Fts5Index *p, int bCommit){$/;"	f	file:
sqlite3Fts5IndexWrite	ext/fts5/fts5_index.c	/^int sqlite3Fts5IndexWrite($/;"	f
sqlite3Fts5IndexWrite	fts5.c	/^static int sqlite3Fts5IndexWrite($/;"	f	file:
sqlite3Fts5IndexWrite	sqlite3.c	/^static int sqlite3Fts5IndexWrite($/;"	f	file:
sqlite3Fts5IndexWrite	tsrc/fts5.c	/^static int sqlite3Fts5IndexWrite($/;"	f	file:
sqlite3Fts5Init	ext/fts5/fts5_main.c	/^int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5Init	fts5.c	/^int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5Init	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5Init	tsrc/fts5.c	/^int sqlite3Fts5Init(sqlite3 *db){$/;"	f
sqlite3Fts5IsBareword	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5IsBareword(char t){$/;"	f
sqlite3Fts5IsBareword	fts5.c	/^static int sqlite3Fts5IsBareword(char t){$/;"	f	file:
sqlite3Fts5IsBareword	sqlite3.c	/^static int sqlite3Fts5IsBareword(char t){$/;"	f	file:
sqlite3Fts5IsBareword	tsrc/fts5.c	/^static int sqlite3Fts5IsBareword(char t){$/;"	f	file:
sqlite3Fts5IterClose	ext/fts5/fts5_index.c	/^void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f
sqlite3Fts5IterClose	fts5.c	/^static void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterClose	sqlite3.c	/^static void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterClose	tsrc/fts5.c	/^static void sqlite3Fts5IterClose(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterEof	ext/fts5/fts5Int.h	342;"	d
sqlite3Fts5IterEof	fts5.c	935;"	d	file:
sqlite3Fts5IterEof	sqlite3.c	178137;"	d	file:
sqlite3Fts5IterEof	tsrc/fts5.c	935;"	d	file:
sqlite3Fts5IterNext	ext/fts5/fts5_index.c	/^int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f
sqlite3Fts5IterNext	fts5.c	/^static int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNext	sqlite3.c	/^static int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNext	tsrc/fts5.c	/^static int sqlite3Fts5IterNext(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNextFrom	ext/fts5/fts5_index.c	/^int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f
sqlite3Fts5IterNextFrom	fts5.c	/^static int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f	file:
sqlite3Fts5IterNextFrom	sqlite3.c	/^static int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f	file:
sqlite3Fts5IterNextFrom	tsrc/fts5.c	/^static int sqlite3Fts5IterNextFrom(Fts5IndexIter *pIndexIter, i64 iMatch){$/;"	f	file:
sqlite3Fts5IterNextScan	ext/fts5/fts5_index.c	/^int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f
sqlite3Fts5IterNextScan	fts5.c	/^static int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNextScan	sqlite3.c	/^static int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterNextScan	tsrc/fts5.c	/^static int sqlite3Fts5IterNextScan(Fts5IndexIter *pIndexIter){$/;"	f	file:
sqlite3Fts5IterTerm	ext/fts5/fts5_index.c	/^const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f
sqlite3Fts5IterTerm	fts5.c	/^static const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f	file:
sqlite3Fts5IterTerm	sqlite3.c	/^static const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f	file:
sqlite3Fts5IterTerm	tsrc/fts5.c	/^static const char *sqlite3Fts5IterTerm(Fts5IndexIter *pIndexIter, int *pn){$/;"	f	file:
sqlite3Fts5MallocZero	ext/fts5/fts5_buffer.c	/^void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f
sqlite3Fts5MallocZero	fts5.c	/^static void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f	file:
sqlite3Fts5MallocZero	sqlite3.c	/^static void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f	file:
sqlite3Fts5MallocZero	tsrc/fts5.c	/^static void *sqlite3Fts5MallocZero(int *pRc, int nByte){$/;"	f	file:
sqlite3Fts5Mprintf	ext/fts5/fts5_buffer.c	/^char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f
sqlite3Fts5Mprintf	fts5.c	/^static char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5Mprintf	sqlite3.c	/^static char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5Mprintf	tsrc/fts5.c	/^static char *sqlite3Fts5Mprintf(int *pRc, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseColset	ext/fts5/fts5_expr.c	/^Fts5Colset *sqlite3Fts5ParseColset($/;"	f
sqlite3Fts5ParseColset	fts5.c	/^static Fts5Colset *sqlite3Fts5ParseColset($/;"	f	file:
sqlite3Fts5ParseColset	sqlite3.c	/^static Fts5Colset *sqlite3Fts5ParseColset($/;"	f	file:
sqlite3Fts5ParseColset	tsrc/fts5.c	/^static Fts5Colset *sqlite3Fts5ParseColset($/;"	f	file:
sqlite3Fts5ParseError	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f
sqlite3Fts5ParseError	fts5.c	/^static void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseError	sqlite3.c	/^static void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseError	tsrc/fts5.c	/^static void sqlite3Fts5ParseError(Fts5Parse *pParse, const char *zFmt, ...){$/;"	f	file:
sqlite3Fts5ParseFinished	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f
sqlite3Fts5ParseFinished	fts5.c	/^static void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseFinished	sqlite3.c	/^static void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseFinished	tsrc/fts5.c	/^static void sqlite3Fts5ParseFinished(Fts5Parse *pParse, Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseImplicitAnd	ext/fts5/fts5_expr.c	/^Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f
sqlite3Fts5ParseImplicitAnd	fts5.c	/^static Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f	file:
sqlite3Fts5ParseImplicitAnd	sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f	file:
sqlite3Fts5ParseImplicitAnd	tsrc/fts5.c	/^static Fts5ExprNode *sqlite3Fts5ParseImplicitAnd($/;"	f	file:
sqlite3Fts5ParseNear	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f
sqlite3Fts5ParseNear	fts5.c	/^static void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f	file:
sqlite3Fts5ParseNear	sqlite3.c	/^static void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f	file:
sqlite3Fts5ParseNear	tsrc/fts5.c	/^static void sqlite3Fts5ParseNear(Fts5Parse *pParse, Fts5Token *pTok){$/;"	f	file:
sqlite3Fts5ParseNearset	ext/fts5/fts5_expr.c	/^Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f
sqlite3Fts5ParseNearset	fts5.c	/^static Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f	file:
sqlite3Fts5ParseNearset	sqlite3.c	/^static Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f	file:
sqlite3Fts5ParseNearset	tsrc/fts5.c	/^static Fts5ExprNearset *sqlite3Fts5ParseNearset($/;"	f	file:
sqlite3Fts5ParseNearsetFree	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f
sqlite3Fts5ParseNearsetFree	fts5.c	/^static void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f	file:
sqlite3Fts5ParseNearsetFree	sqlite3.c	/^static void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f	file:
sqlite3Fts5ParseNearsetFree	tsrc/fts5.c	/^static void sqlite3Fts5ParseNearsetFree(Fts5ExprNearset *pNear){$/;"	f	file:
sqlite3Fts5ParseNode	ext/fts5/fts5_expr.c	/^Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f
sqlite3Fts5ParseNode	fts5.c	/^static Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f	file:
sqlite3Fts5ParseNode	sqlite3.c	/^static Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f	file:
sqlite3Fts5ParseNode	tsrc/fts5.c	/^static Fts5ExprNode *sqlite3Fts5ParseNode($/;"	f	file:
sqlite3Fts5ParseNodeFree	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f
sqlite3Fts5ParseNodeFree	fts5.c	/^static void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseNodeFree	sqlite3.c	/^static void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParseNodeFree	tsrc/fts5.c	/^static void sqlite3Fts5ParseNodeFree(Fts5ExprNode *p){$/;"	f	file:
sqlite3Fts5ParsePhraseFree	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f
sqlite3Fts5ParsePhraseFree	fts5.c	/^static void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
sqlite3Fts5ParsePhraseFree	sqlite3.c	/^static void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
sqlite3Fts5ParsePhraseFree	tsrc/fts5.c	/^static void sqlite3Fts5ParsePhraseFree(Fts5ExprPhrase *pPhrase){$/;"	f	file:
sqlite3Fts5ParseSetColset	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseSetColset($/;"	f
sqlite3Fts5ParseSetColset	fts5.c	/^static void sqlite3Fts5ParseSetColset($/;"	f	file:
sqlite3Fts5ParseSetColset	sqlite3.c	/^static void sqlite3Fts5ParseSetColset($/;"	f	file:
sqlite3Fts5ParseSetColset	tsrc/fts5.c	/^static void sqlite3Fts5ParseSetColset($/;"	f	file:
sqlite3Fts5ParseSetDistance	ext/fts5/fts5_expr.c	/^void sqlite3Fts5ParseSetDistance($/;"	f
sqlite3Fts5ParseSetDistance	fts5.c	/^static void sqlite3Fts5ParseSetDistance($/;"	f	file:
sqlite3Fts5ParseSetDistance	sqlite3.c	/^static void sqlite3Fts5ParseSetDistance($/;"	f	file:
sqlite3Fts5ParseSetDistance	tsrc/fts5.c	/^static void sqlite3Fts5ParseSetDistance($/;"	f	file:
sqlite3Fts5ParseTerm	ext/fts5/fts5_expr.c	/^Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f
sqlite3Fts5ParseTerm	fts5.c	/^static Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f	file:
sqlite3Fts5ParseTerm	sqlite3.c	/^static Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f	file:
sqlite3Fts5ParseTerm	tsrc/fts5.c	/^static Fts5ExprPhrase *sqlite3Fts5ParseTerm($/;"	f	file:
sqlite3Fts5Parser	fts5.c	/^static void sqlite3Fts5Parser($/;"	f	file:
sqlite3Fts5Parser	fts5parse.c	/^void sqlite3Fts5Parser($/;"	f
sqlite3Fts5Parser	sqlite3.c	/^static void sqlite3Fts5Parser($/;"	f	file:
sqlite3Fts5Parser	tsrc/fts5.c	/^static void sqlite3Fts5Parser($/;"	f	file:
sqlite3Fts5ParserARG_FETCH	fts5.c	1530;"	d	file:
sqlite3Fts5ParserARG_FETCH	fts5parse.c	132;"	d	file:
sqlite3Fts5ParserARG_FETCH	sqlite3.c	178728;"	d	file:
sqlite3Fts5ParserARG_FETCH	tsrc/fts5.c	1530;"	d	file:
sqlite3Fts5ParserARG_PDECL	fts5.c	1529;"	d	file:
sqlite3Fts5ParserARG_PDECL	fts5parse.c	131;"	d	file:
sqlite3Fts5ParserARG_PDECL	sqlite3.c	178727;"	d	file:
sqlite3Fts5ParserARG_PDECL	tsrc/fts5.c	1529;"	d	file:
sqlite3Fts5ParserARG_SDECL	fts5.c	1528;"	d	file:
sqlite3Fts5ParserARG_SDECL	fts5parse.c	130;"	d	file:
sqlite3Fts5ParserARG_SDECL	sqlite3.c	178726;"	d	file:
sqlite3Fts5ParserARG_SDECL	tsrc/fts5.c	1528;"	d	file:
sqlite3Fts5ParserARG_STORE	fts5.c	1531;"	d	file:
sqlite3Fts5ParserARG_STORE	fts5parse.c	133;"	d	file:
sqlite3Fts5ParserARG_STORE	sqlite3.c	178729;"	d	file:
sqlite3Fts5ParserARG_STORE	tsrc/fts5.c	1531;"	d	file:
sqlite3Fts5ParserAlloc	fts5.c	/^static void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(fts5YYMALLOCARGTYPE)){$/;"	f	file:
sqlite3Fts5ParserAlloc	fts5parse.c	/^void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3Fts5ParserAlloc	sqlite3.c	/^static void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(fts5YYMALLOCARGTYPE)){$/;"	f	file:
sqlite3Fts5ParserAlloc	tsrc/fts5.c	/^static void *sqlite3Fts5ParserAlloc(void *(*mallocProc)(fts5YYMALLOCARGTYPE)){$/;"	f	file:
sqlite3Fts5ParserFTS5TOKENTYPE	fts5.c	1515;"	d	file:
sqlite3Fts5ParserFTS5TOKENTYPE	sqlite3.c	178713;"	d	file:
sqlite3Fts5ParserFTS5TOKENTYPE	tsrc/fts5.c	1515;"	d	file:
sqlite3Fts5ParserFree	fts5.c	/^static void sqlite3Fts5ParserFree($/;"	f	file:
sqlite3Fts5ParserFree	fts5parse.c	/^void sqlite3Fts5ParserFree($/;"	f
sqlite3Fts5ParserFree	sqlite3.c	/^static void sqlite3Fts5ParserFree($/;"	f	file:
sqlite3Fts5ParserFree	tsrc/fts5.c	/^static void sqlite3Fts5ParserFree($/;"	f	file:
sqlite3Fts5ParserStackPeak	fts5.c	/^static int sqlite3Fts5ParserStackPeak(void *p){$/;"	f	file:
sqlite3Fts5ParserStackPeak	fts5parse.c	/^int sqlite3Fts5ParserStackPeak(void *p){$/;"	f
sqlite3Fts5ParserStackPeak	sqlite3.c	/^static int sqlite3Fts5ParserStackPeak(void *p){$/;"	f	file:
sqlite3Fts5ParserStackPeak	tsrc/fts5.c	/^static int sqlite3Fts5ParserStackPeak(void *p){$/;"	f	file:
sqlite3Fts5ParserTOKENTYPE	fts5parse.c	117;"	d	file:
sqlite3Fts5ParserTrace	fts5.c	/^static void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f	file:
sqlite3Fts5ParserTrace	fts5parse.c	/^void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3Fts5ParserTrace	sqlite3.c	/^static void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f	file:
sqlite3Fts5ParserTrace	tsrc/fts5.c	/^static void sqlite3Fts5ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f	file:
sqlite3Fts5PoslistNext64	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5PoslistNext64($/;"	f
sqlite3Fts5PoslistNext64	fts5.c	/^static int sqlite3Fts5PoslistNext64($/;"	f	file:
sqlite3Fts5PoslistNext64	sqlite3.c	/^static int sqlite3Fts5PoslistNext64($/;"	f	file:
sqlite3Fts5PoslistNext64	tsrc/fts5.c	/^static int sqlite3Fts5PoslistNext64($/;"	f	file:
sqlite3Fts5PoslistReaderInit	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5PoslistReaderInit($/;"	f
sqlite3Fts5PoslistReaderInit	fts5.c	/^static int sqlite3Fts5PoslistReaderInit($/;"	f	file:
sqlite3Fts5PoslistReaderInit	sqlite3.c	/^static int sqlite3Fts5PoslistReaderInit($/;"	f	file:
sqlite3Fts5PoslistReaderInit	tsrc/fts5.c	/^static int sqlite3Fts5PoslistReaderInit($/;"	f	file:
sqlite3Fts5PoslistReaderNext	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f
sqlite3Fts5PoslistReaderNext	fts5.c	/^static int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f	file:
sqlite3Fts5PoslistReaderNext	sqlite3.c	/^static int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f	file:
sqlite3Fts5PoslistReaderNext	tsrc/fts5.c	/^static int sqlite3Fts5PoslistReaderNext(Fts5PoslistReader *pIter){$/;"	f	file:
sqlite3Fts5PoslistSafeAppend	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5PoslistSafeAppend($/;"	f
sqlite3Fts5PoslistSafeAppend	fts5.c	/^static void sqlite3Fts5PoslistSafeAppend($/;"	f	file:
sqlite3Fts5PoslistSafeAppend	sqlite3.c	/^static void sqlite3Fts5PoslistSafeAppend($/;"	f	file:
sqlite3Fts5PoslistSafeAppend	tsrc/fts5.c	/^static void sqlite3Fts5PoslistSafeAppend($/;"	f	file:
sqlite3Fts5PoslistWriterAppend	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5PoslistWriterAppend($/;"	f
sqlite3Fts5PoslistWriterAppend	fts5.c	/^static int sqlite3Fts5PoslistWriterAppend($/;"	f	file:
sqlite3Fts5PoslistWriterAppend	sqlite3.c	/^static int sqlite3Fts5PoslistWriterAppend($/;"	f	file:
sqlite3Fts5PoslistWriterAppend	tsrc/fts5.c	/^static int sqlite3Fts5PoslistWriterAppend($/;"	f	file:
sqlite3Fts5Put32	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f
sqlite3Fts5Put32	fts5.c	/^static void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f	file:
sqlite3Fts5Put32	sqlite3.c	/^static void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f	file:
sqlite3Fts5Put32	tsrc/fts5.c	/^static void sqlite3Fts5Put32(u8 *aBuf, int iVal){$/;"	f	file:
sqlite3Fts5PutVarint	ext/fts5/fts5_varint.c	/^int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3Fts5PutVarint	fts5.c	/^static int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f	file:
sqlite3Fts5PutVarint	sqlite3.c	/^static int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f	file:
sqlite3Fts5PutVarint	tsrc/fts5.c	/^static int sqlite3Fts5PutVarint(unsigned char *p, u64 v){$/;"	f	file:
sqlite3Fts5StorageClose	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageClose	fts5.c	/^static int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageClose	sqlite3.c	/^static int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageClose	tsrc/fts5.c	/^static int sqlite3Fts5StorageClose(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageConfigValue	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageConfigValue($/;"	f
sqlite3Fts5StorageConfigValue	fts5.c	/^static int sqlite3Fts5StorageConfigValue($/;"	f	file:
sqlite3Fts5StorageConfigValue	sqlite3.c	/^static int sqlite3Fts5StorageConfigValue($/;"	f	file:
sqlite3Fts5StorageConfigValue	tsrc/fts5.c	/^static int sqlite3Fts5StorageConfigValue($/;"	f	file:
sqlite3Fts5StorageContentInsert	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageContentInsert($/;"	f
sqlite3Fts5StorageContentInsert	fts5.c	/^static int sqlite3Fts5StorageContentInsert($/;"	f	file:
sqlite3Fts5StorageContentInsert	sqlite3.c	/^static int sqlite3Fts5StorageContentInsert($/;"	f	file:
sqlite3Fts5StorageContentInsert	tsrc/fts5.c	/^static int sqlite3Fts5StorageContentInsert($/;"	f	file:
sqlite3Fts5StorageDelete	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f
sqlite3Fts5StorageDelete	fts5.c	/^static int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f	file:
sqlite3Fts5StorageDelete	sqlite3.c	/^static int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f	file:
sqlite3Fts5StorageDelete	tsrc/fts5.c	/^static int sqlite3Fts5StorageDelete(Fts5Storage *p, i64 iDel, sqlite3_value **apVal){$/;"	f	file:
sqlite3Fts5StorageDeleteAll	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageDeleteAll	fts5.c	/^static int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageDeleteAll	sqlite3.c	/^static int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageDeleteAll	tsrc/fts5.c	/^static int sqlite3Fts5StorageDeleteAll(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageDocsize	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f
sqlite3Fts5StorageDocsize	fts5.c	/^static int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f	file:
sqlite3Fts5StorageDocsize	sqlite3.c	/^static int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f	file:
sqlite3Fts5StorageDocsize	tsrc/fts5.c	/^static int sqlite3Fts5StorageDocsize(Fts5Storage *p, i64 iRowid, int *aCol){$/;"	f	file:
sqlite3Fts5StorageIndexInsert	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageIndexInsert($/;"	f
sqlite3Fts5StorageIndexInsert	fts5.c	/^static int sqlite3Fts5StorageIndexInsert($/;"	f	file:
sqlite3Fts5StorageIndexInsert	sqlite3.c	/^static int sqlite3Fts5StorageIndexInsert($/;"	f	file:
sqlite3Fts5StorageIndexInsert	tsrc/fts5.c	/^static int sqlite3Fts5StorageIndexInsert($/;"	f	file:
sqlite3Fts5StorageIntegrity	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageIntegrity	fts5.c	/^static int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageIntegrity	sqlite3.c	/^static int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageIntegrity	tsrc/fts5.c	/^static int sqlite3Fts5StorageIntegrity(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageMerge	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f
sqlite3Fts5StorageMerge	fts5.c	/^static int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f	file:
sqlite3Fts5StorageMerge	sqlite3.c	/^static int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f	file:
sqlite3Fts5StorageMerge	tsrc/fts5.c	/^static int sqlite3Fts5StorageMerge(Fts5Storage *p, int nMerge){$/;"	f	file:
sqlite3Fts5StorageOpen	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageOpen($/;"	f
sqlite3Fts5StorageOpen	fts5.c	/^static int sqlite3Fts5StorageOpen($/;"	f	file:
sqlite3Fts5StorageOpen	sqlite3.c	/^static int sqlite3Fts5StorageOpen($/;"	f	file:
sqlite3Fts5StorageOpen	tsrc/fts5.c	/^static int sqlite3Fts5StorageOpen($/;"	f	file:
sqlite3Fts5StorageOptimize	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageOptimize	fts5.c	/^static int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageOptimize	sqlite3.c	/^static int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageOptimize	tsrc/fts5.c	/^static int sqlite3Fts5StorageOptimize(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRebuild	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageRebuild	fts5.c	/^static int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRebuild	sqlite3.c	/^static int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRebuild	tsrc/fts5.c	/^static int sqlite3Fts5StorageRebuild(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRename	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f
sqlite3Fts5StorageRename	fts5.c	/^static int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f	file:
sqlite3Fts5StorageRename	sqlite3.c	/^static int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f	file:
sqlite3Fts5StorageRename	tsrc/fts5.c	/^static int sqlite3Fts5StorageRename(Fts5Storage *pStorage, const char *zName){$/;"	f	file:
sqlite3Fts5StorageReset	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageReset	fts5.c	/^static int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageReset	sqlite3.c	/^static int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageReset	tsrc/fts5.c	/^static int sqlite3Fts5StorageReset(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRollback	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f
sqlite3Fts5StorageRollback	fts5.c	/^static int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRollback	sqlite3.c	/^static int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRollback	tsrc/fts5.c	/^static int sqlite3Fts5StorageRollback(Fts5Storage *p){$/;"	f	file:
sqlite3Fts5StorageRowCount	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f
sqlite3Fts5StorageRowCount	fts5.c	/^static int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f	file:
sqlite3Fts5StorageRowCount	sqlite3.c	/^static int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f	file:
sqlite3Fts5StorageRowCount	tsrc/fts5.c	/^static int sqlite3Fts5StorageRowCount(Fts5Storage *p, i64 *pnRow){$/;"	f	file:
sqlite3Fts5StorageSize	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f
sqlite3Fts5StorageSize	fts5.c	/^static int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f	file:
sqlite3Fts5StorageSize	sqlite3.c	/^static int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f	file:
sqlite3Fts5StorageSize	tsrc/fts5.c	/^static int sqlite3Fts5StorageSize(Fts5Storage *p, int iCol, i64 *pnToken){$/;"	f	file:
sqlite3Fts5StorageStmt	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageStmt($/;"	f
sqlite3Fts5StorageStmt	fts5.c	/^static int sqlite3Fts5StorageStmt($/;"	f	file:
sqlite3Fts5StorageStmt	sqlite3.c	/^static int sqlite3Fts5StorageStmt($/;"	f	file:
sqlite3Fts5StorageStmt	tsrc/fts5.c	/^static int sqlite3Fts5StorageStmt($/;"	f	file:
sqlite3Fts5StorageStmtRelease	ext/fts5/fts5_storage.c	/^void sqlite3Fts5StorageStmtRelease($/;"	f
sqlite3Fts5StorageStmtRelease	fts5.c	/^static void sqlite3Fts5StorageStmtRelease($/;"	f	file:
sqlite3Fts5StorageStmtRelease	sqlite3.c	/^static void sqlite3Fts5StorageStmtRelease($/;"	f	file:
sqlite3Fts5StorageStmtRelease	tsrc/fts5.c	/^static void sqlite3Fts5StorageStmtRelease($/;"	f	file:
sqlite3Fts5StorageSync	ext/fts5/fts5_storage.c	/^int sqlite3Fts5StorageSync(Fts5Storage *p, int bCommit){$/;"	f
sqlite3Fts5StorageSync	fts5.c	/^static int sqlite3Fts5StorageSync(Fts5Storage *p, int bCommit){$/;"	f	file:
sqlite3Fts5StorageSync	sqlite3.c	/^static int sqlite3Fts5StorageSync(Fts5Storage *p, int bCommit){$/;"	f	file:
sqlite3Fts5StorageSync	tsrc/fts5.c	/^static int sqlite3Fts5StorageSync(Fts5Storage *p, int bCommit){$/;"	f	file:
sqlite3Fts5Strndup	ext/fts5/fts5_buffer.c	/^char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f
sqlite3Fts5Strndup	fts5.c	/^static char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f	file:
sqlite3Fts5Strndup	sqlite3.c	/^static char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f	file:
sqlite3Fts5Strndup	tsrc/fts5.c	/^static char *sqlite3Fts5Strndup(int *pRc, const char *pIn, int nIn){$/;"	f	file:
sqlite3Fts5TermsetAdd	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5TermsetAdd($/;"	f
sqlite3Fts5TermsetAdd	fts5.c	/^static int sqlite3Fts5TermsetAdd($/;"	f	file:
sqlite3Fts5TermsetAdd	sqlite3.c	/^static int sqlite3Fts5TermsetAdd($/;"	f	file:
sqlite3Fts5TermsetAdd	tsrc/fts5.c	/^static int sqlite3Fts5TermsetAdd($/;"	f	file:
sqlite3Fts5TermsetFree	ext/fts5/fts5_buffer.c	/^void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f
sqlite3Fts5TermsetFree	fts5.c	/^static void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f	file:
sqlite3Fts5TermsetFree	sqlite3.c	/^static void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f	file:
sqlite3Fts5TermsetFree	tsrc/fts5.c	/^static void sqlite3Fts5TermsetFree(Fts5Termset *p){$/;"	f	file:
sqlite3Fts5TermsetNew	ext/fts5/fts5_buffer.c	/^int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f
sqlite3Fts5TermsetNew	fts5.c	/^static int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f	file:
sqlite3Fts5TermsetNew	sqlite3.c	/^static int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f	file:
sqlite3Fts5TermsetNew	tsrc/fts5.c	/^static int sqlite3Fts5TermsetNew(Fts5Termset **pp){$/;"	f	file:
sqlite3Fts5TestRegisterMatchinfo	ext/fts5/fts5_test_mi.c	/^int sqlite3Fts5TestRegisterMatchinfo(sqlite3 *db){$/;"	f
sqlite3Fts5TestRegisterTok	ext/fts5/fts5_test_tok.c	/^int sqlite3Fts5TestRegisterTok(sqlite3 *db, fts5_api *pApi){$/;"	f
sqlite3Fts5Tokenize	ext/fts5/fts5_config.c	/^int sqlite3Fts5Tokenize($/;"	f
sqlite3Fts5Tokenize	fts5.c	/^static int sqlite3Fts5Tokenize($/;"	f	file:
sqlite3Fts5Tokenize	sqlite3.c	/^static int sqlite3Fts5Tokenize($/;"	f	file:
sqlite3Fts5Tokenize	tsrc/fts5.c	/^static int sqlite3Fts5Tokenize($/;"	f	file:
sqlite3Fts5TokenizerInit	ext/fts5/fts5_tokenize.c	/^int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f
sqlite3Fts5TokenizerInit	fts5.c	/^static int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5TokenizerInit	sqlite3.c	/^static int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5TokenizerInit	tsrc/fts5.c	/^static int sqlite3Fts5TokenizerInit(fts5_api *pApi){$/;"	f	file:
sqlite3Fts5UnicodeFold	ext/fts5/fts5_unicode2.c	/^int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3Fts5UnicodeFold	fts5.c	/^static int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f	file:
sqlite3Fts5UnicodeFold	sqlite3.c	/^static int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f	file:
sqlite3Fts5UnicodeFold	tsrc/fts5.c	/^static int sqlite3Fts5UnicodeFold(int c, int bRemoveDiacritic){$/;"	f	file:
sqlite3Fts5UnicodeIsalnum	ext/fts5/fts5_unicode2.c	/^int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f
sqlite3Fts5UnicodeIsalnum	fts5.c	/^static int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsalnum	sqlite3.c	/^static int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsalnum	tsrc/fts5.c	/^static int sqlite3Fts5UnicodeIsalnum(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsdiacritic	ext/fts5/fts5_unicode2.c	/^int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f
sqlite3Fts5UnicodeIsdiacritic	fts5.c	/^static int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsdiacritic	sqlite3.c	/^static int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f	file:
sqlite3Fts5UnicodeIsdiacritic	tsrc/fts5.c	/^static int sqlite3Fts5UnicodeIsdiacritic(int c){$/;"	f	file:
sqlite3Fts5VocabInit	ext/fts5/fts5_vocab.c	/^int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f
sqlite3Fts5VocabInit	fts5.c	/^static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5VocabInit	sqlite3.c	/^static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3Fts5VocabInit	tsrc/fts5.c	/^static int sqlite3Fts5VocabInit(Fts5Global *pGlobal, sqlite3 *db){$/;"	f	file:
sqlite3FtsUnicodeFold	ext/fts3/fts3_unicode2.c	/^int sqlite3FtsUnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3FtsUnicodeFold	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3FtsUnicodeFold	tsrc/fts3_unicode2.c	/^int sqlite3FtsUnicodeFold(int c, int bRemoveDiacritic){$/;"	f
sqlite3FtsUnicodeIsalnum	ext/fts3/fts3_unicode2.c	/^int sqlite3FtsUnicodeIsalnum(int c){$/;"	f
sqlite3FtsUnicodeIsalnum	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsalnum(int c){$/;"	f
sqlite3FtsUnicodeIsalnum	tsrc/fts3_unicode2.c	/^int sqlite3FtsUnicodeIsalnum(int c){$/;"	f
sqlite3FtsUnicodeIsdiacritic	ext/fts3/fts3_unicode2.c	/^int sqlite3FtsUnicodeIsdiacritic(int c){$/;"	f
sqlite3FtsUnicodeIsdiacritic	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FtsUnicodeIsdiacritic(int c){$/;"	f
sqlite3FtsUnicodeIsdiacritic	tsrc/fts3_unicode2.c	/^int sqlite3FtsUnicodeIsdiacritic(int c){$/;"	f
sqlite3FunctionUsesThisSrc	sqlite3.c	/^SQLITE_PRIVATE int sqlite3FunctionUsesThisSrc(Expr *pExpr, SrcList *pSrcList){$/;"	f
sqlite3FunctionUsesThisSrc	src/expr.c	/^int sqlite3FunctionUsesThisSrc(Expr *pExpr, SrcList *pSrcList){$/;"	f
sqlite3FunctionUsesThisSrc	tsrc/expr.c	/^int sqlite3FunctionUsesThisSrc(Expr *pExpr, SrcList *pSrcList){$/;"	f
sqlite3GenerateConstraintChecks	sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateConstraintChecks	src/insert.c	/^void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateConstraintChecks	tsrc/insert.c	/^void sqlite3GenerateConstraintChecks($/;"	f
sqlite3GenerateIndexKey	sqlite3.c	/^SQLITE_PRIVATE int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateIndexKey	src/delete.c	/^int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateIndexKey	tsrc/delete.c	/^int sqlite3GenerateIndexKey($/;"	f
sqlite3GenerateRowDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowDelete	src/delete.c	/^void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowDelete	tsrc/delete.c	/^void sqlite3GenerateRowDelete($/;"	f
sqlite3GenerateRowIndexDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3GenerateRowIndexDelete	src/delete.c	/^void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3GenerateRowIndexDelete	tsrc/delete.c	/^void sqlite3GenerateRowIndexDelete($/;"	f
sqlite3Get4byte	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3Get4byte	src/util.c	/^u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3Get4byte	tsrc/util.c	/^u32 sqlite3Get4byte(const u8 *p){$/;"	f
sqlite3GetBoolean	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetBoolean(const char *z, u8 dflt){$/;"	f
sqlite3GetBoolean	src/pragma.c	/^u8 sqlite3GetBoolean(const char *z, u8 dflt){$/;"	f
sqlite3GetBoolean	tsrc/pragma.c	/^u8 sqlite3GetBoolean(const char *z, u8 dflt){$/;"	f
sqlite3GetCollSeq	sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetCollSeq	src/callback.c	/^CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetCollSeq	tsrc/callback.c	/^CollSeq *sqlite3GetCollSeq($/;"	f
sqlite3GetFuncCollSeq	sqlite3.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetFuncCollSeq	src/func.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetFuncCollSeq	tsrc/func.c	/^static CollSeq *sqlite3GetFuncCollSeq(sqlite3_context *context){$/;"	f	file:
sqlite3GetInt32	sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetInt32	src/util.c	/^int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetInt32	tsrc/util.c	/^int sqlite3GetInt32(const char *zNum, int *pValue){$/;"	f
sqlite3GetTempRange	sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempRange	src/expr.c	/^int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempRange	tsrc/expr.c	/^int sqlite3GetTempRange(Parse *pParse, int nReg){$/;"	f
sqlite3GetTempReg	sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetTempReg	src/expr.c	/^int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetTempReg	tsrc/expr.c	/^int sqlite3GetTempReg(Parse *pParse){$/;"	f
sqlite3GetToken	sqlite3.c	/^SQLITE_PRIVATE int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetToken	src/tokenize.c	/^int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetToken	tsrc/tokenize.c	/^int sqlite3GetToken(const unsigned char *z, int *tokenType){$/;"	f
sqlite3GetVTable	sqlite3.c	/^SQLITE_PRIVATE VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVTable	sqlite3.c	16645;"	d	file:
sqlite3GetVTable	src/sqliteInt.h	4046;"	d
sqlite3GetVTable	src/vtab.c	/^VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVTable	tsrc/sqliteInt.h	4046;"	d
sqlite3GetVTable	tsrc/vtab.c	/^VTable *sqlite3GetVTable(sqlite3 *db, Table *pTab){$/;"	f
sqlite3GetVarint	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint	src/util.c	/^u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint	tsrc/util.c	/^u8 sqlite3GetVarint(const unsigned char *p, u64 *v){$/;"	f
sqlite3GetVarint32	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVarint32	src/util.c	/^u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVarint32	tsrc/util.c	/^u8 sqlite3GetVarint32(const unsigned char *p, u32 *v){$/;"	f
sqlite3GetVdbe	sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GetVdbe	src/select.c	/^Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GetVdbe	tsrc/select.c	/^Vdbe *sqlite3GetVdbe(Parse *pParse){$/;"	f
sqlite3GlobalConfig	sqlite3.c	11904;"	d	file:
sqlite3GlobalConfig	sqlite3.c	11910;"	d	file:
sqlite3GlobalConfig	src/sqliteInt.h	970;"	d
sqlite3GlobalConfig	src/sqliteInt.h	976;"	d
sqlite3GlobalConfig	tsrc/sqliteInt.h	970;"	d
sqlite3GlobalConfig	tsrc/sqliteInt.h	976;"	d
sqlite3HaltConstraint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3HaltConstraint($/;"	f
sqlite3HaltConstraint	src/build.c	/^void sqlite3HaltConstraint($/;"	f
sqlite3HaltConstraint	tsrc/build.c	/^void sqlite3HaltConstraint($/;"	f
sqlite3HashClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashClear	src/hash.c	/^void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashClear	tsrc/hash.c	/^void sqlite3HashClear(Hash *pH){$/;"	f
sqlite3HashFind	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashFind(const Hash *pH, const char *pKey){$/;"	f
sqlite3HashFind	src/hash.c	/^void *sqlite3HashFind(const Hash *pH, const char *pKey){$/;"	f
sqlite3HashFind	tsrc/hash.c	/^void *sqlite3HashFind(const Hash *pH, const char *pKey){$/;"	f
sqlite3HashInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInit	src/hash.c	/^void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInit	tsrc/hash.c	/^void sqlite3HashInit(Hash *pNew){$/;"	f
sqlite3HashInsert	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){$/;"	f
sqlite3HashInsert	src/hash.c	/^void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){$/;"	f
sqlite3HashInsert	tsrc/hash.c	/^void *sqlite3HashInsert(Hash *pH, const char *pKey, void *data){$/;"	f
sqlite3HeaderSizeBtree	sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizeBtree(void){ return ROUND8(sizeof(MemPage)); }$/;"	f
sqlite3HeaderSizeBtree	src/btree.c	/^int sqlite3HeaderSizeBtree(void){ return ROUND8(sizeof(MemPage)); }$/;"	f
sqlite3HeaderSizeBtree	tsrc/btree.c	/^int sqlite3HeaderSizeBtree(void){ return ROUND8(sizeof(MemPage)); }$/;"	f
sqlite3HeaderSizePcache	sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache(void){ return ROUND8(sizeof(PgHdr)); }$/;"	f
sqlite3HeaderSizePcache	src/pcache.c	/^int sqlite3HeaderSizePcache(void){ return ROUND8(sizeof(PgHdr)); }$/;"	f
sqlite3HeaderSizePcache	tsrc/pcache.c	/^int sqlite3HeaderSizePcache(void){ return ROUND8(sizeof(PgHdr)); }$/;"	f
sqlite3HeaderSizePcache1	sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeaderSizePcache1(void){ return ROUND8(sizeof(PgHdr1)); }$/;"	f
sqlite3HeaderSizePcache1	src/pcache1.c	/^int sqlite3HeaderSizePcache1(void){ return ROUND8(sizeof(PgHdr1)); }$/;"	f
sqlite3HeaderSizePcache1	tsrc/pcache1.c	/^int sqlite3HeaderSizePcache1(void){ return ROUND8(sizeof(PgHdr1)); }$/;"	f
sqlite3HeapNearlyFull	sqlite3.c	/^SQLITE_PRIVATE int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HeapNearlyFull	src/malloc.c	/^int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HeapNearlyFull	tsrc/malloc.c	/^int sqlite3HeapNearlyFull(void){$/;"	f
sqlite3HexToBlob	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToBlob	src/util.c	/^void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToBlob	tsrc/util.c	/^void *sqlite3HexToBlob(sqlite3 *db, const char *z, int n){$/;"	f
sqlite3HexToInt	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3HexToInt(int h){$/;"	f
sqlite3HexToInt	src/util.c	/^u8 sqlite3HexToInt(int h){$/;"	f
sqlite3HexToInt	tsrc/util.c	/^u8 sqlite3HexToInt(int h){$/;"	f
sqlite3Hooks	sqlite3.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hooks	src/fault.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hooks	tsrc/fault.c	/^} sqlite3Hooks = { 0, 0 };$/;"	v	typeref:struct:BenignMallocHooks	file:
sqlite3Hwtime	sqlite3.c	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	sqlite3.c	/^SQLITE_PRIVATE   sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3Hwtime	src/hwtime.h	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	src/hwtime.h	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	src/hwtime.h	/^  sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3Hwtime	tsrc/hwtime.h	/^  __declspec(naked) __inline sqlite_uint64 __cdecl sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	tsrc/hwtime.h	/^  __inline__ sqlite_uint64 sqlite3Hwtime(void){$/;"	f
sqlite3Hwtime	tsrc/hwtime.h	/^  sqlite_uint64 sqlite3Hwtime(void){ return ((sqlite_uint64)0); }$/;"	f
sqlite3IcuInit	ext/icu/icu.c	/^int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IcuInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IcuInit	tsrc/icu.c	/^int sqlite3IcuInit(sqlite3 *db){$/;"	f
sqlite3IdListAppend	sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListAppend	src/build.c	/^IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListAppend	tsrc/build.c	/^IdList *sqlite3IdListAppend(sqlite3 *db, IdList *pList, Token *pToken){$/;"	f
sqlite3IdListDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDelete	src/build.c	/^void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDelete	tsrc/build.c	/^void sqlite3IdListDelete(sqlite3 *db, IdList *pList){$/;"	f
sqlite3IdListDup	sqlite3.c	/^SQLITE_PRIVATE IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListDup	src/expr.c	/^IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListDup	tsrc/expr.c	/^IdList *sqlite3IdListDup(sqlite3 *db, IdList *p){$/;"	f
sqlite3IdListIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3IdListIndex	src/build.c	/^int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3IdListIndex	tsrc/build.c	/^int sqlite3IdListIndex(IdList *pList, const char *zName){$/;"	f
sqlite3InRhsIsConstant	sqlite3.c	/^static int sqlite3InRhsIsConstant(Expr *pIn){$/;"	f	file:
sqlite3InRhsIsConstant	src/expr.c	/^static int sqlite3InRhsIsConstant(Expr *pIn){$/;"	f	file:
sqlite3InRhsIsConstant	tsrc/expr.c	/^static int sqlite3InRhsIsConstant(Expr *pIn){$/;"	f	file:
sqlite3IndexAffinityOk	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityOk	src/expr.c	/^int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityOk	tsrc/expr.c	/^int sqlite3IndexAffinityOk(Expr *pExpr, char idx_affinity){$/;"	f
sqlite3IndexAffinityStr	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3IndexAffinityStr(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3IndexAffinityStr	src/insert.c	/^const char *sqlite3IndexAffinityStr(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3IndexAffinityStr	tsrc/insert.c	/^const char *sqlite3IndexAffinityStr(sqlite3 *db, Index *pIdx){$/;"	f
sqlite3IndexColumnAffinity	sqlite3.c	/^static char sqlite3IndexColumnAffinity(sqlite3 *db, Index *pIdx, int iCol){$/;"	f	file:
sqlite3IndexColumnAffinity	src/where.c	/^static char sqlite3IndexColumnAffinity(sqlite3 *db, Index *pIdx, int iCol){$/;"	f	file:
sqlite3IndexColumnAffinity	tsrc/where.c	/^static char sqlite3IndexColumnAffinity(sqlite3 *db, Index *pIdx, int iCol){$/;"	f	file:
sqlite3IndexedByLookup	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3IndexedByLookup	src/select.c	/^int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3IndexedByLookup	tsrc/select.c	/^int sqlite3IndexedByLookup(Parse *pParse, struct SrcList_item *pFrom){$/;"	f
sqlite3Init	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3Init	src/prepare.c	/^int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3Init	tsrc/prepare.c	/^int sqlite3Init(sqlite3 *db, char **pzErrMsg){$/;"	f
sqlite3InitCallback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitCallback	src/prepare.c	/^int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitCallback	tsrc/prepare.c	/^int sqlite3InitCallback(void *pInit, int argc, char **argv, char **NotUsed){$/;"	f
sqlite3InitInfo	sqlite3.c	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3	file:
sqlite3InitInfo	src/sqliteInt.h	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3
sqlite3InitInfo	tsrc/sqliteInt.h	/^  struct sqlite3InitInfo {      \/* Information used during initialization *\/$/;"	s	struct:sqlite3
sqlite3InitOne	sqlite3.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3InitOne	src/prepare.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3InitOne	tsrc/prepare.c	/^static int sqlite3InitOne(sqlite3 *db, int iDb, char **pzErrMsg){$/;"	f	file:
sqlite3Insert	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Insert($/;"	f
sqlite3Insert	src/insert.c	/^void sqlite3Insert($/;"	f
sqlite3Insert	tsrc/insert.c	/^void sqlite3Insert($/;"	f
sqlite3InsertBuiltinFuncs	sqlite3.c	/^SQLITE_PRIVATE void sqlite3InsertBuiltinFuncs($/;"	f
sqlite3InsertBuiltinFuncs	src/callback.c	/^void sqlite3InsertBuiltinFuncs($/;"	f
sqlite3InsertBuiltinFuncs	tsrc/callback.c	/^void sqlite3InsertBuiltinFuncs($/;"	f
sqlite3IntFloatCompare	sqlite3.c	/^static int sqlite3IntFloatCompare(i64 i, double r){$/;"	f	file:
sqlite3IntFloatCompare	src/vdbeaux.c	/^static int sqlite3IntFloatCompare(i64 i, double r){$/;"	f	file:
sqlite3IntFloatCompare	tsrc/vdbeaux.c	/^static int sqlite3IntFloatCompare(i64 i, double r){$/;"	f	file:
sqlite3IntTokens	sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	sqlite3.c	/^SQLITE_PRIVATE const Token sqlite3IntTokens[];$/;"	v
sqlite3IntTokens	src/global.c	/^const Token sqlite3IntTokens[] = {$/;"	v
sqlite3IntTokens	tsrc/global.c	/^const Token sqlite3IntTokens[] = {$/;"	v
sqlite3InvalidFunction	sqlite3.c	/^SQLITE_PRIVATE void sqlite3InvalidFunction($/;"	f
sqlite3InvalidFunction	src/vdbeapi.c	/^void sqlite3InvalidFunction($/;"	f
sqlite3InvalidFunction	tsrc/vdbeapi.c	/^void sqlite3InvalidFunction($/;"	f
sqlite3InvokeBusyHandler	sqlite3.c	/^SQLITE_PRIVATE int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3InvokeBusyHandler	src/main.c	/^int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3InvokeBusyHandler	tsrc/main.c	/^int sqlite3InvokeBusyHandler(BusyHandler *p){$/;"	f
sqlite3IoTrace	sqlite3.c	/^SQLITE_API SQLITE_EXTERN void (SQLITE_CDECL *sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IoTrace	sqlite3.c	/^SQLITE_API void (SQLITE_CDECL *sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoTrace	src/main.c	/^SQLITE_API void (SQLITE_CDECL *sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoTrace	src/sqliteInt.h	/^SQLITE_API SQLITE_EXTERN void (SQLITE_CDECL *sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IoTrace	tsrc/main.c	/^SQLITE_API void (SQLITE_CDECL *sqlite3IoTrace)(const char*, ...) = 0;$/;"	v
sqlite3IoTrace	tsrc/sqliteInt.h	/^SQLITE_API SQLITE_EXTERN void (SQLITE_CDECL *sqlite3IoTrace)(const char*,...);$/;"	v
sqlite3IoerrnomemError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IoerrnomemError(int lineno){$/;"	f
sqlite3IoerrnomemError	src/main.c	/^int sqlite3IoerrnomemError(int lineno){$/;"	f
sqlite3IoerrnomemError	tsrc/main.c	/^int sqlite3IoerrnomemError(int lineno){$/;"	f
sqlite3IsEbcdicIdChar	sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	sqlite3.c	/^SQLITE_PRIVATE const char sqlite3IsEbcdicIdChar[];$/;"	v
sqlite3IsEbcdicIdChar	src/tokenize.c	/^const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsEbcdicIdChar	tsrc/tokenize.c	/^const char sqlite3IsEbcdicIdChar[] = {$/;"	v
sqlite3IsIdChar	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsIdChar(u8 c){ return IdChar(c); }$/;"	f
sqlite3IsIdChar	src/tokenize.c	/^int sqlite3IsIdChar(u8 c){ return IdChar(c); }$/;"	f
sqlite3IsIdChar	tsrc/tokenize.c	/^int sqlite3IsIdChar(u8 c){ return IdChar(c); }$/;"	f
sqlite3IsLikeFunction	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsLikeFunction	src/func.c	/^int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsLikeFunction	tsrc/func.c	/^int sqlite3IsLikeFunction(sqlite3 *db, Expr *pExpr, int *pIsNocase, char *aWc){$/;"	f
sqlite3IsNaN	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	sqlite3.c	16088;"	d	file:
sqlite3IsNaN	src/sqliteInt.h	3489;"	d
sqlite3IsNaN	src/util.c	/^int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNaN	tsrc/sqliteInt.h	3489;"	d
sqlite3IsNaN	tsrc/util.c	/^int sqlite3IsNaN(double x){$/;"	f
sqlite3IsNumericAffinity	sqlite3.c	14318;"	d	file:
sqlite3IsNumericAffinity	src/sqliteInt.h	1719;"	d
sqlite3IsNumericAffinity	tsrc/sqliteInt.h	1719;"	d
sqlite3IsReadOnly	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsReadOnly	src/delete.c	/^int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsReadOnly	tsrc/delete.c	/^int sqlite3IsReadOnly(Parse *pParse, Table *pTab, int viewOk){$/;"	f
sqlite3IsRowid	sqlite3.c	/^SQLITE_PRIVATE int sqlite3IsRowid(const char *z){$/;"	f
sqlite3IsRowid	src/expr.c	/^int sqlite3IsRowid(const char *z){$/;"	f
sqlite3IsRowid	tsrc/expr.c	/^int sqlite3IsRowid(const char *z){$/;"	f
sqlite3IsToplevel	sqlite3.c	16398;"	d	file:
sqlite3IsToplevel	sqlite3.c	16408;"	d	file:
sqlite3IsToplevel	src/sqliteInt.h	3799;"	d
sqlite3IsToplevel	src/sqliteInt.h	3809;"	d
sqlite3IsToplevel	tsrc/sqliteInt.h	3799;"	d
sqlite3IsToplevel	tsrc/sqliteInt.h	3809;"	d
sqlite3Isalnum	sqlite3.c	15980;"	d	file:
sqlite3Isalnum	sqlite3.c	15989;"	d	file:
sqlite3Isalnum	src/sqliteInt.h	3381;"	d
sqlite3Isalnum	src/sqliteInt.h	3390;"	d
sqlite3Isalnum	tsrc/sqliteInt.h	3381;"	d
sqlite3Isalnum	tsrc/sqliteInt.h	3390;"	d
sqlite3Isalpha	sqlite3.c	15981;"	d	file:
sqlite3Isalpha	sqlite3.c	15990;"	d	file:
sqlite3Isalpha	src/sqliteInt.h	3382;"	d
sqlite3Isalpha	src/sqliteInt.h	3391;"	d
sqlite3Isalpha	tsrc/sqliteInt.h	3382;"	d
sqlite3Isalpha	tsrc/sqliteInt.h	3391;"	d
sqlite3Isdigit	sqlite3.c	15982;"	d	file:
sqlite3Isdigit	sqlite3.c	15991;"	d	file:
sqlite3Isdigit	src/sqliteInt.h	3383;"	d
sqlite3Isdigit	src/sqliteInt.h	3392;"	d
sqlite3Isdigit	tsrc/sqliteInt.h	3383;"	d
sqlite3Isdigit	tsrc/sqliteInt.h	3392;"	d
sqlite3Isquote	sqlite3.c	15985;"	d	file:
sqlite3Isquote	sqlite3.c	15994;"	d	file:
sqlite3Isquote	src/sqliteInt.h	3386;"	d
sqlite3Isquote	src/sqliteInt.h	3395;"	d
sqlite3Isquote	tsrc/sqliteInt.h	3386;"	d
sqlite3Isquote	tsrc/sqliteInt.h	3395;"	d
sqlite3Isspace	sqlite3.c	15979;"	d	file:
sqlite3Isspace	sqlite3.c	15988;"	d	file:
sqlite3Isspace	src/sqliteInt.h	3380;"	d
sqlite3Isspace	src/sqliteInt.h	3389;"	d
sqlite3Isspace	tsrc/sqliteInt.h	3380;"	d
sqlite3Isspace	tsrc/sqliteInt.h	3389;"	d
sqlite3Isxdigit	sqlite3.c	15983;"	d	file:
sqlite3Isxdigit	sqlite3.c	15992;"	d	file:
sqlite3Isxdigit	src/sqliteInt.h	3384;"	d
sqlite3Isxdigit	src/sqliteInt.h	3393;"	d
sqlite3Isxdigit	tsrc/sqliteInt.h	3384;"	d
sqlite3Isxdigit	tsrc/sqliteInt.h	3393;"	d
sqlite3JoinType	sqlite3.c	/^SQLITE_PRIVATE int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JoinType	src/select.c	/^int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JoinType	tsrc/select.c	/^int sqlite3JoinType(Parse *pParse, Token *pA, Token *pB, Token *pC){$/;"	f
sqlite3JournalCreate	sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalCreate	src/memjournal.c	/^int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalCreate	tsrc/memjournal.c	/^int sqlite3JournalCreate(sqlite3_file *p){$/;"	f
sqlite3JournalIsInMemory	sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalIsInMemory(sqlite3_file *p){$/;"	f
sqlite3JournalIsInMemory	src/memjournal.c	/^int sqlite3JournalIsInMemory(sqlite3_file *p){$/;"	f
sqlite3JournalIsInMemory	tsrc/memjournal.c	/^int sqlite3JournalIsInMemory(sqlite3_file *p){$/;"	f
sqlite3JournalModename	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalModename	src/pragma.c	/^const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalModename	tsrc/pragma.c	/^const char *sqlite3JournalModename(int eMode){$/;"	f
sqlite3JournalOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalOpen($/;"	f
sqlite3JournalOpen	src/memjournal.c	/^int sqlite3JournalOpen($/;"	f
sqlite3JournalOpen	tsrc/memjournal.c	/^int sqlite3JournalOpen($/;"	f
sqlite3JournalSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3JournalSize	src/memjournal.c	/^int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3JournalSize	tsrc/memjournal.c	/^int sqlite3JournalSize(sqlite3_vfs *pVfs){$/;"	f
sqlite3Json1Init	ext/misc/json1.c	/^int sqlite3Json1Init(sqlite3 *db){$/;"	f
sqlite3Json1Init	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Json1Init(sqlite3 *db){$/;"	f
sqlite3Json1Init	tsrc/json1.c	/^int sqlite3Json1Init(sqlite3 *db){$/;"	f
sqlite3KeyInfoAlloc	sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoAlloc(sqlite3 *db, int N, int X){$/;"	f
sqlite3KeyInfoAlloc	src/select.c	/^KeyInfo *sqlite3KeyInfoAlloc(sqlite3 *db, int N, int X){$/;"	f
sqlite3KeyInfoAlloc	tsrc/select.c	/^KeyInfo *sqlite3KeyInfoAlloc(sqlite3 *db, int N, int X){$/;"	f
sqlite3KeyInfoIsWriteable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeyInfoIsWriteable(KeyInfo *p){ return p->nRef==1; }$/;"	f
sqlite3KeyInfoIsWriteable	src/select.c	/^int sqlite3KeyInfoIsWriteable(KeyInfo *p){ return p->nRef==1; }$/;"	f
sqlite3KeyInfoIsWriteable	tsrc/select.c	/^int sqlite3KeyInfoIsWriteable(KeyInfo *p){ return p->nRef==1; }$/;"	f
sqlite3KeyInfoOfIndex	sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoOfIndex(Parse *pParse, Index *pIdx){$/;"	f
sqlite3KeyInfoOfIndex	src/build.c	/^KeyInfo *sqlite3KeyInfoOfIndex(Parse *pParse, Index *pIdx){$/;"	f
sqlite3KeyInfoOfIndex	tsrc/build.c	/^KeyInfo *sqlite3KeyInfoOfIndex(Parse *pParse, Index *pIdx){$/;"	f
sqlite3KeyInfoRef	sqlite3.c	/^SQLITE_PRIVATE KeyInfo *sqlite3KeyInfoRef(KeyInfo *p){$/;"	f
sqlite3KeyInfoRef	src/select.c	/^KeyInfo *sqlite3KeyInfoRef(KeyInfo *p){$/;"	f
sqlite3KeyInfoRef	tsrc/select.c	/^KeyInfo *sqlite3KeyInfoRef(KeyInfo *p){$/;"	f
sqlite3KeyInfoUnref	sqlite3.c	/^SQLITE_PRIVATE void sqlite3KeyInfoUnref(KeyInfo *p){$/;"	f
sqlite3KeyInfoUnref	src/select.c	/^void sqlite3KeyInfoUnref(KeyInfo *p){$/;"	f
sqlite3KeyInfoUnref	tsrc/select.c	/^void sqlite3KeyInfoUnref(KeyInfo *p){$/;"	f
sqlite3KeywordCode	keywordhash.h	/^int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3KeywordCode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3KeywordCode	tsrc/keywordhash.h	/^int sqlite3KeywordCode(const unsigned char *z, int n){$/;"	f
sqlite3LeaveMutexAndCloseZombie	sqlite3.c	/^SQLITE_PRIVATE void sqlite3LeaveMutexAndCloseZombie(sqlite3 *db){$/;"	f
sqlite3LeaveMutexAndCloseZombie	src/main.c	/^void sqlite3LeaveMutexAndCloseZombie(sqlite3 *db){$/;"	f
sqlite3LeaveMutexAndCloseZombie	tsrc/main.c	/^void sqlite3LeaveMutexAndCloseZombie(sqlite3 *db){$/;"	f
sqlite3LimitWhere	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3LimitWhere($/;"	f
sqlite3LimitWhere	src/delete.c	/^Expr *sqlite3LimitWhere($/;"	f
sqlite3LimitWhere	tsrc/delete.c	/^Expr *sqlite3LimitWhere($/;"	f
sqlite3LoadExtension	sqlite3.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LoadExtension	src/loadext.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LoadExtension	tsrc/loadext.c	/^static int sqlite3LoadExtension($/;"	f	file:
sqlite3LocateCollSeq	sqlite3.c	/^SQLITE_PRIVATE CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateCollSeq	src/build.c	/^CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateCollSeq	tsrc/build.c	/^CollSeq *sqlite3LocateCollSeq(Parse *pParse, const char *zName){$/;"	f
sqlite3LocateTable	sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTable($/;"	f
sqlite3LocateTable	src/build.c	/^Table *sqlite3LocateTable($/;"	f
sqlite3LocateTable	tsrc/build.c	/^Table *sqlite3LocateTable($/;"	f
sqlite3LocateTableItem	sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3LocateTableItem($/;"	f
sqlite3LocateTableItem	src/build.c	/^Table *sqlite3LocateTableItem($/;"	f
sqlite3LocateTableItem	tsrc/build.c	/^Table *sqlite3LocateTableItem($/;"	f
sqlite3LockAndPrepare	sqlite3.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3LockAndPrepare	src/prepare.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3LockAndPrepare	tsrc/prepare.c	/^static int sqlite3LockAndPrepare($/;"	f	file:
sqlite3LogEst	sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEst(u64 x){$/;"	f
sqlite3LogEst	src/util.c	/^LogEst sqlite3LogEst(u64 x){$/;"	f
sqlite3LogEst	tsrc/util.c	/^LogEst sqlite3LogEst(u64 x){$/;"	f
sqlite3LogEstAdd	sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstAdd(LogEst a, LogEst b){$/;"	f
sqlite3LogEstAdd	src/util.c	/^LogEst sqlite3LogEstAdd(LogEst a, LogEst b){$/;"	f
sqlite3LogEstAdd	tsrc/util.c	/^LogEst sqlite3LogEstAdd(LogEst a, LogEst b){$/;"	f
sqlite3LogEstFromDouble	sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3LogEstFromDouble(double x){$/;"	f
sqlite3LogEstFromDouble	src/util.c	/^LogEst sqlite3LogEstFromDouble(double x){$/;"	f
sqlite3LogEstFromDouble	tsrc/util.c	/^LogEst sqlite3LogEstFromDouble(double x){$/;"	f
sqlite3LogEstToInt	sqlite3.c	/^SQLITE_PRIVATE u64 sqlite3LogEstToInt(LogEst x){$/;"	f
sqlite3LogEstToInt	src/util.c	/^u64 sqlite3LogEstToInt(LogEst x){$/;"	f
sqlite3LogEstToInt	tsrc/util.c	/^u64 sqlite3LogEstToInt(LogEst x){$/;"	f
sqlite3MPrintf	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3MPrintf	src/printf.c	/^char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3MPrintf	tsrc/printf.c	/^char *sqlite3MPrintf(sqlite3 *db, const char *zFormat, ...){$/;"	f
sqlite3Malloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Malloc(u64 n){$/;"	f
sqlite3Malloc	src/malloc.c	/^void *sqlite3Malloc(u64 n){$/;"	f
sqlite3Malloc	tsrc/malloc.c	/^void *sqlite3Malloc(u64 n){$/;"	f
sqlite3MallocAlarm	sqlite3.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocAlarm	src/malloc.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocAlarm	tsrc/malloc.c	/^static void sqlite3MallocAlarm(int nByte){$/;"	f	file:
sqlite3MallocEnd	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocEnd	src/malloc.c	/^void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocEnd	tsrc/malloc.c	/^void sqlite3MallocEnd(void){$/;"	f
sqlite3MallocInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocInit(void){$/;"	f
sqlite3MallocInit	src/malloc.c	/^int sqlite3MallocInit(void){$/;"	f
sqlite3MallocInit	tsrc/malloc.c	/^int sqlite3MallocInit(void){$/;"	f
sqlite3MallocMutex	sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MallocMutex(void){$/;"	f
sqlite3MallocMutex	src/malloc.c	/^sqlite3_mutex *sqlite3MallocMutex(void){$/;"	f
sqlite3MallocMutex	tsrc/malloc.c	/^sqlite3_mutex *sqlite3MallocMutex(void){$/;"	f
sqlite3MallocSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocSize	src/malloc.c	/^int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocSize	tsrc/malloc.c	/^int sqlite3MallocSize(void *p){$/;"	f
sqlite3MallocZero	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3MallocZero(u64 n){$/;"	f
sqlite3MallocZero	src/malloc.c	/^void *sqlite3MallocZero(u64 n){$/;"	f
sqlite3MallocZero	tsrc/malloc.c	/^void *sqlite3MallocZero(u64 n){$/;"	f
sqlite3MatchSpanName	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MatchSpanName($/;"	f
sqlite3MatchSpanName	src/resolve.c	/^int sqlite3MatchSpanName($/;"	f
sqlite3MatchSpanName	tsrc/resolve.c	/^int sqlite3MatchSpanName($/;"	f
sqlite3MaterializeView	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MaterializeView($/;"	f
sqlite3MaterializeView	src/delete.c	/^void sqlite3MaterializeView($/;"	f
sqlite3MaterializeView	tsrc/delete.c	/^void sqlite3MaterializeView($/;"	f
sqlite3MayAbort	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MayAbort	src/build.c	/^void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MayAbort	tsrc/build.c	/^void sqlite3MayAbort(Parse *pParse){$/;"	f
sqlite3MemCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemCompare	src/vdbeaux.c	/^int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemCompare	tsrc/vdbeaux.c	/^int sqlite3MemCompare(const Mem *pMem1, const Mem *pMem2, const CollSeq *pColl){$/;"	f
sqlite3MemFree	sqlite3.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	sqlite3.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemFree	src/mem0.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	src/mem1.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemFree	src/mem2.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemFree	tsrc/mem0.c	/^static void sqlite3MemFree(void *pPrior){ return; }$/;"	f	file:
sqlite3MemFree	tsrc/mem1.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemFree	tsrc/mem2.c	/^static void sqlite3MemFree(void *pPrior){$/;"	f	file:
sqlite3MemGetMemsys3	sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys3	src/mem3.c	/^const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys3	tsrc/mem3.c	/^const sqlite3_mem_methods *sqlite3MemGetMemsys3(void){$/;"	f
sqlite3MemGetMemsys5	sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetMemsys5	src/mem5.c	/^const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetMemsys5	tsrc/mem5.c	/^const sqlite3_mem_methods *sqlite3MemGetMemsys5(void){$/;"	f
sqlite3MemGetWin32	sqlite3.c	/^SQLITE_PRIVATE const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemGetWin32	src/os_win.c	/^const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemGetWin32	tsrc/os_win.c	/^const sqlite3_mem_methods *sqlite3MemGetWin32(void){$/;"	f
sqlite3MemInit	sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	sqlite3.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemInit	src/mem0.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	src/mem1.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemInit	src/mem2.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemInit	tsrc/mem0.c	/^static int sqlite3MemInit(void *NotUsed){ return SQLITE_OK; }$/;"	f	file:
sqlite3MemInit	tsrc/mem1.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemInit	tsrc/mem2.c	/^static int sqlite3MemInit(void *NotUsed){$/;"	f	file:
sqlite3MemJournalOpen	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemJournalOpen	src/memjournal.c	/^void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemJournalOpen	tsrc/memjournal.c	/^void sqlite3MemJournalOpen(sqlite3_file *pJfd){$/;"	f
sqlite3MemMalloc	sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	sqlite3.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemMalloc	src/mem0.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	src/mem1.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemMalloc	src/mem2.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemMalloc	tsrc/mem0.c	/^static void *sqlite3MemMalloc(int nByte){ return 0; }$/;"	f	file:
sqlite3MemMalloc	tsrc/mem1.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemMalloc	tsrc/mem2.c	/^static void *sqlite3MemMalloc(int nByte){$/;"	f	file:
sqlite3MemRealloc	sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	sqlite3.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRealloc	src/mem0.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	src/mem1.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRealloc	src/mem2.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRealloc	tsrc/mem0.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){ return 0; }$/;"	f	file:
sqlite3MemRealloc	tsrc/mem1.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRealloc	tsrc/mem2.c	/^static void *sqlite3MemRealloc(void *pPrior, int nByte){$/;"	f	file:
sqlite3MemRoundup	sqlite3.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	sqlite3.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemRoundup	src/mem0.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	src/mem1.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemRoundup	src/mem2.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemRoundup	tsrc/mem0.c	/^static int sqlite3MemRoundup(int n){ return n; }$/;"	f	file:
sqlite3MemRoundup	tsrc/mem1.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemRoundup	tsrc/mem2.c	/^static int sqlite3MemRoundup(int n){$/;"	f	file:
sqlite3MemSetDefault	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	src/mem0.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	src/mem1.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	src/mem2.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	src/os_win.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	tsrc/mem0.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	tsrc/mem1.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	tsrc/mem2.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemSetDefault	tsrc/os_win.c	/^void sqlite3MemSetDefault(void){$/;"	f
sqlite3MemShutdown	sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	sqlite3.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemShutdown	src/mem0.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	src/mem1.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemShutdown	src/mem2.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemShutdown	tsrc/mem0.c	/^static void sqlite3MemShutdown(void *NotUsed){ return; }$/;"	f	file:
sqlite3MemShutdown	tsrc/mem1.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemShutdown	tsrc/mem2.c	/^static void sqlite3MemShutdown(void *NotUsed){$/;"	f	file:
sqlite3MemSize	sqlite3.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	sqlite3.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	sqlite3.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemSize	src/mem0.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	src/mem1.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemSize	src/mem2.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemSize	tsrc/mem0.c	/^static int sqlite3MemSize(void *pPrior){ return 0; }$/;"	f	file:
sqlite3MemSize	tsrc/mem1.c	/^static int sqlite3MemSize(void *pPrior){$/;"	f	file:
sqlite3MemSize	tsrc/mem2.c	/^static int sqlite3MemSize(void *p){$/;"	f	file:
sqlite3MemdebugBacktrace	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktrace	src/mem2.c	/^void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktrace	tsrc/mem2.c	/^void sqlite3MemdebugBacktrace(int depth){$/;"	f
sqlite3MemdebugBacktraceCallback	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugBacktraceCallback	src/mem2.c	/^void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugBacktraceCallback	tsrc/mem2.c	/^void sqlite3MemdebugBacktraceCallback(void (*xBacktrace)(int, int, void **)){$/;"	f
sqlite3MemdebugDump	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugDump	src/mem2.c	/^void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugDump	tsrc/mem2.c	/^void sqlite3MemdebugDump(const char *zFilename){$/;"	f
sqlite3MemdebugHasType	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	sqlite3.c	16843;"	d	file:
sqlite3MemdebugHasType	src/mem2.c	/^int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	src/sqliteInt.h	4244;"	d
sqlite3MemdebugHasType	tsrc/mem2.c	/^int sqlite3MemdebugHasType(void *p, u8 eType){$/;"	f
sqlite3MemdebugHasType	tsrc/sqliteInt.h	4244;"	d
sqlite3MemdebugMallocCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugMallocCount	src/mem2.c	/^int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugMallocCount	tsrc/mem2.c	/^int sqlite3MemdebugMallocCount(){$/;"	f
sqlite3MemdebugNoType	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	sqlite3.c	16844;"	d	file:
sqlite3MemdebugNoType	src/mem2.c	/^int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	src/sqliteInt.h	4245;"	d
sqlite3MemdebugNoType	tsrc/mem2.c	/^int sqlite3MemdebugNoType(void *p, u8 eType){$/;"	f
sqlite3MemdebugNoType	tsrc/sqliteInt.h	4245;"	d
sqlite3MemdebugSetType	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	sqlite3.c	16842;"	d	file:
sqlite3MemdebugSetType	src/mem2.c	/^void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	src/sqliteInt.h	4243;"	d
sqlite3MemdebugSetType	tsrc/mem2.c	/^void sqlite3MemdebugSetType(void *p, u8 eType){$/;"	f
sqlite3MemdebugSetType	tsrc/sqliteInt.h	4243;"	d
sqlite3MemdebugSettitle	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSettitle	src/mem2.c	/^void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSettitle	tsrc/mem2.c	/^void sqlite3MemdebugSettitle(const char *zTitle){$/;"	f
sqlite3MemdebugSync	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemdebugSync(){$/;"	f
sqlite3MemdebugSync	src/mem2.c	/^void sqlite3MemdebugSync(){$/;"	f
sqlite3MemdebugSync	tsrc/mem2.c	/^void sqlite3MemdebugSync(){$/;"	f
sqlite3MemoryBarrier	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	sqlite3.c	16073;"	d	file:
sqlite3MemoryBarrier	src/mutex_unix.c	/^void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	src/mutex_w32.c	/^void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	src/sqliteInt.h	3474;"	d
sqlite3MemoryBarrier	tsrc/mutex_unix.c	/^void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	tsrc/mutex_w32.c	/^void sqlite3MemoryBarrier(void){$/;"	f
sqlite3MemoryBarrier	tsrc/sqliteInt.h	3474;"	d
sqlite3Memsys3Dump	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys3Dump	src/mem3.c	/^void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys3Dump	tsrc/mem3.c	/^void sqlite3Memsys3Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	src/mem5.c	/^void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3Memsys5Dump	tsrc/mem5.c	/^void sqlite3Memsys5Dump(const char *zFilename){$/;"	f
sqlite3MemsysGetHeader	sqlite3.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MemsysGetHeader	src/mem2.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MemsysGetHeader	tsrc/mem2.c	/^static struct MemBlockHdr *sqlite3MemsysGetHeader(void *pAllocation){$/;"	f	file:
sqlite3MisuseError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MisuseError	src/main.c	/^int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MisuseError	tsrc/main.c	/^int sqlite3MisuseError(int lineno){$/;"	f
sqlite3MulInt64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MulInt64	src/util.c	/^int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MulInt64	tsrc/util.c	/^int sqlite3MulInt64(i64 *pA, i64 iB){$/;"	f
sqlite3MultiWrite	sqlite3.c	/^SQLITE_PRIVATE void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MultiWrite	src/build.c	/^void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MultiWrite	tsrc/build.c	/^void sqlite3MultiWrite(Parse *pParse){$/;"	f
sqlite3MutexAlloc	sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	sqlite3.c	13649;"	d	file:
sqlite3MutexAlloc	src/mutex.c	/^sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	src/mutex.h	64;"	d
sqlite3MutexAlloc	tsrc/mutex.c	/^sqlite3_mutex *sqlite3MutexAlloc(int id){$/;"	f
sqlite3MutexAlloc	tsrc/mutex.h	64;"	d
sqlite3MutexEnd	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	sqlite3.c	13651;"	d	file:
sqlite3MutexEnd	src/mutex.c	/^int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	src/mutex.h	66;"	d
sqlite3MutexEnd	tsrc/mutex.c	/^int sqlite3MutexEnd(void){$/;"	f
sqlite3MutexEnd	tsrc/mutex.h	66;"	d
sqlite3MutexInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	sqlite3.c	13650;"	d	file:
sqlite3MutexInit	src/mutex.c	/^int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	src/mutex.h	65;"	d
sqlite3MutexInit	tsrc/mutex.c	/^int sqlite3MutexInit(void){ $/;"	f
sqlite3MutexInit	tsrc/mutex.h	65;"	d
sqlite3NameFromToken	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NameFromToken	src/build.c	/^char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NameFromToken	tsrc/build.c	/^char *sqlite3NameFromToken(sqlite3 *db, Token *pName){$/;"	f
sqlite3NestedParse	sqlite3.c	/^SQLITE_PRIVATE void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NestedParse	src/build.c	/^void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NestedParse	tsrc/build.c	/^void sqlite3NestedParse(Parse *pParse, const char *zFormat, ...){$/;"	f
sqlite3NoTempsInRange	sqlite3.c	/^SQLITE_PRIVATE int sqlite3NoTempsInRange(Parse *pParse, int iFirst, int iLast){$/;"	f
sqlite3NoTempsInRange	src/expr.c	/^int sqlite3NoTempsInRange(Parse *pParse, int iFirst, int iLast){$/;"	f
sqlite3NoTempsInRange	tsrc/expr.c	/^int sqlite3NoTempsInRange(Parse *pParse, int iFirst, int iLast){$/;"	f
sqlite3NomemError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3NomemError(int lineno){$/;"	f
sqlite3NomemError	src/main.c	/^int sqlite3NomemError(int lineno){$/;"	f
sqlite3NomemError	tsrc/main.c	/^int sqlite3NomemError(int lineno){$/;"	f
sqlite3NoopMutex	sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3NoopMutex	src/mutex_noop.c	/^sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3NoopMutex	tsrc/mutex_noop.c	/^sqlite3_mutex_methods const *sqlite3NoopMutex(void){$/;"	f
sqlite3OSTrace	sqlite3.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OSTrace	src/main.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OSTrace	tsrc/main.c	/^  int sqlite3OSTrace = SQLITE_DEBUG_OS_TRACE;$/;"	v
sqlite3OomClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomClear(sqlite3 *db){$/;"	f
sqlite3OomClear	src/malloc.c	/^void sqlite3OomClear(sqlite3 *db){$/;"	f
sqlite3OomClear	tsrc/malloc.c	/^void sqlite3OomClear(sqlite3 *db){$/;"	f
sqlite3OomFault	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OomFault(sqlite3 *db){$/;"	f
sqlite3OomFault	src/malloc.c	/^void sqlite3OomFault(sqlite3 *db){$/;"	f
sqlite3OomFault	tsrc/malloc.c	/^void sqlite3OomFault(sqlite3 *db){$/;"	f
sqlite3OpcodeName	opcodes.c	/^const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeName	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeName	tsrc/opcodes.c	/^const char *sqlite3OpcodeName(int i){$/;"	f
sqlite3OpcodeProperty	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3OpcodeProperty[];$/;"	v
sqlite3OpcodeProperty	src/global.c	/^const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpcodeProperty	tsrc/global.c	/^const unsigned char sqlite3OpcodeProperty[] = OPFLG_INITIALIZER;$/;"	v
sqlite3OpenMasterTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenMasterTable	src/build.c	/^void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenMasterTable	tsrc/build.c	/^void sqlite3OpenMasterTable(Parse *p, int iDb){$/;"	f
sqlite3OpenTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OpenTable($/;"	f
sqlite3OpenTable	src/insert.c	/^void sqlite3OpenTable($/;"	f
sqlite3OpenTable	tsrc/insert.c	/^void sqlite3OpenTable($/;"	f
sqlite3OpenTableAndIndices	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTableAndIndices	src/insert.c	/^int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTableAndIndices	tsrc/insert.c	/^int sqlite3OpenTableAndIndices($/;"	f
sqlite3OpenTempDatabase	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OpenTempDatabase	src/build.c	/^int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OpenTempDatabase	tsrc/build.c	/^int sqlite3OpenTempDatabase(Parse *pParse){$/;"	f
sqlite3OsAccess	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsAccess($/;"	f
sqlite3OsAccess	src/os.c	/^int sqlite3OsAccess($/;"	f
sqlite3OsAccess	tsrc/os.c	/^int sqlite3OsAccess($/;"	f
sqlite3OsCheckReservedLock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsCheckReservedLock	src/os.c	/^int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsCheckReservedLock	tsrc/os.c	/^int sqlite3OsCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f
sqlite3OsClose	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsClose	src/os.c	/^void sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsClose	tsrc/os.c	/^void sqlite3OsClose(sqlite3_file *pId){$/;"	f
sqlite3OsCloseFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCloseFree	src/os.c	/^void sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCloseFree	tsrc/os.c	/^void sqlite3OsCloseFree(sqlite3_file *pFile){$/;"	f
sqlite3OsCurrentTimeInt64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsCurrentTimeInt64	src/os.c	/^int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsCurrentTimeInt64	tsrc/os.c	/^int sqlite3OsCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f
sqlite3OsDelete	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDelete	src/os.c	/^int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDelete	tsrc/os.c	/^int sqlite3OsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f
sqlite3OsDeviceCharacteristics	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDeviceCharacteristics	src/os.c	/^int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDeviceCharacteristics	tsrc/os.c	/^int sqlite3OsDeviceCharacteristics(sqlite3_file *id){$/;"	f
sqlite3OsDlClose	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlClose	src/os.c	/^void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlClose	tsrc/os.c	/^void sqlite3OsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f
sqlite3OsDlError	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlError	src/os.c	/^void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlError	tsrc/os.c	/^void sqlite3OsDlError(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsDlOpen	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlOpen	src/os.c	/^void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlOpen	tsrc/os.c	/^void *sqlite3OsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f
sqlite3OsDlSym	sqlite3.c	/^SQLITE_PRIVATE void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsDlSym	src/os.c	/^void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsDlSym	tsrc/os.c	/^void (*sqlite3OsDlSym(sqlite3_vfs *pVfs, void *pHdle, const char *zSym))(void){$/;"	f
sqlite3OsFetch	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFetch(sqlite3_file *id, i64 iOff, int iAmt, void **pp){$/;"	f
sqlite3OsFetch	src/os.c	/^int sqlite3OsFetch(sqlite3_file *id, i64 iOff, int iAmt, void **pp){$/;"	f
sqlite3OsFetch	tsrc/os.c	/^int sqlite3OsFetch(sqlite3_file *id, i64 iOff, int iAmt, void **pp){$/;"	f
sqlite3OsFileControl	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControl	src/os.c	/^int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControl	tsrc/os.c	/^int sqlite3OsFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControlHint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsFileControlHint(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControlHint	src/os.c	/^void sqlite3OsFileControlHint(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileControlHint	tsrc/os.c	/^void sqlite3OsFileControlHint(sqlite3_file *id, int op, void *pArg){$/;"	f
sqlite3OsFileSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFileSize	src/os.c	/^int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFileSize	tsrc/os.c	/^int sqlite3OsFileSize(sqlite3_file *id, i64 *pSize){$/;"	f
sqlite3OsFullPathname	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsFullPathname($/;"	f
sqlite3OsFullPathname	src/os.c	/^int sqlite3OsFullPathname($/;"	f
sqlite3OsFullPathname	tsrc/os.c	/^int sqlite3OsFullPathname($/;"	f
sqlite3OsGetLastError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsGetLastError(sqlite3_vfs *pVfs){$/;"	f
sqlite3OsGetLastError	src/os.c	/^int sqlite3OsGetLastError(sqlite3_vfs *pVfs){$/;"	f
sqlite3OsGetLastError	tsrc/os.c	/^int sqlite3OsGetLastError(sqlite3_vfs *pVfs){$/;"	f
sqlite3OsInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsInit(void){$/;"	f
sqlite3OsInit	src/os.c	/^int sqlite3OsInit(void){$/;"	f
sqlite3OsInit	tsrc/os.c	/^int sqlite3OsInit(void){$/;"	f
sqlite3OsLock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsLock	src/os.c	/^int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsLock	tsrc/os.c	/^int sqlite3OsLock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpen($/;"	f
sqlite3OsOpen	src/os.c	/^int sqlite3OsOpen($/;"	f
sqlite3OsOpen	tsrc/os.c	/^int sqlite3OsOpen($/;"	f
sqlite3OsOpenMalloc	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsOpenMalloc($/;"	f
sqlite3OsOpenMalloc	src/os.c	/^int sqlite3OsOpenMalloc($/;"	f
sqlite3OsOpenMalloc	tsrc/os.c	/^int sqlite3OsOpenMalloc($/;"	f
sqlite3OsRandomness	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRandomness	src/os.c	/^int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRandomness	tsrc/os.c	/^int sqlite3OsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f
sqlite3OsRead	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsRead	src/os.c	/^int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsRead	tsrc/os.c	/^int sqlite3OsRead(sqlite3_file *id, void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsSectorSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsSectorSize	src/os.c	/^int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsSectorSize	tsrc/os.c	/^int sqlite3OsSectorSize(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	sqlite3.c	/^SQLITE_PRIVATE void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	src/os.c	/^void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmBarrier	tsrc/os.c	/^void sqlite3OsShmBarrier(sqlite3_file *id){$/;"	f
sqlite3OsShmLock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmLock	src/os.c	/^int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmLock	tsrc/os.c	/^int sqlite3OsShmLock(sqlite3_file *id, int offset, int n, int flags){$/;"	f
sqlite3OsShmMap	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmMap($/;"	f
sqlite3OsShmMap	src/os.c	/^int sqlite3OsShmMap($/;"	f
sqlite3OsShmMap	tsrc/os.c	/^int sqlite3OsShmMap($/;"	f
sqlite3OsShmUnmap	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsShmUnmap	src/os.c	/^int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsShmUnmap	tsrc/os.c	/^int sqlite3OsShmUnmap(sqlite3_file *id, int deleteFlag){$/;"	f
sqlite3OsSleep	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSleep	src/os.c	/^int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSleep	tsrc/os.c	/^int sqlite3OsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f
sqlite3OsSync	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsSync	src/os.c	/^int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsSync	tsrc/os.c	/^int sqlite3OsSync(sqlite3_file *id, int flags){$/;"	f
sqlite3OsTruncate	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsTruncate	src/os.c	/^int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsTruncate	tsrc/os.c	/^int sqlite3OsTruncate(sqlite3_file *id, i64 size){$/;"	f
sqlite3OsUnfetch	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnfetch(sqlite3_file *id, i64 iOff, void *p){$/;"	f
sqlite3OsUnfetch	src/os.c	/^int sqlite3OsUnfetch(sqlite3_file *id, i64 iOff, void *p){$/;"	f
sqlite3OsUnfetch	tsrc/os.c	/^int sqlite3OsUnfetch(sqlite3_file *id, i64 iOff, void *p){$/;"	f
sqlite3OsUnlock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsUnlock	src/os.c	/^int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsUnlock	tsrc/os.c	/^int sqlite3OsUnlock(sqlite3_file *id, int lockType){$/;"	f
sqlite3OsWrite	sqlite3.c	/^SQLITE_PRIVATE int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsWrite	src/os.c	/^int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3OsWrite	tsrc/os.c	/^int sqlite3OsWrite(sqlite3_file *id, const void *pBuf, int amt, i64 offset){$/;"	f
sqlite3PCacheBufferSetup	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCacheBufferSetup	src/pcache1.c	/^void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCacheBufferSetup	tsrc/pcache1.c	/^void sqlite3PCacheBufferSetup(void *pBuf, int sz, int n){$/;"	f
sqlite3PCachePercentDirty	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PCachePercentDirty(PCache *pCache){$/;"	f
sqlite3PCachePercentDirty	src/pcache.c	/^int sqlite3PCachePercentDirty(PCache *pCache){$/;"	f
sqlite3PCachePercentDirty	tsrc/pcache.c	/^int sqlite3PCachePercentDirty(PCache *pCache){$/;"	f
sqlite3PCacheSetDefault	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PCacheSetDefault	src/pcache1.c	/^void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PCacheSetDefault	tsrc/pcache1.c	/^void sqlite3PCacheSetDefault(void){$/;"	f
sqlite3PExpr	sqlite3.c	/^SQLITE_PRIVATE Expr *sqlite3PExpr($/;"	f
sqlite3PExpr	src/expr.c	/^Expr *sqlite3PExpr($/;"	f
sqlite3PExpr	tsrc/expr.c	/^Expr *sqlite3PExpr($/;"	f
sqlite3PExprAddSelect	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PExprAddSelect(Parse *pParse, Expr *pExpr, Select *pSelect){$/;"	f
sqlite3PExprAddSelect	src/expr.c	/^void sqlite3PExprAddSelect(Parse *pParse, Expr *pExpr, Select *pSelect){$/;"	f
sqlite3PExprAddSelect	tsrc/expr.c	/^void sqlite3PExprAddSelect(Parse *pParse, Expr *pExpr, Select *pSelect){$/;"	f
sqlite3PageFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PageFree(void *p){$/;"	f
sqlite3PageFree	src/pcache1.c	/^void sqlite3PageFree(void *p){$/;"	f
sqlite3PageFree	tsrc/pcache1.c	/^void sqlite3PageFree(void *p){$/;"	f
sqlite3PageMalloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PageMalloc	src/pcache1.c	/^void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PageMalloc	tsrc/pcache1.c	/^void *sqlite3PageMalloc(int sz){$/;"	f
sqlite3PagerAlignReserve	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerAlignReserve(Pager *pDest, Pager *pSrc){$/;"	f
sqlite3PagerAlignReserve	src/pager.c	/^void sqlite3PagerAlignReserve(Pager *pDest, Pager *pSrc){$/;"	f
sqlite3PagerAlignReserve	tsrc/pager.c	/^void sqlite3PagerAlignReserve(Pager *pDest, Pager *pSrc){$/;"	f
sqlite3PagerBackupPtr	sqlite3.c	/^SQLITE_PRIVATE sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBackupPtr	src/pager.c	/^sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBackupPtr	tsrc/pager.c	/^sqlite3_backup **sqlite3PagerBackupPtr(Pager *pPager){$/;"	f
sqlite3PagerBegin	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerBegin	src/pager.c	/^int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerBegin	tsrc/pager.c	/^int sqlite3PagerBegin(Pager *pPager, int exFlag, int subjInMemory){$/;"	f
sqlite3PagerCacheStat	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCacheStat	src/pager.c	/^void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCacheStat	tsrc/pager.c	/^void sqlite3PagerCacheStat(Pager *pPager, int eStat, int reset, int *pnVal){$/;"	f
sqlite3PagerCheckpoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerCheckpoint	src/pager.c	/^int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerCheckpoint	tsrc/pager.c	/^int sqlite3PagerCheckpoint(Pager *pPager, int eMode, int *pnLog, int *pnCkpt){$/;"	f
sqlite3PagerClearCache	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClearCache	src/pager.c	/^void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClearCache	tsrc/pager.c	/^void sqlite3PagerClearCache(Pager *pPager){$/;"	f
sqlite3PagerClose	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerClose	src/pager.c	/^int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerClose	tsrc/pager.c	/^int sqlite3PagerClose(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	src/pager.c	/^int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCloseWal	tsrc/pager.c	/^int sqlite3PagerCloseWal(Pager *pPager){$/;"	f
sqlite3PagerCodec	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCodec	src/pager.c	/^void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCodec	tsrc/pager.c	/^void *sqlite3PagerCodec(PgHdr *pPg){$/;"	f
sqlite3PagerCommitPhaseOne	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseOne	src/pager.c	/^int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseOne	tsrc/pager.c	/^int sqlite3PagerCommitPhaseOne($/;"	f
sqlite3PagerCommitPhaseTwo	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerCommitPhaseTwo	src/pager.c	/^int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerCommitPhaseTwo	tsrc/pager.c	/^int sqlite3PagerCommitPhaseTwo(Pager *pPager){$/;"	f
sqlite3PagerDataVersion	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3PagerDataVersion(Pager *pPager){$/;"	f
sqlite3PagerDataVersion	src/pager.c	/^u32 sqlite3PagerDataVersion(Pager *pPager){$/;"	f
sqlite3PagerDataVersion	tsrc/pager.c	/^u32 sqlite3PagerDataVersion(Pager *pPager){$/;"	f
sqlite3PagerDontWrite	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerDontWrite	src/pager.c	/^void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerDontWrite	tsrc/pager.c	/^void sqlite3PagerDontWrite(PgHdr *pPg){$/;"	f
sqlite3PagerExclusiveLock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerExclusiveLock	src/pager.c	/^int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerExclusiveLock	tsrc/pager.c	/^int sqlite3PagerExclusiveLock(Pager *pPager){$/;"	f
sqlite3PagerFile	sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFile	src/pager.c	/^sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFile	tsrc/pager.c	/^sqlite3_file *sqlite3PagerFile(Pager *pPager){$/;"	f
sqlite3PagerFilename	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerFilename(Pager *pPager, int nullIfMemDb){$/;"	f
sqlite3PagerFilename	src/pager.c	/^const char *sqlite3PagerFilename(Pager *pPager, int nullIfMemDb){$/;"	f
sqlite3PagerFilename	tsrc/pager.c	/^const char *sqlite3PagerFilename(Pager *pPager, int nullIfMemDb){$/;"	f
sqlite3PagerFlush	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerFlush(Pager *pPager){$/;"	f
sqlite3PagerFlush	src/pager.c	/^int sqlite3PagerFlush(Pager *pPager){$/;"	f
sqlite3PagerFlush	tsrc/pager.c	/^int sqlite3PagerFlush(Pager *pPager){$/;"	f
sqlite3PagerGet	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGet($/;"	f
sqlite3PagerGet	src/pager.c	/^int sqlite3PagerGet($/;"	f
sqlite3PagerGet	tsrc/pager.c	/^int sqlite3PagerGet($/;"	f
sqlite3PagerGetCodec	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetCodec	src/pager.c	/^void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetCodec	tsrc/pager.c	/^void *sqlite3PagerGetCodec(Pager *pPager){$/;"	f
sqlite3PagerGetData	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetData	src/pager.c	/^void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetData	tsrc/pager.c	/^void *sqlite3PagerGetData(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	src/pager.c	/^void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetExtra	tsrc/pager.c	/^void *sqlite3PagerGetExtra(DbPage *pPg){$/;"	f
sqlite3PagerGetJournalMode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerGetJournalMode	src/pager.c	/^int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerGetJournalMode	tsrc/pager.c	/^int sqlite3PagerGetJournalMode(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	src/pager.c	/^int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsMemdb	tsrc/pager.c	/^int sqlite3PagerIsMemdb(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	src/pager.c	/^u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIsreadonly	tsrc/pager.c	/^u8 sqlite3PagerIsreadonly(Pager *pPager){$/;"	f
sqlite3PagerIswriteable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerIswriteable	src/pager.c	/^int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerIswriteable	tsrc/pager.c	/^int sqlite3PagerIswriteable(DbPage *pPg){$/;"	f
sqlite3PagerJournalSizeLimit	sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalSizeLimit	src/pager.c	/^i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalSizeLimit	tsrc/pager.c	/^i64 sqlite3PagerJournalSizeLimit(Pager *pPager, i64 iLimit){$/;"	f
sqlite3PagerJournalname	sqlite3.c	/^SQLITE_PRIVATE const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerJournalname	src/pager.c	/^const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerJournalname	tsrc/pager.c	/^const char *sqlite3PagerJournalname(Pager *pPager){$/;"	f
sqlite3PagerJrnlFile	sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3PagerJrnlFile(Pager *pPager){$/;"	f
sqlite3PagerJrnlFile	src/pager.c	/^sqlite3_file *sqlite3PagerJrnlFile(Pager *pPager){$/;"	f
sqlite3PagerJrnlFile	tsrc/pager.c	/^sqlite3_file *sqlite3PagerJrnlFile(Pager *pPager){$/;"	f
sqlite3PagerLockingMode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLockingMode	src/pager.c	/^int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLockingMode	tsrc/pager.c	/^int sqlite3PagerLockingMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerLookup	sqlite3.c	/^SQLITE_PRIVATE DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerLookup	src/pager.c	/^DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerLookup	tsrc/pager.c	/^DbPage *sqlite3PagerLookup(Pager *pPager, Pgno pgno){$/;"	f
sqlite3PagerMaxPageCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMaxPageCount	src/pager.c	/^int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMaxPageCount	tsrc/pager.c	/^int sqlite3PagerMaxPageCount(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerMemUsed	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMemUsed	src/pager.c	/^int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMemUsed	tsrc/pager.c	/^int sqlite3PagerMemUsed(Pager *pPager){$/;"	f
sqlite3PagerMovepage	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerMovepage	src/pager.c	/^int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerMovepage	tsrc/pager.c	/^int sqlite3PagerMovepage(Pager *pPager, DbPage *pPg, Pgno pgno, int isCommit){$/;"	f
sqlite3PagerOkToChangeJournalMode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOkToChangeJournalMode	src/pager.c	/^int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOkToChangeJournalMode	tsrc/pager.c	/^int sqlite3PagerOkToChangeJournalMode(Pager *pPager){$/;"	f
sqlite3PagerOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpen($/;"	f
sqlite3PagerOpen	src/pager.c	/^int sqlite3PagerOpen($/;"	f
sqlite3PagerOpen	tsrc/pager.c	/^int sqlite3PagerOpen($/;"	f
sqlite3PagerOpenSavepoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenSavepoint	src/pager.c	/^int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenSavepoint	tsrc/pager.c	/^int sqlite3PagerOpenSavepoint(Pager *pPager, int nSavepoint){$/;"	f
sqlite3PagerOpenWal	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerOpenWal($/;"	f
sqlite3PagerOpenWal	src/pager.c	/^int sqlite3PagerOpenWal($/;"	f
sqlite3PagerOpenWal	tsrc/pager.c	/^int sqlite3PagerOpenWal($/;"	f
sqlite3PagerPageRefcount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPageRefcount	src/pager.c	/^int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPageRefcount	tsrc/pager.c	/^int sqlite3PagerPageRefcount(DbPage *pPage){$/;"	f
sqlite3PagerPagecount	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagecount	src/pager.c	/^void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagecount	tsrc/pager.c	/^void sqlite3PagerPagecount(Pager *pPager, int *pnPage){$/;"	f
sqlite3PagerPagenumber	sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerPagenumber	src/pager.c	/^Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerPagenumber	tsrc/pager.c	/^Pgno sqlite3PagerPagenumber(DbPage *pPg){$/;"	f
sqlite3PagerReadFileheader	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerReadFileheader	src/pager.c	/^int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerReadFileheader	tsrc/pager.c	/^int sqlite3PagerReadFileheader(Pager *pPager, int N, unsigned char *pDest){$/;"	f
sqlite3PagerRef	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRef	src/pager.c	/^void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRef	tsrc/pager.c	/^void sqlite3PagerRef(DbPage *pPg){$/;"	f
sqlite3PagerRefcount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRefcount	src/pager.c	/^int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRefcount	tsrc/pager.c	/^int sqlite3PagerRefcount(Pager *pPager){$/;"	f
sqlite3PagerRekey	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerRekey(DbPage *pPg, Pgno iNew, u16 flags){$/;"	f
sqlite3PagerRekey	src/pager.c	/^void sqlite3PagerRekey(DbPage *pPg, Pgno iNew, u16 flags){$/;"	f
sqlite3PagerRekey	tsrc/pager.c	/^void sqlite3PagerRekey(DbPage *pPg, Pgno iNew, u16 flags){$/;"	f
sqlite3PagerRollback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerRollback	src/pager.c	/^int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerRollback	tsrc/pager.c	/^int sqlite3PagerRollback(Pager *pPager){$/;"	f
sqlite3PagerSavepoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSavepoint	src/pager.c	/^int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSavepoint	tsrc/pager.c	/^int sqlite3PagerSavepoint(Pager *pPager, int op, int iSavepoint){$/;"	f
sqlite3PagerSetBusyhandler	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetBusyhandler	src/pager.c	/^void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetBusyhandler	tsrc/pager.c	/^void sqlite3PagerSetBusyhandler($/;"	f
sqlite3PagerSetCachesize	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCachesize	src/pager.c	/^void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCachesize	tsrc/pager.c	/^void sqlite3PagerSetCachesize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetCodec	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetCodec	src/pager.c	/^void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetCodec	tsrc/pager.c	/^void sqlite3PagerSetCodec($/;"	f
sqlite3PagerSetFlags	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetFlags($/;"	f
sqlite3PagerSetFlags	src/pager.c	/^void sqlite3PagerSetFlags($/;"	f
sqlite3PagerSetFlags	tsrc/pager.c	/^void sqlite3PagerSetFlags($/;"	f
sqlite3PagerSetJournalMode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetJournalMode	src/pager.c	/^int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetJournalMode	tsrc/pager.c	/^int sqlite3PagerSetJournalMode(Pager *pPager, int eMode){$/;"	f
sqlite3PagerSetMmapLimit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerSetMmapLimit(Pager *pPager, sqlite3_int64 szMmap){$/;"	f
sqlite3PagerSetMmapLimit	src/pager.c	/^void sqlite3PagerSetMmapLimit(Pager *pPager, sqlite3_int64 szMmap){$/;"	f
sqlite3PagerSetMmapLimit	tsrc/pager.c	/^void sqlite3PagerSetMmapLimit(Pager *pPager, sqlite3_int64 szMmap){$/;"	f
sqlite3PagerSetPagesize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetPagesize	src/pager.c	/^int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetPagesize	tsrc/pager.c	/^int sqlite3PagerSetPagesize(Pager *pPager, u32 *pPageSize, int nReserve){$/;"	f
sqlite3PagerSetSpillsize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSetSpillsize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetSpillsize	src/pager.c	/^int sqlite3PagerSetSpillsize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSetSpillsize	tsrc/pager.c	/^int sqlite3PagerSetSpillsize(Pager *pPager, int mxPage){$/;"	f
sqlite3PagerSharedLock	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerSharedLock	src/pager.c	/^int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerSharedLock	tsrc/pager.c	/^int sqlite3PagerSharedLock(Pager *pPager){$/;"	f
sqlite3PagerShrink	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerShrink(Pager *pPager){$/;"	f
sqlite3PagerShrink	src/pager.c	/^void sqlite3PagerShrink(Pager *pPager){$/;"	f
sqlite3PagerShrink	tsrc/pager.c	/^void sqlite3PagerShrink(Pager *pPager){$/;"	f
sqlite3PagerSnapshotGet	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotGet(Pager *pPager, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3PagerSnapshotGet	src/pager.c	/^int sqlite3PagerSnapshotGet(Pager *pPager, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3PagerSnapshotGet	tsrc/pager.c	/^int sqlite3PagerSnapshotGet(Pager *pPager, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3PagerSnapshotOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSnapshotOpen(Pager *pPager, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3PagerSnapshotOpen	src/pager.c	/^int sqlite3PagerSnapshotOpen(Pager *pPager, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3PagerSnapshotOpen	tsrc/pager.c	/^int sqlite3PagerSnapshotOpen(Pager *pPager, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3PagerState	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerState(Pager *pPager){$/;"	f
sqlite3PagerState	src/pager.c	/^int sqlite3PagerState(Pager *pPager){$/;"	f
sqlite3PagerState	tsrc/pager.c	/^int sqlite3PagerState(Pager *pPager){$/;"	f
sqlite3PagerStats	sqlite3.c	/^SQLITE_PRIVATE int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerStats	src/pager.c	/^int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerStats	tsrc/pager.c	/^int *sqlite3PagerStats(Pager *pPager){$/;"	f
sqlite3PagerSync	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerSync(Pager *pPager, const char *zMaster){$/;"	f
sqlite3PagerSync	src/pager.c	/^int sqlite3PagerSync(Pager *pPager, const char *zMaster){$/;"	f
sqlite3PagerSync	tsrc/pager.c	/^int sqlite3PagerSync(Pager *pPager, const char *zMaster){$/;"	f
sqlite3PagerTempSpace	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTempSpace	src/pager.c	/^void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTempSpace	tsrc/pager.c	/^void *sqlite3PagerTempSpace(Pager *pPager){$/;"	f
sqlite3PagerTruncateImage	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerTruncateImage	src/pager.c	/^void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerTruncateImage	tsrc/pager.c	/^void sqlite3PagerTruncateImage(Pager *pPager, Pgno nPage){$/;"	f
sqlite3PagerUnref	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerUnref	src/pager.c	/^void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerUnref	tsrc/pager.c	/^void sqlite3PagerUnref(DbPage *pPg){$/;"	f
sqlite3PagerUnrefNotNull	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PagerUnrefNotNull(DbPage *pPg){$/;"	f
sqlite3PagerUnrefNotNull	src/pager.c	/^void sqlite3PagerUnrefNotNull(DbPage *pPg){$/;"	f
sqlite3PagerUnrefNotNull	tsrc/pager.c	/^void sqlite3PagerUnrefNotNull(DbPage *pPg){$/;"	f
sqlite3PagerVfs	sqlite3.c	/^SQLITE_PRIVATE sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerVfs	src/pager.c	/^sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerVfs	tsrc/pager.c	/^sqlite3_vfs *sqlite3PagerVfs(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	src/pager.c	/^int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalCallback	tsrc/pager.c	/^int sqlite3PagerWalCallback(Pager *pPager){$/;"	f
sqlite3PagerWalFramesize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalFramesize(Pager *pPager){$/;"	f
sqlite3PagerWalFramesize	src/pager.c	/^int sqlite3PagerWalFramesize(Pager *pPager){$/;"	f
sqlite3PagerWalFramesize	tsrc/pager.c	/^int sqlite3PagerWalFramesize(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	src/pager.c	/^int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWalSupported	tsrc/pager.c	/^int sqlite3PagerWalSupported(Pager *pPager){$/;"	f
sqlite3PagerWrite	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PagerWrite(PgHdr *pPg){$/;"	f
sqlite3PagerWrite	src/pager.c	/^int sqlite3PagerWrite(PgHdr *pPg){$/;"	f
sqlite3PagerWrite	tsrc/pager.c	/^int sqlite3PagerWrite(PgHdr *pPg){$/;"	f
sqlite3ParseToplevel	sqlite3.c	16397;"	d	file:
sqlite3ParseToplevel	sqlite3.c	16407;"	d	file:
sqlite3ParseToplevel	src/sqliteInt.h	3798;"	d
sqlite3ParseToplevel	src/sqliteInt.h	3808;"	d
sqlite3ParseToplevel	tsrc/sqliteInt.h	3798;"	d
sqlite3ParseToplevel	tsrc/sqliteInt.h	3808;"	d
sqlite3ParseUri	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParseUri($/;"	f
sqlite3ParseUri	src/main.c	/^int sqlite3ParseUri($/;"	f
sqlite3ParseUri	tsrc/main.c	/^int sqlite3ParseUri($/;"	f
sqlite3Parser	parse.c	/^void sqlite3Parser($/;"	f
sqlite3Parser	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Parser($/;"	f
sqlite3Parser	tsrc/parse.c	/^void sqlite3Parser($/;"	f
sqlite3ParserARG_FETCH	parse.c	313;"	d	file:
sqlite3ParserARG_FETCH	sqlite3.c	131829;"	d	file:
sqlite3ParserARG_FETCH	tsrc/parse.c	313;"	d	file:
sqlite3ParserARG_PDECL	parse.c	312;"	d	file:
sqlite3ParserARG_PDECL	sqlite3.c	131828;"	d	file:
sqlite3ParserARG_PDECL	tsrc/parse.c	312;"	d	file:
sqlite3ParserARG_SDECL	parse.c	311;"	d	file:
sqlite3ParserARG_SDECL	sqlite3.c	131827;"	d	file:
sqlite3ParserARG_SDECL	tsrc/parse.c	311;"	d	file:
sqlite3ParserARG_STORE	parse.c	314;"	d	file:
sqlite3ParserARG_STORE	sqlite3.c	131830;"	d	file:
sqlite3ParserARG_STORE	tsrc/parse.c	314;"	d	file:
sqlite3ParserAlloc	parse.c	/^void *sqlite3ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3ParserAlloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3ParserAlloc	tsrc/parse.c	/^void *sqlite3ParserAlloc(void *(*mallocProc)(YYMALLOCARGTYPE)){$/;"	f
sqlite3ParserFree	parse.c	/^void sqlite3ParserFree($/;"	f
sqlite3ParserFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserFree($/;"	f
sqlite3ParserFree	tsrc/parse.c	/^void sqlite3ParserFree($/;"	f
sqlite3ParserReset	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserReset(Parse *pParse){$/;"	f
sqlite3ParserReset	src/prepare.c	/^void sqlite3ParserReset(Parse *pParse){$/;"	f
sqlite3ParserReset	tsrc/prepare.c	/^void sqlite3ParserReset(Parse *pParse){$/;"	f
sqlite3ParserStackPeak	parse.c	/^int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserStackPeak	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserStackPeak	tsrc/parse.c	/^int sqlite3ParserStackPeak(void *p){$/;"	f
sqlite3ParserTOKENTYPE	parse.c	290;"	d	file:
sqlite3ParserTOKENTYPE	sqlite3.c	131806;"	d	file:
sqlite3ParserTOKENTYPE	tsrc/parse.c	290;"	d	file:
sqlite3ParserTrace	parse.c	/^void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3ParserTrace	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3ParserTrace	tsrc/parse.c	/^void sqlite3ParserTrace(FILE *TraceFILE, char *zTracePrompt){$/;"	f
sqlite3Pcache1Mutex	sqlite3.c	/^SQLITE_PRIVATE sqlite3_mutex *sqlite3Pcache1Mutex(void){$/;"	f
sqlite3Pcache1Mutex	src/pcache1.c	/^sqlite3_mutex *sqlite3Pcache1Mutex(void){$/;"	f
sqlite3Pcache1Mutex	tsrc/pcache1.c	/^sqlite3_mutex *sqlite3Pcache1Mutex(void){$/;"	f
sqlite3PcacheCleanAll	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheCleanAll	src/pcache.c	/^void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheCleanAll	tsrc/pcache.c	/^void sqlite3PcacheCleanAll(PCache *pCache){$/;"	f
sqlite3PcacheClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClear	src/pcache.c	/^void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClear	tsrc/pcache.c	/^void sqlite3PcacheClear(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	src/pcache.c	/^void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClearSyncFlags	tsrc/pcache.c	/^void sqlite3PcacheClearSyncFlags(PCache *pCache){$/;"	f
sqlite3PcacheClearWritable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClearWritable(PCache *pCache){$/;"	f
sqlite3PcacheClearWritable	src/pcache.c	/^void sqlite3PcacheClearWritable(PCache *pCache){$/;"	f
sqlite3PcacheClearWritable	tsrc/pcache.c	/^void sqlite3PcacheClearWritable(PCache *pCache){$/;"	f
sqlite3PcacheClose	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheClose	src/pcache.c	/^void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheClose	tsrc/pcache.c	/^void sqlite3PcacheClose(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	src/pcache.c	/^PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDirtyList	tsrc/pcache.c	/^PgHdr *sqlite3PcacheDirtyList(PCache *pCache){$/;"	f
sqlite3PcacheDrop	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheDrop	src/pcache.c	/^void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheDrop	tsrc/pcache.c	/^void sqlite3PcacheDrop(PgHdr *p){$/;"	f
sqlite3PcacheFetch	sqlite3.c	/^SQLITE_PRIVATE sqlite3_pcache_page *sqlite3PcacheFetch($/;"	f
sqlite3PcacheFetch	src/pcache.c	/^sqlite3_pcache_page *sqlite3PcacheFetch($/;"	f
sqlite3PcacheFetch	tsrc/pcache.c	/^sqlite3_pcache_page *sqlite3PcacheFetch($/;"	f
sqlite3PcacheFetchFinish	sqlite3.c	/^SQLITE_PRIVATE PgHdr *sqlite3PcacheFetchFinish($/;"	f
sqlite3PcacheFetchFinish	src/pcache.c	/^PgHdr *sqlite3PcacheFetchFinish($/;"	f
sqlite3PcacheFetchFinish	tsrc/pcache.c	/^PgHdr *sqlite3PcacheFetchFinish($/;"	f
sqlite3PcacheFetchStress	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheFetchStress($/;"	f
sqlite3PcacheFetchStress	src/pcache.c	/^int sqlite3PcacheFetchStress($/;"	f
sqlite3PcacheFetchStress	tsrc/pcache.c	/^int sqlite3PcacheFetchStress($/;"	f
sqlite3PcacheGetCachesize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheGetCachesize	src/pcache.c	/^int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheGetCachesize	tsrc/pcache.c	/^int sqlite3PcacheGetCachesize(PCache *pCache){$/;"	f
sqlite3PcacheInitialize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheInitialize	src/pcache.c	/^int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheInitialize	tsrc/pcache.c	/^int sqlite3PcacheInitialize(void){$/;"	f
sqlite3PcacheIterateDirty	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheIterateDirty	src/pcache.c	/^void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheIterateDirty	tsrc/pcache.c	/^void sqlite3PcacheIterateDirty(PCache *pCache, void (*xIter)(PgHdr *)){$/;"	f
sqlite3PcacheMakeClean	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeClean	src/pcache.c	/^void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeClean	tsrc/pcache.c	/^void sqlite3PcacheMakeClean(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	src/pcache.c	/^void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMakeDirty	tsrc/pcache.c	/^void sqlite3PcacheMakeDirty(PgHdr *p){$/;"	f
sqlite3PcacheMove	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheMove	src/pcache.c	/^void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheMove	tsrc/pcache.c	/^void sqlite3PcacheMove(PgHdr *p, Pgno newPgno){$/;"	f
sqlite3PcacheMxDump	sqlite3.c	/^  int sqlite3PcacheMxDump = 9999;   \/* Max cache entries for pcacheDump() *\/$/;"	v
sqlite3PcacheMxDump	src/pcache.c	/^  int sqlite3PcacheMxDump = 9999;   \/* Max cache entries for pcacheDump() *\/$/;"	v
sqlite3PcacheMxDump	tsrc/pcache.c	/^  int sqlite3PcacheMxDump = 9999;   \/* Max cache entries for pcacheDump() *\/$/;"	v
sqlite3PcacheOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheOpen($/;"	f
sqlite3PcacheOpen	src/pcache.c	/^int sqlite3PcacheOpen($/;"	f
sqlite3PcacheOpen	tsrc/pcache.c	/^int sqlite3PcacheOpen($/;"	f
sqlite3PcachePageRefcount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePageRefcount	src/pcache.c	/^int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePageRefcount	tsrc/pcache.c	/^int sqlite3PcachePageRefcount(PgHdr *p){$/;"	f
sqlite3PcachePageSanity	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePageSanity(PgHdr *pPg){$/;"	f
sqlite3PcachePageSanity	src/pcache.c	/^int sqlite3PcachePageSanity(PgHdr *pPg){$/;"	f
sqlite3PcachePageSanity	tsrc/pcache.c	/^int sqlite3PcachePageSanity(PgHdr *pPg){$/;"	f
sqlite3PcachePagecount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcachePagecount	src/pcache.c	/^int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcachePagecount	tsrc/pcache.c	/^int sqlite3PcachePagecount(PCache *pCache){$/;"	f
sqlite3PcacheRef	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRef	src/pcache.c	/^void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRef	tsrc/pcache.c	/^void sqlite3PcacheRef(PgHdr *p){$/;"	f
sqlite3PcacheRefCount	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRefCount	src/pcache.c	/^int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRefCount	tsrc/pcache.c	/^int sqlite3PcacheRefCount(PCache *pCache){$/;"	f
sqlite3PcacheRelease	sqlite3.c	/^SQLITE_PRIVATE void SQLITE_NOINLINE sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheRelease	src/pcache.c	/^void SQLITE_NOINLINE sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheRelease	tsrc/pcache.c	/^void SQLITE_NOINLINE sqlite3PcacheRelease(PgHdr *p){$/;"	f
sqlite3PcacheReleaseMemory	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheReleaseMemory	src/pcache1.c	/^int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheReleaseMemory	tsrc/pcache1.c	/^int sqlite3PcacheReleaseMemory(int nReq){$/;"	f
sqlite3PcacheSetCachesize	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetCachesize	src/pcache.c	/^void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetCachesize	tsrc/pcache.c	/^void sqlite3PcacheSetCachesize(PCache *pCache, int mxPage){$/;"	f
sqlite3PcacheSetPageSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheSetPageSize	src/pcache.c	/^int sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheSetPageSize	tsrc/pcache.c	/^int sqlite3PcacheSetPageSize(PCache *pCache, int szPage){$/;"	f
sqlite3PcacheSetSpillsize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSetSpillsize(PCache *p, int mxPage){$/;"	f
sqlite3PcacheSetSpillsize	src/pcache.c	/^int sqlite3PcacheSetSpillsize(PCache *p, int mxPage){$/;"	f
sqlite3PcacheSetSpillsize	tsrc/pcache.c	/^int sqlite3PcacheSetSpillsize(PCache *p, int mxPage){$/;"	f
sqlite3PcacheShrink	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShrink(PCache *pCache){$/;"	f
sqlite3PcacheShrink	src/pcache.c	/^void sqlite3PcacheShrink(PCache *pCache){$/;"	f
sqlite3PcacheShrink	tsrc/pcache.c	/^void sqlite3PcacheShrink(PCache *pCache){$/;"	f
sqlite3PcacheShutdown	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheShutdown	src/pcache.c	/^void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheShutdown	tsrc/pcache.c	/^void sqlite3PcacheShutdown(void){$/;"	f
sqlite3PcacheSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheSize	src/pcache.c	/^int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheSize	tsrc/pcache.c	/^int sqlite3PcacheSize(void){ return sizeof(PCache); }$/;"	f
sqlite3PcacheStats	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheStats($/;"	f
sqlite3PcacheStats	src/pcache1.c	/^void sqlite3PcacheStats($/;"	f
sqlite3PcacheStats	tsrc/pcache1.c	/^void sqlite3PcacheStats($/;"	f
sqlite3PcacheTrace	sqlite3.c	/^  int sqlite3PcacheTrace = 2;       \/* 0: off  1: simple  2: cache dumps *\/$/;"	v
sqlite3PcacheTrace	src/pcache.c	/^  int sqlite3PcacheTrace = 2;       \/* 0: off  1: simple  2: cache dumps *\/$/;"	v
sqlite3PcacheTrace	tsrc/pcache.c	/^  int sqlite3PcacheTrace = 2;       \/* 0: off  1: simple  2: cache dumps *\/$/;"	v
sqlite3PcacheTruncate	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PcacheTruncate	src/pcache.c	/^void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PcacheTruncate	tsrc/pcache.c	/^void sqlite3PcacheTruncate(PCache *pCache, Pgno pgno){$/;"	f
sqlite3PendingByte	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PendingByte;$/;"	v
sqlite3PendingByte	src/global.c	/^int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	test/threadtest3.c	/^int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3PendingByte	tsrc/global.c	/^int sqlite3PendingByte = 0x40000000;$/;"	v
sqlite3Pragma	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Pragma($/;"	f
sqlite3Pragma	src/pragma.c	/^void sqlite3Pragma($/;"	f
sqlite3Pragma	tsrc/pragma.c	/^void sqlite3Pragma($/;"	f
sqlite3Prepare	sqlite3.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare	src/prepare.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare	tsrc/prepare.c	/^static int sqlite3Prepare($/;"	f	file:
sqlite3Prepare16	sqlite3.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3Prepare16	src/prepare.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3Prepare16	tsrc/prepare.c	/^static int sqlite3Prepare16($/;"	f	file:
sqlite3PrimaryKeyIndex	sqlite3.c	/^SQLITE_PRIVATE Index *sqlite3PrimaryKeyIndex(Table *pTab){$/;"	f
sqlite3PrimaryKeyIndex	src/build.c	/^Index *sqlite3PrimaryKeyIndex(Table *pTab){$/;"	f
sqlite3PrimaryKeyIndex	tsrc/build.c	/^Index *sqlite3PrimaryKeyIndex(Table *pTab){$/;"	f
sqlite3Prng	sqlite3.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Prng	src/random.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Prng	tsrc/random.c	/^} sqlite3Prng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3PrngRestoreState	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngRestoreState	src/random.c	/^void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngRestoreState	tsrc/random.c	/^void sqlite3PrngRestoreState(void){$/;"	f
sqlite3PrngSaveState	sqlite3.c	/^SQLITE_PRIVATE void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngSaveState	src/random.c	/^void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngSaveState	tsrc/random.c	/^void sqlite3PrngSaveState(void){$/;"	f
sqlite3PrngType	sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3PrngType	src/random.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3PrngType	tsrc/random.c	/^static SQLITE_WSD struct sqlite3PrngType {$/;"	s	file:
sqlite3Put4byte	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3Put4byte	src/util.c	/^void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3Put4byte	tsrc/util.c	/^void sqlite3Put4byte(unsigned char *p, u32 v){$/;"	f
sqlite3PutVarint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3PutVarint	src/util.c	/^int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3PutVarint	tsrc/util.c	/^int sqlite3PutVarint(unsigned char *p, u64 v){$/;"	f
sqlite3ReadSchema	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3ReadSchema	src/prepare.c	/^int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3ReadSchema	tsrc/prepare.c	/^int sqlite3ReadSchema(Parse *pParse){$/;"	f
sqlite3Realloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3Realloc(void *pOld, u64 nBytes){$/;"	f
sqlite3Realloc	src/malloc.c	/^void *sqlite3Realloc(void *pOld, u64 nBytes){$/;"	f
sqlite3Realloc	tsrc/malloc.c	/^void *sqlite3Realloc(void *pOld, u64 nBytes){$/;"	f
sqlite3RefillIndex	sqlite3.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RefillIndex	src/build.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RefillIndex	tsrc/build.c	/^static void sqlite3RefillIndex(Parse *pParse, Index *pIndex, int memRootPage){$/;"	f	file:
sqlite3RegisterBuiltinFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterBuiltinFunctions(void){$/;"	f
sqlite3RegisterBuiltinFunctions	src/func.c	/^void sqlite3RegisterBuiltinFunctions(void){$/;"	f
sqlite3RegisterBuiltinFunctions	tsrc/func.c	/^void sqlite3RegisterBuiltinFunctions(void){$/;"	f
sqlite3RegisterDateTimeFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterDateTimeFunctions	src/date.c	/^void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterDateTimeFunctions	tsrc/date.c	/^void sqlite3RegisterDateTimeFunctions(void){$/;"	f
sqlite3RegisterLikeFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3RegisterLikeFunctions	src/func.c	/^void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3RegisterLikeFunctions	tsrc/func.c	/^void sqlite3RegisterLikeFunctions(sqlite3 *db, int caseSensitive){$/;"	f
sqlite3RegisterPerConnectionBuiltinFunctions	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RegisterPerConnectionBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3RegisterPerConnectionBuiltinFunctions	src/func.c	/^void sqlite3RegisterPerConnectionBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3RegisterPerConnectionBuiltinFunctions	tsrc/func.c	/^void sqlite3RegisterPerConnectionBuiltinFunctions(sqlite3 *db){$/;"	f
sqlite3Reindex	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3Reindex	src/build.c	/^void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3Reindex	tsrc/build.c	/^void sqlite3Reindex(Parse *pParse, Token *pName1, Token *pName2){$/;"	f
sqlite3ReleaseTempRange	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempRange	src/expr.c	/^void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempRange	tsrc/expr.c	/^void sqlite3ReleaseTempRange(Parse *pParse, int iReg, int nReg){$/;"	f
sqlite3ReleaseTempReg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3ReleaseTempReg	src/expr.c	/^void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3ReleaseTempReg	tsrc/expr.c	/^void sqlite3ReleaseTempReg(Parse *pParse, int iReg){$/;"	f
sqlite3Reprepare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3Reprepare	src/prepare.c	/^int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3Reprepare	tsrc/prepare.c	/^int sqlite3Reprepare(Vdbe *p){$/;"	f
sqlite3ResetAllSchemasOfConnection	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetAllSchemasOfConnection(sqlite3 *db){$/;"	f
sqlite3ResetAllSchemasOfConnection	src/build.c	/^void sqlite3ResetAllSchemasOfConnection(sqlite3 *db){$/;"	f
sqlite3ResetAllSchemasOfConnection	tsrc/build.c	/^void sqlite3ResetAllSchemasOfConnection(sqlite3 *db){$/;"	f
sqlite3ResetOneSchema	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResetOneSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResetOneSchema	src/build.c	/^void sqlite3ResetOneSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResetOneSchema	tsrc/build.c	/^void sqlite3ResetOneSchema(sqlite3 *db, int iDb){$/;"	f
sqlite3ResolveExprListNames	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprListNames( $/;"	f
sqlite3ResolveExprListNames	src/resolve.c	/^int sqlite3ResolveExprListNames( $/;"	f
sqlite3ResolveExprListNames	tsrc/resolve.c	/^int sqlite3ResolveExprListNames( $/;"	f
sqlite3ResolveExprNames	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveExprNames	src/resolve.c	/^int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveExprNames	tsrc/resolve.c	/^int sqlite3ResolveExprNames( $/;"	f
sqlite3ResolveOrderGroupBy	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolveOrderGroupBy	src/resolve.c	/^int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolveOrderGroupBy	tsrc/resolve.c	/^int sqlite3ResolveOrderGroupBy($/;"	f
sqlite3ResolvePartIdxLabel	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolvePartIdxLabel(Parse *pParse, int iLabel){$/;"	f
sqlite3ResolvePartIdxLabel	src/delete.c	/^void sqlite3ResolvePartIdxLabel(Parse *pParse, int iLabel){$/;"	f
sqlite3ResolvePartIdxLabel	tsrc/delete.c	/^void sqlite3ResolvePartIdxLabel(Parse *pParse, int iLabel){$/;"	f
sqlite3ResolveSelectNames	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelectNames($/;"	f
sqlite3ResolveSelectNames	src/resolve.c	/^void sqlite3ResolveSelectNames($/;"	f
sqlite3ResolveSelectNames	tsrc/resolve.c	/^void sqlite3ResolveSelectNames($/;"	f
sqlite3ResolveSelfReference	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ResolveSelfReference($/;"	f
sqlite3ResolveSelfReference	src/resolve.c	/^void sqlite3ResolveSelfReference($/;"	f
sqlite3ResolveSelfReference	tsrc/resolve.c	/^void sqlite3ResolveSelfReference($/;"	f
sqlite3ResultSetOfSelect	sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3ResultSetOfSelect	src/select.c	/^Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3ResultSetOfSelect	tsrc/select.c	/^Table *sqlite3ResultSetOfSelect(Parse *pParse, Select *pSelect){$/;"	f
sqlite3RollbackAll	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackAll(sqlite3 *db, int tripCode){$/;"	f
sqlite3RollbackAll	src/main.c	/^void sqlite3RollbackAll(sqlite3 *db, int tripCode){$/;"	f
sqlite3RollbackAll	tsrc/main.c	/^void sqlite3RollbackAll(sqlite3 *db, int tripCode){$/;"	f
sqlite3RollbackTransaction	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RollbackTransaction	src/build.c	/^void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RollbackTransaction	tsrc/build.c	/^void sqlite3RollbackTransaction(Parse *pParse){$/;"	f
sqlite3RootPageMoved	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RootPageMoved	src/build.c	/^void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RootPageMoved	tsrc/build.c	/^void sqlite3RootPageMoved(sqlite3 *db, int iDb, int iFrom, int iTo){$/;"	f
sqlite3RowSetClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetClear	src/rowset.c	/^void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetClear	tsrc/rowset.c	/^void sqlite3RowSetClear(RowSet *p){$/;"	f
sqlite3RowSetInit	sqlite3.c	/^SQLITE_PRIVATE RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInit	src/rowset.c	/^RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInit	tsrc/rowset.c	/^RowSet *sqlite3RowSetInit(sqlite3 *db, void *pSpace, unsigned int N){$/;"	f
sqlite3RowSetInsert	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetInsert	src/rowset.c	/^void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetInsert	tsrc/rowset.c	/^void sqlite3RowSetInsert(RowSet *p, i64 rowid){$/;"	f
sqlite3RowSetNext	sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetNext	src/rowset.c	/^int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetNext	tsrc/rowset.c	/^int sqlite3RowSetNext(RowSet *p, i64 *pRowid){$/;"	f
sqlite3RowSetTest	sqlite3.c	/^SQLITE_PRIVATE int sqlite3RowSetTest(RowSet *pRowSet, int iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RowSetTest	src/rowset.c	/^int sqlite3RowSetTest(RowSet *pRowSet, int iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RowSetTest	tsrc/rowset.c	/^int sqlite3RowSetTest(RowSet *pRowSet, int iBatch, sqlite3_int64 iRowid){$/;"	f
sqlite3RowidConstraint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3RowidConstraint($/;"	f
sqlite3RowidConstraint	src/build.c	/^void sqlite3RowidConstraint($/;"	f
sqlite3RowidConstraint	tsrc/build.c	/^void sqlite3RowidConstraint($/;"	f
sqlite3RtreeInit	ext/rtree/rtree.c	/^int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RtreeInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RtreeInit	tsrc/rtree.c	/^int sqlite3RtreeInit(sqlite3 *db){$/;"	f
sqlite3RunParser	sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunParser	src/tokenize.c	/^int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunParser	tsrc/tokenize.c	/^int sqlite3RunParser(Parse *pParse, const char *zSql, char **pzErrMsg){$/;"	f
sqlite3RunVacuum	sqlite3.c	/^SQLITE_PRIVATE int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3RunVacuum	src/vacuum.c	/^int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3RunVacuum	tsrc/vacuum.c	/^int sqlite3RunVacuum(char **pzErrMsg, sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	src/util.c	/^int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckOk	tsrc/util.c	/^int sqlite3SafetyCheckOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	src/util.c	/^int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SafetyCheckSickOrOk	tsrc/util.c	/^int sqlite3SafetyCheckSickOrOk(sqlite3 *db){$/;"	f
sqlite3SavedPrng	sqlite3.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3SavedPrng	src/random.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3SavedPrng	tsrc/random.c	/^static SQLITE_WSD struct sqlite3PrngType sqlite3SavedPrng;$/;"	v	typeref:struct:sqlite3PrngType	file:
sqlite3Savepoint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3Savepoint	src/build.c	/^void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3Savepoint	tsrc/build.c	/^void sqlite3Savepoint(Parse *pParse, int op, Token *pName){$/;"	f
sqlite3SchemaClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaClear	src/callback.c	/^void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaClear	tsrc/callback.c	/^void sqlite3SchemaClear(void *p){$/;"	f
sqlite3SchemaGet	sqlite3.c	/^SQLITE_PRIVATE Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaGet	src/callback.c	/^Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaGet	tsrc/callback.c	/^Schema *sqlite3SchemaGet(sqlite3 *db, Btree *pBt){$/;"	f
sqlite3SchemaMutexHeld	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	sqlite3.c	12347;"	d	file:
sqlite3SchemaMutexHeld	src/btmutex.c	/^int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	src/btree.h	358;"	d
sqlite3SchemaMutexHeld	tsrc/btmutex.c	/^int sqlite3SchemaMutexHeld(sqlite3 *db, int iDb, Schema *pSchema){$/;"	f
sqlite3SchemaMutexHeld	tsrc/btree.h	358;"	d
sqlite3SchemaToIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3SchemaToIndex	src/prepare.c	/^int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3SchemaToIndex	tsrc/prepare.c	/^int sqlite3SchemaToIndex(sqlite3 *db, Schema *pSchema){$/;"	f
sqlite3ScratchFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchFree	src/malloc.c	/^void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchFree	tsrc/malloc.c	/^void sqlite3ScratchFree(void *p){$/;"	f
sqlite3ScratchMalloc	sqlite3.c	/^SQLITE_PRIVATE void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3ScratchMalloc	src/malloc.c	/^void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3ScratchMalloc	tsrc/malloc.c	/^void *sqlite3ScratchMalloc(int n){$/;"	f
sqlite3SectorSize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SectorSize(sqlite3_file *pFile){$/;"	f
sqlite3SectorSize	src/pager.c	/^int sqlite3SectorSize(sqlite3_file *pFile){$/;"	f
sqlite3SectorSize	tsrc/pager.c	/^int sqlite3SectorSize(sqlite3_file *pFile){$/;"	f
sqlite3Select	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Select($/;"	f
sqlite3Select	src/select.c	/^int sqlite3Select($/;"	f
sqlite3Select	tsrc/select.c	/^int sqlite3Select($/;"	f
sqlite3SelectAddColumnTypeAndCollation	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectAddColumnTypeAndCollation($/;"	f
sqlite3SelectAddColumnTypeAndCollation	src/select.c	/^void sqlite3SelectAddColumnTypeAndCollation($/;"	f
sqlite3SelectAddColumnTypeAndCollation	tsrc/select.c	/^void sqlite3SelectAddColumnTypeAndCollation($/;"	f
sqlite3SelectAddTypeInfo	sqlite3.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectAddTypeInfo	src/select.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectAddTypeInfo	tsrc/select.c	/^static void sqlite3SelectAddTypeInfo(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDelete	src/select.c	/^void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDelete	tsrc/select.c	/^void sqlite3SelectDelete(sqlite3 *db, Select *p){$/;"	f
sqlite3SelectDestInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDestInit	src/select.c	/^void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDestInit	tsrc/select.c	/^void sqlite3SelectDestInit(SelectDest *pDest, int eDest, int iParm){$/;"	f
sqlite3SelectDup	sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectDup	src/expr.c	/^Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectDup	tsrc/expr.c	/^Select *sqlite3SelectDup(sqlite3 *db, Select *p, int flags){$/;"	f
sqlite3SelectExpand	sqlite3.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExpand	src/select.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExpand	tsrc/select.c	/^static void sqlite3SelectExpand(Parse *pParse, Select *pSelect){$/;"	f	file:
sqlite3SelectExprHeight	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	sqlite3.c	16774;"	d	file:
sqlite3SelectExprHeight	src/expr.c	/^int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	src/sqliteInt.h	4175;"	d
sqlite3SelectExprHeight	tsrc/expr.c	/^int sqlite3SelectExprHeight(Select *p){$/;"	f
sqlite3SelectExprHeight	tsrc/sqliteInt.h	4175;"	d
sqlite3SelectNew	sqlite3.c	/^SQLITE_PRIVATE Select *sqlite3SelectNew($/;"	f
sqlite3SelectNew	src/select.c	/^Select *sqlite3SelectNew($/;"	f
sqlite3SelectNew	tsrc/select.c	/^Select *sqlite3SelectNew($/;"	f
sqlite3SelectPrep	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectPrep($/;"	f
sqlite3SelectPrep	src/select.c	/^void sqlite3SelectPrep($/;"	f
sqlite3SelectPrep	tsrc/select.c	/^void sqlite3SelectPrep($/;"	f
sqlite3SelectSetName	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectSetName(Select *p, const char *zName){$/;"	f
sqlite3SelectSetName	sqlite3.c	16361;"	d	file:
sqlite3SelectSetName	src/select.c	/^void sqlite3SelectSetName(Select *p, const char *zName){$/;"	f
sqlite3SelectSetName	src/sqliteInt.h	3762;"	d
sqlite3SelectSetName	tsrc/select.c	/^void sqlite3SelectSetName(Select *p, const char *zName){$/;"	f
sqlite3SelectSetName	tsrc/sqliteInt.h	3762;"	d
sqlite3SelectTrace	sqlite3.c	/^\/***\/ int sqlite3SelectTrace = 0;$/;"	v
sqlite3SelectTrace	src/select.c	/^\/***\/ int sqlite3SelectTrace = 0;$/;"	v
sqlite3SelectTrace	tsrc/select.c	/^\/***\/ int sqlite3SelectTrace = 0;$/;"	v
sqlite3SelectWrongNumTermsError	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SelectWrongNumTermsError(Parse *pParse, Select *p){$/;"	f
sqlite3SelectWrongNumTermsError	src/select.c	/^void sqlite3SelectWrongNumTermsError(Parse *pParse, Select *p){$/;"	f
sqlite3SelectWrongNumTermsError	tsrc/select.c	/^void sqlite3SelectWrongNumTermsError(Parse *pParse, Select *p){$/;"	f
sqlite3SetHasNullFlag	sqlite3.c	/^static void sqlite3SetHasNullFlag(Vdbe *v, int iCur, int regHasNull){$/;"	f	file:
sqlite3SetHasNullFlag	src/expr.c	/^static void sqlite3SetHasNullFlag(Vdbe *v, int iCur, int regHasNull){$/;"	f	file:
sqlite3SetHasNullFlag	tsrc/expr.c	/^static void sqlite3SetHasNullFlag(Vdbe *v, int iCur, int regHasNull){$/;"	f	file:
sqlite3SetString	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){$/;"	f
sqlite3SetString	src/malloc.c	/^void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){$/;"	f
sqlite3SetString	tsrc/malloc.c	/^void sqlite3SetString(char **pz, sqlite3 *db, const char *zNew){$/;"	f
sqlite3SharedCacheList	sqlite3.c	/^SQLITE_PRIVATE BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	sqlite3.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SharedCacheList	src/btree.c	/^BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	src/btree.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SharedCacheList	tsrc/btree.c	/^BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v
sqlite3SharedCacheList	tsrc/btree.c	/^static BtShared *SQLITE_WSD sqlite3SharedCacheList = 0;$/;"	v	file:
sqlite3SkipAccumulatorLoad	sqlite3.c	/^static void sqlite3SkipAccumulatorLoad(sqlite3_context *context){$/;"	f	file:
sqlite3SkipAccumulatorLoad	src/func.c	/^static void sqlite3SkipAccumulatorLoad(sqlite3_context *context){$/;"	f	file:
sqlite3SkipAccumulatorLoad	tsrc/func.c	/^static void sqlite3SkipAccumulatorLoad(sqlite3_context *context){$/;"	f	file:
sqlite3SmallTypeSizes	sqlite3.c	/^static const u8 sqlite3SmallTypeSizes[] = {$/;"	v	file:
sqlite3SmallTypeSizes	src/vdbeaux.c	/^static const u8 sqlite3SmallTypeSizes[] = {$/;"	v	file:
sqlite3SmallTypeSizes	tsrc/vdbeaux.c	/^static const u8 sqlite3SmallTypeSizes[] = {$/;"	v	file:
sqlite3SrcListAppend	sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppend	src/build.c	/^SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppend	tsrc/build.c	/^SrcList *sqlite3SrcListAppend($/;"	f
sqlite3SrcListAppendFromTerm	sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAppendFromTerm	src/build.c	/^SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAppendFromTerm	tsrc/build.c	/^SrcList *sqlite3SrcListAppendFromTerm($/;"	f
sqlite3SrcListAssignCursors	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListAssignCursors	src/build.c	/^void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListAssignCursors	tsrc/build.c	/^void sqlite3SrcListAssignCursors(Parse *pParse, SrcList *pList){$/;"	f
sqlite3SrcListDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDelete	src/build.c	/^void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDelete	tsrc/build.c	/^void sqlite3SrcListDelete(sqlite3 *db, SrcList *pList){$/;"	f
sqlite3SrcListDup	sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListDup	src/expr.c	/^SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListDup	tsrc/expr.c	/^SrcList *sqlite3SrcListDup(sqlite3 *db, SrcList *p, int flags){$/;"	f
sqlite3SrcListEnlarge	sqlite3.c	/^SQLITE_PRIVATE SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListEnlarge	src/build.c	/^SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListEnlarge	tsrc/build.c	/^SrcList *sqlite3SrcListEnlarge($/;"	f
sqlite3SrcListFuncArgs	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListFuncArgs(Parse *pParse, SrcList *p, ExprList *pList){$/;"	f
sqlite3SrcListFuncArgs	src/build.c	/^void sqlite3SrcListFuncArgs(Parse *pParse, SrcList *p, ExprList *pList){$/;"	f
sqlite3SrcListFuncArgs	tsrc/build.c	/^void sqlite3SrcListFuncArgs(Parse *pParse, SrcList *p, ExprList *pList){$/;"	f
sqlite3SrcListIndexedBy	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListIndexedBy	src/build.c	/^void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListIndexedBy	tsrc/build.c	/^void sqlite3SrcListIndexedBy(Parse *pParse, SrcList *p, Token *pIndexedBy){$/;"	f
sqlite3SrcListLookup	sqlite3.c	/^SQLITE_PRIVATE Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListLookup	src/delete.c	/^Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListLookup	tsrc/delete.c	/^Table *sqlite3SrcListLookup(Parse *pParse, SrcList *pSrc){$/;"	f
sqlite3SrcListShiftJoinType	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3SrcListShiftJoinType	src/build.c	/^void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3SrcListShiftJoinType	tsrc/build.c	/^void sqlite3SrcListShiftJoinType(SrcList *p){$/;"	f
sqlite3StackAllocRaw	sqlite3.c	16042;"	d	file:
sqlite3StackAllocRaw	sqlite3.c	16046;"	d	file:
sqlite3StackAllocRaw	src/sqliteInt.h	3443;"	d
sqlite3StackAllocRaw	src/sqliteInt.h	3447;"	d
sqlite3StackAllocRaw	tsrc/sqliteInt.h	3443;"	d
sqlite3StackAllocRaw	tsrc/sqliteInt.h	3447;"	d
sqlite3StackAllocZero	sqlite3.c	16043;"	d	file:
sqlite3StackAllocZero	sqlite3.c	16047;"	d	file:
sqlite3StackAllocZero	src/sqliteInt.h	3444;"	d
sqlite3StackAllocZero	src/sqliteInt.h	3448;"	d
sqlite3StackAllocZero	tsrc/sqliteInt.h	3444;"	d
sqlite3StackAllocZero	tsrc/sqliteInt.h	3448;"	d
sqlite3StackDepth	src/test1.c	/^u64 sqlite3StackDepth(void){$/;"	f
sqlite3StackFree	sqlite3.c	16044;"	d	file:
sqlite3StackFree	sqlite3.c	16048;"	d	file:
sqlite3StackFree	src/sqliteInt.h	3445;"	d
sqlite3StackFree	src/sqliteInt.h	3449;"	d
sqlite3StackFree	tsrc/sqliteInt.h	3445;"	d
sqlite3StackFree	tsrc/sqliteInt.h	3449;"	d
sqlite3StartTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StartTable($/;"	f
sqlite3StartTable	src/build.c	/^void sqlite3StartTable($/;"	f
sqlite3StartTable	tsrc/build.c	/^void sqlite3StartTable($/;"	f
sqlite3Stat	sqlite3.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3Stat	src/status.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3Stat	tsrc/status.c	/^} sqlite3Stat = { {0,}, {0,} };$/;"	v	typeref:struct:sqlite3StatType	file:
sqlite3Stat4Column	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4Column($/;"	f
sqlite3Stat4Column	src/vdbemem.c	/^int sqlite3Stat4Column($/;"	f
sqlite3Stat4Column	tsrc/vdbemem.c	/^int sqlite3Stat4Column($/;"	f
sqlite3Stat4ProbeFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Stat4ProbeFree(UnpackedRecord *pRec){$/;"	f
sqlite3Stat4ProbeFree	src/vdbemem.c	/^void sqlite3Stat4ProbeFree(UnpackedRecord *pRec){$/;"	f
sqlite3Stat4ProbeFree	tsrc/vdbemem.c	/^void sqlite3Stat4ProbeFree(UnpackedRecord *pRec){$/;"	f
sqlite3Stat4ProbeSetValue	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ProbeSetValue($/;"	f
sqlite3Stat4ProbeSetValue	src/vdbemem.c	/^int sqlite3Stat4ProbeSetValue($/;"	f
sqlite3Stat4ProbeSetValue	tsrc/vdbemem.c	/^int sqlite3Stat4ProbeSetValue($/;"	f
sqlite3Stat4ValueFromExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Stat4ValueFromExpr($/;"	f
sqlite3Stat4ValueFromExpr	src/vdbemem.c	/^int sqlite3Stat4ValueFromExpr($/;"	f
sqlite3Stat4ValueFromExpr	tsrc/vdbemem.c	/^int sqlite3Stat4ValueFromExpr($/;"	f
sqlite3StatType	sqlite3.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	sqlite3.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatType	src/status.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	src/status.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatType	tsrc/status.c	/^static SQLITE_WSD struct sqlite3StatType {$/;"	s	file:
sqlite3StatType	tsrc/status.c	/^typedef struct sqlite3StatType sqlite3StatType;$/;"	t	typeref:struct:sqlite3StatType	file:
sqlite3StatValueType	sqlite3.c	/^typedef sqlite3_int64 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	sqlite3.c	/^typedef u32 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	src/status.c	/^typedef sqlite3_int64 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	src/status.c	/^typedef u32 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	tsrc/status.c	/^typedef sqlite3_int64 sqlite3StatValueType;$/;"	t	file:
sqlite3StatValueType	tsrc/status.c	/^typedef u32 sqlite3StatValueType;$/;"	t	file:
sqlite3StatusDown	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusDown(int op, int N){$/;"	f
sqlite3StatusDown	src/status.c	/^void sqlite3StatusDown(int op, int N){$/;"	f
sqlite3StatusDown	tsrc/status.c	/^void sqlite3StatusDown(int op, int N){$/;"	f
sqlite3StatusHighwater	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusHighwater(int op, int X){$/;"	f
sqlite3StatusHighwater	src/status.c	/^void sqlite3StatusHighwater(int op, int X){$/;"	f
sqlite3StatusHighwater	tsrc/status.c	/^void sqlite3StatusHighwater(int op, int X){$/;"	f
sqlite3StatusUp	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StatusUp(int op, int N){$/;"	f
sqlite3StatusUp	src/status.c	/^void sqlite3StatusUp(int op, int N){$/;"	f
sqlite3StatusUp	tsrc/status.c	/^void sqlite3StatusUp(int op, int N){$/;"	f
sqlite3StatusValue	sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StatusValue(int op){$/;"	f
sqlite3StatusValue	src/status.c	/^sqlite3_int64 sqlite3StatusValue(int op){$/;"	f
sqlite3StatusValue	tsrc/status.c	/^sqlite3_int64 sqlite3StatusValue(int op){$/;"	f
sqlite3Step	sqlite3.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3Step	src/vdbeapi.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3Step	tsrc/vdbeapi.c	/^static int sqlite3Step(Vdbe *p){$/;"	f	file:
sqlite3StmtCurrentTime	sqlite3.c	/^SQLITE_PRIVATE sqlite3_int64 sqlite3StmtCurrentTime(sqlite3_context *p){$/;"	f
sqlite3StmtCurrentTime	src/vdbeapi.c	/^sqlite3_int64 sqlite3StmtCurrentTime(sqlite3_context *p){$/;"	f
sqlite3StmtCurrentTime	tsrc/vdbeapi.c	/^sqlite3_int64 sqlite3StmtCurrentTime(sqlite3_context *p){$/;"	f
sqlite3StrAccumAppend	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumAppend	src/printf.c	/^void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumAppend	tsrc/printf.c	/^void sqlite3StrAccumAppend(StrAccum *p, const char *z, int N){$/;"	f
sqlite3StrAccumAppendAll	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumAppendAll(StrAccum *p, const char *z){$/;"	f
sqlite3StrAccumAppendAll	src/printf.c	/^void sqlite3StrAccumAppendAll(StrAccum *p, const char *z){$/;"	f
sqlite3StrAccumAppendAll	tsrc/printf.c	/^void sqlite3StrAccumAppendAll(StrAccum *p, const char *z){$/;"	f
sqlite3StrAccumEnlarge	sqlite3.c	/^static int sqlite3StrAccumEnlarge(StrAccum *p, int N){$/;"	f	file:
sqlite3StrAccumEnlarge	src/printf.c	/^static int sqlite3StrAccumEnlarge(StrAccum *p, int N){$/;"	f	file:
sqlite3StrAccumEnlarge	tsrc/printf.c	/^static int sqlite3StrAccumEnlarge(StrAccum *p, int N){$/;"	f	file:
sqlite3StrAccumFinish	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumFinish	src/printf.c	/^char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumFinish	tsrc/printf.c	/^char *sqlite3StrAccumFinish(StrAccum *p){$/;"	f
sqlite3StrAccumInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumInit	src/printf.c	/^void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumInit	tsrc/printf.c	/^void sqlite3StrAccumInit(StrAccum *p, sqlite3 *db, char *zBase, int n, int mx){$/;"	f
sqlite3StrAccumReset	sqlite3.c	/^SQLITE_PRIVATE void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrAccumReset	src/printf.c	/^void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrAccumReset	tsrc/printf.c	/^void sqlite3StrAccumReset(StrAccum *p){$/;"	f
sqlite3StrBINARY	sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[] = "BINARY";$/;"	v
sqlite3StrBINARY	sqlite3.c	/^SQLITE_PRIVATE const char sqlite3StrBINARY[];$/;"	v
sqlite3StrBINARY	src/global.c	/^const char sqlite3StrBINARY[] = "BINARY";$/;"	v
sqlite3StrBINARY	tsrc/global.c	/^const char sqlite3StrBINARY[] = "BINARY";$/;"	v
sqlite3StrICmp	sqlite3.c	/^SQLITE_PRIVATE int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrICmp	src/util.c	/^int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrICmp	tsrc/util.c	/^int sqlite3StrICmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3StrNICmp	sqlite3.c	16006;"	d	file:
sqlite3StrNICmp	src/sqliteInt.h	3407;"	d
sqlite3StrNICmp	tsrc/sqliteInt.h	3407;"	d
sqlite3StringToId	sqlite3.c	/^static void sqlite3StringToId(Expr *p){$/;"	f	file:
sqlite3StringToId	src/build.c	/^static void sqlite3StringToId(Expr *p){$/;"	f	file:
sqlite3StringToId	tsrc/build.c	/^static void sqlite3StringToId(Expr *p){$/;"	f	file:
sqlite3Strlen30	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Strlen30(const char *z){$/;"	f
sqlite3Strlen30	src/util.c	/^int sqlite3Strlen30(const char *z){$/;"	f
sqlite3Strlen30	tsrc/util.c	/^int sqlite3Strlen30(const char *z){$/;"	f
sqlite3SubInt64	sqlite3.c	/^SQLITE_PRIVATE int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3SubInt64	src/util.c	/^int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3SubInt64	tsrc/util.c	/^int sqlite3SubInt64(i64 *pA, i64 iB){$/;"	f
sqlite3SystemError	sqlite3.c	/^SQLITE_PRIVATE void sqlite3SystemError(sqlite3 *db, int rc){$/;"	f
sqlite3SystemError	src/util.c	/^void sqlite3SystemError(sqlite3 *db, int rc){$/;"	f
sqlite3SystemError	tsrc/util.c	/^void sqlite3SystemError(sqlite3 *db, int rc){$/;"	f
sqlite3TableAffinity	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableAffinity(Vdbe *v, Table *pTab, int iReg){$/;"	f
sqlite3TableAffinity	src/insert.c	/^void sqlite3TableAffinity(Vdbe *v, Table *pTab, int iReg){$/;"	f
sqlite3TableAffinity	tsrc/insert.c	/^void sqlite3TableAffinity(Vdbe *v, Table *pTab, int iReg){$/;"	f
sqlite3TableLock	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TableLock($/;"	f
sqlite3TableLock	sqlite3.c	16628;"	d	file:
sqlite3TableLock	src/build.c	/^void sqlite3TableLock($/;"	f
sqlite3TableLock	src/sqliteInt.h	4029;"	d
sqlite3TableLock	tsrc/build.c	/^void sqlite3TableLock($/;"	f
sqlite3TableLock	tsrc/sqliteInt.h	4029;"	d
sqlite3TempInMemory	sqlite3.c	/^SQLITE_PRIVATE int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3TempInMemory	src/main.c	/^int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3TempInMemory	tsrc/main.c	/^int sqlite3TempInMemory(const sqlite3 *db){$/;"	f
sqlite3TestBinToHex	src/test_hexio.c	/^void sqlite3TestBinToHex(unsigned char *zBuf, int N){$/;"	f
sqlite3TestErrCode	src/test1.c	/^int sqlite3TestErrCode(Tcl_Interp *interp, sqlite3 *db, int rc){$/;"	f
sqlite3TestHexToBin	src/test_hexio.c	/^int sqlite3TestHexToBin(const unsigned char *zIn, int N, unsigned char *aOut){$/;"	f
sqlite3TestMakePointerStr	src/test1.c	/^int sqlite3TestMakePointerStr(Tcl_Interp *interp, char *zPtr, void *p){$/;"	f
sqlite3TestTextToPtr	src/test1.c	/^void *sqlite3TestTextToPtr(const char *z){$/;"	f
sqlite3ThreadCreate	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadCreate($/;"	f
sqlite3ThreadCreate	src/threads.c	/^int sqlite3ThreadCreate($/;"	f
sqlite3ThreadCreate	tsrc/threads.c	/^int sqlite3ThreadCreate($/;"	f
sqlite3ThreadJoin	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ThreadJoin(SQLiteThread *p, void **ppOut){$/;"	f
sqlite3ThreadJoin	src/threads.c	/^int sqlite3ThreadJoin(SQLiteThread *p, void **ppOut){$/;"	f
sqlite3ThreadJoin	tsrc/threads.c	/^int sqlite3ThreadJoin(SQLiteThread *p, void **ppOut){$/;"	f
sqlite3ThreadProc	sqlite3.c	/^static unsigned __stdcall sqlite3ThreadProc($/;"	f	file:
sqlite3ThreadProc	src/threads.c	/^static unsigned __stdcall sqlite3ThreadProc($/;"	f	file:
sqlite3ThreadProc	tsrc/threads.c	/^static unsigned __stdcall sqlite3ThreadProc($/;"	f	file:
sqlite3TokenInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TokenInit(Token *p, char *z){$/;"	f
sqlite3TokenInit	src/util.c	/^void sqlite3TokenInit(Token *p, char *z){$/;"	f
sqlite3TokenInit	tsrc/util.c	/^void sqlite3TokenInit(Token *p, char *z){$/;"	f
sqlite3Tolower	sqlite3.c	15984;"	d	file:
sqlite3Tolower	sqlite3.c	15993;"	d	file:
sqlite3Tolower	src/sqliteInt.h	3385;"	d
sqlite3Tolower	src/sqliteInt.h	3394;"	d
sqlite3Tolower	tsrc/sqliteInt.h	3385;"	d
sqlite3Tolower	tsrc/sqliteInt.h	3394;"	d
sqlite3Toupper	sqlite3.c	15978;"	d	file:
sqlite3Toupper	sqlite3.c	15987;"	d	file:
sqlite3Toupper	src/sqliteInt.h	3379;"	d
sqlite3Toupper	src/sqliteInt.h	3388;"	d
sqlite3Toupper	tsrc/sqliteInt.h	3379;"	d
sqlite3Toupper	tsrc/sqliteInt.h	3388;"	d
sqlite3TransferBindings	sqlite3.c	/^SQLITE_PRIVATE int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TransferBindings	src/vdbeapi.c	/^int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TransferBindings	tsrc/vdbeapi.c	/^int sqlite3TransferBindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3TreeViewExpr	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExpr(TreeView *pView, const Expr *pExpr, u8 moreToFollow){$/;"	f
sqlite3TreeViewExpr	src/treeview.c	/^void sqlite3TreeViewExpr(TreeView *pView, const Expr *pExpr, u8 moreToFollow){$/;"	f
sqlite3TreeViewExpr	tsrc/treeview.c	/^void sqlite3TreeViewExpr(TreeView *pView, const Expr *pExpr, u8 moreToFollow){$/;"	f
sqlite3TreeViewExprList	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewExprList($/;"	f
sqlite3TreeViewExprList	src/treeview.c	/^void sqlite3TreeViewExprList($/;"	f
sqlite3TreeViewExprList	tsrc/treeview.c	/^void sqlite3TreeViewExprList($/;"	f
sqlite3TreeViewItem	sqlite3.c	/^static void sqlite3TreeViewItem(TreeView *p, const char *zLabel,u8 moreFollows){$/;"	f	file:
sqlite3TreeViewItem	src/treeview.c	/^static void sqlite3TreeViewItem(TreeView *p, const char *zLabel,u8 moreFollows){$/;"	f	file:
sqlite3TreeViewItem	tsrc/treeview.c	/^static void sqlite3TreeViewItem(TreeView *p, const char *zLabel,u8 moreFollows){$/;"	f	file:
sqlite3TreeViewLine	sqlite3.c	/^static void sqlite3TreeViewLine(TreeView *p, const char *zFormat, ...){$/;"	f	file:
sqlite3TreeViewLine	src/treeview.c	/^static void sqlite3TreeViewLine(TreeView *p, const char *zFormat, ...){$/;"	f	file:
sqlite3TreeViewLine	tsrc/treeview.c	/^static void sqlite3TreeViewLine(TreeView *p, const char *zFormat, ...){$/;"	f	file:
sqlite3TreeViewPop	sqlite3.c	/^static void sqlite3TreeViewPop(TreeView *p){$/;"	f	file:
sqlite3TreeViewPop	src/treeview.c	/^static void sqlite3TreeViewPop(TreeView *p){$/;"	f	file:
sqlite3TreeViewPop	tsrc/treeview.c	/^static void sqlite3TreeViewPop(TreeView *p){$/;"	f	file:
sqlite3TreeViewPush	sqlite3.c	/^static TreeView *sqlite3TreeViewPush(TreeView *p, u8 moreToFollow){$/;"	f	file:
sqlite3TreeViewPush	src/treeview.c	/^static TreeView *sqlite3TreeViewPush(TreeView *p, u8 moreToFollow){$/;"	f	file:
sqlite3TreeViewPush	tsrc/treeview.c	/^static TreeView *sqlite3TreeViewPush(TreeView *p, u8 moreToFollow){$/;"	f	file:
sqlite3TreeViewSelect	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewSelect(TreeView *pView, const Select *p, u8 moreToFollow){$/;"	f
sqlite3TreeViewSelect	src/treeview.c	/^void sqlite3TreeViewSelect(TreeView *pView, const Select *p, u8 moreToFollow){$/;"	f
sqlite3TreeViewSelect	tsrc/treeview.c	/^void sqlite3TreeViewSelect(TreeView *pView, const Select *p, u8 moreToFollow){$/;"	f
sqlite3TreeViewWith	sqlite3.c	/^SQLITE_PRIVATE void sqlite3TreeViewWith(TreeView *pView, const With *pWith, u8 moreToFollow){$/;"	f
sqlite3TreeViewWith	src/treeview.c	/^void sqlite3TreeViewWith(TreeView *pView, const With *pWith, u8 moreToFollow){$/;"	f
sqlite3TreeViewWith	tsrc/treeview.c	/^void sqlite3TreeViewWith(TreeView *pView, const With *pWith, u8 moreToFollow){$/;"	f
sqlite3TriggerColmask	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	sqlite3.c	16409;"	d	file:
sqlite3TriggerColmask	src/sqliteInt.h	3810;"	d
sqlite3TriggerColmask	src/trigger.c	/^u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerColmask	tsrc/sqliteInt.h	3810;"	d
sqlite3TriggerColmask	tsrc/trigger.c	/^u32 sqlite3TriggerColmask($/;"	f
sqlite3TriggerDeleteStep	sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerDeleteStep	src/trigger.c	/^TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerDeleteStep	tsrc/trigger.c	/^TriggerStep *sqlite3TriggerDeleteStep($/;"	f
sqlite3TriggerInsertStep	sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerInsertStep	src/trigger.c	/^TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerInsertStep	tsrc/trigger.c	/^TriggerStep *sqlite3TriggerInsertStep($/;"	f
sqlite3TriggerList	sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	sqlite3.c	16406;"	d	file:
sqlite3TriggerList	src/sqliteInt.h	3807;"	d
sqlite3TriggerList	src/trigger.c	/^Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerList	tsrc/sqliteInt.h	3807;"	d
sqlite3TriggerList	tsrc/trigger.c	/^Trigger *sqlite3TriggerList(Parse *pParse, Table *pTab){$/;"	f
sqlite3TriggerSelectStep	sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerSelectStep	src/trigger.c	/^TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerSelectStep	tsrc/trigger.c	/^TriggerStep *sqlite3TriggerSelectStep(sqlite3 *db, Select *pSelect){$/;"	f
sqlite3TriggerUpdateStep	sqlite3.c	/^SQLITE_PRIVATE TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggerUpdateStep	src/trigger.c	/^TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggerUpdateStep	tsrc/trigger.c	/^TriggerStep *sqlite3TriggerUpdateStep($/;"	f
sqlite3TriggersExist	sqlite3.c	/^SQLITE_PRIVATE Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	sqlite3.c	16400;"	d	file:
sqlite3TriggersExist	src/sqliteInt.h	3801;"	d
sqlite3TriggersExist	src/trigger.c	/^Trigger *sqlite3TriggersExist($/;"	f
sqlite3TriggersExist	tsrc/sqliteInt.h	3801;"	d
sqlite3TriggersExist	tsrc/trigger.c	/^Trigger *sqlite3TriggersExist($/;"	f
sqlite3TwoPartName	sqlite3.c	/^SQLITE_PRIVATE int sqlite3TwoPartName($/;"	f
sqlite3TwoPartName	src/build.c	/^int sqlite3TwoPartName($/;"	f
sqlite3TwoPartName	tsrc/build.c	/^int sqlite3TwoPartName($/;"	f
sqlite3UniqueConstraint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3UniqueConstraint($/;"	f
sqlite3UniqueConstraint	src/build.c	/^void sqlite3UniqueConstraint($/;"	f
sqlite3UniqueConstraint	tsrc/build.c	/^void sqlite3UniqueConstraint($/;"	f
sqlite3UnlinkAndDeleteIndex	sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteIndex	src/build.c	/^void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteIndex	tsrc/build.c	/^void sqlite3UnlinkAndDeleteIndex(sqlite3 *db, int iDb, const char *zIdxName){$/;"	f
sqlite3UnlinkAndDeleteTable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTable	src/build.c	/^void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTable	tsrc/build.c	/^void sqlite3UnlinkAndDeleteTable(sqlite3 *db, int iDb, const char *zTabName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	sqlite3.c	/^SQLITE_PRIVATE void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	sqlite3.c	16403;"	d	file:
sqlite3UnlinkAndDeleteTrigger	src/sqliteInt.h	3804;"	d
sqlite3UnlinkAndDeleteTrigger	src/trigger.c	/^void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3UnlinkAndDeleteTrigger	tsrc/sqliteInt.h	3804;"	d
sqlite3UnlinkAndDeleteTrigger	tsrc/trigger.c	/^void sqlite3UnlinkAndDeleteTrigger(sqlite3 *db, int iDb, const char *zName){$/;"	f
sqlite3Update	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Update($/;"	f
sqlite3Update	src/update.c	/^void sqlite3Update($/;"	f
sqlite3Update	tsrc/update.c	/^void sqlite3Update($/;"	f
sqlite3UpperToLower	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	sqlite3.c	/^SQLITE_PRIVATE const unsigned char sqlite3UpperToLower[];$/;"	v
sqlite3UpperToLower	src/global.c	/^const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UpperToLower	tsrc/global.c	/^const unsigned char sqlite3UpperToLower[] = {$/;"	v
sqlite3UserAuthCheckLogin	ext/userauth/userauth.c	/^int sqlite3UserAuthCheckLogin($/;"	f
sqlite3UserAuthInit	ext/userauth/userauth.c	/^void sqlite3UserAuthInit(sqlite3 *db){$/;"	f
sqlite3UserAuthPrepare	ext/userauth/userauth.c	/^static sqlite3_stmt *sqlite3UserAuthPrepare($/;"	f	file:
sqlite3UserAuthTable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3UserAuthTable(const char *zTable){$/;"	f
sqlite3UserAuthTable	src/build.c	/^int sqlite3UserAuthTable(const char *zTable){$/;"	f
sqlite3UserAuthTable	tsrc/build.c	/^int sqlite3UserAuthTable(const char *zTable){$/;"	f
sqlite3Utf16ByteLen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16ByteLen	src/utf.c	/^int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16ByteLen	tsrc/utf.c	/^int sqlite3Utf16ByteLen(const void *zIn, int nChar){$/;"	f
sqlite3Utf16to8	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf16to8	src/utf.c	/^char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf16to8	tsrc/utf.c	/^char *sqlite3Utf16to8(sqlite3 *db, const void *z, int nByte, u8 enc){$/;"	f
sqlite3Utf8CharLen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8CharLen	src/utf.c	/^int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8CharLen	tsrc/utf.c	/^int sqlite3Utf8CharLen(const char *zIn, int nByte){$/;"	f
sqlite3Utf8Read	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	sqlite3.c	103792;"	d	file:
sqlite3Utf8Read	src/func.c	584;"	d	file:
sqlite3Utf8Read	src/utf.c	/^u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8Read	tsrc/func.c	584;"	d	file:
sqlite3Utf8Read	tsrc/utf.c	/^u32 sqlite3Utf8Read($/;"	f
sqlite3Utf8To8	sqlite3.c	/^SQLITE_PRIVATE int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8To8	src/utf.c	/^int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8To8	tsrc/utf.c	/^int sqlite3Utf8To8(unsigned char *zIn){$/;"	f
sqlite3Utf8Trans1	ext/fts3/fts3_unicode.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	ext/fts5/fts5_tokenize.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	ext/misc/spellfix.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	fts5.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	sqlite3.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	src/utf.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	tsrc/fts3_unicode.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	tsrc/fts5.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3Utf8Trans1	tsrc/utf.c	/^static const unsigned char sqlite3Utf8Trans1[] = {$/;"	v	file:
sqlite3UtfSelfTest	sqlite3.c	/^SQLITE_PRIVATE void sqlite3UtfSelfTest(void){$/;"	f
sqlite3UtfSelfTest	src/utf.c	/^void sqlite3UtfSelfTest(void){$/;"	f
sqlite3UtfSelfTest	tsrc/utf.c	/^void sqlite3UtfSelfTest(void){$/;"	f
sqlite3VMPrintf	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VMPrintf	src/printf.c	/^char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VMPrintf	tsrc/printf.c	/^char *sqlite3VMPrintf(sqlite3 *db, const char *zFormat, va_list ap){$/;"	f
sqlite3VXPrintf	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VXPrintf($/;"	f
sqlite3VXPrintf	src/printf.c	/^void sqlite3VXPrintf($/;"	f
sqlite3VXPrintf	tsrc/printf.c	/^void sqlite3VXPrintf($/;"	f
sqlite3Vacuum	sqlite3.c	/^SQLITE_PRIVATE void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3Vacuum	src/vacuum.c	/^void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3Vacuum	tsrc/vacuum.c	/^void sqlite3Vacuum(Parse *pParse){$/;"	f
sqlite3ValueApplyAffinity	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueApplyAffinity	src/vdbe.c	/^void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueApplyAffinity	tsrc/vdbe.c	/^void sqlite3ValueApplyAffinity($/;"	f
sqlite3ValueBytes	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueBytes	src/vdbemem.c	/^int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueBytes	tsrc/vdbemem.c	/^int sqlite3ValueBytes(sqlite3_value *pVal, u8 enc){$/;"	f
sqlite3ValueFree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFree	src/vdbemem.c	/^void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFree	tsrc/vdbemem.c	/^void sqlite3ValueFree(sqlite3_value *v){$/;"	f
sqlite3ValueFromExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ValueFromExpr($/;"	f
sqlite3ValueFromExpr	src/vdbemem.c	/^int sqlite3ValueFromExpr($/;"	f
sqlite3ValueFromExpr	tsrc/vdbemem.c	/^int sqlite3ValueFromExpr($/;"	f
sqlite3ValueNew	sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueNew	src/vdbemem.c	/^sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueNew	tsrc/vdbemem.c	/^sqlite3_value *sqlite3ValueNew(sqlite3 *db){$/;"	f
sqlite3ValueSetNull	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetNull(sqlite3_value *p){$/;"	f
sqlite3ValueSetNull	src/vdbemem.c	/^void sqlite3ValueSetNull(sqlite3_value *p){$/;"	f
sqlite3ValueSetNull	tsrc/vdbemem.c	/^void sqlite3ValueSetNull(sqlite3_value *p){$/;"	f
sqlite3ValueSetStr	sqlite3.c	/^SQLITE_PRIVATE void sqlite3ValueSetStr($/;"	f
sqlite3ValueSetStr	src/vdbemem.c	/^void sqlite3ValueSetStr($/;"	f
sqlite3ValueSetStr	tsrc/vdbemem.c	/^void sqlite3ValueSetStr($/;"	f
sqlite3ValueText	sqlite3.c	/^SQLITE_PRIVATE const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3ValueText	src/vdbemem.c	/^const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3ValueText	tsrc/vdbemem.c	/^const void *sqlite3ValueText(sqlite3_value* pVal, u8 enc){$/;"	f
sqlite3VarintLen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VarintLen	src/util.c	/^int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VarintLen	tsrc/util.c	/^int sqlite3VarintLen(u64 v){$/;"	f
sqlite3VdbeAddOp0	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp0	src/vdbeaux.c	/^int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp0	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp0(Vdbe *p, int op){$/;"	f
sqlite3VdbeAddOp1	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp1	src/vdbeaux.c	/^int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp1	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp1(Vdbe *p, int op, int p1){$/;"	f
sqlite3VdbeAddOp2	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp2	src/vdbeaux.c	/^int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp2	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp2(Vdbe *p, int op, int p1, int p2){$/;"	f
sqlite3VdbeAddOp3	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp3	src/vdbeaux.c	/^int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp3	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp3(Vdbe *p, int op, int p1, int p2, int p3){$/;"	f
sqlite3VdbeAddOp4	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4	src/vdbeaux.c	/^int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp4($/;"	f
sqlite3VdbeAddOp4Dup8	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Dup8($/;"	f
sqlite3VdbeAddOp4Dup8	src/vdbeaux.c	/^int sqlite3VdbeAddOp4Dup8($/;"	f
sqlite3VdbeAddOp4Dup8	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp4Dup8($/;"	f
sqlite3VdbeAddOp4Int	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOp4Int	src/vdbeaux.c	/^int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOp4Int	tsrc/vdbeaux.c	/^int sqlite3VdbeAddOp4Int($/;"	f
sqlite3VdbeAddOpList	sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeAddOpList($/;"	f
sqlite3VdbeAddOpList	src/vdbeaux.c	/^VdbeOp *sqlite3VdbeAddOpList($/;"	f
sqlite3VdbeAddOpList	tsrc/vdbeaux.c	/^VdbeOp *sqlite3VdbeAddOpList($/;"	f
sqlite3VdbeAddParseSchemaOp	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAddParseSchemaOp	src/vdbeaux.c	/^void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAddParseSchemaOp	tsrc/vdbeaux.c	/^void sqlite3VdbeAddParseSchemaOp(Vdbe *p, int iDb, char *zWhere){$/;"	f
sqlite3VdbeAllocUnpackedRecord	sqlite3.c	/^SQLITE_PRIVATE UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAllocUnpackedRecord	src/vdbeaux.c	/^UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAllocUnpackedRecord	tsrc/vdbeaux.c	/^UnpackedRecord *sqlite3VdbeAllocUnpackedRecord($/;"	f
sqlite3VdbeAssertMayAbort	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeAssertMayAbort	src/vdbeaux.c	/^int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeAssertMayAbort	tsrc/vdbeaux.c	/^int sqlite3VdbeAssertMayAbort(Vdbe *v, int mayAbort){$/;"	f
sqlite3VdbeChangeEncoding	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeEncoding	src/vdbemem.c	/^int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeEncoding	tsrc/vdbemem.c	/^int sqlite3VdbeChangeEncoding(Mem *pMem, int desiredEnc){$/;"	f
sqlite3VdbeChangeOpcode	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){$/;"	f
sqlite3VdbeChangeOpcode	src/vdbeaux.c	/^void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){$/;"	f
sqlite3VdbeChangeOpcode	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeOpcode(Vdbe *p, u32 addr, u8 iNewOpcode){$/;"	f
sqlite3VdbeChangeP1	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP1	src/vdbeaux.c	/^void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP1	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeP1(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	src/vdbeaux.c	/^void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP2	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeP2(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	src/vdbeaux.c	/^void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP3	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeP3(Vdbe *p, u32 addr, int val){$/;"	f
sqlite3VdbeChangeP4	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP4	src/vdbeaux.c	/^void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP4	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeP4(Vdbe *p, int addr, const char *zP4, int n){$/;"	f
sqlite3VdbeChangeP5	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeChangeP5(Vdbe *p, u8 p5){$/;"	f
sqlite3VdbeChangeP5	src/vdbeaux.c	/^void sqlite3VdbeChangeP5(Vdbe *p, u8 p5){$/;"	f
sqlite3VdbeChangeP5	tsrc/vdbeaux.c	/^void sqlite3VdbeChangeP5(Vdbe *p, u8 p5){$/;"	f
sqlite3VdbeChangeToNoop	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeChangeToNoop	src/vdbeaux.c	/^int sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeChangeToNoop	tsrc/vdbeaux.c	/^int sqlite3VdbeChangeToNoop(Vdbe *p, int addr){$/;"	f
sqlite3VdbeCheckFk	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	sqlite3.c	18165;"	d	file:
sqlite3VdbeCheckFk	src/vdbeInt.h	543;"	d
sqlite3VdbeCheckFk	src/vdbeaux.c	/^int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckFk	tsrc/vdbeInt.h	543;"	d
sqlite3VdbeCheckFk	tsrc/vdbeaux.c	/^int sqlite3VdbeCheckFk(Vdbe *p, int deferred){$/;"	f
sqlite3VdbeCheckMemInvariants	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCheckMemInvariants(Mem *p){$/;"	f
sqlite3VdbeCheckMemInvariants	src/vdbemem.c	/^int sqlite3VdbeCheckMemInvariants(Mem *p){$/;"	f
sqlite3VdbeCheckMemInvariants	tsrc/vdbemem.c	/^int sqlite3VdbeCheckMemInvariants(Mem *p){$/;"	f
sqlite3VdbeClearObject	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeClearObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeClearObject	src/vdbeaux.c	/^void sqlite3VdbeClearObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeClearObject	tsrc/vdbeaux.c	/^void sqlite3VdbeClearObject(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VdbeCloseStatement	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeCloseStatement	src/vdbeaux.c	/^int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeCloseStatement	tsrc/vdbeaux.c	/^int sqlite3VdbeCloseStatement(Vdbe *p, int eOp){$/;"	f
sqlite3VdbeComment	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeComment	src/vdbeaux.c	/^void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeComment	tsrc/vdbeaux.c	/^void sqlite3VdbeComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeCountChanges	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCountChanges	src/vdbeaux.c	/^void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCountChanges	tsrc/vdbeaux.c	/^void sqlite3VdbeCountChanges(Vdbe *v){$/;"	f
sqlite3VdbeCreate	sqlite3.c	/^SQLITE_PRIVATE Vdbe *sqlite3VdbeCreate(Parse *pParse){$/;"	f
sqlite3VdbeCreate	src/vdbeaux.c	/^Vdbe *sqlite3VdbeCreate(Parse *pParse){$/;"	f
sqlite3VdbeCreate	tsrc/vdbeaux.c	/^Vdbe *sqlite3VdbeCreate(Parse *pParse){$/;"	f
sqlite3VdbeCurrentAddr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCurrentAddr	src/vdbeaux.c	/^int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCurrentAddr	tsrc/vdbeaux.c	/^int sqlite3VdbeCurrentAddr(Vdbe *p){$/;"	f
sqlite3VdbeCursorMoveto	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorMoveto(VdbeCursor **pp, int *piCol){$/;"	f
sqlite3VdbeCursorMoveto	src/vdbeaux.c	/^int sqlite3VdbeCursorMoveto(VdbeCursor **pp, int *piCol){$/;"	f
sqlite3VdbeCursorMoveto	tsrc/vdbeaux.c	/^int sqlite3VdbeCursorMoveto(VdbeCursor **pp, int *piCol){$/;"	f
sqlite3VdbeCursorRestore	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeCursorRestore(VdbeCursor *p){$/;"	f
sqlite3VdbeCursorRestore	src/vdbeaux.c	/^int sqlite3VdbeCursorRestore(VdbeCursor *p){$/;"	f
sqlite3VdbeCursorRestore	tsrc/vdbeaux.c	/^int sqlite3VdbeCursorRestore(VdbeCursor *p){$/;"	f
sqlite3VdbeDb	sqlite3.c	/^SQLITE_PRIVATE sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDb	src/vdbeaux.c	/^sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDb	tsrc/vdbeaux.c	/^sqlite3 *sqlite3VdbeDb(Vdbe *v){$/;"	f
sqlite3VdbeDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDelete	src/vdbeaux.c	/^void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDelete	tsrc/vdbeaux.c	/^void sqlite3VdbeDelete(Vdbe *p){$/;"	f
sqlite3VdbeDeleteAuxData	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeDeleteAuxData(sqlite3 *db, AuxData **pp, int iOp, int mask){$/;"	f
sqlite3VdbeDeleteAuxData	src/vdbeaux.c	/^void sqlite3VdbeDeleteAuxData(sqlite3 *db, AuxData **pp, int iOp, int mask){$/;"	f
sqlite3VdbeDeleteAuxData	tsrc/vdbeaux.c	/^void sqlite3VdbeDeleteAuxData(sqlite3 *db, AuxData **pp, int iOp, int mask){$/;"	f
sqlite3VdbeDeletePriorOpcode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeDeletePriorOpcode(Vdbe *p, u8 op){$/;"	f
sqlite3VdbeDeletePriorOpcode	src/vdbeaux.c	/^int sqlite3VdbeDeletePriorOpcode(Vdbe *p, u8 op){$/;"	f
sqlite3VdbeDeletePriorOpcode	tsrc/vdbeaux.c	/^int sqlite3VdbeDeletePriorOpcode(Vdbe *p, u8 op){$/;"	f
sqlite3VdbeEndCoroutine	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEndCoroutine(Vdbe *v, int regYield){$/;"	f
sqlite3VdbeEndCoroutine	src/vdbeaux.c	/^void sqlite3VdbeEndCoroutine(Vdbe *v, int regYield){$/;"	f
sqlite3VdbeEndCoroutine	tsrc/vdbeaux.c	/^void sqlite3VdbeEndCoroutine(Vdbe *v, int regYield){$/;"	f
sqlite3VdbeEnter	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	sqlite3.c	18148;"	d	file:
sqlite3VdbeEnter	src/vdbeInt.h	526;"	d
sqlite3VdbeEnter	src/vdbeaux.c	/^void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeEnter	tsrc/vdbeInt.h	526;"	d
sqlite3VdbeEnter	tsrc/vdbeaux.c	/^void sqlite3VdbeEnter(Vdbe *p){$/;"	f
sqlite3VdbeError	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeError(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeError	src/vdbeaux.c	/^void sqlite3VdbeError(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeError	tsrc/vdbeaux.c	/^void sqlite3VdbeError(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeExec	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeExec($/;"	f
sqlite3VdbeExec	src/vdbe.c	/^int sqlite3VdbeExec($/;"	f
sqlite3VdbeExec	tsrc/vdbe.c	/^int sqlite3VdbeExec($/;"	f
sqlite3VdbeExpandSql	sqlite3.c	/^SQLITE_PRIVATE char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeExpandSql	src/vdbetrace.c	/^char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeExpandSql	tsrc/vdbetrace.c	/^char *sqlite3VdbeExpandSql($/;"	f
sqlite3VdbeFinalize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFinalize	src/vdbeaux.c	/^int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFinalize	tsrc/vdbeaux.c	/^int sqlite3VdbeFinalize(Vdbe *p){$/;"	f
sqlite3VdbeFindCompare	sqlite3.c	/^SQLITE_PRIVATE RecordCompare sqlite3VdbeFindCompare(UnpackedRecord *p){$/;"	f
sqlite3VdbeFindCompare	src/vdbeaux.c	/^RecordCompare sqlite3VdbeFindCompare(UnpackedRecord *p){$/;"	f
sqlite3VdbeFindCompare	tsrc/vdbeaux.c	/^RecordCompare sqlite3VdbeFindCompare(UnpackedRecord *p){$/;"	f
sqlite3VdbeFrameDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameDelete	src/vdbeaux.c	/^void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameDelete	tsrc/vdbeaux.c	/^void sqlite3VdbeFrameDelete(VdbeFrame *p){$/;"	f
sqlite3VdbeFrameRestore	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFrameRestore	src/vdbeaux.c	/^int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFrameRestore	tsrc/vdbeaux.c	/^int sqlite3VdbeFrameRestore(VdbeFrame *pFrame){$/;"	f
sqlite3VdbeFreeCursor	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeFreeCursor	src/vdbeaux.c	/^void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeFreeCursor	tsrc/vdbeaux.c	/^void sqlite3VdbeFreeCursor(Vdbe *p, VdbeCursor *pCx){$/;"	f
sqlite3VdbeGetBoundValue	sqlite3.c	/^SQLITE_PRIVATE sqlite3_value *sqlite3VdbeGetBoundValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeGetBoundValue	src/vdbeaux.c	/^sqlite3_value *sqlite3VdbeGetBoundValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeGetBoundValue	tsrc/vdbeaux.c	/^sqlite3_value *sqlite3VdbeGetBoundValue(Vdbe *v, int iVar, u8 aff){$/;"	f
sqlite3VdbeGetOp	sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGetOp	src/vdbeaux.c	/^VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGetOp	tsrc/vdbeaux.c	/^VdbeOp *sqlite3VdbeGetOp(Vdbe *p, int addr){$/;"	f
sqlite3VdbeGoto	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeGoto(Vdbe *p, int iDest){$/;"	f
sqlite3VdbeGoto	src/vdbeaux.c	/^int sqlite3VdbeGoto(Vdbe *p, int iDest){$/;"	f
sqlite3VdbeGoto	tsrc/vdbeaux.c	/^int sqlite3VdbeGoto(Vdbe *p, int iDest){$/;"	f
sqlite3VdbeHalt	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeHalt	src/vdbeaux.c	/^int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeHalt	tsrc/vdbeaux.c	/^int sqlite3VdbeHalt(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	sqlite3.c	16806;"	d	file:
sqlite3VdbeIOTraceSql	src/sqliteInt.h	4207;"	d
sqlite3VdbeIOTraceSql	src/vdbeaux.c	/^void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIOTraceSql	tsrc/sqliteInt.h	4207;"	d
sqlite3VdbeIOTraceSql	tsrc/vdbeaux.c	/^void sqlite3VdbeIOTraceSql(Vdbe *p){$/;"	f
sqlite3VdbeIdxKeyCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxKeyCompare	src/vdbeaux.c	/^int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxKeyCompare	tsrc/vdbeaux.c	/^int sqlite3VdbeIdxKeyCompare($/;"	f
sqlite3VdbeIdxRowid	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIdxRowid	src/vdbeaux.c	/^int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIdxRowid	tsrc/vdbeaux.c	/^int sqlite3VdbeIdxRowid(sqlite3 *db, BtCursor *pCur, i64 *rowid){$/;"	f
sqlite3VdbeIntValue	sqlite3.c	/^SQLITE_PRIVATE i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntValue	src/vdbemem.c	/^i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntValue	tsrc/vdbemem.c	/^i64 sqlite3VdbeIntValue(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	src/vdbemem.c	/^void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeIntegerAffinity	tsrc/vdbemem.c	/^void sqlite3VdbeIntegerAffinity(Mem *pMem){$/;"	f
sqlite3VdbeJumpHere	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeJumpHere	src/vdbeaux.c	/^void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeJumpHere	tsrc/vdbeaux.c	/^void sqlite3VdbeJumpHere(Vdbe *p, int addr){$/;"	f
sqlite3VdbeLeave	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	sqlite3.c	18154;"	d	file:
sqlite3VdbeLeave	src/vdbeInt.h	532;"	d
sqlite3VdbeLeave	src/vdbeaux.c	/^void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLeave	tsrc/vdbeInt.h	532;"	d
sqlite3VdbeLeave	tsrc/vdbeaux.c	/^void sqlite3VdbeLeave(Vdbe *p){$/;"	f
sqlite3VdbeLinkSubProgram	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeLinkSubProgram	src/vdbeaux.c	/^void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeLinkSubProgram	tsrc/vdbeaux.c	/^void sqlite3VdbeLinkSubProgram(Vdbe *pVdbe, SubProgram *p){$/;"	f
sqlite3VdbeList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeList($/;"	f
sqlite3VdbeList	src/vdbeaux.c	/^int sqlite3VdbeList($/;"	f
sqlite3VdbeList	tsrc/vdbeaux.c	/^int sqlite3VdbeList($/;"	f
sqlite3VdbeLoadString	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeLoadString(Vdbe *p, int iDest, const char *zStr){$/;"	f
sqlite3VdbeLoadString	src/vdbeaux.c	/^int sqlite3VdbeLoadString(Vdbe *p, int iDest, const char *zStr){$/;"	f
sqlite3VdbeLoadString	tsrc/vdbeaux.c	/^int sqlite3VdbeLoadString(Vdbe *p, int iDest, const char *zStr){$/;"	f
sqlite3VdbeMakeLabel	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMakeLabel(Vdbe *v){$/;"	f
sqlite3VdbeMakeLabel	src/vdbeaux.c	/^int sqlite3VdbeMakeLabel(Vdbe *v){$/;"	f
sqlite3VdbeMakeLabel	tsrc/vdbeaux.c	/^int sqlite3VdbeMakeLabel(Vdbe *v){$/;"	f
sqlite3VdbeMakeReady	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMakeReady	src/vdbeaux.c	/^void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMakeReady	tsrc/vdbeaux.c	/^void sqlite3VdbeMakeReady($/;"	f
sqlite3VdbeMemAboutToChange	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemAboutToChange	src/vdbemem.c	/^void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemAboutToChange	tsrc/vdbemem.c	/^void sqlite3VdbeMemAboutToChange(Vdbe *pVdbe, Mem *pMem){$/;"	f
sqlite3VdbeMemCast	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemCast(Mem *pMem, u8 aff, u8 encoding){$/;"	f
sqlite3VdbeMemCast	src/vdbemem.c	/^void sqlite3VdbeMemCast(Mem *pMem, u8 aff, u8 encoding){$/;"	f
sqlite3VdbeMemCast	tsrc/vdbemem.c	/^void sqlite3VdbeMemCast(Mem *pMem, u8 aff, u8 encoding){$/;"	f
sqlite3VdbeMemClearAndResize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){$/;"	f
sqlite3VdbeMemClearAndResize	src/vdbemem.c	/^int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){$/;"	f
sqlite3VdbeMemClearAndResize	tsrc/vdbemem.c	/^int sqlite3VdbeMemClearAndResize(Mem *pMem, int szNew){$/;"	f
sqlite3VdbeMemCopy	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemCopy	src/vdbemem.c	/^int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemCopy	tsrc/vdbemem.c	/^int sqlite3VdbeMemCopy(Mem *pTo, const Mem *pFrom){$/;"	f
sqlite3VdbeMemExpandBlob	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	sqlite3.c	18179;"	d	file:
sqlite3VdbeMemExpandBlob	src/vdbeInt.h	557;"	d
sqlite3VdbeMemExpandBlob	src/vdbemem.c	/^int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemExpandBlob	tsrc/vdbeInt.h	557;"	d
sqlite3VdbeMemExpandBlob	tsrc/vdbemem.c	/^int sqlite3VdbeMemExpandBlob(Mem *pMem){$/;"	f
sqlite3VdbeMemFinalize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFinalize	src/vdbemem.c	/^int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFinalize	tsrc/vdbemem.c	/^int sqlite3VdbeMemFinalize(Mem *pMem, FuncDef *pFunc){$/;"	f
sqlite3VdbeMemFromBtree	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemFromBtree	src/vdbemem.c	/^int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemFromBtree	tsrc/vdbemem.c	/^int sqlite3VdbeMemFromBtree($/;"	f
sqlite3VdbeMemGrow	sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){$/;"	f
sqlite3VdbeMemGrow	src/vdbemem.c	/^SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){$/;"	f
sqlite3VdbeMemGrow	tsrc/vdbemem.c	/^SQLITE_NOINLINE int sqlite3VdbeMemGrow(Mem *pMem, int n, int bPreserve){$/;"	f
sqlite3VdbeMemHandleBom	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemHandleBom	src/utf.c	/^int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemHandleBom	tsrc/utf.c	/^int sqlite3VdbeMemHandleBom(Mem *pMem){$/;"	f
sqlite3VdbeMemInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemInit(Mem *pMem, sqlite3 *db, u16 flags){$/;"	f
sqlite3VdbeMemInit	src/vdbemem.c	/^void sqlite3VdbeMemInit(Mem *pMem, sqlite3 *db, u16 flags){$/;"	f
sqlite3VdbeMemInit	tsrc/vdbemem.c	/^void sqlite3VdbeMemInit(Mem *pMem, sqlite3 *db, u16 flags){$/;"	f
sqlite3VdbeMemIntegerify	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemIntegerify	src/vdbemem.c	/^int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemIntegerify	tsrc/vdbemem.c	/^int sqlite3VdbeMemIntegerify(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	src/vdbemem.c	/^int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMakeWriteable	tsrc/vdbemem.c	/^int sqlite3VdbeMemMakeWriteable(Mem *pMem){$/;"	f
sqlite3VdbeMemMove	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemMove	src/vdbemem.c	/^void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemMove	tsrc/vdbemem.c	/^void sqlite3VdbeMemMove(Mem *pTo, Mem *pFrom){$/;"	f
sqlite3VdbeMemNulTerminate	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNulTerminate	src/vdbemem.c	/^int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNulTerminate	tsrc/vdbemem.c	/^int sqlite3VdbeMemNulTerminate(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	src/vdbemem.c	/^int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemNumerify	tsrc/vdbemem.c	/^int sqlite3VdbeMemNumerify(Mem *pMem){$/;"	f
sqlite3VdbeMemPrettyPrint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemPrettyPrint	src/vdbe.c	/^void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemPrettyPrint	tsrc/vdbe.c	/^void sqlite3VdbeMemPrettyPrint(Mem *pMem, char *zBuf){$/;"	f
sqlite3VdbeMemRealify	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRealify	src/vdbemem.c	/^int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRealify	tsrc/vdbemem.c	/^int sqlite3VdbeMemRealify(Mem *pMem){$/;"	f
sqlite3VdbeMemRelease	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemRelease	src/vdbemem.c	/^void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemRelease	tsrc/vdbemem.c	/^void sqlite3VdbeMemRelease(Mem *p){$/;"	f
sqlite3VdbeMemSetDouble	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	sqlite3.c	18105;"	d	file:
sqlite3VdbeMemSetDouble	src/vdbeInt.h	483;"	d
sqlite3VdbeMemSetDouble	src/vdbemem.c	/^void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetDouble	tsrc/vdbeInt.h	483;"	d
sqlite3VdbeMemSetDouble	tsrc/vdbemem.c	/^void sqlite3VdbeMemSetDouble(Mem *pMem, double val){$/;"	f
sqlite3VdbeMemSetInt64	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetInt64	src/vdbemem.c	/^void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetInt64	tsrc/vdbemem.c	/^void sqlite3VdbeMemSetInt64(Mem *pMem, i64 val){$/;"	f
sqlite3VdbeMemSetNull	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetNull	src/vdbemem.c	/^void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetNull	tsrc/vdbemem.c	/^void sqlite3VdbeMemSetNull(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	src/vdbemem.c	/^void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetRowSet	tsrc/vdbemem.c	/^void sqlite3VdbeMemSetRowSet(Mem *pMem){$/;"	f
sqlite3VdbeMemSetStr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetStr	src/vdbemem.c	/^int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetStr	tsrc/vdbemem.c	/^int sqlite3VdbeMemSetStr($/;"	f
sqlite3VdbeMemSetZeroBlob	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemSetZeroBlob	src/vdbemem.c	/^void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemSetZeroBlob	tsrc/vdbemem.c	/^void sqlite3VdbeMemSetZeroBlob(Mem *pMem, int n){$/;"	f
sqlite3VdbeMemShallowCopy	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemShallowCopy	src/vdbemem.c	/^void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemShallowCopy	tsrc/vdbemem.c	/^void sqlite3VdbeMemShallowCopy(Mem *pTo, const Mem *pFrom, int srcType){$/;"	f
sqlite3VdbeMemStringify	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemStringify(Mem *pMem, u8 enc, u8 bForce){$/;"	f
sqlite3VdbeMemStringify	src/vdbemem.c	/^int sqlite3VdbeMemStringify(Mem *pMem, u8 enc, u8 bForce){$/;"	f
sqlite3VdbeMemStringify	tsrc/vdbemem.c	/^int sqlite3VdbeMemStringify(Mem *pMem, u8 enc, u8 bForce){$/;"	f
sqlite3VdbeMemTooBig	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTooBig	src/vdbemem.c	/^int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTooBig	tsrc/vdbemem.c	/^int sqlite3VdbeMemTooBig(Mem *p){$/;"	f
sqlite3VdbeMemTranslate	sqlite3.c	/^SQLITE_PRIVATE SQLITE_NOINLINE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeMemTranslate	src/utf.c	/^SQLITE_NOINLINE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeMemTranslate	tsrc/utf.c	/^SQLITE_NOINLINE int sqlite3VdbeMemTranslate(Mem *pMem, u8 desiredEnc){$/;"	f
sqlite3VdbeMultiLoad	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeMultiLoad(Vdbe *p, int iDest, const char *zTypes, ...){$/;"	f
sqlite3VdbeMultiLoad	src/vdbeaux.c	/^void sqlite3VdbeMultiLoad(Vdbe *p, int iDest, const char *zTypes, ...){$/;"	f
sqlite3VdbeMultiLoad	tsrc/vdbeaux.c	/^void sqlite3VdbeMultiLoad(Vdbe *p, int iDest, const char *zTypes, ...){$/;"	f
sqlite3VdbeNoopComment	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeNoopComment	src/vdbeaux.c	/^void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeNoopComment	tsrc/vdbeaux.c	/^void sqlite3VdbeNoopComment(Vdbe *p, const char *zFormat, ...){$/;"	f
sqlite3VdbeOneByteSerialTypeLen	sqlite3.c	/^SQLITE_PRIVATE u8 sqlite3VdbeOneByteSerialTypeLen(u8 serial_type){$/;"	f
sqlite3VdbeOneByteSerialTypeLen	src/vdbeaux.c	/^u8 sqlite3VdbeOneByteSerialTypeLen(u8 serial_type){$/;"	f
sqlite3VdbeOneByteSerialTypeLen	tsrc/vdbeaux.c	/^u8 sqlite3VdbeOneByteSerialTypeLen(u8 serial_type){$/;"	f
sqlite3VdbeParameterIndex	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbeParameterIndex	src/vdbeapi.c	/^int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbeParameterIndex	tsrc/vdbeapi.c	/^int sqlite3VdbeParameterIndex(Vdbe *p, const char *zName, int nName){$/;"	f
sqlite3VdbePreUpdateHook	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePreUpdateHook($/;"	f
sqlite3VdbePreUpdateHook	src/vdbeaux.c	/^void sqlite3VdbePreUpdateHook($/;"	f
sqlite3VdbePreUpdateHook	tsrc/vdbeaux.c	/^void sqlite3VdbePreUpdateHook($/;"	f
sqlite3VdbePrintOp	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintOp	src/vdbeaux.c	/^void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintOp	tsrc/vdbeaux.c	/^void sqlite3VdbePrintOp(FILE *pOut, int pc, Op *pOp){$/;"	f
sqlite3VdbePrintSql	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbePrintSql	src/vdbeaux.c	/^void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbePrintSql	tsrc/vdbeaux.c	/^void sqlite3VdbePrintSql(Vdbe *p){$/;"	f
sqlite3VdbeRealValue	sqlite3.c	/^SQLITE_PRIVATE double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRealValue	src/vdbemem.c	/^double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRealValue	tsrc/vdbemem.c	/^double sqlite3VdbeRealValue(Mem *pMem){$/;"	f
sqlite3VdbeRecordCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordCompare	src/vdbeaux.c	/^int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordCompare	tsrc/vdbeaux.c	/^int sqlite3VdbeRecordCompare($/;"	f
sqlite3VdbeRecordCompareWithSkip	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeRecordCompareWithSkip($/;"	f
sqlite3VdbeRecordCompareWithSkip	src/vdbeaux.c	/^int sqlite3VdbeRecordCompareWithSkip($/;"	f
sqlite3VdbeRecordCompareWithSkip	tsrc/vdbeaux.c	/^int sqlite3VdbeRecordCompareWithSkip($/;"	f
sqlite3VdbeRecordUnpack	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeRecordUnpack	src/vdbeaux.c	/^void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeRecordUnpack	tsrc/vdbeaux.c	/^void sqlite3VdbeRecordUnpack($/;"	f
sqlite3VdbeReset	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeReset	src/vdbeaux.c	/^int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeReset	tsrc/vdbeaux.c	/^int sqlite3VdbeReset(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	src/vdbeaux.c	/^void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResetStepResult	tsrc/vdbeaux.c	/^void sqlite3VdbeResetStepResult(Vdbe *p){$/;"	f
sqlite3VdbeResolveLabel	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeResolveLabel(Vdbe *v, int x){$/;"	f
sqlite3VdbeResolveLabel	src/vdbeaux.c	/^void sqlite3VdbeResolveLabel(Vdbe *v, int x){$/;"	f
sqlite3VdbeResolveLabel	tsrc/vdbeaux.c	/^void sqlite3VdbeResolveLabel(Vdbe *v, int x){$/;"	f
sqlite3VdbeReusable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeReusable(Vdbe *p){$/;"	f
sqlite3VdbeReusable	src/vdbeaux.c	/^void sqlite3VdbeReusable(Vdbe *p){$/;"	f
sqlite3VdbeReusable	tsrc/vdbeaux.c	/^void sqlite3VdbeReusable(Vdbe *p){$/;"	f
sqlite3VdbeRewind	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRewind	src/vdbeaux.c	/^void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRewind	tsrc/vdbeaux.c	/^void sqlite3VdbeRewind(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	src/vdbeaux.c	/^void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeRunOnlyOnce	tsrc/vdbeaux.c	/^void sqlite3VdbeRunOnlyOnce(Vdbe *p){$/;"	f
sqlite3VdbeScanStatus	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeScanStatus($/;"	f
sqlite3VdbeScanStatus	sqlite3.c	12874;"	d	file:
sqlite3VdbeScanStatus	src/vdbe.h	309;"	d
sqlite3VdbeScanStatus	src/vdbeaux.c	/^void sqlite3VdbeScanStatus($/;"	f
sqlite3VdbeScanStatus	tsrc/vdbe.h	309;"	d
sqlite3VdbeScanStatus	tsrc/vdbeaux.c	/^void sqlite3VdbeScanStatus($/;"	f
sqlite3VdbeSerialGet	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialGet	src/vdbeaux.c	/^u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialGet	tsrc/vdbeaux.c	/^u32 sqlite3VdbeSerialGet($/;"	f
sqlite3VdbeSerialPut	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialPut(u8 *buf, Mem *pMem, u32 serial_type){$/;"	f
sqlite3VdbeSerialPut	src/vdbeaux.c	/^u32 sqlite3VdbeSerialPut(u8 *buf, Mem *pMem, u32 serial_type){$/;"	f
sqlite3VdbeSerialPut	tsrc/vdbeaux.c	/^u32 sqlite3VdbeSerialPut(u8 *buf, Mem *pMem, u32 serial_type){$/;"	f
sqlite3VdbeSerialType	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialType(Mem *pMem, int file_format, u32 *pLen){$/;"	f
sqlite3VdbeSerialType	src/vdbeaux.c	/^u32 sqlite3VdbeSerialType(Mem *pMem, int file_format, u32 *pLen){$/;"	f
sqlite3VdbeSerialType	tsrc/vdbeaux.c	/^u32 sqlite3VdbeSerialType(Mem *pMem, int file_format, u32 *pLen){$/;"	f
sqlite3VdbeSerialTypeLen	sqlite3.c	/^SQLITE_PRIVATE u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSerialTypeLen	src/vdbeaux.c	/^u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSerialTypeLen	tsrc/vdbeaux.c	/^u32 sqlite3VdbeSerialTypeLen(u32 serial_type){$/;"	f
sqlite3VdbeSetChanges	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetChanges	src/vdbeaux.c	/^void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetChanges	tsrc/vdbeaux.c	/^void sqlite3VdbeSetChanges(sqlite3 *db, int nChange){$/;"	f
sqlite3VdbeSetColName	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetColName	src/vdbeaux.c	/^int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetColName	tsrc/vdbeaux.c	/^int sqlite3VdbeSetColName($/;"	f
sqlite3VdbeSetLineNumber	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetLineNumber(Vdbe *v, int iLine){$/;"	f
sqlite3VdbeSetLineNumber	src/vdbeaux.c	/^void sqlite3VdbeSetLineNumber(Vdbe *v, int iLine){$/;"	f
sqlite3VdbeSetLineNumber	tsrc/vdbeaux.c	/^void sqlite3VdbeSetLineNumber(Vdbe *v, int iLine){$/;"	f
sqlite3VdbeSetNumCols	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetNumCols	src/vdbeaux.c	/^void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetNumCols	tsrc/vdbeaux.c	/^void sqlite3VdbeSetNumCols(Vdbe *p, int nResColumn){$/;"	f
sqlite3VdbeSetP4KeyInfo	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetP4KeyInfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3VdbeSetP4KeyInfo	src/vdbeaux.c	/^void sqlite3VdbeSetP4KeyInfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3VdbeSetP4KeyInfo	tsrc/vdbeaux.c	/^void sqlite3VdbeSetP4KeyInfo(Parse *pParse, Index *pIdx){$/;"	f
sqlite3VdbeSetSql	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetSql	src/vdbeaux.c	/^void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetSql	tsrc/vdbeaux.c	/^void sqlite3VdbeSetSql(Vdbe *p, const char *z, int n, int isPrepareV2){$/;"	f
sqlite3VdbeSetVarmask	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSetVarmask	src/vdbeaux.c	/^void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSetVarmask	tsrc/vdbeaux.c	/^void sqlite3VdbeSetVarmask(Vdbe *v, int iVar){$/;"	f
sqlite3VdbeSorterClose	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterClose	src/vdbesort.c	/^void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterClose	tsrc/vdbesort.c	/^void sqlite3VdbeSorterClose(sqlite3 *db, VdbeCursor *pCsr){$/;"	f
sqlite3VdbeSorterCompare	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterCompare	src/vdbesort.c	/^int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterCompare	tsrc/vdbesort.c	/^int sqlite3VdbeSorterCompare($/;"	f
sqlite3VdbeSorterInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterInit($/;"	f
sqlite3VdbeSorterInit	src/vdbesort.c	/^int sqlite3VdbeSorterInit($/;"	f
sqlite3VdbeSorterInit	tsrc/vdbesort.c	/^int sqlite3VdbeSorterInit($/;"	f
sqlite3VdbeSorterNext	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterNext(sqlite3 *db, const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterNext	src/vdbesort.c	/^int sqlite3VdbeSorterNext(sqlite3 *db, const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterNext	tsrc/vdbesort.c	/^int sqlite3VdbeSorterNext(sqlite3 *db, const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterReset	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSorterReset(sqlite3 *db, VdbeSorter *pSorter){$/;"	f
sqlite3VdbeSorterReset	src/vdbesort.c	/^void sqlite3VdbeSorterReset(sqlite3 *db, VdbeSorter *pSorter){$/;"	f
sqlite3VdbeSorterReset	tsrc/vdbesort.c	/^void sqlite3VdbeSorterReset(sqlite3 *db, VdbeSorter *pSorter){$/;"	f
sqlite3VdbeSorterRewind	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRewind(const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRewind	src/vdbesort.c	/^int sqlite3VdbeSorterRewind(const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRewind	tsrc/vdbesort.c	/^int sqlite3VdbeSorterRewind(const VdbeCursor *pCsr, int *pbEof){$/;"	f
sqlite3VdbeSorterRowkey	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterRowkey(const VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterRowkey	src/vdbesort.c	/^int sqlite3VdbeSorterRowkey(const VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterRowkey	tsrc/vdbesort.c	/^int sqlite3VdbeSorterRowkey(const VdbeCursor *pCsr, Mem *pOut){$/;"	f
sqlite3VdbeSorterWrite	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSorterWrite	src/vdbesort.c	/^int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSorterWrite	tsrc/vdbesort.c	/^int sqlite3VdbeSorterWrite($/;"	f
sqlite3VdbeSwap	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeSwap	src/vdbeaux.c	/^void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeSwap	tsrc/vdbeaux.c	/^void sqlite3VdbeSwap(Vdbe *pA, Vdbe *pB){$/;"	f
sqlite3VdbeTakeOpArray	sqlite3.c	/^SQLITE_PRIVATE VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTakeOpArray	src/vdbeaux.c	/^VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTakeOpArray	tsrc/vdbeaux.c	/^VdbeOp *sqlite3VdbeTakeOpArray(Vdbe *p, int *pnOp, int *pnMaxArg){$/;"	f
sqlite3VdbeTransferError	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeTransferError	src/vdbeaux.c	/^int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeTransferError	tsrc/vdbeaux.c	/^int sqlite3VdbeTransferError(Vdbe *p){$/;"	f
sqlite3VdbeUsesBtree	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3VdbeUsesBtree	src/vdbeaux.c	/^void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3VdbeUsesBtree	tsrc/vdbeaux.c	/^void sqlite3VdbeUsesBtree(Vdbe *p, int i){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VdbeVerifyNoMallocRequired(Vdbe *p, int N){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	sqlite3.c	12754;"	d	file:
sqlite3VdbeVerifyNoMallocRequired	src/vdbe.h	189;"	d
sqlite3VdbeVerifyNoMallocRequired	src/vdbeaux.c	/^void sqlite3VdbeVerifyNoMallocRequired(Vdbe *p, int N){$/;"	f
sqlite3VdbeVerifyNoMallocRequired	tsrc/vdbe.h	189;"	d
sqlite3VdbeVerifyNoMallocRequired	tsrc/vdbeaux.c	/^void sqlite3VdbeVerifyNoMallocRequired(Vdbe *p, int N){$/;"	f
sqlite3ViewGetColumnNames	sqlite3.c	/^SQLITE_PRIVATE int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	sqlite3.c	16210;"	d	file:
sqlite3ViewGetColumnNames	src/build.c	/^int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	src/sqliteInt.h	3611;"	d
sqlite3ViewGetColumnNames	tsrc/build.c	/^int sqlite3ViewGetColumnNames(Parse *pParse, Table *pTable){$/;"	f
sqlite3ViewGetColumnNames	tsrc/sqliteInt.h	3611;"	d
sqlite3VtabArgExtend	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgExtend	src/vtab.c	/^void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgExtend	tsrc/vtab.c	/^void sqlite3VtabArgExtend(Parse *pParse, Token *p){$/;"	f
sqlite3VtabArgInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabArgInit	src/vtab.c	/^void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabArgInit	tsrc/vtab.c	/^void sqlite3VtabArgInit(Parse *pParse){$/;"	f
sqlite3VtabBegin	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBegin	src/vtab.c	/^int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBegin	tsrc/vtab.c	/^int sqlite3VtabBegin(sqlite3 *db, VTable *pVTab){$/;"	f
sqlite3VtabBeginParse	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabBeginParse($/;"	f
sqlite3VtabBeginParse	src/vtab.c	/^void sqlite3VtabBeginParse($/;"	f
sqlite3VtabBeginParse	tsrc/vtab.c	/^void sqlite3VtabBeginParse($/;"	f
sqlite3VtabCallConnect	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallConnect	src/vtab.c	/^int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallConnect	tsrc/vtab.c	/^int sqlite3VtabCallConnect(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabCallCreate	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallCreate	src/vtab.c	/^int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallCreate	tsrc/vtab.c	/^int sqlite3VtabCallCreate(sqlite3 *db, int iDb, const char *zTab, char **pzErr){$/;"	f
sqlite3VtabCallDestroy	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabCallDestroy	src/vtab.c	/^int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabCallDestroy	tsrc/vtab.c	/^int sqlite3VtabCallDestroy(sqlite3 *db, int iDb, const char *zTab){$/;"	f
sqlite3VtabClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	sqlite3.c	16636;"	d	file:
sqlite3VtabClear	src/sqliteInt.h	4037;"	d
sqlite3VtabClear	src/vtab.c	/^void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabClear	tsrc/sqliteInt.h	4037;"	d
sqlite3VtabClear	tsrc/vtab.c	/^void sqlite3VtabClear(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabCommit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	sqlite3.c	16639;"	d	file:
sqlite3VtabCommit	src/sqliteInt.h	4040;"	d
sqlite3VtabCommit	src/vtab.c	/^int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabCommit	tsrc/sqliteInt.h	4040;"	d
sqlite3VtabCommit	tsrc/vtab.c	/^int sqlite3VtabCommit(sqlite3 *db){$/;"	f
sqlite3VtabDisconnect	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabDisconnect(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabDisconnect	src/vtab.c	/^void sqlite3VtabDisconnect(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabDisconnect	tsrc/vtab.c	/^void sqlite3VtabDisconnect(sqlite3 *db, Table *p){$/;"	f
sqlite3VtabEponymousTableClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabEponymousTableClear(sqlite3 *db, Module *pMod){$/;"	f
sqlite3VtabEponymousTableClear	src/vtab.c	/^void sqlite3VtabEponymousTableClear(sqlite3 *db, Module *pMod){$/;"	f
sqlite3VtabEponymousTableClear	tsrc/vtab.c	/^void sqlite3VtabEponymousTableClear(sqlite3 *db, Module *pMod){$/;"	f
sqlite3VtabEponymousTableInit	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabEponymousTableInit(Parse *pParse, Module *pMod){$/;"	f
sqlite3VtabEponymousTableInit	src/vtab.c	/^int sqlite3VtabEponymousTableInit(Parse *pParse, Module *pMod){$/;"	f
sqlite3VtabEponymousTableInit	tsrc/vtab.c	/^int sqlite3VtabEponymousTableInit(Parse *pParse, Module *pMod){$/;"	f
sqlite3VtabFinishParse	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabFinishParse	src/vtab.c	/^void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabFinishParse	tsrc/vtab.c	/^void sqlite3VtabFinishParse(Parse *pParse, Token *pEnd){$/;"	f
sqlite3VtabImportErrmsg	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabImportErrmsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f
sqlite3VtabImportErrmsg	src/vdbeaux.c	/^void sqlite3VtabImportErrmsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f
sqlite3VtabImportErrmsg	tsrc/vdbeaux.c	/^void sqlite3VtabImportErrmsg(Vdbe *p, sqlite3_vtab *pVtab){$/;"	f
sqlite3VtabInSync	sqlite3.c	16640;"	d	file:
sqlite3VtabInSync	sqlite3.c	16658;"	d	file:
sqlite3VtabInSync	src/sqliteInt.h	4041;"	d
sqlite3VtabInSync	src/sqliteInt.h	4059;"	d
sqlite3VtabInSync	tsrc/sqliteInt.h	4041;"	d
sqlite3VtabInSync	tsrc/sqliteInt.h	4059;"	d
sqlite3VtabLock	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	sqlite3.c	16641;"	d	file:
sqlite3VtabLock	src/sqliteInt.h	4042;"	d
sqlite3VtabLock	src/vtab.c	/^void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabLock	tsrc/sqliteInt.h	4042;"	d
sqlite3VtabLock	tsrc/vtab.c	/^void sqlite3VtabLock(VTable *pVTab){$/;"	f
sqlite3VtabMakeWritable	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabMakeWritable	src/vtab.c	/^void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabMakeWritable	tsrc/vtab.c	/^void sqlite3VtabMakeWritable(Parse *pParse, Table *pTab){$/;"	f
sqlite3VtabOverloadFunction	sqlite3.c	/^SQLITE_PRIVATE FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabOverloadFunction	src/vtab.c	/^FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabOverloadFunction	tsrc/vtab.c	/^FuncDef *sqlite3VtabOverloadFunction($/;"	f
sqlite3VtabRollback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	sqlite3.c	16638;"	d	file:
sqlite3VtabRollback	src/sqliteInt.h	4039;"	d
sqlite3VtabRollback	src/vtab.c	/^int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabRollback	tsrc/sqliteInt.h	4039;"	d
sqlite3VtabRollback	tsrc/vtab.c	/^int sqlite3VtabRollback(sqlite3 *db){$/;"	f
sqlite3VtabSavepoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	sqlite3.c	16644;"	d	file:
sqlite3VtabSavepoint	src/sqliteInt.h	4045;"	d
sqlite3VtabSavepoint	src/vtab.c	/^int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSavepoint	tsrc/sqliteInt.h	4045;"	d
sqlite3VtabSavepoint	tsrc/vtab.c	/^int sqlite3VtabSavepoint(sqlite3 *db, int op, int iSavepoint){$/;"	f
sqlite3VtabSync	sqlite3.c	/^SQLITE_PRIVATE int sqlite3VtabSync(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VtabSync	sqlite3.c	16637;"	d	file:
sqlite3VtabSync	src/sqliteInt.h	4038;"	d
sqlite3VtabSync	src/vtab.c	/^int sqlite3VtabSync(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VtabSync	tsrc/sqliteInt.h	4038;"	d
sqlite3VtabSync	tsrc/vtab.c	/^int sqlite3VtabSync(sqlite3 *db, Vdbe *p){$/;"	f
sqlite3VtabUnlock	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	sqlite3.c	16642;"	d	file:
sqlite3VtabUnlock	src/sqliteInt.h	4043;"	d
sqlite3VtabUnlock	src/vtab.c	/^void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlock	tsrc/sqliteInt.h	4043;"	d
sqlite3VtabUnlock	tsrc/vtab.c	/^void sqlite3VtabUnlock(VTable *pVTab){$/;"	f
sqlite3VtabUnlockList	sqlite3.c	/^SQLITE_PRIVATE void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	sqlite3.c	16643;"	d	file:
sqlite3VtabUnlockList	src/sqliteInt.h	4044;"	d
sqlite3VtabUnlockList	src/vtab.c	/^void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3VtabUnlockList	tsrc/sqliteInt.h	4044;"	d
sqlite3VtabUnlockList	tsrc/vtab.c	/^void sqlite3VtabUnlockList(sqlite3 *db){$/;"	f
sqlite3WalBeginReadTransaction	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	sqlite3.c	46183;"	d	file:
sqlite3WalBeginReadTransaction	src/wal.c	/^int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	src/wal.h	32;"	d
sqlite3WalBeginReadTransaction	tsrc/wal.c	/^int sqlite3WalBeginReadTransaction(Wal *pWal, int *pChanged){$/;"	f
sqlite3WalBeginReadTransaction	tsrc/wal.h	32;"	d
sqlite3WalBeginWriteTransaction	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	sqlite3.c	46186;"	d	file:
sqlite3WalBeginWriteTransaction	src/wal.c	/^int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	src/wal.h	35;"	d
sqlite3WalBeginWriteTransaction	tsrc/wal.c	/^int sqlite3WalBeginWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalBeginWriteTransaction	tsrc/wal.h	35;"	d
sqlite3WalCallback	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	sqlite3.c	46193;"	d	file:
sqlite3WalCallback	src/wal.c	/^int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	src/wal.h	42;"	d
sqlite3WalCallback	tsrc/wal.c	/^int sqlite3WalCallback(Wal *pWal){$/;"	f
sqlite3WalCallback	tsrc/wal.h	42;"	d
sqlite3WalCheckpoint	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	sqlite3.c	46192;"	d	file:
sqlite3WalCheckpoint	src/wal.c	/^int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	src/wal.h	41;"	d
sqlite3WalCheckpoint	tsrc/wal.c	/^int sqlite3WalCheckpoint($/;"	f
sqlite3WalCheckpoint	tsrc/wal.h	41;"	d
sqlite3WalClose	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalClose($/;"	f
sqlite3WalClose	sqlite3.c	46182;"	d	file:
sqlite3WalClose	src/wal.c	/^int sqlite3WalClose($/;"	f
sqlite3WalClose	src/wal.h	31;"	d
sqlite3WalClose	tsrc/wal.c	/^int sqlite3WalClose($/;"	f
sqlite3WalClose	tsrc/wal.h	31;"	d
sqlite3WalDbsize	sqlite3.c	/^SQLITE_PRIVATE Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	sqlite3.c	46185;"	d	file:
sqlite3WalDbsize	src/wal.c	/^Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	src/wal.h	34;"	d
sqlite3WalDbsize	tsrc/wal.c	/^Pgno sqlite3WalDbsize(Wal *pWal){$/;"	f
sqlite3WalDbsize	tsrc/wal.h	34;"	d
sqlite3WalDefaultHook	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalDefaultHook($/;"	f
sqlite3WalDefaultHook	src/main.c	/^int sqlite3WalDefaultHook($/;"	f
sqlite3WalDefaultHook	tsrc/main.c	/^int sqlite3WalDefaultHook($/;"	f
sqlite3WalEndReadTransaction	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	sqlite3.c	46184;"	d	file:
sqlite3WalEndReadTransaction	src/wal.c	/^void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	src/wal.h	33;"	d
sqlite3WalEndReadTransaction	tsrc/wal.c	/^void sqlite3WalEndReadTransaction(Wal *pWal){$/;"	f
sqlite3WalEndReadTransaction	tsrc/wal.h	33;"	d
sqlite3WalEndWriteTransaction	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	sqlite3.c	46187;"	d	file:
sqlite3WalEndWriteTransaction	src/wal.c	/^int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	src/wal.h	36;"	d
sqlite3WalEndWriteTransaction	tsrc/wal.c	/^int sqlite3WalEndWriteTransaction(Wal *pWal){$/;"	f
sqlite3WalEndWriteTransaction	tsrc/wal.h	36;"	d
sqlite3WalExclusiveMode	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	sqlite3.c	46194;"	d	file:
sqlite3WalExclusiveMode	src/wal.c	/^int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	src/wal.h	43;"	d
sqlite3WalExclusiveMode	tsrc/wal.c	/^int sqlite3WalExclusiveMode(Wal *pWal, int op){$/;"	f
sqlite3WalExclusiveMode	tsrc/wal.h	43;"	d
sqlite3WalFile	sqlite3.c	/^SQLITE_PRIVATE sqlite3_file *sqlite3WalFile(Wal *pWal){$/;"	f
sqlite3WalFile	sqlite3.c	46198;"	d	file:
sqlite3WalFile	src/wal.c	/^sqlite3_file *sqlite3WalFile(Wal *pWal){$/;"	f
sqlite3WalFile	src/wal.h	47;"	d
sqlite3WalFile	tsrc/wal.c	/^sqlite3_file *sqlite3WalFile(Wal *pWal){$/;"	f
sqlite3WalFile	tsrc/wal.h	47;"	d
sqlite3WalFindFrame	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFindFrame($/;"	f
sqlite3WalFindFrame	sqlite3.c	46197;"	d	file:
sqlite3WalFindFrame	src/wal.c	/^int sqlite3WalFindFrame($/;"	f
sqlite3WalFindFrame	src/wal.h	46;"	d
sqlite3WalFindFrame	tsrc/wal.c	/^int sqlite3WalFindFrame($/;"	f
sqlite3WalFindFrame	tsrc/wal.h	46;"	d
sqlite3WalFrames	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFrames($/;"	f
sqlite3WalFrames	sqlite3.c	46191;"	d	file:
sqlite3WalFrames	src/wal.c	/^int sqlite3WalFrames($/;"	f
sqlite3WalFrames	src/wal.h	40;"	d
sqlite3WalFrames	tsrc/wal.c	/^int sqlite3WalFrames($/;"	f
sqlite3WalFrames	tsrc/wal.h	40;"	d
sqlite3WalFramesize	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalFramesize(Wal *pWal){$/;"	f
sqlite3WalFramesize	sqlite3.c	46196;"	d	file:
sqlite3WalFramesize	src/wal.c	/^int sqlite3WalFramesize(Wal *pWal){$/;"	f
sqlite3WalFramesize	src/wal.h	45;"	d
sqlite3WalFramesize	tsrc/wal.c	/^int sqlite3WalFramesize(Wal *pWal){$/;"	f
sqlite3WalFramesize	tsrc/wal.h	45;"	d
sqlite3WalHeapMemory	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	sqlite3.c	46195;"	d	file:
sqlite3WalHeapMemory	src/wal.c	/^int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	src/wal.h	44;"	d
sqlite3WalHeapMemory	tsrc/wal.c	/^int sqlite3WalHeapMemory(Wal *pWal){$/;"	f
sqlite3WalHeapMemory	tsrc/wal.h	44;"	d
sqlite3WalLimit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	sqlite3.c	46181;"	d	file:
sqlite3WalLimit	src/wal.c	/^void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	src/wal.h	30;"	d
sqlite3WalLimit	tsrc/wal.c	/^void sqlite3WalLimit(Wal *pWal, i64 iLimit){$/;"	f
sqlite3WalLimit	tsrc/wal.h	30;"	d
sqlite3WalOpen	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalOpen($/;"	f
sqlite3WalOpen	sqlite3.c	46180;"	d	file:
sqlite3WalOpen	src/wal.c	/^int sqlite3WalOpen($/;"	f
sqlite3WalOpen	src/wal.h	29;"	d
sqlite3WalOpen	tsrc/wal.c	/^int sqlite3WalOpen($/;"	f
sqlite3WalOpen	tsrc/wal.h	29;"	d
sqlite3WalReadFrame	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalReadFrame($/;"	f
sqlite3WalReadFrame	src/wal.c	/^int sqlite3WalReadFrame($/;"	f
sqlite3WalReadFrame	tsrc/wal.c	/^int sqlite3WalReadFrame($/;"	f
sqlite3WalSavepoint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	sqlite3.c	46189;"	d	file:
sqlite3WalSavepoint	src/wal.c	/^void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	src/wal.h	38;"	d
sqlite3WalSavepoint	tsrc/wal.c	/^void sqlite3WalSavepoint(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepoint	tsrc/wal.h	38;"	d
sqlite3WalSavepointUndo	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	sqlite3.c	46190;"	d	file:
sqlite3WalSavepointUndo	src/wal.c	/^int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	src/wal.h	39;"	d
sqlite3WalSavepointUndo	tsrc/wal.c	/^int sqlite3WalSavepointUndo(Wal *pWal, u32 *aWalData){$/;"	f
sqlite3WalSavepointUndo	tsrc/wal.h	39;"	d
sqlite3WalSnapshotGet	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalSnapshotGet(Wal *pWal, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3WalSnapshotGet	src/wal.c	/^int sqlite3WalSnapshotGet(Wal *pWal, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3WalSnapshotGet	tsrc/wal.c	/^int sqlite3WalSnapshotGet(Wal *pWal, sqlite3_snapshot **ppSnapshot){$/;"	f
sqlite3WalSnapshotOpen	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WalSnapshotOpen(Wal *pWal, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3WalSnapshotOpen	src/wal.c	/^void sqlite3WalSnapshotOpen(Wal *pWal, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3WalSnapshotOpen	tsrc/wal.c	/^void sqlite3WalSnapshotOpen(Wal *pWal, sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3WalTrace	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalTrace = 0;$/;"	v
sqlite3WalTrace	src/wal.c	/^int sqlite3WalTrace = 0;$/;"	v
sqlite3WalTrace	tsrc/wal.c	/^int sqlite3WalTrace = 0;$/;"	v
sqlite3WalUndo	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	sqlite3.c	46188;"	d	file:
sqlite3WalUndo	src/wal.c	/^int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	src/wal.h	37;"	d
sqlite3WalUndo	tsrc/wal.c	/^int sqlite3WalUndo(Wal *pWal, int (*xUndo)(void *, Pgno), void *pUndoCtx){$/;"	f
sqlite3WalUndo	tsrc/wal.h	37;"	d
sqlite3WalkExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExpr	src/walker.c	/^int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExpr	tsrc/walker.c	/^int sqlite3WalkExpr(Walker *pWalker, Expr *pExpr){$/;"	f
sqlite3WalkExprList	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkExprList	src/walker.c	/^int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkExprList	tsrc/walker.c	/^int sqlite3WalkExprList(Walker *pWalker, ExprList *p){$/;"	f
sqlite3WalkSelect	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelect	src/walker.c	/^int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelect	tsrc/walker.c	/^int sqlite3WalkSelect(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	src/walker.c	/^int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectExpr	tsrc/walker.c	/^int sqlite3WalkSelectExpr(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	src/walker.c	/^int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WalkSelectFrom	tsrc/walker.c	/^int sqlite3WalkSelectFrom(Walker *pWalker, Select *p){$/;"	f
sqlite3WhereAddScanStatus	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereAddScanStatus($/;"	f
sqlite3WhereAddScanStatus	sqlite3.c	123437;"	d	file:
sqlite3WhereAddScanStatus	src/whereInt.h	473;"	d
sqlite3WhereAddScanStatus	src/wherecode.c	/^void sqlite3WhereAddScanStatus($/;"	f
sqlite3WhereAddScanStatus	tsrc/whereInt.h	473;"	d
sqlite3WhereAddScanStatus	tsrc/wherecode.c	/^void sqlite3WhereAddScanStatus($/;"	f
sqlite3WhereBegin	sqlite3.c	/^SQLITE_PRIVATE WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereBegin	src/where.c	/^WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereBegin	tsrc/where.c	/^WhereInfo *sqlite3WhereBegin($/;"	f
sqlite3WhereBreakLabel	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereBreakLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereBreakLabel	src/where.c	/^int sqlite3WhereBreakLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereBreakLabel	tsrc/where.c	/^int sqlite3WhereBreakLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereClauseClear	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseClear(WhereClause *pWC){$/;"	f
sqlite3WhereClauseClear	src/whereexpr.c	/^void sqlite3WhereClauseClear(WhereClause *pWC){$/;"	f
sqlite3WhereClauseClear	tsrc/whereexpr.c	/^void sqlite3WhereClauseClear(WhereClause *pWC){$/;"	f
sqlite3WhereClauseInit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClauseInit($/;"	f
sqlite3WhereClauseInit	src/whereexpr.c	/^void sqlite3WhereClauseInit($/;"	f
sqlite3WhereClauseInit	tsrc/whereexpr.c	/^void sqlite3WhereClauseInit($/;"	f
sqlite3WhereClausePrint	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereClausePrint(WhereClause *pWC){$/;"	f
sqlite3WhereClausePrint	src/where.c	/^void sqlite3WhereClausePrint(WhereClause *pWC){$/;"	f
sqlite3WhereClausePrint	tsrc/where.c	/^void sqlite3WhereClausePrint(WhereClause *pWC){$/;"	f
sqlite3WhereCodeOneLoopStart	sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereCodeOneLoopStart($/;"	f
sqlite3WhereCodeOneLoopStart	src/wherecode.c	/^Bitmask sqlite3WhereCodeOneLoopStart($/;"	f
sqlite3WhereCodeOneLoopStart	tsrc/wherecode.c	/^Bitmask sqlite3WhereCodeOneLoopStart($/;"	f
sqlite3WhereContinueLabel	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereContinueLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereContinueLabel	src/where.c	/^int sqlite3WhereContinueLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereContinueLabel	tsrc/where.c	/^int sqlite3WhereContinueLabel(WhereInfo *pWInfo){$/;"	f
sqlite3WhereEnd	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereEnd	src/where.c	/^void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereEnd	tsrc/where.c	/^void sqlite3WhereEnd(WhereInfo *pWInfo){$/;"	f
sqlite3WhereExplainOneScan	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereExplainOneScan($/;"	f
sqlite3WhereExplainOneScan	sqlite3.c	123427;"	d	file:
sqlite3WhereExplainOneScan	src/whereInt.h	463;"	d
sqlite3WhereExplainOneScan	src/wherecode.c	/^int sqlite3WhereExplainOneScan($/;"	f
sqlite3WhereExplainOneScan	tsrc/whereInt.h	463;"	d
sqlite3WhereExplainOneScan	tsrc/wherecode.c	/^int sqlite3WhereExplainOneScan($/;"	f
sqlite3WhereExprAnalyze	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereExprAnalyze($/;"	f
sqlite3WhereExprAnalyze	src/whereexpr.c	/^void sqlite3WhereExprAnalyze($/;"	f
sqlite3WhereExprAnalyze	tsrc/whereexpr.c	/^void sqlite3WhereExprAnalyze($/;"	f
sqlite3WhereExprListUsage	sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprListUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f
sqlite3WhereExprListUsage	src/whereexpr.c	/^Bitmask sqlite3WhereExprListUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f
sqlite3WhereExprListUsage	tsrc/whereexpr.c	/^Bitmask sqlite3WhereExprListUsage(WhereMaskSet *pMaskSet, ExprList *pList){$/;"	f
sqlite3WhereExprUsage	sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f
sqlite3WhereExprUsage	src/whereexpr.c	/^Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f
sqlite3WhereExprUsage	tsrc/whereexpr.c	/^Bitmask sqlite3WhereExprUsage(WhereMaskSet *pMaskSet, Expr *p){$/;"	f
sqlite3WhereFindTerm	sqlite3.c	/^SQLITE_PRIVATE WhereTerm *sqlite3WhereFindTerm($/;"	f
sqlite3WhereFindTerm	src/where.c	/^WhereTerm *sqlite3WhereFindTerm($/;"	f
sqlite3WhereFindTerm	tsrc/where.c	/^WhereTerm *sqlite3WhereFindTerm($/;"	f
sqlite3WhereGetMask	sqlite3.c	/^SQLITE_PRIVATE Bitmask sqlite3WhereGetMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f
sqlite3WhereGetMask	src/where.c	/^Bitmask sqlite3WhereGetMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f
sqlite3WhereGetMask	tsrc/where.c	/^Bitmask sqlite3WhereGetMask(WhereMaskSet *pMaskSet, int iCursor){$/;"	f
sqlite3WhereIsDistinct	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsDistinct(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsDistinct	src/where.c	/^int sqlite3WhereIsDistinct(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsDistinct	tsrc/where.c	/^int sqlite3WhereIsDistinct(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsOrdered	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsOrdered(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsOrdered	src/where.c	/^int sqlite3WhereIsOrdered(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsOrdered	tsrc/where.c	/^int sqlite3WhereIsOrdered(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsSorted	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereIsSorted(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsSorted	src/where.c	/^int sqlite3WhereIsSorted(WhereInfo *pWInfo){$/;"	f
sqlite3WhereIsSorted	tsrc/where.c	/^int sqlite3WhereIsSorted(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOkOnePass	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereOkOnePass(WhereInfo *pWInfo, int *aiCur){$/;"	f
sqlite3WhereOkOnePass	src/where.c	/^int sqlite3WhereOkOnePass(WhereInfo *pWInfo, int *aiCur){$/;"	f
sqlite3WhereOkOnePass	tsrc/where.c	/^int sqlite3WhereOkOnePass(WhereInfo *pWInfo, int *aiCur){$/;"	f
sqlite3WhereOrderedInnerLoop	sqlite3.c	/^SQLITE_PRIVATE int sqlite3WhereOrderedInnerLoop(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOrderedInnerLoop	src/where.c	/^int sqlite3WhereOrderedInnerLoop(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOrderedInnerLoop	tsrc/where.c	/^int sqlite3WhereOrderedInnerLoop(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOutputRowCount	sqlite3.c	/^SQLITE_PRIVATE LogEst sqlite3WhereOutputRowCount(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOutputRowCount	src/where.c	/^LogEst sqlite3WhereOutputRowCount(WhereInfo *pWInfo){$/;"	f
sqlite3WhereOutputRowCount	tsrc/where.c	/^LogEst sqlite3WhereOutputRowCount(WhereInfo *pWInfo){$/;"	f
sqlite3WhereSplit	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereSplit(WhereClause *pWC, Expr *pExpr, u8 op){$/;"	f
sqlite3WhereSplit	src/whereexpr.c	/^void sqlite3WhereSplit(WhereClause *pWC, Expr *pExpr, u8 op){$/;"	f
sqlite3WhereSplit	tsrc/whereexpr.c	/^void sqlite3WhereSplit(WhereClause *pWC, Expr *pExpr, u8 op){$/;"	f
sqlite3WhereTabFuncArgs	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WhereTabFuncArgs($/;"	f
sqlite3WhereTabFuncArgs	src/whereexpr.c	/^void sqlite3WhereTabFuncArgs($/;"	f
sqlite3WhereTabFuncArgs	tsrc/whereexpr.c	/^void sqlite3WhereTabFuncArgs($/;"	f
sqlite3WhereTrace	sqlite3.c	/^\/***\/ int sqlite3WhereTrace = 0;$/;"	v
sqlite3WhereTrace	sqlite3.c	/^\/***\/ int sqlite3WhereTrace;$/;"	v
sqlite3WhereTrace	src/where.c	/^\/***\/ int sqlite3WhereTrace = 0;$/;"	v
sqlite3WhereTrace	src/whereInt.h	/^\/***\/ int sqlite3WhereTrace;$/;"	v
sqlite3WhereTrace	tsrc/where.c	/^\/***\/ int sqlite3WhereTrace = 0;$/;"	v
sqlite3WhereTrace	tsrc/whereInt.h	/^\/***\/ int sqlite3WhereTrace;$/;"	v
sqlite3Win32Wait	sqlite3.c	/^SQLITE_PRIVATE DWORD sqlite3Win32Wait(HANDLE hObject){$/;"	f
sqlite3Win32Wait	src/os_win.c	/^DWORD sqlite3Win32Wait(HANDLE hObject){$/;"	f
sqlite3Win32Wait	tsrc/os_win.c	/^DWORD sqlite3Win32Wait(HANDLE hObject){$/;"	f
sqlite3WithAdd	sqlite3.c	/^SQLITE_PRIVATE With *sqlite3WithAdd($/;"	f
sqlite3WithAdd	src/build.c	/^With *sqlite3WithAdd($/;"	f
sqlite3WithAdd	tsrc/build.c	/^With *sqlite3WithAdd($/;"	f
sqlite3WithDelete	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithDelete(sqlite3 *db, With *pWith){$/;"	f
sqlite3WithDelete	sqlite3.c	16692;"	d	file:
sqlite3WithDelete	src/build.c	/^void sqlite3WithDelete(sqlite3 *db, With *pWith){$/;"	f
sqlite3WithDelete	src/sqliteInt.h	4093;"	d
sqlite3WithDelete	tsrc/build.c	/^void sqlite3WithDelete(sqlite3 *db, With *pWith){$/;"	f
sqlite3WithDelete	tsrc/sqliteInt.h	4093;"	d
sqlite3WithPush	sqlite3.c	/^SQLITE_PRIVATE void sqlite3WithPush(Parse *pParse, With *pWith, u8 bFree){$/;"	f
sqlite3WithPush	sqlite3.c	16691;"	d	file:
sqlite3WithPush	src/select.c	/^void sqlite3WithPush(Parse *pParse, With *pWith, u8 bFree){$/;"	f
sqlite3WithPush	src/sqliteInt.h	4092;"	d
sqlite3WithPush	tsrc/select.c	/^void sqlite3WithPush(Parse *pParse, With *pWith, u8 bFree){$/;"	f
sqlite3WithPush	tsrc/sqliteInt.h	4092;"	d
sqlite3XPrintf	sqlite3.c	/^SQLITE_PRIVATE void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3XPrintf	src/printf.c	/^void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3XPrintf	tsrc/printf.c	/^void sqlite3XPrintf(StrAccum *p, const char *zFormat, ...){$/;"	f
sqlite3_aggregate_context	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	sqlite3.c	109135;"	d	file:
sqlite3_aggregate_context	sqlite3ext.h	309;"	d
sqlite3_aggregate_context	src/sqlite3ext.h	309;"	d
sqlite3_aggregate_context	src/vdbeapi.c	/^void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_context	tsrc/sqlite3ext.h	309;"	d
sqlite3_aggregate_context	tsrc/vdbeapi.c	/^void *sqlite3_aggregate_context(sqlite3_context *p, int nByte){$/;"	f
sqlite3_aggregate_count	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	sqlite3.c	109137;"	d	file:
sqlite3_aggregate_count	sqlite3ext.h	311;"	d
sqlite3_aggregate_count	src/sqlite3ext.h	311;"	d
sqlite3_aggregate_count	src/vdbeapi.c	/^int sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_aggregate_count	tsrc/sqlite3ext.h	311;"	d
sqlite3_aggregate_count	tsrc/vdbeapi.c	/^int sqlite3_aggregate_count(sqlite3_context *p){$/;"	f
sqlite3_api_routines	sqlite3.c	/^struct sqlite3_api_routines {$/;"	s	file:
sqlite3_api_routines	sqlite3.c	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines	file:
sqlite3_api_routines	sqlite3.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_api_routines	sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	src/sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_api_routines	tsrc/sqlite3.h	/^typedef struct sqlite3_api_routines sqlite3_api_routines;$/;"	t	typeref:struct:sqlite3_api_routines
sqlite3_api_routines	tsrc/sqlite3ext.h	/^struct sqlite3_api_routines {$/;"	s
sqlite3_auto_extension	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_auto_extension($/;"	f
sqlite3_auto_extension	sqlite3.c	109340;"	d	file:
sqlite3_auto_extension	sqlite3ext.h	514;"	d
sqlite3_auto_extension	src/loadext.c	/^int sqlite3_auto_extension($/;"	f
sqlite3_auto_extension	src/sqlite3ext.h	514;"	d
sqlite3_auto_extension	tsrc/loadext.c	/^int sqlite3_auto_extension($/;"	f
sqlite3_auto_extension	tsrc/sqlite3ext.h	514;"	d
sqlite3_backup	sqlite3.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	sqlite3.c	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup	file:
sqlite3_backup	sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup	src/backup.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	tsrc/backup.c	/^struct sqlite3_backup {$/;"	s	file:
sqlite3_backup	tsrc/sqlite3.h	/^typedef struct sqlite3_backup sqlite3_backup;$/;"	t	typeref:struct:sqlite3_backup
sqlite3_backup_finish	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	sqlite3.c	109301;"	d	file:
sqlite3_backup_finish	sqlite3ext.h	475;"	d
sqlite3_backup_finish	src/backup.c	/^int sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	src/sqlite3ext.h	475;"	d
sqlite3_backup_finish	tsrc/backup.c	/^int sqlite3_backup_finish(sqlite3_backup *p){$/;"	f
sqlite3_backup_finish	tsrc/sqlite3ext.h	475;"	d
sqlite3_backup_init	sqlite3.c	/^SQLITE_API sqlite3_backup *SQLITE_STDCALL sqlite3_backup_init($/;"	f
sqlite3_backup_init	sqlite3.c	109302;"	d	file:
sqlite3_backup_init	sqlite3ext.h	476;"	d
sqlite3_backup_init	src/backup.c	/^sqlite3_backup *sqlite3_backup_init($/;"	f
sqlite3_backup_init	src/sqlite3ext.h	476;"	d
sqlite3_backup_init	tsrc/backup.c	/^sqlite3_backup *sqlite3_backup_init($/;"	f
sqlite3_backup_init	tsrc/sqlite3ext.h	476;"	d
sqlite3_backup_pagecount	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	sqlite3.c	109303;"	d	file:
sqlite3_backup_pagecount	sqlite3ext.h	477;"	d
sqlite3_backup_pagecount	src/backup.c	/^int sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	src/sqlite3ext.h	477;"	d
sqlite3_backup_pagecount	tsrc/backup.c	/^int sqlite3_backup_pagecount(sqlite3_backup *p){$/;"	f
sqlite3_backup_pagecount	tsrc/sqlite3ext.h	477;"	d
sqlite3_backup_remaining	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	sqlite3.c	109304;"	d	file:
sqlite3_backup_remaining	sqlite3ext.h	478;"	d
sqlite3_backup_remaining	src/backup.c	/^int sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	src/sqlite3ext.h	478;"	d
sqlite3_backup_remaining	tsrc/backup.c	/^int sqlite3_backup_remaining(sqlite3_backup *p){$/;"	f
sqlite3_backup_remaining	tsrc/sqlite3ext.h	478;"	d
sqlite3_backup_step	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	sqlite3.c	109305;"	d	file:
sqlite3_backup_step	sqlite3ext.h	479;"	d
sqlite3_backup_step	src/backup.c	/^int sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	src/sqlite3ext.h	479;"	d
sqlite3_backup_step	tsrc/backup.c	/^int sqlite3_backup_step(sqlite3_backup *p, int nPage){$/;"	f
sqlite3_backup_step	tsrc/sqlite3ext.h	479;"	d
sqlite3_bind_blob	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	sqlite3.c	109139;"	d	file:
sqlite3_bind_blob	sqlite3ext.h	313;"	d
sqlite3_bind_blob	src/sqlite3ext.h	313;"	d
sqlite3_bind_blob	src/vdbeapi.c	/^int sqlite3_bind_blob($/;"	f
sqlite3_bind_blob	tsrc/sqlite3ext.h	313;"	d
sqlite3_bind_blob	tsrc/vdbeapi.c	/^int sqlite3_bind_blob($/;"	f
sqlite3_bind_blob64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_blob64($/;"	f
sqlite3_bind_blob64	sqlite3.c	109341;"	d	file:
sqlite3_bind_blob64	sqlite3ext.h	515;"	d
sqlite3_bind_blob64	src/sqlite3ext.h	515;"	d
sqlite3_bind_blob64	src/vdbeapi.c	/^int sqlite3_bind_blob64($/;"	f
sqlite3_bind_blob64	tsrc/sqlite3ext.h	515;"	d
sqlite3_bind_blob64	tsrc/vdbeapi.c	/^int sqlite3_bind_blob64($/;"	f
sqlite3_bind_double	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	sqlite3.c	109140;"	d	file:
sqlite3_bind_double	sqlite3ext.h	314;"	d
sqlite3_bind_double	src/sqlite3ext.h	314;"	d
sqlite3_bind_double	src/vdbeapi.c	/^int sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_double	tsrc/sqlite3ext.h	314;"	d
sqlite3_bind_double	tsrc/vdbeapi.c	/^int sqlite3_bind_double(sqlite3_stmt *pStmt, int i, double rValue){$/;"	f
sqlite3_bind_int	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	sqlite3.c	109141;"	d	file:
sqlite3_bind_int	sqlite3ext.h	315;"	d
sqlite3_bind_int	src/sqlite3ext.h	315;"	d
sqlite3_bind_int	src/vdbeapi.c	/^int sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int	tsrc/sqlite3ext.h	315;"	d
sqlite3_bind_int	tsrc/vdbeapi.c	/^int sqlite3_bind_int(sqlite3_stmt *p, int i, int iValue){$/;"	f
sqlite3_bind_int64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	sqlite3.c	109142;"	d	file:
sqlite3_bind_int64	sqlite3ext.h	316;"	d
sqlite3_bind_int64	src/sqlite3ext.h	316;"	d
sqlite3_bind_int64	src/vdbeapi.c	/^int sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_int64	tsrc/sqlite3ext.h	316;"	d
sqlite3_bind_int64	tsrc/vdbeapi.c	/^int sqlite3_bind_int64(sqlite3_stmt *pStmt, int i, sqlite_int64 iValue){$/;"	f
sqlite3_bind_null	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	sqlite3.c	109143;"	d	file:
sqlite3_bind_null	sqlite3ext.h	317;"	d
sqlite3_bind_null	src/sqlite3ext.h	317;"	d
sqlite3_bind_null	src/vdbeapi.c	/^int sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_null	tsrc/sqlite3ext.h	317;"	d
sqlite3_bind_null	tsrc/vdbeapi.c	/^int sqlite3_bind_null(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_count	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	sqlite3.c	109144;"	d	file:
sqlite3_bind_parameter_count	sqlite3ext.h	318;"	d
sqlite3_bind_parameter_count	src/sqlite3ext.h	318;"	d
sqlite3_bind_parameter_count	src/vdbeapi.c	/^int sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_count	tsrc/sqlite3ext.h	318;"	d
sqlite3_bind_parameter_count	tsrc/vdbeapi.c	/^int sqlite3_bind_parameter_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_bind_parameter_index	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	sqlite3.c	109145;"	d	file:
sqlite3_bind_parameter_index	sqlite3ext.h	319;"	d
sqlite3_bind_parameter_index	src/sqlite3ext.h	319;"	d
sqlite3_bind_parameter_index	src/vdbeapi.c	/^int sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_index	tsrc/sqlite3ext.h	319;"	d
sqlite3_bind_parameter_index	tsrc/vdbeapi.c	/^int sqlite3_bind_parameter_index(sqlite3_stmt *pStmt, const char *zName){$/;"	f
sqlite3_bind_parameter_name	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	sqlite3.c	109146;"	d	file:
sqlite3_bind_parameter_name	sqlite3ext.h	320;"	d
sqlite3_bind_parameter_name	src/sqlite3ext.h	320;"	d
sqlite3_bind_parameter_name	src/vdbeapi.c	/^const char *sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_parameter_name	tsrc/sqlite3ext.h	320;"	d
sqlite3_bind_parameter_name	tsrc/vdbeapi.c	/^const char *sqlite3_bind_parameter_name(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_bind_text	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text( $/;"	f
sqlite3_bind_text	sqlite3.c	109147;"	d	file:
sqlite3_bind_text	sqlite3ext.h	321;"	d
sqlite3_bind_text	src/sqlite3ext.h	321;"	d
sqlite3_bind_text	src/vdbeapi.c	/^int sqlite3_bind_text( $/;"	f
sqlite3_bind_text	tsrc/sqlite3ext.h	321;"	d
sqlite3_bind_text	tsrc/vdbeapi.c	/^int sqlite3_bind_text( $/;"	f
sqlite3_bind_text16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	sqlite3.c	109148;"	d	file:
sqlite3_bind_text16	sqlite3.c	109413;"	d	file:
sqlite3_bind_text16	sqlite3ext.h	322;"	d
sqlite3_bind_text16	src/loadext.c	43;"	d	file:
sqlite3_bind_text16	src/sqlite3ext.h	322;"	d
sqlite3_bind_text16	src/vdbeapi.c	/^int sqlite3_bind_text16($/;"	f
sqlite3_bind_text16	tsrc/loadext.c	43;"	d	file:
sqlite3_bind_text16	tsrc/sqlite3ext.h	322;"	d
sqlite3_bind_text16	tsrc/vdbeapi.c	/^int sqlite3_bind_text16($/;"	f
sqlite3_bind_text64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_text64( $/;"	f
sqlite3_bind_text64	sqlite3.c	109342;"	d	file:
sqlite3_bind_text64	sqlite3ext.h	516;"	d
sqlite3_bind_text64	src/sqlite3ext.h	516;"	d
sqlite3_bind_text64	src/vdbeapi.c	/^int sqlite3_bind_text64( $/;"	f
sqlite3_bind_text64	tsrc/sqlite3ext.h	516;"	d
sqlite3_bind_text64	tsrc/vdbeapi.c	/^int sqlite3_bind_text64( $/;"	f
sqlite3_bind_value	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	sqlite3.c	109149;"	d	file:
sqlite3_bind_value	sqlite3ext.h	323;"	d
sqlite3_bind_value	src/sqlite3ext.h	323;"	d
sqlite3_bind_value	src/vdbeapi.c	/^int sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_value	tsrc/sqlite3ext.h	323;"	d
sqlite3_bind_value	tsrc/vdbeapi.c	/^int sqlite3_bind_value(sqlite3_stmt *pStmt, int i, const sqlite3_value *pValue){$/;"	f
sqlite3_bind_zeroblob	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	sqlite3.c	109266;"	d	file:
sqlite3_bind_zeroblob	sqlite3.c	109474;"	d	file:
sqlite3_bind_zeroblob	sqlite3ext.h	440;"	d
sqlite3_bind_zeroblob	src/loadext.c	104;"	d	file:
sqlite3_bind_zeroblob	src/sqlite3ext.h	440;"	d
sqlite3_bind_zeroblob	src/vdbeapi.c	/^int sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob	tsrc/loadext.c	104;"	d	file:
sqlite3_bind_zeroblob	tsrc/sqlite3ext.h	440;"	d
sqlite3_bind_zeroblob	tsrc/vdbeapi.c	/^int sqlite3_bind_zeroblob(sqlite3_stmt *pStmt, int i, int n){$/;"	f
sqlite3_bind_zeroblob64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_bind_zeroblob64(sqlite3_stmt *pStmt, int i, sqlite3_uint64 n){$/;"	f
sqlite3_bind_zeroblob64	sqlite3.c	109356;"	d	file:
sqlite3_bind_zeroblob64	sqlite3ext.h	530;"	d
sqlite3_bind_zeroblob64	src/sqlite3ext.h	530;"	d
sqlite3_bind_zeroblob64	src/vdbeapi.c	/^int sqlite3_bind_zeroblob64(sqlite3_stmt *pStmt, int i, sqlite3_uint64 n){$/;"	f
sqlite3_bind_zeroblob64	tsrc/sqlite3ext.h	530;"	d
sqlite3_bind_zeroblob64	tsrc/vdbeapi.c	/^int sqlite3_bind_zeroblob64(sqlite3_stmt *pStmt, int i, sqlite3_uint64 n){$/;"	f
sqlite3_blob	sqlite3.c	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob	file:
sqlite3_blob	sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob	tsrc/sqlite3.h	/^typedef struct sqlite3_blob sqlite3_blob;$/;"	t	typeref:struct:sqlite3_blob
sqlite3_blob_bytes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	sqlite3.c	109267;"	d	file:
sqlite3_blob_bytes	sqlite3.c	109475;"	d	file:
sqlite3_blob_bytes	sqlite3ext.h	441;"	d
sqlite3_blob_bytes	src/loadext.c	105;"	d	file:
sqlite3_blob_bytes	src/sqlite3ext.h	441;"	d
sqlite3_blob_bytes	src/vdbeblob.c	/^int sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_bytes	tsrc/loadext.c	105;"	d	file:
sqlite3_blob_bytes	tsrc/sqlite3ext.h	441;"	d
sqlite3_blob_bytes	tsrc/vdbeblob.c	/^int sqlite3_blob_bytes(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	sqlite3.c	109268;"	d	file:
sqlite3_blob_close	sqlite3.c	109476;"	d	file:
sqlite3_blob_close	sqlite3ext.h	442;"	d
sqlite3_blob_close	src/loadext.c	106;"	d	file:
sqlite3_blob_close	src/sqlite3ext.h	442;"	d
sqlite3_blob_close	src/vdbeblob.c	/^int sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_close	tsrc/loadext.c	106;"	d	file:
sqlite3_blob_close	tsrc/sqlite3ext.h	442;"	d
sqlite3_blob_close	tsrc/vdbeblob.c	/^int sqlite3_blob_close(sqlite3_blob *pBlob){$/;"	f
sqlite3_blob_open	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_open($/;"	f
sqlite3_blob_open	sqlite3.c	109269;"	d	file:
sqlite3_blob_open	sqlite3.c	109477;"	d	file:
sqlite3_blob_open	sqlite3ext.h	443;"	d
sqlite3_blob_open	src/loadext.c	107;"	d	file:
sqlite3_blob_open	src/sqlite3ext.h	443;"	d
sqlite3_blob_open	src/vdbeblob.c	/^int sqlite3_blob_open($/;"	f
sqlite3_blob_open	tsrc/loadext.c	107;"	d	file:
sqlite3_blob_open	tsrc/sqlite3ext.h	443;"	d
sqlite3_blob_open	tsrc/vdbeblob.c	/^int sqlite3_blob_open($/;"	f
sqlite3_blob_read	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	sqlite3.c	109270;"	d	file:
sqlite3_blob_read	sqlite3.c	109478;"	d	file:
sqlite3_blob_read	sqlite3ext.h	444;"	d
sqlite3_blob_read	src/loadext.c	108;"	d	file:
sqlite3_blob_read	src/sqlite3ext.h	444;"	d
sqlite3_blob_read	src/vdbeblob.c	/^int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_read	tsrc/loadext.c	108;"	d	file:
sqlite3_blob_read	tsrc/sqlite3ext.h	444;"	d
sqlite3_blob_read	tsrc/vdbeblob.c	/^int sqlite3_blob_read(sqlite3_blob *pBlob, void *z, int n, int iOffset){$/;"	f
sqlite3_blob_reopen	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	sqlite3.c	109322;"	d	file:
sqlite3_blob_reopen	sqlite3.c	109480;"	d	file:
sqlite3_blob_reopen	sqlite3ext.h	496;"	d
sqlite3_blob_reopen	src/loadext.c	110;"	d	file:
sqlite3_blob_reopen	src/sqlite3ext.h	496;"	d
sqlite3_blob_reopen	src/vdbeblob.c	/^int sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_reopen	tsrc/loadext.c	110;"	d	file:
sqlite3_blob_reopen	tsrc/sqlite3ext.h	496;"	d
sqlite3_blob_reopen	tsrc/vdbeblob.c	/^int sqlite3_blob_reopen(sqlite3_blob *pBlob, sqlite3_int64 iRow){$/;"	f
sqlite3_blob_write	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	sqlite3.c	109271;"	d	file:
sqlite3_blob_write	sqlite3.c	109479;"	d	file:
sqlite3_blob_write	sqlite3ext.h	445;"	d
sqlite3_blob_write	src/loadext.c	109;"	d	file:
sqlite3_blob_write	src/sqlite3ext.h	445;"	d
sqlite3_blob_write	src/vdbeblob.c	/^int sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blob_write	tsrc/loadext.c	109;"	d	file:
sqlite3_blob_write	tsrc/sqlite3ext.h	445;"	d
sqlite3_blob_write	tsrc/vdbeblob.c	/^int sqlite3_blob_write(sqlite3_blob *pBlob, const void *z, int n, int iOffset){$/;"	f
sqlite3_blocking_prepare_v2	src/test_thread.c	/^int sqlite3_blocking_prepare_v2($/;"	f
sqlite3_blocking_step	src/test_thread.c	/^int sqlite3_blocking_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_busy_handler	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	sqlite3.c	109150;"	d	file:
sqlite3_busy_handler	sqlite3ext.h	324;"	d
sqlite3_busy_handler	src/main.c	/^int sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	src/sqlite3ext.h	324;"	d
sqlite3_busy_handler	tsrc/main.c	/^int sqlite3_busy_handler($/;"	f
sqlite3_busy_handler	tsrc/sqlite3ext.h	324;"	d
sqlite3_busy_timeout	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	sqlite3.c	109151;"	d	file:
sqlite3_busy_timeout	sqlite3ext.h	325;"	d
sqlite3_busy_timeout	src/main.c	/^int sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	src/sqlite3ext.h	325;"	d
sqlite3_busy_timeout	tsrc/main.c	/^int sqlite3_busy_timeout(sqlite3 *db, int ms){$/;"	f
sqlite3_busy_timeout	tsrc/sqlite3ext.h	325;"	d
sqlite3_callback	sqlite3.c	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t	file:
sqlite3_callback	sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_callback	tsrc/sqlite3.h	/^typedef int (*sqlite3_callback)(void*,int,char**, char**);$/;"	t
sqlite3_cancel_auto_extension	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_cancel_auto_extension($/;"	f
sqlite3_cancel_auto_extension	sqlite3.c	109343;"	d	file:
sqlite3_cancel_auto_extension	sqlite3ext.h	517;"	d
sqlite3_cancel_auto_extension	src/loadext.c	/^int sqlite3_cancel_auto_extension($/;"	f
sqlite3_cancel_auto_extension	src/sqlite3ext.h	517;"	d
sqlite3_cancel_auto_extension	tsrc/loadext.c	/^int sqlite3_cancel_auto_extension($/;"	f
sqlite3_cancel_auto_extension	tsrc/sqlite3ext.h	517;"	d
sqlite3_changegroup	ext/session/sqlite3session.c	/^struct sqlite3_changegroup {$/;"	s	file:
sqlite3_changegroup	ext/session/sqlite3session.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changegroup	sqlite3.c	/^struct sqlite3_changegroup {$/;"	s	file:
sqlite3_changegroup	sqlite3.c	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup	file:
sqlite3_changegroup	sqlite3.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changegroup	sqlite3session.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changegroup	tsrc/sqlite3.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changegroup	tsrc/sqlite3session.c	/^struct sqlite3_changegroup {$/;"	s	file:
sqlite3_changegroup	tsrc/sqlite3session.h	/^typedef struct sqlite3_changegroup sqlite3_changegroup;$/;"	t	typeref:struct:sqlite3_changegroup
sqlite3_changes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	sqlite3.c	109152;"	d	file:
sqlite3_changes	sqlite3ext.h	326;"	d
sqlite3_changes	src/main.c	/^int sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	src/sqlite3ext.h	326;"	d
sqlite3_changes	tsrc/main.c	/^int sqlite3_changes(sqlite3 *db){$/;"	f
sqlite3_changes	tsrc/sqlite3ext.h	326;"	d
sqlite3_changeset_iter	ext/session/sqlite3session.c	/^struct sqlite3_changeset_iter {$/;"	s	file:
sqlite3_changeset_iter	ext/session/sqlite3session.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_changeset_iter	sqlite3.c	/^struct sqlite3_changeset_iter {$/;"	s	file:
sqlite3_changeset_iter	sqlite3.c	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter	file:
sqlite3_changeset_iter	sqlite3.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_changeset_iter	sqlite3session.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_changeset_iter	tsrc/sqlite3.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_changeset_iter	tsrc/sqlite3session.c	/^struct sqlite3_changeset_iter {$/;"	s	file:
sqlite3_changeset_iter	tsrc/sqlite3session.h	/^typedef struct sqlite3_changeset_iter sqlite3_changeset_iter;$/;"	t	typeref:struct:sqlite3_changeset_iter
sqlite3_clear_bindings	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	sqlite3.c	109265;"	d	file:
sqlite3_clear_bindings	sqlite3ext.h	439;"	d
sqlite3_clear_bindings	src/sqlite3ext.h	439;"	d
sqlite3_clear_bindings	src/vdbeapi.c	/^int sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_clear_bindings	tsrc/sqlite3ext.h	439;"	d
sqlite3_clear_bindings	tsrc/vdbeapi.c	/^int sqlite3_clear_bindings(sqlite3_stmt *pStmt){$/;"	f
sqlite3_client_close	src/test_server.c	/^int sqlite3_client_close(sqlite3 *pDb){$/;"	f
sqlite3_client_finalize	src/test_server.c	/^int sqlite3_client_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_client_open	src/test_server.c	/^int sqlite3_client_open(const char *zDatabaseName, sqlite3 **ppDb){$/;"	f
sqlite3_client_prepare	src/test_server.c	/^int sqlite3_client_prepare($/;"	f
sqlite3_client_reset	src/test_server.c	/^int sqlite3_client_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_client_step	src/test_server.c	/^int sqlite3_client_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_close	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_close(sqlite3 *db){ return sqlite3Close(db,0); }$/;"	f
sqlite3_close	sqlite3.c	109153;"	d	file:
sqlite3_close	sqlite3ext.h	327;"	d
sqlite3_close	src/main.c	/^int sqlite3_close(sqlite3 *db){ return sqlite3Close(db,0); }$/;"	f
sqlite3_close	src/sqlite3ext.h	327;"	d
sqlite3_close	tsrc/main.c	/^int sqlite3_close(sqlite3 *db){ return sqlite3Close(db,0); }$/;"	f
sqlite3_close	tsrc/sqlite3ext.h	327;"	d
sqlite3_close_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_close_v2(sqlite3 *db){ return sqlite3Close(db,1); }$/;"	f
sqlite3_close_v2	sqlite3.c	109326;"	d	file:
sqlite3_close_v2	sqlite3ext.h	500;"	d
sqlite3_close_v2	src/main.c	/^int sqlite3_close_v2(sqlite3 *db){ return sqlite3Close(db,1); }$/;"	f
sqlite3_close_v2	src/sqlite3ext.h	500;"	d
sqlite3_close_v2	tsrc/main.c	/^int sqlite3_close_v2(sqlite3 *db){ return sqlite3Close(db,1); }$/;"	f
sqlite3_close_v2	tsrc/sqlite3ext.h	500;"	d
sqlite3_collation_needed	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	sqlite3.c	109154;"	d	file:
sqlite3_collation_needed	sqlite3ext.h	328;"	d
sqlite3_collation_needed	src/main.c	/^int sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	src/sqlite3ext.h	328;"	d
sqlite3_collation_needed	tsrc/main.c	/^int sqlite3_collation_needed($/;"	f
sqlite3_collation_needed	tsrc/sqlite3ext.h	328;"	d
sqlite3_collation_needed16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	sqlite3.c	109155;"	d	file:
sqlite3_collation_needed16	sqlite3.c	109414;"	d	file:
sqlite3_collation_needed16	sqlite3ext.h	329;"	d
sqlite3_collation_needed16	src/loadext.c	44;"	d	file:
sqlite3_collation_needed16	src/main.c	/^int sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	src/sqlite3ext.h	329;"	d
sqlite3_collation_needed16	tsrc/loadext.c	44;"	d	file:
sqlite3_collation_needed16	tsrc/main.c	/^int sqlite3_collation_needed16($/;"	f
sqlite3_collation_needed16	tsrc/sqlite3ext.h	329;"	d
sqlite3_column_blob	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	sqlite3.c	109156;"	d	file:
sqlite3_column_blob	sqlite3ext.h	330;"	d
sqlite3_column_blob	src/sqlite3ext.h	330;"	d
sqlite3_column_blob	src/vdbeapi.c	/^const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_blob	tsrc/sqlite3ext.h	330;"	d
sqlite3_column_blob	tsrc/vdbeapi.c	/^const void *sqlite3_column_blob(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	sqlite3.c	109157;"	d	file:
sqlite3_column_bytes	sqlite3ext.h	331;"	d
sqlite3_column_bytes	src/sqlite3ext.h	331;"	d
sqlite3_column_bytes	src/vdbeapi.c	/^int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes	tsrc/sqlite3ext.h	331;"	d
sqlite3_column_bytes	tsrc/vdbeapi.c	/^int sqlite3_column_bytes(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	sqlite3.c	109158;"	d	file:
sqlite3_column_bytes16	sqlite3ext.h	332;"	d
sqlite3_column_bytes16	src/sqlite3ext.h	332;"	d
sqlite3_column_bytes16	src/vdbeapi.c	/^int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_bytes16	tsrc/sqlite3ext.h	332;"	d
sqlite3_column_bytes16	tsrc/vdbeapi.c	/^int sqlite3_column_bytes16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_count	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	sqlite3.c	109159;"	d	file:
sqlite3_column_count	sqlite3ext.h	333;"	d
sqlite3_column_count	src/sqlite3ext.h	333;"	d
sqlite3_column_count	src/vdbeapi.c	/^int sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_count	tsrc/sqlite3ext.h	333;"	d
sqlite3_column_count	tsrc/vdbeapi.c	/^int sqlite3_column_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_column_database_name	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	sqlite3.c	109160;"	d	file:
sqlite3_column_database_name	sqlite3.c	109400;"	d	file:
sqlite3_column_database_name	sqlite3ext.h	334;"	d
sqlite3_column_database_name	src/loadext.c	30;"	d	file:
sqlite3_column_database_name	src/sqlite3ext.h	334;"	d
sqlite3_column_database_name	src/vdbeapi.c	/^const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name	tsrc/loadext.c	30;"	d	file:
sqlite3_column_database_name	tsrc/sqlite3ext.h	334;"	d
sqlite3_column_database_name	tsrc/vdbeapi.c	/^const char *sqlite3_column_database_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	sqlite3.c	109161;"	d	file:
sqlite3_column_database_name16	sqlite3.c	109401;"	d	file:
sqlite3_column_database_name16	sqlite3.c	109432;"	d	file:
sqlite3_column_database_name16	sqlite3ext.h	335;"	d
sqlite3_column_database_name16	src/loadext.c	31;"	d	file:
sqlite3_column_database_name16	src/loadext.c	62;"	d	file:
sqlite3_column_database_name16	src/sqlite3ext.h	335;"	d
sqlite3_column_database_name16	src/vdbeapi.c	/^const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_database_name16	tsrc/loadext.c	31;"	d	file:
sqlite3_column_database_name16	tsrc/loadext.c	62;"	d	file:
sqlite3_column_database_name16	tsrc/sqlite3ext.h	335;"	d
sqlite3_column_database_name16	tsrc/vdbeapi.c	/^const void *sqlite3_column_database_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	sqlite3.c	109162;"	d	file:
sqlite3_column_decltype	sqlite3.c	109444;"	d	file:
sqlite3_column_decltype	sqlite3ext.h	336;"	d
sqlite3_column_decltype	src/loadext.c	74;"	d	file:
sqlite3_column_decltype	src/sqlite3ext.h	336;"	d
sqlite3_column_decltype	src/vdbeapi.c	/^const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype	tsrc/loadext.c	74;"	d	file:
sqlite3_column_decltype	tsrc/sqlite3ext.h	336;"	d
sqlite3_column_decltype	tsrc/vdbeapi.c	/^const char *sqlite3_column_decltype(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	sqlite3.c	109163;"	d	file:
sqlite3_column_decltype16	sqlite3.c	109415;"	d	file:
sqlite3_column_decltype16	sqlite3.c	109443;"	d	file:
sqlite3_column_decltype16	sqlite3ext.h	337;"	d
sqlite3_column_decltype16	src/loadext.c	45;"	d	file:
sqlite3_column_decltype16	src/loadext.c	73;"	d	file:
sqlite3_column_decltype16	src/sqlite3ext.h	337;"	d
sqlite3_column_decltype16	src/vdbeapi.c	/^const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_decltype16	tsrc/loadext.c	45;"	d	file:
sqlite3_column_decltype16	tsrc/loadext.c	73;"	d	file:
sqlite3_column_decltype16	tsrc/sqlite3ext.h	337;"	d
sqlite3_column_decltype16	tsrc/vdbeapi.c	/^const void *sqlite3_column_decltype16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_double	sqlite3.c	/^SQLITE_API double SQLITE_STDCALL sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	sqlite3.c	109164;"	d	file:
sqlite3_column_double	sqlite3ext.h	338;"	d
sqlite3_column_double	src/sqlite3ext.h	338;"	d
sqlite3_column_double	src/vdbeapi.c	/^double sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_double	tsrc/sqlite3ext.h	338;"	d
sqlite3_column_double	tsrc/vdbeapi.c	/^double sqlite3_column_double(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	sqlite3.c	109165;"	d	file:
sqlite3_column_int	sqlite3ext.h	339;"	d
sqlite3_column_int	src/sqlite3ext.h	339;"	d
sqlite3_column_int	src/vdbeapi.c	/^int sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int	tsrc/sqlite3ext.h	339;"	d
sqlite3_column_int	tsrc/vdbeapi.c	/^int sqlite3_column_int(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	sqlite3.c	109166;"	d	file:
sqlite3_column_int64	sqlite3ext.h	340;"	d
sqlite3_column_int64	src/sqlite3ext.h	340;"	d
sqlite3_column_int64	src/vdbeapi.c	/^sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_int64	tsrc/sqlite3ext.h	340;"	d
sqlite3_column_int64	tsrc/vdbeapi.c	/^sqlite_int64 sqlite3_column_int64(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_name	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	sqlite3.c	109167;"	d	file:
sqlite3_column_name	sqlite3ext.h	341;"	d
sqlite3_column_name	src/sqlite3ext.h	341;"	d
sqlite3_column_name	src/vdbeapi.c	/^const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name	tsrc/sqlite3ext.h	341;"	d
sqlite3_column_name	tsrc/vdbeapi.c	/^const char *sqlite3_column_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	sqlite3.c	109168;"	d	file:
sqlite3_column_name16	sqlite3.c	109416;"	d	file:
sqlite3_column_name16	sqlite3ext.h	342;"	d
sqlite3_column_name16	src/loadext.c	46;"	d	file:
sqlite3_column_name16	src/sqlite3ext.h	342;"	d
sqlite3_column_name16	src/vdbeapi.c	/^const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_name16	tsrc/loadext.c	46;"	d	file:
sqlite3_column_name16	tsrc/sqlite3ext.h	342;"	d
sqlite3_column_name16	tsrc/vdbeapi.c	/^const void *sqlite3_column_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	sqlite3.c	109169;"	d	file:
sqlite3_column_origin_name	sqlite3.c	109404;"	d	file:
sqlite3_column_origin_name	sqlite3ext.h	343;"	d
sqlite3_column_origin_name	src/loadext.c	34;"	d	file:
sqlite3_column_origin_name	src/sqlite3ext.h	343;"	d
sqlite3_column_origin_name	src/vdbeapi.c	/^const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name	tsrc/loadext.c	34;"	d	file:
sqlite3_column_origin_name	tsrc/sqlite3ext.h	343;"	d
sqlite3_column_origin_name	tsrc/vdbeapi.c	/^const char *sqlite3_column_origin_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	sqlite3.c	109170;"	d	file:
sqlite3_column_origin_name16	sqlite3.c	109405;"	d	file:
sqlite3_column_origin_name16	sqlite3.c	109434;"	d	file:
sqlite3_column_origin_name16	sqlite3ext.h	344;"	d
sqlite3_column_origin_name16	src/loadext.c	35;"	d	file:
sqlite3_column_origin_name16	src/loadext.c	64;"	d	file:
sqlite3_column_origin_name16	src/sqlite3ext.h	344;"	d
sqlite3_column_origin_name16	src/vdbeapi.c	/^const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_origin_name16	tsrc/loadext.c	35;"	d	file:
sqlite3_column_origin_name16	tsrc/loadext.c	64;"	d	file:
sqlite3_column_origin_name16	tsrc/sqlite3ext.h	344;"	d
sqlite3_column_origin_name16	tsrc/vdbeapi.c	/^const void *sqlite3_column_origin_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	sqlite3.c	109171;"	d	file:
sqlite3_column_table_name	sqlite3.c	109402;"	d	file:
sqlite3_column_table_name	sqlite3ext.h	345;"	d
sqlite3_column_table_name	src/loadext.c	32;"	d	file:
sqlite3_column_table_name	src/sqlite3ext.h	345;"	d
sqlite3_column_table_name	src/vdbeapi.c	/^const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name	tsrc/loadext.c	32;"	d	file:
sqlite3_column_table_name	tsrc/sqlite3ext.h	345;"	d
sqlite3_column_table_name	tsrc/vdbeapi.c	/^const char *sqlite3_column_table_name(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	sqlite3.c	109172;"	d	file:
sqlite3_column_table_name16	sqlite3.c	109403;"	d	file:
sqlite3_column_table_name16	sqlite3.c	109433;"	d	file:
sqlite3_column_table_name16	sqlite3ext.h	346;"	d
sqlite3_column_table_name16	src/loadext.c	33;"	d	file:
sqlite3_column_table_name16	src/loadext.c	63;"	d	file:
sqlite3_column_table_name16	src/sqlite3ext.h	346;"	d
sqlite3_column_table_name16	src/vdbeapi.c	/^const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_table_name16	tsrc/loadext.c	33;"	d	file:
sqlite3_column_table_name16	tsrc/loadext.c	63;"	d	file:
sqlite3_column_table_name16	tsrc/sqlite3ext.h	346;"	d
sqlite3_column_table_name16	tsrc/vdbeapi.c	/^const void *sqlite3_column_table_name16(sqlite3_stmt *pStmt, int N){$/;"	f
sqlite3_column_text	sqlite3.c	/^SQLITE_API const unsigned char *SQLITE_STDCALL sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	sqlite3.c	109173;"	d	file:
sqlite3_column_text	sqlite3ext.h	347;"	d
sqlite3_column_text	src/sqlite3ext.h	347;"	d
sqlite3_column_text	src/vdbeapi.c	/^const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text	tsrc/sqlite3ext.h	347;"	d
sqlite3_column_text	tsrc/vdbeapi.c	/^const unsigned char *sqlite3_column_text(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	sqlite3.c	109174;"	d	file:
sqlite3_column_text16	sqlite3.c	109417;"	d	file:
sqlite3_column_text16	sqlite3ext.h	348;"	d
sqlite3_column_text16	src/loadext.c	47;"	d	file:
sqlite3_column_text16	src/sqlite3ext.h	348;"	d
sqlite3_column_text16	src/vdbeapi.c	/^const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_text16	tsrc/loadext.c	47;"	d	file:
sqlite3_column_text16	tsrc/sqlite3ext.h	348;"	d
sqlite3_column_text16	tsrc/vdbeapi.c	/^const void *sqlite3_column_text16(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	sqlite3.c	109175;"	d	file:
sqlite3_column_type	sqlite3ext.h	349;"	d
sqlite3_column_type	src/sqlite3ext.h	349;"	d
sqlite3_column_type	src/vdbeapi.c	/^int sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_type	tsrc/sqlite3ext.h	349;"	d
sqlite3_column_type	tsrc/vdbeapi.c	/^int sqlite3_column_type(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	sqlite3.c	/^SQLITE_API sqlite3_value *SQLITE_STDCALL sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	sqlite3.c	109176;"	d	file:
sqlite3_column_value	sqlite3ext.h	350;"	d
sqlite3_column_value	src/sqlite3ext.h	350;"	d
sqlite3_column_value	src/vdbeapi.c	/^sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_column_value	tsrc/sqlite3ext.h	350;"	d
sqlite3_column_value	tsrc/vdbeapi.c	/^sqlite3_value *sqlite3_column_value(sqlite3_stmt *pStmt, int i){$/;"	f
sqlite3_commit_hook	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	sqlite3.c	109177;"	d	file:
sqlite3_commit_hook	sqlite3ext.h	351;"	d
sqlite3_commit_hook	src/main.c	/^void *sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	src/sqlite3ext.h	351;"	d
sqlite3_commit_hook	tsrc/main.c	/^void *sqlite3_commit_hook($/;"	f
sqlite3_commit_hook	tsrc/sqlite3ext.h	351;"	d
sqlite3_compileoption_get	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	sqlite3.c	109306;"	d	file:
sqlite3_compileoption_get	sqlite3ext.h	480;"	d
sqlite3_compileoption_get	src/ctime.c	/^const char *sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	src/sqlite3ext.h	480;"	d
sqlite3_compileoption_get	tsrc/ctime.c	/^const char *sqlite3_compileoption_get(int N){$/;"	f
sqlite3_compileoption_get	tsrc/sqlite3ext.h	480;"	d
sqlite3_compileoption_used	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	sqlite3.c	109307;"	d	file:
sqlite3_compileoption_used	sqlite3ext.h	481;"	d
sqlite3_compileoption_used	src/ctime.c	/^int sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	src/sqlite3ext.h	481;"	d
sqlite3_compileoption_used	tsrc/ctime.c	/^int sqlite3_compileoption_used(const char *zOptName){$/;"	f
sqlite3_compileoption_used	tsrc/sqlite3ext.h	481;"	d
sqlite3_complete	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	sqlite3.c	109178;"	d	file:
sqlite3_complete	sqlite3.c	109438;"	d	file:
sqlite3_complete	sqlite3ext.h	352;"	d
sqlite3_complete	src/complete.c	/^int sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	src/loadext.c	68;"	d	file:
sqlite3_complete	src/sqlite3ext.h	352;"	d
sqlite3_complete	tsrc/complete.c	/^int sqlite3_complete(const char *zSql){$/;"	f
sqlite3_complete	tsrc/loadext.c	68;"	d	file:
sqlite3_complete	tsrc/sqlite3ext.h	352;"	d
sqlite3_complete16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	sqlite3.c	109179;"	d	file:
sqlite3_complete16	sqlite3.c	109418;"	d	file:
sqlite3_complete16	sqlite3.c	109439;"	d	file:
sqlite3_complete16	sqlite3ext.h	353;"	d
sqlite3_complete16	src/complete.c	/^int sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	src/loadext.c	48;"	d	file:
sqlite3_complete16	src/loadext.c	69;"	d	file:
sqlite3_complete16	src/sqlite3ext.h	353;"	d
sqlite3_complete16	tsrc/complete.c	/^int sqlite3_complete16(const void *zSql){$/;"	f
sqlite3_complete16	tsrc/loadext.c	48;"	d	file:
sqlite3_complete16	tsrc/loadext.c	69;"	d	file:
sqlite3_complete16	tsrc/sqlite3ext.h	353;"	d
sqlite3_config	sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_config(int op, ...){$/;"	f
sqlite3_config	src/main.c	/^int sqlite3_config(int op, ...){$/;"	f
sqlite3_config	tsrc/main.c	/^int sqlite3_config(int op, ...){$/;"	f
sqlite3_context	sqlite3.c	/^struct sqlite3_context {$/;"	s	file:
sqlite3_context	sqlite3.c	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context	file:
sqlite3_context	sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context	src/vdbeInt.h	/^struct sqlite3_context {$/;"	s
sqlite3_context	tsrc/sqlite3.h	/^typedef struct sqlite3_context sqlite3_context;$/;"	t	typeref:struct:sqlite3_context
sqlite3_context	tsrc/vdbeInt.h	/^struct sqlite3_context {$/;"	s
sqlite3_context_db_handle	sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	sqlite3.c	109295;"	d	file:
sqlite3_context_db_handle	sqlite3ext.h	469;"	d
sqlite3_context_db_handle	src/sqlite3ext.h	469;"	d
sqlite3_context_db_handle	src/vdbeapi.c	/^sqlite3 *sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_context_db_handle	tsrc/sqlite3ext.h	469;"	d
sqlite3_context_db_handle	tsrc/vdbeapi.c	/^sqlite3 *sqlite3_context_db_handle(sqlite3_context *p){$/;"	f
sqlite3_create_collation	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation($/;"	f
sqlite3_create_collation	sqlite3.c	109180;"	d	file:
sqlite3_create_collation	sqlite3ext.h	354;"	d
sqlite3_create_collation	src/main.c	/^int sqlite3_create_collation($/;"	f
sqlite3_create_collation	src/sqlite3ext.h	354;"	d
sqlite3_create_collation	tsrc/main.c	/^int sqlite3_create_collation($/;"	f
sqlite3_create_collation	tsrc/sqlite3ext.h	354;"	d
sqlite3_create_collation16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	sqlite3.c	109181;"	d	file:
sqlite3_create_collation16	sqlite3.c	109419;"	d	file:
sqlite3_create_collation16	sqlite3ext.h	355;"	d
sqlite3_create_collation16	src/loadext.c	49;"	d	file:
sqlite3_create_collation16	src/main.c	/^int sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	src/sqlite3ext.h	355;"	d
sqlite3_create_collation16	tsrc/loadext.c	49;"	d	file:
sqlite3_create_collation16	tsrc/main.c	/^int sqlite3_create_collation16($/;"	f
sqlite3_create_collation16	tsrc/sqlite3ext.h	355;"	d
sqlite3_create_collation_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	sqlite3.c	109272;"	d	file:
sqlite3_create_collation_v2	sqlite3ext.h	446;"	d
sqlite3_create_collation_v2	src/main.c	/^int sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	src/sqlite3ext.h	446;"	d
sqlite3_create_collation_v2	tsrc/main.c	/^int sqlite3_create_collation_v2($/;"	f
sqlite3_create_collation_v2	tsrc/sqlite3ext.h	446;"	d
sqlite3_create_function	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function($/;"	f
sqlite3_create_function	sqlite3.c	109182;"	d	file:
sqlite3_create_function	sqlite3ext.h	356;"	d
sqlite3_create_function	src/main.c	/^int sqlite3_create_function($/;"	f
sqlite3_create_function	src/sqlite3ext.h	356;"	d
sqlite3_create_function	tsrc/main.c	/^int sqlite3_create_function($/;"	f
sqlite3_create_function	tsrc/sqlite3ext.h	356;"	d
sqlite3_create_function16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function16($/;"	f
sqlite3_create_function16	sqlite3.c	109183;"	d	file:
sqlite3_create_function16	sqlite3.c	109420;"	d	file:
sqlite3_create_function16	sqlite3ext.h	357;"	d
sqlite3_create_function16	src/loadext.c	50;"	d	file:
sqlite3_create_function16	src/main.c	/^int sqlite3_create_function16($/;"	f
sqlite3_create_function16	src/sqlite3ext.h	357;"	d
sqlite3_create_function16	tsrc/loadext.c	50;"	d	file:
sqlite3_create_function16	tsrc/main.c	/^int sqlite3_create_function16($/;"	f
sqlite3_create_function16	tsrc/sqlite3ext.h	357;"	d
sqlite3_create_function_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	sqlite3.c	109308;"	d	file:
sqlite3_create_function_v2	sqlite3ext.h	482;"	d
sqlite3_create_function_v2	src/main.c	/^int sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	src/sqlite3ext.h	482;"	d
sqlite3_create_function_v2	tsrc/main.c	/^int sqlite3_create_function_v2($/;"	f
sqlite3_create_function_v2	tsrc/sqlite3ext.h	482;"	d
sqlite3_create_module	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_module($/;"	f
sqlite3_create_module	sqlite3.c	109184;"	d	file:
sqlite3_create_module	sqlite3.c	109452;"	d	file:
sqlite3_create_module	sqlite3ext.h	358;"	d
sqlite3_create_module	src/loadext.c	82;"	d	file:
sqlite3_create_module	src/sqlite3ext.h	358;"	d
sqlite3_create_module	src/vtab.c	/^int sqlite3_create_module($/;"	f
sqlite3_create_module	tsrc/loadext.c	82;"	d	file:
sqlite3_create_module	tsrc/sqlite3ext.h	358;"	d
sqlite3_create_module	tsrc/vtab.c	/^int sqlite3_create_module($/;"	f
sqlite3_create_module_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	sqlite3.c	109185;"	d	file:
sqlite3_create_module_v2	sqlite3.c	109453;"	d	file:
sqlite3_create_module_v2	sqlite3ext.h	359;"	d
sqlite3_create_module_v2	src/loadext.c	83;"	d	file:
sqlite3_create_module_v2	src/sqlite3ext.h	359;"	d
sqlite3_create_module_v2	src/vtab.c	/^int sqlite3_create_module_v2($/;"	f
sqlite3_create_module_v2	tsrc/loadext.c	83;"	d	file:
sqlite3_create_module_v2	tsrc/sqlite3ext.h	359;"	d
sqlite3_create_module_v2	tsrc/vtab.c	/^int sqlite3_create_module_v2($/;"	f
sqlite3_current_time	sqlite3.c	/^SQLITE_API int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	src/os_unix.c	/^int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	src/os_win.c	/^int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	tsrc/os_unix.c	/^int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_current_time	tsrc/os_win.c	/^int sqlite3_current_time = 0;  \/* Fake system time in seconds since 1970. *\/$/;"	v
sqlite3_data_count	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	sqlite3.c	109186;"	d	file:
sqlite3_data_count	sqlite3ext.h	360;"	d
sqlite3_data_count	src/sqlite3ext.h	360;"	d
sqlite3_data_count	src/vdbeapi.c	/^int sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_count	tsrc/sqlite3ext.h	360;"	d
sqlite3_data_count	tsrc/vdbeapi.c	/^int sqlite3_data_count(sqlite3_stmt *pStmt){$/;"	f
sqlite3_data_directory	sqlite3.c	/^SQLITE_API char *sqlite3_data_directory = 0;$/;"	v
sqlite3_data_directory	sqlite3.c	/^SQLITE_API char *sqlite3_data_directory;$/;"	v
sqlite3_data_directory	sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_data_directory	src/main.c	/^char *sqlite3_data_directory = 0;$/;"	v
sqlite3_data_directory	tsrc/main.c	/^char *sqlite3_data_directory = 0;$/;"	v
sqlite3_data_directory	tsrc/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_data_directory;$/;"	v
sqlite3_db_cacheflush	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_cacheflush(sqlite3 *db){$/;"	f
sqlite3_db_cacheflush	sqlite3.c	109363;"	d	file:
sqlite3_db_cacheflush	sqlite3ext.h	537;"	d
sqlite3_db_cacheflush	src/main.c	/^int sqlite3_db_cacheflush(sqlite3 *db){$/;"	f
sqlite3_db_cacheflush	src/sqlite3ext.h	537;"	d
sqlite3_db_cacheflush	tsrc/main.c	/^int sqlite3_db_cacheflush(sqlite3 *db){$/;"	f
sqlite3_db_cacheflush	tsrc/sqlite3ext.h	537;"	d
sqlite3_db_config	sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	sqlite3.c	109309;"	d	file:
sqlite3_db_config	sqlite3ext.h	483;"	d
sqlite3_db_config	src/main.c	/^int sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	src/sqlite3ext.h	483;"	d
sqlite3_db_config	tsrc/main.c	/^int sqlite3_db_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_db_config	tsrc/sqlite3ext.h	483;"	d
sqlite3_db_filename	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_db_filename(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_filename	sqlite3.c	109327;"	d	file:
sqlite3_db_filename	sqlite3ext.h	501;"	d
sqlite3_db_filename	src/main.c	/^const char *sqlite3_db_filename(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_filename	src/sqlite3ext.h	501;"	d
sqlite3_db_filename	tsrc/main.c	/^const char *sqlite3_db_filename(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_filename	tsrc/sqlite3ext.h	501;"	d
sqlite3_db_handle	sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	sqlite3.c	109187;"	d	file:
sqlite3_db_handle	sqlite3ext.h	361;"	d
sqlite3_db_handle	src/sqlite3ext.h	361;"	d
sqlite3_db_handle	src/vdbeapi.c	/^sqlite3 *sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_handle	tsrc/sqlite3ext.h	361;"	d
sqlite3_db_handle	tsrc/vdbeapi.c	/^sqlite3 *sqlite3_db_handle(sqlite3_stmt *pStmt){$/;"	f
sqlite3_db_mutex	sqlite3.c	/^SQLITE_API sqlite3_mutex *SQLITE_STDCALL sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	sqlite3.c	109310;"	d	file:
sqlite3_db_mutex	sqlite3ext.h	484;"	d
sqlite3_db_mutex	src/main.c	/^sqlite3_mutex *sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	src/sqlite3ext.h	484;"	d
sqlite3_db_mutex	tsrc/main.c	/^sqlite3_mutex *sqlite3_db_mutex(sqlite3 *db){$/;"	f
sqlite3_db_mutex	tsrc/sqlite3ext.h	484;"	d
sqlite3_db_readonly	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_readonly(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_readonly	sqlite3.c	109328;"	d	file:
sqlite3_db_readonly	sqlite3ext.h	502;"	d
sqlite3_db_readonly	src/main.c	/^int sqlite3_db_readonly(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_readonly	src/sqlite3ext.h	502;"	d
sqlite3_db_readonly	tsrc/main.c	/^int sqlite3_db_readonly(sqlite3 *db, const char *zDbName){$/;"	f
sqlite3_db_readonly	tsrc/sqlite3ext.h	502;"	d
sqlite3_db_release_memory	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_release_memory(sqlite3 *db){$/;"	f
sqlite3_db_release_memory	sqlite3.c	109329;"	d	file:
sqlite3_db_release_memory	sqlite3ext.h	503;"	d
sqlite3_db_release_memory	src/main.c	/^int sqlite3_db_release_memory(sqlite3 *db){$/;"	f
sqlite3_db_release_memory	src/sqlite3ext.h	503;"	d
sqlite3_db_release_memory	tsrc/main.c	/^int sqlite3_db_release_memory(sqlite3 *db){$/;"	f
sqlite3_db_release_memory	tsrc/sqlite3ext.h	503;"	d
sqlite3_db_status	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_db_status($/;"	f
sqlite3_db_status	sqlite3.c	109311;"	d	file:
sqlite3_db_status	sqlite3ext.h	485;"	d
sqlite3_db_status	src/sqlite3ext.h	485;"	d
sqlite3_db_status	src/status.c	/^int sqlite3_db_status($/;"	f
sqlite3_db_status	tsrc/sqlite3ext.h	485;"	d
sqlite3_db_status	tsrc/status.c	/^int sqlite3_db_status($/;"	f
sqlite3_debug_mutex	sqlite3.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	sqlite3.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_debug_mutex	src/mutex_noop.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	src/mutex_noop.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_debug_mutex	tsrc/mutex_noop.c	/^typedef struct sqlite3_debug_mutex {$/;"	s	file:
sqlite3_debug_mutex	tsrc/mutex_noop.c	/^} sqlite3_debug_mutex;$/;"	t	typeref:struct:sqlite3_debug_mutex	file:
sqlite3_declare_vtab	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	sqlite3.c	109188;"	d	file:
sqlite3_declare_vtab	sqlite3.c	109454;"	d	file:
sqlite3_declare_vtab	sqlite3ext.h	362;"	d
sqlite3_declare_vtab	src/loadext.c	84;"	d	file:
sqlite3_declare_vtab	src/sqlite3ext.h	362;"	d
sqlite3_declare_vtab	src/vtab.c	/^int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_declare_vtab	tsrc/loadext.c	84;"	d	file:
sqlite3_declare_vtab	tsrc/sqlite3ext.h	362;"	d
sqlite3_declare_vtab	tsrc/vtab.c	/^int sqlite3_declare_vtab(sqlite3 *db, const char *zCreateTable){$/;"	f
sqlite3_demovfs	src/test_demovfs.c	/^sqlite3_vfs *sqlite3_demovfs(void){$/;"	f
sqlite3_destructor_type	sqlite3.c	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t	file:
sqlite3_destructor_type	sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_destructor_type	tsrc/sqlite3.h	/^typedef void (*sqlite3_destructor_type)(void*);$/;"	t
sqlite3_diskfull	sqlite3.c	/^SQLITE_API int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull	src/os.c	/^int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull	tsrc/os.c	/^int sqlite3_diskfull = 0;$/;"	v
sqlite3_diskfull_pending	sqlite3.c	/^SQLITE_API int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_diskfull_pending	src/os.c	/^int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_diskfull_pending	tsrc/os.c	/^int sqlite3_diskfull_pending = 0;$/;"	v
sqlite3_enable_load_extension	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_load_extension	src/loadext.c	/^int sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_load_extension	tsrc/loadext.c	/^int sqlite3_enable_load_extension(sqlite3 *db, int onoff){$/;"	f
sqlite3_enable_shared_cache	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	sqlite3.c	109189;"	d	file:
sqlite3_enable_shared_cache	sqlite3.c	109460;"	d	file:
sqlite3_enable_shared_cache	sqlite3ext.h	363;"	d
sqlite3_enable_shared_cache	src/btree.c	/^int sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	src/loadext.c	90;"	d	file:
sqlite3_enable_shared_cache	src/sqlite3ext.h	363;"	d
sqlite3_enable_shared_cache	tsrc/btree.c	/^int sqlite3_enable_shared_cache(int enable){$/;"	f
sqlite3_enable_shared_cache	tsrc/loadext.c	90;"	d	file:
sqlite3_enable_shared_cache	tsrc/sqlite3ext.h	363;"	d
sqlite3_errcode	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	sqlite3.c	109190;"	d	file:
sqlite3_errcode	sqlite3ext.h	364;"	d
sqlite3_errcode	src/main.c	/^int sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	src/sqlite3ext.h	364;"	d
sqlite3_errcode	tsrc/main.c	/^int sqlite3_errcode(sqlite3 *db){$/;"	f
sqlite3_errcode	tsrc/sqlite3ext.h	364;"	d
sqlite3_errmsg	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	sqlite3.c	109191;"	d	file:
sqlite3_errmsg	sqlite3ext.h	365;"	d
sqlite3_errmsg	src/main.c	/^const char *sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	src/sqlite3ext.h	365;"	d
sqlite3_errmsg	tsrc/main.c	/^const char *sqlite3_errmsg(sqlite3 *db){$/;"	f
sqlite3_errmsg	tsrc/sqlite3ext.h	365;"	d
sqlite3_errmsg16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	sqlite3.c	109192;"	d	file:
sqlite3_errmsg16	sqlite3.c	109421;"	d	file:
sqlite3_errmsg16	sqlite3ext.h	366;"	d
sqlite3_errmsg16	src/loadext.c	51;"	d	file:
sqlite3_errmsg16	src/main.c	/^const void *sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	src/sqlite3ext.h	366;"	d
sqlite3_errmsg16	tsrc/loadext.c	51;"	d	file:
sqlite3_errmsg16	tsrc/main.c	/^const void *sqlite3_errmsg16(sqlite3 *db){$/;"	f
sqlite3_errmsg16	tsrc/sqlite3ext.h	366;"	d
sqlite3_errstr	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_errstr(int rc){$/;"	f
sqlite3_errstr	sqlite3.c	109330;"	d	file:
sqlite3_errstr	sqlite3ext.h	504;"	d
sqlite3_errstr	src/main.c	/^const char *sqlite3_errstr(int rc){$/;"	f
sqlite3_errstr	src/sqlite3ext.h	504;"	d
sqlite3_errstr	tsrc/main.c	/^const char *sqlite3_errstr(int rc){$/;"	f
sqlite3_errstr	tsrc/sqlite3ext.h	504;"	d
sqlite3_exec	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_exec($/;"	f
sqlite3_exec	sqlite3.c	109193;"	d	file:
sqlite3_exec	sqlite3ext.h	367;"	d
sqlite3_exec	src/legacy.c	/^int sqlite3_exec($/;"	f
sqlite3_exec	src/sqlite3ext.h	367;"	d
sqlite3_exec	tsrc/legacy.c	/^int sqlite3_exec($/;"	f
sqlite3_exec	tsrc/sqlite3ext.h	367;"	d
sqlite3_expanded_sql	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_expanded_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expanded_sql	sqlite3.c	109368;"	d	file:
sqlite3_expanded_sql	sqlite3ext.h	542;"	d
sqlite3_expanded_sql	src/sqlite3ext.h	542;"	d
sqlite3_expanded_sql	src/vdbeapi.c	/^char *sqlite3_expanded_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expanded_sql	tsrc/sqlite3ext.h	542;"	d
sqlite3_expanded_sql	tsrc/vdbeapi.c	/^char *sqlite3_expanded_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	sqlite3.c	109195;"	d	file:
sqlite3_expired	sqlite3ext.h	369;"	d
sqlite3_expired	src/sqlite3ext.h	369;"	d
sqlite3_expired	src/vdbeapi.c	/^int sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_expired	tsrc/sqlite3ext.h	369;"	d
sqlite3_expired	tsrc/vdbeapi.c	/^int sqlite3_expired(sqlite3_stmt *pStmt){$/;"	f
sqlite3_extended_errcode	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	sqlite3.c	109312;"	d	file:
sqlite3_extended_errcode	sqlite3ext.h	486;"	d
sqlite3_extended_errcode	src/main.c	/^int sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	src/sqlite3ext.h	486;"	d
sqlite3_extended_errcode	tsrc/main.c	/^int sqlite3_extended_errcode(sqlite3 *db){$/;"	f
sqlite3_extended_errcode	tsrc/sqlite3ext.h	486;"	d
sqlite3_extended_result_codes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	sqlite3.c	109296;"	d	file:
sqlite3_extended_result_codes	sqlite3ext.h	470;"	d
sqlite3_extended_result_codes	src/main.c	/^int sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	src/sqlite3ext.h	470;"	d
sqlite3_extended_result_codes	tsrc/main.c	/^int sqlite3_extended_result_codes(sqlite3 *db, int onoff){$/;"	f
sqlite3_extended_result_codes	tsrc/sqlite3ext.h	470;"	d
sqlite3_file	sqlite3.c	/^struct sqlite3_file {$/;"	s	file:
sqlite3_file	sqlite3.c	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file	file:
sqlite3_file	sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file	tsrc/sqlite3.h	/^struct sqlite3_file {$/;"	s
sqlite3_file	tsrc/sqlite3.h	/^typedef struct sqlite3_file sqlite3_file;$/;"	t	typeref:struct:sqlite3_file
sqlite3_file_control	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	sqlite3.c	109273;"	d	file:
sqlite3_file_control	sqlite3ext.h	447;"	d
sqlite3_file_control	src/main.c	/^int sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	src/sqlite3ext.h	447;"	d
sqlite3_file_control	tsrc/main.c	/^int sqlite3_file_control(sqlite3 *db, const char *zDbName, int op, void *pArg){$/;"	f
sqlite3_file_control	tsrc/sqlite3ext.h	447;"	d
sqlite3_finalize	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	sqlite3.c	109197;"	d	file:
sqlite3_finalize	sqlite3ext.h	371;"	d
sqlite3_finalize	src/sqlite3ext.h	371;"	d
sqlite3_finalize	src/vdbeapi.c	/^int sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_finalize	tsrc/sqlite3ext.h	371;"	d
sqlite3_finalize	tsrc/vdbeapi.c	/^int sqlite3_finalize(sqlite3_stmt *pStmt){$/;"	f
sqlite3_found_count	sqlite3.c	/^SQLITE_API int sqlite3_found_count = 0;$/;"	v
sqlite3_found_count	src/vdbe.c	/^int sqlite3_found_count = 0;$/;"	v
sqlite3_found_count	tsrc/vdbe.c	/^int sqlite3_found_count = 0;$/;"	v
sqlite3_free	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_free(void *p){$/;"	f
sqlite3_free	sqlite3.c	109198;"	d	file:
sqlite3_free	sqlite3ext.h	372;"	d
sqlite3_free	src/malloc.c	/^void sqlite3_free(void *p){$/;"	f
sqlite3_free	src/sqlite3ext.h	372;"	d
sqlite3_free	tsrc/malloc.c	/^void sqlite3_free(void *p){$/;"	f
sqlite3_free	tsrc/sqlite3ext.h	372;"	d
sqlite3_free_table	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_free_table($/;"	f
sqlite3_free_table	sqlite3.c	109199;"	d	file:
sqlite3_free_table	sqlite3.c	109469;"	d	file:
sqlite3_free_table	sqlite3ext.h	373;"	d
sqlite3_free_table	src/loadext.c	99;"	d	file:
sqlite3_free_table	src/sqlite3ext.h	373;"	d
sqlite3_free_table	src/table.c	/^void sqlite3_free_table($/;"	f
sqlite3_free_table	tsrc/loadext.c	99;"	d	file:
sqlite3_free_table	tsrc/sqlite3ext.h	373;"	d
sqlite3_free_table	tsrc/table.c	/^void sqlite3_free_table($/;"	f
sqlite3_fts3_enable_parentheses	ext/fts3/fts3_expr.c	/^int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	ext/fts3/fts3_expr.c	70;"	d	file:
sqlite3_fts3_enable_parentheses	ext/fts3/fts3_expr.c	72;"	d	file:
sqlite3_fts3_enable_parentheses	sqlite3.c	/^SQLITE_API int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	sqlite3.c	148303;"	d	file:
sqlite3_fts3_enable_parentheses	sqlite3.c	148305;"	d	file:
sqlite3_fts3_enable_parentheses	tsrc/fts3_expr.c	/^int sqlite3_fts3_enable_parentheses = 0;$/;"	v
sqlite3_fts3_enable_parentheses	tsrc/fts3_expr.c	70;"	d	file:
sqlite3_fts3_enable_parentheses	tsrc/fts3_expr.c	72;"	d	file:
sqlite3_fts5_may_be_corrupt	ext/fts5/fts5_main.c	/^int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fts5_may_be_corrupt	fts5.c	/^int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fts5_may_be_corrupt	sqlite3.c	/^SQLITE_API int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fts5_may_be_corrupt	tsrc/fts5.c	/^int sqlite3_fts5_may_be_corrupt = 1;$/;"	v
sqlite3_fullsync_count	sqlite3.c	/^SQLITE_API int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_fullsync_count	src/os_unix.c	/^int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_fullsync_count	src/os_win.c	/^int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_fullsync_count	tsrc/os_unix.c	/^int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_fullsync_count	tsrc/os_win.c	/^int sqlite3_fullsync_count = 0;$/;"	v
sqlite3_get_autocommit	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	sqlite3.c	109200;"	d	file:
sqlite3_get_autocommit	sqlite3ext.h	374;"	d
sqlite3_get_autocommit	src/main.c	/^int sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	src/sqlite3ext.h	374;"	d
sqlite3_get_autocommit	tsrc/main.c	/^int sqlite3_get_autocommit(sqlite3 *db){$/;"	f
sqlite3_get_autocommit	tsrc/sqlite3ext.h	374;"	d
sqlite3_get_auxdata	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	sqlite3.c	109201;"	d	file:
sqlite3_get_auxdata	sqlite3ext.h	375;"	d
sqlite3_get_auxdata	src/sqlite3ext.h	375;"	d
sqlite3_get_auxdata	src/vdbeapi.c	/^void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_auxdata	tsrc/sqlite3ext.h	375;"	d
sqlite3_get_auxdata	tsrc/vdbeapi.c	/^void *sqlite3_get_auxdata(sqlite3_context *pCtx, int iArg){$/;"	f
sqlite3_get_table	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_get_table($/;"	f
sqlite3_get_table	sqlite3.c	109202;"	d	file:
sqlite3_get_table	sqlite3.c	109470;"	d	file:
sqlite3_get_table	sqlite3ext.h	376;"	d
sqlite3_get_table	src/loadext.c	100;"	d	file:
sqlite3_get_table	src/sqlite3ext.h	376;"	d
sqlite3_get_table	src/table.c	/^int sqlite3_get_table($/;"	f
sqlite3_get_table	tsrc/loadext.c	100;"	d	file:
sqlite3_get_table	tsrc/sqlite3ext.h	376;"	d
sqlite3_get_table	tsrc/table.c	/^int sqlite3_get_table($/;"	f
sqlite3_get_table_cb	sqlite3.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_get_table_cb	src/table.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_get_table_cb	tsrc/table.c	/^static int sqlite3_get_table_cb(void *pArg, int nCol, char **argv, char **colv){$/;"	f	file:
sqlite3_global_recover	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	sqlite3.c	109204;"	d	file:
sqlite3_global_recover	sqlite3ext.h	378;"	d
sqlite3_global_recover	src/main.c	/^int sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	src/sqlite3ext.h	378;"	d
sqlite3_global_recover	tsrc/main.c	/^int sqlite3_global_recover(void){$/;"	f
sqlite3_global_recover	tsrc/sqlite3ext.h	378;"	d
sqlite3_hostid_num	sqlite3.c	/^SQLITE_API int sqlite3_hostid_num = 0;$/;"	v
sqlite3_hostid_num	src/os_unix.c	/^int sqlite3_hostid_num = 0;$/;"	v
sqlite3_hostid_num	tsrc/os_unix.c	/^int sqlite3_hostid_num = 0;$/;"	v
sqlite3_index_constraint	sqlite3.c	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint	sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint	tsrc/sqlite3.h	/^  struct sqlite3_index_constraint {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	sqlite3.c	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_constraint_usage	sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_constraint_usage	tsrc/sqlite3.h	/^  struct sqlite3_index_constraint_usage {$/;"	s	struct:sqlite3_index_info
sqlite3_index_info	sqlite3.c	/^struct sqlite3_index_info {$/;"	s	file:
sqlite3_index_info	sqlite3.c	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info	file:
sqlite3_index_info	sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_info	tsrc/sqlite3.h	/^struct sqlite3_index_info {$/;"	s
sqlite3_index_info	tsrc/sqlite3.h	/^typedef struct sqlite3_index_info sqlite3_index_info;$/;"	t	typeref:struct:sqlite3_index_info
sqlite3_index_orderby	sqlite3.c	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info	file:
sqlite3_index_orderby	sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_index_orderby	tsrc/sqlite3.h	/^  struct sqlite3_index_orderby {$/;"	s	struct:sqlite3_index_info
sqlite3_init_sqllog	src/test_sqllog.c	/^void sqlite3_init_sqllog(void){$/;"	f
sqlite3_initialize	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_initialize(void){$/;"	f
sqlite3_initialize	src/main.c	/^int sqlite3_initialize(void){$/;"	f
sqlite3_initialize	tsrc/main.c	/^int sqlite3_initialize(void){$/;"	f
sqlite3_int64	sqlite3.c	/^typedef sqlite_int64 sqlite3_int64;$/;"	t	file:
sqlite3_int64	sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_int64	test/speedtest1.c	55;"	d	file:
sqlite3_int64	tsrc/sqlite3.h	/^typedef sqlite_int64 sqlite3_int64;$/;"	t
sqlite3_intarray	src/test_intarray.c	/^struct sqlite3_intarray {$/;"	s	file:
sqlite3_intarray	src/test_intarray.h	/^typedef struct sqlite3_intarray sqlite3_intarray;$/;"	t	typeref:struct:sqlite3_intarray
sqlite3_intarray_bind	src/test_intarray.c	/^SQLITE_API int sqlite3_intarray_bind($/;"	f
sqlite3_intarray_create	src/test_intarray.c	/^SQLITE_API int sqlite3_intarray_create($/;"	f
sqlite3_interrupt	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	sqlite3.c	109206;"	d	file:
sqlite3_interrupt	sqlite3ext.h	380;"	d
sqlite3_interrupt	src/main.c	/^void sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	src/sqlite3ext.h	380;"	d
sqlite3_interrupt	tsrc/main.c	/^void sqlite3_interrupt(sqlite3 *db){$/;"	f
sqlite3_interrupt	tsrc/sqlite3ext.h	380;"	d
sqlite3_interrupt_count	sqlite3.c	/^SQLITE_API int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_interrupt_count	src/vdbe.c	/^int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_interrupt_count	tsrc/vdbe.c	/^int sqlite3_interrupt_count = 0;$/;"	v
sqlite3_io_error_benign	sqlite3.c	/^SQLITE_API int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_benign	src/os.c	/^int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_benign	tsrc/os.c	/^int sqlite3_io_error_benign = 0;         \/* True if errors are benign *\/$/;"	v
sqlite3_io_error_hardhit	sqlite3.c	/^SQLITE_API int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hardhit	src/os.c	/^int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hardhit	tsrc/os.c	/^int sqlite3_io_error_hardhit = 0;        \/* Number of non-benign errors *\/$/;"	v
sqlite3_io_error_hit	sqlite3.c	/^SQLITE_API int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_hit	src/os.c	/^int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_hit	tsrc/os.c	/^int sqlite3_io_error_hit = 0;            \/* Total number of I\/O Errors *\/$/;"	v
sqlite3_io_error_pending	sqlite3.c	/^SQLITE_API int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_pending	src/os.c	/^int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_pending	tsrc/os.c	/^int sqlite3_io_error_pending = 0;        \/* Count down to first I\/O error *\/$/;"	v
sqlite3_io_error_persist	sqlite3.c	/^SQLITE_API int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_error_persist	src/os.c	/^int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_error_persist	tsrc/os.c	/^int sqlite3_io_error_persist = 0;        \/* True if I\/O errors persist *\/$/;"	v
sqlite3_io_methods	sqlite3.c	/^struct sqlite3_io_methods {$/;"	s	file:
sqlite3_io_methods	sqlite3.c	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods	file:
sqlite3_io_methods	sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_io_methods	tsrc/sqlite3.h	/^struct sqlite3_io_methods {$/;"	s
sqlite3_io_methods	tsrc/sqlite3.h	/^typedef struct sqlite3_io_methods sqlite3_io_methods;$/;"	t	typeref:struct:sqlite3_io_methods
sqlite3_last_insert_rowid	sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	sqlite3.c	109207;"	d	file:
sqlite3_last_insert_rowid	sqlite3ext.h	381;"	d
sqlite3_last_insert_rowid	src/main.c	/^sqlite_int64 sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	src/sqlite3ext.h	381;"	d
sqlite3_last_insert_rowid	tsrc/main.c	/^sqlite_int64 sqlite3_last_insert_rowid(sqlite3 *db){$/;"	f
sqlite3_last_insert_rowid	tsrc/sqlite3ext.h	381;"	d
sqlite3_libversion	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	sqlite3.c	109208;"	d	file:
sqlite3_libversion	sqlite3ext.h	382;"	d
sqlite3_libversion	src/main.c	/^const char *sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	src/sqlite3ext.h	382;"	d
sqlite3_libversion	tsrc/main.c	/^const char *sqlite3_libversion(void){ return sqlite3_version; }$/;"	f
sqlite3_libversion	tsrc/sqlite3ext.h	382;"	d
sqlite3_libversion_number	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	sqlite3.c	109209;"	d	file:
sqlite3_libversion_number	sqlite3ext.h	383;"	d
sqlite3_libversion_number	src/main.c	/^int sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	src/sqlite3ext.h	383;"	d
sqlite3_libversion_number	tsrc/main.c	/^int sqlite3_libversion_number(void){ return SQLITE_VERSION_NUMBER; }$/;"	f
sqlite3_libversion_number	tsrc/sqlite3ext.h	383;"	d
sqlite3_like_count	sqlite3.c	/^SQLITE_API int sqlite3_like_count = 0;$/;"	v
sqlite3_like_count	src/func.c	/^int sqlite3_like_count = 0;$/;"	v
sqlite3_like_count	tsrc/func.c	/^int sqlite3_like_count = 0;$/;"	v
sqlite3_limit	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	sqlite3.c	109297;"	d	file:
sqlite3_limit	sqlite3ext.h	471;"	d
sqlite3_limit	src/main.c	/^int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	src/sqlite3ext.h	471;"	d
sqlite3_limit	tsrc/main.c	/^int sqlite3_limit(sqlite3 *db, int limitId, int newLimit){$/;"	f
sqlite3_limit	tsrc/sqlite3ext.h	471;"	d
sqlite3_load_extension	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_load_extension($/;"	f
sqlite3_load_extension	sqlite3.c	109344;"	d	file:
sqlite3_load_extension	sqlite3ext.h	518;"	d
sqlite3_load_extension	src/loadext.c	/^int sqlite3_load_extension($/;"	f
sqlite3_load_extension	src/sqlite3ext.h	518;"	d
sqlite3_load_extension	tsrc/loadext.c	/^int sqlite3_load_extension($/;"	f
sqlite3_load_extension	tsrc/sqlite3ext.h	518;"	d
sqlite3_loadext_entry	sqlite3.c	/^typedef int (*sqlite3_loadext_entry)($/;"	t	file:
sqlite3_loadext_entry	sqlite3ext.h	/^typedef int (*sqlite3_loadext_entry)($/;"	t
sqlite3_loadext_entry	src/sqlite3ext.h	/^typedef int (*sqlite3_loadext_entry)($/;"	t
sqlite3_loadext_entry	tsrc/sqlite3ext.h	/^typedef int (*sqlite3_loadext_entry)($/;"	t
sqlite3_log	sqlite3.c	/^SQLITE_API void SQLITE_CDECL sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	sqlite3.c	109313;"	d	file:
sqlite3_log	sqlite3ext.h	487;"	d
sqlite3_log	src/printf.c	/^void sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	src/sqlite3ext.h	487;"	d
sqlite3_log	tsrc/printf.c	/^void sqlite3_log(int iErrCode, const char *zFormat, ...){$/;"	f
sqlite3_log	tsrc/sqlite3ext.h	487;"	d
sqlite3_malloc	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	sqlite3.c	109210;"	d	file:
sqlite3_malloc	sqlite3ext.h	384;"	d
sqlite3_malloc	src/malloc.c	/^void *sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	src/sqlite3ext.h	384;"	d
sqlite3_malloc	tsrc/malloc.c	/^void *sqlite3_malloc(int n){$/;"	f
sqlite3_malloc	tsrc/sqlite3ext.h	384;"	d
sqlite3_malloc64	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_malloc64(sqlite3_uint64 n){$/;"	f
sqlite3_malloc64	sqlite3.c	109345;"	d	file:
sqlite3_malloc64	sqlite3ext.h	519;"	d
sqlite3_malloc64	src/malloc.c	/^void *sqlite3_malloc64(sqlite3_uint64 n){$/;"	f
sqlite3_malloc64	src/sqlite3ext.h	519;"	d
sqlite3_malloc64	tsrc/malloc.c	/^void *sqlite3_malloc64(sqlite3_uint64 n){$/;"	f
sqlite3_malloc64	tsrc/sqlite3ext.h	519;"	d
sqlite3_max_blobsize	sqlite3.c	/^SQLITE_API int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_max_blobsize	src/vdbe.c	/^int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_max_blobsize	tsrc/vdbe.c	/^int sqlite3_max_blobsize = 0;$/;"	v
sqlite3_mem_methods	sqlite3.c	/^struct sqlite3_mem_methods {$/;"	s	file:
sqlite3_mem_methods	sqlite3.c	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods	file:
sqlite3_mem_methods	sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_mem_methods	tsrc/sqlite3.h	/^struct sqlite3_mem_methods {$/;"	s
sqlite3_mem_methods	tsrc/sqlite3.h	/^typedef struct sqlite3_mem_methods sqlite3_mem_methods;$/;"	t	typeref:struct:sqlite3_mem_methods
sqlite3_memdebug_title_count	src/test_malloc.c	/^static int sqlite3_memdebug_title_count = 0;$/;"	v	file:
sqlite3_memdebug_vfs_oom_test	sqlite3.c	/^SQLITE_API int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memdebug_vfs_oom_test	src/os.c	/^int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memdebug_vfs_oom_test	tsrc/os.c	/^int sqlite3_memdebug_vfs_oom_test = 1;$/;"	v
sqlite3_memory_alarm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_memory_alarm($/;"	f
sqlite3_memory_alarm	src/malloc.c	/^int sqlite3_memory_alarm($/;"	f
sqlite3_memory_alarm	tsrc/malloc.c	/^int sqlite3_memory_alarm($/;"	f
sqlite3_memory_highwater	sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	sqlite3.c	109274;"	d	file:
sqlite3_memory_highwater	sqlite3ext.h	448;"	d
sqlite3_memory_highwater	src/malloc.c	/^sqlite3_int64 sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	src/sqlite3ext.h	448;"	d
sqlite3_memory_highwater	tsrc/malloc.c	/^sqlite3_int64 sqlite3_memory_highwater(int resetFlag){$/;"	f
sqlite3_memory_highwater	tsrc/sqlite3ext.h	448;"	d
sqlite3_memory_used	sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	sqlite3.c	109275;"	d	file:
sqlite3_memory_used	sqlite3ext.h	449;"	d
sqlite3_memory_used	src/malloc.c	/^sqlite3_int64 sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	src/sqlite3ext.h	449;"	d
sqlite3_memory_used	tsrc/malloc.c	/^sqlite3_int64 sqlite3_memory_used(void){$/;"	f
sqlite3_memory_used	tsrc/sqlite3ext.h	449;"	d
sqlite3_module	sqlite3.c	/^struct sqlite3_module {$/;"	s	file:
sqlite3_module	sqlite3.c	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module	file:
sqlite3_module	sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_module	tsrc/sqlite3.h	/^struct sqlite3_module {$/;"	s
sqlite3_module	tsrc/sqlite3.h	/^typedef struct sqlite3_module sqlite3_module;$/;"	t	typeref:struct:sqlite3_module
sqlite3_mprintf	sqlite3.c	/^SQLITE_API char *SQLITE_CDECL sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	sqlite3.c	109211;"	d	file:
sqlite3_mprintf	sqlite3ext.h	385;"	d
sqlite3_mprintf	src/printf.c	/^char *sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	src/sqlite3ext.h	385;"	d
sqlite3_mprintf	tsrc/printf.c	/^char *sqlite3_mprintf(const char *zFormat, ...){$/;"	f
sqlite3_mprintf	tsrc/sqlite3ext.h	385;"	d
sqlite3_mprintf_double	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_double($/;"	f	file:
sqlite3_mprintf_hexdouble	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_hexdouble($/;"	f	file:
sqlite3_mprintf_int	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_int($/;"	f	file:
sqlite3_mprintf_int64	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_int64($/;"	f	file:
sqlite3_mprintf_long	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_long($/;"	f	file:
sqlite3_mprintf_scaled	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_scaled($/;"	f	file:
sqlite3_mprintf_str	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_str($/;"	f	file:
sqlite3_mprintf_stronly	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_mprintf_stronly($/;"	f	file:
sqlite3_msize	sqlite3.c	/^SQLITE_API sqlite3_uint64 SQLITE_STDCALL sqlite3_msize(void *p){$/;"	f
sqlite3_msize	sqlite3.c	109346;"	d	file:
sqlite3_msize	sqlite3ext.h	520;"	d
sqlite3_msize	src/malloc.c	/^sqlite3_uint64 sqlite3_msize(void *p){$/;"	f
sqlite3_msize	src/sqlite3ext.h	520;"	d
sqlite3_msize	tsrc/malloc.c	/^sqlite3_uint64 sqlite3_msize(void *p){$/;"	f
sqlite3_msize	tsrc/sqlite3ext.h	520;"	d
sqlite3_multiplex_initialize	src/test_multiplex.c	/^int sqlite3_multiplex_initialize(const char *zOrigVfsName, int makeDefault){$/;"	f
sqlite3_multiplex_shutdown	src/test_multiplex.c	/^int sqlite3_multiplex_shutdown(int eForce){$/;"	f
sqlite3_mutex	sqlite3.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	sqlite3.c	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex	file:
sqlite3_mutex	sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex	src/mutex_unix.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	src/mutex_w32.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	src/test_mutex.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	tsrc/mutex_unix.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	tsrc/mutex_w32.c	/^struct sqlite3_mutex {$/;"	s	file:
sqlite3_mutex	tsrc/sqlite3.h	/^typedef struct sqlite3_mutex sqlite3_mutex;$/;"	t	typeref:struct:sqlite3_mutex
sqlite3_mutex_alloc	sqlite3.c	/^SQLITE_API sqlite3_mutex *SQLITE_STDCALL sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	sqlite3.c	109276;"	d	file:
sqlite3_mutex_alloc	sqlite3.c	13642;"	d	file:
sqlite3_mutex_alloc	sqlite3ext.h	450;"	d
sqlite3_mutex_alloc	src/mutex.c	/^sqlite3_mutex *sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	src/mutex.h	57;"	d
sqlite3_mutex_alloc	src/sqlite3ext.h	450;"	d
sqlite3_mutex_alloc	src/test_multiplex.c	75;"	d	file:
sqlite3_mutex_alloc	src/test_quota.c	38;"	d	file:
sqlite3_mutex_alloc	tsrc/mutex.c	/^sqlite3_mutex *sqlite3_mutex_alloc(int id){$/;"	f
sqlite3_mutex_alloc	tsrc/mutex.h	57;"	d
sqlite3_mutex_alloc	tsrc/sqlite3ext.h	450;"	d
sqlite3_mutex_enter	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	sqlite3.c	109277;"	d	file:
sqlite3_mutex_enter	sqlite3.c	13644;"	d	file:
sqlite3_mutex_enter	sqlite3ext.h	451;"	d
sqlite3_mutex_enter	src/mutex.c	/^void sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	src/mutex.h	59;"	d
sqlite3_mutex_enter	src/sqlite3ext.h	451;"	d
sqlite3_mutex_enter	src/test_multiplex.c	77;"	d	file:
sqlite3_mutex_enter	src/test_quota.c	40;"	d	file:
sqlite3_mutex_enter	tsrc/mutex.c	/^void sqlite3_mutex_enter(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_enter	tsrc/mutex.h	59;"	d
sqlite3_mutex_enter	tsrc/sqlite3ext.h	451;"	d
sqlite3_mutex_free	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	sqlite3.c	109278;"	d	file:
sqlite3_mutex_free	sqlite3.c	13643;"	d	file:
sqlite3_mutex_free	sqlite3ext.h	452;"	d
sqlite3_mutex_free	src/mutex.c	/^void sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	src/mutex.h	58;"	d
sqlite3_mutex_free	src/sqlite3ext.h	452;"	d
sqlite3_mutex_free	src/test_multiplex.c	76;"	d	file:
sqlite3_mutex_free	src/test_quota.c	39;"	d	file:
sqlite3_mutex_free	tsrc/mutex.c	/^void sqlite3_mutex_free(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_free	tsrc/mutex.h	58;"	d
sqlite3_mutex_free	tsrc/sqlite3ext.h	452;"	d
sqlite3_mutex_held	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	sqlite3.c	13647;"	d	file:
sqlite3_mutex_held	src/mutex.c	/^int sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	src/mutex.h	62;"	d
sqlite3_mutex_held	src/test_multiplex.c	80;"	d	file:
sqlite3_mutex_held	src/test_quota.c	43;"	d	file:
sqlite3_mutex_held	tsrc/mutex.c	/^int sqlite3_mutex_held(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_held	tsrc/mutex.h	62;"	d
sqlite3_mutex_leave	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	sqlite3.c	109279;"	d	file:
sqlite3_mutex_leave	sqlite3.c	13646;"	d	file:
sqlite3_mutex_leave	sqlite3ext.h	453;"	d
sqlite3_mutex_leave	src/mutex.c	/^void sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	src/mutex.h	61;"	d
sqlite3_mutex_leave	src/sqlite3ext.h	453;"	d
sqlite3_mutex_leave	src/test_multiplex.c	79;"	d	file:
sqlite3_mutex_leave	src/test_quota.c	42;"	d	file:
sqlite3_mutex_leave	tsrc/mutex.c	/^void sqlite3_mutex_leave(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_leave	tsrc/mutex.h	61;"	d
sqlite3_mutex_leave	tsrc/sqlite3ext.h	453;"	d
sqlite3_mutex_methods	sqlite3.c	/^struct sqlite3_mutex_methods {$/;"	s	file:
sqlite3_mutex_methods	sqlite3.c	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods	file:
sqlite3_mutex_methods	sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_methods	tsrc/sqlite3.h	/^struct sqlite3_mutex_methods {$/;"	s
sqlite3_mutex_methods	tsrc/sqlite3.h	/^typedef struct sqlite3_mutex_methods sqlite3_mutex_methods;$/;"	t	typeref:struct:sqlite3_mutex_methods
sqlite3_mutex_notheld	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	sqlite3.c	13648;"	d	file:
sqlite3_mutex_notheld	src/mutex.c	/^int sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	src/mutex.h	63;"	d
sqlite3_mutex_notheld	src/test_multiplex.c	81;"	d	file:
sqlite3_mutex_notheld	src/test_quota.c	44;"	d	file:
sqlite3_mutex_notheld	tsrc/mutex.c	/^int sqlite3_mutex_notheld(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_notheld	tsrc/mutex.h	63;"	d
sqlite3_mutex_try	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	sqlite3.c	109280;"	d	file:
sqlite3_mutex_try	sqlite3.c	13645;"	d	file:
sqlite3_mutex_try	sqlite3ext.h	454;"	d
sqlite3_mutex_try	src/mutex.c	/^int sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	src/mutex.h	60;"	d
sqlite3_mutex_try	src/sqlite3ext.h	454;"	d
sqlite3_mutex_try	src/test_multiplex.c	78;"	d	file:
sqlite3_mutex_try	src/test_quota.c	41;"	d	file:
sqlite3_mutex_try	tsrc/mutex.c	/^int sqlite3_mutex_try(sqlite3_mutex *p){$/;"	f
sqlite3_mutex_try	tsrc/mutex.h	60;"	d
sqlite3_mutex_try	tsrc/sqlite3ext.h	454;"	d
sqlite3_next_stmt	sqlite3.c	/^SQLITE_API sqlite3_stmt *SQLITE_STDCALL sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	sqlite3.c	109298;"	d	file:
sqlite3_next_stmt	sqlite3ext.h	472;"	d
sqlite3_next_stmt	src/sqlite3ext.h	472;"	d
sqlite3_next_stmt	src/vdbeapi.c	/^sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_next_stmt	tsrc/sqlite3ext.h	472;"	d
sqlite3_next_stmt	tsrc/vdbeapi.c	/^sqlite3_stmt *sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt){$/;"	f
sqlite3_open	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open($/;"	f
sqlite3_open	sqlite3.c	109212;"	d	file:
sqlite3_open	sqlite3ext.h	386;"	d
sqlite3_open	src/main.c	/^int sqlite3_open($/;"	f
sqlite3_open	src/sqlite3ext.h	386;"	d
sqlite3_open	tsrc/main.c	/^int sqlite3_open($/;"	f
sqlite3_open	tsrc/sqlite3ext.h	386;"	d
sqlite3_open16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open16($/;"	f
sqlite3_open16	sqlite3.c	109213;"	d	file:
sqlite3_open16	sqlite3.c	109422;"	d	file:
sqlite3_open16	sqlite3ext.h	387;"	d
sqlite3_open16	src/loadext.c	52;"	d	file:
sqlite3_open16	src/main.c	/^int sqlite3_open16($/;"	f
sqlite3_open16	src/sqlite3ext.h	387;"	d
sqlite3_open16	tsrc/loadext.c	52;"	d	file:
sqlite3_open16	tsrc/main.c	/^int sqlite3_open16($/;"	f
sqlite3_open16	tsrc/sqlite3ext.h	387;"	d
sqlite3_open_file_count	sqlite3.c	/^SQLITE_API int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_file_count	src/os.c	/^int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_file_count	tsrc/os.c	/^int sqlite3_open_file_count = 0;$/;"	v
sqlite3_open_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_open_v2($/;"	f
sqlite3_open_v2	sqlite3.c	109281;"	d	file:
sqlite3_open_v2	sqlite3ext.h	455;"	d
sqlite3_open_v2	src/main.c	/^int sqlite3_open_v2($/;"	f
sqlite3_open_v2	src/sqlite3ext.h	455;"	d
sqlite3_open_v2	tsrc/main.c	/^int sqlite3_open_v2($/;"	f
sqlite3_open_v2	tsrc/sqlite3ext.h	455;"	d
sqlite3_opentemp_count	sqlite3.c	/^SQLITE_API int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_opentemp_count	src/pager.c	/^int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_opentemp_count	tsrc/pager.c	/^int sqlite3_opentemp_count = 0;$/;"	v
sqlite3_os_end	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_end(void){$/;"	f
sqlite3_os_end	src/os_unix.c	/^int sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	src/os_win.c	/^int sqlite3_os_end(void){$/;"	f
sqlite3_os_end	tsrc/os_unix.c	/^int sqlite3_os_end(void){ $/;"	f
sqlite3_os_end	tsrc/os_win.c	/^int sqlite3_os_end(void){$/;"	f
sqlite3_os_init	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_os_init(void){$/;"	f
sqlite3_os_init	src/os_unix.c	/^int sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	src/os_win.c	/^int sqlite3_os_init(void){$/;"	f
sqlite3_os_init	tsrc/os_unix.c	/^int sqlite3_os_init(void){ $/;"	f
sqlite3_os_init	tsrc/os_win.c	/^int sqlite3_os_init(void){$/;"	f
sqlite3_os_type	sqlite3.c	/^SQLITE_API LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v	file:
sqlite3_os_type	src/os_win.c	/^LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	src/os_win.c	/^static LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v	file:
sqlite3_os_type	tsrc/os_win.c	/^LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v
sqlite3_os_type	tsrc/os_win.c	/^static LONG SQLITE_WIN32_VOLATILE sqlite3_os_type = 0;$/;"	v	file:
sqlite3_overload_function	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_overload_function($/;"	f
sqlite3_overload_function	sqlite3.c	109262;"	d	file:
sqlite3_overload_function	sqlite3ext.h	436;"	d
sqlite3_overload_function	src/main.c	/^int sqlite3_overload_function($/;"	f
sqlite3_overload_function	src/sqlite3ext.h	436;"	d
sqlite3_overload_function	tsrc/main.c	/^int sqlite3_overload_function($/;"	f
sqlite3_overload_function	tsrc/sqlite3ext.h	436;"	d
sqlite3_pager_readdb_count	sqlite3.c	/^SQLITE_API int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_readdb_count	src/pager.c	/^int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_readdb_count	tsrc/pager.c	/^int sqlite3_pager_readdb_count = 0;    \/* Number of full pages read from DB *\/$/;"	v
sqlite3_pager_writedb_count	sqlite3.c	/^SQLITE_API int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writedb_count	src/pager.c	/^int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writedb_count	tsrc/pager.c	/^int sqlite3_pager_writedb_count = 0;   \/* Number of full pages written to DB *\/$/;"	v
sqlite3_pager_writej_count	sqlite3.c	/^SQLITE_API int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pager_writej_count	src/pager.c	/^int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pager_writej_count	tsrc/pager.c	/^int sqlite3_pager_writej_count = 0;    \/* Number of pages written to journal *\/$/;"	v
sqlite3_pcache	sqlite3.c	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache	file:
sqlite3_pcache	sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache	tsrc/sqlite3.h	/^typedef struct sqlite3_pcache sqlite3_pcache;$/;"	t	typeref:struct:sqlite3_pcache
sqlite3_pcache_methods	sqlite3.c	/^struct sqlite3_pcache_methods {$/;"	s	file:
sqlite3_pcache_methods	sqlite3.c	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods	file:
sqlite3_pcache_methods	sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods	tsrc/sqlite3.h	/^struct sqlite3_pcache_methods {$/;"	s
sqlite3_pcache_methods	tsrc/sqlite3.h	/^typedef struct sqlite3_pcache_methods sqlite3_pcache_methods;$/;"	t	typeref:struct:sqlite3_pcache_methods
sqlite3_pcache_methods2	sqlite3.c	/^struct sqlite3_pcache_methods2 {$/;"	s	file:
sqlite3_pcache_methods2	sqlite3.c	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2	file:
sqlite3_pcache_methods2	sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_methods2	tsrc/sqlite3.h	/^struct sqlite3_pcache_methods2 {$/;"	s
sqlite3_pcache_methods2	tsrc/sqlite3.h	/^typedef struct sqlite3_pcache_methods2 sqlite3_pcache_methods2;$/;"	t	typeref:struct:sqlite3_pcache_methods2
sqlite3_pcache_page	sqlite3.c	/^struct sqlite3_pcache_page {$/;"	s	file:
sqlite3_pcache_page	sqlite3.c	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page	file:
sqlite3_pcache_page	sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_pcache_page	tsrc/sqlite3.h	/^struct sqlite3_pcache_page {$/;"	s
sqlite3_pcache_page	tsrc/sqlite3.h	/^typedef struct sqlite3_pcache_page sqlite3_pcache_page;$/;"	t	typeref:struct:sqlite3_pcache_page
sqlite3_prepare	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare($/;"	f
sqlite3_prepare	sqlite3.c	109214;"	d	file:
sqlite3_prepare	sqlite3ext.h	388;"	d
sqlite3_prepare	src/prepare.c	/^int sqlite3_prepare($/;"	f
sqlite3_prepare	src/sqlite3ext.h	388;"	d
sqlite3_prepare	tsrc/prepare.c	/^int sqlite3_prepare($/;"	f
sqlite3_prepare	tsrc/sqlite3ext.h	388;"	d
sqlite3_prepare16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare16($/;"	f
sqlite3_prepare16	sqlite3.c	109215;"	d	file:
sqlite3_prepare16	sqlite3.c	109423;"	d	file:
sqlite3_prepare16	sqlite3ext.h	389;"	d
sqlite3_prepare16	src/loadext.c	53;"	d	file:
sqlite3_prepare16	src/prepare.c	/^int sqlite3_prepare16($/;"	f
sqlite3_prepare16	src/sqlite3ext.h	389;"	d
sqlite3_prepare16	tsrc/loadext.c	53;"	d	file:
sqlite3_prepare16	tsrc/prepare.c	/^int sqlite3_prepare16($/;"	f
sqlite3_prepare16	tsrc/sqlite3ext.h	389;"	d
sqlite3_prepare16_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	sqlite3.c	109217;"	d	file:
sqlite3_prepare16_v2	sqlite3.c	109264;"	d	file:
sqlite3_prepare16_v2	sqlite3.c	109424;"	d	file:
sqlite3_prepare16_v2	sqlite3ext.h	391;"	d
sqlite3_prepare16_v2	sqlite3ext.h	438;"	d
sqlite3_prepare16_v2	src/loadext.c	54;"	d	file:
sqlite3_prepare16_v2	src/prepare.c	/^int sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	src/sqlite3ext.h	391;"	d
sqlite3_prepare16_v2	src/sqlite3ext.h	438;"	d
sqlite3_prepare16_v2	tsrc/loadext.c	54;"	d	file:
sqlite3_prepare16_v2	tsrc/prepare.c	/^int sqlite3_prepare16_v2($/;"	f
sqlite3_prepare16_v2	tsrc/sqlite3ext.h	391;"	d
sqlite3_prepare16_v2	tsrc/sqlite3ext.h	438;"	d
sqlite3_prepare_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	sqlite3.c	109216;"	d	file:
sqlite3_prepare_v2	sqlite3.c	109263;"	d	file:
sqlite3_prepare_v2	sqlite3ext.h	390;"	d
sqlite3_prepare_v2	sqlite3ext.h	437;"	d
sqlite3_prepare_v2	src/prepare.c	/^int sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	src/sqlite3ext.h	390;"	d
sqlite3_prepare_v2	src/sqlite3ext.h	437;"	d
sqlite3_prepare_v2	tsrc/prepare.c	/^int sqlite3_prepare_v2($/;"	f
sqlite3_prepare_v2	tsrc/sqlite3ext.h	390;"	d
sqlite3_prepare_v2	tsrc/sqlite3ext.h	437;"	d
sqlite3_preupdate_count	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_preupdate_count(sqlite3 *db){$/;"	f
sqlite3_preupdate_count	src/vdbeapi.c	/^int sqlite3_preupdate_count(sqlite3 *db){$/;"	f
sqlite3_preupdate_count	tsrc/vdbeapi.c	/^int sqlite3_preupdate_count(sqlite3 *db){$/;"	f
sqlite3_preupdate_depth	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_preupdate_depth(sqlite3 *db){$/;"	f
sqlite3_preupdate_depth	src/vdbeapi.c	/^int sqlite3_preupdate_depth(sqlite3 *db){$/;"	f
sqlite3_preupdate_depth	tsrc/vdbeapi.c	/^int sqlite3_preupdate_depth(sqlite3 *db){$/;"	f
sqlite3_preupdate_hook	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_preupdate_hook($/;"	f
sqlite3_preupdate_hook	src/main.c	/^void *sqlite3_preupdate_hook($/;"	f
sqlite3_preupdate_hook	tsrc/main.c	/^void *sqlite3_preupdate_hook($/;"	f
sqlite3_preupdate_new	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_preupdate_new(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_new	src/vdbeapi.c	/^int sqlite3_preupdate_new(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_new	tsrc/vdbeapi.c	/^int sqlite3_preupdate_new(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_old	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_preupdate_old(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_old	src/vdbeapi.c	/^int sqlite3_preupdate_old(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_preupdate_old	tsrc/vdbeapi.c	/^int sqlite3_preupdate_old(sqlite3 *db, int iIdx, sqlite3_value **ppValue){$/;"	f
sqlite3_profile	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_profile($/;"	f
sqlite3_profile	sqlite3.c	109218;"	d	file:
sqlite3_profile	sqlite3.c	109464;"	d	file:
sqlite3_profile	sqlite3ext.h	392;"	d
sqlite3_profile	src/loadext.c	94;"	d	file:
sqlite3_profile	src/main.c	/^void *sqlite3_profile($/;"	f
sqlite3_profile	src/sqlite3ext.h	392;"	d
sqlite3_profile	tsrc/loadext.c	94;"	d	file:
sqlite3_profile	tsrc/main.c	/^void *sqlite3_profile($/;"	f
sqlite3_profile	tsrc/sqlite3ext.h	392;"	d
sqlite3_progress_handler	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	sqlite3.c	109219;"	d	file:
sqlite3_progress_handler	sqlite3.c	109448;"	d	file:
sqlite3_progress_handler	sqlite3ext.h	393;"	d
sqlite3_progress_handler	src/loadext.c	78;"	d	file:
sqlite3_progress_handler	src/main.c	/^void sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	src/sqlite3ext.h	393;"	d
sqlite3_progress_handler	tsrc/loadext.c	78;"	d	file:
sqlite3_progress_handler	tsrc/main.c	/^void sqlite3_progress_handler($/;"	f
sqlite3_progress_handler	tsrc/sqlite3ext.h	393;"	d
sqlite3_quota_fclose	src/test_quota.c	/^int sqlite3_quota_fclose(quota_FILE *p){$/;"	f
sqlite3_quota_ferror	src/test_quota.c	/^int sqlite3_quota_ferror(quota_FILE *p){$/;"	f
sqlite3_quota_fflush	src/test_quota.c	/^int sqlite3_quota_fflush(quota_FILE *p, int doFsync){$/;"	f
sqlite3_quota_file	src/test_quota.c	/^int sqlite3_quota_file(const char *zFilename){$/;"	f
sqlite3_quota_file_available	src/test_quota.c	/^long sqlite3_quota_file_available(quota_FILE *p){$/;"	f
sqlite3_quota_file_mtime	src/test_quota.c	/^int sqlite3_quota_file_mtime(quota_FILE *p, time_t *pTime){$/;"	f
sqlite3_quota_file_size	src/test_quota.c	/^sqlite3_int64 sqlite3_quota_file_size(quota_FILE *p){$/;"	f
sqlite3_quota_file_truesize	src/test_quota.c	/^sqlite3_int64 sqlite3_quota_file_truesize(quota_FILE *p){$/;"	f
sqlite3_quota_fopen	src/test_quota.c	/^quota_FILE *sqlite3_quota_fopen(const char *zFilename, const char *zMode){$/;"	f
sqlite3_quota_fread	src/test_quota.c	/^size_t sqlite3_quota_fread($/;"	f
sqlite3_quota_fseek	src/test_quota.c	/^int sqlite3_quota_fseek(quota_FILE *p, long offset, int whence){$/;"	f
sqlite3_quota_ftell	src/test_quota.c	/^long sqlite3_quota_ftell(quota_FILE *p){$/;"	f
sqlite3_quota_ftruncate	src/test_quota.c	/^int sqlite3_quota_ftruncate(quota_FILE *p, sqlite3_int64 szNew){$/;"	f
sqlite3_quota_fwrite	src/test_quota.c	/^size_t sqlite3_quota_fwrite($/;"	f
sqlite3_quota_initialize	src/test_quota.c	/^int sqlite3_quota_initialize(const char *zOrigVfsName, int makeDefault){$/;"	f
sqlite3_quota_remove	src/test_quota.c	/^int sqlite3_quota_remove(const char *zFilename){$/;"	f
sqlite3_quota_rewind	src/test_quota.c	/^void sqlite3_quota_rewind(quota_FILE *p){$/;"	f
sqlite3_quota_set	src/test_quota.c	/^int sqlite3_quota_set($/;"	f
sqlite3_quota_shutdown	src/test_quota.c	/^int sqlite3_quota_shutdown(void){$/;"	f
sqlite3_randomness	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	sqlite3.c	109294;"	d	file:
sqlite3_randomness	sqlite3ext.h	468;"	d
sqlite3_randomness	src/random.c	/^void sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	src/sqlite3ext.h	468;"	d
sqlite3_randomness	tsrc/random.c	/^void sqlite3_randomness(int N, void *pBuf){$/;"	f
sqlite3_randomness	tsrc/sqlite3ext.h	468;"	d
sqlite3_realloc	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	sqlite3.c	109220;"	d	file:
sqlite3_realloc	sqlite3ext.h	394;"	d
sqlite3_realloc	src/malloc.c	/^void *sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	src/sqlite3ext.h	394;"	d
sqlite3_realloc	tsrc/malloc.c	/^void *sqlite3_realloc(void *pOld, int n){$/;"	f
sqlite3_realloc	tsrc/sqlite3ext.h	394;"	d
sqlite3_realloc64	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_realloc64(void *pOld, sqlite3_uint64 n){$/;"	f
sqlite3_realloc64	sqlite3.c	109347;"	d	file:
sqlite3_realloc64	sqlite3ext.h	521;"	d
sqlite3_realloc64	src/malloc.c	/^void *sqlite3_realloc64(void *pOld, sqlite3_uint64 n){$/;"	f
sqlite3_realloc64	src/sqlite3ext.h	521;"	d
sqlite3_realloc64	tsrc/malloc.c	/^void *sqlite3_realloc64(void *pOld, sqlite3_uint64 n){$/;"	f
sqlite3_realloc64	tsrc/sqlite3ext.h	521;"	d
sqlite3_register_vfslog	ext/misc/vfslog.c	/^int sqlite3_register_vfslog(const char *zArg){$/;"	f
sqlite3_release_memory	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	sqlite3.c	109282;"	d	file:
sqlite3_release_memory	sqlite3ext.h	456;"	d
sqlite3_release_memory	src/malloc.c	/^int sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	src/sqlite3ext.h	456;"	d
sqlite3_release_memory	tsrc/malloc.c	/^int sqlite3_release_memory(int n){$/;"	f
sqlite3_release_memory	tsrc/sqlite3ext.h	456;"	d
sqlite3_reset	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	sqlite3.c	109221;"	d	file:
sqlite3_reset	sqlite3ext.h	395;"	d
sqlite3_reset	src/sqlite3ext.h	395;"	d
sqlite3_reset	src/vdbeapi.c	/^int sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset	tsrc/sqlite3ext.h	395;"	d
sqlite3_reset	tsrc/vdbeapi.c	/^int sqlite3_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_reset_auto_extension	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_reset_auto_extension	sqlite3.c	109348;"	d	file:
sqlite3_reset_auto_extension	sqlite3ext.h	522;"	d
sqlite3_reset_auto_extension	src/loadext.c	/^void sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_reset_auto_extension	src/sqlite3ext.h	522;"	d
sqlite3_reset_auto_extension	tsrc/loadext.c	/^void sqlite3_reset_auto_extension(void){$/;"	f
sqlite3_reset_auto_extension	tsrc/sqlite3ext.h	522;"	d
sqlite3_result_blob	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_blob($/;"	f
sqlite3_result_blob	sqlite3.c	109222;"	d	file:
sqlite3_result_blob	sqlite3ext.h	396;"	d
sqlite3_result_blob	src/sqlite3ext.h	396;"	d
sqlite3_result_blob	src/vdbeapi.c	/^void sqlite3_result_blob($/;"	f
sqlite3_result_blob	tsrc/sqlite3ext.h	396;"	d
sqlite3_result_blob	tsrc/vdbeapi.c	/^void sqlite3_result_blob($/;"	f
sqlite3_result_blob64	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_blob64($/;"	f
sqlite3_result_blob64	sqlite3.c	109349;"	d	file:
sqlite3_result_blob64	sqlite3ext.h	523;"	d
sqlite3_result_blob64	src/sqlite3ext.h	523;"	d
sqlite3_result_blob64	src/vdbeapi.c	/^void sqlite3_result_blob64($/;"	f
sqlite3_result_blob64	tsrc/sqlite3ext.h	523;"	d
sqlite3_result_blob64	tsrc/vdbeapi.c	/^void sqlite3_result_blob64($/;"	f
sqlite3_result_double	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	sqlite3.c	109223;"	d	file:
sqlite3_result_double	sqlite3ext.h	397;"	d
sqlite3_result_double	src/sqlite3ext.h	397;"	d
sqlite3_result_double	src/vdbeapi.c	/^void sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_double	tsrc/sqlite3ext.h	397;"	d
sqlite3_result_double	tsrc/vdbeapi.c	/^void sqlite3_result_double(sqlite3_context *pCtx, double rVal){$/;"	f
sqlite3_result_error	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	sqlite3.c	109224;"	d	file:
sqlite3_result_error	sqlite3ext.h	398;"	d
sqlite3_result_error	src/sqlite3ext.h	398;"	d
sqlite3_result_error	src/vdbeapi.c	/^void sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error	tsrc/sqlite3ext.h	398;"	d
sqlite3_result_error	tsrc/vdbeapi.c	/^void sqlite3_result_error(sqlite3_context *pCtx, const char *z, int n){$/;"	f
sqlite3_result_error16	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	sqlite3.c	109225;"	d	file:
sqlite3_result_error16	sqlite3.c	109425;"	d	file:
sqlite3_result_error16	sqlite3ext.h	399;"	d
sqlite3_result_error16	src/loadext.c	55;"	d	file:
sqlite3_result_error16	src/sqlite3ext.h	399;"	d
sqlite3_result_error16	src/vdbeapi.c	/^void sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error16	tsrc/loadext.c	55;"	d	file:
sqlite3_result_error16	tsrc/sqlite3ext.h	399;"	d
sqlite3_result_error16	tsrc/vdbeapi.c	/^void sqlite3_result_error16(sqlite3_context *pCtx, const void *z, int n){$/;"	f
sqlite3_result_error_code	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	sqlite3.c	109292;"	d	file:
sqlite3_result_error_code	sqlite3ext.h	466;"	d
sqlite3_result_error_code	src/sqlite3ext.h	466;"	d
sqlite3_result_error_code	src/vdbeapi.c	/^void sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_code	tsrc/sqlite3ext.h	466;"	d
sqlite3_result_error_code	tsrc/vdbeapi.c	/^void sqlite3_result_error_code(sqlite3_context *pCtx, int errCode){$/;"	f
sqlite3_result_error_nomem	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	sqlite3.c	109283;"	d	file:
sqlite3_result_error_nomem	sqlite3ext.h	457;"	d
sqlite3_result_error_nomem	src/sqlite3ext.h	457;"	d
sqlite3_result_error_nomem	src/vdbeapi.c	/^void sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_nomem	tsrc/sqlite3ext.h	457;"	d
sqlite3_result_error_nomem	tsrc/vdbeapi.c	/^void sqlite3_result_error_nomem(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	sqlite3.c	109284;"	d	file:
sqlite3_result_error_toobig	sqlite3ext.h	458;"	d
sqlite3_result_error_toobig	src/sqlite3ext.h	458;"	d
sqlite3_result_error_toobig	src/vdbeapi.c	/^void sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_error_toobig	tsrc/sqlite3ext.h	458;"	d
sqlite3_result_error_toobig	tsrc/vdbeapi.c	/^void sqlite3_result_error_toobig(sqlite3_context *pCtx){$/;"	f
sqlite3_result_int	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	sqlite3.c	109226;"	d	file:
sqlite3_result_int	sqlite3ext.h	400;"	d
sqlite3_result_int	src/sqlite3ext.h	400;"	d
sqlite3_result_int	src/vdbeapi.c	/^void sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int	tsrc/sqlite3ext.h	400;"	d
sqlite3_result_int	tsrc/vdbeapi.c	/^void sqlite3_result_int(sqlite3_context *pCtx, int iVal){$/;"	f
sqlite3_result_int64	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	sqlite3.c	109227;"	d	file:
sqlite3_result_int64	sqlite3ext.h	401;"	d
sqlite3_result_int64	src/sqlite3ext.h	401;"	d
sqlite3_result_int64	src/vdbeapi.c	/^void sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_int64	tsrc/sqlite3ext.h	401;"	d
sqlite3_result_int64	tsrc/vdbeapi.c	/^void sqlite3_result_int64(sqlite3_context *pCtx, i64 iVal){$/;"	f
sqlite3_result_null	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	sqlite3.c	109228;"	d	file:
sqlite3_result_null	sqlite3ext.h	402;"	d
sqlite3_result_null	src/sqlite3ext.h	402;"	d
sqlite3_result_null	src/vdbeapi.c	/^void sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_null	tsrc/sqlite3ext.h	402;"	d
sqlite3_result_null	tsrc/vdbeapi.c	/^void sqlite3_result_null(sqlite3_context *pCtx){$/;"	f
sqlite3_result_subtype	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_subtype(sqlite3_context *pCtx, unsigned int eSubtype){$/;"	f
sqlite3_result_subtype	sqlite3.c	109359;"	d	file:
sqlite3_result_subtype	sqlite3ext.h	533;"	d
sqlite3_result_subtype	src/sqlite3ext.h	533;"	d
sqlite3_result_subtype	src/vdbeapi.c	/^void sqlite3_result_subtype(sqlite3_context *pCtx, unsigned int eSubtype){$/;"	f
sqlite3_result_subtype	tsrc/sqlite3ext.h	533;"	d
sqlite3_result_subtype	tsrc/vdbeapi.c	/^void sqlite3_result_subtype(sqlite3_context *pCtx, unsigned int eSubtype){$/;"	f
sqlite3_result_text	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text($/;"	f
sqlite3_result_text	sqlite3.c	109229;"	d	file:
sqlite3_result_text	sqlite3ext.h	403;"	d
sqlite3_result_text	src/sqlite3ext.h	403;"	d
sqlite3_result_text	src/vdbeapi.c	/^void sqlite3_result_text($/;"	f
sqlite3_result_text	tsrc/sqlite3ext.h	403;"	d
sqlite3_result_text	tsrc/vdbeapi.c	/^void sqlite3_result_text($/;"	f
sqlite3_result_text16	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16($/;"	f
sqlite3_result_text16	sqlite3.c	109230;"	d	file:
sqlite3_result_text16	sqlite3.c	109426;"	d	file:
sqlite3_result_text16	sqlite3ext.h	404;"	d
sqlite3_result_text16	src/loadext.c	56;"	d	file:
sqlite3_result_text16	src/sqlite3ext.h	404;"	d
sqlite3_result_text16	src/vdbeapi.c	/^void sqlite3_result_text16($/;"	f
sqlite3_result_text16	tsrc/loadext.c	56;"	d	file:
sqlite3_result_text16	tsrc/sqlite3ext.h	404;"	d
sqlite3_result_text16	tsrc/vdbeapi.c	/^void sqlite3_result_text16($/;"	f
sqlite3_result_text16be	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	sqlite3.c	109231;"	d	file:
sqlite3_result_text16be	sqlite3.c	109427;"	d	file:
sqlite3_result_text16be	sqlite3ext.h	405;"	d
sqlite3_result_text16be	src/loadext.c	57;"	d	file:
sqlite3_result_text16be	src/sqlite3ext.h	405;"	d
sqlite3_result_text16be	src/vdbeapi.c	/^void sqlite3_result_text16be($/;"	f
sqlite3_result_text16be	tsrc/loadext.c	57;"	d	file:
sqlite3_result_text16be	tsrc/sqlite3ext.h	405;"	d
sqlite3_result_text16be	tsrc/vdbeapi.c	/^void sqlite3_result_text16be($/;"	f
sqlite3_result_text16le	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	sqlite3.c	109232;"	d	file:
sqlite3_result_text16le	sqlite3.c	109428;"	d	file:
sqlite3_result_text16le	sqlite3ext.h	406;"	d
sqlite3_result_text16le	src/loadext.c	58;"	d	file:
sqlite3_result_text16le	src/sqlite3ext.h	406;"	d
sqlite3_result_text16le	src/vdbeapi.c	/^void sqlite3_result_text16le($/;"	f
sqlite3_result_text16le	tsrc/loadext.c	58;"	d	file:
sqlite3_result_text16le	tsrc/sqlite3ext.h	406;"	d
sqlite3_result_text16le	tsrc/vdbeapi.c	/^void sqlite3_result_text16le($/;"	f
sqlite3_result_text64	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_text64($/;"	f
sqlite3_result_text64	sqlite3.c	109350;"	d	file:
sqlite3_result_text64	sqlite3ext.h	524;"	d
sqlite3_result_text64	src/sqlite3ext.h	524;"	d
sqlite3_result_text64	src/vdbeapi.c	/^void sqlite3_result_text64($/;"	f
sqlite3_result_text64	tsrc/sqlite3ext.h	524;"	d
sqlite3_result_text64	tsrc/vdbeapi.c	/^void sqlite3_result_text64($/;"	f
sqlite3_result_value	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	sqlite3.c	109233;"	d	file:
sqlite3_result_value	sqlite3ext.h	407;"	d
sqlite3_result_value	src/sqlite3ext.h	407;"	d
sqlite3_result_value	src/vdbeapi.c	/^void sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_value	tsrc/sqlite3ext.h	407;"	d
sqlite3_result_value	tsrc/vdbeapi.c	/^void sqlite3_result_value(sqlite3_context *pCtx, sqlite3_value *pValue){$/;"	f
sqlite3_result_zeroblob	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	sqlite3.c	109291;"	d	file:
sqlite3_result_zeroblob	sqlite3ext.h	465;"	d
sqlite3_result_zeroblob	src/sqlite3ext.h	465;"	d
sqlite3_result_zeroblob	src/vdbeapi.c	/^void sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob	tsrc/sqlite3ext.h	465;"	d
sqlite3_result_zeroblob	tsrc/vdbeapi.c	/^void sqlite3_result_zeroblob(sqlite3_context *pCtx, int n){$/;"	f
sqlite3_result_zeroblob64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_result_zeroblob64(sqlite3_context *pCtx, u64 n){$/;"	f
sqlite3_result_zeroblob64	sqlite3.c	109355;"	d	file:
sqlite3_result_zeroblob64	sqlite3ext.h	529;"	d
sqlite3_result_zeroblob64	src/sqlite3ext.h	529;"	d
sqlite3_result_zeroblob64	src/vdbeapi.c	/^int sqlite3_result_zeroblob64(sqlite3_context *pCtx, u64 n){$/;"	f
sqlite3_result_zeroblob64	tsrc/sqlite3ext.h	529;"	d
sqlite3_result_zeroblob64	tsrc/vdbeapi.c	/^int sqlite3_result_zeroblob64(sqlite3_context *pCtx, u64 n){$/;"	f
sqlite3_rollback_hook	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	sqlite3.c	109234;"	d	file:
sqlite3_rollback_hook	sqlite3ext.h	408;"	d
sqlite3_rollback_hook	src/main.c	/^void *sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	src/sqlite3ext.h	408;"	d
sqlite3_rollback_hook	tsrc/main.c	/^void *sqlite3_rollback_hook($/;"	f
sqlite3_rollback_hook	tsrc/sqlite3ext.h	408;"	d
sqlite3_rtree_dbl	ext/rtree/sqlite3rtree.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	ext/rtree/sqlite3rtree.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	sqlite3.c	/^  typedef double sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_dbl	sqlite3.c	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t	file:
sqlite3_rtree_dbl	sqlite3.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	sqlite3.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	tsrc/sqlite3.h	/^  typedef double sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_dbl	tsrc/sqlite3.h	/^  typedef sqlite3_int64 sqlite3_rtree_dbl;$/;"	t
sqlite3_rtree_geometry	ext/rtree/sqlite3rtree.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	ext/rtree/sqlite3rtree.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry	sqlite3.c	/^struct sqlite3_rtree_geometry {$/;"	s	file:
sqlite3_rtree_geometry	sqlite3.c	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry	file:
sqlite3_rtree_geometry	sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry	tsrc/sqlite3.h	/^struct sqlite3_rtree_geometry {$/;"	s
sqlite3_rtree_geometry	tsrc/sqlite3.h	/^typedef struct sqlite3_rtree_geometry sqlite3_rtree_geometry;$/;"	t	typeref:struct:sqlite3_rtree_geometry
sqlite3_rtree_geometry_callback	ext/rtree/rtree.c	/^int sqlite3_rtree_geometry_callback($/;"	f
sqlite3_rtree_geometry_callback	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_rtree_geometry_callback($/;"	f
sqlite3_rtree_geometry_callback	tsrc/rtree.c	/^int sqlite3_rtree_geometry_callback($/;"	f
sqlite3_rtree_query_callback	ext/rtree/rtree.c	/^int sqlite3_rtree_query_callback($/;"	f
sqlite3_rtree_query_callback	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_rtree_query_callback($/;"	f
sqlite3_rtree_query_callback	tsrc/rtree.c	/^int sqlite3_rtree_query_callback($/;"	f
sqlite3_rtree_query_info	ext/rtree/sqlite3rtree.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	ext/rtree/sqlite3rtree.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_rtree_query_info	sqlite3.c	/^struct sqlite3_rtree_query_info {$/;"	s	file:
sqlite3_rtree_query_info	sqlite3.c	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info	file:
sqlite3_rtree_query_info	sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_rtree_query_info	tsrc/sqlite3.h	/^struct sqlite3_rtree_query_info {$/;"	s
sqlite3_rtree_query_info	tsrc/sqlite3.h	/^typedef struct sqlite3_rtree_query_info sqlite3_rtree_query_info;$/;"	t	typeref:struct:sqlite3_rtree_query_info
sqlite3_scrub_backup	ext/misc/scrub.c	/^int sqlite3_scrub_backup($/;"	f
sqlite3_search_count	sqlite3.c	/^SQLITE_API int sqlite3_search_count = 0;$/;"	v
sqlite3_search_count	src/vdbe.c	/^int sqlite3_search_count = 0;$/;"	v
sqlite3_search_count	tsrc/vdbe.c	/^int sqlite3_search_count = 0;$/;"	v
sqlite3_server	src/test_server.c	/^void *sqlite3_server(void *NotUsed){$/;"	f
sqlite3_server_start	src/test_server.c	/^void sqlite3_server_start(void){$/;"	f
sqlite3_server_start2	src/test_server.c	/^void sqlite3_server_start2(int *pnDecr){$/;"	f
sqlite3_server_stop	src/test_server.c	/^void sqlite3_server_stop(void){$/;"	f
sqlite3_session	ext/session/sqlite3session.c	/^struct sqlite3_session {$/;"	s	file:
sqlite3_session	ext/session/sqlite3session.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_session	sqlite3.c	/^struct sqlite3_session {$/;"	s	file:
sqlite3_session	sqlite3.c	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session	file:
sqlite3_session	sqlite3.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_session	sqlite3session.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_session	tsrc/sqlite3.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_session	tsrc/sqlite3session.c	/^struct sqlite3_session {$/;"	s	file:
sqlite3_session	tsrc/sqlite3session.h	/^typedef struct sqlite3_session sqlite3_session;$/;"	t	typeref:struct:sqlite3_session
sqlite3_set_authorizer	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	sqlite3.c	109235;"	d	file:
sqlite3_set_authorizer	sqlite3.c	109409;"	d	file:
sqlite3_set_authorizer	sqlite3ext.h	409;"	d
sqlite3_set_authorizer	src/auth.c	/^int sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	src/loadext.c	39;"	d	file:
sqlite3_set_authorizer	src/sqlite3ext.h	409;"	d
sqlite3_set_authorizer	tsrc/auth.c	/^int sqlite3_set_authorizer($/;"	f
sqlite3_set_authorizer	tsrc/loadext.c	39;"	d	file:
sqlite3_set_authorizer	tsrc/sqlite3ext.h	409;"	d
sqlite3_set_auxdata	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	sqlite3.c	109236;"	d	file:
sqlite3_set_auxdata	sqlite3ext.h	410;"	d
sqlite3_set_auxdata	src/sqlite3ext.h	410;"	d
sqlite3_set_auxdata	src/vdbeapi.c	/^void sqlite3_set_auxdata($/;"	f
sqlite3_set_auxdata	tsrc/sqlite3ext.h	410;"	d
sqlite3_set_auxdata	tsrc/vdbeapi.c	/^void sqlite3_set_auxdata($/;"	f
sqlite3_shutdown	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_shutdown(void){$/;"	f
sqlite3_shutdown	src/main.c	/^int sqlite3_shutdown(void){$/;"	f
sqlite3_shutdown	tsrc/main.c	/^int sqlite3_shutdown(void){$/;"	f
sqlite3_sleep	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	sqlite3.c	109285;"	d	file:
sqlite3_sleep	sqlite3ext.h	459;"	d
sqlite3_sleep	src/main.c	/^int sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	src/sqlite3ext.h	459;"	d
sqlite3_sleep	tsrc/main.c	/^int sqlite3_sleep(int ms){$/;"	f
sqlite3_sleep	tsrc/sqlite3ext.h	459;"	d
sqlite3_snapshot	sqlite3.c	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot	file:
sqlite3_snapshot	sqlite3.h	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot
sqlite3_snapshot	tsrc/sqlite3.h	/^typedef struct sqlite3_snapshot sqlite3_snapshot;$/;"	t	typeref:struct:sqlite3_snapshot
sqlite3_snapshot_cmp	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_snapshot_cmp(sqlite3_snapshot *p1, sqlite3_snapshot *p2){$/;"	f
sqlite3_snapshot_cmp	src/wal.c	/^int sqlite3_snapshot_cmp(sqlite3_snapshot *p1, sqlite3_snapshot *p2){$/;"	f
sqlite3_snapshot_cmp	tsrc/wal.c	/^int sqlite3_snapshot_cmp(sqlite3_snapshot *p1, sqlite3_snapshot *p2){$/;"	f
sqlite3_snapshot_free	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_snapshot_free(sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3_snapshot_free	src/main.c	/^void sqlite3_snapshot_free(sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3_snapshot_free	tsrc/main.c	/^void sqlite3_snapshot_free(sqlite3_snapshot *pSnapshot){$/;"	f
sqlite3_snapshot_get	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_snapshot_get($/;"	f
sqlite3_snapshot_get	src/main.c	/^int sqlite3_snapshot_get($/;"	f
sqlite3_snapshot_get	tsrc/main.c	/^int sqlite3_snapshot_get($/;"	f
sqlite3_snapshot_open	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_snapshot_open($/;"	f
sqlite3_snapshot_open	src/main.c	/^int sqlite3_snapshot_open($/;"	f
sqlite3_snapshot_open	tsrc/main.c	/^int sqlite3_snapshot_open($/;"	f
sqlite3_snprintf	sqlite3.c	/^SQLITE_API char *SQLITE_CDECL sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	sqlite3.c	109237;"	d	file:
sqlite3_snprintf	sqlite3ext.h	411;"	d
sqlite3_snprintf	src/printf.c	/^char *sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	src/sqlite3ext.h	411;"	d
sqlite3_snprintf	tsrc/printf.c	/^char *sqlite3_snprintf(int n, char *zBuf, const char *zFormat, ...){$/;"	f
sqlite3_snprintf	tsrc/sqlite3ext.h	411;"	d
sqlite3_snprintf_str	src/test1.c	/^static int SQLITE_TCLAPI sqlite3_snprintf_str($/;"	f	file:
sqlite3_soft_heap_limit	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	sqlite3.c	109286;"	d	file:
sqlite3_soft_heap_limit	sqlite3ext.h	460;"	d
sqlite3_soft_heap_limit	src/malloc.c	/^void sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	src/sqlite3ext.h	460;"	d
sqlite3_soft_heap_limit	tsrc/malloc.c	/^void sqlite3_soft_heap_limit(int n){$/;"	f
sqlite3_soft_heap_limit	tsrc/sqlite3ext.h	460;"	d
sqlite3_soft_heap_limit64	sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	sqlite3.c	109314;"	d	file:
sqlite3_soft_heap_limit64	sqlite3ext.h	488;"	d
sqlite3_soft_heap_limit64	src/malloc.c	/^sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	src/sqlite3ext.h	488;"	d
sqlite3_soft_heap_limit64	tsrc/malloc.c	/^sqlite3_int64 sqlite3_soft_heap_limit64(sqlite3_int64 n){$/;"	f
sqlite3_soft_heap_limit64	tsrc/sqlite3ext.h	488;"	d
sqlite3_sort_count	sqlite3.c	/^SQLITE_API int sqlite3_sort_count = 0;$/;"	v
sqlite3_sort_count	src/vdbe.c	/^int sqlite3_sort_count = 0;$/;"	v
sqlite3_sort_count	tsrc/vdbe.c	/^int sqlite3_sort_count = 0;$/;"	v
sqlite3_sourceid	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	sqlite3.c	109315;"	d	file:
sqlite3_sourceid	sqlite3ext.h	489;"	d
sqlite3_sourceid	src/main.c	/^const char *sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	src/sqlite3ext.h	489;"	d
sqlite3_sourceid	test/speedtest1.c	1220;"	d	file:
sqlite3_sourceid	tsrc/main.c	/^const char *sqlite3_sourceid(void){ return SQLITE_SOURCE_ID; }$/;"	f
sqlite3_sourceid	tsrc/sqlite3ext.h	489;"	d
sqlite3_sql	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	sqlite3.c	109299;"	d	file:
sqlite3_sql	sqlite3ext.h	473;"	d
sqlite3_sql	src/sqlite3ext.h	473;"	d
sqlite3_sql	src/vdbeapi.c	/^const char *sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_sql	tsrc/sqlite3ext.h	473;"	d
sqlite3_sql	tsrc/vdbeapi.c	/^const char *sqlite3_sql(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stack_baseline	src/test1.c	/^static u8 *sqlite3_stack_baseline = 0;$/;"	v	file:
sqlite3_status	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	sqlite3.c	109300;"	d	file:
sqlite3_status	sqlite3ext.h	474;"	d
sqlite3_status	src/sqlite3ext.h	474;"	d
sqlite3_status	src/status.c	/^int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status	tsrc/sqlite3ext.h	474;"	d
sqlite3_status	tsrc/status.c	/^int sqlite3_status(int op, int *pCurrent, int *pHighwater, int resetFlag){$/;"	f
sqlite3_status64	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_status64($/;"	f
sqlite3_status64	sqlite3.c	109361;"	d	file:
sqlite3_status64	sqlite3ext.h	535;"	d
sqlite3_status64	src/sqlite3ext.h	535;"	d
sqlite3_status64	src/status.c	/^int sqlite3_status64($/;"	f
sqlite3_status64	tsrc/sqlite3ext.h	535;"	d
sqlite3_status64	tsrc/status.c	/^int sqlite3_status64($/;"	f
sqlite3_step	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	sqlite3.c	109238;"	d	file:
sqlite3_step	sqlite3ext.h	412;"	d
sqlite3_step	src/sqlite3ext.h	412;"	d
sqlite3_step	src/vdbeapi.c	/^int sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_step	tsrc/sqlite3ext.h	412;"	d
sqlite3_step	tsrc/vdbeapi.c	/^int sqlite3_step(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt	sqlite3.c	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt	file:
sqlite3_stmt	sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt	tsrc/sqlite3.h	/^typedef struct sqlite3_stmt sqlite3_stmt;$/;"	t	typeref:struct:sqlite3_stmt
sqlite3_stmt_busy	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_busy(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_busy	sqlite3.c	109331;"	d	file:
sqlite3_stmt_busy	sqlite3ext.h	505;"	d
sqlite3_stmt_busy	src/sqlite3ext.h	505;"	d
sqlite3_stmt_busy	src/vdbeapi.c	/^int sqlite3_stmt_busy(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_busy	tsrc/sqlite3ext.h	505;"	d
sqlite3_stmt_busy	tsrc/vdbeapi.c	/^int sqlite3_stmt_busy(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_readonly	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_readonly	sqlite3.c	109332;"	d	file:
sqlite3_stmt_readonly	sqlite3ext.h	506;"	d
sqlite3_stmt_readonly	src/sqlite3ext.h	506;"	d
sqlite3_stmt_readonly	src/vdbeapi.c	/^int sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_readonly	tsrc/sqlite3ext.h	506;"	d
sqlite3_stmt_readonly	tsrc/vdbeapi.c	/^int sqlite3_stmt_readonly(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_scanstatus	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_scanstatus($/;"	f
sqlite3_stmt_scanstatus	src/vdbeapi.c	/^int sqlite3_stmt_scanstatus($/;"	f
sqlite3_stmt_scanstatus	tsrc/vdbeapi.c	/^int sqlite3_stmt_scanstatus($/;"	f
sqlite3_stmt_scanstatus_reset	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_stmt_scanstatus_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_scanstatus_reset	src/vdbeapi.c	/^void sqlite3_stmt_scanstatus_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_scanstatus_reset	tsrc/vdbeapi.c	/^void sqlite3_stmt_scanstatus_reset(sqlite3_stmt *pStmt){$/;"	f
sqlite3_stmt_status	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	sqlite3.c	109316;"	d	file:
sqlite3_stmt_status	sqlite3ext.h	490;"	d
sqlite3_stmt_status	src/sqlite3ext.h	490;"	d
sqlite3_stmt_status	src/vdbeapi.c	/^int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_stmt_status	tsrc/sqlite3ext.h	490;"	d
sqlite3_stmt_status	tsrc/vdbeapi.c	/^int sqlite3_stmt_status(sqlite3_stmt *pStmt, int op, int resetFlag){$/;"	f
sqlite3_strglob	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strglob(const char *zGlobPattern, const char *zString){$/;"	f
sqlite3_strglob	sqlite3.c	109351;"	d	file:
sqlite3_strglob	sqlite3ext.h	525;"	d
sqlite3_strglob	src/func.c	/^int sqlite3_strglob(const char *zGlobPattern, const char *zString){$/;"	f
sqlite3_strglob	src/sqlite3ext.h	525;"	d
sqlite3_strglob	tsrc/func.c	/^int sqlite3_strglob(const char *zGlobPattern, const char *zString){$/;"	f
sqlite3_strglob	tsrc/sqlite3ext.h	525;"	d
sqlite3_stricmp	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_stricmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3_stricmp	sqlite3.c	109333;"	d	file:
sqlite3_stricmp	sqlite3ext.h	507;"	d
sqlite3_stricmp	src/sqlite3ext.h	507;"	d
sqlite3_stricmp	src/util.c	/^int sqlite3_stricmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3_stricmp	test/speedtest1.c	113;"	d	file:
sqlite3_stricmp	tsrc/sqlite3ext.h	507;"	d
sqlite3_stricmp	tsrc/util.c	/^int sqlite3_stricmp(const char *zLeft, const char *zRight){$/;"	f
sqlite3_strlike	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){$/;"	f
sqlite3_strlike	sqlite3.c	109362;"	d	file:
sqlite3_strlike	sqlite3ext.h	536;"	d
sqlite3_strlike	src/func.c	/^int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){$/;"	f
sqlite3_strlike	src/sqlite3ext.h	536;"	d
sqlite3_strlike	tsrc/func.c	/^int sqlite3_strlike(const char *zPattern, const char *zStr, unsigned int esc){$/;"	f
sqlite3_strlike	tsrc/sqlite3ext.h	536;"	d
sqlite3_strnicmp	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	sqlite3.c	109317;"	d	file:
sqlite3_strnicmp	sqlite3ext.h	491;"	d
sqlite3_strnicmp	src/sqlite3ext.h	491;"	d
sqlite3_strnicmp	src/util.c	/^int sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_strnicmp	tsrc/sqlite3ext.h	491;"	d
sqlite3_strnicmp	tsrc/util.c	/^int sqlite3_strnicmp(const char *zLeft, const char *zRight, int N){$/;"	f
sqlite3_sync_count	sqlite3.c	/^SQLITE_API int sqlite3_sync_count = 0;$/;"	v
sqlite3_sync_count	src/os_unix.c	/^int sqlite3_sync_count = 0;$/;"	v
sqlite3_sync_count	src/os_win.c	/^int sqlite3_sync_count = 0;$/;"	v
sqlite3_sync_count	tsrc/os_unix.c	/^int sqlite3_sync_count = 0;$/;"	v
sqlite3_sync_count	tsrc/os_win.c	/^int sqlite3_sync_count = 0;$/;"	v
sqlite3_syscall_ptr	sqlite3.c	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t	file:
sqlite3_syscall_ptr	sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_syscall_ptr	tsrc/sqlite3.h	/^typedef void (*sqlite3_syscall_ptr)(void);$/;"	t
sqlite3_system_errno	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_system_errno(sqlite3 *db){$/;"	f
sqlite3_system_errno	sqlite3.c	109365;"	d	file:
sqlite3_system_errno	sqlite3ext.h	539;"	d
sqlite3_system_errno	src/main.c	/^int sqlite3_system_errno(sqlite3 *db){$/;"	f
sqlite3_system_errno	src/sqlite3ext.h	539;"	d
sqlite3_system_errno	tsrc/main.c	/^int sqlite3_system_errno(sqlite3 *db){$/;"	f
sqlite3_system_errno	tsrc/sqlite3ext.h	539;"	d
sqlite3_table_column_metadata	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	sqlite3.c	109239;"	d	file:
sqlite3_table_column_metadata	sqlite3ext.h	413;"	d
sqlite3_table_column_metadata	src/main.c	/^int sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	src/sqlite3ext.h	413;"	d
sqlite3_table_column_metadata	tsrc/main.c	/^int sqlite3_table_column_metadata($/;"	f
sqlite3_table_column_metadata	tsrc/sqlite3ext.h	413;"	d
sqlite3_temp_directory	sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	sqlite3.c	/^SQLITE_API char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_temp_directory	src/main.c	/^char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	tsrc/main.c	/^char *sqlite3_temp_directory = 0;$/;"	v
sqlite3_temp_directory	tsrc/sqlite3.h	/^SQLITE_API SQLITE_EXTERN char *sqlite3_temp_directory;$/;"	v
sqlite3_test_control	sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	sqlite3.c	109293;"	d	file:
sqlite3_test_control	sqlite3ext.h	467;"	d
sqlite3_test_control	src/main.c	/^int sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	src/sqlite3ext.h	467;"	d
sqlite3_test_control	tsrc/main.c	/^int sqlite3_test_control(int op, ...){$/;"	f
sqlite3_test_control	tsrc/sqlite3ext.h	467;"	d
sqlite3_thread_cleanup	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	sqlite3.c	109240;"	d	file:
sqlite3_thread_cleanup	sqlite3ext.h	414;"	d
sqlite3_thread_cleanup	src/main.c	/^void sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	src/sqlite3ext.h	414;"	d
sqlite3_thread_cleanup	tsrc/main.c	/^void sqlite3_thread_cleanup(void){$/;"	f
sqlite3_thread_cleanup	tsrc/sqlite3ext.h	414;"	d
sqlite3_threadsafe	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	sqlite3.c	109290;"	d	file:
sqlite3_threadsafe	sqlite3ext.h	464;"	d
sqlite3_threadsafe	src/main.c	/^int sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	src/sqlite3ext.h	464;"	d
sqlite3_threadsafe	tsrc/main.c	/^int sqlite3_threadsafe(void){ return SQLITE_THREADSAFE; }$/;"	f
sqlite3_threadsafe	tsrc/sqlite3ext.h	464;"	d
sqlite3_tokenizer	ext/fts1/fts1_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	ext/fts1/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	ext/fts1/tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	ext/fts1/tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	ext/fts2/fts2_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	ext/fts2/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	ext/fts3/fts3_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	ext/fts3/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	sqlite3.c	/^struct sqlite3_tokenizer {$/;"	s	file:
sqlite3_tokenizer	sqlite3.c	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer	file:
sqlite3_tokenizer	tsrc/fts1_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	tsrc/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	tsrc/fts2_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	tsrc/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer	tsrc/fts3_tokenizer.h	/^struct sqlite3_tokenizer {$/;"	s
sqlite3_tokenizer	tsrc/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer sqlite3_tokenizer;$/;"	t	typeref:struct:sqlite3_tokenizer
sqlite3_tokenizer_cursor	ext/fts1/fts1_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	ext/fts1/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	ext/fts1/tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	ext/fts1/tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	ext/fts2/fts2_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	ext/fts2/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	ext/fts3/fts3_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	ext/fts3/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	sqlite3.c	/^struct sqlite3_tokenizer_cursor {$/;"	s	file:
sqlite3_tokenizer_cursor	sqlite3.c	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor	file:
sqlite3_tokenizer_cursor	tsrc/fts1_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	tsrc/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	tsrc/fts2_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	tsrc/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_cursor	tsrc/fts3_tokenizer.h	/^struct sqlite3_tokenizer_cursor {$/;"	s
sqlite3_tokenizer_cursor	tsrc/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer_cursor sqlite3_tokenizer_cursor;$/;"	t	typeref:struct:sqlite3_tokenizer_cursor
sqlite3_tokenizer_module	ext/fts1/fts1_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	ext/fts1/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	ext/fts1/tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	ext/fts1/tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	ext/fts2/fts2_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	ext/fts2/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	ext/fts3/fts3_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	ext/fts3/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	sqlite3.c	/^struct sqlite3_tokenizer_module {$/;"	s	file:
sqlite3_tokenizer_module	sqlite3.c	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module	file:
sqlite3_tokenizer_module	tsrc/fts1_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	tsrc/fts1_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	tsrc/fts2_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	tsrc/fts2_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_tokenizer_module	tsrc/fts3_tokenizer.h	/^struct sqlite3_tokenizer_module {$/;"	s
sqlite3_tokenizer_module	tsrc/fts3_tokenizer.h	/^typedef struct sqlite3_tokenizer_module sqlite3_tokenizer_module;$/;"	t	typeref:struct:sqlite3_tokenizer_module
sqlite3_total_changes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	sqlite3.c	109241;"	d	file:
sqlite3_total_changes	sqlite3ext.h	415;"	d
sqlite3_total_changes	src/main.c	/^int sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	src/sqlite3ext.h	415;"	d
sqlite3_total_changes	tsrc/main.c	/^int sqlite3_total_changes(sqlite3 *db){$/;"	f
sqlite3_total_changes	tsrc/sqlite3ext.h	415;"	d
sqlite3_trace	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_trace(sqlite3 *db, void(*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	sqlite3.c	109242;"	d	file:
sqlite3_trace	sqlite3.c	109465;"	d	file:
sqlite3_trace	sqlite3ext.h	416;"	d
sqlite3_trace	src/loadext.c	95;"	d	file:
sqlite3_trace	src/main.c	/^void *sqlite3_trace(sqlite3 *db, void(*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	src/sqlite3ext.h	416;"	d
sqlite3_trace	tsrc/loadext.c	95;"	d	file:
sqlite3_trace	tsrc/main.c	/^void *sqlite3_trace(sqlite3 *db, void(*xTrace)(void*,const char*), void *pArg){$/;"	f
sqlite3_trace	tsrc/sqlite3ext.h	416;"	d
sqlite3_trace_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_trace_v2($/;"	f
sqlite3_trace_v2	sqlite3.c	109367;"	d	file:
sqlite3_trace_v2	sqlite3.c	109484;"	d	file:
sqlite3_trace_v2	sqlite3ext.h	541;"	d
sqlite3_trace_v2	src/loadext.c	114;"	d	file:
sqlite3_trace_v2	src/main.c	/^int sqlite3_trace_v2($/;"	f
sqlite3_trace_v2	src/sqlite3ext.h	541;"	d
sqlite3_trace_v2	tsrc/loadext.c	114;"	d	file:
sqlite3_trace_v2	tsrc/main.c	/^int sqlite3_trace_v2($/;"	f
sqlite3_trace_v2	tsrc/sqlite3ext.h	541;"	d
sqlite3_transfer_bindings	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	sqlite3.c	109244;"	d	file:
sqlite3_transfer_bindings	sqlite3ext.h	418;"	d
sqlite3_transfer_bindings	src/sqlite3ext.h	418;"	d
sqlite3_transfer_bindings	src/vdbeapi.c	/^int sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_transfer_bindings	tsrc/sqlite3ext.h	418;"	d
sqlite3_transfer_bindings	tsrc/vdbeapi.c	/^int sqlite3_transfer_bindings(sqlite3_stmt *pFromStmt, sqlite3_stmt *pToStmt){$/;"	f
sqlite3_uint64	sqlite3.c	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t	file:
sqlite3_uint64	sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_uint64	tsrc/sqlite3.h	/^typedef sqlite_uint64 sqlite3_uint64;$/;"	t
sqlite3_unlock_notify	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	sqlite3.c	109318;"	d	file:
sqlite3_unlock_notify	sqlite3ext.h	492;"	d
sqlite3_unlock_notify	src/notify.c	/^int sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	src/sqlite3ext.h	492;"	d
sqlite3_unlock_notify	tsrc/notify.c	/^int sqlite3_unlock_notify($/;"	f
sqlite3_unlock_notify	tsrc/sqlite3ext.h	492;"	d
sqlite3_update_hook	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_update_hook($/;"	f
sqlite3_update_hook	sqlite3.c	109246;"	d	file:
sqlite3_update_hook	sqlite3ext.h	420;"	d
sqlite3_update_hook	src/main.c	/^void *sqlite3_update_hook($/;"	f
sqlite3_update_hook	src/sqlite3ext.h	420;"	d
sqlite3_update_hook	tsrc/main.c	/^void *sqlite3_update_hook($/;"	f
sqlite3_update_hook	tsrc/sqlite3ext.h	420;"	d
sqlite3_uri_boolean	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){$/;"	f
sqlite3_uri_boolean	sqlite3.c	109334;"	d	file:
sqlite3_uri_boolean	sqlite3ext.h	508;"	d
sqlite3_uri_boolean	src/main.c	/^int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){$/;"	f
sqlite3_uri_boolean	src/sqlite3ext.h	508;"	d
sqlite3_uri_boolean	tsrc/main.c	/^int sqlite3_uri_boolean(const char *zFilename, const char *zParam, int bDflt){$/;"	f
sqlite3_uri_boolean	tsrc/sqlite3ext.h	508;"	d
sqlite3_uri_int64	sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3_uri_int64($/;"	f
sqlite3_uri_int64	sqlite3.c	109335;"	d	file:
sqlite3_uri_int64	sqlite3ext.h	509;"	d
sqlite3_uri_int64	src/main.c	/^sqlite3_int64 sqlite3_uri_int64($/;"	f
sqlite3_uri_int64	src/sqlite3ext.h	509;"	d
sqlite3_uri_int64	tsrc/main.c	/^sqlite3_int64 sqlite3_uri_int64($/;"	f
sqlite3_uri_int64	tsrc/sqlite3ext.h	509;"	d
sqlite3_uri_parameter	sqlite3.c	/^SQLITE_API const char *SQLITE_STDCALL sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_uri_parameter	sqlite3.c	109336;"	d	file:
sqlite3_uri_parameter	sqlite3ext.h	510;"	d
sqlite3_uri_parameter	src/main.c	/^const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_uri_parameter	src/sqlite3ext.h	510;"	d
sqlite3_uri_parameter	tsrc/main.c	/^const char *sqlite3_uri_parameter(const char *zFilename, const char *zParam){$/;"	f
sqlite3_uri_parameter	tsrc/sqlite3ext.h	510;"	d
sqlite3_uri_vsnprintf	sqlite3.c	109337;"	d	file:
sqlite3_uri_vsnprintf	sqlite3ext.h	511;"	d
sqlite3_uri_vsnprintf	src/sqlite3ext.h	511;"	d
sqlite3_uri_vsnprintf	tsrc/sqlite3ext.h	511;"	d
sqlite3_user_add	ext/userauth/userauth.c	/^int sqlite3_user_add($/;"	f
sqlite3_user_authenticate	ext/userauth/userauth.c	/^int sqlite3_user_authenticate($/;"	f
sqlite3_user_change	ext/userauth/userauth.c	/^int sqlite3_user_change($/;"	f
sqlite3_user_data	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	sqlite3.c	109247;"	d	file:
sqlite3_user_data	sqlite3ext.h	421;"	d
sqlite3_user_data	src/sqlite3ext.h	421;"	d
sqlite3_user_data	src/vdbeapi.c	/^void *sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_data	tsrc/sqlite3ext.h	421;"	d
sqlite3_user_data	tsrc/vdbeapi.c	/^void *sqlite3_user_data(sqlite3_context *p){$/;"	f
sqlite3_user_delete	ext/userauth/userauth.c	/^int sqlite3_user_delete($/;"	f
sqlite3_userauth	sqlite3.c	/^struct sqlite3_userauth {$/;"	s	file:
sqlite3_userauth	sqlite3.c	/^typedef struct sqlite3_userauth sqlite3_userauth;$/;"	t	typeref:struct:sqlite3_userauth	file:
sqlite3_userauth	src/sqliteInt.h	/^struct sqlite3_userauth {$/;"	s
sqlite3_userauth	src/sqliteInt.h	/^typedef struct sqlite3_userauth sqlite3_userauth;$/;"	t	typeref:struct:sqlite3_userauth
sqlite3_userauth	tsrc/sqliteInt.h	/^struct sqlite3_userauth {$/;"	s
sqlite3_userauth	tsrc/sqliteInt.h	/^typedef struct sqlite3_userauth sqlite3_userauth;$/;"	t	typeref:struct:sqlite3_userauth
sqlite3_value	sqlite3.c	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem	file:
sqlite3_value	sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value	tsrc/sqlite3.h	/^typedef struct Mem sqlite3_value;$/;"	t	typeref:struct:Mem
sqlite3_value_blob	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	sqlite3.c	109248;"	d	file:
sqlite3_value_blob	sqlite3ext.h	422;"	d
sqlite3_value_blob	src/sqlite3ext.h	422;"	d
sqlite3_value_blob	src/vdbeapi.c	/^const void *sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_blob	tsrc/sqlite3ext.h	422;"	d
sqlite3_value_blob	tsrc/vdbeapi.c	/^const void *sqlite3_value_blob(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	sqlite3.c	109249;"	d	file:
sqlite3_value_bytes	sqlite3ext.h	423;"	d
sqlite3_value_bytes	src/sqlite3ext.h	423;"	d
sqlite3_value_bytes	src/vdbeapi.c	/^int sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes	tsrc/sqlite3ext.h	423;"	d
sqlite3_value_bytes	tsrc/vdbeapi.c	/^int sqlite3_value_bytes(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	sqlite3.c	109250;"	d	file:
sqlite3_value_bytes16	sqlite3ext.h	424;"	d
sqlite3_value_bytes16	src/sqlite3ext.h	424;"	d
sqlite3_value_bytes16	src/vdbeapi.c	/^int sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_bytes16	tsrc/sqlite3ext.h	424;"	d
sqlite3_value_bytes16	tsrc/vdbeapi.c	/^int sqlite3_value_bytes16(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	sqlite3.c	/^SQLITE_API double SQLITE_STDCALL sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	sqlite3.c	109251;"	d	file:
sqlite3_value_double	sqlite3ext.h	425;"	d
sqlite3_value_double	src/sqlite3ext.h	425;"	d
sqlite3_value_double	src/vdbeapi.c	/^double sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_double	tsrc/sqlite3ext.h	425;"	d
sqlite3_value_double	tsrc/vdbeapi.c	/^double sqlite3_value_double(sqlite3_value *pVal){$/;"	f
sqlite3_value_dup	sqlite3.c	/^SQLITE_API sqlite3_value *SQLITE_STDCALL sqlite3_value_dup(const sqlite3_value *pOrig){$/;"	f
sqlite3_value_dup	sqlite3.c	109353;"	d	file:
sqlite3_value_dup	sqlite3ext.h	527;"	d
sqlite3_value_dup	src/sqlite3ext.h	527;"	d
sqlite3_value_dup	src/vdbeapi.c	/^sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){$/;"	f
sqlite3_value_dup	tsrc/sqlite3ext.h	527;"	d
sqlite3_value_dup	tsrc/vdbeapi.c	/^sqlite3_value *sqlite3_value_dup(const sqlite3_value *pOrig){$/;"	f
sqlite3_value_free	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_value_free(sqlite3_value *pOld){$/;"	f
sqlite3_value_free	sqlite3.c	109354;"	d	file:
sqlite3_value_free	sqlite3ext.h	528;"	d
sqlite3_value_free	src/sqlite3ext.h	528;"	d
sqlite3_value_free	src/vdbeapi.c	/^void sqlite3_value_free(sqlite3_value *pOld){$/;"	f
sqlite3_value_free	tsrc/sqlite3ext.h	528;"	d
sqlite3_value_free	tsrc/vdbeapi.c	/^void sqlite3_value_free(sqlite3_value *pOld){$/;"	f
sqlite3_value_int	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	sqlite3.c	109252;"	d	file:
sqlite3_value_int	sqlite3ext.h	426;"	d
sqlite3_value_int	src/sqlite3ext.h	426;"	d
sqlite3_value_int	src/vdbeapi.c	/^int sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int	tsrc/sqlite3ext.h	426;"	d
sqlite3_value_int	tsrc/vdbeapi.c	/^int sqlite3_value_int(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	sqlite3.c	/^SQLITE_API sqlite_int64 SQLITE_STDCALL sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	sqlite3.c	109253;"	d	file:
sqlite3_value_int64	sqlite3ext.h	427;"	d
sqlite3_value_int64	src/sqlite3ext.h	427;"	d
sqlite3_value_int64	src/vdbeapi.c	/^sqlite_int64 sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_int64	tsrc/sqlite3ext.h	427;"	d
sqlite3_value_int64	tsrc/vdbeapi.c	/^sqlite_int64 sqlite3_value_int64(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	sqlite3.c	109254;"	d	file:
sqlite3_value_numeric_type	sqlite3ext.h	428;"	d
sqlite3_value_numeric_type	src/sqlite3ext.h	428;"	d
sqlite3_value_numeric_type	src/vdbe.c	/^int sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_numeric_type	tsrc/sqlite3ext.h	428;"	d
sqlite3_value_numeric_type	tsrc/vdbe.c	/^int sqlite3_value_numeric_type(sqlite3_value *pVal){$/;"	f
sqlite3_value_subtype	sqlite3.c	/^SQLITE_API unsigned int SQLITE_STDCALL sqlite3_value_subtype(sqlite3_value *pVal){$/;"	f
sqlite3_value_subtype	sqlite3.c	109358;"	d	file:
sqlite3_value_subtype	sqlite3ext.h	532;"	d
sqlite3_value_subtype	src/sqlite3ext.h	532;"	d
sqlite3_value_subtype	src/vdbeapi.c	/^unsigned int sqlite3_value_subtype(sqlite3_value *pVal){$/;"	f
sqlite3_value_subtype	tsrc/sqlite3ext.h	532;"	d
sqlite3_value_subtype	tsrc/vdbeapi.c	/^unsigned int sqlite3_value_subtype(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	sqlite3.c	/^SQLITE_API const unsigned char *SQLITE_STDCALL sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	sqlite3.c	109255;"	d	file:
sqlite3_value_text	sqlite3ext.h	429;"	d
sqlite3_value_text	src/sqlite3ext.h	429;"	d
sqlite3_value_text	src/vdbeapi.c	/^const unsigned char *sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text	tsrc/sqlite3ext.h	429;"	d
sqlite3_value_text	tsrc/vdbeapi.c	/^const unsigned char *sqlite3_value_text(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	sqlite3.c	109256;"	d	file:
sqlite3_value_text16	sqlite3.c	109429;"	d	file:
sqlite3_value_text16	sqlite3ext.h	430;"	d
sqlite3_value_text16	src/loadext.c	59;"	d	file:
sqlite3_value_text16	src/sqlite3ext.h	430;"	d
sqlite3_value_text16	src/vdbeapi.c	/^const void *sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16	tsrc/loadext.c	59;"	d	file:
sqlite3_value_text16	tsrc/sqlite3ext.h	430;"	d
sqlite3_value_text16	tsrc/vdbeapi.c	/^const void *sqlite3_value_text16(sqlite3_value* pVal){$/;"	f
sqlite3_value_text16be	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	sqlite3.c	109257;"	d	file:
sqlite3_value_text16be	sqlite3.c	109430;"	d	file:
sqlite3_value_text16be	sqlite3ext.h	431;"	d
sqlite3_value_text16be	src/loadext.c	60;"	d	file:
sqlite3_value_text16be	src/sqlite3ext.h	431;"	d
sqlite3_value_text16be	src/vdbeapi.c	/^const void *sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16be	tsrc/loadext.c	60;"	d	file:
sqlite3_value_text16be	tsrc/sqlite3ext.h	431;"	d
sqlite3_value_text16be	tsrc/vdbeapi.c	/^const void *sqlite3_value_text16be(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	sqlite3.c	/^SQLITE_API const void *SQLITE_STDCALL sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	sqlite3.c	109258;"	d	file:
sqlite3_value_text16le	sqlite3.c	109431;"	d	file:
sqlite3_value_text16le	sqlite3ext.h	432;"	d
sqlite3_value_text16le	src/loadext.c	61;"	d	file:
sqlite3_value_text16le	src/sqlite3ext.h	432;"	d
sqlite3_value_text16le	src/vdbeapi.c	/^const void *sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_text16le	tsrc/loadext.c	61;"	d	file:
sqlite3_value_text16le	tsrc/sqlite3ext.h	432;"	d
sqlite3_value_text16le	tsrc/vdbeapi.c	/^const void *sqlite3_value_text16le(sqlite3_value *pVal){$/;"	f
sqlite3_value_type	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	sqlite3.c	109259;"	d	file:
sqlite3_value_type	sqlite3ext.h	433;"	d
sqlite3_value_type	src/sqlite3ext.h	433;"	d
sqlite3_value_type	src/vdbeapi.c	/^int sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_value_type	tsrc/sqlite3ext.h	433;"	d
sqlite3_value_type	tsrc/vdbeapi.c	/^int sqlite3_value_type(sqlite3_value* pVal){$/;"	f
sqlite3_version	sqlite3.c	/^SQLITE_API const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_version	src/main.c	/^const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	tsrc/main.c	/^const char sqlite3_version[] = SQLITE_VERSION;$/;"	v
sqlite3_version	tsrc/sqlite3.h	/^SQLITE_API SQLITE_EXTERN const char sqlite3_version[];$/;"	v
sqlite3_vfs	sqlite3.c	/^struct sqlite3_vfs {$/;"	s	file:
sqlite3_vfs	sqlite3.c	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs	file:
sqlite3_vfs	sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs	tsrc/sqlite3.h	/^struct sqlite3_vfs {$/;"	s
sqlite3_vfs	tsrc/sqlite3.h	/^typedef struct sqlite3_vfs sqlite3_vfs;$/;"	t	typeref:struct:sqlite3_vfs
sqlite3_vfs_find	sqlite3.c	/^SQLITE_API sqlite3_vfs *SQLITE_STDCALL sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	sqlite3.c	109287;"	d	file:
sqlite3_vfs_find	sqlite3ext.h	461;"	d
sqlite3_vfs_find	src/os.c	/^sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	src/sqlite3ext.h	461;"	d
sqlite3_vfs_find	tsrc/os.c	/^sqlite3_vfs *sqlite3_vfs_find(const char *zVfs){$/;"	f
sqlite3_vfs_find	tsrc/sqlite3ext.h	461;"	d
sqlite3_vfs_register	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	sqlite3.c	109288;"	d	file:
sqlite3_vfs_register	sqlite3ext.h	462;"	d
sqlite3_vfs_register	src/os.c	/^int sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	src/sqlite3ext.h	462;"	d
sqlite3_vfs_register	tsrc/os.c	/^int sqlite3_vfs_register(sqlite3_vfs *pVfs, int makeDflt){$/;"	f
sqlite3_vfs_register	tsrc/sqlite3ext.h	462;"	d
sqlite3_vfs_unregister	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	sqlite3.c	109289;"	d	file:
sqlite3_vfs_unregister	sqlite3ext.h	463;"	d
sqlite3_vfs_unregister	src/os.c	/^int sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	src/sqlite3ext.h	463;"	d
sqlite3_vfs_unregister	tsrc/os.c	/^int sqlite3_vfs_unregister(sqlite3_vfs *pVfs){$/;"	f
sqlite3_vfs_unregister	tsrc/sqlite3ext.h	463;"	d
sqlite3_vfslog_annotate	src/test_osinst.c	/^int sqlite3_vfslog_annotate(const char *zVfs, const char *zMsg){$/;"	f
sqlite3_vfslog_finalize	src/test_osinst.c	/^int sqlite3_vfslog_finalize(const char *zVfs){$/;"	f
sqlite3_vfslog_new	src/test_osinst.c	/^int sqlite3_vfslog_new($/;"	f
sqlite3_vfslog_register	src/test_osinst.c	/^int sqlite3_vfslog_register(sqlite3 *db){$/;"	f
sqlite3_vmprintf	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	sqlite3.c	109260;"	d	file:
sqlite3_vmprintf	sqlite3ext.h	434;"	d
sqlite3_vmprintf	src/printf.c	/^char *sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	src/sqlite3ext.h	434;"	d
sqlite3_vmprintf	tsrc/printf.c	/^char *sqlite3_vmprintf(const char *zFormat, va_list ap){$/;"	f
sqlite3_vmprintf	tsrc/sqlite3ext.h	434;"	d
sqlite3_vsnprintf	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vsnprintf	sqlite3.c	109261;"	d	file:
sqlite3_vsnprintf	sqlite3ext.h	435;"	d
sqlite3_vsnprintf	src/printf.c	/^char *sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vsnprintf	src/sqlite3ext.h	435;"	d
sqlite3_vsnprintf	tsrc/printf.c	/^char *sqlite3_vsnprintf(int n, char *zBuf, const char *zFormat, va_list ap){$/;"	f
sqlite3_vsnprintf	tsrc/sqlite3ext.h	435;"	d
sqlite3_vtab	sqlite3.c	/^struct sqlite3_vtab {$/;"	s	file:
sqlite3_vtab	sqlite3.c	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab	file:
sqlite3_vtab	sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab	tsrc/sqlite3.h	/^struct sqlite3_vtab {$/;"	s
sqlite3_vtab	tsrc/sqlite3.h	/^typedef struct sqlite3_vtab sqlite3_vtab;$/;"	t	typeref:struct:sqlite3_vtab
sqlite3_vtab_config	sqlite3.c	/^SQLITE_API int SQLITE_CDECL sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	sqlite3.c	109323;"	d	file:
sqlite3_vtab_config	sqlite3.c	109455;"	d	file:
sqlite3_vtab_config	sqlite3ext.h	497;"	d
sqlite3_vtab_config	src/loadext.c	85;"	d	file:
sqlite3_vtab_config	src/sqlite3ext.h	497;"	d
sqlite3_vtab_config	src/vtab.c	/^int sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_config	tsrc/loadext.c	85;"	d	file:
sqlite3_vtab_config	tsrc/sqlite3ext.h	497;"	d
sqlite3_vtab_config	tsrc/vtab.c	/^int sqlite3_vtab_config(sqlite3 *db, int op, ...){$/;"	f
sqlite3_vtab_cursor	sqlite3.c	/^struct sqlite3_vtab_cursor {$/;"	s	file:
sqlite3_vtab_cursor	sqlite3.c	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor	file:
sqlite3_vtab_cursor	sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_cursor	tsrc/sqlite3.h	/^struct sqlite3_vtab_cursor {$/;"	s
sqlite3_vtab_cursor	tsrc/sqlite3.h	/^typedef struct sqlite3_vtab_cursor sqlite3_vtab_cursor;$/;"	t	typeref:struct:sqlite3_vtab_cursor
sqlite3_vtab_on_conflict	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	sqlite3.c	109324;"	d	file:
sqlite3_vtab_on_conflict	sqlite3.c	109456;"	d	file:
sqlite3_vtab_on_conflict	sqlite3ext.h	498;"	d
sqlite3_vtab_on_conflict	src/loadext.c	86;"	d	file:
sqlite3_vtab_on_conflict	src/sqlite3ext.h	498;"	d
sqlite3_vtab_on_conflict	src/vtab.c	/^int sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_vtab_on_conflict	tsrc/loadext.c	86;"	d	file:
sqlite3_vtab_on_conflict	tsrc/sqlite3ext.h	498;"	d
sqlite3_vtab_on_conflict	tsrc/vtab.c	/^int sqlite3_vtab_on_conflict(sqlite3 *db){$/;"	f
sqlite3_wal_autocheckpoint	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	sqlite3.c	109319;"	d	file:
sqlite3_wal_autocheckpoint	sqlite3ext.h	493;"	d
sqlite3_wal_autocheckpoint	src/main.c	/^int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	src/sqlite3ext.h	493;"	d
sqlite3_wal_autocheckpoint	tsrc/main.c	/^int sqlite3_wal_autocheckpoint(sqlite3 *db, int nFrame){$/;"	f
sqlite3_wal_autocheckpoint	tsrc/sqlite3ext.h	493;"	d
sqlite3_wal_checkpoint	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	sqlite3.c	109320;"	d	file:
sqlite3_wal_checkpoint	sqlite3ext.h	494;"	d
sqlite3_wal_checkpoint	src/main.c	/^int sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	src/sqlite3ext.h	494;"	d
sqlite3_wal_checkpoint	tsrc/main.c	/^int sqlite3_wal_checkpoint(sqlite3 *db, const char *zDb){$/;"	f
sqlite3_wal_checkpoint	tsrc/sqlite3ext.h	494;"	d
sqlite3_wal_checkpoint_v2	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_checkpoint_v2	sqlite3.c	109338;"	d	file:
sqlite3_wal_checkpoint_v2	sqlite3ext.h	512;"	d
sqlite3_wal_checkpoint_v2	src/main.c	/^int sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_checkpoint_v2	src/sqlite3ext.h	512;"	d
sqlite3_wal_checkpoint_v2	tsrc/main.c	/^int sqlite3_wal_checkpoint_v2($/;"	f
sqlite3_wal_checkpoint_v2	tsrc/sqlite3ext.h	512;"	d
sqlite3_wal_hook	sqlite3.c	/^SQLITE_API void *SQLITE_STDCALL sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	sqlite3.c	109321;"	d	file:
sqlite3_wal_hook	sqlite3ext.h	495;"	d
sqlite3_wal_hook	src/main.c	/^void *sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	src/sqlite3ext.h	495;"	d
sqlite3_wal_hook	tsrc/main.c	/^void *sqlite3_wal_hook($/;"	f
sqlite3_wal_hook	tsrc/sqlite3ext.h	495;"	d
sqlite3_win32_compact_heap	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_compact_heap(LPUINT pnLargest){$/;"	f
sqlite3_win32_compact_heap	src/os_win.c	/^int sqlite3_win32_compact_heap(LPUINT pnLargest){$/;"	f
sqlite3_win32_compact_heap	tsrc/os_win.c	/^int sqlite3_win32_compact_heap(LPUINT pnLargest){$/;"	f
sqlite3_win32_is_nt	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_is_nt(void){$/;"	f
sqlite3_win32_is_nt	src/os_win.c	/^int sqlite3_win32_is_nt(void){$/;"	f
sqlite3_win32_is_nt	tsrc/os_win.c	/^int sqlite3_win32_is_nt(void){$/;"	f
sqlite3_win32_mbcs_to_utf8	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_mbcs_to_utf8(const char *zText){$/;"	f
sqlite3_win32_mbcs_to_utf8	src/os_win.c	/^char *sqlite3_win32_mbcs_to_utf8(const char *zText){$/;"	f
sqlite3_win32_mbcs_to_utf8	tsrc/os_win.c	/^char *sqlite3_win32_mbcs_to_utf8(const char *zText){$/;"	f
sqlite3_win32_mbcs_to_utf8_v2	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_mbcs_to_utf8_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_mbcs_to_utf8_v2	src/os_win.c	/^char *sqlite3_win32_mbcs_to_utf8_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_mbcs_to_utf8_v2	tsrc/os_win.c	/^char *sqlite3_win32_mbcs_to_utf8_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_reset_heap	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_reset_heap(){$/;"	f
sqlite3_win32_reset_heap	src/os_win.c	/^int sqlite3_win32_reset_heap(){$/;"	f
sqlite3_win32_reset_heap	tsrc/os_win.c	/^int sqlite3_win32_reset_heap(){$/;"	f
sqlite3_win32_set_directory	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3_win32_set_directory(DWORD type, LPCWSTR zValue){$/;"	f
sqlite3_win32_set_directory	src/os_win.c	/^int sqlite3_win32_set_directory(DWORD type, LPCWSTR zValue){$/;"	f
sqlite3_win32_set_directory	tsrc/os_win.c	/^int sqlite3_win32_set_directory(DWORD type, LPCWSTR zValue){$/;"	f
sqlite3_win32_sleep	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_win32_sleep(DWORD milliseconds){$/;"	f
sqlite3_win32_sleep	src/os_win.c	/^void sqlite3_win32_sleep(DWORD milliseconds){$/;"	f
sqlite3_win32_sleep	tsrc/os_win.c	/^void sqlite3_win32_sleep(DWORD milliseconds){$/;"	f
sqlite3_win32_unicode_to_utf8	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_unicode_to_utf8(LPCWSTR zWideText){$/;"	f
sqlite3_win32_unicode_to_utf8	src/os_win.c	/^char *sqlite3_win32_unicode_to_utf8(LPCWSTR zWideText){$/;"	f
sqlite3_win32_unicode_to_utf8	tsrc/os_win.c	/^char *sqlite3_win32_unicode_to_utf8(LPCWSTR zWideText){$/;"	f
sqlite3_win32_utf8_to_mbcs	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_utf8_to_mbcs(const char *zText){$/;"	f
sqlite3_win32_utf8_to_mbcs	src/os_win.c	/^char *sqlite3_win32_utf8_to_mbcs(const char *zText){$/;"	f
sqlite3_win32_utf8_to_mbcs	tsrc/os_win.c	/^char *sqlite3_win32_utf8_to_mbcs(const char *zText){$/;"	f
sqlite3_win32_utf8_to_mbcs_v2	sqlite3.c	/^SQLITE_API char *SQLITE_STDCALL sqlite3_win32_utf8_to_mbcs_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_utf8_to_mbcs_v2	src/os_win.c	/^char *sqlite3_win32_utf8_to_mbcs_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_utf8_to_mbcs_v2	tsrc/os_win.c	/^char *sqlite3_win32_utf8_to_mbcs_v2(const char *zText, int useAnsi){$/;"	f
sqlite3_win32_utf8_to_unicode	sqlite3.c	/^SQLITE_API LPWSTR SQLITE_STDCALL sqlite3_win32_utf8_to_unicode(const char *zText){$/;"	f
sqlite3_win32_utf8_to_unicode	src/os_win.c	/^LPWSTR sqlite3_win32_utf8_to_unicode(const char *zText){$/;"	f
sqlite3_win32_utf8_to_unicode	tsrc/os_win.c	/^LPWSTR sqlite3_win32_utf8_to_unicode(const char *zText){$/;"	f
sqlite3_win32_write_debug	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3_win32_write_debug(const char *zBuf, int nBuf){$/;"	f
sqlite3_win32_write_debug	src/os_win.c	/^void sqlite3_win32_write_debug(const char *zBuf, int nBuf){$/;"	f
sqlite3_win32_write_debug	tsrc/os_win.c	/^void sqlite3_win32_write_debug(const char *zBuf, int nBuf){$/;"	f
sqlite3_wsd_find	src/test_wsd.c	/^void *sqlite3_wsd_find(void *K, int L){$/;"	f
sqlite3_wsd_init	src/test_wsd.c	/^int sqlite3_wsd_init(int N, int J){$/;"	f
sqlite3_xauth	sqlite3.c	/^  typedef int (*sqlite3_xauth)(void*,int,const char*,const char*,const char*,$/;"	t	file:
sqlite3_xauth	src/sqliteInt.h	/^  typedef int (*sqlite3_xauth)(void*,int,const char*,const char*,const char*,$/;"	t
sqlite3_xauth	tsrc/sqliteInt.h	/^  typedef int (*sqlite3_xauth)(void*,int,const char*,const char*,const char*,$/;"	t
sqlite3_xferopt_count	sqlite3.c	/^SQLITE_API int sqlite3_xferopt_count;$/;"	v
sqlite3_xferopt_count	src/insert.c	/^int sqlite3_xferopt_count;$/;"	v
sqlite3_xferopt_count	tsrc/insert.c	/^int sqlite3_xferopt_count;$/;"	v
sqlite3async_control	ext/async/sqlite3async.c	/^int sqlite3async_control(int op, ...){$/;"	f
sqlite3async_initialize	ext/async/sqlite3async.c	/^int sqlite3async_initialize(const char *zParent, int isDefault){$/;"	f
sqlite3async_run	ext/async/sqlite3async.c	/^void sqlite3async_run(void){$/;"	f
sqlite3async_shutdown	ext/async/sqlite3async.c	/^void sqlite3async_shutdown(void){$/;"	f
sqlite3async_trace	ext/async/sqlite3async.c	/^static int sqlite3async_trace = 0;$/;"	v	file:
sqlite3changegroup_add	ext/session/sqlite3session.c	/^int sqlite3changegroup_add(sqlite3_changegroup *pGrp, int nData, void *pData){$/;"	f
sqlite3changegroup_add	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changegroup_add(sqlite3_changegroup *pGrp, int nData, void *pData){$/;"	f
sqlite3changegroup_add	tsrc/sqlite3session.c	/^int sqlite3changegroup_add(sqlite3_changegroup *pGrp, int nData, void *pData){$/;"	f
sqlite3changegroup_add_strm	ext/session/sqlite3session.c	/^int sqlite3changegroup_add_strm($/;"	f
sqlite3changegroup_add_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changegroup_add_strm($/;"	f
sqlite3changegroup_add_strm	tsrc/sqlite3session.c	/^int sqlite3changegroup_add_strm($/;"	f
sqlite3changegroup_delete	ext/session/sqlite3session.c	/^void sqlite3changegroup_delete(sqlite3_changegroup *pGrp){$/;"	f
sqlite3changegroup_delete	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3changegroup_delete(sqlite3_changegroup *pGrp){$/;"	f
sqlite3changegroup_delete	tsrc/sqlite3session.c	/^void sqlite3changegroup_delete(sqlite3_changegroup *pGrp){$/;"	f
sqlite3changegroup_new	ext/session/sqlite3session.c	/^int sqlite3changegroup_new(sqlite3_changegroup **pp){$/;"	f
sqlite3changegroup_new	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changegroup_new(sqlite3_changegroup **pp){$/;"	f
sqlite3changegroup_new	tsrc/sqlite3session.c	/^int sqlite3changegroup_new(sqlite3_changegroup **pp){$/;"	f
sqlite3changegroup_output	ext/session/sqlite3session.c	/^int sqlite3changegroup_output($/;"	f
sqlite3changegroup_output	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changegroup_output($/;"	f
sqlite3changegroup_output	tsrc/sqlite3session.c	/^int sqlite3changegroup_output($/;"	f
sqlite3changegroup_output_strm	ext/session/sqlite3session.c	/^int sqlite3changegroup_output_strm($/;"	f
sqlite3changegroup_output_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changegroup_output_strm($/;"	f
sqlite3changegroup_output_strm	tsrc/sqlite3session.c	/^int sqlite3changegroup_output_strm($/;"	f
sqlite3changeset_apply	ext/session/sqlite3session.c	/^int sqlite3changeset_apply($/;"	f
sqlite3changeset_apply	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_apply($/;"	f
sqlite3changeset_apply	tsrc/sqlite3session.c	/^int sqlite3changeset_apply($/;"	f
sqlite3changeset_apply_strm	ext/session/sqlite3session.c	/^int sqlite3changeset_apply_strm($/;"	f
sqlite3changeset_apply_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_apply_strm($/;"	f
sqlite3changeset_apply_strm	tsrc/sqlite3session.c	/^int sqlite3changeset_apply_strm($/;"	f
sqlite3changeset_concat	ext/session/sqlite3session.c	/^int sqlite3changeset_concat($/;"	f
sqlite3changeset_concat	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_concat($/;"	f
sqlite3changeset_concat	tsrc/sqlite3session.c	/^int sqlite3changeset_concat($/;"	f
sqlite3changeset_concat_strm	ext/session/sqlite3session.c	/^int sqlite3changeset_concat_strm($/;"	f
sqlite3changeset_concat_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_concat_strm($/;"	f
sqlite3changeset_concat_strm	tsrc/sqlite3session.c	/^int sqlite3changeset_concat_strm($/;"	f
sqlite3changeset_conflict	ext/session/sqlite3session.c	/^int sqlite3changeset_conflict($/;"	f
sqlite3changeset_conflict	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_conflict($/;"	f
sqlite3changeset_conflict	tsrc/sqlite3session.c	/^int sqlite3changeset_conflict($/;"	f
sqlite3changeset_finalize	ext/session/sqlite3session.c	/^int sqlite3changeset_finalize(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_finalize	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_finalize(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_finalize	tsrc/sqlite3session.c	/^int sqlite3changeset_finalize(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_fk_conflicts	ext/session/sqlite3session.c	/^int sqlite3changeset_fk_conflicts($/;"	f
sqlite3changeset_fk_conflicts	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_fk_conflicts($/;"	f
sqlite3changeset_fk_conflicts	tsrc/sqlite3session.c	/^int sqlite3changeset_fk_conflicts($/;"	f
sqlite3changeset_invert	ext/session/sqlite3session.c	/^int sqlite3changeset_invert($/;"	f
sqlite3changeset_invert	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_invert($/;"	f
sqlite3changeset_invert	tsrc/sqlite3session.c	/^int sqlite3changeset_invert($/;"	f
sqlite3changeset_invert_strm	ext/session/sqlite3session.c	/^int sqlite3changeset_invert_strm($/;"	f
sqlite3changeset_invert_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_invert_strm($/;"	f
sqlite3changeset_invert_strm	tsrc/sqlite3session.c	/^int sqlite3changeset_invert_strm($/;"	f
sqlite3changeset_new	ext/session/sqlite3session.c	/^int sqlite3changeset_new($/;"	f
sqlite3changeset_new	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_new($/;"	f
sqlite3changeset_new	tsrc/sqlite3session.c	/^int sqlite3changeset_new($/;"	f
sqlite3changeset_next	ext/session/sqlite3session.c	/^int sqlite3changeset_next(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_next	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_next(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_next	tsrc/sqlite3session.c	/^int sqlite3changeset_next(sqlite3_changeset_iter *p){$/;"	f
sqlite3changeset_old	ext/session/sqlite3session.c	/^int sqlite3changeset_old($/;"	f
sqlite3changeset_old	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_old($/;"	f
sqlite3changeset_old	tsrc/sqlite3session.c	/^int sqlite3changeset_old($/;"	f
sqlite3changeset_op	ext/session/sqlite3session.c	/^int sqlite3changeset_op($/;"	f
sqlite3changeset_op	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_op($/;"	f
sqlite3changeset_op	tsrc/sqlite3session.c	/^int sqlite3changeset_op($/;"	f
sqlite3changeset_pk	ext/session/sqlite3session.c	/^int sqlite3changeset_pk($/;"	f
sqlite3changeset_pk	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_pk($/;"	f
sqlite3changeset_pk	tsrc/sqlite3session.c	/^int sqlite3changeset_pk($/;"	f
sqlite3changeset_start	ext/session/sqlite3session.c	/^int sqlite3changeset_start($/;"	f
sqlite3changeset_start	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_start($/;"	f
sqlite3changeset_start	tsrc/sqlite3session.c	/^int sqlite3changeset_start($/;"	f
sqlite3changeset_start_strm	ext/session/sqlite3session.c	/^int sqlite3changeset_start_strm($/;"	f
sqlite3changeset_start_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3changeset_start_strm($/;"	f
sqlite3changeset_start_strm	tsrc/sqlite3session.c	/^int sqlite3changeset_start_strm($/;"	f
sqlite3demo_superlock	src/test_superlock.c	/^int sqlite3demo_superlock($/;"	f
sqlite3demo_superunlock	src/test_superlock.c	/^void sqlite3demo_superunlock(void *pLock){$/;"	f
sqlite3one	sqlite3.c	/^  const int sqlite3one = 1;$/;"	v
sqlite3one	sqlite3.c	/^SQLITE_PRIVATE const int sqlite3one = 1;$/;"	v
sqlite3one	src/sqliteInt.h	/^  const int sqlite3one = 1;$/;"	v
sqlite3one	src/utf.c	/^const int sqlite3one = 1;$/;"	v
sqlite3one	tsrc/sqliteInt.h	/^  const int sqlite3one = 1;$/;"	v
sqlite3one	tsrc/utf.c	/^const int sqlite3one = 1;$/;"	v
sqlite3rbu	ext/rbu/sqlite3rbu.c	/^struct sqlite3rbu {$/;"	s	file:
sqlite3rbu	ext/rbu/sqlite3rbu.h	/^typedef struct sqlite3rbu sqlite3rbu;$/;"	t	typeref:struct:sqlite3rbu
sqlite3rbu	sqlite3.c	/^struct sqlite3rbu {$/;"	s	file:
sqlite3rbu	sqlite3.c	/^typedef struct sqlite3rbu sqlite3rbu;$/;"	t	typeref:struct:sqlite3rbu	file:
sqlite3rbu	tsrc/sqlite3rbu.c	/^struct sqlite3rbu {$/;"	s	file:
sqlite3rbu	tsrc/sqlite3rbu.h	/^typedef struct sqlite3rbu sqlite3rbu;$/;"	t	typeref:struct:sqlite3rbu
sqlite3rbu_bp_progress	ext/rbu/sqlite3rbu.c	/^void sqlite3rbu_bp_progress(sqlite3rbu *p, int *pnOne, int *pnTwo){$/;"	f
sqlite3rbu_bp_progress	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3rbu_bp_progress(sqlite3rbu *p, int *pnOne, int *pnTwo){$/;"	f
sqlite3rbu_bp_progress	tsrc/sqlite3rbu.c	/^void sqlite3rbu_bp_progress(sqlite3rbu *p, int *pnOne, int *pnTwo){$/;"	f
sqlite3rbu_close	ext/rbu/sqlite3rbu.c	/^int sqlite3rbu_close(sqlite3rbu *p, char **pzErrmsg){$/;"	f
sqlite3rbu_close	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_close(sqlite3rbu *p, char **pzErrmsg){$/;"	f
sqlite3rbu_close	tsrc/sqlite3rbu.c	/^int sqlite3rbu_close(sqlite3rbu *p, char **pzErrmsg){$/;"	f
sqlite3rbu_create_vfs	ext/rbu/sqlite3rbu.c	/^int sqlite3rbu_create_vfs(const char *zName, const char *zParent){$/;"	f
sqlite3rbu_create_vfs	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_create_vfs(const char *zName, const char *zParent){$/;"	f
sqlite3rbu_create_vfs	tsrc/sqlite3rbu.c	/^int sqlite3rbu_create_vfs(const char *zName, const char *zParent){$/;"	f
sqlite3rbu_db	ext/rbu/sqlite3rbu.c	/^sqlite3 *sqlite3rbu_db(sqlite3rbu *pRbu, int bRbu){$/;"	f
sqlite3rbu_db	sqlite3.c	/^SQLITE_API sqlite3 *SQLITE_STDCALL sqlite3rbu_db(sqlite3rbu *pRbu, int bRbu){$/;"	f
sqlite3rbu_db	tsrc/sqlite3rbu.c	/^sqlite3 *sqlite3rbu_db(sqlite3rbu *pRbu, int bRbu){$/;"	f
sqlite3rbu_destroy_vfs	ext/rbu/sqlite3rbu.c	/^void sqlite3rbu_destroy_vfs(const char *zName){$/;"	f
sqlite3rbu_destroy_vfs	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3rbu_destroy_vfs(const char *zName){$/;"	f
sqlite3rbu_destroy_vfs	tsrc/sqlite3rbu.c	/^void sqlite3rbu_destroy_vfs(const char *zName){$/;"	f
sqlite3rbu_open	ext/rbu/sqlite3rbu.c	/^sqlite3rbu *sqlite3rbu_open($/;"	f
sqlite3rbu_open	sqlite3.c	/^SQLITE_API sqlite3rbu *SQLITE_STDCALL sqlite3rbu_open($/;"	f
sqlite3rbu_open	tsrc/sqlite3rbu.c	/^sqlite3rbu *sqlite3rbu_open($/;"	f
sqlite3rbu_progress	ext/rbu/sqlite3rbu.c	/^sqlite3_int64 sqlite3rbu_progress(sqlite3rbu *pRbu){$/;"	f
sqlite3rbu_progress	sqlite3.c	/^SQLITE_API sqlite3_int64 SQLITE_STDCALL sqlite3rbu_progress(sqlite3rbu *pRbu){$/;"	f
sqlite3rbu_progress	tsrc/sqlite3rbu.c	/^sqlite3_int64 sqlite3rbu_progress(sqlite3rbu *pRbu){$/;"	f
sqlite3rbu_savestate	ext/rbu/sqlite3rbu.c	/^int sqlite3rbu_savestate(sqlite3rbu *p){$/;"	f
sqlite3rbu_savestate	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_savestate(sqlite3rbu *p){$/;"	f
sqlite3rbu_savestate	tsrc/sqlite3rbu.c	/^int sqlite3rbu_savestate(sqlite3rbu *p){$/;"	f
sqlite3rbu_state	ext/rbu/sqlite3rbu.c	/^int sqlite3rbu_state(sqlite3rbu *p){$/;"	f
sqlite3rbu_state	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_state(sqlite3rbu *p){$/;"	f
sqlite3rbu_state	tsrc/sqlite3rbu.c	/^int sqlite3rbu_state(sqlite3rbu *p){$/;"	f
sqlite3rbu_step	ext/rbu/sqlite3rbu.c	/^int sqlite3rbu_step(sqlite3rbu *p){$/;"	f
sqlite3rbu_step	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3rbu_step(sqlite3rbu *p){$/;"	f
sqlite3rbu_step	tsrc/sqlite3rbu.c	/^int sqlite3rbu_step(sqlite3rbu *p){$/;"	f
sqlite3rbu_vacuum	ext/rbu/sqlite3rbu.c	/^sqlite3rbu *sqlite3rbu_vacuum($/;"	f
sqlite3rbu_vacuum	sqlite3.c	/^SQLITE_API sqlite3rbu *SQLITE_STDCALL sqlite3rbu_vacuum($/;"	f
sqlite3rbu_vacuum	tsrc/sqlite3rbu.c	/^sqlite3rbu *sqlite3rbu_vacuum($/;"	f
sqlite3session_attach	ext/session/sqlite3session.c	/^int sqlite3session_attach($/;"	f
sqlite3session_attach	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_attach($/;"	f
sqlite3session_attach	tsrc/sqlite3session.c	/^int sqlite3session_attach($/;"	f
sqlite3session_changeset	ext/session/sqlite3session.c	/^int sqlite3session_changeset($/;"	f
sqlite3session_changeset	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_changeset($/;"	f
sqlite3session_changeset	tsrc/sqlite3session.c	/^int sqlite3session_changeset($/;"	f
sqlite3session_changeset_strm	ext/session/sqlite3session.c	/^int sqlite3session_changeset_strm($/;"	f
sqlite3session_changeset_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_changeset_strm($/;"	f
sqlite3session_changeset_strm	tsrc/sqlite3session.c	/^int sqlite3session_changeset_strm($/;"	f
sqlite3session_create	ext/session/sqlite3session.c	/^int sqlite3session_create($/;"	f
sqlite3session_create	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_create($/;"	f
sqlite3session_create	tsrc/sqlite3session.c	/^int sqlite3session_create($/;"	f
sqlite3session_delete	ext/session/sqlite3session.c	/^void sqlite3session_delete(sqlite3_session *pSession){$/;"	f
sqlite3session_delete	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3session_delete(sqlite3_session *pSession){$/;"	f
sqlite3session_delete	tsrc/sqlite3session.c	/^void sqlite3session_delete(sqlite3_session *pSession){$/;"	f
sqlite3session_diff	ext/session/sqlite3session.c	/^int sqlite3session_diff($/;"	f
sqlite3session_diff	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_diff($/;"	f
sqlite3session_diff	tsrc/sqlite3session.c	/^int sqlite3session_diff($/;"	f
sqlite3session_enable	ext/session/sqlite3session.c	/^int sqlite3session_enable(sqlite3_session *pSession, int bEnable){$/;"	f
sqlite3session_enable	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_enable(sqlite3_session *pSession, int bEnable){$/;"	f
sqlite3session_enable	tsrc/sqlite3session.c	/^int sqlite3session_enable(sqlite3_session *pSession, int bEnable){$/;"	f
sqlite3session_indirect	ext/session/sqlite3session.c	/^int sqlite3session_indirect(sqlite3_session *pSession, int bIndirect){$/;"	f
sqlite3session_indirect	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_indirect(sqlite3_session *pSession, int bIndirect){$/;"	f
sqlite3session_indirect	tsrc/sqlite3session.c	/^int sqlite3session_indirect(sqlite3_session *pSession, int bIndirect){$/;"	f
sqlite3session_isempty	ext/session/sqlite3session.c	/^int sqlite3session_isempty(sqlite3_session *pSession){$/;"	f
sqlite3session_isempty	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_isempty(sqlite3_session *pSession){$/;"	f
sqlite3session_isempty	tsrc/sqlite3session.c	/^int sqlite3session_isempty(sqlite3_session *pSession){$/;"	f
sqlite3session_patchset	ext/session/sqlite3session.c	/^int sqlite3session_patchset($/;"	f
sqlite3session_patchset	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_patchset($/;"	f
sqlite3session_patchset	tsrc/sqlite3session.c	/^int sqlite3session_patchset($/;"	f
sqlite3session_patchset_strm	ext/session/sqlite3session.c	/^int sqlite3session_patchset_strm($/;"	f
sqlite3session_patchset_strm	sqlite3.c	/^SQLITE_API int SQLITE_STDCALL sqlite3session_patchset_strm($/;"	f
sqlite3session_patchset_strm	tsrc/sqlite3session.c	/^int sqlite3session_patchset_strm($/;"	f
sqlite3session_table_filter	ext/session/sqlite3session.c	/^void sqlite3session_table_filter($/;"	f
sqlite3session_table_filter	sqlite3.c	/^SQLITE_API void SQLITE_STDCALL sqlite3session_table_filter($/;"	f
sqlite3session_table_filter	tsrc/sqlite3session.c	/^void sqlite3session_table_filter($/;"	f
sqliteAuthBadReturnCode	sqlite3.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteAuthBadReturnCode	src/auth.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteAuthBadReturnCode	tsrc/auth.c	/^static void sqliteAuthBadReturnCode(Parse *pParse){$/;"	f	file:
sqliteDefaultBusyCallback	sqlite3.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteDefaultBusyCallback	src/main.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteDefaultBusyCallback	tsrc/main.c	/^static int sqliteDefaultBusyCallback($/;"	f	file:
sqliteErrorFromPosixError	sqlite3.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteErrorFromPosixError	src/os_unix.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteErrorFromPosixError	tsrc/os_unix.c	/^static int sqliteErrorFromPosixError(int posixError, int sqliteIOErr) {$/;"	f	file:
sqliteHashData	sqlite3.c	11248;"	d	file:
sqliteHashData	src/hash.h	87;"	d
sqliteHashData	tsrc/hash.h	87;"	d
sqliteHashFirst	sqlite3.c	11246;"	d	file:
sqliteHashFirst	src/hash.h	85;"	d
sqliteHashFirst	tsrc/hash.h	85;"	d
sqliteHashNext	sqlite3.c	11247;"	d	file:
sqliteHashNext	src/hash.h	86;"	d
sqliteHashNext	tsrc/hash.h	86;"	d
sqliteProcessJoin	sqlite3.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteProcessJoin	src/select.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteProcessJoin	tsrc/select.c	/^static int sqliteProcessJoin(Parse *pParse, Select *p){$/;"	f	file:
sqliteViewResetAll	sqlite3.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	sqlite3.c	99651;"	d	file:
sqliteViewResetAll	src/build.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	src/build.c	2264;"	d	file:
sqliteViewResetAll	tsrc/build.c	/^static void sqliteViewResetAll(sqlite3 *db, int idx){$/;"	f	file:
sqliteViewResetAll	tsrc/build.c	2264;"	d	file:
sqlite_abort	src/test1.c	/^static int SQLITE_TCLAPI sqlite_abort($/;"	f	file:
sqlite_error	test/threadtest3.c	/^static void sqlite_error($/;"	f	file:
sqlite_error_out	tool/loadfts.c	/^static void sqlite_error_out(const char *zText, sqlite3 *db){$/;"	f	file:
sqlite_int64	sqlite3.c	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t	file:
sqlite_int64	sqlite3.c	/^  typedef __int64 sqlite_int64;$/;"	t	file:
sqlite_int64	sqlite3.c	/^  typedef long long int sqlite_int64;$/;"	t	file:
sqlite_int64	sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_int64	tsrc/sqlite3.h	/^  typedef SQLITE_INT64_TYPE sqlite_int64;$/;"	t
sqlite_int64	tsrc/sqlite3.h	/^  typedef __int64 sqlite_int64;$/;"	t
sqlite_int64	tsrc/sqlite3.h	/^  typedef long long int sqlite_int64;$/;"	t
sqlite_set_magic	src/test1.c	/^static int SQLITE_TCLAPI sqlite_set_magic($/;"	f	file:
sqlite_static_bind_nbyte	src/test1.c	/^static int sqlite_static_bind_nbyte = 0;$/;"	v	file:
sqlite_static_bind_value	src/test1.c	/^static char *sqlite_static_bind_value = 0;$/;"	v	file:
sqlite_test_close	src/test1.c	/^static int SQLITE_TCLAPI sqlite_test_close($/;"	f	file:
sqlite_test_close_v2	src/test1.c	/^static int SQLITE_TCLAPI sqlite_test_close_v2($/;"	f	file:
sqlite_uint64	sqlite3.c	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t	file:
sqlite_uint64	sqlite3.c	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t	file:
sqlite_uint64	sqlite3.c	/^  typedef unsigned long long int sqlite_uint64;$/;"	t	file:
sqlite_uint64	sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
sqlite_uint64	tsrc/sqlite3.h	/^  typedef unsigned SQLITE_INT64_TYPE sqlite_uint64;$/;"	t
sqlite_uint64	tsrc/sqlite3.h	/^  typedef unsigned __int64 sqlite_uint64;$/;"	t
sqlite_uint64	tsrc/sqlite3.h	/^  typedef unsigned long long int sqlite_uint64;$/;"	t
sqlitecon::B1Leave	contrib/sqlitecon.tcl	/^proc sqlitecon::B1Leave {w x y} {$/;"	p
sqlitecon::B1Motion	contrib/sqlitecon.tcl	/^proc sqlitecon::B1Motion {w x y} {$/;"	p
sqlitecon::Backspace	contrib/sqlitecon.tcl	/^proc sqlitecon::Backspace {w} {$/;"	p
sqlitecon::Button1	contrib/sqlitecon.tcl	/^proc sqlitecon::Button1 {w x y} {$/;"	p
sqlitecon::Clear	contrib/sqlitecon.tcl	/^proc sqlitecon::Clear w {$/;"	p
sqlitecon::Copy	contrib/sqlitecon.tcl	/^proc sqlitecon::Copy w {$/;"	p
sqlitecon::Cut	contrib/sqlitecon.tcl	/^proc sqlitecon::Cut w {$/;"	p
sqlitecon::Delete	contrib/sqlitecon.tcl	/^proc sqlitecon::Delete w {$/;"	p
sqlitecon::DoCommand	contrib/sqlitecon.tcl	/^proc sqlitecon::DoCommand {w cmd} {$/;"	p
sqlitecon::EnableEditMenu	contrib/sqlitecon.tcl	/^proc sqlitecon::EnableEditMenu w {$/;"	p
sqlitecon::End	contrib/sqlitecon.tcl	/^proc sqlitecon::End w {$/;"	p
sqlitecon::Enter	contrib/sqlitecon.tcl	/^proc sqlitecon::Enter w {$/;"	p
sqlitecon::EraseEOL	contrib/sqlitecon.tcl	/^proc sqlitecon::EraseEOL {w} {$/;"	p
sqlitecon::Home	contrib/sqlitecon.tcl	/^proc sqlitecon::Home w {$/;"	p
sqlitecon::Insert	contrib/sqlitecon.tcl	/^proc sqlitecon::Insert {w a} {$/;"	p
sqlitecon::Left	contrib/sqlitecon.tcl	/^proc sqlitecon::Left {w} {$/;"	p
sqlitecon::Next	contrib/sqlitecon.tcl	/^proc sqlitecon::Next w {$/;"	p
sqlitecon::Paste	contrib/sqlitecon.tcl	/^proc sqlitecon::Paste w {$/;"	p
sqlitecon::Prior	contrib/sqlitecon.tcl	/^proc sqlitecon::Prior w {$/;"	p
sqlitecon::Right	contrib/sqlitecon.tcl	/^proc sqlitecon::Right {w} {$/;"	p
sqlitecon::SaveFile	contrib/sqlitecon.tcl	/^proc sqlitecon::SaveFile w {$/;"	p
sqlitecon::SelectTo	contrib/sqlitecon.tcl	/^proc sqlitecon::SelectTo {w x y} {$/;"	p
sqlitecon::SetLine	contrib/sqlitecon.tcl	/^proc sqlitecon::SetLine {w line} {$/;"	p
sqlitecon::_edit	contrib/sqlitecon.tcl	/^proc sqlitecon::_edit {origtxt {title {}}} {$/;"	p
sqlitecon::addHistory	contrib/sqlitecon.tcl	/^proc sqlitecon::addHistory {w line} {$/;"	p
sqlitecon::canCut	contrib/sqlitecon.tcl	/^proc sqlitecon::canCut w {$/;"	p
sqlitecon::cancelMotor	contrib/sqlitecon.tcl	/^proc sqlitecon::cancelMotor w {$/;"	p
sqlitecon::create	contrib/sqlitecon.tcl	/^proc sqlitecon::create {w prompt title db} {$/;"	p
sqlitecon::create_child	contrib/sqlitecon.tcl	/^proc sqlitecon::create_child {w prompt editmenu} {$/;"	p
sqlitecon::motor	contrib/sqlitecon.tcl	/^proc sqlitecon::motor w {$/;"	p
sqlitecon::nearestBoundry	contrib/sqlitecon.tcl	/^proc sqlitecon::nearestBoundry {w x y} {$/;"	p
sqllogCopydb	src/test_sqllog.c	/^static void sqllogCopydb(struct SLConn *p, const char *zSearch, int bLog){$/;"	f	file:
sqllogFindAttached	src/test_sqllog.c	/^static int sqllogFindAttached($/;"	f	file:
sqllogFindFile	src/test_sqllog.c	/^static char *sqllogFindFile(const char *zFile){$/;"	f	file:
sqllogOpenlog	src/test_sqllog.c	/^static void sqllogOpenlog(struct SLConn *p){$/;"	f	file:
sqllogTokenize	src/test_sqllog.c	/^static void sqllogTokenize(const char *z, const char **pz, int *pn){$/;"	f	file:
sqllogTraceDb	src/test_sqllog.c	/^static int sqllogTraceDb(sqlite3 *db){$/;"	f	file:
sqllog_isspace	src/test_sqllog.c	/^static int sqllog_isspace(char c){$/;"	f	file:
sqllogglobal	src/test_sqllog.c	/^} sqllogglobal;$/;"	v	typeref:struct:SLGlobal	file:
sqlthread_id	src/test_thread.c	/^static int SQLITE_TCLAPI sqlthread_id($/;"	f	file:
sqlthread_open	src/test_thread.c	/^static int SQLITE_TCLAPI sqlthread_open($/;"	f	file:
sqlthread_parent	src/test_thread.c	/^static int SQLITE_TCLAPI sqlthread_parent($/;"	f	file:
sqlthread_proc	src/test_thread.c	/^static Tcl_ObjCmdProc sqlthread_proc;$/;"	v	file:
sqlthread_proc	src/test_thread.c	/^static int SQLITE_TCLAPI sqlthread_proc($/;"	f	file:
sqlthread_spawn	src/test_thread.c	/^static int SQLITE_TCLAPI sqlthread_spawn($/;"	f	file:
sqrFunc	src/test_autoext.c	/^static void sqrFunc($/;"	f	file:
sqr_init	src/test_autoext.c	/^static int sqr_init($/;"	f	file:
stacksize	tool/lemon.c	/^  char *stacksize;         \/* Size of the parser stack *\/$/;"	m	struct:lemon	file:
star_oh	ext/fts1/fts1_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	ext/fts2/fts2_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	ext/fts3/fts3_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	sqlite3.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	tsrc/fts1_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	tsrc/fts2_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
star_oh	tsrc/fts3_porter.c	/^static int star_oh(const char *z){$/;"	f	file:
start	tool/lemon.c	/^  char *start;             \/* Name of the start symbol for the grammar *\/$/;"	m	struct:lemon	file:
startClient	mptest/mptest.c	/^static void startClient(int iClient){$/;"	f	file:
startEndFlag	sqlite3.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startEndFlag	src/os_unix.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startEndFlag	tsrc/os_unix.c	/^  unsigned char startEndFlag;       \/* 1=rel to end of fork, 0=rel to start *\/$/;"	m	struct:ByteRangeLockPB2	file:
startRule	tool/lemon.c	/^  struct rule *startRule;  \/* First rule *\/$/;"	m	struct:lemon	typeref:struct:lemon::rule	file:
startScript	mptest/mptest.c	/^static int startScript($/;"	f	file:
startTime	sqlite3.c	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe	file:
startTime	src/vdbeInt.h	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe
startTime	tsrc/vdbeInt.h	/^  i64 startTime;          \/* Time when query started - used for profiling *\/$/;"	m	struct:Vdbe
start_ioerr_simulation	src/test_journal.c	/^static void start_ioerr_simulation(int iSave, int iSave2){$/;"	f	file:
startsWith	ext/fts1/fts1.c	/^static int startsWith(const char *s, const char *t){$/;"	f	file:
startsWith	ext/fts2/fts2.c	/^static int startsWith(const char *s, const char *t){$/;"	f	file:
startsWith	tsrc/fts1.c	/^static int startsWith(const char *s, const char *t){$/;"	f	file:
startsWith	tsrc/fts2.c	/^static int startsWith(const char *s, const char *t){$/;"	f	file:
stat4Destructor	sqlite3.c	/^static void stat4Destructor(void *pOld){$/;"	f	file:
stat4Destructor	src/analyze.c	/^static void stat4Destructor(void *pOld){$/;"	f	file:
stat4Destructor	tsrc/analyze.c	/^static void stat4Destructor(void *pOld){$/;"	f	file:
stat4ValueFromExpr	sqlite3.c	/^static int stat4ValueFromExpr($/;"	f	file:
stat4ValueFromExpr	src/vdbemem.c	/^static int stat4ValueFromExpr($/;"	f	file:
stat4ValueFromExpr	tsrc/vdbemem.c	/^static int stat4ValueFromExpr($/;"	f	file:
statBestIndex	sqlite3.c	/^static int statBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
statBestIndex	src/dbstat.c	/^static int statBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
statBestIndex	tsrc/dbstat.c	/^static int statBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
statClearPage	sqlite3.c	/^static void statClearPage(StatPage *p){$/;"	f	file:
statClearPage	src/dbstat.c	/^static void statClearPage(StatPage *p){$/;"	f	file:
statClearPage	tsrc/dbstat.c	/^static void statClearPage(StatPage *p){$/;"	f	file:
statClose	sqlite3.c	/^static int statClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statClose	src/dbstat.c	/^static int statClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statClose	tsrc/dbstat.c	/^static int statClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statColumn	sqlite3.c	/^static int statColumn($/;"	f	file:
statColumn	src/dbstat.c	/^static int statColumn($/;"	f	file:
statColumn	tsrc/dbstat.c	/^static int statColumn($/;"	f	file:
statConnect	sqlite3.c	/^static int statConnect($/;"	f	file:
statConnect	src/dbstat.c	/^static int statConnect($/;"	f	file:
statConnect	tsrc/dbstat.c	/^static int statConnect($/;"	f	file:
statDecodePage	sqlite3.c	/^static int statDecodePage(Btree *pBt, StatPage *p){$/;"	f	file:
statDecodePage	src/dbstat.c	/^static int statDecodePage(Btree *pBt, StatPage *p){$/;"	f	file:
statDecodePage	tsrc/dbstat.c	/^static int statDecodePage(Btree *pBt, StatPage *p){$/;"	f	file:
statDisconnect	sqlite3.c	/^static int statDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
statDisconnect	src/dbstat.c	/^static int statDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
statDisconnect	tsrc/dbstat.c	/^static int statDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
statEof	sqlite3.c	/^static int statEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statEof	src/dbstat.c	/^static int statEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statEof	tsrc/dbstat.c	/^static int statEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statFilter	sqlite3.c	/^static int statFilter($/;"	f	file:
statFilter	src/dbstat.c	/^static int statFilter($/;"	f	file:
statFilter	tsrc/dbstat.c	/^static int statFilter($/;"	f	file:
statGet	sqlite3.c	/^static void statGet($/;"	f	file:
statGet	src/analyze.c	/^static void statGet($/;"	f	file:
statGet	tsrc/analyze.c	/^static void statGet($/;"	f	file:
statGetFuncdef	sqlite3.c	/^static const FuncDef statGetFuncdef = {$/;"	v	file:
statGetFuncdef	src/analyze.c	/^static const FuncDef statGetFuncdef = {$/;"	v	file:
statGetFuncdef	tsrc/analyze.c	/^static const FuncDef statGetFuncdef = {$/;"	v	file:
statInit	sqlite3.c	/^static void statInit($/;"	f	file:
statInit	src/analyze.c	/^static void statInit($/;"	f	file:
statInit	tsrc/analyze.c	/^static void statInit($/;"	f	file:
statInitFuncdef	sqlite3.c	/^static const FuncDef statInitFuncdef = {$/;"	v	file:
statInitFuncdef	src/analyze.c	/^static const FuncDef statInitFuncdef = {$/;"	v	file:
statInitFuncdef	tsrc/analyze.c	/^static const FuncDef statInitFuncdef = {$/;"	v	file:
statMutex	sqlite3.c	/^static const char statMutex[] = {$/;"	v	file:
statMutex	src/status.c	/^static const char statMutex[] = {$/;"	v	file:
statMutex	tsrc/status.c	/^static const char statMutex[] = {$/;"	v	file:
statNext	sqlite3.c	/^static int statNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statNext	src/dbstat.c	/^static int statNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statNext	tsrc/dbstat.c	/^static int statNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
statOpen	sqlite3.c	/^static int statOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
statOpen	src/dbstat.c	/^static int statOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
statOpen	tsrc/dbstat.c	/^static int statOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
statPush	sqlite3.c	/^static void statPush($/;"	f	file:
statPush	src/analyze.c	/^static void statPush($/;"	f	file:
statPush	tsrc/analyze.c	/^static void statPush($/;"	f	file:
statPushFuncdef	sqlite3.c	/^static const FuncDef statPushFuncdef = {$/;"	v	file:
statPushFuncdef	src/analyze.c	/^static const FuncDef statPushFuncdef = {$/;"	v	file:
statPushFuncdef	tsrc/analyze.c	/^static const FuncDef statPushFuncdef = {$/;"	v	file:
statResetCsr	sqlite3.c	/^static void statResetCsr(StatCursor *pCsr){$/;"	f	file:
statResetCsr	src/dbstat.c	/^static void statResetCsr(StatCursor *pCsr){$/;"	f	file:
statResetCsr	tsrc/dbstat.c	/^static void statResetCsr(StatCursor *pCsr){$/;"	f	file:
statRowid	sqlite3.c	/^static int statRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
statRowid	src/dbstat.c	/^static int statRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
statRowid	tsrc/dbstat.c	/^static int statRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
statSizeAndOffset	sqlite3.c	/^static void statSizeAndOffset(StatCursor *pCsr){$/;"	f	file:
statSizeAndOffset	src/dbstat.c	/^static void statSizeAndOffset(StatCursor *pCsr){$/;"	f	file:
statSizeAndOffset	tsrc/dbstat.c	/^static void statSizeAndOffset(StatCursor *pCsr){$/;"	f	file:
state	tool/dbhash.c	/^  unsigned int state[5];$/;"	m	struct:SHA1Context	file:
state	tool/lemon.c	/^  enum e_state state;        \/* The state of the parser *\/$/;"	m	struct:pstate	typeref:enum:pstate::e_state	file:
state	tool/lemon.c	/^struct state {$/;"	s	file:
stateResortCompare	tool/lemon.c	/^static int stateResortCompare(const void *a, const void *b){$/;"	f	file:
statecmp	tool/lemon.c	/^PRIVATE int statecmp(struct config *a, struct config *b)$/;"	f
statehash	tool/lemon.c	/^PRIVATE unsigned statehash(struct config *a)$/;"	f
stateno	fts5.c	/^  fts5YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:fts5yyStackEntry	file:
stateno	fts5parse.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	lempar.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	parse.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	sqlite3.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	sqlite3.c	/^  fts5YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:fts5yyStackEntry	file:
stateno	tool/lempar.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
stateno	tsrc/fts5.c	/^  fts5YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:fts5yyStackEntry	file:
stateno	tsrc/parse.c	/^  YYACTIONTYPE stateno;  \/* The state-number, or reduce action in SHIFTREDUCE *\/$/;"	m	struct:yyStackEntry	file:
statenum	tool/lemon.c	/^  int statenum;            \/* Sequential number for this state *\/$/;"	m	struct:state	file:
statline	tool/spaceanal.tcl	/^proc statline {title value {extra {}}} {$/;"	p
statsOn	shell.c	/^  int statsOn;           \/* True to display memory stats before each finalize *\/$/;"	m	struct:ShellState	file:
statsOn	src/shell.c	/^  int statsOn;           \/* True to display memory stats before each finalize *\/$/;"	m	struct:ShellState	file:
statsOn	tsrc/shell.c	/^  int statsOn;           \/* True to display memory stats before each finalize *\/$/;"	m	struct:ShellState	file:
stats_line	tool/lemon.c	/^static void stats_line(const char *zLabel, int iValue){$/;"	f	file:
status	sqlite3.c	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines	file:
status	sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
status	src/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
status	tool/lemon.c	/^  enum cfgstatus status;   \/* used during followset and shift computations *\/$/;"	m	struct:config	typeref:enum:config::cfgstatus	file:
status	tsrc/sqlite3ext.h	/^  int (*status)(int,int*,int*,int);$/;"	m	struct:sqlite3_api_routines
status64	sqlite3.c	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines	file:
status64	sqlite3ext.h	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines
status64	src/sqlite3ext.h	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines
status64	tsrc/sqlite3ext.h	/^  int (*status64)(int,sqlite3_int64*,sqlite3_int64*,int);$/;"	m	struct:sqlite3_api_routines
statusFunc	src/test_loadext.c	/^static void statusFunc($/;"	f	file:
stdin_is_interactive	shell.c	/^static int stdin_is_interactive = 1;$/;"	v	file:
stdin_is_interactive	src/shell.c	/^static int stdin_is_interactive = 1;$/;"	v	file:
stdin_is_interactive	tsrc/shell.c	/^static int stdin_is_interactive = 1;$/;"	v	file:
stdout_is_console	shell.c	/^static int stdout_is_console = 1;$/;"	v	file:
stdout_is_console	src/shell.c	/^static int stdout_is_console = 1;$/;"	v	file:
stdout_is_console	tsrc/shell.c	/^static int stdout_is_console = 1;$/;"	v	file:
stem	ext/fts1/fts1_porter.c	/^static int stem($/;"	f	file:
stem	ext/fts2/fts2_porter.c	/^static int stem($/;"	f	file:
stem	ext/fts3/fts3_porter.c	/^static int stem($/;"	f	file:
stem	sqlite3.c	/^static int stem($/;"	f	file:
stem	tsrc/fts1_porter.c	/^static int stem($/;"	f	file:
stem	tsrc/fts2_porter.c	/^static int stem($/;"	f	file:
stem	tsrc/fts3_porter.c	/^static int stem($/;"	f	file:
step	sqlite3.c	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
step	sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
step	src/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
step	tsrc/sqlite3ext.h	/^  int  (*step)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
step_list	sqlite3.c	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger	file:
step_list	src/sqliteInt.h	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger
step_list	tsrc/sqliteInt.h	/^  TriggerStep *step_list; \/* Link list of trigger program steps             *\/$/;"	m	struct:Trigger
step_rbu	ext/rbu/rbu_common.tcl	/^proc step_rbu {target rbu} {$/;"	p
stepsql	test/tester.tcl	/^proc stepsql {dbptr sql} {$/;"	p
stmtLast	src/tclsqlite.c	/^  SqlPreparedStmt *stmtLast; \/* Last statement in the list *\/$/;"	m	struct:SqliteDb	file:
stmtLast	tsrc/tclsqlite.c	/^  SqlPreparedStmt *stmtLast; \/* Last statement in the list *\/$/;"	m	struct:SqliteDb	file:
stmtList	src/tclsqlite.c	/^  SqlPreparedStmt *stmtList; \/* List of prepared statements*\/$/;"	m	struct:SqliteDb	file:
stmtList	tsrc/tclsqlite.c	/^  SqlPreparedStmt *stmtList; \/* List of prepared statements*\/$/;"	m	struct:SqliteDb	file:
stmt_busy	sqlite3.c	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_busy	sqlite3ext.h	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_busy	src/sqlite3ext.h	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_busy	tsrc/sqlite3ext.h	/^  int (*stmt_busy)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_readonly	sqlite3.c	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
stmt_readonly	sqlite3ext.h	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_readonly	src/sqlite3ext.h	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_readonly	tsrc/sqlite3ext.h	/^  int (*stmt_readonly)(sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
stmt_status	sqlite3.c	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines	file:
stmt_status	sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stmt_status	src/sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stmt_status	tsrc/sqlite3ext.h	/^  int (*stmt_status)(sqlite3_stmt*,int,int);$/;"	m	struct:sqlite3_api_routines
stop_ioerr_simulation	src/test_journal.c	/^static void stop_ioerr_simulation(int *piSave, int *piSave2){$/;"	f	file:
stop_thread	src/test4.c	/^static void stop_thread(Thread *p){$/;"	f	file:
stop_thread	src/test7.c	/^static void stop_thread(Thread *p){$/;"	f	file:
storeLastErrno	sqlite3.c	/^static void storeLastErrno(unixFile *pFile, int error){$/;"	f	file:
storeLastErrno	src/os_unix.c	/^static void storeLastErrno(unixFile *pFile, int error){$/;"	f	file:
storeLastErrno	tsrc/os_unix.c	/^static void storeLastErrno(unixFile *pFile, int error){$/;"	f	file:
stp	tool/lemon.c	/^    struct state *stp;     \/* The new state, if a shift *\/$/;"	m	union:action::__anon5	typeref:struct:action::__anon5::state	file:
stp	tool/lemon.c	/^  struct state *stp;       \/* Pointer to state which contains this *\/$/;"	m	struct:config	typeref:struct:config::state	file:
stp	tool/lemon.c	/^  struct state *stp;   \/* A pointer to a state *\/$/;"	m	struct:axset	typeref:struct:axset::state	file:
str	sqlite3.c	/^  StrAccum str;      \/* The string being accumulated *\/$/;"	m	struct:Explain	file:
str	src/vdbeInt.h	/^  StrAccum str;      \/* The string being accumulated *\/$/;"	m	struct:Explain
str	tsrc/vdbeInt.h	/^  StrAccum str;      \/* The string being accumulated *\/$/;"	m	struct:Explain
strCompare	ext/fts1/ft_hash.c	/^static int strCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
strCompare	ext/fts1/fts1_hash.c	/^static int strCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
strCompare	ext/fts2/fts2_hash.c	/^static int strCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
strCompare	tsrc/fts1_hash.c	/^static int strCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
strCompare	tsrc/fts2_hash.c	/^static int strCompare(const void *pKey1, int n1, const void *pKey2, int n2){$/;"	f	file:
strFree	tool/sqldiff.c	/^static void strFree(Str *p){$/;"	f	file:
strHash	ext/fts1/ft_hash.c	/^static int strHash(const void *pKey, int nKey){$/;"	f	file:
strHash	ext/fts1/fts1_hash.c	/^static int strHash(const void *pKey, int nKey){$/;"	f	file:
strHash	ext/fts2/fts2_hash.c	/^static int strHash(const void *pKey, int nKey){$/;"	f	file:
strHash	sqlite3.c	/^static unsigned int strHash(const char *z){$/;"	f	file:
strHash	src/hash.c	/^static unsigned int strHash(const char *z){$/;"	f	file:
strHash	tsrc/fts1_hash.c	/^static int strHash(const void *pKey, int nKey){$/;"	f	file:
strHash	tsrc/fts2_hash.c	/^static int strHash(const void *pKey, int nKey){$/;"	f	file:
strHash	tsrc/hash.c	/^static unsigned int strHash(const char *z){$/;"	f	file:
strInit	tool/sqldiff.c	/^static void strInit(Str *p){$/;"	f	file:
strPrintf	tool/sqldiff.c	/^static void strPrintf(Str *p, const char *zFormat, ...){$/;"	f	file:
strPrintfArray	tool/sqldiff.c	/^static void strPrintfArray($/;"	f	file:
str_in_array	shell.c	/^static int str_in_array(const char *zStr, const char **azArray){$/;"	f	file:
str_in_array	src/shell.c	/^static int str_in_array(const char *zStr, const char **azArray){$/;"	f	file:
str_in_array	tsrc/shell.c	/^static int str_in_array(const char *zStr, const char **azArray){$/;"	f	file:
strappend	src/test_vfstrace.c	/^static void strappend(char *z, int *pI, const char *zAppend){$/;"	f	file:
stress1	test/tt3_stress.c	/^static void stress1(int nMs){$/;"	f	file:
stress2	test/tt3_stress.c	/^static void stress2(int nMs){$/;"	f	file:
stress2_launch_thread_loop	test/tt3_stress.c	/^static void stress2_launch_thread_loop($/;"	f	file:
stress2_thread_wrapper	test/tt3_stress.c	/^static char *stress2_thread_wrapper(int iTid, void *pArg){$/;"	f	file:
stress2_workload1	test/tt3_stress.c	/^static void stress2_workload1(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload10	test/tt3_stress.c	/^static void stress2_workload10(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload11	test/tt3_stress.c	/^static void stress2_workload11(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload14	test/tt3_stress.c	/^static void stress2_workload14(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload17	test/tt3_stress.c	/^static void stress2_workload17(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload19	test/tt3_stress.c	/^static char *stress2_workload19(int iTid, void *pArg){$/;"	f	file:
stress2_workload2	test/tt3_stress.c	/^static void stress2_workload2(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload3	test/tt3_stress.c	/^static void stress2_workload3(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload4	test/tt3_stress.c	/^static void stress2_workload4(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload5	test/tt3_stress.c	/^static void stress2_workload5(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload6	test/tt3_stress.c	/^static void stress2_workload6(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload7	test/tt3_stress.c	/^static void stress2_workload7(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload8	test/tt3_stress.c	/^static void stress2_workload8(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress2_workload9	test/tt3_stress.c	/^static void stress2_workload9(Error *pErr, Sqlite *pDb, int i){$/;"	f	file:
stress_thread_1	test/tt3_stress.c	/^static char *stress_thread_1(int iTid, void *pArg){$/;"	f	file:
stress_thread_2	test/tt3_stress.c	/^static char *stress_thread_2(int iTid, void *pArg){$/;"	f	file:
stress_thread_3	test/tt3_stress.c	/^static char *stress_thread_3(int iTid, void *pArg){$/;"	f	file:
stress_thread_4	test/tt3_stress.c	/^static char *stress_thread_4(int iTid, void *pArg){$/;"	f	file:
stress_thread_5	test/tt3_stress.c	/^static char *stress_thread_5(int iTid, void *pArg){$/;"	f	file:
strftimeFunc	sqlite3.c	/^static void strftimeFunc($/;"	f	file:
strftimeFunc	src/date.c	/^static void strftimeFunc($/;"	f	file:
strftimeFunc	tsrc/date.c	/^static void strftimeFunc($/;"	f	file:
strglob	mptest/mptest.c	/^int strglob(const char *zGlob, const char *z){$/;"	f
strglob	sqlite3.c	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
strglob	sqlite3ext.h	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
strglob	src/sqlite3ext.h	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
strglob	tsrc/sqlite3ext.h	/^  int (*strglob)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
strhash	tool/lemon.c	/^PRIVATE unsigned strhash(const char *x)$/;"	f
stricmp	sqlite3.c	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
stricmp	sqlite3ext.h	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
stricmp	src/sqlite3ext.h	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
stricmp	tsrc/sqlite3ext.h	/^  int (*stricmp)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
stringAppend	mptest/mptest.c	/^static void stringAppend(String *p, const char *z, int n){$/;"	f	file:
stringAppendTerm	mptest/mptest.c	/^static void stringAppendTerm(String *p, const char *z){$/;"	f	file:
stringBufferData	ext/fts2/fts2.c	/^static char *stringBufferData(StringBuffer *sb){$/;"	f	file:
stringBufferData	tsrc/fts2.c	/^static char *stringBufferData(StringBuffer *sb){$/;"	f	file:
stringBufferDestroy	ext/fts2/fts2.c	/^static void stringBufferDestroy(StringBuffer *sb){$/;"	f	file:
stringBufferDestroy	tsrc/fts2.c	/^static void stringBufferDestroy(StringBuffer *sb){$/;"	f	file:
stringBufferLength	ext/fts2/fts2.c	/^static int stringBufferLength(StringBuffer *sb){$/;"	f	file:
stringBufferLength	tsrc/fts2.c	/^static int stringBufferLength(StringBuffer *sb){$/;"	f	file:
stringFree	mptest/mptest.c	/^static void stringFree(String *p){$/;"	f	file:
stringReset	mptest/mptest.c	/^static void stringReset(String *p){$/;"	f	file:
string_concat	src/test8.c	/^static void string_concat(char **pzStr, char *zAppend, int doFree, int *pRc){$/;"	f	file:
string_dup	ext/fts1/fts1.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup	ext/fts1/fulltext.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup	ext/fts1/simple_tokenizer.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup	ext/fts2/fts2.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup	tsrc/fts1.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup	tsrc/fts2.c	/^static char *string_dup(const char *s){$/;"	f	file:
string_dup_n	ext/fts1/fts1.c	/^static char *string_dup_n(const char *s, int n){$/;"	f	file:
string_dup_n	ext/fts1/fulltext.c	/^static char *string_dup_n(const char *s, int n){$/;"	f	file:
string_dup_n	ext/fts2/fts2.c	/^static char *string_dup_n(const char *s, int n){$/;"	f	file:
string_dup_n	tsrc/fts1.c	/^static char *string_dup_n(const char *s, int n){$/;"	f	file:
string_dup_n	tsrc/fts2.c	/^static char *string_dup_n(const char *s, int n){$/;"	f	file:
string_format	ext/fts1/fts1.c	/^static char *string_format(const char *zFormat,$/;"	f	file:
string_format	ext/fts1/fulltext.c	/^static char *string_format(const char *zFormat, const char *zName){$/;"	f	file:
string_format	ext/fts2/fts2.c	/^static char *string_format(const char *zFormat,$/;"	f	file:
string_format	tsrc/fts1.c	/^static char *string_format(const char *zFormat,$/;"	f	file:
string_format	tsrc/fts2.c	/^static char *string_format(const char *zFormat,$/;"	f	file:
stringcompare	tool/speedtest8inst1.c	/^static int stringcompare(const char *zLeft, const char *zRight){$/;"	f	file:
strip_comments	test/releasetest.tcl	/^proc strip_comments {in} {$/;"	p
strlen30	shell.c	/^static int strlen30(const char *z){$/;"	f	file:
strlen30	src/shell.c	/^static int strlen30(const char *z){$/;"	f	file:
strlen30	src/tclsqlite.c	/^static int strlen30(const char *z){$/;"	f	file:
strlen30	tsrc/shell.c	/^static int strlen30(const char *z){$/;"	f	file:
strlen30	tsrc/tclsqlite.c	/^static int strlen30(const char *z){$/;"	f	file:
strlike	sqlite3.c	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines	file:
strlike	sqlite3ext.h	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines
strlike	src/sqlite3ext.h	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines
strlike	tsrc/sqlite3ext.h	/^  int (*strlike)(const char*,const char*,unsigned int);$/;"	m	struct:sqlite3_api_routines
strnicmp	sqlite3.c	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
strnicmp	sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
strnicmp	src/sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
strnicmp	tsrc/sqlite3ext.h	/^  int (*strnicmp)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
subjInMemory	sqlite3.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjInMemory	src/pager.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjInMemory	tsrc/pager.c	/^  u8 subjInMemory;            \/* True to use in-memory sub-journals *\/$/;"	m	struct:Pager	file:
subjRequiresPage	sqlite3.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjRequiresPage	src/pager.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjRequiresPage	tsrc/pager.c	/^static int subjRequiresPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	sqlite3.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	src/pager.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
subjournalPage	tsrc/pager.c	/^static int subjournalPage(PgHdr *pPg){$/;"	f	file:
subjournalPageIfRequired	sqlite3.c	/^static int subjournalPageIfRequired(PgHdr *pPg){$/;"	f	file:
subjournalPageIfRequired	src/pager.c	/^static int subjournalPageIfRequired(PgHdr *pPg){$/;"	f	file:
subjournalPageIfRequired	tsrc/pager.c	/^static int subjournalPageIfRequired(PgHdr *pPg){$/;"	f	file:
subreport	tool/spaceanal.tcl	/^proc subreport {title where showFrag} {$/;"	p
substExpr	sqlite3.c	/^static Expr *substExpr($/;"	f	file:
substExpr	src/select.c	/^static Expr *substExpr($/;"	f	file:
substExpr	tsrc/select.c	/^static Expr *substExpr($/;"	f	file:
substExprList	sqlite3.c	/^static void substExprList($/;"	f	file:
substExprList	src/select.c	/^static void substExprList($/;"	f	file:
substExprList	tsrc/select.c	/^static void substExprList($/;"	f	file:
substFile	tool/mkvsix.tcl	/^proc substFile { fileName } {$/;"	p
substSelect	sqlite3.c	/^static void substSelect($/;"	f	file:
substSelect	src/select.c	/^static void substSelect($/;"	f	file:
substSelect	tsrc/select.c	/^static void substSelect($/;"	f	file:
substVars	tool/mkmsvcmin.tcl	/^proc substVars { data } {$/;"	p
substituteCost	ext/misc/spellfix.c	/^static int substituteCost(char cPrev, char cFrom, char cTo){$/;"	f	file:
substrFunc	sqlite3.c	/^static void substrFunc($/;"	f	file:
substrFunc	src/func.c	/^static void substrFunc($/;"	f	file:
substrFunc	tsrc/func.c	/^static void substrFunc($/;"	f	file:
substrId	tool/mkkeywordhash.c	/^  int substrId;        \/* Id to another keyword this keyword is embedded in *\/$/;"	m	struct:Keyword	file:
substrOffset	tool/mkkeywordhash.c	/^  int substrOffset;    \/* Offset into substrId for start of this keyword *\/$/;"	m	struct:Keyword	file:
subsym	tool/lemon.c	/^  struct symbol **subsym;  \/* Array of constituent symbols *\/$/;"	m	struct:symbol	typeref:struct:symbol::symbol	file:
sumFinalize	sqlite3.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumFinalize	src/func.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumFinalize	tsrc/func.c	/^static void sumFinalize(sqlite3_context *context){$/;"	f	file:
sumStep	sqlite3.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
sumStep	src/func.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
sumStep	tsrc/func.c	/^static void sumStep(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
summarize_one_table	tool/sqldiff.c	/^static void summarize_one_table(const char *zTab, FILE *out){$/;"	f	file:
superlockBusyHandler	src/test_superlock.c	/^static int superlockBusyHandler(void *pCtx, int UNUSED){$/;"	f	file:
superlockIsWal	src/test_superlock.c	/^static int superlockIsWal(Superlock *pLock){$/;"	f	file:
superlockShmLock	src/test_superlock.c	/^static int superlockShmLock($/;"	f	file:
superlockWalLock	src/test_superlock.c	/^static int superlockWalLock($/;"	f	file:
superlock_busy	src/test_superlock.c	/^static int superlock_busy(void *pCtx, int nBusy){$/;"	f	file:
superlock_cmd	src/test_superlock.c	/^static int SQLITE_TCLAPI superlock_cmd($/;"	f	file:
superunlock_cmd	src/test_superlock.c	/^static int SQLITE_TCLAPI superunlock_cmd($/;"	f	file:
superunlock_del	src/test_superlock.c	/^static void SQLITE_TCLAPI superunlock_del(ClientData cd){$/;"	f	file:
suppressErr	sqlite3.c	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3	file:
suppressErr	src/sqliteInt.h	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3
suppressErr	tsrc/sqliteInt.h	/^  u8 suppressErr;               \/* Do not issue error messages if true *\/$/;"	m	struct:sqlite3
swab32	tool/showwal.c	/^static unsigned int swab32(unsigned int x){$/;"	f	file:
swapMixedEndianFloat	sqlite3.c	73610;"	d	file:
swapMixedEndianFloat	sqlite3.c	73612;"	d	file:
swapMixedEndianFloat	src/vdbeaux.c	3252;"	d	file:
swapMixedEndianFloat	src/vdbeaux.c	3254;"	d	file:
swapMixedEndianFloat	tsrc/vdbeaux.c	3252;"	d	file:
swapMixedEndianFloat	tsrc/vdbeaux.c	3254;"	d	file:
switchLockProxyPath	sqlite3.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
switchLockProxyPath	src/os_unix.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
switchLockProxyPath	tsrc/os_unix.c	/^static int switchLockProxyPath(unixFile *pFile, const char *path) {$/;"	f	file:
swizzle	test/speedtest1.c	/^unsigned swizzle(unsigned in, unsigned limit){$/;"	f
symbol	tool/lemon.c	/^struct symbol {$/;"	s	file:
symbol_type	tool/lemon.c	/^enum symbol_type {$/;"	g	file:
symbols	tool/lemon.c	/^  struct symbol **symbols; \/* Sorted array of pointers to symbols *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
syncFlags	sqlite3.c	/^  int syncFlags;               \/* Flags for the fsync *\/$/;"	m	struct:WalWriter	file:
syncFlags	sqlite3.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncFlags	sqlite3.c	/^  u8 syncFlags;              \/* Flags to use to sync header writes *\/$/;"	m	struct:Wal	file:
syncFlags	src/pager.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncFlags	src/wal.c	/^  int syncFlags;               \/* Flags for the fsync *\/$/;"	m	struct:WalWriter	file:
syncFlags	src/wal.c	/^  u8 syncFlags;              \/* Flags to use to sync header writes *\/$/;"	m	struct:Wal	file:
syncFlags	tsrc/pager.c	/^  u8 syncFlags;               \/* SYNC_NORMAL or SYNC_FULL otherwise *\/$/;"	m	struct:Pager	file:
syncFlags	tsrc/wal.c	/^  int syncFlags;               \/* Flags for the fsync *\/$/;"	m	struct:WalWriter	file:
syncFlags	tsrc/wal.c	/^  u8 syncFlags;              \/* Flags to use to sync header writes *\/$/;"	m	struct:Wal	file:
syncHeader	sqlite3.c	/^  u8 syncHeader;             \/* Fsync the WAL header if true *\/$/;"	m	struct:Wal	file:
syncHeader	src/wal.c	/^  u8 syncHeader;             \/* Fsync the WAL header if true *\/$/;"	m	struct:Wal	file:
syncHeader	tsrc/wal.c	/^  u8 syncHeader;             \/* Fsync the WAL header if true *\/$/;"	m	struct:Wal	file:
syncJournal	sqlite3.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
syncJournal	src/pager.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
syncJournal	tsrc/pager.c	/^static int syncJournal(Pager *pPager, int newHdr){$/;"	f	file:
syncRoot	tool/GetFile.cs	/^        private static readonly object syncRoot = new object();$/;"	f	class:GetFile.Program	file:
synthCollSeq	sqlite3.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
synthCollSeq	src/callback.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
synthCollSeq	tsrc/callback.c	/^static int synthCollSeq(sqlite3 *db, CollSeq *pColl){$/;"	f	file:
system_errno	sqlite3.c	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
system_errno	sqlite3ext.h	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
system_errno	src/sqlite3ext.h	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
system_errno	tsrc/sqlite3ext.h	/^  int (*system_errno)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
system_error	test/threadtest3.c	/^static void system_error(Error *pErr, int iSys){$/;"	f	file:
sz	sqlite3.c	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside	file:
sz	src/sqliteInt.h	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside
sz	test/fuzzcheck.c	/^  int sz;                 \/* Size of the file in bytes *\/$/;"	m	struct:VFile	file:
sz	test/fuzzcheck.c	/^  int sz;                 \/* Size of this Blob in bytes *\/$/;"	m	struct:Blob	file:
sz	tsrc/sqliteInt.h	/^  u16 sz;                 \/* Size of each buffer in bytes *\/$/;"	m	struct:Lookaside
szAlloc	sqlite3.c	/^  int szAlloc;                        \/* Total size of one pcache line *\/$/;"	m	struct:PCache1	file:
szAlloc	src/pcache1.c	/^  int szAlloc;                        \/* Total size of one pcache line *\/$/;"	m	struct:PCache1	file:
szAlloc	tsrc/pcache1.c	/^  int szAlloc;                        \/* Total size of one pcache line *\/$/;"	m	struct:PCache1	file:
szAtom	sqlite3.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szAtom	src/mem5.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szAtom	tsrc/mem5.c	/^  int szAtom;      \/* Smallest possible allocation in bytes *\/$/;"	m	struct:Mem5Global	file:
szCache	sqlite3.c	/^  int szCache;                        \/* Configured cache size *\/$/;"	m	struct:PCache	file:
szCache	src/pcache.c	/^  int szCache;                        \/* Configured cache size *\/$/;"	m	struct:PCache	file:
szCache	tsrc/pcache.c	/^  int szCache;                        \/* Configured cache size *\/$/;"	m	struct:PCache	file:
szCell	sqlite3.c	/^  u16 *szCell;            \/* Local size of all cells in apCell[] *\/$/;"	m	struct:CellArray	file:
szCell	src/btree.c	/^  u16 *szCell;            \/* Local size of all cells in apCell[] *\/$/;"	m	struct:CellArray	file:
szCell	tsrc/btree.c	/^  u16 *szCell;            \/* Local size of all cells in apCell[] *\/$/;"	m	struct:CellArray	file:
szChunk	sqlite3.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	sqlite3.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szChunk	src/os_unix.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	src/os_win.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szChunk	src/test_multiplex.c	/^  unsigned int szChunk;            \/* Chunk size used for this group *\/$/;"	m	struct:multiplexGroup	file:
szChunk	tsrc/os_unix.c	/^  int szChunk;                        \/* Configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:unixFile	file:
szChunk	tsrc/os_win.c	/^  int szChunk;            \/* Chunk size configured by FCNTL_CHUNK_SIZE *\/$/;"	m	struct:winFile	file:
szCol	ext/fts5/fts5_storage.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	ext/fts5/fts5_storage.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szCol	fts5.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	fts5.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szCol	sqlite3.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	sqlite3.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szCol	tsrc/fts5.c	/^  int szCol;                      \/* Size of column value in tokens *\/$/;"	m	struct:Fts5InsertCtx	file:
szCol	tsrc/fts5.c	/^  int szCol;$/;"	m	struct:Fts5IntegrityCtx	file:
szEst	sqlite3.c	/^  u8 szEst;        \/* Estimated size of value in this column. sizeof(INT)==1 *\/$/;"	m	struct:Column	file:
szEst	src/sqliteInt.h	/^  u8 szEst;        \/* Estimated size of value in this column. sizeof(INT)==1 *\/$/;"	m	struct:Column
szEst	tsrc/sqliteInt.h	/^  u8 szEst;        \/* Estimated size of value in this column. sizeof(INT)==1 *\/$/;"	m	struct:Column
szExtra	sqlite3.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szExtra	sqlite3.c	/^  int szExtra;                        \/* sizeof(MemPage)+sizeof(PgHdr) *\/$/;"	m	struct:PCache1	file:
szExtra	src/pcache.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szExtra	src/pcache1.c	/^  int szExtra;                        \/* sizeof(MemPage)+sizeof(PgHdr) *\/$/;"	m	struct:PCache1	file:
szExtra	src/test_pcache.c	/^  int szExtra;              \/* Size of extra data that accompanies each page *\/$/;"	m	struct:testpcache	file:
szExtra	tsrc/pcache.c	/^  int szExtra;                        \/* Size of extra space for each page *\/$/;"	m	struct:PCache	file:
szExtra	tsrc/pcache1.c	/^  int szExtra;                        \/* sizeof(MemPage)+sizeof(PgHdr) *\/$/;"	m	struct:PCache1	file:
szFirstBlock	sqlite3.c	/^  int szFirstBlock;          \/* Size of first block written to WAL file *\/$/;"	m	struct:Wal	file:
szFirstBlock	src/wal.c	/^  int szFirstBlock;          \/* Size of first block written to WAL file *\/$/;"	m	struct:Wal	file:
szFirstBlock	tsrc/wal.c	/^  int szFirstBlock;          \/* Size of first block written to WAL file *\/$/;"	m	struct:Wal	file:
szIdxRow	sqlite3.c	/^  LogEst szIdxRow;         \/* Estimated average row size in bytes *\/$/;"	m	struct:Index	file:
szIdxRow	src/sqliteInt.h	/^  LogEst szIdxRow;         \/* Estimated average row size in bytes *\/$/;"	m	struct:Index
szIdxRow	tsrc/sqliteInt.h	/^  LogEst szIdxRow;         \/* Estimated average row size in bytes *\/$/;"	m	struct:Index
szLeaf	ext/fts5/fts5_index.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLeaf	fts5.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLeaf	sqlite3.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLeaf	tsrc/fts5.c	/^  int szLeaf;                     \/* Size of leaf without page-index *\/$/;"	m	struct:Fts5Data	file:
szLookaside	sqlite3.c	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config	file:
szLookaside	src/sqliteInt.h	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config
szLookaside	tsrc/sqliteInt.h	/^  int szLookaside;                  \/* Default lookaside buffer size *\/$/;"	m	struct:Sqlite3Config
szMalloc	sqlite3.c	/^  int szMalloc;       \/* Size of the zMalloc allocation *\/$/;"	m	struct:Mem	file:
szMalloc	src/vdbeInt.h	/^  int szMalloc;       \/* Size of the zMalloc allocation *\/$/;"	m	struct:Mem
szMalloc	tsrc/vdbeInt.h	/^  int szMalloc;       \/* Size of the zMalloc allocation *\/$/;"	m	struct:Mem
szMaster	sqlite3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szMaster	src/mem3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szMaster	tsrc/mem3.c	/^  u32 szMaster;$/;"	m	struct:Mem3Global	file:
szMmap	sqlite3.c	/^  i64 szMmap;                   \/* Default mmap_size setting *\/$/;"	m	struct:sqlite3	file:
szMmap	sqlite3.c	/^  sqlite3_int64 szMmap;             \/* mmap() space per open file *\/$/;"	m	struct:Sqlite3Config	file:
szMmap	sqlite3.c	/^  sqlite3_int64 szMmap;       \/* Desired maximum mmap size *\/$/;"	m	struct:Pager	file:
szMmap	src/pager.c	/^  sqlite3_int64 szMmap;       \/* Desired maximum mmap size *\/$/;"	m	struct:Pager	file:
szMmap	src/sqliteInt.h	/^  i64 szMmap;                   \/* Default mmap_size setting *\/$/;"	m	struct:sqlite3
szMmap	src/sqliteInt.h	/^  sqlite3_int64 szMmap;             \/* mmap() space per open file *\/$/;"	m	struct:Sqlite3Config
szMmap	tsrc/pager.c	/^  sqlite3_int64 szMmap;       \/* Desired maximum mmap size *\/$/;"	m	struct:Pager	file:
szMmap	tsrc/sqliteInt.h	/^  i64 szMmap;                   \/* Default mmap_size setting *\/$/;"	m	struct:sqlite3
szMmap	tsrc/sqliteInt.h	/^  sqlite3_int64 szMmap;             \/* mmap() space per open file *\/$/;"	m	struct:Sqlite3Config
szOpAlloc	sqlite3.c	/^  int szOpAlloc;       \/* Bytes of memory space allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse	file:
szOpAlloc	src/sqliteInt.h	/^  int szOpAlloc;       \/* Bytes of memory space allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse
szOpAlloc	tsrc/sqliteInt.h	/^  int szOpAlloc;       \/* Bytes of memory space allocated for Vdbe.aOp[] *\/$/;"	m	struct:Parse
szOsFile	sqlite3.c	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs	file:
szOsFile	sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szOsFile	tsrc/sqlite3.h	/^  int szOsFile;            \/* Size of subclassed sqlite3_file *\/$/;"	m	struct:sqlite3_vfs
szPMA	sqlite3.c	/^  int szPMA;                      \/* Size of pList as PMA in bytes *\/$/;"	m	struct:SorterList	file:
szPMA	src/vdbesort.c	/^  int szPMA;                      \/* Size of pList as PMA in bytes *\/$/;"	m	struct:SorterList	file:
szPMA	tsrc/vdbesort.c	/^  int szPMA;                      \/* Size of pList as PMA in bytes *\/$/;"	m	struct:SorterList	file:
szPage	ext/misc/scrub.c	/^  u32 szPage;              \/* Page size *\/$/;"	m	struct:ScrubState	file:
szPage	sqlite3.c	/^  int szPage;                         \/* Size of database content section *\/$/;"	m	struct:PCache1	file:
szPage	sqlite3.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	sqlite3.c	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config	file:
szPage	sqlite3.c	/^  int szPage;                     \/* Value of 'pgSize' column *\/$/;"	m	struct:StatCursor	file:
szPage	sqlite3.c	/^  int szPage;                  \/* Size of one page *\/$/;"	m	struct:WalWriter	file:
szPage	sqlite3.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	sqlite3.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szPage	src/dbstat.c	/^  int szPage;                     \/* Value of 'pgSize' column *\/$/;"	m	struct:StatCursor	file:
szPage	src/pcache.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	src/pcache1.c	/^  int szPage;                         \/* Size of database content section *\/$/;"	m	struct:PCache1	file:
szPage	src/sqliteInt.h	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config
szPage	src/test_pcache.c	/^  int szPage;               \/* Size of each page.  Multiple of 8. *\/$/;"	m	struct:testpcache	file:
szPage	src/wal.c	/^  int szPage;                  \/* Size of one page *\/$/;"	m	struct:WalWriter	file:
szPage	src/wal.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	src/wal.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szPage	tsrc/dbstat.c	/^  int szPage;                     \/* Value of 'pgSize' column *\/$/;"	m	struct:StatCursor	file:
szPage	tsrc/pcache.c	/^  int szPage;                         \/* Size of every page in this cache *\/$/;"	m	struct:PCache	file:
szPage	tsrc/pcache1.c	/^  int szPage;                         \/* Size of database content section *\/$/;"	m	struct:PCache1	file:
szPage	tsrc/sqliteInt.h	/^  int szPage;                       \/* Size of each page in pPage[] *\/$/;"	m	struct:Sqlite3Config
szPage	tsrc/wal.c	/^  int szPage;                  \/* Size of one page *\/$/;"	m	struct:WalWriter	file:
szPage	tsrc/wal.c	/^  u16 szPage;                     \/* Database page size in bytes. 1==64K *\/$/;"	m	struct:WalIndexHdr	file:
szPage	tsrc/wal.c	/^  u32 szPage;                \/* Database page size *\/$/;"	m	struct:Wal	file:
szPg	tool/offsets.c	/^  int szPg;             \/* Page size for the database file *\/$/;"	m	struct:GState	file:
szPma	sqlite3.c	/^  u32 szPma;                        \/* Maximum Sorter PMA size *\/$/;"	m	struct:Sqlite3Config	file:
szPma	src/sqliteInt.h	/^  u32 szPma;                        \/* Maximum Sorter PMA size *\/$/;"	m	struct:Sqlite3Config
szPma	tsrc/sqliteInt.h	/^  u32 szPma;                        \/* Maximum Sorter PMA size *\/$/;"	m	struct:Sqlite3Config
szRegion	sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	sqlite3.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szRegion	src/os_unix.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	src/os_win.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szRegion	tsrc/os_unix.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:unixShmNode	file:
szRegion	tsrc/os_win.c	/^  int szRegion;              \/* Size of shared-memory regions *\/$/;"	m	struct:winShmNode	file:
szRow	sqlite3.c	/^  u32 szRow;            \/* Byte available in aRow *\/$/;"	m	struct:VdbeCursor	file:
szRow	src/vdbeInt.h	/^  u32 szRow;            \/* Byte available in aRow *\/$/;"	m	struct:VdbeCursor
szRow	tsrc/vdbeInt.h	/^  u32 szRow;            \/* Byte available in aRow *\/$/;"	m	struct:VdbeCursor
szScratch	sqlite3.c	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config	file:
szScratch	src/sqliteInt.h	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config
szScratch	tsrc/sqliteInt.h	/^  int szScratch;                    \/* Size of each scratch buffer *\/$/;"	m	struct:Sqlite3Config
szSep	ext/misc/eval.c	/^  int szSep;             \/* Size of the separator string *\/$/;"	m	struct:EvalResult	file:
szSep	tool/fuzzershell.c	/^  int szSep;             \/* Size of the separator string *\/$/;"	m	struct:EvalResult	file:
szSlot	sqlite3.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
szSlot	src/pcache1.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
szSlot	tsrc/pcache1.c	/^  int szSlot;                    \/* Size of each free slot *\/$/;"	m	struct:PCacheGlobal	file:
szSpill	sqlite3.c	/^  int szSpill;                        \/* Size before spilling occurs *\/$/;"	m	struct:PCache	file:
szSpill	src/pcache.c	/^  int szSpill;                        \/* Size before spilling occurs *\/$/;"	m	struct:PCache	file:
szSpill	tsrc/pcache.c	/^  int szSpill;                        \/* Size before spilling occurs *\/$/;"	m	struct:PCache	file:
szTabRow	sqlite3.c	/^  LogEst szTabRow;     \/* Estimated size of each table row in bytes *\/$/;"	m	struct:Table	file:
szTabRow	src/sqliteInt.h	/^  LogEst szTabRow;     \/* Estimated size of each table row in bytes *\/$/;"	m	struct:Table
szTabRow	tsrc/sqliteInt.h	/^  LogEst szTabRow;     \/* Estimated size of each table row in bytes *\/$/;"	m	struct:Table
szTest	test/speedtest1.c	/^  int szTest;                \/* Scale factor for test iterations *\/$/;"	m	struct:Global	file:
szUsable	ext/misc/scrub.c	/^  u32 szUsable;            \/* Usable bytes on each page *\/$/;"	m	struct:ScrubState	file:
t1CountCtx	src/test1.c	/^struct t1CountCtx {$/;"	s	file:
t1CountCtx	src/test1.c	/^typedef struct t1CountCtx t1CountCtx;$/;"	t	typeref:struct:t1CountCtx	file:
t1CountFinalize	src/test1.c	/^static void t1CountFinalize(sqlite3_context *context){$/;"	f	file:
t1CountStep	src/test1.c	/^static void t1CountStep($/;"	f	file:
t1ErrorName	src/test1.c	132;"	d	file:
t1_ifnullFunc	src/test1.c	/^static void t1_ifnullFunc($/;"	f	file:
tFinal	src/test_func.c	/^static void tFinal(sqlite3_context *a){}$/;"	f	file:
tRowcnt	sqlite3.c	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t	file:
tRowcnt	sqlite3.c	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t	file:
tRowcnt	src/sqliteInt.h	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t
tRowcnt	src/sqliteInt.h	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t
tRowcnt	tsrc/sqliteInt.h	/^ typedef u32 tRowcnt;    \/* 32-bit is the default *\/$/;"	t
tRowcnt	tsrc/sqliteInt.h	/^ typedef u64 tRowcnt;    \/* 64-bit only if requested at compile-time *\/$/;"	t
tStep	src/test_func.c	/^static void tStep(sqlite3_context *a, int b, sqlite3_value **c){}$/;"	f	file:
tabFlags	sqlite3.c	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table	file:
tabFlags	src/sqliteInt.h	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table
tabFlags	tsrc/sqliteInt.h	/^  u8 tabFlags;         \/* Mask of TF_* values *\/$/;"	m	struct:Table
tabTnct	sqlite3.c	/^  int tabTnct;    \/* Ephemeral table used for DISTINCT processing *\/$/;"	m	struct:DistinctCtx	file:
tabTnct	src/select.c	/^  int tabTnct;    \/* Ephemeral table used for DISTINCT processing *\/$/;"	m	struct:DistinctCtx	file:
tabTnct	tsrc/select.c	/^  int tabTnct;    \/* Ephemeral table used for DISTINCT processing *\/$/;"	m	struct:DistinctCtx	file:
table	sqlite3.c	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger	file:
table	src/sqliteInt.h	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger
table	tsrc/sqliteInt.h	/^  char *table;            \/* The table or view to which the trigger applies *\/$/;"	m	struct:Trigger
tableAndColumnIndex	sqlite3.c	/^static int tableAndColumnIndex($/;"	f	file:
tableAndColumnIndex	src/select.c	/^static int tableAndColumnIndex($/;"	f	file:
tableAndColumnIndex	tsrc/select.c	/^static int tableAndColumnIndex($/;"	f	file:
tableOfTrigger	sqlite3.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
tableOfTrigger	src/trigger.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
tableOfTrigger	tsrc/trigger.c	/^static Table *tableOfTrigger(Trigger *pTrigger){$/;"	f	file:
table_column_metadata	sqlite3.c	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines	file:
table_column_metadata	sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
table_column_metadata	src/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
table_column_metadata	tsrc/sqlite3ext.h	/^  int  (*table_column_metadata)(sqlite3*,const char*,const char*,const char*,$/;"	m	struct:sqlite3_api_routines
tablesize	tool/lemon.c	/^  int tablesize;           \/* Total table size of all tables in bytes *\/$/;"	m	struct:lemon	file:
targetSrcList	sqlite3.c	/^static SrcList *targetSrcList($/;"	f	file:
targetSrcList	src/trigger.c	/^static SrcList *targetSrcList($/;"	f	file:
targetSrcList	tsrc/trigger.c	/^static SrcList *targetSrcList($/;"	f	file:
taskId	mptest/mptest.c	/^  int taskId;            \/* Task ID.  0 means supervisor. *\/$/;"	m	struct:Global	file:
tbl	tool/lemon.c	/^  struct s_x1node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x1	typeref:struct:s_x1::s_x1node	file:
tbl	tool/lemon.c	/^  struct s_x2node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x2	typeref:struct:s_x2::s_x2node	file:
tbl	tool/lemon.c	/^  struct s_x3node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x3	typeref:struct:s_x3::s_x3node	file:
tbl	tool/lemon.c	/^  struct s_x4node *tbl;  \/* The data stored here *\/$/;"	m	struct:s_x4	typeref:struct:s_x4::s_x4node	file:
tblHash	sqlite3.c	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema	file:
tblHash	src/sqliteInt.h	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema
tblHash	tsrc/sqliteInt.h	/^  Hash tblHash;        \/* All tables indexed by name *\/$/;"	m	struct:Schema
tblhdr	ext/session/sqlite3session.c	/^  SessionBuffer tblhdr;           \/* Buffer to hold apValue\/zTab\/abPK\/ *\/$/;"	m	struct:sqlite3_changeset_iter	file:
tblhdr	sqlite3.c	/^  SessionBuffer tblhdr;           \/* Buffer to hold apValue\/zTab\/abPK\/ *\/$/;"	m	struct:sqlite3_changeset_iter	file:
tblhdr	tsrc/sqlite3session.c	/^  SessionBuffer tblhdr;           \/* Buffer to hold apValue\/zTab\/abPK\/ *\/$/;"	m	struct:sqlite3_changeset_iter	file:
tclBestIndex	src/test_bestindex.c	/^static int tclBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
tclCallbackDestructor	src/test_quota.c	/^static void tclCallbackDestructor(void *pObj){$/;"	f	file:
tclClose	src/test_bestindex.c	/^static int tclClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
tclCollateNeeded	src/tclsqlite.c	/^static void tclCollateNeeded($/;"	f	file:
tclCollateNeeded	tsrc/tclsqlite.c	/^static void tclCollateNeeded($/;"	f	file:
tclColumn	src/test_bestindex.c	/^static int tclColumn($/;"	f	file:
tclConnect	src/test_bestindex.c	/^static int tclConnect($/;"	f	file:
tclDequote	src/test_bestindex.c	/^static void tclDequote(char *z){$/;"	f	file:
tclDisconnect	src/test_bestindex.c	/^static int tclDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
tclEof	src/test_bestindex.c	/^static int tclEof(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
tclFilter	src/test_bestindex.c	/^static int tclFilter($/;"	f	file:
tclLoadStaticExtensionCmd	src/test1.c	/^static int SQLITE_TCLAPI tclLoadStaticExtensionCmd($/;"	f	file:
tclModule	src/test_bestindex.c	/^static sqlite3_module tclModule = {$/;"	v	file:
tclNext	src/test_bestindex.c	/^static int tclNext(sqlite3_vtab_cursor *pVtabCursor){$/;"	f	file:
tclOpen	src/test_bestindex.c	/^static int tclOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
tclQuotaCallback	src/test_quota.c	/^static void tclQuotaCallback($/;"	f	file:
tclRowid	src/test_bestindex.c	/^static int tclRowid(sqlite3_vtab_cursor *pVtabCursor, sqlite_int64 *pRowid){$/;"	f	file:
tclScriptEvent	src/test_thread.c	/^static int SQLITE_TCLAPI tclScriptEvent(Tcl_Event *evPtr, int flags){$/;"	f	file:
tclScriptThread	src/test_thread.c	/^static Tcl_ThreadCreateType tclScriptThread(ClientData pSqlThread){$/;"	f	file:
tclSqlCollate	src/tclsqlite.c	/^static int tclSqlCollate($/;"	f	file:
tclSqlCollate	tsrc/tclsqlite.c	/^static int tclSqlCollate($/;"	f	file:
tclSqlFunc	src/tclsqlite.c	/^static void tclSqlFunc(sqlite3_context *context, int argc, sqlite3_value**argv){$/;"	f	file:
tclSqlFunc	tsrc/tclsqlite.c	/^static void tclSqlFunc(sqlite3_context *context, int argc, sqlite3_value**argv){$/;"	f	file:
tclWriterThread	src/test_async.c	/^static Tcl_ThreadCreateType tclWriterThread(ClientData pIsStarted){$/;"	f	file:
tcl_client_argc	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_argc($/;"	f	file:
tcl_client_argv	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_argv($/;"	f	file:
tcl_client_colname	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_colname($/;"	f	file:
tcl_client_compile	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_compile($/;"	f	file:
tcl_client_create	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_create($/;"	f	file:
tcl_client_error	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_error($/;"	f	file:
tcl_client_finalize	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_finalize($/;"	f	file:
tcl_client_halt	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_halt($/;"	f	file:
tcl_client_reset	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_reset($/;"	f	file:
tcl_client_result	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_result($/;"	f	file:
tcl_client_step	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_step($/;"	f	file:
tcl_client_swap	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_swap($/;"	f	file:
tcl_client_wait	src/test7.c	/^static int SQLITE_TCLAPI tcl_client_wait($/;"	f	file:
tcl_cursor	src/test_bestindex.c	/^struct tcl_cursor {$/;"	s	file:
tcl_cursor	src/test_bestindex.c	/^typedef struct tcl_cursor tcl_cursor;$/;"	t	typeref:struct:tcl_cursor	file:
tcl_thread_argc	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_argc($/;"	f	file:
tcl_thread_argv	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_argv($/;"	f	file:
tcl_thread_colname	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_colname($/;"	f	file:
tcl_thread_compile	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_compile($/;"	f	file:
tcl_thread_create	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_create($/;"	f	file:
tcl_thread_db_get	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_db_get($/;"	f	file:
tcl_thread_db_put	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_db_put($/;"	f	file:
tcl_thread_error	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_error($/;"	f	file:
tcl_thread_finalize	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_finalize($/;"	f	file:
tcl_thread_halt	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_halt($/;"	f	file:
tcl_thread_result	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_result($/;"	f	file:
tcl_thread_step	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_step($/;"	f	file:
tcl_thread_stmt_get	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_stmt_get($/;"	f	file:
tcl_thread_swap	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_swap($/;"	f	file:
tcl_thread_wait	src/test4.c	/^static int SQLITE_TCLAPI tcl_thread_wait($/;"	f	file:
tcl_variable_type	src/test1.c	/^static int SQLITE_TCLAPI tcl_variable_type($/;"	f	file:
tcl_vtab	src/test_bestindex.c	/^struct tcl_vtab {$/;"	s	file:
tcl_vtab	src/test_bestindex.c	/^typedef struct tcl_vtab tcl_vtab;$/;"	t	typeref:struct:tcl_vtab	file:
tclnum_create	ext/fts5/test/fts5_common.tcl	/^proc tclnum_create {args} {$/;"	p
tclnum_tokenize	ext/fts5/test/fts5_common.tcl	/^proc tclnum_tokenize {mode tflags text} {$/;"	p
tclsh_main_loop	src/tclsqlite.c	/^static const char *tclsh_main_loop(void){$/;"	f	file:
tclsh_main_loop	tsrc/tclsqlite.c	/^static const char *tclsh_main_loop(void){$/;"	f	file:
tclvarAddToIdxstr	src/test_tclvar.c	/^static int tclvarAddToIdxstr(char *zStr, char x){$/;"	f	file:
tclvarBestIndex	src/test_tclvar.c	/^static int tclvarBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
tclvarClose	src/test_tclvar.c	/^static int tclvarClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
tclvarColumn	src/test_tclvar.c	/^static int tclvarColumn(sqlite3_vtab_cursor *cur, sqlite3_context *ctx, int i){$/;"	f	file:
tclvarConnect	src/test_tclvar.c	/^static int tclvarConnect($/;"	f	file:
tclvarDisconnect	src/test_tclvar.c	/^static int tclvarDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
tclvarEof	src/test_tclvar.c	/^static int tclvarEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
tclvarFilter	src/test_tclvar.c	/^static int tclvarFilter($/;"	f	file:
tclvarModule	src/test_tclvar.c	/^static sqlite3_module tclvarModule = {$/;"	v	file:
tclvarNext	src/test_tclvar.c	/^static int tclvarNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
tclvarOpen	src/test_tclvar.c	/^static int tclvarOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
tclvarRowid	src/test_tclvar.c	/^static int tclvarRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
tclvarSetOmit	src/test_tclvar.c	/^static int tclvarSetOmit(Tcl_Interp *interp){$/;"	f	file:
tclvar_cursor	src/test_tclvar.c	/^struct tclvar_cursor {$/;"	s	file:
tclvar_cursor	src/test_tclvar.c	/^typedef struct tclvar_cursor tclvar_cursor;$/;"	t	typeref:struct:tclvar_cursor	file:
tclvar_vtab	src/test_tclvar.c	/^struct tclvar_vtab {$/;"	s	file:
tclvar_vtab	src/test_tclvar.c	/^typedef struct tclvar_vtab tclvar_vtab;$/;"	t	typeref:struct:tclvar_vtab	file:
tcons	parse.y	/^tcons ::= CHECK LP expr(E) RP onconf.$/;"	l
tcons	parse.y	/^tcons ::= CONSTRAINT nm(X).      {pParse->constraintName = X;}$/;"	l
tcons	parse.y	/^tcons ::= FOREIGN KEY LP eidlist(FA) RP$/;"	l
tcons	parse.y	/^tcons ::= PRIMARY KEY LP sortlist(X) autoinc(I) RP onconf(R).$/;"	l
tcons	parse.y	/^tcons ::= UNIQUE LP sortlist(X) RP onconf(R).$/;"	l
tcons	src/parse.y	/^tcons ::= CHECK LP expr(E) RP onconf.$/;"	l
tcons	src/parse.y	/^tcons ::= CONSTRAINT nm(X).      {pParse->constraintName = X;}$/;"	l
tcons	src/parse.y	/^tcons ::= FOREIGN KEY LP eidlist(FA) RP$/;"	l
tcons	src/parse.y	/^tcons ::= PRIMARY KEY LP sortlist(X) autoinc(I) RP onconf(R).$/;"	l
tcons	src/parse.y	/^tcons ::= UNIQUE LP sortlist(X) RP onconf(R).$/;"	l
tconscomma	parse.y	/^tconscomma ::= .$/;"	l
tconscomma	parse.y	/^tconscomma ::= COMMA.            {pParse->constraintName.n = 0;}$/;"	l
tconscomma	src/parse.y	/^tconscomma ::= .$/;"	l
tconscomma	src/parse.y	/^tconscomma ::= COMMA.            {pParse->constraintName.n = 0;}$/;"	l
tempFile	sqlite3.c	/^  u8 tempFile;                \/* zFilename is a temporary or immutable file *\/$/;"	m	struct:Pager	file:
tempFile	src/pager.c	/^  u8 tempFile;                \/* zFilename is a temporary or immutable file *\/$/;"	m	struct:Pager	file:
tempFile	tsrc/pager.c	/^  u8 tempFile;                \/* zFilename is a temporary or immutable file *\/$/;"	m	struct:Pager	file:
tempReg	sqlite3.c	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache	file:
tempReg	src/sqliteInt.h	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache
tempReg	tsrc/sqliteInt.h	/^    u8 tempReg;           \/* iReg is a temp register that needs to be freed *\/$/;"	m	struct:Parse::yColCache
temp_store	sqlite3.c	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3	file:
temp_store	src/sqliteInt.h	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3
temp_store	tsrc/sqliteInt.h	/^  u8 temp_store;                \/* 1: file 2: memory 0: default *\/$/;"	m	struct:sqlite3
term	ext/fts2/fts2.c	/^  DataBuffer term;                \/* previous encoded term *\/$/;"	m	struct:LeafWriter	file:
term	ext/fts2/fts2.c	/^  DataBuffer term;               \/* Last term written to block "last". *\/$/;"	m	struct:InteriorWriter	file:
term	ext/fts2/fts2.c	/^  DataBuffer term;           \/* Leftmost term in block's subtree. *\/$/;"	m	struct:InteriorBlock	file:
term	ext/fts2/fts2.c	/^  DataBuffer term;          \/* copy of current term. *\/$/;"	m	struct:LeafReader	file:
term	ext/fts2/fts2.c	/^  DataBuffer term;          \/* previous term, for decoding term delta. *\/$/;"	m	struct:InteriorReader	file:
term	ext/fts3/fts3_write.c	/^  Blob term;                      \/* Current term *\/$/;"	m	struct:NodeReader	file:
term	ext/fts5/fts5_index.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	ext/fts5/fts5_index.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	ext/fts5/fts5_vocab.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
term	fts5.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	fts5.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	fts5.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
term	sqlite3.c	/^  Blob term;                      \/* Current term *\/$/;"	m	struct:NodeReader	file:
term	sqlite3.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	sqlite3.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	sqlite3.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
term	tsrc/fts2.c	/^  DataBuffer term;                \/* previous encoded term *\/$/;"	m	struct:LeafWriter	file:
term	tsrc/fts2.c	/^  DataBuffer term;               \/* Last term written to block "last". *\/$/;"	m	struct:InteriorWriter	file:
term	tsrc/fts2.c	/^  DataBuffer term;           \/* Leftmost term in block's subtree. *\/$/;"	m	struct:InteriorBlock	file:
term	tsrc/fts2.c	/^  DataBuffer term;          \/* copy of current term. *\/$/;"	m	struct:LeafReader	file:
term	tsrc/fts2.c	/^  DataBuffer term;          \/* previous term, for decoding term delta. *\/$/;"	m	struct:InteriorReader	file:
term	tsrc/fts3_write.c	/^  Blob term;                      \/* Current term *\/$/;"	m	struct:NodeReader	file:
term	tsrc/fts5.c	/^  Fts5Buffer term;                \/* Buffer containing previous term on page *\/$/;"	m	struct:Fts5PageWriter	file:
term	tsrc/fts5.c	/^  Fts5Buffer term;                \/* Current term *\/$/;"	m	struct:Fts5SegIter	file:
term	tsrc/fts5.c	/^  Fts5Buffer term;                \/* Current value of 'term' column *\/$/;"	m	struct:Fts5VocabCursor	file:
termCanDriveIndex	sqlite3.c	/^static int termCanDriveIndex($/;"	f	file:
termCanDriveIndex	src/where.c	/^static int termCanDriveIndex($/;"	f	file:
termCanDriveIndex	tsrc/where.c	/^static int termCanDriveIndex($/;"	f	file:
termDataCmp	ext/fts2/fts2.c	/^static int termDataCmp(const void *av, const void *bv){$/;"	f	file:
termDataCmp	tsrc/fts2.c	/^static int termDataCmp(const void *av, const void *bv){$/;"	f	file:
termIsEquivalence	sqlite3.c	/^static int termIsEquivalence(Parse *pParse, Expr *pExpr){$/;"	f	file:
termIsEquivalence	src/whereexpr.c	/^static int termIsEquivalence(Parse *pParse, Expr *pExpr){$/;"	f	file:
termIsEquivalence	tsrc/whereexpr.c	/^static int termIsEquivalence(Parse *pParse, Expr *pExpr){$/;"	f	file:
termSelect	ext/fts2/fts2.c	/^static int termSelect(fulltext_vtab *v, int iColumn,$/;"	f	file:
termSelect	tsrc/fts2.c	/^static int termSelect(fulltext_vtab *v, int iColumn,$/;"	f	file:
term_chunk_select	ext/fts1/fulltext.c	/^static int term_chunk_select(fulltext_vtab *v, const char *zTerm, int nTerm,$/;"	f	file:
term_delete	ext/fts1/fts1.c	/^static int term_delete(fulltext_vtab *v, sqlite_int64 rowid){$/;"	f	file:
term_delete	ext/fts1/fulltext.c	/^static int term_delete(fulltext_vtab *v, sqlite_int64 rowid){$/;"	f	file:
term_delete	tsrc/fts1.c	/^static int term_delete(fulltext_vtab *v, sqlite_int64 rowid){$/;"	f	file:
term_insert	ext/fts1/fts1.c	/^static int term_insert(fulltext_vtab *v, sqlite_int64 *piRowid,$/;"	f	file:
term_insert	ext/fts1/fulltext.c	/^static int term_insert(fulltext_vtab *v, const char *zTerm, int nTerm,$/;"	f	file:
term_insert	tsrc/fts1.c	/^static int term_insert(fulltext_vtab *v, sqlite_int64 *piRowid,$/;"	f	file:
term_select	ext/fts1/fts1.c	/^static int term_select(fulltext_vtab *v, const char *pTerm, int nTerm,$/;"	f	file:
term_select	ext/fts1/fulltext.c	/^static int term_select(fulltext_vtab *v, const char *zTerm, int nTerm,$/;"	f	file:
term_select	tsrc/fts1.c	/^static int term_select(fulltext_vtab *v, const char *pTerm, int nTerm,$/;"	f	file:
term_select_all	ext/fts1/fts1.c	/^static int term_select_all($/;"	f	file:
term_select_all	tsrc/fts1.c	/^static int term_select_all($/;"	f	file:
term_select_doclist	ext/fts1/fulltext.c	/^static int term_select_doclist(fulltext_vtab *v, const char *pTerm, int nTerm,$/;"	f	file:
term_update	ext/fts1/fts1.c	/^static int term_update(fulltext_vtab *v, sqlite_int64 rowid,$/;"	f	file:
term_update	ext/fts1/fulltext.c	/^static int term_update(fulltext_vtab *v, sqlite_int64 rowid,$/;"	f	file:
term_update	tsrc/fts1.c	/^static int term_update(fulltext_vtab *v, sqlite_int64 rowid,$/;"	f	file:
testAsyncControl	src/test_async.c	/^static int SQLITE_TCLAPI testAsyncControl($/;"	f	file:
testAsyncInit	src/test_async.c	/^static int SQLITE_TCLAPI testAsyncInit($/;"	f	file:
testAsyncShutdown	src/test_async.c	/^static int SQLITE_TCLAPI testAsyncShutdown($/;"	f	file:
testAsyncStart	src/test_async.c	/^static int SQLITE_TCLAPI testAsyncStart($/;"	f	file:
testAsyncWait	src/test_async.c	/^static int SQLITE_TCLAPI testAsyncWait($/;"	f	file:
testBitvecBuiltinTest	src/test2.c	/^static int SQLITE_TCLAPI testBitvecBuiltinTest($/;"	f	file:
testContextMalloc	src/test_func.c	/^static void *testContextMalloc(sqlite3_context *context, int nByte){$/;"	f	file:
testCreateCollationCmp	src/test1.c	/^static int testCreateCollationCmp($/;"	f	file:
testCreateCollationDel	src/test1.c	/^static void testCreateCollationDel(void *pCtx){$/;"	f	file:
testFunc	ext/fts2/fts2_tokenizer.c	/^static void testFunc($/;"	f	file:
testFunc	ext/fts3/fts3_tokenizer.c	/^static void testFunc($/;"	f	file:
testFunc	sqlite3.c	/^static void testFunc($/;"	f	file:
testFunc	src/test1.c	/^static void testFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
testFunc	tsrc/fts2_tokenizer.c	/^static void testFunc($/;"	f	file:
testFunc	tsrc/fts3_tokenizer.c	/^static void testFunc($/;"	f	file:
testHexChar	src/test_func.c	/^static int testHexChar(char c){$/;"	f	file:
testHexToBin	src/test_func.c	/^static void testHexToBin(const char *zIn, char *zOut){$/;"	f	file:
testHexToInt	src/test1.c	/^static int testHexToInt(int h){$/;"	f	file:
testHexToUtf16be	src/test_func.c	/^static void testHexToUtf16be($/;"	f	file:
testHexToUtf16le	src/test_func.c	/^static void testHexToUtf16le($/;"	f	file:
testHexToUtf8	src/test_func.c	/^static void testHexToUtf8($/;"	f	file:
testIsTokenChar	ext/fts3/fts3_test.c	/^static int testIsTokenChar(char c){$/;"	f	file:
testPendingByte	src/test2.c	/^static int SQLITE_TCLAPI testPendingByte($/;"	f	file:
testSqllog	src/test_sqllog.c	/^static void testSqllog(void *pCtx, sqlite3 *db, const char *zSql, int eType){$/;"	f	file:
testSqllogStmt	src/test_sqllog.c	/^static void testSqllogStmt(struct SLConn *p, const char *zSql){$/;"	f	file:
testStreamInput	ext/session/test_session.c	/^static int testStreamInput($/;"	f	file:
testStreamOutput	ext/session/test_session.c	/^static int testStreamOutput($/;"	f	file:
testTokenizerClose	ext/fts3/fts3_test.c	/^static int testTokenizerClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
testTokenizerCreate	ext/fts3/fts3_test.c	/^static int testTokenizerCreate($/;"	f	file:
testTokenizerDestroy	ext/fts3/fts3_test.c	/^static int testTokenizerDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
testTokenizerLanguage	ext/fts3/fts3_test.c	/^static int testTokenizerLanguage($/;"	f	file:
testTokenizerNext	ext/fts3/fts3_test.c	/^static int testTokenizerNext($/;"	f	file:
testTokenizerOpen	ext/fts3/fts3_test.c	/^static int testTokenizerOpen($/;"	f	file:
testTolower	ext/fts3/fts3_test.c	/^static int testTolower(char c){$/;"	f	file:
test_1	ext/fts3/fts3speed.tcl	/^proc test_1 {nInsert} {$/;"	p
test_2	ext/fts3/fts3speed.tcl	/^proc test_2 {} {$/;"	p
test_3	ext/fts3/fts3speed.tcl	/^proc test_3 {nSelect} {$/;"	p
test_4	ext/fts3/fts3speed.tcl	/^proc test_4 {nSelect} {$/;"	p
test_addop_breakpoint	sqlite3.c	/^static void test_addop_breakpoint(void){$/;"	f	file:
test_addop_breakpoint	src/vdbeaux.c	/^static void test_addop_breakpoint(void){$/;"	f	file:
test_addop_breakpoint	tsrc/vdbeaux.c	/^static void test_addop_breakpoint(void){$/;"	f	file:
test_agg_errmsg16_final	src/test_func.c	/^static void test_agg_errmsg16_final(sqlite3_context *ctx){$/;"	f	file:
test_agg_errmsg16_step	src/test_func.c	/^static void test_agg_errmsg16_step(sqlite3_context *a, int b,sqlite3_value **c){$/;"	f	file:
test_alloc_mutex	src/test_mutex.c	/^static int SQLITE_TCLAPI test_alloc_mutex($/;"	f	file:
test_alt_pcache	src/test_malloc.c	/^static int SQLITE_TCLAPI test_alt_pcache($/;"	f	file:
test_append_token	ext/fts5/test/fts5_common.tcl	/^proc test_append_token {varname token iStart iEnd} {$/;"	p
test_append_value	ext/session/test_session.c	/^static void test_append_value(Tcl_Obj *pList, sqlite3_value *pVal){$/;"	f	file:
test_auxdata	src/test_func.c	/^static void test_auxdata($/;"	f	file:
test_bad_behavior	src/test1.c	/^static int SQLITE_TCLAPI test_bad_behavior($/;"	f	file:
test_bind	src/test1.c	/^static int SQLITE_TCLAPI test_bind($/;"	f	file:
test_bind_blob	src/test1.c	/^static int SQLITE_TCLAPI test_bind_blob($/;"	f	file:
test_bind_double	src/test1.c	/^static int SQLITE_TCLAPI test_bind_double($/;"	f	file:
test_bind_int	src/test1.c	/^static int SQLITE_TCLAPI test_bind_int($/;"	f	file:
test_bind_int64	src/test1.c	/^static int SQLITE_TCLAPI test_bind_int64($/;"	f	file:
test_bind_null	src/test1.c	/^static int SQLITE_TCLAPI test_bind_null($/;"	f	file:
test_bind_parameter_count	src/test1.c	/^static int SQLITE_TCLAPI test_bind_parameter_count($/;"	f	file:
test_bind_parameter_index	src/test1.c	/^static int SQLITE_TCLAPI test_bind_parameter_index($/;"	f	file:
test_bind_parameter_name	src/test1.c	/^static int SQLITE_TCLAPI test_bind_parameter_name($/;"	f	file:
test_bind_text	src/test1.c	/^static int SQLITE_TCLAPI test_bind_text($/;"	f	file:
test_bind_text16	src/test1.c	/^static int SQLITE_TCLAPI test_bind_text16($/;"	f	file:
test_bind_zeroblob	src/test1.c	/^static int SQLITE_TCLAPI test_bind_zeroblob($/;"	f	file:
test_bind_zeroblob64	src/test1.c	/^static int SQLITE_TCLAPI test_bind_zeroblob64($/;"	f	file:
test_blob_bytes	src/test_blob.c	/^static int SQLITE_TCLAPI test_blob_bytes($/;"	f	file:
test_blob_close	src/test_blob.c	/^static int SQLITE_TCLAPI test_blob_close($/;"	f	file:
test_blob_open	src/test_blob.c	/^static int SQLITE_TCLAPI test_blob_open($/;"	f	file:
test_blob_read	src/test_blob.c	/^static int SQLITE_TCLAPI test_blob_read($/;"	f	file:
test_blob_reopen	src/test1.c	/^static int SQLITE_TCLAPI test_blob_reopen($/;"	f	file:
test_blob_write	src/test_blob.c	/^static int SQLITE_TCLAPI test_blob_write($/;"	f	file:
test_breakpoint	mptest/mptest.c	/^static void test_breakpoint(void){ static volatile int cnt = 0; cnt++; }$/;"	f	file:
test_breakpoint	shell.c	/^static void test_breakpoint(void){$/;"	f	file:
test_breakpoint	src/shell.c	/^static void test_breakpoint(void){$/;"	f	file:
test_breakpoint	src/test1.c	/^static int SQLITE_TCLAPI test_breakpoint($/;"	f	file:
test_breakpoint	tsrc/shell.c	/^static void test_breakpoint(void){$/;"	f	file:
test_busy_timeout	src/test1.c	/^static int SQLITE_TCLAPI test_busy_timeout($/;"	f	file:
test_changes	src/test1.c	/^static int SQLITE_TCLAPI test_changes($/;"	f	file:
test_clear_bindings	src/test1.c	/^static int SQLITE_TCLAPI test_clear_bindings($/;"	f	file:
test_clear_mutex_counters	src/test_mutex.c	/^static int SQLITE_TCLAPI test_clear_mutex_counters($/;"	f	file:
test_collate	src/test1.c	/^static int SQLITE_TCLAPI test_collate($/;"	f	file:
test_collate_func	src/test1.c	/^static int test_collate_func($/;"	f	file:
test_collate_needed	src/test1.c	/^static int SQLITE_TCLAPI test_collate_needed($/;"	f	file:
test_collate_needed_cb	src/test1.c	/^static void test_collate_needed_cb($/;"	f	file:
test_column_blob	src/test1.c	/^static int SQLITE_TCLAPI test_column_blob($/;"	f	file:
test_column_count	src/test1.c	/^static int SQLITE_TCLAPI test_column_count($/;"	f	file:
test_column_double	src/test1.c	/^static int SQLITE_TCLAPI test_column_double($/;"	f	file:
test_column_int64	src/test1.c	/^static int SQLITE_TCLAPI test_column_int64($/;"	f	file:
test_column_type	src/test1.c	/^static int SQLITE_TCLAPI test_column_type($/;"	f	file:
test_complete16	src/test1.c	/^static int SQLITE_TCLAPI test_complete16($/;"	f	file:
test_config	src/test_mutex.c	/^static int SQLITE_TCLAPI test_config($/;"	f	file:
test_config_cis	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_cis($/;"	f	file:
test_config_error	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_error($/;"	f	file:
test_config_heap	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_heap($/;"	f	file:
test_config_heap_size	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_heap_size($/;"	f	file:
test_config_lookaside	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_lookaside($/;"	f	file:
test_config_memstatus	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_memstatus($/;"	f	file:
test_config_pagecache	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_pagecache($/;"	f	file:
test_config_pmasz	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_pmasz($/;"	f	file:
test_config_scratch	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_scratch($/;"	f	file:
test_config_sqllog	src/test1.c	/^static int SQLITE_TCLAPI test_config_sqllog($/;"	f	file:
test_config_uri	src/test_malloc.c	/^static int SQLITE_TCLAPI test_config_uri($/;"	f	file:
test_conflict_handler	ext/session/test_session.c	/^static int test_conflict_handler($/;"	f	file:
test_control	sqlite3.c	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines	file:
test_control	sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_control	src/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_control	tsrc/sqlite3ext.h	/^  int (*test_control)(int, ...);$/;"	m	struct:sqlite3_api_routines
test_create_aggregate	src/test1.c	/^static int SQLITE_TCLAPI test_create_aggregate($/;"	f	file:
test_create_collation_v2	src/test1.c	/^static int SQLITE_TCLAPI test_create_collation_v2($/;"	f	file:
test_create_function	src/test1.c	/^static int SQLITE_TCLAPI test_create_function($/;"	f	file:
test_create_function_v2	src/test1.c	/^static int SQLITE_TCLAPI test_create_function_v2($/;"	f	file:
test_data_count	src/test1.c	/^static int SQLITE_TCLAPI test_data_count($/;"	f	file:
test_db_cacheflush	src/test1.c	/^static int SQLITE_TCLAPI test_db_cacheflush($/;"	f	file:
test_db_config_lookaside	src/test_malloc.c	/^static int SQLITE_TCLAPI test_db_config_lookaside($/;"	f	file:
test_db_filename	src/test1.c	/^static int SQLITE_TCLAPI test_db_filename($/;"	f	file:
test_db_readonly	src/test1.c	/^static int SQLITE_TCLAPI test_db_readonly($/;"	f	file:
test_db_release_memory	src/test1.c	/^static int SQLITE_TCLAPI test_db_release_memory($/;"	f	file:
test_db_status	src/test_malloc.c	/^static int SQLITE_TCLAPI test_db_status($/;"	f	file:
test_decode	src/test_func.c	/^static void test_decode($/;"	f	file:
test_destructor	src/test_func.c	/^static void test_destructor($/;"	f	file:
test_destructor16	src/test_func.c	/^static void test_destructor16($/;"	f	file:
test_destructor_count	src/test_func.c	/^static void test_destructor_count($/;"	f	file:
test_destructor_count_var	src/test_func.c	/^static int test_destructor_count_var = 0;$/;"	v	file:
test_doublearray_addr	src/test1.c	/^static int SQLITE_TCLAPI test_doublearray_addr($/;"	f	file:
test_dump_memsys3	src/test_malloc.c	/^static int SQLITE_TCLAPI test_dump_memsys3($/;"	f	file:
test_enable_load	src/test1.c	/^static int SQLITE_TCLAPI test_enable_load($/;"	f	file:
test_enable_shared	src/test1.c	/^static int SQLITE_TCLAPI test_enable_shared($/;"	f	file:
test_enter_db_mutex	src/test_mutex.c	/^static int SQLITE_TCLAPI test_enter_db_mutex($/;"	f	file:
test_enter_static_mutex	src/test_mutex.c	/^static int SQLITE_TCLAPI test_enter_static_mutex($/;"	f	file:
test_errcode	src/test1.c	/^static int SQLITE_TCLAPI test_errcode($/;"	f	file:
test_errmsg	src/test1.c	/^static int SQLITE_TCLAPI test_errmsg($/;"	f	file:
test_errmsg16	src/test1.c	/^static int SQLITE_TCLAPI test_errmsg16($/;"	f	file:
test_error	src/test_func.c	/^static void test_error($/;"	f	file:
test_error	test/threadtest3.c	63;"	d	file:
test_error_x	test/threadtest3.c	/^static void test_error_x($/;"	f	file:
test_errstr	src/test1.c	/^static int SQLITE_TCLAPI test_errstr($/;"	f	file:
test_eval	src/test_func.c	/^static void test_eval($/;"	f	file:
test_ex_errcode	src/test1.c	/^static int SQLITE_TCLAPI test_ex_errcode($/;"	f	file:
test_ex_sql	src/test1.c	/^static int SQLITE_TCLAPI test_ex_sql($/;"	f	file:
test_exec	src/test1.c	/^static int SQLITE_TCLAPI test_exec($/;"	f	file:
test_exec_hex	src/test1.c	/^static int SQLITE_TCLAPI test_exec_hex($/;"	f	file:
test_exec_nr	src/test1.c	/^static int SQLITE_TCLAPI test_exec_nr($/;"	f	file:
test_exec_printf	src/test1.c	/^static int SQLITE_TCLAPI test_exec_printf($/;"	f	file:
test_expired	src/test1.c	/^static int SQLITE_TCLAPI test_expired($/;"	f	file:
test_extended_result_codes	src/test1.c	/^static int SQLITE_TCLAPI test_extended_result_codes($/;"	f	file:
test_extract	src/test_func.c	/^static void test_extract($/;"	f	file:
test_filter_handler	ext/session/test_session.c	/^static int test_filter_handler($/;"	f	file:
test_finalize	src/test1.c	/^static int SQLITE_TCLAPI test_finalize($/;"	f	file:
test_find_binary	test/tester.tcl	/^proc test_find_binary {nm} {$/;"	p
test_find_cli	test/tester.tcl	/^proc test_find_cli {} {$/;"	p
test_find_sqldiff	test/tester.tcl	/^proc test_find_sqldiff {} {$/;"	p
test_free	src/test_malloc.c	/^static int SQLITE_TCLAPI test_free($/;"	f	file:
test_fts3_node_chunk_threshold	ext/fts3/fts3_write.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunk_threshold	sqlite3.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunk_threshold	tsrc/fts3_write.c	/^int test_fts3_node_chunk_threshold = (4*1024)*4;$/;"	v
test_fts3_node_chunksize	ext/fts3/fts3_write.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
test_fts3_node_chunksize	sqlite3.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
test_fts3_node_chunksize	tsrc/fts3_write.c	/^int test_fts3_node_chunksize = (4*1024);$/;"	v
test_function	src/test1.c	/^static int SQLITE_TCLAPI test_function($/;"	f	file:
test_function_utf16be	src/test1.c	/^static void test_function_utf16be($/;"	f	file:
test_function_utf16le	src/test1.c	/^static void test_function_utf16le($/;"	f	file:
test_function_utf8	src/test1.c	/^static void test_function_utf8($/;"	f	file:
test_get_table_printf	src/test1.c	/^static int SQLITE_TCLAPI test_get_table_printf($/;"	f	file:
test_getrusage	src/test1.c	/^static int SQLITE_TCLAPI test_getrusage($/;"	f	file:
test_getsubtype	src/test_func.c	/^static void test_getsubtype($/;"	f	file:
test_global_recover	src/test1.c	/^static int SQLITE_TCLAPI test_global_recover($/;"	f	file:
test_initialize	src/test_mutex.c	/^static int SQLITE_TCLAPI test_initialize($/;"	f	file:
test_install_malloc_faultsim	src/test_malloc.c	/^static int SQLITE_TCLAPI test_install_malloc_faultsim($/;"	f	file:
test_install_memsys3	src/test_malloc.c	/^static int SQLITE_TCLAPI test_install_memsys3($/;"	f	file:
test_install_mutex_counters	src/test_mutex.c	/^static int SQLITE_TCLAPI test_install_mutex_counters($/;"	f	file:
test_int64array_addr	src/test1.c	/^static int SQLITE_TCLAPI test_int64array_addr($/;"	f	file:
test_intarray_addr	src/test1.c	/^static int SQLITE_TCLAPI test_intarray_addr($/;"	f	file:
test_intarray_bind	src/test_intarray.c	/^static int SQLITE_TCLAPI test_intarray_bind($/;"	f	file:
test_intarray_create	src/test_intarray.c	/^static int SQLITE_TCLAPI test_intarray_create($/;"	f	file:
test_interrupt	src/test1.c	/^static int SQLITE_TCLAPI test_interrupt($/;"	f	file:
test_io_trace	src/test1.c	/^static int SQLITE_TCLAPI test_io_trace($/;"	f	file:
test_isolation	src/test_func.c	/^static void test_isolation($/;"	f	file:
test_key	src/test1.c	/^static int SQLITE_TCLAPI test_key($/;"	f	file:
test_last_rowid	src/test1.c	/^static int SQLITE_TCLAPI test_last_rowid($/;"	f	file:
test_leave_db_mutex	src/test_mutex.c	/^static int SQLITE_TCLAPI test_leave_db_mutex($/;"	f	file:
test_leave_static_mutex	src/test_mutex.c	/^static int SQLITE_TCLAPI test_leave_static_mutex($/;"	f	file:
test_libversion_number	src/test1.c	/^static int SQLITE_TCLAPI test_libversion_number($/;"	f	file:
test_limit	src/test1.c	/^static int SQLITE_TCLAPI test_limit($/;"	f	file:
test_load_extension	src/test1.c	/^static int SQLITE_TCLAPI test_load_extension($/;"	f	file:
test_malloc	src/test_malloc.c	/^static int SQLITE_TCLAPI test_malloc($/;"	f	file:
test_memdebug_backtrace	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_backtrace($/;"	f	file:
test_memdebug_callback	src/test_malloc.c	/^static void test_memdebug_callback(int nByte, int nFrame, void **aFrame){$/;"	f	file:
test_memdebug_dump	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_dump($/;"	f	file:
test_memdebug_fail	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_fail($/;"	f	file:
test_memdebug_log	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_log($/;"	f	file:
test_memdebug_log_clear	src/test_malloc.c	/^static void test_memdebug_log_clear(void){$/;"	f	file:
test_memdebug_malloc_count	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_malloc_count($/;"	f	file:
test_memdebug_pending	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_pending($/;"	f	file:
test_memdebug_settitle	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memdebug_settitle($/;"	f	file:
test_memget	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memget($/;"	f	file:
test_memory_highwater	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memory_highwater($/;"	f	file:
test_memory_used	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memory_used($/;"	f	file:
test_memset	src/test_malloc.c	/^static int SQLITE_TCLAPI test_memset($/;"	f	file:
test_mprintf_n	src/test1.c	/^static int SQLITE_TCLAPI test_mprintf_n($/;"	f	file:
test_mprintf_z	src/test1.c	/^static int SQLITE_TCLAPI test_mprintf_z($/;"	f	file:
test_multiplex_control	src/test_multiplex.c	/^static int SQLITE_TCLAPI test_multiplex_control($/;"	f	file:
test_multiplex_dump	src/test_multiplex.c	/^static int SQLITE_TCLAPI test_multiplex_dump($/;"	f	file:
test_multiplex_initialize	src/test_multiplex.c	/^static int SQLITE_TCLAPI test_multiplex_initialize($/;"	f	file:
test_multiplex_shutdown	src/test_multiplex.c	/^static int SQLITE_TCLAPI test_multiplex_shutdown($/;"	f	file:
test_mutex_globals	src/test_mutex.c	/^static struct test_mutex_globals {$/;"	s	file:
test_next_stmt	src/test1.c	/^static int SQLITE_TCLAPI test_next_stmt($/;"	f	file:
test_obj_eq_string	ext/session/test_session.c	/^static int test_obj_eq_string(Tcl_Obj *p, const char *z){$/;"	f	file:
test_open	src/test1.c	/^static int SQLITE_TCLAPI test_open($/;"	f	file:
test_open16	src/test1.c	/^static int SQLITE_TCLAPI test_open16($/;"	f	file:
test_open_v2	src/test1.c	/^static int SQLITE_TCLAPI test_open_v2($/;"	f	file:
test_pager_refcounts	src/test1.c	/^static int SQLITE_TCLAPI test_pager_refcounts($/;"	f	file:
test_pagesize	src/test2.c	/^static int test_pagesize = 1024;$/;"	v	file:
test_pcache_stats	src/test1.c	/^static int SQLITE_TCLAPI test_pcache_stats($/;"	f	file:
test_prepare	src/test1.c	/^static int SQLITE_TCLAPI test_prepare($/;"	f	file:
test_prepare16	src/test1.c	/^static int SQLITE_TCLAPI test_prepare16($/;"	f	file:
test_prepare16_v2	src/test1.c	/^static int SQLITE_TCLAPI test_prepare16_v2($/;"	f	file:
test_prepare_tkt3134	src/test1.c	/^static int SQLITE_TCLAPI test_prepare_tkt3134($/;"	f	file:
test_prepare_v2	src/test1.c	/^static int SQLITE_TCLAPI test_prepare_v2($/;"	f	file:
test_print_eqp	src/test1.c	/^static int SQLITE_TCLAPI test_print_eqp($/;"	f	file:
test_printf	src/test1.c	/^static int SQLITE_TCLAPI test_printf($/;"	f	file:
test_pwd	test/tester.tcl	/^proc test_pwd { args } {$/;"	p
test_queryphrase_cb	ext/fts5/test/fts5_common.tcl	/^proc test_queryphrase_cb {cnt cmd} {$/;"	p
test_quota_dump	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_dump($/;"	f	file:
test_quota_fclose	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fclose($/;"	f	file:
test_quota_ferror	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_ferror($/;"	f	file:
test_quota_fflush	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fflush($/;"	f	file:
test_quota_file	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_file($/;"	f	file:
test_quota_file_available	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_file_available($/;"	f	file:
test_quota_file_mtime	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_file_mtime($/;"	f	file:
test_quota_file_size	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_file_size($/;"	f	file:
test_quota_file_truesize	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_file_truesize($/;"	f	file:
test_quota_fopen	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fopen($/;"	f	file:
test_quota_fread	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fread($/;"	f	file:
test_quota_fseek	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fseek($/;"	f	file:
test_quota_ftell	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_ftell($/;"	f	file:
test_quota_ftruncate	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_ftruncate($/;"	f	file:
test_quota_fwrite	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_fwrite($/;"	f	file:
test_quota_glob	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_glob($/;"	f	file:
test_quota_initialize	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_initialize($/;"	f	file:
test_quota_remove	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_remove($/;"	f	file:
test_quota_rewind	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_rewind($/;"	f	file:
test_quota_set	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_set($/;"	f	file:
test_quota_shutdown	src/test_quota.c	/^static int SQLITE_TCLAPI test_quota_shutdown($/;"	f	file:
test_rbu_delta	ext/rbu/test_rbu.c	/^void test_rbu_delta(sqlite3_context *pCtx, int nArg, sqlite3_value **apVal){$/;"	f
test_read_mutex_counters	src/test_mutex.c	/^static int SQLITE_TCLAPI test_read_mutex_counters($/;"	f	file:
test_realloc	src/test_malloc.c	/^static int SQLITE_TCLAPI test_realloc($/;"	f	file:
test_register_dbstat_vtab	src/test1.c	/^static int SQLITE_TCLAPI test_register_dbstat_vtab($/;"	f	file:
test_register_func	src/test1.c	/^static int SQLITE_TCLAPI test_register_func($/;"	f	file:
test_rekey	src/test1.c	/^static int SQLITE_TCLAPI test_rekey($/;"	f	file:
test_release_memory	src/test1.c	/^static int SQLITE_TCLAPI test_release_memory($/;"	f	file:
test_reset	src/test1.c	/^static int SQLITE_TCLAPI test_reset($/;"	f	file:
test_restore_config_pagecache	test/tester.tcl	/^proc test_restore_config_pagecache {} {$/;"	p
test_session_cmd	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_session_cmd($/;"	f	file:
test_session_del	ext/session/test_session.c	/^static void SQLITE_TCLAPI test_session_del(void *clientData){$/;"	f	file:
test_session_error	ext/session/test_session.c	/^static int test_session_error(Tcl_Interp *interp, int rc, char *zErr){$/;"	f	file:
test_set_config_pagecache	test/tester.tcl	/^proc test_set_config_pagecache {sz nPg} {$/;"	p
test_setsubtype	src/test_func.c	/^static void test_setsubtype($/;"	f	file:
test_shutdown	src/test_mutex.c	/^static int SQLITE_TCLAPI test_shutdown($/;"	f	file:
test_sleep	src/test1.c	/^static int SQLITE_TCLAPI test_sleep($/;"	f	file:
test_snapshot_cmp	src/test1.c	/^static int SQLITE_TCLAPI test_snapshot_cmp($/;"	f	file:
test_snapshot_free	src/test1.c	/^static int SQLITE_TCLAPI test_snapshot_free($/;"	f	file:
test_snapshot_get	src/test1.c	/^static int SQLITE_TCLAPI test_snapshot_get($/;"	f	file:
test_snapshot_open	src/test1.c	/^static int SQLITE_TCLAPI test_snapshot_open($/;"	f	file:
test_snprintf_int	src/test1.c	/^static int SQLITE_TCLAPI test_snprintf_int($/;"	f	file:
test_soft_heap_limit	src/test1.c	/^static int SQLITE_TCLAPI test_soft_heap_limit($/;"	f	file:
test_sql	src/test1.c	/^static int SQLITE_TCLAPI test_sql($/;"	f	file:
test_sqlite3_db_config	src/test1.c	/^static int SQLITE_TCLAPI test_sqlite3_db_config($/;"	f	file:
test_sqlite3_log	src/test1.c	/^static int SQLITE_TCLAPI test_sqlite3_log($/;"	f	file:
test_sqlite3changeset_apply	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3changeset_apply($/;"	f	file:
test_sqlite3changeset_apply_replace_all	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3changeset_apply_replace_all($/;"	f	file:
test_sqlite3changeset_concat	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3changeset_concat($/;"	f	file:
test_sqlite3changeset_invert	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3changeset_invert($/;"	f	file:
test_sqlite3rbu	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu($/;"	f	file:
test_sqlite3rbu_cmd	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu_cmd($/;"	f	file:
test_sqlite3rbu_create_vfs	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu_create_vfs($/;"	f	file:
test_sqlite3rbu_destroy_vfs	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu_destroy_vfs($/;"	f	file:
test_sqlite3rbu_internal_test	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu_internal_test($/;"	f	file:
test_sqlite3rbu_vacuum	ext/rbu/test_rbu.c	/^static int SQLITE_TCLAPI test_sqlite3rbu_vacuum($/;"	f	file:
test_sqlite3session	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3session($/;"	f	file:
test_sqlite3session_foreach	ext/session/test_session.c	/^static int SQLITE_TCLAPI test_sqlite3session_foreach($/;"	f	file:
test_stack_used	src/test1.c	/^static int SQLITE_TCLAPI test_stack_used($/;"	f	file:
test_status	src/test_malloc.c	/^static int SQLITE_TCLAPI test_status($/;"	f	file:
test_step	src/test1.c	/^static int SQLITE_TCLAPI test_step($/;"	f	file:
test_stmt_busy	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_busy($/;"	f	file:
test_stmt_int	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_int($/;"	f	file:
test_stmt_readonly	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_readonly($/;"	f	file:
test_stmt_scanstatus	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_scanstatus($/;"	f	file:
test_stmt_scanstatus_reset	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_scanstatus_reset($/;"	f	file:
test_stmt_status	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_status($/;"	f	file:
test_stmt_utf16	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_utf16($/;"	f	file:
test_stmt_utf8	src/test1.c	/^static int SQLITE_TCLAPI test_stmt_utf8($/;"	f	file:
test_syscall	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall($/;"	f	file:
test_syscall_defaultvfs	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_defaultvfs($/;"	f	file:
test_syscall_errno	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_errno($/;"	f	file:
test_syscall_exists	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_exists($/;"	f	file:
test_syscall_fault	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_fault($/;"	f	file:
test_syscall_install	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_install($/;"	f	file:
test_syscall_list	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_list($/;"	f	file:
test_syscall_pagesize	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_pagesize($/;"	f	file:
test_syscall_reset	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_reset($/;"	f	file:
test_syscall_uninstall	src/test_syscall.c	/^static int SQLITE_TCLAPI test_syscall_uninstall($/;"	f	file:
test_system_errno	src/test1.c	/^static int SQLITE_TCLAPI test_system_errno($/;"	f	file:
test_table_column_metadata	src/test1.c	/^static int SQLITE_TCLAPI test_table_column_metadata($/;"	f	file:
test_table_filter	ext/session/test_session.c	/^static int test_table_filter(void *pCtx, const char *zTbl){$/;"	f	file:
test_tcl_integer	ext/session/test_session.c	/^static int test_tcl_integer(Tcl_Interp *interp, const char *zVar){$/;"	f	file:
test_test_control	src/test1.c	/^static int SQLITE_TCLAPI test_test_control($/;"	f	file:
test_textarray_addr	src/test1.c	/^static int SQLITE_TCLAPI test_textarray_addr($/;"	f	file:
test_thread_cleanup	src/test1.c	/^static int SQLITE_TCLAPI test_thread_cleanup($/;"	f	file:
test_tokenizer	ext/fts3/fts3_test.c	/^typedef struct test_tokenizer {$/;"	s	file:
test_tokenizer	ext/fts3/fts3_test.c	/^} test_tokenizer;$/;"	t	typeref:struct:test_tokenizer	file:
test_tokenizer_cursor	ext/fts3/fts3_test.c	/^typedef struct test_tokenizer_cursor {$/;"	s	file:
test_tokenizer_cursor	ext/fts3/fts3_test.c	/^} test_tokenizer_cursor;$/;"	t	typeref:struct:test_tokenizer_cursor	file:
test_transfer_bind	src/test1.c	/^static int SQLITE_TCLAPI test_transfer_bind($/;"	f	file:
test_translate	src/test5.c	/^static int SQLITE_TCLAPI test_translate($/;"	f	file:
test_translate_selftest	src/test5.c	/^static int SQLITE_TCLAPI test_translate_selftest($/;"	f	file:
test_unlock_notify	src/test1.c	/^static int SQLITE_TCLAPI test_unlock_notify($/;"	f	file:
test_unlock_notify_cb	src/test1.c	/^static void test_unlock_notify_cb(void **aArg, int nArg){$/;"	f	file:
test_user_add	src/test1.c	/^static int SQLITE_TCLAPI test_user_add($/;"	f	file:
test_user_authenticate	src/test1.c	/^static int SQLITE_TCLAPI test_user_authenticate($/;"	f	file:
test_user_change	src/test1.c	/^static int SQLITE_TCLAPI test_user_change($/;"	f	file:
test_user_delete	src/test1.c	/^static int SQLITE_TCLAPI test_user_delete($/;"	f	file:
test_utf16bin_collate	src/test1.c	/^static int SQLITE_TCLAPI test_utf16bin_collate($/;"	f	file:
test_utf16bin_collate_func	src/test1.c	/^static int test_utf16bin_collate_func($/;"	f	file:
test_value_overhead	src/test5.c	/^static int SQLITE_TCLAPI test_value_overhead($/;"	f	file:
test_vfs_oom_test	src/test_malloc.c	/^static int SQLITE_TCLAPI test_vfs_oom_test($/;"	f	file:
test_vfslog	src/test_osinst.c	/^static int SQLITE_TCLAPI test_vfslog($/;"	f	file:
test_wal_autocheckpoint	src/test1.c	/^static int SQLITE_TCLAPI test_wal_autocheckpoint($/;"	f	file:
test_wal_checkpoint	src/test1.c	/^static int SQLITE_TCLAPI test_wal_checkpoint($/;"	f	file:
test_wal_checkpoint_v2	src/test1.c	/^static int SQLITE_TCLAPI test_wal_checkpoint_v2($/;"	f	file:
test_zeroblob	src/test_func.c	/^static void test_zeroblob($/;"	f	file:
testasync_g	src/test_async.c	/^} testasync_g = { 0 };$/;"	v	typeref:struct:TestAsyncGlobal
testasync_g_writerMutex	src/test_async.c	/^TCL_DECLARE_MUTEX(testasync_g_writerMutex);$/;"	v
testcase	ext/fts3/fts3Int.h	121;"	d
testcase	ext/fts5/fts5Int.h	35;"	d
testcase	fts5.c	628;"	d	file:
testcase	sqlite3.c	11039;"	d	file:
testcase	sqlite3.c	11041;"	d	file:
testcase	sqlite3.c	141545;"	d	file:
testcase	sqlite3.c	177830;"	d	file:
testcase	src/sqliteInt.h	377;"	d
testcase	src/sqliteInt.h	379;"	d
testcase	tsrc/fts3Int.h	121;"	d
testcase	tsrc/fts5.c	628;"	d	file:
testcase	tsrc/sqliteInt.h	377;"	d
testcase	tsrc/sqliteInt.h	379;"	d
testfixture	test/lock_common.tcl	/^proc testfixture {chan cmd args} {$/;"	p
testfixture_nb	test/lock_common.tcl	/^proc testfixture_nb {varname cmd} {$/;"	p
testfixture_nb_cb	test/lock_common.tcl	/^proc testfixture_nb_cb {varname chan} {$/;"	p
testfixture_script_cb	test/lock_common.tcl	/^proc testfixture_script_cb {chan script} {$/;"	p
testpcache	src/test_pcache.c	/^struct testpcache {$/;"	s	file:
testpcache	src/test_pcache.c	/^typedef struct testpcache testpcache;$/;"	t	typeref:struct:testpcache	file:
testpcacheCachesize	src/test_pcache.c	/^static void testpcacheCachesize(sqlite3_pcache *pCache, int newSize){$/;"	f	file:
testpcacheCreate	src/test_pcache.c	/^static sqlite3_pcache *testpcacheCreate($/;"	f	file:
testpcacheDestroy	src/test_pcache.c	/^static void testpcacheDestroy(sqlite3_pcache *pCache){$/;"	f	file:
testpcacheFetch	src/test_pcache.c	/^static sqlite3_pcache_page *testpcacheFetch($/;"	f	file:
testpcacheGlobal	src/test_pcache.c	/^static testpcacheGlobalType testpcacheGlobal;$/;"	v	file:
testpcacheGlobalType	src/test_pcache.c	/^struct testpcacheGlobalType {$/;"	s	file:
testpcacheGlobalType	src/test_pcache.c	/^typedef struct testpcacheGlobalType testpcacheGlobalType;$/;"	t	typeref:struct:testpcacheGlobalType	file:
testpcacheInit	src/test_pcache.c	/^static int testpcacheInit(void *pArg){$/;"	f	file:
testpcachePage	src/test_pcache.c	/^  struct testpcachePage {$/;"	s	struct:testpcache	file:
testpcachePagecount	src/test_pcache.c	/^static int testpcachePagecount(sqlite3_pcache *pCache){$/;"	f	file:
testpcacheRandom	src/test_pcache.c	/^static unsigned testpcacheRandom(testpcache *p){$/;"	f	file:
testpcacheRekey	src/test_pcache.c	/^static void testpcacheRekey($/;"	f	file:
testpcacheShutdown	src/test_pcache.c	/^static void testpcacheShutdown(void *pArg){$/;"	f	file:
testpcacheTruncate	src/test_pcache.c	/^static void testpcacheTruncate(sqlite3_pcache *pCache, unsigned iLimit){$/;"	f	file:
testpcacheUnpin	src/test_pcache.c	/^static void testpcacheUnpin($/;"	f	file:
testset_cte	test/speedtest1.c	/^void testset_cte(void){$/;"	f
testset_debug1	test/speedtest1.c	/^void testset_debug1(void){$/;"	f
testset_main	test/speedtest1.c	/^void testset_main(void){$/;"	f
testset_rtree	test/speedtest1.c	/^void testset_rtree(int p1, int p2){$/;"	f
testvfs_cmd	src/test_vfs.c	/^static int SQLITE_TCLAPI testvfs_cmd($/;"	f	file:
testvfs_obj_cmd	src/test_vfs.c	/^static int SQLITE_TCLAPI testvfs_obj_cmd($/;"	f	file:
testvfs_obj_del	src/test_vfs.c	/^static void SQLITE_TCLAPI testvfs_obj_del(ClientData cd){$/;"	f	file:
textToPointer	src/test_malloc.c	/^static int textToPointer(const char *z, void **pp){$/;"	f	file:
thread_cleanup	sqlite3.c	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines	file:
thread_cleanup	sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
thread_cleanup	src/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
thread_cleanup	tsrc/sqlite3ext.h	/^  void  (*thread_cleanup)(void);$/;"	m	struct:sqlite3_api_routines
thread_cnt	test/threadtest1.c	/^int thread_cnt = 0;$/;"	v
thread_main	src/test4.c	/^static void *thread_main(void *pArg){$/;"	f	file:
thread_spawn	test/thread_common.tcl	/^proc thread_spawn {varname args} {$/;"	p
thread_wait	src/test4.c	/^static void thread_wait(Thread *p){$/;"	f	file:
threadid	sqlite3.c	29632;"	d	file:
threadid	sqlite3.c	29634;"	d	file:
threadid	src/os_unix.c	307;"	d	file:
threadid	src/os_unix.c	309;"	d	file:
threadid	tsrc/os_unix.c	307;"	d	file:
threadid	tsrc/os_unix.c	309;"	d	file:
threadset	src/test4.c	/^static Thread threadset[N_THREAD];$/;"	v	file:
threadset	src/test7.c	/^static Thread threadset[N_THREAD];$/;"	v	file:
tid	sqlite3.c	/^  pthread_t tid;                 \/* Thread ID *\/$/;"	m	struct:SQLiteThread	file:
tid	sqlite3.c	/^  void *tid;               \/* The thread handle *\/$/;"	m	struct:SQLiteThread	file:
tid	src/threads.c	/^  pthread_t tid;                 \/* Thread ID *\/$/;"	m	struct:SQLiteThread	file:
tid	src/threads.c	/^  void *tid;               \/* The thread handle *\/$/;"	m	struct:SQLiteThread	file:
tid	test/threadtest3.c	/^  pthread_t tid;                  \/* Thread id *\/$/;"	m	struct:Thread	file:
tid	test/threadtest4.c	/^  int tid;                    \/* Thread ID *\/$/;"	m	struct:WorkerInfo	file:
tid	tsrc/threads.c	/^  pthread_t tid;                 \/* Thread ID *\/$/;"	m	struct:SQLiteThread	file:
tid	tsrc/threads.c	/^  void *tid;               \/* The thread handle *\/$/;"	m	struct:SQLiteThread	file:
timeDiff	shell.c	/^static double timeDiff(FILETIME *pStart, FILETIME *pEnd){$/;"	f	file:
timeDiff	shell.c	/^static double timeDiff(struct timeval *pStart, struct timeval *pEnd){$/;"	f	file:
timeDiff	src/shell.c	/^static double timeDiff(FILETIME *pStart, FILETIME *pEnd){$/;"	f	file:
timeDiff	src/shell.c	/^static double timeDiff(struct timeval *pStart, struct timeval *pEnd){$/;"	f	file:
timeDiff	tsrc/shell.c	/^static double timeDiff(FILETIME *pStart, FILETIME *pEnd){$/;"	f	file:
timeDiff	tsrc/shell.c	/^static double timeDiff(struct timeval *pStart, struct timeval *pEnd){$/;"	f	file:
timeFunc	sqlite3.c	/^static void timeFunc($/;"	f	file:
timeFunc	src/date.c	/^static void timeFunc($/;"	f	file:
timeFunc	tsrc/date.c	/^static void timeFunc($/;"	f	file:
timeOfDay	shell.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timeOfDay	src/shell.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timeOfDay	test/fuzzcheck.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timeOfDay	tool/fuzzershell.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timeOfDay	tsrc/shell.c	/^static sqlite3_int64 timeOfDay(void){$/;"	f	file:
timelimit	test/threadtest3.c	/^static double timelimit = 0.0;$/;"	v	file:
timeoutHandler	test/fuzzcheck.c	/^static void timeoutHandler(int NotUsed){$/;"	f	file:
timetostop	test/threadtest3.c	60;"	d	file:
timetostop_x	test/threadtest3.c	/^static int timetostop_x($/;"	f	file:
titleline	tool/spaceanal.tcl	/^proc titleline {title} {$/;"	p
tkCREATE	sqlite3.c	136156;"	d	file:
tkCREATE	src/complete.c	45;"	d	file:
tkCREATE	tsrc/complete.c	45;"	d	file:
tkEND	sqlite3.c	136159;"	d	file:
tkEND	src/complete.c	48;"	d	file:
tkEND	tsrc/complete.c	48;"	d	file:
tkEXPLAIN	sqlite3.c	136155;"	d	file:
tkEXPLAIN	src/complete.c	44;"	d	file:
tkEXPLAIN	tsrc/complete.c	44;"	d	file:
tkOTHER	sqlite3.c	136153;"	d	file:
tkOTHER	src/complete.c	42;"	d	file:
tkOTHER	tsrc/complete.c	42;"	d	file:
tkSEMI	sqlite3.c	136151;"	d	file:
tkSEMI	src/complete.c	40;"	d	file:
tkSEMI	tsrc/complete.c	40;"	d	file:
tkTEMP	sqlite3.c	136157;"	d	file:
tkTEMP	src/complete.c	46;"	d	file:
tkTEMP	tsrc/complete.c	46;"	d	file:
tkTRIGGER	sqlite3.c	136158;"	d	file:
tkTRIGGER	src/complete.c	47;"	d	file:
tkTRIGGER	tsrc/complete.c	47;"	d	file:
tkWS	sqlite3.c	136152;"	d	file:
tkWS	src/complete.c	41;"	d	file:
tkWS	tsrc/complete.c	41;"	d	file:
tkclass	tool/lemon.c	/^  struct symbol *tkclass;    \/* Token class symbol *\/$/;"	m	struct:pstate	typeref:struct:pstate::symbol	file:
tkt2213Function	src/test1.c	/^static void tkt2213Function($/;"	f	file:
tl_create_records	ext/fts3/unicode/mkunicode.tcl	/^proc tl_create_records {} {$/;"	p
tl_generate_ioff_table	ext/fts3/unicode/mkunicode.tcl	/^proc tl_generate_ioff_table {lRecord} {$/;"	p
tl_load_casefolding_txt	ext/fts3/unicode/parseunicode.tcl	/^proc tl_load_casefolding_txt {zName} {$/;"	p
tl_print_if_entry	ext/fts3/unicode/mkunicode.tcl	/^proc tl_print_if_entry {entry} {$/;"	p
tl_print_ioff_table	ext/fts3/unicode/mkunicode.tcl	/^proc tl_print_ioff_table {liOff} {$/;"	p
tl_print_table_entry	ext/fts3/unicode/mkunicode.tcl	/^proc tl_print_table_entry {togglevar entry liOff} {$/;"	p
tl_print_table_footer	ext/fts3/unicode/mkunicode.tcl	/^proc tl_print_table_footer {togglevar} {$/;"	p
tl_print_table_header	ext/fts3/unicode/mkunicode.tcl	/^proc tl_print_table_header {} {$/;"	p
tmask	sqlite3.c	107546;"	d	file:
tmask	src/insert.c	1077;"	d	file:
tmask	tsrc/insert.c	1077;"	d	file:
tmpCheckReservedLock	src/test_onefile.c	/^static int tmpCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
tmpClose	src/test_onefile.c	/^static int tmpClose(sqlite3_file *pFile){$/;"	f	file:
tmpDeviceCharacteristics	src/test_onefile.c	/^static int tmpDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
tmpFileControl	src/test_onefile.c	/^static int tmpFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
tmpFileSize	src/test_onefile.c	/^static int tmpFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
tmpLock	src/test_onefile.c	/^static int tmpLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
tmpRead	src/test_onefile.c	/^static int tmpRead($/;"	f	file:
tmpSectorSize	src/test_onefile.c	/^static int tmpSectorSize(sqlite3_file *pFile){$/;"	f	file:
tmpSync	src/test_onefile.c	/^static int tmpSync(sqlite3_file *pFile, int flags){$/;"	f	file:
tmpTruncate	src/test_onefile.c	/^static int tmpTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
tmpUnlock	src/test_onefile.c	/^static int tmpUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
tmpWrite	src/test_onefile.c	/^static int tmpWrite($/;"	f	file:
tmp_file	src/test_onefile.c	/^struct tmp_file {$/;"	s	file:
tmp_file	src/test_onefile.c	/^typedef struct tmp_file tmp_file;$/;"	t	typeref:struct:tmp_file	file:
tmp_io_methods	src/test_onefile.c	/^static sqlite3_io_methods tmp_io_methods = {$/;"	v	file:
tnum	sqlite3.c	/^  int tnum;                \/* DB Page containing root of this index *\/$/;"	m	struct:Index	file:
tnum	sqlite3.c	/^  int tnum;            \/* Root BTree page for this table *\/$/;"	m	struct:Table	file:
tnum	src/sqliteInt.h	/^  int tnum;                \/* DB Page containing root of this index *\/$/;"	m	struct:Index
tnum	src/sqliteInt.h	/^  int tnum;            \/* Root BTree page for this table *\/$/;"	m	struct:Table
tnum	tsrc/sqliteInt.h	/^  int tnum;                \/* DB Page containing root of this index *\/$/;"	m	struct:Index
tnum	tsrc/sqliteInt.h	/^  int tnum;            \/* Root BTree page for this table *\/$/;"	m	struct:Table
toHex	tool/varint.c	/^static char toHex(unsigned char c){$/;"	f	file:
tointegerFunc	ext/misc/totype.c	/^static void tointegerFunc($/;"	f	file:
tok	ext/fts5/fts5_test_tok.c	/^  fts5_tokenizer tok;             \/* Tokenizer functions *\/$/;"	m	struct:Fts5tokTable	file:
token	sqlite3.c	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram	file:
token	sqlite3.c	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame	file:
token	src/vdbe.h	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram
token	src/vdbeInt.h	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame
token	tsrc/vdbe.h	/^  void *token;                  \/* id that may be used to recursive triggers *\/$/;"	m	struct:SubProgram
token	tsrc/vdbeInt.h	/^  void *token;            \/* Copy of SubProgram.token *\/$/;"	m	struct:VdbeFrame
tokenLength	mptest/mptest.c	/^static int tokenLength(const char *z, int *pnLine){$/;"	f	file:
tokenListToIdList	ext/fts1/fts1.c	/^static void tokenListToIdList(char **azIn){$/;"	f	file:
tokenListToIdList	ext/fts2/fts2.c	/^static void tokenListToIdList(char **azIn){$/;"	f	file:
tokenListToIdList	tsrc/fts1.c	/^static void tokenListToIdList(char **azIn){$/;"	f	file:
tokenListToIdList	tsrc/fts2.c	/^static void tokenListToIdList(char **azIn){$/;"	f	file:
tokendest	tool/lemon.c	/^  char *tokendest;         \/* Code to execute to destroy token data *\/$/;"	m	struct:lemon	file:
tokenizeSegment	ext/fts1/fts1.c	/^static int tokenizeSegment($/;"	f	file:
tokenizeSegment	ext/fts2/fts2.c	/^static int tokenizeSegment($/;"	f	file:
tokenizeSegment	tsrc/fts1.c	/^static int tokenizeSegment($/;"	f	file:
tokenizeSegment	tsrc/fts2.c	/^static int tokenizeSegment($/;"	f	file:
tokenizeString	ext/fts1/fts1.c	/^static char **tokenizeString(const char *z, int *pnToken){$/;"	f	file:
tokenizeString	ext/fts2/fts2.c	/^static char **tokenizeString(const char *z, int *pnToken){$/;"	f	file:
tokenizeString	tsrc/fts1.c	/^static char **tokenizeString(const char *z, int *pnToken){$/;"	f	file:
tokenizeString	tsrc/fts2.c	/^static char **tokenizeString(const char *z, int *pnToken){$/;"	f	file:
tokenize_segment	ext/fts1/fulltext.c	/^static int tokenize_segment(sqlite3_tokenizer *pTokenizer,$/;"	f	file:
tokenizer	ext/fts5/fts5_tokenize.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
tokenizer	fts5.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
tokenizer	sqlite3.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
tokenizer	tsrc/fts5.c	/^  fts5_tokenizer tokenizer;       \/* Parent tokenizer module *\/$/;"	m	struct:PorterTokenizer	file:
tokenlineno	tool/lemon.c	/^  int tokenlineno;      \/* Linenumber at which current token starts *\/$/;"	m	struct:pstate	file:
tokenprefix	tool/lemon.c	/^  char *tokenprefix;       \/* A prefix added to token names in the .h file *\/$/;"	m	struct:lemon	file:
tokenstart	tool/lemon.c	/^  char *tokenstart;     \/* Text of current token *\/$/;"	m	struct:pstate	file:
tokentype	tool/lemon.c	/^  char *tokentype;         \/* Type of terminal symbols in the parser stack *\/$/;"	m	struct:lemon	file:
torealFunc	ext/misc/totype.c	/^static void torealFunc($/;"	f	file:
totalAlloc	sqlite3.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalAlloc	src/mem5.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalAlloc	tsrc/mem5.c	/^  u64 totalAlloc;     \/* Total of all malloc calls - includes internal frag *\/$/;"	m	struct:Mem5Global	file:
totalExcess	sqlite3.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalExcess	src/mem5.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalExcess	tsrc/mem5.c	/^  u64 totalExcess;    \/* Total internal fragmentation *\/$/;"	m	struct:Mem5Global	file:
totalFinalize	sqlite3.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
totalFinalize	src/func.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
totalFinalize	tsrc/func.c	/^static void totalFinalize(sqlite3_context *context){$/;"	f	file:
total_changes	sqlite3.c	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
total_changes	sqlite3.c	/^static void total_changes($/;"	f	file:
total_changes	sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
total_changes	src/func.c	/^static void total_changes($/;"	f	file:
total_changes	src/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
total_changes	tsrc/func.c	/^static void total_changes($/;"	f	file:
total_changes	tsrc/sqlite3ext.h	/^  int  (*total_changes)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
totypeAtoF	ext/misc/totype.c	/^static int totypeAtoF(const char *z, double *pResult, int length){$/;"	f	file:
totypeAtoi64	ext/misc/totype.c	/^static int totypeAtoi64(const char *zNum, sqlite3_int64 *pNum, int length){$/;"	f	file:
totypeCompare2pow63	ext/misc/totype.c	/^static int totypeCompare2pow63(const char *zNum){$/;"	f	file:
totypeIsdigit	ext/misc/totype.c	/^static int totypeIsdigit(unsigned char c){$/;"	f	file:
totypeIsspace	ext/misc/totype.c	/^static int totypeIsspace(unsigned char c){$/;"	f	file:
tplt_linedir	tool/lemon.c	/^PRIVATE void tplt_linedir(FILE *out, int lineno, char *filename)$/;"	f
tplt_open	tool/lemon.c	/^PRIVATE FILE *tplt_open(struct lemon *lemp)$/;"	f
tplt_print	tool/lemon.c	/^PRIVATE void tplt_print(FILE *out, struct lemon *lemp, char *str, int *lineno)$/;"	f
tplt_xfer	tool/lemon.c	/^PRIVATE void tplt_xfer(char *name, FILE *in, FILE *out, int *lineno)$/;"	f
tr_tm	sqlite3.c	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger	file:
tr_tm	src/sqliteInt.h	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger
tr_tm	tsrc/sqliteInt.h	/^  u8 tr_tm;               \/* One of TRIGGER_BEFORE, TRIGGER_AFTER *\/$/;"	m	struct:Trigger
trace	sqlite3.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	sqlite3.c	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace	sqlite3.c	/^  volatile int trace;        \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
trace	src/mutex_unix.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	src/mutex_w32.c	/^  volatile int trace;        \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	src/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
trace	tsrc/mutex_unix.c	/^  int trace;                 \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	tsrc/mutex_w32.c	/^  volatile int trace;        \/* True to trace changes *\/$/;"	m	struct:sqlite3_mutex	file:
trace	tsrc/sqlite3ext.h	/^  void * (*trace)(sqlite3*,void(*xTrace)(void*,const char*),void*);$/;"	m	struct:sqlite3_api_routines
traceCallback	test/speedtest1.c	/^static void traceCallback(void *NotUsed, const char *zSql){$/;"	f	file:
traceCallback	test/wordcount.c	/^static void traceCallback(void *NotUsed, const char *zSql){$/;"	f	file:
traceCallback	tool/fuzzershell.c	/^static void traceCallback(void *NotUsed, const char *zMsg){$/;"	f	file:
traceNoop	tool/fuzzershell.c	/^static void traceNoop(void *NotUsed, const char *zMsg){$/;"	f	file:
traceOut	shell.c	/^  FILE *traceOut;        \/* Output for sqlite3_trace() *\/$/;"	m	struct:ShellState	file:
traceOut	src/shell.c	/^  FILE *traceOut;        \/* Output for sqlite3_trace() *\/$/;"	m	struct:ShellState	file:
traceOut	tsrc/shell.c	/^  FILE *traceOut;        \/* Output for sqlite3_trace() *\/$/;"	m	struct:ShellState	file:
trace_cmd	test/releasetest.tcl	/^proc trace_cmd {args} {$/;"	p
trace_v2	sqlite3.c	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines	file:
trace_v2	sqlite3ext.h	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines
trace_v2	src/sqlite3ext.h	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines
trace_v2	tsrc/sqlite3ext.h	/^  int (*trace_v2)(sqlite3*,unsigned,int(*)(unsigned,void*,void*,void*),void*);$/;"	m	struct:sqlite3_api_routines
transCntrChng	sqlite3.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transCntrChng	src/os_unix.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
transCntrChng	tsrc/os_unix.c	/^  unsigned char transCntrChng;   \/* True if the transaction counter changed *\/$/;"	m	struct:unixFile	file:
trans_opt	parse.y	/^trans_opt ::= .$/;"	l
trans_opt	parse.y	/^trans_opt ::= TRANSACTION nm.$/;"	l
trans_opt	parse.y	/^trans_opt ::= TRANSACTION.$/;"	l
trans_opt	src/parse.y	/^trans_opt ::= .$/;"	l
trans_opt	src/parse.y	/^trans_opt ::= TRANSACTION nm.$/;"	l
trans_opt	src/parse.y	/^trans_opt ::= TRANSACTION.$/;"	l
transferJoinMarkings	sqlite3.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferJoinMarkings	src/whereexpr.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferJoinMarkings	tsrc/whereexpr.c	/^static void transferJoinMarkings(Expr *pDerived, Expr *pBase){$/;"	f	file:
transferParseError	sqlite3.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transferParseError	src/trigger.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transferParseError	tsrc/trigger.c	/^static void transferParseError(Parse *pTo, Parse *pFrom){$/;"	f	file:
transfer_bindings	sqlite3.c	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines	file:
transfer_bindings	sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
transfer_bindings	src/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
transfer_bindings	tsrc/sqlite3ext.h	/^  int  (*transfer_bindings)(sqlite3_stmt*,sqlite3_stmt*);$/;"	m	struct:sqlite3_api_routines
translateColumnToCopy	sqlite3.c	/^static void translateColumnToCopy($/;"	f	file:
translateColumnToCopy	src/where.c	/^static void translateColumnToCopy($/;"	f	file:
translateColumnToCopy	tsrc/where.c	/^static void translateColumnToCopy($/;"	f	file:
translateP	sqlite3.c	/^static int translateP(char c, const Op *pOp){$/;"	f	file:
translateP	src/vdbeaux.c	/^static int translateP(char c, const Op *pOp){$/;"	f	file:
translateP	tsrc/vdbeaux.c	/^static int translateP(char c, const Op *pOp){$/;"	f	file:
translate_code	tool/lemon.c	/^PRIVATE int translate_code(struct lemon *lemp, struct rule *rp){$/;"	f
translen_to_charlen	ext/misc/spellfix.c	/^static int translen_to_charlen(const char *zIn, int nIn, int nTrans){$/;"	f	file:
translit	ext/misc/spellfix.c	/^} translit[] = {$/;"	v	typeref:struct:__anon73	file:
transliterate	ext/misc/spellfix.c	/^static unsigned char *transliterate(const unsigned char *zIn, int nIn){$/;"	f	file:
transliterateSqlFunc	ext/misc/spellfix.c	/^static void transliterateSqlFunc($/;"	f	file:
traverse	tool/loadfts.c	/^static void traverse($/;"	f	file:
tridxby	parse.y	/^tridxby ::= .$/;"	l
tridxby	parse.y	/^tridxby ::= INDEXED BY nm. {$/;"	l
tridxby	parse.y	/^tridxby ::= NOT INDEXED. {$/;"	l
tridxby	src/parse.y	/^tridxby ::= .$/;"	l
tridxby	src/parse.y	/^tridxby ::= INDEXED BY nm. {$/;"	l
tridxby	src/parse.y	/^tridxby ::= NOT INDEXED. {$/;"	l
trigHash	sqlite3.c	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema	file:
trigHash	src/sqliteInt.h	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema
trigHash	tsrc/sqliteInt.h	/^  Hash trigHash;       \/* All triggers indexed by name *\/$/;"	m	struct:Schema
triggerStepAllocate	sqlite3.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
triggerStepAllocate	src/trigger.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
triggerStepAllocate	tsrc/trigger.c	/^static TriggerStep *triggerStepAllocate($/;"	f	file:
trimFunc	sqlite3.c	/^static void trimFunc($/;"	f	file:
trimFunc	src/func.c	/^static void trimFunc($/;"	f	file:
trimFunc	tsrc/func.c	/^static void trimFunc($/;"	f	file:
trimWhiteSpace	ext/fts1/fts1.c	/^static void trimWhiteSpace(StringBuffer *p){$/;"	f	file:
trimWhiteSpace	ext/fts2/fts2.c	/^static void trimWhiteSpace(StringBuffer *p){$/;"	f	file:
trimWhiteSpace	tsrc/fts1.c	/^static void trimWhiteSpace(StringBuffer *p){$/;"	f	file:
trimWhiteSpace	tsrc/fts2.c	/^static void trimWhiteSpace(StringBuffer *p){$/;"	f	file:
truncateOnCommit	sqlite3.c	/^  u8 truncateOnCommit;       \/* True to truncate WAL file on commit *\/$/;"	m	struct:Wal	file:
truncateOnCommit	src/wal.c	/^  u8 truncateOnCommit;       \/* True to truncate WAL file on commit *\/$/;"	m	struct:Wal	file:
truncateOnCommit	tsrc/wal.c	/^  u8 truncateOnCommit;       \/* True to truncate WAL file on commit *\/$/;"	m	struct:Wal	file:
truthProb	sqlite3.c	/^  LogEst truthProb;       \/* Probability of truth for this expression *\/$/;"	m	struct:WhereTerm	file:
truthProb	src/whereInt.h	/^  LogEst truthProb;       \/* Probability of truth for this expression *\/$/;"	m	struct:WhereTerm
truthProb	tsrc/whereInt.h	/^  LogEst truthProb;       \/* Probability of truth for this expression *\/$/;"	m	struct:WhereTerm
trySql	mptest/mptest.c	/^static int trySql(const char *zFormat, ...){$/;"	f	file:
tryToClone	shell.c	/^static void tryToClone(ShellState *p, const char *zNewDb){$/;"	f	file:
tryToClone	src/shell.c	/^static void tryToClone(ShellState *p, const char *zNewDb){$/;"	f	file:
tryToClone	tsrc/shell.c	/^static void tryToClone(ShellState *p, const char *zNewDb){$/;"	f	file:
tryToCloneData	shell.c	/^static void tryToCloneData($/;"	f	file:
tryToCloneData	src/shell.c	/^static void tryToCloneData($/;"	f	file:
tryToCloneData	tsrc/shell.c	/^static void tryToCloneData($/;"	f	file:
tryToCloneSchema	shell.c	/^static void tryToCloneSchema($/;"	f	file:
tryToCloneSchema	src/shell.c	/^static void tryToCloneSchema($/;"	f	file:
tryToCloneSchema	tsrc/shell.c	/^static void tryToCloneSchema($/;"	f	file:
ts	ext/fts5/fts5_main.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
ts	fts5.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
ts	sqlite3.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
ts	tsrc/fts5.c	/^  struct Fts5TransactionState ts;$/;"	m	struct:Fts5Table	typeref:struct:Fts5Table::Fts5TransactionState	file:
tsErrno	src/test_syscall.c	/^static int tsErrno(const char *zFunc){$/;"	f	file:
tsIsFail	src/test_syscall.c	/^static int tsIsFail(void){$/;"	f	file:
tsIsFailErrno	src/test_syscall.c	/^static int tsIsFailErrno(const char *zFunc){$/;"	f	file:
ts_access	src/test_syscall.c	/^static int ts_access(const char *zPath, int mode){$/;"	f	file:
ts_close	src/test_syscall.c	/^static int ts_close(int fd){$/;"	f	file:
ts_fallocate	src/test_syscall.c	/^static int ts_fallocate(int fd, off_t off, off_t len){$/;"	f	file:
ts_fchmod	src/test_syscall.c	/^static int ts_fchmod(int fd, mode_t mode){$/;"	f	file:
ts_fcntl	src/test_syscall.c	/^static int ts_fcntl(int fd, int cmd, ... ){$/;"	f	file:
ts_fstat	src/test_syscall.c	/^static int ts_fstat(int fd, struct stat *p){$/;"	f	file:
ts_ftruncate	src/test_syscall.c	/^static int ts_ftruncate(int fd, off_t n){$/;"	f	file:
ts_getcwd	src/test_syscall.c	/^static char *ts_getcwd(char *zPath, size_t nPath){$/;"	f	file:
ts_getpagesize	src/test_syscall.c	/^static int ts_getpagesize(void){$/;"	f	file:
ts_mmap	src/test_syscall.c	/^static void *ts_mmap($/;"	f	file:
ts_mremap	src/test_syscall.c	/^static void *ts_mremap(void *a, size_t b, size_t c, int d, ...){$/;"	f	file:
ts_open	src/test_syscall.c	/^static int ts_open(const char *zFile, int flags, int mode){$/;"	f	file:
ts_pread	src/test_syscall.c	/^static int ts_pread(int fd, void *aBuf, size_t nBuf, off_t off){$/;"	f	file:
ts_pread64	src/test_syscall.c	/^static int ts_pread64(int fd, void *aBuf, size_t nBuf, sqlite3_uint64 off){$/;"	f	file:
ts_pwrite	src/test_syscall.c	/^static int ts_pwrite(int fd, const void *aBuf, size_t nBuf, off_t off){$/;"	f	file:
ts_pwrite64	src/test_syscall.c	/^static int ts_pwrite64(int fd, const void *aBuf, size_t nBuf, sqlite3_uint64 off){$/;"	f	file:
ts_read	src/test_syscall.c	/^static int ts_read(int fd, void *aBuf, size_t nBuf){$/;"	f	file:
ts_stat	src/test_syscall.c	/^static int ts_stat(const char *zPath, struct stat *p){$/;"	f	file:
ts_write	src/test_syscall.c	/^static int ts_write(int fd, const void *aBuf, size_t nBuf){$/;"	f	file:
tstFlags	ext/misc/csv.c	/^  unsigned int tstFlags;          \/* Bit values used for testing *\/$/;"	m	struct:CsvTable	file:
tvfsAccess	src/test_vfs.c	/^static int tvfsAccess($/;"	f	file:
tvfsAllocPage	src/test_vfs.c	/^static void tvfsAllocPage(TestvfsBuffer *p, int iPage, int pgsz){$/;"	f	file:
tvfsCheckReservedLock	src/test_vfs.c	/^static int tvfsCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
tvfsClose	src/test_vfs.c	/^static int tvfsClose(sqlite3_file *pFile){$/;"	f	file:
tvfsCurrentTime	src/test_vfs.c	/^static int tvfsCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
tvfsDelete	src/test_vfs.c	/^static int tvfsDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
tvfsDeviceCharacteristics	src/test_vfs.c	/^static int tvfsDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
tvfsDlClose	src/test_vfs.c	/^static void tvfsDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
tvfsDlError	src/test_vfs.c	/^static void tvfsDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
tvfsDlOpen	src/test_vfs.c	/^static void *tvfsDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
tvfsDlSym	src/test_vfs.c	/^static void (*tvfsDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
tvfsExecTcl	src/test_vfs.c	/^static void tvfsExecTcl($/;"	f	file:
tvfsFetch	src/test_vfs.c	/^static int tvfsFetch($/;"	f	file:
tvfsFileControl	src/test_vfs.c	/^static int tvfsFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
tvfsFileSize	src/test_vfs.c	/^static int tvfsFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
tvfsFullPathname	src/test_vfs.c	/^static int tvfsFullPathname($/;"	f	file:
tvfsGetFd	src/test_vfs.c	50;"	d	file:
tvfsInjectCantopenerr	src/test_vfs.c	/^static int tvfsInjectCantopenerr(Testvfs *p){$/;"	f	file:
tvfsInjectFault	src/test_vfs.c	/^static int tvfsInjectFault(TestFaultInject *p){$/;"	f	file:
tvfsInjectFullerr	src/test_vfs.c	/^static int tvfsInjectFullerr(Testvfs *p){$/;"	f	file:
tvfsInjectIoerr	src/test_vfs.c	/^static int tvfsInjectIoerr(Testvfs *p){$/;"	f	file:
tvfsLock	src/test_vfs.c	/^static int tvfsLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
tvfsOpen	src/test_vfs.c	/^static int tvfsOpen($/;"	f	file:
tvfsRandomness	src/test_vfs.c	/^static int tvfsRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
tvfsRead	src/test_vfs.c	/^static int tvfsRead($/;"	f	file:
tvfsResultCode	src/test_vfs.c	/^static int tvfsResultCode(Testvfs *p, int *pRc){$/;"	f	file:
tvfsSectorSize	src/test_vfs.c	/^static int tvfsSectorSize(sqlite3_file *pFile){$/;"	f	file:
tvfsShmBarrier	src/test_vfs.c	/^static void tvfsShmBarrier(sqlite3_file *pFile){$/;"	f	file:
tvfsShmLock	src/test_vfs.c	/^static int tvfsShmLock($/;"	f	file:
tvfsShmMap	src/test_vfs.c	/^static int tvfsShmMap($/;"	f	file:
tvfsShmOpen	src/test_vfs.c	/^static int tvfsShmOpen(sqlite3_file *pFile){$/;"	f	file:
tvfsShmUnmap	src/test_vfs.c	/^static int tvfsShmUnmap($/;"	f	file:
tvfsSleep	src/test_vfs.c	/^static int tvfsSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
tvfsSync	src/test_vfs.c	/^static int tvfsSync(sqlite3_file *pFile, int flags){$/;"	f	file:
tvfsTruncate	src/test_vfs.c	/^static int tvfsTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
tvfsUnfetch	src/test_vfs.c	/^static int tvfsUnfetch(sqlite3_file *pFile, sqlite3_int64 iOfst, void *p){$/;"	f	file:
tvfsUnlock	src/test_vfs.c	/^static int tvfsUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
tvfsWrite	src/test_vfs.c	/^static int tvfsWrite($/;"	f	file:
tvfs_io_methods	src/test_vfs.c	/^static sqlite3_io_methods tvfs_io_methods = {$/;"	v	file:
twoCoords	test/speedtest1.c	/^static void twoCoords($/;"	f	file:
type	parse.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
type	sqlite3.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	sqlite3.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
type	src/printf.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
type	tool/lemon.c	/^  enum e_action type;$/;"	m	struct:action	typeref:enum:action::e_action	file:
type	tool/lemon.c	/^  enum option_type type;$/;"	m	struct:s_options	typeref:enum:s_options::option_type	file:
type	tool/lemon.c	/^  enum symbol_type type;   \/* Symbols are all either TERMINALS or NTs *\/$/;"	m	struct:symbol	typeref:enum:symbol::symbol_type	file:
type	tsrc/parse.c	/^struct AttachKey { int type;  Token key; };$/;"	m	struct:AttachKey	file:
type	tsrc/printf.c	/^  etByte type;             \/* Conversion paradigm *\/$/;"	m	struct:et_info	file:
typeMask	sqlite3.c	/^  u8 typeMask;$/;"	m	struct:VdbeSorter	file:
typeMask	src/vdbesort.c	/^  u8 typeMask;$/;"	m	struct:VdbeSorter	file:
typeMask	tsrc/vdbesort.c	/^  u8 typeMask;$/;"	m	struct:VdbeSorter	file:
typeofFunc	sqlite3.c	/^static void typeofFunc($/;"	f	file:
typeofFunc	src/func.c	/^static void typeofFunc($/;"	f	file:
typeofFunc	tsrc/func.c	/^static void typeofFunc($/;"	f	file:
tz	sqlite3.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
tz	src/date.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
tz	tsrc/date.c	/^  int tz;            \/* Timezone offset in minutes *\/$/;"	m	struct:DateTime	file:
tzSet	sqlite3.c	/^  char tzSet;        \/* Timezone was set explicitly *\/$/;"	m	struct:DateTime	file:
tzSet	src/date.c	/^  char tzSet;        \/* Timezone was set explicitly *\/$/;"	m	struct:DateTime	file:
tzSet	tsrc/date.c	/^  char tzSet;        \/* Timezone was set explicitly *\/$/;"	m	struct:DateTime	file:
u	ext/misc/json1.c	/^  } u;$/;"	m	struct:JsonNode	typeref:union:JsonNode::__anon74	file:
u	ext/rtree/rtree.c	/^  u32 u;             \/* Unsigned for byte-order conversions *\/$/;"	m	union:RtreeCoord	file:
u	ext/rtree/rtree.c	/^  } u;$/;"	m	struct:RtreeConstraint	typeref:union:RtreeConstraint::__anon77	file:
u	sqlite3.c	/^    } u;$/;"	m	struct:ExprList::ExprList_item	typeref:union:ExprList::ExprList_item::__anon82	file:
u	sqlite3.c	/^  u32 u;             \/* Unsigned for byte-order conversions *\/$/;"	m	union:RtreeCoord	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon93	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon80	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:FuncDef	typeref:union:FuncDef::__anon79	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:JsonNode	typeref:union:JsonNode::__anon106	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::MemValue	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon90	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:RtreeConstraint	typeref:union:RtreeConstraint::__anon105	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:SorterRecord	typeref:union:SorterRecord::__anon94	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Stat4Sample	typeref:union:Stat4Sample::__anon95	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon87	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon96	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:WhereLoop	typeref:union:WhereLoop::__anon98	file:
u	sqlite3.c	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon101	file:
u	src/analyze.c	/^  } u;$/;"	m	struct:Stat4Sample	typeref:union:Stat4Sample::__anon51	file:
u	src/bitvec.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon68	file:
u	src/mem3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon64	file:
u	src/sqliteInt.h	/^    } u;$/;"	m	struct:ExprList::ExprList_item	typeref:union:ExprList::ExprList_item::__anon56
u	src/sqliteInt.h	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon54
u	src/sqliteInt.h	/^  } u;$/;"	m	struct:FuncDef	typeref:union:FuncDef::__anon53
u	src/sqliteInt.h	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon61
u	src/vdbeInt.h	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::MemValue
u	src/vdbesort.c	/^  } u;$/;"	m	struct:SorterRecord	typeref:union:SorterRecord::__anon44	file:
u	src/whereInt.h	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon45
u	src/whereInt.h	/^  } u;$/;"	m	struct:WhereLoop	typeref:union:WhereLoop::__anon47
u	src/whereInt.h	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon50
u	test/threadtest3.c	/^  } u;$/;"	m	struct:MD5Context	typeref:union:MD5Context::__anon2	file:
u	tsrc/analyze.c	/^  } u;$/;"	m	struct:Stat4Sample	typeref:union:Stat4Sample::__anon16	file:
u	tsrc/bitvec.c	/^  } u;$/;"	m	struct:Bitvec	typeref:union:Bitvec::__anon39	file:
u	tsrc/json1.c	/^  } u;$/;"	m	struct:JsonNode	typeref:union:JsonNode::__anon37	file:
u	tsrc/mem3.c	/^  } u;$/;"	m	struct:Mem3Block	typeref:union:Mem3Block::__anon34	file:
u	tsrc/rtree.c	/^  u32 u;             \/* Unsigned for byte-order conversions *\/$/;"	m	union:RtreeCoord	file:
u	tsrc/rtree.c	/^  } u;$/;"	m	struct:RtreeConstraint	typeref:union:RtreeConstraint::__anon9	file:
u	tsrc/sqliteInt.h	/^    } u;$/;"	m	struct:ExprList::ExprList_item	typeref:union:ExprList::ExprList_item::__anon24
u	tsrc/sqliteInt.h	/^  } u;$/;"	m	struct:Expr	typeref:union:Expr::__anon22
u	tsrc/sqliteInt.h	/^  } u;$/;"	m	struct:FuncDef	typeref:union:FuncDef::__anon21
u	tsrc/sqliteInt.h	/^  } u;$/;"	m	struct:Walker	typeref:union:Walker::__anon29
u	tsrc/vdbeInt.h	/^  } u;$/;"	m	struct:Mem	typeref:union:Mem::MemValue
u	tsrc/vdbesort.c	/^  } u;$/;"	m	struct:SorterRecord	typeref:union:SorterRecord::__anon8	file:
u	tsrc/whereInt.h	/^  } u;$/;"	m	struct:WhereLevel	typeref:union:WhereLevel::__anon10
u	tsrc/whereInt.h	/^  } u;$/;"	m	struct:WhereLoop	typeref:union:WhereLoop::__anon12
u	tsrc/whereInt.h	/^  } u;$/;"	m	struct:WhereTerm	typeref:union:WhereTerm::__anon15
u1	sqlite3.c	/^    } u1;$/;"	m	struct:SrcList::SrcList_item	typeref:union:SrcList::SrcList_item::__anon85	file:
u1	sqlite3.c	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon78	file:
u1	src/sqliteInt.h	/^    } u1;$/;"	m	struct:SrcList::SrcList_item	typeref:union:SrcList::SrcList_item::__anon59
u1	src/sqliteInt.h	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon52
u1	tsrc/sqliteInt.h	/^    } u1;$/;"	m	struct:SrcList::SrcList_item	typeref:union:SrcList::SrcList_item::__anon27
u1	tsrc/sqliteInt.h	/^  } u1;$/;"	m	struct:sqlite3	typeref:union:sqlite3::__anon20
u16	ext/fts5/fts5Int.h	/^typedef unsigned short u16;$/;"	t
u16	ext/misc/scrub.c	/^typedef unsigned short u16;$/;"	t	file:
u16	ext/misc/spellfix.c	/^  typedef unsigned short u16;$/;"	t	file:
u16	ext/rbu/sqlite3rbu.c	/^typedef unsigned short u16;$/;"	t	file:
u16	ext/rtree/rtree.c	/^typedef unsigned short u16;$/;"	t	file:
u16	fts5.c	/^typedef unsigned short u16;$/;"	t	file:
u16	sqlite3.c	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t	file:
u16	sqlite3.c	/^typedef unsigned short u16;$/;"	t	file:
u16	src/sqliteInt.h	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t
u16	tool/sqldiff.c	/^typedef unsigned short u16;$/;"	t	file:
u16	tsrc/fts5.c	/^typedef unsigned short u16;$/;"	t	file:
u16	tsrc/rtree.c	/^typedef unsigned short u16;$/;"	t	file:
u16	tsrc/sqlite3rbu.c	/^typedef unsigned short u16;$/;"	t	file:
u16	tsrc/sqliteInt.h	/^typedef UINT16_TYPE u16;           \/* 2-byte unsigned integer *\/$/;"	t
u32	ext/fts3/fts3Int.h	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t
u32	ext/fts5/fts5Int.h	/^typedef unsigned int   u32;$/;"	t
u32	ext/fts5/fts5_test_mi.c	/^typedef unsigned int u32;$/;"	t	file:
u32	ext/misc/json1.c	/^  typedef unsigned int u32;$/;"	t	file:
u32	ext/misc/scrub.c	/^typedef unsigned int u32;$/;"	t	file:
u32	ext/rbu/sqlite3rbu.c	/^typedef unsigned int u32;$/;"	t	file:
u32	ext/rtree/rtree.c	/^typedef unsigned int u32;$/;"	t	file:
u32	fts5.c	/^typedef unsigned int   u32;$/;"	t	file:
u32	sqlite3.c	/^  typedef unsigned int u32;$/;"	t	file:
u32	sqlite3.c	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	sqlite3.c	/^typedef unsigned int   u32;$/;"	t	file:
u32	sqlite3.c	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t	file:
u32	sqlite3.c	/^typedef unsigned int u32;$/;"	t	file:
u32	src/sqliteInt.h	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t
u32	tool/sqldiff.c	/^typedef unsigned int u32;$/;"	t	file:
u32	tsrc/fts3Int.h	/^typedef unsigned int u32;         \/* 4-byte unsigned integer *\/$/;"	t
u32	tsrc/fts5.c	/^typedef unsigned int   u32;$/;"	t	file:
u32	tsrc/json1.c	/^  typedef unsigned int u32;$/;"	t	file:
u32	tsrc/rtree.c	/^typedef unsigned int u32;$/;"	t	file:
u32	tsrc/sqlite3rbu.c	/^typedef unsigned int u32;$/;"	t	file:
u32	tsrc/sqliteInt.h	/^typedef UINT32_TYPE u32;           \/* 4-byte unsigned integer *\/$/;"	t
u64	ext/fts3/fts3Int.h	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t
u64	ext/fts5/fts5Int.h	/^typedef sqlite3_uint64 u64;$/;"	t
u64	ext/misc/json1.c	/^  typedef sqlite3_uint64 u64;$/;"	t	file:
u64	fts5.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	sqlite3.c	/^  typedef sqlite3_uint64 u64;$/;"	t	file:
u64	sqlite3.c	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	sqlite3.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	sqlite3.c	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t	file:
u64	src/sqliteInt.h	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t
u64	tool/varint.c	/^  typedef unsigned __int64 u64;$/;"	t	file:
u64	tool/varint.c	/^  typedef unsigned long long int u64;$/;"	t	file:
u64	tsrc/fts3Int.h	/^typedef sqlite3_uint64 u64;       \/* 8-byte unsigned integer *\/$/;"	t
u64	tsrc/fts5.c	/^typedef sqlite3_uint64 u64;$/;"	t	file:
u64	tsrc/json1.c	/^  typedef sqlite3_uint64 u64;$/;"	t	file:
u64	tsrc/sqliteInt.h	/^typedef sqlite_uint64 u64;         \/* 8-byte unsigned integer *\/$/;"	t
u8	ext/fts3/fts3Int.h	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t
u8	ext/fts5/fts5Int.h	/^typedef unsigned char  u8;$/;"	t
u8	ext/misc/json1.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	ext/misc/scrub.c	/^typedef unsigned char u8;$/;"	t	file:
u8	ext/misc/spellfix.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	ext/rbu/sqlite3rbu.c	/^typedef unsigned char u8;$/;"	t	file:
u8	ext/rtree/rtree.c	/^typedef unsigned char u8;$/;"	t	file:
u8	fts5.c	/^typedef unsigned char  u8;$/;"	t	file:
u8	sqlite3.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	sqlite3.c	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t	file:
u8	sqlite3.c	/^typedef unsigned char  u8;$/;"	t	file:
u8	sqlite3.c	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t	file:
u8	sqlite3.c	/^typedef unsigned char u8;$/;"	t	file:
u8	src/sqliteInt.h	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t
u8	src/tclsqlite.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	tool/offsets.c	/^typedef unsigned char u8;$/;"	t	file:
u8	tool/sqldiff.c	/^typedef unsigned char u8;$/;"	t	file:
u8	tsrc/fts3Int.h	/^typedef unsigned char u8;         \/* 1-byte (or larger) unsigned integer *\/$/;"	t
u8	tsrc/fts5.c	/^typedef unsigned char  u8;$/;"	t	file:
u8	tsrc/json1.c	/^  typedef unsigned char u8;$/;"	t	file:
u8	tsrc/rtree.c	/^typedef unsigned char u8;$/;"	t	file:
u8	tsrc/sqlite3rbu.c	/^typedef unsigned char u8;$/;"	t	file:
u8	tsrc/sqliteInt.h	/^typedef UINT8_TYPE u8;             \/* 1-byte unsigned integer *\/$/;"	t
u8	tsrc/tclsqlite.c	/^  typedef unsigned char u8;$/;"	t	file:
uTemp	sqlite3.c	/^  u32 uTemp;          \/* Transient storage for serial_type in OP_MakeRecord *\/$/;"	m	struct:Mem	file:
uTemp	src/vdbeInt.h	/^  u32 uTemp;          \/* Transient storage for serial_type in OP_MakeRecord *\/$/;"	m	struct:Mem
uTemp	tsrc/vdbeInt.h	/^  u32 uTemp;          \/* Transient storage for serial_type in OP_MakeRecord *\/$/;"	m	struct:Mem
uc	sqlite3.c	/^  } uc;$/;"	m	struct:VdbeCursor	typeref:union:VdbeCursor::__anon88	file:
uc	src/vdbeInt.h	/^  } uc;$/;"	m	struct:VdbeCursor	typeref:union:VdbeCursor::__anon43
uc	tsrc/vdbeInt.h	/^  } uc;$/;"	m	struct:VdbeCursor	typeref:union:VdbeCursor::__anon7
uint32	src/tclsqlite.c	3545;"	d	file:
uint32	test/threadtest3.c	124;"	d	file:
uint32	tsrc/tclsqlite.c	3545;"	d	file:
unLockFlag	sqlite3.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unLockFlag	src/os_unix.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unLockFlag	tsrc/os_unix.c	/^  unsigned char unLockFlag;         \/* 1 = unlock, 0 = lock *\/$/;"	m	struct:ByteRangeLockPB2	file:
unaligned_string_counter	src/test1.c	/^static int unaligned_string_counter = 0;$/;"	v	file:
uncompressFunc	ext/misc/compress.c	/^static void uncompressFunc($/;"	f	file:
unicodeAddExceptions	ext/fts3/fts3_unicode.c	/^static int unicodeAddExceptions($/;"	f	file:
unicodeAddExceptions	sqlite3.c	/^static int unicodeAddExceptions($/;"	f	file:
unicodeAddExceptions	tsrc/fts3_unicode.c	/^static int unicodeAddExceptions($/;"	f	file:
unicodeClose	ext/fts3/fts3_unicode.c	/^static int unicodeClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
unicodeClose	sqlite3.c	/^static int unicodeClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
unicodeClose	tsrc/fts3_unicode.c	/^static int unicodeClose(sqlite3_tokenizer_cursor *pCursor){$/;"	f	file:
unicodeCreate	ext/fts3/fts3_unicode.c	/^static int unicodeCreate($/;"	f	file:
unicodeCreate	sqlite3.c	/^static int unicodeCreate($/;"	f	file:
unicodeCreate	tsrc/fts3_unicode.c	/^static int unicodeCreate($/;"	f	file:
unicodeDestroy	ext/fts3/fts3_unicode.c	/^static int unicodeDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
unicodeDestroy	sqlite3.c	/^static int unicodeDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
unicodeDestroy	tsrc/fts3_unicode.c	/^static int unicodeDestroy(sqlite3_tokenizer *pTokenizer){$/;"	f	file:
unicodeFunc	sqlite3.c	/^static void unicodeFunc($/;"	f	file:
unicodeFunc	src/func.c	/^static void unicodeFunc($/;"	f	file:
unicodeFunc	tsrc/func.c	/^static void unicodeFunc($/;"	f	file:
unicodeIsAlnum	ext/fts3/fts3_unicode.c	/^static int unicodeIsAlnum(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsAlnum	sqlite3.c	/^static int unicodeIsAlnum(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsAlnum	tsrc/fts3_unicode.c	/^static int unicodeIsAlnum(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsException	ext/fts3/fts3_unicode.c	/^static int unicodeIsException(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsException	sqlite3.c	/^static int unicodeIsException(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeIsException	tsrc/fts3_unicode.c	/^static int unicodeIsException(unicode_tokenizer *p, int iCode){$/;"	f	file:
unicodeNext	ext/fts3/fts3_unicode.c	/^static int unicodeNext($/;"	f	file:
unicodeNext	sqlite3.c	/^static int unicodeNext($/;"	f	file:
unicodeNext	tsrc/fts3_unicode.c	/^static int unicodeNext($/;"	f	file:
unicodeOpen	ext/fts3/fts3_unicode.c	/^static int unicodeOpen($/;"	f	file:
unicodeOpen	sqlite3.c	/^static int unicodeOpen($/;"	f	file:
unicodeOpen	tsrc/fts3_unicode.c	/^static int unicodeOpen($/;"	f	file:
unicode_cursor	ext/fts3/fts3_unicode.c	/^struct unicode_cursor {$/;"	s	file:
unicode_cursor	ext/fts3/fts3_unicode.c	/^typedef struct unicode_cursor unicode_cursor;$/;"	t	typeref:struct:unicode_cursor	file:
unicode_cursor	sqlite3.c	/^struct unicode_cursor {$/;"	s	file:
unicode_cursor	sqlite3.c	/^typedef struct unicode_cursor unicode_cursor;$/;"	t	typeref:struct:unicode_cursor	file:
unicode_cursor	tsrc/fts3_unicode.c	/^struct unicode_cursor {$/;"	s	file:
unicode_cursor	tsrc/fts3_unicode.c	/^typedef struct unicode_cursor unicode_cursor;$/;"	t	typeref:struct:unicode_cursor	file:
unicode_tokenizer	ext/fts3/fts3_unicode.c	/^struct unicode_tokenizer {$/;"	s	file:
unicode_tokenizer	ext/fts3/fts3_unicode.c	/^typedef struct unicode_tokenizer unicode_tokenizer;$/;"	t	typeref:struct:unicode_tokenizer	file:
unicode_tokenizer	sqlite3.c	/^struct unicode_tokenizer {$/;"	s	file:
unicode_tokenizer	sqlite3.c	/^typedef struct unicode_tokenizer unicode_tokenizer;$/;"	t	typeref:struct:unicode_tokenizer	file:
unicode_tokenizer	tsrc/fts3_unicode.c	/^struct unicode_tokenizer {$/;"	s	file:
unicode_tokenizer	tsrc/fts3_unicode.c	/^typedef struct unicode_tokenizer unicode_tokenizer;$/;"	t	typeref:struct:unicode_tokenizer	file:
uniqNotNull	sqlite3.c	/^  unsigned uniqNotNull:1;  \/* True if UNIQUE and NOT NULL for all columns *\/$/;"	m	struct:Index	file:
uniqNotNull	src/sqliteInt.h	/^  unsigned uniqNotNull:1;  \/* True if UNIQUE and NOT NULL for all columns *\/$/;"	m	struct:Index
uniqNotNull	tsrc/sqliteInt.h	/^  unsigned uniqNotNull:1;  \/* True if UNIQUE and NOT NULL for all columns *\/$/;"	m	struct:Index
unixAccess	sqlite3.c	/^static int unixAccess($/;"	f	file:
unixAccess	src/os_unix.c	/^static int unixAccess($/;"	f	file:
unixAccess	tsrc/os_unix.c	/^static int unixAccess($/;"	f	file:
unixCheckReservedLock	sqlite3.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixCheckReservedLock	src/os_unix.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixCheckReservedLock	tsrc/os_unix.c	/^static int unixCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
unixClose	sqlite3.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixClose	src/os_unix.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixClose	tsrc/os_unix.c	/^static int unixClose(sqlite3_file *id){$/;"	f	file:
unixCurrentTime	sqlite3.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTime	sqlite3.c	35598;"	d	file:
unixCurrentTime	src/os_unix.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTime	src/os_unix.c	6273;"	d	file:
unixCurrentTime	tsrc/os_unix.c	/^static int unixCurrentTime(sqlite3_vfs *NotUsed, double *prNow){$/;"	f	file:
unixCurrentTime	tsrc/os_unix.c	6273;"	d	file:
unixCurrentTimeInt64	sqlite3.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixCurrentTimeInt64	src/os_unix.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixCurrentTimeInt64	tsrc/os_unix.c	/^static int unixCurrentTimeInt64(sqlite3_vfs *NotUsed, sqlite3_int64 *piNow){$/;"	f	file:
unixDelete	sqlite3.c	/^static int unixDelete($/;"	f	file:
unixDelete	src/os_unix.c	/^static int unixDelete($/;"	f	file:
unixDelete	tsrc/os_unix.c	/^static int unixDelete($/;"	f	file:
unixDeviceCharacteristics	sqlite3.c	/^static int unixDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
unixDeviceCharacteristics	src/os_unix.c	/^static int unixDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
unixDeviceCharacteristics	tsrc/os_unix.c	/^static int unixDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
unixDlClose	sqlite3.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	sqlite3.c	35464;"	d	file:
unixDlClose	src/os_unix.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	src/os_unix.c	6139;"	d	file:
unixDlClose	tsrc/os_unix.c	/^static void unixDlClose(sqlite3_vfs *NotUsed, void *pHandle){$/;"	f	file:
unixDlClose	tsrc/os_unix.c	6139;"	d	file:
unixDlError	sqlite3.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	sqlite3.c	35462;"	d	file:
unixDlError	src/os_unix.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	src/os_unix.c	6137;"	d	file:
unixDlError	tsrc/os_unix.c	/^static void unixDlError(sqlite3_vfs *NotUsed, int nBuf, char *zBufOut){$/;"	f	file:
unixDlError	tsrc/os_unix.c	6137;"	d	file:
unixDlOpen	sqlite3.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	sqlite3.c	35461;"	d	file:
unixDlOpen	src/os_unix.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	src/os_unix.c	6136;"	d	file:
unixDlOpen	tsrc/os_unix.c	/^static void *unixDlOpen(sqlite3_vfs *NotUsed, const char *zFilename){$/;"	f	file:
unixDlOpen	tsrc/os_unix.c	6136;"	d	file:
unixDlSym	sqlite3.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	sqlite3.c	35463;"	d	file:
unixDlSym	src/os_unix.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	src/os_unix.c	6138;"	d	file:
unixDlSym	tsrc/os_unix.c	/^static void (*unixDlSym(sqlite3_vfs *NotUsed, void *p, const char*zSym))(void){$/;"	f	file:
unixDlSym	tsrc/os_unix.c	6138;"	d	file:
unixEnterMutex	sqlite3.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixEnterMutex	src/os_unix.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixEnterMutex	tsrc/os_unix.c	/^static void unixEnterMutex(void){$/;"	f	file:
unixFetch	sqlite3.c	/^static int unixFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
unixFetch	src/os_unix.c	/^static int unixFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
unixFetch	tsrc/os_unix.c	/^static int unixFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
unixFile	sqlite3.c	/^struct unixFile {$/;"	s	file:
unixFile	sqlite3.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFile	src/os_unix.c	/^struct unixFile {$/;"	s	file:
unixFile	src/os_unix.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFile	tsrc/os_unix.c	/^struct unixFile {$/;"	s	file:
unixFile	tsrc/os_unix.c	/^typedef struct unixFile unixFile;$/;"	t	typeref:struct:unixFile	file:
unixFileControl	sqlite3.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileControl	src/os_unix.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileControl	tsrc/os_unix.c	/^static int unixFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
unixFileId	sqlite3.c	/^struct unixFileId {$/;"	s	file:
unixFileId	src/os_unix.c	/^struct unixFileId {$/;"	s	file:
unixFileId	tsrc/os_unix.c	/^struct unixFileId {$/;"	s	file:
unixFileLock	sqlite3.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileLock	src/os_unix.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileLock	tsrc/os_unix.c	/^static int unixFileLock(unixFile *pFile, struct flock *pLock){$/;"	f	file:
unixFileSize	sqlite3.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFileSize	src/os_unix.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFileSize	tsrc/os_unix.c	/^static int unixFileSize(sqlite3_file *id, i64 *pSize){$/;"	f	file:
unixFullPathname	sqlite3.c	/^static int unixFullPathname($/;"	f	file:
unixFullPathname	src/os_unix.c	/^static int unixFullPathname($/;"	f	file:
unixFullPathname	tsrc/os_unix.c	/^static int unixFullPathname($/;"	f	file:
unixGetLastError	sqlite3.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetLastError	src/os_unix.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetLastError	tsrc/os_unix.c	/^static int unixGetLastError(sqlite3_vfs *NotUsed, int NotUsed2, char *NotUsed3){$/;"	f	file:
unixGetSystemCall	sqlite3.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetSystemCall	src/os_unix.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetSystemCall	tsrc/os_unix.c	/^static sqlite3_syscall_ptr unixGetSystemCall($/;"	f	file:
unixGetTempname	sqlite3.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixGetTempname	src/os_unix.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixGetTempname	tsrc/os_unix.c	/^static int unixGetTempname(int nBuf, char *zBuf){$/;"	f	file:
unixGetpagesize	sqlite3.c	/^static int unixGetpagesize(void){$/;"	f	file:
unixGetpagesize	src/os_unix.c	/^static int unixGetpagesize(void){$/;"	f	file:
unixGetpagesize	tsrc/os_unix.c	/^static int unixGetpagesize(void){$/;"	f	file:
unixInodeInfo	sqlite3.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	sqlite3.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixInodeInfo	src/os_unix.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	src/os_unix.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixInodeInfo	tsrc/os_unix.c	/^struct unixInodeInfo {$/;"	s	file:
unixInodeInfo	tsrc/os_unix.c	/^typedef struct unixInodeInfo unixInodeInfo;   \/* An i-node *\/$/;"	t	typeref:struct:unixInodeInfo	file:
unixLeaveMutex	sqlite3.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLeaveMutex	src/os_unix.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLeaveMutex	tsrc/os_unix.c	/^static void unixLeaveMutex(void){$/;"	f	file:
unixLock	sqlite3.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLock	src/os_unix.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLock	tsrc/os_unix.c	/^static int unixLock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixLogError	sqlite3.c	30443;"	d	file:
unixLogError	src/os_unix.c	1118;"	d	file:
unixLogError	tsrc/os_unix.c	1118;"	d	file:
unixLogErrorAtLine	sqlite3.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixLogErrorAtLine	src/os_unix.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixLogErrorAtLine	tsrc/os_unix.c	/^static int unixLogErrorAtLine($/;"	f	file:
unixMapfile	sqlite3.c	/^static int unixMapfile(unixFile *pFd, i64 nMap){$/;"	f	file:
unixMapfile	src/os_unix.c	/^static int unixMapfile(unixFile *pFd, i64 nMap){$/;"	f	file:
unixMapfile	tsrc/os_unix.c	/^static int unixMapfile(unixFile *pFd, i64 nMap){$/;"	f	file:
unixModeBit	sqlite3.c	/^static void unixModeBit(unixFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
unixModeBit	src/os_unix.c	/^static void unixModeBit(unixFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
unixModeBit	tsrc/os_unix.c	/^static void unixModeBit(unixFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
unixMutexHeld	sqlite3.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixMutexHeld	src/os_unix.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixMutexHeld	tsrc/os_unix.c	/^static int unixMutexHeld(void) {$/;"	f	file:
unixNextSystemCall	sqlite3.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixNextSystemCall	src/os_unix.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixNextSystemCall	tsrc/os_unix.c	/^static const char *unixNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
unixOpen	sqlite3.c	/^static int unixOpen($/;"	f	file:
unixOpen	src/os_unix.c	/^static int unixOpen($/;"	f	file:
unixOpen	tsrc/os_unix.c	/^static int unixOpen($/;"	f	file:
unixOpenSharedMemory	sqlite3.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixOpenSharedMemory	src/os_unix.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixOpenSharedMemory	tsrc/os_unix.c	/^static int unixOpenSharedMemory(unixFile *pDbFd){$/;"	f	file:
unixRandomness	sqlite3.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRandomness	src/os_unix.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRandomness	tsrc/os_unix.c	/^static int unixRandomness(sqlite3_vfs *NotUsed, int nBuf, char *zBuf){$/;"	f	file:
unixRead	sqlite3.c	/^static int unixRead($/;"	f	file:
unixRead	src/os_unix.c	/^static int unixRead($/;"	f	file:
unixRead	tsrc/os_unix.c	/^static int unixRead($/;"	f	file:
unixRemapfile	sqlite3.c	/^static void unixRemapfile($/;"	f	file:
unixRemapfile	src/os_unix.c	/^static void unixRemapfile($/;"	f	file:
unixRemapfile	tsrc/os_unix.c	/^static void unixRemapfile($/;"	f	file:
unixSectorSize	sqlite3.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSectorSize	sqlite3.c	/^static int unixSectorSize(sqlite3_file *id){$/;"	f	file:
unixSectorSize	src/os_unix.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSectorSize	src/os_unix.c	/^static int unixSectorSize(sqlite3_file *id){$/;"	f	file:
unixSectorSize	tsrc/os_unix.c	/^static int unixSectorSize(sqlite3_file *NotUsed){$/;"	f	file:
unixSectorSize	tsrc/os_unix.c	/^static int unixSectorSize(sqlite3_file *id){$/;"	f	file:
unixSetSystemCall	sqlite3.c	/^static int unixSetSystemCall($/;"	f	file:
unixSetSystemCall	src/os_unix.c	/^static int unixSetSystemCall($/;"	f	file:
unixSetSystemCall	tsrc/os_unix.c	/^static int unixSetSystemCall($/;"	f	file:
unixShm	sqlite3.c	/^struct unixShm {$/;"	s	file:
unixShm	sqlite3.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShm	src/os_unix.c	/^struct unixShm {$/;"	s	file:
unixShm	src/os_unix.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShm	tsrc/os_unix.c	/^struct unixShm {$/;"	s	file:
unixShm	tsrc/os_unix.c	/^typedef struct unixShm unixShm;               \/* Connection shared memory *\/$/;"	t	typeref:struct:unixShm	file:
unixShmBarrier	sqlite3.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	sqlite3.c	34021;"	d	file:
unixShmBarrier	src/os_unix.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	src/os_unix.c	4696;"	d	file:
unixShmBarrier	tsrc/os_unix.c	/^static void unixShmBarrier($/;"	f	file:
unixShmBarrier	tsrc/os_unix.c	4696;"	d	file:
unixShmLock	sqlite3.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	sqlite3.c	34020;"	d	file:
unixShmLock	src/os_unix.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	src/os_unix.c	4695;"	d	file:
unixShmLock	tsrc/os_unix.c	/^static int unixShmLock($/;"	f	file:
unixShmLock	tsrc/os_unix.c	4695;"	d	file:
unixShmMap	sqlite3.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	sqlite3.c	34019;"	d	file:
unixShmMap	src/os_unix.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	src/os_unix.c	4694;"	d	file:
unixShmMap	tsrc/os_unix.c	/^static int unixShmMap($/;"	f	file:
unixShmMap	tsrc/os_unix.c	4694;"	d	file:
unixShmNode	sqlite3.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	sqlite3.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmNode	src/os_unix.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	src/os_unix.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmNode	tsrc/os_unix.c	/^struct unixShmNode {$/;"	s	file:
unixShmNode	tsrc/os_unix.c	/^typedef struct unixShmNode unixShmNode;       \/* Shared memory instance *\/$/;"	t	typeref:struct:unixShmNode	file:
unixShmPurge	sqlite3.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmPurge	src/os_unix.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmPurge	tsrc/os_unix.c	/^static void unixShmPurge(unixFile *pFd){$/;"	f	file:
unixShmRegionPerMap	sqlite3.c	/^static int unixShmRegionPerMap(void){$/;"	f	file:
unixShmRegionPerMap	src/os_unix.c	/^static int unixShmRegionPerMap(void){$/;"	f	file:
unixShmRegionPerMap	tsrc/os_unix.c	/^static int unixShmRegionPerMap(void){$/;"	f	file:
unixShmSystemLock	sqlite3.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmSystemLock	src/os_unix.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmSystemLock	tsrc/os_unix.c	/^static int unixShmSystemLock($/;"	f	file:
unixShmUnmap	sqlite3.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	sqlite3.c	34022;"	d	file:
unixShmUnmap	src/os_unix.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	src/os_unix.c	4697;"	d	file:
unixShmUnmap	tsrc/os_unix.c	/^static int unixShmUnmap($/;"	f	file:
unixShmUnmap	tsrc/os_unix.c	4697;"	d	file:
unixSleep	sqlite3.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSleep	src/os_unix.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSleep	tsrc/os_unix.c	/^static int unixSleep(sqlite3_vfs *NotUsed, int microseconds){$/;"	f	file:
unixSync	sqlite3.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixSync	src/os_unix.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixSync	tsrc/os_unix.c	/^static int unixSync(sqlite3_file *id, int flags){$/;"	f	file:
unixTempFileDir	sqlite3.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTempFileDir	src/os_unix.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTempFileDir	tsrc/os_unix.c	/^static const char *unixTempFileDir(void){$/;"	f	file:
unixTruncate	sqlite3.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixTruncate	src/os_unix.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixTruncate	tsrc/os_unix.c	/^static int unixTruncate(sqlite3_file *id, i64 nByte){$/;"	f	file:
unixUnfetch	sqlite3.c	/^static int unixUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
unixUnfetch	src/os_unix.c	/^static int unixUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
unixUnfetch	tsrc/os_unix.c	/^static int unixUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
unixUnlock	sqlite3.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixUnlock	src/os_unix.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixUnlock	tsrc/os_unix.c	/^static int unixUnlock(sqlite3_file *id, int eFileLock){$/;"	f	file:
unixUnmapfile	sqlite3.c	/^static void unixUnmapfile(unixFile *pFd){$/;"	f	file:
unixUnmapfile	src/os_unix.c	/^static void unixUnmapfile(unixFile *pFd){$/;"	f	file:
unixUnmapfile	tsrc/os_unix.c	/^static void unixUnmapfile(unixFile *pFd){$/;"	f	file:
unixWrite	sqlite3.c	/^static int unixWrite($/;"	f	file:
unixWrite	src/os_unix.c	/^static int unixWrite($/;"	f	file:
unixWrite	tsrc/os_unix.c	/^static int unixWrite($/;"	f	file:
unix_syscall	sqlite3.c	/^static struct unix_syscall {$/;"	s	file:
unix_syscall	src/os_unix.c	/^static struct unix_syscall {$/;"	s	file:
unix_syscall	tsrc/os_unix.c	/^static struct unix_syscall {$/;"	s	file:
unknownFunc	sqlite3.c	/^static void unknownFunc($/;"	f	file:
unknownFunc	src/func.c	/^static void unknownFunc($/;"	f	file:
unknownFunc	tsrc/func.c	/^static void unknownFunc($/;"	f	file:
unlikely	sqlite3.c	11158;"	d	file:
unlikely	src/sqliteInt.h	496;"	d
unlikely	tsrc/sqliteInt.h	496;"	d
unlinkAsyncFile	ext/async/sqlite3async.c	/^static int unlinkAsyncFile(AsyncFileData *pData){$/;"	f	file:
unlockBtreeIfUnused	sqlite3.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeIfUnused	src/btree.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeIfUnused	tsrc/btree.c	/^static void unlockBtreeIfUnused(BtShared *pBt){$/;"	f	file:
unlockBtreeMutex	sqlite3.c	/^static void SQLITE_NOINLINE unlockBtreeMutex(Btree *p){$/;"	f	file:
unlockBtreeMutex	src/btmutex.c	/^static void SQLITE_NOINLINE unlockBtreeMutex(Btree *p){$/;"	f	file:
unlockBtreeMutex	tsrc/btmutex.c	/^static void SQLITE_NOINLINE unlockBtreeMutex(Btree *p){$/;"	f	file:
unlock_notify	sqlite3.c	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
unlock_notify	sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
unlock_notify	src/sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
unlock_notify	tsrc/sqlite3ext.h	/^  int (*unlock_notify)(sqlite3*,void(*)(void**,int),void*);$/;"	m	struct:sqlite3_api_routines
unlock_notify_cb	src/test_thread.c	/^static void unlock_notify_cb(void **apArg, int nArg){$/;"	f	file:
unrecognizedArguments	mptest/mptest.c	/^static void unrecognizedArguments($/;"	f	file:
unregister_demovfs	src/test_demovfs.c	/^static int SQLITE_TCLAPI unregister_demovfs($/;"	f	file:
untestedTerms	sqlite3.c	/^  u8 untestedTerms;         \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo	file:
untestedTerms	src/whereInt.h	/^  u8 untestedTerms;         \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo
untestedTerms	tsrc/whereInt.h	/^  u8 untestedTerms;         \/* Not all WHERE terms resolved by outer loop *\/$/;"	m	struct:WhereInfo
unused	sqlite3.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
unused	src/wal.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
unused	tsrc/wal.c	/^  u32 unused;                     \/* Unused (padding) field *\/$/;"	m	struct:WalIndexHdr	file:
updateAccumulator	sqlite3.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateAccumulator	src/select.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateAccumulator	tsrc/select.c	/^static void updateAccumulator(Parse *pParse, AggInfo *pAggInfo){$/;"	f	file:
updateCost	ext/misc/spellfix.c	/^static void updateCost($/;"	f	file:
updateMapping	ext/rtree/rtree.c	/^static int updateMapping($/;"	f	file:
updateMapping	sqlite3.c	/^static int updateMapping($/;"	f	file:
updateMapping	tsrc/rtree.c	/^static int updateMapping($/;"	f	file:
updateMaxBlobsize	sqlite3.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateMaxBlobsize	src/vdbe.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateMaxBlobsize	tsrc/vdbe.c	/^static void updateMaxBlobsize(Mem *p){$/;"	f	file:
updateVirtualTable	sqlite3.c	/^static void updateVirtualTable($/;"	f	file:
updateVirtualTable	src/update.c	/^static void updateVirtualTable($/;"	f	file:
updateVirtualTable	tsrc/update.c	/^static void updateVirtualTable($/;"	f	file:
update_hook	sqlite3.c	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines	file:
update_hook	sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
update_hook	src/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
update_hook	tsrc/sqlite3ext.h	/^  void * (*update_hook)(sqlite3*,void(*)(void*,int ,char const*,char const*,$/;"	m	struct:sqlite3_api_routines
upperFunc	sqlite3.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
upperFunc	src/func.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
upperFunc	tsrc/func.c	/^static void upperFunc(sqlite3_context *context, int argc, sqlite3_value **argv){$/;"	f	file:
uptr	sqlite3.c	/^  typedef u32 uptr;$/;"	t	file:
uptr	sqlite3.c	/^  typedef u64 uptr;$/;"	t	file:
uptr	sqlite3.c	/^  typedef uintptr_t uptr;$/;"	t	file:
uptr	src/sqliteInt.h	/^  typedef u32 uptr;$/;"	t
uptr	src/sqliteInt.h	/^  typedef u64 uptr;$/;"	t
uptr	src/sqliteInt.h	/^  typedef uintptr_t uptr;$/;"	t
uptr	tsrc/sqliteInt.h	/^  typedef u32 uptr;$/;"	t
uptr	tsrc/sqliteInt.h	/^  typedef u64 uptr;$/;"	t
uptr	tsrc/sqliteInt.h	/^  typedef uintptr_t uptr;$/;"	t
uri_boolean	sqlite3.c	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines	file:
uri_boolean	sqlite3ext.h	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
uri_boolean	src/sqlite3ext.h	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
uri_boolean	tsrc/sqlite3ext.h	/^  int (*uri_boolean)(const char*,const char*,int);$/;"	m	struct:sqlite3_api_routines
uri_int64	sqlite3.c	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines	file:
uri_int64	sqlite3ext.h	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
uri_int64	src/sqlite3ext.h	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
uri_int64	tsrc/sqlite3ext.h	/^  sqlite3_int64 (*uri_int64)(const char*,const char*,sqlite3_int64);$/;"	m	struct:sqlite3_api_routines
uri_parameter	sqlite3.c	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
uri_parameter	sqlite3ext.h	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
uri_parameter	src/sqlite3ext.h	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
uri_parameter	tsrc/sqlite3ext.h	/^  const char *(*uri_parameter)(const char*,const char*);$/;"	m	struct:sqlite3_api_routines
usable	sqlite3.c	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint	file:
usable	sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usable	tsrc/sqlite3.h	/^     unsigned char usable;     \/* True if this constraint is usable *\/$/;"	m	struct:sqlite3_index_info::sqlite3_index_constraint
usableSize	sqlite3.c	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared	file:
usableSize	src/btreeInt.h	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared
usableSize	tsrc/btreeInt.h	/^  u32 usableSize;       \/* Number of usable bytes on each page *\/$/;"	m	struct:BtShared
usage	ext/fts3/fts3speed.tcl	/^proc usage {} {$/;"	p
usage	ext/fts3/tool/fts3view.c	/^static void usage(const char *argv0){$/;"	f	file:
usage	ext/fts3/unicode/mkunicode.tcl	/^proc usage {} {$/;"	p
usage	ext/fts5/tool/fts5speed.tcl	/^proc usage {} {$/;"	p
usage	ext/fts5/tool/loadfts5.tcl	/^proc usage {} {$/;"	p
usage	ext/fts5/tool/showfts5.tcl	/^proc usage {} {$/;"	p
usage	ext/rbu/rbu.c	/^void usage(const char *zArgv0){$/;"	f
usage	ext/session/changeset.c	/^static void usage(const char *argv0){$/;"	f	file:
usage	mptest/mptest.c	/^static void usage(const char *argv0){$/;"	f	file:
usage	shell.c	/^static void usage(int showDetail){$/;"	f	file:
usage	src/shell.c	/^static void usage(int showDetail){$/;"	f	file:
usage	tool/GetTclKit.bat	/^:usage$/;"	l
usage	tool/build-all-msvc.bat	/^:usage$/;"	l
usage	tool/getlock.c	/^static void usage(const char *argv0){$/;"	f	file:
usage	tool/rollback-test.c	/^static void usage(char *argv0){$/;"	f	file:
usage	tool/showdb.c	/^static void usage(const char *argv0){$/;"	f	file:
usage	tool/spaceanal.tcl	/^proc usage {} {$/;"	p
usage	tsrc/shell.c	/^static void usage(int showDetail){$/;"	f	file:
useCnt	tool/lemon.c	/^  int useCnt;              \/* Number of times used *\/$/;"	m	struct:symbol	file:
useEvalObjv	src/tclsqlite.c	/^  int useEvalObjv;      \/* True if it is safe to use Tcl_EvalObjv *\/$/;"	m	struct:SqlFunc	file:
useEvalObjv	tsrc/tclsqlite.c	/^  int useEvalObjv;      \/* True if it is safe to use Tcl_EvalObjv *\/$/;"	m	struct:SqlFunc	file:
useJournal	sqlite3.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useJournal	src/pager.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useJournal	tsrc/pager.c	/^  u8 useJournal;              \/* Use a rollback journal on this file *\/$/;"	m	struct:Pager	file:
useRandomRowid	sqlite3.c	/^  Bool useRandomRowid:1;\/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor	file:
useRandomRowid	src/vdbeInt.h	/^  Bool useRandomRowid:1;\/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor
useRandomRowid	tsrc/vdbeInt.h	/^  Bool useRandomRowid:1;\/* Generate new record numbers semi-randomly *\/$/;"	m	struct:VdbeCursor
useSortingIdx	sqlite3.c	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo	file:
useSortingIdx	src/sqliteInt.h	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo
useSortingIdx	tsrc/sqliteInt.h	/^  u8 useSortingIdx;       \/* In direct mode, reference the sorting index rather$/;"	m	struct:AggInfo
usedAsColumnCache	sqlite3.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
usedAsColumnCache	src/expr.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
usedAsColumnCache	tsrc/expr.c	/^static int usedAsColumnCache(Parse *pParse, int iFrom, int iTo){$/;"	f	file:
userAuthCheckLogin	ext/userauth/userauth.c	/^static int userAuthCheckLogin($/;"	f	file:
userTableExists	ext/userauth/userauth.c	/^static int userTableExists(sqlite3 *db, const char *zDb){$/;"	f	file:
user_data	sqlite3.c	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines	file:
user_data	sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_data	src/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_data	tsrc/sqlite3ext.h	/^  void * (*user_data)(sqlite3_context*);$/;"	m	struct:sqlite3_api_routines
user_templatename	tool/lemon.c	/^static char *user_templatename = NULL;$/;"	v	file:
usesStmtJournal	sqlite3.c	/^  bft usesStmtJournal:1;  \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe	file:
usesStmtJournal	src/vdbeInt.h	/^  bft usesStmtJournal:1;  \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe
usesStmtJournal	tsrc/vdbeInt.h	/^  bft usesStmtJournal:1;  \/* True if uses a statement journal *\/$/;"	m	struct:Vdbe
uses_stmt_journal	src/test1.c	/^static int SQLITE_TCLAPI uses_stmt_journal($/;"	f	file:
utf8Charlen	ext/misc/spellfix.c	/^static int utf8Charlen(const char *zIn, int nIn){$/;"	f	file:
utf8Len	ext/misc/spellfix.c	/^static int utf8Len(unsigned char c, int N){$/;"	f	file:
utf8Read	ext/misc/spellfix.c	/^static int utf8Read(const unsigned char *z, int n, int *pSize){$/;"	f	file:
utf8_printf	shell.c	/^void utf8_printf(FILE *out, const char *zFormat, ...){$/;"	f
utf8_printf	shell.c	392;"	d	file:
utf8_printf	src/shell.c	/^void utf8_printf(FILE *out, const char *zFormat, ...){$/;"	f
utf8_printf	src/shell.c	392;"	d	file:
utf8_printf	tsrc/shell.c	/^void utf8_printf(FILE *out, const char *zFormat, ...){$/;"	f
utf8_printf	tsrc/shell.c	392;"	d	file:
utf8_to_utf8	src/test_hexio.c	/^static int SQLITE_TCLAPI utf8_to_utf8($/;"	f	file:
v	sqlite3.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	sqlite3.c	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame	file:
v	sqlite3.c	/^  Vdbe *v;$/;"	m	struct:PreUpdate	file:
v	sqlite3.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v	src/rowset.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v	src/vdbeInt.h	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame
v	src/vdbeInt.h	/^  Vdbe *v;$/;"	m	struct:PreUpdate
v	src/vdbeaux.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v	tsrc/rowset.c	/^  i64 v;                        \/* ROWID value for this entry *\/$/;"	m	struct:RowSetEntry	file:
v	tsrc/vdbeInt.h	/^  Vdbe *v;                \/* VM this frame belongs to *\/$/;"	m	struct:VdbeFrame
v	tsrc/vdbeInt.h	/^  Vdbe *v;$/;"	m	struct:PreUpdate
v	tsrc/vdbeaux.c	/^  Vdbe *v;                   \/* Vdbe to iterate through the opcodes of *\/$/;"	m	struct:VdbeOpIter	file:
v1	sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
v1	src/btreeInt.h	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk
v1	tsrc/btreeInt.h	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk
v2	sqlite3.c	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk	file:
v2	src/btreeInt.h	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk
v2	tsrc/btreeInt.h	/^  int v1, v2;       \/* Values for up to two %d fields in zPfx *\/$/;"	m	struct:IntegrityCk
vacuum1	test/tt3_vacuum.c	/^static void vacuum1(int nMs){$/;"	f	file:
vacuum1_thread_vacuumer	test/tt3_vacuum.c	/^static char *vacuum1_thread_vacuumer(int iTid, void *pArg){$/;"	f	file:
vacuum1_thread_writer	test/tt3_vacuum.c	/^static char *vacuum1_thread_writer(int iTid, void *pArg){$/;"	f	file:
vacuumFinalize	sqlite3.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
vacuumFinalize	src/vacuum.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
vacuumFinalize	tool/fast_vacuum.c	/^static void vacuumFinalize(sqlite3_stmt *pStmt){$/;"	f	file:
vacuumFinalize	tsrc/vacuum.c	/^static int vacuumFinalize(sqlite3 *db, sqlite3_stmt *pStmt, char **pzErrMsg){$/;"	f	file:
valid	shell.c	/^  int valid;          \/* Is there legit data in here? *\/$/;"	m	struct:SavedModeInfo	file:
valid	src/shell.c	/^  int valid;          \/* Is there legit data in here? *\/$/;"	m	struct:SavedModeInfo	file:
valid	tsrc/shell.c	/^  int valid;          \/* Is there legit data in here? *\/$/;"	m	struct:SavedModeInfo	file:
validHMS	sqlite3.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validHMS	src/date.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validHMS	tsrc/date.c	/^  char validHMS;     \/* True (1) if h,m,s are valid *\/$/;"	m	struct:DateTime	file:
validJD	sqlite3.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validJD	src/date.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validJD	tsrc/date.c	/^  char validJD;      \/* True (1) if iJD is valid *\/$/;"	m	struct:DateTime	file:
validTZ	sqlite3.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validTZ	src/date.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validTZ	tsrc/date.c	/^  char validTZ;      \/* True (1) if tz is valid *\/$/;"	m	struct:DateTime	file:
validYMD	sqlite3.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
validYMD	src/date.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
validYMD	tsrc/date.c	/^  char validYMD;     \/* True (1) if Y,M,D are valid *\/$/;"	m	struct:DateTime	file:
value	autoconf/tea/win/nmakehlp.c	/^    char * value;$/;"	m	struct:list_item_t	file:
value	parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon40::__anon41	file:
value	sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon102::__anon103	file:
value	tsrc/parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	struct:__anon17::__anon18	file:
valueBytes	sqlite3.c	/^static SQLITE_NOINLINE int valueBytes(sqlite3_value *pVal, u8 enc){$/;"	f	file:
valueBytes	src/vdbemem.c	/^static SQLITE_NOINLINE int valueBytes(sqlite3_value *pVal, u8 enc){$/;"	f	file:
valueBytes	tsrc/vdbemem.c	/^static SQLITE_NOINLINE int valueBytes(sqlite3_value *pVal, u8 enc){$/;"	f	file:
valueFromExpr	sqlite3.c	/^static int valueFromExpr($/;"	f	file:
valueFromExpr	src/vdbemem.c	/^static int valueFromExpr($/;"	f	file:
valueFromExpr	tsrc/vdbemem.c	/^static int valueFromExpr($/;"	f	file:
valueFromFunction	sqlite3.c	/^static int valueFromFunction($/;"	f	file:
valueFromFunction	sqlite3.c	69899;"	d	file:
valueFromFunction	src/vdbemem.c	/^static int valueFromFunction($/;"	f	file:
valueFromFunction	src/vdbemem.c	1248;"	d	file:
valueFromFunction	tsrc/vdbemem.c	/^static int valueFromFunction($/;"	f	file:
valueFromFunction	tsrc/vdbemem.c	1248;"	d	file:
valueNew	sqlite3.c	/^static sqlite3_value *valueNew(sqlite3 *db, struct ValueNewStat4Ctx *p){$/;"	f	file:
valueNew	src/vdbemem.c	/^static sqlite3_value *valueNew(sqlite3 *db, struct ValueNewStat4Ctx *p){$/;"	f	file:
valueNew	tsrc/vdbemem.c	/^static sqlite3_value *valueNew(sqlite3 *db, struct ValueNewStat4Ctx *p){$/;"	f	file:
valueToText	sqlite3.c	/^static SQLITE_NOINLINE const void *valueToText(sqlite3_value* pVal, u8 enc){$/;"	f	file:
valueToText	src/vdbemem.c	/^static SQLITE_NOINLINE const void *valueToText(sqlite3_value* pVal, u8 enc){$/;"	f	file:
valueToText	tsrc/vdbemem.c	/^static SQLITE_NOINLINE const void *valueToText(sqlite3_value* pVal, u8 enc){$/;"	f	file:
value_blob	sqlite3.c	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_blob	sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_blob	src/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_blob	tsrc/sqlite3ext.h	/^  const void * (*value_blob)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	sqlite3.c	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes	sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	src/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes	tsrc/sqlite3ext.h	/^  int  (*value_bytes)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	sqlite3.c	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_bytes16	sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	src/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_bytes16	tsrc/sqlite3ext.h	/^  int  (*value_bytes16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	sqlite3.c	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_double	sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	src/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_double	tsrc/sqlite3ext.h	/^  double  (*value_double)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_dup	sqlite3.c	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_dup	sqlite3ext.h	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_dup	src/sqlite3ext.h	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_dup	tsrc/sqlite3ext.h	/^  sqlite3_value *(*value_dup)(const sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_free	sqlite3.c	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_free	sqlite3ext.h	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_free	src/sqlite3ext.h	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_free	tsrc/sqlite3ext.h	/^  void (*value_free)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	sqlite3.c	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int	sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	src/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int	tsrc/sqlite3ext.h	/^  int  (*value_int)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	sqlite3.c	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_int64	sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	src/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_int64	tsrc/sqlite3ext.h	/^  sqlite_int64  (*value_int64)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	sqlite3.c	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_numeric_type	sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	src/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_numeric_type	tsrc/sqlite3ext.h	/^  int  (*value_numeric_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_subtype	sqlite3.c	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_subtype	sqlite3ext.h	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_subtype	src/sqlite3ext.h	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_subtype	tsrc/sqlite3ext.h	/^  unsigned int (*value_subtype)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text	sqlite3.c	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text	sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text	src/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text	tsrc/sqlite3ext.h	/^  const unsigned char * (*value_text)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	sqlite3.c	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16	sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	src/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16	tsrc/sqlite3ext.h	/^  const void * (*value_text16)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	sqlite3.c	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16be	sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	src/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16be	tsrc/sqlite3ext.h	/^  const void * (*value_text16be)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	sqlite3.c	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_text16le	sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	src/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_text16le	tsrc/sqlite3ext.h	/^  const void * (*value_text16le)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	sqlite3.c	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines	file:
value_type	sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	src/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
value_type	tsrc/sqlite3ext.h	/^  int  (*value_type)(sqlite3_value*);$/;"	m	struct:sqlite3_api_routines
vardest	tool/lemon.c	/^  char *vardest;           \/* Code for the default non-terminal destructor *\/$/;"	m	struct:lemon	file:
vartype	tool/lemon.c	/^  char *vartype;           \/* The default type of non-terminal symbols *\/$/;"	m	struct:lemon	file:
vdbeAssertFieldCountWithinLimits	sqlite3.c	/^static void vdbeAssertFieldCountWithinLimits($/;"	f	file:
vdbeAssertFieldCountWithinLimits	sqlite3.c	74027;"	d	file:
vdbeAssertFieldCountWithinLimits	src/vdbeaux.c	/^static void vdbeAssertFieldCountWithinLimits($/;"	f	file:
vdbeAssertFieldCountWithinLimits	src/vdbeaux.c	3669;"	d	file:
vdbeAssertFieldCountWithinLimits	tsrc/vdbeaux.c	/^static void vdbeAssertFieldCountWithinLimits($/;"	f	file:
vdbeAssertFieldCountWithinLimits	tsrc/vdbeaux.c	3669;"	d	file:
vdbeChangeP4Full	sqlite3.c	/^static void SQLITE_NOINLINE vdbeChangeP4Full($/;"	f	file:
vdbeChangeP4Full	src/vdbeaux.c	/^static void SQLITE_NOINLINE vdbeChangeP4Full($/;"	f	file:
vdbeChangeP4Full	tsrc/vdbeaux.c	/^static void SQLITE_NOINLINE vdbeChangeP4Full($/;"	f	file:
vdbeClrCopy	sqlite3.c	/^static SQLITE_NOINLINE void vdbeClrCopy(Mem *pTo, const Mem *pFrom, int eType){$/;"	f	file:
vdbeClrCopy	src/vdbemem.c	/^static SQLITE_NOINLINE void vdbeClrCopy(Mem *pTo, const Mem *pFrom, int eType){$/;"	f	file:
vdbeClrCopy	tsrc/vdbemem.c	/^static SQLITE_NOINLINE void vdbeClrCopy(Mem *pTo, const Mem *pFrom, int eType){$/;"	f	file:
vdbeCommit	sqlite3.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeCommit	src/vdbeaux.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeCommit	tsrc/vdbeaux.c	/^static int vdbeCommit(sqlite3 *db, Vdbe *p){$/;"	f	file:
vdbeCompareMemString	sqlite3.c	/^static int vdbeCompareMemString($/;"	f	file:
vdbeCompareMemString	src/vdbeaux.c	/^static int vdbeCompareMemString($/;"	f	file:
vdbeCompareMemString	tsrc/vdbeaux.c	/^static int vdbeCompareMemString($/;"	f	file:
vdbeFreeOpArray	sqlite3.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeFreeOpArray	src/vdbeaux.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeFreeOpArray	tsrc/vdbeaux.c	/^static void vdbeFreeOpArray(sqlite3 *db, Op *aOp, int nOp){$/;"	f	file:
vdbeFreeUnpacked	sqlite3.c	/^static void vdbeFreeUnpacked(sqlite3 *db, UnpackedRecord *p){$/;"	f	file:
vdbeFreeUnpacked	src/vdbeaux.c	/^static void vdbeFreeUnpacked(sqlite3 *db, UnpackedRecord *p){$/;"	f	file:
vdbeFreeUnpacked	tsrc/vdbeaux.c	/^static void vdbeFreeUnpacked(sqlite3 *db, UnpackedRecord *p){$/;"	f	file:
vdbeIncrBgPopulate	sqlite3.c	/^static int vdbeIncrBgPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrBgPopulate	src/vdbesort.c	/^static int vdbeIncrBgPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrBgPopulate	tsrc/vdbesort.c	/^static int vdbeIncrBgPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrFree	sqlite3.c	/^static void vdbeIncrFree(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrFree	src/vdbesort.c	/^static void vdbeIncrFree(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrFree	tsrc/vdbesort.c	/^static void vdbeIncrFree(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrMergerNew	sqlite3.c	/^static int vdbeIncrMergerNew($/;"	f	file:
vdbeIncrMergerNew	src/vdbesort.c	/^static int vdbeIncrMergerNew($/;"	f	file:
vdbeIncrMergerNew	tsrc/vdbesort.c	/^static int vdbeIncrMergerNew($/;"	f	file:
vdbeIncrMergerSetThreads	sqlite3.c	/^static void vdbeIncrMergerSetThreads(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrMergerSetThreads	src/vdbesort.c	/^static void vdbeIncrMergerSetThreads(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrMergerSetThreads	tsrc/vdbesort.c	/^static void vdbeIncrMergerSetThreads(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulate	sqlite3.c	/^static int vdbeIncrPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulate	src/vdbesort.c	/^static int vdbeIncrPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulate	tsrc/vdbesort.c	/^static int vdbeIncrPopulate(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrPopulateThread	sqlite3.c	/^static void *vdbeIncrPopulateThread(void *pCtx){$/;"	f	file:
vdbeIncrPopulateThread	src/vdbesort.c	/^static void *vdbeIncrPopulateThread(void *pCtx){$/;"	f	file:
vdbeIncrPopulateThread	tsrc/vdbesort.c	/^static void *vdbeIncrPopulateThread(void *pCtx){$/;"	f	file:
vdbeIncrSwap	sqlite3.c	/^static int vdbeIncrSwap(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrSwap	src/vdbesort.c	/^static int vdbeIncrSwap(IncrMerger *pIncr){$/;"	f	file:
vdbeIncrSwap	tsrc/vdbesort.c	/^static int vdbeIncrSwap(IncrMerger *pIncr){$/;"	f	file:
vdbeInvokeSqllog	sqlite3.c	/^static void vdbeInvokeSqllog(Vdbe *v){$/;"	f	file:
vdbeInvokeSqllog	sqlite3.c	73150;"	d	file:
vdbeInvokeSqllog	src/vdbeaux.c	/^static void vdbeInvokeSqllog(Vdbe *v){$/;"	f	file:
vdbeInvokeSqllog	src/vdbeaux.c	2792;"	d	file:
vdbeInvokeSqllog	tsrc/vdbeaux.c	/^static void vdbeInvokeSqllog(Vdbe *v){$/;"	f	file:
vdbeInvokeSqllog	tsrc/vdbeaux.c	2792;"	d	file:
vdbeLeave	sqlite3.c	/^static SQLITE_NOINLINE void vdbeLeave(Vdbe *p){$/;"	f	file:
vdbeLeave	src/vdbeaux.c	/^static SQLITE_NOINLINE void vdbeLeave(Vdbe *p){$/;"	f	file:
vdbeLeave	tsrc/vdbeaux.c	/^static SQLITE_NOINLINE void vdbeLeave(Vdbe *p){$/;"	f	file:
vdbeMemAddTerminator	sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){$/;"	f	file:
vdbeMemAddTerminator	src/vdbemem.c	/^static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){$/;"	f	file:
vdbeMemAddTerminator	tsrc/vdbemem.c	/^static SQLITE_NOINLINE int vdbeMemAddTerminator(Mem *pMem){$/;"	f	file:
vdbeMemClear	sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClear(Mem *p){$/;"	f	file:
vdbeMemClear	src/vdbemem.c	/^static SQLITE_NOINLINE void vdbeMemClear(Mem *p){$/;"	f	file:
vdbeMemClear	tsrc/vdbemem.c	/^static SQLITE_NOINLINE void vdbeMemClear(Mem *p){$/;"	f	file:
vdbeMemClearExternAndSetNull	sqlite3.c	/^static SQLITE_NOINLINE void vdbeMemClearExternAndSetNull(Mem *p){$/;"	f	file:
vdbeMemClearExternAndSetNull	src/vdbemem.c	/^static SQLITE_NOINLINE void vdbeMemClearExternAndSetNull(Mem *p){$/;"	f	file:
vdbeMemClearExternAndSetNull	tsrc/vdbemem.c	/^static SQLITE_NOINLINE void vdbeMemClearExternAndSetNull(Mem *p){$/;"	f	file:
vdbeMemFromBtreeResize	sqlite3.c	/^static SQLITE_NOINLINE int vdbeMemFromBtreeResize($/;"	f	file:
vdbeMemFromBtreeResize	src/vdbemem.c	/^static SQLITE_NOINLINE int vdbeMemFromBtreeResize($/;"	f	file:
vdbeMemFromBtreeResize	tsrc/vdbemem.c	/^static SQLITE_NOINLINE int vdbeMemFromBtreeResize($/;"	f	file:
vdbeMergeEngineCompare	sqlite3.c	/^static void vdbeMergeEngineCompare($/;"	f	file:
vdbeMergeEngineCompare	src/vdbesort.c	/^static void vdbeMergeEngineCompare($/;"	f	file:
vdbeMergeEngineCompare	tsrc/vdbesort.c	/^static void vdbeMergeEngineCompare($/;"	f	file:
vdbeMergeEngineFree	sqlite3.c	/^static void vdbeMergeEngineFree(MergeEngine *pMerger){$/;"	f	file:
vdbeMergeEngineFree	src/vdbesort.c	/^static void vdbeMergeEngineFree(MergeEngine *pMerger){$/;"	f	file:
vdbeMergeEngineFree	tsrc/vdbesort.c	/^static void vdbeMergeEngineFree(MergeEngine *pMerger){$/;"	f	file:
vdbeMergeEngineInit	sqlite3.c	/^static int vdbeMergeEngineInit($/;"	f	file:
vdbeMergeEngineInit	src/vdbesort.c	/^static int vdbeMergeEngineInit($/;"	f	file:
vdbeMergeEngineInit	tsrc/vdbesort.c	/^static int vdbeMergeEngineInit($/;"	f	file:
vdbeMergeEngineLevel0	sqlite3.c	/^static int vdbeMergeEngineLevel0($/;"	f	file:
vdbeMergeEngineLevel0	src/vdbesort.c	/^static int vdbeMergeEngineLevel0($/;"	f	file:
vdbeMergeEngineLevel0	tsrc/vdbesort.c	/^static int vdbeMergeEngineLevel0($/;"	f	file:
vdbeMergeEngineNew	sqlite3.c	/^static MergeEngine *vdbeMergeEngineNew(int nReader){$/;"	f	file:
vdbeMergeEngineNew	src/vdbesort.c	/^static MergeEngine *vdbeMergeEngineNew(int nReader){$/;"	f	file:
vdbeMergeEngineNew	tsrc/vdbesort.c	/^static MergeEngine *vdbeMergeEngineNew(int nReader){$/;"	f	file:
vdbeMergeEngineStep	sqlite3.c	/^static int vdbeMergeEngineStep($/;"	f	file:
vdbeMergeEngineStep	src/vdbesort.c	/^static int vdbeMergeEngineStep($/;"	f	file:
vdbeMergeEngineStep	tsrc/vdbesort.c	/^static int vdbeMergeEngineStep($/;"	f	file:
vdbePmaReadBlob	sqlite3.c	/^static int vdbePmaReadBlob($/;"	f	file:
vdbePmaReadBlob	src/vdbesort.c	/^static int vdbePmaReadBlob($/;"	f	file:
vdbePmaReadBlob	tsrc/vdbesort.c	/^static int vdbePmaReadBlob($/;"	f	file:
vdbePmaReadVarint	sqlite3.c	/^static int vdbePmaReadVarint(PmaReader *p, u64 *pnOut){$/;"	f	file:
vdbePmaReadVarint	src/vdbesort.c	/^static int vdbePmaReadVarint(PmaReader *p, u64 *pnOut){$/;"	f	file:
vdbePmaReadVarint	tsrc/vdbesort.c	/^static int vdbePmaReadVarint(PmaReader *p, u64 *pnOut){$/;"	f	file:
vdbePmaReaderBgIncrInit	sqlite3.c	/^static void *vdbePmaReaderBgIncrInit(void *pCtx){$/;"	f	file:
vdbePmaReaderBgIncrInit	src/vdbesort.c	/^static void *vdbePmaReaderBgIncrInit(void *pCtx){$/;"	f	file:
vdbePmaReaderBgIncrInit	tsrc/vdbesort.c	/^static void *vdbePmaReaderBgIncrInit(void *pCtx){$/;"	f	file:
vdbePmaReaderClear	sqlite3.c	/^static void vdbePmaReaderClear(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderClear	src/vdbesort.c	/^static void vdbePmaReaderClear(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderClear	tsrc/vdbesort.c	/^static void vdbePmaReaderClear(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderIncrInit	sqlite3.c	/^static int vdbePmaReaderIncrInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrInit	src/vdbesort.c	/^static int vdbePmaReaderIncrInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrInit	tsrc/vdbesort.c	/^static int vdbePmaReaderIncrInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrMergeInit	sqlite3.c	/^static int vdbePmaReaderIncrMergeInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrMergeInit	src/vdbesort.c	/^static int vdbePmaReaderIncrMergeInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderIncrMergeInit	tsrc/vdbesort.c	/^static int vdbePmaReaderIncrMergeInit(PmaReader *pReadr, int eMode){$/;"	f	file:
vdbePmaReaderInit	sqlite3.c	/^static int vdbePmaReaderInit($/;"	f	file:
vdbePmaReaderInit	src/vdbesort.c	/^static int vdbePmaReaderInit($/;"	f	file:
vdbePmaReaderInit	tsrc/vdbesort.c	/^static int vdbePmaReaderInit($/;"	f	file:
vdbePmaReaderNext	sqlite3.c	/^static int vdbePmaReaderNext(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderNext	src/vdbesort.c	/^static int vdbePmaReaderNext(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderNext	tsrc/vdbesort.c	/^static int vdbePmaReaderNext(PmaReader *pReadr){$/;"	f	file:
vdbePmaReaderSeek	sqlite3.c	/^static int vdbePmaReaderSeek($/;"	f	file:
vdbePmaReaderSeek	src/vdbesort.c	/^static int vdbePmaReaderSeek($/;"	f	file:
vdbePmaReaderSeek	tsrc/vdbesort.c	/^static int vdbePmaReaderSeek($/;"	f	file:
vdbePmaWriteBlob	sqlite3.c	/^static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){$/;"	f	file:
vdbePmaWriteBlob	src/vdbesort.c	/^static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){$/;"	f	file:
vdbePmaWriteBlob	tsrc/vdbesort.c	/^static void vdbePmaWriteBlob(PmaWriter *p, u8 *pData, int nData){$/;"	f	file:
vdbePmaWriteVarint	sqlite3.c	/^static void vdbePmaWriteVarint(PmaWriter *p, u64 iVal){$/;"	f	file:
vdbePmaWriteVarint	src/vdbesort.c	/^static void vdbePmaWriteVarint(PmaWriter *p, u64 iVal){$/;"	f	file:
vdbePmaWriteVarint	tsrc/vdbesort.c	/^static void vdbePmaWriteVarint(PmaWriter *p, u64 iVal){$/;"	f	file:
vdbePmaWriterFinish	sqlite3.c	/^static int vdbePmaWriterFinish(PmaWriter *p, i64 *piEof){$/;"	f	file:
vdbePmaWriterFinish	src/vdbesort.c	/^static int vdbePmaWriterFinish(PmaWriter *p, i64 *piEof){$/;"	f	file:
vdbePmaWriterFinish	tsrc/vdbesort.c	/^static int vdbePmaWriterFinish(PmaWriter *p, i64 *piEof){$/;"	f	file:
vdbePmaWriterInit	sqlite3.c	/^static void vdbePmaWriterInit($/;"	f	file:
vdbePmaWriterInit	src/vdbesort.c	/^static void vdbePmaWriterInit($/;"	f	file:
vdbePmaWriterInit	tsrc/vdbesort.c	/^static void vdbePmaWriterInit($/;"	f	file:
vdbeRecordCompareDebug	sqlite3.c	/^static int vdbeRecordCompareDebug($/;"	f	file:
vdbeRecordCompareDebug	src/vdbeaux.c	/^static int vdbeRecordCompareDebug($/;"	f	file:
vdbeRecordCompareDebug	tsrc/vdbeaux.c	/^static int vdbeRecordCompareDebug($/;"	f	file:
vdbeRecordCompareInt	sqlite3.c	/^static int vdbeRecordCompareInt($/;"	f	file:
vdbeRecordCompareInt	src/vdbeaux.c	/^static int vdbeRecordCompareInt($/;"	f	file:
vdbeRecordCompareInt	tsrc/vdbeaux.c	/^static int vdbeRecordCompareInt($/;"	f	file:
vdbeRecordCompareString	sqlite3.c	/^static int vdbeRecordCompareString($/;"	f	file:
vdbeRecordCompareString	src/vdbeaux.c	/^static int vdbeRecordCompareString($/;"	f	file:
vdbeRecordCompareString	tsrc/vdbeaux.c	/^static int vdbeRecordCompareString($/;"	f	file:
vdbeRecordDecodeInt	sqlite3.c	/^static i64 vdbeRecordDecodeInt(u32 serial_type, const u8 *aKey){$/;"	f	file:
vdbeRecordDecodeInt	src/vdbeaux.c	/^static i64 vdbeRecordDecodeInt(u32 serial_type, const u8 *aKey){$/;"	f	file:
vdbeRecordDecodeInt	tsrc/vdbeaux.c	/^static i64 vdbeRecordDecodeInt(u32 serial_type, const u8 *aKey){$/;"	f	file:
vdbeReleaseAndSetInt64	sqlite3.c	/^static SQLITE_NOINLINE void vdbeReleaseAndSetInt64(Mem *pMem, i64 val){$/;"	f	file:
vdbeReleaseAndSetInt64	src/vdbemem.c	/^static SQLITE_NOINLINE void vdbeReleaseAndSetInt64(Mem *pMem, i64 val){$/;"	f	file:
vdbeReleaseAndSetInt64	tsrc/vdbemem.c	/^static SQLITE_NOINLINE void vdbeReleaseAndSetInt64(Mem *pMem, i64 val){$/;"	f	file:
vdbeSafety	sqlite3.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafety	src/vdbeapi.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafety	tsrc/vdbeapi.c	/^static int vdbeSafety(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	sqlite3.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	src/vdbeapi.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSafetyNotNull	tsrc/vdbeapi.c	/^static int vdbeSafetyNotNull(Vdbe *p){$/;"	f	file:
vdbeSortAllocUnpacked	sqlite3.c	/^static int vdbeSortAllocUnpacked(SortSubtask *pTask){$/;"	f	file:
vdbeSortAllocUnpacked	src/vdbesort.c	/^static int vdbeSortAllocUnpacked(SortSubtask *pTask){$/;"	f	file:
vdbeSortAllocUnpacked	tsrc/vdbesort.c	/^static int vdbeSortAllocUnpacked(SortSubtask *pTask){$/;"	f	file:
vdbeSortSubtaskCleanup	sqlite3.c	/^static void vdbeSortSubtaskCleanup(sqlite3 *db, SortSubtask *pTask){$/;"	f	file:
vdbeSortSubtaskCleanup	src/vdbesort.c	/^static void vdbeSortSubtaskCleanup(sqlite3 *db, SortSubtask *pTask){$/;"	f	file:
vdbeSortSubtaskCleanup	tsrc/vdbesort.c	/^static void vdbeSortSubtaskCleanup(sqlite3 *db, SortSubtask *pTask){$/;"	f	file:
vdbeSorterAddToTree	sqlite3.c	/^static int vdbeSorterAddToTree($/;"	f	file:
vdbeSorterAddToTree	src/vdbesort.c	/^static int vdbeSorterAddToTree($/;"	f	file:
vdbeSorterAddToTree	tsrc/vdbesort.c	/^static int vdbeSorterAddToTree($/;"	f	file:
vdbeSorterBlockDebug	sqlite3.c	/^static void vdbeSorterBlockDebug($/;"	f	file:
vdbeSorterBlockDebug	sqlite3.c	85715;"	d	file:
vdbeSorterBlockDebug	src/vdbesort.c	/^static void vdbeSorterBlockDebug($/;"	f	file:
vdbeSorterBlockDebug	src/vdbesort.c	1102;"	d	file:
vdbeSorterBlockDebug	tsrc/vdbesort.c	/^static void vdbeSorterBlockDebug($/;"	f	file:
vdbeSorterBlockDebug	tsrc/vdbesort.c	1102;"	d	file:
vdbeSorterCompare	sqlite3.c	/^static int vdbeSorterCompare($/;"	f	file:
vdbeSorterCompare	src/vdbesort.c	/^static int vdbeSorterCompare($/;"	f	file:
vdbeSorterCompare	tsrc/vdbesort.c	/^static int vdbeSorterCompare($/;"	f	file:
vdbeSorterCompareInt	sqlite3.c	/^static int vdbeSorterCompareInt($/;"	f	file:
vdbeSorterCompareInt	src/vdbesort.c	/^static int vdbeSorterCompareInt($/;"	f	file:
vdbeSorterCompareInt	tsrc/vdbesort.c	/^static int vdbeSorterCompareInt($/;"	f	file:
vdbeSorterCompareTail	sqlite3.c	/^static int vdbeSorterCompareTail($/;"	f	file:
vdbeSorterCompareTail	src/vdbesort.c	/^static int vdbeSorterCompareTail($/;"	f	file:
vdbeSorterCompareTail	tsrc/vdbesort.c	/^static int vdbeSorterCompareTail($/;"	f	file:
vdbeSorterCompareText	sqlite3.c	/^static int vdbeSorterCompareText($/;"	f	file:
vdbeSorterCompareText	src/vdbesort.c	/^static int vdbeSorterCompareText($/;"	f	file:
vdbeSorterCompareText	tsrc/vdbesort.c	/^static int vdbeSorterCompareText($/;"	f	file:
vdbeSorterCreateThread	sqlite3.c	/^static int vdbeSorterCreateThread($/;"	f	file:
vdbeSorterCreateThread	src/vdbesort.c	/^static int vdbeSorterCreateThread($/;"	f	file:
vdbeSorterCreateThread	tsrc/vdbesort.c	/^static int vdbeSorterCreateThread($/;"	f	file:
vdbeSorterExtendFile	sqlite3.c	/^static void vdbeSorterExtendFile(sqlite3 *db, sqlite3_file *pFd, i64 nByte){$/;"	f	file:
vdbeSorterExtendFile	sqlite3.c	85906;"	d	file:
vdbeSorterExtendFile	src/vdbesort.c	/^static void vdbeSorterExtendFile(sqlite3 *db, sqlite3_file *pFd, i64 nByte){$/;"	f	file:
vdbeSorterExtendFile	src/vdbesort.c	1293;"	d	file:
vdbeSorterExtendFile	tsrc/vdbesort.c	/^static void vdbeSorterExtendFile(sqlite3 *db, sqlite3_file *pFd, i64 nByte){$/;"	f	file:
vdbeSorterExtendFile	tsrc/vdbesort.c	1293;"	d	file:
vdbeSorterFlushPMA	sqlite3.c	/^static int vdbeSorterFlushPMA(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterFlushPMA	src/vdbesort.c	/^static int vdbeSorterFlushPMA(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterFlushPMA	tsrc/vdbesort.c	/^static int vdbeSorterFlushPMA(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterFlushThread	sqlite3.c	/^static void *vdbeSorterFlushThread(void *pCtx){$/;"	f	file:
vdbeSorterFlushThread	src/vdbesort.c	/^static void *vdbeSorterFlushThread(void *pCtx){$/;"	f	file:
vdbeSorterFlushThread	tsrc/vdbesort.c	/^static void *vdbeSorterFlushThread(void *pCtx){$/;"	f	file:
vdbeSorterGetCompare	sqlite3.c	/^static SorterCompare vdbeSorterGetCompare(VdbeSorter *p){$/;"	f	file:
vdbeSorterGetCompare	src/vdbesort.c	/^static SorterCompare vdbeSorterGetCompare(VdbeSorter *p){$/;"	f	file:
vdbeSorterGetCompare	tsrc/vdbesort.c	/^static SorterCompare vdbeSorterGetCompare(VdbeSorter *p){$/;"	f	file:
vdbeSorterJoinAll	sqlite3.c	/^static int vdbeSorterJoinAll(VdbeSorter *pSorter, int rcin){$/;"	f	file:
vdbeSorterJoinAll	sqlite3.c	85775;"	d	file:
vdbeSorterJoinAll	src/vdbesort.c	/^static int vdbeSorterJoinAll(VdbeSorter *pSorter, int rcin){$/;"	f	file:
vdbeSorterJoinAll	src/vdbesort.c	1162;"	d	file:
vdbeSorterJoinAll	tsrc/vdbesort.c	/^static int vdbeSorterJoinAll(VdbeSorter *pSorter, int rcin){$/;"	f	file:
vdbeSorterJoinAll	tsrc/vdbesort.c	1162;"	d	file:
vdbeSorterJoinThread	sqlite3.c	/^static int vdbeSorterJoinThread(SortSubtask *pTask){$/;"	f	file:
vdbeSorterJoinThread	sqlite3.c	85776;"	d	file:
vdbeSorterJoinThread	src/vdbesort.c	/^static int vdbeSorterJoinThread(SortSubtask *pTask){$/;"	f	file:
vdbeSorterJoinThread	src/vdbesort.c	1163;"	d	file:
vdbeSorterJoinThread	tsrc/vdbesort.c	/^static int vdbeSorterJoinThread(SortSubtask *pTask){$/;"	f	file:
vdbeSorterJoinThread	tsrc/vdbesort.c	1163;"	d	file:
vdbeSorterListToPMA	sqlite3.c	/^static int vdbeSorterListToPMA(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterListToPMA	src/vdbesort.c	/^static int vdbeSorterListToPMA(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterListToPMA	tsrc/vdbesort.c	/^static int vdbeSorterListToPMA(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterMapFile	sqlite3.c	/^static int vdbeSorterMapFile(SortSubtask *pTask, SorterFile *pFile, u8 **pp){$/;"	f	file:
vdbeSorterMapFile	src/vdbesort.c	/^static int vdbeSorterMapFile(SortSubtask *pTask, SorterFile *pFile, u8 **pp){$/;"	f	file:
vdbeSorterMapFile	tsrc/vdbesort.c	/^static int vdbeSorterMapFile(SortSubtask *pTask, SorterFile *pFile, u8 **pp){$/;"	f	file:
vdbeSorterMerge	sqlite3.c	/^static SorterRecord *vdbeSorterMerge($/;"	f	file:
vdbeSorterMerge	src/vdbesort.c	/^static SorterRecord *vdbeSorterMerge($/;"	f	file:
vdbeSorterMerge	tsrc/vdbesort.c	/^static SorterRecord *vdbeSorterMerge($/;"	f	file:
vdbeSorterMergeTreeBuild	sqlite3.c	/^static int vdbeSorterMergeTreeBuild($/;"	f	file:
vdbeSorterMergeTreeBuild	src/vdbesort.c	/^static int vdbeSorterMergeTreeBuild($/;"	f	file:
vdbeSorterMergeTreeBuild	tsrc/vdbesort.c	/^static int vdbeSorterMergeTreeBuild($/;"	f	file:
vdbeSorterOpenTempFile	sqlite3.c	/^static int vdbeSorterOpenTempFile($/;"	f	file:
vdbeSorterOpenTempFile	src/vdbesort.c	/^static int vdbeSorterOpenTempFile($/;"	f	file:
vdbeSorterOpenTempFile	tsrc/vdbesort.c	/^static int vdbeSorterOpenTempFile($/;"	f	file:
vdbeSorterPopulateDebug	sqlite3.c	/^static void vdbeSorterPopulateDebug($/;"	f	file:
vdbeSorterPopulateDebug	sqlite3.c	85714;"	d	file:
vdbeSorterPopulateDebug	src/vdbesort.c	/^static void vdbeSorterPopulateDebug($/;"	f	file:
vdbeSorterPopulateDebug	src/vdbesort.c	1101;"	d	file:
vdbeSorterPopulateDebug	tsrc/vdbesort.c	/^static void vdbeSorterPopulateDebug($/;"	f	file:
vdbeSorterPopulateDebug	tsrc/vdbesort.c	1101;"	d	file:
vdbeSorterRecordFree	sqlite3.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRecordFree	src/vdbesort.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRecordFree	tsrc/vdbesort.c	/^static void vdbeSorterRecordFree(sqlite3 *db, SorterRecord *pRecord){$/;"	f	file:
vdbeSorterRewindDebug	sqlite3.c	/^static void vdbeSorterRewindDebug(const char *zEvent){$/;"	f	file:
vdbeSorterRewindDebug	sqlite3.c	85713;"	d	file:
vdbeSorterRewindDebug	src/vdbesort.c	/^static void vdbeSorterRewindDebug(const char *zEvent){$/;"	f	file:
vdbeSorterRewindDebug	src/vdbesort.c	1100;"	d	file:
vdbeSorterRewindDebug	tsrc/vdbesort.c	/^static void vdbeSorterRewindDebug(const char *zEvent){$/;"	f	file:
vdbeSorterRewindDebug	tsrc/vdbesort.c	1100;"	d	file:
vdbeSorterRowkey	sqlite3.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterRowkey	src/vdbesort.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterRowkey	tsrc/vdbesort.c	/^static void *vdbeSorterRowkey($/;"	f	file:
vdbeSorterSetupMerge	sqlite3.c	/^static int vdbeSorterSetupMerge(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterSetupMerge	src/vdbesort.c	/^static int vdbeSorterSetupMerge(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterSetupMerge	tsrc/vdbesort.c	/^static int vdbeSorterSetupMerge(VdbeSorter *pSorter){$/;"	f	file:
vdbeSorterSort	sqlite3.c	/^static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterSort	src/vdbesort.c	/^static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterSort	tsrc/vdbesort.c	/^static int vdbeSorterSort(SortSubtask *pTask, SorterList *pList){$/;"	f	file:
vdbeSorterTreeDepth	sqlite3.c	/^static int vdbeSorterTreeDepth(int nPMA){$/;"	f	file:
vdbeSorterTreeDepth	src/vdbesort.c	/^static int vdbeSorterTreeDepth(int nPMA){$/;"	f	file:
vdbeSorterTreeDepth	tsrc/vdbesort.c	/^static int vdbeSorterTreeDepth(int nPMA){$/;"	f	file:
vdbeSorterWorkDebug	sqlite3.c	/^static void vdbeSorterWorkDebug(SortSubtask *pTask, const char *zEvent){$/;"	f	file:
vdbeSorterWorkDebug	sqlite3.c	85712;"	d	file:
vdbeSorterWorkDebug	src/vdbesort.c	/^static void vdbeSorterWorkDebug(SortSubtask *pTask, const char *zEvent){$/;"	f	file:
vdbeSorterWorkDebug	src/vdbesort.c	1099;"	d	file:
vdbeSorterWorkDebug	tsrc/vdbesort.c	/^static void vdbeSorterWorkDebug(SortSubtask *pTask, const char *zEvent){$/;"	f	file:
vdbeSorterWorkDebug	tsrc/vdbesort.c	1099;"	d	file:
vdbeTakeBranch	sqlite3.c	/^  static void vdbeTakeBranch(int iSrcLine, u8 I, u8 M){$/;"	f	file:
vdbeTakeBranch	src/vdbe.c	/^  static void vdbeTakeBranch(int iSrcLine, u8 I, u8 M){$/;"	f	file:
vdbeTakeBranch	tsrc/vdbe.c	/^  static void vdbeTakeBranch(int iSrcLine, u8 I, u8 M){$/;"	f	file:
vdbeUnbind	sqlite3.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeUnbind	src/vdbeapi.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeUnbind	tsrc/vdbeapi.c	/^static int vdbeUnbind(Vdbe *p, int i){$/;"	f	file:
vdbeUnpackRecord	sqlite3.c	/^static UnpackedRecord *vdbeUnpackRecord($/;"	f	file:
vdbeUnpackRecord	src/vdbeapi.c	/^static UnpackedRecord *vdbeUnpackRecord($/;"	f	file:
vdbeUnpackRecord	tsrc/vdbeapi.c	/^static UnpackedRecord *vdbeUnpackRecord($/;"	f	file:
vdbeVComment	sqlite3.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
vdbeVComment	src/vdbeaux.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
vdbeVComment	tsrc/vdbeaux.c	/^static void vdbeVComment(Vdbe *p, const char *zFormat, va_list ap){$/;"	f	file:
verbose	test/tester.tcl	/^proc verbose {} {$/;"	p
verbose	test/threadtest1.c	/^static int verbose = 0;$/;"	v	file:
verifyDbFile	sqlite3.c	/^static void verifyDbFile(unixFile *pFile){$/;"	f	file:
verifyDbFile	src/os_unix.c	/^static void verifyDbFile(unixFile *pFile){$/;"	f	file:
verifyDbFile	tsrc/os_unix.c	/^static void verifyDbFile(unixFile *pFile){$/;"	f	file:
verify_ex_errcode	test/tester.tcl	/^proc verify_ex_errcode {name expected {db db}} {$/;"	p
versionFunc	sqlite3.c	/^static void versionFunc($/;"	f	file:
versionFunc	src/func.c	/^static void versionFunc($/;"	f	file:
versionFunc	tsrc/func.c	/^static void versionFunc($/;"	f	file:
vfsCurrentTimeInt64	src/test1.c	/^static int SQLITE_TCLAPI vfsCurrentTimeInt64($/;"	f	file:
vfsFlags	sqlite3.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsFlags	src/pager.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsFlags	tsrc/pager.c	/^  u32 vfsFlags;               \/* Flags for sqlite3_vfs.xOpen() *\/$/;"	m	struct:Pager	file:
vfsList	sqlite3.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	sqlite3.c	20017;"	d	file:
vfsList	src/os.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	src/os.c	327;"	d	file:
vfsList	tsrc/os.c	/^static sqlite3_vfs * SQLITE_WSD vfsList = 0;$/;"	v	file:
vfsList	tsrc/os.c	327;"	d	file:
vfsNameFunc	mptest/mptest.c	/^static void vfsNameFunc($/;"	f	file:
vfsUnlink	sqlite3.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfsUnlink	src/os.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfsUnlink	tsrc/os.c	/^static void vfsUnlink(sqlite3_vfs *pVfs){$/;"	f	file:
vfs_find	sqlite3.c	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_find	sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_find	src/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_find	tsrc/sqlite3ext.h	/^  sqlite3_vfs *(*vfs_find)(const char*);$/;"	m	struct:sqlite3_api_routines
vfs_initfail_test	src/test1.c	/^static int SQLITE_TCLAPI vfs_initfail_test($/;"	f	file:
vfs_list	src/test1.c	/^static int SQLITE_TCLAPI vfs_list($/;"	f	file:
vfs_register	sqlite3.c	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines	file:
vfs_register	sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_register	src/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_register	tsrc/sqlite3ext.h	/^  int (*vfs_register)(sqlite3_vfs*,int);$/;"	m	struct:sqlite3_api_routines
vfs_reregister_all	src/test1.c	/^static int SQLITE_TCLAPI vfs_reregister_all($/;"	f	file:
vfs_unlink_test	src/test1.c	/^static int SQLITE_TCLAPI vfs_unlink_test($/;"	f	file:
vfs_unregister	sqlite3.c	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines	file:
vfs_unregister	sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vfs_unregister	src/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vfs_unregister	tsrc/sqlite3ext.h	/^  int (*vfs_unregister)(sqlite3_vfs*);$/;"	m	struct:sqlite3_api_routines
vfs_unregister_all	src/test1.c	/^static int SQLITE_TCLAPI vfs_unregister_all($/;"	f	file:
vfslogAccess	src/test_osinst.c	/^static int vfslogAccess($/;"	f	file:
vfslogCheckReservedLock	src/test_osinst.c	/^static int vfslogCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
vfslogClose	src/test_osinst.c	/^static int vfslogClose(sqlite3_file *pFile){$/;"	f	file:
vfslogCurrentTime	src/test_osinst.c	/^static int vfslogCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
vfslogCurrentTimeInt64	src/test_osinst.c	/^static int vfslogCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *p){$/;"	f	file:
vfslogDelete	src/test_osinst.c	/^static int vfslogDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
vfslogDeviceCharacteristics	src/test_osinst.c	/^static int vfslogDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
vfslogDlClose	src/test_osinst.c	/^static void vfslogDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
vfslogDlError	src/test_osinst.c	/^static void vfslogDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
vfslogDlOpen	src/test_osinst.c	/^static void *vfslogDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
vfslogDlSym	src/test_osinst.c	/^static void (*vfslogDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
vfslogFileControl	src/test_osinst.c	/^static int vfslogFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
vfslogFileSize	src/test_osinst.c	/^static int vfslogFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
vfslogFullPathname	src/test_osinst.c	/^static int vfslogFullPathname($/;"	f	file:
vfslogGetLastError	src/test_osinst.c	/^static int vfslogGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
vfslogLock	src/test_osinst.c	/^static int vfslogLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vfslogOpen	src/test_osinst.c	/^static int vfslogOpen($/;"	f	file:
vfslogRandomness	src/test_osinst.c	/^static int vfslogRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
vfslogRead	src/test_osinst.c	/^static int vfslogRead($/;"	f	file:
vfslogSectorSize	src/test_osinst.c	/^static int vfslogSectorSize(sqlite3_file *pFile){$/;"	f	file:
vfslogShmBarrier	src/test_osinst.c	/^static void vfslogShmBarrier(sqlite3_file *pFile){$/;"	f	file:
vfslogShmLock	src/test_osinst.c	/^static int vfslogShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
vfslogShmMap	src/test_osinst.c	/^static int vfslogShmMap($/;"	f	file:
vfslogShmUnmap	src/test_osinst.c	/^static int vfslogShmUnmap(sqlite3_file *pFile, int deleteFlag){$/;"	f	file:
vfslogSleep	src/test_osinst.c	/^static int vfslogSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
vfslogSync	src/test_osinst.c	/^static int vfslogSync(sqlite3_file *pFile, int flags){$/;"	f	file:
vfslogTruncate	src/test_osinst.c	/^static int vfslogTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
vfslogUnlock	src/test_osinst.c	/^static int vfslogUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vfslogWrite	src/test_osinst.c	/^static int vfslogWrite($/;"	f	file:
vfslog_call	src/test_osinst.c	/^static void vfslog_call($/;"	f	file:
vfslog_eventname	src/test_osinst.c	/^static const char *vfslog_eventname(int eEvent){$/;"	f	file:
vfslog_finalize	src/test_osinst.c	/^static void vfslog_finalize(VfslogVfs *p){$/;"	f	file:
vfslog_flush	src/test_osinst.c	/^static void vfslog_flush(VfslogVfs *p){$/;"	f	file:
vfslog_io_methods	src/test_osinst.c	/^static sqlite3_io_methods vfslog_io_methods = {$/;"	v	file:
vfslog_string	src/test_osinst.c	/^static void vfslog_string(sqlite3_vfs *pVfs, const char *zStr){$/;"	f	file:
vfslog_time	src/test_osinst.c	/^static sqlite3_uint64 vfslog_time(){$/;"	f	file:
vfslog_vfs	src/test_osinst.c	/^static sqlite3_vfs vfslog_vfs = {$/;"	v	file:
vfstraceAccess	src/test_vfstrace.c	/^static int vfstraceAccess($/;"	f	file:
vfstraceCheckReservedLock	src/test_vfstrace.c	/^static int vfstraceCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
vfstraceClose	src/test_vfstrace.c	/^static int vfstraceClose(sqlite3_file *pFile){$/;"	f	file:
vfstraceCurrentTime	src/test_vfstrace.c	/^static int vfstraceCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
vfstraceCurrentTimeInt64	src/test_vfstrace.c	/^static int vfstraceCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *pTimeOut){$/;"	f	file:
vfstraceDelete	src/test_vfstrace.c	/^static int vfstraceDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
vfstraceDeviceCharacteristics	src/test_vfstrace.c	/^static int vfstraceDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
vfstraceDlClose	src/test_vfstrace.c	/^static void vfstraceDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
vfstraceDlError	src/test_vfstrace.c	/^static void vfstraceDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
vfstraceDlOpen	src/test_vfstrace.c	/^static void *vfstraceDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
vfstraceDlSym	src/test_vfstrace.c	/^static void (*vfstraceDlSym(sqlite3_vfs *pVfs,void *p,const char *zSym))(void){$/;"	f	file:
vfstraceFileControl	src/test_vfstrace.c	/^static int vfstraceFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
vfstraceFileSize	src/test_vfstrace.c	/^static int vfstraceFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
vfstraceFullPathname	src/test_vfstrace.c	/^static int vfstraceFullPathname($/;"	f	file:
vfstraceGetLastError	src/test_vfstrace.c	/^static int vfstraceGetLastError(sqlite3_vfs *pVfs, int iErr, char *zErr){$/;"	f	file:
vfstraceGetSystemCall	src/test_vfstrace.c	/^static sqlite3_syscall_ptr vfstraceGetSystemCall($/;"	f	file:
vfstraceLock	src/test_vfstrace.c	/^static int vfstraceLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vfstraceNextSystemCall	src/test_vfstrace.c	/^static const char *vfstraceNextSystemCall(sqlite3_vfs *pVfs, const char *zName){$/;"	f	file:
vfstraceOpen	src/test_vfstrace.c	/^static int vfstraceOpen($/;"	f	file:
vfstraceRandomness	src/test_vfstrace.c	/^static int vfstraceRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
vfstraceRead	src/test_vfstrace.c	/^static int vfstraceRead($/;"	f	file:
vfstraceSectorSize	src/test_vfstrace.c	/^static int vfstraceSectorSize(sqlite3_file *pFile){$/;"	f	file:
vfstraceSetSystemCall	src/test_vfstrace.c	/^static int vfstraceSetSystemCall($/;"	f	file:
vfstraceShmBarrier	src/test_vfstrace.c	/^static void vfstraceShmBarrier(sqlite3_file *pFile){$/;"	f	file:
vfstraceShmLock	src/test_vfstrace.c	/^static int vfstraceShmLock(sqlite3_file *pFile, int ofst, int n, int flags){$/;"	f	file:
vfstraceShmMap	src/test_vfstrace.c	/^static int vfstraceShmMap($/;"	f	file:
vfstraceShmUnmap	src/test_vfstrace.c	/^static int vfstraceShmUnmap(sqlite3_file *pFile, int delFlag){$/;"	f	file:
vfstraceSleep	src/test_vfstrace.c	/^static int vfstraceSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
vfstraceSync	src/test_vfstrace.c	/^static int vfstraceSync(sqlite3_file *pFile, int flags){$/;"	f	file:
vfstraceTruncate	src/test_vfstrace.c	/^static int vfstraceTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
vfstraceUnlock	src/test_vfstrace.c	/^static int vfstraceUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vfstraceWrite	src/test_vfstrace.c	/^static int vfstraceWrite($/;"	f	file:
vfstrace_file	src/test_vfstrace.c	/^struct vfstrace_file {$/;"	s	file:
vfstrace_file	src/test_vfstrace.c	/^typedef struct vfstrace_file vfstrace_file;$/;"	t	typeref:struct:vfstrace_file	file:
vfstrace_info	src/test_vfstrace.c	/^struct vfstrace_info {$/;"	s	file:
vfstrace_info	src/test_vfstrace.c	/^typedef struct vfstrace_info vfstrace_info;$/;"	t	typeref:struct:vfstrace_info	file:
vfstrace_print_errcode	src/test_vfstrace.c	/^static void vfstrace_print_errcode($/;"	f	file:
vfstrace_printf	src/test_vfstrace.c	/^static void vfstrace_printf($/;"	f	file:
vfstrace_register	src/test_vfstrace.c	/^int vfstrace_register($/;"	f
viaCoroutine	sqlite3.c	/^      unsigned viaCoroutine :1;  \/* Implemented as a co-routine *\/$/;"	m	struct:SrcList::SrcList_item::__anon84	file:
viaCoroutine	src/sqliteInt.h	/^      unsigned viaCoroutine :1;  \/* Implemented as a co-routine *\/$/;"	m	struct:SrcList::SrcList_item::__anon58
viaCoroutine	tsrc/sqliteInt.h	/^      unsigned viaCoroutine :1;  \/* Implemented as a co-routine *\/$/;"	m	struct:SrcList::SrcList_item::__anon26
view_node	ext/rtree/viewrtree.tcl	/^proc view_node {} {$/;"	p
visit_file	tool/loadfts.c	/^void visit_file(void *pCtx, const char *zPath){$/;"	f
vlogAccess	ext/misc/vfslog.c	/^static int vlogAccess($/;"	f	file:
vlogBestIndex	src/test_osinst.c	/^static int vlogBestIndex(sqlite3_vtab *tab, sqlite3_index_info *pIdxInfo){$/;"	f	file:
vlogCheckReservedLock	ext/misc/vfslog.c	/^static int vlogCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
vlogClose	ext/misc/vfslog.c	/^static int vlogClose(sqlite3_file *pFile){$/;"	f	file:
vlogClose	src/test_osinst.c	/^static int vlogClose(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
vlogColumn	src/test_osinst.c	/^static int vlogColumn($/;"	f	file:
vlogConnect	src/test_osinst.c	/^static int vlogConnect($/;"	f	file:
vlogCurrentTime	ext/misc/vfslog.c	/^static int vlogCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
vlogCurrentTimeInt64	ext/misc/vfslog.c	/^static int vlogCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *p){$/;"	f	file:
vlogDelete	ext/misc/vfslog.c	/^static int vlogDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
vlogDeviceCharacteristics	ext/misc/vfslog.c	/^static int vlogDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
vlogDisconnect	src/test_osinst.c	/^static int vlogDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
vlogDlClose	ext/misc/vfslog.c	/^static void vlogDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
vlogDlError	ext/misc/vfslog.c	/^static void vlogDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
vlogDlOpen	ext/misc/vfslog.c	/^static void *vlogDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
vlogDlSym	ext/misc/vfslog.c	/^static void (*vlogDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
vlogEof	src/test_osinst.c	/^static int vlogEof(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
vlogFileControl	ext/misc/vfslog.c	/^static int vlogFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
vlogFileSize	ext/misc/vfslog.c	/^static int vlogFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
vlogFilter	src/test_osinst.c	/^static int vlogFilter($/;"	f	file:
vlogFullPathname	ext/misc/vfslog.c	/^static int vlogFullPathname($/;"	f	file:
vlogGetLastError	ext/misc/vfslog.c	/^static int vlogGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
vlogLock	ext/misc/vfslog.c	/^static int vlogLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vlogLogClose	ext/misc/vfslog.c	/^static void vlogLogClose(VLogLog *p){$/;"	f	file:
vlogLogOpen	ext/misc/vfslog.c	/^static VLogLog *vlogLogOpen(const char *zFilename){$/;"	f	file:
vlogLogPrint	ext/misc/vfslog.c	/^static void vlogLogPrint($/;"	f	file:
vlogNext	src/test_osinst.c	/^static int vlogNext(sqlite3_vtab_cursor *pCursor){$/;"	f	file:
vlogOpen	ext/misc/vfslog.c	/^static int vlogOpen($/;"	f	file:
vlogOpen	src/test_osinst.c	/^static int vlogOpen(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
vlogRandomness	ext/misc/vfslog.c	/^static int vlogRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
vlogRead	ext/misc/vfslog.c	/^static int vlogRead($/;"	f	file:
vlogRowid	src/test_osinst.c	/^static int vlogRowid(sqlite3_vtab_cursor *pCursor, sqlite_int64 *pRowid){$/;"	f	file:
vlogSectorSize	ext/misc/vfslog.c	/^static int vlogSectorSize(sqlite3_file *pFile){$/;"	f	file:
vlogSignature	ext/misc/vfslog.c	/^static void vlogSignature(unsigned char *p, int n, char *zCksum){$/;"	f	file:
vlogSignature	tool/pagesig.c	/^static void vlogSignature(unsigned char *p, int n, char *zCksum){$/;"	f	file:
vlogSleep	ext/misc/vfslog.c	/^static int vlogSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
vlogSync	ext/misc/vfslog.c	/^static int vlogSync(sqlite3_file *pFile, int flags){$/;"	f	file:
vlogTruncate	ext/misc/vfslog.c	/^static int vlogTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
vlogUnlock	ext/misc/vfslog.c	/^static int vlogUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vlogWrite	ext/misc/vfslog.c	/^static int vlogWrite($/;"	f	file:
vlog_io_methods	ext/misc/vfslog.c	/^static sqlite3_io_methods vlog_io_methods = {$/;"	v	file:
vlog_time	ext/misc/vfslog.c	/^static sqlite3_uint64 vlog_time(){$/;"	f	file:
vlog_vfs	ext/misc/vfslog.c	/^static VLogVfs vlog_vfs = {$/;"	v	file:
vmprintf	sqlite3.c	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vmprintf	sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vmprintf	src/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vmprintf	tsrc/sqlite3ext.h	/^  char *(*vmprintf)(const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vsixtest	vsixtest/App.xaml.h	/^namespace vsixtest$/;"	n
vsixtest	vsixtest/MainPage.xaml.h	/^namespace vsixtest$/;"	n
vsnprintf	sqlite3.c	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines	file:
vsnprintf	sqlite3ext.h	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vsnprintf	src/sqlite3ext.h	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vsnprintf	tsrc/sqlite3ext.h	/^  char *(*vsnprintf)(int,char*,const char*,va_list);$/;"	m	struct:sqlite3_api_routines
vstatAccess	ext/misc/vfsstat.c	/^static int vstatAccess($/;"	f	file:
vstatCheckReservedLock	ext/misc/vfsstat.c	/^static int vstatCheckReservedLock(sqlite3_file *pFile, int *pResOut){$/;"	f	file:
vstatClose	ext/misc/vfsstat.c	/^static int vstatClose(sqlite3_file *pFile){$/;"	f	file:
vstatCurrentTime	ext/misc/vfsstat.c	/^static int vstatCurrentTime(sqlite3_vfs *pVfs, double *pTimeOut){$/;"	f	file:
vstatCurrentTimeInt64	ext/misc/vfsstat.c	/^static int vstatCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *p){$/;"	f	file:
vstatDelete	ext/misc/vfsstat.c	/^static int vstatDelete(sqlite3_vfs *pVfs, const char *zPath, int dirSync){$/;"	f	file:
vstatDeviceCharacteristics	ext/misc/vfsstat.c	/^static int vstatDeviceCharacteristics(sqlite3_file *pFile){$/;"	f	file:
vstatDlClose	ext/misc/vfsstat.c	/^static void vstatDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
vstatDlError	ext/misc/vfsstat.c	/^static void vstatDlError(sqlite3_vfs *pVfs, int nByte, char *zErrMsg){$/;"	f	file:
vstatDlOpen	ext/misc/vfsstat.c	/^static void *vstatDlOpen(sqlite3_vfs *pVfs, const char *zPath){$/;"	f	file:
vstatDlSym	ext/misc/vfsstat.c	/^static void (*vstatDlSym(sqlite3_vfs *pVfs, void *p, const char *zSym))(void){$/;"	f	file:
vstatFetch	ext/misc/vfsstat.c	/^static int vstatFetch($/;"	f	file:
vstatFileControl	ext/misc/vfsstat.c	/^static int vstatFileControl(sqlite3_file *pFile, int op, void *pArg){$/;"	f	file:
vstatFileSize	ext/misc/vfsstat.c	/^static int vstatFileSize(sqlite3_file *pFile, sqlite_int64 *pSize){$/;"	f	file:
vstatFullPathname	ext/misc/vfsstat.c	/^static int vstatFullPathname($/;"	f	file:
vstatGetLastError	ext/misc/vfsstat.c	/^static int vstatGetLastError(sqlite3_vfs *pVfs, int a, char *b){$/;"	f	file:
vstatLock	ext/misc/vfsstat.c	/^static int vstatLock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vstatOpen	ext/misc/vfsstat.c	/^static int vstatOpen($/;"	f	file:
vstatRandomness	ext/misc/vfsstat.c	/^static int vstatRandomness(sqlite3_vfs *pVfs, int nByte, char *zBufOut){$/;"	f	file:
vstatRead	ext/misc/vfsstat.c	/^static int vstatRead($/;"	f	file:
vstatRegister	ext/misc/vfsstat.c	/^static int vstatRegister($/;"	f	file:
vstatSectorSize	ext/misc/vfsstat.c	/^static int vstatSectorSize(sqlite3_file *pFile){$/;"	f	file:
vstatShmBarrier	ext/misc/vfsstat.c	/^static void vstatShmBarrier(sqlite3_file *pFile){$/;"	f	file:
vstatShmLock	ext/misc/vfsstat.c	/^static int vstatShmLock(sqlite3_file *pFile, int offset, int n, int flags){$/;"	f	file:
vstatShmMap	ext/misc/vfsstat.c	/^static int vstatShmMap($/;"	f	file:
vstatShmUnmap	ext/misc/vfsstat.c	/^static int vstatShmUnmap(sqlite3_file *pFile, int deleteFlag){$/;"	f	file:
vstatSleep	ext/misc/vfsstat.c	/^static int vstatSleep(sqlite3_vfs *pVfs, int nMicro){$/;"	f	file:
vstatSync	ext/misc/vfsstat.c	/^static int vstatSync(sqlite3_file *pFile, int flags){$/;"	f	file:
vstatTruncate	ext/misc/vfsstat.c	/^static int vstatTruncate(sqlite3_file *pFile, sqlite_int64 size){$/;"	f	file:
vstatUnfetch	ext/misc/vfsstat.c	/^static int vstatUnfetch(sqlite3_file *pFile, sqlite3_int64 iOfst, void *pPage){$/;"	f	file:
vstatUnlock	ext/misc/vfsstat.c	/^static int vstatUnlock(sqlite3_file *pFile, int eLock){$/;"	f	file:
vstatWrite	ext/misc/vfsstat.c	/^static int vstatWrite($/;"	f	file:
vstat_io_methods	ext/misc/vfsstat.c	/^static const sqlite3_io_methods vstat_io_methods = {$/;"	v	file:
vstat_vfs	ext/misc/vfsstat.c	/^static VStatVfs vstat_vfs = {$/;"	v	file:
vstattabBestIndex	ext/misc/vfsstat.c	/^static int vstattabBestIndex($/;"	f	file:
vstattabClose	ext/misc/vfsstat.c	/^static int vstattabClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
vstattabColumn	ext/misc/vfsstat.c	/^static int vstattabColumn($/;"	f	file:
vstattabConnect	ext/misc/vfsstat.c	/^static int vstattabConnect($/;"	f	file:
vstattabDisconnect	ext/misc/vfsstat.c	/^static int vstattabDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
vstattabEof	ext/misc/vfsstat.c	/^static int vstattabEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
vstattabFilter	ext/misc/vfsstat.c	/^static int vstattabFilter($/;"	f	file:
vstattabNext	ext/misc/vfsstat.c	/^static int vstattabNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
vstattabOpen	ext/misc/vfsstat.c	/^static int vstattabOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
vstattabRowid	ext/misc/vfsstat.c	/^static int vstattabRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
vstattabUpdate	ext/misc/vfsstat.c	/^static int vstattabUpdate($/;"	f	file:
vtab	sqlite3.c	/^    } vtab;$/;"	m	union:WhereLoop::__anon98	typeref:struct:WhereLoop::__anon98::__anon100	file:
vtab	src/whereInt.h	/^    } vtab;$/;"	m	union:WhereLoop::__anon47	typeref:struct:WhereLoop::__anon47::__anon49
vtab	tsrc/whereInt.h	/^    } vtab;$/;"	m	union:WhereLoop::__anon12	typeref:struct:WhereLoop::__anon12::__anon14
vtabBestIndex	sqlite3.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabBestIndex	src/where.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabBestIndex	tsrc/where.c	/^static int vtabBestIndex(Parse *pParse, Table *pTab, sqlite3_index_info *p){$/;"	f	file:
vtabCallConstructor	sqlite3.c	/^static int vtabCallConstructor($/;"	f	file:
vtabCallConstructor	src/vtab.c	/^static int vtabCallConstructor($/;"	f	file:
vtabCallConstructor	tsrc/vtab.c	/^static int vtabCallConstructor($/;"	f	file:
vtabDisconnectAll	sqlite3.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabDisconnectAll	src/vtab.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabDisconnectAll	tsrc/vtab.c	/^static VTable *vtabDisconnectAll(sqlite3 *db, Table *p){$/;"	f	file:
vtabOnConflict	sqlite3.c	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3	file:
vtabOnConflict	src/sqliteInt.h	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3
vtabOnConflict	tsrc/sqliteInt.h	/^  u8 vtabOnConflict;            \/* Value to return for s3_vtab_on_conflict() *\/$/;"	m	struct:sqlite3
vtab_config	sqlite3.c	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines	file:
vtab_config	sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_config	src/sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_config	tsrc/sqlite3ext.h	/^  int (*vtab_config)(sqlite3*,int op,...);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	sqlite3.c	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines	file:
vtab_on_conflict	sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	src/sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
vtab_on_conflict	tsrc/sqlite3ext.h	/^  int (*vtab_on_conflict)(sqlite3*);$/;"	m	struct:sqlite3_api_routines
vtabarg	parse.y	/^vtabarg ::= .                       {sqlite3VtabArgInit(pParse);}$/;"	l
vtabarg	parse.y	/^vtabarg ::= vtabarg vtabargtoken.$/;"	l
vtabarg	src/parse.y	/^vtabarg ::= .                       {sqlite3VtabArgInit(pParse);}$/;"	l
vtabarg	src/parse.y	/^vtabarg ::= vtabarg vtabargtoken.$/;"	l
vtabarglist	parse.y	/^vtabarglist ::= vtabarg.$/;"	l
vtabarglist	parse.y	/^vtabarglist ::= vtabarglist COMMA vtabarg.$/;"	l
vtabarglist	src/parse.y	/^vtabarglist ::= vtabarg.$/;"	l
vtabarglist	src/parse.y	/^vtabarglist ::= vtabarglist COMMA vtabarg.$/;"	l
vtabargtoken	parse.y	/^vtabargtoken ::= ANY(X).            {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
vtabargtoken	parse.y	/^vtabargtoken ::= lp anylist RP(X).  {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
vtabargtoken	src/parse.y	/^vtabargtoken ::= ANY(X).            {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
vtabargtoken	src/parse.y	/^vtabargtoken ::= lp anylist RP(X).  {sqlite3VtabArgExtend(pParse,&X);}$/;"	l
vtshimAuxDestructor	ext/misc/vtshim.c	/^static void vtshimAuxDestructor(void *pXAux){$/;"	f	file:
vtshimBegin	ext/misc/vtshim.c	/^static int vtshimBegin(sqlite3_vtab *pBase){$/;"	f	file:
vtshimBestIndex	ext/misc/vtshim.c	/^static int vtshimBestIndex($/;"	f	file:
vtshimClose	ext/misc/vtshim.c	/^static int vtshimClose(sqlite3_vtab_cursor *pX){$/;"	f	file:
vtshimColumn	ext/misc/vtshim.c	/^static int vtshimColumn(sqlite3_vtab_cursor *pX, sqlite3_context *ctx, int i){$/;"	f	file:
vtshimCommit	ext/misc/vtshim.c	/^static int vtshimCommit(sqlite3_vtab *pBase){$/;"	f	file:
vtshimConnect	ext/misc/vtshim.c	/^static int vtshimConnect($/;"	f	file:
vtshimCopyModule	ext/misc/vtshim.c	/^static int vtshimCopyModule($/;"	f	file:
vtshimCreate	ext/misc/vtshim.c	/^static int vtshimCreate($/;"	f	file:
vtshimDestroy	ext/misc/vtshim.c	/^static int vtshimDestroy(sqlite3_vtab *pBase){$/;"	f	file:
vtshimDisconnect	ext/misc/vtshim.c	/^static int vtshimDisconnect(sqlite3_vtab *pBase){$/;"	f	file:
vtshimEof	ext/misc/vtshim.c	/^static int vtshimEof(sqlite3_vtab_cursor *pX){$/;"	f	file:
vtshimFilter	ext/misc/vtshim.c	/^static int vtshimFilter($/;"	f	file:
vtshimFindFunction	ext/misc/vtshim.c	/^static int vtshimFindFunction($/;"	f	file:
vtshimNext	ext/misc/vtshim.c	/^static int vtshimNext(sqlite3_vtab_cursor *pX){$/;"	f	file:
vtshimOpen	ext/misc/vtshim.c	/^static int vtshimOpen(sqlite3_vtab *pBase, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
vtshimRelease	ext/misc/vtshim.c	/^static int vtshimRelease(sqlite3_vtab *pBase, int n){$/;"	f	file:
vtshimRename	ext/misc/vtshim.c	/^static int vtshimRename(sqlite3_vtab *pBase, const char *zNewName){$/;"	f	file:
vtshimRollback	ext/misc/vtshim.c	/^static int vtshimRollback(sqlite3_vtab *pBase){$/;"	f	file:
vtshimRollbackTo	ext/misc/vtshim.c	/^static int vtshimRollbackTo(sqlite3_vtab *pBase, int n){$/;"	f	file:
vtshimRowid	ext/misc/vtshim.c	/^static int vtshimRowid(sqlite3_vtab_cursor *pX, sqlite3_int64 *pRowid){$/;"	f	file:
vtshimSavepoint	ext/misc/vtshim.c	/^static int vtshimSavepoint(sqlite3_vtab *pBase, int n){$/;"	f	file:
vtshimSync	ext/misc/vtshim.c	/^static int vtshimSync(sqlite3_vtab *pBase){$/;"	f	file:
vtshimUpdate	ext/misc/vtshim.c	/^static int vtshimUpdate($/;"	f	file:
vtshim_aux	ext/misc/vtshim.c	/^struct vtshim_aux {$/;"	s	file:
vtshim_aux	ext/misc/vtshim.c	/^typedef struct vtshim_aux vtshim_aux;$/;"	t	typeref:struct:vtshim_aux	file:
vtshim_cursor	ext/misc/vtshim.c	/^struct vtshim_cursor {$/;"	s	file:
vtshim_cursor	ext/misc/vtshim.c	/^typedef struct vtshim_cursor vtshim_cursor;$/;"	t	typeref:struct:vtshim_cursor	file:
vtshim_vtab	ext/misc/vtshim.c	/^struct vtshim_vtab {$/;"	s	file:
vtshim_vtab	ext/misc/vtshim.c	/^typedef struct vtshim_vtab vtshim_vtab;$/;"	t	typeref:struct:vtshim_vtab	file:
vxworksFileId	sqlite3.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileId	src/os_unix.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileId	tsrc/os_unix.c	/^struct vxworksFileId {$/;"	s	file:
vxworksFileList	sqlite3.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFileList	src/os_unix.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFileList	tsrc/os_unix.c	/^static struct vxworksFileId *vxworksFileList = 0;$/;"	v	typeref:struct:vxworksFileId	file:
vxworksFindFileId	sqlite3.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksFindFileId	src/os_unix.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksFindFileId	tsrc/os_unix.c	/^static struct vxworksFileId *vxworksFindFileId(const char *zAbsoluteName){$/;"	f	file:
vxworksIoFinder	sqlite3.c	/^  *(*const vxworksIoFinder)(const char*,unixFile*) = vxworksIoFinderImpl;$/;"	v	file:
vxworksIoFinder	src/os_unix.c	/^  *(*const vxworksIoFinder)(const char*,unixFile*) = vxworksIoFinderImpl;$/;"	v	file:
vxworksIoFinder	tsrc/os_unix.c	/^  *(*const vxworksIoFinder)(const char*,unixFile*) = vxworksIoFinderImpl;$/;"	v	file:
vxworksIoFinderImpl	sqlite3.c	/^static const sqlite3_io_methods *vxworksIoFinderImpl($/;"	f	file:
vxworksIoFinderImpl	src/os_unix.c	/^static const sqlite3_io_methods *vxworksIoFinderImpl($/;"	f	file:
vxworksIoFinderImpl	tsrc/os_unix.c	/^static const sqlite3_io_methods *vxworksIoFinderImpl($/;"	f	file:
vxworksReleaseFileId	sqlite3.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksReleaseFileId	src/os_unix.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksReleaseFileId	tsrc/os_unix.c	/^static void vxworksReleaseFileId(struct vxworksFileId *pId){$/;"	f	file:
vxworksSimplifyName	sqlite3.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
vxworksSimplifyName	src/os_unix.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
vxworksSimplifyName	tsrc/os_unix.c	/^static int vxworksSimplifyName(char *z, int n){$/;"	f	file:
waitForClient	mptest/mptest.c	/^static void waitForClient(int iClient, int iTimeout, char *zErrPrefix){$/;"	f	file:
wait_for_unlock_notify	src/test_thread.c	/^static int wait_for_unlock_notify(sqlite3 *db){$/;"	f	file:
walBusyLock	sqlite3.c	/^static int walBusyLock($/;"	f	file:
walBusyLock	src/wal.c	/^static int walBusyLock($/;"	f	file:
walBusyLock	tsrc/wal.c	/^static int walBusyLock($/;"	f	file:
walCheckpoint	sqlite3.c	/^static int walCheckpoint($/;"	f	file:
walCheckpoint	src/wal.c	/^static int walCheckpoint($/;"	f	file:
walCheckpoint	tsrc/wal.c	/^static int walCheckpoint($/;"	f	file:
walChecksumBytes	sqlite3.c	/^static void walChecksumBytes($/;"	f	file:
walChecksumBytes	src/wal.c	/^static void walChecksumBytes($/;"	f	file:
walChecksumBytes	tsrc/wal.c	/^static void walChecksumBytes($/;"	f	file:
walCkptInfo	sqlite3.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCkptInfo	src/wal.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCkptInfo	tsrc/wal.c	/^static volatile WalCkptInfo *walCkptInfo(Wal *pWal){$/;"	f	file:
walCleanupHash	sqlite3.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walCleanupHash	src/wal.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walCleanupHash	tsrc/wal.c	/^static void walCleanupHash(Wal *pWal){$/;"	f	file:
walDecodeFrame	sqlite3.c	/^static int walDecodeFrame($/;"	f	file:
walDecodeFrame	src/wal.c	/^static int walDecodeFrame($/;"	f	file:
walDecodeFrame	tsrc/wal.c	/^static int walDecodeFrame($/;"	f	file:
walEncodeFrame	sqlite3.c	/^static void walEncodeFrame($/;"	f	file:
walEncodeFrame	src/wal.c	/^static void walEncodeFrame($/;"	f	file:
walEncodeFrame	tsrc/wal.c	/^static void walEncodeFrame($/;"	f	file:
walFrameOffset	sqlite3.c	54095;"	d	file:
walFrameOffset	src/wal.c	419;"	d	file:
walFrameOffset	tsrc/wal.c	419;"	d	file:
walFramePage	sqlite3.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePage	src/wal.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePage	tsrc/wal.c	/^static int walFramePage(u32 iFrame){$/;"	f	file:
walFramePgno	sqlite3.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walFramePgno	src/wal.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walFramePgno	tsrc/wal.c	/^static u32 walFramePgno(Wal *pWal, u32 iFrame){$/;"	f	file:
walHash	sqlite3.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHash	src/wal.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHash	tsrc/wal.c	/^static int walHash(u32 iPage){$/;"	f	file:
walHashGet	sqlite3.c	/^static int walHashGet($/;"	f	file:
walHashGet	src/wal.c	/^static int walHashGet($/;"	f	file:
walHashGet	tsrc/wal.c	/^static int walHashGet($/;"	f	file:
walIndexAppend	sqlite3.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexAppend	src/wal.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexAppend	tsrc/wal.c	/^static int walIndexAppend(Wal *pWal, u32 iFrame, u32 iPage){$/;"	f	file:
walIndexClose	sqlite3.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexClose	src/wal.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexClose	tsrc/wal.c	/^static void walIndexClose(Wal *pWal, int isDelete){$/;"	f	file:
walIndexHdr	sqlite3.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexHdr	src/wal.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexHdr	tsrc/wal.c	/^static volatile WalIndexHdr *walIndexHdr(Wal *pWal){$/;"	f	file:
walIndexPage	sqlite3.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexPage	src/wal.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexPage	tsrc/wal.c	/^static int walIndexPage(Wal *pWal, int iPage, volatile u32 **ppPage){$/;"	f	file:
walIndexReadHdr	sqlite3.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexReadHdr	src/wal.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexReadHdr	tsrc/wal.c	/^static int walIndexReadHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexRecover	sqlite3.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexRecover	src/wal.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexRecover	tsrc/wal.c	/^static int walIndexRecover(Wal *pWal){$/;"	f	file:
walIndexTryHdr	sqlite3.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexTryHdr	src/wal.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexTryHdr	tsrc/wal.c	/^static int walIndexTryHdr(Wal *pWal, int *pChanged){$/;"	f	file:
walIndexWriteHdr	sqlite3.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIndexWriteHdr	src/wal.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIndexWriteHdr	tsrc/wal.c	/^static void walIndexWriteHdr(Wal *pWal){$/;"	f	file:
walIteratorFree	sqlite3.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorFree	src/wal.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorFree	tsrc/wal.c	/^static void walIteratorFree(WalIterator *p){$/;"	f	file:
walIteratorInit	sqlite3.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorInit	src/wal.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorInit	tsrc/wal.c	/^static int walIteratorInit(Wal *pWal, WalIterator **pp){$/;"	f	file:
walIteratorNext	sqlite3.c	/^static int walIteratorNext($/;"	f	file:
walIteratorNext	src/wal.c	/^static int walIteratorNext($/;"	f	file:
walIteratorNext	tsrc/wal.c	/^static int walIteratorNext($/;"	f	file:
walLimitSize	sqlite3.c	/^static void walLimitSize(Wal *pWal, i64 nMax){$/;"	f	file:
walLimitSize	src/wal.c	/^static void walLimitSize(Wal *pWal, i64 nMax){$/;"	f	file:
walLimitSize	tsrc/wal.c	/^static void walLimitSize(Wal *pWal, i64 nMax){$/;"	f	file:
walLockExclusive	sqlite3.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockExclusive	src/wal.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockExclusive	tsrc/wal.c	/^static int walLockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walLockName	sqlite3.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockName	src/wal.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockName	tsrc/wal.c	/^static const char *walLockName(int lockIdx){$/;"	f	file:
walLockShared	sqlite3.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walLockShared	src/wal.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walLockShared	tsrc/wal.c	/^static int walLockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walMerge	sqlite3.c	/^static void walMerge($/;"	f	file:
walMerge	src/wal.c	/^static void walMerge($/;"	f	file:
walMerge	tsrc/wal.c	/^static void walMerge($/;"	f	file:
walMergesort	sqlite3.c	/^static void walMergesort($/;"	f	file:
walMergesort	src/wal.c	/^static void walMergesort($/;"	f	file:
walMergesort	tsrc/wal.c	/^static void walMergesort($/;"	f	file:
walNextHash	sqlite3.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walNextHash	src/wal.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walNextHash	tsrc/wal.c	/^static int walNextHash(int iPriorHash){$/;"	f	file:
walPagesize	sqlite3.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walPagesize	src/wal.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walPagesize	tsrc/wal.c	/^static int walPagesize(Wal *pWal){$/;"	f	file:
walRestartHdr	sqlite3.c	/^static void walRestartHdr(Wal *pWal, u32 salt1){$/;"	f	file:
walRestartHdr	src/wal.c	/^static void walRestartHdr(Wal *pWal, u32 salt1){$/;"	f	file:
walRestartHdr	tsrc/wal.c	/^static void walRestartHdr(Wal *pWal, u32 salt1){$/;"	f	file:
walRestartLog	sqlite3.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walRestartLog	src/wal.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walRestartLog	tsrc/wal.c	/^static int walRestartLog(Wal *pWal){$/;"	f	file:
walRewriteChecksums	sqlite3.c	/^static int walRewriteChecksums(Wal *pWal, u32 iLast){$/;"	f	file:
walRewriteChecksums	src/wal.c	/^static int walRewriteChecksums(Wal *pWal, u32 iLast){$/;"	f	file:
walRewriteChecksums	tsrc/wal.c	/^static int walRewriteChecksums(Wal *pWal, u32 iLast){$/;"	f	file:
walShmBarrier	sqlite3.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walShmBarrier	src/wal.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walShmBarrier	tsrc/wal.c	/^static void walShmBarrier(Wal *pWal){$/;"	f	file:
walSyncFlags	sqlite3.c	/^  u8 walSyncFlags;            \/* SYNC_NORMAL or SYNC_FULL for wal writes *\/$/;"	m	struct:Pager	file:
walSyncFlags	src/pager.c	/^  u8 walSyncFlags;            \/* SYNC_NORMAL or SYNC_FULL for wal writes *\/$/;"	m	struct:Pager	file:
walSyncFlags	tsrc/pager.c	/^  u8 walSyncFlags;            \/* SYNC_NORMAL or SYNC_FULL for wal writes *\/$/;"	m	struct:Pager	file:
walTryBeginRead	sqlite3.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walTryBeginRead	src/wal.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walTryBeginRead	tsrc/wal.c	/^static int walTryBeginRead(Wal *pWal, int *pChanged, int useWal, int cnt){$/;"	f	file:
walUnlockExclusive	sqlite3.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockExclusive	src/wal.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockExclusive	tsrc/wal.c	/^static void walUnlockExclusive(Wal *pWal, int lockIdx, int n){$/;"	f	file:
walUnlockShared	sqlite3.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walUnlockShared	src/wal.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walUnlockShared	tsrc/wal.c	/^static void walUnlockShared(Wal *pWal, int lockIdx){$/;"	f	file:
walWriteOneFrame	sqlite3.c	/^static int walWriteOneFrame($/;"	f	file:
walWriteOneFrame	src/wal.c	/^static int walWriteOneFrame($/;"	f	file:
walWriteOneFrame	tsrc/wal.c	/^static int walWriteOneFrame($/;"	f	file:
walWriteToLog	sqlite3.c	/^static int walWriteToLog($/;"	f	file:
walWriteToLog	src/wal.c	/^static int walWriteToLog($/;"	f	file:
walWriteToLog	tsrc/wal.c	/^static int walWriteToLog($/;"	f	file:
wal_autocheckpoint	sqlite3.c	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines	file:
wal_autocheckpoint	sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_autocheckpoint	src/sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_autocheckpoint	tsrc/sqlite3ext.h	/^  int (*wal_autocheckpoint)(sqlite3*,int);$/;"	m	struct:sqlite3_api_routines
wal_check_journal_mode	test/tester.tcl	/^proc wal_check_journal_mode {testname {db db}} {$/;"	p
wal_checkpoint	sqlite3.c	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint	sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint	src/sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint	tsrc/sqlite3ext.h	/^  int (*wal_checkpoint)(sqlite3*,const char*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint_v2	sqlite3.c	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines	file:
wal_checkpoint_v2	sqlite3ext.h	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint_v2	src/sqlite3ext.h	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines
wal_checkpoint_v2	tsrc/sqlite3ext.h	/^  int (*wal_checkpoint_v2)(sqlite3*,const char*,int,int*,int*);$/;"	m	struct:sqlite3_api_routines
wal_cksum	test/wal_common.tcl	/^proc wal_cksum {endian ckv1 ckv2 blob} {$/;"	p
wal_cksum_intlist	test/wal_common.tcl	/^proc wal_cksum_intlist {ckv1 ckv2 intlist} {$/;"	p
wal_file_size	test/wal_common.tcl	/^proc wal_file_size {nFrame pgsz} {$/;"	p
wal_fix_walindex_cksum	test/wal_common.tcl	/^proc wal_fix_walindex_cksum {hdrvar} {$/;"	p
wal_frame_count	test/wal_common.tcl	/^proc wal_frame_count {zFile pgsz} {$/;"	p
wal_hook	sqlite3.c	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines	file:
wal_hook	sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
wal_hook	src/sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
wal_hook	tsrc/sqlite3ext.h	/^  void *(*wal_hook)(sqlite3*,int(*)(void*,sqlite3*,const char*,int),void*);$/;"	m	struct:sqlite3_api_routines
wal_is_capable	test/tester.tcl	/^proc wal_is_capable {} {$/;"	p
wal_is_wal_mode	test/tester.tcl	/^proc wal_is_wal_mode {} {$/;"	p
wal_set_journal_mode	test/tester.tcl	/^proc wal_set_journal_mode {{db db}} {$/;"	p
wal_set_walhdr	test/wal_common.tcl	/^proc wal_set_walhdr {filename {intlist {}}} {$/;"	p
walkExpr	sqlite3.c	/^static SQLITE_NOINLINE int walkExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
walkExpr	src/walker.c	/^static SQLITE_NOINLINE int walkExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
walkExpr	tsrc/walker.c	/^static SQLITE_NOINLINE int walkExpr(Walker *pWalker, Expr *pExpr){$/;"	f	file:
walkerDepth	sqlite3.c	/^  int walkerDepth;                          \/* Number of subqueries *\/$/;"	m	struct:Walker	file:
walkerDepth	src/sqliteInt.h	/^  int walkerDepth;                          \/* Number of subqueries *\/$/;"	m	struct:Walker
walkerDepth	tsrc/sqliteInt.h	/^  int walkerDepth;                          \/* Number of subqueries *\/$/;"	m	struct:Walker
walthread1	test/threadtest3.c	/^static void walthread1(int nMs){$/;"	f	file:
walthread1_ckpt_thread	test/threadtest3.c	/^static char *walthread1_ckpt_thread(int iTid, void *pArg){$/;"	f	file:
walthread1_thread	test/threadtest3.c	/^static char *walthread1_thread(int iTid, void *pArg){$/;"	f	file:
walthread2	test/threadtest3.c	/^static void walthread2(int nMs){$/;"	f	file:
walthread2_thread	test/threadtest3.c	/^static char *walthread2_thread(int iTid, void *pArg){$/;"	f	file:
walthread3	test/threadtest3.c	/^static void walthread3(int nMs){$/;"	f	file:
walthread3_thread	test/threadtest3.c	/^static char *walthread3_thread(int iTid, void *pArg){$/;"	f	file:
walthread4	test/threadtest3.c	/^static void walthread4(int nMs){$/;"	f	file:
walthread4_reader_thread	test/threadtest3.c	/^static char *walthread4_reader_thread(int iTid, void *pArg){$/;"	f	file:
walthread4_writer_thread	test/threadtest3.c	/^static char *walthread4_writer_thread(int iTid, void *pArg){$/;"	f	file:
walthread5	test/threadtest3.c	/^static void walthread5(int nMs){$/;"	f	file:
walthread5_thread	test/threadtest3.c	/^static char *walthread5_thread(int iTid, void *pArg){$/;"	f	file:
wantToLock	sqlite3.c	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree	file:
wantToLock	src/btreeInt.h	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree
wantToLock	tsrc/btreeInt.h	/^  int wantToLock;    \/* Number of nested calls to sqlite3BtreeEnter() *\/$/;"	m	struct:Btree
warning	test/tester.tcl	/^proc warning {msg {append 1}} {$/;"	p
wc	sqlite3.c	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo	file:
wc	sqlite3.c	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo	file:
wc	src/whereInt.h	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo
wc	src/whereInt.h	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo
wc	tsrc/whereInt.h	/^  WhereClause wc;          \/* Decomposition into subterms *\/$/;"	m	struct:WhereOrInfo
wc	tsrc/whereInt.h	/^  WhereClause wc;          \/* The subexpression broken out *\/$/;"	m	struct:WhereAndInfo
wctrlFlags	sqlite3.c	/^  u16 wctrlFlags;           \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo	file:
wctrlFlags	src/whereInt.h	/^  u16 wctrlFlags;           \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo
wctrlFlags	tsrc/whereInt.h	/^  u16 wctrlFlags;           \/* Flags originally passed to sqlite3WhereBegin() *\/$/;"	m	struct:WhereInfo
whereAndInfoDelete	sqlite3.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereAndInfoDelete	src/whereexpr.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereAndInfoDelete	tsrc/whereexpr.c	/^static void whereAndInfoDelete(sqlite3 *db, WhereAndInfo *p){$/;"	f	file:
whereClauseInsert	sqlite3.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u16 wtFlags){$/;"	f	file:
whereClauseInsert	src/whereexpr.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u16 wtFlags){$/;"	f	file:
whereClauseInsert	tsrc/whereexpr.c	/^static int whereClauseInsert(WhereClause *pWC, Expr *p, u16 wtFlags){$/;"	f	file:
whereCombineDisjuncts	sqlite3.c	/^static void whereCombineDisjuncts($/;"	f	file:
whereCombineDisjuncts	src/whereexpr.c	/^static void whereCombineDisjuncts($/;"	f	file:
whereCombineDisjuncts	tsrc/whereexpr.c	/^static void whereCombineDisjuncts($/;"	f	file:
whereEqualScanEst	sqlite3.c	/^static int whereEqualScanEst($/;"	f	file:
whereEqualScanEst	src/where.c	/^static int whereEqualScanEst($/;"	f	file:
whereEqualScanEst	tsrc/where.c	/^static int whereEqualScanEst($/;"	f	file:
whereForeignKeys	sqlite3.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereForeignKeys	src/alter.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereForeignKeys	tsrc/alter.c	/^static char *whereForeignKeys(Parse *pParse, Table *pTab){$/;"	f	file:
whereInScanEst	sqlite3.c	/^static int whereInScanEst($/;"	f	file:
whereInScanEst	src/where.c	/^static int whereInScanEst($/;"	f	file:
whereInScanEst	tsrc/where.c	/^static int whereInScanEst($/;"	f	file:
whereInfoFree	sqlite3.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereInfoFree	src/where.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereInfoFree	tsrc/where.c	/^static void whereInfoFree(sqlite3 *db, WhereInfo *pWInfo){$/;"	f	file:
whereKeyStats	sqlite3.c	/^static int whereKeyStats($/;"	f	file:
whereKeyStats	src/where.c	/^static int whereKeyStats($/;"	f	file:
whereKeyStats	tsrc/where.c	/^static int whereKeyStats($/;"	f	file:
whereLikeOptimizationStringFixup	sqlite3.c	/^static void whereLikeOptimizationStringFixup($/;"	f	file:
whereLikeOptimizationStringFixup	sqlite3.c	124090;"	d	file:
whereLikeOptimizationStringFixup	src/wherecode.c	/^static void whereLikeOptimizationStringFixup($/;"	f	file:
whereLikeOptimizationStringFixup	src/wherecode.c	596;"	d	file:
whereLikeOptimizationStringFixup	tsrc/wherecode.c	/^static void whereLikeOptimizationStringFixup($/;"	f	file:
whereLikeOptimizationStringFixup	tsrc/wherecode.c	596;"	d	file:
whereLoopAddAll	sqlite3.c	/^static int whereLoopAddAll(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereLoopAddAll	src/where.c	/^static int whereLoopAddAll(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereLoopAddAll	tsrc/where.c	/^static int whereLoopAddAll(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereLoopAddBtree	sqlite3.c	/^static int whereLoopAddBtree($/;"	f	file:
whereLoopAddBtree	src/where.c	/^static int whereLoopAddBtree($/;"	f	file:
whereLoopAddBtree	tsrc/where.c	/^static int whereLoopAddBtree($/;"	f	file:
whereLoopAddBtreeIndex	sqlite3.c	/^static int whereLoopAddBtreeIndex($/;"	f	file:
whereLoopAddBtreeIndex	src/where.c	/^static int whereLoopAddBtreeIndex($/;"	f	file:
whereLoopAddBtreeIndex	tsrc/where.c	/^static int whereLoopAddBtreeIndex($/;"	f	file:
whereLoopAddOr	sqlite3.c	/^static int whereLoopAddOr($/;"	f	file:
whereLoopAddOr	src/where.c	/^static int whereLoopAddOr($/;"	f	file:
whereLoopAddOr	tsrc/where.c	/^static int whereLoopAddOr($/;"	f	file:
whereLoopAddVirtual	sqlite3.c	/^static int whereLoopAddVirtual($/;"	f	file:
whereLoopAddVirtual	src/where.c	/^static int whereLoopAddVirtual($/;"	f	file:
whereLoopAddVirtual	tsrc/where.c	/^static int whereLoopAddVirtual($/;"	f	file:
whereLoopAddVirtualOne	sqlite3.c	/^static int whereLoopAddVirtualOne($/;"	f	file:
whereLoopAddVirtualOne	src/where.c	/^static int whereLoopAddVirtualOne($/;"	f	file:
whereLoopAddVirtualOne	tsrc/where.c	/^static int whereLoopAddVirtualOne($/;"	f	file:
whereLoopAdjustCost	sqlite3.c	/^static void whereLoopAdjustCost(const WhereLoop *p, WhereLoop *pTemplate){$/;"	f	file:
whereLoopAdjustCost	src/where.c	/^static void whereLoopAdjustCost(const WhereLoop *p, WhereLoop *pTemplate){$/;"	f	file:
whereLoopAdjustCost	tsrc/where.c	/^static void whereLoopAdjustCost(const WhereLoop *p, WhereLoop *pTemplate){$/;"	f	file:
whereLoopCheaperProperSubset	sqlite3.c	/^static int whereLoopCheaperProperSubset($/;"	f	file:
whereLoopCheaperProperSubset	src/where.c	/^static int whereLoopCheaperProperSubset($/;"	f	file:
whereLoopCheaperProperSubset	tsrc/where.c	/^static int whereLoopCheaperProperSubset($/;"	f	file:
whereLoopClear	sqlite3.c	/^static void whereLoopClear(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClear	src/where.c	/^static void whereLoopClear(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClear	tsrc/where.c	/^static void whereLoopClear(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClearUnion	sqlite3.c	/^static void whereLoopClearUnion(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClearUnion	src/where.c	/^static void whereLoopClearUnion(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopClearUnion	tsrc/where.c	/^static void whereLoopClearUnion(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopDelete	sqlite3.c	/^static void whereLoopDelete(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopDelete	src/where.c	/^static void whereLoopDelete(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopDelete	tsrc/where.c	/^static void whereLoopDelete(sqlite3 *db, WhereLoop *p){$/;"	f	file:
whereLoopFindLesser	sqlite3.c	/^static WhereLoop **whereLoopFindLesser($/;"	f	file:
whereLoopFindLesser	src/where.c	/^static WhereLoop **whereLoopFindLesser($/;"	f	file:
whereLoopFindLesser	tsrc/where.c	/^static WhereLoop **whereLoopFindLesser($/;"	f	file:
whereLoopInit	sqlite3.c	/^static void whereLoopInit(WhereLoop *p){$/;"	f	file:
whereLoopInit	src/where.c	/^static void whereLoopInit(WhereLoop *p){$/;"	f	file:
whereLoopInit	tsrc/where.c	/^static void whereLoopInit(WhereLoop *p){$/;"	f	file:
whereLoopInsert	sqlite3.c	/^static int whereLoopInsert(WhereLoopBuilder *pBuilder, WhereLoop *pTemplate){$/;"	f	file:
whereLoopInsert	src/where.c	/^static int whereLoopInsert(WhereLoopBuilder *pBuilder, WhereLoop *pTemplate){$/;"	f	file:
whereLoopInsert	tsrc/where.c	/^static int whereLoopInsert(WhereLoopBuilder *pBuilder, WhereLoop *pTemplate){$/;"	f	file:
whereLoopOutputAdjust	sqlite3.c	/^static void whereLoopOutputAdjust($/;"	f	file:
whereLoopOutputAdjust	src/where.c	/^static void whereLoopOutputAdjust($/;"	f	file:
whereLoopOutputAdjust	tsrc/where.c	/^static void whereLoopOutputAdjust($/;"	f	file:
whereLoopPrint	sqlite3.c	/^static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){$/;"	f	file:
whereLoopPrint	src/where.c	/^static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){$/;"	f	file:
whereLoopPrint	tsrc/where.c	/^static void whereLoopPrint(WhereLoop *p, WhereClause *pWC){$/;"	f	file:
whereLoopResize	sqlite3.c	/^static int whereLoopResize(sqlite3 *db, WhereLoop *p, int n){$/;"	f	file:
whereLoopResize	src/where.c	/^static int whereLoopResize(sqlite3 *db, WhereLoop *p, int n){$/;"	f	file:
whereLoopResize	tsrc/where.c	/^static int whereLoopResize(sqlite3 *db, WhereLoop *p, int n){$/;"	f	file:
whereLoopXfer	sqlite3.c	/^static int whereLoopXfer(sqlite3 *db, WhereLoop *pTo, WhereLoop *pFrom){$/;"	f	file:
whereLoopXfer	src/where.c	/^static int whereLoopXfer(sqlite3 *db, WhereLoop *pTo, WhereLoop *pFrom){$/;"	f	file:
whereLoopXfer	tsrc/where.c	/^static int whereLoopXfer(sqlite3 *db, WhereLoop *pTo, WhereLoop *pFrom){$/;"	f	file:
whereNthSubterm	sqlite3.c	/^static WhereTerm *whereNthSubterm(WhereTerm *pTerm, int N){$/;"	f	file:
whereNthSubterm	src/whereexpr.c	/^static WhereTerm *whereNthSubterm(WhereTerm *pTerm, int N){$/;"	f	file:
whereNthSubterm	tsrc/whereexpr.c	/^static WhereTerm *whereNthSubterm(WhereTerm *pTerm, int N){$/;"	f	file:
whereOrInfoDelete	sqlite3.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrInfoDelete	src/whereexpr.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrInfoDelete	tsrc/whereexpr.c	/^static void whereOrInfoDelete(sqlite3 *db, WhereOrInfo *p){$/;"	f	file:
whereOrInsert	sqlite3.c	/^static int whereOrInsert($/;"	f	file:
whereOrInsert	src/where.c	/^static int whereOrInsert($/;"	f	file:
whereOrInsert	tsrc/where.c	/^static int whereOrInsert($/;"	f	file:
whereOrMove	sqlite3.c	/^static void whereOrMove(WhereOrSet *pDest, WhereOrSet *pSrc){$/;"	f	file:
whereOrMove	src/where.c	/^static void whereOrMove(WhereOrSet *pDest, WhereOrSet *pSrc){$/;"	f	file:
whereOrMove	tsrc/where.c	/^static void whereOrMove(WhereOrSet *pDest, WhereOrSet *pSrc){$/;"	f	file:
whereOrName	sqlite3.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
whereOrName	src/alter.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
whereOrName	tsrc/alter.c	/^static char *whereOrName(sqlite3 *db, char *zWhere, char *zConstant){$/;"	f	file:
wherePathName	sqlite3.c	/^static const char *wherePathName(WherePath *pPath, int nLoop, WhereLoop *pLast){$/;"	f	file:
wherePathName	src/where.c	/^static const char *wherePathName(WherePath *pPath, int nLoop, WhereLoop *pLast){$/;"	f	file:
wherePathName	tsrc/where.c	/^static const char *wherePathName(WherePath *pPath, int nLoop, WhereLoop *pLast){$/;"	f	file:
wherePathSatisfiesOrderBy	sqlite3.c	/^static i8 wherePathSatisfiesOrderBy($/;"	f	file:
wherePathSatisfiesOrderBy	src/where.c	/^static i8 wherePathSatisfiesOrderBy($/;"	f	file:
wherePathSatisfiesOrderBy	tsrc/where.c	/^static i8 wherePathSatisfiesOrderBy($/;"	f	file:
wherePathSolver	sqlite3.c	/^static int wherePathSolver(WhereInfo *pWInfo, LogEst nRowEst){$/;"	f	file:
wherePathSolver	src/where.c	/^static int wherePathSolver(WhereInfo *pWInfo, LogEst nRowEst){$/;"	f	file:
wherePathSolver	tsrc/where.c	/^static int wherePathSolver(WhereInfo *pWInfo, LogEst nRowEst){$/;"	f	file:
whereRangeAdjust	sqlite3.c	/^static LogEst whereRangeAdjust(WhereTerm *pTerm, LogEst nNew){$/;"	f	file:
whereRangeAdjust	src/where.c	/^static LogEst whereRangeAdjust(WhereTerm *pTerm, LogEst nNew){$/;"	f	file:
whereRangeAdjust	tsrc/where.c	/^static LogEst whereRangeAdjust(WhereTerm *pTerm, LogEst nNew){$/;"	f	file:
whereRangeScanEst	sqlite3.c	/^static int whereRangeScanEst($/;"	f	file:
whereRangeScanEst	src/where.c	/^static int whereRangeScanEst($/;"	f	file:
whereRangeScanEst	tsrc/where.c	/^static int whereRangeScanEst($/;"	f	file:
whereRangeSkipScanEst	sqlite3.c	/^static int whereRangeSkipScanEst($/;"	f	file:
whereRangeSkipScanEst	src/where.c	/^static int whereRangeSkipScanEst($/;"	f	file:
whereRangeSkipScanEst	tsrc/where.c	/^static int whereRangeSkipScanEst($/;"	f	file:
whereScanInit	sqlite3.c	/^static WhereTerm *whereScanInit($/;"	f	file:
whereScanInit	src/where.c	/^static WhereTerm *whereScanInit($/;"	f	file:
whereScanInit	tsrc/where.c	/^static WhereTerm *whereScanInit($/;"	f	file:
whereScanNext	sqlite3.c	/^static WhereTerm *whereScanNext(WhereScan *pScan){$/;"	f	file:
whereScanNext	src/where.c	/^static WhereTerm *whereScanNext(WhereScan *pScan){$/;"	f	file:
whereScanNext	tsrc/where.c	/^static WhereTerm *whereScanNext(WhereScan *pScan){$/;"	f	file:
whereShortCut	sqlite3.c	/^static int whereShortCut(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereShortCut	src/where.c	/^static int whereShortCut(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereShortCut	tsrc/where.c	/^static int whereShortCut(WhereLoopBuilder *pBuilder){$/;"	f	file:
whereSortingCost	sqlite3.c	/^static LogEst whereSortingCost($/;"	f	file:
whereSortingCost	src/where.c	/^static LogEst whereSortingCost($/;"	f	file:
whereSortingCost	tsrc/where.c	/^static LogEst whereSortingCost($/;"	f	file:
whereTempTriggers	sqlite3.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
whereTempTriggers	src/alter.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
whereTempTriggers	tsrc/alter.c	/^static char *whereTempTriggers(Parse *pParse, Table *pTab){$/;"	f	file:
whereTermPrint	sqlite3.c	/^static void whereTermPrint(WhereTerm *pTerm, int iTerm){$/;"	f	file:
whereTermPrint	src/where.c	/^static void whereTermPrint(WhereTerm *pTerm, int iTerm){$/;"	f	file:
whereTermPrint	tsrc/where.c	/^static void whereTermPrint(WhereTerm *pTerm, int iTerm){$/;"	f	file:
whereUsablePartialIndex	sqlite3.c	/^static int whereUsablePartialIndex(int iTab, WhereClause *pWC, Expr *pWhere){$/;"	f	file:
whereUsablePartialIndex	src/where.c	/^static int whereUsablePartialIndex(int iTab, WhereClause *pWC, Expr *pWhere){$/;"	f	file:
whereUsablePartialIndex	tsrc/where.c	/^static int whereUsablePartialIndex(int iTab, WhereClause *pWC, Expr *pWhere){$/;"	f	file:
wholenumberBestIndex	ext/misc/wholenumber.c	/^static int wholenumberBestIndex($/;"	f	file:
wholenumberClose	ext/misc/wholenumber.c	/^static int wholenumberClose(sqlite3_vtab_cursor *cur){$/;"	f	file:
wholenumberColumn	ext/misc/wholenumber.c	/^static int wholenumberColumn($/;"	f	file:
wholenumberConnect	ext/misc/wholenumber.c	/^static int wholenumberConnect($/;"	f	file:
wholenumberDisconnect	ext/misc/wholenumber.c	/^static int wholenumberDisconnect(sqlite3_vtab *pVtab){$/;"	f	file:
wholenumberEof	ext/misc/wholenumber.c	/^static int wholenumberEof(sqlite3_vtab_cursor *cur){$/;"	f	file:
wholenumberFilter	ext/misc/wholenumber.c	/^static int wholenumberFilter($/;"	f	file:
wholenumberModule	ext/misc/wholenumber.c	/^static sqlite3_module wholenumberModule = {$/;"	v	file:
wholenumberNext	ext/misc/wholenumber.c	/^static int wholenumberNext(sqlite3_vtab_cursor *cur){$/;"	f	file:
wholenumberOpen	ext/misc/wholenumber.c	/^static int wholenumberOpen(sqlite3_vtab *p, sqlite3_vtab_cursor **ppCursor){$/;"	f	file:
wholenumberRowid	ext/misc/wholenumber.c	/^static int wholenumberRowid(sqlite3_vtab_cursor *cur, sqlite_int64 *pRowid){$/;"	f	file:
wholenumber_cursor	ext/misc/wholenumber.c	/^struct wholenumber_cursor {$/;"	s	file:
wholenumber_cursor	ext/misc/wholenumber.c	/^typedef struct wholenumber_cursor wholenumber_cursor;$/;"	t	typeref:struct:wholenumber_cursor	file:
width	src/test_rtree.c	/^  double width;$/;"	m	struct:Cube	file:
wildcard	tool/lemon.c	/^  struct symbol *wildcard; \/* Token that matches anything *\/$/;"	m	struct:lemon	typeref:struct:lemon::symbol	file:
win32FileLocker	src/test1.c	/^struct win32FileLocker {$/;"	s	file:
win32_delete_file	src/test1.c	/^static int SQLITE_TCLAPI win32_delete_file($/;"	f	file:
win32_exists_path	src/test1.c	/^static int SQLITE_TCLAPI win32_exists_path($/;"	f	file:
win32_file_lock	src/test1.c	/^static int SQLITE_TCLAPI win32_file_lock($/;"	f	file:
win32_file_locker	src/test1.c	/^static void SQLITE_CDECL win32_file_locker(void *pAppData){$/;"	f	file:
win32_find_file	src/test1.c	/^static int SQLITE_TCLAPI win32_find_file($/;"	f	file:
win32_mkdir	src/test1.c	/^static int SQLITE_TCLAPI win32_mkdir($/;"	f	file:
win32_rmdir	src/test1.c	/^static int SQLITE_TCLAPI win32_rmdir($/;"	f	file:
winAccess	sqlite3.c	/^static int winAccess($/;"	f	file:
winAccess	src/os_win.c	/^static int winAccess($/;"	f	file:
winAccess	tsrc/os_win.c	/^static int winAccess($/;"	f	file:
winAppData	sqlite3.c	/^static winVfsAppData winAppData = {$/;"	v	file:
winAppData	src/os_win.c	/^static winVfsAppData winAppData = {$/;"	v	file:
winAppData	tsrc/os_win.c	/^static winVfsAppData winAppData = {$/;"	v	file:
winCheckReservedLock	sqlite3.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winCheckReservedLock	src/os_win.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winCheckReservedLock	tsrc/os_win.c	/^static int winCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winClose	sqlite3.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winClose	src/os_win.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winClose	tsrc/os_win.c	/^static int winClose(sqlite3_file *id){$/;"	f	file:
winConvertFromUtf8Filename	sqlite3.c	/^static void *winConvertFromUtf8Filename(const char *zFilename){$/;"	f	file:
winConvertFromUtf8Filename	src/os_win.c	/^static void *winConvertFromUtf8Filename(const char *zFilename){$/;"	f	file:
winConvertFromUtf8Filename	tsrc/os_win.c	/^static void *winConvertFromUtf8Filename(const char *zFilename){$/;"	f	file:
winConvertToUtf8Filename	sqlite3.c	/^static char *winConvertToUtf8Filename(const void *zFilename){$/;"	f	file:
winConvertToUtf8Filename	src/os_win.c	/^static char *winConvertToUtf8Filename(const void *zFilename){$/;"	f	file:
winConvertToUtf8Filename	tsrc/os_win.c	/^static char *winConvertToUtf8Filename(const void *zFilename){$/;"	f	file:
winCurrentTime	sqlite3.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTime	src/os_win.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTime	tsrc/os_win.c	/^static int winCurrentTime(sqlite3_vfs *pVfs, double *prNow){$/;"	f	file:
winCurrentTimeInt64	sqlite3.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winCurrentTimeInt64	src/os_win.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winCurrentTimeInt64	tsrc/os_win.c	/^static int winCurrentTimeInt64(sqlite3_vfs *pVfs, sqlite3_int64 *piNow){$/;"	f	file:
winDelete	sqlite3.c	/^static int winDelete($/;"	f	file:
winDelete	src/os_win.c	/^static int winDelete($/;"	f	file:
winDelete	tsrc/os_win.c	/^static int winDelete($/;"	f	file:
winDeviceCharacteristics	sqlite3.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDeviceCharacteristics	src/os_win.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDeviceCharacteristics	tsrc/os_win.c	/^static int winDeviceCharacteristics(sqlite3_file *id){$/;"	f	file:
winDlClose	sqlite3.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	sqlite3.c	42726;"	d	file:
winDlClose	src/os_win.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	src/os_win.c	5610;"	d	file:
winDlClose	tsrc/os_win.c	/^static void winDlClose(sqlite3_vfs *pVfs, void *pHandle){$/;"	f	file:
winDlClose	tsrc/os_win.c	5610;"	d	file:
winDlError	sqlite3.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	sqlite3.c	42724;"	d	file:
winDlError	src/os_win.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	src/os_win.c	5608;"	d	file:
winDlError	tsrc/os_win.c	/^static void winDlError(sqlite3_vfs *pVfs, int nBuf, char *zBufOut){$/;"	f	file:
winDlError	tsrc/os_win.c	5608;"	d	file:
winDlOpen	sqlite3.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	sqlite3.c	42723;"	d	file:
winDlOpen	src/os_win.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	src/os_win.c	5607;"	d	file:
winDlOpen	tsrc/os_win.c	/^static void *winDlOpen(sqlite3_vfs *pVfs, const char *zFilename){$/;"	f	file:
winDlOpen	tsrc/os_win.c	5607;"	d	file:
winDlSym	sqlite3.c	/^static void (*winDlSym(sqlite3_vfs *pVfs,void *pH,const char *zSym))(void){$/;"	f	file:
winDlSym	sqlite3.c	42725;"	d	file:
winDlSym	src/os_win.c	/^static void (*winDlSym(sqlite3_vfs *pVfs,void *pH,const char *zSym))(void){$/;"	f	file:
winDlSym	src/os_win.c	5609;"	d	file:
winDlSym	tsrc/os_win.c	/^static void (*winDlSym(sqlite3_vfs *pVfs,void *pH,const char *zSym))(void){$/;"	f	file:
winDlSym	tsrc/os_win.c	5609;"	d	file:
winFetch	sqlite3.c	/^static int winFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
winFetch	src/os_win.c	/^static int winFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
winFetch	tsrc/os_win.c	/^static int winFetch(sqlite3_file *fd, i64 iOff, int nAmt, void **pp){$/;"	f	file:
winFile	sqlite3.c	/^struct winFile {$/;"	s	file:
winFile	sqlite3.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFile	src/os_win.c	/^struct winFile {$/;"	s	file:
winFile	src/os_win.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFile	tsrc/os_win.c	/^struct winFile {$/;"	s	file:
winFile	tsrc/os_win.c	/^typedef struct winFile winFile;$/;"	t	typeref:struct:winFile	file:
winFileControl	sqlite3.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileControl	src/os_win.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileControl	tsrc/os_win.c	/^static int winFileControl(sqlite3_file *id, int op, void *pArg){$/;"	f	file:
winFileSize	sqlite3.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFileSize	src/os_win.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFileSize	tsrc/os_win.c	/^static int winFileSize(sqlite3_file *id, sqlite3_int64 *pSize){$/;"	f	file:
winFullPathname	sqlite3.c	/^static int winFullPathname($/;"	f	file:
winFullPathname	src/os_win.c	/^static int winFullPathname($/;"	f	file:
winFullPathname	tsrc/os_win.c	/^static int winFullPathname($/;"	f	file:
winGetDirSep	sqlite3.c	37299;"	d	file:
winGetDirSep	src/os_win.c	183;"	d	file:
winGetDirSep	tsrc/os_win.c	183;"	d	file:
winGetLastError	sqlite3.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winGetLastError	src/os_win.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winGetLastError	tsrc/os_win.c	/^static int winGetLastError(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winGetLastErrorMsg	sqlite3.c	/^static int winGetLastErrorMsg(DWORD lastErrno, int nBuf, char *zBuf){$/;"	f	file:
winGetLastErrorMsg	src/os_win.c	/^static int winGetLastErrorMsg(DWORD lastErrno, int nBuf, char *zBuf){$/;"	f	file:
winGetLastErrorMsg	tsrc/os_win.c	/^static int winGetLastErrorMsg(DWORD lastErrno, int nBuf, char *zBuf){$/;"	f	file:
winGetReadLock	sqlite3.c	/^static int winGetReadLock(winFile *pFile){$/;"	f	file:
winGetReadLock	src/os_win.c	/^static int winGetReadLock(winFile *pFile){$/;"	f	file:
winGetReadLock	tsrc/os_win.c	/^static int winGetReadLock(winFile *pFile){$/;"	f	file:
winGetSystemCall	sqlite3.c	/^static sqlite3_syscall_ptr winGetSystemCall($/;"	f	file:
winGetSystemCall	src/os_win.c	/^static sqlite3_syscall_ptr winGetSystemCall($/;"	f	file:
winGetSystemCall	tsrc/os_win.c	/^static sqlite3_syscall_ptr winGetSystemCall($/;"	f	file:
winGetTempname	sqlite3.c	/^static int winGetTempname(sqlite3_vfs *pVfs, char **pzBuf){$/;"	f	file:
winGetTempname	src/os_win.c	/^static int winGetTempname(sqlite3_vfs *pVfs, char **pzBuf){$/;"	f	file:
winGetTempname	tsrc/os_win.c	/^static int winGetTempname(sqlite3_vfs *pVfs, char **pzBuf){$/;"	f	file:
winIoMethod	sqlite3.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winIoMethod	src/os_win.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winIoMethod	tsrc/os_win.c	/^static const sqlite3_io_methods winIoMethod = {$/;"	v	file:
winIoNolockMethod	sqlite3.c	/^static const sqlite3_io_methods winIoNolockMethod = {$/;"	v	file:
winIoNolockMethod	src/os_win.c	/^static const sqlite3_io_methods winIoNolockMethod = {$/;"	v	file:
winIoNolockMethod	tsrc/os_win.c	/^static const sqlite3_io_methods winIoNolockMethod = {$/;"	v	file:
winIoerrCanRetry1	sqlite3.c	39196;"	d	file:
winIoerrCanRetry1	src/os_win.c	2080;"	d	file:
winIoerrCanRetry1	tsrc/os_win.c	2080;"	d	file:
winIoerrRetry	sqlite3.c	/^static int winIoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
winIoerrRetry	src/os_win.c	/^static int winIoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
winIoerrRetry	tsrc/os_win.c	/^static int winIoerrRetry = SQLITE_WIN32_IOERR_RETRY;$/;"	v	file:
winIoerrRetryDelay	sqlite3.c	/^static int winIoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winIoerrRetryDelay	src/os_win.c	/^static int winIoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winIoerrRetryDelay	tsrc/os_win.c	/^static int winIoerrRetryDelay = SQLITE_WIN32_IOERR_RETRY_DELAY;$/;"	v	file:
winIsDir	sqlite3.c	/^static int winIsDir(const void *zConverted){$/;"	f	file:
winIsDir	src/os_win.c	/^static int winIsDir(const void *zConverted){$/;"	f	file:
winIsDir	tsrc/os_win.c	/^static int winIsDir(const void *zConverted){$/;"	f	file:
winIsDirSep	sqlite3.c	37284;"	d	file:
winIsDirSep	src/os_win.c	168;"	d	file:
winIsDirSep	tsrc/os_win.c	168;"	d	file:
winIsDriveLetterAndColon	sqlite3.c	/^static BOOL winIsDriveLetterAndColon($/;"	f	file:
winIsDriveLetterAndColon	src/os_win.c	/^static BOOL winIsDriveLetterAndColon($/;"	f	file:
winIsDriveLetterAndColon	tsrc/os_win.c	/^static BOOL winIsDriveLetterAndColon($/;"	f	file:
winIsVerbatimPathname	sqlite3.c	/^static BOOL winIsVerbatimPathname($/;"	f	file:
winIsVerbatimPathname	src/os_win.c	/^static BOOL winIsVerbatimPathname($/;"	f	file:
winIsVerbatimPathname	tsrc/os_win.c	/^static BOOL winIsVerbatimPathname($/;"	f	file:
winLock	sqlite3.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLock	src/os_win.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLock	tsrc/os_win.c	/^static int winLock(sqlite3_file *id, int locktype){$/;"	f	file:
winLockFile	sqlite3.c	/^static BOOL winLockFile($/;"	f	file:
winLockFile	src/os_win.c	/^static BOOL winLockFile($/;"	f	file:
winLockFile	tsrc/os_win.c	/^static BOOL winLockFile($/;"	f	file:
winLogError	sqlite3.c	39139;"	d	file:
winLogError	src/os_win.c	2023;"	d	file:
winLogError	tsrc/os_win.c	2023;"	d	file:
winLogErrorAtLine	sqlite3.c	/^static int winLogErrorAtLine($/;"	f	file:
winLogErrorAtLine	src/os_win.c	/^static int winLogErrorAtLine($/;"	f	file:
winLogErrorAtLine	tsrc/os_win.c	/^static int winLogErrorAtLine($/;"	f	file:
winLogIoerr	sqlite3.c	/^static void winLogIoerr(int nRetry, int lineno){$/;"	f	file:
winLogIoerr	src/os_win.c	/^static void winLogIoerr(int nRetry, int lineno){$/;"	f	file:
winLogIoerr	tsrc/os_win.c	/^static void winLogIoerr(int nRetry, int lineno){$/;"	f	file:
winMakeEndInDirSep	sqlite3.c	/^static int winMakeEndInDirSep(int nBuf, char *zBuf){$/;"	f	file:
winMakeEndInDirSep	src/os_win.c	/^static int winMakeEndInDirSep(int nBuf, char *zBuf){$/;"	f	file:
winMakeEndInDirSep	tsrc/os_win.c	/^static int winMakeEndInDirSep(int nBuf, char *zBuf){$/;"	f	file:
winMapfile	sqlite3.c	/^static int winMapfile(winFile *pFd, sqlite3_int64 nByte){$/;"	f	file:
winMapfile	src/os_win.c	/^static int winMapfile(winFile *pFd, sqlite3_int64 nByte){$/;"	f	file:
winMapfile	tsrc/os_win.c	/^static int winMapfile(winFile *pFd, sqlite3_int64 nByte){$/;"	f	file:
winMbcsToUnicode	sqlite3.c	/^static LPWSTR winMbcsToUnicode(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUnicode	src/os_win.c	/^static LPWSTR winMbcsToUnicode(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUnicode	tsrc/os_win.c	/^static LPWSTR winMbcsToUnicode(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUtf8	sqlite3.c	/^static char *winMbcsToUtf8(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUtf8	src/os_win.c	/^static char *winMbcsToUtf8(const char *zText, int useAnsi){$/;"	f	file:
winMbcsToUtf8	tsrc/os_win.c	/^static char *winMbcsToUtf8(const char *zText, int useAnsi){$/;"	f	file:
winMemAssertMagic	sqlite3.c	37544;"	d	file:
winMemAssertMagic	sqlite3.c	37546;"	d	file:
winMemAssertMagic	src/os_win.c	428;"	d	file:
winMemAssertMagic	src/os_win.c	430;"	d	file:
winMemAssertMagic	tsrc/os_win.c	428;"	d	file:
winMemAssertMagic	tsrc/os_win.c	430;"	d	file:
winMemAssertMagic1	sqlite3.c	37542;"	d	file:
winMemAssertMagic1	src/os_win.c	426;"	d	file:
winMemAssertMagic1	tsrc/os_win.c	426;"	d	file:
winMemAssertMagic2	sqlite3.c	37543;"	d	file:
winMemAssertMagic2	src/os_win.c	427;"	d	file:
winMemAssertMagic2	tsrc/os_win.c	427;"	d	file:
winMemData	sqlite3.c	/^struct winMemData {$/;"	s	file:
winMemData	sqlite3.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemData	src/os_win.c	/^struct winMemData {$/;"	s	file:
winMemData	src/os_win.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemData	tsrc/os_win.c	/^struct winMemData {$/;"	s	file:
winMemData	tsrc/os_win.c	/^typedef struct winMemData winMemData;$/;"	t	typeref:struct:winMemData	file:
winMemFree	sqlite3.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemFree	src/os_win.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemFree	tsrc/os_win.c	/^static void winMemFree(void *pPrior){$/;"	f	file:
winMemGetDataPtr	sqlite3.c	37549;"	d	file:
winMemGetDataPtr	src/os_win.c	433;"	d	file:
winMemGetDataPtr	tsrc/os_win.c	433;"	d	file:
winMemGetHeap	sqlite3.c	37550;"	d	file:
winMemGetHeap	src/os_win.c	434;"	d	file:
winMemGetHeap	tsrc/os_win.c	434;"	d	file:
winMemGetOwned	sqlite3.c	37551;"	d	file:
winMemGetOwned	src/os_win.c	435;"	d	file:
winMemGetOwned	tsrc/os_win.c	435;"	d	file:
winMemInit	sqlite3.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemInit	src/os_win.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemInit	tsrc/os_win.c	/^static int winMemInit(void *pAppData){$/;"	f	file:
winMemMalloc	sqlite3.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemMalloc	src/os_win.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemMalloc	tsrc/os_win.c	/^static void *winMemMalloc(int nBytes){$/;"	f	file:
winMemRealloc	sqlite3.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRealloc	src/os_win.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRealloc	tsrc/os_win.c	/^static void *winMemRealloc(void *pPrior, int nBytes){$/;"	f	file:
winMemRoundup	sqlite3.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemRoundup	src/os_win.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemRoundup	tsrc/os_win.c	/^static int winMemRoundup(int n){$/;"	f	file:
winMemShutdown	sqlite3.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemShutdown	src/os_win.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemShutdown	tsrc/os_win.c	/^static void winMemShutdown(void *pAppData){$/;"	f	file:
winMemSize	sqlite3.c	/^static int winMemSize(void *p){$/;"	f	file:
winMemSize	src/os_win.c	/^static int winMemSize(void *p){$/;"	f	file:
winMemSize	tsrc/os_win.c	/^static int winMemSize(void *p){$/;"	f	file:
winModeBit	sqlite3.c	/^static void winModeBit(winFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
winModeBit	src/os_win.c	/^static void winModeBit(winFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
winModeBit	tsrc/os_win.c	/^static void winModeBit(winFile *pFile, unsigned char mask, int *pArg){$/;"	f	file:
winMutexAlloc	sqlite3.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexAlloc	src/mutex_w32.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexAlloc	tsrc/mutex_w32.c	/^static sqlite3_mutex *winMutexAlloc(int iType){$/;"	f	file:
winMutexEnd	sqlite3.c	/^static int winMutexEnd(void){$/;"	f	file:
winMutexEnd	src/mutex_w32.c	/^static int winMutexEnd(void){$/;"	f	file:
winMutexEnd	tsrc/mutex_w32.c	/^static int winMutexEnd(void){$/;"	f	file:
winMutexEnter	sqlite3.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexEnter	src/mutex_w32.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexEnter	tsrc/mutex_w32.c	/^static void winMutexEnter(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	sqlite3.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	src/mutex_w32.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexFree	tsrc/mutex_w32.c	/^static void winMutexFree(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	sqlite3.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	src/mutex_w32.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexHeld	tsrc/mutex_w32.c	/^static int winMutexHeld(sqlite3_mutex *p){$/;"	f	file:
winMutexInit	sqlite3.c	/^static int winMutexInit(void){$/;"	f	file:
winMutexInit	src/mutex_w32.c	/^static int winMutexInit(void){$/;"	f	file:
winMutexInit	tsrc/mutex_w32.c	/^static int winMutexInit(void){$/;"	f	file:
winMutexLeave	sqlite3.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexLeave	src/mutex_w32.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexLeave	tsrc/mutex_w32.c	/^static void winMutexLeave(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	sqlite3.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	src/mutex_w32.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld	tsrc/mutex_w32.c	/^static int winMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
winMutexNotheld2	sqlite3.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexNotheld2	src/mutex_w32.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexNotheld2	tsrc/mutex_w32.c	/^static int winMutexNotheld2(sqlite3_mutex *p, DWORD tid){$/;"	f	file:
winMutexTry	sqlite3.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutexTry	src/mutex_w32.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutexTry	tsrc/mutex_w32.c	/^static int winMutexTry(sqlite3_mutex *p){$/;"	f	file:
winMutex_isInit	sqlite3.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_isInit	src/mutex_w32.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_isInit	tsrc/mutex_w32.c	/^static int winMutex_isInit = 0;$/;"	v	file:
winMutex_isNt	sqlite3.c	/^static int winMutex_isNt = -1; \/* <0 means "need to query" *\/$/;"	v	file:
winMutex_isNt	src/mutex_w32.c	/^static int winMutex_isNt = -1; \/* <0 means "need to query" *\/$/;"	v	file:
winMutex_isNt	tsrc/mutex_w32.c	/^static int winMutex_isNt = -1; \/* <0 means "need to query" *\/$/;"	v	file:
winMutex_lock	sqlite3.c	/^static LONG SQLITE_WIN32_VOLATILE winMutex_lock = 0;$/;"	v	file:
winMutex_lock	src/mutex_w32.c	/^static LONG SQLITE_WIN32_VOLATILE winMutex_lock = 0;$/;"	v	file:
winMutex_lock	tsrc/mutex_w32.c	/^static LONG SQLITE_WIN32_VOLATILE winMutex_lock = 0;$/;"	v	file:
winMutex_staticMutexes	sqlite3.c	/^static sqlite3_mutex winMutex_staticMutexes[] = {$/;"	v	file:
winMutex_staticMutexes	src/mutex_w32.c	/^static sqlite3_mutex winMutex_staticMutexes[] = {$/;"	v	file:
winMutex_staticMutexes	tsrc/mutex_w32.c	/^static sqlite3_mutex winMutex_staticMutexes[] = {$/;"	v	file:
winNextSystemCall	sqlite3.c	/^static const char *winNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
winNextSystemCall	src/os_win.c	/^static const char *winNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
winNextSystemCall	tsrc/os_win.c	/^static const char *winNextSystemCall(sqlite3_vfs *p, const char *zName){$/;"	f	file:
winNolockAppData	sqlite3.c	/^static winVfsAppData winNolockAppData = {$/;"	v	file:
winNolockAppData	src/os_win.c	/^static winVfsAppData winNolockAppData = {$/;"	v	file:
winNolockAppData	tsrc/os_win.c	/^static winVfsAppData winNolockAppData = {$/;"	v	file:
winNolockCheckReservedLock	sqlite3.c	/^static int winNolockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winNolockCheckReservedLock	src/os_win.c	/^static int winNolockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winNolockCheckReservedLock	tsrc/os_win.c	/^static int winNolockCheckReservedLock(sqlite3_file *id, int *pResOut){$/;"	f	file:
winNolockLock	sqlite3.c	/^static int winNolockLock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockLock	src/os_win.c	/^static int winNolockLock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockLock	tsrc/os_win.c	/^static int winNolockLock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockUnlock	sqlite3.c	/^static int winNolockUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockUnlock	src/os_win.c	/^static int winNolockUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winNolockUnlock	tsrc/os_win.c	/^static int winNolockUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winOpen	sqlite3.c	/^static int winOpen($/;"	f	file:
winOpen	src/os_win.c	/^static int winOpen($/;"	f	file:
winOpen	tsrc/os_win.c	/^static int winOpen($/;"	f	file:
winOpenSharedMemory	sqlite3.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winOpenSharedMemory	src/os_win.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winOpenSharedMemory	tsrc/os_win.c	/^static int winOpenSharedMemory(winFile *pDbFd){$/;"	f	file:
winRandomness	sqlite3.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRandomness	src/os_win.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRandomness	tsrc/os_win.c	/^static int winRandomness(sqlite3_vfs *pVfs, int nBuf, char *zBuf){$/;"	f	file:
winRead	sqlite3.c	/^static int winRead($/;"	f	file:
winRead	src/os_win.c	/^static int winRead($/;"	f	file:
winRead	tsrc/os_win.c	/^static int winRead($/;"	f	file:
winRetryIoerr	sqlite3.c	/^static int winRetryIoerr(int *pnRetry, DWORD *pError){$/;"	f	file:
winRetryIoerr	src/os_win.c	/^static int winRetryIoerr(int *pnRetry, DWORD *pError){$/;"	f	file:
winRetryIoerr	tsrc/os_win.c	/^static int winRetryIoerr(int *pnRetry, DWORD *pError){$/;"	f	file:
winSectorSize	sqlite3.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winSectorSize	src/os_win.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winSectorSize	tsrc/os_win.c	/^static int winSectorSize(sqlite3_file *id){$/;"	f	file:
winSeekFile	sqlite3.c	/^static int winSeekFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
winSeekFile	src/os_win.c	/^static int winSeekFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
winSeekFile	tsrc/os_win.c	/^static int winSeekFile(winFile *pFile, sqlite3_int64 iOffset){$/;"	f	file:
winSetSystemCall	sqlite3.c	/^static int winSetSystemCall($/;"	f	file:
winSetSystemCall	src/os_win.c	/^static int winSetSystemCall($/;"	f	file:
winSetSystemCall	tsrc/os_win.c	/^static int winSetSystemCall($/;"	f	file:
winShm	sqlite3.c	/^struct winShm {$/;"	s	file:
winShm	sqlite3.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShm	src/os_win.c	/^struct winShm {$/;"	s	file:
winShm	src/os_win.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShm	tsrc/os_win.c	/^struct winShm {$/;"	s	file:
winShm	tsrc/os_win.c	/^typedef struct winShm winShm;           \/* A connection to shared-memory *\/$/;"	t	typeref:struct:winShm	file:
winShmBarrier	sqlite3.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	sqlite3.c	41317;"	d	file:
winShmBarrier	src/os_win.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	src/os_win.c	4201;"	d	file:
winShmBarrier	tsrc/os_win.c	/^static void winShmBarrier($/;"	f	file:
winShmBarrier	tsrc/os_win.c	4201;"	d	file:
winShmEnterMutex	sqlite3.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmEnterMutex	src/os_win.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmEnterMutex	tsrc/os_win.c	/^static void winShmEnterMutex(void){$/;"	f	file:
winShmLeaveMutex	sqlite3.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLeaveMutex	src/os_win.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLeaveMutex	tsrc/os_win.c	/^static void winShmLeaveMutex(void){$/;"	f	file:
winShmLock	sqlite3.c	/^static int winShmLock($/;"	f	file:
winShmLock	sqlite3.c	41316;"	d	file:
winShmLock	src/os_win.c	/^static int winShmLock($/;"	f	file:
winShmLock	src/os_win.c	4200;"	d	file:
winShmLock	tsrc/os_win.c	/^static int winShmLock($/;"	f	file:
winShmLock	tsrc/os_win.c	4200;"	d	file:
winShmMap	sqlite3.c	/^static int winShmMap($/;"	f	file:
winShmMap	sqlite3.c	41315;"	d	file:
winShmMap	src/os_win.c	/^static int winShmMap($/;"	f	file:
winShmMap	src/os_win.c	4199;"	d	file:
winShmMap	tsrc/os_win.c	/^static int winShmMap($/;"	f	file:
winShmMap	tsrc/os_win.c	4199;"	d	file:
winShmMutexHeld	sqlite3.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmMutexHeld	src/os_win.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmMutexHeld	tsrc/os_win.c	/^static int winShmMutexHeld(void) {$/;"	f	file:
winShmNode	sqlite3.c	/^struct winShmNode {$/;"	s	file:
winShmNode	sqlite3.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNode	src/os_win.c	/^struct winShmNode {$/;"	s	file:
winShmNode	src/os_win.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNode	tsrc/os_win.c	/^struct winShmNode {$/;"	s	file:
winShmNode	tsrc/os_win.c	/^typedef struct winShmNode winShmNode;   \/* A region of shared-memory *\/$/;"	t	typeref:struct:winShmNode	file:
winShmNodeList	sqlite3.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmNodeList	src/os_win.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmNodeList	tsrc/os_win.c	/^static winShmNode *winShmNodeList = 0;$/;"	v	file:
winShmPurge	sqlite3.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmPurge	src/os_win.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmPurge	tsrc/os_win.c	/^static void winShmPurge(sqlite3_vfs *pVfs, int deleteFlag){$/;"	f	file:
winShmSystemLock	sqlite3.c	/^static int winShmSystemLock($/;"	f	file:
winShmSystemLock	src/os_win.c	/^static int winShmSystemLock($/;"	f	file:
winShmSystemLock	tsrc/os_win.c	/^static int winShmSystemLock($/;"	f	file:
winShmUnmap	sqlite3.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	sqlite3.c	41318;"	d	file:
winShmUnmap	src/os_win.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	src/os_win.c	4202;"	d	file:
winShmUnmap	tsrc/os_win.c	/^static int winShmUnmap($/;"	f	file:
winShmUnmap	tsrc/os_win.c	4202;"	d	file:
winSleep	sqlite3.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSleep	src/os_win.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSleep	tsrc/os_win.c	/^static int winSleep(sqlite3_vfs *pVfs, int microsec){$/;"	f	file:
winSync	sqlite3.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSync	src/os_win.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSync	tsrc/os_win.c	/^static int winSync(sqlite3_file *id, int flags){$/;"	f	file:
winSysInfo	sqlite3.c	/^static SYSTEM_INFO winSysInfo;$/;"	v	file:
winSysInfo	src/os_win.c	/^static SYSTEM_INFO winSysInfo;$/;"	v	file:
winSysInfo	tsrc/os_win.c	/^static SYSTEM_INFO winSysInfo;$/;"	v	file:
winTruncate	sqlite3.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winTruncate	src/os_win.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winTruncate	tsrc/os_win.c	/^static int winTruncate(sqlite3_file *id, sqlite3_int64 nByte){$/;"	f	file:
winUnfetch	sqlite3.c	/^static int winUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
winUnfetch	src/os_win.c	/^static int winUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
winUnfetch	tsrc/os_win.c	/^static int winUnfetch(sqlite3_file *fd, i64 iOff, void *p){$/;"	f	file:
winUnicodeToMbcs	sqlite3.c	/^static char *winUnicodeToMbcs(LPCWSTR zWideText, int useAnsi){$/;"	f	file:
winUnicodeToMbcs	src/os_win.c	/^static char *winUnicodeToMbcs(LPCWSTR zWideText, int useAnsi){$/;"	f	file:
winUnicodeToMbcs	tsrc/os_win.c	/^static char *winUnicodeToMbcs(LPCWSTR zWideText, int useAnsi){$/;"	f	file:
winUnicodeToUtf8	sqlite3.c	/^static char *winUnicodeToUtf8(LPCWSTR zWideText){$/;"	f	file:
winUnicodeToUtf8	src/os_win.c	/^static char *winUnicodeToUtf8(LPCWSTR zWideText){$/;"	f	file:
winUnicodeToUtf8	tsrc/os_win.c	/^static char *winUnicodeToUtf8(LPCWSTR zWideText){$/;"	f	file:
winUnlock	sqlite3.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winUnlock	src/os_win.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winUnlock	tsrc/os_win.c	/^static int winUnlock(sqlite3_file *id, int locktype){$/;"	f	file:
winUnlockFile	sqlite3.c	/^static BOOL winUnlockFile($/;"	f	file:
winUnlockFile	src/os_win.c	/^static BOOL winUnlockFile($/;"	f	file:
winUnlockFile	tsrc/os_win.c	/^static BOOL winUnlockFile($/;"	f	file:
winUnlockReadLock	sqlite3.c	/^static int winUnlockReadLock(winFile *pFile){$/;"	f	file:
winUnlockReadLock	src/os_win.c	/^static int winUnlockReadLock(winFile *pFile){$/;"	f	file:
winUnlockReadLock	tsrc/os_win.c	/^static int winUnlockReadLock(winFile *pFile){$/;"	f	file:
winUnmapfile	sqlite3.c	/^static int winUnmapfile(winFile *pFile){$/;"	f	file:
winUnmapfile	src/os_win.c	/^static int winUnmapfile(winFile *pFile){$/;"	f	file:
winUnmapfile	tsrc/os_win.c	/^static int winUnmapfile(winFile *pFile){$/;"	f	file:
winUtf8ToMbcs	sqlite3.c	/^static char *winUtf8ToMbcs(const char *zText, int useAnsi){$/;"	f	file:
winUtf8ToMbcs	src/os_win.c	/^static char *winUtf8ToMbcs(const char *zText, int useAnsi){$/;"	f	file:
winUtf8ToMbcs	tsrc/os_win.c	/^static char *winUtf8ToMbcs(const char *zText, int useAnsi){$/;"	f	file:
winUtf8ToUnicode	sqlite3.c	/^static LPWSTR winUtf8ToUnicode(const char *zText){$/;"	f	file:
winUtf8ToUnicode	src/os_win.c	/^static LPWSTR winUtf8ToUnicode(const char *zText){$/;"	f	file:
winUtf8ToUnicode	tsrc/os_win.c	/^static LPWSTR winUtf8ToUnicode(const char *zText){$/;"	f	file:
winVfsAppData	sqlite3.c	/^struct winVfsAppData {$/;"	s	file:
winVfsAppData	sqlite3.c	/^typedef struct winVfsAppData winVfsAppData;$/;"	t	typeref:struct:winVfsAppData	file:
winVfsAppData	src/os_win.c	/^struct winVfsAppData {$/;"	s	file:
winVfsAppData	src/os_win.c	/^typedef struct winVfsAppData winVfsAppData;$/;"	t	typeref:struct:winVfsAppData	file:
winVfsAppData	tsrc/os_win.c	/^struct winVfsAppData {$/;"	s	file:
winVfsAppData	tsrc/os_win.c	/^typedef struct winVfsAppData winVfsAppData;$/;"	t	typeref:struct:winVfsAppData	file:
winWrite	sqlite3.c	/^static int winWrite($/;"	f	file:
winWrite	src/os_win.c	/^static int winWrite($/;"	f	file:
winWrite	tsrc/os_win.c	/^static int winWrite($/;"	f	file:
win_mem_data	sqlite3.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
win_mem_data	src/os_win.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
win_mem_data	tsrc/os_win.c	/^static struct winMemData win_mem_data = {$/;"	v	typeref:struct:winMemData	file:
win_syscall	sqlite3.c	/^static struct win_syscall {$/;"	s	file:
win_syscall	src/os_win.c	/^static struct win_syscall {$/;"	s	file:
win_syscall	tsrc/os_win.c	/^static struct win_syscall {$/;"	s	file:
winceCreateLock	sqlite3.c	/^static int winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceCreateLock	src/os_win.c	/^static int winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceCreateLock	tsrc/os_win.c	/^static int winceCreateLock(const char *zFilename, winFile *pFile){$/;"	f	file:
winceDestroyLock	sqlite3.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceDestroyLock	src/os_win.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceDestroyLock	tsrc/os_win.c	/^static void winceDestroyLock(winFile *pFile){$/;"	f	file:
winceLock	sqlite3.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	sqlite3.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLock	src/os_win.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	src/os_win.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLock	tsrc/os_win.c	/^typedef struct winceLock {$/;"	s	file:
winceLock	tsrc/os_win.c	/^} winceLock;$/;"	t	typeref:struct:winceLock	file:
winceLockFile	sqlite3.c	/^static BOOL winceLockFile($/;"	f	file:
winceLockFile	src/os_win.c	/^static BOOL winceLockFile($/;"	f	file:
winceLockFile	tsrc/os_win.c	/^static BOOL winceLockFile($/;"	f	file:
winceMutexAcquire	sqlite3.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexAcquire	src/os_win.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexAcquire	tsrc/os_win.c	/^static void winceMutexAcquire(HANDLE h){$/;"	f	file:
winceMutexRelease	sqlite3.c	39300;"	d	file:
winceMutexRelease	src/os_win.c	2184;"	d	file:
winceMutexRelease	tsrc/os_win.c	2184;"	d	file:
winceUnlockFile	sqlite3.c	/^static BOOL winceUnlockFile($/;"	f	file:
winceUnlockFile	src/os_win.c	/^static BOOL winceUnlockFile($/;"	f	file:
winceUnlockFile	tsrc/os_win.c	/^static BOOL winceUnlockFile($/;"	f	file:
withDup	sqlite3.c	/^static With *withDup(sqlite3 *db, With *p){$/;"	f	file:
withDup	sqlite3.c	90446;"	d	file:
withDup	src/expr.c	/^static With *withDup(sqlite3 *db, With *p){$/;"	f	file:
withDup	src/expr.c	986;"	d	file:
withDup	tsrc/expr.c	/^static With *withDup(sqlite3 *db, With *p){$/;"	f	file:
withDup	tsrc/expr.c	986;"	d	file:
withExpand	sqlite3.c	/^static int withExpand($/;"	f	file:
withExpand	src/select.c	/^static int withExpand($/;"	f	file:
withExpand	tsrc/select.c	/^static int withExpand($/;"	f	file:
wkrFlags	test/threadtest4.c	/^  unsigned wkrFlags;          \/* Flags *\/$/;"	m	struct:WorkerInfo	file:
wordBoundary	ext/fts1/fts1.c	/^static int wordBoundary($/;"	f	file:
wordBoundary	ext/fts2/fts2.c	/^static int wordBoundary($/;"	f	file:
wordBoundary	tsrc/fts1.c	/^static int wordBoundary($/;"	f	file:
wordBoundary	tsrc/fts2.c	/^static int wordBoundary($/;"	f	file:
worker	test/threadtest2.c	/^void *worker(void *workerArg){$/;"	f
worker_add_content	test/threadtest4.c	/^static void worker_add_content(WorkerInfo *p, int mn, int mx, int iTab){$/;"	f	file:
worker_bee	test/threadtest1.c	/^static void *worker_bee(void *pArg){$/;"	f	file:
worker_close_connection	test/threadtest4.c	/^static void worker_close_connection(WorkerInfo *p){$/;"	f	file:
worker_delete_all_content	test/threadtest4.c	/^static void worker_delete_all_content(WorkerInfo *p, int inTrans){$/;"	f	file:
worker_error	test/threadtest4.c	/^static void worker_error(WorkerInfo *p, const char *zFormat, ...){$/;"	f	file:
worker_open_connection	test/threadtest4.c	/^static void worker_open_connection(WorkerInfo *p, int iCnt){$/;"	f	file:
worker_thread	test/threadtest4.c	/^static void *worker_thread(void *pArg){$/;"	f	file:
worker_trace	test/threadtest4.c	/^static void worker_trace(WorkerInfo *p, const char *zFormat, ...){$/;"	f	file:
working_64bit_int	src/test1.c	/^static int SQLITE_TCLAPI working_64bit_int($/;"	f	file:
wrFlag	sqlite3.c	/^  u8 wrFlag;            \/* The wrFlag argument to sqlite3BtreeCursor() *\/$/;"	m	struct:VdbeCursor	file:
wrFlag	src/vdbeInt.h	/^  u8 wrFlag;            \/* The wrFlag argument to sqlite3BtreeCursor() *\/$/;"	m	struct:VdbeCursor
wrFlag	tsrc/vdbeInt.h	/^  u8 wrFlag;            \/* The wrFlag argument to sqlite3BtreeCursor() *\/$/;"	m	struct:VdbeCursor
wrMemFree	src/test_init.c	/^static void wrMemFree(void *p)            {wrapped.mem.xFree(p);}$/;"	f	file:
wrMemInit	src/test_init.c	/^static int wrMemInit(void *pAppData){$/;"	f	file:
wrMemMalloc	src/test_init.c	/^static void *wrMemMalloc(int n)           {return wrapped.mem.xMalloc(n);}$/;"	f	file:
wrMemRealloc	src/test_init.c	/^static void *wrMemRealloc(void *p, int n) {return wrapped.mem.xRealloc(p, n);}$/;"	f	file:
wrMemRoundup	src/test_init.c	/^static int wrMemRoundup(int n)            {return wrapped.mem.xRoundup(n);}$/;"	f	file:
wrMemShutdown	src/test_init.c	/^static void wrMemShutdown(void *pAppData){$/;"	f	file:
wrMemSize	src/test_init.c	/^static int wrMemSize(void *p)             {return wrapped.mem.xSize(p);}$/;"	f	file:
wrMutexAlloc	src/test_init.c	/^static sqlite3_mutex *wrMutexAlloc(int e){$/;"	f	file:
wrMutexEnd	src/test_init.c	/^static int wrMutexEnd(void){$/;"	f	file:
wrMutexEnter	src/test_init.c	/^static void wrMutexEnter(sqlite3_mutex *p){$/;"	f	file:
wrMutexFree	src/test_init.c	/^static void wrMutexFree(sqlite3_mutex *p){$/;"	f	file:
wrMutexHeld	src/test_init.c	/^static int wrMutexHeld(sqlite3_mutex *p){$/;"	f	file:
wrMutexInit	src/test_init.c	/^static int wrMutexInit(void){$/;"	f	file:
wrMutexLeave	src/test_init.c	/^static void wrMutexLeave(sqlite3_mutex *p){$/;"	f	file:
wrMutexNotheld	src/test_init.c	/^static int wrMutexNotheld(sqlite3_mutex *p){$/;"	f	file:
wrMutexTry	src/test_init.c	/^static int wrMutexTry(sqlite3_mutex *p){$/;"	f	file:
wrPCacheCachesize	src/test_init.c	/^static void wrPCacheCachesize(sqlite3_pcache *p, int n){$/;"	f	file:
wrPCacheCreate	src/test_init.c	/^static sqlite3_pcache *wrPCacheCreate(int a, int b, int c){$/;"	f	file:
wrPCacheDestroy	src/test_init.c	/^static void wrPCacheDestroy(sqlite3_pcache *p){$/;"	f	file:
wrPCacheFetch	src/test_init.c	/^static sqlite3_pcache_page *wrPCacheFetch(sqlite3_pcache *p, unsigned a, int b){$/;"	f	file:
wrPCacheInit	src/test_init.c	/^static int wrPCacheInit(void *pArg){$/;"	f	file:
wrPCachePagecount	src/test_init.c	/^static int wrPCachePagecount(sqlite3_pcache *p){$/;"	f	file:
wrPCacheRekey	src/test_init.c	/^static void wrPCacheRekey($/;"	f	file:
wrPCacheShutdown	src/test_init.c	/^static void wrPCacheShutdown(void *pArg){$/;"	f	file:
wrPCacheTruncate	src/test_init.c	/^static void wrPCacheTruncate(sqlite3_pcache *p, unsigned a){$/;"	f	file:
wrPCacheUnpin	src/test_init.c	/^static void wrPCacheUnpin(sqlite3_pcache *p, sqlite3_pcache_page *a, int b){$/;"	f	file:
wrapped	src/test_init.c	/^} wrapped;$/;"	v	typeref:struct:Wrapped	file:
writableSchema	shell.c	/^  int writableSchema;    \/* True if PRAGMA writable_schema=ON *\/$/;"	m	struct:ShellState	file:
writableSchema	src/shell.c	/^  int writableSchema;    \/* True if PRAGMA writable_schema=ON *\/$/;"	m	struct:ShellState	file:
writableSchema	tsrc/shell.c	/^  int writableSchema;    \/* True if PRAGMA writable_schema=ON *\/$/;"	m	struct:ShellState	file:
write32bits	sqlite3.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
write32bits	src/pager.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
write32bits	tsrc/pager.c	/^static int write32bits(sqlite3_file *fd, i64 offset, u32 val){$/;"	f	file:
writeCoord	ext/rtree/rtree.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeCoord	sqlite3.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeCoord	tsrc/rtree.c	/^static int writeCoord(u8 *p, RtreeCoord *pCoord){$/;"	f	file:
writeDbFile	src/test6.c	/^static int writeDbFile(CrashFile *p, u8 *z, i64 iAmt, i64 iOff){$/;"	f	file:
writeFile	tool/mkmsvcmin.tcl	/^proc writeFile { fileName data } {$/;"	p
writeFile	tool/mkvsix.tcl	/^proc writeFile { fileName data } {$/;"	p
writeFile	vsixtest/vsixtest.tcl	/^proc writeFile { fileName data } {$/;"	p
writeInt16	ext/rtree/rtree.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt16	sqlite3.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt16	tsrc/rtree.c	/^static int writeInt16(u8 *p, int i){$/;"	f	file:
writeInt64	ext/rtree/rtree.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeInt64	sqlite3.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeInt64	tsrc/rtree.c	/^static int writeInt64(u8 *p, i64 i){$/;"	f	file:
writeJournalHdr	sqlite3.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeJournalHdr	src/pager.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeJournalHdr	tsrc/pager.c	/^static int writeJournalHdr(Pager *pPager){$/;"	f	file:
writeListAppend	src/test6.c	/^static int writeListAppend($/;"	f	file:
writeListSync	src/test6.c	/^static int writeListSync(CrashFile *pFile, int isCrash){$/;"	f	file:
writeLock	sqlite3.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeLock	src/wal.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeLock	tsrc/wal.c	/^  u8 writeLock;              \/* True if in a write transaction *\/$/;"	m	struct:Wal	file:
writeMask	sqlite3.c	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse	file:
writeMask	src/sqliteInt.h	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse
writeMask	tsrc/sqliteInt.h	/^  yDbMask writeMask;   \/* Start a write transaction on these databases *\/$/;"	m	struct:Parse
writeMasterJournal	sqlite3.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writeMasterJournal	src/pager.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writeMasterJournal	tsrc/pager.c	/^static int writeMasterJournal(Pager *pPager, const char *zMaster){$/;"	f	file:
writeRuleText	tool/lemon.c	/^static void writeRuleText(FILE *out, struct rule *rp){$/;"	f	file:
writeUtf8	ext/misc/nextchar.c	/^static int writeUtf8(unsigned char *z, unsigned c){$/;"	f	file:
writeZeroSegment	ext/fts2/fts2.c	/^static int writeZeroSegment(fulltext_vtab *v, fts2Hash *pTerms){$/;"	f	file:
writeZeroSegment	tsrc/fts2.c	/^static int writeZeroSegment(fulltext_vtab *v, fts2Hash *pTerms){$/;"	f	file:
write_main_loop	test/lock_common.tcl	/^proc write_main_loop {} {$/;"	p
write_one_file	tool/split-sqlite3c.tcl	/^proc write_one_file {content} {$/;"	p
writefileFunc	ext/misc/fileio.c	/^static void writefileFunc($/;"	f	file:
writefileFunc	shell.c	/^static void writefileFunc($/;"	f	file:
writefileFunc	src/shell.c	/^static void writefileFunc($/;"	f	file:
writefileFunc	test/fuzzcheck.c	/^static void writefileFunc($/;"	f	file:
writefileFunc	tsrc/shell.c	/^static void writefileFunc($/;"	f	file:
writer	ext/fts5/fts5_expr.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	ext/fts5/fts5_expr.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	ext/fts5/fts5_index.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	ext/fts5/fts5_index.c	/^  Fts5SegWriter writer; $/;"	m	struct:Fts5FlushCtx	file:
writer	fts5.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	fts5.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	fts5.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	fts5.c	/^  Fts5SegWriter writer; $/;"	m	struct:Fts5FlushCtx	file:
writer	sqlite3.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	sqlite3.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	sqlite3.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	sqlite3.c	/^  Fts5SegWriter writer; $/;"	m	struct:Fts5FlushCtx	file:
writer	tsrc/fts5.c	/^  Fts5PageWriter writer;          \/* PageWriter object *\/$/;"	m	struct:Fts5SegWriter	file:
writer	tsrc/fts5.c	/^  Fts5PoslistWriter writer;       \/* Writer context *\/$/;"	m	struct:Fts5NearTrimmer	file:
writer	tsrc/fts5.c	/^  Fts5PoslistWriter writer;$/;"	m	struct:Fts5PoslistPopulator	file:
writer	tsrc/fts5.c	/^  Fts5SegWriter writer; $/;"	m	struct:Fts5FlushCtx	file:
wsFlags	sqlite3.c	/^  u32 wsFlags;          \/* WHERE_* flags describing the plan *\/$/;"	m	struct:WhereLoop	file:
wsFlags	src/whereInt.h	/^  u32 wsFlags;          \/* WHERE_* flags describing the plan *\/$/;"	m	struct:WhereLoop
wsFlags	tsrc/whereInt.h	/^  u32 wsFlags;          \/* WHERE_* flags describing the plan *\/$/;"	m	struct:WhereLoop
wsdAutoext	sqlite3.c	110028;"	d	file:
wsdAutoext	sqlite3.c	110031;"	d	file:
wsdAutoext	src/loadext.c	658;"	d	file:
wsdAutoext	src/loadext.c	661;"	d	file:
wsdAutoext	tsrc/loadext.c	658;"	d	file:
wsdAutoext	tsrc/loadext.c	661;"	d	file:
wsdAutoextInit	sqlite3.c	110026;"	d	file:
wsdAutoextInit	sqlite3.c	110030;"	d	file:
wsdAutoextInit	src/loadext.c	656;"	d	file:
wsdAutoextInit	src/loadext.c	660;"	d	file:
wsdAutoextInit	tsrc/loadext.c	656;"	d	file:
wsdAutoextInit	tsrc/loadext.c	660;"	d	file:
wsdHooks	sqlite3.c	20157;"	d	file:
wsdHooks	sqlite3.c	20160;"	d	file:
wsdHooks	src/fault.c	49;"	d	file:
wsdHooks	src/fault.c	52;"	d	file:
wsdHooks	tsrc/fault.c	49;"	d	file:
wsdHooks	tsrc/fault.c	52;"	d	file:
wsdHooksInit	sqlite3.c	20155;"	d	file:
wsdHooksInit	sqlite3.c	20159;"	d	file:
wsdHooksInit	src/fault.c	47;"	d	file:
wsdHooksInit	src/fault.c	51;"	d	file:
wsdHooksInit	tsrc/fault.c	47;"	d	file:
wsdHooksInit	tsrc/fault.c	51;"	d	file:
wsdPrng	sqlite3.c	26301;"	d	file:
wsdPrng	src/random.c	45;"	d	file:
wsdPrng	tsrc/random.c	45;"	d	file:
wsdStat	sqlite3.c	18228;"	d	file:
wsdStat	sqlite3.c	18231;"	d	file:
wsdStat	src/status.c	59;"	d	file:
wsdStat	src/status.c	62;"	d	file:
wsdStat	tsrc/status.c	59;"	d	file:
wsdStat	tsrc/status.c	62;"	d	file:
wsdStatInit	sqlite3.c	18227;"	d	file:
wsdStatInit	sqlite3.c	18230;"	d	file:
wsdStatInit	src/status.c	58;"	d	file:
wsdStatInit	src/status.c	61;"	d	file:
wsdStatInit	tsrc/status.c	58;"	d	file:
wsdStatInit	tsrc/status.c	61;"	d	file:
wtFlags	sqlite3.c	/^  u16 wtFlags;            \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm	file:
wtFlags	src/whereInt.h	/^  u16 wtFlags;            \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm
wtFlags	tsrc/whereInt.h	/^  u16 wtFlags;            \/* TERM_xxx bit flags.  See below *\/$/;"	m	struct:WhereTerm
x	ext/fts5/fts5_main.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	fts5.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	sqlite3.c	/^      } x;$/;"	m	union:ExprList::ExprList_item::__anon82	typeref:struct:ExprList::ExprList_item::__anon82::__anon83	file:
x	sqlite3.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	sqlite3.c	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon81	file:
x	src/sqliteInt.h	/^      } x;$/;"	m	union:ExprList::ExprList_item::__anon56	typeref:struct:ExprList::ExprList_item::__anon56::__anon57
x	src/sqliteInt.h	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon55
x	src/test_rtree.c	/^  double x;$/;"	m	struct:Cube	file:
x	test/speedtest1.c	/^  unsigned int x, y;         \/* Pseudo-random number generator state *\/$/;"	m	struct:Global	file:
x	tool/lemon.c	/^  } x;$/;"	m	struct:action	typeref:union:action::__anon5	file:
x	tsrc/fts5.c	/^  fts5_tokenizer x;               \/* Tokenizer functions *\/$/;"	m	struct:Fts5TokenizerModule	file:
x	tsrc/sqliteInt.h	/^      } x;$/;"	m	union:ExprList::ExprList_item::__anon24	typeref:struct:ExprList::ExprList_item::__anon24::__anon25
x	tsrc/sqliteInt.h	/^  } x;$/;"	m	struct:Expr	typeref:union:Expr::__anon23
x1a	tool/lemon.c	/^static struct s_x1 *x1a;$/;"	v	typeref:struct:s_x1	file:
x1node	tool/lemon.c	/^} x1node;$/;"	t	typeref:struct:s_x1node	file:
x2a	tool/lemon.c	/^static struct s_x2 *x2a;$/;"	v	typeref:struct:s_x2	file:
x2node	tool/lemon.c	/^} x2node;$/;"	t	typeref:struct:s_x2node	file:
x3a	tool/lemon.c	/^static struct s_x3 *x3a;$/;"	v	typeref:struct:s_x3	file:
x3node	tool/lemon.c	/^} x3node;$/;"	t	typeref:struct:s_x3node	file:
x4a	tool/lemon.c	/^static struct s_x4 *x4a;$/;"	v	typeref:struct:s_x4	file:
x4node	tool/lemon.c	/^} x4node;$/;"	t	typeref:struct:s_x4node	file:
xAccess	sqlite3.c	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs	file:
xAccess	sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAccess	tsrc/sqlite3.h	/^  int (*xAccess)(sqlite3_vfs*, const char *zName, int flags, int *pResOut);$/;"	m	struct:sqlite3_vfs
xAdvance	sqlite3.c	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::p4union	file:
xAdvance	src/vdbe.h	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::p4union
xAdvance	tsrc/vdbe.h	/^    int (*xAdvance)(BtCursor *, int *);$/;"	m	union:VdbeOp::p4union
xAuth	sqlite3.c	/^  sqlite3_xauth xAuth;          \/* Access authorization function *\/$/;"	m	struct:sqlite3	file:
xAuth	src/sqliteInt.h	/^  sqlite3_xauth xAuth;          \/* Access authorization function *\/$/;"	m	struct:sqlite3
xAuth	tsrc/sqliteInt.h	/^  sqlite3_xauth xAuth;          \/* Access authorization function *\/$/;"	m	struct:sqlite3
xBacktrace	sqlite3.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon89	file:
xBacktrace	src/mem2.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon63	file:
xBacktrace	tsrc/mem2.c	/^  void (*xBacktrace)(int, int, void **);$/;"	m	struct:__anon30	file:
xBegin	sqlite3.c	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xBegin	sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBegin	tsrc/sqlite3.h	/^  int (*xBegin)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xBenignBegin	sqlite3.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignBegin	src/fault.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignBegin	tsrc/fault.c	/^  void (*xBenignBegin)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	sqlite3.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	src/fault.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBenignEnd	tsrc/fault.c	/^  void (*xBenignEnd)(void);$/;"	m	struct:BenignMallocHooks	file:
xBestIndex	sqlite3.c	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module	file:
xBestIndex	sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBestIndex	tsrc/sqlite3.h	/^  int (*xBestIndex)(sqlite3_vtab *pVTab, sqlite3_index_info*);$/;"	m	struct:sqlite3_module
xBusy	src/test_superlock.c	/^  int (*xBusy)(void*,int);        \/* Pointer to busy-handler function *\/$/;"	m	struct:SuperlockBusy	file:
xBusy	src/test_thread.c	/^static int xBusy(void *pArg, int nBusy){$/;"	f	file:
xBusyHandler	sqlite3.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xBusyHandler	src/pager.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xBusyHandler	tsrc/pager.c	/^  int (*xBusyHandler)(void*); \/* Function to call when busy *\/$/;"	m	struct:Pager	file:
xCachesize	sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods	file:
xCachesize	sqlite3.c	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCachesize	sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCachesize	tsrc/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods
xCachesize	tsrc/sqlite3.h	/^  void (*xCachesize)(sqlite3_pcache*, int nCachesize);$/;"	m	struct:sqlite3_pcache_methods2
xCallback	src/test_quota.c	/^  void (*xCallback)(             \/* Callback invoked when going over quota *\/$/;"	m	struct:quotaGroup	file:
xCellSize	sqlite3.c	/^  u16 (*xCellSize)(MemPage*,u8*);             \/* cellSizePtr method *\/$/;"	m	struct:MemPage	file:
xCellSize	src/btreeInt.h	/^  u16 (*xCellSize)(MemPage*,u8*);             \/* cellSizePtr method *\/$/;"	m	struct:MemPage
xCellSize	tsrc/btreeInt.h	/^  u16 (*xCellSize)(MemPage*,u8*);             \/* cellSizePtr method *\/$/;"	m	struct:MemPage
xCheckReservedLock	sqlite3.c	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods	file:
xCheckReservedLock	sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xCheckReservedLock	tsrc/sqlite3.h	/^  int (*xCheckReservedLock)(sqlite3_file*, int *pResOut);$/;"	m	struct:sqlite3_io_methods
xChildDestroy	ext/misc/vtshim.c	/^  void (*xChildDestroy)(void*); \/* Destructor for pChildAux *\/$/;"	m	struct:vtshim_aux	file:
xClose	ext/fts1/fts1_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	ext/fts1/tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	ext/fts2/fts2_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	ext/fts3/fts3_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	sqlite3.c	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xClose	sqlite3.c	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module	file:
xClose	sqlite3.c	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xClose	sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xClose	tsrc/fts1_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	tsrc/fts2_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	tsrc/fts3_tokenizer.h	/^  int (*xClose)(sqlite3_tokenizer_cursor *pCursor);$/;"	m	struct:sqlite3_tokenizer_module
xClose	tsrc/sqlite3.h	/^  int (*xClose)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xClose	tsrc/sqlite3.h	/^  int (*xClose)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xCmp	sqlite3.c	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq	file:
xCmp	src/sqliteInt.h	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq
xCmp	tsrc/sqliteInt.h	/^  int (*xCmp)(void*,int, const void*, int, const void*);$/;"	m	struct:CollSeq
xCodec	sqlite3.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodec	src/pager.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodec	tsrc/pager.c	/^  void *(*xCodec)(void*,void*,Pgno,int); \/* Routine for en\/decoding data *\/$/;"	m	struct:Pager	file:
xCodecFree	sqlite3.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecFree	src/pager.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecFree	tsrc/pager.c	/^  void (*xCodecFree)(void*);             \/* Destructor for the codec *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	sqlite3.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	src/pager.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCodecSizeChng	tsrc/pager.c	/^  void (*xCodecSizeChng)(void*,int,int); \/* Notify of page size changes *\/$/;"	m	struct:Pager	file:
xCollNeeded	sqlite3.c	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3	file:
xCollNeeded	src/sqliteInt.h	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3
xCollNeeded	tsrc/sqliteInt.h	/^  void(*xCollNeeded)(void*,sqlite3*,int eTextRep,const char*);$/;"	m	struct:sqlite3
xCollNeeded16	sqlite3.c	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3	file:
xCollNeeded16	src/sqliteInt.h	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3
xCollNeeded16	tsrc/sqliteInt.h	/^  void(*xCollNeeded16)(void*,sqlite3*,int eTextRep,const void*);$/;"	m	struct:sqlite3
xColumn	sqlite3.c	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module	file:
xColumn	sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xColumn	tsrc/sqlite3.h	/^  int (*xColumn)(sqlite3_vtab_cursor*, sqlite3_context*, int);$/;"	m	struct:sqlite3_module
xColumnCount	ext/fts5/fts5.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnCount	fts5.c	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnCount	fts5.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnCount	sqlite3.c	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnCount	sqlite3.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnCount	tsrc/fts5.c	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnCount	tsrc/fts5.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnCount	tsrc/sqlite3.h	/^  int (*xColumnCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	ext/fts5/fts5.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	fts5.c	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnSize	fts5.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	sqlite3.c	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnSize	sqlite3.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	tsrc/fts5.c	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnSize	tsrc/fts5.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnSize	tsrc/sqlite3.h	/^  int (*xColumnSize)(Fts5Context*, int iCol, int *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnText	ext/fts5/fts5.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnText	fts5.c	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnText	fts5.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnText	sqlite3.c	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnText	sqlite3.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnText	tsrc/fts5.c	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnText	tsrc/fts5.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnText	tsrc/sqlite3.h	/^  int (*xColumnText)(Fts5Context*, int iCol, const char **pz, int *pn);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	ext/fts5/fts5.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	fts5.c	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnTotalSize	fts5.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	sqlite3.c	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnTotalSize	sqlite3.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	tsrc/fts5.c	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi	file:
xColumnTotalSize	tsrc/fts5.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xColumnTotalSize	tsrc/sqlite3.h	/^  int (*xColumnTotalSize)(Fts5Context*, int iCol, sqlite3_int64 *pnToken);$/;"	m	struct:Fts5ExtensionApi
xCommit	sqlite3.c	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xCommit	sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommit	tsrc/sqlite3.h	/^  int (*xCommit)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xCommitCallback	sqlite3.c	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xCommitCallback	src/sqliteInt.h	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3
xCommitCallback	tsrc/sqliteInt.h	/^  int (*xCommitCallback)(void*);    \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3
xCompare	sqlite3.c	/^  SorterCompare xCompare;         \/* Compare function to use *\/$/;"	m	struct:SortSubtask	file:
xCompare	src/vdbesort.c	/^  SorterCompare xCompare;         \/* Compare function to use *\/$/;"	m	struct:SortSubtask	file:
xCompare	tsrc/vdbesort.c	/^  SorterCompare xCompare;         \/* Compare function to use *\/$/;"	m	struct:SortSubtask	file:
xCond	ext/fts5/fts5_tokenize.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xCond	fts5.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xCond	sqlite3.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xCond	tsrc/fts5.c	/^  int (*xCond)(char *zStem, int nStem);$/;"	m	struct:PorterRule	file:
xConflict	ext/session/session_common.tcl	/^  proc xConflict args { return "OMIT" }$/;"	p
xConflict	ext/session/session_common.tcl	/^  proc xConflict {args} { $/;"	p
xConnect	sqlite3.c	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xConnect	sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xConnect	tsrc/sqlite3.h	/^  int (*xConnect)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCount	ext/session/sqlite3session.c	/^  int (*xCount)(void*);$/;"	m	struct:SessionHook	file:
xCount	sqlite3.c	/^  int (*xCount)(void*);$/;"	m	struct:SessionHook	file:
xCount	tsrc/sqlite3session.c	/^  int (*xCount)(void*);$/;"	m	struct:SessionHook	file:
xCreate	ext/fts1/fts1_tokenizer.h	/^  int (*xCreate)(int argc, const char *const*argv,$/;"	m	struct:sqlite3_tokenizer_module
xCreate	ext/fts1/tokenizer.h	/^  int (*xCreate)(int argc, const char **argv,$/;"	m	struct:sqlite3_tokenizer_module
xCreate	ext/fts2/fts2_tokenizer.h	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module
xCreate	ext/fts3/fts3_tokenizer.h	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module
xCreate	ext/fts5/fts5.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	fts5.c	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer	file:
xCreate	fts5.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	sqlite3.c	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module	file:
xCreate	sqlite3.c	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module	file:
xCreate	sqlite3.c	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer	file:
xCreate	sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods	file:
xCreate	sqlite3.c	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2	file:
xCreate	sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	sqlite3.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCreate	tsrc/fts1_tokenizer.h	/^  int (*xCreate)(int argc, const char *const*argv,$/;"	m	struct:sqlite3_tokenizer_module
xCreate	tsrc/fts2_tokenizer.h	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module
xCreate	tsrc/fts3_tokenizer.h	/^  int (*xCreate)($/;"	m	struct:sqlite3_tokenizer_module
xCreate	tsrc/fts5.c	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer	file:
xCreate	tsrc/fts5.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	tsrc/sqlite3.h	/^  int (*xCreate)(sqlite3*, void *pAux,$/;"	m	struct:sqlite3_module
xCreate	tsrc/sqlite3.h	/^  int (*xCreate)(void*, const char **azArg, int nArg, Fts5Tokenizer **ppOut);$/;"	m	struct:fts5_tokenizer
xCreate	tsrc/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods
xCreate	tsrc/sqlite3.h	/^  sqlite3_pcache *(*xCreate)(int szPage, int szExtra, int bPurgeable);$/;"	m	struct:sqlite3_pcache_methods2
xCreateFunction	ext/fts5/fts5.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateFunction	fts5.c	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api	file:
xCreateFunction	fts5.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateFunction	sqlite3.c	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api	file:
xCreateFunction	sqlite3.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateFunction	tsrc/fts5.c	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api	file:
xCreateFunction	tsrc/fts5.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateFunction	tsrc/sqlite3.h	/^  int (*xCreateFunction)($/;"	m	struct:fts5_api
xCreateTokenizer	ext/fts5/fts5.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCreateTokenizer	fts5.c	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api	file:
xCreateTokenizer	fts5.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCreateTokenizer	sqlite3.c	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api	file:
xCreateTokenizer	sqlite3.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCreateTokenizer	tsrc/fts5.c	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api	file:
xCreateTokenizer	tsrc/fts5.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCreateTokenizer	tsrc/sqlite3.h	/^  int (*xCreateTokenizer)($/;"	m	struct:fts5_api
xCurrentTime	sqlite3.c	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTime	sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTime	tsrc/sqlite3.h	/^  int (*xCurrentTime)(sqlite3_vfs*, double*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	sqlite3.c	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs	file:
xCurrentTimeInt64	sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xCurrentTimeInt64	tsrc/sqlite3.h	/^  int (*xCurrentTimeInt64)(sqlite3_vfs*, sqlite3_int64*);$/;"	m	struct:sqlite3_vfs
xDel	sqlite3.c	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq	file:
xDel	sqlite3.c	/^  void (*xDel)(void*);\/* Destructor for Mem.z - only valid if MEM_Dyn *\/$/;"	m	struct:Mem	file:
xDel	src/sqliteInt.h	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq
xDel	src/vdbeInt.h	/^  void (*xDel)(void*);\/* Destructor for Mem.z - only valid if MEM_Dyn *\/$/;"	m	struct:Mem
xDel	tsrc/sqliteInt.h	/^  void (*xDel)(void*);  \/* Destructor for pUser *\/$/;"	m	struct:CollSeq
xDel	tsrc/vdbeInt.h	/^  void (*xDel)(void*);\/* Destructor for Mem.z - only valid if MEM_Dyn *\/$/;"	m	struct:Mem
xDelUser	ext/rtree/sqlite3rtree.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	ext/rtree/sqlite3rtree.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelUser	sqlite3.c	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry	file:
xDelUser	sqlite3.c	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info	file:
xDelUser	sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	sqlite3.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelUser	tsrc/sqlite3.h	/^  void (*xDelUser)(void *);       \/* Called by SQLite to clean up pUser *\/$/;"	m	struct:sqlite3_rtree_geometry
xDelUser	tsrc/sqlite3.h	/^  void (*xDelUser)(void*);          \/* function to free pUser *\/$/;"	m	struct:sqlite3_rtree_query_info
xDelete	ext/fts5/fts5.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	ext/fts5/fts5_main.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDelete	fts5.c	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer	file:
xDelete	fts5.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDelete	fts5.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	sqlite3.c	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs	file:
xDelete	sqlite3.c	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer	file:
xDelete	sqlite3.c	/^  void (*xDelete)(void *);        \/* Destructor for the aux data *\/$/;"	m	struct:AuxData	file:
xDelete	sqlite3.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDelete	sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDelete	sqlite3.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	src/vdbeInt.h	/^  void (*xDelete)(void *);        \/* Destructor for the aux data *\/$/;"	m	struct:AuxData
xDelete	tsrc/fts5.c	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer	file:
xDelete	tsrc/fts5.c	/^  void(*xDelete)(void*);          \/* Destructor *\/$/;"	m	struct:Fts5Auxdata	file:
xDelete	tsrc/fts5.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	tsrc/sqlite3.h	/^  int (*xDelete)(sqlite3_vfs*, const char *zName, int syncDir);$/;"	m	struct:sqlite3_vfs
xDelete	tsrc/sqlite3.h	/^  void (*xDelete)(Fts5Tokenizer*);$/;"	m	struct:fts5_tokenizer
xDelete	tsrc/vdbeInt.h	/^  void (*xDelete)(void *);        \/* Destructor for the aux data *\/$/;"	m	struct:AuxData
xDepth	ext/session/sqlite3session.c	/^  int (*xDepth)(void*);$/;"	m	struct:SessionHook	file:
xDepth	sqlite3.c	/^  int (*xDepth)(void*);$/;"	m	struct:SessionHook	file:
xDepth	tsrc/sqlite3session.c	/^  int (*xDepth)(void*);$/;"	m	struct:SessionHook	file:
xDestroy	ext/fts1/fts1_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	ext/fts1/tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	ext/fts2/fts2_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	ext/fts3/fts3_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	ext/fts5/fts5_main.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	ext/fts5/fts5_main.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestroy	fts5.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	fts5.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestroy	sqlite3.c	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module	file:
xDestroy	sqlite3.c	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	sqlite3.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestroy	sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDestroy	src/sqliteInt.h	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module
xDestroy	src/sqliteInt.h	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor
xDestroy	src/test_quota.c	/^  void (*xDestroy)(void*);       \/* Optional destructor for pArg *\/$/;"	m	struct:quotaGroup	file:
xDestroy	tsrc/fts1_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	tsrc/fts2_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	tsrc/fts3_tokenizer.h	/^  int (*xDestroy)(sqlite3_tokenizer *pTokenizer);$/;"	m	struct:sqlite3_tokenizer_module
xDestroy	tsrc/fts5.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5Auxiliary	file:
xDestroy	tsrc/fts5.c	/^  void (*xDestroy)(void*);        \/* Destructor function *\/$/;"	m	struct:Fts5TokenizerModule	file:
xDestroy	tsrc/sqlite3.h	/^  int (*xDestroy)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDestroy	tsrc/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xDestroy	tsrc/sqlite3.h	/^  void (*xDestroy)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xDestroy	tsrc/sqliteInt.h	/^  void (*xDestroy)(void *);            \/* Module destructor function *\/$/;"	m	struct:Module
xDestroy	tsrc/sqliteInt.h	/^  void (*xDestroy)(void *);$/;"	m	struct:FuncDestructor
xDestructor	ext/rtree/rtree.c	/^  void (*xDestructor)(void*);$/;"	m	struct:RtreeGeomCallback	file:
xDestructor	sqlite3.c	/^  void (*xDestructor)(void*);$/;"	m	struct:RtreeGeomCallback	file:
xDestructor	tsrc/rtree.c	/^  void (*xDestructor)(void*);$/;"	m	struct:RtreeGeomCallback	file:
xDeviceCharacteristics	sqlite3.c	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xDeviceCharacteristics	sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDeviceCharacteristics	tsrc/sqlite3.h	/^  int (*xDeviceCharacteristics)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xDisconnect	sqlite3.c	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xDisconnect	sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDisconnect	tsrc/sqlite3.h	/^  int (*xDisconnect)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xDlClose	sqlite3.c	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs	file:
xDlClose	sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlClose	tsrc/sqlite3.h	/^  void (*xDlClose)(sqlite3_vfs*, void*);$/;"	m	struct:sqlite3_vfs
xDlError	sqlite3.c	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs	file:
xDlError	sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlError	tsrc/sqlite3.h	/^  void (*xDlError)(sqlite3_vfs*, int nByte, char *zErrMsg);$/;"	m	struct:sqlite3_vfs
xDlOpen	sqlite3.c	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs	file:
xDlOpen	sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xDlOpen	tsrc/sqlite3.h	/^  void *(*xDlOpen)(sqlite3_vfs*, const char *zFilename);$/;"	m	struct:sqlite3_vfs
xEof	sqlite3.c	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xEof	sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xEof	tsrc/sqlite3.h	/^  int (*xEof)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xExprCallback	sqlite3.c	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker	file:
xExprCallback	src/sqliteInt.h	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker
xExprCallback	tsrc/sqliteInt.h	/^  int (*xExprCallback)(Walker*, Expr*);     \/* Callback for expressions *\/$/;"	m	struct:Walker
xF5tApi	ext/fts5/fts5_tcl.c	/^static int SQLITE_TCLAPI xF5tApi($/;"	f	file:
xF5tDestroy	ext/fts5/fts5_tcl.c	/^static void xF5tDestroy(void *pCtx){$/;"	f	file:
xF5tFree	ext/fts5/fts5_tcl.c	/^static void SQLITE_TCLAPI xF5tFree(ClientData clientData){$/;"	f	file:
xF5tFunction	ext/fts5/fts5_tcl.c	/^static void xF5tFunction($/;"	f	file:
xFetch	sqlite3.c	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods	file:
xFetch	sqlite3.c	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2	file:
xFetch	sqlite3.c	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods	file:
xFetch	sqlite3.h	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	sqlite3.h	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFetch	tsrc/sqlite3.h	/^  int (*xFetch)(sqlite3_file*, sqlite3_int64 iOfst, int iAmt, void **pp);$/;"	m	struct:sqlite3_io_methods
xFetch	tsrc/sqlite3.h	/^  sqlite3_pcache_page *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods2
xFetch	tsrc/sqlite3.h	/^  void *(*xFetch)(sqlite3_pcache*, unsigned key, int createFlag);$/;"	m	struct:sqlite3_pcache_methods
xFileControl	sqlite3.c	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods	file:
xFileControl	sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileControl	tsrc/sqlite3.h	/^  int (*xFileControl)(sqlite3_file*, int op, void *pArg);$/;"	m	struct:sqlite3_io_methods
xFileSize	sqlite3.c	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods	file:
xFileSize	sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFileSize	tsrc/sqlite3.h	/^  int (*xFileSize)(sqlite3_file*, sqlite3_int64 *pSize);$/;"	m	struct:sqlite3_io_methods
xFilter	sqlite3.c	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module	file:
xFilter	sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFilter	tsrc/sqlite3.h	/^  int (*xFilter)(sqlite3_vtab_cursor*, int idxNum, const char *idxStr,$/;"	m	struct:sqlite3_module
xFinalize	sqlite3.c	/^  void (*xFinalize)(sqlite3_context*);                  \/* Agg finalizer *\/$/;"	m	struct:FuncDef	file:
xFinalize	src/sqliteInt.h	/^  void (*xFinalize)(sqlite3_context*);                  \/* Agg finalizer *\/$/;"	m	struct:FuncDef
xFinalize	tsrc/sqliteInt.h	/^  void (*xFinalize)(sqlite3_context*);                  \/* Agg finalizer *\/$/;"	m	struct:FuncDef
xFindFunction	sqlite3.c	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module	file:
xFindFunction	sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFindFunction	tsrc/sqlite3.h	/^  int (*xFindFunction)(sqlite3_vtab *pVtab, int nArg, const char *zName,$/;"	m	struct:sqlite3_module
xFindTokenizer	ext/fts5/fts5.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFindTokenizer	fts5.c	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api	file:
xFindTokenizer	fts5.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFindTokenizer	sqlite3.c	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api	file:
xFindTokenizer	sqlite3.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFindTokenizer	tsrc/fts5.c	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api	file:
xFindTokenizer	tsrc/fts5.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFindTokenizer	tsrc/sqlite3.h	/^  int (*xFindTokenizer)($/;"	m	struct:fts5_api
xFree	ext/fts1/ft_hash.h	/^  void (*xFree)(void *);  \/* free() function to use *\/$/;"	m	struct:Hash
xFree	ext/fts1/fts1_hash.h	/^  void (*xFree)(void *);  \/* free() function to use *\/$/;"	m	struct:fts1Hash
xFree	ext/icu/icu.c	/^static void xFree(void *p){$/;"	f	file:
xFree	sqlite3.c	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xFree	sqlite3.c	/^static void xFree(void *p){$/;"	f	file:
xFree	sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFree	src/test_intarray.c	/^  void (*xFree)(void*);     \/* Function used to free a[] *\/$/;"	m	struct:sqlite3_intarray	file:
xFree	tsrc/fts1_hash.h	/^  void (*xFree)(void *);  \/* free() function to use *\/$/;"	m	struct:fts1Hash
xFree	tsrc/icu.c	/^static void xFree(void *p){$/;"	f	file:
xFree	tsrc/sqlite3.h	/^  void (*xFree)(void*);          \/* Free a prior allocation *\/$/;"	m	struct:sqlite3_mem_methods
xFreeSchema	sqlite3.c	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared	file:
xFreeSchema	src/btreeInt.h	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared
xFreeSchema	tsrc/btreeInt.h	/^  void (*xFreeSchema)(void*);  \/* Destructor for BtShared.pSchema *\/$/;"	m	struct:BtShared
xFullPathname	sqlite3.c	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xFullPathname	sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFullPathname	tsrc/sqlite3.h	/^  int (*xFullPathname)(sqlite3_vfs*, const char *zName, int nOut, char *zOut);$/;"	m	struct:sqlite3_vfs
xFunc	ext/fts5/fts5_main.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	fts5.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	sqlite3.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	sqlite3.c	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler	file:
xFunc	src/sqliteInt.h	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler
xFunc	tsrc/fts5.c	/^  fts5_extension_function xFunc;  \/* Callback function *\/$/;"	m	struct:Fts5Auxiliary	file:
xFunc	tsrc/sqliteInt.h	/^  int (*xFunc)(void *,int);  \/* The busy callback *\/$/;"	m	struct:BusyHandler
xGeom	ext/rtree/rtree.c	/^    int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*);$/;"	m	union:RtreeConstraint::__anon77	file:
xGeom	ext/rtree/rtree.c	/^  int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*);$/;"	m	struct:RtreeGeomCallback	file:
xGeom	sqlite3.c	/^    int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*);$/;"	m	union:RtreeConstraint::__anon105	file:
xGeom	sqlite3.c	/^  int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*);$/;"	m	struct:RtreeGeomCallback	file:
xGeom	tsrc/rtree.c	/^    int (*xGeom)(sqlite3_rtree_geometry*,int,RtreeDValue*,int*);$/;"	m	union:RtreeConstraint::__anon9	file:
xGeom	tsrc/rtree.c	/^  int (*xGeom)(sqlite3_rtree_geometry*, int, RtreeDValue*, int*);$/;"	m	struct:RtreeGeomCallback	file:
xGetAuxdata	ext/fts5/fts5.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetAuxdata	fts5.c	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi	file:
xGetAuxdata	fts5.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetAuxdata	sqlite3.c	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi	file:
xGetAuxdata	sqlite3.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetAuxdata	tsrc/fts5.c	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi	file:
xGetAuxdata	tsrc/fts5.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetAuxdata	tsrc/sqlite3.h	/^  void *(*xGetAuxdata)(Fts5Context*, int bClear);$/;"	m	struct:Fts5ExtensionApi
xGetLastError	sqlite3.c	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs	file:
xGetLastError	sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetLastError	tsrc/sqlite3.h	/^  int (*xGetLastError)(sqlite3_vfs*, int, char *);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	sqlite3.c	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xGetSystemCall	sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xGetSystemCall	tsrc/sqlite3.h	/^  sqlite3_syscall_ptr (*xGetSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xInit	sqlite3.c	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xInit	sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xInit	sqlite3.c	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xInit	sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xInit	tsrc/sqlite3.h	/^  int (*xInit)(void*);           \/* Initialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xInit	tsrc/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods
xInit	tsrc/sqlite3.h	/^  int (*xInit)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xInput	ext/session/sqlite3session.c	/^  int (*xInput)(void*, void*, int*);        \/* Input stream call (or NULL) *\/$/;"	m	struct:SessionInput	file:
xInput	sqlite3.c	/^  int (*xInput)(void*, void*, int*);        \/* Input stream call (or NULL) *\/$/;"	m	struct:SessionInput	file:
xInput	tsrc/sqlite3session.c	/^  int (*xInput)(void*, void*, int*);        \/* Input stream call (or NULL) *\/$/;"	m	struct:SessionInput	file:
xInst	ext/fts5/fts5.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInst	fts5.c	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xInst	fts5.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInst	sqlite3.c	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xInst	sqlite3.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInst	tsrc/fts5.c	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xInst	tsrc/fts5.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInst	tsrc/sqlite3.h	/^  int (*xInst)(Fts5Context*, int iIdx, int *piPhrase, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xInstCount	ext/fts5/fts5.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xInstCount	fts5.c	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi	file:
xInstCount	fts5.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xInstCount	sqlite3.c	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi	file:
xInstCount	sqlite3.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xInstCount	tsrc/fts5.c	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi	file:
xInstCount	tsrc/fts5.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xInstCount	tsrc/sqlite3.h	/^  int (*xInstCount)(Fts5Context*, int *pnInst);$/;"	m	struct:Fts5ExtensionApi
xLanguageid	ext/fts3/fts3_tokenizer.h	/^  int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid);$/;"	m	struct:sqlite3_tokenizer_module
xLanguageid	sqlite3.c	/^  int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid);$/;"	m	struct:sqlite3_tokenizer_module	file:
xLanguageid	tsrc/fts3_tokenizer.h	/^  int (*xLanguageid)(sqlite3_tokenizer_cursor *pCsr, int iLangid);$/;"	m	struct:sqlite3_tokenizer_module
xLock	sqlite3.c	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xLock	sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLock	tsrc/sqlite3.h	/^  int (*xLock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xLog	sqlite3.c	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config	file:
xLog	src/sqliteInt.h	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config
xLog	tsrc/sqliteInt.h	/^  void (*xLog)(void*,int,const char*); \/* Function for logging *\/$/;"	m	struct:Sqlite3Config
xLogcallback	src/test1.c	/^static void xLogcallback(void *unused, int err, char *zMsg){$/;"	f	file:
xMalloc	ext/fts1/ft_hash.h	/^  void *(*xMalloc)(int);  \/* malloc() function to use *\/$/;"	m	struct:Hash
xMalloc	ext/fts1/fts1_hash.h	/^  void *(*xMalloc)(int);  \/* malloc() function to use *\/$/;"	m	struct:fts1Hash
xMalloc	sqlite3.c	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods	file:
xMalloc	sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMalloc	tsrc/fts1_hash.h	/^  void *(*xMalloc)(int);  \/* malloc() function to use *\/$/;"	m	struct:fts1Hash
xMalloc	tsrc/sqlite3.h	/^  void *(*xMalloc)(int);         \/* Memory allocation function *\/$/;"	m	struct:sqlite3_mem_methods
xMutexAlloc	sqlite3.c	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexAlloc	sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexAlloc	tsrc/sqlite3.h	/^  sqlite3_mutex *(*xMutexAlloc)(int);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	sqlite3.c	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnd	sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnd	tsrc/sqlite3.h	/^  int (*xMutexEnd)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	sqlite3.c	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexEnter	sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexEnter	tsrc/sqlite3.h	/^  void (*xMutexEnter)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	sqlite3.c	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexFree	sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexFree	tsrc/sqlite3.h	/^  void (*xMutexFree)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	sqlite3.c	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexHeld	sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexHeld	tsrc/sqlite3.h	/^  int (*xMutexHeld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	sqlite3.c	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexInit	sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexInit	tsrc/sqlite3.h	/^  int (*xMutexInit)(void);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	sqlite3.c	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexLeave	sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexLeave	tsrc/sqlite3.h	/^  void (*xMutexLeave)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	sqlite3.c	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexNotheld	sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexNotheld	tsrc/sqlite3.h	/^  int (*xMutexNotheld)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	sqlite3.c	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods	file:
xMutexTry	sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xMutexTry	tsrc/sqlite3.h	/^  int (*xMutexTry)(sqlite3_mutex *);$/;"	m	struct:sqlite3_mutex_methods
xNew	ext/session/sqlite3session.c	/^  int (*xNew)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xNew	sqlite3.c	/^  int (*xNew)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xNew	tsrc/sqlite3session.c	/^  int (*xNew)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xNext	ext/fts1/fts1_tokenizer.h	/^  int (*xNext)(sqlite3_tokenizer_cursor *pCursor,$/;"	m	struct:sqlite3_tokenizer_module
xNext	ext/fts1/tokenizer.h	/^  int (*xNext)(sqlite3_tokenizer_cursor *pCursor,$/;"	m	struct:sqlite3_tokenizer_module
xNext	ext/fts2/fts2_tokenizer.h	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module
xNext	ext/fts3/fts3_tokenizer.h	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module
xNext	ext/fts5/fts5_expr.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	ext/fts5/fts5_index.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNext	fts5.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	fts5.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNext	sqlite3.c	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module	file:
xNext	sqlite3.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	sqlite3.c	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module	file:
xNext	sqlite3.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNext	sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNext	tsrc/fts1_tokenizer.h	/^  int (*xNext)(sqlite3_tokenizer_cursor *pCursor,$/;"	m	struct:sqlite3_tokenizer_module
xNext	tsrc/fts2_tokenizer.h	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module
xNext	tsrc/fts3_tokenizer.h	/^  int (*xNext)($/;"	m	struct:sqlite3_tokenizer_module
xNext	tsrc/fts5.c	/^  int (*xNext)(Fts5Expr*, Fts5ExprNode*, int, i64);$/;"	m	struct:Fts5ExprNode	file:
xNext	tsrc/fts5.c	/^  void (*xNext)(Fts5Index*, Fts5SegIter*, int*);$/;"	m	struct:Fts5SegIter	file:
xNext	tsrc/sqlite3.h	/^  int (*xNext)(sqlite3_vtab_cursor*);$/;"	m	struct:sqlite3_module
xNextChar	ext/misc/regexp.c	/^  unsigned (*xNextChar)(ReInput*);  \/* Next character function *\/$/;"	m	struct:ReCompiled	file:
xNextSystemCall	sqlite3.c	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs	file:
xNextSystemCall	sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xNextSystemCall	tsrc/sqlite3.h	/^  const char *(*xNextSystemCall)(sqlite3_vfs*, const char *zName);$/;"	m	struct:sqlite3_vfs
xOld	ext/session/sqlite3session.c	/^  int (*xOld)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xOld	sqlite3.c	/^  int (*xOld)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xOld	tsrc/sqlite3session.c	/^  int (*xOld)(void*,int,sqlite3_value**);$/;"	m	struct:SessionHook	file:
xOp	src/test4.c	/^  void (*xOp)(Thread*);  \/* next operation to do *\/$/;"	m	struct:Thread	file:
xOp	src/test7.c	/^  void (*xOp)(Thread*);    \/* next operation to do *\/$/;"	m	struct:Thread	file:
xOpen	ext/fts1/fts1_tokenizer.h	/^  int (*xOpen)(sqlite3_tokenizer *pTokenizer,$/;"	m	struct:sqlite3_tokenizer_module
xOpen	ext/fts1/tokenizer.h	/^  int (*xOpen)(sqlite3_tokenizer *pTokenizer,$/;"	m	struct:sqlite3_tokenizer_module
xOpen	ext/fts2/fts2_tokenizer.h	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module
xOpen	ext/fts3/fts3_tokenizer.h	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module
xOpen	sqlite3.c	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module	file:
xOpen	sqlite3.c	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs	file:
xOpen	sqlite3.c	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module	file:
xOpen	sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xOpen	tsrc/fts1_tokenizer.h	/^  int (*xOpen)(sqlite3_tokenizer *pTokenizer,$/;"	m	struct:sqlite3_tokenizer_module
xOpen	tsrc/fts2_tokenizer.h	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module
xOpen	tsrc/fts3_tokenizer.h	/^  int (*xOpen)($/;"	m	struct:sqlite3_tokenizer_module
xOpen	tsrc/sqlite3.h	/^  int (*xOpen)(sqlite3_vfs*, const char *zName, sqlite3_file*,$/;"	m	struct:sqlite3_vfs
xOpen	tsrc/sqlite3.h	/^  int (*xOpen)(sqlite3_vtab *pVTab, sqlite3_vtab_cursor **ppCursor);$/;"	m	struct:sqlite3_module
xOrig	src/test_syscall.c	/^  sqlite3_syscall_ptr xOrig;$/;"	m	struct:TestSyscallArray	file:
xOut	src/test_vfstrace.c	/^  int (*xOut)(const char*, void*);    \/* Send output here *\/$/;"	m	struct:vfstrace_info	file:
xPagecount	sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods	file:
xPagecount	sqlite3.c	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xPagecount	sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xPagecount	tsrc/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods
xPagecount	tsrc/sqlite3.h	/^  int (*xPagecount)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xParseCell	sqlite3.c	/^  void (*xParseCell)(MemPage*,u8*,CellInfo*); \/* btreeParseCell method *\/$/;"	m	struct:MemPage	file:
xParseCell	src/btreeInt.h	/^  void (*xParseCell)(MemPage*,u8*,CellInfo*); \/* btreeParseCell method *\/$/;"	m	struct:MemPage
xParseCell	tsrc/btreeInt.h	/^  void (*xParseCell)(MemPage*,u8*,CellInfo*); \/* btreeParseCell method *\/$/;"	m	struct:MemPage
xPhraseCount	ext/fts5/fts5.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseCount	fts5.c	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseCount	fts5.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseCount	sqlite3.c	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseCount	sqlite3.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseCount	tsrc/fts5.c	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseCount	tsrc/fts5.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseCount	tsrc/sqlite3.h	/^  int (*xPhraseCount)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	ext/fts5/fts5.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	fts5.c	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirst	fts5.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	sqlite3.c	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirst	sqlite3.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	tsrc/fts5.c	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirst	tsrc/fts5.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirst	tsrc/sqlite3.h	/^  int (*xPhraseFirst)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	ext/fts5/fts5.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	fts5.c	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirstColumn	fts5.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	sqlite3.c	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirstColumn	sqlite3.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	tsrc/fts5.c	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseFirstColumn	tsrc/fts5.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseFirstColumn	tsrc/sqlite3.h	/^  int (*xPhraseFirstColumn)(Fts5Context*, int iPhrase, Fts5PhraseIter*, int*);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	ext/fts5/fts5.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	fts5.c	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNext	fts5.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	sqlite3.c	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNext	sqlite3.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	tsrc/fts5.c	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNext	tsrc/fts5.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNext	tsrc/sqlite3.h	/^  void (*xPhraseNext)(Fts5Context*, Fts5PhraseIter*, int *piCol, int *piOff);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	ext/fts5/fts5.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	fts5.c	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNextColumn	fts5.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	sqlite3.c	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNextColumn	sqlite3.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	tsrc/fts5.c	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseNextColumn	tsrc/fts5.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseNextColumn	tsrc/sqlite3.h	/^  void (*xPhraseNextColumn)(Fts5Context*, Fts5PhraseIter*, int *piCol);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	ext/fts5/fts5.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	fts5.c	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseSize	fts5.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	sqlite3.c	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseSize	sqlite3.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	tsrc/fts5.c	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi	file:
xPhraseSize	tsrc/fts5.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPhraseSize	tsrc/sqlite3.h	/^  int (*xPhraseSize)(Fts5Context*, int iPhrase);$/;"	m	struct:Fts5ExtensionApi
xPreUpdate	ext/session/sqlite3session.c	/^static void xPreUpdate($/;"	f	file:
xPreUpdate	sqlite3.c	/^static void xPreUpdate($/;"	f	file:
xPreUpdate	tsrc/sqlite3session.c	/^static void xPreUpdate($/;"	f	file:
xPreUpdateCallback	sqlite3.c	/^  void (*xPreUpdateCallback)(   \/* Registered using sqlite3_preupdate_hook() *\/$/;"	m	struct:sqlite3	file:
xPreUpdateCallback	src/sqliteInt.h	/^  void (*xPreUpdateCallback)(   \/* Registered using sqlite3_preupdate_hook() *\/$/;"	m	struct:sqlite3
xPreUpdateCallback	tsrc/sqliteInt.h	/^  void (*xPreUpdateCallback)(   \/* Registered using sqlite3_preupdate_hook() *\/$/;"	m	struct:sqlite3
xProc	test/threadtest3.c	/^  char *(*xProc)(int, void*);     \/* Thread main proc *\/$/;"	m	struct:Thread	file:
xProc	test/tt3_stress.c	/^  void (*xProc)(Error*, Sqlite*, int);$/;"	m	struct:Stress2Ctx	file:
xProfile	sqlite3.c	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3	file:
xProfile	src/sqliteInt.h	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3
xProfile	tsrc/sqliteInt.h	/^  void (*xProfile)(void*,const char*,u64);  \/* Profiling function *\/$/;"	m	struct:sqlite3
xProgress	sqlite3.c	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3	file:
xProgress	src/sqliteInt.h	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3
xProgress	tsrc/sqliteInt.h	/^  int (*xProgress)(void *);     \/* The progress callback *\/$/;"	m	struct:sqlite3
xQueryFunc	ext/rtree/rtree.c	/^    int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	union:RtreeConstraint::__anon77	file:
xQueryFunc	ext/rtree/rtree.c	/^  int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	struct:RtreeGeomCallback	file:
xQueryFunc	sqlite3.c	/^    int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	union:RtreeConstraint::__anon105	file:
xQueryFunc	sqlite3.c	/^  int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	struct:RtreeGeomCallback	file:
xQueryFunc	tsrc/rtree.c	/^    int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	union:RtreeConstraint::__anon9	file:
xQueryFunc	tsrc/rtree.c	/^  int (*xQueryFunc)(sqlite3_rtree_query_info*);$/;"	m	struct:RtreeGeomCallback	file:
xQueryPhrase	ext/fts5/fts5.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	fts5.c	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi	file:
xQueryPhrase	fts5.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	sqlite3.c	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi	file:
xQueryPhrase	sqlite3.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	tsrc/fts5.c	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi	file:
xQueryPhrase	tsrc/fts5.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhrase	tsrc/sqlite3.h	/^  int (*xQueryPhrase)(Fts5Context*, int iPhrase, void *pUserData,$/;"	m	struct:Fts5ExtensionApi
xQueryPhraseCb	ext/fts5/fts5_tcl.c	/^static int xQueryPhraseCb($/;"	f	file:
xRandomness	sqlite3.c	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs	file:
xRandomness	sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRandomness	tsrc/sqlite3.h	/^  int (*xRandomness)(sqlite3_vfs*, int nByte, char *zOut);$/;"	m	struct:sqlite3_vfs
xRead	sqlite3.c	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xRead	sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRead	tsrc/sqlite3.h	/^  int (*xRead)(sqlite3_file*, void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xRealloc	sqlite3.c	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRealloc	sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xRealloc	tsrc/sqlite3.h	/^  void *(*xRealloc)(void*,int);  \/* Resize an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xReiniter	sqlite3.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xReiniter	src/pager.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xReiniter	tsrc/pager.c	/^  void (*xReiniter)(DbPage*); \/* Call this routine when reloading pages *\/$/;"	m	struct:Pager	file:
xRekey	sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2	file:
xRekey	sqlite3.c	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods	file:
xRekey	sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2
xRekey	sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRekey	tsrc/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, sqlite3_pcache_page*, $/;"	m	struct:sqlite3_pcache_methods2
xRekey	tsrc/sqlite3.h	/^  void (*xRekey)(sqlite3_pcache*, void*, unsigned oldKey, unsigned newKey);$/;"	m	struct:sqlite3_pcache_methods
xRelease	sqlite3.c	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRelease	sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRelease	tsrc/sqlite3.h	/^  int (*xRelease)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRename	sqlite3.c	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module	file:
xRename	sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRename	tsrc/sqlite3.h	/^  int (*xRename)(sqlite3_vtab *pVtab, const char *zNew);$/;"	m	struct:sqlite3_module
xRollback	sqlite3.c	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xRollback	sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollback	tsrc/sqlite3.h	/^  int (*xRollback)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xRollbackCallback	sqlite3.c	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3	file:
xRollbackCallback	src/sqliteInt.h	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3
xRollbackCallback	tsrc/sqliteInt.h	/^  void (*xRollbackCallback)(void*); \/* Invoked at every commit. *\/$/;"	m	struct:sqlite3
xRollbackTo	sqlite3.c	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xRollbackTo	sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRollbackTo	tsrc/sqlite3.h	/^  int (*xRollbackTo)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xRoundup	sqlite3.c	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods	file:
xRoundup	sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRoundup	tsrc/sqlite3.h	/^  int (*xRoundup)(int);          \/* Round up request size to allocation size *\/$/;"	m	struct:sqlite3_mem_methods
xRowCount	ext/fts5/fts5.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowCount	fts5.c	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi	file:
xRowCount	fts5.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowCount	sqlite3.c	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi	file:
xRowCount	sqlite3.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowCount	tsrc/fts5.c	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi	file:
xRowCount	tsrc/fts5.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowCount	tsrc/sqlite3.h	/^  int (*xRowCount)(Fts5Context*, sqlite3_int64 *pnRow);$/;"	m	struct:Fts5ExtensionApi
xRowid	ext/fts5/fts5.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xRowid	fts5.c	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xRowid	fts5.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xRowid	sqlite3.c	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module	file:
xRowid	sqlite3.c	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xRowid	sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xRowid	sqlite3.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xRowid	tsrc/fts5.c	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xRowid	tsrc/fts5.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xRowid	tsrc/sqlite3.h	/^  int (*xRowid)(sqlite3_vtab_cursor*, sqlite3_int64 *pRowid);$/;"	m	struct:sqlite3_module
xRowid	tsrc/sqlite3.h	/^  sqlite3_int64 (*xRowid)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xSFunc	sqlite3.c	/^  void (*xSFunc)(sqlite3_context*,int,sqlite3_value**); \/* func or agg-step *\/$/;"	m	struct:FuncDef	file:
xSFunc	src/sqliteInt.h	/^  void (*xSFunc)(sqlite3_context*,int,sqlite3_value**); \/* func or agg-step *\/$/;"	m	struct:FuncDef
xSFunc	tsrc/sqliteInt.h	/^  void (*xSFunc)(sqlite3_context*,int,sqlite3_value**); \/* func or agg-step *\/$/;"	m	struct:FuncDef
xSavepoint	sqlite3.c	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module	file:
xSavepoint	sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSavepoint	tsrc/sqlite3.h	/^  int (*xSavepoint)(sqlite3_vtab *pVTab, int);$/;"	m	struct:sqlite3_module
xSectorSize	sqlite3.c	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xSectorSize	sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSectorSize	tsrc/sqlite3.h	/^  int (*xSectorSize)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xSelectCallback	sqlite3.c	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSelectCallback	src/sqliteInt.h	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker
xSelectCallback	tsrc/sqliteInt.h	/^  int (*xSelectCallback)(Walker*,Select*);  \/* Callback for SELECTs *\/$/;"	m	struct:Walker
xSelectCallback2	sqlite3.c	/^  void (*xSelectCallback2)(Walker*,Select*);\/* Second callback for SELECTs *\/$/;"	m	struct:Walker	file:
xSelectCallback2	src/sqliteInt.h	/^  void (*xSelectCallback2)(Walker*,Select*);\/* Second callback for SELECTs *\/$/;"	m	struct:Walker
xSelectCallback2	tsrc/sqliteInt.h	/^  void (*xSelectCallback2)(Walker*,Select*);\/* Second callback for SELECTs *\/$/;"	m	struct:Walker
xSetAuxdata	ext/fts5/fts5.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdata	fts5.c	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi	file:
xSetAuxdata	fts5.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdata	sqlite3.c	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi	file:
xSetAuxdata	sqlite3.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdata	tsrc/fts5.c	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi	file:
xSetAuxdata	tsrc/fts5.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdata	tsrc/sqlite3.h	/^  int (*xSetAuxdata)(Fts5Context*, void *pAux, void(*xDelete)(void*));$/;"	m	struct:Fts5ExtensionApi
xSetAuxdataDestructor	ext/fts5/fts5_tcl.c	/^static void xSetAuxdataDestructor(void *p){$/;"	f	file:
xSetOutputs	ext/fts5/fts5_index.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetOutputs	fts5.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetOutputs	sqlite3.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetOutputs	tsrc/fts5.c	/^  void (*xSetOutputs)(Fts5Iter*, Fts5SegIter*);$/;"	m	struct:Fts5Iter	file:
xSetSystemCall	sqlite3.c	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs	file:
xSetSystemCall	sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xSetSystemCall	tsrc/sqlite3.h	/^  int (*xSetSystemCall)(sqlite3_vfs*, const char *zName, sqlite3_syscall_ptr);$/;"	m	struct:sqlite3_vfs
xShmBarrier	sqlite3.c	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods	file:
xShmBarrier	sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmBarrier	tsrc/sqlite3.h	/^  void (*xShmBarrier)(sqlite3_file*);$/;"	m	struct:sqlite3_io_methods
xShmLock	sqlite3.c	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xShmLock	sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmLock	tsrc/sqlite3.h	/^  int (*xShmLock)(sqlite3_file*, int offset, int n, int flags);$/;"	m	struct:sqlite3_io_methods
xShmMap	sqlite3.c	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods	file:
xShmMap	sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmMap	tsrc/sqlite3.h	/^  int (*xShmMap)(sqlite3_file*, int iPg, int pgsz, int, void volatile**);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	sqlite3.c	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods	file:
xShmUnmap	sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShmUnmap	tsrc/sqlite3.h	/^  int (*xShmUnmap)(sqlite3_file*, int deleteFlag);$/;"	m	struct:sqlite3_io_methods
xShrink	sqlite3.c	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xShrink	sqlite3.h	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShrink	tsrc/sqlite3.h	/^  void (*xShrink)(sqlite3_pcache*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	sqlite3.c	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods	file:
xShutdown	sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods	file:
xShutdown	sqlite3.c	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2	file:
xShutdown	sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xShutdown	tsrc/sqlite3.h	/^  void (*xShutdown)(void*);      \/* Deinitialize the memory allocator *\/$/;"	m	struct:sqlite3_mem_methods
xShutdown	tsrc/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods
xShutdown	tsrc/sqlite3.h	/^  void (*xShutdown)(void*);$/;"	m	struct:sqlite3_pcache_methods2
xSize	sqlite3.c	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods	file:
xSize	sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSize	tsrc/sqlite3.h	/^  int (*xSize)(void*);           \/* Return the size of an allocation *\/$/;"	m	struct:sqlite3_mem_methods
xSleep	sqlite3.c	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs	file:
xSleep	sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSleep	tsrc/sqlite3.h	/^  int (*xSleep)(sqlite3_vfs*, int microseconds);$/;"	m	struct:sqlite3_vfs
xSqllog	sqlite3.c	/^  void(*xSqllog)(void*,sqlite3*,const char*, int);$/;"	m	struct:Sqlite3Config	file:
xSqllog	src/sqliteInt.h	/^  void(*xSqllog)(void*,sqlite3*,const char*, int);$/;"	m	struct:Sqlite3Config
xSqllog	tsrc/sqliteInt.h	/^  void(*xSqllog)(void*,sqlite3*,const char*, int);$/;"	m	struct:Sqlite3Config
xStress	sqlite3.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xStress	src/pcache.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xStress	tsrc/pcache.c	/^  int (*xStress)(void*,PgHdr*);       \/* Call to try make a page clean *\/$/;"	m	struct:PCache	file:
xSync	sqlite3.c	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods	file:
xSync	sqlite3.c	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module	file:
xSync	sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xSync	tsrc/sqlite3.h	/^  int (*xSync)(sqlite3_file*, int flags);$/;"	m	struct:sqlite3_io_methods
xSync	tsrc/sqlite3.h	/^  int (*xSync)(sqlite3_vtab *pVTab);$/;"	m	struct:sqlite3_module
xTableFilter	ext/session/sqlite3session.c	/^  int (*xTableFilter)(void *pCtx, const char *zTab);$/;"	m	struct:sqlite3_session	file:
xTableFilter	sqlite3.c	/^  int (*xTableFilter)(void *pCtx, const char *zTab);$/;"	m	struct:sqlite3_session	file:
xTableFilter	tsrc/sqlite3session.c	/^  int (*xTableFilter)(void *pCtx, const char *zTab);$/;"	m	struct:sqlite3_session	file:
xTask	sqlite3.c	/^  void *(*xTask)(void*);         \/* The thread routine *\/$/;"	m	struct:SQLiteThread	file:
xTask	sqlite3.c	/^  void *(*xTask)(void*);   \/* The routine to run as a thread *\/$/;"	m	struct:SQLiteThread	file:
xTask	src/threads.c	/^  void *(*xTask)(void*);         \/* The thread routine *\/$/;"	m	struct:SQLiteThread	file:
xTask	src/threads.c	/^  void *(*xTask)(void*);   \/* The routine to run as a thread *\/$/;"	m	struct:SQLiteThread	file:
xTask	tsrc/threads.c	/^  void *(*xTask)(void*);         \/* The thread routine *\/$/;"	m	struct:SQLiteThread	file:
xTask	tsrc/threads.c	/^  void *(*xTask)(void*);   \/* The routine to run as a thread *\/$/;"	m	struct:SQLiteThread	file:
xTest	src/test_syscall.c	/^  sqlite3_syscall_ptr xTest;$/;"	m	struct:TestSyscallArray	file:
xTestCallback	sqlite3.c	/^  int (*xTestCallback)(int);        \/* Invoked by sqlite3FaultSim() *\/$/;"	m	struct:Sqlite3Config	file:
xTestCallback	src/sqliteInt.h	/^  int (*xTestCallback)(int);        \/* Invoked by sqlite3FaultSim() *\/$/;"	m	struct:Sqlite3Config
xTestCallback	tsrc/sqliteInt.h	/^  int (*xTestCallback)(int);        \/* Invoked by sqlite3FaultSim() *\/$/;"	m	struct:Sqlite3Config
xToken	ext/fts5/fts5_tcl.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:F5tTokenizerContext	file:
xToken	ext/fts5/fts5_tokenize.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xToken	fts5.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xToken	sqlite3.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xToken	tsrc/fts5.c	/^  int (*xToken)(void*, int, const char*, int, int, int);$/;"	m	struct:PorterContext	file:
xTokenize	ext/fts5/fts5.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	ext/fts5/fts5.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTokenize	fts5.c	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi	file:
xTokenize	fts5.c	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer	file:
xTokenize	fts5.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	fts5.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTokenize	sqlite3.c	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi	file:
xTokenize	sqlite3.c	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer	file:
xTokenize	sqlite3.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	sqlite3.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTokenize	tsrc/fts5.c	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi	file:
xTokenize	tsrc/fts5.c	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer	file:
xTokenize	tsrc/fts5.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	tsrc/fts5.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTokenize	tsrc/sqlite3.h	/^  int (*xTokenize)(Fts5Context*, $/;"	m	struct:Fts5ExtensionApi
xTokenize	tsrc/sqlite3.h	/^  int (*xTokenize)(Fts5Tokenizer*, $/;"	m	struct:fts5_tokenizer
xTokenizeCb	ext/fts5/fts5_tcl.c	/^static int xTokenizeCb($/;"	f	file:
xTokenizeCb2	ext/fts5/fts5_tcl.c	/^static int xTokenizeCb2($/;"	f	file:
xTrace	sqlite3.c	/^  int (*xTrace)(u32,void*,void*,void*);     \/* Trace function *\/$/;"	m	struct:sqlite3	file:
xTrace	src/sqliteInt.h	/^  int (*xTrace)(u32,void*,void*,void*);     \/* Trace function *\/$/;"	m	struct:sqlite3
xTrace	tsrc/sqliteInt.h	/^  int (*xTrace)(u32,void*,void*,void*);     \/* Trace function *\/$/;"	m	struct:sqlite3
xTruncate	sqlite3.c	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods	file:
xTruncate	sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods	file:
xTruncate	sqlite3.c	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2	file:
xTruncate	sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xTruncate	tsrc/sqlite3.h	/^  int (*xTruncate)(sqlite3_file*, sqlite3_int64 size);$/;"	m	struct:sqlite3_io_methods
xTruncate	tsrc/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods
xTruncate	tsrc/sqlite3.h	/^  void (*xTruncate)(sqlite3_pcache*, unsigned iLimit);$/;"	m	struct:sqlite3_pcache_methods2
xUnfetch	sqlite3.c	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods	file:
xUnfetch	sqlite3.h	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnfetch	tsrc/sqlite3.h	/^  int (*xUnfetch)(sqlite3_file*, sqlite3_int64 iOfst, void *p);$/;"	m	struct:sqlite3_io_methods
xUnlock	sqlite3.c	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods	file:
xUnlock	sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlock	tsrc/sqlite3.h	/^  int (*xUnlock)(sqlite3_file*, int);$/;"	m	struct:sqlite3_io_methods
xUnlockNotify	sqlite3.c	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3	file:
xUnlockNotify	src/sqliteInt.h	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3
xUnlockNotify	tsrc/sqliteInt.h	/^  void (*xUnlockNotify)(void **, int);  \/* Unlock notify callback *\/$/;"	m	struct:sqlite3
xUnpin	sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2	file:
xUnpin	sqlite3.c	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods	file:
xUnpin	sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUnpin	tsrc/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, sqlite3_pcache_page*, int discard);$/;"	m	struct:sqlite3_pcache_methods2
xUnpin	tsrc/sqlite3.h	/^  void (*xUnpin)(sqlite3_pcache*, void*, int discard);$/;"	m	struct:sqlite3_pcache_methods
xUpdate	sqlite3.c	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module	file:
xUpdate	sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdate	tsrc/sqlite3.h	/^  int (*xUpdate)(sqlite3_vtab *, int, sqlite3_value **, sqlite3_int64 *);$/;"	m	struct:sqlite3_module
xUpdateCallback	sqlite3.c	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3	file:
xUpdateCallback	src/sqliteInt.h	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3
xUpdateCallback	tsrc/sqliteInt.h	/^  void (*xUpdateCallback)(void*,int, const char*,const char*,sqlite_int64);$/;"	m	struct:sqlite3
xUserData	ext/fts5/fts5.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xUserData	fts5.c	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xUserData	fts5.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xUserData	sqlite3.c	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xUserData	sqlite3.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xUserData	tsrc/fts5.c	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi	file:
xUserData	tsrc/fts5.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xUserData	tsrc/sqlite3.h	/^  void *(*xUserData)(Fts5Context*);$/;"	m	struct:Fts5ExtensionApi
xVdbeBranch	sqlite3.c	/^  void (*xVdbeBranch)(void*,int iSrcLine,u8 eThis,u8 eMx);  \/* Callback *\/$/;"	m	struct:Sqlite3Config	file:
xVdbeBranch	src/sqliteInt.h	/^  void (*xVdbeBranch)(void*,int iSrcLine,u8 eThis,u8 eMx);  \/* Callback *\/$/;"	m	struct:Sqlite3Config
xVdbeBranch	tsrc/sqliteInt.h	/^  void (*xVdbeBranch)(void*,int iSrcLine,u8 eThis,u8 eMx);  \/* Callback *\/$/;"	m	struct:Sqlite3Config
xWalCallback	sqlite3.c	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3	file:
xWalCallback	src/sqliteInt.h	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3
xWalCallback	tsrc/sqliteInt.h	/^  int (*xWalCallback)(void *, sqlite3 *, const char *, int);$/;"	m	struct:sqlite3
xWrite	sqlite3.c	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods	file:
xWrite	sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xWrite	tsrc/sqlite3.h	/^  int (*xWrite)(sqlite3_file*, const void*, int iAmt, sqlite3_int64 iOfst);$/;"	m	struct:sqlite3_io_methods
xferCompatibleIndex	sqlite3.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferCompatibleIndex	src/insert.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferCompatibleIndex	tsrc/insert.c	/^static int xferCompatibleIndex(Index *pDest, Index *pSrc){$/;"	f	file:
xferOptimization	sqlite3.c	/^static int xferOptimization($/;"	f	file:
xferOptimization	src/insert.c	/^static int xferOptimization($/;"	f	file:
xferOptimization	tsrc/insert.c	/^static int xferOptimization($/;"	f	file:
xmax	src/test_rtree.c	/^    double xmax;$/;"	m	struct:Circle::Box	file:
xmin	src/test_rtree.c	/^    double xmin;$/;"	m	struct:Circle::Box	file:
xorMemory	sqlite3.c	/^static void xorMemory(EntropyGatherer *p, unsigned char *x, int sz){$/;"	f	file:
xorMemory	src/os_win.c	/^static void xorMemory(EntropyGatherer *p, unsigned char *x, int sz){$/;"	f	file:
xorMemory	tsrc/os_win.c	/^static void xorMemory(EntropyGatherer *p, unsigned char *x, int sz){$/;"	f	file:
xsliceGeometryCallback	test/speedtest1.c	/^static int xsliceGeometryCallback($/;"	f	file:
xthreadsafe	sqlite3.c	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines	file:
xthreadsafe	sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
xthreadsafe	src/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
xthreadsafe	tsrc/sqlite3ext.h	/^  int (*xthreadsafe)(void);$/;"	m	struct:sqlite3_api_routines
y	src/test_rtree.c	/^  double y;$/;"	m	struct:Cube	file:
y	test/speedtest1.c	/^  unsigned int x, y;         \/* Pseudo-random number generator state *\/$/;"	m	struct:Global	file:
yColCache	sqlite3.c	/^  struct yColCache {$/;"	s	struct:Parse	file:
yColCache	src/sqliteInt.h	/^  struct yColCache {$/;"	s	struct:Parse
yColCache	tsrc/sqliteInt.h	/^  struct yColCache {$/;"	s	struct:Parse
yDbMask	sqlite3.c	/^  typedef unsigned char yDbMask[(SQLITE_MAX_ATTACHED+9)\/8];$/;"	t	file:
yDbMask	sqlite3.c	/^  typedef unsigned int yDbMask;$/;"	t	file:
yDbMask	src/sqliteInt.h	/^  typedef unsigned char yDbMask[(SQLITE_MAX_ATTACHED+9)\/8];$/;"	t
yDbMask	src/sqliteInt.h	/^  typedef unsigned int yDbMask;$/;"	t
yDbMask	tsrc/sqliteInt.h	/^  typedef unsigned char yDbMask[(SQLITE_MAX_ATTACHED+9)\/8];$/;"	t
yDbMask	tsrc/sqliteInt.h	/^  typedef unsigned int yDbMask;$/;"	t
ymax	src/test_rtree.c	/^    double ymax;$/;"	m	struct:Circle::Box	file:
ymin	src/test_rtree.c	/^    double ymin;$/;"	m	struct:Circle::Box	file:
ynVar	sqlite3.c	/^typedef i16 ynVar;$/;"	t	file:
ynVar	sqlite3.c	/^typedef int ynVar;$/;"	t	file:
ynVar	src/sqliteInt.h	/^typedef i16 ynVar;$/;"	t
ynVar	src/sqliteInt.h	/^typedef int ynVar;$/;"	t
ynVar	tsrc/sqliteInt.h	/^typedef i16 ynVar;$/;"	t
ynVar	tsrc/sqliteInt.h	/^typedef int ynVar;$/;"	t
yy0	fts5parse.c	/^  sqlite3Fts5ParserTOKENTYPE yy0;$/;"	m	union:__anon69	file:
yy0	parse.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon40	file:
yy0	sqlite3.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon102	file:
yy0	tsrc/parse.c	/^  sqlite3ParserTOKENTYPE yy0;$/;"	m	union:__anon17	file:
yy11	fts5parse.c	/^  Fts5ExprPhrase* yy11;$/;"	m	union:__anon69	file:
yy145	parse.c	/^  TriggerStep* yy145;$/;"	m	union:__anon40	file:
yy145	sqlite3.c	/^  TriggerStep* yy145;$/;"	m	union:__anon102	file:
yy145	tsrc/parse.c	/^  TriggerStep* yy145;$/;"	m	union:__anon17	file:
yy148	parse.c	/^  ExprList* yy148;$/;"	m	union:__anon40	file:
yy148	sqlite3.c	/^  ExprList* yy148;$/;"	m	union:__anon102	file:
yy148	tsrc/parse.c	/^  ExprList* yy148;$/;"	m	union:__anon17	file:
yy18	fts5parse.c	/^  Fts5ExprNode* yy18;$/;"	m	union:__anon69	file:
yy185	parse.c	/^  SrcList* yy185;$/;"	m	union:__anon40	file:
yy185	sqlite3.c	/^  SrcList* yy185;$/;"	m	union:__anon102	file:
yy185	tsrc/parse.c	/^  SrcList* yy185;$/;"	m	union:__anon17	file:
yy190	parse.c	/^  ExprSpan yy190;$/;"	m	union:__anon40	file:
yy190	sqlite3.c	/^  ExprSpan yy190;$/;"	m	union:__anon102	file:
yy190	tsrc/parse.c	/^  ExprSpan yy190;$/;"	m	union:__anon17	file:
yy194	parse.c	/^  int yy194;$/;"	m	union:__anon40	file:
yy194	sqlite3.c	/^  int yy194;$/;"	m	union:__anon102	file:
yy194	tsrc/parse.c	/^  int yy194;$/;"	m	union:__anon17	file:
yy20	fts5parse.c	/^  int yy20;$/;"	m	union:__anon69	file:
yy243	parse.c	/^  Select* yy243;$/;"	m	union:__anon40	file:
yy243	sqlite3.c	/^  Select* yy243;$/;"	m	union:__anon102	file:
yy243	tsrc/parse.c	/^  Select* yy243;$/;"	m	union:__anon17	file:
yy254	parse.c	/^  IdList* yy254;$/;"	m	union:__anon40	file:
yy254	sqlite3.c	/^  IdList* yy254;$/;"	m	union:__anon102	file:
yy254	tsrc/parse.c	/^  IdList* yy254;$/;"	m	union:__anon17	file:
yy26	fts5parse.c	/^  Fts5ExprNearset* yy26;$/;"	m	union:__anon69	file:
yy285	parse.c	/^  With* yy285;$/;"	m	union:__anon40	file:
yy285	sqlite3.c	/^  With* yy285;$/;"	m	union:__anon102	file:
yy285	tsrc/parse.c	/^  With* yy285;$/;"	m	union:__anon17	file:
yy3	fts5parse.c	/^  Fts5Colset* yy3;$/;"	m	union:__anon69	file:
yy332	parse.c	/^  struct TrigEvent yy332;$/;"	m	union:__anon40	typeref:struct:__anon40::TrigEvent	file:
yy332	sqlite3.c	/^  struct TrigEvent yy332;$/;"	m	union:__anon102	typeref:struct:__anon102::TrigEvent	file:
yy332	tsrc/parse.c	/^  struct TrigEvent yy332;$/;"	m	union:__anon17	typeref:struct:__anon17::TrigEvent	file:
yy354	parse.c	/^  struct LimitVal yy354;$/;"	m	union:__anon40	typeref:struct:__anon40::LimitVal	file:
yy354	sqlite3.c	/^  struct LimitVal yy354;$/;"	m	union:__anon102	typeref:struct:__anon102::LimitVal	file:
yy354	tsrc/parse.c	/^  struct LimitVal yy354;$/;"	m	union:__anon17	typeref:struct:__anon17::LimitVal	file:
yy392	parse.c	/^  struct LikeOp yy392;$/;"	m	union:__anon40	typeref:struct:__anon40::LikeOp	file:
yy392	sqlite3.c	/^  struct LikeOp yy392;$/;"	m	union:__anon102	typeref:struct:__anon102::LikeOp	file:
yy392	tsrc/parse.c	/^  struct LikeOp yy392;$/;"	m	union:__anon17	typeref:struct:__anon17::LikeOp	file:
yy497	parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	union:__anon40	typeref:struct:__anon40::__anon41	file:
yy497	sqlite3.c	/^  struct {int value; int mask;} yy497;$/;"	m	union:__anon102	typeref:struct:__anon102::__anon103	file:
yy497	tsrc/parse.c	/^  struct {int value; int mask;} yy497;$/;"	m	union:__anon17	typeref:struct:__anon17::__anon18	file:
yy72	parse.c	/^  Expr* yy72;$/;"	m	union:__anon40	file:
yy72	sqlite3.c	/^  Expr* yy72;$/;"	m	union:__anon102	file:
yy72	tsrc/parse.c	/^  Expr* yy72;$/;"	m	union:__anon17	file:
yyFallback	fts5parse.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	lempar.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	parse.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	sqlite3.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	tool/lempar.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyFallback	tsrc/parse.c	/^static const YYCODETYPE yyFallback[] = {$/;"	v	file:
yyGrowStack	fts5parse.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyGrowStack	lempar.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyGrowStack	parse.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyGrowStack	sqlite3.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyGrowStack	tool/lempar.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyGrowStack	tsrc/parse.c	/^static int yyGrowStack(yyParser *p){$/;"	f	file:
yyParser	fts5parse.c	/^struct yyParser {$/;"	s	file:
yyParser	fts5parse.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	lempar.c	/^struct yyParser {$/;"	s	file:
yyParser	lempar.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	parse.c	/^struct yyParser {$/;"	s	file:
yyParser	parse.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	sqlite3.c	/^struct yyParser {$/;"	s	file:
yyParser	sqlite3.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	tool/lempar.c	/^struct yyParser {$/;"	s	file:
yyParser	tool/lempar.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyParser	tsrc/parse.c	/^struct yyParser {$/;"	s	file:
yyParser	tsrc/parse.c	/^typedef struct yyParser yyParser;$/;"	t	typeref:struct:yyParser	file:
yyRuleInfo	fts5parse.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon70	file:
yyRuleInfo	lempar.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon6	file:
yyRuleInfo	parse.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon42	file:
yyRuleInfo	sqlite3.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon104	file:
yyRuleInfo	tool/lempar.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon3	file:
yyRuleInfo	tsrc/parse.c	/^} yyRuleInfo[] = {$/;"	v	typeref:struct:__anon19	file:
yyRuleName	fts5parse.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyRuleName	lempar.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyRuleName	parse.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyRuleName	sqlite3.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyRuleName	tool/lempar.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyRuleName	tsrc/parse.c	/^static const char *const yyRuleName[] = {$/;"	v	file:
yyStackEntry	fts5parse.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	fts5parse.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	lempar.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	lempar.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	parse.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	parse.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	sqlite3.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	sqlite3.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	tool/lempar.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	tool/lempar.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackEntry	tsrc/parse.c	/^struct yyStackEntry {$/;"	s	file:
yyStackEntry	tsrc/parse.c	/^typedef struct yyStackEntry yyStackEntry;$/;"	t	typeref:struct:yyStackEntry	file:
yyStackOverflow	fts5parse.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyStackOverflow	lempar.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyStackOverflow	parse.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyStackOverflow	sqlite3.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyStackOverflow	tool/lempar.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyStackOverflow	tsrc/parse.c	/^static void yyStackOverflow(yyParser *yypParser){$/;"	f	file:
yyTokenName	fts5parse.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTokenName	lempar.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTokenName	parse.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTokenName	sqlite3.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTokenName	tool/lempar.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTokenName	tsrc/parse.c	/^static const char *const yyTokenName[] = { $/;"	v	file:
yyTraceFILE	fts5parse.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	lempar.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	parse.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	sqlite3.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	tool/lempar.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTraceFILE	tsrc/parse.c	/^static FILE *yyTraceFILE = 0;$/;"	v	file:
yyTracePrompt	fts5parse.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	lempar.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	parse.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	sqlite3.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	tool/lempar.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTracePrompt	tsrc/parse.c	/^static char *yyTracePrompt = 0;$/;"	v	file:
yyTraceShift	fts5parse.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	fts5parse.c	739;"	d	file:
yyTraceShift	lempar.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	lempar.c	572;"	d	file:
yyTraceShift	parse.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	parse.c	1829;"	d	file:
yyTraceShift	sqlite3.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	sqlite3.c	133325;"	d	file:
yyTraceShift	tool/lempar.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	tool/lempar.c	572;"	d	file:
yyTraceShift	tsrc/parse.c	/^static void yyTraceShift(yyParser *yypParser, int yyNewState){$/;"	f	file:
yyTraceShift	tsrc/parse.c	1829;"	d	file:
yy_accept	fts5parse.c	/^static void yy_accept($/;"	f	file:
yy_accept	lempar.c	/^static void yy_accept($/;"	f	file:
yy_accept	parse.c	/^static void yy_accept($/;"	f	file:
yy_accept	sqlite3.c	/^static void yy_accept($/;"	f	file:
yy_accept	tool/lempar.c	/^static void yy_accept($/;"	f	file:
yy_accept	tsrc/parse.c	/^static void yy_accept($/;"	f	file:
yy_action	fts5parse.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_action	parse.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_action	sqlite3.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_action	tsrc/parse.c	/^static const YYACTIONTYPE yy_action[] = {$/;"	v	file:
yy_default	fts5parse.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_default	parse.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_default	sqlite3.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_default	tsrc/parse.c	/^static const YYACTIONTYPE yy_default[] = {$/;"	v	file:
yy_destructor	fts5parse.c	/^static void yy_destructor($/;"	f	file:
yy_destructor	lempar.c	/^static void yy_destructor($/;"	f	file:
yy_destructor	parse.c	/^static void yy_destructor($/;"	f	file:
yy_destructor	sqlite3.c	/^static void yy_destructor($/;"	f	file:
yy_destructor	tool/lempar.c	/^static void yy_destructor($/;"	f	file:
yy_destructor	tsrc/parse.c	/^static void yy_destructor($/;"	f	file:
yy_find_reduce_action	fts5parse.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_reduce_action	lempar.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_reduce_action	parse.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_reduce_action	sqlite3.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_reduce_action	tool/lempar.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_reduce_action	tsrc/parse.c	/^static int yy_find_reduce_action($/;"	f	file:
yy_find_shift_action	fts5parse.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_find_shift_action	lempar.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_find_shift_action	parse.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_find_shift_action	sqlite3.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_find_shift_action	tool/lempar.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_find_shift_action	tsrc/parse.c	/^static unsigned int yy_find_shift_action($/;"	f	file:
yy_lookahead	fts5parse.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_lookahead	parse.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_lookahead	sqlite3.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_lookahead	tsrc/parse.c	/^static const YYCODETYPE yy_lookahead[] = {$/;"	v	file:
yy_parse_failed	fts5parse.c	/^static void yy_parse_failed($/;"	f	file:
yy_parse_failed	lempar.c	/^static void yy_parse_failed($/;"	f	file:
yy_parse_failed	parse.c	/^static void yy_parse_failed($/;"	f	file:
yy_parse_failed	sqlite3.c	/^static void yy_parse_failed($/;"	f	file:
yy_parse_failed	tool/lempar.c	/^static void yy_parse_failed($/;"	f	file:
yy_parse_failed	tsrc/parse.c	/^static void yy_parse_failed($/;"	f	file:
yy_pop_parser_stack	fts5parse.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_parser_stack	lempar.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_parser_stack	parse.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_parser_stack	sqlite3.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_parser_stack	tool/lempar.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_pop_parser_stack	tsrc/parse.c	/^static void yy_pop_parser_stack(yyParser *pParser){$/;"	f	file:
yy_reduce	fts5parse.c	/^static void yy_reduce($/;"	f	file:
yy_reduce	lempar.c	/^static void yy_reduce($/;"	f	file:
yy_reduce	parse.c	/^static void yy_reduce($/;"	f	file:
yy_reduce	sqlite3.c	/^static void yy_reduce($/;"	f	file:
yy_reduce	tool/lempar.c	/^static void yy_reduce($/;"	f	file:
yy_reduce	tsrc/parse.c	/^static void yy_reduce($/;"	f	file:
yy_reduce_ofst	fts5parse.c	/^static const signed char yy_reduce_ofst[] = {$/;"	v	file:
yy_reduce_ofst	parse.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_reduce_ofst	sqlite3.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_reduce_ofst	tsrc/parse.c	/^static const short yy_reduce_ofst[] = {$/;"	v	file:
yy_shift	fts5parse.c	/^static void yy_shift($/;"	f	file:
yy_shift	lempar.c	/^static void yy_shift($/;"	f	file:
yy_shift	parse.c	/^static void yy_shift($/;"	f	file:
yy_shift	sqlite3.c	/^static void yy_shift($/;"	f	file:
yy_shift	tool/lempar.c	/^static void yy_shift($/;"	f	file:
yy_shift	tsrc/parse.c	/^static void yy_shift($/;"	f	file:
yy_shift_ofst	fts5parse.c	/^static const signed char yy_shift_ofst[] = {$/;"	v	file:
yy_shift_ofst	parse.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_shift_ofst	sqlite3.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_shift_ofst	tsrc/parse.c	/^static const short yy_shift_ofst[] = {$/;"	v	file:
yy_syntax_error	fts5parse.c	/^static void yy_syntax_error($/;"	f	file:
yy_syntax_error	lempar.c	/^static void yy_syntax_error($/;"	f	file:
yy_syntax_error	parse.c	/^static void yy_syntax_error($/;"	f	file:
yy_syntax_error	sqlite3.c	/^static void yy_syntax_error($/;"	f	file:
yy_syntax_error	tool/lempar.c	/^static void yy_syntax_error($/;"	f	file:
yy_syntax_error	tsrc/parse.c	/^static void yy_syntax_error($/;"	f	file:
yyerrcnt	fts5parse.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	lempar.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	parse.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	sqlite3.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	tool/lempar.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyerrcnt	tsrc/parse.c	/^  int yyerrcnt;                 \/* Shifts left before out of the error *\/$/;"	m	struct:yyParser	file:
yyhwm	fts5parse.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyhwm	lempar.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyhwm	parse.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyhwm	sqlite3.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyhwm	tool/lempar.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyhwm	tsrc/parse.c	/^  int yyhwm;                    \/* High-water mark of the stack *\/$/;"	m	struct:yyParser	file:
yyinit	fts5parse.c	/^  int yyinit;$/;"	m	union:__anon69	file:
yyinit	parse.c	/^  int yyinit;$/;"	m	union:__anon40	file:
yyinit	sqlite3.c	/^  int yyinit;$/;"	m	union:__anon102	file:
yyinit	tsrc/parse.c	/^  int yyinit;$/;"	m	union:__anon17	file:
yystack	fts5parse.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	lempar.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	parse.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	sqlite3.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	tool/lempar.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystack	tsrc/parse.c	/^  yyStackEntry *yystack;        \/* The parser's stack *\/$/;"	m	struct:yyParser	file:
yystk0	fts5parse.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystk0	lempar.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystk0	parse.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystk0	sqlite3.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystk0	tool/lempar.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystk0	tsrc/parse.c	/^  yyStackEntry yystk0;          \/* First stack entry *\/$/;"	m	struct:yyParser	file:
yystksz	fts5parse.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystksz	lempar.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystksz	parse.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystksz	sqlite3.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystksz	tool/lempar.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yystksz	tsrc/parse.c	/^  int yystksz;                  \/* Current side of the stack *\/$/;"	m	struct:yyParser	file:
yytestcase	fts5parse.c	155;"	d	file:
yytestcase	fts5parse.c	41;"	d	file:
yytestcase	lempar.c	99;"	d	file:
yytestcase	parse.c	337;"	d	file:
yytestcase	parse.c	40;"	d	file:
yytestcase	sqlite3.c	131564;"	d	file:
yytestcase	sqlite3.c	131853;"	d	file:
yytestcase	tool/lempar.c	99;"	d	file:
yytestcase	tsrc/parse.c	337;"	d	file:
yytestcase	tsrc/parse.c	40;"	d	file:
yytos	fts5parse.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
yytos	lempar.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
yytos	parse.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
yytos	sqlite3.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
yytos	tool/lempar.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
yytos	tsrc/parse.c	/^  yyStackEntry *yytos;          \/* Pointer to top element of the stack *\/$/;"	m	struct:yyParser	file:
z	ext/fts1/fts1.c	/^  const char *z;       \/* Pointer to token text.  Not '\\000' terminated *\/$/;"	m	struct:Token	file:
z	ext/fts2/fts2.c	/^  const char *z;       \/* Pointer to token text.  Not '\\000' terminated *\/$/;"	m	struct:Token	file:
z	ext/fts3/fts3Int.h	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken
z	ext/fts3/fts3_snippet.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	ext/fts3/fts3_test.c	/^  const char *z;                  \/* Pointer to token string *\/$/;"	m	struct:NearToken	file:
z	ext/misc/csv.c	/^  char *z;               \/* Accumulated text for a field *\/$/;"	m	struct:CsvReader	file:
z	ext/misc/eval.c	/^  char *z;               \/* Accumulated output *\/$/;"	m	struct:EvalResult	file:
z	ext/misc/regexp.c	/^  const unsigned char *z;  \/* All text *\/$/;"	m	struct:ReInput	file:
z	ext/misc/spellfix.c	/^  char *z;                 \/* The complete text of the FROM string *\/$/;"	m	struct:EditDist3FromString	file:
z	ext/misc/spellfix.c	/^  char *z;                 \/* The complete text of the TO string *\/$/;"	m	struct:EditDist3ToString	file:
z	mptest/mptest.c	/^  char *z;         \/* the string *\/$/;"	m	struct:String	file:
z	shell.c	/^  char *z;            \/* Accumulated text for a field *\/$/;"	m	struct:ImportCtx	file:
z	sqlite3.c	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::p4union	file:
z	sqlite3.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	sqlite3.c	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken	file:
z	sqlite3.c	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem	file:
z	sqlite3.c	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token	file:
z	src/shell.c	/^  char *z;            \/* Accumulated text for a field *\/$/;"	m	struct:ImportCtx	file:
z	src/sqliteInt.h	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token
z	src/test1.c	/^  char *z;     \/* The space *\/$/;"	m	struct:dstr	file:
z	src/test_multiplex.c	/^    char *z;                          \/* Name of this chunk *\/$/;"	m	struct:multiplexGroup::multiplexReal	file:
z	src/test_rtree.c	/^  double z;$/;"	m	struct:Cube	file:
z	src/vdbe.h	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::p4union
z	src/vdbeInt.h	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem
z	tool/fuzzershell.c	/^  char *z;               \/* Accumulated output *\/$/;"	m	struct:EvalResult	file:
z	tool/sqldiff.c	/^  char *z;        \/* Text of the string *\/$/;"	m	struct:Str	file:
z	tool/sqldiff.c	/^  char z[NHASH];    \/* The values that have been hashed *\/$/;"	m	struct:hash	file:
z	tsrc/fts1.c	/^  const char *z;       \/* Pointer to token text.  Not '\\000' terminated *\/$/;"	m	struct:Token	file:
z	tsrc/fts2.c	/^  const char *z;       \/* Pointer to token text.  Not '\\000' terminated *\/$/;"	m	struct:Token	file:
z	tsrc/fts3Int.h	/^  char *z;                        \/* Text of the token *\/$/;"	m	struct:Fts3PhraseToken
z	tsrc/fts3_snippet.c	/^  char *z;                        \/* Pointer to buffer containing string *\/$/;"	m	struct:StrBuffer	file:
z	tsrc/shell.c	/^  char *z;            \/* Accumulated text for a field *\/$/;"	m	struct:ImportCtx	file:
z	tsrc/sqliteInt.h	/^  const char *z;     \/* Text of the token.  Not NULL-terminated! *\/$/;"	m	struct:Token
z	tsrc/vdbe.h	/^    char *z;               \/* Pointer to data for string (char array) types *\/$/;"	m	union:VdbeOp::p4union
z	tsrc/vdbeInt.h	/^  char *z;            \/* String or BLOB value *\/$/;"	m	struct:Mem
zAlias	sqlite3.c	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item	file:
zAlias	src/sqliteInt.h	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item
zAlias	tsrc/sqliteInt.h	/^    char *zAlias;     \/* The "B" part of a "A AS B" phrase.  zName is the "A" *\/$/;"	m	struct:SrcList::SrcList_item
zAlloc	src/test_onefile.c	/^  char *zAlloc;$/;"	m	struct:tmp_file	file:
zArg	ext/fts5/fts5_test_mi.c	/^  char *zArg;                     \/* nul-term'd copy of 2nd arg *\/$/;"	m	struct:Fts5MatchinfoCtx	file:
zArg	src/test4.c	/^  char *zArg;            \/* argument usable by xOp *\/$/;"	m	struct:Thread	file:
zArg	src/test7.c	/^  char *zArg;              \/* argument usable by xOp *\/$/;"	m	struct:Thread	file:
zArgv0	test/fuzzcheck.c	/^  const char *zArgv0;              \/* Name of program *\/$/;"	m	struct:GlobalVars	file:
zArgv0	tool/dbhash.c	/^  const char *zArgv0;       \/* Name of program *\/$/;"	m	struct:GlobalVars	file:
zArgv0	tool/fuzzershell.c	/^  const char *zArgv0;              \/* Name of program *\/$/;"	m	struct:GlobalVars	file:
zArgv0	tool/sqldiff.c	/^  const char *zArgv0;       \/* Name of program *\/$/;"	m	struct:GlobalVars	file:
zAuth	src/tclsqlite.c	/^  char *zAuth;               \/* The authorization callback routine *\/$/;"	m	struct:SqliteDb	file:
zAuth	tsrc/tclsqlite.c	/^  char *zAuth;               \/* The authorization callback routine *\/$/;"	m	struct:SqliteDb	file:
zAuthContext	sqlite3.c	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext	file:
zAuthContext	sqlite3.c	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse	file:
zAuthContext	src/sqliteInt.h	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext
zAuthContext	src/sqliteInt.h	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse
zAuthContext	tsrc/sqliteInt.h	/^  const char *zAuthContext;   \/* Put saved Parse.zAuthContext here *\/$/;"	m	struct:AuthContext
zAuthContext	tsrc/sqliteInt.h	/^  const char *zAuthContext; \/* The 6th parameter to db->xAuth callbacks *\/$/;"	m	struct:Parse
zAuthPW	sqlite3.c	/^  char *zAuthPW;                \/* Password used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zAuthPW	src/sqliteInt.h	/^  char *zAuthPW;                \/* Password used to authenticate *\/$/;"	m	struct:sqlite3_userauth
zAuthPW	tsrc/sqliteInt.h	/^  char *zAuthPW;                \/* Password used to authenticate *\/$/;"	m	struct:sqlite3_userauth
zAuthUser	sqlite3.c	/^  char *zAuthUser;              \/* User name used to authenticate *\/$/;"	m	struct:sqlite3_userauth	file:
zAuthUser	src/sqliteInt.h	/^  char *zAuthUser;              \/* User name used to authenticate *\/$/;"	m	struct:sqlite3_userauth
zAuthUser	tsrc/sqliteInt.h	/^  char *zAuthUser;              \/* User name used to authenticate *\/$/;"	m	struct:sqlite3_userauth
zBase	sqlite3.c	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum	file:
zBase	sqlite3.c	/^  char zBase[100];   \/* Initial space *\/$/;"	m	struct:Explain	file:
zBase	src/sqliteInt.h	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum
zBase	src/vdbeInt.h	/^  char zBase[100];   \/* Initial space *\/$/;"	m	struct:Explain
zBase	tsrc/sqliteInt.h	/^  char *zBase;         \/* A base allocation.  Not from malloc. *\/$/;"	m	struct:StrAccum
zBase	tsrc/vdbeInt.h	/^  char zBase[100];   \/* Initial space *\/$/;"	m	struct:Explain
zBasis	ext/misc/fuzzer.c	/^  char *zBasis;              \/* Word being fuzzed *\/$/;"	m	struct:fuzzer_stem	file:
zBuf	ext/async/sqlite3async.c	/^  char *zBuf;         \/* Data to write to file (or NULL if op!=ASYNC_WRITE) *\/$/;"	m	struct:AsyncWrite	file:
zBuf	ext/misc/amatch.c	/^  char *zBuf;                \/* Temp-use buffer space *\/$/;"	m	struct:amatch_cursor	file:
zBuf	ext/misc/fuzzer.c	/^  char *zBuf;                \/* Temporary use buffer *\/$/;"	m	struct:fuzzer_cursor	file:
zBuf	ext/misc/json1.c	/^  char *zBuf;              \/* Append JSON content here *\/$/;"	m	struct:JsonString	file:
zBuf	sqlite3.c	/^  char *zBuf;              \/* Append JSON content here *\/$/;"	m	struct:JsonString	file:
zBuf	src/test6.c	/^  u8 *zBuf;                    \/* Pointer to copy of written data *\/$/;"	m	struct:WriteBuffer	file:
zBuf	src/test_fs.c	/^  char *zBuf;$/;"	m	struct:fs_cursor	file:
zBuf	tsrc/json1.c	/^  char *zBuf;              \/* Append JSON content here *\/$/;"	m	struct:JsonString	file:
zBuffer	ext/fts2/fts2_icu.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zBuffer	ext/fts3/fts3_icu.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zBuffer	sqlite3.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zBuffer	tsrc/fts2_icu.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zBuffer	tsrc/fts3_icu.c	/^  char *zBuffer;$/;"	m	struct:IcuCursor	file:
zBusy	src/tclsqlite.c	/^  char *zBusy;               \/* The busy callback routine *\/$/;"	m	struct:SqliteDb	file:
zBusy	tsrc/tclsqlite.c	/^  char *zBusy;               \/* The busy callback routine *\/$/;"	m	struct:SqliteDb	file:
zCanonicalName	sqlite3.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zCanonicalName	src/os_unix.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zCanonicalName	tsrc/os_unix.c	/^  char *zCanonicalName;         \/* Canonical filename *\/$/;"	m	struct:vxworksFileId	file:
zChunk	sqlite3.c	/^  u8 zChunk[8];                   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zChunk	src/memjournal.c	/^  u8 zChunk[8];                   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zChunk	tsrc/memjournal.c	/^  u8 zChunk[8];                   \/* Content of this chunk *\/$/;"	m	struct:FileChunk	file:
zClassName	ext/misc/amatch.c	/^  char *zClassName;          \/* Name of this class.  Default: "amatch" *\/$/;"	m	struct:amatch_vtab	file:
zClassName	ext/misc/fuzzer.c	/^  char *zClassName;          \/* Name of this class.  Default: "fuzzer" *\/$/;"	m	struct:fuzzer_vtab	file:
zClose	ext/fts5/fts5_aux.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zClose	fts5.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zClose	sqlite3.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zClose	tsrc/fts5.c	/^  const char *zClose;             \/* Closing highlight *\/$/;"	m	struct:HighlightContext	file:
zCol	sqlite3.c	/^    char *zCol;           \/* Name of column in zTo.  If NULL use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap	file:
zCol	src/sqliteInt.h	/^    char *zCol;           \/* Name of column in zTo.  If NULL use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap
zCol	tsrc/sqliteInt.h	/^    char *zCol;           \/* Name of column in zTo.  If NULL use PRIMARY KEY *\/$/;"	m	struct:FKey::sColMap
zColAff	sqlite3.c	/^  char *zColAff;           \/* String defining the affinity of each column *\/$/;"	m	struct:Index	file:
zColAff	sqlite3.c	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table	file:
zColAff	src/sqliteInt.h	/^  char *zColAff;           \/* String defining the affinity of each column *\/$/;"	m	struct:Index
zColAff	src/sqliteInt.h	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table
zColAff	tsrc/sqliteInt.h	/^  char *zColAff;           \/* String defining the affinity of each column *\/$/;"	m	struct:Index
zColAff	tsrc/sqliteInt.h	/^  char *zColAff;       \/* String defining the affinity of each column *\/$/;"	m	struct:Table
zColl	sqlite3.c	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column	file:
zColl	src/sqliteInt.h	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column
zColl	tsrc/sqliteInt.h	/^  char *zColl;     \/* Collating sequence.  If NULL, use the default *\/$/;"	m	struct:Column
zCollName	sqlite3.c	/^  const char *zCollName;     \/* Required collating sequence, if not NULL *\/$/;"	m	struct:WhereScan	file:
zCollName	src/whereInt.h	/^  const char *zCollName;     \/* Required collating sequence, if not NULL *\/$/;"	m	struct:WhereScan
zCollName	tsrc/whereInt.h	/^  const char *zCollName;     \/* Required collating sequence, if not NULL *\/$/;"	m	struct:WhereScan
zComment	sqlite3.c	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp	file:
zComment	src/vdbe.h	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp
zComment	tsrc/vdbe.h	/^  char *zComment;          \/* Comment to improve readability *\/$/;"	m	struct:VdbeOp
zCommit	src/tclsqlite.c	/^  char *zCommit;             \/* The commit hook callback routine *\/$/;"	m	struct:SqliteDb	file:
zCommit	tsrc/tclsqlite.c	/^  char *zCommit;             \/* The commit hook callback routine *\/$/;"	m	struct:SqliteDb	file:
zContent	ext/fts5/fts5Int.h	/^  char *zContent;                 \/* content table *\/ $/;"	m	struct:Fts5Config
zContent	fts5.c	/^  char *zContent;                 \/* content table *\/ $/;"	m	struct:Fts5Config	file:
zContent	sqlite3.c	/^  char *zContent;                 \/* content table *\/ $/;"	m	struct:Fts5Config	file:
zContent	tsrc/fts5.c	/^  char *zContent;                 \/* content table *\/ $/;"	m	struct:Fts5Config	file:
zContentExprlist	ext/fts5/fts5Int.h	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config
zContentExprlist	fts5.c	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config	file:
zContentExprlist	sqlite3.c	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config	file:
zContentExprlist	tsrc/fts5.c	/^  char *zContentExprlist;$/;"	m	struct:Fts5Config	file:
zContentRowid	ext/fts5/fts5Int.h	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/ $/;"	m	struct:Fts5Config
zContentRowid	fts5.c	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/ $/;"	m	struct:Fts5Config	file:
zContentRowid	sqlite3.c	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/ $/;"	m	struct:Fts5Config	file:
zContentRowid	tsrc/fts5.c	/^  char *zContentRowid;            \/* "content_rowid=" option value *\/ $/;"	m	struct:Fts5Config	file:
zContentTbl	ext/fts3/fts3Int.h	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table
zContentTbl	sqlite3.c	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zContentTbl	tsrc/fts3Int.h	/^  char *zContentTbl;              \/* content=xxx option, or NULL *\/$/;"	m	struct:Fts3Table
zCost	ext/misc/amatch.c	/^  char zCost[10];       \/* Cost key (text rendering of rCost) *\/$/;"	m	struct:amatch_word	file:
zCostTab	ext/misc/amatch.c	/^  char *zCostTab;            \/* Name of edit-cost-table *\/$/;"	m	struct:amatch_vtab	file:
zCostTable	ext/misc/spellfix.c	/^  char *zCostTable;          \/* Table holding edit-distance cost numbers *\/$/;"	m	struct:spellfix1_vtab	file:
zCrashFile	src/test6.c	/^  char zCrashFile[500];        \/* Crash during an xSync() on this file *\/ $/;"	m	struct:CrashGlobal	file:
zCteErr	sqlite3.c	/^    const char *zCteErr;            \/* Error message for circular references *\/$/;"	m	struct:With::Cte	file:
zCteErr	src/sqliteInt.h	/^    const char *zCteErr;            \/* Error message for circular references *\/$/;"	m	struct:With::Cte
zCteErr	tsrc/sqliteInt.h	/^    const char *zCteErr;            \/* Error message for circular references *\/$/;"	m	struct:With::Cte
zData	ext/misc/csv.c	/^  char *zData;                    \/* Raw CSV data in lieu of zFilename *\/$/;"	m	struct:CsvTable	file:
zData	ext/rtree/rtree.c	/^  u8 *zData;                  \/* Content of the node, as should be on disk *\/$/;"	m	struct:RtreeNode	file:
zData	sqlite3.c	/^  u8 *zData;                  \/* Content of the node, as should be on disk *\/$/;"	m	struct:RtreeNode	file:
zData	src/test6.c	/^  u8 *zData;                           \/* Buffer containing file contents *\/$/;"	m	struct:CrashFile	file:
zData	tsrc/rtree.c	/^  u8 *zData;                  \/* Content of the node, as should be on disk *\/$/;"	m	struct:RtreeNode	file:
zDataTbl	ext/fts5/fts5_index.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	ext/rbu/sqlite3rbu.c	/^  const char *zDataTbl;           \/* Name of rbu db table (or null) *\/$/;"	m	struct:RbuObjIter	file:
zDataTbl	fts5.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	sqlite3.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	sqlite3.c	/^  const char *zDataTbl;           \/* Name of rbu db table (or null) *\/$/;"	m	struct:RbuObjIter	file:
zDataTbl	tsrc/fts5.c	/^  char *zDataTbl;                 \/* Name of %_data table *\/$/;"	m	struct:Fts5Index	file:
zDataTbl	tsrc/sqlite3rbu.c	/^  const char *zDataTbl;           \/* Name of rbu db table (or null) *\/$/;"	m	struct:RbuObjIter	file:
zDatabase	sqlite3.c	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zDatabase	sqlite3.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDatabase	src/analyze.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDatabase	src/sqliteInt.h	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item
zDatabase	tsrc/analyze.c	/^  const char *zDatabase;$/;"	m	struct:analysisInfo	file:
zDatabase	tsrc/sqliteInt.h	/^    char *zDatabase;  \/* Name of database holding this table *\/$/;"	m	struct:SrcList::SrcList_item
zDb	ext/fts1/fts1.c	/^  const char *zDb;                 \/* logical database name *\/$/;"	m	struct:fulltext_vtab	file:
zDb	ext/fts1/fts1.c	/^  const char *zDb;         \/* Logical database name *\/$/;"	m	struct:TableSpec	file:
zDb	ext/fts2/fts2.c	/^  const char *zDb;                 \/* logical database name *\/$/;"	m	struct:fulltext_vtab	file:
zDb	ext/fts2/fts2.c	/^  const char *zDb;         \/* Logical database name *\/$/;"	m	struct:TableSpec	file:
zDb	ext/fts3/fts3Int.h	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table
zDb	ext/fts5/fts5Int.h	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config
zDb	ext/misc/amatch.c	/^  char *zDb;                 \/* Name of database.  (ex: "main") *\/$/;"	m	struct:amatch_vtab	file:
zDb	ext/misc/closure.c	/^  char *zDb;                 \/* Name of database.  (ex: "main") *\/$/;"	m	struct:closure_vtab	file:
zDb	ext/rtree/rtree.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	ext/session/sqlite3session.c	/^  char *zDb;                      \/* Name of database session is attached to *\/$/;"	m	struct:sqlite3_session	file:
zDb	fts5.c	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config	file:
zDb	sqlite3.c	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config	file:
zDb	sqlite3.c	/^  char *zDb;                      \/* Name of database session is attached to *\/$/;"	m	struct:sqlite3_session	file:
zDb	sqlite3.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	sqlite3.c	/^  char *zDb;              \/* Database name *\/$/;"	m	struct:Incrblob	file:
zDb	sqlite3.c	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table	file:
zDb	sqlite3.c	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer	file:
zDb	src/sqliteInt.h	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer
zDb	src/test_fs.c	/^  char *zDb;                      \/* Name of db containing zTbl *\/$/;"	m	struct:fs_vtab	file:
zDb	src/vdbeblob.c	/^  char *zDb;              \/* Database name *\/$/;"	m	struct:Incrblob	file:
zDb	test/tt3_stress.c	/^  const char *zDb;$/;"	m	struct:Stress2Ctx	file:
zDb	tsrc/fts1.c	/^  const char *zDb;                 \/* logical database name *\/$/;"	m	struct:fulltext_vtab	file:
zDb	tsrc/fts1.c	/^  const char *zDb;         \/* Logical database name *\/$/;"	m	struct:TableSpec	file:
zDb	tsrc/fts2.c	/^  const char *zDb;                 \/* logical database name *\/$/;"	m	struct:fulltext_vtab	file:
zDb	tsrc/fts2.c	/^  const char *zDb;         \/* Logical database name *\/$/;"	m	struct:TableSpec	file:
zDb	tsrc/fts3Int.h	/^  const char *zDb;                \/* logical database name *\/$/;"	m	struct:Fts3Table
zDb	tsrc/fts5.c	/^  char *zDb;                      \/* Database holding FTS index (e.g. "main") *\/$/;"	m	struct:Fts5Config	file:
zDb	tsrc/rtree.c	/^  char *zDb;                  \/* Name of database containing r-tree table *\/$/;"	m	struct:Rtree	file:
zDb	tsrc/sqlite3session.c	/^  char *zDb;                      \/* Name of database session is attached to *\/$/;"	m	struct:sqlite3_session	file:
zDb	tsrc/sqliteInt.h	/^  const char *zDb;    \/* Make sure all objects are contained in this database *\/$/;"	m	struct:DbFixer
zDb	tsrc/vdbeblob.c	/^  char *zDb;              \/* Database name *\/$/;"	m	struct:Incrblob	file:
zDbFile	mptest/mptest.c	/^  char *zDbFile;         \/* Name of the database *\/$/;"	m	struct:Global	file:
zDbFilename	shell.c	/^  const char *zDbFilename;    \/* name of the database file *\/$/;"	m	struct:ShellState	file:
zDbFilename	src/shell.c	/^  const char *zDbFilename;    \/* name of the database file *\/$/;"	m	struct:ShellState	file:
zDbFilename	tsrc/shell.c	/^  const char *zDbFilename;    \/* name of the database file *\/$/;"	m	struct:ShellState	file:
zDbName	ext/misc/spellfix.c	/^  char *zDbName;             \/* Name of database holding this table *\/$/;"	m	struct:spellfix1_vtab	file:
zDel	ext/rbu/sqlite3rbu.c	/^  char *zDel;                     \/* Delete this when closing file *\/$/;"	m	struct:rbu_file	file:
zDel	sqlite3.c	/^  char *zDel;                     \/* Delete this when closing file *\/$/;"	m	struct:rbu_file	file:
zDel	tsrc/sqlite3rbu.c	/^  char *zDel;                     \/* Delete this when closing file *\/$/;"	m	struct:rbu_file	file:
zDeleteOnClose	sqlite3.c	/^  LPWSTR zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDeleteOnClose	src/os_win.c	/^  LPWSTR zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDeleteOnClose	tsrc/os_win.c	/^  LPWSTR zDeleteOnClose;  \/* Name of file to delete when closing *\/$/;"	m	struct:winFile	file:
zDelim	ext/fts1/simple_tokenizer.c	/^  const char *zDelim;          \/* token delimiters *\/$/;"	m	struct:simple_tokenizer	file:
zDestFile	ext/misc/scrub.c	/^  const char *zDestFile;   \/* Name of the destination file *\/$/;"	m	struct:ScrubState	file:
zDestTable	shell.c	/^  char *zDestTable;      \/* Name of destination table when MODE_Insert *\/$/;"	m	struct:ShellState	file:
zDestTable	src/shell.c	/^  char *zDestTable;      \/* Name of destination table when MODE_Insert *\/$/;"	m	struct:ShellState	file:
zDestTable	tsrc/shell.c	/^  char *zDestTable;      \/* Name of destination table when MODE_Insert *\/$/;"	m	struct:ShellState	file:
zDir	src/test_fs.c	/^  char *zDir;                     \/* Buffer containing directory scanned *\/$/;"	m	struct:FsdirCsr	file:
zDots	test/speedtest1.c	/^static const char zDots[] =$/;"	v	file:
zEnd	sqlite3.c	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan	file:
zEnd	src/sqliteInt.h	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan
zEnd	tsrc/sqliteInt.h	/^  const char *zEnd;     \/* One character past the end of input text *\/$/;"	m	struct:ExprSpan
zErr	ext/fts5/fts5_expr.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErr	ext/misc/csv.c	/^  char zErr[CSV_MXERR];  \/* Error message *\/$/;"	m	struct:CsvReader	file:
zErr	ext/misc/regexp.c	/^  const char *zErr;           \/* Error message to return *\/$/;"	m	struct:ReCompiled	file:
zErr	ext/misc/scrub.c	/^  char *zErr;              \/* Error message text *\/$/;"	m	struct:ScrubState	file:
zErr	fts5.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErr	sqlite3.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErr	src/test4.c	/^  char *zErr;           \/* operation error *\/$/;"	m	struct:Thread	file:
zErr	src/test7.c	/^  char *zErr;              \/* operation error *\/$/;"	m	struct:Thread	file:
zErr	test/threadtest3.c	/^  char *zErr;$/;"	m	struct:Error	file:
zErr	tool/offsets.c	/^  char *zErr;           \/* Error message text *\/$/;"	m	struct:GState	file:
zErr	tsrc/fts5.c	/^  char *zErr;$/;"	m	struct:Fts5Parse	file:
zErrLog	mptest/mptest.c	/^  char *zErrLog;         \/* Filename for error log *\/$/;"	m	struct:Global	file:
zErrMsg	sqlite3.c	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab	file:
zErrMsg	sqlite3.c	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe	file:
zErrMsg	sqlite3.c	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse	file:
zErrMsg	sqlite3.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrMsg	src/sqliteInt.h	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse
zErrMsg	src/table.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	src/vdbeInt.h	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe
zErrMsg	tsrc/sqlite3.h	/^  char *zErrMsg;                  \/* Error message from sqlite3_mprintf() *\/$/;"	m	struct:sqlite3_vtab
zErrMsg	tsrc/sqliteInt.h	/^  char *zErrMsg;       \/* An error message *\/$/;"	m	struct:Parse
zErrMsg	tsrc/table.c	/^  char *zErrMsg;     \/* Error message text, if an error occurs *\/$/;"	m	struct:TabResult	file:
zErrMsg	tsrc/vdbeInt.h	/^  char *zErrMsg;          \/* Error message written here *\/$/;"	m	struct:Vdbe
zErrmsg	ext/rbu/sqlite3rbu.c	/^  char *zErrmsg;                  \/* Error message if rc!=SQLITE_OK *\/$/;"	m	struct:sqlite3rbu	file:
zErrmsg	sqlite3.c	/^  char *zErrmsg;                  \/* Error message if rc!=SQLITE_OK *\/$/;"	m	struct:sqlite3rbu	file:
zErrmsg	tsrc/sqlite3rbu.c	/^  char *zErrmsg;                  \/* Error message if rc!=SQLITE_OK *\/$/;"	m	struct:sqlite3rbu	file:
zFName	src/test_vfstrace.c	/^  const char *zFName;       \/* Base name of the file *\/$/;"	m	struct:vfstrace_file	file:
zFile	ext/async/sqlite3async.c	/^  char *zFile;$/;"	m	struct:AsyncLock	file:
zFile	shell.c	/^  const char *zFile;  \/* Name of the input file *\/$/;"	m	struct:ImportCtx	file:
zFile	src/shell.c	/^  const char *zFile;  \/* Name of the input file *\/$/;"	m	struct:ImportCtx	file:
zFile	src/test_osinst.c	/^  char *zFile;                    \/* File name for pFd *\/$/;"	m	struct:VfslogVtab	file:
zFile	src/test_vfs.c	/^  char *zFile;                    \/* Associated file name *\/$/;"	m	struct:TestvfsBuffer	file:
zFile	test/threadtest1.c	/^  const char *zFile;  \/* Filename - used for error reporting *\/$/;"	m	struct:QueryResult	file:
zFile	tsrc/shell.c	/^  const char *zFile;  \/* Name of the input file *\/$/;"	m	struct:ImportCtx	file:
zFilename	ext/misc/csv.c	/^  char *zFilename;                \/* Name of the CSV file *\/$/;"	m	struct:CsvTable	file:
zFilename	ext/misc/vfslog.c	/^  char *zFilename;                \/* Name of database file.  NULL for journal *\/$/;"	m	struct:VLogLog	file:
zFilename	sqlite3.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	sqlite3.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	sqlite3.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFilename	src/os_unix.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFilename	src/os_win.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	src/pager.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFilename	src/test4.c	/^  char *zFilename;       \/* Name of database file *\/$/;"	m	struct:Thread	file:
zFilename	src/test7.c	/^  char *zFilename;         \/* Name of database file *\/$/;"	m	struct:Thread	file:
zFilename	src/test_quota.c	/^  char *zFilename;                \/* Name of this file *\/$/;"	m	struct:quotaFile	file:
zFilename	src/test_vfs.c	/^  const char *zFilename;          \/* Filename as passed to xOpen() *\/$/;"	m	struct:TestvfsFd	file:
zFilename	test/fuzzcheck.c	/^  char *zFilename;        \/* Filename.  NULL for delete-on-close. From malloc() *\/$/;"	m	struct:VFile	file:
zFilename	tsrc/os_unix.c	/^  char *zFilename;           \/* Name of the mmapped file *\/$/;"	m	struct:unixShmNode	file:
zFilename	tsrc/os_win.c	/^  char *zFilename;           \/* Name of the file *\/$/;"	m	struct:winShmNode	file:
zFilename	tsrc/pager.c	/^  char *zFilename;            \/* Name of the database file *\/$/;"	m	struct:Pager	file:
zFreeOnClose	shell.c	/^  char *zFreeOnClose;         \/* Filename to free when closing *\/$/;"	m	struct:ShellState	file:
zFreeOnClose	src/shell.c	/^  char *zFreeOnClose;         \/* Filename to free when closing *\/$/;"	m	struct:ShellState	file:
zFreeOnClose	tsrc/shell.c	/^  char *zFreeOnClose;         \/* Filename to free when closing *\/$/;"	m	struct:ShellState	file:
zFrom	ext/misc/amatch.c	/^  char *zFrom;             \/* Transform from (a string from user input) *\/$/;"	m	struct:amatch_rule	file:
zFrom	ext/misc/fuzzer.c	/^  char *zFrom;                \/* Transform from *\/$/;"	m	struct:fuzzer_rule	file:
zFts5Db	ext/fts5/fts5_vocab.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Db	fts5.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Db	sqlite3.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Db	tsrc/fts5.c	/^  char *zFts5Db;                  \/* Db containing fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	ext/fts5/fts5_vocab.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	fts5.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	sqlite3.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFts5Tbl	tsrc/fts5.c	/^  char *zFts5Tbl;                 \/* Name of fts5 table *\/$/;"	m	struct:Fts5VocabTable	file:
zFunc	ext/fts5/fts5_main.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zFunc	fts5.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zFunc	sqlite3.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zFunc	tsrc/fts5.c	/^  char *zFunc;                    \/* Function name (nul-terminated) *\/$/;"	m	struct:Fts5Auxiliary	file:
zHash	ext/misc/spellfix.c	/^    char zHash[SPELLFIX_MX_HASH]; \/* the phonehash used for this match *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
zHash	ext/misc/spellfix.c	/^  char zHash[SPELLFIX_MX_HASH];    \/* The current phonehash for zPattern *\/$/;"	m	struct:MatchQuery	file:
zHdr	tool/mkkeywordhash.c	/^static const char zHdr[] = $/;"	v	file:
zHelp	shell.c	/^static char zHelp[] =$/;"	v	file:
zHelp	src/shell.c	/^static char zHelp[] =$/;"	v	file:
zHelp	test/speedtest1.c	/^static const char zHelp[] =$/;"	v	file:
zHelp	tsrc/shell.c	/^static char zHelp[] =$/;"	v	file:
zIdColumn	ext/misc/closure.c	/^  char *zIdColumn;           \/* Name of ID column of zTableName *\/$/;"	m	struct:closure_cursor	file:
zIdColumn	ext/misc/closure.c	/^  char *zIdColumn;           \/* Name of ID column of zTableName *\/$/;"	m	struct:closure_vtab	file:
zIdx	ext/rbu/sqlite3rbu.c	/^  char *zIdx;$/;"	m	struct:RbuState	file:
zIdx	ext/rbu/sqlite3rbu.c	/^  const char *zIdx;               \/* Name of target db index (or null) *\/$/;"	m	struct:RbuObjIter	file:
zIdx	sqlite3.c	/^  char *zIdx;$/;"	m	struct:RbuState	file:
zIdx	sqlite3.c	/^  const char *zIdx;               \/* Name of target db index (or null) *\/$/;"	m	struct:RbuObjIter	file:
zIdx	src/test_sqllog.c	/^  char zIdx[SQLLOG_NAMESZ];       \/* Full path to *.idx file *\/$/;"	m	struct:SLGlobal	file:
zIdx	tsrc/sqlite3rbu.c	/^  char *zIdx;$/;"	m	struct:RbuState	file:
zIdx	tsrc/sqlite3rbu.c	/^  const char *zIdx;               \/* Name of target db index (or null) *\/$/;"	m	struct:RbuObjIter	file:
zIn	ext/fts5/fts5_aux.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIn	ext/misc/csv.c	/^  char *zIn;             \/* The input buffer *\/$/;"	m	struct:CsvReader	file:
zIn	fts5.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIn	sqlite3.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIn	src/test_server.c	/^  const char *zIn;             \/* Input filename or SQL statement *\/$/;"	m	struct:SqlMessage	file:
zIn	tsrc/fts5.c	/^  const char *zIn;                \/* Input text *\/$/;"	m	struct:HighlightContext	file:
zIndexedBy	sqlite3.c	/^      char *zIndexedBy;    \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	union:SrcList::SrcList_item::__anon85	file:
zIndexedBy	src/sqliteInt.h	/^      char *zIndexedBy;    \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	union:SrcList::SrcList_item::__anon59
zIndexedBy	tsrc/sqliteInt.h	/^      char *zIndexedBy;    \/* Identifier from "INDEXED BY <zIndex>" clause *\/$/;"	m	union:SrcList::SrcList_item::__anon27
zInit	ext/misc/regexp.c	/^  unsigned char zInit[12];    \/* Initial text to match *\/$/;"	m	struct:ReCompiled	file:
zInput	ext/fts1/fts1_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	ext/fts2/fts2_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	ext/fts3/fts3_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	ext/fts3/fts3_tokenize_vtab.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts3tokCursor	file:
zInput	ext/fts5/fts5_tcl.c	/^  const char *zInput;$/;"	m	struct:F5tTokenizeCtx	file:
zInput	ext/fts5/fts5_test_tok.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts5tokCursor	file:
zInput	ext/misc/amatch.c	/^  char *zInput;              \/* Input word to match against *\/$/;"	m	struct:amatch_cursor	file:
zInput	sqlite3.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts3tokCursor	file:
zInput	sqlite3.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	tsrc/fts1_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	tsrc/fts2_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	tsrc/fts3_porter.c	/^  const char *zInput;          \/* input we are tokenizing *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zInput	tsrc/fts3_tokenize_vtab.c	/^  char *zInput;                   \/* Input string *\/$/;"	m	struct:Fts3tokCursor	file:
zJContent	ext/misc/json1.c	/^    const char *zJContent; \/* Content for INT, REAL, and STRING *\/$/;"	m	union:JsonNode::__anon74	file:
zJContent	sqlite3.c	/^    const char *zJContent; \/* Content for INT, REAL, and STRING *\/$/;"	m	union:JsonNode::__anon106	file:
zJContent	tsrc/json1.c	/^    const char *zJContent; \/* Content for INT, REAL, and STRING *\/$/;"	m	union:JsonNode::__anon37	file:
zJournal	sqlite3.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	sqlite3.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:MemJournal	file:
zJournal	src/memjournal.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:MemJournal	file:
zJournal	src/pager.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJournal	tsrc/memjournal.c	/^  const char *zJournal;           \/* Name of the journal file *\/$/;"	m	struct:MemJournal	file:
zJournal	tsrc/pager.c	/^  char *zJournal;             \/* Name of the journal file *\/$/;"	m	struct:Pager	file:
zJson	ext/misc/json1.c	/^  char *zJson;               \/* Input JSON *\/$/;"	m	struct:JsonEachCursor	file:
zJson	ext/misc/json1.c	/^  const char *zJson; \/* Original JSON string *\/$/;"	m	struct:JsonParse	file:
zJson	sqlite3.c	/^  char *zJson;               \/* Input JSON *\/$/;"	m	struct:JsonEachCursor	file:
zJson	sqlite3.c	/^  const char *zJson; \/* Original JSON string *\/$/;"	m	struct:JsonParse	file:
zJson	tsrc/json1.c	/^  char *zJson;               \/* Input JSON *\/$/;"	m	struct:JsonEachCursor	file:
zJson	tsrc/json1.c	/^  const char *zJson; \/* Original JSON string *\/$/;"	m	struct:JsonParse	file:
zKey	ext/fts5/fts5_hash.c	/^  char zKey[8];                   \/* Nul-terminated entry key *\/$/;"	m	struct:Fts5HashEntry	file:
zKey	ext/misc/amatch.c	/^  char *zKey;           \/* Key.  zero-terminated string.  Must be unique *\/$/;"	m	struct:amatch_avl	file:
zKey	fts5.c	/^  char zKey[8];                   \/* Nul-terminated entry key *\/$/;"	m	struct:Fts5HashEntry	file:
zKey	sqlite3.c	/^  char zKey[8];                   \/* Nul-terminated entry key *\/$/;"	m	struct:Fts5HashEntry	file:
zKey	tsrc/fts5.c	/^  char zKey[8];                   \/* Nul-terminated entry key *\/$/;"	m	struct:Fts5HashEntry	file:
zLanguageid	ext/fts3/fts3Int.h	/^  char *zLanguageid;              \/* languageid=xxx option, or NULL *\/$/;"	m	struct:Fts3Table
zLanguageid	sqlite3.c	/^  char *zLanguageid;              \/* languageid=xxx option, or NULL *\/$/;"	m	struct:Fts3Table	file:
zLanguageid	tsrc/fts3Int.h	/^  char *zLanguageid;              \/* languageid=xxx option, or NULL *\/$/;"	m	struct:Fts3Table
zLeTerm	ext/fts5/fts5_vocab.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLeTerm	fts5.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLeTerm	sqlite3.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLeTerm	tsrc/fts5.c	/^  char *zLeTerm;                  \/* (term <= $zLeTerm) paramater, or NULL *\/$/;"	m	struct:Fts5VocabCursor	file:
zLocale	ext/fts2/fts2_icu.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLocale	ext/fts3/fts3_icu.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLocale	sqlite3.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLocale	tsrc/fts2_icu.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLocale	tsrc/fts3_icu.c	/^  char *zLocale;$/;"	m	struct:IcuTokenizer	file:
zLog	mptest/mptest.c	/^  char *zLog;            \/* Name of output log file *\/$/;"	m	struct:Global	file:
zLogName	src/test8.c	/^  char *zLogName;         \/* Name of the log table *\/$/;"	m	struct:echo_vtab	file:
zMagicHeader	sqlite3.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMagicHeader	src/btree.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMagicHeader	tsrc/btree.c	/^static const char zMagicHeader[] = SQLITE_FILE_HEADER;$/;"	v	file:
zMainloop	Makefile	/^	echo "static const char *zMainloop = " >> $@$/;"	m
zMainloop	main.mk	/^	echo "static const char *zMainloop = " >> $@$/;"	m
zMalloc	ext/fts3/fts3_write.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	ext/fts3/fts3_write.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	sqlite3.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	sqlite3.c	/^  char *zMalloc;      \/* Space to hold MEM_Str or MEM_Blob if szMalloc>0 *\/$/;"	m	struct:Mem	file:
zMalloc	src/vdbeInt.h	/^  char *zMalloc;      \/* Space to hold MEM_Str or MEM_Blob if szMalloc>0 *\/$/;"	m	struct:Mem
zMalloc	tsrc/fts3_write.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentNode	file:
zMalloc	tsrc/fts3_write.c	/^  char *zMalloc;                  \/* Malloc'd space (possibly) used for zTerm *\/$/;"	m	struct:SegmentWriter	file:
zMalloc	tsrc/vdbeInt.h	/^  char *zMalloc;      \/* Space to hold MEM_Str or MEM_Blob if szMalloc>0 *\/$/;"	m	struct:Mem
zMask	ext/rbu/sqlite3rbu.c	/^  char *zMask;                    \/* Copy of update mask used with pUpdate *\/$/;"	m	struct:RbuUpdateStmt	file:
zMask	sqlite3.c	/^  char *zMask;                    \/* Copy of update mask used with pUpdate *\/$/;"	m	struct:RbuUpdateStmt	file:
zMask	tsrc/sqlite3rbu.c	/^  char *zMask;                    \/* Copy of update mask used with pUpdate *\/$/;"	m	struct:RbuUpdateStmt	file:
zMatchinfo	ext/fts3/fts3_snippet.c	/^  char *zMatchinfo;$/;"	m	struct:MatchinfoBuffer	file:
zMatchinfo	sqlite3.c	/^  char *zMatchinfo;$/;"	m	struct:MatchinfoBuffer	file:
zMatchinfo	tsrc/fts3_snippet.c	/^  char *zMatchinfo;$/;"	m	struct:MatchinfoBuffer	file:
zMbcsName	src/test_quota.c	/^  char *zMbcsName;        \/* Full MBCS pathname of the file *\/$/;"	m	struct:quota_FILE	file:
zMsg	test/threadtest4.c	/^  char *zMsg;                 \/* Message returned by this thread *\/$/;"	m	struct:WorkerInfo	file:
zNN	test/speedtest1.c	/^  const char *zNN;           \/* Might be NOT NULL *\/$/;"	m	struct:Global	file:
zName	ext/async/sqlite3async.c	/^  char *zName;               \/* Underlying OS filename - used for debugging *\/$/;"	m	struct:AsyncFileData	file:
zName	ext/fts1/fts1.c	/^  const char *zName;               \/* virtual table name *\/$/;"	m	struct:fulltext_vtab	file:
zName	ext/fts1/fts1.c	/^  const char *zName;       \/* Name of the full-text index *\/$/;"	m	struct:TableSpec	file:
zName	ext/fts1/fulltext.c	/^  const char *zName;               \/* virtual table name *\/$/;"	m	struct:fulltext_vtab	file:
zName	ext/fts2/fts2.c	/^  const char *zName;               \/* virtual table name *\/$/;"	m	struct:fulltext_vtab	file:
zName	ext/fts2/fts2.c	/^  const char *zName;       \/* Name of the full-text index *\/$/;"	m	struct:TableSpec	file:
zName	ext/fts3/fts3Int.h	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table
zName	ext/fts5/fts5Int.h	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config
zName	ext/fts5/fts5_config.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zName	ext/fts5/fts5_main.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	ext/misc/vtshim.c	/^  char *zName;                  \/* Name of the module *\/$/;"	m	struct:vtshim_aux	file:
zName	ext/rtree/rtree.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	ext/session/sqlite3session.c	/^  char *zName;                    \/* Local name of table *\/$/;"	m	struct:SessionTable	file:
zName	fts5.c	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config	file:
zName	fts5.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	fts5.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zName	mptest/mptest.c	/^  char zName[32];        \/* Symbolic name of this process *\/$/;"	m	struct:Global	file:
zName	shell.c	/^  char *zName;             \/* Symbolic name for this session *\/$/;"	m	struct:OpenSession	file:
zName	sqlite3.c	/^    char *zName;                    \/* Name of this CTE *\/$/;"	m	struct:With::Cte	file:
zName	sqlite3.c	/^    char *zName;            \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zName	sqlite3.c	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item	file:
zName	sqlite3.c	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item	file:
zName	sqlite3.c	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint	file:
zName	sqlite3.c	/^  char *zName;                    \/* Local name of table *\/$/;"	m	struct:SessionTable	file:
zName	sqlite3.c	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config	file:
zName	sqlite3.c	/^  char *zName;                    \/* Name of table or index *\/$/;"	m	struct:ScanStatus	file:
zName	sqlite3.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	sqlite3.c	/^  char *zName;                    \/* Value of 'name' column *\/$/;"	m	struct:StatCursor	file:
zName	sqlite3.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	sqlite3.c	/^  char *zName;             \/* Name of this index *\/$/;"	m	struct:Index	file:
zName	sqlite3.c	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger	file:
zName	sqlite3.c	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq	file:
zName	sqlite3.c	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table	file:
zName	sqlite3.c	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db	file:
zName	sqlite3.c	/^  char *zName;     \/* Name of this column, \\000, then the type *\/$/;"	m	struct:Column	file:
zName	sqlite3.c	/^  const char *const zName;  \/* Name of pragma *\/$/;"	m	struct:sPragmaNames	file:
zName	sqlite3.c	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module	file:
zName	sqlite3.c	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table	file:
zName	sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:unix_syscall	file:
zName	sqlite3.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:win_syscall	file:
zName	sqlite3.c	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs	file:
zName	sqlite3.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	sqlite3.c	/^  const char *zName;   \/* SQL name of the function. *\/$/;"	m	struct:FuncDef	file:
zName	sqlite3.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zName	sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zName	src/build.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	src/dbstat.c	/^  char *zName;                    \/* Value of 'name' column *\/$/;"	m	struct:StatCursor	file:
zName	src/os_unix.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:unix_syscall	file:
zName	src/os_win.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:win_syscall	file:
zName	src/pragma.h	/^  const char *const zName;  \/* Name of pragma *\/$/;"	m	struct:sPragmaNames
zName	src/shell.c	/^  char *zName;             \/* Symbolic name for this session *\/$/;"	m	struct:OpenSession	file:
zName	src/sqliteInt.h	/^    char *zName;                    \/* Name of this CTE *\/$/;"	m	struct:With::Cte
zName	src/sqliteInt.h	/^    char *zName;            \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item
zName	src/sqliteInt.h	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item
zName	src/sqliteInt.h	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item
zName	src/sqliteInt.h	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint
zName	src/sqliteInt.h	/^  char *zName;             \/* Name of this index *\/$/;"	m	struct:Index
zName	src/sqliteInt.h	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger
zName	src/sqliteInt.h	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq
zName	src/sqliteInt.h	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table
zName	src/sqliteInt.h	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db
zName	src/sqliteInt.h	/^  char *zName;     \/* Name of this column, \\000, then the type *\/$/;"	m	struct:Column
zName	src/sqliteInt.h	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module
zName	src/sqliteInt.h	/^  const char *zName;   \/* SQL name of the function. *\/$/;"	m	struct:FuncDef
zName	src/tclsqlite.c	/^  char *zName;          \/* Name of this function *\/$/;"	m	struct:SqlFunc	file:
zName	src/test6.c	/^  char *zName;$/;"	m	struct:CrashFile	file:
zName	src/test_journal.c	/^  const char *zName;       \/* Name of open file *\/$/;"	m	struct:jt_file	file:
zName	src/test_multiplex.c	/^  char *zName;                     \/* Base filename of this group *\/$/;"	m	struct:multiplexGroup	file:
zName	src/test_onefile.c	/^  const char *zName;$/;"	m	struct:fs_real_file	file:
zName	src/test_syscall.c	/^  const char *zName;$/;"	m	struct:TestSyscallArray	file:
zName	src/test_vfs.c	/^  char *zName;                    \/* Name of this VFS *\/$/;"	m	struct:Testvfs	file:
zName	src/vdbeInt.h	/^  char *zName;                    \/* Name of table or index *\/$/;"	m	struct:ScanStatus
zName	tool/mkkeywordhash.c	/^  char *zName;         \/* The keyword name *\/$/;"	m	struct:Keyword	file:
zName	tsrc/build.c	/^  const char *zName;   \/* Name of the table *\/$/;"	m	struct:TableLock	file:
zName	tsrc/dbstat.c	/^  char *zName;                    \/* Value of 'name' column *\/$/;"	m	struct:StatCursor	file:
zName	tsrc/fts1.c	/^  const char *zName;               \/* virtual table name *\/$/;"	m	struct:fulltext_vtab	file:
zName	tsrc/fts1.c	/^  const char *zName;       \/* Name of the full-text index *\/$/;"	m	struct:TableSpec	file:
zName	tsrc/fts2.c	/^  const char *zName;               \/* virtual table name *\/$/;"	m	struct:fulltext_vtab	file:
zName	tsrc/fts2.c	/^  const char *zName;       \/* Name of the full-text index *\/$/;"	m	struct:TableSpec	file:
zName	tsrc/fts3Int.h	/^  const char *zName;              \/* virtual table name *\/$/;"	m	struct:Fts3Table
zName	tsrc/fts5.c	/^  char *zName;                    \/* Name of FTS index *\/$/;"	m	struct:Fts5Config	file:
zName	tsrc/fts5.c	/^  char *zName;                    \/* Name of tokenizer *\/$/;"	m	struct:Fts5TokenizerModule	file:
zName	tsrc/fts5.c	/^  const char *zName;$/;"	m	struct:Fts5Enum	file:
zName	tsrc/os_unix.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:unix_syscall	file:
zName	tsrc/os_win.c	/^  const char *zName;            \/* Name of the system call *\/$/;"	m	struct:win_syscall	file:
zName	tsrc/pragma.h	/^  const char *const zName;  \/* Name of pragma *\/$/;"	m	struct:sPragmaNames
zName	tsrc/rtree.c	/^  char *zName;                \/* Name of r-tree table *\/ $/;"	m	struct:Rtree	file:
zName	tsrc/shell.c	/^  char *zName;             \/* Symbolic name for this session *\/$/;"	m	struct:OpenSession	file:
zName	tsrc/sqlite3.h	/^  const char *zName;       \/* Name of this virtual file system *\/$/;"	m	struct:sqlite3_vfs
zName	tsrc/sqlite3session.c	/^  char *zName;                    \/* Local name of table *\/$/;"	m	struct:SessionTable	file:
zName	tsrc/sqliteInt.h	/^    char *zName;                    \/* Name of this CTE *\/$/;"	m	struct:With::Cte
zName	tsrc/sqliteInt.h	/^    char *zName;            \/* Token associated with this expression *\/$/;"	m	struct:ExprList::ExprList_item
zName	tsrc/sqliteInt.h	/^    char *zName;      \/* Name of the identifier *\/$/;"	m	struct:IdList::IdList_item
zName	tsrc/sqliteInt.h	/^    char *zName;      \/* Name of the table *\/$/;"	m	struct:SrcList::SrcList_item
zName	tsrc/sqliteInt.h	/^  char *zName;                        \/* Savepoint name (nul-terminated) *\/$/;"	m	struct:Savepoint
zName	tsrc/sqliteInt.h	/^  char *zName;             \/* Name of this index *\/$/;"	m	struct:Index
zName	tsrc/sqliteInt.h	/^  char *zName;            \/* The name of the trigger                        *\/$/;"	m	struct:Trigger
zName	tsrc/sqliteInt.h	/^  char *zName;          \/* Name of the collating sequence, UTF-8 encoded *\/$/;"	m	struct:CollSeq
zName	tsrc/sqliteInt.h	/^  char *zName;         \/* Name of the table or view *\/$/;"	m	struct:Table
zName	tsrc/sqliteInt.h	/^  char *zName;         \/* Name of this database *\/$/;"	m	struct:Db
zName	tsrc/sqliteInt.h	/^  char *zName;     \/* Name of this column, \\000, then the type *\/$/;"	m	struct:Column
zName	tsrc/sqliteInt.h	/^  const char *zName;                   \/* Name passed to create_module() *\/$/;"	m	struct:Module
zName	tsrc/sqliteInt.h	/^  const char *zName;   \/* SQL name of the function. *\/$/;"	m	struct:FuncDef
zName	tsrc/tclsqlite.c	/^  char *zName;          \/* Name of this function *\/$/;"	m	struct:SqlFunc	file:
zName	tsrc/vdbeInt.h	/^  char *zName;                    \/* Name of table or index *\/$/;"	m	struct:ScanStatus
zNeededCollation	src/test1.c	/^static char zNeededCollation[200];$/;"	v	file:
zNull	src/tclsqlite.c	/^  char *zNull;               \/* Text to substitute for an SQL NULL value *\/$/;"	m	struct:SqliteDb	file:
zNull	tsrc/tclsqlite.c	/^  char *zNull;               \/* Text to substitute for an SQL NULL value *\/$/;"	m	struct:SqliteDb	file:
zOffset	ext/fts1/fts1.c	/^  char *zOffset;  \/* Text rendering of aMatch[] *\/$/;"	m	struct:Snippet	file:
zOffset	ext/fts2/fts2.c	/^  char *zOffset;  \/* Text rendering of aMatch[] *\/$/;"	m	struct:Snippet	file:
zOffset	tsrc/fts1.c	/^  char *zOffset;  \/* Text rendering of aMatch[] *\/$/;"	m	struct:Snippet	file:
zOffset	tsrc/fts2.c	/^  char *zOffset;  \/* Text rendering of aMatch[] *\/$/;"	m	struct:Snippet	file:
zOpen	ext/fts5/fts5_aux.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOpen	fts5.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOpen	sqlite3.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOpen	tsrc/fts5.c	/^  const char *zOpen;              \/* Opening highlight *\/$/;"	m	struct:HighlightContext	file:
zOptions	shell.c	/^static const char zOptions[] =$/;"	v	file:
zOptions	src/shell.c	/^static const char zOptions[] =$/;"	v	file:
zOptions	tsrc/shell.c	/^static const char zOptions[] =$/;"	v	file:
zOrigName	tool/mkkeywordhash.c	/^  char zOrigName[20];  \/* Original keyword name before processing *\/$/;"	m	struct:Keyword	file:
zOut	ext/fts5/fts5_aux.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOut	fts5.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOut	sqlite3.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOut	src/test_server.c	/^  const char *zOut;            \/* Tail of the SQL statement *\/$/;"	m	struct:SqlMessage	file:
zOut	tsrc/fts5.c	/^  char *zOut;                     \/* Output value *\/$/;"	m	struct:HighlightContext	file:
zOutput	ext/fts5/fts5_tokenize.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zOutput	fts5.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zOutput	sqlite3.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zOutput	tsrc/fts5.c	/^  const char *zOutput;$/;"	m	struct:PorterRule	file:
zPK	test/speedtest1.c	/^  const char *zPK;           \/* Might be UNIQUE or PRIMARY KEY *\/$/;"	m	struct:Global	file:
zPageUse	tool/showdb.c	/^static char **zPageUse;$/;"	v	file:
zPagetype	sqlite3.c	/^  char *zPagetype;                \/* Value of 'pagetype' column *\/$/;"	m	struct:StatCursor	file:
zPagetype	src/dbstat.c	/^  char *zPagetype;                \/* Value of 'pagetype' column *\/$/;"	m	struct:StatCursor	file:
zPagetype	tsrc/dbstat.c	/^  char *zPagetype;                \/* Value of 'pagetype' column *\/$/;"	m	struct:StatCursor	file:
zParentColumn	ext/misc/closure.c	/^  char *zParentColumn;       \/* Name of PARENT column in zTableName *\/$/;"	m	struct:closure_cursor	file:
zParentColumn	ext/misc/closure.c	/^  char *zParentColumn;       \/* Name of PARENT column in zTableName *\/$/;"	m	struct:closure_vtab	file:
zPath	sqlite3.c	/^  char *zPath;                    \/* Path to this page *\/$/;"	m	struct:StatPage	file:
zPath	sqlite3.c	/^  char *zPath;                    \/* Value of 'path' column *\/$/;"	m	struct:StatCursor	file:
zPath	sqlite3.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	sqlite3.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPath	src/dbstat.c	/^  char *zPath;                    \/* Path to this page *\/$/;"	m	struct:StatPage	file:
zPath	src/dbstat.c	/^  char *zPath;                    \/* Value of 'path' column *\/$/;"	m	struct:StatCursor	file:
zPath	src/os_unix.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	src/os_win.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPath	tsrc/dbstat.c	/^  char *zPath;                    \/* Path to this page *\/$/;"	m	struct:StatPage	file:
zPath	tsrc/dbstat.c	/^  char *zPath;                    \/* Value of 'path' column *\/$/;"	m	struct:StatCursor	file:
zPath	tsrc/os_unix.c	/^  const char *zPath;                  \/* Name of the file *\/$/;"	m	struct:unixFile	file:
zPath	tsrc/os_win.c	/^  const char *zPath;      \/* Full pathname of this file *\/$/;"	m	struct:winFile	file:
zPattern	ext/misc/spellfix.c	/^  char *zPattern;              \/* rhs of MATCH clause *\/$/;"	m	struct:spellfix1_cursor	file:
zPattern	ext/misc/spellfix.c	/^  const char *zPattern;            \/* Transliterated input string *\/$/;"	m	struct:MatchQuery	file:
zPattern	src/test_quota.c	/^  const char *zPattern;          \/* Filename pattern to be quotaed *\/$/;"	m	struct:quotaGroup	file:
zPfx	sqlite3.c	/^  const char *zPfx; \/* Error message prefix *\/$/;"	m	struct:IntegrityCk	file:
zPfx	src/btreeInt.h	/^  const char *zPfx; \/* Error message prefix *\/$/;"	m	struct:IntegrityCk
zPfx	tsrc/btreeInt.h	/^  const char *zPfx; \/* Error message prefix *\/$/;"	m	struct:IntegrityCk
zPool	sqlite3.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zPool	src/mem5.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zPool	tsrc/mem5.c	/^  u8 *zPool;       \/* Memory available to be allocated *\/$/;"	m	struct:Mem5Global	file:
zPrefix	ext/misc/nextchar.c	/^  const unsigned char *zPrefix;     \/* Prefix to scan *\/$/;"	m	struct:nextCharContext	file:
zPrefix	src/test_sqllog.c	/^  char zPrefix[SQLLOG_NAMESZ];    \/* Prefix for all created files *\/$/;"	m	struct:SLGlobal	file:
zProfile	src/tclsqlite.c	/^  char *zProfile;            \/* The profile callback routine *\/$/;"	m	struct:SqliteDb	file:
zProfile	tsrc/tclsqlite.c	/^  char *zProfile;            \/* The profile callback routine *\/$/;"	m	struct:SqliteDb	file:
zProgress	src/tclsqlite.c	/^  char *zProgress;           \/* The progress callback routine *\/$/;"	m	struct:SqliteDb	file:
zProgress	tsrc/tclsqlite.c	/^  char *zProgress;           \/* The progress callback routine *\/$/;"	m	struct:SqliteDb	file:
zRank	ext/fts5/fts5Int.h	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config
zRank	ext/fts5/fts5_main.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	fts5.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	fts5.c	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config	file:
zRank	sqlite3.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	sqlite3.c	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config	file:
zRank	tsrc/fts5.c	/^  char *zRank;                    \/* Custom rank function *\/$/;"	m	struct:Fts5Cursor	file:
zRank	tsrc/fts5.c	/^  char *zRank;                    \/* Name of rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	ext/fts5/fts5Int.h	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config
zRankArgs	ext/fts5/fts5_main.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRankArgs	fts5.c	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	fts5.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRankArgs	sqlite3.c	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	sqlite3.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRankArgs	tsrc/fts5.c	/^  char *zRankArgs;                \/* Arguments to rank function *\/$/;"	m	struct:Fts5Config	file:
zRankArgs	tsrc/fts5.c	/^  char *zRankArgs;                \/* Custom rank function args *\/$/;"	m	struct:Fts5Cursor	file:
zRbu	ext/rbu/sqlite3rbu.c	/^  char *zRbu;                     \/* Path to rbu db *\/$/;"	m	struct:sqlite3rbu	file:
zRbu	sqlite3.c	/^  char *zRbu;                     \/* Path to rbu db *\/$/;"	m	struct:sqlite3rbu	file:
zRbu	tsrc/sqlite3rbu.c	/^  char *zRbu;                     \/* Path to rbu db *\/$/;"	m	struct:sqlite3rbu	file:
zReadExprlist	ext/fts3/fts3Int.h	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table
zReadExprlist	sqlite3.c	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table	file:
zReadExprlist	tsrc/fts3Int.h	/^  char *zReadExprlist;$/;"	m	struct:Fts3Table
zReply	tool/rollback-test.c	/^static char zReply[1000];$/;"	v	file:
zResult	test/speedtest1.c	/^  char zResult[3000];        \/* Text of the current result *\/$/;"	m	struct:Global	file:
zRoot	ext/misc/json1.c	/^  char *zRoot;               \/* Path by which to filter zJson *\/$/;"	m	struct:JsonEachCursor	file:
zRoot	sqlite3.c	/^  char *zRoot;               \/* Path by which to filter zJson *\/$/;"	m	struct:JsonEachCursor	file:
zRoot	tsrc/json1.c	/^  char *zRoot;               \/* Path by which to filter zJson *\/$/;"	m	struct:JsonEachCursor	file:
zScript	src/tclsqlite.c	/^  char *zScript;        \/* The script to be run *\/$/;"	m	struct:SqlCollate	file:
zScript	src/test_thread.c	/^  char *zScript;           \/* The script to execute. *\/$/;"	m	struct:EvalEvent	file:
zScript	src/test_thread.c	/^  char *zScript;           \/* The script to execute. *\/$/;"	m	struct:SqlThread	file:
zScript	tsrc/tclsqlite.c	/^  char *zScript;        \/* The script to be run *\/$/;"	m	struct:SqlCollate	file:
zSegmentsTbl	ext/fts3/fts3Int.h	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table
zSegmentsTbl	sqlite3.c	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table	file:
zSegmentsTbl	tsrc/fts3Int.h	/^  char *zSegmentsTbl;             \/* Name of %_segments table *\/$/;"	m	struct:Fts3Table
zSelName	sqlite3.c	/^  char zSelName[12];     \/* Symbolic name of this SELECT use for debugging *\/$/;"	m	struct:Select	file:
zSelName	src/sqliteInt.h	/^  char zSelName[12];     \/* Symbolic name of this SELECT use for debugging *\/$/;"	m	struct:Select
zSelName	tsrc/sqliteInt.h	/^  char zSelName[12];     \/* Symbolic name of this SELECT use for debugging *\/$/;"	m	struct:Select
zSelf	ext/misc/amatch.c	/^  char *zSelf;               \/* Name of this virtual table *\/$/;"	m	struct:amatch_vtab	file:
zSelf	ext/misc/closure.c	/^  char *zSelf;               \/* Name of this virtual table *\/$/;"	m	struct:closure_vtab	file:
zSep	ext/misc/eval.c	/^  const char *zSep;      \/* Separator *\/$/;"	m	struct:EvalResult	file:
zSep	tool/fuzzershell.c	/^  const char *zSep;      \/* Separator *\/$/;"	m	struct:EvalResult	file:
zShellStatic	shell.c	/^static const char *zShellStatic = 0;$/;"	v	file:
zShellStatic	src/shell.c	/^static const char *zShellStatic = 0;$/;"	v	file:
zShellStatic	tsrc/shell.c	/^static const char *zShellStatic = 0;$/;"	v	file:
zSnippet	ext/fts1/fts1.c	/^  char *zSnippet; \/* Snippet text *\/$/;"	m	struct:Snippet	file:
zSnippet	ext/fts2/fts2.c	/^  char *zSnippet; \/* Snippet text *\/$/;"	m	struct:Snippet	file:
zSnippet	tsrc/fts1.c	/^  char *zSnippet; \/* Snippet text *\/$/;"	m	struct:Snippet	file:
zSnippet	tsrc/fts2.c	/^  char *zSnippet; \/* Snippet text *\/$/;"	m	struct:Snippet	file:
zSpace	ext/misc/json1.c	/^  char zSpace[100];        \/* Initial static space *\/$/;"	m	struct:JsonString	file:
zSpace	sqlite3.c	/^  char zSpace[100];        \/* Initial static space *\/$/;"	m	struct:JsonString	file:
zSpace	tsrc/json1.c	/^  char zSpace[100];        \/* Initial static space *\/$/;"	m	struct:JsonString	file:
zSpan	sqlite3.c	/^    char *zSpan;            \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item	file:
zSpan	src/sqliteInt.h	/^    char *zSpan;            \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item
zSpan	tsrc/sqliteInt.h	/^    char *zSpan;            \/* Original text of the expression *\/$/;"	m	struct:ExprList::ExprList_item
zSql	sqlite3.c	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe	file:
zSql	src/tclsqlite.c	/^  const char *zSql;               \/* Remaining SQL to execute *\/$/;"	m	struct:DbEvalContext	file:
zSql	src/tclsqlite.c	/^  const char *zSql;        \/* Text of the SQL statement *\/$/;"	m	struct:SqlPreparedStmt	file:
zSql	src/vdbeInt.h	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe
zSql	tsrc/tclsqlite.c	/^  const char *zSql;               \/* Remaining SQL to execute *\/$/;"	m	struct:DbEvalContext	file:
zSql	tsrc/tclsqlite.c	/^  const char *zSql;        \/* Text of the SQL statement *\/$/;"	m	struct:SqlPreparedStmt	file:
zSql	tsrc/vdbeInt.h	/^  char *zSql;             \/* Text of the SQL statement that generated this *\/$/;"	m	struct:Vdbe
zSrcFile	ext/misc/scrub.c	/^  const char *zSrcFile;    \/* Name of the source file *\/$/;"	m	struct:ScrubState	file:
zStart	sqlite3.c	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan	file:
zStart	src/sqliteInt.h	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan
zStart	tsrc/sqliteInt.h	/^  const char *zStart;   \/* First character of input text *\/$/;"	m	struct:ExprSpan
zState	ext/rbu/sqlite3rbu.c	/^  char *zState;                   \/* Path to state db (or NULL if zRbu) *\/$/;"	m	struct:sqlite3rbu	file:
zState	sqlite3.c	/^  char *zState;                   \/* Path to state db (or NULL if zRbu) *\/$/;"	m	struct:sqlite3rbu	file:
zState	tsrc/sqlite3rbu.c	/^  char *zState;                   \/* Path to state db (or NULL if zRbu) *\/$/;"	m	struct:sqlite3rbu	file:
zStateDb	ext/rbu/sqlite3rbu.c	/^  char zStateDb[5];               \/* Db name for state ("stat" or "main") *\/$/;"	m	struct:sqlite3rbu	file:
zStateDb	sqlite3.c	/^  char zStateDb[5];               \/* Db name for state ("stat" or "main") *\/$/;"	m	struct:sqlite3rbu	file:
zStateDb	tsrc/sqlite3rbu.c	/^  char zStateDb[5];               \/* Db name for state ("stat" or "main") *\/$/;"	m	struct:sqlite3rbu	file:
zStaticErr	src/test4.c	/^  char *zStaticErr;     \/* Static error message *\/$/;"	m	struct:Thread	file:
zStaticErr	src/test7.c	/^  char *zStaticErr;        \/* Static error message *\/$/;"	m	struct:Thread	file:
zStop	ext/fts3/fts3_aux.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zStop	sqlite3.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zStop	tsrc/fts3_aux.c	/^  char *zStop;$/;"	m	struct:Fts3auxCursor	file:
zSuffix	ext/fts5/fts5_tokenize.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zSuffix	fts5.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zSuffix	sqlite3.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zSuffix	tsrc/fts5.c	/^  const char *zSuffix;$/;"	m	struct:PorterRule	file:
zTab	ext/session/sqlite3session.c	/^  char *zTab;                     \/* Current table *\/$/;"	m	struct:sqlite3_changeset_iter	file:
zTab	sqlite3.c	/^  char *zTab;                     \/* Current table *\/$/;"	m	struct:sqlite3_changeset_iter	file:
zTab	tsrc/sqlite3session.c	/^  char *zTab;                     \/* Current table *\/$/;"	m	struct:sqlite3_changeset_iter	file:
zTableName	ext/misc/closure.c	/^  char *zTableName;          \/* Name of table holding parent\/child relation *\/$/;"	m	struct:closure_cursor	file:
zTableName	ext/misc/closure.c	/^  char *zTableName;          \/* Name of table holding parent\/child relation *\/$/;"	m	struct:closure_vtab	file:
zTableName	ext/misc/spellfix.c	/^  char *zTableName;          \/* Name of the virtual table *\/$/;"	m	struct:spellfix1_vtab	file:
zTableName	src/test8.c	/^  char *zTableName;       \/* Name of the real table *\/$/;"	m	struct:echo_vtab	file:
zTag	test/wordcount.c	/^char *zTag = "--";$/;"	v
zTail	sqlite3.c	/^  const char *zTail;        \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse	file:
zTail	src/sqliteInt.h	/^  const char *zTail;        \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse
zTail	tsrc/sqliteInt.h	/^  const char *zTail;        \/* All SQL text past the last semicolon parsed *\/$/;"	m	struct:Parse
zTarget	ext/rbu/sqlite3rbu.c	/^  char *zTarget;                  \/* Path to target db *\/$/;"	m	struct:sqlite3rbu	file:
zTarget	sqlite3.c	/^  char *zTarget;                  \/* Path to target db *\/$/;"	m	struct:sqlite3rbu	file:
zTarget	sqlite3.c	/^  char *zTarget;       \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep	file:
zTarget	src/sqliteInt.h	/^  char *zTarget;       \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep
zTarget	tsrc/sqlite3rbu.c	/^  char *zTarget;                  \/* Path to target db *\/$/;"	m	struct:sqlite3rbu	file:
zTarget	tsrc/sqliteInt.h	/^  char *zTarget;       \/* Target table for DELETE, UPDATE, INSERT *\/$/;"	m	struct:TriggerStep
zTbl	ext/rbu/sqlite3rbu.c	/^  char *zTbl;$/;"	m	struct:RbuState	file:
zTbl	ext/rbu/sqlite3rbu.c	/^  const char *zTbl;               \/* Name of target db table *\/$/;"	m	struct:RbuObjIter	file:
zTbl	sqlite3.c	/^  char *zTbl;$/;"	m	struct:RbuState	file:
zTbl	sqlite3.c	/^  const char *zTbl;               \/* Name of target db table *\/$/;"	m	struct:RbuObjIter	file:
zTbl	src/test_fs.c	/^  char *zTbl;                     \/* Name of docid->file map table *\/$/;"	m	struct:fs_vtab	file:
zTbl	tsrc/sqlite3rbu.c	/^  char *zTbl;$/;"	m	struct:RbuState	file:
zTbl	tsrc/sqlite3rbu.c	/^  const char *zTbl;               \/* Name of target db table *\/$/;"	m	struct:RbuObjIter	file:
zTerm	ext/fts1/fulltext.c	/^  const char *zTerm;$/;"	m	struct:QueryTerm	file:
zTerm	ext/fts3/fts3Int.h	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader
zTerm	ext/fts3/fts3Int.h	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter
zTerm	ext/fts3/fts3_write.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	ext/fts3/fts3_write.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	ext/fts3/fts3_write.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	ext/fts5/fts5_expr.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTerm	fts5.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTerm	sqlite3.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	sqlite3.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	sqlite3.c	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader	file:
zTerm	sqlite3.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTerm	sqlite3.c	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter	file:
zTerm	tsrc/fts3Int.h	/^  char *zTerm;                    \/* Pointer to term buffer *\/$/;"	m	struct:Fts3MultiSegReader
zTerm	tsrc/fts3Int.h	/^  const char *zTerm;$/;"	m	struct:Fts3SegFilter
zTerm	tsrc/fts3_write.c	/^  char *zTerm;                    \/* Pointer to current term *\/$/;"	m	struct:Fts3SegReader	file:
zTerm	tsrc/fts3_write.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentNode	file:
zTerm	tsrc/fts3_write.c	/^  char *zTerm;                    \/* Pointer to previous term buffer *\/$/;"	m	struct:SegmentWriter	file:
zTerm	tsrc/fts5.c	/^  char *zTerm;                    \/* nul-terminated term *\/$/;"	m	struct:Fts5ExprTerm	file:
zTestName	test/fuzzcheck.c	/^  char zTestName[100];             \/* Name of current test *\/$/;"	m	struct:GlobalVars	file:
zTestName	tool/fuzzershell.c	/^  char zTestName[100];             \/* Name of current test *\/$/;"	m	struct:GlobalVars	file:
zText	sqlite3.c	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum	file:
zText	src/sqliteInt.h	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum
zText	tsrc/sqliteInt.h	/^  char *zText;         \/* The string collected so far *\/$/;"	m	struct:StrAccum
zThis	src/test8.c	/^  char *zThis;            \/* Name of the echo table *\/$/;"	m	struct:echo_vtab	file:
zTitle	sqlite3.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon89	file:
zTitle	src/mem2.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon63	file:
zTitle	tsrc/mem2.c	/^  char zTitle[100];  \/* The title text *\/$/;"	m	struct:__anon30	file:
zTo	ext/misc/amatch.c	/^  char zTo[4];             \/* Tranform to V.W value (extra space appended) *\/$/;"	m	struct:amatch_rule	file:
zTo	ext/misc/fuzzer.c	/^  char zTo[4];                \/* Transform to (extra space appended) *\/$/;"	m	struct:fuzzer_rule	file:
zTo	sqlite3.c	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey	file:
zTo	src/sqliteInt.h	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey
zTo	tsrc/sqliteInt.h	/^  char *zTo;        \/* Name of table that the key points to (aka: Parent) *\/$/;"	m	struct:FKey
zToken	ext/fts1/fts1_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	ext/fts1/simple_tokenizer.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:simple_tokenizer_cursor	file:
zToken	ext/fts2/fts2_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	ext/fts3/fts3_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	ext/fts3/fts3_tokenize_vtab.c	/^  const char *zToken;             \/* Current 'token' value *\/$/;"	m	struct:Fts3tokCursor	file:
zToken	ext/fts3/fts3_unicode.c	/^  char *zToken;                   \/* storage for current token *\/$/;"	m	struct:unicode_cursor	file:
zToken	ext/fts5/fts5_test_tok.c	/^  char *zToken;$/;"	m	struct:Fts5tokRow	file:
zToken	sqlite3.c	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon80	file:
zToken	sqlite3.c	/^  char *zToken;                   \/* storage for current token *\/$/;"	m	struct:unicode_cursor	file:
zToken	sqlite3.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	sqlite3.c	/^  const char *zToken;             \/* Current 'token' value *\/$/;"	m	struct:Fts3tokCursor	file:
zToken	src/sqliteInt.h	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon54
zToken	tsrc/fts1_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	tsrc/fts2_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	tsrc/fts3_porter.c	/^  char *zToken;                \/* storage for current token *\/$/;"	m	struct:porter_tokenizer_cursor	file:
zToken	tsrc/fts3_tokenize_vtab.c	/^  const char *zToken;             \/* Current 'token' value *\/$/;"	m	struct:Fts3tokCursor	file:
zToken	tsrc/fts3_unicode.c	/^  char *zToken;                   \/* storage for current token *\/$/;"	m	struct:unicode_cursor	file:
zToken	tsrc/sqliteInt.h	/^    char *zToken;          \/* Token value. Zero terminated and dequoted *\/$/;"	m	union:Expr::__anon22
zTokenType	tool/mkkeywordhash.c	/^  char *zTokenType;    \/* Token value for this keyword *\/$/;"	m	struct:Keyword	file:
zTrace	src/tclsqlite.c	/^  char *zTrace;              \/* The trace callback routine *\/$/;"	m	struct:SqliteDb	file:
zTrace	tsrc/tclsqlite.c	/^  char *zTrace;              \/* The trace callback routine *\/$/;"	m	struct:SqliteDb	file:
zTraceV2	src/tclsqlite.c	/^  char *zTraceV2;            \/* The trace_v2 callback routine *\/$/;"	m	struct:SqliteDb	file:
zTraceV2	tsrc/tclsqlite.c	/^  char *zTraceV2;            \/* The trace_v2 callback routine *\/$/;"	m	struct:SqliteDb	file:
zTransient	src/test_osinst.c	/^  char *zTransient;               \/* Transient 'file' string *\/$/;"	m	struct:VfslogCsr	file:
zType	sqlite3.c	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer	file:
zType	src/sqliteInt.h	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer
zType	tsrc/sqliteInt.h	/^  const char *zType;  \/* Type of the container - used for error messages *\/$/;"	m	struct:DbFixer
zVarname	src/test_thread.c	/^  char *zVarname;          \/* Varname in parent script *\/$/;"	m	struct:SqlThread	file:
zVfs	mptest/mptest.c	/^  const char *zVfs;      \/* Name of VFS to use. Often NULL meaning "default" *\/$/;"	m	struct:Global	file:
zVfs	shell.c	/^  const char *zVfs;           \/* Name of VFS to use *\/$/;"	m	struct:ShellState	file:
zVfs	src/shell.c	/^  const char *zVfs;           \/* Name of VFS to use *\/$/;"	m	struct:ShellState	file:
zVfs	tsrc/shell.c	/^  const char *zVfs;           \/* Name of VFS to use *\/$/;"	m	struct:ShellState	file:
zVfsName	ext/rbu/sqlite3rbu.c	/^  const char *zVfsName;           \/* Name of automatically created rbu vfs *\/$/;"	m	struct:sqlite3rbu	file:
zVfsName	sqlite3.c	/^  const char *zVfsName;           \/* Name of automatically created rbu vfs *\/$/;"	m	struct:sqlite3rbu	file:
zVfsName	src/test_vfstrace.c	/^  const char *zVfsName;               \/* Name of this trace-VFS *\/$/;"	m	struct:vfstrace_info	file:
zVfsName	tsrc/sqlite3rbu.c	/^  const char *zVfsName;           \/* Name of automatically created rbu vfs *\/$/;"	m	struct:sqlite3rbu	file:
zVocabLang	ext/misc/amatch.c	/^  char *zVocabLang;          \/* Name of vocabulary table language column *\/$/;"	m	struct:amatch_vtab	file:
zVocabTab	ext/misc/amatch.c	/^  char *zVocabTab;           \/* Name of vocabulary table *\/$/;"	m	struct:amatch_vtab	file:
zVocabWord	ext/misc/amatch.c	/^  char *zVocabWord;          \/* Name of vocabulary table word column *\/$/;"	m	struct:amatch_vtab	file:
zWR	test/speedtest1.c	/^  const char *zWR;           \/* Might be WITHOUT ROWID *\/$/;"	m	struct:Global	file:
zWal	ext/rbu/sqlite3rbu.c	/^  const char *zWal;               \/* Wal filename for this main db file *\/$/;"	m	struct:rbu_file	file:
zWal	sqlite3.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWal	sqlite3.c	/^  const char *zWal;               \/* Wal filename for this main db file *\/$/;"	m	struct:rbu_file	file:
zWal	src/pager.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWal	tsrc/pager.c	/^  char *zWal;                 \/* File name for write-ahead log *\/$/;"	m	struct:Pager	file:
zWal	tsrc/sqlite3rbu.c	/^  const char *zWal;               \/* Wal filename for this main db file *\/$/;"	m	struct:rbu_file	file:
zWalName	sqlite3.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWalName	src/wal.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWalName	tsrc/wal.c	/^  const char *zWalName;      \/* Name of WAL file *\/$/;"	m	struct:Wal	file:
zWord	ext/misc/amatch.c	/^  char zWord[4];        \/* Text of the word.  Extra space appended as needed *\/$/;"	m	struct:amatch_word	file:
zWord	ext/misc/spellfix.c	/^    char *zWord;                  \/* Text for this row *\/$/;"	m	struct:spellfix1_cursor::spellfix1_row	file:
zWriteExprlist	ext/fts3/fts3Int.h	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table
zWriteExprlist	sqlite3.c	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table	file:
zWriteExprlist	tsrc/fts3Int.h	/^  char *zWriteExprlist;$/;"	m	struct:Fts3Table
zeroJournalHdr	sqlite3.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroJournalHdr	src/pager.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroJournalHdr	tsrc/pager.c	/^static int zeroJournalHdr(Pager *pPager, int doTruncate){$/;"	f	file:
zeroPage	sqlite3.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroPage	src/btree.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroPage	tsrc/btree.c	/^static void zeroPage(MemPage *pPage, int flags){$/;"	f	file:
zeroblobFunc	sqlite3.c	/^static void zeroblobFunc($/;"	f	file:
zeroblobFunc	src/func.c	/^static void zeroblobFunc($/;"	f	file:
zeroblobFunc	tsrc/func.c	/^static void zeroblobFunc($/;"	f	file:
